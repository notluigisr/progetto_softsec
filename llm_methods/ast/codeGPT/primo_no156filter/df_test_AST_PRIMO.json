{"func":{"20641":"`-FunctionDecl 0x153885a98  line:1:36 get_dirent_tail 'struct ext4_dir_entry_tail *(struct inode *, struct ext4_dir_entry *)' static   |-ParmVarDecl 0x15386bae8 <col:52, col:66> col:66 used inode 'struct inode *'   |-ParmVarDecl 0x1538858c8 <line:2:10, col:33> col:33 used de 'struct ext4_dir_entry *'   `-CompoundStmt 0x1538863d8 <line:3:1, line:32:1>     |-DeclStmt 0x153885c90 <line:4:2, col:31>     | `-VarDecl 0x153885c28 <col:2, col:30> col:30 used t 'struct ext4_dir_entry_tail *'     |-BinaryOperator 0x153885fe8 <line:22:2, col:55> 'struct ext4_dir_entry_tail *' contains-errors '='     | |-DeclRefExpr 0x153885ca8 <col:2> 'struct ext4_dir_entry_tail *' lvalue Var 0x153885c28 't' 'struct ext4_dir_entry_tail *'     | `-CallExpr 0x153885fb8 <col:6, col:55> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x153885df0 <col:6> 'int ()' Function 0x153885d38 'EXT4_DIRENT_TAIL' 'int ()'     |   |-DeclRefExpr 0x153885e10 <col:23> 'struct ext4_dir_entry *' lvalue ParmVar 0x1538858c8 'de' 'struct ext4_dir_entry *'     |   `-CallExpr 0x153885f90 <col:27, col:54> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x153885f10 <col:27> 'int ()' Function 0x153885e58 'EXT4_BLOCK_SIZE' 'int ()'     |     `-RecoveryExpr 0x153885f68 <col:43, col:50> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x153885f30 <col:43> 'struct inode *' lvalue ParmVar 0x15386bae8 'inode' 'struct inode *'     |-IfStmt 0x153886370 <line:25:2, line:29:10>     | |-RecoveryExpr 0x153886308 <line:25:6, line:28:28> '_Bool' contains-errors     | `-ReturnStmt 0x153886360 <line:29:3, col:10>     |   `-RecoveryExpr 0x153886340 <col:10> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1538863c8 <line:31:2, col:9>       `-ImplicitCastExpr 0x1538863b0 <col:9> 'struct ext4_dir_entry_tail *' <LValueToRValue>         `-DeclRefExpr 0x153886390 <col:9> 'struct ext4_dir_entry_tail *' lvalue Var 0x153885c28 't' 'struct ext4_dir_entry_tail *' ","20419":"`-FunctionDecl 0x139128348  line:1:1 invalid get_visual_text 'int (int *, char **, int *)'   |-ParmVarDecl 0x139128128 <line:2:5, col:15> col:15 invalid cap 'int *'   |-ParmVarDecl 0x1391281d8 <line:3:5, col:14> col:14 used pp 'char **'   |-ParmVarDecl 0x139128258 <line:4:5, col:11> col:11 used lenp 'int *'   `-CompoundStmt 0x139809d10 <line:5:1, line:37:1>     |-IfStmt 0x139128678 <line:6:5, line:7:19>     | |-BinaryOperator 0x139128478 <line:6:9, col:24> 'int' contains-errors '!='     | | |-RecoveryExpr 0x139128458 <col:9> '<dependent type>' contains-errors lvalue     | | `-CharacterLiteral 0x139128420 <col:24> 'int' 86     | `-CallExpr 0x139128658 <line:7:2, col:19> 'int'     |   `-ImplicitCastExpr 0x139128640 <col:2> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x1391285f0 <col:2> 'int ()' Function 0x139128538 'unadjust_for_sel' 'int ()'     |-IfStmt 0x139141bc8 <line:8:5, line:13:5>     | |-BinaryOperator 0x1391418f8 <line:8:9, col:41> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x139141800 <col:9, col:16> '<dependent type>' contains-errors lvalue .lnum     | | | `-RecoveryExpr 0x1391287c0 <col:9> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x1391418b0 <col:24, col:41> '<dependent type>' contains-errors lvalue .lnum     | |   `-CXXDependentScopeMemberExpr 0x139141868 <col:24, col:32> '<dependent type>' contains-errors lvalue ->w_cursor     | |     `-RecoveryExpr 0x139141848 <col:24> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x139141ba8 <line:9:5, line:13:5>     |   |-IfStmt 0x139141b40 <line:10:2, line:11:26>     |   | |-BinaryOperator 0x139141990 <line:10:6, col:13> 'int' contains-errors '!='     |   | | |-RecoveryExpr 0x139141918 <col:6> '<dependent type>' contains-errors lvalue     |   | | `-RecoveryExpr 0x139141970 <col:13> '<dependent type>' contains-errors lvalue     |   | `-CallExpr 0x139141b18 <line:11:6, col:26> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x139141a90 <col:6> 'int ()' Function 0x1391419d8 'clearopbeep' 'int ()'     |   |   `-CXXDependentScopeMemberExpr 0x139141ad0 <col:18, col:23> '<dependent type>' contains-errors lvalue ->oap     |   |     `-RecoveryExpr 0x139141ab0 <col:18> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x139141b98 <line:12:2, col:9>     |     `-RecoveryExpr 0x139141b78 <col:9> '<dependent type>' contains-errors lvalue     |-IfStmt 0x139809ba8 <line:14:5, line:34:5> has_else     | |-BinaryOperator 0x139141c58 <line:14:9, col:24> 'int' contains-errors '=='     | | |-RecoveryExpr 0x139141c38 <col:9> '<dependent type>' contains-errors lvalue     | | `-CharacterLiteral 0x139141c00 <col:24> 'int' 86     | |-CompoundStmt 0x1391424b8 <line:15:5, line:18:5>     | | |-BinaryOperator 0x139142240 <line:16:2, col:23> 'char *' '='     | | | |-UnaryOperator 0x139141cb0 <col:2, col:3> 'char *' lvalue prefix '*' cannot overflow     | | | | `-ImplicitCastExpr 0x139141c98 <col:3> 'char **' <LValueToRValue>     | | | |   `-DeclRefExpr 0x139141c78 <col:3> 'char **' lvalue ParmVar 0x1391281d8 'pp' 'char **'     | | | `-ImplicitCastExpr 0x139141e00 <col:8, col:23> 'char *' <IntegralToPointer>     | | |   `-CallExpr 0x139141de0 <col:8, col:23> 'int'     | | |     `-ImplicitCastExpr 0x139141dc8 <col:8> 'int (*)()' <FunctionToPointerDecay>     | | |       `-DeclRefExpr 0x139141da8 <col:8> 'int ()' Function 0x139141cf0 'ml_get_curline' 'int ()'     | | `-BinaryOperator 0x139142498 <line:17:2, col:25> 'int' '='     | |   |-UnaryOperator 0x139142298 <col:2, col:3> 'int' lvalue prefix '*' cannot overflow     | |   | `-ImplicitCastExpr 0x139142280 <col:3> 'int *' <LValueToRValue>     | |   |   `-DeclRefExpr 0x139142260 <col:3> 'int *' lvalue ParmVar 0x139128258 'lenp' 'int *'     | |   `-CStyleCastExpr 0x139142470 <col:10, col:25> 'int' <NoOp>     | |     `-CallExpr 0x139142418 <col:15, col:25> 'int'     | |       |-ImplicitCastExpr 0x139142400 <col:15> 'int (*)()' <FunctionToPointerDecay>     | |       | `-DeclRefExpr 0x139142390 <col:15> 'int ()' Function 0x1391422d8 'STRLEN' 'int ()'     | |       `-ImplicitCastExpr 0x139142440 <col:22, col:23> 'char *' <LValueToRValue>     | |         `-UnaryOperator 0x1391423e8 <col:22, col:23> 'char *' lvalue prefix '*' cannot overflow     | |           `-ImplicitCastExpr 0x1391423d0 <col:23> 'char **' <LValueToRValue>     | |             `-DeclRefExpr 0x1391423b0 <col:23> 'char **' lvalue ParmVar 0x1391281d8 'pp' 'char **'     | `-CompoundStmt 0x139809b90 <line:20:5, line:34:5>     |   `-IfStmt 0x139809980 <line:21:2, line:30:2> has_else     |     |-CallExpr 0x139142708 <line:21:6, col:37> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x1391425b8 <col:6> 'int ()' Function 0x139142500 'LT_POS' 'int ()'     |     | |-CXXDependentScopeMemberExpr 0x1391426a0 <col:13, col:21> '<dependent type>' contains-errors lvalue ->w_cursor     |     | | `-RecoveryExpr 0x139142680 <col:13> '<dependent type>' contains-errors lvalue     |     | `-RecoveryExpr 0x1391426e8 <col:31> '<dependent type>' contains-errors lvalue     |     |-CompoundStmt 0x139809870 <line:22:2, line:25:2>     |     | |-BinaryOperator 0x1398094a0 <line:23:6, col:40> 'char *' contains-errors '='     |     | | |-UnaryOperator 0x1398093e0 <col:6, col:7> 'char *' lvalue prefix '*' cannot overflow     |     | | | `-ImplicitCastExpr 0x1398093c8 <col:7> 'char **' <LValueToRValue>     |     | | |   `-DeclRefExpr 0x139142738 <col:7> 'char **' lvalue ParmVar 0x1391281d8 'pp' 'char **'     |     | | `-CallExpr 0x139809478 <col:12, col:40> '<dependent type>' contains-errors     |     | |   |-DeclRefExpr 0x1398092b8 <col:12> 'int ()' Function 0x139809200 'ml_get_pos' 'int ()'     |     | |   `-UnaryOperator 0x139809460 <col:23, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | |     `-CXXDependentScopeMemberExpr 0x139809418 <col:24, col:32> '<dependent type>' contains-errors lvalue ->w_cursor     |     | |       `-RecoveryExpr 0x1398093f8 <col:24> '<dependent type>' contains-errors lvalue     |     | `-BinaryOperator 0x139809850 <line:24:6, col:50> 'int' contains-errors '='     |     |   |-UnaryOperator 0x1398096e0 <col:6, col:7> 'int' lvalue prefix '*' cannot overflow     |     |   | `-ImplicitCastExpr 0x1398096c8 <col:7> 'int *' <LValueToRValue>     |     |   |   `-DeclRefExpr 0x1398094c0 <col:7> 'int *' lvalue ParmVar 0x139128258 'lenp' 'int *'     |     |   `-BinaryOperator 0x139809830 <col:14, col:50> '<dependent type>' contains-errors '+'     |     |     |-BinaryOperator 0x139809810 <col:14, col:44> '<dependent type>' contains-errors '-'     |     |     | |-CXXDependentScopeMemberExpr 0x139809718 <col:14, col:21> '<dependent type>' contains-errors lvalue .col     |     |     | | `-RecoveryExpr 0x1398096f8 <col:14> '<dependent type>' contains-errors lvalue     |     |     | `-CXXDependentScopeMemberExpr 0x1398097c8 <col:27, col:44> '<dependent type>' contains-errors lvalue .col     |     |     |   `-CXXDependentScopeMemberExpr 0x139809780 <col:27, col:35> '<dependent type>' contains-errors lvalue ->w_cursor     |     |     |     `-RecoveryExpr 0x139809760 <col:27> '<dependent type>' contains-errors lvalue     |     |     `-IntegerLiteral 0x139809638 <col:50> 'int' 1     |     `-CompoundStmt 0x139809970 <line:27:2, line:30:2>     `-CallExpr 0x139809cf0 <line:35:5, col:28> 'int'       `-ImplicitCastExpr 0x139809cd8 <col:5> 'int (*)()' <FunctionToPointerDecay>         `-DeclRefExpr 0x139809cb8 <col:5> 'int ()' Function 0x139809c00 'reset_VIsual_and_resel' 'int ()' ","20746":"`-FunctionDecl 0x132940a88  line:1:12 compat_copy_entries_to_user 'int (unsigned int, struct xt_table *, int)' static   |-ParmVarDecl 0x1329280d8 <col:40, col:53> col:53 used total_size 'unsigned int'   |-ParmVarDecl 0x1329286c8 <line:2:12, col:29> col:29 used table 'struct xt_table *'   |-ParmVarDecl 0x132928740 <line:3:12, col:17> col:17 __user 'int'   `-CompoundStmt 0x13300a818 <line:4:1, line:27:1>     |-DeclStmt 0x132940d78 <line:5:2, col:30>     | |-RecordDecl 0x132940b90 <col:2, col:9> col:9 struct xt_counters     | `-VarDecl 0x132940cf8 <col:2, col:22> col:22 used counters 'struct xt_counters *'     |-DeclStmt 0x132940fd8 <line:6:2, col:54>     | |-RecordDecl 0x132940d90 <col:8, col:15> col:15 struct xt_table_info     | `-VarDecl 0x132940ef8 <col:2, col:47> col:30 used private 'const struct xt_table_info *' cinit     |   `-RecoveryExpr 0x132940f98 <col:40, col:47> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x132940f60 <col:40> 'struct xt_table *' lvalue ParmVar 0x1329286c8 'table' 'struct xt_table *'     |-DeclStmt 0x132941068 <line:7:2, col:14>     | `-VarDecl 0x132941000 <col:2, col:7> col:7 invalid __user 'void'     |-DeclStmt 0x132941100 <line:8:2, col:19>     | `-VarDecl 0x132941098 <col:2, col:15> col:15 used size 'unsigned int'     |-DeclStmt 0x1329411b8 <line:9:2, col:13>     | `-VarDecl 0x132941130 <col:2, col:12> col:6 used ret 'int' cinit     |   `-IntegerLiteral 0x132941198 <col:12> 'int' 0     |-DeclStmt 0x132941288 <line:10:2, col:20>     | `-VarDecl 0x1329411e8 <col:2, col:19> col:15 used i 'unsigned int' cinit     |   `-ImplicitCastExpr 0x132941270 <col:19> 'unsigned int' <IntegralCast>     |     `-IntegerLiteral 0x132941250 <col:19> 'int' 0     |-DeclStmt 0x132941488 <line:11:2, col:25>     | |-RecordDecl 0x1329412a0 <col:2, col:9> col:9 struct arpt_entry     | `-VarDecl 0x132941408 <col:2, col:21> col:21 used iter 'struct arpt_entry *'     |-BinaryOperator 0x1329416d0 <line:13:2, col:33> 'struct xt_counters *' '='     | |-DeclRefExpr 0x1329414a0 <col:2> 'struct xt_counters *' lvalue Var 0x132940cf8 'counters' 'struct xt_counters *'     | `-ImplicitCastExpr 0x1329416b8 <col:13, col:33> 'struct xt_counters *' <IntegralToPointer>     |   `-CallExpr 0x132941678 <col:13, col:33> 'int'     |     |-ImplicitCastExpr 0x132941660 <col:13> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1329415f0 <col:13> 'int ()' Function 0x132941538 'alloc_counters' 'int ()'     |     `-ImplicitCastExpr 0x1329416a0 <col:28> 'struct xt_table *' <LValueToRValue>     |       `-DeclRefExpr 0x132941610 <col:28> 'struct xt_table *' lvalue ParmVar 0x1329286c8 'table' 'struct xt_table *'     |-IfStmt 0x13300a000 <line:14:2, line:15:26>     | |-CallExpr 0x132941828 <line:14:6, col:21> 'int'     | | |-ImplicitCastExpr 0x132941810 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x1329417d0 <col:6> 'int ()' Function 0x132941718 'IS_ERR' 'int ()'     | | `-ImplicitCastExpr 0x132941850 <col:13> 'struct xt_counters *' <LValueToRValue>     | |   `-DeclRefExpr 0x1329417f0 <col:13> 'struct xt_counters *' lvalue Var 0x132940cf8 'counters' 'struct xt_counters *'     | `-ReturnStmt 0x1329419e0 <line:15:3, col:26>     |   `-CallExpr 0x1329419a0 <col:10, col:26> 'int'     |     |-ImplicitCastExpr 0x132941988 <col:10> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x132941948 <col:10> 'int ()' Function 0x132941890 'PTR_ERR' 'int ()'     |     `-ImplicitCastExpr 0x1329419c8 <col:18> 'struct xt_counters *' <LValueToRValue>     |       `-DeclRefExpr 0x132941968 <col:18> 'struct xt_counters *' lvalue Var 0x132940cf8 'counters' 'struct xt_counters *'     |-BinaryOperator 0x13300a090 <line:18:2, col:9> 'unsigned int' '='     | |-DeclRefExpr 0x13300a038 <col:2> 'unsigned int' lvalue Var 0x132941098 'size' 'unsigned int'     | `-ImplicitCastExpr 0x13300a078 <col:9> 'unsigned int' <LValueToRValue>     |   `-DeclRefExpr 0x13300a058 <col:9> 'unsigned int' lvalue ParmVar 0x1329280d8 'total_size' 'unsigned int'     |-CallExpr 0x13300a250 <line:19:2, col:53> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13300a190 <col:2> 'int ()' Function 0x13300a0d8 'xt_entry_foreach' 'int ()'     | |-DeclRefExpr 0x13300a1b0 <col:19> 'struct arpt_entry *' lvalue Var 0x132941408 'iter' 'struct arpt_entry *'     | |-RecoveryExpr 0x13300a208 <col:25, col:34> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13300a1d0 <col:25> 'const struct xt_table_info *' contains-errors lvalue Var 0x132940ef8 'private' 'const struct xt_table_info *'     | `-DeclRefExpr 0x13300a230 <col:43> 'unsigned int' lvalue ParmVar 0x1329280d8 'total_size' 'unsigned int'     |-CompoundStmt 0x13300a640 <col:55, line:24:2>     | `-BinaryOperator 0x13300a5a8 <line:20:3, line:21:27> 'int' contains-errors '='     |   |-DeclRefExpr 0x13300a288 <line:20:3> 'int' lvalue Var 0x132941130 'ret' 'int'     |   `-CallExpr 0x13300a560 <col:9, line:21:27> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x13300a388 <line:20:9> 'int ()' Function 0x13300a2d0 'compat_copy_entry_to_user' 'int ()'     |     |-DeclRefExpr 0x13300a3a8 <col:35> 'struct arpt_entry *' lvalue Var 0x132941408 'iter' 'struct arpt_entry *'     |     |-UnaryOperator 0x13300a548 <col:41, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | `-RecoveryExpr 0x13300a528 <col:42> '<dependent type>' contains-errors lvalue     |     |-UnaryOperator 0x13300a450 <line:21:7, col:8> 'unsigned int *' prefix '&' cannot overflow     |     | `-DeclRefExpr 0x13300a3f8 <col:8> 'unsigned int' lvalue Var 0x132941098 'size' 'unsigned int'     |     |-DeclRefExpr 0x13300a468 <col:14> 'struct xt_counters *' lvalue Var 0x132940cf8 'counters' 'struct xt_counters *'     |     `-UnaryOperator 0x13300a4a8 <col:24, col:25> 'unsigned int' postfix '++'     |       `-DeclRefExpr 0x13300a488 <col:24> 'unsigned int' lvalue Var 0x1329411e8 'i' 'unsigned int'     |-CallExpr 0x13300a790 <line:25:2, col:16> 'int'     | |-ImplicitCastExpr 0x13300a778 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13300a738 <col:2> 'int ()' Function 0x13300a680 'vfree' 'int ()'     | `-ImplicitCastExpr 0x13300a7b8 <col:8> 'struct xt_counters *' <LValueToRValue>     |   `-DeclRefExpr 0x13300a758 <col:8> 'struct xt_counters *' lvalue Var 0x132940cf8 'counters' 'struct xt_counters *'     `-ReturnStmt 0x13300a808 <line:26:2, col:9>       `-ImplicitCastExpr 0x13300a7f0 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x13300a7d0 <col:9> 'int' lvalue Var 0x132941130 'ret' 'int' ","20442":"`-FunctionDecl 0x13400e198  line:1:1 Debug 'int (int, char *, char *, char *, char *, char *, char *, char *)'   |-ParmVarDecl 0x13400dcd8 <line:2:5, col:9> col:9 val 'int'   |-ParmVarDecl 0x13400dd58 <line:3:5, col:11> col:11 used a 'char *'   |-ParmVarDecl 0x13400ddd8 <col:5, col:15> col:15 used b 'char *'   |-ParmVarDecl 0x13400de58 <col:5, col:19> col:19 used c 'char *'   |-ParmVarDecl 0x13400ded8 <col:5, col:23> col:23 used d 'char *'   |-ParmVarDecl 0x13400df58 <col:5, col:27> col:27 used e 'char *'   |-ParmVarDecl 0x13400dfd8 <col:5, col:31> col:31 used f 'char *'   |-ParmVarDecl 0x13400e058 <col:5, col:35> col:35 used g 'char *'   `-CompoundStmt 0x1340267f8 <line:4:1, line:6:1>     `-CallExpr 0x134026798 <line:5:5, col:40> '<dependent type>' contains-errors       |-DeclRefExpr 0x134026600 <col:5> 'int ()' Function 0x13400e338 'fprintf' 'int ()'       |-RecoveryExpr 0x134026778 <col:13> '<dependent type>' contains-errors lvalue       |-DeclRefExpr 0x134026638 <col:21> 'char *' lvalue ParmVar 0x13400dd58 'a' 'char *'       |-DeclRefExpr 0x134026658 <col:24> 'char *' lvalue ParmVar 0x13400ddd8 'b' 'char *'       |-DeclRefExpr 0x134026678 <col:27> 'char *' lvalue ParmVar 0x13400de58 'c' 'char *'       |-DeclRefExpr 0x134026698 <col:30> 'char *' lvalue ParmVar 0x13400ded8 'd' 'char *'       |-DeclRefExpr 0x1340266b8 <col:33> 'char *' lvalue ParmVar 0x13400df58 'e' 'char *'       |-DeclRefExpr 0x1340266d8 <col:36> 'char *' lvalue ParmVar 0x13400dfd8 'f' 'char *'       `-DeclRefExpr 0x1340266f8 <col:39> 'char *' lvalue ParmVar 0x13400e058 'g' 'char *' ","20680":"`-FunctionDecl 0x15190bb58  line:1:1 invalid TPM_CAP_Unmarshal 'int (int *, int **, int *)'   |-ParmVarDecl 0x15190b928 <col:19, col:28> col:28 invalid target 'int *'   |-ParmVarDecl 0x15190b9e0 <col:36, col:43> col:43 invalid buffer 'int **'   |-ParmVarDecl 0x15190ba60 <col:51, col:58> col:58 invalid size 'int *'   `-CompoundStmt 0x1519251a0 <line:2:1, line:28:1>     |-IfStmt 0x15190bee8 <line:5:5, line:7:5>     | |-BinaryOperator 0x15190bca8 <line:5:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x15190bc68 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x15190bc88 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x15190bed8 <col:31, line:7:5>     `-IfStmt 0x151925180 <line:8:5, line:26:5>       |-BinaryOperator 0x15190bf98 <line:8:9, col:15> 'int' contains-errors '=='       | |-RecoveryExpr 0x15190bf58 <col:9> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x15190bf78 <col:15> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x151925168 <col:31, line:26:5>         `-SwitchStmt 0x151925018 <line:9:2, line:25:2>           |-UnaryOperator 0x151925000 <line:9:10, col:11> '<dependent type>' contains-errors prefix '*' cannot overflow           | `-ImplicitCastExpr 0x15190bfd8 <col:11> '<dependent type>' contains-errors <LValueToRValue>           |   `-RecoveryExpr 0x15190bfb8 <col:11> '<dependent type>' contains-errors lvalue           `-CompoundStmt 0x151925148 <col:19, line:25:2>             |-BreakStmt 0x151925118 <line:22:6>             `-DefaultStmt 0x151925128 <line:23:4, col:11>               `-NullStmt 0x151925120 <col:11> ","20883":"`-FunctionDecl 0x13381e9a8  line:1:5 credssp_sizeof_nego_token 'int (int)'   |-ParmVarDecl 0x13381e8d8 <col:31, col:35> col:35 used length 'int'   `-CompoundStmt 0x13381eee8 <line:2:1, line:6:1>     |-BinaryOperator 0x13381ecb8 <line:3:2, col:41> 'int' '='     | |-DeclRefExpr 0x13381eaa0 <col:2> 'int' lvalue ParmVar 0x13381e8d8 'length' 'int'     | `-CallExpr 0x13381ec78 <col:11, col:41> 'int'     |   |-ImplicitCastExpr 0x13381ec60 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x13381ebf0 <col:11> 'int ()' Function 0x13381eb38 'ber_sizeof_octet_string' 'int ()'     |   `-ImplicitCastExpr 0x13381eca0 <col:35> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x13381ec10 <col:35> 'int' lvalue ParmVar 0x13381e8d8 'length' 'int'     |-CompoundAssignOperator 0x13381ee70 <line:4:2, col:44> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'     | |-DeclRefExpr 0x13381ecd8 <col:2> 'int' lvalue ParmVar 0x13381e8d8 'length' 'int'     | `-CallExpr 0x13381ee30 <col:12, col:44> 'int'     |   |-ImplicitCastExpr 0x13381ee18 <col:12> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x13381edd8 <col:12> 'int ()' Function 0x13381ed20 'ber_sizeof_contextual_tag' 'int ()'     |   `-ImplicitCastExpr 0x13381ee58 <col:38> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x13381edf8 <col:38> 'int' lvalue ParmVar 0x13381e8d8 'length' 'int'     `-ReturnStmt 0x13381eed8 <line:5:2, col:9>       `-ImplicitCastExpr 0x13381eec0 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x13381eea0 <col:9> 'int' lvalue ParmVar 0x13381e8d8 'length' 'int' ","20562":"`-FunctionDecl 0x14b140a80  line:1:13 referenced vgacon_scrollback_update 'void (struct vc_data *, int, int)' static   |-ParmVarDecl 0x14b128648 <col:38, col:54> col:54 used c 'struct vc_data *'   |-ParmVarDecl 0x14b1286c8 <col:57, col:61> col:61 used t 'int'   |-ParmVarDecl 0x14b128748 <col:64, col:68> col:68 used count 'int'   `-CompoundStmt 0x14b8088e8 <line:2:1, line:32:1>     |-DeclStmt 0x14b140c08 <line:3:2, col:9>     | `-VarDecl 0x14b140ba0 <col:2, col:8> col:8 used p 'void *'     |-IfStmt 0x14b140ff0 <line:5:2, line:7:3>     | |-BinaryOperator 0x14b140fc0 <line:5:6, line:6:19> 'int' contains-errors '||'     | | |-BinaryOperator 0x14b140f60 <line:5:6, col:62> 'int' contains-errors '||'     | | | |-UnaryOperator 0x14b140eb0 <col:6, col:30> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | `-ImplicitCastExpr 0x14b140e98 <col:7, col:30> '<dependent type>' contains-errors <LValueToRValue>     | | | |   `-CXXDependentScopeMemberExpr 0x14b140e50 <col:7, col:30> '<dependent type>' contains-errors lvalue ->data     | | | |     `-RecoveryExpr 0x14b140e30 <col:7> '<dependent type>' contains-errors lvalue     | | | `-UnaryOperator 0x14b140f48 <col:38, col:62> '<dependent type>' contains-errors prefix '!' cannot overflow     | | |   `-ImplicitCastExpr 0x14b140f30 <col:39, col:62> '<dependent type>' contains-errors <LValueToRValue>     | | |     `-CXXDependentScopeMemberExpr 0x14b140ee8 <col:39, col:62> '<dependent type>' contains-errors lvalue ->size     | | |       `-RecoveryExpr 0x14b140ec8 <col:39> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x14b140fa0 <line:6:6, col:19> 'int' contains-errors '!='     | |   |-RecoveryExpr 0x14b140db0 <col:6, col:9> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x14b140d78 <col:6> 'struct vc_data *' lvalue ParmVar 0x14b128648 'c' 'struct vc_data *'     | |   `-RecoveryExpr 0x14b140f80 <col:19> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14b140fe0 <line:7:3>     |-BinaryOperator 0x14b1411d0 <line:9:2, col:49> 'void *' contains-errors '='     | |-DeclRefExpr 0x14b141010 <col:2> 'void *' lvalue Var 0x14b140ba0 'p' 'void *'     | `-CStyleCastExpr 0x14b1411a8 <col:6, col:49> 'void *' contains-errors <Dependent>     |   `-ParenExpr 0x14b141188 <col:15, col:49> '<dependent type>' contains-errors     |     `-BinaryOperator 0x14b141130 <col:16, col:38> '<dependent type>' contains-errors '+'     |       |-RecoveryExpr 0x14b141068 <col:16, col:19> '<dependent type>' contains-errors lvalue     |       | `-DeclRefExpr 0x14b141030 <col:16> 'struct vc_data *' lvalue ParmVar 0x14b128648 'c' 'struct vc_data *'     |       `-BinaryOperator 0x14b141110 <col:31, col:38> '<dependent type>' contains-errors '*'     |         |-DeclRefExpr 0x14b141090 <col:31> 'int' lvalue ParmVar 0x14b1286c8 't' 'int'     |         `-RecoveryExpr 0x14b1410e8 <col:35, col:38> '<dependent type>' contains-errors lvalue     |           `-DeclRefExpr 0x14b1410b0 <col:35> 'struct vc_data *' lvalue ParmVar 0x14b128648 'c' 'struct vc_data *'     `-WhileStmt 0x14b8088c8 <line:11:2, line:31:2>       |-UnaryOperator 0x14b141210 <line:11:9, col:14> 'int' postfix '--'       | `-DeclRefExpr 0x14b1411f0 <col:9> 'int' lvalue ParmVar 0x14b128748 'count' 'int'       `-CompoundStmt 0x14b808890 <col:18, line:31:2>         |-IfStmt 0x14b141410 <line:12:3, line:14:34>         | |-RecoveryExpr 0x14b141368 <line:12:7, line:13:30> '_Bool' contains-errors         | `-BinaryOperator 0x14b1413f0 <line:14:4, col:34> '<dependent type>' contains-errors '='         |   |-RecoveryExpr 0x14b1413a8 <col:4, col:27> '<dependent type>' contains-errors lvalue         |   | `-DeclRefExpr 0x14b141388 <col:4> 'void (struct vc_data *, int, int)' Function 0x14b140a80 'vgacon_scrollback_update' 'void (struct vc_data *, int, int)'         |   `-IntegerLiteral 0x14b1413d0 <col:34> 'int' 0         |-CallExpr 0x14b1417e8 <line:16:3, line:18:25> '<dependent type>' contains-errors         | |-DeclRefExpr 0x14b141540 <line:16:3> 'int ()' Function 0x14b141488 'scr_memcpyw' 'int ()'         | |-BinaryOperator 0x14b1417c8 <col:15, line:17:31> '<dependent type>' contains-errors '+'         | | |-CXXDependentScopeMemberExpr 0x14b141718 <line:16:15, col:38> '<dependent type>' contains-errors lvalue ->data         | | | `-RecoveryExpr 0x14b1416f8 <col:15> '<dependent type>' contains-errors lvalue         | | `-CXXDependentScopeMemberExpr 0x14b141780 <line:17:8, col:31> '<dependent type>' contains-errors lvalue ->tail         | |   `-RecoveryExpr 0x14b141760 <col:8> '<dependent type>' contains-errors lvalue         | |-DeclRefExpr 0x14b141640 <line:18:8> 'void *' lvalue Var 0x14b140ba0 'p' 'void *'         | `-RecoveryExpr 0x14b141698 <col:11, col:14> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x14b141660 <col:11> 'struct vc_data *' lvalue ParmVar 0x14b128648 'c' 'struct vc_data *'         |-UnaryOperator 0x14b141868 <line:20:3, col:29> '<dependent type>' contains-errors postfix '++' cannot overflow         | `-RecoveryExpr 0x14b141840 <col:3, col:26> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x14b141820 <col:3> 'void (struct vc_data *, int, int)' Function 0x14b140a80 'vgacon_scrollback_update' 'void (struct vc_data *, int, int)'         |-CompoundAssignOperator 0x14b141900 <line:21:3, col:11> 'void *' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'         | |-DeclRefExpr 0x14b141880 <col:3> 'void *' lvalue Var 0x14b140ba0 'p' 'void *'         | `-RecoveryExpr 0x14b1418d8 <col:8, col:11> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x14b1418a0 <col:8> 'struct vc_data *' lvalue ParmVar 0x14b128648 'c' 'struct vc_data *'         `-CompoundAssignOperator 0x14b808800 <line:22:3, col:37> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'           |-RecoveryExpr 0x14b141950 <col:3, col:26> '<dependent type>' contains-errors lvalue           | `-DeclRefExpr 0x14b141930 <col:3> 'void (struct vc_data *, int, int)' Function 0x14b140a80 'vgacon_scrollback_update' 'void (struct vc_data *, int, int)'           `-RecoveryExpr 0x14b1419b0 <col:34, col:37> '<dependent type>' contains-errors lvalue             `-DeclRefExpr 0x14b141978 <col:34> 'struct vc_data *' lvalue ParmVar 0x14b128648 'c' 'struct vc_data *' ","20615":"`-FunctionDecl 0x14c140d18  line:1:1 yang_read_message 'int (struct lys_module *, struct lys_restr *, char *, char *, int)'   |-ParmVarDecl 0x14c128648 <col:19, col:38> col:38 used module 'struct lys_module *'   |-ParmVarDecl 0x14c140a28 <col:45, col:63> col:63 used save 'struct lys_restr *'   |-ParmVarDecl 0x14c140aa8 <col:68, col:74> col:74 used value 'char *'   |-ParmVarDecl 0x14c140b28 <col:81, col:87> col:87 used what 'char *'   |-ParmVarDecl 0x14c140ba8 <col:93, col:97> col:97 used message 'int'   `-CompoundStmt 0x14c141620 <line:2:1, line:11:1>     |-DeclStmt 0x14c140eb0 <line:3:5, col:12>     | `-VarDecl 0x14c140e48 <col:5, col:9> col:9 used ret 'int'     |-IfStmt 0x14c1415a8 <line:5:5, line:9:5> has_else     | |-BinaryOperator 0x14c140f58 <line:5:9, col:20> 'int' contains-errors '=='     | | |-DeclRefExpr 0x14c140ec8 <col:9> 'int' lvalue ParmVar 0x14c140ba8 'message' 'int'     | | `-RecoveryExpr 0x14c140f38 <col:20> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x14c141328 <col:43, line:7:5>     | | `-BinaryOperator 0x14c141308 <line:6:9, col:81> 'int' contains-errors '='     | |   |-DeclRefExpr 0x14c140f78 <col:9> 'int' lvalue Var 0x14c140e48 'ret' 'int'     | |   `-CallExpr 0x14c1412b8 <col:15, col:81> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x14c1410b0 <col:15> 'int ()' Function 0x14c140ff8 'yang_check_string' 'int ()'     | |     |-DeclRefExpr 0x14c1410d0 <col:33> 'struct lys_module *' lvalue ParmVar 0x14c128648 'module' 'struct lys_module *'     | |     |-UnaryOperator 0x14c141150 <col:41, col:48> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     | `-RecoveryExpr 0x14c141128 <col:42, col:48> '<dependent type>' contains-errors lvalue     | |     |   `-DeclRefExpr 0x14c1410f0 <col:42> 'struct lys_restr *' lvalue ParmVar 0x14c140a28 'save' 'struct lys_restr *'     | |     |-StringLiteral 0x14c1411b0 <col:57> 'char[4]' lvalue \"STR\"     | |     |-DeclRefExpr 0x14c1411d0 <col:64> 'char *' lvalue ParmVar 0x14c140b28 'what' 'char *'     | |     |-DeclRefExpr 0x14c1411f0 <col:70> 'char *' lvalue ParmVar 0x14c140aa8 'value' 'char *'     | |     `-RecoveryExpr 0x14c141298 <col:77> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14c141590 <line:7:12, line:9:5>     |   `-BinaryOperator 0x14c141570 <line:8:9, col:78> 'int' contains-errors '='     |     |-DeclRefExpr 0x14c141340 <col:9> 'int' lvalue Var 0x14c140e48 'ret' 'int'     |     `-CallExpr 0x14c141520 <col:15, col:78> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x14c141360 <col:15> 'int ()' Function 0x14c140ff8 'yang_check_string' 'int ()'     |       |-DeclRefExpr 0x14c141380 <col:33> 'struct lys_module *' lvalue ParmVar 0x14c128648 'module' 'struct lys_module *'     |       |-UnaryOperator 0x14c141400 <col:41, col:48> '<dependent type>' contains-errors prefix '&' cannot overflow     |       | `-RecoveryExpr 0x14c1413d8 <col:42, col:48> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x14c1413a0 <col:42> 'struct lys_restr *' lvalue ParmVar 0x14c140a28 'save' 'struct lys_restr *'     |       |-StringLiteral 0x14c141418 <col:54> 'char[4]' lvalue \"STR\"     |       |-DeclRefExpr 0x14c141438 <col:61> 'char *' lvalue ParmVar 0x14c140b28 'what' 'char *'     |       |-DeclRefExpr 0x14c141458 <col:67> 'char *' lvalue ParmVar 0x14c140aa8 'value' 'char *'     |       `-RecoveryExpr 0x14c141500 <col:74> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14c141610 <line:10:5, col:12>       `-ImplicitCastExpr 0x14c1415f8 <col:12> 'int' <LValueToRValue>         `-DeclRefExpr 0x14c1415d8 <col:12> 'int' lvalue Var 0x14c140e48 'ret' 'int' ","21100":"`-FunctionDecl 0x138928288  line:1:1 invalid f_py3eval 'int (int *, int *)'   |-ParmVarDecl 0x138928128 <col:11, col:21> col:21 invalid argvars 'int *'   |-ParmVarDecl 0x1389281a8 <col:30, col:40> col:40 invalid rettv 'int *'   `-CompoundStmt 0x138941948 <line:2:1, line:11:1>     |-DeclStmt 0x1389283c0 <line:3:5, col:16>     | `-VarDecl 0x138928358 <col:5, col:13> col:13 used str 'char *'     |-DeclStmt 0x138928468 <line:4:5, col:26>     | `-VarDecl 0x138928400 <col:5, col:12> col:12 invalid buf 'char'     |-BinaryOperator 0x1389287b0 <line:9:5, col:45> 'char *' contains-errors '='     | |-DeclRefExpr 0x138928538 <col:5> 'char *' lvalue Var 0x138928358 'str' 'char *'     | `-CallExpr 0x138928780 <col:11, col:45> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1389286b0 <col:11> 'int ()' Function 0x1389285f8 'tv_get_string_buf' 'int ()'     |   |-UnaryOperator 0x138928748 <col:29, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-ArraySubscriptExpr 0x138928728 <col:30, col:39> '<dependent type>' contains-errors lvalue     |   |   |-ImplicitCastExpr 0x138928710 <col:30> '<dependent type>' contains-errors <LValueToRValue>     |   |   | `-RecoveryExpr 0x1389286d0 <col:30> '<dependent type>' contains-errors lvalue     |   |   `-IntegerLiteral 0x1389286f0 <col:38> 'int' 0     |   `-RecoveryExpr 0x138928760 <col:42> '<dependent type>' contains-errors lvalue     `-CallExpr 0x138941918 <line:10:5, col:26> '<dependent type>' contains-errors       |-DeclRefExpr 0x1389418b8 <col:5> 'int ()' Function 0x138941800 'do_py3eval' 'int ()'       |-DeclRefExpr 0x1389418d8 <col:16> 'char *' lvalue Var 0x138928358 'str' 'char *'       `-RecoveryExpr 0x1389418f8 <col:21> '<dependent type>' contains-errors lvalue ","20685":"`-FunctionDecl 0x13280e358  line:1:5 register_die_notifier 'int (struct notifier_block *)'   |-ParmVarDecl 0x13280e248 <col:27, col:50> col:50 used nb 'struct notifier_block *'   `-CompoundStmt 0x132826898 <line:2:1, line:4:1>     `-ReturnStmt 0x132826888 <line:3:2, col:62>       `-CallExpr 0x132826858 <col:9, col:62> '<dependent type>' contains-errors         |-DeclRefExpr 0x132826780 <col:9> 'int ()' Function 0x1328266c8 'atomic_notifier_chain_register' 'int ()'         |-UnaryOperator 0x132826840 <col:40, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow         | `-RecoveryExpr 0x132826820 <col:41> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x1328267d0 <col:60> 'struct notifier_block *' lvalue ParmVar 0x13280e248 'nb' 'struct notifier_block *' ","20405":"`-FunctionDecl 0x146122748  line:1:12 tid_maps_open 'int (struct inode *, struct file *)' static   |-ParmVarDecl 0x14680e248 <col:26, col:40> col:40 used inode 'struct inode *'   |-ParmVarDecl 0x146122628 <col:47, col:60> col:60 used file 'struct file *'   `-CompoundStmt 0x146122ab8 <line:2:1, line:4:1>     `-ReturnStmt 0x146122aa8 <line:3:2, col:52>       `-CallExpr 0x146122a70 <col:9, col:52> '<dependent type>' contains-errors         |-DeclRefExpr 0x146122970 <col:9> 'int ()' Function 0x1461228b8 'do_maps_open' 'int ()'         |-DeclRefExpr 0x146122990 <col:22> 'struct inode *' lvalue ParmVar 0x14680e248 'inode' 'struct inode *'         |-DeclRefExpr 0x1461229b0 <col:29> 'struct file *' lvalue ParmVar 0x146122628 'file' 'struct file *'         `-UnaryOperator 0x146122a58 <col:35, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow           `-RecoveryExpr 0x146122a38 <col:36> '<dependent type>' contains-errors lvalue ","20858":"`-FunctionDecl 0x1398407f8  line:1:1 invalid alloc_open_clump 'int (int *)'   |-ParmVarDecl 0x139840728 <col:18, col:36> col:36 invalid mem 'int *'   `-CompoundStmt 0x1398408a8 <line:2:1, line:9:1> ","20373":"`-FunctionDecl 0x15a1281f8  line:1:17 invalid xt_event_check 'int (int *)' static   |-ParmVarDecl 0x15a128128 <col:32, col:41> col:41 invalid source 'int *'   `-CompoundStmt 0x15a1287a8 <line:2:1, line:9:1>     |-IfStmt 0x15a128740 <line:3:3, line:7:3>     | |-BinaryOperator 0x15a1283c8 <line:3:7, col:34> '<dependent type>' contains-errors '&'     | | |-CXXDependentScopeMemberExpr 0x15a128360 <col:7, col:24> '<dependent type>' contains-errors lvalue .revents     | | | `-RecoveryExpr 0x15a128340 <col:7> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x15a1283a8 <col:34> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x15a128720 <col:43, line:7:3>     |   |-DeclStmt 0x15a128668 <line:4:2, col:40>     |   | `-VarDecl 0x15a128400 <col:2, col:39> col:6 used mask 'int' cinit     |   |   `-CallExpr 0x15a128640 <col:13, col:39> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x15a1285c0 <col:13> 'int ()' Function 0x15a128508 'XtAppPending' 'int ()'     |   |     `-RecoveryExpr 0x15a128620 <col:26> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x15a128700 <line:5:2, line:6:11>     |     |-ImplicitCastExpr 0x15a1286a0 <line:5:6> 'int' contains-errors <LValueToRValue>     |     | `-DeclRefExpr 0x15a128680 <col:6> 'int' contains-errors lvalue Var 0x15a128400 'mask' 'int'     |     `-ReturnStmt 0x15a1286f0 <line:6:4, col:11>     |       `-RecoveryExpr 0x15a1286d0 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x15a128798 <line:8:3, col:10>       `-RecoveryExpr 0x15a128778 <col:10> '<dependent type>' contains-errors lvalue ","20493":"`-FunctionDecl 0x13d008200  line:1:1 pci_emul_add_msicap 'int (struct pci_vdev *, int)'   |-ParmVarDecl 0x13c00e248 <col:21, col:38> col:38 used dev 'struct pci_vdev *'   |-ParmVarDecl 0x13c00e2c8 <col:43, col:47> col:47 used msgnum 'int'   `-CompoundStmt 0x13d008848 <line:2:1, line:8:1>     |-DeclStmt 0x13d008478 <line:3:2, col:22>     | |-RecordDecl 0x13d008300 <col:2, col:9> col:9 struct msicap     | `-VarDecl 0x13d0083f8 <col:2, col:16> col:16 invalid msicap 'struct msicap'     `-CallExpr 0x13d008658 <line:5:2, col:40> '<dependent type>' contains-errors       |-DeclRefExpr 0x13d0085c0 <col:2> 'int ()' Function 0x13d008508 'pci_populate_msicap' 'int ()'       |-UnaryOperator 0x13d008600 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow       | `-RecoveryExpr 0x13d0085e0 <col:23> '<dependent type>' contains-errors lvalue       |-DeclRefExpr 0x13d008618 <col:31> 'int' lvalue ParmVar 0x13c00e2c8 'msgnum' 'int'       `-IntegerLiteral 0x13d008638 <col:39> 'int' 0 ","20381":"`-FunctionDecl 0x1599281c8  line:1:13 invalid ide_bmdma_status_needed 'int (void *)' static   |-ParmVarDecl 0x1599280f0 <col:37, col:43> col:43 used opaque 'void *'   `-CompoundStmt 0x159928368 <line:2:1, line:9:1> ","20543":"`-FunctionDecl 0x13780dd38  col:8 invalid empty 'int ()' ","21162":"`-FunctionDecl 0x14d826600  line:1:12 __ptrace_may_access 'int (struct task_struct *, unsigned int)' static   |-ParmVarDecl 0x14d80e248 <col:32, col:52> col:52 used task 'struct task_struct *'   |-ParmVarDecl 0x14d80e2c8 <col:58, col:71> col:71 used mode 'unsigned int'   `-CompoundStmt 0x14d82e4a8 <line:2:1, line:36:1>     |-DeclStmt 0x14d826b50 <line:3:2, col:50>     | |-RecordDecl 0x14d826700 <col:8, col:15> col:15 struct cred     | |-VarDecl 0x14d826868 <col:2, col:41> col:21 used cred 'const struct cred *' cinit     | | `-ImplicitCastExpr 0x14d826a88 <col:28, col:41> 'const struct cred *' <IntegralToPointer>     | |   `-CallExpr 0x14d826a68 <col:28, col:41> 'int'     | |     `-ImplicitCastExpr 0x14d826a50 <col:28> 'int (*)()' <FunctionToPointerDecay>     | |       `-DeclRefExpr 0x14d826a00 <col:28> 'int ()' Function 0x14d826948 'current_cred' 'int ()'     | `-VarDecl 0x14d826ac8 <col:2, col:45> col:45 used tcred 'const struct cred *'     |-DeclStmt 0x14d826c08 <line:6:2, col:18>     | `-VarDecl 0x14d826b80 <col:2, col:17> col:6 used dumpable 'int' cinit     |   `-IntegerLiteral 0x14d826be8 <col:17> 'int' 0     |-IfStmt 0x14d826e08 <line:8:2, line:9:10>     | |-CallExpr 0x14d826da8 <line:8:6, col:37> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14d826d00 <col:6> 'int ()' Function 0x14d826c48 'same_thread_group' 'int ()'     | | |-DeclRefExpr 0x14d826d20 <col:24> 'struct task_struct *' lvalue ParmVar 0x14d80e248 'task' 'struct task_struct *'     | | `-RecoveryExpr 0x14d826d88 <col:30> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14d826df8 <line:9:3, col:10>     |   `-IntegerLiteral 0x14d826dd8 <col:10> 'int' 0     |-CallExpr 0x14d826f40 <line:10:2, col:16> 'int'     | `-ImplicitCastExpr 0x14d826f28 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x14d826f08 <col:2> 'int ()' Function 0x14d826e50 'rcu_read_lock' 'int ()'     |-BinaryOperator 0x14d827110 <line:11:2, col:26> 'const struct cred *' '='     | |-DeclRefExpr 0x14d826f60 <col:2> 'const struct cred *' lvalue Var 0x14d826ac8 'tcred' 'const struct cred *'     | `-ImplicitCastExpr 0x14d8270f8 <col:10, col:26> 'const struct cred *' <IntegralToPointer>     |   `-CallExpr 0x14d8270b8 <col:10, col:26> 'int'     |     |-ImplicitCastExpr 0x14d8270a0 <col:10> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14d827060 <col:10> 'int ()' Function 0x14d826fa8 '__task_cred' 'int ()'     |     `-ImplicitCastExpr 0x14d8270e0 <col:22> 'struct task_struct *' <LValueToRValue>     |       `-DeclRefExpr 0x14d827080 <col:22> 'struct task_struct *' lvalue ParmVar 0x14d80e248 'task' 'struct task_struct *'     |-IfStmt 0x14d82d8b0 <line:12:2, line:18:8>     | |-BinaryOperator 0x14d82d828 <line:12:6, line:17:34> 'int' contains-errors '&&'     | | |-BinaryOperator 0x14d82d6f8 <line:12:6, line:16:35> 'int' contains-errors '&&'     | | | |-BinaryOperator 0x14d82d5c8 <line:12:6, line:15:35> 'int' contains-errors '&&'     | | | | |-BinaryOperator 0x14d827560 <line:12:6, line:14:34> 'int' contains-errors '&&'     | | | | | |-BinaryOperator 0x14d827430 <line:12:6, line:13:35> 'int' contains-errors '&&'     | | | | | | |-CallExpr 0x14d8272f0 <line:12:6, col:35> '<dependent type>' contains-errors     | | | | | | | |-DeclRefExpr 0x14d827210 <col:6> 'int ()' Function 0x14d827158 'uid_eq' 'int ()'     | | | | | | | |-RecoveryExpr 0x14d827268 <col:13, col:19> '<dependent type>' contains-errors lvalue     | | | | | | | | `-DeclRefExpr 0x14d827230 <col:13> 'const struct cred *' lvalue Var 0x14d826868 'cred' 'const struct cred *'     | | | | | | | `-RecoveryExpr 0x14d8272c8 <col:24, col:31> '<dependent type>' contains-errors lvalue     | | | | | | |   `-DeclRefExpr 0x14d827290 <col:24> 'const struct cred *' lvalue Var 0x14d826ac8 'tcred' 'const struct cred *'     | | | | | | `-CallExpr 0x14d827400 <line:13:6, col:35> '<dependent type>' contains-errors     | | | | | |   |-DeclRefExpr 0x14d827320 <col:6> 'int ()' Function 0x14d827158 'uid_eq' 'int ()'     | | | | | |   |-RecoveryExpr 0x14d827378 <col:13, col:19> '<dependent type>' contains-errors lvalue     | | | | | |   | `-DeclRefExpr 0x14d827340 <col:13> 'const struct cred *' lvalue Var 0x14d826868 'cred' 'const struct cred *'     | | | | | |   `-RecoveryExpr 0x14d8273d8 <col:24, col:31> '<dependent type>' contains-errors lvalue     | | | | | |     `-DeclRefExpr 0x14d8273a0 <col:24> 'const struct cred *' lvalue Var 0x14d826ac8 'tcred' 'const struct cred *'     | | | | | `-CallExpr 0x14d827530 <line:14:6, col:34> '<dependent type>' contains-errors     | | | | |   |-DeclRefExpr 0x14d827450 <col:6> 'int ()' Function 0x14d827158 'uid_eq' 'int ()'     | | | | |   |-RecoveryExpr 0x14d8274a8 <col:13, col:19> '<dependent type>' contains-errors lvalue     | | | | |   | `-DeclRefExpr 0x14d827470 <col:13> 'const struct cred *' lvalue Var 0x14d826868 'cred' 'const struct cred *'     | | | | |   `-RecoveryExpr 0x14d827508 <col:24, col:31> '<dependent type>' contains-errors lvalue     | | | | |     `-DeclRefExpr 0x14d8274d0 <col:24> 'const struct cred *' lvalue Var 0x14d826ac8 'tcred' 'const struct cred *'     | | | | `-CallExpr 0x14d82d598 <line:15:6, col:35> '<dependent type>' contains-errors     | | | |   |-DeclRefExpr 0x14d82d4b8 <col:6> 'int ()' Function 0x14d82d400 'gid_eq' 'int ()'     | | | |   |-RecoveryExpr 0x14d82d510 <col:13, col:19> '<dependent type>' contains-errors lvalue     | | | |   | `-DeclRefExpr 0x14d82d4d8 <col:13> 'const struct cred *' lvalue Var 0x14d826868 'cred' 'const struct cred *'     | | | |   `-RecoveryExpr 0x14d82d570 <col:24, col:31> '<dependent type>' contains-errors lvalue     | | | |     `-DeclRefExpr 0x14d82d538 <col:24> 'const struct cred *' lvalue Var 0x14d826ac8 'tcred' 'const struct cred *'     | | | `-CallExpr 0x14d82d6c8 <line:16:6, col:35> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x14d82d5e8 <col:6> 'int ()' Function 0x14d82d400 'gid_eq' 'int ()'     | | |   |-RecoveryExpr 0x14d82d640 <col:13, col:19> '<dependent type>' contains-errors lvalue     | | |   | `-DeclRefExpr 0x14d82d608 <col:13> 'const struct cred *' lvalue Var 0x14d826868 'cred' 'const struct cred *'     | | |   `-RecoveryExpr 0x14d82d6a0 <col:24, col:31> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x14d82d668 <col:24> 'const struct cred *' lvalue Var 0x14d826ac8 'tcred' 'const struct cred *'     | | `-CallExpr 0x14d82d7f8 <line:17:6, col:34> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x14d82d718 <col:6> 'int ()' Function 0x14d82d400 'gid_eq' 'int ()'     | |   |-RecoveryExpr 0x14d82d770 <col:13, col:19> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x14d82d738 <col:13> 'const struct cred *' lvalue Var 0x14d826868 'cred' 'const struct cred *'     | |   `-RecoveryExpr 0x14d82d7d0 <col:24, col:31> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x14d82d798 <col:24> 'const struct cred *' lvalue Var 0x14d826ac8 'tcred' 'const struct cred *'     | `-GotoStmt 0x14d82d898 <line:18:3, col:8> 'ok' 0x14d82d848     |-IfStmt 0x14d82da98 <line:19:2, line:20:8>     | |-CallExpr 0x14d82da50 <line:19:6, col:41> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14d82d9b0 <col:6> 'int ()' Function 0x14d82d8f8 'ptrace_has_cap' 'int ()'     | | |-RecoveryExpr 0x14d82da08 <col:21, col:28> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x14d82d9d0 <col:21> 'const struct cred *' lvalue Var 0x14d826ac8 'tcred' 'const struct cred *'     | | `-DeclRefExpr 0x14d82da30 <col:37> 'unsigned int' lvalue ParmVar 0x14d80e2c8 'mode' 'unsigned int'     | `-GotoStmt 0x14d82da80 <line:20:3, col:8> 'ok' 0x14d82d848     |-CallExpr 0x14d82dbd0 <line:21:2, col:18> 'int'     | `-ImplicitCastExpr 0x14d82dbb8 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x14d82db98 <col:2> 'int ()' Function 0x14d82dae0 'rcu_read_unlock' 'int ()'     |-LabelStmt 0x14d82dc48 <line:23:1, line:24:18> 'ok'     | `-CallExpr 0x14d82dc28 <col:2, col:18> 'int'     |   `-ImplicitCastExpr 0x14d82dc10 <col:2> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x14d82dbf0 <col:2> 'int ()' Function 0x14d82dae0 'rcu_read_unlock' 'int ()'     |-CallExpr 0x14d82dd80 <line:25:2, col:10> 'int'     | `-ImplicitCastExpr 0x14d82dd68 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x14d82dd48 <col:2> 'int ()' Function 0x14d82dc90 'smp_rmb' 'int ()'     |-IfStmt 0x14d82dfc8 <line:26:2, line:27:35>     | |-RecoveryExpr 0x14d82ddd8 <line:26:6, col:12> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14d82dda0 <col:6> 'struct task_struct *' lvalue ParmVar 0x14d80e248 'task' 'struct task_struct *'     | `-BinaryOperator 0x14d82dfa8 <line:27:3, col:35> 'int' contains-errors '='     |   |-DeclRefExpr 0x14d82de00 <col:3> 'int' lvalue Var 0x14d826b80 'dumpable' 'int'     |   `-CallExpr 0x14d82df80 <col:14, col:35> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14d82df00 <col:14> 'int ()' Function 0x14d82de48 'get_dumpable' 'int ()'     |     `-RecoveryExpr 0x14d82df58 <col:27, col:33> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14d82df20 <col:27> 'struct task_struct *' lvalue ParmVar 0x14d80e248 'task' 'struct task_struct *'     |-CallExpr 0x14d82e020 <line:28:2, col:16> 'int'     | `-ImplicitCastExpr 0x14d82e008 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x14d82dfe8 <col:2> 'int ()' Function 0x14d826e50 'rcu_read_lock' 'int ()'     |-IfStmt 0x14d82e268 <line:29:2, line:32:2>     | |-BinaryOperator 0x14d82e1d8 <line:29:6, col:67> 'int' contains-errors '&&'     | | |-UnaryOperator 0x14d82e078 <col:6, col:7> 'int' prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x14d82e060 <col:7> 'int' <LValueToRValue>     | | |   `-DeclRefExpr 0x14d82e040 <col:7> 'int' lvalue Var 0x14d826b80 'dumpable' 'int'     | | `-UnaryOperator 0x14d82e1c0 <col:19, col:67> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-CallExpr 0x14d82e190 <col:20, col:67> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x14d82e090 <col:20> 'int ()' Function 0x14d82d8f8 'ptrace_has_cap' 'int ()'     | |     |-RecoveryExpr 0x14d82e148 <col:35, col:54> '<dependent type>' contains-errors lvalue     | |     | `-CallExpr 0x14d82e108 <col:35, col:51> 'int'     | |     |   |-ImplicitCastExpr 0x14d82e0f0 <col:35> 'int (*)()' <FunctionToPointerDecay>     | |     |   | `-DeclRefExpr 0x14d82e0b0 <col:35> 'int ()' Function 0x14d826fa8 '__task_cred' 'int ()'     | |     |   `-ImplicitCastExpr 0x14d82e130 <col:47> 'struct task_struct *' <LValueToRValue>     | |     |     `-DeclRefExpr 0x14d82e0d0 <col:47> 'struct task_struct *' lvalue ParmVar 0x14d80e248 'task' 'struct task_struct *'     | |     `-DeclRefExpr 0x14d82e170 <col:63> 'unsigned int' lvalue ParmVar 0x14d80e2c8 'mode' 'unsigned int'     | `-CompoundStmt 0x14d82e250 <col:70, line:32:2>     |   `-CallExpr 0x14d82e230 <line:30:3, col:19> 'int'     |     `-ImplicitCastExpr 0x14d82e218 <col:3> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x14d82e1f8 <col:3> 'int ()' Function 0x14d82dae0 'rcu_read_unlock' 'int ()'     |-CallExpr 0x14d82e2c0 <line:33:2, col:18> 'int'     | `-ImplicitCastExpr 0x14d82e2a8 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x14d82e288 <col:2> 'int ()' Function 0x14d82dae0 'rcu_read_unlock' 'int ()'     `-ReturnStmt 0x14d82e498 <line:35:2, col:48>       `-CallExpr 0x14d82e438 <col:9, col:48> 'int'         |-ImplicitCastExpr 0x14d82e420 <col:9> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x14d82e3c0 <col:9> 'int ()' Function 0x14d82e308 'security_ptrace_access_check' 'int ()'         |-ImplicitCastExpr 0x14d82e468 <col:38> 'struct task_struct *' <LValueToRValue>         | `-DeclRefExpr 0x14d82e3e0 <col:38> 'struct task_struct *' lvalue ParmVar 0x14d80e248 'task' 'struct task_struct *'         `-ImplicitCastExpr 0x14d82e480 <col:44> 'unsigned int' <LValueToRValue>           `-DeclRefExpr 0x14d82e400 <col:44> 'unsigned int' lvalue ParmVar 0x14d80e2c8 'mode' 'unsigned int' ","20321":"`-FunctionDecl 0x136827608  line:1:9 invalid qemu_deliver_packet_iov 'int (int *, unsigned int, const struct iovec *, int, void *)'   |-ParmVarDecl 0x13680dd28 <col:33, col:49> col:49 invalid sender 'int *'   |-ParmVarDecl 0x13680dda8 <line:2:33, col:42> col:42 used flags 'unsigned int'   |-ParmVarDecl 0x13680e398 <line:3:33, col:53> col:53 used iov 'const struct iovec *'   |-ParmVarDecl 0x136827418 <line:4:33, col:37> col:37 used iovcnt 'int'   |-ParmVarDecl 0x136827498 <line:5:33, col:39> col:39 used opaque 'void *'   `-CompoundStmt 0x136829ad0 <line:6:1, line:34:1>     |-RecoveryExpr 0x136827aa8 <line:8:5, col:39> '<dependent type>' contains-errors lvalue     | |-UnaryExprOrTypeTraitExpr 0x136827a10 <col:5, col:12> 'unsigned long' contains-errors sizeof     | | `-RecoveryExpr 0x1368279f0 <col:12> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x136827a48 <col:19, col:39> 'int'     |   |-ImplicitCastExpr 0x136827a30 <col:19> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1368278a0 <col:19> 'int ()' Function 0x1368277e8 'iov_size' 'int ()'     |   |-ImplicitCastExpr 0x136827a78 <col:28> 'const struct iovec *' <LValueToRValue>     |   | `-DeclRefExpr 0x1368278c0 <col:28> 'const struct iovec *' lvalue ParmVar 0x13680e398 'iov' 'const struct iovec *'     |   `-ImplicitCastExpr 0x136827a90 <col:33> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x1368278e0 <col:33> 'int' lvalue ParmVar 0x136827418 'iovcnt' 'int'     |-DeclStmt 0x136827b58 <line:9:5, col:12>     | `-VarDecl 0x136827af0 <col:5, col:9> col:9 used ret 'int'     |-IfStmt 0x136827c80 <line:11:5, line:13:5>     | |-BinaryOperator 0x136827c00 <line:11:9, col:16> 'int' contains-errors '>'     | | |-RecoveryExpr 0x136827bc0 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x136827be0 <col:16> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x136827c68 <col:25, line:13:5>     |   `-ReturnStmt 0x136827c58 <line:12:9, col:16>     |     `-RecoveryExpr 0x136827c38 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x136827dc8 <line:15:5, line:17:5>     | |-CXXDependentScopeMemberExpr 0x136827d20 <line:15:9, col:13> '<dependent type>' contains-errors lvalue ->link_down     | | `-RecoveryExpr 0x136827d00 <col:9> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x136827db0 <col:24, line:17:5>     |   `-ReturnStmt 0x136827da0 <line:16:9, col:16>     |     `-RecoveryExpr 0x136827d80 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x136827ef8 <line:19:5, line:21:5>     | |-CXXDependentScopeMemberExpr 0x136827e68 <line:19:9, col:13> '<dependent type>' contains-errors lvalue ->receive_disabled     | | `-RecoveryExpr 0x136827e48 <col:9> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x136827ee0 <col:31, line:21:5>     |   `-ReturnStmt 0x136827ed0 <line:20:9, col:16>     |     `-IntegerLiteral 0x136827eb0 <col:16> 'int' 0     |-IfStmt 0x136829990 <line:23:5, line:27:5> has_else     | |-RecoveryExpr 0x136828018 <line:23:9, col:68> '_Bool' contains-errors     | |-CompoundStmt 0x1368282d8 <col:71, line:25:5>     | | `-BinaryOperator 0x1368282b8 <line:24:9, col:52> 'int' contains-errors '='     | |   |-DeclRefExpr 0x136828038 <col:9> 'int' lvalue Var 0x136827af0 'ret' 'int'     | |   `-CallExpr 0x136828280 <col:15, col:52> '<dependent type>' contains-errors     | |     |-CXXDependentScopeMemberExpr 0x136828218 <col:15, col:25> '<dependent type>' contains-errors lvalue ->receive_iov     | |     | `-CXXDependentScopeMemberExpr 0x1368281d0 <col:15, col:19> '<dependent type>' contains-errors lvalue ->info     | |     |   `-RecoveryExpr 0x1368281b0 <col:15> '<dependent type>' contains-errors lvalue     | |     |-RecoveryExpr 0x136828260 <col:37> '<dependent type>' contains-errors lvalue     | |     |-DeclRefExpr 0x136828118 <col:41> 'const struct iovec *' lvalue ParmVar 0x13680e398 'iov' 'const struct iovec *'     | |     `-DeclRefExpr 0x136828138 <col:46> 'int' lvalue ParmVar 0x136827418 'iovcnt' 'int'     | `-CompoundStmt 0x136829978 <line:25:12, line:27:5>     |   `-BinaryOperator 0x136829958 <line:26:9, col:53> 'int' contains-errors '='     |     |-DeclRefExpr 0x1368282f0 <col:9> 'int' lvalue Var 0x136827af0 'ret' 'int'     |     `-CallExpr 0x136829918 <col:15, col:53> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x136829800 <col:15> 'int ()' Function 0x136828338 'nc_sendv_compat' 'int ()'     |       |-RecoveryExpr 0x1368298f8 <col:31> '<dependent type>' contains-errors lvalue     |       |-DeclRefExpr 0x136829838 <col:35> 'const struct iovec *' lvalue ParmVar 0x13680e398 'iov' 'const struct iovec *'     |       |-DeclRefExpr 0x136829858 <col:40> 'int' lvalue ParmVar 0x136827418 'iovcnt' 'int'     |       `-DeclRefExpr 0x136829878 <col:48> 'unsigned int' lvalue ParmVar 0x13680dda8 'flags' 'unsigned int'     |-IfStmt 0x136829a68 <line:29:5, line:31:5>     | |-BinaryOperator 0x136829a18 <line:29:9, col:16> 'int' '=='     | | |-ImplicitCastExpr 0x136829a00 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x1368299c0 <col:9> 'int' lvalue Var 0x136827af0 'ret' 'int'     | | `-IntegerLiteral 0x1368299e0 <col:16> 'int' 0     | `-CompoundStmt 0x136829a58 <col:19, line:31:5>     `-ReturnStmt 0x136829ac0 <line:33:5, col:12>       `-ImplicitCastExpr 0x136829aa8 <col:12> 'int' <LValueToRValue>         `-DeclRefExpr 0x136829a88 <col:12> 'int' lvalue Var 0x136827af0 'ret' 'int' ","20447":"`-FunctionDecl 0x15700ddc8  line:1:1 invalid buf_slack 'int (const int *)'   |-ParmVarDecl 0x15700dcf0 <col:11, col:24> col:24 invalid buf 'const int *'   `-CompoundStmt 0x15700e190 <line:2:1, line:7:1>     `-IfStmt 0x15700e160 <line:3:3, line:6:46> has_else       |-UnaryOperator 0x15700def8 <line:3:7, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-ImplicitCastExpr 0x15700dee0 <col:8, col:13> '<dependent type>' contains-errors <LValueToRValue>       |   `-CXXDependentScopeMemberExpr 0x15700de98 <col:8, col:13> '<dependent type>' contains-errors lvalue ->tail       |     `-RecoveryExpr 0x15700de78 <col:8> '<dependent type>' contains-errors lvalue       |-ReturnStmt 0x15700df30 <line:4:5, col:12>       | `-IntegerLiteral 0x15700df10 <col:12> 'int' 0       `-ReturnStmt 0x15700e150 <line:6:5, col:46>         `-CallExpr 0x15700e128 <col:12, col:46> '<dependent type>' contains-errors           |-DeclRefExpr 0x15700e0a0 <col:12> 'int ()' Function 0x15700dfe8 'CHUNK_REMAINING_CAPACITY' 'int ()'           `-CXXDependentScopeMemberExpr 0x15700e0e0 <col:37, col:42> '<dependent type>' contains-errors lvalue ->tail             `-RecoveryExpr 0x15700e0c0 <col:37> '<dependent type>' contains-errors lvalue ","20585":"`-FunctionDecl 0x15a9285f0  line:1:13 invalid do_utfreadchar_invalid 'void (int *)' static   |-ParmVarDecl 0x15a928528 <col:36, col:53> col:53 invalid common 'int *'   `-CompoundStmt 0x14a8093d0 <line:2:1, line:29:1>     |-DeclStmt 0x15a928958 <line:5:1, col:35>     | |-RecordDecl 0x15a9286a0 <col:1, col:8> col:8 struct sljit_jump     | `-VarDecl 0x15a9288d8 <col:1, col:34> col:20 used exit_invalid 'struct sljit_jump *[3]'     |-CallExpr 0x15a928bb8 <line:7:1, col:47> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15a928ad0 <col:1> 'int ()' Function 0x15a928a18 'sljit_emit_fast_enter' 'int ()'     | |-RecoveryExpr 0x15a928b78 <col:23> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x15a928b98 <col:33> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x15a928b20 <col:46> 'int' 0     |-BinaryOperator 0x15a9425e0 <line:10:1, col:70> 'struct sljit_jump *' contains-errors '='     | |-ArraySubscriptExpr 0x15a942518 <col:1, col:15> 'struct sljit_jump *' lvalue     | | |-ImplicitCastExpr 0x15a942500 <col:1> 'struct sljit_jump **' <ArrayToPointerDecay>     | | | `-DeclRefExpr 0x15a942200 <col:1> 'struct sljit_jump *[3]' lvalue Var 0x15a9288d8 'exit_invalid' 'struct sljit_jump *[3]'     | | `-IntegerLiteral 0x15a942220 <col:14> 'int' 0     | `-CallExpr 0x15a942598 <col:19, col:70> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15a9423b8 <col:19> 'int ()' Function 0x15a942300 'CMP' 'int ()'     |   |-RecoveryExpr 0x15a942538 <col:23> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x15a942558 <col:44> '<dependent type>' contains-errors lvalue     |   |-IntegerLiteral 0x15a942408 <col:50> 'int' 0     |   |-RecoveryExpr 0x15a942578 <col:53> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x15a942440 <col:64> 'int' 56320     |-BinaryOperator 0x15a9428a0 <line:11:1, col:66> 'struct sljit_jump *' contains-errors '='     | |-ArraySubscriptExpr 0x15a9427d8 <col:1, col:15> 'struct sljit_jump *' lvalue     | | |-ImplicitCastExpr 0x15a9427c0 <col:1> 'struct sljit_jump **' <ArrayToPointerDecay>     | | | `-DeclRefExpr 0x15a942600 <col:1> 'struct sljit_jump *[3]' lvalue Var 0x15a9288d8 'exit_invalid' 'struct sljit_jump *[3]'     | | `-IntegerLiteral 0x15a942620 <col:14> 'int' 1     | `-CallExpr 0x15a942858 <col:19, col:66> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15a942678 <col:19> 'int ()' Function 0x15a942300 'CMP' 'int ()'     |   |-RecoveryExpr 0x15a9427f8 <col:23> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x15a942818 <col:44> '<dependent type>' contains-errors lvalue     |   |-IntegerLiteral 0x15a9426c8 <col:53> 'int' 0     |   |-RecoveryExpr 0x15a942838 <col:56> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x15a942700 <col:65> 'int' 0     |-CallExpr 0x15a942df0 <line:13:1, col:58> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15a9429a0 <col:1> 'int ()' Function 0x15a9428e8 'OP1' 'int ()'     | |-RecoveryExpr 0x15a942d28 <col:5> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x15a942d48 <col:16> '<dependent type>' contains-errors lvalue     | |-IntegerLiteral 0x15a9429f0 <col:22> 'int' 0     | |-CallExpr 0x15a942d88 <col:25, col:43> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x15a942af0 <col:25> 'int ()' Function 0x15a942a38 'SLJIT_MEM1' 'int ()'     | | `-RecoveryExpr 0x15a942d68 <col:36> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x15a942dc8 <col:46, col:57> 'int'     |   |-ImplicitCastExpr 0x15a942db0 <col:46> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x15a942c30 <col:46> 'int ()' Function 0x15a942b78 'IN_UCHARS' 'int ()'     |   `-IntegerLiteral 0x15a942c50 <col:56> 'int' 0     |-CallExpr 0x15a9430d0 <line:14:1, col:47> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15a942f18 <col:1> 'int ()' Function 0x15a942e60 'OP2' 'int ()'     | |-RecoveryExpr 0x15a943050 <col:5> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x15a943070 <col:16> '<dependent type>' contains-errors lvalue     | |-IntegerLiteral 0x15a942f68 <col:22> 'int' 0     | |-RecoveryExpr 0x15a943090 <col:25> '<dependent type>' contains-errors lvalue     | |-IntegerLiteral 0x15a942fa0 <col:31> 'int' 0     | |-RecoveryExpr 0x15a9430b0 <col:34> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x15a942fd8 <col:45> 'int' 10     |-CallExpr 0x14a809130 <line:24:1, col:25> 'int'     | |-ImplicitCastExpr 0x14a809118 <col:1> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14a809080 <col:1> 'int ()' Function 0x14a808fc8 'JUMPHERE' 'int ()'     | `-ImplicitCastExpr 0x14a809158 <col:10, col:24> 'struct sljit_jump *' <LValueToRValue>     |   `-ArraySubscriptExpr 0x14a8090f8 <col:10, col:24> 'struct sljit_jump *' lvalue     |     |-ImplicitCastExpr 0x14a8090e0 <col:10> 'struct sljit_jump **' <ArrayToPointerDecay>     |     | `-DeclRefExpr 0x14a8090a0 <col:10> 'struct sljit_jump *[3]' lvalue Var 0x15a9288d8 'exit_invalid' 'struct sljit_jump *[3]'     |     `-IntegerLiteral 0x14a8090c0 <col:23> 'int' 0     |-CallExpr 0x14a809220 <line:25:1, col:25> 'int'     | |-ImplicitCastExpr 0x14a809208 <col:1> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14a809170 <col:1> 'int ()' Function 0x14a808fc8 'JUMPHERE' 'int ()'     | `-ImplicitCastExpr 0x14a809248 <col:10, col:24> 'struct sljit_jump *' <LValueToRValue>     |   `-ArraySubscriptExpr 0x14a8091e8 <col:10, col:24> 'struct sljit_jump *' lvalue     |     |-ImplicitCastExpr 0x14a8091d0 <col:10> 'struct sljit_jump **' <ArrayToPointerDecay>     |     | `-DeclRefExpr 0x14a809190 <col:10> 'struct sljit_jump *[3]' lvalue Var 0x15a9288d8 'exit_invalid' 'struct sljit_jump *[3]'     |     `-IntegerLiteral 0x14a8091b0 <col:23> 'int' 1     `-CallExpr 0x14a809310 <line:26:1, col:25> 'int'       |-ImplicitCastExpr 0x14a8092f8 <col:1> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x14a809260 <col:1> 'int ()' Function 0x14a808fc8 'JUMPHERE' 'int ()'       `-ImplicitCastExpr 0x14a809338 <col:10, col:24> 'struct sljit_jump *' <LValueToRValue>         `-ArraySubscriptExpr 0x14a8092d8 <col:10, col:24> 'struct sljit_jump *' lvalue           |-ImplicitCastExpr 0x14a8092c0 <col:10> 'struct sljit_jump **' <ArrayToPointerDecay>           | `-DeclRefExpr 0x14a809280 <col:10> 'struct sljit_jump *[3]' lvalue Var 0x15a9288d8 'exit_invalid' 'struct sljit_jump *[3]'           `-IntegerLiteral 0x14a8092a0 <col:23> 'int' 2 ","21119":"`-FunctionDecl 0x12c1281c8  line:1:13 invalid exist_file_dir 'int (const char *)' static   |-ParmVarDecl 0x12c1280f0 <col:28, col:40> col:40 used path 'const char *'   `-CompoundStmt 0x12c141e88 <line:2:1, line:12:1>     |-DeclStmt 0x12c141818 <line:3:5, col:20>     | |-RecordDecl 0x12c128278 <col:5, col:12> col:12 struct stat     | `-VarDecl 0x12c128378 <col:5, col:17> col:17 invalid buf 'struct stat'     `-IfStmt 0x12c141e50 <line:4:5, line:10:5>       |-BinaryOperator 0x12c141a58 <line:4:9, col:29> 'int' contains-errors '=='       | |-CallExpr 0x12c141a08 <col:9, col:24> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x12c141990 <col:9> 'int ()' Function 0x12c1418d8 'stat' 'int ()'       | | |-DeclRefExpr 0x12c1419b0 <col:14> 'const char *' lvalue ParmVar 0x12c1280f0 'path' 'const char *'       | | `-UnaryOperator 0x12c1419f0 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow       | |   `-RecoveryExpr 0x12c1419d0 <col:21> '<dependent type>' contains-errors lvalue       | `-IntegerLiteral 0x12c141a38 <col:29> 'int' 0       `-CompoundStmt 0x12c141e38 <line:5:5, line:10:5>         `-IfStmt 0x12c141e18 <line:6:9, line:9:9>           |-BinaryOperator 0x12c141d98 <line:6:13, col:56> 'int' contains-errors '||'           | |-CallExpr 0x12c141be0 <col:13, col:32> '<dependent type>' contains-errors           | | |-DeclRefExpr 0x12c141b58 <col:13> 'int ()' Function 0x12c141aa0 'S_ISDIR' 'int ()'           | | `-CXXDependentScopeMemberExpr 0x12c141b98 <col:21, col:25> '<dependent type>' contains-errors lvalue .st_mode           | |   `-RecoveryExpr 0x12c141b78 <col:21> '<dependent type>' contains-errors lvalue           | `-CallExpr 0x12c141d70 <col:37, col:56> '<dependent type>' contains-errors           |   |-DeclRefExpr 0x12c141ce8 <col:37> 'int ()' Function 0x12c141c30 'S_ISREG' 'int ()'           |   `-CXXDependentScopeMemberExpr 0x12c141d28 <col:45, col:49> '<dependent type>' contains-errors lvalue .st_mode           |     `-RecoveryExpr 0x12c141d08 <col:45> '<dependent type>' contains-errors lvalue           `-CompoundStmt 0x12c141e00 <line:7:9, line:9:9>             `-ReturnStmt 0x12c141df0 <line:8:13, col:20>               `-RecoveryExpr 0x12c141dd0 <col:20> '<dependent type>' contains-errors lvalue ","20563":"`-FunctionDecl 0x14f00e350  line:1:6 ring_buffer_record_off 'void (struct ring_buffer *)'   |-ParmVarDecl 0x14f00e248 <col:29, col:49> col:49 used buffer 'struct ring_buffer *'   `-CompoundStmt 0x14f026d08 <line:2:1, line:10:1>     |-DeclStmt 0x14f0266c8 <line:3:2, col:17>     | `-VarDecl 0x14f026660 <col:2, col:15> col:15 used rd 'unsigned int'     |-DeclStmt 0x14f026760 <line:4:2, col:21>     | `-VarDecl 0x14f0266f8 <col:2, col:15> col:15 used new_rd 'unsigned int'     `-DoStmt 0x14f026ce8 <line:6:2, line:9:69>       |-CompoundStmt 0x14f026a98 <line:6:5, line:9:2>       | |-BinaryOperator 0x14f026980 <line:7:3, col:44> 'unsigned int' contains-errors '='       | | |-DeclRefExpr 0x14f026778 <col:3> 'unsigned int' lvalue Var 0x14f026660 'rd' 'unsigned int'       | | `-CallExpr 0x14f026958 <col:8, col:44> '<dependent type>' contains-errors       | |   |-DeclRefExpr 0x14f0268c0 <col:8> 'int ()' Function 0x14f026808 'atomic_read' 'int ()'       | |   `-UnaryOperator 0x14f026940 <col:20, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow       | |     `-RecoveryExpr 0x14f026918 <col:21, col:29> '<dependent type>' contains-errors lvalue       | |       `-DeclRefExpr 0x14f0268e0 <col:21> 'struct ring_buffer *' lvalue ParmVar 0x14f00e248 'buffer' 'struct ring_buffer *'       | `-BinaryOperator 0x14f026a78 <line:8:3, col:17> 'unsigned int' contains-errors '='       |   |-DeclRefExpr 0x14f0269a0 <col:3> 'unsigned int' lvalue Var 0x14f0266f8 'new_rd' 'unsigned int'       |   `-BinaryOperator 0x14f026a58 <col:12, col:17> '<dependent type>' contains-errors '|'       |     |-DeclRefExpr 0x14f0269c0 <col:12> 'unsigned int' lvalue Var 0x14f026660 'rd' 'unsigned int'       |     `-RecoveryExpr 0x14f026a38 <col:17> '<dependent type>' contains-errors lvalue       `-BinaryOperator 0x14f026cc8 <line:9:11, col:67> 'int' contains-errors '!='         |-CallExpr 0x14f026c70 <col:11, col:62> '<dependent type>' contains-errors         | |-DeclRefExpr 0x14f026b98 <col:11> 'int ()' Function 0x14f026ae0 'atomic_cmpxchg' 'int ()'         | |-UnaryOperator 0x14f026c18 <col:26, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow         | | `-RecoveryExpr 0x14f026bf0 <col:27, col:35> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x14f026bb8 <col:27> 'struct ring_buffer *' lvalue ParmVar 0x14f00e248 'buffer' 'struct ring_buffer *'         | |-DeclRefExpr 0x14f026c30 <col:52> 'unsigned int' lvalue Var 0x14f026660 'rd' 'unsigned int'         | `-DeclRefExpr 0x14f026c50 <col:56> 'unsigned int' lvalue Var 0x14f0266f8 'new_rd' 'unsigned int'         `-DeclRefExpr 0x14f026ca8 <col:67> 'unsigned int' lvalue Var 0x14f026660 'rd' 'unsigned int' ","20424":"`-FunctionDecl 0x1050b4548  line:1:12 kvm_ioctl_create_device 'int (struct kvm *, struct kvm_create_device *)' static   |-ParmVarDecl 0x105097e48 <col:36, col:48> col:48 used kvm 'struct kvm *'   |-ParmVarDecl 0x1050b4428 <line:2:8, col:34> col:34 used cd 'struct kvm_create_device *'   `-CompoundStmt 0x12009af10 <line:3:1, line:51:1>     |-DeclStmt 0x1050b4888 <line:4:2, col:35>     | |-RecordDecl 0x1050b4648 <col:2, col:9> col:9 struct kvm_device_ops     | `-VarDecl 0x1050b47b8 <col:2, col:31> col:25 used ops 'struct kvm_device_ops *' cinit     |   `-RecoveryExpr 0x1050b4850 <col:31> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x1050b4a88 <line:5:2, col:24>     | |-RecordDecl 0x1050b48a0 <col:2, col:9> col:9 struct kvm_device     | `-VarDecl 0x1050b4a08 <col:2, col:21> col:21 used dev 'struct kvm_device *'     |-DeclStmt 0x1050b4b20 <line:7:2, col:9>     | `-VarDecl 0x1050b4ab8 <col:2, col:6> col:6 used ret 'int'     |-IfStmt 0x1050b4e40 <line:9:2, line:10:11>     | |-BinaryOperator 0x1050b4d78 <line:9:6, col:49> 'int' contains-errors '>='     | | |-RecoveryExpr 0x1050b4b70 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x1050b4b38 <col:6> 'struct kvm_create_device *' lvalue ParmVar 0x1050b4428 'cd' 'struct kvm_create_device *'     | | `-CallExpr 0x1050b4d50 <col:18, col:49> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x1050b4cb0 <col:18> 'int ()' Function 0x1050b4bf8 'ARRAY_SIZE' 'int ()'     | |   `-RecoveryExpr 0x1050b4d30 <col:29> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1050b4e30 <line:10:3, col:11>     |   `-UnaryOperator 0x1050b4e18 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x1050b4e00 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x1050b4de0 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1050b5038 <line:13:2, line:14:11>     | |-BinaryOperator 0x1050b4f70 <line:13:6, col:13> 'int' contains-errors '=='     | | |-DeclRefExpr 0x1050b4ef8 <col:6> 'struct kvm_device_ops *' contains-errors lvalue Var 0x1050b47b8 'ops' 'struct kvm_device_ops *'     | | `-RecoveryExpr 0x1050b4f50 <col:13> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1050b5028 <line:14:3, col:11>     |   `-UnaryOperator 0x1050b5010 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x1050b4ff8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x1050b4fd8 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1050b50c0 <line:16:2, line:17:10>     | |-DeclRefExpr 0x1050b5070 <line:16:6> 'int' lvalue Var 0x1050b4ab8 'ret' 'int'     | `-ReturnStmt 0x1050b50b0 <line:17:3, col:10>     |   `-IntegerLiteral 0x1050b5090 <col:10> 'int' 0     |-IfStmt 0x1050b5380 <line:20:2, line:21:11>     | |-UnaryOperator 0x1050b52c0 <line:20:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1050b52a8 <col:7> 'struct kvm_device *' <LValueToRValue>     | |   `-DeclRefExpr 0x1050b5288 <col:7> 'struct kvm_device *' lvalue Var 0x1050b4a08 'dev' 'struct kvm_device *'     | `-ReturnStmt 0x1050b5370 <line:21:3, col:11>     |   `-UnaryOperator 0x1050b5358 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x1050b5340 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x1050b5320 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x120042020 <line:23:2, col:13> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1050b53d8 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1050b53a0 <col:2> 'struct kvm_device *' lvalue Var 0x1050b4a08 'dev' 'struct kvm_device *'     | `-DeclRefExpr 0x120042000 <col:13> 'struct kvm_device_ops *' contains-errors lvalue Var 0x1050b47b8 'ops' 'struct kvm_device_ops *'     |-BinaryOperator 0x1200420c0 <line:24:2, col:13> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x120042078 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x120042040 <col:2> 'struct kvm_device *' lvalue Var 0x1050b4a08 'dev' 'struct kvm_device *'     | `-DeclRefExpr 0x1200420a0 <col:13> 'struct kvm *' lvalue ParmVar 0x105097e48 'kvm' 'struct kvm *'     |-CallExpr 0x120042258 <line:26:2, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1200421c0 <col:2> 'int ()' Function 0x120042108 'mutex_lock' 'int ()'     | `-UnaryOperator 0x120042240 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x120042218 <col:14, col:19> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1200421e0 <col:14> 'struct kvm *' lvalue ParmVar 0x105097e48 'kvm' 'struct kvm *'     |-BinaryOperator 0x1200423b0 <line:27:2, col:33> 'int' contains-errors '='     | |-DeclRefExpr 0x120042280 <col:2> 'int' lvalue Var 0x1050b4ab8 'ret' 'int'     | `-CallExpr 0x120042380 <col:8, col:33> '<dependent type>' contains-errors     |   |-RecoveryExpr 0x1200422d8 <col:8, col:13> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x1200422a0 <col:8> 'struct kvm_device_ops *' contains-errors lvalue Var 0x1050b47b8 'ops' 'struct kvm_device_ops *'     |   |-DeclRefExpr 0x120042300 <col:20> 'struct kvm_device *' lvalue Var 0x1050b4a08 'dev' 'struct kvm_device *'     |   `-RecoveryExpr 0x120042358 <col:25, col:29> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x120042320 <col:25> 'struct kvm_create_device *' lvalue ParmVar 0x1050b4428 'cd' 'struct kvm_create_device *'     |-IfStmt 0x120042808 <line:28:2, line:32:2>     | |-BinaryOperator 0x120042428 <line:28:6, col:12> 'int' '<'     | | |-ImplicitCastExpr 0x120042410 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x1200423d0 <col:6> 'int' lvalue Var 0x1050b4ab8 'ret' 'int'     | | `-IntegerLiteral 0x1200423f0 <col:12> 'int' 0     | `-CompoundStmt 0x1200427e0 <col:15, line:32:2>     |   |-CallExpr 0x1200425c0 <line:29:3, col:26> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x120042528 <col:3> 'int ()' Function 0x120042470 'mutex_unlock' 'int ()'     |   | `-UnaryOperator 0x1200425a8 <col:16, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x120042580 <col:17, col:22> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x120042548 <col:17> 'struct kvm *' lvalue ParmVar 0x105097e48 'kvm' 'struct kvm *'     |   |-CallExpr 0x120042758 <line:30:3, col:12> 'int'     |   | |-ImplicitCastExpr 0x120042740 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x1200426c8 <col:3> 'int ()' Function 0x120042610 'kfree' 'int ()'     |   | `-ImplicitCastExpr 0x120042780 <col:9> 'struct kvm_device *' <LValueToRValue>     |   |   `-DeclRefExpr 0x1200426e8 <col:9> 'struct kvm_device *' lvalue Var 0x1050b4a08 'dev' 'struct kvm_device *'     |   `-ReturnStmt 0x1200427d0 <line:31:3, col:10>     |     `-ImplicitCastExpr 0x1200427b8 <col:10> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x120042798 <col:10> 'int' lvalue Var 0x1050b4ab8 'ret' 'int'     |-CallExpr 0x120042a18 <line:33:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x120042908 <col:2> 'int ()' Function 0x120042850 'list_add' 'int ()'     | |-UnaryOperator 0x120042988 <col:11, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x120042960 <col:12, col:17> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x120042928 <col:12> 'struct kvm_device *' lvalue Var 0x1050b4a08 'dev' 'struct kvm_device *'     | `-UnaryOperator 0x120042a00 <col:26, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1200429d8 <col:27, col:32> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1200429a0 <col:27> 'struct kvm *' lvalue ParmVar 0x105097e48 'kvm' 'struct kvm *'     |-CallExpr 0x120042ae0 <line:34:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x120042a48 <col:2> 'int ()' Function 0x120042470 'mutex_unlock' 'int ()'     | `-UnaryOperator 0x120042ac8 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x120042aa0 <col:16, col:21> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x120042a68 <col:16> 'struct kvm *' lvalue ParmVar 0x105097e48 'kvm' 'struct kvm *'     |-IfStmt 0x120042c10 <line:36:2, line:37:16>     | |-RecoveryExpr 0x120042b40 <line:36:6, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x120042b08 <col:6> 'struct kvm_device_ops *' contains-errors lvalue Var 0x1050b47b8 'ops' 'struct kvm_device_ops *'     | `-CallExpr 0x120042be8 <line:37:3, col:16> '<dependent type>' contains-errors     |   |-RecoveryExpr 0x120042ba0 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x120042b68 <col:3> 'struct kvm_device_ops *' contains-errors lvalue Var 0x1050b47b8 'ops' 'struct kvm_device_ops *'     |   `-DeclRefExpr 0x120042bc8 <col:13> 'struct kvm_device *' lvalue Var 0x1050b4a08 'dev' 'struct kvm_device *'     |-IfStmt 0x12009aca8 <line:40:2, line:46:2>     | |-BinaryOperator 0x120042e28 <line:40:6, col:12> 'int' '<'     | | |-ImplicitCastExpr 0x120042e10 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x120042dd0 <col:6> 'int' lvalue Var 0x1050b4ab8 'ret' 'int'     | | `-IntegerLiteral 0x120042df0 <col:12> 'int' 0     | `-CompoundStmt 0x12009ac70 <col:15, line:46:2>     |   |-CallExpr 0x120042ee0 <line:41:3, col:24> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x120042e48 <col:3> 'int ()' Function 0x120042108 'mutex_lock' 'int ()'     |   | `-UnaryOperator 0x120042ec8 <col:14, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x120042ea0 <col:15, col:20> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x120042e68 <col:15> 'struct kvm *' lvalue ParmVar 0x105097e48 'kvm' 'struct kvm *'     |   |-CallExpr 0x12009aa98 <line:42:3, col:25> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12009aa00 <col:3> 'int ()' Function 0x120042f30 'list_del' 'int ()'     |   | `-UnaryOperator 0x12009aa80 <col:12, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x12009aa58 <col:13, col:18> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x12009aa20 <col:13> 'struct kvm_device *' lvalue Var 0x1050b4a08 'dev' 'struct kvm_device *'     |   |-CallExpr 0x12009ab58 <line:43:3, col:26> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12009aac0 <col:3> 'int ()' Function 0x120042470 'mutex_unlock' 'int ()'     |   | `-UnaryOperator 0x12009ab40 <col:16, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x12009ab18 <col:17, col:22> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x12009aae0 <col:17> 'struct kvm *' lvalue ParmVar 0x105097e48 'kvm' 'struct kvm *'     |   |-CallExpr 0x12009ac00 <line:44:3, col:19> '<dependent type>' contains-errors     |   | |-RecoveryExpr 0x12009abb8 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x12009ab80 <col:3> 'struct kvm_device_ops *' contains-errors lvalue Var 0x1050b47b8 'ops' 'struct kvm_device_ops *'     |   | `-DeclRefExpr 0x12009abe0 <col:16> 'struct kvm_device *' lvalue Var 0x1050b4a08 'dev' 'struct kvm_device *'     |   `-ReturnStmt 0x12009ac60 <line:45:3, col:10>     |     `-ImplicitCastExpr 0x12009ac48 <col:10> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x12009ac28 <col:10> 'int' lvalue Var 0x1050b4ab8 'ret' 'int'     |-CallExpr 0x12009ae00 <line:48:2, col:17> 'int'     | |-ImplicitCastExpr 0x12009ade8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12009ada8 <col:2> 'int ()' Function 0x12009acf0 'kvm_get_kvm' 'int ()'     | `-ImplicitCastExpr 0x12009ae28 <col:14> 'struct kvm *' <LValueToRValue>     |   `-DeclRefExpr 0x12009adc8 <col:14> 'struct kvm *' lvalue ParmVar 0x105097e48 'kvm' 'struct kvm *'     |-BinaryOperator 0x12009aec0 <line:49:2, col:11> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12009ae78 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12009ae40 <col:2> 'struct kvm_create_device *' lvalue ParmVar 0x1050b4428 'cd' 'struct kvm_create_device *'     | `-DeclRefExpr 0x12009aea0 <col:11> 'int' lvalue Var 0x1050b4ab8 'ret' 'int'     `-ReturnStmt 0x12009af00 <line:50:2, col:9>       `-IntegerLiteral 0x12009aee0 <col:9> 'int' 0 ","21198":"`-FunctionDecl 0x14000dee8  line:1:26 invalid ReadPropertyMSBLong 'int (const unsigned char **, int *)' static inline   |-ParmVarDecl 0x14000dd40 <col:46, col:68> col:68 used p 'const unsigned char **'   |-ParmVarDecl 0x14000de08 <line:2:3, col:11> col:11 invalid length 'int *'   `-CompoundStmt 0x1400285e0 <line:3:1, line:39:1>     |-DeclStmt 0x14000e1e8 <line:4:3, line:11:12>     | |-RecordDecl 0x14000dfa0 <line:4:3, line:11:3> line:4:3 union definition     | | |-FieldDecl 0x14000e058 <line:6:5, line:7:7> col:7 referenced unsigned_value 'unsigned int'     | | `-FieldDecl 0x14000e0c0 <line:9:5, line:10:7> col:7 referenced signed_value 'int'     | `-VarDecl 0x14000e168 <line:4:3, line:11:5> col:5 used quantum 'union (unnamed union at dataset_diviso_filec\/func6368_vuln.c:4:3)':'union (unnamed at dataset_diviso_filec\/func6368_vuln.c:4:3)'     |-DeclStmt 0x14000e280 <line:13:3, line:14:6>     | `-VarDecl 0x14000e218 <line:13:3, line:14:5> col:5 used c 'int'     |-DeclStmt 0x14000e318 <line:16:3, line:17:6>     | `-VarDecl 0x14000e2b0 <line:16:3, line:17:5> col:5 invalid i 'int' register     |-DeclStmt 0x140027a68 <line:19:3, line:20:14>     | `-VarDecl 0x140027a00 <line:19:3, line:20:13> col:5 used buffer 'unsigned char[4]'     |-UnaryExprOrTypeTraitExpr 0x140027ad8 <line:22:3, line:23:5> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x140027ab8 <col:5> '<dependent type>' contains-errors lvalue     |-IfStmt 0x140027bf0 <line:25:3, line:26:14>     | |-BinaryOperator 0x140027b68 <line:25:7, col:17> 'int' contains-errors '<'     | | |-UnaryOperator 0x140027b30 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow     | | | `-ImplicitCastExpr 0x140027b18 <col:8> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-RecoveryExpr 0x140027af8 <col:8> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x140027b48 <col:17> 'int' 4     | `-ReturnStmt 0x140027be0 <line:26:5, col:14>     |   `-ParenExpr 0x140027bc0 <col:11, col:14> 'int'     |     `-UnaryOperator 0x140027ba8 <col:12, col:13> 'int' prefix '-'     |       `-IntegerLiteral 0x140027b88 <col:13> 'int' 1     |-ForStmt 0x140028090 <line:27:3, line:32:3>     | |-BinaryOperator 0x140027c50 <line:27:8, col:10> '<dependent type>' contains-errors '='     | | |-RecoveryExpr 0x140027c10 <col:8> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x140027c30 <col:10> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x140027cb0 <col:13, col:17> 'int' contains-errors '<'     | | |-RecoveryExpr 0x140027c70 <col:13> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x140027c90 <col:17> 'int' 4     | |-UnaryOperator 0x140027cf0 <col:20, col:21> '<dependent type>' contains-errors postfix '++' cannot overflow     | | `-RecoveryExpr 0x140027cd0 <col:20> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x140028068 <line:28:3, line:32:3>     |   |-BinaryOperator 0x140027e60 <line:29:5, col:21> 'int' '='     |   | |-DeclRefExpr 0x140027d08 <col:5> 'int' lvalue Var 0x14000e218 'c' 'int'     |   | `-CStyleCastExpr 0x140027e38 <col:7, col:21> 'int' <IntegralCast>     |   |   `-ImplicitCastExpr 0x140027e20 <col:13, col:21> 'unsigned char' <LValueToRValue> part_of_explicit_cast     |   |     `-ParenExpr 0x140027e00 <col:13, col:21> 'const unsigned char' lvalue     |   |       `-UnaryOperator 0x140027db0 <col:14, col:19> 'const unsigned char' lvalue prefix '*' cannot overflow     |   |         `-UnaryOperator 0x140027d98 <col:15, col:19> 'const unsigned char *' postfix '++'     |   |           `-ParenExpr 0x140027d78 <col:15, col:18> 'const unsigned char *' lvalue     |   |             `-UnaryOperator 0x140027d60 <col:16, col:17> 'const unsigned char *' lvalue prefix '*' cannot overflow     |   |               `-ImplicitCastExpr 0x140027d48 <col:17> 'const unsigned char **' <LValueToRValue>     |   |                 `-DeclRefExpr 0x140027d28 <col:17> 'const unsigned char **' lvalue ParmVar 0x14000dd40 'p' 'const unsigned char **'     |   |-UnaryOperator 0x140027ef0 <line:30:5, col:14> '<dependent type>' contains-errors postfix '--' cannot overflow     |   | `-ParenExpr 0x140027ed0 <col:5, col:13> '<dependent type>' contains-errors     |   |   `-UnaryOperator 0x140027eb8 <col:6, col:7> '<dependent type>' contains-errors prefix '*' cannot overflow     |   |     `-ImplicitCastExpr 0x140027ea0 <col:7> '<dependent type>' contains-errors <LValueToRValue>     |   |       `-RecoveryExpr 0x140027e80 <col:7> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x140028048 <line:31:5, col:31> '<dependent type>' contains-errors '='     |     |-ArraySubscriptExpr 0x140027fb0 <col:5, col:13> '<dependent type>' contains-errors lvalue     |     | |-ImplicitCastExpr 0x140027f80 <col:5> 'unsigned char *' <ArrayToPointerDecay>     |     | | `-DeclRefExpr 0x140027f08 <col:5> 'unsigned char[4]' lvalue Var 0x140027a00 'buffer' 'unsigned char[4]'     |     | `-ImplicitCastExpr 0x140027f98 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |     |   `-RecoveryExpr 0x140027f28 <col:12> '<dependent type>' contains-errors lvalue     |     `-CStyleCastExpr 0x140028020 <col:15, col:31> 'unsigned char' <IntegralCast>     |       `-ImplicitCastExpr 0x140028008 <col:31> 'int' <LValueToRValue> part_of_explicit_cast     |         `-DeclRefExpr 0x140027fd0 <col:31> 'int' lvalue Var 0x14000e218 'c' 'int'     `-ReturnStmt 0x1400285d0 <line:38:3, col:30>       `-ImplicitCastExpr 0x1400285b8 <col:9, col:30> 'int' <LValueToRValue>         `-ParenExpr 0x140028598 <col:9, col:30> 'int' lvalue           `-MemberExpr 0x140028568 <col:10, col:18> 'int' lvalue .signed_value 0x14000e0c0             `-DeclRefExpr 0x140028548 <col:10> 'union (unnamed union at dataset_diviso_filec\/func6368_vuln.c:4:3)':'union (unnamed at dataset_diviso_filec\/func6368_vuln.c:4:3)' lvalue Var 0x14000e168 'quantum' 'union (unnamed union at dataset_diviso_filec\/func6368_vuln.c:4:3)':'union (unnamed at dataset_diviso_filec\/func6368_vuln.c:4:3)' ","20583":"`-FunctionDecl 0x14180dfa8  line:1:5 invalid x9_62_test_internal 'int (int *, int, const char *, const char *)'   |-ParmVarDecl 0x14180dd28 <col:25, col:30> col:30 invalid out 'int *'   |-ParmVarDecl 0x14180dda8 <col:35, col:39> col:39 used nid 'int'   |-ParmVarDecl 0x14180de28 <col:44, col:56> col:56 used r_in 'const char *'   |-ParmVarDecl 0x14180dea8 <col:62, col:74> col:74 used s_in 'const char *'   `-CompoundStmt 0x1408eed98 <line:2:1, line:62:1>     |-DeclStmt 0x14180e110 <line:3:5, col:16>     | `-VarDecl 0x14180e088 <col:5, col:15> col:9 used ret 'int' cinit     |   `-IntegerLiteral 0x14180e0f0 <col:15> 'int' 0     |-DeclStmt 0x14180e2c0 <line:4:5, col:33>     | `-VarDecl 0x14180e1b0 <col:5, col:28> col:16 used message 'const char[4]' cinit     |   `-StringLiteral 0x14180e260 <col:28> 'const char[4]' \"STR\"     |-DeclStmt 0x141827400 <line:5:5, col:29>     | `-VarDecl 0x14180e388 <col:5, col:28> col:19 used digest 'unsigned char[20]'     |-DeclStmt 0x1418274d0 <line:6:5, col:30>     | `-VarDecl 0x141827430 <col:5, col:29> col:18 used dgst_len 'unsigned int' cinit     |   `-ImplicitCastExpr 0x1418274b8 <col:29> 'unsigned int' <IntegralCast>     |     `-IntegerLiteral 0x141827498 <col:29> 'int' 0     |-CallExpr 0x141827800 <line:12:5, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x141827750 <col:5> 'int ()' Function 0x141827698 'EVP_MD_CTX_init' 'int ()'     | `-UnaryOperator 0x1418277e8 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1418277c8 <col:22> '<dependent type>' contains-errors lvalue     |-CallExpr 0x141827b68 <line:14:5, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x141827908 <col:5> 'int ()' Function 0x141827850 'EVP_DigestInit' 'int ()'     | |-UnaryOperator 0x141827b18 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x141827af8 <col:21> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x141827b48 <col:29, col:39> 'int'     |   `-ImplicitCastExpr 0x141827b30 <col:29> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x141827a38 <col:29> 'int ()' Function 0x141827980 'EVP_ecdsa' 'int ()'     |-CallExpr 0x141827e60 <line:15:5, col:55> '<dependent type>' contains-errors     | |-DeclRefExpr 0x141827c78 <col:5> 'int ()' Function 0x141827bc0 'EVP_DigestUpdate' 'int ()'     | |-UnaryOperator 0x141827df0 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x141827dd0 <col:23> '<dependent type>' contains-errors lvalue     | |-CStyleCastExpr 0x141827e38 <col:31, col:45> 'const void *' <BitCast>     | | `-ImplicitCastExpr 0x141827e20 <col:45> 'const char *' <ArrayToPointerDecay> part_of_explicit_cast     | |   `-DeclRefExpr 0x141827cc8 <col:45> 'const char[4]' lvalue Var 0x14180e1b0 'message' 'const char[4]'     | `-IntegerLiteral 0x141827d78 <col:54> 'int' 3     |-CallExpr 0x1418282e0 <line:18:5, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x141828108 <col:5> 'int ()' Function 0x141828050 'BIO_printf' 'int ()'     | |-RecoveryExpr 0x141828128 <col:16> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x141828148 <col:21> 'char[4]' lvalue \"STR\"     | `-CallExpr 0x1418282a0 <col:28, col:42> 'int'     |   |-ImplicitCastExpr 0x141828288 <col:28> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x141828248 <col:28> 'int ()' Function 0x141828190 'OBJ_nid2sn' 'int ()'     |   `-ImplicitCastExpr 0x1418282c8 <col:39> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x141828268 <col:39> 'int' lvalue ParmVar 0x14180dda8 'nid' 'int'     |-IfStmt 0x1408ed720 <line:20:5, line:21:14>     | |-RecoveryExpr 0x1408ed698 <line:20:9, col:50> '_Bool' contains-errors     | `-GotoStmt 0x1408ed708 <line:21:9, col:14> 'x962_int_err' 0x1408ed6b8     |-IfStmt 0x1408ed878 <line:22:5, line:23:14>     | |-RecoveryExpr 0x1408ed840 <line:22:9, col:33> '_Bool' contains-errors     | `-GotoStmt 0x1408ed860 <line:23:9, col:14> 'x962_int_err' 0x1408ed6b8     |-CallExpr 0x1408ed8f8 <line:24:5, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1408ed898 <col:5> 'int ()' Function 0x141828050 'BIO_printf' 'int ()'     | |-RecoveryExpr 0x1408ed8b8 <col:16> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x1408ed8d8 <col:21> 'char[4]' lvalue \"STR\"     |-CStyleCastExpr 0x1408eda80 <line:25:5, col:24> 'void' contains-errors <ToVoid>     | `-CallExpr 0x1408eda48 <col:11, col:24> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1408eda08 <col:11> 'int ()' Function 0x1408ed950 'BIO_flush' 'int ()'     |   `-RecoveryExpr 0x1408eda28 <col:21> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1408edc20 <line:28:5, line:29:14>     | |-RecoveryExpr 0x1408edbe8 <line:28:9, col:22> '_Bool' contains-errors     | `-GotoStmt 0x1408edc08 <line:29:9, col:14> 'x962_int_err' 0x1408ed6b8     |-CallExpr 0x1408edca0 <line:30:5, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1408edc40 <col:5> 'int ()' Function 0x141828050 'BIO_printf' 'int ()'     | |-RecoveryExpr 0x1408edc60 <col:16> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x1408edc80 <col:21> 'char[4]' lvalue \"STR\"     |-CStyleCastExpr 0x1408edd48 <line:31:5, col:24> 'void' contains-errors <ToVoid>     | `-CallExpr 0x1408edd10 <col:11, col:24> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1408edcd0 <col:11> 'int ()' Function 0x1408ed950 'BIO_flush' 'int ()'     |   `-RecoveryExpr 0x1408edcf0 <col:21> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1408edf38 <line:33:5, line:34:14>     | |-RecoveryExpr 0x1408edf00 <line:33:9, col:53> '_Bool' contains-errors     | `-GotoStmt 0x1408edf20 <line:34:9, col:14> 'x962_int_err' 0x1408ed6b8     |-IfStmt 0x1408ee0f0 <line:35:5, line:36:14>     | |-RecoveryExpr 0x1408ee0b8 <line:35:9, col:52> '_Bool' contains-errors     | `-GotoStmt 0x1408ee0d8 <line:36:9, col:14> 'x962_int_err' 0x1408ed6b8     |-IfStmt 0x1408ee268 <line:37:5, line:38:14>     | |-RecoveryExpr 0x1408ee230 <line:37:9, col:58> '_Bool' contains-errors     | `-GotoStmt 0x1408ee250 <line:38:9, col:14> 'x962_int_err' 0x1408ed6b8     |-CallExpr 0x1408ee2e8 <line:39:5, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1408ee288 <col:5> 'int ()' Function 0x141828050 'BIO_printf' 'int ()'     | |-RecoveryExpr 0x1408ee2a8 <col:16> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x1408ee2c8 <col:21> 'char[4]' lvalue \"STR\"     |-CStyleCastExpr 0x1408ee390 <line:40:5, col:24> 'void' contains-errors <ToVoid>     | `-CallExpr 0x1408ee358 <col:11, col:24> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1408ee318 <col:11> 'int ()' Function 0x1408ed950 'BIO_flush' 'int ()'     |   `-RecoveryExpr 0x1408ee338 <col:21> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1408ee550 <line:42:5, line:43:14>     | |-RecoveryExpr 0x1408ee518 <line:42:9, col:56> '_Bool' contains-errors     | `-GotoStmt 0x1408ee538 <line:43:9, col:14> 'x962_int_err' 0x1408ed6b8     |-CallExpr 0x1408ee5d0 <line:44:5, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1408ee570 <col:5> 'int ()' Function 0x141828050 'BIO_printf' 'int ()'     | |-RecoveryExpr 0x1408ee590 <col:16> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x1408ee5b0 <col:21> 'char[4]' lvalue \"STR\"     |-CStyleCastExpr 0x1408ee678 <line:45:5, col:24> 'void' contains-errors <ToVoid>     | `-CallExpr 0x1408ee640 <col:11, col:24> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1408ee600 <col:11> 'int ()' Function 0x1408ed950 'BIO_flush' 'int ()'     |   `-RecoveryExpr 0x1408ee620 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1408ee700 <line:47:5, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1408ee6a0 <col:5> 'int ()' Function 0x141828050 'BIO_printf' 'int ()'     | |-RecoveryExpr 0x1408ee6c0 <col:16> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x1408ee6e0 <col:21> 'char[4]' lvalue \"STR\"     |-BinaryOperator 0x1408ee770 <line:48:5, col:11> 'int' '='     | |-DeclRefExpr 0x1408ee730 <col:5> 'int' lvalue Var 0x14180e088 'ret' 'int'     | `-IntegerLiteral 0x1408ee750 <col:11> 'int' 1     |-LabelStmt 0x1408ee890 <line:49:2, line:51:30> 'x962_int_err'     | `-IfStmt 0x1408ee870 <line:50:5, line:51:30>     |   |-UnaryOperator 0x1408ee7c8 <line:50:9, col:10> 'int' prefix '!' cannot overflow     |   | `-ImplicitCastExpr 0x1408ee7b0 <col:10> 'int' <LValueToRValue>     |   |   `-DeclRefExpr 0x1408ee790 <col:10> 'int' lvalue Var 0x14180e088 'ret' 'int'     |   `-CallExpr 0x1408ee840 <line:51:9, col:30> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1408ee7e0 <col:9> 'int ()' Function 0x141828050 'BIO_printf' 'int ()'     |     |-RecoveryExpr 0x1408ee800 <col:20> '<dependent type>' contains-errors lvalue     |     `-StringLiteral 0x1408ee820 <col:25> 'char[4]' lvalue \"STR\"     `-ReturnStmt 0x1408eed88 <line:61:5, col:12>       `-ImplicitCastExpr 0x1408eed70 <col:12> 'int' <LValueToRValue>         `-DeclRefExpr 0x1408eed50 <col:12> 'int' lvalue Var 0x14180e088 'ret' 'int' ","21103":"`-FunctionDecl 0x1299281f8  line:1:1 invalid DefragGetOsPolicy 'int (int *)'   |-ParmVarDecl 0x129928128 <col:19, col:27> col:27 invalid p 'int *'   `-CompoundStmt 0x1299420a8 <line:2:1, line:57:1>     |-DeclStmt 0x129928360 <line:3:5, col:20>     | `-VarDecl 0x1299282c0 <col:5, col:19> col:9 used policy 'int' cinit     |   `-UnaryOperator 0x129928348 <col:18, col:19> 'int' prefix '-'     |     `-IntegerLiteral 0x129928328 <col:19> 'int' 1     |-IfStmt 0x129941d48 <line:5:5, line:10:5> has_else     | |-CallExpr 0x129928510 <line:5:9, col:22> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1299284d0 <col:9> 'int ()' Function 0x129928418 'PKT_IS_IPV4' 'int ()'     | | `-RecoveryExpr 0x1299284f0 <col:21> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x129928670 <col:25, line:7:5>     | `-IfStmt 0x129941d28 <line:8:10, line:10:5>     |   |-CallExpr 0x1299287a0 <line:8:14, col:27> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x129928760 <col:14> 'int ()' Function 0x1299286a8 'PKT_IS_IPV6' 'int ()'     |   | `-RecoveryExpr 0x129928780 <col:26> '<dependent type>' contains-errors lvalue     |   `-CompoundStmt 0x129941d18 <col:30, line:10:5>     |-IfStmt 0x129941e68 <line:12:5, line:14:5>     | |-BinaryOperator 0x129941de8 <line:12:9, col:20> 'int' '=='     | | |-ImplicitCastExpr 0x129941dd0 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x129941d78 <col:9> 'int' lvalue Var 0x1299282c0 'policy' 'int'     | | `-UnaryOperator 0x129941db8 <col:19, col:20> 'int' prefix '-'     | |   `-IntegerLiteral 0x129941d98 <col:20> 'int' 1     | `-CompoundStmt 0x129941e50 <col:23, line:14:5>     |   `-ReturnStmt 0x129941e40 <line:13:9, col:16>     |     `-RecoveryExpr 0x129941e20 <col:16> '<dependent type>' contains-errors lvalue     `-SwitchStmt 0x129941ec0 <line:17:5, line:56:5>       |-ImplicitCastExpr 0x129941ea8 <line:17:13> 'int' <LValueToRValue>       | `-DeclRefExpr 0x129941e88 <col:13> 'int' lvalue Var 0x1299282c0 'policy' 'int'       `-CompoundStmt 0x129942078 <col:21, line:56:5>         |-ReturnStmt 0x129941f68 <line:22:9, col:16>         | `-RecoveryExpr 0x129941f48 <col:16> '<dependent type>' contains-errors lvalue         |-ReturnStmt 0x129941fc8 <line:26:9, col:16>         | `-RecoveryExpr 0x129941fa8 <col:16> '<dependent type>' contains-errors lvalue         |-ReturnStmt 0x129942040 <line:31:9, col:16>         | `-RecoveryExpr 0x129942020 <col:16> '<dependent type>' contains-errors lvalue         `-DefaultStmt 0x129942058 <line:54:5, col:12>           `-NullStmt 0x129942050 <col:12> ","20767":"`-FunctionDecl 0x135928750  line:1:6 exit_creds 'void (struct task_struct *)'   |-ParmVarDecl 0x135928648 <col:17, col:37> col:37 used tsk 'struct task_struct *'   `-CompoundStmt 0x135947dd0 <line:2:1, line:20:1>     |-DeclStmt 0x135940c38 <line:3:2, col:19>     | |-RecordDecl 0x135940a48 <col:2, col:9> col:9 struct cred     | `-VarDecl 0x135940bb8 <col:2, col:15> col:15 used cred 'struct cred *'     |-CallExpr 0x135941290 <line:5:2, line:7:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x135940d80 <line:5:2> 'int ()' Function 0x135940cc8 'kdebug' 'int ()'     | |-StringLiteral 0x135940de0 <col:9> 'char[4]' lvalue \"STR\"     | |-RecoveryExpr 0x135940e38 <col:16, col:21> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x135940e00 <col:16> 'struct task_struct *' lvalue ParmVar 0x135928648 'tsk' 'struct task_struct *'     | |-RecoveryExpr 0x135940e98 <col:26, col:31> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x135940e60 <col:26> 'struct task_struct *' lvalue ParmVar 0x135928648 'tsk' 'struct task_struct *'     | |-RecoveryExpr 0x135940ef8 <col:42, col:47> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x135940ec0 <col:42> 'struct task_struct *' lvalue ParmVar 0x135928648 'tsk' 'struct task_struct *'     | |-CallExpr 0x1359410e0 <line:6:9, col:38> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x135941000 <col:9> 'int ()' Function 0x135940f48 'atomic_read' 'int ()'     | | `-UnaryOperator 0x1359410c8 <col:21, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-CXXDependentScopeMemberExpr 0x135941080 <col:22, col:33> '<dependent type>' contains-errors lvalue ->usage     | |     `-RecoveryExpr 0x135941058 <col:22, col:27> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x135941020 <col:22> 'struct task_struct *' lvalue ParmVar 0x135928648 'tsk' 'struct task_struct *'     | `-CallExpr 0x135941268 <line:7:9, col:40> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1359411e8 <col:9> 'int ()' Function 0x135941130 'read_cred_subscribers' 'int ()'     |   `-RecoveryExpr 0x135941240 <col:31, col:36> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x135941208 <col:31> 'struct task_struct *' lvalue ParmVar 0x135928648 'tsk' 'struct task_struct *'     |-BinaryOperator 0x135941410 <line:9:2, col:30> 'struct cred *' contains-errors '='     | |-DeclRefExpr 0x1359412e0 <col:2> 'struct cred *' lvalue Var 0x135940bb8 'cred' 'struct cred *'     | `-CStyleCastExpr 0x1359413e8 <col:9, col:30> 'struct cred *' contains-errors <Dependent>     |   `-RecoveryExpr 0x135941338 <col:25, col:30> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x135941300 <col:25> 'struct task_struct *' lvalue ParmVar 0x135928648 'tsk' 'struct task_struct *'     |-BinaryOperator 0x1359414e8 <line:10:2, col:19> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x135941468 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x135941430 <col:2> 'struct task_struct *' lvalue ParmVar 0x135928648 'tsk' 'struct task_struct *'     | `-RecoveryExpr 0x1359414c8 <col:19> '<dependent type>' contains-errors lvalue     |-CallExpr 0x135941678 <line:11:2, col:21> 'int'     | |-ImplicitCastExpr 0x135941660 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1359415e8 <col:2> 'int ()' Function 0x135941530 'validate_creds' 'int ()'     | `-ImplicitCastExpr 0x1359416a0 <col:17> 'struct cred *' <LValueToRValue>     |   `-DeclRefExpr 0x135941608 <col:17> 'struct cred *' lvalue Var 0x135940bb8 'cred' 'struct cred *'     |-CallExpr 0x135941828 <line:12:2, col:33> 'int'     | |-ImplicitCastExpr 0x135941810 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x135941798 <col:2> 'int ()' Function 0x1359416e0 'alter_cred_subscribers' 'int ()'     | |-ImplicitCastExpr 0x135941858 <col:25> 'struct cred *' <LValueToRValue>     | | `-DeclRefExpr 0x1359417b8 <col:25> 'struct cred *' lvalue Var 0x135940bb8 'cred' 'struct cred *'     | `-UnaryOperator 0x1359417f8 <col:31, col:32> 'int' prefix '-'     |   `-IntegerLiteral 0x1359417d8 <col:32> 'int' 1     |-CallExpr 0x1359419a8 <line:13:2, col:15> 'int'     | |-ImplicitCastExpr 0x135941990 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x135941950 <col:2> 'int ()' Function 0x135941898 'put_cred' 'int ()'     | `-ImplicitCastExpr 0x1359419d0 <col:11> 'struct cred *' <LValueToRValue>     |   `-DeclRefExpr 0x135941970 <col:11> 'struct cred *' lvalue Var 0x135940bb8 'cred' 'struct cred *'     |-BinaryOperator 0x135947ad0 <line:15:2, col:30> 'struct cred *' contains-errors '='     | |-DeclRefExpr 0x135947a00 <col:2> 'struct cred *' lvalue Var 0x135940bb8 'cred' 'struct cred *'     | `-CStyleCastExpr 0x135947aa8 <col:9, col:30> 'struct cred *' contains-errors <Dependent>     |   `-RecoveryExpr 0x135947a58 <col:25, col:30> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x135947a20 <col:25> 'struct task_struct *' lvalue ParmVar 0x135928648 'tsk' 'struct task_struct *'     |-BinaryOperator 0x135947ba8 <line:16:2, col:14> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x135947b28 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x135947af0 <col:2> 'struct task_struct *' lvalue ParmVar 0x135928648 'tsk' 'struct task_struct *'     | `-RecoveryExpr 0x135947b88 <col:14> '<dependent type>' contains-errors lvalue     |-CallExpr 0x135947c20 <line:17:2, col:21> 'int'     | |-ImplicitCastExpr 0x135947c08 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x135947bc8 <col:2> 'int ()' Function 0x135941530 'validate_creds' 'int ()'     | `-ImplicitCastExpr 0x135947c48 <col:17> 'struct cred *' <LValueToRValue>     |   `-DeclRefExpr 0x135947be8 <col:17> 'struct cred *' lvalue Var 0x135940bb8 'cred' 'struct cred *'     |-CallExpr 0x135947cf0 <line:18:2, col:33> 'int'     | |-ImplicitCastExpr 0x135947cd8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x135947c60 <col:2> 'int ()' Function 0x1359416e0 'alter_cred_subscribers' 'int ()'     | |-ImplicitCastExpr 0x135947d20 <col:25> 'struct cred *' <LValueToRValue>     | | `-DeclRefExpr 0x135947c80 <col:25> 'struct cred *' lvalue Var 0x135940bb8 'cred' 'struct cred *'     | `-UnaryOperator 0x135947cc0 <col:31, col:32> 'int' prefix '-'     |   `-IntegerLiteral 0x135947ca0 <col:32> 'int' 1     `-CallExpr 0x135947d90 <line:19:2, col:15> 'int'       |-ImplicitCastExpr 0x135947d78 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x135947d38 <col:2> 'int ()' Function 0x135941898 'put_cred' 'int ()'       `-ImplicitCastExpr 0x135947db8 <col:11> 'struct cred *' <LValueToRValue>         `-DeclRefExpr 0x135947d58 <col:11> 'struct cred *' lvalue Var 0x135940bb8 'cred' 'struct cred *' ","20758":"`-FunctionDecl 0x148928318  line:1:5 invalid extension_is_relevant 'int (int *, unsigned int, unsigned int)'   |-ParmVarDecl 0x148928128 <col:27, col:32> col:32 invalid s 'int *'   |-ParmVarDecl 0x1489281a8 <col:35, col:48> col:48 used extctx 'unsigned int'   |-ParmVarDecl 0x148928228 <col:56, col:69> col:69 used thisctx 'unsigned int'   `-CompoundStmt 0x148941f58 <line:2:1, line:23:1>     |-DeclStmt 0x148928458 <line:3:5, col:17>     | `-VarDecl 0x1489283f0 <col:5, col:9> col:9 used is_tls13 'int'     |-IfStmt 0x148928768 <line:6:5, line:9:34> has_else     | |-RecoveryExpr 0x1489284e8 <line:6:9, col:59> '_Bool' contains-errors     | |-BinaryOperator 0x148928548 <line:7:9, col:20> 'int' '='     | | |-DeclRefExpr 0x148928508 <col:9> 'int' lvalue Var 0x1489283f0 'is_tls13' 'int'     | | `-IntegerLiteral 0x148928528 <col:20> 'int' 1     | `-BinaryOperator 0x148928748 <line:9:9, col:34> 'int' contains-errors '='     |   |-DeclRefExpr 0x148928568 <col:9> 'int' lvalue Var 0x1489283f0 'is_tls13' 'int'     |   `-CallExpr 0x148928720 <col:20, col:34> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1489286e0 <col:20> 'int ()' Function 0x148928628 'SSL_IS_TLS13' 'int ()'     |     `-RecoveryExpr 0x148928700 <col:33> '<dependent type>' contains-errors lvalue     |-IfStmt 0x148941f08 <line:11:5, line:21:16>     | |-RecoveryExpr 0x148941eb8 <line:11:9, line:20:71> '_Bool' contains-errors     | `-ReturnStmt 0x148941ef8 <line:21:9, col:16>     |   `-IntegerLiteral 0x148941ed8 <col:16> 'int' 0     `-ReturnStmt 0x148941f48 <line:22:5, col:12>       `-IntegerLiteral 0x148941f28 <col:12> 'int' 1 ","20241":"`-FunctionDecl 0x142140a00  line:2:12 ql_adapter_down 'int (struct ql3_adapter *, int)' static   |-ParmVarDecl 0x142128648 <col:28, col:48> col:48 used qdev 'struct ql3_adapter *'   |-ParmVarDecl 0x1421286c8 <col:54, col:58> col:58 used do_reset 'int'   `-CompoundStmt 0x14280a068 <line:3:1, line:48:16>     |-DeclStmt 0x142140d48 <line:4:2, col:38>     | |-RecordDecl 0x142140b00 <col:2, col:9> col:9 struct net_device     | `-VarDecl 0x142140c68 <col:2, col:34> col:21 used ndev 'struct net_device *' cinit     |   `-RecoveryExpr 0x142140d08 <col:28, col:34> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x142140cd0 <col:28> 'struct ql3_adapter *' lvalue ParmVar 0x142128648 'qdev' 'struct ql3_adapter *'     |-DeclStmt 0x142140e00 <line:5:2, col:16>     | `-VarDecl 0x142140d78 <col:2, col:15> col:6 used retval 'int' cinit     |   `-IntegerLiteral 0x142140de0 <col:15> 'int' 0     |-CallExpr 0x142140fc8 <line:7:2, col:23> 'int' contains-errors     | |-ImplicitCastExpr 0x142140fb0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x142140f40 <col:2> 'int ()' Function 0x142140e88 'netif_stop_queue' 'int ()'     | `-ImplicitCastExpr 0x142140ff0 <col:19> 'struct net_device *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x142140f60 <col:19> 'struct net_device *' contains-errors lvalue Var 0x142140c68 'ndev' 'struct net_device *'     |-CallExpr 0x142141140 <line:8:2, col:24> 'int' contains-errors     | |-ImplicitCastExpr 0x142141128 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1421410e8 <col:2> 'int ()' Function 0x142141030 'netif_carrier_off' 'int ()'     | `-ImplicitCastExpr 0x142141168 <col:20> 'struct net_device *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x142141108 <col:20> 'struct net_device *' contains-errors lvalue Var 0x142140c68 'ndev' 'struct net_device *'     |-CallExpr 0x142141360 <line:10:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142141260 <col:2> 'int ()' Function 0x1421411a8 'clear_bit' 'int ()'     | |-RecoveryExpr 0x142141340 <col:12> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x1421412f8 <col:27, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1421412d0 <col:28, col:34> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x142141298 <col:28> 'struct ql3_adapter *' lvalue ParmVar 0x142128648 'qdev' 'struct ql3_adapter *'     |-CallExpr 0x142141490 <line:11:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142141390 <col:2> 'int ()' Function 0x1421411a8 'clear_bit' 'int ()'     | |-RecoveryExpr 0x142141470 <col:12> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x142141428 <col:28, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x142141400 <col:29, col:35> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1421413c8 <col:29> 'struct ql3_adapter *' lvalue ParmVar 0x142128648 'qdev' 'struct ql3_adapter *'     |-CallExpr 0x1421415f8 <line:13:2, col:28> 'int'     | |-ImplicitCastExpr 0x1421415e0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1421415a0 <col:2> 'int ()' Function 0x1421414e8 'ql_disable_interrupts' 'int ()'     | `-ImplicitCastExpr 0x142141620 <col:24> 'struct ql3_adapter *' <LValueToRValue>     |   `-DeclRefExpr 0x1421415c0 <col:24> 'struct ql3_adapter *' lvalue ParmVar 0x142128648 'qdev' 'struct ql3_adapter *'     |-CallExpr 0x142141800 <line:15:2, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142141718 <col:2> 'int ()' Function 0x142141660 'free_irq' 'int ()'     | |-CXXDependentScopeMemberExpr 0x142141798 <col:11, col:23> '<dependent type>' contains-errors lvalue ->irq     | | `-RecoveryExpr 0x142141770 <col:11, col:17> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x142141738 <col:11> 'struct ql3_adapter *' lvalue ParmVar 0x142128648 'qdev' 'struct ql3_adapter *'     | `-DeclRefExpr 0x1421417e0 <col:28> 'struct net_device *' contains-errors lvalue Var 0x142140c68 'ndev' 'struct net_device *'     |-IfStmt 0x142808dd0 <line:17:2, line:21:2>     | |-BinaryOperator 0x1428088e0 <line:17:6, col:56> 'int' contains-errors '&&'     | | |-RecoveryExpr 0x142141868 <col:6, col:12> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x142141830 <col:6> 'struct ql3_adapter *' lvalue ParmVar 0x142128648 'qdev' 'struct ql3_adapter *'     | | `-CallExpr 0x1428088b0 <col:19, col:56> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x142141970 <col:19> 'int ()' Function 0x1421418b8 'test_bit' 'int ()'     | |   |-RecoveryExpr 0x142808890 <col:28> '<dependent type>' contains-errors lvalue     | |   `-UnaryOperator 0x142808828 <col:44, col:51> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-RecoveryExpr 0x142808800 <col:45, col:51> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x1421419a8 <col:45> 'struct ql3_adapter *' lvalue ParmVar 0x142128648 'qdev' 'struct ql3_adapter *'     | `-CompoundStmt 0x142808da8 <col:59, line:21:2>     |   |-CallExpr 0x142808ac0 <line:18:3, col:32> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1428089e0 <col:3> 'int ()' Function 0x142808928 'netdev_info' 'int ()'     |   | |-RecoveryExpr 0x142808a38 <col:15, col:21> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x142808a00 <col:15> 'struct ql3_adapter *' lvalue ParmVar 0x142128648 'qdev' 'struct ql3_adapter *'     |   | `-StringLiteral 0x142808aa0 <col:27> 'char[4]' lvalue \"STR\"     |   |-CallExpr 0x142808bf0 <line:19:3, col:41> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x142808af0 <col:3> 'int ()' Function 0x1421411a8 'clear_bit' 'int ()'     |   | |-RecoveryExpr 0x142808bd0 <col:13> '<dependent type>' contains-errors lvalue     |   | `-UnaryOperator 0x142808b88 <col:29, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x142808b60 <col:30, col:36> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x142808b28 <col:30> 'struct ql3_adapter *' lvalue ParmVar 0x142128648 'qdev' 'struct ql3_adapter *'     |   `-CallExpr 0x142808d80 <line:20:3, col:29> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x142808d00 <col:3> 'int ()' Function 0x142808c48 'pci_disable_msi' 'int ()'     |     `-RecoveryExpr 0x142808d58 <col:19, col:25> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x142808d20 <col:19> 'struct ql3_adapter *' lvalue ParmVar 0x142128648 'qdev' 'struct ql3_adapter *'     |-CallExpr 0x142808f68 <line:23:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142808ed0 <col:2> 'int ()' Function 0x142808e18 'del_timer_sync' 'int ()'     | `-UnaryOperator 0x142808f50 <col:17, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x142808f28 <col:18, col:24> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x142808ef0 <col:18> 'struct ql3_adapter *' lvalue ParmVar 0x142128648 'qdev' 'struct ql3_adapter *'     |-CallExpr 0x142809108 <line:25:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142809070 <col:2> 'int ()' Function 0x142808fb8 'napi_disable' 'int ()'     | `-UnaryOperator 0x1428090f0 <col:15, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1428090c8 <col:16, col:22> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x142809090 <col:16> 'struct ql3_adapter *' lvalue ParmVar 0x142128648 'qdev' 'struct ql3_adapter *'     |-IfStmt 0x142809e88 <line:27:2, line:46:2>     | |-ImplicitCastExpr 0x142809150 <line:27:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x142809130 <col:6> 'int' lvalue ParmVar 0x1421286c8 'do_reset' 'int'     | `-CompoundStmt 0x142809e50 <col:16, line:46:2>     |   |-DeclStmt 0x1428091e8 <line:28:3, col:17>     |   | `-VarDecl 0x142809180 <col:3, col:7> col:7 used soft_reset 'int'     |   |-DeclStmt 0x142809280 <line:29:3, col:25>     |   | `-VarDecl 0x142809218 <col:3, col:17> col:17 used hw_flags 'unsigned long'     |   |-CallExpr 0x142809430 <line:31:3, col:45> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x142809378 <col:3> 'int ()' Function 0x1428092c0 'spin_lock_irqsave' 'int ()'     |   | |-UnaryOperator 0x1428093f8 <col:21, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-RecoveryExpr 0x1428093d0 <col:22, col:28> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x142809398 <col:22> 'struct ql3_adapter *' lvalue ParmVar 0x142128648 'qdev' 'struct ql3_adapter *'     |   | `-DeclRefExpr 0x142809410 <col:37> 'unsigned long' lvalue Var 0x142809218 'hw_flags' 'unsigned long'     |   |-IfStmt 0x142809c58 <line:32:3, line:44:3> has_else     |   | |-CallExpr 0x142809598 <line:32:7, col:33> 'int'     |   | | |-ImplicitCastExpr 0x142809580 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | | | `-DeclRefExpr 0x142809540 <col:7> 'int ()' Function 0x142809488 'ql_wait_for_drvr_lock' 'int ()'     |   | | `-ImplicitCastExpr 0x1428095c0 <col:29> 'struct ql3_adapter *' <LValueToRValue>     |   | |   `-DeclRefExpr 0x142809560 <col:29> 'struct ql3_adapter *' lvalue ParmVar 0x142128648 'qdev' 'struct ql3_adapter *'     |   | |-CompoundStmt 0x142809ac0 <col:36, line:40:3>     |   | | |-BinaryOperator 0x142809770 <line:33:4, col:38> 'int' '='     |   | | | |-DeclRefExpr 0x1428095d8 <col:4> 'int' lvalue Var 0x142809180 'soft_reset' 'int'     |   | | | `-CallExpr 0x142809730 <col:17, col:38> 'int'     |   | | |   |-ImplicitCastExpr 0x142809718 <col:17> 'int (*)()' <FunctionToPointerDecay>     |   | | |   | `-DeclRefExpr 0x1428096d8 <col:17> 'int ()' Function 0x142809620 'ql_adapter_reset' 'int ()'     |   | | |   `-ImplicitCastExpr 0x142809758 <col:34> 'struct ql3_adapter *' <LValueToRValue>     |   | | |     `-DeclRefExpr 0x1428096f8 <col:34> 'struct ql3_adapter *' lvalue ParmVar 0x142128648 'qdev' 'struct ql3_adapter *'     |   | | |-IfStmt 0x1428099c8 <line:34:4, line:37:4>     |   | | | |-ImplicitCastExpr 0x1428097b0 <line:34:8> 'int' <LValueToRValue>     |   | | | | `-DeclRefExpr 0x142809790 <col:8> 'int' lvalue Var 0x142809180 'soft_reset' 'int'     |   | | | `-CompoundStmt 0x1428099b0 <col:20, line:37:4>     |   | | |   `-CallExpr 0x142809978 <line:35:5, line:36:20> '<dependent type>' contains-errors     |   | | |     |-DeclRefExpr 0x1428098b8 <line:35:5> 'int ()' Function 0x142809800 'netdev_err' 'int ()'     |   | | |     |-DeclRefExpr 0x1428098d8 <col:16> 'struct net_device *' contains-errors lvalue Var 0x142140c68 'ndev' 'struct net_device *'     |   | | |     |-StringLiteral 0x1428098f8 <col:22> 'char[4]' lvalue \"STR\"     |   | | |     `-RecoveryExpr 0x142809950 <line:36:9, col:15> '<dependent type>' contains-errors lvalue     |   | | |       `-DeclRefExpr 0x142809918 <col:9> 'struct ql3_adapter *' lvalue ParmVar 0x142128648 'qdev' 'struct ql3_adapter *'     |   | | `-CallExpr 0x142809a60 <line:38:4, line:39:13> 'int' contains-errors     |   | |   |-ImplicitCastExpr 0x142809a48 <line:38:4> 'int (*)()' <FunctionToPointerDecay>     |   | |   | `-DeclRefExpr 0x1428099e8 <col:4> 'int ()' Function 0x142809800 'netdev_err' 'int ()'     |   | |   |-ImplicitCastExpr 0x142809a90 <col:15> 'struct net_device *' contains-errors <LValueToRValue>     |   | |   | `-DeclRefExpr 0x142809a08 <col:15> 'struct net_device *' contains-errors lvalue Var 0x142140c68 'ndev' 'struct net_device *'     |   | |   `-ImplicitCastExpr 0x142809aa8 <line:39:8> 'char *' <ArrayToPointerDecay>     |   | |     `-StringLiteral 0x142809a28 <col:8> 'char[4]' lvalue \"STR\"     |   | `-CompoundStmt 0x142809c38 <line:40:10, line:44:3>     |   |   |-CallExpr 0x142809b60 <line:41:4, line:42:13> 'int' contains-errors     |   |   | |-ImplicitCastExpr 0x142809b48 <line:41:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x142809ae8 <col:4> 'int ()' Function 0x142809800 'netdev_err' 'int ()'     |   |   | |-ImplicitCastExpr 0x142809b90 <col:15> 'struct net_device *' contains-errors <LValueToRValue>     |   |   | | `-DeclRefExpr 0x142809b08 <col:15> 'struct net_device *' contains-errors lvalue Var 0x142140c68 'ndev' 'struct net_device *'     |   |   | `-ImplicitCastExpr 0x142809ba8 <line:42:8> 'char *' <ArrayToPointerDecay>     |   |   |   `-StringLiteral 0x142809b28 <col:8> 'char[4]' lvalue \"STR\"     |   |   `-BinaryOperator 0x142809c18 <line:43:4, col:14> 'int' '='     |   |     |-DeclRefExpr 0x142809bc0 <col:4> 'int' lvalue Var 0x142140d78 'retval' 'int'     |   |     `-UnaryOperator 0x142809c00 <col:13, col:14> 'int' prefix '-'     |   |       `-IntegerLiteral 0x142809be0 <col:14> 'int' 1     |   `-CallExpr 0x142809e20 <line:45:3, col:50> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x142809d68 <col:3> 'int ()' Function 0x142809cb0 'spin_unlock_irqrestore' 'int ()'     |     |-UnaryOperator 0x142809de8 <col:26, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | `-RecoveryExpr 0x142809dc0 <col:27, col:33> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x142809d88 <col:27> 'struct ql3_adapter *' lvalue ParmVar 0x142128648 'qdev' 'struct ql3_adapter *'     |     `-DeclRefExpr 0x142809e00 <col:42> 'unsigned long' lvalue Var 0x142809218 'hw_flags' 'unsigned long'     |-CallExpr 0x142809fe0 <line:47:2, col:28> 'int'     | |-ImplicitCastExpr 0x142809fc8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x142809f88 <col:2> 'int ()' Function 0x142809ed0 'ql_free_mem_resources' 'int ()'     | `-ImplicitCastExpr 0x14280a008 <col:24> 'struct ql3_adapter *' <LValueToRValue>     |   `-DeclRefExpr 0x142809fa8 <col:24> 'struct ql3_adapter *' lvalue ParmVar 0x142128648 'qdev' 'struct ql3_adapter *'     `-ReturnStmt 0x14280a058 <line:48:2, col:9>       `-ImplicitCastExpr 0x14280a040 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x14280a020 <col:9> 'int' lvalue Var 0x142140d78 'retval' 'int' ","21023":"`-FunctionDecl 0x13180de58  line:1:1 invalid grammar_current_rule_expect_rr 'int (int, int)'   |-ParmVarDecl 0x13180dcd8 <col:33, col:37> col:37 used count 'int'   |-ParmVarDecl 0x13180dd70 <col:44, col:53> col:53 invalid loc 'int'   `-CompoundStmt 0x1320082d8 <line:2:1, line:8:1>     `-IfStmt 0x1320082a8 <line:3:3, line:7:5> has_else       |-UnaryOperator 0x13180df90 <line:3:7, col:9> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-ImplicitCastExpr 0x13180df78 <col:9> '<dependent type>' contains-errors <LValueToRValue>       |   `-RecoveryExpr 0x13180df58 <col:9> '<dependent type>' contains-errors lvalue       |-CallExpr 0x132008240 <line:4:5, line:5:20> '<dependent type>' contains-errors       | |-DeclRefExpr 0x13180e100 <line:4:5> 'int ()' Function 0x13180e048 'complain' 'int ()'       | |-UnaryOperator 0x13180e140 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow       | | `-RecoveryExpr 0x13180e120 <col:16> '<dependent type>' contains-errors lvalue       | |-RecoveryExpr 0x13180e3b8 <col:21> '<dependent type>' contains-errors lvalue       | |-CallExpr 0x132008200 <col:29, col:36> 'int'       | | |-ImplicitCastExpr 0x13180e3d8 <col:29> 'int (*)()' <FunctionToPointerDecay>       | | | `-DeclRefExpr 0x13180e250 <col:29> 'int ()' Function 0x13180e198 '_' 'int ()'       | | `-ImplicitCastExpr 0x132008228 <col:31> 'char *' <ArrayToPointerDecay>       | |   `-StringLiteral 0x13180e2b0 <col:31> 'char[4]' lvalue \"STR\"       | `-StringLiteral 0x13180e358 <line:5:15> 'char[4]' lvalue \"STR\"       `-NullStmt 0x1320082a0 <line:7:5> ","20523":"`-FunctionDecl 0x159808c70  col:10 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern   |-ParmVarDecl 0x159808d70 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x159808dd8 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-ParmVarDecl 0x159808e40 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x159808d18 <<invalid sloc>> Implicit 905   `-FormatAttr 0x159808ec0 <col:10> Implicit printf 3 4 ","21081":"`-FunctionDecl 0x11f808fc8  col:4 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x11f8090c8 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x11f809070 <<invalid sloc>> Implicit 873 ","21219":"`-FunctionDecl 0x14a1281a8  line:1:1 pci_get_vdev_info 'int (int)'   |-ParmVarDecl 0x14a1280d8 <col:19, col:23> col:23 used slot 'int'   `-CompoundStmt 0x14a141760 <line:2:1, line:17:1>     |-DeclStmt 0x14a128488 <line:3:2, col:20>     | |-RecordDecl 0x14a1282a0 <col:2, col:9> col:9 struct businfo     | `-VarDecl 0x14a128408 <col:2, col:18> col:18 used bi 'struct businfo *'     |-DeclStmt 0x14a128688 <line:4:2, col:21>     | |-RecordDecl 0x14a1284a0 <col:2, col:9> col:9 struct slotinfo     | `-VarDecl 0x14a128608 <col:2, col:19> col:19 used si 'struct slotinfo *'     |-DeclStmt 0x14a140af8 <line:5:2, col:29>     | |-RecordDecl 0x14a1286a0 <col:2, col:9> col:9 struct pci_vdev     | `-VarDecl 0x14a140a28 <col:2, col:25> col:19 used dev 'struct pci_vdev *' cinit     |   `-RecoveryExpr 0x14a140ac0 <col:25> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14a140d60 <line:8:2, col:19> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a140c80 <col:2> 'int ()' Function 0x14a140bc8 'assert' 'int ()'     | `-BinaryOperator 0x14a140d40 <col:9, col:15> 'int' contains-errors '!='     |   |-DeclRefExpr 0x14a140ca0 <col:9> 'struct businfo *' lvalue Var 0x14a128408 'bi' 'struct businfo *'     |   `-RecoveryExpr 0x14a140d20 <col:15> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14a1412b0 <line:10:2, col:25> 'struct slotinfo *' contains-errors '='     | |-DeclRefExpr 0x14a140d88 <col:2> 'struct slotinfo *' lvalue Var 0x14a128608 'si' 'struct slotinfo *'     | `-UnaryOperator 0x14a141298 <col:7, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-ArraySubscriptExpr 0x14a141278 <col:8, col:25> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x14a141248 <col:8, col:12> '<dependent type>' contains-errors <LValueToRValue>     |     | `-RecoveryExpr 0x14a141200 <col:8, col:12> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x14a140da8 <col:8> 'struct businfo *' lvalue Var 0x14a128408 'bi' 'struct businfo *'     |     `-ImplicitCastExpr 0x14a141260 <col:21> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x14a141228 <col:21> 'int' lvalue ParmVar 0x14a1280d8 'slot' 'int'     |-IfStmt 0x14a1416d0 <line:11:2, line:14:30> has_else     | |-BinaryOperator 0x14a141348 <line:11:6, col:12> 'int' contains-errors '!='     | | |-DeclRefExpr 0x14a1412d0 <col:6> 'struct slotinfo *' lvalue Var 0x14a128608 'si' 'struct slotinfo *'     | | `-RecoveryExpr 0x14a141328 <col:12> '<dependent type>' contains-errors lvalue     | |-BinaryOperator 0x14a141488 <line:12:3, col:25> 'struct pci_vdev *' contains-errors '='     | | |-DeclRefExpr 0x14a141368 <col:3> 'struct pci_vdev *' contains-errors lvalue Var 0x14a140a28 'dev' 'struct pci_vdev *'     | | `-CXXDependentScopeMemberExpr 0x14a141440 <col:9, col:25> '<dependent type>' contains-errors lvalue .fi_devi     | |   `-ArraySubscriptExpr 0x14a141420 <col:9, col:23> '<dependent type>' contains-errors lvalue     | |     |-ImplicitCastExpr 0x14a141408 <col:9, col:13> '<dependent type>' contains-errors <LValueToRValue>     | |     | `-RecoveryExpr 0x14a1413c0 <col:9, col:13> '<dependent type>' contains-errors lvalue     | |     |   `-DeclRefExpr 0x14a141388 <col:9> 'struct slotinfo *' lvalue Var 0x14a128608 'si' 'struct slotinfo *'     | |     `-IntegerLiteral 0x14a1413e8 <col:22> 'int' 0     | `-CallExpr 0x14a141698 <line:14:3, col:30> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14a141588 <col:3> 'int ()' Function 0x14a1414d0 'fprintf' 'int ()'     |   |-RecoveryExpr 0x14a141678 <col:11> '<dependent type>' contains-errors lvalue     |   |-StringLiteral 0x14a141600 <col:19> 'char[4]' lvalue \"STR\"     |   `-DeclRefExpr 0x14a141620 <col:26> 'int' lvalue ParmVar 0x14a1280d8 'slot' 'int'     `-ReturnStmt 0x14a141750 <line:16:2, col:9>       `-ImplicitCastExpr 0x14a141738 <col:9> 'int' contains-errors <PointerToIntegral>         `-ImplicitCastExpr 0x14a141720 <col:9> 'struct pci_vdev *' contains-errors <LValueToRValue>           `-DeclRefExpr 0x14a141700 <col:9> 'struct pci_vdev *' contains-errors lvalue Var 0x14a140a28 'dev' 'struct pci_vdev *' ","20626":"`-FunctionDecl 0x13c80dfa0  line:1:6 invalid CTXLoad_NodeCallback 'void (void *, int, int *, void *)'   |-ParmVarDecl 0x13c80dcd8 <col:27, col:33> col:33 used cbk 'void *'   |-ParmVarDecl 0x13c80dd70 <col:38, col:55> col:55 invalid type 'int'   |-ParmVarDecl 0x13c80de28 <col:61, col:70> col:70 invalid node 'int *'   |-ParmVarDecl 0x13c80dea8 <col:76, col:82> col:82 used param 'void *'   `-CompoundStmt 0x13c827768 <line:2:1, line:11:1>     `-IfStmt 0x13c827738 <line:3:2, line:10:2> has_else       |-RecoveryExpr 0x13c80e2c0 <line:3:6, col:84> '_Bool' contains-errors       |-CompoundStmt 0x13c827548 <col:88, line:8:2>       | `-CallExpr 0x13c827518 <line:7:3, col:32> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x13c8274b8 <col:3> 'int ()' Function 0x13c827400 'gf_node_set_private' 'int ()'       |   |-RecoveryExpr 0x13c8274d8 <col:23> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x13c8274f8 <col:29> 'void *' lvalue ParmVar 0x13c80dcd8 'cbk' 'void *'       `-CompoundStmt 0x13c827720 <line:8:9, line:10:2>         `-CallExpr 0x13c8276e0 <line:9:3, col:48> '<dependent type>' contains-errors           |-DeclRefExpr 0x13c827640 <col:3> 'int ()' Function 0x13c827588 'gf_scene_node_callback' 'int ()'           |-DeclRefExpr 0x13c827660 <col:26> 'void *' lvalue ParmVar 0x13c80dcd8 'cbk' 'void *'           |-RecoveryExpr 0x13c827680 <col:31> '<dependent type>' contains-errors lvalue           |-RecoveryExpr 0x13c8276a0 <col:37> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x13c8276c0 <col:43> 'void *' lvalue ParmVar 0x13c80dea8 'param' 'void *' ","20923":"`-FunctionDecl 0x14f124258  col:5 implicit used va_end 'void (__builtin_va_list &)' extern   |-ParmVarDecl 0x14f124358 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'   |-BuiltinAttr 0x14f124300 <<invalid sloc>> Implicit 865   `-NoThrowAttr 0x14f1243c8 <col:5> Implicit ","20489":"`-FunctionDecl 0x150142598  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x150142698 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x150142700 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x150142768 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x150142640 <<invalid sloc>> Implicit 900 ","20495":"`-FunctionDecl 0x14c128238  line:1:1 TEST 'int (int, int)'   |-ParmVarDecl 0x14c128158 <col:6> col:6 used IndexBoundsBuilderTest 'int'   |-ParmVarDecl 0x14c1280d8 <col:30> col:30 TranslateNotEqualToNullShouldBuildExactBoundsOnReverseIndex 'int'   `-CompoundStmt 0x14c140e18 <col:91, line:17:1>     |-DeclStmt 0x14c128588 <line:3:5, col:57>     | `-VarDecl 0x14c128368 <col:5, col:56> col:10 testIndex 'int' auto cinit     |   `-CallExpr 0x14c128560 <col:22, col:56> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14c1284e0 <col:22> 'int ()' Function 0x14c128428 'buildSimpleIndexEntry' 'int ()'     |     `-RecoveryExpr 0x14c128540 <col:44> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x14c1287a8 <line:6:5, col:42>     | `-VarDecl 0x14c1285b8 <col:5, col:41> col:10 expr 'int' auto cinit     |   `-CallExpr 0x14c128780 <col:17, col:41> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14c128700 <col:17> 'int ()' Function 0x14c128648 'parseMatchExpression' 'int ()'     |     `-RecoveryExpr 0x14c128760 <col:38> '<dependent type>' contains-errors lvalue     |-DeclRefExpr 0x14c140a00 <line:9:5> 'int' lvalue ParmVar 0x14c128158 'IndexBoundsBuilderTest' 'int'     |-DeclRefExpr 0x14c140a50 <line:10:5> 'int' lvalue ParmVar 0x14c128158 'IndexBoundsBuilderTest' 'int'     `-CallExpr 0x14c140cc8 <line:14:5, col:34> '<dependent type>' contains-errors       |-DeclRefExpr 0x14c140b50 <col:5> 'int ()' Function 0x14c140a98 'ASSERT_EQUALS' 'int ()'       |-CXXDependentScopeMemberExpr 0x14c140c80 <col:19, col:23> '<dependent type>' contains-errors lvalue .name       | `-RecoveryExpr 0x14c140c60 <col:19> '<dependent type>' contains-errors lvalue       `-StringLiteral 0x14c140c10 <col:29> 'char[4]' lvalue \"STR\" ","20909":"`-FunctionDecl 0x101808200  col:4 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x101808300 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x1018082a8 <<invalid sloc>> Implicit 873 ","21227":"`-FunctionDecl 0x1498f6530  col:14 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x1498f6630 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x1498f6698 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x1498f65d8 <<invalid sloc>> Implicit 887 ","21184":"`-FunctionDecl 0x135010750  line:1:20 iocb_put 'void (struct aio_kiocb *)' static inline   |-ParmVarDecl 0x135010648 <col:29, col:47> col:47 used iocb 'struct aio_kiocb *'   `-CompoundStmt 0x135029210 <line:2:1, line:8:1>     `-IfStmt 0x1350291f0 <line:3:2, line:7:2>       |-BinaryOperator 0x135028e10 <line:3:6, line:4:44> 'int' contains-errors '||'       | |-BinaryOperator 0x135028c50 <line:3:6, col:41> 'int' contains-errors '=='       | | |-CallExpr 0x135028c08 <col:6, col:36> '<dependent type>' contains-errors       | | | |-DeclRefExpr 0x135028b70 <col:6> 'int ()' Function 0x135028ab8 'refcount_read' 'int ()'       | | | `-UnaryOperator 0x135028bf0 <col:20, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow       | | |   `-RecoveryExpr 0x135028bc8 <col:21, col:27> '<dependent type>' contains-errors lvalue       | | |     `-DeclRefExpr 0x135028b90 <col:21> 'struct aio_kiocb *' lvalue ParmVar 0x135010648 'iocb' 'struct aio_kiocb *'       | | `-IntegerLiteral 0x135028c30 <col:41> 'int' 0       | `-CallExpr 0x135028de8 <line:4:6, col:44> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x135028d50 <col:6> 'int ()' Function 0x135028c98 'refcount_dec_and_test' 'int ()'       |   `-UnaryOperator 0x135028dd0 <col:28, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow       |     `-RecoveryExpr 0x135028da8 <col:29, col:35> '<dependent type>' contains-errors lvalue       |       `-DeclRefExpr 0x135028d70 <col:29> 'struct aio_kiocb *' lvalue ParmVar 0x135010648 'iocb' 'struct aio_kiocb *'       `-CompoundStmt 0x1350291d0 <col:47, line:7:2>         |-CallExpr 0x135028ff0 <line:5:3, col:37> '<dependent type>' contains-errors         | |-DeclRefExpr 0x135028f10 <col:3> 'int ()' Function 0x135028e58 'percpu_ref_put' 'int ()'         | `-UnaryOperator 0x135028fd8 <col:18, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow         |   `-CXXDependentScopeMemberExpr 0x135028f90 <col:19, col:33> '<dependent type>' contains-errors lvalue ->reqs         |     `-RecoveryExpr 0x135028f68 <col:19, col:25> '<dependent type>' contains-errors lvalue         |       `-DeclRefExpr 0x135028f30 <col:19> 'struct aio_kiocb *' lvalue ParmVar 0x135010648 'iocb' 'struct aio_kiocb *'         `-CallExpr 0x1350291a0 <line:6:3, col:37> '<dependent type>' contains-errors           |-DeclRefExpr 0x1350290f8 <col:3> 'int ()' Function 0x135029040 'kmem_cache_free' 'int ()'           |-RecoveryExpr 0x135029180 <col:19> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x135029130 <col:33> 'struct aio_kiocb *' lvalue ParmVar 0x135010648 'iocb' 'struct aio_kiocb *' ","21232":"`-FunctionDecl 0x14d8089d0  line:1:6 invalid net_tx_pkt_init 'void (struct NetTxPkt **, int *, int, int)'   |-ParmVarDecl 0x14c1286a8 <col:22, col:40> col:40 used pkt 'struct NetTxPkt **'   |-ParmVarDecl 0x14c128778 <col:45, col:56> col:56 invalid pci_dev 'int *'   |-ParmVarDecl 0x14d808800 <line:2:5, col:14> col:14 invalid max_frags 'int'   |-ParmVarDecl 0x14d808880 <col:25, col:30> col:30 invalid has_virt_hdr 'int'   `-CompoundStmt 0x14d80a748 <line:3:1, line:23:1>     |-DeclStmt 0x14d808d60 <line:4:5, col:46>     | `-VarDecl 0x14d808b28 <col:5, col:22> col:22 used p 'struct NetTxPkt *'     |-BinaryOperator 0x14d808df8 <line:6:5, col:18> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14d808db0 <col:5, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14d808d78 <col:5> 'struct NetTxPkt *' lvalue Var 0x14d808b28 'p' 'struct NetTxPkt *'     | `-RecoveryExpr 0x14d808dd8 <col:18> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14d809258 <line:11:5, col:51> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14d8090d8 <col:5, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14d8090a0 <col:5> 'struct NetTxPkt *' lvalue Var 0x14d808b28 'p' 'struct NetTxPkt *'     | `-CallExpr 0x14d809230 <col:14, col:51> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14d809100 <col:14> 'int ()' Function 0x14d808ea0 'g_malloc' 'int ()'     |   `-BinaryOperator 0x14d809210 <col:23, col:42> '<dependent type>' contains-errors '*'     |     |-ParenExpr 0x14d8091d0 <col:23, col:38> 'unsigned long' contains-errors     |     | `-UnaryExprOrTypeTraitExpr 0x14d8091b0 <col:24, col:35> 'unsigned long' contains-errors sizeof     |     |   `-UnaryOperator 0x14d809198 <col:31, col:35> '<dependent type>' contains-errors prefix '*' cannot overflow     |     |     `-ImplicitCastExpr 0x14d809180 <col:32, col:35> '<dependent type>' contains-errors <LValueToRValue>     |     |       `-RecoveryExpr 0x14d809158 <col:32, col:35> '<dependent type>' contains-errors lvalue     |     |         `-DeclRefExpr 0x14d809120 <col:32> 'struct NetTxPkt *' lvalue Var 0x14d808b28 'p' 'struct NetTxPkt *' non_odr_use_unevaluated     |     `-RecoveryExpr 0x14d8091f0 <col:42> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14d8092f8 <line:13:5, col:28> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14d8092b0 <col:5, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14d809278 <col:5> 'struct NetTxPkt *' lvalue Var 0x14d808b28 'p' 'struct NetTxPkt *'     | `-RecoveryExpr 0x14d8092d8 <col:28> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14d809398 <line:14:5, col:24> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14d809350 <col:5, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14d809318 <col:5> 'struct NetTxPkt *' lvalue Var 0x14d808b28 'p' 'struct NetTxPkt *'     | `-RecoveryExpr 0x14d809378 <col:24> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14d809438 <line:15:5, col:23> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14d8093f0 <col:5, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14d8093b8 <col:5> 'struct NetTxPkt *' lvalue Var 0x14d808b28 'p' 'struct NetTxPkt *'     | `-RecoveryExpr 0x14d809418 <col:23> '<dependent type>' contains-errors lvalue     `-BinaryOperator 0x14d80a728 <line:22:5, col:12> 'struct NetTxPkt *' '='       |-UnaryOperator 0x14d80a6d8 <col:5, col:6> 'struct NetTxPkt *' lvalue prefix '*' cannot overflow       | `-ImplicitCastExpr 0x14d80a6c0 <col:6> 'struct NetTxPkt **' <LValueToRValue>       |   `-DeclRefExpr 0x14d80a6a0 <col:6> 'struct NetTxPkt **' lvalue ParmVar 0x14c1286a8 'pkt' 'struct NetTxPkt **'       `-ImplicitCastExpr 0x14d80a710 <col:12> 'struct NetTxPkt *' <LValueToRValue>         `-DeclRefExpr 0x14d80a6f0 <col:12> 'struct NetTxPkt *' lvalue Var 0x14d808b28 'p' 'struct NetTxPkt *' ","20555":"`-FunctionDecl 0x15b0280a8  col:2 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x15b0281a8 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x15b028150 <<invalid sloc>> Implicit 873 ","20364":"`-FunctionDecl 0x141829250  col:2 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern   |-ParmVarDecl 0x141829350 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x1418293b8 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-ParmVarDecl 0x141829420 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x1418292f8 <<invalid sloc>> Implicit 905   `-FormatAttr 0x1418294a0 <col:2> Implicit printf 3 4 ","20398":"`-FunctionDecl 0x1280280a0  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x1280281a0 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x128028208 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x128028270 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x128028148 <<invalid sloc>> Implicit 900 ","20655":"`-FunctionDecl 0x129141800  line:1:6 invalid dd_init_next_file 'int *(struct dump_dir *)'   |-ParmVarDecl 0x129128668 <col:24, col:41> col:41 used dd 'struct dump_dir *'   `-CompoundStmt 0x129142068 <line:2:1, line:16:1>     |-IfStmt 0x129141b18 <line:6:5, line:7:30>     | |-RecoveryExpr 0x1291418e8 <line:6:9, col:13> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1291418b0 <col:9> 'struct dump_dir *' lvalue ParmVar 0x129128668 'dd' 'struct dump_dir *'     | `-CallExpr 0x129141af0 <line:7:9, col:30> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x129141a70 <col:9> 'int ()' Function 0x1291419b8 'closedir' 'int ()'     |   `-RecoveryExpr 0x129141ac8 <col:18, col:22> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x129141a90 <col:18> 'struct dump_dir *' lvalue ParmVar 0x129128668 'dd' 'struct dump_dir *'     |-BinaryOperator 0x129141d20 <line:9:5, col:42> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x129141b70 <col:5, col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x129141b38 <col:5> 'struct dump_dir *' lvalue ParmVar 0x129128668 'dd' 'struct dump_dir *'     | `-CallExpr 0x129141cf8 <col:20, col:42> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x129141c78 <col:20> 'int ()' Function 0x129141bc0 'opendir' 'int ()'     |   `-RecoveryExpr 0x129141cd0 <col:28, col:32> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x129141c98 <col:28> 'struct dump_dir *' lvalue ParmVar 0x129128668 'dd' 'struct dump_dir *'     |-IfStmt 0x129141fd8 <line:10:5, line:13:5>     | |-UnaryOperator 0x129141db8 <line:10:9, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x129141da0 <col:10, col:14> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x129141d78 <col:10, col:14> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x129141d40 <col:10> 'struct dump_dir *' lvalue ParmVar 0x129128668 'dd' 'struct dump_dir *'     | `-CompoundStmt 0x129141fc0 <line:11:5, line:13:5>     |   `-CallExpr 0x129141f90 <line:12:9, col:40> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x129141eb0 <col:9> 'int ()' Function 0x129141df8 'error_msg' 'int ()'     |     |-StringLiteral 0x129141f10 <col:19> 'char[4]' lvalue \"STR\"     |     `-RecoveryExpr 0x129141f68 <col:26, col:30> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x129141f30 <col:26> 'struct dump_dir *' lvalue ParmVar 0x129128668 'dd' 'struct dump_dir *'     `-ReturnStmt 0x129142058 <line:15:5, col:16>       `-RecoveryExpr 0x129142030 <col:12, col:16> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x129141ff8 <col:12> 'struct dump_dir *' lvalue ParmVar 0x129128668 'dd' 'struct dump_dir *' ","21146":"`-FunctionDecl 0x1579418d8  line:1:1 invalid wb_id 'int (int *, const struct pkt_id *, int)'   |-ParmVarDecl 0x157928128 <col:7, col:27> col:27 invalid ndo 'int *'   |-ParmVarDecl 0x157928718 <line:2:7, col:28> col:28 used id 'const struct pkt_id *'   |-ParmVarDecl 0x157928798 <col:32, col:38> col:38 referenced invalid len 'int'   `-CompoundStmt 0x157946320 <line:3:1, line:44:1>     |-DeclStmt 0x157941a18 <line:4:2, col:7>     | `-VarDecl 0x1579419b0 <col:2, col:6> col:6 used i 'int'     |-DeclStmt 0x157941ab0 <line:5:2, col:16>     | `-VarDecl 0x157941a48 <col:2, col:14> col:14 used cp 'const char *'     |-DeclStmt 0x157941cb8 <line:6:2, col:25>     | |-RecordDecl 0x157941ac8 <col:8, col:15> col:15 struct id_off     | `-VarDecl 0x157941c38 <col:2, col:23> col:23 used io 'const struct id_off *'     |-DeclStmt 0x157941d48 <line:7:2, col:8>     | `-VarDecl 0x157941ce0 <col:2, col:7> col:7 used c 'char'     |-DeclStmt 0x157941de0 <line:8:2, col:9>     | `-VarDecl 0x157941d78 <col:2, col:6> col:6 used nid 'int'     |-CallExpr 0x157942030 <line:10:2, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x157941f50 <col:2> 'int ()' Function 0x157941e98 'ND_PRINT' 'int ()'     | `-ParenExpr 0x157942010 <col:11, col:22> 'char[4]' contains-errors     |   `-BinaryOperator 0x157941ff0 <col:12, col:17> 'char[4]' contains-errors ','     |     |-RecoveryExpr 0x157941f70 <col:12> '<dependent type>' contains-errors lvalue     |     `-StringLiteral 0x157941fd0 <col:17> 'char[4]' lvalue \"STR\"     |-IfStmt 0x1579423b0 <line:11:2, line:12:13>     | |-RecoveryExpr 0x157942328 <line:11:6, col:40> '_Bool' contains-errors     | `-ReturnStmt 0x1579423a0 <line:12:3, col:13>     |   `-ParenExpr 0x157942380 <col:10, col:13> 'int'     |     `-UnaryOperator 0x157942368 <col:11, col:12> 'int' prefix '-'     |       `-IntegerLiteral 0x157942348 <col:12> 'int' 1     |-CallExpr 0x157943480 <line:15:2, line:21:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x157942488 <line:15:2> 'int ()' Function 0x157941e98 'ND_PRINT' 'int ()'     | `-ParenExpr 0x157943460 <col:11, line:21:44> '<dependent type>' contains-errors     |   `-BinaryOperator 0x157943440 <line:15:12, line:21:43> '<dependent type>' contains-errors ','     |     |-BinaryOperator 0x157943318 <line:15:12, line:20:47> '<dependent type>' contains-errors ','     |     | |-BinaryOperator 0x1579431c8 <line:15:12, line:19:37> '<dependent type>' contains-errors ','     |     | | |-BinaryOperator 0x1579430e8 <line:15:12, line:18:45> '<dependent type>' contains-errors ','     |     | | | |-BinaryOperator 0x157942f78 <line:15:12, line:17:49> '<dependent type>' contains-errors ','     |     | | | | |-BinaryOperator 0x1579426f0 <line:15:12, line:16:39> '<dependent type>' contains-errors ','     |     | | | | | |-BinaryOperator 0x1579424e8 <line:15:12, col:17> 'char[4]' contains-errors ','     |     | | | | | | |-RecoveryExpr 0x1579424a8 <col:12> '<dependent type>' contains-errors lvalue     |     | | | | | | `-StringLiteral 0x1579424c8 <col:17> 'char[4]' lvalue \"STR\"     |     | | | | | `-CallExpr 0x1579426c8 <line:16:9, col:39> '<dependent type>' contains-errors     |     | | | | |   |-DeclRefExpr 0x1579425e8 <col:9> 'int ()' Function 0x157942530 'EXTRACT_32BITS' 'int ()'     |     | | | | |   `-UnaryOperator 0x1579426b0 <col:24, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | | | | |     `-CXXDependentScopeMemberExpr 0x157942668 <col:25, col:35> '<dependent type>' contains-errors lvalue .slot     |     | | | | |       `-RecoveryExpr 0x157942640 <col:25, col:29> '<dependent type>' contains-errors lvalue     |     | | | | |         `-DeclRefExpr 0x157942608 <col:25> 'const struct pkt_id *' lvalue ParmVar 0x157928718 'id' 'const struct pkt_id *'     |     | | | | `-CallExpr 0x157942f48 <line:17:9, col:49> '<dependent type>' contains-errors     |     | | | |   |-DeclRefExpr 0x157942e00 <col:9> 'int ()' Function 0x157942738 'ipaddr_string' 'int ()'     |     | | | |   |-RecoveryExpr 0x157942e20 <col:23> '<dependent type>' contains-errors lvalue     |     | | | |   `-UnaryOperator 0x157942f30 <col:28, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | | | |     `-CXXDependentScopeMemberExpr 0x157942ee8 <col:29, col:44> '<dependent type>' contains-errors lvalue .p_sid     |     | | | |       `-CXXDependentScopeMemberExpr 0x157942ea0 <col:29, col:39> '<dependent type>' contains-errors lvalue .page     |     | | | |         `-RecoveryExpr 0x157942e78 <col:29, col:33> '<dependent type>' contains-errors lvalue     |     | | | |           `-DeclRefExpr 0x157942e40 <col:29> 'const struct pkt_id *' lvalue ParmVar 0x157928718 'id' 'const struct pkt_id *'     |     | | | `-CallExpr 0x1579430c0 <line:18:9, col:45> '<dependent type>' contains-errors     |     | | |   |-DeclRefExpr 0x157942f98 <col:9> 'int ()' Function 0x157942530 'EXTRACT_32BITS' 'int ()'     |     | | |   `-UnaryOperator 0x1579430a8 <col:24, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | | |     `-CXXDependentScopeMemberExpr 0x157943060 <col:25, col:40> '<dependent type>' contains-errors lvalue .p_uid     |     | | |       `-CXXDependentScopeMemberExpr 0x157943018 <col:25, col:35> '<dependent type>' contains-errors lvalue .page     |     | | |         `-RecoveryExpr 0x157942ff0 <col:25, col:29> '<dependent type>' contains-errors lvalue     |     | | |           `-DeclRefExpr 0x157942fb8 <col:25> 'const struct pkt_id *' lvalue ParmVar 0x157928718 'id' 'const struct pkt_id *'     |     | | `-CallExpr 0x1579431a0 <line:19:9, col:37> '<dependent type>' contains-errors     |     | |   |-DeclRefExpr 0x157943108 <col:9> 'int ()' Function 0x157942530 'EXTRACT_32BITS' 'int ()'     |     | |   `-UnaryOperator 0x157943188 <col:24, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | |     `-RecoveryExpr 0x157943160 <col:25, col:29> '<dependent type>' contains-errors lvalue     |     | |       `-DeclRefExpr 0x157943128 <col:25> 'const struct pkt_id *' lvalue ParmVar 0x157928718 'id' 'const struct pkt_id *'     |     | `-CallExpr 0x1579432e8 <line:20:9, col:47> '<dependent type>' contains-errors     |     |   |-DeclRefExpr 0x1579431e8 <col:9> 'int ()' Function 0x157942738 'ipaddr_string' 'int ()'     |     |   |-RecoveryExpr 0x157943208 <col:23> '<dependent type>' contains-errors lvalue     |     |   `-UnaryOperator 0x1579432d0 <col:28, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow     |     |     `-CXXDependentScopeMemberExpr 0x157943288 <col:29, col:42> '<dependent type>' contains-errors lvalue .p_sid     |     |       `-RecoveryExpr 0x157943260 <col:29, col:33> '<dependent type>' contains-errors lvalue     |     |         `-DeclRefExpr 0x157943228 <col:29> 'const struct pkt_id *' lvalue ParmVar 0x157928718 'id' 'const struct pkt_id *'     |     `-CallExpr 0x157943418 <line:21:9, col:43> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x157943338 <col:9> 'int ()' Function 0x157942530 'EXTRACT_32BITS' 'int ()'     |       `-UnaryOperator 0x157943400 <col:24, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     |         `-CXXDependentScopeMemberExpr 0x1579433b8 <col:25, col:38> '<dependent type>' contains-errors lvalue .p_uid     |           `-RecoveryExpr 0x157943390 <col:25, col:29> '<dependent type>' contains-errors lvalue     |             `-DeclRefExpr 0x157943358 <col:25> 'const struct pkt_id *' lvalue ParmVar 0x157928718 'id' 'const struct pkt_id *'     |-BinaryOperator 0x1579436b0 <line:23:2, col:37> 'int' contains-errors '='     | |-DeclRefExpr 0x1579434a8 <col:2> 'int' lvalue Var 0x157941d78 'nid' 'int'     | `-CallExpr 0x157943688 <col:8, col:37> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1579435a8 <col:8> 'int ()' Function 0x1579434f0 'EXTRACT_16BITS' 'int ()'     |   `-UnaryOperator 0x157943670 <col:23, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-CXXDependentScopeMemberExpr 0x157943628 <col:24, col:34> '<dependent type>' contains-errors lvalue .nid     |       `-RecoveryExpr 0x157943600 <col:24, col:28> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x1579435c8 <col:24> 'const struct pkt_id *' lvalue ParmVar 0x157928718 'id' 'const struct pkt_id *'     |-BinaryOperator 0x157943988 <line:25:2, col:31> 'const struct id_off *' contains-errors '='     | |-DeclRefExpr 0x1579437a8 <col:2> 'const struct id_off *' lvalue Var 0x157941c38 'io' 'const struct id_off *'     | `-ImplicitCastExpr 0x157943970 <col:7, col:31> 'const struct id_off *' contains-errors <NoOp>     |   `-CStyleCastExpr 0x157943948 <col:7, col:31> 'struct id_off *' contains-errors <Dependent>     |     `-ParenExpr 0x157943928 <col:24, col:31> '<dependent type>' contains-errors lvalue     |       `-RecoveryExpr 0x157943820 <col:25, col:30> '<dependent type>' contains-errors lvalue     |         |-DeclRefExpr 0x1579437c8 <col:25> 'const struct pkt_id *' lvalue ParmVar 0x157928718 'id' 'const struct pkt_id *'     |         `-IntegerLiteral 0x1579437e8 <col:30> 'int' 1     |-BinaryOperator 0x157943b00 <line:26:2, col:24> 'const char *' contains-errors '='     | |-DeclRefExpr 0x1579439a8 <col:2> 'const char *' lvalue Var 0x157941a48 'cp' 'const char *'     | `-ImplicitCastExpr 0x157943ae8 <col:7, col:24> 'const char *' contains-errors <NoOp>     |   `-CStyleCastExpr 0x157943ac0 <col:7, col:24> 'char *' contains-errors <Dependent>     |     `-ParenExpr 0x157943aa0 <col:15, col:24> '<dependent type>' contains-errors lvalue     |       `-RecoveryExpr 0x157943a38 <col:16, col:21> '<dependent type>' contains-errors lvalue     |         |-DeclRefExpr 0x1579439c8 <col:16> 'const struct id_off *' lvalue Var 0x157941c38 'io' 'const struct id_off *'     |         `-DeclRefExpr 0x1579439e8 <col:21> 'int' lvalue Var 0x157941d78 'nid' 'int'     |-IfStmt 0x1579459e0 <line:27:2, line:31:2>     | |-UnaryOperator 0x157943c90 <line:27:6, col:24> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x157943c60 <col:7, col:24> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x157943c00 <col:7> 'int ()' Function 0x157943b48 'ND_TTEST2' 'int ()'     | |   |-DeclRefExpr 0x157943c20 <col:17> 'const char *' lvalue Var 0x157941a48 'cp' 'const char *'     | |   `-RecoveryExpr 0x157943c40 <col:21> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1579459c0 <col:27, line:31:2>     |   |-CallExpr 0x157943d48 <line:28:3, col:24> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x157943ca8 <col:3> 'int ()' Function 0x157941e98 'ND_PRINT' 'int ()'     |   | `-ParenExpr 0x157943d28 <col:12, col:23> 'char[4]' contains-errors     |   |   `-BinaryOperator 0x157943d08 <col:13, col:18> 'char[4]' contains-errors ','     |   |     |-RecoveryExpr 0x157943cc8 <col:13> '<dependent type>' contains-errors lvalue     |   |     `-StringLiteral 0x157943ce8 <col:18> 'char[4]' lvalue \"STR\"     |   `-CallExpr 0x157945998 <line:30:3, col:24> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1579458f8 <col:3> 'int ()' Function 0x157941e98 'ND_PRINT' 'int ()'     |     `-ParenExpr 0x157945978 <col:12, col:23> 'char[4]' contains-errors     |       `-BinaryOperator 0x157945958 <col:13, col:18> 'char[4]' contains-errors ','     |         |-RecoveryExpr 0x157945918 <col:13> '<dependent type>' contains-errors lvalue     |         `-StringLiteral 0x157945938 <col:18> 'char[4]' lvalue \"STR\"     |-BinaryOperator 0x157945a50 <line:33:2, col:6> 'char' '='     | |-DeclRefExpr 0x157945a00 <col:2> 'char' lvalue Var 0x157941ce0 'c' 'char'     | `-ImplicitCastExpr 0x157945a38 <col:6> 'char' <IntegralCast>     |   `-CharacterLiteral 0x157945a20 <col:6> 'int' 60     |-ForStmt 0x157946098 <line:34:2, line:38:2>     | |-BinaryOperator 0x157945ab0 <line:34:7, col:11> 'int' '='     | | |-DeclRefExpr 0x157945a70 <col:7> 'int' lvalue Var 0x1579419b0 'i' 'int'     | | `-IntegerLiteral 0x157945a90 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x157945c58 <col:14, col:37> 'int' contains-errors '&&'     | | |-BinaryOperator 0x157945b40 <col:14, col:18> 'int' '<'     | | | |-ImplicitCastExpr 0x157945b10 <col:14> 'int' <LValueToRValue>     | | | | `-DeclRefExpr 0x157945ad0 <col:14> 'int' lvalue Var 0x1579419b0 'i' 'int'     | | | `-ImplicitCastExpr 0x157945b28 <col:18> 'int' <LValueToRValue>     | | |   `-DeclRefExpr 0x157945af0 <col:18> 'int' lvalue Var 0x157941d78 'nid' 'int'     | | `-RecoveryExpr 0x157945c28 <col:25, col:37> '<dependent type>' contains-errors lvalue     | |   |-DeclRefExpr 0x157945b60 <col:25> 'int ()' Function 0x157942110 'ND_TTEST' 'int ()'     | |   `-UnaryOperator 0x157945bb8 <col:34, col:35> 'const struct id_off' lvalue prefix '*' cannot overflow     | |     `-ImplicitCastExpr 0x157945ba0 <col:35> 'const struct id_off *' <LValueToRValue>     | |       `-DeclRefExpr 0x157945b80 <col:35> 'const struct id_off *' lvalue Var 0x157941c38 'io' 'const struct id_off *'     | |-BinaryOperator 0x157945cf8 <col:40, col:48> 'int' contains-errors ','     | | |-RecoveryExpr 0x157945c98 <col:40, col:42> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x157945c78 <col:42> 'const struct id_off *' lvalue Var 0x157941c38 'io' 'const struct id_off *'     | | `-UnaryOperator 0x157945ce0 <col:46, col:48> 'int' prefix '++'     | |   `-DeclRefExpr 0x157945cc0 <col:48> 'int' lvalue Var 0x1579419b0 'i' 'int'     | `-CompoundStmt 0x157946078 <col:51, line:38:2>     |   |-CallExpr 0x157945fe0 <line:35:3, line:36:64> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x157945d18 <line:35:3> 'int ()' Function 0x157941e98 'ND_PRINT' 'int ()'     |   | `-ParenExpr 0x157945fc0 <col:12, line:36:63> '<dependent type>' contains-errors     |   |   `-BinaryOperator 0x157945fa0 <line:35:13, line:36:62> '<dependent type>' contains-errors ','     |   |     |-BinaryOperator 0x157945ec0 <line:35:13, line:36:36> '<dependent type>' contains-errors ','     |   |     | |-BinaryOperator 0x157945db8 <line:35:13, line:36:7> 'char' contains-errors ','     |   |     | | |-BinaryOperator 0x157945d78 <line:35:13, col:18> 'char[4]' contains-errors ','     |   |     | | | |-RecoveryExpr 0x157945d38 <col:13> '<dependent type>' contains-errors lvalue     |   |     | | | `-StringLiteral 0x157945d58 <col:18> 'char[4]' lvalue \"STR\"     |   |     | | `-DeclRefExpr 0x157945d98 <line:36:7> 'char' lvalue Var 0x157941ce0 'c' 'char'     |   |     | `-CallExpr 0x157945e90 <col:10, col:36> '<dependent type>' contains-errors     |   |     |   |-DeclRefExpr 0x157945dd8 <col:10> 'int ()' Function 0x157942738 'ipaddr_string' 'int ()'     |   |     |   |-RecoveryExpr 0x157945df8 <col:24> '<dependent type>' contains-errors lvalue     |   |     |   `-UnaryOperator 0x157945e78 <col:29, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |     |     `-RecoveryExpr 0x157945e50 <col:30, col:34> '<dependent type>' contains-errors lvalue     |   |     |       `-DeclRefExpr 0x157945e18 <col:30> 'const struct id_off *' lvalue Var 0x157941c38 'io' 'const struct id_off *'     |   |     `-CallExpr 0x157945f78 <col:39, col:62> '<dependent type>' contains-errors     |   |       |-DeclRefExpr 0x157945ee0 <col:39> 'int ()' Function 0x157942530 'EXTRACT_32BITS' 'int ()'     |   |       `-UnaryOperator 0x157945f60 <col:54, col:59> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |         `-RecoveryExpr 0x157945f38 <col:55, col:59> '<dependent type>' contains-errors lvalue     |   |           `-DeclRefExpr 0x157945f00 <col:55> 'const struct id_off *' lvalue Var 0x157941c38 'io' 'const struct id_off *'     |   `-BinaryOperator 0x157946058 <line:37:3, col:7> 'char' '='     |     |-DeclRefExpr 0x157946008 <col:3> 'char' lvalue Var 0x157941ce0 'c' 'char'     |     `-ImplicitCastExpr 0x157946040 <col:7> 'char' <IntegralCast>     |       `-CharacterLiteral 0x157946028 <col:7> 'int' 44     |-IfStmt 0x157946298 <line:39:2, line:42:2>     | |-BinaryOperator 0x157946140 <line:39:6, col:11> 'int' '>='     | | |-ImplicitCastExpr 0x157946110 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x1579460d0 <col:6> 'int' lvalue Var 0x1579419b0 'i' 'int'     | | `-ImplicitCastExpr 0x157946128 <col:11> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x1579460f0 <col:11> 'int' lvalue Var 0x157941d78 'nid' 'int'     | `-CompoundStmt 0x157946278 <col:16, line:42:2>     |   |-CallExpr 0x157946200 <line:40:3, col:24> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x157946160 <col:3> 'int ()' Function 0x157941e98 'ND_PRINT' 'int ()'     |   | `-ParenExpr 0x1579461e0 <col:12, col:23> 'char[4]' contains-errors     |   |   `-BinaryOperator 0x1579461c0 <col:13, col:18> 'char[4]' contains-errors ','     |   |     |-RecoveryExpr 0x157946180 <col:13> '<dependent type>' contains-errors lvalue     |   |     `-StringLiteral 0x1579461a0 <col:18> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x157946268 <line:41:3, col:12>     |     `-ParenExpr 0x157946248 <col:10, col:12> 'int'     |       `-IntegerLiteral 0x157946228 <col:11> 'int' 0     `-ReturnStmt 0x157946310 <line:43:2, col:12>       `-ParenExpr 0x1579462f0 <col:9, col:12> 'int'         `-UnaryOperator 0x1579462d8 <col:10, col:11> 'int' prefix '-'           `-IntegerLiteral 0x1579462b8 <col:11> 'int' 1 ","20377":"`-FunctionDecl 0x128143f88  col:23 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x128144088 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x128144030 <<invalid sloc>> Implicit 902 ","20908":"`-FunctionDecl 0x1539281f0  line:1:13 invalid rtps_util_detect_coherent_set_end_empty_data_case 'void (int *)' static   |-ParmVarDecl 0x153928128 <line:3:3, col:29> col:29 referenced invalid coherent_set_entity_info_object 'int *'   `-CompoundStmt 0x1539287a8 <col:62, line:23:1>     |-BinaryOperator 0x1539283b8 <line:4:3, col:50> '<dependent type>' contains-errors '='     | |-BinaryOperator 0x153928378 <col:3, col:29> '<dependent type>' contains-errors '*'     | | |-RecoveryExpr 0x1539282c0 <col:3> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x1539282a0 <col:3> 'int *' lvalue ParmVar 0x153928128 'coherent_set_entity_info_object' 'int *'     | | `-RecoveryExpr 0x153928358 <col:29> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x153928398 <col:50> '<dependent type>' contains-errors lvalue     `-IfStmt 0x153928788 <line:7:3, line:22:3>       |-RecoveryExpr 0x153928428 <line:7:7> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x153928770 <col:27, line:22:3>         `-IfStmt 0x153928750 <line:15:5, line:21:5>           |-RecoveryExpr 0x153928558 <line:15:9> '<dependent type>' contains-errors lvalue           `-CompoundStmt 0x153928738 <col:34, line:21:5>             `-IfStmt 0x153928718 <line:16:7, line:20:7>               |-BinaryOperator 0x1539286c8 <line:16:11, col:112> 'int' contains-errors '=='               | |-CXXDependentScopeMemberExpr 0x153928680 <col:11, col:31> '<dependent type>' contains-errors lvalue ->expected_coherent_set_end_writers_seq_number               | | `-RecoveryExpr 0x153928660 <col:11> '<dependent type>' contains-errors lvalue               | `-CXXDependentScopeMemberExpr 0x1539285f8 <col:79, col:112> '<dependent type>' contains-errors lvalue ->writer_seq_number               |   `-RecoveryExpr 0x1539285d8 <col:79> '<dependent type>' contains-errors lvalue               `-CompoundStmt 0x153928708 <col:131, line:20:7> ","21121":"`-FunctionDecl 0x15d127bc0  line:1:13 invalid enable_profile_legacy 'void (int)' static   |-ParmVarDecl 0x15d127af0 <col:35, col:53> col:53 referenced invalid c 'int'   `-CompoundStmt 0x15d128150 <line:2:1, line:6:1>     |-CompoundAssignOperator 0x15d127d20 <line:3:2, col:32> '<dependent type>' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-CXXDependentScopeMemberExpr 0x15d127cb8 <col:2, col:5> '<dependent type>' contains-errors lvalue ->additional_verify_flags     | | `-RecoveryExpr 0x15d127c90 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15d127c70 <col:2> 'int' lvalue ParmVar 0x15d127af0 'c' 'int'     | `-IntegerLiteral 0x15d127d00 <col:32> 'int' 16777215     |-CompoundAssignOperator 0x15d128018 <line:4:2, col:78> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-CXXDependentScopeMemberExpr 0x15d127d98 <col:2, col:5> '<dependent type>' contains-errors lvalue ->additional_verify_flags     | | `-RecoveryExpr 0x15d127d70 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15d127d50 <col:2> 'int' lvalue ParmVar 0x15d127af0 'c' 'int'     | `-CallExpr 0x15d127ff0 <col:32, col:78> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15d127f40 <col:32> 'int ()' Function 0x15d127e88 'GNUTLS_PROFILE_TO_VFLAGS' 'int ()'     |   `-RecoveryExpr 0x15d127fd0 <col:57> '<dependent type>' contains-errors lvalue     `-BinaryOperator 0x15d128130 <line:5:2, col:13> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x15d128090 <col:2, col:5> '<dependent type>' contains-errors lvalue ->level       | `-RecoveryExpr 0x15d128068 <col:2> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x15d128048 <col:2> 'int' lvalue ParmVar 0x15d127af0 'c' 'int'       `-RecoveryExpr 0x15d128110 <col:13> '<dependent type>' contains-errors lvalue ","20402":"`-FunctionDecl 0x15180df18  line:1:5 invalid spl_object_storage_detach 'int (int *, int *, int *)'   |-ParmVarDecl 0x15180dd28 <col:31, col:53> col:53 invalid intern 'int *'   |-ParmVarDecl 0x15180dda8 <col:61, col:67> col:67 invalid this 'int *'   |-ParmVarDecl 0x15180de28 <col:73, col:79> col:79 invalid obj 'int *'   `-CompoundStmt 0x1518278c0 <line:2:1, line:12:1>     |-DeclStmt 0x15180e128 <line:3:2, col:29>     | |-VarDecl 0x15180dff0 <col:2, col:6> col:6 used hash_len 'int'     | `-VarDecl 0x15180e070 <col:2, col:22> col:16 used ret 'int' cinit     |   `-RecoveryExpr 0x15180e0f0 <col:22> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x15180e3d8 <line:4:2, col:82>     | `-VarDecl 0x15180e158 <col:2, col:8> col:8 used hash 'char *'     |-IfStmt 0x1518274b0 <line:5:2, line:7:2>     | |-UnaryOperator 0x151827438 <line:5:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x151827420 <col:7> 'char *' <LValueToRValue>     | |   `-DeclRefExpr 0x151827400 <col:7> 'char *' lvalue Var 0x15180e158 'hash' 'char *'     | `-CompoundStmt 0x151827498 <col:13, line:7:2>     |   `-ReturnStmt 0x151827488 <line:6:3, col:10>     |     `-ImplicitCastExpr 0x151827470 <col:10> 'int' contains-errors <LValueToRValue>     |       `-DeclRefExpr 0x151827450 <col:10> 'int' contains-errors lvalue Var 0x15180e070 'ret' 'int'     |-BinaryOperator 0x1518276e8 <line:8:2, col:54> 'int' contains-errors '='     | |-DeclRefExpr 0x1518274d0 <col:2> 'int' contains-errors lvalue Var 0x15180e070 'ret' 'int'     | `-CallExpr 0x1518276b0 <col:8, col:54> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1518275d0 <col:8> 'int ()' Function 0x151827518 'zend_hash_del' 'int ()'     |   |-UnaryOperator 0x151827658 <col:22, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-CXXDependentScopeMemberExpr 0x151827610 <col:23, col:31> '<dependent type>' contains-errors lvalue ->storage     |   |   `-RecoveryExpr 0x1518275f0 <col:23> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x151827670 <col:40> 'char *' lvalue Var 0x15180e158 'hash' 'char *'     |   `-DeclRefExpr 0x151827690 <col:46> 'int' lvalue Var 0x15180dff0 'hash_len' 'int'     |-CallExpr 0x151827848 <line:9:2, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1518277e8 <col:2> 'int ()' Function 0x151827730 'spl_object_storage_free_hash' 'int ()'     | |-RecoveryExpr 0x151827808 <col:31> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x151827828 <col:39> 'char *' lvalue Var 0x15180e158 'hash' 'char *'     `-ReturnStmt 0x1518278b0 <line:11:2, col:9>       `-ImplicitCastExpr 0x151827898 <col:9> 'int' contains-errors <LValueToRValue>         `-DeclRefExpr 0x151827878 <col:9> 'int' contains-errors lvalue Var 0x15180e070 'ret' 'int' ","20430":"`-FunctionDecl 0x156141aa8  line:1:9 invalid device_store_int 'int (struct device *, struct device_attribute *, const char *, int)'   |-ParmVarDecl 0x156128668 <col:26, col:41> col:41 dev 'struct device *'   |-ParmVarDecl 0x156141858 <line:2:5, col:30> col:30 used attr 'struct device_attribute *'   |-ParmVarDecl 0x1561418d8 <line:3:5, col:17> col:17 used buf 'const char *'   |-ParmVarDecl 0x156141958 <col:22, col:29> col:29 invalid size 'int'   `-CompoundStmt 0x156809200 <line:4:1, line:18:1>     |-DeclStmt 0x156141f98 <line:5:2, col:50>     | |-RecordDecl 0x156141b70 <col:2, col:9> col:9 struct dev_ext_attribute     | `-VarDecl 0x156141cd8 <col:2, col:49> col:28 used ea 'struct dev_ext_attribute *' cinit     |   `-ImplicitCastExpr 0x156141f68 <col:33, col:49> 'struct dev_ext_attribute *' <IntegralToPointer>     |     `-CallExpr 0x156141f28 <col:33, col:49> 'int'     |       |-ImplicitCastExpr 0x156141f10 <col:33> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x156141ea0 <col:33> 'int ()' Function 0x156141de8 'to_ext_attr' 'int ()'     |       `-ImplicitCastExpr 0x156141f50 <col:45> 'struct device_attribute *' <LValueToRValue>     |         `-DeclRefExpr 0x156141ec0 <col:45> 'struct device_attribute *' lvalue ParmVar 0x156141858 'attr' 'struct device_attribute *'     |-DeclStmt 0x156142030 <line:6:2, col:9>     | `-VarDecl 0x156141fc8 <col:2, col:6> col:6 used ret 'int'     |-DeclStmt 0x1561420c8 <line:7:2, col:10>     | `-VarDecl 0x156142060 <col:2, col:7> col:7 used new 'long'     |-BinaryOperator 0x156142310 <line:9:2, col:28> 'int' '='     | |-DeclRefExpr 0x1561420e0 <col:2> 'int' lvalue Var 0x156141fc8 'ret' 'int'     | `-CallExpr 0x1561422c0 <col:8, col:28> 'int'     |   |-ImplicitCastExpr 0x1561422a8 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1561421e0 <col:8> 'int ()' Function 0x156142128 'kstrtol' 'int ()'     |   |-ImplicitCastExpr 0x1561422f8 <col:16> 'const char *' <LValueToRValue>     |   | `-DeclRefExpr 0x156142200 <col:16> 'const char *' lvalue ParmVar 0x1561418d8 'buf' 'const char *'     |   |-IntegerLiteral 0x156142220 <col:21> 'int' 0     |   `-UnaryOperator 0x156142290 <col:24, col:25> 'long *' prefix '&' cannot overflow     |     `-DeclRefExpr 0x156142240 <col:25> 'long' lvalue Var 0x156142060 'new' 'long'     |-IfStmt 0x1561423b0 <line:10:2, line:11:10>     | |-ImplicitCastExpr 0x156142350 <line:10:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x156142330 <col:6> 'int' lvalue Var 0x156141fc8 'ret' 'int'     | `-ReturnStmt 0x1561423a0 <line:11:3, col:10>     |   `-ImplicitCastExpr 0x156142388 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x156142368 <col:10> 'int' lvalue Var 0x156141fc8 'ret' 'int'     |-IfStmt 0x1561425e8 <line:13:2, line:14:11>     | |-BinaryOperator 0x156142520 <line:13:6, col:29> 'int' contains-errors '||'     | | |-BinaryOperator 0x1561424c0 <col:6, col:12> 'int' contains-errors '>'     | | | |-DeclRefExpr 0x1561423d0 <col:6> 'long' lvalue Var 0x156142060 'new' 'long'     | | | `-RecoveryExpr 0x1561424a0 <col:12> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x156142500 <col:23, col:29> 'int' contains-errors '<'     | |   |-DeclRefExpr 0x156142428 <col:23> 'long' lvalue Var 0x156142060 'new' 'long'     | |   `-RecoveryExpr 0x1561424e0 <col:29> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1561425d8 <line:14:3, col:11>     |   `-UnaryOperator 0x1561425c0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x1561425a8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x156142588 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x156142788 <line:15:2, col:22> 'int' contains-errors '='     | |-UnaryOperator 0x156142720 <col:2, col:18> 'int' contains-errors lvalue prefix '*' cannot overflow     | | `-CStyleCastExpr 0x1561426f8 <col:3, col:18> 'int *' contains-errors <Dependent>     | |   `-ParenExpr 0x1561426d8 <col:10, col:18> '<dependent type>' contains-errors lvalue     | |     `-RecoveryExpr 0x156142640 <col:11, col:15> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x156142608 <col:11> 'struct dev_ext_attribute *' lvalue Var 0x156141cd8 'ea' 'struct dev_ext_attribute *'     | `-ImplicitCastExpr 0x156142770 <col:22> 'int' <IntegralCast>     |   `-ImplicitCastExpr 0x156142758 <col:22> 'long' <LValueToRValue>     |     `-DeclRefExpr 0x156142738 <col:22> 'long' lvalue Var 0x156142060 'new' 'long'     `-ReturnStmt 0x1561427c8 <line:17:2, col:9>       `-RecoveryExpr 0x1561427a8 <col:9> '<dependent type>' contains-errors lvalue ","21171":"`-FunctionDecl 0x12a142408  line:1:1 invalid handle_keywordonly_args 'int (struct compiling *, const int *, int, int *, int *)'   |-ParmVarDecl 0x12a129048 <col:25, col:43> col:43 used c 'struct compiling *'   |-ParmVarDecl 0x12a1290e0 <col:46, col:58> col:58 invalid n 'const int *'   |-ParmVarDecl 0x12a129160 <col:61, col:65> col:65 used start 'int'   |-ParmVarDecl 0x12a142218 <line:2:25, col:35> col:35 invalid kwonlyargs 'int *'   |-ParmVarDecl 0x12a142298 <col:47, col:57> col:57 invalid kwdefaults 'int *'   `-CompoundStmt 0x12a144400 <line:3:1, line:64:1>     |-DeclStmt 0x12a1425c0 <line:8:5, col:18>     | `-VarDecl 0x12a142520 <col:5, col:13> col:9 used i 'int' cinit     |   `-ImplicitCastExpr 0x12a1425a8 <col:13> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x12a142588 <col:13> 'int' lvalue ParmVar 0x12a129160 'start' 'int'     |-DeclStmt 0x12a142678 <line:9:5, col:14>     | `-VarDecl 0x12a1425f0 <col:5, col:13> col:9 used j 'int' cinit     |   `-IntegerLiteral 0x12a142658 <col:13> 'int' 0     |-IfStmt 0x12a142b30 <line:11:5, line:14:5>     | |-BinaryOperator 0x12a142708 <line:11:9, col:23> 'int' contains-errors '=='     | | |-RecoveryExpr 0x12a142690 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12a1426e8 <col:23> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12a142b10 <col:29, line:14:5>     |   |-CallExpr 0x12a142a90 <line:12:9, col:44> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12a142880 <col:9> 'int ()' Function 0x12a1427c8 'ast_error' 'int ()'     |   | |-DeclRefExpr 0x12a1428a0 <col:19> 'struct compiling *' lvalue ParmVar 0x12a129048 'c' 'struct compiling *'     |   | |-CallExpr 0x12a142a00 <col:22, col:36> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x12a1429a0 <col:22> 'int ()' Function 0x12a1428e8 'CHILD' 'int ()'     |   | | |-RecoveryExpr 0x12a1429c0 <col:28> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x12a1429e0 <col:31> 'int' lvalue ParmVar 0x12a129160 'start' 'int'     |   | `-StringLiteral 0x12a142a70 <col:39> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x12a142b00 <line:13:9, col:17>     |     `-UnaryOperator 0x12a142ae8 <col:16, col:17> 'int' prefix '-'     |       `-IntegerLiteral 0x12a142ac8 <col:17> 'int' 1     |-CallExpr 0x12a142d10 <line:15:5, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12a142c30 <col:5> 'int ()' Function 0x12a142b78 'assert' 'int ()'     | `-BinaryOperator 0x12a142cf0 <col:12, col:26> 'int' contains-errors '!='     |   |-RecoveryExpr 0x12a142c50 <col:12> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x12a142cd0 <col:26> '<dependent type>' contains-errors lvalue     |-WhileStmt 0x12a144330 <line:16:5, line:60:5>     | |-BinaryOperator 0x12a142ea0 <line:16:12, col:21> 'int' contains-errors '<'     | | |-DeclRefExpr 0x12a142d38 <col:12> 'int' lvalue Var 0x12a142520 'i' 'int'     | | `-CallExpr 0x12a142e78 <col:16, col:21> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12a142e38 <col:16> 'int ()' Function 0x12a142d80 'NCH' 'int ()'     | |   `-RecoveryExpr 0x12a142e58 <col:20> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12a144318 <col:24, line:60:5>     |   `-SwitchStmt 0x12a1430d8 <line:18:9, line:59:9>     |     |-CallExpr 0x12a1430b0 <line:18:17, col:24> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x12a143030 <col:17> 'int ()' Function 0x12a142f78 'TYPE' 'int ()'     |     | `-RecoveryExpr 0x12a143090 <col:22> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x12a1442b0 <col:27, line:59:9>     |       |-IfStmt 0x12a143870 <line:21:17, line:30:17> has_else     |       | |-RecoveryExpr 0x12a143330 <line:21:21, col:64> '_Bool' contains-errors     |       | |-CompoundStmt 0x12a1437e0 <col:71, line:27:17>     |       | | |-IfStmt 0x12a143610 <line:23:21, line:24:30>     |       | | | |-RecoveryExpr 0x12a143588 <line:23:25, col:26> '_Bool' contains-errors     |       | | | `-GotoStmt 0x12a1435f8 <line:24:25, col:30> 'error' 0x12a1435a8     |       | | `-CompoundAssignOperator 0x12a1437b0 <line:26:21, col:26> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'     |       | |   |-DeclRefExpr 0x12a143770 <col:21> 'int' lvalue Var 0x12a142520 'i' 'int'     |       | |   `-IntegerLiteral 0x12a143790 <col:26> 'int' 2     |       | `-CompoundStmt 0x12a143860 <line:28:22, line:30:17>     |       |-IfStmt 0x12a143a00 <line:31:17, line:39:17> has_else     |       | |-RecoveryExpr 0x12a1438e0 <line:31:21, col:32> '_Bool' contains-errors     |       | |-CompoundStmt 0x12a1439d8 <col:35, line:36:17>     |       | | `-IfStmt 0x12a1439b8 <line:34:21, line:35:30>     |       | |   |-RecoveryExpr 0x12a143980 <line:34:25, col:26> '_Bool' contains-errors     |       | |   `-GotoStmt 0x12a1439a0 <line:35:25, col:30> 'error' 0x12a1435a8     |       | `-CompoundStmt 0x12a1439f0 <line:37:22, line:39:17>     |       |-IfStmt 0x12a143ba8 <line:42:17, line:43:26>     |       | |-RecoveryExpr 0x12a143b70 <line:42:21, col:22> '_Bool' contains-errors     |       | `-GotoStmt 0x12a143b90 <line:43:21, col:26> 'error' 0x12a1435a8     |       |-IfStmt 0x12a143d40 <line:44:17, line:45:26>     |       | |-RecoveryExpr 0x12a143d08 <line:44:21, col:53> '_Bool' contains-errors     |       | `-GotoStmt 0x12a143d28 <line:45:21, col:26> 'error' 0x12a1435a8     |       |-IfStmt 0x12a144058 <line:49:17, line:50:26>     |       | |-UnaryOperator 0x12a144028 <line:49:21, col:22> 'int' prefix '!' cannot overflow     |       | | `-ImplicitCastExpr 0x12a144010 <col:22> 'int (*)()' <FunctionToPointerDecay>     |       | |   `-DeclRefExpr 0x12a143fc0 <col:22> 'int ()' Function 0x12a143d88 'arg' 'int ()'     |       | `-GotoStmt 0x12a144040 <line:50:21, col:26> 'error' 0x12a1435a8     |       |-CallExpr 0x12a144110 <line:51:17, col:50> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x12a144078 <col:17> 'int ()' Function 0x12a143658 'asdl_seq_SET' 'int ()'     |       | |-RecoveryExpr 0x12a144098 <col:30> '<dependent type>' contains-errors lvalue     |       | |-UnaryOperator 0x12a1440d8 <col:42, col:43> 'int' postfix '++'     |       | | `-DeclRefExpr 0x12a1440b8 <col:42> 'int' lvalue Var 0x12a1425f0 'j' 'int'     |       | `-DeclRefExpr 0x12a1440f0 <col:47> 'int ()' Function 0x12a143d88 'arg' 'int ()'     |       |-CompoundAssignOperator 0x12a144188 <line:52:17, col:22> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'     |       | |-DeclRefExpr 0x12a144148 <col:17> 'int' lvalue Var 0x12a142520 'i' 'int'     |       | `-IntegerLiteral 0x12a144168 <col:22> 'int' 2     |       |-BreakStmt 0x12a1441b8 <line:53:17>     |       |-ReturnStmt 0x12a144200 <line:55:17, col:24>     |       | `-ImplicitCastExpr 0x12a1441e0 <col:24> 'int' <LValueToRValue>     |       |   `-DeclRefExpr 0x12a1441c0 <col:24> 'int' lvalue Var 0x12a142520 'i' 'int'     |       |-DefaultStmt 0x12a144278 <line:56:13, col:20>     |       | `-NullStmt 0x12a144270 <col:20>     |       `-GotoStmt 0x12a144298 <line:58:17, col:22> 'error' 0x12a1435a8     |-ReturnStmt 0x12a144388 <line:61:5, col:12>     | `-ImplicitCastExpr 0x12a144370 <col:12> 'int' <LValueToRValue>     |   `-DeclRefExpr 0x12a144350 <col:12> 'int' lvalue Var 0x12a142520 'i' 'int'     `-LabelStmt 0x12a1443e0 <line:62:2, line:63:13> 'error'       `-ReturnStmt 0x12a1443d0 <col:5, col:13>         `-UnaryOperator 0x12a1443b8 <col:12, col:13> 'int' prefix '-'           `-IntegerLiteral 0x12a144398 <col:13> 'int' 1 ","20921":"`-FunctionDecl 0x146940ad8  line:1:9 invalid red_stream_writev 'int (int *, const struct iovec *, int)'   |-ParmVarDecl 0x146928128 <col:27, col:38> col:38 invalid s 'int *'   |-ParmVarDecl 0x146928718 <col:41, col:61> col:61 used iov 'const struct iovec *'   |-ParmVarDecl 0x146928798 <col:66, col:70> col:70 used iovcnt 'int'   `-CompoundStmt 0x1469416e0 <line:2:1, line:19:1>     |-DeclStmt 0x146940c18 <line:3:5, col:10>     | `-VarDecl 0x146940bb0 <col:5, col:9> col:9 used i 'int'     |-DeclStmt 0x146940cb0 <line:4:5, col:10>     | `-VarDecl 0x146940c48 <col:5, col:9> col:9 used n 'int'     |-IfStmt 0x146941050 <line:7:5, line:9:5>     | |-BinaryOperator 0x146940ec0 <line:7:9, col:45> 'int' contains-errors '&&'     | | |-BinaryOperator 0x146940e68 <col:9, col:28> 'int' contains-errors '!='     | | | |-CXXDependentScopeMemberExpr 0x146940d30 <col:9, col:18> '<dependent type>' contains-errors lvalue ->writev     | | | | `-CXXDependentScopeMemberExpr 0x146940ce8 <col:9, col:12> '<dependent type>' contains-errors lvalue ->priv     | | | |   `-RecoveryExpr 0x146940cc8 <col:9> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x146940e48 <col:28> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x146940ea0 <col:36, col:45> 'int' '>'     | |   |-ImplicitCastExpr 0x146940e88 <col:36> 'int' <LValueToRValue>     | |   | `-DeclRefExpr 0x146940db0 <col:36> 'int' lvalue ParmVar 0x146928798 'iovcnt' 'int'     | |   `-IntegerLiteral 0x146940dd0 <col:45> 'int' 1     | `-CompoundStmt 0x146941038 <col:48, line:9:5>     |   `-ReturnStmt 0x146941028 <line:8:9, col:46>     |     `-CallExpr 0x146940ff0 <col:16, col:46> '<dependent type>' contains-errors     |       |-CXXDependentScopeMemberExpr 0x146940f48 <col:16, col:25> '<dependent type>' contains-errors lvalue ->writev     |       | `-CXXDependentScopeMemberExpr 0x146940f00 <col:16, col:19> '<dependent type>' contains-errors lvalue ->priv     |       |   `-RecoveryExpr 0x146940ee0 <col:16> '<dependent type>' contains-errors lvalue     |       |-RecoveryExpr 0x146940f90 <col:32> '<dependent type>' contains-errors lvalue     |       |-DeclRefExpr 0x146940fb0 <col:35> 'const struct iovec *' lvalue ParmVar 0x146928718 'iov' 'const struct iovec *'     |       `-DeclRefExpr 0x146940fd0 <col:40> 'int' lvalue ParmVar 0x146928798 'iovcnt' 'int'     |-ForStmt 0x146941660 <line:11:5, line:16:5>     | |-BinaryOperator 0x1469410b0 <line:11:10, col:14> 'int' '='     | | |-DeclRefExpr 0x146941070 <col:10> 'int' lvalue Var 0x146940bb0 'i' 'int'     | | `-IntegerLiteral 0x146941090 <col:14> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x146941140 <col:17, col:21> 'int' '<'     | | |-ImplicitCastExpr 0x146941110 <col:17> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x1469410d0 <col:17> 'int' lvalue Var 0x146940bb0 'i' 'int'     | | `-ImplicitCastExpr 0x146941128 <col:21> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x1469410f0 <col:21> 'int' lvalue ParmVar 0x146928798 'iovcnt' 'int'     | |-UnaryOperator 0x146941180 <col:29, col:31> 'int' prefix '++'     | | `-DeclRefExpr 0x146941160 <col:31> 'int' lvalue Var 0x146940bb0 'i' 'int'     | `-CompoundStmt 0x146941648 <col:34, line:16:5>     |   `-IfStmt 0x146941608 <line:13:9, line:14:35>     |     |-BinaryOperator 0x146941488 <line:13:13, col:18> 'int' '<='     |     | |-ImplicitCastExpr 0x146941470 <col:13> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x146941430 <col:13> 'int' lvalue Var 0x146940c48 'n' 'int'     |     | `-IntegerLiteral 0x146941450 <col:18> 'int' 0     |     `-ReturnStmt 0x1469415f8 <line:14:13, col:35>     |       `-ConditionalOperator 0x1469415c8 <col:20, col:35> '<dependent type>' contains-errors     |         |-BinaryOperator 0x146941588 <col:20, col:27> 'int' contains-errors '=='     |         | |-RecoveryExpr 0x146941568 <col:20> '<dependent type>' contains-errors lvalue     |         | `-IntegerLiteral 0x1469414c0 <col:27> 'int' 0     |         |-DeclRefExpr 0x146941500 <col:31> 'int' lvalue Var 0x146940c48 'n' 'int'     |         `-RecoveryExpr 0x1469415a8 <col:35> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1469416d0 <line:18:5, col:12>       `-RecoveryExpr 0x1469416b0 <col:12> '<dependent type>' contains-errors lvalue ","20378":"`-FunctionDecl 0x15100dfa8  line:1:12 invalid parse_timecode_in_framenum_format 'int (int *, int *, int, int)' static   |-ParmVarDecl 0x15100dd28 <col:46, col:63> col:63 invalid s 'int *'   |-ParmVarDecl 0x15100dda8 <col:66, col:76> col:76 invalid st 'int *'   |-ParmVarDecl 0x15100de28 <line:2:46, col:54> col:54 invalid value 'int'   |-ParmVarDecl 0x15100dea8 <col:61, col:65> col:65 used flags 'int'   `-CompoundStmt 0x151028868 <line:3:1, line:13:1>     |-DeclStmt 0x15100e100 <line:5:5, col:35>     | `-VarDecl 0x15100e098 <col:5, col:10> col:10 invalid buf 'char'     |-DeclStmt 0x1510282a0 <line:7:5, col:55>     | `-VarDecl 0x15100e130 <col:5, col:54> col:9 used ret 'int' cinit     |   `-CallExpr 0x151028258 <col:15, col:54> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x15100e2f0 <col:15> 'int ()' Function 0x15100e238 'av_timecode_init' 'int ()'     |     |-UnaryOperator 0x151028220 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | `-RecoveryExpr 0x151028200 <col:33> '<dependent type>' contains-errors lvalue     |     |-RecoveryExpr 0x151028238 <col:37> '<dependent type>' contains-errors lvalue     |     |-DeclRefExpr 0x15100e358 <col:43> 'int' lvalue ParmVar 0x15100dea8 'flags' 'int'     |     |-IntegerLiteral 0x15100e378 <col:50> 'int' 0     |     `-RecoveryExpr 0x15100e398 <col:53> '<dependent type>' contains-errors lvalue     |-IfStmt 0x151028378 <line:8:5, line:9:16>     | |-BinaryOperator 0x151028310 <line:8:9, col:15> 'int' contains-errors '<'     | | |-ImplicitCastExpr 0x1510282f8 <col:9> 'int' contains-errors <LValueToRValue>     | | | `-DeclRefExpr 0x1510282b8 <col:9> 'int' contains-errors lvalue Var 0x15100e130 'ret' 'int'     | | `-IntegerLiteral 0x1510282d8 <col:15> 'int' 0     | `-ReturnStmt 0x151028368 <line:9:9, col:16>     |   `-ImplicitCastExpr 0x151028350 <col:16> 'int' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x151028330 <col:16> 'int' contains-errors lvalue Var 0x15100e130 'ret' 'int'     |-CallExpr 0x1510287f8 <line:10:5, line:11:60> '<dependent type>' contains-errors     | |-DeclRefExpr 0x151028478 <line:10:5> 'int ()' Function 0x1510283c0 'av_dict_set' 'int ()'     | |-UnaryOperator 0x151028500 <col:17, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x1510284b8 <col:18, col:22> '<dependent type>' contains-errors lvalue ->metadata     | |   `-RecoveryExpr 0x151028498 <col:18> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x151028560 <col:32> 'char[4]' lvalue \"STR\"     | |-CallExpr 0x1510287c0 <line:11:17, col:56> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x151028660 <col:17> 'int ()' Function 0x1510285a8 'av_timecode_make_string' 'int ()'     | | |-UnaryOperator 0x1510287a8 <col:41, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | `-RecoveryExpr 0x151028788 <col:42> '<dependent type>' contains-errors lvalue     | | |-RecoveryExpr 0x1510286b0 <col:46> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1510286d0 <col:51> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x151028728 <col:59> 'int' 0     `-ReturnStmt 0x151028858 <line:12:5, col:12>       `-IntegerLiteral 0x151028838 <col:12> 'int' 0 ","20235":"`-FunctionDecl 0x137941688  line:1:12 invalid sanity_check_int_value 'int (struct snd_card *, const struct snd_ctl_elem_value *, const struct snd_ctl_elem_info *, int, int)' static   |-ParmVarDecl 0x137928e48 <col:35, col:52> col:52 used card 'struct snd_card *'   |-ParmVarDecl 0x137941228 <line:2:7, col:40> col:40 used control 'const struct snd_ctl_elem_value *'   |-ParmVarDecl 0x1379413f8 <line:3:7, col:39> col:39 used info 'const struct snd_ctl_elem_info *'   |-ParmVarDecl 0x137941478 <line:4:7, col:11> col:11 used i 'int'   |-ParmVarDecl 0x137941510 <col:14, col:19> col:19 invalid print_error 'int'   `-CompoundStmt 0x137944a78 <line:5:1, line:60:1>     |-DeclStmt 0x137941980 <line:6:2, col:35>     | |-VarDecl 0x137941770 <col:2, col:12> col:12 used lval 'long long'     | |-VarDecl 0x1379417f0 <col:2, col:18> col:18 used lmin 'long long'     | |-VarDecl 0x137941870 <col:2, col:24> col:24 used lmax 'long long'     | `-VarDecl 0x1379418f0 <col:2, col:30> col:30 used lstep 'long long'     |-SwitchStmt 0x137941a10 <line:9:2, line:35:2>     | |-ImplicitCastExpr 0x1379419f8 <line:9:10, col:16> '<dependent type>' contains-errors <LValueToRValue>     | | `-RecoveryExpr 0x1379419d0 <col:10, col:16> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x137941998 <col:10> 'const struct snd_ctl_elem_info *' lvalue ParmVar 0x1379413f8 'info' 'const struct snd_ctl_elem_info *'     | `-CompoundStmt 0x137943a50 <col:22, line:35:2>     |   |-DefaultStmt 0x137941bf0 <line:10:2, line:12:40>     |   | `-BinaryOperator 0x137941bd0 <col:3, col:40> 'long long' contains-errors '='     |   |   |-DeclRefExpr 0x137941a50 <col:3> 'long long' lvalue Var 0x137941770 'lval' 'long long'     |   |   `-ArraySubscriptExpr 0x137941bb0 <col:10, col:40> '<dependent type>' contains-errors lvalue     |   |     |-ImplicitCastExpr 0x137941b80 <col:10, col:33> '<dependent type>' contains-errors <LValueToRValue>     |   |     | `-CXXDependentScopeMemberExpr 0x137941b18 <col:10, col:33> '<dependent type>' contains-errors lvalue .value     |   |     |   `-CXXDependentScopeMemberExpr 0x137941ad0 <col:10, col:25> '<dependent type>' contains-errors lvalue .integer     |   |     |     `-RecoveryExpr 0x137941aa8 <col:10, col:19> '<dependent type>' contains-errors lvalue     |   |     |       `-DeclRefExpr 0x137941a70 <col:10> 'const struct snd_ctl_elem_value *' lvalue ParmVar 0x137941228 'control' 'const struct snd_ctl_elem_value *'     |   |     `-ImplicitCastExpr 0x137941b98 <col:39> 'int' <LValueToRValue>     |   |       `-DeclRefExpr 0x137941b60 <col:39> 'int' lvalue ParmVar 0x137941478 'i' 'int'     |   |-BinaryOperator 0x137941c68 <line:13:3, col:10> 'long long' '='     |   | |-DeclRefExpr 0x137941c10 <col:3> 'long long' lvalue Var 0x1379417f0 'lmin' 'long long'     |   | `-ImplicitCastExpr 0x137941c50 <col:10> 'long long' <IntegralCast>     |   |   `-IntegerLiteral 0x137941c30 <col:10> 'int' 0     |   |-BinaryOperator 0x137941ce0 <line:14:3, col:10> 'long long' '='     |   | |-DeclRefExpr 0x137941c88 <col:3> 'long long' lvalue Var 0x137941870 'lmax' 'long long'     |   | `-ImplicitCastExpr 0x137941cc8 <col:10> 'long long' <IntegralCast>     |   |   `-IntegerLiteral 0x137941ca8 <col:10> 'int' 1     |   |-BinaryOperator 0x137941d58 <line:15:3, col:11> 'long long' '='     |   | |-DeclRefExpr 0x137941d00 <col:3> 'long long' lvalue Var 0x1379418f0 'lstep' 'long long'     |   | `-ImplicitCastExpr 0x137941d40 <col:11> 'long long' <IntegralCast>     |   |   `-IntegerLiteral 0x137941d20 <col:11> 'int' 0     |   |-BreakStmt 0x137941d78 <line:16:3>     |   |-BinaryOperator 0x137941f18 <line:18:3, col:40> 'long long' contains-errors '='     |   | |-DeclRefExpr 0x137941d98 <col:3> 'long long' lvalue Var 0x137941770 'lval' 'long long'     |   | `-ArraySubscriptExpr 0x137941ef8 <col:10, col:40> '<dependent type>' contains-errors lvalue     |   |   |-ImplicitCastExpr 0x137941ec8 <col:10, col:33> '<dependent type>' contains-errors <LValueToRValue>     |   |   | `-CXXDependentScopeMemberExpr 0x137941e60 <col:10, col:33> '<dependent type>' contains-errors lvalue .value     |   |   |   `-CXXDependentScopeMemberExpr 0x137941e18 <col:10, col:25> '<dependent type>' contains-errors lvalue .integer     |   |   |     `-RecoveryExpr 0x137941df0 <col:10, col:19> '<dependent type>' contains-errors lvalue     |   |   |       `-DeclRefExpr 0x137941db8 <col:10> 'const struct snd_ctl_elem_value *' lvalue ParmVar 0x137941228 'control' 'const struct snd_ctl_elem_value *'     |   |   `-ImplicitCastExpr 0x137941ee0 <col:39> 'int' <LValueToRValue>     |   |     `-DeclRefExpr 0x137941ea8 <col:39> 'int' lvalue ParmVar 0x137941478 'i' 'int'     |   |-BinaryOperator 0x137942048 <line:19:3, col:30> 'long long' contains-errors '='     |   | |-DeclRefExpr 0x137941f38 <col:3> 'long long' lvalue Var 0x1379417f0 'lmin' 'long long'     |   | `-CXXDependentScopeMemberExpr 0x137942000 <col:10, col:30> '<dependent type>' contains-errors lvalue .min     |   |   `-CXXDependentScopeMemberExpr 0x137941fb8 <col:10, col:22> '<dependent type>' contains-errors lvalue .integer     |   |     `-RecoveryExpr 0x137941f90 <col:10, col:16> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x137941f58 <col:10> 'const struct snd_ctl_elem_info *' lvalue ParmVar 0x1379413f8 'info' 'const struct snd_ctl_elem_info *'     |   |-BinaryOperator 0x137942178 <line:20:3, col:30> 'long long' contains-errors '='     |   | |-DeclRefExpr 0x137942068 <col:3> 'long long' lvalue Var 0x137941870 'lmax' 'long long'     |   | `-CXXDependentScopeMemberExpr 0x137942130 <col:10, col:30> '<dependent type>' contains-errors lvalue .max     |   |   `-CXXDependentScopeMemberExpr 0x1379420e8 <col:10, col:22> '<dependent type>' contains-errors lvalue .integer     |   |     `-RecoveryExpr 0x1379420c0 <col:10, col:16> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x137942088 <col:10> 'const struct snd_ctl_elem_info *' lvalue ParmVar 0x1379413f8 'info' 'const struct snd_ctl_elem_info *'     |   |-BinaryOperator 0x1379430b8 <line:21:3, col:31> 'long long' contains-errors '='     |   | |-DeclRefExpr 0x137942198 <col:3> 'long long' lvalue Var 0x1379418f0 'lstep' 'long long'     |   | `-CXXDependentScopeMemberExpr 0x137943070 <col:11, col:31> '<dependent type>' contains-errors lvalue .step     |   |   `-CXXDependentScopeMemberExpr 0x137943028 <col:11, col:23> '<dependent type>' contains-errors lvalue .integer     |   |     `-RecoveryExpr 0x137943000 <col:11, col:17> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x1379421b8 <col:11> 'const struct snd_ctl_elem_info *' lvalue ParmVar 0x1379413f8 'info' 'const struct snd_ctl_elem_info *'     |   |-BreakStmt 0x1379430d8 <line:22:3>     |   |-BinaryOperator 0x137943278 <line:24:3, col:42> 'long long' contains-errors '='     |   | |-DeclRefExpr 0x1379430f8 <col:3> 'long long' lvalue Var 0x137941770 'lval' 'long long'     |   | `-ArraySubscriptExpr 0x137943258 <col:10, col:42> '<dependent type>' contains-errors lvalue     |   |   |-ImplicitCastExpr 0x137943228 <col:10, col:35> '<dependent type>' contains-errors <LValueToRValue>     |   |   | `-CXXDependentScopeMemberExpr 0x1379431c0 <col:10, col:35> '<dependent type>' contains-errors lvalue .value     |   |   |   `-CXXDependentScopeMemberExpr 0x137943178 <col:10, col:25> '<dependent type>' contains-errors lvalue .integer64     |   |   |     `-RecoveryExpr 0x137943150 <col:10, col:19> '<dependent type>' contains-errors lvalue     |   |   |       `-DeclRefExpr 0x137943118 <col:10> 'const struct snd_ctl_elem_value *' lvalue ParmVar 0x137941228 'control' 'const struct snd_ctl_elem_value *'     |   |   `-ImplicitCastExpr 0x137943240 <col:41> 'int' <LValueToRValue>     |   |     `-DeclRefExpr 0x137943208 <col:41> 'int' lvalue ParmVar 0x137941478 'i' 'int'     |   |-BinaryOperator 0x1379433a8 <line:25:3, col:32> 'long long' contains-errors '='     |   | |-DeclRefExpr 0x137943298 <col:3> 'long long' lvalue Var 0x1379417f0 'lmin' 'long long'     |   | `-CXXDependentScopeMemberExpr 0x137943360 <col:10, col:32> '<dependent type>' contains-errors lvalue .min     |   |   `-CXXDependentScopeMemberExpr 0x137943318 <col:10, col:22> '<dependent type>' contains-errors lvalue .integer64     |   |     `-RecoveryExpr 0x1379432f0 <col:10, col:16> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x1379432b8 <col:10> 'const struct snd_ctl_elem_info *' lvalue ParmVar 0x1379413f8 'info' 'const struct snd_ctl_elem_info *'     |   |-BinaryOperator 0x1379434d8 <line:26:3, col:32> 'long long' contains-errors '='     |   | |-DeclRefExpr 0x1379433c8 <col:3> 'long long' lvalue Var 0x137941870 'lmax' 'long long'     |   | `-CXXDependentScopeMemberExpr 0x137943490 <col:10, col:32> '<dependent type>' contains-errors lvalue .max     |   |   `-CXXDependentScopeMemberExpr 0x137943448 <col:10, col:22> '<dependent type>' contains-errors lvalue .integer64     |   |     `-RecoveryExpr 0x137943420 <col:10, col:16> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x1379433e8 <col:10> 'const struct snd_ctl_elem_info *' lvalue ParmVar 0x1379413f8 'info' 'const struct snd_ctl_elem_info *'     |   |-BinaryOperator 0x137943608 <line:27:3, col:33> 'long long' contains-errors '='     |   | |-DeclRefExpr 0x1379434f8 <col:3> 'long long' lvalue Var 0x1379418f0 'lstep' 'long long'     |   | `-CXXDependentScopeMemberExpr 0x1379435c0 <col:11, col:33> '<dependent type>' contains-errors lvalue .step     |   |   `-CXXDependentScopeMemberExpr 0x137943578 <col:11, col:23> '<dependent type>' contains-errors lvalue .integer64     |   |     `-RecoveryExpr 0x137943550 <col:11, col:17> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x137943518 <col:11> 'const struct snd_ctl_elem_info *' lvalue ParmVar 0x1379413f8 'info' 'const struct snd_ctl_elem_info *'     |   |-BreakStmt 0x137943628 <line:28:3>     |   |-BinaryOperator 0x1379437c8 <line:30:3, col:42> 'long long' contains-errors '='     |   | |-DeclRefExpr 0x137943648 <col:3> 'long long' lvalue Var 0x137941770 'lval' 'long long'     |   | `-ArraySubscriptExpr 0x1379437a8 <col:10, col:42> '<dependent type>' contains-errors lvalue     |   |   |-ImplicitCastExpr 0x137943778 <col:10, col:36> '<dependent type>' contains-errors <LValueToRValue>     |   |   | `-CXXDependentScopeMemberExpr 0x137943710 <col:10, col:36> '<dependent type>' contains-errors lvalue .item     |   |   |   `-CXXDependentScopeMemberExpr 0x1379436c8 <col:10, col:25> '<dependent type>' contains-errors lvalue .enumerated     |   |   |     `-RecoveryExpr 0x1379436a0 <col:10, col:19> '<dependent type>' contains-errors lvalue     |   |   |       `-DeclRefExpr 0x137943668 <col:10> 'const struct snd_ctl_elem_value *' lvalue ParmVar 0x137941228 'control' 'const struct snd_ctl_elem_value *'     |   |   `-ImplicitCastExpr 0x137943790 <col:41> 'int' <LValueToRValue>     |   |     `-DeclRefExpr 0x137943758 <col:41> 'int' lvalue ParmVar 0x137941478 'i' 'int'     |   |-BinaryOperator 0x137943840 <line:31:3, col:10> 'long long' '='     |   | |-DeclRefExpr 0x1379437e8 <col:3> 'long long' lvalue Var 0x1379417f0 'lmin' 'long long'     |   | `-ImplicitCastExpr 0x137943828 <col:10> 'long long' <IntegralCast>     |   |   `-IntegerLiteral 0x137943808 <col:10> 'int' 0     |   |-BinaryOperator 0x1379439b0 <line:32:3, col:41> 'long long' contains-errors '='     |   | |-DeclRefExpr 0x137943860 <col:3> 'long long' lvalue Var 0x137941870 'lmax' 'long long'     |   | `-BinaryOperator 0x137943990 <col:10, col:41> '<dependent type>' contains-errors '-'     |   |   |-CXXDependentScopeMemberExpr 0x137943928 <col:10, col:33> '<dependent type>' contains-errors lvalue .items     |   |   | `-CXXDependentScopeMemberExpr 0x1379438e0 <col:10, col:22> '<dependent type>' contains-errors lvalue .enumerated     |   |   |   `-RecoveryExpr 0x1379438b8 <col:10, col:16> '<dependent type>' contains-errors lvalue     |   |   |     `-DeclRefExpr 0x137943880 <col:10> 'const struct snd_ctl_elem_info *' lvalue ParmVar 0x1379413f8 'info' 'const struct snd_ctl_elem_info *'     |   |   `-IntegerLiteral 0x137943970 <col:41> 'int' 1     |   |-BinaryOperator 0x137943a28 <line:33:3, col:11> 'long long' '='     |   | |-DeclRefExpr 0x1379439d0 <col:3> 'long long' lvalue Var 0x1379418f0 'lstep' 'long long'     |   | `-ImplicitCastExpr 0x137943a10 <col:11> 'long long' <IntegralCast>     |   |   `-IntegerLiteral 0x1379439f0 <col:11> 'int' 0     |   `-BreakStmt 0x137943a48 <line:34:3>     |-IfStmt 0x137944328 <line:37:2, line:45:2>     | |-BinaryOperator 0x137943c20 <line:37:6, col:28> 'int' '||'     | | |-BinaryOperator 0x137943b70 <col:6, col:13> 'int' '<'     | | | |-ImplicitCastExpr 0x137943b40 <col:6> 'long long' <LValueToRValue>     | | | | `-DeclRefExpr 0x137943b00 <col:6> 'long long' lvalue Var 0x137941770 'lval' 'long long'     | | | `-ImplicitCastExpr 0x137943b58 <col:13> 'long long' <LValueToRValue>     | | |   `-DeclRefExpr 0x137943b20 <col:13> 'long long' lvalue Var 0x1379417f0 'lmin' 'long long'     | | `-BinaryOperator 0x137943c00 <col:21, col:28> 'int' '>'     | |   |-ImplicitCastExpr 0x137943bd0 <col:21> 'long long' <LValueToRValue>     | |   | `-DeclRefExpr 0x137943b90 <col:21> 'long long' lvalue Var 0x137941770 'lval' 'long long'     | |   `-ImplicitCastExpr 0x137943be8 <col:28> 'long long' <LValueToRValue>     | |     `-DeclRefExpr 0x137943bb0 <col:28> 'long long' lvalue Var 0x137941870 'lmax' 'long long'     | `-CompoundStmt 0x137944310 <col:34, line:45:2>     |   `-IfStmt 0x1379442f0 <line:38:3, line:43:43>     |     |-RecoveryExpr 0x137943c40 <line:38:7> '<dependent type>' contains-errors lvalue     |     `-CallExpr 0x137944278 <line:39:4, line:43:43> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x137943dc0 <line:39:4> 'int ()' Function 0x137943d08 'dev_err' 'int ()'     |       |-RecoveryExpr 0x137943e18 <col:12, col:18> '<dependent type>' contains-errors lvalue     |       | `-DeclRefExpr 0x137943de0 <col:12> 'struct snd_card *' lvalue ParmVar 0x137928e48 'card' 'struct snd_card *'     |       |-StringLiteral 0x137943e80 <line:40:5> 'char[4]' lvalue \"STR\"     |       |-CXXDependentScopeMemberExpr 0x137943f00 <line:41:5, col:17> '<dependent type>' contains-errors lvalue .iface     |       | `-RecoveryExpr 0x137943ed8 <col:5, col:14> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x137943ea0 <col:5> 'const struct snd_ctl_elem_value *' lvalue ParmVar 0x137941228 'control' 'const struct snd_ctl_elem_value *'     |       |-CXXDependentScopeMemberExpr 0x137943fa8 <col:24, col:36> '<dependent type>' contains-errors lvalue .device     |       | `-RecoveryExpr 0x137943f80 <col:24, col:33> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x137943f48 <col:24> 'const struct snd_ctl_elem_value *' lvalue ParmVar 0x137941228 'control' 'const struct snd_ctl_elem_value *'     |       |-CXXDependentScopeMemberExpr 0x137944060 <line:42:5, col:17> '<dependent type>' contains-errors lvalue .subdevice     |       | `-RecoveryExpr 0x137944038 <col:5, col:14> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x137944000 <col:5> 'const struct snd_ctl_elem_value *' lvalue ParmVar 0x137941228 'control' 'const struct snd_ctl_elem_value *'     |       |-CXXDependentScopeMemberExpr 0x137944108 <col:28, col:40> '<dependent type>' contains-errors lvalue .name     |       | `-RecoveryExpr 0x1379440e0 <col:28, col:37> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x1379440a8 <col:28> 'const struct snd_ctl_elem_value *' lvalue ParmVar 0x137941228 'control' 'const struct snd_ctl_elem_value *'     |       |-CXXDependentScopeMemberExpr 0x1379441b0 <line:43:5, col:17> '<dependent type>' contains-errors lvalue .index     |       | `-RecoveryExpr 0x137944188 <col:5, col:14> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x137944150 <col:5> 'const struct snd_ctl_elem_value *' lvalue ParmVar 0x137941228 'control' 'const struct snd_ctl_elem_value *'     |       |-DeclRefExpr 0x1379441f8 <col:24> 'long long' lvalue Var 0x137941770 'lval' 'long long'     |       |-DeclRefExpr 0x137944218 <col:30> 'long long' lvalue Var 0x1379417f0 'lmin' 'long long'     |       |-DeclRefExpr 0x137944238 <col:36> 'long long' lvalue Var 0x137941870 'lmax' 'long long'     |       `-DeclRefExpr 0x137944258 <col:42> 'int' lvalue ParmVar 0x137941478 'i' 'int'     |-IfStmt 0x137944a28 <line:46:2, line:57:2>     | |-ImplicitCastExpr 0x137944368 <line:46:6> 'long long' <LValueToRValue>     | | `-DeclRefExpr 0x137944348 <col:6> 'long long' lvalue Var 0x1379418f0 'lstep' 'long long'     | `-CompoundStmt 0x137944a10 <col:13, line:57:2>     |   `-IfStmt 0x1379449f0 <line:48:3, line:56:3>     |     |-RecoveryExpr 0x1379444c0 <line:48:7> '_Bool' contains-errors     |     `-CompoundStmt 0x1379449d8 <col:12, line:56:3>     |       `-IfStmt 0x1379449b8 <line:49:4, line:54:39>     |         |-RecoveryExpr 0x1379444e0 <line:49:8> '<dependent type>' contains-errors lvalue     |         `-CallExpr 0x137944948 <line:50:5, line:54:39> '<dependent type>' contains-errors     |           |-DeclRefExpr 0x137944500 <line:50:5> 'int ()' Function 0x137943d08 'dev_err' 'int ()'     |           |-RecoveryExpr 0x137944558 <col:13, col:19> '<dependent type>' contains-errors lvalue     |           | `-DeclRefExpr 0x137944520 <col:13> 'struct snd_card *' lvalue ParmVar 0x137928e48 'card' 'struct snd_card *'     |           |-StringLiteral 0x137944580 <line:51:6> 'char[4]' lvalue \"STR\"     |           |-CXXDependentScopeMemberExpr 0x137944600 <line:52:6, col:18> '<dependent type>' contains-errors lvalue .iface     |           | `-RecoveryExpr 0x1379445d8 <col:6, col:15> '<dependent type>' contains-errors lvalue     |           |   `-DeclRefExpr 0x1379445a0 <col:6> 'const struct snd_ctl_elem_value *' lvalue ParmVar 0x137941228 'control' 'const struct snd_ctl_elem_value *'     |           |-CXXDependentScopeMemberExpr 0x1379446a8 <col:25, col:37> '<dependent type>' contains-errors lvalue .device     |           | `-RecoveryExpr 0x137944680 <col:25, col:34> '<dependent type>' contains-errors lvalue     |           |   `-DeclRefExpr 0x137944648 <col:25> 'const struct snd_ctl_elem_value *' lvalue ParmVar 0x137941228 'control' 'const struct snd_ctl_elem_value *'     |           |-CXXDependentScopeMemberExpr 0x137944750 <line:53:6, col:18> '<dependent type>' contains-errors lvalue .subdevice     |           | `-RecoveryExpr 0x137944728 <col:6, col:15> '<dependent type>' contains-errors lvalue     |           |   `-DeclRefExpr 0x1379446f0 <col:6> 'const struct snd_ctl_elem_value *' lvalue ParmVar 0x137941228 'control' 'const struct snd_ctl_elem_value *'     |           |-CXXDependentScopeMemberExpr 0x1379447f8 <col:29, col:41> '<dependent type>' contains-errors lvalue .name     |           | `-RecoveryExpr 0x1379447d0 <col:29, col:38> '<dependent type>' contains-errors lvalue     |           |   `-DeclRefExpr 0x137944798 <col:29> 'const struct snd_ctl_elem_value *' lvalue ParmVar 0x137941228 'control' 'const struct snd_ctl_elem_value *'     |           |-CXXDependentScopeMemberExpr 0x1379448a0 <line:54:6, col:18> '<dependent type>' contains-errors lvalue .index     |           | `-RecoveryExpr 0x137944878 <col:6, col:15> '<dependent type>' contains-errors lvalue     |           |   `-DeclRefExpr 0x137944840 <col:6> 'const struct snd_ctl_elem_value *' lvalue ParmVar 0x137941228 'control' 'const struct snd_ctl_elem_value *'     |           |-DeclRefExpr 0x1379448e8 <col:25> 'long long' lvalue Var 0x137941770 'lval' 'long long'     |           |-DeclRefExpr 0x137944908 <col:31> 'long long' lvalue Var 0x1379418f0 'lstep' 'long long'     |           `-DeclRefExpr 0x137944928 <col:38> 'int' lvalue ParmVar 0x137941478 'i' 'int'     `-ReturnStmt 0x137944a68 <line:59:2, col:9>       `-IntegerLiteral 0x137944a48 <col:9> 'int' 0 ","20874":"`-FunctionDecl 0x15300e308  line:1:14 invalid EvalHybrid 'int (int *, int *, int *, int *, const int *, const int *, const int *, int *, int *, int *)'   |-ParmVarDecl 0x15300dd28 <col:25, col:40> col:40 invalid context 'int *'   |-ParmVarDecl 0x15300dda8 <col:49, col:61> col:61 invalid node 'int *'   |-ParmVarDecl 0x15300de28 <line:2:25, col:43> col:43 invalid params 'int *'   |-ParmVarDecl 0x15300dea8 <col:51, col:59> col:59 invalid data 'int *'   |-ParmVarDecl 0x15300df28 <line:3:25, col:45> col:45 invalid input 'const int *'   |-ParmVarDecl 0x15300dfa8 <col:52, col:72> col:72 invalid filter 'const int *'   |-ParmVarDecl 0x15300e028 <line:4:25, col:45> col:45 invalid bias 'const int *'   |-ParmVarDecl 0x15300e0a8 <col:51, col:65> col:65 invalid im2col 'int *'   |-ParmVarDecl 0x15300e128 <line:5:25, col:39> col:39 invalid accum_scratch 'int *'   |-ParmVarDecl 0x15300e1a8 <col:54, col:68> col:68 invalid output 'int *'   `-CompoundStmt 0x153027b80 <col:76, line:69:1>     |-DeclStmt 0x153808918 <line:6:3, col:53>     | |-VarDecl 0x153808818 <col:3, col:9> col:9 used output_activation_min 'float'     | `-VarDecl 0x153808898 <col:3, col:32> col:32 used output_activation_max 'float'     |-CallExpr 0x153808bc0 <line:7:3, line:8:50> '<dependent type>' contains-errors     | |-DeclRefExpr 0x153808a90 <line:7:3> 'int ()' Function 0x1538089d8 'CalculateActivationRange' 'int ()'     | |-CXXDependentScopeMemberExpr 0x153808ad0 <col:28, col:36> '<dependent type>' contains-errors lvalue ->activation     | | `-RecoveryExpr 0x153808ab0 <col:28> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x153808b70 <col:48, col:49> 'float *' prefix '&' cannot overflow     | | `-DeclRefExpr 0x153808b18 <col:49> 'float' lvalue Var 0x153808818 'output_activation_min' 'float'     | `-UnaryOperator 0x153808ba8 <line:8:28, col:29> 'float *' prefix '&' cannot overflow     |   `-DeclRefExpr 0x153808b88 <col:29> 'float' lvalue Var 0x153808898 'output_activation_max' 'float'     |-DeclStmt 0x153808f50 <line:10:3, col:72>     | `-VarDecl 0x153808c10 <col:3, col:71> col:13 used input_size 'const int' cinit     |   `-BinaryOperator 0x153808f30 <col:26, col:71> '<dependent type>' contains-errors '\/'     |     |-CallExpr 0x153808d98 <col:26, col:43> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x153808d58 <col:26> 'int ()' Function 0x153808ca0 'NumElements' 'int ()'     |     | `-RecoveryExpr 0x153808d78 <col:38> '<dependent type>' contains-errors lvalue     |     `-CallExpr 0x153808f00 <col:47, col:71> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x153808ea0 <col:47> 'int ()' Function 0x153808de8 'SizeOfDimension' 'int ()'     |       |-RecoveryExpr 0x153808ec0 <col:63> '<dependent type>' contains-errors lvalue     |       `-IntegerLiteral 0x153808ee0 <col:70> 'int' 0     |-DeclStmt 0x153809078 <line:11:3, col:51>     | `-VarDecl 0x153808f80 <col:3, col:50> col:13 used batch_size 'const int' cinit     |   `-CallExpr 0x153809048 <col:26, col:50> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x153808fe8 <col:26> 'int ()' Function 0x153808de8 'SizeOfDimension' 'int ()'     |     |-RecoveryExpr 0x153809008 <col:42> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x153809028 <col:49> 'int' 0     |-DeclStmt 0x153809158 <line:13:3, col:55>     | `-VarDecl 0x1538090d8 <col:3, col:16> col:16 input_ptr 'const float *'     |-DeclStmt 0x1538095d8 <line:24:3, col:76>     | `-VarDecl 0x153809570 <col:3, col:10> col:10 used scaling_factors_ptr 'float *'     |-CompoundStmt 0x1530277a8 <line:27:3, line:37:3>     | `-ForStmt 0x153027770 <line:29:5, line:36:5>     |   |-DeclStmt 0x153809690 <line:29:10, col:19>     |   | `-VarDecl 0x153809608 <col:10, col:18> col:14 used b 'int' cinit     |   |   `-IntegerLiteral 0x153809670 <col:18> 'int' 0     |   |-<<<NULL>>>     |   |-BinaryOperator 0x153809718 <col:21, col:25> 'int' contains-errors '<'     |   | |-ImplicitCastExpr 0x1538096e8 <col:21> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x1538096a8 <col:21> 'int' lvalue Var 0x153809608 'b' 'int'     |   | `-ImplicitCastExpr 0x153809700 <col:25> 'int' contains-errors <LValueToRValue>     |   |   `-DeclRefExpr 0x1538096c8 <col:25> 'const int' contains-errors lvalue Var 0x153808f80 'batch_size' 'const int'     |   |-UnaryOperator 0x153809758 <col:37, col:39> 'int' prefix '++'     |   | `-DeclRefExpr 0x153809738 <col:39> 'int' lvalue Var 0x153809608 'b' 'int'     |   `-CompoundStmt 0x153027748 <col:42, line:36:5>     |     |-DeclStmt 0x153027498 <line:30:7, col:35>     |     | |-VarDecl 0x153809788 <col:7, col:13> col:13 unused_min 'float'     |     | `-VarDecl 0x153027418 <col:7, col:25> col:25 unused_max 'float'     |     |-DeclStmt 0x1530275c0 <line:31:7, col:40>     |     | `-VarDecl 0x1530274c8 <col:7, col:30> col:17 offset 'const int' cinit     |     |   `-BinaryOperator 0x1530275a0 <col:26, col:30> 'int' contains-errors '*'     |     |     |-ImplicitCastExpr 0x153027570 <col:26> 'int' <LValueToRValue>     |     |     | `-DeclRefExpr 0x153027530 <col:26> 'int' lvalue Var 0x153809608 'b' 'int'     |     |     `-ImplicitCastExpr 0x153027588 <col:30> 'int' contains-errors <LValueToRValue>     |     |       `-DeclRefExpr 0x153027550 <col:30> 'const int' contains-errors lvalue Var 0x153808c10 'input_size' 'const int'     |     `-CompoundAssignOperator 0x153027718 <line:35:7, col:48> 'float' contains-errors '*=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |       |-ArraySubscriptExpr 0x153027648 <col:7, col:28> 'float' lvalue     |       | |-ImplicitCastExpr 0x153027618 <col:7> 'float *' <LValueToRValue>     |       | | `-DeclRefExpr 0x1530275d8 <col:7> 'float *' lvalue Var 0x153809570 'scaling_factors_ptr' 'float *'     |       | `-ImplicitCastExpr 0x153027630 <col:27> 'int' <LValueToRValue>     |       |   `-DeclRefExpr 0x1530275f8 <col:27> 'int' lvalue Var 0x153809608 'b' 'int'     |       `-CXXDependentScopeMemberExpr 0x1530276d0 <col:33, col:48> '<dependent type>' contains-errors lvalue .scale     |         `-CXXDependentScopeMemberExpr 0x153027688 <col:33, col:41> '<dependent type>' contains-errors lvalue ->params     |           `-RecoveryExpr 0x153027668 <col:33> '<dependent type>' contains-errors lvalue     `-SwitchStmt 0x1530277e0 <line:39:3, line:66:3>       |-RecoveryExpr 0x1530277c0 <line:39:11> 'int' contains-errors       `-CompoundStmt 0x153027b68 <col:24, line:66:3>         `-CompoundStmt 0x153027b50 <line:43:27, line:65:5>           `-BreakStmt 0x153027b48 <line:64:7> ","20492":"`-FunctionDecl 0x14c928280  line:1:13 invalid ev_stream_closed 'void (int *, int *)' static   |-ParmVarDecl 0x14c928128 <col:30, col:42> col:42 referenced invalid session 'int *'   |-ParmVarDecl 0x14c9281a8 <col:51, col:62> col:62 invalid stream 'int *'   `-CompoundStmt 0x14c942550 <line:2:1, line:26:1>     |-IfStmt 0x14c941880 <line:5:5, line:8:5>     | |-BinaryOperator 0x14c9286b8 <line:5:9, line:6:54> 'int' contains-errors '&&'     | | |-CallExpr 0x14c928538 <line:5:9, col:46> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x14c9284b0 <col:9> 'int ()' Function 0x14c9283f8 'H2_STREAM_CLIENT_INITIATED' 'int ()'     | | | `-CXXDependentScopeMemberExpr 0x14c9284f0 <col:36, col:44> '<dependent type>' contains-errors lvalue ->id     | | |   `-RecoveryExpr 0x14c9284d0 <col:36> '<dependent type>' contains-errors lvalue     | | `-ParenExpr 0x14c928698 <line:6:12, col:54> 'int' contains-errors     | |   `-BinaryOperator 0x14c928678 <col:13, col:41> 'int' contains-errors '>'     | |     |-CXXDependentScopeMemberExpr 0x14c928580 <col:13, col:21> '<dependent type>' contains-errors lvalue ->id     | |     | `-RecoveryExpr 0x14c928560 <col:13> '<dependent type>' contains-errors lvalue     | |     `-CXXDependentScopeMemberExpr 0x14c928630 <col:26, col:41> '<dependent type>' contains-errors lvalue .completed_max     | |       `-CXXDependentScopeMemberExpr 0x14c9285e8 <col:26, col:35> '<dependent type>' contains-errors lvalue ->local     | |         `-RecoveryExpr 0x14c9285c8 <col:26> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14c941868 <col:57, line:8:5>     |   `-BinaryOperator 0x14c941848 <line:7:9, col:48> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x14c928768 <col:9, col:24> '<dependent type>' contains-errors lvalue .completed_max     |     | `-CXXDependentScopeMemberExpr 0x14c928720 <col:9, col:18> '<dependent type>' contains-errors lvalue ->local     |     |   `-RecoveryExpr 0x14c9286f8 <col:9> '<dependent type>' contains-errors lvalue     |     |     `-DeclRefExpr 0x14c9286d8 <col:9> 'int *' lvalue ParmVar 0x14c928128 'session' 'int *'     |     `-CXXDependentScopeMemberExpr 0x14c941800 <col:40, col:48> '<dependent type>' contains-errors lvalue ->id     |       `-RecoveryExpr 0x14c9287b0 <col:40> '<dependent type>' contains-errors lvalue     |-SwitchStmt 0x14c941920 <line:9:5, line:19:5>     | |-ImplicitCastExpr 0x14c941908 <line:9:13, col:22> '<dependent type>' contains-errors <LValueToRValue>     | | `-CXXDependentScopeMemberExpr 0x14c9418c0 <col:13, col:22> '<dependent type>' contains-errors lvalue ->state     | |   `-RecoveryExpr 0x14c9418a0 <col:13> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14c941d80 <col:29, line:19:5>     |   |-IfStmt 0x14c941d30 <line:11:13, line:15:13>     |   | |-BinaryOperator 0x14c9419e8 <line:11:17, col:42> 'int' contains-errors '=='     |   | | |-CXXDependentScopeMemberExpr 0x14c941980 <col:17, col:26> '<dependent type>' contains-errors lvalue ->open_streams     |   | | | `-RecoveryExpr 0x14c941960 <col:17> '<dependent type>' contains-errors lvalue     |   | | `-IntegerLiteral 0x14c9419c8 <col:42> 'int' 0     |   | `-CompoundStmt 0x14c941d18 <col:45, line:15:13>     |   |   `-BinaryOperator 0x14c941cf8 <line:13:17, line:14:56> '<dependent type>' contains-errors '='     |   |     |-CXXDependentScopeMemberExpr 0x14c941a50 <line:13:17, col:26> '<dependent type>' contains-errors lvalue ->idle_until     |   |     | `-RecoveryExpr 0x14c941a28 <col:17> '<dependent type>' contains-errors lvalue     |   |     |   `-DeclRefExpr 0x14c941a08 <col:17> 'int *' lvalue ParmVar 0x14c928128 'session' 'int *'     |   |     `-ParenExpr 0x14c941cd8 <col:39, line:14:56> '<dependent type>' contains-errors     |   |       `-BinaryOperator 0x14c941cb8 <line:13:40, line:14:55> '<dependent type>' contains-errors '+'     |   |         |-CXXDependentScopeMemberExpr 0x14c941b00 <line:13:40, col:52> '<dependent type>' contains-errors lvalue ->keep_alive_timeout     |   |         | `-CXXDependentScopeMemberExpr 0x14c941ab8 <col:40, col:49> '<dependent type>' contains-errors lvalue ->s     |   |         |   `-RecoveryExpr 0x14c941a98 <col:40> '<dependent type>' contains-errors lvalue     |   |         `-CallExpr 0x14c941c98 <line:14:42, col:55> 'int'     |   |           `-ImplicitCastExpr 0x14c941c80 <col:42> 'int (*)()' <FunctionToPointerDecay>     |   |             `-DeclRefExpr 0x14c941c28 <col:42> 'int ()' Function 0x14c941b70 'apr_time_now' 'int ()'     |   |-BreakStmt 0x14c941d50 <line:16:13>     |   `-DefaultStmt 0x14c941d60 <line:17:9, line:18:13>     |     `-BreakStmt 0x14c941d58 <col:13>     |-CallExpr 0x14c942178 <line:23:5, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c942088 <col:5> 'int ()' Function 0x14c941fd0 'APR_BRIGADE_INSERT_TAIL' 'int ()'     | |-CXXDependentScopeMemberExpr 0x14c9420c8 <col:29, col:38> '<dependent type>' contains-errors lvalue ->bbtmp     | | `-RecoveryExpr 0x14c9420a8 <col:29> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14c942158 <col:45> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14c942390 <line:24:5, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c942288 <col:5> 'int ()' Function 0x14c9421d0 'h2_conn_io_pass' 'int ()'     | |-UnaryOperator 0x14c942310 <col:21, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x14c9422c8 <col:22, col:31> '<dependent type>' contains-errors lvalue ->io     | |   `-RecoveryExpr 0x14c9422a8 <col:22> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x14c942348 <col:35, col:44> '<dependent type>' contains-errors lvalue ->bbtmp     |   `-RecoveryExpr 0x14c942328 <col:35> '<dependent type>' contains-errors lvalue     `-CallExpr 0x14c942528 <line:25:5, col:39> '<dependent type>' contains-errors       |-DeclRefExpr 0x14c9424a0 <col:5> 'int ()' Function 0x14c9423e8 'apr_brigade_cleanup' 'int ()'       `-CXXDependentScopeMemberExpr 0x14c9424e0 <col:25, col:34> '<dependent type>' contains-errors lvalue ->bbtmp         `-RecoveryExpr 0x14c9424c0 <col:25> '<dependent type>' contains-errors lvalue ","21086":"`-FunctionDecl 0x12e9283e8  line:1:1 invalid gdk_pixbuf_loader_write 'int (int *, const char *, int, int **)'   |-ParmVarDecl 0x12e928128 <col:26, col:43> col:43 invalid loader 'int *'   |-ParmVarDecl 0x12e9281a8 <line:2:5, col:22> col:22 used buf 'const char *'   |-ParmVarDecl 0x12e928228 <line:3:5, col:22> col:22 referenced invalid count 'int'   |-ParmVarDecl 0x12e9282e0 <line:4:26, col:43> col:43 invalid error 'int **'   `-CompoundStmt 0x12f00acc0 <line:5:1, line:54:1>     |-CallExpr 0x12e928740 <line:8:3, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12e928620 <col:3> 'int ()' Function 0x12e928568 'g_return_val_if_fail' 'int ()'     | |-BinaryOperator 0x12e928700 <col:25, col:35> 'int' contains-errors '!='     | | |-RecoveryExpr 0x12e928640 <col:25> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12e9286e0 <col:35> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x12e928720 <col:41> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12f009388 <line:9:3, col:61> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12e928770 <col:3> 'int ()' Function 0x12e928568 'g_return_val_if_fail' 'int ()'     | |-CallExpr 0x12f0092f8 <col:25, col:53> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x12f0092b8 <col:25> 'int ()' Function 0x12f009200 'GDK_IS_PIXBUF_LOADER' 'int ()'     | | `-RecoveryExpr 0x12f0092d8 <col:47> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x12f009368 <col:56> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12f0094d8 <line:11:3, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f0093b8 <col:3> 'int ()' Function 0x12e928568 'g_return_val_if_fail' 'int ()'     | |-BinaryOperator 0x12f009498 <col:25, col:32> 'int' contains-errors '!='     | | |-DeclRefExpr 0x12f0093d8 <col:25> 'const char *' lvalue ParmVar 0x12e9281a8 'buf' 'const char *'     | | `-RecoveryExpr 0x12f009478 <col:32> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x12f0094b8 <col:38> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12f0095f0 <line:12:3, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f009508 <col:3> 'int ()' Function 0x12e928568 'g_return_val_if_fail' 'int ()'     | |-BinaryOperator 0x12f009568 <col:25, col:34> 'int' contains-errors '>='     | | |-RecoveryExpr 0x12f009528 <col:25> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x12f009548 <col:34> 'int' 0     | `-RecoveryExpr 0x12f0095d0 <col:37> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12f009850 <line:17:3, col:53> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f009688 <col:3> 'int ()' Function 0x12e928568 'g_return_val_if_fail' 'int ()'     | |-BinaryOperator 0x12f009810 <col:25, col:41> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x12f0097a8 <col:25, col:31> '<dependent type>' contains-errors lvalue ->closed     | | | `-RecoveryExpr 0x12f009788 <col:25> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12f0097f0 <col:41> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x12f009830 <col:48> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12f009c38 <line:19:3, line:29:5>     | |-BinaryOperator 0x12f0099a0 <line:19:7, col:29> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x12f009938 <col:7, col:13> '<dependent type>' contains-errors lvalue ->image_module     | | | `-RecoveryExpr 0x12f009918 <col:7> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12f009980 <col:29> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12f009c28 <line:20:5, line:29:5>     `-IfStmt 0x12f00aca0 <line:31:3, line:51:5>       |-RecoveryExpr 0x12f009cb8 <line:31:7, col:40> '_Bool' contains-errors       `-CompoundStmt 0x12f00ac88 <line:32:5, line:51:5>         `-IfStmt 0x12f00ac68 <line:36:7, line:48:9>           |-RecoveryExpr 0x12f009da8 <line:36:11, col:41> '_Bool' contains-errors           `-CompoundStmt 0x12f00ac58 <line:37:9, line:48:9> ","21068":"`-FunctionDecl 0x15c80ddf8  line:1:29 invalid sdl_deserialize_resriction_int 'int (char **)' static   |-ParmVarDecl 0x15c80dd28 <col:60, col:67> col:67 used in 'char **'   `-CompoundStmt 0x15d008578 <line:2:1, line:13:1>     `-IfStmt 0x15d008548 <line:3:2, line:12:2> has_else       |-BinaryOperator 0x15c80df78 <line:3:6, col:14> 'int' '=='       | |-ImplicitCastExpr 0x15c80df60 <col:6, col:8> 'int' <IntegralCast>       | | `-ImplicitCastExpr 0x15c80df48 <col:6, col:8> 'char' <LValueToRValue>       | |   `-UnaryOperator 0x15c80df10 <col:6, col:8> 'char' lvalue prefix '*' cannot overflow       | |     `-ImplicitCastExpr 0x15c80def8 <col:7, col:8> 'char *' <LValueToRValue>       | |       `-UnaryOperator 0x15c80dee0 <col:7, col:8> 'char *' lvalue prefix '*' cannot overflow       | |         `-ImplicitCastExpr 0x15c80dec8 <col:8> 'char **' <LValueToRValue>       | |           `-DeclRefExpr 0x15c80dea8 <col:8> 'char **' lvalue ParmVar 0x15c80dd28 'in' 'char **'       | `-IntegerLiteral 0x15c80df28 <col:14> 'int' 1       |-CompoundStmt 0x15d0083f8 <col:17, line:9:2>       | |-CallExpr 0x15c80e198 <line:5:3, col:24> 'int'       | | |-ImplicitCastExpr 0x15c80e180 <col:3> 'int (*)()' <FunctionToPointerDecay>       | | | `-DeclRefExpr 0x15c80e0f0 <col:3> 'int ()' Function 0x15c80e038 'WSDL_CACHE_SKIP' 'int ()'       | | |-IntegerLiteral 0x15c80e110 <col:19> 'int' 1       | | `-ImplicitCastExpr 0x15c80e1c8 <col:22> 'char **' <LValueToRValue>       | |   `-DeclRefExpr 0x15c80e130 <col:22> 'char **' lvalue ParmVar 0x15c80dd28 'in' 'char **'       | |-CallExpr 0x15d008200 <line:6:3, col:34> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x15c80e2c0 <col:3> 'int ()' Function 0x15c80e208 'WSDL_CACHE_GET_INT' 'int ()'       | | |-CXXDependentScopeMemberExpr 0x15c80e3b0 <col:22, col:25> '<dependent type>' contains-errors lvalue ->value       | | | `-RecoveryExpr 0x15c80e390 <col:22> '<dependent type>' contains-errors lvalue       | | `-DeclRefExpr 0x15c80e340 <col:32> 'char **' lvalue ParmVar 0x15c80dd28 'in' 'char **'       | `-ReturnStmt 0x15d0083e8 <line:8:3, col:10>       |   `-RecoveryExpr 0x15d0083c8 <col:10> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x15d008528 <line:9:9, line:12:2>         |-CallExpr 0x15d008498 <line:10:3, col:24> 'int'         | |-ImplicitCastExpr 0x15d008480 <col:3> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x15d008420 <col:3> 'int ()' Function 0x15c80e038 'WSDL_CACHE_SKIP' 'int ()'         | |-IntegerLiteral 0x15d008440 <col:19> 'int' 1         | `-ImplicitCastExpr 0x15d0084c8 <col:22> 'char **' <LValueToRValue>         |   `-DeclRefExpr 0x15d008460 <col:22> 'char **' lvalue ParmVar 0x15c80dd28 'in' 'char **'         `-ReturnStmt 0x15d008518 <line:11:3, col:10>           `-RecoveryExpr 0x15d0084f8 <col:10> '<dependent type>' contains-errors lvalue ","21143":"`-FunctionDecl 0x1240433f8  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x1240434f8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x124043560 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x1240435c8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1240434a0 <<invalid sloc>> Implicit 882 ","20823":"`-FunctionDecl 0x136941d60  col:5 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x136941e60 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x136941ec8 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x136941f30 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x136941e08 <<invalid sloc>> Implicit 900 ","21149":"`-FunctionDecl 0x12604a880  line:1:13 referenced invalid spl_ptr_llist_unshift 'void (int *, int *)' static   |-ParmVarDecl 0x12604a728 <col:35, col:50> col:50 referenced invalid llist 'int *'   |-ParmVarDecl 0x12604a7a8 <col:57, col:63> col:63 invalid data 'int *'   `-CompoundStmt 0x126063348 <line:2:1, line:22:1>     |-IfStmt 0x126063010 <line:10:2, line:14:2> has_else     | |-CXXDependentScopeMemberExpr 0x12604ac08 <line:10:6, col:13> '<dependent type>' contains-errors lvalue ->head     | | `-RecoveryExpr 0x12604abe8 <col:6> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x12604ad40 <col:19, line:12:2>     | `-CompoundStmt 0x126063000 <col:9, line:14:2>     |-UnaryOperator 0x126063178 <line:17:2, col:14> '<dependent type>' contains-errors postfix '++' cannot overflow     | `-CXXDependentScopeMemberExpr 0x126063130 <col:2, col:9> '<dependent type>' contains-errors lvalue ->count     |   `-RecoveryExpr 0x126063108 <col:2> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1260630e8 <col:2> 'int *' lvalue ParmVar 0x12604a728 'llist' 'int *'     `-IfStmt 0x126063328 <line:19:2, line:21:2>       |-CXXDependentScopeMemberExpr 0x1260631b0 <line:19:6, col:13> '<dependent type>' contains-errors lvalue ->ctor       | `-RecoveryExpr 0x126063190 <col:6> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x126063310 <col:19, line:21:2>         `-CallExpr 0x1260632e8 <line:20:3, col:19> '<dependent type>' contains-errors           |-CXXDependentScopeMemberExpr 0x126063240 <col:3, col:10> '<dependent type>' contains-errors lvalue ->ctor           | `-RecoveryExpr 0x126063218 <col:3> '<dependent type>' contains-errors lvalue           |   `-DeclRefExpr 0x1260631f8 <col:3> 'int *' lvalue ParmVar 0x12604a728 'llist' 'int *'           `-RecoveryExpr 0x1260632c8 <col:15> '<dependent type>' contains-errors lvalue ","21128":"`-FunctionDecl 0x1390274d8  line:1:1 invalid pci_set_cfgdata16 'int (struct pci_vdev *, int, int)'   |-ParmVarDecl 0x13900e248 <col:19, col:36> col:36 used dev 'struct pci_vdev *'   |-ParmVarDecl 0x13900e2c8 <col:41, col:45> col:45 used offset 'int'   |-ParmVarDecl 0x13900e360 <col:53, col:62> col:62 invalid val 'int'   `-CompoundStmt 0x139027938 <line:2:1, line:5:1> ","20570":"`-FunctionDecl 0x10680e350  line:1:13 my_caldav_init 'void (struct buf *)' static   |-ParmVarDecl 0x10680e248 <col:28, col:40> col:40 used serverinfo 'struct buf *'   `-CompoundStmt 0x106833fc8 <line:2:1, line:74:1>     |-DeclStmt 0x1068266c8 <line:3:5, col:24>     | `-VarDecl 0x106826660 <col:5, col:17> col:17 used domains 'const char *'     |-DeclStmt 0x106826760 <line:4:5, col:17>     | `-VarDecl 0x1068266f8 <col:5, col:11> col:11 used domain 'char *'     |-CallExpr 0x106826ac0 <line:7:5, col:55> 'int'     | |-ImplicitCastExpr 0x106826aa8 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1068268a0 <col:5> 'int ()' Function 0x1068267e8 'buf_printf' 'int ()'     | |-ImplicitCastExpr 0x106826af8 <col:16> 'struct buf *' <LValueToRValue>     | | `-DeclRefExpr 0x1068268c0 <col:16> 'struct buf *' lvalue ParmVar 0x10680e248 'serverinfo' 'struct buf *'     | |-ImplicitCastExpr 0x106826b10 <col:28> 'char *' <ArrayToPointerDecay>     | | `-StringLiteral 0x106826920 <col:28> 'char[4]' lvalue \"STR\"     | `-CallExpr 0x106826a88 <col:35, col:54> 'int'     |   `-ImplicitCastExpr 0x106826a70 <col:35> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x106826a20 <col:35> 'int ()' Function 0x106826968 'sqlite3_libversion' 'int ()'     |-CallExpr 0x106826bf8 <line:8:5, col:47> '<dependent type>' contains-errors     | |-DeclRefExpr 0x106826b28 <col:5> 'int ()' Function 0x1068267e8 'buf_printf' 'int ()'     | |-DeclRefExpr 0x106826b48 <col:16> 'struct buf *' lvalue ParmVar 0x10680e248 'serverinfo' 'struct buf *'     | |-StringLiteral 0x106826b68 <col:28> 'char[4]' lvalue \"STR\"     | `-RecoveryExpr 0x106826bd8 <col:35> '<dependent type>' contains-errors lvalue     |-IfStmt 0x106826db8 <line:23:5, col:38>     | |-UnaryOperator 0x106826d90 <col:9, col:29> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x106826d78 <col:10, col:29> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x106826d30 <col:10, col:29> '<dependent type>' contains-errors lvalue .enabled     | |     `-RecoveryExpr 0x106826d10 <col:10> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x106826da8 <col:38>     |-IfStmt 0x106827160 <line:25:5, line:27:5>     | |-UnaryOperator 0x106826f78 <line:25:9, col:49> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x106826f50 <col:10, col:49> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x106826eb8 <col:10> 'int ()' Function 0x106826e00 'config_getstring' 'int ()'     | |   `-RecoveryExpr 0x106826f30 <col:27> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x106827148 <col:52, line:27:5>     |   `-CallExpr 0x106827118 <line:26:2, col:24> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x106827070 <col:2> 'int ()' Function 0x106826fb8 'fatal' 'int ()'     |     |-StringLiteral 0x106827090 <col:8> 'char[4]' lvalue \"STR\"     |     `-RecoveryExpr 0x1068270f8 <col:15> '<dependent type>' contains-errors lvalue     `-CallExpr 0x106827298 <line:29:5, col:17> 'int'       `-ImplicitCastExpr 0x106827280 <col:5> 'int (*)()' <FunctionToPointerDecay>         `-DeclRefExpr 0x106827260 <col:5> 'int ()' Function 0x1068271a8 'caldav_init' 'int ()' ","20992":"`-FunctionDecl 0x154128288  line:1:8 invalid strk_Read 'int (int *, int *)'   |-ParmVarDecl 0x154128128 <col:18, col:26> col:26 invalid s 'int *'   |-ParmVarDecl 0x1541281a8 <col:29, col:43> col:43 invalid bs 'int *'   `-CompoundStmt 0x154141b10 <line:2:1, line:13:1>     |-IfStmt 0x154128600 <line:6:2, col:16>     | |-RecoveryExpr 0x154128598 <col:6> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1541285f0 <col:9, col:16>     |   `-RecoveryExpr 0x1541285d0 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x154141aa8 <line:8:2, line:11:2>     | |-UnaryOperator 0x154128730 <line:8:6, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x154128718 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x1541286d0 <col:7, col:12> '<dependent type>' contains-errors lvalue ->info     | |     `-RecoveryExpr 0x1541286b0 <col:7> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x154141a88 <col:18, line:11:2>     |   |-CallExpr 0x154141a08 <line:9:3, col:49> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1541418b8 <col:3> 'int ()' Function 0x154141800 'GF_LOG' 'int ()'     |   | |-RecoveryExpr 0x1541419c8 <col:10> '<dependent type>' contains-errors lvalue     |   | |-RecoveryExpr 0x1541419e8 <col:24> '<dependent type>' contains-errors lvalue     |   | `-ParenExpr 0x154141970 <col:42, col:48> 'char[4]' lvalue     |   |   `-StringLiteral 0x154141950 <col:43> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x154141a78 <line:10:3, col:10>     |     `-RecoveryExpr 0x154141a58 <col:10> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x154141b00 <line:12:2, col:9>       `-RecoveryExpr 0x154141ae0 <col:9> '<dependent type>' contains-errors lvalue ","20811":"`-FunctionDecl 0x12d016518  line:1:19 invalid ImagesToCustomStream 'int (const int *, int *, int *)'   |-ParmVarDecl 0x12d0162f0 <col:40, col:57> col:57 referenced invalid image_info 'const int *'   |-ParmVarDecl 0x12d0163a8 <line:2:3, col:10> col:10 referenced invalid images 'int *'   |-ParmVarDecl 0x12d016428 <col:17, col:32> col:32 invalid exception 'int *'   `-CompoundStmt 0x12d9206a0 <line:3:1, line:117:1>     |-DeclStmt 0x12d016658 <line:4:3, line:5:17>     | `-VarDecl 0x12d0165f0 <line:4:3, line:5:6> col:6 referenced invalid magick_info 'const int *'     |-BinaryOperator 0x12d016730 <line:7:3, line:8:6> '<dependent type>' contains-errors '*'     | |-RecoveryExpr 0x12d016690 <line:7:3> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12d016670 <col:3> 'const int *' lvalue ParmVar 0x12d0162f0 'image_info' 'const int *'     | `-RecoveryExpr 0x12d016710 <line:8:6> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12d02d820 <line:15:3, col:54> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d0168f0 <col:3> 'int ()' Function 0x12d0167f8 'assert' 'int ()'     | `-BinaryOperator 0x12d02d800 <col:10, col:35> 'int' contains-errors '=='     |   |-CXXDependentScopeMemberExpr 0x12d016930 <col:10, col:22> '<dependent type>' contains-errors lvalue ->signature     |   | `-RecoveryExpr 0x12d016910 <col:10> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x12d0169d8 <col:35> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12d02de68 <line:20:3, col:50> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d02dd40 <col:3> 'int ()' Function 0x12d0167f8 'assert' 'int ()'     | `-BinaryOperator 0x12d02de48 <col:10, col:31> 'int' contains-errors '=='     |   |-CXXDependentScopeMemberExpr 0x12d02dd80 <col:10, col:18> '<dependent type>' contains-errors lvalue ->signature     |   | `-RecoveryExpr 0x12d02dd60 <col:10> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x12d02de28 <col:31> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12d91e390 <line:31:3, col:53> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12d02e790 <col:3> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12d02e770 <col:3> 'const int *' lvalue Var 0x12d0165f0 'magick_info' 'const int *'     | `-CallExpr 0x12d91e360 <col:15, col:53> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12d91e2b8 <col:15> 'int ()' Function 0x12d91e200 'GetMagickInfo' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x12d91e2f8 <col:29, col:37> '<dependent type>' contains-errors lvalue ->magick     |   | `-RecoveryExpr 0x12d91e2d8 <col:29> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x12d91e340 <col:44> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12d91e718 <line:32:3, line:39:5>     | |-RecoveryExpr 0x12d91e3d0 <line:32:7, col:43> '_Bool' contains-errors     | `-CompoundStmt 0x12d91e700 <line:33:5, line:39:5>     |   `-ReturnStmt 0x12d91e6f0 <line:38:7>     |-IfStmt 0x12d91eaa0 <line:42:3, line:48:5>     | |-RecoveryExpr 0x12d91ea50 <line:42:7, line:43:66> '_Bool' contains-errors     | `-CompoundStmt 0x12d91ea90 <line:44:5, line:48:5>     `-IfStmt 0x12d920650 <line:49:3, line:115:5> has_else       |-RecoveryExpr 0x12d91eac0 <line:49:7, col:23> '_Bool' contains-errors       |-CompoundStmt 0x12d91ef78 <line:50:5, line:56:5>       | |-CStyleCastExpr 0x12d91ec38 <line:52:7, col:30> 'void' contains-errors <ToVoid>       | | `-CallExpr 0x12d91ec00 <col:14, col:30> '<dependent type>' contains-errors       | |   |-DeclRefExpr 0x12d91ebc0 <col:14> 'int ()' Function 0x12d91eb08 'CloseBlob' 'int ()'       | |   `-RecoveryExpr 0x12d91ebe0 <col:24> '<dependent type>' contains-errors lvalue       | |-BinaryOperator 0x12d91ed10 <line:53:7, col:25> '<dependent type>' contains-errors '='       | | |-UnaryOperator 0x12d91ece0 <col:7, col:16> '<dependent type>' contains-errors prefix '*' cannot overflow       | | | `-ImplicitCastExpr 0x12d91ecc8 <col:8, col:16> '<dependent type>' contains-errors <LValueToRValue>       | | |   `-CXXDependentScopeMemberExpr 0x12d91ec80 <col:8, col:16> '<dependent type>' contains-errors lvalue ->filename       | | |     `-RecoveryExpr 0x12d91ec60 <col:8> '<dependent type>' contains-errors lvalue       | | `-CharacterLiteral 0x12d91ecf8 <col:25> 'int' 0       | `-CStyleCastExpr 0x12d91ef50 <line:55:7, col:30> 'void' contains-errors <ToVoid>       |   `-CallExpr 0x12d91ef18 <col:14, col:30> '<dependent type>' contains-errors       |     |-DeclRefExpr 0x12d91eed8 <col:14> 'int ()' Function 0x12d91eb08 'CloseBlob' 'int ()'       |     `-RecoveryExpr 0x12d91eef8 <col:24> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x12d920608 <line:58:5, line:115:5>         |-DeclStmt 0x12d91f018 <line:59:7, line:61:33>         | `-VarDecl 0x12d91efb0 <line:59:7, line:60:9> col:9 invalid filename 'char'         |-DeclStmt 0x12d91f0b0 <line:63:7, line:64:13>         | `-VarDecl 0x12d91f048 <line:63:7, line:64:9> col:9 used file 'int'         |-DeclStmt 0x12d91f180 <line:66:7, line:67:14>         | `-VarDecl 0x12d91f118 <line:66:7, line:67:10> col:10 used blob 'unsigned char *'         |-IfStmt 0x12d91f598 <line:73:7, line:79:9>         | |-RecoveryExpr 0x12d91f388 <line:73:11, col:37> '_Bool' contains-errors         | `-CompoundStmt 0x12d91f580 <line:74:9, line:79:9>         |   `-ReturnStmt 0x12d91f570 <line:78:11>         |-IfStmt 0x12d91fa78 <line:81:7, line:88:9>         | |-BinaryOperator 0x12d91f748 <line:81:11, col:20> 'int' '=='         | | |-ImplicitCastExpr 0x12d91f730 <col:11> 'int' <LValueToRValue>         | | | `-DeclRefExpr 0x12d91f6d8 <col:11> 'int' lvalue Var 0x12d91f048 'file' 'int'         | | `-UnaryOperator 0x12d91f718 <col:19, col:20> 'int' prefix '-'         | |   `-IntegerLiteral 0x12d91f6f8 <col:20> 'int' 1         | `-CompoundStmt 0x12d91fa58 <line:82:9, line:88:9>         |   |-BinaryOperator 0x12d91fa08 <line:85:11, col:61> 'unsigned char *' '='         |   | |-DeclRefExpr 0x12d91f830 <col:11> 'unsigned char *' lvalue Var 0x12d91f118 'blob' 'unsigned char *'         |   | `-CStyleCastExpr 0x12d91f9e0 <col:16, col:61> 'unsigned char *' <IntegralToPointer>         |   |   `-CallExpr 0x12d91f988 <col:34, col:61> 'int'         |   |     |-ImplicitCastExpr 0x12d91f970 <col:34> 'int (*)()' <FunctionToPointerDecay>         |   |     | `-DeclRefExpr 0x12d91f930 <col:34> 'int ()' Function 0x12d91f878 'RelinquishMagickMemory' 'int ()'         |   |     `-ImplicitCastExpr 0x12d91f9b0 <col:57> 'unsigned char *' <LValueToRValue>         |   |       `-DeclRefExpr 0x12d91f950 <col:57> 'unsigned char *' lvalue Var 0x12d91f118 'blob' 'unsigned char *'         |   `-ReturnStmt 0x12d91fa48 <line:87:11>         |-IfStmt 0x12d9203d0 <line:90:7, line:112:9>         | |-RecoveryExpr 0x12d91fc50 <line:90:11, col:40> '_Bool' contains-errors         | `-CompoundStmt 0x12d9203b0 <line:91:9, line:112:9>         |   |-CStyleCastExpr 0x12d91ff10 <line:98:11, col:34> 'void' contains-errors <ToVoid>         |   | `-CallExpr 0x12d91fed8 <col:18, col:34> '<dependent type>' contains-errors         |   |   |-DeclRefExpr 0x12d91fe98 <col:18> 'int ()' Function 0x12d91eb08 'CloseBlob' 'int ()'         |   |   `-RecoveryExpr 0x12d91feb8 <col:28> '<dependent type>' contains-errors lvalue         |   `-IfStmt 0x12d920290 <line:99:11, line:110:13>         |     |-RecoveryExpr 0x12d91ff38 <line:99:15, col:25> '_Bool' contains-errors         |     `-CompoundStmt 0x12d920278 <line:100:13, line:110:13>         |       `-WhileStmt 0x12d920258 <line:103:15, line:109:15>         |         |-RecoveryExpr 0x12d920078 <line:103:22, col:41> '_Bool' contains-errors         |         `-CompoundStmt 0x12d920248 <line:104:15, line:109:15>         `-BinaryOperator 0x12d9204e8 <line:113:7, col:57> 'unsigned char *' '='           |-DeclRefExpr 0x12d9203f0 <col:7> 'unsigned char *' lvalue Var 0x12d91f118 'blob' 'unsigned char *'           `-CStyleCastExpr 0x12d9204c0 <col:12, col:57> 'unsigned char *' <IntegralToPointer>             `-CallExpr 0x12d920468 <col:30, col:57> 'int'               |-ImplicitCastExpr 0x12d920450 <col:30> 'int (*)()' <FunctionToPointerDecay>               | `-DeclRefExpr 0x12d920410 <col:30> 'int ()' Function 0x12d91f878 'RelinquishMagickMemory' 'int ()'               `-ImplicitCastExpr 0x12d920490 <col:53> 'unsigned char *' <LValueToRValue>                 `-DeclRefExpr 0x12d920430 <col:53> 'unsigned char *' lvalue Var 0x12d91f118 'blob' 'unsigned char *' ","21229":"`-FunctionDecl 0x13b81dfc0  line:1:8 invalid combine_list 'void (int)'   |-ParmVarDecl 0x13b81def0 <col:21, <invalid sloc>> col:28 invalid 'int'   `-CompoundStmt 0x13b81e570 <line:2:3, line:16:3>     |-DeclStmt 0x13b81e128 <line:5:5, col:23>     | `-VarDecl 0x13b81e088 <col:5, col:22> col:18 used s 'const char *' cinit     |   `-ImplicitCastExpr 0x13b81e110 <col:22> 'const char *' <NullToPointer>     |     `-IntegerLiteral 0x13b81e0f0 <col:22> 'int' 0     `-WhileStmt 0x13b81e3f0 <line:6:5, line:14:5>       |-RecoveryExpr 0x13b81e198 <line:6:13, col:33> '_Bool' contains-errors       `-CompoundStmt 0x13b81e3d8 <line:7:5, line:14:5>         `-ForStmt 0x13b81e388 <line:8:7, line:12:7>           |-<<<NULL>>>           |-<<<NULL>>>           |-ImplicitCastExpr 0x13b81e208 <line:8:14, col:15> 'char' <LValueToRValue>           | `-UnaryOperator 0x13b81e1f0 <col:14, col:15> 'const char' lvalue prefix '*' cannot overflow           |   `-ImplicitCastExpr 0x13b81e1d8 <col:15> 'const char *' <LValueToRValue>           |     `-DeclRefExpr 0x13b81e1b8 <col:15> 'const char *' lvalue Var 0x13b81e088 's' 'const char *'           |-UnaryOperator 0x13b81e240 <col:18, col:20> 'const char *' prefix '++'           | `-DeclRefExpr 0x13b81e220 <col:20> 'const char *' lvalue Var 0x13b81e088 's' 'const char *'           `-CompoundStmt 0x13b81e378 <col:23, line:12:7> ","20344":"`-FunctionDecl 0x1471418d0  line:1:13 invalid tg3_write_mem 'void (struct tg3 *, int, int)' static   |-ParmVarDecl 0x147128648 <col:27, col:39> col:39 used tp 'struct tg3 *'   |-ParmVarDecl 0x1471286e0 <col:43, col:47> col:47 invalid off 'int'   |-ParmVarDecl 0x147128760 <col:52, col:56> col:56 invalid val 'int'   `-CompoundStmt 0x147143130 <line:2:1, line:24:1>     |-DeclStmt 0x147141a10 <line:3:2, col:21>     | `-VarDecl 0x1471419a8 <col:2, col:16> col:16 used flags 'unsigned long'     |-IfStmt 0x147141db8 <line:5:2, line:7:3>     | |-RecoveryExpr 0x147141d88 <line:5:6, line:6:67> '_Bool' contains-errors     | `-ReturnStmt 0x147141da8 <line:7:3>     |-CallExpr 0x147141f70 <line:9:2, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x147141eb8 <col:2> 'int ()' Function 0x147141e00 'spin_lock_irqsave' 'int ()'     | |-UnaryOperator 0x147141f38 <col:20, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x147141f10 <col:21, col:25> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x147141ed8 <col:21> 'struct tg3 *' lvalue ParmVar 0x147128648 'tp' 'struct tg3 *'     | `-DeclRefExpr 0x147141f50 <col:40> 'unsigned long' lvalue Var 0x1471419a8 'flags' 'unsigned long'     |-IfStmt 0x147142f38 <line:10:2, line:22:2> has_else     | |-CallExpr 0x147142128 <line:10:6, col:34> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x147142080 <col:6> 'int ()' Function 0x147141fc8 'tg3_flag' 'int ()'     | | |-DeclRefExpr 0x1471420a0 <col:15> 'struct tg3 *' lvalue ParmVar 0x147128648 'tp' 'struct tg3 *'     | | `-RecoveryExpr 0x147142108 <col:19> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x147142610 <col:37, line:16:2>     | | |-CallExpr 0x147142348 <line:11:3, col:65> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x147142238 <col:3> 'int ()' Function 0x147142180 'pci_write_config_dword' 'int ()'     | | | |-RecoveryExpr 0x147142290 <col:26, col:30> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x147142258 <col:26> 'struct tg3 *' lvalue ParmVar 0x147128648 'tp' 'struct tg3 *'     | | | |-RecoveryExpr 0x147142328 <col:36> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x1471422d0 <col:62> '<dependent type>' contains-errors lvalue     | | |-CallExpr 0x147142490 <line:12:3, col:60> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x147142380 <col:3> 'int ()' Function 0x147142180 'pci_write_config_dword' 'int ()'     | | | |-RecoveryExpr 0x1471423d8 <col:26, col:30> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x1471423a0 <col:26> 'struct tg3 *' lvalue ParmVar 0x147128648 'tp' 'struct tg3 *'     | | | |-RecoveryExpr 0x147142470 <col:36> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x147142418 <col:57> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x1471425d8 <line:15:3, col:63> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x1471424c8 <col:3> 'int ()' Function 0x147142180 'pci_write_config_dword' 'int ()'     | |   |-RecoveryExpr 0x147142520 <col:26, col:30> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x1471424e8 <col:26> 'struct tg3 *' lvalue ParmVar 0x147128648 'tp' 'struct tg3 *'     | |   |-RecoveryExpr 0x1471425b8 <col:36> '<dependent type>' contains-errors lvalue     | |   `-IntegerLiteral 0x147142560 <col:62> 'int' 0     | `-CompoundStmt 0x147142f18 <line:16:9, line:22:2>     |   |-CallExpr 0x1471427c0 <line:17:3, col:39> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x147142718 <col:3> 'int ()' Function 0x147142660 'tw32_f' 'int ()'     |   | |-RecoveryExpr 0x1471427a0 <col:10> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x147142750 <col:36> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x147142ea8 <line:18:3, col:34> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x147142e00 <col:3> 'int ()' Function 0x147142660 'tw32_f' 'int ()'     |     |-RecoveryExpr 0x147142e88 <col:10> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x147142e38 <col:31> '<dependent type>' contains-errors lvalue     `-CallExpr 0x147143100 <line:23:2, col:50> '<dependent type>' contains-errors       |-DeclRefExpr 0x147143048 <col:2> 'int ()' Function 0x147142f90 'spin_unlock_irqrestore' 'int ()'       |-UnaryOperator 0x1471430c8 <col:25, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow       | `-RecoveryExpr 0x1471430a0 <col:26, col:30> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x147143068 <col:26> 'struct tg3 *' lvalue ParmVar 0x147128648 'tp' 'struct tg3 *'       `-DeclRefExpr 0x1471430e0 <col:45> 'unsigned long' lvalue Var 0x1471419a8 'flags' 'unsigned long' ","20263":"`-FunctionDecl 0x150027670  col:30 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x150027770 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x150027718 <<invalid sloc>> Implicit 902 ","20857":"`-FunctionDecl 0x14180ddf8  line:1:6 invalid multi_delete_set_locks_and_link_aux_tables 'int (int *)'   |-ParmVarDecl 0x14180dd28 <col:49, col:54> col:54 referenced invalid lex 'int *'   `-CompoundStmt 0x141827cd8 <line:2:1, line:30:1>     |-CallExpr 0x14180e1f8 <line:5:3, col:19> 'int'     | |-ImplicitCastExpr 0x14180e1e0 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14180e130 <col:3> 'int ()' Function 0x14180e078 'DBUG_ENTER' 'int ()'     | `-ImplicitCastExpr 0x14180e220 <col:14> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x14180e190 <col:14> 'char[4]' lvalue \"STR\"     |-BinaryOperator 0x14180e2e8 <line:7:3, col:21> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14180e280 <col:3, col:8> '<dependent type>' contains-errors lvalue ->table_count     | | `-RecoveryExpr 0x14180e258 <col:3> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14180e238 <col:3> 'int *' lvalue ParmVar 0x14180dd28 'lex' 'int *'     | `-IntegerLiteral 0x14180e2c8 <col:21> 'int' 0     `-ForStmt 0x141827c80 <line:9:3, line:28:3>       |-<<<NULL>>>       |-<<<NULL>>>       |-RecoveryExpr 0x141827418 <line:10:8> '<dependent type>' contains-errors lvalue       |-BinaryOperator 0x141827558 <col:20, col:44> '<dependent type>' contains-errors '='       | |-RecoveryExpr 0x1418274d0 <col:20> '<dependent type>' contains-errors lvalue       | `-CXXDependentScopeMemberExpr 0x141827510 <col:32, col:44> '<dependent type>' contains-errors lvalue ->next_local       |   `-RecoveryExpr 0x1418274f0 <col:32> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x141827c58 <line:11:3, line:28:3>         |-UnaryOperator 0x141827608 <line:12:5, col:21> '<dependent type>' contains-errors postfix '++' cannot overflow         | `-CXXDependentScopeMemberExpr 0x1418275c0 <col:5, col:10> '<dependent type>' contains-errors lvalue ->table_count         |   `-RecoveryExpr 0x141827598 <col:5> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x141827578 <col:5> 'int *' lvalue ParmVar 0x14180dd28 'lex' 'int *'         |-IfStmt 0x1418279e0 <line:15:5, line:16:23>         | |-UnaryOperator 0x141827840 <line:15:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow         | | `-ImplicitCastExpr 0x141827828 <col:10> '<dependent type>' contains-errors <LValueToRValue>         | |   `-RecoveryExpr 0x141827808 <col:10> '<dependent type>' contains-errors lvalue         | `-CallExpr 0x1418279b8 <line:16:7, col:23> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x141827938 <col:7> 'int ()' Function 0x141827880 'DBUG_RETURN' 'int ()'         |   `-RecoveryExpr 0x141827998 <col:19> '<dependent type>' contains-errors lvalue         `-IfStmt 0x141827b38 <line:17:5, line:21:5>           |-UnaryOperator 0x141827b10 <line:17:9, col:16> '<dependent type>' contains-errors prefix '!' cannot overflow           | `-ImplicitCastExpr 0x141827af8 <col:10, col:16> '<dependent type>' contains-errors <LValueToRValue>           |   `-CXXDependentScopeMemberExpr 0x141827ab0 <col:10, col:16> '<dependent type>' contains-errors lvalue ->derived           |     `-RecoveryExpr 0x141827a90 <col:10> '<dependent type>' contains-errors lvalue           `-CompoundStmt 0x141827b28 <line:18:5, line:21:5> ","20993":"`-FunctionDecl 0x13c832a88  line:1:12 sctp_getsockopt_default_send_param 'int (struct sock *, int, char)' static   |-ParmVarDecl 0x13c813c48 <col:47, col:60> col:60 used sk 'struct sock *'   |-ParmVarDecl 0x13c813cc8 <line:2:6, col:10> col:10 used len 'int'   |-ParmVarDecl 0x13c813d40 <col:15, col:20> col:20 __user 'char'   `-CompoundStmt 0x13c837070 <line:4:1, line:36:1>     |-DeclStmt 0x13c832d08 <line:5:2, col:29>     | |-RecordDecl 0x13c832b90 <col:2, col:9> col:9 struct sctp_sndrcvinfo     | `-VarDecl 0x13c832c88 <col:2, col:25> col:25 referenced invalid info 'struct sctp_sndrcvinfo'     |-DeclStmt 0x13c832f08 <line:6:2, col:31>     | |-RecordDecl 0x13c832d20 <col:2, col:9> col:9 struct sctp_association     | `-VarDecl 0x13c832e88 <col:2, col:27> col:27 used asoc 'struct sctp_association *'     |-DeclStmt 0x13c833318 <line:7:2, col:36>     | |-RecordDecl 0x13c832f20 <col:2, col:9> col:9 struct sctp_sock     | `-VarDecl 0x13c833088 <col:2, col:35> col:20 used sp 'struct sctp_sock *' cinit     |   `-ImplicitCastExpr 0x13c8332e8 <col:25, col:35> 'struct sctp_sock *' <IntegralToPointer>     |     `-CallExpr 0x13c8332a8 <col:25, col:35> 'int'     |       |-ImplicitCastExpr 0x13c833290 <col:25> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x13c833220 <col:25> 'int ()' Function 0x13c833168 'sctp_sk' 'int ()'     |       `-ImplicitCastExpr 0x13c8332d0 <col:33> 'struct sock *' <LValueToRValue>     |         `-DeclRefExpr 0x13c833240 <col:33> 'struct sock *' lvalue ParmVar 0x13c813c48 'sk' 'struct sock *'     |-IfStmt 0x13c833468 <line:9:2, line:10:11>     | |-RecoveryExpr 0x13c8333a0 <line:9:6, col:42> '_Bool' contains-errors     | `-ReturnStmt 0x13c833458 <line:10:3, col:11>     |   `-UnaryOperator 0x13c833440 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x13c833428 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13c833408 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13c8336c0 <line:11:2, line:12:11>     | |-RecoveryExpr 0x13c8335f8 <line:11:6, col:66> '_Bool' contains-errors     | `-ReturnStmt 0x13c8336b0 <line:12:3, col:11>     |   `-UnaryOperator 0x13c833698 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x13c833680 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13c833660 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13c8338b8 <line:14:2, col:46> 'struct sctp_association *' contains-errors '='     | |-DeclRefExpr 0x13c8336e0 <col:2> 'struct sctp_association *' lvalue Var 0x13c832e88 'asoc' 'struct sctp_association *'     | `-CallExpr 0x13c833888 <col:9, col:46> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13c8337e0 <col:9> 'int ()' Function 0x13c833728 'sctp_id2assoc' 'int ()'     |   |-DeclRefExpr 0x13c833800 <col:23> 'struct sock *' lvalue ParmVar 0x13c813c48 'sk' 'struct sock *'     |   `-CXXDependentScopeMemberExpr 0x13c833840 <col:27, col:32> '<dependent type>' contains-errors lvalue .sinfo_assoc_id     |     `-RecoveryExpr 0x13c833820 <col:27> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13c836318 <line:15:2, line:16:11>     | |-BinaryOperator 0x13c836250 <line:15:6, col:56> 'int' contains-errors '&&'     | | |-BinaryOperator 0x13c8361e0 <col:6, col:20> 'int' contains-errors '&&'     | | | |-UnaryOperator 0x13c8361c8 <col:6, col:7> 'int' prefix '!' cannot overflow     | | | | `-ImplicitCastExpr 0x13c8361b0 <col:7> 'struct sctp_association *' <LValueToRValue>     | | | |   `-DeclRefExpr 0x13c8338d8 <col:7> 'struct sctp_association *' lvalue Var 0x13c832e88 'asoc' 'struct sctp_association *'     | | | `-CXXDependentScopeMemberExpr 0x13c833948 <col:15, col:20> '<dependent type>' contains-errors lvalue .sinfo_assoc_id     | | |   `-RecoveryExpr 0x13c833928 <col:15> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x13c836220 <col:38, col:56> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x13c8360b8 <col:38> 'int ()' Function 0x13c836000 'sctp_style' 'int ()'     | |   |-DeclRefExpr 0x13c8360d8 <col:49> 'struct sock *' lvalue ParmVar 0x13c813c48 'sk' 'struct sock *'     | |   `-RecoveryExpr 0x13c836200 <col:53> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13c836308 <line:16:3, col:11>     |   `-UnaryOperator 0x13c8362f0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x13c8362d8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13c8362b8 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13c836e80 <line:18:2, line:30:2> has_else     | |-ImplicitCastExpr 0x13c836358 <line:18:6> 'struct sctp_association *' <LValueToRValue>     | | `-DeclRefExpr 0x13c836338 <col:6> 'struct sctp_association *' lvalue Var 0x13c832e88 'asoc' 'struct sctp_association *'     | |-CompoundStmt 0x13c8368c0 <col:12, line:24:2>     | | |-BinaryOperator 0x13c836460 <line:19:3, col:29> '<dependent type>' contains-errors '='     | | | |-CXXDependentScopeMemberExpr 0x13c8363b8 <col:3, col:8> '<dependent type>' contains-errors lvalue .sinfo_stream     | | | | `-RecoveryExpr 0x13c836390 <col:3> '<dependent type>' contains-errors lvalue     | | | |   `-DeclRefExpr 0x13c836370 <col:3> 'struct sctp_sndrcvinfo' lvalue Var 0x13c832c88 'info' 'struct sctp_sndrcvinfo'     | | | `-RecoveryExpr 0x13c836438 <col:23, col:29> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x13c836400 <col:23> 'struct sctp_association *' lvalue Var 0x13c832e88 'asoc' 'struct sctp_association *'     | | |-BinaryOperator 0x13c836570 <line:20:3, col:28> '<dependent type>' contains-errors '='     | | | |-CXXDependentScopeMemberExpr 0x13c8364c8 <col:3, col:8> '<dependent type>' contains-errors lvalue .sinfo_flags     | | | | `-RecoveryExpr 0x13c8364a0 <col:3> '<dependent type>' contains-errors lvalue     | | | |   `-DeclRefExpr 0x13c836480 <col:3> 'struct sctp_sndrcvinfo' lvalue Var 0x13c832c88 'info' 'struct sctp_sndrcvinfo'     | | | `-RecoveryExpr 0x13c836548 <col:22, col:28> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x13c836510 <col:22> 'struct sctp_association *' lvalue Var 0x13c832e88 'asoc' 'struct sctp_association *'     | | |-BinaryOperator 0x13c836680 <line:21:3, col:27> '<dependent type>' contains-errors '='     | | | |-CXXDependentScopeMemberExpr 0x13c8365d8 <col:3, col:8> '<dependent type>' contains-errors lvalue .sinfo_ppid     | | | | `-RecoveryExpr 0x13c8365b0 <col:3> '<dependent type>' contains-errors lvalue     | | | |   `-DeclRefExpr 0x13c836590 <col:3> 'struct sctp_sndrcvinfo' lvalue Var 0x13c832c88 'info' 'struct sctp_sndrcvinfo'     | | | `-RecoveryExpr 0x13c836658 <col:21, col:27> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x13c836620 <col:21> 'struct sctp_association *' lvalue Var 0x13c832e88 'asoc' 'struct sctp_association *'     | | |-BinaryOperator 0x13c836790 <line:22:3, col:30> '<dependent type>' contains-errors '='     | | | |-CXXDependentScopeMemberExpr 0x13c8366e8 <col:3, col:8> '<dependent type>' contains-errors lvalue .sinfo_context     | | | | `-RecoveryExpr 0x13c8366c0 <col:3> '<dependent type>' contains-errors lvalue     | | | |   `-DeclRefExpr 0x13c8366a0 <col:3> 'struct sctp_sndrcvinfo' lvalue Var 0x13c832c88 'info' 'struct sctp_sndrcvinfo'     | | | `-RecoveryExpr 0x13c836768 <col:24, col:30> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x13c836730 <col:24> 'struct sctp_association *' lvalue Var 0x13c832e88 'asoc' 'struct sctp_association *'     | | `-BinaryOperator 0x13c8368a0 <line:23:3, col:33> '<dependent type>' contains-errors '='     | |   |-CXXDependentScopeMemberExpr 0x13c8367f8 <col:3, col:8> '<dependent type>' contains-errors lvalue .sinfo_timetolive     | |   | `-RecoveryExpr 0x13c8367d0 <col:3> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x13c8367b0 <col:3> 'struct sctp_sndrcvinfo' lvalue Var 0x13c832c88 'info' 'struct sctp_sndrcvinfo'     | |   `-RecoveryExpr 0x13c836878 <col:27, col:33> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x13c836840 <col:27> 'struct sctp_association *' lvalue Var 0x13c832e88 'asoc' 'struct sctp_association *'     | `-CompoundStmt 0x13c836e48 <line:24:9, line:30:2>     |   |-BinaryOperator 0x13c8369e8 <line:25:3, col:27> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x13c836940 <col:3, col:8> '<dependent type>' contains-errors lvalue .sinfo_stream     |   | | `-RecoveryExpr 0x13c836918 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x13c8368f8 <col:3> 'struct sctp_sndrcvinfo' lvalue Var 0x13c832c88 'info' 'struct sctp_sndrcvinfo'     |   | `-RecoveryExpr 0x13c8369c0 <col:23, col:27> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x13c836988 <col:23> 'struct sctp_sock *' lvalue Var 0x13c833088 'sp' 'struct sctp_sock *'     |   |-BinaryOperator 0x13c836af8 <line:26:3, col:26> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x13c836a50 <col:3, col:8> '<dependent type>' contains-errors lvalue .sinfo_flags     |   | | `-RecoveryExpr 0x13c836a28 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x13c836a08 <col:3> 'struct sctp_sndrcvinfo' lvalue Var 0x13c832c88 'info' 'struct sctp_sndrcvinfo'     |   | `-RecoveryExpr 0x13c836ad0 <col:22, col:26> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x13c836a98 <col:22> 'struct sctp_sock *' lvalue Var 0x13c833088 'sp' 'struct sctp_sock *'     |   |-BinaryOperator 0x13c836c08 <line:27:3, col:25> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x13c836b60 <col:3, col:8> '<dependent type>' contains-errors lvalue .sinfo_ppid     |   | | `-RecoveryExpr 0x13c836b38 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x13c836b18 <col:3> 'struct sctp_sndrcvinfo' lvalue Var 0x13c832c88 'info' 'struct sctp_sndrcvinfo'     |   | `-RecoveryExpr 0x13c836be0 <col:21, col:25> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x13c836ba8 <col:21> 'struct sctp_sock *' lvalue Var 0x13c833088 'sp' 'struct sctp_sock *'     |   |-BinaryOperator 0x13c836d18 <line:28:3, col:28> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x13c836c70 <col:3, col:8> '<dependent type>' contains-errors lvalue .sinfo_context     |   | | `-RecoveryExpr 0x13c836c48 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x13c836c28 <col:3> 'struct sctp_sndrcvinfo' lvalue Var 0x13c832c88 'info' 'struct sctp_sndrcvinfo'     |   | `-RecoveryExpr 0x13c836cf0 <col:24, col:28> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x13c836cb8 <col:24> 'struct sctp_sock *' lvalue Var 0x13c833088 'sp' 'struct sctp_sock *'     |   `-BinaryOperator 0x13c836e28 <line:29:3, col:31> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x13c836d80 <col:3, col:8> '<dependent type>' contains-errors lvalue .sinfo_timetolive     |     | `-RecoveryExpr 0x13c836d58 <col:3> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x13c836d38 <col:3> 'struct sctp_sndrcvinfo' lvalue Var 0x13c832c88 'info' 'struct sctp_sndrcvinfo'     |     `-RecoveryExpr 0x13c836e00 <col:27, col:31> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13c836dc8 <col:27> 'struct sctp_sock *' lvalue Var 0x13c833088 'sp' 'struct sctp_sock *'     `-ReturnStmt 0x13c837060 <line:35:2, col:9>       `-IntegerLiteral 0x13c837040 <col:9> 'int' 0 ","20787":"`-FunctionDecl 0x12d0269e8  line:1:12 rsvp_dump 'int (struct tcf_proto *, unsigned long, struct sk_buff *, struct tcmsg *)' static   |-ParmVarDecl 0x12d00e248 <col:22, col:40> col:40 tp 'struct tcf_proto *'   |-ParmVarDecl 0x12d00e2c8 <col:44, col:58> col:58 used fh 'unsigned long'   |-ParmVarDecl 0x12d0266c8 <line:2:8, col:24> col:24 used skb 'struct sk_buff *'   |-ParmVarDecl 0x12d026898 <col:29, col:43> col:43 used t 'struct tcmsg *'   `-CompoundStmt 0x12d02c8c0 <line:3:1, line:44:1>     |-DeclStmt 0x12d026dd0 <line:4:2, col:49>     | |-RecordDecl 0x12d026af8 <col:2, col:9> col:9 struct rsvp_filter     | `-VarDecl 0x12d026c68 <col:2, col:47> col:22 used f 'struct rsvp_filter *' cinit     |   `-CStyleCastExpr 0x12d026d90 <col:26, col:47> 'struct rsvp_filter *' <IntegralToPointer>     |     `-ImplicitCastExpr 0x12d026d78 <col:47> 'unsigned long' <LValueToRValue> part_of_explicit_cast     |       `-DeclRefExpr 0x12d026cd0 <col:47> 'unsigned long' lvalue ParmVar 0x12d00e2c8 'fh' 'unsigned long'     |-DeclStmt 0x12d026fd8 <line:5:2, col:24>     | |-RecordDecl 0x12d026de8 <col:2, col:9> col:9 struct rsvp_session     | `-VarDecl 0x12d026f58 <col:2, col:23> col:23 used s 'struct rsvp_session *'     |-DeclStmt 0x12d027100 <line:6:2, col:31>     | `-VarDecl 0x12d027038 <col:2, col:27> col:18 used b 'unsigned char *' cinit     |   `-RecoveryExpr 0x12d0270d8 <col:22, col:27> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12d0270a0 <col:22> 'struct sk_buff *' lvalue ParmVar 0x12d0266c8 'skb' 'struct sk_buff *'     |-DeclStmt 0x12d027308 <line:7:2, col:20>     | |-RecordDecl 0x12d027118 <col:2, col:9> col:9 struct rtattr     | `-VarDecl 0x12d027288 <col:2, col:17> col:17 used rta 'struct rtattr *'     |-DeclStmt 0x12d027498 <line:8:2, col:28>     | |-RecordDecl 0x12d027320 <col:2, col:9> col:9 struct tc_rsvp_pinfo     | `-VarDecl 0x12d027418 <col:2, col:23> col:23 referenced invalid pinfo 'struct tc_rsvp_pinfo'     |-IfStmt 0x12d0275d0 <line:10:2, line:11:15>     | |-BinaryOperator 0x12d027540 <line:10:6, col:11> 'int' contains-errors '=='     | | |-DeclRefExpr 0x12d0274b0 <col:6> 'struct rsvp_filter *' lvalue Var 0x12d026c68 'f' 'struct rsvp_filter *'     | | `-RecoveryExpr 0x12d027520 <col:11> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12d0275c0 <line:11:3, col:15>     |   `-RecoveryExpr 0x12d027598 <col:10, col:15> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12d027560 <col:10> 'struct sk_buff *' lvalue ParmVar 0x12d0266c8 'skb' 'struct sk_buff *'     |-BinaryOperator 0x12d029680 <line:12:2, col:9> 'struct rsvp_session *' contains-errors '='     | |-DeclRefExpr 0x12d029600 <col:2> 'struct rsvp_session *' lvalue Var 0x12d026f58 's' 'struct rsvp_session *'     | `-RecoveryExpr 0x12d029658 <col:6, col:9> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12d029620 <col:6> 'struct rsvp_filter *' lvalue Var 0x12d026c68 'f' 'struct rsvp_filter *'     |-BinaryOperator 0x12d029760 <line:14:2, col:21> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12d0296d8 <col:2, col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12d0296a0 <col:2> 'struct tcmsg *' lvalue ParmVar 0x12d026898 't' 'struct tcmsg *'     | `-RecoveryExpr 0x12d029738 <col:18, col:21> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12d029700 <col:18> 'struct rsvp_filter *' lvalue Var 0x12d026c68 'f' 'struct rsvp_filter *'     |-BinaryOperator 0x12d029888 <line:17:2, col:24> 'struct rtattr *' contains-errors '='     | |-DeclRefExpr 0x12d029780 <col:2> 'struct rtattr *' lvalue Var 0x12d027288 'rta' 'struct rtattr *'     | `-CStyleCastExpr 0x12d029860 <col:8, col:24> 'struct rtattr *' contains-errors <BitCast>     |   `-ImplicitCastExpr 0x12d029848 <col:24> 'unsigned char *' contains-errors <LValueToRValue> part_of_explicit_cast     |     `-DeclRefExpr 0x12d0297a0 <col:24> 'unsigned char *' contains-errors lvalue Var 0x12d027038 'b' 'unsigned char *'     |-CallExpr 0x12d029ad0 <line:18:2, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d0299c0 <col:2> 'int ()' Function 0x12d029908 'RTA_PUT' 'int ()'     | |-DeclRefExpr 0x12d0299e0 <col:10> 'struct sk_buff *' lvalue ParmVar 0x12d0266c8 'skb' 'struct sk_buff *'     | |-RecoveryExpr 0x12d029a90 <col:15> '<dependent type>' contains-errors lvalue     | |-IntegerLiteral 0x12d029a18 <col:28> 'int' 0     | `-RecoveryExpr 0x12d029ab0 <col:31> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12d029ce0 <line:20:2, col:52> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d029b10 <col:2> 'int ()' Function 0x12d029908 'RTA_PUT' 'int ()'     | |-DeclRefExpr 0x12d029b30 <col:10> 'struct sk_buff *' lvalue ParmVar 0x12d0266c8 'skb' 'struct sk_buff *'     | |-RecoveryExpr 0x12d029cc0 <col:15> '<dependent type>' contains-errors lvalue     | |-UnaryExprOrTypeTraitExpr 0x12d029be8 <col:29, col:42> 'unsigned long' contains-errors sizeof     | | `-ParenExpr 0x12d029bc8 <col:35, col:42> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x12d029ba0 <col:36, col:39> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x12d029b68 <col:36> 'struct rsvp_session *' lvalue Var 0x12d026f58 's' 'struct rsvp_session *' non_odr_use_unevaluated     | `-UnaryOperator 0x12d029c68 <col:45, col:49> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12d029c40 <col:46, col:49> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12d029c08 <col:46> 'struct rsvp_session *' lvalue Var 0x12d026f58 's' 'struct rsvp_session *'     |-BinaryOperator 0x12d029e10 <line:21:2, col:17> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12d029d68 <col:2, col:8> '<dependent type>' contains-errors lvalue .dpi     | | `-RecoveryExpr 0x12d029d40 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12d029d20 <col:2> 'struct tc_rsvp_pinfo' lvalue Var 0x12d027418 'pinfo' 'struct tc_rsvp_pinfo'     | `-RecoveryExpr 0x12d029de8 <col:14, col:17> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12d029db0 <col:14> 'struct rsvp_session *' lvalue Var 0x12d026f58 's' 'struct rsvp_session *'     |-BinaryOperator 0x12d029f20 <line:22:2, col:17> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12d029e78 <col:2, col:8> '<dependent type>' contains-errors lvalue .spi     | | `-RecoveryExpr 0x12d029e50 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12d029e30 <col:2> 'struct tc_rsvp_pinfo' lvalue Var 0x12d027418 'pinfo' 'struct tc_rsvp_pinfo'     | `-RecoveryExpr 0x12d029ef8 <col:14, col:17> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12d029ec0 <col:14> 'struct rsvp_filter *' lvalue Var 0x12d026c68 'f' 'struct rsvp_filter *'     |-BinaryOperator 0x12d02a030 <line:23:2, col:22> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12d029f88 <col:2, col:8> '<dependent type>' contains-errors lvalue .protocol     | | `-RecoveryExpr 0x12d029f60 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12d029f40 <col:2> 'struct tc_rsvp_pinfo' lvalue Var 0x12d027418 'pinfo' 'struct tc_rsvp_pinfo'     | `-RecoveryExpr 0x12d02a008 <col:19, col:22> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12d029fd0 <col:19> 'struct rsvp_session *' lvalue Var 0x12d026f58 's' 'struct rsvp_session *'     |-BinaryOperator 0x12d02a140 <line:24:2, col:22> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12d02a098 <col:2, col:8> '<dependent type>' contains-errors lvalue .tunnelid     | | `-RecoveryExpr 0x12d02a070 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12d02a050 <col:2> 'struct tc_rsvp_pinfo' lvalue Var 0x12d027418 'pinfo' 'struct tc_rsvp_pinfo'     | `-RecoveryExpr 0x12d02a118 <col:19, col:22> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12d02a0e0 <col:19> 'struct rsvp_session *' lvalue Var 0x12d026f58 's' 'struct rsvp_session *'     |-BinaryOperator 0x12d02a250 <line:25:2, col:23> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12d02a1a8 <col:2, col:8> '<dependent type>' contains-errors lvalue .tunnelhdr     | | `-RecoveryExpr 0x12d02a180 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12d02a160 <col:2> 'struct tc_rsvp_pinfo' lvalue Var 0x12d027418 'pinfo' 'struct tc_rsvp_pinfo'     | `-RecoveryExpr 0x12d02a228 <col:20, col:23> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12d02a1f0 <col:20> 'struct rsvp_filter *' lvalue Var 0x12d026c68 'f' 'struct rsvp_filter *'     |-CallExpr 0x12d02a3c0 <line:26:2, col:52> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d02a270 <col:2> 'int ()' Function 0x12d029908 'RTA_PUT' 'int ()'     | |-DeclRefExpr 0x12d02a290 <col:10> 'struct sk_buff *' lvalue ParmVar 0x12d0266c8 'skb' 'struct sk_buff *'     | |-RecoveryExpr 0x12d02a3a0 <col:15> '<dependent type>' contains-errors lvalue     | |-UnaryExprOrTypeTraitExpr 0x12d02a308 <col:31, col:43> 'unsigned long' contains-errors sizeof     | | `-ParenExpr 0x12d02a2e8 <col:37, col:43> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x12d02a2c8 <col:38> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x12d02a348 <col:46, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12d02a328 <col:47> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12d02c2a8 <line:32:2, line:33:8>     | |-RecoveryExpr 0x12d02c220 <line:32:6, col:52> '_Bool' contains-errors     | `-GotoStmt 0x12d02c290 <line:33:3, col:8> 'rtattr_failure' 0x12d02c240     |-BinaryOperator 0x12d02c3c8 <line:35:2, col:29> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12d02c300 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12d02c2c8 <col:2> 'struct rtattr *' lvalue Var 0x12d027288 'rta' 'struct rtattr *'     | `-BinaryOperator 0x12d02c3a8 <col:17, col:29> '<dependent type>' contains-errors '-'     |   |-RecoveryExpr 0x12d02c360 <col:17, col:22> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x12d02c328 <col:17> 'struct sk_buff *' lvalue ParmVar 0x12d0266c8 'skb' 'struct sk_buff *'     |   `-DeclRefExpr 0x12d02c388 <col:29> 'unsigned char *' contains-errors lvalue Var 0x12d027038 'b' 'unsigned char *'     |-IfStmt 0x12d02c5d8 <line:37:2, line:38:8>     | |-RecoveryExpr 0x12d02c5a0 <line:37:6, col:58> '_Bool' contains-errors     | `-GotoStmt 0x12d02c5c0 <line:38:3, col:8> 'rtattr_failure' 0x12d02c240     |-ReturnStmt 0x12d02c658 <line:39:2, col:14>     | `-RecoveryExpr 0x12d02c630 <col:9, col:14> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12d02c5f8 <col:9> 'struct sk_buff *' lvalue ParmVar 0x12d0266c8 'skb' 'struct sk_buff *'     |-LabelStmt 0x12d02c858 <line:41:1, line:42:29> 'rtattr_failure'     | `-CallExpr 0x12d02c828 <col:2, col:29> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12d02c748 <col:2> 'int ()' Function 0x12d02c690 'skb_trim' 'int ()'     |   |-DeclRefExpr 0x12d02c768 <col:11> 'struct sk_buff *' lvalue ParmVar 0x12d0266c8 'skb' 'struct sk_buff *'     |   `-BinaryOperator 0x12d02c808 <col:16, col:25> '<dependent type>' contains-errors '-'     |     |-DeclRefExpr 0x12d02c788 <col:16> 'unsigned char *' contains-errors lvalue Var 0x12d027038 'b' 'unsigned char *'     |     `-RecoveryExpr 0x12d02c7e0 <col:20, col:25> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x12d02c7a8 <col:20> 'struct sk_buff *' lvalue ParmVar 0x12d0266c8 'skb' 'struct sk_buff *'     `-ReturnStmt 0x12d02c8b0 <line:43:2, col:10>       `-UnaryOperator 0x12d02c898 <col:9, col:10> 'int' prefix '-'         `-IntegerLiteral 0x12d02c878 <col:10> 'int' 1 ","21089":"`-FunctionDecl 0x14180dda8  line:1:1 PHP_FUNCTION 'int (int)'   |-ParmVarDecl 0x14180dcd8 <col:14> col:14 xsl_xsltprocessor_transform_to_xml 'int'   `-CompoundStmt 0x141828d18 <line:2:1, line:34:1>     |-DeclStmt 0x14180dfe8 <line:6:2, col:9>     | `-VarDecl 0x14180df80 <col:2, col:6> col:6 used ret 'int'     |-DeclStmt 0x14180e098 <line:8:2, col:17>     | `-VarDecl 0x14180e030 <col:2, col:6> col:6 used doc_txt_len 'int'     |-IfStmt 0x141828540 <line:15:2, line:17:2>     | |-RecoveryExpr 0x141828510 <line:15:6, col:72> '_Bool' contains-errors     | `-CompoundStmt 0x141828530 <col:81, line:17:2>     |-BinaryOperator 0x1418286b8 <line:21:2, col:9> 'int' '='     | |-DeclRefExpr 0x141828660 <col:2> 'int' lvalue Var 0x14180df80 'ret' 'int'     | `-UnaryOperator 0x1418286a0 <col:8, col:9> 'int' prefix '-'     |   `-IntegerLiteral 0x141828680 <col:9> 'int' 1     |-IfStmt 0x141828c50 <line:22:2, line:29:2>     | |-RecoveryExpr 0x1418286d8 <line:22:6> '_Bool' contains-errors     | `-CompoundStmt 0x141828c38 <col:15, line:29:2>     |   `-IfStmt 0x141828b18 <line:24:3, line:27:3>     |     |-RecoveryExpr 0x1418288a8 <line:24:7, col:22> '_Bool' contains-errors     |     `-CompoundStmt 0x141828b08 <col:35, line:27:3>     `-IfStmt 0x141828cf8 <line:31:2, line:33:2>       |-BinaryOperator 0x141828cc8 <line:31:6, col:12> 'int' '<'       | |-ImplicitCastExpr 0x141828cb0 <col:6> 'int' <LValueToRValue>       | | `-DeclRefExpr 0x141828c70 <col:6> 'int' lvalue Var 0x14180df80 'ret' 'int'       | `-IntegerLiteral 0x141828c90 <col:12> 'int' 0       `-CompoundStmt 0x141828ce8 <col:15, line:33:2> ","20558":"`-FunctionDecl 0x12a84a538  line:1:12 br_multicast_add_group 'int (struct net_bridge *, struct net_bridge_port *, struct br_ip *)' static   |-ParmVarDecl 0x12a832648 <col:35, col:54> col:54 used br 'struct net_bridge *'   |-ParmVarDecl 0x12a84a228 <line:2:7, col:31> col:31 used port 'struct net_bridge_port *'   |-ParmVarDecl 0x12a84a3f8 <line:3:7, col:21> col:21 used group 'struct br_ip *'   `-CompoundStmt 0x12a84ccd8 <line:4:1, line:50:1>     |-DeclStmt 0x12a84a828 <line:5:2, col:33>     | |-RecordDecl 0x12a84a640 <col:2, col:9> col:9 struct net_bridge_mdb_entry     | `-VarDecl 0x12a84a7a8 <col:2, col:31> col:31 used mp 'struct net_bridge_mdb_entry *'     |-DeclStmt 0x12a84aa28 <line:6:2, col:33>     | |-RecordDecl 0x12a84a840 <col:2, col:9> col:9 struct net_bridge_port_group     | `-VarDecl 0x12a84a9a8 <col:2, col:32> col:32 used p 'struct net_bridge_port_group *'     |-DeclStmt 0x12a84aaf8 <line:7:2, col:37>     | `-VarDecl 0x12a84aa90 <col:2, col:31> col:31 invalid __rcu 'struct net_bridge_port_group'     |-DeclStmt 0x12a84abe0 <line:8:2, col:29>     | `-VarDecl 0x12a84ab28 <col:2, col:22> col:16 used now 'unsigned long' cinit     |   `-RecoveryExpr 0x12a84abc0 <col:22> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x12a84ac78 <line:9:2, col:9>     | `-VarDecl 0x12a84ac10 <col:2, col:6> col:6 used err 'int'     |-CallExpr 0x12a84ae38 <line:11:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12a84ada0 <col:2> 'int ()' Function 0x12a84ace8 'spin_lock' 'int ()'     | `-UnaryOperator 0x12a84ae20 <col:12, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12a84adf8 <col:13, col:17> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12a84adc0 <col:13> 'struct net_bridge *' lvalue ParmVar 0x12a832648 'br' 'struct net_bridge *'     |-IfStmt 0x12a84b160 <line:12:2, line:14:8>     | |-RecoveryExpr 0x12a84b0d8 <line:12:6, line:13:47> '_Bool' contains-errors     | `-GotoStmt 0x12a84b148 <line:14:3, col:8> 'out' 0x12a84b0f8     |-BinaryOperator 0x12b0ff620 <line:16:2, col:45> 'struct net_bridge_mdb_entry *' '='     | |-DeclRefExpr 0x12a84b180 <col:2> 'struct net_bridge_mdb_entry *' lvalue Var 0x12a84a7a8 'mp' 'struct net_bridge_mdb_entry *'     | `-ImplicitCastExpr 0x12b0ff608 <col:7, col:45> 'struct net_bridge_mdb_entry *' <IntegralToPointer>     |   `-CallExpr 0x12b0ff588 <col:7, col:45> 'int'     |     |-ImplicitCastExpr 0x12b0ff570 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x12b0ff4b8 <col:7> 'int ()' Function 0x12b0ff400 'br_multicast_new_group' 'int ()'     |     |-ImplicitCastExpr 0x12b0ff5c0 <col:30> 'struct net_bridge *' <LValueToRValue>     |     | `-DeclRefExpr 0x12b0ff4d8 <col:30> 'struct net_bridge *' lvalue ParmVar 0x12a832648 'br' 'struct net_bridge *'     |     |-ImplicitCastExpr 0x12b0ff5d8 <col:34> 'struct net_bridge_port *' <LValueToRValue>     |     | `-DeclRefExpr 0x12b0ff4f8 <col:34> 'struct net_bridge_port *' lvalue ParmVar 0x12a84a228 'port' 'struct net_bridge_port *'     |     `-ImplicitCastExpr 0x12b0ff5f0 <col:40> 'struct br_ip *' <LValueToRValue>     |       `-DeclRefExpr 0x12b0ff518 <col:40> 'struct br_ip *' lvalue ParmVar 0x12a84a3f8 'group' 'struct br_ip *'     |-BinaryOperator 0x12b0ff7d8 <line:17:2, col:18> 'int' '='     | |-DeclRefExpr 0x12b0ff640 <col:2> 'int' lvalue Var 0x12a84ac10 'err' 'int'     | `-CallExpr 0x12b0ff798 <col:8, col:18> 'int'     |   |-ImplicitCastExpr 0x12b0ff780 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12b0ff740 <col:8> 'int ()' Function 0x12b0ff688 'PTR_ERR' 'int ()'     |   `-ImplicitCastExpr 0x12b0ff7c0 <col:16> 'struct net_bridge_mdb_entry *' <LValueToRValue>     |     `-DeclRefExpr 0x12b0ff760 <col:16> 'struct net_bridge_mdb_entry *' lvalue Var 0x12a84a7a8 'mp' 'struct net_bridge_mdb_entry *'     |-IfStmt 0x12b0ff9d8 <line:18:2, line:19:8>     | |-CallExpr 0x12b0ff930 <line:18:6, col:15> 'int'     | | |-ImplicitCastExpr 0x12b0ff918 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x12b0ff8d8 <col:6> 'int ()' Function 0x12b0ff820 'IS_ERR' 'int ()'     | | `-ImplicitCastExpr 0x12b0ff958 <col:13> 'struct net_bridge_mdb_entry *' <LValueToRValue>     | |   `-DeclRefExpr 0x12b0ff8f8 <col:13> 'struct net_bridge_mdb_entry *' lvalue Var 0x12a84a7a8 'mp' 'struct net_bridge_mdb_entry *'     | `-GotoStmt 0x12b0ff9c0 <line:19:3, col:8> 'err' 0x12b0ff970     |-IfStmt 0x12b0ffda8 <line:21:2, line:25:2>     | |-UnaryOperator 0x12b0ffa30 <line:21:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12b0ffa18 <col:7> 'struct net_bridge_port *' <LValueToRValue>     | |   `-DeclRefExpr 0x12b0ff9f8 <col:7> 'struct net_bridge_port *' lvalue ParmVar 0x12a84a228 'port' 'struct net_bridge_port *'     | `-CompoundStmt 0x12b0ffd80 <col:13, line:25:2>     |   |-BinaryOperator 0x12b0ffb00 <line:22:3, col:16> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x12b0ffa80 <col:3, col:7> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x12b0ffa48 <col:3> 'struct net_bridge_mdb_entry *' lvalue Var 0x12a84a7a8 'mp' 'struct net_bridge_mdb_entry *'     |   | `-RecoveryExpr 0x12b0ffae0 <col:16> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x12b0ffd38 <line:23:3, col:64> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12b0ffc00 <col:3> 'int ()' Function 0x12b0ffb48 'mod_timer' 'int ()'     |   | |-UnaryOperator 0x12b0ffc80 <col:13, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-RecoveryExpr 0x12b0ffc58 <col:14, col:18> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x12b0ffc20 <col:14> 'struct net_bridge_mdb_entry *' lvalue Var 0x12a84a7a8 'mp' 'struct net_bridge_mdb_entry *'     |   | `-BinaryOperator 0x12b0ffd18 <col:25, col:35> '<dependent type>' contains-errors '+'     |   |   |-DeclRefExpr 0x12b0ffc98 <col:25> 'unsigned long' contains-errors lvalue Var 0x12a84ab28 'now' 'unsigned long'     |   |   `-RecoveryExpr 0x12b0ffcf0 <col:31, col:35> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x12b0ffcb8 <col:31> 'struct net_bridge *' lvalue ParmVar 0x12a832648 'br' 'struct net_bridge *'     |   `-GotoStmt 0x12b0ffd68 <line:24:3, col:8> 'out' 0x12a84b0f8     |-IfStmt 0x12a84c5e8 <line:37:2, line:38:8>     | |-CallExpr 0x12a84c5a8 <line:37:6, col:17> 'int'     | | |-ImplicitCastExpr 0x12a84c590 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x12a84c520 <col:6> 'int ()' Function 0x12a84c468 'unlikely' 'int ()'     | | `-UnaryOperator 0x12a84c578 <col:15, col:16> 'int' prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x12a84c560 <col:16> 'struct net_bridge_port_group *' <LValueToRValue>     | |     `-DeclRefExpr 0x12a84c540 <col:16> 'struct net_bridge_port_group *' lvalue Var 0x12a84a9a8 'p' 'struct net_bridge_port_group *'     | `-GotoStmt 0x12a84c5d0 <line:38:3, col:8> 'err' 0x12b0ff970     |-LabelStmt 0x12a84ca30 <line:42:1, line:43:62> 'found'     | `-CallExpr 0x12a84ca00 <col:2, col:62> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12a84c8c8 <col:2> 'int ()' Function 0x12b0ffb48 'mod_timer' 'int ()'     |   |-UnaryOperator 0x12a84c948 <col:12, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x12a84c920 <col:13, col:16> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x12a84c8e8 <col:13> 'struct net_bridge_port_group *' lvalue Var 0x12a84a9a8 'p' 'struct net_bridge_port_group *'     |   `-BinaryOperator 0x12a84c9e0 <col:23, col:33> '<dependent type>' contains-errors '+'     |     |-DeclRefExpr 0x12a84c960 <col:23> 'unsigned long' contains-errors lvalue Var 0x12a84ab28 'now' 'unsigned long'     |     `-RecoveryExpr 0x12a84c9b8 <col:29, col:33> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x12a84c980 <col:29> 'struct net_bridge *' lvalue ParmVar 0x12a832648 'br' 'struct net_bridge *'     |-LabelStmt 0x12a84cab0 <line:44:1, line:45:8> 'out'     | `-BinaryOperator 0x12a84ca90 <col:2, col:8> 'int' '='     |   |-DeclRefExpr 0x12a84ca50 <col:2> 'int' lvalue Var 0x12a84ac10 'err' 'int'     |   `-IntegerLiteral 0x12a84ca70 <col:8> 'int' 0     |-LabelStmt 0x12a84cc70 <line:47:1, line:48:33> 'err'     | `-CallExpr 0x12a84cc48 <col:2, col:33> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12a84cbb0 <col:2> 'int ()' Function 0x12a84caf8 'spin_unlock' 'int ()'     |   `-UnaryOperator 0x12a84cc30 <col:14, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x12a84cc08 <col:15, col:19> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x12a84cbd0 <col:15> 'struct net_bridge *' lvalue ParmVar 0x12a832648 'br' 'struct net_bridge *'     `-ReturnStmt 0x12a84ccc8 <line:49:2, col:9>       `-ImplicitCastExpr 0x12a84ccb0 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x12a84cc90 <col:9> 'int' lvalue Var 0x12a84ac10 'err' 'int' ","20769":"`-FunctionDecl 0x12480e358  line:1:1 lys_has_xpath 'int (const struct lys_node *)'   |-ParmVarDecl 0x12480e248 <col:15, col:38> col:38 used node 'const struct lys_node *'   `-CompoundStmt 0x12482ad00 <line:2:1, line:68:1>     |-CallExpr 0x124826808 <line:3:5, col:16> 'int'     | |-ImplicitCastExpr 0x1248267f0 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x124826780 <col:5> 'int ()' Function 0x1248266c8 'assert' 'int ()'     | `-ImplicitCastExpr 0x124826830 <col:12> 'const struct lys_node *' <LValueToRValue>     |   `-DeclRefExpr 0x1248267a0 <col:12> 'const struct lys_node *' lvalue ParmVar 0x12480e248 'node' 'const struct lys_node *'     |-SwitchStmt 0x1248268c0 <line:5:5, line:65:5>     | |-ImplicitCastExpr 0x1248268a8 <line:5:13, col:19> '<dependent type>' contains-errors <LValueToRValue>     | | `-RecoveryExpr 0x124826880 <col:13, col:19> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x124826848 <col:13> 'const struct lys_node *' lvalue ParmVar 0x12480e248 'node' 'const struct lys_node *'     | `-CompoundStmt 0x12482ac08 <col:29, line:65:5>     |   |-IfStmt 0x124826b58 <line:7:9, line:9:9>     |   | |-RecoveryExpr 0x124826ae8 <line:7:13, col:48> '<dependent type>' contains-errors lvalue     |   | | `-ParenExpr 0x124826ac8 <col:13, col:45> 'struct lys_node_augment *'     |   | |   `-CStyleCastExpr 0x124826aa0 <col:14, col:41> 'struct lys_node_augment *' <BitCast>     |   | |     `-ImplicitCastExpr 0x124826a88 <col:41> 'const struct lys_node *' <LValueToRValue> part_of_explicit_cast     |   | |       `-DeclRefExpr 0x1248269a0 <col:41> 'const struct lys_node *' lvalue ParmVar 0x12480e248 'node' 'const struct lys_node *'     |   | `-CompoundStmt 0x124826b40 <col:54, line:9:9>     |   |   `-ReturnStmt 0x124826b30 <line:8:13, col:20>     |   |     `-IntegerLiteral 0x124826b10 <col:20> 'int' 1     |   |-BreakStmt 0x124826b78 <line:10:9>     |   |-IfStmt 0x124826df8 <line:12:9, line:14:9>     |   | |-RecoveryExpr 0x124826d88 <line:12:13, col:45> '<dependent type>' contains-errors lvalue     |   | | `-ParenExpr 0x124826d68 <col:13, col:42> 'struct lys_node_case *'     |   | |   `-CStyleCastExpr 0x124826d40 <col:14, col:38> 'struct lys_node_case *' <BitCast>     |   | |     `-ImplicitCastExpr 0x124826d28 <col:38> 'const struct lys_node *' <LValueToRValue> part_of_explicit_cast     |   | |       `-DeclRefExpr 0x124826c40 <col:38> 'const struct lys_node *' lvalue ParmVar 0x12480e248 'node' 'const struct lys_node *'     |   | `-CompoundStmt 0x124826de0 <col:51, line:14:9>     |   |   `-ReturnStmt 0x124826dd0 <line:13:13, col:20>     |   |     `-IntegerLiteral 0x124826db0 <col:20> 'int' 1     |   |-BreakStmt 0x124826e18 <line:15:9>     |   |-IfStmt 0x124827098 <line:17:9, line:19:9>     |   | |-RecoveryExpr 0x124827028 <line:17:13, col:47> '<dependent type>' contains-errors lvalue     |   | | `-ParenExpr 0x124827008 <col:13, col:44> 'struct lys_node_choice *'     |   | |   `-CStyleCastExpr 0x124826fe0 <col:14, col:40> 'struct lys_node_choice *' <BitCast>     |   | |     `-ImplicitCastExpr 0x124826fc8 <col:40> 'const struct lys_node *' <LValueToRValue> part_of_explicit_cast     |   | |       `-DeclRefExpr 0x124826ee0 <col:40> 'const struct lys_node *' lvalue ParmVar 0x12480e248 'node' 'const struct lys_node *'     |   | `-CompoundStmt 0x124827080 <col:53, line:19:9>     |   |   `-ReturnStmt 0x124827070 <line:18:13, col:20>     |   |     `-IntegerLiteral 0x124827050 <col:20> 'int' 1     |   |-BreakStmt 0x1248270b8 <line:20:9>     |   |-IfStmt 0x124827488 <line:22:9, line:24:9>     |   | |-BinaryOperator 0x124827420 <line:22:13, col:91> 'int' contains-errors '||'     |   | | |-RecoveryExpr 0x1248272c8 <col:13, col:48> '<dependent type>' contains-errors lvalue     |   | | | `-ParenExpr 0x1248272a8 <col:13, col:45> 'struct lys_node_anydata *'     |   | | |   `-CStyleCastExpr 0x124827280 <col:14, col:41> 'struct lys_node_anydata *' <BitCast>     |   | | |     `-ImplicitCastExpr 0x124827268 <col:41> 'const struct lys_node *' <LValueToRValue> part_of_explicit_cast     |   | | |       `-DeclRefExpr 0x124827180 <col:41> 'const struct lys_node *' lvalue ParmVar 0x12480e248 'node' 'const struct lys_node *'     |   | | `-RecoveryExpr 0x1248273f8 <col:56, col:91> '<dependent type>' contains-errors lvalue     |   | |   `-ParenExpr 0x1248273d8 <col:56, col:88> 'struct lys_node_anydata *'     |   | |     `-CStyleCastExpr 0x1248273b0 <col:57, col:84> 'struct lys_node_anydata *' <BitCast>     |   | |       `-ImplicitCastExpr 0x124827398 <col:84> 'const struct lys_node *' <LValueToRValue> part_of_explicit_cast     |   | |         `-DeclRefExpr 0x1248272f0 <col:84> 'const struct lys_node *' lvalue ParmVar 0x12480e248 'node' 'const struct lys_node *'     |   | `-CompoundStmt 0x124827470 <col:102, line:24:9>     |   |   `-ReturnStmt 0x124827460 <line:23:13, col:20>     |   |     `-IntegerLiteral 0x124827440 <col:20> 'int' 1     |   |-BreakStmt 0x1248274a8 <line:25:9>     |   |-IfStmt 0x124123078 <line:27:9, line:29:9>     |   | |-BinaryOperator 0x124123010 <line:27:13, col:85> 'int' contains-errors '||'     |   | | |-RecoveryExpr 0x124122eb8 <col:13, col:45> '<dependent type>' contains-errors lvalue     |   | | | `-ParenExpr 0x124122e98 <col:13, col:42> 'struct lys_node_leaf *'     |   | | |   `-CStyleCastExpr 0x124122e70 <col:14, col:38> 'struct lys_node_leaf *' <BitCast>     |   | | |     `-ImplicitCastExpr 0x124122e58 <col:38> 'const struct lys_node *' <LValueToRValue> part_of_explicit_cast     |   | | |       `-DeclRefExpr 0x124827570 <col:38> 'const struct lys_node *' lvalue ParmVar 0x12480e248 'node' 'const struct lys_node *'     |   | | `-RecoveryExpr 0x124122fe8 <col:53, col:85> '<dependent type>' contains-errors lvalue     |   | |   `-ParenExpr 0x124122fc8 <col:53, col:82> 'struct lys_node_leaf *'     |   | |     `-CStyleCastExpr 0x124122fa0 <col:54, col:78> 'struct lys_node_leaf *' <BitCast>     |   | |       `-ImplicitCastExpr 0x124122f88 <col:78> 'const struct lys_node *' <LValueToRValue> part_of_explicit_cast     |   | |         `-DeclRefExpr 0x124122ee0 <col:78> 'const struct lys_node *' lvalue ParmVar 0x12480e248 'node' 'const struct lys_node *'     |   | `-CompoundStmt 0x124123060 <col:96, line:29:9>     |   |   `-ReturnStmt 0x124123050 <line:28:13, col:20>     |   |     `-IntegerLiteral 0x124123030 <col:20> 'int' 1     |   |-BreakStmt 0x124123098 <line:30:9>     |   |-IfStmt 0x124123468 <line:32:9, line:34:9>     |   | |-BinaryOperator 0x124123400 <line:32:13, col:93> 'int' contains-errors '||'     |   | | |-RecoveryExpr 0x1241232a8 <col:13, col:49> '<dependent type>' contains-errors lvalue     |   | | | `-ParenExpr 0x124123288 <col:13, col:46> 'struct lys_node_leaflist *'     |   | | |   `-CStyleCastExpr 0x124123260 <col:14, col:42> 'struct lys_node_leaflist *' <BitCast>     |   | | |     `-ImplicitCastExpr 0x124123248 <col:42> 'const struct lys_node *' <LValueToRValue> part_of_explicit_cast     |   | | |       `-DeclRefExpr 0x124123160 <col:42> 'const struct lys_node *' lvalue ParmVar 0x12480e248 'node' 'const struct lys_node *'     |   | | `-RecoveryExpr 0x1241233d8 <col:57, col:93> '<dependent type>' contains-errors lvalue     |   | |   `-ParenExpr 0x1241233b8 <col:57, col:90> 'struct lys_node_leaflist *'     |   | |     `-CStyleCastExpr 0x124123390 <col:58, col:86> 'struct lys_node_leaflist *' <BitCast>     |   | |       `-ImplicitCastExpr 0x124123378 <col:86> 'const struct lys_node *' <LValueToRValue> part_of_explicit_cast     |   | |         `-DeclRefExpr 0x1241232d0 <col:86> 'const struct lys_node *' lvalue ParmVar 0x12480e248 'node' 'const struct lys_node *'     |   | `-CompoundStmt 0x124123450 <col:104, line:34:9>     |   |   `-ReturnStmt 0x124123440 <line:33:13, col:20>     |   |     `-IntegerLiteral 0x124123420 <col:20> 'int' 1     |   |-BreakStmt 0x124123488 <line:35:9>     |   |-IfStmt 0x124123858 <line:37:9, line:39:9>     |   | |-BinaryOperator 0x1241237f0 <line:37:13, col:85> 'int' contains-errors '||'     |   | | |-RecoveryExpr 0x124123698 <col:13, col:45> '<dependent type>' contains-errors lvalue     |   | | | `-ParenExpr 0x124123678 <col:13, col:42> 'struct lys_node_list *'     |   | | |   `-CStyleCastExpr 0x124123650 <col:14, col:38> 'struct lys_node_list *' <BitCast>     |   | | |     `-ImplicitCastExpr 0x124123638 <col:38> 'const struct lys_node *' <LValueToRValue> part_of_explicit_cast     |   | | |       `-DeclRefExpr 0x124123550 <col:38> 'const struct lys_node *' lvalue ParmVar 0x12480e248 'node' 'const struct lys_node *'     |   | | `-RecoveryExpr 0x1241237c8 <col:53, col:85> '<dependent type>' contains-errors lvalue     |   | |   `-ParenExpr 0x1241237a8 <col:53, col:82> 'struct lys_node_list *'     |   | |     `-CStyleCastExpr 0x124123780 <col:54, col:78> 'struct lys_node_list *' <BitCast>     |   | |       `-ImplicitCastExpr 0x124123768 <col:78> 'const struct lys_node *' <LValueToRValue> part_of_explicit_cast     |   | |         `-DeclRefExpr 0x1241236c0 <col:78> 'const struct lys_node *' lvalue ParmVar 0x12480e248 'node' 'const struct lys_node *'     |   | `-CompoundStmt 0x124123840 <col:96, line:39:9>     |   |   `-ReturnStmt 0x124123830 <line:38:13, col:20>     |   |     `-IntegerLiteral 0x124123810 <col:20> 'int' 1     |   |-BreakStmt 0x124123878 <line:40:9>     |   |-IfStmt 0x124123c28 <line:42:9, line:44:9>     |   | |-BinaryOperator 0x124123bc0 <line:42:13, col:95> 'int' contains-errors '||'     |   | | |-RecoveryExpr 0x124123a68 <col:13, col:50> '<dependent type>' contains-errors lvalue     |   | | | `-ParenExpr 0x124123a48 <col:13, col:47> 'struct lys_node_container *'     |   | | |   `-CStyleCastExpr 0x124123a20 <col:14, col:43> 'struct lys_node_container *' <BitCast>     |   | | |     `-ImplicitCastExpr 0x124123a08 <col:43> 'const struct lys_node *' <LValueToRValue> part_of_explicit_cast     |   | | |       `-DeclRefExpr 0x124123920 <col:43> 'const struct lys_node *' lvalue ParmVar 0x12480e248 'node' 'const struct lys_node *'     |   | | `-RecoveryExpr 0x124123b98 <col:58, col:95> '<dependent type>' contains-errors lvalue     |   | |   `-ParenExpr 0x124123b78 <col:58, col:92> 'struct lys_node_container *'     |   | |     `-CStyleCastExpr 0x124123b50 <col:59, col:88> 'struct lys_node_container *' <BitCast>     |   | |       `-ImplicitCastExpr 0x124123b38 <col:88> 'const struct lys_node *' <LValueToRValue> part_of_explicit_cast     |   | |         `-DeclRefExpr 0x124123a90 <col:88> 'const struct lys_node *' lvalue ParmVar 0x12480e248 'node' 'const struct lys_node *'     |   | `-CompoundStmt 0x124123c10 <col:106, line:44:9>     |   |   `-ReturnStmt 0x124123c00 <line:43:13, col:20>     |   |     `-IntegerLiteral 0x124123be0 <col:20> 'int' 1     |   |-BreakStmt 0x124123c48 <line:45:9>     |   |-IfStmt 0x12482a6b8 <line:48:9, line:50:9>     |   | |-RecoveryExpr 0x12482a648 <line:48:13, col:46> '<dependent type>' contains-errors lvalue     |   | | `-ParenExpr 0x12482a628 <col:13, col:43> 'struct lys_node_inout *'     |   | |   `-CStyleCastExpr 0x12482a600 <col:14, col:39> 'struct lys_node_inout *' <BitCast>     |   | |     `-ImplicitCastExpr 0x124123dd8 <col:39> 'const struct lys_node *' <LValueToRValue> part_of_explicit_cast     |   | |       `-DeclRefExpr 0x124123cf0 <col:39> 'const struct lys_node *' lvalue ParmVar 0x12480e248 'node' 'const struct lys_node *'     |   | `-CompoundStmt 0x12482a6a0 <col:57, line:50:9>     |   |   `-ReturnStmt 0x12482a690 <line:49:13, col:20>     |   |     `-IntegerLiteral 0x12482a670 <col:20> 'int' 1     |   |-BreakStmt 0x12482a6d8 <line:51:9>     |   |-IfStmt 0x12482a938 <line:53:9, line:55:9>     |   | |-RecoveryExpr 0x12482a8c8 <line:53:13, col:46> '<dependent type>' contains-errors lvalue     |   | | `-ParenExpr 0x12482a8a8 <col:13, col:43> 'struct lys_node_notif *'     |   | |   `-CStyleCastExpr 0x12482a880 <col:14, col:39> 'struct lys_node_notif *' <BitCast>     |   | |     `-ImplicitCastExpr 0x12482a868 <col:39> 'const struct lys_node *' <LValueToRValue> part_of_explicit_cast     |   | |       `-DeclRefExpr 0x12482a780 <col:39> 'const struct lys_node *' lvalue ParmVar 0x12480e248 'node' 'const struct lys_node *'     |   | `-CompoundStmt 0x12482a920 <col:57, line:55:9>     |   |   `-ReturnStmt 0x12482a910 <line:54:13, col:20>     |   |     `-IntegerLiteral 0x12482a8f0 <col:20> 'int' 1     |   |-BreakStmt 0x12482a958 <line:56:9>     |   |-IfStmt 0x12482abb8 <line:58:9, line:60:9>     |   | |-RecoveryExpr 0x12482ab48 <line:58:13, col:45> '<dependent type>' contains-errors lvalue     |   | | `-ParenExpr 0x12482ab28 <col:13, col:42> 'struct lys_node_uses *'     |   | |   `-CStyleCastExpr 0x12482ab00 <col:14, col:38> 'struct lys_node_uses *' <BitCast>     |   | |     `-ImplicitCastExpr 0x12482aae8 <col:38> 'const struct lys_node *' <LValueToRValue> part_of_explicit_cast     |   | |       `-DeclRefExpr 0x12482aa00 <col:38> 'const struct lys_node *' lvalue ParmVar 0x12480e248 'node' 'const struct lys_node *'     |   | `-CompoundStmt 0x12482aba0 <col:51, line:60:9>     |   |   `-ReturnStmt 0x12482ab90 <line:59:13, col:20>     |   |     `-IntegerLiteral 0x12482ab70 <col:20> 'int' 1     |   |-BreakStmt 0x12482abd8 <line:61:9>     |   `-DefaultStmt 0x12482abe8 <line:62:5, line:64:9>     |     `-BreakStmt 0x12482abe0 <col:9>     `-ReturnStmt 0x12482acf0 <line:67:5, col:12>       `-IntegerLiteral 0x12482acd0 <col:12> 'int' 0 ","21250":"`-FunctionDecl 0x148927c58  line:1:1 invalid request_env 'int (int, int)'   |-ParmVarDecl 0x148927af0 <col:13, col:21> col:21 referenced invalid req 'int'   |-ParmVarDecl 0x148927b70 <col:26, col:32> col:32 invalid self 'int'   `-CompoundStmt 0x140809ac8 <col:38, line:45:1>     `-IfStmt 0x140809aa8 <line:2:5, line:43:5>       |-RecoveryExpr 0x148927d40 <line:2:9, col:29> '_Bool' contains-errors       `-CompoundStmt 0x140809a48 <col:34, line:43:5>         |-DeclStmt 0x148927fc8 <line:3:2, col:36>         | `-VarDecl 0x148927d78 <col:2, col:17> col:17 invalid env 'volatile int'         |-CallExpr 0x1489418c0 <line:9:2, col:55> '<dependent type>' contains-errors         | |-DeclRefExpr 0x1489280c0 <col:2> 'int ()' Function 0x148928008 'rb_hash_aset' 'int ()'         | |-RecoveryExpr 0x1489280e0 <col:15> '<dependent type>' contains-errors lvalue         | |-RecoveryExpr 0x1489418a0 <col:20> '<dependent type>' contains-errors lvalue         | `-CallExpr 0x148941840 <col:40, col:54> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x148941800 <col:40> 'int ()' Function 0x148928140 'req_method' 'int ()'         |   `-RecoveryExpr 0x148941820 <col:51> '<dependent type>' contains-errors lvalue         |-CallExpr 0x148941af0 <line:10:2, col:57> '<dependent type>' contains-errors         | |-DeclRefExpr 0x1489418f8 <col:2> 'int ()' Function 0x148928008 'rb_hash_aset' 'int ()'         | |-RecoveryExpr 0x148941918 <col:15> '<dependent type>' contains-errors lvalue         | |-RecoveryExpr 0x148941ad0 <col:20> '<dependent type>' contains-errors lvalue         | `-CallExpr 0x148941a70 <col:37, col:56> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x148941a30 <col:37> 'int ()' Function 0x148941978 'req_script_name' 'int ()'         |   `-RecoveryExpr 0x148941a50 <col:53> '<dependent type>' contains-errors lvalue         |-CallExpr 0x148941d20 <line:11:2, col:53> '<dependent type>' contains-errors         | |-DeclRefExpr 0x148941b28 <col:2> 'int ()' Function 0x148928008 'rb_hash_aset' 'int ()'         | |-RecoveryExpr 0x148941b48 <col:15> '<dependent type>' contains-errors lvalue         | |-RecoveryExpr 0x148941d00 <col:20> '<dependent type>' contains-errors lvalue         | `-CallExpr 0x148941ca0 <col:35, col:52> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x148941c60 <col:35> 'int ()' Function 0x148941ba8 'req_path_info' 'int ()'         |   `-RecoveryExpr 0x148941c80 <col:49> '<dependent type>' contains-errors lvalue         |-CallExpr 0x148941f50 <line:12:2, col:59> '<dependent type>' contains-errors         | |-DeclRefExpr 0x148941d58 <col:2> 'int ()' Function 0x148928008 'rb_hash_aset' 'int ()'         | |-RecoveryExpr 0x148941d78 <col:15> '<dependent type>' contains-errors lvalue         | |-RecoveryExpr 0x148941f30 <col:20> '<dependent type>' contains-errors lvalue         | `-CallExpr 0x148941ed0 <col:38, col:58> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x148941e90 <col:38> 'int ()' Function 0x148941dd8 'req_query_string' 'int ()'         |   `-RecoveryExpr 0x148941eb0 <col:55> '<dependent type>' contains-errors lvalue         |-CallExpr 0x148942180 <line:13:2, col:57> '<dependent type>' contains-errors         | |-DeclRefExpr 0x148941f88 <col:2> 'int ()' Function 0x148928008 'rb_hash_aset' 'int ()'         | |-RecoveryExpr 0x148941fa8 <col:15> '<dependent type>' contains-errors lvalue         | |-RecoveryExpr 0x148942160 <col:20> '<dependent type>' contains-errors lvalue         | `-CallExpr 0x148942100 <col:37, col:56> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x1489420c0 <col:37> 'int ()' Function 0x148942008 'req_server_name' 'int ()'         |   `-RecoveryExpr 0x1489420e0 <col:53> '<dependent type>' contains-errors lvalue         |-CallExpr 0x1489423b0 <line:14:2, col:57> '<dependent type>' contains-errors         | |-DeclRefExpr 0x1489421b8 <col:2> 'int ()' Function 0x148928008 'rb_hash_aset' 'int ()'         | |-RecoveryExpr 0x1489421d8 <col:15> '<dependent type>' contains-errors lvalue         | |-RecoveryExpr 0x148942390 <col:20> '<dependent type>' contains-errors lvalue         | `-CallExpr 0x148942330 <col:37, col:56> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x1489422f0 <col:37> 'int ()' Function 0x148942238 'req_server_port' 'int ()'         |   `-RecoveryExpr 0x148942310 <col:53> '<dependent type>' contains-errors lvalue         |-CallExpr 0x148942528 <line:15:2, col:23> '<dependent type>' contains-errors         | |-DeclRefExpr 0x1489424c8 <col:2> 'int ()' Function 0x148942410 'fill_headers' 'int ()'         | |-RecoveryExpr 0x1489424e8 <col:15> '<dependent type>' contains-errors lvalue         | `-RecoveryExpr 0x148942508 <col:20> '<dependent type>' contains-errors lvalue         |-IfStmt 0x140809918 <line:37:2, line:41:2>         | |-RecoveryExpr 0x1408096a0 <line:37:6, col:18> '_Bool' contains-errors         | `-CompoundStmt 0x140809900 <col:36, line:41:2>         |   `-DeclStmt 0x140809888 <line:38:6, col:51>         |     `-VarDecl 0x1408096d8 <col:6, col:21> col:21 invalid eh 'volatile int'         `-BinaryOperator 0x140809a28 <line:42:2, col:20> '<dependent type>' contains-errors '='           |-CXXDependentScopeMemberExpr 0x140809980 <col:2, col:7> '<dependent type>' contains-errors lvalue ->env           | `-RecoveryExpr 0x140809958 <col:2> '<dependent type>' contains-errors lvalue           |   `-DeclRefExpr 0x140809938 <col:2> 'int' lvalue ParmVar 0x148927af0 'req' 'int'           `-CStyleCastExpr 0x140809a00 <col:13, col:20> 'void *' contains-errors <Dependent>             `-RecoveryExpr 0x1408099c8 <col:20> '<dependent type>' contains-errors lvalue ","20958":"`-FunctionDecl 0x16000ddc8  line:1:1 invalid mono_thread_request_interruption 'int (int)'   |-ParmVarDecl 0x16000dcf0 <col:35, col:44> col:44 invalid running_managed 'int'   `-CompoundStmt 0x1600283c0 <line:2:1, line:37:1>     |-IfStmt 0x16000e170 <line:6:2, line:7:10>     | |-BinaryOperator 0x16000e108 <line:6:6, col:16> 'int' contains-errors '=='     | | |-RecoveryExpr 0x16000e0c8 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x16000e0e8 <col:16> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x16000e160 <line:7:3, col:10>     |   `-RecoveryExpr 0x16000e140 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x160027b00 <line:16:2, line:17:10>     | |-BinaryOperator 0x160027a98 <line:16:6, col:76> 'int' contains-errors '=='     | | |-CallExpr 0x160027a60 <col:6, col:71> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x16000e270 <col:6> 'int ()' Function 0x16000e1b8 'InterlockedCompareExchange' 'int ()'     | | | |-UnaryOperator 0x160027a48 <col:34, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | | `-CXXDependentScopeMemberExpr 0x160027a00 <col:35, col:43> '<dependent type>' contains-errors lvalue ->interruption_requested     | | | |   `-RecoveryExpr 0x16000e3c0 <col:35> '<dependent type>' contains-errors lvalue     | | | |-IntegerLiteral 0x16000e308 <col:67> 'int' 1     | | | `-IntegerLiteral 0x16000e328 <col:70> 'int' 0     | | `-IntegerLiteral 0x16000e380 <col:76> 'int' 1     | `-ReturnStmt 0x160027af0 <line:17:3, col:10>     |   `-RecoveryExpr 0x160027ad0 <col:10> '<dependent type>' contains-errors lvalue     `-IfStmt 0x160028390 <line:19:2, line:36:2> has_else       |-BinaryOperator 0x160027ca8 <line:19:6, col:56> 'int' contains-errors '||'       | |-UnaryOperator 0x160027b58 <col:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow       | | `-ImplicitCastExpr 0x160027b40 <col:7> '<dependent type>' contains-errors <LValueToRValue>       | |   `-RecoveryExpr 0x160027b20 <col:7> '<dependent type>' contains-errors lvalue       | `-CallExpr 0x160027c88 <col:26, col:56> 'int'       |   `-ImplicitCastExpr 0x160027c70 <col:26> 'int (*)()' <FunctionToPointerDecay>       |     `-DeclRefExpr 0x160027c50 <col:26> 'int ()' Function 0x160027b98 'is_running_protected_wrapper' 'int ()'       |-CompoundStmt 0x160028260 <col:59, line:33:2>       | |-CallExpr 0x160027e58 <line:22:3, col:55> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x160027da8 <col:3> 'int ()' Function 0x160027cf0 'InterlockedIncrement' 'int ()'       | | `-UnaryOperator 0x160027e40 <col:25, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow       | |   `-RecoveryExpr 0x160027e20 <col:26> '<dependent type>' contains-errors lvalue       | `-IfStmt 0x1600280b0 <line:24:3, line:27:39>       |   |-BinaryOperator 0x160027f58 <line:24:7, col:45> 'int' contains-errors '&&'       |   | |-RecoveryExpr 0x160027f08 <col:7> '<dependent type>' contains-errors lvalue       |   | `-UnaryOperator 0x160027f40 <col:44, col:45> '<dependent type>' contains-errors prefix '!' cannot overflow       |   |   `-ImplicitCastExpr 0x160027f28 <col:45> '<dependent type>' contains-errors <LValueToRValue>       |   |     `-RecoveryExpr 0x160027e98 <col:45> '<dependent type>' contains-errors lvalue       |   `-CallExpr 0x160028090 <line:27:4, col:39> 'int'       |     `-ImplicitCastExpr 0x160028078 <col:4> 'int (*)()' <FunctionToPointerDecay>       |       `-DeclRefExpr 0x160028058 <col:4> 'int ()' Function 0x160027fa0 'mono_thread_notify_pending_exc_fn' 'int ()'       `-CompoundStmt 0x160028380 <line:34:7, line:36:2> ","21016":"`-FunctionDecl 0x13b8103b8  line:1:6 invalid isValidStringChar 'int (char)'   |-ParmVarDecl 0x13b8102e8 <col:24, col:29> col:29 used c 'char'   `-CompoundStmt 0x13b8105b8 <col:32, line:4:1>     `-ReturnStmt 0x13b8105a8 <line:3:3, col:28>       `-BinaryOperator 0x13b810588 <col:10, col:28> 'int' '&&'         |-BinaryOperator 0x13b8104d8 <col:10, col:15> 'int' '>='         | |-ImplicitCastExpr 0x13b8104c0 <col:10> 'int' <IntegralCast>         | | `-ImplicitCastExpr 0x13b8104a8 <col:10> 'char' <LValueToRValue>         | |   `-DeclRefExpr 0x13b810468 <col:10> 'char' lvalue ParmVar 0x13b8102e8 'c' 'char'         | `-IntegerLiteral 0x13b810488 <col:15> 'int' 32         `-BinaryOperator 0x13b810568 <col:23, col:28> 'int' '<='           |-ImplicitCastExpr 0x13b810550 <col:23> 'int' <IntegralCast>           | `-ImplicitCastExpr 0x13b810538 <col:23> 'char' <LValueToRValue>           |   `-DeclRefExpr 0x13b8104f8 <col:23> 'char' lvalue ParmVar 0x13b8102e8 'c' 'char'           `-IntegerLiteral 0x13b810518 <col:28> 'int' 126 ","20219":"`-FunctionDecl 0x14a140d68  line:1:1 invalid gostdsa_vko 'int (const struct ecc_scalar *, const struct ecc_point *, int, const int *, int *)'   |-ParmVarDecl 0x14a128648 <col:14, col:39> col:39 used priv 'const struct ecc_scalar *'   |-ParmVarDecl 0x14a140a28 <line:2:3, col:27> col:27 used pub 'const struct ecc_point *'   |-ParmVarDecl 0x14a140ac0 <line:3:3, col:10> col:10 invalid ukm_length 'int'   |-ParmVarDecl 0x14a140b40 <col:22, col:37> col:37 invalid ukm 'const int *'   |-ParmVarDecl 0x14a140bf8 <line:4:3, col:12> col:12 invalid out 'int *'   `-CompoundStmt 0x14a1448c0 <line:5:1, line:38:1>     |-DeclStmt 0x14a141088 <line:6:3, col:42>     | |-RecordDecl 0x14a140e38 <col:9, col:16> col:16 struct ecc_curve     | `-VarDecl 0x14a140fa8 <col:3, col:39> col:27 used ecc 'const struct ecc_curve *' cinit     |   `-RecoveryExpr 0x14a141048 <col:33, col:39> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14a141010 <col:33> 'const struct ecc_scalar *' lvalue ParmVar 0x14a128648 'priv' 'const struct ecc_scalar *'     |-DeclStmt 0x14a141400 <line:7:3, col:48>     | `-VarDecl 0x14a1410b8 <col:3, col:47> col:12 used bsize 'unsigned int' cinit     |   `-ImplicitCastExpr 0x14a1413e8 <col:20, col:47> 'unsigned int' contains-errors <IntegralCast>     |     `-BinaryOperator 0x14a1413c8 <col:20, col:47> 'int' contains-errors '\/'     |       |-ParenExpr 0x14a141388 <col:20, col:43> 'int' contains-errors     |       | `-BinaryOperator 0x14a141368 <col:21, col:42> 'int' contains-errors '+'     |       |   |-CallExpr 0x14a141308 <col:21, col:38> 'int' contains-errors     |       |   | |-ImplicitCastExpr 0x14a1412f0 <col:21> 'int (*)()' <FunctionToPointerDecay>     |       |   | | `-DeclRefExpr 0x14a141280 <col:21> 'int ()' Function 0x14a1411c8 'ecc_bit_size' 'int ()'     |       |   | `-ImplicitCastExpr 0x14a141330 <col:35> 'const struct ecc_curve *' contains-errors <LValueToRValue>     |       |   |   `-DeclRefExpr 0x14a1412a0 <col:35> 'const struct ecc_curve *' contains-errors lvalue Var 0x14a140fa8 'ecc' 'const struct ecc_curve *'     |       |   `-IntegerLiteral 0x14a141348 <col:42> 'int' 7     |       `-IntegerLiteral 0x14a1413a8 <col:47> 'int' 8     |-CallExpr 0x14a1418e8 <line:15:3, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a141828 <col:3> 'int ()' Function 0x14a141770 'assert' 'int ()'     | `-BinaryOperator 0x14a1418c8 <col:11, col:23> 'int' contains-errors '=='     |   |-RecoveryExpr 0x14a141880 <col:11, col:16> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14a141848 <col:11> 'const struct ecc_point *' lvalue ParmVar 0x14a140a28 'pub' 'const struct ecc_point *'     |   `-DeclRefExpr 0x14a1418a8 <col:23> 'const struct ecc_curve *' contains-errors lvalue Var 0x14a140fa8 'ecc' 'const struct ecc_curve *'     |-CallExpr 0x14a1419d0 <line:16:3, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a141910 <col:3> 'int ()' Function 0x14a141770 'assert' 'int ()'     | `-BinaryOperator 0x14a1419b0 <col:11, col:24> 'int' contains-errors '=='     |   |-RecoveryExpr 0x14a141968 <col:11, col:17> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14a141930 <col:11> 'const struct ecc_scalar *' lvalue ParmVar 0x14a128648 'priv' 'const struct ecc_scalar *'     |   `-DeclRefExpr 0x14a141990 <col:24> 'const struct ecc_curve *' contains-errors lvalue Var 0x14a140fa8 'ecc' 'const struct ecc_curve *'     `-CallExpr 0x14a143e80 <line:17:3, col:30> '<dependent type>' contains-errors       |-DeclRefExpr 0x14a143e00 <col:3> 'int ()' Function 0x14a141770 'assert' 'int ()'       `-BinaryOperator 0x14a143e60 <col:11, col:25> 'int' contains-errors '<='         |-RecoveryExpr 0x14a143e20 <col:11> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x14a143e40 <col:25> 'unsigned int' contains-errors lvalue Var 0x14a1410b8 'bsize' 'unsigned int' ","20840":"`-FunctionDecl 0x15a80e358  line:1:5 rdma_addr_size_kss 'int (struct __kernel_sockaddr_storage *)'   |-ParmVarDecl 0x15a80e248 <col:24, col:58> col:58 used addr 'struct __kernel_sockaddr_storage *'   `-CompoundStmt 0x15a826b48 <line:2:1, line:6:1>     `-DeclStmt 0x15a826a60 <line:3:2, col:52>       `-VarDecl 0x15a826668 <col:2, col:51> col:6 used ret 'int' cinit         `-CallExpr 0x15a826a38 <col:12, col:51> 'int'           |-ImplicitCastExpr 0x15a826a20 <col:12> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x15a826800 <col:12> 'int ()' Function 0x15a826748 'rdma_addr_size' 'int ()'           `-CStyleCastExpr 0x15a8269c0 <col:27, col:47> 'struct sockaddr *' <BitCast>             `-ImplicitCastExpr 0x15a8269a8 <col:47> 'struct __kernel_sockaddr_storage *' <LValueToRValue> part_of_explicit_cast               `-DeclRefExpr 0x15a8268c0 <col:47> 'struct __kernel_sockaddr_storage *' lvalue ParmVar 0x15a80e248 'addr' 'struct __kernel_sockaddr_storage *' ","20638":"`-FunctionDecl 0x129128750  line:1:13 shmem_destroy_inode 'void (struct inode *)' static   |-ParmVarDecl 0x129128648 <col:33, col:47> col:47 used inode 'struct inode *'   `-CompoundStmt 0x1291454a8 <line:2:1, line:9:1>     |-IfStmt 0x129145088 <line:3:2, line:6:2>     | |-RecoveryExpr 0x129144d10 <line:3:6, col:34> '_Bool' contains-errors     | `-CompoundStmt 0x129145070 <col:43, line:6:2>     |   `-CallExpr 0x129145048 <line:5:3, col:50> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x129144e40 <col:3> 'int ()' Function 0x129144d88 'mpol_free_shared_policy' 'int ()'     |     `-UnaryOperator 0x129145030 <col:27, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x129145008 <col:28, col:44> '<dependent type>' contains-errors lvalue     |         `-CallExpr 0x129144fc8 <col:28, col:41> 'int'     |           |-ImplicitCastExpr 0x129144fb0 <col:28> 'int (*)()' <FunctionToPointerDecay>     |           | `-DeclRefExpr 0x129144f40 <col:28> 'int ()' Function 0x129144e88 'SHMEM_I' 'int ()'     |           `-ImplicitCastExpr 0x129144ff0 <col:36> 'struct inode *' <LValueToRValue>     |             `-DeclRefExpr 0x129144f60 <col:36> 'struct inode *' lvalue ParmVar 0x129128648 'inode' 'struct inode *'     |-CallExpr 0x1291451e0 <line:7:2, col:31> 'int'     | |-ImplicitCastExpr 0x1291451c8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x129145188 <col:2> 'int ()' Function 0x1291450d0 'shmem_acl_destroy_inode' 'int ()'     | `-ImplicitCastExpr 0x129145208 <col:26> 'struct inode *' <LValueToRValue>     |   `-DeclRefExpr 0x1291451a8 <col:26> 'struct inode *' lvalue ParmVar 0x129128648 'inode' 'struct inode *'     `-CallExpr 0x129145478 <line:8:2, col:52> '<dependent type>' contains-errors       |-DeclRefExpr 0x129145300 <col:2> 'int ()' Function 0x129145248 'kmem_cache_free' 'int ()'       |-RecoveryExpr 0x129145400 <col:18> '<dependent type>' contains-errors lvalue       `-CallExpr 0x129145438 <col:38, col:51> 'int'         |-ImplicitCastExpr 0x129145420 <col:38> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x129145338 <col:38> 'int ()' Function 0x129144e88 'SHMEM_I' 'int ()'         `-ImplicitCastExpr 0x129145460 <col:46> 'struct inode *' <LValueToRValue>           `-DeclRefExpr 0x129145358 <col:46> 'struct inode *' lvalue ParmVar 0x129128648 'inode' 'struct inode *' ","20181":"`-FunctionDecl 0x14b928288  line:1:1 invalid delete_buff_tail 'int (int *, int)'   |-ParmVarDecl 0x14b928128 <col:18, col:32> col:32 referenced invalid buf 'int *'   |-ParmVarDecl 0x14b9281a8 <col:37, col:41> col:41 used slen 'int'   `-CompoundStmt 0x14b942b50 <line:2:1, line:10:1>     |-DeclStmt 0x14b928658 <line:3:5, col:47>     | `-VarDecl 0x14b928358 <col:5, col:46> col:9 used len 'int' cinit     |   `-CStyleCastExpr 0x14b928630 <col:15, col:46> 'int' contains-errors <Dependent>     |     `-CallExpr 0x14b9285f0 <col:20, col:46> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x14b928520 <col:20> 'int ()' Function 0x14b928468 'STRLEN' 'int ()'     |       `-CXXDependentScopeMemberExpr 0x14b9285a8 <col:27, col:41> '<dependent type>' contains-errors lvalue ->b_str     |         `-CXXDependentScopeMemberExpr 0x14b928560 <col:27, col:32> '<dependent type>' contains-errors lvalue ->bh_curr     |           `-RecoveryExpr 0x14b928540 <col:27> '<dependent type>' contains-errors lvalue     `-IfStmt 0x14b942b30 <line:5:5, line:9:5>       |-BinaryOperator 0x14b9286e0 <line:5:9, col:16> 'int' contains-errors '>='       | |-ImplicitCastExpr 0x14b9286b0 <col:9> 'int' contains-errors <LValueToRValue>       | | `-DeclRefExpr 0x14b928670 <col:9> 'int' contains-errors lvalue Var 0x14b928358 'len' 'int'       | `-ImplicitCastExpr 0x14b9286c8 <col:16> 'int' <LValueToRValue>       |   `-DeclRefExpr 0x14b928690 <col:16> 'int' lvalue ParmVar 0x14b9281a8 'slen' 'int'       `-CompoundStmt 0x14b942b10 <line:6:5, line:9:5>         |-BinaryOperator 0x14b942a10 <line:7:2, col:36> '<dependent type>' contains-errors '='         | |-ArraySubscriptExpr 0x14b9429d0 <col:2, col:32> '<dependent type>' contains-errors lvalue         | | |-ImplicitCastExpr 0x14b9429b8 <col:2, col:16> '<dependent type>' contains-errors <LValueToRValue>         | | | `-CXXDependentScopeMemberExpr 0x14b928790 <col:2, col:16> '<dependent type>' contains-errors lvalue ->b_str         | | |   `-CXXDependentScopeMemberExpr 0x14b928748 <col:2, col:7> '<dependent type>' contains-errors lvalue ->bh_curr         | | |     `-RecoveryExpr 0x14b928720 <col:2> '<dependent type>' contains-errors lvalue         | | |       `-DeclRefExpr 0x14b928700 <col:2> 'int *' lvalue ParmVar 0x14b928128 'buf' 'int *'         | | `-BinaryOperator 0x14b942998 <col:22, col:28> 'int' contains-errors '-'         | |   |-ImplicitCastExpr 0x14b942968 <col:22> 'int' contains-errors <LValueToRValue>         | |   | `-DeclRefExpr 0x14b9287d8 <col:22> 'int' contains-errors lvalue Var 0x14b928358 'len' 'int'         | |   `-ImplicitCastExpr 0x14b942980 <col:28> 'int' <LValueToRValue>         | |     `-DeclRefExpr 0x14b942800 <col:28> 'int' lvalue ParmVar 0x14b9281a8 'slen' 'int'         | `-RecoveryExpr 0x14b9429f0 <col:36> '<dependent type>' contains-errors lvalue         `-CompoundAssignOperator 0x14b942ae0 <line:8:2, col:19> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'           |-CXXDependentScopeMemberExpr 0x14b942a78 <col:2, col:7> '<dependent type>' contains-errors lvalue ->bh_space           | `-RecoveryExpr 0x14b942a50 <col:2> '<dependent type>' contains-errors lvalue           |   `-DeclRefExpr 0x14b942a30 <col:2> 'int *' lvalue ParmVar 0x14b928128 'buf' 'int *'           `-DeclRefExpr 0x14b942ac0 <col:19> 'int' lvalue ParmVar 0x14b9281a8 'slen' 'int' ","20986":"`-FunctionDecl 0x12f140c08  line:1:5 ldb_msg_add_linearized_dn 'int (struct ldb_message *, const char *, struct ldb_dn *)'   |-ParmVarDecl 0x12f128648 <col:31, col:51> col:51 used msg 'struct ldb_message *'   |-ParmVarDecl 0x12f1286c8 <col:56, col:68> col:68 used attr_name 'const char *'   |-ParmVarDecl 0x12f140ac8 <line:2:10, col:25> col:25 used dn 'struct ldb_dn *'   `-CompoundStmt 0x12f141318 <line:3:1, line:12:1>     |-DeclStmt 0x12f140fe0 <line:4:2, col:46>     | `-VarDecl 0x12f140d28 <col:2, col:45> col:8 used str 'char *' cinit     |   `-ImplicitCastExpr 0x12f140fc8 <col:14, col:45> 'char *' <IntegralToPointer>     |     `-CallExpr 0x12f140f68 <col:14, col:45> 'int'     |       |-ImplicitCastExpr 0x12f140f50 <col:14> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x12f140ec0 <col:14> 'int ()' Function 0x12f140e08 'ldb_dn_alloc_linearized' 'int ()'     |       |-ImplicitCastExpr 0x12f140f98 <col:38> 'struct ldb_message *' <LValueToRValue>     |       | `-DeclRefExpr 0x12f140ee0 <col:38> 'struct ldb_message *' lvalue ParmVar 0x12f128648 'msg' 'struct ldb_message *'     |       `-ImplicitCastExpr 0x12f140fb0 <col:43> 'struct ldb_dn *' <LValueToRValue>     |         `-DeclRefExpr 0x12f140f00 <col:43> 'struct ldb_dn *' lvalue ParmVar 0x12f140ac8 'dn' 'struct ldb_dn *'     |-IfStmt 0x12f1410f0 <line:6:2, line:9:2>     | |-BinaryOperator 0x12f141070 <line:6:6, col:13> 'int' contains-errors '=='     | | |-DeclRefExpr 0x12f140ff8 <col:6> 'char *' lvalue Var 0x12f140d28 'str' 'char *'     | | `-RecoveryExpr 0x12f141050 <col:13> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12f1410d8 <col:19, line:9:2>     |   `-ReturnStmt 0x12f1410c8 <line:8:3, col:10>     |     `-RecoveryExpr 0x12f1410a8 <col:10> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12f141308 <line:11:2, col:53>       `-CallExpr 0x12f141288 <col:9, col:53> 'int'         |-ImplicitCastExpr 0x12f141270 <col:9> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x12f1411f0 <col:9> 'int ()' Function 0x12f141138 'ldb_msg_add_steal_string' 'int ()'         |-ImplicitCastExpr 0x12f1412c0 <col:34> 'struct ldb_message *' <LValueToRValue>         | `-DeclRefExpr 0x12f141210 <col:34> 'struct ldb_message *' lvalue ParmVar 0x12f128648 'msg' 'struct ldb_message *'         |-ImplicitCastExpr 0x12f1412d8 <col:39> 'const char *' <LValueToRValue>         | `-DeclRefExpr 0x12f141230 <col:39> 'const char *' lvalue ParmVar 0x12f1286c8 'attr_name' 'const char *'         `-ImplicitCastExpr 0x12f1412f0 <col:50> 'char *' <LValueToRValue>           `-DeclRefExpr 0x12f141250 <col:50> 'char *' lvalue Var 0x12f140d28 'str' 'char *' ","20738":"`-FunctionDecl 0x158928288  line:1:22 invalid ConvertScalar 'const char *(int *, int *)' static   |-ParmVarDecl 0x158928128 <col:36, col:46> col:46 invalid v 'int *'   |-ParmVarDecl 0x1589281a8 <col:49, col:55> col:55 invalid out 'int *'   `-CompoundStmt 0x158941c20 <col:60, line:12:3>     |-IfStmt 0x158941ba8 <line:2:5, line:10:5> has_else     | |-BinaryOperator 0x1589283b8 <line:2:9, col:14> 'int' contains-errors '=='     | | |-RecoveryExpr 0x158928340 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x158928398 <col:14> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x158928500 <col:23, line:4:5>     | | `-BinaryOperator 0x1589284e0 <line:3:7, col:14> '<dependent type>' contains-errors '='     | |   |-UnaryOperator 0x1589284a8 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow     | |   | `-ImplicitCastExpr 0x158928490 <col:8> '<dependent type>' contains-errors <LValueToRValue>     | |   |   `-RecoveryExpr 0x1589283d8 <col:8> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x1589284c0 <col:14> '<dependent type>' contains-errors lvalue     | `-IfStmt 0x158941b78 <line:4:12, line:10:5> has_else     |   |-BinaryOperator 0x158928590 <line:4:16, col:21> 'int' contains-errors '=='     |   | |-RecoveryExpr 0x158928518 <col:16> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x158928570 <col:21> '<dependent type>' contains-errors lvalue     |   |-CompoundStmt 0x158928648 <col:31, line:6:5>     |   `-IfStmt 0x158941b48 <col:12, line:10:5> has_else     |     |-CallExpr 0x158941898 <line:6:16, col:51> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x1589287b0 <col:16> 'int ()' Function 0x1589286f8 'PyIsInstance' 'int ()'     |     | |-RecoveryExpr 0x1589287d0 <col:29> '<dependent type>' contains-errors lvalue     |     | `-UnaryOperator 0x158941880 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |     |   `-RecoveryExpr 0x158941860 <col:33> '<dependent type>' contains-errors lvalue     |     |-CompoundStmt 0x158941ad0 <col:54, line:8:5>     |     | `-BinaryOperator 0x158941ab0 <line:7:7, col:31> '<dependent type>' contains-errors '='     |     |   |-UnaryOperator 0x158941a98 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow     |     |   | `-ImplicitCastExpr 0x158941a80 <col:8> '<dependent type>' contains-errors <LValueToRValue>     |     |   |   `-RecoveryExpr 0x1589418c8 <col:8> '<dependent type>' contains-errors lvalue     |     |   `-CallExpr 0x158941a38 <col:14, col:31> '<dependent type>' contains-errors     |     |     |-DeclRefExpr 0x1589419f8 <col:14> 'int ()' Function 0x158941940 'PyObject_IsTrue' 'int ()'     |     |     `-RecoveryExpr 0x158941a18 <col:30> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x158941b30 <line:8:12, line:10:5>     |       `-ReturnStmt 0x158941b20 <line:9:7, col:14>     |         `-RecoveryExpr 0x158941b00 <col:14> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x158941c10 <line:11:5, col:12>       `-RecoveryExpr 0x158941bf0 <col:12> '<dependent type>' contains-errors lvalue ","20514":"`-FunctionDecl 0x12f80e0c8  line:1:1 invalid TIFFWriteDirectoryTagCheckedIfd8Array 'int (int *, int *, int *, int, int, int *)'   |-ParmVarDecl 0x12f80dd28 <col:39, col:45> col:45 invalid tif 'int *'   |-ParmVarDecl 0x12f80dda8 <col:50, col:58> col:58 invalid ndir 'int *'   |-ParmVarDecl 0x12f80de28 <col:64, col:78> col:78 invalid dir 'int *'   |-ParmVarDecl 0x12f80dea8 <col:83, col:90> col:90 invalid tag 'int'   |-ParmVarDecl 0x12f80df28 <col:95, col:102> col:102 invalid count 'int'   |-ParmVarDecl 0x12f80dfa8 <col:109, col:117> col:117 invalid value 'int *'   `-CompoundStmt 0x139009858 <line:2:1, line:9:1>     |-CallExpr 0x12f80e380 <line:3:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f80e300 <col:2> 'int ()' Function 0x12f80e248 'assert' 'int ()'     | `-BinaryOperator 0x12f80e360 <col:9, col:15> 'int' contains-errors '<'     |   |-RecoveryExpr 0x12f80e320 <col:9> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x12f80e340 <col:15> 'int' 536870912     |-CallExpr 0x139009328 <line:5:2, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x139009200 <col:2> 'int ()' Function 0x12f80e248 'assert' 'int ()'     | `-BinaryOperator 0x139009308 <col:9, col:24> '<dependent type>' contains-errors '&'     |   |-CXXDependentScopeMemberExpr 0x139009240 <col:9, col:14> '<dependent type>' contains-errors lvalue ->tif_flags     |   | `-RecoveryExpr 0x139009220 <col:9> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x1390092e8 <col:24> '<dependent type>' contains-errors lvalue     `-IfStmt 0x1390095a0 <line:6:2, line:7:35>       |-BinaryOperator 0x139009410 <line:6:6, col:21> '<dependent type>' contains-errors '&'       | |-CXXDependentScopeMemberExpr 0x139009370 <col:6, col:11> '<dependent type>' contains-errors lvalue ->tif_flags       | | `-RecoveryExpr 0x139009350 <col:6> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x1390093f0 <col:21> '<dependent type>' contains-errors lvalue       `-CallExpr 0x139009570 <line:7:3, col:35> '<dependent type>' contains-errors         |-DeclRefExpr 0x139009510 <col:3> 'int ()' Function 0x139009458 'TIFFSwabArrayOfLong8' 'int ()'         |-RecoveryExpr 0x139009530 <col:24> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x139009550 <col:30> '<dependent type>' contains-errors lvalue ","20466":"`-FunctionDecl 0x14e80de80  line:3:6 invalid internal_set_bit 'void (int *, int)'   |-ParmVarDecl 0x14e80dd28 <col:23, col:32> col:32 referenced invalid set 'int *'   |-ParmVarDecl 0x14e80dda8 <col:37, col:42> col:42 used bit 'int'   `-CompoundStmt 0x14e80e098 <line:4:1, line:5:54> ","20900":"`-FunctionDecl 0x12c128750  line:1:13 sixpack_close 'void (struct tty_struct *)' static   |-ParmVarDecl 0x12c128648 <col:27, col:46> col:46 used tty 'struct tty_struct *'   `-CompoundStmt 0x12d808d18 <line:2:1, line:29:1>     |-DeclStmt 0x12c140c38 <line:3:2, col:20>     | |-RecordDecl 0x12c140a48 <col:2, col:9> col:9 struct sixpack     | `-VarDecl 0x12c140bb8 <col:2, col:18> col:18 used sp 'struct sixpack *'     |-CallExpr 0x12c140e30 <line:5:2, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12c140d80 <col:2> 'int ()' Function 0x12c140cc8 'write_lock_irq' 'int ()'     | `-UnaryOperator 0x12c140e18 <col:17, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12c140df8 <col:18> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12c140ed8 <line:6:2, col:12> 'struct sixpack *' contains-errors '='     | |-DeclRefExpr 0x12c140e58 <col:2> 'struct sixpack *' lvalue Var 0x12c140bb8 'sp' 'struct sixpack *'     | `-RecoveryExpr 0x12c140eb0 <col:7, col:12> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12c140e78 <col:7> 'struct tty_struct *' lvalue ParmVar 0x12c128648 'tty' 'struct tty_struct *'     |-BinaryOperator 0x12c140fb0 <line:7:2, col:19> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12c140f30 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12c140ef8 <col:2> 'struct tty_struct *' lvalue ParmVar 0x12c128648 'tty' 'struct tty_struct *'     | `-RecoveryExpr 0x12c140f90 <col:19> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12c141160 <line:8:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12c1410b0 <col:2> 'int ()' Function 0x12c140ff8 'write_unlock_irq' 'int ()'     | `-UnaryOperator 0x12c141148 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12c141128 <col:20> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12c1411e8 <line:9:2, line:10:3>     | |-UnaryOperator 0x12c1411c0 <line:9:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12c1411a8 <col:7> 'struct sixpack *' <LValueToRValue>     | |   `-DeclRefExpr 0x12c141188 <col:7> 'struct sixpack *' lvalue Var 0x12c140bb8 'sp' 'struct sixpack *'     | `-ReturnStmt 0x12c1411d8 <line:10:3>     |-IfStmt 0x12c141560 <line:13:2, line:14:32>     | |-UnaryOperator 0x12c1413a8 <line:13:6, col:40> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x12c141380 <col:7, col:40> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12c1412e8 <col:7> 'int ()' Function 0x12c141230 'refcount_dec_and_test' 'int ()'     | |   `-UnaryOperator 0x12c141368 <col:29, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-RecoveryExpr 0x12c141340 <col:30, col:34> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x12c141308 <col:30> 'struct sixpack *' lvalue Var 0x12c140bb8 'sp' 'struct sixpack *'     | `-CallExpr 0x12c141538 <line:14:3, col:32> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12c1414a0 <col:3> 'int ()' Function 0x12c1413e8 'wait_for_completion' 'int ()'     |   `-UnaryOperator 0x12c141520 <col:23, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x12c1414f8 <col:24, col:28> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x12c1414c0 <col:24> 'struct sixpack *' lvalue Var 0x12c140bb8 'sp' 'struct sixpack *'     |-CallExpr 0x12c1416e0 <line:17:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12c141660 <col:2> 'int ()' Function 0x12c1415a8 'netif_stop_queue' 'int ()'     | `-RecoveryExpr 0x12c1416b8 <col:19, col:23> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12c141680 <col:19> 'struct sixpack *' lvalue Var 0x12c140bb8 'sp' 'struct sixpack *'     |-CallExpr 0x12c141880 <line:19:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12c1417e8 <col:2> 'int ()' Function 0x12c141730 'del_timer_sync' 'int ()'     | `-UnaryOperator 0x12c141868 <col:17, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12c141840 <col:18, col:22> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12c141808 <col:18> 'struct sixpack *' lvalue Var 0x12c140bb8 'sp' 'struct sixpack *'     |-CallExpr 0x12c141940 <line:20:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12c1418a8 <col:2> 'int ()' Function 0x12c141730 'del_timer_sync' 'int ()'     | `-UnaryOperator 0x12c141928 <col:17, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12c141900 <col:18, col:22> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12c1418c8 <col:18> 'struct sixpack *' lvalue Var 0x12c140bb8 'sp' 'struct sixpack *'     |-CallExpr 0x12d808938 <line:22:2, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d8088b8 <col:2> 'int ()' Function 0x12d808800 'unregister_netdev' 'int ()'     | `-RecoveryExpr 0x12d808910 <col:20, col:24> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12d8088d8 <col:20> 'struct sixpack *' lvalue Var 0x12c140bb8 'sp' 'struct sixpack *'     |-CallExpr 0x12d808ac0 <line:25:2, col:17> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d808a40 <col:2> 'int ()' Function 0x12d808988 'kfree' 'int ()'     | `-RecoveryExpr 0x12d808a98 <col:8, col:12> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12d808a60 <col:8> 'struct sixpack *' lvalue Var 0x12c140bb8 'sp' 'struct sixpack *'     |-CallExpr 0x12d808b68 <line:26:2, col:17> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d808ae8 <col:2> 'int ()' Function 0x12d808988 'kfree' 'int ()'     | `-RecoveryExpr 0x12d808b40 <col:8, col:12> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12d808b08 <col:8> 'struct sixpack *' lvalue Var 0x12c140bb8 'sp' 'struct sixpack *'     `-CallExpr 0x12d808cf0 <line:28:2, col:21> '<dependent type>' contains-errors       |-DeclRefExpr 0x12d808c70 <col:2> 'int ()' Function 0x12d808bb8 'free_netdev' 'int ()'       `-RecoveryExpr 0x12d808cc8 <col:14, col:18> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x12d808c90 <col:14> 'struct sixpack *' lvalue Var 0x12c140bb8 'sp' 'struct sixpack *' ","21043":"`-FunctionDecl 0x148928bc8  line:1:12 invalid mp4box_cleanup 'int (int)' static   |-ParmVarDecl 0x148928af0 <col:27, col:31> col:31 invalid ret_code 'int'   `-CompoundStmt 0x149009cb8 <col:41, line:105:1>     |-IfStmt 0x148928ee8 <line:2:2, line:5:2>     | |-RecoveryExpr 0x148928c90 <line:2:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x148928ed0 <col:21, line:5:2>     |   `-CallExpr 0x148928e90 <line:3:3, col:24> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x148928e10 <col:3> 'int ()' Function 0x148928d58 'gf_free' 'int ()'     |     `-RecoveryExpr 0x148928e70 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x148929018 <line:6:2, line:9:2>     | |-RecoveryExpr 0x148928f20 <line:6:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x148929000 <col:17, line:9:2>     |   `-CallExpr 0x148928fc0 <line:7:3, col:20> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x148928f40 <col:3> 'int ()' Function 0x148928d58 'gf_free' 'int ()'     |     `-RecoveryExpr 0x148928fa0 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x149008f98 <line:10:2, line:20:2>     | |-RecoveryExpr 0x148929050 <line:10:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x149008f80 <col:13, line:20:2>     |   `-ForStmt 0x149008f28 <line:12:3, line:17:3>     |     |-<<<NULL>>>     |     |-<<<NULL>>>     |     |-BinaryOperator 0x148929158 <line:12:13, col:15> 'int' contains-errors '<'     |     | |-RecoveryExpr 0x148929118 <col:13> '<dependent type>' contains-errors lvalue     |     | `-RecoveryExpr 0x148929138 <col:15> '<dependent type>' contains-errors lvalue     |     |-UnaryOperator 0x1489291c8 <col:28, col:29> '<dependent type>' contains-errors postfix '++' cannot overflow     |     | `-RecoveryExpr 0x1489291a8 <col:28> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x149008f18 <col:33, line:17:3>     |-IfStmt 0x149009178 <line:21:2, line:37:2>     | |-RecoveryExpr 0x149008fb8 <line:21:6> '_Bool' contains-errors     | `-CompoundStmt 0x149009168 <col:14, line:37:2>     |-IfStmt 0x1490091e8 <line:38:2, line:41:2>     | |-RecoveryExpr 0x149009198 <line:38:6> '_Bool' contains-errors     | `-CompoundStmt 0x1490091d8 <col:17, line:41:2>     |-IfStmt 0x149009258 <line:42:2, line:45:2>     | |-RecoveryExpr 0x149009208 <line:42:6> '_Bool' contains-errors     | `-CompoundStmt 0x149009248 <col:17, line:45:2>     |-IfStmt 0x1490092c8 <line:46:2, line:49:2>     | |-RecoveryExpr 0x149009278 <line:46:6> '_Bool' contains-errors     | `-CompoundStmt 0x1490092b8 <col:17, line:49:2>     |-IfStmt 0x1490099d8 <line:50:2, line:101:2>     | |-RecoveryExpr 0x1490092e8 <line:50:6> '_Bool' contains-errors     | `-CompoundStmt 0x1490099c8 <col:19, line:101:2>     |-CallExpr 0x149009c68 <line:103:2, col:15> 'int'     | `-ImplicitCastExpr 0x149009c50 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x149009bf8 <col:2> 'int ()' Function 0x149009b40 'gf_sys_close' 'int ()'     `-ReturnStmt 0x149009ca8 <line:104:2, col:9>       `-RecoveryExpr 0x149009c88 <col:9> '<dependent type>' contains-errors lvalue ","21155":"`-FunctionDecl 0x125141e90  col:9 implicit used strcpy 'char *(char *, const char *)' extern   |-ParmVarDecl 0x125141f90 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x125141ff8 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x125141f38 <<invalid sloc>> Implicit 885 ","20472":"`-FunctionDecl 0x138029a00  col:15 implicit used strerror 'char *(int)' extern   |-ParmVarDecl 0x138029b00 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x138029aa8 <<invalid sloc>> Implicit 901 ","20383":"`-FunctionDecl 0x14e00df10  line:1:13 invalid dbus_name_acquired 'void (int *, const char *, int)' static   |-ParmVarDecl 0x14e00dd28 <col:32, col:49> col:49 invalid connection 'int *'   |-ParmVarDecl 0x14e00dda8 <line:2:10, col:23> col:23 used name 'const char *'   |-ParmVarDecl 0x14e00de28 <line:3:10, col:19> col:19 invalid user_data 'int'   `-CompoundStmt 0x14e00e278 <line:4:1, line:6:1>     `-CallExpr 0x14e00e218 <line:5:2, col:22> 'int'       |-ImplicitCastExpr 0x14e00e200 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x14e00e130 <col:2> 'int ()' Function 0x14e00e078 'tcmu_dbg' 'int ()'       |-ImplicitCastExpr 0x14e00e248 <col:11> 'char *' <ArrayToPointerDecay>       | `-StringLiteral 0x14e00e190 <col:11> 'char[4]' lvalue \"STR\"       `-ImplicitCastExpr 0x14e00e260 <col:18> 'const char *' <LValueToRValue>         `-DeclRefExpr 0x14e00e1b0 <col:18> 'const char *' lvalue ParmVar 0x14e00dda8 'name' 'const char *' ","20260":"`-FunctionDecl 0x149827870  col:3 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x149827970 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x1498279d8 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x149827a40 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x149827918 <<invalid sloc>> Implicit 900 ","20764":"`-FunctionDecl 0x12800de80  line:1:6 invalid ff_add_pixels_clamped_c 'void (const int *, int *)'   |-ParmVarDecl 0x12800dcf0 <col:30, col:45> col:45 referenced invalid block 'const int *'   |-ParmVarDecl 0x12800dda8 <col:52, col:61> col:61 invalid av_restrict 'int *'   `-CompoundStmt 0x1280284a8 <line:3:1, line:19:1>     |-DeclStmt 0x12800dfb8 <line:4:5, col:10>     | `-VarDecl 0x12800df50 <col:5, col:9> col:9 used i 'int'     `-ForStmt 0x128028470 <line:7:5, line:18:5>       |-BinaryOperator 0x12800e010 <line:7:10, col:14> 'int' '='       | |-DeclRefExpr 0x12800dfd0 <col:10> 'int' lvalue Var 0x12800df50 'i' 'int'       | `-IntegerLiteral 0x12800dff0 <col:14> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x12800e088 <col:17, col:21> 'int' '<'       | |-ImplicitCastExpr 0x12800e070 <col:17> 'int' <LValueToRValue>       | | `-DeclRefExpr 0x12800e030 <col:17> 'int' lvalue Var 0x12800df50 'i' 'int'       | `-IntegerLiteral 0x12800e050 <col:21> 'int' 8       |-UnaryOperator 0x12800e0c8 <col:24, col:25> 'int' postfix '++'       | `-DeclRefExpr 0x12800e0a8 <col:24> 'int' lvalue Var 0x12800df50 'i' 'int'       `-CompoundStmt 0x128028458 <col:29, line:18:5>         `-CompoundAssignOperator 0x128028428 <line:17:9, col:21> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'           |-RecoveryExpr 0x1280283e0 <col:9> '<dependent type>' contains-errors lvalue           | `-DeclRefExpr 0x1280283c0 <col:9> 'const int *' lvalue ParmVar 0x12800dcf0 'block' 'const int *'           `-IntegerLiteral 0x128028408 <col:21> 'int' 8 ","20677":"`-FunctionDecl 0x135940a00  line:1:12 tstats_show 'int (struct seq_file *, void *)' static   |-ParmVarDecl 0x135928648 <col:24, col:41> col:41 used m 'struct seq_file *'   |-ParmVarDecl 0x1359286c8 <col:44, col:50> col:50 v 'void *'   `-CompoundStmt 0x135942d60 <line:2:1, line:58:1>     |-DeclStmt 0x135940c78 <line:3:2, col:26>     | |-RecordDecl 0x135940b00 <col:2, col:9> col:9 struct timespec64     | `-VarDecl 0x135940bf8 <col:2, col:20> col:20 referenced invalid period 'struct timespec64'     |-DeclStmt 0x135940e78 <line:4:2, col:21>     | |-RecordDecl 0x135940c90 <col:2, col:9> col:9 struct entry     | `-VarDecl 0x135940df8 <col:2, col:16> col:16 used entry 'struct entry *'     |-DeclStmt 0x135940f10 <line:5:2, col:18>     | `-VarDecl 0x135940ea8 <col:2, col:16> col:16 used ms 'unsigned long'     |-DeclStmt 0x135940fe0 <line:6:2, col:17>     | `-VarDecl 0x135940f40 <col:2, col:16> col:7 used events 'long' cinit     |   `-ImplicitCastExpr 0x135940fc8 <col:16> 'long' <IntegralCast>     |     `-IntegerLiteral 0x135940fa8 <col:16> 'int' 0     |-DeclStmt 0x135941090 <line:8:2, col:7>     | `-VarDecl 0x135941028 <col:2, col:6> col:6 used i 'int'     |-CallExpr 0x135941270 <line:10:2, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1359411c0 <col:2> 'int ()' Function 0x135941108 'mutex_lock' 'int ()'     | `-UnaryOperator 0x135941258 <col:13, col:14> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x135941238 <col:14> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x135941788 <line:17:2, col:35> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1359415b8 <col:2> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x135941598 <col:2> 'struct timespec64' lvalue Var 0x135940bf8 'period' 'struct timespec64'     | `-CallExpr 0x135941760 <col:11, col:35> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1359416c0 <col:11> 'int ()' Function 0x135941608 'ktime_to_timespec64' 'int ()'     |   `-RecoveryExpr 0x135941740 <col:31> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x135941870 <line:18:2, col:24> 'unsigned long' contains-errors '='     | |-DeclRefExpr 0x1359417a8 <col:2> 'unsigned long' lvalue Var 0x135940ea8 'ms' 'unsigned long'     | `-BinaryOperator 0x135941850 <col:7, col:24> '<dependent type>' contains-errors '\/'     |   |-CXXDependentScopeMemberExpr 0x1359417e8 <col:7, col:14> '<dependent type>' contains-errors lvalue .tv_nsec     |   | `-RecoveryExpr 0x1359417c8 <col:7> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x135941830 <col:24> 'int' 1000000     |-CallExpr 0x13600f038 <line:20:2, col:19> 'int'     | |-ImplicitCastExpr 0x13600f020 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x135941970 <col:2> 'int ()' Function 0x1359418b8 'seq_puts' 'int ()'     | |-ImplicitCastExpr 0x13600f068 <col:11> 'struct seq_file *' <LValueToRValue>     | | `-DeclRefExpr 0x135941990 <col:11> 'struct seq_file *' lvalue ParmVar 0x135928648 'm' 'struct seq_file *'     | `-ImplicitCastExpr 0x13600f080 <col:14> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x13600f000 <col:14> 'char[4]' lvalue \"STR\"     |-CallExpr 0x13600f2b8 <line:21:2, col:46> 'int' contains-errors     | |-ImplicitCastExpr 0x13600f2a0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13600f178 <col:2> 'int ()' Function 0x13600f0c0 'seq_printf' 'int ()'     | |-ImplicitCastExpr 0x13600f2f8 <col:13> 'struct seq_file *' <LValueToRValue>     | | `-DeclRefExpr 0x13600f198 <col:13> 'struct seq_file *' lvalue ParmVar 0x135928648 'm' 'struct seq_file *'     | |-ImplicitCastExpr 0x13600f310 <col:16> 'char *' <ArrayToPointerDecay>     | | `-StringLiteral 0x13600f1b8 <col:16> 'char[4]' lvalue \"STR\"     | |-CStyleCastExpr 0x13600f258 <col:23, col:36> 'long' contains-errors <Dependent>     | | `-CXXDependentScopeMemberExpr 0x13600f1f8 <col:29, col:36> '<dependent type>' contains-errors lvalue .tv_sec     | |   `-RecoveryExpr 0x13600f1d8 <col:29> '<dependent type>' contains-errors lvalue     | `-ImplicitCastExpr 0x13600f328 <col:44> 'unsigned long' <LValueToRValue>     |   `-DeclRefExpr 0x13600f280 <col:44> 'unsigned long' lvalue Var 0x135940ea8 'ms' 'unsigned long'     |-IfStmt 0x13600f6a0 <line:22:2, line:23:52>     | |-CallExpr 0x13600f4d0 <line:22:6, col:33> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x13600f420 <col:6> 'int ()' Function 0x13600f368 'atomic_read' 'int ()'     | | `-UnaryOperator 0x13600f4b8 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x13600f498 <col:19> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x13600f668 <line:23:3, col:52> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13600f4f8 <col:3> 'int ()' Function 0x13600f0c0 'seq_printf' 'int ()'     |   |-DeclRefExpr 0x13600f518 <col:14> 'struct seq_file *' lvalue ParmVar 0x135928648 'm' 'struct seq_file *'     |   |-StringLiteral 0x13600f538 <col:17> 'char[4]' lvalue \"STR\"     |   `-CallExpr 0x13600f640 <col:24, col:51> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x13600f558 <col:24> 'int ()' Function 0x13600f368 'atomic_read' 'int ()'     |     `-UnaryOperator 0x13600f628 <col:36, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x13600f608 <col:37> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13600f738 <line:24:2, col:21> 'int'     | |-ImplicitCastExpr 0x13600f720 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13600f6c0 <col:2> 'int ()' Function 0x13600f0c0 'seq_printf' 'int ()'     | |-ImplicitCastExpr 0x13600f768 <col:13> 'struct seq_file *' <LValueToRValue>     | | `-DeclRefExpr 0x13600f6e0 <col:13> 'struct seq_file *' lvalue ParmVar 0x135928648 'm' 'struct seq_file *'     | `-ImplicitCastExpr 0x13600f780 <col:16> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x13600f700 <col:16> 'char[4]' lvalue \"STR\"     |-ForStmt 0x135942488 <line:26:2, line:42:2>     | |-BinaryOperator 0x13600f7d8 <line:26:7, col:11> 'int' '='     | | |-DeclRefExpr 0x13600f798 <col:7> 'int' lvalue Var 0x135941028 'i' 'int'     | | `-IntegerLiteral 0x13600f7b8 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x13600f870 <col:14, col:18> 'int' contains-errors '<'     | | |-DeclRefExpr 0x13600f7f8 <col:14> 'int' lvalue Var 0x135941028 'i' 'int'     | | `-RecoveryExpr 0x13600f850 <col:18> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x13600f8b0 <col:30, col:31> 'int' postfix '++'     | | `-DeclRefExpr 0x13600f890 <col:30> 'int' lvalue Var 0x135941028 'i' 'int'     | `-CompoundStmt 0x135942440 <col:35, line:42:2>     |   |-BinaryOperator 0x13600f9f0 <line:27:3, col:21> 'struct entry *' contains-errors '='     |   | |-DeclRefExpr 0x13600f8c8 <col:3> 'struct entry *' lvalue Var 0x135940df8 'entry' 'struct entry *'     |   | `-BinaryOperator 0x13600f9d0 <col:11, col:21> '<dependent type>' contains-errors '+'     |   |   |-RecoveryExpr 0x13600f9b0 <col:11> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x13600f900 <col:21> 'int' lvalue Var 0x135941028 'i' 'int'     |   |-IfStmt 0x13600fe50 <line:28:3, line:34:3> has_else     |   | |-RecoveryExpr 0x13600fa70 <line:28:7, col:22> '_Bool' contains-errors     |   | |-CompoundStmt 0x13600fc58 <col:40, line:31:3>     |   | | `-CallExpr 0x13600fc10 <line:29:4, line:30:42> '<dependent type>' contains-errors     |   | |   |-DeclRefExpr 0x13600fa90 <line:29:4> 'int ()' Function 0x13600f0c0 'seq_printf' 'int ()'     |   | |   |-DeclRefExpr 0x13600fab0 <col:15> 'struct seq_file *' lvalue ParmVar 0x135928648 'm' 'struct seq_file *'     |   | |   |-StringLiteral 0x13600fad0 <col:18> 'char[4]' lvalue \"STR\"     |   | |   |-RecoveryExpr 0x13600fb28 <line:30:5, col:12> '<dependent type>' contains-errors lvalue     |   | |   | `-DeclRefExpr 0x13600faf0 <col:5> 'struct entry *' lvalue Var 0x135940df8 'entry' 'struct entry *'     |   | |   |-RecoveryExpr 0x13600fb88 <col:19, col:26> '<dependent type>' contains-errors lvalue     |   | |   | `-DeclRefExpr 0x13600fb50 <col:19> 'struct entry *' lvalue Var 0x135940df8 'entry' 'struct entry *'     |   | |   `-RecoveryExpr 0x13600fbe8 <col:31, col:38> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x13600fbb0 <col:31> 'struct entry *' lvalue Var 0x135940df8 'entry' 'struct entry *'     |   | `-CompoundStmt 0x13600fe38 <line:31:10, line:34:3>     |   |   `-CallExpr 0x13600fdf0 <line:32:4, line:33:42> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x13600fc70 <line:32:4> 'int ()' Function 0x13600f0c0 'seq_printf' 'int ()'     |   |     |-DeclRefExpr 0x13600fc90 <col:15> 'struct seq_file *' lvalue ParmVar 0x135928648 'm' 'struct seq_file *'     |   |     |-StringLiteral 0x13600fcb0 <col:18> 'char[4]' lvalue \"STR\"     |   |     |-RecoveryExpr 0x13600fd08 <line:33:5, col:12> '<dependent type>' contains-errors lvalue     |   |     | `-DeclRefExpr 0x13600fcd0 <col:5> 'struct entry *' lvalue Var 0x135940df8 'entry' 'struct entry *'     |   |     |-RecoveryExpr 0x13600fd68 <col:19, col:26> '<dependent type>' contains-errors lvalue     |   |     | `-DeclRefExpr 0x13600fd30 <col:19> 'struct entry *' lvalue Var 0x135940df8 'entry' 'struct entry *'     |   |     `-RecoveryExpr 0x13600fdc8 <col:31, col:38> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x13600fd90 <col:31> 'struct entry *' lvalue Var 0x135940df8 'entry' 'struct entry *'     |   |-CallExpr 0x135942058 <line:36:3, col:56> 'int' contains-errors     |   | |-ImplicitCastExpr 0x135942040 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x13600ff60 <col:3> 'int ()' Function 0x13600fea8 'print_name_offset' 'int ()'     |   | |-ImplicitCastExpr 0x135942088 <col:21> 'struct seq_file *' <LValueToRValue>     |   | | `-DeclRefExpr 0x13600ff80 <col:21> 'struct seq_file *' lvalue ParmVar 0x135928648 'm' 'struct seq_file *'     |   | `-CStyleCastExpr 0x135942018 <col:24, col:46> 'unsigned long' contains-errors <Dependent>     |   |   `-RecoveryExpr 0x13600ffd8 <col:39, col:46> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x13600ffa0 <col:39> 'struct entry *' lvalue Var 0x135940df8 'entry' 'struct entry *'     |   |-CallExpr 0x135942118 <line:37:3, col:20> 'int'     |   | |-ImplicitCastExpr 0x135942100 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x1359420a0 <col:3> 'int ()' Function 0x1359418b8 'seq_puts' 'int ()'     |   | |-ImplicitCastExpr 0x135942148 <col:12> 'struct seq_file *' <LValueToRValue>     |   | | `-DeclRefExpr 0x1359420c0 <col:12> 'struct seq_file *' lvalue ParmVar 0x135928648 'm' 'struct seq_file *'     |   | `-ImplicitCastExpr 0x135942160 <col:15> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x1359420e0 <col:15> 'char[4]' lvalue \"STR\"     |   |-CallExpr 0x135942270 <line:38:3, col:57> 'int' contains-errors     |   | |-ImplicitCastExpr 0x135942258 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x135942178 <col:3> 'int ()' Function 0x13600fea8 'print_name_offset' 'int ()'     |   | |-ImplicitCastExpr 0x1359422a0 <col:21> 'struct seq_file *' <LValueToRValue>     |   | | `-DeclRefExpr 0x135942198 <col:21> 'struct seq_file *' lvalue ParmVar 0x135928648 'm' 'struct seq_file *'     |   | `-CStyleCastExpr 0x135942230 <col:24, col:46> 'unsigned long' contains-errors <Dependent>     |   |   `-RecoveryExpr 0x1359421f0 <col:39, col:46> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x1359421b8 <col:39> 'struct entry *' lvalue Var 0x135940df8 'entry' 'struct entry *'     |   |-CallExpr 0x135942330 <line:39:3, col:20> 'int'     |   | |-ImplicitCastExpr 0x135942318 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x1359422b8 <col:3> 'int ()' Function 0x1359418b8 'seq_puts' 'int ()'     |   | |-ImplicitCastExpr 0x135942360 <col:12> 'struct seq_file *' <LValueToRValue>     |   | | `-DeclRefExpr 0x1359422d8 <col:12> 'struct seq_file *' lvalue ParmVar 0x135928648 'm' 'struct seq_file *'     |   | `-ImplicitCastExpr 0x135942378 <col:15> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x1359422f8 <col:15> 'char[4]' lvalue \"STR\"     |   `-CompoundAssignOperator 0x135942410 <line:41:3, col:20> 'long' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |     |-DeclRefExpr 0x135942390 <col:3> 'long' lvalue Var 0x135940f40 'events' 'long'     |     `-RecoveryExpr 0x1359423e8 <col:13, col:20> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x1359423b0 <col:13> 'struct entry *' lvalue Var 0x135940df8 'entry' 'struct entry *'     |-CompoundAssignOperator 0x135942588 <line:44:2, col:24> 'unsigned long' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-DeclRefExpr 0x1359424c0 <col:2> 'unsigned long' lvalue Var 0x135940ea8 'ms' 'unsigned long'     | `-BinaryOperator 0x135942568 <col:8, col:24> '<dependent type>' contains-errors '*'     |   |-CXXDependentScopeMemberExpr 0x135942500 <col:8, col:15> '<dependent type>' contains-errors lvalue .tv_sec     |   | `-RecoveryExpr 0x1359424e0 <col:8> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x135942548 <col:24> 'int' 1000     |-IfStmt 0x135942680 <line:45:2, line:46:8>     | |-UnaryOperator 0x1359425f0 <line:45:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1359425d8 <col:7> 'unsigned long' <LValueToRValue>     | |   `-DeclRefExpr 0x1359425b8 <col:7> 'unsigned long' lvalue Var 0x135940ea8 'ms' 'unsigned long'     | `-BinaryOperator 0x135942660 <line:46:3, col:8> 'unsigned long' '='     |   |-DeclRefExpr 0x135942608 <col:3> 'unsigned long' lvalue Var 0x135940ea8 'ms' 'unsigned long'     |   `-ImplicitCastExpr 0x135942648 <col:8> 'unsigned long' <IntegralCast>     |     `-IntegerLiteral 0x135942628 <col:8> 'int' 1     |-IfStmt 0x135942c00 <line:48:2, line:53:30> has_else     | |-BinaryOperator 0x135942728 <line:48:6, col:23> 'int' contains-errors '&&'     | | |-DeclRefExpr 0x1359426a0 <col:6> 'long' lvalue Var 0x135940f40 'events' 'long'     | | `-CXXDependentScopeMemberExpr 0x1359426e0 <col:16, col:23> '<dependent type>' contains-errors lvalue .tv_sec     | |   `-RecoveryExpr 0x1359426c0 <col:16> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x135942a58 <line:49:3, line:51:37> 'int'     | | |-ImplicitCastExpr 0x135942a40 <line:49:3> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x135942748 <col:3> 'int ()' Function 0x13600f0c0 'seq_printf' 'int ()'     | | |-ImplicitCastExpr 0x135942aa0 <col:14> 'struct seq_file *' <LValueToRValue>     | | | `-DeclRefExpr 0x135942768 <col:14> 'struct seq_file *' lvalue ParmVar 0x135928648 'm' 'struct seq_file *'     | | |-ImplicitCastExpr 0x135942ab8 <col:17> 'char *' <ArrayToPointerDecay>     | | | `-StringLiteral 0x135942788 <col:17> 'char[4]' lvalue \"STR\"     | | |-ImplicitCastExpr 0x135942ad0 <line:50:7> 'long' <LValueToRValue>     | | | `-DeclRefExpr 0x1359427a8 <col:7> 'long' lvalue Var 0x135940f40 'events' 'long'     | | |-BinaryOperator 0x1359428a8 <col:15, col:31> 'unsigned long' '\/'     | | | |-ImplicitCastExpr 0x135942890 <col:15, col:24> 'unsigned long' <IntegralCast>     | | | | `-BinaryOperator 0x135942838 <col:15, col:24> 'long' '*'     | | | |   |-ImplicitCastExpr 0x135942808 <col:15> 'long' <LValueToRValue>     | | | |   | `-DeclRefExpr 0x1359427c8 <col:15> 'long' lvalue Var 0x135940f40 'events' 'long'     | | | |   `-ImplicitCastExpr 0x135942820 <col:24> 'long' <IntegralCast>     | | | |     `-IntegerLiteral 0x1359427e8 <col:24> 'int' 1000     | | | `-ImplicitCastExpr 0x135942878 <col:31> 'unsigned long' <LValueToRValue>     | | |   `-DeclRefExpr 0x135942858 <col:31> 'unsigned long' lvalue Var 0x135940ea8 'ms' 'unsigned long'     | | `-BinaryOperator 0x135942a20 <line:51:7, col:33> 'unsigned long' '%'     | |   |-ParenExpr 0x1359429c8 <col:7, col:29> 'unsigned long'     | |   | `-BinaryOperator 0x1359429a8 <col:8, col:27> 'unsigned long' '\/'     | |   |   |-ImplicitCastExpr 0x135942990 <col:8, col:17> 'unsigned long' <IntegralCast>     | |   |   | `-BinaryOperator 0x135942938 <col:8, col:17> 'long' '*'     | |   |   |   |-ImplicitCastExpr 0x135942908 <col:8> 'long' <LValueToRValue>     | |   |   |   | `-DeclRefExpr 0x1359428c8 <col:8> 'long' lvalue Var 0x135940f40 'events' 'long'     | |   |   |   `-ImplicitCastExpr 0x135942920 <col:17> 'long' <IntegralCast>     | |   |   |     `-IntegerLiteral 0x1359428e8 <col:17> 'int' 1000000     | |   |   `-ImplicitCastExpr 0x135942978 <col:27> 'unsigned long' <LValueToRValue>     | |   |     `-DeclRefExpr 0x135942958 <col:27> 'unsigned long' lvalue Var 0x135940ea8 'ms' 'unsigned long'     | |   `-ImplicitCastExpr 0x135942a08 <col:33> 'unsigned long' <IntegralCast>     | |     `-IntegerLiteral 0x1359429e8 <col:33> 'int' 1000     | `-CallExpr 0x135942b80 <line:53:3, col:30> 'int'     |   |-ImplicitCastExpr 0x135942b68 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x135942ae8 <col:3> 'int ()' Function 0x13600f0c0 'seq_printf' 'int ()'     |   |-ImplicitCastExpr 0x135942bb8 <col:14> 'struct seq_file *' <LValueToRValue>     |   | `-DeclRefExpr 0x135942b08 <col:14> 'struct seq_file *' lvalue ParmVar 0x135928648 'm' 'struct seq_file *'     |   |-ImplicitCastExpr 0x135942bd0 <col:17> 'char *' <ArrayToPointerDecay>     |   | `-StringLiteral 0x135942b28 <col:17> 'char[4]' lvalue \"STR\"     |   `-ImplicitCastExpr 0x135942be8 <col:24> 'long' <LValueToRValue>     |     `-DeclRefExpr 0x135942b48 <col:24> 'long' lvalue Var 0x135940f40 'events' 'long'     `-ReturnStmt 0x135942d50 <line:57:2, col:9>       `-IntegerLiteral 0x135942d30 <col:9> 'int' 0 ","20533":"`-FunctionDecl 0x14f80de58  line:1:12 invalid Init 'int (int, int)'   |-ParmVarDecl 0x14f80dcf0 <col:17, col:26> col:26 invalid env 'int'   |-ParmVarDecl 0x14f80dd70 <col:31, col:42> col:42 invalid exports 'int'   `-CompoundStmt 0x14f80e298 <col:51, line:20:1>     `-ReturnStmt 0x14f80e288 <line:19:3, col:10>       `-RecoveryExpr 0x14f80e268 <col:10> '<dependent type>' contains-errors lvalue ","20658":"`-FunctionDecl 0x15000de88  line:1:8 invalid cJSON_DetachItemFromArray 'int *(int *, int)'   |-ParmVarDecl 0x15000dd28 <col:34, col:41> col:41 referenced invalid array 'int *'   |-ParmVarDecl 0x15000dda8 <col:47, col:51> col:51 used which 'int'   `-CompoundStmt 0x150027c90 <col:60, line:2:141>     |-IfStmt 0x15000e260 <line:1:122, col:137>     | |-UnaryOperator 0x15000e200 <col:126, col:127> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x15000e1e8 <col:127> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x15000e1c8 <col:127> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x15000e250 <col:130, col:137>     |   `-ImplicitCastExpr 0x15000e238 <col:137> 'int *' <NullToPointer>     |     `-IntegerLiteral 0x15000e218 <col:137> 'int' 0     |-IfStmt 0x150027b88 <line:2:72, col:109>     | |-BinaryOperator 0x1500279d0 <col:76, col:86> 'int' contains-errors '=='     | | |-RecoveryExpr 0x1500279b0 <col:76> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x150027948 <col:79, col:86> '<dependent type>' contains-errors lvalue ->child     | |   `-RecoveryExpr 0x150027928 <col:79> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x150027b68 <col:93, col:109> '<dependent type>' contains-errors '='     |   |-CXXDependentScopeMemberExpr 0x150027a38 <col:93, col:100> '<dependent type>' contains-errors lvalue ->child     |   | `-RecoveryExpr 0x150027a10 <col:93> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x1500279f0 <col:93> 'int *' lvalue ParmVar 0x15000dd28 'array' 'int *'     |   `-CXXDependentScopeMemberExpr 0x150027b20 <col:106, col:109> '<dependent type>' contains-errors lvalue ->next     |     `-RecoveryExpr 0x150027b00 <col:106> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x150027c80 <col:132, col:139>       `-RecoveryExpr 0x150027c60 <col:139> '<dependent type>' contains-errors lvalue ","20400":"`-FunctionDecl 0x15314bb18  col:3 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x15314bc18 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x15314bc80 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x15314bce8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x15314bbc0 <<invalid sloc>> Implicit 900 ","20963":"`-FunctionDecl 0x12380ddf8  line:1:1 invalid connection_dir_retry_bridges 'int (int *)'   |-ParmVarDecl 0x12380dd28 <col:30, col:43> col:43 invalid descs 'int *'   `-CompoundStmt 0x12380e108 <line:2:1, line:13:1>     `-DeclStmt 0x12380df38 <line:3:3, col:26>       `-VarDecl 0x12380ded0 <col:3, col:8> col:8 invalid digest 'char' ","20191":"`-FunctionDecl 0x134128258  line:1:6 invalid kernel_wait4 'long (int, int)'   |-ParmVarDecl 0x1341280f0 <col:19, col:25> col:25 invalid upid 'int'   |-ParmVarDecl 0x134128170 <col:31, col:35> col:35 __user 'int'   `-CompoundStmt 0x13500e318 <line:3:1, line:38:1>     |-DeclStmt 0x1348090a8 <line:4:2, col:21>     | |-RecordDecl 0x134128310 <col:2, col:9> col:9 struct wait_opts     | `-VarDecl 0x134128408 <col:2, col:19> col:19 referenced invalid wo 'struct wait_opts'     |-DeclStmt 0x1348092e0 <line:5:2, col:24>     | |-RecordDecl 0x1348090c0 <col:2, col:9> col:9 struct pid     | `-VarDecl 0x134809228 <col:2, col:20> col:14 used pid 'struct pid *' cinit     |   `-RecoveryExpr 0x1348092a8 <col:20> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x134809498 <line:6:2, col:20>     | |-EnumDecl 0x1348092f8 <col:2, col:7> col:7 pid_type     | `-VarDecl 0x134809418 <col:2, col:16> col:16 referenced invalid type 'enum pid_type'     |-DeclStmt 0x134809530 <line:7:2, col:10>     | `-VarDecl 0x1348094c8 <col:2, col:7> col:7 used ret 'long'     |-IfStmt 0x134809758 <line:9:2, line:11:11>     | |-RecoveryExpr 0x134809690 <line:9:6, line:10:31> '_Bool' contains-errors     | `-ReturnStmt 0x134809748 <line:11:3, col:11>     |   `-UnaryOperator 0x134809730 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x134809718 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x1348096f8 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13500d900 <line:13:2, line:24:2> has_else     | |-BinaryOperator 0x1348097d0 <line:13:6, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x134809778 <col:6> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x1348097b8 <col:14, col:15> 'int' prefix '-'     | |   `-IntegerLiteral 0x134809798 <col:15> 'int' 1     | |-BinaryOperator 0x134809890 <line:14:3, col:10> '<dependent type>' contains-errors '='     | | |-RecoveryExpr 0x134809810 <col:3> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x1348097f0 <col:3> 'enum pid_type' lvalue Var 0x134809418 'type' 'enum pid_type'     | | `-RecoveryExpr 0x134809870 <col:10> '<dependent type>' contains-errors lvalue     | `-IfStmt 0x13500d8d0 <line:15:7, line:24:2> has_else     |   |-BinaryOperator 0x1348098f0 <line:15:11, col:18> 'int' contains-errors '<'     |   | |-RecoveryExpr 0x1348098b0 <col:11> '<dependent type>' contains-errors lvalue     |   | `-IntegerLiteral 0x1348098d0 <col:18> 'int' 0     |   |-CompoundStmt 0x134809c08 <col:21, line:18:2>     |   | |-BinaryOperator 0x1348099b0 <line:16:3, col:10> '<dependent type>' contains-errors '='     |   | | |-RecoveryExpr 0x134809930 <col:3> '<dependent type>' contains-errors lvalue     |   | | | `-DeclRefExpr 0x134809910 <col:3> 'enum pid_type' lvalue Var 0x134809418 'type' 'enum pid_type'     |   | | `-RecoveryExpr 0x134809990 <col:10> '<dependent type>' contains-errors lvalue     |   | `-BinaryOperator 0x134809be8 <line:17:3, col:27> 'struct pid *' contains-errors '='     |   |   |-DeclRefExpr 0x1348099d0 <col:3> 'struct pid *' contains-errors lvalue Var 0x134809228 'pid' 'struct pid *'     |   |   `-CallExpr 0x134809bc0 <col:9, col:27> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x134809b50 <col:9> 'int ()' Function 0x134809a98 'find_get_pid' 'int ()'     |   |     `-UnaryOperator 0x134809ba8 <col:22, col:23> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |       `-ImplicitCastExpr 0x134809b90 <col:23> '<dependent type>' contains-errors <LValueToRValue>     |   |         `-RecoveryExpr 0x134809b70 <col:23> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x13500d8a0 <line:18:9, line:24:2> has_else     |     |-BinaryOperator 0x134809c68 <line:18:13, col:21> 'int' contains-errors '=='     |     | |-RecoveryExpr 0x134809c28 <col:13> '<dependent type>' contains-errors lvalue     |     | `-IntegerLiteral 0x134809c48 <col:21> 'int' 0     |     |-CompoundStmt 0x134809f78 <col:24, line:21:2>     |     | |-BinaryOperator 0x134809d28 <line:19:3, col:10> '<dependent type>' contains-errors '='     |     | | |-RecoveryExpr 0x134809ca8 <col:3> '<dependent type>' contains-errors lvalue     |     | | | `-DeclRefExpr 0x134809c88 <col:3> 'enum pid_type' lvalue Var 0x134809418 'type' 'enum pid_type'     |     | | `-RecoveryExpr 0x134809d08 <col:10> '<dependent type>' contains-errors lvalue     |     | `-BinaryOperator 0x134809f58 <line:20:3, col:43> 'struct pid *' contains-errors '='     |     |   |-DeclRefExpr 0x134809d48 <col:3> 'struct pid *' contains-errors lvalue Var 0x134809228 'pid' 'struct pid *'     |     |   `-CallExpr 0x134809f28 <col:9, col:43> '<dependent type>' contains-errors     |     |     |-DeclRefExpr 0x134809e48 <col:9> 'int ()' Function 0x134809d90 'get_task_pid' 'int ()'     |     |     |-RecoveryExpr 0x134809ee8 <col:22> '<dependent type>' contains-errors lvalue     |     |     `-RecoveryExpr 0x134809f08 <col:31> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x13500d888 <line:21:10, line:24:2>     |       `-BinaryOperator 0x13500d868 <line:23:3, col:26> 'struct pid *' contains-errors '='     |         |-DeclRefExpr 0x134809fe0 <col:3> 'struct pid *' contains-errors lvalue Var 0x134809228 'pid' 'struct pid *'     |         `-CallExpr 0x13500d840 <col:9, col:26> '<dependent type>' contains-errors     |           |-DeclRefExpr 0x13500d800 <col:9> 'int ()' Function 0x134809a98 'find_get_pid' 'int ()'     |           `-RecoveryExpr 0x13500d820 <col:22> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13500d9e0 <line:26:2, col:15> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13500d978 <col:2, col:5> '<dependent type>' contains-errors lvalue .wo_type     | | `-RecoveryExpr 0x13500d950 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13500d930 <col:2> 'struct wait_opts' lvalue Var 0x134128408 'wo' 'struct wait_opts'     | `-RecoveryExpr 0x13500d9c0 <col:15> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13500dab0 <line:27:2, col:14> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13500da48 <col:2, col:5> '<dependent type>' contains-errors lvalue .wo_pid     | | `-RecoveryExpr 0x13500da20 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13500da00 <col:2> 'struct wait_opts' lvalue Var 0x134128408 'wo' 'struct wait_opts'     | `-DeclRefExpr 0x13500da90 <col:14> 'struct pid *' contains-errors lvalue Var 0x134809228 'pid' 'struct pid *'     |-BinaryOperator 0x13500dca0 <line:30:2, col:15> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13500dc38 <col:2, col:5> '<dependent type>' contains-errors lvalue .wo_stat     | | `-RecoveryExpr 0x13500dc10 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13500dbf0 <col:2> 'struct wait_opts' lvalue Var 0x134128408 'wo' 'struct wait_opts'     | `-IntegerLiteral 0x13500dc80 <col:15> 'int' 0     |-BinaryOperator 0x13500ded0 <line:32:2, col:19> 'long' contains-errors '='     | |-DeclRefExpr 0x13500dd50 <col:2> 'long' lvalue Var 0x1348094c8 'ret' 'long'     | `-CallExpr 0x13500dea8 <col:8, col:19> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13500de50 <col:8> 'int ()' Function 0x13500dd98 'do_wait' 'int ()'     |   `-UnaryOperator 0x13500de90 <col:16, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x13500de70 <col:17> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13500e058 <line:33:2, col:13> 'int' contains-errors     | |-ImplicitCastExpr 0x13500e040 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13500dfd0 <col:2> 'int ()' Function 0x13500df18 'put_pid' 'int ()'     | `-ImplicitCastExpr 0x13500e080 <col:10> 'struct pid *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x13500dff0 <col:10> 'struct pid *' contains-errors lvalue Var 0x134809228 'pid' 'struct pid *'     `-ReturnStmt 0x13500e308 <line:37:2, col:9>       `-ImplicitCastExpr 0x13500e2f0 <col:9> 'long' <LValueToRValue>         `-DeclRefExpr 0x13500e2d0 <col:9> 'long' lvalue Var 0x1348094c8 'ret' 'long' ","20304":"`-FunctionDecl 0x13c80e108  line:1:1 invalid flatpak_dir_system_helper_call_cancel_pull 'int (int *, int, const char *, const char *, int *, int **)'   |-ParmVarDecl 0x13c80dd28 <col:45, col:60> col:60 invalid self 'int *'   |-ParmVarDecl 0x13c80dda8 <line:2:45, col:60> col:60 referenced invalid arg_flags 'int'   |-ParmVarDecl 0x13c80de28 <line:3:45, col:60> col:60 used arg_installation 'const char *'   |-ParmVarDecl 0x13c80dea8 <line:4:45, col:60> col:60 used arg_src_dir 'const char *'   |-ParmVarDecl 0x13c80df28 <line:5:45, col:60> col:60 invalid cancellable 'int *'   |-ParmVarDecl 0x13c80dfe0 <line:6:45, col:60> col:60 invalid error 'int **'   `-CompoundStmt 0x13c1234b8 <line:7:1, line:23:1>     |-IfStmt 0x13c122c98 <line:8:3, line:9:18>     | |-CallExpr 0x13c80e380 <line:8:7, col:43> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x13c80e340 <col:7> 'int ()' Function 0x13c80e288 'flatpak_dir_get_no_interaction' 'int ()'     | | `-RecoveryExpr 0x13c80e360 <col:39> '<dependent type>' contains-errors lvalue     | `-CompoundAssignOperator 0x13c122c68 <line:9:5, col:18> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |-RecoveryExpr 0x13c80e3c8 <col:5> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x13c80e3a8 <col:5> 'int' lvalue ParmVar 0x13c80dda8 'arg_flags' 'int'     |   `-RecoveryExpr 0x13c122c48 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13c122e68 <line:11:3, col:17> 'int'     | |-ImplicitCastExpr 0x13c122e50 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13c122d98 <col:3> 'int ()' Function 0x13c122ce0 'g_debug' 'int ()'     | `-ImplicitCastExpr 0x13c122e90 <col:12> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x13c122e00 <col:12> 'char[4]' lvalue \"STR\"     |-CallExpr 0x13c123008 <line:13:3, col:21> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13c122f88 <col:3> 'int ()' Function 0x13c122ed0 'g_autoptr' 'int ()'     | `-RecoveryExpr 0x13c122fe8 <col:13> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x13c1234a8 <line:22:4, col:18>       `-BinaryOperator 0x13c123488 <col:11, col:18> 'int' contains-errors '!='         |-RecoveryExpr 0x13c123448 <col:11> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x13c123468 <col:18> '<dependent type>' contains-errors lvalue ","20971":"`-FunctionDecl 0x11f141340  line:1:13 stub_recv_cmd_submit 'void (struct stub_device *, struct usbip_header *)' static   |-ParmVarDecl 0x11f128e48 <col:34, col:54> col:54 used sdev 'struct stub_device *'   |-ParmVarDecl 0x11f141228 <line:2:6, col:27> col:27 used pdu 'struct usbip_header *'   `-CompoundStmt 0x11f147160 <line:3:1, line:84:1>     |-DeclStmt 0x11f1414c0 <line:4:2, col:9>     | `-VarDecl 0x11f141458 <col:2, col:6> col:6 used ret 'int'     |-DeclStmt 0x11f1416c8 <line:5:2, col:24>     | |-RecordDecl 0x11f1414d8 <col:2, col:9> col:9 struct stub_priv     | `-VarDecl 0x11f141648 <col:2, col:20> col:20 used priv 'struct stub_priv *'     |-DeclStmt 0x11f141940 <line:6:2, col:37>     | |-RecordDecl 0x11f1416e0 <col:2, col:9> col:9 struct usbip_device     | `-VarDecl 0x11f141848 <col:2, col:35> col:23 used ud 'struct usbip_device *' cinit     |   `-UnaryOperator 0x11f141910 <col:28, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x11f1418e8 <col:29, col:35> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x11f1418b0 <col:29> 'struct stub_device *' lvalue ParmVar 0x11f128e48 'sdev' 'struct stub_device *'     |-DeclStmt 0x11f141ba8 <line:7:2, col:38>     | |-RecordDecl 0x11f141958 <col:2, col:9> col:9 struct usb_device     | `-VarDecl 0x11f141ac8 <col:2, col:34> col:21 used udev 'struct usb_device *' cinit     |   `-RecoveryExpr 0x11f141b68 <col:28, col:34> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x11f141b30 <col:28> 'struct stub_device *' lvalue ParmVar 0x11f128e48 'sdev' 'struct stub_device *'     |-DeclStmt 0x11f141f38 <line:8:2, col:62>     | `-VarDecl 0x11f141bd8 <col:2, col:61> col:6 used pipe 'int' cinit     |   `-CallExpr 0x11f141f00 <col:13, col:61> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x11f141d70 <col:13> 'int ()' Function 0x11f141cb8 'get_pipe' 'int ()'     |     |-DeclRefExpr 0x11f141d90 <col:22> 'struct stub_device *' lvalue ParmVar 0x11f128e48 'sdev' 'struct stub_device *'     |     |-CXXDependentScopeMemberExpr 0x11f141e10 <col:28, col:38> '<dependent type>' contains-errors lvalue .ep     |     | `-RecoveryExpr 0x11f141de8 <col:28, col:33> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x11f141db0 <col:28> 'struct usbip_header *' lvalue ParmVar 0x11f141228 'pdu' 'struct usbip_header *'     |     `-CXXDependentScopeMemberExpr 0x11f141eb8 <col:42, col:52> '<dependent type>' contains-errors lvalue .direction     |       `-RecoveryExpr 0x11f141e90 <col:42, col:47> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x11f141e58 <col:42> 'struct usbip_header *' lvalue ParmVar 0x11f141228 'pdu' 'struct usbip_header *'     |-IfStmt 0x11f141ff0 <line:10:2, line:11:3>     | |-BinaryOperator 0x11f141fc0 <line:10:6, col:15> 'int' contains-errors '=='     | | |-ImplicitCastExpr 0x11f141fa8 <col:6> 'int' contains-errors <LValueToRValue>     | | | `-DeclRefExpr 0x11f141f50 <col:6> 'int' contains-errors lvalue Var 0x11f141bd8 'pipe' 'int'     | | `-UnaryOperator 0x11f141f90 <col:14, col:15> 'int' prefix '-'     | |   `-IntegerLiteral 0x11f141f70 <col:15> 'int' 1     | `-ReturnStmt 0x11f141fe0 <line:11:3>     |-BinaryOperator 0x11f143630 <line:13:2, col:34> 'struct stub_priv *' '='     | |-DeclRefExpr 0x11f142010 <col:2> 'struct stub_priv *' lvalue Var 0x11f141648 'priv' 'struct stub_priv *'     | `-ImplicitCastExpr 0x11f143618 <col:9, col:34> 'struct stub_priv *' <IntegralToPointer>     |   `-CallExpr 0x11f1421b8 <col:9, col:34> 'int'     |     |-ImplicitCastExpr 0x11f1421a0 <col:9> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x11f142110 <col:9> 'int ()' Function 0x11f142058 'stub_priv_alloc' 'int ()'     |     |-ImplicitCastExpr 0x11f1421e8 <col:25> 'struct stub_device *' <LValueToRValue>     |     | `-DeclRefExpr 0x11f142130 <col:25> 'struct stub_device *' lvalue ParmVar 0x11f128e48 'sdev' 'struct stub_device *'     |     `-ImplicitCastExpr 0x11f143600 <col:31> 'struct usbip_header *' <LValueToRValue>     |       `-DeclRefExpr 0x11f142150 <col:31> 'struct usbip_header *' lvalue ParmVar 0x11f141228 'pdu' 'struct usbip_header *'     |-IfStmt 0x11f1436b0 <line:14:2, line:15:3>     | |-UnaryOperator 0x11f143688 <line:14:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x11f143670 <col:7> 'struct stub_priv *' <LValueToRValue>     | |   `-DeclRefExpr 0x11f143650 <col:7> 'struct stub_priv *' lvalue Var 0x11f141648 'priv' 'struct stub_priv *'     | `-ReturnStmt 0x11f1436a0 <line:15:3>     |-IfStmt 0x11f143ce8 <line:18:2, line:22:42> has_else     | |-CallExpr 0x11f143808 <line:18:6, col:23> 'int' contains-errors     | | |-ImplicitCastExpr 0x11f1437f0 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x11f1437b0 <col:6> 'int ()' Function 0x11f1436f8 'usb_pipeisoc' 'int ()'     | | `-ImplicitCastExpr 0x11f143830 <col:19> 'int' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x11f1437d0 <col:19> 'int' contains-errors lvalue Var 0x11f141bd8 'pipe' 'int'     | |-BinaryOperator 0x11f143b50 <line:19:3, line:20:18> '<dependent type>' contains-errors '='     | | |-RecoveryExpr 0x11f143880 <line:19:3, col:9> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x11f143848 <col:3> 'struct stub_priv *' lvalue Var 0x11f141648 'priv' 'struct stub_priv *'     | | `-CallExpr 0x11f143b20 <col:15, line:20:18> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x11f143988 <line:19:15> 'int ()' Function 0x11f1438d0 'usb_alloc_urb' 'int ()'     | |   |-CXXDependentScopeMemberExpr 0x11f143a50 <col:29, col:47> '<dependent type>' contains-errors lvalue .number_of_packets     | |   | `-CXXDependentScopeMemberExpr 0x11f143a08 <col:29, col:36> '<dependent type>' contains-errors lvalue .cmd_submit     | |   |   `-RecoveryExpr 0x11f1439e0 <col:29, col:34> '<dependent type>' contains-errors lvalue     | |   |     `-DeclRefExpr 0x11f1439a8 <col:29> 'struct usbip_header *' lvalue ParmVar 0x11f141228 'pdu' 'struct usbip_header *'     | |   `-RecoveryExpr 0x11f143b00 <line:20:8> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x11f143cc8 <line:22:3, col:42> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x11f143ba8 <col:3, col:9> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x11f143b70 <col:3> 'struct stub_priv *' lvalue Var 0x11f141648 'priv' 'struct stub_priv *'     |   `-CallExpr 0x11f143c98 <col:15, col:42> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x11f143bd0 <col:15> 'int ()' Function 0x11f1438d0 'usb_alloc_urb' 'int ()'     |     |-IntegerLiteral 0x11f143bf0 <col:29> 'int' 0     |     `-RecoveryExpr 0x11f143c78 <col:32> '<dependent type>' contains-errors lvalue     |-IfStmt 0x11f143f90 <line:24:2, line:27:2>     | |-UnaryOperator 0x11f143d90 <line:24:6, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x11f143d78 <col:7, col:13> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x11f143d50 <col:7, col:13> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x11f143d18 <col:7> 'struct stub_priv *' lvalue Var 0x11f141648 'priv' 'struct stub_priv *'     | `-CompoundStmt 0x11f143f70 <col:18, line:27:2>     |   |-CallExpr 0x11f143f30 <line:25:3, col:46> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x11f143e88 <col:3> 'int ()' Function 0x11f143dd0 'usbip_event_add' 'int ()'     |   | |-DeclRefExpr 0x11f143ea8 <col:19> 'struct usbip_device *' contains-errors lvalue Var 0x11f141848 'ud' 'struct usbip_device *'     |   | `-RecoveryExpr 0x11f143f10 <col:23> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x11f143f60 <line:26:3>     |-IfStmt 0x11f1444f0 <line:30:2, line:38:2>     | |-BinaryOperator 0x11f1440c0 <line:30:6, col:49> 'int' contains-errors '>'     | | |-CXXDependentScopeMemberExpr 0x11f144058 <col:6, col:24> '<dependent type>' contains-errors lvalue .transfer_buffer_length     | | | `-CXXDependentScopeMemberExpr 0x11f144010 <col:6, col:13> '<dependent type>' contains-errors lvalue .cmd_submit     | | |   `-RecoveryExpr 0x11f143fe8 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x11f143fb0 <col:6> 'struct usbip_header *' lvalue ParmVar 0x11f141228 'pdu' 'struct usbip_header *'     | | `-IntegerLiteral 0x11f1440a0 <col:49> 'int' 0     | `-CompoundStmt 0x11f1444d8 <col:52, line:38:2>     |   `-IfStmt 0x11f1444b8 <line:34:3, line:37:3>     |     |-UnaryOperator 0x11f144438 <line:34:7, col:19> '<dependent type>' contains-errors prefix '!' cannot overflow     |     | `-ImplicitCastExpr 0x11f144420 <col:8, col:19> '<dependent type>' contains-errors <LValueToRValue>     |     |   `-CXXDependentScopeMemberExpr 0x11f1443d8 <col:8, col:19> '<dependent type>' contains-errors lvalue ->transfer_buffer     |     |     `-RecoveryExpr 0x11f1443b0 <col:8, col:14> '<dependent type>' contains-errors lvalue     |     |       `-DeclRefExpr 0x11f144378 <col:8> 'struct stub_priv *' lvalue Var 0x11f141648 'priv' 'struct stub_priv *'     |     `-CompoundStmt 0x11f1444a0 <col:36, line:37:3>     |       `-ReturnStmt 0x11f144490 <line:36:4>     |-IfStmt 0x11f144b50 <line:43:2, line:47:2>     | |-UnaryOperator 0x11f1448c0 <line:43:6, col:18> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x11f1448a8 <col:7, col:18> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x11f144860 <col:7, col:18> '<dependent type>' contains-errors lvalue ->setup_packet     | |     `-RecoveryExpr 0x11f144838 <col:7, col:13> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x11f144800 <col:7> 'struct stub_priv *' lvalue Var 0x11f141648 'priv' 'struct stub_priv *'     | `-CompoundStmt 0x11f144b30 <col:32, line:47:2>     |   |-CallExpr 0x11f144ab0 <line:44:3, col:28> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x11f1449b8 <col:3> 'int ()' Function 0x11f144900 'dev_err' 'int ()'     |   | |-UnaryOperator 0x11f144a38 <col:11, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-RecoveryExpr 0x11f144a10 <col:12, col:18> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x11f1449d8 <col:12> 'struct usb_device *' contains-errors lvalue Var 0x11f141ac8 'udev' 'struct usb_device *'     |   | `-StringLiteral 0x11f144a90 <col:23> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x11f144b20 <line:46:3>     |-BinaryOperator 0x11f144c90 <line:50:2, col:47> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x11f144bd0 <col:2, col:13> '<dependent type>' contains-errors lvalue ->context     | | `-RecoveryExpr 0x11f144ba8 <col:2, col:8> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x11f144b70 <col:2> 'struct stub_priv *' lvalue Var 0x11f141648 'priv' 'struct stub_priv *'     | `-CStyleCastExpr 0x11f144c68 <col:38, col:47> 'void *' <BitCast>     |   `-ImplicitCastExpr 0x11f144c50 <col:47> 'struct stub_priv *' <LValueToRValue> part_of_explicit_cast     |     `-DeclRefExpr 0x11f144c18 <col:47> 'struct stub_priv *' lvalue Var 0x11f141648 'priv' 'struct stub_priv *'     |-BinaryOperator 0x11f144d78 <line:51:2, col:38> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x11f144d10 <col:2, col:13> '<dependent type>' contains-errors lvalue ->dev     | | `-RecoveryExpr 0x11f144ce8 <col:2, col:8> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x11f144cb0 <col:2> 'struct stub_priv *' lvalue Var 0x11f141648 'priv' 'struct stub_priv *'     | `-DeclRefExpr 0x11f144d58 <col:38> 'struct usb_device *' contains-errors lvalue Var 0x11f141ac8 'udev' 'struct usb_device *'     |-BinaryOperator 0x11f144e60 <line:52:2, col:38> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x11f144df8 <col:2, col:13> '<dependent type>' contains-errors lvalue ->pipe     | | `-RecoveryExpr 0x11f144dd0 <col:2, col:8> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x11f144d98 <col:2> 'struct stub_priv *' lvalue Var 0x11f141648 'priv' 'struct stub_priv *'     | `-DeclRefExpr 0x11f144e40 <col:38> 'int' contains-errors lvalue Var 0x11f141bd8 'pipe' 'int'     |-IfStmt 0x11f1452c8 <line:58:2, line:59:3>     | |-BinaryOperator 0x11f145298 <line:58:6, col:40> 'int' contains-errors '<'     | | |-CallExpr 0x11f145248 <col:6, col:36> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x11f1451a8 <col:6> 'int ()' Function 0x11f1450f0 'usbip_recv_xbuff' 'int ()'     | | | |-DeclRefExpr 0x11f1451c8 <col:23> 'struct usbip_device *' contains-errors lvalue Var 0x11f141848 'ud' 'struct usbip_device *'     | | | `-RecoveryExpr 0x11f145220 <col:27, col:33> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x11f1451e8 <col:27> 'struct stub_priv *' lvalue Var 0x11f141648 'priv' 'struct stub_priv *'     | | `-IntegerLiteral 0x11f145278 <col:40> 'int' 0     | `-ReturnStmt 0x11f1452b8 <line:59:3>     |-IfStmt 0x11f1454e8 <line:61:2, line:62:3>     | |-BinaryOperator 0x11f1454b8 <line:61:6, col:38> 'int' contains-errors '<'     | | |-CallExpr 0x11f145468 <col:6, col:34> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x11f1453c8 <col:6> 'int ()' Function 0x11f145310 'usbip_recv_iso' 'int ()'     | | | |-DeclRefExpr 0x11f1453e8 <col:21> 'struct usbip_device *' contains-errors lvalue Var 0x11f141848 'ud' 'struct usbip_device *'     | | | `-RecoveryExpr 0x11f145440 <col:25, col:31> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x11f145408 <col:25> 'struct stub_priv *' lvalue Var 0x11f141648 'priv' 'struct stub_priv *'     | | `-IntegerLiteral 0x11f145498 <col:38> 'int' 0     | `-ReturnStmt 0x11f1454d8 <line:62:3>     |-CallExpr 0x11f146680 <line:65:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11f146600 <col:2> 'int ()' Function 0x11f145530 'tweak_special_requests' 'int ()'     | `-RecoveryExpr 0x11f146658 <col:25, col:31> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x11f146620 <col:25> 'struct stub_priv *' lvalue Var 0x11f141648 'priv' 'struct stub_priv *'     |-CallExpr 0x11f146808 <line:67:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11f146788 <col:2> 'int ()' Function 0x11f1466d0 'masking_bogus_flags' 'int ()'     | `-RecoveryExpr 0x11f1467e0 <col:22, col:28> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x11f1467a8 <col:22> 'struct stub_priv *' lvalue Var 0x11f141648 'priv' 'struct stub_priv *'     |-IfStmt 0x11f147098 <line:71:2, line:81:2> has_else     | |-BinaryOperator 0x11f146a08 <line:71:6, col:13> 'int' '=='     | | |-ImplicitCastExpr 0x11f1469f0 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x11f1469b0 <col:6> 'int' lvalue Var 0x11f141458 'ret' 'int'     | | `-IntegerLiteral 0x11f1469d0 <col:13> 'int' 0     | |-CallExpr 0x11f146bf0 <line:72:3, line:73:23> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x11f146b08 <line:72:3> 'int ()' Function 0x11f146a50 'usbip_dbg_stub_rx' 'int ()'     | | |-StringLiteral 0x11f146b28 <col:21> 'char[4]' lvalue \"STR\"     | | `-CXXDependentScopeMemberExpr 0x11f146ba8 <line:73:7, col:17> '<dependent type>' contains-errors lvalue .seqnum     | |   `-RecoveryExpr 0x11f146b80 <col:7, col:12> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x11f146b48 <col:7> 'struct usbip_header *' lvalue ParmVar 0x11f141228 'pdu' 'struct usbip_header *'     | `-CompoundStmt 0x11f147070 <line:74:7, line:81:2>     |   |-CallExpr 0x11f146cf8 <line:75:3, col:33> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x11f146c20 <col:3> 'int ()' Function 0x11f144900 'dev_err' 'int ()'     |   | |-UnaryOperator 0x11f146ca0 <col:11, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-RecoveryExpr 0x11f146c78 <col:12, col:18> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x11f146c40 <col:12> 'struct usb_device *' contains-errors lvalue Var 0x11f141ac8 'udev' 'struct usb_device *'     |   | |-StringLiteral 0x11f146cb8 <col:23> 'char[4]' lvalue \"STR\"     |   | `-DeclRefExpr 0x11f146cd8 <col:30> 'int' lvalue Var 0x11f141458 'ret' 'int'     |   |-CallExpr 0x11f146e68 <line:76:3, col:24> 'int'     |   | |-ImplicitCastExpr 0x11f146e50 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x11f146e10 <col:3> 'int ()' Function 0x11f146d58 'usbip_dump_header' 'int ()'     |   | `-ImplicitCastExpr 0x11f146e90 <col:21> 'struct usbip_header *' <LValueToRValue>     |   |   `-DeclRefExpr 0x11f146e30 <col:21> 'struct usbip_header *' lvalue ParmVar 0x11f141228 'pdu' 'struct usbip_header *'     |   `-CallExpr 0x11f147008 <line:77:3, col:27> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x11f146f88 <col:3> 'int ()' Function 0x11f146ed0 'usbip_dump_urb' 'int ()'     |     `-RecoveryExpr 0x11f146fe0 <col:18, col:24> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x11f146fa8 <col:18> 'struct stub_priv *' lvalue Var 0x11f141648 'priv' 'struct stub_priv *'     `-CallExpr 0x11f147120 <line:83:2, col:25> 'int'       |-ImplicitCastExpr 0x11f147108 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x11f1470c8 <col:2> 'int ()' Function 0x11f146a50 'usbip_dbg_stub_rx' 'int ()'       `-ImplicitCastExpr 0x11f147148 <col:20> 'char *' <ArrayToPointerDecay>         `-StringLiteral 0x11f1470e8 <col:20> 'char[4]' lvalue \"STR\" ","20750":"`-FunctionDecl 0x1489284c0  line:1:13 invalid huffman_decode_row 'void (int *, int *, int, int, int, int *)' static   |-ParmVarDecl 0x148928128 <col:32, col:44> col:44 invalid I 'int *'   |-ParmVarDecl 0x1489281a8 <col:47, col:70> col:70 referenced invalid DE 'int *'   |-ParmVarDecl 0x148928228 <line:2:32, col:36> col:36 bits 'int'   |-ParmVarDecl 0x1489282a8 <col:42, col:46> col:46 used row 'int'   |-ParmVarDecl 0x148928328 <col:51, col:55> col:55 offset 'int'   |-ParmVarDecl 0x1489283a8 <col:63, col:68> col:68 used minimum 'int *'   `-CompoundStmt 0x148942318 <line:3:1, line:50:1>     |-DeclStmt 0x148941868 <line:9:3, col:10>     | `-VarDecl 0x148941800 <col:3, col:7> col:7 used col 'int'     `-ForStmt 0x1489422e0 <line:14:3, line:49:3>       |-BinaryOperator 0x148941a88 <line:14:8, col:14> 'int' '='       | |-DeclRefExpr 0x148941a48 <col:8> 'int' lvalue Var 0x148941800 'col' 'int'       | `-IntegerLiteral 0x148941a68 <col:14> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x148941bb0 <col:17, col:27> 'int' contains-errors '<'       | |-DeclRefExpr 0x148941aa8 <col:17> 'int' lvalue Var 0x148941800 'col' 'int'       | `-CXXDependentScopeMemberExpr 0x148941b68 <col:23, col:27> '<dependent type>' contains-errors lvalue ->columns       |   `-RecoveryExpr 0x148941b48 <col:23> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x148941bf0 <col:36, col:39> 'int' postfix '++'       | `-DeclRefExpr 0x148941bd0 <col:36> 'int' lvalue Var 0x148941800 'col' 'int'       `-CompoundStmt 0x1489422c0 <line:15:3, line:49:3>         |-DeclStmt 0x148941c88 <line:16:5, col:14>         | `-VarDecl 0x148941c20 <col:5, col:9> col:9 used color 'int'         `-ForStmt 0x148942288 <line:18:5, line:48:5>           |-BinaryOperator 0x148941ce0 <line:18:10, col:18> 'int' '='           | |-DeclRefExpr 0x148941ca0 <col:10> 'int' lvalue Var 0x148941c20 'color' 'int'           | `-IntegerLiteral 0x148941cc0 <col:18> 'int' 0           |-<<<NULL>>>           |-BinaryOperator 0x148941d58 <col:21, col:29> 'int' '<'           | |-ImplicitCastExpr 0x148941d40 <col:21> 'int' <LValueToRValue>           | | `-DeclRefExpr 0x148941d00 <col:21> 'int' lvalue Var 0x148941c20 'color' 'int'           | `-IntegerLiteral 0x148941d20 <col:29> 'int' 3           |-UnaryOperator 0x148941d98 <col:32, col:37> 'int' postfix '++'           | `-DeclRefExpr 0x148941d78 <col:32> 'int' lvalue Var 0x148941c20 'color' 'int'           `-CompoundStmt 0x148942268 <line:19:5, line:48:5>             |-IfStmt 0x148942090 <line:23:7, line:32:7> has_else             | |-RecoveryExpr 0x148941f10 <line:23:11, col:22> '_Bool' contains-errors             | |-CompoundStmt 0x148942050 <line:24:7, line:28:7>             | `-CompoundStmt 0x148942080 <line:30:7, line:32:7>             `-SwitchStmt 0x1489420e0 <line:34:7, line:47:7>               |-RecoveryExpr 0x1489420c0 <line:34:15, col:19> 'int' contains-errors               `-CompoundStmt 0x148942240 <line:35:7, line:47:7>                 |-BreakStmt 0x148942188 <line:40:9>                 |-BreakStmt 0x148942210 <line:43:9>                 `-DefaultStmt 0x148942220 <line:44:7, col:14>                   `-NullStmt 0x148942218 <col:14> ","20662":"`-FunctionDecl 0x144141838  line:1:12 invalid tg3_set_features 'int (struct net_device *, int)' static   |-ParmVarDecl 0x144128648 <col:29, col:48> col:48 used dev 'struct net_device *'   |-ParmVarDecl 0x1441286e0 <col:53, col:71> col:71 invalid features 'int'   `-CompoundStmt 0x144141d48 <line:2:1, line:9:1>     |-IfStmt 0x144141cf8 <line:5:2, line:6:33>     | |-RecoveryExpr 0x144141b68 <line:5:6, col:55> '_Bool' contains-errors     | `-CallExpr 0x144141cc8 <line:6:3, col:33> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x144141c68 <col:3> 'int ()' Function 0x144141bb0 'tg3_set_loopback' 'int ()'     |   |-DeclRefExpr 0x144141c88 <col:20> 'struct net_device *' lvalue ParmVar 0x144128648 'dev' 'struct net_device *'     |   `-RecoveryExpr 0x144141ca8 <col:25> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x144141d38 <line:8:2, col:9>       `-IntegerLiteral 0x144141d18 <col:9> 'int' 0 ","20487":"`-FunctionDecl 0x1358fc158  line:1:5 mnt_context_finalize_umount 'int (struct libmnt_context *)'   |-ParmVarDecl 0x1358fc048 <col:33, col:56> col:56 used cxt 'struct libmnt_context *'   `-CompoundStmt 0x135914d18 <line:2:1, line:14:1>     |-DeclStmt 0x1359144d0 <line:3:2, col:8>     | `-VarDecl 0x135914468 <col:2, col:6> col:6 used rc 'int'     |-CallExpr 0x135914698 <line:5:2, col:12> 'int'     | |-ImplicitCastExpr 0x135914680 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x135914610 <col:2> 'int ()' Function 0x135914558 'assert' 'int ()'     | `-ImplicitCastExpr 0x1359146c0 <col:9> 'struct libmnt_context *' <LValueToRValue>     |   `-DeclRefExpr 0x135914630 <col:9> 'struct libmnt_context *' lvalue ParmVar 0x1358fc048 'cxt' 'struct libmnt_context *'     |-CallExpr 0x135914758 <line:6:2, col:16> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1359146d8 <col:2> 'int ()' Function 0x135914558 'assert' 'int ()'     | `-RecoveryExpr 0x135914730 <col:9, col:14> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1359146f8 <col:9> 'struct libmnt_context *' lvalue ParmVar 0x1358fc048 'cxt' 'struct libmnt_context *'     |-BinaryOperator 0x135914a88 <line:10:2, col:37> 'int' '='     | |-DeclRefExpr 0x1359148f0 <col:2> 'int' lvalue Var 0x135914468 'rc' 'int'     | `-CallExpr 0x135914a48 <col:7, col:37> 'int'     |   |-ImplicitCastExpr 0x135914a30 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1359149f0 <col:7> 'int ()' Function 0x135914938 'mnt_context_prepare_update' 'int ()'     |   `-ImplicitCastExpr 0x135914a70 <col:34> 'struct libmnt_context *' <LValueToRValue>     |     `-DeclRefExpr 0x135914a10 <col:34> 'struct libmnt_context *' lvalue ParmVar 0x1358fc048 'cxt' 'struct libmnt_context *'     |-IfStmt 0x135914cb0 <line:11:2, line:12:35>     | |-UnaryOperator 0x135914ae0 <line:11:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x135914ac8 <col:7> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x135914aa8 <col:7> 'int' lvalue Var 0x135914468 'rc' 'int'     | `-BinaryOperator 0x135914c90 <line:12:3, col:35> 'int' '='     |   |-DeclRefExpr 0x135914af8 <col:3> 'int' lvalue Var 0x135914468 'rc' 'int'     |   `-CallExpr 0x135914c50 <col:8, col:35> 'int'     |     |-ImplicitCastExpr 0x135914c38 <col:8> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x135914bf8 <col:8> 'int ()' Function 0x135914b40 'mnt_context_update_tabs' 'int ()'     |     `-ImplicitCastExpr 0x135914c78 <col:32> 'struct libmnt_context *' <LValueToRValue>     |       `-DeclRefExpr 0x135914c18 <col:32> 'struct libmnt_context *' lvalue ParmVar 0x1358fc048 'cxt' 'struct libmnt_context *'     `-ReturnStmt 0x135914d08 <line:13:2, col:9>       `-ImplicitCastExpr 0x135914cf0 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x135914cd0 <col:9> 'int' lvalue Var 0x135914468 'rc' 'int' ","21076":"`-FunctionDecl 0x1520aff18  line:1:1 invalid pk_transaction_action_obtain_authorization_finished_cb 'int (int *, int *, int *)'   |-ParmVarDecl 0x1520afd28 <col:57, col:66> col:66 invalid source_object 'int *'   |-ParmVarDecl 0x1520afda8 <col:81, col:95> col:95 referenced invalid res 'int *'   |-ParmVarDecl 0x1520afe28 <col:100, col:115> col:115 invalid transaction 'int *'   `-CompoundStmt 0x152815268 <line:2:1, line:53:1>     |-BinaryOperator 0x152814558 <line:13:2, col:53> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1520b02f0 <col:2> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1520b02d0 <col:2> 'int *' lvalue ParmVar 0x1520afda8 'res' 'int *'     | `-CallExpr 0x152814530 <col:8, col:53> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x152814400 <col:8> 'int ()' Function 0x1520b0340 'g_cancellable_is_cancelled' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x1528144e8 <col:36, col:42> '<dependent type>' contains-errors lvalue ->cancellable     |     `-RecoveryExpr 0x1528144c8 <col:36> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1528149d8 <line:14:2, line:20:2>     | |-RecoveryExpr 0x1528145b0 <line:14:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1528149c0 <col:11, line:20:2>     |   `-ReturnStmt 0x1528149b0 <line:19:3>     |-IfStmt 0x152814d60 <line:23:2, line:33:2>     | |-RecoveryExpr 0x1528149f8 <line:23:6, col:16> '_Bool' contains-errors     | `-CompoundStmt 0x152814d48 <col:22, line:33:2>     |   `-ReturnStmt 0x152814d38 <line:32:3>     `-IfStmt 0x1528150e8 <line:36:2, line:48:2>       |-RecoveryExpr 0x152814e80 <line:36:6, col:60> '_Bool' contains-errors       `-CompoundStmt 0x1528150d0 <col:63, line:48:2>         `-ReturnStmt 0x1528150c0 <line:47:3> ","21212":"`-FunctionDecl 0x1201281f0  line:1:13 invalid PreventDPCServicing 'void (int *)' static   |-ParmVarDecl 0x120128128 <col:33, col:51> col:51 referenced invalid pContext 'int *'   `-CompoundStmt 0x120141ee8 <line:2:1, line:16:1>     |-BinaryOperator 0x120128388 <line:4:5, col:45> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1201282e8 <col:5, col:15> '<dependent type>' contains-errors lvalue ->bEnableInterruptHandlingDPC     | | `-RecoveryExpr 0x1201282c0 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1201282a0 <col:5> 'int *' lvalue ParmVar 0x120128128 'pContext' 'int *'     | `-RecoveryExpr 0x120128368 <col:45> '<dependent type>' contains-errors lvalue     |-CallExpr 0x120128568 <line:5:5, col:21> 'int'     | `-ImplicitCastExpr 0x120128550 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x120128500 <col:5> 'int ()' Function 0x120128448 'KeMemoryBarrier' 'int ()'     `-DoStmt 0x120141ec8 <line:6:5, line:15:24>       |-CompoundStmt 0x120141e10 <line:7:5, line:15:5>       | |-CallExpr 0x1201418b0 <line:9:9, col:57> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x120141810 <col:9> 'int ()' Function 0x120128758 'InterlockedDecrement' 'int ()'       | | `-UnaryOperator 0x120141898 <col:30, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow       | |   `-CXXDependentScopeMemberExpr 0x120141850 <col:31, col:41> '<dependent type>' contains-errors lvalue ->counterDPCInside       | |     `-RecoveryExpr 0x120141830 <col:31> '<dependent type>' contains-errors lvalue       | `-IfStmt 0x120141df0 <line:10:9, line:14:9>       |   |-BinaryOperator 0x120141950 <line:10:13, col:22> 'int' contains-errors '>'       |   | |-RecoveryExpr 0x120141930 <col:13> '<dependent type>' contains-errors lvalue       |   | `-IntegerLiteral 0x1201418f0 <col:22> 'int' 1       |   `-CompoundStmt 0x120141dd0 <line:11:9, line:14:9>       |     |-CallExpr 0x120141c40 <line:12:13, col:45> 'int'       |     | |-ImplicitCastExpr 0x120141c28 <col:13> 'int (*)()' <FunctionToPointerDecay>       |     | | `-DeclRefExpr 0x120141a50 <col:13> 'int ()' Function 0x120141998 'DPrintf' 'int ()'       |     | |-IntegerLiteral 0x120141a70 <col:21> 'int' 0       |     | `-ParenExpr 0x120141c08 <col:24, col:44> 'const char *'       |     |   `-BinaryOperator 0x120141be8 <col:25, col:32> 'const char *' ','       |     |     |-ImplicitCastExpr 0x120141bb8 <col:25> 'char *' <ArrayToPointerDecay>       |     |     | `-StringLiteral 0x120141ad0 <col:25> 'char[4]' lvalue \"STR\"       |     |     `-ImplicitCastExpr 0x120141bd0 <col:32> 'const char *' <ArrayToPointerDecay>       |     |       `-PredefinedExpr 0x120141ba0 <col:32> 'const char[20]' lvalue __FUNCTION__       |     |         `-StringLiteral 0x120141b70 <col:32> 'const char[20]' lvalue \"PreventDPCServicing\"       |     `-CallExpr 0x120141da8 <line:13:13, col:29> 'int'       |       |-ImplicitCastExpr 0x120141d90 <col:13> 'int (*)()' <FunctionToPointerDecay>       |       | `-DeclRefExpr 0x120141d50 <col:13> 'int ()' Function 0x120141c98 'NdisMSleep' 'int ()'       |       `-IntegerLiteral 0x120141d70 <col:24> 'int' 20000       `-BinaryOperator 0x120141ea8 <line:15:14, col:23> 'int' contains-errors '>'         |-RecoveryExpr 0x120141e88 <col:14> '<dependent type>' contains-errors lvalue         `-IntegerLiteral 0x120141e48 <col:23> 'int' 1 ","20689":"`-FunctionDecl 0x11e1423c0  col:25 implicit used strdup 'char *(const char *)' extern   |-ParmVarDecl 0x11e1424c0 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x11e142468 <<invalid sloc>> Implicit 950 ","21240":"`-FunctionDecl 0x1261283e0  col:6 implicit used __builtin_constant_p 'int ()' extern   |-BuiltinAttr 0x126128488 <<invalid sloc>> Implicit 411   |-NoThrowAttr 0x1261284e0 <col:6> Implicit   `-ConstAttr 0x126128508 <col:6> Implicit ","20226":"`-FunctionDecl 0x11e00dec8  line:1:8 invalid ValidateShapes 'int (int *, const int)'   |-ParmVarDecl 0x11e00dd28 <col:23, col:40> col:40 invalid ctx 'int *'   |-ParmVarDecl 0x11e00dda8 <col:45, <invalid sloc>> col:57 invalid 'const int'   `-CompoundStmt 0x11e0274c0 <line:5:50, line:55:1>     |-IfStmt 0x11e00e060 <line:6:3, line:7:12>     | |-UnaryOperator 0x11e00e000 <line:6:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x11e00dfe8 <col:8> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x11e00dfc8 <col:8> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x11e00e050 <line:7:5, col:12>     |   `-RecoveryExpr 0x11e00e030 <col:12> '<dependent type>' contains-errors lvalue     |-NullStmt 0x11e00e080 <line:9:50>     |-IfStmt 0x11e00e168 <line:10:3, line:11:12>     | |-UnaryOperator 0x11e00e108 <line:10:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x11e00e0f0 <col:8> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x11e00e0d0 <col:8> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x11e00e158 <line:11:5, col:12>     |   `-RecoveryExpr 0x11e00e138 <col:12> '<dependent type>' contains-errors lvalue     |-NullStmt 0x11e00e188 <line:13:45>     |-IfStmt 0x11e00e270 <line:14:3, line:15:12>     | |-UnaryOperator 0x11e00e210 <line:14:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x11e00e1f8 <col:8> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x11e00e1d8 <col:8> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x11e00e260 <line:15:5, col:12>     |   `-RecoveryExpr 0x11e00e240 <col:12> '<dependent type>' contains-errors lvalue     |-NullStmt 0x11e00e290 <line:17:49>     |-IfStmt 0x11e00e378 <line:18:3, line:19:12>     | |-UnaryOperator 0x11e00e318 <line:18:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x11e00e300 <col:8> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x11e00e2e0 <col:8> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x11e00e368 <line:19:5, col:12>     |   `-RecoveryExpr 0x11e00e348 <col:12> '<dependent type>' contains-errors lvalue     `-NullStmt 0x11e00e398 <line:21:44> ","20762":"`-FunctionDecl 0x13a00de78  col:7 get_num_ngrams 'int (const int, const int)'   |-ParmVarDecl 0x13a00dcd8 <col:22, col:32> col:32 length 'const int'   `-ParmVarDecl 0x13a00dd58 <col:40, col:50> col:50 ngram_width 'const int' ","21134":"`-FunctionDecl 0x13f00e350  line:1:6 bootp_input 'void (struct mbuf *)'   |-ParmVarDecl 0x13f00e248 <col:18, col:31> col:31 used m 'struct mbuf *'   `-CompoundStmt 0x13f026c80 <line:2:1, line:8:1>     |-DeclStmt 0x13f0269a8 <line:3:5, col:51>     | |-RecordDecl 0x13f026648 <col:5, col:12> col:12 struct bootp_t     | `-VarDecl 0x13f0267b8 <col:5, col:21> col:21 used bp 'struct bootp_t *'     `-IfStmt 0x13f026c60 <line:5:5, line:7:5>       |-BinaryOperator 0x13f026a78 <line:5:9, col:22> 'int' contains-errors '=='       | |-RecoveryExpr 0x13f0269f8 <col:9, col:13> '<dependent type>' contains-errors lvalue       | | `-DeclRefExpr 0x13f0269c0 <col:9> 'struct bootp_t *' lvalue Var 0x13f0267b8 'bp' 'struct bootp_t *'       | `-RecoveryExpr 0x13f026a58 <col:22> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x13f026c48 <col:37, line:7:5>         `-CallExpr 0x13f026c18 <line:6:9, col:33> '<dependent type>' contains-errors           |-DeclRefExpr 0x13f026b78 <col:9> 'int ()' Function 0x13f026ac0 'bootp_reply' 'int ()'           |-RecoveryExpr 0x13f026bd0 <col:21, col:24> '<dependent type>' contains-errors lvalue           | `-DeclRefExpr 0x13f026b98 <col:21> 'struct mbuf *' lvalue ParmVar 0x13f00e248 'm' 'struct mbuf *'           `-DeclRefExpr 0x13f026bf8 <col:31> 'struct bootp_t *' lvalue Var 0x13f0267b8 'bp' 'struct bootp_t *' ","20460":"`-FunctionDecl 0x12c826898  line:2:12 io_queue_rsrc_removal 'int (struct io_rsrc_data *, unsigned int, struct io_rsrc_node *, void *)' static   |-ParmVarDecl 0x12c80e248 <col:34, col:55> col:55 used data 'struct io_rsrc_data *'   |-ParmVarDecl 0x12c80e2c8 <col:61, col:70> col:70 used idx 'unsigned int'   |-ParmVarDecl 0x12c8266c8 <line:3:6, col:27> col:27 used node 'struct io_rsrc_node *'   |-ParmVarDecl 0x12c826748 <col:33, col:39> col:39 used rsrc 'void *'   `-CompoundStmt 0x12c827300 <line:4:1, line:14:11>     |-DeclStmt 0x12c826b98 <line:5:2, col:27>     | |-RecordDecl 0x12c8269a8 <col:2, col:9> col:9 struct io_rsrc_put     | `-VarDecl 0x12c826b18 <col:2, col:22> col:22 used prsrc 'struct io_rsrc_put *'     |-IfStmt 0x12c826ea0 <line:8:2, line:9:11>     | |-UnaryOperator 0x12c826de0 <line:8:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12c826dc8 <col:7> 'struct io_rsrc_put *' <LValueToRValue>     | |   `-DeclRefExpr 0x12c826da8 <col:7> 'struct io_rsrc_put *' lvalue Var 0x12c826b18 'prsrc' 'struct io_rsrc_put *'     | `-ReturnStmt 0x12c826e90 <line:9:3, col:11>     |   `-UnaryOperator 0x12c826e78 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12c826e60 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12c826e40 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12c826ff0 <line:11:2, col:29> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12c826ef8 <col:2, col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12c826ec0 <col:2> 'struct io_rsrc_put *' lvalue Var 0x12c826b18 'prsrc' 'struct io_rsrc_put *'     | `-ArraySubscriptExpr 0x12c826fd0 <col:15, col:29> '<dependent type>' contains-errors lvalue     |   |-ImplicitCastExpr 0x12c826fa0 <col:15, col:21> '<dependent type>' contains-errors <LValueToRValue>     |   | `-RecoveryExpr 0x12c826f58 <col:15, col:21> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x12c826f20 <col:15> 'struct io_rsrc_data *' lvalue ParmVar 0x12c80e248 'data' 'struct io_rsrc_data *'     |   `-ImplicitCastExpr 0x12c826fb8 <col:26> 'unsigned int' <LValueToRValue>     |     `-DeclRefExpr 0x12c826f80 <col:26> 'unsigned int' lvalue ParmVar 0x12c80e2c8 'idx' 'unsigned int'     |-BinaryOperator 0x12c827090 <line:12:2, col:16> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12c827048 <col:2, col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12c827010 <col:2> 'struct io_rsrc_put *' lvalue Var 0x12c826b18 'prsrc' 'struct io_rsrc_put *'     | `-DeclRefExpr 0x12c827070 <col:16> 'void *' lvalue ParmVar 0x12c826748 'rsrc' 'void *'     |-CallExpr 0x12c8272a0 <line:13:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12c827190 <col:2> 'int ()' Function 0x12c8270d8 'list_add' 'int ()'     | |-UnaryOperator 0x12c827210 <col:11, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x12c8271e8 <col:12, col:19> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12c8271b0 <col:12> 'struct io_rsrc_put *' lvalue Var 0x12c826b18 'prsrc' 'struct io_rsrc_put *'     | `-UnaryOperator 0x12c827288 <col:25, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12c827260 <col:26, col:32> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12c827228 <col:26> 'struct io_rsrc_node *' lvalue ParmVar 0x12c8266c8 'node' 'struct io_rsrc_node *'     `-ReturnStmt 0x12c8272f0 <line:14:2, col:9>       `-IntegerLiteral 0x12c8272d0 <col:9> 'int' 0 ","21169":"`-FunctionDecl 0x12e80de88  line:1:1 invalid psutil_users 'int (int *, int *)'   |-ParmVarDecl 0x12e80dd28 <col:14, col:24> col:24 invalid self 'int *'   |-ParmVarDecl 0x12e80dda8 <col:30, col:40> col:40 invalid args 'int *'   `-CompoundStmt 0x12e829dd8 <col:46, line:58:1>     |-DeclStmt 0x12e80e128 <line:2:5, col:20>     | |-RecordDecl 0x12e80df40 <col:5, col:12> col:12 struct utmp     | `-VarDecl 0x12e80e0a8 <col:5, col:18> col:18 used ut 'struct utmp *'     |-CallExpr 0x12e827580 <line:12:5, col:14> 'int'     | `-ImplicitCastExpr 0x12e827568 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x12e827548 <col:5> 'int ()' Function 0x12e827490 'setutent' 'int ()'     |-WhileStmt 0x12e828210 <line:13:5, line:46:5>     | |-RecoveryExpr 0x12e827750 <line:13:12, col:36> '_Bool' contains-errors     | `-CompoundStmt 0x12e8281d8 <col:39, line:46:5>     |   |-IfStmt 0x12e827a00 <line:21:9, line:22:18>     |   | |-RecoveryExpr 0x12e827978 <line:21:13, col:15> '_Bool' contains-errors     |   | `-GotoStmt 0x12e8279e8 <line:22:13, col:18> 'error' 0x12e827998     |   |-IfStmt 0x12e827b00 <line:24:9, line:25:18>     |   | |-RecoveryExpr 0x12e827ac8 <line:24:13, col:15> '_Bool' contains-errors     |   | `-GotoStmt 0x12e827ae8 <line:25:13, col:18> 'error' 0x12e827998     |   |-IfStmt 0x12e827c00 <line:27:9, line:28:18>     |   | |-RecoveryExpr 0x12e827bc8 <line:27:13, col:15> '_Bool' contains-errors     |   | `-GotoStmt 0x12e827be8 <line:28:13, col:18> 'error' 0x12e827998     |   |-IfStmt 0x12e827f00 <line:38:9, line:39:18>     |   | |-RecoveryExpr 0x12e827ec8 <line:38:13, col:15> '_Bool' contains-errors     |   | `-GotoStmt 0x12e827ee8 <line:39:13, col:18> 'error' 0x12e827998     |   `-IfStmt 0x12e828058 <line:40:9, line:41:18>     |     |-RecoveryExpr 0x12e828020 <line:40:13, col:47> '_Bool' contains-errors     |     `-GotoStmt 0x12e828040 <line:41:13, col:18> 'error' 0x12e827998     |-CallExpr 0x12e828348 <line:47:5, col:14> 'int'     | `-ImplicitCastExpr 0x12e828330 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x12e828310 <col:5> 'int ()' Function 0x12e828258 'endutent' 'int ()'     |-LabelStmt 0x12e829ce0 <line:50:1, col:6> 'error'     | `-NullStmt 0x12e829cd8 <col:6>     `-CallExpr 0x12e829db8 <line:56:5, col:14> 'int'       `-ImplicitCastExpr 0x12e829da0 <col:5> 'int (*)()' <FunctionToPointerDecay>         `-DeclRefExpr 0x12e829d80 <col:5> 'int ()' Function 0x12e828258 'endutent' 'int ()' ","20548":"`-FunctionDecl 0x12480e358  line:1:12 stv06xx_start 'int (struct gspca_dev *)' static   |-ParmVarDecl 0x12480e248 <col:26, col:44> col:44 used gspca_dev 'struct gspca_dev *'   `-CompoundStmt 0x12482fa00 <line:2:1, line:35:1>     |-DeclStmt 0x12482ab20 <line:3:2, col:41>     | |-RecordDecl 0x12482a850 <col:2, col:9> col:9 struct sd     | `-VarDecl 0x12482a9b8 <col:2, col:32> col:13 used sd 'struct sd *' cinit     |   `-CStyleCastExpr 0x12482aae0 <col:18, col:32> 'struct sd *' <BitCast>     |     `-ImplicitCastExpr 0x12482aac8 <col:32> 'struct gspca_dev *' <LValueToRValue> part_of_explicit_cast     |       `-DeclRefExpr 0x12482aa20 <col:32> 'struct gspca_dev *' lvalue ParmVar 0x12480e248 'gspca_dev' 'struct gspca_dev *'     |-DeclStmt 0x12482ad28 <line:4:2, col:32>     | |-RecordDecl 0x12482ab38 <col:2, col:9> col:9 struct usb_host_interface     | `-VarDecl 0x12482aca8 <col:2, col:29> col:29 used alt 'struct usb_host_interface *'     |-DeclStmt 0x12482af28 <line:5:2, col:28>     | |-RecordDecl 0x12482ad40 <col:2, col:9> col:9 struct usb_interface     | `-VarDecl 0x12482aea8 <col:2, col:24> col:24 used intf 'struct usb_interface *'     |-DeclStmt 0x12482b058 <line:6:2, col:22>     | |-VarDecl 0x12482af58 <col:2, col:6> col:6 used err 'int'     | `-VarDecl 0x12482afd8 <col:2, col:11> col:11 used packet_size 'int'     |-BinaryOperator 0x12482b360 <line:8:2, col:63> 'struct usb_interface *' contains-errors '='     | |-DeclRefExpr 0x12482b070 <col:2> 'struct usb_interface *' lvalue Var 0x12482aea8 'intf' 'struct usb_interface *'     | `-CallExpr 0x12482b330 <col:9, col:63> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12482b1c0 <col:9> 'int ()' Function 0x12482b108 'usb_ifnum_to_if' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x12482b240 <col:25, col:39> '<dependent type>' contains-errors lvalue .dev     |   | `-RecoveryExpr 0x12482b218 <col:25, col:29> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x12482b1e0 <col:25> 'struct sd *' lvalue Var 0x12482a9b8 'sd' 'struct sd *'     |   `-CXXDependentScopeMemberExpr 0x12482b2e8 <col:44, col:58> '<dependent type>' contains-errors lvalue .iface     |     `-RecoveryExpr 0x12482b2c0 <col:44, col:48> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x12482b288 <col:44> 'struct sd *' lvalue Var 0x12482a9b8 'sd' 'struct sd *'     |-BinaryOperator 0x12482b598 <line:9:2, col:56> 'struct usb_host_interface *' contains-errors '='     | |-DeclRefExpr 0x12482b380 <col:2> 'struct usb_host_interface *' lvalue Var 0x12482aca8 'alt' 'struct usb_host_interface *'     | `-CallExpr 0x12482b568 <col:8, col:56> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12482b480 <col:8> 'int ()' Function 0x12482b3c8 'usb_altnum_to_altsetting' 'int ()'     |   |-DeclRefExpr 0x12482b4a0 <col:33> 'struct usb_interface *' lvalue Var 0x12482aea8 'intf' 'struct usb_interface *'     |   `-CXXDependentScopeMemberExpr 0x12482b520 <col:39, col:53> '<dependent type>' contains-errors lvalue .alt     |     `-RecoveryExpr 0x12482b4f8 <col:39, col:43> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x12482b4c0 <col:39> 'struct sd *' lvalue Var 0x12482a9b8 'sd' 'struct sd *'     |-IfStmt 0x12482e128 <line:10:2, line:13:2>     | |-UnaryOperator 0x12482b5f0 <line:10:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12482b5d8 <col:7> 'struct usb_host_interface *' <LValueToRValue>     | |   `-DeclRefExpr 0x12482b5b8 <col:7> 'struct usb_host_interface *' lvalue Var 0x12482aca8 'alt' 'struct usb_host_interface *'     | `-CompoundStmt 0x12482e108 <col:12, line:13:2>     |   |-CallExpr 0x12482e000 <line:11:3, col:29> 'int'     |   | |-ImplicitCastExpr 0x12482b7c0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x12482b6e8 <col:3> 'int ()' Function 0x12482b630 'gspca_err' 'int ()'     |   | |-ImplicitCastExpr 0x12482e030 <col:13> 'struct gspca_dev *' <LValueToRValue>     |   | | `-DeclRefExpr 0x12482b708 <col:13> 'struct gspca_dev *' lvalue ParmVar 0x12480e248 'gspca_dev' 'struct gspca_dev *'     |   | `-ImplicitCastExpr 0x12482e048 <col:24> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x12482b770 <col:24> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x12482e0f8 <line:12:3, col:11>     |     `-UnaryOperator 0x12482e0e0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x12482e0c8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x12482e0a8 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12482e3d8 <line:15:2, col:64> 'int' contains-errors '='     | |-DeclRefExpr 0x12482e148 <col:2> 'int' lvalue Var 0x12482afd8 'packet_size' 'int'     | `-CallExpr 0x12482e3b0 <col:16, col:64> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12482e248 <col:16> 'int ()' Function 0x12482e190 'le16_to_cpu' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x12482e368 <col:28, col:50> '<dependent type>' contains-errors lvalue .wMaxPacketSize     |     `-CXXDependentScopeMemberExpr 0x12482e320 <col:28, col:45> '<dependent type>' contains-errors lvalue .desc     |       `-ArraySubscriptExpr 0x12482e300 <col:28, col:43> '<dependent type>' contains-errors lvalue     |         |-ImplicitCastExpr 0x12482e2e8 <col:28, col:33> '<dependent type>' contains-errors <LValueToRValue>     |         | `-RecoveryExpr 0x12482e2a0 <col:28, col:33> '<dependent type>' contains-errors lvalue     |         |   `-DeclRefExpr 0x12482e268 <col:28> 'struct usb_host_interface *' lvalue Var 0x12482aca8 'alt' 'struct usb_host_interface *'     |         `-IntegerLiteral 0x12482e2c8 <col:42> 'int' 0     |-BinaryOperator 0x12482e620 <line:16:2, col:60> 'int' contains-errors '='     | |-DeclRefExpr 0x12482e3f8 <col:2> 'int' lvalue Var 0x12482af58 'err' 'int'     | `-CallExpr 0x12482e5e8 <col:8, col:60> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12482e4f8 <col:8> 'int ()' Function 0x12482e440 'stv06xx_write_bridge' 'int ()'     |   |-DeclRefExpr 0x12482e518 <col:29> 'struct sd *' lvalue Var 0x12482a9b8 'sd' 'struct sd *'     |   |-RecoveryExpr 0x12482e5c8 <col:33> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12482e550 <col:49> 'int' lvalue Var 0x12482afd8 'packet_size' 'int'     |-IfStmt 0x12482e700 <line:17:2, line:18:10>     | |-BinaryOperator 0x12482e698 <line:17:6, col:12> 'int' '<'     | | |-ImplicitCastExpr 0x12482e680 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x12482e640 <col:6> 'int' lvalue Var 0x12482af58 'err' 'int'     | | `-IntegerLiteral 0x12482e660 <col:12> 'int' 0     | `-ReturnStmt 0x12482e6f0 <line:18:3, col:10>     |   `-ImplicitCastExpr 0x12482e6d8 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x12482e6b8 <col:10> 'int' lvalue Var 0x12482af58 'err' 'int'     |-BinaryOperator 0x12482e830 <line:21:2, col:28> 'int' contains-errors '='     | |-DeclRefExpr 0x12482e720 <col:2> 'int' lvalue Var 0x12482af58 'err' 'int'     | `-CallExpr 0x12482e808 <col:8, col:28> '<dependent type>' contains-errors     |   |-CXXDependentScopeMemberExpr 0x12482e7a0 <col:8, col:20> '<dependent type>' contains-errors lvalue ->start     |   | `-RecoveryExpr 0x12482e778 <col:8, col:12> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x12482e740 <col:8> 'struct sd *' lvalue Var 0x12482a9b8 'sd' 'struct sd *'     |   `-DeclRefExpr 0x12482e7e8 <col:26> 'struct sd *' lvalue Var 0x12482a9b8 'sd' 'struct sd *'     |-IfStmt 0x12482e930 <line:22:2, line:23:8>     | |-BinaryOperator 0x12482e8a8 <line:22:6, col:12> 'int' '<'     | | |-ImplicitCastExpr 0x12482e890 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x12482e850 <col:6> 'int' lvalue Var 0x12482af58 'err' 'int'     | | `-IntegerLiteral 0x12482e870 <col:12> 'int' 0     | `-GotoStmt 0x12482e918 <line:23:3, col:8> 'out' 0x12482e8c8     |-BinaryOperator 0x12482ea98 <line:26:2, col:50> 'int' contains-errors '='     | |-DeclRefExpr 0x12482e950 <col:2> 'int' lvalue Var 0x12482af58 'err' 'int'     | `-CallExpr 0x12482ea60 <col:8, col:50> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12482e970 <col:8> 'int ()' Function 0x12482e440 'stv06xx_write_bridge' 'int ()'     |   |-DeclRefExpr 0x12482e990 <col:29> 'struct sd *' lvalue Var 0x12482a9b8 'sd' 'struct sd *'     |   |-RecoveryExpr 0x12482ea40 <col:33> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x12482e9c8 <col:49> 'int' 1     |-LabelStmt 0x12482ee50 <line:28:1, line:32:39> 'out'     | `-IfStmt 0x12482ee20 <line:29:2, line:32:39> has_else     |   |-BinaryOperator 0x12482eb10 <line:29:6, col:12> 'int' '<'     |   | |-ImplicitCastExpr 0x12482eaf8 <col:6> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x12482eab8 <col:6> 'int' lvalue Var 0x12482af58 'err' 'int'     |   | `-IntegerLiteral 0x12482ead8 <col:12> 'int' 0     |   |-CallExpr 0x12482ece0 <line:30:3, col:39> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12482ec10 <col:3> 'int ()' Function 0x12482eb58 'gspca_dbg' 'int ()'     |   | |-DeclRefExpr 0x12482ec30 <col:13> 'struct gspca_dev *' lvalue ParmVar 0x12480e248 'gspca_dev' 'struct gspca_dev *'     |   | |-RecoveryExpr 0x12482ecc0 <col:24> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x12482ec68 <col:34> 'char[4]' lvalue \"STR\"     |   `-CallExpr 0x12482ede8 <line:32:3, col:39> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12482ed18 <col:3> 'int ()' Function 0x12482eb58 'gspca_dbg' 'int ()'     |     |-DeclRefExpr 0x12482ed38 <col:13> 'struct gspca_dev *' lvalue ParmVar 0x12480e248 'gspca_dev' 'struct gspca_dev *'     |     |-RecoveryExpr 0x12482edc8 <col:24> '<dependent type>' contains-errors lvalue     |     `-StringLiteral 0x12482ed70 <col:34> 'char[4]' lvalue \"STR\"     `-ReturnStmt 0x12482ef90 <line:34:2, col:27>       `-ConditionalOperator 0x12482ef60 <col:9, col:27> 'int'         |-ParenExpr 0x12482eee8 <col:9, col:17> 'int'         | `-BinaryOperator 0x12482eec8 <col:10, col:16> 'int' '<'         |   |-ImplicitCastExpr 0x12482eeb0 <col:10> 'int' <LValueToRValue>         |   | `-DeclRefExpr 0x12482ee70 <col:10> 'int' lvalue Var 0x12482af58 'err' 'int'         |   `-IntegerLiteral 0x12482ee90 <col:16> 'int' 0         |-ImplicitCastExpr 0x12482ef48 <col:21> 'int' <LValueToRValue>         | `-DeclRefExpr 0x12482ef08 <col:21> 'int' lvalue Var 0x12482af58 'err' 'int'         `-IntegerLiteral 0x12482ef28 <col:27> 'int' 0 ","21116":"`-FunctionDecl 0x138808858  col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x138808958 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x1388089c0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x138808a28 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x138808900 <<invalid sloc>> Implicit 882 ","21257":"`-FunctionDecl 0x155028068  col:3 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x155028168 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x155028110 <<invalid sloc>> Implicit 873 ","20233":"`-FunctionDecl 0x12502b6d8  line:1:1 invalid bgp_attr_flag_invalid 'int (struct peer *, int, int)'   |-ParmVarDecl 0x12500e248 <col:24, col:37> col:37 used peer 'struct peer *'   |-ParmVarDecl 0x12500e2e0 <col:43, col:52> col:52 invalid attr_code 'int'   |-ParmVarDecl 0x12500e360 <col:63, col:72> col:72 invalid flags 'int'   `-CompoundStmt 0x126809958 <line:2:1, line:55:1>     |-IfStmt 0x12502b860 <line:6:3, line:7:12>     | |-BinaryOperator 0x12502b810 <line:6:7, col:19> 'int' contains-errors '>'     | | |-RecoveryExpr 0x12502b798 <col:7> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12502b7f0 <col:19> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12502b850 <line:7:5, col:12>     |   `-IntegerLiteral 0x12502b830 <col:12> 'int' 0     |-IfStmt 0x12502b928 <line:8:3, line:9:12>     | |-RecoveryExpr 0x12502b8d8 <line:8:7, col:39> '_Bool' contains-errors     | `-ReturnStmt 0x12502b918 <line:9:5, col:12>     |   `-IntegerLiteral 0x12502b8f8 <col:12> 'int' 0     |-IfStmt 0x12502c1a8 <line:12:3, line:19:5>     | |-BinaryOperator 0x12502bcd0 <line:12:7, line:13:49> 'int' contains-errors '&&'     | | |-UnaryOperator 0x12502bc50 <line:12:7, col:49> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | `-CallExpr 0x12502bc20 <col:8, col:49> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x12502baa0 <col:8> 'int ()' Function 0x12502b9e8 'CHECK_FLAG' 'int ()'     | | |   |-RecoveryExpr 0x12502bc00 <col:20> '<dependent type>' contains-errors lvalue     | | |   `-RecoveryExpr 0x12502bad8 <col:44> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x12502bcb8 <line:13:10, col:49> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-CallExpr 0x12502bc88 <col:11, col:49> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x12502bb40 <col:11> 'int ()' Function 0x12502b9e8 'CHECK_FLAG' 'int ()'     | |     |-RecoveryExpr 0x12502bc68 <col:23> '<dependent type>' contains-errors lvalue     | |     `-RecoveryExpr 0x12502bb78 <col:44> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12502c188 <line:14:5, line:19:5>     |   |-CallExpr 0x12502c110 <line:15:7, line:17:48> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12502bdd0 <line:15:7> 'int ()' Function 0x12502bd18 'zlog' 'int ()'     |   | |-RecoveryExpr 0x12502be28 <col:13, col:19> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x12502bdf0 <col:13> 'struct peer *' lvalue ParmVar 0x12500e248 'peer' 'struct peer *'     |   | |-RecoveryExpr 0x12502c0a0 <col:24> '<dependent type>' contains-errors lvalue     |   | |-StringLiteral 0x12502beb0 <line:16:13> 'char[4]' lvalue \"STR\"     |   | |-CallExpr 0x12502c0e0 <line:17:13, col:40> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x12502bfb0 <col:13> 'int ()' Function 0x12502bef8 'LOOKUP' 'int ()'     |   | | |-RecoveryExpr 0x12502c0c0 <col:21> '<dependent type>' contains-errors lvalue     |   | | `-RecoveryExpr 0x12502bfe8 <col:31> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x12502c038 <col:43> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x12502c178 <line:18:7, col:14>     |     `-IntegerLiteral 0x12502c158 <col:14> 'int' 1     |-IfStmt 0x126809518 <line:22:3, line:41:5>     | |-CallExpr 0x12502c270 <line:22:7, col:47> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x12502c1c8 <col:7> 'int ()' Function 0x12502b9e8 'CHECK_FLAG' 'int ()'     | | |-RecoveryExpr 0x12502c1e8 <col:19> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12502c250 <col:26> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1268094f8 <line:23:5, line:41:5>     |   |-IfStmt 0x1268092c8 <line:24:7, line:31:9>     |   | |-UnaryOperator 0x12502c390 <line:24:11, col:53> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | | `-CallExpr 0x12502c360 <col:12, col:53> '<dependent type>' contains-errors     |   | |   |-DeclRefExpr 0x12502c2a0 <col:12> 'int ()' Function 0x12502b9e8 'CHECK_FLAG' 'int ()'     |   | |   |-RecoveryExpr 0x12502c2c0 <col:24> '<dependent type>' contains-errors lvalue     |   | |   `-RecoveryExpr 0x12502c340 <col:31> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x1268092a8 <line:25:9, line:31:9>     |   |   |-CallExpr 0x126809230 <line:26:11, line:29:53> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x12502c3a8 <line:26:11> 'int ()' Function 0x12502bd18 'zlog' 'int ()'     |   |   | |-RecoveryExpr 0x12502c400 <col:17, col:23> '<dependent type>' contains-errors lvalue     |   |   | | `-DeclRefExpr 0x12502c3c8 <col:17> 'struct peer *' lvalue ParmVar 0x12500e248 'peer' 'struct peer *'     |   |   | |-RecoveryExpr 0x12502c598 <col:28> '<dependent type>' contains-errors lvalue     |   |   | |-StringLiteral 0x12502c480 <line:27:17, line:28:17> 'char[7]' lvalue \"STRSTR\"     |   |   | |-CallExpr 0x126809200 <line:29:18, col:45> '<dependent type>' contains-errors     |   |   | | |-DeclRefExpr 0x12502c4a8 <col:18> 'int ()' Function 0x12502bef8 'LOOKUP' 'int ()'     |   |   | | |-RecoveryExpr 0x12502c5b8 <col:26> '<dependent type>' contains-errors lvalue     |   |   | | `-RecoveryExpr 0x12502c4e0 <col:36> '<dependent type>' contains-errors lvalue     |   |   | `-RecoveryExpr 0x12502c530 <col:48> '<dependent type>' contains-errors lvalue     |   |   `-ReturnStmt 0x126809298 <line:30:11, col:18>     |   |     `-IntegerLiteral 0x126809278 <col:18> 'int' 1     |   `-IfStmt 0x1268094d8 <line:32:7, line:40:9>     |     |-RecoveryExpr 0x126809368 <line:32:11, line:33:53> '_Bool' contains-errors     |     `-CompoundStmt 0x1268094c0 <line:34:9, line:40:9>     |       `-ReturnStmt 0x1268094b0 <line:39:11, col:18>     |         `-IntegerLiteral 0x126809490 <col:18> 'int' 1     |-IfStmt 0x126809788 <line:48:3, line:50:12>     | |-RecoveryExpr 0x126809738 <line:48:7, line:49:37> '_Bool' contains-errors     | `-ReturnStmt 0x126809778 <line:50:5, col:12>     |   `-IntegerLiteral 0x126809758 <col:12> 'int' 0     `-ReturnStmt 0x126809948 <line:54:3, col:10>       `-IntegerLiteral 0x126809928 <col:10> 'int' 1 ","20829":"`-FunctionDecl 0x157144cb8  line:1:18 clone_private_mount 'struct vfsmount *(const struct path *)'   |-ParmVarDecl 0x1571286e8 <col:38, col:57> col:57 used path 'const struct path *'   `-CompoundStmt 0x157146b80 <line:2:1, line:17:1>     |-DeclStmt 0x157145170 <line:3:2, col:47>     | |-RecordDecl 0x157144db0 <col:2, col:9> col:9 struct mount     | `-VarDecl 0x157144f18 <col:2, col:46> col:16 used old_mnt 'struct mount *' cinit     |   `-CallExpr 0x157145130 <col:26, col:46> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1571450b0 <col:26> 'int ()' Function 0x157144ff8 'real_mount' 'int ()'     |     `-RecoveryExpr 0x157145108 <col:37, col:43> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x1571450d0 <col:37> 'const struct path *' lvalue ParmVar 0x1571286e8 'path' 'const struct path *'     |-DeclStmt 0x157145280 <line:4:2, col:23>     | `-VarDecl 0x157145218 <col:2, col:16> col:16 used new_mnt 'struct mount *'     |-IfStmt 0x157145640 <line:6:2, line:7:25>     | |-CallExpr 0x157145408 <line:6:6, col:31> 'int' contains-errors     | | |-ImplicitCastExpr 0x1571453f0 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x157145378 <col:6> 'int ()' Function 0x1571452c0 'IS_MNT_UNBINDABLE' 'int ()'     | | `-ImplicitCastExpr 0x157145430 <col:24> 'struct mount *' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x157145398 <col:24> 'struct mount *' contains-errors lvalue Var 0x157144f18 'old_mnt' 'struct mount *'     | `-ReturnStmt 0x157145630 <line:7:3, col:25>     |   `-CallExpr 0x157145608 <col:10, col:25> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x157145528 <col:10> 'int ()' Function 0x157145470 'ERR_PTR' 'int ()'     |     `-UnaryOperator 0x1571455f0 <col:18, col:19> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x1571455d8 <col:19> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x1571455b8 <col:19> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1571458c8 <line:9:2, col:55> 'struct mount *' contains-errors '='     | |-DeclRefExpr 0x157145660 <col:2> 'struct mount *' lvalue Var 0x157145218 'new_mnt' 'struct mount *'     | `-CallExpr 0x157145890 <col:12, col:55> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x157145760 <col:12> 'int ()' Function 0x1571456a8 'clone_mnt' 'int ()'     |   |-DeclRefExpr 0x157145780 <col:22> 'struct mount *' contains-errors lvalue Var 0x157144f18 'old_mnt' 'struct mount *'     |   |-RecoveryExpr 0x1571457d8 <col:31, col:37> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x1571457a0 <col:31> 'const struct path *' lvalue ParmVar 0x1571286e8 'path' 'const struct path *'     |   `-RecoveryExpr 0x157145870 <col:45> '<dependent type>' contains-errors lvalue     |-IfStmt 0x157146a00 <line:10:2, line:11:26>     | |-CallExpr 0x157145a20 <line:10:6, col:20> 'int'     | | |-ImplicitCastExpr 0x157145a08 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x1571459c8 <col:6> 'int ()' Function 0x157145910 'IS_ERR' 'int ()'     | | `-ImplicitCastExpr 0x157145a48 <col:13> 'struct mount *' <LValueToRValue>     | |   `-DeclRefExpr 0x1571459e8 <col:13> 'struct mount *' lvalue Var 0x157145218 'new_mnt' 'struct mount *'     | `-ReturnStmt 0x157145bf0 <line:11:3, col:26>     |   `-ImplicitCastExpr 0x157145bd8 <col:10, col:26> 'struct vfsmount *' <IntegralToPointer>     |     `-CallExpr 0x157145b98 <col:10, col:26> 'int'     |       |-ImplicitCastExpr 0x157145b80 <col:10> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x157145b40 <col:10> 'int ()' Function 0x157145a88 'ERR_CAST' 'int ()'     |       `-ImplicitCastExpr 0x157145bc0 <col:19> 'struct mount *' <LValueToRValue>     |         `-DeclRefExpr 0x157145b60 <col:19> 'struct mount *' lvalue Var 0x157145218 'new_mnt' 'struct mount *'     |-BinaryOperator 0x157146ad8 <line:14:2, col:20> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x157146a58 <col:2, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x157146a20 <col:2> 'struct mount *' lvalue Var 0x157145218 'new_mnt' 'struct mount *'     | `-RecoveryExpr 0x157146ab8 <col:20> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x157146b70 <line:16:2, col:19>       `-UnaryOperator 0x157146b58 <col:9, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x157146b30 <col:10, col:19> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x157146af8 <col:10> 'struct mount *' lvalue Var 0x157145218 'new_mnt' 'struct mount *' ","20323":"`-FunctionDecl 0x154145b58  line:1:9 invalid ovl_getxattr 'int (struct dentry *, const char *, void *, int)'   |-ParmVarDecl 0x154128668 <col:22, col:37> col:37 used dentry 'struct dentry *'   |-ParmVarDecl 0x1541286e8 <col:45, col:57> col:57 used name 'const char *'   |-ParmVarDecl 0x154128768 <line:2:8, col:14> col:14 used value 'void *'   |-ParmVarDecl 0x154145a00 <col:21, col:28> col:28 invalid size 'int'   `-CompoundStmt 0x154146788 <line:3:1, line:11:1>     |-DeclStmt 0x154145d98 <line:4:2, col:22>     | |-RecordDecl 0x154145c20 <col:2, col:9> col:9 struct path     | `-VarDecl 0x154145d18 <col:2, col:14> col:14 invalid realpath 'struct path'     |-DeclStmt 0x154146150 <line:5:2, col:60>     | |-EnumDecl 0x154145db0 <col:2, col:7> col:7 ovl_path_type     | `-VarDecl 0x154145ec8 <col:2, col:21> col:21 invalid type 'enum ovl_path_type'     |-IfStmt 0x154146550 <line:7:2, line:8:11>     | |-BinaryOperator 0x154146488 <line:7:6, col:70> 'int' contains-errors '&&'     | | |-CallExpr 0x1541462a8 <col:6, col:40> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x154146248 <col:6> 'int ()' Function 0x154146190 'ovl_need_xattr_filter' 'int ()'     | | | |-DeclRefExpr 0x154146268 <col:28> 'struct dentry *' lvalue ParmVar 0x154128668 'dentry' 'struct dentry *'     | | | `-RecoveryExpr 0x154146288 <col:36> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x154146448 <col:45, col:70> 'int'     | |   |-ImplicitCastExpr 0x154146430 <col:45> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x1541463b8 <col:45> 'int ()' Function 0x154146300 'ovl_is_private_xattr' 'int ()'     | |   `-ImplicitCastExpr 0x154146470 <col:66> 'const char *' <LValueToRValue>     | |     `-DeclRefExpr 0x1541463d8 <col:66> 'const char *' lvalue ParmVar 0x1541286e8 'name' 'const char *'     | `-ReturnStmt 0x154146540 <line:8:3, col:11>     |   `-UnaryOperator 0x154146528 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x154146510 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x1541464f0 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x154146778 <line:10:2, col:56>       `-CallExpr 0x154146738 <col:9, col:56> '<dependent type>' contains-errors         |-DeclRefExpr 0x154146650 <col:9> 'int ()' Function 0x154146598 'vfs_getxattr' 'int ()'         |-CXXDependentScopeMemberExpr 0x154146690 <col:22, col:31> '<dependent type>' contains-errors lvalue .dentry         | `-RecoveryExpr 0x154146670 <col:22> '<dependent type>' contains-errors lvalue         |-DeclRefExpr 0x1541466d8 <col:39> 'const char *' lvalue ParmVar 0x1541286e8 'name' 'const char *'         |-DeclRefExpr 0x1541466f8 <col:45> 'void *' lvalue ParmVar 0x154128768 'value' 'void *'         `-RecoveryExpr 0x154146718 <col:52> '<dependent type>' contains-errors lvalue ","20253":"`-FunctionDecl 0x131857600  line:1:6 invalid set_task_blockstep 'void (struct task_struct *, int)'   |-ParmVarDecl 0x131833848 <col:25, col:45> col:45 used task 'struct task_struct *'   |-ParmVarDecl 0x1318338e0 <col:51, col:56> col:56 invalid on 'int'   `-CompoundStmt 0x131858400 <line:2:1, line:18:1>     |-DeclStmt 0x131857738 <line:3:2, col:24>     | `-VarDecl 0x1318576d0 <col:2, col:16> col:16 used debugctl 'unsigned long'     |-CallExpr 0x131857918 <line:6:2, col:20> 'int'     | `-ImplicitCastExpr 0x131857900 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x1318578b0 <col:2> 'int ()' Function 0x1318577f8 'local_irq_disable' 'int ()'     |-BinaryOperator 0x131857aa8 <line:7:2, col:29> 'unsigned long' '='     | |-DeclRefExpr 0x131857938 <col:2> 'unsigned long' lvalue Var 0x1318576d0 'debugctl' 'unsigned long'     | `-ImplicitCastExpr 0x131857a90 <col:13, col:29> 'unsigned long' <IntegralCast>     |   `-CallExpr 0x131857a70 <col:13, col:29> 'int'     |     `-ImplicitCastExpr 0x131857a58 <col:13> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x131857a38 <col:13> 'int ()' Function 0x131857980 'get_debugctlmsr' 'int ()'     |-IfStmt 0x131858068 <line:8:2, line:14:2> has_else     | |-RecoveryExpr 0x131857ac8 <line:8:6> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x131857d58 <col:10, line:11:2>     | | |-CompoundAssignOperator 0x131857b70 <line:9:3, col:15> 'unsigned long' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | | | |-DeclRefExpr 0x131857ae8 <col:3> 'unsigned long' lvalue Var 0x1318576d0 'debugctl' 'unsigned long'     | | | `-RecoveryExpr 0x131857b50 <col:15> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x131857d28 <line:10:3, col:42> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x131857c80 <col:3> 'int ()' Function 0x131857bc8 'set_tsk_thread_flag' 'int ()'     | |   |-DeclRefExpr 0x131857ca0 <col:23> 'struct task_struct *' lvalue ParmVar 0x131833848 'task' 'struct task_struct *'     | |   `-RecoveryExpr 0x131857d08 <col:29> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x131858048 <line:11:9, line:14:2>     |   |-CompoundAssignOperator 0x131857e60 <line:12:3, col:16> 'unsigned long' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   | |-DeclRefExpr 0x131857d78 <col:3> 'unsigned long' lvalue Var 0x1318576d0 'debugctl' 'unsigned long'     |   | `-UnaryOperator 0x131857e48 <col:15, col:16> '<dependent type>' contains-errors prefix '~' cannot overflow     |   |   `-ImplicitCastExpr 0x131857e30 <col:16> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x131857e10 <col:16> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x131858018 <line:13:3, col:44> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x131857f70 <col:3> 'int ()' Function 0x131857eb8 'clear_tsk_thread_flag' 'int ()'     |     |-DeclRefExpr 0x131857f90 <col:25> 'struct task_struct *' lvalue ParmVar 0x131833848 'task' 'struct task_struct *'     |     `-RecoveryExpr 0x131857ff8 <col:31> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1318582a8 <line:15:2, line:16:30>     | |-BinaryOperator 0x131858110 <line:15:6, col:14> 'int' contains-errors '=='     | | |-DeclRefExpr 0x131858098 <col:6> 'struct task_struct *' lvalue ParmVar 0x131833848 'task' 'struct task_struct *'     | | `-RecoveryExpr 0x1318580f0 <col:14> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x131858268 <line:16:3, col:30> 'int'     |   |-ImplicitCastExpr 0x131858250 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x131858210 <col:3> 'int ()' Function 0x131858158 'update_debugctlmsr' 'int ()'     |   `-ImplicitCastExpr 0x131858290 <col:22> 'unsigned long' <LValueToRValue>     |     `-DeclRefExpr 0x131858230 <col:22> 'unsigned long' lvalue Var 0x1318576d0 'debugctl' 'unsigned long'     `-CallExpr 0x1318583e0 <line:17:2, col:19> 'int'       `-ImplicitCastExpr 0x1318583c8 <col:2> 'int (*)()' <FunctionToPointerDecay>         `-DeclRefExpr 0x1318583a8 <col:2> 'int ()' Function 0x1318582f0 'local_irq_enable' 'int ()' ","20667":"`-FunctionDecl 0x12c128ac8  line:1:5 referenced CL_ServerStatus 'int (char *, char *, int)'   |-ParmVarDecl 0x12c1288d8 <col:22, col:28> col:28 used serverAddress 'char *'   |-ParmVarDecl 0x12c128958 <col:43, col:49> col:49 used serverStatusString 'char *'   |-ParmVarDecl 0x12c1289d8 <col:69, col:73> col:73 used maxLen 'int'   `-CompoundStmt 0x12c142180 <col:82, line:57:1>     |-DeclStmt 0x12c128c50 <line:2:2, col:7>     | `-VarDecl 0x12c128be8 <col:2, col:6> col:6 used i 'int'     |-IfStmt 0x12c128f60 <line:7:2, line:13:2>     | |-UnaryOperator 0x12c128cf0 <line:7:7, col:8> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12c128cd8 <col:8> 'char *' <LValueToRValue>     | |   `-DeclRefExpr 0x12c128cb8 <col:8> 'char *' lvalue ParmVar 0x12c1288d8 'serverAddress' 'char *'     | `-CompoundStmt 0x12c128f40 <col:24, line:13:2>     |   |-ForStmt 0x12c128ec0 <line:8:3, line:11:3>     |   | |-BinaryOperator 0x12c128d48 <line:8:8, col:12> 'int' '='     |   | | |-DeclRefExpr 0x12c128d08 <col:8> 'int' lvalue Var 0x12c128be8 'i' 'int'     |   | | `-IntegerLiteral 0x12c128d28 <col:12> 'int' 0     |   | |-<<<NULL>>>     |   | |-BinaryOperator 0x12c128de0 <col:15, col:19> 'int' contains-errors '<'     |   | | |-DeclRefExpr 0x12c128d68 <col:15> 'int' lvalue Var 0x12c128be8 'i' 'int'     |   | | `-RecoveryExpr 0x12c128dc0 <col:19> '<dependent type>' contains-errors lvalue     |   | |-UnaryOperator 0x12c128e20 <col:45, col:46> 'int' postfix '++'     |   | | `-DeclRefExpr 0x12c128e00 <col:45> 'int' lvalue Var 0x12c128be8 'i' 'int'     |   | `-CompoundStmt 0x12c128eb0 <col:50, line:11:3>     |   `-ReturnStmt 0x12c128f30 <line:12:3, col:10>     |     `-RecoveryExpr 0x12c128f10 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12c808498 <line:15:2, line:17:2>     | |-UnaryOperator 0x12c808420 <line:15:7, col:54> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x12c8083e8 <col:8, col:54> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12c8082b8 <col:8> 'int ()' Function 0x12c808200 'NET_StringToAdr' 'int ()'     | |   |-DeclRefExpr 0x12c8082d8 <col:25> 'char *' lvalue ParmVar 0x12c1288d8 'serverAddress' 'char *'     | |   |-UnaryOperator 0x12c8083b0 <col:40, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   | `-RecoveryExpr 0x12c808390 <col:41> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x12c8083c8 <col:45> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12c808480 <col:58, line:17:2>     |   `-ReturnStmt 0x12c808470 <line:16:3, col:10>     |     `-RecoveryExpr 0x12c808450 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12c808b98 <line:20:2, line:23:2>     | |-UnaryOperator 0x12c808630 <line:20:7, col:8> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12c808618 <col:8> 'char *' <LValueToRValue>     | |   `-DeclRefExpr 0x12c8085f8 <col:8> 'char *' lvalue ParmVar 0x12c128958 'serverStatusString' 'char *'     | `-CompoundStmt 0x12c808b78 <col:29, line:23:2>     |   |-BinaryOperator 0x12c808b10 <line:21:3, col:29> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x12c808a90 <col:3, col:17> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x12c808648 <col:3> 'int (char *, char *, int)' Function 0x12c128ac8 'CL_ServerStatus' 'int (char *, char *, int)'     |   | `-RecoveryExpr 0x12c808af0 <col:29> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x12c808b68 <line:22:3, col:10>     |     `-RecoveryExpr 0x12c808b48 <col:10> '<dependent type>' contains-errors lvalue     `-IfStmt 0x12c142150 <line:26:2, line:55:2> has_else       |-RecoveryExpr 0x12c808cb8 <line:26:7, col:48> '_Bool' contains-errors       |-CompoundStmt 0x12c142030 <col:52, line:44:2>       | `-IfStmt 0x12c142000 <line:28:3, line:43:3> has_else       |   |-RecoveryExpr 0x12c808cd8 <line:28:7, col:22> '_Bool' contains-errors       |   |-CompoundStmt 0x12c808e58 <col:31, line:33:3>       |   `-IfStmt 0x12c8091e0 <line:35:8, line:43:3>       |     |-RecoveryExpr 0x12c808fd8 <line:35:13, col:87> '_Bool' contains-errors       |     `-CompoundStmt 0x12c8091d0 <col:97, line:43:3>       `-IfStmt 0x12c142130 <line:46:7, line:55:2>         |-RecoveryExpr 0x12c142048 <line:46:12, col:26> '_Bool' contains-errors         `-CompoundStmt 0x12c142120 <col:38, line:55:2> ","20700":"`-FunctionDecl 0x11e8ca488  col:5 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x11e8ca588 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x11e8ca530 <<invalid sloc>> Implicit 873 ","20282":"`-FunctionDecl 0x12a1281f0  line:1:13 invalid trace_stop 'void (int *)' static   |-ParmVarDecl 0x12a128128 <col:24, col:35> col:35 referenced invalid J 'int *'   `-CompoundStmt 0x12a142cb0 <line:2:1, line:59:1>     |-SwitchStmt 0x12a808988 <line:10:3, line:47:3>     | |-RecoveryExpr 0x12a808968 <line:10:11> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12a1424d8 <col:15, line:47:3>     |   |-CallExpr 0x12a808d80 <line:12:5, col:48> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12a808aa8 <col:5> 'int ()' Function 0x12a8089f0 'setbc_op' 'int ()'     |   | |-BinaryOperator 0x12a808d40 <col:14, col:37> '<dependent type>' contains-errors '+'     |   | | |-RecoveryExpr 0x12a808d20 <col:14> '<dependent type>' contains-errors lvalue     |   | | `-CallExpr 0x12a808c90 <col:17, col:37> '<dependent type>' contains-errors     |   | |   |-DeclRefExpr 0x12a808bc0 <col:17> 'int ()' Function 0x12a808b08 'bc_j' 'int ()'     |   | |   `-CXXDependentScopeMemberExpr 0x12a808c48 <col:22, col:29> '<dependent type>' contains-errors lvalue .startins     |   | |     `-CXXDependentScopeMemberExpr 0x12a808c00 <col:22, col:25> '<dependent type>' contains-errors lvalue ->cur     |   | |       `-RecoveryExpr 0x12a808be0 <col:22> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x12a808d60 <col:40> '<dependent type>' contains-errors lvalue     |   |-LabelStmt 0x12a809000 <line:20:3, col:10> 'addroot'     |   | `-NullStmt 0x12a808fa8 <col:10>     |   |-BreakStmt 0x12a809020 <line:24:5>     |   |-GotoStmt 0x12a809278 <line:29:5, col:10> 'addroot' 0x12a808fb0     |   |-CallExpr 0x12a809548 <line:32:5, col:50> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12a809370 <col:5> 'int ()' Function 0x12a8092b8 'lua_assert' 'int ()'     |   | `-BinaryOperator 0x12a809528 <col:16, col:49> 'int' contains-errors '&&'     |   |   |-BinaryOperator 0x12a809418 <col:16, col:29> 'int' contains-errors '!='     |   |   | |-CXXDependentScopeMemberExpr 0x12a8093b0 <col:16, col:19> '<dependent type>' contains-errors lvalue ->parent     |   |   | | `-RecoveryExpr 0x12a809390 <col:16> '<dependent type>' contains-errors lvalue     |   |   | `-IntegerLiteral 0x12a8093f8 <col:29> 'int' 0     |   |   `-BinaryOperator 0x12a809508 <col:34, col:49> 'int' contains-errors '!='     |   |     |-CXXDependentScopeMemberExpr 0x12a8094a0 <col:34, col:41> '<dependent type>' contains-errors lvalue .root     |   |     | `-CXXDependentScopeMemberExpr 0x12a809458 <col:34, col:37> '<dependent type>' contains-errors lvalue ->cur     |   |     |   `-RecoveryExpr 0x12a809438 <col:34> '<dependent type>' contains-errors lvalue     |   |     `-IntegerLiteral 0x12a8094e8 <col:49> 'int' 0     |   |-CallExpr 0x12a141f90 <line:33:5, col:72> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12a809650 <col:5> 'int ()' Function 0x12a809598 'lj_asm_patchexit' 'int ()'     |   | |-RecoveryExpr 0x12a809670 <col:22> '<dependent type>' contains-errors lvalue     |   | |-CallExpr 0x12a141e48 <col:25, col:46> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x12a809770 <col:25> 'int ()' Function 0x12a8096b8 'traceref' 'int ()'     |   | | |-RecoveryExpr 0x12a809790 <col:34> '<dependent type>' contains-errors lvalue     |   | | `-CXXDependentScopeMemberExpr 0x12a141e00 <col:37, col:40> '<dependent type>' contains-errors lvalue ->parent     |   | |   `-RecoveryExpr 0x12a8097b0 <col:37> '<dependent type>' contains-errors lvalue     |   | |-CXXDependentScopeMemberExpr 0x12a141e98 <col:49, col:52> '<dependent type>' contains-errors lvalue ->exitno     |   | | `-RecoveryExpr 0x12a141e78 <col:49> '<dependent type>' contains-errors lvalue     |   | `-CXXDependentScopeMemberExpr 0x12a141f48 <col:60, col:67> '<dependent type>' contains-errors lvalue .mcode     |   |   `-CXXDependentScopeMemberExpr 0x12a141f00 <col:60, col:63> '<dependent type>' contains-errors lvalue ->cur     |   |     `-RecoveryExpr 0x12a141ee0 <col:60> '<dependent type>' contains-errors lvalue     |   |-CompoundStmt 0x12a1423e8 <line:37:5, line:42:5>     |   |-BreakStmt 0x12a1423f8 <line:43:5>     |   |-DefaultStmt 0x12a1424b0 <line:44:3, line:45:17>     |   | `-CallExpr 0x12a142488 <col:5, col:17> 'int'     |   |   |-ImplicitCastExpr 0x12a142470 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x12a142400 <col:5> 'int ()' Function 0x12a8092b8 'lua_assert' 'int ()'     |   |   `-IntegerLiteral 0x12a142420 <col:16> 'int' 0     |   `-BreakStmt 0x12a1424d0 <line:46:5>     `-CallExpr 0x12a142708 <line:50:3, col:34> '<dependent type>' contains-errors       |-DeclRefExpr 0x12a142618 <col:3> 'int ()' Function 0x12a142560 'lj_mcode_commit' 'int ()'       |-RecoveryExpr 0x12a142638 <col:19> '<dependent type>' contains-errors lvalue       `-CXXDependentScopeMemberExpr 0x12a1426c0 <col:22, col:29> '<dependent type>' contains-errors lvalue .mcode         `-CXXDependentScopeMemberExpr 0x12a142678 <col:22, col:25> '<dependent type>' contains-errors lvalue ->cur           `-RecoveryExpr 0x12a142658 <col:22> '<dependent type>' contains-errors lvalue ","20660":"`-FunctionDecl 0x136072f48  line:1:12 udf_readpage 'int (struct file *, struct page *)' static   |-ParmVarDecl 0x136056848 <col:25, col:38> col:38 file 'struct file *'   |-ParmVarDecl 0x136072e28 <col:44, col:57> col:57 used page 'struct page *'   `-CompoundStmt 0x136073258 <line:2:1, line:4:1>     `-ReturnStmt 0x136073248 <line:3:2, col:43>       `-CallExpr 0x136073218 <col:9, col:43> '<dependent type>' contains-errors         |-DeclRefExpr 0x136073170 <col:9> 'int ()' Function 0x1360730b8 'mpage_readpage' 'int ()'         |-DeclRefExpr 0x136073190 <col:24> 'struct page *' lvalue ParmVar 0x136072e28 'page' 'struct page *'         `-RecoveryExpr 0x1360731f8 <col:30> '<dependent type>' contains-errors lvalue ","20237":"`-FunctionDecl 0x127827430  line:1:6 invalid qemu_ram_free 'void (struct uc_struct *, int *)'   |-ParmVarDecl 0x12780e248 <col:20, col:38> col:38 used uc 'struct uc_struct *'   |-ParmVarDecl 0x12780e318 <col:42, col:52> col:52 invalid block 'int *'   `-CompoundStmt 0x127827a48 <line:2:1, line:17:1>     |-IfStmt 0x127827560 <line:3:5, line:5:5>     | |-UnaryOperator 0x127827520 <line:3:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x127827508 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x1278274e8 <col:10> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x127827548 <col:17, line:5:5>     |   `-ReturnStmt 0x127827538 <line:4:9>     |-CallExpr 0x127827788 <line:11:5, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1278276e0 <col:5> 'int ()' Function 0x127827628 'QLIST_REMOVE' 'int ()'     | |-RecoveryExpr 0x127827700 <col:18> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x127827768 <col:25> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1278278b8 <line:12:5, col:30> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x127827818 <col:5, col:18> '<dependent type>' contains-errors lvalue .mru_block     | | `-RecoveryExpr 0x1278277f0 <col:5, col:9> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1278277b8 <col:5> 'struct uc_struct *' lvalue ParmVar 0x12780e248 'uc' 'struct uc_struct *'     | `-RecoveryExpr 0x127827898 <col:30> '<dependent type>' contains-errors lvalue     `-CallExpr 0x127827a18 <line:16:5, col:31> '<dependent type>' contains-errors       |-DeclRefExpr 0x1278279b8 <col:5> 'int ()' Function 0x127827900 'reclaim_ramblock' 'int ()'       |-DeclRefExpr 0x1278279d8 <col:22> 'struct uc_struct *' lvalue ParmVar 0x12780e248 'uc' 'struct uc_struct *'       `-RecoveryExpr 0x1278279f8 <col:26> '<dependent type>' contains-errors lvalue ","21012":"`-FunctionDecl 0x143827b10  col:3 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x143827c10 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x143827c78 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x143827ce0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x143827bb8 <<invalid sloc>> Implicit 900 ","20355":"`-FunctionDecl 0x13b00dfe8  line:1:1 invalid scan_unsigned_hexadecimal_number 'int (int **, int *, int, int)'   |-ParmVarDecl 0x13b00dd60 <col:34, col:42> col:42 invalid src 'int **'   |-ParmVarDecl 0x13b00dde0 <col:47, col:54> col:54 invalid end 'int *'   |-ParmVarDecl 0x13b00de60 <col:59, col:63> col:63 used maxlen 'int'   |-ParmVarDecl 0x13b00dee0 <line:2:6, col:19> col:19 invalid enc 'int'   `-CompoundStmt 0x13b028a08 <line:3:1, line:26:1>     |-DeclStmt 0x13b00e1c8 <line:5:3, col:24>     | |-VarDecl 0x13b00e0c8 <col:3, col:16> col:16 used num 'unsigned int'     | `-VarDecl 0x13b00e148 <col:3, col:21> col:21 used val 'unsigned int'     |-BinaryOperator 0x13b00e2a0 <line:9:3, col:9> 'unsigned int' '='     | |-DeclRefExpr 0x13b00e248 <col:3> 'unsigned int' lvalue Var 0x13b00e0c8 'num' 'unsigned int'     | `-ImplicitCastExpr 0x13b00e288 <col:9> 'unsigned int' <IntegralCast>     |   `-IntegerLiteral 0x13b00e268 <col:9> 'int' 0     |-WhileStmt 0x13b028860 <line:10:3, line:23:3>     | |-BinaryOperator 0x13b027e00 <line:10:10, col:31> 'int' contains-errors '&&'     | | |-UnaryOperator 0x13b00e3d8 <col:10, col:11> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x13b00e3c0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-RecoveryExpr 0x13b00e3a0 <col:11> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x13b00e360 <col:19, col:31> 'int' '!='     | |   |-UnaryOperator 0x13b00e328 <col:19, col:25> 'int' postfix '--'     | |   | `-DeclRefExpr 0x13b00e308 <col:19> 'int' lvalue ParmVar 0x13b00de60 'maxlen' 'int'     | |   `-IntegerLiteral 0x13b00e340 <col:31> 'int' 0     | `-CompoundStmt 0x13b028840 <col:34, line:23:3>     |   |-CallExpr 0x13b028000 <line:11:5, col:13> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13b027f80 <col:5> 'int ()' Function 0x13b027ec8 'PFETCH' 'int ()'     |   | `-RecoveryExpr 0x13b027fe0 <col:12> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x13b028810 <line:12:5, line:22:5> has_else     |     |-CallExpr 0x13b0281b0 <line:12:9, col:38> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x13b028108 <col:9> 'int ()' Function 0x13b028050 'ONIGENC_IS_CODE_XDIGIT' 'int ()'     |     | |-RecoveryExpr 0x13b028128 <col:32> '<dependent type>' contains-errors lvalue     |     | `-RecoveryExpr 0x13b028190 <col:37> '<dependent type>' contains-errors lvalue     |     |-CompoundStmt 0x13b028760 <col:41, line:18:5>     |     | |-IfStmt 0x13b028480 <line:14:7, line:15:10>     |     | | |-RecoveryExpr 0x13b028418 <line:14:11, col:42> '_Bool' contains-errors     |     | | `-ReturnStmt 0x13b028470 <line:15:2, col:10>     |     | |   `-UnaryOperator 0x13b028458 <col:9, col:10> 'int' prefix '-'     |     | |     `-IntegerLiteral 0x13b028438 <col:10> 'int' 1     |     | `-BinaryOperator 0x13b028740 <line:17:7, col:41> 'unsigned int' contains-errors '='     |     |   |-DeclRefExpr 0x13b0284a0 <col:7> 'unsigned int' lvalue Var 0x13b00e0c8 'num' 'unsigned int'     |     |   `-BinaryOperator 0x13b028720 <col:13, col:41> '<dependent type>' contains-errors '+'     |     |     |-ParenExpr 0x13b0286b0 <col:13, col:22> 'unsigned int'     |     |     | `-BinaryOperator 0x13b028690 <col:14, col:21> 'unsigned int' '<<'     |     |     |   |-ImplicitCastExpr 0x13b028678 <col:14> 'unsigned int' <LValueToRValue>     |     |     |   | `-DeclRefExpr 0x13b0284c0 <col:14> 'unsigned int' lvalue Var 0x13b00e0c8 'num' 'unsigned int'     |     |     |   `-IntegerLiteral 0x13b0284e0 <col:21> 'int' 4     |     |     `-CallExpr 0x13b0286f0 <col:26, col:41> '<dependent type>' contains-errors     |     |       |-DeclRefExpr 0x13b028558 <col:26> 'int ()' Function 0x13b028228 'XDIGITVAL' 'int ()'     |     |       |-RecoveryExpr 0x13b028578 <col:36> '<dependent type>' contains-errors lvalue     |     |       `-RecoveryExpr 0x13b0286d0 <col:40> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x13b0287f0 <line:19:10, line:22:5>     |       |-ImplicitCastExpr 0x13b0287d0 <line:20:7> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x13b028780 <col:7> 'int ()' Function 0x13b027ec8 'PFETCH' 'int ()'     |       `-BreakStmt 0x13b0287e8 <line:21:7>     |-BinaryOperator 0x13b028988 <line:24:3, col:10> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x13b028950 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x13b028938 <col:4> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x13b028880 <col:4> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x13b028968 <col:10> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x13b0289f8 <line:25:3, col:10>       `-ImplicitCastExpr 0x13b0289e0 <col:10> 'int' <IntegralCast>         `-ImplicitCastExpr 0x13b0289c8 <col:10> 'unsigned int' <LValueToRValue>           `-DeclRefExpr 0x13b0289a8 <col:10> 'unsigned int' lvalue Var 0x13b00e0c8 'num' 'unsigned int' ","21091":"`-FunctionDecl 0x15a827b00  col:2 implicit used memmove 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x15a827c00 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x15a827c68 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x15a827cd0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x15a827ba8 <<invalid sloc>> Implicit 884 ","20269":"`-FunctionDecl 0x1459282e8  line:1:1 invalid vmxnet3_io_bar0_read 'int (void *, int, unsigned int)'   |-ParmVarDecl 0x1459280d8 <col:22, col:28> col:28 opaque 'void *'   |-ParmVarDecl 0x145928170 <col:36, col:43> col:43 invalid addr 'int'   |-ParmVarDecl 0x1459281f0 <col:49, col:58> col:58 used size 'unsigned int'   `-CompoundStmt 0x146008e28 <line:2:1, line:10:1>     |-IfStmt 0x146008c00 <line:3:5, line:6:5>     | |-CallExpr 0x145928628 <line:3:9, line:4:61> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x145928500 <line:3:9> 'int ()' Function 0x145928448 'VMW_IS_MULTIREG_ADDR' 'int ()'     | | |-RecoveryExpr 0x145928520 <col:30> '<dependent type>' contains-errors lvalue     | | |-RecoveryExpr 0x1459285c8 <col:36> '<dependent type>' contains-errors lvalue     | | |-RecoveryExpr 0x1459285e8 <line:4:25> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x145928608 <col:44> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1459287d8 <col:64, line:6:5>     |   `-CallExpr 0x1459287b8 <line:5:9, col:30> 'int'     |     `-ImplicitCastExpr 0x1459287a0 <col:9> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x145928748 <col:9> 'int ()' Function 0x145928690 'g_assert_not_reached' 'int ()'     |-CallExpr 0x146008dc0 <line:8:5, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x146008d00 <col:5> 'int ()' Function 0x146008c48 'VMW_CBPRN' 'int ()'     | |-StringLiteral 0x146008d60 <col:15> 'char[4]' lvalue \"STR\"     | |-RecoveryExpr 0x146008d80 <col:22> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x146008da0 <col:28> 'unsigned int' lvalue ParmVar 0x1459281f0 'size' 'unsigned int'     `-ReturnStmt 0x146008e18 <line:9:5, col:12>       `-IntegerLiteral 0x146008df8 <col:12> 'int' 0 ","20357":"`-FunctionDecl 0x1560da0d8  line:1:13 invalid imap_parser_read_string 'int (struct imap_parser *, const unsigned char *, int)' static   |-ParmVarDecl 0x15780e268 <col:37, col:57> col:57 used parser 'struct imap_parser *'   |-ParmVarDecl 0x15780e318 <line:2:9, col:30> col:30 used data 'const unsigned char *'   |-ParmVarDecl 0x15780e398 <col:36, col:43> col:43 invalid data_size 'int'   `-CompoundStmt 0x157827488 <line:3:1, line:46:1>     |-UnaryExprOrTypeTraitExpr 0x1560da1f0 <line:4:2, col:9> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x1560da1d0 <col:9> '<dependent type>' contains-errors lvalue     `-ForStmt 0x1560daf88 <line:7:2, line:42:2>       |-<<<NULL>>>       |-<<<NULL>>>       |-BinaryOperator 0x1560da320 <line:7:28, col:32> 'int' contains-errors '<'       | |-RecoveryExpr 0x1560da300 <col:28> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x1560da2c0 <col:32> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x1560da390 <col:43, col:44> '<dependent type>' contains-errors postfix '++' cannot overflow       | `-RecoveryExpr 0x1560da370 <col:43> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x1560daf58 <col:48, line:42:2>         |-IfStmt 0x1560da6a0 <line:8:3, line:13:3>         | |-RecoveryExpr 0x1560da3f8 <line:8:7, col:18> '_Bool' contains-errors         | `-CompoundStmt 0x1560da680 <col:23, line:13:3>         |   |-CallExpr 0x1560da640 <line:9:4, col:40> '<dependent type>' contains-errors         |   | |-DeclRefExpr 0x1560da570 <col:4> 'int ()' Function 0x1560da4b8 'imap_parser_save_arg' 'int ()'         |   | |-DeclRefExpr 0x1560da590 <col:25> 'struct imap_parser *' lvalue ParmVar 0x15780e268 'parser' 'struct imap_parser *'         |   | |-DeclRefExpr 0x1560da5b0 <col:33> 'const unsigned char *' lvalue ParmVar 0x15780e318 'data' 'const unsigned char *'         |   | `-RecoveryExpr 0x1560da620 <col:39> '<dependent type>' contains-errors lvalue         |   `-BreakStmt 0x1560da678 <line:12:4>         |-IfStmt 0x1560da960 <line:15:3, line:19:3>         | |-RecoveryExpr 0x1560da710 <line:15:7, col:18> '_Bool' contains-errors         | `-CompoundStmt 0x1560da938 <col:24, line:19:3>         |   |-BinaryOperator 0x1560da7e8 <line:16:4, col:20> '<dependent type>' contains-errors '='         |   | |-RecoveryExpr 0x1560da768 <col:4, col:12> '<dependent type>' contains-errors lvalue         |   | | `-DeclRefExpr 0x1560da730 <col:4> 'struct imap_parser *' lvalue ParmVar 0x15780e268 'parser' 'struct imap_parser *'         |   | `-RecoveryExpr 0x1560da7c8 <col:20> '<dependent type>' contains-errors lvalue         |   |-BinaryOperator 0x1560da8d0 <line:17:4, col:24> '<dependent type>' contains-errors '='         |   | |-RecoveryExpr 0x1560da840 <col:4, col:12> '<dependent type>' contains-errors lvalue         |   | | `-DeclRefExpr 0x1560da808 <col:4> 'struct imap_parser *' lvalue ParmVar 0x15780e268 'parser' 'struct imap_parser *'         |   | `-StringLiteral 0x1560da8b0 <col:24> 'char[4]' lvalue \"STR\"         |   `-ReturnStmt 0x1560da928 <line:18:4, col:11>         |     `-RecoveryExpr 0x1560da908 <col:11> '<dependent type>' contains-errors lvalue         |-IfStmt 0x1560dac40 <line:21:3, line:33:3>         | |-RecoveryExpr 0x1560da9d0 <line:21:7, col:18> '_Bool' contains-errors         | `-CompoundStmt 0x1560dac28 <col:24, line:33:3>         |   `-IfStmt 0x1560dab08 <line:22:4, line:25:4>         |     |-BinaryOperator 0x1560daac8 <line:22:8, col:15> 'int' contains-errors '=='         |     | |-BinaryOperator 0x1560daaa8 <col:8, col:10> '<dependent type>' contains-errors '+'         |     | | |-RecoveryExpr 0x1560daa88 <col:8> '<dependent type>' contains-errors lvalue         |     | | `-IntegerLiteral 0x1560daa08 <col:10> 'int' 1         |     | `-RecoveryExpr 0x1560daa48 <col:15> '<dependent type>' contains-errors lvalue         |     `-CompoundStmt 0x1560daaf0 <col:26, line:25:4>         |       `-BreakStmt 0x1560daae8 <line:24:5>         `-IfStmt 0x1560daf38 <line:36:3, line:41:3>           |-RecoveryExpr 0x1560dae00 <line:36:7, line:37:58> '_Bool' contains-errors           `-CompoundStmt 0x1560daf20 <col:61, line:41:3>             `-BinaryOperator 0x1560daf00 <line:39:4, col:24> '<dependent type>' contains-errors '='               |-RecoveryExpr 0x1560daeb8 <col:4, col:12> '<dependent type>' contains-errors lvalue               | `-DeclRefExpr 0x1560dae80 <col:4> 'struct imap_parser *' lvalue ParmVar 0x15780e268 'parser' 'struct imap_parser *'               `-StringLiteral 0x1560daee0 <col:24> 'char[4]' lvalue \"STR\" ","20467":"`-FunctionDecl 0x134140ca0  col:3 implicit used strcpy 'char *(char *, const char *)' extern   |-ParmVarDecl 0x134140da0 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x134140e08 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x134140d48 <<invalid sloc>> Implicit 885 ","20252":"`-FunctionDecl 0x122928288  line:1:1 invalid keyid_from_pk 'int (int *, int *)'   |-ParmVarDecl 0x122928128 <col:16, col:32> col:32 referenced invalid pk 'int *'   |-ParmVarDecl 0x1229281a8 <col:36, col:41> col:41 referenced invalid keyid 'int *'   `-CompoundStmt 0x122942e28 <line:2:1, line:36:1>     |-IfStmt 0x122928450 <line:6:3, line:7:13>     | |-UnaryOperator 0x122928378 <line:6:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x122928360 <col:8> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x122928340 <col:8> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x122928430 <line:7:5, col:13> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x1229283b0 <col:5> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x122928390 <col:5> 'int *' lvalue ParmVar 0x1229281a8 'keyid' 'int *'     |   `-RecoveryExpr 0x122928410 <col:13> '<dependent type>' contains-errors lvalue     |-IfStmt 0x122942db0 <line:9:3, line:33:5> has_else     | |-BinaryOperator 0x1229285f0 <line:9:7, col:34> 'int' contains-errors '||'     | | |-ArraySubscriptExpr 0x122928510 <col:7, col:18> '<dependent type>' contains-errors lvalue     | | | |-ImplicitCastExpr 0x1229284f8 <col:7, col:11> '<dependent type>' contains-errors <LValueToRValue>     | | | | `-CXXDependentScopeMemberExpr 0x122928490 <col:7, col:11> '<dependent type>' contains-errors lvalue ->keyid     | | | |   `-RecoveryExpr 0x122928470 <col:7> '<dependent type>' contains-errors lvalue     | | | `-IntegerLiteral 0x1229284d8 <col:17> 'int' 0     | | `-ArraySubscriptExpr 0x1229285d0 <col:23, col:34> '<dependent type>' contains-errors lvalue     | |   |-ImplicitCastExpr 0x1229285b8 <col:23, col:27> '<dependent type>' contains-errors <LValueToRValue>     | |   | `-CXXDependentScopeMemberExpr 0x122928550 <col:23, col:27> '<dependent type>' contains-errors lvalue ->keyid     | |   |   `-RecoveryExpr 0x122928530 <col:23> '<dependent type>' contains-errors lvalue     | |   `-IntegerLiteral 0x122928598 <col:33> 'int' 1     | |-CompoundStmt 0x122941990 <line:10:5, line:14:5>     | | |-BinaryOperator 0x122928770 <line:11:7, col:29> '<dependent type>' contains-errors '='     | | | |-ArraySubscriptExpr 0x122928690 <col:7, col:14> '<dependent type>' contains-errors lvalue     | | | | |-ImplicitCastExpr 0x122928678 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | | | | | `-RecoveryExpr 0x122928630 <col:7> '<dependent type>' contains-errors lvalue     | | | | |   `-DeclRefExpr 0x122928610 <col:7> 'int *' lvalue ParmVar 0x1229281a8 'keyid' 'int *'     | | | | `-IntegerLiteral 0x122928658 <col:13> 'int' 0     | | | `-ArraySubscriptExpr 0x122928750 <col:18, col:29> '<dependent type>' contains-errors lvalue     | | |   |-ImplicitCastExpr 0x122928738 <col:18, col:22> '<dependent type>' contains-errors <LValueToRValue>     | | |   | `-CXXDependentScopeMemberExpr 0x1229286d0 <col:18, col:22> '<dependent type>' contains-errors lvalue ->keyid     | | |   |   `-RecoveryExpr 0x1229286b0 <col:18> '<dependent type>' contains-errors lvalue     | | |   `-IntegerLiteral 0x122928718 <col:28> 'int' 0     | | `-BinaryOperator 0x1229418f8 <line:12:7, col:29> '<dependent type>' contains-errors '='     | |   |-ArraySubscriptExpr 0x122941818 <col:7, col:14> '<dependent type>' contains-errors lvalue     | |   | |-ImplicitCastExpr 0x122941800 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   | | `-RecoveryExpr 0x1229287b0 <col:7> '<dependent type>' contains-errors lvalue     | |   | |   `-DeclRefExpr 0x122928790 <col:7> 'int *' lvalue ParmVar 0x1229281a8 'keyid' 'int *'     | |   | `-IntegerLiteral 0x1229287d8 <col:13> 'int' 1     | |   `-ArraySubscriptExpr 0x1229418d8 <col:18, col:29> '<dependent type>' contains-errors lvalue     | |     |-ImplicitCastExpr 0x1229418c0 <col:18, col:22> '<dependent type>' contains-errors <LValueToRValue>     | |     | `-CXXDependentScopeMemberExpr 0x122941858 <col:18, col:22> '<dependent type>' contains-errors lvalue ->keyid     | |     |   `-RecoveryExpr 0x122941838 <col:18> '<dependent type>' contains-errors lvalue     | |     `-IntegerLiteral 0x1229418a0 <col:28> 'int' 1     | `-CompoundStmt 0x122942d90 <line:16:5, line:33:5>     |   |-DeclStmt 0x122941a30 <line:17:7, col:21>     |   | `-VarDecl 0x1229419c8 <col:7, col:19> col:19 referenced invalid dp 'const int *'     |   `-IfStmt 0x122942d60 <line:21:7, line:32:54> has_else     |     |-RecoveryExpr 0x122941c20 <line:21:10> '<dependent type>' contains-errors lvalue     |     |-CompoundStmt 0x122942730 <line:22:2, line:30:2>     |     | |-BinaryOperator 0x122941e60 <line:23:4, col:30> '<dependent type>' contains-errors '='     |     | | |-RecoveryExpr 0x122941c60 <col:4> '<dependent type>' contains-errors lvalue     |     | | | `-DeclRefExpr 0x122941c40 <col:4> 'const int *' lvalue Var 0x1229419c8 'dp' 'const int *'     |     | | `-CallExpr 0x122941e30 <col:9, col:30> '<dependent type>' contains-errors     |     | |   |-DeclRefExpr 0x122941d68 <col:9> 'int ()' Function 0x122941cb0 'gcry_md_read' 'int ()'     |     | |   |-RecoveryExpr 0x122941e10 <col:24> '<dependent type>' contains-errors lvalue     |     | |   `-IntegerLiteral 0x122941da0 <col:28> 'int' 0     |     | |-BinaryOperator 0x1229420a8 <line:24:4, col:34> '<dependent type>' contains-errors '='     |     | | |-ArraySubscriptExpr 0x122941f00 <col:4, col:11> '<dependent type>' contains-errors lvalue     |     | | | |-ImplicitCastExpr 0x122941ee8 <col:4> '<dependent type>' contains-errors <LValueToRValue>     |     | | | | `-RecoveryExpr 0x122941ea0 <col:4> '<dependent type>' contains-errors lvalue     |     | | | |   `-DeclRefExpr 0x122941e80 <col:4> 'int *' lvalue ParmVar 0x1229281a8 'keyid' 'int *'     |     | | | `-IntegerLiteral 0x122941ec8 <col:10> 'int' 0     |     | | `-CallExpr 0x122942080 <col:15, col:34> '<dependent type>' contains-errors     |     | |   |-DeclRefExpr 0x122942000 <col:15> 'int ()' Function 0x122941f48 'buf32_to_u32' 'int ()'     |     | |   `-BinaryOperator 0x122942060 <col:29, col:32> '<dependent type>' contains-errors '+'     |     | |     |-RecoveryExpr 0x122942020 <col:29> '<dependent type>' contains-errors lvalue     |     | |     `-IntegerLiteral 0x122942040 <col:32> 'int' 12     |     | |-BinaryOperator 0x122942210 <line:25:4, col:34> '<dependent type>' contains-errors '='     |     | | |-ArraySubscriptExpr 0x122942148 <col:4, col:11> '<dependent type>' contains-errors lvalue     |     | | | |-ImplicitCastExpr 0x122942130 <col:4> '<dependent type>' contains-errors <LValueToRValue>     |     | | | | `-RecoveryExpr 0x1229420e8 <col:4> '<dependent type>' contains-errors lvalue     |     | | | |   `-DeclRefExpr 0x1229420c8 <col:4> 'int *' lvalue ParmVar 0x1229281a8 'keyid' 'int *'     |     | | | `-IntegerLiteral 0x122942110 <col:10> 'int' 1     |     | | `-CallExpr 0x1229421e8 <col:15, col:34> '<dependent type>' contains-errors     |     | |   |-DeclRefExpr 0x122942168 <col:15> 'int ()' Function 0x122941f48 'buf32_to_u32' 'int ()'     |     | |   `-BinaryOperator 0x1229421c8 <col:29, col:32> '<dependent type>' contains-errors '+'     |     | |     |-RecoveryExpr 0x122942188 <col:29> '<dependent type>' contains-errors lvalue     |     | |     `-IntegerLiteral 0x1229421a8 <col:32> 'int' 16     |     | |-CallExpr 0x122942408 <line:27:4, col:21> '<dependent type>' contains-errors     |     | | |-DeclRefExpr 0x122942388 <col:4> 'int ()' Function 0x1229422d0 'gcry_md_close' 'int ()'     |     | | `-RecoveryExpr 0x1229423e8 <col:19> '<dependent type>' contains-errors lvalue     |     | |-BinaryOperator 0x122942590 <line:28:4, col:26> '<dependent type>' contains-errors '='     |     | | |-ArraySubscriptExpr 0x1229424f8 <col:4, col:15> '<dependent type>' contains-errors lvalue     |     | | | |-ImplicitCastExpr 0x1229424e0 <col:4, col:8> '<dependent type>' contains-errors <LValueToRValue>     |     | | | | `-CXXDependentScopeMemberExpr 0x122942478 <col:4, col:8> '<dependent type>' contains-errors lvalue ->keyid     |     | | | |   `-RecoveryExpr 0x122942450 <col:4> '<dependent type>' contains-errors lvalue     |     | | | |     `-DeclRefExpr 0x122942430 <col:4> 'int *' lvalue ParmVar 0x122928128 'pk' 'int *'     |     | | | `-IntegerLiteral 0x1229424c0 <col:14> 'int' 0     |     | | `-ArraySubscriptExpr 0x122942570 <col:19, col:26> '<dependent type>' contains-errors lvalue     |     | |   |-ImplicitCastExpr 0x122942558 <col:19> '<dependent type>' contains-errors <LValueToRValue>     |     | |   | `-RecoveryExpr 0x122942518 <col:19> '<dependent type>' contains-errors lvalue     |     | |   `-IntegerLiteral 0x122942538 <col:25> 'int' 0     |     | `-BinaryOperator 0x122942710 <line:29:4, col:26> '<dependent type>' contains-errors '='     |     |   |-ArraySubscriptExpr 0x122942678 <col:4, col:15> '<dependent type>' contains-errors lvalue     |     |   | |-ImplicitCastExpr 0x122942660 <col:4, col:8> '<dependent type>' contains-errors <LValueToRValue>     |     |   | | `-CXXDependentScopeMemberExpr 0x1229425f8 <col:4, col:8> '<dependent type>' contains-errors lvalue ->keyid     |     |   | |   `-RecoveryExpr 0x1229425d0 <col:4> '<dependent type>' contains-errors lvalue     |     |   | |     `-DeclRefExpr 0x1229425b0 <col:4> 'int *' lvalue ParmVar 0x122928128 'pk' 'int *'     |     |   | `-IntegerLiteral 0x122942640 <col:14> 'int' 1     |     |   `-ArraySubscriptExpr 0x1229426f0 <col:19, col:26> '<dependent type>' contains-errors lvalue     |     |     |-ImplicitCastExpr 0x1229426d8 <col:19> '<dependent type>' contains-errors <LValueToRValue>     |     |     | `-RecoveryExpr 0x122942698 <col:19> '<dependent type>' contains-errors lvalue     |     |     `-IntegerLiteral 0x1229426b8 <col:25> 'int' 1     |     `-BinaryOperator 0x122942d40 <line:32:2, col:54> '<dependent type>' contains-errors '='     |       |-ArraySubscriptExpr 0x122942bd8 <col:2, col:13> '<dependent type>' contains-errors lvalue     |       | |-ImplicitCastExpr 0x122942bc0 <col:2, col:6> '<dependent type>' contains-errors <LValueToRValue>     |       | | `-CXXDependentScopeMemberExpr 0x1229427b8 <col:2, col:6> '<dependent type>' contains-errors lvalue ->keyid     |       | |   `-RecoveryExpr 0x122942790 <col:2> '<dependent type>' contains-errors lvalue     |       | |     `-DeclRefExpr 0x122942770 <col:2> 'int *' lvalue ParmVar 0x122928128 'pk' 'int *'     |       | `-IntegerLiteral 0x122942800 <col:12> 'int' 0     |       `-BinaryOperator 0x122942d20 <col:15, col:54> '<dependent type>' contains-errors '='     |         |-ArraySubscriptExpr 0x122942c10 <col:15, col:26> '<dependent type>' contains-errors lvalue     |         | |-ImplicitCastExpr 0x122942bf8 <col:15, col:19> '<dependent type>' contains-errors <LValueToRValue>     |         | | `-CXXDependentScopeMemberExpr 0x122942878 <col:15, col:19> '<dependent type>' contains-errors lvalue ->keyid     |         | |   `-RecoveryExpr 0x122942858 <col:15> '<dependent type>' contains-errors lvalue     |         | `-IntegerLiteral 0x1229428c0 <col:25> 'int' 1     |         `-BinaryOperator 0x122942d00 <col:28, col:54> '<dependent type>' contains-errors '='     |           |-ArraySubscriptExpr 0x122942c48 <col:28, col:35> '<dependent type>' contains-errors lvalue     |           | |-ImplicitCastExpr 0x122942c30 <col:28> '<dependent type>' contains-errors <LValueToRValue>     |           | | `-RecoveryExpr 0x122942918 <col:28> '<dependent type>' contains-errors lvalue     |           | `-IntegerLiteral 0x122942938 <col:34> 'int' 0     |           `-BinaryOperator 0x122942ce0 <col:37, col:54> '<dependent type>' contains-errors '='     |             |-ArraySubscriptExpr 0x122942c80 <col:37, col:44> '<dependent type>' contains-errors lvalue     |             | |-ImplicitCastExpr 0x122942c68 <col:37> '<dependent type>' contains-errors <LValueToRValue>     |             | | `-RecoveryExpr 0x122942990 <col:37> '<dependent type>' contains-errors lvalue     |             | `-IntegerLiteral 0x1229429b0 <col:43> 'int' 1     |             `-BinaryOperator 0x122942cc0 <col:46, col:54> '<dependent type>' contains-errors '='     |               |-RecoveryExpr 0x122942ca0 <col:46> '<dependent type>' contains-errors lvalue     |               `-IntegerLiteral 0x122942a20 <col:54> 'unsigned int' 4294967295     `-ReturnStmt 0x122942e18 <line:35:3, col:10>       `-RecoveryExpr 0x122942df8 <col:10> '<dependent type>' contains-errors lvalue ","20486":"`-FunctionDecl 0x12980e098  line:1:1 invalid str_lower_case_match 'int (int, int, const int *, const int *, const int *, const int *)'   |-ParmVarDecl 0x12980dcf0 <col:22, col:35> col:35 invalid enc 'int'   |-ParmVarDecl 0x12980dd70 <col:40, col:44> col:44 used case_fold_flag 'int'   |-ParmVarDecl 0x12980ddf0 <line:2:22, col:35> col:35 invalid t 'const int *'   |-ParmVarDecl 0x12980de70 <col:38, col:51> col:51 invalid tend 'const int *'   |-ParmVarDecl 0x12980def0 <line:3:22, col:35> col:35 invalid p 'const int *'   |-ParmVarDecl 0x12980df70 <col:38, col:51> col:51 invalid end 'const int *'   `-CompoundStmt 0x12b009168 <line:4:1, line:18:1>     |-DeclStmt 0x12980e1f0 <line:5:3, col:13>     | `-VarDecl 0x12980e188 <col:3, col:7> col:7 used lowlen 'int'     |-WhileStmt 0x12b009118 <line:8:3, line:15:3>     | |-BinaryOperator 0x12980e290 <line:8:10, col:14> 'int' contains-errors '<'     | | |-RecoveryExpr 0x12980e250 <col:10> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12980e270 <col:14> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12b0090f8 <col:20, line:15:3>     |   |-BinaryOperator 0x12b008e58 <line:9:5, col:72> 'int' contains-errors '='     |   | |-DeclRefExpr 0x12980e2b0 <col:5> 'int' lvalue Var 0x12980e188 'lowlen' 'int'     |   | `-CallExpr 0x12b008e10 <col:14, col:72> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x12b008cb8 <col:14> 'int ()' Function 0x12b008c00 'ONIGENC_MBC_CASE_FOLD' 'int ()'     |   |   |-RecoveryExpr 0x12b008cd8 <col:36> '<dependent type>' contains-errors lvalue     |   |   |-DeclRefExpr 0x12b008cf8 <col:41> 'int' lvalue ParmVar 0x12980dd70 'case_fold_flag' 'int'     |   |   |-UnaryOperator 0x12b008d38 <col:57, col:58> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   | `-RecoveryExpr 0x12b008d18 <col:58> '<dependent type>' contains-errors lvalue     |   |   |-RecoveryExpr 0x12b008d50 <col:61> '<dependent type>' contains-errors lvalue     |   |   `-RecoveryExpr 0x12b008df0 <col:66> '<dependent type>' contains-errors lvalue     |   `-WhileStmt 0x12b0090d8 <line:11:5, line:14:5>     |     |-BinaryOperator 0x12b008ee8 <line:11:12, col:21> 'int' '>'     |     | |-ImplicitCastExpr 0x12b008ed0 <col:12> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x12b008e90 <col:12> 'int' lvalue Var 0x12980e188 'lowlen' 'int'     |     | `-IntegerLiteral 0x12b008eb0 <col:21> 'int' 0     |     `-CompoundStmt 0x12b0090b8 <col:24, line:14:5>     |       |-IfStmt 0x12b009060 <line:12:7, col:32>     |       | |-BinaryOperator 0x12b009010 <col:11, col:21> 'int' contains-errors '!='     |       | | |-UnaryOperator 0x12b008f40 <col:11, col:13> '<dependent type>' contains-errors prefix '*' cannot overflow     |       | | | `-UnaryOperator 0x12b008f28 <col:12, col:13> '<dependent type>' contains-errors postfix '++' cannot overflow     |       | | |   `-RecoveryExpr 0x12b008f08 <col:12> '<dependent type>' contains-errors lvalue     |       | | `-UnaryOperator 0x12b008ff8 <col:19, col:21> '<dependent type>' contains-errors prefix '*' cannot overflow     |       | |   `-UnaryOperator 0x12b008fe0 <col:20, col:21> '<dependent type>' contains-errors postfix '++' cannot overflow     |       | |     `-RecoveryExpr 0x12b008fc0 <col:20> '<dependent type>' contains-errors lvalue     |       | `-ReturnStmt 0x12b009050 <col:25, col:32>     |       |   `-IntegerLiteral 0x12b009030 <col:32> 'int' 0     |       `-UnaryOperator 0x12b0090a0 <line:13:7, col:13> 'int' postfix '--'     |         `-DeclRefExpr 0x12b009080 <col:7> 'int' lvalue Var 0x12980e188 'lowlen' 'int'     `-ReturnStmt 0x12b009158 <line:17:3, col:10>       `-IntegerLiteral 0x12b009138 <col:10> 'int' 1 ","20578":"`-FunctionDecl 0x106827d10  col:13 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x106827e10 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x106827e78 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x106827ee0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x106827db8 <<invalid sloc>> Implicit 883 ","20785":"`-FunctionDecl 0x13a940b48  line:1:5 imap_msg_close 'int (struct Context *, struct Message *)'   |-ParmVarDecl 0x13a928648 <col:20, col:36> col:36 ctx 'struct Context *'   |-ParmVarDecl 0x13a940a28 <col:41, col:57> col:57 used msg 'struct Message *'   `-CompoundStmt 0x13a940e40 <line:2:1, line:4:1>     `-ReturnStmt 0x13a940e30 <line:3:3, col:35>       `-CallExpr 0x13a940e08 <col:10, col:35> '<dependent type>' contains-errors         |-DeclRefExpr 0x13a940d70 <col:10> 'int ()' Function 0x13a940cb8 'mutt_file_fclose' 'int ()'         `-UnaryOperator 0x13a940df0 <col:27, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow           `-RecoveryExpr 0x13a940dc8 <col:28, col:33> '<dependent type>' contains-errors lvalue             `-DeclRefExpr 0x13a940d90 <col:28> 'struct Message *' lvalue ParmVar 0x13a940a28 'msg' 'struct Message *' ","20524":"`-FunctionDecl 0x14a928758  line:1:1 ext2_xattr_cache_insert 'int (struct buffer_head *)'   |-ParmVarDecl 0x14a928648 <col:25, col:45> col:45 used bh 'struct buffer_head *'   `-CompoundStmt 0x14a942cd8 <line:2:1, line:24:1>     |-DeclStmt 0x14a940c58 <line:4:2, col:27>     | |-RecordDecl 0x14a940a68 <col:2, col:9> col:9 struct mb_cache_entry     | `-VarDecl 0x14a940bd8 <col:2, col:25> col:25 used ce 'struct mb_cache_entry *'     |-DeclStmt 0x14a940cf0 <line:5:2, col:11>     | `-VarDecl 0x14a940c88 <col:2, col:6> col:6 used error 'int'     |-BinaryOperator 0x14a940f50 <line:7:2, col:54> 'struct mb_cache_entry *' contains-errors '='     | |-DeclRefExpr 0x14a940d08 <col:2> 'struct mb_cache_entry *' lvalue Var 0x14a940bd8 'ce' 'struct mb_cache_entry *'     | `-CallExpr 0x14a940f20 <col:7, col:54> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14a940e40 <col:7> 'int ()' Function 0x14a940d88 'mb_cache_entry_alloc' 'int ()'     |   |-RecoveryExpr 0x14a940ee0 <col:28> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x14a940f00 <col:46> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14a941068 <line:8:2, line:9:11>     | |-UnaryOperator 0x14a940fa8 <line:8:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14a940f90 <col:7> 'struct mb_cache_entry *' <LValueToRValue>     | |   `-DeclRefExpr 0x14a940f70 <col:7> 'struct mb_cache_entry *' lvalue Var 0x14a940bd8 'ce' 'struct mb_cache_entry *'     | `-ReturnStmt 0x14a941058 <line:9:3, col:11>     |   `-UnaryOperator 0x14a941040 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14a941028 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14a941008 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14a941360 <line:10:2, col:67> 'int' contains-errors '='     | |-DeclRefExpr 0x14a941088 <col:2> 'int' lvalue Var 0x14a940c88 'error' 'int'     | `-CallExpr 0x14a941320 <col:10, col:67> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14a941188 <col:10> 'int ()' Function 0x14a9410d0 'mb_cache_entry_insert' 'int ()'     |   |-DeclRefExpr 0x14a9411a8 <col:32> 'struct mb_cache_entry *' lvalue Var 0x14a940bd8 'ce' 'struct mb_cache_entry *'     |   |-RecoveryExpr 0x14a941200 <col:36, col:40> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14a9411c8 <col:36> 'struct buffer_head *' lvalue ParmVar 0x14a928648 'bh' 'struct buffer_head *'     |   |-RecoveryExpr 0x14a941260 <col:48, col:52> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14a941228 <col:48> 'struct buffer_head *' lvalue ParmVar 0x14a928648 'bh' 'struct buffer_head *'     |   `-RecoveryExpr 0x14a941300 <col:63> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14a942c60 <line:11:2, line:22:2> has_else     | |-ImplicitCastExpr 0x14a9413a0 <line:11:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x14a941380 <col:6> 'int' lvalue Var 0x14a940c88 'error' 'int'     | |-CompoundStmt 0x14a942960 <col:13, line:18:2>     | | |-CallExpr 0x14a941528 <line:12:3, col:25> 'int'     | | | |-ImplicitCastExpr 0x14a941510 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x14a941498 <col:3> 'int ()' Function 0x14a9413e0 'mb_cache_entry_free' 'int ()'     | | | `-ImplicitCastExpr 0x14a941550 <col:23> 'struct mb_cache_entry *' <LValueToRValue>     | | |   `-DeclRefExpr 0x14a9414b8 <col:23> 'struct mb_cache_entry *' lvalue Var 0x14a940bd8 'ce' 'struct mb_cache_entry *'     | | `-IfStmt 0x14a942940 <line:13:3, line:17:3>     | |   |-BinaryOperator 0x14a941640 <line:13:7, col:17> 'int' contains-errors '=='     | |   | |-DeclRefExpr 0x14a941568 <col:7> 'int' lvalue Var 0x14a940c88 'error' 'int'     | |   | `-UnaryOperator 0x14a941628 <col:16, col:17> '<dependent type>' contains-errors prefix '-' cannot overflow     | |   |   `-ImplicitCastExpr 0x14a941610 <col:17> '<dependent type>' contains-errors <LValueToRValue>     | |   |     `-RecoveryExpr 0x14a9415f0 <col:17> '<dependent type>' contains-errors lvalue     | |   `-CompoundStmt 0x14a942920 <col:24, line:17:3>     | |     |-CallExpr 0x14a942888 <line:14:4, line:15:50> '<dependent type>' contains-errors     | |     | |-DeclRefExpr 0x14a941740 <line:14:4> 'int ()' Function 0x14a941688 'ea_bdebug' 'int ()'     | |     | |-DeclRefExpr 0x14a941760 <col:14> 'struct buffer_head *' lvalue ParmVar 0x14a928648 'bh' 'struct buffer_head *'     | |     | |-StringLiteral 0x14a9417c0 <col:18> 'char[4]' lvalue \"STR\"     | |     | `-CallExpr 0x14a942860 <line:15:5, col:49> '<dependent type>' contains-errors     | |     |   |-DeclRefExpr 0x14a9418c0 <col:5> 'int ()' Function 0x14a941808 'atomic_read' 'int ()'     | |     |   `-UnaryOperator 0x14a942848 <col:17, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     |     `-CXXDependentScopeMemberExpr 0x14a942800 <col:18, col:36> '<dependent type>' contains-errors lvalue ->c_entry_count     | |     |       `-RecoveryExpr 0x14a9419b8 <col:18> '<dependent type>' contains-errors lvalue     | |     `-BinaryOperator 0x14a942900 <line:16:4, col:12> 'int' '='     | |       |-DeclRefExpr 0x14a9428c0 <col:4> 'int' lvalue Var 0x14a940c88 'error' 'int'     | |       `-IntegerLiteral 0x14a9428e0 <col:12> 'int' 0     | `-CompoundStmt 0x14a942c48 <line:18:9, line:22:2>     |   `-CallExpr 0x14a942c08 <line:21:3, col:28> 'int'     |     |-ImplicitCastExpr 0x14a942bf0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14a942bb0 <col:3> 'int ()' Function 0x14a942af8 'mb_cache_entry_release' 'int ()'     |     `-ImplicitCastExpr 0x14a942c30 <col:26> 'struct mb_cache_entry *' <LValueToRValue>     |       `-DeclRefExpr 0x14a942bd0 <col:26> 'struct mb_cache_entry *' lvalue Var 0x14a940bd8 'ce' 'struct mb_cache_entry *'     `-ReturnStmt 0x14a942cc8 <line:23:2, col:9>       `-ImplicitCastExpr 0x14a942cb0 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x14a942c90 <col:9> 'int' lvalue Var 0x14a940c88 'error' 'int' ","20948":"`-FunctionDecl 0x12780de38  line:1:1 TEST_F 'int (int, int)'   |-ParmVarDecl 0x12780dd58 <col:8> col:8 ExprMatchTest 'int'   |-ParmVarDecl 0x12780dcd8 <col:23> col:23 EqWithLHSFieldPathMatchesCorrectly 'int'   `-CompoundStmt 0x127827098 <col:59, line:8:1>     |-CallExpr 0x12780e280 <line:2:5, col:34> 'int'     | |-ImplicitCastExpr 0x12780e268 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12780e060 <col:5> 'int ()' Function 0x12780dfa8 'createMatcher' 'int ()'     | `-CallExpr 0x12780e228 <col:19, col:33> 'int'     |   |-ImplicitCastExpr 0x12780e210 <col:19> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12780e160 <col:19> 'int ()' Function 0x12780e0a8 'fromjson' 'int ()'     |   `-ImplicitCastExpr 0x12780e250 <col:28> 'char *' <ArrayToPointerDecay>     |     `-StringLiteral 0x12780e1c0 <col:28> 'char[4]' lvalue \"STR\"     |-CallExpr 0x127826cd0 <line:4:5, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12780e388 <col:5> 'int ()' Function 0x12780e2d0 'ASSERT_TRUE' 'int ()'     | `-CallExpr 0x127826ca8 <col:17, col:41> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1278266b8 <col:17> 'int ()' Function 0x127826600 'matches' 'int ()'     |   `-CallExpr 0x127826c80 <col:25, col:40> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1278267b8 <col:25> 'int ()' Function 0x127826700 'BSON' 'int ()'     |     `-RecoveryExpr 0x127826c50 <col:30, col:39> '<dependent type>' contains-errors lvalue     |       |-StringLiteral 0x1278267d8 <col:30> 'char[4]' lvalue \"STR\"     |       `-IntegerLiteral 0x1278267f8 <col:39> 'int' 3     |-CallExpr 0x127826f10 <line:6:5, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x127826dd8 <col:5> 'int ()' Function 0x127826d20 'ASSERT_FALSE' 'int ()'     | `-CallExpr 0x127826ee8 <col:18, col:42> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x127826df8 <col:18> 'int ()' Function 0x127826600 'matches' 'int ()'     |   `-CallExpr 0x127826ec0 <col:26, col:41> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x127826e18 <col:26> 'int ()' Function 0x127826700 'BSON' 'int ()'     |     `-RecoveryExpr 0x127826e90 <col:31, col:40> '<dependent type>' contains-errors lvalue     |       |-StringLiteral 0x127826e38 <col:31> 'char[4]' lvalue \"STR\"     |       `-IntegerLiteral 0x127826e58 <col:40> 'int' 1     `-CallExpr 0x127827070 <line:7:5, col:44> '<dependent type>' contains-errors       |-DeclRefExpr 0x127826f38 <col:5> 'int ()' Function 0x127826d20 'ASSERT_FALSE' 'int ()'       `-CallExpr 0x127827048 <col:18, col:43> '<dependent type>' contains-errors         |-DeclRefExpr 0x127826f58 <col:18> 'int ()' Function 0x127826600 'matches' 'int ()'         `-CallExpr 0x127827020 <col:26, col:42> '<dependent type>' contains-errors           |-DeclRefExpr 0x127826f78 <col:26> 'int ()' Function 0x127826700 'BSON' 'int ()'           `-RecoveryExpr 0x127826ff0 <col:31, col:40> '<dependent type>' contains-errors lvalue             |-StringLiteral 0x127826f98 <col:31> 'char[4]' lvalue \"STR\"             `-IntegerLiteral 0x127826fb8 <col:40> 'int' 10 ","21093":"`-FunctionDecl 0x12d00f348  col:17 implicit used strerror 'char *(int)' extern   |-ParmVarDecl 0x12e846058 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x12e846000 <<invalid sloc>> Implicit 901 ","21044":"`-FunctionDecl 0x14c80df18  line:1:1 invalid isis_print_mt_port_cap_subtlv 'int (int *, const int *, int)'   |-ParmVarDecl 0x14c80dd28 <col:31, col:51> col:51 invalid ndo 'int *'   |-ParmVarDecl 0x14c80dda8 <line:2:31, col:46> col:46 referenced invalid tptr 'const int *'   |-ParmVarDecl 0x14c80de28 <col:52, col:56> col:56 used len 'int'   `-CompoundStmt 0x14d8089e8 <line:3:1, line:106:1>     |-DeclStmt 0x14c80e0f0 <line:4:3, col:26>     | |-VarDecl 0x14c80dff0 <col:3, col:7> col:7 used stlv_type 'int'     | `-VarDecl 0x14c80e070 <col:3, col:18> col:18 used stlv_len 'int'     |-DeclStmt 0x14c80e2f8 <line:5:3, col:53>     | |-RecordDecl 0x14c80e108 <col:9, col:16> col:16 struct isis_subtlv_spb_mcid     | `-VarDecl 0x14c80e278 <col:3, col:38> col:38 used subtlv_spb_mcid 'const struct isis_subtlv_spb_mcid *'     |-DeclStmt 0x14c80e390 <line:6:3, col:8>     | `-VarDecl 0x14c80e328 <col:3, col:7> col:7 used i 'int'     |-WhileStmt 0x14c82d378 <line:8:3, line:98:3>     | |-BinaryOperator 0x14c827400 <line:8:10, col:16> 'int' '>'     | | |-ImplicitCastExpr 0x14c80e3e8 <col:10> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x14c80e3a8 <col:10> 'int' lvalue ParmVar 0x14c80de28 'len' 'int'     | | `-IntegerLiteral 0x14c80e3c8 <col:16> 'int' 2     | `-CompoundStmt 0x14c82d348 <line:9:3, line:98:3>     |   |-BinaryOperator 0x14c8274b0 <line:10:5, col:25> 'int' contains-errors '='     |   | |-DeclRefExpr 0x14c827420 <col:5> 'int' lvalue Var 0x14c80dff0 'stlv_type' 'int'     |   | `-UnaryOperator 0x14c827498 <col:17, col:25> '<dependent type>' contains-errors prefix '*' cannot overflow     |   |   `-ParenExpr 0x14c827478 <col:18, col:25> '<dependent type>' contains-errors     |   |     `-UnaryOperator 0x14c827460 <col:19, col:23> '<dependent type>' contains-errors postfix '++' cannot overflow     |   |       `-RecoveryExpr 0x14c827440 <col:19> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x14c827560 <line:11:5, col:25> 'int' contains-errors '='     |   | |-DeclRefExpr 0x14c8274d0 <col:5> 'int' lvalue Var 0x14c80e070 'stlv_len' 'int'     |   | `-UnaryOperator 0x14c827548 <col:17, col:25> '<dependent type>' contains-errors prefix '*' cannot overflow     |   |   `-ParenExpr 0x14c827528 <col:18, col:25> '<dependent type>' contains-errors     |   |     `-UnaryOperator 0x14c827510 <col:19, col:23> '<dependent type>' contains-errors postfix '++' cannot overflow     |   |       `-RecoveryExpr 0x14c8274f0 <col:19> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x14c827a68 <line:20:5, col:16> 'int' '='     |   | |-DeclRefExpr 0x14c8279d0 <col:5> 'int' lvalue ParmVar 0x14c80de28 'len' 'int'     |   | `-BinaryOperator 0x14c827a48 <col:11, col:16> 'int' '-'     |   |   |-ImplicitCastExpr 0x14c827a30 <col:11> 'int' <LValueToRValue>     |   |   | `-DeclRefExpr 0x14c8279f0 <col:11> 'int' lvalue ParmVar 0x14c80de28 'len' 'int'     |   |   `-IntegerLiteral 0x14c827a10 <col:16> 'int' 2     |   `-SwitchStmt 0x14c827ac0 <line:22:5, line:97:5>     |     |-ImplicitCastExpr 0x14c827aa8 <line:22:13> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x14c827a88 <col:13> 'int' lvalue Var 0x14c80dff0 'stlv_type' 'int'     |     `-CompoundStmt 0x14c82d318 <line:23:5, line:97:5>     |       |-CompoundStmt 0x14c82b860 <line:25:7, line:43:7>     |       | |-CallExpr 0x14c827d38 <line:26:9, col:57> '<dependent type>' contains-errors     |       | | |-DeclRefExpr 0x14c827be0 <col:9> 'int ()' Function 0x14c827b28 'ND_TCHECK2' 'int ()'     |       | | |-UnaryOperator 0x14c827d00 <col:20, col:26> '<dependent type>' contains-errors prefix '*' cannot overflow     |       | | | `-ImplicitCastExpr 0x14c827ce8 <col:21, col:26> '<dependent type>' contains-errors <LValueToRValue>     |       | | |   `-ParenExpr 0x14c827c20 <col:21, col:26> '<dependent type>' contains-errors lvalue     |       | | |     `-RecoveryExpr 0x14c827c00 <col:22> '<dependent type>' contains-errors lvalue     |       | | `-RecoveryExpr 0x14c827d18 <col:29> '<dependent type>' contains-errors lvalue     |       | |-BinaryOperator 0x14c827e60 <line:28:9, col:64> 'const struct isis_subtlv_spb_mcid *' contains-errors '='     |       | | |-DeclRefExpr 0x14c827d68 <col:9> 'const struct isis_subtlv_spb_mcid *' lvalue Var 0x14c80e278 'subtlv_spb_mcid' 'const struct isis_subtlv_spb_mcid *'     |       | | `-CStyleCastExpr 0x14c827e38 <col:27, col:64> 'const struct isis_subtlv_spb_mcid *' contains-errors <Dependent>     |       | |   `-RecoveryExpr 0x14c827d88 <col:64> '<dependent type>' contains-errors lvalue     |       | |-CallExpr 0x14c827f20 <line:30:9, col:31> '<dependent type>' contains-errors     |       | | |-DeclRefExpr 0x14c827e80 <col:9> 'int ()' Function 0x14c827628 'ND_PRINT' 'int ()'     |       | | `-ParenExpr 0x14c827f00 <col:18, col:30> 'char[4]' contains-errors     |       | |   `-BinaryOperator 0x14c827ee0 <col:19, col:25> 'char[4]' contains-errors ','     |       | |     |-RecoveryExpr 0x14c827ea0 <col:19> '<dependent type>' contains-errors lvalue     |       | |     `-StringLiteral 0x14c827ec0 <col:25> 'char[4]' lvalue \"STR\"     |       | |-CallExpr 0x14c82b570 <line:31:9, col:54> '<dependent type>' contains-errors     |       | | |-DeclRefExpr 0x14c828028 <col:9> 'int ()' Function 0x14c827f70 'isis_print_mcid' 'int ()'     |       | | |-RecoveryExpr 0x14c828048 <col:25> '<dependent type>' contains-errors lvalue     |       | | `-UnaryOperator 0x14c82b558 <col:30, col:53> '<dependent type>' contains-errors prefix '&' cannot overflow     |       | |   `-ParenExpr 0x14c82b538 <col:31, col:53> '<dependent type>' contains-errors lvalue     |       | |     `-RecoveryExpr 0x14c82b510 <col:32, col:49> '<dependent type>' contains-errors lvalue     |       | |       `-DeclRefExpr 0x14c828068 <col:32> 'const struct isis_subtlv_spb_mcid *' lvalue Var 0x14c80e278 'subtlv_spb_mcid' 'const struct isis_subtlv_spb_mcid *'     |       | |-CallExpr 0x14c82b640 <line:35:9, col:31> '<dependent type>' contains-errors     |       | | |-DeclRefExpr 0x14c82b5a0 <col:9> 'int ()' Function 0x14c827628 'ND_PRINT' 'int ()'     |       | | `-ParenExpr 0x14c82b620 <col:18, col:30> 'char[4]' contains-errors     |       | |   `-BinaryOperator 0x14c82b600 <col:19, col:25> 'char[4]' contains-errors ','     |       | |     |-RecoveryExpr 0x14c82b5c0 <col:19> '<dependent type>' contains-errors lvalue     |       | |     `-StringLiteral 0x14c82b5e0 <col:25> 'char[4]' lvalue \"STR\"     |       | |-CallExpr 0x14c82b740 <line:36:9, col:58> '<dependent type>' contains-errors     |       | | |-DeclRefExpr 0x14c82b668 <col:9> 'int ()' Function 0x14c827f70 'isis_print_mcid' 'int ()'     |       | | |-RecoveryExpr 0x14c82b688 <col:25> '<dependent type>' contains-errors lvalue     |       | | `-UnaryOperator 0x14c82b728 <col:30, col:57> '<dependent type>' contains-errors prefix '&' cannot overflow     |       | |   `-ParenExpr 0x14c82b708 <col:31, col:57> '<dependent type>' contains-errors lvalue     |       | |     `-RecoveryExpr 0x14c82b6e0 <col:32, col:49> '<dependent type>' contains-errors lvalue     |       | |       `-DeclRefExpr 0x14c82b6a8 <col:32> 'const struct isis_subtlv_spb_mcid *' lvalue Var 0x14c80e278 'subtlv_spb_mcid' 'const struct isis_subtlv_spb_mcid *'     |       | `-BreakStmt 0x14c82b858 <line:42:9>     |       |-CompoundStmt 0x14c82c860 <line:46:7, line:68:7>     |       | |-CallExpr 0x14c82ba18 <line:47:9, col:59> '<dependent type>' contains-errors     |       | | |-DeclRefExpr 0x14c82b8c0 <col:9> 'int ()' Function 0x14c827b28 'ND_TCHECK2' 'int ()'     |       | | |-UnaryOperator 0x14c82b9e0 <col:20, col:26> '<dependent type>' contains-errors prefix '*' cannot overflow     |       | | | `-ImplicitCastExpr 0x14c82b9c8 <col:21, col:26> '<dependent type>' contains-errors <LValueToRValue>     |       | | |   `-ParenExpr 0x14c82b900 <col:21, col:26> '<dependent type>' contains-errors lvalue     |       | | |     `-RecoveryExpr 0x14c82b8e0 <col:22> '<dependent type>' contains-errors lvalue     |       | | `-RecoveryExpr 0x14c82b9f8 <col:29> '<dependent type>' contains-errors lvalue     |       | |-CallExpr 0x14c82bf68 <line:49:9, line:51:67> '<dependent type>' contains-errors     |       | | |-DeclRefExpr 0x14c82ba48 <line:49:9> 'int ()' Function 0x14c827628 'ND_PRINT' 'int ()'     |       | | `-ParenExpr 0x14c82bf48 <col:18, line:51:66> '<dependent type>' contains-errors     |       | |   `-BinaryOperator 0x14c82bf28 <line:49:19, line:51:65> '<dependent type>' contains-errors ','     |       | |     |-BinaryOperator 0x14c82be38 <line:49:19, line:51:47> '<dependent type>' contains-errors ','     |       | |     | |-BinaryOperator 0x14c82bce8 <line:49:19, line:50:62> '<dependent type>' contains-errors ','     |       | |     | | |-BinaryOperator 0x14c82bb98 <line:49:19, line:50:38> '<dependent type>' contains-errors ','     |       | |     | | | |-BinaryOperator 0x14c82baa8 <line:49:19, col:24> 'char[4]' contains-errors ','     |       | |     | | | | |-RecoveryExpr 0x14c82ba68 <col:19> '<dependent type>' contains-errors lvalue     |       | |     | | | | `-StringLiteral 0x14c82ba88 <col:24> 'char[4]' lvalue \"STR\"     |       | |     | | | `-ParenExpr 0x14c82bb78 <line:50:25, col:38> '<dependent type>' contains-errors     |       | |     | | |   `-BinaryOperator 0x14c82bb58 <col:26, col:37> '<dependent type>' contains-errors '>>'     |       | |     | | |     |-UnaryOperator 0x14c82bb20 <col:26, col:32> '<dependent type>' contains-errors prefix '*' cannot overflow     |       | |     | | |     | `-ImplicitCastExpr 0x14c82bb08 <col:27, col:32> '<dependent type>' contains-errors <LValueToRValue>     |       | |     | | |     |   `-ParenExpr 0x14c82bae8 <col:27, col:32> '<dependent type>' contains-errors lvalue     |       | |     | | |     |     `-RecoveryExpr 0x14c82bac8 <col:28> '<dependent type>' contains-errors lvalue     |       | |     | | |     `-IntegerLiteral 0x14c82bb38 <col:37> 'int' 5     |       | |     | | `-ParenExpr 0x14c82bcc8 <col:41, col:62> '<dependent type>' contains-errors     |       | |     | |   `-BinaryOperator 0x14c82bca8 <col:42, col:58> '<dependent type>' contains-errors '&'     |       | |     | |     |-ParenExpr 0x14c82bc68 <col:42, col:54> '<dependent type>' contains-errors     |       | |     | |     | `-BinaryOperator 0x14c82bc48 <col:43, col:53> '<dependent type>' contains-errors '>>'     |       | |     | |     |   |-ParenExpr 0x14c82bc08 <col:43, col:49> '<dependent type>' contains-errors     |       | |     | |     |   | `-UnaryOperator 0x14c82bbf0 <col:44, col:45> '<dependent type>' contains-errors prefix '*' cannot overflow     |       | |     | |     |   |   `-ImplicitCastExpr 0x14c82bbd8 <col:45> '<dependent type>' contains-errors <LValueToRValue>     |       | |     | |     |   |     `-RecoveryExpr 0x14c82bbb8 <col:45> '<dependent type>' contains-errors lvalue     |       | |     | |     |   `-IntegerLiteral 0x14c82bc28 <col:53> 'int' 4     |       | |     | |     `-IntegerLiteral 0x14c82bc88 <col:58> 'int' 1     |       | |     | `-ParenExpr 0x14c82be18 <line:51:25, col:47> '<dependent type>' contains-errors     |       | |     |   `-BinaryOperator 0x14c82bdf8 <col:26, col:43> '<dependent type>' contains-errors '&'     |       | |     |     |-ParenExpr 0x14c82bdb8 <col:26, col:39> '<dependent type>' contains-errors     |       | |     |     | `-BinaryOperator 0x14c82bd98 <col:27, col:38> '<dependent type>' contains-errors '>>'     |       | |     |     |   |-UnaryOperator 0x14c82bd60 <col:27, col:33> '<dependent type>' contains-errors prefix '*' cannot overflow     |       | |     |     |   | `-ImplicitCastExpr 0x14c82bd48 <col:28, col:33> '<dependent type>' contains-errors <LValueToRValue>     |       | |     |     |   |   `-ParenExpr 0x14c82bd28 <col:28, col:33> '<dependent type>' contains-errors lvalue     |       | |     |     |   |     `-RecoveryExpr 0x14c82bd08 <col:29> '<dependent type>' contains-errors lvalue     |       | |     |     |   `-IntegerLiteral 0x14c82bd78 <col:38> 'int' 2     |       | |     |     `-IntegerLiteral 0x14c82bdd8 <col:43> 'int' 3     |       | |     `-ParenExpr 0x14c82bf08 <col:50, col:65> '<dependent type>' contains-errors     |       | |       `-BinaryOperator 0x14c82bee8 <col:51, col:61> '<dependent type>' contains-errors '&'     |       | |         |-ParenExpr 0x14c82bea8 <col:51, col:57> '<dependent type>' contains-errors     |       | |         | `-UnaryOperator 0x14c82be90 <col:52, col:53> '<dependent type>' contains-errors prefix '*' cannot overflow     |       | |         |   `-ImplicitCastExpr 0x14c82be78 <col:53> '<dependent type>' contains-errors <LValueToRValue>     |       | |         |     `-RecoveryExpr 0x14c82be58 <col:53> '<dependent type>' contains-errors lvalue     |       | |         `-IntegerLiteral 0x14c82bec8 <col:61> 'int' 3     |       | |-UnaryOperator 0x14c82bfd8 <line:53:9, col:13> '<dependent type>' contains-errors postfix '++' cannot overflow     |       | | `-RecoveryExpr 0x14c82bfb0 <col:9> '<dependent type>' contains-errors lvalue     |       | |   `-DeclRefExpr 0x14c82bf90 <col:9> 'const int *' lvalue ParmVar 0x14c80dda8 'tptr' 'const int *'     |       | |-CallExpr 0x14c82c090 <line:55:9, col:31> '<dependent type>' contains-errors     |       | | |-DeclRefExpr 0x14c82bff0 <col:9> 'int ()' Function 0x14c827628 'ND_PRINT' 'int ()'     |       | | `-ParenExpr 0x14c82c070 <col:18, col:30> 'char[4]' contains-errors     |       | |   `-BinaryOperator 0x14c82c050 <col:19, col:25> 'char[4]' contains-errors ','     |       | |     |-RecoveryExpr 0x14c82c010 <col:19> '<dependent type>' contains-errors lvalue     |       | |     `-StringLiteral 0x14c82c030 <col:25> 'char[4]' lvalue \"STR\"     |       | |-ForStmt 0x14c82c728 <line:57:9, line:63:9>     |       | | |-BinaryOperator 0x14c82c0f8 <line:57:13, col:15> 'int' '='     |       | | | |-DeclRefExpr 0x14c82c0b8 <col:13> 'int' lvalue Var 0x14c80e328 'i' 'int'     |       | | | `-IntegerLiteral 0x14c82c0d8 <col:15> 'int' 1     |       | | |-<<<NULL>>>     |       | | |-BinaryOperator 0x14c82c170 <col:17, col:20> 'int' '<='     |       | | | |-ImplicitCastExpr 0x14c82c158 <col:17> 'int' <LValueToRValue>     |       | | | | `-DeclRefExpr 0x14c82c118 <col:17> 'int' lvalue Var 0x14c80e328 'i' 'int'     |       | | | `-IntegerLiteral 0x14c82c138 <col:20> 'int' 8     |       | | |-UnaryOperator 0x14c82c1b0 <col:23, col:24> 'int' postfix '++'     |       | | | `-DeclRefExpr 0x14c82c190 <col:23> 'int' lvalue Var 0x14c80e328 'i' 'int'     |       | | `-CompoundStmt 0x14c82c700 <line:58:9, line:63:9>     |       | |   |-CallExpr 0x14c82c3d0 <line:59:13, col:56> '<dependent type>' contains-errors     |       | |   | |-DeclRefExpr 0x14c82c1c8 <col:13> 'int ()' Function 0x14c827628 'ND_PRINT' 'int ()'     |       | |   | `-ParenExpr 0x14c82c3b0 <col:22, col:55> '<dependent type>' contains-errors     |       | |   |   `-BinaryOperator 0x14c82c390 <col:23, col:54> '<dependent type>' contains-errors ','     |       | |   |     |-BinaryOperator 0x14c82c228 <col:23, col:28> 'char[4]' contains-errors ','     |       | |   |     | |-RecoveryExpr 0x14c82c1e8 <col:23> '<dependent type>' contains-errors lvalue     |       | |   |     | `-StringLiteral 0x14c82c208 <col:28> 'char[4]' lvalue \"STR\"     |       | |   |     `-CallExpr 0x14c82c368 <col:35, col:54> '<dependent type>' contains-errors     |       | |   |       |-DeclRefExpr 0x14c82c328 <col:35> 'int ()' Function 0x14c82c270 'EXTRACT_32BITS' 'int ()'     |       | |   |       `-RecoveryExpr 0x14c82c348 <col:50> '<dependent type>' contains-errors lvalue     |       | |   |-IfStmt 0x14c82c618 <line:60:13, line:61:36>     |       | |   | |-BinaryOperator 0x14c82c530 <line:60:17, col:34> 'int' '&&'     |       | |   | | |-BinaryOperator 0x14c82c498 <col:17, col:24> 'int' '=='     |       | |   | | | |-BinaryOperator 0x14c82c458 <col:17, col:19> 'int' '%'     |       | |   | | | | |-ImplicitCastExpr 0x14c82c440 <col:17> 'int' <LValueToRValue>     |       | |   | | | | | `-DeclRefExpr 0x14c82c400 <col:17> 'int' lvalue Var 0x14c80e328 'i' 'int'     |       | |   | | | | `-IntegerLiteral 0x14c82c420 <col:19> 'int' 4     |       | |   | | | `-IntegerLiteral 0x14c82c478 <col:24> 'int' 0     |       | |   | | `-BinaryOperator 0x14c82c510 <col:29, col:34> 'int' '!='     |       | |   | |   |-ImplicitCastExpr 0x14c82c4f8 <col:29> 'int' <LValueToRValue>     |       | |   | |   | `-DeclRefExpr 0x14c82c4b8 <col:29> 'int' lvalue Var 0x14c80e328 'i' 'int'     |       | |   | |   `-IntegerLiteral 0x14c82c4d8 <col:34> 'int' 8     |       | |   | `-CallExpr 0x14c82c5f0 <line:61:15, col:36> '<dependent type>' contains-errors     |       | |   |   |-DeclRefExpr 0x14c82c550 <col:15> 'int ()' Function 0x14c827628 'ND_PRINT' 'int ()'     |       | |   |   `-ParenExpr 0x14c82c5d0 <col:24, col:35> 'char[4]' contains-errors     |       | |   |     `-BinaryOperator 0x14c82c5b0 <col:25, col:30> 'char[4]' contains-errors ','     |       | |   |       |-RecoveryExpr 0x14c82c570 <col:25> '<dependent type>' contains-errors lvalue     |       | |   |       `-StringLiteral 0x14c82c590 <col:30> 'char[4]' lvalue \"STR\"     |       | |   `-BinaryOperator 0x14c82c6e0 <line:62:13, col:27> '<dependent type>' contains-errors '='     |       | |     |-RecoveryExpr 0x14c82c658 <col:13> '<dependent type>' contains-errors lvalue     |       | |     | `-DeclRefExpr 0x14c82c638 <col:13> 'const int *' lvalue ParmVar 0x14c80dda8 'tptr' 'const int *'     |       | |     `-BinaryOperator 0x14c82c6c0 <col:20, col:27> '<dependent type>' contains-errors '+'     |       | |       |-RecoveryExpr 0x14c82c680 <col:20> '<dependent type>' contains-errors lvalue     |       | |       `-IntegerLiteral 0x14c82c6a0 <col:27> 'int' 4     |       | |-BinaryOperator 0x14c82c838 <line:65:9, col:21> 'int' contains-errors '='     |       | | |-DeclRefExpr 0x14c82c760 <col:9> 'int' lvalue ParmVar 0x14c80de28 'len' 'int'     |       | | `-BinaryOperator 0x14c82c818 <col:15, col:21> '<dependent type>' contains-errors '-'     |       | |   |-DeclRefExpr 0x14c82c780 <col:15> 'int' lvalue ParmVar 0x14c80de28 'len' 'int'     |       | |   `-RecoveryExpr 0x14c82c7f8 <col:21> '<dependent type>' contains-errors lvalue     |       | `-BreakStmt 0x14c82c858 <line:67:9>     |       |-CompoundStmt 0x14c82d2c8 <line:71:7, line:93:7>     |       | |-CallExpr 0x14c82c970 <line:72:9, col:37> '<dependent type>' contains-errors     |       | | |-DeclRefExpr 0x14c82c8c0 <col:9> 'int ()' Function 0x14c827b28 'ND_TCHECK2' 'int ()'     |       | | |-UnaryOperator 0x14c82c938 <col:20, col:26> '<dependent type>' contains-errors prefix '*' cannot overflow     |       | | | `-ImplicitCastExpr 0x14c82c920 <col:21, col:26> '<dependent type>' contains-errors <LValueToRValue>     |       | | |   `-ParenExpr 0x14c82c900 <col:21, col:26> '<dependent type>' contains-errors lvalue     |       | | |     `-RecoveryExpr 0x14c82c8e0 <col:22> '<dependent type>' contains-errors lvalue     |       | | `-DeclRefExpr 0x14c82c950 <col:29> 'int' lvalue Var 0x14c80e070 'stlv_len' 'int'     |       | |-WhileStmt 0x14c82d2a0 <line:74:9, line:90:9>     |       | | |-RecoveryExpr 0x14c82c9c0 <line:74:16, col:23> '_Bool' contains-errors     |       | | `-CompoundStmt 0x14c82d270 <line:75:9, line:90:9>     |       | |   |-CallExpr 0x14c82cb98 <line:78:11, line:79:44> '<dependent type>' contains-errors     |       | |   | |-DeclRefExpr 0x14c82ca70 <line:78:11> 'int ()' Function 0x14c827628 'ND_PRINT' 'int ()'     |       | |   | `-ParenExpr 0x14c82cb78 <col:20, line:79:43> '<dependent type>' contains-errors     |       | |   |   `-BinaryOperator 0x14c82cb58 <line:78:21, line:79:42> '<dependent type>' contains-errors ','     |       | |   |     |-BinaryOperator 0x14c82cad0 <line:78:21, col:26> 'char[4]' contains-errors ','     |       | |   |     | |-RecoveryExpr 0x14c82ca90 <col:21> '<dependent type>' contains-errors lvalue     |       | |   |     | `-StringLiteral 0x14c82cab0 <col:26> 'char[4]' lvalue \"STR\"     |       | |   |     `-CallExpr 0x14c82cb30 <line:79:23, col:42> '<dependent type>' contains-errors     |       | |   |       |-DeclRefExpr 0x14c82caf0 <col:23> 'int ()' Function 0x14c82c270 'EXTRACT_32BITS' 'int ()'     |       | |   |       `-RecoveryExpr 0x14c82cb10 <col:38> '<dependent type>' contains-errors lvalue     |       | |   |-BinaryOperator 0x14c82cc68 <line:81:11, col:23> '<dependent type>' contains-errors '='     |       | |   | |-RecoveryExpr 0x14c82cbe0 <col:11> '<dependent type>' contains-errors lvalue     |       | |   | | `-DeclRefExpr 0x14c82cbc0 <col:11> 'const int *' lvalue ParmVar 0x14c80dda8 'tptr' 'const int *'     |       | |   | `-BinaryOperator 0x14c82cc48 <col:18, col:23> '<dependent type>' contains-errors '+'     |       | |   |   |-RecoveryExpr 0x14c82cc08 <col:18> '<dependent type>' contains-errors lvalue     |       | |   |   `-IntegerLiteral 0x14c82cc28 <col:23> 'int' 4     |       | |   |-CallExpr 0x14c82d140 <line:83:11, line:86:58> '<dependent type>' contains-errors     |       | |   | |-DeclRefExpr 0x14c82cc88 <line:83:11> 'int ()' Function 0x14c827628 'ND_PRINT' 'int ()'     |       | |   | `-ParenExpr 0x14c82d120 <col:20, line:86:57> '<dependent type>' contains-errors     |       | |   |   `-BinaryOperator 0x14c82d100 <line:83:21, line:86:53> '<dependent type>' contains-errors ','     |       | |   |     |-BinaryOperator 0x14c82cfd8 <line:83:21, line:85:53> '<dependent type>' contains-errors ','     |       | |   |     | |-BinaryOperator 0x14c82ceb0 <line:83:21, line:84:49> '<dependent type>' contains-errors ','     |       | |   |     | | |-BinaryOperator 0x14c82cce8 <line:83:21, col:26> 'char[4]' contains-errors ','     |       | |   |     | | | |-RecoveryExpr 0x14c82cca8 <col:21> '<dependent type>' contains-errors lvalue     |       | |   |     | | | `-StringLiteral 0x14c82ccc8 <col:26> 'char[4]' lvalue \"STR\"     |       | |   |     | | `-ParenExpr 0x14c82ce90 <line:84:22, col:49> '<dependent type>' contains-errors     |       | |   |     | |   `-BinaryOperator 0x14c82ce70 <col:23, col:48> '<dependent type>' contains-errors '>>'     |       | |   |     | |     |-CallExpr 0x14c82ce28 <col:23, col:43> '<dependent type>' contains-errors     |       | |   |     | |     | |-DeclRefExpr 0x14c82cde8 <col:23> 'int ()' Function 0x14c82cd30 'EXTRACT_16BITS' 'int ()'     |       | |   |     | |     | `-RecoveryExpr 0x14c82ce08 <col:39> '<dependent type>' contains-errors lvalue     |       | |   |     | |     `-IntegerLiteral 0x14c82ce50 <col:48> 'int' 4     |       | |   |     | `-BinaryOperator 0x14c82cfb8 <line:85:22, col:53> '<dependent type>' contains-errors '&'     |       | |   |     |   |-ParenExpr 0x14c82cf78 <col:22, col:49> '<dependent type>' contains-errors     |       | |   |     |   | `-BinaryOperator 0x14c82cf58 <col:23, col:48> '<dependent type>' contains-errors '>>'     |       | |   |     |   |   |-CallExpr 0x14c82cf10 <col:23, col:43> '<dependent type>' contains-errors     |       | |   |     |   |   | |-DeclRefExpr 0x14c82ced0 <col:23> 'int ()' Function 0x14c82cd30 'EXTRACT_16BITS' 'int ()'     |       | |   |     |   |   | `-RecoveryExpr 0x14c82cef0 <col:39> '<dependent type>' contains-errors lvalue     |       | |   |     |   |   `-IntegerLiteral 0x14c82cf38 <col:48> 'int' 3     |       | |   |     |   `-IntegerLiteral 0x14c82cf98 <col:53> 'int' 1     |       | |   |     `-BinaryOperator 0x14c82d0e0 <line:86:22, col:53> '<dependent type>' contains-errors '&'     |       | |   |       |-ParenExpr 0x14c82d0a0 <col:22, col:49> '<dependent type>' contains-errors     |       | |   |       | `-BinaryOperator 0x14c82d080 <col:23, col:48> '<dependent type>' contains-errors '>>'     |       | |   |       |   |-CallExpr 0x14c82d038 <col:23, col:43> '<dependent type>' contains-errors     |       | |   |       |   | |-DeclRefExpr 0x14c82cff8 <col:23> 'int ()' Function 0x14c82cd30 'EXTRACT_16BITS' 'int ()'     |       | |   |       |   | `-RecoveryExpr 0x14c82d018 <col:39> '<dependent type>' contains-errors lvalue     |       | |   |       |   `-IntegerLiteral 0x14c82d060 <col:48> 'int' 2     |       | |   |       `-IntegerLiteral 0x14c82d0c0 <col:53> 'int' 1     |       | |   `-BinaryOperator 0x14c82d210 <line:88:11, col:25> '<dependent type>' contains-errors '='     |       | |     |-RecoveryExpr 0x14c82d188 <col:11> '<dependent type>' contains-errors lvalue     |       | |     | `-DeclRefExpr 0x14c82d168 <col:11> 'const int *' lvalue ParmVar 0x14c80dda8 'tptr' 'const int *'     |       | |     `-BinaryOperator 0x14c82d1f0 <col:18, col:25> '<dependent type>' contains-errors '+'     |       | |       |-RecoveryExpr 0x14c82d1b0 <col:18> '<dependent type>' contains-errors lvalue     |       | |       `-IntegerLiteral 0x14c82d1d0 <col:25> 'int' 2     |       | `-BreakStmt 0x14c82d2c0 <line:92:9>     |       `-DefaultStmt 0x14c82d2f8 <line:95:7, line:96:11>     |         `-BreakStmt 0x14c82d2f0 <col:11>     |-ReturnStmt 0x14c82d3b8 <line:100:3, col:10>     | `-IntegerLiteral 0x14c82d398 <col:10> 'int' 0     |-LabelStmt 0x14d8088f8 <line:102:3, line:103:26> 'trunc'     | `-CallExpr 0x14d808880 <col:5, col:26> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14c82d3c8 <col:5> 'int ()' Function 0x14c827628 'ND_PRINT' 'int ()'     |   `-ParenExpr 0x14d808860 <col:14, col:25> 'char[4]' contains-errors     |     `-BinaryOperator 0x14d808840 <col:15, col:20> 'char[4]' contains-errors ','     |       |-RecoveryExpr 0x14d808800 <col:15> '<dependent type>' contains-errors lvalue     |       `-StringLiteral 0x14d808820 <col:20> 'char[4]' lvalue \"STR\"     `-ReturnStmt 0x14d8089d8 <line:105:5, col:13>       `-ParenExpr 0x14d8089b8 <col:11, col:13> 'int'         `-IntegerLiteral 0x14d808998 <col:12> 'int' 1 ","20255":"`-FunctionDecl 0x147029678  col:6 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x147029778 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x147029720 <<invalid sloc>> Implicit 902 ","20692":"`-FunctionDecl 0x145928be8  line:1:1 invalid e_ews_backend_ref_connection_sync 'int (int *, int *, int *, int **)'   |-ParmVarDecl 0x145928928 <col:36, col:49> col:49 referenced invalid backend 'int *'   |-ParmVarDecl 0x1459289a8 <line:2:8, col:37> col:37 invalid result 'int *'   |-ParmVarDecl 0x145928a28 <line:3:36, col:50> col:50 invalid cancellable 'int *'   |-ParmVarDecl 0x145928ae0 <line:4:36, col:45> col:45 invalid error 'int **'   `-CompoundStmt 0x145943b18 <line:5:1, line:51:1>     |-DeclStmt 0x145928d78 <line:9:2, col:16>     | `-VarDecl 0x145928d10 <col:2, col:9> col:9 used hosturl 'char *'     |-CallExpr 0x1459420d0 <line:12:2, col:56> '<dependent type>' contains-errors     | |-DeclRefExpr 0x145928ef0 <col:2> 'int ()' Function 0x145928e38 'g_return_val_if_fail' 'int ()'     | |-CallExpr 0x145942040 <col:24, col:49> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x145942000 <col:24> 'int ()' Function 0x145928f38 'E_IS_EWS_BACKEND' 'int ()'     | | `-RecoveryExpr 0x145942020 <col:42> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1459420b0 <col:52> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1459422c8 <line:14:2, col:47> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1459421e0 <col:2> 'int ()' Function 0x145942128 'g_mutex_lock' 'int ()'     | `-UnaryOperator 0x1459422b0 <col:16, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x145942268 <col:17, col:32> '<dependent type>' contains-errors lvalue ->connection_lock     |     `-CXXDependentScopeMemberExpr 0x145942220 <col:17, col:26> '<dependent type>' contains-errors lvalue ->priv     |       `-RecoveryExpr 0x145942200 <col:17> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1459427b8 <line:17:2, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1459426d0 <col:2> 'int ()' Function 0x145942618 'g_mutex_unlock' 'int ()'     | `-UnaryOperator 0x1459427a0 <col:18, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x145942758 <col:19, col:34> '<dependent type>' contains-errors lvalue ->connection_lock     |     `-CXXDependentScopeMemberExpr 0x145942710 <col:19, col:28> '<dependent type>' contains-errors lvalue ->priv     |       `-RecoveryExpr 0x1459426f0 <col:19> '<dependent type>' contains-errors lvalue     |-CallExpr 0x145943048 <line:26:2, col:17> 'int'     | |-ImplicitCastExpr 0x145943030 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x145942fb8 <col:2> 'int ()' Function 0x145942f00 'g_free' 'int ()'     | `-ImplicitCastExpr 0x145943070 <col:10> 'char *' <LValueToRValue>     |   `-DeclRefExpr 0x145942fd8 <col:10> 'char *' lvalue Var 0x145928d10 'hosturl' 'char *'     `-IfStmt 0x145943ae8 <line:39:2, line:48:2> has_else       |-RecoveryExpr 0x145943490 <line:39:6> '_Bool' contains-errors       |-CompoundStmt 0x145943a90 <col:15, line:45:2>       | |-CallExpr 0x145943598 <line:40:3, col:48> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x1459434b0 <col:3> 'int ()' Function 0x145942128 'g_mutex_lock' 'int ()'       | | `-UnaryOperator 0x145943580 <col:17, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow       | |   `-CXXDependentScopeMemberExpr 0x145943538 <col:18, col:33> '<dependent type>' contains-errors lvalue ->connection_lock       | |     `-CXXDependentScopeMemberExpr 0x1459434f0 <col:18, col:27> '<dependent type>' contains-errors lvalue ->priv       | |       `-RecoveryExpr 0x1459434d0 <col:18> '<dependent type>' contains-errors lvalue       | |-IfStmt 0x145943868 <line:41:3, line:42:45>       | | |-RecoveryExpr 0x145943670 <line:41:7, col:36> '_Bool' contains-errors       | | `-CallExpr 0x145943840 <line:42:4, col:45> '<dependent type>' contains-errors       | |   |-DeclRefExpr 0x145943770 <col:4> 'int ()' Function 0x1459436b8 'g_object_unref' 'int ()'       | |   `-CXXDependentScopeMemberExpr 0x1459437f8 <col:20, col:35> '<dependent type>' contains-errors lvalue ->connection       | |     `-CXXDependentScopeMemberExpr 0x1459437b0 <col:20, col:29> '<dependent type>' contains-errors lvalue ->priv       | |       `-RecoveryExpr 0x145943790 <col:20> '<dependent type>' contains-errors lvalue       | `-CallExpr 0x145943a68 <line:44:3, col:50> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x145943980 <col:3> 'int ()' Function 0x145942618 'g_mutex_unlock' 'int ()'       |   `-UnaryOperator 0x145943a50 <col:19, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow       |     `-CXXDependentScopeMemberExpr 0x145943a08 <col:20, col:35> '<dependent type>' contains-errors lvalue ->connection_lock       |       `-CXXDependentScopeMemberExpr 0x1459439c0 <col:20, col:29> '<dependent type>' contains-errors lvalue ->priv       |         `-RecoveryExpr 0x1459439a0 <col:20> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x145943ad8 <line:45:9, line:48:2> ","20695":"`-FunctionDecl 0x14a8272f8  col:5 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x14a8273f8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x14a827460 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x14a8274c8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14a8273a0 <<invalid sloc>> Implicit 882 ","20347":"`-FunctionDecl 0x15600dfa8  line:1:1 invalid read_old_length 'int (int, int, int *, int *)'   |-ParmVarDecl 0x15600dcf0 <col:17, col:30> col:30 invalid inp 'int'   |-ParmVarDecl 0x15600dd70 <col:35, col:39> col:39 used ctb 'int'   |-ParmVarDecl 0x15600de28 <col:44, col:53> col:53 invalid r_len 'int *'   |-ParmVarDecl 0x15600dea8 <col:60, col:69> col:69 invalid r_size 'int *'   `-CompoundStmt 0x156027ce0 <line:2:1, line:18:1>     |-DeclStmt 0x15600e168 <line:3:2, col:23>     | `-VarDecl 0x15600e088 <col:2, col:19> col:6 used llen 'int' cinit     |   `-BinaryOperator 0x15600e148 <col:13, col:19> 'int' '&'     |     |-ImplicitCastExpr 0x15600e130 <col:13> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x15600e0f0 <col:13> 'int' lvalue ParmVar 0x15600dd70 'ctb' 'int'     |     `-IntegerLiteral 0x15600e110 <col:19> 'int' 3     `-IfStmt 0x156027cb0 <line:5:2, line:17:2> has_else       |-BinaryOperator 0x15600e1d8 <line:5:6, col:14> 'int' '=='       | |-ImplicitCastExpr 0x15600e1c0 <col:6> 'int' <LValueToRValue>       | | `-DeclRefExpr 0x15600e180 <col:6> 'int' lvalue Var 0x15600e088 'llen' 'int'       | `-IntegerLiteral 0x15600e1a0 <col:14> 'int' 0       |-CompoundStmt 0x1560274d0 <col:17, line:8:2>       | |-BinaryOperator 0x156027428 <line:6:3, col:31> '<dependent type>' contains-errors '='       | | |-UnaryOperator 0x15600e230 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow       | | | `-ImplicitCastExpr 0x15600e218 <col:4> '<dependent type>' contains-errors <LValueToRValue>       | | |   `-RecoveryExpr 0x15600e1f8 <col:4> '<dependent type>' contains-errors lvalue       | | `-CallExpr 0x156027400 <col:12, col:31> '<dependent type>' contains-errors       | |   |-DeclRefExpr 0x15600e3a0 <col:12> 'int ()' Function 0x15600e2e8 'cdk_stream_getc' 'int ()'       | |   `-RecoveryExpr 0x15600e3c0 <col:28> '<dependent type>' contains-errors lvalue       | `-UnaryOperator 0x1560274b8 <line:7:3, col:12> '<dependent type>' contains-errors postfix '++' cannot overflow       |   `-ParenExpr 0x156027498 <col:3, col:11> '<dependent type>' contains-errors       |     `-UnaryOperator 0x156027480 <col:4, col:5> '<dependent type>' contains-errors prefix '*' cannot overflow       |       `-ImplicitCastExpr 0x156027468 <col:5> '<dependent type>' contains-errors <LValueToRValue>       |         `-RecoveryExpr 0x156027448 <col:5> '<dependent type>' contains-errors lvalue       `-IfStmt 0x156027c80 <line:8:9, line:17:2> has_else         |-BinaryOperator 0x156027548 <line:8:13, col:21> 'int' '=='         | |-ImplicitCastExpr 0x156027530 <col:13> 'int' <LValueToRValue>         | | `-DeclRefExpr 0x1560274f0 <col:13> 'int' lvalue Var 0x15600e088 'llen' 'int'         | `-IntegerLiteral 0x156027510 <col:21> 'int' 1         |-CompoundStmt 0x1560277e0 <col:24, line:11:2>         | |-BinaryOperator 0x156027700 <line:9:3, col:23> '<dependent type>' contains-errors '='         | | |-UnaryOperator 0x1560275a0 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow         | | | `-ImplicitCastExpr 0x156027588 <col:4> '<dependent type>' contains-errors <LValueToRValue>         | | |   `-RecoveryExpr 0x156027568 <col:4> '<dependent type>' contains-errors lvalue         | | `-CallExpr 0x1560276d8 <col:12, col:23> '<dependent type>' contains-errors         | |   |-DeclRefExpr 0x156027698 <col:12> 'int ()' Function 0x1560275e0 'read_16' 'int ()'         | |   `-RecoveryExpr 0x1560276b8 <col:20> '<dependent type>' contains-errors lvalue         | `-CompoundAssignOperator 0x1560277b0 <line:10:3, col:16> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'         |   |-ParenExpr 0x156027770 <col:3, col:11> '<dependent type>' contains-errors         |   | `-UnaryOperator 0x156027758 <col:4, col:5> '<dependent type>' contains-errors prefix '*' cannot overflow         |   |   `-ImplicitCastExpr 0x156027740 <col:5> '<dependent type>' contains-errors <LValueToRValue>         |   |     `-RecoveryExpr 0x156027720 <col:5> '<dependent type>' contains-errors lvalue         |   `-IntegerLiteral 0x156027790 <col:16> 'int' 2         `-IfStmt 0x156027c50 <line:11:9, line:17:2> has_else           |-BinaryOperator 0x156027858 <line:11:13, col:21> 'int' '=='           | |-ImplicitCastExpr 0x156027840 <col:13> 'int' <LValueToRValue>           | | `-DeclRefExpr 0x156027800 <col:13> 'int' lvalue Var 0x15600e088 'llen' 'int'           | `-IntegerLiteral 0x156027820 <col:21> 'int' 2           |-CompoundStmt 0x156027af0 <col:24, line:14:2>           | |-BinaryOperator 0x156027a10 <line:12:3, col:23> '<dependent type>' contains-errors '='           | | |-UnaryOperator 0x1560278b0 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow           | | | `-ImplicitCastExpr 0x156027898 <col:4> '<dependent type>' contains-errors <LValueToRValue>           | | |   `-RecoveryExpr 0x156027878 <col:4> '<dependent type>' contains-errors lvalue           | | `-CallExpr 0x1560279e8 <col:12, col:23> '<dependent type>' contains-errors           | |   |-DeclRefExpr 0x1560279a8 <col:12> 'int ()' Function 0x1560278f0 'read_32' 'int ()'           | |   `-RecoveryExpr 0x1560279c8 <col:20> '<dependent type>' contains-errors lvalue           | `-CompoundAssignOperator 0x156027ac0 <line:13:3, col:16> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'           |   |-ParenExpr 0x156027a80 <col:3, col:11> '<dependent type>' contains-errors           |   | `-UnaryOperator 0x156027a68 <col:4, col:5> '<dependent type>' contains-errors prefix '*' cannot overflow           |   |   `-ImplicitCastExpr 0x156027a50 <col:5> '<dependent type>' contains-errors <LValueToRValue>           |   |     `-RecoveryExpr 0x156027a30 <col:5> '<dependent type>' contains-errors lvalue           |   `-IntegerLiteral 0x156027aa0 <col:16> 'int' 4           `-CompoundStmt 0x156027c30 <line:14:9, line:17:2>             |-BinaryOperator 0x156027b80 <line:15:3, col:12> '<dependent type>' contains-errors '='             | |-UnaryOperator 0x156027b48 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow             | | `-ImplicitCastExpr 0x156027b30 <col:4> '<dependent type>' contains-errors <LValueToRValue>             | |   `-RecoveryExpr 0x156027b10 <col:4> '<dependent type>' contains-errors lvalue             | `-IntegerLiteral 0x156027b60 <col:12> 'int' 0             `-BinaryOperator 0x156027c10 <line:16:3, col:13> '<dependent type>' contains-errors '='               |-UnaryOperator 0x156027bd8 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow               | `-ImplicitCastExpr 0x156027bc0 <col:4> '<dependent type>' contains-errors <LValueToRValue>               |   `-RecoveryExpr 0x156027ba0 <col:4> '<dependent type>' contains-errors lvalue               `-IntegerLiteral 0x156027bf0 <col:13> 'int' 0 ","21196":"`-FunctionDecl 0x15300df88  line:1:23 invalid torture_raw_write 'struct torture_suite *(int *)'   |-ParmVarDecl 0x15300ddc8 <col:41, col:53> col:53 invalid mem_ctx 'int *'   `-CompoundStmt 0x153028120 <line:2:1, line:11:1>     |-DeclStmt 0x15300e360 <line:3:2, col:68>     | `-VarDecl 0x15300e0c8 <col:2, col:67> col:24 used suite 'struct torture_suite *' cinit     |   `-CallExpr 0x15300e330 <col:32, col:67> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x15300e290 <col:32> 'int ()' Function 0x15300e1d8 'torture_suite_create' 'int ()'     |     |-RecoveryExpr 0x15300e2b0 <col:53> '<dependent type>' contains-errors lvalue     |     `-StringLiteral 0x15300e310 <col:62> 'char[4]' lvalue \"STR\"     |-CallExpr 0x153027d88 <line:5:2, col:54> '<dependent type>' contains-errors     | |-DeclRefExpr 0x153027cb8 <col:2> 'int ()' Function 0x153027c00 'torture_suite_add_1smb_test' 'int ()'     | |-DeclRefExpr 0x153027cd8 <col:30> 'struct torture_suite *' contains-errors lvalue Var 0x15300e0c8 'suite' 'struct torture_suite *'     | |-StringLiteral 0x153027cf8 <col:37> 'char[4]' lvalue \"STR\"     | `-RecoveryExpr 0x153027d68 <col:44> '<dependent type>' contains-errors lvalue     |-CallExpr 0x153027e90 <line:6:2, col:60> '<dependent type>' contains-errors     | |-DeclRefExpr 0x153027dc0 <col:2> 'int ()' Function 0x153027c00 'torture_suite_add_1smb_test' 'int ()'     | |-DeclRefExpr 0x153027de0 <col:30> 'struct torture_suite *' contains-errors lvalue Var 0x15300e0c8 'suite' 'struct torture_suite *'     | |-StringLiteral 0x153027e00 <col:37> 'char[4]' lvalue \"STR\"     | `-RecoveryExpr 0x153027e70 <col:44> '<dependent type>' contains-errors lvalue     |-CallExpr 0x153027f98 <line:7:2, col:59> '<dependent type>' contains-errors     | |-DeclRefExpr 0x153027ec8 <col:2> 'int ()' Function 0x153027c00 'torture_suite_add_1smb_test' 'int ()'     | |-DeclRefExpr 0x153027ee8 <col:30> 'struct torture_suite *' contains-errors lvalue Var 0x15300e0c8 'suite' 'struct torture_suite *'     | |-StringLiteral 0x153027f08 <col:37> 'char[4]' lvalue \"STR\"     | `-RecoveryExpr 0x153027f78 <col:44> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1530280a0 <line:8:2, col:55> '<dependent type>' contains-errors     | |-DeclRefExpr 0x153027fd0 <col:2> 'int ()' Function 0x153027c00 'torture_suite_add_1smb_test' 'int ()'     | |-DeclRefExpr 0x153027ff0 <col:30> 'struct torture_suite *' contains-errors lvalue Var 0x15300e0c8 'suite' 'struct torture_suite *'     | |-StringLiteral 0x153028010 <col:37> 'char[4]' lvalue \"STR\"     | `-RecoveryExpr 0x153028080 <col:44> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x153028110 <line:10:2, col:9>       `-ImplicitCastExpr 0x1530280f8 <col:9> 'struct torture_suite *' contains-errors <LValueToRValue>         `-DeclRefExpr 0x1530280d8 <col:9> 'struct torture_suite *' contains-errors lvalue Var 0x15300e0c8 'suite' 'struct torture_suite *' ","21088":"`-FunctionDecl 0x11f80a730  col:8 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x11f80a830 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x11f80a898 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x11f80a900 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x11f80a7d8 <<invalid sloc>> Implicit 900 ","20365":"`-FunctionDecl 0x127827438  line:1:1 invalid sparse_extract_region 'int (struct tar_sparse_file *, int)'   |-ParmVarDecl 0x12780e248 <col:24, col:48> col:48 used file 'struct tar_sparse_file *'   |-ParmVarDecl 0x12780e2e0 <col:54, col:61> col:61 invalid i 'int'   `-CompoundStmt 0x127829f10 <line:2:1, line:40:1>     `-IfStmt 0x127829ee0 <line:10:3, line:38:5> has_else       |-BinaryOperator 0x127827ac0 <line:10:7, col:21> 'int' contains-errors '=='       | |-RecoveryExpr 0x127827aa0 <col:7> '<dependent type>' contains-errors lvalue       | `-IntegerLiteral 0x127827a60 <col:21> 'int' 0       |-CompoundStmt 0x127827ed8 <line:11:5, line:15:5>       | `-IfStmt 0x127827eb8 <line:13:7, line:14:48>       |   |-BinaryOperator 0x127827cc8 <line:13:11, col:51> 'int' contains-errors '&&'       |   | |-RecoveryExpr 0x127827b18 <col:11, col:17> '<dependent type>' contains-errors lvalue       |   | | `-DeclRefExpr 0x127827ae0 <col:11> 'struct tar_sparse_file *' lvalue ParmVar 0x12780e248 'file' 'struct tar_sparse_file *'       |   | `-CallExpr 0x127827ca0 <col:29, col:51> '<dependent type>' contains-errors       |   |   |-DeclRefExpr 0x127827c20 <col:29> 'int ()' Function 0x127827b68 'sys_truncate' 'int ()'       |   |   `-RecoveryExpr 0x127827c78 <col:43, col:49> '<dependent type>' contains-errors lvalue       |   |     `-DeclRefExpr 0x127827c40 <col:43> 'struct tar_sparse_file *' lvalue ParmVar 0x12780e248 'file' 'struct tar_sparse_file *'       |   `-CallExpr 0x127827e90 <line:14:2, col:48> '<dependent type>' contains-errors       |     |-DeclRefExpr 0x127827dc8 <col:2> 'int ()' Function 0x127827d10 'truncate_warn' 'int ()'       |     `-CXXDependentScopeMemberExpr 0x127827e48 <col:17, col:34> '<dependent type>' contains-errors lvalue ->orig_file_name       |       `-RecoveryExpr 0x127827e20 <col:17, col:23> '<dependent type>' contains-errors lvalue       |         `-DeclRefExpr 0x127827de8 <col:17> 'struct tar_sparse_file *' lvalue ParmVar 0x12780e248 'file' 'struct tar_sparse_file *'       `-WhileStmt 0x127829ec0 <line:16:8, line:38:5>         |-BinaryOperator 0x127827f68 <line:16:15, col:28> 'int' contains-errors '>'         | |-RecoveryExpr 0x127827f48 <col:15> '<dependent type>' contains-errors lvalue         | `-IntegerLiteral 0x127827f08 <col:28> 'int' 0         `-CompoundStmt 0x127829e80 <line:17:5, line:38:5>           |-UnaryExprOrTypeTraitExpr 0x127827fe0 <line:18:7, col:14> 'unsigned long' contains-errors sizeof           | `-RecoveryExpr 0x127827fc0 <col:14> '<dependent type>' contains-errors lvalue           |-DeclStmt 0x127829200 <line:20:7, col:44>           | |-RecordDecl 0x127828088 <col:7, col:13> col:13 union block           | `-VarDecl 0x1278281f8 <col:7, col:43> col:20 used blk 'union block *' cinit           |   `-ImplicitCastExpr 0x1278283c8 <col:26, col:43> 'union block *' <IntegralToPointer>           |     `-CallExpr 0x1278283a8 <col:26, col:43> 'int'           |       `-ImplicitCastExpr 0x127828390 <col:26> 'int (*)()' <FunctionToPointerDecay>           |         `-DeclRefExpr 0x127828340 <col:26> 'int ()' Function 0x127828288 'find_next_block' 'int ()'           |-IfStmt 0x127829620 <line:21:7, line:25:2>           | |-UnaryOperator 0x127829250 <line:21:11, col:12> 'int' prefix '!' cannot overflow           | | `-ImplicitCastExpr 0x127829238 <col:12> 'union block *' <LValueToRValue>           | |   `-DeclRefExpr 0x127829218 <col:12> 'union block *' lvalue Var 0x1278281f8 'blk' 'union block *'           | `-CompoundStmt 0x127829608 <line:22:2, line:25:2>           |   `-CallExpr 0x1278295e0 <line:23:4, col:27> 'int'           |     |-ImplicitCastExpr 0x1278295c8 <col:4> 'int (*)()' <FunctionToPointerDecay>           |     | `-DeclRefExpr 0x127829348 <col:4> 'int ()' Function 0x127829290 'ERROR' 'int ()'           |     `-ParenExpr 0x1278295a8 <col:11, col:26> 'int'           |       `-BinaryOperator 0x127829588 <col:12, col:25> 'int' ','           |         |-BinaryOperator 0x1278293a8 <col:12, col:15> 'int' ','           |         | |-IntegerLiteral 0x127829368 <col:12> 'int' 0           |         | `-IntegerLiteral 0x127829388 <col:15> 'int' 0           |         `-CallExpr 0x127829548 <col:18, col:25> 'int'           |           |-ImplicitCastExpr 0x127829530 <col:18> 'int (*)()' <FunctionToPointerDecay>           |           | `-DeclRefExpr 0x1278294a8 <col:18> 'int ()' Function 0x1278293f0 '_' 'int ()'           |           `-ImplicitCastExpr 0x127829570 <col:20> 'char *' <ArrayToPointerDecay>           |             `-StringLiteral 0x127829510 <col:20> 'char[4]' lvalue \"STR\"           |-CallExpr 0x127829778 <line:26:7, col:32> 'int'           | |-ImplicitCastExpr 0x127829760 <col:7> 'int (*)()' <FunctionToPointerDecay>           | | `-DeclRefExpr 0x127829720 <col:7> 'int ()' Function 0x127829668 'set_next_block_after' 'int ()'           | `-ImplicitCastExpr 0x1278297a0 <col:29> 'union block *' <LValueToRValue>           |   `-DeclRefExpr 0x127829740 <col:29> 'union block *' lvalue Var 0x1278281f8 'blk' 'union block *'           |-CallExpr 0x127829c00 <line:30:7, col:75> '<dependent type>' contains-errors           | |-DeclRefExpr 0x127829ab8 <col:7> 'int ()' Function 0x127829a00 'mv_size_left' 'int ()'           | `-BinaryOperator 0x127829be0 <col:21, col:64> '<dependent type>' contains-errors '-'           |   |-CXXDependentScopeMemberExpr 0x127829b38 <col:21, col:38> '<dependent type>' contains-errors lvalue ->archive_file_size           |   | `-RecoveryExpr 0x127829b10 <col:21, col:27> '<dependent type>' contains-errors lvalue           |   |   `-DeclRefExpr 0x127829ad8 <col:21> 'struct tar_sparse_file *' lvalue ParmVar 0x12780e248 'file' 'struct tar_sparse_file *'           |   `-RecoveryExpr 0x127829bb8 <col:58, col:64> '<dependent type>' contains-errors lvalue           |     `-DeclRefExpr 0x127829b80 <col:58> 'struct tar_sparse_file *' lvalue ParmVar 0x12780e248 'file' 'struct tar_sparse_file *'           `-IfStmt 0x127829e60 <line:32:7, line:37:2>             |-RecoveryExpr 0x127829c88 <line:32:11, col:20> '_Bool' contains-errors             `-CompoundStmt 0x127829e50 <line:33:2, line:37:2> ","20831":"`-FunctionDecl 0x149026998  line:1:12 xfrm_get_policy 'int (struct sk_buff *, struct nlmsghdr *, struct nlattr **)' static   |-ParmVarDecl 0x14900e248 <col:28, col:44> col:44 used skb 'struct sk_buff *'   |-ParmVarDecl 0x149026628 <col:49, col:66> col:66 used nlh 'struct nlmsghdr *'   |-ParmVarDecl 0x149026858 <line:2:3, col:19> col:19 used attrs 'struct nlattr **'   `-CompoundStmt 0x149031a40 <line:3:1, line:76:1>     |-DeclStmt 0x149026e60 <line:4:2, col:37>     | |-RecordDecl 0x149026aa0 <col:2, col:9> col:9 struct net     | `-VarDecl 0x149026c08 <col:2, col:36> col:14 used net 'struct net *' cinit     |   `-CallExpr 0x149026e20 <col:20, col:36> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x149026da0 <col:20> 'int ()' Function 0x149026ce8 'sock_net' 'int ()'     |     `-RecoveryExpr 0x149026df8 <col:29, col:34> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x149026dc0 <col:29> 'struct sk_buff *' lvalue ParmVar 0x14900e248 'skb' 'struct sk_buff *'     |-DeclStmt 0x149027068 <line:5:2, col:24>     | |-RecordDecl 0x149026e78 <col:2, col:9> col:9 struct xfrm_policy     | `-VarDecl 0x149026fe8 <col:2, col:22> col:22 used xp 'struct xfrm_policy *'     |-DeclStmt 0x149027268 <line:6:2, col:30>     | |-RecordDecl 0x149027080 <col:2, col:9> col:9 struct xfrm_userpolicy_id     | `-VarDecl 0x1490271e8 <col:2, col:29> col:29 used p 'struct xfrm_userpolicy_id *'     |-DeclStmt 0x149027300 <line:8:2, col:9>     | `-VarDecl 0x149027298 <col:2, col:6> col:6 used err 'int'     |-DeclStmt 0x149027498 <line:9:2, col:19>     | |-RecordDecl 0x149027318 <col:2, col:9> col:9 struct km_event     | `-VarDecl 0x149027418 <col:2, col:18> col:18 referenced invalid c 'struct km_event'     |-DeclStmt 0x149027530 <line:10:2, col:12>     | `-VarDecl 0x1490274c8 <col:2, col:6> col:6 used delete 'int'     |-DeclStmt 0x14902ccd8 <line:11:2, col:20>     | |-RecordDecl 0x149027548 <col:2, col:9> col:9 struct xfrm_mark     | `-VarDecl 0x14902cc58 <col:2, col:19> col:19 invalid m 'struct xfrm_mark'     |-BinaryOperator 0x14902ced0 <line:14:2, col:20> 'struct xfrm_userpolicy_id *' '='     | |-DeclRefExpr 0x14902ccf0 <col:2> 'struct xfrm_userpolicy_id *' lvalue Var 0x1490271e8 'p' 'struct xfrm_userpolicy_id *'     | `-ImplicitCastExpr 0x14902ceb8 <col:6, col:20> 'struct xfrm_userpolicy_id *' <IntegralToPointer>     |   `-CallExpr 0x14902ce78 <col:6, col:20> 'int'     |     |-ImplicitCastExpr 0x14902ce60 <col:6> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14902cdf0 <col:6> 'int ()' Function 0x14902cd38 'nlmsg_data' 'int ()'     |     `-ImplicitCastExpr 0x14902cea0 <col:17> 'struct nlmsghdr *' <LValueToRValue>     |       `-DeclRefExpr 0x14902ce10 <col:17> 'struct nlmsghdr *' lvalue ParmVar 0x149026628 'nlh' 'struct nlmsghdr *'     |-BinaryOperator 0x14902d008 <line:15:2, col:30> 'int' contains-errors '='     | |-DeclRefExpr 0x14902cef0 <col:2> 'int' lvalue Var 0x1490274c8 'delete' 'int'     | `-BinaryOperator 0x14902cfe8 <col:11, col:30> 'int' contains-errors '=='     |   |-RecoveryExpr 0x14902cf48 <col:11, col:16> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14902cf10 <col:11> 'struct nlmsghdr *' lvalue ParmVar 0x149026628 'nlh' 'struct nlmsghdr *'     |   `-RecoveryExpr 0x14902cfc8 <col:30> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14902d250 <line:17:2, col:47> 'int' contains-errors '='     | |-DeclRefExpr 0x14902d028 <col:2> 'int' lvalue Var 0x149027298 'err' 'int'     | `-CallExpr 0x14902d220 <col:8, col:47> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14902d128 <col:8> 'int ()' Function 0x14902d070 'copy_from_user_policy_type' 'int ()'     |   |-UnaryOperator 0x14902d208 <col:35, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x14902d1e8 <col:36> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14902d178 <col:42> 'struct nlattr **' lvalue ParmVar 0x149026858 'attrs' 'struct nlattr **'     |-IfStmt 0x14902d2f0 <line:18:2, line:19:10>     | |-ImplicitCastExpr 0x14902d290 <line:18:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x14902d270 <col:6> 'int' lvalue Var 0x149027298 'err' 'int'     | `-ReturnStmt 0x14902d2e0 <line:19:3, col:10>     |   `-ImplicitCastExpr 0x14902d2c8 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x14902d2a8 <col:10> 'int' lvalue Var 0x149027298 'err' 'int'     |-BinaryOperator 0x14902d4b8 <line:21:2, col:32> 'int' contains-errors '='     | |-DeclRefExpr 0x14902d310 <col:2> 'int' lvalue Var 0x149027298 'err' 'int'     | `-CallExpr 0x14902d490 <col:8, col:32> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14902d410 <col:8> 'int ()' Function 0x14902d358 'verify_policy_dir' 'int ()'     |   `-RecoveryExpr 0x14902d468 <col:26, col:29> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14902d430 <col:26> 'struct xfrm_userpolicy_id *' lvalue Var 0x1490271e8 'p' 'struct xfrm_userpolicy_id *'     |-IfStmt 0x14902d558 <line:22:2, line:23:10>     | |-ImplicitCastExpr 0x14902d4f8 <line:22:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x14902d4d8 <col:6> 'int' lvalue Var 0x149027298 'err' 'int'     | `-ReturnStmt 0x14902d548 <line:23:3, col:10>     |   `-ImplicitCastExpr 0x14902d530 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x14902d510 <col:10> 'int' lvalue Var 0x149027298 'err' 'int'     |-IfStmt 0x149030260 <line:25:2, line:46:2> has_else     | |-RecoveryExpr 0x14902d5b0 <line:25:6, col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14902d578 <col:6> 'struct xfrm_userpolicy_id *' lvalue Var 0x1490271e8 'p' 'struct xfrm_userpolicy_id *'     | |-BinaryOperator 0x14902d9a8 <line:26:3, col:72> 'struct xfrm_policy *' contains-errors '='     | | |-DeclRefExpr 0x14902d5d8 <col:3> 'struct xfrm_policy *' lvalue Var 0x149026fe8 'xp' 'struct xfrm_policy *'     | | `-CallExpr 0x14902d950 <col:8, col:72> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x14902d6d8 <col:8> 'int ()' Function 0x14902d620 'xfrm_policy_byid' 'int ()'     | |   |-DeclRefExpr 0x14902d6f8 <col:25> 'struct net *' contains-errors lvalue Var 0x149026c08 'net' 'struct net *'     | |   |-RecoveryExpr 0x14902d910 <col:30> '<dependent type>' contains-errors lvalue     | |   |-RecoveryExpr 0x14902d930 <col:36> '<dependent type>' contains-errors lvalue     | |   |-RecoveryExpr 0x14902d780 <col:42, col:45> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x14902d748 <col:42> 'struct xfrm_userpolicy_id *' lvalue Var 0x1490271e8 'p' 'struct xfrm_userpolicy_id *'     | |   |-RecoveryExpr 0x14902d7e0 <col:50, col:53> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x14902d7a8 <col:50> 'struct xfrm_userpolicy_id *' lvalue Var 0x1490271e8 'p' 'struct xfrm_userpolicy_id *'     | |   |-DeclRefExpr 0x14902d808 <col:60> 'int' lvalue Var 0x1490274c8 'delete' 'int'     | |   `-UnaryOperator 0x14902d880 <col:68, col:69> 'int *' prefix '&' cannot overflow     | |     `-DeclRefExpr 0x14902d828 <col:69> 'int' lvalue Var 0x149027298 'err' 'int'     | `-CompoundStmt 0x149030220 <line:27:7, line:46:2>     |   |-DeclStmt 0x14902dae0 <line:28:3, col:43>     |   | `-VarDecl 0x14902da58 <col:3, col:18> col:18 used rt 'struct nlattr *'     |   |-DeclStmt 0x14902f508 <line:29:3, col:27>     |   | |-RecordDecl 0x14902daf8 <col:3, col:10> col:10 struct xfrm_sec_ctx     |   | `-VarDecl 0x14902f488 <col:3, col:24> col:24 used ctx 'struct xfrm_sec_ctx *'     |   |-BinaryOperator 0x14902f6b8 <line:31:3, col:33> 'int' '='     |   | |-DeclRefExpr 0x14902f520 <col:3> 'int' lvalue Var 0x149027298 'err' 'int'     |   | `-CallExpr 0x14902f678 <col:9, col:33> 'int'     |   |   |-ImplicitCastExpr 0x14902f660 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x14902f620 <col:9> 'int ()' Function 0x14902f568 'verify_sec_ctx_len' 'int ()'     |   |   `-ImplicitCastExpr 0x14902f6a0 <col:28> 'struct nlattr **' <LValueToRValue>     |   |     `-DeclRefExpr 0x14902f640 <col:28> 'struct nlattr **' lvalue ParmVar 0x149026858 'attrs' 'struct nlattr **'     |   |-IfStmt 0x14902f758 <line:32:3, line:33:11>     |   | |-ImplicitCastExpr 0x14902f6f8 <line:32:7> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x14902f6d8 <col:7> 'int' lvalue Var 0x149027298 'err' 'int'     |   | `-ReturnStmt 0x14902f748 <line:33:4, col:11>     |   |   `-ImplicitCastExpr 0x14902f730 <col:11> 'int' <LValueToRValue>     |   |     `-DeclRefExpr 0x14902f710 <col:11> 'int' lvalue Var 0x149027298 'err' 'int'     |   |-IfStmt 0x14902fdf8 <line:36:3, line:42:3>     |   | |-ImplicitCastExpr 0x14902f7b8 <line:36:7> 'struct nlattr *' <LValueToRValue>     |   | | `-DeclRefExpr 0x14902f798 <col:7> 'struct nlattr *' lvalue Var 0x14902da58 'rt' 'struct nlattr *'     |   | `-CompoundStmt 0x14902fdd8 <col:11, line:42:3>     |   |   |-DeclStmt 0x14902fb48 <line:37:4, col:49>     |   |   | |-RecordDecl 0x14902f7d0 <col:4, col:11> col:11 struct xfrm_user_sec_ctx     |   |   | `-VarDecl 0x14902f938 <col:4, col:48> col:30 used uctx 'struct xfrm_user_sec_ctx *' cinit     |   |   |   `-ImplicitCastExpr 0x14902fb18 <col:37, col:48> 'struct xfrm_user_sec_ctx *' <IntegralToPointer>     |   |   |     `-CallExpr 0x14902fad8 <col:37, col:48> 'int'     |   |   |       |-ImplicitCastExpr 0x14902fac0 <col:37> 'int (*)()' <FunctionToPointerDecay>     |   |   |       | `-DeclRefExpr 0x14902fa80 <col:37> 'int ()' Function 0x14902f9c8 'nla_data' 'int ()'     |   |   |       `-ImplicitCastExpr 0x14902fb00 <col:46> 'struct nlattr *' <LValueToRValue>     |   |   |         `-DeclRefExpr 0x14902faa0 <col:46> 'struct nlattr *' lvalue Var 0x14902da58 'rt' 'struct nlattr *'     |   |   `-IfStmt 0x14902fdb8 <line:40:4, line:41:12>     |   |     |-ImplicitCastExpr 0x14902fd58 <line:40:8> 'int' <LValueToRValue>     |   |     | `-DeclRefExpr 0x14902fd38 <col:8> 'int' lvalue Var 0x149027298 'err' 'int'     |   |     `-ReturnStmt 0x14902fda8 <line:41:5, col:12>     |   |       `-ImplicitCastExpr 0x14902fd90 <col:12> 'int' <LValueToRValue>     |   |         `-DeclRefExpr 0x14902fd70 <col:12> 'int' lvalue Var 0x149027298 'err' 'int'     |   `-CallExpr 0x1490301e0 <line:45:3, col:32> 'int'     |     |-ImplicitCastExpr 0x1490301c8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x149030188 <col:3> 'int ()' Function 0x1490300d0 'security_xfrm_policy_free' 'int ()'     |     `-ImplicitCastExpr 0x149030208 <col:29> 'struct xfrm_sec_ctx *' <LValueToRValue>     |       `-DeclRefExpr 0x1490301a8 <col:29> 'struct xfrm_sec_ctx *' lvalue Var 0x14902f488 'ctx' 'struct xfrm_sec_ctx *'     |-IfStmt 0x149031830 <line:50:2, line:71:2> has_else     | |-UnaryOperator 0x149030308 <line:50:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1490302f0 <col:7> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x1490302d0 <col:7> 'int' lvalue Var 0x1490274c8 'delete' 'int'     | |-CompoundStmt 0x149030e70 <col:15, line:60:2>     | | |-DeclStmt 0x149030468 <line:51:3, col:27>     | | | `-VarDecl 0x149030400 <col:3, col:19> col:19 used resp_skb 'struct sk_buff *'     | | |-BinaryOperator 0x1490306e0 <line:53:3, col:65> 'struct sk_buff *' contains-errors '='     | | | |-DeclRefExpr 0x149030480 <col:3> 'struct sk_buff *' lvalue Var 0x149030400 'resp_skb' 'struct sk_buff *'     | | | `-CallExpr 0x1490306a0 <col:14, col:65> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x149030580 <col:14> 'int ()' Function 0x1490304c8 'xfrm_policy_netlink' 'int ()'     | | |   |-DeclRefExpr 0x1490305a0 <col:34> 'struct sk_buff *' lvalue ParmVar 0x14900e248 'skb' 'struct sk_buff *'     | | |   |-DeclRefExpr 0x1490305c0 <col:39> 'struct xfrm_policy *' lvalue Var 0x149026fe8 'xp' 'struct xfrm_policy *'     | | |   |-RecoveryExpr 0x149030618 <col:43, col:46> '<dependent type>' contains-errors lvalue     | | |   | `-DeclRefExpr 0x1490305e0 <col:43> 'struct xfrm_userpolicy_id *' lvalue Var 0x1490271e8 'p' 'struct xfrm_userpolicy_id *'     | | |   `-RecoveryExpr 0x149030678 <col:51, col:56> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x149030640 <col:51> 'struct nlmsghdr *' lvalue ParmVar 0x149026628 'nlh' 'struct nlmsghdr *'     | | `-IfStmt 0x149030e40 <line:54:3, line:59:3> has_else     | |   |-CallExpr 0x149030838 <line:54:7, col:22> 'int'     | |   | |-ImplicitCastExpr 0x149030820 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | | `-DeclRefExpr 0x1490307e0 <col:7> 'int ()' Function 0x149030728 'IS_ERR' 'int ()'     | |   | `-ImplicitCastExpr 0x149030860 <col:14> 'struct sk_buff *' <LValueToRValue>     | |   |   `-DeclRefExpr 0x149030800 <col:14> 'struct sk_buff *' lvalue Var 0x149030400 'resp_skb' 'struct sk_buff *'     | |   |-CompoundStmt 0x149030a30 <col:25, line:56:3>     | |   | `-BinaryOperator 0x149030a10 <line:55:4, col:26> 'int' '='     | |   |   |-DeclRefExpr 0x149030878 <col:4> 'int' lvalue Var 0x149027298 'err' 'int'     | |   |   `-CallExpr 0x1490309d0 <col:10, col:26> 'int'     | |   |     |-ImplicitCastExpr 0x1490309b8 <col:10> 'int (*)()' <FunctionToPointerDecay>     | |   |     | `-DeclRefExpr 0x149030978 <col:10> 'int ()' Function 0x1490308c0 'PTR_ERR' 'int ()'     | |   |     `-ImplicitCastExpr 0x1490309f8 <col:18> 'struct sk_buff *' <LValueToRValue>     | |   |       `-DeclRefExpr 0x149030998 <col:18> 'struct sk_buff *' lvalue Var 0x149030400 'resp_skb' 'struct sk_buff *'     | |   `-CompoundStmt 0x149030e28 <line:56:10, line:59:3>     | |     `-BinaryOperator 0x149030e08 <line:57:4, line:58:32> 'int' contains-errors '='     | |       |-DeclRefExpr 0x149030a48 <line:57:4> 'int' lvalue Var 0x149027298 'err' 'int'     | |       `-CallExpr 0x149030dd0 <col:10, line:58:32> '<dependent type>' contains-errors     | |         |-DeclRefExpr 0x149030b48 <line:57:10> 'int ()' Function 0x149030a90 'nlmsg_unicast' 'int ()'     | |         |-CXXDependentScopeMemberExpr 0x149030bc8 <col:24, col:34> '<dependent type>' contains-errors lvalue .nlsk     | |         | `-RecoveryExpr 0x149030ba0 <col:24, col:29> '<dependent type>' contains-errors lvalue     | |         |   `-DeclRefExpr 0x149030b68 <col:24> 'struct net *' contains-errors lvalue Var 0x149026c08 'net' 'struct net *'     | |         |-DeclRefExpr 0x149030c10 <col:40> 'struct sk_buff *' lvalue Var 0x149030400 'resp_skb' 'struct sk_buff *'     | |         `-RecoveryExpr 0x149030da8 <line:58:10, col:26> '<dependent type>' contains-errors lvalue     | |           `-CallExpr 0x149030d68 <col:10, col:24> 'int'     | |             |-ImplicitCastExpr 0x149030d50 <col:10> 'int (*)()' <FunctionToPointerDecay>     | |             | `-DeclRefExpr 0x149030d10 <col:10> 'int ()' Function 0x149030c58 'NETLINK_CB' 'int ()'     | |             `-ImplicitCastExpr 0x149030d90 <col:21> 'struct sk_buff *' <LValueToRValue>     | |               `-DeclRefExpr 0x149030d30 <col:21> 'struct sk_buff *' lvalue ParmVar 0x14900e248 'skb' 'struct sk_buff *'     | `-CompoundStmt 0x1490317f0 <line:60:9, line:71:2>     |   |-IfStmt 0x149031140 <line:63:3, line:64:9>     |   | |-BinaryOperator 0x1490310b8 <line:63:7, col:14> 'int' '!='     |   | | |-ImplicitCastExpr 0x1490310a0 <col:7> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x149031060 <col:7> 'int' lvalue Var 0x149027298 'err' 'int'     |   | | `-IntegerLiteral 0x149031080 <col:14> 'int' 0     |   | `-GotoStmt 0x149031128 <line:64:4, col:9> 'out' 0x1490310d8     |   |-BinaryOperator 0x149031298 <line:66:3, col:20> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x1490311f0 <col:3, col:10> '<dependent type>' contains-errors lvalue .byid     |   | | `-CXXDependentScopeMemberExpr 0x1490311a8 <col:3, col:5> '<dependent type>' contains-errors lvalue .data     |   | |   `-RecoveryExpr 0x149031180 <col:3> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x149031160 <col:3> 'struct km_event' lvalue Var 0x149027418 'c' 'struct km_event'     |   | `-RecoveryExpr 0x149031270 <col:17, col:20> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x149031238 <col:17> 'struct xfrm_userpolicy_id *' lvalue Var 0x1490271e8 'p' 'struct xfrm_userpolicy_id *'     |   |-BinaryOperator 0x1490313a8 <line:67:3, col:18> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x149031300 <col:3, col:5> '<dependent type>' contains-errors lvalue .event     |   | | `-RecoveryExpr 0x1490312d8 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x1490312b8 <col:3> 'struct km_event' lvalue Var 0x149027418 'c' 'struct km_event'     |   | `-RecoveryExpr 0x149031380 <col:13, col:18> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x149031348 <col:13> 'struct nlmsghdr *' lvalue ParmVar 0x149026628 'nlh' 'struct nlmsghdr *'     |   |-BinaryOperator 0x1490314d0 <line:68:3, col:16> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x149031428 <col:3, col:5> '<dependent type>' contains-errors lvalue .seq     |   | | `-RecoveryExpr 0x149031400 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x1490313c8 <col:3> 'struct km_event' lvalue Var 0x149027418 'c' 'struct km_event'     |   | `-RecoveryExpr 0x1490314a8 <col:11, col:16> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x149031470 <col:11> 'struct nlmsghdr *' lvalue ParmVar 0x149026628 'nlh' 'struct nlmsghdr *'     |   |-BinaryOperator 0x1490315e0 <line:69:3, col:19> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x149031538 <col:3, col:5> '<dependent type>' contains-errors lvalue .portid     |   | | `-RecoveryExpr 0x149031510 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x1490314f0 <col:3> 'struct km_event' lvalue Var 0x149027418 'c' 'struct km_event'     |   | `-RecoveryExpr 0x1490315b8 <col:14, col:19> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x149031580 <col:14> 'struct nlmsghdr *' lvalue ParmVar 0x149026628 'nlh' 'struct nlmsghdr *'     |   `-CallExpr 0x1490317b8 <line:70:3, col:34> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1490316e0 <col:3> 'int ()' Function 0x149031628 'km_policy_notify' 'int ()'     |     |-DeclRefExpr 0x149031700 <col:20> 'struct xfrm_policy *' lvalue Var 0x149026fe8 'xp' 'struct xfrm_policy *'     |     |-RecoveryExpr 0x149031758 <col:24, col:27> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x149031720 <col:24> 'struct xfrm_userpolicy_id *' lvalue Var 0x1490271e8 'p' 'struct xfrm_userpolicy_id *'     |     `-UnaryOperator 0x1490317a0 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x149031780 <col:33> '<dependent type>' contains-errors lvalue     |-LabelStmt 0x1490319d8 <line:73:1, line:74:17> 'out'     | `-CallExpr 0x149031998 <col:2, col:17> 'int'     |   |-ImplicitCastExpr 0x149031980 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x149031940 <col:2> 'int ()' Function 0x149031888 'xfrm_pol_put' 'int ()'     |   `-ImplicitCastExpr 0x1490319c0 <col:15> 'struct xfrm_policy *' <LValueToRValue>     |     `-DeclRefExpr 0x149031960 <col:15> 'struct xfrm_policy *' lvalue Var 0x149026fe8 'xp' 'struct xfrm_policy *'     `-ReturnStmt 0x149031a30 <line:75:2, col:9>       `-ImplicitCastExpr 0x149031a18 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x1490319f8 <col:9> 'int' lvalue Var 0x149027298 'err' 'int' ","20800":"`-FunctionDecl 0x12900de08  line:1:8 invalid CompressElement 'int (const int)'   |-ParmVarDecl 0x12900dcf0 <col:24, <invalid sloc>> col:33 invalid 'const int'   `-CompoundStmt 0x129027d18 <line:2:48, line:51:1>     |-RecoveryExpr 0x12900dee8 <line:5:3> '<dependent type>' contains-errors lvalue     |-ForStmt 0x12900e098 <line:7:3, line:22:48>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-RecoveryExpr 0x12900df20 <line:21:3> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x12900e068 <line:22:3, col:47> '<dependent type>' contains-errors     | | |-CXXDependentScopeMemberExpr 0x12900e000 <col:3, col:16> '<dependent type>' contains-errors lvalue .resize_uninitialized     | | | `-RecoveryExpr 0x12900dfe0 <col:3> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12900e048 <col:37> '<dependent type>' contains-errors lvalue     | `-NullStmt 0x12900e090 <col:48>     |-DeclStmt 0x12900e258 <line:24:3, col:40>     | `-VarDecl 0x12900e0e8 <col:3, col:39> col:9 used position 'char *' cinit     |   `-CallExpr 0x12900e238 <col:20, col:39> '<dependent type>' contains-errors     |     `-CXXDependentScopeMemberExpr 0x12900e1f0 <col:20, col:33> '<dependent type>' contains-errors lvalue .mdata     |       `-RecoveryExpr 0x12900e1d0 <col:20> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x12900e310 <line:25:3, col:37>     | `-VarDecl 0x12900e288 <col:3, col:36> col:7 non_memcpy_component_index 'int' cinit     |   `-IntegerLiteral 0x12900e2f0 <col:36> 'int' 0     `-ForStmt 0x129027ce0 <line:26:3, line:49:41>       |-<<<NULL>>>       |-<<<NULL>>>       |-CallExpr 0x129027ca8 <line:42:3, col:56> '<dependent type>' contains-errors       | |-DeclRefExpr 0x129027ab8 <col:3> 'int ()' Function 0x129027a00 'DCHECK_EQ' 'int ()'       | |-DeclRefExpr 0x129027ad8 <col:13> 'char *' contains-errors lvalue Var 0x12900e0e8 'position' 'char *'       | `-BinaryOperator 0x129027c88 <col:23, col:46> '<dependent type>' contains-errors '+'       |   |-CallExpr 0x129027c48 <col:23, col:42> '<dependent type>' contains-errors       |   | `-CXXDependentScopeMemberExpr 0x129027c00 <col:23, col:36> '<dependent type>' contains-errors lvalue .mdata       |   |   `-RecoveryExpr 0x129027be0 <col:23> '<dependent type>' contains-errors lvalue       |   `-RecoveryExpr 0x129027c68 <col:46> '<dependent type>' contains-errors lvalue       |-<<<NULL>>>       `-NullStmt 0x129027cd8 <line:49:41> ","20367":"`-FunctionDecl 0x156122c30  col:6 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x156122d30 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x156122cd8 <<invalid sloc>> Implicit 902 ","21042":"`-FunctionDecl 0x138029828  col:32 implicit used strdup 'char *(const char *)' extern   |-ParmVarDecl 0x138029928 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x1380298d0 <<invalid sloc>> Implicit 950 ","20452":"`-FunctionDecl 0x1411281f8  line:1:19 invalid com_properties_get 'int *(int *)' static   |-ParmVarDecl 0x141128128 <col:38, col:44> col:44 invalid object 'int *'   `-CompoundStmt 0x1411282f0 <line:2:1, line:5:1>     `-ReturnStmt 0x1411282e0 <line:4:2, col:9>       `-RecoveryExpr 0x1411282c0 <col:9> '<dependent type>' contains-errors lvalue ","20532":"`-FunctionDecl 0x1279281c8  line:1:1 invalid hb_set_get_population 'int (const int *)'   |-ParmVarDecl 0x1279280f0 <col:24, col:40> col:40 invalid set 'const int *'   `-CompoundStmt 0x127928310 <line:2:1, line:4:1>     `-ReturnStmt 0x127928300 <line:3:3, col:31>       `-CallExpr 0x1279282e0 <col:10, col:31> '<dependent type>' contains-errors         `-CXXDependentScopeMemberExpr 0x127928298 <col:10, col:15> '<dependent type>' contains-errors lvalue ->get_population           `-RecoveryExpr 0x127928278 <col:10> '<dependent type>' contains-errors lvalue ","20919":"`-FunctionDecl 0x12d1281f0  line:1:6 invalid mobi_free_opf 'void (int *)'   |-ParmVarDecl 0x12d128128 <col:20, col:25> col:25 invalid opf 'int *'   `-CompoundStmt 0x12d141968 <col:30, line:6:1>     |-CallExpr 0x12d128488 <line:2:5, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d128400 <col:5> 'int ()' Function 0x12d128348 'mobi_free_opf_metadata' 'int ()'     | `-CXXDependentScopeMemberExpr 0x12d128440 <col:28, col:33> '<dependent type>' contains-errors lvalue ->metadata     |   `-RecoveryExpr 0x12d128420 <col:28> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12d128618 <line:3:5, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d128590 <col:5> 'int ()' Function 0x12d1284d8 'mobi_free_opf_manifest' 'int ()'     | `-CXXDependentScopeMemberExpr 0x12d1285d0 <col:28, col:33> '<dependent type>' contains-errors lvalue ->manifest     |   `-RecoveryExpr 0x12d1285b0 <col:28> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12d1287a8 <line:4:5, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d128720 <col:5> 'int ()' Function 0x12d128668 'mobi_free_opf_spine' 'int ()'     | `-CXXDependentScopeMemberExpr 0x12d128760 <col:25, col:30> '<dependent type>' contains-errors lvalue ->spine     |   `-RecoveryExpr 0x12d128740 <col:25> '<dependent type>' contains-errors lvalue     `-CallExpr 0x12d141940 <line:5:5, col:35> '<dependent type>' contains-errors       |-DeclRefExpr 0x12d1418b8 <col:5> 'int ()' Function 0x12d141800 'mobi_free_opf_guide' 'int ()'       `-CXXDependentScopeMemberExpr 0x12d1418f8 <col:25, col:30> '<dependent type>' contains-errors lvalue ->guide         `-RecoveryExpr 0x12d1418d8 <col:25> '<dependent type>' contains-errors lvalue ","20325":"`-FunctionDecl 0x124128b38  line:1:8 invalid operator 'int (())(int *, const int)' ","21168":"`-FunctionDecl 0x15100de88  line:1:1 invalid h263_video_type_find 'int (int *, int)'   |-ParmVarDecl 0x15100dd28 <col:23, col:37> col:37 invalid tf 'int *'   |-ParmVarDecl 0x15100dda8 <col:41, col:50> col:50 invalid unused 'int'   `-CompoundStmt 0x151028410 <line:2:1, line:49:1>     |-WhileStmt 0x151028120 <line:12:3, line:41:3>     | |-BinaryOperator 0x15100e060 <line:12:10, col:21> 'int' contains-errors '<'     | | |-CXXDependentScopeMemberExpr 0x15100dff8 <col:10, col:12> '<dependent type>' contains-errors lvalue .offset     | | | `-RecoveryExpr 0x15100dfd8 <col:10> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x15100e040 <col:21> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x151028100 <col:44, line:41:3>     |   |-IfStmt 0x151027ab8 <line:13:5, line:14:7>     |   | |-CallExpr 0x151027a88 <line:13:9, col:59> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x15100e1e0 <col:9> 'int ()' Function 0x15100e128 'G_UNLIKELY' 'int ()'     |   | | `-UnaryOperator 0x151027a70 <col:21, col:58> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | |   `-CallExpr 0x151027a38 <col:22, col:58> '<dependent type>' contains-errors     |   | |     |-DeclRefExpr 0x15100e2e0 <col:22> 'int ()' Function 0x15100e228 'data_scan_ctx_ensure_data' 'int ()'     |   | |     |-RecoveryExpr 0x15100e300 <col:49> '<dependent type>' contains-errors lvalue     |   | |     |-UnaryOperator 0x151027a20 <col:53, col:54> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | |     | `-RecoveryExpr 0x151027a00 <col:54> '<dependent type>' contains-errors lvalue     |   | |     `-IntegerLiteral 0x15100e350 <col:57> 'int' 4     |   | `-BreakStmt 0x151027ab0 <line:14:7>     |   `-IfStmt 0x151027fa0 <line:19:5, line:38:5>     |     |-RecoveryExpr 0x151027d60 <line:19:9, col:16> '_Bool' contains-errors     |     `-CompoundStmt 0x151027f88 <col:26, line:38:5>     |       `-IfStmt 0x151027f58 <line:27:7, line:35:9> has_else     |         |-RecoveryExpr 0x151027e60 <line:27:11, col:61> '_Bool' contains-errors     |         |-CompoundStmt 0x151027f40 <col:64, line:34:7>     |         `-NullStmt 0x151027f50 <line:35:9>     `-ReturnStmt 0x151028400 <line:48:3> ","21079":"`-FunctionDecl 0x14e128288  line:1:1 invalid header_put_le_3byte 'int (int *, int)'   |-ParmVarDecl 0x14e128128 <col:22, col:34> col:34 referenced invalid psf 'int *'   |-ParmVarDecl 0x14e1281a8 <col:39, col:43> col:43 used x 'int'   `-CompoundStmt 0x14e141c08 <line:2:1, line:7:1>     |-IfStmt 0x14e141be0 <line:2:3, line:6:3>     | |-BinaryOperator 0x14e1285f0 <line:2:7, col:54> 'int' contains-errors '<'     | | |-CXXDependentScopeMemberExpr 0x14e128360 <col:7, col:12> '<dependent type>' contains-errors lvalue ->headindex     | | | `-RecoveryExpr 0x14e128340 <col:7> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x14e1285d0 <col:24, col:54> '<dependent type>' contains-errors '-'     | |   |-CallExpr 0x14e128588 <col:24, col:50> '<dependent type>' contains-errors     | |   | |-DeclRefExpr 0x14e128500 <col:24> 'int ()' Function 0x14e128448 'SIGNED_SIZEOF' 'int ()'     | |   | `-CXXDependentScopeMemberExpr 0x14e128540 <col:39, col:44> '<dependent type>' contains-errors lvalue ->header     | |   |   `-RecoveryExpr 0x14e128520 <col:39> '<dependent type>' contains-errors lvalue     | |   `-IntegerLiteral 0x14e1285b0 <col:54> 'int' 3     | `-CompoundStmt 0x14e141bb8 <line:3:2, line:6:3>     |   |-BinaryOperator 0x14e128778 <line:3:4, col:37> '<dependent type>' contains-errors '='     |   | |-ArraySubscriptExpr 0x14e128738 <col:4, col:33> '<dependent type>' contains-errors lvalue     |   | | |-ImplicitCastExpr 0x14e128720 <col:4, col:9> '<dependent type>' contains-errors <LValueToRValue>     |   | | | `-CXXDependentScopeMemberExpr 0x14e128658 <col:4, col:9> '<dependent type>' contains-errors lvalue ->header     |   | | |   `-RecoveryExpr 0x14e128630 <col:4> '<dependent type>' contains-errors lvalue     |   | | |     `-DeclRefExpr 0x14e128610 <col:4> 'int *' lvalue ParmVar 0x14e128128 'psf' 'int *'     |   | | `-UnaryOperator 0x14e128708 <col:17, col:31> '<dependent type>' contains-errors postfix '++' cannot overflow     |   | |   `-CXXDependentScopeMemberExpr 0x14e1286c0 <col:17, col:22> '<dependent type>' contains-errors lvalue ->headindex     |   | |     `-RecoveryExpr 0x14e1286a0 <col:17> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14e128758 <col:37> 'int' lvalue ParmVar 0x14e1281a8 'x' 'int'     |   |-BinaryOperator 0x14e141998 <line:4:3, col:43> '<dependent type>' contains-errors '='     |   | |-ArraySubscriptExpr 0x14e1418e0 <col:3, col:32> '<dependent type>' contains-errors lvalue     |   | | |-ImplicitCastExpr 0x14e1418c8 <col:3, col:8> '<dependent type>' contains-errors <LValueToRValue>     |   | | | `-CXXDependentScopeMemberExpr 0x14e141800 <col:3, col:8> '<dependent type>' contains-errors lvalue ->header     |   | | |   `-RecoveryExpr 0x14e1287b8 <col:3> '<dependent type>' contains-errors lvalue     |   | | |     `-DeclRefExpr 0x14e128798 <col:3> 'int *' lvalue ParmVar 0x14e128128 'psf' 'int *'     |   | | `-UnaryOperator 0x14e1418b0 <col:16, col:30> '<dependent type>' contains-errors postfix '++' cannot overflow     |   | |   `-CXXDependentScopeMemberExpr 0x14e141868 <col:16, col:21> '<dependent type>' contains-errors lvalue ->headindex     |   | |     `-RecoveryExpr 0x14e141848 <col:16> '<dependent type>' contains-errors lvalue     |   | `-ParenExpr 0x14e141978 <col:36, col:43> 'int'     |   |   `-BinaryOperator 0x14e141958 <col:37, col:42> 'int' '>>'     |   |     |-ImplicitCastExpr 0x14e141940 <col:37> 'int' <LValueToRValue>     |   |     | `-DeclRefExpr 0x14e141900 <col:37> 'int' lvalue ParmVar 0x14e1281a8 'x' 'int'     |   |     `-IntegerLiteral 0x14e141920 <col:42> 'int' 8     |   `-BinaryOperator 0x14e141b98 <line:5:3, col:44> '<dependent type>' contains-errors '='     |     |-ArraySubscriptExpr 0x14e141ae0 <col:3, col:32> '<dependent type>' contains-errors lvalue     |     | |-ImplicitCastExpr 0x14e141ac8 <col:3, col:8> '<dependent type>' contains-errors <LValueToRValue>     |     | | `-CXXDependentScopeMemberExpr 0x14e141a00 <col:3, col:8> '<dependent type>' contains-errors lvalue ->header     |     | |   `-RecoveryExpr 0x14e1419d8 <col:3> '<dependent type>' contains-errors lvalue     |     | |     `-DeclRefExpr 0x14e1419b8 <col:3> 'int *' lvalue ParmVar 0x14e128128 'psf' 'int *'     |     | `-UnaryOperator 0x14e141ab0 <col:16, col:30> '<dependent type>' contains-errors postfix '++' cannot overflow     |     |   `-CXXDependentScopeMemberExpr 0x14e141a68 <col:16, col:21> '<dependent type>' contains-errors lvalue ->headindex     |     |     `-RecoveryExpr 0x14e141a48 <col:16> '<dependent type>' contains-errors lvalue     |     `-ParenExpr 0x14e141b78 <col:36, col:44> 'int'     |       `-BinaryOperator 0x14e141b58 <col:37, col:42> 'int' '>>'     |         |-ImplicitCastExpr 0x14e141b40 <col:37> 'int' <LValueToRValue>     |         | `-DeclRefExpr 0x14e141b00 <col:37> 'int' lvalue ParmVar 0x14e1281a8 'x' 'int'     |         `-IntegerLiteral 0x14e141b20 <col:42> 'int' 16     `-NullStmt 0x14e141c00 <line:6:5> ","20394":"`-FunctionDecl 0x130928750  line:1:6 Curl_detach_connnection 'void (struct Curl_easy *)'   |-ParmVarDecl 0x130928648 <col:30, col:48> col:48 used data 'struct Curl_easy *'   `-CompoundStmt 0x1309410c0 <line:2:1, line:7:1>     |-DeclStmt 0x130940c98 <line:3:3, col:40>     | |-RecordDecl 0x130940a48 <col:3, col:10> col:10 struct connectdata     | `-VarDecl 0x130940bb8 <col:3, col:36> col:23 used conn 'struct connectdata *' cinit     |   `-RecoveryExpr 0x130940c58 <col:30, col:36> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x130940c20 <col:30> 'struct Curl_easy *' lvalue ParmVar 0x130928648 'data' 'struct Curl_easy *'     |-IfStmt 0x130940fc8 <line:4:3, line:5:60>     | |-ImplicitCastExpr 0x130940cd0 <line:4:6> 'struct connectdata *' contains-errors <LValueToRValue>     | | `-DeclRefExpr 0x130940cb0 <col:6> 'struct connectdata *' contains-errors lvalue Var 0x130940bb8 'conn' 'struct connectdata *'     | `-CallExpr 0x130940f90 <line:5:5, col:60> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x130940e10 <col:5> 'int ()' Function 0x130940d58 'Curl_llist_remove' 'int ()'     |   |-UnaryOperator 0x130940e90 <col:23, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x130940e68 <col:24, col:30> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x130940e30 <col:24> 'struct connectdata *' contains-errors lvalue Var 0x130940bb8 'conn' 'struct connectdata *'     |   |-UnaryOperator 0x130940f08 <col:37, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x130940ee0 <col:38, col:44> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x130940ea8 <col:38> 'struct Curl_easy *' lvalue ParmVar 0x130928648 'data' 'struct Curl_easy *'     |   `-RecoveryExpr 0x130940f70 <col:56> '<dependent type>' contains-errors lvalue     `-BinaryOperator 0x1309410a0 <line:6:3, col:16> '<dependent type>' contains-errors '='       |-RecoveryExpr 0x130941020 <col:3, col:9> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x130940fe8 <col:3> 'struct Curl_easy *' lvalue ParmVar 0x130928648 'data' 'struct Curl_easy *'       `-RecoveryExpr 0x130941080 <col:16> '<dependent type>' contains-errors lvalue ","20276":"`-FunctionDecl 0x13c928750  line:1:6 __qdisc_run 'void (struct net_device *)'   |-ParmVarDecl 0x13c928648 <col:18, col:37> col:37 used dev 'struct net_device *'   `-CompoundStmt 0x13c941050 <line:2:1, line:9:1>     |-DoStmt 0x13c940e20 <line:3:2, line:6:36>     | |-CompoundStmt 0x13c940c78 <line:3:5, line:6:2>     | | `-IfStmt 0x13c940c58 <line:4:3, line:5:4>     | |   |-UnaryOperator 0x13c940c38 <line:4:7, col:25> 'int' prefix '!' cannot overflow     | |   | `-CallExpr 0x13c940bf8 <col:8, col:25> 'int'     | |   |   |-ImplicitCastExpr 0x13c940be0 <col:8> 'int (*)()' <FunctionToPointerDecay>     | |   |   | `-DeclRefExpr 0x13c940b70 <col:8> 'int ()' Function 0x13c940ab8 'qdisc_restart' 'int ()'     | |   |   `-ImplicitCastExpr 0x13c940c20 <col:22> 'struct net_device *' <LValueToRValue>     | |   |     `-DeclRefExpr 0x13c940b90 <col:22> 'struct net_device *' lvalue ParmVar 0x13c928648 'dev' 'struct net_device *'     | |   `-BreakStmt 0x13c940c50 <line:5:4>     | `-UnaryOperator 0x13c940e08 <line:6:11, col:35> 'int' prefix '!' cannot overflow     |   `-CallExpr 0x13c940dc8 <col:12, col:35> 'int'     |     |-ImplicitCastExpr 0x13c940db0 <col:12> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x13c940d70 <col:12> 'int ()' Function 0x13c940cb8 'netif_queue_stopped' 'int ()'     |     `-ImplicitCastExpr 0x13c940df0 <col:32> 'struct net_device *' <LValueToRValue>     |       `-DeclRefExpr 0x13c940d90 <col:32> 'struct net_device *' lvalue ParmVar 0x13c928648 'dev' 'struct net_device *'     `-CallExpr 0x13c941020 <line:8:2, col:51> '<dependent type>' contains-errors       |-DeclRefExpr 0x13c940f20 <col:2> 'int ()' Function 0x13c940e68 'clear_bit' 'int ()'       |-RecoveryExpr 0x13c941000 <col:12> '<dependent type>' contains-errors lvalue       `-UnaryOperator 0x13c940fb8 <col:40, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x13c940f90 <col:41, col:46> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x13c940f58 <col:41> 'struct net_device *' lvalue ParmVar 0x13c928648 'dev' 'struct net_device *' ","21046":"`-FunctionDecl 0x12900e488  line:1:12 invalid tcos_delete_file 'int (int *, const int *)' static   |-ParmVarDecl 0x12900e328 <col:29, col:40> col:40 invalid card 'int *'   |-ParmVarDecl 0x12900e3a8 <col:46, col:63> col:63 invalid path 'const int *'   `-CompoundStmt 0x128840198 <line:2:1, line:23:1>     |-DeclStmt 0x12900e5c0 <line:3:2, col:7>     | `-VarDecl 0x12900e558 <col:2, col:6> col:6 used r 'int'     |-CallExpr 0x12900e820 <line:7:2, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12900e730 <col:2> 'int ()' Function 0x12900e678 'SC_FUNC_CALLED' 'int ()'     | |-CXXDependentScopeMemberExpr 0x12900e770 <col:17, col:23> '<dependent type>' contains-errors lvalue ->ctx     | | `-RecoveryExpr 0x12900e750 <col:17> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x12900e800 <col:28> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12883f840 <line:8:2, line:11:2>     | |-BinaryOperator 0x12883f400 <line:8:6, col:57> 'int' contains-errors '&&'     | | |-BinaryOperator 0x12900e9d8 <col:6, col:20> 'int' contains-errors '!='     | | | |-CXXDependentScopeMemberExpr 0x12900e870 <col:6, col:12> '<dependent type>' contains-errors lvalue ->type     | | | | `-RecoveryExpr 0x12900e850 <col:6> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x12900e9b8 <col:20> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x12900e978 <col:44, col:57> 'int' contains-errors '!='     | |   |-CXXDependentScopeMemberExpr 0x12900e910 <col:44, col:50> '<dependent type>' contains-errors lvalue ->len     | |   | `-RecoveryExpr 0x12900e8f0 <col:44> '<dependent type>' contains-errors lvalue     | |   `-IntegerLiteral 0x12900e958 <col:57> 'int' 2     | `-CompoundStmt 0x12883f820 <col:60, line:11:2>     |   |-CallExpr 0x12883f5f0 <line:9:3, col:26> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12883f500 <col:3> 'int ()' Function 0x12883f448 'sc_log' 'int ()'     |   | |-CXXDependentScopeMemberExpr 0x12883f540 <col:10, col:16> '<dependent type>' contains-errors lvalue ->ctx     |   | | `-RecoveryExpr 0x12883f520 <col:10> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x12883f5d0 <col:21> 'char[4]' lvalue \"STR\"     |   `-CallExpr 0x12883f7f0 <line:10:3, col:56> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12883f700 <col:3> 'int ()' Function 0x12883f648 'LOG_FUNC_RETURN' 'int ()'     |     |-CXXDependentScopeMemberExpr 0x12883f740 <col:19, col:25> '<dependent type>' contains-errors lvalue ->ctx     |     | `-RecoveryExpr 0x12883f720 <col:19> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x12883f7d0 <col:30> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12883fc90 <line:14:2, col:68> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12883fb00 <col:2> 'int ()' Function 0x12883fa48 'sc_format_apdu' 'int ()'     | |-RecoveryExpr 0x12883fb20 <col:17> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x12883fc58 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x12883fc38 <col:24> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x12883fc70 <col:30> '<dependent type>' contains-errors lvalue     | |-IntegerLiteral 0x12883fb88 <col:52> 'int' 228     | |-IntegerLiteral 0x12883fba8 <col:58> 'int' 0     | `-IntegerLiteral 0x12883fbc8 <col:64> 'int' 0     `-CallExpr 0x128840040 <line:21:2, col:34> '<dependent type>' contains-errors       |-DeclRefExpr 0x12883ff78 <col:2> 'int ()' Function 0x12883fec0 'LOG_TEST_RET' 'int ()'       |-CXXDependentScopeMemberExpr 0x12883ffb8 <col:15, col:21> '<dependent type>' contains-errors lvalue ->ctx       | `-RecoveryExpr 0x12883ff98 <col:15> '<dependent type>' contains-errors lvalue       |-DeclRefExpr 0x128840000 <col:26> 'int' lvalue Var 0x12900e558 'r' 'int'       `-StringLiteral 0x128840020 <col:29> 'char[4]' lvalue \"STR\" ","20772":"`-FunctionDecl 0x135128190  line:2:13 kvm_resume 'void (void)' static   `-CompoundStmt 0x135128680 <line:3:1, line:7:3>     `-IfStmt 0x135128660 <line:4:2, line:7:2>       |-RecoveryExpr 0x1351282b0 <line:4:6> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x135128640 <col:23, line:7:2>         |-CallExpr 0x135128490 <line:5:3, col:42> '<dependent type>' contains-errors         | |-DeclRefExpr 0x1351283e0 <col:3> 'int ()' Function 0x135128328 'lockdep_assert_not_held' 'int ()'         | `-UnaryOperator 0x135128478 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow         |   `-RecoveryExpr 0x135128458 <col:28> '<dependent type>' contains-errors lvalue         `-CallExpr 0x135128618 <line:6:3, col:30> '<dependent type>' contains-errors           |-DeclRefExpr 0x135128598 <col:3> 'int ()' Function 0x1351284e0 'hardware_enable_nolock' 'int ()'           `-RecoveryExpr 0x1351285f8 <col:26> '<dependent type>' contains-errors lvalue ","21228":"`-FunctionDecl 0x14d80de38  line:1:1 TEST 'int (int, int)'   |-ParmVarDecl 0x14d80dd58 <col:6> col:6 EqOp 'int'   |-ParmVarDecl 0x14d80dcd8 <col:12> col:12 MatchesReferencedObjectValue 'int'   `-CompoundStmt 0x14d1231f8 <col:42, line:8:1>     |-CallExpr 0x14d122a48 <line:5:5, col:50> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14d80e0c0 <col:5> 'int ()' Function 0x14d80e008 'ASSERT' 'int ()'     | |-CallExpr 0x14d122a00 <col:12, col:43> '<dependent type>' contains-errors     | | |-CXXDependentScopeMemberExpr 0x14d1229b8 <col:12, col:15> '<dependent type>' contains-errors lvalue .matchesBSON     | | | `-RecoveryExpr 0x14d122998 <col:12> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x14d122900 <col:27, col:42> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x14d80e220 <col:27> 'int ()' Function 0x14d80e168 'BSON' 'int ()'     | |   `-RecoveryExpr 0x14d1228d0 <col:32, col:41> '<dependent type>' contains-errors lvalue     | |     |-StringLiteral 0x14d80e240 <col:32> 'char[4]' lvalue \"STR\"     | |     `-IntegerLiteral 0x14d80e260 <col:41> 'int' 5     | `-RecoveryExpr 0x14d122a28 <col:46> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14d122ef8 <line:6:5, col:62> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14d122a78 <col:5> 'int ()' Function 0x14d80e008 'ASSERT' 'int ()'     | |-CallExpr 0x14d122eb0 <col:12, col:55> '<dependent type>' contains-errors     | | |-CXXDependentScopeMemberExpr 0x14d122dd0 <col:12, col:15> '<dependent type>' contains-errors lvalue .matchesBSON     | | | `-RecoveryExpr 0x14d122db0 <col:12> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x14d122e88 <col:27, col:54> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x14d122af8 <col:27> 'int ()' Function 0x14d80e168 'BSON' 'int ()'     | |   `-RecoveryExpr 0x14d122e58 <col:32, col:53> '<dependent type>' contains-errors lvalue     | |     |-StringLiteral 0x14d122b18 <col:32> 'char[4]' lvalue \"STR\"     | |     `-CallExpr 0x14d122e30 <col:41, col:53> 'int'     | |       |-ImplicitCastExpr 0x14d122e18 <col:41> 'int (*)()' <FunctionToPointerDecay>     | |       | `-DeclRefExpr 0x14d122c18 <col:41> 'int ()' Function 0x14d122b60 'BSON_ARRAY' 'int ()'     | |       `-IntegerLiteral 0x14d122c38 <col:52> 'int' 5     | `-RecoveryExpr 0x14d122ed8 <col:58> '<dependent type>' contains-errors lvalue     `-BinaryOperator 0x14d1231d8 <line:7:5, col:47> '<dependent type>' contains-errors ','       |-CallExpr 0x14d123190 <col:5, col:44> '<dependent type>' contains-errors       | |-DeclRefExpr 0x14d122f28 <col:5> 'int ()' Function 0x14d80e008 'ASSERT' 'int ()'       | `-CallExpr 0x14d123168 <col:12, col:43> '<dependent type>' contains-errors       |   |-CXXDependentScopeMemberExpr 0x14d123120 <col:12, col:15> '<dependent type>' contains-errors lvalue .matchesBSON       |   | `-RecoveryExpr 0x14d123100 <col:12> '<dependent type>' contains-errors lvalue       |   `-CallExpr 0x14d123050 <col:27, col:42> '<dependent type>' contains-errors       |     |-DeclRefExpr 0x14d122fa8 <col:27> 'int ()' Function 0x14d80e168 'BSON' 'int ()'       |     `-RecoveryExpr 0x14d123020 <col:32, col:41> '<dependent type>' contains-errors lvalue       |       |-StringLiteral 0x14d122fc8 <col:32> 'char[4]' lvalue \"STR\"       |       `-IntegerLiteral 0x14d122fe8 <col:41> 'int' 5       `-RecoveryExpr 0x14d1231b8 <col:47> '<dependent type>' contains-errors lvalue ","20256":"`-FunctionDecl 0x10180e350  line:1:13 nfs_resync_open_stateid_locked 'void (struct nfs4_state *)' static   |-ParmVarDecl 0x10180e248 <col:44, col:63> col:63 used state 'struct nfs4_state *'   `-CompoundStmt 0x101826f80 <line:2:1, line:12:1>     |-IfStmt 0x1018267f0 <line:3:2, line:4:3>     | |-UnaryOperator 0x1018267c8 <line:3:6, col:59> 'int' contains-errors prefix '!' cannot overflow     | | `-ParenExpr 0x1018267a8 <col:7, col:59> 'int' contains-errors     | |   `-BinaryOperator 0x101826788 <col:8, col:53> 'int' contains-errors '||'     | |     |-BinaryOperator 0x101826708 <col:8, col:34> 'int' contains-errors '||'     | |     | |-RecoveryExpr 0x101826680 <col:8, col:15> '<dependent type>' contains-errors lvalue     | |     | | `-DeclRefExpr 0x101826648 <col:8> 'struct nfs4_state *' lvalue ParmVar 0x10180e248 'state' 'struct nfs4_state *'     | |     | `-RecoveryExpr 0x1018266e0 <col:27, col:34> '<dependent type>' contains-errors lvalue     | |     |   `-DeclRefExpr 0x1018266a8 <col:27> 'struct nfs4_state *' lvalue ParmVar 0x10180e248 'state' 'struct nfs4_state *'     | |     `-RecoveryExpr 0x101826760 <col:46, col:53> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x101826728 <col:46> 'struct nfs4_state *' lvalue ParmVar 0x10180e248 'state' 'struct nfs4_state *'     | `-ReturnStmt 0x1018267e0 <line:4:3>     |-IfStmt 0x101826ad0 <line:5:2, line:6:44>     | |-RecoveryExpr 0x101826848 <line:5:6, col:13> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x101826810 <col:6> 'struct nfs4_state *' lvalue ParmVar 0x10180e248 'state' 'struct nfs4_state *'     | `-CallExpr 0x101826aa0 <line:6:3, col:44> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1018269a0 <col:3> 'int ()' Function 0x1018268e8 'set_bit' 'int ()'     |   |-RecoveryExpr 0x101826a80 <col:11> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x101826a38 <col:31, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x101826a10 <col:32, col:39> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x1018269d8 <col:32> 'struct nfs4_state *' lvalue ParmVar 0x10180e248 'state' 'struct nfs4_state *'     |-IfStmt 0x101826c80 <line:7:2, line:8:44>     | |-RecoveryExpr 0x101826b28 <line:7:6, col:13> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x101826af0 <col:6> 'struct nfs4_state *' lvalue ParmVar 0x10180e248 'state' 'struct nfs4_state *'     | `-CallExpr 0x101826c50 <line:8:3, col:44> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x101826b50 <col:3> 'int ()' Function 0x1018268e8 'set_bit' 'int ()'     |   |-RecoveryExpr 0x101826c30 <col:11> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x101826be8 <col:31, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x101826bc0 <col:32, col:39> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x101826b88 <col:32> 'struct nfs4_state *' lvalue ParmVar 0x10180e248 'state' 'struct nfs4_state *'     |-IfStmt 0x101826e30 <line:9:2, line:10:42>     | |-RecoveryExpr 0x101826cd8 <line:9:6, col:13> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x101826ca0 <col:6> 'struct nfs4_state *' lvalue ParmVar 0x10180e248 'state' 'struct nfs4_state *'     | `-CallExpr 0x101826e00 <line:10:3, col:42> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x101826d00 <col:3> 'int ()' Function 0x1018268e8 'set_bit' 'int ()'     |   |-RecoveryExpr 0x101826de0 <col:11> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x101826d98 <col:29, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x101826d70 <col:30, col:37> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x101826d38 <col:30> 'struct nfs4_state *' lvalue ParmVar 0x10180e248 'state' 'struct nfs4_state *'     `-CallExpr 0x101826f50 <line:11:2, col:39> '<dependent type>' contains-errors       |-DeclRefExpr 0x101826e50 <col:2> 'int ()' Function 0x1018268e8 'set_bit' 'int ()'       |-RecoveryExpr 0x101826f30 <col:10> '<dependent type>' contains-errors lvalue       `-UnaryOperator 0x101826ee8 <col:26, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x101826ec0 <col:27, col:34> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x101826e88 <col:27> 'struct nfs4_state *' lvalue ParmVar 0x10180e248 'state' 'struct nfs4_state *' ","20320":"`-FunctionDecl 0x12a0f8c78  line:1:5 invalid exif_inf 'int (int, unsigned char *, unsigned char **, int, int)'   |-ParmVarDecl 0x12a0f88f0 <col:14, col:26> col:26 invalid png_ptr 'int'   |-ParmVarDecl 0x12a0f89a8 <col:35, col:50> col:50 used source 'unsigned char *'   |-ParmVarDecl 0x12a0f8a60 <line:2:5, col:21> col:21 used dest 'unsigned char **'   |-ParmVarDecl 0x12a0f8ae0 <col:27, col:34> col:34 invalid n 'int'   |-ParmVarDecl 0x12a0f8b60 <col:37, col:49> col:49 invalid inflated_size 'int'   `-CompoundStmt 0x12900c590 <line:3:1, line:60:1>     |-DeclStmt 0x12a0f8dc8 <line:6:5, col:12>     | `-VarDecl 0x12a0f8d60 <col:5, col:9> col:9 used ret 'int'     |-BinaryOperator 0x12a0f8e98 <line:9:5, col:30> 'unsigned long' contains-errors '='     | |-UnaryExprOrTypeTraitExpr 0x12a0f8e78 <col:5, col:12> 'unsigned long' contains-errors sizeof     | | `-RecoveryExpr 0x12a0f8e58 <col:12> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x12a0f8e18 <col:30> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12900bb08 <line:11:5, line:13:19>     | |-BinaryOperator 0x12900ba80 <line:11:9, line:12:28> 'int' contains-errors '||'     | | |-BinaryOperator 0x12900ba20 <line:11:9, col:56> 'int' contains-errors '>='     | | | |-RecoveryExpr 0x12a0f8fc0 <col:9> '<dependent type>' contains-errors lvalue     | | | `-BinaryOperator 0x12900ba00 <col:28, col:56> '<dependent type>' contains-errors '-'     | | |   |-RecoveryExpr 0x12a0f8fe0 <col:28> '<dependent type>' contains-errors lvalue     | | |   `-IntegerLiteral 0x12a0f8ee8 <col:56> 'unsigned int' 1     | | `-BinaryOperator 0x12900ba60 <line:12:9, col:28> 'int' contains-errors '=='     | |   |-RecoveryExpr 0x12900ba40 <col:9> '<dependent type>' contains-errors lvalue     | |   `-IntegerLiteral 0x12a0f8f60 <col:28> 'int' 0     | `-ReturnStmt 0x12900baf8 <line:13:9, col:19>     |   `-ParenExpr 0x12900bad8 <col:16, col:19> 'int'     |     `-UnaryOperator 0x12900bac0 <col:17, col:18> 'int' prefix '-'     |       `-IntegerLiteral 0x12900baa0 <col:18> 'int' 1     |-IfStmt 0x12900bf70 <line:30:5, line:31:19>     | |-RecoveryExpr 0x12900bee8 <line:30:9, col:16> '_Bool' contains-errors     | `-ReturnStmt 0x12900bf60 <line:31:9, col:19>     |   `-ParenExpr 0x12900bf40 <col:16, col:19> 'int'     |     `-UnaryOperator 0x12900bf28 <col:17, col:18> 'int' prefix '-'     |       `-IntegerLiteral 0x12900bf08 <col:18> 'int' 1     `-DoStmt 0x12900c550 <line:33:5, line:52:33>       |-CompoundStmt 0x12900c4f8 <line:33:8, line:52:5>       | `-DoStmt 0x12900c4d8 <line:38:9, line:50:37>       |   |-CompoundStmt 0x12900c480 <line:38:12, line:50:9>       |   | `-SwitchStmt 0x12900c2d8 <line:43:13, line:49:13>       |   |   |-ImplicitCastExpr 0x12900c2c0 <line:43:21> 'int' <LValueToRValue>       |   |   | `-DeclRefExpr 0x12900c2a0 <col:21> 'int' lvalue Var 0x12a0f8d60 'ret' 'int'       |   |   `-CompoundStmt 0x12900c468 <col:26, line:49:13>       |   |     `-ReturnStmt 0x12900c458 <line:48:17, col:27>       |   |       `-ParenExpr 0x12900c438 <col:24, col:27> 'int'       |   |         `-UnaryOperator 0x12900c420 <col:25, col:26> 'int' prefix '-'       |   |           `-IntegerLiteral 0x12900c400 <col:26> 'int' 1       |   `-RecoveryExpr 0x12900c4b8 <line:50:18, col:36> '_Bool' contains-errors       `-RecoveryExpr 0x12900c530 <line:52:14, col:21> '_Bool' contains-errors ","20254":"`-FunctionDecl 0x137940b48  line:1:12 nfs4_read_done 'int (struct rpc_task *, struct nfs_read_data *)' static   |-ParmVarDecl 0x137928648 <col:27, col:44> col:44 used task 'struct rpc_task *'   |-ParmVarDecl 0x137940a28 <col:50, col:72> col:72 used data 'struct nfs_read_data *'   `-CompoundStmt 0x137942830 <line:2:1, line:14:1>     |-DeclStmt 0x137941010 <line:3:2, col:53>     | |-RecordDecl 0x137940c48 <col:2, col:9> col:9 struct nfs_server     | `-VarDecl 0x137940db8 <col:2, col:52> col:21 used server 'struct nfs_server *' cinit     |   `-CallExpr 0x137940fd0 <col:30, col:52> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x137940f50 <col:30> 'int ()' Function 0x137940e98 'NFS_SERVER' 'int ()'     |     `-RecoveryExpr 0x137940fa8 <col:41, col:47> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x137940f70 <col:41> 'struct nfs_read_data *' lvalue ParmVar 0x137940a28 'data' 'struct nfs_read_data *'     |-IfStmt 0x1379415e0 <line:5:2, line:8:2>     | |-BinaryOperator 0x137941348 <line:5:6, col:75> 'int' contains-errors '=='     | | |-CallExpr 0x137941258 <col:6, col:69> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x137941108 <col:6> 'int ()' Function 0x137941050 'nfs4_async_handle_error' 'int ()'     | | | |-DeclRefExpr 0x137941128 <col:30> 'struct rpc_task *' lvalue ParmVar 0x137928648 'task' 'struct rpc_task *'     | | | |-DeclRefExpr 0x137941148 <col:36> 'struct nfs_server *' contains-errors lvalue Var 0x137940db8 'server' 'struct nfs_server *'     | | | `-CXXDependentScopeMemberExpr 0x137941210 <col:44, col:64> '<dependent type>' contains-errors lvalue ->state     | | |   `-CXXDependentScopeMemberExpr 0x1379411c8 <col:44, col:55> '<dependent type>' contains-errors lvalue .context     | | |     `-RecoveryExpr 0x1379411a0 <col:44, col:50> '<dependent type>' contains-errors lvalue     | | |       `-DeclRefExpr 0x137941168 <col:44> 'struct nfs_read_data *' lvalue ParmVar 0x137940a28 'data' 'struct nfs_read_data *'     | | `-UnaryOperator 0x137941330 <col:74, col:75> '<dependent type>' contains-errors prefix '-' cannot overflow     | |   `-ImplicitCastExpr 0x137941318 <col:75> '<dependent type>' contains-errors <LValueToRValue>     | |     `-RecoveryExpr 0x1379412f8 <col:75> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1379415c0 <col:83, line:8:2>     |   |-CallExpr 0x1379414d8 <line:6:3, col:24> 'int'     |   | |-ImplicitCastExpr 0x1379414c0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x137941448 <col:3> 'int ()' Function 0x137941390 'rpc_restart_call' 'int ()'     |   | `-ImplicitCastExpr 0x137941500 <col:20> 'struct rpc_task *' <LValueToRValue>     |   |   `-DeclRefExpr 0x137941468 <col:20> 'struct rpc_task *' lvalue ParmVar 0x137928648 'task' 'struct rpc_task *'     |   `-ReturnStmt 0x1379415b0 <line:7:3, col:11>     |     `-UnaryOperator 0x137941598 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x137941580 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x137941560 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x137941760 <line:10:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1379416e0 <col:2> 'int ()' Function 0x137941628 'nfs_invalidate_atime' 'int ()'     | `-RecoveryExpr 0x137941738 <col:23, col:29> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x137941700 <col:23> 'struct nfs_read_data *' lvalue ParmVar 0x137940a28 'data' 'struct nfs_read_data *'     |-IfStmt 0x1379419d8 <line:11:2, line:12:38>     | |-BinaryOperator 0x137941808 <line:11:6, col:24> 'int' contains-errors '>'     | | |-RecoveryExpr 0x1379417c0 <col:6, col:12> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x137941788 <col:6> 'struct rpc_task *' lvalue ParmVar 0x137928648 'task' 'struct rpc_task *'     | | `-IntegerLiteral 0x1379417e8 <col:24> 'int' 0     | `-CallExpr 0x1379419a8 <line:12:3, col:38> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x137941908 <col:3> 'int ()' Function 0x137941850 'renew_lease' 'int ()'     |   |-DeclRefExpr 0x137941928 <col:15> 'struct nfs_server *' contains-errors lvalue Var 0x137940db8 'server' 'struct nfs_server *'     |   `-RecoveryExpr 0x137941980 <col:23, col:29> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x137941948 <col:23> 'struct nfs_read_data *' lvalue ParmVar 0x137940a28 'data' 'struct nfs_read_data *'     `-ReturnStmt 0x137942820 <line:13:2, col:9>       `-IntegerLiteral 0x137942800 <col:9> 'int' 0 ","20922":"`-FunctionDecl 0x151141fa8  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x1511420a8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x151142110 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x151142178 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x151142050 <<invalid sloc>> Implicit 900 ","20261":"`-FunctionDecl 0x14d942298  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x14d942398 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x14d942400 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x14d942468 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14d942340 <<invalid sloc>> Implicit 882 ","21107":"`-FunctionDecl 0x140125060  col:7 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x140125160 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x1401251c8 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x140125230 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x140125108 <<invalid sloc>> Implicit 883 ","20324":"`-FunctionDecl 0x148940dd8  line:1:12 s390_compat_regs_set 'int (struct task_struct *, const struct user_regset *, unsigned int, unsigned int, const void *, int)' static   |-ParmVarDecl 0x148928648 <col:33, col:53> col:53 used target 'struct task_struct *'   |-ParmVarDecl 0x148940a28 <line:2:5, col:31> col:31 regset 'const struct user_regset *'   |-ParmVarDecl 0x148940aa8 <line:3:5, col:18> col:18 used pos 'unsigned int'   |-ParmVarDecl 0x148940b28 <col:23, col:36> col:36 used count 'unsigned int'   |-ParmVarDecl 0x148940bd8 <line:4:5, col:17> col:17 used kbuf 'const void *'   |-ParmVarDecl 0x148940c50 <col:23, col:34> col:34 __user 'int'   `-CompoundStmt 0x1489478c0 <line:5:1, line:35:1>     |-DeclStmt 0x148940f98 <line:6:2, col:12>     | `-VarDecl 0x148940f10 <col:2, col:11> col:6 used rc 'int' cinit     |   `-IntegerLiteral 0x148940f78 <col:11> 'int' 0     |-IfStmt 0x148941260 <line:8:2, line:9:39>     | |-BinaryOperator 0x148941040 <line:8:6, col:16> 'int' contains-errors '=='     | | |-DeclRefExpr 0x148940fb0 <col:6> 'struct task_struct *' lvalue ParmVar 0x148928648 'target' 'struct task_struct *'     | | `-RecoveryExpr 0x148941020 <col:16> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x148941238 <line:9:3, col:39> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x148941170 <col:3> 'int ()' Function 0x1489410b8 'save_access_regs' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x1489411f0 <col:20, col:35> '<dependent type>' contains-errors lvalue .acrs     |     `-RecoveryExpr 0x1489411c8 <col:20, col:28> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x148941190 <col:20> 'struct task_struct *' lvalue ParmVar 0x148928648 'target' 'struct task_struct *'     |-IfStmt 0x148947498 <line:11:2, line:29:2> has_else     | |-ImplicitCastExpr 0x1489412a0 <line:11:6> 'const void *' <LValueToRValue>     | | `-DeclRefExpr 0x148941280 <col:6> 'const void *' lvalue ParmVar 0x148940bd8 'kbuf' 'const void *'     | |-CompoundStmt 0x148941880 <col:12, line:18:2>     | | |-DeclStmt 0x148941358 <line:12:3, col:33>     | | | `-VarDecl 0x1489412d0 <col:3, col:25> col:25 invalid k 'const int *'     | | `-WhileStmt 0x148941860 <line:13:3, line:17:3>     | |   |-BinaryOperator 0x148941450 <line:13:10, col:24> 'int' '&&'     | |   | |-BinaryOperator 0x1489413e0 <col:10, col:18> 'int' '>'     | |   | | |-ImplicitCastExpr 0x1489413b0 <col:10> 'unsigned int' <LValueToRValue>     | |   | | | `-DeclRefExpr 0x148941370 <col:10> 'unsigned int' lvalue ParmVar 0x148940b28 'count' 'unsigned int'     | |   | | `-ImplicitCastExpr 0x1489413c8 <col:18> 'unsigned int' <IntegralCast>     | |   | |   `-IntegerLiteral 0x148941390 <col:18> 'int' 0     | |   | `-UnaryOperator 0x148941438 <col:23, col:24> 'int' prefix '!' cannot overflow     | |   |   `-ImplicitCastExpr 0x148941420 <col:24> 'int' <LValueToRValue>     | |   |     `-DeclRefExpr 0x148941400 <col:24> 'int' lvalue Var 0x148940f10 'rc' 'int'     | |   `-CompoundStmt 0x148941838 <col:28, line:17:3>     | |     |-BinaryOperator 0x148941658 <line:14:4, col:45> 'int' contains-errors '='     | |     | |-DeclRefExpr 0x148941470 <col:4> 'int' lvalue Var 0x148940f10 'rc' 'int'     | |     | `-CallExpr 0x148941620 <col:9, col:45> '<dependent type>' contains-errors     | |     |   |-DeclRefExpr 0x148941570 <col:9> 'int ()' Function 0x1489414b8 '__poke_user_compat' 'int ()'     | |     |   |-DeclRefExpr 0x148941590 <col:28> 'struct task_struct *' lvalue ParmVar 0x148928648 'target' 'struct task_struct *'     | |     |   |-DeclRefExpr 0x1489415b0 <col:36> 'unsigned int' lvalue ParmVar 0x148940aa8 'pos' 'unsigned int'     | |     |   `-UnaryOperator 0x148941608 <col:41, col:43> '<dependent type>' contains-errors prefix '*' cannot overflow     | |     |     `-UnaryOperator 0x1489415f0 <col:42, col:43> '<dependent type>' contains-errors postfix '++' cannot overflow     | |     |       `-RecoveryExpr 0x1489415d0 <col:42> '<dependent type>' contains-errors lvalue     | |     |-CompoundAssignOperator 0x148941728 <line:15:4, col:22> 'unsigned int' contains-errors '-=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'     | |     | |-DeclRefExpr 0x148941678 <col:4> 'unsigned int' lvalue ParmVar 0x148940b28 'count' 'unsigned int'     | |     | `-UnaryExprOrTypeTraitExpr 0x148941708 <col:13, col:22> 'unsigned long' contains-errors sizeof     | |     |   `-ParenExpr 0x1489416e8 <col:19, col:22> '<dependent type>' contains-errors     | |     |     `-UnaryOperator 0x1489416d0 <col:20, col:21> '<dependent type>' contains-errors prefix '*' cannot overflow     | |     |       `-ImplicitCastExpr 0x1489416b8 <col:21> '<dependent type>' contains-errors <LValueToRValue>     | |     |         `-RecoveryExpr 0x148941698 <col:21> '<dependent type>' contains-errors lvalue     | |     `-CompoundAssignOperator 0x148941808 <line:16:4, col:20> 'unsigned int' contains-errors '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'     | |       |-DeclRefExpr 0x148941758 <col:4> 'unsigned int' lvalue ParmVar 0x148940aa8 'pos' 'unsigned int'     | |       `-UnaryExprOrTypeTraitExpr 0x1489417e8 <col:11, col:20> 'unsigned long' contains-errors sizeof     | |         `-ParenExpr 0x1489417c8 <col:17, col:20> '<dependent type>' contains-errors     | |           `-UnaryOperator 0x1489417b0 <col:18, col:19> '<dependent type>' contains-errors prefix '*' cannot overflow     | |             `-ImplicitCastExpr 0x148941798 <col:19> '<dependent type>' contains-errors <LValueToRValue>     | |               `-RecoveryExpr 0x148941778 <col:19> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x148947478 <line:18:9, line:29:2>     |   |-DeclStmt 0x148941920 <line:19:3, col:32>     |   | `-VarDecl 0x1489418b8 <col:3, col:25> col:25 invalid __user 'const int'     |   `-WhileStmt 0x148947458 <line:20:3, line:28:3>     |     |-BinaryOperator 0x148947018 <line:20:10, col:24> 'int' '&&'     |     | |-BinaryOperator 0x1489419a8 <col:10, col:18> 'int' '>'     |     | | |-ImplicitCastExpr 0x148941978 <col:10> 'unsigned int' <LValueToRValue>     |     | | | `-DeclRefExpr 0x148941938 <col:10> 'unsigned int' lvalue ParmVar 0x148940b28 'count' 'unsigned int'     |     | | `-ImplicitCastExpr 0x148941990 <col:18> 'unsigned int' <IntegralCast>     |     | |   `-IntegerLiteral 0x148941958 <col:18> 'int' 0     |     | `-UnaryOperator 0x148947000 <col:23, col:24> 'int' prefix '!' cannot overflow     |     |   `-ImplicitCastExpr 0x1489419e8 <col:24> 'int' <LValueToRValue>     |     |     `-DeclRefExpr 0x1489419c8 <col:24> 'int' lvalue Var 0x148940f10 'rc' 'int'     |     `-CompoundStmt 0x148947438 <col:28, line:28:3>     |       |-IfStmt 0x1489471e0 <line:23:4, line:24:5>     |       | |-ImplicitCastExpr 0x1489471c0 <line:23:8> 'int' <LValueToRValue>     |       | | `-DeclRefExpr 0x1489471a0 <col:8> 'int' lvalue Var 0x148940f10 'rc' 'int'     |       | `-BreakStmt 0x1489471d8 <line:24:5>     |       `-BinaryOperator 0x148947348 <line:25:4, col:45> 'int' contains-errors '='     |         |-DeclRefExpr 0x148947200 <col:4> 'int' lvalue Var 0x148940f10 'rc' 'int'     |         `-CallExpr 0x148947310 <col:9, col:45> '<dependent type>' contains-errors     |           |-DeclRefExpr 0x148947220 <col:9> 'int ()' Function 0x1489414b8 '__poke_user_compat' 'int ()'     |           |-DeclRefExpr 0x148947240 <col:28> 'struct task_struct *' lvalue ParmVar 0x148928648 'target' 'struct task_struct *'     |           |-DeclRefExpr 0x148947260 <col:36> 'unsigned int' lvalue ParmVar 0x148940aa8 'pos' 'unsigned int'     |           `-RecoveryExpr 0x1489472f0 <col:41> '<dependent type>' contains-errors lvalue     |-IfStmt 0x148947858 <line:31:2, line:32:42>     | |-BinaryOperator 0x148947668 <line:31:6, col:27> 'int' contains-errors '&&'     | | |-BinaryOperator 0x148947608 <col:6, col:12> 'int' '=='     | | | |-ImplicitCastExpr 0x1489475f0 <col:6> 'int' <LValueToRValue>     | | | | `-DeclRefExpr 0x1489474c8 <col:6> 'int' lvalue Var 0x148940f10 'rc' 'int'     | | | `-IntegerLiteral 0x1489474e8 <col:12> 'int' 0     | | `-BinaryOperator 0x148947648 <col:17, col:27> 'int' contains-errors '=='     | |   |-DeclRefExpr 0x148947540 <col:17> 'struct task_struct *' lvalue ParmVar 0x148928648 'target' 'struct task_struct *'     | |   `-RecoveryExpr 0x148947628 <col:27> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x148947830 <line:32:3, col:42> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x148947768 <col:3> 'int ()' Function 0x1489476b0 'restore_access_regs' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x1489477e8 <col:23, col:38> '<dependent type>' contains-errors lvalue .acrs     |     `-RecoveryExpr 0x1489477c0 <col:23, col:31> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x148947788 <col:23> 'struct task_struct *' lvalue ParmVar 0x148928648 'target' 'struct task_struct *'     `-ReturnStmt 0x1489478b0 <line:34:2, col:9>       `-ImplicitCastExpr 0x148947898 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x148947878 <col:9> 'int' lvalue Var 0x148940f10 'rc' 'int' ","21233":"`-FunctionDecl 0x14b00dd98  line:1:1 litest_utils_suite 'int (void)'   `-CompoundStmt 0x14b028d10 <line:2:1, line:52:1>     |-CallExpr 0x14b028400 <line:9:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b00e340 <col:2> 'int ()' Function 0x14b00e288 'tcase_add_test' 'int ()'     | |-RecoveryExpr 0x14b00e3c0 <col:17> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14b00e3e0 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14b0284f0 <line:10:2, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b028430 <col:2> 'int ()' Function 0x14b00e288 'tcase_add_test' 'int ()'     | |-RecoveryExpr 0x14b0284b0 <col:17> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14b0284d0 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14b0285e0 <line:11:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b028520 <col:2> 'int ()' Function 0x14b00e288 'tcase_add_test' 'int ()'     | |-RecoveryExpr 0x14b0285a0 <col:17> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14b0285c0 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14b0286d0 <line:12:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b028610 <col:2> 'int ()' Function 0x14b00e288 'tcase_add_test' 'int ()'     | |-RecoveryExpr 0x14b028690 <col:17> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14b0286b0 <col:21> '<dependent type>' contains-errors lvalue     `-CallExpr 0x14b0287c0 <line:13:2, col:39> '<dependent type>' contains-errors       |-DeclRefExpr 0x14b028700 <col:2> 'int ()' Function 0x14b00e288 'tcase_add_test' 'int ()'       |-RecoveryExpr 0x14b028780 <col:17> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x14b0287a0 <col:21> '<dependent type>' contains-errors lvalue ","20855":"`-FunctionDecl 0x14601ef50  line:1:13 ax25_kill_by_device 'void (struct net_device *)' static   |-ParmVarDecl 0x14601ee48 <col:33, col:52> col:52 used dev 'struct net_device *'   `-CompoundStmt 0x14604e2d0 <line:2:1, line:37:1>     |-DeclStmt 0x14604b478 <line:5:2, col:17>     | |-RecordDecl 0x14604b290 <col:2, col:9> col:9 struct sock     | `-VarDecl 0x14604b3f8 <col:2, col:15> col:15 used sk 'struct sock *'     |-IfStmt 0x14604b6f0 <line:7:2, line:8:3>     | |-RecoveryExpr 0x14604b6c0 <line:7:6, col:44> '_Bool' contains-errors     | `-ReturnStmt 0x14604b6e0 <line:8:3>     |-CallExpr 0x14604b8a0 <line:10:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14604b7f0 <col:2> 'int ()' Function 0x14604b738 'spin_lock_bh' 'int ()'     | `-UnaryOperator 0x14604b888 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14604b868 <col:16> '<dependent type>' contains-errors lvalue     |-LabelStmt 0x14604bb18 <line:11:1, line:12:29> 'again'     | `-CallExpr 0x14604ba98 <col:2, col:29> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14604b9a8 <col:2> 'int ()' Function 0x14604b8f0 'ax25_for_each' 'int ()'     |   |-RecoveryExpr 0x14604ba40 <col:16> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x14604ba80 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x14604ba60 <col:20> '<dependent type>' contains-errors lvalue     `-CompoundStmt 0x14604e298 <col:31, line:35:2>       `-IfStmt 0x14604e278 <line:13:3, line:34:3>         |-BinaryOperator 0x14604bc58 <line:13:7, col:22> 'int' contains-errors '=='         | |-CXXDependentScopeMemberExpr 0x14604bbf0 <col:7, col:10> '<dependent type>' contains-errors lvalue ->ax25_dev         | | `-RecoveryExpr 0x14604bbd0 <col:7> '<dependent type>' contains-errors lvalue         | `-RecoveryExpr 0x14604bc38 <col:22> '<dependent type>' contains-errors lvalue         `-CompoundStmt 0x14604e230 <col:32, line:34:3>           |-BinaryOperator 0x14604bd80 <line:14:4, col:12> 'struct sock *' contains-errors '='           | |-DeclRefExpr 0x14604bc78 <col:4> 'struct sock *' lvalue Var 0x14604b3f8 'sk' 'struct sock *'           | `-CXXDependentScopeMemberExpr 0x14604bd38 <col:9, col:12> '<dependent type>' contains-errors lvalue ->sk           |   `-RecoveryExpr 0x14604bd18 <col:9> '<dependent type>' contains-errors lvalue           |-IfStmt 0x14604c118 <line:15:4, line:21:4>           | |-UnaryOperator 0x14604bdd8 <line:15:8, col:9> 'int' prefix '!' cannot overflow           | | `-ImplicitCastExpr 0x14604bdc0 <col:9> 'struct sock *' <LValueToRValue>           | |   `-DeclRefExpr 0x14604bda0 <col:9> 'struct sock *' lvalue Var 0x14604b3f8 'sk' 'struct sock *'           | `-CompoundStmt 0x14604c0f8 <col:13, line:21:4>           |   |-CallExpr 0x14604bf80 <line:16:5, col:35> '<dependent type>' contains-errors           |   | |-DeclRefExpr 0x14604bed0 <col:5> 'int ()' Function 0x14604be18 'spin_unlock_bh' 'int ()'           |   | `-UnaryOperator 0x14604bf68 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow           |   |   `-RecoveryExpr 0x14604bf48 <col:21> '<dependent type>' contains-errors lvalue           |   `-GotoStmt 0x14604c0e0 <line:20:5, col:10> 'again' 0x14604bac8           |-CallExpr 0x14604db10 <line:22:4, col:16> 'int'           | |-ImplicitCastExpr 0x14604daf8 <col:4> 'int (*)()' <FunctionToPointerDecay>           | | `-DeclRefExpr 0x14604dab8 <col:4> 'int ()' Function 0x14604da00 'sock_hold' 'int ()'           | `-ImplicitCastExpr 0x14604db38 <col:14> 'struct sock *' <LValueToRValue>           |   `-DeclRefExpr 0x14604dad8 <col:14> 'struct sock *' lvalue Var 0x14604b3f8 'sk' 'struct sock *'           |-CallExpr 0x14604dca8 <line:24:4, col:16> 'int'           | |-ImplicitCastExpr 0x14604dc90 <col:4> 'int (*)()' <FunctionToPointerDecay>           | | `-DeclRefExpr 0x14604dc50 <col:4> 'int ()' Function 0x14604db98 'lock_sock' 'int ()'           | `-ImplicitCastExpr 0x14604dcd0 <col:14> 'struct sock *' <LValueToRValue>           |   `-DeclRefExpr 0x14604dc70 <col:14> 'struct sock *' lvalue Var 0x14604b3f8 'sk' 'struct sock *'           |-CallExpr 0x14604e040 <line:29:4, col:19> 'int'           | |-ImplicitCastExpr 0x14604e028 <col:4> 'int (*)()' <FunctionToPointerDecay>           | | `-DeclRefExpr 0x14604dfe8 <col:4> 'int ()' Function 0x14604df30 'release_sock' 'int ()'           | `-ImplicitCastExpr 0x14604e068 <col:17> 'struct sock *' <LValueToRValue>           |   `-DeclRefExpr 0x14604e008 <col:17> 'struct sock *' lvalue Var 0x14604b3f8 'sk' 'struct sock *'           |-CallExpr 0x14604e1d8 <line:31:4, col:15> 'int'           | |-ImplicitCastExpr 0x14604e1c0 <col:4> 'int (*)()' <FunctionToPointerDecay>           | | `-DeclRefExpr 0x14604e180 <col:4> 'int ()' Function 0x14604e0c8 'sock_put' 'int ()'           | `-ImplicitCastExpr 0x14604e200 <col:13> 'struct sock *' <LValueToRValue>           |   `-DeclRefExpr 0x14604e1a0 <col:13> 'struct sock *' lvalue Var 0x14604b3f8 'sk' 'struct sock *'           `-GotoStmt 0x14604e218 <line:33:4, col:9> 'again' 0x14604bac8 ","20805":"`-FunctionDecl 0x1608089f8  col:17 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x160808af8 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x160808aa0 <<invalid sloc>> Implicit 902 ","20353":"`-FunctionDecl 0x15200de58  line:1:1 referenced invalid virDomainHostdevMatchSubsys 'int (int, int)'   |-ParmVarDecl 0x15200dcf0 <col:29, col:52> col:52 invalid a 'int'   |-ParmVarDecl 0x15200dd70 <line:2:29, col:52> col:52 invalid b 'int'   `-CompoundStmt 0x152028d38 <line:3:1, line:36:1>     |-IfStmt 0x15200e150 <line:4:5, line:5:16>     | |-BinaryOperator 0x15200e100 <line:4:9, col:51> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x15200dfc0 <col:9, col:26> '<dependent type>' contains-errors lvalue .type     | | | `-CXXDependentScopeMemberExpr 0x15200df78 <col:9, col:19> '<dependent type>' contains-errors lvalue .subsys     | | |   `-CXXDependentScopeMemberExpr 0x15200df30 <col:9, col:12> '<dependent type>' contains-errors lvalue ->source     | | |     `-RecoveryExpr 0x15200df10 <col:9> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x15200e0b8 <col:34, col:51> '<dependent type>' contains-errors lvalue .type     | |   `-CXXDependentScopeMemberExpr 0x15200e070 <col:34, col:44> '<dependent type>' contains-errors lvalue .subsys     | |     `-CXXDependentScopeMemberExpr 0x15200e028 <col:34, col:37> '<dependent type>' contains-errors lvalue ->source     | |       `-RecoveryExpr 0x15200e008 <col:34> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x15200e140 <line:5:9, col:16>     |   `-IntegerLiteral 0x15200e120 <col:16> 'int' 0     |-SwitchStmt 0x15200e1c8 <line:7:5, line:34:5>     | |-RecoveryExpr 0x15200e1a8 <line:7:13, col:59> 'int' contains-errors     | `-CompoundStmt 0x152028cb8 <col:65, line:34:5>     |   |-ReturnStmt 0x15200e3f0 <line:9:9, col:51>     |   | `-CallExpr 0x15200e3c0 <col:16, col:51> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x15200e360 <col:16> 'int ()' Function 0x15200e2a8 'virDomainHostdevMatchSubsysPCI' 'int ()'     |   |   |-RecoveryExpr 0x15200e380 <col:47> '<dependent type>' contains-errors lvalue     |   |   `-RecoveryExpr 0x15200e3a0 <col:50> '<dependent type>' contains-errors lvalue     |   |-ReturnStmt 0x152027588 <line:11:9, col:51>     |   | `-CallExpr 0x152027558 <col:16, col:51> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x1520274f8 <col:16> 'int ()' Function 0x152027440 'virDomainHostdevMatchSubsysUSB' 'int ()'     |   |   |-RecoveryExpr 0x152027518 <col:47> '<dependent type>' contains-errors lvalue     |   |   `-RecoveryExpr 0x152027538 <col:50> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x152027910 <line:13:9, line:15:20>     |   | |-BinaryOperator 0x1520278c0 <line:13:13, line:14:37> 'int' contains-errors '!='     |   | | |-CXXDependentScopeMemberExpr 0x1520276f0 <line:13:13, col:37> '<dependent type>' contains-errors lvalue .protocol     |   | | | `-CXXDependentScopeMemberExpr 0x1520276a8 <col:13, col:32> '<dependent type>' contains-errors lvalue .scsi     |   | | |   `-CXXDependentScopeMemberExpr 0x152027660 <col:13, col:30> '<dependent type>' contains-errors lvalue .u     |   | | |     `-CXXDependentScopeMemberExpr 0x152027618 <col:13, col:23> '<dependent type>' contains-errors lvalue .subsys     |   | | |       `-CXXDependentScopeMemberExpr 0x1520275d0 <col:13, col:16> '<dependent type>' contains-errors lvalue ->source     |   | | |         `-RecoveryExpr 0x1520275b0 <col:13> '<dependent type>' contains-errors lvalue     |   | | `-CXXDependentScopeMemberExpr 0x152027878 <line:14:13, col:37> '<dependent type>' contains-errors lvalue .protocol     |   | |   `-CXXDependentScopeMemberExpr 0x152027830 <col:13, col:32> '<dependent type>' contains-errors lvalue .scsi     |   | |     `-CXXDependentScopeMemberExpr 0x1520277e8 <col:13, col:30> '<dependent type>' contains-errors lvalue .u     |   | |       `-CXXDependentScopeMemberExpr 0x1520277a0 <col:13, col:23> '<dependent type>' contains-errors lvalue .subsys     |   | |         `-CXXDependentScopeMemberExpr 0x152027758 <col:13, col:16> '<dependent type>' contains-errors lvalue ->source     |   | |           `-RecoveryExpr 0x152027738 <col:13> '<dependent type>' contains-errors lvalue     |   | `-ReturnStmt 0x152027900 <line:15:13, col:20>     |   |   `-IntegerLiteral 0x1520278e0 <col:20> 'int' 0     |   |-IfStmt 0x152027e30 <line:16:9, line:20:60> has_else     |   | |-BinaryOperator 0x152027b10 <line:16:13, line:17:13> 'int' contains-errors '=='     |   | | |-CXXDependentScopeMemberExpr 0x152027a70 <line:16:13, col:37> '<dependent type>' contains-errors lvalue .protocol     |   | | | `-CXXDependentScopeMemberExpr 0x152027a28 <col:13, col:32> '<dependent type>' contains-errors lvalue .scsi     |   | | |   `-CXXDependentScopeMemberExpr 0x1520279e0 <col:13, col:30> '<dependent type>' contains-errors lvalue .u     |   | | |     `-CXXDependentScopeMemberExpr 0x152027998 <col:13, col:23> '<dependent type>' contains-errors lvalue .subsys     |   | | |       `-CXXDependentScopeMemberExpr 0x152027950 <col:13, col:16> '<dependent type>' contains-errors lvalue ->source     |   | | |         `-RecoveryExpr 0x152027930 <col:13> '<dependent type>' contains-errors lvalue     |   | | `-RecoveryExpr 0x152027af0 <line:17:13> '<dependent type>' contains-errors lvalue     |   | |-ReturnStmt 0x152027ca0 <line:18:13, col:61>     |   | | `-CallExpr 0x152027c70 <col:20, col:61> '<dependent type>' contains-errors     |   | |   |-DeclRefExpr 0x152027c10 <col:20> 'int ()' Function 0x152027b58 'virDomainHostdevMatchSubsysSCSIiSCSI' 'int ()'     |   | |   |-RecoveryExpr 0x152027c30 <col:57> '<dependent type>' contains-errors lvalue     |   | |   `-RecoveryExpr 0x152027c50 <col:60> '<dependent type>' contains-errors lvalue     |   | `-ReturnStmt 0x152027e20 <line:20:13, col:60>     |   |   `-CallExpr 0x152027df0 <col:20, col:60> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x152027d90 <col:20> 'int ()' Function 0x152027cd8 'virDomainHostdevMatchSubsysSCSIHost' 'int ()'     |   |     |-RecoveryExpr 0x152027db0 <col:56> '<dependent type>' contains-errors lvalue     |   |     `-RecoveryExpr 0x152027dd0 <col:59> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x1520281d8 <line:22:9, line:24:20>     |   | |-BinaryOperator 0x152028188 <line:22:13, line:23:42> 'int' contains-errors '!='     |   | | |-CXXDependentScopeMemberExpr 0x152027fb8 <line:22:13, col:42> '<dependent type>' contains-errors lvalue .protocol     |   | | | `-CXXDependentScopeMemberExpr 0x152027f70 <col:13, col:32> '<dependent type>' contains-errors lvalue .scsi_host     |   | | |   `-CXXDependentScopeMemberExpr 0x152027f28 <col:13, col:30> '<dependent type>' contains-errors lvalue .u     |   | | |     `-CXXDependentScopeMemberExpr 0x152027ee0 <col:13, col:23> '<dependent type>' contains-errors lvalue .subsys     |   | | |       `-CXXDependentScopeMemberExpr 0x152027e98 <col:13, col:16> '<dependent type>' contains-errors lvalue ->source     |   | | |         `-RecoveryExpr 0x152027e78 <col:13> '<dependent type>' contains-errors lvalue     |   | | `-CXXDependentScopeMemberExpr 0x152028140 <line:23:13, col:42> '<dependent type>' contains-errors lvalue .protocol     |   | |   `-CXXDependentScopeMemberExpr 0x1520280f8 <col:13, col:32> '<dependent type>' contains-errors lvalue .scsi_host     |   | |     `-CXXDependentScopeMemberExpr 0x1520280b0 <col:13, col:30> '<dependent type>' contains-errors lvalue .u     |   | |       `-CXXDependentScopeMemberExpr 0x152028068 <col:13, col:23> '<dependent type>' contains-errors lvalue .subsys     |   | |         `-CXXDependentScopeMemberExpr 0x152028020 <col:13, col:16> '<dependent type>' contains-errors lvalue ->source     |   | |           `-RecoveryExpr 0x152028000 <col:13> '<dependent type>' contains-errors lvalue     |   | `-ReturnStmt 0x1520281c8 <line:24:13, col:20>     |   |   `-IntegerLiteral 0x1520281a8 <col:20> 'int' 0     |   |-IfStmt 0x152028aa8 <line:25:9, line:29:20> has_else     |   | |-CallExpr 0x152028a18 <line:25:13, line:26:52> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x1520282d8 <line:25:13> 'int ()' Function 0x152028220 'STREQ' 'int ()'     |   | | |-CXXDependentScopeMemberExpr 0x152028848 <col:19, col:48> '<dependent type>' contains-errors lvalue .wwpn     |   | | | `-CXXDependentScopeMemberExpr 0x152028800 <col:19, col:38> '<dependent type>' contains-errors lvalue .scsi_host     |   | | |   `-CXXDependentScopeMemberExpr 0x1520283a8 <col:19, col:36> '<dependent type>' contains-errors lvalue .u     |   | | |     `-CXXDependentScopeMemberExpr 0x152028360 <col:19, col:29> '<dependent type>' contains-errors lvalue .subsys     |   | | |       `-CXXDependentScopeMemberExpr 0x152028318 <col:19, col:22> '<dependent type>' contains-errors lvalue ->source     |   | | |         `-RecoveryExpr 0x1520282f8 <col:19> '<dependent type>' contains-errors lvalue     |   | | `-CXXDependentScopeMemberExpr 0x1520289d0 <line:26:19, col:48> '<dependent type>' contains-errors lvalue .wwpn     |   | |   `-CXXDependentScopeMemberExpr 0x152028988 <col:19, col:38> '<dependent type>' contains-errors lvalue .scsi_host     |   | |     `-CXXDependentScopeMemberExpr 0x152028940 <col:19, col:36> '<dependent type>' contains-errors lvalue .u     |   | |       `-CXXDependentScopeMemberExpr 0x1520288f8 <col:19, col:29> '<dependent type>' contains-errors lvalue .subsys     |   | |         `-CXXDependentScopeMemberExpr 0x1520288b0 <col:19, col:22> '<dependent type>' contains-errors lvalue ->source     |   | |           `-RecoveryExpr 0x152028890 <col:19> '<dependent type>' contains-errors lvalue     |   | |-ReturnStmt 0x152028a68 <line:27:13, col:20>     |   | | `-IntegerLiteral 0x152028a48 <col:20> 'int' 1     |   | `-ReturnStmt 0x152028a98 <line:29:13, col:20>     |   |   `-IntegerLiteral 0x152028a78 <col:20> 'int' 0     |   |-ReturnStmt 0x152028c60 <line:31:9, col:59>     |   | `-CallExpr 0x152028c30 <col:16, col:59> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x152028bd0 <col:16> 'int ()' Function 0x152028b18 'virDomainHostdevMatchSubsysMediatedDev' 'int ()'     |   |   |-RecoveryExpr 0x152028bf0 <col:55> '<dependent type>' contains-errors lvalue     |   |   `-RecoveryExpr 0x152028c10 <col:58> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x152028ca8 <line:33:9, col:16>     |     `-IntegerLiteral 0x152028c88 <col:16> 'int' 0     `-ReturnStmt 0x152028d28 <line:35:5, col:12>       `-IntegerLiteral 0x152028d08 <col:12> 'int' 0 ","20554":"`-FunctionDecl 0x14a01ef08  col:10 implicit used sprintf 'int (char *, const char *, ...)' extern   |-ParmVarDecl 0x14a01f008 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x14a01f070 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x14a01efb0 <<invalid sloc>> Implicit 906   `-FormatAttr 0x14a01f0e8 <col:10> Implicit printf 2 3 ","21137":"`-FunctionDecl 0x13f827568  line:1:15 invalid push_pipe 'int (struct iov_iter *, int, int *, int *)' static   |-ParmVarDecl 0x13f80e268 <col:25, col:42> col:42 used i 'struct iov_iter *'   |-ParmVarDecl 0x13f80e2e8 <col:45, col:52> col:52 referenced invalid size 'int'   |-ParmVarDecl 0x13f80e398 <line:2:4, col:9> col:9 used iter_headp 'int *'   |-ParmVarDecl 0x13f827418 <col:21, col:29> col:29 referenced invalid offp 'int *'   `-CompoundStmt 0x13f124f68 <line:3:1, line:47:1>     |-DeclStmt 0x13f827878 <line:4:2, col:40>     | |-RecordDecl 0x13f827630 <col:2, col:9> col:9 struct pipe_inode_info     | `-VarDecl 0x13f827798 <col:2, col:36> col:26 used pipe 'struct pipe_inode_info *' cinit     |   `-RecoveryExpr 0x13f827838 <col:33, col:36> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13f827800 <col:33> 'struct iov_iter *' lvalue ParmVar 0x13f80e268 'i' 'struct iov_iter *'     |-DeclStmt 0x13f827970 <line:5:2, col:34>     | `-VarDecl 0x13f8278a8 <col:2, col:30> col:15 used p_tail 'unsigned int' cinit     |   `-RecoveryExpr 0x13f827948 <col:24, col:30> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13f827910 <col:24> 'struct pipe_inode_info *' contains-errors lvalue Var 0x13f827798 'pipe' 'struct pipe_inode_info *'     |-DeclStmt 0x13f827aa8 <line:6:2, col:43>     | `-VarDecl 0x13f8279a0 <col:2, col:42> col:15 used p_mask 'unsigned int' cinit     |   `-BinaryOperator 0x13f827a88 <col:24, col:42> '<dependent type>' contains-errors '-'     |     |-RecoveryExpr 0x13f827a40 <col:24, col:30> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x13f827a08 <col:24> 'struct pipe_inode_info *' contains-errors lvalue Var 0x13f827798 'pipe' 'struct pipe_inode_info *'     |     `-IntegerLiteral 0x13f827a68 <col:42> 'int' 1     |-DeclStmt 0x13f827b40 <line:7:2, col:24>     | `-VarDecl 0x13f827ad8 <col:2, col:15> col:15 used iter_head 'unsigned int'     |-UnaryExprOrTypeTraitExpr 0x13f827be8 <line:8:2, col:9> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x13f827bc8 <col:9> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13f827f10 <line:11:2, line:12:13>     | |-CallExpr 0x13f827e20 <line:11:6, col:30> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x13f827d60 <col:6> 'int ()' Function 0x13f827ca8 'unlikely' 'int ()'     | | `-BinaryOperator 0x13f827e00 <col:15, col:25> 'int' contains-errors '>'     | |   |-RecoveryExpr 0x13f827d80 <col:15> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x13f827dd8 <col:22, col:25> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x13f827da0 <col:22> 'struct iov_iter *' lvalue ParmVar 0x13f80e268 'i' 'struct iov_iter *'     | `-BinaryOperator 0x13f827ef0 <line:12:3, col:13> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x13f827e68 <col:3> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x13f827e48 <col:3> 'int' lvalue ParmVar 0x13f80e2e8 'size' 'int'     |   `-RecoveryExpr 0x13f827ec8 <col:10, col:13> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13f827e90 <col:10> 'struct iov_iter *' lvalue ParmVar 0x13f80e268 'i' 'struct iov_iter *'     |-IfStmt 0x13f828050 <line:13:2, line:14:10>     | |-CallExpr 0x13f827ff8 <line:13:6, col:20> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x13f827f30 <col:6> 'int ()' Function 0x13f827ca8 'unlikely' 'int ()'     | | `-UnaryOperator 0x13f827fe0 <col:15, col:16> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x13f827fc8 <col:16> '<dependent type>' contains-errors <LValueToRValue>     | |     `-RecoveryExpr 0x13f827f50 <col:16> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13f828040 <line:14:3, col:10>     |   `-IntegerLiteral 0x13f828020 <col:10> 'int' 0     |-CallExpr 0x13f8282d8 <line:17:2, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13f828170 <col:2> 'int ()' Function 0x13f8280b8 'data_start' 'int ()'     | |-DeclRefExpr 0x13f828190 <col:13> 'struct iov_iter *' lvalue ParmVar 0x13f80e268 'i' 'struct iov_iter *'     | |-UnaryOperator 0x13f828200 <col:16, col:17> 'unsigned int *' prefix '&' cannot overflow     | | `-DeclRefExpr 0x13f8281b0 <col:17> 'unsigned int' lvalue Var 0x13f827ad8 'iter_head' 'unsigned int'     | `-UnaryOperator 0x13f8282c0 <col:28, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13f8282a0 <col:29> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13f8283b0 <line:18:2, col:16> 'int' '='     | |-UnaryOperator 0x13f828348 <col:2, col:3> 'int' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x13f828330 <col:3> 'int *' <LValueToRValue>     | |   `-DeclRefExpr 0x13f828310 <col:3> 'int *' lvalue ParmVar 0x13f80e398 'iter_headp' 'int *'     | `-ImplicitCastExpr 0x13f828398 <col:16> 'int' <IntegralCast>     |   `-ImplicitCastExpr 0x13f828380 <col:16> 'unsigned int' <LValueToRValue>     |     `-DeclRefExpr 0x13f828360 <col:16> 'unsigned int' lvalue Var 0x13f827ad8 'iter_head' 'unsigned int'     |-BinaryOperator 0x13f122d08 <line:19:2, col:10> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x13f122cd0 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x13f122cb8 <col:3> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x13f8283d0 <col:3> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x13f122ce8 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13f1233d8 <line:20:2, line:28:2>     | |-RecoveryExpr 0x13f122d60 <line:20:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13f1233b8 <col:11, line:28:2>     |   |-IfStmt 0x13f123120 <line:22:3, line:25:3>     |   | |-RecoveryExpr 0x13f122df0 <line:22:7, col:15> '_Bool' contains-errors     |   | `-CompoundStmt 0x13f123100 <col:18, line:25:3>     |   |   |-CompoundAssignOperator 0x13f1230a0 <line:23:4, col:42> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |   | |-CXXDependentScopeMemberExpr 0x13f123058 <col:4, col:35> '<dependent type>' contains-errors lvalue .len     |   |   | | `-ArraySubscriptExpr 0x13f123038 <col:4, col:33> '<dependent type>' contains-errors lvalue     |   |   | |   |-ImplicitCastExpr 0x13f123020 <col:4, col:10> '<dependent type>' contains-errors <LValueToRValue>     |   |   | |   | `-RecoveryExpr 0x13f122e48 <col:4, col:10> '<dependent type>' contains-errors lvalue     |   |   | |   |   `-DeclRefExpr 0x13f122e10 <col:4> 'struct pipe_inode_info *' contains-errors lvalue Var 0x13f827798 'pipe' 'struct pipe_inode_info *'     |   |   | |   `-BinaryOperator 0x13f123000 <col:15, col:27> 'unsigned int' contains-errors '&'     |   |   | |     |-ImplicitCastExpr 0x13f122fd0 <col:15> 'unsigned int' <LValueToRValue>     |   |   | |     | `-DeclRefExpr 0x13f122e70 <col:15> 'unsigned int' lvalue Var 0x13f827ad8 'iter_head' 'unsigned int'     |   |   | |     `-ImplicitCastExpr 0x13f122fe8 <col:27> 'unsigned int' contains-errors <LValueToRValue>     |   |   | |       `-DeclRefExpr 0x13f122e90 <col:27> 'unsigned int' contains-errors lvalue Var 0x13f8279a0 'p_mask' 'unsigned int'     |   |   | `-RecoveryExpr 0x13f122f80 <col:42> '<dependent type>' contains-errors lvalue     |   |   `-ReturnStmt 0x13f1230f0 <line:24:4, col:11>     |   |     `-RecoveryExpr 0x13f1230d0 <col:11> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x13f1233a0 <line:27:3, col:12> 'unsigned int' postfix '++'     |     `-DeclRefExpr 0x13f123380 <col:3> 'unsigned int' lvalue Var 0x13f827ad8 'iter_head' 'unsigned int'     `-WhileStmt 0x13f124f28 <line:29:2, line:45:2>       |-UnaryOperator 0x13f1235d0 <line:29:9, col:54> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-CallExpr 0x13f123598 <col:10, col:54> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x13f1234d8 <col:10> 'int ()' Function 0x13f123420 'pipe_full' 'int ()'       |   |-DeclRefExpr 0x13f1234f8 <col:20> 'unsigned int' lvalue Var 0x13f827ad8 'iter_head' 'unsigned int'       |   |-DeclRefExpr 0x13f123518 <col:31> 'unsigned int' contains-errors lvalue Var 0x13f8278a8 'p_tail' 'unsigned int'       |   `-RecoveryExpr 0x13f123570 <col:39, col:45> '<dependent type>' contains-errors lvalue       |     `-DeclRefExpr 0x13f123538 <col:39> 'struct pipe_inode_info *' contains-errors lvalue Var 0x13f827798 'pipe' 'struct pipe_inode_info *'       `-CompoundStmt 0x13f124ed8 <col:57, line:45:2>         |-DeclStmt 0x13f123a58 <line:30:3, col:60>         | |-RecordDecl 0x13f1235e8 <col:3, col:10> col:10 struct pipe_buffer         | `-VarDecl 0x13f123758 <col:3, col:59> col:23 used buf 'struct pipe_buffer *' cinit         |   `-UnaryOperator 0x13f123a28 <col:29, col:59> '<dependent type>' contains-errors prefix '&' cannot overflow         |     `-ArraySubscriptExpr 0x13f123a08 <col:30, col:59> '<dependent type>' contains-errors lvalue         |       |-ImplicitCastExpr 0x13f1239f0 <col:30, col:36> '<dependent type>' contains-errors <LValueToRValue>         |       | `-RecoveryExpr 0x13f1237f8 <col:30, col:36> '<dependent type>' contains-errors lvalue         |       |   `-DeclRefExpr 0x13f1237c0 <col:30> 'struct pipe_inode_info *' contains-errors lvalue Var 0x13f827798 'pipe' 'struct pipe_inode_info *'         |       `-BinaryOperator 0x13f1239d0 <col:41, col:53> 'unsigned int' contains-errors '&'         |         |-ImplicitCastExpr 0x13f1239a0 <col:41> 'unsigned int' <LValueToRValue>         |         | `-DeclRefExpr 0x13f123820 <col:41> 'unsigned int' lvalue Var 0x13f827ad8 'iter_head' 'unsigned int'         |         `-ImplicitCastExpr 0x13f1239b8 <col:53> 'unsigned int' contains-errors <LValueToRValue>         |           `-DeclRefExpr 0x13f123840 <col:53> 'unsigned int' contains-errors lvalue Var 0x13f8279a0 'p_mask' 'unsigned int'         |-DeclStmt 0x13f124980 <line:31:3, col:43>         | |-RecordDecl 0x13f123a70 <col:3, col:10> col:10 struct page         | `-VarDecl 0x13f124800 <col:3, col:16> col:16 used page 'struct page *'         |-IfStmt 0x13f1249f0 <line:32:3, line:33:4>         | |-UnaryOperator 0x13f1249d0 <line:32:7, col:8> 'int' prefix '!' cannot overflow         | | `-ImplicitCastExpr 0x13f1249b8 <col:8> 'struct page *' <LValueToRValue>         | |   `-DeclRefExpr 0x13f124998 <col:8> 'struct page *' lvalue Var 0x13f124800 'page' 'struct page *'         | `-BreakStmt 0x13f1249e8 <line:33:4>         |-BinaryOperator 0x13f124af0 <line:36:3, col:15> '<dependent type>' contains-errors '='         | |-RecoveryExpr 0x13f124aa8 <col:3, col:8> '<dependent type>' contains-errors lvalue         | | `-DeclRefExpr 0x13f124a70 <col:3> 'struct pipe_buffer *' contains-errors lvalue Var 0x13f123758 'buf' 'struct pipe_buffer *'         | `-DeclRefExpr 0x13f124ad0 <col:15> 'struct page *' lvalue Var 0x13f124800 'page' 'struct page *'         |-BinaryOperator 0x13f124b90 <line:37:3, col:17> '<dependent type>' contains-errors '='         | |-RecoveryExpr 0x13f124b48 <col:3, col:8> '<dependent type>' contains-errors lvalue         | | `-DeclRefExpr 0x13f124b10 <col:3> 'struct pipe_buffer *' contains-errors lvalue Var 0x13f123758 'buf' 'struct pipe_buffer *'         | `-IntegerLiteral 0x13f124b70 <col:17> 'int' 0         |-UnaryOperator 0x13f124d90 <line:40:3, col:12> 'unsigned int' postfix '++'         | `-DeclRefExpr 0x13f124d70 <col:3> 'unsigned int' lvalue Var 0x13f827ad8 'iter_head' 'unsigned int'         |-BinaryOperator 0x13f124e28 <line:41:3, col:16> '<dependent type>' contains-errors '='         | |-RecoveryExpr 0x13f124de0 <col:3, col:9> '<dependent type>' contains-errors lvalue         | | `-DeclRefExpr 0x13f124da8 <col:3> 'struct pipe_inode_info *' contains-errors lvalue Var 0x13f827798 'pipe' 'struct pipe_inode_info *'         | `-DeclRefExpr 0x13f124e08 <col:16> 'unsigned int' lvalue Var 0x13f827ad8 'iter_head' 'unsigned int'         `-IfStmt 0x13f124eb8 <line:43:3, line:44:11>           |-RecoveryExpr 0x13f124e68 <line:43:7, col:15> '_Bool' contains-errors           `-ReturnStmt 0x13f124ea8 <line:44:4, col:11>             `-RecoveryExpr 0x13f124e88 <col:11> '<dependent type>' contains-errors lvalue ","20277":"`-FunctionDecl 0x13600dda8  line:1:1 recvfrom_blocking 'int (void *)'   |-ParmVarDecl 0x13600dcd8 <col:19, col:25> col:25 used data 'void *'   `-CompoundStmt 0x136028e98 <line:2:1, line:11:1>     |-DeclStmt 0x13600e0d8 <line:3:5, col:36>     | |-RecordDecl 0x13600dea0 <col:5, col:12> col:12 struct recvfrom_arg     | `-VarDecl 0x13600e008 <col:5, col:32> col:26 used arg 'struct recvfrom_arg *' cinit     |   `-ImplicitCastExpr 0x13600e0a8 <col:32> 'struct recvfrom_arg *' <BitCast>     |     `-ImplicitCastExpr 0x13600e090 <col:32> 'void *' <LValueToRValue>     |       `-DeclRefExpr 0x13600e070 <col:32> 'void *' lvalue ParmVar 0x13600dcd8 'data' 'void *'     `-IfStmt 0x136028e60 <line:8:5, line:9:21>       |-BinaryOperator 0x136028d68 <line:8:9, col:34> 'int' contains-errors '&&'       | |-BinaryOperator 0x136028d08 <col:9, col:17> 'int' contains-errors '!='       | | |-RecoveryExpr 0x136028ce8 <col:9> '<dependent type>' contains-errors lvalue       | | `-UnaryOperator 0x136028bf8 <col:16, col:17> 'int' prefix '-'       | |   `-IntegerLiteral 0x136028bd8 <col:17> 'int' 1       | `-BinaryOperator 0x136028d48 <col:22, col:34> 'int' contains-errors '<'       |   |-RecoveryExpr 0x136028d28 <col:22> '<dependent type>' contains-errors lvalue       |   `-RecoveryExpr 0x136028c80 <col:29, col:34> '<dependent type>' contains-errors lvalue       |     `-DeclRefExpr 0x136028c48 <col:29> 'struct recvfrom_arg *' lvalue Var 0x13600e008 'arg' 'struct recvfrom_arg *'       `-BinaryOperator 0x136028e40 <line:9:9, col:21> '<dependent type>' contains-errors '='         |-RecoveryExpr 0x136028dc0 <col:9, col:14> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x136028d88 <col:9> 'struct recvfrom_arg *' lvalue Var 0x13600e008 'arg' 'struct recvfrom_arg *'         `-RecoveryExpr 0x136028e20 <col:21> '<dependent type>' contains-errors lvalue ","21024":"`-FunctionDecl 0x14e144e08  line:1:5 invalid idr_alloc 'int (struct idr *, void *, int, int, int)'   |-ParmVarDecl 0x14e128648 <col:15, col:27> col:27 used idr 'struct idr *'   |-ParmVarDecl 0x14e1286c8 <col:32, col:38> col:38 used ptr 'void *'   |-ParmVarDecl 0x14e128748 <col:43, col:47> col:47 used start 'int'   |-ParmVarDecl 0x14e144c00 <col:54, col:58> col:58 used end 'int'   |-ParmVarDecl 0x14e144c98 <col:63, col:69> col:69 invalid gfp_mask 'int'   `-CompoundStmt 0x14e1477c8 <line:2:1, line:24:1>     |-DeclStmt 0x14e1451c0 <line:3:2, col:39>     | `-VarDecl 0x14e144ef0 <col:2, col:32> col:6 used max 'int' cinit     |   `-ConditionalOperator 0x14e145190 <col:12, col:32> '<dependent type>' contains-errors     |     |-BinaryOperator 0x14e145118 <col:12, col:18> 'int' '>'     |     | |-ImplicitCastExpr 0x14e145100 <col:12> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x14e144f58 <col:12> 'int' lvalue ParmVar 0x14e144c00 'end' 'int'     |     | `-IntegerLiteral 0x14e144f78 <col:18> 'int' 0     |     |-BinaryOperator 0x14e145150 <col:22, col:28> 'int' '-'     |     | |-ImplicitCastExpr 0x14e145138 <col:22> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x14e144fd0 <col:22> 'int' lvalue ParmVar 0x14e144c00 'end' 'int'     |     | `-IntegerLiteral 0x14e144ff0 <col:28> 'int' 1     |     `-RecoveryExpr 0x14e145170 <col:32> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x14e1453e8 <line:4:2, col:37>     | |-RecordDecl 0x14e1451d8 <col:2, col:9> col:9 struct idr_layer     | `-VarDecl 0x14e145368 <col:2, col:20> col:20 invalid pa 'struct idr_layer *'     |-DeclStmt 0x14e145480 <line:5:2, col:8>     | `-VarDecl 0x14e145418 <col:2, col:6> col:6 used id 'int'     |-CallExpr 0x14e1456d0 <line:7:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14e1455f0 <col:2> 'int ()' Function 0x14e145538 'might_sleep_if' 'int ()'     | `-BinaryOperator 0x14e1456b0 <col:17, col:28> '<dependent type>' contains-errors '&'     |   |-RecoveryExpr 0x14e145610 <col:17> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x14e145690 <col:28> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14e145988 <line:10:2, line:11:11>     | |-CallExpr 0x14e1458b8 <line:10:6, col:28> 'int'     | | |-ImplicitCastExpr 0x14e1458a0 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x14e1457d8 <col:6> 'int ()' Function 0x14e145720 'WARN_ON_ONCE' 'int ()'     | | `-BinaryOperator 0x14e145850 <col:19, col:27> 'int' '<'     | |   |-ImplicitCastExpr 0x14e145838 <col:19> 'int' <LValueToRValue>     | |   | `-DeclRefExpr 0x14e1457f8 <col:19> 'int' lvalue ParmVar 0x14e128748 'start' 'int'     | |   `-IntegerLiteral 0x14e145818 <col:27> 'int' 0     | `-ReturnStmt 0x14e145978 <line:11:3, col:11>     |   `-UnaryOperator 0x14e145960 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14e145948 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14e145928 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14e147028 <line:12:2, line:13:11>     | |-CallExpr 0x14e145b50 <line:12:6, col:26> 'int' contains-errors     | | |-ImplicitCastExpr 0x14e145b38 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x14e145a88 <col:6> 'int ()' Function 0x14e1459d0 'unlikely' 'int ()'     | | `-BinaryOperator 0x14e145b18 <col:15, col:21> 'int' contains-errors '<'     | |   |-ImplicitCastExpr 0x14e145ae8 <col:15> 'int' contains-errors <LValueToRValue>     | |   | `-DeclRefExpr 0x14e145aa8 <col:15> 'int' contains-errors lvalue Var 0x14e144ef0 'max' 'int'     | |   `-ImplicitCastExpr 0x14e145b00 <col:21> 'int' <LValueToRValue>     | |     `-DeclRefExpr 0x14e145ac8 <col:21> 'int' lvalue ParmVar 0x14e128748 'start' 'int'     | `-ReturnStmt 0x14e147018 <line:13:3, col:11>     |   `-UnaryOperator 0x14e147000 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14e145be0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14e145bc0 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14e1472d0 <line:16:2, col:56> 'int' contains-errors '='     | |-DeclRefExpr 0x14e147048 <col:2> 'int' lvalue Var 0x14e145418 'id' 'int'     | `-CallExpr 0x14e147288 <col:7, col:56> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14e147148 <col:7> 'int ()' Function 0x14e147090 'idr_get_empty_slot' 'int ()'     |   |-DeclRefExpr 0x14e147168 <col:26> 'struct idr *' lvalue ParmVar 0x14e128648 'idr' 'struct idr *'     |   |-DeclRefExpr 0x14e147188 <col:31> 'int' lvalue ParmVar 0x14e128748 'start' 'int'     |   |-RecoveryExpr 0x14e1471a8 <col:38> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x14e1471c8 <col:42> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x14e147268 <col:52> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14e147410 <line:17:2, line:18:10>     | |-CallExpr 0x14e1473a0 <line:17:6, col:21> 'int'     | | |-ImplicitCastExpr 0x14e147388 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x14e1472f0 <col:6> 'int ()' Function 0x14e1459d0 'unlikely' 'int ()'     | | `-BinaryOperator 0x14e147368 <col:15, col:20> 'int' '<'     | |   |-ImplicitCastExpr 0x14e147350 <col:15> 'int' <LValueToRValue>     | |   | `-DeclRefExpr 0x14e147310 <col:15> 'int' lvalue Var 0x14e145418 'id' 'int'     | |   `-IntegerLiteral 0x14e147330 <col:20> 'int' 0     | `-ReturnStmt 0x14e147400 <line:18:3, col:10>     |   `-ImplicitCastExpr 0x14e1473e8 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x14e1473c8 <col:10> 'int' lvalue Var 0x14e145418 'id' 'int'     |-IfStmt 0x14e1475c8 <line:19:2, line:20:11>     | |-CallExpr 0x14e1474f8 <line:19:6, col:23> 'int' contains-errors     | | |-ImplicitCastExpr 0x14e1474e0 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x14e147430 <col:6> 'int ()' Function 0x14e1459d0 'unlikely' 'int ()'     | | `-BinaryOperator 0x14e1474c0 <col:15, col:20> 'int' contains-errors '>'     | |   |-ImplicitCastExpr 0x14e147490 <col:15> 'int' <LValueToRValue>     | |   | `-DeclRefExpr 0x14e147450 <col:15> 'int' lvalue Var 0x14e145418 'id' 'int'     | |   `-ImplicitCastExpr 0x14e1474a8 <col:20> 'int' contains-errors <LValueToRValue>     | |     `-DeclRefExpr 0x14e147470 <col:20> 'int' contains-errors lvalue Var 0x14e144ef0 'max' 'int'     | `-ReturnStmt 0x14e1475b8 <line:20:3, col:11>     |   `-UnaryOperator 0x14e1475a0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14e147588 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14e147568 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14e147748 <line:22:2, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14e1476c8 <col:2> 'int ()' Function 0x14e147610 'idr_fill_slot' 'int ()'     | |-DeclRefExpr 0x14e1476e8 <col:16> 'void *' lvalue ParmVar 0x14e1286c8 'ptr' 'void *'     | |-DeclRefExpr 0x14e147708 <col:21> 'int' lvalue Var 0x14e145418 'id' 'int'     | `-RecoveryExpr 0x14e147728 <col:25> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14e1477b8 <line:23:2, col:9>       `-ImplicitCastExpr 0x14e1477a0 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x14e147780 <col:9> 'int' lvalue Var 0x14e145418 'id' 'int' ","21185":"`-FunctionDecl 0x107008970  col:3 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern   |-ParmVarDecl 0x107008a70 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x107008ad8 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-ParmVarDecl 0x107008b40 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x107008a18 <<invalid sloc>> Implicit 905   `-FormatAttr 0x107008bc0 <col:3> Implicit printf 3 4 ","20704":"`-FunctionDecl 0x153928288  line:1:1 invalid fill_label_char 'int (int *, char *)'   |-ParmVarDecl 0x153928128 <col:17, col:29> col:29 invalid fi 'int *'   |-ParmVarDecl 0x1539281a8 <col:33, col:40> col:40 used label_str 'char *'   `-CompoundStmt 0x153942c50 <line:2:1, line:31:1>     |-DeclStmt 0x1539284c8 <line:6:2, col:28>     | `-VarDecl 0x153928460 <col:2, col:27> col:21 used buf 'char[32]'     |-DeclStmt 0x153928560 <line:7:2, col:24>     | `-VarDecl 0x1539284f8 <col:2, col:21> col:21 used out 'const char *'     `-IfStmt 0x153942c20 <line:12:2, line:30:2> has_else       |-BinaryOperator 0x153941ec0 <line:12:6, col:25> 'int' contains-errors '=='       | |-CXXDependentScopeMemberExpr 0x153941e58 <col:6, col:14> '<dependent type>' contains-errors lvalue ->display       | | `-RecoveryExpr 0x153941e38 <col:6> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x153941ea0 <col:25> '<dependent type>' contains-errors lvalue       |-CompoundStmt 0x1539424f8 <col:38, line:19:2>       | |-DeclStmt 0x153941f70 <line:13:3, col:31>       | | `-VarDecl 0x153941f08 <col:3, col:9> col:9 invalid tmp 'char'       | |-DeclStmt 0x153942080 <line:14:3, col:77>       | | `-VarDecl 0x153941fa0 <col:3, col:27> col:27 referenced invalid fmtfunc 'const int'       | |-CallExpr 0x1539421b8 <line:16:3, col:27> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x153942178 <col:3> 'int ()' Function 0x1539420c0 'DISSECTOR_ASSERT' 'int ()'       | | `-RecoveryExpr 0x153942198 <col:20> '<dependent type>' contains-errors lvalue       | |-CallExpr 0x1539422b0 <line:17:3, col:21> '<dependent type>' contains-errors       | | |-RecoveryExpr 0x153942200 <col:3> '<dependent type>' contains-errors lvalue       | | | `-DeclRefExpr 0x1539421e0 <col:3> 'const int' lvalue Var 0x153941fa0 'fmtfunc' 'const int'       | | |-RecoveryExpr 0x153942228 <col:11> '<dependent type>' contains-errors lvalue       | | `-RecoveryExpr 0x153942290 <col:16> '<dependent type>' contains-errors lvalue       | `-CallExpr 0x1539424b8 <line:18:3, col:39> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x1539423c0 <col:3> 'int ()' Function 0x153942308 'label_fill' 'int ()'       |   |-DeclRefExpr 0x1539423e0 <col:14> 'char *' lvalue ParmVar 0x1539281a8 'label_str' 'char *'       |   |-IntegerLiteral 0x153942400 <col:25> 'int' 0       |   |-RecoveryExpr 0x153942498 <col:28> '<dependent type>' contains-errors lvalue       |   `-RecoveryExpr 0x153942438 <col:36> '<dependent type>' contains-errors lvalue       `-IfStmt 0x153942bf0 <line:20:7, line:30:2> has_else         |-RecoveryExpr 0x153942530 <line:20:11, col:19> '_Bool' contains-errors         |-CompoundStmt 0x153942a08 <col:28, line:25:2>         | `-DeclStmt 0x153942730 <line:21:3, col:70>         |   `-VarDecl 0x153942568 <col:3, col:15> col:15 used val_str 'const char *'         `-CompoundStmt 0x153942be0 <line:26:7, line:30:2> ","20536":"`-FunctionDecl 0x146028098  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x146028198 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x146028200 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x146028268 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x146028140 <<invalid sloc>> Implicit 882 ","20173":"`-FunctionDecl 0x124941718  line:1:12 geneve6_xmit_skb 'int (struct sk_buff *, struct net_device *, struct geneve_dev *, const struct ip_tunnel_info *)' static   |-ParmVarDecl 0x124928e48 <col:29, col:45> col:45 used skb 'struct sk_buff *'   |-ParmVarDecl 0x124941228 <col:50, col:69> col:69 used dev 'struct net_device *'   |-ParmVarDecl 0x1249413f8 <line:2:8, col:27> col:27 used geneve 'struct geneve_dev *'   |-ParmVarDecl 0x1249415c8 <line:3:8, col:37> col:37 used info 'const struct ip_tunnel_info *'   `-CompoundStmt 0x12494bbd8 <line:4:1, line:65:1>     |-DeclStmt 0x124941be0 <line:6:2, col:58>     | |-RecordDecl 0x124941840 <col:2, col:9> col:9 struct geneve_sock     | `-VarDecl 0x1249419a8 <col:2, col:57> col:22 used gs6 'struct geneve_sock *' cinit     |   `-CallExpr 0x124941ba0 <col:28, col:57> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x124941b20 <col:28> 'int ()' Function 0x124941a68 'rcu_dereference' 'int ()'     |     `-RecoveryExpr 0x124941b78 <col:44, col:52> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x124941b40 <col:44> 'struct geneve_dev *' lvalue ParmVar 0x1249413f8 'geneve' 'struct geneve_dev *'     |-DeclStmt 0x124941e60 <line:7:2, col:46>     | |-RecordDecl 0x124941bf8 <col:8, col:15> col:15 struct ip_tunnel_key     | `-VarDecl 0x124941d68 <col:2, col:43> col:30 used key 'const struct ip_tunnel_key *' cinit     |   `-UnaryOperator 0x124941e30 <col:36, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x124941e08 <col:37, col:43> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x124941dd0 <col:37> 'const struct ip_tunnel_info *' lvalue ParmVar 0x1249415c8 'info' 'const struct ip_tunnel_info *'     |-DeclStmt 0x1249420a0 <line:8:2, col:30>     | |-RecordDecl 0x124941e78 <col:2, col:9> col:9 struct dst_entry     | `-VarDecl 0x124941fe8 <col:2, col:26> col:20 used dst 'struct dst_entry *' cinit     |   `-RecoveryExpr 0x124942068 <col:26> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x124943080 <line:9:2, col:19>     | |-RecordDecl 0x1249420b8 <col:2, col:9> col:9 struct flowi6     | `-VarDecl 0x124943000 <col:2, col:16> col:16 invalid fl6 'struct flowi6'     |-DeclStmt 0x124943118 <line:12:2, col:9>     | `-VarDecl 0x1249430b0 <col:2, col:6> col:6 used err 'int'     |-BinaryOperator 0x124943350 <line:14:2, col:51> 'struct dst_entry *' contains-errors '='     | |-DeclRefExpr 0x124943130 <col:2> 'struct dst_entry *' contains-errors lvalue Var 0x124941fe8 'dst' 'struct dst_entry *'     | `-CallExpr 0x124943308 <col:8, col:51> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x124943230 <col:8> 'int ()' Function 0x124943178 'geneve_get_v6_dst' 'int ()'     |   |-DeclRefExpr 0x124943250 <col:26> 'struct sk_buff *' lvalue ParmVar 0x124928e48 'skb' 'struct sk_buff *'     |   |-DeclRefExpr 0x124943270 <col:31> 'struct net_device *' lvalue ParmVar 0x124941228 'dev' 'struct net_device *'     |   |-DeclRefExpr 0x124943290 <col:36> 'struct geneve_sock *' contains-errors lvalue Var 0x1249419a8 'gs6' 'struct geneve_sock *'     |   |-UnaryOperator 0x1249432d0 <col:41, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x1249432b0 <col:42> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1249432e8 <col:47> 'const struct ip_tunnel_info *' lvalue ParmVar 0x1249415c8 'info' 'const struct ip_tunnel_info *'     |-IfStmt 0x1249436a0 <line:15:2, line:16:21>     | |-CallExpr 0x1249434d8 <line:15:6, col:16> 'int' contains-errors     | | |-ImplicitCastExpr 0x1249434c0 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x124943450 <col:6> 'int ()' Function 0x124943398 'IS_ERR' 'int ()'     | | `-ImplicitCastExpr 0x124943500 <col:13> 'struct dst_entry *' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x124943470 <col:13> 'struct dst_entry *' contains-errors lvalue Var 0x124941fe8 'dst' 'struct dst_entry *'     | `-ReturnStmt 0x124943690 <line:16:3, col:21>     |   `-CallExpr 0x124943650 <col:10, col:21> 'int' contains-errors     |     |-ImplicitCastExpr 0x124943638 <col:10> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1249435f8 <col:10> 'int ()' Function 0x124943540 'PTR_ERR' 'int ()'     |     `-ImplicitCastExpr 0x124943678 <col:18> 'struct dst_entry *' contains-errors <LValueToRValue>     |       `-DeclRefExpr 0x124943618 <col:18> 'struct dst_entry *' contains-errors lvalue Var 0x124941fe8 'dst' 'struct dst_entry *'     |-BinaryOperator 0x124943b68 <line:18:2, line:20:38> 'int' contains-errors '='     | |-DeclRefExpr 0x1249436c0 <line:18:2> 'int' lvalue Var 0x1249430b0 'err' 'int'     | `-CallExpr 0x124943b28 <col:8, line:20:38> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1249437c0 <line:18:8> 'int ()' Function 0x124943708 'skb_tunnel_check_pmtu' 'int ()'     |   |-DeclRefExpr 0x1249437e0 <col:30> 'struct sk_buff *' lvalue ParmVar 0x124928e48 'skb' 'struct sk_buff *'     |   |-DeclRefExpr 0x124943800 <col:35> 'struct dst_entry *' contains-errors lvalue Var 0x124941fe8 'dst' 'struct dst_entry *'     |   |-BinaryOperator 0x124943ab0 <line:19:9, col:34> '<dependent type>' contains-errors '+'     |   | |-RecoveryExpr 0x124943a90 <col:9> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x124943870 <col:28, col:34> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x124943838 <col:28> 'const struct ip_tunnel_info *' lvalue ParmVar 0x1249415c8 'info' 'const struct ip_tunnel_info *'     |   `-CallExpr 0x124943ae8 <line:20:9, col:37> 'int'     |     |-ImplicitCastExpr 0x124943ad0 <col:9> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x124943998 <col:9> 'int ()' Function 0x1249438e0 'netif_is_any_bridge_port' 'int ()'     |     `-ImplicitCastExpr 0x124943b10 <col:34> 'struct net_device *' <LValueToRValue>     |       `-DeclRefExpr 0x1249439b8 <col:34> 'struct net_device *' lvalue ParmVar 0x124941228 'dev' 'struct net_device *'     |-IfStmt 0x124949428 <line:21:2, line:41:2> has_else     | |-BinaryOperator 0x124943be0 <line:21:6, col:12> 'int' '<'     | | |-ImplicitCastExpr 0x124943bc8 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x124943b88 <col:6> 'int' lvalue Var 0x1249430b0 'err' 'int'     | | `-IntegerLiteral 0x124943ba8 <col:12> 'int' 0     | |-CompoundStmt 0x124943dc0 <col:15, line:24:2>     | | |-CallExpr 0x124943d38 <line:22:3, col:18> 'int' contains-errors     | | | |-ImplicitCastExpr 0x124943d20 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x124943ce0 <col:3> 'int ()' Function 0x124943c28 'dst_release' 'int ()'     | | | `-ImplicitCastExpr 0x124943d60 <col:15> 'struct dst_entry *' contains-errors <LValueToRValue>     | | |   `-DeclRefExpr 0x124943d00 <col:15> 'struct dst_entry *' contains-errors lvalue Var 0x124941fe8 'dst' 'struct dst_entry *'     | | `-ReturnStmt 0x124943db0 <line:23:3, col:10>     | |   `-ImplicitCastExpr 0x124943d98 <col:10> 'int' <LValueToRValue>     | |     `-DeclRefExpr 0x124943d78 <col:10> 'int' lvalue Var 0x1249430b0 'err' 'int'     | `-IfStmt 0x124949408 <line:24:9, line:41:2>     |   |-ImplicitCastExpr 0x124943e00 <line:24:13> 'int' <LValueToRValue>     |   | `-DeclRefExpr 0x124943de0 <col:13> 'int' lvalue Var 0x1249430b0 'err' 'int'     |   `-CompoundStmt 0x1249493c8 <col:18, line:41:2>     |     |-DeclStmt 0x124948968 <line:25:3, col:53>     |     | `-VarDecl 0x124943ed8 <col:3, col:52> col:26 used info 'struct ip_tunnel_info *' cinit     |     |   `-ImplicitCastExpr 0x124948950 <col:33, col:52> 'struct ip_tunnel_info *' <IntegralToPointer>     |     |     `-CallExpr 0x124948910 <col:33, col:52> 'int'     |     |       |-ImplicitCastExpr 0x1249488f8 <col:33> 'int (*)()' <FunctionToPointerDecay>     |     |       | `-DeclRefExpr 0x1249488b8 <col:33> 'int ()' Function 0x124948800 'skb_tunnel_info' 'int ()'     |     |       `-ImplicitCastExpr 0x124948938 <col:49> 'struct sk_buff *' <LValueToRValue>     |     |         `-DeclRefExpr 0x1249488d8 <col:49> 'struct sk_buff *' lvalue ParmVar 0x124928e48 'skb' 'struct sk_buff *'     |     |-IfStmt 0x124948d58 <line:27:3, line:30:3>     |     | |-ImplicitCastExpr 0x1249489a0 <line:27:7> 'struct ip_tunnel_info *' <LValueToRValue>     |     | | `-DeclRefExpr 0x124948980 <col:7> 'struct ip_tunnel_info *' lvalue Var 0x124943ed8 'info' 'struct ip_tunnel_info *'     |     | `-CompoundStmt 0x124948d38 <col:13, line:30:3>     |     |   |-BinaryOperator 0x124948b58 <line:28:4, col:31> '<dependent type>' contains-errors '='     |     |   | |-CXXDependentScopeMemberExpr 0x124948aa8 <col:4, col:21> '<dependent type>' contains-errors lvalue .dst     |     |   | | `-CXXDependentScopeMemberExpr 0x124948a60 <col:4, col:16> '<dependent type>' contains-errors lvalue .ipv6     |     |   | |   `-CXXDependentScopeMemberExpr 0x124948a18 <col:4, col:14> '<dependent type>' contains-errors lvalue .u     |     |   | |     `-RecoveryExpr 0x1249489f0 <col:4, col:10> '<dependent type>' contains-errors lvalue     |     |   | |       `-DeclRefExpr 0x1249489b8 <col:4> 'struct ip_tunnel_info *' lvalue Var 0x124943ed8 'info' 'struct ip_tunnel_info *'     |     |   | `-CXXDependentScopeMemberExpr 0x124948b10 <col:27, col:31> '<dependent type>' contains-errors lvalue .saddr     |     |   |   `-RecoveryExpr 0x124948af0 <col:27> '<dependent type>' contains-errors lvalue     |     |   `-BinaryOperator 0x124948d18 <line:29:4, col:31> '<dependent type>' contains-errors '='     |     |     |-CXXDependentScopeMemberExpr 0x124948c68 <col:4, col:21> '<dependent type>' contains-errors lvalue .src     |     |     | `-CXXDependentScopeMemberExpr 0x124948c20 <col:4, col:16> '<dependent type>' contains-errors lvalue .ipv6     |     |     |   `-CXXDependentScopeMemberExpr 0x124948bd8 <col:4, col:14> '<dependent type>' contains-errors lvalue .u     |     |     |     `-RecoveryExpr 0x124948bb0 <col:4, col:10> '<dependent type>' contains-errors lvalue     |     |     |       `-DeclRefExpr 0x124948b78 <col:4> 'struct ip_tunnel_info *' lvalue Var 0x124943ed8 'info' 'struct ip_tunnel_info *'     |     |     `-CXXDependentScopeMemberExpr 0x124948cd0 <col:27, col:31> '<dependent type>' contains-errors lvalue .daddr     |     |       `-RecoveryExpr 0x124948cb0 <col:27> '<dependent type>' contains-errors lvalue     |     |-IfStmt 0x124948f68 <line:32:3, line:35:3>     |     | |-RecoveryExpr 0x124948e98 <line:32:7, col:35> '_Bool' contains-errors     |     | `-CompoundStmt 0x124948f50 <col:38, line:35:3>     |     |   `-CallExpr 0x124948f10 <line:33:4, col:19> 'int' contains-errors     |     |     |-ImplicitCastExpr 0x124948ef8 <col:4> 'int (*)()' <FunctionToPointerDecay>     |     |     | `-DeclRefExpr 0x124948eb8 <col:4> 'int ()' Function 0x124943c28 'dst_release' 'int ()'     |     |     `-ImplicitCastExpr 0x124948f38 <col:16> 'struct dst_entry *' contains-errors <LValueToRValue>     |     |       `-DeclRefExpr 0x124948ed8 <col:16> 'struct dst_entry *' contains-errors lvalue Var 0x124941fe8 'dst' 'struct dst_entry *'     |     |-BinaryOperator 0x124949198 <line:37:3, col:50> '<dependent type>' contains-errors '='     |     | |-RecoveryExpr 0x124948fc0 <col:3, col:8> '<dependent type>' contains-errors lvalue     |     | | `-DeclRefExpr 0x124948f88 <col:3> 'struct sk_buff *' lvalue ParmVar 0x124928e48 'skb' 'struct sk_buff *'     |     | `-CallExpr 0x124949168 <col:19, col:50> '<dependent type>' contains-errors     |     |   |-DeclRefExpr 0x1249490c8 <col:19> 'int ()' Function 0x124949010 'eth_type_trans' 'int ()'     |     |   |-DeclRefExpr 0x1249490e8 <col:34> 'struct sk_buff *' lvalue ParmVar 0x124928e48 'skb' 'struct sk_buff *'     |     |   `-RecoveryExpr 0x124949140 <col:39, col:47> '<dependent type>' contains-errors lvalue     |     |     `-DeclRefExpr 0x124949108 <col:39> 'struct geneve_dev *' lvalue ParmVar 0x1249413f8 'geneve' 'struct geneve_dev *'     |     |-CallExpr 0x1249492f0 <line:38:3, col:15> 'int'     |     | |-ImplicitCastExpr 0x1249492d8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | | `-DeclRefExpr 0x124949298 <col:3> 'int ()' Function 0x1249491e0 'netif_rx' 'int ()'     |     | `-ImplicitCastExpr 0x124949318 <col:12> 'struct sk_buff *' <LValueToRValue>     |     |   `-DeclRefExpr 0x1249492b8 <col:12> 'struct sk_buff *' lvalue ParmVar 0x124928e48 'skb' 'struct sk_buff *'     |     `-CallExpr 0x124949388 <line:39:3, col:18> 'int' contains-errors     |       |-ImplicitCastExpr 0x124949370 <col:3> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x124949330 <col:3> 'int ()' Function 0x124943c28 'dst_release' 'int ()'     |       `-ImplicitCastExpr 0x1249493b0 <col:15> 'struct dst_entry *' contains-errors <LValueToRValue>     |         `-DeclRefExpr 0x124949350 <col:15> 'struct dst_entry *' contains-errors lvalue Var 0x124941fe8 'dst' 'struct dst_entry *'     |-IfStmt 0x12494a188 <line:44:2, line:55:2> has_else     | |-CXXDependentScopeMemberExpr 0x124949658 <line:44:6, col:18> '<dependent type>' contains-errors lvalue .collect_md     | | `-RecoveryExpr 0x124949630 <col:6, col:14> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1249495f8 <col:6> 'struct geneve_dev *' lvalue ParmVar 0x1249413f8 'geneve' 'struct geneve_dev *'     | |-CompoundStmt 0x124949a30 <col:30, line:47:2>     | `-CompoundStmt 0x12494a178 <col:9, line:55:2>     |-IfStmt 0x12494a5f8 <line:57:2, line:58:10>     | |-CallExpr 0x12494a570 <line:57:6, col:18> 'int'     | | |-ImplicitCastExpr 0x12494a558 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x12494a518 <col:6> 'int ()' Function 0x12494a460 'unlikely' 'int ()'     | | `-ImplicitCastExpr 0x12494a598 <col:15> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x12494a538 <col:15> 'int' lvalue Var 0x1249430b0 'err' 'int'     | `-ReturnStmt 0x12494a5e8 <line:58:3, col:10>     |   `-ImplicitCastExpr 0x12494a5d0 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x12494a5b0 <col:10> 'int' lvalue Var 0x1249430b0 'err' 'int'     `-ReturnStmt 0x12494bbc8 <line:64:2, col:9>       `-IntegerLiteral 0x12494bba8 <col:9> 'int' 0 ","20597":"`-FunctionDecl 0x14800dd98  line:1:28 xt_write_recseq_begin 'unsigned int (void)' static inline   `-CompoundStmt 0x150122790 <line:2:1, line:13:1>     |-DeclStmt 0x14800df08 <line:3:2, col:21>     | `-VarDecl 0x14800dea0 <col:2, col:15> col:15 used addend 'unsigned int'     |-CallExpr 0x14800e390 <line:9:2, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14800e258 <col:2> 'int ()' Function 0x14800e1a0 '__this_cpu_add' 'int ()'     | |-CXXDependentScopeMemberExpr 0x14800e348 <col:17, col:27> '<dependent type>' contains-errors lvalue .sequence     | | `-RecoveryExpr 0x14800e328 <col:17> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x14800e2d8 <col:37> 'unsigned int' lvalue Var 0x14800dea0 'addend' 'unsigned int'     |-CallExpr 0x150122728 <line:10:2, col:10> 'int'     | `-ImplicitCastExpr 0x150122710 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x1501226b8 <col:2> 'int ()' Function 0x150122600 'smp_wmb' 'int ()'     `-ReturnStmt 0x150122780 <line:12:2, col:9>       `-ImplicitCastExpr 0x150122768 <col:9> 'unsigned int' <LValueToRValue>         `-DeclRefExpr 0x150122748 <col:9> 'unsigned int' lvalue Var 0x14800dea0 'addend' 'unsigned int' ","21021":"`-FunctionDecl 0x13a940b48  line:1:12 nfc_genl_deactivate_target 'int (struct sk_buff *, struct genl_info *)' static   |-ParmVarDecl 0x13a928648 <col:39, col:55> col:55 skb 'struct sk_buff *'   |-ParmVarDecl 0x13a940a28 <line:2:11, col:29> col:29 used info 'struct genl_info *'   `-CompoundStmt 0x13a942800 <line:3:1, line:23:1>     |-DeclStmt 0x13a940e38 <line:4:2, col:21>     | |-RecordDecl 0x13a940c48 <col:2, col:9> col:9 struct nfc_dev     | `-VarDecl 0x13a940db8 <col:2, col:18> col:18 used dev 'struct nfc_dev *'     |-DeclStmt 0x13a940ee8 <line:6:2, col:8>     | `-VarDecl 0x13a940e80 <col:2, col:6> col:6 used rc 'int'     |-IfStmt 0x13a941040 <line:8:2, line:9:11>     | |-RecoveryExpr 0x13a940f78 <line:8:6, col:40> '_Bool' contains-errors     | `-ReturnStmt 0x13a941030 <line:9:3, col:11>     |   `-UnaryOperator 0x13a941018 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x13a941000 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13a940fe0 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13a9413d0 <line:13:2, col:33> 'struct nfc_dev *' contains-errors '='     | |-DeclRefExpr 0x13a941208 <col:2> 'struct nfc_dev *' lvalue Var 0x13a940db8 'dev' 'struct nfc_dev *'     | `-CallExpr 0x13a9413a8 <col:8, col:33> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13a941308 <col:8> 'int ()' Function 0x13a941250 'nfc_get_device' 'int ()'     |   `-RecoveryExpr 0x13a941388 <col:23> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13a9414e8 <line:14:2, line:15:11>     | |-UnaryOperator 0x13a941428 <line:14:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13a941410 <col:7> 'struct nfc_dev *' <LValueToRValue>     | |   `-DeclRefExpr 0x13a9413f0 <col:7> 'struct nfc_dev *' lvalue Var 0x13a940db8 'dev' 'struct nfc_dev *'     | `-ReturnStmt 0x13a9414d8 <line:15:3, col:11>     |   `-UnaryOperator 0x13a9414c0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x13a9414a8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13a941488 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13a9417e0 <line:19:2, col:67> 'int' contains-errors '='     | |-DeclRefExpr 0x13a9415a0 <col:2> 'int' lvalue Var 0x13a940e80 'rc' 'int'     | `-CallExpr 0x13a9417a8 <col:7, col:67> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13a9416a0 <col:7> 'int ()' Function 0x13a9415e8 'nfc_deactivate_target' 'int ()'     |   |-DeclRefExpr 0x13a9416c0 <col:29> 'struct nfc_dev *' lvalue Var 0x13a940db8 'dev' 'struct nfc_dev *'     |   |-RecoveryExpr 0x13a941768 <col:34> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x13a941788 <col:46> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13a941968 <line:21:2, col:20> 'int'     | |-ImplicitCastExpr 0x13a941950 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13a9418e0 <col:2> 'int ()' Function 0x13a941828 'nfc_put_device' 'int ()'     | `-ImplicitCastExpr 0x13a941990 <col:17> 'struct nfc_dev *' <LValueToRValue>     |   `-DeclRefExpr 0x13a941900 <col:17> 'struct nfc_dev *' lvalue Var 0x13a940db8 'dev' 'struct nfc_dev *'     `-ReturnStmt 0x13a9419e0 <line:22:2, col:9>       `-ImplicitCastExpr 0x13a9419c8 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x13a9419a8 <col:9> 'int' lvalue Var 0x13a940e80 'rc' 'int' ","20413":"`-FunctionDecl 0x1509289f8  line:1:12 invalid dnxhd_find_qscale 'int (int *)' static   |-ParmVarDecl 0x150928928 <col:30, col:47> col:47 referenced invalid ctx 'int *'   `-CompoundStmt 0x150944b38 <line:2:1, line:57:1>     |-DeclStmt 0x150928b48 <line:3:5, col:17>     | `-VarDecl 0x150928ac0 <col:5, col:16> col:9 used bits 'int' cinit     |   `-IntegerLiteral 0x150928b28 <col:16> 'int' 0     |-DeclStmt 0x150928c00 <line:4:5, col:20>     | `-VarDecl 0x150928b78 <col:5, col:19> col:9 used up_step 'int' cinit     |   `-IntegerLiteral 0x150928be0 <col:19> 'int' 1     |-DeclStmt 0x150928cb8 <line:5:5, col:22>     | `-VarDecl 0x150928c30 <col:5, col:21> col:9 used down_step 'int' cinit     |   `-IntegerLiteral 0x150928c98 <col:21> 'int' 1     |-DeclStmt 0x150928d70 <line:6:5, col:24>     | `-VarDecl 0x150928ce8 <col:5, col:23> col:9 used last_higher 'int' cinit     |   `-IntegerLiteral 0x150928d50 <col:23> 'int' 0     |-DeclStmt 0x150928e40 <line:7:5, col:29>     | `-VarDecl 0x150928da0 <col:5, col:22> col:9 used last_lower 'int' cinit     |   `-RecoveryExpr 0x150928e20 <col:22> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x150928ed8 <line:8:5, col:15>     | `-VarDecl 0x150928e70 <col:5, col:9> col:9 used qscale 'int'     |-DeclStmt 0x150942018 <line:9:5, col:13>     | |-VarDecl 0x150928f08 <col:5, col:9> col:9 used x 'int'     | `-VarDecl 0x150928f88 <col:5, col:12> col:12 used y 'int'     |-BinaryOperator 0x1509420b8 <line:11:5, col:19> 'int' contains-errors '='     | |-DeclRefExpr 0x150942030 <col:5> 'int' lvalue Var 0x150928e70 'qscale' 'int'     | `-CXXDependentScopeMemberExpr 0x150942070 <col:14, col:19> '<dependent type>' contains-errors lvalue ->qscale     |   `-RecoveryExpr 0x150942050 <col:14> '<dependent type>' contains-errors lvalue     |-ForStmt 0x150944a00 <line:12:5, line:53:5>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-<<<NULL>>>     | `-CompoundStmt 0x1509449c8 <line:12:14, line:53:5>     |   |-BinaryOperator 0x150942118 <line:13:9, col:16> 'int' '='     |   | |-DeclRefExpr 0x1509420d8 <col:9> 'int' lvalue Var 0x150928ac0 'bits' 'int'     |   | `-IntegerLiteral 0x1509420f8 <col:16> 'int' 0     |   |-BinaryOperator 0x1509421e8 <line:14:9, col:23> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x150942180 <col:9, col:14> '<dependent type>' contains-errors lvalue ->qscale     |   | | `-RecoveryExpr 0x150942158 <col:9> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x150942138 <col:9> 'int *' lvalue ParmVar 0x150928928 'ctx' 'int *'     |   | `-DeclRefExpr 0x1509421c8 <col:23> 'int' lvalue Var 0x150928e70 'qscale' 'int'     |   |-CallExpr 0x150942578 <line:16:9, col:98> '<dependent type>' contains-errors     |   | |-CXXDependentScopeMemberExpr 0x1509422e0 <col:9, col:23> '<dependent type>' contains-errors lvalue ->execute2     |   | | `-CXXDependentScopeMemberExpr 0x150942298 <col:9, col:16> '<dependent type>' contains-errors lvalue .avctx     |   | |   `-CXXDependentScopeMemberExpr 0x150942250 <col:9, col:14> '<dependent type>' contains-errors lvalue ->m     |   | |     `-RecoveryExpr 0x150942228 <col:9> '<dependent type>' contains-errors lvalue     |   | |       `-DeclRefExpr 0x150942208 <col:9> 'int *' lvalue ParmVar 0x150928928 'ctx' 'int *'     |   | |-CXXDependentScopeMemberExpr 0x150942390 <col:32, col:39> '<dependent type>' contains-errors lvalue .avctx     |   | | `-CXXDependentScopeMemberExpr 0x150942348 <col:32, col:37> '<dependent type>' contains-errors lvalue ->m     |   | |   `-RecoveryExpr 0x150942328 <col:32> '<dependent type>' contains-errors lvalue     |   | |-RecoveryExpr 0x150942518 <col:46> '<dependent type>' contains-errors lvalue     |   | |-RecoveryExpr 0x150942538 <col:70> '<dependent type>' contains-errors lvalue     |   | |-RecoveryExpr 0x150942558 <col:76> '<dependent type>' contains-errors lvalue     |   | `-CXXDependentScopeMemberExpr 0x150942488 <col:82, col:89> '<dependent type>' contains-errors lvalue .mb_height     |   |   `-CXXDependentScopeMemberExpr 0x150942440 <col:82, col:87> '<dependent type>' contains-errors lvalue ->m     |   |     `-RecoveryExpr 0x150942420 <col:82> '<dependent type>' contains-errors lvalue     |   |-ForStmt 0x150942e08 <line:17:9, line:23:9>     |   | |-BinaryOperator 0x150942600 <line:17:14, col:18> 'int' '='     |   | | |-DeclRefExpr 0x1509425c0 <col:14> 'int' lvalue Var 0x150928f88 'y' 'int'     |   | | `-IntegerLiteral 0x1509425e0 <col:18> 'int' 0     |   | |-<<<NULL>>>     |   | |-BinaryOperator 0x1509426f0 <col:21, col:32> 'int' contains-errors '<'     |   | | |-DeclRefExpr 0x150942620 <col:21> 'int' lvalue Var 0x150928f88 'y' 'int'     |   | | `-CXXDependentScopeMemberExpr 0x1509426a8 <col:25, col:32> '<dependent type>' contains-errors lvalue .mb_height     |   | |   `-CXXDependentScopeMemberExpr 0x150942660 <col:25, col:30> '<dependent type>' contains-errors lvalue ->m     |   | |     `-RecoveryExpr 0x150942640 <col:25> '<dependent type>' contains-errors lvalue     |   | |-UnaryOperator 0x150942730 <col:43, col:44> 'int' postfix '++'     |   | | `-DeclRefExpr 0x150942710 <col:43> 'int' lvalue Var 0x150928f88 'y' 'int'     |   | `-CompoundStmt 0x150942de0 <col:48, line:23:9>     |   |   |-ForStmt 0x150942ba8 <line:18:13, line:19:65>     |   |   | |-BinaryOperator 0x150942788 <line:18:18, col:22> 'int' '='     |   |   | | |-DeclRefExpr 0x150942748 <col:18> 'int' lvalue Var 0x150928f08 'x' 'int'     |   |   | | `-IntegerLiteral 0x150942768 <col:22> 'int' 0     |   |   | |-<<<NULL>>>     |   |   | |-BinaryOperator 0x150942878 <col:25, col:36> 'int' contains-errors '<'     |   |   | | |-DeclRefExpr 0x1509427a8 <col:25> 'int' lvalue Var 0x150928f08 'x' 'int'     |   |   | | `-CXXDependentScopeMemberExpr 0x150942830 <col:29, col:36> '<dependent type>' contains-errors lvalue .mb_width     |   |   | |   `-CXXDependentScopeMemberExpr 0x1509427e8 <col:29, col:34> '<dependent type>' contains-errors lvalue ->m     |   |   | |     `-RecoveryExpr 0x1509427c8 <col:29> '<dependent type>' contains-errors lvalue     |   |   | |-UnaryOperator 0x1509428b8 <col:46, col:47> 'int' postfix '++'     |   |   | | `-DeclRefExpr 0x150942898 <col:46> 'int' lvalue Var 0x150928f08 'x' 'int'     |   |   | `-CompoundAssignOperator 0x150942b78 <line:19:17, col:65> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |   |   |-DeclRefExpr 0x1509428d0 <col:17> 'int' lvalue Var 0x150928ac0 'bits' 'int'     |   |   |   `-CXXDependentScopeMemberExpr 0x150942b30 <col:25, col:65> '<dependent type>' contains-errors lvalue .bits     |   |   |     `-ArraySubscriptExpr 0x150942b10 <col:25, col:63> '<dependent type>' contains-errors lvalue     |   |   |       |-ImplicitCastExpr 0x150942af8 <col:25, col:42> '<dependent type>' contains-errors <LValueToRValue>     |   |   |       | `-ArraySubscriptExpr 0x1509429a8 <col:25, col:42> '<dependent type>' contains-errors lvalue     |   |   |       |   |-ImplicitCastExpr 0x150942978 <col:25, col:30> '<dependent type>' contains-errors <LValueToRValue>     |   |   |       |   | `-CXXDependentScopeMemberExpr 0x150942910 <col:25, col:30> '<dependent type>' contains-errors lvalue ->mb_rc     |   |   |       |   |   `-RecoveryExpr 0x1509428f0 <col:25> '<dependent type>' contains-errors lvalue     |   |   |       |   `-ImplicitCastExpr 0x150942990 <col:36> 'int' <LValueToRValue>     |   |   |       |     `-DeclRefExpr 0x150942958 <col:36> 'int' lvalue Var 0x150928e70 'qscale' 'int'     |   |   |       `-BinaryOperator 0x150942ad8 <col:44, col:62> '<dependent type>' contains-errors '+'     |   |   |         |-BinaryOperator 0x150942a98 <col:44, col:53> '<dependent type>' contains-errors '*'     |   |   |         | |-DeclRefExpr 0x1509429c8 <col:44> 'int' lvalue Var 0x150928f88 'y' 'int'     |   |   |         | `-CXXDependentScopeMemberExpr 0x150942a50 <col:46, col:53> '<dependent type>' contains-errors lvalue .mb_width     |   |   |         |   `-CXXDependentScopeMemberExpr 0x150942a08 <col:46, col:51> '<dependent type>' contains-errors lvalue ->m     |   |   |         |     `-RecoveryExpr 0x1509429e8 <col:46> '<dependent type>' contains-errors lvalue     |   |   |         `-DeclRefExpr 0x150942ab8 <col:62> 'int' lvalue Var 0x150928f08 'x' 'int'     |   |   |-BinaryOperator 0x150942cf0 <line:20:13, col:31> 'int' '='     |   |   | |-DeclRefExpr 0x150942be0 <col:13> 'int' lvalue Var 0x150928ac0 'bits' 'int'     |   |   | `-BinaryOperator 0x150942cd0 <col:20, col:31> 'int' '&'     |   |   |   |-ParenExpr 0x150942c78 <col:20, col:28> 'int'     |   |   |   | `-BinaryOperator 0x150942c58 <col:21, col:26> 'int' '+'     |   |   |   |   |-ImplicitCastExpr 0x150942c40 <col:21> 'int' <LValueToRValue>     |   |   |   |   | `-DeclRefExpr 0x150942c00 <col:21> 'int' lvalue Var 0x150928ac0 'bits' 'int'     |   |   |   |   `-IntegerLiteral 0x150942c20 <col:26> 'int' 31     |   |   |   `-UnaryOperator 0x150942cb8 <col:30, col:31> 'int' prefix '~' cannot overflow     |   |   |     `-IntegerLiteral 0x150942c98 <col:31> 'int' 31     |   |   `-IfStmt 0x150942dc0 <line:21:13, line:22:17>     |   |     |-BinaryOperator 0x150942d98 <line:21:17, col:29> 'int' contains-errors '>'     |   |     | |-DeclRefExpr 0x150942d10 <col:17> 'int' lvalue Var 0x150928ac0 'bits' 'int'     |   |     | `-CXXDependentScopeMemberExpr 0x150942d50 <col:24, col:29> '<dependent type>' contains-errors lvalue ->frame_bits     |   |     |   `-RecoveryExpr 0x150942d30 <col:24> '<dependent type>' contains-errors lvalue     |   |     `-BreakStmt 0x150942db8 <line:22:17>     |   `-IfStmt 0x150944998 <line:26:9, line:52:9> has_else     |     |-BinaryOperator 0x150942ec8 <line:26:13, col:25> 'int' contains-errors '<'     |     | |-DeclRefExpr 0x150942e40 <col:13> 'int' lvalue Var 0x150928ac0 'bits' 'int'     |     | `-CXXDependentScopeMemberExpr 0x150942e80 <col:20, col:25> '<dependent type>' contains-errors lvalue ->frame_bits     |     |   `-RecoveryExpr 0x150942e60 <col:20> '<dependent type>' contains-errors lvalue     |     |-CompoundStmt 0x1509441b0 <col:37, line:41:9>     |     | |-IfStmt 0x150942f90 <line:27:13, line:28:24>     |     | | |-BinaryOperator 0x150942f40 <line:27:17, col:27> 'int' '=='     |     | | | |-ImplicitCastExpr 0x150942f28 <col:17> 'int' <LValueToRValue>     |     | | | | `-DeclRefExpr 0x150942ee8 <col:17> 'int' lvalue Var 0x150928e70 'qscale' 'int'     |     | | | `-IntegerLiteral 0x150942f08 <col:27> 'int' 1     |     | | `-ReturnStmt 0x150942f80 <line:28:17, col:24>     |     | |   `-IntegerLiteral 0x150942f60 <col:24> 'int' 1     |     | |-IfStmt 0x150943b30 <line:29:13, line:32:13>     |     | | |-BinaryOperator 0x150943a70 <line:29:17, col:41> 'int' '=='     |     | | | |-ImplicitCastExpr 0x150943a58 <col:17> 'int' <LValueToRValue>     |     | | | | `-DeclRefExpr 0x150942fb0 <col:17> 'int' lvalue Var 0x150928ce8 'last_higher' 'int'     |     | | | `-BinaryOperator 0x150943a38 <col:32, col:41> 'int' '-'     |     | | |   |-ImplicitCastExpr 0x150943a20 <col:32> 'int' <LValueToRValue>     |     | | |   | `-DeclRefExpr 0x150942fd0 <col:32> 'int' lvalue Var 0x150928e70 'qscale' 'int'     |     | | |   `-IntegerLiteral 0x150943a00 <col:41> 'int' 1     |     | | `-CompoundStmt 0x150943b10 <col:44, line:32:13>     |     | |   |-BinaryOperator 0x150943ae8 <line:30:17, col:26> 'int' '='     |     | |   | |-DeclRefExpr 0x150943a90 <col:17> 'int' lvalue Var 0x150928e70 'qscale' 'int'     |     | |   | `-ImplicitCastExpr 0x150943ad0 <col:26> 'int' <LValueToRValue>     |     | |   |   `-DeclRefExpr 0x150943ab0 <col:26> 'int' lvalue Var 0x150928ce8 'last_higher' 'int'     |     | |   `-BreakStmt 0x150943b08 <line:31:17>     |     | |-BinaryOperator 0x150943dd8 <line:33:13, col:50> 'int' contains-errors '='     |     | | |-DeclRefExpr 0x150943b50 <col:13> 'int' contains-errors lvalue Var 0x150928da0 'last_lower' 'int'     |     | | `-CallExpr 0x150943d78 <col:26, col:50> 'int' contains-errors     |     | |   |-ImplicitCastExpr 0x150943d60 <col:26> 'int (*)()' <FunctionToPointerDecay>     |     | |   | `-DeclRefExpr 0x150943cd0 <col:26> 'int ()' Function 0x150943c18 'FFMIN' 'int ()'     |     | |   |-ImplicitCastExpr 0x150943da8 <col:32> 'int' <LValueToRValue>     |     | |   | `-DeclRefExpr 0x150943cf0 <col:32> 'int' lvalue Var 0x150928e70 'qscale' 'int'     |     | |   `-ImplicitCastExpr 0x150943dc0 <col:40> 'int' contains-errors <LValueToRValue>     |     | |     `-DeclRefExpr 0x150943d10 <col:40> 'int' contains-errors lvalue Var 0x150928da0 'last_lower' 'int'     |     | |-IfStmt 0x150944028 <line:34:13, line:37:36> has_else     |     | | |-BinaryOperator 0x150943e50 <line:34:17, col:32> 'int' '!='     |     | | | |-ImplicitCastExpr 0x150943e38 <col:17> 'int' <LValueToRValue>     |     | | | | `-DeclRefExpr 0x150943df8 <col:17> 'int' lvalue Var 0x150928ce8 'last_higher' 'int'     |     | | | `-IntegerLiteral 0x150943e18 <col:32> 'int' 0     |     | | |-BinaryOperator 0x150943f80 <line:35:17, col:48> 'int' '='     |     | | | |-DeclRefExpr 0x150943e70 <col:17> 'int' lvalue Var 0x150928e70 'qscale' 'int'     |     | | | `-BinaryOperator 0x150943f60 <col:26, col:48> 'int' '>>'     |     | | |   |-ParenExpr 0x150943f20 <col:26, col:45> 'int'     |     | | |   | `-BinaryOperator 0x150943f00 <col:27, col:34> 'int' '+'     |     | | |   |   |-ImplicitCastExpr 0x150943ed0 <col:27> 'int' <LValueToRValue>     |     | | |   |   | `-DeclRefExpr 0x150943e90 <col:27> 'int' lvalue Var 0x150928e70 'qscale' 'int'     |     | | |   |   `-ImplicitCastExpr 0x150943ee8 <col:34> 'int' <LValueToRValue>     |     | | |   |     `-DeclRefExpr 0x150943eb0 <col:34> 'int' lvalue Var 0x150928ce8 'last_higher' 'int'     |     | | |   `-IntegerLiteral 0x150943f40 <col:48> 'int' 1     |     | | `-CompoundAssignOperator 0x150943ff8 <line:37:17, col:36> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'     |     | |   |-DeclRefExpr 0x150943fa0 <col:17> 'int' lvalue Var 0x150928e70 'qscale' 'int'     |     | |   `-UnaryOperator 0x150943fe0 <col:27, col:36> 'int' postfix '++'     |     | |     `-DeclRefExpr 0x150943fc0 <col:27> 'int' lvalue Var 0x150928c30 'down_step' 'int'     |     | |-IfStmt 0x150944130 <line:38:13, line:39:26>     |     | | |-BinaryOperator 0x1509440b0 <line:38:17, col:26> 'int' '<'     |     | | | |-ImplicitCastExpr 0x150944098 <col:17> 'int' <LValueToRValue>     |     | | | | `-DeclRefExpr 0x150944058 <col:17> 'int' lvalue Var 0x150928e70 'qscale' 'int'     |     | | | `-IntegerLiteral 0x150944078 <col:26> 'int' 1     |     | | `-BinaryOperator 0x150944110 <line:39:17, col:26> 'int' '='     |     | |   |-DeclRefExpr 0x1509440d0 <col:17> 'int' lvalue Var 0x150928e70 'qscale' 'int'     |     | |   `-IntegerLiteral 0x1509440f0 <col:26> 'int' 1     |     | `-BinaryOperator 0x150944190 <line:40:13, col:23> 'int' '='     |     |   |-DeclRefExpr 0x150944150 <col:13> 'int' lvalue Var 0x150928b78 'up_step' 'int'     |     |   `-IntegerLiteral 0x150944170 <col:23> 'int' 1     |     `-CompoundStmt 0x150944960 <line:41:16, line:52:9>     |       |-IfStmt 0x1509442c8 <line:42:13, line:43:17>     |       | |-BinaryOperator 0x1509442a0 <line:42:17, col:40> 'int' contains-errors '=='     |       | | |-ImplicitCastExpr 0x150944288 <col:17> 'int' contains-errors <LValueToRValue>     |       | | | `-DeclRefExpr 0x1509441f0 <col:17> 'int' contains-errors lvalue Var 0x150928da0 'last_lower' 'int'     |       | | `-BinaryOperator 0x150944268 <col:31, col:40> 'int' '+'     |       | |   |-ImplicitCastExpr 0x150944250 <col:31> 'int' <LValueToRValue>     |       | |   | `-DeclRefExpr 0x150944210 <col:31> 'int' lvalue Var 0x150928e70 'qscale' 'int'     |       | |   `-IntegerLiteral 0x150944230 <col:40> 'int' 1     |       | `-BreakStmt 0x1509442c0 <line:43:17>     |       |-BinaryOperator 0x1509444c0 <line:44:13, col:52> 'int' '='     |       | |-DeclRefExpr 0x1509442e8 <col:13> 'int' lvalue Var 0x150928ce8 'last_higher' 'int'     |       | `-CallExpr 0x150944460 <col:27, col:52> 'int'     |       |   |-ImplicitCastExpr 0x150944448 <col:27> 'int (*)()' <FunctionToPointerDecay>     |       |   | `-DeclRefExpr 0x1509443e8 <col:27> 'int ()' Function 0x150944330 'FFMAX' 'int ()'     |       |   |-ImplicitCastExpr 0x150944490 <col:33> 'int' <LValueToRValue>     |       |   | `-DeclRefExpr 0x150944408 <col:33> 'int' lvalue Var 0x150928e70 'qscale' 'int'     |       |   `-ImplicitCastExpr 0x1509444a8 <col:41> 'int' <LValueToRValue>     |       |     `-DeclRefExpr 0x150944428 <col:41> 'int' lvalue Var 0x150928ce8 'last_higher' 'int'     |       |-IfStmt 0x150944730 <line:45:13, line:48:34> has_else     |       | |-BinaryOperator 0x150944558 <line:45:17, col:31> 'int' contains-errors '!='     |       | | |-DeclRefExpr 0x1509444e0 <col:17> 'int' contains-errors lvalue Var 0x150928da0 'last_lower' 'int'     |       | | `-RecoveryExpr 0x150944538 <col:31> '<dependent type>' contains-errors lvalue     |       | |-BinaryOperator 0x150944688 <line:46:17, col:47> 'int' contains-errors '='     |       | | |-DeclRefExpr 0x150944578 <col:17> 'int' lvalue Var 0x150928e70 'qscale' 'int'     |       | | `-BinaryOperator 0x150944668 <col:26, col:47> 'int' contains-errors '>>'     |       | |   |-ParenExpr 0x150944628 <col:26, col:44> 'int' contains-errors     |       | |   | `-BinaryOperator 0x150944608 <col:27, col:34> 'int' contains-errors '+'     |       | |   |   |-ImplicitCastExpr 0x1509445d8 <col:27> 'int' <LValueToRValue>     |       | |   |   | `-DeclRefExpr 0x150944598 <col:27> 'int' lvalue Var 0x150928e70 'qscale' 'int'     |       | |   |   `-ImplicitCastExpr 0x1509445f0 <col:34> 'int' contains-errors <LValueToRValue>     |       | |   |     `-DeclRefExpr 0x1509445b8 <col:34> 'int' contains-errors lvalue Var 0x150928da0 'last_lower' 'int'     |       | |   `-IntegerLiteral 0x150944648 <col:47> 'int' 1     |       | `-CompoundAssignOperator 0x150944700 <line:48:17, col:34> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'     |       |   |-DeclRefExpr 0x1509446a8 <col:17> 'int' lvalue Var 0x150928e70 'qscale' 'int'     |       |   `-UnaryOperator 0x1509446e8 <col:27, col:34> 'int' postfix '++'     |       |     `-DeclRefExpr 0x1509446c8 <col:27> 'int' lvalue Var 0x150928b78 'up_step' 'int'     |       |-BinaryOperator 0x1509447a0 <line:49:13, col:25> 'int' '='     |       | |-DeclRefExpr 0x150944760 <col:13> 'int' lvalue Var 0x150928c30 'down_step' 'int'     |       | `-IntegerLiteral 0x150944780 <col:25> 'int' 1     |       `-IfStmt 0x150944940 <line:50:13, line:51:25>     |         |-BinaryOperator 0x1509448d8 <line:50:17, col:41> 'int' contains-errors '>='     |         | |-DeclRefExpr 0x1509447c0 <col:17> 'int' lvalue Var 0x150928e70 'qscale' 'int'     |         | `-CXXDependentScopeMemberExpr 0x150944890 <col:27, col:41> '<dependent type>' contains-errors lvalue ->qmax     |         |   `-CXXDependentScopeMemberExpr 0x150944848 <col:27, col:34> '<dependent type>' contains-errors lvalue .avctx     |         |     `-CXXDependentScopeMemberExpr 0x150944800 <col:27, col:32> '<dependent type>' contains-errors lvalue ->m     |         |       `-RecoveryExpr 0x1509447e0 <col:27> '<dependent type>' contains-errors lvalue     |         `-ReturnStmt 0x150944930 <line:51:17, col:25>     |           `-UnaryOperator 0x150944918 <col:24, col:25> 'int' prefix '-'     |             `-IntegerLiteral 0x1509448f8 <col:25> 'int' 1     |-BinaryOperator 0x150944ae8 <line:55:5, col:19> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x150944a80 <col:5, col:10> '<dependent type>' contains-errors lvalue ->qscale     | | `-RecoveryExpr 0x150944a58 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x150944a38 <col:5> 'int *' lvalue ParmVar 0x150928928 'ctx' 'int *'     | `-DeclRefExpr 0x150944ac8 <col:19> 'int' lvalue Var 0x150928e70 'qscale' 'int'     `-ReturnStmt 0x150944b28 <line:56:5, col:12>       `-IntegerLiteral 0x150944b08 <col:12> 'int' 0 ","20817":"`-FunctionDecl 0x14a922998  line:1:12 xfrm_del_sa 'int (struct sk_buff *, struct nlmsghdr *, struct nlattr **)' static   |-ParmVarDecl 0x14b00e248 <col:24, col:40> col:40 used skb 'struct sk_buff *'   |-ParmVarDecl 0x14a922628 <col:45, col:62> col:62 used nlh 'struct nlmsghdr *'   |-ParmVarDecl 0x14a922858 <line:2:3, col:19> col:19 used attrs 'struct nlattr **'   `-CompoundStmt 0x14c008a58 <line:3:1, line:40:1>     |-DeclStmt 0x14a922e60 <line:4:2, col:37>     | |-RecordDecl 0x14a922aa0 <col:2, col:9> col:9 struct net     | `-VarDecl 0x14a922c08 <col:2, col:36> col:14 used net 'struct net *' cinit     |   `-CallExpr 0x14a922e20 <col:20, col:36> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14a922da0 <col:20> 'int ()' Function 0x14a922ce8 'sock_net' 'int ()'     |     `-RecoveryExpr 0x14a922df8 <col:29, col:34> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14a922dc0 <col:29> 'struct sk_buff *' lvalue ParmVar 0x14b00e248 'skb' 'struct sk_buff *'     |-DeclStmt 0x14a923068 <line:5:2, col:22>     | |-RecordDecl 0x14a922e78 <col:2, col:9> col:9 struct xfrm_state     | `-VarDecl 0x14a922fe8 <col:2, col:21> col:21 used x 'struct xfrm_state *'     |-DeclStmt 0x14a923198 <line:6:2, col:18>     | `-VarDecl 0x14a923098 <col:2, col:13> col:6 used err 'int' cinit     |   `-UnaryOperator 0x14a923180 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14a923168 <col:13> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14a923148 <col:13> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x14a923328 <line:7:2, col:19>     | |-RecordDecl 0x14a9231b0 <col:2, col:9> col:9 struct km_event     | `-VarDecl 0x14a9232a8 <col:2, col:18> col:18 referenced invalid c 'struct km_event'     |-DeclStmt 0x14b0266f8 <line:8:2, col:44>     | |-RecordDecl 0x14a923340 <col:2, col:9> col:9 struct xfrm_usersa_id     | `-VarDecl 0x14a9234a8 <col:2, col:43> col:25 used p 'struct xfrm_usersa_id *' cinit     |   `-ImplicitCastExpr 0x14b0266c8 <col:29, col:43> 'struct xfrm_usersa_id *' <IntegralToPointer>     |     `-CallExpr 0x14b026688 <col:29, col:43> 'int'     |       |-ImplicitCastExpr 0x14b026670 <col:29> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14b026600 <col:29> 'int ()' Function 0x14a923538 'nlmsg_data' 'int ()'     |       `-ImplicitCastExpr 0x14b0266b0 <col:40> 'struct nlmsghdr *' <LValueToRValue>     |         `-DeclRefExpr 0x14b026620 <col:40> 'struct nlmsghdr *' lvalue ParmVar 0x14a922628 'nlh' 'struct nlmsghdr *'     |-DeclStmt 0x14b026918 <line:10:2, col:55>     | `-VarDecl 0x14b026728 <col:2, col:54> col:15 used sessionid 'unsigned int' cinit     |   `-CallExpr 0x14b0268f0 <col:27, col:54> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14b026870 <col:27> 'int ()' Function 0x14b0267b8 'audit_get_sessionid' 'int ()'     |     `-RecoveryExpr 0x14b0268d0 <col:47> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14b026bd0 <line:13:2, col:48> 'struct xfrm_state *' contains-errors '='     | |-DeclRefExpr 0x14b026930 <col:2> 'struct xfrm_state *' lvalue Var 0x14a922fe8 'x' 'struct xfrm_state *'     | `-ImplicitCastExpr 0x14b026bb8 <col:6, col:48> 'struct xfrm_state *' contains-errors <IntegralToPointer>     |   `-CallExpr 0x14b026b30 <col:6, col:48> 'int' contains-errors     |     |-ImplicitCastExpr 0x14b026b18 <col:6> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14b026a30 <col:6> 'int ()' Function 0x14b026978 'xfrm_user_state_lookup' 'int ()'     |     |-ImplicitCastExpr 0x14b026b70 <col:29> 'struct net *' contains-errors <LValueToRValue>     |     | `-DeclRefExpr 0x14b026a50 <col:29> 'struct net *' contains-errors lvalue Var 0x14a922c08 'net' 'struct net *'     |     |-ImplicitCastExpr 0x14b026b88 <col:34> 'struct xfrm_usersa_id *' <LValueToRValue>     |     | `-DeclRefExpr 0x14b026a70 <col:34> 'struct xfrm_usersa_id *' lvalue Var 0x14a9234a8 'p' 'struct xfrm_usersa_id *'     |     |-ImplicitCastExpr 0x14b026ba0 <col:37> 'struct nlattr **' <LValueToRValue>     |     | `-DeclRefExpr 0x14b026a90 <col:37> 'struct nlattr **' lvalue ParmVar 0x14a922858 'attrs' 'struct nlattr **'     |     `-UnaryOperator 0x14b026b00 <col:44, col:45> 'int *' contains-errors prefix '&' cannot overflow     |       `-DeclRefExpr 0x14b026ab0 <col:45> 'int' contains-errors lvalue Var 0x14a923098 'err' 'int'     |-IfStmt 0x14b026cd0 <line:14:2, line:15:10>     | |-BinaryOperator 0x14b026c68 <line:14:6, col:11> 'int' contains-errors '=='     | | |-DeclRefExpr 0x14b026bf0 <col:6> 'struct xfrm_state *' lvalue Var 0x14a922fe8 'x' 'struct xfrm_state *'     | | `-RecoveryExpr 0x14b026c48 <col:11> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14b026cc0 <line:15:3, col:10>     |   `-ImplicitCastExpr 0x14b026ca8 <col:10> 'int' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x14b026c88 <col:10> 'int' contains-errors lvalue Var 0x14a923098 'err' 'int'     |-IfStmt 0x14b026f70 <line:17:2, line:18:8>     | |-BinaryOperator 0x14b026ee8 <line:17:6, col:47> 'int' contains-errors '!='     | | |-ParenExpr 0x14b026ea8 <col:6, col:42> 'int' contains-errors     | | | `-BinaryOperator 0x14b026e88 <col:7, col:41> 'int' contains-errors '='     | | |   |-DeclRefExpr 0x14b026cf0 <col:7> 'int' contains-errors lvalue Var 0x14a923098 'err' 'int'     | | |   `-CallExpr 0x14b026e48 <col:13, col:41> 'int'     | | |     |-ImplicitCastExpr 0x14b026e30 <col:13> 'int (*)()' <FunctionToPointerDecay>     | | |     | `-DeclRefExpr 0x14b026df0 <col:13> 'int ()' Function 0x14b026d38 'security_xfrm_state_delete' 'int ()'     | | |     `-ImplicitCastExpr 0x14b026e70 <col:40> 'struct xfrm_state *' <LValueToRValue>     | | |       `-DeclRefExpr 0x14b026e10 <col:40> 'struct xfrm_state *' lvalue Var 0x14a922fe8 'x' 'struct xfrm_state *'     | | `-IntegerLiteral 0x14b026ec8 <col:47> 'int' 0     | `-GotoStmt 0x14b026f58 <line:18:3, col:8> 'out' 0x14b026f08     |-IfStmt 0x14b027238 <line:20:2, line:23:2>     | |-CallExpr 0x14b0270c8 <line:20:6, col:23> 'int'     | | |-ImplicitCastExpr 0x14b0270b0 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x14b027070 <col:6> 'int ()' Function 0x14b026fb8 'xfrm_state_kern' 'int ()'     | | `-ImplicitCastExpr 0x14b0270f0 <col:22> 'struct xfrm_state *' <LValueToRValue>     | |   `-DeclRefExpr 0x14b027090 <col:22> 'struct xfrm_state *' lvalue Var 0x14a922fe8 'x' 'struct xfrm_state *'     | `-CompoundStmt 0x14b027218 <col:26, line:23:2>     |   |-BinaryOperator 0x14b0271e0 <line:21:3, col:10> 'int' contains-errors '='     |   | |-DeclRefExpr 0x14b027108 <col:3> 'int' contains-errors lvalue Var 0x14a923098 'err' 'int'     |   | `-UnaryOperator 0x14b0271c8 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x14b0271b0 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x14b027190 <col:10> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x14b027200 <line:22:3, col:8> 'out' 0x14b026f08     |-BinaryOperator 0x14b0273f0 <line:25:2, col:27> 'int' contains-errors '='     | |-DeclRefExpr 0x14b027258 <col:2> 'int' contains-errors lvalue Var 0x14a923098 'err' 'int'     | `-CallExpr 0x14b0273b0 <col:8, col:27> 'int'     |   |-ImplicitCastExpr 0x14b027398 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14b027358 <col:8> 'int ()' Function 0x14b0272a0 'xfrm_state_delete' 'int ()'     |   `-ImplicitCastExpr 0x14b0273d8 <col:26> 'struct xfrm_state *' <LValueToRValue>     |     `-DeclRefExpr 0x14b027378 <col:26> 'struct xfrm_state *' lvalue Var 0x14a922fe8 'x' 'struct xfrm_state *'     |-IfStmt 0x14b0274a0 <line:27:2, line:28:8>     | |-BinaryOperator 0x14b027468 <line:27:6, col:12> 'int' contains-errors '<'     | | |-ImplicitCastExpr 0x14b027450 <col:6> 'int' contains-errors <LValueToRValue>     | | | `-DeclRefExpr 0x14b027410 <col:6> 'int' contains-errors lvalue Var 0x14a923098 'err' 'int'     | | `-IntegerLiteral 0x14b027430 <col:12> 'int' 0     | `-GotoStmt 0x14b027488 <line:28:3, col:8> 'out' 0x14b026f08     |-BinaryOperator 0x14b0275b0 <line:30:2, col:15> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14b027508 <col:2, col:4> '<dependent type>' contains-errors lvalue .seq     | | `-RecoveryExpr 0x14b0274e0 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14b0274c0 <col:2> 'struct km_event' lvalue Var 0x14a9232a8 'c' 'struct km_event'     | `-RecoveryExpr 0x14b027588 <col:10, col:15> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14b027550 <col:10> 'struct nlmsghdr *' lvalue ParmVar 0x14a922628 'nlh' 'struct nlmsghdr *'     |-BinaryOperator 0x14c0082d0 <line:31:2, col:18> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14c008228 <col:2, col:4> '<dependent type>' contains-errors lvalue .portid     | | `-RecoveryExpr 0x14c008200 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14b0275d0 <col:2> 'struct km_event' lvalue Var 0x14a9232a8 'c' 'struct km_event'     | `-RecoveryExpr 0x14c0082a8 <col:13, col:18> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14c008270 <col:13> 'struct nlmsghdr *' lvalue ParmVar 0x14a922628 'nlh' 'struct nlmsghdr *'     |-BinaryOperator 0x14c0083e0 <line:32:2, col:17> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14c008338 <col:2, col:4> '<dependent type>' contains-errors lvalue .event     | | `-RecoveryExpr 0x14c008310 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14c0082f0 <col:2> 'struct km_event' lvalue Var 0x14a9232a8 'c' 'struct km_event'     | `-RecoveryExpr 0x14c0083b8 <col:12, col:17> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14c008380 <col:12> 'struct nlmsghdr *' lvalue ParmVar 0x14a922628 'nlh' 'struct nlmsghdr *'     |-CallExpr 0x14c008558 <line:33:2, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c0084e0 <col:2> 'int ()' Function 0x14c008428 'km_state_notify' 'int ()'     | |-DeclRefExpr 0x14c008500 <col:18> 'struct xfrm_state *' lvalue Var 0x14a922fe8 'x' 'struct xfrm_state *'     | `-UnaryOperator 0x14c008540 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14c008520 <col:22> '<dependent type>' contains-errors lvalue     |-LabelStmt 0x14c008690 <line:35:1, col:4> 'out'     | `-NullStmt 0x14c008688 <col:4>     |-CallExpr 0x14c0089d0 <line:38:2, col:18> 'int'     | |-ImplicitCastExpr 0x14c0089b8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14c008978 <col:2> 'int ()' Function 0x14c0088c0 'xfrm_state_put' 'int ()'     | `-ImplicitCastExpr 0x14c0089f8 <col:17> 'struct xfrm_state *' <LValueToRValue>     |   `-DeclRefExpr 0x14c008998 <col:17> 'struct xfrm_state *' lvalue Var 0x14a922fe8 'x' 'struct xfrm_state *'     `-ReturnStmt 0x14c008a48 <line:39:2, col:9>       `-ImplicitCastExpr 0x14c008a30 <col:9> 'int' contains-errors <LValueToRValue>         `-DeclRefExpr 0x14c008a10 <col:9> 'int' contains-errors lvalue Var 0x14a923098 'err' 'int' ","20682":"`-FunctionDecl 0x153808878  col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x153808978 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x1538089e0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x153808a48 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x153808920 <<invalid sloc>> Implicit 882 ","20893":"`-FunctionDecl 0x137812078  line:1:5 invalid pm_restore_priority 'int (int, int, int, char **)'   |-ParmVarDecl 0x137811cf0 <col:25, col:47> col:47 invalid hdl 'int'   |-ParmVarDecl 0x137811d70 <col:52, col:66> col:66 invalid mgr 'int'   |-ParmVarDecl 0x137811df0 <col:71, col:75> col:75 argc 'int'   |-ParmVarDecl 0x137811f20 <col:81, col:92> col:87 argv 'char **'   `-CompoundStmt 0x13782bd58 <col:95, line:8:1>     |-CallExpr 0x137812390 <line:2:2, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1378122a0 <col:2> 'int ()' Function 0x1378121e8 'fprintf' 'int ()'     | |-RecoveryExpr 0x137812370 <col:10> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x137812320 <col:18> 'char[4]' lvalue \"STR\"     |-CallExpr 0x13782ba70 <line:3:2, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1378123c0 <col:2> 'int ()' Function 0x1378121e8 'fprintf' 'int ()'     | |-RecoveryExpr 0x13782ba50 <col:10> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x13782ba00 <col:18> 'char[4]' lvalue \"STR\"     |-CallExpr 0x13782bb48 <line:4:2, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13782baa0 <col:2> 'int ()' Function 0x1378121e8 'fprintf' 'int ()'     | |-RecoveryExpr 0x13782bb28 <col:10> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x13782bad8 <col:18> 'char[4]' lvalue \"STR\"     |-CallExpr 0x13782bc20 <line:5:2, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13782bb78 <col:2> 'int ()' Function 0x1378121e8 'fprintf' 'int ()'     | |-RecoveryExpr 0x13782bc00 <col:10> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x13782bbb0 <col:18> 'char[4]' lvalue \"STR\"     |-CallExpr 0x13782bcf8 <line:6:2, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13782bc50 <col:2> 'int ()' Function 0x1378121e8 'fprintf' 'int ()'     | |-RecoveryExpr 0x13782bcd8 <col:10> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x13782bc88 <col:18> 'char[4]' lvalue \"STR\"     `-ReturnStmt 0x13782bd48 <line:7:2, col:9>       `-IntegerLiteral 0x13782bd28 <col:9> 'int' 0 ","20309":"`-FunctionDecl 0x12c0274d8  line:1:1 invalid juniper_mlfr_print 'int (int *, const struct pcap_pkthdr *, const char *)'   |-ParmVarDecl 0x12c00dd28 <col:20, col:40> col:40 invalid ndo 'int *'   |-ParmVarDecl 0x12c00e318 <line:2:20, col:46> col:46 used h 'const struct pcap_pkthdr *'   |-ParmVarDecl 0x12c00e398 <col:49, col:72> col:72 used p 'const char *' register   `-CompoundStmt 0x12b923338 <line:3:1, line:31:1>     |-DeclStmt 0x12c027718 <line:4:9, col:39>     | |-RecordDecl 0x12c027598 <col:9, col:16> col:16 struct juniper_l2info_t     | `-VarDecl 0x12c027698 <col:9, col:33> col:33 referenced invalid l2info 'struct juniper_l2info_t'     |-BinaryOperator 0x12c027818 <line:6:9, col:26> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12c027778 <col:9, col:16> '<dependent type>' contains-errors lvalue .pictype     | | `-RecoveryExpr 0x12c027750 <col:9> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12c027730 <col:9> 'struct juniper_l2info_t' lvalue Var 0x12c027698 'l2info' 'struct juniper_l2info_t'     | `-RecoveryExpr 0x12c0277f8 <col:26> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12c027b40 <line:7:9, line:8:27>     | |-BinaryOperator 0x12c027aa8 <line:7:13, col:57> 'int' contains-errors '=='     | | |-CallExpr 0x12c027a48 <col:13, col:52> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x12c027990 <col:13> 'int ()' Function 0x12c0278d8 'juniper_parse_header' 'int ()'     | | | |-RecoveryExpr 0x12c0279b0 <col:34> '<dependent type>' contains-errors lvalue     | | | |-DeclRefExpr 0x12c0279d0 <col:39> 'const char *' lvalue ParmVar 0x12c00e398 'p' 'const char *'     | | | |-DeclRefExpr 0x12c0279f0 <col:42> 'const struct pcap_pkthdr *' lvalue ParmVar 0x12c00e318 'h' 'const struct pcap_pkthdr *'     | | | `-UnaryOperator 0x12c027a30 <col:45, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-RecoveryExpr 0x12c027a10 <col:46> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x12c027a88 <col:57> 'int' 0     | `-ReturnStmt 0x12c027b30 <line:8:13, col:27>     |   `-CXXDependentScopeMemberExpr 0x12c027ae8 <col:20, col:27> '<dependent type>' contains-errors lvalue .header_len     |     `-RecoveryExpr 0x12c027ac8 <col:20> '<dependent type>' contains-errors lvalue     |-CompoundAssignOperator 0x12c027be8 <line:10:9, col:19> 'const char *' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-DeclRefExpr 0x12c027b60 <col:9> 'const char *' lvalue ParmVar 0x12c00e398 'p' 'const char *'     | `-CXXDependentScopeMemberExpr 0x12c027ba0 <col:12, col:19> '<dependent type>' contains-errors lvalue .header_len     |   `-RecoveryExpr 0x12c027b80 <col:12> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12c0280e0 <line:13:9, line:14:49>     | |-BinaryOperator 0x12c027e50 <line:13:13, col:64> 'int' contains-errors '&&'     | | |-CXXDependentScopeMemberExpr 0x12c027c38 <col:13, col:18> '<dependent type>' contains-errors lvalue ->ndo_eflag     | | | `-RecoveryExpr 0x12c027c18 <col:13> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x12c027e30 <col:31, col:64> 'int' contains-errors '!='     | |   |-CallExpr 0x12c027de8 <col:31, col:59> '<dependent type>' contains-errors     | |   | |-DeclRefExpr 0x12c027d60 <col:31> 'int ()' Function 0x12c027ca8 'EXTRACT_32BITS' 'int ()'     | |   | `-CXXDependentScopeMemberExpr 0x12c027da0 <col:46, col:53> '<dependent type>' contains-errors lvalue .cookie     | |   |   `-RecoveryExpr 0x12c027d80 <col:46> '<dependent type>' contains-errors lvalue     | |   `-IntegerLiteral 0x12c027e10 <col:64> 'int' 1     | `-CallExpr 0x12c0280b8 <line:14:13, col:49> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12c027f50 <col:13> 'int ()' Function 0x12c027e98 'ND_PRINT' 'int ()'     |   `-ParenExpr 0x12c028098 <col:22, col:48> '<dependent type>' contains-errors     |     `-BinaryOperator 0x12c028078 <col:23, col:42> '<dependent type>' contains-errors ','     |       |-BinaryOperator 0x12c027ff0 <col:23, col:28> 'char[4]' contains-errors ','     |       | |-RecoveryExpr 0x12c027f70 <col:23> '<dependent type>' contains-errors lvalue     |       | `-StringLiteral 0x12c027fd0 <col:28> 'char[4]' lvalue \"STR\"     |       `-CXXDependentScopeMemberExpr 0x12c028030 <col:35, col:42> '<dependent type>' contains-errors lvalue .bundle     |         `-RecoveryExpr 0x12c028010 <col:35> '<dependent type>' contains-errors lvalue     |-SwitchStmt 0x12c028180 <line:15:9, line:28:9>     | |-ImplicitCastExpr 0x12c028168 <line:15:17, col:24> '<dependent type>' contains-errors <LValueToRValue>     | | `-CXXDependentScopeMemberExpr 0x12c028120 <col:17, col:24> '<dependent type>' contains-errors lvalue .proto     | |   `-RecoveryExpr 0x12c028100 <col:17> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12b923288 <col:31, line:28:9>     |   |-CallExpr 0x12b922c48 <line:18:13, col:63> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12c0282f8 <col:13> 'int ()' Function 0x12c028240 'isoclns_print' 'int ()'     |   | |-RecoveryExpr 0x12c028318 <col:27> '<dependent type>' contains-errors lvalue     |   | |-DeclRefExpr 0x12c028338 <col:32> 'const char *' lvalue ParmVar 0x12c00e398 'p' 'const char *'     |   | |-CXXDependentScopeMemberExpr 0x12c028378 <col:35, col:42> '<dependent type>' contains-errors lvalue .length     |   | | `-RecoveryExpr 0x12c028358 <col:35> '<dependent type>' contains-errors lvalue     |   | `-CXXDependentScopeMemberExpr 0x12b922c00 <col:50, col:57> '<dependent type>' contains-errors lvalue .caplen     |   |   `-RecoveryExpr 0x12c0283c0 <col:50> '<dependent type>' contains-errors lvalue     |   |-BreakStmt 0x12b922c88 <line:19:13>     |   |-CallExpr 0x12b923048 <line:24:13, col:75> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12b922e40 <col:13> 'int ()' Function 0x12c028240 'isoclns_print' 'int ()'     |   | |-RecoveryExpr 0x12b922e60 <col:27> '<dependent type>' contains-errors lvalue     |   | |-BinaryOperator 0x12b922ed8 <col:32, col:36> 'const char *' '-'     |   | | |-ImplicitCastExpr 0x12b922ec0 <col:32> 'const char *' <LValueToRValue>     |   | | | `-DeclRefExpr 0x12b922e80 <col:32> 'const char *' lvalue ParmVar 0x12c00e398 'p' 'const char *'     |   | | `-IntegerLiteral 0x12b922ea0 <col:36> 'int' 1     |   | |-BinaryOperator 0x12b922f80 <col:39, col:55> '<dependent type>' contains-errors '+'     |   | | |-CXXDependentScopeMemberExpr 0x12b922f18 <col:39, col:46> '<dependent type>' contains-errors lvalue .length     |   | | | `-RecoveryExpr 0x12b922ef8 <col:39> '<dependent type>' contains-errors lvalue     |   | | `-IntegerLiteral 0x12b922f60 <col:55> 'int' 1     |   | `-BinaryOperator 0x12b923028 <col:58, col:74> '<dependent type>' contains-errors '+'     |   |   |-CXXDependentScopeMemberExpr 0x12b922fc0 <col:58, col:65> '<dependent type>' contains-errors lvalue .caplen     |   |   | `-RecoveryExpr 0x12b922fa0 <col:58> '<dependent type>' contains-errors lvalue     |   |   `-IntegerLiteral 0x12b923008 <col:74> 'int' 1     |   |-BreakStmt 0x12b923088 <line:25:13>     |   `-DefaultStmt 0x12b923268 <line:26:9, line:27:63>     |     `-CallExpr 0x12b923240 <col:13, col:63> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x12b923090 <col:13> 'int ()' Function 0x12c027e98 'ND_PRINT' 'int ()'     |       `-ParenExpr 0x12b923220 <col:22, col:62> '<dependent type>' contains-errors     |         `-BinaryOperator 0x12b923200 <col:23, col:56> '<dependent type>' contains-errors ','     |           |-BinaryOperator 0x12b923178 <col:23, col:42> '<dependent type>' contains-errors ','     |           | |-BinaryOperator 0x12b9230f0 <col:23, col:28> 'char[4]' contains-errors ','     |           | | |-RecoveryExpr 0x12b9230b0 <col:23> '<dependent type>' contains-errors lvalue     |           | | `-StringLiteral 0x12b9230d0 <col:28> 'char[4]' lvalue \"STR\"     |           | `-CXXDependentScopeMemberExpr 0x12b923130 <col:35, col:42> '<dependent type>' contains-errors lvalue .proto     |           |   `-RecoveryExpr 0x12b923110 <col:35> '<dependent type>' contains-errors lvalue     |           `-CXXDependentScopeMemberExpr 0x12b9231b8 <col:49, col:56> '<dependent type>' contains-errors lvalue .length     |             `-RecoveryExpr 0x12b923198 <col:49> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12b923328 <line:30:9, col:23>       `-CXXDependentScopeMemberExpr 0x12b9232e0 <col:16, col:23> '<dependent type>' contains-errors lvalue .header_len         `-RecoveryExpr 0x12b9232c0 <col:16> '<dependent type>' contains-errors lvalue ","20446":"`-FunctionDecl 0x141128708  line:1:13 referenced json_tokener_error_desc 'const char *(enum json_tokener_error)'   |-ParmVarDecl 0x1411285f8 <col:37, col:61> col:61 invalid jerr 'enum json_tokener_error'   `-CompoundStmt 0x141140e98 <line:2:1, line:7:1>     |-DeclStmt 0x141140ae0 <line:3:2, col:26>     | `-VarDecl 0x141140a18 <col:2, col:22> col:6 used jerr_int 'int' cinit     |   `-CStyleCastExpr 0x141140ab8 <col:17, col:22> 'int' contains-errors <Dependent>     |     `-RecoveryExpr 0x141140a80 <col:22> '<dependent type>' contains-errors lvalue     |-IfStmt 0x141140dc0 <line:4:2, line:5:10>     | |-RecoveryExpr 0x141140cf8 <line:4:6, col:100> '_Bool' contains-errors     | `-ReturnStmt 0x141140db0 <line:5:3, col:10>     |   `-ImplicitCastExpr 0x141140d98 <col:10> 'const char *' <NoOp>     |     `-ImplicitCastExpr 0x141140d80 <col:10> 'char *' <ArrayToPointerDecay>     |       `-StringLiteral 0x141140d60 <col:10> 'char[4]' lvalue \"STR\"     `-ReturnStmt 0x141140e88 <line:6:2, col:33>       `-ArraySubscriptExpr 0x141140e68 <col:9, col:33> '<dependent type>' contains-errors lvalue         |-ImplicitCastExpr 0x141140e38 <col:9> 'const char *(*)(enum json_tokener_error)' <FunctionToPointerDecay>         | `-DeclRefExpr 0x141140e18 <col:9> 'const char *(enum json_tokener_error)' Function 0x141128708 'json_tokener_error_desc' 'const char *(enum json_tokener_error)'         `-ImplicitCastExpr 0x141140e50 <col:29> '<dependent type>' contains-errors <LValueToRValue>           `-RecoveryExpr 0x141140df8 <col:29> '<dependent type>' contains-errors lvalue ","20901":"`-FunctionDecl 0x122141200  line:1:12 invalid guc_ctl_ctxinfo_flags 'int (struct intel_guc *)' static   |-ParmVarDecl 0x122128068 <col:34, col:52> col:52 used guc 'struct intel_guc *'   `-CompoundStmt 0x1221417d8 <line:2:1, line:16:1>     |-IfStmt 0x122141770 <line:5:2, line:14:2>     | |-CallExpr 0x122141498 <line:5:6, col:38> 'int'     | | |-ImplicitCastExpr 0x122141480 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x122141410 <col:6> 'int ()' Function 0x122141358 'intel_guc_submission_is_used' 'int ()'     | | `-ImplicitCastExpr 0x1221414c0 <col:35> 'struct intel_guc *' <LValueToRValue>     | |   `-DeclRefExpr 0x122141430 <col:35> 'struct intel_guc *' lvalue ParmVar 0x122128068 'guc' 'struct intel_guc *'     | `-CompoundStmt 0x122141760 <col:41, line:14:2>     `-ReturnStmt 0x1221417c8 <line:15:2, col:9>       `-RecoveryExpr 0x1221417a8 <col:9> '<dependent type>' contains-errors lvalue ","20773":"`-FunctionDecl 0x1561281c8  line:1:1 referenced invalid pad_or_truncate_password_V4 'int (int)'   |-ParmVarDecl 0x1561280f0 <col:29, <invalid sloc>> col:32 invalid 'int'   `-CompoundStmt 0x156128470 <line:2:1, line:6:1>     |-DeclStmt 0x156128308 <line:3:5, col:23>     | `-VarDecl 0x1561282a0 <col:5, col:10> col:10 invalid k1 'char'     |-CallExpr 0x1561283f0 <line:4:5, col:45> '<dependent type>' contains-errors     | |-RecoveryExpr 0x156128340 <col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x156128320 <col:5> 'int (int)' Function 0x1561281c8 'pad_or_truncate_password_V4' 'int (int)'     | |-RecoveryExpr 0x1561283d0 <col:33> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x156128380 <col:43> '<dependent type>' contains-errors lvalue     |-ReturnStmt 0x156128458 <line:5:5, col:12>     | `-RecoveryExpr 0x156128438 <col:12> '<dependent type>' contains-errors lvalue     `-NullStmt 0x156128468 <col:38> ","20526":"`-FunctionDecl 0x15000e038  line:1:12 invalid exif_process_unicode 'int (int *, int *, int, char *, int)' static   |-ParmVarDecl 0x15000dd28 <col:33, col:50> col:50 invalid ImageInfo 'int *'   |-ParmVarDecl 0x15000dda8 <col:61, col:76> col:76 referenced invalid xp_field 'int *'   |-ParmVarDecl 0x15000de28 <col:86, col:90> col:90 used tag 'int'   |-ParmVarDecl 0x15000dea8 <col:95, col:101> col:101 used szValuePtr 'char *'   |-ParmVarDecl 0x15000df28 <col:113, col:117> col:117 used ByteCount 'int'   `-CompoundStmt 0x150808c50 <line:2:1, line:17:1>     |-BinaryOperator 0x15000e1b8 <line:3:2, col:18> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15000e150 <col:2, col:12> '<dependent type>' contains-errors lvalue ->tag     | | `-RecoveryExpr 0x15000e128 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15000e108 <col:2> 'int *' lvalue ParmVar 0x15000dda8 'xp_field' 'int *'     | `-DeclRefExpr 0x15000e198 <col:18> 'int' lvalue ParmVar 0x15000de28 'tag' 'int'     |-BinaryOperator 0x15000e2c0 <line:4:2, col:20> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15000e220 <col:2, col:12> '<dependent type>' contains-errors lvalue ->value     | | `-RecoveryExpr 0x15000e1f8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15000e1d8 <col:2> 'int *' lvalue ParmVar 0x15000dda8 'xp_field' 'int *'     | `-RecoveryExpr 0x15000e2a0 <col:20> '<dependent type>' contains-errors lvalue     |-IfStmt 0x150808bb8 <line:6:2, line:15:2>     | |-RecoveryExpr 0x1508088d8 <line:6:6, line:13:27> '_Bool' contains-errors     | `-CompoundStmt 0x150808ba0 <col:30, line:15:2>     |   `-BinaryOperator 0x150808b80 <line:14:3, col:83> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x150808940 <col:3, col:13> '<dependent type>' contains-errors lvalue ->size     |     | `-RecoveryExpr 0x150808918 <col:3> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x1508088f8 <col:3> 'int *' lvalue ParmVar 0x15000dda8 'xp_field' 'int *'     |     `-CallExpr 0x150808b48 <col:20, col:83> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x150808a68 <col:20> 'int ()' Function 0x1508089b0 'exif_process_string_raw' 'int ()'     |       |-UnaryOperator 0x150808af0 <col:44, col:55> '<dependent type>' contains-errors prefix '&' cannot overflow     |       | `-CXXDependentScopeMemberExpr 0x150808aa8 <col:45, col:55> '<dependent type>' contains-errors lvalue ->value     |       |   `-RecoveryExpr 0x150808a88 <col:45> '<dependent type>' contains-errors lvalue     |       |-DeclRefExpr 0x150808b08 <col:62> 'char *' lvalue ParmVar 0x15000dea8 'szValuePtr' 'char *'     |       `-DeclRefExpr 0x150808b28 <col:74> 'int' lvalue ParmVar 0x15000df28 'ByteCount' 'int'     `-ReturnStmt 0x150808c40 <line:16:2, col:19>       `-CXXDependentScopeMemberExpr 0x150808bf8 <col:9, col:19> '<dependent type>' contains-errors lvalue ->size         `-RecoveryExpr 0x150808bd8 <col:9> '<dependent type>' contains-errors lvalue ","20303":"`-FunctionDecl 0x11f00dd98  line:1:5 setup_tests 'int (void)'   `-CompoundStmt 0x11f028ad8 <line:2:1, line:16:1>     |-IfStmt 0x11f028708 <line:3:5, line:9:5>     | |-BinaryOperator 0x11f0284d8 <line:3:9, line:6:55> 'int' contains-errors '||'     | | |-BinaryOperator 0x11f0283f8 <line:3:9, line:5:54> 'int' contains-errors '||'     | | | |-BinaryOperator 0x11f028318 <line:3:9, line:4:60> 'int' contains-errors '||'     | | | | |-UnaryOperator 0x11f028240 <line:3:9, col:49> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | | `-CallExpr 0x11f028218 <col:10, col:49> '<dependent type>' contains-errors     | | | | |   |-DeclRefExpr 0x11f00dfb0 <col:10> 'int ()' Function 0x11f00def8 'TEST_ptr' 'int ()'     | | | | |   `-BinaryOperator 0x11f0281f8 <col:19, col:48> '<dependent type>' contains-errors '='     | | | | |     |-RecoveryExpr 0x11f028198 <col:19> '<dependent type>' contains-errors lvalue     | | | | |     `-CallExpr 0x11f0281d0 <col:29, col:48> 'int'     | | | | |       |-ImplicitCastExpr 0x11f0281b8 <col:29> 'int (*)()' <FunctionToPointerDecay>     | | | | |       | `-DeclRefExpr 0x11f00e0c8 <col:29> 'int ()' Function 0x11f00e010 'test_get_argument' 'int ()'     | | | | |       `-IntegerLiteral 0x11f00e0e8 <col:47> 'int' 0     | | | | `-UnaryOperator 0x11f028300 <line:4:16, col:60> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | |   `-CallExpr 0x11f0282d8 <col:17, col:60> '<dependent type>' contains-errors     | | | |     |-DeclRefExpr 0x11f00e1e0 <col:17> 'int ()' Function 0x11f00def8 'TEST_ptr' 'int ()'     | | | |     `-BinaryOperator 0x11f0282b8 <col:26, col:59> '<dependent type>' contains-errors '='     | | | |       |-RecoveryExpr 0x11f028258 <col:26> '<dependent type>' contains-errors lvalue     | | | |       `-CallExpr 0x11f028290 <col:40, col:59> 'int'     | | | |         |-ImplicitCastExpr 0x11f028278 <col:40> 'int (*)()' <FunctionToPointerDecay>     | | | |         | `-DeclRefExpr 0x11f00e218 <col:40> 'int ()' Function 0x11f00e010 'test_get_argument' 'int ()'     | | | |         `-IntegerLiteral 0x11f00e238 <col:58> 'int' 1     | | | `-UnaryOperator 0x11f0283e0 <line:5:16, col:54> '<dependent type>' contains-errors prefix '!' cannot overflow     | | |   `-CallExpr 0x11f0283b8 <col:17, col:54> '<dependent type>' contains-errors     | | |     |-DeclRefExpr 0x11f00e318 <col:17> 'int ()' Function 0x11f00def8 'TEST_ptr' 'int ()'     | | |     `-BinaryOperator 0x11f028398 <col:26, col:53> '<dependent type>' contains-errors '='     | | |       |-RecoveryExpr 0x11f028338 <col:26> '<dependent type>' contains-errors lvalue     | | |       `-CallExpr 0x11f028370 <col:34, col:53> 'int'     | | |         |-ImplicitCastExpr 0x11f028358 <col:34> 'int (*)()' <FunctionToPointerDecay>     | | |         | `-DeclRefExpr 0x11f00e350 <col:34> 'int ()' Function 0x11f00e010 'test_get_argument' 'int ()'     | | |         `-IntegerLiteral 0x11f00e370 <col:52> 'int' 2     | | `-UnaryOperator 0x11f0284c0 <line:6:16, col:55> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-CallExpr 0x11f028498 <col:17, col:55> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x11f028060 <col:17> 'int ()' Function 0x11f00def8 'TEST_ptr' 'int ()'     | |     `-BinaryOperator 0x11f028478 <col:26, col:54> '<dependent type>' contains-errors '='     | |       |-RecoveryExpr 0x11f028418 <col:26> '<dependent type>' contains-errors lvalue     | |       `-CallExpr 0x11f028450 <col:35, col:54> 'int'     | |         |-ImplicitCastExpr 0x11f028438 <col:35> 'int (*)()' <FunctionToPointerDecay>     | |         | `-DeclRefExpr 0x11f028098 <col:35> 'int ()' Function 0x11f00e010 'test_get_argument' 'int ()'     | |         `-IntegerLiteral 0x11f0280b8 <col:53> 'int' 3     | `-CompoundStmt 0x11f0286e8 <col:58, line:9:5>     |   |-CallExpr 0x11f028678 <line:7:9, col:25> 'int'     |   | |-ImplicitCastExpr 0x11f028660 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x11f0285d8 <col:9> 'int ()' Function 0x11f028520 'TEST_error' 'int ()'     |   | `-ImplicitCastExpr 0x11f0286a0 <col:20> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x11f028640 <col:20> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x11f0286d8 <line:8:9, col:16>     |     `-IntegerLiteral 0x11f0286b8 <col:16> 'int' 0     |-CallExpr 0x11f028888 <line:11:5, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11f028808 <col:5> 'int ()' Function 0x11f028750 'ADD_TEST' 'int ()'     | `-RecoveryExpr 0x11f028868 <col:14> '<dependent type>' contains-errors lvalue     |-CallExpr 0x11f028930 <line:12:5, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11f0288b0 <col:5> 'int ()' Function 0x11f028750 'ADD_TEST' 'int ()'     | `-RecoveryExpr 0x11f028910 <col:14> '<dependent type>' contains-errors lvalue     |-CallExpr 0x11f0289d8 <line:13:5, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11f028958 <col:5> 'int ()' Function 0x11f028750 'ADD_TEST' 'int ()'     | `-RecoveryExpr 0x11f0289b8 <col:14> '<dependent type>' contains-errors lvalue     |-CallExpr 0x11f028a80 <line:14:5, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11f028a00 <col:5> 'int ()' Function 0x11f028750 'ADD_TEST' 'int ()'     | `-RecoveryExpr 0x11f028a60 <col:14> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x11f028ac8 <line:15:5, col:12>       `-IntegerLiteral 0x11f028aa8 <col:12> 'int' 1 ","20843":"`-FunctionDecl 0x13b1281f8  line:1:16 invalid vnc_client_write_plain 'int (int *)' static   |-ParmVarDecl 0x13b128128 <col:39, col:49> col:49 invalid vs 'int *'   `-CompoundStmt 0x13c8086e0 <line:2:1, line:29:1>     |-IfStmt 0x13b1286a0 <line:19:5, line:20:16>     | |-UnaryOperator 0x13b128658 <line:19:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13b128640 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x13b128620 <col:10> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13b128690 <line:20:9, col:16>     |   `-IntegerLiteral 0x13b128670 <col:16> 'int' 0     |-CallExpr 0x13c8082c8 <line:22:5, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13b1287a0 <col:5> 'int ()' Function 0x13b1286e8 'buffer_advance' 'int ()'     | |-UnaryOperator 0x13c808248 <col:20, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x13c808200 <col:21, col:25> '<dependent type>' contains-errors lvalue ->output     | |   `-RecoveryExpr 0x13b1287c0 <col:21> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x13c8082a8 <col:33> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13c808678 <line:24:5, line:26:5>     | |-BinaryOperator 0x13c8083c8 <line:24:9, col:30> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x13c808360 <col:9, col:20> '<dependent type>' contains-errors lvalue .offset     | | | `-CXXDependentScopeMemberExpr 0x13c808318 <col:9, col:13> '<dependent type>' contains-errors lvalue ->output     | | |   `-RecoveryExpr 0x13c8082f8 <col:9> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x13c8083a8 <col:30> 'int' 0     | `-CompoundStmt 0x13c808660 <col:33, line:26:5>     |   `-CallExpr 0x13c808620 <line:25:9, col:65> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x13c8084c8 <col:9> 'int ()' Function 0x13c808410 'qemu_set_fd_handler' 'int ()'     |     |-CXXDependentScopeMemberExpr 0x13c808508 <col:29, col:33> '<dependent type>' contains-errors lvalue ->csock     |     | `-RecoveryExpr 0x13c8084e8 <col:29> '<dependent type>' contains-errors lvalue     |     |-RecoveryExpr 0x13c8085e0 <col:40> '<dependent type>' contains-errors lvalue     |     |-RecoveryExpr 0x13c808600 <col:57> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x13c808580 <col:63> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x13c8086d0 <line:28:5, col:12>       `-RecoveryExpr 0x13c8086b0 <col:12> '<dependent type>' contains-errors lvalue ","20790":"`-FunctionDecl 0x153846b18  line:1:1 invalid set_eecd 'int (int *, int, int)'   |-ParmVarDecl 0x153846928 <col:10, col:22> col:22 referenced invalid s 'int *'   |-ParmVarDecl 0x1538469a8 <col:25, col:29> col:29 index 'int'   |-ParmVarDecl 0x153846a28 <col:36, col:45> col:45 invalid val 'int'   `-CompoundStmt 0x1510305b0 <line:2:1, line:34:1>     |-IfStmt 0x153846e68 <line:7:5, line:9:5>     | |-RecoveryExpr 0x153846e20 <line:7:9, col:30> '_Bool' contains-errors     | `-CompoundStmt 0x153846e50 <col:33, line:9:5>     |   `-ReturnStmt 0x153846e40 <line:8:9>     |-IfStmt 0x1538603b8 <line:10:5, line:15:5>     | |-RecoveryExpr 0x153846ef8 <line:10:9, col:38> '_Bool' contains-errors     | `-CompoundStmt 0x153860388 <col:41, line:15:5>     |   |-BinaryOperator 0x153860020 <line:11:9, col:32> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x153846fa8 <col:9, col:23> '<dependent type>' contains-errors lvalue .val_in     |   | | `-CXXDependentScopeMemberExpr 0x153846f60 <col:9, col:12> '<dependent type>' contains-errors lvalue ->eecd_state     |   | |   `-RecoveryExpr 0x153846f38 <col:9> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x153846f18 <col:9> 'int *' lvalue ParmVar 0x153846928 's' 'int *'     |   | `-IntegerLiteral 0x153860000 <col:32> 'int' 0     |   |-BinaryOperator 0x153860138 <line:12:9, col:35> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x1538600d0 <col:9, col:23> '<dependent type>' contains-errors lvalue .bitnum_in     |   | | `-CXXDependentScopeMemberExpr 0x153860088 <col:9, col:12> '<dependent type>' contains-errors lvalue ->eecd_state     |   | |   `-RecoveryExpr 0x153860060 <col:9> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x153860040 <col:9> 'int *' lvalue ParmVar 0x153846928 's' 'int *'     |   | `-IntegerLiteral 0x153860118 <col:35> 'int' 0     |   |-BinaryOperator 0x153860250 <line:13:9, col:36> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x1538601e8 <col:9, col:23> '<dependent type>' contains-errors lvalue .bitnum_out     |   | | `-CXXDependentScopeMemberExpr 0x1538601a0 <col:9, col:12> '<dependent type>' contains-errors lvalue ->eecd_state     |   | |   `-RecoveryExpr 0x153860178 <col:9> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x153860158 <col:9> 'int *' lvalue ParmVar 0x153846928 's' 'int *'     |   | `-IntegerLiteral 0x153860230 <col:36> 'int' 0     |   `-BinaryOperator 0x153860368 <line:14:9, col:33> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x153860300 <col:9, col:23> '<dependent type>' contains-errors lvalue .reading     |     | `-CXXDependentScopeMemberExpr 0x1538602b8 <col:9, col:12> '<dependent type>' contains-errors lvalue ->eecd_state     |     |   `-RecoveryExpr 0x153860290 <col:9> '<dependent type>' contains-errors lvalue     |     |     `-DeclRefExpr 0x153860270 <col:9> 'int *' lvalue ParmVar 0x153846928 's' 'int *'     |     `-IntegerLiteral 0x153860348 <col:33> 'int' 0     |-IfStmt 0x153860490 <line:16:5, line:18:5>     | |-RecoveryExpr 0x153860448 <line:16:9, col:41> '_Bool' contains-errors     | `-CompoundStmt 0x153860478 <col:44, line:18:5>     |   `-ReturnStmt 0x153860468 <line:17:9>     |-IfStmt 0x153860648 <line:19:5, line:22:5>     | |-RecoveryExpr 0x153860508 <line:19:9, col:30> '_Bool' contains-errors     | `-CompoundStmt 0x153860628 <col:33, line:22:5>     |   |-UnaryOperator 0x153860600 <line:20:9, col:33> '<dependent type>' contains-errors postfix '++' cannot overflow     |   | `-CXXDependentScopeMemberExpr 0x1538605b8 <col:9, col:23> '<dependent type>' contains-errors lvalue .bitnum_out     |   |   `-CXXDependentScopeMemberExpr 0x153860570 <col:9, col:12> '<dependent type>' contains-errors lvalue ->eecd_state     |   |     `-RecoveryExpr 0x153860548 <col:9> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x153860528 <col:9> 'int *' lvalue ParmVar 0x153846928 's' 'int *'     |   `-ReturnStmt 0x153860618 <line:21:9>     |-CompoundAssignOperator 0x153860760 <line:23:5, col:30> '<dependent type>' contains-errors '<<=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-CXXDependentScopeMemberExpr 0x1538606f8 <col:5, col:19> '<dependent type>' contains-errors lvalue .val_in     | | `-CXXDependentScopeMemberExpr 0x1538606b0 <col:5, col:8> '<dependent type>' contains-errors lvalue ->eecd_state     | |   `-RecoveryExpr 0x153860688 <col:5> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x153860668 <col:5> 'int *' lvalue ParmVar 0x153846928 's' 'int *'     | `-IntegerLiteral 0x153860740 <col:30> 'int' 1     |-IfStmt 0x153860950 <line:24:5, line:25:33>     | |-BinaryOperator 0x153860808 <line:24:9, col:15> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x153860790 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1538607e8 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundAssignOperator 0x153860920 <line:25:9, col:33> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |-CXXDependentScopeMemberExpr 0x1538608b8 <col:9, col:23> '<dependent type>' contains-errors lvalue .val_in     |   | `-CXXDependentScopeMemberExpr 0x153860870 <col:9, col:12> '<dependent type>' contains-errors lvalue ->eecd_state     |   |   `-RecoveryExpr 0x153860848 <col:9> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x153860828 <col:9> 'int *' lvalue ParmVar 0x153846928 's' 'int *'     |   `-IntegerLiteral 0x153860900 <col:33> 'int' 1     |-IfStmt 0x1510300d0 <line:26:5, line:30:5>     | |-BinaryOperator 0x153860b58 <line:26:9, col:58> 'int' contains-errors '&&'     | | |-BinaryOperator 0x153860a58 <col:9, col:38> 'int' contains-errors '=='     | | | |-UnaryOperator 0x153860a20 <col:9, col:25> '<dependent type>' contains-errors prefix '++' cannot overflow     | | | | `-CXXDependentScopeMemberExpr 0x1538609d8 <col:11, col:25> '<dependent type>' contains-errors lvalue .bitnum_in     | | | |   `-CXXDependentScopeMemberExpr 0x153860990 <col:11, col:14> '<dependent type>' contains-errors lvalue ->eecd_state     | | | |     `-RecoveryExpr 0x153860970 <col:11> '<dependent type>' contains-errors lvalue     | | | `-IntegerLiteral 0x153860a38 <col:38> 'int' 9     | | `-UnaryOperator 0x153860b40 <col:43, col:58> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x153860b28 <col:44, col:58> '<dependent type>' contains-errors <LValueToRValue>     | |     `-CXXDependentScopeMemberExpr 0x153860ae0 <col:44, col:58> '<dependent type>' contains-errors lvalue .reading     | |       `-CXXDependentScopeMemberExpr 0x153860a98 <col:44, col:47> '<dependent type>' contains-errors lvalue ->eecd_state     | |         `-RecoveryExpr 0x153860a78 <col:44> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1510300b8 <col:67, line:30:5>     |   `-BinaryOperator 0x153860e00 <line:27:9, col:71> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x153860c08 <col:9, col:23> '<dependent type>' contains-errors lvalue .bitnum_out     |     | `-CXXDependentScopeMemberExpr 0x153860bc0 <col:9, col:12> '<dependent type>' contains-errors lvalue ->eecd_state     |     |   `-RecoveryExpr 0x153860b98 <col:9> '<dependent type>' contains-errors lvalue     |     |     `-DeclRefExpr 0x153860b78 <col:9> 'int *' lvalue ParmVar 0x153846928 's' 'int *'     |     `-BinaryOperator 0x153860de0 <col:36, col:71> '<dependent type>' contains-errors '-'     |       |-ParenExpr 0x153860da0 <col:36, col:69> '<dependent type>' contains-errors     |       | `-BinaryOperator 0x153860d80 <col:37, col:68> '<dependent type>' contains-errors '<<'     |       |   |-ParenExpr 0x153860d40 <col:37, col:65> '<dependent type>' contains-errors     |       |   | `-BinaryOperator 0x153860d20 <col:38, col:61> '<dependent type>' contains-errors '&'     |       |   |   |-CXXDependentScopeMemberExpr 0x153860cb8 <col:38, col:52> '<dependent type>' contains-errors lvalue .val_in     |       |   |   | `-CXXDependentScopeMemberExpr 0x153860c70 <col:38, col:41> '<dependent type>' contains-errors lvalue ->eecd_state     |       |   |   |   `-RecoveryExpr 0x153860c50 <col:38> '<dependent type>' contains-errors lvalue     |       |   |   `-IntegerLiteral 0x153860d00 <col:61> 'int' 63     |       |   `-IntegerLiteral 0x153860d60 <col:68> 'int' 4     |       `-IntegerLiteral 0x153860dc0 <col:71> 'int' 1     `-CallExpr 0x151030568 <line:31:5, line:33:33> '<dependent type>' contains-errors       |-DeclRefExpr 0x151030250 <line:31:5> 'int ()' Function 0x151030198 'DBGOUT' 'int ()'       |-RecoveryExpr 0x151030548 <col:12> '<dependent type>' contains-errors lvalue       |-StringLiteral 0x1510302d0 <col:20> 'char[4]' lvalue \"STR\"       |-CXXDependentScopeMemberExpr 0x151030358 <line:32:12, col:26> '<dependent type>' contains-errors lvalue .bitnum_in       | `-CXXDependentScopeMemberExpr 0x151030310 <col:12, col:15> '<dependent type>' contains-errors lvalue ->eecd_state       |   `-RecoveryExpr 0x1510302f0 <col:12> '<dependent type>' contains-errors lvalue       |-CXXDependentScopeMemberExpr 0x151030408 <col:37, col:51> '<dependent type>' contains-errors lvalue .bitnum_out       | `-CXXDependentScopeMemberExpr 0x1510303c0 <col:37, col:40> '<dependent type>' contains-errors lvalue ->eecd_state       |   `-RecoveryExpr 0x1510303a0 <col:37> '<dependent type>' contains-errors lvalue       `-CXXDependentScopeMemberExpr 0x1510304b8 <line:33:12, col:26> '<dependent type>' contains-errors lvalue .reading         `-CXXDependentScopeMemberExpr 0x151030470 <col:12, col:15> '<dependent type>' contains-errors lvalue ->eecd_state           `-RecoveryExpr 0x151030450 <col:12> '<dependent type>' contains-errors lvalue ","21112":"`-FunctionDecl 0x1238fb718  line:1:1 invalid soup_auth_ntlm_get_connection_authorization 'int (int *, int *, int)'   |-ParmVarDecl 0x1238fb528 <col:46, col:66> col:66 invalid auth 'int *'   |-ParmVarDecl 0x1238fb5a8 <line:2:11, col:31> col:31 invalid msg 'int *'   |-ParmVarDecl 0x1238fb628 <line:3:11, col:31> col:31 invalid state 'int'   `-CompoundStmt 0x12301fbb0 <line:4:1, line:70:1>     |-DeclStmt 0x12301ee00 <line:8:2, col:21>     | `-VarDecl 0x1238fbb60 <col:2, col:17> col:8 used header 'char *' cinit     |   `-RecoveryExpr 0x1238fbbe0 <col:17> '<dependent type>' contains-errors lvalue     |-SwitchStmt 0x12301eef8 <line:10:2, line:67:2>     | |-CXXDependentScopeMemberExpr 0x12301eeb0 <line:10:10, col:16> '<dependent type>' contains-errors lvalue ->state     | | `-RecoveryExpr 0x12301ee90 <col:10> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12301fb10 <col:23, line:67:2>     |   |-BinaryOperator 0x12301f500 <line:30:3, col:31> 'char *' contains-errors '='     |   | |-DeclRefExpr 0x12301ef38 <col:3> 'char *' contains-errors lvalue Var 0x1238fbb60 'header' 'char *'     |   | `-ImplicitCastExpr 0x12301f0c8 <col:12, col:31> 'char *' <IntegralToPointer>     |   |   `-CallExpr 0x12301f0a8 <col:12, col:31> 'int'     |   |     `-ImplicitCastExpr 0x12301f090 <col:12> 'int (*)()' <FunctionToPointerDecay>     |   |       `-DeclRefExpr 0x12301f038 <col:12> 'int ()' Function 0x12301ef80 'soup_ntlm_request' 'int ()'     |   |-BreakStmt 0x12301f538 <line:32:3>     |   |-IfStmt 0x12301f6c0 <line:34:3, line:45:3> has_else     |   | |-RecoveryExpr 0x12301f540 <line:34:7, col:13> '_Bool' contains-errors     |   | |-CompoundStmt 0x12301f580 <col:30, line:37:3>     |   | `-CompoundStmt 0x12301f6b0 <col:10, line:45:3>     |   |-IfStmt 0x12301fac0 <line:49:3, line:54:3>     |   | |-RecoveryExpr 0x12301f7f0 <line:49:7, col:31> '_Bool' contains-errors     |   | `-CompoundStmt 0x12301fab0 <col:60, line:54:3>     |   |-BreakStmt 0x12301fae0 <line:55:3>     |   `-DefaultStmt 0x12301faf0 <line:65:2, line:66:3>     |     `-BreakStmt 0x12301fae8 <col:3>     `-ReturnStmt 0x12301fba0 <line:69:2, col:9>       `-ImplicitCastExpr 0x12301fb88 <col:9> 'int' contains-errors <PointerToIntegral>         `-ImplicitCastExpr 0x12301fb70 <col:9> 'char *' contains-errors <LValueToRValue>           `-DeclRefExpr 0x12301fb50 <col:9> 'char *' contains-errors lvalue Var 0x1238fbb60 'header' 'char *' ","20293":"`-FunctionDecl 0x12400ddf8  line:1:12 invalid lua_ap_scoreboard_process 'int (int *)' static   |-ParmVarDecl 0x12400dd28 <col:38, col:49> col:49 invalid L 'int *'   `-CompoundStmt 0x1240292a0 <line:2:1, line:48:1>     |-DeclStmt 0x12400df28 <line:3:5, col:10>     | `-VarDecl 0x12400dec0 <col:5, col:9> col:9 used i 'int'     |-CallExpr 0x12400e180 <line:6:5, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12400e0b0 <col:5> 'int ()' Function 0x12400dff8 'luaL_checktype' 'int ()'     | |-RecoveryExpr 0x12400e0d0 <col:20> '<dependent type>' contains-errors lvalue     | |-IntegerLiteral 0x12400e0f0 <col:23> 'int' 1     | `-RecoveryExpr 0x12400e160 <col:26> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12400e288 <line:7:5, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12400e1b8 <col:5> 'int ()' Function 0x12400dff8 'luaL_checktype' 'int ()'     | |-RecoveryExpr 0x12400e1d8 <col:20> '<dependent type>' contains-errors lvalue     | |-IntegerLiteral 0x12400e1f8 <col:23> 'int' 2     | `-RecoveryExpr 0x12400e268 <col:26> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x124027850 <line:8:5, col:27> 'int' contains-errors '='     | |-DeclRefExpr 0x12400e2c0 <col:5> 'int' lvalue Var 0x12400dec0 'i' 'int'     | `-CallExpr 0x124027820 <col:9, col:27> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12400e3c0 <col:9> 'int ()' Function 0x12400e308 'lua_tointeger' 'int ()'     |   |-RecoveryExpr 0x12400e3e0 <col:23> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x124027800 <col:26> 'int' 2     |-IfStmt 0x124029250 <line:10:5, line:46:5>     | |-RecoveryExpr 0x124027a30 <line:10:9> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x124029180 <col:20, line:46:5>     |   |-CallExpr 0x124027b70 <line:11:9, col:23> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x124027b30 <col:9> 'int ()' Function 0x124027a78 'lua_newtable' 'int ()'     |   | `-RecoveryExpr 0x124027b50 <col:22> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x124027d20 <line:13:9, col:32> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x124027c78 <col:9> 'int ()' Function 0x124027bc0 'lua_pushstring' 'int ()'     |   | |-RecoveryExpr 0x124027c98 <col:24> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x124027d00 <col:27> 'char[4]' lvalue \"STR\"     |   |-CallExpr 0x124027f68 <line:14:9, col:49> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x124027e30 <col:9> 'int ()' Function 0x124027d78 'lua_pushnumber' 'int ()'     |   | |-RecoveryExpr 0x124027e50 <col:24> '<dependent type>' contains-errors lvalue     |   | `-CXXDependentScopeMemberExpr 0x124027f20 <col:27, col:38> '<dependent type>' contains-errors lvalue ->connections     |   |   `-RecoveryExpr 0x124027f00 <col:27> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x1240280f0 <line:15:9, col:27> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x124028078 <col:9> 'int ()' Function 0x124027fc0 'lua_settable' 'int ()'     |   | |-RecoveryExpr 0x124028098 <col:22> '<dependent type>' contains-errors lvalue     |   | `-UnaryOperator 0x1240280d8 <col:25, col:26> 'int' prefix '-'     |   |   `-IntegerLiteral 0x1240280b8 <col:26> 'int' 3     |   |-CallExpr 0x124028180 <line:17:9, col:32> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x124028120 <col:9> 'int ()' Function 0x124027bc0 'lua_pushstring' 'int ()'     |   | |-RecoveryExpr 0x124028140 <col:24> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x124028160 <col:27> 'char[4]' lvalue \"STR\"     |   |-CallExpr 0x1240282e8 <line:18:9, col:48> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1240281b0 <col:9> 'int ()' Function 0x124027d78 'lua_pushnumber' 'int ()'     |   | |-RecoveryExpr 0x1240281d0 <col:24> '<dependent type>' contains-errors lvalue     |   | `-CXXDependentScopeMemberExpr 0x1240282a0 <col:27, col:38> '<dependent type>' contains-errors lvalue ->keep_alive     |   |   `-RecoveryExpr 0x124028280 <col:27> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x124028390 <line:19:9, col:27> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x124028318 <col:9> 'int ()' Function 0x124027fc0 'lua_settable' 'int ()'     |   | |-RecoveryExpr 0x124028338 <col:22> '<dependent type>' contains-errors lvalue     |   | `-UnaryOperator 0x124028378 <col:25, col:26> 'int' prefix '-'     |   |   `-IntegerLiteral 0x124028358 <col:26> 'int' 3     |   |-CallExpr 0x124028420 <line:21:9, col:32> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1240283c0 <col:9> 'int ()' Function 0x124027bc0 'lua_pushstring' 'int ()'     |   | |-RecoveryExpr 0x1240283e0 <col:24> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x124028400 <col:27> 'char[4]' lvalue \"STR\"     |   |-CallExpr 0x124028588 <line:22:9, col:53> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x124028450 <col:9> 'int ()' Function 0x124027d78 'lua_pushnumber' 'int ()'     |   | |-RecoveryExpr 0x124028470 <col:24> '<dependent type>' contains-errors lvalue     |   | `-CXXDependentScopeMemberExpr 0x124028540 <col:27, col:38> '<dependent type>' contains-errors lvalue ->lingering_close     |   |   `-RecoveryExpr 0x124028520 <col:27> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x124028630 <line:23:9, col:27> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1240285b8 <col:9> 'int ()' Function 0x124027fc0 'lua_settable' 'int ()'     |   | |-RecoveryExpr 0x1240285d8 <col:22> '<dependent type>' contains-errors lvalue     |   | `-UnaryOperator 0x124028618 <col:25, col:26> 'int' prefix '-'     |   |   `-IntegerLiteral 0x1240285f8 <col:26> 'int' 3     |   |-CallExpr 0x1240286c0 <line:25:9, col:32> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x124028660 <col:9> 'int ()' Function 0x124027bc0 'lua_pushstring' 'int ()'     |   | |-RecoveryExpr 0x124028680 <col:24> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x1240286a0 <col:27> 'char[4]' lvalue \"STR\"     |   |-CallExpr 0x124028848 <line:26:9, col:41> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1240286f0 <col:9> 'int ()' Function 0x124027d78 'lua_pushnumber' 'int ()'     |   | |-RecoveryExpr 0x124028710 <col:24> '<dependent type>' contains-errors lvalue     |   | `-CXXDependentScopeMemberExpr 0x124028800 <col:27, col:38> '<dependent type>' contains-errors lvalue ->pid     |   |   `-RecoveryExpr 0x1240287c0 <col:27> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x1240288f0 <line:27:9, col:27> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x124028878 <col:9> 'int ()' Function 0x124027fc0 'lua_settable' 'int ()'     |   | |-RecoveryExpr 0x124028898 <col:22> '<dependent type>' contains-errors lvalue     |   | `-UnaryOperator 0x1240288d8 <col:25, col:26> 'int' prefix '-'     |   |   `-IntegerLiteral 0x1240288b8 <col:26> 'int' 3     |   |-CallExpr 0x124028980 <line:29:9, col:32> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x124028920 <col:9> 'int ()' Function 0x124027bc0 'lua_pushstring' 'int ()'     |   | |-RecoveryExpr 0x124028940 <col:24> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x124028960 <col:27> 'char[4]' lvalue \"STR\"     |   |-CallExpr 0x124028ae8 <line:30:9, col:47> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1240289b0 <col:9> 'int ()' Function 0x124027d78 'lua_pushnumber' 'int ()'     |   | |-RecoveryExpr 0x1240289d0 <col:24> '<dependent type>' contains-errors lvalue     |   | `-CXXDependentScopeMemberExpr 0x124028aa0 <col:27, col:38> '<dependent type>' contains-errors lvalue ->suspended     |   |   `-RecoveryExpr 0x124028a80 <col:27> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x124028b90 <line:31:9, col:27> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x124028b18 <col:9> 'int ()' Function 0x124027fc0 'lua_settable' 'int ()'     |   | |-RecoveryExpr 0x124028b38 <col:22> '<dependent type>' contains-errors lvalue     |   | `-UnaryOperator 0x124028b78 <col:25, col:26> 'int' prefix '-'     |   |   `-IntegerLiteral 0x124028b58 <col:26> 'int' 3     |   |-CallExpr 0x124028c20 <line:33:9, col:32> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x124028bc0 <col:9> 'int ()' Function 0x124027bc0 'lua_pushstring' 'int ()'     |   | |-RecoveryExpr 0x124028be0 <col:24> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x124028c00 <col:27> 'char[4]' lvalue \"STR\"     |   |-CallExpr 0x124028d88 <line:34:9, col:54> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x124028c50 <col:9> 'int ()' Function 0x124027d78 'lua_pushnumber' 'int ()'     |   | |-RecoveryExpr 0x124028c70 <col:24> '<dependent type>' contains-errors lvalue     |   | `-CXXDependentScopeMemberExpr 0x124028d40 <col:27, col:38> '<dependent type>' contains-errors lvalue ->write_completion     |   |   `-RecoveryExpr 0x124028d20 <col:27> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x124028e30 <line:35:9, col:27> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x124028db8 <col:9> 'int ()' Function 0x124027fc0 'lua_settable' 'int ()'     |   | |-RecoveryExpr 0x124028dd8 <col:22> '<dependent type>' contains-errors lvalue     |   | `-UnaryOperator 0x124028e18 <col:25, col:26> 'int' prefix '-'     |   |   `-IntegerLiteral 0x124028df8 <col:26> 'int' 3     |   |-CallExpr 0x124028ec0 <line:37:9, col:32> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x124028e60 <col:9> 'int ()' Function 0x124027bc0 'lua_pushstring' 'int ()'     |   | |-RecoveryExpr 0x124028e80 <col:24> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x124028ea0 <col:27> 'char[4]' lvalue \"STR\"     |   |-CallExpr 0x124028fa8 <line:39:9, col:27> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x124028f30 <col:9> 'int ()' Function 0x124027fc0 'lua_settable' 'int ()'     |   | |-RecoveryExpr 0x124028f50 <col:22> '<dependent type>' contains-errors lvalue     |   | `-UnaryOperator 0x124028f90 <col:25, col:26> 'int' prefix '-'     |   |   `-IntegerLiteral 0x124028f70 <col:26> 'int' 3     |   |-CallExpr 0x124029038 <line:41:9, col:32> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x124028fd8 <col:9> 'int ()' Function 0x124027bc0 'lua_pushstring' 'int ()'     |   | |-RecoveryExpr 0x124028ff8 <col:24> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x124029018 <col:27> 'char[4]' lvalue \"STR\"     |   |-CallExpr 0x124029120 <line:43:9, col:27> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1240290a8 <col:9> 'int ()' Function 0x124027fc0 'lua_settable' 'int ()'     |   | |-RecoveryExpr 0x1240290c8 <col:22> '<dependent type>' contains-errors lvalue     |   | `-UnaryOperator 0x124029108 <col:25, col:26> 'int' prefix '-'     |   |   `-IntegerLiteral 0x1240290e8 <col:26> 'int' 3     |   `-ReturnStmt 0x124029170 <line:45:9, col:16>     |     `-IntegerLiteral 0x124029150 <col:16> 'int' 1     `-ReturnStmt 0x124029290 <line:47:5, col:12>       `-IntegerLiteral 0x124029270 <col:12> 'int' 0 ","21029":"`-FunctionDecl 0x10700de38  line:1:1 TEST_F 'int (int, int)'   |-ParmVarDecl 0x10700dd58 <col:8> col:8 RouterTest 'int'   |-ParmVarDecl 0x10700dcd8 <col:20> col:20 RetryTimeoutDuringRetryDelayWithUpstreamRequestNoHostAltResponseCode 'int'   `-CompoundStmt 0x107029998 <col:90, line:55:1>     |-RecoveryExpr 0x10700df98 <line:3:3> '<dependent type>' contains-errors lvalue     |-CallExpr 0x107028c28 <line:13:3, col:29> 'int'     | `-ImplicitCastExpr 0x107028c10 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x107028bb8 <col:3> 'int ()' Function 0x107028b00 'expectResponseTimerCreate' 'int ()'     |-RecoveryExpr 0x107028c78 <line:15:3> '<dependent type>' contains-errors lvalue     |-RecoveryExpr 0x107028cc8 <line:18:3> '<dependent type>' contains-errors lvalue     |-CallExpr 0x107029228 <line:30:3, col:44> 'int'     | |-ImplicitCastExpr 0x107029210 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x107029068 <col:3> 'int ()' Function 0x107028fb0 'EXPECT_TRUE' 'int ()'     | `-CallExpr 0x1070291e0 <col:15, col:43> 'int'     |   |-ImplicitCastExpr 0x1070291c8 <col:15> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x107029168 <col:15> 'int ()' Function 0x1070290b0 'verifyHostUpstreamStats' 'int ()'     |   |-IntegerLiteral 0x107029188 <col:39> 'int' 0     |   `-IntegerLiteral 0x1070291a8 <col:42> 'int' 1     `-CallExpr 0x107029930 <line:51:3, col:44> 'int'       |-ImplicitCastExpr 0x107029918 <col:3> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x107029850 <col:3> 'int ()' Function 0x107028fb0 'EXPECT_TRUE' 'int ()'       `-CallExpr 0x1070298e8 <col:15, col:43> 'int'         |-ImplicitCastExpr 0x1070298d0 <col:15> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x107029870 <col:15> 'int ()' Function 0x1070290b0 'verifyHostUpstreamStats' 'int ()'         |-IntegerLiteral 0x107029890 <col:39> 'int' 0         `-IntegerLiteral 0x1070298b0 <col:42> 'int' 1 ","20429":"`-FunctionDecl 0x105026d98  line:1:1 invalid iter_dns_store 'int (struct module_env *, struct query_info *, struct reply_info *, int, int, int, struct regional *, int)'   |-ParmVarDecl 0x10500e248 <col:16, col:35> col:35 used env 'struct module_env *'   |-ParmVarDecl 0x105026628 <col:40, col:59> col:59 used msgqinf 'struct query_info *'   |-ParmVarDecl 0x1050267f8 <line:2:2, col:21> col:21 used msgrep 'struct reply_info *'   |-ParmVarDecl 0x105026878 <col:29, col:33> col:33 used is_referral 'int'   |-ParmVarDecl 0x105026910 <col:46, col:53> col:53 invalid leeway 'int'   |-ParmVarDecl 0x105026990 <col:61, col:65> col:65 used pside 'int'   |-ParmVarDecl 0x105026b68 <line:3:2, col:19> col:19 used region 'struct regional *'   |-ParmVarDecl 0x105026be8 <col:27, col:36> col:36 invalid flags 'int'   `-CompoundStmt 0x105027388 <line:4:1, line:8:1>     `-IfStmt 0x105027368 <line:5:2, line:7:16>       |-UnaryOperator 0x105027160 <line:5:5, line:6:23> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-CallExpr 0x105027100 <line:5:6, line:6:23> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x105026fe0 <line:5:6> 'int ()' Function 0x105026f28 'dns_cache_store' 'int ()'       |   |-DeclRefExpr 0x105027000 <col:22> 'struct module_env *' lvalue ParmVar 0x10500e248 'env' 'struct module_env *'       |   |-DeclRefExpr 0x105027020 <col:27> 'struct query_info *' lvalue ParmVar 0x105026628 'msgqinf' 'struct query_info *'       |   |-DeclRefExpr 0x105027040 <col:36> 'struct reply_info *' lvalue ParmVar 0x1050267f8 'msgrep' 'struct reply_info *'       |   |-DeclRefExpr 0x105027060 <col:44> 'int' lvalue ParmVar 0x105026878 'is_referral' 'int'       |   |-RecoveryExpr 0x105027080 <col:57> '<dependent type>' contains-errors lvalue       |   |-DeclRefExpr 0x1050270a0 <line:6:3> 'int' lvalue ParmVar 0x105026990 'pside' 'int'       |   |-DeclRefExpr 0x1050270c0 <col:10> 'struct regional *' lvalue ParmVar 0x105026b68 'region' 'struct regional *'       |   `-RecoveryExpr 0x1050270e0 <col:18> '<dependent type>' contains-errors lvalue       `-CallExpr 0x105027328 <line:7:3, col:16> 'int'         |-ImplicitCastExpr 0x105027310 <col:3> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x105027258 <col:3> 'int ()' Function 0x1050271a0 'log_err' 'int ()'         `-ImplicitCastExpr 0x105027350 <col:11> 'char *' <ArrayToPointerDecay>           `-StringLiteral 0x1050272c0 <col:11> 'char[4]' lvalue \"STR\" ","20950":"`-FunctionDecl 0x13500dfa8  line:1:21 invalid secure_dccpv6_sequence_number 'int (int *, int *, int, int)' static inline   |-ParmVarDecl 0x13500dd28 <col:51, col:59> col:59 invalid saddr 'int *'   |-ParmVarDecl 0x13500dda8 <col:66, col:74> col:74 invalid daddr 'int *'   |-ParmVarDecl 0x13500de28 <line:2:9, col:16> col:16 invalid sport 'int'   |-ParmVarDecl 0x13500dea8 <col:23, col:30> col:30 invalid dport 'int'   `-CompoundStmt 0x13500e2c0 <line:3:1, line:5:1>     `-ReturnStmt 0x13500e2b0 <line:4:2, col:64>       `-CallExpr 0x13500e270 <col:9, col:64> '<dependent type>' contains-errors         |-DeclRefExpr 0x13500e1d0 <col:9> 'int ()' Function 0x13500e118 'secure_tcpv6_sequence_number' 'int ()'         |-RecoveryExpr 0x13500e1f0 <col:38> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x13500e210 <col:45> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x13500e230 <col:52> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x13500e250 <col:59> '<dependent type>' contains-errors lvalue ","21099":"`-FunctionDecl 0x14600ddf8  line:1:1 invalid print_table_data_html 'int (int *)'   |-ParmVarDecl 0x14600dd28 <col:23, col:34> col:34 invalid result 'int *'   `-CompoundStmt 0x146028e60 <line:2:1, line:40:1>     |-CallExpr 0x14600e080 <line:6:3, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14600e020 <col:3> 'int ()' Function 0x14600df68 'mysql_field_seek' 'int ()'     | |-RecoveryExpr 0x14600e040 <col:20> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x14600e060 <col:27> 'int' 0     |-IfStmt 0x1460284f0 <line:8:3, line:20:3>     | |-RecoveryExpr 0x14600e280 <line:8:7> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1460284d8 <line:9:3, line:20:3>     |   `-WhileStmt 0x146028478 <line:10:5, line:18:5>     |     |-RecoveryExpr 0x146027e20 <line:10:11, col:45> '_Bool' contains-errors     |     `-CompoundStmt 0x146028458 <line:11:5, line:18:5>     |       |-CallExpr 0x146027ee8 <line:12:7, col:29> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x146027e40 <col:7> 'int ()' Function 0x14600e0d8 'tee_fputs' 'int ()'     |       | |-StringLiteral 0x146027e60 <col:17> 'char[4]' lvalue \"STR\"     |       | `-RecoveryExpr 0x146027ec8 <col:24> '<dependent type>' contains-errors lvalue     |       `-IfStmt 0x1460283e8 <line:13:7, line:16:9> has_else     |         |-RecoveryExpr 0x146027ff8 <line:13:11, col:39> '_Bool' contains-errors     |         |-CallExpr 0x1460282d8 <line:14:9, col:56> '<dependent type>' contains-errors     |         | |-DeclRefExpr 0x1460280f8 <col:9> 'int ()' Function 0x146028040 'xmlencode_print' 'int ()'     |         | |-CXXDependentScopeMemberExpr 0x146028228 <col:25, col:32> '<dependent type>' contains-errors lvalue ->name     |         | | `-RecoveryExpr 0x146028208 <col:25> '<dependent type>' contains-errors lvalue     |         | `-CXXDependentScopeMemberExpr 0x146028290 <col:38, col:45> '<dependent type>' contains-errors lvalue ->name_length     |         |   `-RecoveryExpr 0x146028270 <col:38> '<dependent type>' contains-errors lvalue     |         `-NullStmt 0x1460283e0 <line:16:9>     `-WhileStmt 0x146028e00 <line:21:3, line:38:3>       |-RecoveryExpr 0x146028658 <line:21:10, col:40> '_Bool' contains-errors       `-CompoundStmt 0x146028de8 <line:22:3, line:38:3>         `-IfStmt 0x1460286a0 <line:23:5, line:24:7>           |-RecoveryExpr 0x146028678 <line:23:9> '_Bool' contains-errors           `-BreakStmt 0x146028698 <line:24:7> ","20259":"`-FunctionDecl 0x13000de38  line:1:1 invalid InitParserList 'int (int **)'   |-ParmVarDecl 0x13000dd60 <col:16, col:31> col:31 invalid pListRoot 'int **'   `-CompoundStmt 0x13000e058 <line:2:1, line:5:1>     |-BinaryOperator 0x13000dff0 <line:3:2, col:15> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x13000dfb8 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x13000dfa0 <col:3> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x13000dee8 <col:3> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x13000dfd0 <col:15> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x13000e048 <line:4:2, col:9>       `-RecoveryExpr 0x13000e028 <col:9> '<dependent type>' contains-errors lvalue ","21209":"`-FunctionDecl 0x1449289f0  line:1:6 invalid credssp_send 'void (int *)'   |-ParmVarDecl 0x144928928 <col:19, col:31> col:31 invalid credssp 'int *'   `-CompoundStmt 0x144943cc8 <line:2:1, line:54:1>     |-DeclStmt 0x144928b38 <line:4:2, col:12>     | `-VarDecl 0x144928ad0 <col:2, col:6> col:6 used length 'int'     |-DeclStmt 0x144928bd0 <line:5:2, col:23>     | `-VarDecl 0x144928b68 <col:2, col:6> col:6 used ts_request_length 'int'     |-DeclStmt 0x144928c68 <line:6:2, col:24>     | `-VarDecl 0x144928c00 <col:2, col:6> col:6 used nego_tokens_length 'int'     |-DeclStmt 0x144928d00 <line:7:2, col:25>     | `-VarDecl 0x144928c98 <col:2, col:6> col:6 used pub_key_auth_length 'int'     |-DeclStmt 0x144928d98 <line:8:2, col:22>     | `-VarDecl 0x144928d30 <col:2, col:6> col:6 used auth_info_length 'int'     |-BinaryOperator 0x144942200 <line:10:2, col:117> 'int' contains-errors '='     | |-DeclRefExpr 0x144928db0 <col:2> 'int' lvalue Var 0x144928c00 'nego_tokens_length' 'int'     | `-ConditionalOperator 0x1449421d0 <col:23, col:117> '<dependent type>' contains-errors     |   |-ParenExpr 0x144928ec0 <col:23, col:55> 'int' contains-errors     |   | `-BinaryOperator 0x144928ea0 <col:24, col:54> 'int' contains-errors '>'     |   |   |-CXXDependentScopeMemberExpr 0x144928e38 <col:24, col:43> '<dependent type>' contains-errors lvalue .cbBuffer     |   |   | `-CXXDependentScopeMemberExpr 0x144928df0 <col:24, col:33> '<dependent type>' contains-errors lvalue ->negoToken     |   |   |   `-RecoveryExpr 0x144928dd0 <col:24> '<dependent type>' contains-errors lvalue     |   |   `-IntegerLiteral 0x144928e80 <col:54> 'int' 0     |   |-CallExpr 0x144942188 <col:59, col:113> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1449420b8 <col:59> 'int ()' Function 0x144942000 'credssp_sizeof_nego_tokens' 'int ()'     |   | `-CXXDependentScopeMemberExpr 0x144942140 <col:86, col:105> '<dependent type>' contains-errors lvalue .cbBuffer     |   |   `-CXXDependentScopeMemberExpr 0x1449420f8 <col:86, col:95> '<dependent type>' contains-errors lvalue ->negoToken     |   |     `-RecoveryExpr 0x1449420d8 <col:86> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x1449421b0 <col:117> 'int' 0     |-BinaryOperator 0x144942578 <line:11:2, col:121> 'int' contains-errors '='     | |-DeclRefExpr 0x144942220 <col:2> 'int' lvalue Var 0x144928c98 'pub_key_auth_length' 'int'     | `-ConditionalOperator 0x144942548 <col:24, col:121> '<dependent type>' contains-errors     |   |-ParenExpr 0x144942330 <col:24, col:57> 'int' contains-errors     |   | `-BinaryOperator 0x144942310 <col:25, col:56> 'int' contains-errors '>'     |   |   |-CXXDependentScopeMemberExpr 0x1449422a8 <col:25, col:45> '<dependent type>' contains-errors lvalue .cbBuffer     |   |   | `-CXXDependentScopeMemberExpr 0x144942260 <col:25, col:34> '<dependent type>' contains-errors lvalue ->pubKeyAuth     |   |   |   `-RecoveryExpr 0x144942240 <col:25> '<dependent type>' contains-errors lvalue     |   |   `-IntegerLiteral 0x1449422f0 <col:56> 'int' 0     |   |-CallExpr 0x144942500 <col:61, col:117> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x144942430 <col:61> 'int ()' Function 0x144942378 'credssp_sizeof_pub_key_auth' 'int ()'     |   | `-CXXDependentScopeMemberExpr 0x1449424b8 <col:89, col:109> '<dependent type>' contains-errors lvalue .cbBuffer     |   |   `-CXXDependentScopeMemberExpr 0x144942470 <col:89, col:98> '<dependent type>' contains-errors lvalue ->pubKeyAuth     |   |     `-RecoveryExpr 0x144942450 <col:89> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x144942528 <col:121> 'int' 0     |-BinaryOperator 0x1449428f0 <line:12:2, col:111> 'int' contains-errors '='     | |-DeclRefExpr 0x144942598 <col:2> 'int' lvalue Var 0x144928d30 'auth_info_length' 'int'     | `-ConditionalOperator 0x1449428c0 <col:21, col:111> '<dependent type>' contains-errors     |   |-ParenExpr 0x1449426a8 <col:21, col:52> 'int' contains-errors     |   | `-BinaryOperator 0x144942688 <col:22, col:51> 'int' contains-errors '>'     |   |   |-CXXDependentScopeMemberExpr 0x144942620 <col:22, col:40> '<dependent type>' contains-errors lvalue .cbBuffer     |   |   | `-CXXDependentScopeMemberExpr 0x1449425d8 <col:22, col:31> '<dependent type>' contains-errors lvalue ->authInfo     |   |   |   `-RecoveryExpr 0x1449425b8 <col:22> '<dependent type>' contains-errors lvalue     |   |   `-IntegerLiteral 0x144942668 <col:51> 'int' 0     |   |-CallExpr 0x144942878 <col:56, col:107> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1449427a8 <col:56> 'int ()' Function 0x1449426f0 'credssp_sizeof_auth_info' 'int ()'     |   | `-CXXDependentScopeMemberExpr 0x144942830 <col:81, col:99> '<dependent type>' contains-errors lvalue .cbBuffer     |   |   `-CXXDependentScopeMemberExpr 0x1449427e8 <col:81, col:90> '<dependent type>' contains-errors lvalue ->authInfo     |   |     `-RecoveryExpr 0x1449427c8 <col:81> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x1449428a0 <col:111> 'int' 0     |-BinaryOperator 0x144942a18 <line:14:2, col:54> 'int' '='     | |-DeclRefExpr 0x144942910 <col:2> 'int' lvalue Var 0x144928ad0 'length' 'int'     | `-BinaryOperator 0x1449429f8 <col:11, col:54> 'int' '+'     |   |-BinaryOperator 0x1449429a0 <col:11, col:32> 'int' '+'     |   | |-ImplicitCastExpr 0x144942970 <col:11> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x144942930 <col:11> 'int' lvalue Var 0x144928c00 'nego_tokens_length' 'int'     |   | `-ImplicitCastExpr 0x144942988 <col:32> 'int' <LValueToRValue>     |   |   `-DeclRefExpr 0x144942950 <col:32> 'int' lvalue Var 0x144928c98 'pub_key_auth_length' 'int'     |   `-ImplicitCastExpr 0x1449429e0 <col:54> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x1449429c0 <col:54> 'int' lvalue Var 0x144928d30 'auth_info_length' 'int'     |-BinaryOperator 0x144942c08 <line:16:2, col:54> 'int' '='     | |-DeclRefExpr 0x144942a38 <col:2> 'int' lvalue Var 0x144928b68 'ts_request_length' 'int'     | `-CallExpr 0x144942bc8 <col:22, col:54> 'int'     |   |-ImplicitCastExpr 0x144942bb0 <col:22> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x144942b38 <col:22> 'int ()' Function 0x144942a80 'credssp_sizeof_ts_request' 'int ()'     |   `-ImplicitCastExpr 0x144942bf0 <col:48> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x144942b58 <col:48> 'int' lvalue Var 0x144928ad0 'length' 'int'     |-CallExpr 0x145009070 <line:21:2, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x144942fc8 <col:2> 'int ()' Function 0x144942f10 'ber_write_sequence_tag' 'int ()'     | |-RecoveryExpr 0x145009050 <col:25> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x145009000 <col:28> 'int' lvalue Var 0x144928b68 'ts_request_length' 'int'     |-CallExpr 0x145009290 <line:24:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x145009180 <col:2> 'int ()' Function 0x1450090c8 'ber_write_contextual_tag' 'int ()'     | |-RecoveryExpr 0x145009250 <col:27> '<dependent type>' contains-errors lvalue     | |-IntegerLiteral 0x1450091b8 <col:30> 'int' 0     | |-IntegerLiteral 0x1450091d8 <col:33> 'int' 3     | `-RecoveryExpr 0x145009270 <col:36> '<dependent type>' contains-errors lvalue     |-CallExpr 0x145009458 <line:25:2, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1450093b0 <col:2> 'int ()' Function 0x1450092f8 'ber_write_integer' 'int ()'     | |-RecoveryExpr 0x145009438 <col:20> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x1450093e8 <col:23> 'int' 2     |-IfStmt 0x145009e58 <line:28:2, line:36:2>     | |-BinaryOperator 0x1450094e0 <line:28:6, col:27> 'int' '>'     | | |-ImplicitCastExpr 0x1450094c8 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x145009488 <col:6> 'int' lvalue Var 0x144928c00 'nego_tokens_length' 'int'     | | `-IntegerLiteral 0x1450094a8 <col:27> 'int' 0     | `-CompoundStmt 0x145009e38 <line:29:2, line:36:2>     |   |-BinaryOperator 0x145009558 <line:30:3, col:12> 'int' '='     |   | |-DeclRefExpr 0x145009500 <col:3> 'int' lvalue Var 0x144928ad0 'length' 'int'     |   | `-ImplicitCastExpr 0x145009540 <col:12> 'int' <LValueToRValue>     |   |   `-DeclRefExpr 0x145009520 <col:12> 'int' lvalue Var 0x144928c00 'nego_tokens_length' 'int'     |   `-CompoundAssignOperator 0x145009960 <line:32:3, col:153> 'int' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |     |-DeclRefExpr 0x145009578 <col:3> 'int' lvalue Var 0x144928ad0 'length' 'int'     |     `-CallExpr 0x145009920 <col:13, col:153> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x145009598 <col:13> 'int ()' Function 0x1450090c8 'ber_write_contextual_tag' 'int ()'     |       |-RecoveryExpr 0x1450098e0 <col:38> '<dependent type>' contains-errors lvalue     |       |-IntegerLiteral 0x1450095d0 <col:41> 'int' 1     |       |-CallExpr 0x145009830 <col:44, col:146> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x1450095f0 <col:44> 'int ()' Function 0x144942d68 'ber_sizeof_sequence' 'int ()'     |       | `-CallExpr 0x145009808 <col:64, col:145> '<dependent type>' contains-errors     |       |   |-DeclRefExpr 0x145009610 <col:64> 'int ()' Function 0x144942d68 'ber_sizeof_sequence' 'int ()'     |       |   `-CallExpr 0x1450097e0 <col:84, col:144> '<dependent type>' contains-errors     |       |     |-DeclRefExpr 0x145009710 <col:84> 'int ()' Function 0x145009658 'ber_sizeof_sequence_octet_string' 'int ()'     |       |     `-CXXDependentScopeMemberExpr 0x145009798 <col:117, col:136> '<dependent type>' contains-errors lvalue .cbBuffer     |       |       `-CXXDependentScopeMemberExpr 0x145009750 <col:117, col:126> '<dependent type>' contains-errors lvalue ->negoToken     |       |         `-RecoveryExpr 0x145009730 <col:117> '<dependent type>' contains-errors lvalue     |       `-RecoveryExpr 0x145009900 <col:149> '<dependent type>' contains-errors lvalue     |-IfStmt 0x144943758 <line:39:2, line:43:2>     | |-BinaryOperator 0x145009ed0 <line:39:6, col:25> 'int' '>'     | | |-ImplicitCastExpr 0x145009eb8 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x145009e78 <col:6> 'int' lvalue Var 0x144928d30 'auth_info_length' 'int'     | | `-IntegerLiteral 0x145009e98 <col:25> 'int' 0     | `-CompoundStmt 0x144943740 <line:40:2, line:43:2>     |   `-BinaryOperator 0x145009f48 <line:41:3, col:12> 'int' '='     |     |-DeclRefExpr 0x145009ef0 <col:3> 'int' lvalue Var 0x144928ad0 'length' 'int'     |     `-ImplicitCastExpr 0x145009f30 <col:12> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x145009f10 <col:12> 'int' lvalue Var 0x144928d30 'auth_info_length' 'int'     `-IfStmt 0x144943a40 <line:46:2, line:50:2>       |-BinaryOperator 0x1449437d0 <line:46:6, col:28> 'int' '>'       | |-ImplicitCastExpr 0x1449437b8 <col:6> 'int' <LValueToRValue>       | | `-DeclRefExpr 0x144943778 <col:6> 'int' lvalue Var 0x144928c98 'pub_key_auth_length' 'int'       | `-IntegerLiteral 0x144943798 <col:28> 'int' 0       `-CompoundStmt 0x144943a28 <line:47:2, line:50:2>         `-BinaryOperator 0x144943848 <line:48:3, col:12> 'int' '='           |-DeclRefExpr 0x1449437f0 <col:3> 'int' lvalue Var 0x144928ad0 'length' 'int'           `-ImplicitCastExpr 0x144943830 <col:12> 'int' <LValueToRValue>             `-DeclRefExpr 0x144943810 <col:12> 'int' lvalue Var 0x144928c98 'pub_key_auth_length' 'int' ","20653":"`-FunctionDecl 0x147128438  line:1:1 invalid generate_loadvar 'int (int *, int, char *, int *, int *)'   |-ParmVarDecl 0x147128128 <line:2:2, col:11> col:11 invalid cctx 'int *'   |-ParmVarDecl 0x1471281a8 <line:3:2, col:16> col:16 invalid dest 'int'   |-ParmVarDecl 0x147128228 <line:4:2, col:11> col:11 used name 'char *'   |-ParmVarDecl 0x1471282a8 <line:5:2, col:11> col:11 invalid lvar 'int *'   |-ParmVarDecl 0x147128328 <line:6:2, col:11> col:11 invalid type 'int *'   `-CompoundStmt 0x147143710 <line:7:1, line:54:1>     `-SwitchStmt 0x147128540 <line:8:5, line:53:5>       |-ImplicitCastExpr 0x147128528 <line:8:13> '<dependent type>' contains-errors <LValueToRValue>       | `-RecoveryExpr 0x147128508 <col:13> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x147143688 <line:9:5, line:53:5>         |-CallExpr 0x147141820 <line:12:6, col:52> '<dependent type>' contains-errors         | |-DeclRefExpr 0x1471286f0 <col:6> 'int ()' Function 0x147128638 'generate_LOAD' 'int ()'         | |-RecoveryExpr 0x147128710 <col:20> '<dependent type>' contains-errors lvalue         | |-RecoveryExpr 0x147141800 <col:26> '<dependent type>' contains-errors lvalue         | |-IntegerLiteral 0x147128748 <col:39> 'int' 0         | |-DeclRefExpr 0x147128768 <col:42> 'char *' lvalue ParmVar 0x147128228 'name' 'char *'         | `-RecoveryExpr 0x147128788 <col:48> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x147141868 <line:13:6>         |-IfStmt 0x147141e18 <line:15:6, line:18:50> has_else         | |-BinaryOperator 0x147141a98 <line:15:10, col:45> 'int' contains-errors '=='         | | |-CallExpr 0x147141a48 <col:10, col:40> '<dependent type>' contains-errors         | | | |-DeclRefExpr 0x147141968 <col:10> 'int ()' Function 0x1471418b0 'vim_strchr' 'int ()'         | | | |-DeclRefExpr 0x147141988 <col:21> 'char *' lvalue ParmVar 0x147128228 'name' 'char *'         | | | `-RecoveryExpr 0x147141a28 <col:27> '<dependent type>' contains-errors lvalue         | | `-RecoveryExpr 0x147141a78 <col:45> '<dependent type>' contains-errors lvalue         | |-CallExpr 0x147141c68 <line:16:3, col:51> '<dependent type>' contains-errors         | | |-DeclRefExpr 0x147141ab8 <col:3> 'int ()' Function 0x147128638 'generate_LOAD' 'int ()'         | | |-RecoveryExpr 0x147141ad8 <col:17> '<dependent type>' contains-errors lvalue         | | |-RecoveryExpr 0x147141c10 <col:23> '<dependent type>' contains-errors lvalue         | | |-IntegerLiteral 0x147141b10 <col:34> 'int' 0         | | |-BinaryOperator 0x147141c48 <col:37, col:44> 'char *' '+'         | | | |-ImplicitCastExpr 0x147141c30 <col:37> 'char *' <LValueToRValue>         | | | | `-DeclRefExpr 0x147141b30 <col:37> 'char *' lvalue ParmVar 0x147128228 'name' 'char *'         | | | `-IntegerLiteral 0x147141b50 <col:44> 'int' 2         | | `-RecoveryExpr 0x147141ba8 <col:47> '<dependent type>' contains-errors lvalue         | `-CallExpr 0x147141dd0 <line:18:3, col:50> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x147141cb0 <col:3> 'int ()' Function 0x147128638 'generate_LOAD' 'int ()'         |   |-RecoveryExpr 0x147141cd0 <col:17> '<dependent type>' contains-errors lvalue         |   |-RecoveryExpr 0x147141db0 <col:23> '<dependent type>' contains-errors lvalue         |   |-IntegerLiteral 0x147141d08 <col:37> 'int' 0         |   |-DeclRefExpr 0x147141d28 <col:40> 'char *' lvalue ParmVar 0x147128228 'name' 'char *'         |   `-RecoveryExpr 0x147141d48 <col:46> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x147141e48 <line:19:6>         |-CallExpr 0x147142018 <line:21:6, col:54> '<dependent type>' contains-errors         | |-DeclRefExpr 0x147141e68 <col:6> 'int ()' Function 0x147128638 'generate_LOAD' 'int ()'         | |-RecoveryExpr 0x147141e88 <col:20> '<dependent type>' contains-errors lvalue         | |-RecoveryExpr 0x147141fc0 <col:26> '<dependent type>' contains-errors lvalue         | |-IntegerLiteral 0x147141ec0 <col:37> 'int' 0         | |-BinaryOperator 0x147141ff8 <col:40, col:47> 'char *' '+'         | | |-ImplicitCastExpr 0x147141fe0 <col:40> 'char *' <LValueToRValue>         | | | `-DeclRefExpr 0x147141ee0 <col:40> 'char *' lvalue ParmVar 0x147128228 'name' 'char *'         | | `-IntegerLiteral 0x147141f00 <col:47> 'int' 2         | `-RecoveryExpr 0x147141f58 <col:50> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x147142060 <line:22:6>         |-BreakStmt 0x147142178 <line:25:6>         |-BreakStmt 0x147142278 <line:28:6>         |-BreakStmt 0x147142568 <line:32:6>         |-BreakStmt 0x147142610 <line:36:6>         |-BreakStmt 0x1471426d0 <line:39:6>         |-BreakStmt 0x147143278 <line:42:6>         |-IfStmt 0x147143648 <line:44:6, line:48:3> has_else         | |-BinaryOperator 0x147143308 <line:44:10, col:32> 'int' contains-errors '>'         | | |-CXXDependentScopeMemberExpr 0x1471432a0 <col:10, col:16> '<dependent type>' contains-errors lvalue ->lv_from_outer         | | | `-RecoveryExpr 0x147143280 <col:10> '<dependent type>' contains-errors lvalue         | | `-IntegerLiteral 0x1471432e8 <col:32> 'int' 0         | |-CallExpr 0x147143538 <line:45:3, line:46:15> '<dependent type>' contains-errors         | | |-DeclRefExpr 0x147143408 <line:45:3> 'int ()' Function 0x147143350 'generate_LOADOUTER' 'int ()'         | | |-RecoveryExpr 0x147143428 <col:22> '<dependent type>' contains-errors lvalue         | | |-CXXDependentScopeMemberExpr 0x147143468 <col:28, col:34> '<dependent type>' contains-errors lvalue ->lv_idx         | | | `-RecoveryExpr 0x147143448 <col:28> '<dependent type>' contains-errors lvalue         | | |-CXXDependentScopeMemberExpr 0x1471434d0 <col:42, col:48> '<dependent type>' contains-errors lvalue ->lv_from_outer         | | | `-RecoveryExpr 0x1471434b0 <col:42> '<dependent type>' contains-errors lvalue         | | `-RecoveryExpr 0x147143518 <line:46:11> '<dependent type>' contains-errors lvalue         | `-NullStmt 0x147143640 <line:48:3>         |-BreakStmt 0x147143678 <line:49:6>         `-BreakStmt 0x147143680 <line:52:6> ","20314":"`-FunctionDecl 0x144941a98  line:1:12 invalid hva_to_pfn_remapped 'int (struct vm_area_struct *, unsigned long, int *, int, int *, int *)' static   |-ParmVarDecl 0x144928648 <col:32, col:55> col:55 used vma 'struct vm_area_struct *'   |-ParmVarDecl 0x1449286c8 <line:2:11, col:25> col:25 used addr 'unsigned long'   |-ParmVarDecl 0x144928798 <col:31, col:37> col:37 invalid async 'int *'   |-ParmVarDecl 0x144941818 <line:3:11, col:16> col:16 invalid write_fault 'int'   |-ParmVarDecl 0x144941898 <col:29, col:35> col:35 invalid writable 'int *'   |-ParmVarDecl 0x144941918 <line:4:11, col:22> col:22 invalid p_pfn 'int *'   `-CompoundStmt 0x1449431e0 <line:5:1, line:44:1>     |-DeclStmt 0x144941c20 <line:9:2, col:7>     | `-VarDecl 0x144941bb8 <col:2, col:6> col:6 used r 'int'     |-BinaryOperator 0x144941fc0 <line:11:2, col:46> 'int' contains-errors '='     | |-DeclRefExpr 0x144941c38 <col:2> 'int' lvalue Var 0x144941bb8 'r' 'int'     | `-CallExpr 0x144941f80 <col:6, col:46> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x144941db0 <col:6> 'int ()' Function 0x144941cf8 'follow_pte' 'int ()'     |   |-RecoveryExpr 0x144941e08 <col:17, col:22> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x144941dd0 <col:17> 'struct vm_area_struct *' lvalue ParmVar 0x144928648 'vma' 'struct vm_area_struct *'     |   |-DeclRefExpr 0x144941e30 <col:29> 'unsigned long' lvalue ParmVar 0x1449286c8 'addr' 'unsigned long'     |   |-UnaryOperator 0x144941f30 <col:35, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x144941f10 <col:36> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x144941f68 <col:42, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x144941f48 <col:43> '<dependent type>' contains-errors lvalue     |-IfStmt 0x144942598 <line:12:2, line:26:2>     | |-ImplicitCastExpr 0x144942000 <line:12:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x144941fe0 <col:6> 'int' lvalue Var 0x144941bb8 'r' 'int'     | `-CompoundStmt 0x144942570 <col:9, line:26:2>     |   |-IfStmt 0x144942350 <line:18:3, line:19:12>     |   | |-RecoveryExpr 0x144942288 <line:18:7> '<dependent type>' contains-errors lvalue     |   | `-ReturnStmt 0x144942340 <line:19:4, col:12>     |   |   `-UnaryOperator 0x144942328 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |     `-ImplicitCastExpr 0x144942310 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |   |       `-RecoveryExpr 0x1449422f0 <col:12> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x1449423f0 <line:20:3, line:21:11>     |   | |-ImplicitCastExpr 0x144942390 <line:20:7> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x144942370 <col:7> 'int' lvalue Var 0x144941bb8 'r' 'int'     |   | `-ReturnStmt 0x1449423e0 <line:21:4, col:11>     |   |   `-ImplicitCastExpr 0x1449423c8 <col:11> 'int' <LValueToRValue>     |   |     `-DeclRefExpr 0x1449423a8 <col:11> 'int' lvalue Var 0x144941bb8 'r' 'int'     |   `-IfStmt 0x144942550 <line:24:3, line:25:11>     |     |-ImplicitCastExpr 0x1449424f0 <line:24:7> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x1449424d0 <col:7> 'int' lvalue Var 0x144941bb8 'r' 'int'     |     `-ReturnStmt 0x144942540 <line:25:4, col:11>     |       `-ImplicitCastExpr 0x144942528 <col:11> 'int' <LValueToRValue>     |         `-DeclRefExpr 0x144942508 <col:11> 'int' lvalue Var 0x144941bb8 'r' 'int'     |-IfStmt 0x144942778 <line:28:2, line:31:2>     | |-RecoveryExpr 0x1449426d8 <line:28:6, col:37> '_Bool' contains-errors     | `-CompoundStmt 0x144942760 <col:40, line:31:2>     |   `-GotoStmt 0x144942748 <line:30:3, col:8> 'out' 0x1449426f8     |-LabelStmt 0x144943140 <line:40:1, col:4> 'out'     | `-NullStmt 0x144943138 <col:4>     `-ReturnStmt 0x1449431d0 <line:43:2, col:9>       `-IntegerLiteral 0x1449431b0 <col:9> 'int' 0 ","20396":"`-FunctionDecl 0x14200de88  line:1:6 invalid pb_decode_fixed32 'int (int *, void *)'   |-ParmVarDecl 0x14200dd28 <col:24, col:38> col:38 invalid stream 'int *'   |-ParmVarDecl 0x14200dda8 <col:46, col:52> col:52 dest 'void *'   `-CompoundStmt 0x14200e250 <line:2:1, line:13:1>     `-ReturnStmt 0x14200e240 <line:12:5, col:12>       `-RecoveryExpr 0x14200e220 <col:12> '<dependent type>' contains-errors lvalue ","20587":"`-FunctionDecl 0x14e00df18  line:1:13 invalid update_read_fast_glyph_order 'int (int *, const int *, int *)' static   |-ParmVarDecl 0x14e00dd28 <col:42, col:51> col:51 invalid s 'int *'   |-ParmVarDecl 0x14e00dda8 <col:54, col:72> col:72 invalid orderInfo 'const int *'   |-ParmVarDecl 0x14e00de28 <line:2:42, col:60> col:60 invalid fastGlyph 'int *'   `-CompoundStmt 0x14e029c80 <line:3:1, line:74:1>     |-CallExpr 0x14e00e278 <line:5:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14e00e1d0 <col:2> 'int ()' Function 0x14e00e118 'ORDER_FIELD_BYTE' 'int ()'     | |-IntegerLiteral 0x14e00e1f0 <col:19> 'int' 1     | `-CXXDependentScopeMemberExpr 0x14e00e230 <col:22, col:33> '<dependent type>' contains-errors lvalue ->cacheId     |   `-RecoveryExpr 0x14e00e210 <col:22> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14e0274b0 <line:6:2, col:63> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14e00e388 <col:2> 'int ()' Function 0x14e00e2d0 'ORDER_FIELD_2BYTE' 'int ()'     | |-IntegerLiteral 0x14e00e3a8 <col:20> 'int' 2     | |-CXXDependentScopeMemberExpr 0x14e027400 <col:23, col:34> '<dependent type>' contains-errors lvalue ->ulCharInc     | | `-RecoveryExpr 0x14e00e3c8 <col:23> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x14e027468 <col:45, col:56> '<dependent type>' contains-errors lvalue ->flAccel     |   `-RecoveryExpr 0x14e027448 <col:45> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14e0276c8 <line:7:2, col:58> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14e0275c8 <col:2> 'int ()' Function 0x14e027510 'ORDER_FIELD_COLOR' 'int ()'     | |-RecoveryExpr 0x14e0275e8 <col:20> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x14e027608 <col:31> '<dependent type>' contains-errors lvalue     | |-IntegerLiteral 0x14e027628 <col:34> 'int' 3     | `-UnaryOperator 0x14e0276b0 <col:37, col:49> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x14e027668 <col:38, col:49> '<dependent type>' contains-errors lvalue ->backColor     |     `-RecoveryExpr 0x14e027648 <col:38> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14e027808 <line:8:2, col:58> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14e027708 <col:2> 'int ()' Function 0x14e027510 'ORDER_FIELD_COLOR' 'int ()'     | |-RecoveryExpr 0x14e027728 <col:20> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x14e027748 <col:31> '<dependent type>' contains-errors lvalue     | |-IntegerLiteral 0x14e027768 <col:34> 'int' 4     | `-UnaryOperator 0x14e0277f0 <col:37, col:49> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x14e0277a8 <col:38, col:49> '<dependent type>' contains-errors lvalue ->foreColor     |     `-RecoveryExpr 0x14e027788 <col:38> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14e0279d0 <line:9:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14e027928 <col:2> 'int ()' Function 0x14e027870 'ORDER_FIELD_COORD' 'int ()'     | |-IntegerLiteral 0x14e027948 <col:20> 'int' 5     | `-CXXDependentScopeMemberExpr 0x14e027988 <col:23, col:34> '<dependent type>' contains-errors lvalue ->bkLeft     |   `-RecoveryExpr 0x14e027968 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14e027aa8 <line:10:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14e027a00 <col:2> 'int ()' Function 0x14e027870 'ORDER_FIELD_COORD' 'int ()'     | |-IntegerLiteral 0x14e027a20 <col:20> 'int' 6     | `-CXXDependentScopeMemberExpr 0x14e027a60 <col:23, col:34> '<dependent type>' contains-errors lvalue ->bkTop     |   `-RecoveryExpr 0x14e027a40 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14e027b80 <line:11:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14e027ad8 <col:2> 'int ()' Function 0x14e027870 'ORDER_FIELD_COORD' 'int ()'     | |-IntegerLiteral 0x14e027af8 <col:20> 'int' 7     | `-CXXDependentScopeMemberExpr 0x14e027b38 <col:23, col:34> '<dependent type>' contains-errors lvalue ->bkRight     |   `-RecoveryExpr 0x14e027b18 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14e027c58 <line:12:2, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14e027bb0 <col:2> 'int ()' Function 0x14e027870 'ORDER_FIELD_COORD' 'int ()'     | |-IntegerLiteral 0x14e027bd0 <col:20> 'int' 8     | `-CXXDependentScopeMemberExpr 0x14e027c10 <col:23, col:34> '<dependent type>' contains-errors lvalue ->bkBottom     |   `-RecoveryExpr 0x14e027bf0 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14e027d30 <line:13:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14e027c88 <col:2> 'int ()' Function 0x14e027870 'ORDER_FIELD_COORD' 'int ()'     | |-IntegerLiteral 0x14e027ca8 <col:20> 'int' 9     | `-CXXDependentScopeMemberExpr 0x14e027ce8 <col:23, col:34> '<dependent type>' contains-errors lvalue ->opLeft     |   `-RecoveryExpr 0x14e027cc8 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14e027e08 <line:14:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14e027d60 <col:2> 'int ()' Function 0x14e027870 'ORDER_FIELD_COORD' 'int ()'     | |-IntegerLiteral 0x14e027d80 <col:20> 'int' 10     | `-CXXDependentScopeMemberExpr 0x14e027dc0 <col:24, col:35> '<dependent type>' contains-errors lvalue ->opTop     |   `-RecoveryExpr 0x14e027da0 <col:24> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14e027ee0 <line:15:2, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14e027e38 <col:2> 'int ()' Function 0x14e027870 'ORDER_FIELD_COORD' 'int ()'     | |-IntegerLiteral 0x14e027e58 <col:20> 'int' 11     | `-CXXDependentScopeMemberExpr 0x14e027e98 <col:24, col:35> '<dependent type>' contains-errors lvalue ->opRight     |   `-RecoveryExpr 0x14e027e78 <col:24> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14e027fb8 <line:16:2, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14e027f10 <col:2> 'int ()' Function 0x14e027870 'ORDER_FIELD_COORD' 'int ()'     | |-IntegerLiteral 0x14e027f30 <col:20> 'int' 12     | `-CXXDependentScopeMemberExpr 0x14e027f70 <col:24, col:35> '<dependent type>' contains-errors lvalue ->opBottom     |   `-RecoveryExpr 0x14e027f50 <col:24> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14e028090 <line:17:2, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14e027fe8 <col:2> 'int ()' Function 0x14e027870 'ORDER_FIELD_COORD' 'int ()'     | |-IntegerLiteral 0x14e028008 <col:20> 'int' 13     | `-CXXDependentScopeMemberExpr 0x14e028048 <col:24, col:35> '<dependent type>' contains-errors lvalue ->x     |   `-RecoveryExpr 0x14e028028 <col:24> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14e028168 <line:18:2, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14e0280c0 <col:2> 'int ()' Function 0x14e027870 'ORDER_FIELD_COORD' 'int ()'     | |-IntegerLiteral 0x14e0280e0 <col:20> 'int' 14     | `-CXXDependentScopeMemberExpr 0x14e028120 <col:24, col:35> '<dependent type>' contains-errors lvalue ->y     |   `-RecoveryExpr 0x14e028100 <col:24> '<dependent type>' contains-errors lvalue     `-IfStmt 0x14e029c60 <line:20:2, line:71:2>       |-BinaryOperator 0x14e028258 <line:20:6, col:30> '<dependent type>' contains-errors '&'       | |-CXXDependentScopeMemberExpr 0x14e0281b8 <col:6, col:17> '<dependent type>' contains-errors lvalue ->fieldFlags       | | `-RecoveryExpr 0x14e028198 <col:6> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x14e028238 <col:30> 'int ()' Function 0x14e00e118 'ORDER_FIELD_BYTE' 'int ()'       `-CompoundStmt 0x14e029c18 <line:21:2, line:71:2>         |-IfStmt 0x14e028848 <line:22:3, line:23:11>         | |-BinaryOperator 0x14e0283e0 <line:22:7, col:38> 'int' contains-errors '<'         | | |-CallExpr 0x14e028398 <col:7, col:34> '<dependent type>' contains-errors         | | | |-DeclRefExpr 0x14e028358 <col:7> 'int ()' Function 0x14e0282a0 'Stream_GetRemainingLength' 'int ()'         | | | `-RecoveryExpr 0x14e028378 <col:33> '<dependent type>' contains-errors lvalue         | | `-IntegerLiteral 0x14e0283c0 <col:38> 'int' 1         | `-ReturnStmt 0x14e028838 <line:23:4, col:11>         |   `-RecoveryExpr 0x14e028818 <col:11> '<dependent type>' contains-errors lvalue         |-CallExpr 0x14e0289f0 <line:25:3, col:41> '<dependent type>' contains-errors         | |-DeclRefExpr 0x14e028948 <col:3> 'int ()' Function 0x14e028890 'Stream_Read_UINT8' 'int ()'         | |-RecoveryExpr 0x14e028968 <col:21> '<dependent type>' contains-errors lvalue         | `-CXXDependentScopeMemberExpr 0x14e0289a8 <col:24, col:35> '<dependent type>' contains-errors lvalue ->cbData         |   `-RecoveryExpr 0x14e028988 <col:24> '<dependent type>' contains-errors lvalue         |-IfStmt 0x14e028b58 <line:27:3, line:28:11>         | |-BinaryOperator 0x14e028af0 <line:27:7, col:49> 'int' contains-errors '<'         | | |-CallExpr 0x14e028a60 <col:7, col:34> '<dependent type>' contains-errors         | | | |-DeclRefExpr 0x14e028a20 <col:7> 'int ()' Function 0x14e0282a0 'Stream_GetRemainingLength' 'int ()'         | | | `-RecoveryExpr 0x14e028a40 <col:33> '<dependent type>' contains-errors lvalue         | | `-CXXDependentScopeMemberExpr 0x14e028aa8 <col:38, col:49> '<dependent type>' contains-errors lvalue ->cbData         | |   `-RecoveryExpr 0x14e028a88 <col:38> '<dependent type>' contains-errors lvalue         | `-ReturnStmt 0x14e028b48 <line:28:4, col:11>         |   `-RecoveryExpr 0x14e028b28 <col:11> '<dependent type>' contains-errors lvalue         |-CallExpr 0x14e028e90 <line:30:3, col:67> '<dependent type>' contains-errors         | |-DeclRefExpr 0x14e028c58 <col:3> 'int ()' Function 0x14e028ba0 'CopyMemory' 'int ()'         | |-CXXDependentScopeMemberExpr 0x14e028c98 <col:14, col:25> '<dependent type>' contains-errors lvalue ->data         | | `-RecoveryExpr 0x14e028c78 <col:14> '<dependent type>' contains-errors lvalue         | |-CallExpr 0x14e028e00 <col:31, col:47> '<dependent type>' contains-errors         | | |-DeclRefExpr 0x14e028dc0 <col:31> 'int ()' Function 0x14e028d08 'Stream_Pointer' 'int ()'         | | `-RecoveryExpr 0x14e028de0 <col:46> '<dependent type>' contains-errors lvalue         | `-CXXDependentScopeMemberExpr 0x14e028e48 <col:50, col:61> '<dependent type>' contains-errors lvalue ->cbData         |   `-RecoveryExpr 0x14e028e28 <col:50> '<dependent type>' contains-errors lvalue         |-IfStmt 0x14e029000 <line:31:3, line:32:11>         | |-BinaryOperator 0x14e028f98 <line:31:7, col:49> 'int' contains-errors '<'         | | |-CallExpr 0x14e028f08 <col:7, col:34> '<dependent type>' contains-errors         | | | |-DeclRefExpr 0x14e028ec8 <col:7> 'int ()' Function 0x14e0282a0 'Stream_GetRemainingLength' 'int ()'         | | | `-RecoveryExpr 0x14e028ee8 <col:33> '<dependent type>' contains-errors lvalue         | | `-CXXDependentScopeMemberExpr 0x14e028f50 <col:38, col:49> '<dependent type>' contains-errors lvalue ->cbData         | |   `-RecoveryExpr 0x14e028f30 <col:38> '<dependent type>' contains-errors lvalue         | `-ReturnStmt 0x14e028ff0 <line:32:4, col:11>         |   `-RecoveryExpr 0x14e028fd0 <col:11> '<dependent type>' contains-errors lvalue         |-IfStmt 0x14e0291f0 <line:34:3, line:35:11>         | |-UnaryOperator 0x14e029190 <line:34:7, col:28> '<dependent type>' contains-errors prefix '!' cannot overflow         | | `-CallExpr 0x14e029160 <col:8, col:28> '<dependent type>' contains-errors         | |   |-DeclRefExpr 0x14e029100 <col:8> 'int ()' Function 0x14e029048 'Stream_SafeSeek' 'int ()'         | |   |-RecoveryExpr 0x14e029120 <col:24> '<dependent type>' contains-errors lvalue         | |   `-IntegerLiteral 0x14e029140 <col:27> 'int' 1         | `-ReturnStmt 0x14e0291e0 <line:35:4, col:11>         |   `-RecoveryExpr 0x14e0291c0 <col:11> '<dependent type>' contains-errors lvalue         `-IfStmt 0x14e029bf8 <line:37:3, line:70:3>           |-BinaryOperator 0x14e029298 <line:37:7, col:27> 'int' contains-errors '>'           | |-CXXDependentScopeMemberExpr 0x14e029230 <col:7, col:18> '<dependent type>' contains-errors lvalue ->cbData           | | `-RecoveryExpr 0x14e029210 <col:7> '<dependent type>' contains-errors lvalue           | `-IntegerLiteral 0x14e029278 <col:27> 'int' 1           `-CompoundStmt 0x14e029be0 <line:38:3, line:70:3>             `-IfStmt 0x14e029a38 <line:57:4, line:68:4>               |-RecoveryExpr 0x14e0298c8 <line:57:8, col:17> '_Bool' contains-errors               `-CompoundStmt 0x14e029a28 <line:58:4, line:68:4> ","20929":"`-FunctionDecl 0x14c02a948  line:1:12 get_importer 'int (struct transport *, struct child_process *)' static   |-ParmVarDecl 0x14c00e248 <col:25, col:43> col:43 used transport 'struct transport *'   |-ParmVarDecl 0x14c02a828 <col:54, col:76> col:76 used fastimport 'struct child_process *'   `-CompoundStmt 0x14b922b40 <line:2:1, line:19:1>     |-DeclStmt 0x14c02ad50 <line:3:2, col:54>     | `-VarDecl 0x14c02aad8 <col:2, col:53> col:24 used helper 'struct child_process *' cinit     |   `-ImplicitCastExpr 0x14c02ad38 <col:33, col:53> 'struct child_process *' <IntegralToPointer>     |     `-CallExpr 0x14c02acf8 <col:33, col:53> 'int'     |       |-ImplicitCastExpr 0x14c02ace0 <col:33> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14c02ac70 <col:33> 'int ()' Function 0x14c02abb8 'get_helper' 'int ()'     |       `-ImplicitCastExpr 0x14c02ad20 <col:44> 'struct transport *' <LValueToRValue>     |         `-DeclRefExpr 0x14c02ac90 <col:44> 'struct transport *' lvalue ParmVar 0x14c00e248 'transport' 'struct transport *'     |-DeclStmt 0x14c02afb8 <line:4:2, col:44>     | |-RecordDecl 0x14c02ad68 <col:2, col:9> col:9 struct helper_data     | `-VarDecl 0x14c02aed8 <col:2, col:40> col:22 used data 'struct helper_data *' cinit     |   `-RecoveryExpr 0x14c02af78 <col:29, col:40> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14c02af40 <col:29> 'struct transport *' lvalue ParmVar 0x14c00e248 'transport' 'struct transport *'     |-DeclStmt 0x14c02b0e8 <line:5:2, col:23>     | |-VarDecl 0x14c02afe8 <col:2, col:6> col:6 used cat_blob_fd 'int'     | `-VarDecl 0x14c02b068 <col:2, col:19> col:19 used code 'int'     |-CallExpr 0x14c02b238 <line:6:2, col:31> 'int'     | |-ImplicitCastExpr 0x14c02b220 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14c02b1e0 <col:2> 'int ()' Function 0x14c02b128 'child_process_init' 'int ()'     | `-ImplicitCastExpr 0x14c02b260 <col:21> 'struct child_process *' <LValueToRValue>     |   `-DeclRefExpr 0x14c02b200 <col:21> 'struct child_process *' lvalue ParmVar 0x14c02a828 'fastimport' 'struct child_process *'     |-BinaryOperator 0x14c02b338 <line:7:2, col:27> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14c02b2b0 <col:2, col:14> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14c02b278 <col:2> 'struct child_process *' lvalue ParmVar 0x14c02a828 'fastimport' 'struct child_process *'     | `-RecoveryExpr 0x14c02b310 <col:19, col:27> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14c02b2d8 <col:19> 'struct child_process *' lvalue Var 0x14c02aad8 'helper' 'struct child_process *'     |-CallExpr 0x14c02b530 <line:8:2, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c02b438 <col:2> 'int ()' Function 0x14c02b380 'argv_array_push' 'int ()'     | |-UnaryOperator 0x14c02b4b8 <col:18, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x14c02b490 <col:19, col:31> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14c02b458 <col:19> 'struct child_process *' lvalue ParmVar 0x14c02a828 'fastimport' 'struct child_process *'     | `-StringLiteral 0x14c02b510 <col:37> 'char[4]' lvalue \"STR\"     |-IfStmt 0x14b922880 <line:11:2, line:14:2>     | |-RecoveryExpr 0x14c02b668 <line:11:6, col:12> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14c02b630 <col:6> 'struct helper_data *' contains-errors lvalue Var 0x14c02aed8 'data' 'struct helper_data *'     | `-CompoundStmt 0x14b922860 <col:25, line:14:2>     |   |-BinaryOperator 0x14b922650 <line:12:3, col:32> 'int' contains-errors '='     |   | |-DeclRefExpr 0x14c02b690 <col:3> 'int' lvalue Var 0x14c02afe8 'cat_blob_fd' 'int'     |   | `-CallExpr 0x14b922628 <col:17, col:32> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x14c02b790 <col:17> 'int ()' Function 0x14c02b6d8 'xdup' 'int ()'     |   |   `-RecoveryExpr 0x14b922600 <col:22, col:30> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x14c02b7b0 <col:22> 'struct child_process *' lvalue Var 0x14c02aad8 'helper' 'struct child_process *'     |   `-CallExpr 0x14b922828 <line:13:3, col:57> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14b922750 <col:3> 'int ()' Function 0x14b922698 'argv_array_pushf' 'int ()'     |     |-UnaryOperator 0x14b9227d0 <col:20, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | `-RecoveryExpr 0x14b9227a8 <col:21, col:33> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x14b922770 <col:21> 'struct child_process *' lvalue ParmVar 0x14c02a828 'fastimport' 'struct child_process *'     |     |-StringLiteral 0x14b9227e8 <col:39> 'char[4]' lvalue \"STR\"     |     `-DeclRefExpr 0x14b922808 <col:46> 'int' lvalue Var 0x14c02afe8 'cat_blob_fd' 'int'     |-BinaryOperator 0x14b922920 <line:15:2, col:24> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14b9228d8 <col:2, col:14> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14b9228a0 <col:2> 'struct child_process *' lvalue ParmVar 0x14c02a828 'fastimport' 'struct child_process *'     | `-IntegerLiteral 0x14b922900 <col:24> 'int' 1     |-BinaryOperator 0x14b922ad8 <line:17:2, col:33> 'int' '='     | |-DeclRefExpr 0x14b922940 <col:2> 'int' lvalue Var 0x14c02b068 'code' 'int'     | `-CallExpr 0x14b922a98 <col:9, col:33> 'int'     |   |-ImplicitCastExpr 0x14b922a80 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14b922a40 <col:9> 'int ()' Function 0x14b922988 'start_command' 'int ()'     |   `-ImplicitCastExpr 0x14b922ac0 <col:23> 'struct child_process *' <LValueToRValue>     |     `-DeclRefExpr 0x14b922a60 <col:23> 'struct child_process *' lvalue ParmVar 0x14c02a828 'fastimport' 'struct child_process *'     `-ReturnStmt 0x14b922b30 <line:18:2, col:9>       `-ImplicitCastExpr 0x14b922b18 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x14b922af8 <col:9> 'int' lvalue Var 0x14c02b068 'code' 'int' ","20470":"`-FunctionDecl 0x15280ddf8  line:1:12 invalid lua_ap_usleep 'int (int *)' static   |-ParmVarDecl 0x15280dd28 <col:26, col:37> col:37 invalid L 'int *'   `-CompoundStmt 0x15280e2d8 <line:2:1, line:8:1>     |-CallExpr 0x15280e0d0 <line:4:5, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15280e000 <col:5> 'int ()' Function 0x15280df48 'luaL_checktype' 'int ()'     | |-RecoveryExpr 0x15280e020 <col:20> '<dependent type>' contains-errors lvalue     | |-IntegerLiteral 0x15280e040 <col:23> 'int' 1     | `-RecoveryExpr 0x15280e0b0 <col:26> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15280e280 <line:6:5, col:19> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15280e200 <col:5> 'int ()' Function 0x15280e148 'apr_sleep' 'int ()'     | `-RecoveryExpr 0x15280e260 <col:15> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x15280e2c8 <line:7:5, col:12>       `-IntegerLiteral 0x15280e2a8 <col:12> 'int' 0 ","21159":"`-FunctionDecl 0x130008978  col:3 implicit used sprintf 'int (char *, const char *, ...)' extern   |-ParmVarDecl 0x130008a78 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x130008ae0 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x130008a20 <<invalid sloc>> Implicit 906   `-FormatAttr 0x130008b58 <col:3> Implicit printf 2 3 ","20814":"`-FunctionDecl 0x152928198  line:1:1 test_bson_copy 'int (void)'   `-CompoundStmt 0x152941058 <line:2:1, line:12:1>     |-CallExpr 0x152928480 <line:6:4, col:17> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1529283d0 <col:4> 'int ()' Function 0x152928318 'bson_init' 'int ()'     | `-UnaryOperator 0x152928468 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x152928448 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x152940a78 <line:7:4, col:56> '<dependent type>' contains-errors     | |-DeclRefExpr 0x152928588 <col:4> 'int ()' Function 0x1529284d0 'BSON_ASSERT' 'int ()'     | `-CallExpr 0x152940a38 <col:17, col:55> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x152928688 <col:17> 'int ()' Function 0x1529285d0 'bson_append_int32' 'int ()'     |   |-UnaryOperator 0x152940a20 <col:36, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x152940a00 <col:37> '<dependent type>' contains-errors lvalue     |   |-StringLiteral 0x152928720 <col:40> 'char[4]' lvalue \"STR\"     |   |-UnaryOperator 0x152928760 <col:47, col:48> 'int' prefix '-'     |   | `-IntegerLiteral 0x152928740 <col:48> 'int' 1     |   `-IntegerLiteral 0x152928778 <col:51> 'int' 1234     |-CallExpr 0x152940dc8 <line:9:4, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x152940cd8 <col:4> 'int ()' Function 0x152940c20 'BSON_ASSERT_BSON_EQUAL' 'int ()'     | |-UnaryOperator 0x152940d90 <col:28, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x152940d70 <col:29> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x152940da8 <col:32> '<dependent type>' contains-errors lvalue     |-CallExpr 0x152940f58 <line:10:4, col:19> '<dependent type>' contains-errors     | |-DeclRefExpr 0x152940ed8 <col:4> 'int ()' Function 0x152940e20 'bson_destroy' 'int ()'     | `-RecoveryExpr 0x152940f38 <col:18> '<dependent type>' contains-errors lvalue     `-CallExpr 0x152941030 <line:11:4, col:20> '<dependent type>' contains-errors       |-DeclRefExpr 0x152940f80 <col:4> 'int ()' Function 0x152940e20 'bson_destroy' 'int ()'       `-UnaryOperator 0x152941018 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x152940ff8 <col:19> '<dependent type>' contains-errors lvalue ","21049":"`-FunctionDecl 0x12280e358  line:1:12 hso_get_config_data 'int (struct usb_interface *)' static   |-ParmVarDecl 0x12280e248 <col:32, col:54> col:54 used interface 'struct usb_interface *'   `-CompoundStmt 0x12282a320 <line:2:1, line:66:1>     |-DeclStmt 0x122826a48 <line:3:2, col:60>     | |-RecordDecl 0x122826650 <col:2, col:9> col:9 struct usb_device     | `-VarDecl 0x1228267b8 <col:2, col:59> col:21 used usbdev 'struct usb_device *' cinit     |   `-ImplicitCastExpr 0x122826a18 <col:30, col:59> 'struct usb_device *' <IntegralToPointer>     |     `-CallExpr 0x1228269d8 <col:30, col:59> 'int'     |       |-ImplicitCastExpr 0x1228269c0 <col:30> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x122826950 <col:30> 'int ()' Function 0x122826898 'interface_to_usbdev' 'int ()'     |       `-ImplicitCastExpr 0x122826a00 <col:50> 'struct usb_interface *' <LValueToRValue>     |         `-DeclRefExpr 0x122826970 <col:50> 'struct usb_interface *' lvalue ParmVar 0x12280e248 'interface' 'struct usb_interface *'     |-IfStmt 0x122826d20 <line:8:2, line:9:11>     | |-UnaryOperator 0x122826c60 <line:8:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x122826c48 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x122826c28 <col:7> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x122826d10 <line:9:3, col:11>     |   `-UnaryOperator 0x122826cf8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x122826ce0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x122826cc0 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x122827550 <line:10:2, line:15:2>     | |-BinaryOperator 0x1228272e0 <line:10:6, line:12:33> 'int' contains-errors '!='     | | |-CallExpr 0x122827278 <line:10:6, line:12:28> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x122826e20 <line:10:6> 'int ()' Function 0x122826d68 'usb_control_msg' 'int ()'     | | | |-DeclRefExpr 0x122826e40 <col:22> 'struct usb_device *' lvalue Var 0x1228267b8 'usbdev' 'struct usb_device *'     | | | |-CallExpr 0x1228271f0 <col:30, col:55> 'int'     | | | | |-ImplicitCastExpr 0x1228271d8 <col:30> 'int (*)()' <FunctionToPointerDecay>     | | | | | `-DeclRefExpr 0x122826f40 <col:30> 'int ()' Function 0x122826e88 'usb_rcvctrlpipe' 'int ()'     | | | | |-ImplicitCastExpr 0x122827220 <col:46> 'struct usb_device *' <LValueToRValue>     | | | | | `-DeclRefExpr 0x122826f60 <col:46> 'struct usb_device *' lvalue Var 0x1228267b8 'usbdev' 'struct usb_device *'     | | | | `-IntegerLiteral 0x122826f80 <col:54> 'int' 0     | | | |-IntegerLiteral 0x122827000 <line:11:8> 'int' 134     | | | |-IntegerLiteral 0x122827020 <col:14> 'int' 192     | | | |-IntegerLiteral 0x122827040 <col:20> 'int' 0     | | | |-IntegerLiteral 0x122827060 <col:23> 'int' 0     | | | |-RecoveryExpr 0x122827238 <col:26> '<dependent type>' contains-errors lvalue     | | | |-IntegerLiteral 0x122827098 <col:39> 'int' 17     | | | `-RecoveryExpr 0x122827258 <line:12:8> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x122827138 <col:33> 'int' 17     | `-CompoundStmt 0x122827530 <col:39, line:15:2>     |   |-CallExpr 0x122827460 <line:13:3, col:20> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1228273e0 <col:3> 'int ()' Function 0x122827328 'kfree' 'int ()'     |   | `-RecoveryExpr 0x122827440 <col:9> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x122827520 <line:14:3, col:11>     |     `-UnaryOperator 0x122827508 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x1228274f0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x1228274d0 <col:11> '<dependent type>' contains-errors lvalue     `-SwitchStmt 0x1228275c0 <line:17:2, line:56:2>       |-RecoveryExpr 0x1228275a0 <line:17:10, col:28> 'int' contains-errors       `-CompoundStmt 0x12282a1a8 <col:31, line:56:2>         |-CaseStmt 0x122829c38 <line:18:2, <invalid sloc>>         | |-ConstantExpr 0x122829c20 <col:7> 'int'         | | `-IntegerLiteral 0x122829c00 <col:7> 'int' 0         | `-NullStmt 0x122829c80 <<invalid sloc>>         |-BreakStmt 0x122829c88 <line:20:3>         |-CaseStmt 0x122829cc8 <line:21:2, <invalid sloc>>         | |-ConstantExpr 0x122829cb0 <col:7> 'int'         | | `-IntegerLiteral 0x122829c90 <col:7> 'int' 1         | `-NullStmt 0x122829cf0 <<invalid sloc>>         |-BreakStmt 0x122829cf8 <line:23:3>         |-CaseStmt 0x122829d38 <line:24:2, <invalid sloc>>         | |-ConstantExpr 0x122829d20 <col:7> 'int'         | | `-IntegerLiteral 0x122829d00 <col:7> 'int' 2         | `-NullStmt 0x122829d60 <<invalid sloc>>         |-BreakStmt 0x122829d68 <line:26:3>         |-CaseStmt 0x122829da8 <line:27:2, <invalid sloc>>         | |-ConstantExpr 0x122829d90 <col:7> 'int'         | | `-IntegerLiteral 0x122829d70 <col:7> 'int' 3         | `-NullStmt 0x122829dd0 <<invalid sloc>>         |-BreakStmt 0x122829dd8 <line:29:3>         |-CaseStmt 0x122829e18 <line:30:2, <invalid sloc>>         | |-ConstantExpr 0x122829e00 <col:7> 'int'         | | `-IntegerLiteral 0x122829de0 <col:7> 'int' 4         | `-NullStmt 0x122829e40 <<invalid sloc>>         |-BreakStmt 0x122829e48 <line:32:3>         |-CaseStmt 0x122829e88 <line:33:2, <invalid sloc>>         | |-ConstantExpr 0x122829e70 <col:7> 'int'         | | `-IntegerLiteral 0x122829e50 <col:7> 'int' 5         | `-NullStmt 0x122829eb0 <<invalid sloc>>         |-BreakStmt 0x122829eb8 <line:35:3>         |-CaseStmt 0x122829ef8 <line:36:2, <invalid sloc>>         | |-ConstantExpr 0x122829ee0 <col:7> 'int'         | | `-IntegerLiteral 0x122829ec0 <col:7> 'int' 6         | `-NullStmt 0x122829f20 <<invalid sloc>>         |-BreakStmt 0x122829f28 <line:38:3>         |-CaseStmt 0x122829f68 <line:39:2, <invalid sloc>>         | |-ConstantExpr 0x122829f50 <col:7> 'int'         | | `-IntegerLiteral 0x122829f30 <col:7> 'int' 7         | `-NullStmt 0x122829f90 <<invalid sloc>>         |-BreakStmt 0x122829f98 <line:41:3>         |-CaseStmt 0x122829fd8 <line:42:2, <invalid sloc>>         | |-ConstantExpr 0x122829fc0 <col:7> 'int'         | | `-IntegerLiteral 0x122829fa0 <col:7> 'int' 8         | `-NullStmt 0x12282a000 <<invalid sloc>>         |-BreakStmt 0x12282a008 <line:44:3>         |-CaseStmt 0x12282a048 <line:45:2, <invalid sloc>>         | |-ConstantExpr 0x12282a030 <col:7> 'int'         | | `-IntegerLiteral 0x12282a010 <col:7> 'int' 9         | `-NullStmt 0x12282a070 <<invalid sloc>>         |-BreakStmt 0x12282a078 <line:47:3>         |-CaseStmt 0x12282a0b8 <line:48:2, <invalid sloc>>         | |-ConstantExpr 0x12282a0a0 <col:7> 'int'         | | `-IntegerLiteral 0x12282a080 <col:7> 'int' 10         | `-NullStmt 0x12282a0e0 <<invalid sloc>>         |-BreakStmt 0x12282a0e8 <line:50:3>         |-CaseStmt 0x12282a128 <line:51:2, <invalid sloc>>         | |-ConstantExpr 0x12282a110 <col:7> 'int'         | | `-IntegerLiteral 0x12282a0f0 <col:7> 'int' 11         | `-NullStmt 0x12282a150 <<invalid sloc>>         |-BreakStmt 0x12282a158 <line:53:3>         `-DefaultStmt 0x12282a188 <line:54:2, col:9>           `-NullStmt 0x12282a180 <col:9> ","20545":"`-FunctionDecl 0x14a0266b8  line:1:1 lyd_insert_sibling 'int (struct lyd_node **, struct lyd_node *)'   |-ParmVarDecl 0x14a00e2a8 <col:20, col:38> col:38 used sibling 'struct lyd_node **'   |-ParmVarDecl 0x14a00e398 <col:47, col:64> col:64 used node 'struct lyd_node *'   `-CompoundStmt 0x14a026e50 <line:2:1, line:10:1>     |-IfStmt 0x14a0268f0 <line:3:5, line:6:5>     | |-BinaryOperator 0x14a026858 <line:3:9, col:22> 'int' '||'     | | |-UnaryOperator 0x14a0267f0 <col:9, col:10> 'int' prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x14a0267d8 <col:10> 'struct lyd_node **' <LValueToRValue>     | | |   `-DeclRefExpr 0x14a0267b8 <col:10> 'struct lyd_node **' lvalue ParmVar 0x14a00e2a8 'sibling' 'struct lyd_node **'     | | `-UnaryOperator 0x14a026840 <col:21, col:22> 'int' prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x14a026828 <col:22> 'struct lyd_node *' <LValueToRValue>     | |     `-DeclRefExpr 0x14a026808 <col:22> 'struct lyd_node *' lvalue ParmVar 0x14a00e398 'node' 'struct lyd_node *'     | `-CompoundStmt 0x14a0268d8 <col:28, line:6:5>     |   `-ReturnStmt 0x14a0268c8 <line:5:9, col:16>     |     `-RecoveryExpr 0x14a0268a8 <col:16> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14a026e40 <line:8:5, col:86>       `-CallExpr 0x14a026e00 <col:12, col:86> '<dependent type>' contains-errors         |-DeclRefExpr 0x14a026a20 <col:12> 'int ()' Function 0x14a026968 'lyd_insert_common' 'int ()'         |-ConditionalOperator 0x14a026dd0 <col:30, col:64> '<dependent type>' contains-errors         | |-ParenExpr 0x14a026d18 <col:30, col:39> 'struct lyd_node *' lvalue         | | `-UnaryOperator 0x14a026d00 <col:31, col:32> 'struct lyd_node *' lvalue prefix '*' cannot overflow         | |   `-ImplicitCastExpr 0x14a026ce8 <col:32> 'struct lyd_node **' <LValueToRValue>         | |     `-DeclRefExpr 0x14a026a40 <col:32> 'struct lyd_node **' lvalue ParmVar 0x14a00e2a8 'sibling' 'struct lyd_node **'         | |-RecoveryExpr 0x14a026d88 <col:43, col:55> '<dependent type>' contains-errors lvalue         | | `-ParenExpr 0x14a026d68 <col:43, col:52> 'struct lyd_node *' lvalue         | |   `-UnaryOperator 0x14a026d50 <col:44, col:45> 'struct lyd_node *' lvalue prefix '*' cannot overflow         | |     `-ImplicitCastExpr 0x14a026d38 <col:45> 'struct lyd_node **' <LValueToRValue>         | |       `-DeclRefExpr 0x14a026ab0 <col:45> 'struct lyd_node **' lvalue ParmVar 0x14a00e2a8 'sibling' 'struct lyd_node **'         | `-RecoveryExpr 0x14a026db0 <col:64> '<dependent type>' contains-errors lvalue         |-DeclRefExpr 0x14a026ba8 <col:70> 'struct lyd_node **' lvalue ParmVar 0x14a00e2a8 'sibling' 'struct lyd_node **'         |-DeclRefExpr 0x14a026bc8 <col:79> 'struct lyd_node *' lvalue ParmVar 0x14a00e398 'node' 'struct lyd_node *'         `-IntegerLiteral 0x14a026be8 <col:85> 'int' 1 ","20765":"`-FunctionDecl 0x11f128750  line:1:6 btrfs_wait_and_free_delalloc_work 'void (struct btrfs_delalloc_work *)'   |-ParmVarDecl 0x11f128648 <col:40, col:68> col:68 used work 'struct btrfs_delalloc_work *'   `-CompoundStmt 0x11f140de8 <line:2:1, line:5:1>     |-CallExpr 0x11f140c08 <line:3:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11f140b70 <col:2> 'int ()' Function 0x11f140ab8 'wait_for_completion' 'int ()'     | `-UnaryOperator 0x11f140bf0 <col:22, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x11f140bc8 <col:23, col:29> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x11f140b90 <col:23> 'struct btrfs_delalloc_work *' lvalue ParmVar 0x11f128648 'work' 'struct btrfs_delalloc_work *'     `-CallExpr 0x11f140db8 <line:4:2, col:50> '<dependent type>' contains-errors       |-DeclRefExpr 0x11f140d10 <col:2> 'int ()' Function 0x11f140c58 'kmem_cache_free' 'int ()'       |-RecoveryExpr 0x11f140d98 <col:18> '<dependent type>' contains-errors lvalue       `-DeclRefExpr 0x11f140d48 <col:46> 'struct btrfs_delalloc_work *' lvalue ParmVar 0x11f128648 'work' 'struct btrfs_delalloc_work *' ","20483":"`-FunctionDecl 0x14180de28  line:1:13 invalid ssl2_get_cipher_by_char 'int *(const unsigned char *)'   |-ParmVarDecl 0x14180dd28 <col:37, col:58> col:58 used p 'const unsigned char *'   `-CompoundStmt 0x142809780 <line:2:2, line:17:2>     |-DeclStmt 0x14180df58 <line:4:2, col:18>     | `-VarDecl 0x14180def0 <col:2, col:16> col:16 used id 'unsigned long'     |-BinaryOperator 0x14180e358 <line:6:2, line:7:47> 'unsigned long' '='     | |-DeclRefExpr 0x14180df70 <line:6:2> 'unsigned long' lvalue Var 0x14180def0 'id' 'unsigned long'     | `-BinaryOperator 0x14180e338 <col:5, line:7:47> 'unsigned long' '|'     |   |-BinaryOperator 0x14180e248 <line:6:5, line:7:27> 'unsigned long' '|'     |   | |-BinaryOperator 0x14180e0f8 <line:6:5, col:42> 'unsigned long' '|'     |   | | |-ImplicitCastExpr 0x14180e0e0 <col:5> 'unsigned long' <IntegralCast>     |   | | | `-IntegerLiteral 0x14180df90 <col:5> 'long' 33554432     |   | | `-ParenExpr 0x14180e0c0 <col:17, col:42> 'unsigned long'     |   | |   `-BinaryOperator 0x14180e0a0 <col:18, col:39> 'unsigned long' '<<'     |   | |     |-CStyleCastExpr 0x14180e058 <col:18, col:36> 'unsigned long' <IntegralCast>     |   | |     | `-ImplicitCastExpr 0x14180e040 <col:33, col:36> 'unsigned char' <LValueToRValue> part_of_explicit_cast     |   | |     |   `-ArraySubscriptExpr 0x14180e008 <col:33, col:36> 'const unsigned char' lvalue     |   | |     |     |-ImplicitCastExpr 0x14180dff0 <col:33> 'const unsigned char *' <LValueToRValue>     |   | |     |     | `-DeclRefExpr 0x14180dfb0 <col:33> 'const unsigned char *' lvalue ParmVar 0x14180dd28 'p' 'const unsigned char *'     |   | |     |     `-IntegerLiteral 0x14180dfd0 <col:35> 'int' 0     |   | |     `-IntegerLiteral 0x14180e080 <col:39> 'long' 16     |   | `-ParenExpr 0x14180e228 <line:7:3, col:27> 'unsigned long'     |   |   `-BinaryOperator 0x14180e208 <col:4, col:25> 'unsigned long' '<<'     |   |     |-CStyleCastExpr 0x14180e1c0 <col:4, col:22> 'unsigned long' <IntegralCast>     |   |     | `-ImplicitCastExpr 0x14180e1a8 <col:19, col:22> 'unsigned char' <LValueToRValue> part_of_explicit_cast     |   |     |   `-ArraySubscriptExpr 0x14180e170 <col:19, col:22> 'const unsigned char' lvalue     |   |     |     |-ImplicitCastExpr 0x14180e158 <col:19> 'const unsigned char *' <LValueToRValue>     |   |     |     | `-DeclRefExpr 0x14180e118 <col:19> 'const unsigned char *' lvalue ParmVar 0x14180dd28 'p' 'const unsigned char *'     |   |     |     `-IntegerLiteral 0x14180e138 <col:21> 'int' 1     |   |     `-IntegerLiteral 0x14180e1e8 <col:25> 'long' 8     |   `-CStyleCastExpr 0x14180e310 <col:29, col:47> 'unsigned long' <IntegralCast>     |     `-ImplicitCastExpr 0x14180e2f8 <col:44, col:47> 'unsigned char' <LValueToRValue> part_of_explicit_cast     |       `-ArraySubscriptExpr 0x14180e2c0 <col:44, col:47> 'const unsigned char' lvalue     |         |-ImplicitCastExpr 0x14180e2a8 <col:44> 'const unsigned char *' <LValueToRValue>     |         | `-DeclRefExpr 0x14180e268 <col:44> 'const unsigned char *' lvalue ParmVar 0x14180dd28 'p' 'const unsigned char *'     |         `-IntegerLiteral 0x14180e288 <col:46> 'int' 2     `-IfStmt 0x142809750 <line:13:2, line:16:10> has_else       |-RecoveryExpr 0x1428096a0 <line:13:6, col:37> '_Bool' contains-errors       |-ReturnStmt 0x1428096f8 <line:14:3, col:10>       | `-RecoveryExpr 0x1428096d8 <col:10> '<dependent type>' contains-errors lvalue       `-ReturnStmt 0x142809740 <line:16:3, col:10>         `-RecoveryExpr 0x142809720 <col:10> '<dependent type>' contains-errors lvalue ","20450":"`-FunctionDecl 0x1300282a8  col:21 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x130028800 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x130028868 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x1300288d0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x130028350 <<invalid sloc>> Implicit 882 ","21030":"`-FunctionDecl 0x129826748  line:1:5 parse_rock_ridge_inode 'int (struct iso_directory_record *, struct inode *)'   |-ParmVarDecl 0x12980e248 <col:28, col:57> col:57 used de 'struct iso_directory_record *'   |-ParmVarDecl 0x129826628 <col:61, col:75> col:75 used inode 'struct inode *'   `-CompoundStmt 0x1298270b0 <line:2:1, line:11:1>     |-DeclStmt 0x129826b20 <line:3:2, col:60>     | `-VarDecl 0x129826860 <col:2, col:59> col:6 used result 'int' cinit     |   `-CallExpr 0x129826ab8 <col:15, col:59> 'int'     |     |-ImplicitCastExpr 0x129826aa0 <col:15> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1298269f0 <col:15> 'int ()' Function 0x129826938 'parse_rock_ridge_inode_internal' 'int ()'     |     |-ImplicitCastExpr 0x129826af0 <col:47> 'struct iso_directory_record *' <LValueToRValue>     |     | `-DeclRefExpr 0x129826a10 <col:47> 'struct iso_directory_record *' lvalue ParmVar 0x12980e248 'de' 'struct iso_directory_record *'     |     |-ImplicitCastExpr 0x129826b08 <col:51> 'struct inode *' <LValueToRValue>     |     | `-DeclRefExpr 0x129826a30 <col:51> 'struct inode *' lvalue ParmVar 0x129826628 'inode' 'struct inode *'     |     `-IntegerLiteral 0x129826a50 <col:58> 'int' 0     |-IfStmt 0x129827048 <line:6:2, line:9:2>     | |-BinaryOperator 0x129826ed0 <line:6:6, line:7:44> 'int' contains-errors '&&'     | | |-ParenExpr 0x129826d60 <line:6:6, col:49> 'int' contains-errors     | | | `-BinaryOperator 0x129826d40 <col:7, col:48> 'int' contains-errors '=='     | | |   |-CXXDependentScopeMemberExpr 0x129826cc0 <col:7, col:30> '<dependent type>' contains-errors lvalue ->s_rock_offset     | | |   | `-CallExpr 0x129826c98 <col:7, col:27> '<dependent type>' contains-errors     | | |   |   |-DeclRefExpr 0x129826c18 <col:7> 'int ()' Function 0x129826b60 'ISOFS_SB' 'int ()'     | | |   |   `-RecoveryExpr 0x129826c70 <col:16, col:23> '<dependent type>' contains-errors lvalue     | | |   |     `-DeclRefExpr 0x129826c38 <col:16> 'struct inode *' lvalue ParmVar 0x129826628 'inode' 'struct inode *'     | | |   `-UnaryOperator 0x129826d28 <col:47, col:48> 'int' prefix '-'     | | |     `-IntegerLiteral 0x129826d08 <col:48> 'int' 1     | | `-ParenExpr 0x129826eb0 <line:7:9, col:44> 'int' contains-errors     | |   `-BinaryOperator 0x129826e90 <col:10, col:43> 'int' contains-errors '=='     | |     |-CXXDependentScopeMemberExpr 0x129826e28 <col:10, col:33> '<dependent type>' contains-errors lvalue ->s_rock     | |     | `-CallExpr 0x129826e00 <col:10, col:30> '<dependent type>' contains-errors     | |     |   |-DeclRefExpr 0x129826d80 <col:10> 'int ()' Function 0x129826b60 'ISOFS_SB' 'int ()'     | |     |   `-RecoveryExpr 0x129826dd8 <col:19, col:26> '<dependent type>' contains-errors lvalue     | |     |     `-DeclRefExpr 0x129826da0 <col:19> 'struct inode *' lvalue ParmVar 0x129826628 'inode' 'struct inode *'     | |     `-IntegerLiteral 0x129826e70 <col:43> 'int' 2     | `-CompoundStmt 0x129827030 <col:47, line:9:2>     |   `-BinaryOperator 0x129827010 <line:8:3, col:57> 'int' '='     |     |-DeclRefExpr 0x129826ef0 <col:3> 'int' lvalue Var 0x129826860 'result' 'int'     |     `-CallExpr 0x129826fa8 <col:12, col:57> 'int'     |       |-ImplicitCastExpr 0x129826f90 <col:12> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x129826f10 <col:12> 'int ()' Function 0x129826938 'parse_rock_ridge_inode_internal' 'int ()'     |       |-ImplicitCastExpr 0x129826fe0 <col:44> 'struct iso_directory_record *' <LValueToRValue>     |       | `-DeclRefExpr 0x129826f30 <col:44> 'struct iso_directory_record *' lvalue ParmVar 0x12980e248 'de' 'struct iso_directory_record *'     |       |-ImplicitCastExpr 0x129826ff8 <col:48> 'struct inode *' <LValueToRValue>     |       | `-DeclRefExpr 0x129826f50 <col:48> 'struct inode *' lvalue ParmVar 0x129826628 'inode' 'struct inode *'     |       `-IntegerLiteral 0x129826f70 <col:55> 'int' 14     `-ReturnStmt 0x1298270a0 <line:10:2, col:9>       `-ImplicitCastExpr 0x129827088 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x129827068 <col:9> 'int' lvalue Var 0x129826860 'result' 'int' ","20478":"`-FunctionDecl 0x14f941138  line:1:1 resolve_when_ctx_snode 'int (const struct lys_node *, struct lys_node **, enum lyxp_node_type *)'   |-ParmVarDecl 0x14f928a48 <col:24, col:47> col:47 used schema 'const struct lys_node *'   |-ParmVarDecl 0x14f940e00 <col:55, col:73> col:73 used ctx_snode 'struct lys_node **'   |-ParmVarDecl 0x14f940ff8 <col:84, col:105> col:105 used ctx_snode_type 'enum lyxp_node_type *'   `-CompoundStmt 0x14f9434f0 <line:2:1, line:28:1>     |-DeclStmt 0x14f941300 <line:3:5, col:35>     | `-VarDecl 0x14f941298 <col:5, col:28> col:28 used sparent 'const struct lys_node *'     |-BinaryOperator 0x14f941438 <line:6:5, col:23> 'enum lyxp_node_type' contains-errors '='     | |-UnaryOperator 0x14f941400 <col:5, col:6> 'enum lyxp_node_type' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x14f9413e8 <col:6> 'enum lyxp_node_type *' <LValueToRValue>     | |   `-DeclRefExpr 0x14f941318 <col:6> 'enum lyxp_node_type *' lvalue ParmVar 0x14f940ff8 'ctx_snode_type' 'enum lyxp_node_type *'     | `-RecoveryExpr 0x14f941418 <col:23> '<dependent type>' contains-errors lvalue     |-WhileStmt 0x14f9433d8 <line:7:5, line:25:5>     | |-RecoveryExpr 0x14f9415e8 <line:7:12, col:103> '_Bool' contains-errors     | `-CompoundStmt 0x14f9433b0 <col:106, line:25:5>     |   |-IfStmt 0x14f941a00 <line:8:9, line:12:9> has_else     |   | |-BinaryOperator 0x14f9416c0 <line:8:13, col:33> 'int' contains-errors '=='     |   | | |-RecoveryExpr 0x14f941640 <col:13, col:21> '<dependent type>' contains-errors lvalue     |   | | | `-DeclRefExpr 0x14f941608 <col:13> 'const struct lys_node *' lvalue ParmVar 0x14f928a48 'schema' 'const struct lys_node *'     |   | | `-RecoveryExpr 0x14f9416a0 <col:33> '<dependent type>' contains-errors lvalue     |   | |-CompoundStmt 0x14f941930 <col:46, line:10:9>     |   | | `-BinaryOperator 0x14f941910 <line:9:13, col:60> 'const struct lys_node *' contains-errors '='     |   | |   |-DeclRefExpr 0x14f9416e0 <col:13> 'const struct lys_node *' lvalue Var 0x14f941298 'sparent' 'const struct lys_node *'     |   | |   `-RecoveryExpr 0x14f9418e8 <col:23, col:60> '<dependent type>' contains-errors lvalue     |   | |     `-ParenExpr 0x14f9418c8 <col:23, col:57> 'struct lys_node_augment *'     |   | |       `-CStyleCastExpr 0x14f9418a0 <col:24, col:51> 'struct lys_node_augment *' <BitCast>     |   | |         `-ImplicitCastExpr 0x14f941888 <col:51> 'const struct lys_node *' <LValueToRValue> part_of_explicit_cast     |   | |           `-DeclRefExpr 0x14f9417a0 <col:51> 'const struct lys_node *' lvalue ParmVar 0x14f928a48 'schema' 'const struct lys_node *'     |   | `-CompoundStmt 0x14f9419e8 <line:10:16, line:12:9>     |   |   `-BinaryOperator 0x14f9419c8 <line:11:13, col:31> 'const struct lys_node *' contains-errors '='     |   |     |-DeclRefExpr 0x14f941948 <col:13> 'const struct lys_node *' lvalue Var 0x14f941298 'sparent' 'const struct lys_node *'     |   |     `-RecoveryExpr 0x14f9419a0 <col:23, col:31> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x14f941968 <col:23> 'const struct lys_node *' lvalue ParmVar 0x14f928a48 'schema' 'const struct lys_node *'     |   |-IfStmt 0x14f943318 <line:13:9, line:23:9>     |   | |-UnaryOperator 0x14f941a68 <line:13:13, col:14> 'int' prefix '!' cannot overflow     |   | | `-ImplicitCastExpr 0x14f941a50 <col:14> 'const struct lys_node *' <LValueToRValue>     |   | |   `-DeclRefExpr 0x14f941a30 <col:14> 'const struct lys_node *' lvalue Var 0x14f941298 'sparent' 'const struct lys_node *'     |   | `-CompoundStmt 0x14f9432f0 <col:23, line:23:9>     |   |   |-IfStmt 0x14f942e00 <line:15:13, line:19:13> has_else     |   |   | |-BinaryOperator 0x14f941b38 <line:15:17, col:33> '<dependent type>' contains-errors '&'     |   |   | | |-RecoveryExpr 0x14f941ab8 <col:17, col:25> '<dependent type>' contains-errors lvalue     |   |   | | | `-DeclRefExpr 0x14f941a80 <col:17> 'const struct lys_node *' lvalue ParmVar 0x14f928a48 'schema' 'const struct lys_node *'     |   |   | | `-RecoveryExpr 0x14f941b18 <col:33> '<dependent type>' contains-errors lvalue     |   |   | |-CompoundStmt 0x14f941c80 <col:47, line:17:13>     |   |   | | `-BinaryOperator 0x14f941c60 <line:16:17, col:35> 'enum lyxp_node_type' contains-errors '='     |   |   | |   |-UnaryOperator 0x14f941c28 <col:17, col:18> 'enum lyxp_node_type' lvalue prefix '*' cannot overflow     |   |   | |   | `-ImplicitCastExpr 0x14f941c10 <col:18> 'enum lyxp_node_type *' <LValueToRValue>     |   |   | |   |   `-DeclRefExpr 0x14f941b58 <col:18> 'enum lyxp_node_type *' lvalue ParmVar 0x14f940ff8 'ctx_snode_type' 'enum lyxp_node_type *'     |   |   | |   `-RecoveryExpr 0x14f941c40 <col:35> '<dependent type>' contains-errors lvalue     |   |   | `-CompoundStmt 0x14f941dc0 <line:17:20, line:19:13>     |   |   |   `-BinaryOperator 0x14f941da0 <line:18:17, col:35> 'enum lyxp_node_type' contains-errors '='     |   |   |     |-UnaryOperator 0x14f941d68 <col:17, col:18> 'enum lyxp_node_type' lvalue prefix '*' cannot overflow     |   |   |     | `-ImplicitCastExpr 0x14f941d50 <col:18> 'enum lyxp_node_type *' <LValueToRValue>     |   |   |     |   `-DeclRefExpr 0x14f941c98 <col:18> 'enum lyxp_node_type *' lvalue ParmVar 0x14f940ff8 'ctx_snode_type' 'enum lyxp_node_type *'     |   |   |     `-RecoveryExpr 0x14f941d80 <col:35> '<dependent type>' contains-errors lvalue     |   |   |-BinaryOperator 0x14f9432c8 <line:21:13, col:95> 'const struct lys_node *' contains-errors '='     |   |   | |-DeclRefExpr 0x14f942e30 <col:13> 'const struct lys_node *' lvalue ParmVar 0x14f928a48 'schema' 'const struct lys_node *'     |   |   | `-CallExpr 0x14f943288 <col:22, col:95> '<dependent type>' contains-errors     |   |   |   |-DeclRefExpr 0x14f942f60 <col:22> 'int ()' Function 0x14f942ea8 'lys_getnext' 'int ()'     |   |   |   |-RecoveryExpr 0x14f9431d0 <col:34> '<dependent type>' contains-errors lvalue     |   |   |   |-RecoveryExpr 0x14f9431f0 <col:40> '<dependent type>' contains-errors lvalue     |   |   |   |-CallExpr 0x14f943228 <col:46, col:68> 'int'     |   |   |   | |-ImplicitCastExpr 0x14f943210 <col:46> 'int (*)()' <FunctionToPointerDecay>     |   |   |   | | `-DeclRefExpr 0x14f943090 <col:46> 'int ()' Function 0x14f942fd8 'lys_node_module' 'int ()'     |   |   |   | `-ImplicitCastExpr 0x14f943250 <col:62> 'const struct lys_node *' <LValueToRValue>     |   |   |   |   `-DeclRefExpr 0x14f9430b0 <col:62> 'const struct lys_node *' lvalue ParmVar 0x14f928a48 'schema' 'const struct lys_node *'     |   |   |   `-RecoveryExpr 0x14f943268 <col:71> '<dependent type>' contains-errors lvalue     |   |   `-BreakStmt 0x14f9432e8 <line:22:13>     |   `-BinaryOperator 0x14f943390 <line:24:9, col:18> 'const struct lys_node *' '='     |     |-DeclRefExpr 0x14f943338 <col:9> 'const struct lys_node *' lvalue ParmVar 0x14f928a48 'schema' 'const struct lys_node *'     |     `-ImplicitCastExpr 0x14f943378 <col:18> 'const struct lys_node *' <LValueToRValue>     |       `-DeclRefExpr 0x14f943358 <col:18> 'const struct lys_node *' lvalue Var 0x14f941298 'sparent' 'const struct lys_node *'     `-BinaryOperator 0x14f9434d0 <line:27:5, col:37> 'struct lys_node *' '='       |-UnaryOperator 0x14f943430 <col:5, col:6> 'struct lys_node *' lvalue prefix '*' cannot overflow       | `-ImplicitCastExpr 0x14f943418 <col:6> 'struct lys_node **' <LValueToRValue>       |   `-DeclRefExpr 0x14f9433f8 <col:6> 'struct lys_node **' lvalue ParmVar 0x14f940e00 'ctx_snode' 'struct lys_node **'       `-CStyleCastExpr 0x14f9434a8 <col:18, col:37> 'struct lys_node *' <NoOp>         `-ImplicitCastExpr 0x14f943490 <col:37> 'const struct lys_node *' <LValueToRValue> part_of_explicit_cast           `-DeclRefExpr 0x14f943448 <col:37> 'const struct lys_node *' lvalue ParmVar 0x14f928a48 'schema' 'const struct lys_node *' ","20283":"`-FunctionDecl 0x14d928258  line:1:37 referenced invalid sctp_chunk_event_lookup 'const int *(int, int)' static   |-ParmVarDecl 0x14d9280f0 <col:61, col:72> col:72 invalid cid 'int'   |-ParmVarDecl 0x14d928170 <line:2:12, col:25> col:25 invalid state 'int'   `-CompoundStmt 0x14d941938 <line:3:1, line:24:1>     |-IfStmt 0x14d928420 <line:4:2, line:5:11>     | |-BinaryOperator 0x14d928388 <line:4:6, col:14> 'int' contains-errors '>'     | | |-RecoveryExpr 0x14d928310 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14d928368 <col:14> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14d928410 <line:5:3, col:11>     |   `-UnaryOperator 0x14d9283f8 <col:10, col:11> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x14d9283d8 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14d928688 <line:10:2, line:13:2>     | |-RecoveryExpr 0x14d928548 <line:10:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14d928678 <col:26, line:13:2>     `-IfStmt 0x14d9418e0 <line:15:2, line:21:2>       |-RecoveryExpr 0x14d9286c0 <line:15:6> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x14d9418d0 <col:25, line:21:2> ","20964":"`-FunctionDecl 0x1231281c8  line:1:19 invalid ResetImageOptionIterator 'int (const int *)'   |-ParmVarDecl 0x1231280f0 <col:44, col:61> col:61 referenced invalid image_info 'const int *'   `-CompoundStmt 0x123141c68 <line:2:1, line:11:1>     |-CallExpr 0x123128570 <line:4:3, col:54> '<dependent type>' contains-errors     | |-DeclRefExpr 0x123128448 <col:3> 'int ()' Function 0x123128318 'assert' 'int ()'     | `-BinaryOperator 0x123128550 <col:10, col:35> 'int' contains-errors '=='     |   |-CXXDependentScopeMemberExpr 0x123128488 <col:10, col:22> '<dependent type>' contains-errors lvalue ->signature     |   | `-RecoveryExpr 0x123128468 <col:10> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x123128530 <col:35> '<dependent type>' contains-errors lvalue     `-IfStmt 0x123141b30 <line:8:3, line:9:5>       |-RecoveryExpr 0x123141b00 <line:8:7, col:39> '_Bool' contains-errors       `-ReturnStmt 0x123141b20 <line:9:5> ","20890":"`-FunctionDecl 0x143106098  line:1:1 invalid cqcellTreeDestroy 'int (int ****)'   |-ParmVarDecl 0x143105fc8 <col:19, col:31> col:31 referenced invalid pcqcaa 'int ****'   `-CompoundStmt 0x144008e40 <line:2:1, line:28:1>     |-CallExpr 0x143106438 <line:7:5, col:19> 'int'     | |-ImplicitCastExpr 0x143106420 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x143106370 <col:5> 'int ()' Function 0x1431062b8 'PROCNAME' 'int ()'     | `-ImplicitCastExpr 0x143106460 <col:14> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x1431063d0 <col:14> 'char[4]' lvalue \"STR\"     |-IfStmt 0x144008908 <line:9:5, line:12:5>     | |-BinaryOperator 0x1431064f0 <line:9:9, col:19> 'int' contains-errors '=='     | | |-RecoveryExpr 0x143106478 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1431064d0 <col:19> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1440088e8 <col:25, line:12:5>     |   |-CallExpr 0x1440088a8 <line:10:9, col:34> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x144008800 <col:9> 'int ()' Function 0x143106538 'L_WARNING' 'int ()'     |   | |-StringLiteral 0x144008820 <col:19> 'char[4]' lvalue \"STR\"     |   | `-RecoveryExpr 0x144008888 <col:26> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x1440088d8 <line:11:9>     |-IfStmt 0x144008a18 <line:14:5, line:15:9>     | |-RecoveryExpr 0x1440089e8 <line:14:9, col:30> '_Bool' contains-errors     | `-ReturnStmt 0x144008a08 <line:15:9>     |-ForStmt 0x144008d88 <line:17:5, line:23:5>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-BinaryOperator 0x144008b20 <line:17:21, col:30> 'int' contains-errors '<='     | | |-RecoveryExpr 0x144008ae0 <col:21> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x144008b00 <col:30> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x144008b90 <col:41, col:46> '<dependent type>' contains-errors postfix '++' cannot overflow     | | `-RecoveryExpr 0x144008b70 <col:41> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x144008d78 <col:50, line:23:5>     `-ReturnStmt 0x144008e30 <line:27:5> ","20464":"`-FunctionDecl 0x137928758  line:1:1 lazy_stat 'int (struct archive_write_disk *)'   |-ParmVarDecl 0x137928648 <col:11, col:38> col:38 used a 'struct archive_write_disk *'   `-CompoundStmt 0x1379411e8 <line:2:1, line:20:1>     |-IfStmt 0x137940b68 <line:3:2, line:6:2>     | |-BinaryOperator 0x137940b20 <line:3:6, col:16> 'int' contains-errors '!='     | | |-RecoveryExpr 0x137940a88 <col:6, col:9> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x137940a50 <col:6> 'struct archive_write_disk *' lvalue ParmVar 0x137928648 'a' 'struct archive_write_disk *'     | | `-RecoveryExpr 0x137940b00 <col:16> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x137940b58 <col:22, line:6:2>     |-IfStmt 0x137940f30 <line:14:2, line:17:2>     | |-BinaryOperator 0x137940de8 <line:14:6, col:32> 'int' contains-errors '=='     | | |-CallExpr 0x137940d98 <col:6, col:27> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x137940ca0 <col:6> 'int ()' Function 0x137940be8 'lstat' 'int ()'     | | | |-RecoveryExpr 0x137940cf8 <col:12, col:15> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x137940cc0 <col:12> 'struct archive_write_disk *' lvalue ParmVar 0x137928648 'a' 'struct archive_write_disk *'     | | | `-UnaryOperator 0x137940d80 <col:21, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-RecoveryExpr 0x137940d58 <col:22, col:25> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x137940d20 <col:22> 'struct archive_write_disk *' lvalue ParmVar 0x137928648 'a' 'struct archive_write_disk *'     | | `-IntegerLiteral 0x137940dc8 <col:32> 'int' 0     | `-CompoundStmt 0x137940f18 <col:35, line:17:2>     |   `-BinaryOperator 0x137940ee0 <line:15:3, col:16> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x137940e40 <col:3, col:6> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x137940e08 <col:3> 'struct archive_write_disk *' lvalue ParmVar 0x137928648 'a' 'struct archive_write_disk *'     |     `-UnaryOperator 0x137940ec8 <col:12, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x137940ea0 <col:13, col:16> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x137940e68 <col:13> 'struct archive_write_disk *' lvalue ParmVar 0x137928648 'a' 'struct archive_write_disk *'     `-CallExpr 0x137941198 <line:18:2, col:45> '<dependent type>' contains-errors       |-DeclRefExpr 0x137941030 <col:2> 'int ()' Function 0x137940f78 'archive_set_error' 'int ()'       |-UnaryOperator 0x1379410b0 <col:20, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow       | `-RecoveryExpr 0x137941088 <col:21, col:24> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x137941050 <col:21> 'struct archive_write_disk *' lvalue ParmVar 0x137928648 'a' 'struct archive_write_disk *'       |-RecoveryExpr 0x137941178 <col:33> '<dependent type>' contains-errors lvalue       `-StringLiteral 0x137941120 <col:40> 'char[4]' lvalue \"STR\" ","20775":"`-FunctionDecl 0x148128288  line:1:10 invalid DupWcs 'int *(int, const int *)'   |-ParmVarDecl 0x1481280f0 <col:17, col:28> col:28 invalid ContextID 'int'   |-ParmVarDecl 0x148128170 <col:39, col:54> col:54 invalid ptr 'const int *'   `-CompoundStmt 0x148128458 <line:2:1, line:5:1>     `-IfStmt 0x148128420 <line:3:5, col:29>       |-BinaryOperator 0x1481283b8 <col:9, col:16> 'int' contains-errors '=='       | |-RecoveryExpr 0x148128340 <col:9> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x148128398 <col:16> '<dependent type>' contains-errors lvalue       `-ReturnStmt 0x148128410 <col:22, col:29>         `-RecoveryExpr 0x1481283f0 <col:29> '<dependent type>' contains-errors lvalue ","20262":"`-FunctionDecl 0x14d940a30  line:1:20 ncp_extract_nfs_info 'void (const unsigned char *, struct nw_nfs_info *)' static inline   |-ParmVarDecl 0x14d928108 <col:41, col:62> col:62 used structure 'const unsigned char *'   |-ParmVarDecl 0x14d9286f8 <line:2:6, col:26> col:26 used target 'struct nw_nfs_info *'   `-CompoundStmt 0x14d940f00 <line:3:1, line:6:1>     |-BinaryOperator 0x14d940d88 <line:4:2, col:34> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14d940b68 <col:2, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14d940b30 <col:2> 'struct nw_nfs_info *' lvalue ParmVar 0x14d9286f8 'target' 'struct nw_nfs_info *'     | `-CallExpr 0x14d940d48 <col:17, col:34> 'int'     |   |-ImplicitCastExpr 0x14d940d30 <col:17> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14d940cc0 <col:17> 'int ()' Function 0x14d940c08 'DVAL_LH' 'int ()'     |   `-ImplicitCastExpr 0x14d940d70 <col:25> 'const unsigned char *' <LValueToRValue>     |     `-DeclRefExpr 0x14d940ce0 <col:25> 'const unsigned char *' lvalue ParmVar 0x14d928108 'structure' 'const unsigned char *'     `-BinaryOperator 0x14d940ee0 <line:5:2, col:38> '<dependent type>' contains-errors '='       |-RecoveryExpr 0x14d940de0 <col:2, col:10> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x14d940da8 <col:2> 'struct nw_nfs_info *' lvalue ParmVar 0x14d9286f8 'target' 'struct nw_nfs_info *'       `-CallExpr 0x14d940eb8 <col:17, col:38> 'int'         |-ImplicitCastExpr 0x14d940ea0 <col:17> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x14d940e08 <col:17> 'int ()' Function 0x14d940c08 'DVAL_LH' 'int ()'         `-BinaryOperator 0x14d940e80 <col:25, col:37> 'const unsigned char *' '+'           |-ImplicitCastExpr 0x14d940e68 <col:25> 'const unsigned char *' <LValueToRValue>           | `-DeclRefExpr 0x14d940e28 <col:25> 'const unsigned char *' lvalue ParmVar 0x14d928108 'structure' 'const unsigned char *'           `-IntegerLiteral 0x14d940e48 <col:37> 'int' 8 ","20727":"`-FunctionDecl 0x13180dd98  line:1:1 rsvg_new_image 'int (void)'   `-CompoundStmt 0x1318288e8 <line:2:1, line:14:1>     |-CallExpr 0x13180e278 <line:5:5, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13180e138 <col:5> 'int ()' Function 0x13180e080 '_rsvg_node_init' 'int ()'     | `-UnaryOperator 0x13180e260 <col:22, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x13180e218 <col:23, col:30> '<dependent type>' contains-errors lvalue ->super     |     `-RecoveryExpr 0x13180e1f8 <col:23> '<dependent type>' contains-errors lvalue     `-CallExpr 0x131828520 <line:6:5, col:33> '<dependent type>' contains-errors       |-DeclRefExpr 0x13180e380 <col:5> 'int ()' Function 0x13180e2c8 'g_assert' 'int ()'       `-CXXDependentScopeMemberExpr 0x1318284d8 <col:15, col:28> '<dependent type>' contains-errors lvalue .state         `-CXXDependentScopeMemberExpr 0x131828490 <col:15, col:22> '<dependent type>' contains-errors lvalue ->super           `-RecoveryExpr 0x131828470 <col:15> '<dependent type>' contains-errors lvalue ","20356":"`-FunctionDecl 0x152808ad0  col:10 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x152808bd0 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x152808c38 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x152808b78 <<invalid sloc>> Implicit 887 ","20551":"`-FunctionDecl 0x13b1282e0  line:1:13 invalid qp_table_remove 'void (void *, int, void *)' static   |-ParmVarDecl 0x13b1280d8 <col:29, col:35> col:35 used p 'void *'   |-ParmVarDecl 0x13b128170 <col:38, col:47> col:47 invalid h 'int'   |-ParmVarDecl 0x13b1281f0 <col:50, col:56> col:56 up 'void *'   `-CompoundStmt 0x13b1285c8 <line:2:1, line:4:1>     `-CallExpr 0x13b128588 <line:3:5, col:13> 'int'       |-ImplicitCastExpr 0x13b128570 <col:5> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x13b128500 <col:5> 'int ()' Function 0x13b128448 'g_free' 'int ()'       `-ImplicitCastExpr 0x13b1285b0 <col:12> 'void *' <LValueToRValue>         `-DeclRefExpr 0x13b128520 <col:12> 'void *' lvalue ParmVar 0x13b1280d8 'p' 'void *' ","20946":"`-FunctionDecl 0x148026e90  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x148026f90 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x148026ff8 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x148027060 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x148026f38 <<invalid sloc>> Implicit 882 ","20556":"`-FunctionDecl 0x12f141800  line:1:13 invalid dmar_fault_msi_write 'void (struct dmar_drhd_rt *, int)' static   |-ParmVarDecl 0x12f128648 <col:34, col:55> col:55 used dmar_unit 'struct dmar_drhd_rt *'   |-ParmVarDecl 0x12f1286e0 <line:2:4, col:13> col:13 invalid vector 'int'   `-CompoundStmt 0x12f1420a0 <line:3:1, line:16:1>     |-CallExpr 0x12f141b98 <line:12:2, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f141ae0 <col:2> 'int ()' Function 0x12f141a28 'spinlock_obtain' 'int ()'     | `-UnaryOperator 0x12f141b80 <col:18, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-ParenExpr 0x12f141b60 <col:19, col:35> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x12f141b38 <col:20, col:31> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x12f141b00 <col:20> 'struct dmar_drhd_rt *' lvalue ParmVar 0x12f128648 'dmar_unit' 'struct dmar_drhd_rt *'     |-CallExpr 0x12f141d88 <line:13:2, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f141ca0 <col:2> 'int ()' Function 0x12f141be8 'iommu_write32' 'int ()'     | |-DeclRefExpr 0x12f141cc0 <col:16> 'struct dmar_drhd_rt *' lvalue ParmVar 0x12f128648 'dmar_unit' 'struct dmar_drhd_rt *'     | |-RecoveryExpr 0x12f141d48 <col:27> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x12f141d68 <col:44> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12f141ea8 <line:14:2, col:52> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f141dc0 <col:2> 'int ()' Function 0x12f141be8 'iommu_write32' 'int ()'     | |-DeclRefExpr 0x12f141de0 <col:16> 'struct dmar_drhd_rt *' lvalue ParmVar 0x12f128648 'dmar_unit' 'struct dmar_drhd_rt *'     | |-RecoveryExpr 0x12f141e68 <col:27> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x12f141e88 <col:44> '<dependent type>' contains-errors lvalue     `-CallExpr 0x12f142078 <line:15:2, col:37> '<dependent type>' contains-errors       |-DeclRefExpr 0x12f141fc0 <col:2> 'int ()' Function 0x12f141f08 'spinlock_release' 'int ()'       `-UnaryOperator 0x12f142060 <col:19, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow         `-ParenExpr 0x12f142040 <col:20, col:36> '<dependent type>' contains-errors lvalue           `-RecoveryExpr 0x12f142018 <col:21, col:32> '<dependent type>' contains-errors lvalue             `-DeclRefExpr 0x12f141fe0 <col:21> 'struct dmar_drhd_rt *' lvalue ParmVar 0x12f128648 'dmar_unit' 'struct dmar_drhd_rt *' ","20810":"`-FunctionDecl 0x148928118  line:1:1 TEST_CASE 'int ()'   `-CompoundStmt 0x148928588 <line:2:1, line:16:1>     |-CallExpr 0x148928458 <line:14:5, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x148928360 <col:5> 'int ()' Function 0x1489282a8 'REQUIRE' 'int ()'     | `-BinaryOperator 0x148928438 <col:13, col:20> 'int' contains-errors '=='     |   |-RecoveryExpr 0x1489283f8 <col:13> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x148928418 <col:20> '<dependent type>' contains-errors lvalue     `-CallExpr 0x148928560 <line:15:5, col:24> '<dependent type>' contains-errors       |-DeclRefExpr 0x148928480 <col:5> 'int ()' Function 0x1489282a8 'REQUIRE' 'int ()'       `-BinaryOperator 0x148928540 <col:13, col:19> 'int' contains-errors '=='         |-RecoveryExpr 0x148928520 <col:13> '<dependent type>' contains-errors lvalue         `-StringLiteral 0x1489284b8 <col:19> 'char[4]' lvalue \"STR\" ","20189":"`-FunctionDecl 0x16000dd18  line:1:1 TEST_CASE 'int ()'   `-CompoundStmt 0x16000de20 <line:2:1, line:9:1> ","21253":"`-FunctionDecl 0x14d826600  line:1:5 hugetlb_get_quota 'int (struct address_space *, long)'   |-ParmVarDecl 0x14d80e248 <col:23, col:45> col:45 used mapping 'struct address_space *'   |-ParmVarDecl 0x14d80e2c8 <col:54, col:59> col:59 used delta 'long'   `-CompoundStmt 0x14d827320 <line:2:1, line:16:1>     |-DeclStmt 0x14d8267a0 <line:3:2, col:13>     | `-VarDecl 0x14d826718 <col:2, col:12> col:6 used ret 'int' cinit     |   `-IntegerLiteral 0x14d826780 <col:12> 'int' 0     |-DeclStmt 0x14d826bc8 <line:4:2, col:70>     | |-RecordDecl 0x14d8267b8 <col:2, col:9> col:9 struct hugetlbfs_sb_info     | `-VarDecl 0x14d826928 <col:2, col:69> col:28 used sbinfo 'struct hugetlbfs_sb_info *' cinit     |   `-CallExpr 0x14d826b88 <col:37, col:69> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14d826ac0 <col:37> 'int ()' Function 0x14d826a08 'HUGETLBFS_SB' 'int ()'     |     `-CXXDependentScopeMemberExpr 0x14d826b40 <col:50, col:65> '<dependent type>' contains-errors lvalue ->i_sb     |       `-RecoveryExpr 0x14d826b18 <col:50, col:59> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x14d826ae0 <col:50> 'struct address_space *' lvalue ParmVar 0x14d80e248 'mapping' 'struct address_space *'     |-IfStmt 0x14d8272b8 <line:6:2, line:13:2>     | |-BinaryOperator 0x14d826c78 <line:6:6, col:29> 'int' contains-errors '>'     | | |-RecoveryExpr 0x14d826c18 <col:6, col:14> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x14d826be0 <col:6> 'struct hugetlbfs_sb_info *' contains-errors lvalue Var 0x14d826928 'sbinfo' 'struct hugetlbfs_sb_info *'     | | `-UnaryOperator 0x14d826c60 <col:28, col:29> 'int' prefix '-'     | |   `-IntegerLiteral 0x14d826c40 <col:29> 'int' 1     | `-CompoundStmt 0x14d827290 <col:32, line:13:2>     |   |-CallExpr 0x14d826e10 <line:7:3, col:31> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14d826d78 <col:3> 'int ()' Function 0x14d826cc0 'spin_lock' 'int ()'     |   | `-UnaryOperator 0x14d826df8 <col:13, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x14d826dd0 <col:14, col:22> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x14d826d98 <col:14> 'struct hugetlbfs_sb_info *' contains-errors lvalue Var 0x14d826928 'sbinfo' 'struct hugetlbfs_sb_info *'     |   |-IfStmt 0x14d8270c0 <line:8:3, line:11:11> has_else     |   | |-BinaryOperator 0x14d826ef8 <line:8:7, col:38> 'int' contains-errors '>='     |   | | |-BinaryOperator 0x14d826eb8 <col:7, col:29> '<dependent type>' contains-errors '-'     |   | | | |-RecoveryExpr 0x14d826e70 <col:7, col:15> '<dependent type>' contains-errors lvalue     |   | | | | `-DeclRefExpr 0x14d826e38 <col:7> 'struct hugetlbfs_sb_info *' contains-errors lvalue Var 0x14d826928 'sbinfo' 'struct hugetlbfs_sb_info *'     |   | | | `-DeclRefExpr 0x14d826e98 <col:29> 'long' lvalue ParmVar 0x14d80e2c8 'delta' 'long'     |   | | `-IntegerLiteral 0x14d826ed8 <col:38> 'int' 0     |   | |-CompoundAssignOperator 0x14d826f98 <line:9:4, col:27> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   | | |-RecoveryExpr 0x14d826f50 <col:4, col:12> '<dependent type>' contains-errors lvalue     |   | | | `-DeclRefExpr 0x14d826f18 <col:4> 'struct hugetlbfs_sb_info *' contains-errors lvalue Var 0x14d826928 'sbinfo' 'struct hugetlbfs_sb_info *'     |   | | `-DeclRefExpr 0x14d826f78 <col:27> 'long' lvalue ParmVar 0x14d80e2c8 'delta' 'long'     |   | `-BinaryOperator 0x14d8270a0 <line:11:4, col:11> 'int' contains-errors '='     |   |   |-DeclRefExpr 0x14d826fc8 <col:4> 'int' lvalue Var 0x14d826718 'ret' 'int'     |   |   `-UnaryOperator 0x14d827088 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |     `-ImplicitCastExpr 0x14d827070 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |   |       `-RecoveryExpr 0x14d827050 <col:11> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x14d827268 <line:12:3, col:33> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14d8271d0 <col:3> 'int ()' Function 0x14d827118 'spin_unlock' 'int ()'     |     `-UnaryOperator 0x14d827250 <col:15, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x14d827228 <col:16, col:24> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x14d8271f0 <col:16> 'struct hugetlbfs_sb_info *' contains-errors lvalue Var 0x14d826928 'sbinfo' 'struct hugetlbfs_sb_info *'     `-ReturnStmt 0x14d827310 <line:15:2, col:9>       `-ImplicitCastExpr 0x14d8272f8 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x14d8272d8 <col:9> 'int' lvalue Var 0x14d826718 'ret' 'int' ","20310":"`-FunctionDecl 0x14f1356c8  line:1:19 invalid l2cap_config_rsp 'int (struct l2cap_conn *, struct l2cap_cmd_hdr *, int, int *)' static inline   |-ParmVarDecl 0x14f11d048 <col:36, col:55> col:55 used conn 'struct l2cap_conn *'   |-ParmVarDecl 0x14f135428 <line:2:8, col:30> col:30 used cmd 'struct l2cap_cmd_hdr *'   |-ParmVarDecl 0x14f1354c0 <col:35, col:39> col:39 invalid cmd_len 'int'   |-ParmVarDecl 0x14f135578 <line:3:8, col:12> col:12 invalid data 'int *'   `-CompoundStmt 0x14f13a2e0 <line:4:1, line:111:1>     |-DeclStmt 0x14f135a48 <line:5:2, col:60>     | |-RecordDecl 0x14f135790 <col:2, col:9> col:9 struct l2cap_conf_rsp     | `-VarDecl 0x14f1358f8 <col:2, col:56> col:25 used rsp 'struct l2cap_conf_rsp *' cinit     |   `-CStyleCastExpr 0x14f135a08 <col:31, col:56> 'struct l2cap_conf_rsp *' contains-errors <Dependent>     |     `-RecoveryExpr 0x14f135960 <col:56> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x14f135c48 <line:7:2, col:25>     | |-RecordDecl 0x14f135a60 <col:2, col:9> col:9 struct l2cap_chan     | `-VarDecl 0x14f135bc8 <col:2, col:21> col:21 used chan 'struct l2cap_chan *'     |-DeclStmt 0x14f135d70 <line:8:2, col:34>     | `-VarDecl 0x14f135c78 <col:2, col:6> col:6 used len 'int'     |-DeclStmt 0x14f135e28 <line:9:2, col:13>     | `-VarDecl 0x14f135da0 <col:2, col:12> col:6 used err 'int' cinit     |   `-IntegerLiteral 0x14f135e08 <col:12> 'int' 0     |-IfStmt 0x14f135f98 <line:11:2, line:12:11>     | |-RecoveryExpr 0x14f135ed0 <line:11:6, col:27> '_Bool' contains-errors     | `-ReturnStmt 0x14f135f88 <line:12:3, col:11>     |   `-UnaryOperator 0x14f135f70 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14f135f58 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14f135f38 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14f814db0 <line:18:2, line:19:20> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14f814c00 <line:18:2> 'int ()' Function 0x14f136330 'BT_DBG' 'int ()'     | |-StringLiteral 0x14f814c60 <col:9> 'char[4]' lvalue \"STR\"     | |-RecoveryExpr 0x14f814d50 <col:16> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x14f814d70 <col:22> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x14f814d90 <line:19:9> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x14f814cc8 <col:17> 'int' lvalue Var 0x14f135c78 'len' 'int'     |-BinaryOperator 0x14f815080 <line:21:2, col:42> 'struct l2cap_chan *' '='     | |-DeclRefExpr 0x14f814df8 <col:2> 'struct l2cap_chan *' lvalue Var 0x14f135bc8 'chan' 'struct l2cap_chan *'     | `-ImplicitCastExpr 0x14f815068 <col:9, col:42> 'struct l2cap_chan *' <IntegralToPointer>     |   `-CallExpr 0x14f815008 <col:9, col:42> 'int'     |     |-ImplicitCastExpr 0x14f814ff0 <col:9> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14f814ef8 <col:9> 'int ()' Function 0x14f814e40 'l2cap_get_chan_by_scid' 'int ()'     |     |-ImplicitCastExpr 0x14f815038 <col:32> 'struct l2cap_conn *' <LValueToRValue>     |     | `-DeclRefExpr 0x14f814f18 <col:32> 'struct l2cap_conn *' lvalue ParmVar 0x14f11d048 'conn' 'struct l2cap_conn *'     |     `-ImplicitCastExpr 0x14f815050 <col:38> 'struct l2cap_cmd_hdr *' <LValueToRValue>     |       `-DeclRefExpr 0x14f814fa0 <col:38> 'struct l2cap_cmd_hdr *' lvalue ParmVar 0x14f135428 'cmd' 'struct l2cap_cmd_hdr *'     |-IfStmt 0x14f815120 <line:22:2, line:23:10>     | |-UnaryOperator 0x14f8150d8 <line:22:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14f8150c0 <col:7> 'struct l2cap_chan *' <LValueToRValue>     | |   `-DeclRefExpr 0x14f8150a0 <col:7> 'struct l2cap_chan *' lvalue Var 0x14f135bc8 'chan' 'struct l2cap_chan *'     | `-ReturnStmt 0x14f815110 <line:23:3, col:10>     |   `-IntegerLiteral 0x14f8150f0 <col:10> 'int' 0     |-SwitchStmt 0x14f815190 <line:25:2, line:88:2>     | |-RecoveryExpr 0x14f815170 <line:25:10> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14f139788 <col:18, line:88:2>     |   |-CallExpr 0x14f815358 <line:27:3, col:42> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14f815298 <col:3> 'int ()' Function 0x14f8151e0 'l2cap_conf_rfc_get' 'int ()'     |   | |-DeclRefExpr 0x14f8152b8 <col:22> 'struct l2cap_chan *' lvalue Var 0x14f135bc8 'chan' 'struct l2cap_chan *'     |   | |-RecoveryExpr 0x14f815310 <col:28, col:33> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x14f8152d8 <col:28> 'struct l2cap_conf_rsp *' contains-errors lvalue Var 0x14f1358f8 'rsp' 'struct l2cap_conf_rsp *'     |   | `-DeclRefExpr 0x14f815338 <col:39> 'int' lvalue Var 0x14f135c78 'len' 'int'     |   |-BreakStmt 0x14f815508 <line:29:3>     |   |-IfStmt 0x14f138ac0 <line:34:3, line:53:3>     |   | |-RecoveryExpr 0x14f815800 <line:34:7, col:53> '_Bool' contains-errors     |   | `-CompoundStmt 0x14f138a98 <col:56, line:53:3>     |   |   |-DeclStmt 0x14f815928 <line:35:4, col:16>     |   |   | `-VarDecl 0x14f8158c0 <col:4, col:15> col:9 used buf 'char[64]'     |   |   |-IfStmt 0x14f138378 <line:39:4, line:42:4>     |   |   | |-BinaryOperator 0x14f815b78 <line:39:8, col:14> 'int' '<'     |   |   | | |-ImplicitCastExpr 0x14f815b60 <col:8> 'int' <LValueToRValue>     |   |   | | | `-DeclRefExpr 0x14f815b20 <col:8> 'int' lvalue Var 0x14f135c78 'len' 'int'     |   |   | | `-IntegerLiteral 0x14f815b40 <col:14> 'int' 0     |   |   | `-CompoundStmt 0x14f138360 <col:17, line:42:4>     |   |   |   `-GotoStmt 0x14f138348 <line:41:5, col:10> 'done' 0x14f1382f8     |   |   `-IfStmt 0x14f138a68 <line:44:4, line:52:4> has_else     |   |     |-UnaryOperator 0x14f138410 <line:44:8, col:15> '<dependent type>' contains-errors prefix '!' cannot overflow     |   |     | `-ImplicitCastExpr 0x14f1383f8 <col:9, col:15> '<dependent type>' contains-errors <LValueToRValue>     |   |     |   `-RecoveryExpr 0x14f1383d0 <col:9, col:15> '<dependent type>' contains-errors lvalue     |   |     |     `-DeclRefExpr 0x14f138398 <col:9> 'struct l2cap_chan *' lvalue Var 0x14f135bc8 'chan' 'struct l2cap_chan *'     |   |     |-CompoundStmt 0x14f138628 <col:24, line:47:4>     |   |     | `-CallExpr 0x14f1385e8 <line:45:5, line:46:9> '<dependent type>' contains-errors     |   |     |   |-DeclRefExpr 0x14f138508 <line:45:5> 'int ()' Function 0x14f138450 'l2cap_send_efs_conf_rsp' 'int ()'     |   |     |   |-DeclRefExpr 0x14f138528 <col:29> 'struct l2cap_chan *' lvalue Var 0x14f135bc8 'chan' 'struct l2cap_chan *'     |   |     |   |-DeclRefExpr 0x14f138548 <col:35> 'char[64]' lvalue Var 0x14f8158c0 'buf' 'char[64]'     |   |     |   |-RecoveryExpr 0x14f1385a0 <col:40, col:45> '<dependent type>' contains-errors lvalue     |   |     |   | `-DeclRefExpr 0x14f138568 <col:40> 'struct l2cap_cmd_hdr *' lvalue ParmVar 0x14f135428 'cmd' 'struct l2cap_cmd_hdr *'     |   |     |   `-IntegerLiteral 0x14f1385c8 <line:46:8> 'int' 0     |   |     `-CompoundStmt 0x14f138a50 <line:47:11, line:52:4>     |   |       `-IfStmt 0x14f138a30 <line:48:5, line:51:5>     |   |         |-CallExpr 0x14f138778 <line:48:9, col:29> 'int'     |   |         | |-ImplicitCastExpr 0x14f138760 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |         | | `-DeclRefExpr 0x14f138720 <col:9> 'int ()' Function 0x14f138668 'l2cap_check_efs' 'int ()'     |   |         | `-ImplicitCastExpr 0x14f1387a0 <col:25> 'struct l2cap_chan *' <LValueToRValue>     |   |         |   `-DeclRefExpr 0x14f138740 <col:25> 'struct l2cap_chan *' lvalue Var 0x14f135bc8 'chan' 'struct l2cap_chan *'     |   |         `-CompoundStmt 0x14f138a10 <col:32, line:51:5>     |   |           |-CallExpr 0x14f1388f0 <line:49:6, col:34> 'int'     |   |           | |-ImplicitCastExpr 0x14f1388d8 <col:6> 'int (*)()' <FunctionToPointerDecay>     |   |           | | `-DeclRefExpr 0x14f138898 <col:6> 'int ()' Function 0x14f1387e0 'amp_create_logical_link' 'int ()'     |   |           | `-ImplicitCastExpr 0x14f138918 <col:30> 'struct l2cap_chan *' <LValueToRValue>     |   |           |   `-DeclRefExpr 0x14f1388b8 <col:30> 'struct l2cap_chan *' lvalue Var 0x14f135bc8 'chan' 'struct l2cap_chan *'     |   |           `-BinaryOperator 0x14f1389f0 <line:50:6, col:25> '<dependent type>' contains-errors '='     |   |             |-RecoveryExpr 0x14f138968 <col:6, col:12> '<dependent type>' contains-errors lvalue     |   |             | `-DeclRefExpr 0x14f138930 <col:6> 'struct l2cap_chan *' lvalue Var 0x14f135bc8 'chan' 'struct l2cap_chan *'     |   |             `-RecoveryExpr 0x14f1389c8 <col:20, col:25> '<dependent type>' contains-errors lvalue     |   |               `-DeclRefExpr 0x14f138990 <col:20> 'struct l2cap_cmd_hdr *' lvalue ParmVar 0x14f135428 'cmd' 'struct l2cap_cmd_hdr *'     |   |-GotoStmt 0x14f138ae0 <line:54:3, col:8> 'done' 0x14f1382f8     |   |-IfStmt 0x14f1394a8 <line:57:3, line:80:3>     |   | |-RecoveryExpr 0x14f138b58 <line:57:7, col:29> '_Bool' contains-errors     |   | `-CompoundStmt 0x14f139468 <col:54, line:80:3>     |   |   |-DeclStmt 0x14f138c40 <line:58:4, col:16>     |   |   | `-VarDecl 0x14f138bd8 <col:4, col:15> col:9 used req 'char[64]'     |   |   |-IfStmt 0x14f138e68 <line:60:4, line:63:4>     |   |   | |-RecoveryExpr 0x14f138dd8 <line:60:8, col:56> '_Bool' contains-errors     |   |   | `-CompoundStmt 0x14f138e50 <col:59, line:63:4>     |   |   |   `-GotoStmt 0x14f138e38 <line:62:5, col:10> 'done' 0x14f1382f8     |   |   |-IfStmt 0x14f139070 <line:69:4, line:72:4>     |   |   | |-BinaryOperator 0x14f138fe0 <line:69:8, col:14> 'int' '<'     |   |   | | |-ImplicitCastExpr 0x14f138fc8 <col:8> 'int' <LValueToRValue>     |   |   | | | `-DeclRefExpr 0x14f138f88 <col:8> 'int' lvalue Var 0x14f135c78 'len' 'int'     |   |   | | `-IntegerLiteral 0x14f138fa8 <col:14> 'int' 0     |   |   | `-CompoundStmt 0x14f139058 <col:17, line:72:4>     |   |   |   `-GotoStmt 0x14f139040 <line:71:5, col:10> 'done' 0x14f1382f8     |   |   |-UnaryOperator 0x14f1393f0 <line:76:4, col:22> '<dependent type>' contains-errors postfix '++' cannot overflow     |   |   | `-RecoveryExpr 0x14f1393c8 <col:4, col:10> '<dependent type>' contains-errors lvalue     |   |   |   `-DeclRefExpr 0x14f139390 <col:4> 'struct l2cap_chan *' lvalue Var 0x14f135bc8 'chan' 'struct l2cap_chan *'     |   |   |-IfStmt 0x14f139440 <line:77:4, line:78:10>     |   |   | |-RecoveryExpr 0x14f139408 <line:77:8, col:18> '_Bool' contains-errors     |   |   | `-GotoStmt 0x14f139428 <line:78:5, col:10> 'done' 0x14f1382f8     |   |   `-BreakStmt 0x14f139460 <line:79:4>     |   |-DefaultStmt 0x14f1395f0 <line:82:2, col:9>     |   | `-NullStmt 0x14f1395e8 <col:9>     |   `-GotoStmt 0x14f139770 <line:87:3, col:8> 'done' 0x14f1382f8     |-IfStmt 0x14f139808 <line:90:2, line:91:8>     | |-RecoveryExpr 0x14f1397d0 <line:90:6, col:14> '_Bool' contains-errors     | `-GotoStmt 0x14f1397f0 <line:91:3, col:8> 'done' 0x14f1382f8     |-IfStmt 0x14f13a0e0 <line:95:2, line:106:2>     | |-RecoveryExpr 0x14f139958 <line:95:6, col:50> '_Bool' contains-errors     | `-CompoundStmt 0x14f13a0b8 <col:53, line:106:2>     |   |-CallExpr 0x14f139ab0 <line:96:3, col:23> 'int'     |   | |-ImplicitCastExpr 0x14f139a98 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14f139a58 <col:3> 'int ()' Function 0x14f1399a0 'set_default_fcs' 'int ()'     |   | `-ImplicitCastExpr 0x14f139ad8 <col:19> 'struct l2cap_chan *' <LValueToRValue>     |   |   `-DeclRefExpr 0x14f139a78 <col:19> 'struct l2cap_chan *' lvalue Var 0x14f135bc8 'chan' 'struct l2cap_chan *'     |   |-IfStmt 0x14f139d88 <line:98:3, line:100:30>     |   | |-RecoveryExpr 0x14f139bb0 <line:98:7, line:99:21> '_Bool' contains-errors     |   | `-BinaryOperator 0x14f139d68 <line:100:4, col:30> 'int' '='     |   |   |-DeclRefExpr 0x14f139bd0 <col:4> 'int' lvalue Var 0x14f135da0 'err' 'int'     |   |   `-CallExpr 0x14f139d28 <col:10, col:30> 'int'     |   |     |-ImplicitCastExpr 0x14f139d10 <col:10> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x14f139cd0 <col:10> 'int ()' Function 0x14f139c18 'l2cap_ertm_init' 'int ()'     |   |     `-ImplicitCastExpr 0x14f139d50 <col:26> 'struct l2cap_chan *' <LValueToRValue>     |   |       `-DeclRefExpr 0x14f139cf0 <col:26> 'struct l2cap_chan *' lvalue Var 0x14f135bc8 'chan' 'struct l2cap_chan *'     |   `-IfStmt 0x14f13a088 <line:102:3, line:105:25> has_else     |     |-BinaryOperator 0x14f139e00 <line:102:7, col:13> 'int' '<'     |     | |-ImplicitCastExpr 0x14f139de8 <col:7> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x14f139da8 <col:7> 'int' lvalue Var 0x14f135da0 'err' 'int'     |     | `-IntegerLiteral 0x14f139dc8 <col:13> 'int' 0     |     |-CallExpr 0x14f139ec8 <line:103:4, col:37> 'int'     |     | |-ImplicitCastExpr 0x14f139eb0 <col:4> 'int (*)()' <FunctionToPointerDecay>     |     | | `-DeclRefExpr 0x14f139e20 <col:4> 'int ()' Function 0x14f138200 'l2cap_send_disconn_req' 'int ()'     |     | |-ImplicitCastExpr 0x14f139ef8 <col:27> 'struct l2cap_chan *' <LValueToRValue>     |     | | `-DeclRefExpr 0x14f139e40 <col:27> 'struct l2cap_chan *' lvalue Var 0x14f135bc8 'chan' 'struct l2cap_chan *'     |     | `-UnaryOperator 0x14f139e98 <col:33, col:34> 'int' prefix '-'     |     |   `-ImplicitCastExpr 0x14f139e80 <col:34> 'int' <LValueToRValue>     |     |     `-DeclRefExpr 0x14f139e60 <col:34> 'int' lvalue Var 0x14f135da0 'err' 'int'     |     `-CallExpr 0x14f13a048 <line:105:4, col:25> 'int'     |       |-ImplicitCastExpr 0x14f13a030 <col:4> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14f139ff0 <col:4> 'int ()' Function 0x14f139f38 'l2cap_chan_ready' 'int ()'     |       `-ImplicitCastExpr 0x14f13a070 <col:21> 'struct l2cap_chan *' <LValueToRValue>     |         `-DeclRefExpr 0x14f13a010 <col:21> 'struct l2cap_chan *' lvalue Var 0x14f135bc8 'chan' 'struct l2cap_chan *'     |-LabelStmt 0x14f13a278 <line:108:1, line:109:24> 'done'     | `-CallExpr 0x14f13a238 <col:2, col:24> 'int'     |   |-ImplicitCastExpr 0x14f13a220 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14f13a1e0 <col:2> 'int ()' Function 0x14f13a128 'l2cap_chan_unlock' 'int ()'     |   `-ImplicitCastExpr 0x14f13a260 <col:20> 'struct l2cap_chan *' <LValueToRValue>     |     `-DeclRefExpr 0x14f13a200 <col:20> 'struct l2cap_chan *' lvalue Var 0x14f135bc8 'chan' 'struct l2cap_chan *'     `-ReturnStmt 0x14f13a2d0 <line:110:2, col:9>       `-ImplicitCastExpr 0x14f13a2b8 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x14f13a298 <col:9> 'int' lvalue Var 0x14f135da0 'err' 'int' ","20316":"`-FunctionDecl 0x15500df18  line:1:12 invalid trust_1oid 'int (int *, int *, int)' static   |-ParmVarDecl 0x15500dd28 <col:23, col:35> col:35 invalid trust 'int *'   |-ParmVarDecl 0x15500dda8 <col:42, col:48> col:48 invalid x 'int *'   |-ParmVarDecl 0x15500de28 <col:51, col:55> col:55 used flags 'int'   `-CompoundStmt 0x1550274f0 <line:2:1, line:6:1>     |-IfStmt 0x155027488 <line:3:5, line:4:47>     | |-BinaryOperator 0x15500e1e0 <line:3:9, col:51> 'int' contains-errors '&&'     | | |-CXXDependentScopeMemberExpr 0x15500dff8 <col:9, col:12> '<dependent type>' contains-errors lvalue ->aux     | | | `-RecoveryExpr 0x15500dfd8 <col:9> '<dependent type>' contains-errors lvalue     | | `-ParenExpr 0x15500e1c0 <col:19, col:51> 'int' contains-errors     | |   `-BinaryOperator 0x15500e1a0 <col:20, col:45> 'int' contains-errors '||'     | |     |-CXXDependentScopeMemberExpr 0x15500e0a8 <col:20, col:28> '<dependent type>' contains-errors lvalue ->trust     | |     | `-CXXDependentScopeMemberExpr 0x15500e060 <col:20, col:23> '<dependent type>' contains-errors lvalue ->aux     | |     |   `-RecoveryExpr 0x15500e040 <col:20> '<dependent type>' contains-errors lvalue     | |     `-CXXDependentScopeMemberExpr 0x15500e158 <col:37, col:45> '<dependent type>' contains-errors lvalue ->reject     | |       `-CXXDependentScopeMemberExpr 0x15500e110 <col:37, col:40> '<dependent type>' contains-errors lvalue ->aux     | |         `-RecoveryExpr 0x15500e0f0 <col:37> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x155027478 <line:4:9, col:47>     |   `-CallExpr 0x155027440 <col:16, col:47> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x15500e360 <col:16> 'int ()' Function 0x15500e2a8 'obj_trust' 'int ()'     |     |-CXXDependentScopeMemberExpr 0x15500e3a0 <col:26, col:33> '<dependent type>' contains-errors lvalue ->arg1     |     | `-RecoveryExpr 0x15500e380 <col:26> '<dependent type>' contains-errors lvalue     |     |-RecoveryExpr 0x155027400 <col:39> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x155027420 <col:42> 'int' lvalue ParmVar 0x15500de28 'flags' 'int'     `-ReturnStmt 0x1550274e0 <line:5:5, col:12>       `-RecoveryExpr 0x1550274c0 <col:12> '<dependent type>' contains-errors lvalue ","20609":"`-FunctionDecl 0x139945948  col:19 implicit used strdup 'char *(const char *)' extern   |-ParmVarDecl 0x139945a58 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x139945a00 <<invalid sloc>> Implicit 950 ","21199":"`-FunctionDecl 0x15b80dd98  line:1:1 init_ext2_xattr 'int (void)'   `-CompoundStmt 0x15b80e270 <line:2:1, line:7:1>     |-IfStmt 0x15b80e220 <line:4:2, line:5:11>     | |-UnaryOperator 0x15b80e160 <line:4:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x15b80e148 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x15b80e128 <col:7> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x15b80e210 <line:5:3, col:11>     |   `-UnaryOperator 0x15b80e1f8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x15b80e1e0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x15b80e1c0 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x15b80e260 <line:6:2, col:9>       `-IntegerLiteral 0x15b80e240 <col:9> 'int' 0 ","20426":"`-FunctionDecl 0x12e128750  line:1:13 svm_handle_exit_irqoff 'void (struct kvm_vcpu *)' static   |-ParmVarDecl 0x12e128648 <col:36, col:53> col:53 vcpu 'struct kvm_vcpu *'   `-CompoundStmt 0x12e140a48 <line:2:1, line:3:1> ","20665":"`-FunctionDecl 0x145026c18  col:2 implicit used sprintf 'int (char *, const char *, ...)' extern   |-ParmVarDecl 0x145026d18 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x145026d80 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x145026cc0 <<invalid sloc>> Implicit 906   `-FormatAttr 0x145026df8 <col:2> Implicit printf 2 3 ","20451":"`-FunctionDecl 0x14e80dee8  line:1:10 invalid getBase64Row 'int (char *, int, char *)'   |-ParmVarDecl 0x14e80dcf0 <col:23, col:29> col:29 used ptr 'char *'   |-ParmVarDecl 0x14e80dd70 <col:34, col:38> col:38 used indent 'int'   |-ParmVarDecl 0x14e80ddf0 <col:46, col:50> col:52 'char *'   `-CompoundStmt 0x14e828460 <line:2:5, line:18:5>     |-WhileStmt 0x14e828148 <line:11:9, line:12:15>     | |-CallExpr 0x14e8280b8 <line:11:15, col:30> 'int'     | | |-ImplicitCastExpr 0x14e8280a0 <col:15> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x14e828000 <col:15> 'int ()' Function 0x14e827f48 'cv_isprint' 'int ()'     | | `-ImplicitCastExpr 0x14e8280f8 <col:26, col:27> 'int' <IntegralCast>     | |   `-ImplicitCastExpr 0x14e8280e0 <col:26, col:27> 'char' <LValueToRValue>     | |     `-UnaryOperator 0x14e828058 <col:26, col:27> 'char' lvalue prefix '*' cannot overflow     | |       `-ImplicitCastExpr 0x14e828040 <col:27> 'char *' <LValueToRValue>     | |         `-DeclRefExpr 0x14e828020 <col:27> 'char *' lvalue ParmVar 0x14e80dcf0 'ptr' 'char *'     | `-UnaryOperator 0x14e828130 <line:12:13, col:15> 'char *' prefix '++'     |   `-DeclRefExpr 0x14e828110 <col:15> 'char *' lvalue ParmVar 0x14e80dcf0 'ptr' 'char *'     |-IfStmt 0x14e8283d8 <line:13:9, line:14:37>     | |-BinaryOperator 0x14e828200 <line:13:13, col:21> 'int' '=='     | | |-ImplicitCastExpr 0x14e8281e8 <col:13, col:14> 'int' <IntegralCast>     | | | `-ImplicitCastExpr 0x14e8281d0 <col:13, col:14> 'char' <LValueToRValue>     | | |   `-UnaryOperator 0x14e8281a0 <col:13, col:14> 'char' lvalue prefix '*' cannot overflow     | | |     `-ImplicitCastExpr 0x14e828188 <col:14> 'char *' <LValueToRValue>     | | |       `-DeclRefExpr 0x14e828168 <col:14> 'char *' lvalue ParmVar 0x14e80dcf0 'ptr' 'char *'     | | `-CharacterLiteral 0x14e8281b8 <col:21> 'int' 0     | `-CallExpr 0x14e828398 <line:14:13, col:37> 'int'     |   |-ImplicitCastExpr 0x14e828380 <col:13> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14e828300 <col:13> 'int ()' Function 0x14e828248 'CV_PARSE_ERROR_CPP' 'int ()'     |   `-ImplicitCastExpr 0x14e8283c0 <col:32> 'char *' <ArrayToPointerDecay>     |     `-StringLiteral 0x14e828360 <col:32> 'char[4]' lvalue \"STR\"     `-ReturnStmt 0x14e828450 <line:17:9, col:16>       `-RecoveryExpr 0x14e828430 <col:16> '<dependent type>' contains-errors lvalue ","21009":"`-FunctionDecl 0x14f827658  line:1:1 invalid evbuffer_readln 'int (struct evbuffer *, int *, enum evbuffer_eol_style)'   |-ParmVarDecl 0x14f80e248 <col:17, col:34> col:34 used buffer 'struct evbuffer *'   |-ParmVarDecl 0x14f80e318 <col:42, col:50> col:50 invalid n_read_out 'int *'   |-ParmVarDecl 0x14f827518 <line:2:3, col:27> col:27 invalid eol_style 'enum evbuffer_eol_style'   `-CompoundStmt 0x14f829858 <line:3:1, line:37:1>     |-DeclStmt 0x14f827898 <line:4:2, col:24>     | |-RecordDecl 0x14f827718 <col:2, col:9> col:9 struct evbuffer_ptr     | `-VarDecl 0x14f827818 <col:2, col:22> col:22 referenced invalid it 'struct evbuffer_ptr'     |-DeclStmt 0x14f827930 <line:5:2, col:12>     | `-VarDecl 0x14f8278c8 <col:2, col:8> col:8 used line 'char *'     |-BinaryOperator 0x14f827af8 <line:6:2, col:34> '<dependent type>' contains-errors ','     | |-RecoveryExpr 0x14f827a88 <col:2, col:19> '<dependent type>' contains-errors lvalue     | | |-UnaryExprOrTypeTraitExpr 0x14f827a68 <col:2, col:9> 'unsigned long' contains-errors sizeof     | | | `-RecoveryExpr 0x14f827a48 <col:9> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x14f827980 <col:19> 'int' 0     | `-BinaryOperator 0x14f827ad8 <col:22, col:34> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x14f827ab8 <col:22> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x14f8279e8 <col:34> 'int' 0     |-DeclStmt 0x14f827bd0 <line:7:2, col:21>     | `-VarDecl 0x14f827b30 <col:2, col:17> col:8 used result 'char *' cinit     |   `-RecoveryExpr 0x14f827bb0 <col:17> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14f827dc8 <line:9:2, col:22> 'int'     | |-ImplicitCastExpr 0x14f827db0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14f827d40 <col:2> 'int ()' Function 0x14f827c88 'EVBUFFER_LOCK' 'int ()'     | `-ImplicitCastExpr 0x14f827df0 <col:16> 'struct evbuffer *' <LValueToRValue>     |   `-DeclRefExpr 0x14f827d60 <col:16> 'struct evbuffer *' lvalue ParmVar 0x14f80e248 'buffer' 'struct evbuffer *'     |-IfStmt 0x14f827ee8 <line:11:2, line:13:2>     | |-RecoveryExpr 0x14f827e40 <line:11:6, col:14> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14f827e08 <col:6> 'struct evbuffer *' lvalue ParmVar 0x14f80e248 'buffer' 'struct evbuffer *'     | `-CompoundStmt 0x14f827ed0 <col:28, line:13:2>     |   `-GotoStmt 0x14f827eb8 <line:12:3, col:8> 'done' 0x14f827e68     |-BinaryOperator 0x14f8281d0 <line:15:2, col:64> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14f827f28 <col:2> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14f827f08 <col:2> 'struct evbuffer_ptr' lvalue Var 0x14f827818 'it' 'struct evbuffer_ptr'     | `-CallExpr 0x14f828190 <col:7, col:64> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14f828030 <col:7> 'int ()' Function 0x14f827f78 'evbuffer_search_eol' 'int ()'     |   |-DeclRefExpr 0x14f828050 <col:27> 'struct evbuffer *' lvalue ParmVar 0x14f80e248 'buffer' 'struct evbuffer *'     |   |-RecoveryExpr 0x14f828138 <col:35> '<dependent type>' contains-errors lvalue     |   |-UnaryOperator 0x14f828178 <col:41, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x14f828158 <col:42> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x14f8280b8 <col:55> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14f8282b0 <line:16:2, line:17:8>     | |-BinaryOperator 0x14f828278 <line:16:6, col:15> 'int' contains-errors '<'     | | |-CXXDependentScopeMemberExpr 0x14f828210 <col:6, col:9> '<dependent type>' contains-errors lvalue .pos     | | | `-RecoveryExpr 0x14f8281f0 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x14f828258 <col:15> 'int' 0     | `-GotoStmt 0x14f828298 <line:17:3, col:8> 'done' 0x14f827e68     |-IfStmt 0x14f829280 <line:20:2, line:23:2>     | |-RecoveryExpr 0x14f828f90 <line:20:6, col:41> '_Bool' contains-errors     | `-CompoundStmt 0x14f829260 <col:47, line:23:2>     |   |-CallExpr 0x14f8291e8 <line:21:3, col:29> 'int'     |   | |-ImplicitCastExpr 0x14f8291d0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14f829090 <col:3> 'int ()' Function 0x14f828fd8 'event_warn' 'int ()'     |   | |-ImplicitCastExpr 0x14f829218 <col:14> 'char *' <ArrayToPointerDecay>     |   | | `-StringLiteral 0x14f8290f0 <col:14> 'char[4]' lvalue \"STR\"     |   | `-ImplicitCastExpr 0x14f829230 <col:21> 'const char *' <ArrayToPointerDecay>     |   |   `-PredefinedExpr 0x14f8291b8 <col:21> 'const char[16]' lvalue __func__     |   |     `-StringLiteral 0x14f829190 <col:21> 'const char[16]' lvalue \"evbuffer_readln\"     |   `-GotoStmt 0x14f829248 <line:22:3, col:8> 'done' 0x14f827e68     |-BinaryOperator 0x14f829590 <line:29:2, col:11> 'char *' contains-errors '='     | |-DeclRefExpr 0x14f829538 <col:2> 'char *' contains-errors lvalue Var 0x14f827b30 'result' 'char *'     | `-ImplicitCastExpr 0x14f829578 <col:11> 'char *' <LValueToRValue>     |   `-DeclRefExpr 0x14f829558 <col:11> 'char *' lvalue Var 0x14f8278c8 'line' 'char *'     |-LabelStmt 0x14f829728 <line:30:1, line:31:24> 'done'     | `-CallExpr 0x14f8296e8 <col:2, col:24> 'int'     |   |-ImplicitCastExpr 0x14f8296d0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14f829690 <col:2> 'int ()' Function 0x14f8295d8 'EVBUFFER_UNLOCK' 'int ()'     |   `-ImplicitCastExpr 0x14f829710 <col:18> 'struct evbuffer *' <LValueToRValue>     |     `-DeclRefExpr 0x14f8296b0 <col:18> 'struct evbuffer *' lvalue ParmVar 0x14f80e248 'buffer' 'struct evbuffer *'     `-ReturnStmt 0x14f829848 <line:36:2, col:9>       `-ImplicitCastExpr 0x14f829830 <col:9> 'int' contains-errors <PointerToIntegral>         `-ImplicitCastExpr 0x14f829818 <col:9> 'char *' contains-errors <LValueToRValue>           `-DeclRefExpr 0x14f8297f8 <col:9> 'char *' contains-errors lvalue Var 0x14f827b30 'result' 'char *' ","20697":"`-FunctionDecl 0x15b80e358  line:1:1 thisudp 'int (struct dns_transmit *)'   |-ParmVarDecl 0x15b80e248 <col:10, col:31> col:31 used d 'struct dns_transmit *'   `-CompoundStmt 0x15b1231e0 <line:2:1, line:54:1>     |-DeclStmt 0x15b826720 <line:3:5, col:26>     | `-VarDecl 0x15b826668 <col:5, col:22> col:17 used ip 'const char *' cinit     |   `-RecoveryExpr 0x15b826700 <col:22> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15b8268d8 <line:5:5, col:18> 'int'     | |-ImplicitCastExpr 0x15b8268c0 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x15b826850 <col:5> 'int ()' Function 0x15b826798 'socketfree' 'int ()'     | `-ImplicitCastExpr 0x15b826900 <col:17> 'struct dns_transmit *' <LValueToRValue>     |   `-DeclRefExpr 0x15b826870 <col:17> 'struct dns_transmit *' lvalue ParmVar 0x15b80e248 'd' 'struct dns_transmit *'     |-WhileStmt 0x15b1230e0 <line:7:5, line:50:5>     | |-BinaryOperator 0x15b826998 <line:7:12, col:25> 'int' contains-errors '<'     | | |-RecoveryExpr 0x15b826950 <col:12, col:15> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x15b826918 <col:12> 'struct dns_transmit *' lvalue ParmVar 0x15b80e248 'd' 'struct dns_transmit *'     | | `-IntegerLiteral 0x15b826978 <col:25> 'int' 4     | `-CompoundStmt 0x15b1230b8 <line:8:5, line:50:5>     |   |-ForStmt 0x15b122f68 <line:9:9, line:46:9>     |   | |-<<<NULL>>>     |   | |-<<<NULL>>>     |   | |-BinaryOperator 0x15b826a38 <line:9:16, col:31> 'int' contains-errors '<'     |   | | |-RecoveryExpr 0x15b8269f0 <col:16, col:19> '<dependent type>' contains-errors lvalue     |   | | | `-DeclRefExpr 0x15b8269b8 <col:16> 'struct dns_transmit *' lvalue ParmVar 0x15b80e248 'd' 'struct dns_transmit *'     |   | | `-IntegerLiteral 0x15b826a18 <col:31> 'int' 16     |   | |-UnaryOperator 0x15b826ab8 <col:35, col:40> '<dependent type>' contains-errors prefix '++' cannot overflow     |   | | `-RecoveryExpr 0x15b826a90 <col:37, col:40> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x15b826a58 <col:37> 'struct dns_transmit *' lvalue ParmVar 0x15b80e248 'd' 'struct dns_transmit *'     |   | `-CompoundStmt 0x15b122f48 <line:10:9, line:46:9>     |   |   |-BinaryOperator 0x15b826c10 <line:11:13, col:38> 'const char *' contains-errors '='     |   |   | |-DeclRefExpr 0x15b826ad0 <col:13> 'const char *' contains-errors lvalue Var 0x15b826668 'ip' 'const char *'     |   |   | `-BinaryOperator 0x15b826bf0 <col:18, col:38> '<dependent type>' contains-errors '+'     |   |   |   |-RecoveryExpr 0x15b826b28 <col:18, col:21> '<dependent type>' contains-errors lvalue     |   |   |   | `-DeclRefExpr 0x15b826af0 <col:18> 'struct dns_transmit *' lvalue ParmVar 0x15b80e248 'd' 'struct dns_transmit *'     |   |   |   `-BinaryOperator 0x15b826bd0 <col:31, col:38> '<dependent type>' contains-errors '*'     |   |   |     |-IntegerLiteral 0x15b826b50 <col:31> 'int' 4     |   |   |     `-RecoveryExpr 0x15b826ba8 <col:35, col:38> '<dependent type>' contains-errors lvalue     |   |   |       `-DeclRefExpr 0x15b826b70 <col:35> 'struct dns_transmit *' lvalue ParmVar 0x15b80e248 'd' 'struct dns_transmit *'     |   |   `-IfStmt 0x15b122f28 <line:12:13, line:45:13>     |   |     |-CallExpr 0x15b826de8 <line:12:17, col:40> 'int' contains-errors     |   |     | |-ImplicitCastExpr 0x15b826dd0 <col:17> 'int (*)()' <FunctionToPointerDecay>     |   |     | | `-DeclRefExpr 0x15b826d10 <col:17> 'int ()' Function 0x15b826c58 'byte_diff' 'int ()'     |   |     | |-ImplicitCastExpr 0x15b826e20 <col:28> 'const char *' contains-errors <LValueToRValue>     |   |     | | `-DeclRefExpr 0x15b826d30 <col:28> 'const char *' contains-errors lvalue Var 0x15b826668 'ip' 'const char *'     |   |     | |-IntegerLiteral 0x15b826d50 <col:32> 'int' 4     |   |     | `-ImplicitCastExpr 0x15b826e38 <col:35> 'char *' <ArrayToPointerDecay>     |   |     |   `-StringLiteral 0x15b826db0 <col:35> 'char[4]' lvalue \"STR\"     |   |     `-CompoundStmt 0x15b122ee0 <line:13:13, line:45:13>     |   |       |-BinaryOperator 0x15b827068 <line:14:17, col:46> '<dependent type>' contains-errors '='     |   |       | |-ArraySubscriptExpr 0x15b826ee8 <col:17, col:27> '<dependent type>' contains-errors lvalue     |   |       | | |-ImplicitCastExpr 0x15b826ed0 <col:17, col:20> '<dependent type>' contains-errors <LValueToRValue>     |   |       | | | `-RecoveryExpr 0x15b826e88 <col:17, col:20> '<dependent type>' contains-errors lvalue     |   |       | | |   `-DeclRefExpr 0x15b826e50 <col:17> 'struct dns_transmit *' lvalue ParmVar 0x15b80e248 'd' 'struct dns_transmit *'     |   |       | | `-IntegerLiteral 0x15b826eb0 <col:26> 'int' 2     |   |       | `-CallExpr 0x15b827040 <col:31, col:46> 'int'     |   |       |   |-ImplicitCastExpr 0x15b827028 <col:31> 'int (*)()' <FunctionToPointerDecay>     |   |       |   | `-DeclRefExpr 0x15b826fe8 <col:31> 'int ()' Function 0x15b826f30 'dns_random' 'int ()'     |   |       |   `-IntegerLiteral 0x15b827008 <col:43> 'int' 256     |   |       |-BinaryOperator 0x15b8271c0 <line:15:17, col:46> '<dependent type>' contains-errors '='     |   |       | |-ArraySubscriptExpr 0x15b827120 <col:17, col:27> '<dependent type>' contains-errors lvalue     |   |       | | |-ImplicitCastExpr 0x15b827108 <col:17, col:20> '<dependent type>' contains-errors <LValueToRValue>     |   |       | | | `-RecoveryExpr 0x15b8270c0 <col:17, col:20> '<dependent type>' contains-errors lvalue     |   |       | | |   `-DeclRefExpr 0x15b827088 <col:17> 'struct dns_transmit *' lvalue ParmVar 0x15b80e248 'd' 'struct dns_transmit *'     |   |       | | `-IntegerLiteral 0x15b8270e8 <col:26> 'int' 3     |   |       | `-CallExpr 0x15b827198 <col:31, col:46> 'int'     |   |       |   |-ImplicitCastExpr 0x15b827180 <col:31> 'int (*)()' <FunctionToPointerDecay>     |   |       |   | `-DeclRefExpr 0x15b827140 <col:31> 'int ()' Function 0x15b826f30 'dns_random' 'int ()'     |   |       |   `-IntegerLiteral 0x15b827160 <col:43> 'int' 256     |   |       |-BinaryOperator 0x15b8273b8 <line:17:17, col:41> '<dependent type>' contains-errors '='     |   |       | |-RecoveryExpr 0x15b827218 <col:17, col:20> '<dependent type>' contains-errors lvalue     |   |       | | `-DeclRefExpr 0x15b8271e0 <col:17> 'struct dns_transmit *' lvalue ParmVar 0x15b80e248 'd' 'struct dns_transmit *'     |   |       | `-BinaryOperator 0x15b827398 <col:25, col:41> 'int' '+'     |   |       |   |-IntegerLiteral 0x15b827240 <col:25> 'int' 1     |   |       |   `-CallExpr 0x15b827378 <col:29, col:41> 'int'     |   |       |     `-ImplicitCastExpr 0x15b827360 <col:29> 'int (*)()' <FunctionToPointerDecay>     |   |       |       `-DeclRefExpr 0x15b827340 <col:29> 'int ()' Function 0x15b827288 'socket_udp' 'int ()'     |   |       |-IfStmt 0x15b829248 <line:18:17, line:22:17>     |   |       | |-UnaryOperator 0x15b827450 <line:18:21, col:25> '<dependent type>' contains-errors prefix '!' cannot overflow     |   |       | | `-ImplicitCastExpr 0x15b827438 <col:22, col:25> '<dependent type>' contains-errors <LValueToRValue>     |   |       | |   `-RecoveryExpr 0x15b827410 <col:22, col:25> '<dependent type>' contains-errors lvalue     |   |       | |     `-DeclRefExpr 0x15b8273d8 <col:22> 'struct dns_transmit *' lvalue ParmVar 0x15b80e248 'd' 'struct dns_transmit *'     |   |       | `-CompoundStmt 0x15b829228 <line:19:17, line:22:17>     |   |       |   |-CallExpr 0x15b8275a0 <line:20:21, col:41> 'int'     |   |       |   | |-ImplicitCastExpr 0x15b827588 <col:21> 'int (*)()' <FunctionToPointerDecay>     |   |       |   | | `-DeclRefExpr 0x15b827548 <col:21> 'int ()' Function 0x15b827490 'dns_transmit_free' 'int ()'     |   |       |   | `-ImplicitCastExpr 0x15b8275c8 <col:40> 'struct dns_transmit *' <LValueToRValue>     |   |       |   |   `-DeclRefExpr 0x15b827568 <col:40> 'struct dns_transmit *' lvalue ParmVar 0x15b80e248 'd' 'struct dns_transmit *'     |   |       |   `-ReturnStmt 0x15b829218 <line:21:21, col:29>     |   |       |     `-UnaryOperator 0x15b829200 <col:28, col:29> 'int' prefix '-'     |   |       |       `-IntegerLiteral 0x15b8275e0 <col:29> 'int' 1     |   |       |-IfStmt 0x15b829538 <line:23:17, line:27:17>     |   |       | |-BinaryOperator 0x15b829418 <line:23:21, col:40> 'int' '=='     |   |       | | |-CallExpr 0x15b8293a0 <col:21, col:34> 'int'     |   |       | | | |-ImplicitCastExpr 0x15b829388 <col:21> 'int (*)()' <FunctionToPointerDecay>     |   |       | | | | `-DeclRefExpr 0x15b829348 <col:21> 'int ()' Function 0x15b829290 'randombind' 'int ()'     |   |       | | | `-ImplicitCastExpr 0x15b8293c8 <col:33> 'struct dns_transmit *' <LValueToRValue>     |   |       | | |   `-DeclRefExpr 0x15b829368 <col:33> 'struct dns_transmit *' lvalue ParmVar 0x15b80e248 'd' 'struct dns_transmit *'     |   |       | | `-UnaryOperator 0x15b829400 <col:39, col:40> 'int' prefix '-'     |   |       | |   `-IntegerLiteral 0x15b8293e0 <col:40> 'int' 1     |   |       | `-CompoundStmt 0x15b829518 <line:24:17, line:27:17>     |   |       |   |-CallExpr 0x15b829490 <line:25:21, col:41> 'int'     |   |       |   | |-ImplicitCastExpr 0x15b829478 <col:21> 'int (*)()' <FunctionToPointerDecay>     |   |       |   | | `-DeclRefExpr 0x15b829438 <col:21> 'int ()' Function 0x15b827490 'dns_transmit_free' 'int ()'     |   |       |   | `-ImplicitCastExpr 0x15b8294b8 <col:40> 'struct dns_transmit *' <LValueToRValue>     |   |       |   |   `-DeclRefExpr 0x15b829458 <col:40> 'struct dns_transmit *' lvalue ParmVar 0x15b80e248 'd' 'struct dns_transmit *'     |   |       |   `-ReturnStmt 0x15b829508 <line:26:21, col:29>     |   |       |     `-UnaryOperator 0x15b8294f0 <col:28, col:29> 'int' prefix '-'     |   |       |       `-IntegerLiteral 0x15b8294d0 <col:29> 'int' 1     |   |       |-IfStmt 0x15b122e28 <line:29:17, line:43:17>     |   |       | |-BinaryOperator 0x15b829790 <line:29:21, col:60> 'int' contains-errors '=='     |   |       | | |-CallExpr 0x15b829738 <col:21, col:55> '<dependent type>' contains-errors     |   |       | | | |-DeclRefExpr 0x15b829638 <col:21> 'int ()' Function 0x15b829580 'socket_connect4' 'int ()'     |   |       | | | |-BinaryOperator 0x15b8296d8 <col:38, col:46> '<dependent type>' contains-errors '-'     |   |       | | | | |-RecoveryExpr 0x15b829690 <col:38, col:41> '<dependent type>' contains-errors lvalue     |   |       | | | | | `-DeclRefExpr 0x15b829658 <col:38> 'struct dns_transmit *' lvalue ParmVar 0x15b80e248 'd' 'struct dns_transmit *'     |   |       | | | | `-IntegerLiteral 0x15b8296b8 <col:46> 'int' 1     |   |       | | | |-DeclRefExpr 0x15b8296f8 <col:49> 'const char *' contains-errors lvalue Var 0x15b826668 'ip' 'const char *'     |   |       | | | `-IntegerLiteral 0x15b829718 <col:53> 'int' 53     |   |       | | `-IntegerLiteral 0x15b829770 <col:60> 'int' 0     |   |       | `-CompoundStmt 0x15b122e10 <line:30:17, line:43:17>     |   |       |   `-IfStmt 0x15b122df0 <line:31:21, line:42:21>     |   |       |     |-BinaryOperator 0x15b829b90 <line:31:25, line:32:46> 'int' contains-errors '=='     |   |       |     | |-CallExpr 0x15b829ab0 <line:31:25, col:74> '<dependent type>' contains-errors     |   |       |     | | |-DeclRefExpr 0x15b829890 <col:25> 'int ()' Function 0x15b8297d8 'send' 'int ()'     |   |       |     | | |-BinaryOperator 0x15b829930 <col:31, col:39> '<dependent type>' contains-errors '-'     |   |       |     | | | |-RecoveryExpr 0x15b8298e8 <col:31, col:34> '<dependent type>' contains-errors lvalue     |   |       |     | | | | `-DeclRefExpr 0x15b8298b0 <col:31> 'struct dns_transmit *' lvalue ParmVar 0x15b80e248 'd' 'struct dns_transmit *'     |   |       |     | | | `-IntegerLiteral 0x15b829910 <col:39> 'int' 1     |   |       |     | | |-BinaryOperator 0x15b8299d0 <col:42, col:53> '<dependent type>' contains-errors '+'     |   |       |     | | | |-RecoveryExpr 0x15b829988 <col:42, col:45> '<dependent type>' contains-errors lvalue     |   |       |     | | | | `-DeclRefExpr 0x15b829950 <col:42> 'struct dns_transmit *' lvalue ParmVar 0x15b80e248 'd' 'struct dns_transmit *'     |   |       |     | | | `-IntegerLiteral 0x15b8299b0 <col:53> 'int' 2     |   |       |     | | |-BinaryOperator 0x15b829a70 <col:56, col:70> '<dependent type>' contains-errors '-'     |   |       |     | | | |-RecoveryExpr 0x15b829a28 <col:56, col:59> '<dependent type>' contains-errors lvalue     |   |       |     | | | | `-DeclRefExpr 0x15b8299f0 <col:56> 'struct dns_transmit *' lvalue ParmVar 0x15b80e248 'd' 'struct dns_transmit *'     |   |       |     | | | `-IntegerLiteral 0x15b829a50 <col:70> 'int' 2     |   |       |     | | `-IntegerLiteral 0x15b829a90 <col:73> 'int' 0     |   |       |     | `-BinaryOperator 0x15b829b70 <line:32:32, col:46> '<dependent type>' contains-errors '-'     |   |       |     |   |-RecoveryExpr 0x15b829b28 <col:32, col:35> '<dependent type>' contains-errors lvalue     |   |       |     |   | `-DeclRefExpr 0x15b829af0 <col:32> 'struct dns_transmit *' lvalue ParmVar 0x15b80e248 'd' 'struct dns_transmit *'     |   |       |     |   `-IntegerLiteral 0x15b829b50 <col:46> 'int' 2     |   |       |     `-CompoundStmt 0x15b122db8 <line:33:21, line:42:21>     |   |       |       |-DeclStmt 0x15b829d28 <line:34:25, col:40>     |   |       |       | |-RecordDecl 0x15b829bb0 <col:25, col:32> col:32 struct taia     |   |       |       | `-VarDecl 0x15b829ca8 <col:25, col:37> col:37 invalid now 'struct taia'     |   |       |       |-CallExpr 0x15b829e78 <line:36:25, col:39> '<dependent type>' contains-errors     |   |       |       | |-DeclRefExpr 0x15b829e20 <col:25> 'int ()' Function 0x15b829d68 'taia_now' 'int ()'     |   |       |       | `-UnaryOperator 0x15b829e60 <col:35, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |       |       |   `-RecoveryExpr 0x15b829e40 <col:36> '<dependent type>' contains-errors lvalue     |   |       |       |-CallExpr 0x15b122cb0 <line:38:25, col:67> '<dependent type>' contains-errors     |   |       |       | |-DeclRefExpr 0x15b82a158 <col:25> 'int ()' Function 0x15b82a0a0 'taia_add' 'int ()'     |   |       |       | |-UnaryOperator 0x15b82a1d8 <col:35, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |       |       | | `-RecoveryExpr 0x15b82a1b0 <col:36, col:39> '<dependent type>' contains-errors lvalue     |   |       |       | |   `-DeclRefExpr 0x15b82a178 <col:36> 'struct dns_transmit *' lvalue ParmVar 0x15b80e248 'd' 'struct dns_transmit *'     |   |       |       | |-UnaryOperator 0x15b122c60 <col:49, col:53> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |       |       | | `-RecoveryExpr 0x15b122c38 <col:50, col:53> '<dependent type>' contains-errors lvalue     |   |       |       | |   `-DeclRefExpr 0x15b122c00 <col:50> 'struct dns_transmit *' lvalue ParmVar 0x15b80e248 'd' 'struct dns_transmit *'     |   |       |       | `-UnaryOperator 0x15b122c98 <col:63, col:64> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |       |       |   `-RecoveryExpr 0x15b122c78 <col:64> '<dependent type>' contains-errors lvalue     |   |       |       |-BinaryOperator 0x15b122d68 <line:39:25, col:39> '<dependent type>' contains-errors '='     |   |       |       | |-RecoveryExpr 0x15b122d20 <col:25, col:28> '<dependent type>' contains-errors lvalue     |   |       |       | | `-DeclRefExpr 0x15b122ce8 <col:25> 'struct dns_transmit *' lvalue ParmVar 0x15b80e248 'd' 'struct dns_transmit *'     |   |       |       | `-IntegerLiteral 0x15b122d48 <col:39> 'int' 0     |   |       |       `-ReturnStmt 0x15b122da8 <line:41:25, col:32>     |   |       |         `-IntegerLiteral 0x15b122d88 <col:32> 'int' 0     |   |       `-CallExpr 0x15b122ea0 <line:44:17, col:30> 'int'     |   |         |-ImplicitCastExpr 0x15b122e88 <col:17> 'int (*)()' <FunctionToPointerDecay>     |   |         | `-DeclRefExpr 0x15b122e48 <col:17> 'int ()' Function 0x15b826798 'socketfree' 'int ()'     |   |         `-ImplicitCastExpr 0x15b122ec8 <col:29> 'struct dns_transmit *' <LValueToRValue>     |   |           `-DeclRefExpr 0x15b122e68 <col:29> 'struct dns_transmit *' lvalue ParmVar 0x15b80e248 'd' 'struct dns_transmit *'     |   |-UnaryOperator 0x15b123000 <line:48:9, col:14> '<dependent type>' contains-errors prefix '++' cannot overflow     |   | `-RecoveryExpr 0x15b122fd8 <col:11, col:14> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x15b122fa0 <col:11> 'struct dns_transmit *' lvalue ParmVar 0x15b80e248 'd' 'struct dns_transmit *'     |   `-BinaryOperator 0x15b123098 <line:49:9, col:24> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x15b123050 <col:9, col:12> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x15b123018 <col:9> 'struct dns_transmit *' lvalue ParmVar 0x15b80e248 'd' 'struct dns_transmit *'     |     `-IntegerLiteral 0x15b123078 <col:24> 'int' 0     |-CallExpr 0x15b123158 <line:52:5, col:25> 'int'     | |-ImplicitCastExpr 0x15b123140 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x15b123100 <col:5> 'int ()' Function 0x15b827490 'dns_transmit_free' 'int ()'     | `-ImplicitCastExpr 0x15b123180 <col:24> 'struct dns_transmit *' <LValueToRValue>     |   `-DeclRefExpr 0x15b123120 <col:24> 'struct dns_transmit *' lvalue ParmVar 0x15b80e248 'd' 'struct dns_transmit *'     `-ReturnStmt 0x15b1231d0 <line:53:5, col:13>       `-UnaryOperator 0x15b1231b8 <col:12, col:13> 'int' prefix '-'         `-IntegerLiteral 0x15b123198 <col:13> 'int' 1 ","21027":"`-FunctionDecl 0x144912d90  line:1:6 OpenSSL_add_all_ciphers 'void (void)'   `-CompoundStmt 0x144936128 <line:2:2, line:163:2>     |-CallExpr 0x144913150 <line:5:2, col:30> 'int'     | |-ImplicitCastExpr 0x144913138 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x144912fb0 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x144913118 <col:17, col:29> 'int'     |   `-ImplicitCastExpr 0x144913100 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x1449130b0 <col:17> 'int ()' Function 0x144912ff8 'EVP_des_cfb' 'int ()'     |-CallExpr 0x1449132e8 <line:6:2, col:31> 'int'     | |-ImplicitCastExpr 0x1449132d0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x144913178 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x1449132b0 <col:17, col:30> 'int'     |   `-ImplicitCastExpr 0x144913298 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x144913278 <col:17> 'int ()' Function 0x1449131c0 'EVP_des_cfb1' 'int ()'     |-CallExpr 0x14492c480 <line:7:2, col:31> 'int'     | |-ImplicitCastExpr 0x14492c468 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x144913310 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x14492c448 <col:17, col:30> 'int'     |   `-ImplicitCastExpr 0x14492c430 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x14492c410 <col:17> 'int ()' Function 0x144913358 'EVP_des_cfb8' 'int ()'     |-CallExpr 0x14492c618 <line:8:2, col:34> 'int'     | |-ImplicitCastExpr 0x14492c600 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14492c4a8 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x14492c5e0 <col:17, col:33> 'int'     |   `-ImplicitCastExpr 0x14492c5c8 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x14492c5a8 <col:17> 'int ()' Function 0x14492c4f0 'EVP_des_ede_cfb' 'int ()'     |-CallExpr 0x14492c7b0 <line:9:2, col:35> 'int'     | |-ImplicitCastExpr 0x14492c798 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14492c640 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x14492c778 <col:17, col:34> 'int'     |   `-ImplicitCastExpr 0x14492c760 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x14492c740 <col:17> 'int ()' Function 0x14492c688 'EVP_des_ede3_cfb' 'int ()'     |-CallExpr 0x14492c948 <line:10:2, col:36> 'int'     | |-ImplicitCastExpr 0x14492c930 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14492c7d8 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x14492c910 <col:17, col:35> 'int'     |   `-ImplicitCastExpr 0x14492c8f8 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x14492c8d8 <col:17> 'int ()' Function 0x14492c820 'EVP_des_ede3_cfb1' 'int ()'     |-CallExpr 0x14492cae0 <line:11:2, col:36> 'int'     | |-ImplicitCastExpr 0x14492cac8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14492c970 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x14492caa8 <col:17, col:35> 'int'     |   `-ImplicitCastExpr 0x14492ca90 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x14492ca70 <col:17> 'int ()' Function 0x14492c9b8 'EVP_des_ede3_cfb8' 'int ()'     |-CallExpr 0x14492cc78 <line:13:2, col:30> 'int'     | |-ImplicitCastExpr 0x14492cc60 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14492cb08 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x14492cc40 <col:17, col:29> 'int'     |   `-ImplicitCastExpr 0x14492cc28 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x14492cc08 <col:17> 'int ()' Function 0x14492cb50 'EVP_des_ofb' 'int ()'     |-CallExpr 0x14492ce10 <line:14:2, col:34> 'int'     | |-ImplicitCastExpr 0x14492cdf8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14492cca0 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x14492cdd8 <col:17, col:33> 'int'     |   `-ImplicitCastExpr 0x14492cdc0 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x14492cda0 <col:17> 'int ()' Function 0x14492cce8 'EVP_des_ede_ofb' 'int ()'     |-CallExpr 0x14492cfa8 <line:15:2, col:35> 'int'     | |-ImplicitCastExpr 0x14492cf90 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14492ce38 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x14492cf70 <col:17, col:34> 'int'     |   `-ImplicitCastExpr 0x14492cf58 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x14492cf38 <col:17> 'int ()' Function 0x14492ce80 'EVP_des_ede3_ofb' 'int ()'     |-CallExpr 0x14492d140 <line:17:2, col:31> 'int'     | |-ImplicitCastExpr 0x14492d128 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14492cfd0 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x14492d108 <col:17, col:30> 'int'     |   `-ImplicitCastExpr 0x14492d0f0 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x14492d0d0 <col:17> 'int ()' Function 0x14492d018 'EVP_desx_cbc' 'int ()'     |-CallExpr 0x14492d348 <line:18:2, col:40> 'int'     | |-ImplicitCastExpr 0x14492d330 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14492d248 <col:2> 'int ()' Function 0x14492d190 'EVP_add_cipher_alias' 'int ()'     | |-ImplicitCastExpr 0x14492d378 <col:23> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14492d310 <col:23> 'int ()' Function 0x14492d018 'EVP_desx_cbc' 'int ()'     | `-ImplicitCastExpr 0x14492d390 <col:35> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x14492d2c0 <col:35> 'char[4]' lvalue \"STR\"     |-CallExpr 0x14492d468 <line:19:2, col:40> 'int'     | |-ImplicitCastExpr 0x14492d450 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14492d3a8 <col:2> 'int ()' Function 0x14492d190 'EVP_add_cipher_alias' 'int ()'     | |-ImplicitCastExpr 0x14492d498 <col:23> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14492d430 <col:23> 'int ()' Function 0x14492d018 'EVP_desx_cbc' 'int ()'     | `-ImplicitCastExpr 0x14492d4b0 <col:35> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x14492d3e0 <col:35> 'char[4]' lvalue \"STR\"     |-CallExpr 0x14492d638 <line:21:2, col:30> 'int'     | |-ImplicitCastExpr 0x14492d620 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14492d4c8 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x14492d600 <col:17, col:29> 'int'     |   `-ImplicitCastExpr 0x14492d5e8 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x14492d5c8 <col:17> 'int ()' Function 0x14492d510 'EVP_des_cbc' 'int ()'     |-CallExpr 0x14492d720 <line:22:2, col:39> 'int'     | |-ImplicitCastExpr 0x14492d708 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14492d660 <col:2> 'int ()' Function 0x14492d190 'EVP_add_cipher_alias' 'int ()'     | |-ImplicitCastExpr 0x14492d750 <col:23> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14492d6e8 <col:23> 'int ()' Function 0x14492d510 'EVP_des_cbc' 'int ()'     | `-ImplicitCastExpr 0x14492d768 <col:34> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x14492d698 <col:34> 'char[4]' lvalue \"STR\"     |-CallExpr 0x14492d840 <line:23:2, col:39> 'int'     | |-ImplicitCastExpr 0x14492d828 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14492d780 <col:2> 'int ()' Function 0x14492d190 'EVP_add_cipher_alias' 'int ()'     | |-ImplicitCastExpr 0x14492d870 <col:23> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14492d808 <col:23> 'int ()' Function 0x14492d510 'EVP_des_cbc' 'int ()'     | `-ImplicitCastExpr 0x14492d888 <col:34> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x14492d7b8 <col:34> 'char[4]' lvalue \"STR\"     |-CallExpr 0x14492da10 <line:24:2, col:34> 'int'     | |-ImplicitCastExpr 0x14492d9f8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14492d8a0 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x14492d9d8 <col:17, col:33> 'int'     |   `-ImplicitCastExpr 0x14492d9c0 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x14492d9a0 <col:17> 'int ()' Function 0x14492d8e8 'EVP_des_ede_cbc' 'int ()'     |-CallExpr 0x14492dba8 <line:25:2, col:35> 'int'     | |-ImplicitCastExpr 0x14492db90 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14492da38 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x14492db70 <col:17, col:34> 'int'     |   `-ImplicitCastExpr 0x14492db58 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x14492db38 <col:17> 'int ()' Function 0x14492da80 'EVP_des_ede3_cbc' 'int ()'     |-CallExpr 0x14492ddc0 <line:29:2, col:30> 'int'     | |-ImplicitCastExpr 0x14492dda8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14492dc50 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x14492dd88 <col:17, col:29> 'int'     |   `-ImplicitCastExpr 0x14492dd70 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x14492dd50 <col:17> 'int ()' Function 0x14492dc98 'EVP_des_ecb' 'int ()'     |-CallExpr 0x14492df58 <line:30:2, col:30> 'int'     | |-ImplicitCastExpr 0x14492df40 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14492dde8 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x14492df20 <col:17, col:29> 'int'     |   `-ImplicitCastExpr 0x14492df08 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x14492dee8 <col:17> 'int ()' Function 0x14492de30 'EVP_des_ede' 'int ()'     |-CallExpr 0x14492e0f0 <line:31:2, col:31> 'int'     | |-ImplicitCastExpr 0x14492e0d8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14492df80 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x14492e0b8 <col:17, col:30> 'int'     |   `-ImplicitCastExpr 0x14492e0a0 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x14492e080 <col:17> 'int ()' Function 0x14492dfc8 'EVP_des_ede3' 'int ()'     |-CallExpr 0x14492e288 <line:35:2, col:26> 'int'     | |-ImplicitCastExpr 0x14492e270 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14492e118 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x14492e250 <col:17, col:25> 'int'     |   `-ImplicitCastExpr 0x14492e238 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x14492e218 <col:17> 'int ()' Function 0x14492e160 'EVP_rc4' 'int ()'     |-CallExpr 0x14492e438 <line:36:2, col:29> 'int'     | |-ImplicitCastExpr 0x14492e420 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14492e2b0 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x14492e400 <col:17, col:28> 'int'     |   `-ImplicitCastExpr 0x14492e3d0 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x14492e3b0 <col:17> 'int ()' Function 0x14492e2f8 'EVP_rc4_40' 'int ()'     |-CallExpr 0x14492e5d0 <line:40:2, col:31> 'int'     | |-ImplicitCastExpr 0x14492e5b8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14492e460 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x14492e598 <col:17, col:30> 'int'     |   `-ImplicitCastExpr 0x14492e580 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x14492e560 <col:17> 'int ()' Function 0x14492e4a8 'EVP_idea_ecb' 'int ()'     |-CallExpr 0x14492e768 <line:41:2, col:31> 'int'     | |-ImplicitCastExpr 0x14492e750 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14492e5f8 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x14492e730 <col:17, col:30> 'int'     |   `-ImplicitCastExpr 0x14492e718 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x14492e6f8 <col:17> 'int ()' Function 0x14492e640 'EVP_idea_cfb' 'int ()'     |-CallExpr 0x14492e900 <line:42:2, col:31> 'int'     | |-ImplicitCastExpr 0x14492e8e8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14492e790 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x14492e8c8 <col:17, col:30> 'int'     |   `-ImplicitCastExpr 0x14492e8b0 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x14492e890 <col:17> 'int ()' Function 0x14492e7d8 'EVP_idea_ofb' 'int ()'     |-CallExpr 0x14492ea98 <line:43:2, col:31> 'int'     | |-ImplicitCastExpr 0x14492ea80 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14492e928 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x14492ea60 <col:17, col:30> 'int'     |   `-ImplicitCastExpr 0x14492ea48 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x14492ea28 <col:17> 'int ()' Function 0x14492e970 'EVP_idea_cbc' 'int ()'     |-CallExpr 0x14492ecb0 <line:49:2, col:31> 'int'     | |-ImplicitCastExpr 0x14492ec98 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14492eb40 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x14492ec78 <col:17, col:30> 'int'     |   `-ImplicitCastExpr 0x14492ec60 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x14492ec40 <col:17> 'int ()' Function 0x14492eb88 'EVP_seed_ecb' 'int ()'     |-CallExpr 0x14492ee48 <line:50:2, col:31> 'int'     | |-ImplicitCastExpr 0x14492ee30 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14492ecd8 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x14492ee10 <col:17, col:30> 'int'     |   `-ImplicitCastExpr 0x14492edf8 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x14492edd8 <col:17> 'int ()' Function 0x14492ed20 'EVP_seed_cfb' 'int ()'     |-CallExpr 0x14492efe0 <line:51:2, col:31> 'int'     | |-ImplicitCastExpr 0x14492efc8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14492ee70 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x14492efa8 <col:17, col:30> 'int'     |   `-ImplicitCastExpr 0x14492ef90 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x14492ef70 <col:17> 'int ()' Function 0x14492eeb8 'EVP_seed_ofb' 'int ()'     |-CallExpr 0x14492f178 <line:52:2, col:31> 'int'     | |-ImplicitCastExpr 0x14492f160 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14492f008 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x14492f140 <col:17, col:30> 'int'     |   `-ImplicitCastExpr 0x14492f128 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x14492f108 <col:17> 'int ()' Function 0x14492f050 'EVP_seed_cbc' 'int ()'     |-CallExpr 0x14492f390 <line:58:2, col:30> 'int'     | |-ImplicitCastExpr 0x14492f378 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14492f220 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x14492f358 <col:17, col:29> 'int'     |   `-ImplicitCastExpr 0x14492f340 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x14492f320 <col:17> 'int ()' Function 0x14492f268 'EVP_rc2_ecb' 'int ()'     |-CallExpr 0x14492f528 <line:59:2, col:30> 'int'     | |-ImplicitCastExpr 0x14492f510 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14492f3b8 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x14492f4f0 <col:17, col:29> 'int'     |   `-ImplicitCastExpr 0x14492f4d8 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x14492f4b8 <col:17> 'int ()' Function 0x14492f400 'EVP_rc2_cfb' 'int ()'     |-CallExpr 0x14492f6c0 <line:60:2, col:30> 'int'     | |-ImplicitCastExpr 0x14492f6a8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14492f550 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x14492f688 <col:17, col:29> 'int'     |   `-ImplicitCastExpr 0x14492f670 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x14492f650 <col:17> 'int ()' Function 0x14492f598 'EVP_rc2_ofb' 'int ()'     |-CallExpr 0x14492f858 <line:61:2, col:30> 'int'     | |-ImplicitCastExpr 0x14492f840 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14492f6e8 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x14492f820 <col:17, col:29> 'int'     |   `-ImplicitCastExpr 0x14492f808 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x14492f7e8 <col:17> 'int ()' Function 0x14492f730 'EVP_rc2_cbc' 'int ()'     |-CallExpr 0x14492f9f0 <line:62:2, col:33> 'int'     | |-ImplicitCastExpr 0x14492f9d8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14492f880 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x14492f9b8 <col:17, col:32> 'int'     |   `-ImplicitCastExpr 0x14492f9a0 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x14492f980 <col:17> 'int ()' Function 0x14492f8c8 'EVP_rc2_40_cbc' 'int ()'     |-CallExpr 0x14492fb88 <line:63:2, col:33> 'int'     | |-ImplicitCastExpr 0x14492fb70 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14492fa18 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x14492fb50 <col:17, col:32> 'int'     |   `-ImplicitCastExpr 0x14492fb38 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x14492fb18 <col:17> 'int ()' Function 0x14492fa60 'EVP_rc2_64_cbc' 'int ()'     |-CallExpr 0x14492fda0 <line:69:2, col:29> 'int'     | |-ImplicitCastExpr 0x14492fd88 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14492fc30 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x14492fd68 <col:17, col:28> 'int'     |   `-ImplicitCastExpr 0x14492fd50 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x14492fd30 <col:17> 'int ()' Function 0x14492fc78 'EVP_bf_ecb' 'int ()'     |-CallExpr 0x14492ff38 <line:70:2, col:29> 'int'     | |-ImplicitCastExpr 0x14492ff20 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14492fdc8 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x14492ff00 <col:17, col:28> 'int'     |   `-ImplicitCastExpr 0x14492fee8 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x14492fec8 <col:17> 'int ()' Function 0x14492fe10 'EVP_bf_cfb' 'int ()'     |-CallExpr 0x1449300d0 <line:71:2, col:29> 'int'     | |-ImplicitCastExpr 0x1449300b8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14492ff60 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x144930098 <col:17, col:28> 'int'     |   `-ImplicitCastExpr 0x144930080 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x144930060 <col:17> 'int ()' Function 0x14492ffa8 'EVP_bf_ofb' 'int ()'     |-CallExpr 0x144930268 <line:72:2, col:29> 'int'     | |-ImplicitCastExpr 0x144930250 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1449300f8 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x144930230 <col:17, col:28> 'int'     |   `-ImplicitCastExpr 0x144930218 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x1449301f8 <col:17> 'int ()' Function 0x144930140 'EVP_bf_cbc' 'int ()'     |-CallExpr 0x144930528 <line:79:2, col:32> 'int'     | |-ImplicitCastExpr 0x144930510 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x144930350 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x1449304f0 <col:17, col:31> 'int'     |   `-ImplicitCastExpr 0x1449304d8 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x1449304b8 <col:17> 'int ()' Function 0x144930400 'EVP_cast5_ecb' 'int ()'     |-CallExpr 0x1449306c0 <line:80:2, col:32> 'int'     | |-ImplicitCastExpr 0x1449306a8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x144930550 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x144930688 <col:17, col:31> 'int'     |   `-ImplicitCastExpr 0x144930670 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x144930650 <col:17> 'int ()' Function 0x144930598 'EVP_cast5_cfb' 'int ()'     |-CallExpr 0x144930858 <line:81:2, col:32> 'int'     | |-ImplicitCastExpr 0x144930840 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1449306e8 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x144930820 <col:17, col:31> 'int'     |   `-ImplicitCastExpr 0x144930808 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x1449307e8 <col:17> 'int ()' Function 0x144930730 'EVP_cast5_ofb' 'int ()'     |-CallExpr 0x1449309f0 <line:82:2, col:32> 'int'     | |-ImplicitCastExpr 0x1449309d8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x144930880 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x1449309b8 <col:17, col:31> 'int'     |   `-ImplicitCastExpr 0x1449309a0 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x144930980 <col:17> 'int ()' Function 0x1449308c8 'EVP_cast5_cbc' 'int ()'     |-CallExpr 0x144930c88 <line:90:2, col:39> 'int'     | |-ImplicitCastExpr 0x144930c70 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x144930b18 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x144930c50 <col:17, col:38> 'int'     |   `-ImplicitCastExpr 0x144930c38 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x144930c18 <col:17> 'int ()' Function 0x144930b60 'EVP_rc5_32_12_16_ecb' 'int ()'     |-CallExpr 0x144930e20 <line:91:2, col:39> 'int'     | |-ImplicitCastExpr 0x144930e08 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x144930cb0 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x144930de8 <col:17, col:38> 'int'     |   `-ImplicitCastExpr 0x144930dd0 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x144930db0 <col:17> 'int ()' Function 0x144930cf8 'EVP_rc5_32_12_16_cfb' 'int ()'     |-CallExpr 0x144930fb8 <line:92:2, col:39> 'int'     | |-ImplicitCastExpr 0x144930fa0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x144930e48 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x144930f80 <col:17, col:38> 'int'     |   `-ImplicitCastExpr 0x144930f68 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x144930f48 <col:17> 'int ()' Function 0x144930e90 'EVP_rc5_32_12_16_ofb' 'int ()'     |-CallExpr 0x144931150 <line:93:2, col:39> 'int'     | |-ImplicitCastExpr 0x144931138 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x144930fe0 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x144931118 <col:17, col:38> 'int'     |   `-ImplicitCastExpr 0x144931100 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x1449310e0 <col:17> 'int ()' Function 0x144931028 'EVP_rc5_32_12_16_cbc' 'int ()'     |-CallExpr 0x144931368 <line:99:2, col:34> 'int'     | |-ImplicitCastExpr 0x144931350 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1449311f8 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x144931330 <col:17, col:33> 'int'     |   `-ImplicitCastExpr 0x144931318 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x1449312f8 <col:17> 'int ()' Function 0x144931240 'EVP_aes_128_ecb' 'int ()'     |-CallExpr 0x144932528 <line:100:2, col:34> 'int'     | |-ImplicitCastExpr 0x144932510 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x144931390 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x1449324f0 <col:17, col:33> 'int'     |   `-ImplicitCastExpr 0x1449324d8 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x1449324b8 <col:17> 'int ()' Function 0x144932400 'EVP_aes_128_cbc' 'int ()'     |-CallExpr 0x1449326c0 <line:101:2, col:34> 'int'     | |-ImplicitCastExpr 0x1449326a8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x144932550 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x144932688 <col:17, col:33> 'int'     |   `-ImplicitCastExpr 0x144932670 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x144932650 <col:17> 'int ()' Function 0x144932598 'EVP_aes_128_cfb' 'int ()'     |-CallExpr 0x144932858 <line:102:2, col:35> 'int'     | |-ImplicitCastExpr 0x144932840 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1449326e8 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x144932820 <col:17, col:34> 'int'     |   `-ImplicitCastExpr 0x144932808 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x1449327e8 <col:17> 'int ()' Function 0x144932730 'EVP_aes_128_cfb1' 'int ()'     |-CallExpr 0x1449329f0 <line:103:2, col:35> 'int'     | |-ImplicitCastExpr 0x1449329d8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x144932880 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x1449329b8 <col:17, col:34> 'int'     |   `-ImplicitCastExpr 0x1449329a0 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x144932980 <col:17> 'int ()' Function 0x1449328c8 'EVP_aes_128_cfb8' 'int ()'     |-CallExpr 0x144932b88 <line:104:2, col:34> 'int'     | |-ImplicitCastExpr 0x144932b70 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x144932a18 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x144932b50 <col:17, col:33> 'int'     |   `-ImplicitCastExpr 0x144932b38 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x144932b18 <col:17> 'int ()' Function 0x144932a60 'EVP_aes_128_ofb' 'int ()'     |-CallExpr 0x144932da0 <line:110:2, col:34> 'int'     | |-ImplicitCastExpr 0x144932d88 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x144932c30 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x144932d68 <col:17, col:33> 'int'     |   `-ImplicitCastExpr 0x144932d50 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x144932d30 <col:17> 'int ()' Function 0x144932c78 'EVP_aes_192_ecb' 'int ()'     |-CallExpr 0x144932f38 <line:111:2, col:34> 'int'     | |-ImplicitCastExpr 0x144932f20 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x144932dc8 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x144932f00 <col:17, col:33> 'int'     |   `-ImplicitCastExpr 0x144932ee8 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x144932ec8 <col:17> 'int ()' Function 0x144932e10 'EVP_aes_192_cbc' 'int ()'     |-CallExpr 0x1449330d0 <line:112:2, col:34> 'int'     | |-ImplicitCastExpr 0x1449330b8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x144932f60 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x144933098 <col:17, col:33> 'int'     |   `-ImplicitCastExpr 0x144933080 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x144933060 <col:17> 'int ()' Function 0x144932fa8 'EVP_aes_192_cfb' 'int ()'     |-CallExpr 0x144933268 <line:113:2, col:35> 'int'     | |-ImplicitCastExpr 0x144933250 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1449330f8 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x144933230 <col:17, col:34> 'int'     |   `-ImplicitCastExpr 0x144933218 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x1449331f8 <col:17> 'int ()' Function 0x144933140 'EVP_aes_192_cfb1' 'int ()'     |-CallExpr 0x144933400 <line:114:2, col:35> 'int'     | |-ImplicitCastExpr 0x1449333e8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x144933290 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x1449333c8 <col:17, col:34> 'int'     |   `-ImplicitCastExpr 0x1449333b0 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x144933390 <col:17> 'int ()' Function 0x1449332d8 'EVP_aes_192_cfb8' 'int ()'     |-CallExpr 0x144933598 <line:115:2, col:34> 'int'     | |-ImplicitCastExpr 0x144933580 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x144933428 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x144933560 <col:17, col:33> 'int'     |   `-ImplicitCastExpr 0x144933548 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x144933528 <col:17> 'int ()' Function 0x144933470 'EVP_aes_192_ofb' 'int ()'     |-CallExpr 0x1449337b0 <line:121:2, col:34> 'int'     | |-ImplicitCastExpr 0x144933798 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x144933640 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x144933778 <col:17, col:33> 'int'     |   `-ImplicitCastExpr 0x144933760 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x144933740 <col:17> 'int ()' Function 0x144933688 'EVP_aes_256_ecb' 'int ()'     |-CallExpr 0x144933948 <line:122:2, col:34> 'int'     | |-ImplicitCastExpr 0x144933930 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1449337d8 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x144933910 <col:17, col:33> 'int'     |   `-ImplicitCastExpr 0x1449338f8 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x1449338d8 <col:17> 'int ()' Function 0x144933820 'EVP_aes_256_cbc' 'int ()'     |-CallExpr 0x144933ae0 <line:123:2, col:34> 'int'     | |-ImplicitCastExpr 0x144933ac8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x144933970 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x144933aa8 <col:17, col:33> 'int'     |   `-ImplicitCastExpr 0x144933a90 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x144933a70 <col:17> 'int ()' Function 0x1449339b8 'EVP_aes_256_cfb' 'int ()'     |-CallExpr 0x144933c78 <line:124:2, col:35> 'int'     | |-ImplicitCastExpr 0x144933c60 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x144933b08 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x144933c40 <col:17, col:34> 'int'     |   `-ImplicitCastExpr 0x144933c28 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x144933c08 <col:17> 'int ()' Function 0x144933b50 'EVP_aes_256_cfb1' 'int ()'     |-CallExpr 0x144933e10 <line:125:2, col:35> 'int'     | |-ImplicitCastExpr 0x144933df8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x144933ca0 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x144933dd8 <col:17, col:34> 'int'     |   `-ImplicitCastExpr 0x144933dc0 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x144933da0 <col:17> 'int ()' Function 0x144933ce8 'EVP_aes_256_cfb8' 'int ()'     |-CallExpr 0x144933fa8 <line:126:2, col:34> 'int'     | |-ImplicitCastExpr 0x144933f90 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x144933e38 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x144933f70 <col:17, col:33> 'int'     |   `-ImplicitCastExpr 0x144933f58 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x144933f38 <col:17> 'int ()' Function 0x144933e80 'EVP_aes_256_ofb' 'int ()'     |-CallExpr 0x1449341c0 <line:135:2, col:39> 'int'     | |-ImplicitCastExpr 0x1449341a8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x144934050 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x144934188 <col:17, col:38> 'int'     |   `-ImplicitCastExpr 0x144934170 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x144934150 <col:17> 'int ()' Function 0x144934098 'EVP_camellia_128_ecb' 'int ()'     |-CallExpr 0x144934358 <line:136:2, col:39> 'int'     | |-ImplicitCastExpr 0x144934340 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1449341e8 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x144934320 <col:17, col:38> 'int'     |   `-ImplicitCastExpr 0x144934308 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x1449342e8 <col:17> 'int ()' Function 0x144934230 'EVP_camellia_128_cbc' 'int ()'     |-CallExpr 0x144934528 <line:137:2, col:39> 'int'     | |-ImplicitCastExpr 0x144934510 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x144934380 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x1449344f0 <col:17, col:38> 'int'     |   `-ImplicitCastExpr 0x1449344d8 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x1449344b8 <col:17> 'int ()' Function 0x144934400 'EVP_camellia_128_cfb' 'int ()'     |-CallExpr 0x1449346c0 <line:138:2, col:40> 'int'     | |-ImplicitCastExpr 0x1449346a8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x144934550 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x144934688 <col:17, col:39> 'int'     |   `-ImplicitCastExpr 0x144934670 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x144934650 <col:17> 'int ()' Function 0x144934598 'EVP_camellia_128_cfb1' 'int ()'     |-CallExpr 0x144934858 <line:139:2, col:40> 'int'     | |-ImplicitCastExpr 0x144934840 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1449346e8 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x144934820 <col:17, col:39> 'int'     |   `-ImplicitCastExpr 0x144934808 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x1449347e8 <col:17> 'int ()' Function 0x144934730 'EVP_camellia_128_cfb8' 'int ()'     |-CallExpr 0x1449349f0 <line:140:2, col:39> 'int'     | |-ImplicitCastExpr 0x1449349d8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x144934880 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x1449349b8 <col:17, col:38> 'int'     |   `-ImplicitCastExpr 0x1449349a0 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x144934980 <col:17> 'int ()' Function 0x1449348c8 'EVP_camellia_128_ofb' 'int ()'     |-CallExpr 0x144934c08 <line:143:2, col:39> 'int'     | |-ImplicitCastExpr 0x144934bf0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x144934a98 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x144934bd0 <col:17, col:38> 'int'     |   `-ImplicitCastExpr 0x144934bb8 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x144934b98 <col:17> 'int ()' Function 0x144934ae0 'EVP_camellia_192_ecb' 'int ()'     |-CallExpr 0x144934da0 <line:144:2, col:39> 'int'     | |-ImplicitCastExpr 0x144934d88 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x144934c30 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x144934d68 <col:17, col:38> 'int'     |   `-ImplicitCastExpr 0x144934d50 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x144934d30 <col:17> 'int ()' Function 0x144934c78 'EVP_camellia_192_cbc' 'int ()'     |-CallExpr 0x144934f38 <line:145:2, col:39> 'int'     | |-ImplicitCastExpr 0x144934f20 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x144934dc8 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x144934f00 <col:17, col:38> 'int'     |   `-ImplicitCastExpr 0x144934ee8 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x144934ec8 <col:17> 'int ()' Function 0x144934e10 'EVP_camellia_192_cfb' 'int ()'     |-CallExpr 0x1449350d0 <line:146:2, col:40> 'int'     | |-ImplicitCastExpr 0x1449350b8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x144934f60 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x144935098 <col:17, col:39> 'int'     |   `-ImplicitCastExpr 0x144935080 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x144935060 <col:17> 'int ()' Function 0x144934fa8 'EVP_camellia_192_cfb1' 'int ()'     |-CallExpr 0x144935268 <line:147:2, col:40> 'int'     | |-ImplicitCastExpr 0x144935250 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1449350f8 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x144935230 <col:17, col:39> 'int'     |   `-ImplicitCastExpr 0x144935218 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x1449351f8 <col:17> 'int ()' Function 0x144935140 'EVP_camellia_192_cfb8' 'int ()'     |-CallExpr 0x144935400 <line:148:2, col:39> 'int'     | |-ImplicitCastExpr 0x1449353e8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x144935290 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x1449353c8 <col:17, col:38> 'int'     |   `-ImplicitCastExpr 0x1449353b0 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x144935390 <col:17> 'int ()' Function 0x1449352d8 'EVP_camellia_192_ofb' 'int ()'     |-CallExpr 0x144935618 <line:151:2, col:39> 'int'     | |-ImplicitCastExpr 0x144935600 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1449354a8 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x1449355e0 <col:17, col:38> 'int'     |   `-ImplicitCastExpr 0x1449355c8 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x1449355a8 <col:17> 'int ()' Function 0x1449354f0 'EVP_camellia_256_ecb' 'int ()'     |-CallExpr 0x1449357b0 <line:152:2, col:39> 'int'     | |-ImplicitCastExpr 0x144935798 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x144935640 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x144935778 <col:17, col:38> 'int'     |   `-ImplicitCastExpr 0x144935760 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x144935740 <col:17> 'int ()' Function 0x144935688 'EVP_camellia_256_cbc' 'int ()'     |-CallExpr 0x144935948 <line:153:2, col:39> 'int'     | |-ImplicitCastExpr 0x144935930 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1449357d8 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x144935910 <col:17, col:38> 'int'     |   `-ImplicitCastExpr 0x1449358f8 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x1449358d8 <col:17> 'int ()' Function 0x144935820 'EVP_camellia_256_cfb' 'int ()'     |-CallExpr 0x144935ae0 <line:154:2, col:40> 'int'     | |-ImplicitCastExpr 0x144935ac8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x144935970 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x144935aa8 <col:17, col:39> 'int'     |   `-ImplicitCastExpr 0x144935a90 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x144935a70 <col:17> 'int ()' Function 0x1449359b8 'EVP_camellia_256_cfb1' 'int ()'     |-CallExpr 0x144935c78 <line:155:2, col:40> 'int'     | |-ImplicitCastExpr 0x144935c60 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x144935b08 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x144935c40 <col:17, col:39> 'int'     |   `-ImplicitCastExpr 0x144935c28 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x144935c08 <col:17> 'int ()' Function 0x144935b50 'EVP_camellia_256_cfb8' 'int ()'     |-CallExpr 0x144935e10 <line:156:2, col:39> 'int'     | |-ImplicitCastExpr 0x144935df8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x144935ca0 <col:2> 'int ()' Function 0x144912ef8 'EVP_add_cipher' 'int ()'     | `-CallExpr 0x144935dd8 <col:17, col:38> 'int'     |   `-ImplicitCastExpr 0x144935dc0 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x144935da0 <col:17> 'int ()' Function 0x144935ce8 'EVP_camellia_256_ofb' 'int ()'     |-CallExpr 0x144935fd0 <line:161:2, col:17> 'int'     | `-ImplicitCastExpr 0x144935fb8 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x144935f98 <col:2> 'int ()' Function 0x144935ee0 'PKCS12_PBE_add' 'int ()'     `-CallExpr 0x144936108 <line:162:2, col:16> 'int'       `-ImplicitCastExpr 0x1449360f0 <col:2> 'int (*)()' <FunctionToPointerDecay>         `-DeclRefExpr 0x1449360d0 <col:2> 'int ()' Function 0x144936018 'PKCS5_PBE_add' 'int ()' ","20457":"`-FunctionDecl 0x142145b78  line:1:23 invalid setup_net 'int (struct net *, struct user_namespace *)' static   |-ParmVarDecl 0x142128668 <col:33, col:45> col:45 used net 'struct net *'   |-ParmVarDecl 0x142145a58 <col:50, col:73> col:73 used user_ns 'struct user_namespace *'   `-CompoundStmt 0x142148a00 <line:2:1, line:40:1>     |-DeclStmt 0x142145eb0 <line:4:2, col:49>     | |-RecordDecl 0x142145c30 <col:8, col:15> col:15 struct pernet_operations     | |-VarDecl 0x142145d98 <col:2, col:34> col:34 used ops 'const struct pernet_operations *'     | `-VarDecl 0x142145e28 <col:2, col:40> col:40 used saved_ops 'const struct pernet_operations *'     |-DeclStmt 0x142145f68 <line:5:2, col:15>     | `-VarDecl 0x142145ee0 <col:2, col:14> col:6 used error 'int' cinit     |   `-IntegerLiteral 0x142145f48 <col:14> 'int' 0     |-CallExpr 0x142146160 <line:6:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1421460e0 <col:2> 'int ()' Function 0x142146028 'LIST_HEAD' 'int ()'     | `-RecoveryExpr 0x142146140 <col:12> '<dependent type>' contains-errors lvalue     |-CallExpr 0x142146320 <line:8:2, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142146268 <col:2> 'int ()' Function 0x1421461b0 'refcount_set' 'int ()'     | |-UnaryOperator 0x1421462e8 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x1421462c0 <col:16, col:21> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x142146288 <col:16> 'struct net *' lvalue ParmVar 0x142128668 'net' 'struct net *'     | `-IntegerLiteral 0x142146300 <col:28> 'int' 1     |-CallExpr 0x142146408 <line:9:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142146350 <col:2> 'int ()' Function 0x1421461b0 'refcount_set' 'int ()'     | |-UnaryOperator 0x1421463d0 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x1421463a8 <col:16, col:21> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x142146370 <col:16> 'struct net *' lvalue ParmVar 0x142128668 'net' 'struct net *'     | `-IntegerLiteral 0x1421463e8 <col:30> 'int' 1     |-BinaryOperator 0x1421464b8 <line:10:2, col:22> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x142146470 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x142146438 <col:2> 'struct net *' lvalue ParmVar 0x142128668 'net' 'struct net *'     | `-IntegerLiteral 0x142146498 <col:22> 'int' 1     |-BinaryOperator 0x142146558 <line:11:2, col:17> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x142146510 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1421464d8 <col:2> 'struct net *' lvalue ParmVar 0x142128668 'net' 'struct net *'     | `-DeclRefExpr 0x142146538 <col:17> 'struct user_namespace *' lvalue ParmVar 0x142145a58 'user_ns' 'struct user_namespace *'     |-CallExpr 0x1421466f0 <line:12:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142146658 <col:2> 'int ()' Function 0x1421465a0 'idr_init' 'int ()'     | `-UnaryOperator 0x1421466d8 <col:11, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1421466b0 <col:12, col:17> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x142146678 <col:12> 'struct net *' lvalue ParmVar 0x142128668 'net' 'struct net *'     |-CallExpr 0x142146890 <line:13:2, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1421467f8 <col:2> 'int ()' Function 0x142146740 'spin_lock_init' 'int ()'     | `-UnaryOperator 0x142146878 <col:17, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x142146850 <col:18, col:23> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x142146818 <col:18> 'struct net *' lvalue ParmVar 0x142128668 'net' 'struct net *'     |-CallExpr 0x142147488 <line:14:2, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142146998 <col:2> 'int ()' Function 0x1421468e0 'mutex_init' 'int ()'     | `-UnaryOperator 0x142147470 <col:13, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x142147428 <col:14, col:24> '<dependent type>' contains-errors lvalue .ra_mutex     |     `-RecoveryExpr 0x142147400 <col:14, col:19> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x1421469b8 <col:14> 'struct net *' lvalue ParmVar 0x142128668 'net' 'struct net *'     |-CallExpr 0x1421476a8 <line:16:2, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142147590 <col:2> 'int ()' Function 0x1421474d8 'list_for_each_entry' 'int ()'     | |-DeclRefExpr 0x1421475b0 <col:22> 'const struct pernet_operations *' lvalue Var 0x142145d98 'ops' 'const struct pernet_operations *'     | |-UnaryOperator 0x142147670 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x142147650 <col:28> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x142147688 <col:41> '<dependent type>' contains-errors lvalue     |-CompoundStmt 0x142147a08 <col:47, line:20:2>     | |-BinaryOperator 0x1421478e8 <line:17:3, col:28> 'int' '='     | | |-DeclRefExpr 0x1421476e0 <col:3> 'int' lvalue Var 0x142145ee0 'error' 'int'     | | `-CallExpr 0x142147888 <col:11, col:28> 'int'     | |   |-ImplicitCastExpr 0x142147870 <col:11> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x1421477e0 <col:11> 'int ()' Function 0x142147728 'ops_init' 'int ()'     | |   |-ImplicitCastExpr 0x1421478b8 <col:20> 'const struct pernet_operations *' <LValueToRValue>     | |   | `-DeclRefExpr 0x142147800 <col:20> 'const struct pernet_operations *' lvalue Var 0x142145d98 'ops' 'const struct pernet_operations *'     | |   `-ImplicitCastExpr 0x1421478d0 <col:25> 'struct net *' <LValueToRValue>     | |     `-DeclRefExpr 0x142147820 <col:25> 'struct net *' lvalue ParmVar 0x142128668 'net' 'struct net *'     | `-IfStmt 0x1421479e8 <line:18:3, line:19:9>     |   |-BinaryOperator 0x142147960 <line:18:7, col:15> 'int' '<'     |   | |-ImplicitCastExpr 0x142147948 <col:7> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x142147908 <col:7> 'int' lvalue Var 0x142145ee0 'error' 'int'     |   | `-IntegerLiteral 0x142147928 <col:15> 'int' 0     |   `-GotoStmt 0x1421479d0 <line:19:4, col:9> 'out_undo' 0x142147980     |-LabelStmt 0x142147e38 <line:24:1, line:25:9> 'out'     | `-ReturnStmt 0x142147dd8 <col:2, col:9>     |   `-ImplicitCastExpr 0x142147dc0 <col:9> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x142147da0 <col:9> 'int' lvalue Var 0x142145ee0 'error' 'int'     |-LabelStmt 0x142147fd8 <line:27:1, col:9> 'out_undo'     | `-NullStmt 0x142147fd0 <col:9>     |-BinaryOperator 0x142148050 <line:30:2, col:14> 'const struct pernet_operations *' '='     | |-DeclRefExpr 0x142147ff8 <col:2> 'const struct pernet_operations *' lvalue Var 0x142145e28 'saved_ops' 'const struct pernet_operations *'     | `-ImplicitCastExpr 0x142148038 <col:14> 'const struct pernet_operations *' <LValueToRValue>     |   `-DeclRefExpr 0x142148018 <col:14> 'const struct pernet_operations *' lvalue Var 0x142145d98 'ops' 'const struct pernet_operations *'     |-BinaryOperator 0x1421481e8 <line:34:2, col:8> 'const struct pernet_operations *' '='     | |-DeclRefExpr 0x142148190 <col:2> 'const struct pernet_operations *' lvalue Var 0x142145d98 'ops' 'const struct pernet_operations *'     | `-ImplicitCastExpr 0x1421481d0 <col:8> 'const struct pernet_operations *' <LValueToRValue>     |   `-DeclRefExpr 0x1421481b0 <col:8> 'const struct pernet_operations *' lvalue Var 0x142145e28 'saved_ops' 'const struct pernet_operations *'     |-CallExpr 0x142148360 <line:38:2, col:14> 'int'     | `-ImplicitCastExpr 0x142148348 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x142148328 <col:2> 'int ()' Function 0x142148270 'rcu_barrier' 'int ()'     `-GotoStmt 0x142148380 <line:39:2, col:7> 'out' 0x142147de8 ","20799":"`-FunctionDecl 0x15600b808  col:8 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x15600b908 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x15600b970 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x15600b9d8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x15600b8b0 <<invalid sloc>> Implicit 883 ","20391":"`-FunctionDecl 0x144940be8  line:1:12 do_page_mkwrite 'int (struct vm_area_struct *, struct page *, unsigned long)' static   |-ParmVarDecl 0x144928648 <col:28, col:51> col:51 used vma 'struct vm_area_struct *'   |-ParmVarDecl 0x144940a28 <col:56, col:69> col:69 used page 'struct page *'   |-ParmVarDecl 0x144940aa8 <line:2:9, col:23> col:23 used address 'unsigned long'   `-CompoundStmt 0x144947768 <line:3:1, line:26:1>     |-DeclStmt 0x144940e68 <line:4:2, col:21>     | |-RecordDecl 0x144940cf0 <col:2, col:9> col:9 struct vm_fault     | `-VarDecl 0x144940de8 <col:2, col:18> col:18 referenced invalid vmf 'struct vm_fault'     |-DeclStmt 0x144940f00 <line:5:2, col:9>     | `-VarDecl 0x144940e98 <col:2, col:6> col:6 used ret 'int'     |-BinaryOperator 0x144941138 <line:8:2, col:20> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x144941090 <col:2, col:6> '<dependent type>' contains-errors lvalue .pgoff     | | `-RecoveryExpr 0x144941068 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x144941048 <col:2> 'struct vm_fault' lvalue Var 0x144940de8 'vmf' 'struct vm_fault'     | `-RecoveryExpr 0x144941110 <col:14, col:20> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1449410d8 <col:14> 'struct page *' lvalue ParmVar 0x144940a28 'page' 'struct page *'     |-BinaryOperator 0x1449412b8 <line:9:2, col:31> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1449411a0 <col:2, col:6> '<dependent type>' contains-errors lvalue .flags     | | `-RecoveryExpr 0x144941178 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x144941158 <col:2> 'struct vm_fault' lvalue Var 0x144940de8 'vmf' 'struct vm_fault'     | `-BinaryOperator 0x144941298 <col:14, col:31> '<dependent type>' contains-errors '|'     |   |-RecoveryExpr 0x144941258 <col:14> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x144941278 <col:31> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x144941388 <line:10:2, col:13> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x144941320 <col:2, col:6> '<dependent type>' contains-errors lvalue .page     | | `-RecoveryExpr 0x1449412f8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1449412d8 <col:2> 'struct vm_fault' lvalue Var 0x144940de8 'vmf' 'struct vm_fault'     | `-DeclRefExpr 0x144941368 <col:13> 'struct page *' lvalue ParmVar 0x144940a28 'page' 'struct page *'     |-BinaryOperator 0x144941490 <line:11:2, col:17> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1449413f0 <col:2, col:6> '<dependent type>' contains-errors lvalue .cow_page     | | `-RecoveryExpr 0x1449413c8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1449413a8 <col:2> 'struct vm_fault' lvalue Var 0x144940de8 'vmf' 'struct vm_fault'     | `-RecoveryExpr 0x144941470 <col:17> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x144941600 <line:13:2, col:43> 'int' contains-errors '='     | |-DeclRefExpr 0x1449414b0 <col:2> 'int' lvalue Var 0x144940e98 'ret' 'int'     | `-CallExpr 0x1449415d0 <col:8, col:43> '<dependent type>' contains-errors     |   |-CXXDependentScopeMemberExpr 0x144941530 <col:8, col:21> '<dependent type>' contains-errors lvalue ->page_mkwrite     |   | `-RecoveryExpr 0x144941508 <col:8, col:13> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x1449414d0 <col:8> 'struct vm_area_struct *' lvalue ParmVar 0x144928648 'vma' 'struct vm_area_struct *'     |   |-DeclRefExpr 0x144941578 <col:34> 'struct vm_area_struct *' lvalue ParmVar 0x144928648 'vma' 'struct vm_area_struct *'     |   `-UnaryOperator 0x1449415b8 <col:39, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x144941598 <col:40> '<dependent type>' contains-errors lvalue     |-IfStmt 0x144941828 <line:14:2, line:15:10>     | |-RecoveryExpr 0x1449417c0 <line:14:6, col:55> '_Bool' contains-errors     | `-ReturnStmt 0x144941818 <line:15:3, col:10>     |   `-ImplicitCastExpr 0x144941800 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x1449417e0 <col:10> 'int' lvalue Var 0x144940e98 'ret' 'int'     |-IfStmt 0x1449476f0 <line:16:2, line:24:41> has_else     | |-RecoveryExpr 0x1449418c0 <line:16:6, col:39> '_Bool' contains-errors     | |-CompoundStmt 0x1449473b8 <col:42, line:23:2>     | | |-CallExpr 0x144947048 <line:17:3, col:17> 'int'     | | | |-ImplicitCastExpr 0x144947030 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x1449419c0 <col:3> 'int ()' Function 0x144941908 'lock_page' 'int ()'     | | | `-ImplicitCastExpr 0x144947070 <col:13> 'struct page *' <LValueToRValue>     | | |   `-DeclRefExpr 0x1449419e0 <col:13> 'struct page *' lvalue ParmVar 0x144940a28 'page' 'struct page *'     | | |-IfStmt 0x1449472e0 <line:18:3, line:21:3>     | | | |-UnaryOperator 0x144947100 <line:18:7, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | `-ImplicitCastExpr 0x1449470e8 <col:8, col:14> '<dependent type>' contains-errors <LValueToRValue>     | | | |   `-RecoveryExpr 0x1449470c0 <col:8, col:14> '<dependent type>' contains-errors lvalue     | | | |     `-DeclRefExpr 0x144947088 <col:8> 'struct page *' lvalue ParmVar 0x144940a28 'page' 'struct page *'     | | | `-CompoundStmt 0x1449472c0 <col:23, line:21:3>     | | |   |-CallExpr 0x144947250 <line:19:4, col:20> 'int'     | | |   | |-ImplicitCastExpr 0x144947238 <col:4> 'int (*)()' <FunctionToPointerDecay>     | | |   | | `-DeclRefExpr 0x1449471f8 <col:4> 'int ()' Function 0x144947140 'unlock_page' 'int ()'     | | |   | `-ImplicitCastExpr 0x144947278 <col:16> 'struct page *' <LValueToRValue>     | | |   |   `-DeclRefExpr 0x144947218 <col:16> 'struct page *' lvalue ParmVar 0x144940a28 'page' 'struct page *'     | | |   `-ReturnStmt 0x1449472b0 <line:20:4, col:11>     | | |     `-IntegerLiteral 0x144947290 <col:11> 'int' 0     | | `-CompoundAssignOperator 0x144947388 <line:22:3, col:10> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |   |-DeclRefExpr 0x144947300 <col:3> 'int' lvalue Var 0x144940e98 'ret' 'int'     | |   `-RecoveryExpr 0x144947368 <col:10> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x1449476a8 <line:24:3, col:41> 'int'     |   |-ImplicitCastExpr 0x144947690 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1449474c0 <col:3> 'int ()' Function 0x144947408 'VM_BUG_ON_PAGE' 'int ()'     |   |-UnaryOperator 0x144947658 <col:18, col:34> 'int' prefix '!' cannot overflow     |   | `-CallExpr 0x144947618 <col:19, col:34> 'int'     |   |   |-ImplicitCastExpr 0x144947600 <col:19> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x1449475c0 <col:19> 'int ()' Function 0x144947508 'PageLocked' 'int ()'     |   |   `-ImplicitCastExpr 0x144947640 <col:30> 'struct page *' <LValueToRValue>     |   |     `-DeclRefExpr 0x1449475e0 <col:30> 'struct page *' lvalue ParmVar 0x144940a28 'page' 'struct page *'     |   `-ImplicitCastExpr 0x1449476d8 <col:37> 'struct page *' <LValueToRValue>     |     `-DeclRefExpr 0x144947670 <col:37> 'struct page *' lvalue ParmVar 0x144940a28 'page' 'struct page *'     `-ReturnStmt 0x144947758 <line:25:2, col:9>       `-ImplicitCastExpr 0x144947740 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x144947720 <col:9> 'int' lvalue Var 0x144940e98 'ret' 'int' ","20250":"`-FunctionDecl 0x14a80e350  line:1:13 __return_cfs_rq_runtime 'void (struct cfs_rq *)' static   |-ParmVarDecl 0x14a80e248 <col:37, col:52> col:52 used cfs_rq 'struct cfs_rq *'   `-CompoundStmt 0x14a82d120 <line:2:1, line:23:1>     |-DeclStmt 0x14a82ac10 <line:3:2, col:60>     | |-RecordDecl 0x14a82a848 <col:2, col:9> col:9 struct cfs_bandwidth     | `-VarDecl 0x14a82a9b8 <col:2, col:59> col:24 used cfs_b 'struct cfs_bandwidth *' cinit     |   `-CallExpr 0x14a82abd0 <col:32, col:59> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14a82ab50 <col:32> 'int ()' Function 0x14a82aa98 'tg_cfs_bandwidth' 'int ()'     |     `-RecoveryExpr 0x14a82aba8 <col:49, col:57> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14a82ab70 <col:49> 'struct cfs_rq *' lvalue ParmVar 0x14a80e248 'cfs_rq' 'struct cfs_rq *'     |-IfStmt 0x14a82acd0 <line:6:2, line:7:3>     | |-BinaryOperator 0x14a82aca0 <line:6:6, col:23> 'int' contains-errors '<='     | | |-RecoveryExpr 0x14a82ac80 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x14a82ac40 <col:23> 'int' 0     | `-ReturnStmt 0x14a82acc0 <line:7:3>     |-CallExpr 0x14a82ae68 <line:9:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a82add0 <col:2> 'int ()' Function 0x14a82ad18 'raw_spin_lock' 'int ()'     | `-UnaryOperator 0x14a82ae50 <col:16, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14a82ae28 <col:17, col:24> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14a82adf0 <col:17> 'struct cfs_bandwidth *' contains-errors lvalue Var 0x14a82a9b8 'cfs_b' 'struct cfs_bandwidth *'     |-IfStmt 0x14a82b6f8 <line:10:2, line:18:2>     | |-BinaryOperator 0x14a82b068 <line:10:6, line:11:40> 'int' contains-errors '&&'     | | |-BinaryOperator 0x14a82b048 <line:10:6, col:22> 'int' contains-errors '!='     | | | |-RecoveryExpr 0x14a82aec8 <col:6, col:13> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x14a82ae90 <col:6> 'struct cfs_bandwidth *' contains-errors lvalue Var 0x14a82a9b8 'cfs_b' 'struct cfs_bandwidth *'     | | | `-RecoveryExpr 0x14a82b028 <col:22> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x14a82afe8 <line:11:6, col:40> 'int' contains-errors '=='     | |   |-RecoveryExpr 0x14a82af60 <col:6, col:14> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x14a82af28 <col:6> 'struct cfs_rq *' lvalue ParmVar 0x14a80e248 'cfs_rq' 'struct cfs_rq *'     | |   `-RecoveryExpr 0x14a82afc0 <col:33, col:40> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x14a82af88 <col:33> 'struct cfs_bandwidth *' contains-errors lvalue Var 0x14a82a9b8 'cfs_b' 'struct cfs_bandwidth *'     | `-CompoundStmt 0x14a82b6d8 <col:57, line:18:2>     |   |-CompoundAssignOperator 0x14a82b150 <line:12:3, col:21> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   | |-RecoveryExpr 0x14a82b0c0 <col:3, col:10> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x14a82b088 <col:3> 'struct cfs_bandwidth *' contains-errors lvalue Var 0x14a82a9b8 'cfs_b' 'struct cfs_bandwidth *'     |   | `-RecoveryExpr 0x14a82b130 <col:21> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x14a82b6b8 <line:15:3, line:17:35>     |     |-BinaryOperator 0x14a82b520 <line:15:7, line:16:43> 'int' contains-errors '&&'     |     | |-BinaryOperator 0x14a82b348 <line:15:7, col:50> 'int' contains-errors '>'     |     | | |-RecoveryExpr 0x14a82b1b8 <col:7, col:14> '<dependent type>' contains-errors lvalue     |     | | | `-DeclRefExpr 0x14a82b180 <col:7> 'struct cfs_bandwidth *' contains-errors lvalue Var 0x14a82a9b8 'cfs_b' 'struct cfs_bandwidth *'     |     | | `-CallExpr 0x14a82b328 <col:24, col:50> 'int'     |     | |   `-ImplicitCastExpr 0x14a82b310 <col:24> 'int (*)()' <FunctionToPointerDecay>     |     | |     `-DeclRefExpr 0x14a82b2c0 <col:24> 'int ()' Function 0x14a82b208 'sched_cfs_bandwidth_slice' 'int ()'     |     | `-UnaryOperator 0x14a82b508 <line:16:7, col:43> '<dependent type>' contains-errors prefix '!' cannot overflow     |     |   `-CallExpr 0x14a82b4e0 <col:8, col:43> '<dependent type>' contains-errors     |     |     |-DeclRefExpr 0x14a82b448 <col:8> 'int ()' Function 0x14a82b390 'list_empty' 'int ()'     |     |     `-UnaryOperator 0x14a82b4c8 <col:19, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |     |       `-RecoveryExpr 0x14a82b4a0 <col:20, col:27> '<dependent type>' contains-errors lvalue     |     |         `-DeclRefExpr 0x14a82b468 <col:20> 'struct cfs_bandwidth *' contains-errors lvalue Var 0x14a82a9b8 'cfs_b' 'struct cfs_bandwidth *'     |     `-CallExpr 0x14a82b678 <line:17:4, col:35> 'int' contains-errors     |       |-ImplicitCastExpr 0x14a82b660 <col:4> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14a82b620 <col:4> 'int ()' Function 0x14a82b568 'start_cfs_slack_bandwidth' 'int ()'     |       `-ImplicitCastExpr 0x14a82b6a0 <col:30> 'struct cfs_bandwidth *' contains-errors <LValueToRValue>     |         `-DeclRefExpr 0x14a82b640 <col:30> 'struct cfs_bandwidth *' contains-errors lvalue Var 0x14a82a9b8 'cfs_b' 'struct cfs_bandwidth *'     `-CallExpr 0x14a82d098 <line:19:2, col:30> '<dependent type>' contains-errors       |-DeclRefExpr 0x14a82d000 <col:2> 'int ()' Function 0x14a82b740 'raw_spin_unlock' 'int ()'       `-UnaryOperator 0x14a82d080 <col:18, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x14a82d058 <col:19, col:26> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x14a82d020 <col:19> 'struct cfs_bandwidth *' contains-errors lvalue Var 0x14a82a9b8 'cfs_b' 'struct cfs_bandwidth *' ","20311":"`-FunctionDecl 0x1309282e0  line:1:13 invalid ahci_dma_restart_cb 'void (void *, int, int)' static   |-ParmVarDecl 0x1309280d8 <col:33, col:39> col:39 opaque 'void *'   |-ParmVarDecl 0x130928158 <col:47, col:51> col:51 running 'int'   |-ParmVarDecl 0x1309281f0 <col:60, col:69> col:69 invalid state 'int'   `-CompoundStmt 0x1309283a0 <line:2:1, line:3:1> ","20280":"`-FunctionDecl 0x1480e5bc8  line:1:1 invalid SWFInput_getSInt16 'int (int)'   |-ParmVarDecl 0x1480e5af0 <col:20, col:29> col:29 invalid input 'int'   `-CompoundStmt 0x1480e6010 <line:2:1, line:6:1>     |-DeclStmt 0x1480e5eb8 <line:3:2, col:35>     | `-VarDecl 0x1480e5c90 <col:2, col:34> col:6 used num 'int' cinit     |   `-CallExpr 0x1480e5e90 <col:12, col:34> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1480e5e50 <col:12> 'int ()' Function 0x1480e5d98 'SWFInput_getChar' 'int ()'     |     `-RecoveryExpr 0x1480e5e70 <col:29> '<dependent type>' contains-errors lvalue     |-CompoundAssignOperator 0x1480e5f98 <line:4:2, col:35> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-DeclRefExpr 0x1480e5ed0 <col:2> 'int' contains-errors lvalue Var 0x1480e5c90 'num' 'int'     | `-BinaryOperator 0x1480e5f78 <col:9, col:35> '<dependent type>' contains-errors '*'     |   |-CallExpr 0x1480e5f30 <col:9, col:31> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1480e5ef0 <col:9> 'int ()' Function 0x1480e5d98 'SWFInput_getChar' 'int ()'     |   | `-RecoveryExpr 0x1480e5f10 <col:26> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x1480e5f58 <col:35> 'int' 256     `-ReturnStmt 0x1480e6000 <line:5:2, col:9>       `-ImplicitCastExpr 0x1480e5fe8 <col:9> 'int' contains-errors <LValueToRValue>         `-DeclRefExpr 0x1480e5fc8 <col:9> 'int' contains-errors lvalue Var 0x1480e5c90 'num' 'int' ","20729":"`-FunctionDecl 0x1399281f8  line:1:20 invalid webp_decode_close 'int (int *)' static   |-ParmVarDecl 0x139928128 <col:38, col:54> col:54 invalid avctx 'int *'   `-CompoundStmt 0x139928618 <line:2:1, line:9:1>     |-IfStmt 0x1399285c8 <line:5:5, line:6:40>     | |-CXXDependentScopeMemberExpr 0x1399283a8 <line:5:9, col:12> '<dependent type>' contains-errors lvalue ->initialized     | | `-RecoveryExpr 0x139928388 <col:9> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1399285b8 <line:6:9, col:40>     |   `-CallExpr 0x139928590 <col:16, col:40> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x139928550 <col:16> 'int ()' Function 0x139928498 'ff_vp8_decode_free' 'int ()'     |     `-RecoveryExpr 0x139928570 <col:35> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x139928608 <line:8:5, col:12>       `-IntegerLiteral 0x1399285e8 <col:12> 'int' 0 ","21163":"`-FunctionDecl 0x145928cc8  line:1:1 invalid make_backsig 'int (int *, int *, int *, int *, int, const char *)'   |-ParmVarDecl 0x145928928 <col:15, col:30> col:30 invalid sig 'int *'   |-ParmVarDecl 0x1459289a8 <col:35, col:51> col:51 invalid pk 'int *'   |-ParmVarDecl 0x145928a28 <line:2:15, col:31> col:31 invalid sub_pk 'int *'   |-ParmVarDecl 0x145928aa8 <col:39, col:55> col:55 invalid sub_psk 'int *'   |-ParmVarDecl 0x145928b28 <line:3:15, col:19> col:19 invalid timestamp 'int'   |-ParmVarDecl 0x145928ba8 <col:30, col:42> col:42 used cache_nonce 'const char *'   `-CompoundStmt 0x145943860 <line:4:1, line:87:1>     |-CallExpr 0x145928f50 <line:8:3, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x145928f10 <col:3> 'int ()' Function 0x145928e58 'cache_public_key' 'int ()'     | `-RecoveryExpr 0x145928f30 <col:21> '<dependent type>' contains-errors lvalue     `-IfStmt 0x145943830 <line:12:3, line:84:5> has_else       |-RecoveryExpr 0x1459422e8 <line:12:7> '<dependent type>' contains-errors lvalue       |-CallExpr 0x145942628 <line:13:5, line:14:34> '<dependent type>' contains-errors       | |-DeclRefExpr 0x1459423e8 <line:13:5> 'int ()' Function 0x145942330 'log_error' 'int ()'       | |-StringLiteral 0x145942450 <col:16> 'char[4]' lvalue \"STR\"       | `-CallExpr 0x145942600 <line:14:16, col:33> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x145942550 <col:16> 'int ()' Function 0x145942498 'gpg_strerror' 'int ()'       |   `-RecoveryExpr 0x1459425e0 <col:30> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x145943818 <line:16:5, line:84:5>         `-IfStmt 0x1459437e8 <line:26:7, line:83:2> has_else           |-RecoveryExpr 0x145942958 <line:26:11> '_Bool' contains-errors           |-NullStmt 0x1459437e0 <line:27:2>           `-CompoundStmt 0x1459437c8 <line:29:2, line:83:2>             `-IfStmt 0x145943578 <line:34:4, line:77:6> has_else               |-RecoveryExpr 0x145942b18 <line:34:7, col:14> '_Bool' contains-errors               |-CompoundStmt 0x1459430c8 <line:35:6, line:54:6>               | `-IfStmt 0x145943098 <line:36:8, line:53:8> has_else               |   |-RecoveryExpr 0x145942b78 <line:36:12, col:21> '_Bool' contains-errors               |   |-CompoundStmt 0x145942bd8 <line:37:3, line:40:3>               |   `-IfStmt 0x145943068 <line:41:13, line:53:8> has_else               |     |-RecoveryExpr 0x145942c28 <line:41:16, col:25> '_Bool' contains-errors               |     |-CompoundStmt 0x145942d08 <line:42:3, line:46:3>               |     `-IfStmt 0x145943038 <line:47:13, line:53:8> has_else               |       |-RecoveryExpr 0x145942d58 <line:47:17, col:27> '_Bool' contains-errors               |       |-CompoundStmt 0x145942eb8 <line:48:3, line:51:3>               |       `-CallExpr 0x145943018 <line:53:3, col:8> 'int'               |         `-ImplicitCastExpr 0x145943000 <col:3> 'int (*)()' <FunctionToPointerDecay>               |           `-DeclRefExpr 0x145942fa8 <col:3> 'int ()' Function 0x145942ef0 'BUG' 'int ()'               `-CompoundStmt 0x145943558 <line:56:6, line:77:6>                 |-DeclStmt 0x145943180 <line:57:8, col:20>                 | `-VarDecl 0x1459430f8 <col:8, col:19> col:12 used mark 'int' cinit                 |   `-IntegerLiteral 0x145943160 <col:19> 'int' 1                 `-SwitchStmt 0x1459431f8 <line:59:8, line:74:3>                   |-RecoveryExpr 0x1459431d8 <line:59:16, col:23> 'int' contains-errors                   `-CompoundStmt 0x145943500 <line:60:3, line:74:3>                     |-CaseStmt 0x145943258 <line:61:3, line:62:10>                     | |-ConstantExpr 0x145943240 <line:61:8> 'int'                     | | `-IntegerLiteral 0x145943220 <col:8> 'int' 3                     | `-CallExpr 0x1459432b8 <line:62:5, col:10> 'int'                     |   `-ImplicitCastExpr 0x1459432a0 <col:5> 'int (*)()' <FunctionToPointerDecay>                     |     `-DeclRefExpr 0x145943280 <col:5> 'int ()' Function 0x145942ef0 'BUG' 'int ()'                     |-BreakStmt 0x1459432d8 <line:63:5>                     |-CaseStmt 0x145943318 <line:65:3, <invalid sloc>>                     | |-ConstantExpr 0x145943300 <col:8> 'int'                     | | `-IntegerLiteral 0x1459432e0 <col:8> 'int' 2                     | `-NullStmt 0x145943340 <<invalid sloc>>                     |-CaseStmt 0x1459433d8 <line:69:3, <invalid sloc>>                     | |-ConstantExpr 0x1459433c0 <col:8> 'int'                     | | `-IntegerLiteral 0x1459433a0 <col:8> 'int' 1                     | `-NullStmt 0x145943458 <<invalid sloc>>                     `-CaseStmt 0x145943498 <line:72:3, <invalid sloc>>                       |-ConstantExpr 0x145943480 <col:8> 'int'                       | `-IntegerLiteral 0x145943460 <col:8> 'int' 0                       `-NullStmt 0x1459434f8 <<invalid sloc>> ","20966":"`-FunctionDecl 0x14200ddf8  line:1:1 invalid S_get_invlist_iter_addr 'int (int *)'   |-ParmVarDecl 0x14200dd28 <col:25, col:29> col:29 invalid invlist 'int *'   `-CompoundStmt 0x14200e248 <line:2:1, line:10:1>     `-CallExpr 0x14200e208 <line:7:5, col:42> '<dependent type>' contains-errors       |-DeclRefExpr 0x14200e000 <col:5> 'int ()' Function 0x14200df48 'assert' 'int ()'       `-BinaryOperator 0x14200e1e8 <col:12, col:31> 'int' contains-errors '=='         |-CallExpr 0x14200e140 <col:12, col:26> '<dependent type>' contains-errors         | |-DeclRefExpr 0x14200e100 <col:12> 'int ()' Function 0x14200e048 'SvTYPE' 'int ()'         | `-RecoveryExpr 0x14200e120 <col:19> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x14200e1c8 <col:31> '<dependent type>' contains-errors lvalue ","20317":"`-FunctionDecl 0x13c80e358  line:1:1 qeh_begin_out 'int (struct qpack_enc_hdl *)'   |-ParmVarDecl 0x13c80e248 <col:16, col:38> col:38 used qeh 'struct qpack_enc_hdl *'   `-CompoundStmt 0x13c8273a8 <line:2:1, line:17:1>     `-IfStmt 0x13c827378 <line:3:5, line:16:5> has_else       |-BinaryOperator 0x13c826c18 <line:3:9, line:6:77> 'int' contains-errors '&&'       | |-BinaryOperator 0x13c826868 <line:3:9, col:32> 'int' '=='       | | |-IntegerLiteral 0x13c826650 <col:9> 'int' 0       | | `-CallExpr 0x13c826828 <col:14, col:32> 'int'       | |   |-ImplicitCastExpr 0x13c826810 <col:14> 'int (*)()' <FunctionToPointerDecay>       | |   | `-DeclRefExpr 0x13c8267a0 <col:14> 'int ()' Function 0x13c8266e8 'qeh_write_type' 'int ()'       | |   `-ImplicitCastExpr 0x13c826850 <col:29> 'struct qpack_enc_hdl *' <LValueToRValue>       | |     `-DeclRefExpr 0x13c8267c0 <col:29> 'struct qpack_enc_hdl *' lvalue ParmVar 0x13c80e248 'qeh' 'struct qpack_enc_hdl *'       | `-ParenExpr 0x13c826bf8 <line:4:12, line:6:77> 'int' contains-errors       |   `-BinaryOperator 0x13c826bd8 <line:4:13, line:6:76> 'int' contains-errors '||'       |     |-BinaryOperator 0x13c826908 <line:4:13, col:32> 'int' contains-errors '=='       |     | |-RecoveryExpr 0x13c8268c0 <col:13, col:18> '<dependent type>' contains-errors lvalue       |     | | `-DeclRefExpr 0x13c826888 <col:13> 'struct qpack_enc_hdl *' lvalue ParmVar 0x13c80e248 'qeh' 'struct qpack_enc_hdl *'       |     | `-IntegerLiteral 0x13c8268e8 <col:32> 'int' 0       |     `-BinaryOperator 0x13c826bb8 <line:5:16, line:6:76> 'int' contains-errors '=='       |       |-IntegerLiteral 0x13c826928 <line:5:16> 'int' 0       |       `-CallExpr 0x13c826b80 <col:21, line:6:76> '<dependent type>' contains-errors       |         |-DeclRefExpr 0x13c826a28 <line:5:21> 'int ()' Function 0x13c826970 'lsquic_frab_list_write' 'int ()'       |         |-UnaryOperator 0x13c826aa8 <col:44, col:50> '<dependent type>' contains-errors prefix '&' cannot overflow       |         | `-RecoveryExpr 0x13c826a80 <col:45, col:50> '<dependent type>' contains-errors lvalue       |         |   `-DeclRefExpr 0x13c826a48 <col:45> 'struct qpack_enc_hdl *' lvalue ParmVar 0x13c80e248 'qeh' 'struct qpack_enc_hdl *'       |         |-RecoveryExpr 0x13c826af8 <col:60, col:65> '<dependent type>' contains-errors lvalue       |         | `-DeclRefExpr 0x13c826ac0 <col:60> 'struct qpack_enc_hdl *' lvalue ParmVar 0x13c80e248 'qeh' 'struct qpack_enc_hdl *'       |         `-RecoveryExpr 0x13c826b58 <line:6:61, col:66> '<dependent type>' contains-errors lvalue       |           `-DeclRefExpr 0x13c826b20 <col:61> 'struct qpack_enc_hdl *' lvalue ParmVar 0x13c80e248 'qeh' 'struct qpack_enc_hdl *'       |-CompoundStmt 0x13c827020 <line:7:5, line:10:5>       | |-CallExpr 0x13c826e40 <line:8:9, col:45> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x13c826d18 <col:9> 'int ()' Function 0x13c826c60 'LSQ_DEBUG' 'int ()'       | | |-StringLiteral 0x13c826d80 <col:19> 'char[4]' lvalue \"STR\"       | | `-BinaryOperator 0x13c826e20 <col:26, col:35> '<dependent type>' contains-errors '+'       | |   |-IntegerLiteral 0x13c826da0 <col:26> 'int' 1       | |   `-RecoveryExpr 0x13c826df8 <col:30, col:35> '<dependent type>' contains-errors lvalue       | |     `-DeclRefExpr 0x13c826dc0 <col:30> 'struct qpack_enc_hdl *' lvalue ParmVar 0x13c80e248 'qeh' 'struct qpack_enc_hdl *'       | `-CallExpr 0x13c826ff0 <line:9:9, col:55> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x13c826f50 <col:9> 'int ()' Function 0x13c826e98 'lsquic_stream_wantwrite' 'int ()'       |   |-RecoveryExpr 0x13c826fa8 <col:33, col:38> '<dependent type>' contains-errors lvalue       |   | `-DeclRefExpr 0x13c826f70 <col:33> 'struct qpack_enc_hdl *' lvalue ParmVar 0x13c80e248 'qeh' 'struct qpack_enc_hdl *'       |   `-IntegerLiteral 0x13c826fd0 <col:54> 'int' 1       `-CompoundStmt 0x13c827358 <line:12:5, line:16:5>         |-CallExpr 0x13c827178 <line:13:9, col:23> 'int'         | |-ImplicitCastExpr 0x13c827160 <col:9> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x13c827120 <col:9> 'int ()' Function 0x13c827068 'LSQ_WARN' 'int ()'         | `-ImplicitCastExpr 0x13c8271a0 <col:18> 'char *' <ArrayToPointerDecay>         |   `-StringLiteral 0x13c827140 <col:18> 'char[4]' lvalue \"STR\"         `-CallExpr 0x13c827328 <line:14:9, line:15:50> '<dependent type>' contains-errors           |-CXXDependentScopeMemberExpr 0x13c827260 <line:14:9, col:31> '<dependent type>' contains-errors lvalue ->ci_internal_error           | `-CXXDependentScopeMemberExpr 0x13c827218 <col:9, col:24> '<dependent type>' contains-errors lvalue ->cn_if           |   `-RecoveryExpr 0x13c8271f0 <col:9, col:14> '<dependent type>' contains-errors lvalue           |     `-DeclRefExpr 0x13c8271b8 <col:9> 'struct qpack_enc_hdl *' lvalue ParmVar 0x13c80e248 'qeh' 'struct qpack_enc_hdl *'           |-RecoveryExpr 0x13c8272e0 <col:49, col:54> '<dependent type>' contains-errors lvalue           | `-DeclRefExpr 0x13c8272a8 <col:49> 'struct qpack_enc_hdl *' lvalue ParmVar 0x13c80e248 'qeh' 'struct qpack_enc_hdl *'           `-StringLiteral 0x13c827308 <line:15:45> 'char[4]' lvalue \"STR\" ","20546":"`-FunctionDecl 0x152128558  line:1:5 invalid jas_image_writecmpt 'int (int *, int, int, int, int, int, int *)'   |-ParmVarDecl 0x152128128 <col:25, col:38> col:38 invalid image 'int *'   |-ParmVarDecl 0x1521281a8 <col:45, col:49> col:49 used cmptno 'int'   |-ParmVarDecl 0x152128228 <col:57, col:75> col:75 invalid x 'int'   |-ParmVarDecl 0x1521282a8 <col:78, col:96> col:96 invalid y 'int'   |-ParmVarDecl 0x152128328 <col:99, col:117> col:117 invalid width 'int'   |-ParmVarDecl 0x1521283a8 <line:2:3, col:21> col:21 invalid height 'int'   |-ParmVarDecl 0x152128428 <col:29, col:43> col:43 invalid data 'int *'   `-CompoundStmt 0x152143118 <line:3:1, line:51:1>     |-DeclStmt 0x152128700 <line:9:2, col:9>     | `-VarDecl 0x152128698 <col:2, col:6> col:6 used drs 'int'     |-DeclStmt 0x152128798 <line:11:2, col:7>     | `-VarDecl 0x152128730 <col:2, col:6> col:6 used k 'int'     |-DeclStmt 0x152141868 <line:12:2, col:7>     | `-VarDecl 0x152141800 <col:2, col:6> col:6 used c 'int'     |-IfStmt 0x152141a20 <line:14:2, line:16:2>     | |-BinaryOperator 0x1521419a0 <line:14:6, col:37> 'int' contains-errors '||'     | | |-BinaryOperator 0x1521418d8 <col:6, col:15> 'int' '<'     | | | |-ImplicitCastExpr 0x1521418c0 <col:6> 'int' <LValueToRValue>     | | | | `-DeclRefExpr 0x152141880 <col:6> 'int' lvalue ParmVar 0x1521281a8 'cmptno' 'int'     | | | `-IntegerLiteral 0x1521418a0 <col:15> 'int' 0     | | `-BinaryOperator 0x152141980 <col:20, col:37> 'int' contains-errors '>='     | |   |-DeclRefExpr 0x1521418f8 <col:20> 'int' lvalue ParmVar 0x1521281a8 'cmptno' 'int'     | |   `-CXXDependentScopeMemberExpr 0x152141938 <col:30, col:37> '<dependent type>' contains-errors lvalue ->numcmpts_     | |     `-RecoveryExpr 0x152141918 <col:30> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x152141a08 <col:48, line:16:2>     |   `-ReturnStmt 0x1521419f8 <line:15:3, col:11>     |     `-UnaryOperator 0x1521419e0 <col:10, col:11> 'int' prefix '-'     |       `-IntegerLiteral 0x1521419c0 <col:11> 'int' 1     |-IfStmt 0x152142158 <line:19:2, line:23:2>     | |-BinaryOperator 0x1521420d8 <line:19:6, line:21:23> 'int' contains-errors '||'     | | |-BinaryOperator 0x152142030 <line:19:6, line:20:22> 'int' contains-errors '||'     | | | |-BinaryOperator 0x152141f88 <line:19:6, col:38> 'int' contains-errors '||'     | | | | |-BinaryOperator 0x152141ee0 <col:6, col:17> 'int' contains-errors '>='     | | | | | |-RecoveryExpr 0x152141b18 <col:6> '<dependent type>' contains-errors lvalue     | | | | | `-CXXDependentScopeMemberExpr 0x152141e98 <col:11, col:17> '<dependent type>' contains-errors lvalue ->width_     | | | | |   `-RecoveryExpr 0x152141e78 <col:11> '<dependent type>' contains-errors lvalue     | | | | `-BinaryOperator 0x152141f68 <col:27, col:38> 'int' contains-errors '>='     | | | |   |-RecoveryExpr 0x152141bb8 <col:27> '<dependent type>' contains-errors lvalue     | | | |   `-CXXDependentScopeMemberExpr 0x152141f20 <col:32, col:38> '<dependent type>' contains-errors lvalue ->height_     | | | |     `-RecoveryExpr 0x152141f00 <col:32> '<dependent type>' contains-errors lvalue     | | | `-BinaryOperator 0x152142010 <line:20:4, col:22> 'int' contains-errors '>'     | | |   |-BinaryOperator 0x152141cb8 <col:4, col:8> '<dependent type>' contains-errors '+'     | | |   | |-RecoveryExpr 0x152141c78 <col:4> '<dependent type>' contains-errors lvalue     | | |   | `-RecoveryExpr 0x152141c98 <col:8> '<dependent type>' contains-errors lvalue     | | |   `-CXXDependentScopeMemberExpr 0x152141fc8 <col:16, col:22> '<dependent type>' contains-errors lvalue ->width_     | | |     `-RecoveryExpr 0x152141fa8 <col:16> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x1521420b8 <line:21:4, col:23> 'int' contains-errors '>'     | |   |-BinaryOperator 0x152141db8 <col:4, col:8> '<dependent type>' contains-errors '+'     | |   | |-RecoveryExpr 0x152141d78 <col:4> '<dependent type>' contains-errors lvalue     | |   | `-RecoveryExpr 0x152141d98 <col:8> '<dependent type>' contains-errors lvalue     | |   `-CXXDependentScopeMemberExpr 0x152142070 <col:17, col:23> '<dependent type>' contains-errors lvalue ->height_     | |     `-RecoveryExpr 0x152142050 <col:17> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x152142140 <col:32, line:23:2>     |   `-ReturnStmt 0x152142130 <line:22:3, col:11>     |     `-UnaryOperator 0x152142118 <col:10, col:11> 'int' prefix '-'     |       `-IntegerLiteral 0x1521420f8 <col:11> 'int' 1     |-IfStmt 0x152142580 <line:25:2, line:27:2>     | |-BinaryOperator 0x152142500 <line:25:6, col:72> 'int' contains-errors '||'     | | |-BinaryOperator 0x152142358 <col:6, col:34> 'int' contains-errors '!='     | | | |-CallExpr 0x152142310 <col:6, col:29> '<dependent type>' contains-errors     | | | | |-DeclRefExpr 0x1521422d0 <col:6> 'int ()' Function 0x152142218 'jas_matrix_numrows' 'int ()'     | | | | `-RecoveryExpr 0x1521422f0 <col:25> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x152142338 <col:34> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x1521424e0 <col:44, col:72> 'int' contains-errors '!='     | |   |-CallExpr 0x152142498 <col:44, col:67> '<dependent type>' contains-errors     | |   | |-DeclRefExpr 0x152142458 <col:44> 'int ()' Function 0x1521423a0 'jas_matrix_numcols' 'int ()'     | |   | `-RecoveryExpr 0x152142478 <col:63> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x1521424c0 <col:72> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x152142568 <col:79, line:27:2>     |   `-ReturnStmt 0x152142558 <line:26:3, col:11>     |     `-UnaryOperator 0x152142540 <col:10, col:11> 'int' prefix '-'     |       `-IntegerLiteral 0x152142520 <col:11> 'int' 1     |-BinaryOperator 0x152142920 <line:30:2, col:31> 'int' contains-errors '='     | |-DeclRefExpr 0x152142738 <col:2> 'int' lvalue Var 0x152128698 'drs' 'int'     | `-CallExpr 0x1521428f8 <col:8, col:31> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1521428b8 <col:8> 'int ()' Function 0x152142800 'jas_matrix_rowstep' 'int ()'     |   `-RecoveryExpr 0x1521428d8 <col:27> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x152143108 <line:50:2, col:9>       `-IntegerLiteral 0x1521430e8 <col:9> 'int' 0 ","20801":"`-FunctionDecl 0x13280cab8  col:5 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x13280cbb8 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x13280cb60 <<invalid sloc>> Implicit 873 ","20461":"`-FunctionDecl 0x12800df18  line:1:1 invalid p11_index_find_all 'int (int *, int *, int)'   |-ParmVarDecl 0x12800dd28 <col:21, col:32> col:32 invalid index 'int *'   |-ParmVarDecl 0x12800dda8 <line:2:21, col:35> col:35 invalid match 'int *'   |-ParmVarDecl 0x12800de28 <line:3:21, col:25> col:25 used count 'int'   `-CompoundStmt 0x1280283f8 <line:4:1, line:17:1>     |-CallExpr 0x12800e250 <line:7:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12800e130 <col:2> 'int ()' Function 0x12800e078 'return_val_if_fail' 'int ()'     | |-BinaryOperator 0x12800e210 <col:22, col:31> 'int' contains-errors '!='     | | |-RecoveryExpr 0x12800e150 <col:22> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12800e1f0 <col:31> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x12800e230 <col:37> '<dependent type>' contains-errors lvalue     |-IfStmt 0x128027e88 <line:9:2, line:10:33>     | |-BinaryOperator 0x12800e2d8 <line:9:6, col:14> 'int' '<'     | | |-ImplicitCastExpr 0x12800e2c0 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x12800e280 <col:6> 'int' lvalue ParmVar 0x12800de28 'count' 'int'     | | `-IntegerLiteral 0x12800e2a0 <col:14> 'int' 0     | `-BinaryOperator 0x128027e68 <line:10:3, col:33> 'int' contains-errors '='     |   |-DeclRefExpr 0x12800e2f8 <col:3> 'int' lvalue ParmVar 0x12800de28 'count' 'int'     |   `-CallExpr 0x128027e40 <col:11, col:33> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x128027e00 <col:11> 'int ()' Function 0x12800e340 'p11_attrs_count' 'int ()'     |     `-RecoveryExpr 0x128027e20 <col:28> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1280280f0 <line:12:2, col:60> '<dependent type>' contains-errors     | |-DeclRefExpr 0x128027f88 <col:2> 'int ()' Function 0x128027ed0 'index_select' 'int ()'     | |-RecoveryExpr 0x128027fa8 <col:16> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x128027fc8 <col:23> '<dependent type>' contains-errors lvalue     | |-DeclRefExpr 0x128027fe8 <col:30> 'int' lvalue ParmVar 0x12800de28 'count' 'int'     | |-RecoveryExpr 0x128028098 <col:37> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x1280280d8 <col:52, col:53> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1280280b8 <col:53> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1280282f0 <line:15:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x128028218 <col:2> 'int ()' Function 0x128028160 'bucket_push' 'int ()'     | |-UnaryOperator 0x1280282d8 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x1280282b8 <col:16> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x128028268 <col:25> 'unsigned long' 0     `-ReturnStmt 0x1280283e8 <line:16:2, col:17>       `-CXXDependentScopeMemberExpr 0x1280283a0 <col:9, col:17> '<dependent type>' contains-errors lvalue .elem         `-RecoveryExpr 0x128028380 <col:9> '<dependent type>' contains-errors lvalue ","20529":"`-FunctionDecl 0x12b826768  line:1:17 blk_mq_tag_to_rq 'struct request *(struct blk_mq_tags *, unsigned int)'   |-ParmVarDecl 0x12b80e2e8 <col:34, col:54> col:54 used tags 'struct blk_mq_tags *'   |-ParmVarDecl 0x12b80e368 <col:60, col:73> col:73 used tag 'unsigned int'   `-CompoundStmt 0x12b8271a8 <line:2:1, line:11:1>     |-DeclStmt 0x12b826a30 <line:3:2, col:37>     | `-VarDecl 0x12b8268f8 <col:2, col:36> col:18 used rq 'struct request *' cinit     |   `-ArraySubscriptExpr 0x12b826a10 <col:23, col:36> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x12b8269e0 <col:23, col:29> '<dependent type>' contains-errors <LValueToRValue>     |     | `-RecoveryExpr 0x12b826998 <col:23, col:29> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x12b826960 <col:23> 'struct blk_mq_tags *' lvalue ParmVar 0x12b80e2e8 'tags' 'struct blk_mq_tags *'     |     `-ImplicitCastExpr 0x12b8269f8 <col:33> 'unsigned int' <LValueToRValue>     |       `-DeclRefExpr 0x12b8269c0 <col:33> 'unsigned int' lvalue ParmVar 0x12b80e368 'tag' 'unsigned int'     |-DeclStmt 0x12b826e78 <line:5:2, col:69>     | |-RecordDecl 0x12b826a48 <col:2, col:9> col:9 struct blk_flush_queue     | `-VarDecl 0x12b826bb8 <col:2, col:68> col:26 used fq 'struct blk_flush_queue *' cinit     |   `-CallExpr 0x12b826e30 <col:31, col:68> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12b826d50 <col:31> 'int ()' Function 0x12b826c98 'blk_get_flush_queue' 'int ()'     |     |-RecoveryExpr 0x12b826da8 <col:51, col:55> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x12b826d70 <col:51> 'struct request *' contains-errors lvalue Var 0x12b8268f8 'rq' 'struct request *'     |     `-RecoveryExpr 0x12b826e08 <col:58, col:62> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x12b826dd0 <col:58> 'struct request *' contains-errors lvalue Var 0x12b8268f8 'rq' 'struct request *'     |-IfStmt 0x12b827118 <line:7:2, line:8:10>     | |-UnaryOperator 0x12b8270b8 <line:7:6, col:35> 'int' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x12b827038 <col:7, col:35> 'int' contains-errors     | |   |-ImplicitCastExpr 0x12b827020 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x12b826f70 <col:7> 'int ()' Function 0x12b826eb8 'is_flush_request' 'int ()'     | |   |-ImplicitCastExpr 0x12b827070 <col:24> 'struct request *' contains-errors <LValueToRValue>     | |   | `-DeclRefExpr 0x12b826f90 <col:24> 'struct request *' contains-errors lvalue Var 0x12b8268f8 'rq' 'struct request *'     | |   |-ImplicitCastExpr 0x12b827088 <col:28> 'struct blk_flush_queue *' contains-errors <LValueToRValue>     | |   | `-DeclRefExpr 0x12b826fb0 <col:28> 'struct blk_flush_queue *' contains-errors lvalue Var 0x12b826bb8 'fq' 'struct blk_flush_queue *'     | |   `-ImplicitCastExpr 0x12b8270a0 <col:32> 'unsigned int' <LValueToRValue>     | |     `-DeclRefExpr 0x12b826fd0 <col:32> 'unsigned int' lvalue ParmVar 0x12b80e368 'tag' 'unsigned int'     | `-ReturnStmt 0x12b827108 <line:8:3, col:10>     |   `-ImplicitCastExpr 0x12b8270f0 <col:10> 'struct request *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x12b8270d0 <col:10> 'struct request *' contains-errors lvalue Var 0x12b8268f8 'rq' 'struct request *'     `-ReturnStmt 0x12b827198 <line:10:2, col:13>       `-RecoveryExpr 0x12b827170 <col:9, col:13> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x12b827138 <col:9> 'struct blk_flush_queue *' contains-errors lvalue Var 0x12b826bb8 'fq' 'struct blk_flush_queue *' ","20961":"`-FunctionDecl 0x131928258  line:1:1 invalid nodePush 'int (int, int)'   |-ParmVarDecl 0x1319280f0 <col:10, col:27> col:27 referenced invalid ctxt 'int'   |-ParmVarDecl 0x131928170 <col:33, col:44> col:44 invalid value 'int'   `-CompoundStmt 0x132009eb8 <line:2:1, line:28:1>     |-IfStmt 0x1319283f8 <line:3:5, col:31>     | |-BinaryOperator 0x131928388 <col:9, col:17> 'int' contains-errors '=='     | | |-RecoveryExpr 0x131928310 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x131928368 <col:17> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1319283e8 <col:23, col:31>     |   `-ParenExpr 0x1319283c8 <col:29, col:31> 'int'     |     `-IntegerLiteral 0x1319283a8 <col:30> 'int' 0     |-IfStmt 0x1320094e8 <line:4:5, line:16:5>     | |-BinaryOperator 0x1319284e8 <line:4:9, col:31> 'int' contains-errors '>='     | | |-CXXDependentScopeMemberExpr 0x131928438 <col:9, col:15> '<dependent type>' contains-errors lvalue ->nodeNr     | | | `-RecoveryExpr 0x131928418 <col:9> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x1319284a0 <col:25, col:31> '<dependent type>' contains-errors lvalue ->nodeMax     | |   `-RecoveryExpr 0x131928480 <col:25> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1320094c0 <col:40, line:16:5>     |   |-IfStmt 0x1320092b8 <line:10:9, line:13:9>     |   | |-BinaryOperator 0x1319285c8 <line:10:13, col:20> 'int' contains-errors '=='     |   | | |-RecoveryExpr 0x131928588 <col:13> '<dependent type>' contains-errors lvalue     |   | | `-RecoveryExpr 0x1319285a8 <col:20> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x132009298 <col:26, line:13:9>     |   |   |-CallExpr 0x132009200 <line:11:13, col:36> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x131928740 <col:13> 'int ()' Function 0x131928688 'xmlErrMemory' 'int ()'     |   |   | |-RecoveryExpr 0x131928760 <col:26> '<dependent type>' contains-errors lvalue     |   |   | `-RecoveryExpr 0x1319287c8 <col:32> '<dependent type>' contains-errors lvalue     |   |   `-ReturnStmt 0x132009288 <line:12:13, col:23>     |   |     `-ParenExpr 0x132009268 <col:20, col:23> 'int'     |   |       `-UnaryOperator 0x132009250 <col:21, col:22> 'int' prefix '-'     |   |         `-IntegerLiteral 0x132009230 <col:22> 'int' 1     |   |-BinaryOperator 0x1320093c0 <line:14:9, col:25> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x132009320 <col:9, col:15> '<dependent type>' contains-errors lvalue ->nodeTab     |   | | `-RecoveryExpr 0x1320092f8 <col:9> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x1320092d8 <col:9> 'int' lvalue ParmVar 0x1319280f0 'ctxt' 'int'     |   | `-RecoveryExpr 0x1320093a0 <col:25> '<dependent type>' contains-errors lvalue     |   `-CompoundAssignOperator 0x132009490 <line:15:2, col:19> '<dependent type>' contains-errors '*=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |     |-CXXDependentScopeMemberExpr 0x132009428 <col:2, col:8> '<dependent type>' contains-errors lvalue ->nodeMax     |     | `-RecoveryExpr 0x132009400 <col:2> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x1320093e0 <col:2> 'int' lvalue ParmVar 0x1319280f0 'ctxt' 'int'     |     `-IntegerLiteral 0x132009470 <col:19> 'int' 2     |-IfStmt 0x132009b90 <line:17:5, line:24:5>     | |-RecoveryExpr 0x132009728 <line:17:9, line:18:47> '_Bool' contains-errors     | `-CompoundStmt 0x132009b68 <col:50, line:24:5>     |   |-CallExpr 0x132009978 <line:19:2, line:21:23> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x132009828 <line:19:2> 'int ()' Function 0x132009770 'xmlFatalErrMsgInt' 'int ()'     |   | |-RecoveryExpr 0x132009848 <col:20> '<dependent type>' contains-errors lvalue     |   | |-RecoveryExpr 0x132009938 <col:26> '<dependent type>' contains-errors lvalue     |   | |-StringLiteral 0x1320098c0 <line:20:4> 'char[4]' lvalue \"STR\"     |   | `-RecoveryExpr 0x132009958 <line:21:6> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x132009ad8 <line:22:2, col:20> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x132009a98 <col:2> 'int ()' Function 0x1320099e0 'xmlHaltParser' 'int ()'     |   | `-RecoveryExpr 0x132009ab8 <col:16> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x132009b58 <line:23:2, col:11>     |     `-ParenExpr 0x132009b38 <col:8, col:11> 'int'     |       `-UnaryOperator 0x132009b20 <col:9, col:10> 'int' prefix '-'     |         `-IntegerLiteral 0x132009b00 <col:10> 'int' 1     |-BinaryOperator 0x132009d18 <line:25:5, col:35> '<dependent type>' contains-errors '='     | |-ArraySubscriptExpr 0x132009cd8 <col:5, col:31> '<dependent type>' contains-errors lvalue     | | |-ImplicitCastExpr 0x132009ca8 <col:5, col:11> '<dependent type>' contains-errors <LValueToRValue>     | | | `-CXXDependentScopeMemberExpr 0x132009bf8 <col:5, col:11> '<dependent type>' contains-errors lvalue ->nodeTab     | | |   `-RecoveryExpr 0x132009bd0 <col:5> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x132009bb0 <col:5> 'int' lvalue ParmVar 0x1319280f0 'ctxt' 'int'     | | `-ImplicitCastExpr 0x132009cc0 <col:19, col:25> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x132009c60 <col:19, col:25> '<dependent type>' contains-errors lvalue ->nodeNr     | |     `-RecoveryExpr 0x132009c40 <col:19> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x132009cf8 <col:35> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x132009de8 <line:26:5, col:18> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x132009d80 <col:5, col:11> '<dependent type>' contains-errors lvalue ->node     | | `-RecoveryExpr 0x132009d58 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x132009d38 <col:5> 'int' lvalue ParmVar 0x1319280f0 'ctxt' 'int'     | `-RecoveryExpr 0x132009dc8 <col:18> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x132009ea8 <line:27:5, col:27>       `-ParenExpr 0x132009e88 <col:12, col:27> '<dependent type>' contains-errors         `-UnaryOperator 0x132009e70 <col:13, col:25> '<dependent type>' contains-errors postfix '++' cannot overflow           `-CXXDependentScopeMemberExpr 0x132009e28 <col:13, col:19> '<dependent type>' contains-errors lvalue ->nodeNr             `-RecoveryExpr 0x132009e08 <col:13> '<dependent type>' contains-errors lvalue ","20709":"`-FunctionDecl 0x13e011ee8  line:1:1 invalid qemuProcessUpdateAndVerifyCPU 'int (int, int, int)'   |-ParmVarDecl 0x13e011cf0 <col:31, col:48> col:48 invalid driver 'int'   |-ParmVarDecl 0x13e011d70 <line:2:31, col:47> col:47 invalid vm 'int'   |-ParmVarDecl 0x13e011df0 <line:3:31, col:50> col:50 invalid asyncJob 'int'   `-CompoundStmt 0x13e02c088 <line:4:1, line:24:1>     |-DeclStmt 0x13e012060 <line:7:5, col:17>     | `-VarDecl 0x13e011fc0 <col:5, col:16> col:9 used ret 'int' cinit     |   `-UnaryOperator 0x13e012048 <col:15, col:16> 'int' prefix '-'     |     `-IntegerLiteral 0x13e012028 <col:16> 'int' 1     |-IfStmt 0x13e02b888 <line:9:5, line:10:14>     | |-BinaryOperator 0x13e02b800 <line:9:9, col:75> 'int' contains-errors '<'     | | |-CallExpr 0x13e0123a8 <col:9, col:71> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x13e0121d0 <col:9> 'int ()' Function 0x13e012118 'qemuProcessFetchGuestCPU' 'int ()'     | | | |-RecoveryExpr 0x13e0121f0 <col:34> '<dependent type>' contains-errors lvalue     | | | |-RecoveryExpr 0x13e012210 <col:42> '<dependent type>' contains-errors lvalue     | | | |-RecoveryExpr 0x13e012230 <col:46> '<dependent type>' contains-errors lvalue     | | | |-UnaryOperator 0x13e012358 <col:56, col:57> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | | `-RecoveryExpr 0x13e012338 <col:57> '<dependent type>' contains-errors lvalue     | | | `-UnaryOperator 0x13e012390 <col:62, col:63> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-RecoveryExpr 0x13e012370 <col:63> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x13e0122f8 <col:75> 'int' 0     | `-GotoStmt 0x13e02b870 <line:10:9, col:14> 'cleanup' 0x13e02b820     |-IfStmt 0x13e02bad8 <line:12:5, line:13:14>     | |-BinaryOperator 0x13e02baa0 <line:12:9, col:41> 'int' contains-errors '<'     | | |-CallExpr 0x13e02ba70 <col:9, col:37> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x13e02b988 <col:9> 'int ()' Function 0x13e02b8d0 'qemuProcessVerifyCPU' 'int ()'     | | | |-RecoveryExpr 0x13e02b9a8 <col:30> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x13e02ba50 <col:34> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x13e02ba10 <col:41> 'int' 0     | `-GotoStmt 0x13e02bac0 <line:13:9, col:14> 'cleanup' 0x13e02b820     |-IfStmt 0x13e02bd70 <line:15:5, line:16:14>     | |-BinaryOperator 0x13e02bd38 <line:15:9, col:60> 'int' contains-errors '<'     | | |-CallExpr 0x13e02bd00 <col:9, col:56> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x13e02bbd8 <col:9> 'int ()' Function 0x13e02bb20 'qemuProcessUpdateLiveGuestCPU' 'int ()'     | | | |-RecoveryExpr 0x13e02bbf8 <col:39> '<dependent type>' contains-errors lvalue     | | | |-RecoveryExpr 0x13e02bcc0 <col:43> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x13e02bce0 <col:48> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x13e02bc80 <col:60> 'int' 0     | `-GotoStmt 0x13e02bd58 <line:16:9, col:14> 'cleanup' 0x13e02b820     |-BinaryOperator 0x13e02bdd0 <line:18:5, col:11> 'int' '='     | |-DeclRefExpr 0x13e02bd90 <col:5> 'int' lvalue Var 0x13e011fc0 'ret' 'int'     | `-IntegerLiteral 0x13e02bdb0 <col:11> 'int' 0     |-LabelStmt 0x13e02bf78 <line:20:2, line:21:23> 'cleanup'     | `-CallExpr 0x13e02bf50 <col:5, col:23> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13e02bed0 <col:5> 'int ()' Function 0x13e02be18 'virCPUDataFree' 'int ()'     |   `-RecoveryExpr 0x13e02bf30 <col:20> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13e02c018 <line:22:5, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13e02bf98 <col:5> 'int ()' Function 0x13e02be18 'virCPUDataFree' 'int ()'     | `-RecoveryExpr 0x13e02bff8 <col:20> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x13e02c078 <line:23:5, col:12>       `-ImplicitCastExpr 0x13e02c060 <col:12> 'int' <LValueToRValue>         `-DeclRefExpr 0x13e02c040 <col:12> 'int' lvalue Var 0x13e011fc0 'ret' 'int' ","20796":"`-FunctionDecl 0x14f126378  line:1:25 invalid tjBufSizeYUV2 'int (int, int, int, int)'   |-ParmVarDecl 0x14f1260f0 <col:39, col:43> col:43 used width 'int'   |-ParmVarDecl 0x14f126170 <col:50, col:54> col:54 used pad 'int'   |-ParmVarDecl 0x14f1261f0 <col:59, col:63> col:63 used height 'int'   |-ParmVarDecl 0x14f126270 <line:2:39, col:43> col:43 used subsamp 'int'   `-CompoundStmt 0x14e80c190 <line:3:1, line:21:1>     |-DeclStmt 0x14f126600 <line:4:3, col:24>     | |-VarDecl 0x14f126458 <col:3, col:16> col:7 used retval 'int' cinit     | | `-IntegerLiteral 0x14f1264c0 <col:16> 'int' 0     | |-VarDecl 0x14f1264f8 <col:3, col:19> col:19 used nc 'int'     | `-VarDecl 0x14f126578 <col:3, col:23> col:23 used i 'int'     |-IfStmt 0x14e80b468 <line:6:3, line:7:17>     | |-BinaryOperator 0x14f1267b8 <line:6:7, col:33> 'int' contains-errors '||'     | | |-BinaryOperator 0x14f126758 <col:7, col:17> 'int' '<'     | | | |-ImplicitCastExpr 0x14f126740 <col:7> 'int' <LValueToRValue>     | | | | `-DeclRefExpr 0x14f126618 <col:7> 'int' lvalue ParmVar 0x14f126270 'subsamp' 'int'     | | | `-IntegerLiteral 0x14f126638 <col:17> 'int' 0     | | `-BinaryOperator 0x14f126798 <col:22, col:33> 'int' contains-errors '>='     | |   |-DeclRefExpr 0x14f126690 <col:22> 'int' lvalue ParmVar 0x14f126270 'subsamp' 'int'     | |   `-RecoveryExpr 0x14f126778 <col:33> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x14e80b428 <line:7:5, col:17> 'int'     |   |-ImplicitCastExpr 0x14e80b410 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14e80b360 <col:5> 'int ()' Function 0x14e80b2a8 'THROWG' 'int ()'     |   `-ImplicitCastExpr 0x14e80b450 <col:12> 'char *' <ArrayToPointerDecay>     |     `-StringLiteral 0x14e80b3c0 <col:12> 'char[4]' lvalue \"STR\"     |-ForStmt 0x14e80c0a0 <line:10:3, line:17:3>     | |-BinaryOperator 0x14e80b5b0 <line:10:8, col:12> 'int' '='     | | |-DeclRefExpr 0x14e80b570 <col:8> 'int' lvalue Var 0x14f126578 'i' 'int'     | | `-IntegerLiteral 0x14e80b590 <col:12> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x14e80b640 <col:15, col:19> 'int' '<'     | | |-ImplicitCastExpr 0x14e80b610 <col:15> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x14e80b5d0 <col:15> 'int' lvalue Var 0x14f126578 'i' 'int'     | | `-ImplicitCastExpr 0x14e80b628 <col:19> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x14e80b5f0 <col:19> 'int' lvalue Var 0x14f1264f8 'nc' 'int'     | |-UnaryOperator 0x14e80b680 <col:23, col:24> 'int' postfix '++'     | | `-DeclRefExpr 0x14e80b660 <col:23> 'int' lvalue Var 0x14f126578 'i' 'int'     | `-CompoundStmt 0x14e80c070 <col:28, line:17:3>     |   |-DeclStmt 0x14e80b910 <line:11:5, col:45>     |   | `-VarDecl 0x14e80b6b0 <col:5, col:44> col:9 used pw 'int' cinit     |   |   `-CallExpr 0x14e80b890 <col:14, col:44> 'int'     |   |     |-ImplicitCastExpr 0x14e80b878 <col:14> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x14e80b7f8 <col:14> 'int ()' Function 0x14e80b740 'tjPlaneWidth' 'int ()'     |   |     |-ImplicitCastExpr 0x14e80b8c8 <col:27> 'int' <LValueToRValue>     |   |     | `-DeclRefExpr 0x14e80b818 <col:27> 'int' lvalue Var 0x14f126578 'i' 'int'     |   |     |-ImplicitCastExpr 0x14e80b8e0 <col:30> 'int' <LValueToRValue>     |   |     | `-DeclRefExpr 0x14e80b838 <col:30> 'int' lvalue ParmVar 0x14f1260f0 'width' 'int'     |   |     `-ImplicitCastExpr 0x14e80b8f8 <col:37> 'int' <LValueToRValue>     |   |       `-DeclRefExpr 0x14e80b858 <col:37> 'int' lvalue ParmVar 0x14f126270 'subsamp' 'int'     |   |-DeclStmt 0x14e80bb60 <line:12:5, col:30>     |   | `-VarDecl 0x14e80b940 <col:5, col:29> col:9 used stride 'int' cinit     |   |   `-CallExpr 0x14e80bb00 <col:18, col:29> 'int'     |   |     |-ImplicitCastExpr 0x14e80bae8 <col:18> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x14e80ba88 <col:18> 'int ()' Function 0x14e80b9d0 'PAD' 'int ()'     |   |     |-ImplicitCastExpr 0x14e80bb30 <col:22> 'int' <LValueToRValue>     |   |     | `-DeclRefExpr 0x14e80baa8 <col:22> 'int' lvalue Var 0x14e80b6b0 'pw' 'int'     |   |     `-ImplicitCastExpr 0x14e80bb48 <col:26> 'int' <LValueToRValue>     |   |       `-DeclRefExpr 0x14e80bac8 <col:26> 'int' lvalue ParmVar 0x14f126170 'pad' 'int'     |   |-DeclStmt 0x14e80bdf0 <line:13:5, col:47>     |   | `-VarDecl 0x14e80bb90 <col:5, col:46> col:9 used ph 'int' cinit     |   |   `-CallExpr 0x14e80bd70 <col:14, col:46> 'int'     |   |     |-ImplicitCastExpr 0x14e80bd58 <col:14> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x14e80bcd8 <col:14> 'int ()' Function 0x14e80bc20 'tjPlaneHeight' 'int ()'     |   |     |-ImplicitCastExpr 0x14e80bda8 <col:28> 'int' <LValueToRValue>     |   |     | `-DeclRefExpr 0x14e80bcf8 <col:28> 'int' lvalue Var 0x14f126578 'i' 'int'     |   |     |-ImplicitCastExpr 0x14e80bdc0 <col:31> 'int' <LValueToRValue>     |   |     | `-DeclRefExpr 0x14e80bd18 <col:31> 'int' lvalue ParmVar 0x14f1261f0 'height' 'int'     |   |     `-ImplicitCastExpr 0x14e80bdd8 <col:39> 'int' <LValueToRValue>     |   |       `-DeclRefExpr 0x14e80bd38 <col:39> 'int' lvalue ParmVar 0x14f126270 'subsamp' 'int'     |   `-IfStmt 0x14e80c040 <line:15:5, line:16:29> has_else     |     |-BinaryOperator 0x14e80bef8 <line:15:9, col:24> 'int' '||'     |     | |-BinaryOperator 0x14e80be60 <col:9, col:14> 'int' '<'     |     | | |-ImplicitCastExpr 0x14e80be48 <col:9> 'int' <LValueToRValue>     |     | | | `-DeclRefExpr 0x14e80be08 <col:9> 'int' lvalue Var 0x14e80b6b0 'pw' 'int'     |     | | `-IntegerLiteral 0x14e80be28 <col:14> 'int' 0     |     | `-BinaryOperator 0x14e80bed8 <col:19, col:24> 'int' '<'     |     |   |-ImplicitCastExpr 0x14e80bec0 <col:19> 'int' <LValueToRValue>     |     |   | `-DeclRefExpr 0x14e80be80 <col:19> 'int' lvalue Var 0x14e80bb90 'ph' 'int'     |     |   `-IntegerLiteral 0x14e80bea0 <col:24> 'int' 0     |     |-ReturnStmt 0x14e80bf50 <col:27, col:35>     |     | `-UnaryOperator 0x14e80bf38 <col:34, col:35> 'int' prefix '-'     |     |   `-IntegerLiteral 0x14e80bf18 <col:35> 'int' 1     |     `-CompoundAssignOperator 0x14e80c010 <line:16:10, col:29> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'     |       |-DeclRefExpr 0x14e80bf60 <col:10> 'int' lvalue Var 0x14f126458 'retval' 'int'     |       `-BinaryOperator 0x14e80bff0 <col:20, col:29> 'int' '*'     |         |-ImplicitCastExpr 0x14e80bfc0 <col:20> 'int' <LValueToRValue>     |         | `-DeclRefExpr 0x14e80bf80 <col:20> 'int' lvalue Var 0x14e80b940 'stride' 'int'     |         `-ImplicitCastExpr 0x14e80bfd8 <col:29> 'int' <LValueToRValue>     |           `-DeclRefExpr 0x14e80bfa0 <col:29> 'int' lvalue Var 0x14e80bb90 'ph' 'int'     `-LabelStmt 0x14e80c170 <line:19:1, line:20:10> 'bailout'       `-ReturnStmt 0x14e80c110 <col:3, col:10>         `-ImplicitCastExpr 0x14e80c0f8 <col:10> 'int' <LValueToRValue>           `-DeclRefExpr 0x14e80c0d8 <col:10> 'int' lvalue Var 0x14f126458 'retval' 'int' ","20702":"`-FunctionDecl 0x13c1418b8  col:5 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x13c143800 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x13c141960 <<invalid sloc>> Implicit 873 ","20205":"`-FunctionDecl 0x13780de88  line:1:12 invalid fts3SpecialInsert 'int (int *, int *)' static   |-ParmVarDecl 0x13780dd28 <col:30, col:41> col:41 invalid p 'int *'   |-ParmVarDecl 0x13780dda8 <col:44, col:59> col:59 invalid pVal 'int *'   `-CompoundStmt 0x13782a940 <col:64, line:34:1>     |-DeclStmt 0x13780dfc0 <line:2:3, col:9>     | `-VarDecl 0x13780df58 <col:3, col:7> col:7 used rc 'int'     |-DeclStmt 0x13780e258 <line:3:3, col:60>     | `-VarDecl 0x13780dff0 <col:3, col:59> col:15 used zVal 'const char *' cinit     |   `-CStyleCastExpr 0x13780e230 <col:22, col:59> 'const char *' contains-errors <Dependent>     |     `-CallExpr 0x13780e1f0 <col:36, col:59> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x13780e1b0 <col:36> 'int ()' Function 0x13780e0f8 'sqlite3_value_text' 'int ()'     |       `-RecoveryExpr 0x13780e1d0 <col:55> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x137828448 <line:4:3, col:39>     | `-VarDecl 0x13780e288 <col:3, col:38> col:7 used nVal 'int' cinit     |   `-CallExpr 0x137828420 <col:14, col:38> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x13780e3d0 <col:14> 'int ()' Function 0x13780e318 'sqlite3_value_bytes' 'int ()'     |     `-RecoveryExpr 0x137828400 <col:34> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13782a8c8 <line:6:3, line:31:3> has_else     | |-UnaryOperator 0x137828498 <line:6:7, col:8> 'int' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x137828480 <col:8> 'const char *' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x137828460 <col:8> 'const char *' contains-errors lvalue Var 0x13780dff0 'zVal' 'const char *'     | |-CompoundStmt 0x1378284f8 <col:14, line:8:3>     | | `-ReturnStmt 0x1378284e8 <line:7:5, col:12>     | |   `-RecoveryExpr 0x1378284c8 <col:12> '<dependent type>' contains-errors lvalue     | `-IfStmt 0x13782a898 <line:8:9, line:31:3> has_else     |   |-BinaryOperator 0x137828820 <line:8:13, col:58> 'int' contains-errors '&&'     |   | |-BinaryOperator 0x137828568 <col:13, col:19> 'int' contains-errors '=='     |   | | |-ImplicitCastExpr 0x137828550 <col:13> 'int' contains-errors <LValueToRValue>     |   | | | `-DeclRefExpr 0x137828510 <col:13> 'int' contains-errors lvalue Var 0x13780e288 'nVal' 'int'     |   | | `-IntegerLiteral 0x137828530 <col:19> 'int' 8     |   | `-BinaryOperator 0x137828800 <col:24, col:58> 'int' contains-errors '=='     |   |   |-IntegerLiteral 0x137828588 <col:24> 'int' 0     |   |   `-CallExpr 0x137828798 <col:27, col:58> 'int' contains-errors     |   |     |-ImplicitCastExpr 0x137828780 <col:27> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x137828688 <col:27> 'int ()' Function 0x1378285d0 'sqlite3_strnicmp' 'int ()'     |   |     |-ImplicitCastExpr 0x1378287d0 <col:44> 'const char *' contains-errors <LValueToRValue>     |   |     | `-DeclRefExpr 0x1378286a8 <col:44> 'const char *' contains-errors lvalue Var 0x13780dff0 'zVal' 'const char *'     |   |     |-ImplicitCastExpr 0x1378287e8 <col:50> 'char *' <ArrayToPointerDecay>     |   |     | `-StringLiteral 0x137828710 <col:50> 'char[4]' lvalue \"STR\"     |   |     `-IntegerLiteral 0x137828730 <col:57> 'int' 8     |   |-CompoundStmt 0x1378289f0 <col:61, line:10:3>     |   | `-BinaryOperator 0x1378289d0 <line:9:5, col:29> 'int' contains-errors '='     |   |   |-DeclRefExpr 0x137828840 <col:5> 'int' lvalue Var 0x13780df58 'rc' 'int'     |   |   `-CallExpr 0x1378289a0 <col:10, col:29> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x137828940 <col:10> 'int ()' Function 0x137828888 'fts3DoOptimize' 'int ()'     |   |     |-RecoveryExpr 0x137828960 <col:25> '<dependent type>' contains-errors lvalue     |   |     `-IntegerLiteral 0x137828980 <col:28> 'int' 0     |   `-IfStmt 0x13782a868 <line:10:9, line:31:3> has_else     |     |-BinaryOperator 0x137828bc0 <line:10:13, col:58> 'int' contains-errors '&&'     |     | |-BinaryOperator 0x137828a60 <col:13, col:19> 'int' contains-errors '=='     |     | | |-ImplicitCastExpr 0x137828a48 <col:13> 'int' contains-errors <LValueToRValue>     |     | | | `-DeclRefExpr 0x137828a08 <col:13> 'int' contains-errors lvalue Var 0x13780e288 'nVal' 'int'     |     | | `-IntegerLiteral 0x137828a28 <col:19> 'int' 7     |     | `-BinaryOperator 0x137828ba0 <col:24, col:58> 'int' contains-errors '=='     |     |   |-IntegerLiteral 0x137828a80 <col:24> 'int' 0     |     |   `-CallExpr 0x137828b38 <col:27, col:58> 'int' contains-errors     |     |     |-ImplicitCastExpr 0x137828b20 <col:27> 'int (*)()' <FunctionToPointerDecay>     |     |     | `-DeclRefExpr 0x137828aa0 <col:27> 'int ()' Function 0x1378285d0 'sqlite3_strnicmp' 'int ()'     |     |     |-ImplicitCastExpr 0x137828b70 <col:44> 'const char *' contains-errors <LValueToRValue>     |     |     | `-DeclRefExpr 0x137828ac0 <col:44> 'const char *' contains-errors lvalue Var 0x13780dff0 'zVal' 'const char *'     |     |     |-ImplicitCastExpr 0x137828b88 <col:50> 'char *' <ArrayToPointerDecay>     |     |     | `-StringLiteral 0x137828ae0 <col:50> 'char[4]' lvalue \"STR\"     |     |     `-IntegerLiteral 0x137828b00 <col:57> 'int' 7     |     |-CompoundStmt 0x137828d68 <col:61, line:12:3>     |     | `-BinaryOperator 0x137828d48 <line:11:5, col:25> 'int' contains-errors '='     |     |   |-DeclRefExpr 0x137828be0 <col:5> 'int' lvalue Var 0x13780df58 'rc' 'int'     |     |   `-CallExpr 0x137828d20 <col:10, col:25> '<dependent type>' contains-errors     |     |     |-DeclRefExpr 0x137828ce0 <col:10> 'int ()' Function 0x137828c28 'fts3DoRebuild' 'int ()'     |     |     `-RecoveryExpr 0x137828d00 <col:24> '<dependent type>' contains-errors lvalue     |     `-IfStmt 0x13782a838 <line:12:9, line:31:3> has_else     |       |-BinaryOperator 0x137828f38 <line:12:13, col:60> 'int' contains-errors '&&'     |       | |-BinaryOperator 0x137828dd8 <col:13, col:19> 'int' contains-errors '=='     |       | | |-ImplicitCastExpr 0x137828dc0 <col:13> 'int' contains-errors <LValueToRValue>     |       | | | `-DeclRefExpr 0x137828d80 <col:13> 'int' contains-errors lvalue Var 0x13780e288 'nVal' 'int'     |       | | `-IntegerLiteral 0x137828da0 <col:19> 'int' 15     |       | `-BinaryOperator 0x137828f18 <col:25, col:60> 'int' contains-errors '=='     |       |   |-IntegerLiteral 0x137828df8 <col:25> 'int' 0     |       |   `-CallExpr 0x137828eb0 <col:28, col:60> 'int' contains-errors     |       |     |-ImplicitCastExpr 0x137828e98 <col:28> 'int (*)()' <FunctionToPointerDecay>     |       |     | `-DeclRefExpr 0x137828e18 <col:28> 'int ()' Function 0x1378285d0 'sqlite3_strnicmp' 'int ()'     |       |     |-ImplicitCastExpr 0x137828ee8 <col:45> 'const char *' contains-errors <LValueToRValue>     |       |     | `-DeclRefExpr 0x137828e38 <col:45> 'const char *' contains-errors lvalue Var 0x13780dff0 'zVal' 'const char *'     |       |     |-ImplicitCastExpr 0x137828f00 <col:51> 'char *' <ArrayToPointerDecay>     |       |     | `-StringLiteral 0x137828e58 <col:51> 'char[4]' lvalue \"STR\"     |       |     `-IntegerLiteral 0x137828e78 <col:58> 'int' 15     |       |-CompoundStmt 0x1378290e0 <col:63, line:14:3>     |       | `-BinaryOperator 0x1378290c0 <line:13:5, col:32> 'int' contains-errors '='     |       |   |-DeclRefExpr 0x137828f58 <col:5> 'int' lvalue Var 0x13780df58 'rc' 'int'     |       |   `-CallExpr 0x137829098 <col:10, col:32> '<dependent type>' contains-errors     |       |     |-DeclRefExpr 0x137829058 <col:10> 'int ()' Function 0x137828fa0 'fts3DoIntegrityCheck' 'int ()'     |       |     `-RecoveryExpr 0x137829078 <col:31> '<dependent type>' contains-errors lvalue     |       `-IfStmt 0x13782a808 <line:14:9, line:31:3> has_else     |         |-BinaryOperator 0x1378292b0 <line:14:13, col:57> 'int' contains-errors '&&'     |         | |-BinaryOperator 0x137829150 <col:13, col:18> 'int' contains-errors '>'     |         | | |-ImplicitCastExpr 0x137829138 <col:13> 'int' contains-errors <LValueToRValue>     |         | | | `-DeclRefExpr 0x1378290f8 <col:13> 'int' contains-errors lvalue Var 0x13780e288 'nVal' 'int'     |         | | `-IntegerLiteral 0x137829118 <col:18> 'int' 6     |         | `-BinaryOperator 0x137829290 <col:23, col:57> 'int' contains-errors '=='     |         |   |-IntegerLiteral 0x137829170 <col:23> 'int' 0     |         |   `-CallExpr 0x137829228 <col:26, col:57> 'int' contains-errors     |         |     |-ImplicitCastExpr 0x137829210 <col:26> 'int (*)()' <FunctionToPointerDecay>     |         |     | `-DeclRefExpr 0x137829190 <col:26> 'int ()' Function 0x1378285d0 'sqlite3_strnicmp' 'int ()'     |         |     |-ImplicitCastExpr 0x137829260 <col:43> 'const char *' contains-errors <LValueToRValue>     |         |     | `-DeclRefExpr 0x1378291b0 <col:43> 'const char *' contains-errors lvalue Var 0x13780dff0 'zVal' 'const char *'     |         |     |-ImplicitCastExpr 0x137829278 <col:49> 'char *' <ArrayToPointerDecay>     |         |     | `-StringLiteral 0x1378291d0 <col:49> 'char[4]' lvalue \"STR\"     |         |     `-IntegerLiteral 0x1378291f0 <col:56> 'int' 6     |         |-CompoundStmt 0x13782a300 <col:60, line:16:3>     |         | `-BinaryOperator 0x13782a2e0 <line:15:5, col:37> 'int' contains-errors '='     |         |   |-DeclRefExpr 0x1378292d0 <col:5> 'int' lvalue Var 0x13780df58 'rc' 'int'     |         |   `-CallExpr 0x13782a2b0 <col:10, col:37> '<dependent type>' contains-errors     |         |     |-DeclRefExpr 0x1378293d0 <col:10> 'int ()' Function 0x137829318 'fts3DoIncrmerge' 'int ()'     |         |     |-RecoveryExpr 0x13782a200 <col:26> '<dependent type>' contains-errors lvalue     |         |     `-UnaryOperator 0x13782a298 <col:29, col:36> 'const char *' contains-errors prefix '&' cannot overflow     |         |       `-ArraySubscriptExpr 0x13782a278 <col:30, col:36> 'const char' contains-errors lvalue     |         |         |-ImplicitCastExpr 0x13782a260 <col:30> 'const char *' contains-errors <LValueToRValue>     |         |         | `-DeclRefExpr 0x13782a220 <col:30> 'const char *' contains-errors lvalue Var 0x13780dff0 'zVal' 'const char *'     |         |         `-IntegerLiteral 0x13782a240 <col:35> 'int' 6     |         `-IfStmt 0x13782a7d8 <line:16:9, line:31:3> has_else     |           |-BinaryOperator 0x13782a4d0 <line:16:13, col:59> 'int' contains-errors '&&'     |           | |-BinaryOperator 0x13782a370 <col:13, col:18> 'int' contains-errors '>'     |           | | |-ImplicitCastExpr 0x13782a358 <col:13> 'int' contains-errors <LValueToRValue>     |           | | | `-DeclRefExpr 0x13782a318 <col:13> 'int' contains-errors lvalue Var 0x13780e288 'nVal' 'int'     |           | | `-IntegerLiteral 0x13782a338 <col:18> 'int' 10     |           | `-BinaryOperator 0x13782a4b0 <col:24, col:59> 'int' contains-errors '=='     |           |   |-IntegerLiteral 0x13782a390 <col:24> 'int' 0     |           |   `-CallExpr 0x13782a448 <col:27, col:59> 'int' contains-errors     |           |     |-ImplicitCastExpr 0x13782a430 <col:27> 'int (*)()' <FunctionToPointerDecay>     |           |     | `-DeclRefExpr 0x13782a3b0 <col:27> 'int ()' Function 0x1378285d0 'sqlite3_strnicmp' 'int ()'     |           |     |-ImplicitCastExpr 0x13782a480 <col:44> 'const char *' contains-errors <LValueToRValue>     |           |     | `-DeclRefExpr 0x13782a3d0 <col:44> 'const char *' contains-errors lvalue Var 0x13780dff0 'zVal' 'const char *'     |           |     |-ImplicitCastExpr 0x13782a498 <col:50> 'char *' <ArrayToPointerDecay>     |           |     | `-StringLiteral 0x13782a3f0 <col:50> 'char[4]' lvalue \"STR\"     |           |     `-IntegerLiteral 0x13782a410 <col:57> 'int' 10     |           |-CompoundStmt 0x13782a710 <col:62, line:29:3>     |           | `-BinaryOperator 0x13782a6f0 <line:17:5, col:42> 'int' contains-errors '='     |           |   |-DeclRefExpr 0x13782a4f0 <col:5> 'int' lvalue Var 0x13780df58 'rc' 'int'     |           |   `-CallExpr 0x13782a6c0 <col:10, col:42> '<dependent type>' contains-errors     |           |     |-DeclRefExpr 0x13782a5f0 <col:10> 'int ()' Function 0x13782a538 'fts3DoAutoincrmerge' 'int ()'     |           |     |-RecoveryExpr 0x13782a610 <col:30> '<dependent type>' contains-errors lvalue     |           |     `-UnaryOperator 0x13782a6a8 <col:33, col:41> 'const char *' contains-errors prefix '&' cannot overflow     |           |       `-ArraySubscriptExpr 0x13782a688 <col:34, col:41> 'const char' contains-errors lvalue     |           |         |-ImplicitCastExpr 0x13782a670 <col:34> 'const char *' contains-errors <LValueToRValue>     |           |         | `-DeclRefExpr 0x13782a630 <col:34> 'const char *' contains-errors lvalue Var 0x13780dff0 'zVal' 'const char *'     |           |         `-IntegerLiteral 0x13782a650 <col:39> 'int' 10     |           `-CompoundStmt 0x13782a7c0 <line:29:8, line:31:3>     |             `-BinaryOperator 0x13782a7a0 <line:30:5, col:10> 'int' contains-errors '='     |               |-DeclRefExpr 0x13782a728 <col:5> 'int' lvalue Var 0x13780df58 'rc' 'int'     |               `-RecoveryExpr 0x13782a780 <col:10> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x13782a930 <line:33:3, col:10>       `-ImplicitCastExpr 0x13782a918 <col:10> 'int' <LValueToRValue>         `-DeclRefExpr 0x13782a8f8 <col:10> 'int' lvalue Var 0x13780df58 'rc' 'int' ","20760":"`-FunctionDecl 0x1471289c0  line:1:6 invalid preprocessNodes 'void (int)'   |-ParmVarDecl 0x1471288f0 <col:22, <invalid sloc>> col:25 invalid 'int'   `-CompoundStmt 0x1471424a0 <line:2:1, line:50:1>     |-RecoveryExpr 0x147128aa0 <line:3:5> '<dependent type>' contains-errors lvalue     `-IfStmt 0x147142480 <line:14:5, line:49:5>       |-CXXDependentScopeMemberExpr 0x147128b40 <line:14:8, col:12> '<dependent type>' contains-errors lvalue .sort_flag       | `-RecoveryExpr 0x147128b20 <col:8> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x147142468 <line:15:5, line:49:5>         `-IfStmt 0x147142428 <line:17:9, line:44:9>           |-CallExpr 0x147128d00 <line:17:12, col:33> '<dependent type>' contains-errors           | `-CXXDependentScopeMemberExpr 0x147128cb8 <col:12, col:28> '<dependent type>' contains-errors lvalue .size           |   `-CXXDependentScopeMemberExpr 0x147128c70 <col:12, col:16> '<dependent type>' contains-errors lvalue .sort_script           |     `-RecoveryExpr 0x147128c50 <col:12> '<dependent type>' contains-errors lvalue           `-CompoundStmt 0x147142410 <line:18:9, line:44:9>             `-RecoveryExpr 0x147128d50 <line:19:13> '<dependent type>' contains-errors lvalue ","20239":"`-FunctionDecl 0x126141cc0  col:7 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x126141dc0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x126141e28 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x126141e90 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x126141d68 <<invalid sloc>> Implicit 883 ","20427":"`-FunctionDecl 0x1339281a0  line:1:13 referenced rose_loopback_timer 'void (unsigned long)' static   |-ParmVarDecl 0x1339280d8 <col:33, col:47> col:47 param 'unsigned long'   `-CompoundStmt 0x133943ec8 <line:2:1, line:36:1>     |-DeclStmt 0x133928488 <line:3:2, col:21>     | |-RecordDecl 0x133928298 <col:2, col:9> col:9 struct sk_buff     | `-VarDecl 0x133928408 <col:2, col:18> col:18 used skb 'struct sk_buff *'     |-DeclStmt 0x133928688 <line:4:2, col:24>     | |-RecordDecl 0x1339284a0 <col:2, col:9> col:9 struct net_device     | `-VarDecl 0x133928608 <col:2, col:21> col:21 used dev 'struct net_device *'     |-DeclStmt 0x1339420d8 <line:6:2, col:17>     | |-RecordDecl 0x1339286f0 <col:2, col:9> col:9 struct sock     | `-VarDecl 0x133942058 <col:2, col:15> col:15 used sk 'struct sock *'     |-DeclStmt 0x133942170 <line:7:2, col:26>     | `-VarDecl 0x133942108 <col:2, col:17> col:17 used frametype 'unsigned short'     |-DeclStmt 0x1339422a0 <line:8:2, col:27>     | |-VarDecl 0x1339421a0 <col:2, col:15> col:15 used lci_i 'unsigned int'     | `-VarDecl 0x133942220 <col:2, col:22> col:22 used lci_o 'unsigned int'     `-WhileStmt 0x133943ea8 <line:10:2, line:35:2>       |-RecoveryExpr 0x1339424a0 <line:10:9, col:49> '_Bool' contains-errors       `-CompoundStmt 0x133943e60 <col:55, line:35:2>         |-BinaryOperator 0x133942c18 <line:11:3, col:75> 'unsigned int' contains-errors '='         | |-DeclRefExpr 0x1339424c0 <col:3> 'unsigned int' lvalue Var 0x1339421a0 'lci_i' 'unsigned int'         | `-BinaryOperator 0x133942bf8 <col:15, col:75> '<dependent type>' contains-errors '+'         |   |-ParenExpr 0x133942a60 <col:15, col:43> '<dependent type>' contains-errors         |   | `-BinaryOperator 0x133942a40 <col:16, col:38> '<dependent type>' contains-errors '&'         |   |   |-ParenExpr 0x133942a00 <col:16, col:34> '<dependent type>' contains-errors         |   |   | `-BinaryOperator 0x1339429e0 <col:17, col:33> '<dependent type>' contains-errors '<<'         |   |   |   |-ArraySubscriptExpr 0x1339429a0 <col:17, col:28> '<dependent type>' contains-errors lvalue         |   |   |   | |-ImplicitCastExpr 0x133942988 <col:17, col:22> '<dependent type>' contains-errors <LValueToRValue>         |   |   |   | | `-RecoveryExpr 0x133942940 <col:17, col:22> '<dependent type>' contains-errors lvalue         |   |   |   | |   `-DeclRefExpr 0x1339424e0 <col:17> 'struct sk_buff *' lvalue Var 0x133928408 'skb' 'struct sk_buff *'         |   |   |   | `-IntegerLiteral 0x133942968 <col:27> 'int' 0         |   |   |   `-IntegerLiteral 0x1339429c0 <col:33> 'int' 8         |   |   `-IntegerLiteral 0x133942a20 <col:38> 'int' 3840         |   `-ParenExpr 0x133942bd8 <col:47, col:75> '<dependent type>' contains-errors         |     `-BinaryOperator 0x133942bb8 <col:48, col:70> '<dependent type>' contains-errors '&'         |       |-ParenExpr 0x133942b78 <col:48, col:66> '<dependent type>' contains-errors         |       | `-BinaryOperator 0x133942b58 <col:49, col:65> '<dependent type>' contains-errors '<<'         |       |   |-ArraySubscriptExpr 0x133942b18 <col:49, col:60> '<dependent type>' contains-errors lvalue         |       |   | |-ImplicitCastExpr 0x133942b00 <col:49, col:54> '<dependent type>' contains-errors <LValueToRValue>         |       |   | | `-RecoveryExpr 0x133942ab8 <col:49, col:54> '<dependent type>' contains-errors lvalue         |       |   | |   `-DeclRefExpr 0x133942a80 <col:49> 'struct sk_buff *' lvalue Var 0x133928408 'skb' 'struct sk_buff *'         |       |   | `-IntegerLiteral 0x133942ae0 <col:59> 'int' 1         |       |   `-IntegerLiteral 0x133942b38 <col:65> 'int' 0         |       `-IntegerLiteral 0x133942b98 <col:70> 'int' 255         |-BinaryOperator 0x133942d10 <line:12:3, col:26> 'unsigned short' contains-errors '='         | |-DeclRefExpr 0x133942c38 <col:3> 'unsigned short' lvalue Var 0x133942108 'frametype' 'unsigned short'         | `-ArraySubscriptExpr 0x133942cf0 <col:15, col:26> '<dependent type>' contains-errors lvalue         |   |-ImplicitCastExpr 0x133942cd8 <col:15, col:20> '<dependent type>' contains-errors <LValueToRValue>         |   | `-RecoveryExpr 0x133942c90 <col:15, col:20> '<dependent type>' contains-errors lvalue         |   |   `-DeclRefExpr 0x133942c58 <col:15> 'struct sk_buff *' lvalue Var 0x133928408 'skb' 'struct sk_buff *'         |   `-IntegerLiteral 0x133942cb8 <col:25> 'int' 2         |-BinaryOperator 0x133942f20 <line:14:3, col:40> 'unsigned int' contains-errors '='         | |-DeclRefExpr 0x133942de8 <col:3> 'unsigned int' lvalue Var 0x133942220 'lci_o' 'unsigned int'         | `-BinaryOperator 0x133942f00 <col:15, col:40> '<dependent type>' contains-errors '-'         |   |-BinaryOperator 0x133942ee0 <col:15, col:36> '<dependent type>' contains-errors '+'         |   | |-RecoveryExpr 0x133942ec0 <col:15> '<dependent type>' contains-errors lvalue         |   | `-IntegerLiteral 0x133942e20 <col:36> 'int' 1         |   `-DeclRefExpr 0x133942e60 <col:40> 'unsigned int' lvalue Var 0x1339421a0 'lci_i' 'unsigned int'         |-CallExpr 0x133943148 <line:16:3, col:33> 'int'         | |-ImplicitCastExpr 0x133943130 <col:3> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x1339430b8 <col:3> 'int ()' Function 0x133943000 'skb_reset_transport_header' 'int ()'         | `-ImplicitCastExpr 0x133943170 <col:30> 'struct sk_buff *' <LValueToRValue>         |   `-DeclRefExpr 0x1339430d8 <col:30> 'struct sk_buff *' lvalue Var 0x133928408 'skb' 'struct sk_buff *'         |-BinaryOperator 0x133943410 <line:18:3, col:51> 'struct sock *' '='         | |-DeclRefExpr 0x133943188 <col:3> 'struct sock *' lvalue Var 0x133942058 'sk' 'struct sock *'         | `-ImplicitCastExpr 0x1339433f8 <col:8, col:51> 'struct sock *' <IntegralToPointer>         |   `-CallExpr 0x133943368 <col:8, col:51> 'int'         |     |-ImplicitCastExpr 0x133943350 <col:8> 'int (*)()' <FunctionToPointerDecay>         |     | `-DeclRefExpr 0x133943288 <col:8> 'int ()' Function 0x1339431d0 'rose_find_socket' 'int ()'         |     |-ImplicitCastExpr 0x133943398 <col:25> 'unsigned int' <LValueToRValue>         |     | `-DeclRefExpr 0x1339432a8 <col:25> 'unsigned int' lvalue Var 0x133942220 'lci_o' 'unsigned int'         |     `-ImplicitCastExpr 0x1339433e0 <col:32> 'void (*)(unsigned long)' <FunctionToPointerDecay>         |       `-DeclRefExpr 0x133943330 <col:32> 'void (unsigned long)' Function 0x1339281a0 'rose_loopback_timer' 'void (unsigned long)'         |-IfStmt 0x133943820 <line:19:3, line:23:3>         | |-ImplicitCastExpr 0x133943450 <line:19:7> 'struct sock *' <LValueToRValue>         | | `-DeclRefExpr 0x133943430 <col:7> 'struct sock *' lvalue Var 0x133942058 'sk' 'struct sock *'         | `-CompoundStmt 0x133943800 <col:11, line:23:3>         |   |-IfStmt 0x1339437d8 <line:20:4, line:21:18>         |   | |-BinaryOperator 0x133943640 <line:20:8, col:42> 'int' '=='         |   | | |-CallExpr 0x1339435c0 <col:8, col:37> 'int'         |   | | | |-ImplicitCastExpr 0x1339435a8 <col:8> 'int (*)()' <FunctionToPointerDecay>         |   | | | | `-DeclRefExpr 0x133943548 <col:8> 'int ()' Function 0x133943490 'rose_process_rx_frame' 'int ()'         |   | | | |-ImplicitCastExpr 0x1339435f0 <col:30> 'struct sock *' <LValueToRValue>         |   | | | | `-DeclRefExpr 0x133943568 <col:30> 'struct sock *' lvalue Var 0x133942058 'sk' 'struct sock *'         |   | | | `-ImplicitCastExpr 0x133943608 <col:34> 'struct sk_buff *' <LValueToRValue>         |   | | |   `-DeclRefExpr 0x133943588 <col:34> 'struct sk_buff *' lvalue Var 0x133928408 'skb' 'struct sk_buff *'         |   | | `-IntegerLiteral 0x133943620 <col:42> 'int' 0         |   | `-CallExpr 0x133943798 <line:21:5, col:18> 'int'         |   |   |-ImplicitCastExpr 0x133943780 <col:5> 'int (*)()' <FunctionToPointerDecay>         |   |   | `-DeclRefExpr 0x133943740 <col:5> 'int ()' Function 0x133943688 'kfree_skb' 'int ()'         |   |   `-ImplicitCastExpr 0x1339437c0 <col:15> 'struct sk_buff *' <LValueToRValue>         |   |     `-DeclRefExpr 0x133943760 <col:15> 'struct sk_buff *' lvalue Var 0x133928408 'skb' 'struct sk_buff *'         |   `-ContinueStmt 0x1339437f8 <line:22:4>         `-IfStmt 0x133943e30 <line:25:3, line:34:3> has_else           |-BinaryOperator 0x1339438b8 <line:25:7, col:20> 'int' contains-errors '=='           | |-DeclRefExpr 0x133943840 <col:7> 'unsigned short' lvalue Var 0x133942108 'frametype' 'unsigned short'           | `-RecoveryExpr 0x133943898 <col:20> '<dependent type>' contains-errors lvalue           |-CompoundStmt 0x133943d68 <col:39, line:32:3>           | `-IfStmt 0x133943d38 <line:26:4, line:31:4> has_else           |   |-RecoveryExpr 0x1339439f8 <line:26:8, col:38> '_Bool' contains-errors           |   |-CompoundStmt 0x133943c70 <col:44, line:29:4>           |   | `-IfStmt 0x133943c50 <line:27:5, line:28:19>           |   |   |-RecoveryExpr 0x133943b98 <line:27:9, col:71> '_Bool' contains-errors           |   |   `-CallExpr 0x133943c10 <line:28:6, col:19> 'int'           |   |     |-ImplicitCastExpr 0x133943bf8 <col:6> 'int (*)()' <FunctionToPointerDecay>           |   |     | `-DeclRefExpr 0x133943bb8 <col:6> 'int ()' Function 0x133943688 'kfree_skb' 'int ()'           |   |     `-ImplicitCastExpr 0x133943c38 <col:16> 'struct sk_buff *' <LValueToRValue>           |   |       `-DeclRefExpr 0x133943bd8 <col:16> 'struct sk_buff *' lvalue Var 0x133928408 'skb' 'struct sk_buff *'           |   `-CompoundStmt 0x133943d20 <line:29:11, line:31:4>           |     `-CallExpr 0x133943ce0 <line:30:5, col:18> 'int'           |       |-ImplicitCastExpr 0x133943cc8 <col:5> 'int (*)()' <FunctionToPointerDecay>           |       | `-DeclRefExpr 0x133943c88 <col:5> 'int ()' Function 0x133943688 'kfree_skb' 'int ()'           |       `-ImplicitCastExpr 0x133943d08 <col:15> 'struct sk_buff *' <LValueToRValue>           |         `-DeclRefExpr 0x133943ca8 <col:15> 'struct sk_buff *' lvalue Var 0x133928408 'skb' 'struct sk_buff *'           `-CompoundStmt 0x133943e18 <line:32:10, line:34:3>             `-CallExpr 0x133943dd8 <line:33:4, col:17> 'int'               |-ImplicitCastExpr 0x133943dc0 <col:4> 'int (*)()' <FunctionToPointerDecay>               | `-DeclRefExpr 0x133943d80 <col:4> 'int ()' Function 0x133943688 'kfree_skb' 'int ()'               `-ImplicitCastExpr 0x133943e00 <col:14> 'struct sk_buff *' <LValueToRValue>                 `-DeclRefExpr 0x133943da0 <col:14> 'struct sk_buff *' lvalue Var 0x133928408 'skb' 'struct sk_buff *' ","20975":"`-FunctionDecl 0x137928258  line:1:21 invalid addr_hash_test 'unsigned int (const int *, const int *)' static   |-ParmVarDecl 0x1379280f0 <col:36, col:47> col:47 invalid mask 'const int *'   |-ParmVarDecl 0x137928170 <col:53, col:63> col:63 invalid addr 'const int *'   `-CompoundStmt 0x137941850 <line:2:1, line:5:1>     |-DeclStmt 0x137928628 <line:3:2, col:41>     | `-VarDecl 0x137928328 <col:2, col:39> col:6 used n 'int' cinit     |   `-BinaryOperator 0x137928608 <col:10, col:39> '<dependent type>' contains-errors '>>'     |     |-CallExpr 0x1379285d8 <col:10, col:34> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x1379284f0 <col:10> 'int ()' Function 0x137928438 'ether_crc' 'int ()'     |     | |-RecoveryExpr 0x1379285b8 <col:20> '<dependent type>' contains-errors lvalue     |     | `-RecoveryExpr 0x137928528 <col:30> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x137928578 <col:39> 'int' 26     `-ReturnStmt 0x137941840 <line:4:2, col:38>       `-BinaryOperator 0x137941820 <col:9, col:38> '<dependent type>' contains-errors '&'         |-ArraySubscriptExpr 0x1379286f0 <col:9, col:20> '<dependent type>' contains-errors lvalue         | |-ImplicitCastExpr 0x1379286d8 <col:9> '<dependent type>' contains-errors <LValueToRValue>         | | `-RecoveryExpr 0x137928640 <col:9> '<dependent type>' contains-errors lvalue         | `-BinaryOperator 0x1379286b8 <col:14, col:19> 'int' contains-errors '>>'         |   |-ImplicitCastExpr 0x1379286a0 <col:14> 'int' contains-errors <LValueToRValue>         |   | `-DeclRefExpr 0x137928660 <col:14> 'int' contains-errors lvalue Var 0x137928328 'n' 'int'         |   `-IntegerLiteral 0x137928680 <col:19> 'int' 5         `-ParenExpr 0x137941800 <col:24, col:38> 'int' contains-errors           `-BinaryOperator 0x1379287c8 <col:25, col:37> 'int' contains-errors '<<'             |-IntegerLiteral 0x137928710 <col:25> 'int' 1             `-ParenExpr 0x1379287a8 <col:30, col:37> 'int' contains-errors               `-BinaryOperator 0x137928788 <col:31, col:35> 'int' contains-errors '&'                 |-ImplicitCastExpr 0x137928770 <col:31> 'int' contains-errors <LValueToRValue>                 | `-DeclRefExpr 0x137928730 <col:31> 'int' contains-errors lvalue Var 0x137928328 'n' 'int'                 `-IntegerLiteral 0x137928750 <col:35> 'int' 31 ","20917":"`-FunctionDecl 0x15a00de88  line:1:1 invalid f_ch_canread 'int (int *, int *)'   |-ParmVarDecl 0x15a00dd28 <col:14, col:24> col:24 invalid argvars 'int *'   |-ParmVarDecl 0x15a00dda8 <col:33, col:43> col:43 referenced invalid rettv 'int *'   `-CompoundStmt 0x15a027988 <line:2:1, line:10:1>     |-BinaryOperator 0x15a00e338 <line:5:5, col:28> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15a00e2d0 <col:5, col:17> '<dependent type>' contains-errors lvalue .v_number     | | `-CXXDependentScopeMemberExpr 0x15a00e288 <col:5, col:12> '<dependent type>' contains-errors lvalue ->vval     | |   `-RecoveryExpr 0x15a00e260 <col:5> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x15a00e240 <col:5> 'int *' lvalue ParmVar 0x15a00dda8 'rettv' 'int *'     | `-IntegerLiteral 0x15a00e318 <col:28> 'int' 0     `-IfStmt 0x15a027968 <line:6:5, line:9:50>       |-BinaryOperator 0x15a027400 <line:6:9, col:20> 'int' contains-errors '!='       | |-RecoveryExpr 0x15a00e3a8 <col:9> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x15a00e3c8 <col:20> '<dependent type>' contains-errors lvalue       `-BinaryOperator 0x15a027948 <line:7:2, line:9:50> '<dependent type>' contains-errors '='         |-CXXDependentScopeMemberExpr 0x15a0274b0 <line:7:2, col:14> '<dependent type>' contains-errors lvalue .v_number         | `-CXXDependentScopeMemberExpr 0x15a027468 <col:2, col:9> '<dependent type>' contains-errors lvalue ->vval         |   `-RecoveryExpr 0x15a027440 <col:2> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x15a027420 <col:2> 'int *' lvalue ParmVar 0x15a00dda8 'rettv' 'int *'         `-BinaryOperator 0x15a027928 <col:25, line:9:50> 'int' contains-errors '||'           |-BinaryOperator 0x15a027898 <line:7:25, line:8:50> 'int' contains-errors '||'           | |-CallExpr 0x15a0277f8 <line:7:25, col:65> '<dependent type>' contains-errors           | | |-DeclRefExpr 0x15a0275d8 <col:25> 'int ()' Function 0x15a027520 'channel_has_readahead' 'int ()'           | | |-RecoveryExpr 0x15a0277b8 <col:47> '<dependent type>' contains-errors lvalue           | | `-RecoveryExpr 0x15a0277d8 <col:56> '<dependent type>' contains-errors lvalue           | `-CallExpr 0x15a027868 <line:8:11, col:50> '<dependent type>' contains-errors           |   |-DeclRefExpr 0x15a027658 <col:11> 'int ()' Function 0x15a027520 'channel_has_readahead' 'int ()'           |   |-RecoveryExpr 0x15a027828 <col:33> '<dependent type>' contains-errors lvalue           |   `-RecoveryExpr 0x15a027848 <col:42> '<dependent type>' contains-errors lvalue           `-CallExpr 0x15a0278f8 <line:9:11, col:50> '<dependent type>' contains-errors             |-DeclRefExpr 0x15a0276f8 <col:11> 'int ()' Function 0x15a027520 'channel_has_readahead' 'int ()'             |-RecoveryExpr 0x15a0278b8 <col:33> '<dependent type>' contains-errors lvalue             `-RecoveryExpr 0x15a0278d8 <col:42> '<dependent type>' contains-errors lvalue ","21202":"`-FunctionDecl 0x12f941bc0  col:13 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x12f941cc0 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x12f941d28 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x12f941d90 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x12f941c68 <<invalid sloc>> Implicit 882 ","20798":"`-FunctionDecl 0x13300de88  line:1:14 invalid Eval 'int (int *, int *)'   |-ParmVarDecl 0x13300dd28 <col:19, col:34> col:34 referenced invalid context 'int *'   |-ParmVarDecl 0x13300dda8 <col:43, col:55> col:55 invalid node 'int *'   `-CompoundStmt 0x133027b88 <col:61, line:25:1>     |-DeclStmt 0x13300e078 <line:2:3, col:72>     | `-VarDecl 0x13300df58 <col:3, col:9> col:9 used params 'int *' auto     |-DeclStmt 0x133027400 <line:5:3, col:70>     | `-VarDecl 0x13300e178 <col:3, col:23> col:23 invalid input1 'const int *'     |-DeclStmt 0x133027548 <line:6:3, col:70>     | `-VarDecl 0x133027430 <col:3, col:23> col:23 invalid input2 'const int *'     `-IfStmt 0x133027b58 <line:9:3, line:22:3> has_else       |-RecoveryExpr 0x1330276b8 <line:9:7, col:57> '_Bool' contains-errors       |-CompoundStmt 0x1330277b8 <col:71, line:11:3>       `-IfStmt 0x133027b28 <col:10, line:22:3> has_else         |-RecoveryExpr 0x1330277c8 <line:11:14, line:12:30> '_Bool' contains-errors         |-CompoundStmt 0x1330279e8 <col:44, line:16:3>         `-CompoundStmt 0x133027b18 <col:10, line:22:3> ","20278":"`-FunctionDecl 0x13591f990  col:5 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x13591fa90 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x13591faf8 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x13591fb60 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x13591fa38 <<invalid sloc>> Implicit 900 ","20572":"`-FunctionDecl 0x128027c00  col:5 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x128027d00 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x128027ca8 <<invalid sloc>> Implicit 873 ","21201":"`-FunctionDecl 0x12f0294d8  line:1:22 invalid dcn10_clock_source_create 'struct clock_source *(struct dc_context *, struct dc_bios *, enum clock_source_id, const struct dce110_clk_src_regs *, int)'   |-ParmVarDecl 0x12f010ae8 <line:2:2, col:21> col:21 used ctx 'struct dc_context *'   |-ParmVarDecl 0x12f028ec8 <line:3:2, col:18> col:18 used bios 'struct dc_bios *'   |-ParmVarDecl 0x12f029048 <line:4:2, col:23> col:23 invalid id 'enum clock_source_id'   |-ParmVarDecl 0x12f029218 <line:5:2, col:36> col:36 used regs 'const struct dce110_clk_src_regs *'   |-ParmVarDecl 0x12f0292b0 <line:6:2, col:7> col:7 invalid dp_clk_src 'int'   `-CompoundStmt 0x12f02cd00 <line:7:1, line:22:1>     |-DeclStmt 0x12f029980 <line:8:2, line:9:53>     | |-RecordDecl 0x12f0295a8 <line:8:2, col:9> col:9 struct dce110_clk_src     | `-VarDecl 0x12f029718 <col:2, col:25> col:25 used clk_src 'struct dce110_clk_src *'     |-IfStmt 0x12f029a30 <line:11:2, line:12:10>     | |-UnaryOperator 0x12f0299d0 <line:11:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12f0299b8 <col:7> 'struct dce110_clk_src *' <LValueToRValue>     | |   `-DeclRefExpr 0x12f029998 <col:7> 'struct dce110_clk_src *' lvalue Var 0x12f029718 'clk_src' 'struct dce110_clk_src *'     | `-ReturnStmt 0x12f029a20 <line:12:3, col:10>     |   `-RecoveryExpr 0x12f029a00 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12f02cb30 <line:14:2, line:18:2>     | |-CallExpr 0x12f029d18 <line:14:6, line:15:29> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x12f029b30 <line:14:6> 'int ()' Function 0x12f029a78 'dce112_clk_src_construct' 'int ()'     | | |-DeclRefExpr 0x12f029b50 <col:31> 'struct dce110_clk_src *' lvalue Var 0x12f029718 'clk_src' 'struct dce110_clk_src *'     | | |-DeclRefExpr 0x12f029b70 <col:40> 'struct dc_context *' lvalue ParmVar 0x12f010ae8 'ctx' 'struct dc_context *'     | | |-DeclRefExpr 0x12f029b90 <col:45> 'struct dc_bios *' lvalue ParmVar 0x12f028ec8 'bios' 'struct dc_bios *'     | | |-RecoveryExpr 0x12f029bb0 <col:51> '<dependent type>' contains-errors lvalue     | | |-DeclRefExpr 0x12f029bd0 <line:15:4> 'const struct dce110_clk_src_regs *' lvalue ParmVar 0x12f029218 'regs' 'const struct dce110_clk_src_regs *'     | | |-UnaryOperator 0x12f029cc8 <col:10, col:11> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | `-RecoveryExpr 0x12f029ca8 <col:11> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x12f029d00 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x12f029ce0 <col:22> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12f02cb10 <col:32, line:18:2>     |   |-BinaryOperator 0x12f02ca68 <line:16:3, col:30> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x12f02ca00 <col:3, col:17> '<dependent type>' contains-errors lvalue .dp_clk_src     |   | | `-RecoveryExpr 0x12f029da8 <col:3, col:12> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x12f029d70 <col:3> 'struct dce110_clk_src *' lvalue Var 0x12f029718 'clk_src' 'struct dce110_clk_src *'     |   | `-RecoveryExpr 0x12f02ca48 <col:30> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x12f02cb00 <line:17:3, col:20>     |     `-UnaryOperator 0x12f02cae8 <col:10, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x12f02cac0 <col:11, col:20> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x12f02ca88 <col:11> 'struct dce110_clk_src *' lvalue Var 0x12f029718 'clk_src' 'struct dce110_clk_src *'     |-CallExpr 0x12f02cc98 <line:20:2, col:20> 'int'     | `-ImplicitCastExpr 0x12f02cc80 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x12f02cc30 <col:2> 'int ()' Function 0x12f02cb78 'BREAK_TO_DEBUGGER' 'int ()'     `-ReturnStmt 0x12f02ccf0 <line:21:2, col:9>       `-RecoveryExpr 0x12f02ccd0 <col:9> '<dependent type>' contains-errors lvalue ","20326":"`-FunctionDecl 0x14d808718  col:5 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x14d808818 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x14d8087c0 <<invalid sloc>> Implicit 873 ","20418":"`-FunctionDecl 0x130146368  col:2 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x130146468 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x130146410 <<invalid sloc>> Implicit 873 ","20366":"`-FunctionDecl 0x15080ddf8  line:1:1 invalid write_viminfo_sub_string 'int (int *)'   |-ParmVarDecl 0x15080dd28 <col:26, col:32> col:32 invalid fp 'int *'   `-CompoundStmt 0x150828548 <line:2:1, line:10:1>     |-DeclStmt 0x150827d40 <line:3:5, col:36>     | `-VarDecl 0x15080dec0 <col:5, col:35> col:13 used old_sub 'char *' cinit     |   `-ImplicitCastExpr 0x15080e108 <col:23, col:35> 'char *' <IntegralToPointer>     |     `-CallExpr 0x15080e0e8 <col:23, col:35> 'int'     |       `-ImplicitCastExpr 0x15080e0d0 <col:23> 'int (*)()' <FunctionToPointerDecay>     |         `-DeclRefExpr 0x15080e080 <col:23> 'int ()' Function 0x15080dfc8 'get_old_sub' 'int ()'     `-IfStmt 0x150828528 <line:5:5, line:9:5>       |-BinaryOperator 0x150828068 <line:5:9, col:55> 'int' contains-errors '&&'       | |-BinaryOperator 0x150828008 <col:9, col:39> 'int' '!='       | | |-CallExpr 0x150827fe0 <col:9, col:34> 'int'       | | | |-ImplicitCastExpr 0x150827fc8 <col:9> 'int (*)()' <FunctionToPointerDecay>       | | | | `-DeclRefExpr 0x150827e38 <col:9> 'int ()' Function 0x150827d80 'get_viminfo_parameter' 'int ()'       | | | `-CharacterLiteral 0x150827e58 <col:31> 'int' 47       | | `-IntegerLiteral 0x150827eb0 <col:39> 'int' 0       | `-BinaryOperator 0x150828048 <col:44, col:55> 'int' contains-errors '!='       |   |-DeclRefExpr 0x150827ef0 <col:44> 'char *' lvalue Var 0x15080dec0 'old_sub' 'char *'       |   `-RecoveryExpr 0x150828028 <col:55> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x150828508 <line:6:5, line:9:5>         |-CallExpr 0x150828368 <line:7:2, col:20> '<dependent type>' contains-errors         | |-DeclRefExpr 0x150828168 <col:2> 'int ()' Function 0x1508280b0 'fputs' 'int ()'         | |-CallExpr 0x150828308 <col:8, col:15> 'int'         | | |-ImplicitCastExpr 0x1508282f0 <col:8> 'int (*)()' <FunctionToPointerDecay>         | | | `-DeclRefExpr 0x150828268 <col:8> 'int ()' Function 0x1508281b0 '_' 'int ()'         | | `-ImplicitCastExpr 0x150828330 <col:10> 'char *' <ArrayToPointerDecay>         | |   `-StringLiteral 0x1508282d0 <col:10> 'char[4]' lvalue \"STR\"         | `-RecoveryExpr 0x150828348 <col:18> '<dependent type>' contains-errors lvalue         `-CallExpr 0x1508284d8 <line:8:2, col:33> '<dependent type>' contains-errors           |-DeclRefExpr 0x150828478 <col:2> 'int ()' Function 0x1508283c0 'viminfo_writestring' 'int ()'           |-RecoveryExpr 0x150828498 <col:22> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x1508284b8 <col:26> 'char *' lvalue Var 0x15080dec0 'old_sub' 'char *' ","21193":"`-FunctionDecl 0x14c140a00  line:1:13 inet6_ifa_notify 'void (int, struct inet6_ifaddr *)' static   |-ParmVarDecl 0x14c1280d8 <col:30, col:34> col:34 used event 'int'   |-ParmVarDecl 0x14c1286c8 <col:41, col:62> col:62 used ifa 'struct inet6_ifaddr *'   `-CompoundStmt 0x14c1473f0 <line:2:1, line:23:1>     |-DeclStmt 0x14c140ce8 <line:3:2, col:21>     | |-RecordDecl 0x14c140b00 <col:2, col:9> col:9 struct sk_buff     | `-VarDecl 0x14c140c68 <col:2, col:18> col:18 used skb 'struct sk_buff *'     |-DeclStmt 0x14c141108 <line:4:2, col:43>     | |-RecordDecl 0x14c140d00 <col:2, col:9> col:9 struct net     | `-VarDecl 0x14c140e68 <col:2, col:42> col:14 used net 'struct net *' cinit     |   `-CallExpr 0x14c1410c8 <col:20, col:42> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14c141000 <col:20> 'int ()' Function 0x14c140f48 'dev_net' 'int ()'     |     `-CXXDependentScopeMemberExpr 0x14c141080 <col:28, col:39> '<dependent type>' contains-errors lvalue ->dev     |       `-RecoveryExpr 0x14c141058 <col:28, col:33> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x14c141020 <col:28> 'struct inet6_ifaddr *' lvalue ParmVar 0x14c1286c8 'ifa' 'struct inet6_ifaddr *'     |-DeclStmt 0x14c141238 <line:5:2, col:20>     | `-VarDecl 0x14c141138 <col:2, col:13> col:6 used err 'int' cinit     |   `-UnaryOperator 0x14c141220 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14c141208 <col:13> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14c1411e8 <col:13> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14c141600 <line:7:2, col:52> 'struct sk_buff *' contains-errors '='     | |-DeclRefExpr 0x14c141250 <col:2> 'struct sk_buff *' lvalue Var 0x14c140c68 'skb' 'struct sk_buff *'     | `-CallExpr 0x14c1415d0 <col:8, col:52> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14c141350 <col:8> 'int ()' Function 0x14c141298 'nlmsg_new' 'int ()'     |   |-CallExpr 0x14c141590 <col:18, col:39> 'int'     |   | `-ImplicitCastExpr 0x14c141578 <col:18> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x14c141450 <col:18> 'int ()' Function 0x14c141398 'inet6_ifaddr_msgsize' 'int ()'     |   `-RecoveryExpr 0x14c1415b0 <col:42> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14c141720 <line:8:2, line:9:8>     | |-BinaryOperator 0x14c141698 <line:8:6, col:13> 'int' contains-errors '=='     | | |-DeclRefExpr 0x14c141620 <col:6> 'struct sk_buff *' lvalue Var 0x14c140c68 'skb' 'struct sk_buff *'     | | `-RecoveryExpr 0x14c141678 <col:13> '<dependent type>' contains-errors lvalue     | `-GotoStmt 0x14c141708 <line:9:3, col:8> 'errout' 0x14c1416b8     |-BinaryOperator 0x14c1419d0 <line:11:2, col:50> 'int' contains-errors '='     | |-DeclRefExpr 0x14c141740 <col:2> 'int' contains-errors lvalue Var 0x14c141138 'err' 'int'     | `-CallExpr 0x14c141938 <col:8, col:50> 'int'     |   |-ImplicitCastExpr 0x14c141920 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14c141840 <col:8> 'int ()' Function 0x14c141788 'inet6_fill_ifaddr' 'int ()'     |   |-ImplicitCastExpr 0x14c141988 <col:26> 'struct sk_buff *' <LValueToRValue>     |   | `-DeclRefExpr 0x14c141860 <col:26> 'struct sk_buff *' lvalue Var 0x14c140c68 'skb' 'struct sk_buff *'     |   |-ImplicitCastExpr 0x14c1419a0 <col:31> 'struct inet6_ifaddr *' <LValueToRValue>     |   | `-DeclRefExpr 0x14c141880 <col:31> 'struct inet6_ifaddr *' lvalue ParmVar 0x14c1286c8 'ifa' 'struct inet6_ifaddr *'     |   |-IntegerLiteral 0x14c1418a0 <col:36> 'int' 0     |   |-IntegerLiteral 0x14c1418c0 <col:39> 'int' 0     |   |-ImplicitCastExpr 0x14c1419b8 <col:42> 'int' <LValueToRValue>     |   | `-DeclRefExpr 0x14c1418e0 <col:42> 'int' lvalue ParmVar 0x14c1280d8 'event' 'int'     |   `-IntegerLiteral 0x14c141900 <col:49> 'int' 0     |-IfStmt 0x14c146e78 <line:12:2, line:17:2>     | |-BinaryOperator 0x14c146a58 <line:12:6, col:12> 'int' contains-errors '<'     | | |-ImplicitCastExpr 0x14c146a40 <col:6> 'int' contains-errors <LValueToRValue>     | | | `-DeclRefExpr 0x14c146a00 <col:6> 'int' contains-errors lvalue Var 0x14c141138 'err' 'int'     | | `-IntegerLiteral 0x14c146a20 <col:12> 'int' 0     | `-CompoundStmt 0x14c146e50 <col:15, line:17:2>     |   |-CallExpr 0x14c146c98 <line:14:3, col:27> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14c146b58 <col:3> 'int ()' Function 0x14c146aa0 'WARN_ON' 'int ()'     |   | `-BinaryOperator 0x14c146c78 <col:11, col:19> 'int' contains-errors '=='     |   |   |-DeclRefExpr 0x14c146b78 <col:11> 'int' contains-errors lvalue Var 0x14c141138 'err' 'int'     |   |   `-UnaryOperator 0x14c146c60 <col:18, col:19> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |     `-ImplicitCastExpr 0x14c146c48 <col:19> '<dependent type>' contains-errors <LValueToRValue>     |   |       `-RecoveryExpr 0x14c146c28 <col:19> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x14c146df8 <line:15:3, col:16> 'int'     |   | |-ImplicitCastExpr 0x14c146de0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14c146da0 <col:3> 'int ()' Function 0x14c146ce8 'kfree_skb' 'int ()'     |   | `-ImplicitCastExpr 0x14c146e20 <col:13> 'struct sk_buff *' <LValueToRValue>     |   |   `-DeclRefExpr 0x14c146dc0 <col:13> 'struct sk_buff *' lvalue Var 0x14c140c68 'skb' 'struct sk_buff *'     |   `-GotoStmt 0x14c146e38 <line:16:3, col:8> 'errout' 0x14c1416b8     |-CallExpr 0x14c1470f0 <line:18:2, col:64> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c146f78 <col:2> 'int ()' Function 0x14c146ec0 'rtnl_notify' 'int ()'     | |-DeclRefExpr 0x14c146f98 <col:14> 'struct sk_buff *' lvalue Var 0x14c140c68 'skb' 'struct sk_buff *'     | |-DeclRefExpr 0x14c146fb8 <col:19> 'struct net *' contains-errors lvalue Var 0x14c140e68 'net' 'struct net *'     | |-IntegerLiteral 0x14c146fd8 <col:24> 'int' 0     | |-RecoveryExpr 0x14c147090 <col:27> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x14c1470b0 <col:48> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14c1470d0 <col:54> '<dependent type>' contains-errors lvalue     |-ReturnStmt 0x14c147140 <line:19:2>     `-LabelStmt 0x14c1473d0 <line:20:1, line:22:48> 'errout'       `-IfStmt 0x14c1473b0 <line:21:2, line:22:48>         |-BinaryOperator 0x14c1471a8 <line:21:6, col:12> 'int' contains-errors '<'         | |-ImplicitCastExpr 0x14c147190 <col:6> 'int' contains-errors <LValueToRValue>         | | `-DeclRefExpr 0x14c147150 <col:6> 'int' contains-errors lvalue Var 0x14c141138 'err' 'int'         | `-IntegerLiteral 0x14c147170 <col:12> 'int' 0         `-CallExpr 0x14c147378 <line:22:3, col:48> '<dependent type>' contains-errors           |-DeclRefExpr 0x14c1472a8 <col:3> 'int ()' Function 0x14c1471f0 'rtnl_set_sk_err' 'int ()'           |-DeclRefExpr 0x14c1472c8 <col:19> 'struct net *' contains-errors lvalue Var 0x14c140e68 'net' 'struct net *'           |-RecoveryExpr 0x14c147358 <col:24> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x14c147300 <col:45> 'int' contains-errors lvalue Var 0x14c141138 'err' 'int' ","21136":"`-FunctionDecl 0x15b8fac88  line:1:1 invalid entry_guard_add_to_sample 'int (int *, const int *)'   |-ParmVarDecl 0x15b8fab28 <col:27, col:46> col:46 invalid gs 'int *'   |-ParmVarDecl 0x15b8faba8 <line:2:27, col:41> col:41 invalid node 'const int *'   `-CompoundStmt 0x15b914648 <line:3:1, line:15:1>     |-CallExpr 0x15b8fb0e0 <line:4:3, line:5:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15b8faea0 <line:4:3> 'int ()' Function 0x15b8fade8 'log_info' 'int ()'     | |-RecoveryExpr 0x15b8fb0c0 <col:12> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x15b8faf20 <col:22> 'char[4]' lvalue \"STR\"     | `-CallExpr 0x15b8fb060 <line:5:12, col:30> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15b8fb020 <col:12> 'int ()' Function 0x15b8faf68 'node_describe' 'int ()'     |   `-RecoveryExpr 0x15b8fb040 <col:26> '<dependent type>' contains-errors lvalue     `-IfStmt 0x15b9143a8 <line:8:3, line:9:12>       |-RecoveryExpr 0x15b914340 <line:8:7, col:73> '_Bool' contains-errors       `-ReturnStmt 0x15b914398 <line:9:5, col:12>         `-RecoveryExpr 0x15b914378 <col:12> '<dependent type>' contains-errors lvalue ","20627":"`-FunctionDecl 0x1581420f0  col:14 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x1581421f0 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x158142258 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x158142198 <<invalid sloc>> Implicit 887 ","21025":"`-FunctionDecl 0x13290a968  line:1:31 radeon_atombios_get_ss_info 'struct radeon_atom_ss *(struct radeon_encoder *, int)' static   |-ParmVarDecl 0x1328f24e8 <col:59, line:3:11> col:11 used encoder 'struct radeon_encoder *'   |-ParmVarDecl 0x1328f2568 <line:4:10, col:14> col:14 used id 'int'   `-CompoundStmt 0x131830630 <line:5:1, line:44:1>     |-DeclStmt 0x13290ad00 <line:6:2, col:44>     | |-RecordDecl 0x13290aa68 <col:2, col:9> col:9 struct drm_device     | `-VarDecl 0x13290abd8 <col:2, col:41> col:21 used dev 'struct drm_device *' cinit     |   `-CXXDependentScopeMemberExpr 0x13290aca0 <col:27, col:41> '<dependent type>' contains-errors lvalue .dev     |     `-RecoveryExpr 0x13290ac78 <col:27, col:36> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13290ac40 <col:27> 'struct radeon_encoder *' lvalue ParmVar 0x1328f24e8 'encoder' 'struct radeon_encoder *'     |-DeclStmt 0x13290af68 <line:7:2, col:47>     | |-RecordDecl 0x13290ad18 <col:2, col:9> col:9 struct radeon_device     | `-VarDecl 0x13290ae88 <col:2, col:36> col:24 used rdev 'struct radeon_device *' cinit     |   `-RecoveryExpr 0x13290af28 <col:31, col:36> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13290aef0 <col:31> 'struct drm_device *' contains-errors lvalue Var 0x13290abd8 'dev' 'struct drm_device *'     |-DeclStmt 0x13290b1e0 <line:8:2, col:55>     | |-RecordDecl 0x13290af80 <col:2, col:9> col:9 struct radeon_mode_info     | `-VarDecl 0x13290b0e8 <col:2, col:46> col:27 used mode_info 'struct radeon_mode_info *' cinit     |   `-UnaryOperator 0x13290b1b0 <col:39, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x13290b188 <col:40, col:46> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13290b150 <col:40> 'struct radeon_device *' contains-errors lvalue Var 0x13290ae88 'rdev' 'struct radeon_device *'     |-DeclStmt 0x13290b490 <line:9:2, col:57>     | `-VarDecl 0x13290b210 <col:2, col:56> col:6 used index 'int' cinit     |   `-CallExpr 0x13290b460 <col:14, col:56> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x13290b3a0 <col:14> 'int ()' Function 0x13290b2e8 'GetIndexIntoMasterTable' 'int ()'     |     |-RecoveryExpr 0x13290b420 <col:38> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x13290b440 <col:44> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x13290b698 <line:11:2, col:44>     | |-RecordDecl 0x13290b4a8 <col:2, col:9> col:9 struct _ATOM_SPREAD_SPECTRUM_INFO     | `-VarDecl 0x13290b618 <col:2, col:37> col:37 used ss_info 'struct _ATOM_SPREAD_SPECTRUM_INFO *'     |-DeclStmt 0x13290b7d8 <line:13:2, col:34>     | `-VarDecl 0x13290b738 <col:2, col:30> col:25 used ss 'struct radeon_atom_ss *' cinit     |   `-RecoveryExpr 0x13290b7b8 <col:30> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x132012480 <line:14:2, col:7>     | `-VarDecl 0x132012418 <col:2, col:6> col:6 used i 'int'     |-IfStmt 0x132012578 <line:16:2, line:17:10>     | |-BinaryOperator 0x132012510 <line:16:6, col:11> 'int' contains-errors '>'     | | |-DeclRefExpr 0x132012498 <col:6> 'int' lvalue ParmVar 0x1328f2568 'id' 'int'     | | `-RecoveryExpr 0x1320124f0 <col:11> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x132012568 <line:17:3, col:10>     |   `-RecoveryExpr 0x132012548 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1318305c8 <line:19:2, line:42:2>     | |-CallExpr 0x1320128d8 <line:19:6, line:20:34> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x132012678 <line:19:6> 'int ()' Function 0x1320125c0 'atom_parse_data_header' 'int ()'     | | |-RecoveryExpr 0x1320126d0 <col:29, col:40> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x132012698 <col:29> 'struct radeon_mode_info *' contains-errors lvalue Var 0x13290b0e8 'mode_info' 'struct radeon_mode_info *'     | | |-DeclRefExpr 0x1320126f8 <col:54> 'int' contains-errors lvalue Var 0x13290b210 'index' 'int'     | | |-RecoveryExpr 0x132012810 <col:61> '<dependent type>' contains-errors lvalue     | | |-UnaryOperator 0x132012850 <line:20:8, col:9> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | `-RecoveryExpr 0x132012830 <col:9> '<dependent type>' contains-errors lvalue     | | |-UnaryOperator 0x132012888 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | `-RecoveryExpr 0x132012868 <col:16> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x1320128c0 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x1320128a0 <col:23> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1318305b8 <col:37, line:42:2>     `-ReturnStmt 0x131830620 <line:43:2, col:9>       `-ImplicitCastExpr 0x131830608 <col:9> 'struct radeon_atom_ss *' contains-errors <LValueToRValue>         `-DeclRefExpr 0x1318305e8 <col:9> 'struct radeon_atom_ss *' contains-errors lvalue Var 0x13290b738 'ss' 'struct radeon_atom_ss *' ","21082":"`-FunctionDecl 0x1489439a8  col:2 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x148943aa8 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x148943a50 <<invalid sloc>> Implicit 873 ","20733":"`-FunctionDecl 0x1468275f8  line:1:1 invalid issuerAndThisUpdatePretty 'int (int *, struct berval *, struct berval *, void *)'   |-ParmVarDecl 0x14680dd28 <line:2:2, col:10> col:10 invalid syntax 'int *'   |-ParmVarDecl 0x14680e318 <line:3:2, col:17> col:17 used in 'struct berval *'   |-ParmVarDecl 0x146827428 <line:4:2, col:17> col:17 used out 'struct berval *'   |-ParmVarDecl 0x1468274a8 <line:5:2, col:8> col:8 used ctx 'void *'   `-CompoundStmt 0x146123c00 <line:6:1, line:62:1>     |-DeclStmt 0x146827740 <line:7:2, col:8>     | `-VarDecl 0x1468276d8 <col:2, col:6> col:6 used rc 'int'     |-DeclStmt 0x146827928 <line:8:2, col:38>     | |-VarDecl 0x146827778 <col:2, col:16> col:16 invalid i 'struct berval'     | |-VarDecl 0x146827800 <col:2, col:19> col:19 invalid tu 'struct berval'     | `-VarDecl 0x146827888 <col:2, col:23> col:23 invalid ni 'struct berval'     |-DeclStmt 0x1468279c0 <line:9:2, col:9>     | `-VarDecl 0x146827958 <col:2, col:8> col:8 used p 'char *'     |-CallExpr 0x146827c10 <line:11:2, col:21> '<dependent type>' contains-errors     | |-DeclRefExpr 0x146827b30 <col:2> 'int ()' Function 0x146827a78 'assert' 'int ()'     | `-BinaryOperator 0x146827bf0 <col:10, col:16> 'int' contains-errors '!='     |   |-DeclRefExpr 0x146827b50 <col:10> 'struct berval *' lvalue ParmVar 0x14680e318 'in' 'struct berval *'     |   `-RecoveryExpr 0x146827bd0 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x146827d18 <line:12:2, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x146827c38 <col:2> 'int ()' Function 0x146827a78 'assert' 'int ()'     | `-BinaryOperator 0x146827cf8 <col:10, col:17> 'int' contains-errors '!='     |   |-DeclRefExpr 0x146827c58 <col:10> 'struct berval *' lvalue ParmVar 0x146827428 'out' 'struct berval *'     |   `-RecoveryExpr 0x146827cd8 <col:17> '<dependent type>' contains-errors lvalue     |-CallExpr 0x146827ea8 <line:14:2, col:18> 'int'     | |-ImplicitCastExpr 0x146827e90 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x146827e20 <col:2> 'int ()' Function 0x146827d68 'BER_BVZERO' 'int ()'     | `-ImplicitCastExpr 0x146827ed0 <col:14> 'struct berval *' <LValueToRValue>     |   `-DeclRefExpr 0x146827e40 <col:14> 'struct berval *' lvalue ParmVar 0x146827428 'out' 'struct berval *'     |-CallExpr 0x146828168 <line:16:2, line:17:20> '<dependent type>' contains-errors     | |-DeclRefExpr 0x146827fc8 <line:16:2> 'int ()' Function 0x146827f10 'Debug' 'int ()'     | |-RecoveryExpr 0x146828148 <col:9> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x146828040 <col:27> 'char[4]' lvalue \"STR\"     | |-RecoveryExpr 0x146828098 <line:17:3, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x146828060 <col:3> 'struct berval *' lvalue ParmVar 0x14680e318 'in' 'struct berval *'     | |-IntegerLiteral 0x1468280c0 <col:15> 'int' 0     | `-IntegerLiteral 0x1468280e0 <col:18> 'int' 0     |-BinaryOperator 0x1468283c0 <line:19:2, col:50> 'int' contains-errors '='     | |-DeclRefExpr 0x1468281b0 <col:2> 'int' lvalue Var 0x1468276d8 'rc' 'int'     | `-CallExpr 0x146828380 <col:7, col:50> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1468282b0 <col:7> 'int ()' Function 0x1468281f8 'issuerAndThisUpdateCheck' 'int ()'     |   |-DeclRefExpr 0x1468282d0 <col:33> 'struct berval *' lvalue ParmVar 0x14680e318 'in' 'struct berval *'     |   |-UnaryOperator 0x146828310 <col:37, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x1468282f0 <col:38> '<dependent type>' contains-errors lvalue     |   |-UnaryOperator 0x146828348 <col:41, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x146828328 <col:42> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x146828360 <col:46> 'void *' lvalue ParmVar 0x1468274a8 'ctx' 'void *'     |-IfStmt 0x14682a498 <line:20:2, line:22:2>     | |-ImplicitCastExpr 0x14682a400 <line:20:7> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x1468283e0 <col:7> 'int' lvalue Var 0x1468276d8 'rc' 'int'     | `-CompoundStmt 0x14682a480 <col:12, line:22:2>     |   `-GotoStmt 0x14682a468 <line:21:3, col:8> 'done' 0x14682a418     |-BinaryOperator 0x14682a6c8 <line:24:2, col:38> 'int' contains-errors '='     | |-DeclRefExpr 0x14682a4b8 <col:2> 'int' lvalue Var 0x1468276d8 'rc' 'int'     | `-CallExpr 0x14682a688 <col:7, col:38> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14682a5b8 <col:7> 'int ()' Function 0x14682a500 'dnPretty' 'int ()'     |   |-RecoveryExpr 0x14682a5d8 <col:17> '<dependent type>' contains-errors lvalue     |   |-UnaryOperator 0x14682a618 <col:25, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x14682a5f8 <col:26> '<dependent type>' contains-errors lvalue     |   |-UnaryOperator 0x14682a650 <col:29, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x14682a630 <col:30> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14682a668 <col:34> 'void *' lvalue ParmVar 0x1468274a8 'ctx' 'void *'     |-IfStmt 0x14682ac08 <line:26:2, line:28:2>     | |-BinaryOperator 0x14682aa18 <line:26:7, col:59> 'int' contains-errors '&&'     | | |-BinaryOperator 0x14682a9a0 <col:7, col:24> 'int' contains-errors '=='     | | | |-ArraySubscriptExpr 0x14682a980 <col:7, col:19> '<dependent type>' contains-errors lvalue     | | | | |-ImplicitCastExpr 0x14682a968 <col:7, col:11> '<dependent type>' contains-errors <LValueToRValue>     | | | | | `-RecoveryExpr 0x14682a720 <col:7, col:11> '<dependent type>' contains-errors lvalue     | | | | |   `-DeclRefExpr 0x14682a6e8 <col:7> 'struct berval *' lvalue ParmVar 0x14680e318 'in' 'struct berval *'     | | | | `-IntegerLiteral 0x14682a748 <col:18> 'int' 0     | | | `-CharacterLiteral 0x14682a7a0 <col:24> 'int' 123     | | `-BinaryOperator 0x14682a9f8 <col:31, col:59> 'int' contains-errors '=='     | |   |-ArraySubscriptExpr 0x14682a9d8 <col:31, col:54> '<dependent type>' contains-errors lvalue     | |   | |-ImplicitCastExpr 0x14682a9c0 <col:31, col:35> '<dependent type>' contains-errors <LValueToRValue>     | |   | | `-RecoveryExpr 0x14682a810 <col:31, col:35> '<dependent type>' contains-errors lvalue     | |   | |   `-DeclRefExpr 0x14682a7d8 <col:31> 'struct berval *' lvalue ParmVar 0x14680e318 'in' 'struct berval *'     | |   | `-BinaryOperator 0x14682a8b8 <col:42, col:53> '<dependent type>' contains-errors '-'     | |   |   |-RecoveryExpr 0x14682a870 <col:42, col:46> '<dependent type>' contains-errors lvalue     | |   |   | `-DeclRefExpr 0x14682a838 <col:42> 'struct berval *' lvalue ParmVar 0x14680e318 'in' 'struct berval *'     | |   |   `-IntegerLiteral 0x14682a898 <col:53> 'int' 1     | |   `-CharacterLiteral 0x14682a910 <col:59> 'int' 125     | `-CompoundStmt 0x14682abf0 <col:65, line:28:2>     |   `-CallExpr 0x14682abc0 <line:27:3, col:31> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14682ab18 <col:3> 'int ()' Function 0x14682aa60 'slap_sl_free' 'int ()'     |     |-CXXDependentScopeMemberExpr 0x14682ab58 <col:17, col:19> '<dependent type>' contains-errors lvalue .bv_val     |     | `-RecoveryExpr 0x14682ab38 <col:17> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14682aba0 <col:27> 'void *' lvalue ParmVar 0x1468274a8 'ctx' 'void *'     |-IfStmt 0x14682aea8 <line:30:2, line:33:2>     | |-BinaryOperator 0x14682ae38 <line:30:7, col:34> 'int' contains-errors '||'     | | |-DeclRefExpr 0x14682ac28 <col:7> 'int' lvalue Var 0x1468276d8 'rc' 'int'     | | `-CallExpr 0x14682ae08 <col:13, col:34> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x14682ad28 <col:13> 'int ()' Function 0x14682ac70 'checkTime' 'int ()'     | |   |-UnaryOperator 0x14682ad68 <col:24, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   | `-RecoveryExpr 0x14682ad48 <col:25> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x14682ade8 <col:29> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14682ae90 <col:38, line:33:2>     |   `-GotoStmt 0x14682ae78 <line:32:3, col:8> 'done' 0x14682a418     |-BinaryOperator 0x14682b268 <line:36:2, line:37:20> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14682af00 <line:36:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14682aec8 <col:2> 'struct berval *' lvalue ParmVar 0x146827428 'out' 'struct berval *'     | `-BinaryOperator 0x14682b248 <col:16, line:37:20> '<dependent type>' contains-errors '+'     |   |-BinaryOperator 0x14682b228 <line:36:16, line:37:8> '<dependent type>' contains-errors '+'     |   | |-CallExpr 0x14682b1e8 <line:36:16, col:30> 'int'     |   | | |-ImplicitCastExpr 0x14682b1d0 <col:16> 'int (*)()' <FunctionToPointerDecay>     |   | | | `-DeclRefExpr 0x14682b008 <col:16> 'int ()' Function 0x14682af50 'STRLENOF' 'int ()'     |   | | `-ImplicitCastExpr 0x14682b210 <col:25> 'char *' <ArrayToPointerDecay>     |   | |   `-StringLiteral 0x14682b028 <col:25> 'char[4]' lvalue \"STR\"     |   | `-CXXDependentScopeMemberExpr 0x14682b0c0 <line:37:5, col:8> '<dependent type>' contains-errors lvalue .bv_len     |   |   `-RecoveryExpr 0x14682b0a0 <col:5> '<dependent type>' contains-errors lvalue     |   `-CXXDependentScopeMemberExpr 0x14682b148 <col:17, col:20> '<dependent type>' contains-errors lvalue .bv_len     |     `-RecoveryExpr 0x14682b128 <col:17> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x146122cf0 <line:38:2, col:53> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14682b2c0 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14682b288 <col:2> 'struct berval *' lvalue ParmVar 0x146827428 'out' 'struct berval *'     | `-CallExpr 0x146122cc0 <col:16, col:53> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14682b3c8 <col:16> 'int ()' Function 0x14682b310 'slap_sl_malloc' 'int ()'     |   |-BinaryOperator 0x146122c80 <col:32, col:46> '<dependent type>' contains-errors '+'     |   | |-RecoveryExpr 0x146122c38 <col:32, col:37> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x146122c00 <col:32> 'struct berval *' lvalue ParmVar 0x146827428 'out' 'struct berval *'     |   | `-IntegerLiteral 0x146122c60 <col:46> 'int' 1     |   `-DeclRefExpr 0x146122ca0 <col:49> 'void *' lvalue ParmVar 0x1468274a8 'ctx' 'void *'     |-IfStmt 0x146122e88 <line:40:2, line:44:2>     | |-RecoveryExpr 0x146122d70 <line:40:7, col:22> '_Bool' contains-errors     | `-CompoundStmt 0x146122e68 <col:29, line:44:2>     |   |-BinaryOperator 0x146122e10 <line:41:3, col:17> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x146122dc8 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x146122d90 <col:3> 'struct berval *' lvalue ParmVar 0x146827428 'out' 'struct berval *'     |   | `-IntegerLiteral 0x146122df0 <col:17> 'int' 0     |   `-GotoStmt 0x146122e50 <line:43:3, col:8> 'done' 0x14682a418     |-BinaryOperator 0x146122f28 <line:46:2, col:11> 'char *' contains-errors '='     | |-DeclRefExpr 0x146122ea8 <col:2> 'char *' lvalue Var 0x146827958 'p' 'char *'     | `-RecoveryExpr 0x146122f00 <col:6, col:11> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x146122ec8 <col:6> 'struct berval *' lvalue ParmVar 0x146827428 'out' 'struct berval *'     |-BinaryOperator 0x146123138 <line:47:2, col:31> 'char *' '='     | |-DeclRefExpr 0x146122f48 <col:2> 'char *' lvalue Var 0x146827958 'p' 'char *'     | `-ImplicitCastExpr 0x146123120 <col:6, col:31> 'char *' <IntegralToPointer>     |   `-CallExpr 0x1461230c0 <col:6, col:31> 'int'     |     |-ImplicitCastExpr 0x1461230a8 <col:6> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x146123048 <col:6> 'int ()' Function 0x146122f90 'lutil_strcopy' 'int ()'     |     |-ImplicitCastExpr 0x1461230f0 <col:21> 'char *' <LValueToRValue>     |     | `-DeclRefExpr 0x146123068 <col:21> 'char *' lvalue Var 0x146827958 'p' 'char *'     |     `-ImplicitCastExpr 0x146123108 <col:24> 'char *' <ArrayToPointerDecay>     |       `-StringLiteral 0x146123088 <col:24> 'char[4]' lvalue \"STR\"     |-BinaryOperator 0x146123300 <line:48:2, col:30> 'char *' contains-errors '='     | |-DeclRefExpr 0x146123158 <col:2> 'char *' lvalue Var 0x146827958 'p' 'char *'     | `-CallExpr 0x1461232d0 <col:6, col:30> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x146123258 <col:6> 'int ()' Function 0x1461231a0 'lutil_strbvcopy' 'int ()'     |   |-DeclRefExpr 0x146123278 <col:23> 'char *' lvalue Var 0x146827958 'p' 'char *'     |   `-UnaryOperator 0x1461232b8 <col:26, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x146123298 <col:27> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x146123430 <line:49:2, col:30> 'char *' '='     | |-DeclRefExpr 0x146123320 <col:2> 'char *' lvalue Var 0x146827958 'p' 'char *'     | `-ImplicitCastExpr 0x146123418 <col:6, col:30> 'char *' <IntegralToPointer>     |   `-CallExpr 0x1461233b8 <col:6, col:30> 'int'     |     |-ImplicitCastExpr 0x1461233a0 <col:6> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x146123340 <col:6> 'int ()' Function 0x146122f90 'lutil_strcopy' 'int ()'     |     |-ImplicitCastExpr 0x1461233e8 <col:21> 'char *' <LValueToRValue>     |     | `-DeclRefExpr 0x146123360 <col:21> 'char *' lvalue Var 0x146827958 'p' 'char *'     |     `-ImplicitCastExpr 0x146123400 <col:24> 'char *' <ArrayToPointerDecay>     |       `-StringLiteral 0x146123380 <col:24> 'char[4]' lvalue \"STR\"     |-BinaryOperator 0x146123518 <line:50:2, col:30> 'char *' contains-errors '='     | |-DeclRefExpr 0x146123450 <col:2> 'char *' lvalue Var 0x146827958 'p' 'char *'     | `-CallExpr 0x1461234e8 <col:6, col:30> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x146123470 <col:6> 'int ()' Function 0x1461231a0 'lutil_strbvcopy' 'int ()'     |   |-DeclRefExpr 0x146123490 <col:23> 'char *' lvalue Var 0x146827958 'p' 'char *'     |   `-UnaryOperator 0x1461234d0 <col:26, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x1461234b0 <col:27> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x146123648 <line:51:2, col:31> 'char *' '='     | |-DeclRefExpr 0x146123538 <col:2> 'char *' lvalue Var 0x146827958 'p' 'char *'     | `-ImplicitCastExpr 0x146123630 <col:6, col:31> 'char *' <IntegralToPointer>     |   `-CallExpr 0x1461235d0 <col:6, col:31> 'int'     |     |-ImplicitCastExpr 0x1461235b8 <col:6> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x146123558 <col:6> 'int ()' Function 0x146122f90 'lutil_strcopy' 'int ()'     |     |-ImplicitCastExpr 0x146123600 <col:21> 'char *' <LValueToRValue>     |     | `-DeclRefExpr 0x146123578 <col:21> 'char *' lvalue Var 0x146827958 'p' 'char *'     |     `-ImplicitCastExpr 0x146123618 <col:25> 'char *' <ArrayToPointerDecay>     |       `-StringLiteral 0x146123598 <col:25> 'char[4]' lvalue \"STR\"     |-CallExpr 0x1461238a0 <line:53:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x146123668 <col:2> 'int ()' Function 0x146827a78 'assert' 'int ()'     | `-BinaryOperator 0x146123880 <col:10, col:39> 'int' contains-errors '=='     |   |-DeclRefExpr 0x146123688 <col:10> 'char *' lvalue Var 0x146827958 'p' 'char *'     |   `-UnaryOperator 0x146123868 <col:15, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-ArraySubscriptExpr 0x146123848 <col:16, col:39> '<dependent type>' contains-errors lvalue     |       |-ImplicitCastExpr 0x146123818 <col:16, col:21> '<dependent type>' contains-errors <LValueToRValue>     |       | `-RecoveryExpr 0x1461236e0 <col:16, col:21> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x1461236a8 <col:16> 'struct berval *' lvalue ParmVar 0x146827428 'out' 'struct berval *'     |       `-ImplicitCastExpr 0x146123830 <col:28, col:33> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x146123740 <col:28, col:33> '<dependent type>' contains-errors lvalue     |           `-DeclRefExpr 0x146123708 <col:28> 'struct berval *' lvalue ParmVar 0x146827428 'out' 'struct berval *'     |-LabelStmt 0x1461238d0 <line:55:1, col:6> 'done'     | `-NullStmt 0x1461238c8 <col:6>     |-CallExpr 0x146123af8 <line:59:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x146123a50 <col:2> 'int ()' Function 0x14682aa60 'slap_sl_free' 'int ()'     | |-CXXDependentScopeMemberExpr 0x146123a90 <col:16, col:19> '<dependent type>' contains-errors lvalue .bv_val     | | `-RecoveryExpr 0x146123a70 <col:16> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x146123ad8 <col:27> 'void *' lvalue ParmVar 0x1468274a8 'ctx' 'void *'     `-ReturnStmt 0x146123b60 <line:61:2, col:9>       `-ImplicitCastExpr 0x146123b48 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x146123b28 <col:9> 'int' lvalue Var 0x1468276d8 'rc' 'int' ","21124":"`-FunctionDecl 0x155026da8  col:23 implicit used strerror 'char *(int)' extern   |-ParmVarDecl 0x155026ea8 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x155026e50 <<invalid sloc>> Implicit 901 ","21092":"`-FunctionDecl 0x1209281f0  line:1:6 invalid rsa_free 'void (int *)'   |-ParmVarDecl 0x120928128 <col:16, col:29> col:29 invalid ctx 'int *'   `-CompoundStmt 0x120941e40 <line:2:1, line:10:1>     |-CallExpr 0x1209284a0 <line:4:5, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x120928400 <col:5> 'int ()' Function 0x120928348 'mpi_free' 'int ()'     | `-UnaryOperator 0x120928488 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x120928440 <col:16, col:21> '<dependent type>' contains-errors lvalue ->Vi     |     `-RecoveryExpr 0x120928420 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x120928568 <col:27, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1209284c8 <col:27> 'int ()' Function 0x120928348 'mpi_free' 'int ()'     | `-UnaryOperator 0x120928550 <col:37, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x120928508 <col:38, col:43> '<dependent type>' contains-errors lvalue ->Vf     |     `-RecoveryExpr 0x1209284e8 <col:38> '<dependent type>' contains-errors lvalue     |-CallExpr 0x120928630 <line:6:5, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x120928590 <col:5> 'int ()' Function 0x120928348 'mpi_free' 'int ()'     | `-UnaryOperator 0x120928618 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x1209285d0 <col:16, col:21> '<dependent type>' contains-errors lvalue ->RQ     |     `-RecoveryExpr 0x1209285b0 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1209286f8 <col:27, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x120928658 <col:27> 'int ()' Function 0x120928348 'mpi_free' 'int ()'     | `-UnaryOperator 0x1209286e0 <col:37, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x120928698 <col:38, col:43> '<dependent type>' contains-errors lvalue ->RP     |     `-RecoveryExpr 0x120928678 <col:38> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1209287c0 <col:49, col:68> '<dependent type>' contains-errors     | |-DeclRefExpr 0x120928720 <col:49> 'int ()' Function 0x120928348 'mpi_free' 'int ()'     | `-UnaryOperator 0x1209287a8 <col:59, col:65> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x120928760 <col:60, col:65> '<dependent type>' contains-errors lvalue ->RN     |     `-RecoveryExpr 0x120928740 <col:60> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1209418a0 <line:7:5, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x120941800 <col:5> 'int ()' Function 0x120928348 'mpi_free' 'int ()'     | `-UnaryOperator 0x120941888 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x120941840 <col:16, col:21> '<dependent type>' contains-errors lvalue ->QP     |     `-RecoveryExpr 0x120941820 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x120941968 <col:27, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1209418c8 <col:27> 'int ()' Function 0x120928348 'mpi_free' 'int ()'     | `-UnaryOperator 0x120941950 <col:37, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x120941908 <col:38, col:43> '<dependent type>' contains-errors lvalue ->DQ     |     `-RecoveryExpr 0x1209418e8 <col:38> '<dependent type>' contains-errors lvalue     |-CallExpr 0x120941a30 <col:49, col:68> '<dependent type>' contains-errors     | |-DeclRefExpr 0x120941990 <col:49> 'int ()' Function 0x120928348 'mpi_free' 'int ()'     | `-UnaryOperator 0x120941a18 <col:59, col:65> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x1209419d0 <col:60, col:65> '<dependent type>' contains-errors lvalue ->DP     |     `-RecoveryExpr 0x1209419b0 <col:60> '<dependent type>' contains-errors lvalue     |-CallExpr 0x120941af8 <line:8:5, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x120941a58 <col:5> 'int ()' Function 0x120928348 'mpi_free' 'int ()'     | `-UnaryOperator 0x120941ae0 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x120941a98 <col:16, col:21> '<dependent type>' contains-errors lvalue ->Q     |     `-RecoveryExpr 0x120941a78 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x120941bc0 <col:27, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x120941b20 <col:27> 'int ()' Function 0x120928348 'mpi_free' 'int ()'     | `-UnaryOperator 0x120941ba8 <col:37, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x120941b60 <col:38, col:43> '<dependent type>' contains-errors lvalue ->P     |     `-RecoveryExpr 0x120941b40 <col:38> '<dependent type>' contains-errors lvalue     |-CallExpr 0x120941c88 <col:49, col:67> '<dependent type>' contains-errors     | |-DeclRefExpr 0x120941be8 <col:49> 'int ()' Function 0x120928348 'mpi_free' 'int ()'     | `-UnaryOperator 0x120941c70 <col:59, col:65> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x120941c28 <col:60, col:65> '<dependent type>' contains-errors lvalue ->D     |     `-RecoveryExpr 0x120941c08 <col:60> '<dependent type>' contains-errors lvalue     |-CallExpr 0x120941d50 <line:9:5, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x120941cb0 <col:5> 'int ()' Function 0x120928348 'mpi_free' 'int ()'     | `-UnaryOperator 0x120941d38 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x120941cf0 <col:16, col:21> '<dependent type>' contains-errors lvalue ->E     |     `-RecoveryExpr 0x120941cd0 <col:16> '<dependent type>' contains-errors lvalue     `-CallExpr 0x120941e18 <col:27, col:46> '<dependent type>' contains-errors       |-DeclRefExpr 0x120941d78 <col:27> 'int ()' Function 0x120928348 'mpi_free' 'int ()'       `-UnaryOperator 0x120941e00 <col:37, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow         `-CXXDependentScopeMemberExpr 0x120941db8 <col:38, col:43> '<dependent type>' contains-errors lvalue ->N           `-RecoveryExpr 0x120941d98 <col:38> '<dependent type>' contains-errors lvalue ","20913":"`-FunctionDecl 0x13000e350  line:1:13 _rtl_ps_inactive_ps 'void (struct ieee80211_hw *)' static   |-ParmVarDecl 0x13000e248 <col:33, col:54> col:54 used hw 'struct ieee80211_hw *'   `-CompoundStmt 0x13002e878 <line:2:1, line:32:1>     |-DeclStmt 0x130026a48 <line:3:2, col:41>     | |-RecordDecl 0x130026648 <col:2, col:9> col:9 struct rtl_priv     | `-VarDecl 0x1300267b8 <col:2, col:40> col:19 used rtlpriv 'struct rtl_priv *' cinit     |   `-ImplicitCastExpr 0x130026a18 <col:29, col:40> 'struct rtl_priv *' <IntegralToPointer>     |     `-CallExpr 0x1300269d8 <col:29, col:40> 'int'     |       |-ImplicitCastExpr 0x1300269c0 <col:29> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x130026950 <col:29> 'int ()' Function 0x130026898 'rtl_priv' 'int ()'     |       `-ImplicitCastExpr 0x130026a00 <col:38> 'struct ieee80211_hw *' <LValueToRValue>     |         `-DeclRefExpr 0x130026970 <col:38> 'struct ieee80211_hw *' lvalue ParmVar 0x13000e248 'hw' 'struct ieee80211_hw *'     |-DeclStmt 0x130026e38 <line:4:2, col:48>     | |-RecordDecl 0x130026a60 <col:2, col:9> col:9 struct rtl_hal     | `-VarDecl 0x130026bc8 <col:2, col:47> col:18 used rtlhal 'struct rtl_hal *' cinit     |   `-ImplicitCastExpr 0x130026e08 <col:27, col:47> 'struct rtl_hal *' <IntegralToPointer>     |     `-CallExpr 0x130026de0 <col:27, col:47> 'int'     |       |-ImplicitCastExpr 0x130026dc8 <col:27> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x130026d10 <col:27> 'int ()' Function 0x130026c58 'rtl_hal' 'int ()'     |       `-CallExpr 0x130026d88 <col:35, col:46> 'int'     |         |-ImplicitCastExpr 0x130026d70 <col:35> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x130026d30 <col:35> 'int ()' Function 0x130026898 'rtl_priv' 'int ()'     |         `-ImplicitCastExpr 0x130026db0 <col:44> 'struct ieee80211_hw *' <LValueToRValue>     |           `-DeclRefExpr 0x130026d50 <col:44> 'struct ieee80211_hw *' lvalue ParmVar 0x13000e248 'hw' 'struct ieee80211_hw *'     |-DeclStmt 0x130027228 <line:5:2, col:49>     | |-RecordDecl 0x130026e50 <col:2, col:9> col:9 struct rtl_ps_ctl     | `-VarDecl 0x130026fb8 <col:2, col:48> col:21 used ppsc 'struct rtl_ps_ctl *' cinit     |   `-ImplicitCastExpr 0x1300271f8 <col:28, col:48> 'struct rtl_ps_ctl *' <IntegralToPointer>     |     `-CallExpr 0x1300271d0 <col:28, col:48> 'int'     |       |-ImplicitCastExpr 0x1300271b8 <col:28> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x130027100 <col:28> 'int ()' Function 0x130027048 'rtl_psc' 'int ()'     |       `-CallExpr 0x130027178 <col:36, col:47> 'int'     |         |-ImplicitCastExpr 0x130027160 <col:36> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x130027120 <col:36> 'int ()' Function 0x130026898 'rtl_priv' 'int ()'     |         `-ImplicitCastExpr 0x1300271a0 <col:45> 'struct ieee80211_hw *' <LValueToRValue>     |           `-DeclRefExpr 0x130027140 <col:45> 'struct ieee80211_hw *' lvalue ParmVar 0x13000e248 'hw' 'struct ieee80211_hw *'     |-BinaryOperator 0x1300272f8 <line:7:2, col:26> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x130027278 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x130027240 <col:2> 'struct rtl_ps_ctl *' lvalue Var 0x130026fb8 'ppsc' 'struct rtl_ps_ctl *'     | `-RecoveryExpr 0x1300272d8 <col:26> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13002e258 <line:9:2, line:17:2>     | |-BinaryOperator 0x1300274e8 <line:9:6, line:10:27> 'int' contains-errors '&&'     | | |-BinaryOperator 0x130027488 <line:9:6, col:33> 'int' contains-errors '=='     | | | |-RecoveryExpr 0x130027350 <col:6, col:12> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x130027318 <col:6> 'struct rtl_ps_ctl *' lvalue Var 0x130026fb8 'ppsc' 'struct rtl_ps_ctl *'     | | | `-RecoveryExpr 0x130027468 <col:33> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x1300274c8 <line:10:6, col:27> 'int' contains-errors '=='     | |   |-RecoveryExpr 0x1300273e8 <col:6, col:14> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x1300273b0 <col:6> 'struct rtl_hal *' lvalue Var 0x130026bc8 'rtlhal' 'struct rtl_hal *'     | |   `-RecoveryExpr 0x1300274a8 <col:27> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13002e240 <col:37, line:17:2>     |   `-IfStmt 0x13002e220 <line:11:3, line:16:3>     |     |-RecoveryExpr 0x13002dfd8 <line:11:7, line:13:28> '_Bool' contains-errors     |     `-CompoundStmt 0x13002e208 <col:38, line:16:3>     |       `-CallExpr 0x13002e0c0 <line:14:4, col:38> '<dependent type>' contains-errors     |         |-CXXDependentScopeMemberExpr 0x13002e058 <col:4, col:23> '<dependent type>' contains-errors lvalue ->disable_aspm     |         | `-RecoveryExpr 0x13002e030 <col:4, col:13> '<dependent type>' contains-errors lvalue     |         |   `-DeclRefExpr 0x13002dff8 <col:4> 'struct rtl_priv *' lvalue Var 0x1300267b8 'rtlpriv' 'struct rtl_priv *'     |         `-DeclRefExpr 0x13002e0a0 <col:36> 'struct ieee80211_hw *' lvalue ParmVar 0x13000e248 'hw' 'struct ieee80211_hw *'     `-IfStmt 0x13002e7f8 <line:22:2, line:29:2>       |-RecoveryExpr 0x13002e4b8 <line:22:6, line:23:27> '_Bool' contains-errors       `-CompoundStmt 0x13002e7e0 <col:37, line:29:2>         `-IfStmt 0x13002e7c0 <line:24:3, line:28:3>           |-RecoveryExpr 0x13002e578 <line:24:7, line:25:45> '_Bool' contains-errors           `-CompoundStmt 0x13002e7a8 <col:48, line:28:3>             `-CallExpr 0x13002e660 <line:26:4, col:37> '<dependent type>' contains-errors               |-CXXDependentScopeMemberExpr 0x13002e5f8 <col:4, col:23> '<dependent type>' contains-errors lvalue ->enable_aspm               | `-RecoveryExpr 0x13002e5d0 <col:4, col:13> '<dependent type>' contains-errors lvalue               |   `-DeclRefExpr 0x13002e598 <col:4> 'struct rtl_priv *' lvalue Var 0x1300267b8 'rtlpriv' 'struct rtl_priv *'               `-DeclRefExpr 0x13002e640 <col:35> 'struct ieee80211_hw *' lvalue ParmVar 0x13000e248 'hw' 'struct ieee80211_hw *' ","20248":"`-FunctionDecl 0x120928268  line:1:1 test_read_bits 'int (const unsigned char *, const unsigned char *)'   |-ParmVarDecl 0x120928108 <col:16, col:37> col:37 used buf 'const unsigned char *'   |-ParmVarDecl 0x120928188 <line:2:9, col:28> col:29 'const unsigned char *'   `-CompoundStmt 0x120940b78 <line:4:1, line:11:1>     |-DeclStmt 0x120928690 <line:5:5, line:6:55>     | `-VarDecl 0x120928380 <line:5:5, line:6:54> line:5:19 result 'unsigned long' cinit     |   `-CallExpr 0x120928650 <line:6:2, col:54> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x120928510 <col:2> 'int ()' Function 0x120928458 'read_bits' 'int ()'     |     |-RecoveryExpr 0x1209285d0 <col:12> '<dependent type>' contains-errors lvalue     |     |-RecoveryExpr 0x1209285f0 <col:15> '<dependent type>' contains-errors lvalue     |     |-RecoveryExpr 0x120928610 <col:27> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x120928630 <col:43> '<dependent type>' contains-errors lvalue     |-RecoveryExpr 0x1209286d8 <line:8:5> '<dependent type>' contains-errors lvalue     `-CallExpr 0x120940b40 <line:10:5, col:53> '<dependent type>' contains-errors       |-DeclRefExpr 0x1209287d8 <col:5> 'int ()' Function 0x120928720 'print_values' 'int ()'       |-BinaryOperator 0x120940ae0 <col:18, col:22> '<dependent type>' contains-errors '-'       | |-RecoveryExpr 0x120940ac0 <col:18> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x120940a18 <col:22> 'const unsigned char *' lvalue ParmVar 0x120928108 'buf' 'const unsigned char *'       |-RecoveryExpr 0x120940b00 <col:27> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x120940b20 <col:39> '<dependent type>' contains-errors lvalue ","20476":"`-FunctionDecl 0x1451281c8  line:1:21 invalid mp_logical_and 'double (int)' static   |-ParmVarDecl 0x1451280f0 <col:36, <invalid sloc>> col:53 invalid 'int'   `-CompoundStmt 0x145141bb0 <col:59, line:13:7>     |-DeclStmt 0x145128370 <line:2:9, col:37>     | `-VarDecl 0x145128290 <col:9, col:20> col:20 invalid val_left 'const int'     |-IfStmt 0x145128490 <line:4:9, col:59>     | |-UnaryOperator 0x1451283c0 <col:13, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1451283a8 <col:14> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x145128388 <col:14> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x145128478 <col:24, col:59>     |   `-ReturnStmt 0x145128468 <col:49, col:56>     |     `-ImplicitCastExpr 0x145128450 <col:56> 'double' <IntegralToFloating>     |       `-IntegerLiteral 0x145128430 <col:56> 'int' 0     |-DeclStmt 0x1451285b0 <line:5:9, col:46>     | `-VarDecl 0x1451284c8 <col:9, col:22> col:22 mem_right 'const long'     `-ForStmt 0x145141b78 <line:6:9, line:10:9>       |-<<<NULL>>>       |-<<<NULL>>>       |-BinaryOperator 0x1451286e8 <line:6:17, col:27> 'int' contains-errors '<'       | |-CXXDependentScopeMemberExpr 0x145128680 <col:17, col:20> '<dependent type>' contains-errors lvalue .p_code       | | `-RecoveryExpr 0x145128660 <col:17> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x1451286c8 <col:27> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x1451287e8 <col:34, col:39> '<dependent type>' contains-errors prefix '++' cannot overflow       | `-CXXDependentScopeMemberExpr 0x1451287a0 <col:36, col:39> '<dependent type>' contains-errors lvalue .p_code       |   `-RecoveryExpr 0x145128780 <col:36> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x145141b60 <col:47, line:10:9>         `-DeclStmt 0x1451419a8 <line:8:11, col:45>           `-VarDecl 0x1451418c0 <col:11, col:24> col:24 used target 'const long' ","20224":"`-FunctionDecl 0x1340564c8  line:1:9 invalid qmp_guest_set_vcpus 'int (int *, int **)'   |-ParmVarDecl 0x134056328 <col:29, col:56> col:56 invalid vcpus 'int *'   |-ParmVarDecl 0x1340563e0 <col:63, col:71> col:71 invalid errp 'int **'   `-CompoundStmt 0x134056800 <line:2:1, line:5:1>     |-CallExpr 0x134056788 <line:3:5, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1340566e0 <col:5> 'int ()' Function 0x134056628 'error_set' 'int ()'     | |-RecoveryExpr 0x134056700 <col:15> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x134056768 <col:21> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1340567f0 <line:4:5, col:13>       `-UnaryOperator 0x1340567d8 <col:12, col:13> 'int' prefix '-'         `-IntegerLiteral 0x1340567b8 <col:13> 'int' 1 ","20962":"`-FunctionDecl 0x15380dd90  line:1:6 mono_gc_cleanup 'void (void)'   `-CompoundStmt 0x15380de80 <line:2:1, line:3:1> ","20960":"`-FunctionDecl 0x14400dd98  line:1:1 rsvg_new_line 'int (void)'   `-CompoundStmt 0x1450097a0 <line:2:1, line:10:1>     |-CallExpr 0x14400e278 <line:5:5, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14400e138 <col:5> 'int ()' Function 0x14400e080 '_rsvg_node_init' 'int ()'     | `-UnaryOperator 0x14400e260 <col:22, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x14400e218 <col:23, col:29> '<dependent type>' contains-errors lvalue ->super     |     `-RecoveryExpr 0x14400e1f8 <col:23> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x145009790 <line:9:5, col:19>       `-UnaryOperator 0x145009778 <col:12, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow         `-CXXDependentScopeMemberExpr 0x145009730 <col:13, col:19> '<dependent type>' contains-errors lvalue ->super           `-RecoveryExpr 0x145009710 <col:13> '<dependent type>' contains-errors lvalue ","20973":"`-FunctionDecl 0x159809c00  col:9 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x159809d00 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x159809d68 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x159809ca8 <<invalid sloc>> Implicit 887 ","20180":"`-FunctionDecl 0x12d922748  line:1:19 xfrm_replay_verify_len 'int (struct xfrm_replay_state_esn *, struct nlattr *)' static inline   |-ParmVarDecl 0x12e00e248 <col:42, col:72> col:72 used replay_esn 'struct xfrm_replay_state_esn *'   |-ParmVarDecl 0x12d922628 <line:2:7, col:22> col:22 used rp 'struct nlattr *'   `-CompoundStmt 0x12d9232e0 <line:3:1, line:17:1>     |-DeclStmt 0x12d922940 <line:4:2, col:34>     | `-VarDecl 0x12d9228d8 <col:2, col:32> col:32 used up 'struct xfrm_replay_state_esn *'     |-DeclStmt 0x12d9229d8 <line:5:2, col:10>     | `-VarDecl 0x12d922970 <col:2, col:6> col:6 used ulen 'int'     |-IfStmt 0x12d922ae0 <line:7:2, line:8:10>     | |-BinaryOperator 0x12d922a90 <line:7:6, col:22> 'int' '||'     | | |-UnaryOperator 0x12d922a28 <col:6, col:7> 'int' prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x12d922a10 <col:7> 'struct xfrm_replay_state_esn *' <LValueToRValue>     | | |   `-DeclRefExpr 0x12d9229f0 <col:7> 'struct xfrm_replay_state_esn *' lvalue ParmVar 0x12e00e248 'replay_esn' 'struct xfrm_replay_state_esn *'     | | `-UnaryOperator 0x12d922a78 <col:21, col:22> 'int' prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x12d922a60 <col:22> 'struct nlattr *' <LValueToRValue>     | |     `-DeclRefExpr 0x12d922a40 <col:22> 'struct nlattr *' lvalue ParmVar 0x12d922628 'rp' 'struct nlattr *'     | `-ReturnStmt 0x12d922ad0 <line:8:3, col:10>     |   `-IntegerLiteral 0x12d922ab0 <col:10> 'int' 0     |-BinaryOperator 0x12d922d30 <line:10:2, col:18> 'struct xfrm_replay_state_esn *' '='     | |-DeclRefExpr 0x12d922b00 <col:2> 'struct xfrm_replay_state_esn *' lvalue Var 0x12d9228d8 'up' 'struct xfrm_replay_state_esn *'     | `-ImplicitCastExpr 0x12d922d18 <col:7, col:18> 'struct xfrm_replay_state_esn *' <IntegralToPointer>     |   `-CallExpr 0x12d922cd8 <col:7, col:18> 'int'     |     |-ImplicitCastExpr 0x12d922cc0 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x12d922c50 <col:7> 'int ()' Function 0x12d922b98 'nla_data' 'int ()'     |     `-ImplicitCastExpr 0x12d922d00 <col:16> 'struct nlattr *' <LValueToRValue>     |       `-DeclRefExpr 0x12d922c70 <col:16> 'struct nlattr *' lvalue ParmVar 0x12d922628 'rp' 'struct nlattr *'     |-BinaryOperator 0x12d922ee8 <line:11:2, col:37> 'int' '='     | |-DeclRefExpr 0x12d922d50 <col:2> 'int' lvalue Var 0x12d922970 'ulen' 'int'     | `-CallExpr 0x12d922ea8 <col:9, col:37> 'int'     |   |-ImplicitCastExpr 0x12d922e90 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12d922e50 <col:9> 'int ()' Function 0x12d922d98 'xfrm_replay_state_esn_len' 'int ()'     |   `-ImplicitCastExpr 0x12d922ed0 <col:35> 'struct xfrm_replay_state_esn *' <LValueToRValue>     |     `-DeclRefExpr 0x12d922e70 <col:35> 'struct xfrm_replay_state_esn *' lvalue Var 0x12d9228d8 'up' 'struct xfrm_replay_state_esn *'     |-IfStmt 0x12d923290 <line:13:2, line:14:11>     | |-BinaryOperator 0x12d9231c8 <line:13:6, col:69> 'int' '||'     | | |-BinaryOperator 0x12d9230b8 <col:6, col:20> 'int' '<'     | | | |-CallExpr 0x12d923040 <col:6, col:16> 'int'     | | | | |-ImplicitCastExpr 0x12d923028 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | | | `-DeclRefExpr 0x12d922fe8 <col:6> 'int ()' Function 0x12d922f30 'nla_len' 'int ()'     | | | | `-ImplicitCastExpr 0x12d923068 <col:14> 'struct nlattr *' <LValueToRValue>     | | | |   `-DeclRefExpr 0x12d923008 <col:14> 'struct nlattr *' lvalue ParmVar 0x12d922628 'rp' 'struct nlattr *'     | | | `-ImplicitCastExpr 0x12d9230a0 <col:20> 'int' <LValueToRValue>     | | |   `-DeclRefExpr 0x12d923080 <col:20> 'int' lvalue Var 0x12d922970 'ulen' 'int'     | | `-BinaryOperator 0x12d9231a8 <col:28, col:69> 'int' '!='     | |   |-CallExpr 0x12d923130 <col:28, col:64> 'int'     | |   | |-ImplicitCastExpr 0x12d923118 <col:28> 'int (*)()' <FunctionToPointerDecay>     | |   | | `-DeclRefExpr 0x12d9230d8 <col:28> 'int ()' Function 0x12d922d98 'xfrm_replay_state_esn_len' 'int ()'     | |   | `-ImplicitCastExpr 0x12d923158 <col:54> 'struct xfrm_replay_state_esn *' <LValueToRValue>     | |   |   `-DeclRefExpr 0x12d9230f8 <col:54> 'struct xfrm_replay_state_esn *' lvalue ParmVar 0x12e00e248 'replay_esn' 'struct xfrm_replay_state_esn *'     | |   `-ImplicitCastExpr 0x12d923190 <col:69> 'int' <LValueToRValue>     | |     `-DeclRefExpr 0x12d923170 <col:69> 'int' lvalue Var 0x12d922970 'ulen' 'int'     | `-ReturnStmt 0x12d923280 <line:14:3, col:11>     |   `-UnaryOperator 0x12d923268 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12d923250 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12d923230 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12d9232d0 <line:16:2, col:9>       `-IntegerLiteral 0x12d9232b0 <col:9> 'int' 0 ","21245":"`-FunctionDecl 0x12400a8f8  col:43 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x12400a9f8 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x12400a9a0 <<invalid sloc>> Implicit 902 ","20741":"`-FunctionDecl 0x142027608  line:1:1 invalid nfsd4_encode_seek 'int (struct nfsd4_compoundres *, int, struct nfsd4_seek *)'   |-ParmVarDecl 0x14200e248 <col:19, col:45> col:45 used resp 'struct nfsd4_compoundres *'   |-ParmVarDecl 0x14200e2e0 <col:51, col:58> col:58 invalid nfserr 'int'   |-ParmVarDecl 0x1420274c8 <line:2:5, col:24> col:24 used seek 'struct nfsd4_seek *'   `-CompoundStmt 0x142027e10 <line:3:1, line:14:1>     |-IfStmt 0x142027730 <line:6:2, line:7:10>     | |-RecoveryExpr 0x1420276e0 <line:6:6> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x142027720 <line:7:3, col:10>     |   `-RecoveryExpr 0x142027700 <col:10> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x142027c18 <line:10:2, col:35> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x142027c00 <col:2, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-UnaryOperator 0x142027be8 <col:3, col:4> '<dependent type>' contains-errors postfix '++' cannot overflow     | |   `-RecoveryExpr 0x142027bc8 <col:3> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x142027b80 <col:9, col:35> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x142027b00 <col:9> 'int ()' Function 0x142027a48 'cpu_to_be32' 'int ()'     |   `-RecoveryExpr 0x142027b58 <col:21, col:27> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x142027b20 <col:21> 'struct nfsd4_seek *' lvalue ParmVar 0x1420274c8 'seek' 'struct nfsd4_seek *'     `-ReturnStmt 0x142027e00 <line:13:2, col:9>       `-RecoveryExpr 0x142027de0 <col:9> '<dependent type>' contains-errors lvalue ","20862":"`-FunctionDecl 0x10300dec8  line:1:1 invalid ff_get_visited_list 'int (char *, int **)'   |-ParmVarDecl 0x10300dcf0 <line:2:5, col:15> col:15 used filename 'char *'   |-ParmVarDecl 0x10300dde0 <line:3:5, col:29> col:29 invalid list_headp 'int **'   `-CompoundStmt 0x1201245d8 <line:4:1, line:59:1>     |-IfStmt 0x120124028 <line:8:5, line:30:5>     | |-BinaryOperator 0x10300e0b8 <line:8:9, col:24> 'int' contains-errors '!='     | | |-UnaryOperator 0x10300e080 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow     | | | `-ImplicitCastExpr 0x10300e068 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-RecoveryExpr 0x10300dfb0 <col:10> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x10300e098 <col:24> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x120124010 <line:9:5, line:30:5>     |   `-WhileStmt 0x120123ff0 <line:11:2, line:29:2>     |     |-BinaryOperator 0x10300e1b8 <line:11:9, col:19> 'int' contains-errors '!='     |     | |-RecoveryExpr 0x10300e178 <col:9> '<dependent type>' contains-errors lvalue     |     | `-RecoveryExpr 0x10300e198 <col:19> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x120123fd8 <line:12:2, line:29:2>     |       `-IfStmt 0x120123f58 <line:13:6, line:27:6>     |         |-BinaryOperator 0x120123ed8 <line:13:10, col:55> 'int' contains-errors '=='     |         | |-CallExpr 0x120123ea8 <col:10, col:50> '<dependent type>' contains-errors     |         | | |-DeclRefExpr 0x10300e330 <col:10> 'int ()' Function 0x10300e278 'fnamecmp' 'int ()'     |         | | |-DeclRefExpr 0x10300e350 <col:19> 'char *' lvalue ParmVar 0x10300dcf0 'filename' 'char *'     |         | | `-CXXDependentScopeMemberExpr 0x120123e60 <col:29, col:37> '<dependent type>' contains-errors lvalue ->ffvl_filename     |         | |   `-RecoveryExpr 0x120123e40 <col:29> '<dependent type>' contains-errors lvalue     |         | `-IntegerLiteral 0x120123e00 <col:55> 'int' 0     |         `-CompoundStmt 0x120123f40 <line:14:6, line:27:6>     |           `-ReturnStmt 0x120123f30 <line:26:3, col:10>     |             `-RecoveryExpr 0x120123f10 <col:10> '<dependent type>' contains-errors lvalue     `-IfStmt 0x120124518 <line:50:5, line:54:5>       |-RecoveryExpr 0x1201243e8 <line:50:9, col:34> '_Bool' contains-errors       `-CompoundStmt 0x120124508 <line:51:5, line:54:5> ","20202":"`-FunctionDecl 0x13d06b7c8  line:1:1 invalid cib_connect 'int (int)'   |-ParmVarDecl 0x13d06b6f0 <col:13, col:22> col:22 invalid full 'int'   `-CompoundStmt 0x13d085588 <line:2:1, line:69:1>     |-DeclStmt 0x13d06b930 <line:3:5, col:21>     | `-VarDecl 0x13d06b890 <col:5, col:14> col:9 used rc 'int' cinit     |   `-RecoveryExpr 0x13d06b910 <col:14> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x13d06b9e0 <line:4:5, col:37>     | `-VarDecl 0x13d06b960 <col:5, col:21> col:21 referenced invalid need_pass 'int' static     |-IfStmt 0x13f00a3b0 <line:8:5, line:10:5>     | |-BinaryOperator 0x13f00a2b8 <line:8:9, col:26> 'int' contains-errors '!='     | | |-CallExpr 0x13f00a258 <col:9, col:21> 'int'     | | | |-ImplicitCastExpr 0x13f00a240 <col:9> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x13d06bca0 <col:9> 'int ()' Function 0x13d06bbe8 'getenv' 'int ()'     | | | `-ImplicitCastExpr 0x13f00a280 <col:16> 'char *' <ArrayToPointerDecay>     | | |   `-StringLiteral 0x13d06bd00 <col:16> 'char[4]' lvalue \"STR\"     | | `-RecoveryExpr 0x13f00a298 <col:26> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13f00a398 <col:32, line:10:5>     |   `-BinaryOperator 0x13f00a378 <line:9:9, col:21> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x13f00a2f8 <col:9> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x13f00a2d8 <col:9> 'int' lvalue Var 0x13d06b960 'need_pass' 'int'     |     `-RecoveryExpr 0x13f00a358 <col:21> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13f00a640 <line:12:5, line:14:5>     | |-BinaryOperator 0x13f00a4d8 <line:12:8, col:31> 'int' contains-errors '&&'     | | |-RecoveryExpr 0x13f00a458 <col:8> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x13f00a4b8 <col:25, col:31> 'int' contains-errors '=='     | |   |-RecoveryExpr 0x13f00a478 <col:25> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x13f00a498 <col:31> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13f00a630 <col:37, line:14:5>     |-IfStmt 0x13f00aae0 <line:16:5, line:23:5>     | |-BinaryOperator 0x13f00a7f8 <line:16:8, col:38> 'int' contains-errors '&&'     | | |-RecoveryExpr 0x13f00a730 <col:8> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x13f00a7d8 <col:25, col:38> 'int' contains-errors '=='     | |   |-CXXDependentScopeMemberExpr 0x13f00a770 <col:25, col:29> '<dependent type>' contains-errors lvalue ->state     | |   | `-RecoveryExpr 0x13f00a750 <col:25> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x13f00a7b8 <col:38> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13f00aac0 <col:60, line:23:5>     |   |-CallExpr 0x13f00a950 <line:17:9, col:24> 'int'     |   | |-ImplicitCastExpr 0x13f00a938 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x13f00a8f8 <col:9> 'int ()' Function 0x13f00a840 'crm_trace' 'int ()'     |   | `-ImplicitCastExpr 0x13f00a978 <col:19> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x13f00a918 <col:19> 'char[4]' lvalue \"STR\"     |   `-IfStmt 0x13f00aaa0 <line:19:9, line:22:9>     |     |-RecoveryExpr 0x13f00a9d0 <line:19:12, col:18> '_Bool' contains-errors     |     `-CompoundStmt 0x13f00aa88 <col:27, line:22:9>     |       `-CallExpr 0x13f00aa48 <line:20:13, col:28> 'int'     |         |-ImplicitCastExpr 0x13f00aa30 <col:13> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x13f00a9f0 <col:13> 'int ()' Function 0x13f00a840 'crm_trace' 'int ()'     |         `-ImplicitCastExpr 0x13f00aa70 <col:23> 'char *' <ArrayToPointerDecay>     |           `-StringLiteral 0x13f00aa10 <col:23> 'char[4]' lvalue \"STR\"     |-IfStmt 0x13d085520 <line:25:5, line:67:5>     | |-RecoveryExpr 0x13f00ab00 <line:25:9, col:60> '_Bool' contains-errors     | `-CompoundStmt 0x13d0854f0 <col:83, line:67:5>     |   |-CallExpr 0x13f00ab78 <line:26:9, col:24> 'int'     |   | |-ImplicitCastExpr 0x13f00ab60 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x13f00ab20 <col:9> 'int ()' Function 0x13f00a840 'crm_trace' 'int ()'     |   | `-ImplicitCastExpr 0x13f00aba0 <col:19> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x13f00ab40 <col:19> 'char[4]' lvalue \"STR\"     |   |-IfStmt 0x13f00add0 <line:27:9, line:30:9>     |   | |-RecoveryExpr 0x13f00abd8 <line:27:13, col:56> '_Bool' contains-errors     |   | `-CompoundStmt 0x13f00adb8 <col:68, line:30:9>     |   |   `-CallExpr 0x13f00ad78 <line:29:13, col:27> 'int'     |   |     |-ImplicitCastExpr 0x13f00ad60 <col:13> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x13f00ad20 <col:13> 'int ()' Function 0x13f00ac68 'print_as' 'int ()'     |   |     `-ImplicitCastExpr 0x13f00ada0 <col:22> 'char *' <ArrayToPointerDecay>     |   |       `-StringLiteral 0x13f00ad40 <col:22> 'char[4]' lvalue \"STR\"     |   |-IfStmt 0x13f00aeb0 <line:34:9, line:36:9>     |   | |-RecoveryExpr 0x13f00ae30 <line:34:13, col:19> '_Bool' contains-errors     |   | `-CompoundStmt 0x13f00ae98 <col:28, line:36:9>     |   |   `-ReturnStmt 0x13f00ae88 <line:35:13, col:20>     |   |     `-ImplicitCastExpr 0x13f00ae70 <col:20> 'int' contains-errors <LValueToRValue>     |   |       `-DeclRefExpr 0x13f00ae50 <col:20> 'int' contains-errors lvalue Var 0x13d06b890 'rc' 'int'     |   `-IfStmt 0x13d0854d0 <line:41:9, line:66:9>     |     |-RecoveryExpr 0x13f00b0d0 <line:41:13> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x13d0854a8 <col:19, line:66:9>     |       |-IfStmt 0x13d085070 <line:42:13, line:52:13>     |       | |-RecoveryExpr 0x13f00b110 <line:42:17, col:23> '_Bool' contains-errors     |       | `-CompoundStmt 0x13d085058 <col:32, line:52:13>     |       |   `-IfStmt 0x13d085038 <line:44:17, line:50:17>     |       |     |-RecoveryExpr 0x13f00b170 <line:44:21, col:28> '_Bool' contains-errors     |       |     `-CompoundStmt 0x13d085018 <col:45, line:50:17>     |       |       |-CallExpr 0x13d084e00 <line:45:21, col:35> 'int'     |       |       | |-ImplicitCastExpr 0x13f00b1d0 <col:21> 'int (*)()' <FunctionToPointerDecay>     |       |       | | `-DeclRefExpr 0x13f00b190 <col:21> 'int ()' Function 0x13f00ac68 'print_as' 'int ()'     |       |       | `-ImplicitCastExpr 0x13d084e28 <col:30> 'char *' <ArrayToPointerDecay>     |       |       |   `-StringLiteral 0x13f00b1b0 <col:30> 'char[4]' lvalue \"STR\"     |       |       `-IfStmt 0x13d084fd8 <line:46:21, line:48:21>     |       |         |-RecoveryExpr 0x13d084e40 <line:46:25> '_Bool' contains-errors     |       |         `-CompoundStmt 0x13d084fc0 <col:37, line:48:21>     |       |           `-CallExpr 0x13d084f98 <line:47:25, col:32> 'int'     |       |             |-ImplicitCastExpr 0x13d084f80 <col:25> 'int (*)()' <FunctionToPointerDecay>     |       |             | `-DeclRefExpr 0x13d084f40 <col:25> 'int ()' Function 0x13d084e88 'sleep' 'int ()'     |       |             `-IntegerLiteral 0x13d084f60 <col:31> 'int' 2     |       |-IfStmt 0x13d085100 <line:54:13, line:57:13>     |       | |-RecoveryExpr 0x13d0850b0 <line:54:17, col:23> '_Bool' contains-errors     |       | `-CompoundStmt 0x13d0850f0 <col:32, line:57:13>     |       `-IfStmt 0x13d085488 <line:59:13, line:65:13>     |         |-RecoveryExpr 0x13d085140 <line:59:17, col:23> '_Bool' contains-errors     |         `-CompoundStmt 0x13d085460 <col:32, line:65:13>     |           |-CallExpr 0x13d0851b8 <line:60:17, col:31> 'int'     |           | |-ImplicitCastExpr 0x13d0851a0 <col:17> 'int (*)()' <FunctionToPointerDecay>     |           | | `-DeclRefExpr 0x13d085160 <col:17> 'int ()' Function 0x13f00ac68 'print_as' 'int ()'     |           | `-ImplicitCastExpr 0x13d0851e0 <col:26> 'char *' <ArrayToPointerDecay>     |           |   `-StringLiteral 0x13d085180 <col:26> 'char[4]' lvalue \"STR\"     |           |-IfStmt 0x13d0852b0 <line:61:17, line:63:17>     |           | |-RecoveryExpr 0x13d0851f8 <line:61:21> '_Bool' contains-errors     |           | `-CompoundStmt 0x13d085298 <col:33, line:63:17>     |           |   `-CallExpr 0x13d085270 <line:62:21, col:28> 'int'     |           |     |-ImplicitCastExpr 0x13d085258 <col:21> 'int (*)()' <FunctionToPointerDecay>     |           |     | `-DeclRefExpr 0x13d085218 <col:21> 'int ()' Function 0x13d084e88 'sleep' 'int ()'     |           |     `-IntegerLiteral 0x13d085238 <col:27> 'int' 2     |           `-CallExpr 0x13d085438 <line:64:17, col:29> 'int' contains-errors     |             |-ImplicitCastExpr 0x13d085420 <col:17> 'int (*)()' <FunctionToPointerDecay>     |             | `-DeclRefExpr 0x13d0853b0 <col:17> 'int ()' Function 0x13d0852f8 'clean_up' 'int ()'     |             `-UnaryOperator 0x13d085408 <col:26, col:27> 'int' contains-errors prefix '-'     |               `-ImplicitCastExpr 0x13d0853f0 <col:27> 'int' contains-errors <LValueToRValue>     |                 `-DeclRefExpr 0x13d0853d0 <col:27> 'int' contains-errors lvalue Var 0x13d06b890 'rc' 'int'     `-ReturnStmt 0x13d085578 <line:68:5, col:12>       `-ImplicitCastExpr 0x13d085560 <col:12> 'int' contains-errors <LValueToRValue>         `-DeclRefExpr 0x13d085540 <col:12> 'int' contains-errors lvalue Var 0x13d06b890 'rc' 'int' ","20935":"`-FunctionDecl 0x134128258  line:1:1 invalid read_and_discard_scanlines 'int (int, int)'   |-ParmVarDecl 0x1341280f0 <col:28, col:45> col:45 referenced invalid cinfo 'int'   |-ParmVarDecl 0x134128170 <col:52, col:63> col:63 invalid num_lines 'int'   `-CompoundStmt 0x134149c60 <line:2:1, line:28:1>     |-DeclStmt 0x134128778 <line:4:3, line:6:46>     | `-VarDecl 0x1341286d8 <line:4:3, line:6:42> line:4:10 used color_convert 'void (*)(int, int, int, int, int)' cinit     |   `-RecoveryExpr 0x134128758 <line:6:42> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x134141bc0 <line:7:3, line:8:70>     | `-VarDecl 0x134141b20 <line:7:3, line:8:66> line:7:10 used color_quantize 'void (*)(int, int, int, int)' cinit     |   `-RecoveryExpr 0x134141ba0 <line:8:66> '<dependent type>' contains-errors lvalue     |-IfStmt 0x134141f70 <line:10:3, line:13:3>     | |-BinaryOperator 0x134141cf0 <line:10:7, col:43> 'int' contains-errors '&&'     | | |-CXXDependentScopeMemberExpr 0x134141bf8 <col:7, col:14> '<dependent type>' contains-errors lvalue ->cconvert     | | | `-RecoveryExpr 0x134141bd8 <col:7> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x134141ca8 <col:26, col:43> '<dependent type>' contains-errors lvalue ->color_convert     | |   `-CXXDependentScopeMemberExpr 0x134141c60 <col:26, col:33> '<dependent type>' contains-errors lvalue ->cconvert     | |     `-RecoveryExpr 0x134141c40 <col:26> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x134141f50 <col:58, line:13:3>     |   |-BinaryOperator 0x134141de0 <line:11:5, col:38> 'void (*)(int, int, int, int, int)' contains-errors '='     |   | |-DeclRefExpr 0x134141d10 <col:5> 'void (*)(int, int, int, int, int)' contains-errors lvalue Var 0x1341286d8 'color_convert' 'void (*)(int, int, int, int, int)'     |   | `-CXXDependentScopeMemberExpr 0x134141d98 <col:21, col:38> '<dependent type>' contains-errors lvalue ->color_convert     |   |   `-CXXDependentScopeMemberExpr 0x134141d50 <col:21, col:28> '<dependent type>' contains-errors lvalue ->cconvert     |   |     `-RecoveryExpr 0x134141d30 <col:21> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x134141f30 <line:12:5, col:38> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x134141e90 <col:5, col:22> '<dependent type>' contains-errors lvalue ->color_convert     |     | `-CXXDependentScopeMemberExpr 0x134141e48 <col:5, col:12> '<dependent type>' contains-errors lvalue ->cconvert     |     |   `-RecoveryExpr 0x134141e20 <col:5> '<dependent type>' contains-errors lvalue     |     |     `-DeclRefExpr 0x134141e00 <col:5> 'int' lvalue ParmVar 0x1341280f0 'cinfo' 'int'     |     `-DeclRefExpr 0x134141f10 <col:38> 'void (*)(int, int, int, int, int)' contains-errors lvalue Var 0x1341286d8 'color_convert' 'void (*)(int, int, int, int, int)'     |-IfStmt 0x134142328 <line:15:3, line:18:3>     | |-BinaryOperator 0x1341420a8 <line:15:7, col:45> 'int' contains-errors '&&'     | | |-CXXDependentScopeMemberExpr 0x134141fb0 <col:7, col:14> '<dependent type>' contains-errors lvalue ->cquantize     | | | `-RecoveryExpr 0x134141f90 <col:7> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x134142060 <col:27, col:45> '<dependent type>' contains-errors lvalue ->color_quantize     | |   `-CXXDependentScopeMemberExpr 0x134142018 <col:27, col:34> '<dependent type>' contains-errors lvalue ->cquantize     | |     `-RecoveryExpr 0x134141ff8 <col:27> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x134142308 <col:61, line:18:3>     |   |-BinaryOperator 0x134142198 <line:16:5, col:40> 'void (*)(int, int, int, int)' contains-errors '='     |   | |-DeclRefExpr 0x1341420c8 <col:5> 'void (*)(int, int, int, int)' contains-errors lvalue Var 0x134141b20 'color_quantize' 'void (*)(int, int, int, int)'     |   | `-CXXDependentScopeMemberExpr 0x134142150 <col:22, col:40> '<dependent type>' contains-errors lvalue ->color_quantize     |   |   `-CXXDependentScopeMemberExpr 0x134142108 <col:22, col:29> '<dependent type>' contains-errors lvalue ->cquantize     |   |     `-RecoveryExpr 0x1341420e8 <col:22> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x1341422e8 <line:17:5, col:40> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x134142248 <col:5, col:23> '<dependent type>' contains-errors lvalue ->color_quantize     |     | `-CXXDependentScopeMemberExpr 0x134142200 <col:5, col:12> '<dependent type>' contains-errors lvalue ->cquantize     |     |   `-RecoveryExpr 0x1341421d8 <col:5> '<dependent type>' contains-errors lvalue     |     |     `-DeclRefExpr 0x1341421b8 <col:5> 'int' lvalue ParmVar 0x1341280f0 'cinfo' 'int'     |     `-DeclRefExpr 0x1341422c8 <col:40> 'void (*)(int, int, int, int)' contains-errors lvalue Var 0x134141b20 'color_quantize' 'void (*)(int, int, int, int)'     |-ForStmt 0x134142708 <line:20:3, line:21:39>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-BinaryOperator 0x134142418 <line:20:15, col:19> 'int' contains-errors '<'     | | |-RecoveryExpr 0x1341423f8 <col:15> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1341423b8 <col:19> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x134142488 <col:30, col:31> '<dependent type>' contains-errors postfix '++' cannot overflow     | | `-RecoveryExpr 0x134142468 <col:30> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x1341426d0 <line:21:5, col:39> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x134142600 <col:5> 'int ()' Function 0x134142548 'jpeg_read_scanlines' 'int ()'     |   |-RecoveryExpr 0x134142620 <col:25> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x1341426b0 <col:32> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x134142658 <col:38> 'int' 1     |-IfStmt 0x134149ad0 <line:23:3, line:24:38>     | |-ImplicitCastExpr 0x134142760 <line:23:7> 'void (*)(int, int, int, int, int)' contains-errors <LValueToRValue>     | | `-DeclRefExpr 0x134142740 <col:7> 'void (*)(int, int, int, int, int)' contains-errors lvalue Var 0x1341286d8 'color_convert' 'void (*)(int, int, int, int, int)'     | `-BinaryOperator 0x134149ab0 <line:24:5, col:38> '<dependent type>' contains-errors '='     |   |-CXXDependentScopeMemberExpr 0x134149a48 <col:5, col:22> '<dependent type>' contains-errors lvalue ->color_convert     |   | `-CXXDependentScopeMemberExpr 0x134149a00 <col:5, col:12> '<dependent type>' contains-errors lvalue ->cconvert     |   |   `-RecoveryExpr 0x134142798 <col:5> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x134142778 <col:5> 'int' lvalue ParmVar 0x1341280f0 'cinfo' 'int'     |   `-DeclRefExpr 0x134149a90 <col:38> 'void (*)(int, int, int, int, int)' contains-errors lvalue Var 0x1341286d8 'color_convert' 'void (*)(int, int, int, int, int)'     `-IfStmt 0x134149c40 <line:26:3, line:27:40>       |-ImplicitCastExpr 0x134149b10 <line:26:7> 'void (*)(int, int, int, int)' contains-errors <LValueToRValue>       | `-DeclRefExpr 0x134149af0 <col:7> 'void (*)(int, int, int, int)' contains-errors lvalue Var 0x134141b20 'color_quantize' 'void (*)(int, int, int, int)'       `-BinaryOperator 0x134149c20 <line:27:5, col:40> '<dependent type>' contains-errors '='         |-CXXDependentScopeMemberExpr 0x134149bb8 <col:5, col:23> '<dependent type>' contains-errors lvalue ->color_quantize         | `-CXXDependentScopeMemberExpr 0x134149b70 <col:5, col:12> '<dependent type>' contains-errors lvalue ->cquantize         |   `-RecoveryExpr 0x134149b48 <col:5> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x134149b28 <col:5> 'int' lvalue ParmVar 0x1341280f0 'cinfo' 'int'         `-DeclRefExpr 0x134149c00 <col:40> 'void (*)(int, int, int, int)' contains-errors lvalue Var 0x134141b20 'color_quantize' 'void (*)(int, int, int, int)' ","20977":"`-FunctionDecl 0x120128a88  line:1:14 invalid Eval 'int (int *, int *)'   |-ParmVarDecl 0x120128928 <col:19, col:34> col:34 invalid context 'int *'   |-ParmVarDecl 0x1201289a8 <col:43, col:55> col:55 invalid node 'int *'   `-CompoundStmt 0x104809568 <col:61, line:38:1>     |-DeclStmt 0x120128c78 <line:2:3, col:80>     | `-VarDecl 0x120128b58 <col:3, col:9> col:9 used params 'int *' auto     |-DeclStmt 0x120128f20 <line:3:3, col:68>     | `-VarDecl 0x120128ca8 <col:3, col:23> col:23 invalid input 'const int *'     |-DeclStmt 0x120142070 <line:4:3, col:78>     | `-VarDecl 0x120128f50 <col:3, col:23> col:23 invalid input_weights 'const int *'     |-DeclStmt 0x1201421b8 <line:5:3, line:6:55>     | `-VarDecl 0x1201420a0 <line:5:3, col:23> col:23 invalid recurrent_weights 'const int *'     |-DeclStmt 0x120142300 <line:7:3, col:66>     | `-VarDecl 0x1201421e8 <col:3, col:23> col:23 invalid bias 'const int *'     `-SwitchStmt 0x120142580 <line:13:3, line:36:3>       |-ImplicitCastExpr 0x120142568 <line:13:11, col:26> '<dependent type>' contains-errors <LValueToRValue>       | `-CXXDependentScopeMemberExpr 0x120142520 <col:11, col:26> '<dependent type>' contains-errors lvalue ->type       |   `-RecoveryExpr 0x120142500 <col:11> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x104809548 <col:32, line:36:3>         |-CompoundStmt 0x120142fb0 <line:18:23, line:31:5>         | `-DeclStmt 0x120142850 <line:20:7, col:65>         |   `-VarDecl 0x120142760 <col:7, col:13> col:13 used op_data 'int *' auto         `-DefaultStmt 0x104809528 <line:32:5, line:34:64>           `-CallExpr 0x1048094f0 <line:33:7, line:34:64> '<dependent type>' contains-errors             |-DeclRefExpr 0x1048092b8 <line:33:7> 'int ()' Function 0x104809200 'TF_LITE_KERNEL_LOG' 'int ()'             |-RecoveryExpr 0x1048092d8 <col:26> '<dependent type>' contains-errors lvalue             |-StringLiteral 0x104809340 <col:35> 'char[4]' lvalue \"STR\"             `-CallExpr 0x1048094c8 <line:34:26, col:63> '<dependent type>' contains-errors               |-DeclRefExpr 0x104809440 <col:26> 'int ()' Function 0x104809388 'TfLiteTypeGetName' 'int ()'               `-CXXDependentScopeMemberExpr 0x104809480 <col:44, col:59> '<dependent type>' contains-errors lvalue ->type                 `-RecoveryExpr 0x104809460 <col:44> '<dependent type>' contains-errors lvalue ","21141":"`-FunctionDecl 0x14c921a58  line:1:17 invalid zynq_slcr_compute_pll 'int (int, int)' static   |-ParmVarDecl 0x14c9218f0 <col:39, col:48> col:48 invalid input 'int'   |-ParmVarDecl 0x14c921970 <col:55, col:64> col:64 invalid ctrl_reg 'int'   `-CompoundStmt 0x14c921db0 <line:2:1, line:19:1>     |-IfStmt 0x14c921bf0 <line:7:5, line:9:5>     | |-BinaryOperator 0x14c921b88 <line:7:9, col:20> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x14c921b10 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14c921b68 <col:20> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14c921bd8 <col:58, line:9:5>     |   `-ReturnStmt 0x14c921bc8 <line:8:9, col:16>     |     `-RecoveryExpr 0x14c921ba8 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14c921ce8 <line:12:5, line:15:5>     | |-RecoveryExpr 0x14c921c80 <line:12:9, line:13:51> '_Bool' contains-errors     | `-CompoundStmt 0x14c921cd0 <col:54, line:15:5>     |   `-ReturnStmt 0x14c921cc0 <line:14:9, col:16>     |     `-IntegerLiteral 0x14c921ca0 <col:16> 'int' 0     `-ReturnStmt 0x14c921da0 <line:18:5, col:20>       `-BinaryOperator 0x14c921d80 <col:12, col:20> '<dependent type>' contains-errors '\/'         |-RecoveryExpr 0x14c921d08 <col:12> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x14c921d60 <col:20> '<dependent type>' contains-errors lvalue ","21094":"`-FunctionDecl 0x121928288  line:1:13 invalid is_class_idx_in_code_classes 'int (int *, int)' static   |-ParmVarDecl 0x121928128 <col:42, col:54> col:54 invalid bin 'int *'   |-ParmVarDecl 0x1219281a8 <col:59, col:63> col:63 used class_idx 'int'   `-CompoundStmt 0x1219287a8 <col:74, line:9:1>     |-DeclStmt 0x1219283c0 <line:2:2, col:7>     | `-VarDecl 0x121928358 <col:2, col:6> col:6 used i 'int'     `-ForStmt 0x121928758 <line:3:2, line:7:2>       |-BinaryOperator 0x121928418 <line:3:7, col:11> 'int' '='       | |-DeclRefExpr 0x1219283d8 <col:7> 'int' lvalue Var 0x121928358 'i' 'int'       | `-IntegerLiteral 0x1219283f8 <col:11> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x121928508 <col:14, col:30> 'int' contains-errors '<'       | |-DeclRefExpr 0x121928438 <col:14> 'int' lvalue Var 0x121928358 'i' 'int'       | `-CXXDependentScopeMemberExpr 0x1219284c0 <col:18, col:30> '<dependent type>' contains-errors lvalue .class_size       |   `-CXXDependentScopeMemberExpr 0x121928478 <col:18, col:23> '<dependent type>' contains-errors lvalue ->header       |     `-RecoveryExpr 0x121928458 <col:18> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x121928548 <col:42, col:43> 'int' postfix '++'       | `-DeclRefExpr 0x121928528 <col:42> 'int' lvalue Var 0x121928358 'i' 'int'       `-CompoundStmt 0x121928740 <col:47, line:7:2>         `-IfStmt 0x121928720 <line:4:3, line:6:3>           |-BinaryOperator 0x1219286a0 <line:4:7, col:36> 'int' contains-errors '=='           | |-DeclRefExpr 0x121928560 <col:7> 'int' lvalue ParmVar 0x1219281a8 'class_idx' 'int'           | `-CXXDependentScopeMemberExpr 0x121928658 <col:20, col:36> '<dependent type>' contains-errors lvalue .class_id           |   `-ArraySubscriptExpr 0x121928638 <col:20, col:34> '<dependent type>' contains-errors lvalue           |     |-ImplicitCastExpr 0x121928608 <col:20, col:25> '<dependent type>' contains-errors <LValueToRValue>           |     | `-CXXDependentScopeMemberExpr 0x1219285a0 <col:20, col:25> '<dependent type>' contains-errors lvalue ->classes           |     |   `-RecoveryExpr 0x121928580 <col:20> '<dependent type>' contains-errors lvalue           |     `-ImplicitCastExpr 0x121928620 <col:33> 'int' <LValueToRValue>           |       `-DeclRefExpr 0x1219285e8 <col:33> 'int' lvalue Var 0x121928358 'i' 'int'           `-CompoundStmt 0x121928708 <col:46, line:6:3>             `-ReturnStmt 0x1219286f8 <line:5:4, col:11>               `-RecoveryExpr 0x1219286d8 <col:11> '<dependent type>' contains-errors lvalue ","20614":"`-FunctionDecl 0x143140d18  line:1:12 do_insn_fetch 'int (struct x86_emulate_ctxt *, struct x86_emulate_ops *, unsigned long, void *, unsigned int)' static   |-ParmVarDecl 0x143128648 <col:26, col:51> col:51 used ctxt 'struct x86_emulate_ctxt *'   |-ParmVarDecl 0x143140a28 <line:2:5, col:29> col:29 used ops 'struct x86_emulate_ops *'   |-ParmVarDecl 0x143140aa8 <line:3:5, col:19> col:19 used eip 'unsigned long'   |-ParmVarDecl 0x143140b28 <col:24, col:30> col:30 used dest 'void *'   |-ParmVarDecl 0x143140ba8 <col:36, col:45> col:45 used size 'unsigned int'   `-CompoundStmt 0x1431415e8 <line:4:1, line:17:1>     |-DeclStmt 0x143140ed0 <line:5:2, col:12>     | `-VarDecl 0x143140e48 <col:2, col:11> col:6 used rc 'int' cinit     |   `-IntegerLiteral 0x143140eb0 <col:11> 'int' 0     |-IfStmt 0x1431410f8 <line:8:2, line:9:10>     | |-BinaryOperator 0x143141078 <line:8:6, col:43> 'int' contains-errors '>'     | | |-BinaryOperator 0x143141038 <col:6, col:32> '<dependent type>' contains-errors '-'     | | | |-BinaryOperator 0x143140f70 <col:6, col:12> 'unsigned long' '+'     | | | | |-ImplicitCastExpr 0x143140f28 <col:6> 'unsigned long' <LValueToRValue>     | | | | | `-DeclRefExpr 0x143140ee8 <col:6> 'unsigned long' lvalue ParmVar 0x143140aa8 'eip' 'unsigned long'     | | | | `-ImplicitCastExpr 0x143140f58 <col:12> 'unsigned long' <IntegralCast>     | | | |   `-ImplicitCastExpr 0x143140f40 <col:12> 'unsigned int' <LValueToRValue>     | | | |     `-DeclRefExpr 0x143140f08 <col:12> 'unsigned int' lvalue ParmVar 0x143140ba8 'size' 'unsigned int'     | | | `-CXXDependentScopeMemberExpr 0x143140ff0 <col:19, col:32> '<dependent type>' contains-errors lvalue .eip_orig     | | |   `-RecoveryExpr 0x143140fc8 <col:19, col:25> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x143140f90 <col:19> 'struct x86_emulate_ctxt *' lvalue ParmVar 0x143128648 'ctxt' 'struct x86_emulate_ctxt *'     | | `-IntegerLiteral 0x143141058 <col:43> 'int' 15     | `-ReturnStmt 0x1431410e8 <line:9:3, col:10>     |   `-RecoveryExpr 0x1431410c8 <col:10> '<dependent type>' contains-errors lvalue     |-CompoundAssignOperator 0x143141198 <line:10:2, col:15> 'unsigned long' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-DeclRefExpr 0x143141118 <col:2> 'unsigned long' lvalue ParmVar 0x143140aa8 'eip' 'unsigned long'     | `-RecoveryExpr 0x143141170 <col:9, col:15> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x143141138 <col:9> 'struct x86_emulate_ctxt *' lvalue ParmVar 0x143128648 'ctxt' 'struct x86_emulate_ctxt *'     |-WhileStmt 0x143141598 <line:11:2, line:15:2>     | |-UnaryOperator 0x1431411e8 <line:11:9, col:13> 'unsigned int' postfix '--'     | | `-DeclRefExpr 0x1431411c8 <col:9> 'unsigned int' lvalue ParmVar 0x143140ba8 'size' 'unsigned int'     | `-CompoundStmt 0x143141578 <col:17, line:15:2>     |   |-BinaryOperator 0x1431414b8 <line:12:3, col:51> 'int' '='     |   | |-DeclRefExpr 0x143141200 <col:3> 'int' lvalue Var 0x143140e48 'rc' 'int'     |   | `-CallExpr 0x143141448 <col:8, col:51> 'int'     |   |   |-ImplicitCastExpr 0x143141430 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x143141330 <col:8> 'int ()' Function 0x143141278 'do_fetch_insn_byte' 'int ()'     |   |   |-ImplicitCastExpr 0x143141488 <col:27> 'struct x86_emulate_ctxt *' <LValueToRValue>     |   |   | `-DeclRefExpr 0x143141350 <col:27> 'struct x86_emulate_ctxt *' lvalue ParmVar 0x143128648 'ctxt' 'struct x86_emulate_ctxt *'     |   |   |-ImplicitCastExpr 0x1431414a0 <col:33> 'struct x86_emulate_ops *' <LValueToRValue>     |   |   | `-DeclRefExpr 0x143141370 <col:33> 'struct x86_emulate_ops *' lvalue ParmVar 0x143140a28 'ops' 'struct x86_emulate_ops *'     |   |   |-UnaryOperator 0x1431413b0 <col:38, col:41> 'unsigned long' postfix '++'     |   |   | `-DeclRefExpr 0x143141390 <col:38> 'unsigned long' lvalue ParmVar 0x143140aa8 'eip' 'unsigned long'     |   |   `-UnaryOperator 0x1431413e8 <col:45, col:49> 'void *' postfix '++'     |   |     `-DeclRefExpr 0x1431413c8 <col:45> 'void *' lvalue ParmVar 0x143140b28 'dest' 'void *'     |   `-IfStmt 0x143141558 <line:13:3, line:14:11>     |     |-ImplicitCastExpr 0x1431414f8 <line:13:7> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x1431414d8 <col:7> 'int' lvalue Var 0x143140e48 'rc' 'int'     |     `-ReturnStmt 0x143141548 <line:14:4, col:11>     |       `-ImplicitCastExpr 0x143141530 <col:11> 'int' <LValueToRValue>     |         `-DeclRefExpr 0x143141510 <col:11> 'int' lvalue Var 0x143140e48 'rc' 'int'     `-ReturnStmt 0x1431415d8 <line:16:2, col:9>       `-IntegerLiteral 0x1431415b8 <col:9> 'int' 0 ","20284":"`-FunctionDecl 0x12580e350  line:1:20 ext4_truncate_failed_write 'void (struct inode *)' static inline   |-ParmVarDecl 0x12580e248 <col:47, col:61> col:61 used inode 'struct inode *'   `-CompoundStmt 0x12582ac28 <line:2:1, line:5:1>     |-CallExpr 0x12582aa50 <line:3:2, col:54> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12582a970 <col:2> 'int ()' Function 0x12582a8b8 'truncate_inode_pages' 'int ()'     | |-RecoveryExpr 0x12582a9c8 <col:23, col:30> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12582a990 <col:23> 'struct inode *' lvalue ParmVar 0x12580e248 'inode' 'struct inode *'     | `-RecoveryExpr 0x12582aa28 <col:41, col:48> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12582a9f0 <col:41> 'struct inode *' lvalue ParmVar 0x12580e248 'inode' 'struct inode *'     `-CallExpr 0x12582abe8 <line:4:2, col:21> 'int'       |-ImplicitCastExpr 0x12582abd0 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x12582ab60 <col:2> 'int ()' Function 0x12582aaa8 'ext4_truncate' 'int ()'       `-ImplicitCastExpr 0x12582ac10 <col:16> 'struct inode *' <LValueToRValue>         `-DeclRefExpr 0x12582ab80 <col:16> 'struct inode *' lvalue ParmVar 0x12580e248 'inode' 'struct inode *' ","20334":"`-FunctionDecl 0x12b833908  line:1:1 referenced invalid AsyncFunctionDef 'int (int, int, int *, int *, int, int, int, int, int, int *)'   |-ParmVarDecl 0x12b8332f0 <col:18, col:29> col:29 invalid name 'int'   |-ParmVarDecl 0x12b833370 <col:35, col:48> col:48 invalid args 'int'   |-ParmVarDecl 0x12b833428 <col:54, col:65> col:65 invalid body 'int *'   |-ParmVarDecl 0x12b8334a8 <col:71, line:2:20> col:20 invalid decorator_list 'int *'   |-ParmVarDecl 0x12b833528 <col:36, col:44> col:44 invalid returns 'int'   |-ParmVarDecl 0x12b8335a8 <col:53, col:57> col:57 used lineno 'int'   |-ParmVarDecl 0x12b833628 <col:65, col:69> col:69 used col_offset 'int'   |-ParmVarDecl 0x12b8336a8 <line:3:18, col:22> col:22 used end_lineno 'int'   |-ParmVarDecl 0x12b833728 <col:34, col:38> col:38 used end_col_offset 'int'   |-ParmVarDecl 0x12b8337a8 <col:54, col:63> col:63 invalid arena 'int *'   `-CompoundStmt 0x12b857d78 <line:4:1, line:30:1>     |-IfStmt 0x12b857938 <line:6:5, line:10:5>     | |-UnaryOperator 0x12b857638 <line:6:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12b857620 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x12b857600 <col:10> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12b857918 <col:16, line:10:5>     |   |-CallExpr 0x12b8578a0 <line:7:9, line:8:30> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12b8577b0 <line:7:9> 'int ()' Function 0x12b8576f8 'PyErr_SetString' 'int ()'     |   | |-RecoveryExpr 0x12b857880 <col:25> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x12b857830 <line:8:25> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x12b857908 <line:9:9, col:16>     |     `-RecoveryExpr 0x12b8578e8 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12b857ae8 <line:11:5, line:15:5>     | |-UnaryOperator 0x12b857990 <line:11:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12b857978 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x12b857958 <col:10> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12b857ac8 <col:16, line:15:5>     |   |-CallExpr 0x12b857a50 <line:12:9, line:13:30> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12b8579a8 <line:12:9> 'int ()' Function 0x12b8576f8 'PyErr_SetString' 'int ()'     |   | |-RecoveryExpr 0x12b857a30 <col:25> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x12b8579e0 <line:13:25> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x12b857ab8 <line:14:9, col:16>     |     `-RecoveryExpr 0x12b857a98 <col:16> '<dependent type>' contains-errors lvalue     `-IfStmt 0x12b857c00 <line:17:5, line:18:16>       |-UnaryOperator 0x12b857ba0 <line:17:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-ImplicitCastExpr 0x12b857b88 <col:10> '<dependent type>' contains-errors <LValueToRValue>       |   `-RecoveryExpr 0x12b857b68 <col:10> '<dependent type>' contains-errors lvalue       `-ReturnStmt 0x12b857bf0 <line:18:9, col:16>         `-RecoveryExpr 0x12b857bd0 <col:16> '<dependent type>' contains-errors lvalue ","20707":"`-FunctionDecl 0x10300e350  line:1:20 tcp_prequeue_init 'void (struct tcp_sock *)' static inline   |-ParmVarDecl 0x10300e248 <col:38, col:55> col:55 used tp 'struct tcp_sock *'   `-CompoundStmt 0x103026b68 <line:2:1, line:13:1>     |-BinaryOperator 0x103026760 <line:3:2, col:19> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1030266a8 <col:2, col:12> '<dependent type>' contains-errors lvalue .task     | | `-RecoveryExpr 0x103026680 <col:2, col:6> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x103026648 <col:2> 'struct tcp_sock *' lvalue ParmVar 0x10300e248 'tp' 'struct tcp_sock *'     | `-RecoveryExpr 0x103026740 <col:19> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x103026848 <line:4:2, col:18> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1030267e0 <col:2, col:12> '<dependent type>' contains-errors lvalue .len     | | `-RecoveryExpr 0x1030267b8 <col:2, col:6> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x103026780 <col:2> 'struct tcp_sock *' lvalue ParmVar 0x10300e248 'tp' 'struct tcp_sock *'     | `-IntegerLiteral 0x103026828 <col:18> 'int' 0     |-BinaryOperator 0x103026930 <line:5:2, col:21> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1030268c8 <col:2, col:12> '<dependent type>' contains-errors lvalue .memory     | | `-RecoveryExpr 0x1030268a0 <col:2, col:6> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x103026868 <col:2> 'struct tcp_sock *' lvalue ParmVar 0x10300e248 'tp' 'struct tcp_sock *'     | `-IntegerLiteral 0x103026910 <col:21> 'int' 0     `-CallExpr 0x103026b40 <line:6:2, col:41> '<dependent type>' contains-errors       |-DeclRefExpr 0x103026a60 <col:2> 'int ()' Function 0x1030269a8 'skb_queue_head_init' 'int ()'       `-UnaryOperator 0x103026b28 <col:22, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow         `-CXXDependentScopeMemberExpr 0x103026ae0 <col:23, col:33> '<dependent type>' contains-errors lvalue .prequeue           `-RecoveryExpr 0x103026ab8 <col:23, col:27> '<dependent type>' contains-errors lvalue             `-DeclRefExpr 0x103026a80 <col:23> 'struct tcp_sock *' lvalue ParmVar 0x10300e248 'tp' 'struct tcp_sock *' ","20875":"`-FunctionDecl 0x1328290f8  col:27 implicit used abs 'int (int)' extern   |-ParmVarDecl 0x1328291f8 <<invalid sloc>> <invalid sloc> 'int'   |-BuiltinAttr 0x1328291a0 <<invalid sloc>> Implicit 998   |-NoThrowAttr 0x132829268 <col:27> Implicit   `-ConstAttr 0x132829290 <col:27> Implicit ","20688":"`-FunctionDecl 0x1558274d8  line:1:5 invalid vfs_lstat_smb_fname 'int (struct connection_struct *, const char *, int *)'   |-ParmVarDecl 0x15580e248 <col:25, col:51> col:51 used conn 'struct connection_struct *'   |-ParmVarDecl 0x15580e2c8 <col:57, col:69> col:69 used fname 'const char *'   |-ParmVarDecl 0x15580e398 <line:2:4, col:21> col:21 invalid psbuf 'int *'   `-CompoundStmt 0x155829998 <line:3:1, line:22:1>     |-DeclStmt 0x1558277c0 <line:4:2, col:39>     | |-RecordDecl 0x155827598 <col:2, col:9> col:9 struct smb_filename     | `-VarDecl 0x155827708 <col:2, col:35> col:23 used smb_fname 'struct smb_filename *' cinit     |   `-RecoveryExpr 0x155827788 <col:35> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x155827858 <line:6:2, col:9>     | `-VarDecl 0x1558277f0 <col:2, col:6> col:6 used ret 'int'     |-IfStmt 0x155827ff8 <line:10:2, line:13:2>     | |-UnaryOperator 0x155827e40 <line:10:6, col:29> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x155827e18 <col:7, col:29> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x155827d80 <col:7> 'int ()' Function 0x155827cc8 'NT_STATUS_IS_OK' 'int ()'     | |   `-RecoveryExpr 0x155827df8 <col:23> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x155827fe0 <col:32, line:13:2>     |   `-ReturnStmt 0x155827fd0 <line:12:3, col:11>     |     `-UnaryOperator 0x155827fb8 <col:10, col:11> 'int' prefix '-'     |       `-IntegerLiteral 0x155827f98 <col:11> 'int' 1     |-BinaryOperator 0x1558281f0 <line:15:2, col:37> 'int' contains-errors '='     | |-DeclRefExpr 0x155828018 <col:2> 'int' lvalue Var 0x1558277f0 'ret' 'int'     | `-CallExpr 0x155828190 <col:8, col:37> 'int' contains-errors     |   |-ImplicitCastExpr 0x155828178 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x155828118 <col:8> 'int ()' Function 0x155828060 'SMB_VFS_LSTAT' 'int ()'     |   |-ImplicitCastExpr 0x1558281c0 <col:22> 'struct connection_struct *' <LValueToRValue>     |   | `-DeclRefExpr 0x155828138 <col:22> 'struct connection_struct *' lvalue ParmVar 0x15580e248 'conn' 'struct connection_struct *'     |   `-ImplicitCastExpr 0x1558281d8 <col:28> 'struct smb_filename *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x155828158 <col:28> 'struct smb_filename *' contains-errors lvalue Var 0x155827708 'smb_fname' 'struct smb_filename *'     |-IfStmt 0x155828388 <line:16:2, line:18:2>     | |-BinaryOperator 0x155828280 <line:16:6, col:14> 'int' '!='     | | |-ImplicitCastExpr 0x155828268 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x155828210 <col:6> 'int' lvalue Var 0x1558277f0 'ret' 'int'     | | `-UnaryOperator 0x155828250 <col:13, col:14> 'int' prefix '-'     | |   `-IntegerLiteral 0x155828230 <col:14> 'int' 1     | `-CompoundStmt 0x155828370 <col:17, line:18:2>     |   `-BinaryOperator 0x155828350 <line:17:3, col:23> '<dependent type>' contains-errors '='     |     |-UnaryOperator 0x1558282d8 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow     |     | `-ImplicitCastExpr 0x1558282c0 <col:4> '<dependent type>' contains-errors <LValueToRValue>     |     |   `-RecoveryExpr 0x1558282a0 <col:4> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x155828328 <col:12, col:23> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x1558282f0 <col:12> 'struct smb_filename *' contains-errors lvalue Var 0x155827708 'smb_fname' 'struct smb_filename *'     |-CallExpr 0x155829910 <line:20:2, col:23> 'int' contains-errors     | |-ImplicitCastExpr 0x1558298f8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1558298b8 <col:2> 'int ()' Function 0x155829800 'TALLOC_FREE' 'int ()'     | `-ImplicitCastExpr 0x155829938 <col:14> 'struct smb_filename *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x1558298d8 <col:14> 'struct smb_filename *' contains-errors lvalue Var 0x155827708 'smb_fname' 'struct smb_filename *'     `-ReturnStmt 0x155829988 <line:21:2, col:9>       `-ImplicitCastExpr 0x155829970 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x155829950 <col:9> 'int' lvalue Var 0x1558277f0 'ret' 'int' ","21013":"`-FunctionDecl 0x12f026688  line:1:12 sctp_getsockopt_reconfig_supported 'int (struct sock *, int, char)' static   |-ParmVarDecl 0x12f00e248 <col:47, col:60> col:60 used sk 'struct sock *'   |-ParmVarDecl 0x12f00e2c8 <col:64, col:68> col:68 used len 'int'   |-ParmVarDecl 0x12f00e340 <line:2:12, col:17> col:17 __user 'char'   `-CompoundStmt 0x12e924fb8 <line:4:1, line:38:1>     |-DeclStmt 0x12f026908 <line:5:2, col:32>     | |-RecordDecl 0x12f026790 <col:2, col:9> col:9 struct sctp_assoc_value     | `-VarDecl 0x12f026888 <col:2, col:26> col:26 referenced invalid params 'struct sctp_assoc_value'     |-DeclStmt 0x12f026b08 <line:6:2, col:31>     | |-RecordDecl 0x12f026920 <col:2, col:9> col:9 struct sctp_association     | `-VarDecl 0x12f026a88 <col:2, col:27> col:27 used asoc 'struct sctp_association *'     |-DeclStmt 0x12f026c50 <line:7:2, col:22>     | `-VarDecl 0x12f026b38 <col:2, col:16> col:6 used retval 'int' cinit     |   `-UnaryOperator 0x12f026c38 <col:15, col:16> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12f026c20 <col:16> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12f026c00 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12f026eb8 <line:9:2, line:12:2>     | |-BinaryOperator 0x12f026d18 <line:9:6, col:25> 'int' contains-errors '<'     | | |-ImplicitCastExpr 0x12f026d00 <col:6> 'unsigned long' <IntegralCast>     | | | `-ImplicitCastExpr 0x12f026ce8 <col:6> 'int' <LValueToRValue>     | | |   `-DeclRefExpr 0x12f026c68 <col:6> 'int' lvalue ParmVar 0x12f00e2c8 'len' 'int'     | | `-UnaryExprOrTypeTraitExpr 0x12f026cc8 <col:12, col:25> 'unsigned long' contains-errors sizeof     | |   `-ParenExpr 0x12f026ca8 <col:18, col:25> '<dependent type>' contains-errors lvalue     | |     `-RecoveryExpr 0x12f026c88 <col:19> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12f026e98 <col:28, line:12:2>     |   |-BinaryOperator 0x12f026e10 <line:10:3, col:13> 'int' contains-errors '='     |   | |-DeclRefExpr 0x12f026d38 <col:3> 'int' contains-errors lvalue Var 0x12f026b38 'retval' 'int'     |   | `-UnaryOperator 0x12f026df8 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x12f026de0 <col:13> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x12f026dc0 <col:13> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x12f026e80 <line:11:3, col:8> 'out' 0x12f026e30     |-BinaryOperator 0x12f026f70 <line:14:2, col:21> 'int' contains-errors '='     | |-DeclRefExpr 0x12f026ed8 <col:2> 'int' lvalue ParmVar 0x12f00e2c8 'len' 'int'     | `-ImplicitCastExpr 0x12f026f58 <col:8, col:21> 'int' contains-errors <IntegralCast>     |   `-UnaryExprOrTypeTraitExpr 0x12f026f38 <col:8, col:21> 'unsigned long' contains-errors sizeof     |     `-ParenExpr 0x12f026f18 <col:14, col:21> '<dependent type>' contains-errors lvalue     |       `-RecoveryExpr 0x12f026ef8 <col:15> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12f0271d8 <line:15:2, line:16:8>     | |-CallExpr 0x12f027188 <line:15:6, col:41> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x12f0270a0 <col:6> 'int ()' Function 0x12f026fe8 'copy_from_user' 'int ()'     | | |-UnaryOperator 0x12f0270e0 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | `-RecoveryExpr 0x12f0270c0 <col:22> '<dependent type>' contains-errors lvalue     | | |-DeclRefExpr 0x12f027168 <col:30> 'int' contains-errors lvalue Var 0x12f026b38 'retval' 'int'     | | `-DeclRefExpr 0x12f027110 <col:38> 'int' lvalue ParmVar 0x12f00e2c8 'len' 'int'     | `-GotoStmt 0x12f0271c0 <line:16:3, col:8> 'out' 0x12f026e30     |-BinaryOperator 0x12f0273d0 <line:18:2, col:42> 'struct sctp_association *' contains-errors '='     | |-DeclRefExpr 0x12f0271f8 <col:2> 'struct sctp_association *' lvalue Var 0x12f026a88 'asoc' 'struct sctp_association *'     | `-CallExpr 0x12f0273a0 <col:9, col:42> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12f0272f8 <col:9> 'int ()' Function 0x12f027240 'sctp_id2assoc' 'int ()'     |   |-DeclRefExpr 0x12f027318 <col:23> 'struct sock *' lvalue ParmVar 0x12f00e248 'sk' 'struct sock *'     |   `-CXXDependentScopeMemberExpr 0x12f027358 <col:27, col:34> '<dependent type>' contains-errors lvalue .assoc_id     |     `-RecoveryExpr 0x12f027338 <col:27> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12e9246e8 <line:19:2, line:23:2>     | |-BinaryOperator 0x12e924598 <line:19:6, line:20:24> 'int' contains-errors '&&'     | | |-BinaryOperator 0x12e924528 <line:19:6, col:34> 'int' contains-errors '&&'     | | | |-UnaryOperator 0x12e9244d0 <col:6, col:7> 'int' prefix '!' cannot overflow     | | | | `-ImplicitCastExpr 0x12e9244b8 <col:7> 'struct sctp_association *' <LValueToRValue>     | | | |   `-DeclRefExpr 0x12f0273f0 <col:7> 'struct sctp_association *' lvalue Var 0x12f026a88 'asoc' 'struct sctp_association *'     | | | `-BinaryOperator 0x12e924508 <col:15, col:34> 'int' contains-errors '!='     | | |   |-CXXDependentScopeMemberExpr 0x12f027460 <col:15, col:22> '<dependent type>' contains-errors lvalue .assoc_id     | | |   | `-RecoveryExpr 0x12f027440 <col:15> '<dependent type>' contains-errors lvalue     | | |   `-RecoveryExpr 0x12e9244e8 <col:34> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x12e924568 <line:20:6, col:24> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12f0275e0 <col:6> 'int ()' Function 0x12f027528 'sctp_style' 'int ()'     | |   |-DeclRefExpr 0x12e924400 <col:17> 'struct sock *' lvalue ParmVar 0x12f00e248 'sk' 'struct sock *'     | |   `-RecoveryExpr 0x12e924548 <col:21> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12e9246c8 <col:27, line:23:2>     |   |-BinaryOperator 0x12e924690 <line:21:3, col:13> 'int' contains-errors '='     |   | |-DeclRefExpr 0x12e9245b8 <col:3> 'int' contains-errors lvalue Var 0x12f026b38 'retval' 'int'     |   | `-UnaryOperator 0x12e924678 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x12e924660 <col:13> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x12e924640 <col:13> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x12e9246b0 <line:22:3, col:8> 'out' 0x12f026e30     |-BinaryOperator 0x12e924aa8 <line:25:2, line:26:26> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12e924750 <line:25:2, col:9> '<dependent type>' contains-errors lvalue .assoc_value     | | `-RecoveryExpr 0x12e924728 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12e924708 <col:2> 'struct sctp_assoc_value' lvalue Var 0x12f026888 'params' 'struct sctp_assoc_value'     | `-ConditionalOperator 0x12e924a78 <col:23, line:26:26> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12e924798 <line:25:23> 'struct sctp_association *' lvalue Var 0x12f026a88 'asoc' 'struct sctp_association *'     |   |-CXXDependentScopeMemberExpr 0x12e924818 <col:30, col:41> '<dependent type>' contains-errors lvalue .reconf_capable     |   | `-RecoveryExpr 0x12e9247f0 <col:30, col:36> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x12e9247b8 <col:30> 'struct sctp_association *' lvalue Var 0x12f026a88 'asoc' 'struct sctp_association *'     |   `-CXXDependentScopeMemberExpr 0x12e924a30 <line:26:9, col:26> '<dependent type>' contains-errors lvalue ->reconf_enable     |     `-RecoveryExpr 0x12e924a08 <col:9, col:22> '<dependent type>' contains-errors lvalue     |       `-CallExpr 0x12e9249c8 <col:9, col:19> 'int'     |         |-ImplicitCastExpr 0x12e9249b0 <col:9> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x12e924940 <col:9> 'int ()' Function 0x12e924888 'sctp_sk' 'int ()'     |         `-ImplicitCastExpr 0x12e9249f0 <col:17> 'struct sock *' <LValueToRValue>     |           `-DeclRefExpr 0x12e924960 <col:17> 'struct sock *' lvalue ParmVar 0x12f00e248 'sk' 'struct sock *'     |-IfStmt 0x12e924c98 <line:28:2, line:29:8>     | |-CallExpr 0x12e924c50 <line:28:6, col:26> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x12e924ba8 <col:6> 'int ()' Function 0x12e924af0 'put_user' 'int ()'     | | |-DeclRefExpr 0x12e924bc8 <col:15> 'int' lvalue ParmVar 0x12f00e2c8 'len' 'int'     | | `-RecoveryExpr 0x12e924c30 <col:20> '<dependent type>' contains-errors lvalue     | `-GotoStmt 0x12e924c80 <line:29:3, col:8> 'out' 0x12f026e30     |-IfStmt 0x12e924ed0 <line:31:2, line:32:8>     | |-CallExpr 0x12e924e80 <line:31:6, col:39> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x12e924d98 <col:6> 'int ()' Function 0x12e924ce0 'copy_to_user' 'int ()'     | | |-DeclRefExpr 0x12e924e60 <col:19> 'int' contains-errors lvalue Var 0x12f026b38 'retval' 'int'     | | |-UnaryOperator 0x12e924df0 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | `-RecoveryExpr 0x12e924dd0 <col:28> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12e924e08 <col:36> 'int' lvalue ParmVar 0x12f00e2c8 'len' 'int'     | `-GotoStmt 0x12e924eb8 <line:32:3, col:8> 'out' 0x12f026e30     |-BinaryOperator 0x12e924f30 <line:34:2, col:11> 'int' contains-errors '='     | |-DeclRefExpr 0x12e924ef0 <col:2> 'int' contains-errors lvalue Var 0x12f026b38 'retval' 'int'     | `-IntegerLiteral 0x12e924f10 <col:11> 'int' 0     `-LabelStmt 0x12e924f98 <line:36:1, line:37:9> 'out'       `-ReturnStmt 0x12e924f88 <col:2, col:9>         `-ImplicitCastExpr 0x12e924f70 <col:9> 'int' contains-errors <LValueToRValue>           `-DeclRefExpr 0x12e924f50 <col:9> 'int' contains-errors lvalue Var 0x12f026b38 'retval' 'int' ","20211":"`-FunctionDecl 0x12a90d200  line:1:12 invalid oidc_cache_crypto_encrypt_impl 'int (int *, unsigned char *, int, const unsigned char *, int, unsigned char *, const unsigned char *, int, unsigned char *, const unsigned char *, int)' static   |-ParmVarDecl 0x12a8f3b28 <col:43, col:56> col:56 invalid r 'int *'   |-ParmVarDecl 0x12a8f3bd8 <line:2:3, col:18> col:18 used plaintext 'unsigned char *'   |-ParmVarDecl 0x12a8f3c58 <col:29, col:33> col:33 used plaintext_len 'int'   |-ParmVarDecl 0x12a8f3d08 <col:48, col:69> col:69 used aad 'const unsigned char *'   |-ParmVarDecl 0x12a8f3d88 <line:3:3, col:7> col:7 used aad_len 'int'   |-ParmVarDecl 0x12a8f3e08 <col:16, col:31> col:31 used key 'unsigned char *'   |-ParmVarDecl 0x12a8f3e88 <col:36, col:57> col:57 used iv 'const unsigned char *'   |-ParmVarDecl 0x12a8f3f08 <col:61, col:65> col:65 used iv_len 'int'   |-ParmVarDecl 0x12a8f3f88 <line:4:3, col:18> col:18 used ciphertext 'unsigned char *'   |-ParmVarDecl 0x12a8f4008 <col:30, col:51> col:51 used tag 'const unsigned char *'   |-ParmVarDecl 0x12a8f4088 <col:56, col:60> col:60 used tag_len 'int'   `-CompoundStmt 0x12a910530 <col:69, line:67:1>     |-DeclStmt 0x12a90d398 <line:7:2, col:9>     | `-VarDecl 0x12a90d330 <col:2, col:6> col:6 used len 'int'     |-DeclStmt 0x12a90d430 <line:9:2, col:20>     | `-VarDecl 0x12a90d3c8 <col:2, col:6> col:6 used ciphertext_len 'int'     |-IfStmt 0x12a90d8a8 <line:12:2, line:15:2>     | |-RecoveryExpr 0x12a90d668 <line:12:6, col:34> '_Bool' contains-errors     | `-CompoundStmt 0x12a90d888 <col:37, line:15:2>     |   |-CallExpr 0x12a90d810 <line:13:3, col:43> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12a90d768 <col:3> 'int ()' Function 0x12a90d6b0 'oidc_cache_crypto_openssl_error' 'int ()'     |   | |-RecoveryExpr 0x12a90d788 <col:35> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x12a90d7f0 <col:38> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x12a90d878 <line:14:3, col:11>     |     `-UnaryOperator 0x12a90d860 <col:10, col:11> 'int' prefix '-'     |       `-IntegerLiteral 0x12a90d840 <col:11> 'int' 1     |-IfStmt 0x12a90dc98 <line:18:2, line:21:2>     | |-UnaryOperator 0x12a90db88 <line:18:6, col:66> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x12a90db40 <col:7, col:66> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12a90d9a8 <col:7> 'int ()' Function 0x12a90d8f0 'EVP_EncryptInit_ex' 'int ()'     | |   |-RecoveryExpr 0x12a90daa0 <col:26> '<dependent type>' contains-errors lvalue     | |   |-RecoveryExpr 0x12a90dac0 <col:31> '<dependent type>' contains-errors lvalue     | |   |-RecoveryExpr 0x12a90dae0 <col:50> '<dependent type>' contains-errors lvalue     | |   |-RecoveryExpr 0x12a90db00 <col:56> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x12a90db20 <col:62> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12a90dc78 <col:69, line:21:2>     |   |-CallExpr 0x12a90dc00 <line:19:3, col:43> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12a90dba0 <col:3> 'int ()' Function 0x12a90d6b0 'oidc_cache_crypto_openssl_error' 'int ()'     |   | |-RecoveryExpr 0x12a90dbc0 <col:35> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x12a90dbe0 <col:38> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x12a90dc68 <line:20:3, col:11>     |     `-UnaryOperator 0x12a90dc50 <col:10, col:11> 'int' prefix '-'     |       `-IntegerLiteral 0x12a90dc30 <col:11> 'int' 1     |-IfStmt 0x12a90e028 <line:24:2, line:27:2>     | |-UnaryOperator 0x12a90df18 <line:24:6, col:73> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x12a90ded8 <col:7, col:73> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12a90dd98 <col:7> 'int ()' Function 0x12a90dce0 'EVP_CIPHER_CTX_ctrl' 'int ()'     | |   |-RecoveryExpr 0x12a90de78 <col:27> '<dependent type>' contains-errors lvalue     | |   |-RecoveryExpr 0x12a90de98 <col:32> '<dependent type>' contains-errors lvalue     | |   |-DeclRefExpr 0x12a90dde8 <col:61> 'int' lvalue ParmVar 0x12a8f3f08 'iv_len' 'int'     | |   `-RecoveryExpr 0x12a90deb8 <col:69> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12a90e008 <col:76, line:27:2>     |   |-CallExpr 0x12a90df90 <line:25:3, col:43> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12a90df30 <col:3> 'int ()' Function 0x12a90d6b0 'oidc_cache_crypto_openssl_error' 'int ()'     |   | |-RecoveryExpr 0x12a90df50 <col:35> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x12a90df70 <col:38> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x12a90dff8 <line:26:3, col:11>     |     `-UnaryOperator 0x12a90dfe0 <col:10, col:11> 'int' prefix '-'     |       `-IntegerLiteral 0x12a90dfc0 <col:11> 'int' 1     |-IfStmt 0x12a90f910 <line:30:2, line:33:2>     | |-UnaryOperator 0x12a90f800 <line:30:6, col:50> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x12a90e1b0 <col:7, col:50> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12a90e048 <col:7> 'int ()' Function 0x12a90d8f0 'EVP_EncryptInit_ex' 'int ()'     | |   |-RecoveryExpr 0x12a90e150 <col:26> '<dependent type>' contains-errors lvalue     | |   |-RecoveryExpr 0x12a90e170 <col:31> '<dependent type>' contains-errors lvalue     | |   |-RecoveryExpr 0x12a90e190 <col:37> '<dependent type>' contains-errors lvalue     | |   |-DeclRefExpr 0x12a90e0b0 <col:43> 'unsigned char *' lvalue ParmVar 0x12a8f3e08 'key' 'unsigned char *'     | |   `-DeclRefExpr 0x12a90e0d0 <col:48> 'const unsigned char *' lvalue ParmVar 0x12a8f3e88 'iv' 'const unsigned char *'     | `-CompoundStmt 0x12a90f8f0 <col:53, line:33:2>     |   |-CallExpr 0x12a90f878 <line:31:3, col:43> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12a90f818 <col:3> 'int ()' Function 0x12a90d6b0 'oidc_cache_crypto_openssl_error' 'int ()'     |   | |-RecoveryExpr 0x12a90f838 <col:35> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x12a90f858 <col:38> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x12a90f8e0 <line:32:3, col:11>     |     `-UnaryOperator 0x12a90f8c8 <col:10, col:11> 'int' prefix '-'     |       `-IntegerLiteral 0x12a90f8a8 <col:11> 'int' 1     |-IfStmt 0x12a90fbe8 <line:36:2, line:40:2>     | |-RecoveryExpr 0x12a90faa8 <line:36:6, col:54> '_Bool' contains-errors     | `-CompoundStmt 0x12a90fbc8 <col:57, line:40:2>     |   |-CallExpr 0x12a90fb48 <line:37:3, line:38:12> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12a90fac8 <line:37:3> 'int ()' Function 0x12a90d6b0 'oidc_cache_crypto_openssl_error' 'int ()'     |   | |-RecoveryExpr 0x12a90fae8 <col:35> '<dependent type>' contains-errors lvalue     |   | |-StringLiteral 0x12a90fb08 <col:38> 'char[4]' lvalue \"STR\"     |   | `-DeclRefExpr 0x12a90fb28 <line:38:5> 'int' lvalue ParmVar 0x12a8f3d88 'aad_len' 'int'     |   `-ReturnStmt 0x12a90fbb8 <line:39:3, col:11>     |     `-UnaryOperator 0x12a90fba0 <col:10, col:11> 'int' prefix '-'     |       `-IntegerLiteral 0x12a90fb80 <col:11> 'int' 1     |-IfStmt 0x12a90fdd8 <line:43:2, line:46:2>     | |-RecoveryExpr 0x12a90fcc0 <line:43:6, col:72> '_Bool' contains-errors     | `-CompoundStmt 0x12a90fdb8 <col:75, line:46:2>     |   |-CallExpr 0x12a90fd40 <line:44:3, col:43> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12a90fce0 <col:3> 'int ()' Function 0x12a90d6b0 'oidc_cache_crypto_openssl_error' 'int ()'     |   | |-RecoveryExpr 0x12a90fd00 <col:35> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x12a90fd20 <col:38> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x12a90fda8 <line:45:3, col:11>     |     `-UnaryOperator 0x12a90fd90 <col:10, col:11> 'int' prefix '-'     |       `-IntegerLiteral 0x12a90fd70 <col:11> 'int' 1     |-BinaryOperator 0x12a90fe50 <line:47:2, col:19> 'int' '='     | |-DeclRefExpr 0x12a90fdf8 <col:2> 'int' lvalue Var 0x12a90d3c8 'ciphertext_len' 'int'     | `-ImplicitCastExpr 0x12a90fe38 <col:19> 'int' <LValueToRValue>     |   `-DeclRefExpr 0x12a90fe18 <col:19> 'int' lvalue Var 0x12a90d330 'len' 'int'     |-IfStmt 0x12a910150 <line:50:2, line:53:2>     | |-RecoveryExpr 0x12a910038 <line:50:6, col:54> '_Bool' contains-errors     | `-CompoundStmt 0x12a910130 <col:57, line:53:2>     |   |-CallExpr 0x12a9100b8 <line:51:3, col:43> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12a910058 <col:3> 'int ()' Function 0x12a90d6b0 'oidc_cache_crypto_openssl_error' 'int ()'     |   | |-RecoveryExpr 0x12a910078 <col:35> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x12a910098 <col:38> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x12a910120 <line:52:3, col:11>     |     `-UnaryOperator 0x12a910108 <col:10, col:11> 'int' prefix '-'     |       `-IntegerLiteral 0x12a9100e8 <col:11> 'int' 1     |-CompoundAssignOperator 0x12a9101c8 <line:54:2, col:20> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'     | |-DeclRefExpr 0x12a910170 <col:2> 'int' lvalue Var 0x12a90d3c8 'ciphertext_len' 'int'     | `-ImplicitCastExpr 0x12a9101b0 <col:20> 'int' <LValueToRValue>     |   `-DeclRefExpr 0x12a910190 <col:20> 'int' lvalue Var 0x12a90d330 'len' 'int'     |-IfStmt 0x12a9103c8 <line:57:2, line:61:2>     | |-RecoveryExpr 0x12a9102b0 <line:57:6, line:58:16> '_Bool' contains-errors     | `-CompoundStmt 0x12a9103a8 <col:19, line:61:2>     |   |-CallExpr 0x12a910330 <line:59:3, col:43> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12a9102d0 <col:3> 'int ()' Function 0x12a90d6b0 'oidc_cache_crypto_openssl_error' 'int ()'     |   | |-RecoveryExpr 0x12a9102f0 <col:35> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x12a910310 <col:38> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x12a910398 <line:60:3, col:11>     |     `-UnaryOperator 0x12a910380 <col:10, col:11> 'int' prefix '-'     |       `-IntegerLiteral 0x12a910360 <col:11> 'int' 1     `-ReturnStmt 0x12a910520 <line:66:2, col:9>       `-ImplicitCastExpr 0x12a910508 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x12a9104e8 <col:9> 'int' lvalue Var 0x12a90d3c8 'ciphertext_len' 'int' ","20368":"`-FunctionDecl 0x15500df58  line:1:1 invalid stdmac_ptr 'int (const int *, int **, int)'   |-ParmVarDecl 0x15500dcf0 <col:12, col:26> col:26 invalid s 'const int *'   |-ParmVarDecl 0x15500dde0 <col:29, col:37> col:37 invalid params 'int **'   |-ParmVarDecl 0x15500de60 <col:45, col:49> col:49 used nparams 'int'   `-CompoundStmt 0x155029458 <line:2:1, line:17:1>     |-CStyleCastExpr 0x15500e060 <line:3:5, col:11> 'void' contains-errors <ToVoid>     | `-ImplicitCastExpr 0x15500e048 <col:11> '<dependent type>' contains-errors <LValueToRValue> part_of_explicit_cast     |   `-RecoveryExpr 0x15500e018 <col:11> '<dependent type>' contains-errors lvalue     |-CStyleCastExpr 0x15500e0d0 <line:4:5, col:11> 'void' contains-errors <ToVoid>     | `-ImplicitCastExpr 0x15500e0b8 <col:11> '<dependent type>' contains-errors <LValueToRValue> part_of_explicit_cast     |   `-RecoveryExpr 0x15500e088 <col:11> '<dependent type>' contains-errors lvalue     |-CStyleCastExpr 0x15500e140 <line:5:5, col:11> 'void' <ToVoid>     | `-ImplicitCastExpr 0x15500e128 <col:11> 'int' <LValueToRValue> part_of_explicit_cast     |   `-DeclRefExpr 0x15500e0f8 <col:11> 'int' lvalue ParmVar 0x15500de60 'nparams' 'int'     `-SwitchStmt 0x15500e1b8 <line:7:5, line:16:5>       |-RecoveryExpr 0x15500e198 <line:7:13> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x155029428 <col:25, line:16:5>         |-CaseStmt 0x15500e200 <line:8:5, line:9:41>         | |-IntegerLiteral 0x15500e1e0 <line:8:10> 'int' 16         | `-ReturnStmt 0x155028f40 <line:9:2, col:41>         |   `-CallExpr 0x155028f00 <col:9, col:41> '<dependent type>' contains-errors         |     |-DeclRefExpr 0x15500e380 <col:9> 'int ()' Function 0x15500e2c8 'new_Token' 'int ()'         |     |-RecoveryExpr 0x155028ec0 <col:19> '<dependent type>' contains-errors lvalue         |     |-RecoveryExpr 0x155028ee0 <col:25> '<dependent type>' contains-errors lvalue         |     |-StringLiteral 0x155028e40 <col:33> 'char[4]' lvalue \"STR\"         |     `-IntegerLiteral 0x155028e60 <col:40> 'int' 4         |-CaseStmt 0x155028f70 <line:10:5, line:11:41>         | |-IntegerLiteral 0x155028f50 <line:10:10> 'int' 32         | `-ReturnStmt 0x1550290e8 <line:11:2, col:41>         |   `-CallExpr 0x1550290a8 <col:9, col:41> '<dependent type>' contains-errors         |     |-DeclRefExpr 0x155028f98 <col:9> 'int ()' Function 0x15500e2c8 'new_Token' 'int ()'         |     |-RecoveryExpr 0x155029068 <col:19> '<dependent type>' contains-errors lvalue         |     |-RecoveryExpr 0x155029088 <col:25> '<dependent type>' contains-errors lvalue         |     |-StringLiteral 0x155028fe8 <col:33> 'char[4]' lvalue \"STR\"         |     `-IntegerLiteral 0x155029008 <col:40> 'int' 5         |-CaseStmt 0x155029118 <line:12:5, line:13:41>         | |-IntegerLiteral 0x1550290f8 <line:12:10> 'int' 64         | `-ReturnStmt 0x155029290 <line:13:2, col:41>         |   `-CallExpr 0x155029250 <col:9, col:41> '<dependent type>' contains-errors         |     |-DeclRefExpr 0x155029140 <col:9> 'int ()' Function 0x15500e2c8 'new_Token' 'int ()'         |     |-RecoveryExpr 0x155029210 <col:19> '<dependent type>' contains-errors lvalue         |     |-RecoveryExpr 0x155029230 <col:25> '<dependent type>' contains-errors lvalue         |     |-StringLiteral 0x155029190 <col:33> 'char[4]' lvalue \"STR\"         |     `-IntegerLiteral 0x1550291b0 <col:40> 'int' 5         `-DefaultStmt 0x155029408 <line:14:5, line:15:15>           `-CallExpr 0x1550293e8 <col:9, col:15> 'int'             `-ImplicitCastExpr 0x1550293d0 <col:9> 'int (*)()' <FunctionToPointerDecay>               `-DeclRefExpr 0x155029380 <col:9> 'int ()' Function 0x1550292c8 'panic' 'int ()' ","20291":"`-FunctionDecl 0x120128438  line:1:20 invalid get_name 'int (int, const int *, const int *, const int *, int *)' static   |-ParmVarDecl 0x1201280f0 <col:29, col:33> col:33 used rec_counter 'int'   |-ParmVarDecl 0x120128170 <col:46, col:64> col:64 invalid pkt 'const int *'   |-ParmVarDecl 0x1201281f0 <line:2:8, col:26> col:26 invalid start 'const int *'   |-ParmVarDecl 0x120128270 <col:33, col:51> col:51 invalid max 'const int *'   |-ParmVarDecl 0x120128328 <line:3:8, col:18> col:18 referenced invalid name 'int *'   `-CompoundStmt 0x108008340 <line:4:1, line:57:1>     |-DeclStmt 0x120128588 <line:5:5, col:24>     | `-VarDecl 0x120128520 <col:5, col:23> col:23 referenced invalid p 'const int *'     |-IfStmt 0x120128678 <line:9:5, line:12:5>     | |-BinaryOperator 0x1201285f8 <line:9:9, col:23> 'int' '>'     | | |-ImplicitCastExpr 0x1201285e0 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x1201285a0 <col:9> 'int' lvalue ParmVar 0x1201280f0 'rec_counter' 'int'     | | `-IntegerLiteral 0x1201285c0 <col:23> 'int' 10     | `-CompoundStmt 0x120128660 <col:27, line:12:5>     |   `-ReturnStmt 0x120128650 <line:11:2, col:9>     |     `-RecoveryExpr 0x120128630 <col:9> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x120128700 <line:14:5, col:9> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1201286b8 <col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x120128698 <col:5> 'const int *' lvalue Var 0x120128520 'p' 'const int *'     | `-RecoveryExpr 0x1201286e0 <col:9> '<dependent type>' contains-errors lvalue     `-WhileStmt 0x108008320 <line:15:5, line:54:5>       |-UnaryOperator 0x120128758 <line:15:12, col:13> '<dependent type>' contains-errors prefix '*' cannot overflow       | `-ImplicitCastExpr 0x120128740 <col:13> '<dependent type>' contains-errors <LValueToRValue>       |   `-RecoveryExpr 0x120128720 <col:13> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x108008308 <col:16, line:54:5>         `-IfStmt 0x1080082d8 <line:16:2, line:53:2> has_else           |-BinaryOperator 0x107809c40 <line:16:6, col:21> 'int' contains-errors '=='           | |-ParenExpr 0x107809c00 <col:6, col:16> '<dependent type>' contains-errors           | | `-BinaryOperator 0x1201287e0 <col:7, col:12> '<dependent type>' contains-errors '&'           | |   |-UnaryOperator 0x1201287a8 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow           | |   | `-ImplicitCastExpr 0x120128790 <col:8> '<dependent type>' contains-errors <LValueToRValue>           | |   |   `-RecoveryExpr 0x120128770 <col:8> '<dependent type>' contains-errors lvalue           | |   `-IntegerLiteral 0x1201287c0 <col:12> 'int' 192           | `-IntegerLiteral 0x107809c20 <col:21> 'int' 192           |-CompoundStmt 0x10780a428 <col:27, line:35:2>           | |-CallExpr 0x107809ec0 <line:21:6, col:29> '<dependent type>' contains-errors           | | |-DeclRefExpr 0x107809dc0 <col:6> 'int ()' Function 0x107809d08 'pj_memcpy' 'int ()'           | | |-UnaryOperator 0x107809ea8 <col:16, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow           | | | `-RecoveryExpr 0x107809e88 <col:17> '<dependent type>' contains-errors lvalue           | | |-RecoveryExpr 0x107809e10 <col:25> '<dependent type>' contains-errors lvalue           | | `-IntegerLiteral 0x107809e30 <col:28> 'int' 2           | `-IfStmt 0x10780a2d0 <line:26:6, line:27:10>           |   |-BinaryOperator 0x10780a268 <line:26:10, col:26> 'int' contains-errors '>='           |   | |-RecoveryExpr 0x10780a248 <col:10> '<dependent type>' contains-errors lvalue           |   | `-BinaryOperator 0x10780a208 <col:20, col:26> '<dependent type>' contains-errors '-'           |   |   |-RecoveryExpr 0x10780a1c8 <col:20> '<dependent type>' contains-errors lvalue           |   |   `-RecoveryExpr 0x10780a1e8 <col:26> '<dependent type>' contains-errors lvalue           |   `-ReturnStmt 0x10780a2c0 <line:27:3, col:10>           |     `-RecoveryExpr 0x10780a2a0 <col:10> '<dependent type>' contains-errors lvalue           `-CompoundStmt 0x1080082a0 <line:35:9, line:53:2>             |-DeclStmt 0x10780a518 <line:36:6, col:29>             | `-VarDecl 0x10780a460 <col:6, col:28> col:15 used label_len 'unsigned int' cinit             |   `-UnaryOperator 0x10780a500 <col:27, col:28> '<dependent type>' contains-errors prefix '*' cannot overflow             |     `-ImplicitCastExpr 0x10780a4e8 <col:28> '<dependent type>' contains-errors <LValueToRValue>             |       `-RecoveryExpr 0x10780a4c8 <col:28> '<dependent type>' contains-errors lvalue             |-CallExpr 0x10780a760 <line:42:6, col:54> '<dependent type>' contains-errors             | |-DeclRefExpr 0x10780a5d0 <col:6> 'int ()' Function 0x107809d08 'pj_memcpy' 'int ()'             | |-BinaryOperator 0x10780a6c0 <col:16, col:34> '<dependent type>' contains-errors '+'             | | |-CXXDependentScopeMemberExpr 0x10780a610 <col:16, col:22> '<dependent type>' contains-errors lvalue ->ptr             | | | `-RecoveryExpr 0x10780a5f0 <col:16> '<dependent type>' contains-errors lvalue             | | `-CXXDependentScopeMemberExpr 0x10780a678 <col:28, col:34> '<dependent type>' contains-errors lvalue ->slen             | |   `-RecoveryExpr 0x10780a658 <col:28> '<dependent type>' contains-errors lvalue             | |-BinaryOperator 0x10780a720 <col:40, col:42> '<dependent type>' contains-errors '+'             | | |-RecoveryExpr 0x10780a6e0 <col:40> '<dependent type>' contains-errors lvalue             | | `-IntegerLiteral 0x10780a700 <col:42> 'int' 1             | `-DeclRefExpr 0x10780a740 <col:45> 'unsigned int' contains-errors lvalue Var 0x10780a460 'label_len' 'unsigned int'             |-CompoundAssignOperator 0x10780a848 <line:43:6, col:20> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'             | |-CXXDependentScopeMemberExpr 0x10780a7e0 <col:6, col:12> '<dependent type>' contains-errors lvalue ->slen             | | `-RecoveryExpr 0x10780a7b8 <col:6> '<dependent type>' contains-errors lvalue             | |   `-DeclRefExpr 0x10780a798 <col:6> 'int *' lvalue ParmVar 0x120128328 'name' 'int *'             | `-DeclRefExpr 0x10780a828 <col:20> 'unsigned int' contains-errors lvalue Var 0x10780a460 'label_len' 'unsigned int'             |-CompoundAssignOperator 0x10780a950 <line:45:6, col:23> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'             | |-RecoveryExpr 0x10780a898 <col:6> '<dependent type>' contains-errors lvalue             | | `-DeclRefExpr 0x10780a878 <col:6> 'const int *' lvalue Var 0x120128520 'p' 'const int *'             | `-BinaryOperator 0x10780a930 <col:11, col:23> 'unsigned int' contains-errors '+'             |   |-ImplicitCastExpr 0x10780a900 <col:11> 'unsigned int' contains-errors <LValueToRValue>             |   | `-DeclRefExpr 0x10780a8c0 <col:11> 'unsigned int' contains-errors lvalue Var 0x10780a460 'label_len' 'unsigned int'             |   `-ImplicitCastExpr 0x10780a918 <col:23> 'unsigned int' <IntegralCast>             |     `-IntegerLiteral 0x10780a8e0 <col:23> 'int' 1             `-IfStmt 0x108008220 <line:46:6, line:49:6>               |-BinaryOperator 0x10780a9f0 <line:46:10, col:16> 'int' contains-errors '!='               | |-UnaryOperator 0x10780a9b8 <col:10, col:11> '<dependent type>' contains-errors prefix '*' cannot overflow               | | `-ImplicitCastExpr 0x10780a9a0 <col:11> '<dependent type>' contains-errors <LValueToRValue>               | |   `-RecoveryExpr 0x10780a980 <col:11> '<dependent type>' contains-errors lvalue               | `-IntegerLiteral 0x10780a9d0 <col:16> 'int' 0               `-CompoundStmt 0x108008200 <col:19, line:49:6>                 |-BinaryOperator 0x10780ab50 <line:47:3, col:31> '<dependent type>' contains-errors '='                 | |-UnaryOperator 0x10780ab20 <col:3, col:27> '<dependent type>' contains-errors prefix '*' cannot overflow                 | | `-ParenExpr 0x10780ab00 <col:4, col:27> '<dependent type>' contains-errors                 | |   `-BinaryOperator 0x10780aae0 <col:5, col:23> '<dependent type>' contains-errors '+'                 | |     |-CXXDependentScopeMemberExpr 0x10780aa30 <col:5, col:11> '<dependent type>' contains-errors lvalue ->ptr                 | |     | `-RecoveryExpr 0x10780aa10 <col:5> '<dependent type>' contains-errors lvalue                 | |     `-CXXDependentScopeMemberExpr 0x10780aa98 <col:17, col:23> '<dependent type>' contains-errors lvalue ->slen                 | |       `-RecoveryExpr 0x10780aa78 <col:17> '<dependent type>' contains-errors lvalue                 | `-CharacterLiteral 0x10780ab38 <col:31> 'int' 46                 `-UnaryOperator 0x10780abd8 <line:48:3, col:11> '<dependent type>' contains-errors prefix '++' cannot overflow                   `-CXXDependentScopeMemberExpr 0x10780ab90 <col:5, col:11> '<dependent type>' contains-errors lvalue ->slen                     `-RecoveryExpr 0x10780ab70 <col:5> '<dependent type>' contains-errors lvalue ","21032":"`-FunctionDecl 0x13a141838  line:1:1 invalid vg_resource_attach_backing 'int (int *, struct virtio_gpu_ctrl_command *)'   |-ParmVarDecl 0x13a128128 <col:28, col:35> col:35 invalid g 'int *'   |-ParmVarDecl 0x13a128718 <line:2:28, col:60> col:60 used cmd 'struct virtio_gpu_ctrl_command *'   `-CompoundStmt 0x13a142d88 <line:3:1, line:31:1>     |-DeclStmt 0x13a141ad8 <line:4:5, col:43>     | |-RecordDecl 0x13a1418f0 <col:5, col:12> col:12 struct virtio_gpu_simple_resource     | `-VarDecl 0x13a141a58 <col:5, col:40> col:40 used res 'struct virtio_gpu_simple_resource *'     |-DeclStmt 0x13a141c68 <line:5:5, col:49>     | |-RecordDecl 0x13a141af0 <col:5, col:12> col:12 struct virtio_gpu_resource_attach_backing     | `-VarDecl 0x13a141be8 <col:5, col:47> col:47 invalid ab 'struct virtio_gpu_resource_attach_backing'     |-DeclStmt 0x13a141d00 <line:6:5, col:12>     | `-VarDecl 0x13a141c98 <col:5, col:9> col:9 used ret 'int'     |-CallExpr 0x13a141eb0 <line:8:5, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13a141e70 <col:5> 'int ()' Function 0x13a141db8 'VUGPU_FILL_CMD' 'int ()'     | `-RecoveryExpr 0x13a141e90 <col:20> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13a142070 <line:9:5, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13a141fb8 <col:5> 'int ()' Function 0x13a141f00 'virtio_gpu_bswap_32' 'int ()'     | |-UnaryOperator 0x13a141ff8 <col:25, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x13a141fd8 <col:26> '<dependent type>' contains-errors lvalue     | `-UnaryExprOrTypeTraitExpr 0x13a142050 <col:30, col:39> 'unsigned long' contains-errors sizeof     |   `-ParenExpr 0x13a142030 <col:36, col:39> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x13a142010 <col:37> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13a142278 <line:11:5, col:53> 'struct virtio_gpu_simple_resource *' contains-errors '='     | |-DeclRefExpr 0x13a1420a0 <col:5> 'struct virtio_gpu_simple_resource *' lvalue Var 0x13a141a58 'res' 'struct virtio_gpu_simple_resource *'     | `-CallExpr 0x13a142248 <col:11, col:53> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13a1421a0 <col:11> 'int ()' Function 0x13a1420e8 'virtio_gpu_find_resource' 'int ()'     |   |-RecoveryExpr 0x13a1421c0 <col:36> '<dependent type>' contains-errors lvalue     |   `-CXXDependentScopeMemberExpr 0x13a142200 <col:39, col:42> '<dependent type>' contains-errors lvalue .resource_id     |     `-RecoveryExpr 0x13a1421e0 <col:39> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13a1426d0 <line:12:5, line:17:5>     | |-UnaryOperator 0x13a1422d0 <line:12:9, col:10> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13a1422b8 <col:10> 'struct virtio_gpu_simple_resource *' <LValueToRValue>     | |   `-DeclRefExpr 0x13a142298 <col:10> 'struct virtio_gpu_simple_resource *' lvalue Var 0x13a141a58 'res' 'struct virtio_gpu_simple_resource *'     | `-CompoundStmt 0x13a1426a8 <col:15, line:17:5>     |   |-CallExpr 0x13a142588 <line:13:9, line:14:44> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13a1423c8 <line:13:9> 'int ()' Function 0x13a142310 'g_critical' 'int ()'     |   | |-StringLiteral 0x13a142430 <col:20> 'char[4]' lvalue \"STR\"     |   | |-PredefinedExpr 0x13a142508 <line:14:20> 'const char[27]' lvalue __func__     |   | | `-StringLiteral 0x13a1424d0 <col:20> 'const char[27]' lvalue \"vg_resource_attach_backing\"     |   | `-CXXDependentScopeMemberExpr 0x13a142540 <col:30, col:33> '<dependent type>' contains-errors lvalue .resource_id     |   |   `-RecoveryExpr 0x13a142520 <col:30> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x13a142678 <line:15:9, col:22> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x13a1425f8 <col:9, col:14> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x13a1425c0 <col:9> 'struct virtio_gpu_ctrl_command *' lvalue ParmVar 0x13a128718 'cmd' 'struct virtio_gpu_ctrl_command *'     |   | `-RecoveryExpr 0x13a142658 <col:22> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x13a142698 <line:16:9>     |-IfStmt 0x13a142870 <line:19:5, line:22:5>     | |-RecoveryExpr 0x13a142728 <line:19:9, col:14> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13a1426f0 <col:9> 'struct virtio_gpu_simple_resource *' lvalue Var 0x13a141a58 'res' 'struct virtio_gpu_simple_resource *'     | `-CompoundStmt 0x13a142850 <col:19, line:22:5>     |   |-BinaryOperator 0x13a142820 <line:20:9, col:22> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x13a142788 <col:9, col:14> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x13a142750 <col:9> 'struct virtio_gpu_ctrl_command *' lvalue ParmVar 0x13a128718 'cmd' 'struct virtio_gpu_ctrl_command *'     |   | `-RecoveryExpr 0x13a142800 <col:22> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x13a142840 <line:21:9>     |-BinaryOperator 0x13a142ae0 <line:24:5, col:55> 'int' contains-errors '='     | |-DeclRefExpr 0x13a142890 <col:5> 'int' lvalue Var 0x13a141c98 'ret' 'int'     | `-CallExpr 0x13a142aa0 <col:11, col:55> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13a142990 <col:11> 'int ()' Function 0x13a1428d8 'vg_create_mapping_iov' 'int ()'     |   |-RecoveryExpr 0x13a1429b0 <col:33> '<dependent type>' contains-errors lvalue     |   |-UnaryOperator 0x13a1429f0 <col:36, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x13a1429d0 <col:37> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x13a142a08 <col:41> 'struct virtio_gpu_ctrl_command *' lvalue ParmVar 0x13a128718 'cmd' 'struct virtio_gpu_ctrl_command *'     |   `-UnaryOperator 0x13a142a88 <col:46, col:52> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x13a142a60 <col:47, col:52> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13a142a28 <col:47> 'struct virtio_gpu_simple_resource *' lvalue Var 0x13a141a58 'res' 'struct virtio_gpu_simple_resource *'     |-IfStmt 0x13a142c80 <line:25:5, line:28:5>     | |-BinaryOperator 0x13a142b58 <line:25:9, col:16> 'int' '!='     | | |-ImplicitCastExpr 0x13a142b40 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x13a142b00 <col:9> 'int' lvalue Var 0x13a141c98 'ret' 'int'     | | `-IntegerLiteral 0x13a142b20 <col:16> 'int' 0     | `-CompoundStmt 0x13a142c60 <col:19, line:28:5>     |   |-BinaryOperator 0x13a142c30 <line:26:9, col:22> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x13a142bb0 <col:9, col:14> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x13a142b78 <col:9> 'struct virtio_gpu_ctrl_command *' lvalue ParmVar 0x13a128718 'cmd' 'struct virtio_gpu_ctrl_command *'     |   | `-RecoveryExpr 0x13a142c10 <col:22> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x13a142c50 <line:27:9>     `-BinaryOperator 0x13a142d68 <line:30:5, col:23> '<dependent type>' contains-errors '='       |-RecoveryExpr 0x13a142cd8 <col:5, col:10> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x13a142ca0 <col:5> 'struct virtio_gpu_simple_resource *' lvalue Var 0x13a141a58 'res' 'struct virtio_gpu_simple_resource *'       `-CXXDependentScopeMemberExpr 0x13a142d20 <col:20, col:23> '<dependent type>' contains-errors lvalue .nr_entries         `-RecoveryExpr 0x13a142d00 <col:20> '<dependent type>' contains-errors lvalue ","20560":"`-FunctionDecl 0x12f922938  line:1:19 invalid check_pmd_range 'int (struct vm_area_struct *, int *, unsigned long, unsigned long, const int *, unsigned long, void *)' static inline   |-ParmVarDecl 0x13800e248 <col:35, col:58> col:58 used vma 'struct vm_area_struct *'   |-ParmVarDecl 0x13800e318 <col:63, col:70> col:70 referenced invalid pud 'int *'   |-ParmVarDecl 0x13800e398 <line:2:3, col:17> col:17 used addr 'unsigned long'   |-ParmVarDecl 0x12f922618 <col:23, col:37> col:37 used end 'unsigned long'   |-ParmVarDecl 0x12f922698 <line:3:3, col:21> col:21 invalid nodes 'const int *'   |-ParmVarDecl 0x12f922718 <col:28, col:42> col:42 used flags 'unsigned long'   |-ParmVarDecl 0x12f922798 <line:4:3, col:9> col:9 used private 'void *'   `-CompoundStmt 0x138027038 <line:5:1, line:20:1>     |-DeclStmt 0x12f922ad0 <line:7:2, col:20>     | `-VarDecl 0x12f922a68 <col:2, col:16> col:16 used next 'unsigned long'     |-BinaryOperator 0x12f922d20 <line:9:2, col:28> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12f922b08 <col:2> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12f922ae8 <col:2> 'int *' lvalue ParmVar 0x13800e318 'pud' 'int *'     | `-CallExpr 0x12f922cf0 <col:8, col:28> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12f922c90 <col:8> 'int ()' Function 0x12f922bd8 'pmd_offset' 'int ()'     |   |-RecoveryExpr 0x12f922cb0 <col:19> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12f922cd0 <col:24> 'unsigned long' lvalue ParmVar 0x13800e398 'addr' 'unsigned long'     |-DoStmt 0x138026fe8 <line:10:2, line:18:42>     | |-CompoundStmt 0x138026d20 <line:10:5, line:18:2>     | | |-BinaryOperator 0x12f922f60 <line:11:3, col:32> 'unsigned long' '='     | | | |-DeclRefExpr 0x12f922d40 <col:3> 'unsigned long' lvalue Var 0x12f922a68 'next' 'unsigned long'     | | | `-ImplicitCastExpr 0x12f922f48 <col:10, col:32> 'unsigned long' <IntegralCast>     | | |   `-CallExpr 0x12f922ee8 <col:10, col:32> 'int'     | | |     |-ImplicitCastExpr 0x12f922ed0 <col:10> 'int (*)()' <FunctionToPointerDecay>     | | |     | `-DeclRefExpr 0x12f922e40 <col:10> 'int ()' Function 0x12f922d88 'pmd_addr_end' 'int ()'     | | |     |-ImplicitCastExpr 0x12f922f18 <col:23> 'unsigned long' <LValueToRValue>     | | |     | `-DeclRefExpr 0x12f922e60 <col:23> 'unsigned long' lvalue ParmVar 0x13800e398 'addr' 'unsigned long'     | | |     `-ImplicitCastExpr 0x12f922f30 <col:29> 'unsigned long' <LValueToRValue>     | | |       `-DeclRefExpr 0x12f922e80 <col:29> 'unsigned long' lvalue ParmVar 0x12f922618 'end' 'unsigned long'     | | |-CallExpr 0x12f923168 <line:12:3, col:38> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x12f923060 <col:3> 'int ()' Function 0x12f922fa8 'split_huge_page_pmd' 'int ()'     | | | |-RecoveryExpr 0x12f9230b8 <col:23, col:28> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x12f923080 <col:23> 'struct vm_area_struct *' lvalue ParmVar 0x13800e248 'vma' 'struct vm_area_struct *'     | | | `-RecoveryExpr 0x12f923148 <col:35> '<dependent type>' contains-errors lvalue     | | |-IfStmt 0x12f923348 <line:13:3, line:14:4>     | | | |-CallExpr 0x12f923318 <line:13:7, col:32> '<dependent type>' contains-errors     | | | | |-DeclRefExpr 0x12f923278 <col:7> 'int ()' Function 0x12f9231c0 'pmd_none_or_clear_bad' 'int ()'     | | | | `-RecoveryExpr 0x12f9232f8 <col:29> '<dependent type>' contains-errors lvalue     | | | `-ContinueStmt 0x12f923340 <line:14:4>     | | `-IfStmt 0x138026d00 <line:15:3, line:17:12>     | |   |-CallExpr 0x138026c00 <line:15:7, line:16:23> '<dependent type>' contains-errors     | |   | |-DeclRefExpr 0x12f923448 <line:15:7> 'int ()' Function 0x12f923390 'check_pte_range' 'int ()'     | |   | |-DeclRefExpr 0x12f923468 <col:23> 'struct vm_area_struct *' lvalue ParmVar 0x13800e248 'vma' 'struct vm_area_struct *'     | |   | |-RecoveryExpr 0x12f9235b8 <col:28> '<dependent type>' contains-errors lvalue     | |   | |-DeclRefExpr 0x12f9234a0 <col:33> 'unsigned long' lvalue ParmVar 0x13800e398 'addr' 'unsigned long'     | |   | |-DeclRefExpr 0x12f9234c0 <col:39> 'unsigned long' lvalue Var 0x12f922a68 'next' 'unsigned long'     | |   | |-RecoveryExpr 0x12f9234e0 <col:45> '<dependent type>' contains-errors lvalue     | |   | |-DeclRefExpr 0x12f923500 <line:16:9> 'unsigned long' lvalue ParmVar 0x12f922718 'flags' 'unsigned long'     | |   | `-DeclRefExpr 0x12f923520 <col:16> 'void *' lvalue ParmVar 0x12f922798 'private' 'void *'     | |   `-ReturnStmt 0x138026cf0 <line:17:4, col:12>     | |     `-UnaryOperator 0x138026cd8 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     | |       `-ImplicitCastExpr 0x138026cc0 <col:12> '<dependent type>' contains-errors <LValueToRValue>     | |         `-RecoveryExpr 0x138026ca0 <col:12> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x138026fc8 <line:18:11, col:39> 'int' contains-errors ','     |   |-BinaryOperator 0x138026f58 <col:11, col:25> 'unsigned long' contains-errors ','     |   | |-UnaryOperator 0x138026f08 <col:11, col:14> '<dependent type>' contains-errors postfix '++' cannot overflow     |   | | `-RecoveryExpr 0x138026ee8 <col:11> '<dependent type>' contains-errors lvalue     |   | `-BinaryOperator 0x138026f38 <col:18, col:25> 'unsigned long' '='     |   |   |-DeclRefExpr 0x138026d80 <col:18> 'unsigned long' lvalue ParmVar 0x13800e398 'addr' 'unsigned long'     |   |   `-ImplicitCastExpr 0x138026f20 <col:25> 'unsigned long' <LValueToRValue>     |   |     `-DeclRefExpr 0x138026da0 <col:25> 'unsigned long' lvalue Var 0x12f922a68 'next' 'unsigned long'     |   `-BinaryOperator 0x138026fa8 <col:31, col:39> 'int' '!='     |     |-ImplicitCastExpr 0x138026f78 <col:31> 'unsigned long' <LValueToRValue>     |     | `-DeclRefExpr 0x138026e18 <col:31> 'unsigned long' lvalue ParmVar 0x13800e398 'addr' 'unsigned long'     |     `-ImplicitCastExpr 0x138026f90 <col:39> 'unsigned long' <LValueToRValue>     |       `-DeclRefExpr 0x138026e38 <col:39> 'unsigned long' lvalue ParmVar 0x12f922618 'end' 'unsigned long'     `-ReturnStmt 0x138027028 <line:19:2, col:9>       `-IntegerLiteral 0x138027008 <col:9> 'int' 0 ","20683":"`-FunctionDecl 0x129144c00  line:1:12 cap_file_permission 'int (struct file *, int)' static   |-ParmVarDecl 0x129128648 <col:32, col:45> col:45 file 'struct file *'   |-ParmVarDecl 0x1291286c8 <col:51, col:55> col:55 mask 'int'   `-CompoundStmt 0x129144d30 <line:2:1, line:4:1>     `-ReturnStmt 0x129144d20 <line:3:2, col:9>       `-IntegerLiteral 0x129144d00 <col:9> 'int' 0 ","20384":"`-FunctionDecl 0x14a946d68  col:2 implicit used exp 'double (double)' extern   |-ParmVarDecl 0x14a946e68 <<invalid sloc>> <invalid sloc> 'double'   |-BuiltinAttr 0x14a946e10 <<invalid sloc>> Implicit 1067   |-ConstAttr 0x14a946ed8 <col:2> Implicit   `-NoThrowAttr 0x14a946f00 <col:2> Implicit ","20437":"`-FunctionDecl 0x14802b638  line:1:17 invalid hid_debug_events_poll 'int (struct file *, int *)' static   |-ParmVarDecl 0x14800e268 <col:39, col:52> col:52 used file 'struct file *'   |-ParmVarDecl 0x14800e318 <col:58, col:70> col:70 invalid wait 'int *'   `-CompoundStmt 0x14802bfb0 <line:2:1, line:11:1>     |-DeclStmt 0x14802b938 <line:3:2, col:50>     | |-RecordDecl 0x14802b6f0 <col:2, col:9> col:9 struct hid_debug_list     | `-VarDecl 0x14802b858 <col:2, col:38> col:25 used list 'struct hid_debug_list *' cinit     |   `-RecoveryExpr 0x14802b8f8 <col:32, col:38> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14802b8c0 <col:32> 'struct file *' lvalue ParmVar 0x14800e268 'file' 'struct file *'     |-CallExpr 0x14802bbd0 <line:5:2, col:47> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14802bab0 <col:2> 'int ()' Function 0x14802b9f8 'poll_wait' 'int ()'     | |-DeclRefExpr 0x14802bad0 <col:12> 'struct file *' lvalue ParmVar 0x14800e268 'file' 'struct file *'     | |-UnaryOperator 0x14802bb98 <col:18, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x14802bb50 <col:19, col:31> '<dependent type>' contains-errors lvalue ->debug_wait     | |   `-RecoveryExpr 0x14802bb28 <col:19, col:25> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x14802baf0 <col:19> 'struct hid_debug_list *' contains-errors lvalue Var 0x14802b858 'list' 'struct hid_debug_list *'     | `-RecoveryExpr 0x14802bbb0 <col:43> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14802bda8 <line:6:2, line:7:20>     | |-BinaryOperator 0x14802bcc8 <line:6:6, col:26> 'int' contains-errors '!='     | | |-RecoveryExpr 0x14802bc40 <col:6, col:12> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x14802bc08 <col:6> 'struct hid_debug_list *' contains-errors lvalue Var 0x14802b858 'list' 'struct hid_debug_list *'     | | `-RecoveryExpr 0x14802bca0 <col:20, col:26> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14802bc68 <col:20> 'struct hid_debug_list *' contains-errors lvalue Var 0x14802b858 'list' 'struct hid_debug_list *'     | `-ReturnStmt 0x14802bd98 <line:7:3, col:20>     |   `-BinaryOperator 0x14802bd78 <col:10, col:20> '<dependent type>' contains-errors '|'     |     |-RecoveryExpr 0x14802bd38 <col:10> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x14802bd58 <col:20> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14802bf60 <line:8:2, line:9:21>     | |-UnaryOperator 0x14802be88 <line:8:6, col:19> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14802be70 <col:7, col:19> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x14802be28 <col:7, col:19> '<dependent type>' contains-errors lvalue ->debug     | |     `-RecoveryExpr 0x14802be00 <col:7, col:13> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x14802bdc8 <col:7> 'struct hid_debug_list *' contains-errors lvalue Var 0x14802b858 'list' 'struct hid_debug_list *'     | `-ReturnStmt 0x14802bf50 <line:9:3, col:21>     |   `-BinaryOperator 0x14802bf30 <col:10, col:21> '<dependent type>' contains-errors '|'     |     |-RecoveryExpr 0x14802bef0 <col:10> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x14802bf10 <col:21> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14802bfa0 <line:10:2, col:9>       `-IntegerLiteral 0x14802bf80 <col:9> 'int' 0 ","20905":"`-FunctionDecl 0x15811cc20  col:22 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x15811cd20 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x15811cd88 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x15811ccc8 <<invalid sloc>> Implicit 887 ","20824":"`-FunctionDecl 0x134142de8  col:2 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x134142ee8 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x134142e90 <<invalid sloc>> Implicit 873 ","20847":"`-FunctionDecl 0x1440fbc88  line:1:12 invalid php_snmp_write_exceptions_enabled 'int (int *, int *)' static   |-ParmVarDecl 0x1440fbb28 <col:46, col:63> col:63 referenced invalid snmp_object 'int *'   |-ParmVarDecl 0x1440fbba8 <col:76, col:82> col:82 referenced invalid newval 'int *'   `-CompoundStmt 0x1441159d8 <line:2:1, line:18:1>     |-DeclStmt 0x1440fbdf8 <line:4:2, col:19>     | `-VarDecl 0x1440fbd58 <col:2, col:12> col:6 used ret 'int' cinit     |   `-RecoveryExpr 0x1440fbdd8 <col:12> '<dependent type>' contains-errors lvalue     |-IfStmt 0x144115530 <line:5:2, line:10:2>     | |-BinaryOperator 0x1440fc030 <line:5:6, col:26> 'int' contains-errors '!='     | | |-CallExpr 0x1440fbfb0 <col:6, col:21> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x1440fbf70 <col:6> 'int ()' Function 0x1440fbeb8 'Z_TYPE_P' 'int ()'     | | | `-RecoveryExpr 0x1440fbf90 <col:15> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1440fc010 <col:26> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x144115508 <col:35, line:10:2>     |   |-CallExpr 0x144115238 <line:7:3, col:23> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1440fc180 <col:3> 'int ()' Function 0x1440fc0c8 'zval_copy_ctor' 'int ()'     |   | `-UnaryOperator 0x144115220 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x144115200 <col:19> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x1441153f0 <line:8:3, col:24> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x144115340 <col:3> 'int ()' Function 0x144115288 'convert_to_long' 'int ()'     |   | `-UnaryOperator 0x1441153d8 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x1441153b8 <col:20> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x1441154e8 <line:9:3, col:13> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x144115438 <col:3> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x144115418 <col:3> 'int *' lvalue ParmVar 0x1440fbba8 'newval' 'int *'     |     `-UnaryOperator 0x1441154d0 <col:12, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x1441154b0 <col:13> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x144115728 <line:12:2, col:51> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x144115598 <col:2, col:15> '<dependent type>' contains-errors lvalue ->exceptions_enabled     | | `-RecoveryExpr 0x144115570 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x144115550 <col:2> 'int *' lvalue ParmVar 0x1440fbb28 'snmp_object' 'int *'     | `-CallExpr 0x144115700 <col:36, col:51> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1441156c0 <col:36> 'int ()' Function 0x144115608 'Z_LVAL_P' 'int ()'     |   `-RecoveryExpr 0x1441156e0 <col:45> '<dependent type>' contains-errors lvalue     |-IfStmt 0x144115970 <line:14:2, line:16:2>     | |-BinaryOperator 0x1441157f0 <line:14:6, col:17> 'int' contains-errors '=='     | | |-RecoveryExpr 0x144115748 <col:6> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x1441157d8 <col:16, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x1441157b8 <col:17> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x144115958 <col:23, line:16:2>     |   `-CallExpr 0x144115930 <line:15:3, col:19> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1441158f0 <col:3> 'int ()' Function 0x144115838 'zval_dtor' 'int ()'     |     `-RecoveryExpr 0x144115910 <col:13> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1441159c8 <line:17:2, col:9>       `-ImplicitCastExpr 0x1441159b0 <col:9> 'int' contains-errors <LValueToRValue>         `-DeclRefExpr 0x144115990 <col:9> 'int' contains-errors lvalue Var 0x1440fbd58 'ret' 'int' ","20755":"`-FunctionDecl 0x14c941800  line:1:13 invalid sctp_generate_timeout_event 'void (struct sctp_association *, int)' static   |-ParmVarDecl 0x14c928648 <col:41, col:66> col:66 used asoc 'struct sctp_association *'   |-ParmVarDecl 0x14c9286e0 <line:2:6, col:27> col:27 invalid timeout_type 'int'   `-CompoundStmt 0x14c947c60 <line:3:1, line:34:1>     |-DeclStmt 0x14c941cf8 <line:4:2, col:43>     | |-RecordDecl 0x14c9418b8 <col:2, col:9> col:9 struct net     | `-VarDecl 0x14c941a28 <col:2, col:42> col:14 used net 'struct net *' cinit     |   `-CallExpr 0x14c941cb8 <col:20, col:42> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14c941bf0 <col:20> 'int ()' Function 0x14c941b38 'sock_net' 'int ()'     |     `-CXXDependentScopeMemberExpr 0x14c941c70 <col:29, col:40> '<dependent type>' contains-errors lvalue .sk     |       `-RecoveryExpr 0x14c941c48 <col:29, col:35> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x14c941c10 <col:29> 'struct sctp_association *' lvalue ParmVar 0x14c928648 'asoc' 'struct sctp_association *'     |-DeclStmt 0x14c941db0 <line:5:2, col:15>     | `-VarDecl 0x14c941d28 <col:2, col:14> col:6 used error 'int' cinit     |   `-IntegerLiteral 0x14c941d90 <col:14> 'int' 0     |-CallExpr 0x14c941f70 <line:7:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c941ea8 <col:2> 'int ()' Function 0x14c941df0 'bh_lock_sock' 'int ()'     | `-CXXDependentScopeMemberExpr 0x14c941f28 <col:15, col:26> '<dependent type>' contains-errors lvalue .sk     |   `-RecoveryExpr 0x14c941f00 <col:15, col:21> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14c941ec8 <col:15> 'struct sctp_association *' lvalue ParmVar 0x14c928648 'asoc' 'struct sctp_association *'     |-IfStmt 0x14c9470c8 <line:8:2, line:16:2>     | |-CallExpr 0x14c942140 <line:8:6, col:38> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14c942078 <col:6> 'int ()' Function 0x14c941fc0 'sock_owned_by_user' 'int ()'     | | `-CXXDependentScopeMemberExpr 0x14c9420f8 <col:25, col:36> '<dependent type>' contains-errors lvalue .sk     | |   `-RecoveryExpr 0x14c9420d0 <col:25, col:31> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x14c942098 <col:25> 'struct sctp_association *' lvalue ParmVar 0x14c928648 'asoc' 'struct sctp_association *'     | `-CompoundStmt 0x14c9470a0 <col:41, line:16:2>     |   |-CallExpr 0x14c9423c0 <line:9:3, line:10:17> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14c942248 <line:9:3> 'int ()' Function 0x14c942190 'pr_debug' 'int ()'     |   | |-StringLiteral 0x14c9422b0 <col:12> 'char[4]' lvalue \"STR\"     |   | |-PredefinedExpr 0x14c942388 <col:19> 'const char[28]' lvalue __func__     |   | | `-StringLiteral 0x14c942350 <col:19> 'const char[28]' lvalue \"sctp_generate_timeout_event\"     |   | `-RecoveryExpr 0x14c9423a0 <line:10:5> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x14c947018 <line:13:3, line:14:30>     |   | |-RecoveryExpr 0x14c942650 <line:13:7, col:64> '_Bool' contains-errors     |   | `-CallExpr 0x14c9427d8 <line:14:4, col:30> 'int'     |   |   |-ImplicitCastExpr 0x14c9427c0 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x14c942750 <col:4> 'int ()' Function 0x14c942698 'sctp_association_hold' 'int ()'     |   |   `-ImplicitCastExpr 0x14c947000 <col:26> 'struct sctp_association *' <LValueToRValue>     |   |     `-DeclRefExpr 0x14c942770 <col:26> 'struct sctp_association *' lvalue ParmVar 0x14c928648 'asoc' 'struct sctp_association *'     |   `-GotoStmt 0x14c947088 <line:15:3, col:8> 'out_unlock' 0x14c947038     |-IfStmt 0x14c9471a8 <line:19:2, line:20:8>     | |-CXXDependentScopeMemberExpr 0x14c947148 <line:19:6, col:17> '<dependent type>' contains-errors lvalue .dead     | | `-RecoveryExpr 0x14c947120 <col:6, col:12> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14c9470e8 <col:6> 'struct sctp_association *' lvalue ParmVar 0x14c928648 'asoc' 'struct sctp_association *'     | `-GotoStmt 0x14c947190 <line:20:3, col:8> 'out_unlock' 0x14c947038     |-BinaryOperator 0x14c947720 <line:23:2, line:26:39> 'int' contains-errors '='     | |-DeclRefExpr 0x14c9471c8 <line:23:2> 'int' lvalue Var 0x14c941d28 'error' 'int'     | `-CallExpr 0x14c9476c0 <col:10, line:26:39> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14c9472c8 <line:23:10> 'int ()' Function 0x14c947210 'sctp_do_sm' 'int ()'     |   |-DeclRefExpr 0x14c9472e8 <col:21> 'struct net *' contains-errors lvalue Var 0x14c941a28 'net' 'struct net *'     |   |-RecoveryExpr 0x14c947640 <col:26> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x14c947440 <line:24:7, col:35> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14c947400 <col:7> 'int ()' Function 0x14c947348 'SCTP_ST_TIMEOUT' 'int ()'     |   | `-RecoveryExpr 0x14c947420 <col:23> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x14c9474a0 <line:25:7, col:13> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14c947468 <col:7> 'struct sctp_association *' lvalue ParmVar 0x14c928648 'asoc' 'struct sctp_association *'     |   |-RecoveryExpr 0x14c947500 <col:20, col:26> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14c9474c8 <col:20> 'struct sctp_association *' lvalue ParmVar 0x14c928648 'asoc' 'struct sctp_association *'     |   |-DeclRefExpr 0x14c947528 <col:30> 'struct sctp_association *' lvalue ParmVar 0x14c928648 'asoc' 'struct sctp_association *'     |   |-CStyleCastExpr 0x14c947678 <line:26:7, col:15> 'void *' contains-errors <Dependent>     |   | `-RecoveryExpr 0x14c947548 <col:15> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x14c9476a0 <col:29> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14c9478d8 <line:28:2, line:29:28>     | |-ImplicitCastExpr 0x14c947760 <line:28:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x14c947740 <col:6> 'int' lvalue Var 0x14c941d28 'error' 'int'     | `-BinaryOperator 0x14c9478b8 <line:29:3, col:28> '<dependent type>' contains-errors '='     |   |-CXXDependentScopeMemberExpr 0x14c947820 <col:3, col:18> '<dependent type>' contains-errors lvalue ->sk_err     |   | `-CXXDependentScopeMemberExpr 0x14c9477d8 <col:3, col:14> '<dependent type>' contains-errors lvalue .sk     |   |   `-RecoveryExpr 0x14c9477b0 <col:3, col:9> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x14c947778 <col:3> 'struct sctp_association *' lvalue ParmVar 0x14c928648 'asoc' 'struct sctp_association *'     |   `-UnaryOperator 0x14c9478a0 <col:27, col:28> 'int' prefix '-'     |     `-ImplicitCastExpr 0x14c947888 <col:28> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x14c947868 <col:28> 'int' lvalue Var 0x14c941d28 'error' 'int'     |-LabelStmt 0x14c947ac8 <line:31:1, line:32:30> 'out_unlock'     | `-CallExpr 0x14c947aa0 <col:2, col:30> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14c9479d8 <col:2> 'int ()' Function 0x14c947920 'bh_unlock_sock' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x14c947a58 <col:17, col:28> '<dependent type>' contains-errors lvalue .sk     |     `-RecoveryExpr 0x14c947a30 <col:17, col:23> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14c9479f8 <col:17> 'struct sctp_association *' lvalue ParmVar 0x14c928648 'asoc' 'struct sctp_association *'     `-CallExpr 0x14c947c20 <line:33:2, col:27> 'int'       |-ImplicitCastExpr 0x14c947c08 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x14c947bc8 <col:2> 'int ()' Function 0x14c947b10 'sctp_association_put' 'int ()'       `-ImplicitCastExpr 0x14c947c48 <col:23> 'struct sctp_association *' <LValueToRValue>         `-DeclRefExpr 0x14c947be8 <col:23> 'struct sctp_association *' lvalue ParmVar 0x14c928648 'asoc' 'struct sctp_association *' ","20439":"`-FunctionDecl 0x154026cb0  col:2 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern   |-ParmVarDecl 0x154026db0 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x154026e18 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-ParmVarDecl 0x154026e80 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x154026d58 <<invalid sloc>> Implicit 905   `-FormatAttr 0x154026f00 <col:2> Implicit printf 3 4 ","20938":"`-FunctionDecl 0x14a081c00  line:1:13 qeth_configure_blkt_default 'void (struct qeth_card *, char *)' static   |-ParmVarDecl 0x14a069848 <col:41, col:59> col:59 used card 'struct qeth_card *'   |-ParmVarDecl 0x14a0698c8 <col:65, col:71> col:71 used prcd 'char *'   `-CompoundStmt 0x14a082b20 <line:2:1, line:15:1>     |-CallExpr 0x14a081f48 <line:3:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a081e30 <col:2> 'int ()' Function 0x14a081d78 'QETH_DBF_TEXT' 'int ()'     | |-RecoveryExpr 0x14a081f28 <col:16> '<dependent type>' contains-errors lvalue     | |-IntegerLiteral 0x14a081e68 <col:23> 'int' 2     | `-StringLiteral 0x14a081ed0 <col:26> 'char[4]' lvalue \"STR\"     `-IfStmt 0x14a082af0 <line:5:2, line:14:2> has_else       |-BinaryOperator 0x14a082360 <line:5:6, line:6:38> 'int' '&&'       | |-BinaryOperator 0x14a082258 <line:5:6, line:6:18> 'int' '&&'       | | |-BinaryOperator 0x14a082150 <line:5:6, col:38> 'int' '&&'       | | | |-BinaryOperator 0x14a082048 <col:6, col:18> 'int' '=='       | | | | |-ImplicitCastExpr 0x14a082030 <col:6, col:13> 'int' <IntegralCast>       | | | | | `-ImplicitCastExpr 0x14a082018 <col:6, col:13> 'char' <LValueToRValue>       | | | | |   `-ArraySubscriptExpr 0x14a081fd8 <col:6, col:13> 'char' lvalue       | | | | |     |-ImplicitCastExpr 0x14a081fc0 <col:6> 'char *' <LValueToRValue>       | | | | |     | `-DeclRefExpr 0x14a081f80 <col:6> 'char *' lvalue ParmVar 0x14a0698c8 'prcd' 'char *'       | | | | |     `-IntegerLiteral 0x14a081fa0 <col:11> 'int' 74       | | | | `-IntegerLiteral 0x14a081ff8 <col:18> 'int' 240       | | | `-BinaryOperator 0x14a082130 <col:26, col:38> 'int' '=='       | | |   |-ImplicitCastExpr 0x14a082118 <col:26, col:33> 'int' <IntegralCast>       | | |   | `-ImplicitCastExpr 0x14a082100 <col:26, col:33> 'char' <LValueToRValue>       | | |   |   `-ArraySubscriptExpr 0x14a0820c0 <col:26, col:33> 'char' lvalue       | | |   |     |-ImplicitCastExpr 0x14a0820a8 <col:26> 'char *' <LValueToRValue>       | | |   |     | `-DeclRefExpr 0x14a082068 <col:26> 'char *' lvalue ParmVar 0x14a0698c8 'prcd' 'char *'       | | |   |     `-IntegerLiteral 0x14a082088 <col:31> 'int' 75       | | |   `-IntegerLiteral 0x14a0820e0 <col:38> 'int' 240       | | `-BinaryOperator 0x14a082238 <line:6:6, col:18> 'int' '>='       | |   |-ImplicitCastExpr 0x14a082220 <col:6, col:13> 'int' <IntegralCast>       | |   | `-ImplicitCastExpr 0x14a082208 <col:6, col:13> 'char' <LValueToRValue>       | |   |   `-ArraySubscriptExpr 0x14a0821c8 <col:6, col:13> 'char' lvalue       | |   |     |-ImplicitCastExpr 0x14a0821b0 <col:6> 'char *' <LValueToRValue>       | |   |     | `-DeclRefExpr 0x14a082170 <col:6> 'char *' lvalue ParmVar 0x14a0698c8 'prcd' 'char *'       | |   |     `-IntegerLiteral 0x14a082190 <col:11> 'int' 76       | |   `-IntegerLiteral 0x14a0821e8 <col:18> 'int' 241       | `-BinaryOperator 0x14a082340 <col:26, col:38> 'int' '<='       |   |-ImplicitCastExpr 0x14a082328 <col:26, col:33> 'int' <IntegralCast>       |   | `-ImplicitCastExpr 0x14a082310 <col:26, col:33> 'char' <LValueToRValue>       |   |   `-ArraySubscriptExpr 0x14a0822d0 <col:26, col:33> 'char' lvalue       |   |     |-ImplicitCastExpr 0x14a0822b8 <col:26> 'char *' <LValueToRValue>       |   |     | `-DeclRefExpr 0x14a082278 <col:26> 'char *' lvalue ParmVar 0x14a0698c8 'prcd' 'char *'       |   |     `-IntegerLiteral 0x14a082298 <col:31> 'int' 76       |   `-IntegerLiteral 0x14a0822f0 <col:38> 'int' 244       |-CompoundStmt 0x14a082710 <col:44, line:10:2>       | |-BinaryOperator 0x14a082490 <line:7:3, col:32> '<dependent type>' contains-errors '='       | | |-CXXDependentScopeMemberExpr 0x14a082428 <col:3, col:19> '<dependent type>' contains-errors lvalue .time_total       | | | `-CXXDependentScopeMemberExpr 0x14a0823e0 <col:3, col:14> '<dependent type>' contains-errors lvalue .blkt       | | |   `-RecoveryExpr 0x14a0823b8 <col:3, col:9> '<dependent type>' contains-errors lvalue       | | |     `-DeclRefExpr 0x14a082380 <col:3> 'struct qeth_card *' lvalue ParmVar 0x14a069848 'card' 'struct qeth_card *'       | | `-IntegerLiteral 0x14a082470 <col:32> 'int' 0       | |-BinaryOperator 0x14a0825c0 <line:8:3, col:34> '<dependent type>' contains-errors '='       | | |-CXXDependentScopeMemberExpr 0x14a082558 <col:3, col:19> '<dependent type>' contains-errors lvalue .inter_packet       | | | `-CXXDependentScopeMemberExpr 0x14a082510 <col:3, col:14> '<dependent type>' contains-errors lvalue .blkt       | | |   `-RecoveryExpr 0x14a0824e8 <col:3, col:9> '<dependent type>' contains-errors lvalue       | | |     `-DeclRefExpr 0x14a0824b0 <col:3> 'struct qeth_card *' lvalue ParmVar 0x14a069848 'card' 'struct qeth_card *'       | | `-IntegerLiteral 0x14a0825a0 <col:34> 'int' 0       | `-BinaryOperator 0x14a0826f0 <line:9:3, col:40> '<dependent type>' contains-errors '='       |   |-CXXDependentScopeMemberExpr 0x14a082688 <col:3, col:19> '<dependent type>' contains-errors lvalue .inter_packet_jumbo       |   | `-CXXDependentScopeMemberExpr 0x14a082640 <col:3, col:14> '<dependent type>' contains-errors lvalue .blkt       |   |   `-RecoveryExpr 0x14a082618 <col:3, col:9> '<dependent type>' contains-errors lvalue       |   |     `-DeclRefExpr 0x14a0825e0 <col:3> 'struct qeth_card *' lvalue ParmVar 0x14a069848 'card' 'struct qeth_card *'       |   `-IntegerLiteral 0x14a0826d0 <col:40> 'int' 0       `-CompoundStmt 0x14a082ac8 <line:10:9, line:14:2>         |-BinaryOperator 0x14a082848 <line:11:3, col:32> '<dependent type>' contains-errors '='         | |-CXXDependentScopeMemberExpr 0x14a0827e0 <col:3, col:19> '<dependent type>' contains-errors lvalue .time_total         | | `-CXXDependentScopeMemberExpr 0x14a082798 <col:3, col:14> '<dependent type>' contains-errors lvalue .blkt         | |   `-RecoveryExpr 0x14a082770 <col:3, col:9> '<dependent type>' contains-errors lvalue         | |     `-DeclRefExpr 0x14a082738 <col:3> 'struct qeth_card *' lvalue ParmVar 0x14a069848 'card' 'struct qeth_card *'         | `-IntegerLiteral 0x14a082828 <col:32> 'int' 250         |-BinaryOperator 0x14a082978 <line:12:3, col:34> '<dependent type>' contains-errors '='         | |-CXXDependentScopeMemberExpr 0x14a082910 <col:3, col:19> '<dependent type>' contains-errors lvalue .inter_packet         | | `-CXXDependentScopeMemberExpr 0x14a0828c8 <col:3, col:14> '<dependent type>' contains-errors lvalue .blkt         | |   `-RecoveryExpr 0x14a0828a0 <col:3, col:9> '<dependent type>' contains-errors lvalue         | |     `-DeclRefExpr 0x14a082868 <col:3> 'struct qeth_card *' lvalue ParmVar 0x14a069848 'card' 'struct qeth_card *'         | `-IntegerLiteral 0x14a082958 <col:34> 'int' 5         `-BinaryOperator 0x14a082aa8 <line:13:3, col:40> '<dependent type>' contains-errors '='           |-CXXDependentScopeMemberExpr 0x14a082a40 <col:3, col:19> '<dependent type>' contains-errors lvalue .inter_packet_jumbo           | `-CXXDependentScopeMemberExpr 0x14a0829f8 <col:3, col:14> '<dependent type>' contains-errors lvalue .blkt           |   `-RecoveryExpr 0x14a0829d0 <col:3, col:9> '<dependent type>' contains-errors lvalue           |     `-DeclRefExpr 0x14a082998 <col:3> 'struct qeth_card *' lvalue ParmVar 0x14a069848 'card' 'struct qeth_card *'           `-IntegerLiteral 0x14a082a88 <col:40> 'int' 15 ","20520":"`-FunctionDecl 0x1479281a8  line:1:1 PHP_FUNCTION 'int (int)'   |-ParmVarDecl 0x1479280d8 <col:14> col:14 pcntl_alarm 'int'   `-CompoundStmt 0x147940bd0 <line:2:1, line:9:1>     |-DeclStmt 0x147928320 <line:3:2, col:14>     | `-VarDecl 0x1479282b8 <col:2, col:7> col:7 used seconds 'long'     |-IfStmt 0x147928630 <line:5:2, line:6:3>     | |-RecoveryExpr 0x147928600 <line:5:6, col:75> '_Bool' contains-errors     | `-ReturnStmt 0x147928620 <line:6:3>     `-CallExpr 0x147940ba8 <line:8:2, col:36> 'int'       |-ImplicitCastExpr 0x147940b90 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x147928730 <col:2> 'int ()' Function 0x147928678 'RETURN_LONG' 'int ()'       `-CStyleCastExpr 0x147940b68 <col:15, col:35> 'long' <IntegralCast>         `-CallExpr 0x147940b10 <col:22, col:35> 'int'           |-ImplicitCastExpr 0x147940af8 <col:22> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x147940ab8 <col:22> 'int ()' Function 0x147940a00 'alarm' 'int ()'           `-ImplicitCastExpr 0x147940b38 <col:28> 'long' <LValueToRValue>             `-DeclRefExpr 0x147940ad8 <col:28> 'long' lvalue Var 0x1479282b8 'seconds' 'long' ","20511":"`-FunctionDecl 0x151909c88  line:1:14 invalid SparseToDenseImpl 'int (int *, int *)'   |-ParmVarDecl 0x151909b28 <col:32, col:47> col:47 invalid context 'int *'   |-ParmVarDecl 0x151909ba8 <col:56, col:68> col:68 invalid node 'int *'   `-CompoundStmt 0x151923eb8 <col:74, line:27:1>     |-DeclStmt 0x151909fd0 <line:2:3, col:72>     | `-VarDecl 0x151909d58 <col:3, col:23> col:23 invalid indices 'const int *'     |-DeclStmt 0x15190a118 <line:3:3, line:4:50>     | `-VarDecl 0x15190a000 <line:3:3, col:23> col:23 invalid output_shape 'const int *'     |-DeclStmt 0x151923270 <line:5:3, col:74>     | `-VarDecl 0x15190a148 <col:3, col:23> col:23 invalid values 'const int *'     |-DeclStmt 0x1519233b8 <line:6:3, line:7:51>     | `-VarDecl 0x1519232a0 <line:6:3, col:23> col:23 invalid default_value 'const int *'     |-IfStmt 0x151923970 <line:10:3, line:13:3>     | |-CallExpr 0x1519236d8 <line:10:7, col:29> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x151923658 <col:7> 'int ()' Function 0x1519235a0 'IsDynamicTensor' 'int ()'     | | `-RecoveryExpr 0x1519236b8 <col:23> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x151923960 <col:32, line:13:3>     |-DeclStmt 0x151923b80 <line:15:3, col:54>     | `-VarDecl 0x1519239a8 <col:3, col:53> col:13 used num_indices 'const int' cinit     |   `-CallExpr 0x151923b50 <col:27, col:53> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x151923af0 <col:27> 'int ()' Function 0x151923a38 'SizeOfDimension' 'int ()'     |     |-RecoveryExpr 0x151923b10 <col:43> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x151923b30 <col:52> 'int' 0     `-DeclStmt 0x151923da0 <line:16:3, col:58>       `-VarDecl 0x151923bb0 <col:3, col:14> col:14 invalid value_is_scalar 'const int' ","20640":"`-FunctionDecl 0x11e128750  line:1:13 adapter_stop 'void (struct btd_adapter *)' static   |-ParmVarDecl 0x11e128648 <col:26, col:46> col:46 used adapter 'struct btd_adapter *'   `-CompoundStmt 0x11e1433c8 <line:2:1, line:42:1>     |-CallExpr 0x11e140bf8 <line:4:2, col:32> 'int'     | |-ImplicitCastExpr 0x11e140be0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x11e140b70 <col:2> 'int ()' Function 0x11e140ab8 'reply_pending_requests' 'int ()'     | `-ImplicitCastExpr 0x11e140c20 <col:25> 'struct btd_adapter *' <LValueToRValue>     |   `-DeclRefExpr 0x11e140b90 <col:25> 'struct btd_adapter *' lvalue ParmVar 0x11e128648 'adapter' 'struct btd_adapter *'     |-CallExpr 0x11e140d70 <line:6:2, col:33> 'int'     | |-ImplicitCastExpr 0x11e140d58 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x11e140d18 <col:2> 'int ()' Function 0x11e140c60 'cancel_passive_scanning' 'int ()'     | `-ImplicitCastExpr 0x11e140d98 <col:26> 'struct btd_adapter *' <LValueToRValue>     |   `-DeclRefExpr 0x11e140d38 <col:26> 'struct btd_adapter *' lvalue ParmVar 0x11e128648 'adapter' 'struct btd_adapter *'     |-CallExpr 0x11e140ee8 <line:8:2, col:31> 'int'     | |-ImplicitCastExpr 0x11e140ed0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x11e140e90 <col:2> 'int ()' Function 0x11e140dd8 'remove_discovery_list' 'int ()'     | `-ImplicitCastExpr 0x11e140f10 <col:24> 'struct btd_adapter *' <LValueToRValue>     |   `-DeclRefExpr 0x11e140eb0 <col:24> 'struct btd_adapter *' lvalue ParmVar 0x11e128648 'adapter' 'struct btd_adapter *'     |-CallExpr 0x11e141080 <line:10:2, col:30> 'int'     | |-ImplicitCastExpr 0x11e141068 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x11e141008 <col:2> 'int ()' Function 0x11e140f50 'discovery_cleanup' 'int ()'     | |-ImplicitCastExpr 0x11e1410b0 <col:20> 'struct btd_adapter *' <LValueToRValue>     | | `-DeclRefExpr 0x11e141028 <col:20> 'struct btd_adapter *' lvalue ParmVar 0x11e128648 'adapter' 'struct btd_adapter *'     | `-IntegerLiteral 0x11e141048 <col:29> 'int' 0     |-CallExpr 0x11e141318 <line:14:2, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11e141298 <col:2> 'int ()' Function 0x11e1411e0 'g_free' 'int ()'     | `-RecoveryExpr 0x11e1412f0 <col:9, col:18> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x11e1412b8 <col:9> 'struct btd_adapter *' lvalue ParmVar 0x11e128648 'adapter' 'struct btd_adapter *'     |-BinaryOperator 0x11e1413f8 <line:15:2, col:38> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x11e141378 <col:2, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x11e141340 <col:2> 'struct btd_adapter *' lvalue ParmVar 0x11e128648 'adapter' 'struct btd_adapter *'     | `-RecoveryExpr 0x11e1413d8 <col:38> '<dependent type>' contains-errors lvalue     |-WhileStmt 0x11e141970 <line:19:2, line:26:2>     | |-RecoveryExpr 0x11e1414c8 <line:19:9, col:18> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x11e141490 <col:9> 'struct btd_adapter *' lvalue ParmVar 0x11e128648 'adapter' 'struct btd_adapter *'     | `-CompoundStmt 0x11e141958 <col:31, line:26:2>     |   `-DeclStmt 0x11e141780 <line:20:3, col:57>     |     |-RecordDecl 0x11e1414f0 <col:3, col:10> col:10 struct btd_device     |     `-VarDecl 0x11e141658 <col:3, col:53> col:22 used device 'struct btd_device *' cinit     |       `-CXXDependentScopeMemberExpr 0x11e141720 <col:31, col:53> '<dependent type>' contains-errors lvalue ->data     |         `-RecoveryExpr 0x11e1416f8 <col:31, col:40> '<dependent type>' contains-errors lvalue     |           `-DeclRefExpr 0x11e1416c0 <col:31> 'struct btd_adapter *' lvalue ParmVar 0x11e128648 'adapter' 'struct btd_adapter *'     |-IfStmt 0x11e143158 <line:31:2, line:36:2>     | |-RecoveryExpr 0x11e142fd8 <line:31:6, col:15> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x11e142fa0 <col:6> 'struct btd_adapter *' lvalue ParmVar 0x11e128648 'adapter' 'struct btd_adapter *'     | `-CompoundStmt 0x11e143140 <col:26, line:36:2>     |   `-BinaryOperator 0x11e143080 <line:33:3, col:24> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x11e143038 <col:3, col:12> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x11e143000 <col:3> 'struct btd_adapter *' lvalue ParmVar 0x11e128648 'adapter' 'struct btd_adapter *'     |     `-IntegerLiteral 0x11e143060 <col:24> 'int' 0     `-CallExpr 0x11e143398 <line:41:2, col:26> '<dependent type>' contains-errors       |-DeclRefExpr 0x11e1432f8 <col:2> 'int ()' Function 0x11e143240 'DBG' 'int ()'       |-StringLiteral 0x11e143318 <col:6> 'char[4]' lvalue \"STR\"       `-RecoveryExpr 0x11e143370 <col:13, col:22> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x11e143338 <col:13> 'struct btd_adapter *' lvalue ParmVar 0x11e128648 'adapter' 'struct btd_adapter *' ","20730":"`-FunctionDecl 0x1469283a8  line:1:1 invalid theme_adium_find_previous 'int (int *, const char *, int, int)'   |-ParmVarDecl 0x146928128 <col:28, col:45> col:45 invalid view 'int *'   |-ParmVarDecl 0x1469281a8 <line:2:7, col:24> col:24 used search_criteria 'const char *'   |-ParmVarDecl 0x146928228 <line:3:7, col:24> col:24 invalid new_search 'int'   |-ParmVarDecl 0x1469282a8 <line:4:7, col:24> col:24 invalid match_case 'int'   `-CompoundStmt 0x146941c98 <line:5:1, line:10:1>     `-ReturnStmt 0x146941c88 <line:7:2, line:9:21>       `-CallExpr 0x146941c40 <line:7:9, line:9:21> '<dependent type>' contains-errors         |-DeclRefExpr 0x1469285d0 <line:7:9> 'int ()' Function 0x146928518 'webkit_web_view_search_text' 'int ()'         |-CallExpr 0x146928710 <col:38, col:59> '<dependent type>' contains-errors         | |-DeclRefExpr 0x1469286d0 <col:38> 'int ()' Function 0x146928618 'WEBKIT_WEB_VIEW' 'int ()'         | `-RecoveryExpr 0x1469286f0 <col:55> '<dependent type>' contains-errors lvalue         |-DeclRefExpr 0x146928738 <line:8:10> 'const char *' lvalue ParmVar 0x1469281a8 'search_criteria' 'const char *'         |-RecoveryExpr 0x146928758 <col:27> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x146941c00 <line:9:10> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x146941c20 <col:17> '<dependent type>' contains-errors lvalue ","21190":"`-FunctionDecl 0x153128f50  line:1:13 update_intel_pt_cfg 'void (struct kvm_vcpu *)' static   |-ParmVarDecl 0x153128e48 <col:33, col:50> col:50 used vcpu 'struct kvm_vcpu *'   `-CompoundStmt 0x1531449a0 <line:2:1, line:60:1>     |-DeclStmt 0x153141648 <line:3:2, col:37>     | |-RecordDecl 0x153141248 <col:2, col:9> col:9 struct vcpu_vmx     | `-VarDecl 0x1531413b8 <col:2, col:36> col:19 used vmx 'struct vcpu_vmx *' cinit     |   `-ImplicitCastExpr 0x153141618 <col:25, col:36> 'struct vcpu_vmx *' <IntegralToPointer>     |     `-CallExpr 0x1531415d8 <col:25, col:36> 'int'     |       |-ImplicitCastExpr 0x1531415c0 <col:25> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x153141550 <col:25> 'int ()' Function 0x153141498 'to_vmx' 'int ()'     |       `-ImplicitCastExpr 0x153141600 <col:32> 'struct kvm_vcpu *' <LValueToRValue>     |         `-DeclRefExpr 0x153141570 <col:32> 'struct kvm_vcpu *' lvalue ParmVar 0x153128e48 'vcpu' 'struct kvm_vcpu *'     |-DeclStmt 0x153141880 <line:4:2, col:38>     | |-RecordDecl 0x153141660 <col:2, col:9> col:9 struct kvm_cpuid_entry2     | `-VarDecl 0x1531417c8 <col:2, col:34> col:27 used best 'struct kvm_cpuid_entry2 *' cinit     |   `-RecoveryExpr 0x153141848 <col:34> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x153141918 <line:5:2, col:7>     | `-VarDecl 0x1531418b0 <col:2, col:6> col:6 used i 'int'     |-ForStmt 0x153143798 <line:7:2, line:15:2>     | |-BinaryOperator 0x153141970 <line:7:7, col:11> 'int' '='     | | |-DeclRefExpr 0x153141930 <col:7> 'int' lvalue Var 0x1531418b0 'i' 'int'     | | `-IntegerLiteral 0x153141950 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x153141a08 <col:14, col:18> 'int' contains-errors '<'     | | |-DeclRefExpr 0x153141990 <col:14> 'int' lvalue Var 0x1531418b0 'i' 'int'     | | `-RecoveryExpr 0x1531419e8 <col:18> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x153141a48 <col:35, col:36> 'int' postfix '++'     | | `-DeclRefExpr 0x153141a28 <col:35> 'int' lvalue Var 0x1531418b0 'i' 'int'     | `-CompoundStmt 0x153143778 <col:40, line:15:2>     |   |-BinaryOperator 0x153141c78 <line:8:3, col:44> 'struct kvm_cpuid_entry2 *' contains-errors '='     |   | |-DeclRefExpr 0x153141a60 <col:3> 'struct kvm_cpuid_entry2 *' contains-errors lvalue Var 0x1531417c8 'best' 'struct kvm_cpuid_entry2 *'     |   | `-ImplicitCastExpr 0x153141c60 <col:10, col:44> 'struct kvm_cpuid_entry2 *' <IntegralToPointer>     |   |   `-CallExpr 0x153141bf8 <col:10, col:44> 'int'     |   |     |-ImplicitCastExpr 0x153141be0 <col:10> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x153141b60 <col:10> 'int ()' Function 0x153141aa8 'kvm_find_cpuid_entry' 'int ()'     |   |     |-ImplicitCastExpr 0x153141c30 <col:31> 'struct kvm_vcpu *' <LValueToRValue>     |   |     | `-DeclRefExpr 0x153141b80 <col:31> 'struct kvm_vcpu *' lvalue ParmVar 0x153128e48 'vcpu' 'struct kvm_vcpu *'     |   |     |-IntegerLiteral 0x153141ba0 <col:37> 'int' 20     |   |     `-ImplicitCastExpr 0x153141c48 <col:43> 'int' <LValueToRValue>     |   |       `-DeclRefExpr 0x153141bc0 <col:43> 'int' lvalue Var 0x1531418b0 'i' 'int'     |   `-IfStmt 0x153141cf8 <line:9:3, line:10:4>     |     |-UnaryOperator 0x153141cd0 <line:9:7, col:8> 'int' contains-errors prefix '!' cannot overflow     |     | `-ImplicitCastExpr 0x153141cb8 <col:8> 'struct kvm_cpuid_entry2 *' contains-errors <LValueToRValue>     |     |   `-DeclRefExpr 0x153141c98 <col:8> 'struct kvm_cpuid_entry2 *' contains-errors lvalue Var 0x1531417c8 'best' 'struct kvm_cpuid_entry2 *'     |     `-ReturnStmt 0x153141ce8 <line:10:4>     `-ForStmt 0x153144968 <line:58:2, line:59:55>       |-BinaryOperator 0x153144600 <line:58:7, col:11> 'int' '='       | |-DeclRefExpr 0x1531445b8 <col:7> 'int' lvalue Var 0x1531418b0 'i' 'int'       | `-IntegerLiteral 0x1531445d8 <col:11> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x1531446e8 <col:14, col:31> 'int' contains-errors '<'       | |-DeclRefExpr 0x153144620 <col:14> 'int' lvalue Var 0x1531418b0 'i' 'int'       | `-CXXDependentScopeMemberExpr 0x1531446a0 <col:18, col:31> '<dependent type>' contains-errors lvalue .num_address_ranges       |   `-RecoveryExpr 0x153144678 <col:18, col:23> '<dependent type>' contains-errors lvalue       |     `-DeclRefExpr 0x153144640 <col:18> 'struct vcpu_vmx *' lvalue Var 0x1531413b8 'vmx' 'struct vcpu_vmx *'       |-UnaryOperator 0x153144728 <col:51, col:52> 'int' postfix '++'       | `-DeclRefExpr 0x153144708 <col:51> 'int' lvalue Var 0x1531418b0 'i' 'int'       `-CompoundAssignOperator 0x153144938 <line:59:3, col:55> '<dependent type>' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'         |-CXXDependentScopeMemberExpr 0x1531447a0 <col:3, col:16> '<dependent type>' contains-errors lvalue .ctl_bitmask         | `-RecoveryExpr 0x153144778 <col:3, col:8> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x153144740 <col:3> 'struct vcpu_vmx *' lvalue Var 0x1531413b8 'vmx' 'struct vcpu_vmx *'         `-UnaryOperator 0x153144920 <col:31, col:55> 'unsigned long long' prefix '~' cannot overflow           `-ParenExpr 0x153144900 <col:32, col:55> 'unsigned long long'             `-BinaryOperator 0x1531448e0 <col:33, col:54> 'unsigned long long' '<<'               |-IntegerLiteral 0x1531447e8 <col:33> 'unsigned long long' 15               `-ParenExpr 0x1531448c0 <col:43, col:54> 'int'                 `-BinaryOperator 0x1531448a0 <col:44, col:53> 'int' '+'                   |-IntegerLiteral 0x153144808 <col:44> 'int' 32                   `-BinaryOperator 0x153144880 <col:49, col:53> 'int' '*'                     |-ImplicitCastExpr 0x153144868 <col:49> 'int' <LValueToRValue>                     | `-DeclRefExpr 0x153144828 <col:49> 'int' lvalue Var 0x1531418b0 'i' 'int'                     `-IntegerLiteral 0x153144848 <col:53> 'int' 4 ","20275":"`-FunctionDecl 0x13f80de80  line:1:13 invalid read_quant_matrix_ext 'void (int *, int *)' static   |-ParmVarDecl 0x13f80dd28 <col:35, col:51> col:51 referenced invalid s 'int *'   |-ParmVarDecl 0x13f80dda8 <col:54, col:69> col:69 invalid gb 'int *'   `-CompoundStmt 0x13f828f48 <line:2:1, line:39:1>     |-DeclStmt 0x13f80e0d8 <line:3:5, col:16>     | |-VarDecl 0x13f80df50 <col:5, col:9> col:9 used i 'int'     | |-VarDecl 0x13f80dfd0 <col:5, col:12> col:12 used j 'int'     | `-VarDecl 0x13f80e050 <col:5, col:15> col:15 used v 'int'     |-IfStmt 0x13f827f90 <line:5:5, line:13:5>     | |-CallExpr 0x13f80e290 <line:5:9, col:21> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x13f80e250 <col:9> 'int ()' Function 0x13f80e198 'get_bits1' 'int ()'     | | `-RecoveryExpr 0x13f80e270 <col:19> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13f827f78 <col:24, line:13:5>     |   `-ForStmt 0x13f827f40 <line:7:9, line:12:9>     |     |-BinaryOperator 0x13f80e2f8 <line:7:14, col:18> 'int' '='     |     | |-DeclRefExpr 0x13f80e2b8 <col:14> 'int' lvalue Var 0x13f80df50 'i' 'int'     |     | `-IntegerLiteral 0x13f80e2d8 <col:18> 'int' 0     |     |-<<<NULL>>>     |     |-BinaryOperator 0x13f80e370 <col:21, col:25> 'int' '<'     |     | |-ImplicitCastExpr 0x13f80e358 <col:21> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x13f80e318 <col:21> 'int' lvalue Var 0x13f80df50 'i' 'int'     |     | `-IntegerLiteral 0x13f80e338 <col:25> 'int' 64     |     |-UnaryOperator 0x13f80e3b0 <col:29, col:30> 'int' postfix '++'     |     | `-DeclRefExpr 0x13f80e390 <col:29> 'int' lvalue Var 0x13f80df50 'i' 'int'     |     `-CompoundStmt 0x13f827f18 <col:34, line:12:9>     |       |-BinaryOperator 0x13f827b70 <line:8:13, col:31> 'int' contains-errors '='     |       | |-DeclRefExpr 0x13f80e3c8 <col:13> 'int' lvalue Var 0x13f80e050 'v' 'int'     |       | `-CallExpr 0x13f827b40 <col:17, col:31> '<dependent type>' contains-errors     |       |   |-DeclRefExpr 0x13f827ae0 <col:17> 'int ()' Function 0x13f827a28 'get_bits' 'int ()'     |       |   |-RecoveryExpr 0x13f827b00 <col:26> '<dependent type>' contains-errors lvalue     |       |   `-IntegerLiteral 0x13f827b20 <col:30> 'int' 8     |       |-BinaryOperator 0x13f827db8 <line:10:13, col:41> '<dependent type>' contains-errors '='     |       | |-ArraySubscriptExpr 0x13f827d78 <col:13, col:30> '<dependent type>' contains-errors lvalue     |       | | |-ImplicitCastExpr 0x13f827d48 <col:13, col:16> '<dependent type>' contains-errors <LValueToRValue>     |       | | | `-CXXDependentScopeMemberExpr 0x13f827ce0 <col:13, col:16> '<dependent type>' contains-errors lvalue ->intra_matrix     |       | | |   `-RecoveryExpr 0x13f827cb8 <col:13> '<dependent type>' contains-errors lvalue     |       | | |     `-DeclRefExpr 0x13f827c98 <col:13> 'int *' lvalue ParmVar 0x13f80dd28 's' 'int *'     |       | | `-ImplicitCastExpr 0x13f827d60 <col:29> 'int' <LValueToRValue>     |       | |   `-DeclRefExpr 0x13f827d28 <col:29> 'int' lvalue Var 0x13f80dfd0 'j' 'int'     |       | `-DeclRefExpr 0x13f827d98 <col:41> 'int' lvalue Var 0x13f80e050 'v' 'int'     |       `-BinaryOperator 0x13f827ef8 <line:11:13, col:41> '<dependent type>' contains-errors '='     |         |-ArraySubscriptExpr 0x13f827eb8 <col:13, col:37> '<dependent type>' contains-errors lvalue     |         | |-ImplicitCastExpr 0x13f827e88 <col:13, col:16> '<dependent type>' contains-errors <LValueToRValue>     |         | | `-CXXDependentScopeMemberExpr 0x13f827e20 <col:13, col:16> '<dependent type>' contains-errors lvalue ->chroma_intra_matrix     |         | |   `-RecoveryExpr 0x13f827df8 <col:13> '<dependent type>' contains-errors lvalue     |         | |     `-DeclRefExpr 0x13f827dd8 <col:13> 'int *' lvalue ParmVar 0x13f80dd28 's' 'int *'     |         | `-ImplicitCastExpr 0x13f827ea0 <col:36> 'int' <LValueToRValue>     |         |   `-DeclRefExpr 0x13f827e68 <col:36> 'int' lvalue Var 0x13f80dfd0 'j' 'int'     |         `-DeclRefExpr 0x13f827ed8 <col:41> 'int' lvalue Var 0x13f80e050 'v' 'int'     |-IfStmt 0x13f828220 <line:15:5, line:20:5>     | |-CallExpr 0x13f827ff0 <line:15:9, col:21> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x13f827fb0 <col:9> 'int ()' Function 0x13f80e198 'get_bits1' 'int ()'     | | `-RecoveryExpr 0x13f827fd0 <col:19> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13f828208 <col:24, line:20:5>     |   `-ForStmt 0x13f8281d0 <line:17:9, line:19:9>     |     |-BinaryOperator 0x13f828058 <line:17:14, col:18> 'int' '='     |     | |-DeclRefExpr 0x13f828018 <col:14> 'int' lvalue Var 0x13f80df50 'i' 'int'     |     | `-IntegerLiteral 0x13f828038 <col:18> 'int' 0     |     |-<<<NULL>>>     |     |-BinaryOperator 0x13f8280d0 <col:21, col:25> 'int' '<'     |     | |-ImplicitCastExpr 0x13f8280b8 <col:21> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x13f828078 <col:21> 'int' lvalue Var 0x13f80df50 'i' 'int'     |     | `-IntegerLiteral 0x13f828098 <col:25> 'int' 64     |     |-UnaryOperator 0x13f828110 <col:29, col:30> 'int' postfix '++'     |     | `-DeclRefExpr 0x13f8280f0 <col:29> 'int' lvalue Var 0x13f80df50 'i' 'int'     |     `-CompoundStmt 0x13f8281b8 <col:34, line:19:9>     |       `-CallExpr 0x13f828188 <line:18:13, col:27> '<dependent type>' contains-errors     |         |-DeclRefExpr 0x13f828128 <col:13> 'int ()' Function 0x13f827a28 'get_bits' 'int ()'     |         |-RecoveryExpr 0x13f828148 <col:22> '<dependent type>' contains-errors lvalue     |         `-IntegerLiteral 0x13f828168 <col:26> 'int' 8     |-IfStmt 0x13f828740 <line:22:5, line:29:5>     | |-CallExpr 0x13f828280 <line:22:9, col:21> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x13f828240 <col:9> 'int ()' Function 0x13f80e198 'get_bits1' 'int ()'     | | `-RecoveryExpr 0x13f828260 <col:19> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13f828728 <col:24, line:29:5>     |   `-ForStmt 0x13f8286f0 <line:24:9, line:28:9>     |     |-BinaryOperator 0x13f8282e8 <line:24:14, col:18> 'int' '='     |     | |-DeclRefExpr 0x13f8282a8 <col:14> 'int' lvalue Var 0x13f80df50 'i' 'int'     |     | `-IntegerLiteral 0x13f8282c8 <col:18> 'int' 0     |     |-<<<NULL>>>     |     |-BinaryOperator 0x13f828360 <col:21, col:25> 'int' '<'     |     | |-ImplicitCastExpr 0x13f828348 <col:21> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x13f828308 <col:21> 'int' lvalue Var 0x13f80df50 'i' 'int'     |     | `-IntegerLiteral 0x13f828328 <col:25> 'int' 64     |     |-UnaryOperator 0x13f8283a0 <col:29, col:30> 'int' postfix '++'     |     | `-DeclRefExpr 0x13f828380 <col:29> 'int' lvalue Var 0x13f80df50 'i' 'int'     |     `-CompoundStmt 0x13f8286d0 <col:34, line:28:9>     |       |-BinaryOperator 0x13f828468 <line:25:13, col:31> 'int' contains-errors '='     |       | |-DeclRefExpr 0x13f8283b8 <col:13> 'int' lvalue Var 0x13f80e050 'v' 'int'     |       | `-CallExpr 0x13f828438 <col:17, col:31> '<dependent type>' contains-errors     |       |   |-DeclRefExpr 0x13f8283d8 <col:17> 'int ()' Function 0x13f827a28 'get_bits' 'int ()'     |       |   |-RecoveryExpr 0x13f8283f8 <col:26> '<dependent type>' contains-errors lvalue     |       |   `-IntegerLiteral 0x13f828418 <col:30> 'int' 8     |       `-BinaryOperator 0x13f8286b0 <line:27:13, col:41> '<dependent type>' contains-errors '='     |         |-ArraySubscriptExpr 0x13f828670 <col:13, col:37> '<dependent type>' contains-errors lvalue     |         | |-ImplicitCastExpr 0x13f828640 <col:13, col:16> '<dependent type>' contains-errors <LValueToRValue>     |         | | `-CXXDependentScopeMemberExpr 0x13f8285d8 <col:13, col:16> '<dependent type>' contains-errors lvalue ->chroma_intra_matrix     |         | |   `-RecoveryExpr 0x13f8285b0 <col:13> '<dependent type>' contains-errors lvalue     |         | |     `-DeclRefExpr 0x13f828590 <col:13> 'int *' lvalue ParmVar 0x13f80dd28 's' 'int *'     |         | `-ImplicitCastExpr 0x13f828658 <col:36> 'int' <LValueToRValue>     |         |   `-DeclRefExpr 0x13f828620 <col:36> 'int' lvalue Var 0x13f80dfd0 'j' 'int'     |         `-DeclRefExpr 0x13f828690 <col:41> 'int' lvalue Var 0x13f80e050 'v' 'int'     |-IfStmt 0x13f8289d0 <line:31:5, line:36:5>     | |-CallExpr 0x13f8287a0 <line:31:9, col:21> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x13f828760 <col:9> 'int ()' Function 0x13f80e198 'get_bits1' 'int ()'     | | `-RecoveryExpr 0x13f828780 <col:19> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13f8289b8 <col:24, line:36:5>     |   `-ForStmt 0x13f828980 <line:33:9, line:35:9>     |     |-BinaryOperator 0x13f828808 <line:33:14, col:18> 'int' '='     |     | |-DeclRefExpr 0x13f8287c8 <col:14> 'int' lvalue Var 0x13f80df50 'i' 'int'     |     | `-IntegerLiteral 0x13f8287e8 <col:18> 'int' 0     |     |-<<<NULL>>>     |     |-BinaryOperator 0x13f828880 <col:21, col:25> 'int' '<'     |     | |-ImplicitCastExpr 0x13f828868 <col:21> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x13f828828 <col:21> 'int' lvalue Var 0x13f80df50 'i' 'int'     |     | `-IntegerLiteral 0x13f828848 <col:25> 'int' 64     |     |-UnaryOperator 0x13f8288c0 <col:29, col:30> 'int' postfix '++'     |     | `-DeclRefExpr 0x13f8288a0 <col:29> 'int' lvalue Var 0x13f80df50 'i' 'int'     |     `-CompoundStmt 0x13f828968 <col:34, line:35:9>     |       `-CallExpr 0x13f828938 <line:34:13, col:27> '<dependent type>' contains-errors     |         |-DeclRefExpr 0x13f8288d8 <col:13> 'int ()' Function 0x13f827a28 'get_bits' 'int ()'     |         |-RecoveryExpr 0x13f8288f8 <col:22> '<dependent type>' contains-errors lvalue     |         `-IntegerLiteral 0x13f828918 <col:26> 'int' 8     `-CallExpr 0x13f828f20 <line:38:5, col:30> '<dependent type>' contains-errors       |-DeclRefExpr 0x13f828ee0 <col:5> 'int ()' Function 0x13f828e28 'next_start_code_studio' 'int ()'       `-RecoveryExpr 0x13f828f00 <col:28> '<dependent type>' contains-errors lvalue ","21216":"`-FunctionDecl 0x14c128318  line:1:1 invalid bus_acquired_handler 'int (int *, const char *, int)'   |-ParmVarDecl 0x14c128128 <col:23, col:40> col:40 invalid connection 'int *'   |-ParmVarDecl 0x14c1281a8 <line:2:23, col:40> col:40 name 'const char *'   |-ParmVarDecl 0x14c128228 <line:3:23, col:40> col:40 invalid user_data 'int'   `-CompoundStmt 0x14c141fe8 <line:4:1, line:18:1> ","21236":"`-FunctionDecl 0x15380e350  line:1:13 xen_irq_lateeoi_locked 'void (struct irq_info *)' static   |-ParmVarDecl 0x15380e248 <col:36, col:53> col:53 used info 'struct irq_info *'   `-CompoundStmt 0x153826a60 <line:2:1, line:10:1>     |-IfStmt 0x1538268b8 <line:6:2, line:7:3>     | |-UnaryOperator 0x153826890 <line:6:6, col:26> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x153826868 <col:7, col:26> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x1538267d0 <col:7> 'int ()' Function 0x153826718 'VALID_EVTCHN' 'int ()'     | |   `-RecoveryExpr 0x153826848 <col:20> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1538268a8 <line:7:3>     `-CallExpr 0x153826a38 <line:9:2, col:22> '<dependent type>' contains-errors       |-DeclRefExpr 0x1538269b8 <col:2> 'int ()' Function 0x153826900 'unmask_evtchn' 'int ()'       `-RecoveryExpr 0x153826a18 <col:16> '<dependent type>' contains-errors lvalue ","20329":"`-FunctionDecl 0x15b80dda8  line:1:5 ldbAddBreakpoint 'int (int)'   |-ParmVarDecl 0x15b80dcd8 <col:22, col:26> col:26 used line 'int'   `-CompoundStmt 0x15b1228f8 <col:32, line:8:1>     |-IfStmt 0x15b80e138 <line:2:5, col:47>     | |-BinaryOperator 0x15b80e0e8 <col:9, col:33> 'int' contains-errors '||'     | | |-BinaryOperator 0x15b80e040 <col:9, col:17> 'int' '<='     | | | |-ImplicitCastExpr 0x15b80e028 <col:9> 'int' <LValueToRValue>     | | | | `-DeclRefExpr 0x15b80dea0 <col:9> 'int' lvalue ParmVar 0x15b80dcd8 'line' 'int'     | | | `-IntegerLiteral 0x15b80dec0 <col:17> 'int' 0     | | `-BinaryOperator 0x15b80e0c8 <col:22, col:33> 'int' contains-errors '>'     | |   |-DeclRefExpr 0x15b80df18 <col:22> 'int' lvalue ParmVar 0x15b80dcd8 'line' 'int'     | |   `-CXXDependentScopeMemberExpr 0x15b80e080 <col:29, col:33> '<dependent type>' contains-errors lvalue .lines     | |     `-RecoveryExpr 0x15b80e060 <col:29> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x15b80e128 <col:40, col:47>     |   `-IntegerLiteral 0x15b80e108 <col:47> 'int' 0     |-IfStmt 0x15b1228a8 <line:3:5, line:6:5>     | |-BinaryOperator 0x15b1227a8 <line:3:9, col:50> 'int' contains-errors '&&'     | | |-UnaryOperator 0x15b1226e8 <col:9, col:30> 'int' prefix '!' cannot overflow     | | | `-CallExpr 0x15b1226a8 <col:10, col:30> 'int'     | | |   |-ImplicitCastExpr 0x15b122690 <col:10> 'int (*)()' <FunctionToPointerDecay>     | | |   | `-DeclRefExpr 0x15b80e270 <col:10> 'int ()' Function 0x15b80e1b8 'ldbIsBreakpoint' 'int ()'     | | |   `-ImplicitCastExpr 0x15b1226d0 <col:26> 'int' <LValueToRValue>     | | |     `-DeclRefExpr 0x15b80e290 <col:26> 'int' lvalue ParmVar 0x15b80dcd8 'line' 'int'     | | `-BinaryOperator 0x15b122788 <col:35, col:50> 'int' contains-errors '!='     | |   |-CXXDependentScopeMemberExpr 0x15b122720 <col:35, col:39> '<dependent type>' contains-errors lvalue .bpcount     | |   | `-RecoveryExpr 0x15b122700 <col:35> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x15b122768 <col:50> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x15b122890 <col:71, line:6:5>     |   `-ReturnStmt 0x15b122880 <line:5:9, col:16>     |     `-IntegerLiteral 0x15b122860 <col:16> 'int' 1     `-ReturnStmt 0x15b1228e8 <line:7:5, col:12>       `-IntegerLiteral 0x15b1228c8 <col:12> 'int' 0 ","20390":"`-FunctionDecl 0x12c00dda8  line:1:1 xmlRelaxNGSchemaFacetCheck 'int (void *)'   |-ParmVarDecl 0x12c00dcd8 <col:28, col:34> col:34 data 'void *'   `-CompoundStmt 0x12c029000 <line:5:1, line:61:1>     |-DeclStmt 0x12c00df38 <line:8:5, col:12>     | `-VarDecl 0x12c00ded0 <col:5, col:9> col:9 used ret 'int'     |-IfStmt 0x12c00e078 <line:10:5, line:11:19>     | |-RecoveryExpr 0x12c00dff0 <line:10:9, col:42> '_Bool' contains-errors     | `-ReturnStmt 0x12c00e068 <line:11:9, col:19>     |   `-ParenExpr 0x12c00e048 <col:16, col:19> 'int'     |     `-UnaryOperator 0x12c00e030 <col:17, col:18> 'int' prefix '-'     |       `-IntegerLiteral 0x12c00e010 <col:18> 'int' 1     |-IfStmt 0x12c00e318 <line:15:5, line:16:19>     | |-BinaryOperator 0x12c00e290 <line:15:9, col:16> 'int' contains-errors '=='     | | |-RecoveryExpr 0x12c00e250 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12c00e270 <col:16> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12c00e308 <line:16:9, col:19>     |   `-ParenExpr 0x12c00e2e8 <col:16, col:19> 'int'     |     `-UnaryOperator 0x12c00e2d0 <col:17, col:18> 'int' prefix '-'     |       `-IntegerLiteral 0x12c00e2b0 <col:18> 'int' 1     |-IfStmt 0x12c026860 <line:19:5, line:20:19>     | |-BinaryOperator 0x12c0267d8 <line:19:9, col:18> 'int' contains-errors '=='     | | |-RecoveryExpr 0x12c026798 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12c0267b8 <col:18> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12c026850 <line:20:9, col:19>     |   `-ParenExpr 0x12c026830 <col:16, col:19> 'int'     |     `-UnaryOperator 0x12c026818 <col:17, col:18> 'int' prefix '-'     |       `-IntegerLiteral 0x12c0267f8 <col:18> 'int' 1     |-IfStmt 0x12c0270e0 <line:22:5, line:49:5> has_else     | |-RecoveryExpr 0x12c0269b0 <line:22:9, col:46> '_Bool' contains-errors     | |-CompoundStmt 0x12c0269d0 <col:49, line:24:5>     | `-IfStmt 0x12c0270b0 <col:12, line:49:5> has_else     |   |-RecoveryExpr 0x12c026a00 <line:24:16, col:53> '_Bool' contains-errors     |   |-CompoundStmt 0x12c026a20 <col:56, line:26:5>     |   `-IfStmt 0x12c027080 <col:12, line:49:5> has_else     |     |-RecoveryExpr 0x12c026a50 <line:26:16, col:53> '_Bool' contains-errors     |     |-CompoundStmt 0x12c026a70 <col:56, line:28:5>     |     `-IfStmt 0x12c027050 <col:12, line:49:5> has_else     |       |-RecoveryExpr 0x12c026aa0 <line:28:16, col:53> '_Bool' contains-errors     |       |-CompoundStmt 0x12c026ac0 <col:56, line:30:5>     |       `-IfStmt 0x12c027020 <col:12, line:49:5> has_else     |         |-RecoveryExpr 0x12c026af0 <line:30:16, col:53> '_Bool' contains-errors     |         |-CompoundStmt 0x12c026b10 <col:56, line:32:5>     |         `-IfStmt 0x12c026ff0 <col:12, line:49:5> has_else     |           |-RecoveryExpr 0x12c026b40 <line:32:16, col:53> '_Bool' contains-errors     |           |-CompoundStmt 0x12c026b60 <col:56, line:34:5>     |           `-IfStmt 0x12c026fc0 <col:12, line:49:5> has_else     |             |-RecoveryExpr 0x12c026b90 <line:34:16, col:53> '_Bool' contains-errors     |             |-CompoundStmt 0x12c026bb0 <col:56, line:36:5>     |             `-IfStmt 0x12c026f90 <col:12, line:49:5> has_else     |               |-RecoveryExpr 0x12c026be0 <line:36:16, col:53> '_Bool' contains-errors     |               |-CompoundStmt 0x12c026c00 <col:56, line:38:5>     |               `-IfStmt 0x12c026f60 <col:12, line:49:5> has_else     |                 |-RecoveryExpr 0x12c026c30 <line:38:16, col:53> '_Bool' contains-errors     |                 |-CompoundStmt 0x12c026c50 <col:56, line:40:5>     |                 `-IfStmt 0x12c026f30 <col:12, line:49:5> has_else     |                   |-RecoveryExpr 0x12c026c80 <line:40:16, col:53> '_Bool' contains-errors     |                   |-CompoundStmt 0x12c026ca0 <col:56, line:42:5>     |                   `-IfStmt 0x12c026f00 <col:12, line:49:5> has_else     |                     |-RecoveryExpr 0x12c026cd0 <line:42:16, col:53> '_Bool' contains-errors     |                     |-CompoundStmt 0x12c026cf0 <col:56, line:44:5>     |                     `-IfStmt 0x12c026ed0 <col:12, line:49:5> has_else     |                       |-RecoveryExpr 0x12c026d20 <line:44:16, col:53> '_Bool' contains-errors     |                       |-CompoundStmt 0x12c026d40 <col:56, line:46:5>     |                       `-CompoundStmt 0x12c026eb8 <col:12, line:49:5>     |                         `-ReturnStmt 0x12c026ea8 <line:48:9, col:19>     |                           `-ParenExpr 0x12c026e88 <col:16, col:19> 'int'     |                             `-UnaryOperator 0x12c026e70 <col:17, col:18> 'int' prefix '-'     |                               `-IntegerLiteral 0x12c026e50 <col:18> 'int' 1     |-IfStmt 0x12c027348 <line:52:5, line:55:5>     | |-BinaryOperator 0x12c027288 <line:52:9, col:16> 'int' '!='     | | |-ImplicitCastExpr 0x12c027270 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x12c027230 <col:9> 'int' lvalue Var 0x12c00ded0 'ret' 'int'     | | `-IntegerLiteral 0x12c027250 <col:16> 'int' 0     | `-CompoundStmt 0x12c027330 <col:19, line:55:5>     |   `-ReturnStmt 0x12c027320 <line:54:9, col:19>     |     `-ParenExpr 0x12c027300 <col:16, col:19> 'int'     |       `-UnaryOperator 0x12c0272e8 <col:17, col:18> 'int' prefix '-'     |         `-IntegerLiteral 0x12c0272c8 <col:18> 'int' 1     |-IfStmt 0x12c027588 <line:58:5, line:59:19>     | |-BinaryOperator 0x12c027500 <line:58:9, col:16> 'int' '!='     | | |-ImplicitCastExpr 0x12c0274e8 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x12c0274a8 <col:9> 'int' lvalue Var 0x12c00ded0 'ret' 'int'     | | `-IntegerLiteral 0x12c0274c8 <col:16> 'int' 0     | `-ReturnStmt 0x12c027578 <line:59:9, col:19>     |   `-ParenExpr 0x12c027558 <col:16, col:19> 'int'     |     `-UnaryOperator 0x12c027540 <col:17, col:18> 'int' prefix '-'     |       `-IntegerLiteral 0x12c027520 <col:18> 'int' 1     `-ReturnStmt 0x12c0275e8 <line:60:5, col:14>       `-ParenExpr 0x12c0275c8 <col:12, col:14> 'int'         `-IntegerLiteral 0x12c0275a8 <col:13> 'int' 0 ","20781":"`-FunctionDecl 0x15c829d08  col:9 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x15c829e08 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x15c829db0 <<invalid sloc>> Implicit 873 ","20528":"`-FunctionDecl 0x13c142220  col:20 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x13c142320 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x13c1422c8 <<invalid sloc>> Implicit 902 ","20510":"`-FunctionDecl 0x13e01e0c8  col:5 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x13e01e1c8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x13e01e230 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x13e01e298 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x13e01e170 <<invalid sloc>> Implicit 900 ","21182":"`-FunctionDecl 0x13580df10  line:1:6 invalid luaC_barrier_ 'void (int *, int *, int *)'   |-ParmVarDecl 0x13580dd28 <col:21, col:32> col:32 invalid L 'int *'   |-ParmVarDecl 0x13580dda8 <col:35, col:45> col:45 invalid o 'int *'   |-ParmVarDecl 0x13580de28 <col:48, col:58> col:58 invalid v 'int *'   `-CompoundStmt 0x135828710 <col:61, line:15:1>     |-CallExpr 0x135827d00 <line:3:3, col:72> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13580e288 <col:3> 'int ()' Function 0x13580e1d0 'lua_assert' 'int ()'     | `-BinaryOperator 0x135827ce0 <col:14, col:71> 'int' contains-errors '&&'     |   |-BinaryOperator 0x135827c58 <col:14, col:54> 'int' contains-errors '&&'     |   | |-BinaryOperator 0x135827948 <col:14, col:37> 'int' contains-errors '&&'     |   | | |-CallExpr 0x13580e3c8 <col:14, col:23> '<dependent type>' contains-errors     |   | | | |-DeclRefExpr 0x13580e388 <col:14> 'int ()' Function 0x13580e2d0 'isblack' 'int ()'     |   | | | `-RecoveryExpr 0x13580e3a8 <col:22> '<dependent type>' contains-errors lvalue     |   | | `-CallExpr 0x135827920 <col:28, col:37> '<dependent type>' contains-errors     |   | |   |-DeclRefExpr 0x1358278e0 <col:28> 'int ()' Function 0x135827828 'iswhite' 'int ()'     |   | |   `-RecoveryExpr 0x135827900 <col:36> '<dependent type>' contains-errors lvalue     |   | `-UnaryOperator 0x135827c40 <col:42, col:54> '<dependent type>' contains-errors prefix '!' cannot overflow     |   |   `-CallExpr 0x135827c10 <col:43, col:54> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x135827a48 <col:43> 'int ()' Function 0x135827990 'isdead' 'int ()'     |   |     |-RecoveryExpr 0x135827bf0 <col:50> '<dependent type>' contains-errors lvalue     |   |     `-RecoveryExpr 0x135827a80 <col:53> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x135827cc8 <col:59, col:71> '<dependent type>' contains-errors prefix '!' cannot overflow     |     `-CallExpr 0x135827c98 <col:60, col:71> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x135827b08 <col:60> 'int ()' Function 0x135827990 'isdead' 'int ()'     |       |-RecoveryExpr 0x135827c78 <col:67> '<dependent type>' contains-errors lvalue     |       `-RecoveryExpr 0x135827b40 <col:70> '<dependent type>' contains-errors lvalue     `-IfStmt 0x1358286e0 <line:4:3, line:14:3> has_else       |-CallExpr 0x135827e88 <line:4:7, col:22> '<dependent type>' contains-errors       | |-DeclRefExpr 0x135827e08 <col:7> 'int ()' Function 0x135827d50 'keepinvariant' 'int ()'       | `-RecoveryExpr 0x135827e68 <col:21> '<dependent type>' contains-errors lvalue       |-CompoundStmt 0x135828470 <col:25, line:10:3>       | |-CallExpr 0x135828038 <line:5:5, col:26> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x135827f90 <col:5> 'int ()' Function 0x135827ed8 'reallymarkobject' 'int ()'       | | |-RecoveryExpr 0x135828018 <col:22> '<dependent type>' contains-errors lvalue       | | `-RecoveryExpr 0x135827fc8 <col:25> '<dependent type>' contains-errors lvalue       | `-IfStmt 0x135828450 <line:6:5, line:9:5>       |   |-CallExpr 0x135828188 <line:6:9, col:16> '<dependent type>' contains-errors       |   | |-DeclRefExpr 0x135828148 <col:9> 'int ()' Function 0x135828090 'isold' 'int ()'       |   | `-RecoveryExpr 0x135828168 <col:15> '<dependent type>' contains-errors lvalue       |   `-CompoundStmt 0x135828430 <col:19, line:9:5>       |     |-CallExpr 0x135828250 <line:7:7, col:27> '<dependent type>' contains-errors       |     | |-DeclRefExpr 0x1358281b0 <col:7> 'int ()' Function 0x13580e1d0 'lua_assert' 'int ()'       |     | `-UnaryOperator 0x135828238 <col:18, col:26> '<dependent type>' contains-errors prefix '!' cannot overflow       |     |   `-CallExpr 0x135828210 <col:19, col:26> '<dependent type>' contains-errors       |     |     |-DeclRefExpr 0x1358281d0 <col:19> 'int ()' Function 0x135828090 'isold' 'int ()'       |     |     `-RecoveryExpr 0x1358281f0 <col:25> '<dependent type>' contains-errors lvalue       |     `-CallExpr 0x135828400 <line:8:7, col:23> '<dependent type>' contains-errors       |       |-DeclRefExpr 0x135828358 <col:7> 'int ()' Function 0x1358282a0 'setage' 'int ()'       |       |-RecoveryExpr 0x135828378 <col:14> '<dependent type>' contains-errors lvalue       |       `-RecoveryExpr 0x1358283e0 <col:17> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x1358286d0 <line:11:8, line:14:3> ","21213":"`-FunctionDecl 0x152141958  line:1:20 invalid __io_fill_cqe 'int (struct io_ring_ctx *, int, int, int)' static inline   |-ParmVarDecl 0x152128668 <col:34, col:54> col:54 used ctx 'struct io_ring_ctx *'   |-ParmVarDecl 0x1521286e8 <col:59, col:63> col:63 invalid user_data 'int'   |-ParmVarDecl 0x152128768 <line:2:6, col:10> col:10 invalid res 'int'   |-ParmVarDecl 0x152141800 <col:15, col:19> col:19 invalid cflags 'int'   `-CompoundStmt 0x152142620 <line:3:1, line:15:1>     |-DeclStmt 0x152141c08 <line:4:2, col:26>     | |-RecordDecl 0x152141a20 <col:2, col:9> col:9 struct io_uring_cqe     | `-VarDecl 0x152141b88 <col:2, col:23> col:23 used cqe 'struct io_uring_cqe *'     |-BinaryOperator 0x152141e80 <line:7:2, col:22> 'struct io_uring_cqe *' '='     | |-DeclRefExpr 0x152141c20 <col:2> 'struct io_uring_cqe *' lvalue Var 0x152141b88 'cqe' 'struct io_uring_cqe *'     | `-ImplicitCastExpr 0x152141e68 <col:8, col:22> 'struct io_uring_cqe *' <IntegralToPointer>     |   `-CallExpr 0x152141e28 <col:8, col:22> 'int'     |     |-ImplicitCastExpr 0x152141e10 <col:8> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x152141da0 <col:8> 'int ()' Function 0x152141ce8 'io_get_cqe' 'int ()'     |     `-ImplicitCastExpr 0x152141e50 <col:19> 'struct io_ring_ctx *' <LValueToRValue>     |       `-DeclRefExpr 0x152141dc0 <col:19> 'struct io_ring_ctx *' lvalue ParmVar 0x152128668 'ctx' 'struct io_ring_ctx *'     |-IfStmt 0x1521423e0 <line:8:2, line:13:2>     | |-CallExpr 0x152141fd8 <line:8:6, col:16> 'int'     | | |-ImplicitCastExpr 0x152141fc0 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x152141f80 <col:6> 'int ()' Function 0x152141ec8 'likely' 'int ()'     | | `-ImplicitCastExpr 0x152142000 <col:13> 'struct io_uring_cqe *' <LValueToRValue>     | |   `-DeclRefExpr 0x152141fa0 <col:13> 'struct io_uring_cqe *' lvalue Var 0x152141b88 'cqe' 'struct io_uring_cqe *'     | `-CompoundStmt 0x1521423b0 <col:19, line:13:2>     |   |-CallExpr 0x152142198 <line:9:3, col:39> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1521420f8 <col:3> 'int ()' Function 0x152142040 'WRITE_ONCE' 'int ()'     |   | |-RecoveryExpr 0x152142150 <col:14, col:19> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x152142118 <col:14> 'struct io_uring_cqe *' lvalue Var 0x152141b88 'cqe' 'struct io_uring_cqe *'     |   | `-RecoveryExpr 0x152142178 <col:30> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x152142268 <line:10:3, col:27> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1521421c8 <col:3> 'int ()' Function 0x152142040 'WRITE_ONCE' 'int ()'     |   | |-RecoveryExpr 0x152142220 <col:14, col:19> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x1521421e8 <col:14> 'struct io_uring_cqe *' lvalue Var 0x152141b88 'cqe' 'struct io_uring_cqe *'     |   | `-RecoveryExpr 0x152142248 <col:24> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x152142338 <line:11:3, col:32> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x152142298 <col:3> 'int ()' Function 0x152142040 'WRITE_ONCE' 'int ()'     |   | |-RecoveryExpr 0x1521422f0 <col:14, col:19> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x1521422b8 <col:14> 'struct io_uring_cqe *' lvalue Var 0x152141b88 'cqe' 'struct io_uring_cqe *'     |   | `-RecoveryExpr 0x152142318 <col:26> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x1521423a0 <line:12:3, col:10>     |     `-RecoveryExpr 0x152142380 <col:10> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x152142610 <line:14:2, col:67>       `-CallExpr 0x1521425c0 <col:9, col:67> '<dependent type>' contains-errors         |-DeclRefExpr 0x1521424e0 <col:9> 'int ()' Function 0x152142428 'io_cqring_event_overflow' 'int ()'         |-DeclRefExpr 0x152142500 <col:34> 'struct io_ring_ctx *' lvalue ParmVar 0x152128668 'ctx' 'struct io_ring_ctx *'         |-RecoveryExpr 0x152142520 <col:39> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x152142540 <col:50> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x152142560 <col:55> '<dependent type>' contains-errors lvalue         |-IntegerLiteral 0x152142580 <col:63> 'int' 0         `-IntegerLiteral 0x1521425a0 <col:66> 'int' 0 ","21183":"`-FunctionDecl 0x12b80ddf0  line:2:1 invalid mono_reflection_create_dynamic_method 'void (int *)'   |-ParmVarDecl 0x12b80dd28 <col:40, col:69> col:69 invalid mb 'int *'   `-CompoundStmt 0x12b80dea0 <line:3:1, col:2> ","21022":"`-FunctionDecl 0x128111f18  line:1:1 invalid lexer_compare_identifiers 'int (int *, const int *, const int *)'   |-ParmVarDecl 0x128111d28 <col:28, col:46> col:46 invalid context_p 'int *'   |-ParmVarDecl 0x128111da8 <line:2:28, col:56> col:56 invalid left_p 'const int *'   |-ParmVarDecl 0x128111e28 <line:3:28, col:56> col:56 invalid right_p 'const int *'   `-CompoundStmt 0x105009220 <line:4:1, line:36:1>     |-IfStmt 0x1281120e0 <line:7:3, line:10:3>     | |-BinaryOperator 0x128112098 <line:7:7, col:26> 'int' contains-errors '!='     | | |-RecoveryExpr 0x128112078 <col:7> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x128112010 <col:17, col:26> '<dependent type>' contains-errors lvalue ->length     | |   `-RecoveryExpr 0x128111ff0 <col:17> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1281120d0 <line:8:3, line:10:3>     |-IfStmt 0x105008918 <line:12:3, line:15:3>     | |-RecoveryExpr 0x1281121a0 <line:12:7, col:61> '_Bool' contains-errors     | `-CompoundStmt 0x105008900 <line:13:3, line:15:3>     |   `-ReturnStmt 0x1050088f0 <line:14:5, col:86>     |     `-CallExpr 0x1050088b8 <col:12, col:86> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x128112320 <col:12> 'int ()' Function 0x128112268 'lexer_compare_identifier_to_chars' 'int ()'     |       |-CXXDependentScopeMemberExpr 0x128112360 <col:47, col:56> '<dependent type>' contains-errors lvalue ->char_p     |       | `-RecoveryExpr 0x128112340 <col:47> '<dependent type>' contains-errors lvalue     |       |-CXXDependentScopeMemberExpr 0x105008800 <col:64, col:72> '<dependent type>' contains-errors lvalue ->char_p     |       | `-RecoveryExpr 0x1281123a8 <col:64> '<dependent type>' contains-errors lvalue     |       `-RecoveryExpr 0x105008898 <col:80> '<dependent type>' contains-errors lvalue     |-IfStmt 0x105008bb8 <line:17:3, line:20:3>     | |-RecoveryExpr 0x1050089d8 <line:17:7, col:62> '_Bool' contains-errors     | `-CompoundStmt 0x105008ba0 <line:18:3, line:20:3>     |   `-ReturnStmt 0x105008b90 <line:19:5, col:86>     |     `-CallExpr 0x105008b58 <col:12, col:86> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x1050089f8 <col:12> 'int ()' Function 0x128112268 'lexer_compare_identifier_to_chars' 'int ()'     |       |-CXXDependentScopeMemberExpr 0x105008a38 <col:47, col:55> '<dependent type>' contains-errors lvalue ->char_p     |       | `-RecoveryExpr 0x105008a18 <col:47> '<dependent type>' contains-errors lvalue     |       |-CXXDependentScopeMemberExpr 0x105008aa0 <col:63, col:72> '<dependent type>' contains-errors lvalue ->char_p     |       | `-RecoveryExpr 0x105008a80 <col:63> '<dependent type>' contains-errors lvalue     |       `-RecoveryExpr 0x105008b38 <col:80> '<dependent type>' contains-errors lvalue     `-IfStmt 0x105008f58 <line:22:3, line:27:3>       |-BinaryOperator 0x105008c50 <line:22:7, col:17> 'int' contains-errors '<='       | |-RecoveryExpr 0x105008c30 <col:7> '<dependent type>' contains-errors lvalue       | `-IntegerLiteral 0x105008bf0 <col:17> 'int' 64       `-CompoundStmt 0x105008f40 <line:23:3, line:27:3>         `-CallExpr 0x105008e80 <line:25:5, col:64> '<dependent type>' contains-errors           |-DeclRefExpr 0x105008d50 <col:5> 'int ()' Function 0x105008c98 'lexer_convert_ident_to_cesu8' 'int ()'           |-RecoveryExpr 0x105008e40 <col:35> '<dependent type>' contains-errors lvalue           |-CXXDependentScopeMemberExpr 0x105008da8 <col:42, col:50> '<dependent type>' contains-errors lvalue ->char_p           | `-RecoveryExpr 0x105008d88 <col:42> '<dependent type>' contains-errors lvalue           `-RecoveryExpr 0x105008e60 <col:58> '<dependent type>' contains-errors lvalue ","20789":"`-FunctionDecl 0x142141800  line:1:16 invalid check_packet_type 'int (struct dhcp_packet *)' static   |-ParmVarDecl 0x142128668 <col:34, col:54> col:54 used packet 'struct dhcp_packet *'   `-CompoundStmt 0x142142148 <line:2:1, line:23:1>     |-IfStmt 0x1421419d0 <line:5:2, line:6:10>     | |-BinaryOperator 0x142141980 <line:5:6, col:22> 'int' contains-errors '!='     | | |-RecoveryExpr 0x142141900 <col:6, col:14> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x1421418c8 <col:6> 'struct dhcp_packet *' lvalue ParmVar 0x142128668 'packet' 'struct dhcp_packet *'     | | `-RecoveryExpr 0x142141960 <col:22> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1421419c0 <line:6:3, col:10>     |   `-IntegerLiteral 0x1421419a0 <col:10> 'int' 0     |-IfStmt 0x142141af8 <line:8:2, line:9:10>     | |-BinaryOperator 0x142141aa8 <line:8:6, col:20> 'int' contains-errors '!='     | | |-RecoveryExpr 0x142141a28 <col:6, col:14> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x1421419f0 <col:6> 'struct dhcp_packet *' lvalue ParmVar 0x142128668 'packet' 'struct dhcp_packet *'     | | `-RecoveryExpr 0x142141a88 <col:20> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x142141ae8 <line:9:3, col:10>     |   `-IntegerLiteral 0x142141ac8 <col:10> 'int' 0     |-IfStmt 0x142141dc0 <line:13:2, line:14:10>     | |-UnaryOperator 0x142141d78 <line:13:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x142141d60 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x142141d40 <col:7> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x142141db0 <line:14:3, col:10>     |   `-IntegerLiteral 0x142141d90 <col:10> 'int' 0     |-IfStmt 0x142141f20 <line:16:2, line:17:10>     | |-BinaryOperator 0x142141ed0 <line:16:6, col:14> 'int' contains-errors '<'     | | |-UnaryOperator 0x142141e98 <col:6, col:7> '<dependent type>' contains-errors prefix '*' cannot overflow     | | | `-ImplicitCastExpr 0x142141e80 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-RecoveryExpr 0x142141e60 <col:7> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x142141eb0 <col:14> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x142141f10 <line:17:3, col:10>     |   `-IntegerLiteral 0x142141ef0 <col:10> 'int' 0     |-IfStmt 0x142142080 <line:19:2, line:20:10>     | |-BinaryOperator 0x142142030 <line:19:6, col:14> 'int' contains-errors '>'     | | |-UnaryOperator 0x142141ff8 <col:6, col:7> '<dependent type>' contains-errors prefix '*' cannot overflow     | | | `-ImplicitCastExpr 0x142141fe0 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-RecoveryExpr 0x142141fc0 <col:7> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x142142010 <col:14> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x142142070 <line:20:3, col:10>     |   `-IntegerLiteral 0x142142050 <col:10> 'int' 0     `-ReturnStmt 0x142142138 <line:22:2, col:10>       `-UnaryOperator 0x142142120 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow         `-ImplicitCastExpr 0x142142108 <col:10> '<dependent type>' contains-errors <LValueToRValue>           `-RecoveryExpr 0x1421420e8 <col:10> '<dependent type>' contains-errors lvalue ","20257":"`-FunctionDecl 0x13100ddc8  line:1:12 invalid IPCRenderer 'int (int)'   |-ParmVarDecl 0x13100dcf0 <col:24, <invalid sloc>> col:26 invalid 'int'   `-CompoundStmt 0x13100e298 <line:2:63, line:11:3>     `-CallExpr 0x13100e1d8 <line:4:5, col:24> '<dependent type>' contains-errors       |-DeclRefExpr 0x13100e158 <col:5> 'int ()' Function 0x13100e0a0 'DCHECK' 'int ()'       `-RecoveryExpr 0x13100e1b8 <col:12> '<dependent type>' contains-errors lvalue ","20565":"`-FunctionDecl 0x14100ddf0  line:1:13 invalid ati_cursor_define 'void (int *)' static   |-ParmVarDecl 0x14100dd28 <col:31, col:44> col:44 referenced invalid s 'int *'   `-CompoundStmt 0x141029520 <line:2:1, line:25:1>     |-DeclStmt 0x14100e078 <line:5:5, col:22>     | |-VarDecl 0x14100ded0 <col:5, col:9> col:9 used i 'int'     | |-VarDecl 0x14100df50 <col:5, col:12> col:12 used j 'int'     | `-VarDecl 0x14100dfd0 <col:5, col:21> col:15 used idx 'int' cinit     |   `-IntegerLiteral 0x14100e038 <col:21> 'int' 0     |-IfStmt 0x141027448 <line:7:5, line:9:5>     | |-BinaryOperator 0x141027400 <line:7:9, col:46> 'int' contains-errors '||'     | | |-ParenExpr 0x14100e370 <col:9, col:38> '<dependent type>' contains-errors     | | | `-BinaryOperator 0x14100e350 <col:10, col:37> '<dependent type>' contains-errors '&'     | | |   |-CXXDependentScopeMemberExpr 0x14100e0f8 <col:10, col:18> '<dependent type>' contains-errors lvalue .cur_offset     | | |   | `-CXXDependentScopeMemberExpr 0x14100e0b0 <col:10, col:13> '<dependent type>' contains-errors lvalue ->regs     | | |   |   `-RecoveryExpr 0x14100e090 <col:10> '<dependent type>' contains-errors lvalue     | | |   `-CallExpr 0x14100e328 <col:31, col:37> 'int'     | | |     |-ImplicitCastExpr 0x14100e310 <col:31> 'int (*)()' <FunctionToPointerDecay>     | | |     | `-DeclRefExpr 0x14100e2a0 <col:31> 'int ()' Function 0x14100e1e8 'BIT' 'int ()'     | | |     `-IntegerLiteral 0x14100e2c0 <col:35> 'int' 31     | | `-CXXDependentScopeMemberExpr 0x14100e3b0 <col:43, col:46> '<dependent type>' contains-errors lvalue ->cursor_guest_mode     | |   `-RecoveryExpr 0x14100e390 <col:43> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x141027430 <col:65, line:9:5>     |   `-ReturnStmt 0x141027420 <line:8:9>     |-ForStmt 0x141027e08 <line:13:5, line:18:5>     | |-BinaryOperator 0x1410278c8 <line:13:10, col:14> 'int' '='     | | |-DeclRefExpr 0x141027888 <col:10> 'int' lvalue Var 0x14100ded0 'i' 'int'     | | `-IntegerLiteral 0x1410278a8 <col:14> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x141027940 <col:17, col:21> 'int' '<'     | | |-ImplicitCastExpr 0x141027928 <col:17> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x1410278e8 <col:17> 'int' lvalue Var 0x14100ded0 'i' 'int'     | | `-IntegerLiteral 0x141027908 <col:21> 'int' 64     | |-UnaryOperator 0x141027980 <col:25, col:26> 'int' postfix '++'     | | `-DeclRefExpr 0x141027960 <col:25> 'int' lvalue Var 0x14100ded0 'i' 'int'     | `-CompoundStmt 0x141027df0 <col:30, line:18:5>     |   `-ForStmt 0x141027db8 <line:14:9, line:17:9>     |     |-BinaryOperator 0x1410279d8 <line:14:14, col:18> 'int' '='     |     | |-DeclRefExpr 0x141027998 <col:14> 'int' lvalue Var 0x14100df50 'j' 'int'     |     | `-IntegerLiteral 0x1410279b8 <col:18> 'int' 0     |     |-<<<NULL>>>     |     |-BinaryOperator 0x141027a50 <col:21, col:25> 'int' '<'     |     | |-ImplicitCastExpr 0x141027a38 <col:21> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x1410279f8 <col:21> 'int' lvalue Var 0x14100df50 'j' 'int'     |     | `-IntegerLiteral 0x141027a18 <col:25> 'int' 8     |     |-BinaryOperator 0x141027ae0 <col:28, col:36> 'int' ','     |     | |-UnaryOperator 0x141027a90 <col:28, col:29> 'int' postfix '++'     |     | | `-DeclRefExpr 0x141027a70 <col:28> 'int' lvalue Var 0x14100df50 'j' 'int'     |     | `-UnaryOperator 0x141027ac8 <col:33, col:36> 'int' postfix '++'     |     |   `-DeclRefExpr 0x141027aa8 <col:33> 'int' lvalue Var 0x14100dfd0 'idx' 'int'     |     `-CompoundStmt 0x141027da8 <col:40, line:17:9>     |-IfStmt 0x141028128 <line:19:5, line:21:5>     | |-UnaryOperator 0x141027ec0 <line:19:9, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x141027ea8 <col:10, col:13> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x141027e60 <col:10, col:13> '<dependent type>' contains-errors lvalue ->cursor     | |     `-RecoveryExpr 0x141027e40 <col:10> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x141028110 <col:21, line:21:5>     |   `-BinaryOperator 0x1410280f0 <line:20:9, col:40> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x141027f20 <col:9, col:12> '<dependent type>' contains-errors lvalue ->cursor     |     | `-RecoveryExpr 0x141027ef8 <col:9> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x141027ed8 <col:9> 'int *' lvalue ParmVar 0x14100dd28 's' 'int *'     |     `-CallExpr 0x1410280c0 <col:21, col:40> 'int'     |       |-ImplicitCastExpr 0x1410280a8 <col:21> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x141028048 <col:21> 'int ()' Function 0x141027f90 'cursor_alloc' 'int ()'     |       |-IntegerLiteral 0x141028068 <col:34> 'int' 64     |       `-IntegerLiteral 0x141028088 <col:38> 'int' 64     `-CallExpr 0x1410294f0 <line:24:5, col:44> '<dependent type>' contains-errors       |-DeclRefExpr 0x1410293b8 <col:5> 'int ()' Function 0x141029300 'dpy_cursor_define' 'int ()'       |-CXXDependentScopeMemberExpr 0x141029440 <col:23, col:30> '<dependent type>' contains-errors lvalue .con       | `-CXXDependentScopeMemberExpr 0x1410293f8 <col:23, col:26> '<dependent type>' contains-errors lvalue ->vga       |   `-RecoveryExpr 0x1410293d8 <col:23> '<dependent type>' contains-errors lvalue       `-CXXDependentScopeMemberExpr 0x1410294a8 <col:35, col:38> '<dependent type>' contains-errors lvalue ->cursor         `-RecoveryExpr 0x141029488 <col:35> '<dependent type>' contains-errors lvalue ","20675":"`-FunctionDecl 0x146928750  line:1:6 arch_pick_mmap_layout 'void (struct mm_struct *)'   |-ParmVarDecl 0x146928648 <col:28, col:46> col:46 used mm 'struct mm_struct *'   `-CompoundStmt 0x1469432c8 <line:2:1, line:28:1>     |-DeclStmt 0x146940c90 <line:3:2, col:42>     | `-VarDecl 0x146940a60 <col:2, col:41> col:16 used random_factor 'unsigned long' cinit     |   `-ImplicitCastExpr 0x146940c78 <col:32, col:41> 'unsigned long' <IntegralCast>     |     `-CallExpr 0x146940c58 <col:32, col:41> 'int'     |       `-ImplicitCastExpr 0x146940c40 <col:32> 'int (*)()' <FunctionToPointerDecay>     |         `-DeclRefExpr 0x146940bf0 <col:32> 'int ()' Function 0x146940b38 'mmap_rnd' 'int ()'     |-DeclStmt 0x146940d28 <line:4:2, col:19>     | `-VarDecl 0x146940cc0 <col:2, col:16> col:16 used gap 'unsigned long'     |-BinaryOperator 0x146940f08 <line:7:2, col:27> 'unsigned long' contains-errors '='     | |-DeclRefExpr 0x146940d40 <col:2> 'unsigned long' lvalue Var 0x146940cc0 'gap' 'unsigned long'     | `-CallExpr 0x146940ee0 <col:8, col:27> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x146940e40 <col:8> 'int ()' Function 0x146940d88 'rlimit' 'int ()'     |   `-RecoveryExpr 0x146940ec0 <col:15> '<dependent type>' contains-errors lvalue     `-IfStmt 0x146943298 <line:8:2, line:27:2> has_else       |-RecoveryExpr 0x146941188 <line:8:6, line:11:6> '_Bool' contains-errors       |-CompoundStmt 0x146941490 <col:31, line:15:2>       | |-BinaryOperator 0x1469412c0 <line:12:3, col:40> '<dependent type>' contains-errors '='       | | |-RecoveryExpr 0x1469411e0 <col:3, col:7> '<dependent type>' contains-errors lvalue       | | | `-DeclRefExpr 0x1469411a8 <col:3> 'struct mm_struct *' lvalue ParmVar 0x146928648 'mm' 'struct mm_struct *'       | | `-BinaryOperator 0x1469412a0 <col:19, col:40> '<dependent type>' contains-errors '+'       | |   |-RecoveryExpr 0x146941280 <col:19> '<dependent type>' contains-errors lvalue       | |   `-DeclRefExpr 0x146941220 <col:40> 'unsigned long' lvalue Var 0x146940a60 'random_factor' 'unsigned long'       | |-BinaryOperator 0x146941398 <line:13:3, col:27> '<dependent type>' contains-errors '='       | | |-RecoveryExpr 0x146941318 <col:3, col:7> '<dependent type>' contains-errors lvalue       | | | `-DeclRefExpr 0x1469412e0 <col:3> 'struct mm_struct *' lvalue ParmVar 0x146928648 'mm' 'struct mm_struct *'       | | `-RecoveryExpr 0x146941378 <col:27> '<dependent type>' contains-errors lvalue       | `-BinaryOperator 0x146941470 <line:14:3, col:20> '<dependent type>' contains-errors '='       |   |-RecoveryExpr 0x1469413f0 <col:3, col:7> '<dependent type>' contains-errors lvalue       |   | `-DeclRefExpr 0x1469413b8 <col:3> 'struct mm_struct *' lvalue ParmVar 0x146928648 'mm' 'struct mm_struct *'       |   `-RecoveryExpr 0x146941450 <col:20> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x146943260 <line:15:9, line:27:2>         |-DeclStmt 0x146941570 <line:17:3, col:40>         | `-VarDecl 0x1469414d0 <col:3, col:29> col:17 used task_size 'unsigned long' cinit         |   `-RecoveryExpr 0x146941550 <col:29> '<dependent type>' contains-errors lvalue         |-IfStmt 0x146941790 <line:19:3, line:20:23>         | |-BinaryOperator 0x146941678 <line:19:7, col:26> 'int' '<'         | | |-ImplicitCastExpr 0x146941648 <col:7> 'unsigned long' <LValueToRValue>         | | | `-DeclRefExpr 0x146941588 <col:7> 'unsigned long' lvalue Var 0x146940cc0 'gap' 'unsigned long'         | | `-ImplicitCastExpr 0x146941660 <col:13, col:26> 'unsigned long' <IntegralCast>         | |   `-BinaryOperator 0x146941628 <col:13, col:26> 'int' '*'         | |     |-BinaryOperator 0x1469415e8 <col:13, col:19> 'int' '*'         | |     | |-IntegerLiteral 0x1469415a8 <col:13> 'int' 128         | |     | `-IntegerLiteral 0x1469415c8 <col:19> 'int' 1024         | |     `-IntegerLiteral 0x146941608 <col:26> 'int' 1024         | `-BinaryOperator 0x146941770 <line:20:4, col:23> 'unsigned long' '='         |   |-DeclRefExpr 0x146941698 <col:4> 'unsigned long' lvalue Var 0x146940cc0 'gap' 'unsigned long'         |   `-ImplicitCastExpr 0x146941758 <col:10, col:23> 'unsigned long' <IntegralCast>         |     `-BinaryOperator 0x146941738 <col:10, col:23> 'int' '*'         |       |-BinaryOperator 0x1469416f8 <col:10, col:16> 'int' '*'         |       | |-IntegerLiteral 0x1469416b8 <col:10> 'int' 128         |       | `-IntegerLiteral 0x1469416d8 <col:16> 'int' 1024         |       `-IntegerLiteral 0x146941718 <col:23> 'int' 1024         |-IfStmt 0x146942e60 <line:21:3, line:22:28>         | |-BinaryOperator 0x1469418f0 <line:21:7, col:31> 'int' contains-errors '>'         | | |-ImplicitCastExpr 0x1469418d8 <col:7> 'unsigned long' <LValueToRValue>         | | | `-DeclRefExpr 0x1469417b0 <col:7> 'unsigned long' lvalue Var 0x146940cc0 'gap' 'unsigned long'         | | `-ParenExpr 0x1469418b8 <col:13, col:31> 'unsigned long' contains-errors         | |   `-BinaryOperator 0x146941898 <col:14, col:30> 'unsigned long' contains-errors '*'         | |     |-BinaryOperator 0x146941840 <col:14, col:26> 'unsigned long' contains-errors '\/'         | |     | |-ImplicitCastExpr 0x146941810 <col:14> 'unsigned long' contains-errors <LValueToRValue>         | |     | | `-DeclRefExpr 0x1469417d0 <col:14> 'unsigned long' contains-errors lvalue Var 0x1469414d0 'task_size' 'unsigned long'         | |     | `-ImplicitCastExpr 0x146941828 <col:26> 'unsigned long' <IntegralCast>         | |     |   `-IntegerLiteral 0x1469417f0 <col:26> 'int' 6         | |     `-ImplicitCastExpr 0x146941880 <col:30> 'unsigned long' <IntegralCast>         | |       `-IntegerLiteral 0x146941860 <col:30> 'int' 5         | `-BinaryOperator 0x146942e40 <line:22:4, col:28> 'unsigned long' contains-errors '='         |   |-DeclRefExpr 0x146941910 <col:4> 'unsigned long' lvalue Var 0x146940cc0 'gap' 'unsigned long'         |   `-ParenExpr 0x146942e20 <col:10, col:28> 'unsigned long' contains-errors         |     `-BinaryOperator 0x146942e00 <col:11, col:27> 'unsigned long' contains-errors '*'         |       |-BinaryOperator 0x1469419a0 <col:11, col:23> 'unsigned long' contains-errors '\/'         |       | |-ImplicitCastExpr 0x146941970 <col:11> 'unsigned long' contains-errors <LValueToRValue>         |       | | `-DeclRefExpr 0x146941930 <col:11> 'unsigned long' contains-errors lvalue Var 0x1469414d0 'task_size' 'unsigned long'         |       | `-ImplicitCastExpr 0x146941988 <col:23> 'unsigned long' <IntegralCast>         |       |   `-IntegerLiteral 0x146941950 <col:23> 'int' 6         |       `-ImplicitCastExpr 0x1469419e0 <col:27> 'unsigned long' <IntegralCast>         |         `-IntegerLiteral 0x1469419c0 <col:27> 'int' 5         |-BinaryOperator 0x146943108 <line:24:3, col:61> '<dependent type>' contains-errors '='         | |-RecoveryExpr 0x146942eb8 <col:3, col:7> '<dependent type>' contains-errors lvalue         | | `-DeclRefExpr 0x146942e80 <col:3> 'struct mm_struct *' lvalue ParmVar 0x146928648 'mm' 'struct mm_struct *'         | `-CallExpr 0x1469430e0 <col:19, col:61> 'int' contains-errors         |   |-ImplicitCastExpr 0x1469430c8 <col:19> 'int (*)()' <FunctionToPointerDecay>         |   | `-DeclRefExpr 0x146942fc0 <col:19> 'int ()' Function 0x146942f08 'PAGE_ALIGN' 'int ()'         |   `-BinaryOperator 0x1469430a8 <col:30, col:48> 'unsigned long' contains-errors '-'         |     |-BinaryOperator 0x146943050 <col:30, col:42> 'unsigned long' contains-errors '-'         |     | |-ImplicitCastExpr 0x146943020 <col:30> 'unsigned long' contains-errors <LValueToRValue>         |     | | `-DeclRefExpr 0x146942fe0 <col:30> 'unsigned long' contains-errors lvalue Var 0x1469414d0 'task_size' 'unsigned long'         |     | `-ImplicitCastExpr 0x146943038 <col:42> 'unsigned long' <LValueToRValue>         |     |   `-DeclRefExpr 0x146943000 <col:42> 'unsigned long' lvalue Var 0x146940cc0 'gap' 'unsigned long'         |     `-ImplicitCastExpr 0x146943090 <col:48> 'unsigned long' <LValueToRValue>         |       `-DeclRefExpr 0x146943070 <col:48> 'unsigned long' lvalue Var 0x146940a60 'random_factor' 'unsigned long'         `-BinaryOperator 0x1469431e0 <line:25:3, col:27> '<dependent type>' contains-errors '='           |-RecoveryExpr 0x146943160 <col:3, col:7> '<dependent type>' contains-errors lvalue           | `-DeclRefExpr 0x146943128 <col:3> 'struct mm_struct *' lvalue ParmVar 0x146928648 'mm' 'struct mm_struct *'           `-RecoveryExpr 0x1469431c0 <col:27> '<dependent type>' contains-errors lvalue ","20649":"`-FunctionDecl 0x1420fbd18  line:1:17 invalid get_video_buffer 'int *(int *, int, int)' static   |-ParmVarDecl 0x1420fbb28 <col:34, col:48> col:48 invalid inlink 'int *'   |-ParmVarDecl 0x1420fbba8 <col:56, col:60> col:60 used w 'int'   |-ParmVarDecl 0x1420fbc28 <col:63, col:67> col:67 used h 'int'   `-CompoundStmt 0x142115ad0 <line:2:1, line:24:1>     |-DeclStmt 0x1421153e8 <line:8:5, col:14>     | `-VarDecl 0x142115380 <col:5, col:9> col:9 used plane 'int'     `-IfStmt 0x1421154e0 <line:10:5, line:11:16>       |-UnaryOperator 0x142115480 <line:10:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-ImplicitCastExpr 0x142115468 <col:10> '<dependent type>' contains-errors <LValueToRValue>       |   `-RecoveryExpr 0x142115448 <col:10> '<dependent type>' contains-errors lvalue       `-ReturnStmt 0x1421154d0 <line:11:9, col:16>         `-RecoveryExpr 0x1421154b0 <col:16> '<dependent type>' contains-errors lvalue ","20175":"`-FunctionDecl 0x13a00e350  line:1:13 __reg_assign_32_into_64 'void (struct bpf_reg_state *)' static   |-ParmVarDecl 0x13a00e248 <col:37, col:59> col:59 used reg 'struct bpf_reg_state *'   `-CompoundStmt 0x13a026db8 <line:2:1, line:14:1>     |-BinaryOperator 0x13a026708 <line:3:2, col:25> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13a026680 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13a026648 <col:2> 'struct bpf_reg_state *' lvalue ParmVar 0x13a00e248 'reg' 'struct bpf_reg_state *'     | `-RecoveryExpr 0x13a0266e0 <col:20, col:25> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x13a0266a8 <col:20> 'struct bpf_reg_state *' lvalue ParmVar 0x13a00e248 'reg' 'struct bpf_reg_state *'     |-BinaryOperator 0x13a0267e8 <line:4:2, col:25> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13a026760 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13a026728 <col:2> 'struct bpf_reg_state *' lvalue ParmVar 0x13a00e248 'reg' 'struct bpf_reg_state *'     | `-RecoveryExpr 0x13a0267c0 <col:20, col:25> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x13a026788 <col:20> 'struct bpf_reg_state *' lvalue ParmVar 0x13a00e248 'reg' 'struct bpf_reg_state *'     |-IfStmt 0x13a026b38 <line:6:2, line:9:21> has_else     | |-BinaryOperator 0x13a026948 <line:6:6, col:55> 'int' contains-errors '&&'     | | |-BinaryOperator 0x13a026888 <col:6, col:28> 'int' contains-errors '>='     | | | |-RecoveryExpr 0x13a026840 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x13a026808 <col:6> 'struct bpf_reg_state *' lvalue ParmVar 0x13a00e248 'reg' 'struct bpf_reg_state *'     | | | `-IntegerLiteral 0x13a026868 <col:28> 'int' 0     | | `-BinaryOperator 0x13a026928 <col:33, col:55> 'int' contains-errors '>='     | |   |-RecoveryExpr 0x13a0268e0 <col:33, col:38> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x13a0268a8 <col:33> 'struct bpf_reg_state *' lvalue ParmVar 0x13a00e248 'reg' 'struct bpf_reg_state *'     | |   `-IntegerLiteral 0x13a026908 <col:55> 'int' 0     | |-BinaryOperator 0x13a026a28 <line:7:3, col:26> '<dependent type>' contains-errors '='     | | |-RecoveryExpr 0x13a0269a0 <col:3, col:8> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x13a026968 <col:3> 'struct bpf_reg_state *' lvalue ParmVar 0x13a00e248 'reg' 'struct bpf_reg_state *'     | | `-RecoveryExpr 0x13a026a00 <col:21, col:26> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13a0269c8 <col:21> 'struct bpf_reg_state *' lvalue ParmVar 0x13a00e248 'reg' 'struct bpf_reg_state *'     | `-BinaryOperator 0x13a026b18 <line:9:3, col:21> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x13a026a80 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x13a026a48 <col:3> 'struct bpf_reg_state *' lvalue ParmVar 0x13a00e248 'reg' 'struct bpf_reg_state *'     |   `-RecoveryExpr 0x13a026af8 <col:21> '<dependent type>' contains-errors lvalue     `-IfStmt 0x13a026d88 <line:10:2, line:13:21> has_else       |-BinaryOperator 0x13a026be8 <line:10:6, col:28> 'int' contains-errors '>='       | |-RecoveryExpr 0x13a026ba0 <col:6, col:11> '<dependent type>' contains-errors lvalue       | | `-DeclRefExpr 0x13a026b68 <col:6> 'struct bpf_reg_state *' lvalue ParmVar 0x13a00e248 'reg' 'struct bpf_reg_state *'       | `-IntegerLiteral 0x13a026bc8 <col:28> 'int' 0       |-BinaryOperator 0x13a026cc8 <line:11:3, col:26> '<dependent type>' contains-errors '='       | |-RecoveryExpr 0x13a026c40 <col:3, col:8> '<dependent type>' contains-errors lvalue       | | `-DeclRefExpr 0x13a026c08 <col:3> 'struct bpf_reg_state *' lvalue ParmVar 0x13a00e248 'reg' 'struct bpf_reg_state *'       | `-RecoveryExpr 0x13a026ca0 <col:21, col:26> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x13a026c68 <col:21> 'struct bpf_reg_state *' lvalue ParmVar 0x13a00e248 'reg' 'struct bpf_reg_state *'       `-BinaryOperator 0x13a026d68 <line:13:3, col:21> '<dependent type>' contains-errors '='         |-RecoveryExpr 0x13a026d20 <col:3, col:8> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x13a026ce8 <col:3> 'struct bpf_reg_state *' lvalue ParmVar 0x13a00e248 'reg' 'struct bpf_reg_state *'         `-IntegerLiteral 0x13a026d48 <col:21> 'int' 0 ","20731":"`-FunctionDecl 0x15000de88  line:1:12 invalid h2_task_pre_conn 'int (int *, void *)' static   |-ParmVarDecl 0x15000dd28 <col:29, col:39> col:39 invalid c 'int *'   |-ParmVarDecl 0x15000dda8 <col:42, col:48> col:48 used arg 'void *'   `-CompoundStmt 0x1500290c8 <line:2:1, line:19:1>     |-IfStmt 0x15000e050 <line:5:5, line:7:5>     | |-UnaryOperator 0x15000dfd8 <line:5:9, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x15000dfc0 <col:10, col:13> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x15000df78 <col:10, col:13> '<dependent type>' contains-errors lvalue ->master     | |     `-RecoveryExpr 0x15000df58 <col:10> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x15000e038 <col:21, line:7:5>     |   `-ReturnStmt 0x15000e028 <line:6:9, col:16>     |     `-RecoveryExpr 0x15000e008 <col:16> '<dependent type>' contains-errors lvalue     |-CStyleCastExpr 0x15000e2a8 <line:10:5, col:11> 'void' <ToVoid>     | `-ImplicitCastExpr 0x15000e290 <col:11> 'void *' <LValueToRValue> part_of_explicit_cast     |   `-DeclRefExpr 0x15000e260 <col:11> 'void *' lvalue ParmVar 0x15000dda8 'arg' 'void *'     |-IfStmt 0x150029060 <line:11:5, line:17:5>     | |-CXXDependentScopeMemberExpr 0x15000e350 <line:11:9, col:14> '<dependent type>' contains-errors lvalue ->task     | | `-RecoveryExpr 0x15000e330 <col:9> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x150029030 <col:20, line:17:5>     |   |-CallExpr 0x150028a38 <line:12:9, line:13:28> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1500288b8 <line:12:9> 'int ()' Function 0x150028800 'ap_log_cerror' 'int ()'     |   | |-RecoveryExpr 0x1500289f8 <col:23> '<dependent type>' contains-errors lvalue     |   | |-RecoveryExpr 0x150028a18 <col:35> '<dependent type>' contains-errors lvalue     |   | |-IntegerLiteral 0x150028908 <col:49> 'int' 0     |   | |-RecoveryExpr 0x150028928 <col:52> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x150028990 <line:13:23> 'char[4]' lvalue \"STR\"     |   |-CallExpr 0x150028c70 <line:14:9, col:49> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x150028b60 <col:9> 'int ()' Function 0x150028aa8 'ap_add_input_filter' 'int ()'     |   | |-StringLiteral 0x150028b80 <col:29> 'char[4]' lvalue \"STR\"     |   | |-RecoveryExpr 0x150028c30 <col:36> '<dependent type>' contains-errors lvalue     |   | |-RecoveryExpr 0x150028c50 <col:42> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x150028bd0 <col:48> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x150028ea0 <line:15:9, col:50> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x150028d90 <col:9> 'int ()' Function 0x150028cd8 'ap_add_output_filter' 'int ()'     |   | |-StringLiteral 0x150028db0 <col:30> 'char[4]' lvalue \"STR\"     |   | |-RecoveryExpr 0x150028e60 <col:37> '<dependent type>' contains-errors lvalue     |   | |-RecoveryExpr 0x150028e80 <col:43> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x150028e00 <col:49> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x150028ff0 <line:16:9, col:50> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x150028ee0 <col:9> 'int ()' Function 0x150028cd8 'ap_add_output_filter' 'int ()'     |     |-StringLiteral 0x150028f00 <col:30> 'char[4]' lvalue \"STR\"     |     |-RecoveryExpr 0x150028fb0 <col:37> '<dependent type>' contains-errors lvalue     |     |-RecoveryExpr 0x150028fd0 <col:43> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x150028f50 <col:49> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1500290b8 <line:18:5, col:12>       `-RecoveryExpr 0x150029098 <col:12> '<dependent type>' contains-errors lvalue ","21064":"`-FunctionDecl 0x14d122758  line:1:5 ip_setsockopt 'int (struct sock *, int, int, char)'   |-ParmVarDecl 0x14d80e248 <col:19, col:32> col:32 used sk 'struct sock *'   |-ParmVarDecl 0x14d80e2c8 <col:36, col:40> col:40 used level 'int'   |-ParmVarDecl 0x14d80e348 <line:2:3, col:7> col:7 used optname 'int'   |-ParmVarDecl 0x14d122600 <col:16, col:21> col:21 __user 'char'   `-CompoundStmt 0x14d122db8 <line:3:1, line:22:1>     |-DeclStmt 0x14d1228e8 <line:4:2, col:9>     | `-VarDecl 0x14d122880 <col:2, col:6> col:6 used err 'int'     |-IfStmt 0x14d122a58 <line:6:2, line:7:11>     | |-BinaryOperator 0x14d122990 <line:6:6, col:15> 'int' contains-errors '!='     | | |-DeclRefExpr 0x14d122900 <col:6> 'int' lvalue ParmVar 0x14d80e2c8 'level' 'int'     | | `-RecoveryExpr 0x14d122970 <col:15> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14d122a48 <line:7:3, col:11>     |   `-UnaryOperator 0x14d122a30 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14d122a18 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14d1229f8 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14d122d50 <line:9:2, col:59> 'int' contains-errors '='     | |-DeclRefExpr 0x14d122a78 <col:2> 'int' lvalue Var 0x14d122880 'err' 'int'     | `-CallExpr 0x14d122d08 <col:8, col:59> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14d122bb0 <col:8> 'int ()' Function 0x14d122af8 'do_ip_setsockopt' 'int ()'     |   |-DeclRefExpr 0x14d122bd0 <col:25> 'struct sock *' lvalue ParmVar 0x14d80e248 'sk' 'struct sock *'     |   |-DeclRefExpr 0x14d122bf0 <col:29> 'int' lvalue ParmVar 0x14d80e2c8 'level' 'int'     |   |-DeclRefExpr 0x14d122c10 <col:36> 'int' lvalue ParmVar 0x14d80e348 'optname' 'int'     |   |-RecoveryExpr 0x14d122cc8 <col:45> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x14d122ce8 <col:53> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14d122da8 <line:21:2, col:9>       `-ImplicitCastExpr 0x14d122d90 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x14d122d70 <col:9> 'int' lvalue Var 0x14d122880 'err' 'int' ","20712":"`-FunctionDecl 0x12d00dfe8  line:1:1 COMPAT_SYSCALL_DEFINE6 'int (int, int, int, int, int)'   |-ParmVarDecl 0x12d00ded8 <col:24> col:24 mbind 'int'   |-ParmVarDecl 0x12d00de58 <col:31> col:31 compat_ulong_t 'int'   |-ParmVarDecl 0x12d00ddd8 <col:47> col:47 used start 'int'   |-ParmVarDecl 0x12d00dd58 <col:70> col:70 used len 'int'   |-ParmVarDecl 0x12d00dcd8 <line:2:26> col:26 used mode 'int'   `-CompoundStmt 0x12d0271c0 <line:4:1, line:23:1>     |-DeclStmt 0x12d00e1b8 <line:5:2, col:14>     | `-VarDecl 0x12d00e118 <col:2, col:13> col:7 used err 'long' cinit     |   `-ImplicitCastExpr 0x12d00e1a0 <col:13> 'long' <IntegralCast>     |     `-IntegerLiteral 0x12d00e180 <col:13> 'int' 0     |-DeclStmt 0x12d00e250 <line:6:2, col:23>     | `-VarDecl 0x12d00e1e8 <col:2, col:16> col:16 __user 'unsigned long'     |-DeclStmt 0x12d00e380 <line:7:2, col:35>     | |-VarDecl 0x12d00e280 <col:2, col:16> col:16 used nr_bits 'unsigned long'     | `-VarDecl 0x12d00e300 <col:2, col:25> col:25 used alloc_size 'unsigned long'     |-BinaryOperator 0x12d0269c8 <line:11:2, col:47> 'unsigned long' contains-errors '='     | |-DeclRefExpr 0x12d026770 <col:2> 'unsigned long' lvalue Var 0x12d00e300 'alloc_size' 'unsigned long'     | `-BinaryOperator 0x12d0269a8 <col:15, col:47> '<dependent type>' contains-errors '\/'     |   |-CallExpr 0x12d026978 <col:15, col:43> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12d026870 <col:15> 'int ()' Function 0x12d0267b8 'ALIGN' 'int ()'     |   | |-DeclRefExpr 0x12d026890 <col:21> 'unsigned long' lvalue Var 0x12d00e280 'nr_bits' 'unsigned long'     |   | `-RecoveryExpr 0x12d026958 <col:30> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x12d0268f8 <col:47> 'int' 8     `-IfStmt 0x12d026f78 <line:13:2, line:17:2>       |-RecoveryExpr 0x12d026a00 <line:13:6> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x12d026f68 <col:13, line:17:2> ","20972":"`-FunctionDecl 0x14e941978  line:1:10 invalid Curl_addHandleToPipeline 'int (struct SessionHandle *, struct curl_llist *)'   |-ParmVarDecl 0x14e928668 <col:35, col:57> col:57 used data 'struct SessionHandle *'   |-ParmVarDecl 0x14e941858 <line:2:35, col:54> col:54 used pipeline 'struct curl_llist *'   `-CompoundStmt 0x14e941d50 <line:3:1, line:7:1>     |-IfStmt 0x14e941ce8 <line:4:3, line:5:12>     | |-UnaryOperator 0x14e941c88 <line:4:6, col:60> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x14e941c50 <col:7, col:60> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x14e941b90 <col:7> 'int ()' Function 0x14e941ad8 'Curl_llist_insert_next' 'int ()'     | |   |-DeclRefExpr 0x14e941bb0 <col:30> 'struct curl_llist *' lvalue ParmVar 0x14e941858 'pipeline' 'struct curl_llist *'     | |   |-RecoveryExpr 0x14e941c08 <col:40, col:50> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x14e941bd0 <col:40> 'struct curl_llist *' lvalue ParmVar 0x14e941858 'pipeline' 'struct curl_llist *'     | |   `-DeclRefExpr 0x14e941c30 <col:56> 'struct SessionHandle *' lvalue ParmVar 0x14e928668 'data' 'struct SessionHandle *'     | `-ReturnStmt 0x14e941cd8 <line:5:5, col:12>     |   `-RecoveryExpr 0x14e941cb8 <col:12> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14e941d40 <line:6:3, col:10>       `-RecoveryExpr 0x14e941d20 <col:10> '<dependent type>' contains-errors lvalue ","20672":"`-FunctionDecl 0x12d00ddc8  line:1:1 invalid xmlParseDocTypeDecl 'int (int)'   |-ParmVarDecl 0x12d00dcf0 <col:21, col:38> col:38 referenced invalid ctxt 'int'   `-CompoundStmt 0x12d028038 <col:44, line:46:1>     |-DeclStmt 0x12d00df10 <line:2:5, col:31>     | `-VarDecl 0x12d00de90 <col:5, col:20> col:20 referenced invalid name 'const int *'     |-CallExpr 0x12d00e168 <line:7:5, col:11> 'int'     | |-ImplicitCastExpr 0x12d00e150 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12d00e0e0 <col:5> 'int ()' Function 0x12d00e028 'SKIP' 'int ()'     | `-IntegerLiteral 0x12d00e100 <col:10> 'int' 9     |-BinaryOperator 0x12d00e320 <line:12:5, col:29> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12d00e1b0 <col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12d00e190 <col:5> 'const int *' lvalue Var 0x12d00de90 'name' 'const int *'     | `-CallExpr 0x12d00e2f8 <col:12, col:29> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12d00e2b8 <col:12> 'int ()' Function 0x12d00e200 'xmlParseName' 'int ()'     |   `-RecoveryExpr 0x12d00e2d8 <col:25> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12d027618 <line:13:5, line:16:5>     | |-BinaryOperator 0x12d00e3b8 <line:13:9, col:17> 'int' contains-errors '=='     | | |-RecoveryExpr 0x12d00e340 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12d00e398 <col:17> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12d027600 <col:23, line:16:5>     |   `-CallExpr 0x12d0275c8 <line:14:2, line:15:15> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12d0274b8 <line:14:2> 'int ()' Function 0x12d027400 'xmlFatalErrMsg' 'int ()'     |     |-RecoveryExpr 0x12d0274d8 <col:17> '<dependent type>' contains-errors lvalue     |     |-RecoveryExpr 0x12d0275a8 <col:23> '<dependent type>' contains-errors lvalue     |     `-StringLiteral 0x12d027550 <line:15:10> 'char[4]' lvalue \"STR\"     |-BinaryOperator 0x12d0276e8 <line:17:5, col:24> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12d027680 <col:5, col:11> '<dependent type>' contains-errors lvalue ->intSubName     | | `-RecoveryExpr 0x12d027658 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12d027638 <col:5> 'int' lvalue ParmVar 0x12d00dcf0 'ctxt' 'int'     | `-RecoveryExpr 0x12d0276c8 <col:24> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12d0279b8 <line:24:5, line:26:5>     | |-RecoveryExpr 0x12d0278b0 <line:24:9, col:45> '_Bool' contains-errors     | `-CompoundStmt 0x12d0279a0 <col:48, line:26:5>     |   `-BinaryOperator 0x12d027980 <line:25:9, col:35> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x12d027918 <col:9, col:15> '<dependent type>' contains-errors lvalue ->hasExternalSubset     |     | `-RecoveryExpr 0x12d0278f0 <col:9> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x12d0278d0 <col:9> 'int' lvalue ParmVar 0x12d00dcf0 'ctxt' 'int'     |     `-IntegerLiteral 0x12d027960 <col:35> 'int' 1     |-IfStmt 0x12d027e90 <line:38:5, line:39:2>     | |-RecoveryExpr 0x12d027e60 <line:38:9, col:16> '_Bool' contains-errors     | `-ReturnStmt 0x12d027e80 <line:39:2>     `-IfStmt 0x12d028018 <line:42:5, line:44:5>       |-RecoveryExpr 0x12d027ec8 <line:42:9, col:16> '_Bool' contains-errors       `-CompoundStmt 0x12d028008 <col:21, line:44:5> ","20895":"`-FunctionDecl 0x123929ea0  col:11 implicit used strchr 'char *(const char *, int)' extern   |-ParmVarDecl 0x123929fa0 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x12392a008 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x123929f48 <<invalid sloc>> Implicit 893 ","20722":"`-FunctionDecl 0x14600dfe8  line:1:1 _asn1_convert_integer 'int (const unsigned char *, unsigned char *, int, int *)'   |-ParmVarDecl 0x14600dd08 <col:24, col:45> col:45 used value 'const unsigned char *'   |-ParmVarDecl 0x14600ddb8 <col:52, col:67> col:67 used value_out 'unsigned char *'   |-ParmVarDecl 0x14600de38 <line:2:10, col:14> col:14 used value_out_size 'int'   |-ParmVarDecl 0x14600dee8 <col:30, col:35> col:35 used len 'int *'   `-CompoundStmt 0x145925648 <line:3:1, line:49:1>     |-DeclStmt 0x14600e170 <line:4:3, col:16>     | `-VarDecl 0x14600e108 <col:3, col:8> col:8 used negative 'char'     |-DeclStmt 0x14600e238 <line:5:3, col:46>     | `-VarDecl 0x14600e1d0 <col:3, col:17> col:17 referenced invalid val 'unsigned char'     |-DeclStmt 0x14600e2d0 <line:6:3, col:14>     | `-VarDecl 0x14600e268 <col:3, col:8> col:8 used valtmp 'long'     |-DeclStmt 0x145922600 <line:7:3, col:12>     | |-VarDecl 0x14600e300 <col:3, col:7> col:7 used k 'int'     | `-VarDecl 0x14600e380 <col:3, col:10> col:10 used k2 'int'     |-BinaryOperator 0x145922878 <line:9:3, col:41> 'long' contains-errors '='     | |-DeclRefExpr 0x145922618 <col:3> 'long' lvalue Var 0x14600e268 'valtmp' 'long'     | `-CallExpr 0x145922840 <col:12, col:41> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x145922750 <col:12> 'int ()' Function 0x145922698 '_asn1_strtol' 'int ()'     |   |-DeclRefExpr 0x145922770 <col:26> 'const unsigned char *' lvalue ParmVar 0x14600dd08 'value' 'const unsigned char *'     |   |-RecoveryExpr 0x145922820 <col:33> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x1459227a8 <col:39> 'int' 10     |-ForStmt 0x145922c20 <line:11:3, line:14:5>     | |-BinaryOperator 0x1459228d8 <line:11:8, col:12> 'int' '='     | | |-DeclRefExpr 0x145922898 <col:8> 'int' lvalue Var 0x14600e300 'k' 'int'     | | `-IntegerLiteral 0x1459228b8 <col:12> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x145922970 <col:15, col:19> 'int' contains-errors '<'     | | |-DeclRefExpr 0x1459228f8 <col:15> 'int' lvalue Var 0x14600e300 'k' 'int'     | | `-RecoveryExpr 0x145922950 <col:19> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x1459229b0 <col:45, col:46> 'int' postfix '++'     | | `-DeclRefExpr 0x145922990 <col:45> 'int' lvalue Var 0x14600e300 'k' 'int'     | `-CompoundStmt 0x145922c10 <line:12:5, line:14:5>     |-IfStmt 0x145922e00 <line:16:3, line:19:16> has_else     | |-BinaryOperator 0x145922cf0 <line:16:7, col:16> '<dependent type>' contains-errors '&'     | | |-ArraySubscriptExpr 0x145922cb0 <col:7, col:12> '<dependent type>' contains-errors lvalue     | | | |-ImplicitCastExpr 0x145922c98 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | | | | `-RecoveryExpr 0x145922c58 <col:7> '<dependent type>' contains-errors lvalue     | | | `-IntegerLiteral 0x145922c78 <col:11> 'int' 0     | | `-IntegerLiteral 0x145922cd0 <col:16> 'int' 128     | |-BinaryOperator 0x145922d68 <line:17:5, col:16> 'char' '='     | | |-DeclRefExpr 0x145922d10 <col:5> 'char' lvalue Var 0x14600e108 'negative' 'char'     | | `-ImplicitCastExpr 0x145922d50 <col:16> 'char' <IntegralCast>     | |   `-IntegerLiteral 0x145922d30 <col:16> 'int' 1     | `-BinaryOperator 0x145922de0 <line:19:5, col:16> 'char' '='     |   |-DeclRefExpr 0x145922d88 <col:5> 'char' lvalue Var 0x14600e108 'negative' 'char'     |   `-ImplicitCastExpr 0x145922dc8 <col:16> 'char' <IntegralCast>     |     `-IntegerLiteral 0x145922da8 <col:16> 'int' 0     |-ForStmt 0x145923268 <line:21:3, line:27:5>     | |-BinaryOperator 0x145922e70 <line:21:8, col:12> 'int' '='     | | |-DeclRefExpr 0x145922e30 <col:8> 'int' lvalue Var 0x14600e300 'k' 'int'     | | `-IntegerLiteral 0x145922e50 <col:12> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x145922f68 <col:15, col:46> 'int' contains-errors '<'     | | |-DeclRefExpr 0x145922e90 <col:15> 'int' lvalue Var 0x14600e300 'k' 'int'     | | `-BinaryOperator 0x145922f48 <col:19, col:46> '<dependent type>' contains-errors '-'     | |   |-RecoveryExpr 0x145922f28 <col:19> '<dependent type>' contains-errors lvalue     | |   `-IntegerLiteral 0x145922ec8 <col:46> 'int' 1     | |-UnaryOperator 0x145922fa8 <col:49, col:50> 'int' postfix '++'     | | `-DeclRefExpr 0x145922f88 <col:49> 'int' lvalue Var 0x14600e300 'k' 'int'     | `-CompoundStmt 0x145923250 <line:22:5, line:27:5>     |   `-IfStmt 0x145923220 <line:23:7, line:26:2> has_else     |     |-BinaryOperator 0x1459230d0 <line:23:11, col:38> 'int' contains-errors '&&'     |     | |-DeclRefExpr 0x145922fc0 <col:11> 'char' lvalue Var 0x14600e108 'negative' 'char'     |     | `-ParenExpr 0x1459230b0 <col:23, col:38> 'int' contains-errors     |     |   `-BinaryOperator 0x145923090 <col:24, col:34> 'int' contains-errors '!='     |     |     |-ArraySubscriptExpr 0x145923050 <col:24, col:29> '<dependent type>' contains-errors lvalue     |     |     | |-ImplicitCastExpr 0x145923020 <col:24> '<dependent type>' contains-errors <LValueToRValue>     |     |     | | `-RecoveryExpr 0x145922fe0 <col:24> '<dependent type>' contains-errors lvalue     |     |     | `-ImplicitCastExpr 0x145923038 <col:28> 'int' <LValueToRValue>     |     |     |   `-DeclRefExpr 0x145923000 <col:28> 'int' lvalue Var 0x14600e300 'k' 'int'     |     |     `-IntegerLiteral 0x145923070 <col:34> 'int' 255     |     |-BreakStmt 0x1459230f0 <line:24:2>     |     `-IfStmt 0x145923200 <line:25:12, line:26:2>     |       |-BinaryOperator 0x1459231d8 <line:25:16, col:34> 'int' contains-errors '&&'     |       | |-UnaryOperator 0x145923130 <col:16, col:17> 'int' prefix '!' cannot overflow     |       | | `-ImplicitCastExpr 0x145923118 <col:17> 'char' <LValueToRValue>     |       | |   `-DeclRefExpr 0x1459230f8 <col:17> 'char' lvalue Var 0x14600e108 'negative' 'char'     |       | `-ArraySubscriptExpr 0x1459231b8 <col:29, col:34> '<dependent type>' contains-errors lvalue     |       |   |-ImplicitCastExpr 0x145923188 <col:29> '<dependent type>' contains-errors <LValueToRValue>     |       |   | `-RecoveryExpr 0x145923148 <col:29> '<dependent type>' contains-errors lvalue     |       |   `-ImplicitCastExpr 0x1459231a0 <col:33> 'int' <LValueToRValue>     |       |     `-DeclRefExpr 0x145923168 <col:33> 'int' lvalue Var 0x14600e300 'k' 'int'     |       `-BreakStmt 0x1459231f8 <line:26:2>     |-IfStmt 0x1459235e0 <line:29:3, line:30:6>     | |-BinaryOperator 0x145923588 <line:29:7, col:70> 'int' contains-errors '||'     | | |-ParenExpr 0x1459233e8 <col:7, col:36> 'int' contains-errors     | | | `-BinaryOperator 0x1459233c8 <col:8, col:35> 'int' contains-errors '&&'     | | |   |-DeclRefExpr 0x1459232a0 <col:8> 'char' lvalue Var 0x14600e108 'negative' 'char'     | | |   `-UnaryOperator 0x1459233b0 <col:20, col:35> '<dependent type>' contains-errors prefix '!' cannot overflow     | | |     `-ParenExpr 0x145923390 <col:21, col:35> '<dependent type>' contains-errors     | | |       `-BinaryOperator 0x145923370 <col:22, col:31> '<dependent type>' contains-errors '&'     | | |         |-ArraySubscriptExpr 0x145923330 <col:22, col:27> '<dependent type>' contains-errors lvalue     | | |         | |-ImplicitCastExpr 0x145923300 <col:22> '<dependent type>' contains-errors <LValueToRValue>     | | |         | | `-RecoveryExpr 0x1459232c0 <col:22> '<dependent type>' contains-errors lvalue     | | |         | `-ImplicitCastExpr 0x145923318 <col:26> 'int' <LValueToRValue>     | | |         |   `-DeclRefExpr 0x1459232e0 <col:26> 'int' lvalue Var 0x14600e300 'k' 'int'     | | |         `-IntegerLiteral 0x145923350 <col:31> 'int' 128     | | `-ParenExpr 0x145923568 <col:41, col:70> 'int' contains-errors     | |   `-BinaryOperator 0x145923548 <col:42, col:69> 'int' contains-errors '&&'     | |     |-UnaryOperator 0x145923440 <col:42, col:43> 'int' prefix '!' cannot overflow     | |     | `-ImplicitCastExpr 0x145923428 <col:43> 'char' <LValueToRValue>     | |     |   `-DeclRefExpr 0x145923408 <col:43> 'char' lvalue Var 0x14600e108 'negative' 'char'     | |     `-ParenExpr 0x145923528 <col:55, col:69> '<dependent type>' contains-errors     | |       `-BinaryOperator 0x145923508 <col:56, col:65> '<dependent type>' contains-errors '&'     | |         |-ArraySubscriptExpr 0x1459234c8 <col:56, col:61> '<dependent type>' contains-errors lvalue     | |         | |-ImplicitCastExpr 0x145923498 <col:56> '<dependent type>' contains-errors <LValueToRValue>     | |         | | `-RecoveryExpr 0x145923458 <col:56> '<dependent type>' contains-errors lvalue     | |         | `-ImplicitCastExpr 0x1459234b0 <col:60> 'int' <LValueToRValue>     | |         |   `-DeclRefExpr 0x145923478 <col:60> 'int' lvalue Var 0x14600e300 'k' 'int'     | |         `-IntegerLiteral 0x1459234e8 <col:65> 'int' 128     | `-UnaryOperator 0x1459235c8 <line:30:5, col:6> 'int' postfix '--'     |   `-DeclRefExpr 0x1459235a8 <col:5> 'int' lvalue Var 0x14600e300 'k' 'int'     |-BinaryOperator 0x145925168 <line:32:3, col:37> 'int' contains-errors '='     | |-UnaryOperator 0x145925110 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x1459250f8 <col:4> 'int *' <LValueToRValue>     | |   `-DeclRefExpr 0x145925000 <col:4> 'int *' lvalue ParmVar 0x14600dee8 'len' 'int *'     | `-BinaryOperator 0x145925148 <col:10, col:37> '<dependent type>' contains-errors '-'     |   |-RecoveryExpr 0x145925128 <col:10> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x145925068 <col:37> 'int' lvalue Var 0x14600e300 'k' 'int'     |-IfStmt 0x1459252c8 <line:34:3, line:36:12>     | |-BinaryOperator 0x145925260 <line:34:7, col:38> 'int' contains-errors '>'     | | |-BinaryOperator 0x145925240 <col:7, col:34> '<dependent type>' contains-errors '-'     | | | |-RecoveryExpr 0x145925220 <col:7> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x1459251a0 <col:34> 'int' lvalue Var 0x14600e300 'k' 'int'     | | `-DeclRefExpr 0x1459251e0 <col:38> 'int' lvalue ParmVar 0x14600de38 'value_out_size' 'int'     | `-ReturnStmt 0x1459252b8 <line:36:5, col:12>     |   `-RecoveryExpr 0x145925298 <col:12> '<dependent type>' contains-errors lvalue     |-ForStmt 0x1459255c8 <line:38:3, line:39:31>     | |-BinaryOperator 0x145925340 <line:38:8, col:13> 'int' '='     | | |-DeclRefExpr 0x1459252e8 <col:8> 'int' lvalue Var 0x14600e380 'k2' 'int'     | | `-ImplicitCastExpr 0x145925328 <col:13> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x145925308 <col:13> 'int' lvalue Var 0x14600e300 'k' 'int'     | |-<<<NULL>>>     | |-BinaryOperator 0x1459253d8 <col:16, col:21> 'int' contains-errors '<'     | | |-DeclRefExpr 0x145925360 <col:16> 'int' lvalue Var 0x14600e380 'k2' 'int'     | | `-RecoveryExpr 0x1459253b8 <col:21> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x145925418 <col:47, col:49> 'int' postfix '++'     | | `-DeclRefExpr 0x1459253f8 <col:47> 'int' lvalue Var 0x14600e380 'k2' 'int'     | `-BinaryOperator 0x1459255a8 <line:39:5, col:31> 'unsigned char' contains-errors '='     |   |-ArraySubscriptExpr 0x1459254f8 <col:5, col:21> 'unsigned char' lvalue     |   | |-ImplicitCastExpr 0x1459254e0 <col:5> 'unsigned char *' <LValueToRValue>     |   | | `-DeclRefExpr 0x145925430 <col:5> 'unsigned char *' lvalue ParmVar 0x14600ddb8 'value_out' 'unsigned char *'     |   | `-BinaryOperator 0x1459254c0 <col:15, col:20> 'int' '-'     |   |   |-ImplicitCastExpr 0x145925490 <col:15> 'int' <LValueToRValue>     |   |   | `-DeclRefExpr 0x145925450 <col:15> 'int' lvalue Var 0x14600e380 'k2' 'int'     |   |   `-ImplicitCastExpr 0x1459254a8 <col:20> 'int' <LValueToRValue>     |   |     `-DeclRefExpr 0x145925470 <col:20> 'int' lvalue Var 0x14600e300 'k' 'int'     |   `-ArraySubscriptExpr 0x145925588 <col:25, col:31> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x145925558 <col:25> '<dependent type>' contains-errors <LValueToRValue>     |     | `-RecoveryExpr 0x145925518 <col:25> '<dependent type>' contains-errors lvalue     |     `-ImplicitCastExpr 0x145925570 <col:29> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x145925538 <col:29> 'int' lvalue Var 0x14600e380 'k2' 'int'     `-ReturnStmt 0x145925638 <line:48:3, col:10>       `-RecoveryExpr 0x145925618 <col:10> '<dependent type>' contains-errors lvalue ","20920":"`-FunctionDecl 0x13c80de88  line:1:21 invalid InitTemporaryTensors 'int (int *, int *)' static   |-ParmVarDecl 0x13c80dd28 <col:42, col:57> col:57 invalid context 'int *'   |-ParmVarDecl 0x13c80dda8 <line:2:42, col:54> col:54 referenced invalid node 'int *'   `-CompoundStmt 0x13d809338 <col:60, line:45:1>     |-IfStmt 0x13c80e330 <line:6:3, line:9:3>     | |-BinaryOperator 0x13c80e2b0 <line:6:7, line:7:43> 'int' contains-errors '&&'     | | |-BinaryOperator 0x13c80e1e8 <line:6:7, col:44> 'int' contains-errors '!='     | | | |-CXXDependentScopeMemberExpr 0x13c80e180 <col:7, col:13> '<dependent type>' contains-errors lvalue ->fft_integer_working_area_id     | | | | `-RecoveryExpr 0x13c80e160 <col:7> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x13c80e1c8 <col:44> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x13c80e290 <line:7:7, col:43> 'int' contains-errors '!='     | |   |-CXXDependentScopeMemberExpr 0x13c80e228 <col:7, col:13> '<dependent type>' contains-errors lvalue ->fft_double_working_area_id     | |   | `-RecoveryExpr 0x13c80e208 <col:7> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x13c80e270 <col:43> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13c80e318 <col:64, line:9:3>     |   `-ReturnStmt 0x13c80e308 <line:8:5, col:12>     |     `-RecoveryExpr 0x13c80e2e8 <col:12> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13d808940 <line:11:3, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d8088b8 <col:3> 'int ()' Function 0x13d808800 'TfLiteIntArrayFree' 'int ()'     | `-CXXDependentScopeMemberExpr 0x13d8088f8 <col:22, col:28> '<dependent type>' contains-errors lvalue ->temporaries     |   `-RecoveryExpr 0x13d8088d8 <col:22> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13d808b90 <line:13:3, col:45> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13d8089b0 <col:3, col:9> '<dependent type>' contains-errors lvalue ->temporaries     | | `-RecoveryExpr 0x13d808988 <col:3> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13d808968 <col:3> 'int *' lvalue ParmVar 0x13c80dda8 'node' 'int *'     | `-CallExpr 0x13d808b68 <col:23, col:45> 'int'     |   |-ImplicitCastExpr 0x13d808b50 <col:23> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x13d808ad8 <col:23> 'int ()' Function 0x13d808a20 'TfLiteIntArrayCreate' 'int ()'     |   `-IntegerLiteral 0x13d808af8 <col:44> 'int' 2     |-DeclStmt 0x13d808c30 <line:14:3, col:22>     | `-VarDecl 0x13d808bc8 <col:3, col:7> col:7 used first_new_index 'int'     `-CallExpr 0x13d808e60 <line:15:3, col:74> '<dependent type>' contains-errors       |-DeclRefExpr 0x13d808d28 <col:3> 'int ()' Function 0x13d808c70 'TF_LITE_ENSURE_STATUS' 'int ()'       `-CallExpr 0x13d808e28 <col:25, col:73> '<dependent type>' contains-errors         |-CXXDependentScopeMemberExpr 0x13d808d68 <col:25, col:34> '<dependent type>' contains-errors lvalue ->AddTensors         | `-RecoveryExpr 0x13d808d48 <col:25> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x13d808db0 <col:45> '<dependent type>' contains-errors lvalue         |-IntegerLiteral 0x13d808dd0 <col:54> 'int' 2         `-UnaryOperator 0x13d808e10 <col:57, col:58> 'int *' prefix '&' cannot overflow           `-DeclRefExpr 0x13d808df0 <col:58> 'int' lvalue Var 0x13d808bc8 'first_new_index' 'int' ","20723":"`-FunctionDecl 0x14510ccb8  line:1:21 invalid XBMInteger 'unsigned int (int *, short *)' static   |-ParmVarDecl 0x14510cb28 <col:32, col:39> col:39 invalid image 'int *'   |-ParmVarDecl 0x14510cbd8 <col:45, col:56> col:56 used hex_digits 'short *'   `-CompoundStmt 0x14581e138 <line:2:1, line:32:1>     |-DeclStmt 0x14510cdf0 <line:3:3, line:4:6>     | `-VarDecl 0x14510cd88 <line:3:3, line:4:5> col:5 used c 'int'     |-DeclStmt 0x14510ce88 <line:6:3, line:7:10>     | `-VarDecl 0x14510ce20 <line:6:3, line:7:5> col:5 used value 'unsigned int'     |-DoStmt 0x14581d8a0 <line:10:3, line:15:67>     | |-CompoundStmt 0x14510d1c8 <line:11:3, line:15:3>     | | |-BinaryOperator 0x14510d088 <line:12:5, col:25> 'int' contains-errors '='     | | | |-DeclRefExpr 0x14510cea0 <col:5> 'int' lvalue Var 0x14510cd88 'c' 'int'     | | | `-CallExpr 0x14510d060 <col:7, col:25> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x14510d020 <col:7> 'int ()' Function 0x14510cf68 'ReadBlobByte' 'int ()'     | | |   `-RecoveryExpr 0x14510d040 <col:20> '<dependent type>' contains-errors lvalue     | | `-IfStmt 0x14510d1a8 <line:13:5, line:14:15>     | |   |-BinaryOperator 0x14510d120 <line:13:9, col:14> 'int' contains-errors '=='     | |   | |-DeclRefExpr 0x14510d0a8 <col:9> 'int' lvalue Var 0x14510cd88 'c' 'int'     | |   | `-RecoveryExpr 0x14510d100 <col:14> '<dependent type>' contains-errors lvalue     | |   `-ReturnStmt 0x14510d198 <line:14:7, col:15>     | |     `-ImplicitCastExpr 0x14510d180 <col:13, col:15> 'unsigned int' <IntegralCast>     | |       `-ParenExpr 0x14510d160 <col:13, col:15> 'int'     | |         `-IntegerLiteral 0x14510d140 <col:14> 'int' 0     | `-BinaryOperator 0x14581d880 <line:15:12, col:66> 'int' '||'     |   |-BinaryOperator 0x14581d7d0 <col:12, col:51> 'int' '||'     |   | |-BinaryOperator 0x14581d720 <col:12, col:36> 'int' '||'     |   | | |-ParenExpr 0x14581d670 <col:12, col:21> 'int'     |   | | | `-BinaryOperator 0x14581d650 <col:13, col:18> 'int' '=='     |   | | |   |-ImplicitCastExpr 0x14581d638 <col:13> 'int' <LValueToRValue>     |   | | |   | `-DeclRefExpr 0x14581d600 <col:13> 'int' lvalue Var 0x14510cd88 'c' 'int'     |   | | |   `-CharacterLiteral 0x14581d620 <col:18> 'int' 32     |   | | `-ParenExpr 0x14581d700 <col:26, col:36> 'int'     |   | |   `-BinaryOperator 0x14581d6e0 <col:27, col:32> 'int' '=='     |   | |     |-ImplicitCastExpr 0x14581d6c8 <col:27> 'int' <LValueToRValue>     |   | |     | `-DeclRefExpr 0x14581d690 <col:27> 'int' lvalue Var 0x14510cd88 'c' 'int'     |   | |     `-CharacterLiteral 0x14581d6b0 <col:32> 'int' 9     |   | `-ParenExpr 0x14581d7b0 <col:41, col:51> 'int'     |   |   `-BinaryOperator 0x14581d790 <col:42, col:47> 'int' '=='     |   |     |-ImplicitCastExpr 0x14581d778 <col:42> 'int' <LValueToRValue>     |   |     | `-DeclRefExpr 0x14581d740 <col:42> 'int' lvalue Var 0x14510cd88 'c' 'int'     |   |     `-CharacterLiteral 0x14581d760 <col:47> 'int' 10     |   `-ParenExpr 0x14581d860 <col:56, col:66> 'int'     |     `-BinaryOperator 0x14581d840 <col:57, col:62> 'int' '=='     |       |-ImplicitCastExpr 0x14581d828 <col:57> 'int' <LValueToRValue>     |       | `-DeclRefExpr 0x14581d7f0 <col:57> 'int' lvalue Var 0x14510cd88 'c' 'int'     |       `-CharacterLiteral 0x14581d810 <col:62> 'int' 13     |-BinaryOperator 0x14581d918 <line:17:3, col:9> 'unsigned int' '='     | |-DeclRefExpr 0x14581d8c0 <col:3> 'unsigned int' lvalue Var 0x14510ce20 'value' 'unsigned int'     | `-ImplicitCastExpr 0x14581d900 <col:9> 'unsigned int' <IntegralCast>     |   `-IntegerLiteral 0x14581d8e0 <col:9> 'int' 0     |-DoStmt 0x14581e0b0 <line:18:3, line:30:30>     | |-CompoundStmt 0x14581df68 <line:19:3, line:30:3>     | | |-IfStmt 0x14581da10 <line:20:5, line:21:7>     | | | |-RecoveryExpr 0x14581d9e8 <line:20:9, col:43> '_Bool' contains-errors     | | | `-BreakStmt 0x14581da08 <line:21:7>     | | |-CompoundAssignOperator 0x14581da88 <line:22:5, col:12> 'unsigned int' '*=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'     | | | |-DeclRefExpr 0x14581da30 <col:5> 'unsigned int' lvalue Var 0x14510ce20 'value' 'unsigned int'     | | | `-ImplicitCastExpr 0x14581da70 <col:12> 'unsigned int' <IntegralCast>     | | |   `-IntegerLiteral 0x14581da50 <col:12> 'int' 16     | | |-CompoundAssignOperator 0x14581daf8 <line:23:5, col:8> 'int' '&=' ComputeLHSTy='int' ComputeResultTy='int'     | | | |-DeclRefExpr 0x14581dab8 <col:5> 'int' lvalue Var 0x14510cd88 'c' 'int'     | | | `-IntegerLiteral 0x14581dad8 <col:8> 'int' 255     | | |-IfStmt 0x14581dc70 <line:24:5, line:25:7>     | | | |-RecoveryExpr 0x14581dc48 <line:24:9, col:54> '_Bool' contains-errors     | | | `-BreakStmt 0x14581dc68 <line:25:7>     | | |-CompoundAssignOperator 0x14581dd70 <line:26:5, col:24> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'     | | | |-DeclRefExpr 0x14581dc90 <col:5> 'unsigned int' lvalue Var 0x14510ce20 'value' 'unsigned int'     | | | `-ImplicitCastExpr 0x14581dd58 <col:12, col:24> 'unsigned int' <IntegralCast>     | | |   `-ImplicitCastExpr 0x14581dd40 <col:12, col:24> 'short' <LValueToRValue>     | | |     `-ArraySubscriptExpr 0x14581dd20 <col:12, col:24> 'short' lvalue     | | |       |-ImplicitCastExpr 0x14581dcf0 <col:12> 'short *' <LValueToRValue>     | | |       | `-DeclRefExpr 0x14581dcb0 <col:12> 'short *' lvalue ParmVar 0x14510cbd8 'hex_digits' 'short *'     | | |       `-ImplicitCastExpr 0x14581dd08 <col:23> 'int' <LValueToRValue>     | | |         `-DeclRefExpr 0x14581dcd0 <col:23> 'int' lvalue Var 0x14510cd88 'c' 'int'     | | |-BinaryOperator 0x14581de28 <line:27:5, col:25> 'int' contains-errors '='     | | | |-DeclRefExpr 0x14581dda0 <col:5> 'int' lvalue Var 0x14510cd88 'c' 'int'     | | | `-CallExpr 0x14581de00 <col:7, col:25> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x14581ddc0 <col:7> 'int ()' Function 0x14510cf68 'ReadBlobByte' 'int ()'     | | |   `-RecoveryExpr 0x14581dde0 <col:20> '<dependent type>' contains-errors lvalue     | | `-IfStmt 0x14581df48 <line:28:5, line:29:15>     | |   |-BinaryOperator 0x14581dec0 <line:28:9, col:14> 'int' contains-errors '=='     | |   | |-DeclRefExpr 0x14581de48 <col:9> 'int' lvalue Var 0x14510cd88 'c' 'int'     | |   | `-RecoveryExpr 0x14581dea0 <col:14> '<dependent type>' contains-errors lvalue     | |   `-ReturnStmt 0x14581df38 <line:29:7, col:15>     | |     `-ImplicitCastExpr 0x14581df20 <col:13, col:15> 'unsigned int' <IntegralCast>     | |       `-ParenExpr 0x14581df00 <col:13, col:15> 'int'     | |         `-IntegerLiteral 0x14581dee0 <col:14> 'int' 0     | `-BinaryOperator 0x14581e090 <line:30:12, col:29> 'int' '>='     |   |-ImplicitCastExpr 0x14581e078 <col:12, col:24> 'int' <IntegralCast>     |   | `-ImplicitCastExpr 0x14581e060 <col:12, col:24> 'short' <LValueToRValue>     |   |   `-ArraySubscriptExpr 0x14581e020 <col:12, col:24> 'short' lvalue     |   |     |-ImplicitCastExpr 0x14581dff0 <col:12> 'short *' <LValueToRValue>     |   |     | `-DeclRefExpr 0x14581dfb0 <col:12> 'short *' lvalue ParmVar 0x14510cbd8 'hex_digits' 'short *'     |   |     `-ImplicitCastExpr 0x14581e008 <col:23> 'int' <LValueToRValue>     |   |       `-DeclRefExpr 0x14581dfd0 <col:23> 'int' lvalue Var 0x14510cd88 'c' 'int'     |   `-IntegerLiteral 0x14581e040 <col:29> 'int' 0     `-ReturnStmt 0x14581e128 <line:31:3, col:15>       `-ImplicitCastExpr 0x14581e110 <col:9, col:15> 'unsigned int' <LValueToRValue>         `-ParenExpr 0x14581e0f0 <col:9, col:15> 'unsigned int' lvalue           `-DeclRefExpr 0x14581e0d0 <col:10> 'unsigned int' lvalue Var 0x14510ce20 'value' 'unsigned int' ","20982":"`-FunctionDecl 0x158940d38  line:1:1 nfsd4_clone 'int (struct svc_rqst *, struct nfsd4_compound_state *, struct nfsd4_clone *)'   |-ParmVarDecl 0x158928648 <col:13, col:30> col:30 used rqstp 'struct svc_rqst *'   |-ParmVarDecl 0x158940a28 <col:37, col:66> col:66 used cstate 'struct nfsd4_compound_state *'   |-ParmVarDecl 0x158940bf8 <line:2:3, col:23> col:23 used clone 'struct nfsd4_clone *'   `-CompoundStmt 0x158941aa8 <line:3:1, line:19:1>     |-DeclStmt 0x1589410c0 <line:4:2, col:24>     | |-RecordDecl 0x158940e40 <col:2, col:9> col:9 struct file     | |-VarDecl 0x158940fa8 <col:2, col:15> col:15 used src 'struct file *'     | `-VarDecl 0x158941038 <col:2, col:21> col:21 used dst 'struct file *'     |-IfStmt 0x158941518 <line:9:2, line:10:8>     | |-RecoveryExpr 0x158941490 <line:9:6> '<dependent type>' contains-errors lvalue     | `-GotoStmt 0x158941500 <line:10:3, col:8> 'out' 0x1589414b0     |-CallExpr 0x158941948 <line:15:2, col:10> 'int'     | |-ImplicitCastExpr 0x158941930 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1589418c0 <col:2> 'int ()' Function 0x158941808 'fput' 'int ()'     | `-ImplicitCastExpr 0x158941970 <col:7> 'struct file *' <LValueToRValue>     |   `-DeclRefExpr 0x1589418e0 <col:7> 'struct file *' lvalue Var 0x158941038 'dst' 'struct file *'     |-CallExpr 0x158941a00 <line:16:2, col:10> 'int'     | |-ImplicitCastExpr 0x1589419c8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x158941988 <col:2> 'int ()' Function 0x158941808 'fput' 'int ()'     | `-ImplicitCastExpr 0x158941a28 <col:7> 'struct file *' <LValueToRValue>     |   `-DeclRefExpr 0x1589419a8 <col:7> 'struct file *' lvalue Var 0x158940fa8 'src' 'struct file *'     `-LabelStmt 0x158941a88 <line:17:1, line:18:9> 'out'       `-ReturnStmt 0x158941a78 <col:2, col:9>         `-RecoveryExpr 0x158941a58 <col:9> '<dependent type>' contains-errors lvalue ","20267":"`-FunctionDecl 0x1490274d8  line:1:20 invalid __io_fill_cqe_req 'int (struct io_kiocb *, int, int)' static inline   |-ParmVarDecl 0x14900e268 <col:38, col:55> col:55 used req 'struct io_kiocb *'   |-ParmVarDecl 0x14900e2e8 <col:60, col:64> col:64 invalid res 'int'   |-ParmVarDecl 0x14900e368 <col:69, col:73> col:73 invalid cflags 'int'   `-CompoundStmt 0x149027ba8 <line:2:1, line:5:1>     |-CallExpr 0x1490278b8 <line:3:2, col:78> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1490276f0 <col:2> 'int ()' Function 0x149027638 'trace_io_uring_complete' 'int ()'     | |-RecoveryExpr 0x149027748 <col:26, col:31> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x149027710 <col:26> 'struct io_kiocb *' lvalue ParmVar 0x14900e268 'req' 'struct io_kiocb *'     | |-DeclRefExpr 0x149027770 <col:36> 'struct io_kiocb *' lvalue ParmVar 0x14900e268 'req' 'struct io_kiocb *'     | |-CXXDependentScopeMemberExpr 0x1490277f0 <col:41, col:50> '<dependent type>' contains-errors lvalue .user_data     | | `-RecoveryExpr 0x1490277c8 <col:41, col:46> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x149027790 <col:41> 'struct io_kiocb *' lvalue ParmVar 0x14900e268 'req' 'struct io_kiocb *'     | |-RecoveryExpr 0x149027838 <col:61> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x149027858 <col:66> '<dependent type>' contains-errors lvalue     | |-IntegerLiteral 0x149027878 <col:74> 'int' 0     | `-IntegerLiteral 0x149027898 <col:77> 'int' 0     `-ReturnStmt 0x149027b98 <line:4:2, col:64>       `-CallExpr 0x149027b58 <col:9, col:64> '<dependent type>' contains-errors         |-DeclRefExpr 0x1490279f0 <col:9> 'int ()' Function 0x149027938 '__io_fill_cqe' 'int ()'         |-RecoveryExpr 0x149027a48 <col:23, col:28> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x149027a10 <col:23> 'struct io_kiocb *' lvalue ParmVar 0x14900e268 'req' 'struct io_kiocb *'         |-CXXDependentScopeMemberExpr 0x149027ad0 <col:33, col:42> '<dependent type>' contains-errors lvalue .user_data         | `-RecoveryExpr 0x149027aa8 <col:33, col:38> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x149027a70 <col:33> 'struct io_kiocb *' lvalue ParmVar 0x14900e268 'req' 'struct io_kiocb *'         |-RecoveryExpr 0x149027b18 <col:53> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x149027b38 <col:58> '<dependent type>' contains-errors lvalue ","21244":"`-FunctionDecl 0x12200df58  line:1:1 referenced invalid TPMA_ALGORITHM_Unmarshal 'int (int *, int **, int *)'   |-ParmVarDecl 0x12200dd28 <col:26, col:42> col:42 invalid target 'int *'   |-ParmVarDecl 0x12200dde0 <col:50, col:57> col:57 invalid buffer 'int **'   |-ParmVarDecl 0x12200de60 <col:65, col:72> col:72 invalid size 'int *'   `-CompoundStmt 0x122027f88 <line:2:1, line:14:1>     |-IfStmt 0x12200e2a8 <line:5:5, line:7:5>     | |-BinaryOperator 0x12200e0a8 <line:5:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x12200e068 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12200e088 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12200e298 <col:31, line:7:5>     |-IfStmt 0x122027f20 <line:8:5, line:12:5>     | |-BinaryOperator 0x12200e358 <line:8:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x12200e318 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12200e338 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x122027f08 <col:31, line:12:5>     |   `-IfStmt 0x122027ee8 <line:9:2, line:11:2>     |     |-BinaryOperator 0x122027ea0 <line:9:6, col:16> '<dependent type>' contains-errors '&'     |     | |-UnaryOperator 0x122027e68 <col:6, col:7> '<dependent type>' contains-errors prefix '*' cannot overflow     |     | | `-ImplicitCastExpr 0x122027e50 <col:7> '<dependent type>' contains-errors <LValueToRValue>     |     | |   `-RecoveryExpr 0x12200e378 <col:7> '<dependent type>' contains-errors lvalue     |     | `-RecoveryExpr 0x122027e80 <col:16> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x122027ed8 <col:41, line:11:2>     `-ReturnStmt 0x122027f78 <line:13:5, col:12>       `-RecoveryExpr 0x122027f58 <col:12> '<dependent type>' contains-errors lvalue ","21176":"`-FunctionDecl 0x12a0fad10  line:1:15 invalid Fill 'void (const int *, int, int *)' static   |-ParmVarDecl 0x12a0faaf0 <col:20, col:36> col:36 invalid data 'const int *'   |-ParmVarDecl 0x12a0fab70 <col:42, col:49> col:49 invalid n 'int'   |-ParmVarDecl 0x12a0fac28 <col:52, col:65> col:65 referenced invalid proto 'int *'   `-CompoundStmt 0x12a114238 <col:72, line:7:3>     |-CallExpr 0x12a0faee8 <line:2:5, col:41> '<dependent type>' contains-errors     | |-CXXDependentScopeMemberExpr 0x12a0fae80 <col:5, col:32> '<dependent type>' contains-errors lvalue ->Reserve     | | `-CallExpr 0x12a0fae60 <col:5, col:29> '<dependent type>' contains-errors     | |   `-CXXDependentScopeMemberExpr 0x12a0fae18 <col:5, col:12> '<dependent type>' contains-errors lvalue ->mutable_half_val     | |     `-RecoveryExpr 0x12a0fadf0 <col:5> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x12a0fadd0 <col:5> 'int *' lvalue ParmVar 0x12a0fac28 'proto' 'int *'     | `-RecoveryExpr 0x12a0faec8 <col:40> '<dependent type>' contains-errors lvalue     `-ForStmt 0x12a114200 <line:3:5, line:6:5>       |-<<<NULL>>>       |-<<<NULL>>>       |-BinaryOperator 0x12a0fb028 <line:3:24, col:28> 'int' contains-errors '<'       | |-RecoveryExpr 0x12a0fb008 <col:24> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x12a0fafc8 <col:28> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x12a0fb098 <col:31, col:33> '<dependent type>' contains-errors prefix '++' cannot overflow       | `-RecoveryExpr 0x12a0fb078 <col:33> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x12a0fb1c0 <col:36, line:6:5> ","20828":"`-FunctionDecl 0x14f128d38  line:1:1 invalid ews_backend_authenticate_sync 'int (int *, const int *, char **, int *, int *, int **)'   |-ParmVarDecl 0x14f128928 <col:32, col:42> col:42 invalid backend 'int *'   |-ParmVarDecl 0x14f1289a8 <line:2:11, col:35> col:35 invalid credentials 'const int *'   |-ParmVarDecl 0x14f128a58 <line:3:11, col:19> col:19 out_certificate_pem 'char **'   |-ParmVarDecl 0x14f128ad8 <line:4:11, col:33> col:33 invalid out_certificate_errors 'int *'   |-ParmVarDecl 0x14f128b58 <line:5:11, col:25> col:25 invalid cancellable 'int *'   |-ParmVarDecl 0x14f128c10 <line:6:11, col:20> col:20 invalid error 'int **'   `-CompoundStmt 0x14f1432f0 <line:7:1, line:40:1>     |-CallExpr 0x14f142188 <line:13:2, col:81> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14f128fb0 <col:2> 'int ()' Function 0x14f128ef8 'g_return_val_if_fail' 'int ()'     | |-CallExpr 0x14f1420f8 <col:24, col:49> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14f1420b8 <col:24> 'int ()' Function 0x14f142000 'E_IS_EWS_BACKEND' 'int ()'     | | `-RecoveryExpr 0x14f1420d8 <col:42> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14f142168 <col:52> '<dependent type>' contains-errors lvalue     `-IfStmt 0x14f1432c0 <line:28:2, line:37:2> has_else       |-RecoveryExpr 0x14f142ac8 <line:28:6, col:16> '_Bool' contains-errors       |-CompoundStmt 0x14f142e80 <col:50, line:32:2>       | `-CallExpr 0x14f142d50 <line:29:3, col:90> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x14f142bc8 <col:3> 'int ()' Function 0x14f142b10 'e_collection_backend_authenticate_children' 'int ()'       |   |-CallExpr 0x14f142d08 <col:47, col:76> '<dependent type>' contains-errors       |   | |-DeclRefExpr 0x14f142cc8 <col:47> 'int ()' Function 0x14f142c10 'E_COLLECTION_BACKEND' 'int ()'       |   | `-RecoveryExpr 0x14f142ce8 <col:69> '<dependent type>' contains-errors lvalue       |   `-RecoveryExpr 0x14f142d30 <col:79> '<dependent type>' contains-errors lvalue       `-IfStmt 0x14f1432a0 <line:32:9, line:37:2>         |-RecoveryExpr 0x14f1430f8 <line:32:13, line:34:75> '_Bool' contains-errors         `-CompoundStmt 0x14f143288 <col:78, line:37:2>           `-CallExpr 0x14f143268 <line:35:3, col:53> 'int'             `-ImplicitCastExpr 0x14f143250 <col:3> 'int (*)()' <FunctionToPointerDecay>               `-DeclRefExpr 0x14f1431f8 <col:3> 'int ()' Function 0x14f143140 'e_ews_connection_utils_force_off_ntlm_auth_check' 'int ()' ","20852":"`-FunctionDecl 0x154928388  line:1:46 invalid find_userfault_in 'struct userfaultfd_wait_queue *(int *)' static inline   |-ParmVarDecl 0x1549281c8 <line:2:3, col:22> col:22 invalid wqh 'int *'   `-CompoundStmt 0x154941e98 <line:3:1, line:17:1>     |-DeclStmt 0x154928540 <line:5:2, col:36>     | `-VarDecl 0x1549284d8 <col:2, col:33> col:33 used uwq 'struct userfaultfd_wait_queue *'     |-CallExpr 0x1549418a0 <line:7:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1549286b0 <col:2> 'int ()' Function 0x1549285f8 'VM_BUG_ON' 'int ()'     | `-UnaryOperator 0x154941888 <col:12, col:38> '<dependent type>' contains-errors prefix '!' cannot overflow     |   `-CallExpr 0x154941860 <col:13, col:38> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1549287b0 <col:13> 'int ()' Function 0x1549286f8 'spin_is_locked' 'int ()'     |     `-UnaryOperator 0x154941848 <col:28, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-CXXDependentScopeMemberExpr 0x154941800 <col:29, col:34> '<dependent type>' contains-errors lvalue ->lock     |         `-RecoveryExpr 0x1549287d0 <col:29> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x154941940 <line:9:2, col:8> 'struct userfaultfd_wait_queue *' contains-errors '='     | |-DeclRefExpr 0x1549418c8 <col:2> 'struct userfaultfd_wait_queue *' lvalue Var 0x1549284d8 'uwq' 'struct userfaultfd_wait_queue *'     | `-RecoveryExpr 0x154941920 <col:8> '<dependent type>' contains-errors lvalue     |-IfStmt 0x154941b28 <line:10:2, line:11:8>     | |-UnaryOperator 0x154941aa8 <line:10:6, col:27> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x154941a80 <col:7, col:27> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x154941a40 <col:7> 'int ()' Function 0x154941988 'waitqueue_active' 'int ()'     | |   `-RecoveryExpr 0x154941a60 <col:24> '<dependent type>' contains-errors lvalue     | `-GotoStmt 0x154941b10 <line:11:3, col:8> 'out' 0x154941ac0     `-LabelStmt 0x154941e78 <line:15:1, line:16:9> 'out'       `-ReturnStmt 0x154941e68 <col:2, col:9>         `-ImplicitCastExpr 0x154941e50 <col:9> 'struct userfaultfd_wait_queue *' <LValueToRValue>           `-DeclRefExpr 0x154941e30 <col:9> 'struct userfaultfd_wait_queue *' lvalue Var 0x1549284d8 'uwq' 'struct userfaultfd_wait_queue *' ","20603":"`-FunctionDecl 0x143128438  line:1:1 invalid open_window 'int (int *, const char *, const char *, const char *, int)'   |-ParmVarDecl 0x143128128 <col:14, col:35> col:35 invalid application 'int *'   |-ParmVarDecl 0x1431281a8 <line:2:7, col:19> col:19 used startup_id 'const char *'   |-ParmVarDecl 0x143128228 <line:3:7, col:19> col:19 used uri 'const char *'   |-ParmVarDecl 0x1431282a8 <col:24, col:36> col:36 used geometry 'const char *'   |-ParmVarDecl 0x143128328 <col:46, col:55> col:55 invalid browser_window 'int'   `-CompoundStmt 0x143143a68 <line:4:1, line:44:1>     |-IfStmt 0x143142710 <line:8:2, line:33:2> has_else     | |-BinaryOperator 0x143128778 <line:8:6, line:9:74> 'int' contains-errors '||'     | | |-RecoveryExpr 0x143128538 <line:8:6> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x143128750 <line:9:6, col:74> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x1431286b0 <col:6> 'int ()' Function 0x1431285f8 'eel_preferences_get_boolean' 'int ()'     | |   `-RecoveryExpr 0x143128730 <col:35> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x143142188 <col:77, line:20:2>     | | `-IfStmt 0x143142158 <line:13:3, line:19:3> has_else     | |   |-BinaryOperator 0x143141b38 <line:13:7, col:14> 'int' contains-errors '=='     | |   | |-DeclRefExpr 0x143141ac0 <col:7> 'const char *' lvalue ParmVar 0x143128228 'uri' 'const char *'     | |   | `-RecoveryExpr 0x143141b18 <col:14> '<dependent type>' contains-errors lvalue     | |   |-CompoundStmt 0x143141ce0 <col:20, line:15:3>     | |   | `-CallExpr 0x143141cb8 <line:14:4, col:35> '<dependent type>' contains-errors     | |   |   |-DeclRefExpr 0x143141c38 <col:4> 'int ()' Function 0x143141b80 'nautilus_window_go_home' 'int ()'     | |   |   `-RecoveryExpr 0x143141c98 <col:29> '<dependent type>' contains-errors lvalue     | |   `-CompoundStmt 0x143142140 <line:15:10, line:19:3>     | |     `-CallExpr 0x143142010 <line:17:4, col:43> '<dependent type>' contains-errors     | |       |-DeclRefExpr 0x143141f50 <col:4> 'int ()' Function 0x143141e98 'nautilus_window_go_to' 'int ()'     | |       |-RecoveryExpr 0x143141fd0 <col:27> '<dependent type>' contains-errors lvalue     | |       `-RecoveryExpr 0x143141ff0 <col:35> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1431426f8 <line:20:9, line:33:2>     |   `-IfStmt 0x143142510 <line:21:3, line:25:3> has_else     |     |-RecoveryExpr 0x1431421c0 <line:21:7, col:14> '_Bool' contains-errors     |     |-CompoundStmt 0x143142458 <col:20, line:23:3>     |     `-CompoundStmt 0x143142500 <col:10, line:25:3>     `-IfStmt 0x143143a48 <line:35:2, line:43:2>       |-RecoveryExpr 0x1431436d8 <line:35:6, col:53> '_Bool' contains-errors       `-CompoundStmt 0x143143a38 <col:56, line:43:2> ","21102":"`-FunctionDecl 0x12984e368  line:1:12 invalid ext4_block_write_begin 'int (struct page *, int, unsigned int, int *)' static   |-ParmVarDecl 0x129831648 <col:35, col:48> col:48 used page 'struct page *'   |-ParmVarDecl 0x1298316e0 <col:54, col:61> col:61 invalid pos 'int'   |-ParmVarDecl 0x129831760 <col:66, col:75> col:75 used len 'unsigned int'   |-ParmVarDecl 0x12984e218 <line:2:7, col:20> col:20 invalid get_block 'int *'   `-CompoundStmt 0x129854650 <line:3:1, line:83:1>     |-DeclStmt 0x12984e528 <line:4:2, col:39>     | `-VarDecl 0x12984e448 <col:2, col:11> col:11 used from 'unsigned int'     |-DeclStmt 0x12984e650 <line:5:2, col:26>     | `-VarDecl 0x12984e558 <col:2, col:23> col:11 used to 'unsigned int' cinit     |   `-BinaryOperator 0x12984e630 <col:16, col:23> 'unsigned int' '+'     |     |-ImplicitCastExpr 0x12984e600 <col:16> 'unsigned int' <LValueToRValue>     |     | `-DeclRefExpr 0x12984e5c0 <col:16> 'unsigned int' lvalue Var 0x12984e448 'from' 'unsigned int'     |     `-ImplicitCastExpr 0x12984e618 <col:23> 'unsigned int' <LValueToRValue>     |       `-DeclRefExpr 0x12984e5e0 <col:23> 'unsigned int' lvalue ParmVar 0x129831760 'len' 'unsigned int'     |-DeclStmt 0x12984e900 <line:6:2, col:43>     | |-RecordDecl 0x12984e668 <col:2, col:9> col:9 struct inode     | `-VarDecl 0x12984e7d8 <col:2, col:39> col:16 used inode 'struct inode *' cinit     |   `-CXXDependentScopeMemberExpr 0x12984e8a0 <col:24, col:39> '<dependent type>' contains-errors lvalue ->host     |     `-RecoveryExpr 0x12984e878 <col:24, col:30> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x12984e840 <col:24> 'struct page *' lvalue ParmVar 0x129831648 'page' 'struct page *'     |-DeclStmt 0x12984ea30 <line:7:2, col:33>     | |-VarDecl 0x12984e930 <col:2, col:11> col:11 used block_start 'unsigned int'     | `-VarDecl 0x12984e9b0 <col:2, col:24> col:24 used block_end 'unsigned int'     |-DeclStmt 0x12984eae8 <line:9:2, col:13>     | `-VarDecl 0x12984ea60 <col:2, col:12> col:6 used err 'int' cinit     |   `-IntegerLiteral 0x12984eac8 <col:12> 'int' 0     |-DeclStmt 0x12984ec28 <line:10:2, col:47>     | `-VarDecl 0x12984eb18 <col:2, col:36> col:11 used blocksize 'unsigned int' cinit     |   `-CXXDependentScopeMemberExpr 0x12984ebe0 <col:23, col:36> '<dependent type>' contains-errors lvalue ->s_blocksize     |     `-RecoveryExpr 0x12984ebb8 <col:23, col:30> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x12984eb80 <col:23> 'struct inode *' contains-errors lvalue Var 0x12984e7d8 'inode' 'struct inode *'     |-DeclStmt 0x12984ecc0 <line:11:2, col:16>     | `-VarDecl 0x12984ec58 <col:2, col:11> col:11 used bbits 'unsigned int'     |-DeclStmt 0x12984fa00 <line:12:2, col:59>     | |-RecordDecl 0x12984ecd8 <col:2, col:9> col:9 struct buffer_head     | |-VarDecl 0x12984ee48 <col:2, col:22> col:22 used bh 'struct buffer_head *'     | |-VarDecl 0x12984eed8 <col:2, col:27> col:27 used head 'struct buffer_head *'     | |-VarDecl 0x12984f038 <col:2, col:40> col:34 used wait 'struct buffer_head *[2]'     | `-VarDecl 0x12984f128 <col:2, col:55> col:45 used wait_bh 'struct buffer_head **' cinit     |   `-ImplicitCastExpr 0x12984f1b0 <col:55> 'struct buffer_head **' <ArrayToPointerDecay>     |     `-DeclRefExpr 0x12984f190 <col:55> 'struct buffer_head *[2]' lvalue Var 0x12984f038 'wait' 'struct buffer_head *[2]'     |-CallExpr 0x12984fd68 <line:15:2, col:26> 'int'     | |-ImplicitCastExpr 0x12984fd50 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12984fb70 <col:2> 'int ()' Function 0x12984fab8 'BUG_ON' 'int ()'     | `-UnaryOperator 0x12984fd38 <col:9, col:25> 'int' prefix '!' cannot overflow     |   `-CallExpr 0x12984fcf8 <col:10, col:25> 'int'     |     |-ImplicitCastExpr 0x12984fce0 <col:10> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x12984fc70 <col:10> 'int ()' Function 0x12984fbb8 'PageLocked' 'int ()'     |     `-ImplicitCastExpr 0x12984fd20 <col:21> 'struct page *' <LValueToRValue>     |       `-DeclRefExpr 0x12984fc90 <col:21> 'struct page *' lvalue ParmVar 0x129831648 'page' 'struct page *'     |-CallExpr 0x12984fe70 <line:16:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12984fd90 <col:2> 'int ()' Function 0x12984fab8 'BUG_ON' 'int ()'     | `-BinaryOperator 0x12984fe50 <col:9, col:16> 'int' contains-errors '>'     |   |-DeclRefExpr 0x12984fdb0 <col:9> 'unsigned int' lvalue Var 0x12984e448 'from' 'unsigned int'     |   `-RecoveryExpr 0x12984fe30 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12984ff78 <line:17:2, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12984fe98 <col:2> 'int ()' Function 0x12984fab8 'BUG_ON' 'int ()'     | `-BinaryOperator 0x12984ff58 <col:9, col:14> 'int' contains-errors '>'     |   |-DeclRefExpr 0x12984feb8 <col:9> 'unsigned int' lvalue Var 0x12984e558 'to' 'unsigned int'     |   `-RecoveryExpr 0x12984ff38 <col:14> '<dependent type>' contains-errors lvalue     |-CallExpr 0x129850068 <line:18:2, col:18> 'int'     | |-ImplicitCastExpr 0x129850050 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12984ffa0 <col:2> 'int ()' Function 0x12984fab8 'BUG_ON' 'int ()'     | `-BinaryOperator 0x129850030 <col:9, col:16> 'int' '>'     |   |-ImplicitCastExpr 0x129850000 <col:9> 'unsigned int' <LValueToRValue>     |   | `-DeclRefExpr 0x12984ffc0 <col:9> 'unsigned int' lvalue Var 0x12984e448 'from' 'unsigned int'     |   `-ImplicitCastExpr 0x129850018 <col:16> 'unsigned int' <LValueToRValue>     |     `-DeclRefExpr 0x12984ffe0 <col:16> 'unsigned int' lvalue Var 0x12984e558 'to' 'unsigned int'     |-IfStmt 0x129850400 <line:20:2, line:21:42>     | |-UnaryOperator 0x129850208 <line:20:6, col:28> 'int' prefix '!' cannot overflow     | | `-CallExpr 0x1298501c8 <col:7, col:28> 'int'     | |   |-ImplicitCastExpr 0x1298501b0 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x129850170 <col:7> 'int ()' Function 0x1298500b8 'page_has_buffers' 'int ()'     | |   `-ImplicitCastExpr 0x1298501f0 <col:24> 'struct page *' <LValueToRValue>     | |     `-DeclRefExpr 0x129850190 <col:24> 'struct page *' lvalue ParmVar 0x129831648 'page' 'struct page *'     | `-CallExpr 0x129850398 <line:21:3, col:42> 'int' contains-errors     |   |-ImplicitCastExpr 0x129850380 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x129850300 <col:3> 'int ()' Function 0x129850248 'create_empty_buffers' 'int ()'     |   |-ImplicitCastExpr 0x1298503d0 <col:24> 'struct page *' <LValueToRValue>     |   | `-DeclRefExpr 0x129850320 <col:24> 'struct page *' lvalue ParmVar 0x129831648 'page' 'struct page *'     |   |-ImplicitCastExpr 0x1298503e8 <col:30> 'unsigned int' contains-errors <LValueToRValue>     |   | `-DeclRefExpr 0x129850340 <col:30> 'unsigned int' contains-errors lvalue Var 0x12984eb18 'blocksize' 'unsigned int'     |   `-IntegerLiteral 0x129850360 <col:41> 'int' 0     |-BinaryOperator 0x1298505d0 <line:22:2, col:26> 'struct buffer_head *' '='     | |-DeclRefExpr 0x129850420 <col:2> 'struct buffer_head *' lvalue Var 0x12984eed8 'head' 'struct buffer_head *'     | `-ImplicitCastExpr 0x1298505b8 <col:9, col:26> 'struct buffer_head *' <IntegralToPointer>     |   `-CallExpr 0x129850578 <col:9, col:26> 'int'     |     |-ImplicitCastExpr 0x129850560 <col:9> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x129850520 <col:9> 'int ()' Function 0x129850468 'page_buffers' 'int ()'     |     `-ImplicitCastExpr 0x1298505a0 <col:22> 'struct page *' <LValueToRValue>     |       `-DeclRefExpr 0x129850540 <col:22> 'struct page *' lvalue ParmVar 0x129831648 'page' 'struct page *'     |-BinaryOperator 0x1298507a0 <line:23:2, col:25> 'unsigned int' contains-errors '='     | |-DeclRefExpr 0x1298505f0 <col:2> 'unsigned int' lvalue Var 0x12984ec58 'bbits' 'unsigned int'     | `-ImplicitCastExpr 0x129850788 <col:10, col:25> 'unsigned int' contains-errors <IntegralCast>     |   `-CallExpr 0x129850748 <col:10, col:25> 'int' contains-errors     |     |-ImplicitCastExpr 0x129850730 <col:10> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1298506f0 <col:10> 'int ()' Function 0x129850638 'ilog2' 'int ()'     |     `-ImplicitCastExpr 0x129850770 <col:16> 'unsigned int' contains-errors <LValueToRValue>     |       `-DeclRefExpr 0x129850710 <col:16> 'unsigned int' contains-errors lvalue Var 0x12984eb18 'blocksize' 'unsigned int'     |-ForStmt 0x129853cc8 <line:26:2, line:71:2>     | |-BinaryOperator 0x1298508c8 <line:26:7, col:32> 'unsigned int' ','     | | |-BinaryOperator 0x129850830 <col:7, col:12> 'struct buffer_head *' '='     | | | |-DeclRefExpr 0x1298507d8 <col:7> 'struct buffer_head *' lvalue Var 0x12984ee48 'bh' 'struct buffer_head *'     | | | `-ImplicitCastExpr 0x129850818 <col:12> 'struct buffer_head *' <LValueToRValue>     | | |   `-DeclRefExpr 0x1298507f8 <col:12> 'struct buffer_head *' lvalue Var 0x12984eed8 'head' 'struct buffer_head *'     | | `-BinaryOperator 0x1298508a8 <col:18, col:32> 'unsigned int' '='     | |   |-DeclRefExpr 0x129850850 <col:18> 'unsigned int' lvalue Var 0x12984e930 'block_start' 'unsigned int'     | |   `-ImplicitCastExpr 0x129850890 <col:32> 'unsigned int' <IntegralCast>     | |     `-IntegerLiteral 0x129850870 <col:32> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x1298509c8 <col:35, col:50> 'int' '||'     | | |-BinaryOperator 0x129850958 <col:35, col:41> 'int' '!='     | | | |-ImplicitCastExpr 0x129850928 <col:35> 'struct buffer_head *' <LValueToRValue>     | | | | `-DeclRefExpr 0x1298508e8 <col:35> 'struct buffer_head *' lvalue Var 0x12984ee48 'bh' 'struct buffer_head *'     | | | `-ImplicitCastExpr 0x129850940 <col:41> 'struct buffer_head *' <LValueToRValue>     | | |   `-DeclRefExpr 0x129850908 <col:41> 'struct buffer_head *' lvalue Var 0x12984eed8 'head' 'struct buffer_head *'     | | `-UnaryOperator 0x1298509b0 <col:49, col:50> 'int' prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x129850998 <col:50> 'unsigned int' <LValueToRValue>     | |     `-DeclRefExpr 0x129850978 <col:50> 'unsigned int' lvalue Var 0x12984e930 'block_start' 'unsigned int'     | |-BinaryOperator 0x129851600 <line:27:6, col:49> 'struct buffer_head *' contains-errors ','     | | |-BinaryOperator 0x1298515e0 <col:6, col:29> 'unsigned int' contains-errors ','     | | | |-UnaryOperator 0x129851590 <col:6, col:11> '<dependent type>' contains-errors postfix '++' cannot overflow     | | | | `-RecoveryExpr 0x129851570 <col:6> '<dependent type>' contains-errors lvalue     | | | `-BinaryOperator 0x1298515c0 <col:15, col:29> 'unsigned int' '='     | | |   |-DeclRefExpr 0x129851418 <col:15> 'unsigned int' lvalue Var 0x12984e930 'block_start' 'unsigned int'     | | |   `-ImplicitCastExpr 0x1298515a8 <col:29> 'unsigned int' <LValueToRValue>     | | |     `-DeclRefExpr 0x129851438 <col:29> 'unsigned int' lvalue Var 0x12984e9b0 'block_end' 'unsigned int'     | | `-BinaryOperator 0x129851530 <col:40, col:49> 'struct buffer_head *' contains-errors '='     | |   |-DeclRefExpr 0x1298514b0 <col:40> 'struct buffer_head *' lvalue Var 0x12984ee48 'bh' 'struct buffer_head *'     | |   `-RecoveryExpr 0x129851508 <col:45, col:49> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x1298514d0 <col:45> 'struct buffer_head *' lvalue Var 0x12984ee48 'bh' 'struct buffer_head *'     | `-CompoundStmt 0x129853c88 <col:62, line:71:2>     |   |-BinaryOperator 0x1298516d0 <line:28:3, col:29> 'unsigned int' contains-errors '='     |   | |-DeclRefExpr 0x129851620 <col:3> 'unsigned int' lvalue Var 0x12984e9b0 'block_end' 'unsigned int'     |   | `-BinaryOperator 0x1298516b0 <col:15, col:29> 'unsigned int' contains-errors '+'     |   |   |-ImplicitCastExpr 0x129851680 <col:15> 'unsigned int' <LValueToRValue>     |   |   | `-DeclRefExpr 0x129851640 <col:15> 'unsigned int' lvalue Var 0x12984e930 'block_start' 'unsigned int'     |   |   `-ImplicitCastExpr 0x129851698 <col:29> 'unsigned int' contains-errors <LValueToRValue>     |   |     `-DeclRefExpr 0x129851660 <col:29> 'unsigned int' contains-errors lvalue Var 0x12984eb18 'blocksize' 'unsigned int'     |   |-IfStmt 0x129851d30 <line:29:3, line:35:3>     |   | |-BinaryOperator 0x129851810 <line:29:7, col:43> 'int' '||'     |   | | |-BinaryOperator 0x129851760 <col:7, col:20> 'int' '<='     |   | | | |-ImplicitCastExpr 0x129851730 <col:7> 'unsigned int' <LValueToRValue>     |   | | | | `-DeclRefExpr 0x1298516f0 <col:7> 'unsigned int' lvalue Var 0x12984e9b0 'block_end' 'unsigned int'     |   | | | `-ImplicitCastExpr 0x129851748 <col:20> 'unsigned int' <LValueToRValue>     |   | | |   `-DeclRefExpr 0x129851710 <col:20> 'unsigned int' lvalue Var 0x12984e448 'from' 'unsigned int'     |   | | `-BinaryOperator 0x1298517f0 <col:28, col:43> 'int' '>='     |   | |   |-ImplicitCastExpr 0x1298517c0 <col:28> 'unsigned int' <LValueToRValue>     |   | |   | `-DeclRefExpr 0x129851780 <col:28> 'unsigned int' lvalue Var 0x12984e930 'block_start' 'unsigned int'     |   | |   `-ImplicitCastExpr 0x1298517d8 <col:43> 'unsigned int' <LValueToRValue>     |   | |     `-DeclRefExpr 0x1298517a0 <col:43> 'unsigned int' lvalue Var 0x12984e558 'to' 'unsigned int'     |   | `-CompoundStmt 0x129851d10 <col:47, line:35:3>     |   |   |-IfStmt 0x129851ce8 <line:30:4, line:33:4>     |   |   | |-CallExpr 0x129851968 <line:30:8, col:25> 'int'     |   |   | | |-ImplicitCastExpr 0x129851950 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   |   | | | `-DeclRefExpr 0x129851910 <col:8> 'int ()' Function 0x129851858 'PageUptodate' 'int ()'     |   |   | | `-ImplicitCastExpr 0x129851990 <col:21> 'struct page *' <LValueToRValue>     |   |   | |   `-DeclRefExpr 0x129851930 <col:21> 'struct page *' lvalue ParmVar 0x129831648 'page' 'struct page *'     |   |   | `-CompoundStmt 0x129851cd0 <col:28, line:33:4>     |   |   |   `-IfStmt 0x129851cb0 <line:31:5, line:32:28>     |   |   |     |-UnaryOperator 0x129851b20 <line:31:9, col:28> 'int' prefix '!' cannot overflow     |   |   |     | `-CallExpr 0x129851ae0 <col:10, col:28> 'int'     |   |   |     |   |-ImplicitCastExpr 0x129851ac8 <col:10> 'int (*)()' <FunctionToPointerDecay>     |   |   |     |   | `-DeclRefExpr 0x129851a88 <col:10> 'int ()' Function 0x1298519d0 'buffer_uptodate' 'int ()'     |   |   |     |   `-ImplicitCastExpr 0x129851b08 <col:26> 'struct buffer_head *' <LValueToRValue>     |   |   |     |     `-DeclRefExpr 0x129851aa8 <col:26> 'struct buffer_head *' lvalue Var 0x12984ee48 'bh' 'struct buffer_head *'     |   |   |     `-CallExpr 0x129851c70 <line:32:6, col:28> 'int'     |   |   |       |-ImplicitCastExpr 0x129851c58 <col:6> 'int (*)()' <FunctionToPointerDecay>     |   |   |       | `-DeclRefExpr 0x129851c18 <col:6> 'int ()' Function 0x129851b60 'set_buffer_uptodate' 'int ()'     |   |   |       `-ImplicitCastExpr 0x129851c98 <col:26> 'struct buffer_head *' <LValueToRValue>     |   |   |         `-DeclRefExpr 0x129851c38 <col:26> 'struct buffer_head *' lvalue Var 0x12984ee48 'bh' 'struct buffer_head *'     |   |   `-ContinueStmt 0x129851d08 <line:34:4>     |   |-IfStmt 0x129852040 <line:36:3, line:37:23>     |   | |-CallExpr 0x129851e88 <line:36:7, col:20> 'int'     |   | | |-ImplicitCastExpr 0x129851e70 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | | | `-DeclRefExpr 0x129851e30 <col:7> 'int ()' Function 0x129851d78 'buffer_new' 'int ()'     |   | | `-ImplicitCastExpr 0x129851eb0 <col:18> 'struct buffer_head *' <LValueToRValue>     |   | |   `-DeclRefExpr 0x129851e50 <col:18> 'struct buffer_head *' lvalue Var 0x12984ee48 'bh' 'struct buffer_head *'     |   | `-CallExpr 0x129852000 <line:37:4, col:23> 'int'     |   |   |-ImplicitCastExpr 0x129851fe8 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x129851fa8 <col:4> 'int ()' Function 0x129851ef0 'clear_buffer_new' 'int ()'     |   |   `-ImplicitCastExpr 0x129852028 <col:21> 'struct buffer_head *' <LValueToRValue>     |   |     `-DeclRefExpr 0x129851fc8 <col:21> 'struct buffer_head *' lvalue Var 0x12984ee48 'bh' 'struct buffer_head *'     |   |-IfStmt 0x129852f38 <line:38:3, line:57:3>     |   | |-UnaryOperator 0x1298521d8 <line:38:7, col:24> 'int' prefix '!' cannot overflow     |   | | `-CallExpr 0x129852198 <col:8, col:24> 'int'     |   | |   |-ImplicitCastExpr 0x129852180 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | |   | `-DeclRefExpr 0x129852140 <col:8> 'int ()' Function 0x129852088 'buffer_mapped' 'int ()'     |   | |   `-ImplicitCastExpr 0x1298521c0 <col:22> 'struct buffer_head *' <LValueToRValue>     |   | |     `-DeclRefExpr 0x129852160 <col:22> 'struct buffer_head *' lvalue Var 0x12984ee48 'bh' 'struct buffer_head *'     |   | `-CompoundStmt 0x129852f10 <col:27, line:57:3>     |   |   |-CallExpr 0x129852390 <line:39:4, col:35> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x1298522d0 <col:4> 'int ()' Function 0x129852218 'WARN_ON' 'int ()'     |   |   | `-BinaryOperator 0x129852370 <col:12, col:26> 'int' contains-errors '!='     |   |   |   |-RecoveryExpr 0x129852328 <col:12, col:16> '<dependent type>' contains-errors lvalue     |   |   |   | `-DeclRefExpr 0x1298522f0 <col:12> 'struct buffer_head *' lvalue Var 0x12984ee48 'bh' 'struct buffer_head *'     |   |   |   `-DeclRefExpr 0x129852350 <col:26> 'unsigned int' contains-errors lvalue Var 0x12984eb18 'blocksize' 'unsigned int'     |   |   |-IfStmt 0x1298524a0 <line:41:4, line:42:5>     |   |   | |-ImplicitCastExpr 0x129852480 <line:41:8> 'int' <LValueToRValue>     |   |   | | `-DeclRefExpr 0x129852460 <col:8> 'int' lvalue Var 0x12984ea60 'err' 'int'     |   |   | `-BreakStmt 0x129852498 <line:42:5>     |   |   `-IfStmt 0x129852ef0 <line:43:4, line:56:4>     |   |     |-CallExpr 0x129852518 <line:43:8, col:21> 'int'     |   |     | |-ImplicitCastExpr 0x129852500 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   |     | | `-DeclRefExpr 0x1298524c0 <col:8> 'int ()' Function 0x129851d78 'buffer_new' 'int ()'     |   |     | `-ImplicitCastExpr 0x129852540 <col:19> 'struct buffer_head *' <LValueToRValue>     |   |     |   `-DeclRefExpr 0x1298524e0 <col:19> 'struct buffer_head *' lvalue Var 0x12984ee48 'bh' 'struct buffer_head *'     |   |     `-CompoundStmt 0x129852ec0 <col:24, line:56:4>     |   |       |-CallExpr 0x129852718 <line:44:5, line:45:23> '<dependent type>' contains-errors     |   |       | |-DeclRefExpr 0x129852638 <line:44:5> 'int ()' Function 0x129852580 'unmap_underlying_metadata' 'int ()'     |   |       | |-RecoveryExpr 0x129852690 <col:31, col:35> '<dependent type>' contains-errors lvalue     |   |       | | `-DeclRefExpr 0x129852658 <col:31> 'struct buffer_head *' lvalue Var 0x12984ee48 'bh' 'struct buffer_head *'     |   |       | `-RecoveryExpr 0x1298526f0 <line:45:10, col:14> '<dependent type>' contains-errors lvalue     |   |       |   `-DeclRefExpr 0x1298526b8 <col:10> 'struct buffer_head *' lvalue Var 0x12984ee48 'bh' 'struct buffer_head *'     |   |       |-IfStmt 0x129852ac0 <line:46:5, line:51:5>     |   |       | |-CallExpr 0x1298527a0 <line:46:9, col:26> 'int'     |   |       | | |-ImplicitCastExpr 0x129852788 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |       | | | `-DeclRefExpr 0x129852748 <col:9> 'int ()' Function 0x129851858 'PageUptodate' 'int ()'     |   |       | | `-ImplicitCastExpr 0x1298527c8 <col:22> 'struct page *' <LValueToRValue>     |   |       | |   `-DeclRefExpr 0x129852768 <col:22> 'struct page *' lvalue ParmVar 0x129831648 'page' 'struct page *'     |   |       | `-CompoundStmt 0x129852a90 <col:29, line:51:5>     |   |       |   |-CallExpr 0x129852838 <line:47:6, col:25> 'int'     |   |       |   | |-ImplicitCastExpr 0x129852820 <col:6> 'int (*)()' <FunctionToPointerDecay>     |   |       |   | | `-DeclRefExpr 0x1298527e0 <col:6> 'int ()' Function 0x129851ef0 'clear_buffer_new' 'int ()'     |   |       |   | `-ImplicitCastExpr 0x129852860 <col:23> 'struct buffer_head *' <LValueToRValue>     |   |       |   |   `-DeclRefExpr 0x129852800 <col:23> 'struct buffer_head *' lvalue Var 0x12984ee48 'bh' 'struct buffer_head *'     |   |       |   |-CallExpr 0x1298528d0 <line:48:6, col:28> 'int'     |   |       |   | |-ImplicitCastExpr 0x1298528b8 <col:6> 'int (*)()' <FunctionToPointerDecay>     |   |       |   | | `-DeclRefExpr 0x129852878 <col:6> 'int ()' Function 0x129851b60 'set_buffer_uptodate' 'int ()'     |   |       |   | `-ImplicitCastExpr 0x1298528f8 <col:26> 'struct buffer_head *' <LValueToRValue>     |   |       |   |   `-DeclRefExpr 0x129852898 <col:26> 'struct buffer_head *' lvalue Var 0x12984ee48 'bh' 'struct buffer_head *'     |   |       |   |-CallExpr 0x129852a48 <line:49:6, col:26> 'int'     |   |       |   | |-ImplicitCastExpr 0x129852a30 <col:6> 'int (*)()' <FunctionToPointerDecay>     |   |       |   | | `-DeclRefExpr 0x1298529f0 <col:6> 'int ()' Function 0x129852938 'mark_buffer_dirty' 'int ()'     |   |       |   | `-ImplicitCastExpr 0x129852a70 <col:24> 'struct buffer_head *' <LValueToRValue>     |   |       |   |   `-DeclRefExpr 0x129852a10 <col:24> 'struct buffer_head *' lvalue Var 0x12984ee48 'bh' 'struct buffer_head *'     |   |       |   `-ContinueStmt 0x129852a88 <line:50:6>     |   |       |-IfStmt 0x129852e98 <line:52:5, line:54:28>     |   |       | |-BinaryOperator 0x129852c00 <line:52:9, col:41> 'int' '||'     |   |       | | |-BinaryOperator 0x129852b50 <col:9, col:21> 'int' '>'     |   |       | | | |-ImplicitCastExpr 0x129852b20 <col:9> 'unsigned int' <LValueToRValue>     |   |       | | | | `-DeclRefExpr 0x129852ae0 <col:9> 'unsigned int' lvalue Var 0x12984e9b0 'block_end' 'unsigned int'     |   |       | | | `-ImplicitCastExpr 0x129852b38 <col:21> 'unsigned int' <LValueToRValue>     |   |       | | |   `-DeclRefExpr 0x129852b00 <col:21> 'unsigned int' lvalue Var 0x12984e558 'to' 'unsigned int'     |   |       | | `-BinaryOperator 0x129852be0 <col:27, col:41> 'int' '<'     |   |       | |   |-ImplicitCastExpr 0x129852bb0 <col:27> 'unsigned int' <LValueToRValue>     |   |       | |   | `-DeclRefExpr 0x129852b70 <col:27> 'unsigned int' lvalue Var 0x12984e930 'block_start' 'unsigned int'     |   |       | |   `-ImplicitCastExpr 0x129852bc8 <col:41> 'unsigned int' <LValueToRValue>     |   |       | |     `-DeclRefExpr 0x129852b90 <col:41> 'unsigned int' lvalue Var 0x12984e448 'from' 'unsigned int'     |   |       | `-CallExpr 0x129852dd8 <line:53:6, line:54:28> 'int'     |   |       |   |-ImplicitCastExpr 0x129852dc0 <line:53:6> 'int (*)()' <FunctionToPointerDecay>     |   |       |   | `-DeclRefExpr 0x129852d00 <col:6> 'int ()' Function 0x129852c48 'zero_user_segments' 'int ()'     |   |       |   |-ImplicitCastExpr 0x129852e20 <col:25> 'struct page *' <LValueToRValue>     |   |       |   | `-DeclRefExpr 0x129852d20 <col:25> 'struct page *' lvalue ParmVar 0x129831648 'page' 'struct page *'     |   |       |   |-ImplicitCastExpr 0x129852e38 <col:31> 'unsigned int' <LValueToRValue>     |   |       |   | `-DeclRefExpr 0x129852d40 <col:31> 'unsigned int' lvalue Var 0x12984e558 'to' 'unsigned int'     |   |       |   |-ImplicitCastExpr 0x129852e50 <col:35> 'unsigned int' <LValueToRValue>     |   |       |   | `-DeclRefExpr 0x129852d60 <col:35> 'unsigned int' lvalue Var 0x12984e9b0 'block_end' 'unsigned int'     |   |       |   |-ImplicitCastExpr 0x129852e68 <line:54:11> 'unsigned int' <LValueToRValue>     |   |       |   | `-DeclRefExpr 0x129852d80 <col:11> 'unsigned int' lvalue Var 0x12984e930 'block_start' 'unsigned int'     |   |       |   `-ImplicitCastExpr 0x129852e80 <col:24> 'unsigned int' <LValueToRValue>     |   |       |     `-DeclRefExpr 0x129852da0 <col:24> 'unsigned int' lvalue Var 0x12984e448 'from' 'unsigned int'     |   |       `-ContinueStmt 0x129852eb8 <line:55:5>     |   |-IfStmt 0x129853180 <line:58:3, line:62:3>     |   | |-CallExpr 0x129852fb0 <line:58:7, col:24> 'int'     |   | | |-ImplicitCastExpr 0x129852f98 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | | | `-DeclRefExpr 0x129852f58 <col:7> 'int ()' Function 0x129851858 'PageUptodate' 'int ()'     |   | | `-ImplicitCastExpr 0x129852fd8 <col:20> 'struct page *' <LValueToRValue>     |   | |   `-DeclRefExpr 0x129852f78 <col:20> 'struct page *' lvalue ParmVar 0x129831648 'page' 'struct page *'     |   | `-CompoundStmt 0x129853160 <col:27, line:62:3>     |   |   |-IfStmt 0x129853138 <line:59:4, line:60:27>     |   |   | |-UnaryOperator 0x129853088 <line:59:8, col:27> 'int' prefix '!' cannot overflow     |   |   | | `-CallExpr 0x129853048 <col:9, col:27> 'int'     |   |   | |   |-ImplicitCastExpr 0x129853030 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |   | |   | `-DeclRefExpr 0x129852ff0 <col:9> 'int ()' Function 0x1298519d0 'buffer_uptodate' 'int ()'     |   |   | |   `-ImplicitCastExpr 0x129853070 <col:25> 'struct buffer_head *' <LValueToRValue>     |   |   | |     `-DeclRefExpr 0x129853010 <col:25> 'struct buffer_head *' lvalue Var 0x12984ee48 'bh' 'struct buffer_head *'     |   |   | `-CallExpr 0x1298530f8 <line:60:5, col:27> 'int'     |   |   |   |-ImplicitCastExpr 0x1298530e0 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   |   |   | `-DeclRefExpr 0x1298530a0 <col:5> 'int ()' Function 0x129851b60 'set_buffer_uptodate' 'int ()'     |   |   |   `-ImplicitCastExpr 0x129853120 <col:25> 'struct buffer_head *' <LValueToRValue>     |   |   |     `-DeclRefExpr 0x1298530c0 <col:25> 'struct buffer_head *' lvalue Var 0x12984ee48 'bh' 'struct buffer_head *'     |   |   `-ContinueStmt 0x129853158 <line:61:4>     |   `-IfStmt 0x129853c68 <line:63:3, line:70:3>     |     |-BinaryOperator 0x129853710 <line:63:7, line:65:44> 'int' '&&'     |     | |-BinaryOperator 0x129853590 <line:63:7, line:64:27> 'int' '&&'     |     | | |-BinaryOperator 0x1298533e0 <line:63:7, col:47> 'int' '&&'     |     | | | |-UnaryOperator 0x129853238 <col:7, col:26> 'int' prefix '!' cannot overflow     |     | | | | `-CallExpr 0x1298531f8 <col:8, col:26> 'int'     |     | | | |   |-ImplicitCastExpr 0x1298531e0 <col:8> 'int (*)()' <FunctionToPointerDecay>     |     | | | |   | `-DeclRefExpr 0x1298531a0 <col:8> 'int ()' Function 0x1298519d0 'buffer_uptodate' 'int ()'     |     | | | |   `-ImplicitCastExpr 0x129853220 <col:24> 'struct buffer_head *' <LValueToRValue>     |     | | | |     `-DeclRefExpr 0x1298531c0 <col:24> 'struct buffer_head *' lvalue Var 0x12984ee48 'bh' 'struct buffer_head *'     |     | | | `-UnaryOperator 0x1298533c8 <col:31, col:47> 'int' prefix '!' cannot overflow     |     | | |   `-CallExpr 0x129853388 <col:32, col:47> 'int'     |     | | |     |-ImplicitCastExpr 0x129853370 <col:32> 'int (*)()' <FunctionToPointerDecay>     |     | | |     | `-DeclRefExpr 0x129853330 <col:32> 'int ()' Function 0x129853278 'buffer_delay' 'int ()'     |     | | |     `-ImplicitCastExpr 0x1298533b0 <col:45> 'struct buffer_head *' <LValueToRValue>     |     | | |       `-DeclRefExpr 0x129853350 <col:45> 'struct buffer_head *' lvalue Var 0x12984ee48 'bh' 'struct buffer_head *'     |     | | `-UnaryOperator 0x129853578 <line:64:7, col:27> 'int' prefix '!' cannot overflow     |     | |   `-CallExpr 0x129853538 <col:8, col:27> 'int'     |     | |     |-ImplicitCastExpr 0x129853520 <col:8> 'int (*)()' <FunctionToPointerDecay>     |     | |     | `-DeclRefExpr 0x1298534e0 <col:8> 'int ()' Function 0x129853428 'buffer_unwritten' 'int ()'     |     | |     `-ImplicitCastExpr 0x129853560 <col:25> 'struct buffer_head *' <LValueToRValue>     |     | |       `-DeclRefExpr 0x129853500 <col:25> 'struct buffer_head *' lvalue Var 0x12984ee48 'bh' 'struct buffer_head *'     |     | `-ParenExpr 0x1298536f0 <line:65:7, col:44> 'int'     |     |   `-BinaryOperator 0x1298536d0 <col:8, col:42> 'int' '||'     |     |     |-BinaryOperator 0x129853620 <col:8, col:22> 'int' '<'     |     |     | |-ImplicitCastExpr 0x1298535f0 <col:8> 'unsigned int' <LValueToRValue>     |     |     | | `-DeclRefExpr 0x1298535b0 <col:8> 'unsigned int' lvalue Var 0x12984e930 'block_start' 'unsigned int'     |     |     | `-ImplicitCastExpr 0x129853608 <col:22> 'unsigned int' <LValueToRValue>     |     |     |   `-DeclRefExpr 0x1298535d0 <col:22> 'unsigned int' lvalue Var 0x12984e448 'from' 'unsigned int'     |     |     `-BinaryOperator 0x1298536b0 <col:30, col:42> 'int' '>'     |     |       |-ImplicitCastExpr 0x129853680 <col:30> 'unsigned int' <LValueToRValue>     |     |       | `-DeclRefExpr 0x129853640 <col:30> 'unsigned int' lvalue Var 0x12984e9b0 'block_end' 'unsigned int'     |     |       `-ImplicitCastExpr 0x129853698 <col:42> 'unsigned int' <LValueToRValue>     |     |         `-DeclRefExpr 0x129853660 <col:42> 'unsigned int' lvalue Var 0x12984e558 'to' 'unsigned int'     |     `-CompoundStmt 0x129853c50 <col:47, line:70:3>     |       `-BinaryOperator 0x129853910 <line:67:4, col:17> 'struct buffer_head *' '='     |         |-UnaryOperator 0x1298538c0 <col:4, col:12> 'struct buffer_head *' lvalue prefix '*' cannot overflow     |         | `-UnaryOperator 0x1298538a8 <col:5, col:12> 'struct buffer_head **' postfix '++'     |         |   `-DeclRefExpr 0x129853888 <col:5> 'struct buffer_head **' lvalue Var 0x12984f128 'wait_bh' 'struct buffer_head **'     |         `-ImplicitCastExpr 0x1298538f8 <col:17> 'struct buffer_head *' <LValueToRValue>     |           `-DeclRefExpr 0x1298538d8 <col:17> 'struct buffer_head *' lvalue Var 0x12984ee48 'bh' 'struct buffer_head *'     |-WhileStmt 0x129854050 <line:73:2, line:77:2>     | |-BinaryOperator 0x129853d70 <line:73:9, col:19> 'int' '>'     | | |-ImplicitCastExpr 0x129853d40 <col:9> 'struct buffer_head **' <LValueToRValue>     | | | `-DeclRefExpr 0x129853d00 <col:9> 'struct buffer_head **' lvalue Var 0x12984f128 'wait_bh' 'struct buffer_head **'     | | `-ImplicitCastExpr 0x129853d58 <col:19> 'struct buffer_head **' <ArrayToPointerDecay>     | |   `-DeclRefExpr 0x129853d20 <col:19> 'struct buffer_head *[2]' lvalue Var 0x12984f038 'wait' 'struct buffer_head *[2]'     | `-CompoundStmt 0x129854038 <col:25, line:77:2>     |   `-CallExpr 0x129853ef8 <line:74:3, col:28> 'int'     |     |-ImplicitCastExpr 0x129853ee0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x129853e70 <col:3> 'int ()' Function 0x129853db8 'wait_on_buffer' 'int ()'     |     `-ImplicitCastExpr 0x129853f20 <col:18, col:21> 'struct buffer_head *' <LValueToRValue>     |       `-UnaryOperator 0x129853ec8 <col:18, col:21> 'struct buffer_head *' lvalue prefix '*' cannot overflow     |         `-UnaryOperator 0x129853eb0 <col:19, col:21> 'struct buffer_head **' prefix '--'     |           `-DeclRefExpr 0x129853e90 <col:21> 'struct buffer_head **' lvalue Var 0x12984f128 'wait_bh' 'struct buffer_head **'     |-IfStmt 0x1298545d8 <line:78:2, line:81:26> has_else     | |-CallExpr 0x1298541a8 <line:78:6, col:18> 'int'     | | |-ImplicitCastExpr 0x129854190 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x129854150 <col:6> 'int ()' Function 0x129854098 'unlikely' 'int ()'     | | `-ImplicitCastExpr 0x1298541d0 <col:15> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x129854170 <col:15> 'int' lvalue Var 0x12984ea60 'err' 'int'     | |-CallExpr 0x129854360 <line:79:3, col:39> 'int'     | | |-ImplicitCastExpr 0x129854348 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x1298542c8 <col:3> 'int ()' Function 0x129854210 'page_zero_new_buffers' 'int ()'     | | |-ImplicitCastExpr 0x129854398 <col:25> 'struct page *' <LValueToRValue>     | | | `-DeclRefExpr 0x1298542e8 <col:25> 'struct page *' lvalue ParmVar 0x129831648 'page' 'struct page *'     | | |-ImplicitCastExpr 0x1298543b0 <col:31> 'unsigned int' <LValueToRValue>     | | | `-DeclRefExpr 0x129854308 <col:31> 'unsigned int' lvalue Var 0x12984e448 'from' 'unsigned int'     | | `-ImplicitCastExpr 0x1298543c8 <col:37> 'unsigned int' <LValueToRValue>     | |   `-DeclRefExpr 0x129854328 <col:37> 'unsigned int' lvalue Var 0x12984e558 'to' 'unsigned int'     | `-IfStmt 0x1298545b8 <line:80:7, line:81:26>     |   |-RecoveryExpr 0x1298543e0 <line:80:11> '_Bool' contains-errors     |   `-BinaryOperator 0x129854598 <line:81:3, col:26> 'int' '='     |     |-DeclRefExpr 0x129854400 <col:3> 'int' lvalue Var 0x12984ea60 'err' 'int'     |     `-CallExpr 0x129854558 <col:9, col:26> 'int'     |       |-ImplicitCastExpr 0x129854540 <col:9> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x129854500 <col:9> 'int ()' Function 0x129854448 'ext4_decrypt' 'int ()'     |       `-ImplicitCastExpr 0x129854580 <col:22> 'struct page *' <LValueToRValue>     |         `-DeclRefExpr 0x129854520 <col:22> 'struct page *' lvalue ParmVar 0x129831648 'page' 'struct page *'     `-ReturnStmt 0x129854640 <line:82:2, col:9>       `-ImplicitCastExpr 0x129854628 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x129854608 <col:9> 'int' lvalue Var 0x12984ea60 'err' 'int' ","20888":"`-FunctionDecl 0x12480de88  line:1:17 invalid nvme_identify_ctrl 'int (int *, int *)' static   |-ParmVarDecl 0x12480dd28 <col:36, col:46> col:46 invalid n 'int *'   |-ParmVarDecl 0x12480dda8 <col:49, col:62> col:62 invalid req 'int *'   `-CompoundStmt 0x12480e390 <line:2:1, line:6:1>     `-CallExpr 0x12480e108 <line:3:5, col:34> 'int'       `-ImplicitCastExpr 0x12480e0f0 <col:5> 'int (*)()' <FunctionToPointerDecay>         `-DeclRefExpr 0x12480e0a0 <col:5> 'int ()' Function 0x12480dfe8 'trace_pci_nvme_identify_ctrl' 'int ()' ","20721":"`-FunctionDecl 0x14200dd90  line:1:13 pw_init 'void (void)' static   `-CompoundStmt 0x142029990 <line:2:1, line:31:1>     |-DeclStmt 0x142026618 <line:3:2, col:20>     | |-RecordDecl 0x14200de80 <col:2, col:9> col:9 struct rlimit     | `-VarDecl 0x14200df78 <col:2, col:16> col:16 referenced invalid rlim 'struct rlimit'     |-BinaryOperator 0x1420267d8 <line:6:2, col:34> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x142026678 <col:2, col:7> '<dependent type>' contains-errors lvalue .rlim_cur     | | `-RecoveryExpr 0x142026650 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x142026630 <col:2> 'struct rlimit' lvalue Var 0x14200df78 'rlim' 'struct rlimit'     | `-BinaryOperator 0x1420267b8 <col:18, col:34> '<dependent type>' contains-errors '='     |   |-CXXDependentScopeMemberExpr 0x1420266e0 <col:18, col:23> '<dependent type>' contains-errors lvalue .rlim_max     |   | `-RecoveryExpr 0x1420266c0 <col:18> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x142026798 <col:34> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1420269d0 <line:7:2, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142026910 <col:2> 'int ()' Function 0x142026858 'setrlimit' 'int ()'     | |-RecoveryExpr 0x1420269b0 <col:12> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x142026968 <col:24, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x142026948 <col:25> '<dependent type>' contains-errors lvalue     |-CallExpr 0x142026ac0 <line:8:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142026a00 <col:2> 'int ()' Function 0x142026858 'setrlimit' 'int ()'     | |-RecoveryExpr 0x142026aa0 <col:12> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x142026a58 <col:26, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x142026a38 <col:27> '<dependent type>' contains-errors lvalue     |-CallExpr 0x142026bb0 <line:9:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142026af0 <col:2> 'int ()' Function 0x142026858 'setrlimit' 'int ()'     | |-RecoveryExpr 0x142026b90 <col:12> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x142026b48 <col:26, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x142026b28 <col:27> '<dependent type>' contains-errors lvalue     |-CallExpr 0x142026ca0 <line:10:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142026be0 <col:2> 'int ()' Function 0x142026858 'setrlimit' 'int ()'     | |-RecoveryExpr 0x142026c80 <col:12> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x142026c38 <col:25, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x142026c18 <col:26> '<dependent type>' contains-errors lvalue     |-CallExpr 0x142026d90 <line:11:2, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142026cd0 <col:2> 'int ()' Function 0x142026858 'setrlimit' 'int ()'     | |-RecoveryExpr 0x142026d70 <col:12> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x142026d28 <col:24, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x142026d08 <col:25> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x142026ef8 <line:15:2, col:34> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x142026e08 <col:2, col:7> '<dependent type>' contains-errors lvalue .rlim_cur     | | `-RecoveryExpr 0x142026de0 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x142026dc0 <col:2> 'struct rlimit' lvalue Var 0x14200df78 'rlim' 'struct rlimit'     | `-BinaryOperator 0x142026ed8 <col:18, col:34> '<dependent type>' contains-errors '='     |   |-CXXDependentScopeMemberExpr 0x142026e70 <col:18, col:23> '<dependent type>' contains-errors lvalue .rlim_max     |   | `-RecoveryExpr 0x142026e50 <col:18> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x142026eb8 <col:34> 'int' 0     |-CallExpr 0x142026fd8 <line:16:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142026f18 <col:2> 'int ()' Function 0x142026858 'setrlimit' 'int ()'     | |-RecoveryExpr 0x142026fb8 <col:12> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x142026f70 <col:25, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x142026f50 <col:26> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1420271a8 <line:20:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1420270e8 <col:2> 'int ()' Function 0x142027030 'signal' 'int ()'     | |-RecoveryExpr 0x142027168 <col:9> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x142027188 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x142027298 <line:21:2, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1420271d8 <col:2> 'int ()' Function 0x142027030 'signal' 'int ()'     | |-RecoveryExpr 0x142027258 <col:9> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x142027278 <col:17> '<dependent type>' contains-errors lvalue     |-CallExpr 0x142027388 <line:22:2, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1420272c8 <col:2> 'int ()' Function 0x142027030 'signal' 'int ()'     | |-RecoveryExpr 0x142027348 <col:9> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x142027368 <col:17> '<dependent type>' contains-errors lvalue     |-CallExpr 0x142027478 <line:23:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1420273b8 <col:2> 'int ()' Function 0x142027030 'signal' 'int ()'     | |-RecoveryExpr 0x142027438 <col:9> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x142027458 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x142027568 <line:24:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1420274a8 <col:2> 'int ()' Function 0x142027030 'signal' 'int ()'     | |-RecoveryExpr 0x142027528 <col:9> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x142027548 <col:18> '<dependent type>' contains-errors lvalue     `-CallExpr 0x142029968 <line:30:2, col:9> 'int'       |-ImplicitCastExpr 0x142029950 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x1420298e0 <col:2> 'int ()' Function 0x142029828 'umask' 'int ()'       `-IntegerLiteral 0x142029900 <col:8> 'int' 0 ","20547":"`-FunctionDecl 0x144942350  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x144942450 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x1449424b8 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x144942520 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1449423f8 <<invalid sloc>> Implicit 900 ","20841":"`-FunctionDecl 0x14e922768  line:1:20 invalid i40e_add_macvlan_filter 'int (struct i40e_hw *, int, const int *, int *)' static   |-ParmVarDecl 0x14f00e268 <col:44, col:60> col:60 used hw 'struct i40e_hw *'   |-ParmVarDecl 0x14f00e2e8 <col:64, col:68> col:68 invalid seid 'int'   |-ParmVarDecl 0x14f00e368 <line:2:9, col:19> col:19 invalid macaddr 'const int *'   |-ParmVarDecl 0x14e922618 <col:28, col:33> col:33 used aq_err 'int *'   `-CompoundStmt 0x14e923468 <line:3:1, line:18:1>     |-DeclStmt 0x14e9229a8 <line:4:2, col:50>     | |-RecordDecl 0x14e922830 <col:2, col:9> col:9 struct i40e_aqc_add_macvlan_element_data     | `-VarDecl 0x14e922928 <col:2, col:43> col:43 referenced invalid element 'struct i40e_aqc_add_macvlan_element_data'     |-CallExpr 0x14e922bc8 <line:8:2, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14e922b20 <col:2> 'int ()' Function 0x14e922a68 'ether_addr_copy' 'int ()'     | |-CXXDependentScopeMemberExpr 0x14e922b60 <col:18, col:26> '<dependent type>' contains-errors lvalue .mac_addr     | | `-RecoveryExpr 0x14e922b40 <col:18> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14e922ba8 <col:36> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14e922ca8 <line:9:2, col:21> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14e922c40 <col:2, col:10> '<dependent type>' contains-errors lvalue .vlan_tag     | | `-RecoveryExpr 0x14e922c18 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14e922bf8 <col:2> 'struct i40e_aqc_add_macvlan_element_data' lvalue Var 0x14e922928 'element' 'struct i40e_aqc_add_macvlan_element_data'     | `-IntegerLiteral 0x14e922c88 <col:21> 'int' 0     |-BinaryOperator 0x14e922d78 <line:10:2, col:25> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14e922d10 <col:2, col:10> '<dependent type>' contains-errors lvalue .queue_number     | | `-RecoveryExpr 0x14e922ce8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14e922cc8 <col:2> 'struct i40e_aqc_add_macvlan_element_data' lvalue Var 0x14e922928 'element' 'struct i40e_aqc_add_macvlan_element_data'     | `-IntegerLiteral 0x14e922d58 <col:25> 'int' 0     |-BinaryOperator 0x14e922e80 <line:11:2, col:25> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14e922de0 <col:2, col:10> '<dependent type>' contains-errors lvalue .match_method     | | `-RecoveryExpr 0x14e922db8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14e922d98 <col:2> 'struct i40e_aqc_add_macvlan_element_data' lvalue Var 0x14e922928 'element' 'struct i40e_aqc_add_macvlan_element_data'     | `-RecoveryExpr 0x14e922e60 <col:25> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14e9230f0 <line:13:2, col:39> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14e922f00 <col:2, col:10> '<dependent type>' contains-errors lvalue .flags     | | `-RecoveryExpr 0x14e922ed8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14e922eb8 <col:2> 'struct i40e_aqc_add_macvlan_element_data' lvalue Var 0x14e922928 'element' 'struct i40e_aqc_add_macvlan_element_data'     | `-CallExpr 0x14e9230c8 <col:18, col:39> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14e923028 <col:18> 'int ()' Function 0x14e922f70 'cpu_to_le16' 'int ()'     |   `-RecoveryExpr 0x14e9230a8 <col:30> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14e923400 <line:15:2, col:19> 'int' contains-errors '='     | |-UnaryOperator 0x14e923340 <col:2, col:3> 'int' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x14e923328 <col:3> 'int *' <LValueToRValue>     | |   `-DeclRefExpr 0x14e923308 <col:3> 'int *' lvalue ParmVar 0x14e922618 'aq_err' 'int *'     | `-CXXDependentScopeMemberExpr 0x14e9233b8 <col:12, col:19> '<dependent type>' contains-errors lvalue .asq_last_status     |   `-RecoveryExpr 0x14e923390 <col:12, col:16> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14e923358 <col:12> 'struct i40e_hw *' lvalue ParmVar 0x14f00e268 'hw' 'struct i40e_hw *'     `-ReturnStmt 0x14e923458 <line:17:2, col:9>       `-RecoveryExpr 0x14e923438 <col:9> '<dependent type>' contains-errors lvalue ","20218":"`-FunctionDecl 0x15a140a00  line:1:12 rt6_info_hash_nhsfn 'int (unsigned int, const struct flowi6 *)' static   |-ParmVarDecl 0x15a1280d8 <col:32, col:45> col:45 used candidate_count 'unsigned int'   |-ParmVarDecl 0x15a1286c8 <line:2:11, col:32> col:32 used fl6 'const struct flowi6 *'   `-CompoundStmt 0x15a141428 <line:3:1, line:29:1>     |-DeclStmt 0x15a140be0 <line:4:2, col:38>     | `-VarDecl 0x15a140b18 <col:2, col:26> col:15 used val 'unsigned int' cinit     |   `-RecoveryExpr 0x15a140bb8 <col:21, col:26> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x15a140b80 <col:21> 'const struct flowi6 *' lvalue ParmVar 0x15a1286c8 'fl6' 'const struct flowi6 *'     |-CompoundAssignOperator 0x15a140e00 <line:6:2, col:35> 'unsigned int' contains-errors '^=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-DeclRefExpr 0x15a140bf8 <col:2> 'unsigned int' contains-errors lvalue Var 0x15a140b18 'val' 'unsigned int'     | `-CallExpr 0x15a140dd8 <col:9, col:35> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15a140d40 <col:9> 'int ()' Function 0x15a140c88 'ipv6_addr_hash' 'int ()'     |   `-UnaryOperator 0x15a140dc0 <col:24, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x15a140d98 <col:25, col:30> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x15a140d60 <col:25> 'const struct flowi6 *' lvalue ParmVar 0x15a1286c8 'fl6' 'const struct flowi6 *'     |-CompoundAssignOperator 0x15a140f10 <line:7:2, col:35> 'unsigned int' contains-errors '^=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-DeclRefExpr 0x15a140e30 <col:2> 'unsigned int' contains-errors lvalue Var 0x15a140b18 'val' 'unsigned int'     | `-CallExpr 0x15a140ee8 <col:9, col:35> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15a140e50 <col:9> 'int ()' Function 0x15a140c88 'ipv6_addr_hash' 'int ()'     |   `-UnaryOperator 0x15a140ed0 <col:24, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x15a140ea8 <col:25, col:30> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x15a140e70 <col:25> 'const struct flowi6 *' lvalue ParmVar 0x15a1286c8 'fl6' 'const struct flowi6 *'     |-SwitchStmt 0x15a140fb8 <line:10:2, line:22:2>     | |-ImplicitCastExpr 0x15a140fa0 <line:10:10, col:15> '<dependent type>' contains-errors <LValueToRValue>     | | `-RecoveryExpr 0x15a140f78 <col:10, col:15> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15a140f40 <col:10> 'const struct flowi6 *' lvalue ParmVar 0x15a1286c8 'fl6' 'const struct flowi6 *'     | `-CompoundStmt 0x15a141130 <col:29, line:22:2>     |   |-BreakStmt 0x15a141098 <line:16:3>     |   `-BreakStmt 0x15a141128 <line:21:3>     |-BinaryOperator 0x15a141350 <line:27:2, col:37> 'unsigned int' contains-errors '='     | |-DeclRefExpr 0x15a141188 <col:2> 'unsigned int' contains-errors lvalue Var 0x15a140b18 'val' 'unsigned int'     | `-BinaryOperator 0x15a141330 <col:8, col:37> 'unsigned int' contains-errors '^'     |   |-BinaryOperator 0x15a141278 <col:8, col:23> 'unsigned int' contains-errors '^'     |   | |-ImplicitCastExpr 0x15a141260 <col:8> 'unsigned int' contains-errors <LValueToRValue>     |   | | `-DeclRefExpr 0x15a1411a8 <col:8> 'unsigned int' contains-errors lvalue Var 0x15a140b18 'val' 'unsigned int'     |   | `-ParenExpr 0x15a141240 <col:14, col:23> 'unsigned int' contains-errors     |   |   `-BinaryOperator 0x15a141220 <col:15, col:22> 'unsigned int' contains-errors '>>'     |   |     |-ImplicitCastExpr 0x15a141208 <col:15> 'unsigned int' contains-errors <LValueToRValue>     |   |     | `-DeclRefExpr 0x15a1411c8 <col:15> 'unsigned int' contains-errors lvalue Var 0x15a140b18 'val' 'unsigned int'     |   |     `-IntegerLiteral 0x15a1411e8 <col:22> 'int' 7     |   `-ParenExpr 0x15a141310 <col:27, col:37> 'unsigned int' contains-errors     |     `-BinaryOperator 0x15a1412f0 <col:28, col:35> 'unsigned int' contains-errors '>>'     |       |-ImplicitCastExpr 0x15a1412d8 <col:28> 'unsigned int' contains-errors <LValueToRValue>     |       | `-DeclRefExpr 0x15a141298 <col:28> 'unsigned int' contains-errors lvalue Var 0x15a140b18 'val' 'unsigned int'     |       `-IntegerLiteral 0x15a1412b8 <col:35> 'int' 12     `-ReturnStmt 0x15a141418 <line:28:2, col:15>       `-ImplicitCastExpr 0x15a141400 <col:9, col:15> 'int' contains-errors <IntegralCast>         `-BinaryOperator 0x15a1413e0 <col:9, col:15> 'unsigned int' contains-errors '%'           |-ImplicitCastExpr 0x15a1413b0 <col:9> 'unsigned int' contains-errors <LValueToRValue>           | `-DeclRefExpr 0x15a141370 <col:9> 'unsigned int' contains-errors lvalue Var 0x15a140b18 'val' 'unsigned int'           `-ImplicitCastExpr 0x15a1413c8 <col:15> 'unsigned int' <LValueToRValue>             `-DeclRefExpr 0x15a141390 <col:15> 'unsigned int' lvalue ParmVar 0x15a1280d8 'candidate_count' 'unsigned int' ","20479":"`-FunctionDecl 0x159141150  col:6 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x159141250 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x1591411f8 <<invalid sloc>> Implicit 902 ","21008":"`-FunctionDecl 0x14b8280b8  col:3 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x14b8281b8 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x14b828160 <<invalid sloc>> Implicit 873 ","20305":"`-FunctionDecl 0x15502cba8  col:2 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x15502cca8 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x15502cc50 <<invalid sloc>> Implicit 873 ","20352":"`-FunctionDecl 0x12b827eb8  col:54 implicit used strerror 'char *(int)' extern   |-ParmVarDecl 0x12b827fb8 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x12b827f60 <<invalid sloc>> Implicit 901 ","20530":"`-FunctionDecl 0x12a1269a8  line:1:1 START_TEST 'int (int)'   |-ParmVarDecl 0x12a1268d8 <col:12> col:12 dimension_prop_parser 'int'   `-CompoundStmt 0x12a141ef0 <line:2:1, line:45:1>     |-DeclStmt 0x12a141478 <line:3:2, line:25:3>     | |-RecordDecl 0x12a126aa0 <line:3:2, line:7:2> line:3:9 invalid struct parser_test_dimension definition     | | |-FieldDecl 0x12a126b58 <line:4:3, col:9> col:9 referenced tag 'char *'     | | |-FieldDecl 0x12a126bd8 <line:5:3, col:8> col:8 invalid success 'int'     | | |-FieldDecl 0x12a126c40 <line:6:3, col:7> col:7 referenced x 'int'     | | `-FieldDecl 0x12a126ca8 <col:3, col:10> col:10 referenced y 'int'     | `-VarDecl 0x12a126dd0 <line:3:2, line:7:10> col:4 used tests 'struct parser_test_dimension[]'     `-DeclStmt 0x12a141510 <line:26:2, col:7>       `-VarDecl 0x12a1414a8 <col:2, col:6> col:6 used i 'int' ","20891":"`-FunctionDecl 0x13f928288  line:1:12 invalid h2_mplx_stream_get 'int *(int *, int)'   |-ParmVarDecl 0x13f928128 <col:31, col:40> col:40 invalid m 'int *'   |-ParmVarDecl 0x13f9281a8 <col:43, col:47> col:47 used id 'int'   `-CompoundStmt 0x13f941890 <line:2:1, line:11:1>     |-CallExpr 0x13f928510 <line:5:5, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13f9284d0 <col:5> 'int ()' Function 0x13f928418 'H2_MPLX_ENTER_ALWAYS' 'int ()'     | `-RecoveryExpr 0x13f9284f0 <col:26> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13f941820 <line:9:5, col:20> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13f9287d0 <col:5> 'int ()' Function 0x13f928718 'H2_MPLX_LEAVE' 'int ()'     | `-RecoveryExpr 0x13f941800 <col:19> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x13f941880 <line:10:5, col:12>       `-RecoveryExpr 0x13f941860 <col:12> '<dependent type>' contains-errors lvalue ","21197":"`-FunctionDecl 0x153940a78  line:1:12 replmd_replPropertyMetaData1_attid_sort 'int (const struct replPropertyMetaData1 *, const struct replPropertyMetaData1 *)' static   |-ParmVarDecl 0x153928648 <col:52, col:88> col:88 m1 'const struct replPropertyMetaData1 *'   |-ParmVarDecl 0x153928738 <line:2:10, col:46> col:46 m2 'const struct replPropertyMetaData1 *'   `-CompoundStmt 0x153940e20 <line:3:1, line:14:1>     |-IfStmt 0x153940c88 <line:8:2, line:10:2>     | |-BinaryOperator 0x153940c20 <line:8:6, col:17> 'int' contains-errors '=='     | | |-RecoveryExpr 0x153940be0 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x153940c00 <col:17> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x153940c70 <col:26, line:10:2>     |   `-ReturnStmt 0x153940c60 <line:9:3, col:10>     |     `-IntegerLiteral 0x153940c40 <col:10> 'int' 0     `-ReturnStmt 0x153940e10 <line:13:2, col:34>       `-ConditionalOperator 0x153940de0 <col:9, col:34> '<dependent type>' contains-errors         |-BinaryOperator 0x153940dc0 <col:9, col:19> 'int' contains-errors '>'         | |-RecoveryExpr 0x153940d80 <col:9> '<dependent type>' contains-errors lvalue         | `-RecoveryExpr 0x153940da0 <col:19> '<dependent type>' contains-errors lvalue         |-IntegerLiteral 0x153940cf8 <col:29> 'int' 1         `-UnaryOperator 0x153940d38 <col:33, col:34> 'int' prefix '-'           `-IntegerLiteral 0x153940d18 <col:34> 'int' 1 ","20595":"`-FunctionDecl 0x13200ddf8  line:1:16 invalid inbound_frame_compute_pad 'int (int *)' static   |-ParmVarDecl 0x13200dd28 <col:42, col:65> col:65 referenced invalid iframe 'int *'   `-CompoundStmt 0x133008f30 <col:73, line:17:1>     |-UnaryExprOrTypeTraitExpr 0x13200df00 <line:2:3, col:10> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x13200dee0 <col:10> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13200e348 <line:7:3, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13200e260 <col:3> 'int ()' Function 0x13200e1a8 'DEBUGF' 'int ()'     | |-StringLiteral 0x13200e2c0 <col:10> 'char[4]' lvalue \"STR\"     | `-RecoveryExpr 0x13200e328 <col:17> '<dependent type>' contains-errors lvalue     |-IfStmt 0x133008928 <line:10:3, line:12:3>     | |-BinaryOperator 0x1330088a8 <line:10:7, col:28> 'int' contains-errors '>'     | | |-BinaryOperator 0x133008888 <col:7, col:16> '<dependent type>' contains-errors '-'     | | | |-RecoveryExpr 0x133008868 <col:7> '<dependent type>' contains-errors lvalue     | | | `-IntegerLiteral 0x13200e390 <col:16> 'int' 1     | | `-CXXDependentScopeMemberExpr 0x133008800 <col:20, col:28> '<dependent type>' contains-errors lvalue ->payloadleft     | |   `-RecoveryExpr 0x13200e3d0 <col:20> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x133008910 <col:41, line:12:3>     |   `-ReturnStmt 0x133008900 <line:11:5, col:13>     |     `-UnaryOperator 0x1330088e8 <col:12, col:13> 'int' prefix '-'     |       `-IntegerLiteral 0x1330088c8 <col:13> 'int' 1     |-BinaryOperator 0x133008a30 <line:14:3, col:20> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x133008990 <col:3, col:11> '<dependent type>' contains-errors lvalue ->padlen     | | `-RecoveryExpr 0x133008968 <col:3> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x133008948 <col:3> 'int *' lvalue ParmVar 0x13200dd28 'iframe' 'int *'     | `-RecoveryExpr 0x133008a10 <col:20> '<dependent type>' contains-errors lvalue     |-ReturnStmt 0x133008f18 <line:16:3, col:18>     | `-RecoveryExpr 0x133008ef0 <col:10, col:18> 'int' contains-errors     |   `-ParenExpr 0x133008aa8 <col:10, col:18> '<overloaded function type>' lvalue     |     `-UnresolvedLookupExpr 0x133008a68 <col:11> '<overloaded function type>' lvalue (no ADL) = 'size_t' empty     `-NullStmt 0x133008f28 <col:25> ","20421":"`-FunctionDecl 0x145904550  line:1:6 mem_cgroup_print_bad_page 'void (struct page *)'   |-ParmVarDecl 0x145904448 <col:32, col:45> col:45 used page 'struct page *'   `-CompoundStmt 0x145921020 <line:2:1, line:10:1>     |-DeclStmt 0x145920c38 <line:3:2, col:24>     | |-RecordDecl 0x145920a48 <col:2, col:9> col:9 struct page_cgroup     | `-VarDecl 0x145920bb8 <col:2, col:22> col:22 used pc 'struct page_cgroup *'     |-BinaryOperator 0x145920e80 <line:5:2, col:35> 'struct page_cgroup *' '='     | |-DeclRefExpr 0x145920c50 <col:2> 'struct page_cgroup *' lvalue Var 0x145920bb8 'pc' 'struct page_cgroup *'     | `-ImplicitCastExpr 0x145920e68 <col:7, col:35> 'struct page_cgroup *' <IntegralToPointer>     |   `-CallExpr 0x145920e28 <col:7, col:35> 'int'     |     |-ImplicitCastExpr 0x145920e10 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x145920da0 <col:7> 'int ()' Function 0x145920ce8 'lookup_page_cgroup_used' 'int ()'     |     `-ImplicitCastExpr 0x145920e50 <col:31> 'struct page *' <LValueToRValue>     |       `-DeclRefExpr 0x145920dc0 <col:31> 'struct page *' lvalue ParmVar 0x145904448 'page' 'struct page *'     `-IfStmt 0x145921000 <line:6:2, line:9:2>       |-ImplicitCastExpr 0x145920ec0 <line:6:6> 'struct page_cgroup *' <LValueToRValue>       | `-DeclRefExpr 0x145920ea0 <col:6> 'struct page_cgroup *' lvalue Var 0x145920bb8 'pc' 'struct page_cgroup *'       `-CompoundStmt 0x145920ff0 <col:10, line:9:2> ","20748":"`-FunctionDecl 0x14d80de58  line:1:1 invalid trap_handler 'int (int *)'   |-ParmVarDecl 0x14d80dd28 <col:14, col:48> col:48 invalid strvec 'int *'   | `-UnusedAttr 0x14d80dd90 <col:29> unused   `-CompoundStmt 0x14d80df20 <line:2:1, line:4:1> ","21059":"`-FunctionDecl 0x136941800  line:1:17 invalid sys_oabi_epoll_wait 'int (int, struct oabi_epoll_event)'   |-ParmVarDecl 0x1369280f0 <col:37, col:41> col:41 used epfd 'int'   |-ParmVarDecl 0x136928678 <line:2:9, col:33> col:33 invalid __user 'struct oabi_epoll_event'   `-CompoundStmt 0x136943328 <line:4:1, line:26:1>     |-DeclStmt 0x136941aa8 <line:5:2, col:26>     | |-RecordDecl 0x1369418b8 <col:2, col:9> col:9 struct epoll_event     | `-VarDecl 0x136941a28 <col:2, col:22> col:22 used kbuf 'struct epoll_event *'     |-DeclStmt 0x136941c60 <line:7:2, col:18>     | |-VarDecl 0x136941ad8 <col:2, col:7> col:7 used ret 'long'     | |-VarDecl 0x136941b58 <col:2, col:12> col:12 used err 'long'     | `-VarDecl 0x136941bd8 <col:2, col:17> col:17 used i 'long'     |-IfStmt 0x136941e18 <line:9:2, line:10:11>     | |-RecoveryExpr 0x136941d50 <line:9:6, col:71> '_Bool' contains-errors     | `-ReturnStmt 0x136941e08 <line:10:3, col:11>     |   `-UnaryOperator 0x136941df0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x136941dd8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x136941db8 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x136942168 <line:12:2, line:13:11>     | |-UnaryOperator 0x1369420a8 <line:12:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x136942090 <col:7> 'struct epoll_event *' <LValueToRValue>     | |   `-DeclRefExpr 0x136942070 <col:7> 'struct epoll_event *' lvalue Var 0x136941a28 'kbuf' 'struct epoll_event *'     | `-ReturnStmt 0x136942158 <line:13:3, col:11>     |   `-UnaryOperator 0x136942140 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x136942128 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x136942108 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x136942458 <line:15:2, col:18> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1369423d8 <col:2> 'int ()' Function 0x136942320 'set_fs' 'int ()'     | `-RecoveryExpr 0x136942438 <col:9> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1369426f0 <line:16:2, col:53> 'long' contains-errors '='     | |-DeclRefExpr 0x136942480 <col:2> 'long' lvalue Var 0x136941ad8 'ret' 'long'     | `-CallExpr 0x1369426b0 <col:8, col:53> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x136942580 <col:8> 'int ()' Function 0x1369424c8 'sys_epoll_wait' 'int ()'     |   |-DeclRefExpr 0x1369425a0 <col:23> 'int' lvalue ParmVar 0x1369280f0 'epfd' 'int'     |   |-DeclRefExpr 0x1369425c0 <col:29> 'struct epoll_event *' lvalue Var 0x136941a28 'kbuf' 'struct epoll_event *'     |   |-RecoveryExpr 0x136942670 <col:35> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x136942690 <col:46> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x136942788 <line:18:2, col:8> 'long' '='     | |-DeclRefExpr 0x136942730 <col:2> 'long' lvalue Var 0x136941b58 'err' 'long'     | `-ImplicitCastExpr 0x136942770 <col:8> 'long' <IntegralCast>     |   `-IntegerLiteral 0x136942750 <col:8> 'int' 0     |-ForStmt 0x136943138 <line:19:2, line:23:2>     | |-BinaryOperator 0x136942e00 <line:19:7, col:11> 'long' '='     | | |-DeclRefExpr 0x1369427a8 <col:7> 'long' lvalue Var 0x136941bd8 'i' 'long'     | | `-ImplicitCastExpr 0x1369427e8 <col:11> 'long' <IntegralCast>     | |   `-IntegerLiteral 0x1369427c8 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x136942e90 <col:14, col:18> 'int' '<'     | | |-ImplicitCastExpr 0x136942e60 <col:14> 'long' <LValueToRValue>     | | | `-DeclRefExpr 0x136942e20 <col:14> 'long' lvalue Var 0x136941bd8 'i' 'long'     | | `-ImplicitCastExpr 0x136942e78 <col:18> 'long' <LValueToRValue>     | |   `-DeclRefExpr 0x136942e40 <col:18> 'long' lvalue Var 0x136941ad8 'ret' 'long'     | |-UnaryOperator 0x136942ed0 <col:23, col:24> 'long' postfix '++'     | | `-DeclRefExpr 0x136942eb0 <col:23> 'long' lvalue Var 0x136941bd8 'i' 'long'     | `-CompoundStmt 0x136943128 <col:28, line:23:2>     `-CallExpr 0x1369432a8 <line:24:2, col:12> 'int'       |-ImplicitCastExpr 0x136943290 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x136943250 <col:2> 'int ()' Function 0x136943198 'kfree' 'int ()'       `-ImplicitCastExpr 0x1369432d0 <col:8> 'struct epoll_event *' <LValueToRValue>         `-DeclRefExpr 0x136943270 <col:8> 'struct epoll_event *' lvalue Var 0x136941a28 'kbuf' 'struct epoll_event *' ","21180":"`-FunctionDecl 0x11d928198  line:1:1 check_pidfile 'int (void)'   `-CompoundStmt 0x11d9417d8 <line:2:1, line:22:1>     |-DeclStmt 0x11d940b10 <line:3:3, col:41>     | `-VarDecl 0x11d9282a0 <col:3, col:40> col:15 used pidfile 'const char *' cinit     |   `-ImplicitCastExpr 0x11d9284b8 <col:25, col:40> 'const char *' <IntegralToPointer>     |     `-CallExpr 0x11d928498 <col:25, col:40> 'int'     |       `-ImplicitCastExpr 0x11d928480 <col:25> 'int (*)()' <FunctionToPointerDecay>     |         `-DeclRefExpr 0x11d928430 <col:25> 'int ()' Function 0x11d928378 'CNF_GetPidFile' 'int ()'     |-DeclStmt 0x11d940c58 <line:5:3, col:17>     | |-VarDecl 0x11d940b58 <col:3, col:7> col:7 used pid 'int'     | `-VarDecl 0x11d940bd8 <col:3, col:12> col:12 used count 'int'     |-IfStmt 0x11d940f10 <line:8:3, line:9:5>     | |-UnaryOperator 0x11d940ee8 <line:8:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x11d940ed0 <col:8> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x11d940eb0 <col:8> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x11d940f00 <line:9:5>     |-BinaryOperator 0x11d9411a8 <line:11:3, col:33> 'int' contains-errors '='     | |-DeclRefExpr 0x11d940f30 <col:3> 'int' lvalue Var 0x11d940bd8 'count' 'int'     | `-CallExpr 0x11d941170 <col:11, col:33> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x11d941030 <col:11> 'int ()' Function 0x11d940f78 'fscanf' 'int ()'     |   |-RecoveryExpr 0x11d941150 <col:18> '<dependent type>' contains-errors lvalue     |   |-StringLiteral 0x11d941068 <col:22> 'char[4]' lvalue \"STR\"     |   `-UnaryOperator 0x11d9410e0 <col:29, col:30> 'int *' prefix '&' cannot overflow     |     `-DeclRefExpr 0x11d941088 <col:30> 'int' lvalue Var 0x11d940b58 'pid' 'int'     |-CallExpr 0x11d941328 <line:12:3, col:12> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11d9412a8 <col:3> 'int ()' Function 0x11d9411f0 'fclose' 'int ()'     | `-RecoveryExpr 0x11d941308 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x11d9413d8 <line:14:3, line:15:5>     | |-BinaryOperator 0x11d9413a8 <line:14:7, col:16> 'int' '!='     | | |-ImplicitCastExpr 0x11d941390 <col:7> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x11d941350 <col:7> 'int' lvalue Var 0x11d940bd8 'count' 'int'     | | `-IntegerLiteral 0x11d941370 <col:16> 'int' 1     | `-ReturnStmt 0x11d9413c8 <line:15:5>     |-IfStmt 0x11d9415c0 <line:17:3, line:18:5>     | |-BinaryOperator 0x11d941590 <line:17:7, col:21> 'int' '<'     | | |-CallExpr 0x11d941530 <col:7, col:17> 'int'     | | | |-ImplicitCastExpr 0x11d941518 <col:7> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x11d9414d8 <col:7> 'int ()' Function 0x11d941420 'getsid' 'int ()'     | | | `-ImplicitCastExpr 0x11d941558 <col:14> 'int' <LValueToRValue>     | | |   `-DeclRefExpr 0x11d9414f8 <col:14> 'int' lvalue Var 0x11d940b58 'pid' 'int'     | | `-IntegerLiteral 0x11d941570 <col:21> 'int' 0     | `-ReturnStmt 0x11d9415b0 <line:18:5>     `-CallExpr 0x11d941758 <line:20:3, line:21:25> 'int'       |-ImplicitCastExpr 0x11d941740 <line:20:3> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x11d9416c0 <col:3> 'int ()' Function 0x11d941608 'LOG_FATAL' 'int ()'       |-ImplicitCastExpr 0x11d941790 <col:13> 'char *' <ArrayToPointerDecay>       | `-StringLiteral 0x11d9416e0 <col:13> 'char[4]' lvalue \"STR\"       |-ImplicitCastExpr 0x11d9417a8 <line:21:13> 'int' <LValueToRValue>       | `-DeclRefExpr 0x11d941700 <col:13> 'int' lvalue Var 0x11d940b58 'pid' 'int'       `-ImplicitCastExpr 0x11d9417c0 <col:18> 'const char *' <LValueToRValue>         `-DeclRefExpr 0x11d941720 <col:18> 'const char *' lvalue Var 0x11d9282a0 'pidfile' 'const char *' ","20854":"`-FunctionDecl 0x1451281c0  line:1:8 invalid SendMessage 'void (int)'   |-ParmVarDecl 0x1451280f0 <col:20, <invalid sloc>> col:22 invalid 'int'   `-CompoundStmt 0x1451284e0 <line:5:52, line:15:3>     |-IfStmt 0x145128348 <line:6:5, line:9:5>     | |-UnaryOperator 0x1451282f0 <line:6:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1451282d8 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x1451282b8 <col:10> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x145128330 <col:36, line:9:5>     |   `-ReturnStmt 0x145128320 <line:8:7>     |-RecoveryExpr 0x145128398 <line:10:5> '<dependent type>' contains-errors lvalue     `-IfStmt 0x145128478 <line:11:5, line:13:5>       |-UnaryOperator 0x145128438 <line:11:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-ImplicitCastExpr 0x145128420 <col:10> '<dependent type>' contains-errors <LValueToRValue>       |   `-RecoveryExpr 0x145128400 <col:10> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x145128460 <col:68, line:13:5>         `-ReturnStmt 0x145128450 <line:12:7> ","20333":"`-FunctionDecl 0x150144de8  line:1:1 ext2_set_acl 'int (struct inode *, struct posix_acl *, int)'   |-ParmVarDecl 0x150128648 <col:14, col:28> col:28 used inode 'struct inode *'   |-ParmVarDecl 0x150144c28 <col:35, col:53> col:53 used acl 'struct posix_acl *'   |-ParmVarDecl 0x150144ca8 <col:58, col:62> col:62 used type 'int'   `-CompoundStmt 0x150147f30 <line:2:1, line:45:1>     |-DeclStmt 0x150144f70 <line:3:2, col:16>     | `-VarDecl 0x150144f08 <col:2, col:6> col:6 used name_index 'int'     |-DeclStmt 0x150145058 <line:4:2, col:20>     | `-VarDecl 0x150144fa0 <col:2, col:16> col:8 used value 'void *' cinit     |   `-RecoveryExpr 0x150145038 <col:16> '<dependent type>' contains-errors lvalue     |-RecoveryExpr 0x150145150 <line:5:2, col:16> '<dependent type>' contains-errors lvalue     | |-UnaryExprOrTypeTraitExpr 0x150145130 <col:2, col:9> 'unsigned long' contains-errors sizeof     | | `-RecoveryExpr 0x150145110 <col:9> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x1501450a8 <col:16> 'int' 0     |-DeclStmt 0x150145200 <line:6:2, col:11>     | `-VarDecl 0x150145198 <col:2, col:6> col:6 used error 'int'     |-SwitchStmt 0x150145250 <line:8:2, line:32:2>     | |-ImplicitCastExpr 0x150145238 <line:8:9> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x150145218 <col:9> 'int' lvalue ParmVar 0x150144ca8 'type' 'int'     | `-CompoundStmt 0x1501473b0 <col:15, line:32:2>     |   |-BinaryOperator 0x150145308 <line:10:4, col:17> 'int' contains-errors '='     |   | |-DeclRefExpr 0x150145290 <col:4> 'int' lvalue Var 0x150144f08 'name_index' 'int'     |   | `-RecoveryExpr 0x1501452e8 <col:17> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x150145a80 <line:11:4, line:21:4>     |   | |-ImplicitCastExpr 0x150145348 <line:11:8> 'struct posix_acl *' <LValueToRValue>     |   | | `-DeclRefExpr 0x150145328 <col:8> 'struct posix_acl *' lvalue ParmVar 0x150144c28 'acl' 'struct posix_acl *'     |   | `-CompoundStmt 0x150145a60 <col:13, line:21:4>     |   |   |-BinaryOperator 0x150145578 <line:12:5, col:53> 'int' contains-errors '='     |   |   | |-DeclRefExpr 0x150145360 <col:5> 'int' lvalue Var 0x150145198 'error' 'int'     |   |   | `-CallExpr 0x150145548 <col:13, col:53> '<dependent type>' contains-errors     |   |   |   |-DeclRefExpr 0x150145490 <col:13> 'int ()' Function 0x1501453d8 'posix_acl_equiv_mode' 'int ()'     |   |   |   |-DeclRefExpr 0x1501454b0 <col:34> 'struct posix_acl *' lvalue ParmVar 0x150144c28 'acl' 'struct posix_acl *'     |   |   |   `-UnaryOperator 0x150145530 <col:39, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   |     `-RecoveryExpr 0x150145508 <col:40, col:47> '<dependent type>' contains-errors lvalue     |   |   |       `-DeclRefExpr 0x1501454d0 <col:40> 'struct inode *' lvalue ParmVar 0x150128648 'inode' 'struct inode *'     |   |   `-IfStmt 0x150145a30 <line:13:5, line:20:5> has_else     |   |     |-BinaryOperator 0x1501455f0 <line:13:9, col:17> 'int' '<'     |   |     | |-ImplicitCastExpr 0x1501455d8 <col:9> 'int' <LValueToRValue>     |   |     | | `-DeclRefExpr 0x150145598 <col:9> 'int' lvalue Var 0x150145198 'error' 'int'     |   |     | `-IntegerLiteral 0x1501455b8 <col:17> 'int' 0     |   |     |-ReturnStmt 0x150145648 <line:14:6, col:13>     |   |     | `-ImplicitCastExpr 0x150145630 <col:13> 'int' <LValueToRValue>     |   |     |   `-DeclRefExpr 0x150145610 <col:13> 'int' lvalue Var 0x150145198 'error' 'int'     |   |     `-CompoundStmt 0x150145a08 <line:15:10, line:20:5>     |   |       |-BinaryOperator 0x150145710 <line:16:6, col:23> '<dependent type>' contains-errors '='     |   |       | |-RecoveryExpr 0x150145690 <col:6, col:13> '<dependent type>' contains-errors lvalue     |   |       | | `-DeclRefExpr 0x150145658 <col:6> 'struct inode *' lvalue ParmVar 0x150128648 'inode' 'struct inode *'     |   |       | `-RecoveryExpr 0x1501456f0 <col:23> '<dependent type>' contains-errors lvalue     |   |       |-CallExpr 0x150145898 <line:17:6, col:28> 'int'     |   |       | |-ImplicitCastExpr 0x150145880 <col:6> 'int (*)()' <FunctionToPointerDecay>     |   |       | | `-DeclRefExpr 0x150145810 <col:6> 'int ()' Function 0x150145758 'mark_inode_dirty' 'int ()'     |   |       | `-ImplicitCastExpr 0x1501458c0 <col:23> 'struct inode *' <LValueToRValue>     |   |       |   `-DeclRefExpr 0x150145830 <col:23> 'struct inode *' lvalue ParmVar 0x150128648 'inode' 'struct inode *'     |   |       `-IfStmt 0x1501459e8 <line:18:6, line:19:13>     |   |         |-BinaryOperator 0x150145930 <line:18:10, col:19> 'int' '=='     |   |         | |-ImplicitCastExpr 0x150145918 <col:10> 'int' <LValueToRValue>     |   |         | | `-DeclRefExpr 0x1501458d8 <col:10> 'int' lvalue Var 0x150145198 'error' 'int'     |   |         | `-IntegerLiteral 0x1501458f8 <col:19> 'int' 0     |   |         `-BinaryOperator 0x1501459c8 <line:19:7, col:13> 'struct posix_acl *' contains-errors '='     |   |           |-DeclRefExpr 0x150145950 <col:7> 'struct posix_acl *' lvalue ParmVar 0x150144c28 'acl' 'struct posix_acl *'     |   |           `-RecoveryExpr 0x1501459a8 <col:13> '<dependent type>' contains-errors lvalue     |   |-BreakStmt 0x150145aa0 <line:22:4>     |   |-BinaryOperator 0x150145b38 <line:25:4, col:17> 'int' contains-errors '='     |   | |-DeclRefExpr 0x150145ac0 <col:4> 'int' lvalue Var 0x150144f08 'name_index' 'int'     |   | `-RecoveryExpr 0x150145b18 <col:17> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x1501472c0 <line:26:4, line:27:28>     |   | |-UnaryOperator 0x150147160 <line:26:8, col:30> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | | `-CallExpr 0x150147138 <col:9, col:30> '<dependent type>' contains-errors     |   | |   |-DeclRefExpr 0x1501470b8 <col:9> 'int ()' Function 0x150147000 'S_ISDIR' 'int ()'     |   | |   `-RecoveryExpr 0x150147110 <col:17, col:24> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x1501470d8 <col:17> 'struct inode *' lvalue ParmVar 0x150128648 'inode' 'struct inode *'     |   | `-ReturnStmt 0x1501472b0 <line:27:5, col:28>     |   |   `-ConditionalOperator 0x150147280 <col:12, col:28> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x150147178 <col:12> 'struct posix_acl *' lvalue ParmVar 0x150144c28 'acl' 'struct posix_acl *'     |   |     |-UnaryOperator 0x150147268 <col:18, col:19> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |     | `-ImplicitCastExpr 0x150147250 <col:19> '<dependent type>' contains-errors <LValueToRValue>     |   |     |   `-RecoveryExpr 0x150147230 <col:19> '<dependent type>' contains-errors lvalue     |   |     `-IntegerLiteral 0x1501471e0 <col:28> 'int' 0     |   |-BreakStmt 0x1501472e0 <line:28:4>     |   `-DefaultStmt 0x150147390 <line:30:3, line:31:12>     |     `-ReturnStmt 0x150147380 <col:4, col:12>     |       `-UnaryOperator 0x150147368 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |         `-ImplicitCastExpr 0x150147350 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |           `-RecoveryExpr 0x150147330 <col:12> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1501478e8 <line:33:3, line:37:2>     | |-ImplicitCastExpr 0x150147418 <line:33:7> 'struct posix_acl *' <LValueToRValue>     | | `-DeclRefExpr 0x1501473f8 <col:7> 'struct posix_acl *' lvalue ParmVar 0x150144c28 'acl' 'struct posix_acl *'     | `-CompoundStmt 0x1501478d0 <col:12, line:37:2>     |   `-IfStmt 0x1501478b0 <line:35:3, line:36:29>     |     |-CallExpr 0x1501476a8 <line:35:7, col:19> 'int' contains-errors     |     | |-ImplicitCastExpr 0x150147690 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     | | `-DeclRefExpr 0x150147650 <col:7> 'int ()' Function 0x150147598 'IS_ERR' 'int ()'     |     | `-ImplicitCastExpr 0x1501476d0 <col:14> 'void *' contains-errors <LValueToRValue>     |     |   `-DeclRefExpr 0x150147670 <col:14> 'void *' contains-errors lvalue Var 0x150144fa0 'value' 'void *'     |     `-ReturnStmt 0x1501478a0 <line:36:4, col:29>     |       `-CStyleCastExpr 0x150147878 <col:11, col:29> 'int' contains-errors <NoOp>     |         `-CallExpr 0x150147820 <col:16, col:29> 'int' contains-errors     |           |-ImplicitCastExpr 0x150147808 <col:16> 'int (*)()' <FunctionToPointerDecay>     |           | `-DeclRefExpr 0x1501477c8 <col:16> 'int ()' Function 0x150147710 'PTR_ERR' 'int ()'     |           `-ImplicitCastExpr 0x150147848 <col:24> 'void *' contains-errors <LValueToRValue>     |             `-DeclRefExpr 0x1501477e8 <col:24> 'void *' contains-errors lvalue Var 0x150144fa0 'value' 'void *'     |-CallExpr 0x150147c40 <line:41:2, col:13> 'int' contains-errors     | |-ImplicitCastExpr 0x150147c28 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x150147be8 <col:2> 'int ()' Function 0x150147b30 'kfree' 'int ()'     | `-ImplicitCastExpr 0x150147c68 <col:8> 'void *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x150147c08 <col:8> 'void *' contains-errors lvalue Var 0x150144fa0 'value' 'void *'     |-IfStmt 0x150147ec8 <line:42:2, line:43:34>     | |-UnaryOperator 0x150147cb8 <line:42:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x150147ca0 <col:7> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x150147c80 <col:7> 'int' lvalue Var 0x150145198 'error' 'int'     | `-CallExpr 0x150147e48 <line:43:3, col:34> 'int'     |   |-ImplicitCastExpr 0x150147e30 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x150147db0 <col:3> 'int ()' Function 0x150147cf8 'set_cached_acl' 'int ()'     |   |-ImplicitCastExpr 0x150147e80 <col:18> 'struct inode *' <LValueToRValue>     |   | `-DeclRefExpr 0x150147dd0 <col:18> 'struct inode *' lvalue ParmVar 0x150128648 'inode' 'struct inode *'     |   |-ImplicitCastExpr 0x150147e98 <col:25> 'int' <LValueToRValue>     |   | `-DeclRefExpr 0x150147df0 <col:25> 'int' lvalue ParmVar 0x150144ca8 'type' 'int'     |   `-ImplicitCastExpr 0x150147eb0 <col:31> 'struct posix_acl *' <LValueToRValue>     |     `-DeclRefExpr 0x150147e10 <col:31> 'struct posix_acl *' lvalue ParmVar 0x150144c28 'acl' 'struct posix_acl *'     `-ReturnStmt 0x150147f20 <line:44:2, col:9>       `-ImplicitCastExpr 0x150147f08 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x150147ee8 <col:9> 'int' lvalue Var 0x150145198 'error' 'int' ","20477":"`-FunctionDecl 0x154826748  line:1:1 minimask_init 'int (struct minimask *, const struct flow_wildcards *)'   |-ParmVarDecl 0x15480e248 <col:15, col:32> col:32 used mask 'struct minimask *'   |-ParmVarDecl 0x154826628 <col:38, col:67> col:67 used wc 'const struct flow_wildcards *'   `-CompoundStmt 0x154826ab0 <line:2:1, line:4:1>     `-CallExpr 0x154826a80 <line:3:5, col:43> '<dependent type>' contains-errors       |-DeclRefExpr 0x154826970 <col:5> 'int ()' Function 0x1548268b8 'miniflow_init' 'int ()'       |-UnaryOperator 0x1548269f0 <col:19, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow       | `-RecoveryExpr 0x1548269c8 <col:20, col:26> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x154826990 <col:20> 'struct minimask *' lvalue ParmVar 0x15480e248 'mask' 'struct minimask *'       `-UnaryOperator 0x154826a68 <col:33, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x154826a40 <col:34, col:38> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x154826a08 <col:34> 'const struct flow_wildcards *' lvalue ParmVar 0x154826628 'wc' 'const struct flow_wildcards *' ","20933":"`-FunctionDecl 0x13d00de88  line:1:8 invalid audio_sample_entry_Write 'int (int *, int *)'   |-ParmVarDecl 0x13d00dd28 <col:33, col:41> col:41 invalid s 'int *'   |-ParmVarDecl 0x13d00dda8 <col:44, col:58> col:58 invalid bs 'int *'   `-CompoundStmt 0x13e009228 <line:2:1, line:21:1>     |-IfStmt 0x13d00e1e0 <line:6:2, col:16>     | |-RecoveryExpr 0x13d00e178 <col:6> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13d00e1d0 <col:9, col:16>     |   `-RecoveryExpr 0x13d00e1b0 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13e008f68 <line:8:2, line:11:2>     | |-CXXDependentScopeMemberExpr 0x13d00e3b8 <line:8:6, col:11> '<dependent type>' contains-errors lvalue ->esd     | | `-RecoveryExpr 0x13d00e398 <col:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13e008f58 <col:16, line:11:2>     |-IfStmt 0x13e009018 <line:12:2, line:15:2>     | |-RecoveryExpr 0x13e008f88 <line:12:6, col:11> '_Bool' contains-errors     | `-CompoundStmt 0x13e009008 <col:21, line:15:2>     `-IfStmt 0x13e0090c8 <line:16:2, line:19:2>       |-RecoveryExpr 0x13e009038 <line:16:6, col:11> '_Bool' contains-errors       `-CompoundStmt 0x13e0090b8 <col:20, line:19:2> ","21151":"`-FunctionDecl 0x11d00dee8  line:1:1 invalid xmlZMemBuffAppend 'int (int, const char *, int)'   |-ParmVarDecl 0x11d00dcf0 <col:20, col:35> col:35 referenced invalid buff 'int'   |-ParmVarDecl 0x11d00dd70 <col:41, col:54> col:54 used src 'const char *'   |-ParmVarDecl 0x11d00ddf0 <col:59, col:63> col:63 used len 'int'   `-CompoundStmt 0x11d029da0 <col:69, line:34:1>     |-DeclStmt 0x11d00e028 <line:3:5, col:15>     | `-VarDecl 0x11d00dfc0 <col:5, col:10> col:10 used z_err 'int'     |-UnaryExprOrTypeTraitExpr 0x11d00e098 <line:4:5, col:12> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x11d00e078 <col:12> '<dependent type>' contains-errors lvalue     |-IfStmt 0x11d00e1f0 <line:6:5, line:7:14>     | |-RecoveryExpr 0x11d00e168 <line:6:10, col:44> '_Bool' contains-errors     | `-ReturnStmt 0x11d00e1e0 <line:7:2, col:14>     |   `-ParenExpr 0x11d00e1c0 <col:9, col:14> 'int'     |     `-UnaryOperator 0x11d00e1a8 <col:11, col:12> 'int' prefix '-'     |       `-IntegerLiteral 0x11d00e188 <col:12> 'int' 1     |-BinaryOperator 0x11d00e308 <line:9:5, col:28> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x11d00e2a0 <col:5, col:17> '<dependent type>' contains-errors lvalue .avail_in     | | `-CXXDependentScopeMemberExpr 0x11d00e258 <col:5, col:11> '<dependent type>' contains-errors lvalue ->zctrl     | |   `-RecoveryExpr 0x11d00e230 <col:5> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x11d00e210 <col:5> 'int' lvalue ParmVar 0x11d00dcf0 'buff' 'int'     | `-DeclRefExpr 0x11d00e2e8 <col:28> 'int' lvalue ParmVar 0x11d00ddf0 'len' 'int'     |-BinaryOperator 0x11d0278a8 <line:10:5, col:45> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x11d00e3b8 <col:5, col:17> '<dependent type>' contains-errors lvalue .next_in     | | `-CXXDependentScopeMemberExpr 0x11d00e370 <col:5, col:11> '<dependent type>' contains-errors lvalue ->zctrl     | |   `-RecoveryExpr 0x11d00e348 <col:5> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x11d00e328 <col:5> 'int' lvalue ParmVar 0x11d00dcf0 'buff' 'int'     | `-CStyleCastExpr 0x11d027880 <col:28, col:45> 'unsigned char *' <BitCast>     |   `-ImplicitCastExpr 0x11d027868 <col:45> 'const char *' <LValueToRValue> part_of_explicit_cast     |     `-DeclRefExpr 0x11d027800 <col:45> 'const char *' lvalue ParmVar 0x11d00dd70 'src' 'const char *'     |-WhileStmt 0x11d028630 <line:11:5, line:29:5>     | |-BinaryOperator 0x11d027998 <line:11:13, col:36> 'int' contains-errors '>'     | | |-CXXDependentScopeMemberExpr 0x11d027930 <col:13, col:25> '<dependent type>' contains-errors lvalue .avail_in     | | | `-CXXDependentScopeMemberExpr 0x11d0278e8 <col:13, col:19> '<dependent type>' contains-errors lvalue ->zctrl     | | |   `-RecoveryExpr 0x11d0278c8 <col:13> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x11d027978 <col:36> 'int' 0     | `-CompoundStmt 0x11d028608 <col:40, line:29:5>     |   |-IfStmt 0x11d027ef0 <line:14:2, line:17:2>     |   | |-BinaryOperator 0x11d027ba8 <line:14:7, col:32> 'int' contains-errors '<='     |   | | |-CXXDependentScopeMemberExpr 0x11d027b08 <col:7, col:19> '<dependent type>' contains-errors lvalue .avail_out     |   | | | `-CXXDependentScopeMemberExpr 0x11d027ac0 <col:7, col:13> '<dependent type>' contains-errors lvalue ->zctrl     |   | | |   `-RecoveryExpr 0x11d027aa0 <col:7> '<dependent type>' contains-errors lvalue     |   | | `-RecoveryExpr 0x11d027b88 <col:32> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x11d027ed8 <col:45, line:17:2>     |   |   `-IfStmt 0x11d027eb8 <line:15:6, line:16:15>     |   |     |-BinaryOperator 0x11d027e30 <line:15:11, col:53> 'int' contains-errors '=='     |   |     | |-CallExpr 0x11d027dc8 <col:11, col:47> '<dependent type>' contains-errors     |   |     | | |-DeclRefExpr 0x11d027d20 <col:11> 'int ()' Function 0x11d027c68 'xmlZMemBuffExtend' 'int ()'     |   |     | | |-RecoveryExpr 0x11d027d40 <col:30> '<dependent type>' contains-errors lvalue     |   |     | | `-CXXDependentScopeMemberExpr 0x11d027d80 <col:36, col:42> '<dependent type>' contains-errors lvalue ->size     |   |     | |   `-RecoveryExpr 0x11d027d60 <col:36> '<dependent type>' contains-errors lvalue     |   |     | `-UnaryOperator 0x11d027e18 <col:52, col:53> 'int' prefix '-'     |   |     |   `-IntegerLiteral 0x11d027df8 <col:53> 'int' 1     |   |     `-ReturnStmt 0x11d027ea8 <line:16:3, col:15>     |   |       `-ParenExpr 0x11d027e88 <col:10, col:15> 'int'     |   |         `-UnaryOperator 0x11d027e70 <col:12, col:13> 'int' prefix '-'     |   |           `-IntegerLiteral 0x11d027e50 <col:13> 'int' 1     |   |-BinaryOperator 0x11d028168 <line:19:2, col:44> 'int' contains-errors '='     |   | |-DeclRefExpr 0x11d027f10 <col:2> 'int' lvalue Var 0x11d00dfc0 'z_err' 'int'     |   | `-CallExpr 0x11d028138 <col:10, col:44> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x11d028010 <col:10> 'int ()' Function 0x11d027f58 'deflate' 'int ()'     |   |   |-UnaryOperator 0x11d028098 <col:19, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   | `-CXXDependentScopeMemberExpr 0x11d028050 <col:20, col:26> '<dependent type>' contains-errors lvalue ->zctrl     |   |   |   `-RecoveryExpr 0x11d028030 <col:20> '<dependent type>' contains-errors lvalue     |   |   `-RecoveryExpr 0x11d028118 <col:33> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x11d0285e8 <line:20:2, line:28:2>     |     |-BinaryOperator 0x11d028200 <line:20:7, col:16> 'int' contains-errors '!='     |     | |-DeclRefExpr 0x11d028188 <col:7> 'int' lvalue Var 0x11d00dfc0 'z_err' 'int'     |     | `-RecoveryExpr 0x11d0281e0 <col:16> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x11d0285d0 <col:23, line:28:2>     |       `-ReturnStmt 0x11d0285c0 <line:27:6, col:18>     |         `-ParenExpr 0x11d0285a0 <col:13, col:18> 'int'     |           `-UnaryOperator 0x11d028588 <col:15, col:16> 'int' prefix '-'     |             `-IntegerLiteral 0x11d028568 <col:16> 'int' 1     |-BinaryOperator 0x11d029d18 <line:31:5, col:61> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x11d028698 <col:5, col:11> '<dependent type>' contains-errors lvalue ->crc     | | `-RecoveryExpr 0x11d028670 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x11d028650 <col:5> 'int' lvalue ParmVar 0x11d00dcf0 'buff' 'int'     | `-CallExpr 0x11d029ce0 <col:17, col:61> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x11d0287c0 <col:17> 'int ()' Function 0x11d028708 'crc32' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x11d029c00 <col:24, col:30> '<dependent type>' contains-errors lvalue ->crc     |   | `-RecoveryExpr 0x11d0287e0 <col:24> '<dependent type>' contains-errors lvalue     |   |-CStyleCastExpr 0x11d029c98 <col:35, col:52> 'unsigned char *' <BitCast>     |   | `-ImplicitCastExpr 0x11d029c80 <col:52> 'const char *' <LValueToRValue> part_of_explicit_cast     |   |   `-DeclRefExpr 0x11d029c48 <col:52> 'const char *' lvalue ParmVar 0x11d00dd70 'src' 'const char *'     |   `-DeclRefExpr 0x11d029cc0 <col:57> 'int' lvalue ParmVar 0x11d00ddf0 'len' 'int'     `-ReturnStmt 0x11d029d90 <line:33:5, col:18>       `-ImplicitCastExpr 0x11d029d78 <col:12, col:18> 'int' <LValueToRValue>         `-ParenExpr 0x11d029d58 <col:12, col:18> 'int' lvalue           `-DeclRefExpr 0x11d029d38 <col:14> 'int' lvalue ParmVar 0x11d00ddf0 'len' 'int' ","20473":"`-FunctionDecl 0x1319289c8  line:1:1 invalid Output4bitPixel 'int (int)'   |-ParmVarDecl 0x1319288f0 <line:2:3, col:6> col:6 invalid OUT 'int'   `-CompoundStmt 0x133808fc0 <line:6:1, line:61:1>     |-CallExpr 0x131928ed8 <line:17:3, col:63> '<dependent type>' contains-errors     | |-DeclRefExpr 0x131928c00 <col:3> 'int ()' Function 0x131928b48 'ASSERT' 'int ()'     | `-BinaryOperator 0x131928eb8 <col:11, col:59> 'int' contains-errors '&&'     |   |-BinaryOperator 0x131928e38 <col:11, col:36> 'int' contains-errors '&&'     |   | |-BinaryOperator 0x131928db8 <col:11, col:20> 'int' contains-errors '!='     |   | | |-RecoveryExpr 0x131928d78 <col:11> '<dependent type>' contains-errors lvalue     |   | | `-RecoveryExpr 0x131928d98 <col:20> '<dependent type>' contains-errors lvalue     |   | `-BinaryOperator 0x131928e18 <col:28, col:36> 'int' contains-errors '!='     |   |   |-RecoveryExpr 0x131928dd8 <col:28> '<dependent type>' contains-errors lvalue     |   |   `-RecoveryExpr 0x131928df8 <col:36> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x131928e98 <col:44, col:59> 'int' contains-errors '!='     |     |-RecoveryExpr 0x131928e58 <col:44> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x131928e78 <col:59> '<dependent type>' contains-errors lvalue     `-IfStmt 0x133808988 <line:29:3, line:31:3>       |-RecoveryExpr 0x133808940 <line:29:7, col:18> '_Bool' contains-errors       `-CompoundStmt 0x133808970 <col:24, line:31:3>         `-ReturnStmt 0x133808960 <line:30:5> ","20494":"`-FunctionDecl 0x13980de88  line:1:5 invalid imap_search 'int (int *, const int *)'   |-ParmVarDecl 0x13980dd28 <col:18, col:27> col:27 referenced invalid ctx 'int *'   |-ParmVarDecl 0x13980dda8 <col:32, col:49> col:49 invalid pat 'const int *'   `-CompoundStmt 0x139828690 <line:2:1, line:28:1>     |-DeclStmt 0x13980dff0 <line:5:3, col:8>     | `-VarDecl 0x13980df88 <col:3, col:7> col:7 used i 'int'     |-ForStmt 0x13980e2d0 <line:7:3, line:8:29>     | |-BinaryOperator 0x13980e048 <line:7:8, col:12> 'int' '='     | | |-DeclRefExpr 0x13980e008 <col:8> 'int' lvalue Var 0x13980df88 'i' 'int'     | | `-IntegerLiteral 0x13980e028 <col:12> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x13980e0f0 <col:15, col:24> 'int' contains-errors '<'     | | |-DeclRefExpr 0x13980e068 <col:15> 'int' lvalue Var 0x13980df88 'i' 'int'     | | `-CXXDependentScopeMemberExpr 0x13980e0a8 <col:19, col:24> '<dependent type>' contains-errors lvalue ->msgcount     | |   `-RecoveryExpr 0x13980e088 <col:19> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x13980e130 <col:34, col:35> 'int' postfix '++'     | | `-DeclRefExpr 0x13980e110 <col:34> 'int' lvalue Var 0x13980df88 'i' 'int'     | `-BinaryOperator 0x13980e2b0 <line:8:5, col:29> '<dependent type>' contains-errors '='     |   |-CXXDependentScopeMemberExpr 0x13980e248 <col:5, col:19> '<dependent type>' contains-errors lvalue ->matched     |   | `-ArraySubscriptExpr 0x13980e228 <col:5, col:16> '<dependent type>' contains-errors lvalue     |   |   |-ImplicitCastExpr 0x13980e1f8 <col:5, col:10> '<dependent type>' contains-errors <LValueToRValue>     |   |   | `-CXXDependentScopeMemberExpr 0x13980e190 <col:5, col:10> '<dependent type>' contains-errors lvalue ->hdrs     |   |   |   `-RecoveryExpr 0x13980e168 <col:5> '<dependent type>' contains-errors lvalue     |   |   |     `-DeclRefExpr 0x13980e148 <col:5> 'int *' lvalue ParmVar 0x13980dd28 'ctx' 'int *'     |   |   `-ImplicitCastExpr 0x13980e210 <col:15> 'int' <LValueToRValue>     |   |     `-DeclRefExpr 0x13980e1d8 <col:15> 'int' lvalue Var 0x13980df88 'i' 'int'     |   `-IntegerLiteral 0x13980e290 <col:29> 'int' 0     |-IfStmt 0x139827990 <line:10:3, line:11:12>     | |-UnaryOperator 0x139827948 <line:10:7, col:25> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x139827918 <col:8, col:25> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x1398278b8 <col:8> 'int ()' Function 0x139827800 'do_search' 'int ()'     | |   |-RecoveryExpr 0x1398278d8 <col:19> '<dependent type>' contains-errors lvalue     | |   `-IntegerLiteral 0x1398278f8 <col:24> 'int' 1     | `-ReturnStmt 0x139827980 <line:11:5, col:12>     |   `-IntegerLiteral 0x139827960 <col:12> 'int' 0     |-CallExpr 0x139827b40 <line:13:3, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x139827a90 <col:3> 'int ()' Function 0x1398279d8 'mutt_buffer_init' 'int ()'     | `-UnaryOperator 0x139827b28 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x139827b08 <col:22> '<dependent type>' contains-errors lvalue     |-CallExpr 0x139827d68 <line:14:3, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x139827c48 <col:3> 'int ()' Function 0x139827b90 'mutt_buffer_addstr' 'int ()'     | |-UnaryOperator 0x139827d50 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x139827d30 <col:24> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x139827ce0 <col:29> 'char[4]' lvalue \"STR\"     |-IfStmt 0x139828290 <line:15:3, line:19:3>     | |-BinaryOperator 0x139827fc0 <line:15:7, col:41> 'int' contains-errors '<'     | | |-CallExpr 0x139827f90 <col:7, col:37> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x139827e78 <col:7> 'int ()' Function 0x139827dc0 'imap_compile_search' 'int ()'     | | | |-RecoveryExpr 0x139827e98 <col:28> '<dependent type>' contains-errors lvalue     | | | `-UnaryOperator 0x139827f78 <col:33, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-RecoveryExpr 0x139827f58 <col:34> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x139827f18 <col:41> 'int' 0     | `-CompoundStmt 0x139828270 <line:16:3, line:19:3>     |   |-CallExpr 0x139828200 <line:17:5, col:20> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1398280c0 <col:5> 'int ()' Function 0x139828008 'FREE' 'int ()'     |   | `-UnaryOperator 0x1398281e8 <col:11, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-CXXDependentScopeMemberExpr 0x1398281a0 <col:12, col:16> '<dependent type>' contains-errors lvalue .data     |   |     `-RecoveryExpr 0x139828180 <col:12> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x139828260 <line:18:5, col:13>     |     `-UnaryOperator 0x139828248 <col:12, col:13> 'int' prefix '-'     |       `-IntegerLiteral 0x139828228 <col:13> 'int' 1     |-IfStmt 0x139828620 <line:20:3, line:24:3>     | |-BinaryOperator 0x139828580 <line:20:7, col:40> 'int' contains-errors '<'     | | |-CallExpr 0x139828548 <col:7, col:36> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x139828390 <col:7> 'int ()' Function 0x1398282d8 'imap_exec' 'int ()'     | | | |-RecoveryExpr 0x1398284c0 <col:18> '<dependent type>' contains-errors lvalue     | | | |-CXXDependentScopeMemberExpr 0x139828500 <col:25, col:29> '<dependent type>' contains-errors lvalue .data     | | | | `-RecoveryExpr 0x1398284e0 <col:25> '<dependent type>' contains-errors lvalue     | | | `-IntegerLiteral 0x139828428 <col:35> 'int' 0     | | `-IntegerLiteral 0x139828480 <col:40> 'int' 0     | `-CompoundStmt 0x139828608 <line:21:3, line:24:3>     |   `-ReturnStmt 0x1398285f8 <line:23:5, col:13>     |     `-UnaryOperator 0x1398285e0 <col:12, col:13> 'int' prefix '-'     |       `-IntegerLiteral 0x1398285c0 <col:13> 'int' 1     `-ReturnStmt 0x139828680 <line:27:3, col:10>       `-IntegerLiteral 0x139828660 <col:10> 'int' 0 ","20957":"`-FunctionDecl 0x13d141048  line:1:1 encode_SET_ETH_addr 'int (const struct ofpact_mac *, enum ofp_version, enum ofp_raw_action_type, enum mf_field_id, struct ofpbuf *)'   |-ParmVarDecl 0x13d128648 <col:21, col:46> col:46 used mac 'const struct ofpact_mac *'   |-ParmVarDecl 0x13d140a00 <col:51, col:68> col:68 invalid ofp_version 'enum ofp_version'   |-ParmVarDecl 0x13d140b88 <line:2:21, col:46> col:46 invalid raw 'enum ofp_raw_action_type'   |-ParmVarDecl 0x13d140d08 <col:51, col:68> col:68 invalid field 'enum mf_field_id'   |-ParmVarDecl 0x13d140ed8 <line:3:21, col:36> col:36 used out 'struct ofpbuf *'   `-CompoundStmt 0x13d146ad8 <line:4:1, line:13:1>     `-IfStmt 0x13d146aa8 <line:5:5, line:12:5> has_else       |-BinaryOperator 0x13d1411f0 <line:5:9, col:23> 'int' contains-errors '<'       | |-RecoveryExpr 0x13d141160 <col:9> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x13d1411d0 <col:23> '<dependent type>' contains-errors lvalue       |-CompoundStmt 0x13d141720 <col:38, line:10:5>       | |-DeclStmt 0x13d1413f8 <line:6:9, col:40>       | | |-RecordDecl 0x13d141210 <col:9, col:16> col:16 struct ofp_action_dl_addr       | | `-VarDecl 0x13d141378 <col:9, col:36> col:36 used oada 'struct ofp_action_dl_addr *'       | |-BinaryOperator 0x13d141620 <line:8:9, col:55> 'struct ofp_action_dl_addr *' contains-errors '='       | | |-DeclRefExpr 0x13d141410 <col:9> 'struct ofp_action_dl_addr *' lvalue Var 0x13d141378 'oada' 'struct ofp_action_dl_addr *'       | | `-CallExpr 0x13d1415e0 <col:16, col:55> '<dependent type>' contains-errors       | |   |-DeclRefExpr 0x13d141540 <col:16> 'int ()' Function 0x13d141488 'ofpact_put_raw' 'int ()'       | |   |-DeclRefExpr 0x13d141560 <col:31> 'struct ofpbuf *' lvalue ParmVar 0x13d140ed8 'out' 'struct ofpbuf *'       | |   |-RecoveryExpr 0x13d141580 <col:36> '<dependent type>' contains-errors lvalue       | |   |-RecoveryExpr 0x13d1415a0 <col:49> '<dependent type>' contains-errors lvalue       | |   `-IntegerLiteral 0x13d1415c0 <col:54> 'int' 0       | `-BinaryOperator 0x13d141700 <line:9:9, col:30> '<dependent type>' contains-errors '='       |   |-RecoveryExpr 0x13d141678 <col:9, col:15> '<dependent type>' contains-errors lvalue       |   | `-DeclRefExpr 0x13d141640 <col:9> 'struct ofp_action_dl_addr *' lvalue Var 0x13d141378 'oada' 'struct ofp_action_dl_addr *'       |   `-RecoveryExpr 0x13d1416d8 <col:25, col:30> '<dependent type>' contains-errors lvalue       |     `-DeclRefExpr 0x13d1416a0 <col:25> 'const struct ofpact_mac *' lvalue ParmVar 0x13d128648 'mac' 'const struct ofpact_mac *'       `-CompoundStmt 0x13d146a90 <line:10:12, line:12:5>         `-CallExpr 0x13d146a50 <line:11:9, col:76> '<dependent type>' contains-errors           |-DeclRefExpr 0x13d141828 <col:9> 'int ()' Function 0x13d141770 'put_set_field' 'int ()'           |-DeclRefExpr 0x13d141848 <col:23> 'struct ofpbuf *' lvalue ParmVar 0x13d140ed8 'out' 'struct ofpbuf *'           |-RecoveryExpr 0x13d141868 <col:28> '<dependent type>' contains-errors lvalue           |-RecoveryExpr 0x13d141888 <col:41> '<dependent type>' contains-errors lvalue           `-CallExpr 0x13d146a28 <col:48, col:75> '<dependent type>' contains-errors             |-DeclRefExpr 0x13d141988 <col:48> 'int ()' Function 0x13d1418d0 'eth_addr_to_uint64' 'int ()'             `-RecoveryExpr 0x13d146a00 <col:67, col:72> '<dependent type>' contains-errors lvalue               `-DeclRefExpr 0x13d1419a8 <col:67> 'const struct ofpact_mac *' lvalue ParmVar 0x13d128648 'mac' 'const struct ofpact_mac *' ","20834":"`-FunctionDecl 0x145927c38  line:1:1 referenced bash_complete_filename 'int (int, int)'   |-ParmVarDecl 0x145927ad8 <line:2:6, col:10> col:10 ignore 'int'   |-ParmVarDecl 0x145927b58 <col:6, col:18> col:18 ignore2 'int'   `-CompoundStmt 0x145928078 <line:3:1, line:5:1>     `-ReturnStmt 0x145928068 <line:4:3, col:86>       `-CallExpr 0x145928040 <col:10, col:86> 'int'         |-ImplicitCastExpr 0x145928028 <col:10> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x145927e60 <col:10> 'int ()' Function 0x145927da8 'bash_complete_filename_internal' 'int ()'         `-CallExpr 0x145927fe8 <col:43, col:85> 'int'           |-ImplicitCastExpr 0x145927fd0 <col:43> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x145927f60 <col:43> 'int ()' Function 0x145927ea8 'rl_completion_mode' 'int ()'           `-ImplicitCastExpr 0x145928010 <col:63> 'int (*)()' <FunctionToPointerDecay>             `-DeclRefExpr 0x145927f80 <col:63> 'int ()' Function 0x145927c38 'bash_complete_filename' 'int (int, int)' ","21164":"`-FunctionDecl 0x15900a398  line:1:1 ProcGlobalSemas 'int (void)'   `-CompoundStmt 0x15900a560 <line:2:1, line:5:1>     `-ReturnStmt 0x15900a550 <line:4:2, col:23>       `-BinaryOperator 0x15900a530 <col:9, col:23> '<dependent type>' contains-errors '+'         |-RecoveryExpr 0x15900a4f0 <col:9> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x15900a510 <col:23> '<dependent type>' contains-errors lvalue ","20650":"`-FunctionDecl 0x12b940b48  line:1:12 load_state_from_tss32 'int (struct kvm_vcpu *, struct tss_segment_32 *)' static   |-ParmVarDecl 0x12b928648 <col:34, col:51> col:51 used vcpu 'struct kvm_vcpu *'   |-ParmVarDecl 0x12b940a28 <line:2:7, col:30> col:30 used tss 'struct tss_segment_32 *'   `-CompoundStmt 0x12b943890 <line:3:1, line:39:1>     |-CallExpr 0x12b940e10 <line:4:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12b940d70 <col:2> 'int ()' Function 0x12b940cb8 'kvm_set_cr3' 'int ()'     | |-DeclRefExpr 0x12b940d90 <col:14> 'struct kvm_vcpu *' lvalue ParmVar 0x12b928648 'vcpu' 'struct kvm_vcpu *'     | `-RecoveryExpr 0x12b940de8 <col:20, col:25> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12b940db0 <col:20> 'struct tss_segment_32 *' lvalue ParmVar 0x12b940a28 'tss' 'struct tss_segment_32 *'     |-CallExpr 0x12b940fc0 <line:6:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12b940f20 <col:2> 'int ()' Function 0x12b940e68 'kvm_rip_write' 'int ()'     | |-DeclRefExpr 0x12b940f40 <col:16> 'struct kvm_vcpu *' lvalue ParmVar 0x12b928648 'vcpu' 'struct kvm_vcpu *'     | `-RecoveryExpr 0x12b940f98 <col:22, col:27> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12b940f60 <col:22> 'struct tss_segment_32 *' lvalue ParmVar 0x12b940a28 'tss' 'struct tss_segment_32 *'     |-CallExpr 0x12b9412a0 <line:9:2, col:50> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12b941190 <col:2> 'int ()' Function 0x12b9410d8 'kvm_register_write' 'int ()'     | |-DeclRefExpr 0x12b9411b0 <col:21> 'struct kvm_vcpu *' lvalue ParmVar 0x12b928648 'vcpu' 'struct kvm_vcpu *'     | |-RecoveryExpr 0x12b941280 <col:27> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x12b941220 <col:42, col:47> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12b9411e8 <col:42> 'struct tss_segment_32 *' lvalue ParmVar 0x12b940a28 'tss' 'struct tss_segment_32 *'     |-CallExpr 0x12b9413e8 <line:10:2, col:50> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12b9412d8 <col:2> 'int ()' Function 0x12b9410d8 'kvm_register_write' 'int ()'     | |-DeclRefExpr 0x12b9412f8 <col:21> 'struct kvm_vcpu *' lvalue ParmVar 0x12b928648 'vcpu' 'struct kvm_vcpu *'     | |-RecoveryExpr 0x12b9413c8 <col:27> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x12b941368 <col:42, col:47> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12b941330 <col:42> 'struct tss_segment_32 *' lvalue ParmVar 0x12b940a28 'tss' 'struct tss_segment_32 *'     |-CallExpr 0x12b941530 <line:11:2, col:50> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12b941420 <col:2> 'int ()' Function 0x12b9410d8 'kvm_register_write' 'int ()'     | |-DeclRefExpr 0x12b941440 <col:21> 'struct kvm_vcpu *' lvalue ParmVar 0x12b928648 'vcpu' 'struct kvm_vcpu *'     | |-RecoveryExpr 0x12b941510 <col:27> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x12b9414b0 <col:42, col:47> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12b941478 <col:42> 'struct tss_segment_32 *' lvalue ParmVar 0x12b940a28 'tss' 'struct tss_segment_32 *'     |-CallExpr 0x12b941678 <line:12:2, col:50> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12b941568 <col:2> 'int ()' Function 0x12b9410d8 'kvm_register_write' 'int ()'     | |-DeclRefExpr 0x12b941588 <col:21> 'struct kvm_vcpu *' lvalue ParmVar 0x12b928648 'vcpu' 'struct kvm_vcpu *'     | |-RecoveryExpr 0x12b941658 <col:27> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x12b9415f8 <col:42, col:47> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12b9415c0 <col:42> 'struct tss_segment_32 *' lvalue ParmVar 0x12b940a28 'tss' 'struct tss_segment_32 *'     |-CallExpr 0x12b9417c0 <line:13:2, col:50> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12b9416b0 <col:2> 'int ()' Function 0x12b9410d8 'kvm_register_write' 'int ()'     | |-DeclRefExpr 0x12b9416d0 <col:21> 'struct kvm_vcpu *' lvalue ParmVar 0x12b928648 'vcpu' 'struct kvm_vcpu *'     | |-RecoveryExpr 0x12b9417a0 <col:27> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x12b941740 <col:42, col:47> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12b941708 <col:42> 'struct tss_segment_32 *' lvalue ParmVar 0x12b940a28 'tss' 'struct tss_segment_32 *'     |-CallExpr 0x12b941908 <line:14:2, col:50> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12b9417f8 <col:2> 'int ()' Function 0x12b9410d8 'kvm_register_write' 'int ()'     | |-DeclRefExpr 0x12b941818 <col:21> 'struct kvm_vcpu *' lvalue ParmVar 0x12b928648 'vcpu' 'struct kvm_vcpu *'     | |-RecoveryExpr 0x12b9418e8 <col:27> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x12b941888 <col:42, col:47> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12b941850 <col:42> 'struct tss_segment_32 *' lvalue ParmVar 0x12b940a28 'tss' 'struct tss_segment_32 *'     |-CallExpr 0x12b942e58 <line:15:2, col:50> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12b941940 <col:2> 'int ()' Function 0x12b9410d8 'kvm_register_write' 'int ()'     | |-DeclRefExpr 0x12b941960 <col:21> 'struct kvm_vcpu *' lvalue ParmVar 0x12b928648 'vcpu' 'struct kvm_vcpu *'     | |-RecoveryExpr 0x12b942e38 <col:27> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x12b9419d0 <col:42, col:47> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12b941998 <col:42> 'struct tss_segment_32 *' lvalue ParmVar 0x12b940a28 'tss' 'struct tss_segment_32 *'     |-IfStmt 0x12b943120 <line:18:2, line:19:10>     | |-RecoveryExpr 0x12b9430d0 <line:18:6, col:76> '_Bool' contains-errors     | `-ReturnStmt 0x12b943110 <line:19:3, col:10>     |   `-IntegerLiteral 0x12b9430f0 <col:10> 'int' 1     |-IfStmt 0x12b943250 <line:21:2, line:22:10>     | |-RecoveryExpr 0x12b943200 <line:21:6, col:64> '_Bool' contains-errors     | `-ReturnStmt 0x12b943240 <line:22:3, col:10>     |   `-IntegerLiteral 0x12b943220 <col:10> 'int' 1     |-IfStmt 0x12b943380 <line:24:2, line:25:10>     | |-RecoveryExpr 0x12b943330 <line:24:6, col:64> '_Bool' contains-errors     | `-ReturnStmt 0x12b943370 <line:25:3, col:10>     |   `-IntegerLiteral 0x12b943350 <col:10> 'int' 1     |-IfStmt 0x12b9434b0 <line:27:2, line:28:10>     | |-RecoveryExpr 0x12b943460 <line:27:6, col:64> '_Bool' contains-errors     | `-ReturnStmt 0x12b9434a0 <line:28:3, col:10>     |   `-IntegerLiteral 0x12b943480 <col:10> 'int' 1     |-IfStmt 0x12b9435e0 <line:30:2, line:31:10>     | |-RecoveryExpr 0x12b943590 <line:30:6, col:64> '_Bool' contains-errors     | `-ReturnStmt 0x12b9435d0 <line:31:3, col:10>     |   `-IntegerLiteral 0x12b9435b0 <col:10> 'int' 1     |-IfStmt 0x12b943710 <line:33:2, line:34:10>     | |-RecoveryExpr 0x12b9436c0 <line:33:6, col:64> '_Bool' contains-errors     | `-ReturnStmt 0x12b943700 <line:34:3, col:10>     |   `-IntegerLiteral 0x12b9436e0 <col:10> 'int' 1     |-IfStmt 0x12b943840 <line:36:2, line:37:10>     | |-RecoveryExpr 0x12b9437f0 <line:36:6, col:64> '_Bool' contains-errors     | `-ReturnStmt 0x12b943830 <line:37:3, col:10>     |   `-IntegerLiteral 0x12b943810 <col:10> 'int' 1     `-ReturnStmt 0x12b943880 <line:38:2, col:9>       `-IntegerLiteral 0x12b943860 <col:9> 'int' 0 ","21006":"`-FunctionDecl 0x1281281c8  line:1:21 invalid X509_get0_serialNumber 'const int *(const int *)'   |-ParmVarDecl 0x1281280f0 <col:44, col:56> col:56 invalid a 'const int *'   `-CompoundStmt 0x128128350 <line:2:1, line:4:1>     `-ReturnStmt 0x128128340 <line:3:5, col:26>       `-UnaryOperator 0x128128328 <col:12, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow         `-CXXDependentScopeMemberExpr 0x1281282e0 <col:13, col:26> '<dependent type>' contains-errors lvalue .serialNumber           `-CXXDependentScopeMemberExpr 0x128128298 <col:13, col:16> '<dependent type>' contains-errors lvalue ->cert_info             `-RecoveryExpr 0x128128278 <col:13> '<dependent type>' contains-errors lvalue ","20575":"`-FunctionDecl 0x13e04a950  line:1:13 rfcomm_dev_destruct 'void (struct tty_port *)' static   |-ParmVarDecl 0x13e04a848 <col:33, col:50> col:50 used port 'struct tty_port *'   `-CompoundStmt 0x13e065e88 <line:2:1, line:25:1>     |-DeclStmt 0x13e062fc8 <line:3:2, col:70>     | |-RecordDecl 0x13e062c48 <col:2, col:9> col:9 struct rfcomm_dev     | `-VarDecl 0x13e062db8 <col:2, col:21> col:21 used dev 'struct rfcomm_dev *'     |-DeclStmt 0x13e063228 <line:4:2, col:35>     | |-RecordDecl 0x13e062fe0 <col:2, col:9> col:9 struct rfcomm_dlc     | `-VarDecl 0x13e063148 <col:2, col:32> col:21 used dlc 'struct rfcomm_dlc *' cinit     |   `-RecoveryExpr 0x13e0631e8 <col:27, col:32> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13e0631b0 <col:27> 'struct rfcomm_dev *' lvalue Var 0x13e062db8 'dev' 'struct rfcomm_dev *'     |-CallExpr 0x13e063428 <line:6:2, col:24> 'int' contains-errors     | |-ImplicitCastExpr 0x13e063410 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13e063320 <col:2> 'int ()' Function 0x13e063268 'BT_DBG' 'int ()'     | |-ImplicitCastExpr 0x13e063460 <col:9> 'char *' <ArrayToPointerDecay>     | | `-StringLiteral 0x13e063380 <col:9> 'char[4]' lvalue \"STR\"     | |-ImplicitCastExpr 0x13e063478 <col:16> 'struct rfcomm_dev *' <LValueToRValue>     | | `-DeclRefExpr 0x13e0633a0 <col:16> 'struct rfcomm_dev *' lvalue Var 0x13e062db8 'dev' 'struct rfcomm_dev *'     | `-ImplicitCastExpr 0x13e063490 <col:21> 'struct rfcomm_dlc *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x13e0633c0 <col:21> 'struct rfcomm_dlc *' contains-errors lvalue Var 0x13e063148 'dlc' 'struct rfcomm_dlc *'     |-CallExpr 0x13e063760 <line:9:2, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13e063588 <col:2> 'int ()' Function 0x13e0634d0 'BUG_ON' 'int ()'     | `-UnaryOperator 0x13e063748 <col:9, col:31> '<dependent type>' contains-errors prefix '!' cannot overflow     |   `-CallExpr 0x13e063720 <col:10, col:31> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x13e063688 <col:10> 'int ()' Function 0x13e0635d0 'list_empty' 'int ()'     |     `-UnaryOperator 0x13e063708 <col:21, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x13e0636e0 <col:22, col:27> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x13e0636a8 <col:22> 'struct rfcomm_dev *' lvalue Var 0x13e062db8 'dev' 'struct rfcomm_dev *'     |-CallExpr 0x13e0638c0 <line:11:2, col:21> 'int' contains-errors     | |-ImplicitCastExpr 0x13e0638a8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13e063868 <col:2> 'int ()' Function 0x13e0637b0 'rfcomm_dlc_lock' 'int ()'     | `-ImplicitCastExpr 0x13e0638e8 <col:18> 'struct rfcomm_dlc *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x13e063888 <col:18> 'struct rfcomm_dlc *' contains-errors lvalue Var 0x13e063148 'dlc' 'struct rfcomm_dlc *'     |-IfStmt 0x13e063a78 <line:13:2, line:14:16>     | |-BinaryOperator 0x13e063980 <line:13:6, col:20> 'int' contains-errors '=='     | | |-RecoveryExpr 0x13e063938 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x13e063900 <col:6> 'struct rfcomm_dlc *' contains-errors lvalue Var 0x13e063148 'dlc' 'struct rfcomm_dlc *'     | | `-DeclRefExpr 0x13e063960 <col:20> 'struct rfcomm_dev *' lvalue Var 0x13e062db8 'dev' 'struct rfcomm_dev *'     | `-BinaryOperator 0x13e063a58 <line:14:3, col:16> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x13e0639d8 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x13e0639a0 <col:3> 'struct rfcomm_dlc *' contains-errors lvalue Var 0x13e063148 'dlc' 'struct rfcomm_dlc *'     |   `-RecoveryExpr 0x13e063a38 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13e063bd0 <line:15:2, col:23> 'int' contains-errors     | |-ImplicitCastExpr 0x13e063bb8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13e063b78 <col:2> 'int ()' Function 0x13e063ac0 'rfcomm_dlc_unlock' 'int ()'     | `-ImplicitCastExpr 0x13e065800 <col:20> 'struct rfcomm_dlc *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x13e063b98 <col:20> 'struct rfcomm_dlc *' contains-errors lvalue Var 0x13e063148 'dlc' 'struct rfcomm_dlc *'     |-CallExpr 0x13e065950 <line:17:2, col:20> 'int' contains-errors     | |-ImplicitCastExpr 0x13e065938 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13e0658f8 <col:2> 'int ()' Function 0x13e065840 'rfcomm_dlc_put' 'int ()'     | `-ImplicitCastExpr 0x13e065978 <col:17> 'struct rfcomm_dlc *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x13e065918 <col:17> 'struct rfcomm_dlc *' contains-errors lvalue Var 0x13e063148 'dlc' 'struct rfcomm_dlc *'     |-CallExpr 0x13e065b58 <line:19:2, col:50> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13e065a70 <col:2> 'int ()' Function 0x13e0659b8 'tty_unregister_device' 'int ()'     | |-RecoveryExpr 0x13e065b38 <col:24> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x13e065ae0 <col:43, col:48> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x13e065aa8 <col:43> 'struct rfcomm_dev *' lvalue Var 0x13e062db8 'dev' 'struct rfcomm_dev *'     |-CallExpr 0x13e065cc0 <line:21:2, col:11> 'int'     | |-ImplicitCastExpr 0x13e065ca8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13e065c68 <col:2> 'int ()' Function 0x13e065bb0 'kfree' 'int ()'     | `-ImplicitCastExpr 0x13e065ce8 <col:8> 'struct rfcomm_dev *' <LValueToRValue>     |   `-DeclRefExpr 0x13e065c88 <col:8> 'struct rfcomm_dev *' lvalue Var 0x13e062db8 'dev' 'struct rfcomm_dev *'     `-CallExpr 0x13e065e60 <line:24:2, col:24> '<dependent type>' contains-errors       |-DeclRefExpr 0x13e065de0 <col:2> 'int ()' Function 0x13e065d28 'module_put' 'int ()'       `-RecoveryExpr 0x13e065e40 <col:13> '<dependent type>' contains-errors lvalue ","20590":"`-FunctionDecl 0x12b81f950  line:1:13 rds_conn_path_destroy 'void (struct rds_conn_path *)' static   |-ParmVarDecl 0x12b81f848 <col:35, col:57> col:57 used cp 'struct rds_conn_path *'   `-CompoundStmt 0x12b83ebe0 <line:2:1, line:32:1>     |-DeclStmt 0x12b83bad0 <line:3:2, col:31>     | |-RecordDecl 0x12b83b848 <col:2, col:9> col:9 struct rds_message     | |-VarDecl 0x12b83b9b8 <col:2, col:22> col:22 used rm 'struct rds_message *'     | `-VarDecl 0x12b83ba48 <col:2, col:27> col:27 used rtmp 'struct rds_message *'     |-IfStmt 0x12b83bb88 <line:5:2, line:6:3>     | |-UnaryOperator 0x12b83bb60 <line:5:6, col:11> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12b83bb48 <col:7, col:11> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x12b83bb20 <col:7, col:11> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x12b83bae8 <col:7> 'struct rds_conn_path *' lvalue ParmVar 0x12b81f848 'cp' 'struct rds_conn_path *'     | `-ReturnStmt 0x12b83bb78 <line:6:3>     |-CallExpr 0x12b83bd68 <line:9:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12b83bcd0 <col:2> 'int ()' Function 0x12b83bc18 'cancel_delayed_work_sync' 'int ()'     | `-UnaryOperator 0x12b83bd50 <col:27, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12b83bd28 <col:28, col:32> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12b83bcf0 <col:28> 'struct rds_conn_path *' lvalue ParmVar 0x12b81f848 'cp' 'struct rds_conn_path *'     |-CallExpr 0x12b83be28 <line:10:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12b83bd90 <col:2> 'int ()' Function 0x12b83bc18 'cancel_delayed_work_sync' 'int ()'     | `-UnaryOperator 0x12b83be10 <col:27, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12b83bde8 <col:28, col:32> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12b83bdb0 <col:28> 'struct rds_conn_path *' lvalue ParmVar 0x12b81f848 'cp' 'struct rds_conn_path *'     |-CallExpr 0x12b83bfd8 <line:12:2, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12b83bf30 <col:2> 'int ()' Function 0x12b83be78 'rds_conn_path_drop' 'int ()'     | |-DeclRefExpr 0x12b83bf50 <col:21> 'struct rds_conn_path *' lvalue ParmVar 0x12b81f848 'cp' 'struct rds_conn_path *'     | `-RecoveryExpr 0x12b83bfb8 <col:25> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12b83c180 <line:13:2, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12b83c0e8 <col:2> 'int ()' Function 0x12b83c030 'flush_work' 'int ()'     | `-UnaryOperator 0x12b83c168 <col:13, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12b83c140 <col:14, col:18> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12b83c108 <col:14> 'struct rds_conn_path *' lvalue ParmVar 0x12b81f848 'cp' 'struct rds_conn_path *'     |-CallExpr 0x12b83c3d8 <line:16:2, line:18:17> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12b83c288 <line:16:2> 'int ()' Function 0x12b83c1d0 'list_for_each_entry_safe' 'int ()'     | |-DeclRefExpr 0x12b83c2a8 <col:27> 'struct rds_message *' lvalue Var 0x12b83b9b8 'rm' 'struct rds_message *'     | |-DeclRefExpr 0x12b83c2c8 <col:31> 'struct rds_message *' lvalue Var 0x12b83ba48 'rtmp' 'struct rds_message *'     | |-UnaryOperator 0x12b83c348 <line:17:6, col:11> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x12b83c320 <col:7, col:11> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12b83c2e8 <col:7> 'struct rds_conn_path *' lvalue ParmVar 0x12b81f848 'cp' 'struct rds_conn_path *'     | `-RecoveryExpr 0x12b83c3b8 <line:18:6> '<dependent type>' contains-errors lvalue     |-CompoundStmt 0x12b83e258 <col:19, line:22:2>     | |-CallExpr 0x12b83c590 <line:19:3, col:33> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x12b83c4f8 <col:3> 'int ()' Function 0x12b83c440 'list_del_init' 'int ()'     | | `-UnaryOperator 0x12b83c578 <col:17, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x12b83c550 <col:18, col:22> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x12b83c518 <col:18> 'struct rds_message *' lvalue Var 0x12b83b9b8 'rm' 'struct rds_message *'     | |-CallExpr 0x12b83e080 <line:20:3, col:39> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x12b83c698 <col:3> 'int ()' Function 0x12b83c5e0 'BUG_ON' 'int ()'     | | `-UnaryOperator 0x12b83e068 <col:10, col:38> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-CallExpr 0x12b83e040 <col:11, col:38> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x12b83c798 <col:11> 'int ()' Function 0x12b83c6e0 'list_empty' 'int ()'     | |     `-UnaryOperator 0x12b83e028 <col:22, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     | |       `-RecoveryExpr 0x12b83e000 <col:23, col:27> '<dependent type>' contains-errors lvalue     | |         `-DeclRefExpr 0x12b83c7b8 <col:23> 'struct rds_message *' lvalue Var 0x12b83b9b8 'rm' 'struct rds_message *'     | `-CallExpr 0x12b83e218 <line:21:3, col:21> 'int'     |   |-ImplicitCastExpr 0x12b83e200 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12b83e188 <col:3> 'int ()' Function 0x12b83e0d0 'rds_message_put' 'int ()'     |   `-ImplicitCastExpr 0x12b83e240 <col:19> 'struct rds_message *' <LValueToRValue>     |     `-DeclRefExpr 0x12b83e1a8 <col:19> 'struct rds_message *' lvalue Var 0x12b83b9b8 'rm' 'struct rds_message *'     |-IfStmt 0x12b83e388 <line:23:2, line:24:33>     | |-RecoveryExpr 0x12b83e2b8 <line:23:6, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12b83e280 <col:6> 'struct rds_conn_path *' lvalue ParmVar 0x12b81f848 'cp' 'struct rds_conn_path *'     | `-CallExpr 0x12b83e360 <line:24:3, col:33> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12b83e2e0 <col:3> 'int ()' Function 0x12b83e0d0 'rds_message_put' 'int ()'     |   `-RecoveryExpr 0x12b83e338 <col:19, col:23> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12b83e300 <col:19> 'struct rds_conn_path *' lvalue ParmVar 0x12b81f848 'cp' 'struct rds_conn_path *'     |-CallExpr 0x12b83e648 <line:26:2, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12b83e488 <col:2> 'int ()' Function 0x12b83e3d0 'WARN_ON' 'int ()'     | `-CallExpr 0x12b83e620 <col:10, col:45> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12b83e588 <col:10> 'int ()' Function 0x12b83e4d0 'delayed_work_pending' 'int ()'     |   `-UnaryOperator 0x12b83e608 <col:31, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x12b83e5e0 <col:32, col:36> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x12b83e5a8 <col:32> 'struct rds_conn_path *' lvalue ParmVar 0x12b81f848 'cp' 'struct rds_conn_path *'     |-CallExpr 0x12b83e750 <line:27:2, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12b83e670 <col:2> 'int ()' Function 0x12b83e3d0 'WARN_ON' 'int ()'     | `-CallExpr 0x12b83e728 <col:10, col:45> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12b83e690 <col:10> 'int ()' Function 0x12b83e4d0 'delayed_work_pending' 'int ()'     |   `-UnaryOperator 0x12b83e710 <col:31, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x12b83e6e8 <col:32, col:36> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x12b83e6b0 <col:32> 'struct rds_conn_path *' lvalue ParmVar 0x12b81f848 'cp' 'struct rds_conn_path *'     |-CallExpr 0x12b83e858 <line:28:2, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12b83e778 <col:2> 'int ()' Function 0x12b83e3d0 'WARN_ON' 'int ()'     | `-CallExpr 0x12b83e830 <col:10, col:45> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12b83e798 <col:10> 'int ()' Function 0x12b83e4d0 'delayed_work_pending' 'int ()'     |   `-UnaryOperator 0x12b83e818 <col:31, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x12b83e7f0 <col:32, col:36> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x12b83e7b8 <col:32> 'struct rds_conn_path *' lvalue ParmVar 0x12b81f848 'cp' 'struct rds_conn_path *'     |-CallExpr 0x12b83ea40 <line:29:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12b83e880 <col:2> 'int ()' Function 0x12b83e3d0 'WARN_ON' 'int ()'     | `-CallExpr 0x12b83ea18 <col:10, col:37> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12b83e980 <col:10> 'int ()' Function 0x12b83e8c8 'work_pending' 'int ()'     |   `-UnaryOperator 0x12b83ea00 <col:23, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x12b83e9d8 <col:24, col:28> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x12b83e9a0 <col:24> 'struct rds_conn_path *' lvalue ParmVar 0x12b81f848 'cp' 'struct rds_conn_path *'     `-CallExpr 0x12b83ebb8 <line:31:2, col:55> '<dependent type>' contains-errors       |-CXXDependentScopeMemberExpr 0x12b83eb10 <col:2, col:24> '<dependent type>' contains-errors lvalue ->conn_free       | `-CXXDependentScopeMemberExpr 0x12b83eac8 <col:2, col:15> '<dependent type>' contains-errors lvalue ->c_trans       |   `-RecoveryExpr 0x12b83eaa0 <col:2, col:6> '<dependent type>' contains-errors lvalue       |     `-DeclRefExpr 0x12b83ea68 <col:2> 'struct rds_conn_path *' lvalue ParmVar 0x12b81f848 'cp' 'struct rds_conn_path *'       `-RecoveryExpr 0x12b83eb90 <col:34, col:38> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x12b83eb58 <col:34> 'struct rds_conn_path *' lvalue ParmVar 0x12b81f848 'cp' 'struct rds_conn_path *' ","21113":"`-FunctionDecl 0x143140eb8  line:2:31 __skb_dequeue_tail 'struct sk_buff *(struct sk_buff_head *)' static inline   |-ParmVarDecl 0x143140d38 <col:50, col:71> col:71 used list 'struct sk_buff_head *'   `-CompoundStmt 0x143141470 <line:3:1, line:7:13>     |-DeclStmt 0x143141200 <line:4:2, col:43>     | `-VarDecl 0x143140f90 <col:2, col:42> col:18 used skb 'struct sk_buff *' cinit     |   `-ImplicitCastExpr 0x1431411e8 <col:24, col:42> 'struct sk_buff *' <IntegralToPointer>     |     `-CallExpr 0x1431411a8 <col:24, col:42> 'int'     |       |-ImplicitCastExpr 0x143141190 <col:24> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x143141120 <col:24> 'int ()' Function 0x143141068 'skb_peek_tail' 'int ()'     |       `-ImplicitCastExpr 0x1431411d0 <col:38> 'struct sk_buff_head *' <LValueToRValue>     |         `-DeclRefExpr 0x143141140 <col:38> 'struct sk_buff_head *' lvalue ParmVar 0x143140d38 'list' 'struct sk_buff_head *'     |-IfStmt 0x143141408 <line:5:2, line:6:25>     | |-ImplicitCastExpr 0x143141238 <line:5:6> 'struct sk_buff *' <LValueToRValue>     | | `-DeclRefExpr 0x143141218 <col:6> 'struct sk_buff *' lvalue Var 0x143140f90 'skb' 'struct sk_buff *'     | `-CallExpr 0x1431413a8 <line:6:3, col:25> 'int'     |   |-ImplicitCastExpr 0x143141390 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x143141330 <col:3> 'int ()' Function 0x143141278 '__skb_unlink' 'int ()'     |   |-ImplicitCastExpr 0x1431413d8 <col:16> 'struct sk_buff *' <LValueToRValue>     |   | `-DeclRefExpr 0x143141350 <col:16> 'struct sk_buff *' lvalue Var 0x143140f90 'skb' 'struct sk_buff *'     |   `-ImplicitCastExpr 0x1431413f0 <col:21> 'struct sk_buff_head *' <LValueToRValue>     |     `-DeclRefExpr 0x143141370 <col:21> 'struct sk_buff_head *' lvalue ParmVar 0x143140d38 'list' 'struct sk_buff_head *'     `-ReturnStmt 0x143141460 <line:7:2, col:9>       `-ImplicitCastExpr 0x143141448 <col:9> 'struct sk_buff *' <LValueToRValue>         `-DeclRefExpr 0x143141428 <col:9> 'struct sk_buff *' lvalue Var 0x143140f90 'skb' 'struct sk_buff *' ","20349":"`-FunctionDecl 0x145810938  line:1:1 invalid import_keys_stream 'int (int, int, void *, unsigned char **, int *, unsigned int)'   |-ParmVarDecl 0x1458104f0 <col:21, col:28> col:28 invalid ctrl 'int'   |-ParmVarDecl 0x145810570 <col:34, col:40> col:40 invalid inp 'int'   |-ParmVarDecl 0x1458105f0 <col:45, col:51> col:51 used stats_handle 'void *'   |-ParmVarDecl 0x1458106e0 <line:2:7, col:23> col:23 used fpr 'unsigned char **'   |-ParmVarDecl 0x145810798 <col:28, col:36> col:36 invalid fpr_len 'int *'   |-ParmVarDecl 0x145810818 <col:44, col:57> col:57 used options 'unsigned int'   `-CompoundStmt 0x147808d90 <line:3:1, line:6:1>     `-ReturnStmt 0x147808d80 <line:4:3, line:5:53>       `-CallExpr 0x147808d20 <line:4:10, line:5:53> '<dependent type>' contains-errors         |-DeclRefExpr 0x145810b70 <line:4:10> 'int ()' Function 0x145810ab8 'import_keys_internal' 'int ()'         |-RecoveryExpr 0x145810b90 <col:32> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x145810bb0 <col:38> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x147808d00 <col:43> '<dependent type>' contains-errors lvalue         |-IntegerLiteral 0x147808c00 <col:49> 'int' 0         |-DeclRefExpr 0x147808c20 <col:52> 'void *' lvalue ParmVar 0x1458105f0 'stats_handle' 'void *'         |-DeclRefExpr 0x147808c40 <line:5:32> 'unsigned char **' lvalue ParmVar 0x1458106e0 'fpr' 'unsigned char **'         |-RecoveryExpr 0x147808c60 <col:37> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x147808c80 <col:46> 'unsigned int' lvalue ParmVar 0x145810818 'options' 'unsigned int' ","20515":"`-FunctionDecl 0x156128168  line:1:19 invalid DimsData 'int *()' inline   `-CompoundStmt 0x156128270 <col:30, line:3:3> ","20581":"`-FunctionDecl 0x159903838  line:1:1 invalid TIFFReadRawTile1 'int (int *, int, void *, int, const char *)'   |-ParmVarDecl 0x159903528 <col:18, col:24> col:24 invalid tif 'int *'   |-ParmVarDecl 0x1599035a8 <col:29, col:36> col:36 invalid tile 'int'   |-ParmVarDecl 0x159903628 <col:42, col:48> col:48 used buf 'void *'   |-ParmVarDecl 0x1599036a8 <col:53, col:62> col:62 invalid size 'int'   |-ParmVarDecl 0x159903728 <col:68, col:80> col:80 used module 'const char *'   `-CompoundStmt 0x15991f628 <line:2:1, line:73:1>     |-IfStmt 0x15991f5a8 <line:9:2, line:71:2> has_else     | |-UnaryOperator 0x15991cee0 <line:9:6, col:19> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x15991ceb8 <col:7, col:19> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x15991ce78 <col:7> 'int ()' Function 0x15991cdc0 'isMapped' 'int ()'     | |   `-RecoveryExpr 0x15991ce98 <col:16> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x15991da38 <col:22, line:39:2>     | | |-IfStmt 0x15991d508 <line:12:3, line:19:3>     | | | |-RecoveryExpr 0x15991d098 <line:12:7, col:44> '_Bool' contains-errors     | | | `-CompoundStmt 0x15991d4f0 <col:47, line:19:3>     | | |   `-CallExpr 0x15991d450 <line:13:4, line:17:28> '<dependent type>' contains-errors     | | |     |-DeclRefExpr 0x15991d198 <line:13:4> 'int ()' Function 0x15991d0e0 'TIFFErrorExt' 'int ()'     | | |     |-CXXDependentScopeMemberExpr 0x15991d1d8 <col:17, col:22> '<dependent type>' contains-errors lvalue ->tif_clientdata     | | |     | `-RecoveryExpr 0x15991d1b8 <col:17> '<dependent type>' contains-errors lvalue     | | |     |-DeclRefExpr 0x15991d220 <col:38> 'const char *' lvalue ParmVar 0x159903728 'module' 'const char *'     | | |     |-StringLiteral 0x15991d280 <line:14:8> 'char[4]' lvalue \"STR\"     | | |     |-CStyleCastExpr 0x15991d320 <line:15:8, col:29> 'unsigned long' contains-errors <Dependent>     | | |     | `-CXXDependentScopeMemberExpr 0x15991d2c0 <col:24, col:29> '<dependent type>' contains-errors lvalue ->tif_row     | | |     |   `-RecoveryExpr 0x15991d2a0 <col:24> '<dependent type>' contains-errors lvalue     | | |     |-CStyleCastExpr 0x15991d3c8 <line:16:8, col:29> 'unsigned long' contains-errors <Dependent>     | | |     | `-CXXDependentScopeMemberExpr 0x15991d368 <col:24, col:29> '<dependent type>' contains-errors lvalue ->tif_col     | | |     |   `-RecoveryExpr 0x15991d348 <col:24> '<dependent type>' contains-errors lvalue     | | |     `-CStyleCastExpr 0x15991d428 <line:17:8, col:24> 'unsigned long' contains-errors <Dependent>     | | |       `-RecoveryExpr 0x15991d3f0 <col:24> '<dependent type>' contains-errors lvalue     | | `-IfStmt 0x15991da18 <line:21:3, line:38:3>     | |   |-BinaryOperator 0x15991d738 <line:21:7, col:13> 'int' contains-errors '!='     | |   | |-RecoveryExpr 0x15991d718 <col:7> '<dependent type>' contains-errors lvalue     | |   | `-RecoveryExpr 0x15991d6d8 <col:13> '<dependent type>' contains-errors lvalue     | |   `-CompoundStmt 0x15991da08 <col:19, line:38:3>     | `-CompoundStmt 0x15991f590 <line:39:9, line:71:2>     |   `-IfStmt 0x15991f3c8 <line:50:3, line:69:3>     |     |-RecoveryExpr 0x15991f088 <line:50:7, col:10> '_Bool' contains-errors     |     `-CompoundStmt 0x15991f3b8 <col:16, line:69:3>     `-ReturnStmt 0x15991f618 <line:72:2, col:14>       `-ParenExpr 0x15991f5f8 <col:9, col:14> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x15991f5d8 <col:10> '<dependent type>' contains-errors lvalue ","20838":"`-FunctionDecl 0x14f008660  line:1:20 invalid hid_map_usage_clear 'void (struct hid_input *, struct hid_usage *, unsigned long **, int *, int, int)' static inline   |-ParmVarDecl 0x14e00e248 <col:40, col:58> col:58 used hidinput 'struct hid_input *'   |-ParmVarDecl 0x14f008228 <line:2:3, col:21> col:21 used usage 'struct hid_usage *'   |-ParmVarDecl 0x14f008310 <col:28, col:44> col:44 used bit 'unsigned long **'   |-ParmVarDecl 0x14f0083c8 <col:49, col:54> col:54 used max 'int *'   |-ParmVarDecl 0x14f008460 <line:3:3, col:8> col:8 invalid type 'int'   |-ParmVarDecl 0x14f0084e0 <col:14, col:20> col:20 invalid c 'int'   `-CompoundStmt 0x14f008b60 <line:4:1, line:7:1>     |-CallExpr 0x14f008970 <line:5:2, col:50> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14f008890 <col:2> 'int ()' Function 0x14f0087d8 'hid_map_usage' 'int ()'     | |-DeclRefExpr 0x14f0088b0 <col:16> 'struct hid_input *' lvalue ParmVar 0x14e00e248 'hidinput' 'struct hid_input *'     | |-DeclRefExpr 0x14f0088d0 <col:26> 'struct hid_usage *' lvalue ParmVar 0x14f008228 'usage' 'struct hid_usage *'     | |-DeclRefExpr 0x14f0088f0 <col:33> 'unsigned long **' lvalue ParmVar 0x14f008310 'bit' 'unsigned long **'     | |-DeclRefExpr 0x14f008910 <col:38> 'int *' lvalue ParmVar 0x14f0083c8 'max' 'int *'     | |-RecoveryExpr 0x14f008930 <col:43> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14f008950 <col:49> '<dependent type>' contains-errors lvalue     `-CallExpr 0x14f008b30 <line:6:2, col:19> '<dependent type>' contains-errors       |-DeclRefExpr 0x14f008aa0 <col:2> 'int ()' Function 0x14f0089e8 'clear_bit' 'int ()'       |-RecoveryExpr 0x14f008ac0 <col:12> '<dependent type>' contains-errors lvalue       `-UnaryOperator 0x14f008b18 <col:15, col:16> 'unsigned long *' lvalue prefix '*' cannot overflow         `-ImplicitCastExpr 0x14f008b00 <col:16> 'unsigned long **' <LValueToRValue>           `-DeclRefExpr 0x14f008ae0 <col:16> 'unsigned long **' lvalue ParmVar 0x14f008310 'bit' 'unsigned long **' ","20825":"`-FunctionDecl 0x149123178  col:61 implicit used strerror 'char *(int)' extern   |-ParmVarDecl 0x149123278 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x149123220 <<invalid sloc>> Implicit 901 ","20876":"`-FunctionDecl 0x11d928258  line:1:1 invalid date_s__iso8601 'int (int, int)'   |-ParmVarDecl 0x11d9280f0 <col:17, col:23> col:23 invalid klass 'int'   |-ParmVarDecl 0x11d928170 <col:30, col:36> col:36 invalid str 'int'   `-CompoundStmt 0x11d9284e8 <line:2:1, line:4:1>     `-ReturnStmt 0x11d9284d8 <line:3:5, col:29>       `-CallExpr 0x11d9284b0 <col:12, col:29> '<dependent type>' contains-errors         |-DeclRefExpr 0x11d928470 <col:12> 'int ()' Function 0x11d9283b8 'date__iso8601' 'int ()'         `-RecoveryExpr 0x11d928490 <col:26> '<dependent type>' contains-errors lvalue ","21002":"`-FunctionDecl 0x15a940dd8  line:1:12 pmu_set 'int (struct task_struct *, const struct user_regset *, unsigned int, unsigned int, const void *, int)' static   |-ParmVarDecl 0x15a928648 <col:20, col:40> col:40 used target 'struct task_struct *'   |-ParmVarDecl 0x15a940a28 <line:2:9, col:35> col:35 regset 'const struct user_regset *'   |-ParmVarDecl 0x15a940aa8 <line:3:9, col:22> col:22 used pos 'unsigned int'   |-ParmVarDecl 0x15a940b28 <col:27, col:40> col:40 used count 'unsigned int'   |-ParmVarDecl 0x15a940bd8 <line:4:9, col:21> col:21 used kbuf 'const void *'   |-ParmVarDecl 0x15a940c50 <col:27, col:38> col:38 __user 'int'   `-CompoundStmt 0x15a945c58 <line:5:1, line:41:1>     |-DeclStmt 0x15a940f98 <line:6:2, col:13>     | `-VarDecl 0x15a940f10 <col:2, col:12> col:6 used ret 'int' cinit     |   `-IntegerLiteral 0x15a940f78 <col:12> 'int' 0     |-CallExpr 0x15a941448 <line:9:2, col:61> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15a9410e0 <col:2> 'int ()' Function 0x15a941028 'BUILD_BUG_ON' 'int ()'     | `-BinaryOperator 0x15a941428 <col:15, col:60> 'int' contains-errors '!='     |   |-BinaryOperator 0x15a9413c0 <col:15, col:47> '<dependent type>' contains-errors '+'     |   | |-CallExpr 0x15a941360 <col:15, col:23> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x15a9411e0 <col:15> 'int ()' Function 0x15a941128 'TSO' 'int ()'     |   | | `-RecoveryExpr 0x15a941340 <col:19> '<dependent type>' contains-errors lvalue     |   | `-UnaryExprOrTypeTraitExpr 0x15a9413a0 <col:27, col:47> 'unsigned long' sizeof 'unsigned long'     |   `-CallExpr 0x15a941400 <col:52, col:60> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x15a941298 <col:52> 'int ()' Function 0x15a941128 'TSO' 'int ()'     |     `-RecoveryExpr 0x15a9413e0 <col:56> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15a9416f8 <line:10:2, col:61> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15a941470 <col:2> 'int ()' Function 0x15a941028 'BUILD_BUG_ON' 'int ()'     | `-BinaryOperator 0x15a9416d8 <col:15, col:60> 'int' contains-errors '!='     |   |-BinaryOperator 0x15a941670 <col:15, col:47> '<dependent type>' contains-errors '+'     |   | |-CallExpr 0x15a941610 <col:15, col:23> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x15a941490 <col:15> 'int ()' Function 0x15a941128 'TSO' 'int ()'     |   | | `-RecoveryExpr 0x15a9415f0 <col:19> '<dependent type>' contains-errors lvalue     |   | `-UnaryExprOrTypeTraitExpr 0x15a941650 <col:27, col:47> 'unsigned long' sizeof 'unsigned long'     |   `-CallExpr 0x15a9416b0 <col:52, col:60> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x15a941548 <col:52> 'int ()' Function 0x15a941128 'TSO' 'int ()'     |     `-RecoveryExpr 0x15a941690 <col:56> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15a9419a8 <line:11:2, col:62> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15a941720 <col:2> 'int ()' Function 0x15a941028 'BUILD_BUG_ON' 'int ()'     | `-BinaryOperator 0x15a941988 <col:15, col:61> 'int' contains-errors '!='     |   |-BinaryOperator 0x15a941920 <col:15, col:47> '<dependent type>' contains-errors '+'     |   | |-CallExpr 0x15a9418c0 <col:15, col:23> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x15a941740 <col:15> 'int ()' Function 0x15a941128 'TSO' 'int ()'     |   | | `-RecoveryExpr 0x15a9418a0 <col:19> '<dependent type>' contains-errors lvalue     |   | `-UnaryExprOrTypeTraitExpr 0x15a941900 <col:27, col:47> 'unsigned long' sizeof 'unsigned long'     |   `-CallExpr 0x15a941960 <col:52, col:61> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x15a9417f8 <col:52> 'int ()' Function 0x15a941128 'TSO' 'int ()'     |     `-RecoveryExpr 0x15a941940 <col:56> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15a944668 <line:12:2, col:63> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15a9419d0 <col:2> 'int ()' Function 0x15a941028 'BUILD_BUG_ON' 'int ()'     | `-BinaryOperator 0x15a944648 <col:15, col:62> 'int' contains-errors '!='     |   |-BinaryOperator 0x15a9445e0 <col:15, col:48> '<dependent type>' contains-errors '+'     |   | |-CallExpr 0x15a944580 <col:15, col:24> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x15a944400 <col:15> 'int ()' Function 0x15a941128 'TSO' 'int ()'     |   | | `-RecoveryExpr 0x15a944560 <col:19> '<dependent type>' contains-errors lvalue     |   | `-UnaryExprOrTypeTraitExpr 0x15a9445c0 <col:28, col:48> 'unsigned long' sizeof 'unsigned long'     |   `-CallExpr 0x15a944620 <col:53, col:62> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x15a9444b8 <col:53> 'int ()' Function 0x15a941128 'TSO' 'int ()'     |     `-RecoveryExpr 0x15a944600 <col:57> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15a9448f0 <line:14:2, line:15:11>     | |-UnaryOperator 0x15a944830 <line:14:6, col:40> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x15a944808 <col:7, col:40> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x15a944770 <col:7> 'int ()' Function 0x15a9446b8 'cpu_has_feature' 'int ()'     | |   `-RecoveryExpr 0x15a9447e8 <col:23> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x15a9448e0 <line:15:3, col:11>     |   `-UnaryOperator 0x15a9448c8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x15a9448b0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x15a944890 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x15a944dc0 <line:17:2, line:19:25> 'int' contains-errors '='     | |-DeclRefExpr 0x15a944910 <line:17:2> 'int' lvalue Var 0x15a940f10 'ret' 'int'     | `-CallExpr 0x15a944d68 <col:8, line:19:25> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15a944a10 <line:17:8> 'int ()' Function 0x15a944958 'user_regset_copyin' 'int ()'     |   |-UnaryOperator 0x15a944a80 <col:27, col:28> 'unsigned int *' prefix '&' cannot overflow     |   | `-DeclRefExpr 0x15a944a30 <col:28> 'unsigned int' lvalue ParmVar 0x15a940aa8 'pos' 'unsigned int'     |   |-UnaryOperator 0x15a944ab8 <col:33, col:34> 'unsigned int *' prefix '&' cannot overflow     |   | `-DeclRefExpr 0x15a944a98 <col:34> 'unsigned int' lvalue ParmVar 0x15a940b28 'count' 'unsigned int'     |   |-UnaryOperator 0x15a944b20 <col:41, col:42> 'const void **' prefix '&' cannot overflow     |   | `-DeclRefExpr 0x15a944ad0 <col:42> 'const void *' lvalue ParmVar 0x15a940bd8 'kbuf' 'const void *'     |   |-UnaryOperator 0x15a944d18 <col:48, col:49> 'const void **' prefix '&' cannot overflow     |   | `-DeclRefExpr 0x15a944cf8 <col:49> 'const void *' lvalue ParmVar 0x15a940bd8 'kbuf' 'const void *'     |   |-UnaryOperator 0x15a944c10 <line:18:4, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-CXXDependentScopeMemberExpr 0x15a944bc8 <col:5, col:20> '<dependent type>' contains-errors lvalue .siar     |   |   `-RecoveryExpr 0x15a944ba0 <col:5, col:13> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x15a944b68 <col:5> 'struct task_struct *' lvalue ParmVar 0x15a928648 'target' 'struct task_struct *'     |   |-IntegerLiteral 0x15a944c28 <col:26> 'int' 0     |   `-UnaryExprOrTypeTraitExpr 0x15a944d48 <line:19:4, col:24> 'unsigned long' sizeof 'unsigned long'     |-IfStmt 0x15a9452a0 <line:21:2, line:24:29>     | |-UnaryOperator 0x15a944e18 <line:21:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x15a944e00 <col:7> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x15a944de0 <col:7> 'int' lvalue Var 0x15a940f10 'ret' 'int'     | `-BinaryOperator 0x15a945280 <line:22:3, line:24:29> 'int' contains-errors '='     |   |-DeclRefExpr 0x15a944e30 <line:22:3> 'int' lvalue Var 0x15a940f10 'ret' 'int'     |   `-CallExpr 0x15a945228 <col:9, line:24:29> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x15a944e50 <line:22:9> 'int ()' Function 0x15a944958 'user_regset_copyin' 'int ()'     |     |-UnaryOperator 0x15a944e90 <col:28, col:29> 'unsigned int *' prefix '&' cannot overflow     |     | `-DeclRefExpr 0x15a944e70 <col:29> 'unsigned int' lvalue ParmVar 0x15a940aa8 'pos' 'unsigned int'     |     |-UnaryOperator 0x15a944ec8 <col:34, col:35> 'unsigned int *' prefix '&' cannot overflow     |     | `-DeclRefExpr 0x15a944ea8 <col:35> 'unsigned int' lvalue ParmVar 0x15a940b28 'count' 'unsigned int'     |     |-UnaryOperator 0x15a944f00 <col:42, col:43> 'const void **' prefix '&' cannot overflow     |     | `-DeclRefExpr 0x15a944ee0 <col:43> 'const void *' lvalue ParmVar 0x15a940bd8 'kbuf' 'const void *'     |     |-UnaryOperator 0x15a945168 <col:49, col:50> 'const void **' prefix '&' cannot overflow     |     | `-DeclRefExpr 0x15a945148 <col:50> 'const void *' lvalue ParmVar 0x15a940bd8 'kbuf' 'const void *'     |     |-UnaryOperator 0x15a944ff0 <line:23:4, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | `-CXXDependentScopeMemberExpr 0x15a944fa8 <col:5, col:20> '<dependent type>' contains-errors lvalue .sdar     |     |   `-RecoveryExpr 0x15a944f80 <col:5, col:13> '<dependent type>' contains-errors lvalue     |     |     `-DeclRefExpr 0x15a944f48 <col:5> 'struct task_struct *' lvalue ParmVar 0x15a928648 'target' 'struct task_struct *'     |     |-UnaryExprOrTypeTraitExpr 0x15a945198 <col:26, col:46> 'unsigned long' sizeof 'unsigned long'     |     `-BinaryOperator 0x15a945208 <line:24:4, col:28> 'unsigned long' '*'     |       |-ImplicitCastExpr 0x15a9451f0 <col:4> 'unsigned long' <IntegralCast>     |       | `-IntegerLiteral 0x15a945040 <col:4> 'int' 2     |       `-UnaryExprOrTypeTraitExpr 0x15a9451d0 <col:8, col:28> 'unsigned long' sizeof 'unsigned long'     `-ReturnStmt 0x15a945c48 <line:40:2, col:9>       `-ImplicitCastExpr 0x15a945c30 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x15a945c10 <col:9> 'int' lvalue Var 0x15a940f10 'ret' 'int' ","20433":"`-FunctionDecl 0x11d9410d8  line:1:22 invalid dcn20_clock_source_create 'struct clock_source *(struct dc_context *, struct dc_bios *, enum clock_source_id, const struct dce110_clk_src_regs *, int)'   |-ParmVarDecl 0x11d9286e8 <line:2:2, col:21> col:21 used ctx 'struct dc_context *'   |-ParmVarDecl 0x11d940ac8 <line:3:2, col:18> col:18 used bios 'struct dc_bios *'   |-ParmVarDecl 0x11d940c48 <line:4:2, col:23> col:23 invalid id 'enum clock_source_id'   |-ParmVarDecl 0x11d940e18 <line:5:2, col:36> col:36 used regs 'const struct dce110_clk_src_regs *'   |-ParmVarDecl 0x11d940eb0 <line:6:2, col:7> col:7 invalid dp_clk_src 'int'   `-CompoundStmt 0x11d944100 <line:7:1, line:22:1>     |-DeclStmt 0x11d941580 <line:8:2, line:9:53>     | |-RecordDecl 0x11d9411a8 <line:8:2, col:9> col:9 struct dce110_clk_src     | `-VarDecl 0x11d941318 <col:2, col:25> col:25 used clk_src 'struct dce110_clk_src *'     |-IfStmt 0x11d941630 <line:11:2, line:12:10>     | |-UnaryOperator 0x11d9415d0 <line:11:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x11d9415b8 <col:7> 'struct dce110_clk_src *' <LValueToRValue>     | |   `-DeclRefExpr 0x11d941598 <col:7> 'struct dce110_clk_src *' lvalue Var 0x11d941318 'clk_src' 'struct dce110_clk_src *'     | `-ReturnStmt 0x11d941620 <line:12:3, col:10>     |   `-RecoveryExpr 0x11d941600 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x11d943f30 <line:14:2, line:18:2>     | |-CallExpr 0x11d941918 <line:14:6, line:15:29> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x11d941730 <line:14:6> 'int ()' Function 0x11d941678 'dcn20_clk_src_construct' 'int ()'     | | |-DeclRefExpr 0x11d941750 <col:30> 'struct dce110_clk_src *' lvalue Var 0x11d941318 'clk_src' 'struct dce110_clk_src *'     | | |-DeclRefExpr 0x11d941770 <col:39> 'struct dc_context *' lvalue ParmVar 0x11d9286e8 'ctx' 'struct dc_context *'     | | |-DeclRefExpr 0x11d941790 <col:44> 'struct dc_bios *' lvalue ParmVar 0x11d940ac8 'bios' 'struct dc_bios *'     | | |-RecoveryExpr 0x11d9417b0 <col:50> '<dependent type>' contains-errors lvalue     | | |-DeclRefExpr 0x11d9417d0 <line:15:4> 'const struct dce110_clk_src_regs *' lvalue ParmVar 0x11d940e18 'regs' 'const struct dce110_clk_src_regs *'     | | |-UnaryOperator 0x11d9418c8 <col:10, col:11> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | `-RecoveryExpr 0x11d9418a8 <col:11> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x11d941900 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x11d9418e0 <col:22> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x11d943f10 <col:32, line:18:2>     |   |-BinaryOperator 0x11d943e68 <line:16:3, col:30> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x11d943e00 <col:3, col:17> '<dependent type>' contains-errors lvalue .dp_clk_src     |   | | `-RecoveryExpr 0x11d9419a8 <col:3, col:12> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x11d941970 <col:3> 'struct dce110_clk_src *' lvalue Var 0x11d941318 'clk_src' 'struct dce110_clk_src *'     |   | `-RecoveryExpr 0x11d943e48 <col:30> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x11d943f00 <line:17:3, col:20>     |     `-UnaryOperator 0x11d943ee8 <col:10, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x11d943ec0 <col:11, col:20> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x11d943e88 <col:11> 'struct dce110_clk_src *' lvalue Var 0x11d941318 'clk_src' 'struct dce110_clk_src *'     |-CallExpr 0x11d944098 <line:20:2, col:20> 'int'     | `-ImplicitCastExpr 0x11d944080 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x11d944030 <col:2> 'int ()' Function 0x11d943f78 'BREAK_TO_DEBUGGER' 'int ()'     `-ReturnStmt 0x11d9440f0 <line:21:2, col:9>       `-RecoveryExpr 0x11d9440d0 <col:9> '<dependent type>' contains-errors lvalue ","20328":"`-FunctionDecl 0x142032800  line:1:12 hci_uart_set_proto 'int (struct hci_uart *, int)' static   |-ParmVarDecl 0x14201ac48 <col:31, col:48> col:48 used hu 'struct hci_uart *'   |-ParmVarDecl 0x14201acc8 <col:52, col:56> col:56 used id 'int'   `-CompoundStmt 0x142033660 <line:2:1, line:20:1>     |-DeclStmt 0x142032ae8 <line:3:2, col:32>     | |-RecordDecl 0x142032900 <col:8, col:15> col:15 struct hci_uart_proto     | `-VarDecl 0x142032a68 <col:2, col:31> col:31 used p 'const struct hci_uart_proto *'     |-DeclStmt 0x142032b80 <line:4:2, col:9>     | `-VarDecl 0x142032b18 <col:2, col:6> col:6 used err 'int'     |-BinaryOperator 0x142032dc0 <line:6:2, col:27> 'const struct hci_uart_proto *' '='     | |-DeclRefExpr 0x142032b98 <col:2> 'const struct hci_uart_proto *' lvalue Var 0x142032a68 'p' 'const struct hci_uart_proto *'     | `-ImplicitCastExpr 0x142032da8 <col:6, col:27> 'const struct hci_uart_proto *' <IntegralToPointer>     |   `-CallExpr 0x142032d68 <col:6, col:27> 'int'     |     |-ImplicitCastExpr 0x142032d50 <col:6> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x142032ce0 <col:6> 'int ()' Function 0x142032c28 'hci_uart_get_proto' 'int ()'     |     `-ImplicitCastExpr 0x142032d90 <col:25> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x142032d00 <col:25> 'int' lvalue ParmVar 0x14201acc8 'id' 'int'     |-IfStmt 0x142032ed8 <line:7:2, line:8:11>     | |-UnaryOperator 0x142032e18 <line:7:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x142032e00 <col:7> 'const struct hci_uart_proto *' <LValueToRValue>     | |   `-DeclRefExpr 0x142032de0 <col:7> 'const struct hci_uart_proto *' lvalue Var 0x142032a68 'p' 'const struct hci_uart_proto *'     | `-ReturnStmt 0x142032ec8 <line:8:3, col:11>     |   `-UnaryOperator 0x142032eb0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x142032e98 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x142032e78 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x142032f78 <line:10:2, col:14> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x142032f30 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x142032ef8 <col:2> 'struct hci_uart *' lvalue ParmVar 0x14201ac48 'hu' 'struct hci_uart *'     | `-DeclRefExpr 0x142032f58 <col:14> 'const struct hci_uart_proto *' lvalue Var 0x142032a68 'p' 'const struct hci_uart_proto *'     |-CallExpr 0x142033178 <line:11:2, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142033078 <col:2> 'int ()' Function 0x142032fc0 'set_bit' 'int ()'     | |-RecoveryExpr 0x142033158 <col:10> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x142033110 <col:32, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1420330e8 <col:33, col:37> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1420330b0 <col:33> 'struct hci_uart *' lvalue ParmVar 0x14201ac48 'hu' 'struct hci_uart *'     |-BinaryOperator 0x142033340 <line:13:2, col:32> 'int' '='     | |-DeclRefExpr 0x1420331a8 <col:2> 'int' lvalue Var 0x142032b18 'err' 'int'     | `-CallExpr 0x142033300 <col:8, col:32> 'int'     |   |-ImplicitCastExpr 0x1420332e8 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1420332a8 <col:8> 'int ()' Function 0x1420331f0 'hci_uart_register_dev' 'int ()'     |   `-ImplicitCastExpr 0x142033328 <col:30> 'struct hci_uart *' <LValueToRValue>     |     `-DeclRefExpr 0x1420332c8 <col:30> 'struct hci_uart *' lvalue ParmVar 0x14201ac48 'hu' 'struct hci_uart *'     |-IfStmt 0x142033610 <line:14:2, line:17:2>     | |-ImplicitCastExpr 0x142033380 <line:14:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x142033360 <col:6> 'int' lvalue Var 0x142032b18 'err' 'int'     | `-CompoundStmt 0x1420335f0 <col:11, line:17:2>     |   |-CallExpr 0x142033578 <line:15:3, col:45> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x142033478 <col:3> 'int ()' Function 0x1420333c0 'clear_bit' 'int ()'     |   | |-RecoveryExpr 0x142033558 <col:13> '<dependent type>' contains-errors lvalue     |   | `-UnaryOperator 0x142033510 <col:35, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x1420334e8 <col:36, col:40> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x1420334b0 <col:36> 'struct hci_uart *' lvalue ParmVar 0x14201ac48 'hu' 'struct hci_uart *'     |   `-ReturnStmt 0x1420335e0 <line:16:3, col:10>     |     `-ImplicitCastExpr 0x1420335c8 <col:10> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x1420335a8 <col:10> 'int' lvalue Var 0x142032b18 'err' 'int'     `-ReturnStmt 0x142033650 <line:19:2, col:9>       `-IntegerLiteral 0x142033630 <col:9> 'int' 0 ","20630":"`-FunctionDecl 0x14a808238  line:1:6 invalid blk_queue_flag_test_and_set 'int (unsigned int, struct request_queue *)'   |-ParmVarDecl 0x14980dcf0 <col:34, col:47> col:47 used flag 'unsigned int'   |-ParmVarDecl 0x14980e2e8 <col:53, col:75> col:75 used q 'struct request_queue *'   `-CompoundStmt 0x14a808990 <line:2:1, line:11:1>     |-DeclStmt 0x14a808370 <line:3:2, col:21>     | `-VarDecl 0x14a808308 <col:2, col:16> col:16 used flags 'unsigned long'     |-CallExpr 0x14a808580 <line:6:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a8084e0 <col:2> 'int ()' Function 0x14a808428 'spin_lock_irqsave' 'int ()'     | |-RecoveryExpr 0x14a808538 <col:20, col:23> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a808500 <col:20> 'struct request_queue *' lvalue ParmVar 0x14980e2e8 'q' 'struct request_queue *'     | `-DeclRefExpr 0x14a808560 <col:35> 'unsigned long' lvalue Var 0x14a808308 'flags' 'unsigned long'     |-CallExpr 0x14a808918 <line:8:2, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a808878 <col:2> 'int ()' Function 0x14a8087c0 'spin_unlock_irqrestore' 'int ()'     | |-RecoveryExpr 0x14a8088d0 <col:25, col:28> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a808898 <col:25> 'struct request_queue *' lvalue ParmVar 0x14980e2e8 'q' 'struct request_queue *'     | `-DeclRefExpr 0x14a8088f8 <col:40> 'unsigned long' lvalue Var 0x14a808308 'flags' 'unsigned long'     `-ReturnStmt 0x14a808980 <line:10:2, col:9>       `-RecoveryExpr 0x14a808960 <col:9> '<dependent type>' contains-errors lvalue ","20342":"`-FunctionDecl 0x130928468  line:1:14 invalid find_set 'long (int *, const char *, int, char **, int *)' static   |-ParmVarDecl 0x130928128 <col:23, col:32> col:32 invalid lib 'int *'   |-ParmVarDecl 0x1309281a8 <col:37, col:49> col:49 used x 'const char *'   |-ParmVarDecl 0x130928228 <col:52, col:59> col:59 invalid length 'int'   |-ParmVarDecl 0x1309282d8 <line:2:23, col:30> col:30 used err_pos 'char **'   |-ParmVarDecl 0x130928358 <col:39, col:45> col:45 used err_len 'int *'   `-CompoundStmt 0x130943450 <line:3:1, line:39:1>     |-DeclStmt 0x130928618 <line:4:3, col:30>     | `-VarDecl 0x130928550 <col:3, col:24> col:15 used end 'const char *' cinit     |   `-BinaryOperator 0x1309285f8 <col:20, col:24> '<dependent type>' contains-errors '+'     |     |-DeclRefExpr 0x1309285b8 <col:20> 'const char *' lvalue ParmVar 0x1309281a8 'x' 'const char *'     |     `-RecoveryExpr 0x1309285d8 <col:24> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x1309286e8 <line:5:3, col:17>     | `-VarDecl 0x130928648 <col:3, col:16> col:9 used found 'long' cinit     |   `-ImplicitCastExpr 0x1309286d0 <col:16> 'long' <IntegralCast>     |     `-IntegerLiteral 0x1309286b0 <col:16> 'int' 0     |-DeclStmt 0x130928780 <line:6:3, col:12>     | `-VarDecl 0x130928718 <col:3, col:8> col:8 used find 'int'     |-DeclStmt 0x130940ac8 <line:7:3, col:17>     | `-VarDecl 0x130940a60 <col:3, col:16> col:8 used buff 'char[255]'     |-BinaryOperator 0x130940b68 <line:9:3, col:13> 'char *' '='     | |-UnaryOperator 0x130940b18 <col:3, col:4> 'char *' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x130940b00 <col:4> 'char **' <LValueToRValue>     | |   `-DeclRefExpr 0x130940ae0 <col:4> 'char **' lvalue ParmVar 0x1309282d8 'err_pos' 'char **'     | `-ImplicitCastExpr 0x130940b50 <col:13> 'char *' <NullToPointer>     |   `-IntegerLiteral 0x130940b30 <col:13> 'int' 0     |-WhileStmt 0x130941008 <line:10:3, line:11:8>     | |-BinaryOperator 0x130940fb0 <line:10:10, col:53> 'int' contains-errors '&&'     | | |-BinaryOperator 0x130940f08 <col:10, col:16> 'int' contains-errors '>'     | | | |-ImplicitCastExpr 0x130940ed8 <col:10> 'const char *' contains-errors <LValueToRValue>     | | | | `-DeclRefExpr 0x130940b88 <col:10> 'const char *' contains-errors lvalue Var 0x130928550 'end' 'const char *'     | | | `-ImplicitCastExpr 0x130940ef0 <col:16> 'const char *' <LValueToRValue>     | | |   `-DeclRefExpr 0x130940ba8 <col:16> 'const char *' lvalue ParmVar 0x1309281a8 'x' 'const char *'     | | `-CallExpr 0x130940f80 <col:21, col:53> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x130940d70 <col:21> 'int ()' Function 0x130940cb8 'my_isspace' 'int ()'     | |   |-RecoveryExpr 0x130940f28 <col:32> '<dependent type>' contains-errors lvalue     | |   `-ArraySubscriptExpr 0x130940f60 <col:46, col:52> 'const char' contains-errors lvalue     | |     |-ImplicitCastExpr 0x130940f48 <col:46> 'const char *' contains-errors <LValueToRValue>     | |     | `-DeclRefExpr 0x130940da8 <col:46> 'const char *' contains-errors lvalue Var 0x130928550 'end' 'const char *'     | |     `-UnaryOperator 0x130940de8 <col:50, col:51> 'int' prefix '-'     | |       `-IntegerLiteral 0x130940dc8 <col:51> 'int' 1     | `-UnaryOperator 0x130940ff0 <line:11:5, col:8> 'const char *' contains-errors postfix '--'     |   `-DeclRefExpr 0x130940fd0 <col:5> 'const char *' contains-errors lvalue Var 0x130928550 'end' 'const char *'     |-BinaryOperator 0x130941098 <line:13:3, col:13> 'int' '='     | |-UnaryOperator 0x130941060 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x130941048 <col:4> 'int *' <LValueToRValue>     | |   `-DeclRefExpr 0x130941028 <col:4> 'int *' lvalue ParmVar 0x130928358 'err_len' 'int *'     | `-IntegerLiteral 0x130941078 <col:13> 'int' 0     |-IfStmt 0x1309433e8 <line:14:3, line:37:3>     | |-BinaryOperator 0x130941128 <line:14:7, col:12> 'int' contains-errors '!='     | | |-ImplicitCastExpr 0x1309410f8 <col:7> 'const char *' <LValueToRValue>     | | | `-DeclRefExpr 0x1309410b8 <col:7> 'const char *' lvalue ParmVar 0x1309281a8 'x' 'const char *'     | | `-ImplicitCastExpr 0x130941110 <col:12> 'const char *' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x1309410d8 <col:12> 'const char *' contains-errors lvalue Var 0x130928550 'end' 'const char *'     | `-CompoundStmt 0x1309433c8 <line:15:3, line:37:3>     |   |-DeclStmt 0x130941200 <line:16:5, col:25>     |   | `-VarDecl 0x130941160 <col:5, col:24> col:17 used start 'const char *' cinit     |   |   `-ImplicitCastExpr 0x1309411e8 <col:24> 'const char *' <LValueToRValue>     |   |     `-DeclRefExpr 0x1309411c8 <col:24> 'const char *' lvalue ParmVar 0x1309281a8 'x' 'const char *'     |   `-ForStmt 0x130943390 <line:17:5, line:36:5>     |     |-<<<NULL>>>     |     |-<<<NULL>>>     |     |-<<<NULL>>>     |     |-<<<NULL>>>     |     `-CompoundStmt 0x130943338 <line:18:5, line:36:5>     |       |-DeclStmt 0x1309412d0 <line:19:7, col:29>     |       | `-VarDecl 0x130941230 <col:7, col:24> col:19 used pos 'const char *' cinit     |       |   `-ImplicitCastExpr 0x1309412b8 <col:24> 'const char *' <LValueToRValue>     |       |     `-DeclRefExpr 0x130941298 <col:24> 'const char *' lvalue Var 0x130941160 'start' 'const char *'     |       |-DeclStmt 0x130941368 <line:20:7, col:19>     |       | `-VarDecl 0x130941300 <col:7, col:12> col:12 used var_len 'int'     |       |-ForStmt 0x130941528 <line:22:7, col:48>     |       | |-<<<NULL>>>     |       | |-<<<NULL>>>     |       | |-BinaryOperator 0x1309414c8 <col:14, col:36> 'int' contains-errors '&&'     |       | | |-BinaryOperator 0x1309413f0 <col:14, col:21> 'int' contains-errors '!='     |       | | | |-ImplicitCastExpr 0x1309413c0 <col:14> 'const char *' <LValueToRValue>     |       | | | | `-DeclRefExpr 0x130941380 <col:14> 'const char *' lvalue Var 0x130941230 'pos' 'const char *'     |       | | | `-ImplicitCastExpr 0x1309413d8 <col:21> 'const char *' contains-errors <LValueToRValue>     |       | | |   `-DeclRefExpr 0x1309413a0 <col:21> 'const char *' contains-errors lvalue Var 0x130928550 'end' 'const char *'     |       | | `-BinaryOperator 0x1309414a8 <col:28, col:36> 'int' '!='     |       | |   |-ImplicitCastExpr 0x130941490 <col:28, col:29> 'int' <IntegralCast>     |       | |   | `-ImplicitCastExpr 0x130941478 <col:28, col:29> 'char' <LValueToRValue>     |       | |   |   `-UnaryOperator 0x130941448 <col:28, col:29> 'const char' lvalue prefix '*' cannot overflow     |       | |   |     `-ImplicitCastExpr 0x130941430 <col:29> 'const char *' <LValueToRValue>     |       | |   |       `-DeclRefExpr 0x130941410 <col:29> 'const char *' lvalue Var 0x130941230 'pos' 'const char *'     |       | |   `-CharacterLiteral 0x130941460 <col:36> 'int' 44     |       | |-UnaryOperator 0x130941508 <col:41, col:44> 'const char *' postfix '++'     |       | | `-DeclRefExpr 0x1309414e8 <col:41> 'const char *' lvalue Var 0x130941230 'pos' 'const char *'     |       | `-NullStmt 0x130941520 <col:48>     |       |-BinaryOperator 0x1309416b8 <line:23:7, col:35> 'int' contains-errors '='     |       | |-DeclRefExpr 0x130941560 <col:7> 'int' lvalue Var 0x130941300 'var_len' 'int'     |       | `-RecoveryExpr 0x130941688 <col:16, col:35> '<dependent type>' contains-errors lvalue     |       |   |-ParenExpr 0x1309415d8 <col:16, col:21> '<overloaded function type>' lvalue     |       |   | `-UnresolvedLookupExpr 0x130941598 <col:17> '<overloaded function type>' lvalue (no ADL) = 'uint' empty     |       |   `-BinaryOperator 0x130941668 <col:24, col:30> 'long' '-'     |       |     |-ImplicitCastExpr 0x130941638 <col:24> 'const char *' <LValueToRValue>     |       |     | `-DeclRefExpr 0x1309415f8 <col:24> 'const char *' lvalue Var 0x130941230 'pos' 'const char *'     |       |     `-ImplicitCastExpr 0x130941650 <col:30> 'const char *' <LValueToRValue>     |       |       `-DeclRefExpr 0x130941618 <col:30> 'const char *' lvalue Var 0x130941160 'start' 'const char *'     |       |-CallExpr 0x130942ca8 <line:24:7, col:61> 'int'     |       | |-ImplicitCastExpr 0x130942c90 <col:7> 'int (*)()' <FunctionToPointerDecay>     |       | | `-DeclRefExpr 0x1309417b8 <col:7> 'int ()' Function 0x130941700 'strmake' 'int ()'     |       | |-ImplicitCastExpr 0x130942ce0 <col:15> 'char *' <ArrayToPointerDecay>     |       | | `-DeclRefExpr 0x1309417d8 <col:15> 'char[255]' lvalue Var 0x130940a60 'buff' 'char[255]'     |       | |-ImplicitCastExpr 0x130942cf8 <col:21> 'const char *' <LValueToRValue>     |       | | `-DeclRefExpr 0x1309417f8 <col:21> 'const char *' lvalue Var 0x130941160 'start' 'const char *'     |       | `-CallExpr 0x130942c48 <col:28, col:60> 'int'     |       |   |-ImplicitCastExpr 0x130942c30 <col:28> 'int (*)()' <FunctionToPointerDecay>     |       |   | `-DeclRefExpr 0x1309418f8 <col:28> 'int ()' Function 0x130941840 'MY_MIN' 'int ()'     |       |   |-BinaryOperator 0x1309419b0 <col:35, col:50> 'unsigned long' '-'     |       |   | |-UnaryExprOrTypeTraitExpr 0x130941958 <col:35, col:46> 'unsigned long' sizeof     |       |   | | `-ParenExpr 0x130941938 <col:41, col:46> 'char[255]' lvalue     |       |   | |   `-DeclRefExpr 0x130941918 <col:42> 'char[255]' lvalue Var 0x130940a60 'buff' 'char[255]' non_odr_use_unevaluated     |       |   | `-ImplicitCastExpr 0x130941998 <col:50> 'unsigned long' <IntegralCast>     |       |   |   `-IntegerLiteral 0x130941978 <col:50> 'int' 1     |       |   `-ImplicitCastExpr 0x130942c78 <col:53> 'int' <LValueToRValue>     |       |     `-DeclRefExpr 0x1309419d0 <col:53> 'int' lvalue Var 0x130941300 'var_len' 'int'     |       |-BinaryOperator 0x130942f38 <line:25:7, col:49> 'int' contains-errors '='     |       | |-DeclRefExpr 0x130942d10 <col:7> 'int' lvalue Var 0x130928718 'find' 'int'     |       | `-CallExpr 0x130942f00 <col:13, col:49> '<dependent type>' contains-errors     |       |   |-DeclRefExpr 0x130942e10 <col:13> 'int ()' Function 0x130942d58 'find_type' 'int ()'     |       |   |-DeclRefExpr 0x130942e30 <col:23> 'char[255]' lvalue Var 0x130940a60 'buff' 'char[255]'     |       |   |-RecoveryExpr 0x130942e50 <col:29> '<dependent type>' contains-errors lvalue     |       |   `-RecoveryExpr 0x130942ee0 <col:34> '<dependent type>' contains-errors lvalue     |       |-IfStmt 0x130943198 <line:26:7, line:32:9> has_else     |       | |-UnaryOperator 0x130942f90 <line:26:11, col:12> 'int' prefix '!' cannot overflow     |       | | `-ImplicitCastExpr 0x130942f78 <col:12> 'int' <LValueToRValue>     |       | |   `-DeclRefExpr 0x130942f58 <col:12> 'int' lvalue Var 0x130928718 'find' 'int'     |       | |-CompoundStmt 0x130943138 <line:27:7, line:30:7>     |       | | |-BinaryOperator 0x130943070 <line:28:9, col:27> 'char *' '='     |       | | | |-UnaryOperator 0x130942fe0 <col:9, col:10> 'char *' lvalue prefix '*' cannot overflow     |       | | | | `-ImplicitCastExpr 0x130942fc8 <col:10> 'char **' <LValueToRValue>     |       | | | |   `-DeclRefExpr 0x130942fa8 <col:10> 'char **' lvalue ParmVar 0x1309282d8 'err_pos' 'char **'     |       | | | `-CStyleCastExpr 0x130943048 <col:19, col:27> 'char *' <NoOp>     |       | | |   `-ImplicitCastExpr 0x130943030 <col:27> 'const char *' <LValueToRValue> part_of_explicit_cast     |       | | |     `-DeclRefExpr 0x130942ff8 <col:27> 'const char *' lvalue Var 0x130941160 'start' 'const char *'     |       | | `-BinaryOperator 0x130943118 <line:29:9, col:19> 'int' '='     |       | |   |-UnaryOperator 0x1309430c8 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow     |       | |   | `-ImplicitCastExpr 0x1309430b0 <col:10> 'int *' <LValueToRValue>     |       | |   |   `-DeclRefExpr 0x130943090 <col:10> 'int *' lvalue ParmVar 0x130928358 'err_len' 'int *'     |       | |   `-ImplicitCastExpr 0x130943100 <col:19> 'int' <LValueToRValue>     |       | |     `-DeclRefExpr 0x1309430e0 <col:19> 'int' lvalue Var 0x130941300 'var_len' 'int'     |       | `-NullStmt 0x130943190 <line:32:9>     |       |-IfStmt 0x130943260 <line:33:7, line:34:9>     |       | |-BinaryOperator 0x130943238 <line:33:11, col:18> 'int' contains-errors '=='     |       | | |-ImplicitCastExpr 0x130943208 <col:11> 'const char *' <LValueToRValue>     |       | | | `-DeclRefExpr 0x1309431c8 <col:11> 'const char *' lvalue Var 0x130941230 'pos' 'const char *'     |       | | `-ImplicitCastExpr 0x130943220 <col:18> 'const char *' contains-errors <LValueToRValue>     |       | |   `-DeclRefExpr 0x1309431e8 <col:18> 'const char *' contains-errors lvalue Var 0x130928550 'end' 'const char *'     |       | `-BreakStmt 0x130943258 <line:34:9>     |       `-BinaryOperator 0x130943318 <line:35:7, col:20> 'const char *' '='     |         |-DeclRefExpr 0x130943280 <col:7> 'const char *' lvalue Var 0x130941160 'start' 'const char *'     |         `-BinaryOperator 0x1309432f8 <col:14, col:20> 'const char *' '+'     |           |-ImplicitCastExpr 0x1309432e0 <col:14> 'const char *' <LValueToRValue>     |           | `-DeclRefExpr 0x1309432a0 <col:14> 'const char *' lvalue Var 0x130941230 'pos' 'const char *'     |           `-IntegerLiteral 0x1309432c0 <col:20> 'int' 1     `-ReturnStmt 0x130943440 <line:38:3, col:10>       `-ImplicitCastExpr 0x130943428 <col:10> 'long' <LValueToRValue>         `-DeclRefExpr 0x130943408 <col:10> 'long' lvalue Var 0x130928648 'found' 'long' ","20848":"`-FunctionDecl 0x14800a000  col:14 implicit used isdigit 'int (int)' extern   |-ParmVarDecl 0x14800a100 <<invalid sloc>> <invalid sloc> 'int'   |-BuiltinAttr 0x14800a0a8 <<invalid sloc>> Implicit 924   |-NoThrowAttr 0x14800a170 <col:14> Implicit   `-PureAttr 0x14800a198 <col:14> Implicit ","20490":"`-FunctionDecl 0x13900ddc8  line:1:13 invalid SocketIsDead 'int (int)' static   |-ParmVarDecl 0x13900dcf0 <col:26, col:40> col:40 invalid sock 'int'   `-CompoundStmt 0x13900e218 <line:2:1, line:12:1>     |-DeclStmt 0x13900def8 <line:3:3, col:11>     | `-VarDecl 0x13900de90 <col:3, col:7> col:7 used sval 'int'     |-BinaryOperator 0x13900e120 <line:6:3, col:33> 'int' contains-errors '='     | |-DeclRefExpr 0x13900df10 <col:3> 'int' lvalue Var 0x13900de90 'sval' 'int'     | `-CallExpr 0x13900e0f0 <col:10, col:33> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13900e090 <col:10> 'int ()' Function 0x13900dfd8 'SOCKET_READABLE' 'int ()'     |   |-RecoveryExpr 0x13900e0b0 <col:26> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x13900e0d0 <col:32> 'int' 0     `-ReturnStmt 0x13900e208 <line:11:3, col:10>       `-RecoveryExpr 0x13900e1e8 <col:10> '<dependent type>' contains-errors lvalue ","20292":"`-FunctionDecl 0x134924298  col:3 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x134924398 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x134924400 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x134924468 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x134924340 <<invalid sloc>> Implicit 900 ","20294":"`-FunctionDecl 0x123826d08  line:1:12 nft_setelem_parse_data 'int (struct nft_ctx *, struct nft_set *, struct nft_data_desc *, struct nft_data *, struct nlattr *)' static   |-ParmVarDecl 0x12380e248 <col:35, col:51> col:51 used ctx 'struct nft_ctx *'   |-ParmVarDecl 0x123826628 <col:56, col:72> col:72 used set 'struct nft_set *'   |-ParmVarDecl 0x1238267f8 <line:2:7, col:29> col:29 used desc 'struct nft_data_desc *'   |-ParmVarDecl 0x1238269c8 <line:3:7, col:24> col:24 used data 'struct nft_data *'   |-ParmVarDecl 0x123826b98 <line:4:7, col:22> col:22 used attr 'struct nlattr *'   `-CompoundStmt 0x123828b48 <line:5:1, line:18:1>     |-DeclStmt 0x123826ea0 <line:6:2, col:9>     | `-VarDecl 0x123826e38 <col:2, col:6> col:6 used err 'int'     |-BinaryOperator 0x123827188 <line:8:2, col:66> 'int' contains-errors '='     | |-DeclRefExpr 0x123826eb8 <col:2> 'int' lvalue Var 0x123826e38 'err' 'int'     | `-CallExpr 0x123827140 <col:8, col:66> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x123827000 <col:8> 'int ()' Function 0x123826f48 'nft_data_init' 'int ()'     |   |-DeclRefExpr 0x123827020 <col:22> 'struct nft_ctx *' lvalue ParmVar 0x12380e248 'ctx' 'struct nft_ctx *'     |   |-DeclRefExpr 0x123827040 <col:27> 'struct nft_data *' lvalue ParmVar 0x1238269c8 'data' 'struct nft_data *'     |   |-RecoveryExpr 0x123827120 <col:33> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x123827078 <col:56> 'struct nft_data_desc *' lvalue ParmVar 0x1238267f8 'desc' 'struct nft_data_desc *'     |   `-DeclRefExpr 0x123827098 <col:62> 'struct nlattr *' lvalue ParmVar 0x123826b98 'attr' 'struct nlattr *'     |-IfStmt 0x123827268 <line:9:2, line:10:10>     | |-BinaryOperator 0x123827200 <line:9:6, col:12> 'int' '<'     | | |-ImplicitCastExpr 0x1238271e8 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x1238271a8 <col:6> 'int' lvalue Var 0x123826e38 'err' 'int'     | | `-IntegerLiteral 0x1238271c8 <col:12> 'int' 0     | `-ReturnStmt 0x123827258 <line:10:3, col:10>     |   `-ImplicitCastExpr 0x123827240 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x123827220 <col:10> 'int' lvalue Var 0x123826e38 'err' 'int'     |-IfStmt 0x123828af8 <line:12:2, line:15:2>     | |-BinaryOperator 0x123827460 <line:12:6, col:58> 'int' contains-errors '&&'     | | |-BinaryOperator 0x123827440 <col:6, col:20> 'int' contains-errors '!='     | | | |-RecoveryExpr 0x1238272c0 <col:6, col:12> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x123827288 <col:6> 'struct nft_data_desc *' lvalue ParmVar 0x1238267f8 'desc' 'struct nft_data_desc *'     | | | `-RecoveryExpr 0x123827420 <col:20> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x1238273e0 <col:40, col:58> 'int' contains-errors '!='     | |   |-RecoveryExpr 0x123827358 <col:40, col:46> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x123827320 <col:40> 'struct nft_data_desc *' lvalue ParmVar 0x1238267f8 'desc' 'struct nft_data_desc *'     | |   `-RecoveryExpr 0x1238273b8 <col:53, col:58> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x123827380 <col:53> 'struct nft_set *' lvalue ParmVar 0x123826628 'set' 'struct nft_set *'     | `-CompoundStmt 0x123828ad8 <col:64, line:15:2>     |   |-CallExpr 0x123828a00 <line:13:3, col:36> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x123827560 <col:3> 'int ()' Function 0x1238274a8 'nft_data_release' 'int ()'     |   | |-DeclRefExpr 0x123827580 <col:20> 'struct nft_data *' lvalue ParmVar 0x1238269c8 'data' 'struct nft_data *'     |   | `-RecoveryExpr 0x1238275d8 <col:26, col:32> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x1238275a0 <col:26> 'struct nft_data_desc *' lvalue ParmVar 0x1238267f8 'desc' 'struct nft_data_desc *'     |   `-ReturnStmt 0x123828ac8 <line:14:3, col:11>     |     `-UnaryOperator 0x123828ab0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x123828a98 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x123828a78 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x123828b38 <line:17:2, col:9>       `-IntegerLiteral 0x123828b18 <col:9> 'int' 0 ","20740":"`-FunctionDecl 0x142122600  line:1:15 invalid srs 'int (int, int *)' static   |-ParmVarDecl 0x14280e1f0 <col:19, col:32> col:32 referenced invalid j 'int'   |-ParmVarDecl 0x14280e2a8 <col:37, col:46> col:46 referenced invalid ptr 'int *'   `-CompoundStmt 0x142122d70 <line:2:1, line:15:1>     |-BinaryOperator 0x1421227e8 <line:3:2, col:18> '<dependent type>' contains-errors ','     | |-UnaryExprOrTypeTraitExpr 0x142122788 <col:2, col:9> 'unsigned long' contains-errors sizeof     | | `-RecoveryExpr 0x142122768 <col:9> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x1421227c8 <col:12, col:18> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x1421227a8 <col:12> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x142122708 <col:18> 'int' 0     |-WhileStmt 0x142122d08 <line:5:2, line:13:2>     | |-CXXDependentScopeMemberExpr 0x142122828 <line:5:8, col:11> '<dependent type>' contains-errors lvalue ->jobj     | | `-RecoveryExpr 0x142122808 <col:8> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x142122ce0 <col:17, line:13:2>     |   |-IfStmt 0x142122b28 <line:7:3, line:8:11>     |   | |-UnaryOperator 0x142122ae0 <line:7:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | | `-ImplicitCastExpr 0x142122ac8 <col:8> '<dependent type>' contains-errors <LValueToRValue>     |   | |   `-RecoveryExpr 0x142122aa8 <col:8> '<dependent type>' contains-errors lvalue     |   | `-ReturnStmt 0x142122b18 <line:8:4, col:11>     |   |   `-IntegerLiteral 0x142122af8 <col:11> 'int' 0     |   |-IfStmt 0x142122c60 <line:10:3, line:11:11>     |   | |-RecoveryExpr 0x142122b60 <line:10:7> '<dependent type>' contains-errors lvalue     |   | `-CompoundAssignOperator 0x142122c30 <line:11:4, col:11> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |   |-RecoveryExpr 0x142122ba0 <col:4> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x142122b80 <col:4> 'int *' lvalue ParmVar 0x14280e2a8 'ptr' 'int *'     |   |   `-RecoveryExpr 0x142122c10 <col:11> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x142122cc8 <line:12:3, col:4> '<dependent type>' contains-errors postfix '++' cannot overflow     |     `-RecoveryExpr 0x142122ca0 <col:3> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x142122c80 <col:3> 'int' lvalue ParmVar 0x14280e1f0 'j' 'int'     `-ReturnStmt 0x142122d60 <line:14:2, col:9>       `-RecoveryExpr 0x142122d40 <col:9> '<dependent type>' contains-errors lvalue ","20375":"`-FunctionDecl 0x13a928198  line:1:1 test_bson_append_utf8 'int (void)'   `-CompoundStmt 0x13b008780 <line:2:1, line:12:1>     |-CallExpr 0x13b008358 <line:8:4, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13a928708 <col:4> 'int ()' Function 0x13a928650 'BSON_ASSERT' 'int ()'     | `-CallExpr 0x13b008320 <col:17, col:47> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13b008210 <col:17> 'int ()' Function 0x13a928750 'bson_append_utf8' 'int ()'     |   |-RecoveryExpr 0x13b008300 <col:35> '<dependent type>' contains-errors lvalue     |   |-StringLiteral 0x13b008248 <col:38> 'char[4]' lvalue \"STR\"     |   `-UnaryOperator 0x13b008288 <col:45, col:46> 'int' prefix '-'     |     `-IntegerLiteral 0x13b008268 <col:46> 'int' 1     |-CallExpr 0x13b008520 <line:9:4, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13b008460 <col:4> 'int ()' Function 0x13b0083a8 'BSON_ASSERT_BSON_EQUAL' 'int ()'     | |-RecoveryExpr 0x13b0084e0 <col:28> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x13b008500 <col:31> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13b0086b0 <line:10:4, col:19> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13b008630 <col:4> 'int ()' Function 0x13b008578 'bson_destroy' 'int ()'     | `-RecoveryExpr 0x13b008690 <col:18> '<dependent type>' contains-errors lvalue     `-CallExpr 0x13b008758 <line:11:4, col:20> '<dependent type>' contains-errors       |-DeclRefExpr 0x13b0086d8 <col:4> 'int ()' Function 0x13b008578 'bson_destroy' 'int ()'       `-RecoveryExpr 0x13b008738 <col:18> '<dependent type>' contains-errors lvalue ","20892":"`-FunctionDecl 0x15c80dda8  line:1:5 ber_skip_contextual_tag 'int (int)'   |-ParmVarDecl 0x15c80dcd8 <col:29, col:33> col:33 used length 'int'   `-CompoundStmt 0x15c80e0e8 <line:2:1, line:4:1>     `-ReturnStmt 0x15c80e0d8 <line:3:2, col:36>       `-BinaryOperator 0x15c80e0b8 <col:9, col:36> 'int' '+'         |-CallExpr 0x15c80e058 <col:9, col:32> 'int'         | |-ImplicitCastExpr 0x15c80e040 <col:9> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x15c80dfd0 <col:9> 'int ()' Function 0x15c80df18 '_ber_skip_length' 'int ()'         | `-ImplicitCastExpr 0x15c80e080 <col:26> 'int' <LValueToRValue>         |   `-DeclRefExpr 0x15c80dff0 <col:26> 'int' lvalue ParmVar 0x15c80dcd8 'length' 'int'         `-IntegerLiteral 0x15c80e098 <col:36> 'int' 1 ","20232":"`-FunctionDecl 0x1539281f8  line:1:15 invalid zap_white 'int *(int *)' static   |-ParmVarDecl 0x153928128 <col:25, col:32> col:32 referenced invalid x 'int *'   `-CompoundStmt 0x153928668 <line:2:1, line:7:1>     |-WhileStmt 0x153928618 <line:3:5, line:4:27>     | |-CallExpr 0x153928440 <line:3:12, col:23> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x153928400 <col:12> 'int ()' Function 0x153928348 'tok_white' 'int ()'     | | `-RecoveryExpr 0x153928420 <col:22> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x1539285f8 <line:4:9, col:27> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x153928488 <col:9> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x153928468 <col:9> 'int *' lvalue ParmVar 0x153928128 'x' 'int *'     |   `-CallExpr 0x1539285d0 <col:13, col:27> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x153928590 <col:13> 'int ()' Function 0x1539284d8 'delete_Token' 'int ()'     |     `-RecoveryExpr 0x1539285b0 <col:26> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x153928658 <line:6:5, col:12>       `-RecoveryExpr 0x153928638 <col:12> '<dependent type>' contains-errors lvalue ","20302":"`-FunctionDecl 0x137928288  line:1:12 invalid mif_hdr_growcmpts 'int (int *, int)' static   |-ParmVarDecl 0x137928128 <col:30, col:41> col:41 referenced invalid hdr 'int *'   |-ParmVarDecl 0x1379281a8 <col:46, col:50> col:50 used maxcmpts 'int'   `-CompoundStmt 0x1379420e8 <line:2:1, line:17:1>     |-DeclStmt 0x1379283c0 <line:3:2, col:12>     | `-VarDecl 0x137928358 <col:2, col:6> col:6 used cmptno 'int'     |-CallExpr 0x137928678 <line:5:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1379285b0 <col:2> 'int ()' Function 0x1379284f8 'assert' 'int ()'     | `-BinaryOperator 0x137928658 <col:9, col:26> 'int' contains-errors '>='     |   |-DeclRefExpr 0x1379285d0 <col:9> 'int' lvalue ParmVar 0x1379281a8 'maxcmpts' 'int'     |   `-CXXDependentScopeMemberExpr 0x137928610 <col:21, col:26> '<dependent type>' contains-errors lvalue ->numcmpts     |     `-RecoveryExpr 0x1379285f0 <col:21> '<dependent type>' contains-errors lvalue     |-IfStmt 0x137941ba8 <line:8:2, line:10:2>     | |-UnaryOperator 0x137941b30 <line:8:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x137941b18 <col:7> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x137941af8 <col:7> 'int' lvalue ParmVar 0x1379281a8 'maxcmpts' 'int'     | `-CompoundStmt 0x137941b90 <col:17, line:10:2>     |   `-ReturnStmt 0x137941b80 <line:9:3, col:11>     |     `-UnaryOperator 0x137941b68 <col:10, col:11> 'int' prefix '-'     |       `-IntegerLiteral 0x137941b48 <col:11> 'int' 1     |-BinaryOperator 0x137941c78 <line:11:2, col:18> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x137941c10 <col:2, col:7> '<dependent type>' contains-errors lvalue ->maxcmpts     | | `-RecoveryExpr 0x137941be8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x137941bc8 <col:2> 'int *' lvalue ParmVar 0x137928128 'hdr' 'int *'     | `-DeclRefExpr 0x137941c58 <col:18> 'int' lvalue ParmVar 0x1379281a8 'maxcmpts' 'int'     |-BinaryOperator 0x137941d80 <line:12:2, col:15> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x137941ce0 <col:2, col:7> '<dependent type>' contains-errors lvalue ->cmpts     | | `-RecoveryExpr 0x137941cb8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x137941c98 <col:2> 'int *' lvalue ParmVar 0x137928128 'hdr' 'int *'     | `-DeclRefExpr 0x137941d60 <col:15> 'int' lvalue ParmVar 0x1379281a8 'maxcmpts' 'int'     |-ForStmt 0x137942080 <line:13:2, line:15:2>     | |-BinaryOperator 0x137941e28 <line:13:7, col:21> 'int' contains-errors '='     | | |-DeclRefExpr 0x137941da0 <col:7> 'int' lvalue Var 0x137928358 'cmptno' 'int'     | | `-CXXDependentScopeMemberExpr 0x137941de0 <col:16, col:21> '<dependent type>' contains-errors lvalue ->numcmpts     | |   `-RecoveryExpr 0x137941dc0 <col:16> '<dependent type>' contains-errors lvalue     | |-<<<NULL>>>     | |-BinaryOperator 0x137941ed0 <col:31, col:45> 'int' contains-errors '<'     | | |-DeclRefExpr 0x137941e48 <col:31> 'int' lvalue Var 0x137928358 'cmptno' 'int'     | | `-CXXDependentScopeMemberExpr 0x137941e88 <col:40, col:45> '<dependent type>' contains-errors lvalue ->maxcmpts     | |   `-RecoveryExpr 0x137941e68 <col:40> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x137941f10 <col:55, col:57> 'int' prefix '++'     | | `-DeclRefExpr 0x137941ef0 <col:57> 'int' lvalue Var 0x137928358 'cmptno' 'int'     | `-CompoundStmt 0x137942068 <col:65, line:15:2>     |   `-BinaryOperator 0x137942048 <line:14:3, col:24> '<dependent type>' contains-errors '='     |     |-ArraySubscriptExpr 0x137942008 <col:3, col:20> '<dependent type>' contains-errors lvalue     |     | |-ImplicitCastExpr 0x137941fd8 <col:3, col:8> '<dependent type>' contains-errors <LValueToRValue>     |     | | `-CXXDependentScopeMemberExpr 0x137941f70 <col:3, col:8> '<dependent type>' contains-errors lvalue ->cmpts     |     | |   `-RecoveryExpr 0x137941f48 <col:3> '<dependent type>' contains-errors lvalue     |     | |     `-DeclRefExpr 0x137941f28 <col:3> 'int *' lvalue ParmVar 0x137928128 'hdr' 'int *'     |     | `-ImplicitCastExpr 0x137941ff0 <col:14> 'int' <LValueToRValue>     |     |   `-DeclRefExpr 0x137941fb8 <col:14> 'int' lvalue Var 0x137928358 'cmptno' 'int'     |     `-IntegerLiteral 0x137942028 <col:24> 'int' 0     `-ReturnStmt 0x1379420d8 <line:16:2, col:9>       `-IntegerLiteral 0x1379420b8 <col:9> 'int' 0 ","20395":"`-FunctionDecl 0x12b1281a8  line:1:19 invalid kvm_read_gs 'int (void)' static inline   `-CompoundStmt 0x12b1282f8 <line:2:1, line:6:1>     `-ReturnStmt 0x12b1282e8 <line:5:2, col:9>       `-RecoveryExpr 0x12b1282c8 <col:9> '<dependent type>' contains-errors lvalue ","20215":"`-FunctionDecl 0x14c122600  line:1:12 sctp_setsockopt_auth_key 'int (struct sock *, char)' static   |-ParmVarDecl 0x14c80e248 <col:37, col:50> col:50 used sk 'struct sock *'   |-ParmVarDecl 0x14c80e2c0 <line:2:9, col:14> col:14 __user 'char'   `-CompoundStmt 0x14c827788 <line:4:1, line:39:1>     |-DeclStmt 0x14c1228e8 <line:5:2, col:30>     | |-RecordDecl 0x14c122700 <col:2, col:9> col:9 struct sctp_authkey     | `-VarDecl 0x14c122868 <col:2, col:23> col:23 used authkey 'struct sctp_authkey *'     |-DeclStmt 0x14c122ae8 <line:6:2, col:31>     | |-RecordDecl 0x14c122900 <col:2, col:9> col:9 struct sctp_association     | `-VarDecl 0x14c122a68 <col:2, col:27> col:27 used asoc 'struct sctp_association *'     |-DeclStmt 0x14c122b80 <line:7:2, col:9>     | `-VarDecl 0x14c122b18 <col:2, col:6> col:6 used ret 'int'     |-IfStmt 0x14c122cf0 <line:9:2, line:10:11>     | |-UnaryOperator 0x14c122c30 <line:9:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14c122c18 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x14c122bf8 <col:7> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14c122ce0 <line:10:3, col:11>     |   `-UnaryOperator 0x14c122cc8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14c122cb0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14c122c90 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14c122e48 <line:12:2, line:13:11>     | |-RecoveryExpr 0x14c122d80 <line:12:6, col:42> '_Bool' contains-errors     | `-ReturnStmt 0x14c122e38 <line:13:3, col:11>     |   `-UnaryOperator 0x14c122e20 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14c122e08 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14c122de8 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14c1230b0 <line:15:2, col:38> 'struct sctp_authkey *' contains-errors '='     | |-DeclRefExpr 0x14c122e68 <col:2> 'struct sctp_authkey *' lvalue Var 0x14c122868 'authkey' 'struct sctp_authkey *'     | `-CallExpr 0x14c123080 <col:12, col:38> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14c122fa0 <col:12> 'int ()' Function 0x14c122ee8 'kmalloc' 'int ()'     |   |-RecoveryExpr 0x14c123040 <col:20> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x14c123060 <col:28> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14c1231c8 <line:16:2, line:17:11>     | |-UnaryOperator 0x14c123108 <line:16:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14c1230f0 <col:7> 'struct sctp_authkey *' <LValueToRValue>     | |   `-DeclRefExpr 0x14c1230d0 <col:7> 'struct sctp_authkey *' lvalue Var 0x14c122868 'authkey' 'struct sctp_authkey *'     | `-ReturnStmt 0x14c1231b8 <line:17:3, col:11>     |   `-UnaryOperator 0x14c1231a0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14c123188 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14c123168 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14c123568 <line:19:2, line:22:2>     | |-CallExpr 0x14c1233b0 <line:19:6, col:44> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14c1232c8 <col:6> 'int ()' Function 0x14c123210 'copy_from_user' 'int ()'     | | |-DeclRefExpr 0x14c1232e8 <col:21> 'struct sctp_authkey *' lvalue Var 0x14c122868 'authkey' 'struct sctp_authkey *'     | | |-RecoveryExpr 0x14c123370 <col:30> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14c123390 <col:38> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14c123548 <col:47, line:22:2>     |   |-BinaryOperator 0x14c1234c0 <line:20:3, col:10> 'int' contains-errors '='     |   | |-DeclRefExpr 0x14c1233e8 <col:3> 'int' lvalue Var 0x14c122b18 'ret' 'int'     |   | `-UnaryOperator 0x14c1234a8 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x14c123490 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x14c123470 <col:10> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x14c123530 <line:21:3, col:8> 'out' 0x14c1234e0     |-IfStmt 0x14c826d90 <line:24:2, line:27:2>     | |-BinaryOperator 0x14c826c40 <line:24:6, col:31> 'int' contains-errors '>'     | | |-RecoveryExpr 0x14c1235c0 <col:6, col:15> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x14c123588 <col:6> 'struct sctp_authkey *' lvalue Var 0x14c122868 'authkey' 'struct sctp_authkey *'     | | `-RecoveryExpr 0x14c826c20 <col:31> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14c826d70 <col:39, line:27:2>     |   |-BinaryOperator 0x14c826d38 <line:25:3, col:10> 'int' contains-errors '='     |   | |-DeclRefExpr 0x14c826c60 <col:3> 'int' lvalue Var 0x14c122b18 'ret' 'int'     |   | `-UnaryOperator 0x14c826d20 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x14c826d08 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x14c826ce8 <col:10> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x14c826d58 <line:26:3, col:8> 'out' 0x14c1234e0     |-BinaryOperator 0x14c826f80 <line:29:2, col:48> 'struct sctp_association *' contains-errors '='     | |-DeclRefExpr 0x14c826db0 <col:2> 'struct sctp_association *' lvalue Var 0x14c122a68 'asoc' 'struct sctp_association *'     | `-CallExpr 0x14c826f50 <col:9, col:48> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14c826eb0 <col:9> 'int ()' Function 0x14c826df8 'sctp_id2assoc' 'int ()'     |   |-DeclRefExpr 0x14c826ed0 <col:23> 'struct sock *' lvalue ParmVar 0x14c80e248 'sk' 'struct sock *'     |   `-RecoveryExpr 0x14c826f28 <col:27, col:36> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14c826ef0 <col:27> 'struct sctp_authkey *' lvalue Var 0x14c122868 'authkey' 'struct sctp_authkey *'     |-IfStmt 0x14c827200 <line:30:2, line:33:2>     | |-RecoveryExpr 0x14c827190 <line:30:6, col:58> '_Bool' contains-errors     | `-CompoundStmt 0x14c8271e8 <col:61, line:33:2>     |   `-GotoStmt 0x14c8271d0 <line:32:3, col:8> 'out' 0x14c1234e0     |-BinaryOperator 0x14c827588 <line:35:2, col:56> 'int' contains-errors '='     | |-DeclRefExpr 0x14c827220 <col:2> 'int' lvalue Var 0x14c122b18 'ret' 'int'     | `-CallExpr 0x14c827550 <col:8, col:56> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14c827320 <col:8> 'int ()' Function 0x14c827268 'sctp_auth_set_key' 'int ()'     |   |-RecoveryExpr 0x14c8274e8 <col:26, col:39> '<dependent type>' contains-errors lvalue     |   | `-CallExpr 0x14c8274a8 <col:26, col:36> 'int'     |   |   |-ImplicitCastExpr 0x14c827490 <col:26> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x14c827420 <col:26> 'int ()' Function 0x14c827368 'sctp_sk' 'int ()'     |   |   `-ImplicitCastExpr 0x14c8274d0 <col:34> 'struct sock *' <LValueToRValue>     |   |     `-DeclRefExpr 0x14c827440 <col:34> 'struct sock *' lvalue ParmVar 0x14c80e248 'sk' 'struct sock *'     |   |-DeclRefExpr 0x14c827510 <col:43> 'struct sctp_association *' lvalue Var 0x14c122a68 'asoc' 'struct sctp_association *'     |   `-DeclRefExpr 0x14c827530 <col:49> 'struct sctp_authkey *' lvalue Var 0x14c122868 'authkey' 'struct sctp_authkey *'     |-LabelStmt 0x14c827720 <line:36:1, line:37:15> 'out'     | `-CallExpr 0x14c8276e0 <col:2, col:15> 'int'     |   |-ImplicitCastExpr 0x14c8276c8 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14c827688 <col:2> 'int ()' Function 0x14c8275d0 'kfree' 'int ()'     |   `-ImplicitCastExpr 0x14c827708 <col:8> 'struct sctp_authkey *' <LValueToRValue>     |     `-DeclRefExpr 0x14c8276a8 <col:8> 'struct sctp_authkey *' lvalue Var 0x14c122868 'authkey' 'struct sctp_authkey *'     `-ReturnStmt 0x14c827778 <line:38:2, col:9>       `-ImplicitCastExpr 0x14c827760 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x14c827740 <col:9> 'int' lvalue Var 0x14c122b18 'ret' 'int' ","20298":"`-FunctionDecl 0x14b80dda8  line:1:12 php_session_destroy 'int (int)' static   |-ParmVarDecl 0x14b80dcd8 <col:32> col:32 used TSRMLS_D 'int'   `-CompoundStmt 0x14b828008 <line:2:1, line:19:1>     |-DeclStmt 0x14b80df70 <line:3:2, col:22>     | `-VarDecl 0x14b80deb8 <col:2, col:15> col:6 used retval 'int' cinit     |   `-RecoveryExpr 0x14b80df50 <col:15> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14b80e338 <line:5:2, line:8:2>     | |-BinaryOperator 0x14b80e1a0 <line:5:6, col:28> 'int' contains-errors '!='     | | |-CallExpr 0x14b80e158 <col:6, col:23> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x14b80e0a0 <col:6> 'int ()' Function 0x14b80dfe8 'PS' 'int ()'     | | | `-RecoveryExpr 0x14b80e138 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14b80e180 <col:28> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14b80e320 <col:48, line:8:2>     |   `-ReturnStmt 0x14b80e310 <line:7:3, col:10>     |     `-RecoveryExpr 0x14b80e2f0 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14b827bf8 <line:10:2, line:13:2>     | |-RecoveryExpr 0x14b827af0 <line:10:6, col:61> '_Bool' contains-errors     | `-CompoundStmt 0x14b827be0 <col:70, line:13:2>     |   `-BinaryOperator 0x14b827b88 <line:11:3, col:12> 'int' contains-errors '='     |     |-DeclRefExpr 0x14b827b10 <col:3> 'int' contains-errors lvalue Var 0x14b80deb8 'retval' 'int'     |     `-RecoveryExpr 0x14b827b68 <col:12> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14b827dc8 <line:15:2, col:40> 'int'     | |-ImplicitCastExpr 0x14b827db0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14b827cf8 <col:2> 'int ()' Function 0x14b827c40 'php_rshutdown_session_globals' 'int ()'     | `-ImplicitCastExpr 0x14b827df0 <col:32> 'int' <LValueToRValue>     |   `-DeclRefExpr 0x14b827d58 <col:32> 'int' lvalue ParmVar 0x14b80dcd8 'TSRMLS_D' 'int'     |-CallExpr 0x14b827f80 <line:16:2, col:36> 'int'     | |-ImplicitCastExpr 0x14b827f68 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14b827ee8 <col:2> 'int ()' Function 0x14b827e30 'php_rinit_session_globals' 'int ()'     | `-ImplicitCastExpr 0x14b827fa8 <col:28> 'int' <LValueToRValue>     |   `-DeclRefExpr 0x14b827f48 <col:28> 'int' lvalue ParmVar 0x14b80dcd8 'TSRMLS_D' 'int'     `-ReturnStmt 0x14b827ff8 <line:18:2, col:9>       `-ImplicitCastExpr 0x14b827fe0 <col:9> 'int' contains-errors <LValueToRValue>         `-DeclRefExpr 0x14b827fc0 <col:9> 'int' contains-errors lvalue Var 0x14b80deb8 'retval' 'int' ","20338":"`-FunctionDecl 0x12100e158  line:1:14 invalid PrepareGeneralSubOp 'int (int *, const int *, const int *, int *, int *, int *, int)'   |-ParmVarDecl 0x12100dd28 <col:34, col:49> col:49 invalid context 'int *'   |-ParmVarDecl 0x12100dda8 <line:2:34, col:54> col:54 invalid input_1 'const int *'   |-ParmVarDecl 0x12100de28 <line:3:34, col:54> col:54 invalid input_2 'const int *'   |-ParmVarDecl 0x12100dea8 <line:4:34, col:48> col:48 invalid output 'int *'   |-ParmVarDecl 0x12100df28 <col:56, col:73> col:73 invalid params 'int *'   |-ParmVarDecl 0x12100dfa8 <line:5:34, col:42> col:42 referenced invalid op_params 'int *'   |-ParmVarDecl 0x12100e028 <col:53, col:57> col:57 used op_sign 'int'   `-CompoundStmt 0x122008ef0 <col:66, line:74:1>     |-CallExpr 0x121027730 <line:6:3, line:8:59> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12100e390 <line:6:3> 'int ()' Function 0x12100e2d8 'TF_LITE_ENSURE' 'int ()'     | |-RecoveryExpr 0x12100e3b0 <col:18> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x121027710 <col:27, line:8:47> 'int' contains-errors '||'     |   |-BinaryOperator 0x1210276b0 <line:6:27, line:7:47> 'int' contains-errors '||'     |   | |-BinaryOperator 0x121027650 <line:6:27, col:43> 'int' contains-errors '=='     |   | | |-CXXDependentScopeMemberExpr 0x121027400 <col:27, col:35> '<dependent type>' contains-errors lvalue ->type     |   | | | `-RecoveryExpr 0x12100e3d0 <col:27> '<dependent type>' contains-errors lvalue     |   | | `-RecoveryExpr 0x121027630 <col:43> '<dependent type>' contains-errors lvalue     |   | `-BinaryOperator 0x121027690 <line:7:31, col:47> 'int' contains-errors '=='     |   |   |-CXXDependentScopeMemberExpr 0x1210274a0 <col:31, col:39> '<dependent type>' contains-errors lvalue ->type     |   |   | `-RecoveryExpr 0x121027480 <col:31> '<dependent type>' contains-errors lvalue     |   |   `-RecoveryExpr 0x121027670 <col:47> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x1210276f0 <line:8:31, col:47> 'int' contains-errors '=='     |     |-CXXDependentScopeMemberExpr 0x121027560 <col:31, col:39> '<dependent type>' contains-errors lvalue ->type     |     | `-RecoveryExpr 0x121027540 <col:31> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x1210276d0 <col:47> '<dependent type>' contains-errors lvalue     |-IfStmt 0x121027940 <line:14:3, line:24:3> has_else     | |-BinaryOperator 0x121027820 <line:14:7, col:23> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x121027780 <col:7, col:15> '<dependent type>' contains-errors lvalue ->type     | | | `-RecoveryExpr 0x121027760 <col:7> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x121027800 <col:23> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x121027858 <col:37, line:17:3>     | `-IfStmt 0x121027910 <col:10, line:24:3> has_else     |   |-RecoveryExpr 0x1210278d0 <line:17:14, col:30> '_Bool' contains-errors     |   |-CompoundStmt 0x1210278f0 <col:44, line:20:3>     |   `-CompoundStmt 0x121027900 <col:10, line:24:3>     |-DeclStmt 0x121027e78 <line:47:3, line:49:53>     | `-VarDecl 0x121027df0 <line:47:3, col:16> col:16 used twice_max_input_scale 'const double'     |-DeclStmt 0x121027f30 <line:50:3, line:51:63>     | `-VarDecl 0x121027ea8 <line:50:3, col:16> col:16 real_input1_multiplier 'const double'     |-DeclStmt 0x121027fe8 <line:52:3, line:53:63>     | `-VarDecl 0x121027f60 <line:52:3, col:16> col:16 real_input2_multiplier 'const double'     |-DeclStmt 0x121028168 <line:54:3, line:56:72>     | `-VarDecl 0x121028018 <line:54:3, col:16> col:16 real_output_multiplier 'const double'     |-CompoundAssignOperator 0x121028230 <line:64:3, col:35> '<dependent type>' contains-errors '*=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-CXXDependentScopeMemberExpr 0x1210281c8 <col:3, col:14> '<dependent type>' contains-errors lvalue ->input2_multiplier     | | `-RecoveryExpr 0x1210281a0 <col:3> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x121028180 <col:3> 'int *' lvalue ParmVar 0x12100dfa8 'op_params' 'int *'     | `-DeclRefExpr 0x121028210 <col:35> 'int' lvalue ParmVar 0x12100e028 'op_sign' 'int'     `-CallExpr 0x122008ec8 <line:69:3, line:71:41> '<dependent type>' contains-errors       |-DeclRefExpr 0x121028340 <line:69:3> 'int ()' Function 0x121028288 'TF_LITE_ENSURE_STATUS' 'int ()'       `-CallExpr 0x122008e80 <col:25, line:71:40> '<dependent type>' contains-errors         |-DeclRefExpr 0x122008cb8 <line:69:25> 'int ()' Function 0x122008c00 'CalculateActivationRangeQuantized' 'int ()'         |-RecoveryExpr 0x122008cd8 <line:70:7> '<dependent type>' contains-errors lvalue         |-CXXDependentScopeMemberExpr 0x122008d18 <col:16, col:24> '<dependent type>' contains-errors lvalue ->activation         | `-RecoveryExpr 0x122008cf8 <col:16> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x122008d60 <col:36> '<dependent type>' contains-errors lvalue         |-UnaryOperator 0x122008de8 <col:44, col:56> '<dependent type>' contains-errors prefix '&' cannot overflow         | `-CXXDependentScopeMemberExpr 0x122008da0 <col:45, col:56> '<dependent type>' contains-errors lvalue ->output_activation_min         |   `-RecoveryExpr 0x122008d80 <col:45> '<dependent type>' contains-errors lvalue         `-UnaryOperator 0x122008e68 <line:71:7, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow           `-CXXDependentScopeMemberExpr 0x122008e20 <col:8, col:19> '<dependent type>' contains-errors lvalue ->output_activation_max             `-RecoveryExpr 0x122008e00 <col:8> '<dependent type>' contains-errors lvalue ","20455":"`-FunctionDecl 0x14c942440  col:8 implicit used fabs 'double (double)' extern   |-ParmVarDecl 0x14c942540 <<invalid sloc>> <invalid sloc> 'double'   |-BuiltinAttr 0x14c9424e8 <<invalid sloc>> Implicit 1004   |-NoThrowAttr 0x14c9425b0 <col:8> Implicit   `-ConstAttr 0x14c9425d8 <col:8> Implicit ","20266":"`-FunctionDecl 0x136928258  line:1:1 invalid _outSubLink 'int (int, const int *)'   |-ParmVarDecl 0x1369280f0 <col:13, col:24> col:24 invalid str 'int'   |-ParmVarDecl 0x136928170 <col:29, col:44> col:44 invalid node 'const int *'   `-CompoundStmt 0x137009038 <line:2:1, line:10:1>     |-CallExpr 0x136928538 <line:3:2, col:23> 'int'     | |-ImplicitCastExpr 0x136928520 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x136928470 <col:2> 'int ()' Function 0x1369283b8 'WRITE_NODE_TYPE' 'int ()'     | `-ImplicitCastExpr 0x136928560 <col:18> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x1369284d0 <col:18> 'char[4]' lvalue \"STR\"     |-CallExpr 0x136928718 <line:5:2, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x136928658 <col:2> 'int ()' Function 0x1369285a0 'WRITE_ENUM_FIELD' 'int ()'     | |-RecoveryExpr 0x1369286d8 <col:19> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1369286f8 <col:32> '<dependent type>' contains-errors lvalue     |-CallExpr 0x137008d38 <line:6:2, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x137008cb8 <col:2> 'int ()' Function 0x137008c00 'WRITE_NODE_FIELD' 'int ()'     | `-RecoveryExpr 0x137008d18 <col:19> '<dependent type>' contains-errors lvalue     |-CallExpr 0x137008de0 <line:7:2, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x137008d60 <col:2> 'int ()' Function 0x137008c00 'WRITE_NODE_FIELD' 'int ()'     | `-RecoveryExpr 0x137008dc0 <col:19> '<dependent type>' contains-errors lvalue     |-CallExpr 0x137008e88 <line:8:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x137008e08 <col:2> 'int ()' Function 0x137008c00 'WRITE_NODE_FIELD' 'int ()'     | `-RecoveryExpr 0x137008e68 <col:19> '<dependent type>' contains-errors lvalue     `-CallExpr 0x137009010 <line:9:2, col:31> '<dependent type>' contains-errors       |-DeclRefExpr 0x137008f90 <col:2> 'int ()' Function 0x137008ed8 'WRITE_LOCATION_FIELD' 'int ()'       `-RecoveryExpr 0x137008ff0 <col:23> '<dependent type>' contains-errors lvalue ","20732":"`-FunctionDecl 0x11d922748  line:1:12 dcb_doit 'int (struct sk_buff *, struct nlmsghdr *)' static   |-ParmVarDecl 0x11e00e248 <col:21, col:37> col:37 used skb 'struct sk_buff *'   |-ParmVarDecl 0x11d922628 <col:42, col:59> col:59 used nlh 'struct nlmsghdr *'   `-CompoundStmt 0x11e027748 <line:2:1, line:55:1>     |-DeclStmt 0x11d922c10 <line:3:2, col:37>     | |-RecordDecl 0x11d922848 <col:2, col:9> col:9 struct net     | `-VarDecl 0x11d9229b8 <col:2, col:36> col:14 used net 'struct net *' cinit     |   `-CallExpr 0x11d922bd0 <col:20, col:36> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x11d922b50 <col:20> 'int ()' Function 0x11d922a98 'sock_net' 'int ()'     |     `-RecoveryExpr 0x11d922ba8 <col:29, col:34> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x11d922b70 <col:29> 'struct sk_buff *' lvalue ParmVar 0x11e00e248 'skb' 'struct sk_buff *'     |-DeclStmt 0x11d922e18 <line:4:2, col:27>     | |-RecordDecl 0x11d922c28 <col:2, col:9> col:9 struct net_device     | `-VarDecl 0x11d922d98 <col:2, col:21> col:21 used netdev 'struct net_device *'     |-DeclStmt 0x11d9231d8 <line:5:2, col:38>     | |-RecordDecl 0x11d922e30 <col:2, col:9> col:9 struct dcbmsg     | `-VarDecl 0x11d922f98 <col:2, col:37> col:17 used dcb 'struct dcbmsg *' cinit     |   `-ImplicitCastExpr 0x11d9231a8 <col:23, col:37> 'struct dcbmsg *' <IntegralToPointer>     |     `-CallExpr 0x11d923168 <col:23, col:37> 'int'     |       |-ImplicitCastExpr 0x11d923150 <col:23> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x11d9230e0 <col:23> 'int ()' Function 0x11d923028 'nlmsg_data' 'int ()'     |       `-ImplicitCastExpr 0x11d923190 <col:34> 'struct nlmsghdr *' <LValueToRValue>     |         `-DeclRefExpr 0x11d923100 <col:34> 'struct nlmsghdr *' lvalue ParmVar 0x11d922628 'nlh' 'struct nlmsghdr *'     |-DeclStmt 0x11d923438 <line:6:2, col:37>     | |-RecordDecl 0x11d9231f0 <col:2, col:9> col:9 struct nlattr     | `-VarDecl 0x11d9233b8 <col:2, col:17> col:17 invalid tb 'struct nlattr *'     |-DeclStmt 0x11d923568 <line:8:2, col:19>     | `-VarDecl 0x11d923468 <col:2, col:13> col:6 used ret 'int' cinit     |   `-UnaryOperator 0x11d923550 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x11d923538 <col:13> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x11d923518 <col:13> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x11d929290 <line:9:2, col:27>     | `-VarDecl 0x11d929228 <col:2, col:18> col:18 used reply_skb 'struct sk_buff *'     |-DeclStmt 0x11d9293d8 <line:10:2, col:35>     | `-VarDecl 0x11d929338 <col:2, col:31> col:19 used reply_nlh 'struct nlmsghdr *' cinit     |   `-RecoveryExpr 0x11d9293b8 <col:31> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x11d9295d8 <line:11:2, col:29>     | |-RecordDecl 0x11d9293f0 <col:8, col:15> col:15 struct reply_func     | `-VarDecl 0x11d929558 <col:2, col:27> col:27 used fn 'const struct reply_func *'     |-IfStmt 0x11d9298a8 <line:13:2, line:14:11>     | |-RecoveryExpr 0x11d9297e0 <line:13:6, col:63> '_Bool' contains-errors     | `-ReturnStmt 0x11d929898 <line:14:3, col:11>     |   `-UnaryOperator 0x11d929880 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x11d929868 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x11d929848 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x11d929b88 <line:18:2, line:19:10>     | |-BinaryOperator 0x11d929b20 <line:18:6, col:12> 'int' contains-errors '<'     | | |-ImplicitCastExpr 0x11d929b08 <col:6> 'int' contains-errors <LValueToRValue>     | | | `-DeclRefExpr 0x11d929ac8 <col:6> 'int' contains-errors lvalue Var 0x11d923468 'ret' 'int'     | | `-IntegerLiteral 0x11d929ae8 <col:12> 'int' 0     | `-ReturnStmt 0x11d929b78 <line:19:3, col:10>     |   `-ImplicitCastExpr 0x11d929b60 <col:10> 'int' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x11d929b40 <col:10> 'int' contains-errors lvalue Var 0x11d923468 'ret' 'int'     |-IfStmt 0x11d929d28 <line:21:2, line:22:11>     | |-BinaryOperator 0x11d929c60 <line:21:6, col:17> 'int' contains-errors '>'     | | |-RecoveryExpr 0x11d929be0 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x11d929ba8 <col:6> 'struct dcbmsg *' lvalue Var 0x11d922f98 'dcb' 'struct dcbmsg *'     | | `-RecoveryExpr 0x11d929c40 <col:17> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x11d929d18 <line:22:3, col:11>     |   `-UnaryOperator 0x11d929d00 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x11d929ce8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x11d929cc8 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x11e027110 <line:44:2, col:57> 'int' contains-errors '='     | |-DeclRefExpr 0x11e026f68 <col:2> 'int' contains-errors lvalue Var 0x11d923468 'ret' 'int'     | `-CallExpr 0x11e0270c8 <col:8, col:57> '<dependent type>' contains-errors     |   |-RecoveryExpr 0x11e026fc0 <col:8, col:12> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x11e026f88 <col:8> 'const struct reply_func *' lvalue Var 0x11d929558 'fn' 'const struct reply_func *'     |   |-DeclRefExpr 0x11e026fe8 <col:15> 'struct net_device *' lvalue Var 0x11d922d98 'netdev' 'struct net_device *'     |   |-DeclRefExpr 0x11e027008 <col:23> 'struct nlmsghdr *' lvalue ParmVar 0x11d922628 'nlh' 'struct nlmsghdr *'     |   |-RecoveryExpr 0x11e027060 <col:28, col:33> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x11e027028 <col:28> 'struct nlmsghdr *' lvalue ParmVar 0x11d922628 'nlh' 'struct nlmsghdr *'     |   |-RecoveryExpr 0x11e027088 <col:44> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x11e0270a8 <col:48> 'struct sk_buff *' lvalue Var 0x11d929228 'reply_skb' 'struct sk_buff *'     |-IfStmt 0x11e0273a8 <line:45:2, line:48:2>     | |-BinaryOperator 0x11e027188 <line:45:6, col:12> 'int' contains-errors '<'     | | |-ImplicitCastExpr 0x11e027170 <col:6> 'int' contains-errors <LValueToRValue>     | | | `-DeclRefExpr 0x11e027130 <col:6> 'int' contains-errors lvalue Var 0x11d923468 'ret' 'int'     | | `-IntegerLiteral 0x11e027150 <col:12> 'int' 0     | `-CompoundStmt 0x11e027388 <col:15, line:48:2>     |   |-CallExpr 0x11e0272e0 <line:46:3, col:23> 'int'     |   | |-ImplicitCastExpr 0x11e0272c8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x11e027288 <col:3> 'int ()' Function 0x11e0271d0 'nlmsg_free' 'int ()'     |   | `-ImplicitCastExpr 0x11e027308 <col:14> 'struct sk_buff *' <LValueToRValue>     |   |   `-DeclRefExpr 0x11e0272a8 <col:14> 'struct sk_buff *' lvalue Var 0x11d929228 'reply_skb' 'struct sk_buff *'     |   `-GotoStmt 0x11e027370 <line:47:3, col:8> 'out' 0x11e027320     |-CallExpr 0x11e027520 <line:50:2, col:32> 'int' contains-errors     | |-ImplicitCastExpr 0x11e027508 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x11e0274a8 <col:2> 'int ()' Function 0x11e0273f0 'nlmsg_end' 'int ()'     | |-ImplicitCastExpr 0x11e027550 <col:12> 'struct sk_buff *' <LValueToRValue>     | | `-DeclRefExpr 0x11e0274c8 <col:12> 'struct sk_buff *' lvalue Var 0x11d929228 'reply_skb' 'struct sk_buff *'     | `-ImplicitCastExpr 0x11e027568 <col:23> 'struct nlmsghdr *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x11e0274e8 <col:23> 'struct nlmsghdr *' contains-errors lvalue Var 0x11d929338 'reply_nlh' 'struct nlmsghdr *'     `-LabelStmt 0x11e027728 <line:53:1, line:54:9> 'out'       `-ReturnStmt 0x11e027718 <col:2, col:9>         `-ImplicitCastExpr 0x11e027700 <col:9> 'int' contains-errors <LValueToRValue>           `-DeclRefExpr 0x11e0276e0 <col:9> 'int' contains-errors lvalue Var 0x11d923468 'ret' 'int' ","20623":"`-FunctionDecl 0x12b9281f0  line:1:13 invalid tcmpt_destroy 'void (int *)' static   |-ParmVarDecl 0x12b928128 <col:27, col:44> col:44 invalid tcmpt 'int *'   `-CompoundStmt 0x12b941ea8 <line:2:1, line:20:1>     |-IfStmt 0x12b941a28 <line:6:2, line:12:2>     | |-CXXDependentScopeMemberExpr 0x12b9282d8 <line:6:6, col:13> '<dependent type>' contains-errors lvalue ->rlvls     | | `-RecoveryExpr 0x12b9282b8 <col:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12b941a08 <col:20, line:12:2>     |   |-ForStmt 0x12b941840 <line:7:3, line:10:3>     |   | |-<<<NULL>>>     |   | |-<<<NULL>>>     |   | |-BinaryOperator 0x12b9284f8 <line:7:41, col:57> 'int' contains-errors '<'     |   | | |-RecoveryExpr 0x12b9284d8 <col:41> '<dependent type>' contains-errors lvalue     |   | | `-CXXDependentScopeMemberExpr 0x12b928470 <col:50, col:57> '<dependent type>' contains-errors lvalue ->numrlvls     |   | |   `-RecoveryExpr 0x12b928450 <col:50> '<dependent type>' contains-errors lvalue     |   | |-BinaryOperator 0x12b928608 <line:8:5, col:17> '<dependent type>' contains-errors ','     |   | | |-UnaryOperator 0x12b9285b8 <col:5, col:7> '<dependent type>' contains-errors prefix '++' cannot overflow     |   | | | `-RecoveryExpr 0x12b928598 <col:7> '<dependent type>' contains-errors lvalue     |   | | `-UnaryOperator 0x12b9285f0 <col:15, col:17> '<dependent type>' contains-errors prefix '++' cannot overflow     |   | |   `-RecoveryExpr 0x12b9285d0 <col:17> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x12b941828 <col:23, line:10:3>     |   |   `-CallExpr 0x12b941800 <line:9:4, col:21> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x12b928780 <col:4> 'int ()' Function 0x12b9286c8 'rlvl_destroy' 'int ()'     |   |     `-RecoveryExpr 0x12b9287e0 <col:17> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x12b9419e0 <line:11:3, col:24> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12b941958 <col:3> 'int ()' Function 0x12b9418a0 'jas_free' 'int ()'     |     `-CXXDependentScopeMemberExpr 0x12b941998 <col:12, col:19> '<dependent type>' contains-errors lvalue ->rlvls     |       `-RecoveryExpr 0x12b941978 <col:12> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12b941c58 <line:14:2, line:16:2>     | |-CXXDependentScopeMemberExpr 0x12b941a68 <line:14:6, col:13> '<dependent type>' contains-errors lvalue ->data     | | `-RecoveryExpr 0x12b941a48 <col:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12b941c40 <col:19, line:16:2>     |   `-CallExpr 0x12b941c18 <line:15:3, col:32> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12b941b90 <col:3> 'int ()' Function 0x12b941ad8 'jas_seq2d_destroy' 'int ()'     |     `-CXXDependentScopeMemberExpr 0x12b941bd0 <col:21, col:28> '<dependent type>' contains-errors lvalue ->data     |       `-RecoveryExpr 0x12b941bb0 <col:21> '<dependent type>' contains-errors lvalue     `-IfStmt 0x12b941e88 <line:17:2, line:19:2>       |-CXXDependentScopeMemberExpr 0x12b941c98 <line:17:6, col:13> '<dependent type>' contains-errors lvalue ->tsfb       | `-RecoveryExpr 0x12b941c78 <col:6> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x12b941e70 <col:19, line:19:2>         `-CallExpr 0x12b941e48 <line:18:3, col:31> '<dependent type>' contains-errors           |-DeclRefExpr 0x12b941dc0 <col:3> 'int ()' Function 0x12b941d08 'jpc_tsfb_destroy' 'int ()'           `-CXXDependentScopeMemberExpr 0x12b941e00 <col:20, col:27> '<dependent type>' contains-errors lvalue ->tsfb             `-RecoveryExpr 0x12b941de0 <col:20> '<dependent type>' contains-errors lvalue ","20265":"`-FunctionDecl 0x127128b18  line:1:14 invalid InitializeTemporaries 'int (int *, int *, int *)'   |-ParmVarDecl 0x127128928 <col:36, col:51> col:51 invalid context 'int *'   |-ParmVarDecl 0x1271289a8 <col:60, col:72> col:72 referenced invalid node 'int *'   |-ParmVarDecl 0x127128a28 <line:2:36, col:47> col:47 invalid op_context 'int *'   `-CompoundStmt 0x1271421a0 <col:59, line:45:1>     |-CallExpr 0x127128e88 <line:5:3, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x127128e00 <col:3> 'int ()' Function 0x127128d48 'TfLiteIntArrayFree' 'int ()'     | `-CXXDependentScopeMemberExpr 0x127128e40 <col:22, col:28> '<dependent type>' contains-errors lvalue ->temporaries     |   `-RecoveryExpr 0x127128e20 <col:22> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x127141370 <line:6:3, col:45> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x127128ef8 <col:3, col:9> '<dependent type>' contains-errors lvalue ->temporaries     | | `-RecoveryExpr 0x127128ed0 <col:3> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x127128eb0 <col:3> 'int *' lvalue ParmVar 0x1271289a8 'node' 'int *'     | `-CallExpr 0x127141348 <col:23, col:45> 'int'     |   |-ImplicitCastExpr 0x127141330 <col:23> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1271412b8 <col:23> 'int ()' Function 0x127141200 'TfLiteIntArrayCreate' 'int ()'     |   `-IntegerLiteral 0x1271412d8 <col:44> 'int' 3     |-BinaryOperator 0x127141618 <line:7:3, col:41> '<dependent type>' contains-errors '='     | |-ArraySubscriptExpr 0x127141590 <col:3, col:28> '<dependent type>' contains-errors lvalue     | | |-ImplicitCastExpr 0x127141578 <col:3, col:22> '<dependent type>' contains-errors <LValueToRValue>     | | | `-CXXDependentScopeMemberExpr 0x127141420 <col:3, col:22> '<dependent type>' contains-errors lvalue ->data     | | |   `-CXXDependentScopeMemberExpr 0x1271413d8 <col:3, col:9> '<dependent type>' contains-errors lvalue ->temporaries     | | |     `-RecoveryExpr 0x1271413b0 <col:3> '<dependent type>' contains-errors lvalue     | | |       `-DeclRefExpr 0x127141390 <col:3> 'int *' lvalue ParmVar 0x1271289a8 'node' 'int *'     | | `-IntegerLiteral 0x127141468 <col:27> 'int' 0     | `-CXXDependentScopeMemberExpr 0x1271415d0 <col:32, col:41> '<dependent type>' contains-errors lvalue ->scratch_tensor_index     |   `-RecoveryExpr 0x1271415b0 <col:32> '<dependent type>' contains-errors lvalue     `-SwitchStmt 0x1271420e8 <line:23:3, line:43:3>       |-ImplicitCastExpr 0x1271420d0 <line:23:11, col:30> '<dependent type>' contains-errors <LValueToRValue>       | `-CXXDependentScopeMemberExpr 0x127142088 <col:11, col:30> '<dependent type>' contains-errors lvalue ->type       |   `-CXXDependentScopeMemberExpr 0x127142040 <col:11, col:23> '<dependent type>' contains-errors lvalue ->input       |     `-RecoveryExpr 0x127142020 <col:11> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x127142160 <col:36, line:43:3>         |-BreakStmt 0x127142110 <line:26:7>         |-BreakStmt 0x127142118 <line:29:7>         |-BreakStmt 0x127142120 <line:32:7>         |-BreakStmt 0x127142128 <line:37:7>         |-BreakStmt 0x127142130 <line:40:7>         `-DefaultStmt 0x127142140 <line:41:5, col:12>           `-NullStmt 0x127142138 <col:12> ","21106":"`-FunctionDecl 0x13b8e3838  line:1:1 TEST_F 'int (int, int)'   |-ParmVarDecl 0x13b8e3758 <col:8> col:8 GroupVerifierTest 'int'   |-ParmVarDecl 0x13b8e36d8 <col:27> col:27 TestRequiresAnyLastIsJwtMissed 'int'   `-CompoundStmt 0x13c04fee8 <col:59, line:18:1>     |-RecoveryExpr 0x13b8e3980 <line:2:3> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x13b8e3a58 <line:3:3, col:23>     | `-VarDecl 0x13b8e39b8 <col:3, col:20> col:8 mock_auth 'int' auto cinit     |   `-RecoveryExpr 0x13b8e3a38 <col:20> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13c04f9c8 <line:8:3, col:47> '<dependent type>' contains-errors     | |-CXXDependentScopeMemberExpr 0x13c04f980 <col:3, col:40> '<dependent type>' contains-errors lvalue .Times     | | `-CallExpr 0x13c04f950 <col:3, col:38> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x13b8e3c98 <col:3> 'int ()' Function 0x13b8e3be0 'EXPECT_CALL' 'int ()'     | |   |-RecoveryExpr 0x13c04f8e8 <col:15> '<dependent type>' contains-errors lvalue     | |   `-CallExpr 0x13c04f928 <col:25, col:37> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x13b8e3db0 <col:25> 'int ()' Function 0x13b8e3cf8 'setPayload' 'int ()'     | |     `-RecoveryExpr 0x13c04f908 <col:36> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x13c04f8a0 <col:46> 'int' 0     |-DeclStmt 0x13c04fbf8 <line:10:3, col:22>     | `-VarDecl 0x13c04fb58 <col:3, col:18> col:8 used headers 'int' auto cinit     |   `-RecoveryExpr 0x13c04fbd8 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13c04fde8 <line:16:3, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13c04fcf0 <col:3> 'int ()' Function 0x13c04fc38 'EXPECT_FALSE' 'int ()'     | `-CallExpr 0x13c04fdc0 <col:16, col:33> '<dependent type>' contains-errors     |   |-RecoveryExpr 0x13c04fd30 <col:16, col:24> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x13c04fd10 <col:16> 'int' contains-errors lvalue Var 0x13c04fb58 'headers' 'int'     |   `-StringLiteral 0x13c04fda0 <col:28> 'char[4]' lvalue \"STR\"     `-CallExpr 0x13c04fec0 <line:17:3, col:34> '<dependent type>' contains-errors       |-DeclRefExpr 0x13c04fe10 <col:3> 'int ()' Function 0x13c04fc38 'EXPECT_FALSE' 'int ()'       `-CallExpr 0x13c04fe98 <col:16, col:33> '<dependent type>' contains-errors         |-RecoveryExpr 0x13c04fe50 <col:16, col:24> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x13c04fe30 <col:16> 'int' contains-errors lvalue Var 0x13c04fb58 'headers' 'int'         `-StringLiteral 0x13c04fe78 <col:28> 'char[4]' lvalue \"STR\" ","20681":"`-FunctionDecl 0x147926880  line:1:13 invalid fdctrl_handle_drive_specification_command 'void (int *, int)' static   |-ParmVarDecl 0x147926728 <col:55, col:63> col:63 referenced invalid fdctrl 'int *'   |-ParmVarDecl 0x1479267a8 <col:71, col:75> col:75 direction 'int'   `-CompoundStmt 0x147940a30 <line:2:1, line:21:1>     `-IfStmt 0x147940a00 <line:5:5, line:20:5> has_else       |-BinaryOperator 0x147926c80 <line:5:9, col:46> '<dependent type>' contains-errors '&'       | |-ArraySubscriptExpr 0x147926c40 <col:9, col:42> '<dependent type>' contains-errors lvalue       | | |-ImplicitCastExpr 0x147926c28 <col:9, col:17> '<dependent type>' contains-errors <LValueToRValue>       | | | `-CXXDependentScopeMemberExpr 0x147926b38 <col:9, col:17> '<dependent type>' contains-errors lvalue ->fifo       | | |   `-RecoveryExpr 0x147926b18 <col:9> '<dependent type>' contains-errors lvalue       | | `-BinaryOperator 0x147926c08 <col:22, col:41> '<dependent type>' contains-errors '-'       | |   |-CXXDependentScopeMemberExpr 0x147926ba0 <col:22, col:30> '<dependent type>' contains-errors lvalue ->data_pos       | |   | `-RecoveryExpr 0x147926b80 <col:22> '<dependent type>' contains-errors lvalue       | |   `-IntegerLiteral 0x147926be8 <col:41> 'int' 1       | `-IntegerLiteral 0x147926c60 <col:46> 'int' 128       |-CompoundStmt 0x147940588 <col:52, line:15:5>       | `-IfStmt 0x147940558 <line:7:9, line:14:9> has_else       |   |-BinaryOperator 0x14793fe20 <line:7:13, col:50> '<dependent type>' contains-errors '&'       |   | |-ArraySubscriptExpr 0x147926dc8 <col:13, col:46> '<dependent type>' contains-errors lvalue       |   | | |-ImplicitCastExpr 0x147926db0 <col:13, col:21> '<dependent type>' contains-errors <LValueToRValue>       |   | | | `-CXXDependentScopeMemberExpr 0x147926cc0 <col:13, col:21> '<dependent type>' contains-errors lvalue ->fifo       |   | | |   `-RecoveryExpr 0x147926ca0 <col:13> '<dependent type>' contains-errors lvalue       |   | | `-BinaryOperator 0x147926d90 <col:26, col:45> '<dependent type>' contains-errors '-'       |   | |   |-CXXDependentScopeMemberExpr 0x147926d28 <col:26, col:34> '<dependent type>' contains-errors lvalue ->data_pos       |   | |   | `-RecoveryExpr 0x147926d08 <col:26> '<dependent type>' contains-errors lvalue       |   | |   `-IntegerLiteral 0x147926d70 <col:45> 'int' 1       |   | `-IntegerLiteral 0x14793fe00 <col:50> 'int' 64       |   |-CompoundStmt 0x1479403c8 <col:56, line:12:9>       |   | |-BinaryOperator 0x14793ffe8 <line:8:13, col:45> '<dependent type>' contains-errors '='       |   | | |-ArraySubscriptExpr 0x14793ff08 <col:13, col:27> '<dependent type>' contains-errors lvalue       |   | | | |-ImplicitCastExpr 0x14793fef0 <col:13, col:21> '<dependent type>' contains-errors <LValueToRValue>       |   | | | | `-CXXDependentScopeMemberExpr 0x14793fe88 <col:13, col:21> '<dependent type>' contains-errors lvalue ->fifo       |   | | | |   `-RecoveryExpr 0x14793fe60 <col:13> '<dependent type>' contains-errors lvalue       |   | | | |     `-DeclRefExpr 0x14793fe40 <col:13> 'int *' lvalue ParmVar 0x147926728 'fdctrl' 'int *'       |   | | | `-IntegerLiteral 0x14793fed0 <col:26> 'int' 0       |   | | `-ArraySubscriptExpr 0x14793ffc8 <col:31, col:45> '<dependent type>' contains-errors lvalue       |   | |   |-ImplicitCastExpr 0x14793ffb0 <col:31, col:39> '<dependent type>' contains-errors <LValueToRValue>       |   | |   | `-CXXDependentScopeMemberExpr 0x14793ff48 <col:31, col:39> '<dependent type>' contains-errors lvalue ->fifo       |   | |   |   `-RecoveryExpr 0x14793ff28 <col:31> '<dependent type>' contains-errors lvalue       |   | |   `-IntegerLiteral 0x14793ff90 <col:44> 'int' 1       |   | |-BinaryOperator 0x147940110 <line:9:13, col:31> '<dependent type>' contains-errors '='       |   | | |-ArraySubscriptExpr 0x1479400d0 <col:13, col:27> '<dependent type>' contains-errors lvalue       |   | | | |-ImplicitCastExpr 0x1479400b8 <col:13, col:21> '<dependent type>' contains-errors <LValueToRValue>       |   | | | | `-CXXDependentScopeMemberExpr 0x147940050 <col:13, col:21> '<dependent type>' contains-errors lvalue ->fifo       |   | | | |   `-RecoveryExpr 0x147940028 <col:13> '<dependent type>' contains-errors lvalue       |   | | | |     `-DeclRefExpr 0x147940008 <col:13> 'int *' lvalue ParmVar 0x147926728 'fdctrl' 'int *'       |   | | | `-IntegerLiteral 0x147940098 <col:26> 'int' 2       |   | | `-IntegerLiteral 0x1479400f0 <col:31> 'int' 0       |   | |-BinaryOperator 0x147940238 <line:10:13, col:31> '<dependent type>' contains-errors '='       |   | | |-ArraySubscriptExpr 0x1479401f8 <col:13, col:27> '<dependent type>' contains-errors lvalue       |   | | | |-ImplicitCastExpr 0x1479401e0 <col:13, col:21> '<dependent type>' contains-errors <LValueToRValue>       |   | | | | `-CXXDependentScopeMemberExpr 0x147940178 <col:13, col:21> '<dependent type>' contains-errors lvalue ->fifo       |   | | | |   `-RecoveryExpr 0x147940150 <col:13> '<dependent type>' contains-errors lvalue       |   | | | |     `-DeclRefExpr 0x147940130 <col:13> 'int *' lvalue ParmVar 0x147926728 'fdctrl' 'int *'       |   | | | `-IntegerLiteral 0x1479401c0 <col:26> 'int' 3       |   | | `-IntegerLiteral 0x147940218 <col:31> 'int' 0       |   | `-CallExpr 0x147940398 <line:11:13, col:38> '<dependent type>' contains-errors       |   |   |-DeclRefExpr 0x147940338 <col:13> 'int ()' Function 0x147940280 'fdctrl_set_fifo' 'int ()'       |   |   |-RecoveryExpr 0x147940358 <col:29> '<dependent type>' contains-errors lvalue       |   |   `-IntegerLiteral 0x147940378 <col:37> 'int' 4       |   `-CompoundStmt 0x147940540 <line:12:16, line:14:9>       |     `-CallExpr 0x147940518 <line:13:13, col:37> '<dependent type>' contains-errors       |       |-DeclRefExpr 0x1479404d8 <col:13> 'int ()' Function 0x147940420 'fdctrl_reset_fifo' 'int ()'       |       `-RecoveryExpr 0x1479404f8 <col:31> '<dependent type>' contains-errors lvalue       `-IfStmt 0x1479409e0 <line:15:12, line:20:5>         |-BinaryOperator 0x147940628 <line:15:16, col:35> 'int' contains-errors '>'         | |-CXXDependentScopeMemberExpr 0x1479405c0 <col:16, col:24> '<dependent type>' contains-errors lvalue ->data_len         | | `-RecoveryExpr 0x1479405a0 <col:16> '<dependent type>' contains-errors lvalue         | `-IntegerLiteral 0x147940608 <col:35> 'int' 7         `-CompoundStmt 0x1479409c8 <col:38, line:20:5>           `-CallExpr 0x147940998 <line:19:9, col:34> '<dependent type>' contains-errors             |-DeclRefExpr 0x147940938 <col:9> 'int ()' Function 0x147940280 'fdctrl_set_fifo' 'int ()'             |-RecoveryExpr 0x147940958 <col:25> '<dependent type>' contains-errors lvalue             `-IntegerLiteral 0x147940978 <col:33> 'int' 1 ","20440":"`-FunctionDecl 0x1371289f8  line:1:1 invalid circuit_discard_optional_exit_enclaves 'int (int *)'   |-ParmVarDecl 0x137128928 <col:40, col:55> col:55 invalid info 'int *'   `-CompoundStmt 0x137128ea0 <line:2:1, line:39:1>     `-DeclStmt 0x137128b40 <line:4:3, col:24>       `-VarDecl 0x137128ad8 <col:3, col:17> col:17 invalid r1 'const int *' ","20425":"`-FunctionDecl 0x138128400  line:1:6 invalid filter_add_blacklist_override 'void (int, int, int, void *, int)'   |-ParmVarDecl 0x1381280d8 <col:36, col:40> col:40 used fd 'int'   |-ParmVarDecl 0x138128158 <col:44, col:48> col:48 used syscall 'int'   |-ParmVarDecl 0x1381281d8 <col:57, col:61> col:61 used arg 'int'   |-ParmVarDecl 0x138128258 <col:66, col:72> col:72 used ptrarg 'void *'   |-ParmVarDecl 0x1381282f0 <col:80, col:85> col:85 invalid native 'int'   `-CompoundStmt 0x138128700 <col:93, line:7:1>     |-CStyleCastExpr 0x138128518 <line:2:2, col:9> 'void' <ToVoid>     | `-ImplicitCastExpr 0x138128500 <col:9> 'int' <LValueToRValue> part_of_explicit_cast     |   `-DeclRefExpr 0x1381284d0 <col:9> 'int' lvalue ParmVar 0x1381280d8 'fd' 'int'     |-CStyleCastExpr 0x138128588 <line:3:2, col:9> 'void' <ToVoid>     | `-ImplicitCastExpr 0x138128570 <col:9> 'int' <LValueToRValue> part_of_explicit_cast     |   `-DeclRefExpr 0x138128540 <col:9> 'int' lvalue ParmVar 0x138128158 'syscall' 'int'     |-CStyleCastExpr 0x1381285f8 <line:4:2, col:9> 'void' <ToVoid>     | `-ImplicitCastExpr 0x1381285e0 <col:9> 'int' <LValueToRValue> part_of_explicit_cast     |   `-DeclRefExpr 0x1381285b0 <col:9> 'int' lvalue ParmVar 0x1381281d8 'arg' 'int'     |-CStyleCastExpr 0x138128668 <line:5:2, col:9> 'void' <ToVoid>     | `-ImplicitCastExpr 0x138128650 <col:9> 'void *' <LValueToRValue> part_of_explicit_cast     |   `-DeclRefExpr 0x138128620 <col:9> 'void *' lvalue ParmVar 0x138128258 'ptrarg' 'void *'     `-CStyleCastExpr 0x1381286d8 <line:6:2, col:9> 'void' contains-errors <ToVoid>       `-ImplicitCastExpr 0x1381286c0 <col:9> '<dependent type>' contains-errors <LValueToRValue> part_of_explicit_cast         `-RecoveryExpr 0x138128690 <col:9> '<dependent type>' contains-errors lvalue ","20456":"`-FunctionDecl 0x12f128288  line:1:1 invalid smtp_transport_get_name 'int (int *, int)'   |-ParmVarDecl 0x12f128128 <col:26, col:40> col:40 invalid service 'int *'   |-ParmVarDecl 0x12f1281a8 <line:2:26, col:35> col:35 invalid brief 'int'   `-CompoundStmt 0x12f1422a8 <line:3:1, line:26:1>     |-DeclStmt 0x12f1283f0 <line:6:2, col:13>     | `-VarDecl 0x12f128388 <col:2, col:9> col:9 used host 'char *'     |-DeclStmt 0x12f128488 <line:7:2, col:13>     | `-VarDecl 0x12f128420 <col:2, col:9> col:9 used name 'char *'     |-BinaryOperator 0x12f141980 <line:12:2, col:58> 'char *' contains-errors '='     | |-DeclRefExpr 0x12f1287a8 <col:2> 'char *' lvalue Var 0x12f128388 'host' 'char *'     | `-CallExpr 0x12f141958 <col:9, col:58> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12f1418b8 <col:9> 'int ()' Function 0x12f141800 'camel_network_settings_dup_host' 'int ()'     |   `-RecoveryExpr 0x12f141938 <col:42> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12f141b00 <line:14:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f141a80 <col:2> 'int ()' Function 0x12f1419c8 'g_object_unref' 'int ()'     | `-RecoveryExpr 0x12f141ae0 <col:18> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12f1420a0 <line:16:2, line:21:18> has_else     | |-RecoveryExpr 0x12f141b28 <line:16:6> '<dependent type>' contains-errors lvalue     | |-BinaryOperator 0x12f141ef0 <line:17:3, line:18:18> 'char *' '='     | | |-DeclRefExpr 0x12f141b48 <line:17:3> 'char *' lvalue Var 0x12f128420 'name' 'char *'     | | `-ImplicitCastExpr 0x12f141ed8 <col:10, line:18:18> 'char *' <IntegralToPointer>     | |   `-CallExpr 0x12f141e90 <line:17:10, line:18:18> 'int'     | |     |-ImplicitCastExpr 0x12f141e78 <line:17:10> 'int (*)()' <FunctionToPointerDecay>     | |     | `-DeclRefExpr 0x12f141c48 <col:10> 'int ()' Function 0x12f141b90 'g_strdup_printf' 'int ()'     | |     |-CallExpr 0x12f141e18 <line:18:4, col:11> 'int'     | |     | |-ImplicitCastExpr 0x12f141e00 <col:4> 'int (*)()' <FunctionToPointerDecay>     | |     | | `-DeclRefExpr 0x12f141d48 <col:4> 'int ()' Function 0x12f141c90 '_' 'int ()'     | |     | `-ImplicitCastExpr 0x12f141e40 <col:6> 'char *' <ArrayToPointerDecay>     | |     |   `-StringLiteral 0x12f141db0 <col:6> 'char[4]' lvalue \"STR\"     | |     `-ImplicitCastExpr 0x12f141ec0 <col:14> 'char *' <LValueToRValue>     | |       `-DeclRefExpr 0x12f141e58 <col:14> 'char *' lvalue Var 0x12f128388 'host' 'char *'     | `-BinaryOperator 0x12f142080 <line:20:3, line:21:18> 'char *' '='     |   |-DeclRefExpr 0x12f141f10 <line:20:3> 'char *' lvalue Var 0x12f128420 'name' 'char *'     |   `-ImplicitCastExpr 0x12f142068 <col:10, line:21:18> 'char *' <IntegralToPointer>     |     `-CallExpr 0x12f142020 <line:20:10, line:21:18> 'int'     |       |-ImplicitCastExpr 0x12f142008 <line:20:10> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x12f141f30 <col:10> 'int ()' Function 0x12f141b90 'g_strdup_printf' 'int ()'     |       |-CallExpr 0x12f141fa8 <line:21:4, col:11> 'int'     |       | |-ImplicitCastExpr 0x12f141f90 <col:4> 'int (*)()' <FunctionToPointerDecay>     |       | | `-DeclRefExpr 0x12f141f50 <col:4> 'int ()' Function 0x12f141c90 '_' 'int ()'     |       | `-ImplicitCastExpr 0x12f141fd0 <col:6> 'char *' <ArrayToPointerDecay>     |       |   `-StringLiteral 0x12f141f70 <col:6> 'char[4]' lvalue \"STR\"     |       `-ImplicitCastExpr 0x12f142050 <col:14> 'char *' <LValueToRValue>     |         `-DeclRefExpr 0x12f141fe8 <col:14> 'char *' lvalue Var 0x12f128388 'host' 'char *'     |-CallExpr 0x12f142208 <line:23:2, col:14> 'int'     | |-ImplicitCastExpr 0x12f1421f0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12f1421b0 <col:2> 'int ()' Function 0x12f1420f8 'g_free' 'int ()'     | `-ImplicitCastExpr 0x12f142230 <col:10> 'char *' <LValueToRValue>     |   `-DeclRefExpr 0x12f1421d0 <col:10> 'char *' lvalue Var 0x12f128388 'host' 'char *'     `-ReturnStmt 0x12f142298 <line:25:2, col:9>       `-ImplicitCastExpr 0x12f142280 <col:9> 'int' <PointerToIntegral>         `-ImplicitCastExpr 0x12f142268 <col:9> 'char *' <LValueToRValue>           `-DeclRefExpr 0x12f142248 <col:9> 'char *' lvalue Var 0x12f128420 'name' 'char *' ","20928":"`-FunctionDecl 0x15982b638  line:1:21 invalid hiddev_poll 'unsigned int (struct file *, int *)' static   |-ParmVarDecl 0x15980e248 <col:33, col:46> col:46 used file 'struct file *'   |-ParmVarDecl 0x15980e318 <col:52, col:64> col:64 invalid wait 'int *'   `-CompoundStmt 0x15982bfc8 <line:2:1, line:11:1>     |-DeclStmt 0x15982b938 <line:3:2, col:47>     | |-RecordDecl 0x15982b6f0 <col:2, col:9> col:9 struct hiddev_list     | `-VarDecl 0x15982b858 <col:2, col:35> col:22 used list 'struct hiddev_list *' cinit     |   `-RecoveryExpr 0x15982b8f8 <col:29, col:35> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x15982b8c0 <col:29> 'struct file *' lvalue ParmVar 0x15980e248 'file' 'struct file *'     |-CallExpr 0x15982bbd0 <line:5:2, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15982bab0 <col:2> 'int ()' Function 0x15982b9f8 'poll_wait' 'int ()'     | |-DeclRefExpr 0x15982bad0 <col:12> 'struct file *' lvalue ParmVar 0x15980e248 'file' 'struct file *'     | |-UnaryOperator 0x15982bb98 <col:18, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x15982bb50 <col:19, col:33> '<dependent type>' contains-errors lvalue ->wait     | |   `-RecoveryExpr 0x15982bb28 <col:19, col:25> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x15982baf0 <col:19> 'struct hiddev_list *' contains-errors lvalue Var 0x15982b858 'list' 'struct hiddev_list *'     | `-RecoveryExpr 0x15982bbb0 <col:39> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15982bda8 <line:6:2, line:7:19>     | |-BinaryOperator 0x15982bcc8 <line:6:6, col:26> 'int' contains-errors '!='     | | |-RecoveryExpr 0x15982bc40 <col:6, col:12> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x15982bc08 <col:6> 'struct hiddev_list *' contains-errors lvalue Var 0x15982b858 'list' 'struct hiddev_list *'     | | `-RecoveryExpr 0x15982bca0 <col:20, col:26> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15982bc68 <col:20> 'struct hiddev_list *' contains-errors lvalue Var 0x15982b858 'list' 'struct hiddev_list *'     | `-ReturnStmt 0x15982bd98 <line:7:3, col:19>     |   `-BinaryOperator 0x15982bd78 <col:10, col:19> '<dependent type>' contains-errors '|'     |     |-RecoveryExpr 0x15982bd38 <col:10> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x15982bd58 <col:19> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15982bf60 <line:8:2, line:9:20>     | |-UnaryOperator 0x15982be88 <line:8:6, col:21> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x15982be70 <col:7, col:21> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x15982be28 <col:7, col:21> '<dependent type>' contains-errors lvalue ->exist     | |     `-RecoveryExpr 0x15982be00 <col:7, col:13> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x15982bdc8 <col:7> 'struct hiddev_list *' contains-errors lvalue Var 0x15982b858 'list' 'struct hiddev_list *'     | `-ReturnStmt 0x15982bf50 <line:9:3, col:20>     |   `-BinaryOperator 0x15982bf30 <col:10, col:20> '<dependent type>' contains-errors '|'     |     |-RecoveryExpr 0x15982bef0 <col:10> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x15982bf10 <col:20> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x15982bfb8 <line:10:2, col:9>       `-ImplicitCastExpr 0x15982bfa0 <col:9> 'unsigned int' <IntegralCast>         `-IntegerLiteral 0x15982bf80 <col:9> 'int' 0 ","20719":"`-FunctionDecl 0x154826958  line:1:1 do_trap_no_signal 'int (struct task_struct *, int, char *, struct pt_regs *, long)'   |-ParmVarDecl 0x15480e248 <col:19, col:39> col:39 used tsk 'struct task_struct *'   |-ParmVarDecl 0x15480e2c8 <col:44, col:48> col:48 used trapnr 'int'   |-ParmVarDecl 0x15480e348 <col:56, col:62> col:62 used str 'char *'   |-ParmVarDecl 0x154826768 <line:2:5, col:21> col:21 used regs 'struct pt_regs *'   |-ParmVarDecl 0x1548267e8 <col:27, col:32> col:32 used error_code 'long'   `-CompoundStmt 0x1550085a8 <line:3:1, line:24:1>     |-IfStmt 0x154827190 <line:4:2, line:12:2>     | |-CallExpr 0x154826c28 <line:4:6, col:21> 'int'     | | |-ImplicitCastExpr 0x154826c10 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x154826ba0 <col:6> 'int ()' Function 0x154826ae8 'v8086_mode' 'int ()'     | | `-ImplicitCastExpr 0x154826c50 <col:17> 'struct pt_regs *' <LValueToRValue>     | |   `-DeclRefExpr 0x154826bc0 <col:17> 'struct pt_regs *' lvalue ParmVar 0x154826768 'regs' 'struct pt_regs *'     | `-CompoundStmt 0x154827170 <col:24, line:12:2>     |   |-IfStmt 0x154827108 <line:6:3, line:10:3>     |   | |-BinaryOperator 0x154826ce0 <line:6:7, col:16> 'int' contains-errors '<'     |   | | |-DeclRefExpr 0x154826c68 <col:7> 'int' lvalue ParmVar 0x15480e2c8 'trapnr' 'int'     |   | | `-RecoveryExpr 0x154826cc0 <col:16> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x1548270f0 <col:29, line:10:3>     |   |   `-IfStmt 0x1548270d0 <line:7:4, line:9:12>     |   |     |-UnaryOperator 0x154827088 <line:7:8, line:8:25> 'int' prefix '!' cannot overflow     |   |     | `-CallExpr 0x154827020 <line:7:9, line:8:25> 'int'     |   |     |   |-ImplicitCastExpr 0x154827008 <line:7:9> 'int (*)()' <FunctionToPointerDecay>     |   |     |   | `-DeclRefExpr 0x154826de0 <col:9> 'int ()' Function 0x154826d28 'handle_vm86_trap' 'int ()'     |   |     |   |-CStyleCastExpr 0x154826fa0 <col:26, col:54> 'struct kernel_vm86_regs *' <BitCast>     |   |     |   | `-ImplicitCastExpr 0x154826f88 <col:54> 'struct pt_regs *' <LValueToRValue> part_of_explicit_cast     |   |     |   |   `-DeclRefExpr 0x154826ea0 <col:54> 'struct pt_regs *' lvalue ParmVar 0x154826768 'regs' 'struct pt_regs *'     |   |     |   |-ImplicitCastExpr 0x154827058 <line:8:7> 'long' <LValueToRValue>     |   |     |   | `-DeclRefExpr 0x154826fc8 <col:7> 'long' lvalue ParmVar 0x1548267e8 'error_code' 'long'     |   |     |   `-ImplicitCastExpr 0x154827070 <col:19> 'int' <LValueToRValue>     |   |     |     `-DeclRefExpr 0x154826fe8 <col:19> 'int' lvalue ParmVar 0x15480e2c8 'trapnr' 'int'     |   |     `-ReturnStmt 0x1548270c0 <line:9:5, col:12>     |   |       `-IntegerLiteral 0x1548270a0 <col:12> 'int' 0     |   `-ReturnStmt 0x154827160 <line:11:3, col:11>     |     `-UnaryOperator 0x154827148 <col:10, col:11> 'int' prefix '-'     |       `-IntegerLiteral 0x154827128 <col:11> 'int' 1     |-IfStmt 0x155008540 <line:14:2, line:21:2>     | |-UnaryOperator 0x154827328 <line:14:6, col:21> 'int' prefix '!' cannot overflow     | | `-CallExpr 0x1548272e8 <col:7, col:21> 'int'     | |   |-ImplicitCastExpr 0x1548272d0 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x154827290 <col:7> 'int ()' Function 0x1548271d8 'user_mode' 'int ()'     | |   `-ImplicitCastExpr 0x154827310 <col:17> 'struct pt_regs *' <LValueToRValue>     | |     `-DeclRefExpr 0x1548272b0 <col:17> 'struct pt_regs *' lvalue ParmVar 0x154826768 'regs' 'struct pt_regs *'     | `-CompoundStmt 0x155008520 <col:24, line:21:2>     |   |-IfStmt 0x1550084d0 <line:15:3, line:19:3>     |   | |-UnaryOperator 0x1548274b8 <line:15:7, col:28> 'int' prefix '!' cannot overflow     |   | | `-CallExpr 0x154827478 <col:8, col:28> 'int'     |   | |   |-ImplicitCastExpr 0x154827460 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | |   | `-DeclRefExpr 0x154827420 <col:8> 'int ()' Function 0x154827368 'fixup_exception' 'int ()'     |   | |   `-ImplicitCastExpr 0x1548274a0 <col:24> 'struct pt_regs *' <LValueToRValue>     |   | |     `-DeclRefExpr 0x154827440 <col:24> 'struct pt_regs *' lvalue ParmVar 0x154826768 'regs' 'struct pt_regs *'     |   | `-CompoundStmt 0x1550084a8 <col:31, line:19:3>     |   |   |-BinaryOperator 0x154827598 <line:16:4, col:29> '<dependent type>' contains-errors '='     |   |   | |-CXXDependentScopeMemberExpr 0x154827530 <col:4, col:16> '<dependent type>' contains-errors lvalue .error_code     |   |   | | `-RecoveryExpr 0x154827508 <col:4, col:9> '<dependent type>' contains-errors lvalue     |   |   | |   `-DeclRefExpr 0x1548274d0 <col:4> 'struct task_struct *' lvalue ParmVar 0x15480e248 'tsk' 'struct task_struct *'     |   |   | `-DeclRefExpr 0x154827578 <col:29> 'long' lvalue ParmVar 0x1548267e8 'error_code' 'long'     |   |   |-BinaryOperator 0x155008290 <line:17:4, col:26> '<dependent type>' contains-errors '='     |   |   | |-CXXDependentScopeMemberExpr 0x155008228 <col:4, col:16> '<dependent type>' contains-errors lvalue .trap_nr     |   |   | | `-RecoveryExpr 0x155008200 <col:4, col:9> '<dependent type>' contains-errors lvalue     |   |   | |   `-DeclRefExpr 0x1548275b8 <col:4> 'struct task_struct *' lvalue ParmVar 0x15480e248 'tsk' 'struct task_struct *'     |   |   | `-DeclRefExpr 0x155008270 <col:26> 'int' lvalue ParmVar 0x15480e2c8 'trapnr' 'int'     |   |   `-CallExpr 0x155008428 <line:18:4, col:29> 'int'     |   |     |-ImplicitCastExpr 0x155008410 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x155008390 <col:4> 'int ()' Function 0x1550082d8 'die' 'int ()'     |   |     |-ImplicitCastExpr 0x155008460 <col:8> 'char *' <LValueToRValue>     |   |     | `-DeclRefExpr 0x1550083b0 <col:8> 'char *' lvalue ParmVar 0x15480e348 'str' 'char *'     |   |     |-ImplicitCastExpr 0x155008478 <col:13> 'struct pt_regs *' <LValueToRValue>     |   |     | `-DeclRefExpr 0x1550083d0 <col:13> 'struct pt_regs *' lvalue ParmVar 0x154826768 'regs' 'struct pt_regs *'     |   |     `-ImplicitCastExpr 0x155008490 <col:19> 'long' <LValueToRValue>     |   |       `-DeclRefExpr 0x1550083f0 <col:19> 'long' lvalue ParmVar 0x1548267e8 'error_code' 'long'     |   `-ReturnStmt 0x155008510 <line:20:3, col:10>     |     `-IntegerLiteral 0x1550084f0 <col:10> 'int' 0     `-ReturnStmt 0x155008598 <line:23:2, col:10>       `-UnaryOperator 0x155008580 <col:9, col:10> 'int' prefix '-'         `-IntegerLiteral 0x155008560 <col:10> 'int' 1 ","20501":"`-FunctionDecl 0x14600e038  line:1:1 invalid do_query_info_on_write 'int (int *, int *, int, int *, int *)'   |-ParmVarDecl 0x14600dd28 <col:25, col:38> col:38 invalid backend 'int *'   |-ParmVarDecl 0x14600dda8 <line:2:25, col:48> col:48 invalid query_info_job 'int *'   |-ParmVarDecl 0x14600de28 <line:3:25, col:43> col:43 invalid handle 'int'   |-ParmVarDecl 0x14600dea8 <line:4:25, col:36> col:36 invalid info 'int *'   |-ParmVarDecl 0x14600df28 <line:5:25, col:48> col:48 invalid matcher 'int *'   `-CompoundStmt 0x145922d18 <line:6:1, line:23:1>     |-IfStmt 0x1459228b0 <line:14:3, line:15:10>     | |-RecoveryExpr 0x145922828 <line:14:7, col:16> '_Bool' contains-errors     | `-GotoStmt 0x145922898 <line:15:5, col:10> 'out' 0x145922848     `-LabelStmt 0x145922cf8 <line:21:2, col:5> 'out'       `-NullStmt 0x145922cf0 <col:5> ","20538":"`-FunctionDecl 0x12e027c60  col:8 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x12e027d60 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x12e027d08 <<invalid sloc>> Implicit 902 ","21220":"`-FunctionDecl 0x137827d10  col:21 implicit used isdigit 'int (int)' extern   |-ParmVarDecl 0x137827e10 <<invalid sloc>> <invalid sloc> 'int'   |-BuiltinAttr 0x137827db8 <<invalid sloc>> Implicit 924   |-NoThrowAttr 0x137827e80 <col:21> Implicit   `-PureAttr 0x137827ea8 <col:21> Implicit ","20788":"`-FunctionDecl 0x122826678  line:1:5 imap_account_match 'int (const struct Account *, const struct Account *)'   |-ParmVarDecl 0x12280e248 <col:24, col:46> col:46 used a1 'const struct Account *'   |-ParmVarDecl 0x12280e338 <col:50, col:72> col:72 used a2 'const struct Account *'   `-CompoundStmt 0x122827468 <line:2:1, line:9:1>     |-DeclStmt 0x122826b70 <line:3:3, col:71>     | |-RecordDecl 0x122826778 <col:3, col:10> col:10 struct ImapData     | `-VarDecl 0x1228268e8 <col:3, col:70> col:20 used a1_idata 'struct ImapData *' cinit     |   `-CallExpr 0x122826b28 <col:31, col:70> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x122826a80 <col:31> 'int ()' Function 0x1228269c8 'imap_conn_find' 'int ()'     |     |-DeclRefExpr 0x122826aa0 <col:46> 'const struct Account *' lvalue ParmVar 0x12280e248 'a1' 'const struct Account *'     |     `-RecoveryExpr 0x122826b08 <col:50> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x122826d58 <line:4:3, col:71>     | `-VarDecl 0x122826c18 <col:3, col:70> col:20 used a2_idata 'struct ImapData *' cinit     |   `-CallExpr 0x122826d28 <col:31, col:70> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x122826c80 <col:31> 'int ()' Function 0x1228269c8 'imap_conn_find' 'int ()'     |     |-DeclRefExpr 0x122826ca0 <col:46> 'const struct Account *' lvalue ParmVar 0x12280e338 'a2' 'const struct Account *'     |     `-RecoveryExpr 0x122826d08 <col:50> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x122826fd8 <line:5:3, col:84>     | `-VarDecl 0x122826d98 <col:3, col:77> col:25 used a1_canon 'const struct Account *' cinit     |   `-ConditionalOperator 0x122826fa8 <col:36, col:77> '<dependent type>' contains-errors     |     |-BinaryOperator 0x122826f88 <col:36, col:48> 'int' contains-errors '=='     |     | |-DeclRefExpr 0x122826e00 <col:36> 'struct ImapData *' contains-errors lvalue Var 0x1228268e8 'a1_idata' 'struct ImapData *'     |     | `-RecoveryExpr 0x122826f68 <col:48> '<dependent type>' contains-errors lvalue     |     |-DeclRefExpr 0x122826e58 <col:55> 'const struct Account *' lvalue ParmVar 0x12280e248 'a1' 'const struct Account *'     |     `-UnaryOperator 0x122826f20 <col:60, col:77> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-CXXDependentScopeMemberExpr 0x122826ed8 <col:61, col:77> '<dependent type>' contains-errors lvalue ->account     |         `-RecoveryExpr 0x122826eb0 <col:61, col:71> '<dependent type>' contains-errors lvalue     |           `-DeclRefExpr 0x122826e78 <col:61> 'struct ImapData *' contains-errors lvalue Var 0x1228268e8 'a1_idata' 'struct ImapData *'     |-DeclStmt 0x122827258 <line:6:3, col:84>     | `-VarDecl 0x122827018 <col:3, col:77> col:25 used a2_canon 'const struct Account *' cinit     |   `-ConditionalOperator 0x122827228 <col:36, col:77> '<dependent type>' contains-errors     |     |-BinaryOperator 0x122827208 <col:36, col:48> 'int' contains-errors '=='     |     | |-DeclRefExpr 0x122827080 <col:36> 'struct ImapData *' contains-errors lvalue Var 0x122826c18 'a2_idata' 'struct ImapData *'     |     | `-RecoveryExpr 0x1228271e8 <col:48> '<dependent type>' contains-errors lvalue     |     |-DeclRefExpr 0x1228270d8 <col:55> 'const struct Account *' lvalue ParmVar 0x12280e338 'a2' 'const struct Account *'     |     `-UnaryOperator 0x1228271a0 <col:60, col:77> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-CXXDependentScopeMemberExpr 0x122827158 <col:61, col:77> '<dependent type>' contains-errors lvalue ->account     |         `-RecoveryExpr 0x122827130 <col:61, col:71> '<dependent type>' contains-errors lvalue     |           `-DeclRefExpr 0x1228270f8 <col:61> 'struct ImapData *' contains-errors lvalue Var 0x122826c18 'a2_idata' 'struct ImapData *'     `-ReturnStmt 0x122827458 <line:8:3, col:47>       `-CallExpr 0x1228273f8 <col:10, col:47> 'int' contains-errors         |-ImplicitCastExpr 0x1228273e0 <col:10> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x122827350 <col:10> 'int ()' Function 0x122827298 'mutt_account_match' 'int ()'         |-ImplicitCastExpr 0x122827428 <col:29> 'const struct Account *' contains-errors <LValueToRValue>         | `-DeclRefExpr 0x122827370 <col:29> 'const struct Account *' contains-errors lvalue Var 0x122826d98 'a1_canon' 'const struct Account *'         `-ImplicitCastExpr 0x122827440 <col:39> 'const struct Account *' contains-errors <LValueToRValue>           `-DeclRefExpr 0x122827390 <col:39> 'const struct Account *' contains-errors lvalue Var 0x122827018 'a2_canon' 'const struct Account *' ","21031":"`-FunctionDecl 0x13d1281a8  line:1:1 point_out 'int (int)'   |-ParmVarDecl 0x13d1280d8 <col:11> col:11 PG_FUNCTION_ARGS 'int'   `-CompoundStmt 0x13d1287e0 <line:2:1, line:6:1>     `-CallExpr 0x13d1287b8 <line:5:2, col:49> '<dependent type>' contains-errors       |-DeclRefExpr 0x13d128570 <col:2> 'int ()' Function 0x13d1284b8 'PG_RETURN_CSTRING' 'int ()'       `-CallExpr 0x13d128780 <col:20, col:48> '<dependent type>' contains-errors         |-DeclRefExpr 0x13d128670 <col:20> 'int ()' Function 0x13d1285b8 'path_encode' 'int ()'         |-RecoveryExpr 0x13d128740 <col:32> '<dependent type>' contains-errors lvalue         |-IntegerLiteral 0x13d1286a8 <col:43> 'int' 1         `-RecoveryExpr 0x13d128760 <col:46> '<dependent type>' contains-errors lvalue ","21130":"`-FunctionDecl 0x15200df18  line:1:12 invalid phar_zip_process_extra 'int (int *, int *, int)' static   |-ParmVarDecl 0x15200dd28 <col:35, col:47> col:47 invalid fp 'int *'   |-ParmVarDecl 0x15200dda8 <col:51, col:68> col:68 referenced invalid entry 'int *'   |-ParmVarDecl 0x15200de28 <col:75, col:86> col:86 referenced invalid len 'int'   `-CompoundStmt 0x15202aef8 <line:2:1, line:46:1>     |-DeclStmt 0x15200e228 <line:3:2, line:6:5>     | |-RecordDecl 0x15200dfd8 <line:3:2, line:6:2> line:3:2 invalid union definition     | | |-FieldDecl 0x15200e098 <line:4:3, col:31> col:31 invalid header 'int'     | | `-FieldDecl 0x15200e100 <line:5:3, col:18> col:18 invalid unix3 'int'     | `-VarDecl 0x15200e1a8 <line:3:2, line:6:4> col:4 used h 'union (unnamed union at dataset_diviso_filec\/func14589_nonvuln.c:3:2)':'union (unnamed at dataset_diviso_filec\/func14589_nonvuln.c:3:2)'     |-DeclStmt 0x15200e2c0 <line:7:2, col:10>     | `-VarDecl 0x15200e258 <col:2, col:6> col:6 used read 'int'     |-DoStmt 0x15202ae90 <line:9:2, line:43:14>     | |-CompoundStmt 0x15202ae20 <line:9:5, line:43:2>     | | |-IfStmt 0x152027d00 <line:10:3, line:12:3>     | | | |-BinaryOperator 0x152027c80 <line:10:7, col:83> 'int' contains-errors '!='     | | | | |-UnaryExprOrTypeTraitExpr 0x15200e340 <col:7, col:22> 'unsigned long' contains-errors sizeof     | | | | | `-ParenExpr 0x15200e320 <col:13, col:22> '<dependent type>' contains-errors lvalue     | | | | |   `-RecoveryExpr 0x15200e2f8 <col:14, col:16> '<dependent type>' contains-errors lvalue     | | | | |     `-DeclRefExpr 0x15200e2d8 <col:14> 'union (unnamed union at dataset_diviso_filec\/func14589_nonvuln.c:3:2)':'union (unnamed at dataset_diviso_filec\/func14589_nonvuln.c:3:2)' lvalue Var 0x15200e1a8 'h' 'union (unnamed union at dataset_diviso_filec\/func14589_nonvuln.c:3:2)':'union (unnamed at dataset_diviso_filec\/func14589_nonvuln.c:3:2)' non_odr_use_unevaluated     | | | | `-CallExpr 0x152027c48 <col:27, col:83> '<dependent type>' contains-errors     | | | |   |-DeclRefExpr 0x152027ae0 <col:27> 'int ()' Function 0x152027a28 'php_stream_read' 'int ()'     | | | |   |-RecoveryExpr 0x152027b00 <col:43> '<dependent type>' contains-errors lvalue     | | | |   |-CStyleCastExpr 0x152027b98 <col:47, col:59> 'char *' contains-errors <Dependent>     | | | |   | `-UnaryOperator 0x152027b68 <col:56, col:59> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | |   |   `-RecoveryExpr 0x152027b40 <col:57, col:59> '<dependent type>' contains-errors lvalue     | | | |   |     `-DeclRefExpr 0x152027b20 <col:57> 'union (unnamed union at dataset_diviso_filec\/func14589_nonvuln.c:3:2)':'union (unnamed at dataset_diviso_filec\/func14589_nonvuln.c:3:2)' lvalue Var 0x15200e1a8 'h' 'union (unnamed union at dataset_diviso_filec\/func14589_nonvuln.c:3:2)':'union (unnamed at dataset_diviso_filec\/func14589_nonvuln.c:3:2)'     | | | |   `-UnaryExprOrTypeTraitExpr 0x152027c28 <col:67, col:82> 'unsigned long' contains-errors sizeof     | | | |     `-ParenExpr 0x152027c08 <col:73, col:82> '<dependent type>' contains-errors lvalue     | | | |       `-RecoveryExpr 0x152027be0 <col:74, col:76> '<dependent type>' contains-errors lvalue     | | | |         `-DeclRefExpr 0x152027bc0 <col:74> 'union (unnamed union at dataset_diviso_filec\/func14589_nonvuln.c:3:2)':'union (unnamed at dataset_diviso_filec\/func14589_nonvuln.c:3:2)' lvalue Var 0x15200e1a8 'h' 'union (unnamed union at dataset_diviso_filec\/func14589_nonvuln.c:3:2)':'union (unnamed at dataset_diviso_filec\/func14589_nonvuln.c:3:2)' non_odr_use_unevaluated     | | | `-CompoundStmt 0x152027ce8 <col:86, line:12:3>     | | |   `-ReturnStmt 0x152027cd8 <line:11:4, col:11>     | | |     `-RecoveryExpr 0x152027cb8 <col:11> '<dependent type>' contains-errors lvalue     | | |-IfStmt 0x1520284c0 <line:14:3, line:19:3>     | | | |-BinaryOperator 0x152027f60 <line:14:7, col:52> 'int' contains-errors '||'     | | | | |-BinaryOperator 0x152027e20 <col:7, col:26> 'int' contains-errors '!='     | | | | | |-ArraySubscriptExpr 0x152027de8 <col:7, col:21> '<dependent type>' contains-errors lvalue     | | | | | | |-ImplicitCastExpr 0x152027dd0 <col:7, col:16> '<dependent type>' contains-errors <LValueToRValue>     | | | | | | | `-CXXDependentScopeMemberExpr 0x152027d68 <col:7, col:16> '<dependent type>' contains-errors lvalue .tag     | | | | | | |   `-RecoveryExpr 0x152027d40 <col:7, col:9> '<dependent type>' contains-errors lvalue     | | | | | | |     `-DeclRefExpr 0x152027d20 <col:7> 'union (unnamed union at dataset_diviso_filec\/func14589_nonvuln.c:3:2)':'union (unnamed at dataset_diviso_filec\/func14589_nonvuln.c:3:2)' lvalue Var 0x15200e1a8 'h' 'union (unnamed union at dataset_diviso_filec\/func14589_nonvuln.c:3:2)':'union (unnamed at dataset_diviso_filec\/func14589_nonvuln.c:3:2)'     | | | | | | `-IntegerLiteral 0x152027db0 <col:20> 'int' 0     | | | | | `-CharacterLiteral 0x152027e08 <col:26> 'int' 110     | | | | `-BinaryOperator 0x152027f40 <col:33, col:52> 'int' contains-errors '!='     | | | |   |-ArraySubscriptExpr 0x152027f08 <col:33, col:47> '<dependent type>' contains-errors lvalue     | | | |   | |-ImplicitCastExpr 0x152027ef0 <col:33, col:42> '<dependent type>' contains-errors <LValueToRValue>     | | | |   | | `-CXXDependentScopeMemberExpr 0x152027e88 <col:33, col:42> '<dependent type>' contains-errors lvalue .tag     | | | |   | |   `-RecoveryExpr 0x152027e60 <col:33, col:35> '<dependent type>' contains-errors lvalue     | | | |   | |     `-DeclRefExpr 0x152027e40 <col:33> 'union (unnamed union at dataset_diviso_filec\/func14589_nonvuln.c:3:2)':'union (unnamed at dataset_diviso_filec\/func14589_nonvuln.c:3:2)' lvalue Var 0x15200e1a8 'h' 'union (unnamed union at dataset_diviso_filec\/func14589_nonvuln.c:3:2)':'union (unnamed at dataset_diviso_filec\/func14589_nonvuln.c:3:2)'     | | | |   | `-IntegerLiteral 0x152027ed0 <col:46> 'int' 1     | | | |   `-CharacterLiteral 0x152027f28 <col:52> 'int' 117     | | | `-CompoundStmt 0x152028498 <col:57, line:19:3>     | | |   |-CallExpr 0x1520282c8 <line:16:4, col:60> '<dependent type>' contains-errors     | | |   | |-DeclRefExpr 0x152028060 <col:4> 'int ()' Function 0x152027fa8 'php_stream_seek' 'int ()'     | | |   | |-RecoveryExpr 0x152028080 <col:20> '<dependent type>' contains-errors lvalue     | | |   | |-CallExpr 0x152028230 <col:24, col:49> '<dependent type>' contains-errors     | | |   | | |-DeclRefExpr 0x152028180 <col:24> 'int ()' Function 0x1520280c8 'PHAR_GET_16' 'int ()'     | | |   | | `-CXXDependentScopeMemberExpr 0x1520281e8 <col:36, col:45> '<dependent type>' contains-errors lvalue .size     | | |   | |   `-RecoveryExpr 0x1520281c0 <col:36, col:38> '<dependent type>' contains-errors lvalue     | | |   | |     `-DeclRefExpr 0x1520281a0 <col:36> 'union (unnamed union at dataset_diviso_filec\/func14589_nonvuln.c:3:2)':'union (unnamed at dataset_diviso_filec\/func14589_nonvuln.c:3:2)' lvalue Var 0x15200e1a8 'h' 'union (unnamed union at dataset_diviso_filec\/func14589_nonvuln.c:3:2)':'union (unnamed at dataset_diviso_filec\/func14589_nonvuln.c:3:2)'     | | |   | `-RecoveryExpr 0x1520282a8 <col:52> '<dependent type>' contains-errors lvalue     | | |   |-CompoundAssignOperator 0x152028460 <line:17:4, col:40> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | | |   | |-RecoveryExpr 0x152028320 <col:4> '<dependent type>' contains-errors lvalue     | | |   | | `-DeclRefExpr 0x152028300 <col:4> 'int' lvalue ParmVar 0x15200de28 'len' 'int'     | | |   | `-BinaryOperator 0x152028440 <col:11, col:40> '<dependent type>' contains-errors '+'     | | |   |   |-CallExpr 0x1520283f8 <col:11, col:36> '<dependent type>' contains-errors     | | |   |   | |-DeclRefExpr 0x152028348 <col:11> 'int ()' Function 0x1520280c8 'PHAR_GET_16' 'int ()'     | | |   |   | `-CXXDependentScopeMemberExpr 0x1520283b0 <col:23, col:32> '<dependent type>' contains-errors lvalue .size     | | |   |   |   `-RecoveryExpr 0x152028388 <col:23, col:25> '<dependent type>' contains-errors lvalue     | | |   |   |     `-DeclRefExpr 0x152028368 <col:23> 'union (unnamed union at dataset_diviso_filec\/func14589_nonvuln.c:3:2)':'union (unnamed at dataset_diviso_filec\/func14589_nonvuln.c:3:2)' lvalue Var 0x15200e1a8 'h' 'union (unnamed union at dataset_diviso_filec\/func14589_nonvuln.c:3:2)':'union (unnamed at dataset_diviso_filec\/func14589_nonvuln.c:3:2)'     | | |   |   `-IntegerLiteral 0x152028420 <col:40> 'int' 4     | | |   `-ContinueStmt 0x152028490 <line:18:4>     | | |-BinaryOperator 0x1520287b0 <line:22:3, col:91> 'int' contains-errors '='     | | | |-DeclRefExpr 0x1520284e0 <col:3> 'int' lvalue Var 0x15200e258 'read' 'int'     | | | `-CallExpr 0x152028778 <col:10, col:91> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x152028500 <col:10> 'int ()' Function 0x152027a28 'php_stream_read' 'int ()'     | | |   |-RecoveryExpr 0x152028520 <col:26> '<dependent type>' contains-errors lvalue     | | |   |-CStyleCastExpr 0x152028620 <col:30, col:54> 'char *' contains-errors <Dependent>     | | |   | `-UnaryOperator 0x1520285f0 <col:39, col:54> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   |   `-ParenExpr 0x1520285d0 <col:40, col:54> '<dependent type>' contains-errors lvalue     | | |   |     `-CXXDependentScopeMemberExpr 0x152028588 <col:41, col:49> '<dependent type>' contains-errors lvalue .crc32     | | |   |       `-RecoveryExpr 0x152028560 <col:41, col:43> '<dependent type>' contains-errors lvalue     | | |   |         `-DeclRefExpr 0x152028540 <col:41> 'union (unnamed union at dataset_diviso_filec\/func14589_nonvuln.c:3:2)':'union (unnamed at dataset_diviso_filec\/func14589_nonvuln.c:3:2)' lvalue Var 0x15200e1a8 'h' 'union (unnamed union at dataset_diviso_filec\/func14589_nonvuln.c:3:2)':'union (unnamed at dataset_diviso_filec\/func14589_nonvuln.c:3:2)'     | | |   `-BinaryOperator 0x152028758 <col:57, col:90> 'unsigned long' contains-errors '-'     | | |     |-UnaryExprOrTypeTraitExpr 0x1520286b0 <col:57, col:71> 'unsigned long' contains-errors sizeof     | | |     | `-ParenExpr 0x152028690 <col:63, col:71> '<dependent type>' contains-errors lvalue     | | |     |   `-RecoveryExpr 0x152028668 <col:64, col:66> '<dependent type>' contains-errors lvalue     | | |     |     `-DeclRefExpr 0x152028648 <col:64> 'union (unnamed union at dataset_diviso_filec\/func14589_nonvuln.c:3:2)':'union (unnamed at dataset_diviso_filec\/func14589_nonvuln.c:3:2)' lvalue Var 0x15200e1a8 'h' 'union (unnamed union at dataset_diviso_filec\/func14589_nonvuln.c:3:2)':'union (unnamed at dataset_diviso_filec\/func14589_nonvuln.c:3:2)' non_odr_use_unevaluated     | | |     `-UnaryExprOrTypeTraitExpr 0x152028738 <col:75, col:90> 'unsigned long' contains-errors sizeof     | | |       `-ParenExpr 0x152028718 <col:81, col:90> '<dependent type>' contains-errors lvalue     | | |         `-RecoveryExpr 0x1520286f0 <col:82, col:84> '<dependent type>' contains-errors lvalue     | | |           `-DeclRefExpr 0x1520286d0 <col:82> 'union (unnamed union at dataset_diviso_filec\/func14589_nonvuln.c:3:2)':'union (unnamed at dataset_diviso_filec\/func14589_nonvuln.c:3:2)' lvalue Var 0x15200e1a8 'h' 'union (unnamed union at dataset_diviso_filec\/func14589_nonvuln.c:3:2)':'union (unnamed at dataset_diviso_filec\/func14589_nonvuln.c:3:2)' non_odr_use_unevaluated     | | |-CompoundAssignOperator 0x152028890 <line:23:3, col:17> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | | | |-RecoveryExpr 0x1520287f0 <col:3> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x1520287d0 <col:3> 'int' lvalue ParmVar 0x15200de28 'len' 'int'     | | | `-BinaryOperator 0x152028870 <col:10, col:17> 'int' '+'     | | |   |-ImplicitCastExpr 0x152028858 <col:10> 'int' <LValueToRValue>     | | |   | `-DeclRefExpr 0x152028818 <col:10> 'int' lvalue Var 0x15200e258 'read' 'int'     | | |   `-IntegerLiteral 0x152028838 <col:17> 'int' 4     | | |-IfStmt 0x15202a2d0 <line:25:3, line:27:3>     | | | |-BinaryOperator 0x15202a250 <line:25:7, col:45> 'int' contains-errors '!='     | | | | |-BinaryOperator 0x1520289d0 <col:7, col:40> 'unsigned long' contains-errors '-'     | | | | | |-UnaryExprOrTypeTraitExpr 0x152028928 <col:7, col:21> 'unsigned long' contains-errors sizeof     | | | | | | `-ParenExpr 0x152028908 <col:13, col:21> '<dependent type>' contains-errors lvalue     | | | | | |   `-RecoveryExpr 0x1520288e0 <col:14, col:16> '<dependent type>' contains-errors lvalue     | | | | | |     `-DeclRefExpr 0x1520288c0 <col:14> 'union (unnamed union at dataset_diviso_filec\/func14589_nonvuln.c:3:2)':'union (unnamed at dataset_diviso_filec\/func14589_nonvuln.c:3:2)' lvalue Var 0x15200e1a8 'h' 'union (unnamed union at dataset_diviso_filec\/func14589_nonvuln.c:3:2)':'union (unnamed at dataset_diviso_filec\/func14589_nonvuln.c:3:2)' non_odr_use_unevaluated     | | | | | `-UnaryExprOrTypeTraitExpr 0x1520289b0 <col:25, col:40> 'unsigned long' contains-errors sizeof     | | | | |   `-ParenExpr 0x152028990 <col:31, col:40> '<dependent type>' contains-errors lvalue     | | | | |     `-RecoveryExpr 0x152028968 <col:32, col:34> '<dependent type>' contains-errors lvalue     | | | | |       `-DeclRefExpr 0x152028948 <col:32> 'union (unnamed union at dataset_diviso_filec\/func14589_nonvuln.c:3:2)':'union (unnamed at dataset_diviso_filec\/func14589_nonvuln.c:3:2)' lvalue Var 0x15200e1a8 'h' 'union (unnamed union at dataset_diviso_filec\/func14589_nonvuln.c:3:2)':'union (unnamed at dataset_diviso_filec\/func14589_nonvuln.c:3:2)' non_odr_use_unevaluated     | | | | `-ImplicitCastExpr 0x15202a238 <col:45> 'unsigned long' <IntegralCast>     | | | |   `-ImplicitCastExpr 0x15202a220 <col:45> 'int' <LValueToRValue>     | | | |     `-DeclRefExpr 0x15202a200 <col:45> 'int' lvalue Var 0x15200e258 'read' 'int'     | | | `-CompoundStmt 0x15202a2b8 <col:51, line:27:3>     | | |   `-ReturnStmt 0x15202a2a8 <line:26:4, col:11>     | | |     `-RecoveryExpr 0x15202a288 <col:11> '<dependent type>' contains-errors lvalue     | | |-IfStmt 0x15202a790 <line:29:3, line:32:3>     | | | |-BinaryOperator 0x15202a4a8 <line:29:7, col:53> 'int' contains-errors '>'     | | | | |-CallExpr 0x15202a3a0 <col:7, col:31> '<dependent type>' contains-errors     | | | | | |-DeclRefExpr 0x15202a2f0 <col:7> 'int ()' Function 0x1520280c8 'PHAR_GET_16' 'int ()'     | | | | | `-CXXDependentScopeMemberExpr 0x15202a358 <col:19, col:27> '<dependent type>' contains-errors lvalue .size     | | | | |   `-RecoveryExpr 0x15202a330 <col:19, col:21> '<dependent type>' contains-errors lvalue     | | | | |     `-DeclRefExpr 0x15202a310 <col:19> 'union (unnamed union at dataset_diviso_filec\/func14589_nonvuln.c:3:2)':'union (unnamed at dataset_diviso_filec\/func14589_nonvuln.c:3:2)' lvalue Var 0x15200e1a8 'h' 'union (unnamed union at dataset_diviso_filec\/func14589_nonvuln.c:3:2)':'union (unnamed at dataset_diviso_filec\/func14589_nonvuln.c:3:2)'     | | | | `-BinaryOperator 0x15202a488 <col:35, col:53> 'unsigned long' contains-errors '-'     | | | |   |-UnaryExprOrTypeTraitExpr 0x15202a430 <col:35, col:49> 'unsigned long' contains-errors sizeof     | | | |   | `-ParenExpr 0x15202a410 <col:41, col:49> '<dependent type>' contains-errors lvalue     | | | |   |   `-RecoveryExpr 0x15202a3e8 <col:42, col:44> '<dependent type>' contains-errors lvalue     | | | |   |     `-DeclRefExpr 0x15202a3c8 <col:42> 'union (unnamed union at dataset_diviso_filec\/func14589_nonvuln.c:3:2)':'union (unnamed at dataset_diviso_filec\/func14589_nonvuln.c:3:2)' lvalue Var 0x15200e1a8 'h' 'union (unnamed union at dataset_diviso_filec\/func14589_nonvuln.c:3:2)':'union (unnamed at dataset_diviso_filec\/func14589_nonvuln.c:3:2)' non_odr_use_unevaluated     | | | |   `-ImplicitCastExpr 0x15202a470 <col:53> 'unsigned long' <IntegralCast>     | | | |     `-IntegerLiteral 0x15202a450 <col:53> 'int' 4     | | | `-CompoundStmt 0x15202a778 <col:56, line:32:3>     | | |   `-CallExpr 0x15202a740 <line:31:4, col:82> '<dependent type>' contains-errors     | | |     |-DeclRefExpr 0x15202a4c8 <col:4> 'int ()' Function 0x152027fa8 'php_stream_seek' 'int ()'     | | |     |-RecoveryExpr 0x15202a4e8 <col:20> '<dependent type>' contains-errors lvalue     | | |     |-BinaryOperator 0x15202a6b0 <col:24, col:71> '<dependent type>' contains-errors '-'     | | |     | |-CallExpr 0x15202a5b8 <col:24, col:48> '<dependent type>' contains-errors     | | |     | | |-DeclRefExpr 0x15202a508 <col:24> 'int ()' Function 0x1520280c8 'PHAR_GET_16' 'int ()'     | | |     | | `-CXXDependentScopeMemberExpr 0x15202a570 <col:36, col:44> '<dependent type>' contains-errors lvalue .size     | | |     | |   `-RecoveryExpr 0x15202a548 <col:36, col:38> '<dependent type>' contains-errors lvalue     | | |     | |     `-DeclRefExpr 0x15202a528 <col:36> 'union (unnamed union at dataset_diviso_filec\/func14589_nonvuln.c:3:2)':'union (unnamed at dataset_diviso_filec\/func14589_nonvuln.c:3:2)' lvalue Var 0x15200e1a8 'h' 'union (unnamed union at dataset_diviso_filec\/func14589_nonvuln.c:3:2)':'union (unnamed at dataset_diviso_filec\/func14589_nonvuln.c:3:2)'     | | |     | `-UnaryExprOrTypeTraitExpr 0x15202a690 <col:52, col:71> 'unsigned long' contains-errors sizeof     | | |     |   `-ParenExpr 0x15202a670 <col:58, col:71> '<dependent type>' contains-errors lvalue     | | |     |     `-CXXDependentScopeMemberExpr 0x15202a628 <col:59, col:67> '<dependent type>' contains-errors lvalue .size     | | |     |       `-RecoveryExpr 0x15202a600 <col:59, col:61> '<dependent type>' contains-errors lvalue     | | |     |         `-DeclRefExpr 0x15202a5e0 <col:59> 'union (unnamed union at dataset_diviso_filec\/func14589_nonvuln.c:3:2)':'union (unnamed at dataset_diviso_filec\/func14589_nonvuln.c:3:2)' lvalue Var 0x15200e1a8 'h' 'union (unnamed union at dataset_diviso_filec\/func14589_nonvuln.c:3:2)':'union (unnamed at dataset_diviso_filec\/func14589_nonvuln.c:3:2)' non_odr_use_unevaluated     | | |     `-RecoveryExpr 0x15202a720 <col:74> '<dependent type>' contains-errors lvalue     | | |-CompoundAssignOperator 0x15202a8a8 <line:35:3, col:19> '<dependent type>' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | | | |-CXXDependentScopeMemberExpr 0x15202a7f8 <col:3, col:10> '<dependent type>' contains-errors lvalue ->flags     | | | | `-RecoveryExpr 0x15202a7d0 <col:3> '<dependent type>' contains-errors lvalue     | | | |   `-DeclRefExpr 0x15202a7b0 <col:3> 'int *' lvalue ParmVar 0x15200dda8 'entry' 'int *'     | | | `-RecoveryExpr 0x15202a888 <col:19> '<dependent type>' contains-errors lvalue     | | `-IfStmt 0x15202adf0 <line:37:3, line:41:3> has_else     | |   |-CXXDependentScopeMemberExpr 0x15202a8f8 <line:37:7, col:14> '<dependent type>' contains-errors lvalue ->is_dir     | |   | `-RecoveryExpr 0x15202a8d8 <col:7> '<dependent type>' contains-errors lvalue     | |   |-CompoundStmt 0x15202ab80 <col:22, line:39:3>     | |   | `-CompoundAssignOperator 0x15202ab50 <line:38:4, col:49> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |   |   |-CXXDependentScopeMemberExpr 0x15202a988 <col:4, col:11> '<dependent type>' contains-errors lvalue ->flags     | |   |   | `-RecoveryExpr 0x15202a960 <col:4> '<dependent type>' contains-errors lvalue     | |   |   |   `-DeclRefExpr 0x15202a940 <col:4> 'int *' lvalue ParmVar 0x15200dda8 'entry' 'int *'     | |   |   `-BinaryOperator 0x15202ab30 <col:20, col:49> '<dependent type>' contains-errors '&'     | |   |     |-CallExpr 0x15202aa80 <col:20, col:45> '<dependent type>' contains-errors     | |   |     | |-DeclRefExpr 0x15202a9d0 <col:20> 'int ()' Function 0x1520280c8 'PHAR_GET_16' 'int ()'     | |   |     | `-CXXDependentScopeMemberExpr 0x15202aa38 <col:32, col:40> '<dependent type>' contains-errors lvalue .perms     | |   |     |   `-RecoveryExpr 0x15202aa10 <col:32, col:34> '<dependent type>' contains-errors lvalue     | |   |     |     `-DeclRefExpr 0x15202a9f0 <col:32> 'union (unnamed union at dataset_diviso_filec\/func14589_nonvuln.c:3:2)':'union (unnamed at dataset_diviso_filec\/func14589_nonvuln.c:3:2)' lvalue Var 0x15200e1a8 'h' 'union (unnamed union at dataset_diviso_filec\/func14589_nonvuln.c:3:2)':'union (unnamed at dataset_diviso_filec\/func14589_nonvuln.c:3:2)'     | |   |     `-RecoveryExpr 0x15202ab10 <col:49> '<dependent type>' contains-errors lvalue     | |   `-CompoundStmt 0x15202add8 <line:39:10, line:41:3>     | |     `-CompoundAssignOperator 0x15202ada8 <line:40:4, col:49> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |       |-CXXDependentScopeMemberExpr 0x15202abe0 <col:4, col:11> '<dependent type>' contains-errors lvalue ->flags     | |       | `-RecoveryExpr 0x15202abb8 <col:4> '<dependent type>' contains-errors lvalue     | |       |   `-DeclRefExpr 0x15202ab98 <col:4> 'int *' lvalue ParmVar 0x15200dda8 'entry' 'int *'     | |       `-BinaryOperator 0x15202ad88 <col:20, col:49> '<dependent type>' contains-errors '&'     | |         |-CallExpr 0x15202acd8 <col:20, col:45> '<dependent type>' contains-errors     | |         | |-DeclRefExpr 0x15202ac28 <col:20> 'int ()' Function 0x1520280c8 'PHAR_GET_16' 'int ()'     | |         | `-CXXDependentScopeMemberExpr 0x15202ac90 <col:32, col:40> '<dependent type>' contains-errors lvalue .perms     | |         |   `-RecoveryExpr 0x15202ac68 <col:32, col:34> '<dependent type>' contains-errors lvalue     | |         |     `-DeclRefExpr 0x15202ac48 <col:32> 'union (unnamed union at dataset_diviso_filec\/func14589_nonvuln.c:3:2)':'union (unnamed at dataset_diviso_filec\/func14589_nonvuln.c:3:2)' lvalue Var 0x15200e1a8 'h' 'union (unnamed union at dataset_diviso_filec\/func14589_nonvuln.c:3:2)':'union (unnamed at dataset_diviso_filec\/func14589_nonvuln.c:3:2)'     | |         `-RecoveryExpr 0x15202ad68 <col:49> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x15202ae70 <line:43:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x15202aee8 <line:45:2, col:9>       `-RecoveryExpr 0x15202aec8 <col:9> '<dependent type>' contains-errors lvalue ","20422":"`-FunctionDecl 0x14602ccd8  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x14602cdd8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x14602ce40 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x14602cea8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14602cd80 <<invalid sloc>> Implicit 882 ","20835":"`-FunctionDecl 0x159027bc0  col:7 implicit used memchr 'void *(const void *, int, unsigned long)' extern   |-ParmVarDecl 0x159027cc0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x159027d28 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x159027d90 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x159027c68 <<invalid sloc>> Implicit 892 ","20582":"`-FunctionDecl 0x15b129518  line:4:5 State 'int ()'   `-CompoundStmt 0x15b129ab0 <line:91:5, line:112:42>     |-DeclStmt 0x15b129688 <line:92:7, col:12>     | `-VarDecl 0x15b129620 <col:7, col:11> col:11 used i 'int'     |-DeclStmt 0x15b129770 <line:93:7, col:33>     | `-VarDecl 0x15b1296b8 <col:7, col:23> col:13 used via_ptr 'char *' cinit     |   `-RecoveryExpr 0x15b129750 <col:23> '<dependent type>' contains-errors lvalue     `-ForStmt 0x15b129970 <line:95:7, line:97:7>       |-BinaryOperator 0x15b1297c8 <line:95:12, col:16> 'int' '='       | |-DeclRefExpr 0x15b129788 <col:12> 'int' lvalue Var 0x15b129620 'i' 'int'       | `-IntegerLiteral 0x15b1297a8 <col:16> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x15b129860 <col:19, col:23> 'int' contains-errors '<'       | |-DeclRefExpr 0x15b1297e8 <col:19> 'int' lvalue Var 0x15b129620 'i' 'int'       | `-RecoveryExpr 0x15b129840 <col:23> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x15b1298a0 <col:40, col:41> 'int' postfix '++'       | `-DeclRefExpr 0x15b129880 <col:40> 'int' lvalue Var 0x15b129620 'i' 'int'       `-CompoundStmt 0x15b129958 <col:45, line:97:7>         `-BinaryOperator 0x15b129938 <line:96:9, col:22> 'char' contains-errors '='           |-UnaryOperator 0x15b1298f0 <col:9, col:17> 'char' contains-errors lvalue prefix '*' cannot overflow           | `-UnaryOperator 0x15b1298d8 <col:10, col:17> 'char *' contains-errors postfix '++'           |   `-DeclRefExpr 0x15b1298b8 <col:10> 'char *' contains-errors lvalue Var 0x15b1296b8 'via_ptr' 'char *'           `-ImplicitCastExpr 0x15b129920 <col:22> 'char' <IntegralCast>             `-CharacterLiteral 0x15b129908 <col:22> 'int' 32 ","20203":"`-FunctionDecl 0x137913540  line:1:13 icmp_reply 'void (struct icmp_bxm *, struct sk_buff *)' static   |-ParmVarDecl 0x1378fb048 <col:24, col:41> col:41 used icmp_param 'struct icmp_bxm *'   |-ParmVarDecl 0x137913428 <col:53, col:69> col:69 used skb 'struct sk_buff *'   `-CompoundStmt 0x14781dde0 <line:2:1, line:47:1>     |-DeclStmt 0x1379137b8 <line:3:2, col:24>     | |-RecordDecl 0x137913640 <col:2, col:9> col:9 struct ipcm_cookie     | `-VarDecl 0x137913738 <col:2, col:21> col:21 referenced invalid ipc 'struct ipcm_cookie'     |-DeclStmt 0x137913bc8 <line:4:2, col:37>     | |-RecordDecl 0x1379137d0 <col:2, col:9> col:9 struct rtable     | `-VarDecl 0x137913938 <col:2, col:36> col:17 used rt 'struct rtable *' cinit     |   `-ImplicitCastExpr 0x137913b98 <col:22, col:36> 'struct rtable *' <IntegralToPointer>     |     `-CallExpr 0x137913b58 <col:22, col:36> 'int'     |       |-ImplicitCastExpr 0x137913b40 <col:22> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x137913ad0 <col:22> 'int ()' Function 0x137913a18 'skb_rtable' 'int ()'     |       `-ImplicitCastExpr 0x137913b80 <col:33> 'struct sk_buff *' <LValueToRValue>     |         `-DeclRefExpr 0x137913af0 <col:33> 'struct sk_buff *' lvalue ParmVar 0x137913428 'skb' 'struct sk_buff *'     |-DeclStmt 0x137913f98 <line:5:2, col:40>     | |-RecordDecl 0x137913be0 <col:2, col:9> col:9 struct net     | `-VarDecl 0x137913d48 <col:2, col:39> col:14 used net 'struct net *' cinit     |   `-CallExpr 0x137913f58 <col:20, col:39> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x137913e90 <col:20> 'int ()' Function 0x137913dd8 'dev_net' 'int ()'     |     `-CXXDependentScopeMemberExpr 0x137913f10 <col:28, col:36> '<dependent type>' contains-errors lvalue .dev     |       `-RecoveryExpr 0x137913ee8 <col:28, col:32> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x137913eb0 <col:28> 'struct rtable *' lvalue Var 0x137913938 'rt' 'struct rtable *'     |-DeclStmt 0x137914198 <line:6:2, col:17>     | |-RecordDecl 0x137913fb0 <col:2, col:9> col:9 struct sock     | `-VarDecl 0x137914118 <col:2, col:15> col:15 used sk 'struct sock *'     |-DeclStmt 0x137914398 <line:7:2, col:24>     | |-RecordDecl 0x1379141b0 <col:2, col:9> col:9 struct inet_sock     | `-VarDecl 0x137914318 <col:2, col:20> col:20 used inet 'struct inet_sock *'     |-IfStmt 0x14781bbb0 <line:10:2, line:11:3>     | |-CallExpr 0x14781bb70 <line:10:6, col:49> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14781bab8 <col:6> 'int ()' Function 0x14781ba00 'ip_options_echo' 'int ()'     | | |-UnaryOperator 0x14781bb38 <col:22, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | `-RecoveryExpr 0x14781bb10 <col:23, col:35> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x14781bad8 <col:23> 'struct icmp_bxm *' lvalue ParmVar 0x1378fb048 'icmp_param' 'struct icmp_bxm *'     | | `-DeclRefExpr 0x14781bb50 <col:46> 'struct sk_buff *' lvalue ParmVar 0x137913428 'skb' 'struct sk_buff *'     | `-ReturnStmt 0x14781bba0 <line:11:3>     |-BinaryOperator 0x14781bd80 <line:13:2, col:25> 'struct sock *' contains-errors '='     | |-DeclRefExpr 0x14781bbd0 <col:2> 'struct sock *' lvalue Var 0x137914118 'sk' 'struct sock *'     | `-ImplicitCastExpr 0x14781bd68 <col:7, col:25> 'struct sock *' contains-errors <IntegralToPointer>     |   `-CallExpr 0x14781bd28 <col:7, col:25> 'int' contains-errors     |     |-ImplicitCastExpr 0x14781bd10 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14781bcd0 <col:7> 'int ()' Function 0x14781bc18 'icmp_xmit_lock' 'int ()'     |     `-ImplicitCastExpr 0x14781bd50 <col:22> 'struct net *' contains-errors <LValueToRValue>     |       `-DeclRefExpr 0x14781bcf0 <col:22> 'struct net *' contains-errors lvalue Var 0x137913d48 'net' 'struct net *'     |-IfStmt 0x14781be48 <line:14:2, line:15:3>     | |-BinaryOperator 0x14781be18 <line:14:6, col:12> 'int' contains-errors '=='     | | |-DeclRefExpr 0x14781bda0 <col:6> 'struct sock *' lvalue Var 0x137914118 'sk' 'struct sock *'     | | `-RecoveryExpr 0x14781bdf8 <col:12> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14781be38 <line:15:3>     |-BinaryOperator 0x14781c018 <line:16:2, col:19> 'struct inet_sock *' '='     | |-DeclRefExpr 0x14781be68 <col:2> 'struct inet_sock *' lvalue Var 0x137914318 'inet' 'struct inet_sock *'     | `-ImplicitCastExpr 0x14781c000 <col:9, col:19> 'struct inet_sock *' <IntegralToPointer>     |   `-CallExpr 0x14781bfc0 <col:9, col:19> 'int'     |     |-ImplicitCastExpr 0x14781bfa8 <col:9> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14781bf68 <col:9> 'int ()' Function 0x14781beb0 'inet_sk' 'int ()'     |     `-ImplicitCastExpr 0x14781bfe8 <col:17> 'struct sock *' <LValueToRValue>     |       `-DeclRefExpr 0x14781bf88 <col:17> 'struct sock *' lvalue Var 0x137914118 'sk' 'struct sock *'     |-BinaryOperator 0x14781c148 <line:18:2, col:36> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14781c0e0 <col:2, col:25> '<dependent type>' contains-errors lvalue .checksum     | | `-CXXDependentScopeMemberExpr 0x14781c098 <col:2, col:19> '<dependent type>' contains-errors lvalue .icmph     | |   `-RecoveryExpr 0x14781c070 <col:2, col:14> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x14781c038 <col:2> 'struct icmp_bxm *' lvalue ParmVar 0x1378fb048 'icmp_param' 'struct icmp_bxm *'     | `-IntegerLiteral 0x14781c128 <col:36> 'int' 0     |-BinaryOperator 0x14781c368 <line:20:2, col:27> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14781c1a0 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14781c168 <col:2> 'struct inet_sock *' lvalue Var 0x137914318 'inet' 'struct inet_sock *'     | `-RecoveryExpr 0x14781c340 <col:14, col:27> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x14781c300 <col:14, col:24> 'int'     |     |-ImplicitCastExpr 0x14781c2e8 <col:14> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14781c2a8 <col:14> 'int ()' Function 0x14781c1f0 'ip_hdr' 'int ()'     |     `-ImplicitCastExpr 0x14781c328 <col:21> 'struct sk_buff *' <LValueToRValue>     |       `-DeclRefExpr 0x14781c2c8 <col:21> 'struct sk_buff *' lvalue ParmVar 0x137913428 'skb' 'struct sk_buff *'     |-BinaryOperator 0x14781c558 <line:22:2, col:12> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14781c4b8 <col:2, col:6> '<dependent type>' contains-errors lvalue .opt     | | `-RecoveryExpr 0x14781c490 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14781c470 <col:2> 'struct ipcm_cookie' lvalue Var 0x137913738 'ipc' 'struct ipcm_cookie'     | `-RecoveryExpr 0x14781c538 <col:12> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14781c628 <line:23:2, col:17> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14781c5c0 <col:2, col:6> '<dependent type>' contains-errors lvalue .tx_flags     | | `-RecoveryExpr 0x14781c598 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14781c578 <col:2> 'struct ipcm_cookie' lvalue Var 0x137913738 'ipc' 'struct ipcm_cookie'     | `-IntegerLiteral 0x14781c608 <col:17> 'int' 0     |-IfStmt 0x14781c988 <line:24:2, line:28:2>     | |-CXXDependentScopeMemberExpr 0x14781c6a8 <line:24:6, col:28> '<dependent type>' contains-errors lvalue .optlen     | | `-RecoveryExpr 0x14781c680 <col:6, col:18> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14781c648 <col:6> 'struct icmp_bxm *' lvalue ParmVar 0x1378fb048 'icmp_param' 'struct icmp_bxm *'     | `-CompoundStmt 0x14781c970 <col:36, line:28:2>     |   `-BinaryOperator 0x14781c7f8 <line:25:3, col:26> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x14781c738 <col:3, col:7> '<dependent type>' contains-errors lvalue .opt     |     | `-RecoveryExpr 0x14781c710 <col:3> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x14781c6f0 <col:3> 'struct ipcm_cookie' lvalue Var 0x137913738 'ipc' 'struct ipcm_cookie'     |     `-UnaryOperator 0x14781c7e0 <col:13, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x14781c7b8 <col:14, col:26> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x14781c780 <col:14> 'struct icmp_bxm *' lvalue ParmVar 0x1378fb048 'icmp_param' 'struct icmp_bxm *'     |-CompoundStmt 0x14781d4d0 <line:29:2, line:40:2>     | |-DeclStmt 0x14781ce40 <line:30:3, line:35:4>     | | |-RecordDecl 0x14781ca00 <line:30:3, col:10> col:10 struct flowi4     | | `-VarDecl 0x14781caf8 <col:3, col:17> col:17 invalid fl4 'struct flowi4'     | |-CallExpr 0x14781d0d8 <line:36:3, col:56> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14781cf38 <col:3> 'int ()' Function 0x14781ce80 'security_skb_classify_flow' 'int ()'     | | |-DeclRefExpr 0x14781cf58 <col:30> 'struct sk_buff *' lvalue ParmVar 0x137913428 'skb' 'struct sk_buff *'     | | `-CallExpr 0x14781d0b0 <col:35, col:55> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x14781d058 <col:35> 'int ()' Function 0x14781cfa0 'flowi4_to_flowi' 'int ()'     | |   `-UnaryOperator 0x14781d098 <col:51, col:52> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-RecoveryExpr 0x14781d078 <col:52> '<dependent type>' contains-errors lvalue     | |-BinaryOperator 0x14781d2b0 <line:37:3, col:37> 'struct rtable *' contains-errors '='     | | |-DeclRefExpr 0x14781d108 <col:3> 'struct rtable *' lvalue Var 0x137913938 'rt' 'struct rtable *'     | | `-CallExpr 0x14781d280 <col:8, col:37> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x14781d208 <col:8> 'int ()' Function 0x14781d150 'ip_route_output_key' 'int ()'     | |   |-DeclRefExpr 0x14781d228 <col:28> 'struct net *' contains-errors lvalue Var 0x137913d48 'net' 'struct net *'     | |   `-UnaryOperator 0x14781d268 <col:33, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-RecoveryExpr 0x14781d248 <col:34> '<dependent type>' contains-errors lvalue     | `-IfStmt 0x14781d4b0 <line:38:3, line:39:9>     |   |-CallExpr 0x14781d408 <line:38:7, col:16> 'int'     |   | |-ImplicitCastExpr 0x14781d3f0 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14781d3b0 <col:7> 'int ()' Function 0x14781d2f8 'IS_ERR' 'int ()'     |   | `-ImplicitCastExpr 0x14781d430 <col:14> 'struct rtable *' <LValueToRValue>     |   |   `-DeclRefExpr 0x14781d3d0 <col:14> 'struct rtable *' lvalue Var 0x137913938 'rt' 'struct rtable *'     |   `-GotoStmt 0x14781d498 <line:39:4, col:9> 'out_unlock' 0x14781d448     |-IfStmt 0x14781dab0 <line:41:2, line:43:40>     | |-CallExpr 0x14781d820 <line:41:6, line:42:38> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14781d5e0 <line:41:6> 'int ()' Function 0x14781d528 'icmpv4_xrlim_allow' 'int ()'     | | |-DeclRefExpr 0x14781d600 <col:25> 'struct net *' contains-errors lvalue Var 0x137913d48 'net' 'struct net *'     | | |-DeclRefExpr 0x14781d620 <col:30> 'struct rtable *' lvalue Var 0x137913938 'rt' 'struct rtable *'     | | |-CXXDependentScopeMemberExpr 0x14781d6e8 <col:34, col:57> '<dependent type>' contains-errors lvalue .type     | | | `-CXXDependentScopeMemberExpr 0x14781d6a0 <col:34, col:51> '<dependent type>' contains-errors lvalue .icmph     | | |   `-RecoveryExpr 0x14781d678 <col:34, col:46> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x14781d640 <col:34> 'struct icmp_bxm *' lvalue ParmVar 0x1378fb048 'icmp_param' 'struct icmp_bxm *'     | | `-CXXDependentScopeMemberExpr 0x14781d7d8 <line:42:11, col:34> '<dependent type>' contains-errors lvalue .code     | |   `-CXXDependentScopeMemberExpr 0x14781d790 <col:11, col:28> '<dependent type>' contains-errors lvalue .icmph     | |     `-RecoveryExpr 0x14781d768 <col:11, col:23> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x14781d730 <col:11> 'struct icmp_bxm *' lvalue ParmVar 0x1378fb048 'icmp_param' 'struct icmp_bxm *'     | `-CallExpr 0x14781da78 <line:43:3, col:40> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14781d940 <col:3> 'int ()' Function 0x14781d888 'icmp_push_reply' 'int ()'     |   |-DeclRefExpr 0x14781d960 <col:19> 'struct icmp_bxm *' lvalue ParmVar 0x1378fb048 'icmp_param' 'struct icmp_bxm *'     |   |-UnaryOperator 0x14781d9a0 <col:31, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x14781d980 <col:32> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x14781da60 <col:37, col:38> 'struct rtable **' prefix '&' cannot overflow     |     `-DeclRefExpr 0x14781d9b8 <col:38> 'struct rtable *' lvalue Var 0x137913938 'rt' 'struct rtable *'     |-CallExpr 0x14781dc08 <line:44:2, col:14> 'int'     | |-ImplicitCastExpr 0x14781dbf0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14781dbb0 <col:2> 'int ()' Function 0x14781daf8 'ip_rt_put' 'int ()'     | `-ImplicitCastExpr 0x14781dc30 <col:12> 'struct rtable *' <LValueToRValue>     |   `-DeclRefExpr 0x14781dbd0 <col:12> 'struct rtable *' lvalue Var 0x137913938 'rt' 'struct rtable *'     `-LabelStmt 0x14781ddc0 <line:45:1, line:46:21> 'out_unlock'       `-CallExpr 0x14781dd80 <col:2, col:21> 'int'         |-ImplicitCastExpr 0x14781dd68 <col:2> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x14781dd28 <col:2> 'int ()' Function 0x14781dc70 'icmp_xmit_unlock' 'int ()'         `-ImplicitCastExpr 0x14781dda8 <col:19> 'struct sock *' <LValueToRValue>           `-DeclRefExpr 0x14781dd48 <col:19> 'struct sock *' lvalue Var 0x137914118 'sk' 'struct sock *' ","21135":"`-FunctionDecl 0x13c1261f0  line:1:6 invalid gf_m2ts_reset_parsers 'void (int *)'   |-ParmVarDecl 0x13c126128 <col:28, col:45> col:45 referenced invalid ts 'int *'   `-CompoundStmt 0x13c8084c0 <line:2:1, line:14:1>     |-CallExpr 0x13c1264a8 <line:3:2, col:44> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13c126400 <col:2> 'int ()' Function 0x13c126348 'gf_m2ts_reset_parsers_for_program' 'int ()'     | |-RecoveryExpr 0x13c126420 <col:36> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x13c126488 <col:40> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13c126588 <line:5:2, col:19> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13c126520 <col:2, col:6> '<dependent type>' contains-errors lvalue ->pck_number     | | `-RecoveryExpr 0x13c1264f8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13c1264d8 <col:2> 'int *' lvalue ParmVar 0x13c126128 'ts' 'int *'     | `-IntegerLiteral 0x13c126568 <col:19> 'int' 0     |-CallExpr 0x13c126710 <line:7:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13c126688 <col:2> 'int ()' Function 0x13c1265d0 'gf_m2ts_section_filter_reset' 'int ()'     | `-CXXDependentScopeMemberExpr 0x13c1266c8 <col:31, col:35> '<dependent type>' contains-errors lvalue ->cat     |   `-RecoveryExpr 0x13c1266a8 <col:31> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13c1267c0 <line:8:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13c126738 <col:2> 'int ()' Function 0x13c1265d0 'gf_m2ts_section_filter_reset' 'int ()'     | `-CXXDependentScopeMemberExpr 0x13c126778 <col:31, col:35> '<dependent type>' contains-errors lvalue ->pat     |   `-RecoveryExpr 0x13c126758 <col:31> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13c808288 <line:9:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13c808200 <col:2> 'int ()' Function 0x13c1265d0 'gf_m2ts_section_filter_reset' 'int ()'     | `-CXXDependentScopeMemberExpr 0x13c808240 <col:31, col:35> '<dependent type>' contains-errors lvalue ->sdt     |   `-RecoveryExpr 0x13c808220 <col:31> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13c808338 <line:10:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13c8082b0 <col:2> 'int ()' Function 0x13c1265d0 'gf_m2ts_section_filter_reset' 'int ()'     | `-CXXDependentScopeMemberExpr 0x13c8082f0 <col:31, col:35> '<dependent type>' contains-errors lvalue ->nit     |   `-RecoveryExpr 0x13c8082d0 <col:31> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13c8083e8 <line:11:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13c808360 <col:2> 'int ()' Function 0x13c1265d0 'gf_m2ts_section_filter_reset' 'int ()'     | `-CXXDependentScopeMemberExpr 0x13c8083a0 <col:31, col:35> '<dependent type>' contains-errors lvalue ->eit     |   `-RecoveryExpr 0x13c808380 <col:31> '<dependent type>' contains-errors lvalue     `-CallExpr 0x13c808498 <line:12:2, col:42> '<dependent type>' contains-errors       |-DeclRefExpr 0x13c808410 <col:2> 'int ()' Function 0x13c1265d0 'gf_m2ts_section_filter_reset' 'int ()'       `-CXXDependentScopeMemberExpr 0x13c808450 <col:31, col:35> '<dependent type>' contains-errors lvalue ->tdt_tot         `-RecoveryExpr 0x13c808430 <col:31> '<dependent type>' contains-errors lvalue ","20997":"`-FunctionDecl 0x144827e30  col:3 implicit used abort 'void (void) __attribute__((noreturn))' extern   `-BuiltinAttr 0x144827ed8 <<invalid sloc>> Implicit 867 ","20836":"`-FunctionDecl 0x11f942b68  col:55 implicit used strerror 'char *(int)' extern   |-ParmVarDecl 0x11f942c68 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x11f942c10 <<invalid sloc>> Implicit 901 ","20771":"`-FunctionDecl 0x15a941d78  col:9 implicit used sprintf 'int (char *, const char *, ...)' extern   |-ParmVarDecl 0x15a941e78 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x15a941ee0 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x15a941e20 <<invalid sloc>> Implicit 906   `-FormatAttr 0x15a941f58 <col:9> Implicit printf 2 3 ","20399":"`-FunctionDecl 0x141928310  line:1:6 invalid ldbRedis 'void (int *, int *, int)'   |-ParmVarDecl 0x141928128 <col:15, col:26> col:26 invalid lua 'int *'   |-ParmVarDecl 0x1419281a8 <col:31, col:36> col:36 invalid argv 'int *'   |-ParmVarDecl 0x141928228 <col:42, col:46> col:46 used argc 'int'   `-CompoundStmt 0x141942400 <col:52, line:15:1>     |-DeclStmt 0x1419285b0 <line:2:5, col:52>     | |-VarDecl 0x1419283e8 <col:5, col:9> col:9 used j 'int'     | `-VarDecl 0x141928468 <col:5, col:30> col:12 used saved_rc 'int' cinit     |   `-CXXDependentScopeMemberExpr 0x141928550 <col:23, col:30> '<dependent type>' contains-errors lvalue .lua_replicate_commands     |     `-RecoveryExpr 0x141928530 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1419287c0 <line:4:5, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x141928720 <col:5> 'int ()' Function 0x141928668 'lua_getglobal' 'int ()'     | |-RecoveryExpr 0x141928740 <col:19> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x1419287a0 <col:23> 'char[4]' lvalue \"STR\"     |-CallExpr 0x141941940 <line:5:5, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1419418e0 <col:5> 'int ()' Function 0x141941828 'lua_pushstring' 'int ()'     | |-RecoveryExpr 0x141941900 <col:20> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x141941920 <col:24> 'char[4]' lvalue \"STR\"     |-CallExpr 0x141941ac8 <line:6:5, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x141941a50 <col:5> 'int ()' Function 0x141941998 'lua_gettable' 'int ()'     | |-RecoveryExpr 0x141941a70 <col:18> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x141941ab0 <col:22, col:23> 'int' prefix '-'     |   `-IntegerLiteral 0x141941a90 <col:23> 'int' 2     |-ForStmt 0x141941fc0 <line:7:5, line:8:52>     | |-BinaryOperator 0x141941b38 <line:7:10, col:14> 'int' '='     | | |-DeclRefExpr 0x141941af8 <col:10> 'int' lvalue Var 0x1419283e8 'j' 'int'     | | `-IntegerLiteral 0x141941b18 <col:14> 'int' 1     | |-<<<NULL>>>     | |-BinaryOperator 0x141941bc8 <col:17, col:21> 'int' '<'     | | |-ImplicitCastExpr 0x141941b98 <col:17> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x141941b58 <col:17> 'int' lvalue Var 0x1419283e8 'j' 'int'     | | `-ImplicitCastExpr 0x141941bb0 <col:21> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x141941b78 <col:21> 'int' lvalue ParmVar 0x141928228 'argc' 'int'     | |-UnaryOperator 0x141941c08 <col:27, col:28> 'int' postfix '++'     | | `-DeclRefExpr 0x141941be8 <col:27> 'int' lvalue Var 0x1419283e8 'j' 'int'     | `-CallExpr 0x141941f88 <line:8:9, col:52> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x141941d00 <col:9> 'int ()' Function 0x141941c48 'lua_pushlstring' 'int ()'     |   |-RecoveryExpr 0x141941d20 <col:25> '<dependent type>' contains-errors lvalue     |   |-ArraySubscriptExpr 0x141941db0 <col:29, col:35> '<dependent type>' contains-errors lvalue     |   | |-ImplicitCastExpr 0x141941d80 <col:29> '<dependent type>' contains-errors <LValueToRValue>     |   | | `-RecoveryExpr 0x141941d40 <col:29> '<dependent type>' contains-errors lvalue     |   | `-ImplicitCastExpr 0x141941d98 <col:34> 'int' <LValueToRValue>     |   |   `-DeclRefExpr 0x141941d60 <col:34> 'int' lvalue Var 0x1419283e8 'j' 'int'     |   `-CallExpr 0x141941f60 <col:37, col:51> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x141941eb0 <col:37> 'int ()' Function 0x141941df8 'sdslen' 'int ()'     |     `-ArraySubscriptExpr 0x141941f40 <col:44, col:50> '<dependent type>' contains-errors lvalue     |       |-ImplicitCastExpr 0x141941f10 <col:44> '<dependent type>' contains-errors <LValueToRValue>     |       | `-RecoveryExpr 0x141941ed0 <col:44> '<dependent type>' contains-errors lvalue     |       `-ImplicitCastExpr 0x141941f28 <col:49> 'int' <LValueToRValue>     |         `-DeclRefExpr 0x141941ef0 <col:49> 'int' lvalue Var 0x1419283e8 'j' 'int'     |-CallExpr 0x141942210 <line:11:5, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x141942118 <col:5> 'int ()' Function 0x141942060 'lua_pcall' 'int ()'     | |-RecoveryExpr 0x141942138 <col:15> '<dependent type>' contains-errors lvalue     | |-BinaryOperator 0x1419421b0 <col:19, col:24> 'int' '-'     | | |-ImplicitCastExpr 0x141942198 <col:19> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x141942158 <col:19> 'int' lvalue ParmVar 0x141928228 'argc' 'int'     | | `-IntegerLiteral 0x141942178 <col:24> 'int' 1     | |-IntegerLiteral 0x1419421d0 <col:26> 'int' 1     | `-IntegerLiteral 0x1419421f0 <col:28> 'int' 0     `-CallExpr 0x1419423d0 <line:14:5, col:18> '<dependent type>' contains-errors       |-DeclRefExpr 0x141942370 <col:5> 'int ()' Function 0x1419422b8 'lua_pop' 'int ()'       |-RecoveryExpr 0x141942390 <col:13> '<dependent type>' contains-errors lvalue       `-IntegerLiteral 0x1419423b0 <col:17> 'int' 2 ","20708":"`-FunctionDecl 0x13b00dda8  line:2:1 rv_alloc 'char *(int)' static   |-ParmVarDecl 0x13b00dcd8 <col:10, col:14> col:14 used i 'int'   `-CompoundStmt 0x13b00e170 <line:3:1, line:4:37>     `-ReturnStmt 0x13b00e160 <col:5, col:35>       `-BinaryOperator 0x13b00e140 <col:12, col:35> '<dependent type>' contains-errors '='         |-RecoveryExpr 0x13b00e0c8 <col:12> '<dependent type>' contains-errors lvalue         `-CallExpr 0x13b00e100 <col:26, col:35> 'int'           |-ImplicitCastExpr 0x13b00e0e8 <col:26> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x13b00dfe0 <col:26> 'int ()' Function 0x13b00df28 'xmalloc' 'int ()'           `-ImplicitCastExpr 0x13b00e128 <col:34> 'int' <LValueToRValue>             `-DeclRefExpr 0x13b00e000 <col:34> 'int' lvalue ParmVar 0x13b00dcd8 'i' 'int' ","20902":"`-FunctionDecl 0x126941f68  col:9 implicit used sprintf 'int (char *, const char *, ...)' extern   |-ParmVarDecl 0x126942068 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x1269420d0 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x126942010 <<invalid sloc>> Implicit 906   `-FormatAttr 0x126942148 <col:9> Implicit printf 2 3 ","20281":"`-FunctionDecl 0x133922600  line:1:12 btrfs_ioctl_get_supported_features 'int (struct file *, int)' static   |-ParmVarDecl 0x13400e248 <col:47, col:60> col:60 file 'struct file *'   |-ParmVarDecl 0x13400e2c0 <line:2:12, col:17> col:17 __user 'int'   `-CompoundStmt 0x133922e28 <line:3:1, line:14:1>     |-DeclStmt 0x133922ad8 <line:4:2, line:8:3>     | |-RecordDecl 0x133922700 <line:4:9, col:16> col:16 struct btrfs_ioctl_feature_flags     | `-VarDecl 0x133922810 <col:2, col:42> col:42 invalid features 'int' static     |-IfStmt 0x133922dd8 <line:10:2, line:11:11>     | |-CallExpr 0x133922cf8 <line:10:6, col:51> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x133922bd0 <col:6> 'int ()' Function 0x133922b18 'copy_to_user' 'int ()'     | | |-RecoveryExpr 0x133922cd8 <col:19> '<dependent type>' contains-errors lvalue     | | |-UnaryOperator 0x133922c28 <col:24, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | `-RecoveryExpr 0x133922c08 <col:25> '<dependent type>' contains-errors lvalue     | | `-UnaryExprOrTypeTraitExpr 0x133922c80 <col:35, col:50> 'unsigned long' contains-errors sizeof     | |   `-ParenExpr 0x133922c60 <col:41, col:50> '<dependent type>' contains-errors lvalue     | |     `-RecoveryExpr 0x133922c40 <col:42> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x133922dc8 <line:11:3, col:11>     |   `-UnaryOperator 0x133922db0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x133922d98 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x133922d78 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x133922e18 <line:13:2, col:9>       `-IntegerLiteral 0x133922df8 <col:9> 'int' 0 ","20813":"`-FunctionDecl 0x15702dea8  col:4 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x15702dfa8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x15702e010 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x15702e078 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x15702df50 <<invalid sloc>> Implicit 882 ","20988":"`-FunctionDecl 0x12f00e0c8  line:1:1 invalid Set 'int (int *, int, int, int, int, int *)'   |-ParmVarDecl 0x12f00dd28 <col:5, col:16> col:16 invalid elts 'int *'   |-ParmVarDecl 0x12f00dda8 <col:22, col:26> col:26 used lineno 'int'   |-ParmVarDecl 0x12f00de28 <col:34, col:38> col:38 used col_offset 'int'   |-ParmVarDecl 0x12f00dea8 <col:50, col:54> col:54 used end_lineno 'int'   |-ParmVarDecl 0x12f00df28 <col:66, line:2:5> col:5 used end_col_offset 'int'   |-ParmVarDecl 0x12f00dfa8 <col:21, col:30> col:30 invalid arena 'int *'   `-CompoundStmt 0x12f00e3b8 <line:3:1, line:15:1>     |-IfStmt 0x12f00e298 <line:6:5, line:7:16>     | |-UnaryOperator 0x12f00e238 <line:6:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12f00e220 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x12f00e200 <col:10> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12f00e288 <line:7:9, col:16>     |   `-RecoveryExpr 0x12f00e268 <col:16> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12f00e3a8 <line:14:5, col:12>       `-RecoveryExpr 0x12f00e388 <col:12> '<dependent type>' contains-errors lvalue ","20229":"`-FunctionDecl 0x11d80dda8  line:1:6 join_session_keyring 'long (const char *)'   |-ParmVarDecl 0x11d80dcd8 <col:27, col:39> col:39 used name 'const char *'   `-CompoundStmt 0x11f009f08 <line:2:1, line:67:1>     |-DeclStmt 0x11d80e088 <line:3:2, col:24>     | |-RecordDecl 0x11d80dea0 <col:8, col:15> col:15 struct cred     | `-VarDecl 0x11d80e008 <col:2, col:21> col:21 used old 'const struct cred *'     |-DeclStmt 0x11d80e1c0 <line:4:2, col:18>     | `-VarDecl 0x11d80e158 <col:2, col:15> col:15 used new 'struct cred *'     |-DeclStmt 0x11d80e3c8 <line:5:2, col:21>     | |-RecordDecl 0x11d80e1d8 <col:2, col:9> col:9 struct key     | `-VarDecl 0x11d80e348 <col:2, col:14> col:14 used keyring 'struct key *'     |-DeclStmt 0x11d826700 <line:6:2, col:18>     | |-VarDecl 0x11d826600 <col:2, col:7> col:7 used ret 'long'     | `-VarDecl 0x11d826680 <col:2, col:12> col:12 used serial 'long'     |-BinaryOperator 0x11d826d20 <line:8:2, col:22> 'struct cred *' '='     | |-DeclRefExpr 0x11d826718 <col:2> 'struct cred *' lvalue Var 0x11d80e158 'new' 'struct cred *'     | `-ImplicitCastExpr 0x11d8268e8 <col:8, col:22> 'struct cred *' <IntegralToPointer>     |   `-CallExpr 0x11d8268c8 <col:8, col:22> 'int'     |     `-ImplicitCastExpr 0x11d8268b0 <col:8> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x11d826860 <col:8> 'int ()' Function 0x11d8267a8 'prepare_creds' 'int ()'     |-IfStmt 0x11d826e38 <line:9:2, line:10:11>     | |-UnaryOperator 0x11d826d78 <line:9:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x11d826d60 <col:7> 'struct cred *' <LValueToRValue>     | |   `-DeclRefExpr 0x11d826d40 <col:7> 'struct cred *' lvalue Var 0x11d80e158 'new' 'struct cred *'     | `-ReturnStmt 0x11d826e28 <line:10:3, col:11>     |   `-UnaryOperator 0x11d826e10 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x11d826df8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x11d826dd8 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x11d826fc8 <line:11:2, col:21> 'const struct cred *' '='     | |-DeclRefExpr 0x11d826e58 <col:2> 'const struct cred *' lvalue Var 0x11d80e008 'old' 'const struct cred *'     | `-ImplicitCastExpr 0x11d826fb0 <col:8, col:21> 'const struct cred *' <IntegralToPointer>     |   `-CallExpr 0x11d826f90 <col:8, col:21> 'int'     |     `-ImplicitCastExpr 0x11d826f78 <col:8> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x11d826f58 <col:8> 'int ()' Function 0x11d826ea0 'current_cred' 'int ()'     |-IfStmt 0x11f0083f0 <line:14:2, line:24:2>     | |-UnaryOperator 0x11d827020 <line:14:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x11d827008 <col:7> 'const char *' <LValueToRValue>     | |   `-DeclRefExpr 0x11d826fe8 <col:7> 'const char *' lvalue ParmVar 0x11d80dcd8 'name' 'const char *'     | `-CompoundStmt 0x11f0083b0 <col:13, line:24:2>     |   |-BinaryOperator 0x11d827230 <line:15:3, col:50> 'long' contains-errors '='     |   | |-DeclRefExpr 0x11d827038 <col:3> 'long' lvalue Var 0x11d826600 'ret' 'long'     |   | `-CallExpr 0x11d827200 <col:9, col:50> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x11d827138 <col:9> 'int ()' Function 0x11d827080 'install_session_keyring_to_cred' 'int ()'     |   |   |-DeclRefExpr 0x11d827158 <col:41> 'struct cred *' lvalue Var 0x11d80e158 'new' 'struct cred *'     |   |   `-RecoveryExpr 0x11d8271e0 <col:46> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x11d827348 <line:16:3, line:17:9>     |   | |-BinaryOperator 0x11d8272c0 <line:16:7, col:13> 'int' '<'     |   | | |-ImplicitCastExpr 0x11d827290 <col:7> 'long' <LValueToRValue>     |   | | | `-DeclRefExpr 0x11d827250 <col:7> 'long' lvalue Var 0x11d826600 'ret' 'long'     |   | | `-ImplicitCastExpr 0x11d8272a8 <col:13> 'long' <IntegralCast>     |   | |   `-IntegerLiteral 0x11d827270 <col:13> 'int' 0     |   | `-GotoStmt 0x11d827330 <line:17:4, col:9> 'error' 0x11d8272e0     |   |-BinaryOperator 0x11d827430 <line:19:3, col:34> 'long' contains-errors '='     |   | |-DeclRefExpr 0x11d827368 <col:3> 'long' lvalue Var 0x11d826680 'serial' 'long'     |   | `-CXXDependentScopeMemberExpr 0x11d8273e8 <col:12, col:34> '<dependent type>' contains-errors lvalue ->serial     |   |   `-RecoveryExpr 0x11d8273c0 <col:12, col:17> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x11d827388 <col:12> 'struct cred *' lvalue Var 0x11d80e158 'new' 'struct cred *'     |   |-BinaryOperator 0x11f008200 <line:20:3, col:25> 'long' '='     |   | |-DeclRefExpr 0x11d827450 <col:3> 'long' lvalue Var 0x11d826600 'ret' 'long'     |   | `-ImplicitCastExpr 0x11d8275e8 <col:9, col:25> 'long' <IntegralCast>     |   |   `-CallExpr 0x11d8275a8 <col:9, col:25> 'int'     |   |     |-ImplicitCastExpr 0x11d827590 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x11d827550 <col:9> 'int ()' Function 0x11d827498 'commit_creds' 'int ()'     |   |     `-ImplicitCastExpr 0x11d8275d0 <col:22> 'struct cred *' <LValueToRValue>     |   |       `-DeclRefExpr 0x11d827570 <col:22> 'struct cred *' lvalue Var 0x11d80e158 'new' 'struct cred *'     |   |-IfStmt 0x11f008328 <line:21:3, line:22:10>     |   | |-BinaryOperator 0x11f008290 <line:21:7, col:14> 'int' '=='     |   | | |-ImplicitCastExpr 0x11f008260 <col:7> 'long' <LValueToRValue>     |   | | | `-DeclRefExpr 0x11f008220 <col:7> 'long' lvalue Var 0x11d826600 'ret' 'long'     |   | | `-ImplicitCastExpr 0x11f008278 <col:14> 'long' <IntegralCast>     |   | |   `-IntegerLiteral 0x11f008240 <col:14> 'int' 0     |   | `-BinaryOperator 0x11f008308 <line:22:4, col:10> 'long' '='     |   |   |-DeclRefExpr 0x11f0082b0 <col:4> 'long' lvalue Var 0x11d826600 'ret' 'long'     |   |   `-ImplicitCastExpr 0x11f0082f0 <col:10> 'long' <LValueToRValue>     |   |     `-DeclRefExpr 0x11f0082d0 <col:10> 'long' lvalue Var 0x11d826680 'serial' 'long'     |   `-GotoStmt 0x11f008398 <line:23:3, col:8> 'okay' 0x11f008348     |-CallExpr 0x11f0085a0 <line:27:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11f0084f0 <col:2> 'int ()' Function 0x11f008438 'mutex_lock' 'int ()'     | `-UnaryOperator 0x11f008588 <col:13, col:14> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x11f008568 <col:14> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x11f0087c0 <line:30:2, col:44> 'struct key *' contains-errors '='     | |-DeclRefExpr 0x11f0085c8 <col:2> 'struct key *' lvalue Var 0x11d80e348 'keyring' 'struct key *'     | `-CallExpr 0x11f008790 <col:12, col:44> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x11f0086c8 <col:12> 'int ()' Function 0x11f008610 'find_keyring_by_name' 'int ()'     |   |-DeclRefExpr 0x11f0086e8 <col:33> 'const char *' lvalue ParmVar 0x11d80dcd8 'name' 'const char *'     |   `-RecoveryExpr 0x11f008770 <col:39> '<dependent type>' contains-errors lvalue     |-IfStmt 0x11f0096a0 <line:31:2, line:47:2> has_else     | |-BinaryOperator 0x11f008ac0 <line:31:6, col:27> 'int' contains-errors '=='     | | |-CallExpr 0x11f008a30 <col:6, col:21> 'int'     | | | |-ImplicitCastExpr 0x11f008a18 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x11f0088c0 <col:6> 'int ()' Function 0x11f008808 'PTR_ERR' 'int ()'     | | | `-ImplicitCastExpr 0x11f008a58 <col:14> 'struct key *' <LValueToRValue>     | | |   `-DeclRefExpr 0x11f0088e0 <col:14> 'struct key *' lvalue Var 0x11d80e348 'keyring' 'struct key *'     | | `-UnaryOperator 0x11f008aa8 <col:26, col:27> '<dependent type>' contains-errors prefix '-' cannot overflow     | |   `-ImplicitCastExpr 0x11f008a90 <col:27> '<dependent type>' contains-errors <LValueToRValue>     | |     `-RecoveryExpr 0x11f008a70 <col:27> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x11f009320 <col:35, line:41:2>     | | |-BinaryOperator 0x11f008fe0 <line:33:3, line:36:28> 'struct key *' contains-errors '='     | | | |-DeclRefExpr 0x11f008ae0 <line:33:3> 'struct key *' lvalue Var 0x11d80e348 'keyring' 'struct key *'     | | | `-CallExpr 0x11f008f88 <col:13, line:36:28> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x11f008be0 <line:33:13> 'int ()' Function 0x11f008b28 'keyring_alloc' 'int ()'     | | |   |-DeclRefExpr 0x11f008c00 <line:34:4> 'const char *' lvalue ParmVar 0x11d80dcd8 'name' 'const char *'     | | |   |-RecoveryExpr 0x11f008c58 <col:10, col:15> '<dependent type>' contains-errors lvalue     | | |   | `-DeclRefExpr 0x11f008c20 <col:10> 'const struct cred *' lvalue Var 0x11d80e008 'old' 'const struct cred *'     | | |   |-RecoveryExpr 0x11f008cb8 <col:20, col:25> '<dependent type>' contains-errors lvalue     | | |   | `-DeclRefExpr 0x11f008c80 <col:20> 'const struct cred *' lvalue Var 0x11d80e008 'old' 'const struct cred *'     | | |   |-DeclRefExpr 0x11f008ce0 <col:30> 'const struct cred *' lvalue Var 0x11d80e008 'old' 'const struct cred *'     | | |   |-BinaryOperator 0x11f008f28 <line:35:4, col:48> '<dependent type>' contains-errors '|'     | | |   | |-BinaryOperator 0x11f008ee8 <col:4, col:33> '<dependent type>' contains-errors '|'     | | |   | | |-BinaryOperator 0x11f008ea8 <col:4, col:18> '<dependent type>' contains-errors '|'     | | |   | | | |-RecoveryExpr 0x11f008e68 <col:4> '<dependent type>' contains-errors lvalue     | | |   | | | `-RecoveryExpr 0x11f008e88 <col:18> '<dependent type>' contains-errors lvalue     | | |   | | `-RecoveryExpr 0x11f008ec8 <col:33> '<dependent type>' contains-errors lvalue     | | |   | `-RecoveryExpr 0x11f008f08 <col:48> '<dependent type>' contains-errors lvalue     | | |   |-RecoveryExpr 0x11f008f48 <line:36:4> '<dependent type>' contains-errors lvalue     | | |   `-RecoveryExpr 0x11f008f68 <col:24> '<dependent type>' contains-errors lvalue     | | `-IfStmt 0x11f009300 <line:37:3, line:40:3>     | |   |-CallExpr 0x11f009138 <line:37:7, col:21> 'int'     | |   | |-ImplicitCastExpr 0x11f009120 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | | `-DeclRefExpr 0x11f0090e0 <col:7> 'int ()' Function 0x11f009028 'IS_ERR' 'int ()'     | |   | `-ImplicitCastExpr 0x11f009160 <col:14> 'struct key *' <LValueToRValue>     | |   |   `-DeclRefExpr 0x11f009100 <col:14> 'struct key *' lvalue Var 0x11d80e348 'keyring' 'struct key *'     | |   `-CompoundStmt 0x11f0092e0 <col:24, line:40:3>     | |     |-BinaryOperator 0x11f009258 <line:38:4, col:25> 'long' '='     | |     | |-DeclRefExpr 0x11f009178 <col:4> 'long' lvalue Var 0x11d826600 'ret' 'long'     | |     | `-ImplicitCastExpr 0x11f009240 <col:10, col:25> 'long' <IntegralCast>     | |     |   `-CallExpr 0x11f009200 <col:10, col:25> 'int'     | |     |     |-ImplicitCastExpr 0x11f0091d8 <col:10> 'int (*)()' <FunctionToPointerDecay>     | |     |     | `-DeclRefExpr 0x11f009198 <col:10> 'int ()' Function 0x11f008808 'PTR_ERR' 'int ()'     | |     |     `-ImplicitCastExpr 0x11f009228 <col:18> 'struct key *' <LValueToRValue>     | |     |       `-DeclRefExpr 0x11f0091b8 <col:18> 'struct key *' lvalue Var 0x11d80e348 'keyring' 'struct key *'     | |     `-GotoStmt 0x11f0092c8 <line:39:4, col:9> 'error2' 0x11f009278     | `-IfStmt 0x11f009670 <line:41:9, line:47:2> has_else     |   |-CallExpr 0x11f009398 <line:41:13, col:27> 'int'     |   | |-ImplicitCastExpr 0x11f009380 <col:13> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x11f009340 <col:13> 'int ()' Function 0x11f009028 'IS_ERR' 'int ()'     |   | `-ImplicitCastExpr 0x11f0093c0 <col:20> 'struct key *' <LValueToRValue>     |   |   `-DeclRefExpr 0x11f009360 <col:20> 'struct key *' lvalue Var 0x11d80e348 'keyring' 'struct key *'     |   |-CompoundStmt 0x11f0094e0 <col:30, line:44:2>     |   | |-BinaryOperator 0x11f0094a8 <line:42:3, col:24> 'long' '='     |   | | |-DeclRefExpr 0x11f0093d8 <col:3> 'long' lvalue Var 0x11d826600 'ret' 'long'     |   | | `-ImplicitCastExpr 0x11f009490 <col:9, col:24> 'long' <IntegralCast>     |   | |   `-CallExpr 0x11f009450 <col:9, col:24> 'int'     |   | |     |-ImplicitCastExpr 0x11f009438 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | |     | `-DeclRefExpr 0x11f0093f8 <col:9> 'int ()' Function 0x11f008808 'PTR_ERR' 'int ()'     |   | |     `-ImplicitCastExpr 0x11f009478 <col:17> 'struct key *' <LValueToRValue>     |   | |       `-DeclRefExpr 0x11f009418 <col:17> 'struct key *' lvalue Var 0x11d80e348 'keyring' 'struct key *'     |   | `-GotoStmt 0x11f0094c8 <line:43:3, col:8> 'error2' 0x11f009278     |   `-IfStmt 0x11f009650 <line:44:9, line:47:2>     |     |-BinaryOperator 0x11f009580 <line:44:13, col:29> 'int' contains-errors '=='     |     | |-DeclRefExpr 0x11f009500 <col:13> 'struct key *' lvalue Var 0x11d80e348 'keyring' 'struct key *'     |     | `-RecoveryExpr 0x11f009558 <col:24, col:29> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x11f009520 <col:24> 'struct cred *' lvalue Var 0x11d80e158 'new' 'struct cred *'     |     `-CompoundStmt 0x11f009630 <col:46, line:47:2>     |       |-BinaryOperator 0x11f0095f8 <line:45:3, col:9> 'long' '='     |       | |-DeclRefExpr 0x11f0095a0 <col:3> 'long' lvalue Var 0x11d826600 'ret' 'long'     |       | `-ImplicitCastExpr 0x11f0095e0 <col:9> 'long' <IntegralCast>     |       |   `-IntegerLiteral 0x11f0095c0 <col:9> 'int' 0     |       `-GotoStmt 0x11f009618 <line:46:3, col:8> 'error2' 0x11f009278     |-BinaryOperator 0x11f0097e0 <line:50:2, col:52> 'long' '='     | |-DeclRefExpr 0x11f0096d0 <col:2> 'long' lvalue Var 0x11d826600 'ret' 'long'     | `-ImplicitCastExpr 0x11f0097c8 <col:8, col:52> 'long' <IntegralCast>     |   `-CallExpr 0x11f009768 <col:8, col:52> 'int'     |     |-ImplicitCastExpr 0x11f009750 <col:8> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x11f0096f0 <col:8> 'int ()' Function 0x11d827080 'install_session_keyring_to_cred' 'int ()'     |     |-ImplicitCastExpr 0x11f009798 <col:40> 'struct cred *' <LValueToRValue>     |     | `-DeclRefExpr 0x11f009710 <col:40> 'struct cred *' lvalue Var 0x11d80e158 'new' 'struct cred *'     |     `-ImplicitCastExpr 0x11f0097b0 <col:45> 'struct key *' <LValueToRValue>     |       `-DeclRefExpr 0x11f009730 <col:45> 'struct key *' lvalue Var 0x11d80e348 'keyring' 'struct key *'     |-IfStmt 0x11f0098a8 <line:51:2, line:52:8>     | |-BinaryOperator 0x11f009870 <line:51:6, col:12> 'int' '<'     | | |-ImplicitCastExpr 0x11f009840 <col:6> 'long' <LValueToRValue>     | | | `-DeclRefExpr 0x11f009800 <col:6> 'long' lvalue Var 0x11d826600 'ret' 'long'     | | `-ImplicitCastExpr 0x11f009858 <col:12> 'long' <IntegralCast>     | |   `-IntegerLiteral 0x11f009820 <col:12> 'int' 0     | `-GotoStmt 0x11f009890 <line:52:3, col:8> 'error2' 0x11f009278     |-CallExpr 0x11f009920 <line:54:2, col:18> 'int'     | |-ImplicitCastExpr 0x11f009908 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x11f0098c8 <col:2> 'int ()' Function 0x11d827498 'commit_creds' 'int ()'     | `-ImplicitCastExpr 0x11f009948 <col:15> 'struct cred *' <LValueToRValue>     |   `-DeclRefExpr 0x11f0098e8 <col:15> 'struct cred *' lvalue Var 0x11d80e158 'new' 'struct cred *'     |-BinaryOperator 0x11f009ae0 <line:57:2, col:17> 'long' contains-errors '='     | |-DeclRefExpr 0x11f009a60 <col:2> 'long' lvalue Var 0x11d826600 'ret' 'long'     | `-RecoveryExpr 0x11f009ab8 <col:8, col:17> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x11f009a80 <col:8> 'struct key *' lvalue Var 0x11d80e348 'keyring' 'struct key *'     |-CallExpr 0x11f009c38 <line:58:2, col:17> 'int'     | |-ImplicitCastExpr 0x11f009c20 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x11f009be0 <col:2> 'int ()' Function 0x11f009b28 'key_put' 'int ()'     | `-ImplicitCastExpr 0x11f009c60 <col:10> 'struct key *' <LValueToRValue>     |   `-DeclRefExpr 0x11f009c00 <col:10> 'struct key *' lvalue Var 0x11d80e348 'keyring' 'struct key *'     |-LabelStmt 0x11f009cc0 <line:59:1, line:60:9> 'okay'     | `-ReturnStmt 0x11f009cb0 <col:2, col:9>     |   `-ImplicitCastExpr 0x11f009c98 <col:9> 'long' <LValueToRValue>     |     `-DeclRefExpr 0x11f009c78 <col:9> 'long' lvalue Var 0x11d826600 'ret' 'long'     |-LabelStmt 0x11f009d08 <line:62:1, col:7> 'error2'     | `-NullStmt 0x11f009d00 <col:7>     |-LabelStmt 0x11f009ea0 <line:64:1, line:65:17> 'error'     | `-CallExpr 0x11f009e60 <col:2, col:17> 'int'     |   |-ImplicitCastExpr 0x11f009e48 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x11f009e08 <col:2> 'int ()' Function 0x11f009d50 'abort_creds' 'int ()'     |   `-ImplicitCastExpr 0x11f009e88 <col:14> 'struct cred *' <LValueToRValue>     |     `-DeclRefExpr 0x11f009e28 <col:14> 'struct cred *' lvalue Var 0x11d80e158 'new' 'struct cred *'     `-ReturnStmt 0x11f009ef8 <line:66:2, col:9>       `-ImplicitCastExpr 0x11f009ee0 <col:9> 'long' <LValueToRValue>         `-DeclRefExpr 0x11f009ec0 <col:9> 'long' lvalue Var 0x11d826600 'ret' 'long' ","20725":"`-FunctionDecl 0x14d02a268  col:22 implicit used mempcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x14d02a368 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x14d02a3d0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x14d02a438 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14d02a310 <<invalid sloc>> Implicit 947 ","20632":"`-FunctionDecl 0x13d911d68  line:1:9 invalid stsz_box_new 'int *()'   `-CompoundStmt 0x13d912060 <line:2:1, line:7:1>     `-CallExpr 0x13d912018 <line:3:2, col:41> '<dependent type>' contains-errors       |-DeclRefExpr 0x13d911f70 <col:2> 'int ()' Function 0x13d911eb8 'ISOM_DECL_BOX_ALLOC' 'int ()'       |-RecoveryExpr 0x13d911ff8 <col:22> '<dependent type>' contains-errors lvalue       `-IntegerLiteral 0x13d911fa8 <col:40> 'int' 0 ","20465":"`-FunctionDecl 0x1301281a8  line:1:1 PHP_MSHUTDOWN_FUNCTION 'int (int)'   |-ParmVarDecl 0x1301280d8 <col:24> col:24 ldap 'int'   `-CompoundStmt 0x1301284a0 <line:2:1, line:5:1>     |-CallExpr 0x130128438 <line:3:2, col:25> 'int'     | `-ImplicitCastExpr 0x130128420 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x1301283d0 <col:2> 'int ()' Function 0x130128318 'UNREGISTER_INI_ENTRIES' 'int ()'     `-ReturnStmt 0x130128490 <line:4:2, col:9>       `-RecoveryExpr 0x130128470 <col:9> '<dependent type>' contains-errors lvalue ","20599":"`-FunctionDecl 0x1519417a0  col:14 implicit used strrchr 'char *(const char *, int)' extern   |-ParmVarDecl 0x1519418a0 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x151941908 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x151941848 <<invalid sloc>> Implicit 896 ","20812":"`-FunctionDecl 0x14a827400  line:1:20 invalid mmget_still_valid 'int (struct mm_struct *)' static inline   |-ParmVarDecl 0x14a80e268 <col:38, col:56> col:56 used mm 'struct mm_struct *'   `-CompoundStmt 0x14a8276f8 <line:2:1, line:4:1>     `-ReturnStmt 0x14a8276e8 <line:3:2, col:31>       `-CallExpr 0x14a8276c0 <col:9, col:31> '<dependent type>' contains-errors         |-DeclRefExpr 0x14a827610 <col:9> 'int ()' Function 0x14a827558 'likely' 'int ()'         `-UnaryOperator 0x14a8276a8 <col:16, col:21> '<dependent type>' contains-errors prefix '!' cannot overflow           `-ImplicitCastExpr 0x14a827690 <col:17, col:21> '<dependent type>' contains-errors <LValueToRValue>             `-RecoveryExpr 0x14a827668 <col:17, col:21> '<dependent type>' contains-errors lvalue               `-DeclRefExpr 0x14a827630 <col:17> 'struct mm_struct *' lvalue ParmVar 0x14a80e268 'mm' 'struct mm_struct *' ","20766":"`-FunctionDecl 0x14a008200  col:28 implicit used malloc 'void *(unsigned long)' extern   |-ParmVarDecl 0x14a008300 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-BuiltinAttr 0x14a0082a8 <<invalid sloc>> Implicit 871   `-AllocSizeAttr 0x14a008370 <col:28> Implicit 1 ","20517":"`-FunctionDecl 0x136942408  col:31 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x136942508 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x1369424b0 <<invalid sloc>> Implicit 902 ","20737":"`-FunctionDecl 0x13280df10  line:1:13 invalid do_client_file_xfer 'void (int *, int *, int *)' static   |-ParmVarDecl 0x13280dd28 <col:33, col:45> col:45 invalid vport 'int *'   |-ParmVarDecl 0x13280dda8 <line:2:33, col:49> col:49 invalid message_header 'int *'   |-ParmVarDecl 0x13280de28 <line:3:33, col:42> col:42 invalid data 'int *'   `-CompoundStmt 0x1328287d8 <line:4:1, line:52:1>     |-SwitchStmt 0x13280e068 <line:8:5, line:43:5>     | |-ImplicitCastExpr 0x13280e050 <line:8:13, col:29> '<dependent type>' contains-errors <LValueToRValue>     | | `-CXXDependentScopeMemberExpr 0x13280e008 <col:13, col:29> '<dependent type>' contains-errors lvalue ->type     | |   `-RecoveryExpr 0x13280dfe8 <col:13> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1328283f8 <col:35, line:43:5>     |   |-CompoundStmt 0x132828210 <line:9:36, line:28:5>     |   | |-IfStmt 0x132828008 <line:11:9, line:24:9> has_else     |   | | |-UnaryOperator 0x13280e158 <line:11:13, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | | | `-ImplicitCastExpr 0x13280e140 <col:14> '<dependent type>' contains-errors <LValueToRValue>     |   | | |   `-RecoveryExpr 0x13280e120 <col:14> '<dependent type>' contains-errors lvalue     |   | | |-CompoundStmt 0x132827b90 <col:35, line:17:9>     |   | | | |-CallExpr 0x132827b30 <line:12:13, line:15:79> '<dependent type>' contains-errors     |   | | | | |-DeclRefExpr 0x13280e2d0 <line:12:13> 'int ()' Function 0x13280e218 'send_file_xfer_status' 'int ()'     |   | | | | |-RecoveryExpr 0x13280e2f0 <col:35> '<dependent type>' contains-errors lvalue     |   | | | | |-StringLiteral 0x13280e350 <line:13:16, line:14:16> 'char[7]' lvalue \"STRSTR\"     |   | | | | |-CXXDependentScopeMemberExpr 0x132827aa8 <line:15:16, col:19> '<dependent type>' contains-errors lvalue ->id     |   | | | | | `-RecoveryExpr 0x132827a88 <col:16> '<dependent type>' contains-errors lvalue     |   | | | | |-RecoveryExpr 0x132827af0 <col:23> '<dependent type>' contains-errors lvalue     |   | | | | |-RecoveryExpr 0x132827b10 <col:72> '<dependent type>' contains-errors lvalue     |   | | | | `-IntegerLiteral 0x132827a18 <col:78> 'int' 0     |   | | | `-ReturnStmt 0x132827b80 <line:16:13>     |   | | `-IfStmt 0x132827fe8 <line:17:16, line:24:9>     |   | |   |-CallExpr 0x132827d10 <line:17:20, col:63> '<dependent type>' contains-errors     |   | |   | |-DeclRefExpr 0x132827c90 <col:20> 'int ()' Function 0x132827bd8 'session_info_session_is_locked' 'int ()'     |   | |   | `-RecoveryExpr 0x132827cf0 <col:51> '<dependent type>' contains-errors lvalue     |   | |   `-CompoundStmt 0x132827fc8 <col:66, line:24:9>     |   | |     |-CallExpr 0x132827f00 <line:18:13, col:36> '<dependent type>' contains-errors     |   | |     | |-DeclRefExpr 0x132827e18 <col:13> 'int ()' Function 0x132827d60 'syslog' 'int ()'     |   | |     | |-RecoveryExpr 0x132827ee0 <col:20> '<dependent type>' contains-errors lvalue     |   | |     | `-StringLiteral 0x132827e90 <col:31> 'char[4]' lvalue \"STR\"     |   | |     `-ReturnStmt 0x132827fb8 <line:23:13>     |   | `-ReturnStmt 0x132828200 <line:27:9>     |   |-CompoundStmt 0x132828238 <line:29:37, line:34:5>     |   | `-BreakStmt 0x132828230 <line:33:9>     |   |-CompoundStmt 0x132828258 <line:35:35, line:40:5>     |   | `-BreakStmt 0x132828250 <line:39:9>     |   `-DefaultStmt 0x1328283d8 <line:41:5, line:42:29>     |     `-CallExpr 0x1328283b8 <col:9, col:29> 'int'     |       `-ImplicitCastExpr 0x1328283a0 <col:9> 'int (*)()' <FunctionToPointerDecay>     |         `-DeclRefExpr 0x132828350 <col:9> 'int ()' Function 0x132828298 'g_return_if_reached' 'int ()'     `-IfStmt 0x1328286d0 <line:46:5, line:50:5>       |-RecoveryExpr 0x132828628 <line:46:9, col:10> '_Bool' contains-errors       `-CompoundStmt 0x1328286b8 <col:16, line:50:5>         `-ReturnStmt 0x1328286a8 <line:49:9> ","20947":"`-FunctionDecl 0x12680ddf8  line:1:19 invalid curl_init_state 'int *(int *)' static   |-ParmVarDecl 0x12680dd28 <col:35, col:50> col:50 invalid s 'int *'   `-CompoundStmt 0x126828928 <line:2:1, line:56:1>     |-DeclStmt 0x12680dff0 <line:4:5, col:13>     | |-VarDecl 0x12680def0 <col:5, col:9> col:9 used i 'int'     | `-VarDecl 0x12680df70 <col:5, col:12> col:12 used j 'int'     |-DoStmt 0x126827c00 <line:6:5, line:22:19>     | |-CompoundStmt 0x126827b48 <line:6:8, line:22:5>     | | |-ForStmt 0x1268276e0 <line:7:9, line:17:9>     | | | |-BinaryOperator 0x12680e048 <line:7:14, col:16> 'int' '='     | | | | |-DeclRefExpr 0x12680e008 <col:14> 'int' lvalue Var 0x12680def0 'i' 'int'     | | | | `-IntegerLiteral 0x12680e028 <col:16> 'int' 0     | | | |-<<<NULL>>>     | | | |-BinaryOperator 0x12680e0e0 <col:19, col:21> 'int' contains-errors '<'     | | | | |-DeclRefExpr 0x12680e068 <col:19> 'int' lvalue Var 0x12680def0 'i' 'int'     | | | | `-RecoveryExpr 0x12680e0c0 <col:21> '<dependent type>' contains-errors lvalue     | | | |-UnaryOperator 0x12680e120 <col:38, col:39> 'int' postfix '++'     | | | | `-DeclRefExpr 0x12680e100 <col:38> 'int' lvalue Var 0x12680def0 'i' 'int'     | | | `-CompoundStmt 0x1268276b8 <col:43, line:17:9>     | | |   |-ForStmt 0x126827420 <line:8:13, line:10:21>     | | |   | |-BinaryOperator 0x12680e178 <line:8:18, col:20> 'int' '='     | | |   | | |-DeclRefExpr 0x12680e138 <col:18> 'int' lvalue Var 0x12680df70 'j' 'int'     | | |   | | `-IntegerLiteral 0x12680e158 <col:20> 'int' 0     | | |   | |-<<<NULL>>>     | | |   | |-BinaryOperator 0x12680e210 <col:23, col:25> 'int' contains-errors '<'     | | |   | | |-DeclRefExpr 0x12680e198 <col:23> 'int' lvalue Var 0x12680df70 'j' 'int'     | | |   | | `-RecoveryExpr 0x12680e1f0 <col:25> '<dependent type>' contains-errors lvalue     | | |   | |-UnaryOperator 0x12680e250 <col:39, col:40> 'int' postfix '++'     | | |   | | `-DeclRefExpr 0x12680e230 <col:39> 'int' lvalue Var 0x12680df70 'j' 'int'     | | |   | `-IfStmt 0x126827400 <line:9:17, line:10:21>     | | |   |   |-ArraySubscriptExpr 0x12680e3d8 <line:9:21, col:39> '<dependent type>' contains-errors lvalue     | | |   |   | |-ImplicitCastExpr 0x12680e3a8 <col:21, col:34> '<dependent type>' contains-errors <LValueToRValue>     | | |   |   | | `-CXXDependentScopeMemberExpr 0x12680e340 <col:21, col:34> '<dependent type>' contains-errors lvalue .acb     | | |   |   | |   `-ArraySubscriptExpr 0x12680e320 <col:21, col:32> '<dependent type>' contains-errors lvalue     | | |   |   | |     |-ImplicitCastExpr 0x12680e2f0 <col:21, col:24> '<dependent type>' contains-errors <LValueToRValue>     | | |   |   | |     | `-CXXDependentScopeMemberExpr 0x12680e288 <col:21, col:24> '<dependent type>' contains-errors lvalue ->states     | | |   |   | |     |   `-RecoveryExpr 0x12680e268 <col:21> '<dependent type>' contains-errors lvalue     | | |   |   | |     `-ImplicitCastExpr 0x12680e308 <col:31> 'int' <LValueToRValue>     | | |   |   | |       `-DeclRefExpr 0x12680e2d0 <col:31> 'int' lvalue Var 0x12680def0 'i' 'int'     | | |   |   | `-ImplicitCastExpr 0x12680e3c0 <col:38> 'int' <LValueToRValue>     | | |   |   |   `-DeclRefExpr 0x12680e388 <col:38> 'int' lvalue Var 0x12680df70 'j' 'int'     | | |   |   `-ContinueStmt 0x12680e3f8 <line:10:21>     | | |   |-IfStmt 0x126827580 <line:11:13, line:12:17>     | | |   | |-CXXDependentScopeMemberExpr 0x126827530 <line:11:17, col:30> '<dependent type>' contains-errors lvalue .in_use     | | |   | | `-ArraySubscriptExpr 0x126827510 <col:17, col:28> '<dependent type>' contains-errors lvalue     | | |   | |   |-ImplicitCastExpr 0x1268274e0 <col:17, col:20> '<dependent type>' contains-errors <LValueToRValue>     | | |   | |   | `-CXXDependentScopeMemberExpr 0x126827478 <col:17, col:20> '<dependent type>' contains-errors lvalue ->states     | | |   | |   |   `-RecoveryExpr 0x126827458 <col:17> '<dependent type>' contains-errors lvalue     | | |   | |   `-ImplicitCastExpr 0x1268274f8 <col:27> 'int' <LValueToRValue>     | | |   | |     `-DeclRefExpr 0x1268274c0 <col:27> 'int' lvalue Var 0x12680def0 'i' 'int'     | | |   | `-ContinueStmt 0x126827578 <line:12:17>     | | |   `-BreakStmt 0x1268276b0 <line:16:13>     | | `-IfStmt 0x126827b28 <line:18:9, line:21:9>     | |   |-UnaryOperator 0x126827798 <line:18:13, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   | `-ImplicitCastExpr 0x126827780 <col:14> '<dependent type>' contains-errors <LValueToRValue>     | |   |   `-RecoveryExpr 0x126827760 <col:14> '<dependent type>' contains-errors lvalue     | |   `-CompoundStmt 0x126827b08 <col:21, line:21:9>     | |     |-CallExpr 0x126827998 <line:19:13, col:25> 'int'     | |     | |-ImplicitCastExpr 0x126827980 <col:13> 'int (*)()' <FunctionToPointerDecay>     | |     | | `-DeclRefExpr 0x126827910 <col:13> 'int ()' Function 0x126827858 'g_usleep' 'int ()'     | |     | `-IntegerLiteral 0x126827930 <col:22> 'int' 100     | |     `-CallExpr 0x126827ae0 <line:20:13, col:28> '<dependent type>' contains-errors     | |       |-DeclRefExpr 0x126827aa0 <col:13> 'int ()' Function 0x1268279e8 'curl_multi_do' 'int ()'     | |       `-RecoveryExpr 0x126827ac0 <col:27> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x126827be8 <line:22:13, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow     |   `-ImplicitCastExpr 0x126827bd0 <col:14> '<dependent type>' contains-errors <LValueToRValue>     |     `-RecoveryExpr 0x126827bb0 <col:14> '<dependent type>' contains-errors lvalue     |-IfStmt 0x126827d50 <line:24:5, line:25:14>     | |-CXXDependentScopeMemberExpr 0x126827ca0 <line:24:9, col:16> '<dependent type>' contains-errors lvalue ->curl     | | `-RecoveryExpr 0x126827c80 <col:9> '<dependent type>' contains-errors lvalue     | `-GotoStmt 0x126827d38 <line:25:9, col:14> 'has_curl' 0x126827ce8     |-IfStmt 0x126828018 <line:28:5, line:29:16>     | |-UnaryOperator 0x126827fb8 <line:28:9, col:17> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x126827fa0 <col:10, col:17> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x126827f58 <col:10, col:17> '<dependent type>' contains-errors lvalue ->curl     | |     `-RecoveryExpr 0x126827f38 <col:10> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x126828008 <line:29:9, col:16>     |   `-RecoveryExpr 0x126827fe8 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1268282d8 <line:30:5, col:54> '<dependent type>' contains-errors     | |-DeclRefExpr 0x126828118 <col:5> 'int ()' Function 0x126828060 'curl_easy_setopt' 'int ()'     | |-CXXDependentScopeMemberExpr 0x126828270 <col:22, col:29> '<dependent type>' contains-errors lvalue ->curl     | | `-RecoveryExpr 0x126828250 <col:22> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x1268282b8 <col:35> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x1268281d0 <col:48, col:51> '<dependent type>' contains-errors lvalue ->url     |   `-RecoveryExpr 0x1268281b0 <col:48> '<dependent type>' contains-errors lvalue     `-LabelStmt 0x126828908 <line:51:1, col:9> 'has_curl'       `-NullStmt 0x126828900 <col:9> ","20234":"`-FunctionDecl 0x157941910  col:15 implicit used strchr 'char *(const char *, int)' extern   |-ParmVarDecl 0x157941a10 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x157941a78 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x1579419b8 <<invalid sloc>> Implicit 893 ","21157":"`-FunctionDecl 0x15b00dfd8  line:1:16 invalid _hostfs_pwrite 'int (int *, const void *, int, int)' static   |-ParmVarDecl 0x15b00dd28 <line:2:5, col:14> col:14 invalid desc 'int *'   |-ParmVarDecl 0x15b00ddd8 <line:3:5, col:17> col:17 used buf 'const void *'   |-ParmVarDecl 0x15b00de58 <line:4:5, col:12> col:12 invalid count 'int'   |-ParmVarDecl 0x15b00ded8 <line:5:5, col:14> col:14 invalid offset 'int'   `-CompoundStmt 0x15b027738 <line:6:1, line:19:1>     |-IfStmt 0x15b00e358 <line:10:5, line:11:33>     | |-UnaryOperator 0x15b00e138 <line:10:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x15b00e120 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x15b00e100 <col:10> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x15b00e330 <line:11:9, col:33> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15b00e2b0 <col:9> 'int ()' Function 0x15b00e1f8 'OE_RAISE_ERRNO' 'int ()'     |   `-RecoveryExpr 0x15b00e310 <col:24> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15b027660 <line:13:5, line:15:33>     | |-RecoveryExpr 0x15b027598 <line:13:9, line:14:9> '_Bool' contains-errors     | `-CallExpr 0x15b027638 <line:15:9, col:33> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15b0275b8 <col:9> 'int ()' Function 0x15b00e1f8 'OE_RAISE_ERRNO' 'int ()'     |   `-RecoveryExpr 0x15b027618 <col:24> '<dependent type>' contains-errors lvalue     `-LabelStmt 0x15b027718 <line:17:1, line:18:12> 'done'       `-ReturnStmt 0x15b0276b8 <col:5, col:12>         `-RecoveryExpr 0x15b027698 <col:12> '<dependent type>' contains-errors lvalue ","21047":"`-FunctionDecl 0x12b128288  line:1:1 invalid check_snapshot_rec 'int (int *, int *)'   |-ParmVarDecl 0x12b128128 <col:20, col:29> col:29 invalid sn 'int *'   |-ParmVarDecl 0x12b1281a8 <col:33, col:42> col:42 invalid fr 'int *'   `-CompoundStmt 0x12b808e98 <line:2:1, line:13:1>     |-IfStmt 0x12b808e30 <line:3:5, line:11:9>     | |-RecoveryExpr 0x12b808dc8 <line:3:9, line:10:54> '_Bool' contains-errors     | `-ReturnStmt 0x12b808e20 <line:11:2, col:9>     |   `-RecoveryExpr 0x12b808e00 <col:9> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12b808e88 <line:12:5, col:12>       `-RecoveryExpr 0x12b808e68 <col:12> '<dependent type>' contains-errors lvalue ","20613":"`-FunctionDecl 0x13a80ddf8  line:1:12 invalid dns_stream_update_io 'int (int *)' static   |-ParmVarDecl 0x13a80dd28 <col:33, col:44> col:44 referenced invalid s 'int *'   `-CompoundStmt 0x13a122600 <col:47, line:25:1>     |-DeclStmt 0x13a80df48 <line:2:9, col:18>     | `-VarDecl 0x13a80dec0 <col:9, col:17> col:13 used f 'int' cinit     |   `-IntegerLiteral 0x13a80df28 <col:17> 'int' 0     |-CallExpr 0x13a80e100 <line:4:9, col:17> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13a80e0c0 <col:9> 'int ()' Function 0x13a80e008 'assert' 'int ()'     | `-RecoveryExpr 0x13a80e0e0 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13b00a060 <line:6:9, line:14:9> has_else     | |-BinaryOperator 0x13a80e390 <line:6:13, col:88> 'int' contains-errors '&&'     | | |-CXXDependentScopeMemberExpr 0x13a80e148 <col:13, col:16> '<dependent type>' contains-errors lvalue ->write_packet     | | | `-RecoveryExpr 0x13a80e128 <col:13> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x13a80e370 <col:32, col:88> 'int' contains-errors '<'     | |   |-CXXDependentScopeMemberExpr 0x13a80e1b0 <col:32, col:35> '<dependent type>' contains-errors lvalue ->n_written     | |   | `-RecoveryExpr 0x13a80e190 <col:32> '<dependent type>' contains-errors lvalue     | |   `-BinaryOperator 0x13a80e350 <col:47, col:88> '<dependent type>' contains-errors '+'     | |     |-UnaryExprOrTypeTraitExpr 0x13a80e280 <col:47, col:67> 'unsigned long' contains-errors sizeof     | |     | `-ParenExpr 0x13a80e260 <col:53, col:67> '<dependent type>' contains-errors lvalue     | |     |   `-CXXDependentScopeMemberExpr 0x13a80e218 <col:54, col:57> '<dependent type>' contains-errors lvalue ->write_size     | |     |     `-RecoveryExpr 0x13a80e1f8 <col:54> '<dependent type>' contains-errors lvalue     | |     `-CXXDependentScopeMemberExpr 0x13a80e308 <col:71, col:88> '<dependent type>' contains-errors lvalue ->size     | |       `-CXXDependentScopeMemberExpr 0x13a80e2c0 <col:71, col:74> '<dependent type>' contains-errors lvalue ->write_packet     | |         `-RecoveryExpr 0x13a80e2a0 <col:71> '<dependent type>' contains-errors lvalue     | |-CompoundAssignOperator 0x13b009650 <line:7:17, col:22> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | | |-DeclRefExpr 0x13a80e3b0 <col:17> 'int' lvalue Var 0x13a80dec0 'f' 'int'     | | `-RecoveryExpr 0x13b009630 <col:22> '<dependent type>' contains-errors lvalue     | `-IfStmt 0x13b00a040 <line:8:14, line:14:9>     |   |-UnaryOperator 0x13b009810 <line:8:18, col:53> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | `-CallExpr 0x13b0097e8 <col:19, col:53> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x13b009760 <col:19> 'int ()' Function 0x13b0096a8 'ordered_set_isempty' 'int ()'     |   |   `-CXXDependentScopeMemberExpr 0x13b0097a0 <col:39, col:42> '<dependent type>' contains-errors lvalue ->write_queue     |   |     `-RecoveryExpr 0x13b009780 <col:39> '<dependent type>' contains-errors lvalue     |   `-CompoundStmt 0x13b00a008 <col:56, line:14:9>     |     |-CallExpr 0x13b009990 <line:9:17, col:49> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x13b009908 <col:17> 'int ()' Function 0x13b009850 'dns_packet_unref' 'int ()'     |     | `-CXXDependentScopeMemberExpr 0x13b009948 <col:34, col:37> '<dependent type>' contains-errors lvalue ->write_packet     |     |   `-RecoveryExpr 0x13b009928 <col:34> '<dependent type>' contains-errors lvalue     |     |-BinaryOperator 0x13b009bd8 <line:10:17, col:73> '<dependent type>' contains-errors '='     |     | |-CXXDependentScopeMemberExpr 0x13b009a00 <col:17, col:20> '<dependent type>' contains-errors lvalue ->write_packet     |     | | `-RecoveryExpr 0x13b0099d8 <col:17> '<dependent type>' contains-errors lvalue     |     | |   `-DeclRefExpr 0x13b0099b8 <col:17> 'int *' lvalue ParmVar 0x13a80dd28 's' 'int *'     |     | `-CallExpr 0x13b009bb0 <col:35, col:73> '<dependent type>' contains-errors     |     |   |-DeclRefExpr 0x13b009b28 <col:35> 'int ()' Function 0x13b009a70 'ordered_set_steal_first' 'int ()'     |     |   `-CXXDependentScopeMemberExpr 0x13b009b68 <col:59, col:62> '<dependent type>' contains-errors lvalue ->write_queue     |     |     `-RecoveryExpr 0x13b009b48 <col:59> '<dependent type>' contains-errors lvalue     |     |-BinaryOperator 0x13b009e60 <line:11:17, col:62> '<dependent type>' contains-errors '='     |     | |-CXXDependentScopeMemberExpr 0x13b009c40 <col:17, col:20> '<dependent type>' contains-errors lvalue ->write_size     |     | | `-RecoveryExpr 0x13b009c18 <col:17> '<dependent type>' contains-errors lvalue     |     | |   `-DeclRefExpr 0x13b009bf8 <col:17> 'int *' lvalue ParmVar 0x13a80dd28 's' 'int *'     |     | `-CallExpr 0x13b009e38 <col:33, col:62> '<dependent type>' contains-errors     |     |   |-DeclRefExpr 0x13b009d68 <col:33> 'int ()' Function 0x13b009cb0 'htobe16' 'int ()'     |     |   `-CXXDependentScopeMemberExpr 0x13b009df0 <col:41, col:58> '<dependent type>' contains-errors lvalue ->size     |     |     `-CXXDependentScopeMemberExpr 0x13b009da8 <col:41, col:44> '<dependent type>' contains-errors lvalue ->write_packet     |     |       `-RecoveryExpr 0x13b009d88 <col:41> '<dependent type>' contains-errors lvalue     |     |-BinaryOperator 0x13b009f30 <line:12:17, col:32> '<dependent type>' contains-errors '='     |     | |-CXXDependentScopeMemberExpr 0x13b009ec8 <col:17, col:20> '<dependent type>' contains-errors lvalue ->n_written     |     | | `-RecoveryExpr 0x13b009ea0 <col:17> '<dependent type>' contains-errors lvalue     |     | |   `-DeclRefExpr 0x13b009e80 <col:17> 'int *' lvalue ParmVar 0x13a80dd28 's' 'int *'     |     | `-IntegerLiteral 0x13b009f10 <col:32> 'int' 0     |     `-CompoundAssignOperator 0x13b009fd8 <line:13:17, col:22> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |       |-DeclRefExpr 0x13b009f50 <col:17> 'int' lvalue Var 0x13a80dec0 'f' 'int'     |       `-RecoveryExpr 0x13b009fb8 <col:22> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13b00a400 <line:15:9, line:16:22>     | |-BinaryOperator 0x13b00a328 <line:15:13, col:83> 'int' contains-errors '||'     | | |-UnaryOperator 0x13b00a110 <col:13, col:17> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x13b00a0f8 <col:14, col:17> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-CXXDependentScopeMemberExpr 0x13b00a0b0 <col:14, col:17> '<dependent type>' contains-errors lvalue ->read_packet     | | |     `-RecoveryExpr 0x13b00a090 <col:14> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x13b00a308 <col:32, col:83> 'int' contains-errors '<'     | |   |-CXXDependentScopeMemberExpr 0x13b00a148 <col:32, col:35> '<dependent type>' contains-errors lvalue ->n_read     | |   | `-RecoveryExpr 0x13b00a128 <col:32> '<dependent type>' contains-errors lvalue     | |   `-BinaryOperator 0x13b00a2e8 <col:44, col:83> '<dependent type>' contains-errors '+'     | |     |-UnaryExprOrTypeTraitExpr 0x13b00a218 <col:44, col:63> 'unsigned long' contains-errors sizeof     | |     | `-ParenExpr 0x13b00a1f8 <col:50, col:63> '<dependent type>' contains-errors lvalue     | |     |   `-CXXDependentScopeMemberExpr 0x13b00a1b0 <col:51, col:54> '<dependent type>' contains-errors lvalue ->read_size     | |     |     `-RecoveryExpr 0x13b00a190 <col:51> '<dependent type>' contains-errors lvalue     | |     `-CXXDependentScopeMemberExpr 0x13b00a2a0 <col:67, col:83> '<dependent type>' contains-errors lvalue ->size     | |       `-CXXDependentScopeMemberExpr 0x13b00a258 <col:67, col:70> '<dependent type>' contains-errors lvalue ->read_packet     | |         `-RecoveryExpr 0x13b00a238 <col:67> '<dependent type>' contains-errors lvalue     | `-CompoundAssignOperator 0x13b00a3d0 <line:16:17, col:22> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |-DeclRefExpr 0x13b00a348 <col:17> 'int' lvalue Var 0x13a80dec0 'f' 'int'     |   `-RecoveryExpr 0x13b00a3b0 <col:22> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x13b00a5d8 <line:24:9, col:67>       `-CallExpr 0x13b00a5a8 <col:16, col:67> '<dependent type>' contains-errors         |-DeclRefExpr 0x13b00a500 <col:16> 'int ()' Function 0x13b00a448 'sd_event_source_set_io_events' 'int ()'         |-CXXDependentScopeMemberExpr 0x13b00a540 <col:46, col:49> '<dependent type>' contains-errors lvalue ->io_event_source         | `-RecoveryExpr 0x13b00a520 <col:46> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x13b00a588 <col:66> 'int' lvalue Var 0x13a80dec0 'f' 'int' ","21138":"`-FunctionDecl 0x14c027438  line:1:5 invalid hns_rcb_get_coalesce_usecs 'int (struct rcb_common_cb *, int)'   |-ParmVarDecl 0x14c00e268 <line:2:2, col:24> col:24 used rcb_common 'struct rcb_common_cb *'   |-ParmVarDecl 0x14c00e2e8 <col:36, col:40> col:40 invalid port_idx 'int'   `-CompoundStmt 0x14c027b38 <line:3:1, line:10:1>     `-IfStmt 0x14c027b08 <line:4:2, line:9:50> has_else       |-CallExpr 0x14c027718 <line:4:6, col:47> '<dependent type>' contains-errors       | |-DeclRefExpr 0x14c027650 <col:6> 'int ()' Function 0x14c027598 'AE_IS_VER1' 'int ()'       | `-CXXDependentScopeMemberExpr 0x14c0276d0 <col:17, col:39> '<dependent type>' contains-errors lvalue ->dsaf_ver       |   `-RecoveryExpr 0x14c0276a8 <col:17, col:29> '<dependent type>' contains-errors lvalue       |     `-DeclRefExpr 0x14c027670 <col:17> 'struct rcb_common_cb *' lvalue ParmVar 0x14c00e268 'rcb_common' 'struct rcb_common_cb *'       |-ReturnStmt 0x14c027970 <line:5:3, line:6:10>       | `-BinaryOperator 0x14c027950 <line:5:10, line:6:10> '<dependent type>' contains-errors '\/'       |   |-CallExpr 0x14c027900 <line:5:10, col:56> '<dependent type>' contains-errors       |   | |-DeclRefExpr 0x14c027820 <col:10> 'int ()' Function 0x14c027768 'dsaf_read_dev' 'int ()'       |   | |-DeclRefExpr 0x14c027840 <col:24> 'struct rcb_common_cb *' lvalue ParmVar 0x14c00e268 'rcb_common' 'struct rcb_common_cb *'       |   | `-RecoveryExpr 0x14c0278e0 <col:36> '<dependent type>' contains-errors lvalue       |   `-RecoveryExpr 0x14c027930 <line:6:10> '<dependent type>' contains-errors lvalue       `-ReturnStmt 0x14c027af8 <line:8:3, line:9:50>         `-CallExpr 0x14c027ac8 <line:8:10, line:9:50> '<dependent type>' contains-errors           |-DeclRefExpr 0x14c027980 <line:8:10> 'int ()' Function 0x14c027768 'dsaf_read_dev' 'int ()'           |-DeclRefExpr 0x14c0279a0 <col:24> 'struct rcb_common_cb *' lvalue ParmVar 0x14c00e268 'rcb_common' 'struct rcb_common_cb *'           `-BinaryOperator 0x14c027aa8 <line:9:10, col:49> '<dependent type>' contains-errors '+'             |-RecoveryExpr 0x14c027a88 <col:10> '<dependent type>' contains-errors lvalue             `-BinaryOperator 0x14c027a18 <col:38, col:49> '<dependent type>' contains-errors '*'               |-RecoveryExpr 0x14c0279d8 <col:38> '<dependent type>' contains-errors lvalue               `-IntegerLiteral 0x14c0279f8 <col:49> 'int' 4 ","21252":"`-FunctionDecl 0x1248da0f0  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x126020400 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x126020468 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x1260204d0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1248da198 <<invalid sloc>> Implicit 900 ","20718":"`-FunctionDecl 0x143140b68  line:1:27 ion_handle_get_by_id 'struct ion_handle *(struct ion_client *, int)' static   |-ParmVarDecl 0x1431286e8 <col:48, col:67> col:67 used client 'struct ion_client *'   |-ParmVarDecl 0x143128768 <line:2:7, col:11> col:11 used id 'int'   `-CompoundStmt 0x1431417a0 <line:3:1, line:13:1>     |-DeclStmt 0x143140d60 <line:4:2, col:27>     | `-VarDecl 0x143140cf8 <col:2, col:21> col:21 used handle 'struct ion_handle *'     |-CallExpr 0x143140f38 <line:6:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x143140ea0 <col:2> 'int ()' Function 0x143140de8 'mutex_lock' 'int ()'     | `-UnaryOperator 0x143140f20 <col:13, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x143140ef8 <col:14, col:22> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x143140ec0 <col:14> 'struct ion_client *' lvalue ParmVar 0x1431286e8 'client' 'struct ion_client *'     |-BinaryOperator 0x143141148 <line:7:2, col:36> 'struct ion_handle *' contains-errors '='     | |-DeclRefExpr 0x143140f60 <col:2> 'struct ion_handle *' lvalue Var 0x143140cf8 'handle' 'struct ion_handle *'     | `-CallExpr 0x143141118 <col:11, col:36> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x143141060 <col:11> 'int ()' Function 0x143140fa8 'idr_find' 'int ()'     |   |-UnaryOperator 0x1431410e0 <col:20, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x1431410b8 <col:21, col:29> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x143141080 <col:21> 'struct ion_client *' lvalue ParmVar 0x1431286e8 'client' 'struct ion_client *'     |   `-DeclRefExpr 0x1431410f8 <col:34> 'int' lvalue ParmVar 0x143128768 'id' 'int'     |-IfStmt 0x143141348 <line:8:2, line:9:24>     | |-ImplicitCastExpr 0x143141188 <line:8:6> 'struct ion_handle *' <LValueToRValue>     | | `-DeclRefExpr 0x143141168 <col:6> 'struct ion_handle *' lvalue Var 0x143140cf8 'handle' 'struct ion_handle *'     | `-CallExpr 0x143141308 <line:9:3, col:24> 'int'     |   |-ImplicitCastExpr 0x1431412f0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x143141280 <col:3> 'int ()' Function 0x1431411c8 'ion_handle_get' 'int ()'     |   `-ImplicitCastExpr 0x143141330 <col:18> 'struct ion_handle *' <LValueToRValue>     |     `-DeclRefExpr 0x1431412a0 <col:18> 'struct ion_handle *' lvalue Var 0x143140cf8 'handle' 'struct ion_handle *'     |-CallExpr 0x1431414e0 <line:10:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x143141448 <col:2> 'int ()' Function 0x143141390 'mutex_unlock' 'int ()'     | `-UnaryOperator 0x1431414c8 <col:15, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1431414a0 <col:16, col:24> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x143141468 <col:16> 'struct ion_client *' lvalue ParmVar 0x1431286e8 'client' 'struct ion_client *'     `-ReturnStmt 0x143141790 <line:12:2, col:42>       `-ConditionalOperator 0x143141760 <col:9, col:42> '<dependent type>' contains-errors         |-DeclRefExpr 0x143141508 <col:9> 'struct ion_handle *' lvalue Var 0x143140cf8 'handle' 'struct ion_handle *'         |-DeclRefExpr 0x143141528 <col:18> 'struct ion_handle *' lvalue Var 0x143140cf8 'handle' 'struct ion_handle *'         `-CallExpr 0x143141738 <col:27, col:42> '<dependent type>' contains-errors           |-DeclRefExpr 0x143141628 <col:27> 'int ()' Function 0x143141570 'ERR_PTR' 'int ()'           `-UnaryOperator 0x143141720 <col:35, col:36> '<dependent type>' contains-errors prefix '-' cannot overflow             `-ImplicitCastExpr 0x143141708 <col:36> '<dependent type>' contains-errors <LValueToRValue>               `-RecoveryExpr 0x1431416e8 <col:36> '<dependent type>' contains-errors lvalue ","20438":"`-FunctionDecl 0x12e141838  line:1:19 invalid xrstor_state_booting 'int (struct xsave_struct *, int)' static inline   |-ParmVarDecl 0x12e128648 <col:40, col:61> col:61 fx 'struct xsave_struct *'   |-ParmVarDecl 0x12e1286e0 <col:65, col:69> col:69 referenced invalid mask 'int'   `-CompoundStmt 0x12e141f80 <line:2:1, line:25:1>     |-DeclStmt 0x12e141990 <line:5:2, col:13>     | `-VarDecl 0x12e141908 <col:2, col:12> col:6 used err 'int' cinit     |   `-IntegerLiteral 0x12e141970 <col:12> 'int' 0     |-CallExpr 0x12e141bf8 <line:7:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12e141b00 <col:2> 'int ()' Function 0x12e141a48 'WARN_ON' 'int ()'     | `-BinaryOperator 0x12e141bd8 <col:10, col:26> 'int' contains-errors '!='     |   |-RecoveryExpr 0x12e141b98 <col:10> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x12e141bb8 <col:26> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12e141f70 <line:24:2, col:9>       `-ImplicitCastExpr 0x12e141f58 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x12e141f38 <col:9> 'int' lvalue Var 0x12e141908 'err' 'int' ","21226":"`-FunctionDecl 0x13e928118  line:1:5 State 'int ()'   `-CompoundStmt 0x13e928208 <line:6:78, col:79> ","20911":"`-FunctionDecl 0x14500ddf8  line:1:6 invalid vnc_client_read_ws 'long (int *)'   |-ParmVarDecl 0x14500dd28 <col:25, col:35> col:35 referenced invalid vs 'int *'   `-CompoundStmt 0x14502a270 <line:2:1, line:30:1>     |-DeclStmt 0x14500dfc0 <line:3:5, col:17>     | |-VarDecl 0x14500dec0 <col:5, col:9> col:9 used ret 'int'     | `-VarDecl 0x14500df40 <col:5, col:14> col:14 used err 'int'     |-BinaryOperator 0x14500e0c0 <line:5:5, col:26> '<dependent type>' contains-errors ','     | |-UnaryExprOrTypeTraitExpr 0x14500e080 <col:5, col:12> 'unsigned long' contains-errors sizeof     | | `-RecoveryExpr 0x14500e060 <col:12> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14500e0a0 <col:26> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1450274f8 <line:6:5, line:7:55> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14500e240 <line:6:5> 'int ()' Function 0x14500e188 'VNC_DEBUG' 'int ()'     | |-StringLiteral 0x14500e2a0 <col:15> 'char[4]' lvalue \"STR\"     | |-CXXDependentScopeMemberExpr 0x14500e328 <col:22, col:35> '<dependent type>' contains-errors lvalue .buffer     | | `-CXXDependentScopeMemberExpr 0x14500e2e0 <col:22, col:26> '<dependent type>' contains-errors lvalue ->ws_input     | |   `-RecoveryExpr 0x14500e2c0 <col:22> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x145027400 <line:7:13, col:26> '<dependent type>' contains-errors lvalue .capacity     | | `-CXXDependentScopeMemberExpr 0x14500e390 <col:13, col:17> '<dependent type>' contains-errors lvalue ->ws_input     | |   `-RecoveryExpr 0x14500e370 <col:13> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x1450274b0 <col:36, col:49> '<dependent type>' contains-errors lvalue .offset     |   `-CXXDependentScopeMemberExpr 0x145027468 <col:36, col:40> '<dependent type>' contains-errors lvalue ->ws_input     |     `-RecoveryExpr 0x145027448 <col:36> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1450276d8 <line:8:5, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x145027618 <col:5> 'int ()' Function 0x145027560 'buffer_reserve' 'int ()'     | |-UnaryOperator 0x1450276a0 <col:20, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x145027658 <col:21, col:25> '<dependent type>' contains-errors lvalue ->ws_input     | |   `-RecoveryExpr 0x145027638 <col:21> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x1450276b8 <col:35> 'int' 4096     |-BinaryOperator 0x145027a48 <line:9:5, col:66> 'int' contains-errors '='     | |-DeclRefExpr 0x145027708 <col:5> 'int' lvalue Var 0x14500dec0 'ret' 'int'     | `-CallExpr 0x145027a10 <col:11, col:66> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x145027808 <col:11> 'int ()' Function 0x145027750 'vnc_client_read_buf' 'int ()'     |   |-RecoveryExpr 0x145027828 <col:31> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x1450279c8 <col:35, col:59> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x145027928 <col:35> 'int ()' Function 0x145027870 'buffer_end' 'int ()'     |   | `-UnaryOperator 0x1450279b0 <col:46, col:51> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-CXXDependentScopeMemberExpr 0x145027968 <col:47, col:51> '<dependent type>' contains-errors lvalue ->ws_input     |   |     `-RecoveryExpr 0x145027948 <col:47> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x1450279f0 <col:62> 'int' 4096     |-IfStmt 0x145027b18 <line:10:5, line:12:5>     | |-UnaryOperator 0x145027aa0 <line:10:9, col:10> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x145027a88 <col:10> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x145027a68 <col:10> 'int' lvalue Var 0x14500dec0 'ret' 'int'     | `-CompoundStmt 0x145027b00 <col:15, line:12:5>     |   `-ReturnStmt 0x145027af0 <line:11:9, col:16>     |     `-ImplicitCastExpr 0x145027ad8 <col:16> 'long' <IntegralCast>     |       `-IntegerLiteral 0x145027ab8 <col:16> 'int' 0     |-CompoundAssignOperator 0x145027c30 <line:13:5, col:28> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-CXXDependentScopeMemberExpr 0x145027bc8 <col:5, col:18> '<dependent type>' contains-errors lvalue .offset     | | `-CXXDependentScopeMemberExpr 0x145027b80 <col:5, col:9> '<dependent type>' contains-errors lvalue ->ws_input     | |   `-RecoveryExpr 0x145027b58 <col:5> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x145027b38 <col:5> 'int *' lvalue ParmVar 0x14500dd28 'vs' 'int *'     | `-DeclRefExpr 0x145027c10 <col:28> 'int' lvalue Var 0x14500dec0 'ret' 'int'     |-DoStmt 0x14502a1f0 <line:16:5, line:27:37>     | |-CompoundStmt 0x14502a0c8 <line:16:8, line:27:5>     | | |-BinaryOperator 0x145027fd8 <line:17:9, line:18:57> 'int' contains-errors '='     | | | |-DeclRefExpr 0x145027c60 <line:17:9> 'int' lvalue Var 0x14500df40 'err' 'int'     | | | `-CallExpr 0x145027f98 <col:15, line:18:57> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x145027d60 <line:17:15> 'int ()' Function 0x145027ca8 'vncws_decode_frame' 'int ()'     | | |   |-UnaryOperator 0x145027de8 <col:34, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   | `-CXXDependentScopeMemberExpr 0x145027da0 <col:35, col:39> '<dependent type>' contains-errors lvalue ->ws_input     | | |   |   `-RecoveryExpr 0x145027d80 <col:35> '<dependent type>' contains-errors lvalue     | | |   |-UnaryOperator 0x145027f10 <col:49, col:50> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   | `-RecoveryExpr 0x145027ef0 <col:50> '<dependent type>' contains-errors lvalue     | | |   |-UnaryOperator 0x145027f48 <line:18:31, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   | `-RecoveryExpr 0x145027f28 <col:32> '<dependent type>' contains-errors lvalue     | | |   `-UnaryOperator 0x145027f80 <col:46, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |     `-RecoveryExpr 0x145027f60 <col:47> '<dependent type>' contains-errors lvalue     | | |-IfStmt 0x1450280e8 <line:19:9, line:21:9>     | | | |-BinaryOperator 0x145028050 <line:19:13, col:20> 'int' '<='     | | | | |-ImplicitCastExpr 0x145028038 <col:13> 'int' <LValueToRValue>     | | | | | `-DeclRefExpr 0x145027ff8 <col:13> 'int' lvalue Var 0x14500df40 'err' 'int'     | | | | `-IntegerLiteral 0x145028018 <col:20> 'int' 0     | | | `-CompoundStmt 0x1450280d0 <col:23, line:21:9>     | | |   `-ReturnStmt 0x1450280c0 <line:20:13, col:20>     | | |     `-ImplicitCastExpr 0x1450280a8 <col:20> 'long' <IntegralCast>     | | |       `-ImplicitCastExpr 0x145028090 <col:20> 'int' <LValueToRValue>     | | |         `-DeclRefExpr 0x145028070 <col:20> 'int' lvalue Var 0x14500df40 'err' 'int'     | | |-CallExpr 0x145028210 <line:23:9, col:48> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x145028108 <col:9> 'int ()' Function 0x145027560 'buffer_reserve' 'int ()'     | | | |-UnaryOperator 0x145028190 <col:24, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | | `-CXXDependentScopeMemberExpr 0x145028148 <col:25, col:29> '<dependent type>' contains-errors lvalue ->input     | | | |   `-RecoveryExpr 0x145028128 <col:25> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x1450281f0 <col:36> '<dependent type>' contains-errors lvalue     | | |-CallExpr 0x145029e78 <line:24:9, col:56> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x145028320 <col:9> 'int ()' Function 0x145028268 'buffer_append' 'int ()'     | | | |-UnaryOperator 0x1450283a8 <col:23, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | | `-CXXDependentScopeMemberExpr 0x145028360 <col:24, col:28> '<dependent type>' contains-errors lvalue ->input     | | | |   `-RecoveryExpr 0x145028340 <col:24> '<dependent type>' contains-errors lvalue     | | | |-RecoveryExpr 0x145029e38 <col:35> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x145029e58 <col:44> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x14502a098 <line:26:9, col:49> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x145029f90 <col:9> 'int ()' Function 0x145029ed8 'buffer_advance' 'int ()'     | |   |-UnaryOperator 0x14502a018 <col:24, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   | `-CXXDependentScopeMemberExpr 0x145029fd0 <col:25, col:29> '<dependent type>' contains-errors lvalue ->ws_input     | |   |   `-RecoveryExpr 0x145029fb0 <col:25> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x14502a078 <col:39> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x14502a1d0 <line:27:14, col:36> 'int' contains-errors '>'     |   |-CXXDependentScopeMemberExpr 0x14502a168 <col:14, col:27> '<dependent type>' contains-errors lvalue .offset     |   | `-CXXDependentScopeMemberExpr 0x14502a120 <col:14, col:18> '<dependent type>' contains-errors lvalue ->ws_input     |   |   `-RecoveryExpr 0x14502a100 <col:14> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x14502a1b0 <col:36> 'int' 0     `-ReturnStmt 0x14502a260 <line:29:5, col:12>       `-ImplicitCastExpr 0x14502a248 <col:12> 'long' <IntegralCast>         `-ImplicitCastExpr 0x14502a230 <col:12> 'int' <LValueToRValue>           `-DeclRefExpr 0x14502a210 <col:12> 'int' lvalue Var 0x14500dec0 'ret' 'int' ","20531":"`-FunctionDecl 0x145941838  line:1:12 invalid map_update_elem 'int (union bpf_attr *, int)' static   |-ParmVarDecl 0x145928648 <col:28, col:44> col:44 used attr 'union bpf_attr *'   |-ParmVarDecl 0x1459286e0 <col:50, col:59> col:59 invalid uattr 'int'   `-CompoundStmt 0x145944530 <line:2:1, line:56:1>     |-DeclStmt 0x1459419d0 <line:5:2, col:24>     | `-VarDecl 0x145941908 <col:2, col:18> col:6 used ufd 'int' cinit     |   `-RecoveryExpr 0x1459419a8 <col:12, col:18> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x145941970 <col:12> 'union bpf_attr *' lvalue ParmVar 0x145928648 'attr' 'union bpf_attr *'     |-DeclStmt 0x145941bd8 <line:6:2, col:21>     | |-RecordDecl 0x1459419e8 <col:2, col:9> col:9 struct bpf_map     | `-VarDecl 0x145941b58 <col:2, col:18> col:18 used map 'struct bpf_map *'     |-DeclStmt 0x145941d08 <line:7:2, col:19>     | |-VarDecl 0x145941c08 <col:2, col:8> col:8 used key 'void *'     | `-VarDecl 0x145941c88 <col:2, col:14> col:14 used value 'void *'     |-DeclStmt 0x145941e98 <line:9:2, col:13>     | |-RecordDecl 0x145941d20 <col:2, col:9> col:9 struct fd     | `-VarDecl 0x145941e18 <col:2, col:12> col:12 referenced invalid f 'struct fd'     |-DeclStmt 0x145941f30 <line:10:2, col:9>     | `-VarDecl 0x145941ec8 <col:2, col:6> col:6 used err 'int'     |-IfStmt 0x1459421f0 <line:12:2, line:13:11>     | |-CallExpr 0x145942120 <line:12:6, col:36> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1459420a0 <col:6> 'int ()' Function 0x145941fe8 'CHECK_ATTR' 'int ()'     | | `-RecoveryExpr 0x145942100 <col:17> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1459421e0 <line:13:3, col:11>     |   `-UnaryOperator 0x1459421c8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x1459421b0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x145942190 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x145942408 <line:15:2, col:15> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x145942230 <col:2> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x145942210 <col:2> 'struct fd' lvalue Var 0x145941e18 'f' 'struct fd'     | `-CallExpr 0x1459423c8 <col:6, col:15> 'int' contains-errors     |   |-ImplicitCastExpr 0x1459423b0 <col:6> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x145942338 <col:6> 'int ()' Function 0x145942280 'fdget' 'int ()'     |   `-ImplicitCastExpr 0x1459423f0 <col:12> 'int' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x145942358 <col:12> 'int' contains-errors lvalue Var 0x145941908 'ufd' 'int'     |-BinaryOperator 0x145942590 <line:16:2, col:23> 'struct bpf_map *' contains-errors '='     | |-DeclRefExpr 0x145942428 <col:2> 'struct bpf_map *' lvalue Var 0x145941b58 'map' 'struct bpf_map *'     | `-CallExpr 0x145942568 <col:8, col:23> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x145942528 <col:8> 'int ()' Function 0x145942470 '__bpf_map_get' 'int ()'     |   `-RecoveryExpr 0x145942548 <col:22> '<dependent type>' contains-errors lvalue     |-IfStmt 0x145942eb8 <line:17:2, line:18:21>     | |-CallExpr 0x1459426e8 <line:17:6, col:16> 'int'     | | |-ImplicitCastExpr 0x1459426d0 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x145942690 <col:6> 'int ()' Function 0x1459425d8 'IS_ERR' 'int ()'     | | `-ImplicitCastExpr 0x145942710 <col:13> 'struct bpf_map *' <LValueToRValue>     | |   `-DeclRefExpr 0x1459426b0 <col:13> 'struct bpf_map *' lvalue Var 0x145941b58 'map' 'struct bpf_map *'     | `-ReturnStmt 0x145942ea8 <line:18:3, col:21>     |   `-CallExpr 0x145942e68 <col:10, col:21> 'int'     |     |-ImplicitCastExpr 0x145942e50 <col:10> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x145942e10 <col:10> 'int ()' Function 0x145942750 'PTR_ERR' 'int ()'     |     `-ImplicitCastExpr 0x145942e90 <col:18> 'struct bpf_map *' <LValueToRValue>     |       `-DeclRefExpr 0x145942e30 <col:18> 'struct bpf_map *' lvalue Var 0x145941b58 'map' 'struct bpf_map *'     |-IfStmt 0x145943220 <line:19:2, line:22:2>     | |-RecoveryExpr 0x145943080 <line:19:6, col:51> '_Bool' contains-errors     | `-CompoundStmt 0x145943200 <col:54, line:22:2>     |   |-BinaryOperator 0x145943178 <line:20:3, col:10> 'int' contains-errors '='     |   | |-DeclRefExpr 0x1459430a0 <col:3> 'int' lvalue Var 0x145941ec8 'err' 'int'     |   | `-UnaryOperator 0x145943160 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x145943148 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x145943128 <col:10> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x1459431e8 <line:21:3, col:8> 'err_put' 0x145943198     |-IfStmt 0x1459435b8 <line:24:2, line:28:2>     | |-RecoveryExpr 0x145943468 <line:24:6, line:25:34> '_Bool' contains-errors     | `-CompoundStmt 0x145943598 <col:37, line:28:2>     |   |-BinaryOperator 0x145943560 <line:26:3, col:10> 'int' contains-errors '='     |   | |-DeclRefExpr 0x145943488 <col:3> 'int' lvalue Var 0x145941ec8 'err' 'int'     |   | `-UnaryOperator 0x145943548 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x145943530 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x145943510 <col:10> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x145943580 <line:27:3, col:8> 'err_put' 0x145943198     |-IfStmt 0x145943900 <line:31:2, line:34:2>     | |-CallExpr 0x1459437b0 <line:31:6, col:16> 'int'     | | |-ImplicitCastExpr 0x145943798 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x145943758 <col:6> 'int ()' Function 0x1459425d8 'IS_ERR' 'int ()'     | | `-ImplicitCastExpr 0x1459437d8 <col:13> 'void *' <LValueToRValue>     | |   `-DeclRefExpr 0x145943778 <col:13> 'void *' lvalue Var 0x145941c08 'key' 'void *'     | `-CompoundStmt 0x1459438e0 <col:19, line:34:2>     |   |-BinaryOperator 0x1459438a8 <line:32:3, col:20> 'int' '='     |   | |-DeclRefExpr 0x1459437f0 <col:3> 'int' lvalue Var 0x145941ec8 'err' 'int'     |   | `-CallExpr 0x145943868 <col:9, col:20> 'int'     |   |   |-ImplicitCastExpr 0x145943850 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x145943810 <col:9> 'int ()' Function 0x145942750 'PTR_ERR' 'int ()'     |   |   `-ImplicitCastExpr 0x145943890 <col:17> 'void *' <LValueToRValue>     |   |     `-DeclRefExpr 0x145943830 <col:17> 'void *' lvalue Var 0x145941c08 'key' 'void *'     |   `-GotoStmt 0x1459438c8 <line:33:3, col:8> 'err_put' 0x145943198     |-IfStmt 0x145943c90 <line:40:2, line:41:8>     | |-UnaryOperator 0x145943c10 <line:40:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x145943bf8 <col:7> 'void *' <LValueToRValue>     | |   `-DeclRefExpr 0x145943bd8 <col:7> 'void *' lvalue Var 0x145941c88 'value' 'void *'     | `-GotoStmt 0x145943c78 <line:41:3, col:8> 'free_key' 0x145943c28     |-IfStmt 0x145943ea8 <line:44:2, line:45:8>     | |-RecoveryExpr 0x145943e20 <line:44:6, col:53> '_Bool' contains-errors     | `-GotoStmt 0x145943e90 <line:45:3, col:8> 'free_value' 0x145943e40     |-BinaryOperator 0x145944110 <line:47:2, col:60> 'int' contains-errors '='     | |-DeclRefExpr 0x145943ec8 <col:2> 'int' lvalue Var 0x145941ec8 'err' 'int'     | `-CallExpr 0x1459440c8 <col:8, col:60> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x145943fc8 <col:8> 'int ()' Function 0x145943f10 'bpf_map_update_value' 'int ()'     |   |-DeclRefExpr 0x145943fe8 <col:29> 'struct bpf_map *' lvalue Var 0x145941b58 'map' 'struct bpf_map *'     |   |-RecoveryExpr 0x145944008 <col:34> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x145944028 <col:37> 'void *' lvalue Var 0x145941c08 'key' 'void *'     |   |-DeclRefExpr 0x145944048 <col:42> 'void *' lvalue Var 0x145941c88 'value' 'void *'     |   `-RecoveryExpr 0x1459440a0 <col:49, col:55> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x145944068 <col:49> 'union bpf_attr *' lvalue ParmVar 0x145928648 'attr' 'union bpf_attr *'     |-LabelStmt 0x1459442a8 <line:49:1, line:50:14> 'free_value'     | `-CallExpr 0x145944268 <col:2, col:14> 'int'     |   |-ImplicitCastExpr 0x145944250 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x145944210 <col:2> 'int ()' Function 0x145944158 'kvfree' 'int ()'     |   `-ImplicitCastExpr 0x145944290 <col:9> 'void *' <LValueToRValue>     |     `-DeclRefExpr 0x145944230 <col:9> 'void *' lvalue Var 0x145941c88 'value' 'void *'     |-LabelStmt 0x145944360 <line:51:1, line:52:12> 'free_key'     | `-CallExpr 0x145944320 <col:2, col:12> 'int'     |   |-ImplicitCastExpr 0x145944308 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1459442c8 <col:2> 'int ()' Function 0x145944158 'kvfree' 'int ()'     |   `-ImplicitCastExpr 0x145944348 <col:9> 'void *' <LValueToRValue>     |     `-DeclRefExpr 0x1459442e8 <col:9> 'void *' lvalue Var 0x145941c08 'key' 'void *'     |-LabelStmt 0x1459444c8 <line:53:1, line:54:9> 'err_put'     | `-CallExpr 0x1459444a0 <col:2, col:9> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x145944460 <col:2> 'int ()' Function 0x1459443a8 'fdput' 'int ()'     |   `-RecoveryExpr 0x145944480 <col:8> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x145944520 <line:55:2, col:9>       `-ImplicitCastExpr 0x145944508 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x1459444e8 <col:9> 'int' lvalue Var 0x145941ec8 'err' 'int' ","20984":"`-FunctionDecl 0x15700de88  line:1:1 invalid inspect_main 'int (int *, int)'   |-ParmVarDecl 0x15700dd28 <col:14, col:25> col:25 invalid mrb 'int *'   |-ParmVarDecl 0x15700dda8 <col:30, col:40> col:40 invalid mod 'int'   `-CompoundStmt 0x15700e180 <line:2:1, line:4:1>     `-ReturnStmt 0x15700e170 <line:3:3, col:36>       `-CallExpr 0x15700e140 <col:10, col:36> '<dependent type>' contains-errors         |-DeclRefExpr 0x15700e0a0 <col:10> 'int ()' Function 0x15700dfe8 'mrb_str_new_lit' 'int ()'         |-RecoveryExpr 0x15700e0c0 <col:26> '<dependent type>' contains-errors lvalue         `-StringLiteral 0x15700e120 <col:31> 'char[4]' lvalue \"STR\" ","20743":"`-FunctionDecl 0x145943b08  col:33 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x145943c08 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x145943bb0 <<invalid sloc>> Implicit 902 ","20332":"`-FunctionDecl 0x12f00e358  line:1:12 sd_resume 'int (struct device *)' static   |-ParmVarDecl 0x12f00e248 <col:22, col:37> col:37 used dev 'struct device *'   `-CompoundStmt 0x12f027260 <line:2:1, line:15:1>     |-DeclStmt 0x12f026a48 <line:3:2, col:54>     | |-RecordDecl 0x12f026650 <col:2, col:9> col:9 struct scsi_disk     | `-VarDecl 0x12f0267b8 <col:2, col:53> col:20 used sdkp 'struct scsi_disk *' cinit     |   `-ImplicitCastExpr 0x12f026a18 <col:27, col:53> 'struct scsi_disk *' <IntegralToPointer>     |     `-CallExpr 0x12f0269d8 <col:27, col:53> 'int'     |       |-ImplicitCastExpr 0x12f0269c0 <col:27> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x12f026950 <col:27> 'int ()' Function 0x12f026898 'scsi_disk_get_from_dev' 'int ()'     |       `-ImplicitCastExpr 0x12f026a00 <col:50> 'struct device *' <LValueToRValue>     |         `-DeclRefExpr 0x12f026970 <col:50> 'struct device *' lvalue ParmVar 0x12f00e248 'dev' 'struct device *'     |-DeclStmt 0x12f026b00 <line:4:2, col:13>     | `-VarDecl 0x12f026a78 <col:2, col:12> col:6 used ret 'int' cinit     |   `-IntegerLiteral 0x12f026ae0 <col:12> 'int' 0     |-IfStmt 0x12f026c58 <line:6:2, line:7:8>     | |-UnaryOperator 0x12f026bd8 <line:6:6, col:21> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12f026bc0 <col:7, col:21> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x12f026b78 <col:7, col:21> '<dependent type>' contains-errors lvalue ->manage_start_stop     | |     `-RecoveryExpr 0x12f026b50 <col:7, col:13> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x12f026b18 <col:7> 'struct scsi_disk *' lvalue Var 0x12f0267b8 'sdkp' 'struct scsi_disk *'     | `-GotoStmt 0x12f026c40 <line:7:3, col:8> 'done' 0x12f026bf0     |-CallExpr 0x12f026e68 <line:9:2, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f026d58 <col:2> 'int ()' Function 0x12f026ca0 'sd_printk' 'int ()'     | |-RecoveryExpr 0x12f026e48 <col:12> '<dependent type>' contains-errors lvalue     | |-DeclRefExpr 0x12f026d90 <col:25> 'struct scsi_disk *' lvalue Var 0x12f0267b8 'sdkp' 'struct scsi_disk *'     | `-StringLiteral 0x12f026df0 <col:31> 'char[4]' lvalue \"STR\"     |-BinaryOperator 0x12f027060 <line:10:2, col:36> 'int' '='     | |-DeclRefExpr 0x12f026ea0 <col:2> 'int' lvalue Var 0x12f026a78 'ret' 'int'     | `-CallExpr 0x12f027018 <col:8, col:36> 'int'     |   |-ImplicitCastExpr 0x12f027000 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12f026fa0 <col:8> 'int ()' Function 0x12f026ee8 'sd_start_stop_device' 'int ()'     |   |-ImplicitCastExpr 0x12f027048 <col:29> 'struct scsi_disk *' <LValueToRValue>     |   | `-DeclRefExpr 0x12f026fc0 <col:29> 'struct scsi_disk *' lvalue Var 0x12f0267b8 'sdkp' 'struct scsi_disk *'     |   `-IntegerLiteral 0x12f026fe0 <col:35> 'int' 1     |-LabelStmt 0x12f0271f8 <line:12:1, line:13:20> 'done'     | `-CallExpr 0x12f0271b8 <col:2, col:20> 'int'     |   |-ImplicitCastExpr 0x12f0271a0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12f027160 <col:2> 'int ()' Function 0x12f0270a8 'scsi_disk_put' 'int ()'     |   `-ImplicitCastExpr 0x12f0271e0 <col:16> 'struct scsi_disk *' <LValueToRValue>     |     `-DeclRefExpr 0x12f027180 <col:16> 'struct scsi_disk *' lvalue Var 0x12f0267b8 'sdkp' 'struct scsi_disk *'     `-ReturnStmt 0x12f027250 <line:14:2, col:9>       `-ImplicitCastExpr 0x12f027238 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x12f027218 <col:9> 'int' lvalue Var 0x12f026a78 'ret' 'int' ","21014":"`-FunctionDecl 0x14e941f80  col:6 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x14e942080 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x14e9420e8 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x14e942028 <<invalid sloc>> Implicit 887 ","21123":"`-FunctionDecl 0x142827310  col:3 implicit used index 'char *(const char *, int)' extern   |-ParmVarDecl 0x142827410 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x142827478 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x1428273b8 <<invalid sloc>> Implicit 952 ","20297":"`-FunctionDecl 0x12f1281f8  line:1:12 invalid r_anal_bb_free 'int (int *)'   |-ParmVarDecl 0x12f128128 <col:27, col:39> col:39 referenced invalid bb 'int *'   `-CompoundStmt 0x12f142e00 <col:43, line:35:1>     |-IfStmt 0x12f128320 <line:2:2, line:4:2>     | |-UnaryOperator 0x12f1282e0 <line:2:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12f1282c8 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x12f1282a8 <col:7> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12f128308 <col:11, line:4:2>     |   `-ReturnStmt 0x12f1282f8 <line:3:3>     |-CallExpr 0x12f128528 <line:5:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f1284a0 <col:2> 'int ()' Function 0x12f1283e8 'r_anal_cond_free' 'int ()'     | `-CXXDependentScopeMemberExpr 0x12f1284e0 <col:20, col:24> '<dependent type>' contains-errors lvalue ->cond     |   `-RecoveryExpr 0x12f1284c0 <col:20> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12f1286b8 <line:6:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f128630 <col:2> 'int ()' Function 0x12f128578 'R_FREE' 'int ()'     | `-CXXDependentScopeMemberExpr 0x12f128670 <col:10, col:14> '<dependent type>' contains-errors lvalue ->fingerprint     |   `-RecoveryExpr 0x12f128650 <col:10> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12f141848 <line:7:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f1287c0 <col:2> 'int ()' Function 0x12f128708 'r_anal_diff_free' 'int ()'     | `-CXXDependentScopeMemberExpr 0x12f141800 <col:20, col:24> '<dependent type>' contains-errors lvalue ->diff     |   `-RecoveryExpr 0x12f1287e0 <col:20> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12f141958 <line:8:2, col:13> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12f1418b8 <col:2, col:6> '<dependent type>' contains-errors lvalue ->diff     | | `-RecoveryExpr 0x12f141890 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12f141870 <col:2> 'int *' lvalue ParmVar 0x12f128128 'bb' 'int *'     | `-RecoveryExpr 0x12f141938 <col:13> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12f141a00 <line:9:2, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f141978 <col:2> 'int ()' Function 0x12f128578 'R_FREE' 'int ()'     | `-CXXDependentScopeMemberExpr 0x12f1419b8 <col:10, col:14> '<dependent type>' contains-errors lvalue ->op_bytes     |   `-RecoveryExpr 0x12f141998 <col:10> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12f141b90 <line:10:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f141b08 <col:2> 'int ()' Function 0x12f141a50 'r_anal_switch_op_free' 'int ()'     | `-CXXDependentScopeMemberExpr 0x12f141b48 <col:25, col:29> '<dependent type>' contains-errors lvalue ->switch_op     |   `-RecoveryExpr 0x12f141b28 <col:25> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12f141ca0 <line:11:2, col:18> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12f141c00 <col:2, col:6> '<dependent type>' contains-errors lvalue ->switch_op     | | `-RecoveryExpr 0x12f141bd8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12f141bb8 <col:2> 'int *' lvalue ParmVar 0x12f128128 'bb' 'int *'     | `-RecoveryExpr 0x12f141c80 <col:18> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12f141da8 <line:12:2, col:20> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12f141d08 <col:2, col:6> '<dependent type>' contains-errors lvalue ->fingerprint     | | `-RecoveryExpr 0x12f141ce0 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12f141cc0 <col:2> 'int *' lvalue ParmVar 0x12f128128 'bb' 'int *'     | `-RecoveryExpr 0x12f141d88 <col:20> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12f141eb0 <line:13:2, col:13> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12f141e10 <col:2, col:6> '<dependent type>' contains-errors lvalue ->cond     | | `-RecoveryExpr 0x12f141de8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12f141dc8 <col:2> 'int *' lvalue ParmVar 0x12f128128 'bb' 'int *'     | `-RecoveryExpr 0x12f141e90 <col:13> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12f141f58 <line:14:2, col:19> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f141ed0 <col:2> 'int ()' Function 0x12f128578 'R_FREE' 'int ()'     | `-CXXDependentScopeMemberExpr 0x12f141f10 <col:10, col:14> '<dependent type>' contains-errors lvalue ->label     |   `-RecoveryExpr 0x12f141ef0 <col:10> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12f142008 <line:15:2, col:20> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f141f80 <col:2> 'int ()' Function 0x12f128578 'R_FREE' 'int ()'     | `-CXXDependentScopeMemberExpr 0x12f141fc0 <col:10, col:14> '<dependent type>' contains-errors lvalue ->op_pos     |   `-RecoveryExpr 0x12f141fa0 <col:10> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12f1420b8 <line:16:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f142030 <col:2> 'int ()' Function 0x12f128578 'R_FREE' 'int ()'     | `-CXXDependentScopeMemberExpr 0x12f142070 <col:10, col:14> '<dependent type>' contains-errors lvalue ->parent_reg_arena     |   `-RecoveryExpr 0x12f142050 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12f142768 <line:17:2, line:25:2>     | |-CXXDependentScopeMemberExpr 0x12f142100 <line:17:6, col:10> '<dependent type>' contains-errors lvalue ->prev     | | `-RecoveryExpr 0x12f1420e0 <col:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12f142740 <col:16, line:25:2>     |   |-IfStmt 0x12f1423a0 <line:18:3, line:20:3>     |   | |-BinaryOperator 0x12f142218 <line:18:7, col:27> 'int' contains-errors '=='     |   | | |-CXXDependentScopeMemberExpr 0x12f1421b0 <col:7, col:17> '<dependent type>' contains-errors lvalue ->jumpbb     |   | | | `-CXXDependentScopeMemberExpr 0x12f142168 <col:7, col:11> '<dependent type>' contains-errors lvalue ->prev     |   | | |   `-RecoveryExpr 0x12f142148 <col:7> '<dependent type>' contains-errors lvalue     |   | | `-RecoveryExpr 0x12f1421f8 <col:27> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x12f142388 <col:31, line:20:3>     |   |   `-BinaryOperator 0x12f142368 <line:19:4, col:23> '<dependent type>' contains-errors '='     |   |     |-CXXDependentScopeMemberExpr 0x12f1422c8 <col:4, col:14> '<dependent type>' contains-errors lvalue ->jumpbb     |   |     | `-CXXDependentScopeMemberExpr 0x12f142280 <col:4, col:8> '<dependent type>' contains-errors lvalue ->prev     |   |     |   `-RecoveryExpr 0x12f142258 <col:4> '<dependent type>' contains-errors lvalue     |   |     |     `-DeclRefExpr 0x12f142238 <col:4> 'int *' lvalue ParmVar 0x12f128128 'bb' 'int *'     |   |     `-RecoveryExpr 0x12f142348 <col:23> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x12f142618 <line:21:3, line:23:3>     |   | |-BinaryOperator 0x12f142490 <line:21:7, col:27> 'int' contains-errors '=='     |   | | |-CXXDependentScopeMemberExpr 0x12f142428 <col:7, col:17> '<dependent type>' contains-errors lvalue ->failbb     |   | | | `-CXXDependentScopeMemberExpr 0x12f1423e0 <col:7, col:11> '<dependent type>' contains-errors lvalue ->prev     |   | | |   `-RecoveryExpr 0x12f1423c0 <col:7> '<dependent type>' contains-errors lvalue     |   | | `-RecoveryExpr 0x12f142470 <col:27> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x12f142600 <col:31, line:23:3>     |   |   `-BinaryOperator 0x12f1425e0 <line:22:4, col:23> '<dependent type>' contains-errors '='     |   |     |-CXXDependentScopeMemberExpr 0x12f142540 <col:4, col:14> '<dependent type>' contains-errors lvalue ->failbb     |   |     | `-CXXDependentScopeMemberExpr 0x12f1424f8 <col:4, col:8> '<dependent type>' contains-errors lvalue ->prev     |   |     |   `-RecoveryExpr 0x12f1424d0 <col:4> '<dependent type>' contains-errors lvalue     |   |     |     `-DeclRefExpr 0x12f1424b0 <col:4> 'int *' lvalue ParmVar 0x12f128128 'bb' 'int *'     |   |     `-RecoveryExpr 0x12f1425c0 <col:23> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x12f142720 <line:24:3, col:14> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x12f142680 <col:3, col:7> '<dependent type>' contains-errors lvalue ->prev     |     | `-RecoveryExpr 0x12f142658 <col:3> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x12f142638 <col:3> 'int *' lvalue ParmVar 0x12f128128 'bb' 'int *'     |     `-RecoveryExpr 0x12f142700 <col:14> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12f142a78 <line:26:2, line:29:2>     | |-CXXDependentScopeMemberExpr 0x12f1427a8 <line:26:6, col:10> '<dependent type>' contains-errors lvalue ->jumpbb     | | `-RecoveryExpr 0x12f142788 <col:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12f142a58 <col:18, line:29:2>     |   |-BinaryOperator 0x12f142930 <line:27:3, col:22> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x12f142890 <col:3, col:15> '<dependent type>' contains-errors lvalue ->prev     |   | | `-CXXDependentScopeMemberExpr 0x12f142848 <col:3, col:7> '<dependent type>' contains-errors lvalue ->jumpbb     |   | |   `-RecoveryExpr 0x12f142820 <col:3> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x12f142800 <col:3> 'int *' lvalue ParmVar 0x12f128128 'bb' 'int *'     |   | `-RecoveryExpr 0x12f142910 <col:22> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x12f142a38 <line:28:3, col:16> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x12f142998 <col:3, col:7> '<dependent type>' contains-errors lvalue ->jumpbb     |     | `-RecoveryExpr 0x12f142970 <col:3> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x12f142950 <col:3> 'int *' lvalue ParmVar 0x12f128128 'bb' 'int *'     |     `-RecoveryExpr 0x12f142a18 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12f142d78 <line:30:2, line:33:2>     | |-CXXDependentScopeMemberExpr 0x12f142ab8 <line:30:6, col:10> '<dependent type>' contains-errors lvalue ->failbb     | | `-RecoveryExpr 0x12f142a98 <col:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12f142d58 <col:18, line:33:2>     |   |-BinaryOperator 0x12f142c30 <line:31:3, col:22> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x12f142b90 <col:3, col:15> '<dependent type>' contains-errors lvalue ->prev     |   | | `-CXXDependentScopeMemberExpr 0x12f142b48 <col:3, col:7> '<dependent type>' contains-errors lvalue ->failbb     |   | |   `-RecoveryExpr 0x12f142b20 <col:3> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x12f142b00 <col:3> 'int *' lvalue ParmVar 0x12f128128 'bb' 'int *'     |   | `-RecoveryExpr 0x12f142c10 <col:22> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x12f142d38 <line:32:3, col:16> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x12f142c98 <col:3, col:7> '<dependent type>' contains-errors lvalue ->failbb     |     | `-RecoveryExpr 0x12f142c70 <col:3> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x12f142c50 <col:3> 'int *' lvalue ParmVar 0x12f128128 'bb' 'int *'     |     `-RecoveryExpr 0x12f142d18 <col:16> '<dependent type>' contains-errors lvalue     `-CallExpr 0x12f142dd8 <line:34:2, col:12> '<dependent type>' contains-errors       |-DeclRefExpr 0x12f142d98 <col:2> 'int ()' Function 0x12f128578 'R_FREE' 'int ()'       `-RecoveryExpr 0x12f142db8 <col:10> '<dependent type>' contains-errors lvalue ","20882":"`-FunctionDecl 0x14a9425f0  col:5 implicit used memmove 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x14a9426f0 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x14a942758 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x14a9427c0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14a942698 <<invalid sloc>> Implicit 884 ","20784":"`-FunctionDecl 0x13f941838  line:1:5 invalid nfc_enable_se 'int (struct nfc_dev *, int)'   |-ParmVarDecl 0x13f928648 <col:19, col:35> col:35 used dev 'struct nfc_dev *'   |-ParmVarDecl 0x13f9286e0 <col:40, col:44> col:44 invalid se_idx 'int'   `-CompoundStmt 0x13f9433d0 <line:2:1, line:48:1>     |-DeclStmt 0x13f941ad8 <line:3:2, col:19>     | |-RecordDecl 0x13f9418f0 <col:2, col:9> col:9 struct nfc_se     | `-VarDecl 0x13f941a58 <col:2, col:17> col:17 used se 'struct nfc_se *'     |-DeclStmt 0x13f941b70 <line:4:2, col:8>     | `-VarDecl 0x13f941b08 <col:2, col:6> col:6 used rc 'int'     |-CallExpr 0x13f941f20 <line:6:2, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13f941ce0 <col:2> 'int ()' Function 0x13f941c28 'pr_debug' 'int ()'     | |-StringLiteral 0x13f941d40 <col:11> 'char[4]' lvalue \"STR\"     | |-CallExpr 0x13f941ed8 <col:18, col:36> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x13f941e40 <col:18> 'int ()' Function 0x13f941d88 'dev_name' 'int ()'     | | `-UnaryOperator 0x13f941ec0 <col:27, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x13f941e98 <col:28, col:33> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x13f941e60 <col:28> 'struct nfc_dev *' lvalue ParmVar 0x13f928648 'dev' 'struct nfc_dev *'     | `-RecoveryExpr 0x13f941f00 <col:39> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13f9420d0 <line:8:2, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13f942038 <col:2> 'int ()' Function 0x13f941f80 'device_lock' 'int ()'     | `-UnaryOperator 0x13f9420b8 <col:14, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13f942090 <col:15, col:20> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13f942058 <col:15> 'struct nfc_dev *' lvalue ParmVar 0x13f928648 'dev' 'struct nfc_dev *'     |-IfStmt 0x13f942430 <line:10:2, line:13:2>     | |-UnaryOperator 0x13f942298 <line:10:6, col:37> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x13f942270 <col:7, col:37> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x13f9421d8 <col:7> 'int ()' Function 0x13f942120 'device_is_registered' 'int ()'     | |   `-UnaryOperator 0x13f942258 <col:28, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-RecoveryExpr 0x13f942230 <col:29, col:34> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x13f9421f8 <col:29> 'struct nfc_dev *' lvalue ParmVar 0x13f928648 'dev' 'struct nfc_dev *'     | `-CompoundStmt 0x13f942410 <col:40, line:13:2>     |   |-BinaryOperator 0x13f942388 <line:11:3, col:9> 'int' contains-errors '='     |   | |-DeclRefExpr 0x13f9422b0 <col:3> 'int' lvalue Var 0x13f941b08 'rc' 'int'     |   | `-UnaryOperator 0x13f942370 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x13f942358 <col:9> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x13f942338 <col:9> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x13f9423f8 <line:12:3, col:8> 'error' 0x13f9423a8     |-IfStmt 0x13f942610 <line:15:2, line:18:2>     | |-UnaryOperator 0x13f9424c8 <line:15:6, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13f9424b0 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x13f942488 <col:7, col:12> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x13f942450 <col:7> 'struct nfc_dev *' lvalue ParmVar 0x13f928648 'dev' 'struct nfc_dev *'     | `-CompoundStmt 0x13f9425f0 <col:20, line:18:2>     |   |-BinaryOperator 0x13f9425b8 <line:16:3, col:9> 'int' contains-errors '='     |   | |-DeclRefExpr 0x13f9424e0 <col:3> 'int' lvalue Var 0x13f941b08 'rc' 'int'     |   | `-UnaryOperator 0x13f9425a0 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x13f942588 <col:9> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x13f942568 <col:9> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x13f9425d8 <line:17:3, col:8> 'error' 0x13f9423a8     |-IfStmt 0x13f9427c0 <line:20:2, line:23:2>     | |-RecoveryExpr 0x13f942668 <line:20:6, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13f942630 <col:6> 'struct nfc_dev *' lvalue ParmVar 0x13f928648 'dev' 'struct nfc_dev *'     | `-CompoundStmt 0x13f9427a0 <col:20, line:23:2>     |   |-BinaryOperator 0x13f942768 <line:21:3, col:9> 'int' contains-errors '='     |   | |-DeclRefExpr 0x13f942690 <col:3> 'int' lvalue Var 0x13f941b08 'rc' 'int'     |   | `-UnaryOperator 0x13f942750 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x13f942738 <col:9> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x13f942718 <col:9> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x13f942788 <line:22:3, col:8> 'error' 0x13f9423a8     |-IfStmt 0x13f942ae0 <line:25:2, line:28:2>     | |-BinaryOperator 0x13f942990 <line:25:6, col:41> 'int' contains-errors '||'     | | |-UnaryOperator 0x13f9428a0 <col:6, col:17> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x13f942888 <col:7, col:17> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-CXXDependentScopeMemberExpr 0x13f942840 <col:7, col:17> '<dependent type>' contains-errors lvalue ->enable_se     | | |     `-RecoveryExpr 0x13f942818 <col:7, col:12> '<dependent type>' contains-errors lvalue     | | |       `-DeclRefExpr 0x13f9427e0 <col:7> 'struct nfc_dev *' lvalue ParmVar 0x13f928648 'dev' 'struct nfc_dev *'     | | `-UnaryOperator 0x13f942978 <col:30, col:41> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x13f942960 <col:31, col:41> '<dependent type>' contains-errors <LValueToRValue>     | |     `-CXXDependentScopeMemberExpr 0x13f942918 <col:31, col:41> '<dependent type>' contains-errors lvalue ->disable_se     | |       `-RecoveryExpr 0x13f9428f0 <col:31, col:36> '<dependent type>' contains-errors lvalue     | |         `-DeclRefExpr 0x13f9428b8 <col:31> 'struct nfc_dev *' lvalue ParmVar 0x13f928648 'dev' 'struct nfc_dev *'     | `-CompoundStmt 0x13f942ac0 <col:53, line:28:2>     |   |-BinaryOperator 0x13f942a88 <line:26:3, col:9> 'int' contains-errors '='     |   | |-DeclRefExpr 0x13f9429b0 <col:3> 'int' lvalue Var 0x13f941b08 'rc' 'int'     |   | `-UnaryOperator 0x13f942a70 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x13f942a58 <col:9> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x13f942a38 <col:9> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x13f942aa8 <line:27:3, col:8> 'error' 0x13f9423a8     |-BinaryOperator 0x13f942c90 <line:30:2, col:30> 'struct nfc_se *' contains-errors '='     | |-DeclRefExpr 0x13f942b00 <col:2> 'struct nfc_se *' lvalue Var 0x13f941a58 'se' 'struct nfc_se *'     | `-CallExpr 0x13f942c60 <col:7, col:30> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13f942c00 <col:7> 'int ()' Function 0x13f942b48 'nfc_find_se' 'int ()'     |   |-DeclRefExpr 0x13f942c20 <col:19> 'struct nfc_dev *' lvalue ParmVar 0x13f928648 'dev' 'struct nfc_dev *'     |   `-RecoveryExpr 0x13f942c40 <col:24> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13f942e30 <line:31:2, line:34:2>     | |-UnaryOperator 0x13f942ce8 <line:31:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13f942cd0 <col:7> 'struct nfc_se *' <LValueToRValue>     | |   `-DeclRefExpr 0x13f942cb0 <col:7> 'struct nfc_se *' lvalue Var 0x13f941a58 'se' 'struct nfc_se *'     | `-CompoundStmt 0x13f942e10 <col:11, line:34:2>     |   |-BinaryOperator 0x13f942dd8 <line:32:3, col:9> 'int' contains-errors '='     |   | |-DeclRefExpr 0x13f942d00 <col:3> 'int' lvalue Var 0x13f941b08 'rc' 'int'     |   | `-UnaryOperator 0x13f942dc0 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x13f942da8 <col:9> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x13f942d88 <col:9> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x13f942df8 <line:33:3, col:8> 'error' 0x13f9423a8     |-IfStmt 0x13f942f78 <line:36:2, line:39:2>     | |-BinaryOperator 0x13f942f08 <line:36:6, col:19> 'int' contains-errors '=='     | | |-RecoveryExpr 0x13f942e88 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x13f942e50 <col:6> 'struct nfc_se *' lvalue Var 0x13f941a58 'se' 'struct nfc_se *'     | | `-RecoveryExpr 0x13f942ee8 <col:19> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13f942f60 <col:35, line:39:2>     |   `-GotoStmt 0x13f942f48 <line:38:3, col:8> 'error' 0x13f9423a8     |-BinaryOperator 0x13f9430d0 <line:41:2, col:38> 'int' contains-errors '='     | |-DeclRefExpr 0x13f942f98 <col:2> 'int' lvalue Var 0x13f941b08 'rc' 'int'     | `-CallExpr 0x13f9430a0 <col:7, col:38> '<dependent type>' contains-errors     |   |-CXXDependentScopeMemberExpr 0x13f943018 <col:7, col:17> '<dependent type>' contains-errors lvalue ->enable_se     |   | `-RecoveryExpr 0x13f942ff0 <col:7, col:12> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x13f942fb8 <col:7> 'struct nfc_dev *' lvalue ParmVar 0x13f928648 'dev' 'struct nfc_dev *'     |   |-DeclRefExpr 0x13f943060 <col:27> 'struct nfc_dev *' lvalue ParmVar 0x13f928648 'dev' 'struct nfc_dev *'     |   `-RecoveryExpr 0x13f943080 <col:32> '<dependent type>' contains-errors lvalue     |-LabelStmt 0x13f943368 <line:45:1, line:46:25> 'error'     | `-CallExpr 0x13f943340 <col:2, col:25> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13f9432a8 <col:2> 'int ()' Function 0x13f9431f0 'device_unlock' 'int ()'     |   `-UnaryOperator 0x13f943328 <col:16, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x13f943300 <col:17, col:22> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13f9432c8 <col:17> 'struct nfc_dev *' lvalue ParmVar 0x13f928648 'dev' 'struct nfc_dev *'     `-ReturnStmt 0x13f9433c0 <line:47:2, col:9>       `-ImplicitCastExpr 0x13f9433a8 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x13f943388 <col:9> 'int' lvalue Var 0x13f941b08 'rc' 'int' ","20340":"`-FunctionDecl 0x14a907990  col:5 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern   |-ParmVarDecl 0x14a907a90 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x14a907af8 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-ParmVarDecl 0x14a907b60 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x14a907a38 <<invalid sloc>> Implicit 905   `-FormatAttr 0x14a907be0 <col:5> Implicit printf 3 4 ","20868":"`-FunctionDecl 0x14e1281c8  line:1:17 invalid pac_inv_sub 'int (int)' static   |-ParmVarDecl 0x14e1280f0 <col:29, col:38> col:38 invalid i 'int'   `-CompoundStmt 0x14e808738 <line:2:1, line:14:1>     |-DeclStmt 0x14e128690 <line:3:5, line:6:6>     | `-VarDecl 0x14e128368 <line:3:5, col:36> col:26 invalid inv_sub 'const int[16]' static     |-DeclStmt 0x14e128728 <line:8:5, col:10>     | `-VarDecl 0x14e1286c0 <col:5, col:9> col:9 used b 'int'     |-ForStmt 0x14e8086b8 <line:10:5, line:12:5>     | |-BinaryOperator 0x14e128780 <line:10:10, col:14> 'int' '='     | | |-DeclRefExpr 0x14e128740 <col:10> 'int' lvalue Var 0x14e1286c0 'b' 'int'     | | `-IntegerLiteral 0x14e128760 <col:14> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x14e808600 <col:17, col:21> 'int' '<'     | | |-ImplicitCastExpr 0x14e1287e0 <col:17> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x14e1287a0 <col:17> 'int' lvalue Var 0x14e1286c0 'b' 'int'     | | `-IntegerLiteral 0x14e1287c0 <col:21> 'int' 64     | |-CompoundAssignOperator 0x14e808660 <col:25, col:30> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'     | | |-DeclRefExpr 0x14e808620 <col:25> 'int' lvalue Var 0x14e1286c0 'b' 'int'     | | `-IntegerLiteral 0x14e808640 <col:30> 'int' 16     | `-CompoundStmt 0x14e8086a8 <col:34, line:12:5>     `-ReturnStmt 0x14e808728 <line:13:5, col:12>       `-RecoveryExpr 0x14e808708 <col:12> '<dependent type>' contains-errors lvalue ","20379":"`-FunctionDecl 0x13180e350  line:1:13 end_icalendar 'void (struct buf *)' static   |-ParmVarDecl 0x13180e248 <col:27, col:39> col:39 used buf 'struct buf *'   `-CompoundStmt 0x13182aab8 <line:2:1, line:5:1>     `-CallExpr 0x13182aa58 <line:4:5, col:27> 'int'       |-ImplicitCastExpr 0x13182aa40 <col:5> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x13182a970 <col:5> 'int ()' Function 0x13182a8b8 'buf_setcstr' 'int ()'       |-ImplicitCastExpr 0x13182aa88 <col:17> 'struct buf *' <LValueToRValue>       | `-DeclRefExpr 0x13182a990 <col:17> 'struct buf *' lvalue ParmVar 0x13180e248 'buf' 'struct buf *'       `-ImplicitCastExpr 0x13182aaa0 <col:22> 'char *' <ArrayToPointerDecay>         `-StringLiteral 0x13182a9f0 <col:22> 'char[4]' lvalue \"STR\" ","20878":"`-FunctionDecl 0x124941768  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x124941868 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x1249418d0 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x124941938 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x124941810 <<invalid sloc>> Implicit 900 ","21010":"`-FunctionDecl 0x12e00e2d8  col:5 implicit used exit 'void (int) __attribute__((noreturn))' extern   |-ParmVarDecl 0x12e00e3d8 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x12e00e380 <<invalid sloc>> Implicit 869 ","20410":"`-FunctionDecl 0x135122958  line:1:6 invalid move_huge_pmd 'int (struct vm_area_struct *, unsigned long, unsigned long, unsigned long, int *, int *, int *)'   |-ParmVarDecl 0x13580e268 <col:20, col:43> col:43 used vma 'struct vm_area_struct *'   |-ParmVarDecl 0x13580e2e8 <col:48, col:62> col:62 used old_addr 'unsigned long'   |-ParmVarDecl 0x13580e368 <line:2:5, col:19> col:19 used new_addr 'unsigned long'   |-ParmVarDecl 0x135122600 <col:29, col:43> col:43 used old_end 'unsigned long'   |-ParmVarDecl 0x1351226b8 <line:3:5, col:12> col:12 referenced invalid old_pmd 'int *'   |-ParmVarDecl 0x135122738 <col:21, col:28> col:28 referenced invalid new_pmd 'int *'   |-ParmVarDecl 0x1351227b8 <col:37, col:43> col:43 invalid need_flush 'int *'   `-CompoundStmt 0x135125ab8 <line:4:1, line:49:1>     |-DeclStmt 0x135122d48 <line:7:2, col:35>     | |-RecordDecl 0x135122af8 <col:2, col:9> col:9 struct mm_struct     | `-VarDecl 0x135122c68 <col:2, col:30> col:20 used mm 'struct mm_struct *' cinit     |   `-RecoveryExpr 0x135122d08 <col:25, col:30> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x135122cd0 <col:25> 'struct vm_area_struct *' lvalue ParmVar 0x13580e268 'vma' 'struct vm_area_struct *'     |-IfStmt 0x135124700 <line:16:2, line:19:2>     | |-CallExpr 0x135123368 <line:16:6, col:33> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x135123120 <col:6> 'int ()' Function 0x135123068 'WARN_ON' 'int ()'     | | `-UnaryOperator 0x135123350 <col:14, col:32> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-CallExpr 0x135123328 <col:15, col:32> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x135123220 <col:15> 'int ()' Function 0x135123168 'pmd_none' 'int ()'     | |     `-UnaryOperator 0x135123310 <col:24, col:25> '<dependent type>' contains-errors prefix '*' cannot overflow     | |       `-ImplicitCastExpr 0x1351232f8 <col:25> '<dependent type>' contains-errors <LValueToRValue>     | |         `-RecoveryExpr 0x135123240 <col:25> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1351246e8 <col:36, line:19:2>     |   `-CallExpr 0x1351246a8 <line:17:3, col:37> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x135123470 <col:3> 'int ()' Function 0x1351233b8 'VM_BUG_ON' 'int ()'     |     `-CallExpr 0x135124680 <col:13, col:36> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x135123570 <col:13> 'int ()' Function 0x1351234b8 'pmd_trans_huge' 'int ()'     |       `-UnaryOperator 0x135124668 <col:28, col:29> '<dependent type>' contains-errors prefix '*' cannot overflow     |         `-ImplicitCastExpr 0x135124650 <col:29> '<dependent type>' contains-errors <LValueToRValue>     |           `-RecoveryExpr 0x135123590 <col:29> '<dependent type>' contains-errors lvalue     `-IfStmt 0x135125a98 <line:23:2, line:47:2>       |-RecoveryExpr 0x135124890 <line:23:6> '_Bool' contains-errors       `-CompoundStmt 0x135125a78 <col:15, line:47:2>         |-CallExpr 0x135125060 <line:30:3, col:32> '<dependent type>' contains-errors         | |-DeclRefExpr 0x135124ef8 <col:3> 'int ()' Function 0x1351233b8 'VM_BUG_ON' 'int ()'         | `-UnaryOperator 0x135125048 <col:13, col:31> '<dependent type>' contains-errors prefix '!' cannot overflow         |   `-CallExpr 0x135125020 <col:14, col:31> '<dependent type>' contains-errors         |     |-DeclRefExpr 0x135124f18 <col:14> 'int ()' Function 0x135123168 'pmd_none' 'int ()'         |     `-UnaryOperator 0x135125008 <col:23, col:24> '<dependent type>' contains-errors prefix '*' cannot overflow         |       `-ImplicitCastExpr 0x135124ff0 <col:24> '<dependent type>' contains-errors <LValueToRValue>         |         `-RecoveryExpr 0x135124f38 <col:24> '<dependent type>' contains-errors lvalue         `-IfStmt 0x135125488 <line:32:3, line:36:3>           |-RecoveryExpr 0x1351251a8 <line:32:7, col:51> '_Bool' contains-errors           `-CompoundStmt 0x135125478 <col:54, line:36:3> ","20268":"`-FunctionDecl 0x1429229c8  line:1:12 invalid xfrm_expand_policies 'int (const struct flowi *, int, struct xfrm_policy **, int *, int *)' static   |-ParmVarDecl 0x14400e248 <col:33, col:53> col:53 fl 'const struct flowi *'   |-ParmVarDecl 0x14400e2e0 <col:57, col:61> col:61 invalid family 'int'   |-ParmVarDecl 0x142922728 <line:2:5, col:26> col:26 used pols 'struct xfrm_policy **'   |-ParmVarDecl 0x1429227d8 <line:3:5, col:10> col:10 used num_pols 'int *'   |-ParmVarDecl 0x142922858 <col:20, col:25> col:25 used num_xfrms 'int *'   `-CompoundStmt 0x1440248d8 <line:4:1, line:44:1>     |-DeclStmt 0x142922b18 <line:5:2, col:7>     | `-VarDecl 0x142922ab0 <col:2, col:6> col:6 used i 'int'     |-IfStmt 0x142922e18 <line:7:2, line:11:2>     | |-BinaryOperator 0x142922c80 <line:7:6, col:31> 'int' '||'     | | |-BinaryOperator 0x142922bb8 <col:6, col:19> 'int' '=='     | | | |-ImplicitCastExpr 0x142922ba0 <col:6, col:7> 'int' <LValueToRValue>     | | | | `-UnaryOperator 0x142922b68 <col:6, col:7> 'int' lvalue prefix '*' cannot overflow     | | | |   `-ImplicitCastExpr 0x142922b50 <col:7> 'int *' <LValueToRValue>     | | | |     `-DeclRefExpr 0x142922b30 <col:7> 'int *' lvalue ParmVar 0x1429227d8 'num_pols' 'int *'     | | | `-IntegerLiteral 0x142922b80 <col:19> 'int' 0     | | `-UnaryOperator 0x142922c68 <col:24, col:31> 'int' prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x142922c50 <col:25, col:31> 'struct xfrm_policy *' <LValueToRValue>     | |     `-ArraySubscriptExpr 0x142922c30 <col:25, col:31> 'struct xfrm_policy *' lvalue     | |       |-ImplicitCastExpr 0x142922c18 <col:25> 'struct xfrm_policy **' <LValueToRValue>     | |       | `-DeclRefExpr 0x142922bd8 <col:25> 'struct xfrm_policy **' lvalue ParmVar 0x142922728 'pols' 'struct xfrm_policy **'     | |       `-IntegerLiteral 0x142922bf8 <col:30> 'int' 0     | `-CompoundStmt 0x142922df0 <col:34, line:11:2>     |   |-BinaryOperator 0x142922d10 <line:8:3, col:15> 'int' '='     |   | |-UnaryOperator 0x142922cd8 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow     |   | | `-ImplicitCastExpr 0x142922cc0 <col:4> 'int *' <LValueToRValue>     |   | |   `-DeclRefExpr 0x142922ca0 <col:4> 'int *' lvalue ParmVar 0x1429227d8 'num_pols' 'int *'     |   | `-IntegerLiteral 0x142922cf0 <col:15> 'int' 0     |   |-BinaryOperator 0x142922da0 <line:9:3, col:16> 'int' '='     |   | |-UnaryOperator 0x142922d68 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow     |   | | `-ImplicitCastExpr 0x142922d50 <col:4> 'int *' <LValueToRValue>     |   | |   `-DeclRefExpr 0x142922d30 <col:4> 'int *' lvalue ParmVar 0x142922858 'num_xfrms' 'int *'     |   | `-IntegerLiteral 0x142922d80 <col:16> 'int' 0     |   `-ReturnStmt 0x142922de0 <line:10:3, col:10>     |     `-IntegerLiteral 0x142922dc0 <col:10> 'int' 0     |-IfStmt 0x142923298 <line:12:2, line:13:25>     | |-CallExpr 0x142923078 <line:12:6, col:20> 'int'     | | |-ImplicitCastExpr 0x142923060 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x142922f90 <col:6> 'int ()' Function 0x142922ed8 'IS_ERR' 'int ()'     | | `-ImplicitCastExpr 0x1429230a0 <col:13, col:19> 'struct xfrm_policy *' <LValueToRValue>     | |   `-ArraySubscriptExpr 0x142923008 <col:13, col:19> 'struct xfrm_policy *' lvalue     | |     |-ImplicitCastExpr 0x142922ff0 <col:13> 'struct xfrm_policy **' <LValueToRValue>     | |     | `-DeclRefExpr 0x142922fb0 <col:13> 'struct xfrm_policy **' lvalue ParmVar 0x142922728 'pols' 'struct xfrm_policy **'     | |     `-IntegerLiteral 0x142922fd0 <col:18> 'int' 0     | `-ReturnStmt 0x142923288 <line:13:3, col:25>     |   `-CallExpr 0x142923248 <col:10, col:25> 'int'     |     |-ImplicitCastExpr 0x142923230 <col:10> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x142923198 <col:10> 'int ()' Function 0x1429230e0 'PTR_ERR' 'int ()'     |     `-ImplicitCastExpr 0x142923270 <col:18, col:24> 'struct xfrm_policy *' <LValueToRValue>     |       `-ArraySubscriptExpr 0x142923210 <col:18, col:24> 'struct xfrm_policy *' lvalue     |         |-ImplicitCastExpr 0x1429231f8 <col:18> 'struct xfrm_policy **' <LValueToRValue>     |         | `-DeclRefExpr 0x1429231b8 <col:18> 'struct xfrm_policy **' lvalue ParmVar 0x142922728 'pols' 'struct xfrm_policy **'     |         `-IntegerLiteral 0x1429231d8 <col:23> 'int' 0     |-BinaryOperator 0x1429233c0 <line:15:2, col:24> 'int' contains-errors '='     | |-UnaryOperator 0x1429232f0 <col:2, col:3> 'int' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x1429232d8 <col:3> 'int *' <LValueToRValue>     | |   `-DeclRefExpr 0x1429232b8 <col:3> 'int *' lvalue ParmVar 0x142922858 'num_xfrms' 'int *'     | `-RecoveryExpr 0x142923398 <col:15, col:24> '<dependent type>' contains-errors lvalue     |   `-ArraySubscriptExpr 0x142923360 <col:15, col:21> 'struct xfrm_policy *' lvalue     |     |-ImplicitCastExpr 0x142923348 <col:15> 'struct xfrm_policy **' <LValueToRValue>     |     | `-DeclRefExpr 0x142923308 <col:15> 'struct xfrm_policy **' lvalue ParmVar 0x142922728 'pols' 'struct xfrm_policy **'     |     `-IntegerLiteral 0x142923328 <col:20> 'int' 0     |-ForStmt 0x144024870 <line:35:2, line:40:2>     | |-BinaryOperator 0x142923420 <line:35:7, col:11> 'int' '='     | | |-DeclRefExpr 0x1429233e0 <col:7> 'int' lvalue Var 0x142922ab0 'i' 'int'     | | `-IntegerLiteral 0x142923400 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x1429234e0 <col:14, col:19> 'int' '<'     | | |-ImplicitCastExpr 0x1429234b0 <col:14> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x142923440 <col:14> 'int' lvalue Var 0x142922ab0 'i' 'int'     | | `-ImplicitCastExpr 0x1429234c8 <col:18, col:19> 'int' <LValueToRValue>     | |   `-UnaryOperator 0x142923498 <col:18, col:19> 'int' lvalue prefix '*' cannot overflow     | |     `-ImplicitCastExpr 0x142923480 <col:19> 'int *' <LValueToRValue>     | |       `-DeclRefExpr 0x142923460 <col:19> 'int *' lvalue ParmVar 0x1429227d8 'num_pols' 'int *'     | |-UnaryOperator 0x142923520 <col:29, col:30> 'int' postfix '++'     | | `-DeclRefExpr 0x142923500 <col:29> 'int' lvalue Var 0x142922ab0 'i' 'int'     | `-CompoundStmt 0x144024858 <col:34, line:40:2>     |   `-IfStmt 0x144024838 <line:36:3, line:39:3>     |     |-BinaryOperator 0x144024748 <line:36:7, col:26> 'int' contains-errors '!='     |     | |-RecoveryExpr 0x144024700 <col:7, col:16> '<dependent type>' contains-errors lvalue     |     | | `-ArraySubscriptExpr 0x1440246e0 <col:7, col:13> 'struct xfrm_policy *' lvalue     |     | |   |-ImplicitCastExpr 0x1440246b0 <col:7> 'struct xfrm_policy **' <LValueToRValue>     |     | |   | `-DeclRefExpr 0x142923538 <col:7> 'struct xfrm_policy **' lvalue ParmVar 0x142922728 'pols' 'struct xfrm_policy **'     |     | |   `-ImplicitCastExpr 0x1440246c8 <col:12> 'int' <LValueToRValue>     |     | |     `-DeclRefExpr 0x142923558 <col:12> 'int' lvalue Var 0x142922ab0 'i' 'int'     |     | `-RecoveryExpr 0x144024728 <col:26> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x144024818 <col:45, line:39:3>     |       |-BinaryOperator 0x1440247f0 <line:37:4, col:18> 'int' '='     |       | |-UnaryOperator 0x1440247a0 <col:4, col:5> 'int' lvalue prefix '*' cannot overflow     |       | | `-ImplicitCastExpr 0x144024788 <col:5> 'int *' <LValueToRValue>     |       | |   `-DeclRefExpr 0x144024768 <col:5> 'int *' lvalue ParmVar 0x142922858 'num_xfrms' 'int *'     |       | `-UnaryOperator 0x1440247d8 <col:17, col:18> 'int' prefix '-'     |       |   `-IntegerLiteral 0x1440247b8 <col:18> 'int' 1     |       `-BreakStmt 0x144024810 <line:38:4>     `-ReturnStmt 0x1440248c8 <line:42:2, col:9>       `-IntegerLiteral 0x1440248a8 <col:9> 'int' 0 ","20331":"`-FunctionDecl 0x14e141f18  col:20 implicit used strdup 'char *(const char *)' extern   |-ParmVarDecl 0x14e142018 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x14e141fc0 <<invalid sloc>> Implicit 950 ","20496":"`-FunctionDecl 0x146819c88  line:1:14 invalid h2_slave_run_pre_connection 'int (int *, int *)'   |-ParmVarDecl 0x146819b28 <col:42, col:52> col:52 referenced invalid slave 'int *'   |-ParmVarDecl 0x146819ba8 <col:59, col:73> col:73 invalid csd 'int *'   `-CompoundStmt 0x14600ea68 <line:2:1, line:11:1>     |-IfStmt 0x14600ea00 <line:3:5, line:9:5>     | |-BinaryOperator 0x146819dc8 <line:3:9, col:30> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x146819d60 <col:9, col:16> '<dependent type>' contains-errors lvalue ->keepalives     | | | `-RecoveryExpr 0x146819d40 <col:9> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x146819da8 <col:30> 'int' 0     | `-CompoundStmt 0x14681a1c0 <col:33, line:9:5>     |   |-BinaryOperator 0x146819e98 <line:5:9, col:29> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x146819e30 <col:9, col:16> '<dependent type>' contains-errors lvalue ->keepalives     |   | | `-RecoveryExpr 0x146819e08 <col:9> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x146819de8 <col:9> 'int *' lvalue ParmVar 0x146819b28 'slave' 'int *'     |   | `-IntegerLiteral 0x146819e78 <col:29> 'int' 1     |   |-BinaryOperator 0x146819fa0 <line:7:9, col:28> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x146819f00 <col:9, col:16> '<dependent type>' contains-errors lvalue ->keepalive     |   | | `-RecoveryExpr 0x146819ed8 <col:9> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x146819eb8 <col:9> 'int *' lvalue ParmVar 0x146819b28 'slave' 'int *'     |   | `-RecoveryExpr 0x146819f80 <col:28> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x14681a1b0 <line:8:9, col:48>     |     `-CallExpr 0x14681a180 <col:16, col:48> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x14681a120 <col:16> 'int ()' Function 0x14681a068 'ap_run_pre_connection' 'int ()'     |       |-RecoveryExpr 0x14681a140 <col:38> '<dependent type>' contains-errors lvalue     |       `-RecoveryExpr 0x14681a160 <col:45> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14600ea58 <line:10:5, col:12>       `-RecoveryExpr 0x14600ea38 <col:12> '<dependent type>' contains-errors lvalue ","20980":"`-FunctionDecl 0x123141838  line:1:16 invalid smtcfb_read 'int (struct fb_info *, char)' static   |-ParmVarDecl 0x123128668 <col:28, col:44> col:44 used info 'struct fb_info *'   |-ParmVarDecl 0x1231286e0 <col:50, col:55> col:55 __user 'char'   `-CompoundStmt 0x1231442a8 <line:3:1, line:76:1>     |-DeclStmt 0x123141a08 <line:4:2, col:25>     | `-VarDecl 0x123141908 <col:2, col:21> col:16 used p 'unsigned long' cinit     |   `-UnaryOperator 0x1231419f0 <col:20, col:21> '<dependent type>' contains-errors prefix '*' cannot overflow     |     `-ImplicitCastExpr 0x1231419d8 <col:21> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x1231419b8 <col:21> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x123141ce8 <line:8:2, col:28>     | |-VarDecl 0x123141a98 <col:2, col:6> col:6 used c 'int'     | |-VarDecl 0x123141b18 <col:2, col:9> col:9 used i 'int'     | |-VarDecl 0x123141b98 <col:2, col:18> col:12 used cnt 'int' cinit     | | `-IntegerLiteral 0x123141c00 <col:18> 'int' 0     | `-VarDecl 0x123141c38 <col:2, col:27> col:21 used err 'int' cinit     |   `-IntegerLiteral 0x123141ca0 <col:27> 'int' 0     |-DeclStmt 0x123141d80 <line:9:2, col:26>     | `-VarDecl 0x123141d18 <col:2, col:16> col:16 used total_size 'unsigned long'     |-IfStmt 0x123141f40 <line:11:2, line:12:11>     | |-BinaryOperator 0x123141e78 <line:11:6, col:22> 'int' contains-errors '||'     | | |-UnaryOperator 0x123141dd0 <col:6, col:7> 'int' prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x123141db8 <col:7> 'struct fb_info *' <LValueToRValue>     | | |   `-DeclRefExpr 0x123141d98 <col:7> 'struct fb_info *' lvalue ParmVar 0x123128668 'info' 'struct fb_info *'     | | `-UnaryOperator 0x123141e60 <col:15, col:22> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x123141e48 <col:16, col:22> '<dependent type>' contains-errors <LValueToRValue>     | |     `-RecoveryExpr 0x123141e20 <col:16, col:22> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x123141de8 <col:16> 'struct fb_info *' lvalue ParmVar 0x123128668 'info' 'struct fb_info *'     | `-ReturnStmt 0x123141f30 <line:12:3, col:11>     |   `-UnaryOperator 0x123141f18 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x123141f00 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x123141ee0 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1231420e0 <line:14:2, line:15:11>     | |-BinaryOperator 0x123142018 <line:14:6, col:21> 'int' contains-errors '!='     | | |-RecoveryExpr 0x123141f98 <col:6, col:12> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x123141f60 <col:6> 'struct fb_info *' lvalue ParmVar 0x123128668 'info' 'struct fb_info *'     | | `-RecoveryExpr 0x123141ff8 <col:21> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1231420d0 <line:15:3, col:11>     |   `-UnaryOperator 0x1231420b8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x1231420a0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x123142080 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x123142180 <line:17:2, col:21> 'unsigned long' contains-errors '='     | |-DeclRefExpr 0x123142100 <col:2> 'unsigned long' lvalue Var 0x123141d18 'total_size' 'unsigned long'     | `-RecoveryExpr 0x123142158 <col:15, col:21> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x123142120 <col:15> 'struct fb_info *' lvalue ParmVar 0x123128668 'info' 'struct fb_info *'     |-IfStmt 0x123142318 <line:19:2, line:20:26>     | |-BinaryOperator 0x123142210 <line:19:6, col:20> 'int' '=='     | | |-ImplicitCastExpr 0x1231421e0 <col:6> 'unsigned long' <LValueToRValue>     | | | `-DeclRefExpr 0x1231421a0 <col:6> 'unsigned long' lvalue Var 0x123141d18 'total_size' 'unsigned long'     | | `-ImplicitCastExpr 0x1231421f8 <col:20> 'unsigned long' <IntegralCast>     | |   `-IntegerLiteral 0x1231421c0 <col:20> 'int' 0     | `-BinaryOperator 0x1231422f8 <line:20:3, col:26> 'unsigned long' contains-errors '='     |   |-DeclRefExpr 0x123142230 <col:3> 'unsigned long' lvalue Var 0x123141d18 'total_size' 'unsigned long'     |   `-CXXDependentScopeMemberExpr 0x1231422b0 <col:16, col:26> '<dependent type>' contains-errors lvalue .smem_len     |     `-RecoveryExpr 0x123142288 <col:16, col:22> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x123142250 <col:16> 'struct fb_info *' lvalue ParmVar 0x123128668 'info' 'struct fb_info *'     |-IfStmt 0x1231423f8 <line:22:2, line:23:10>     | |-BinaryOperator 0x1231423a8 <line:22:6, col:11> 'int' contains-errors '>='     | | |-ImplicitCastExpr 0x123142378 <col:6> 'unsigned long' contains-errors <LValueToRValue>     | | | `-DeclRefExpr 0x123142338 <col:6> 'unsigned long' contains-errors lvalue Var 0x123141908 'p' 'unsigned long'     | | `-ImplicitCastExpr 0x123142390 <col:11> 'unsigned long' <LValueToRValue>     | |   `-DeclRefExpr 0x123142358 <col:11> 'unsigned long' lvalue Var 0x123141d18 'total_size' 'unsigned long'     | `-ReturnStmt 0x1231423e8 <line:23:3, col:10>     |   `-IntegerLiteral 0x1231423c8 <col:10> 'int' 0     |-IfStmt 0x123143638 <line:37:2, line:38:28>     | |-CXXDependentScopeMemberExpr 0x123143500 <line:37:6, col:19> '<dependent type>' contains-errors lvalue ->fb_sync     | | `-RecoveryExpr 0x1231434d8 <col:6, col:12> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1231434a0 <col:6> 'struct fb_info *' lvalue ParmVar 0x123128668 'info' 'struct fb_info *'     | `-CallExpr 0x123143610 <line:38:3, col:28> '<dependent type>' contains-errors     |   |-CXXDependentScopeMemberExpr 0x1231435a8 <col:3, col:16> '<dependent type>' contains-errors lvalue ->fb_sync     |   | `-RecoveryExpr 0x123143580 <col:3, col:9> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x123143548 <col:3> 'struct fb_info *' lvalue ParmVar 0x123128668 'info' 'struct fb_info *'     |   `-DeclRefExpr 0x1231435f0 <col:24> 'struct fb_info *' lvalue ParmVar 0x123128668 'info' 'struct fb_info *'     |-WhileStmt 0x123144080 <line:40:2, line:71:2>     | |-RecoveryExpr 0x123143658 <line:40:9> '_Bool' contains-errors     | `-CompoundStmt 0x123144050 <col:16, line:71:2>     |   |-ForStmt 0x123143998 <line:43:3, line:47:3>     |   | |-BinaryOperator 0x123143730 <line:43:8, col:17> 'int' '='     |   | | |-DeclRefExpr 0x123143698 <col:8> 'int' lvalue Var 0x123141b18 'i' 'int'     |   | | `-BinaryOperator 0x123143710 <col:12, col:17> 'int' '>>'     |   | |   |-ImplicitCastExpr 0x1231436f8 <col:12> 'int' <LValueToRValue>     |   | |   | `-DeclRefExpr 0x1231436b8 <col:12> 'int' lvalue Var 0x123141a98 'c' 'int'     |   | |   `-IntegerLiteral 0x1231436d8 <col:17> 'int' 2     |   | |-<<<NULL>>>     |   | |-UnaryOperator 0x123143770 <col:20, col:21> 'int' postfix '--'     |   | | `-DeclRefExpr 0x123143750 <col:20> 'int' lvalue Var 0x123141b18 'i' 'int'     |   | |-<<<NULL>>>     |   | `-CompoundStmt 0x123143988 <col:26, line:47:3>     |   |-IfStmt 0x123143da8 <line:48:3, line:61:3>     |   | |-BinaryOperator 0x123143a28 <line:48:7, col:11> 'int' '&'     |   | | |-ImplicitCastExpr 0x123143a10 <col:7> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x1231439d0 <col:7> 'int' lvalue Var 0x123141a98 'c' 'int'     |   | | `-IntegerLiteral 0x1231439f0 <col:11> 'int' 3     |   | `-CompoundStmt 0x123143d90 <col:14, line:61:3>     |   |   `-ForStmt 0x123143d58 <line:52:4, line:59:4>     |   |     |-BinaryOperator 0x123143ae0 <line:52:9, col:17> 'int' '='     |   |     | |-DeclRefExpr 0x123143a48 <col:9> 'int' lvalue Var 0x123141b18 'i' 'int'     |   |     | `-BinaryOperator 0x123143ac0 <col:13, col:17> 'int' '&'     |   |     |   |-ImplicitCastExpr 0x123143aa8 <col:13> 'int' <LValueToRValue>     |   |     |   | `-DeclRefExpr 0x123143a68 <col:13> 'int' lvalue Var 0x123141a98 'c' 'int'     |   |     |   `-IntegerLiteral 0x123143a88 <col:17> 'int' 3     |   |     |-<<<NULL>>>     |   |     |-UnaryOperator 0x123143b20 <col:20, col:21> 'int' postfix '--'     |   |     | `-DeclRefExpr 0x123143b00 <col:20> 'int' lvalue Var 0x123141b18 'i' 'int'     |   |     |-<<<NULL>>>     |   |     `-CompoundStmt 0x123143d40 <col:26, line:59:4>     |   |       `-IfStmt 0x123143d10 <line:53:5, line:58:5> has_else     |   |         |-BinaryOperator 0x123143b90 <line:53:9, col:13> 'int' '&'     |   |         | |-ImplicitCastExpr 0x123143b78 <col:9> 'int' <LValueToRValue>     |   |         | | `-DeclRefExpr 0x123143b38 <col:9> 'int' lvalue Var 0x123141b18 'i' 'int'     |   |         | `-IntegerLiteral 0x123143b58 <col:13> 'int' 1     |   |         |-CompoundStmt 0x123143cb0 <col:16, line:55:5>     |   |         `-CompoundStmt 0x123143d00 <col:12, line:58:5>     |   |-IfStmt 0x123143f48 <line:63:3, line:66:3>     |   | |-RecoveryExpr 0x123143ee8 <line:63:7, col:34> '_Bool' contains-errors     |   | `-CompoundStmt 0x123143f30 <col:37, line:66:3>     |   |   `-BreakStmt 0x123143f28 <line:65:4>     |   `-CompoundAssignOperator 0x123144000 <line:69:3, col:10> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'     |     |-DeclRefExpr 0x123143fa8 <col:3> 'int' lvalue Var 0x123141b98 'cnt' 'int'     |     `-ImplicitCastExpr 0x123143fe8 <col:10> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x123143fc8 <col:10> 'int' lvalue Var 0x123141a98 'c' 'int'     `-ReturnStmt 0x123144298 <line:75:2, col:23>       `-ConditionalOperator 0x123144268 <col:9, col:23> 'int'         |-ImplicitCastExpr 0x123144220 <col:9, col:13> 'int' <LValueToRValue>         | `-ParenExpr 0x1231441c0 <col:9, col:13> 'int' lvalue         |   `-DeclRefExpr 0x1231441a0 <col:10> 'int' lvalue Var 0x123141c38 'err' 'int'         |-ImplicitCastExpr 0x123144238 <col:17> 'int' <LValueToRValue>         | `-DeclRefExpr 0x1231441e0 <col:17> 'int' lvalue Var 0x123141c38 'err' 'int'         `-ImplicitCastExpr 0x123144250 <col:23> 'int' <LValueToRValue>           `-DeclRefExpr 0x123144200 <col:23> 'int' lvalue Var 0x123141b98 'cnt' 'int' ","20521":"`-FunctionDecl 0x1581281f8  line:1:1 invalid sraSpanRemove 'int (int *)'   |-ParmVarDecl 0x158128128 <col:15, col:24> col:24 referenced invalid span 'int *'   `-CompoundStmt 0x158128568 <col:30, line:4:1>     |-BinaryOperator 0x1581283e8 <line:2:3, col:30> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x158128338 <col:3, col:16> '<dependent type>' contains-errors lvalue ->_next     | | `-CXXDependentScopeMemberExpr 0x1581282f0 <col:3, col:9> '<dependent type>' contains-errors lvalue ->_prev     | |   `-RecoveryExpr 0x1581282c8 <col:3> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x1581282a8 <col:3> 'int *' lvalue ParmVar 0x158128128 'span' 'int *'     | `-CXXDependentScopeMemberExpr 0x1581283a0 <col:24, col:30> '<dependent type>' contains-errors lvalue ->_next     |   `-RecoveryExpr 0x158128380 <col:24> '<dependent type>' contains-errors lvalue     `-BinaryOperator 0x158128548 <line:3:3, col:30> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x158128498 <col:3, col:16> '<dependent type>' contains-errors lvalue ->_prev       | `-CXXDependentScopeMemberExpr 0x158128450 <col:3, col:9> '<dependent type>' contains-errors lvalue ->_next       |   `-RecoveryExpr 0x158128428 <col:3> '<dependent type>' contains-errors lvalue       |     `-DeclRefExpr 0x158128408 <col:3> 'int *' lvalue ParmVar 0x158128128 'span' 'int *'       `-CXXDependentScopeMemberExpr 0x158128500 <col:24, col:30> '<dependent type>' contains-errors lvalue ->_prev         `-RecoveryExpr 0x1581284e0 <col:24> '<dependent type>' contains-errors lvalue ","21174":"`-FunctionDecl 0x155945778  col:5 implicit used exit 'void (int) __attribute__((noreturn))' extern   |-ParmVarDecl 0x155945878 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x155945820 <<invalid sloc>> Implicit 869 ","21133":"`-FunctionDecl 0x13b927d18  line:1:12 invalid find_stream_in_feed 'int (int *, int *, int)' static   |-ParmVarDecl 0x13b927b28 <col:32, col:48> col:48 invalid feed 'int *'   |-ParmVarDecl 0x13b927ba8 <col:54, col:73> col:73 invalid codec 'int *'   |-ParmVarDecl 0x13b927c28 <line:2:32, col:36> col:36 used bit_rate 'int'   `-CompoundStmt 0x13b9416c8 <line:3:1, line:35:1>     |-DeclStmt 0x13b927e58 <line:4:5, col:10>     | `-VarDecl 0x13b927df0 <col:5, col:9> col:9 used i 'int'     |-DeclStmt 0x13b927f10 <line:5:5, col:33>     | `-VarDecl 0x13b927e88 <col:5, col:24> col:9 used best_bitrate 'int' cinit     |   `-IntegerLiteral 0x13b927ef0 <col:24> 'int' 100000000     |-DeclStmt 0x13b927fe0 <line:6:5, col:18>     | `-VarDecl 0x13b927f40 <col:5, col:17> col:9 used best 'int' cinit     |   `-UnaryOperator 0x13b927fc8 <col:16, col:17> 'int' prefix '-'     |     `-IntegerLiteral 0x13b927fa8 <col:17> 'int' 1     |-ForStmt 0x13b941648 <line:8:5, line:33:5>     | |-BinaryOperator 0x13b928038 <line:8:10, col:14> 'int' '='     | | |-DeclRefExpr 0x13b927ff8 <col:10> 'int' lvalue Var 0x13b927df0 'i' 'int'     | | `-IntegerLiteral 0x13b928018 <col:14> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x13b9280e0 <col:17, col:27> 'int' contains-errors '<'     | | |-DeclRefExpr 0x13b928058 <col:17> 'int' lvalue Var 0x13b927df0 'i' 'int'     | | `-CXXDependentScopeMemberExpr 0x13b928098 <col:21, col:27> '<dependent type>' contains-errors lvalue ->nb_streams     | |   `-RecoveryExpr 0x13b928078 <col:21> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x13b928120 <col:39, col:40> 'int' postfix '++'     | | `-DeclRefExpr 0x13b928100 <col:39> 'int' lvalue Var 0x13b927df0 'i' 'int'     | `-CompoundStmt 0x13b941620 <col:44, line:33:5>     |   |-IfStmt 0x13b008f08 <line:11:9, line:15:13>     |   | |-BinaryOperator 0x13b008ee0 <line:11:13, line:14:42> 'int' contains-errors '||'     |   | | |-BinaryOperator 0x13b008e38 <line:11:13, line:13:41> 'int' contains-errors '||'     |   | | | |-BinaryOperator 0x13b008d90 <line:11:13, line:12:47> 'int' contains-errors '||'     |   | | | | |-BinaryOperator 0x13b008ce8 <line:11:13, col:44> 'int' contains-errors '!='     |   | | | | | |-CXXDependentScopeMemberExpr 0x13b008ca0 <col:13, col:25> '<dependent type>' contains-errors lvalue ->codec_id     |   | | | | | | `-RecoveryExpr 0x13b008c80 <col:13> '<dependent type>' contains-errors lvalue     |   | | | | | `-CXXDependentScopeMemberExpr 0x13b008900 <col:37, col:44> '<dependent type>' contains-errors lvalue ->codec_id     |   | | | | |   `-RecoveryExpr 0x13b0088e0 <col:37> '<dependent type>' contains-errors lvalue     |   | | | | `-BinaryOperator 0x13b008d70 <line:12:13, col:47> 'int' contains-errors '!='     |   | | | |   |-CXXDependentScopeMemberExpr 0x13b008d28 <col:13, col:25> '<dependent type>' contains-errors lvalue ->sample_rate     |   | | | |   | `-RecoveryExpr 0x13b008d08 <col:13> '<dependent type>' contains-errors lvalue     |   | | | |   `-CXXDependentScopeMemberExpr 0x13b0089e8 <col:40, col:47> '<dependent type>' contains-errors lvalue ->sample_rate     |   | | | |     `-RecoveryExpr 0x13b0089c8 <col:40> '<dependent type>' contains-errors lvalue     |   | | | `-BinaryOperator 0x13b008e18 <line:13:13, col:41> 'int' contains-errors '!='     |   | | |   |-CXXDependentScopeMemberExpr 0x13b008dd0 <col:13, col:25> '<dependent type>' contains-errors lvalue ->width     |   | | |   | `-RecoveryExpr 0x13b008db0 <col:13> '<dependent type>' contains-errors lvalue     |   | | |   `-CXXDependentScopeMemberExpr 0x13b008af0 <col:34, col:41> '<dependent type>' contains-errors lvalue ->width     |   | | |     `-RecoveryExpr 0x13b008ad0 <col:34> '<dependent type>' contains-errors lvalue     |   | | `-BinaryOperator 0x13b008ec0 <line:14:13, col:42> 'int' contains-errors '!='     |   | |   |-CXXDependentScopeMemberExpr 0x13b008e78 <col:13, col:25> '<dependent type>' contains-errors lvalue ->height     |   | |   | `-RecoveryExpr 0x13b008e58 <col:13> '<dependent type>' contains-errors lvalue     |   | |   `-CXXDependentScopeMemberExpr 0x13b008bf8 <col:35, col:42> '<dependent type>' contains-errors lvalue ->height     |   | |     `-RecoveryExpr 0x13b008bd8 <col:35> '<dependent type>' contains-errors lvalue     |   | `-ContinueStmt 0x13b008f00 <line:15:13>     |   |-IfStmt 0x13b0094f0 <line:21:9, line:28:9>     |   | |-BinaryOperator 0x13b009030 <line:21:13, col:37> 'int' contains-errors '<='     |   | | |-CXXDependentScopeMemberExpr 0x13b008fe8 <col:13, col:25> '<dependent type>' contains-errors lvalue ->bit_rate     |   | | | `-RecoveryExpr 0x13b008fc8 <col:13> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x13b008f88 <col:37> 'int' lvalue ParmVar 0x13b927c28 'bit_rate' 'int'     |   | `-CompoundStmt 0x13b0094d0 <col:47, line:28:9>     |   |   |-IfStmt 0x13b0094a8 <line:22:13, line:26:13>     |   |   | |-BinaryOperator 0x13b0092c8 <line:22:17, line:23:40> 'int' contains-errors '||'     |   |   | | |-BinaryOperator 0x13b009220 <line:22:17, col:32> 'int' '>'     |   |   | | | |-ImplicitCastExpr 0x13b0091f0 <col:17> 'int' <LValueToRValue>     |   |   | | | | `-DeclRefExpr 0x13b009050 <col:17> 'int' lvalue Var 0x13b927e88 'best_bitrate' 'int'     |   |   | | | `-ImplicitCastExpr 0x13b009208 <col:32> 'int' <LValueToRValue>     |   |   | | |   `-DeclRefExpr 0x13b009070 <col:32> 'int' lvalue ParmVar 0x13b927c28 'bit_rate' 'int'     |   |   | | `-BinaryOperator 0x13b0092a8 <line:23:17, col:40> 'int' contains-errors '>'     |   |   | |   |-CXXDependentScopeMemberExpr 0x13b009260 <col:17, col:29> '<dependent type>' contains-errors lvalue ->bit_rate     |   |   | |   | `-RecoveryExpr 0x13b009240 <col:17> '<dependent type>' contains-errors lvalue     |   |   | |   `-DeclRefExpr 0x13b009140 <col:40> 'int' lvalue Var 0x13b927e88 'best_bitrate' 'int'     |   |   | `-CompoundStmt 0x13b009488 <col:54, line:26:13>     |   |   |   |-BinaryOperator 0x13b0093f0 <line:24:17, col:44> 'int' contains-errors '='     |   |   |   | |-DeclRefExpr 0x13b0092e8 <col:17> 'int' lvalue Var 0x13b927e88 'best_bitrate' 'int'     |   |   |   | `-CXXDependentScopeMemberExpr 0x13b0093a8 <col:32, col:44> '<dependent type>' contains-errors lvalue ->bit_rate     |   |   |   |   `-RecoveryExpr 0x13b009388 <col:32> '<dependent type>' contains-errors lvalue     |   |   |   `-BinaryOperator 0x13b009468 <line:25:17, col:24> 'int' '='     |   |   |     |-DeclRefExpr 0x13b009410 <col:17> 'int' lvalue Var 0x13b927f40 'best' 'int'     |   |   |     `-ImplicitCastExpr 0x13b009450 <col:24> 'int' <LValueToRValue>     |   |   |       `-DeclRefExpr 0x13b009430 <col:24> 'int' lvalue Var 0x13b927df0 'i' 'int'     |   |   `-ContinueStmt 0x13b0094c8 <line:27:13>     |   `-IfStmt 0x13b941600 <line:29:9, line:32:9>     |     |-BinaryOperator 0x13b009618 <line:29:13, col:36> 'int' contains-errors '<'     |     | |-CXXDependentScopeMemberExpr 0x13b0095d0 <col:13, col:25> '<dependent type>' contains-errors lvalue ->bit_rate     |     | | `-RecoveryExpr 0x13b0095b0 <col:13> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x13b009570 <col:36> 'int' lvalue Var 0x13b927e88 'best_bitrate' 'int'     |     `-CompoundStmt 0x13b0097d8 <col:50, line:32:9>     |       |-BinaryOperator 0x13b009740 <line:30:13, col:40> 'int' contains-errors '='     |       | |-DeclRefExpr 0x13b009638 <col:13> 'int' lvalue Var 0x13b927e88 'best_bitrate' 'int'     |       | `-CXXDependentScopeMemberExpr 0x13b0096f8 <col:28, col:40> '<dependent type>' contains-errors lvalue ->bit_rate     |       |   `-RecoveryExpr 0x13b0096d8 <col:28> '<dependent type>' contains-errors lvalue     |       `-BinaryOperator 0x13b0097b8 <line:31:13, col:20> 'int' '='     |         |-DeclRefExpr 0x13b009760 <col:13> 'int' lvalue Var 0x13b927f40 'best' 'int'     |         `-ImplicitCastExpr 0x13b0097a0 <col:20> 'int' <LValueToRValue>     |           `-DeclRefExpr 0x13b009780 <col:20> 'int' lvalue Var 0x13b927df0 'i' 'int'     `-ReturnStmt 0x13b9416b8 <line:34:5, col:12>       `-ImplicitCastExpr 0x13b9416a0 <col:12> 'int' <LValueToRValue>         `-DeclRefExpr 0x13b941680 <col:12> 'int' lvalue Var 0x13b927f40 'best' 'int' ","20873":"`-FunctionDecl 0x14a83a998  line:1:5 invalid hugetlb_mcopy_atomic_pte 'int (struct mm_struct *, int *, struct vm_area_struct *, unsigned long, unsigned long, struct page **)'   |-ParmVarDecl 0x14a81f248 <col:30, col:48> col:48 used dst_mm 'struct mm_struct *'   |-ParmVarDecl 0x14a81f318 <line:2:8, col:15> col:15 invalid dst_pte 'int *'   |-ParmVarDecl 0x14a83a4e8 <line:3:8, col:31> col:31 used dst_vma 'struct vm_area_struct *'   |-ParmVarDecl 0x14a83a568 <line:4:8, col:22> col:22 used dst_addr 'unsigned long'   |-ParmVarDecl 0x14a83a5e8 <line:5:8, col:22> col:22 used src_addr 'unsigned long'   |-ParmVarDecl 0x14a83a818 <line:6:8, col:22> col:22 used pagep 'struct page **'   `-CompoundStmt 0x14c8123d0 <line:7:1, line:92:1>     |-DeclStmt 0x14a83abc8 <line:8:2, col:47>     | `-VarDecl 0x14a83aa88 <col:2, col:38> col:6 used vm_shared 'int' cinit     |   `-BinaryOperator 0x14a83aba8 <col:18, col:38> '<dependent type>' contains-errors '&'     |     |-RecoveryExpr 0x14a83ab28 <col:18, col:27> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x14a83aaf0 <col:18> 'struct vm_area_struct *' lvalue ParmVar 0x14a83a4e8 'dst_vma' 'struct vm_area_struct *'     |     `-RecoveryExpr 0x14a83ab88 <col:38> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x14a83b008 <line:9:2, col:40>     | |-RecordDecl 0x14a83abe0 <col:2, col:9> col:9 struct hstate     | `-VarDecl 0x14a83ad48 <col:2, col:39> col:17 used h 'struct hstate *' cinit     |   `-ImplicitCastExpr 0x14a83afd8 <col:21, col:39> 'struct hstate *' <IntegralToPointer>     |     `-CallExpr 0x14a83af98 <col:21, col:39> 'int'     |       |-ImplicitCastExpr 0x14a83af80 <col:21> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14a83af10 <col:21> 'int ()' Function 0x14a83ae58 'hstate_vma' 'int ()'     |       `-ImplicitCastExpr 0x14a83afc0 <col:32> 'struct vm_area_struct *' <LValueToRValue>     |         `-DeclRefExpr 0x14a83af30 <col:32> 'struct vm_area_struct *' lvalue ParmVar 0x14a83a4e8 'dst_vma' 'struct vm_area_struct *'     |-DeclStmt 0x14a83b0b8 <line:12:2, col:9>     | `-VarDecl 0x14a83b050 <col:2, col:6> col:6 used ret 'int'     |-DeclStmt 0x14a83b1c0 <line:13:2, col:19>     | `-VarDecl 0x14a83b158 <col:2, col:15> col:15 used page 'struct page *'     |-IfStmt 0x14c80e700 <line:15:2, line:35:2> has_else     | |-UnaryOperator 0x14a83b240 <line:15:6, col:8> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14a83b228 <col:7, col:8> 'struct page *' <LValueToRValue>     | |   `-UnaryOperator 0x14a83b210 <col:7, col:8> 'struct page *' lvalue prefix '*' cannot overflow     | |     `-ImplicitCastExpr 0x14a83b1f8 <col:8> 'struct page **' <LValueToRValue>     | |       `-DeclRefExpr 0x14a83b1d8 <col:8> 'struct page **' lvalue ParmVar 0x14a83a818 'pagep' 'struct page **'     | |-CompoundStmt 0x14c80e4d8 <col:15, line:32:2>     | | |-BinaryOperator 0x14a83b330 <line:16:3, col:10> 'int' contains-errors '='     | | | |-DeclRefExpr 0x14a83b258 <col:3> 'int' lvalue Var 0x14a83b050 'ret' 'int'     | | | `-UnaryOperator 0x14a83b318 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow     | | |   `-ImplicitCastExpr 0x14a83b300 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | | |     `-RecoveryExpr 0x14a83b2e0 <col:10> '<dependent type>' contains-errors lvalue     | | |-BinaryOperator 0x14c80d9d0 <line:17:3, col:46> 'struct page *' '='     | | | |-DeclRefExpr 0x14a83b350 <col:3> 'struct page *' lvalue Var 0x14a83b158 'page' 'struct page *'     | | | `-ImplicitCastExpr 0x14c80d9b8 <col:10, col:46> 'struct page *' <IntegralToPointer>     | | |   `-CallExpr 0x14c80d950 <col:10, col:46> 'int'     | | |     |-ImplicitCastExpr 0x14c80d938 <col:10> 'int (*)()' <FunctionToPointerDecay>     | | |     | `-DeclRefExpr 0x14c80d8b8 <col:10> 'int ()' Function 0x14c80d800 'alloc_huge_page' 'int ()'     | | |     |-ImplicitCastExpr 0x14c80d988 <col:26> 'struct vm_area_struct *' <LValueToRValue>     | | |     | `-DeclRefExpr 0x14c80d8d8 <col:26> 'struct vm_area_struct *' lvalue ParmVar 0x14a83a4e8 'dst_vma' 'struct vm_area_struct *'     | | |     |-ImplicitCastExpr 0x14c80d9a0 <col:35> 'unsigned long' <LValueToRValue>     | | |     | `-DeclRefExpr 0x14c80d8f8 <col:35> 'unsigned long' lvalue ParmVar 0x14a83a568 'dst_addr' 'unsigned long'     | | |     `-IntegerLiteral 0x14c80d918 <col:45> 'int' 0     | | |-IfStmt 0x14c80dbd0 <line:18:3, line:19:9>     | | | |-CallExpr 0x14c80db28 <line:18:7, col:18> 'int'     | | | | |-ImplicitCastExpr 0x14c80db10 <col:7> 'int (*)()' <FunctionToPointerDecay>     | | | | | `-DeclRefExpr 0x14c80dad0 <col:7> 'int ()' Function 0x14c80da18 'IS_ERR' 'int ()'     | | | | `-ImplicitCastExpr 0x14c80db50 <col:14> 'struct page *' <LValueToRValue>     | | | |   `-DeclRefExpr 0x14c80daf0 <col:14> 'struct page *' lvalue Var 0x14a83b158 'page' 'struct page *'     | | | `-GotoStmt 0x14c80dbb8 <line:19:4, col:9> 'out' 0x14c80db68     | | |-BinaryOperator 0x14c80e140 <line:21:3, line:23:36> 'int' contains-errors '='     | | | |-DeclRefExpr 0x14c80dbf0 <line:21:3> 'int' lvalue Var 0x14a83b050 'ret' 'int'     | | | `-CallExpr 0x14c80e100 <col:9, line:23:36> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x14c80dcf0 <line:21:9> 'int ()' Function 0x14c80dc38 'copy_huge_page_from_user' 'int ()'     | | |   |-DeclRefExpr 0x14c80dd10 <col:34> 'struct page *' lvalue Var 0x14a83b158 'page' 'struct page *'     | | |   |-CStyleCastExpr 0x14c80e060 <line:22:7, col:29> 'void' <ToVoid>     | | |   | `-ImplicitCastExpr 0x14c80e048 <col:29> 'unsigned long' <LValueToRValue> part_of_explicit_cast     | | |   |   `-DeclRefExpr 0x14c80dd30 <col:29> 'unsigned long' lvalue ParmVar 0x14a83a5e8 'src_addr' 'unsigned long'     | | |   |-CallExpr 0x14c80e0a0 <line:23:7, col:28> 'int'     | | |   | |-ImplicitCastExpr 0x14c80e088 <col:7> 'int (*)()' <FunctionToPointerDecay>     | | |   | | `-DeclRefExpr 0x14c80de80 <col:7> 'int ()' Function 0x14c80ddc8 'pages_per_huge_page' 'int ()'     | | |   | `-ImplicitCastExpr 0x14c80e0c8 <col:27> 'struct hstate *' <LValueToRValue>     | | |   |   `-DeclRefExpr 0x14c80dea0 <col:27> 'struct hstate *' lvalue Var 0x14a83ad48 'h' 'struct hstate *'     | | |   `-RecoveryExpr 0x14c80e0e0 <col:31> '<dependent type>' contains-errors lvalue     | | `-IfStmt 0x14c80e4b8 <line:26:3, line:31:3>     | |   |-CallExpr 0x14c80e298 <line:26:7, col:19> 'int'     | |   | |-ImplicitCastExpr 0x14c80e280 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | | `-DeclRefExpr 0x14c80e240 <col:7> 'int ()' Function 0x14c80e188 'unlikely' 'int ()'     | |   | `-ImplicitCastExpr 0x14c80e2c0 <col:16> 'int' <LValueToRValue>     | |   |   `-DeclRefExpr 0x14c80e260 <col:16> 'int' lvalue Var 0x14a83b050 'ret' 'int'     | |   `-CompoundStmt 0x14c80e490 <col:22, line:31:3>     | |     |-BinaryOperator 0x14c80e3b0 <line:27:4, col:11> 'int' contains-errors '='     | |     | |-DeclRefExpr 0x14c80e2d8 <col:4> 'int' lvalue Var 0x14a83b050 'ret' 'int'     | |     | `-UnaryOperator 0x14c80e398 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     | |     |   `-ImplicitCastExpr 0x14c80e380 <col:11> '<dependent type>' contains-errors <LValueToRValue>     | |     |     `-RecoveryExpr 0x14c80e360 <col:11> '<dependent type>' contains-errors lvalue     | |     |-BinaryOperator 0x14c80e458 <line:28:4, col:13> 'struct page *' '='     | |     | |-UnaryOperator 0x14c80e408 <col:4, col:5> 'struct page *' lvalue prefix '*' cannot overflow     | |     | | `-ImplicitCastExpr 0x14c80e3f0 <col:5> 'struct page **' <LValueToRValue>     | |     | |   `-DeclRefExpr 0x14c80e3d0 <col:5> 'struct page **' lvalue ParmVar 0x14a83a818 'pagep' 'struct page **'     | |     | `-ImplicitCastExpr 0x14c80e440 <col:13> 'struct page *' <LValueToRValue>     | |     |   `-DeclRefExpr 0x14c80e420 <col:13> 'struct page *' lvalue Var 0x14a83b158 'page' 'struct page *'     | |     `-GotoStmt 0x14c80e478 <line:30:4, col:9> 'out' 0x14c80db68     | `-CompoundStmt 0x14c80e6e0 <line:32:9, line:35:2>     |   |-BinaryOperator 0x14c80e598 <line:33:3, col:11> 'struct page *' '='     |   | |-DeclRefExpr 0x14c80e510 <col:3> 'struct page *' lvalue Var 0x14a83b158 'page' 'struct page *'     |   | `-ImplicitCastExpr 0x14c80e580 <col:10, col:11> 'struct page *' <LValueToRValue>     |   |   `-UnaryOperator 0x14c80e568 <col:10, col:11> 'struct page *' lvalue prefix '*' cannot overflow     |   |     `-ImplicitCastExpr 0x14c80e550 <col:11> 'struct page **' <LValueToRValue>     |   |       `-DeclRefExpr 0x14c80e530 <col:11> 'struct page **' lvalue ParmVar 0x14a83a818 'pagep' 'struct page **'     |   `-BinaryOperator 0x14c80e6c0 <line:34:3, col:12> 'struct page *' contains-errors '='     |     |-UnaryOperator 0x14c80e688 <col:3, col:4> 'struct page *' lvalue prefix '*' cannot overflow     |     | `-ImplicitCastExpr 0x14c80e670 <col:4> 'struct page **' <LValueToRValue>     |     |   `-DeclRefExpr 0x14c80e5b8 <col:4> 'struct page **' lvalue ParmVar 0x14a83a818 'pagep' 'struct page **'     |     `-RecoveryExpr 0x14c80e6a0 <col:12> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14c80fc68 <line:38:2, col:24> 'int'     | |-ImplicitCastExpr 0x14c80fc50 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14c80fc10 <col:2> 'int ()' Function 0x14c80e758 '__SetPageUptodate' 'int ()'     | `-ImplicitCastExpr 0x14c80fc90 <col:20> 'struct page *' <LValueToRValue>     |   `-DeclRefExpr 0x14c80fc30 <col:20> 'struct page *' lvalue Var 0x14a83b158 'page' 'struct page *'     |-CallExpr 0x14c80fde0 <line:39:2, col:27> 'int'     | |-ImplicitCastExpr 0x14c80fdc8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14c80fd88 <col:2> 'int ()' Function 0x14c80fcd0 'set_page_huge_active' 'int ()'     | `-ImplicitCastExpr 0x14c80fe08 <col:23> 'struct page *' <LValueToRValue>     |   `-DeclRefExpr 0x14c80fda8 <col:23> 'struct page *' lvalue Var 0x14a83b158 'page' 'struct page *'     |-IfStmt 0x14c810348 <line:42:2, line:49:2>     | |-ImplicitCastExpr 0x14c80fe40 <line:42:6> 'int' contains-errors <LValueToRValue>     | | `-DeclRefExpr 0x14c80fe20 <col:6> 'int' contains-errors lvalue Var 0x14a83aa88 'vm_shared' 'int'     | `-CompoundStmt 0x14c810328 <col:17, line:49:2>     |   |-DeclStmt 0x14c8100f0 <line:43:3, col:62>     |   | |-RecordDecl 0x14c80fe58 <col:3, col:10> col:10 struct address_space     |   | `-VarDecl 0x14c80ffc8 <col:3, col:53> col:25 used mapping 'struct address_space *' cinit     |   |   `-CXXDependentScopeMemberExpr 0x14c810090 <col:35, col:53> '<dependent type>' contains-errors lvalue ->f_mapping     |   |     `-RecoveryExpr 0x14c810068 <col:35, col:44> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x14c810030 <col:35> 'struct vm_area_struct *' lvalue ParmVar 0x14a83a4e8 'dst_vma' 'struct vm_area_struct *'     |   `-IfStmt 0x14c810308 <line:47:3, line:48:9>     |     |-ImplicitCastExpr 0x14c810288 <line:47:7> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x14c810268 <col:7> 'int' lvalue Var 0x14a83b050 'ret' 'int'     |     `-GotoStmt 0x14c8102f0 <line:48:4, col:9> 'out_release_nounlock' 0x14c8102a0     |-IfStmt 0x14c810910 <line:55:2, line:56:8>     | |-UnaryOperator 0x14c810890 <line:55:6, col:43> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x14c810868 <col:7, col:43> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x14c810700 <col:7> 'int ()' Function 0x14c810648 'huge_pte_none' 'int ()'     | |   `-CallExpr 0x14c810840 <col:21, col:42> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x14c810800 <col:21> 'int ()' Function 0x14c810748 'huge_ptep_get' 'int ()'     | |     `-RecoveryExpr 0x14c810820 <col:35> '<dependent type>' contains-errors lvalue     | `-GotoStmt 0x14c8108f8 <line:56:3, col:8> 'out_release_unlock' 0x14c8108a8     |-IfStmt 0x14c810e30 <line:58:2, line:63:2> has_else     | |-ImplicitCastExpr 0x14c810950 <line:58:6> 'int' contains-errors <LValueToRValue>     | | `-DeclRefExpr 0x14c810930 <col:6> 'int' contains-errors lvalue Var 0x14a83aa88 'vm_shared' 'int'     | |-CompoundStmt 0x14c810a88 <col:17, line:60:2>     | `-CompoundStmt 0x14c810e10 <col:9, line:63:2>     |   |-CallExpr 0x14c810bd0 <line:61:3, col:24> 'int'     |   | |-ImplicitCastExpr 0x14c810bb8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14c810b78 <col:3> 'int ()' Function 0x14c810ac0 'ClearPagePrivate' 'int ()'     |   | `-ImplicitCastExpr 0x14c810c00 <col:20> 'struct page *' <LValueToRValue>     |   |   `-DeclRefExpr 0x14c810b98 <col:20> 'struct page *' lvalue Var 0x14a83b158 'page' 'struct page *'     |   `-CallExpr 0x14c810d90 <line:62:3, col:53> 'int'     |     |-ImplicitCastExpr 0x14c810d78 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14c810cf8 <col:3> 'int ()' Function 0x14c810c40 'hugepage_add_new_anon_rmap' 'int ()'     |     |-ImplicitCastExpr 0x14c810dc8 <col:30> 'struct page *' <LValueToRValue>     |     | `-DeclRefExpr 0x14c810d18 <col:30> 'struct page *' lvalue Var 0x14a83b158 'page' 'struct page *'     |     |-ImplicitCastExpr 0x14c810de0 <col:36> 'struct vm_area_struct *' <LValueToRValue>     |     | `-DeclRefExpr 0x14c810d38 <col:36> 'struct vm_area_struct *' lvalue ParmVar 0x14a83a4e8 'dst_vma' 'struct vm_area_struct *'     |     `-ImplicitCastExpr 0x14c810df8 <col:45> 'unsigned long' <LValueToRValue>     |       `-DeclRefExpr 0x14c810d58 <col:45> 'unsigned long' lvalue ParmVar 0x14a83a568 'dst_addr' 'unsigned long'     |-CallExpr 0x14c811770 <line:74:2, col:50> 'int'     | |-ImplicitCastExpr 0x14c811758 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14c811680 <col:2> 'int ()' Function 0x14c8115c8 'hugetlb_count_add' 'int ()'     | |-CallExpr 0x14c8116f8 <col:20, col:41> 'int'     | | |-ImplicitCastExpr 0x14c8116e0 <col:20> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x14c8116a0 <col:20> 'int ()' Function 0x14c80ddc8 'pages_per_huge_page' 'int ()'     | | `-ImplicitCastExpr 0x14c811720 <col:40> 'struct hstate *' <LValueToRValue>     | |   `-DeclRefExpr 0x14c8116c0 <col:40> 'struct hstate *' lvalue Var 0x14a83ad48 'h' 'struct hstate *'     | `-ImplicitCastExpr 0x14c8117a0 <col:44> 'struct mm_struct *' <LValueToRValue>     |   `-DeclRefExpr 0x14c811738 <col:44> 'struct mm_struct *' lvalue ParmVar 0x14a81f248 'dst_mm' 'struct mm_struct *'     |-CallExpr 0x14c811918 <line:77:2, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c811898 <col:2> 'int ()' Function 0x14c8117e0 'update_mmu_cache' 'int ()'     | |-DeclRefExpr 0x14c8118b8 <col:19> 'struct vm_area_struct *' lvalue ParmVar 0x14a83a4e8 'dst_vma' 'struct vm_area_struct *'     | |-DeclRefExpr 0x14c8118d8 <col:28> 'unsigned long' lvalue ParmVar 0x14a83a568 'dst_addr' 'unsigned long'     | `-RecoveryExpr 0x14c8118f8 <col:38> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14c812000 <line:80:2, line:81:19>     | |-ImplicitCastExpr 0x14c811a70 <line:80:6> 'int' contains-errors <LValueToRValue>     | | `-DeclRefExpr 0x14c811a50 <col:6> 'int' contains-errors lvalue Var 0x14a83aa88 'vm_shared' 'int'     | `-CallExpr 0x14c811bc0 <line:81:3, col:19> 'int'     |   |-ImplicitCastExpr 0x14c811ba8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14c811b68 <col:3> 'int ()' Function 0x14c811ab0 'unlock_page' 'int ()'     |   `-ImplicitCastExpr 0x14c811be8 <col:15> 'struct page *' <LValueToRValue>     |     `-DeclRefExpr 0x14c811b88 <col:15> 'struct page *' lvalue Var 0x14a83b158 'page' 'struct page *'     |-BinaryOperator 0x14c812060 <line:82:2, col:8> 'int' '='     | |-DeclRefExpr 0x14c812020 <col:2> 'int' lvalue Var 0x14a83b050 'ret' 'int'     | `-IntegerLiteral 0x14c812040 <col:8> 'int' 0     |-LabelStmt 0x14c8120c8 <line:83:1, line:84:9> 'out'     | `-ReturnStmt 0x14c8120b8 <col:2, col:9>     |   `-ImplicitCastExpr 0x14c8120a0 <col:9> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x14c812080 <col:9> 'int' lvalue Var 0x14a83b050 'ret' 'int'     |-LabelStmt 0x14c812110 <line:85:1, col:19> 'out_release_unlock'     | `-NullStmt 0x14c812108 <col:19>     |-LabelStmt 0x14c812220 <line:87:1, line:89:19> 'out_release_nounlock'     | `-IfStmt 0x14c812200 <line:88:2, line:89:19>     |   |-ImplicitCastExpr 0x14c812150 <line:88:6> 'int' contains-errors <LValueToRValue>     |   | `-DeclRefExpr 0x14c812130 <col:6> 'int' contains-errors lvalue Var 0x14a83aa88 'vm_shared' 'int'     |   `-CallExpr 0x14c8121c0 <line:89:3, col:19> 'int'     |     |-ImplicitCastExpr 0x14c8121a8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14c812168 <col:3> 'int ()' Function 0x14c811ab0 'unlock_page' 'int ()'     |     `-ImplicitCastExpr 0x14c8121e8 <col:15> 'struct page *' <LValueToRValue>     |       `-DeclRefExpr 0x14c812188 <col:15> 'struct page *' lvalue Var 0x14a83b158 'page' 'struct page *'     |-CallExpr 0x14c812378 <line:90:2, col:15> 'int'     | |-ImplicitCastExpr 0x14c812360 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14c812320 <col:2> 'int ()' Function 0x14c812268 'put_page' 'int ()'     | `-ImplicitCastExpr 0x14c8123a0 <col:11> 'struct page *' <LValueToRValue>     |   `-DeclRefExpr 0x14c812340 <col:11> 'struct page *' lvalue Var 0x14a83b158 'page' 'struct page *'     `-GotoStmt 0x14c8123b8 <line:91:2, col:7> 'out' 0x14c80db68 ","20924":"`-FunctionDecl 0x12f027968  col:9 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x12f027a68 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x12f027a10 <<invalid sloc>> Implicit 873 ","20346":"`-FunctionDecl 0x132942fb8  col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x1329430b8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x132943120 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x132943188 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x132943060 <<invalid sloc>> Implicit 882 ","21179":"`-FunctionDecl 0x12c00ddc0  line:1:13 invalid JS_RunInRestrictedContext 'void (int)' static   |-ParmVarDecl 0x12c00dcf0 <line:2:5, <invalid sloc>> col:7 invalid 'int'   `-CompoundStmt 0x12c027c98 <col:54, line:39:1>     |-CallExpr 0x12c00e050 <line:3:3, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12c00dfd0 <col:3> 'int ()' Function 0x12c00df18 'TRI_V8_TRY_CATCH_BEGIN' 'int ()'     | `-RecoveryExpr 0x12c00e030 <col:26> '<dependent type>' contains-errors lvalue     |-RecoveryExpr 0x12c00e0a8 <line:4:3> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12c00e3e0 <line:6:3, line:8:3>     | |-RecoveryExpr 0x12c00e1c0 <line:6:7, col:50> '_Bool' contains-errors     | `-CompoundStmt 0x12c00e3c8 <col:53, line:8:3>     |   `-CallExpr 0x12c00e388 <line:7:5, col:39> 'int'     |     |-ImplicitCastExpr 0x12c00e370 <col:5> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x12c00e2c0 <col:5> 'int ()' Function 0x12c00e208 'TRI_V8_THROW_EXCEPTION_USAGE' 'int ()'     |     `-ImplicitCastExpr 0x12c00e3b0 <col:34> 'char *' <ArrayToPointerDecay>     |       `-StringLiteral 0x12c00e320 <col:34> 'char[4]' lvalue \"STR\"     |-RecoveryExpr 0x12c027430 <line:10:3> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12c027728 <line:11:3, line:15:3>     | |-CallExpr 0x12c027538 <line:11:7, col:22> '<dependent type>' contains-errors     | | `-CXXDependentScopeMemberExpr 0x12c0274f0 <col:7, col:14> '<dependent type>' contains-errors lvalue .IsEmpty     | |   `-RecoveryExpr 0x12c0274d0 <col:7> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12c027710 <col:25, line:15:3>     |   `-CallExpr 0x12c0276e0 <line:12:5, line:14:14> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12c027638 <line:12:5> 'int ()' Function 0x12c027580 'THROW_ARANGO_EXCEPTION_MESSAGE' 'int ()'     |     |-RecoveryExpr 0x12c0276c0 <line:13:9> '<dependent type>' contains-errors lvalue     |     `-StringLiteral 0x12c027670 <line:14:9> 'char[4]' lvalue \"STR\"     |-CallExpr 0x12c027860 <line:17:3, col:19> 'int'     | `-ImplicitCastExpr 0x12c027848 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x12c027828 <col:3> 'int ()' Function 0x12c027770 'TRI_GET_GLOBALS' 'int ()'     `-CompoundStmt 0x12c027c78 <line:19:3, line:36:3>       |-DeclStmt 0x12c0279c8 <line:21:5, col:44>       | `-VarDecl 0x12c027898 <col:5, col:28> col:10 oldContext 'int' auto cinit       |   `-CXXDependentScopeMemberExpr 0x12c027980 <col:23, col:28> '<dependent type>' contains-errors lvalue ->_securityContext       |     `-RecoveryExpr 0x12c027960 <col:23> '<dependent type>' contains-errors lvalue       `-DeclStmt 0x12c027b60 <line:28:5, line:29:80>         `-VarDecl 0x12c0279f8 <line:28:5, col:10> col:10 guard 'int' auto ","21057":"`-FunctionDecl 0x154141838  line:1:1 invalid passwd 'int (struct parse *, int *)'   |-ParmVarDecl 0x154128648 <line:2:2, col:16> col:16 used pcmd 'struct parse *'   |-ParmVarDecl 0x154128718 <line:3:2, col:8> col:8 invalid fp 'int *'   `-CompoundStmt 0x154143f90 <line:5:1, line:27:1>     |-DeclStmt 0x154141970 <line:6:2, col:18>     | `-VarDecl 0x154141908 <col:2, col:14> col:14 used pass 'const char *'     |-IfStmt 0x154141f30 <line:8:2, line:14:2>     | |-BinaryOperator 0x154141a00 <line:8:6, col:25> 'int' contains-errors '=='     | | |-RecoveryExpr 0x1541419e0 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x1541419a0 <col:25> 'int' 0     | `-CompoundStmt 0x154141f18 <col:28, line:14:2>     |   `-IfStmt 0x154141ef8 <line:10:3, line:13:3>     |     |-BinaryOperator 0x154141d00 <line:10:7, col:26> 'int' contains-errors '=='     |     | |-RecoveryExpr 0x154141ce0 <col:7> '<dependent type>' contains-errors lvalue     |     | `-IntegerLiteral 0x154141ca0 <col:26> 'int' 0     |     `-CompoundStmt 0x154141ed8 <col:29, line:13:3>     |       |-CStyleCastExpr 0x154141ea0 <line:11:4, col:27> 'void' contains-errors <ToVoid>     |       | `-CallExpr 0x154141e60 <col:10, col:27> '<dependent type>' contains-errors     |       |   |-DeclRefExpr 0x154141e00 <col:10> 'int ()' Function 0x154141d48 'fprintf' 'int ()'     |       |   |-RecoveryExpr 0x154141e20 <col:18> '<dependent type>' contains-errors lvalue     |       |   `-StringLiteral 0x154141e40 <col:22> 'char[4]' lvalue \"STR\"     |       `-ReturnStmt 0x154141ec8 <line:12:4>     |-IfStmt 0x1541424f8 <line:15:2, line:23:2> has_else     | |-BinaryOperator 0x154141fd0 <line:15:6, col:21> 'int' contains-errors '>='     | | |-RecoveryExpr 0x154141f88 <col:6, col:12> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x154141f50 <col:6> 'struct parse *' lvalue ParmVar 0x154128648 'pcmd' 'struct parse *'     | | `-IntegerLiteral 0x154141fb0 <col:21> 'int' 1     | |-BinaryOperator 0x154142110 <line:16:3, col:26> 'const char *' contains-errors '='     | | |-DeclRefExpr 0x154141ff0 <col:3> 'const char *' lvalue Var 0x154141908 'pass' 'const char *'     | | `-CXXDependentScopeMemberExpr 0x1541420c8 <col:10, col:26> '<dependent type>' contains-errors lvalue .string     | |   `-ArraySubscriptExpr 0x1541420a8 <col:10, col:24> '<dependent type>' contains-errors lvalue     | |     |-ImplicitCastExpr 0x154142090 <col:10, col:16> '<dependent type>' contains-errors <LValueToRValue>     | |     | `-RecoveryExpr 0x154142048 <col:10, col:16> '<dependent type>' contains-errors lvalue     | |     |   `-DeclRefExpr 0x154142010 <col:10> 'struct parse *' lvalue ParmVar 0x154128648 'pcmd' 'struct parse *'     | |     `-IntegerLiteral 0x154142070 <col:23> 'int' 0     | `-CompoundStmt 0x1541424d8 <line:17:7, line:23:2>     |   |-BinaryOperator 0x1541422f8 <line:18:3, col:43> 'const char *' contains-errors '='     |   | |-DeclRefExpr 0x154142130 <col:3> 'const char *' lvalue Var 0x154141908 'pass' 'const char *'     |   | `-CallExpr 0x1541422d0 <col:10, col:43> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x154142230 <col:10> 'int ()' Function 0x154142178 'getpass_keytype' 'int ()'     |   |   `-RecoveryExpr 0x1541422b0 <col:26> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x1541424b8 <line:19:3, line:22:3>     |     |-BinaryOperator 0x1541423d8 <line:19:7, col:21> 'int' '=='     |     | |-CharacterLiteral 0x154142318 <col:7> 'int' 0     |     | `-ImplicitCastExpr 0x1541423c0 <col:15, col:21> 'int' <IntegralCast>     |     |   `-ImplicitCastExpr 0x1541423a8 <col:15, col:21> 'char' <LValueToRValue>     |     |     `-ArraySubscriptExpr 0x154142388 <col:15, col:21> 'const char' lvalue     |     |       |-ImplicitCastExpr 0x154142370 <col:15> 'const char *' <LValueToRValue>     |     |       | `-DeclRefExpr 0x154142330 <col:15> 'const char *' lvalue Var 0x154141908 'pass' 'const char *'     |     |       `-IntegerLiteral 0x154142350 <col:20> 'int' 0     |     `-CompoundStmt 0x154142498 <col:24, line:22:3>     |       |-CallExpr 0x154142458 <line:20:4, col:21> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x1541423f8 <col:4> 'int ()' Function 0x154141d48 'fprintf' 'int ()'     |       | |-RecoveryExpr 0x154142418 <col:12> '<dependent type>' contains-errors lvalue     |       | `-StringLiteral 0x154142438 <col:16> 'char[4]' lvalue \"STR\"     |       `-ReturnStmt 0x154142488 <line:21:4>     |-CallExpr 0x1541427a0 <line:24:2, line:25:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x154142608 <line:24:2> 'int ()' Function 0x154142550 'authusekey' 'int ()'     | |-RecoveryExpr 0x154142708 <col:13> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x154142728 <col:30> '<dependent type>' contains-errors lvalue     | `-CStyleCastExpr 0x154142778 <line:25:6, col:22> 'const char *' <NoOp>     |   `-ImplicitCastExpr 0x154142760 <col:22> 'const char *' <LValueToRValue> part_of_explicit_cast     |     `-DeclRefExpr 0x154142658 <col:22> 'const char *' lvalue Var 0x154141908 'pass' 'const char *'     `-CallExpr 0x154143f60 <line:26:2, col:30> '<dependent type>' contains-errors       |-DeclRefExpr 0x154143eb8 <col:2> 'int ()' Function 0x154143e00 'authtrust' 'int ()'       |-RecoveryExpr 0x154143f40 <col:12> '<dependent type>' contains-errors lvalue       `-IntegerLiteral 0x154143ef0 <col:29> 'int' 1 ","20216":"`-FunctionDecl 0x16000dd38  line:1:27 invalid send_read 'struct pending_op *(struct btd_device *, struct gatt_db_attribute *, int *, struct queue *, unsigned int, int, int)' static   |-ParmVarDecl 0x15681b4e8 <col:37, col:56> col:56 used device 'struct btd_device *'   |-ParmVarDecl 0x16000d6c8 <line:2:6, col:32> col:32 used attrib 'struct gatt_db_attribute *'   |-ParmVarDecl 0x16000d798 <line:3:6, col:18> col:18 invalid proxy 'int *'   |-ParmVarDecl 0x16000d968 <line:4:6, col:20> col:20 used owner_queue 'struct queue *'   |-ParmVarDecl 0x16000d9e8 <line:5:6, col:19> col:19 used id 'unsigned int'   |-ParmVarDecl 0x16000da68 <line:6:6, col:15> col:15 invalid offset 'int'   |-ParmVarDecl 0x16000dae8 <line:7:6, col:14> col:14 invalid link_type 'int'   `-CompoundStmt 0x16000fbd0 <line:8:1, line:21:1>     |-DeclStmt 0x16000df10 <line:9:2, col:23>     | `-VarDecl 0x16000dea8 <col:2, col:21> col:21 used op 'struct pending_op *'     |-BinaryOperator 0x16000e1d0 <line:11:2, line:12:17> 'struct pending_op *' contains-errors '='     | |-DeclRefExpr 0x16000df28 <line:11:2> 'struct pending_op *' lvalue Var 0x16000dea8 'op' 'struct pending_op *'     | `-CallExpr 0x16000e180 <col:7, line:12:17> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x16000e0a0 <line:11:7> 'int ()' Function 0x16000dfe8 'pending_read_new' 'int ()'     |   |-DeclRefExpr 0x16000e0c0 <col:24> 'struct btd_device *' lvalue ParmVar 0x15681b4e8 'device' 'struct btd_device *'     |   |-DeclRefExpr 0x16000e0e0 <col:32> 'struct queue *' lvalue ParmVar 0x16000d968 'owner_queue' 'struct queue *'     |   |-DeclRefExpr 0x16000e100 <col:45> 'struct gatt_db_attribute *' lvalue ParmVar 0x16000d6c8 'attrib' 'struct gatt_db_attribute *'     |   |-DeclRefExpr 0x16000e120 <col:53> 'unsigned int' lvalue ParmVar 0x16000d9e8 'id' 'unsigned int'     |   |-RecoveryExpr 0x16000e140 <col:57> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x16000e160 <line:12:8> '<dependent type>' contains-errors lvalue     |-IfStmt 0x16000e598 <line:14:2, line:16:10>     | |-BinaryOperator 0x16000e530 <line:14:6, line:15:44> 'int' contains-errors '=='     | | |-CallExpr 0x16000e4c0 <line:14:6, line:15:39> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x16000e2d0 <line:14:6> 'int ()' Function 0x16000e218 'g_dbus_proxy_method_call' 'int ()'     | | | |-RecoveryExpr 0x16000e2f0 <col:31> '<dependent type>' contains-errors lvalue     | | | |-StringLiteral 0x16000e350 <col:38> 'char[4]' lvalue \"STR\"     | | | |-RecoveryExpr 0x16000e460 <col:45> '<dependent type>' contains-errors lvalue     | | | |-RecoveryExpr 0x16000e480 <line:15:5> '<dependent type>' contains-errors lvalue     | | | |-DeclRefExpr 0x16000e3a0 <col:20> 'struct pending_op *' lvalue Var 0x16000dea8 'op' 'struct pending_op *'     | | | `-RecoveryExpr 0x16000e4a0 <col:24> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x16000e510 <col:44> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x16000e588 <line:16:3, col:10>     |   `-ImplicitCastExpr 0x16000e570 <col:10> 'struct pending_op *' <LValueToRValue>     |     `-DeclRefExpr 0x16000e550 <col:10> 'struct pending_op *' lvalue Var 0x16000dea8 'op' 'struct pending_op *'     |-CallExpr 0x16000fb48 <line:18:2, col:20> 'int'     | |-ImplicitCastExpr 0x16000fb30 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x16000fab8 <col:2> 'int ()' Function 0x16000fa00 'pending_op_free' 'int ()'     | `-ImplicitCastExpr 0x16000fb70 <col:18> 'struct pending_op *' <LValueToRValue>     |   `-DeclRefExpr 0x16000fad8 <col:18> 'struct pending_op *' lvalue Var 0x16000dea8 'op' 'struct pending_op *'     `-ReturnStmt 0x16000fbc0 <line:20:2, col:9>       `-RecoveryExpr 0x16000fba0 <col:9> '<dependent type>' contains-errors lvalue ","21040":"`-FunctionDecl 0x14c914558  line:1:1 invalid match_anychar 'int (struct dfa *, int, int, int)'   |-ParmVarDecl 0x14c8fb248 <col:16, col:28> col:28 used d 'struct dfa *'   |-ParmVarDecl 0x14c8fb2c8 <col:31, col:35> col:35 used s 'int'   |-ParmVarDecl 0x14c8fb360 <col:38, col:47> col:47 invalid pos 'int'   |-ParmVarDecl 0x14c914400 <col:52, col:56> col:56 used idx 'int'   `-CompoundStmt 0x14c915120 <line:2:1, line:27:1>     |-DeclStmt 0x14c9146a0 <line:3:3, col:14>     | `-VarDecl 0x14c914638 <col:3, col:7> col:7 used context 'int'     |-DeclStmt 0x14c914738 <line:5:3, col:13>     | `-VarDecl 0x14c9146d0 <col:3, col:7> col:7 used mbclen 'int'     |-IfStmt 0x14c914b08 <line:11:3, line:20:5> has_else     | |-RecoveryExpr 0x14c914888 <line:11:7, col:22> '_Bool' contains-errors     | |-CompoundStmt 0x14c914968 <line:12:5, line:15:5>     | | `-IfStmt 0x14c914948 <line:13:7, line:14:16>     | |   |-RecoveryExpr 0x14c9148f8 <line:13:11, col:41> '_Bool' contains-errors     | |   `-ReturnStmt 0x14c914938 <line:14:9, col:16>     | |     `-IntegerLiteral 0x14c914918 <col:16> 'int' 0     | `-IfStmt 0x14c914ae8 <line:16:8, line:20:5>     |   |-RecoveryExpr 0x14c9149b0 <line:16:12, col:27> '_Bool' contains-errors     |   `-CompoundStmt 0x14c914ad0 <line:17:5, line:20:5>     |     `-IfStmt 0x14c914ab0 <line:18:7, line:19:16>     |       |-BinaryOperator 0x14c914a60 <line:18:11, col:25> '<dependent type>' contains-errors '&'     |       | |-RecoveryExpr 0x14c914a20 <col:11> '<dependent type>' contains-errors lvalue     |       | `-RecoveryExpr 0x14c914a40 <col:25> '<dependent type>' contains-errors lvalue     |       `-ReturnStmt 0x14c914aa0 <line:19:9, col:16>     |         `-IntegerLiteral 0x14c914a80 <col:16> 'int' 0     |-BinaryOperator 0x14c914d78 <line:22:3, col:29> 'int' contains-errors '='     | |-DeclRefExpr 0x14c914b38 <col:3> 'int' lvalue Var 0x14c914638 'context' 'int'     | `-CallExpr 0x14c914d50 <col:13, col:29> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14c914cb0 <col:13> 'int ()' Function 0x14c914bf8 'wchar_context' 'int ()'     |   `-RecoveryExpr 0x14c914d30 <col:27> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14c9150b8 <line:23:3, line:24:12>     | |-UnaryOperator 0x14c915070 <line:23:7, col:73> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x14c915038 <col:8, col:73> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x14c914e78 <col:8> 'int ()' Function 0x14c914dc0 'SUCCEEDS_IN_CONTEXT' 'int ()'     | |   |-CXXDependentScopeMemberExpr 0x14c914eb8 <col:28, col:32> '<dependent type>' contains-errors lvalue .constraint     | |   | `-RecoveryExpr 0x14c914e98 <col:28> '<dependent type>' contains-errors lvalue     | |   |-CXXDependentScopeMemberExpr 0x14c914fd0 <col:44, col:57> '<dependent type>' contains-errors lvalue .context     | |   | `-ArraySubscriptExpr 0x14c914fb0 <col:44, col:55> '<dependent type>' contains-errors lvalue     | |   |   |-ImplicitCastExpr 0x14c914f80 <col:44, col:47> '<dependent type>' contains-errors <LValueToRValue>     | |   |   | `-RecoveryExpr 0x14c914f38 <col:44, col:47> '<dependent type>' contains-errors lvalue     | |   |   |   `-DeclRefExpr 0x14c914f00 <col:44> 'struct dfa *' lvalue ParmVar 0x14c8fb248 'd' 'struct dfa *'     | |   |   `-ImplicitCastExpr 0x14c914f98 <col:54> 'int' <LValueToRValue>     | |   |     `-DeclRefExpr 0x14c914f60 <col:54> 'int' lvalue ParmVar 0x14c8fb2c8 's' 'int'     | |   `-DeclRefExpr 0x14c915018 <col:66> 'int' lvalue Var 0x14c914638 'context' 'int'     | `-ReturnStmt 0x14c9150a8 <line:24:5, col:12>     |   `-IntegerLiteral 0x14c915088 <col:12> 'int' 0     `-ReturnStmt 0x14c915110 <line:26:3, col:10>       `-ImplicitCastExpr 0x14c9150f8 <col:10> 'int' <LValueToRValue>         `-DeclRefExpr 0x14c9150d8 <col:10> 'int' lvalue Var 0x14c9146d0 'mbclen' 'int' ","20656":"`-FunctionDecl 0x14c80dda8  line:1:8 PHP_FUNCTION 'int (int)' static   |-ParmVarDecl 0x14c80dcd8 <col:21> col:21 bzdecompress 'int'   `-CompoundStmt 0x14c82ba18 <line:2:1, line:50:1>     |-DeclStmt 0x14c80dfb8 <line:3:2, col:21>     | |-VarDecl 0x14c80deb8 <col:2, col:8> col:8 used source 'char *'     | `-VarDecl 0x14c80df38 <col:2, col:17> col:17 used dest 'char *'     |-DeclStmt 0x14c80e0e8 <line:4:2, col:23>     | |-VarDecl 0x14c80dfe8 <col:2, col:6> col:6 used source_len 'int'     | `-VarDecl 0x14c80e068 <col:2, col:18> col:18 used error 'int'     |-DeclStmt 0x14c80e1b8 <line:5:2, col:16>     | `-VarDecl 0x14c80e118 <col:2, col:15> col:7 used small 'long' cinit     |   `-ImplicitCastExpr 0x14c80e1a0 <col:15> 'long' <IntegralCast>     |     `-IntegerLiteral 0x14c80e180 <col:15> 'int' 0     |-DeclStmt 0x14c80e288 <line:9:2, col:29>     | `-VarDecl 0x14c80e1e8 <col:2, col:28> col:21 used size 'unsigned long long' cinit     |   `-ImplicitCastExpr 0x14c80e270 <col:28> 'unsigned long long' <IntegralCast>     |     `-IntegerLiteral 0x14c80e250 <col:28> 'int' 0     |-IfStmt 0x14c828b98 <line:13:2, line:15:2>     | |-RecoveryExpr 0x14c828b68 <line:13:6, col:101> '_Bool' contains-errors     | `-CompoundStmt 0x14c828b88 <col:104, line:15:2>     |-IfStmt 0x14c828e88 <line:20:2, line:22:2>     | |-BinaryOperator 0x14c828e58 <line:20:6, col:46> 'int' contains-errors '!='     | | |-CallExpr 0x14c828e00 <col:6, col:41> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x14c828cc8 <col:6> 'int ()' Function 0x14c828c10 'BZ2_bzDecompressInit' 'int ()'     | | | |-UnaryOperator 0x14c828de8 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | | `-RecoveryExpr 0x14c828dc8 <col:28> '<dependent type>' contains-errors lvalue     | | | |-IntegerLiteral 0x14c828d18 <col:33> 'int' 0     | | | `-DeclRefExpr 0x14c828d38 <col:36> 'long' lvalue Var 0x14c80e118 'small' 'long'     | | `-RecoveryExpr 0x14c828e38 <col:46> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14c828e78 <col:53, line:22:2>     |-WhileStmt 0x14c8294d8 <line:31:2, line:37:2>     | |-RecoveryExpr 0x14c8291e0 <line:31:9, col:69> '_Bool' contains-errors     | `-CompoundStmt 0x14c8294c8 <col:72, line:37:2>     `-IfStmt 0x14c82b8e8 <line:39:2, line:47:2> has_else       |-RecoveryExpr 0x14c829538 <line:39:6, col:41> '_Bool' contains-errors       |-CompoundStmt 0x14c829990 <col:48, line:44:2>       | |-BinaryOperator 0x14c829750 <line:42:3, col:16> 'char' '='       | | |-ArraySubscriptExpr 0x14c829700 <col:3, col:12> 'char' lvalue       | | | |-ImplicitCastExpr 0x14c8296d0 <col:3> 'char *' <LValueToRValue>       | | | | `-DeclRefExpr 0x14c829690 <col:3> 'char *' lvalue Var 0x14c80df38 'dest' 'char *'       | | | `-ImplicitCastExpr 0x14c8296e8 <col:8> 'unsigned long long' <LValueToRValue>       | | |   `-DeclRefExpr 0x14c8296b0 <col:8> 'unsigned long long' lvalue Var 0x14c80e1e8 'size' 'unsigned long long'       | | `-ImplicitCastExpr 0x14c829738 <col:16> 'char' <IntegralCast>       | |   `-CharacterLiteral 0x14c829720 <col:16> 'int' 0       | `-CallExpr 0x14c829940 <line:43:3, col:37> 'int'       |   |-ImplicitCastExpr 0x14c829928 <col:3> 'int (*)()' <FunctionToPointerDecay>       |   | `-DeclRefExpr 0x14c829850 <col:3> 'int ()' Function 0x14c829798 'RETVAL_STRINGL' 'int ()'       |   |-ImplicitCastExpr 0x14c829978 <col:18> 'char *' <LValueToRValue>       |   | `-DeclRefExpr 0x14c829870 <col:18> 'char *' lvalue Var 0x14c80df38 'dest' 'char *'       |   |-CStyleCastExpr 0x14c8298e0 <col:24, col:30> 'int' <IntegralCast>       |   | `-ImplicitCastExpr 0x14c8298c8 <col:30> 'unsigned long long' <LValueToRValue> part_of_explicit_cast       |   |   `-DeclRefExpr 0x14c829890 <col:30> 'unsigned long long' lvalue Var 0x14c80e1e8 'size' 'unsigned long long'       |   `-IntegerLiteral 0x14c829908 <col:36> 'int' 0       `-CompoundStmt 0x14c82b8c8 <line:44:9, line:47:2>         |-CallExpr 0x14c82b710 <line:45:3, col:13> 'int'         | |-ImplicitCastExpr 0x14c82b6f8 <col:3> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x14c82b6b8 <col:3> 'int ()' Function 0x14c82b600 'efree' 'int ()'         | `-ImplicitCastExpr 0x14c82b738 <col:9> 'char *' <LValueToRValue>         |   `-DeclRefExpr 0x14c82b6d8 <col:9> 'char *' lvalue Var 0x14c80df38 'dest' 'char *'         `-CallExpr 0x14c82b888 <line:46:3, col:20> 'int'           |-ImplicitCastExpr 0x14c82b870 <col:3> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x14c82b830 <col:3> 'int ()' Function 0x14c82b778 'RETVAL_LONG' 'int ()'           `-ImplicitCastExpr 0x14c82b8b0 <col:15> 'int' <LValueToRValue>             `-DeclRefExpr 0x14c82b850 <col:15> 'int' lvalue Var 0x14c80e068 'error' 'int' ","20549":"`-FunctionDecl 0x147128750  line:1:13 vmx_set_constant_host_state 'void (struct vcpu_vmx *)' static   |-ParmVarDecl 0x147128648 <col:41, col:58> col:58 used vmx 'struct vcpu_vmx *'   `-CompoundStmt 0x1471440d8 <line:2:1, line:38:1>     |-DeclStmt 0x147140ae0 <line:4:2, col:20>     | `-VarDecl 0x147140a78 <col:2, col:16> col:16 used tmpl 'unsigned long'     |-DeclStmt 0x147140c78 <line:5:2, col:20>     | |-RecordDecl 0x147140af8 <col:2, col:9> col:9 struct desc_ptr     | `-VarDecl 0x147140bf8 <col:2, col:18> col:18 invalid dt 'struct desc_ptr'     |-CallExpr 0x1471410a8 <line:7:2, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x147140da0 <col:2> 'int ()' Function 0x147140ce8 'vmcs_writel' 'int ()'     | |-RecoveryExpr 0x147140fe0 <col:14> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x147141088 <col:24, col:38> '<dependent type>' contains-errors '&'     |   |-CallExpr 0x147141018 <col:24, col:33> 'int'     |   | `-ImplicitCastExpr 0x147141000 <col:24> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x147140eb8 <col:24> 'int ()' Function 0x147140e00 'read_cr0' 'int ()'     |   `-UnaryOperator 0x147141070 <col:37, col:38> '<dependent type>' contains-errors prefix '~' cannot overflow     |     `-ImplicitCastExpr 0x147141058 <col:38> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x147141038 <col:38> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1471412d0 <line:8:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1471410d8 <col:2> 'int ()' Function 0x147140ce8 'vmcs_writel' 'int ()'     | |-RecoveryExpr 0x147141278 <col:14> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x1471412b0 <col:24, col:33> 'int'     |   `-ImplicitCastExpr 0x147141298 <col:24> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x1471411f0 <col:24> 'int ()' Function 0x147141138 'read_cr4' 'int ()'     |-CallExpr 0x1471414f8 <line:9:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x147141300 <col:2> 'int ()' Function 0x147140ce8 'vmcs_writel' 'int ()'     | |-RecoveryExpr 0x1471414a0 <col:14> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x1471414d8 <col:24, col:33> 'int'     |   `-ImplicitCastExpr 0x1471414c0 <col:24> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x147141418 <col:24> 'int ()' Function 0x147141360 'read_cr3' 'int ()'     |-CallExpr 0x1471416c8 <line:11:2, col:44> '<dependent type>' contains-errors     | |-DeclRefExpr 0x147141608 <col:2> 'int ()' Function 0x147141550 'vmcs_write16' 'int ()'     | |-RecoveryExpr 0x147141688 <col:15> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1471416a8 <col:33> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1471417b8 <line:17:2, col:44> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1471416f8 <col:2> 'int ()' Function 0x147141550 'vmcs_write16' 'int ()'     | |-RecoveryExpr 0x147141778 <col:15> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x147141798 <col:33> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1471418a8 <line:18:2, col:44> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1471417e8 <col:2> 'int ()' Function 0x147141550 'vmcs_write16' 'int ()'     | |-RecoveryExpr 0x147141868 <col:15> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x147141888 <col:33> '<dependent type>' contains-errors lvalue     |-CallExpr 0x147141998 <line:20:2, col:44> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1471418d8 <col:2> 'int ()' Function 0x147141550 'vmcs_write16' 'int ()'     | |-RecoveryExpr 0x147141958 <col:15> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x147141978 <col:33> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1471438e8 <line:21:2, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1471419c8 <col:2> 'int ()' Function 0x147141550 'vmcs_write16' 'int ()'     | |-RecoveryExpr 0x147143888 <col:15> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x1471438c8 <col:33, col:47> '<dependent type>' contains-errors '*'     |   |-RecoveryExpr 0x1471438a8 <col:33> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x147143818 <col:47> 'int' 8     |-CallExpr 0x147143a50 <line:23:2, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1471439f8 <col:2> 'int ()' Function 0x147143940 'native_store_idt' 'int ()'     | `-UnaryOperator 0x147143a38 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x147143a18 <col:20> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x147143bc8 <line:25:2, col:26> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x147143b38 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x147143b00 <col:2> 'struct vcpu_vmx *' lvalue ParmVar 0x147128648 'vmx' 'struct vcpu_vmx *'     | `-CXXDependentScopeMemberExpr 0x147143b80 <col:23, col:26> '<dependent type>' contains-errors lvalue .address     |   `-RecoveryExpr 0x147143b60 <col:23> '<dependent type>' contains-errors lvalue     `-IfStmt 0x1471440b8 <line:34:2, line:37:2>       |-RecoveryExpr 0x147143f68 <line:34:6, col:32> '_Bool' contains-errors       `-CompoundStmt 0x1471440a8 <col:55, line:37:2> ","20916":"`-FunctionDecl 0x12a128358  line:1:1 invalid TPMS_CERTIFY_INFO_Unmarshal 'int (int *, int **, int *)'   |-ParmVarDecl 0x12a128128 <col:29, col:48> col:48 invalid target 'int *'   |-ParmVarDecl 0x12a1281e0 <col:56, col:63> col:63 invalid buffer 'int **'   |-ParmVarDecl 0x12a128260 <col:71, col:78> col:78 invalid size 'int *'   `-CompoundStmt 0x12b0083b0 <line:2:1, line:12:1>     |-IfStmt 0x12a128748 <line:5:5, line:7:5>     | |-BinaryOperator 0x12a1284a8 <line:5:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x12a128468 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12a128488 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12a128738 <col:31, line:7:5>     |-IfStmt 0x12b008348 <line:8:5, line:10:5>     | |-BinaryOperator 0x12b008200 <line:8:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x12a1287b8 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12a1287d8 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12b008338 <col:31, line:10:5>     `-ReturnStmt 0x12b0083a0 <line:11:5, col:12>       `-RecoveryExpr 0x12b008380 <col:12> '<dependent type>' contains-errors lvalue ","20388":"`-FunctionDecl 0x13e141830  col:5 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x13e141930 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x13e141998 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x13e141a00 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x13e1418d8 <<invalid sloc>> Implicit 882 ","20387":"`-FunctionDecl 0x13200dfe8  line:1:1 invalid TPMI_ALG_MAC_SCHEME_Unmarshal 'int (int *, int **, int *, int)'   |-ParmVarDecl 0x13200dd28 <col:31, col:52> col:52 invalid target 'int *'   |-ParmVarDecl 0x13200dde0 <col:60, col:67> col:67 invalid buffer 'int **'   |-ParmVarDecl 0x13200de60 <col:75, col:82> col:82 invalid size 'int *'   |-ParmVarDecl 0x13200dee0 <col:88, col:93> col:93 invalid allowNull 'int'   `-CompoundStmt 0x133009440 <line:2:1, line:38:1>     |-IfStmt 0x13200e388 <line:5:5, line:7:5>     | |-BinaryOperator 0x13200e140 <line:5:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x13200e100 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13200e120 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13200e378 <col:31, line:7:5>     |-IfStmt 0x1330093d8 <line:8:5, line:36:5>     | |-BinaryOperator 0x133009240 <line:8:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x133009200 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x133009220 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1330093c0 <col:31, line:36:5>     |   `-SwitchStmt 0x1330092b0 <line:9:2, line:35:2>     |     |-UnaryOperator 0x133009298 <line:9:10, col:11> '<dependent type>' contains-errors prefix '*' cannot overflow     |     | `-ImplicitCastExpr 0x133009280 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |     |   `-RecoveryExpr 0x133009260 <col:11> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x133009398 <col:19, line:35:2>     |       |-BreakStmt 0x1330092d8 <line:28:6>     |       |-IfStmt 0x133009338 <line:30:6, line:32:6>     |       | |-RecoveryExpr 0x1330092f8 <line:30:10> '<dependent type>' contains-errors lvalue     |       | `-CompoundStmt 0x133009320 <col:21, line:32:6>     |       |   `-BreakStmt 0x133009318 <line:31:3>     |       `-DefaultStmt 0x133009378 <line:33:4, col:11>     |         `-NullStmt 0x133009370 <col:11>     `-ReturnStmt 0x133009430 <line:37:5, col:12>       `-RecoveryExpr 0x133009410 <col:12> '<dependent type>' contains-errors lvalue ","20568":"`-FunctionDecl 0x148123140  line:1:13 n_tty_set_termios 'void (struct tty_struct *, struct ktermios *)' static   |-ParmVarDecl 0x14000e248 <col:31, col:50> col:50 used tty 'struct tty_struct *'   |-ParmVarDecl 0x148123028 <col:55, col:72> col:72 used old 'struct ktermios *'   `-CompoundStmt 0x14002bc90 <line:2:1, line:82:1>     |-DeclStmt 0x148123488 <line:3:2, col:43>     | |-RecordDecl 0x148123240 <col:2, col:9> col:9 struct n_tty_data     | `-VarDecl 0x1481233a8 <col:2, col:34> col:21 used ldata 'struct n_tty_data *' cinit     |   `-RecoveryExpr 0x148123448 <col:29, col:34> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x148123410 <col:29> 'struct tty_struct *' lvalue ParmVar 0x14000e248 'tty' 'struct tty_struct *'     |-IfStmt 0x140026b98 <line:5:2, line:19:2>     | |-BinaryOperator 0x148123748 <line:5:6, col:54> 'int' contains-errors '||'     | | |-UnaryOperator 0x1481236f0 <col:6, col:7> 'int' prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x1481236d8 <col:7> 'struct ktermios *' <LValueToRValue>     | | |   `-DeclRefExpr 0x1481234a0 <col:7> 'struct ktermios *' lvalue ParmVar 0x148123028 'old' 'struct ktermios *'     | | `-BinaryOperator 0x148123728 <col:14, col:54> '<dependent type>' contains-errors '&'     | |   |-ParenExpr 0x148123618 <col:14, col:50> '<dependent type>' contains-errors     | |   | `-BinaryOperator 0x1481235f8 <col:15, col:43> '<dependent type>' contains-errors '^'     | |   |   |-RecoveryExpr 0x148123528 <col:15, col:20> '<dependent type>' contains-errors lvalue     | |   |   | `-DeclRefExpr 0x1481234f0 <col:15> 'struct ktermios *' lvalue ParmVar 0x148123028 'old' 'struct ktermios *'     | |   |   `-CXXDependentScopeMemberExpr 0x1481235b0 <col:30, col:43> '<dependent type>' contains-errors lvalue .c_lflag     | |   |     `-RecoveryExpr 0x148123588 <col:30, col:35> '<dependent type>' contains-errors lvalue     | |   |       `-DeclRefExpr 0x148123550 <col:30> 'struct tty_struct *' lvalue ParmVar 0x14000e248 'tty' 'struct tty_struct *'     | |   `-RecoveryExpr 0x148123708 <col:54> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x140026b60 <col:62, line:19:2>     |   |-CallExpr 0x148123968 <line:6:3, col:48> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x148123880 <col:3> 'int ()' Function 0x1481237c8 'bitmap_zero' 'int ()'     |   | |-RecoveryExpr 0x1481238d8 <col:15, col:22> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x1481238a0 <col:15> 'struct n_tty_data *' contains-errors lvalue Var 0x1481233a8 'ldata' 'struct n_tty_data *'     |   | `-RecoveryExpr 0x148123948 <col:34> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x148123a58 <line:7:3, col:30> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x1481239d0 <col:3, col:10> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x148123998 <col:3> 'struct n_tty_data *' contains-errors lvalue Var 0x1481233a8 'ldata' 'struct n_tty_data *'     |   | `-RecoveryExpr 0x148123a30 <col:23, col:30> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x1481239f8 <col:23> 'struct n_tty_data *' contains-errors lvalue Var 0x1481233a8 'ldata' 'struct n_tty_data *'     |   |-IfStmt 0x1400269f0 <line:8:3, line:16:3> has_else     |   | |-BinaryOperator 0x148123dd0 <line:8:7, col:40> 'int' contains-errors '||'     |   | | |-UnaryOperator 0x148123c28 <col:7, col:20> 'int' prefix '!' cannot overflow     |   | | | `-CallExpr 0x148123be8 <col:8, col:20> 'int'     |   | | |   |-ImplicitCastExpr 0x148123bd0 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | | |   | `-DeclRefExpr 0x148123b58 <col:8> 'int ()' Function 0x148123aa0 'L_ICANON' 'int ()'     |   | | |   `-ImplicitCastExpr 0x148123c10 <col:17> 'struct tty_struct *' <LValueToRValue>     |   | | |     `-DeclRefExpr 0x148123b78 <col:17> 'struct tty_struct *' lvalue ParmVar 0x14000e248 'tty' 'struct tty_struct *'     |   | | `-UnaryOperator 0x148123db8 <col:25, col:40> 'int' contains-errors prefix '!' cannot overflow     |   | |   `-CallExpr 0x148123d78 <col:26, col:40> 'int' contains-errors     |   | |     |-ImplicitCastExpr 0x148123d60 <col:26> 'int (*)()' <FunctionToPointerDecay>     |   | |     | `-DeclRefExpr 0x148123d20 <col:26> 'int ()' Function 0x148123c68 'read_cnt' 'int ()'     |   | |     `-ImplicitCastExpr 0x148123da0 <col:35> 'struct n_tty_data *' contains-errors <LValueToRValue>     |   | |       `-DeclRefExpr 0x148123d40 <col:35> 'struct n_tty_data *' contains-errors lvalue Var 0x1481233a8 'ldata' 'struct n_tty_data *'     |   | |-CompoundStmt 0x148123f70 <col:43, line:11:3>     |   | | |-BinaryOperator 0x148123eb0 <line:9:4, col:31> '<dependent type>' contains-errors '='     |   | | | |-RecoveryExpr 0x148123e28 <col:4, col:11> '<dependent type>' contains-errors lvalue     |   | | | | `-DeclRefExpr 0x148123df0 <col:4> 'struct n_tty_data *' contains-errors lvalue Var 0x1481233a8 'ldata' 'struct n_tty_data *'     |   | | | `-RecoveryExpr 0x148123e88 <col:24, col:31> '<dependent type>' contains-errors lvalue     |   | | |   `-DeclRefExpr 0x148123e50 <col:24> 'struct n_tty_data *' contains-errors lvalue Var 0x1481233a8 'ldata' 'struct n_tty_data *'     |   | | `-BinaryOperator 0x148123f50 <line:10:4, col:18> '<dependent type>' contains-errors '='     |   | |   |-RecoveryExpr 0x148123f08 <col:4, col:11> '<dependent type>' contains-errors lvalue     |   | |   | `-DeclRefExpr 0x148123ed0 <col:4> 'struct n_tty_data *' contains-errors lvalue Var 0x1481233a8 'ldata' 'struct n_tty_data *'     |   | |   `-IntegerLiteral 0x148123f30 <col:18> 'int' 0     |   | `-CompoundStmt 0x1400269d0 <line:11:10, line:16:3>     |   |   |-BinaryOperator 0x140026910 <line:14:4, col:31> '<dependent type>' contains-errors '='     |   |   | |-RecoveryExpr 0x140026888 <col:4, col:11> '<dependent type>' contains-errors lvalue     |   |   | | `-DeclRefExpr 0x140026850 <col:4> 'struct n_tty_data *' contains-errors lvalue Var 0x1481233a8 'ldata' 'struct n_tty_data *'     |   |   | `-RecoveryExpr 0x1400268e8 <col:24, col:31> '<dependent type>' contains-errors lvalue     |   |   |   `-DeclRefExpr 0x1400268b0 <col:24> 'struct n_tty_data *' contains-errors lvalue Var 0x1481233a8 'ldata' 'struct n_tty_data *'     |   |   `-BinaryOperator 0x1400269b0 <line:15:4, col:18> '<dependent type>' contains-errors '='     |   |     |-RecoveryExpr 0x140026968 <col:4, col:11> '<dependent type>' contains-errors lvalue     |   |     | `-DeclRefExpr 0x140026930 <col:4> 'struct n_tty_data *' contains-errors lvalue Var 0x1481233a8 'ldata' 'struct n_tty_data *'     |   |     `-IntegerLiteral 0x140026990 <col:18> 'int' 1     |   |-BinaryOperator 0x140026aa0 <line:17:3, col:20> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x140026a58 <col:3, col:10> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x140026a20 <col:3> 'struct n_tty_data *' contains-errors lvalue Var 0x1481233a8 'ldata' 'struct n_tty_data *'     |   | `-IntegerLiteral 0x140026a80 <col:20> 'int' 0     |   `-BinaryOperator 0x140026b40 <line:18:3, col:18> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x140026af8 <col:3, col:10> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x140026ac0 <col:3> 'struct n_tty_data *' contains-errors lvalue Var 0x1481233a8 'ldata' 'struct n_tty_data *'     |     `-IntegerLiteral 0x140026b20 <col:18> 'int' 0     |-BinaryOperator 0x140026d10 <line:21:2, col:37> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x140026bf0 <col:2, col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x140026bb8 <col:2> 'struct n_tty_data *' contains-errors lvalue Var 0x1481233a8 'ldata' 'struct n_tty_data *'     | `-ParenExpr 0x140026cf0 <col:18, col:37> 'int'     |   `-BinaryOperator 0x140026cd0 <col:19, col:36> 'int' '!='     |     |-CallExpr 0x140026c70 <col:19, col:31> 'int'     |     | |-ImplicitCastExpr 0x140026c58 <col:19> 'int (*)()' <FunctionToPointerDecay>     |     | | `-DeclRefExpr 0x140026c18 <col:19> 'int ()' Function 0x148123aa0 'L_ICANON' 'int ()'     |     | `-ImplicitCastExpr 0x140026c98 <col:28> 'struct tty_struct *' <LValueToRValue>     |     |   `-DeclRefExpr 0x140026c38 <col:28> 'struct tty_struct *' lvalue ParmVar 0x14000e248 'tty' 'struct tty_struct *'     |     `-IntegerLiteral 0x140026cb0 <col:36> 'int' 0     |-IfStmt 0x14002b078 <line:23:2, line:69:2> has_else     | |-BinaryOperator 0x140027c18 <line:23:6, line:26:18> 'int' '||'     | | |-BinaryOperator 0x140027a80 <line:23:6, line:25:46> 'int' '||'     | | | |-BinaryOperator 0x1400278e8 <line:23:6, line:25:31> 'int' '||'     | | | | |-BinaryOperator 0x140027750 <line:23:6, line:25:16> 'int' '||'     | | | | | |-BinaryOperator 0x1400275a0 <line:23:6, line:24:50> 'int' '||'     | | | | | | |-BinaryOperator 0x1400274e8 <line:23:6, line:24:33> 'int' '||'     | | | | | | | |-BinaryOperator 0x140027350 <line:23:6, line:24:17> 'int' '||'     | | | | | | | | |-BinaryOperator 0x1400271b8 <line:23:6, col:50> 'int' '||'     | | | | | | | | | |-BinaryOperator 0x140027020 <col:6, col:34> 'int' '||'     | | | | | | | | | | |-CallExpr 0x140026e68 <col:6, col:18> 'int'     | | | | | | | | | | | |-ImplicitCastExpr 0x140026e50 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | | | | | | | | | | `-DeclRefExpr 0x140026e10 <col:6> 'int ()' Function 0x140026d58 'I_ISTRIP' 'int ()'     | | | | | | | | | | | `-ImplicitCastExpr 0x140026e90 <col:15> 'struct tty_struct *' <LValueToRValue>     | | | | | | | | | | |   `-DeclRefExpr 0x140026e30 <col:15> 'struct tty_struct *' lvalue ParmVar 0x14000e248 'tty' 'struct tty_struct *'     | | | | | | | | | | `-CallExpr 0x140026fe0 <col:23, col:34> 'int'     | | | | | | | | | |   |-ImplicitCastExpr 0x140026fc8 <col:23> 'int (*)()' <FunctionToPointerDecay>     | | | | | | | | | |   | `-DeclRefExpr 0x140026f88 <col:23> 'int ()' Function 0x140026ed0 'I_IUCLC' 'int ()'     | | | | | | | | | |   `-ImplicitCastExpr 0x140027008 <col:31> 'struct tty_struct *' <LValueToRValue>     | | | | | | | | | |     `-DeclRefExpr 0x140026fa8 <col:31> 'struct tty_struct *' lvalue ParmVar 0x14000e248 'tty' 'struct tty_struct *'     | | | | | | | | | `-CallExpr 0x140027178 <col:39, col:50> 'int'     | | | | | | | | |   |-ImplicitCastExpr 0x140027160 <col:39> 'int (*)()' <FunctionToPointerDecay>     | | | | | | | | |   | `-DeclRefExpr 0x140027120 <col:39> 'int ()' Function 0x140027068 'I_IGNCR' 'int ()'     | | | | | | | | |   `-ImplicitCastExpr 0x1400271a0 <col:47> 'struct tty_struct *' <LValueToRValue>     | | | | | | | | |     `-DeclRefExpr 0x140027140 <col:47> 'struct tty_struct *' lvalue ParmVar 0x14000e248 'tty' 'struct tty_struct *'     | | | | | | | | `-CallExpr 0x140027310 <line:24:6, col:17> 'int'     | | | | | | | |   |-ImplicitCastExpr 0x1400272f8 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | | | | | |   | `-DeclRefExpr 0x1400272b8 <col:6> 'int ()' Function 0x140027200 'I_ICRNL' 'int ()'     | | | | | | | |   `-ImplicitCastExpr 0x140027338 <col:14> 'struct tty_struct *' <LValueToRValue>     | | | | | | | |     `-DeclRefExpr 0x1400272d8 <col:14> 'struct tty_struct *' lvalue ParmVar 0x14000e248 'tty' 'struct tty_struct *'     | | | | | | | `-CallExpr 0x1400274a8 <col:22, col:33> 'int'     | | | | | | |   |-ImplicitCastExpr 0x140027490 <col:22> 'int (*)()' <FunctionToPointerDecay>     | | | | | | |   | `-DeclRefExpr 0x140027450 <col:22> 'int ()' Function 0x140027398 'I_INLCR' 'int ()'     | | | | | | |   `-ImplicitCastExpr 0x1400274d0 <col:30> 'struct tty_struct *' <LValueToRValue>     | | | | | | |     `-DeclRefExpr 0x140027470 <col:30> 'struct tty_struct *' lvalue ParmVar 0x14000e248 'tty' 'struct tty_struct *'     | | | | | | `-CallExpr 0x140027560 <col:38, col:50> 'int'     | | | | | |   |-ImplicitCastExpr 0x140027548 <col:38> 'int (*)()' <FunctionToPointerDecay>     | | | | | |   | `-DeclRefExpr 0x140027508 <col:38> 'int ()' Function 0x148123aa0 'L_ICANON' 'int ()'     | | | | | |   `-ImplicitCastExpr 0x140027588 <col:47> 'struct tty_struct *' <LValueToRValue>     | | | | | |     `-DeclRefExpr 0x140027528 <col:47> 'struct tty_struct *' lvalue ParmVar 0x14000e248 'tty' 'struct tty_struct *'     | | | | | `-CallExpr 0x140027710 <line:25:6, col:16> 'int'     | | | | |   |-ImplicitCastExpr 0x1400276f8 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | | |   | `-DeclRefExpr 0x1400276b8 <col:6> 'int ()' Function 0x140027600 'I_IXON' 'int ()'     | | | | |   `-ImplicitCastExpr 0x140027738 <col:13> 'struct tty_struct *' <LValueToRValue>     | | | | |     `-DeclRefExpr 0x1400276d8 <col:13> 'struct tty_struct *' lvalue ParmVar 0x14000e248 'tty' 'struct tty_struct *'     | | | | `-CallExpr 0x1400278a8 <col:21, col:31> 'int'     | | | |   |-ImplicitCastExpr 0x140027890 <col:21> 'int (*)()' <FunctionToPointerDecay>     | | | |   | `-DeclRefExpr 0x140027850 <col:21> 'int ()' Function 0x140027798 'L_ISIG' 'int ()'     | | | |   `-ImplicitCastExpr 0x1400278d0 <col:28> 'struct tty_struct *' <LValueToRValue>     | | | |     `-DeclRefExpr 0x140027870 <col:28> 'struct tty_struct *' lvalue ParmVar 0x14000e248 'tty' 'struct tty_struct *'     | | | `-CallExpr 0x140027a40 <col:36, col:46> 'int'     | | |   |-ImplicitCastExpr 0x140027a28 <col:36> 'int (*)()' <FunctionToPointerDecay>     | | |   | `-DeclRefExpr 0x1400279e8 <col:36> 'int ()' Function 0x140027930 'L_ECHO' 'int ()'     | | |   `-ImplicitCastExpr 0x140027a68 <col:43> 'struct tty_struct *' <LValueToRValue>     | | |     `-DeclRefExpr 0x140027a08 <col:43> 'struct tty_struct *' lvalue ParmVar 0x14000e248 'tty' 'struct tty_struct *'     | | `-CallExpr 0x140027bd8 <line:26:6, col:18> 'int'     | |   |-ImplicitCastExpr 0x140027bc0 <col:6> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x140027b80 <col:6> 'int ()' Function 0x140027ac8 'I_PARMRK' 'int ()'     | |   `-ImplicitCastExpr 0x140027c00 <col:15> 'struct tty_struct *' <LValueToRValue>     | |     `-DeclRefExpr 0x140027ba0 <col:15> 'struct tty_struct *' lvalue ParmVar 0x14000e248 'tty' 'struct tty_struct *'     | |-CompoundStmt 0x14002a580 <col:21, line:61:2>     | | |-CallExpr 0x140027cd8 <line:27:3, col:35> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x140027c38 <col:3> 'int ()' Function 0x1481237c8 'bitmap_zero' 'int ()'     | | | |-RecoveryExpr 0x140027c90 <col:15, col:22> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x140027c58 <col:15> 'struct n_tty_data *' contains-errors lvalue Var 0x1481233a8 'ldata' 'struct n_tty_data *'     | | | `-IntegerLiteral 0x140027cb8 <col:32> 'int' 256     | | |-IfStmt 0x140027f20 <line:29:3, line:30:33>     | | | |-BinaryOperator 0x140027e38 <line:29:7, col:34> 'int' '||'     | | | | |-CallExpr 0x140027d60 <col:7, col:18> 'int'     | | | | | |-ImplicitCastExpr 0x140027d48 <col:7> 'int (*)()' <FunctionToPointerDecay>     | | | | | | `-DeclRefExpr 0x140027d08 <col:7> 'int ()' Function 0x140027068 'I_IGNCR' 'int ()'     | | | | | `-ImplicitCastExpr 0x140027d88 <col:15> 'struct tty_struct *' <LValueToRValue>     | | | | |   `-DeclRefExpr 0x140027d28 <col:15> 'struct tty_struct *' lvalue ParmVar 0x14000e248 'tty' 'struct tty_struct *'     | | | | `-CallExpr 0x140027df8 <col:23, col:34> 'int'     | | | |   |-ImplicitCastExpr 0x140027de0 <col:23> 'int (*)()' <FunctionToPointerDecay>     | | | |   | `-DeclRefExpr 0x140027da0 <col:23> 'int ()' Function 0x140027200 'I_ICRNL' 'int ()'     | | | |   `-ImplicitCastExpr 0x140027e20 <col:31> 'struct tty_struct *' <LValueToRValue>     | | | |     `-DeclRefExpr 0x140027dc0 <col:31> 'struct tty_struct *' lvalue ParmVar 0x14000e248 'tty' 'struct tty_struct *'     | | | `-CallExpr 0x140027ef0 <line:30:4, col:33> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x140027e58 <col:4> 'int ()' Function 0x140026600 'set_bit' 'int ()'     | | |   |-CharacterLiteral 0x140027e78 <col:12> 'int' 13     | | |   `-RecoveryExpr 0x140027ec8 <col:18, col:25> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x140027e90 <col:18> 'struct n_tty_data *' contains-errors lvalue Var 0x1481233a8 'ldata' 'struct n_tty_data *'     | | |-IfStmt 0x1400280a0 <line:31:3, line:32:33>     | | | |-CallExpr 0x140027f98 <line:31:7, col:18> 'int'     | | | | |-ImplicitCastExpr 0x140027f80 <col:7> 'int (*)()' <FunctionToPointerDecay>     | | | | | `-DeclRefExpr 0x140027f40 <col:7> 'int ()' Function 0x140027398 'I_INLCR' 'int ()'     | | | | `-ImplicitCastExpr 0x140027fc0 <col:15> 'struct tty_struct *' <LValueToRValue>     | | | |   `-DeclRefExpr 0x140027f60 <col:15> 'struct tty_struct *' lvalue ParmVar 0x14000e248 'tty' 'struct tty_struct *'     | | | `-CallExpr 0x140028070 <line:32:4, col:33> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x140027fd8 <col:4> 'int ()' Function 0x140026600 'set_bit' 'int ()'     | | |   |-CharacterLiteral 0x140027ff8 <col:12> 'int' 10     | | |   `-RecoveryExpr 0x140028048 <col:18, col:25> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x140028010 <col:18> 'struct n_tty_data *' contains-errors lvalue Var 0x1481233a8 'ldata' 'struct n_tty_data *'     | | |-IfStmt 0x140029640 <line:34:3, line:48:3>     | | | |-CallExpr 0x140028118 <line:34:7, col:19> 'int'     | | | | |-ImplicitCastExpr 0x140028100 <col:7> 'int (*)()' <FunctionToPointerDecay>     | | | | | `-DeclRefExpr 0x1400280c0 <col:7> 'int ()' Function 0x148123aa0 'L_ICANON' 'int ()'     | | | | `-ImplicitCastExpr 0x140028140 <col:16> 'struct tty_struct *' <LValueToRValue>     | | | |   `-DeclRefExpr 0x1400280e0 <col:16> 'struct tty_struct *' lvalue ParmVar 0x14000e248 'tty' 'struct tty_struct *'     | | | `-CompoundStmt 0x140029600 <col:22, line:48:3>     | | |   |-CallExpr 0x140028350 <line:35:4, col:44> '<dependent type>' contains-errors     | | |   | |-DeclRefExpr 0x140028158 <col:4> 'int ()' Function 0x140026600 'set_bit' 'int ()'     | | |   | |-CallExpr 0x1400282b0 <col:12, col:26> 'int'     | | |   | | |-ImplicitCastExpr 0x140028298 <col:12> 'int (*)()' <FunctionToPointerDecay>     | | |   | | | `-DeclRefExpr 0x140028258 <col:12> 'int ()' Function 0x1400281a0 'ERASE_CHAR' 'int ()'     | | |   | | `-ImplicitCastExpr 0x1400282d8 <col:23> 'struct tty_struct *' <LValueToRValue>     | | |   | |   `-DeclRefExpr 0x140028278 <col:23> 'struct tty_struct *' lvalue ParmVar 0x14000e248 'tty' 'struct tty_struct *'     | | |   | `-RecoveryExpr 0x140028328 <col:29, col:36> '<dependent type>' contains-errors lvalue     | | |   |   `-DeclRefExpr 0x1400282f0 <col:29> 'struct n_tty_data *' contains-errors lvalue Var 0x1481233a8 'ldata' 'struct n_tty_data *'     | | |   |-CallExpr 0x140028578 <line:36:4, col:43> '<dependent type>' contains-errors     | | |   | |-DeclRefExpr 0x140028380 <col:4> 'int ()' Function 0x140026600 'set_bit' 'int ()'     | | |   | |-CallExpr 0x1400284d8 <col:12, col:25> 'int'     | | |   | | |-ImplicitCastExpr 0x1400284c0 <col:12> 'int (*)()' <FunctionToPointerDecay>     | | |   | | | `-DeclRefExpr 0x140028480 <col:12> 'int ()' Function 0x1400283c8 'KILL_CHAR' 'int ()'     | | |   | | `-ImplicitCastExpr 0x140028500 <col:22> 'struct tty_struct *' <LValueToRValue>     | | |   | |   `-DeclRefExpr 0x1400284a0 <col:22> 'struct tty_struct *' lvalue ParmVar 0x14000e248 'tty' 'struct tty_struct *'     | | |   | `-RecoveryExpr 0x140028550 <col:28, col:35> '<dependent type>' contains-errors lvalue     | | |   |   `-DeclRefExpr 0x140028518 <col:28> 'struct n_tty_data *' contains-errors lvalue Var 0x1481233a8 'ldata' 'struct n_tty_data *'     | | |   |-CallExpr 0x1400287b0 <line:37:4, col:42> '<dependent type>' contains-errors     | | |   | |-DeclRefExpr 0x1400285a8 <col:4> 'int ()' Function 0x140026600 'set_bit' 'int ()'     | | |   | |-CallExpr 0x140028710 <col:12, col:24> 'int'     | | |   | | |-ImplicitCastExpr 0x1400286f8 <col:12> 'int (*)()' <FunctionToPointerDecay>     | | |   | | | `-DeclRefExpr 0x1400286b8 <col:12> 'int ()' Function 0x140028600 'EOF_CHAR' 'int ()'     | | |   | | `-ImplicitCastExpr 0x140028738 <col:21> 'struct tty_struct *' <LValueToRValue>     | | |   | |   `-DeclRefExpr 0x1400286d8 <col:21> 'struct tty_struct *' lvalue ParmVar 0x14000e248 'tty' 'struct tty_struct *'     | | |   | `-RecoveryExpr 0x140028788 <col:27, col:34> '<dependent type>' contains-errors lvalue     | | |   |   `-DeclRefExpr 0x140028750 <col:27> 'struct n_tty_data *' contains-errors lvalue Var 0x1481233a8 'ldata' 'struct n_tty_data *'     | | |   |-CallExpr 0x140028878 <line:38:4, col:33> '<dependent type>' contains-errors     | | |   | |-DeclRefExpr 0x1400287e0 <col:4> 'int ()' Function 0x140026600 'set_bit' 'int ()'     | | |   | |-CharacterLiteral 0x140028800 <col:12> 'int' 10     | | |   | `-RecoveryExpr 0x140028850 <col:18, col:25> '<dependent type>' contains-errors lvalue     | | |   |   `-DeclRefExpr 0x140028818 <col:18> 'struct n_tty_data *' contains-errors lvalue Var 0x1481233a8 'ldata' 'struct n_tty_data *'     | | |   |-CallExpr 0x140028aa0 <line:39:4, col:42> '<dependent type>' contains-errors     | | |   | |-DeclRefExpr 0x1400288a8 <col:4> 'int ()' Function 0x140026600 'set_bit' 'int ()'     | | |   | |-CallExpr 0x140028a00 <col:12, col:24> 'int'     | | |   | | |-ImplicitCastExpr 0x1400289e8 <col:12> 'int (*)()' <FunctionToPointerDecay>     | | |   | | | `-DeclRefExpr 0x1400289a8 <col:12> 'int ()' Function 0x1400288f0 'EOL_CHAR' 'int ()'     | | |   | | `-ImplicitCastExpr 0x140028a28 <col:21> 'struct tty_struct *' <LValueToRValue>     | | |   | |   `-DeclRefExpr 0x1400289c8 <col:21> 'struct tty_struct *' lvalue ParmVar 0x14000e248 'tty' 'struct tty_struct *'     | | |   | `-RecoveryExpr 0x140028a78 <col:27, col:34> '<dependent type>' contains-errors lvalue     | | |   |   `-DeclRefExpr 0x140028a40 <col:27> 'struct n_tty_data *' contains-errors lvalue Var 0x1481233a8 'ldata' 'struct n_tty_data *'     | | |   `-IfStmt 0x1400295d0 <line:40:4, line:47:4>     | | |     |-CallExpr 0x140028c08 <line:40:8, col:20> 'int'     | | |     | |-ImplicitCastExpr 0x140028bf0 <col:8> 'int (*)()' <FunctionToPointerDecay>     | | |     | | `-DeclRefExpr 0x140028bb0 <col:8> 'int ()' Function 0x140028af8 'L_IEXTEN' 'int ()'     | | |     | `-ImplicitCastExpr 0x140028c30 <col:17> 'struct tty_struct *' <LValueToRValue>     | | |     |   `-DeclRefExpr 0x140028bd0 <col:17> 'struct tty_struct *' lvalue ParmVar 0x14000e248 'tty' 'struct tty_struct *'     | | |     `-CompoundStmt 0x1400295a0 <col:23, line:47:4>     | | |       |-CallExpr 0x140028e40 <line:41:5, col:46> '<dependent type>' contains-errors     | | |       | |-DeclRefExpr 0x140028c48 <col:5> 'int ()' Function 0x140026600 'set_bit' 'int ()'     | | |       | |-CallExpr 0x140028da0 <col:13, col:28> 'int'     | | |       | | |-ImplicitCastExpr 0x140028d88 <col:13> 'int (*)()' <FunctionToPointerDecay>     | | |       | | | `-DeclRefExpr 0x140028d48 <col:13> 'int ()' Function 0x140028c90 'WERASE_CHAR' 'int ()'     | | |       | | `-ImplicitCastExpr 0x140028dc8 <col:25> 'struct tty_struct *' <LValueToRValue>     | | |       | |   `-DeclRefExpr 0x140028d68 <col:25> 'struct tty_struct *' lvalue ParmVar 0x14000e248 'tty' 'struct tty_struct *'     | | |       | `-RecoveryExpr 0x140028e18 <col:31, col:38> '<dependent type>' contains-errors lvalue     | | |       |   `-DeclRefExpr 0x140028de0 <col:31> 'struct n_tty_data *' contains-errors lvalue Var 0x1481233a8 'ldata' 'struct n_tty_data *'     | | |       |-CallExpr 0x140029068 <line:42:5, col:45> '<dependent type>' contains-errors     | | |       | |-DeclRefExpr 0x140028e70 <col:5> 'int ()' Function 0x140026600 'set_bit' 'int ()'     | | |       | |-CallExpr 0x140028fc8 <col:13, col:27> 'int'     | | |       | | |-ImplicitCastExpr 0x140028fb0 <col:13> 'int (*)()' <FunctionToPointerDecay>     | | |       | | | `-DeclRefExpr 0x140028f70 <col:13> 'int ()' Function 0x140028eb8 'LNEXT_CHAR' 'int ()'     | | |       | | `-ImplicitCastExpr 0x140028ff0 <col:24> 'struct tty_struct *' <LValueToRValue>     | | |       | |   `-DeclRefExpr 0x140028f90 <col:24> 'struct tty_struct *' lvalue ParmVar 0x14000e248 'tty' 'struct tty_struct *'     | | |       | `-RecoveryExpr 0x140029040 <col:30, col:37> '<dependent type>' contains-errors lvalue     | | |       |   `-DeclRefExpr 0x140029008 <col:30> 'struct n_tty_data *' contains-errors lvalue Var 0x1481233a8 'ldata' 'struct n_tty_data *'     | | |       |-CallExpr 0x140029290 <line:43:5, col:44> '<dependent type>' contains-errors     | | |       | |-DeclRefExpr 0x140029098 <col:5> 'int ()' Function 0x140026600 'set_bit' 'int ()'     | | |       | |-CallExpr 0x1400291f0 <col:13, col:26> 'int'     | | |       | | |-ImplicitCastExpr 0x1400291d8 <col:13> 'int (*)()' <FunctionToPointerDecay>     | | |       | | | `-DeclRefExpr 0x140029198 <col:13> 'int ()' Function 0x1400290e0 'EOL2_CHAR' 'int ()'     | | |       | | `-ImplicitCastExpr 0x140029218 <col:23> 'struct tty_struct *' <LValueToRValue>     | | |       | |   `-DeclRefExpr 0x1400291b8 <col:23> 'struct tty_struct *' lvalue ParmVar 0x14000e248 'tty' 'struct tty_struct *'     | | |       | `-RecoveryExpr 0x140029268 <col:29, col:36> '<dependent type>' contains-errors lvalue     | | |       |   `-DeclRefExpr 0x140029230 <col:29> 'struct n_tty_data *' contains-errors lvalue Var 0x1481233a8 'ldata' 'struct n_tty_data *'     | | |       `-IfStmt 0x140029580 <line:44:5, line:46:22>     | | |         |-CallExpr 0x140029318 <line:44:9, col:19> 'int'     | | |         | |-ImplicitCastExpr 0x140029300 <col:9> 'int (*)()' <FunctionToPointerDecay>     | | |         | | `-DeclRefExpr 0x1400292c0 <col:9> 'int ()' Function 0x140027930 'L_ECHO' 'int ()'     | | |         | `-ImplicitCastExpr 0x140029340 <col:16> 'struct tty_struct *' <LValueToRValue>     | | |         |   `-DeclRefExpr 0x1400292e0 <col:16> 'struct tty_struct *' lvalue ParmVar 0x14000e248 'tty' 'struct tty_struct *'     | | |         `-CallExpr 0x140029550 <line:45:6, line:46:22> '<dependent type>' contains-errors     | | |           |-DeclRefExpr 0x140029358 <line:45:6> 'int ()' Function 0x140026600 'set_bit' 'int ()'     | | |           |-CallExpr 0x1400294b0 <col:14, col:30> 'int'     | | |           | |-ImplicitCastExpr 0x140029498 <col:14> 'int (*)()' <FunctionToPointerDecay>     | | |           | | `-DeclRefExpr 0x140029458 <col:14> 'int ()' Function 0x1400293a0 'REPRINT_CHAR' 'int ()'     | | |           | `-ImplicitCastExpr 0x1400294d8 <col:27> 'struct tty_struct *' <LValueToRValue>     | | |           |   `-DeclRefExpr 0x140029478 <col:27> 'struct tty_struct *' lvalue ParmVar 0x14000e248 'tty' 'struct tty_struct *'     | | |           `-RecoveryExpr 0x140029528 <line:46:7, col:14> '<dependent type>' contains-errors lvalue     | | |             `-DeclRefExpr 0x1400294f0 <col:7> 'struct n_tty_data *' contains-errors lvalue Var 0x1481233a8 'ldata' 'struct n_tty_data *'     | | |-IfStmt 0x140029b68 <line:49:3, line:52:3>     | | | |-CallExpr 0x1400296b8 <line:49:7, col:17> 'int'     | | | | |-ImplicitCastExpr 0x1400296a0 <col:7> 'int (*)()' <FunctionToPointerDecay>     | | | | | `-DeclRefExpr 0x140029660 <col:7> 'int ()' Function 0x140027600 'I_IXON' 'int ()'     | | | | `-ImplicitCastExpr 0x1400296e0 <col:14> 'struct tty_struct *' <LValueToRValue>     | | | |   `-DeclRefExpr 0x140029680 <col:14> 'struct tty_struct *' lvalue ParmVar 0x14000e248 'tty' 'struct tty_struct *'     | | | `-CompoundStmt 0x140029b48 <col:20, line:52:3>     | | |   |-CallExpr 0x1400298f0 <line:50:4, col:44> '<dependent type>' contains-errors     | | |   | |-DeclRefExpr 0x1400296f8 <col:4> 'int ()' Function 0x140026600 'set_bit' 'int ()'     | | |   | |-CallExpr 0x140029850 <col:12, col:26> 'int'     | | |   | | |-ImplicitCastExpr 0x140029838 <col:12> 'int (*)()' <FunctionToPointerDecay>     | | |   | | | `-DeclRefExpr 0x1400297f8 <col:12> 'int ()' Function 0x140029740 'START_CHAR' 'int ()'     | | |   | | `-ImplicitCastExpr 0x140029878 <col:23> 'struct tty_struct *' <LValueToRValue>     | | |   | |   `-DeclRefExpr 0x140029818 <col:23> 'struct tty_struct *' lvalue ParmVar 0x14000e248 'tty' 'struct tty_struct *'     | | |   | `-RecoveryExpr 0x1400298c8 <col:29, col:36> '<dependent type>' contains-errors lvalue     | | |   |   `-DeclRefExpr 0x140029890 <col:29> 'struct n_tty_data *' contains-errors lvalue Var 0x1481233a8 'ldata' 'struct n_tty_data *'     | | |   `-CallExpr 0x140029b18 <line:51:4, col:43> '<dependent type>' contains-errors     | | |     |-DeclRefExpr 0x140029920 <col:4> 'int ()' Function 0x140026600 'set_bit' 'int ()'     | | |     |-CallExpr 0x140029a78 <col:12, col:25> 'int'     | | |     | |-ImplicitCastExpr 0x140029a60 <col:12> 'int (*)()' <FunctionToPointerDecay>     | | |     | | `-DeclRefExpr 0x140029a20 <col:12> 'int ()' Function 0x140029968 'STOP_CHAR' 'int ()'     | | |     | `-ImplicitCastExpr 0x140029aa0 <col:22> 'struct tty_struct *' <LValueToRValue>     | | |     |   `-DeclRefExpr 0x140029a40 <col:22> 'struct tty_struct *' lvalue ParmVar 0x14000e248 'tty' 'struct tty_struct *'     | | |     `-RecoveryExpr 0x140029af0 <col:28, col:35> '<dependent type>' contains-errors lvalue     | | |       `-DeclRefExpr 0x140029ab8 <col:28> 'struct n_tty_data *' contains-errors lvalue Var 0x1481233a8 'ldata' 'struct n_tty_data *'     | | |-IfStmt 0x14002a2c0 <line:53:3, line:57:3>     | | | |-CallExpr 0x140029be0 <line:53:7, col:17> 'int'     | | | | |-ImplicitCastExpr 0x140029bc8 <col:7> 'int (*)()' <FunctionToPointerDecay>     | | | | | `-DeclRefExpr 0x140029b88 <col:7> 'int ()' Function 0x140027798 'L_ISIG' 'int ()'     | | | | `-ImplicitCastExpr 0x140029c08 <col:14> 'struct tty_struct *' <LValueToRValue>     | | | |   `-DeclRefExpr 0x140029ba8 <col:14> 'struct tty_struct *' lvalue ParmVar 0x14000e248 'tty' 'struct tty_struct *'     | | | `-CompoundStmt 0x14002a298 <col:20, line:57:3>     | | |   |-CallExpr 0x140029e18 <line:54:4, col:43> '<dependent type>' contains-errors     | | |   | |-DeclRefExpr 0x140029c20 <col:4> 'int ()' Function 0x140026600 'set_bit' 'int ()'     | | |   | |-CallExpr 0x140029d78 <col:12, col:25> 'int'     | | |   | | |-ImplicitCastExpr 0x140029d60 <col:12> 'int (*)()' <FunctionToPointerDecay>     | | |   | | | `-DeclRefExpr 0x140029d20 <col:12> 'int ()' Function 0x140029c68 'INTR_CHAR' 'int ()'     | | |   | | `-ImplicitCastExpr 0x140029da0 <col:22> 'struct tty_struct *' <LValueToRValue>     | | |   | |   `-DeclRefExpr 0x140029d40 <col:22> 'struct tty_struct *' lvalue ParmVar 0x14000e248 'tty' 'struct tty_struct *'     | | |   | `-RecoveryExpr 0x140029df0 <col:28, col:35> '<dependent type>' contains-errors lvalue     | | |   |   `-DeclRefExpr 0x140029db8 <col:28> 'struct n_tty_data *' contains-errors lvalue Var 0x1481233a8 'ldata' 'struct n_tty_data *'     | | |   |-CallExpr 0x14002a040 <line:55:4, col:43> '<dependent type>' contains-errors     | | |   | |-DeclRefExpr 0x140029e48 <col:4> 'int ()' Function 0x140026600 'set_bit' 'int ()'     | | |   | |-CallExpr 0x140029fa0 <col:12, col:25> 'int'     | | |   | | |-ImplicitCastExpr 0x140029f88 <col:12> 'int (*)()' <FunctionToPointerDecay>     | | |   | | | `-DeclRefExpr 0x140029f48 <col:12> 'int ()' Function 0x140029e90 'QUIT_CHAR' 'int ()'     | | |   | | `-ImplicitCastExpr 0x140029fc8 <col:22> 'struct tty_struct *' <LValueToRValue>     | | |   | |   `-DeclRefExpr 0x140029f68 <col:22> 'struct tty_struct *' lvalue ParmVar 0x14000e248 'tty' 'struct tty_struct *'     | | |   | `-RecoveryExpr 0x14002a018 <col:28, col:35> '<dependent type>' contains-errors lvalue     | | |   |   `-DeclRefExpr 0x140029fe0 <col:28> 'struct n_tty_data *' contains-errors lvalue Var 0x1481233a8 'ldata' 'struct n_tty_data *'     | | |   `-CallExpr 0x14002a268 <line:56:4, col:43> '<dependent type>' contains-errors     | | |     |-DeclRefExpr 0x14002a070 <col:4> 'int ()' Function 0x140026600 'set_bit' 'int ()'     | | |     |-CallExpr 0x14002a1c8 <col:12, col:25> 'int'     | | |     | |-ImplicitCastExpr 0x14002a1b0 <col:12> 'int (*)()' <FunctionToPointerDecay>     | | |     | | `-DeclRefExpr 0x14002a170 <col:12> 'int ()' Function 0x14002a0b8 'SUSP_CHAR' 'int ()'     | | |     | `-ImplicitCastExpr 0x14002a1f0 <col:22> 'struct tty_struct *' <LValueToRValue>     | | |     |   `-DeclRefExpr 0x14002a190 <col:22> 'struct tty_struct *' lvalue ParmVar 0x14000e248 'tty' 'struct tty_struct *'     | | |     `-RecoveryExpr 0x14002a240 <col:28, col:35> '<dependent type>' contains-errors lvalue     | | |       `-DeclRefExpr 0x14002a208 <col:28> 'struct n_tty_data *' contains-errors lvalue Var 0x1481233a8 'ldata' 'struct n_tty_data *'     | | |-BinaryOperator 0x14002a4c0 <line:59:3, col:16> '<dependent type>' contains-errors '='     | | | |-RecoveryExpr 0x14002a478 <col:3, col:10> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x14002a440 <col:3> 'struct n_tty_data *' contains-errors lvalue Var 0x1481233a8 'ldata' 'struct n_tty_data *'     | | | `-IntegerLiteral 0x14002a4a0 <col:16> 'int' 0     | | `-BinaryOperator 0x14002a560 <line:60:3, col:21> '<dependent type>' contains-errors '='     | |   |-RecoveryExpr 0x14002a518 <col:3, col:10> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x14002a4e0 <col:3> 'struct n_tty_data *' contains-errors lvalue Var 0x1481233a8 'ldata' 'struct n_tty_data *'     | |   `-IntegerLiteral 0x14002a540 <col:21> 'int' 0     | `-CompoundStmt 0x14002b058 <line:61:9, line:69:2>     |   |-BinaryOperator 0x14002a660 <line:62:3, col:16> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x14002a618 <col:3, col:10> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x14002a5d0 <col:3> 'struct n_tty_data *' contains-errors lvalue Var 0x1481233a8 'ldata' 'struct n_tty_data *'     |   | `-IntegerLiteral 0x14002a640 <col:16> 'int' 1     |   `-IfStmt 0x14002b028 <line:63:3, line:68:22> has_else     |     |-RecoveryExpr 0x14002aec8 <line:63:7, line:65:48> '_Bool' contains-errors     |     |-BinaryOperator 0x14002af68 <line:66:4, col:22> '<dependent type>' contains-errors '='     |     | |-RecoveryExpr 0x14002af20 <col:4, col:11> '<dependent type>' contains-errors lvalue     |     | | `-DeclRefExpr 0x14002aee8 <col:4> 'struct n_tty_data *' contains-errors lvalue Var 0x1481233a8 'ldata' 'struct n_tty_data *'     |     | `-IntegerLiteral 0x14002af48 <col:22> 'int' 1     |     `-BinaryOperator 0x14002b008 <line:68:4, col:22> '<dependent type>' contains-errors '='     |       |-RecoveryExpr 0x14002afc0 <col:4, col:11> '<dependent type>' contains-errors lvalue     |       | `-DeclRefExpr 0x14002af88 <col:4> 'struct n_tty_data *' contains-errors lvalue Var 0x1481233a8 'ldata' 'struct n_tty_data *'     |       `-IntegerLiteral 0x14002afe8 <col:22> 'int' 0     |-CallExpr 0x14002b1e0 <line:70:2, col:20> 'int'     | |-ImplicitCastExpr 0x14002b1c8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14002b188 <col:2> 'int ()' Function 0x14002b0d0 'n_tty_set_room' 'int ()'     | `-ImplicitCastExpr 0x14002b208 <col:17> 'struct tty_struct *' <LValueToRValue>     |   `-DeclRefExpr 0x14002b1a8 <col:17> 'struct tty_struct *' lvalue ParmVar 0x14000e248 'tty' 'struct tty_struct *'     |-IfStmt 0x14002b770 <line:72:2, line:75:2>     | |-RecoveryExpr 0x14002b418 <line:72:6, col:60> '_Bool' contains-errors     | `-CompoundStmt 0x14002b750 <col:74, line:75:2>     |   |-CallExpr 0x14002b570 <line:73:3, col:16> 'int'     |   | |-ImplicitCastExpr 0x14002b558 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14002b518 <col:3> 'int ()' Function 0x14002b460 'start_tty' 'int ()'     |   | `-ImplicitCastExpr 0x14002b598 <col:13> 'struct tty_struct *' <LValueToRValue>     |   |   `-DeclRefExpr 0x14002b538 <col:13> 'struct tty_struct *' lvalue ParmVar 0x14000e248 'tty' 'struct tty_struct *'     |   `-CallExpr 0x14002b710 <line:74:3, col:21> 'int'     |     |-ImplicitCastExpr 0x14002b6f8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14002b6b8 <col:3> 'int ()' Function 0x14002b600 'process_echoes' 'int ()'     |     `-ImplicitCastExpr 0x14002b738 <col:18> 'struct tty_struct *' <LValueToRValue>     |       `-DeclRefExpr 0x14002b6d8 <col:18> 'struct tty_struct *' lvalue ParmVar 0x14000e248 'tty' 'struct tty_struct *'     |-IfStmt 0x14002bad0 <line:78:2, line:79:41>     | |-CallExpr 0x14002b908 <line:78:6, col:39> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14002b870 <col:6> 'int ()' Function 0x14002b7b8 'waitqueue_active' 'int ()'     | | `-UnaryOperator 0x14002b8f0 <col:23, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x14002b8c8 <col:24, col:29> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x14002b890 <col:24> 'struct tty_struct *' lvalue ParmVar 0x14000e248 'tty' 'struct tty_struct *'     | `-CallExpr 0x14002baa8 <line:79:3, col:41> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14002ba10 <col:3> 'int ()' Function 0x14002b958 'wake_up_interruptible' 'int ()'     |   `-UnaryOperator 0x14002ba90 <col:25, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x14002ba68 <col:26, col:31> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14002ba30 <col:26> 'struct tty_struct *' lvalue ParmVar 0x14000e248 'tty' 'struct tty_struct *'     `-IfStmt 0x14002bc70 <line:80:2, line:81:40>       |-CallExpr 0x14002bb88 <line:80:6, col:38> '<dependent type>' contains-errors       | |-DeclRefExpr 0x14002baf0 <col:6> 'int ()' Function 0x14002b7b8 'waitqueue_active' 'int ()'       | `-UnaryOperator 0x14002bb70 <col:23, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow       |   `-RecoveryExpr 0x14002bb48 <col:24, col:29> '<dependent type>' contains-errors lvalue       |     `-DeclRefExpr 0x14002bb10 <col:24> 'struct tty_struct *' lvalue ParmVar 0x14000e248 'tty' 'struct tty_struct *'       `-CallExpr 0x14002bc48 <line:81:3, col:40> '<dependent type>' contains-errors         |-DeclRefExpr 0x14002bbb0 <col:3> 'int ()' Function 0x14002b958 'wake_up_interruptible' 'int ()'         `-UnaryOperator 0x14002bc30 <col:25, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow           `-RecoveryExpr 0x14002bc08 <col:26, col:31> '<dependent type>' contains-errors lvalue             `-DeclRefExpr 0x14002bbd0 <col:26> 'struct tty_struct *' lvalue ParmVar 0x14000e248 'tty' 'struct tty_struct *' ","20668":"`-FunctionDecl 0x1271281c8  line:1:1 referenced invalid _copyAlterDatabaseStmt 'int (const int *)'   |-ParmVarDecl 0x1271280f0 <col:24, col:49> col:49 invalid from 'const int *'   `-CompoundStmt 0x1271418d0 <line:2:1, line:9:1>     |-BinaryOperator 0x127128558 <line:3:2, col:57> '<dependent type>' contains-errors '='     | |-BinaryOperator 0x1271284f0 <col:2, col:21> '<dependent type>' contains-errors '*'     | | |-RecoveryExpr 0x127128298 <col:2> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x127128278 <col:2> 'int (const int *)' Function 0x1271281c8 '_copyAlterDatabaseStmt' 'int (const int *)'     | | `-RecoveryExpr 0x1271284d0 <col:21> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x127128530 <col:31, col:57> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x127128450 <col:31> 'int ()' Function 0x127128398 'makeNode' 'int ()'     |   `-RecoveryExpr 0x127128510 <col:40> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1271286d8 <line:5:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x127128658 <col:2> 'int ()' Function 0x1271285a0 'COPY_STRING_FIELD' 'int ()'     | `-RecoveryExpr 0x1271286b8 <col:20> '<dependent type>' contains-errors lvalue     |-CallExpr 0x127141860 <line:6:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1271287e0 <col:2> 'int ()' Function 0x127128728 'COPY_NODE_FIELD' 'int ()'     | `-RecoveryExpr 0x127141840 <col:18> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1271418c0 <line:8:2, col:9>       `-RecoveryExpr 0x1271418a0 <col:9> '<dependent type>' contains-errors lvalue ","20588":"`-FunctionDecl 0x14982b638  line:1:23 invalid ext4_init_io_end 'int *(struct inode *, int)' static   |-ParmVarDecl 0x14980e268 <col:41, col:55> col:55 used inode 'struct inode *'   |-ParmVarDecl 0x14980e2e8 <col:62, col:68> col:68 invalid flags 'int'   `-CompoundStmt 0x14982bf50 <line:2:1, line:19:1>     `-IfStmt 0x14982bf30 <line:7:2, line:16:2>       |-RecoveryExpr 0x14982b920 <line:7:6> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x14982bf10 <col:10, line:16:2>         |-CallExpr 0x14982baa8 <line:8:3, col:14> 'int'         | |-ImplicitCastExpr 0x14982ba90 <col:3> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x14982ba20 <col:3> 'int ()' Function 0x14982b968 'igrab' 'int ()'         | `-ImplicitCastExpr 0x14982bad0 <col:9> 'struct inode *' <LValueToRValue>         |   `-DeclRefExpr 0x14982ba40 <col:9> 'struct inode *' lvalue ParmVar 0x14980e268 'inode' 'struct inode *'         `-CallExpr 0x14982bde0 <line:14:3, col:40> '<dependent type>' contains-errors           |-DeclRefExpr 0x14982bc60 <col:3> 'int ()' Function 0x14982bba8 'INIT_WORK' 'int ()'           |-UnaryOperator 0x14982bda8 <col:13, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow           | `-CXXDependentScopeMemberExpr 0x14982bd60 <col:14, col:18> '<dependent type>' contains-errors lvalue ->work           |   `-RecoveryExpr 0x14982bd40 <col:14> '<dependent type>' contains-errors lvalue           `-RecoveryExpr 0x14982bdc0 <col:24> '<dependent type>' contains-errors lvalue ","20970":"`-FunctionDecl 0x142928750  line:1:13 slcan_write_wakeup 'void (struct tty_struct *)' static   |-ParmVarDecl 0x142928648 <col:32, col:51> col:51 used tty 'struct tty_struct *'   `-CompoundStmt 0x142940ea0 <line:2:1, line:6:1>     |-DeclStmt 0x142940c98 <line:3:2, col:35>     | |-RecordDecl 0x142940a48 <col:2, col:9> col:9 struct slcan     | `-VarDecl 0x142940bb8 <col:2, col:26> col:16 used sl 'struct slcan *' cinit     |   `-RecoveryExpr 0x142940c58 <col:21, col:26> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x142940c20 <col:21> 'struct tty_struct *' lvalue ParmVar 0x142928648 'tty' 'struct tty_struct *'     `-CallExpr 0x142940e78 <line:5:2, col:28> '<dependent type>' contains-errors       |-DeclRefExpr 0x142940de0 <col:2> 'int ()' Function 0x142940d28 'schedule_work' 'int ()'       `-UnaryOperator 0x142940e60 <col:16, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x142940e38 <col:17, col:21> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x142940e00 <col:17> 'struct slcan *' contains-errors lvalue Var 0x142940bb8 'sl' 'struct slcan *' ","20850":"`-FunctionDecl 0x13900e350  line:1:13 rtrs_clt_dev_release 'void (struct device *)' static   |-ParmVarDecl 0x13900e248 <col:34, col:49> col:49 used dev 'struct device *'   `-CompoundStmt 0x139026b88 <line:2:1, line:7:1>     |-DeclStmt 0x1390269c8 <line:3:2, line:4:12>     | |-RecordDecl 0x139026648 <line:3:2, col:9> col:9 struct rtrs_clt_sess     | `-VarDecl 0x1390267b8 <col:2, col:24> col:24 used clt 'struct rtrs_clt_sess *'     `-CallExpr 0x139026b48 <line:6:2, col:11> 'int'       |-ImplicitCastExpr 0x139026b30 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x139026ac0 <col:2> 'int ()' Function 0x139026a08 'kfree' 'int ()'       `-ImplicitCastExpr 0x139026b70 <col:8> 'struct rtrs_clt_sess *' <LValueToRValue>         `-DeclRefExpr 0x139026ae0 <col:8> 'struct rtrs_clt_sess *' lvalue Var 0x1390267b8 'clt' 'struct rtrs_clt_sess *' ","21189":"`-FunctionDecl 0x141928750  line:1:13 scrub_put_ctx 'void (struct scrub_ctx *)' static   |-ParmVarDecl 0x141928648 <col:27, col:45> col:45 used sctx 'struct scrub_ctx *'   `-CompoundStmt 0x141940df8 <line:2:1, line:5:1>     `-IfStmt 0x141940dd8 <line:3:2, line:4:22>       |-CallExpr 0x141940c08 <line:3:6, col:39> '<dependent type>' contains-errors       | |-DeclRefExpr 0x141940b70 <col:6> 'int ()' Function 0x141940ab8 'refcount_dec_and_test' 'int ()'       | `-UnaryOperator 0x141940bf0 <col:28, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow       |   `-RecoveryExpr 0x141940bc8 <col:29, col:35> '<dependent type>' contains-errors lvalue       |     `-DeclRefExpr 0x141940b90 <col:29> 'struct scrub_ctx *' lvalue ParmVar 0x141928648 'sctx' 'struct scrub_ctx *'       `-CallExpr 0x141940d98 <line:4:3, col:22> 'int'         |-ImplicitCastExpr 0x141940d80 <col:3> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x141940d10 <col:3> 'int ()' Function 0x141940c58 'scrub_free_ctx' 'int ()'         `-ImplicitCastExpr 0x141940dc0 <col:18> 'struct scrub_ctx *' <LValueToRValue>           `-DeclRefExpr 0x141940d30 <col:18> 'struct scrub_ctx *' lvalue ParmVar 0x141928648 'sctx' 'struct scrub_ctx *' ","20561":"`-FunctionDecl 0x143928288  line:1:19 invalid skcipher_get_spot 'int *(int *, unsigned int)' static inline   |-ParmVarDecl 0x143928128 <col:37, col:41> col:41 invalid start 'int *'   |-ParmVarDecl 0x1439281a8 <col:48, col:61> col:61 used len 'unsigned int'   `-CompoundStmt 0x143928788 <line:2:1, line:6:1>     `-ReturnStmt 0x143928778 <line:5:2, col:28>       `-CallExpr 0x143928748 <col:9, col:28> '<dependent type>' contains-errors         |-DeclRefExpr 0x1439286a0 <col:9> 'int ()' Function 0x1439285e8 'max' 'int ()'         |-RecoveryExpr 0x1439286c0 <col:13> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x143928728 <col:20> '<dependent type>' contains-errors lvalue ","20589":"`-FunctionDecl 0x13100e008  line:1:1 invalid gdk_pixbuf_new 'int (int, int, int, int, int)'   |-ParmVarDecl 0x13100dcf0 <col:17, col:31> col:31 invalid colorspace 'int'   |-ParmVarDecl 0x13100dd70 <line:2:17, col:31> col:31 invalid has_alpha 'int'   |-ParmVarDecl 0x13100ddf0 <line:3:17, col:31> col:31 used bits_per_sample 'int'   |-ParmVarDecl 0x13100de70 <line:4:17, col:31> col:31 used width 'int'   |-ParmVarDecl 0x13100def0 <line:5:17, col:31> col:31 used height 'int'   `-CompoundStmt 0x131029108 <line:6:1, line:36:1>     |-DeclStmt 0x13100e158 <line:7:2, col:13>     | `-VarDecl 0x13100e0f0 <col:2, col:10> col:10 used buf 'char *'     |-DeclStmt 0x13100e1f0 <line:8:2, col:14>     | `-VarDecl 0x13100e188 <col:2, col:6> col:6 used channels 'int'     |-DeclStmt 0x13100e288 <line:9:2, col:15>     | `-VarDecl 0x13100e220 <col:2, col:6> col:6 used rowstride 'int'     |-CallExpr 0x131027520 <line:12:2, col:62> '<dependent type>' contains-errors     | |-DeclRefExpr 0x131027400 <col:2> 'int ()' Function 0x13100e348 'g_return_val_if_fail' 'int ()'     | |-BinaryOperator 0x1310274e0 <col:24, col:38> 'int' contains-errors '=='     | | |-RecoveryExpr 0x131027420 <col:24> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1310274c0 <col:38> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x131027500 <col:58> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1310276c0 <line:13:2, col:50> '<dependent type>' contains-errors     | |-DeclRefExpr 0x131027550 <col:2> 'int ()' Function 0x13100e348 'g_return_val_if_fail' 'int ()'     | |-BinaryOperator 0x131027680 <col:24, col:43> 'int' '=='     | | |-ImplicitCastExpr 0x131027668 <col:24> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x131027570 <col:24> 'int' lvalue ParmVar 0x13100ddf0 'bits_per_sample' 'int'     | | `-IntegerLiteral 0x131027590 <col:43> 'int' 8     | `-RecoveryExpr 0x1310276a0 <col:46> '<dependent type>' contains-errors lvalue     |-CallExpr 0x131027860 <line:14:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1310276f0 <col:2> 'int ()' Function 0x13100e348 'g_return_val_if_fail' 'int ()'     | |-BinaryOperator 0x131027820 <col:24, col:32> 'int' '>'     | | |-ImplicitCastExpr 0x131027808 <col:24> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x131027710 <col:24> 'int' lvalue ParmVar 0x13100de70 'width' 'int'     | | `-IntegerLiteral 0x131027730 <col:32> 'int' 0     | `-RecoveryExpr 0x131027840 <col:35> '<dependent type>' contains-errors lvalue     |-CallExpr 0x131027a00 <line:15:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x131027890 <col:2> 'int ()' Function 0x13100e348 'g_return_val_if_fail' 'int ()'     | |-BinaryOperator 0x1310279c0 <col:24, col:33> 'int' '>'     | | |-ImplicitCastExpr 0x1310279a8 <col:24> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x1310278b0 <col:24> 'int' lvalue ParmVar 0x13100def0 'height' 'int'     | | `-IntegerLiteral 0x1310278d0 <col:33> 'int' 0     | `-RecoveryExpr 0x1310279e0 <col:36> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x131027ae0 <line:17:2, col:29> 'int' contains-errors '='     | |-DeclRefExpr 0x131027a30 <col:2> 'int' lvalue Var 0x13100e188 'channels' 'int'     | `-ConditionalOperator 0x131027ab0 <col:13, col:29> '<dependent type>' contains-errors     |   |-RecoveryExpr 0x131027a50 <col:13> '<dependent type>' contains-errors lvalue     |   |-IntegerLiteral 0x131027a70 <col:25> 'int' 4     |   `-IntegerLiteral 0x131027a90 <col:29> 'int' 3     |-BinaryOperator 0x131027bb0 <line:18:9, col:29> 'int' '='     | |-DeclRefExpr 0x131027b00 <col:9> 'int' lvalue Var 0x13100e220 'rowstride' 'int'     | `-BinaryOperator 0x131027b90 <col:21, col:29> 'int' '*'     |   |-ImplicitCastExpr 0x131027b60 <col:21> 'int' <LValueToRValue>     |   | `-DeclRefExpr 0x131027b20 <col:21> 'int' lvalue ParmVar 0x13100de70 'width' 'int'     |   `-ImplicitCastExpr 0x131027b78 <col:29> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x131027b40 <col:29> 'int' lvalue Var 0x13100e188 'channels' 'int'     |-IfStmt 0x131027dd8 <line:19:9, line:20:24>     | |-BinaryOperator 0x131027d70 <line:19:13, col:62> 'int' '||'     | | |-BinaryOperator 0x131027c98 <col:13, col:37> 'int' '!='     | | | |-BinaryOperator 0x131027c40 <col:13, col:25> 'int' '\/'     | | | | |-ImplicitCastExpr 0x131027c10 <col:13> 'int' <LValueToRValue>     | | | | | `-DeclRefExpr 0x131027bd0 <col:13> 'int' lvalue Var 0x13100e220 'rowstride' 'int'     | | | | `-ImplicitCastExpr 0x131027c28 <col:25> 'int' <LValueToRValue>     | | | |   `-DeclRefExpr 0x131027bf0 <col:25> 'int' lvalue Var 0x13100e188 'channels' 'int'     | | | `-ImplicitCastExpr 0x131027c80 <col:37> 'int' <LValueToRValue>     | | |   `-DeclRefExpr 0x131027c60 <col:37> 'int' lvalue ParmVar 0x13100de70 'width' 'int'     | | `-BinaryOperator 0x131027d50 <col:46, col:62> 'int' '<'     | |   |-BinaryOperator 0x131027d10 <col:46, col:58> 'int' '+'     | |   | |-ImplicitCastExpr 0x131027cf8 <col:46> 'int' <LValueToRValue>     | |   | | `-DeclRefExpr 0x131027cb8 <col:46> 'int' lvalue Var 0x13100e220 'rowstride' 'int'     | |   | `-IntegerLiteral 0x131027cd8 <col:58> 'int' 3     | |   `-IntegerLiteral 0x131027d30 <col:62> 'int' 0     | `-ReturnStmt 0x131027dc8 <line:20:17, col:24>     |   `-RecoveryExpr 0x131027da8 <col:24> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x131027f08 <line:23:2, col:33> 'int' '='     | |-DeclRefExpr 0x131027df8 <col:2> 'int' lvalue Var 0x13100e220 'rowstride' 'int'     | `-BinaryOperator 0x131027ee8 <col:14, col:33> 'int' '&'     |   |-ParenExpr 0x131027e90 <col:14, col:28> 'int'     |   | `-BinaryOperator 0x131027e70 <col:15, col:27> 'int' '+'     |   |   |-ImplicitCastExpr 0x131027e58 <col:15> 'int' <LValueToRValue>     |   |   | `-DeclRefExpr 0x131027e18 <col:15> 'int' lvalue Var 0x13100e220 'rowstride' 'int'     |   |   `-IntegerLiteral 0x131027e38 <col:27> 'int' 3     |   `-UnaryOperator 0x131027ed0 <col:32, col:33> 'int' prefix '~' cannot overflow     |     `-IntegerLiteral 0x131027eb0 <col:33> 'int' 3     |-IfStmt 0x1310280f8 <line:26:9, line:27:24>     | |-BinaryOperator 0x131028090 <line:26:13, col:35> 'int' contains-errors '!='     | | |-BinaryOperator 0x131028070 <col:13, col:21> '<dependent type>' contains-errors '\/'     | | | |-RecoveryExpr 0x131028050 <col:13> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x131027fd0 <col:21> 'int' lvalue Var 0x13100e220 'rowstride' 'int'     | | `-DeclRefExpr 0x131028010 <col:35> 'int' lvalue ParmVar 0x13100def0 'height' 'int'     | `-ReturnStmt 0x1310280e8 <line:27:17, col:24>     |   `-RecoveryExpr 0x1310280c8 <col:24> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1310282e0 <line:29:2, col:27> 'char *' contains-errors '='     | |-DeclRefExpr 0x131028118 <col:2> 'char *' lvalue Var 0x13100e0f0 'buf' 'char *'     | `-CallExpr 0x1310282b8 <col:8, col:27> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x131028218 <col:8> 'int ()' Function 0x131028160 'g_try_malloc' 'int ()'     |   `-RecoveryExpr 0x131028298 <col:22> '<dependent type>' contains-errors lvalue     |-IfStmt 0x131028398 <line:30:2, line:31:10>     | |-UnaryOperator 0x131028338 <line:30:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x131028320 <col:7> 'char *' <LValueToRValue>     | |   `-DeclRefExpr 0x131028300 <col:7> 'char *' lvalue Var 0x13100e0f0 'buf' 'char *'     | `-ReturnStmt 0x131028388 <line:31:3, col:10>     |   `-RecoveryExpr 0x131028368 <col:10> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1310290f8 <line:33:2, line:35:24>       `-CallExpr 0x131029090 <line:33:9, line:35:24> '<dependent type>' contains-errors         |-DeclRefExpr 0x131028eb8 <line:33:9> 'int ()' Function 0x131028e00 'gdk_pixbuf_new_from_data' 'int ()'         |-DeclRefExpr 0x131028ed8 <col:35> 'char *' lvalue Var 0x13100e0f0 'buf' 'char *'         |-RecoveryExpr 0x131028ef8 <col:40> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x131028f18 <col:52> '<dependent type>' contains-errors lvalue         |-DeclRefExpr 0x131028f38 <col:63> 'int' lvalue ParmVar 0x13100ddf0 'bits_per_sample' 'int'         |-DeclRefExpr 0x131028f58 <line:34:7> 'int' lvalue ParmVar 0x13100de70 'width' 'int'         |-DeclRefExpr 0x131028f78 <col:14> 'int' lvalue ParmVar 0x13100def0 'height' 'int'         |-DeclRefExpr 0x131028f98 <col:22> 'int' lvalue Var 0x13100e220 'rowstride' 'int'         |-RecoveryExpr 0x131029050 <line:35:7> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x131029070 <col:20> '<dependent type>' contains-errors lvalue ","20621":"`-FunctionDecl 0x15b928238  line:1:1 TEST_P 'int (int, int)'   |-ParmVarDecl 0x15b928158 <col:8> col:8 Security 'int'   |-ParmVarDecl 0x15b9280d8 <col:18> col:18 BuiltinAuthenticationAndAccessAndCryptoPlugin_PermissionsEnableDiscoveryDisableAccessEncrypt_validation_ok_enable_discovery_enable_access_none 'int'   `-CompoundStmt 0x15b940a90 <line:3:1, line:9:1>     |-RecoveryExpr 0x15b928668 <line:6:5> '<dependent type>' contains-errors lvalue     `-CallExpr 0x15b940a58 <line:8:5, col:115> '<dependent type>' contains-errors       |-DeclRefExpr 0x15b928768 <col:5> 'int ()' Function 0x15b9286b0 'BuiltinAuthenticationAndAccessAndCryptoPlugin_Permissions_validation_ok_common' 'int ()'       |-DeclRefExpr 0x15b928788 <col:84> 'int ()' Function 0x15b9283c8 'reader' 'int ()'       |-DeclRefExpr 0x15b9287a8 <col:92> 'int ()' Function 0x15b928520 'writer' 'int ()'       `-RecoveryExpr 0x15b940a38 <col:100> '<dependent type>' contains-errors lvalue ","21194":"`-FunctionDecl 0x13180de38  line:1:1 TEST_F 'int (int, int)'   |-ParmVarDecl 0x13180dd58 <col:8> col:8 used HttpConnectionManagerConfigTest 'int'   |-ParmVarDecl 0x13180dcd8 <col:41> col:41 NormalizePathDefault 'int'   `-CompoundStmt 0x132809210 <col:63, line:22:1>     |-ImplicitCastExpr 0x13180df70 <line:13:3> 'int' <LValueToRValue>     | `-DeclRefExpr 0x13180df50 <col:3> 'int' lvalue ParmVar 0x13180dd58 'HttpConnectionManagerConfigTest' 'int'     |-CallExpr 0x132808c00 <col:31, line:16:69> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13180e0a0 <line:13:31> 'int ()' Function 0x13180dfe8 'config' 'int ()'     | |-CallExpr 0x13180e308 <col:38, col:84> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x13180e1a0 <col:38> 'int ()' Function 0x13180e0e8 'parseHttpConnectionManagerFromYaml' 'int ()'     | | `-RecoveryExpr 0x13180e2e8 <col:73> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x13180e330 <col:87> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x13180e350 <line:14:38> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x13180e370 <col:54> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x13180e390 <line:15:38> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x13180e3b0 <col:78> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x13180e3d0 <line:16:38> '<dependent type>' contains-errors lvalue     `-CallExpr 0x1328091e8 <line:20:3, col:44> '<dependent type>' contains-errors       |-DeclRefExpr 0x132808d38 <col:3> 'int ()' Function 0x132808c80 'EXPECT_FALSE' 'int ()'       `-CallExpr 0x1328091c8 <col:16, col:43> '<dependent type>' contains-errors         `-RecoveryExpr 0x1328091a0 <col:16, col:23> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x132808d58 <col:16> 'int ()' Function 0x13180dfe8 'config' 'int ()' ","20906":"`-FunctionDecl 0x10580dda8  line:3:1 PHP_RINIT_FUNCTION 'int (int)'   |-ParmVarDecl 0x10580dcd8 <col:20> col:20 date 'int'   `-CompoundStmt 0x105828608 <line:4:1, line:10:28>     |-IfStmt 0x10580e288 <line:5:2, line:7:2>     | |-CallExpr 0x10580e050 <line:5:6, col:20> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x10580dfd0 <col:6> 'int ()' Function 0x10580df18 'DATEG' 'int ()'     | | `-RecoveryExpr 0x10580e030 <col:12> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x10580e270 <col:23, line:7:2>     |   `-CallExpr 0x10580e248 <line:6:3, col:24> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x10580e158 <col:3> 'int ()' Function 0x10580e0a0 'efree' 'int ()'     |     `-CallExpr 0x10580e220 <col:9, col:23> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x10580e178 <col:9> 'int ()' Function 0x10580df18 'DATEG' 'int ()'     |       `-RecoveryExpr 0x10580e200 <col:15> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x10580e3a8 <line:8:2, col:20> '<dependent type>' contains-errors '='     | |-CallExpr 0x10580e360 <col:2, col:16> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x10580e2a8 <col:2> 'int ()' Function 0x10580df18 'DATEG' 'int ()'     | | `-RecoveryExpr 0x10580e340 <col:8> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x10580e388 <col:20> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1058284c8 <line:9:2, col:19> '<dependent type>' contains-errors '='     | |-CallExpr 0x105828480 <col:2, col:15> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x10580e3c8 <col:2> 'int ()' Function 0x10580df18 'DATEG' 'int ()'     | | `-RecoveryExpr 0x105828460 <col:8> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1058284a8 <col:19> '<dependent type>' contains-errors lvalue     `-BinaryOperator 0x1058285e8 <line:10:2, col:23> '<dependent type>' contains-errors '='       |-CallExpr 0x1058285a0 <col:2, col:19> '<dependent type>' contains-errors       | |-DeclRefExpr 0x1058284e8 <col:2> 'int ()' Function 0x10580df18 'DATEG' 'int ()'       | `-RecoveryExpr 0x105828580 <col:8> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x1058285c8 <col:23> '<dependent type>' contains-errors lvalue ","20393":"`-FunctionDecl 0x14b928438  line:1:5 invalid ASN1_verify 'int (int *, int *, int *, char *, int *)'   |-ParmVarDecl 0x14b928128 <col:17, col:30> col:30 referenced invalid i2d 'int *'   |-ParmVarDecl 0x14b9281a8 <col:35, col:47> col:47 invalid a 'int *'   |-ParmVarDecl 0x14b928228 <col:50, col:67> col:67 invalid signature 'int *'   |-ParmVarDecl 0x14b9282a8 <line:2:3, col:9> col:9 used data 'char *'   |-ParmVarDecl 0x14b928328 <col:15, col:25> col:25 invalid pkey 'int *'   `-CompoundStmt 0x14b946048 <line:3:2, line:52:2>     |-DeclStmt 0x14b928588 <line:5:2, col:20>     | `-VarDecl 0x14b928520 <col:2, col:16> col:16 referenced invalid type 'const int *'     |-DeclStmt 0x14b928720 <line:6:2, col:31>     | |-VarDecl 0x14b9285e8 <col:2, col:17> col:17 used p 'unsigned char *'     | `-VarDecl 0x14b928668 <col:2, col:27> col:20 used buf_in 'unsigned char *' cinit     |   `-RecoveryExpr 0x14b9286e8 <col:27> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x14b941920 <line:7:2, col:19>     | |-VarDecl 0x14b928750 <col:2, col:12> col:6 used ret 'int' cinit     | | `-UnaryOperator 0x14b9287d8 <col:11, col:12> 'int' prefix '-'     | |   `-IntegerLiteral 0x14b9287b8 <col:12> 'int' 1     | |-VarDecl 0x14b941818 <col:2, col:14> col:14 used i 'int'     | `-VarDecl 0x14b941898 <col:2, col:16> col:16 used inl 'int'     |-CallExpr 0x14b941b40 <line:9:2, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b941a90 <col:2> 'int ()' Function 0x14b9419d8 'EVP_MD_CTX_init' 'int ()'     | `-UnaryOperator 0x14b941b28 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14b941b08 <col:19> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14b941d18 <line:10:2, col:28> 'int' contains-errors '='     | |-DeclRefExpr 0x14b941b68 <col:2> 'int' lvalue Var 0x14b941818 'i' 'int'     | `-CallExpr 0x14b941cf0 <col:4, col:28> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14b941c68 <col:4> 'int ()' Function 0x14b941bb0 'OBJ_obj2nid' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x14b941ca8 <col:16, col:19> '<dependent type>' contains-errors lvalue ->algorithm     |     `-RecoveryExpr 0x14b941c88 <col:16> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14b942068 <line:11:2, col:41> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14b941d58 <col:2> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14b941d38 <col:2> 'const int *' lvalue Var 0x14b928520 'type' 'const int *'     | `-CallExpr 0x14b942040 <col:7, col:41> 'int'     |   |-ImplicitCastExpr 0x14b942028 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14b941e60 <col:7> 'int ()' Function 0x14b941da8 'EVP_get_digestbyname' 'int ()'     |   `-CallExpr 0x14b941fe8 <col:28, col:40> 'int'     |     |-ImplicitCastExpr 0x14b941fd0 <col:28> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14b941f60 <col:28> 'int ()' Function 0x14b941ea8 'OBJ_nid2sn' 'int ()'     |     `-ImplicitCastExpr 0x14b942010 <col:39> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x14b941f80 <col:39> 'int' lvalue Var 0x14b941818 'i' 'int'     |-IfStmt 0x14b942378 <line:12:2, line:16:3>     | |-BinaryOperator 0x14b942100 <line:12:6, col:14> 'int' contains-errors '=='     | | |-RecoveryExpr 0x14b942088 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14b9420e0 <col:14> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14b942358 <line:13:3, line:16:3>     |   |-CallExpr 0x14b9422c0 <line:14:3, col:69> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14b942200 <col:3> 'int ()' Function 0x14b942148 'ASN1err' 'int ()'     |   | |-RecoveryExpr 0x14b942280 <col:11> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x14b9422a0 <col:30> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x14b942340 <line:15:3, col:8> 'err' 0x14b9422f0     |-BinaryOperator 0x14b9424b0 <line:18:2, col:19> 'int' contains-errors '='     | |-DeclRefExpr 0x14b942398 <col:2> 'int' lvalue Var 0x14b941898 'inl' 'int'     | `-CallExpr 0x14b942480 <col:6, col:19> '<dependent type>' contains-errors     |   |-RecoveryExpr 0x14b9423b8 <col:6> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x14b9423d8 <col:10> 'char *' lvalue ParmVar 0x14b9282a8 'data' 'char *'     |   `-RecoveryExpr 0x14b942460 <col:15> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14b944900 <line:19:2, col:41> 'unsigned char *' contains-errors '='     | |-DeclRefExpr 0x14b9424d0 <col:2> 'unsigned char *' contains-errors lvalue Var 0x14b928668 'buf_in' 'unsigned char *'     | `-ImplicitCastExpr 0x14b9426a8 <col:9, col:41> 'unsigned char *' <IntegralToPointer>     |   `-CallExpr 0x14b942680 <col:9, col:41> 'int'     |     |-ImplicitCastExpr 0x14b942668 <col:9> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14b9425d0 <col:9> 'int ()' Function 0x14b942518 'OPENSSL_malloc' 'int ()'     |     `-CStyleCastExpr 0x14b942640 <col:24, col:38> 'unsigned int' <IntegralCast>     |       `-ImplicitCastExpr 0x14b942628 <col:38> 'int' <LValueToRValue> part_of_explicit_cast     |         `-DeclRefExpr 0x14b9425f0 <col:38> 'int' lvalue Var 0x14b941898 'inl' 'int'     |-IfStmt 0x14b944a08 <line:20:2, line:24:3>     | |-BinaryOperator 0x14b944998 <line:20:6, col:16> 'int' contains-errors '=='     | | |-DeclRefExpr 0x14b944920 <col:6> 'unsigned char *' contains-errors lvalue Var 0x14b928668 'buf_in' 'unsigned char *'     | | `-RecoveryExpr 0x14b944978 <col:16> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14b9449f0 <line:21:3, line:24:3>     |   `-GotoStmt 0x14b9449d8 <line:23:3, col:8> 'err' 0x14b9422f0     |-BinaryOperator 0x14b944a80 <line:25:2, col:4> 'unsigned char *' contains-errors '='     | |-DeclRefExpr 0x14b944a28 <col:2> 'unsigned char *' lvalue Var 0x14b9285e8 'p' 'unsigned char *'     | `-ImplicitCastExpr 0x14b944a68 <col:4> 'unsigned char *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x14b944a48 <col:4> 'unsigned char *' contains-errors lvalue Var 0x14b928668 'buf_in' 'unsigned char *'     |-CallExpr 0x14b944b78 <line:27:2, col:13> '<dependent type>' contains-errors     | |-RecoveryExpr 0x14b944ac0 <col:2> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14b944aa0 <col:2> 'int *' lvalue ParmVar 0x14b928128 'i2d' 'int *'     | |-DeclRefExpr 0x14b944ae8 <col:6> 'char *' lvalue ParmVar 0x14b9282a8 'data' 'char *'     | `-UnaryOperator 0x14b944b60 <col:11, col:12> 'unsigned char **' prefix '&' cannot overflow     |   `-DeclRefExpr 0x14b944b08 <col:12> 'unsigned char *' lvalue Var 0x14b9285e8 'p' 'unsigned char *'     |-IfStmt 0x14b944f38 <line:28:2, line:34:3>     | |-RecoveryExpr 0x14b944e60 <line:28:6, line:29:56> '_Bool' contains-errors     | `-CompoundStmt 0x14b944f18 <line:30:3, line:34:3>     |   |-BinaryOperator 0x14b944ee0 <line:32:3, col:7> 'int' '='     |   | |-DeclRefExpr 0x14b944ea0 <col:3> 'int' lvalue Var 0x14b928750 'ret' 'int'     |   | `-IntegerLiteral 0x14b944ec0 <col:7> 'int' 0     |   `-GotoStmt 0x14b944f00 <line:33:3, col:8> 'err' 0x14b9422f0     |-CallExpr 0x14b945108 <line:36:2, col:42> 'int' contains-errors     | |-ImplicitCastExpr 0x14b9450f0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14b945038 <col:2> 'int ()' Function 0x14b944f80 'OPENSSL_cleanse' 'int ()'     | |-ImplicitCastExpr 0x14b945138 <col:18> 'unsigned char *' contains-errors <LValueToRValue>     | | `-DeclRefExpr 0x14b945058 <col:18> 'unsigned char *' contains-errors lvalue Var 0x14b928668 'buf_in' 'unsigned char *'     | `-CStyleCastExpr 0x14b9450c8 <col:25, col:39> 'unsigned int' <IntegralCast>     |   `-ImplicitCastExpr 0x14b9450b0 <col:39> 'int' <LValueToRValue> part_of_explicit_cast     |     `-DeclRefExpr 0x14b945078 <col:39> 'int' lvalue Var 0x14b941898 'inl' 'int'     |-CallExpr 0x14b945288 <line:37:2, col:21> 'int' contains-errors     | |-ImplicitCastExpr 0x14b945270 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14b945230 <col:2> 'int ()' Function 0x14b945178 'OPENSSL_free' 'int ()'     | `-ImplicitCastExpr 0x14b9452b0 <col:15> 'unsigned char *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x14b945250 <col:15> 'unsigned char *' contains-errors lvalue Var 0x14b928668 'buf_in' 'unsigned char *'     |-IfStmt 0x14b945e38 <line:39:2, line:45:3>     | |-RecoveryExpr 0x14b945558 <line:39:6, line:40:45> '_Bool' contains-errors     | `-CompoundStmt 0x14b945e18 <line:41:3, line:45:3>     |   |-BinaryOperator 0x14b9455d8 <line:43:3, col:7> 'int' '='     |   | |-DeclRefExpr 0x14b945598 <col:3> 'int' lvalue Var 0x14b928750 'ret' 'int'     |   | `-IntegerLiteral 0x14b9455b8 <col:7> 'int' 0     |   `-GotoStmt 0x14b945e00 <line:44:3, col:8> 'err' 0x14b9422f0     |-BinaryOperator 0x14b945e98 <line:48:2, col:6> 'int' '='     | |-DeclRefExpr 0x14b945e58 <col:2> 'int' lvalue Var 0x14b928750 'ret' 'int'     | `-IntegerLiteral 0x14b945e78 <col:6> 'int' 1     |-LabelStmt 0x14b945fc0 <line:49:1, col:4> 'err'     | `-NullStmt 0x14b945fb8 <col:4>     `-ReturnStmt 0x14b946038 <line:51:2, col:12>       `-ImplicitCastExpr 0x14b946020 <col:8, col:12> 'int' <LValueToRValue>         `-ParenExpr 0x14b946000 <col:8, col:12> 'int' lvalue           `-DeclRefExpr 0x14b945fe0 <col:9> 'int' lvalue Var 0x14b928750 'ret' 'int' ","20404":"`-FunctionDecl 0x133128358  line:1:6 invalid qemu_chr_fe_init 'int (int *, int *, int **)'   |-ParmVarDecl 0x133128128 <col:23, col:36> col:36 referenced invalid b 'int *'   |-ParmVarDecl 0x1331281a8 <col:39, col:56> col:56 invalid s 'int *'   |-ParmVarDecl 0x133128260 <col:59, col:67> col:67 invalid errp 'int **'   `-CompoundStmt 0x134009e48 <line:2:1, line:16:1>     |-DeclStmt 0x1331284b8 <line:3:5, col:16>     | `-VarDecl 0x133128430 <col:5, col:15> col:9 used tag 'int' cinit     |   `-IntegerLiteral 0x133128498 <col:15> 'int' 0     |-IfStmt 0x134009c40 <line:5:5, line:10:5>     | |-CXXDependentScopeMemberExpr 0x1331284f0 <line:5:9, col:12> '<dependent type>' contains-errors lvalue ->is_mux     | | `-RecoveryExpr 0x1331284d0 <col:9> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x134009c20 <col:20, line:10:5>     |   |-BinaryOperator 0x133128740 <line:6:9, col:46> 'int' contains-errors '='     |   | |-DeclRefExpr 0x133128538 <col:9> 'int' lvalue Var 0x133128430 'tag' 'int'     |   | `-CallExpr 0x133128710 <col:15, col:46> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x1331286b0 <col:15> 'int ()' Function 0x1331285f8 'mux_chr_new_handler_tag' 'int ()'     |   |   |-RecoveryExpr 0x1331286d0 <col:39> '<dependent type>' contains-errors lvalue     |   |   `-RecoveryExpr 0x1331286f0 <col:42> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x134009c00 <line:7:9, line:9:9>     |     |-BinaryOperator 0x1331287b8 <line:7:13, col:19> 'int' '<'     |     | |-ImplicitCastExpr 0x1331287a0 <col:13> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x133128760 <col:13> 'int' lvalue Var 0x133128430 'tag' 'int'     |     | `-IntegerLiteral 0x133128780 <col:19> 'int' 0     |     `-CompoundStmt 0x1331287f0 <col:22, line:9:9>     |-BinaryOperator 0x134009d10 <line:12:5, col:14> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x134009ca8 <col:5, col:8> '<dependent type>' contains-errors lvalue ->tag     | | `-RecoveryExpr 0x134009c80 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x134009c60 <col:5> 'int *' lvalue ParmVar 0x133128128 'b' 'int *'     | `-DeclRefExpr 0x134009cf0 <col:14> 'int' lvalue Var 0x133128430 'tag' 'int'     |-BinaryOperator 0x134009de0 <line:13:5, col:14> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x134009d78 <col:5, col:8> '<dependent type>' contains-errors lvalue ->chr     | | `-RecoveryExpr 0x134009d50 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x134009d30 <col:5> 'int *' lvalue ParmVar 0x133128128 'b' 'int *'     | `-RecoveryExpr 0x134009dc0 <col:14> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x134009e38 <line:15:5, col:12>       `-RecoveryExpr 0x134009e18 <col:12> '<dependent type>' contains-errors lvalue ","20290":"`-FunctionDecl 0x147027d10  col:37 implicit used strchr 'char *(const char *, int)' extern   |-ParmVarDecl 0x147027e10 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x147027e78 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x147027db8 <<invalid sloc>> Implicit 893 ","21007":"`-FunctionDecl 0x132128288  line:1:12 invalid do_recv_NPEmbedPrint 'int (int *, void *)' static   |-ParmVarDecl 0x132128128 <col:33, col:48> col:48 invalid message 'int *'   |-ParmVarDecl 0x1321281a8 <col:57, col:63> col:63 p_value 'void *'   `-CompoundStmt 0x132128790 <line:2:1, line:11:1>     |-DeclStmt 0x1321283f0 <line:4:3, col:12>     | `-VarDecl 0x132128388 <col:3, col:7> col:7 used error 'int'     |-IfStmt 0x132128710 <line:6:3, line:7:9>     | |-RecoveryExpr 0x1321286a8 <line:6:7, col:70> '_Bool' contains-errors     | `-ReturnStmt 0x132128700 <line:7:2, col:9>     |   `-ImplicitCastExpr 0x1321286e8 <col:9> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x1321286c8 <col:9> 'int' lvalue Var 0x132128388 'error' 'int'     `-ReturnStmt 0x132128780 <line:10:3, col:10>       `-RecoveryExpr 0x132128760 <col:10> '<dependent type>' contains-errors lvalue ","20804":"`-FunctionDecl 0x12c928468  line:1:12 invalid io_channel_send_full 'int (int *, const void *, int, int *, int)' static   |-ParmVarDecl 0x12c928128 <col:33, col:45> col:45 invalid ioc 'int *'   |-ParmVarDecl 0x12c9281d8 <line:2:33, col:45> col:45 used buf 'const void *'   |-ParmVarDecl 0x12c928258 <col:50, col:57> col:57 invalid len 'int'   |-ParmVarDecl 0x12c9282d8 <line:3:33, col:38> col:38 used fds 'int *'   |-ParmVarDecl 0x12c928358 <col:43, col:50> col:50 invalid nfds 'int'   `-CompoundStmt 0x12d009858 <line:4:1, line:31:1>     |-RecoveryExpr 0x12c928618 <line:5:5, col:21> '<dependent type>' contains-errors lvalue     | |-UnaryExprOrTypeTraitExpr 0x12c9285f8 <col:5, col:12> 'unsigned long' contains-errors sizeof     | | `-RecoveryExpr 0x12c9285d8 <col:12> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x12c928570 <col:21> 'int' 0     `-WhileStmt 0x12d009838 <line:7:5, line:28:5>       |-BinaryOperator 0x12c9286c0 <line:7:12, col:21> 'int' contains-errors '<'       | |-RecoveryExpr 0x12c9286a0 <col:12> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x12c928660 <col:21> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x12d009818 <col:26, line:28:5>         |-DeclStmt 0x12d009288 <line:9:9, line:10:55>         | |-RecordDecl 0x12c9286e0 <line:9:9, col:16> col:16 struct iovec         | `-VarDecl 0x12d008c00 <col:9, col:22> col:22 invalid iov 'struct iovec'         `-IfStmt 0x12d0097e8 <line:15:9, line:25:9> has_else           |-BinaryOperator 0x12d0095d0 <line:15:13, col:20> 'int' contains-errors '=='           | |-RecoveryExpr 0x12d009590 <col:13> '<dependent type>' contains-errors lvalue           | `-RecoveryExpr 0x12d0095b0 <col:20> '<dependent type>' contains-errors lvalue           |-CompoundStmt 0x12d009708 <col:43, line:22:9>           | |-IfStmt 0x12d009688 <line:16:13, line:18:13>           | | |-RecoveryExpr 0x12d009608 <line:16:17> '<dependent type>' contains-errors lvalue           | | `-CompoundStmt 0x12d009670 <col:25, line:18:13>           | |   `-ReturnStmt 0x12d009660 <line:17:17, col:24>           | |     `-RecoveryExpr 0x12d009640 <col:24> '<dependent type>' contains-errors lvalue           | `-ReturnStmt 0x12d0096f8 <line:21:13, col:21>           |   `-UnaryOperator 0x12d0096e0 <col:20, col:21> 'int' prefix '-'           |     `-IntegerLiteral 0x12d0096c0 <col:21> 'int' 1           `-IfStmt 0x12d0097c8 <line:22:16, line:25:9>             |-RecoveryExpr 0x12d009748 <line:22:20, col:26> '_Bool' contains-errors             `-CompoundStmt 0x12d0097b0 <col:29, line:25:9>               `-ReturnStmt 0x12d0097a0 <line:24:13, col:21>                 `-UnaryOperator 0x12d009788 <col:20, col:21> 'int' prefix '-'                   `-IntegerLiteral 0x12d009768 <col:21> 'int' 1 ","20648":"`-FunctionDecl 0x15500de58  line:1:1 invalid ber_out_sequence 'int (int, int)'   |-ParmVarDecl 0x15500dcf0 <col:18, col:25> col:25 invalid out 'int'   |-ParmVarDecl 0x15500dd70 <col:30, col:37> col:37 invalid content 'int'   `-CompoundStmt 0x156008e08 <line:2:1, line:8:1>     |-UnaryExprOrTypeTraitExpr 0x15500df68 <line:3:2, col:9> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x15500df48 <col:9> '<dependent type>' contains-errors lvalue     |-CallExpr 0x156008c20 <line:5:2, col:68> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15500e2b8 <col:2> 'int ()' Function 0x15500e200 'ber_out_header' 'int ()'     | |-RecoveryExpr 0x15500e2d8 <col:17> '<dependent type>' contains-errors lvalue     | |-BinaryOperator 0x15500e3d8 <col:22, col:41> '<dependent type>' contains-errors '|'     | | |-RecoveryExpr 0x15500e398 <col:22> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x15500e3b8 <col:41> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x156008c00 <col:62> '<dependent type>' contains-errors lvalue     `-IfStmt 0x156008de8 <line:6:2, line:7:26>       |-RecoveryExpr 0x156008c58 <line:6:6> '<dependent type>' contains-errors lvalue       `-CallExpr 0x156008db8 <line:7:3, col:26> '<dependent type>' contains-errors         |-DeclRefExpr 0x156008d58 <col:3> 'int ()' Function 0x156008ca0 'out_stream' 'int ()'         |-RecoveryExpr 0x156008d78 <col:14> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x156008d98 <col:19> '<dependent type>' contains-errors lvalue ","20822":"`-FunctionDecl 0x13800e038  line:1:14 invalid ResizeOutputTensors 'int (int *, int *, const int *, const int *, const int *)'   |-ParmVarDecl 0x13800dd28 <col:34, col:49> col:49 referenced invalid context 'int *'   |-ParmVarDecl 0x13800dda8 <col:58, col:70> col:70 invalid node 'int *'   |-ParmVarDecl 0x13800de28 <line:2:34, col:54> col:54 invalid input 'const int *'   |-ParmVarDecl 0x13800dea8 <line:3:34, col:54> col:54 invalid size_splits 'const int *'   |-ParmVarDecl 0x13800df28 <line:4:34, col:54> col:54 invalid axis 'const int *'   `-CompoundStmt 0x1401237b8 <col:60, line:61:1>     |-DeclStmt 0x13800e1a0 <line:5:3, col:47>     | `-VarDecl 0x13800e120 <col:3, col:7> col:7 used axis_value 'int'     |-IfStmt 0x138027e70 <line:6:3, line:8:3>     | |-BinaryOperator 0x13800e210 <line:6:7, col:20> 'int' '<'     | | |-ImplicitCastExpr 0x13800e1f8 <col:7> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x13800e1b8 <col:7> 'int' lvalue Var 0x13800e120 'axis_value' 'int'     | | `-IntegerLiteral 0x13800e1d8 <col:20> 'int' 0     | `-CompoundStmt 0x138027e58 <col:23, line:8:3>     |   `-CompoundAssignOperator 0x138027e28 <line:7:5, col:38> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |     |-DeclRefExpr 0x13800e230 <col:5> 'int' lvalue Var 0x13800e120 'axis_value' 'int'     |     `-CallExpr 0x138027e00 <col:19, col:38> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x13800e3b0 <col:19> 'int ()' Function 0x13800e2f8 'NumDimensions' 'int ()'     |       `-RecoveryExpr 0x13800e3d0 <col:33> '<dependent type>' contains-errors lvalue     |-RecoveryExpr 0x138027ec0 <line:10:3> '<dependent type>' contains-errors lvalue     |-IfStmt 0x138028358 <line:11:3, line:18:3> has_else     | |-BinaryOperator 0x138027fa0 <line:11:7, col:28> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x138027f00 <col:7, col:20> '<dependent type>' contains-errors lvalue ->type     | | | `-RecoveryExpr 0x138027ee0 <col:7> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x138027f80 <col:28> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x138028048 <col:42, line:13:3>     | `-IfStmt 0x138028328 <col:10, line:18:3> has_else     |   |-BinaryOperator 0x138028118 <line:13:14, col:35> 'int' contains-errors '=='     |   | |-CXXDependentScopeMemberExpr 0x138028078 <col:14, col:27> '<dependent type>' contains-errors lvalue ->type     |   | | `-RecoveryExpr 0x138028058 <col:14> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x1380280f8 <col:35> '<dependent type>' contains-errors lvalue     |   |-CompoundStmt 0x1380281c0 <col:49, line:15:3>     |   `-CompoundStmt 0x138028310 <col:10, line:18:3>     |     `-CallExpr 0x1380282e0 <line:16:5, col:40> '<dependent type>' contains-errors     |       |-CXXDependentScopeMemberExpr 0x138028218 <col:5, col:14> '<dependent type>' contains-errors lvalue ->ReportError     |       | `-RecoveryExpr 0x1380281f0 <col:5> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x1380281d0 <col:5> 'int *' lvalue ParmVar 0x13800dd28 'context' 'int *'     |       |-RecoveryExpr 0x138028260 <col:26> '<dependent type>' contains-errors lvalue     |       `-StringLiteral 0x1380282c0 <col:35> 'char[4]' lvalue \"STR\"     |-DeclStmt 0x138028440 <line:20:3, col:27>     | `-VarDecl 0x1380283a0 <col:3, col:26> col:7 used minus_one_index 'int' cinit     |   `-UnaryOperator 0x138028428 <col:25, col:26> 'int' prefix '-'     |     `-IntegerLiteral 0x138028408 <col:26> 'int' 1     |-DeclStmt 0x138028ac8 <line:36:3, col:60>     | `-VarDecl 0x1380288f0 <col:3, col:59> col:13 used input_size 'const int' cinit     |   `-CallExpr 0x138028a98 <col:26, col:59> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x138028a38 <col:26> 'int ()' Function 0x138028980 'SizeOfDimension' 'int ()'     |     |-RecoveryExpr 0x138028a58 <col:42> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x138028a78 <col:49> 'int' lvalue Var 0x13800e120 'axis_value' 'int'     |-IfStmt 0x140122ef0 <line:38:3, line:50:3> has_else     | |-BinaryOperator 0x138028b50 <line:38:7, col:27> 'int' '!='     | | |-ImplicitCastExpr 0x138028b38 <col:7> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x138028ae0 <col:7> 'int' lvalue Var 0x1380283a0 'minus_one_index' 'int'     | | `-UnaryOperator 0x138028b20 <col:26, col:27> 'int' prefix '-'     | |   `-IntegerLiteral 0x138028b00 <col:27> 'int' 1     | |-CompoundStmt 0x138028d48 <col:30, line:46:3>     | | `-IfStmt 0x138028d18 <line:39:5, line:45:5> has_else     | |   |-RecoveryExpr 0x138028b90 <line:39:9, col:27> '_Bool' contains-errors     | |   |-CompoundStmt 0x138028cb0 <col:39, line:43:5>     | |   | `-CallExpr 0x138028c80 <line:40:7, line:42:16> '<dependent type>' contains-errors     | |   |   |-CXXDependentScopeMemberExpr 0x138028bf8 <line:40:7, col:16> '<dependent type>' contains-errors lvalue ->ReportError     | |   |   | `-RecoveryExpr 0x138028bd0 <col:7> '<dependent type>' contains-errors lvalue     | |   |   |   `-DeclRefExpr 0x138028bb0 <col:7> 'int *' lvalue ParmVar 0x13800dd28 'context' 'int *'     | |   |   |-RecoveryExpr 0x138028c40 <line:41:11> '<dependent type>' contains-errors lvalue     | |   |   `-StringLiteral 0x138028c60 <line:42:11> 'char[4]' lvalue \"STR\"     | |   `-CompoundStmt 0x138028d08 <line:43:12, line:45:5>     | `-IfStmt 0x140122ed0 <line:46:10, line:50:3>     |   |-RecoveryExpr 0x138028d80 <line:46:14, col:33> '_Bool' contains-errors     |   `-CompoundStmt 0x140122eb8 <col:45, line:50:3>     |     `-CallExpr 0x140122e88 <line:47:5, line:49:14> '<dependent type>' contains-errors     |       |-CXXDependentScopeMemberExpr 0x140122e00 <line:47:5, col:14> '<dependent type>' contains-errors lvalue ->ReportError     |       | `-RecoveryExpr 0x138028dc0 <col:5> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x138028da0 <col:5> 'int *' lvalue ParmVar 0x13800dd28 'context' 'int *'     |       |-RecoveryExpr 0x140122e48 <line:48:9> '<dependent type>' contains-errors lvalue     |       `-StringLiteral 0x140122e68 <line:49:9> 'char[4]' lvalue \"STR\"     `-ForStmt 0x140123780 <line:52:3, line:58:3>       |-DeclStmt 0x140122fc0 <line:52:8, col:17>       | `-VarDecl 0x140122f38 <col:8, col:16> col:12 used i 'int' cinit       |   `-IntegerLiteral 0x140122fa0 <col:16> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x140123140 <col:19, col:38> 'int' contains-errors '<'       | |-DeclRefExpr 0x140122fd8 <col:19> 'int' lvalue Var 0x140122f38 'i' 'int'       | `-CallExpr 0x140123118 <col:23, col:38> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x1401230d8 <col:23> 'int ()' Function 0x140123020 'NumOutputs' 'int ()'       |   `-RecoveryExpr 0x1401230f8 <col:34> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x140123180 <col:41, col:43> 'int' prefix '++'       | `-DeclRefExpr 0x140123160 <col:43> 'int' lvalue Var 0x140122f38 'i' 'int'       `-CompoundStmt 0x140123770 <col:46, line:58:3> ","20359":"`-FunctionDecl 0x13b928288  line:1:16 invalid bitxor 'int *(int *, int)' static   |-ParmVarDecl 0x13b928128 <col:23, col:33> col:33 invalid J 'int *'   |-ParmVarDecl 0x13b9281a8 <col:36, col:40> col:40 used notin 'int'   `-CompoundStmt 0x13c0092f0 <line:2:1, line:7:1>     `-ReturnStmt 0x13c0092e0 <line:6:2, col:9>       `-RecoveryExpr 0x13c0092c0 <col:9> '<dependent type>' contains-errors lvalue ","20987":"`-FunctionDecl 0x15b827cf8  col:10 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x15b827df8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x15b827e60 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x15b827ec8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x15b827da0 <<invalid sloc>> Implicit 882 ","20270":"`-FunctionDecl 0x158929088  line:1:15 invalid ReadGROUP4Image 'int *(const int *, int *)' static   |-ParmVarDecl 0x158928ef0 <col:31, col:48> col:48 referenced invalid image_info 'const int *'   |-ParmVarDecl 0x158928fa8 <line:2:3, col:18> col:18 invalid exception 'int *'   `-CompoundStmt 0x158945380 <line:3:1, line:110:1>     |-DeclStmt 0x1589291d0 <line:4:3, line:5:28>     | `-VarDecl 0x158929168 <line:4:3, line:5:5> col:5 invalid filename 'char'     |-BinaryOperator 0x1589292b8 <line:13:3, line:14:6> '<dependent type>' contains-errors '*'     | |-RecoveryExpr 0x158929238 <line:13:3> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x158929218 <col:3> 'const int *' lvalue ParmVar 0x158928ef0 'image_info' 'const int *'     | `-RecoveryExpr 0x158929298 <line:14:6> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x1589293f0 <line:16:3, line:18:16>     | |-VarDecl 0x1589292f0 <line:16:3, line:17:5> col:5 used c 'int'     | `-VarDecl 0x158929370 <line:16:3, line:18:5> col:5 used unique_file 'int'     |-UnaryExprOrTypeTraitExpr 0x158929460 <line:23:3, line:24:5> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x158929440 <col:5> '<dependent type>' contains-errors lvalue     |-CallExpr 0x158942748 <line:32:3, col:50> '<dependent type>' contains-errors     | |-DeclRefExpr 0x158942620 <col:3> 'int ()' Function 0x158929528 'assert' 'int ()'     | `-BinaryOperator 0x158942728 <col:10, col:35> 'int' contains-errors '=='     |   |-CXXDependentScopeMemberExpr 0x158942660 <col:10, col:22> '<dependent type>' contains-errors lvalue ->signature     |   | `-RecoveryExpr 0x158942640 <col:10> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x158942708 <col:35> '<dependent type>' contains-errors lvalue     |-IfStmt 0x158943008 <line:40:3, line:44:5>     | |-RecoveryExpr 0x158942ed8 <line:40:7, col:17> '_Bool' contains-errors     | `-CompoundStmt 0x158942ff8 <line:41:5, line:44:5>     |-BinaryOperator 0x158943190 <line:47:3, col:49> 'int' contains-errors '='     | |-DeclRefExpr 0x158943028 <col:3> 'int' lvalue Var 0x158929370 'unique_file' 'int'     | `-CallExpr 0x158943168 <col:15, col:49> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x158943128 <col:15> 'int ()' Function 0x158943070 'AcquireUniqueFileResource' 'int ()'     |   `-RecoveryExpr 0x158943148 <col:41> '<dependent type>' contains-errors lvalue     |-IfStmt 0x158944868 <line:85:3, line:89:5>     | |-RecoveryExpr 0x1589446f8 <line:85:7, col:23> '_Bool' contains-errors     | `-CompoundStmt 0x158944858 <line:86:5, line:89:5>     |-IfStmt 0x158945168 <line:98:3, line:105:5>     | |-RecoveryExpr 0x158944f08 <line:98:7, col:26> '_Bool' contains-errors     | `-CompoundStmt 0x158945158 <line:99:5, line:105:5>     `-CStyleCastExpr 0x158945318 <line:106:3, col:47> 'void' contains-errors <ToVoid>       `-CallExpr 0x1589452a8 <col:10, col:47> '<dependent type>' contains-errors         |-DeclRefExpr 0x158945268 <col:10> 'int ()' Function 0x1589451b0 'RelinquishUniqueFileResource' 'int ()'         `-RecoveryExpr 0x158945288 <col:39> '<dependent type>' contains-errors lvalue ","20713":"`-FunctionDecl 0x12693b978  line:1:20 invalid __bond_start_xmit 'int (struct sk_buff *, struct net_device *)' static   |-ParmVarDecl 0x126922668 <col:38, col:54> col:54 used skb 'struct sk_buff *'   |-ParmVarDecl 0x12693b858 <col:59, col:78> col:78 used dev 'struct net_device *'   `-CompoundStmt 0x12600a750 <line:2:1, line:32:1>     |-DeclStmt 0x12693be58 <line:3:2, col:41>     | |-RecordDecl 0x12693ba30 <col:2, col:9> col:9 struct bonding     | `-VarDecl 0x12693bb98 <col:2, col:40> col:18 used bond 'struct bonding *' cinit     |   `-ImplicitCastExpr 0x12693be28 <col:25, col:40> 'struct bonding *' <IntegralToPointer>     |     `-CallExpr 0x12693bde8 <col:25, col:40> 'int'     |       |-ImplicitCastExpr 0x12693bdd0 <col:25> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x12693bd60 <col:25> 'int ()' Function 0x12693bca8 'netdev_priv' 'int ()'     |       `-ImplicitCastExpr 0x12693be10 <col:37> 'struct net_device *' <LValueToRValue>     |         `-DeclRefExpr 0x12693bd80 <col:37> 'struct net_device *' lvalue ParmVar 0x12693b858 'dev' 'struct net_device *'     |-IfStmt 0x12693c290 <line:5:2, line:8:2>     | |-CallExpr 0x12693c018 <line:5:6, col:41> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x12693bf50 <col:6> 'int ()' Function 0x12693be98 'TX_QUEUE_OVERRIDE' 'int ()'     | | `-CXXDependentScopeMemberExpr 0x12693bfd0 <col:24, col:37> '<dependent type>' contains-errors lvalue .mode     | |   `-RecoveryExpr 0x12693bfa8 <col:24, col:30> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x12693bf70 <col:24> 'struct bonding *' lvalue Var 0x12693bb98 'bond' 'struct bonding *'     | `-CompoundStmt 0x12693c278 <col:44, line:8:2>     |   `-IfStmt 0x12693c258 <line:6:3, line:7:11>     |     |-UnaryOperator 0x12693c1f8 <line:6:7, col:37> 'int' prefix '!' cannot overflow     |     | `-CallExpr 0x12693c198 <col:8, col:37> 'int'     |     |   |-ImplicitCastExpr 0x12693c180 <col:8> 'int (*)()' <FunctionToPointerDecay>     |     |   | `-DeclRefExpr 0x12693c120 <col:8> 'int ()' Function 0x12693c068 'bond_slave_override' 'int ()'     |     |   |-ImplicitCastExpr 0x12693c1c8 <col:28> 'struct bonding *' <LValueToRValue>     |     |   | `-DeclRefExpr 0x12693c140 <col:28> 'struct bonding *' lvalue Var 0x12693bb98 'bond' 'struct bonding *'     |     |   `-ImplicitCastExpr 0x12693c1e0 <col:34> 'struct sk_buff *' <LValueToRValue>     |     |     `-DeclRefExpr 0x12693c160 <col:34> 'struct sk_buff *' lvalue ParmVar 0x126922668 'skb' 'struct sk_buff *'     |     `-ReturnStmt 0x12693c248 <line:7:4, col:11>     |       `-RecoveryExpr 0x12693c228 <col:11> '<dependent type>' contains-errors lvalue     `-SwitchStmt 0x12693c370 <line:10:2, line:31:2>       |-ImplicitCastExpr 0x12693c358 <line:10:10, col:23> '<dependent type>' contains-errors <LValueToRValue>       | `-CXXDependentScopeMemberExpr 0x12693c310 <col:10, col:23> '<dependent type>' contains-errors lvalue .mode       |   `-RecoveryExpr 0x12693c2e8 <col:10, col:16> '<dependent type>' contains-errors lvalue       |     `-DeclRefExpr 0x12693c2b0 <col:10> 'struct bonding *' lvalue Var 0x12693bb98 'bond' 'struct bonding *'       `-CompoundStmt 0x12600a6f8 <col:29, line:31:2>         |-ReturnStmt 0x12693c568 <line:12:3, col:39>         | `-CallExpr 0x12693c508 <col:10, col:39> 'int'         |   |-ImplicitCastExpr 0x12693c4f0 <col:10> 'int (*)()' <FunctionToPointerDecay>         |   | `-DeclRefExpr 0x12693c490 <col:10> 'int ()' Function 0x12693c3d8 'bond_xmit_roundrobin' 'int ()'         |   |-ImplicitCastExpr 0x12693c538 <col:31> 'struct sk_buff *' <LValueToRValue>         |   | `-DeclRefExpr 0x12693c4b0 <col:31> 'struct sk_buff *' lvalue ParmVar 0x126922668 'skb' 'struct sk_buff *'         |   `-ImplicitCastExpr 0x12693c550 <col:36> 'struct net_device *' <LValueToRValue>         |     `-DeclRefExpr 0x12693c4d0 <col:36> 'struct net_device *' lvalue ParmVar 0x12693b858 'dev' 'struct net_device *'         |-ReturnStmt 0x12693c748 <line:14:3, col:41>         | `-CallExpr 0x12693c6e8 <col:10, col:41> 'int'         |   |-ImplicitCastExpr 0x12693c6d0 <col:10> 'int (*)()' <FunctionToPointerDecay>         |   | `-DeclRefExpr 0x12693c670 <col:10> 'int ()' Function 0x12693c5b8 'bond_xmit_activebackup' 'int ()'         |   |-ImplicitCastExpr 0x12693c718 <col:33> 'struct sk_buff *' <LValueToRValue>         |   | `-DeclRefExpr 0x12693c690 <col:33> 'struct sk_buff *' lvalue ParmVar 0x126922668 'skb' 'struct sk_buff *'         |   `-ImplicitCastExpr 0x12693c730 <col:38> 'struct net_device *' <LValueToRValue>         |     `-DeclRefExpr 0x12693c6b0 <col:38> 'struct net_device *' lvalue ParmVar 0x12693b858 'dev' 'struct net_device *'         |-ReturnStmt 0x126009b90 <line:16:3, col:32>         | `-CallExpr 0x126009b30 <col:10, col:32> 'int'         |   |-ImplicitCastExpr 0x126009b18 <col:10> 'int (*)()' <FunctionToPointerDecay>         |   | `-DeclRefExpr 0x126009ab8 <col:10> 'int ()' Function 0x126009a00 'bond_xmit_xor' 'int ()'         |   |-ImplicitCastExpr 0x126009b60 <col:24> 'struct sk_buff *' <LValueToRValue>         |   | `-DeclRefExpr 0x126009ad8 <col:24> 'struct sk_buff *' lvalue ParmVar 0x126922668 'skb' 'struct sk_buff *'         |   `-ImplicitCastExpr 0x126009b78 <col:29> 'struct net_device *' <LValueToRValue>         |     `-DeclRefExpr 0x126009af8 <col:29> 'struct net_device *' lvalue ParmVar 0x12693b858 'dev' 'struct net_device *'         |-ReturnStmt 0x126009d70 <line:18:3, col:38>         | `-CallExpr 0x126009d10 <col:10, col:38> 'int'         |   |-ImplicitCastExpr 0x126009cf8 <col:10> 'int (*)()' <FunctionToPointerDecay>         |   | `-DeclRefExpr 0x126009c98 <col:10> 'int ()' Function 0x126009be0 'bond_xmit_broadcast' 'int ()'         |   |-ImplicitCastExpr 0x126009d40 <col:30> 'struct sk_buff *' <LValueToRValue>         |   | `-DeclRefExpr 0x126009cb8 <col:30> 'struct sk_buff *' lvalue ParmVar 0x126922668 'skb' 'struct sk_buff *'         |   `-ImplicitCastExpr 0x126009d58 <col:35> 'struct net_device *' <LValueToRValue>         |     `-DeclRefExpr 0x126009cd8 <col:35> 'struct net_device *' lvalue ParmVar 0x12693b858 'dev' 'struct net_device *'         |-ReturnStmt 0x126009f50 <line:20:3, col:36>         | `-CallExpr 0x126009ef0 <col:10, col:36> 'int'         |   |-ImplicitCastExpr 0x126009ed8 <col:10> 'int (*)()' <FunctionToPointerDecay>         |   | `-DeclRefExpr 0x126009e78 <col:10> 'int ()' Function 0x126009dc0 'bond_3ad_xmit_xor' 'int ()'         |   |-ImplicitCastExpr 0x126009f20 <col:28> 'struct sk_buff *' <LValueToRValue>         |   | `-DeclRefExpr 0x126009e98 <col:28> 'struct sk_buff *' lvalue ParmVar 0x126922668 'skb' 'struct sk_buff *'         |   `-ImplicitCastExpr 0x126009f38 <col:33> 'struct net_device *' <LValueToRValue>         |     `-DeclRefExpr 0x126009eb8 <col:33> 'struct net_device *' lvalue ParmVar 0x12693b858 'dev' 'struct net_device *'         |-ReturnStmt 0x12600a148 <line:23:3, col:32>         | `-CallExpr 0x12600a0e8 <col:10, col:32> 'int'         |   |-ImplicitCastExpr 0x12600a0d0 <col:10> 'int (*)()' <FunctionToPointerDecay>         |   | `-DeclRefExpr 0x12600a070 <col:10> 'int ()' Function 0x126009fb8 'bond_alb_xmit' 'int ()'         |   |-ImplicitCastExpr 0x12600a118 <col:24> 'struct sk_buff *' <LValueToRValue>         |   | `-DeclRefExpr 0x12600a090 <col:24> 'struct sk_buff *' lvalue ParmVar 0x126922668 'skb' 'struct sk_buff *'         |   `-ImplicitCastExpr 0x12600a130 <col:29> 'struct net_device *' <LValueToRValue>         |     `-DeclRefExpr 0x12600a0b0 <col:29> 'struct net_device *' lvalue ParmVar 0x12693b858 'dev' 'struct net_device *'         |-DefaultStmt 0x12600a400 <line:24:2, line:27:38>         | `-CallExpr 0x12600a3c8 <line:26:3, line:27:38> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x12600a238 <line:26:3> 'int ()' Function 0x12600a180 'pr_err' 'int ()'         |   |-StringLiteral 0x12600a2a0 <col:10> 'char[4]' lvalue \"STR\"         |   |-RecoveryExpr 0x12600a2f8 <line:27:10, col:15> '<dependent type>' contains-errors lvalue         |   | `-DeclRefExpr 0x12600a2c0 <col:10> 'struct net_device *' lvalue ParmVar 0x12693b858 'dev' 'struct net_device *'         |   `-CXXDependentScopeMemberExpr 0x12600a380 <col:21, col:34> '<dependent type>' contains-errors lvalue .mode         |     `-RecoveryExpr 0x12600a358 <col:21, col:27> '<dependent type>' contains-errors lvalue         |       `-DeclRefExpr 0x12600a320 <col:21> 'struct bonding *' lvalue Var 0x12693bb98 'bond' 'struct bonding *'         |-CallExpr 0x12600a558 <line:28:3, col:17> 'int'         | |-ImplicitCastExpr 0x12600a540 <col:3> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x12600a500 <col:3> 'int ()' Function 0x12600a448 'WARN_ON_ONCE' 'int ()'         | `-IntegerLiteral 0x12600a520 <col:16> 'int' 1         `-CallExpr 0x12600a6b8 <line:29:3, col:20> 'int'           |-ImplicitCastExpr 0x12600a6a0 <col:3> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x12600a660 <col:3> 'int ()' Function 0x12600a5a8 'dev_kfree_skb' 'int ()'           `-ImplicitCastExpr 0x12600a6e0 <col:17> 'struct sk_buff *' <LValueToRValue>             `-DeclRefExpr 0x12600a680 <col:17> 'struct sk_buff *' lvalue ParmVar 0x126922668 'skb' 'struct sk_buff *' ","20896":"`-FunctionDecl 0x124827948  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x124827a48 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x124827ab0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x124827b18 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1248279f0 <<invalid sloc>> Implicit 882 ","21085":"`-FunctionDecl 0x14e00de38  line:1:18 getBits 'long long (int, long long)' inline   |-ParmVarDecl 0x14e00dcd8 <col:26, col:30> col:30 used nBits 'int'   |-ParmVarDecl 0x14e00dd58 <col:37, col:42> col:47 'long long'   `-CompoundStmt 0x14e00e210 <col:77, line:9:1>     `-WhileStmt 0x14e00e088 <line:2:3, line:5:3>       |-BinaryOperator 0x14e00dfc8 <line:2:10, col:15> 'int' contains-errors '<'       | |-RecoveryExpr 0x14e00dfa8 <col:10> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x14e00df68 <col:15> 'int' lvalue ParmVar 0x14e00dcd8 'nBits' 'int'       `-CompoundStmt 0x14e00e078 <col:22, line:5:3> ","20527":"`-FunctionDecl 0x132128758  line:1:5 tipc_sk_rht_init 'int (struct net *)'   |-ParmVarDecl 0x132128648 <col:22, col:34> col:34 used net 'struct net *'   `-CompoundStmt 0x1321452a8 <line:2:1, line:6:1>     |-DeclStmt 0x132145040 <line:3:2, col:53>     | |-RecordDecl 0x132144c50 <col:2, col:9> col:9 struct tipc_net     | `-VarDecl 0x132144db8 <col:2, col:52> col:19 used tn 'struct tipc_net *' cinit     |   `-CallExpr 0x132144ff8 <col:24, col:52> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x132144f50 <col:24> 'int ()' Function 0x132144e98 'net_generic' 'int ()'     |     |-DeclRefExpr 0x132144f70 <col:36> 'struct net *' lvalue ParmVar 0x132128648 'net' 'struct net *'     |     `-RecoveryExpr 0x132144fd8 <col:41> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x132145298 <line:5:2, col:53>       `-CallExpr 0x132145268 <col:9, col:53> '<dependent type>' contains-errors         |-DeclRefExpr 0x132145138 <col:9> 'int ()' Function 0x132145080 'rhashtable_init' 'int ()'         |-UnaryOperator 0x1321451b8 <col:25, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow         | `-RecoveryExpr 0x132145190 <col:26, col:30> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x132145158 <col:26> 'struct tipc_net *' contains-errors lvalue Var 0x132144db8 'tn' 'struct tipc_net *'         `-UnaryOperator 0x132145250 <col:38, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow           `-RecoveryExpr 0x132145230 <col:39> '<dependent type>' contains-errors lvalue ","20185":"`-FunctionDecl 0x13b92a2d8  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x13b92a3d8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x13b92a440 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x13b92a4a8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x13b92a380 <<invalid sloc>> Implicit 882 ","20897":"`-FunctionDecl 0x129922c28  line:1:12 nf_tables_getgen 'int (struct sock *, struct sk_buff *, const struct nlmsghdr *, const struct nlattr *const *)' static   |-ParmVarDecl 0x12a00e248 <col:29, col:42> col:42 used nlsk 'struct sock *'   |-ParmVarDecl 0x129922628 <col:48, col:64> col:64 used skb 'struct sk_buff *'   |-ParmVarDecl 0x1299227f8 <line:2:8, col:31> col:31 used nlh 'const struct nlmsghdr *'   |-ParmVarDecl 0x129922ad0 <line:3:8, col:40> col:36 nla 'const struct nlattr *const *'   `-CompoundStmt 0x129929b78 <line:4:1, line:22:1>     |-DeclStmt 0x129923100 <line:5:2, col:37>     | |-RecordDecl 0x129922d38 <col:2, col:9> col:9 struct net     | `-VarDecl 0x129922ea8 <col:2, col:36> col:14 used net 'struct net *' cinit     |   `-CallExpr 0x1299230c0 <col:20, col:36> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x129923040 <col:20> 'int ()' Function 0x129922f88 'sock_net' 'int ()'     |     `-RecoveryExpr 0x129923098 <col:29, col:34> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x129923060 <col:29> 'struct sk_buff *' lvalue ParmVar 0x129922628 'skb' 'struct sk_buff *'     |-DeclStmt 0x129923210 <line:6:2, col:22>     | `-VarDecl 0x1299231a8 <col:2, col:18> col:18 used skb2 'struct sk_buff *'     |-DeclStmt 0x1299232a8 <line:7:2, col:9>     | `-VarDecl 0x129923240 <col:2, col:6> col:6 used err 'int'     |-BinaryOperator 0x1299234d0 <line:9:2, col:45> 'struct sk_buff *' contains-errors '='     | |-DeclRefExpr 0x1299232c0 <col:2> 'struct sk_buff *' lvalue Var 0x1299231a8 'skb2' 'struct sk_buff *'     | `-CallExpr 0x1299234a0 <col:9, col:45> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1299233c0 <col:9> 'int ()' Function 0x129923308 'alloc_skb' 'int ()'     |   |-RecoveryExpr 0x129923460 <col:19> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x129923480 <col:35> '<dependent type>' contains-errors lvalue     |-IfStmt 0x129929240 <line:10:2, line:11:11>     | |-BinaryOperator 0x129923568 <line:10:6, col:14> 'int' contains-errors '=='     | | |-DeclRefExpr 0x1299234f0 <col:6> 'struct sk_buff *' lvalue Var 0x1299231a8 'skb2' 'struct sk_buff *'     | | `-RecoveryExpr 0x129923548 <col:14> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x129929230 <line:11:3, col:11>     |   `-UnaryOperator 0x129929218 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x129929200 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x1299235d0 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x129929630 <line:13:2, line:14:25> 'int' contains-errors '='     | |-DeclRefExpr 0x129929260 <line:13:2> 'int' lvalue Var 0x129923240 'err' 'int'     | `-CallExpr 0x1299295f0 <col:8, line:14:25> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x129929360 <line:13:8> 'int ()' Function 0x1299292a8 'nf_tables_fill_gen_info' 'int ()'     |   |-DeclRefExpr 0x129929380 <col:32> 'struct sk_buff *' lvalue Var 0x1299231a8 'skb2' 'struct sk_buff *'     |   |-DeclRefExpr 0x1299293a0 <col:38> 'struct net *' contains-errors lvalue Var 0x129922ea8 'net' 'struct net *'     |   |-RecoveryExpr 0x129929568 <col:43, col:59> '<dependent type>' contains-errors lvalue     |   | `-CallExpr 0x129929528 <col:43, col:57> 'int'     |   |   |-ImplicitCastExpr 0x129929510 <col:43> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x1299294a0 <col:43> 'int ()' Function 0x1299293e8 'NETLINK_CB' 'int ()'     |   |   `-ImplicitCastExpr 0x129929550 <col:54> 'struct sk_buff *' <LValueToRValue>     |   |     `-DeclRefExpr 0x1299294c0 <col:54> 'struct sk_buff *' lvalue ParmVar 0x129922628 'skb' 'struct sk_buff *'     |   `-RecoveryExpr 0x1299295c8 <line:14:11, col:16> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x129929590 <col:11> 'const struct nlmsghdr *' lvalue ParmVar 0x1299227f8 'nlh' 'const struct nlmsghdr *'     |-IfStmt 0x129929730 <line:15:2, line:16:8>     | |-BinaryOperator 0x1299296a8 <line:15:6, col:12> 'int' '<'     | | |-ImplicitCastExpr 0x129929690 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x129929650 <col:6> 'int' lvalue Var 0x129923240 'err' 'int'     | | `-IntegerLiteral 0x129929670 <col:12> 'int' 0     | `-GotoStmt 0x129929718 <line:16:3, col:8> 'err' 0x1299296c8     |-ReturnStmt 0x129929988 <line:18:2, col:57>     | `-CallExpr 0x129929950 <col:9, col:57> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x129929830 <col:9> 'int ()' Function 0x129929778 'nlmsg_unicast' 'int ()'     |   |-DeclRefExpr 0x129929850 <col:23> 'struct sock *' lvalue ParmVar 0x12a00e248 'nlsk' 'struct sock *'     |   |-DeclRefExpr 0x129929870 <col:29> 'struct sk_buff *' lvalue Var 0x1299231a8 'skb2' 'struct sk_buff *'     |   `-RecoveryExpr 0x129929928 <col:35, col:51> '<dependent type>' contains-errors lvalue     |     `-CallExpr 0x1299298e8 <col:35, col:49> 'int'     |       |-ImplicitCastExpr 0x1299298d0 <col:35> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x129929890 <col:35> 'int ()' Function 0x1299293e8 'NETLINK_CB' 'int ()'     |       `-ImplicitCastExpr 0x129929910 <col:46> 'struct sk_buff *' <LValueToRValue>     |         `-DeclRefExpr 0x1299298b0 <col:46> 'struct sk_buff *' lvalue ParmVar 0x129922628 'skb' 'struct sk_buff *'     |-LabelStmt 0x129929b10 <line:19:1, line:20:16> 'err'     | `-CallExpr 0x129929ad0 <col:2, col:16> 'int'     |   |-ImplicitCastExpr 0x129929ab8 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x129929a78 <col:2> 'int ()' Function 0x1299299c0 'kfree_skb' 'int ()'     |   `-ImplicitCastExpr 0x129929af8 <col:12> 'struct sk_buff *' <LValueToRValue>     |     `-DeclRefExpr 0x129929a98 <col:12> 'struct sk_buff *' lvalue Var 0x1299231a8 'skb2' 'struct sk_buff *'     `-ReturnStmt 0x129929b68 <line:21:2, col:9>       `-ImplicitCastExpr 0x129929b50 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x129929b30 <col:9> 'int' lvalue Var 0x129923240 'err' 'int' ","20622":"`-FunctionDecl 0x138026600  line:1:12 digi_port_init 'int (struct usb_serial_port *, unsigned int)' static   |-ParmVarDecl 0x13800e248 <col:27, col:51> col:51 used port 'struct usb_serial_port *'   |-ParmVarDecl 0x13800e2c8 <col:57, col:66> col:66 used port_num 'unsigned int'   `-CompoundStmt 0x138028ef8 <line:2:1, line:22:1>     |-DeclStmt 0x1380268e8 <line:3:2, col:24>     | |-RecordDecl 0x138026700 <col:2, col:9> col:9 struct digi_port     | `-VarDecl 0x138026868 <col:2, col:20> col:20 used priv 'struct digi_port *'     |-IfStmt 0x138026bf0 <line:6:2, line:7:11>     | |-UnaryOperator 0x138026b30 <line:6:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x138026b18 <col:7> 'struct digi_port *' <LValueToRValue>     | |   `-DeclRefExpr 0x138026af8 <col:7> 'struct digi_port *' lvalue Var 0x138026868 'priv' 'struct digi_port *'     | `-ReturnStmt 0x138026be0 <line:7:3, col:11>     |   `-UnaryOperator 0x138026bc8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x138026bb0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x138026b90 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x138026d88 <line:9:2, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x138026cf0 <col:2> 'int ()' Function 0x138026c38 'spin_lock_init' 'int ()'     | `-UnaryOperator 0x138026d70 <col:17, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x138026d48 <col:18, col:24> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x138026d10 <col:18> 'struct digi_port *' lvalue Var 0x138026868 'priv' 'struct digi_port *'     |-BinaryOperator 0x138026e30 <line:10:2, col:22> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x138026de8 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x138026db0 <col:2> 'struct digi_port *' lvalue Var 0x138026868 'priv' 'struct digi_port *'     | `-DeclRefExpr 0x138026e10 <col:22> 'unsigned int' lvalue ParmVar 0x13800e2c8 'port_num' 'unsigned int'     |-CallExpr 0x138026fc8 <line:11:2, col:50> '<dependent type>' contains-errors     | |-DeclRefExpr 0x138026f30 <col:2> 'int ()' Function 0x138026e78 'init_waitqueue_head' 'int ()'     | `-UnaryOperator 0x138026fb0 <col:22, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x138026f88 <col:23, col:29> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x138026f50 <col:23> 'struct digi_port *' lvalue Var 0x138026868 'priv' 'struct digi_port *'     |-CallExpr 0x138027088 <line:12:2, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x138026ff0 <col:2> 'int ()' Function 0x138026e78 'init_waitqueue_head' 'int ()'     | `-UnaryOperator 0x138027070 <col:22, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x138027048 <col:23, col:29> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x138027010 <col:23> 'struct digi_port *' lvalue Var 0x138026868 'priv' 'struct digi_port *'     |-CallExpr 0x138027148 <line:13:2, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1380270b0 <col:2> 'int ()' Function 0x138026e78 'init_waitqueue_head' 'int ()'     | `-UnaryOperator 0x138027130 <col:22, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x138027108 <col:23, col:29> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1380270d0 <col:23> 'struct digi_port *' lvalue Var 0x138026868 'priv' 'struct digi_port *'     |-CallExpr 0x138027350 <line:14:2, col:57> '<dependent type>' contains-errors     | |-DeclRefExpr 0x138027250 <col:2> 'int ()' Function 0x138027198 'INIT_WORK' 'int ()'     | |-UnaryOperator 0x1380272d0 <col:12, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x1380272a8 <col:13, col:19> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x138027270 <col:13> 'struct digi_port *' lvalue Var 0x138026868 'priv' 'struct digi_port *'     | `-RecoveryExpr 0x138027330 <col:35> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x138027400 <line:15:2, col:18> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1380273b8 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x138027380 <col:2> 'struct digi_port *' lvalue Var 0x138026868 'priv' 'struct digi_port *'     | `-DeclRefExpr 0x1380273e0 <col:18> 'struct usb_serial_port *' lvalue ParmVar 0x13800e248 'port' 'struct usb_serial_port *'     |-CallExpr 0x1380274b8 <line:17:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x138027420 <col:2> 'int ()' Function 0x138026e78 'init_waitqueue_head' 'int ()'     | `-UnaryOperator 0x1380274a0 <col:22, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x138027478 <col:23, col:29> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x138027440 <col:23> 'struct usb_serial_port *' lvalue ParmVar 0x13800e248 'port' 'struct usb_serial_port *'     |-CallExpr 0x138028e68 <line:19:2, col:37> 'int'     | |-ImplicitCastExpr 0x138028e50 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1380275c0 <col:2> 'int ()' Function 0x138027508 'usb_set_serial_port_data' 'int ()'     | |-ImplicitCastExpr 0x138028e98 <col:27> 'struct usb_serial_port *' <LValueToRValue>     | | `-DeclRefExpr 0x1380275e0 <col:27> 'struct usb_serial_port *' lvalue ParmVar 0x13800e248 'port' 'struct usb_serial_port *'     | `-ImplicitCastExpr 0x138028eb0 <col:33> 'struct digi_port *' <LValueToRValue>     |   `-DeclRefExpr 0x138028e00 <col:33> 'struct digi_port *' lvalue Var 0x138026868 'priv' 'struct digi_port *'     `-ReturnStmt 0x138028ee8 <line:21:2, col:9>       `-IntegerLiteral 0x138028ec8 <col:9> 'int' 0 ","20227":"`-FunctionDecl 0x12c82a948  line:1:12 userns_install 'int (struct nsproxy *, struct ns_common *)' static   |-ParmVarDecl 0x12c80e248 <col:27, col:43> col:43 nsproxy 'struct nsproxy *'   |-ParmVarDecl 0x12c82a828 <col:52, col:70> col:70 used ns 'struct ns_common *'   `-CompoundStmt 0x12c82df38 <line:2:1, line:28:1>     |-DeclStmt 0x12c82ae48 <line:3:2, col:49>     | |-RecordDecl 0x12c82aa48 <col:2, col:9> col:9 struct user_namespace     | `-VarDecl 0x12c82abb8 <col:2, col:48> col:25 used user_ns 'struct user_namespace *' cinit     |   `-ImplicitCastExpr 0x12c82ae18 <col:35, col:48> 'struct user_namespace *' <IntegralToPointer>     |     `-CallExpr 0x12c82add8 <col:35, col:48> 'int'     |       |-ImplicitCastExpr 0x12c82adc0 <col:35> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x12c82ad50 <col:35> 'int ()' Function 0x12c82ac98 'to_user_ns' 'int ()'     |       `-ImplicitCastExpr 0x12c82ae00 <col:46> 'struct ns_common *' <LValueToRValue>     |         `-DeclRefExpr 0x12c82ad70 <col:46> 'struct ns_common *' lvalue ParmVar 0x12c82a828 'ns' 'struct ns_common *'     |-DeclStmt 0x12c82b048 <line:4:2, col:19>     | |-RecordDecl 0x12c82ae60 <col:2, col:9> col:9 struct cred     | `-VarDecl 0x12c82afc8 <col:2, col:15> col:15 used cred 'struct cred *'     |-IfStmt 0x12c82b2b0 <line:7:2, line:8:11>     | |-BinaryOperator 0x12c82b1e8 <line:7:6, col:33> 'int' '=='     | | |-ImplicitCastExpr 0x12c82b1b8 <col:6> 'struct user_namespace *' <LValueToRValue>     | | | `-DeclRefExpr 0x12c82b060 <col:6> 'struct user_namespace *' lvalue Var 0x12c82abb8 'user_ns' 'struct user_namespace *'     | | `-ImplicitCastExpr 0x12c82b1d0 <col:17, col:33> 'struct user_namespace *' <IntegralToPointer>     | |   `-CallExpr 0x12c82b198 <col:17, col:33> 'int'     | |     `-ImplicitCastExpr 0x12c82b180 <col:17> 'int (*)()' <FunctionToPointerDecay>     | |       `-DeclRefExpr 0x12c82b160 <col:17> 'int ()' Function 0x12c82b0a8 'current_user_ns' 'int ()'     | `-ReturnStmt 0x12c82b2a0 <line:8:3, col:11>     |   `-UnaryOperator 0x12c82b288 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12c82b270 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12c82b250 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12c82b530 <line:11:2, line:12:11>     | |-UnaryOperator 0x12c82b470 <line:11:6, col:33> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x12c82b448 <col:7, col:33> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12c82b3b0 <col:7> 'int ()' Function 0x12c82b2f8 'thread_group_empty' 'int ()'     | |   `-RecoveryExpr 0x12c82b428 <col:26> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12c82b520 <line:12:3, col:11>     |   `-UnaryOperator 0x12c82b508 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12c82b4f0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12c82b4d0 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12c82b7b0 <line:14:2, line:15:11>     | |-BinaryOperator 0x12c82b6e8 <line:14:6, col:28> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x12c82b6a0 <col:6, col:19> '<dependent type>' contains-errors lvalue ->users     | | | `-CXXDependentScopeMemberExpr 0x12c82b658 <col:6, col:15> '<dependent type>' contains-errors lvalue ->fs     | | |   `-RecoveryExpr 0x12c82b638 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x12c82b5f8 <col:28> 'int' 1     | `-ReturnStmt 0x12c82b7a0 <line:15:3, col:11>     |   `-UnaryOperator 0x12c82b788 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12c82b770 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12c82b750 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12c82d668 <line:17:2, line:18:11>     | |-UnaryOperator 0x12c82d5a8 <line:17:6, col:40> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x12c82d578 <col:7, col:40> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12c82d4b8 <col:7> 'int ()' Function 0x12c82d400 'ns_capable' 'int ()'     | |   |-DeclRefExpr 0x12c82d4d8 <col:18> 'struct user_namespace *' lvalue Var 0x12c82abb8 'user_ns' 'struct user_namespace *'     | |   `-RecoveryExpr 0x12c82d558 <col:27> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12c82d658 <line:18:3, col:11>     |   `-UnaryOperator 0x12c82d640 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12c82d628 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12c82d608 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12c82d7f8 <line:20:2, col:23> 'struct cred *' '='     | |-DeclRefExpr 0x12c82d688 <col:2> 'struct cred *' lvalue Var 0x12c82afc8 'cred' 'struct cred *'     | `-ImplicitCastExpr 0x12c82d7e0 <col:9, col:23> 'struct cred *' <IntegralToPointer>     |   `-CallExpr 0x12c82d7c0 <col:9, col:23> 'int'     |     `-ImplicitCastExpr 0x12c82d7a8 <col:9> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x12c82d788 <col:9> 'int ()' Function 0x12c82d6d0 'prepare_creds' 'int ()'     |-IfStmt 0x12c82d910 <line:21:2, line:22:11>     | |-UnaryOperator 0x12c82d850 <line:21:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12c82d838 <col:7> 'struct cred *' <LValueToRValue>     | |   `-DeclRefExpr 0x12c82d818 <col:7> 'struct cred *' lvalue Var 0x12c82afc8 'cred' 'struct cred *'     | `-ReturnStmt 0x12c82d900 <line:22:3, col:11>     |   `-UnaryOperator 0x12c82d8e8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12c82d8d0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12c82d8b0 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12c82da90 <line:24:2, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12c82da10 <col:2> 'int ()' Function 0x12c82d958 'put_user_ns' 'int ()'     | `-RecoveryExpr 0x12c82da68 <col:14, col:20> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12c82da30 <col:14> 'struct cred *' lvalue Var 0x12c82afc8 'cred' 'struct cred *'     |-CallExpr 0x12c82dd68 <line:25:2, col:45> 'int'     | |-ImplicitCastExpr 0x12c82dd50 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12c82db98 <col:2> 'int ()' Function 0x12c82dae0 'set_cred_user_ns' 'int ()'     | |-ImplicitCastExpr 0x12c82dd98 <col:19> 'struct cred *' <LValueToRValue>     | | `-DeclRefExpr 0x12c82dbb8 <col:19> 'struct cred *' lvalue Var 0x12c82afc8 'cred' 'struct cred *'     | `-CallExpr 0x12c82dd10 <col:25, col:44> 'int'     |   |-ImplicitCastExpr 0x12c82dcf8 <col:25> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12c82dcb8 <col:25> 'int ()' Function 0x12c82dc00 'get_user_ns' 'int ()'     |   `-ImplicitCastExpr 0x12c82dd38 <col:37> 'struct user_namespace *' <LValueToRValue>     |     `-DeclRefExpr 0x12c82dcd8 <col:37> 'struct user_namespace *' lvalue Var 0x12c82abb8 'user_ns' 'struct user_namespace *'     `-ReturnStmt 0x12c82df28 <line:27:2, col:26>       `-CallExpr 0x12c82dee8 <col:9, col:26> 'int'         |-ImplicitCastExpr 0x12c82ded0 <col:9> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x12c82de90 <col:9> 'int ()' Function 0x12c82ddd8 'commit_creds' 'int ()'         `-ImplicitCastExpr 0x12c82df10 <col:22> 'struct cred *' <LValueToRValue>           `-DeclRefExpr 0x12c82deb0 <col:22> 'struct cred *' lvalue Var 0x12c82afc8 'cred' 'struct cred *' ","21084":"`-FunctionDecl 0x15000e350  line:1:6 arch_pick_mmap_layout 'void (struct mm_struct *)'   |-ParmVarDecl 0x15000e248 <col:28, col:46> col:46 used mm 'struct mm_struct *'   `-CompoundStmt 0x15002a138 <line:2:1, line:37:1>     |-DeclStmt 0x1500266e8 <line:3:2, col:35>     | `-VarDecl 0x150026660 <col:2, col:32> col:16 used random_factor 'unsigned long' cinit     |   `-IntegerLiteral 0x1500266c8 <col:32> 'unsigned long' 0     |-DeclStmt 0x150026780 <line:4:2, col:19>     | `-VarDecl 0x150026718 <col:2, col:16> col:16 used gap 'unsigned long'     |-IfStmt 0x150026ee0 <line:6:2, line:13:2>     | |-BinaryOperator 0x1500268d0 <line:6:6, col:23> '<dependent type>' contains-errors '&'     | | |-CXXDependentScopeMemberExpr 0x150026868 <col:6, col:15> '<dependent type>' contains-errors lvalue ->flags     | | | `-RecoveryExpr 0x150026848 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1500268b0 <col:23> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x150026ec0 <col:37, line:13:2>     |   |-BinaryOperator 0x150026ac0 <line:7:3, col:34> 'unsigned long' '='     |   | |-DeclRefExpr 0x1500268f0 <col:3> 'unsigned long' lvalue Var 0x150026660 'random_factor' 'unsigned long'     |   | `-ImplicitCastExpr 0x150026aa8 <col:19, col:34> 'unsigned long' <IntegralCast>     |   |   `-CallExpr 0x150026a88 <col:19, col:34> 'int'     |   |     `-ImplicitCastExpr 0x150026a70 <col:19> 'int (*)()' <FunctionToPointerDecay>     |   |       `-DeclRefExpr 0x150026a20 <col:19> 'int ()' Function 0x150026968 'get_random_int' 'int ()'     |   `-IfStmt 0x150026e90 <line:8:3, line:11:4> has_else     |     |-CallExpr 0x150026c40 <line:8:7, col:33> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x150026bc0 <col:7> 'int ()' Function 0x150026b08 'test_thread_flag' 'int ()'     |     | `-RecoveryExpr 0x150026c20 <col:24> '<dependent type>' contains-errors lvalue     |     |-CompoundAssignOperator 0x150026dc0 <line:9:4, col:43> 'unsigned long' '&=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'     |     | |-DeclRefExpr 0x150026c68 <col:4> 'unsigned long' lvalue Var 0x150026660 'random_factor' 'unsigned long'     |     | `-ImplicitCastExpr 0x150026da8 <col:21, col:43> 'unsigned long' <IntegralCast>     |     |   `-ParenExpr 0x150026d88 <col:21, col:43> 'int'     |     |     `-BinaryOperator 0x150026d68 <col:22, col:42> 'int' '-'     |     |       |-ParenExpr 0x150026d28 <col:22, col:38> 'int'     |     |       | `-BinaryOperator 0x150026d08 <col:23, col:34> 'int' '*'     |     |       |   |-BinaryOperator 0x150026cc8 <col:23, col:27> 'int' '*'     |     |       |   | |-IntegerLiteral 0x150026c88 <col:23> 'int' 1     |     |       |   | `-IntegerLiteral 0x150026ca8 <col:27> 'int' 1024     |     |       |   `-IntegerLiteral 0x150026ce8 <col:34> 'int' 1024     |     |       `-IntegerLiteral 0x150026d48 <col:42> 'int' 1     |     `-NullStmt 0x150026e88 <line:11:4>     |-BinaryOperator 0x1500270c8 <line:16:2, col:27> 'unsigned long' contains-errors '='     | |-DeclRefExpr 0x150026f00 <col:2> 'unsigned long' lvalue Var 0x150026718 'gap' 'unsigned long'     | `-CallExpr 0x1500270a0 <col:8, col:27> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x150027000 <col:8> 'int ()' Function 0x150026f48 'rlimit' 'int ()'     |   `-RecoveryExpr 0x150027080 <col:15> '<dependent type>' contains-errors lvalue     `-IfStmt 0x15002a108 <line:17:2, line:36:2> has_else       |-RecoveryExpr 0x150027268 <line:17:6, line:20:6> '_Bool' contains-errors       |-CompoundStmt 0x150027570 <col:31, line:24:2>       | |-BinaryOperator 0x1500273a0 <line:21:3, col:40> '<dependent type>' contains-errors '='       | | |-RecoveryExpr 0x1500272c0 <col:3, col:7> '<dependent type>' contains-errors lvalue       | | | `-DeclRefExpr 0x150027288 <col:3> 'struct mm_struct *' lvalue ParmVar 0x15000e248 'mm' 'struct mm_struct *'       | | `-BinaryOperator 0x150027380 <col:19, col:40> '<dependent type>' contains-errors '+'       | |   |-RecoveryExpr 0x150027360 <col:19> '<dependent type>' contains-errors lvalue       | |   `-DeclRefExpr 0x150027300 <col:40> 'unsigned long' lvalue Var 0x150026660 'random_factor' 'unsigned long'       | |-BinaryOperator 0x150027478 <line:22:3, col:27> '<dependent type>' contains-errors '='       | | |-RecoveryExpr 0x1500273f8 <col:3, col:7> '<dependent type>' contains-errors lvalue       | | | `-DeclRefExpr 0x1500273c0 <col:3> 'struct mm_struct *' lvalue ParmVar 0x15000e248 'mm' 'struct mm_struct *'       | | `-RecoveryExpr 0x150027458 <col:27> '<dependent type>' contains-errors lvalue       | `-BinaryOperator 0x150027550 <line:23:3, col:20> '<dependent type>' contains-errors '='       |   |-RecoveryExpr 0x1500274d0 <col:3, col:7> '<dependent type>' contains-errors lvalue       |   | `-DeclRefExpr 0x150027498 <col:3> 'struct mm_struct *' lvalue ParmVar 0x15000e248 'mm' 'struct mm_struct *'       |   `-RecoveryExpr 0x150027530 <col:20> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x15002a0d8 <line:24:9, line:36:2>         |-DeclStmt 0x150029868 <line:26:3, col:40>         | `-VarDecl 0x150029800 <col:3, col:17> col:17 used task_size 'unsigned long'         |-IfStmt 0x150029a88 <line:28:3, line:29:23>         | |-BinaryOperator 0x150029970 <line:28:7, col:26> 'int' '<'         | | |-ImplicitCastExpr 0x150029940 <col:7> 'unsigned long' <LValueToRValue>         | | | `-DeclRefExpr 0x150029880 <col:7> 'unsigned long' lvalue Var 0x150026718 'gap' 'unsigned long'         | | `-ImplicitCastExpr 0x150029958 <col:13, col:26> 'unsigned long' <IntegralCast>         | |   `-BinaryOperator 0x150029920 <col:13, col:26> 'int' '*'         | |     |-BinaryOperator 0x1500298e0 <col:13, col:19> 'int' '*'         | |     | |-IntegerLiteral 0x1500298a0 <col:13> 'int' 128         | |     | `-IntegerLiteral 0x1500298c0 <col:19> 'int' 1024         | |     `-IntegerLiteral 0x150029900 <col:26> 'int' 1024         | `-BinaryOperator 0x150029a68 <line:29:4, col:23> 'unsigned long' '='         |   |-DeclRefExpr 0x150029990 <col:4> 'unsigned long' lvalue Var 0x150026718 'gap' 'unsigned long'         |   `-ImplicitCastExpr 0x150029a50 <col:10, col:23> 'unsigned long' <IntegralCast>         |     `-BinaryOperator 0x150029a30 <col:10, col:23> 'int' '*'         |       |-BinaryOperator 0x1500299f0 <col:10, col:16> 'int' '*'         |       | |-IntegerLiteral 0x1500299b0 <col:10> 'int' 128         |       | `-IntegerLiteral 0x1500299d0 <col:16> 'int' 1024         |       `-IntegerLiteral 0x150029a10 <col:23> 'int' 1024         |-IfStmt 0x150029d50 <line:30:3, line:31:28>         | |-BinaryOperator 0x150029be8 <line:30:7, col:31> 'int' '>'         | | |-ImplicitCastExpr 0x150029bd0 <col:7> 'unsigned long' <LValueToRValue>         | | | `-DeclRefExpr 0x150029aa8 <col:7> 'unsigned long' lvalue Var 0x150026718 'gap' 'unsigned long'         | | `-ParenExpr 0x150029bb0 <col:13, col:31> 'unsigned long'         | |   `-BinaryOperator 0x150029b90 <col:14, col:30> 'unsigned long' '*'         | |     |-BinaryOperator 0x150029b38 <col:14, col:26> 'unsigned long' '\/'         | |     | |-ImplicitCastExpr 0x150029b08 <col:14> 'unsigned long' <LValueToRValue>         | |     | | `-DeclRefExpr 0x150029ac8 <col:14> 'unsigned long' lvalue Var 0x150029800 'task_size' 'unsigned long'         | |     | `-ImplicitCastExpr 0x150029b20 <col:26> 'unsigned long' <IntegralCast>         | |     |   `-IntegerLiteral 0x150029ae8 <col:26> 'int' 6         | |     `-ImplicitCastExpr 0x150029b78 <col:30> 'unsigned long' <IntegralCast>         | |       `-IntegerLiteral 0x150029b58 <col:30> 'int' 5         | `-BinaryOperator 0x150029d30 <line:31:4, col:28> 'unsigned long' '='         |   |-DeclRefExpr 0x150029c08 <col:4> 'unsigned long' lvalue Var 0x150026718 'gap' 'unsigned long'         |   `-ParenExpr 0x150029d10 <col:10, col:28> 'unsigned long'         |     `-BinaryOperator 0x150029cf0 <col:11, col:27> 'unsigned long' '*'         |       |-BinaryOperator 0x150029c98 <col:11, col:23> 'unsigned long' '\/'         |       | |-ImplicitCastExpr 0x150029c68 <col:11> 'unsigned long' <LValueToRValue>         |       | | `-DeclRefExpr 0x150029c28 <col:11> 'unsigned long' lvalue Var 0x150029800 'task_size' 'unsigned long'         |       | `-ImplicitCastExpr 0x150029c80 <col:23> 'unsigned long' <IntegralCast>         |       |   `-IntegerLiteral 0x150029c48 <col:23> 'int' 6         |       `-ImplicitCastExpr 0x150029cd8 <col:27> 'unsigned long' <IntegralCast>         |         `-IntegerLiteral 0x150029cb8 <col:27> 'int' 5         `-BinaryOperator 0x150029ff8 <line:33:3, col:61> '<dependent type>' contains-errors '='           |-RecoveryExpr 0x150029da8 <col:3, col:7> '<dependent type>' contains-errors lvalue           | `-DeclRefExpr 0x150029d70 <col:3> 'struct mm_struct *' lvalue ParmVar 0x15000e248 'mm' 'struct mm_struct *'           `-CallExpr 0x150029fd0 <col:19, col:61> 'int'             |-ImplicitCastExpr 0x150029fb8 <col:19> 'int (*)()' <FunctionToPointerDecay>             | `-DeclRefExpr 0x150029eb0 <col:19> 'int ()' Function 0x150029df8 'PAGE_ALIGN' 'int ()'             `-BinaryOperator 0x150029f98 <col:30, col:48> 'unsigned long' '-'               |-BinaryOperator 0x150029f40 <col:30, col:42> 'unsigned long' '-'               | |-ImplicitCastExpr 0x150029f10 <col:30> 'unsigned long' <LValueToRValue>               | | `-DeclRefExpr 0x150029ed0 <col:30> 'unsigned long' lvalue Var 0x150029800 'task_size' 'unsigned long'               | `-ImplicitCastExpr 0x150029f28 <col:42> 'unsigned long' <LValueToRValue>               |   `-DeclRefExpr 0x150029ef0 <col:42> 'unsigned long' lvalue Var 0x150026718 'gap' 'unsigned long'               `-ImplicitCastExpr 0x150029f80 <col:48> 'unsigned long' <LValueToRValue>                 `-DeclRefExpr 0x150029f60 <col:48> 'unsigned long' lvalue Var 0x150026660 'random_factor' 'unsigned long' ","20594":"`-FunctionDecl 0x14e141048  line:1:1 acl_fetch_hdr_val 'int (struct proxy *, struct session *, void *, char *, struct acl_expr *, struct acl_test *)'   |-ParmVarDecl 0x14e128648 <col:19, col:33> col:33 px 'struct proxy *'   |-ParmVarDecl 0x14e140a28 <col:37, col:53> col:53 l4 'struct session *'   |-ParmVarDecl 0x14e140aa8 <col:57, col:63> col:63 used l7 'void *'   |-ParmVarDecl 0x14e140b28 <col:67, col:73> col:73 used sol 'char *'   |-ParmVarDecl 0x14e140cf8 <line:2:19, col:36> col:36 used expr 'struct acl_expr *'   |-ParmVarDecl 0x14e140ec8 <col:42, col:59> col:59 used test 'struct acl_test *'   `-CompoundStmt 0x14e143648 <line:3:1, line:25:1>     |-DeclStmt 0x14e1413a8 <line:4:2, col:27>     | |-RecordDecl 0x14e141168 <col:2, col:9> col:9 struct http_txn     | `-VarDecl 0x14e1412d8 <col:2, col:25> col:19 used txn 'struct http_txn *' cinit     |   `-ImplicitCastExpr 0x14e141378 <col:25> 'struct http_txn *' <BitCast>     |     `-ImplicitCastExpr 0x14e141360 <col:25> 'void *' <LValueToRValue>     |       `-DeclRefExpr 0x14e141340 <col:25> 'void *' lvalue ParmVar 0x14e140aa8 'l7' 'void *'     |-DeclStmt 0x14e141620 <line:5:2, col:37>     | |-RecordDecl 0x14e1413c0 <col:2, col:9> col:9 struct hdr_idx     | `-VarDecl 0x14e141528 <col:2, col:30> col:18 used idx 'struct hdr_idx *' cinit     |   `-UnaryOperator 0x14e1415f0 <col:24, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x14e1415c8 <col:25, col:30> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14e141590 <col:25> 'struct http_txn *' lvalue Var 0x14e1412d8 'txn' 'struct http_txn *'     |-DeclStmt 0x14e141988 <line:6:2, col:53>     | |-RecordDecl 0x14e141638 <col:2, col:9> col:9 struct hdr_ctx     | `-VarDecl 0x14e1417a8 <col:2, col:52> col:18 used ctx 'struct hdr_ctx *' cinit     |   `-CStyleCastExpr 0x14e141948 <col:24, col:52> 'struct hdr_ctx *' contains-errors <Dependent>     |     `-CXXDependentScopeMemberExpr 0x14e141870 <col:42, col:52> '<dependent type>' contains-errors lvalue .a     |       `-RecoveryExpr 0x14e141848 <col:42, col:48> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x14e141810 <col:42> 'struct acl_test *' lvalue ParmVar 0x14e140ec8 'test' 'struct acl_test *'     |-IfStmt 0x14e142a30 <line:8:2, line:9:10>     | |-UnaryOperator 0x14e1419d8 <line:8:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14e1419c0 <col:7> 'struct http_txn *' <LValueToRValue>     | |   `-DeclRefExpr 0x14e1419a0 <col:7> 'struct http_txn *' lvalue Var 0x14e1412d8 'txn' 'struct http_txn *'     | `-ReturnStmt 0x14e142a20 <line:9:3, col:10>     |   `-IntegerLiteral 0x14e142a00 <col:10> 'int' 0     |-IfStmt 0x14e142bc0 <line:11:2, line:13:14>     | |-RecoveryExpr 0x14e142b00 <line:11:6, col:43> '_Bool' contains-errors     | `-BinaryOperator 0x14e142ba0 <line:13:3, col:14> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x14e142b58 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14e142b20 <col:3> 'struct hdr_ctx *' contains-errors lvalue Var 0x14e1417a8 'ctx' 'struct hdr_ctx *'     |   `-IntegerLiteral 0x14e142b80 <col:14> 'int' 0     |-IfStmt 0x14e143440 <line:15:2, line:20:2>     | |-CallExpr 0x14e142e78 <line:15:6, col:67> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14e142cf0 <col:6> 'int ()' Function 0x14e142c38 'http_find_header2' 'int ()'     | | |-CXXDependentScopeMemberExpr 0x14e142d70 <col:24, col:34> '<dependent type>' contains-errors lvalue .str     | | | `-RecoveryExpr 0x14e142d48 <col:24, col:30> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x14e142d10 <col:24> 'struct acl_expr *' lvalue ParmVar 0x14e140cf8 'expr' 'struct acl_expr *'     | | |-RecoveryExpr 0x14e142df0 <col:39, col:45> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x14e142db8 <col:39> 'struct acl_expr *' lvalue ParmVar 0x14e140cf8 'expr' 'struct acl_expr *'     | | |-DeclRefExpr 0x14e142e18 <col:54> 'char *' lvalue ParmVar 0x14e140b28 'sol' 'char *'     | | |-DeclRefExpr 0x14e142e38 <col:59> 'struct hdr_idx *' contains-errors lvalue Var 0x14e141528 'idx' 'struct hdr_idx *'     | | `-DeclRefExpr 0x14e142e58 <col:64> 'struct hdr_ctx *' contains-errors lvalue Var 0x14e1417a8 'ctx' 'struct hdr_ctx *'     | `-CompoundStmt 0x14e143410 <col:70, line:20:2>     |   |-CompoundAssignOperator 0x14e142f88 <line:16:3, col:18> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   | |-RecoveryExpr 0x14e142ef8 <col:3, col:9> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x14e142ec0 <col:3> 'struct acl_test *' lvalue ParmVar 0x14e140ec8 'test' 'struct acl_test *'     |   | `-RecoveryExpr 0x14e142f68 <col:18> '<dependent type>' contains-errors lvalue     |   |-CompoundAssignOperator 0x14e143080 <line:17:3, col:18> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   | |-RecoveryExpr 0x14e142ff0 <col:3, col:9> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x14e142fb8 <col:3> 'struct acl_test *' lvalue ParmVar 0x14e140ec8 'test' 'struct acl_test *'     |   | `-RecoveryExpr 0x14e143060 <col:18> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x14e1433c0 <line:18:3, col:60> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x14e1430e8 <col:3, col:9> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x14e1430b0 <col:3> 'struct acl_test *' lvalue ParmVar 0x14e140ec8 'test' 'struct acl_test *'     |   | `-CallExpr 0x14e143390 <col:13, col:60> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x14e1431f0 <col:13> 'int ()' Function 0x14e143138 'strl2ic' 'int ()'     |   |   |-BinaryOperator 0x14e143310 <col:21, col:46> '<dependent type>' contains-errors '+'     |   |   | |-CStyleCastExpr 0x14e143288 <col:21, col:34> 'char *' contains-errors <Dependent>     |   |   | | `-RecoveryExpr 0x14e143248 <col:29, col:34> '<dependent type>' contains-errors lvalue     |   |   | |   `-DeclRefExpr 0x14e143210 <col:29> 'struct hdr_ctx *' contains-errors lvalue Var 0x14e1417a8 'ctx' 'struct hdr_ctx *'     |   |   | `-RecoveryExpr 0x14e1432e8 <col:41, col:46> '<dependent type>' contains-errors lvalue     |   |   |   `-DeclRefExpr 0x14e1432b0 <col:41> 'struct hdr_ctx *' contains-errors lvalue Var 0x14e1417a8 'ctx' 'struct hdr_ctx *'     |   |   `-RecoveryExpr 0x14e143368 <col:51, col:56> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x14e143330 <col:51> 'struct hdr_ctx *' contains-errors lvalue Var 0x14e1417a8 'ctx' 'struct hdr_ctx *'     |   `-ReturnStmt 0x14e143400 <line:19:3, col:10>     |     `-IntegerLiteral 0x14e1433e0 <col:10> 'int' 1     |-CompoundAssignOperator 0x14e143588 <line:22:2, col:18> '<dependent type>' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-RecoveryExpr 0x14e143498 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14e143460 <col:2> 'struct acl_test *' lvalue ParmVar 0x14e140ec8 'test' 'struct acl_test *'     | `-UnaryOperator 0x14e143570 <col:17, col:18> '<dependent type>' contains-errors prefix '~' cannot overflow     |   `-ImplicitCastExpr 0x14e143558 <col:18> '<dependent type>' contains-errors <LValueToRValue>     |     `-RecoveryExpr 0x14e143538 <col:18> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14e143638 <line:24:2, col:9>       `-IntegerLiteral 0x14e143618 <col:9> 'int' 0 ","21054":"`-FunctionDecl 0x13d80e158  line:1:5 invalid bus_property_get_exec_command 'int (int *, const char *, const char *, const char *, int *, void *, int *)'   |-ParmVarDecl 0x13d80dd28 <line:2:17, col:25> col:25 invalid bus 'int *'   |-ParmVarDecl 0x13d80dda8 <line:3:17, col:29> col:29 path 'const char *'   |-ParmVarDecl 0x13d80de28 <line:4:17, col:29> col:29 interface 'const char *'   |-ParmVarDecl 0x13d80dea8 <line:5:17, col:29> col:29 property 'const char *'   |-ParmVarDecl 0x13d80df28 <line:6:17, col:33> col:33 invalid reply 'int *'   |-ParmVarDecl 0x13d80dfa8 <line:7:17, col:23> col:23 userdata 'void *'   |-ParmVarDecl 0x13d80e028 <line:8:17, col:31> col:31 invalid ret_error 'int *'   `-CompoundStmt 0x13d827cc8 <col:42, line:25:1>     |-DeclStmt 0x13d80e2e8 <line:11:9, col:14>     | `-VarDecl 0x13d80e280 <col:9, col:13> col:13 used r 'int'     |-CallExpr 0x13d8274f8 <line:13:9, col:19> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d8274b8 <col:9> 'int ()' Function 0x13d827400 'assert' 'int ()'     | `-RecoveryExpr 0x13d8274d8 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13d827560 <line:14:9, col:21> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d827520 <col:9> 'int ()' Function 0x13d827400 'assert' 'int ()'     | `-RecoveryExpr 0x13d827540 <col:16> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13d827778 <line:16:9, col:60> 'int' contains-errors '='     | |-DeclRefExpr 0x13d827588 <col:9> 'int' lvalue Var 0x13d80e280 'r' 'int'     | `-CallExpr 0x13d827740 <col:13, col:60> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13d827688 <col:13> 'int ()' Function 0x13d8275d0 'sd_bus_message_open_container' 'int ()'     |   |-RecoveryExpr 0x13d8276a8 <col:43> '<dependent type>' contains-errors lvalue     |   |-CharacterLiteral 0x13d8276c8 <col:50> 'int' 97     |   `-StringLiteral 0x13d827720 <col:55> 'char[4]' lvalue \"STR\"     |-IfStmt 0x13d827858 <line:17:9, line:18:24>     | |-BinaryOperator 0x13d8277f0 <line:17:13, col:17> 'int' '<'     | | |-ImplicitCastExpr 0x13d8277d8 <col:13> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x13d827798 <col:13> 'int' lvalue Var 0x13d80e280 'r' 'int'     | | `-IntegerLiteral 0x13d8277b8 <col:17> 'int' 0     | `-ReturnStmt 0x13d827848 <line:18:17, col:24>     |   `-ImplicitCastExpr 0x13d827830 <col:24> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x13d827810 <col:24> 'int' lvalue Var 0x13d80e280 'r' 'int'     |-BinaryOperator 0x13d827a70 <line:20:9, col:41> 'int' contains-errors '='     | |-DeclRefExpr 0x13d827878 <col:9> 'int' lvalue Var 0x13d80e280 'r' 'int'     | `-CallExpr 0x13d827a40 <col:13, col:41> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13d827978 <col:13> 'int ()' Function 0x13d8278c0 'append_exec_command' 'int ()'     |   |-RecoveryExpr 0x13d827998 <col:33> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x13d827a20 <col:40> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13d827b50 <line:21:9, line:22:24>     | |-BinaryOperator 0x13d827ae8 <line:21:13, col:17> 'int' '<'     | | |-ImplicitCastExpr 0x13d827ad0 <col:13> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x13d827a90 <col:13> 'int' lvalue Var 0x13d80e280 'r' 'int'     | | `-IntegerLiteral 0x13d827ab0 <col:17> 'int' 0     | `-ReturnStmt 0x13d827b40 <line:22:17, col:24>     |   `-ImplicitCastExpr 0x13d827b28 <col:24> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x13d827b08 <col:24> 'int' lvalue Var 0x13d80e280 'r' 'int'     `-ReturnStmt 0x13d827cb8 <line:24:9, col:52>       `-CallExpr 0x13d827c90 <col:16, col:52> '<dependent type>' contains-errors         |-DeclRefExpr 0x13d827c50 <col:16> 'int ()' Function 0x13d827b98 'sd_bus_message_close_container' 'int ()'         `-RecoveryExpr 0x13d827c70 <col:47> '<dependent type>' contains-errors lvalue ","20912":"`-FunctionDecl 0x131928348  line:1:5 invalid ssl3_mac 'int (int *, unsigned char *, int)'   |-ParmVarDecl 0x131928128 <col:14, col:19> col:19 invalid ssl 'int *'   |-ParmVarDecl 0x1319281d8 <col:24, col:39> col:39 used md 'unsigned char *'   |-ParmVarDecl 0x131928258 <col:43, col:47> col:47 used send 'int'   `-CompoundStmt 0x131944e08 <line:2:2, line:54:2>     |-DeclStmt 0x131928538 <line:4:2, col:29>     | |-VarDecl 0x131928438 <col:2, col:17> col:17 used mac_sec 'unsigned char *'     | `-VarDecl 0x1319284b8 <col:2, col:26> col:26 used seq 'unsigned char *'     |-DeclStmt 0x1319285d0 <line:6:2, col:20>     | `-VarDecl 0x131928568 <col:2, col:16> col:16 referenced invalid hash 'const int *'     |-DeclStmt 0x131928700 <line:7:2, col:27>     | |-VarDecl 0x131928600 <col:2, col:17> col:17 used p 'unsigned char *'     | `-VarDecl 0x131928680 <col:2, col:19> col:19 used rec_char 'unsigned char'     |-DeclStmt 0x131928798 <line:8:2, col:22>     | `-VarDecl 0x131928730 <col:2, col:15> col:15 used md_size 'unsigned int'     |-DeclStmt 0x131941868 <line:9:2, col:10>     | `-VarDecl 0x131941800 <col:2, col:6> col:6 used npad 'int'     |-IfStmt 0x131942278 <line:11:2, line:24:3> has_else     | |-ImplicitCastExpr 0x1319418a0 <line:11:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x131941880 <col:6> 'int' lvalue ParmVar 0x131928258 'send' 'int'     | |-CompoundStmt 0x131941d70 <line:12:3, line:17:3>     | | |-BinaryOperator 0x131941b00 <line:14:3, col:42> 'unsigned char *' contains-errors '='     | | | |-DeclRefExpr 0x1319419a0 <col:3> 'unsigned char *' lvalue Var 0x131928438 'mac_sec' 'unsigned char *'     | | | `-UnaryOperator 0x131941ae8 <col:12, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-ParenExpr 0x131941ac8 <col:13, col:42> '<dependent type>' contains-errors lvalue     | | |     `-ArraySubscriptExpr 0x131941aa8 <col:14, col:41> '<dependent type>' contains-errors lvalue     | | |       |-ImplicitCastExpr 0x131941a90 <col:14, col:23> '<dependent type>' contains-errors <LValueToRValue>     | | |       | `-CXXDependentScopeMemberExpr 0x131941a28 <col:14, col:23> '<dependent type>' contains-errors lvalue ->write_mac_secret     | | |       |   `-CXXDependentScopeMemberExpr 0x1319419e0 <col:14, col:19> '<dependent type>' contains-errors lvalue ->s3     | | |       |     `-RecoveryExpr 0x1319419c0 <col:14> '<dependent type>' contains-errors lvalue     | | |       `-IntegerLiteral 0x131941a70 <col:40> 'int' 0     | | |-BinaryOperator 0x131941c80 <line:15:3, col:36> 'unsigned char *' contains-errors '='     | | | |-DeclRefExpr 0x131941b20 <col:3> 'unsigned char *' lvalue Var 0x1319284b8 'seq' 'unsigned char *'     | | | `-UnaryOperator 0x131941c68 <col:8, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-ParenExpr 0x131941c48 <col:9, col:36> '<dependent type>' contains-errors lvalue     | | |     `-ArraySubscriptExpr 0x131941c28 <col:10, col:35> '<dependent type>' contains-errors lvalue     | | |       |-ImplicitCastExpr 0x131941c10 <col:10, col:19> '<dependent type>' contains-errors <LValueToRValue>     | | |       | `-CXXDependentScopeMemberExpr 0x131941ba8 <col:10, col:19> '<dependent type>' contains-errors lvalue ->write_sequence     | | |       |   `-CXXDependentScopeMemberExpr 0x131941b60 <col:10, col:15> '<dependent type>' contains-errors lvalue ->s3     | | |       |     `-RecoveryExpr 0x131941b40 <col:10> '<dependent type>' contains-errors lvalue     | | |       `-IntegerLiteral 0x131941bf0 <col:34> 'int' 0     | | `-BinaryOperator 0x131941d50 <line:16:3, col:13> '<dependent type>' contains-errors '='     | |   |-RecoveryExpr 0x131941cc0 <col:3> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x131941ca0 <col:3> 'const int *' lvalue Var 0x131928568 'hash' 'const int *'     | |   `-CXXDependentScopeMemberExpr 0x131941d08 <col:8, col:13> '<dependent type>' contains-errors lvalue ->write_hash     | |     `-RecoveryExpr 0x131941ce8 <col:8> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x131942250 <line:19:3, line:24:3>     |   |-BinaryOperator 0x131941fe0 <line:21:3, col:41> 'unsigned char *' contains-errors '='     |   | |-DeclRefExpr 0x131941e80 <col:3> 'unsigned char *' lvalue Var 0x131928438 'mac_sec' 'unsigned char *'     |   | `-UnaryOperator 0x131941fc8 <col:12, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-ParenExpr 0x131941fa8 <col:13, col:41> '<dependent type>' contains-errors lvalue     |   |     `-ArraySubscriptExpr 0x131941f88 <col:14, col:40> '<dependent type>' contains-errors lvalue     |   |       |-ImplicitCastExpr 0x131941f70 <col:14, col:23> '<dependent type>' contains-errors <LValueToRValue>     |   |       | `-CXXDependentScopeMemberExpr 0x131941f08 <col:14, col:23> '<dependent type>' contains-errors lvalue ->read_mac_secret     |   |       |   `-CXXDependentScopeMemberExpr 0x131941ec0 <col:14, col:19> '<dependent type>' contains-errors lvalue ->s3     |   |       |     `-RecoveryExpr 0x131941ea0 <col:14> '<dependent type>' contains-errors lvalue     |   |       `-IntegerLiteral 0x131941f50 <col:39> 'int' 0     |   |-BinaryOperator 0x131942160 <line:22:3, col:35> 'unsigned char *' contains-errors '='     |   | |-DeclRefExpr 0x131942000 <col:3> 'unsigned char *' lvalue Var 0x1319284b8 'seq' 'unsigned char *'     |   | `-UnaryOperator 0x131942148 <col:8, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-ParenExpr 0x131942128 <col:9, col:35> '<dependent type>' contains-errors lvalue     |   |     `-ArraySubscriptExpr 0x131942108 <col:10, col:34> '<dependent type>' contains-errors lvalue     |   |       |-ImplicitCastExpr 0x1319420f0 <col:10, col:19> '<dependent type>' contains-errors <LValueToRValue>     |   |       | `-CXXDependentScopeMemberExpr 0x131942088 <col:10, col:19> '<dependent type>' contains-errors lvalue ->read_sequence     |   |       |   `-CXXDependentScopeMemberExpr 0x131942040 <col:10, col:15> '<dependent type>' contains-errors lvalue ->s3     |   |       |     `-RecoveryExpr 0x131942020 <col:10> '<dependent type>' contains-errors lvalue     |   |       `-IntegerLiteral 0x1319420d0 <col:33> 'int' 0     |   `-BinaryOperator 0x131942230 <line:23:3, col:13> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x1319421a0 <col:3> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x131942180 <col:3> 'const int *' lvalue Var 0x131928568 'hash' 'const int *'     |     `-CXXDependentScopeMemberExpr 0x1319421e8 <col:8, col:13> '<dependent type>' contains-errors lvalue ->read_hash     |       `-RecoveryExpr 0x1319421c8 <col:8> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x131942488 <line:26:2, col:26> 'unsigned int' contains-errors '='     | |-DeclRefExpr 0x1319422a8 <col:2> 'unsigned int' lvalue Var 0x131928730 'md_size' 'unsigned int'     | `-CallExpr 0x131942460 <col:10, col:26> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x131942420 <col:10> 'int ()' Function 0x131942368 'EVP_MD_size' 'int ()'     |   `-RecoveryExpr 0x131942440 <col:22> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1319425e8 <line:27:2, col:20> 'int' '='     | |-DeclRefExpr 0x1319424a8 <col:2> 'int' lvalue Var 0x131941800 'npad' 'int'     | `-ImplicitCastExpr 0x1319425d0 <col:7, col:20> 'int' <IntegralCast>     |   `-BinaryOperator 0x1319425b0 <col:7, col:20> 'unsigned int' '*'     |     |-ParenExpr 0x131942558 <col:7, col:18> 'unsigned int'     |     | `-BinaryOperator 0x131942538 <col:8, col:11> 'unsigned int' '\/'     |     |   |-ImplicitCastExpr 0x131942520 <col:8> 'unsigned int' <IntegralCast>     |     |   | `-IntegerLiteral 0x1319424c8 <col:8> 'int' 48     |     |   `-ImplicitCastExpr 0x131942508 <col:11> 'unsigned int' <LValueToRValue>     |     |     `-DeclRefExpr 0x1319424e8 <col:11> 'unsigned int' lvalue Var 0x131928730 'md_size' 'unsigned int'     |     `-ImplicitCastExpr 0x131942598 <col:20> 'unsigned int' <LValueToRValue>     |       `-DeclRefExpr 0x131942578 <col:20> 'unsigned int' lvalue Var 0x131928730 'md_size' 'unsigned int'     |-CallExpr 0x131942798 <line:30:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1319426e8 <col:2> 'int ()' Function 0x131942630 'EVP_MD_CTX_init' 'int ()'     | `-UnaryOperator 0x131942780 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x131942760 <col:19> '<dependent type>' contains-errors lvalue     |-CallExpr 0x131942fd0 <line:32:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x131942eb8 <col:2> 'int ()' Function 0x131942e00 'EVP_DigestInit_ex' 'int ()'     | |-UnaryOperator 0x131942f98 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x131942f78 <col:23> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x131942f08 <col:30> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x131942fb0 <col:36> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1319431e8 <line:33:2, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1319430e8 <col:2> 'int ()' Function 0x131943030 'EVP_DigestUpdate' 'int ()'     | |-UnaryOperator 0x1319431d0 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x1319431b0 <col:20> '<dependent type>' contains-errors lvalue     | |-DeclRefExpr 0x131943138 <col:27> 'unsigned char *' lvalue Var 0x131928438 'mac_sec' 'unsigned char *'     | `-DeclRefExpr 0x131943158 <col:35> 'unsigned int' lvalue Var 0x131928730 'md_size' 'unsigned int'     |-CallExpr 0x131943338 <line:34:2, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x131943220 <col:2> 'int ()' Function 0x131943030 'EVP_DigestUpdate' 'int ()'     | |-UnaryOperator 0x131943300 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x1319432e0 <col:20> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x131943318 <col:27> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x131943288 <col:38> 'int' lvalue Var 0x131941800 'npad' 'int'     |-CallExpr 0x131943470 <line:35:2, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x131943370 <col:2> 'int ()' Function 0x131943030 'EVP_DigestUpdate' 'int ()'     | |-UnaryOperator 0x131943458 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x131943438 <col:20> '<dependent type>' contains-errors lvalue     | |-DeclRefExpr 0x1319433c0 <col:27> 'unsigned char *' lvalue Var 0x1319284b8 'seq' 'unsigned char *'     | `-IntegerLiteral 0x1319433e0 <col:31> 'int' 8     |-BinaryOperator 0x1319435b0 <line:36:2, col:16> 'unsigned char' contains-errors '='     | |-DeclRefExpr 0x1319434a8 <col:2> 'unsigned char' lvalue Var 0x131928680 'rec_char' 'unsigned char'     | `-CXXDependentScopeMemberExpr 0x131943568 <col:11, col:16> '<dependent type>' contains-errors lvalue ->type     |   `-RecoveryExpr 0x131943548 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1319436e8 <line:37:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1319435d0 <col:2> 'int ()' Function 0x131943030 'EVP_DigestUpdate' 'int ()'     | |-UnaryOperator 0x1319436d0 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x1319436b0 <col:20> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x131943640 <col:27, col:28> 'unsigned char *' prefix '&' cannot overflow     | | `-DeclRefExpr 0x131943620 <col:28> 'unsigned char' lvalue Var 0x131928680 'rec_char' 'unsigned char'     | `-IntegerLiteral 0x131943658 <col:37> 'int' 1     |-BinaryOperator 0x131943778 <line:38:2, col:4> 'unsigned char *' '='     | |-DeclRefExpr 0x131943720 <col:2> 'unsigned char *' lvalue Var 0x131928600 'p' 'unsigned char *'     | `-ImplicitCastExpr 0x131943760 <col:4> 'unsigned char *' <LValueToRValue>     |   `-DeclRefExpr 0x131943740 <col:4> 'unsigned char *' lvalue ParmVar 0x1319281d8 'md' 'unsigned char *'     |-CallExpr 0x131944d48 <line:52:2, col:33> 'int'     | |-ImplicitCastExpr 0x131944d30 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x131944cb8 <col:2> 'int ()' Function 0x131944c00 'ssl3_record_sequence_update' 'int ()'     | `-ImplicitCastExpr 0x131944d70 <col:30> 'unsigned char *' <LValueToRValue>     |   `-DeclRefExpr 0x131944cd8 <col:30> 'unsigned char *' lvalue Var 0x1319284b8 'seq' 'unsigned char *'     `-ReturnStmt 0x131944df8 <line:53:2, col:16>       `-ImplicitCastExpr 0x131944de0 <col:8, col:16> 'int' <IntegralCast>         `-ImplicitCastExpr 0x131944dc8 <col:8, col:16> 'unsigned int' <LValueToRValue>           `-ParenExpr 0x131944da8 <col:8, col:16> 'unsigned int' lvalue             `-DeclRefExpr 0x131944d88 <col:9> 'unsigned int' lvalue Var 0x131928730 'md_size' 'unsigned int' ","20809":"`-FunctionDecl 0x14d1282c8  line:1:17 invalid DrawPathLineToHorizontalAbsolute 'int (int *, const double)'   |-ParmVarDecl 0x14d128128 <col:50, col:63> col:63 invalid wand 'int *'   |-ParmVarDecl 0x14d1281a8 <line:2:3, col:16> col:16 used x 'const double'   `-CompoundStmt 0x14d809160 <line:3:1, line:9:1>     |-CallExpr 0x14d128660 <line:5:3, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14d128538 <col:3> 'int ()' Function 0x14d128428 'assert' 'int ()'     | `-BinaryOperator 0x14d128640 <col:10, col:29> 'int' contains-errors '=='     |   |-CXXDependentScopeMemberExpr 0x14d128578 <col:10, col:16> '<dependent type>' contains-errors lvalue ->signature     |   | `-RecoveryExpr 0x14d128558 <col:10> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x14d128620 <col:29> '<dependent type>' contains-errors lvalue     `-CallExpr 0x14d809128 <line:8:3, col:51> '<dependent type>' contains-errors       |-DeclRefExpr 0x14d809058 <col:3> 'int ()' Function 0x14d808fa0 'DrawPathLineToHorizontal' 'int ()'       |-RecoveryExpr 0x14d809078 <col:28> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x14d809108 <col:33> '<dependent type>' contains-errors lvalue       `-DeclRefExpr 0x14d8090b0 <col:50> 'const double' lvalue ParmVar 0x14d1281a8 'x' 'const double' ","20200":"`-FunctionDecl 0x14b027578  line:1:12 invalid pagemap_pte_range 'int (int *, unsigned long, unsigned long, struct mm_walk *)' static   |-ParmVarDecl 0x14b00dd28 <col:30, col:37> col:37 invalid pmd 'int *'   |-ParmVarDecl 0x14b00dda8 <col:42, col:56> col:56 used addr 'unsigned long'   |-ParmVarDecl 0x14b00de28 <col:62, col:76> col:76 used end 'unsigned long'   |-ParmVarDecl 0x14b027428 <line:2:9, col:25> col:25 used walk 'struct mm_walk *'   `-CompoundStmt 0x15b122ff0 <line:3:1, line:36:1>     |-DeclStmt 0x14b027828 <line:4:2, col:28>     | |-RecordDecl 0x14b027640 <col:2, col:9> col:9 struct vm_area_struct     | `-VarDecl 0x14b0277a8 <col:2, col:25> col:25 used vma 'struct vm_area_struct *'     |-DeclStmt 0x14b027a88 <line:5:2, col:40>     | |-RecordDecl 0x14b027840 <col:2, col:9> col:9 struct pagemapread     | `-VarDecl 0x14b0279a8 <col:2, col:33> col:22 used pm 'struct pagemapread *' cinit     |   `-RecoveryExpr 0x14b027a48 <col:27, col:33> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14b027a10 <col:27> 'struct mm_walk *' lvalue ParmVar 0x14b027428 'walk' 'struct mm_walk *'     |-DeclStmt 0x14b027b58 <line:7:2, col:13>     | `-VarDecl 0x14b027ad0 <col:2, col:12> col:6 used err 'int' cinit     |   `-IntegerLiteral 0x14b027b38 <col:12> 'int' 0     |-CallExpr 0x14b027d70 <line:9:2, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b027cd0 <col:2> 'int ()' Function 0x14b027c18 'split_huge_page_pmd' 'int ()'     | |-RecoveryExpr 0x14b027d28 <col:22, col:28> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14b027cf0 <col:22> 'struct mm_walk *' lvalue ParmVar 0x14b027428 'walk' 'struct mm_walk *'     | `-RecoveryExpr 0x14b027d50 <col:32> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14b027f70 <line:12:2, col:31> 'struct vm_area_struct *' contains-errors '='     | |-DeclRefExpr 0x14b027da0 <col:2> 'struct vm_area_struct *' lvalue Var 0x14b0277a8 'vma' 'struct vm_area_struct *'     | `-CallExpr 0x14b027f40 <col:8, col:31> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14b027ea0 <col:8> 'int ()' Function 0x14b027de8 'find_vma' 'int ()'     |   |-RecoveryExpr 0x14b027ef8 <col:17, col:23> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14b027ec0 <col:17> 'struct mm_walk *' lvalue ParmVar 0x14b027428 'walk' 'struct mm_walk *'     |   `-DeclRefExpr 0x14b027f20 <col:27> 'unsigned long' lvalue ParmVar 0x14b00dda8 'addr' 'unsigned long'     |-ForStmt 0x15b122e38 <line:13:2, line:31:2>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-BinaryOperator 0x14b028000 <line:13:9, col:17> 'int' '!='     | | |-ImplicitCastExpr 0x14b027fd0 <col:9> 'unsigned long' <LValueToRValue>     | | | `-DeclRefExpr 0x14b027f90 <col:9> 'unsigned long' lvalue ParmVar 0x14b00dda8 'addr' 'unsigned long'     | | `-ImplicitCastExpr 0x14b027fe8 <col:17> 'unsigned long' <LValueToRValue>     | |   `-DeclRefExpr 0x14b027fb0 <col:17> 'unsigned long' lvalue ParmVar 0x14b00de28 'end' 'unsigned long'     | |-CompoundAssignOperator 0x14b0280a8 <col:22, col:30> 'unsigned long' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | | |-DeclRefExpr 0x14b028020 <col:22> 'unsigned long' lvalue ParmVar 0x14b00dda8 'addr' 'unsigned long'     | | `-RecoveryExpr 0x14b028088 <col:30> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x15b122e10 <col:41, line:31:2>     |   |-IfStmt 0x14b0282e8 <line:17:3, line:18:33>     |   | |-BinaryOperator 0x14b0281b8 <line:17:7, col:34> 'int' contains-errors '&&'     |   | | |-DeclRefExpr 0x14b0280d8 <col:7> 'struct vm_area_struct *' lvalue Var 0x14b0277a8 'vma' 'struct vm_area_struct *'     |   | | `-ParenExpr 0x14b028198 <col:14, col:34> 'int' contains-errors     |   | |   `-BinaryOperator 0x14b028178 <col:15, col:28> 'int' contains-errors '>='     |   | |     |-DeclRefExpr 0x14b0280f8 <col:15> 'unsigned long' lvalue ParmVar 0x14b00dda8 'addr' 'unsigned long'     |   | |     `-RecoveryExpr 0x14b028150 <col:23, col:28> '<dependent type>' contains-errors lvalue     |   | |       `-DeclRefExpr 0x14b028118 <col:23> 'struct vm_area_struct *' lvalue Var 0x14b0277a8 'vma' 'struct vm_area_struct *'     |   | `-BinaryOperator 0x14b0282c8 <line:18:4, col:33> 'struct vm_area_struct *' contains-errors '='     |   |   |-DeclRefExpr 0x14b0281d8 <col:4> 'struct vm_area_struct *' lvalue Var 0x14b0277a8 'vma' 'struct vm_area_struct *'     |   |   `-CallExpr 0x14b028298 <col:10, col:33> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x14b0281f8 <col:10> 'int ()' Function 0x14b027de8 'find_vma' 'int ()'     |   |     |-RecoveryExpr 0x14b028250 <col:19, col:25> '<dependent type>' contains-errors lvalue     |   |     | `-DeclRefExpr 0x14b028218 <col:19> 'struct mm_walk *' lvalue ParmVar 0x14b027428 'walk' 'struct mm_walk *'     |   |     `-DeclRefExpr 0x14b028278 <col:29> 'unsigned long' lvalue ParmVar 0x14b00dda8 'addr' 'unsigned long'     |   |-IfStmt 0x15b122bf0 <line:21:3, line:27:3>     |   | |-BinaryOperator 0x15b1227e0 <line:21:7, line:22:30> 'int' contains-errors '&&'     |   | | |-BinaryOperator 0x15b122600 <line:21:7, col:36> 'int' contains-errors '&&'     |   | | | |-DeclRefExpr 0x14b028308 <col:7> 'struct vm_area_struct *' lvalue Var 0x14b0277a8 'vma' 'struct vm_area_struct *'     |   | | | `-ParenExpr 0x14b0283c8 <col:14, col:36> 'int' contains-errors     |   | | |   `-BinaryOperator 0x14b0283a8 <col:15, col:32> 'int' contains-errors '<='     |   | | |     |-RecoveryExpr 0x14b028360 <col:15, col:20> '<dependent type>' contains-errors lvalue     |   | | |     | `-DeclRefExpr 0x14b028328 <col:15> 'struct vm_area_struct *' lvalue Var 0x14b0277a8 'vma' 'struct vm_area_struct *'     |   | | |     `-DeclRefExpr 0x14b028388 <col:32> 'unsigned long' lvalue ParmVar 0x14b00dda8 'addr' 'unsigned long'     |   | | `-UnaryOperator 0x15b1227c8 <line:22:7, col:30> 'int' prefix '!' cannot overflow     |   | |   `-CallExpr 0x15b122788 <col:8, col:30> 'int'     |   | |     |-ImplicitCastExpr 0x15b122770 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | |     | `-DeclRefExpr 0x15b122700 <col:8> 'int ()' Function 0x15b122648 'is_vm_hugetlb_page' 'int ()'     |   | |     `-ImplicitCastExpr 0x15b1227b0 <col:27> 'struct vm_area_struct *' <LValueToRValue>     |   | |       `-DeclRefExpr 0x15b122720 <col:27> 'struct vm_area_struct *' lvalue Var 0x14b0277a8 'vma' 'struct vm_area_struct *'     |   | `-CompoundStmt 0x15b122be0 <col:33, line:27:3>     |   `-IfStmt 0x15b122df0 <line:29:3, line:30:11>     |     |-ImplicitCastExpr 0x15b122d90 <line:29:7> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x15b122d70 <col:7> 'int' lvalue Var 0x14b027ad0 'err' 'int'     |     `-ReturnStmt 0x15b122de0 <line:30:4, col:11>     |       `-ImplicitCastExpr 0x15b122dc8 <col:11> 'int' <LValueToRValue>     |         `-DeclRefExpr 0x15b122da8 <col:11> 'int' lvalue Var 0x14b027ad0 'err' 'int'     |-CallExpr 0x15b122f88 <line:33:2, col:15> 'int'     | `-ImplicitCastExpr 0x15b122f70 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x15b122f50 <col:2> 'int ()' Function 0x15b122e98 'cond_resched' 'int ()'     `-ReturnStmt 0x15b122fe0 <line:35:2, col:9>       `-ImplicitCastExpr 0x15b122fc8 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x15b122fa8 <col:9> 'int' lvalue Var 0x14b027ad0 'err' 'int' ","21178":"`-FunctionDecl 0x1481284c8  line:1:1 invalid check_constrained_delegation 'int (int, int *, int *, int *, int *, int)'   |-ParmVarDecl 0x1481280f0 <col:30, col:43> col:43 invalid context 'int'   |-ParmVarDecl 0x1481281a8 <line:2:9, col:33> col:33 invalid config 'int *'   |-ParmVarDecl 0x148128228 <line:3:9, col:14> col:14 invalid clientdb 'int *'   |-ParmVarDecl 0x1481282a8 <line:4:9, col:23> col:23 invalid client 'int *'   |-ParmVarDecl 0x148128328 <line:5:9, col:23> col:23 invalid server 'int *'   |-ParmVarDecl 0x1481283a8 <line:6:9, col:30> col:30 invalid target 'int'   `-CompoundStmt 0x1481429a0 <line:7:1, line:46:1>     |-DeclStmt 0x148128620 <line:8:5, col:50>     | `-VarDecl 0x1481285b8 <col:5, col:47> col:47 invalid acl 'const int *'     |-UnaryExprOrTypeTraitExpr 0x148128690 <line:10:5, col:12> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x148128670 <col:12> '<dependent type>' contains-errors lvalue     |-IfStmt 0x148141c88 <line:13:5, line:18:5>     | |-UnaryOperator 0x1481419e8 <line:13:8, col:85> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x1481419b0 <col:9, col:85> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x148141810 <col:9> 'int ()' Function 0x148128758 'krb5_realm_compare' 'int ()'     | |   |-RecoveryExpr 0x148141830 <col:28> '<dependent type>' contains-errors lvalue     | |   |-CXXDependentScopeMemberExpr 0x1481418b8 <col:37, col:51> '<dependent type>' contains-errors lvalue .principal     | |   | `-CXXDependentScopeMemberExpr 0x148141870 <col:37, col:45> '<dependent type>' contains-errors lvalue ->entry     | |   |   `-RecoveryExpr 0x148141850 <col:37> '<dependent type>' contains-errors lvalue     | |   `-CXXDependentScopeMemberExpr 0x148141968 <col:62, col:76> '<dependent type>' contains-errors lvalue .principal     | |     `-CXXDependentScopeMemberExpr 0x148141920 <col:62, col:70> '<dependent type>' contains-errors lvalue ->entry     | |       `-RecoveryExpr 0x148141900 <col:62> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x148141c68 <col:88, line:18:5>     |   |-CallExpr 0x148141be0 <line:15:2, line:16:11> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x148141af8 <line:15:2> 'int ()' Function 0x148141a40 'kdc_log' 'int ()'     |   | |-RecoveryExpr 0x148141b18 <col:10> '<dependent type>' contains-errors lvalue     |   | |-RecoveryExpr 0x148141b38 <col:19> '<dependent type>' contains-errors lvalue     |   | |-IntegerLiteral 0x148141b58 <col:27> 'int' 0     |   | `-StringLiteral 0x148141bc0 <line:16:6> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x148141c58 <line:17:2, col:9>     |     `-RecoveryExpr 0x148141c38 <col:9> '<dependent type>' contains-errors lvalue     |-IfStmt 0x148142890 <line:20:5, line:42:5> has_else     | |-CXXDependentScopeMemberExpr 0x148141cc8 <line:20:9, col:19> '<dependent type>' contains-errors lvalue ->hdb_check_constrained_delegation     | | `-RecoveryExpr 0x148141ca8 <col:9> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x148141f20 <col:53, line:24:5>     | | `-IfStmt 0x148141f00 <line:22:2, line:23:13>     | |   |-BinaryOperator 0x148141eb0 <line:22:6, col:13> 'int' contains-errors '=='     | |   | |-RecoveryExpr 0x148141e90 <col:6> '<dependent type>' contains-errors lvalue     | |   | `-IntegerLiteral 0x148141e50 <col:13> 'int' 0     | |   `-ReturnStmt 0x148141ef0 <line:23:6, col:13>     | |     `-IntegerLiteral 0x148141ed0 <col:13> 'int' 0     | `-CompoundStmt 0x148142868 <line:24:12, line:42:5>     |   |-IfStmt 0x148142298 <line:26:2, line:27:13>     |   | |-BinaryOperator 0x148142248 <line:26:6, col:91> 'int' contains-errors '=='     |   | | |-CallExpr 0x1481421b8 <col:6, col:86> '<dependent type>' contains-errors     |   | | | |-DeclRefExpr 0x148142018 <col:6> 'int ()' Function 0x148141f60 'krb5_principal_compare' 'int ()'     |   | | | |-RecoveryExpr 0x148142038 <col:29> '<dependent type>' contains-errors lvalue     |   | | | |-CXXDependentScopeMemberExpr 0x1481420c0 <col:38, col:52> '<dependent type>' contains-errors lvalue .principal     |   | | | | `-CXXDependentScopeMemberExpr 0x148142078 <col:38, col:46> '<dependent type>' contains-errors lvalue ->entry     |   | | | |   `-RecoveryExpr 0x148142058 <col:38> '<dependent type>' contains-errors lvalue     |   | | | `-CXXDependentScopeMemberExpr 0x148142170 <col:63, col:77> '<dependent type>' contains-errors lvalue .principal     |   | | |   `-CXXDependentScopeMemberExpr 0x148142128 <col:63, col:71> '<dependent type>' contains-errors lvalue ->entry     |   | | |     `-RecoveryExpr 0x148142108 <col:63> '<dependent type>' contains-errors lvalue     |   | | `-RecoveryExpr 0x148142228 <col:91> '<dependent type>' contains-errors lvalue     |   | `-ReturnStmt 0x148142288 <line:27:6, col:13>     |   |   `-IntegerLiteral 0x148142268 <col:13> 'int' 0     |   |-IfStmt 0x148142620 <line:30:2, line:33:2>     |   | |-RecoveryExpr 0x1481424a0 <line:30:6> '_Bool' contains-errors     |   | `-CompoundStmt 0x148142608 <col:11, line:33:2>     |   |   `-CallExpr 0x1481425e0 <line:31:6, col:38> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x1481425a0 <col:6> 'int ()' Function 0x1481424e8 'krb5_clear_error_message' 'int ()'     |   |     `-RecoveryExpr 0x1481425c0 <col:31> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x148142848 <line:35:2, line:40:2>     |     |-RecoveryExpr 0x148142640 <line:35:6> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x148142838 <col:11, line:40:2>     `-CallExpr 0x148142960 <line:43:5, line:44:11> '<dependent type>' contains-errors       |-DeclRefExpr 0x1481428c0 <line:43:5> 'int ()' Function 0x148141a40 'kdc_log' 'int ()'       |-RecoveryExpr 0x1481428e0 <col:13> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x148142900 <col:22> '<dependent type>' contains-errors lvalue       |-IntegerLiteral 0x148142920 <col:30> 'int' 0       `-StringLiteral 0x148142940 <line:44:6> 'char[4]' lvalue \"STR\" ","20728":"`-FunctionDecl 0x12b142268  col:22 implicit used malloc 'void *(unsigned long)' extern   |-ParmVarDecl 0x12b142368 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-BuiltinAttr 0x12b142310 <<invalid sloc>> Implicit 871   `-AllocSizeAttr 0x12b1423d8 <col:22> Implicit 1 ","20497":"`-FunctionDecl 0x12380dfa8  line:1:20 invalid realloc_buffer 'int *(int *, int *, int, int)' static   |-ParmVarDecl 0x12380dd28 <col:35, col:48> col:48 invalid screen 'int *'   |-ParmVarDecl 0x12380dda8 <col:56, col:68> col:68 invalid buffer 'int *'   |-ParmVarDecl 0x12380de28 <col:76, col:80> col:80 used new_rows 'int'   |-ParmVarDecl 0x12380dea8 <col:90, col:94> col:94 used new_cols 'int'   `-CompoundStmt 0x123828900 <line:2:1, line:23:1>     |-DeclStmt 0x12380e3d8 <line:4:3, col:15>     | |-VarDecl 0x12380e2d8 <col:3, col:7> col:7 used row 'int'     | `-VarDecl 0x12380e358 <col:3, col:12> col:12 used col 'int'     |-ForStmt 0x123828680 <line:6:3, line:17:3>     | |-BinaryOperator 0x123827840 <line:6:7, col:13> 'int' '='     | | |-DeclRefExpr 0x123827800 <col:7> 'int' lvalue Var 0x12380e2d8 'row' 'int'     | | `-IntegerLiteral 0x123827820 <col:13> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x1238278d0 <col:16, col:22> 'int' '<'     | | |-ImplicitCastExpr 0x1238278a0 <col:16> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x123827860 <col:16> 'int' lvalue Var 0x12380e2d8 'row' 'int'     | | `-ImplicitCastExpr 0x1238278b8 <col:22> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x123827880 <col:22> 'int' lvalue ParmVar 0x12380de28 'new_rows' 'int'     | |-UnaryOperator 0x123827910 <col:32, col:35> 'int' postfix '++'     | | `-DeclRefExpr 0x1238278f0 <col:32> 'int' lvalue Var 0x12380e2d8 'row' 'int'     | `-CompoundStmt 0x123828668 <col:39, line:17:3>     |   `-ForStmt 0x123828630 <line:7:5, line:16:5>     |     |-BinaryOperator 0x123827968 <line:7:9, col:15> 'int' '='     |     | |-DeclRefExpr 0x123827928 <col:9> 'int' lvalue Var 0x12380e358 'col' 'int'     |     | `-IntegerLiteral 0x123827948 <col:15> 'int' 0     |     |-<<<NULL>>>     |     |-BinaryOperator 0x1238279f8 <col:18, col:24> 'int' '<'     |     | |-ImplicitCastExpr 0x1238279c8 <col:18> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x123827988 <col:18> 'int' lvalue Var 0x12380e358 'col' 'int'     |     | `-ImplicitCastExpr 0x1238279e0 <col:24> 'int' <LValueToRValue>     |     |   `-DeclRefExpr 0x1238279a8 <col:24> 'int' lvalue ParmVar 0x12380dea8 'new_cols' 'int'     |     |-UnaryOperator 0x123827a38 <col:34, col:37> 'int' postfix '++'     |     | `-DeclRefExpr 0x123827a18 <col:34> 'int' lvalue Var 0x12380e358 'col' 'int'     |     `-CompoundStmt 0x123828618 <col:41, line:16:5>     |       `-IfStmt 0x1238285e8 <line:10:7, line:15:7> has_else     |         |-BinaryOperator 0x123827d20 <line:10:10, col:56> 'int' contains-errors '&&'     |         | |-BinaryOperator 0x123827c58 <col:10, col:34> 'int' contains-errors '&&'     |         | | |-RecoveryExpr 0x123827b90 <col:10> '<dependent type>' contains-errors lvalue     |         | | `-BinaryOperator 0x123827c38 <col:20, col:34> 'int' contains-errors '<'     |         | |   |-DeclRefExpr 0x123827bb0 <col:20> 'int' lvalue Var 0x12380e2d8 'row' 'int'     |         | |   `-CXXDependentScopeMemberExpr 0x123827bf0 <col:26, col:34> '<dependent type>' contains-errors lvalue ->rows     |         | |     `-RecoveryExpr 0x123827bd0 <col:26> '<dependent type>' contains-errors lvalue     |         | `-BinaryOperator 0x123827d00 <col:42, col:56> 'int' contains-errors '<'     |         |   |-DeclRefExpr 0x123827c78 <col:42> 'int' lvalue Var 0x12380e358 'col' 'int'     |         |   `-CXXDependentScopeMemberExpr 0x123827cb8 <col:48, col:56> '<dependent type>' contains-errors lvalue ->cols     |         |     `-RecoveryExpr 0x123827c98 <col:48> '<dependent type>' contains-errors lvalue     |         |-BinaryOperator 0x123827fa8 <line:11:9, col:52> '<dependent type>' contains-errors '='     |         | |-UnaryOperator 0x123827f58 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow     |         | | `-ImplicitCastExpr 0x123827f40 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |         | |   `-RecoveryExpr 0x123827f20 <col:10> '<dependent type>' contains-errors lvalue     |         | `-ArraySubscriptExpr 0x123827f88 <col:21, col:52> '<dependent type>' contains-errors lvalue     |         |   |-ImplicitCastExpr 0x123827f70 <col:21> '<dependent type>' contains-errors <LValueToRValue>     |         |   | `-RecoveryExpr 0x123827d88 <col:21> '<dependent type>' contains-errors lvalue     |         |   `-BinaryOperator 0x123827e70 <col:28, col:49> '<dependent type>' contains-errors '+'     |         |     |-BinaryOperator 0x123827e30 <col:28, col:42> '<dependent type>' contains-errors '*'     |         |     | |-DeclRefExpr 0x123827da8 <col:28> 'int' lvalue Var 0x12380e2d8 'row' 'int'     |         |     | `-CXXDependentScopeMemberExpr 0x123827de8 <col:34, col:42> '<dependent type>' contains-errors lvalue ->cols     |         |     |   `-RecoveryExpr 0x123827dc8 <col:34> '<dependent type>' contains-errors lvalue     |         |     `-DeclRefExpr 0x123827e50 <col:49> 'int' lvalue Var 0x12380e358 'col' 'int'     |         `-CompoundStmt 0x1238285c8 <line:12:12, line:15:7>     |           |-BinaryOperator 0x1238284c0 <line:13:9, col:30> '<dependent type>' contains-errors '='     |           | |-ArraySubscriptExpr 0x123828480 <col:9, col:26> '<dependent type>' contains-errors lvalue     |           | | |-ImplicitCastExpr 0x123828468 <col:9, col:19> '<dependent type>' contains-errors <LValueToRValue>     |           | | | `-RecoveryExpr 0x123828420 <col:9, col:19> '<dependent type>' contains-errors lvalue     |           | | |   `-DeclRefExpr 0x123827fc8 <col:9> 'int' lvalue ParmVar 0x12380dea8 'new_cols' 'int'     |           | | `-IntegerLiteral 0x123828448 <col:25> 'int' 0     |           | `-IntegerLiteral 0x1238284a0 <col:30> 'int' 0     |           `-BinaryOperator 0x1238285a8 <line:14:9, col:33> '<dependent type>' contains-errors '='     |             |-RecoveryExpr 0x123828518 <col:9, col:19> '<dependent type>' contains-errors lvalue     |             | `-DeclRefExpr 0x1238284e0 <col:9> 'int' lvalue ParmVar 0x12380dea8 'new_cols' 'int'     |             `-CXXDependentScopeMemberExpr 0x123828560 <col:25, col:33> '<dependent type>' contains-errors lvalue ->pen     |               `-RecoveryExpr 0x123828540 <col:25> '<dependent type>' contains-errors lvalue     |-IfStmt 0x123828898 <line:19:3, line:20:44>     | |-RecoveryExpr 0x1238286b8 <line:19:6> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x123828868 <line:20:5, col:44> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1238287b8 <col:5> 'int ()' Function 0x123828700 'vterm_allocator_free' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x123828800 <col:26, col:34> '<dependent type>' contains-errors lvalue ->vt     |   | `-RecoveryExpr 0x1238287d8 <col:26> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x123828848 <col:38> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1238288f0 <line:22:3, col:10>       `-RecoveryExpr 0x1238288d0 <col:10> '<dependent type>' contains-errors lvalue ","21234":"`-FunctionDecl 0x141143078  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x141143178 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x1411431e0 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x141143248 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x141143120 <<invalid sloc>> Implicit 900 ","20830":"`-FunctionDecl 0x149128258  col:7 invalid sds_realloc 'void *(void *, int)'   |-ParmVarDecl 0x1491280d8 <col:19, col:25> col:25 used ptr 'void *'   |-ParmVarDecl 0x149128170 <col:30, col:37> col:37 invalid size 'int'   `-CompoundStmt 0x149128510 <col:43, col:73>     `-ReturnStmt 0x149128500 <col:45, col:70>       `-CallExpr 0x1491284d0 <col:52, col:70> '<dependent type>' contains-errors         |-DeclRefExpr 0x149128470 <col:52> 'int ()' Function 0x1491283b8 's_realloc' 'int ()'         |-DeclRefExpr 0x149128490 <col:62> 'void *' lvalue ParmVar 0x1491280d8 'ptr' 'void *'         `-RecoveryExpr 0x1491284b0 <col:66> '<dependent type>' contains-errors lvalue ","21246":"`-FunctionDecl 0x15000e358  line:1:14 smack_of_msq 'char *(struct msg_queue *)' static   |-ParmVarDecl 0x15000e248 <col:27, col:45> col:45 used msq 'struct msg_queue *'   `-CompoundStmt 0x150026748 <line:2:1, line:4:1>     `-ReturnStmt 0x150026738 <line:3:2, col:29>       `-CStyleCastExpr 0x150026710 <col:9, col:29> 'char *' contains-errors <Dependent>         `-CXXDependentScopeMemberExpr 0x1500266b0 <col:17, col:29> '<dependent type>' contains-errors lvalue .security           `-RecoveryExpr 0x150026688 <col:17, col:22> '<dependent type>' contains-errors lvalue             `-DeclRefExpr 0x150026650 <col:17> 'struct msg_queue *' lvalue ParmVar 0x15000e248 'msq' 'struct msg_queue *' ","20851":"`-FunctionDecl 0x139009000  line:1:13 invalid __iov_iter_advance_iov 'void (struct iov_iter *, int)' static   |-ParmVarDecl 0x138010a48 <col:36, col:53> col:53 used i 'struct iov_iter *'   |-ParmVarDecl 0x138010ae0 <col:56, col:63> col:63 referenced invalid bytes 'int'   `-CompoundStmt 0x139009d48 <line:2:1, line:22:1>     `-IfStmt 0x139009d18 <line:3:2, line:21:2> has_else       |-CallExpr 0x1390092d0 <line:3:6, col:28> '<dependent type>' contains-errors       | |-DeclRefExpr 0x139009210 <col:6> 'int ()' Function 0x139009158 'likely' 'int ()'       | `-BinaryOperator 0x1390092b0 <col:13, col:27> 'int' contains-errors '=='       |   |-RecoveryExpr 0x139009268 <col:13, col:16> '<dependent type>' contains-errors lvalue       |   | `-DeclRefExpr 0x139009230 <col:13> 'struct iov_iter *' lvalue ParmVar 0x138010a48 'i' 'struct iov_iter *'       |   `-IntegerLiteral 0x139009290 <col:27> 'int' 1       |-CompoundStmt 0x1390093a8 <col:31, line:5:2>       | `-CompoundAssignOperator 0x139009378 <line:4:3, col:20> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'       |   |-RecoveryExpr 0x139009330 <col:3, col:6> '<dependent type>' contains-errors lvalue       |   | `-DeclRefExpr 0x1390092f8 <col:3> 'struct iov_iter *' lvalue ParmVar 0x138010a48 'i' 'struct iov_iter *'       |   `-RecoveryExpr 0x139009358 <col:20> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x139009cf0 <line:5:9, line:21:2>         |-DeclStmt 0x139009608 <line:6:3, col:35>         | |-RecordDecl 0x1390093c0 <col:9, col:16> col:16 struct iovec         | `-VarDecl 0x139009528 <col:3, col:32> col:23 used iov 'const struct iovec *' cinit         |   `-RecoveryExpr 0x1390095c8 <col:29, col:32> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x139009590 <col:29> 'struct iov_iter *' lvalue ParmVar 0x138010a48 'i' 'struct iov_iter *'         |-WhileStmt 0x139009bb8 <line:9:3, line:18:3>         | |-RecoveryExpr 0x139009638 <line:9:10> '<dependent type>' contains-errors lvalue         | `-CompoundStmt 0x139009b90 <col:17, line:18:3>         |   |-DeclStmt 0x139009930 <line:10:4, col:46>         |   | `-VarDecl 0x139009670 <col:4, col:45> col:8 used copy 'int' cinit         |   |   `-CallExpr 0x139009900 <col:15, col:45> '<dependent type>' contains-errors         |   |     |-DeclRefExpr 0x1390097b8 <col:15> 'int ()' Function 0x139009700 'min' 'int ()'         |   |     |-RecoveryExpr 0x1390097d8 <col:19> '<dependent type>' contains-errors lvalue         |   |     `-BinaryOperator 0x1390098e0 <col:26, col:41> '<dependent type>' contains-errors '-'         |   |       |-RecoveryExpr 0x139009830 <col:26, col:31> '<dependent type>' contains-errors lvalue         |   |       | `-DeclRefExpr 0x1390097f8 <col:26> 'const struct iovec *' contains-errors lvalue Var 0x139009528 'iov' 'const struct iovec *'         |   |       `-RecoveryExpr 0x1390098c0 <col:41> '<dependent type>' contains-errors lvalue         |   |-CompoundAssignOperator 0x1390099b0 <line:12:4, col:13> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'         |   | |-RecoveryExpr 0x139009968 <col:4> '<dependent type>' contains-errors lvalue         |   | | `-DeclRefExpr 0x139009948 <col:4> 'int' lvalue ParmVar 0x138010ae0 'bytes' 'int'         |   | `-DeclRefExpr 0x139009990 <col:13> 'int' contains-errors lvalue Var 0x139009670 'copy' 'int'         |   `-IfStmt 0x139009b70 <line:14:4, line:17:4>         |     |-BinaryOperator 0x139009ab8 <line:14:8, col:24> 'int' contains-errors '=='         |     | |-RecoveryExpr 0x139009a38 <col:8, col:13> '<dependent type>' contains-errors lvalue         |     | | `-DeclRefExpr 0x139009a00 <col:8> 'const struct iovec *' contains-errors lvalue Var 0x139009528 'iov' 'const struct iovec *'         |     | `-RecoveryExpr 0x139009a98 <col:24> '<dependent type>' contains-errors lvalue         |     `-CompoundStmt 0x139009b58 <col:30, line:17:4>         |       `-RecoveryExpr 0x139009af8 <line:15:5, col:8> '<dependent type>' contains-errors lvalue         |         `-DeclRefExpr 0x139009ad8 <col:5> 'const struct iovec *' contains-errors lvalue Var 0x139009528 'iov' 'const struct iovec *'         `-BinaryOperator 0x139009c58 <line:19:3, col:12> '<dependent type>' contains-errors '='           |-RecoveryExpr 0x139009c10 <col:3, col:6> '<dependent type>' contains-errors lvalue           | `-DeclRefExpr 0x139009bd8 <col:3> 'struct iov_iter *' lvalue ParmVar 0x138010a48 'i' 'struct iov_iter *'           `-DeclRefExpr 0x139009c38 <col:12> 'const struct iovec *' contains-errors lvalue Var 0x139009528 'iov' 'const struct iovec *' ","20943":"`-FunctionDecl 0x14d00e350  line:1:6 __refill_cfs_bandwidth_runtime 'void (struct cfs_bandwidth *)'   |-ParmVarDecl 0x14d00e248 <col:37, col:59> col:59 used cfs_b 'struct cfs_bandwidth *'   `-CompoundStmt 0x14d026e40 <line:2:1, line:12:1>     |-IfStmt 0x14d026748 <line:5:2, line:6:3>     | |-BinaryOperator 0x14d026718 <line:5:6, col:22> 'int' contains-errors '=='     | | |-RecoveryExpr 0x14d026698 <col:6, col:13> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x14d026660 <col:6> 'struct cfs_bandwidth *' lvalue ParmVar 0x14d00e248 'cfs_b' 'struct cfs_bandwidth *'     | | `-RecoveryExpr 0x14d0266f8 <col:22> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14d026738 <line:6:3>     |-BinaryOperator 0x14d026b08 <line:9:2, col:26> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14d026a80 <col:2, col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14d026a48 <col:2> 'struct cfs_bandwidth *' lvalue ParmVar 0x14d00e248 'cfs_b' 'struct cfs_bandwidth *'     | `-RecoveryExpr 0x14d026ae0 <col:19, col:26> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14d026aa8 <col:19> 'struct cfs_bandwidth *' lvalue ParmVar 0x14d00e248 'cfs_b' 'struct cfs_bandwidth *'     |-BinaryOperator 0x14d026da8 <line:10:2, col:58> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14d026b60 <col:2, col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14d026b28 <col:2> 'struct cfs_bandwidth *' lvalue ParmVar 0x14d00e248 'cfs_b' 'struct cfs_bandwidth *'     | `-BinaryOperator 0x14d026d88 <col:27, col:58> '<dependent type>' contains-errors '+'     |   |-RecoveryExpr 0x14d026d68 <col:27> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x14d026d00 <col:33, col:58> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14d026c80 <col:33> 'int ()' Function 0x14d026bc8 'ktime_to_ns' 'int ()'     |     `-RecoveryExpr 0x14d026cd8 <col:45, col:52> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14d026ca0 <col:45> 'struct cfs_bandwidth *' lvalue ParmVar 0x14d00e248 'cfs_b' 'struct cfs_bandwidth *'     `-UnaryOperator 0x14d026e28 <line:11:2, col:20> '<dependent type>' contains-errors postfix '++' cannot overflow       `-RecoveryExpr 0x14d026e00 <col:2, col:9> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x14d026dc8 <col:2> 'struct cfs_bandwidth *' lvalue ParmVar 0x14d00e248 'cfs_b' 'struct cfs_bandwidth *' ","21145":"`-FunctionDecl 0x1220285b0  col:35 implicit used index 'char *(const char *, int)' extern   |-ParmVarDecl 0x1220286b0 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x122028718 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x122028658 <<invalid sloc>> Implicit 952 ","21114":"`-FunctionDecl 0x14b00ddf8  line:1:1 referenced invalid zsetstrokecolor 'int (int *)'   |-ParmVarDecl 0x14b00dd28 <col:17, col:27> col:27 invalid i_ctx_p 'int *'   `-CompoundStmt 0x14b028288 <line:2:1, line:21:1>     |-DeclStmt 0x14b00df28 <line:3:5, col:13>     | `-VarDecl 0x14b00dec0 <col:5, col:9> col:9 used code 'int'     |-BinaryOperator 0x14b00e128 <line:5:5, col:31> 'int' contains-errors '='     | |-DeclRefExpr 0x14b00df40 <col:5> 'int' lvalue Var 0x14b00dec0 'code' 'int'     | `-CallExpr 0x14b00e100 <col:12, col:31> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14b00e0c0 <col:12> 'int ()' Function 0x14b00e008 'zswapcolors' 'int ()'     |   `-RecoveryExpr 0x14b00e0e0 <col:24> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14b00e208 <line:6:5, line:7:16>     | |-BinaryOperator 0x14b00e1a0 <line:6:9, col:16> 'int' '<'     | | |-ImplicitCastExpr 0x14b00e188 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x14b00e148 <col:9> 'int' lvalue Var 0x14b00dec0 'code' 'int'     | | `-IntegerLiteral 0x14b00e168 <col:16> 'int' 0     | `-ReturnStmt 0x14b00e1f8 <line:7:9, col:16>     |   `-ImplicitCastExpr 0x14b00e1e0 <col:16> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x14b00e1c0 <col:16> 'int' lvalue Var 0x14b00dec0 'code' 'int'     |-CallExpr 0x14b00e398 <line:11:5, col:19> 'int'     | |-ImplicitCastExpr 0x14b00e380 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14b00e308 <col:5> 'int ()' Function 0x14b00e250 'check_estack' 'int ()'     | `-IntegerLiteral 0x14b00e328 <col:18> 'int' 1     |-CallExpr 0x14b027b58 <line:13:5, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b027ab8 <col:5> 'int ()' Function 0x14b027a00 'push_op_estack' 'int ()'     | `-RecoveryExpr 0x14b027b38 <col:20> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14b027ce8 <line:15:5, col:29> 'int' contains-errors '='     | |-DeclRefExpr 0x14b027b80 <col:5> 'int' lvalue Var 0x14b00dec0 'code' 'int'     | `-CallExpr 0x14b027cc0 <col:12, col:29> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14b027c80 <col:12> 'int ()' Function 0x14b027bc8 'zsetcolor' 'int ()'     |   `-RecoveryExpr 0x14b027ca0 <col:22> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14b028220 <line:17:5, line:18:16>     | |-BinaryOperator 0x14b027d60 <line:17:9, col:17> 'int' '>='     | | |-ImplicitCastExpr 0x14b027d48 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x14b027d08 <col:9> 'int' lvalue Var 0x14b00dec0 'code' 'int'     | | `-IntegerLiteral 0x14b027d28 <col:17> 'int' 0     | `-ReturnStmt 0x14b028210 <line:18:9, col:16>     |   `-ImplicitCastExpr 0x14b027dd0 <col:16> 'int' <PointerToIntegral>     |     `-ImplicitCastExpr 0x14b027db8 <col:16> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x14b027d98 <col:16> 'int ()' Function 0x14b027a00 'push_op_estack' 'int ()'     `-ReturnStmt 0x14b028278 <line:20:5, col:12>       `-ImplicitCastExpr 0x14b028260 <col:12> 'int' <LValueToRValue>         `-DeclRefExpr 0x14b028240 <col:12> 'int' lvalue Var 0x14b00dec0 'code' 'int' ","20927":"`-FunctionDecl 0x15b00df18  line:1:12 invalid cms_copy_content 'int (int *, int *, unsigned int)' static   |-ParmVarDecl 0x15b00dd28 <col:29, col:34> col:34 invalid out 'int *'   |-ParmVarDecl 0x15b00dda8 <col:39, col:44> col:44 invalid in 'int *'   |-ParmVarDecl 0x15b00de28 <col:48, col:61> col:61 used flags 'unsigned int'   `-CompoundStmt 0x15a922d50 <line:2:2, line:59:2>     |-DeclStmt 0x15b00e0f0 <line:3:2, col:25>     | `-VarDecl 0x15b00e088 <col:2, col:24> col:16 used buf 'unsigned char[4096]'     |-DeclStmt 0x15b00e240 <line:4:2, col:14>     | |-VarDecl 0x15b00e120 <col:2, col:10> col:6 used r 'int' cinit     | | `-IntegerLiteral 0x15b00e188 <col:10> 'int' 0     | `-VarDecl 0x15b00e1c0 <col:2, col:13> col:13 used i 'int'     |-IfStmt 0x15b0280e8 <line:7:2, line:15:3> has_else     | |-BinaryOperator 0x15b00e300 <line:7:6, col:13> 'int' contains-errors '=='     | | |-RecoveryExpr 0x15b00e288 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x15b00e2e0 <col:13> '<dependent type>' contains-errors lvalue     | |-NullStmt 0x15b0280e0 <line:8:3>     | `-IfStmt 0x15b0280b0 <line:9:7, line:15:3> has_else     |   |-BinaryOperator 0x15b027d00 <line:9:11, col:19> '<dependent type>' contains-errors '&'     |   | |-DeclRefExpr 0x15b027c88 <col:11> 'unsigned int' lvalue ParmVar 0x15b00de28 'flags' 'unsigned int'     |   | `-RecoveryExpr 0x15b027ce0 <col:19> '<dependent type>' contains-errors lvalue     |   |-CompoundStmt 0x15b028070 <line:10:3, line:13:3>     |   | `-CallExpr 0x15b028040 <line:12:3, col:35> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x15b027f98 <col:3> 'int ()' Function 0x15b027ee0 'BIO_set_mem_eof_return' 'int ()'     |   |   |-RecoveryExpr 0x15b028020 <col:26> '<dependent type>' contains-errors lvalue     |   |   `-IntegerLiteral 0x15b027fd0 <col:34> 'int' 0     |   `-NullStmt 0x15b0280a8 <line:15:3>     |-IfStmt 0x15b028408 <line:17:2, line:21:3>     | |-UnaryOperator 0x15b028198 <line:17:5, col:6> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x15b028180 <col:6> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x15b028160 <col:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x15b0283e8 <line:18:3, line:21:3>     |   |-CallExpr 0x15b028350 <line:19:3, col:53> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x15b028290 <col:3> 'int ()' Function 0x15b0281d8 'CMSerr' 'int ()'     |   | |-RecoveryExpr 0x15b028310 <col:10> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x15b028330 <col:33> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x15b0283d0 <line:20:3, col:8> 'err' 0x15b028380     |-ForStmt 0x15a9228e0 <line:24:2, line:41:2>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-<<<NULL>>>     | `-CompoundStmt 0x15a9228b8 <line:25:2, line:41:2>     |   |-BinaryOperator 0x15b028620 <line:26:3, col:32> 'int' contains-errors '='     |   | |-DeclRefExpr 0x15b028428 <col:3> 'int' lvalue Var 0x15b00e1c0 'i' 'int'     |   | `-CallExpr 0x15b0285e8 <col:5, col:32> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x15b028528 <col:5> 'int ()' Function 0x15b028470 'BIO_read' 'int ()'     |   |   |-RecoveryExpr 0x15b028548 <col:14> '<dependent type>' contains-errors lvalue     |   |   |-DeclRefExpr 0x15b028568 <col:17> 'unsigned char[4096]' lvalue Var 0x15b00e088 'buf' 'unsigned char[4096]'     |   |   `-UnaryExprOrTypeTraitExpr 0x15b0285c8 <col:21, col:31> 'unsigned long' sizeof     |   |     `-ParenExpr 0x15b0285a8 <col:27, col:31> 'unsigned char[4096]' lvalue     |   |       `-DeclRefExpr 0x15b028588 <col:28> 'unsigned char[4096]' lvalue Var 0x15b00e088 'buf' 'unsigned char[4096]' non_odr_use_unevaluated     |   |-IfStmt 0x15a9226e0 <line:27:3, line:37:4>     |   | |-BinaryOperator 0x15b028698 <line:27:7, col:12> 'int' '<='     |   | | |-ImplicitCastExpr 0x15b028680 <col:7> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x15b028640 <col:7> 'int' lvalue Var 0x15b00e1c0 'i' 'int'     |   | | `-IntegerLiteral 0x15b028660 <col:12> 'int' 0     |   | `-CompoundStmt 0x15a9226b8 <line:28:4, line:37:4>     |   |   |-IfStmt 0x15b0289d0 <line:29:4, line:33:5>     |   |   | |-RecoveryExpr 0x15b028800 <line:29:8, col:31> '_Bool' contains-errors     |   |   | `-CompoundStmt 0x15b0289b8 <line:30:5, line:33:5>     |   |   |   `-IfStmt 0x15b028998 <line:31:5, line:32:11>     |   |   |     |-UnaryOperator 0x15b028968 <line:31:9, col:34> '<dependent type>' contains-errors prefix '!' cannot overflow     |   |   |     | `-CallExpr 0x15b028940 <col:10, col:34> '<dependent type>' contains-errors     |   |   |     |   |-DeclRefExpr 0x15b028900 <col:10> 'int ()' Function 0x15b028848 'BIO_get_cipher_status' 'int ()'     |   |   |     |   `-RecoveryExpr 0x15b028920 <col:32> '<dependent type>' contains-errors lvalue     |   |   |     `-GotoStmt 0x15b028980 <line:32:6, col:11> 'err' 0x15b028380     |   |   |-IfStmt 0x15a922690 <line:34:4, line:35:10>     |   |   | |-BinaryOperator 0x15a922658 <line:34:8, col:12> 'int' '<'     |   |   | | |-ImplicitCastExpr 0x15a922640 <col:8> 'int' <LValueToRValue>     |   |   | | | `-DeclRefExpr 0x15a922600 <col:8> 'int' lvalue Var 0x15b00e1c0 'i' 'int'     |   |   | | `-IntegerLiteral 0x15a922620 <col:12> 'int' 0     |   |   | `-GotoStmt 0x15a922678 <line:35:5, col:10> 'err' 0x15b028380     |   |   `-BreakStmt 0x15a9226b0 <line:36:4>     |   `-IfStmt 0x15a922898 <line:39:3, line:40:9>     |     |-RecoveryExpr 0x15a922860 <line:39:7, col:48> '_Bool' contains-errors     |     `-GotoStmt 0x15a922880 <line:40:4, col:9> 'err' 0x15b028380     |-IfStmt 0x15a922b20 <line:43:2, line:50:3>     | |-RecoveryExpr 0x15a922938 <line:43:5, col:13> '_Bool' contains-errors     | `-CompoundStmt 0x15a922b08 <line:44:3, line:50:3>     |   `-IfStmt 0x15a922ae8 <line:45:3, line:49:4>     |     |-RecoveryExpr 0x15a922a78 <line:45:6, col:29> '_Bool' contains-errors     |     `-CompoundStmt 0x15a922ad0 <line:46:4, line:49:4>     |       `-GotoStmt 0x15a922ab8 <line:48:4, col:9> 'err' 0x15b028380     |-BinaryOperator 0x15a922b80 <line:52:2, col:6> 'int' '='     | |-DeclRefExpr 0x15a922b40 <col:2> 'int' lvalue Var 0x15b00e120 'r' 'int'     | `-IntegerLiteral 0x15a922b60 <col:6> 'int' 1     |-LabelStmt 0x15a922ce8 <line:54:2, col:5> 'err'     | `-NullStmt 0x15a922ce0 <col:5>     `-ReturnStmt 0x15a922d40 <line:57:2, col:9>       `-ImplicitCastExpr 0x15a922d28 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x15a922d08 <col:9> 'int' lvalue Var 0x15b00e120 'r' 'int' ","20643":"`-FunctionDecl 0x1248267e8  line:1:12 selinux_socket_connect 'int (struct socket *, struct sockaddr *, int)' static   |-ParmVarDecl 0x12480e248 <col:35, col:50> col:50 used sock 'struct socket *'   |-ParmVarDecl 0x124826628 <line:2:7, col:24> col:24 used address 'struct sockaddr *'   |-ParmVarDecl 0x1248266a8 <col:33, col:37> col:37 used addrlen 'int'   `-CompoundStmt 0x124827110 <line:3:1, line:12:1>     |-DeclStmt 0x124826970 <line:4:2, col:9>     | `-VarDecl 0x124826908 <col:2, col:6> col:6 used err 'int'     |-DeclStmt 0x124826bd8 <line:5:2, col:28>     | |-RecordDecl 0x124826988 <col:2, col:9> col:9 struct sock     | `-VarDecl 0x124826af8 <col:2, col:26> col:15 used sk 'struct sock *' cinit     |   `-RecoveryExpr 0x124826b98 <col:20, col:26> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x124826b60 <col:20> 'struct socket *' lvalue ParmVar 0x12480e248 'sock' 'struct socket *'     |-BinaryOperator 0x124826e88 <line:7:2, col:60> 'int' '='     | |-DeclRefExpr 0x124826bf0 <col:2> 'int' lvalue Var 0x124826908 'err' 'int'     | `-CallExpr 0x124826e08 <col:8, col:60> 'int'     |   |-ImplicitCastExpr 0x124826df0 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x124826d40 <col:8> 'int ()' Function 0x124826c88 'selinux_socket_connect_helper' 'int ()'     |   |-ImplicitCastExpr 0x124826e40 <col:38> 'struct socket *' <LValueToRValue>     |   | `-DeclRefExpr 0x124826d60 <col:38> 'struct socket *' lvalue ParmVar 0x12480e248 'sock' 'struct socket *'     |   |-ImplicitCastExpr 0x124826e58 <col:44> 'struct sockaddr *' <LValueToRValue>     |   | `-DeclRefExpr 0x124826d80 <col:44> 'struct sockaddr *' lvalue ParmVar 0x124826628 'address' 'struct sockaddr *'     |   `-ImplicitCastExpr 0x124826e70 <col:53> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x124826da0 <col:53> 'int' lvalue ParmVar 0x1248266a8 'addrlen' 'int'     |-IfStmt 0x124826f28 <line:8:2, line:9:10>     | |-ImplicitCastExpr 0x124826ec8 <line:8:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x124826ea8 <col:6> 'int' lvalue Var 0x124826908 'err' 'int'     | `-ReturnStmt 0x124826f18 <line:9:3, col:10>     |   `-ImplicitCastExpr 0x124826f00 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x124826ee0 <col:10> 'int' lvalue Var 0x124826908 'err' 'int'     `-ReturnStmt 0x124827100 <line:11:2, col:50>       `-CallExpr 0x1248270a0 <col:9, col:50> 'int' contains-errors         |-ImplicitCastExpr 0x124827088 <col:9> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x124827028 <col:9> 'int ()' Function 0x124826f70 'selinux_netlbl_socket_connect' 'int ()'         |-ImplicitCastExpr 0x1248270d0 <col:39> 'struct sock *' contains-errors <LValueToRValue>         | `-DeclRefExpr 0x124827048 <col:39> 'struct sock *' contains-errors lvalue Var 0x124826af8 'sk' 'struct sock *'         `-ImplicitCastExpr 0x1248270e8 <col:43> 'struct sockaddr *' <LValueToRValue>           `-DeclRefExpr 0x124827068 <col:43> 'struct sockaddr *' lvalue ParmVar 0x124826628 'address' 'struct sockaddr *' ","20225":"`-FunctionDecl 0x123827518  col:7 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x123828430 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x123828498 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x123828500 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1238275c0 <<invalid sloc>> Implicit 883 ","20945":"`-FunctionDecl 0x14d940b40  line:1:13 deactivate_slab 'void (struct kmem_cache *, struct kmem_cache_cpu *)' static   |-ParmVarDecl 0x14d928648 <col:29, col:48> col:48 used s 'struct kmem_cache *'   |-ParmVarDecl 0x14d940a28 <col:51, col:74> col:74 used c 'struct kmem_cache_cpu *'   `-CompoundStmt 0x14d946c88 <line:2:1, line:25:1>     |-DeclStmt 0x14d940e88 <line:3:2, col:29>     | |-RecordDecl 0x14d940c40 <col:2, col:9> col:9 struct page     | `-VarDecl 0x14d940da8 <col:2, col:25> col:15 used page 'struct page *' cinit     |   `-RecoveryExpr 0x14d940e48 <col:22, col:25> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14d940e10 <col:22> 'struct kmem_cache_cpu *' lvalue ParmVar 0x14d940a28 'c' 'struct kmem_cache_cpu *'     |-DeclStmt 0x14d940f40 <line:4:2, col:14>     | `-VarDecl 0x14d940eb8 <col:2, col:13> col:6 used tail 'int' cinit     |   `-IntegerLiteral 0x14d940f20 <col:13> 'int' 1     |-IfStmt 0x14d9411b8 <line:6:2, line:7:34>     | |-RecoveryExpr 0x14d940f90 <line:6:6, col:12> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14d940f58 <col:6> 'struct page *' contains-errors lvalue Var 0x14d940da8 'page' 'struct page *'     | `-CallExpr 0x14d941188 <line:7:3, col:34> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14d9410e0 <col:3> 'int ()' Function 0x14d941028 'stat' 'int ()'     |   |-DeclRefExpr 0x14d941100 <col:8> 'struct kmem_cache_cpu *' lvalue ParmVar 0x14d940a28 'c' 'struct kmem_cache_cpu *'     |   `-RecoveryExpr 0x14d941168 <col:11> '<dependent type>' contains-errors lvalue     |-WhileStmt 0x14d941968 <line:9:2, line:22:2>     | |-CallExpr 0x14d941338 <line:9:9, col:29> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14d9412b8 <col:9> 'int ()' Function 0x14d941200 'unlikely' 'int ()'     | | `-RecoveryExpr 0x14d941310 <col:18, col:21> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14d9412d8 <col:18> 'struct kmem_cache_cpu *' lvalue ParmVar 0x14d940a28 'c' 'struct kmem_cache_cpu *'     | `-CompoundStmt 0x14d941920 <col:32, line:22:2>     |   |-DeclStmt 0x14d941410 <line:10:3, col:16>     |   | `-VarDecl 0x14d9413a8 <col:3, col:10> col:10 used object 'void **'     |   |-BinaryOperator 0x14d941468 <line:12:3, col:10> 'int' '='     |   | |-DeclRefExpr 0x14d941428 <col:3> 'int' lvalue Var 0x14d940eb8 'tail' 'int'     |   | `-IntegerLiteral 0x14d941448 <col:10> 'int' 0     |   |-BinaryOperator 0x14d941508 <line:15:3, col:15> 'void **' contains-errors '='     |   | |-DeclRefExpr 0x14d941488 <col:3> 'void **' lvalue Var 0x14d9413a8 'object' 'void **'     |   | `-RecoveryExpr 0x14d9414e0 <col:12, col:15> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14d9414a8 <col:12> 'struct kmem_cache_cpu *' lvalue ParmVar 0x14d940a28 'c' 'struct kmem_cache_cpu *'     |   |-BinaryOperator 0x14d941698 <line:16:3, col:38> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x14d941560 <col:3, col:6> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x14d941528 <col:3> 'struct kmem_cache_cpu *' lvalue ParmVar 0x14d940a28 'c' 'struct kmem_cache_cpu *'     |   | `-ArraySubscriptExpr 0x14d941678 <col:17, col:38> '<dependent type>' contains-errors lvalue     |   |   |-ImplicitCastExpr 0x14d941648 <col:17, col:20> '<dependent type>' contains-errors <LValueToRValue>     |   |   | `-RecoveryExpr 0x14d9415c0 <col:17, col:20> '<dependent type>' contains-errors lvalue     |   |   |   `-DeclRefExpr 0x14d941588 <col:17> 'struct kmem_cache_cpu *' lvalue ParmVar 0x14d940a28 'c' 'struct kmem_cache_cpu *'     |   |   `-ImplicitCastExpr 0x14d941660 <col:29, col:32> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x14d941620 <col:29, col:32> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x14d9415e8 <col:29> 'struct kmem_cache_cpu *' lvalue ParmVar 0x14d940a28 'c' 'struct kmem_cache_cpu *'     |   |-BinaryOperator 0x14d9417e8 <line:19:3, col:29> '<dependent type>' contains-errors '='     |   | |-ArraySubscriptExpr 0x14d941768 <col:3, col:19> '<dependent type>' contains-errors lvalue     |   | | |-ImplicitCastExpr 0x14d941738 <col:3> 'void **' <LValueToRValue>     |   | | | `-DeclRefExpr 0x14d9416b8 <col:3> 'void **' lvalue Var 0x14d9413a8 'object' 'void **'     |   | | `-ImplicitCastExpr 0x14d941750 <col:10, col:13> '<dependent type>' contains-errors <LValueToRValue>     |   | |   `-RecoveryExpr 0x14d941710 <col:10, col:13> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x14d9416d8 <col:10> 'struct kmem_cache_cpu *' lvalue ParmVar 0x14d940a28 'c' 'struct kmem_cache_cpu *'     |   | `-RecoveryExpr 0x14d9417c0 <col:23, col:29> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14d941788 <col:23> 'struct page *' contains-errors lvalue Var 0x14d940da8 'page' 'struct page *'     |   |-BinaryOperator 0x14d941888 <line:20:3, col:20> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x14d941840 <col:3, col:9> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x14d941808 <col:3> 'struct page *' contains-errors lvalue Var 0x14d940da8 'page' 'struct page *'     |   | `-DeclRefExpr 0x14d941868 <col:20> 'void **' lvalue Var 0x14d9413a8 'object' 'void **'     |   `-UnaryOperator 0x14d941908 <line:21:3, col:14> '<dependent type>' contains-errors postfix '--' cannot overflow     |     `-RecoveryExpr 0x14d9418e0 <col:3, col:9> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14d9418a8 <col:3> 'struct page *' contains-errors lvalue Var 0x14d940da8 'page' 'struct page *'     |-BinaryOperator 0x14d946a40 <line:23:2, col:12> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14d9419c0 <col:2, col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14d941988 <col:2> 'struct kmem_cache_cpu *' lvalue ParmVar 0x14d940a28 'c' 'struct kmem_cache_cpu *'     | `-RecoveryExpr 0x14d946a20 <col:12> '<dependent type>' contains-errors lvalue     `-CallExpr 0x14d946c08 <line:24:2, col:29> 'int' contains-errors       |-ImplicitCastExpr 0x14d946bf0 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x14d946b40 <col:2> 'int ()' Function 0x14d946a88 'unfreeze_slab' 'int ()'       |-ImplicitCastExpr 0x14d946c40 <col:16> 'struct kmem_cache *' <LValueToRValue>       | `-DeclRefExpr 0x14d946b60 <col:16> 'struct kmem_cache *' lvalue ParmVar 0x14d928648 's' 'struct kmem_cache *'       |-ImplicitCastExpr 0x14d946c58 <col:19> 'struct page *' contains-errors <LValueToRValue>       | `-DeclRefExpr 0x14d946b80 <col:19> 'struct page *' contains-errors lvalue Var 0x14d940da8 'page' 'struct page *'       `-ImplicitCastExpr 0x14d946c70 <col:25> 'int' <LValueToRValue>         `-DeclRefExpr 0x14d946ba0 <col:25> 'int' lvalue Var 0x14d940eb8 'tail' 'int' ","21156":"`-FunctionDecl 0x135827658  col:9 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x135827758 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x1358277c0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x135827828 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x135827700 <<invalid sloc>> Implicit 882 ","20389":"`-FunctionDecl 0x12e141910  col:5 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x12e141a10 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x12e141a78 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x12e141ae0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x12e1419b8 <<invalid sloc>> Implicit 882 ","20602":"`-FunctionDecl 0x15003cdf0  line:1:6 invalid mdia_box_del 'void (int *)'   |-ParmVarDecl 0x15003cd28 <col:19, col:27> col:27 invalid s 'int *'   `-CompoundStmt 0x1500556f0 <line:2:1, line:13:1>     |-IfStmt 0x15003cf90 <line:4:2, col:19>     | |-BinaryOperator 0x15003cf60 <col:6, col:13> 'int' contains-errors '=='     | | |-RecoveryExpr 0x15003cf20 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x15003cf40 <col:13> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x15003cf80 <col:19>     |-IfStmt 0x15003d308 <line:5:2, col:50>     | |-CXXDependentScopeMemberExpr 0x15003d030 <col:6, col:11> '<dependent type>' contains-errors lvalue ->nalu_parser     | | `-RecoveryExpr 0x15003d010 <col:6> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x15003d2e0 <col:24, col:50> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15003d1d0 <col:24> 'int ()' Function 0x15003d118 'gf_bs_del' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x15003d298 <col:34, col:39> '<dependent type>' contains-errors lvalue ->nalu_parser     |     `-RecoveryExpr 0x15003d278 <col:34> '<dependent type>' contains-errors lvalue     |-IfStmt 0x150054d38 <line:6:2, col:50>     | |-CXXDependentScopeMemberExpr 0x15003d3a8 <col:6, col:11> '<dependent type>' contains-errors lvalue ->nalu_out_bs     | | `-RecoveryExpr 0x15003d388 <col:6> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x150054d10 <col:24, col:50> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x150054c00 <col:24> 'int ()' Function 0x15003d118 'gf_bs_del' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x150054cc8 <col:34, col:39> '<dependent type>' contains-errors lvalue ->nalu_out_bs     |     `-RecoveryExpr 0x150054ca8 <col:34> '<dependent type>' contains-errors lvalue     |-IfStmt 0x150054f58 <line:7:2, col:48>     | |-CXXDependentScopeMemberExpr 0x150054dd8 <col:6, col:11> '<dependent type>' contains-errors lvalue ->nalu_ps_bs     | | `-RecoveryExpr 0x150054db8 <col:6> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x150054f30 <col:23, col:48> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x150054e20 <col:23> 'int ()' Function 0x15003d118 'gf_bs_del' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x150054ee8 <col:33, col:38> '<dependent type>' contains-errors lvalue ->nalu_ps_bs     |     `-RecoveryExpr 0x150054ec8 <col:33> '<dependent type>' contains-errors lvalue     |-IfStmt 0x150055178 <line:8:2, col:52>     | |-CXXDependentScopeMemberExpr 0x150054ff8 <col:6, col:11> '<dependent type>' contains-errors lvalue ->extracted_bs     | | `-RecoveryExpr 0x150054fd8 <col:6> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x150055150 <col:25, col:52> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x150055040 <col:25> 'int ()' Function 0x15003d118 'gf_bs_del' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x150055108 <col:35, col:40> '<dependent type>' contains-errors lvalue ->extracted_bs     |     `-RecoveryExpr 0x1500550e8 <col:35> '<dependent type>' contains-errors lvalue     `-IfStmt 0x1500554a8 <line:9:2, col:66>       |-CXXDependentScopeMemberExpr 0x150055218 <col:6, col:11> '<dependent type>' contains-errors lvalue ->extracted_samp       | `-RecoveryExpr 0x1500551f8 <col:6> '<dependent type>' contains-errors lvalue       `-CallExpr 0x150055480 <col:27, col:66> '<dependent type>' contains-errors         |-DeclRefExpr 0x150055340 <col:27> 'int ()' Function 0x150055288 'gf_isom_sample_del' 'int ()'         `-UnaryOperator 0x150055468 <col:46, col:52> '<dependent type>' contains-errors prefix '&' cannot overflow           `-CXXDependentScopeMemberExpr 0x150055420 <col:47, col:52> '<dependent type>' contains-errors lvalue ->extracted_samp             `-RecoveryExpr 0x150055400 <col:47> '<dependent type>' contains-errors lvalue ","20605":"`-FunctionDecl 0x12e00ddf8  col:16 invalid updateRise 'int (int *)'   |-ParmVarDecl 0x12e00dd28 <col:27, col:36> col:38 invalid 'int *'   `-CompoundStmt 0x12e00dea8 <col:40, col:41> ","20779":"`-FunctionDecl 0x143928318  line:1:12 invalid add_push_report_sideband_pkt 'int (int *, int *, int *)' static   |-ParmVarDecl 0x143928128 <col:41, col:51> col:51 invalid push 'int *'   |-ParmVarDecl 0x1439281a8 <col:57, col:71> col:71 invalid data_pkt 'int *'   |-ParmVarDecl 0x143928228 <col:81, col:90> col:90 invalid data_pkt_buf 'int *'   `-CompoundStmt 0x144008bd8 <line:2:1, line:55:1>     |-DeclStmt 0x143928508 <line:4:2, col:29>     | |-VarDecl 0x143928408 <col:2, col:14> col:14 used line 'const char *'     | `-VarDecl 0x143928488 <col:2, col:21> col:21 used line_end 'const char *'     |-UnaryExprOrTypeTraitExpr 0x143928578 <line:5:2, col:9> 'unsigned long' sizeof     | `-DeclRefExpr 0x143928558 <col:9> 'const char *' lvalue Var 0x143928488 'line_end' 'const char *' non_odr_use_unevaluated     |-DeclStmt 0x143928618 <line:6:2, col:11>     | `-VarDecl 0x1439285b0 <col:2, col:6> col:6 used error 'int'     |-DeclStmt 0x143928758 <line:7:2, col:47>     | `-VarDecl 0x143928648 <col:2, col:46> col:6 used reading_from_buf 'int' cinit     |   `-BinaryOperator 0x143928738 <col:25, col:46> 'int' contains-errors '>'     |     |-CXXDependentScopeMemberExpr 0x1439286d0 <col:25, col:39> '<dependent type>' contains-errors lvalue ->size     |     | `-RecoveryExpr 0x1439286b0 <col:25> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x143928718 <col:46> 'int' 0     |-IfStmt 0x143941d40 <line:9:2, line:18:2> has_else     | |-ImplicitCastExpr 0x143928790 <line:9:6> 'int' contains-errors <LValueToRValue>     | | `-DeclRefExpr 0x143928770 <col:6> 'int' contains-errors lvalue Var 0x143928648 'reading_from_buf' 'int'     | |-CompoundStmt 0x143941ba8 <col:24, line:14:2>     | | |-CallExpr 0x143941a20 <line:11:3, col:58> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x143941910 <col:3> 'int ()' Function 0x143941858 'git_buf_put' 'int ()'     | | | |-RecoveryExpr 0x143941930 <col:15> '<dependent type>' contains-errors lvalue     | | | |-CXXDependentScopeMemberExpr 0x143941970 <col:29, col:39> '<dependent type>' contains-errors lvalue ->data     | | | | `-RecoveryExpr 0x143941950 <col:29> '<dependent type>' contains-errors lvalue     | | | `-CXXDependentScopeMemberExpr 0x1439419d8 <col:45, col:55> '<dependent type>' contains-errors lvalue ->len     | | |   `-RecoveryExpr 0x1439419b8 <col:45> '<dependent type>' contains-errors lvalue     | | |-BinaryOperator 0x143941ae0 <line:12:3, col:24> 'const char *' contains-errors '='     | | | |-DeclRefExpr 0x143941a58 <col:3> 'const char *' lvalue Var 0x143928408 'line' 'const char *'     | | | `-CXXDependentScopeMemberExpr 0x143941a98 <col:10, col:24> '<dependent type>' contains-errors lvalue ->ptr     | | |   `-RecoveryExpr 0x143941a78 <col:10> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x143941b88 <line:13:3, col:28> 'const char *' contains-errors '='     | |   |-DeclRefExpr 0x143941b00 <col:3> 'const char *' lvalue Var 0x143928488 'line_end' 'const char *'     | |   `-CXXDependentScopeMemberExpr 0x143941b40 <col:14, col:28> '<dependent type>' contains-errors lvalue ->size     | |     `-RecoveryExpr 0x143941b20 <col:14> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x143941d20 <line:15:7, line:18:2>     |   |-BinaryOperator 0x143941c58 <line:16:3, col:20> 'const char *' contains-errors '='     |   | |-DeclRefExpr 0x143941bd0 <col:3> 'const char *' lvalue Var 0x143928408 'line' 'const char *'     |   | `-CXXDependentScopeMemberExpr 0x143941c10 <col:10, col:20> '<dependent type>' contains-errors lvalue ->data     |   |   `-RecoveryExpr 0x143941bf0 <col:10> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x143941d00 <line:17:3, col:24> 'const char *' contains-errors '='     |     |-DeclRefExpr 0x143941c78 <col:3> 'const char *' lvalue Var 0x143928488 'line_end' 'const char *'     |     `-CXXDependentScopeMemberExpr 0x143941cb8 <col:14, col:24> '<dependent type>' contains-errors lvalue ->len     |       `-RecoveryExpr 0x143941c98 <col:14> '<dependent type>' contains-errors lvalue     |-WhileStmt 0x144008928 <line:20:2, line:47:2>     | |-BinaryOperator 0x143941e18 <line:20:9, col:20> 'int' '>'     | | |-ImplicitCastExpr 0x143941de8 <col:9> 'const char *' <LValueToRValue>     | | | `-DeclRefExpr 0x143941dc8 <col:9> 'const char *' lvalue Var 0x143928488 'line_end' 'const char *'     | | `-ImplicitCastExpr 0x143941e00 <col:20> 'const char *' <NullToPointer>     | |   `-IntegerLiteral 0x143941d88 <col:20> 'int' 0     | `-CompoundStmt 0x1440088e8 <col:23, line:47:2>     |   |-BinaryOperator 0x143942128 <line:21:3, col:61> 'int' contains-errors '='     |   | |-DeclRefExpr 0x143941e38 <col:3> 'int' lvalue Var 0x1439285b0 'error' 'int'     |   | `-CallExpr 0x1439420e8 <col:11, col:61> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x143941f38 <col:11> 'int ()' Function 0x143941e80 'git_pkt_parse_line' 'int ()'     |   |   |-UnaryOperator 0x1439420b0 <col:30, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   | `-RecoveryExpr 0x143942090 <col:31> '<dependent type>' contains-errors lvalue     |   |   |-DeclRefExpr 0x143941f88 <col:36> 'const char *' lvalue Var 0x143928408 'line' 'const char *'     |   |   |-UnaryOperator 0x143942000 <col:42, col:43> 'const char **' prefix '&' cannot overflow     |   |   | `-DeclRefExpr 0x143941fa8 <col:43> 'const char *' lvalue Var 0x143928488 'line_end' 'const char *'     |   |   `-RecoveryExpr 0x1439420c8 <col:53> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x1439424f8 <line:23:3, line:31:9> has_else     |   | |-BinaryOperator 0x1439421c0 <line:23:7, col:16> 'int' contains-errors '=='     |   | | |-DeclRefExpr 0x143942148 <col:7> 'int' lvalue Var 0x1439285b0 'error' 'int'     |   | | `-RecoveryExpr 0x1439421a0 <col:16> '<dependent type>' contains-errors lvalue     |   | |-CompoundStmt 0x143942420 <col:27, line:29:3>     |   | | |-IfStmt 0x143942338 <line:25:4, line:26:45>     |   | | | |-UnaryOperator 0x143942218 <line:25:8, col:9> 'int' contains-errors prefix '!' cannot overflow     |   | | | | `-ImplicitCastExpr 0x143942200 <col:9> 'int' contains-errors <LValueToRValue>     |   | | | |   `-DeclRefExpr 0x1439421e0 <col:9> 'int' contains-errors lvalue Var 0x143928648 'reading_from_buf' 'int'     |   | | | `-CallExpr 0x143942300 <line:26:5, col:45> '<dependent type>' contains-errors     |   | | |   |-DeclRefExpr 0x143942230 <col:5> 'int ()' Function 0x143941858 'git_buf_put' 'int ()'     |   | | |   |-RecoveryExpr 0x143942250 <col:17> '<dependent type>' contains-errors lvalue     |   | | |   |-DeclRefExpr 0x143942270 <col:31> 'const char *' lvalue Var 0x143928408 'line' 'const char *'     |   | | |   `-DeclRefExpr 0x1439422e0 <col:37> 'const char *' lvalue Var 0x143928488 'line_end' 'const char *'     |   | | |-BinaryOperator 0x143942398 <line:27:4, col:12> 'int' '='     |   | | | |-DeclRefExpr 0x143942358 <col:4> 'int' lvalue Var 0x1439285b0 'error' 'int'     |   | | | `-IntegerLiteral 0x143942378 <col:12> 'int' 0     |   | | `-GotoStmt 0x143942408 <line:28:4, col:9> 'done' 0x1439423b8     |   | `-IfStmt 0x1439424d8 <line:30:8, line:31:9>     |   |   |-BinaryOperator 0x1439424a0 <line:30:12, col:20> 'int' '<'     |   |   | |-ImplicitCastExpr 0x143942488 <col:12> 'int' <LValueToRValue>     |   |   | | `-DeclRefExpr 0x143942448 <col:12> 'int' lvalue Var 0x1439285b0 'error' 'int'     |   |   | `-IntegerLiteral 0x143942468 <col:20> 'int' 0     |   |   `-GotoStmt 0x1439424c0 <line:31:4, col:9> 'done' 0x1439423b8     |   |-CompoundAssignOperator 0x1439425f8 <line:34:3, col:31> 'const char *' '-=' ComputeLHSTy='const char *' ComputeResultTy='const char *'     |   | |-DeclRefExpr 0x143942528 <col:3> 'const char *' lvalue Var 0x143928488 'line_end' 'const char *'     |   | `-ParenExpr 0x1439425d8 <col:15, col:31> 'long'     |   |   `-BinaryOperator 0x1439425b8 <col:16, col:27> 'long' '-'     |   |     |-ImplicitCastExpr 0x143942588 <col:16> 'const char *' <LValueToRValue>     |   |     | `-DeclRefExpr 0x143942548 <col:16> 'const char *' lvalue Var 0x143928488 'line_end' 'const char *'     |   |     `-ImplicitCastExpr 0x1439425a0 <col:27> 'const char *' <LValueToRValue>     |   |       `-DeclRefExpr 0x143942568 <col:27> 'const char *' lvalue Var 0x143928408 'line' 'const char *'     |   |-BinaryOperator 0x143942680 <line:35:3, col:10> 'const char *' '='     |   | |-DeclRefExpr 0x143942628 <col:3> 'const char *' lvalue Var 0x143928408 'line' 'const char *'     |   | `-ImplicitCastExpr 0x143942668 <col:10> 'const char *' <LValueToRValue>     |   |   `-DeclRefExpr 0x143942648 <col:10> 'const char *' lvalue Var 0x143928488 'line_end' 'const char *'     |   |-IfStmt 0x143942758 <line:38:3, line:39:4>     |   | |-BinaryOperator 0x143942730 <line:38:7, col:14> 'int' contains-errors '=='     |   | | |-RecoveryExpr 0x1439426f0 <col:7> '<dependent type>' contains-errors lvalue     |   | | `-RecoveryExpr 0x143942710 <col:14> '<dependent type>' contains-errors lvalue     |   | `-ContinueStmt 0x143942750 <line:39:4>     |   `-IfStmt 0x1440088c8 <line:45:3, line:46:9>     |     |-RecoveryExpr 0x144008890 <line:45:7, col:29> '_Bool' contains-errors     |     `-GotoStmt 0x1440088b0 <line:46:4, col:9> 'done' 0x1439423b8     |-BinaryOperator 0x144008988 <line:49:2, col:10> 'int' '='     | |-DeclRefExpr 0x144008948 <col:2> 'int' lvalue Var 0x1439285b0 'error' 'int'     | `-IntegerLiteral 0x144008968 <col:10> 'int' 0     |-LabelStmt 0x144008b70 <line:51:1, line:53:41> 'done'     | `-IfStmt 0x144008b50 <line:52:2, line:53:41>     |   |-ImplicitCastExpr 0x1440089c8 <line:52:6> 'int' contains-errors <LValueToRValue>     |   | `-DeclRefExpr 0x1440089a8 <col:6> 'int' contains-errors lvalue Var 0x143928648 'reading_from_buf' 'int'     |   `-CallExpr 0x144008b20 <line:53:3, col:41> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x144008ac0 <col:3> 'int ()' Function 0x144008a08 'git_buf_consume' 'int ()'     |     |-RecoveryExpr 0x144008ae0 <col:19> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x144008b00 <col:33> 'const char *' lvalue Var 0x143928488 'line_end' 'const char *'     `-ReturnStmt 0x144008bc8 <line:54:2, col:9>       `-ImplicitCastExpr 0x144008bb0 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x144008b90 <col:9> 'int' lvalue Var 0x1439285b0 'error' 'int' ","21170":"`-FunctionDecl 0x140026848  line:1:1 vhost_user_set_vring_base 'int (struct virtio_net **, struct VhostUserMsg *, int)'   |-ParmVarDecl 0x14000e2a8 <col:27, col:47> col:47 used pdev 'struct virtio_net **'   |-ParmVarDecl 0x140026688 <line:2:4, col:25> col:25 used msg 'struct VhostUserMsg *'   |-ParmVarDecl 0x140026708 <line:3:4, col:8> col:8 main_fd 'int'   `-CompoundStmt 0x14100b208 <line:4:1, line:22:1>     |-DeclStmt 0x140026aa8 <line:5:2, col:32>     | `-VarDecl 0x1400269d8 <col:2, col:28> col:21 used dev 'struct virtio_net *' cinit     |   `-ImplicitCastExpr 0x140026a90 <col:27, col:28> 'struct virtio_net *' <LValueToRValue>     |     `-UnaryOperator 0x140026a78 <col:27, col:28> 'struct virtio_net *' lvalue prefix '*' cannot overflow     |       `-ImplicitCastExpr 0x140026a60 <col:28> 'struct virtio_net **' <LValueToRValue>     |         `-DeclRefExpr 0x140026a40 <col:28> 'struct virtio_net **' lvalue ParmVar 0x14000e2a8 'pdev' 'struct virtio_net **'     |-DeclStmt 0x140026e48 <line:6:2, col:71>     | |-RecordDecl 0x140026ac0 <col:2, col:9> col:9 struct vhost_virtqueue     | `-VarDecl 0x140026c28 <col:2, col:70> col:26 used vq 'struct vhost_virtqueue *' cinit     |   `-ArraySubscriptExpr 0x140026e10 <col:31, col:70> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x140026de0 <col:31, col:36> '<dependent type>' contains-errors <LValueToRValue>     |     | `-RecoveryExpr 0x140026cc8 <col:31, col:36> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x140026c90 <col:31> 'struct virtio_net *' lvalue Var 0x1400269d8 'dev' 'struct virtio_net *'     |     `-ImplicitCastExpr 0x140026df8 <col:46, col:65> '<dependent type>' contains-errors <LValueToRValue>     |       `-CXXDependentScopeMemberExpr 0x140026d98 <col:46, col:65> '<dependent type>' contains-errors lvalue .index     |         `-CXXDependentScopeMemberExpr 0x140026d50 <col:46, col:59> '<dependent type>' contains-errors lvalue .state     |           `-RecoveryExpr 0x140026d28 <col:46, col:51> '<dependent type>' contains-errors lvalue     |             `-DeclRefExpr 0x140026cf0 <col:46> 'struct VhostUserMsg *' lvalue ParmVar 0x140026688 'msg' 'struct VhostUserMsg *'     |-IfStmt 0x14100b190 <line:9:2, line:19:2> has_else     | |-CallExpr 0x140027018 <line:9:6, col:22> 'int'     | | |-ImplicitCastExpr 0x140027000 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x140026f90 <col:6> 'int ()' Function 0x140026ed8 'vq_is_packed' 'int ()'     | | `-ImplicitCastExpr 0x140027040 <col:19> 'struct virtio_net *' <LValueToRValue>     | |   `-DeclRefExpr 0x140026fb0 <col:19> 'struct virtio_net *' lvalue Var 0x1400269d8 'dev' 'struct virtio_net *'     | |-CompoundStmt 0x140027468 <col:25, line:16:2>     | | |-BinaryOperator 0x140027170 <line:11:3, col:30> '<dependent type>' contains-errors '='     | | | |-RecoveryExpr 0x140027090 <col:3, col:7> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x140027058 <col:3> 'struct vhost_virtqueue *' contains-errors lvalue Var 0x140026c28 'vq' 'struct vhost_virtqueue *'     | | | `-BinaryOperator 0x140027150 <col:24, col:30> '<dependent type>' contains-errors '&'     | | |   |-RecoveryExpr 0x140027130 <col:24> '<dependent type>' contains-errors lvalue     | | |   `-IntegerLiteral 0x1400270d0 <col:30> 'int' 32767     | | |-BinaryOperator 0x140027368 <line:14:3, col:27> '<dependent type>' contains-errors '='     | | | |-RecoveryExpr 0x1400272e0 <col:3, col:7> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x1400272a8 <col:3> 'struct vhost_virtqueue *' contains-errors lvalue Var 0x140026c28 'vq' 'struct vhost_virtqueue *'     | | | `-RecoveryExpr 0x140027340 <col:23, col:27> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x140027308 <col:23> 'struct vhost_virtqueue *' contains-errors lvalue Var 0x140026c28 'vq' 'struct vhost_virtqueue *'     | | `-BinaryOperator 0x140027448 <line:15:3, col:31> '<dependent type>' contains-errors '='     | |   |-RecoveryExpr 0x1400273c0 <col:3, col:7> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x140027388 <col:3> 'struct vhost_virtqueue *' contains-errors lvalue Var 0x140026c28 'vq' 'struct vhost_virtqueue *'     | |   `-RecoveryExpr 0x140027420 <col:27, col:31> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x1400273e8 <col:27> 'struct vhost_virtqueue *' contains-errors lvalue Var 0x140026c28 'vq' 'struct vhost_virtqueue *'     | `-CompoundStmt 0x14100b170 <line:16:9, line:19:2>     |   |-BinaryOperator 0x1400275e0 <line:17:3, col:42> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x1400274c8 <col:3, col:7> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x140027490 <col:3> 'struct vhost_virtqueue *' contains-errors lvalue Var 0x140026c28 'vq' 'struct vhost_virtqueue *'     |   | `-CXXDependentScopeMemberExpr 0x140027598 <col:23, col:42> '<dependent type>' contains-errors lvalue .num     |   |   `-CXXDependentScopeMemberExpr 0x140027550 <col:23, col:36> '<dependent type>' contains-errors lvalue .state     |   |     `-RecoveryExpr 0x140027528 <col:23, col:28> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x1400274f0 <col:23> 'struct VhostUserMsg *' lvalue ParmVar 0x140026688 'msg' 'struct VhostUserMsg *'     |   `-BinaryOperator 0x14100b150 <line:18:3, col:43> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x14100b038 <col:3, col:7> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x14100b000 <col:3> 'struct vhost_virtqueue *' contains-errors lvalue Var 0x140026c28 'vq' 'struct vhost_virtqueue *'     |     `-CXXDependentScopeMemberExpr 0x14100b108 <col:24, col:43> '<dependent type>' contains-errors lvalue .num     |       `-CXXDependentScopeMemberExpr 0x14100b0c0 <col:24, col:37> '<dependent type>' contains-errors lvalue .state     |         `-RecoveryExpr 0x14100b098 <col:24, col:29> '<dependent type>' contains-errors lvalue     |           `-DeclRefExpr 0x14100b060 <col:24> 'struct VhostUserMsg *' lvalue ParmVar 0x140026688 'msg' 'struct VhostUserMsg *'     `-ReturnStmt 0x14100b1f8 <line:21:2, col:9>       `-RecoveryExpr 0x14100b1d8 <col:9> '<dependent type>' contains-errors lvalue ","20416":"`-FunctionDecl 0x1539281a8  line:1:1 bqarr_in 'int (int)'   |-ParmVarDecl 0x1539280d8 <col:10> col:10 PG_FUNCTION_ARGS 'int'   `-CompoundStmt 0x1539435a8 <line:2:1, line:60:1>     `-DeclStmt 0x153942968 <line:3:2, col:46>       `-VarDecl 0x1539282b8 <col:2, col:45> col:11 used buf 'char *' cinit         `-CStyleCastExpr 0x153942940 <col:17, col:45> 'char *' <IntegralToPointer>           `-CallExpr 0x1539284d8 <col:26, col:45> 'int'             |-ImplicitCastExpr 0x1539284c0 <col:26> 'int (*)()' <FunctionToPointerDecay>             | `-DeclRefExpr 0x153928450 <col:26> 'int ()' Function 0x153928398 'PG_GETARG_POINTER' 'int ()'             `-IntegerLiteral 0x153928470 <col:44> 'int' 0 ","20907":"`-FunctionDecl 0x1201281f8  line:1:11 invalid X509_STORE_CTX_get0_current_crl 'int *(int *)'   |-ParmVarDecl 0x120128128 <col:43, col:59> col:59 invalid ctx 'int *'   `-CompoundStmt 0x120128320 <line:2:1, line:4:1>     `-ReturnStmt 0x120128310 <line:3:5, col:17>       `-CXXDependentScopeMemberExpr 0x1201282c8 <col:12, col:17> '<dependent type>' contains-errors lvalue ->current_crl         `-RecoveryExpr 0x1201282a8 <col:12> '<dependent type>' contains-errors lvalue ","20624":"`-FunctionDecl 0x13e8fae38  line:1:1 TEST 'int (int, int)'   |-ParmVarDecl 0x13e8fad58 <col:6> col:6 UriSuite 'int'   |-ParmVarDecl 0x13e8facd8 <col:16> col:16 TestEquals 'int'   `-CompoundStmt 0x13e913aa0 <col:28, line:16:1>     |-CallExpr 0x13e8fb128 <line:2:3, col:25> 'int'     | |-ImplicitCastExpr 0x13e8fb110 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13e8fb060 <col:3> 'int ()' Function 0x13e8fafa8 'testEqualsHelper' 'int ()'     | `-ImplicitCastExpr 0x13e8fb150 <col:20> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x13e8fb0c0 <col:20> 'char[4]' lvalue \"STR\"     |-CallExpr 0x13e8fb1c0 <line:3:3, col:25> 'int'     | |-ImplicitCastExpr 0x13e8fb1a8 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13e8fb168 <col:3> 'int ()' Function 0x13e8fafa8 'testEqualsHelper' 'int ()'     | `-ImplicitCastExpr 0x13e8fb1e8 <col:20> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x13e8fb188 <col:20> 'char[4]' lvalue \"STR\"     |-CallExpr 0x13e8fb258 <line:4:3, col:25> 'int'     | |-ImplicitCastExpr 0x13e8fb240 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13e8fb200 <col:3> 'int ()' Function 0x13e8fafa8 'testEqualsHelper' 'int ()'     | `-ImplicitCastExpr 0x13e8fb280 <col:20> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x13e8fb220 <col:20> 'char[4]' lvalue \"STR\"     |-CallExpr 0x13e8fb2f0 <line:5:3, col:25> 'int'     | |-ImplicitCastExpr 0x13e8fb2d8 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13e8fb298 <col:3> 'int ()' Function 0x13e8fafa8 'testEqualsHelper' 'int ()'     | `-ImplicitCastExpr 0x13e8fb318 <col:20> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x13e8fb2b8 <col:20> 'char[4]' lvalue \"STR\"     |-CallExpr 0x13e8fb388 <line:6:3, col:25> 'int'     | |-ImplicitCastExpr 0x13e8fb370 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13e8fb330 <col:3> 'int ()' Function 0x13e8fafa8 'testEqualsHelper' 'int ()'     | `-ImplicitCastExpr 0x13e8fb3b0 <col:20> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x13e8fb350 <col:20> 'char[4]' lvalue \"STR\"     |-CallExpr 0x13e913638 <line:7:3, col:25> 'int'     | |-ImplicitCastExpr 0x13e913620 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13e8fb3c8 <col:3> 'int ()' Function 0x13e8fafa8 'testEqualsHelper' 'int ()'     | `-ImplicitCastExpr 0x13e913660 <col:20> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x13e913600 <col:20> 'char[4]' lvalue \"STR\"     |-CallExpr 0x13e9136d0 <line:8:3, col:25> 'int'     | |-ImplicitCastExpr 0x13e9136b8 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13e913678 <col:3> 'int ()' Function 0x13e8fafa8 'testEqualsHelper' 'int ()'     | `-ImplicitCastExpr 0x13e9136f8 <col:20> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x13e913698 <col:20> 'char[4]' lvalue \"STR\"     |-CallExpr 0x13e913768 <line:10:3, col:25> 'int'     | |-ImplicitCastExpr 0x13e913750 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13e913710 <col:3> 'int ()' Function 0x13e8fafa8 'testEqualsHelper' 'int ()'     | `-ImplicitCastExpr 0x13e913790 <col:20> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x13e913730 <col:20> 'char[4]' lvalue \"STR\"     |-CallExpr 0x13e913800 <line:11:3, col:25> 'int'     | |-ImplicitCastExpr 0x13e9137e8 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13e9137a8 <col:3> 'int ()' Function 0x13e8fafa8 'testEqualsHelper' 'int ()'     | `-ImplicitCastExpr 0x13e913828 <col:20> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x13e9137c8 <col:20> 'char[4]' lvalue \"STR\"     |-CallExpr 0x13e913898 <line:12:3, col:25> 'int'     | |-ImplicitCastExpr 0x13e913880 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13e913840 <col:3> 'int ()' Function 0x13e8fafa8 'testEqualsHelper' 'int ()'     | `-ImplicitCastExpr 0x13e9138c0 <col:20> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x13e913860 <col:20> 'char[4]' lvalue \"STR\"     |-CallExpr 0x13e913930 <line:13:3, col:25> 'int'     | |-ImplicitCastExpr 0x13e913918 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13e9138d8 <col:3> 'int ()' Function 0x13e8fafa8 'testEqualsHelper' 'int ()'     | `-ImplicitCastExpr 0x13e913958 <col:20> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x13e9138f8 <col:20> 'char[4]' lvalue \"STR\"     |-CallExpr 0x13e9139c8 <line:14:3, col:25> 'int'     | |-ImplicitCastExpr 0x13e9139b0 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13e913970 <col:3> 'int ()' Function 0x13e8fafa8 'testEqualsHelper' 'int ()'     | `-ImplicitCastExpr 0x13e9139f0 <col:20> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x13e913990 <col:20> 'char[4]' lvalue \"STR\"     `-CallExpr 0x13e913a60 <line:15:3, col:25> 'int'       |-ImplicitCastExpr 0x13e913a48 <col:3> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x13e913a08 <col:3> 'int ()' Function 0x13e8fafa8 'testEqualsHelper' 'int ()'       `-ImplicitCastExpr 0x13e913a88 <col:20> 'char *' <ArrayToPointerDecay>         `-StringLiteral 0x13e913a28 <col:20> 'char[4]' lvalue \"STR\" ","20301":"`-FunctionDecl 0x11f009038  col:3 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x11f009138 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x11f0091a0 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x11f009208 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x11f0090e0 <<invalid sloc>> Implicit 900 ","20243":"`-FunctionDecl 0x133128318  line:1:12 invalid jas_iccputuint 'int (int *, int, int)' static   |-ParmVarDecl 0x133128128 <col:27, col:41> col:41 invalid out 'int *'   |-ParmVarDecl 0x1331281a8 <col:46, col:50> col:50 used n 'int'   |-ParmVarDecl 0x133128228 <col:53, col:63> col:63 invalid val 'int'   `-CompoundStmt 0x133141b78 <line:2:1, line:11:1>     |-DeclStmt 0x133128458 <line:3:2, col:7>     | `-VarDecl 0x1331283f0 <col:2, col:6> col:6 used i 'int'     |-DeclStmt 0x1331284f0 <line:4:2, col:7>     | `-VarDecl 0x133128488 <col:2, col:6> col:6 used c 'int'     |-ForStmt 0x133141b10 <line:5:2, line:9:2>     | |-BinaryOperator 0x133128560 <line:5:7, col:11> 'int' '='     | | |-DeclRefExpr 0x133128508 <col:7> 'int' lvalue Var 0x1331283f0 'i' 'int'     | | `-ImplicitCastExpr 0x133128548 <col:11> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x133128528 <col:11> 'int' lvalue ParmVar 0x1331281a8 'n' 'int'     | |-<<<NULL>>>     | |-BinaryOperator 0x1331285d8 <col:14, col:18> 'int' '>'     | | |-ImplicitCastExpr 0x1331285c0 <col:14> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x133128580 <col:14> 'int' lvalue Var 0x1331283f0 'i' 'int'     | | `-IntegerLiteral 0x1331285a0 <col:18> 'int' 0     | |-UnaryOperator 0x133128618 <col:21, col:23> 'int' prefix '--'     | | `-DeclRefExpr 0x1331285f8 <col:23> 'int' lvalue Var 0x1331283f0 'i' 'int'     | `-CompoundStmt 0x133141af0 <col:26, line:9:2>     |   |-BinaryOperator 0x133141800 <line:6:3, col:32> 'int' contains-errors '='     |   | |-DeclRefExpr 0x133128630 <col:3> 'int' lvalue Var 0x133128488 'c' 'int'     |   | `-BinaryOperator 0x1331287c8 <col:7, col:32> '<dependent type>' contains-errors '&'     |   |   |-ParenExpr 0x133128788 <col:7, col:28> '<dependent type>' contains-errors     |   |   | `-BinaryOperator 0x133128768 <col:8, col:27> '<dependent type>' contains-errors '>>'     |   |   |   |-RecoveryExpr 0x133128650 <col:8> '<dependent type>' contains-errors lvalue     |   |   |   `-ParenExpr 0x133128748 <col:15, col:27> 'int'     |   |   |     `-BinaryOperator 0x133128728 <col:16, col:26> 'int' '*'     |   |   |       |-IntegerLiteral 0x133128670 <col:16> 'int' 8     |   |   |       `-ParenExpr 0x133128708 <col:20, col:26> 'int'     |   |   |         `-BinaryOperator 0x1331286e8 <col:21, col:25> 'int' '-'     |   |   |           |-ImplicitCastExpr 0x1331286d0 <col:21> 'int' <LValueToRValue>     |   |   |           | `-DeclRefExpr 0x133128690 <col:21> 'int' lvalue Var 0x1331283f0 'i' 'int'     |   |   |           `-IntegerLiteral 0x1331286b0 <col:25> 'int' 1     |   |   `-IntegerLiteral 0x1331287a8 <col:32> 'int' 255     |   `-IfStmt 0x133141ad0 <line:7:3, line:8:12>     |     |-BinaryOperator 0x133141a68 <line:7:7, col:34> 'int' contains-errors '=='     |     | |-CallExpr 0x1331419e0 <col:7, col:29> '<dependent type>' contains-errors     |     | | |-DeclRefExpr 0x133141980 <col:7> 'int ()' Function 0x1331418c8 'jas_stream_putc' 'int ()'     |     | | |-RecoveryExpr 0x1331419a0 <col:23> '<dependent type>' contains-errors lvalue     |     | | `-DeclRefExpr 0x1331419c0 <col:28> 'int' lvalue Var 0x133128488 'c' 'int'     |     | `-RecoveryExpr 0x133141a48 <col:34> '<dependent type>' contains-errors lvalue     |     `-ReturnStmt 0x133141ac0 <line:8:4, col:12>     |       `-UnaryOperator 0x133141aa8 <col:11, col:12> 'int' prefix '-'     |         `-IntegerLiteral 0x133141a88 <col:12> 'int' 1     `-ReturnStmt 0x133141b68 <line:10:2, col:9>       `-IntegerLiteral 0x133141b48 <col:9> 'int' 0 ","21090":"`-FunctionDecl 0x14802b0d8  line:1:1 invalid loop_info 'int (int *, int *, struct req_pkt *)'   |-ParmVarDecl 0x148012128 <line:2:2, col:14> col:14 invalid srcadr 'int *'   |-ParmVarDecl 0x1480121a8 <line:3:2, col:9> col:9 invalid inter 'int *'   |-ParmVarDecl 0x148012798 <line:4:2, col:18> col:18 used inpkt 'struct req_pkt *'   `-CompoundStmt 0x14802dbc0 <line:6:1, line:22:1>     |-DeclStmt 0x14802b388 <line:7:2, col:22>     | |-RecordDecl 0x14802b198 <col:2, col:9> col:9 struct info_loop     | `-VarDecl 0x14802b308 <col:2, col:20> col:20 used li 'struct info_loop *'     |-CallExpr 0x14802b7c0 <line:13:2, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14802b6d0 <col:2> 'int ()' Function 0x14802b618 'DTOLFP' 'int ()'     | |-RecoveryExpr 0x14802b768 <col:9> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x14802b7a8 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14802b788 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14802ba00 <line:14:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14802b8d0 <col:2> 'int ()' Function 0x14802b818 'HTONL_FP' 'int ()'     | |-UnaryOperator 0x14802b9e8 <col:11, col:12> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x14802b9c8 <col:12> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x14802b980 <col:18, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14802b958 <col:19, col:23> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14802b920 <col:19> 'struct info_loop *' lvalue Var 0x14802b308 'li' 'struct info_loop *'     |-CallExpr 0x14802bb80 <line:15:2, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14802ba30 <col:2> 'int ()' Function 0x14802b618 'DTOLFP' 'int ()'     | |-BinaryOperator 0x14802bb28 <col:9, col:22> '<dependent type>' contains-errors '*'     | | |-RecoveryExpr 0x14802bb08 <col:9> '<dependent type>' contains-errors lvalue     | | `-FloatingLiteral 0x14802ba68 <col:22> 'double' 1.000000e+06     | `-UnaryOperator 0x14802bb68 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14802bb48 <col:28> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14802bce0 <line:16:2, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14802bbb0 <col:2> 'int ()' Function 0x14802b818 'HTONL_FP' 'int ()'     | |-UnaryOperator 0x14802bcc8 <col:11, col:12> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x14802bca8 <col:12> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x14802bc60 <col:18, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14802bc38 <col:19, col:23> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14802bc00 <col:19> 'struct info_loop *' lvalue Var 0x14802b308 'li' 'struct info_loop *'     |-CallExpr 0x14802da68 <line:20:2, col:11> 'int'     | `-ImplicitCastExpr 0x14802da50 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x14802da00 <col:2> 'int ()' Function 0x14802bf48 'more_pkt' 'int ()'     `-CallExpr 0x14802dba0 <line:21:2, col:12> 'int'       `-ImplicitCastExpr 0x14802db88 <col:2> 'int (*)()' <FunctionToPointerDecay>         `-DeclRefExpr 0x14802db68 <col:2> 'int ()' Function 0x14802dab0 'flush_pkt' 'int ()' ","20482":"`-FunctionDecl 0x12b129600  line:1:12 input_handlers_seq_show 'int (struct seq_file *, void *)' static   |-ParmVarDecl 0x12b111248 <col:36, col:53> col:53 used seq 'struct seq_file *'   |-ParmVarDecl 0x12b1112c8 <col:58, col:64> col:64 used v 'void *'   `-CompoundStmt 0x12a00dc00 <line:2:1, line:14:1>     |-DeclStmt 0x12b129a70 <line:3:2, col:77>     | |-RecordDecl 0x12b129700 <col:2, col:9> col:9 struct input_handler     | `-VarDecl 0x12b129868 <col:2, col:24> col:24 used handler 'struct input_handler *'     |-DeclStmt 0x12b129da8 <line:4:2, col:71>     | |-RecordDecl 0x12b129a88 <col:2, col:8> col:8 union input_seq_state     | `-VarDecl 0x12b129bf8 <col:2, col:64> col:25 used state 'union input_seq_state *' cinit     |   `-CStyleCastExpr 0x12b129d68 <col:33, col:64> 'union input_seq_state *' contains-errors <Dependent>     |     `-UnaryOperator 0x12b129cc0 <col:58, col:64> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x12b129c98 <col:59, col:64> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x12b129c60 <col:59> 'struct seq_file *' lvalue ParmVar 0x12b111248 'seq' 'struct seq_file *'     |-CallExpr 0x12b12a000 <line:6:2, col:50> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12b129ea0 <col:2> 'int ()' Function 0x12b129de8 'seq_printf' 'int ()'     | |-DeclRefExpr 0x12b129ec0 <col:13> 'struct seq_file *' lvalue ParmVar 0x12b111248 'seq' 'struct seq_file *'     | |-StringLiteral 0x12b129f20 <col:18> 'char[4]' lvalue \"STR\"     | |-RecoveryExpr 0x12b129f78 <col:25, col:32> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12b129f40 <col:25> 'union input_seq_state *' contains-errors lvalue Var 0x12b129bf8 'state' 'union input_seq_state *'     | `-RecoveryExpr 0x12b129fd8 <col:37, col:46> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12b129fa0 <col:37> 'struct input_handler *' lvalue Var 0x12b129868 'handler' 'struct input_handler *'     |-IfStmt 0x12b12a288 <line:7:2, line:8:22>     | |-RecoveryExpr 0x12b12a078 <line:7:6, col:15> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12b12a040 <col:6> 'struct input_handler *' lvalue Var 0x12b129868 'handler' 'struct input_handler *'     | `-CallExpr 0x12b12a228 <line:8:3, col:22> 'int'     |   |-ImplicitCastExpr 0x12b12a210 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12b12a180 <col:3> 'int ()' Function 0x12b12a0c8 'seq_puts' 'int ()'     |   |-ImplicitCastExpr 0x12b12a258 <col:12> 'struct seq_file *' <LValueToRValue>     |   | `-DeclRefExpr 0x12b12a1a0 <col:12> 'struct seq_file *' lvalue ParmVar 0x12b111248 'seq' 'struct seq_file *'     |   `-ImplicitCastExpr 0x12b12a270 <col:17> 'char *' <ArrayToPointerDecay>     |     `-StringLiteral 0x12b12a1c0 <col:17> 'char[4]' lvalue \"STR\"     |-IfStmt 0x12b12a400 <line:9:2, line:10:40>     | |-RecoveryExpr 0x12b12a2e0 <line:9:6, col:15> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12b12a2a8 <col:6> 'struct input_handler *' lvalue Var 0x12b129868 'handler' 'struct input_handler *'     | `-CallExpr 0x12b12a3c8 <line:10:3, col:40> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12b12a308 <col:3> 'int ()' Function 0x12b129de8 'seq_printf' 'int ()'     |   |-DeclRefExpr 0x12b12a328 <col:14> 'struct seq_file *' lvalue ParmVar 0x12b111248 'seq' 'struct seq_file *'     |   |-StringLiteral 0x12b12a348 <col:19> 'char[4]' lvalue \"STR\"     |   `-RecoveryExpr 0x12b12a3a0 <col:26, col:35> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12b12a368 <col:26> 'struct input_handler *' lvalue Var 0x12b129868 'handler' 'struct input_handler *'     |-CallExpr 0x12b12a570 <line:11:2, col:20> 'int'     | |-ImplicitCastExpr 0x12b12a558 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12b12a500 <col:2> 'int ()' Function 0x12b12a448 'seq_putc' 'int ()'     | |-ImplicitCastExpr 0x12b12a5a0 <col:11> 'struct seq_file *' <LValueToRValue>     | | `-DeclRefExpr 0x12b12a520 <col:11> 'struct seq_file *' lvalue ParmVar 0x12b111248 'seq' 'struct seq_file *'     | `-CharacterLiteral 0x12b12a540 <col:16> 'int' 10     `-ReturnStmt 0x12b12a5d8 <line:13:2, col:9>       `-IntegerLiteral 0x12b12a5b8 <col:9> 'int' 0 ","20751":"`-FunctionDecl 0x138141800  line:1:13 invalid l2cap_check_enc_key_size 'int (struct hci_conn *)' static   |-ParmVarDecl 0x138128668 <col:38, col:55> col:55 used hcon 'struct hci_conn *'   `-CompoundStmt 0x138141bc0 <line:2:1, line:6:1> ","20864":"`-FunctionDecl 0x142826938  line:1:12 referenced mpage_da_writepages 'int (struct address_space *, struct writeback_control *, struct mpage_da_data *)' static   |-ParmVarDecl 0x14280e248 <col:32, col:54> col:54 used mapping 'struct address_space *'   |-ParmVarDecl 0x142826628 <line:2:11, col:37> col:37 used wbc 'struct writeback_control *'   |-ParmVarDecl 0x1428267f8 <line:3:11, col:33> col:33 used mpd 'struct mpage_da_data *'   `-CompoundStmt 0x1438094b8 <line:4:1, line:30:1>     |-DeclStmt 0x142826ac0 <line:5:2, col:9>     | `-VarDecl 0x142826a58 <col:2, col:6> col:6 used ret 'int'     |-IfStmt 0x142826da8 <line:7:2, line:8:41>     | |-UnaryOperator 0x142826b50 <line:7:6, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x142826b38 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x142826b10 <col:7, col:12> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x142826ad8 <col:7> 'struct mpage_da_data *' lvalue ParmVar 0x1428267f8 'mpd' 'struct mpage_da_data *'     | `-ReturnStmt 0x142826d98 <line:8:3, col:41>     |   `-CallExpr 0x142826d38 <col:10, col:41> 'int'     |     |-ImplicitCastExpr 0x142826d20 <col:10> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x142826c90 <col:10> 'int ()' Function 0x142826bd8 'generic_writepages' 'int ()'     |     |-ImplicitCastExpr 0x142826d68 <col:29> 'struct address_space *' <LValueToRValue>     |     | `-DeclRefExpr 0x142826cb0 <col:29> 'struct address_space *' lvalue ParmVar 0x14280e248 'mapping' 'struct address_space *'     |     `-ImplicitCastExpr 0x142826d80 <col:38> 'struct writeback_control *' <LValueToRValue>     |       `-DeclRefExpr 0x142826cd0 <col:38> 'struct writeback_control *' lvalue ParmVar 0x142826628 'wbc' 'struct writeback_control *'     |-BinaryOperator 0x142826e90 <line:10:2, col:20> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x142826e28 <col:2, col:11> '<dependent type>' contains-errors lvalue .b_size     | | `-RecoveryExpr 0x142826e00 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x142826dc8 <col:2> 'struct mpage_da_data *' lvalue ParmVar 0x1428267f8 'mpd' 'struct mpage_da_data *'     | `-IntegerLiteral 0x142826e70 <col:20> 'int' 0     |-BinaryOperator 0x142826f78 <line:11:2, col:21> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x142826f10 <col:2, col:11> '<dependent type>' contains-errors lvalue .b_state     | | `-RecoveryExpr 0x142826ee8 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x142826eb0 <col:2> 'struct mpage_da_data *' lvalue ParmVar 0x1428267f8 'mpd' 'struct mpage_da_data *'     | `-IntegerLiteral 0x142826f58 <col:21> 'int' 0     |-BinaryOperator 0x142827060 <line:12:2, col:23> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x142826ff8 <col:2, col:11> '<dependent type>' contains-errors lvalue .b_blocknr     | | `-RecoveryExpr 0x142826fd0 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x142826f98 <col:2> 'struct mpage_da_data *' lvalue ParmVar 0x1428267f8 'mpd' 'struct mpage_da_data *'     | `-IntegerLiteral 0x142827040 <col:23> 'int' 0     |-BinaryOperator 0x142827100 <line:13:2, col:20> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1428270b8 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x142827080 <col:2> 'struct mpage_da_data *' lvalue ParmVar 0x1428267f8 'mpd' 'struct mpage_da_data *'     | `-IntegerLiteral 0x1428270e0 <col:20> 'int' 0     |-BinaryOperator 0x1428271a0 <line:14:2, col:19> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x142827158 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x142827120 <col:2> 'struct mpage_da_data *' lvalue ParmVar 0x1428267f8 'mpd' 'struct mpage_da_data *'     | `-IntegerLiteral 0x142827180 <col:19> 'int' 0     |-BinaryOperator 0x142827240 <line:15:2, col:17> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1428271f8 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1428271c0 <col:2> 'struct mpage_da_data *' lvalue ParmVar 0x1428267f8 'mpd' 'struct mpage_da_data *'     | `-IntegerLiteral 0x142827220 <col:17> 'int' 0     |-BinaryOperator 0x1428272e0 <line:16:2, col:23> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x142827298 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x142827260 <col:2> 'struct mpage_da_data *' lvalue ParmVar 0x1428267f8 'mpd' 'struct mpage_da_data *'     | `-IntegerLiteral 0x1428272c0 <col:23> 'int' 0     |-BinaryOperator 0x142827380 <line:17:2, col:16> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x142827338 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x142827300 <col:2> 'struct mpage_da_data *' lvalue ParmVar 0x1428267f8 'mpd' 'struct mpage_da_data *'     | `-IntegerLiteral 0x142827360 <col:16> 'int' 0     |-BinaryOperator 0x143808d00 <line:19:2, col:65> 'int' '='     | |-DeclRefExpr 0x1428273a0 <col:2> 'int' lvalue Var 0x142826a58 'ret' 'int'     | `-CallExpr 0x143808c00 <col:8, col:65> 'int'     |   |-ImplicitCastExpr 0x1428275b8 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1428274a0 <col:8> 'int ()' Function 0x1428273e8 'write_cache_pages' 'int ()'     |   |-ImplicitCastExpr 0x143808c40 <col:26> 'struct address_space *' <LValueToRValue>     |   | `-DeclRefExpr 0x1428274c0 <col:26> 'struct address_space *' lvalue ParmVar 0x14280e248 'mapping' 'struct address_space *'     |   |-ImplicitCastExpr 0x143808c58 <col:35> 'struct writeback_control *' <LValueToRValue>     |   | `-DeclRefExpr 0x1428274e0 <col:35> 'struct writeback_control *' lvalue ParmVar 0x142826628 'wbc' 'struct writeback_control *'     |   |-ImplicitCastExpr 0x143808cd0 <col:40> 'int (*)(struct address_space *, struct writeback_control *, struct mpage_da_data *)' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x142827598 <col:40> 'int (struct address_space *, struct writeback_control *, struct mpage_da_data *)' Function 0x142826938 'mpage_da_writepages' 'int (struct address_space *, struct writeback_control *, struct mpage_da_data *)'     |   `-ImplicitCastExpr 0x143808ce8 <col:62> 'struct mpage_da_data *' <LValueToRValue>     |     `-DeclRefExpr 0x142827518 <col:62> 'struct mpage_da_data *' lvalue ParmVar 0x1428267f8 'mpd' 'struct mpage_da_data *'     |-IfStmt 0x143809360 <line:21:2, line:27:2>     | |-BinaryOperator 0x143808e90 <line:21:6, col:46> 'int' contains-errors '&&'     | | |-UnaryOperator 0x143808d98 <col:6, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x143808d80 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-RecoveryExpr 0x143808d58 <col:7, col:12> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x143808d20 <col:7> 'struct mpage_da_data *' lvalue ParmVar 0x1428267f8 'mpd' 'struct mpage_da_data *'     | | `-BinaryOperator 0x143808e70 <col:23, col:46> 'int' contains-errors '!='     | |   |-RecoveryExpr 0x143808de8 <col:23, col:28> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x143808db0 <col:23> 'struct mpage_da_data *' lvalue ParmVar 0x1428267f8 'mpd' 'struct mpage_da_data *'     | |   `-RecoveryExpr 0x143808e48 <col:41, col:46> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x143808e10 <col:41> 'struct mpage_da_data *' lvalue ParmVar 0x1428267f8 'mpd' 'struct mpage_da_data *'     | `-CompoundStmt 0x143809338 <col:58, line:27:2>     |   |-IfStmt 0x1438091e0 <line:22:3, line:23:26>     |   | |-BinaryOperator 0x143809048 <line:22:7, col:35> 'int' '=='     |   | | |-CallExpr 0x143808fe8 <col:7, col:30> 'int'     |   | | | |-ImplicitCastExpr 0x143808fd0 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | | | | `-DeclRefExpr 0x143808f90 <col:7> 'int ()' Function 0x143808ed8 'mpage_da_map_blocks' 'int ()'     |   | | | `-ImplicitCastExpr 0x143809010 <col:27> 'struct mpage_da_data *' <LValueToRValue>     |   | | |   `-DeclRefExpr 0x143808fb0 <col:27> 'struct mpage_da_data *' lvalue ParmVar 0x1428267f8 'mpd' 'struct mpage_da_data *'     |   | | `-IntegerLiteral 0x143809028 <col:35> 'int' 0     |   | `-CallExpr 0x1438091a0 <line:23:4, col:26> 'int'     |   |   |-ImplicitCastExpr 0x143809188 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x143809148 <col:4> 'int ()' Function 0x143809090 'mpage_da_submit_io' 'int ()'     |   |   `-ImplicitCastExpr 0x1438091c8 <col:23> 'struct mpage_da_data *' <LValueToRValue>     |   |     `-DeclRefExpr 0x143809168 <col:23> 'struct mpage_da_data *' lvalue ParmVar 0x1428267f8 'mpd' 'struct mpage_da_data *'     |   |-BinaryOperator 0x143809280 <line:25:3, col:18> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x143809238 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x143809200 <col:3> 'struct mpage_da_data *' lvalue ParmVar 0x1428267f8 'mpd' 'struct mpage_da_data *'     |   | `-IntegerLiteral 0x143809260 <col:18> 'int' 1     |   `-BinaryOperator 0x143809318 <line:26:3, col:9> 'int' contains-errors '='     |     |-DeclRefExpr 0x1438092a0 <col:3> 'int' lvalue Var 0x142826a58 'ret' 'int'     |     `-RecoveryExpr 0x1438092f8 <col:9> '<dependent type>' contains-errors lvalue     |-CompoundAssignOperator 0x143809440 <line:28:2, col:27> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-RecoveryExpr 0x1438093b8 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x143809380 <col:2> 'struct writeback_control *' lvalue ParmVar 0x142826628 'wbc' 'struct writeback_control *'     | `-RecoveryExpr 0x143809418 <col:22, col:27> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1438093e0 <col:22> 'struct mpage_da_data *' lvalue ParmVar 0x1428267f8 'mpd' 'struct mpage_da_data *'     `-ReturnStmt 0x1438094a8 <line:29:2, col:9>       `-ImplicitCastExpr 0x143809490 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x143809470 <col:9> 'int' lvalue Var 0x142826a58 'ret' 'int' ","21224":"`-FunctionDecl 0x143128750  line:1:13 __svm_vcpu_reset 'void (struct kvm_vcpu *)' static   |-ParmVarDecl 0x143128648 <col:30, col:47> col:47 used vcpu 'struct kvm_vcpu *'   `-CompoundStmt 0x143141668 <line:2:1, line:13:1>     |-DeclStmt 0x143140e48 <line:3:2, col:37>     | |-RecordDecl 0x143140a48 <col:2, col:9> col:9 struct vcpu_svm     | `-VarDecl 0x143140bb8 <col:2, col:36> col:19 used svm 'struct vcpu_svm *' cinit     |   `-ImplicitCastExpr 0x143140e18 <col:25, col:36> 'struct vcpu_svm *' <IntegralToPointer>     |     `-CallExpr 0x143140dd8 <col:25, col:36> 'int'     |       |-ImplicitCastExpr 0x143140dc0 <col:25> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x143140d50 <col:25> 'int ()' Function 0x143140c98 'to_svm' 'int ()'     |       `-ImplicitCastExpr 0x143140e00 <col:32> 'struct kvm_vcpu *' <LValueToRValue>     |         `-DeclRefExpr 0x143140d70 <col:32> 'struct kvm_vcpu *' lvalue ParmVar 0x143128648 'vcpu' 'struct kvm_vcpu *'     |-CallExpr 0x143140fe0 <line:5:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x143140f40 <col:2> 'int ()' Function 0x143140e88 'svm_vcpu_init_msrpm' 'int ()'     | |-DeclRefExpr 0x143140f60 <col:22> 'struct kvm_vcpu *' lvalue ParmVar 0x143128648 'vcpu' 'struct kvm_vcpu *'     | `-RecoveryExpr 0x143140fb8 <col:28, col:33> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x143140f80 <col:28> 'struct vcpu_svm *' lvalue Var 0x143140bb8 'svm' 'struct vcpu_svm *'     |-CallExpr 0x143141148 <line:7:2, col:20> 'int'     | |-ImplicitCastExpr 0x143141130 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1431410f0 <col:2> 'int ()' Function 0x143141038 'svm_init_osvw' 'int ()'     | `-ImplicitCastExpr 0x143141170 <col:16> 'struct kvm_vcpu *' <LValueToRValue>     |   `-DeclRefExpr 0x143141110 <col:16> 'struct kvm_vcpu *' lvalue ParmVar 0x143128648 'vcpu' 'struct kvm_vcpu *'     |-BinaryOperator 0x143141250 <line:8:2, col:33> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1431411e8 <col:2, col:13> '<dependent type>' contains-errors lvalue .microcode_version     | | `-RecoveryExpr 0x1431411c0 <col:2, col:8> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x143141188 <col:2> 'struct kvm_vcpu *' lvalue ParmVar 0x143128648 'vcpu' 'struct kvm_vcpu *'     | `-IntegerLiteral 0x143141230 <col:33> 'int' 16777317     |-BinaryOperator 0x143141328 <line:9:2, col:23> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1431412a8 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x143141270 <col:2> 'struct vcpu_svm *' lvalue Var 0x143140bb8 'svm' 'struct vcpu_svm *'     | `-RecoveryExpr 0x143141308 <col:23> '<dependent type>' contains-errors lvalue     `-IfStmt 0x143141648 <line:11:2, line:12:24>       |-CallExpr 0x1431414a8 <line:11:6, col:28> '<dependent type>' contains-errors       | |-DeclRefExpr 0x143141428 <col:6> 'int ()' Function 0x143141370 'sev_es_guest' 'int ()'       | `-RecoveryExpr 0x143141480 <col:19, col:25> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x143141448 <col:19> 'struct kvm_vcpu *' lvalue ParmVar 0x143128648 'vcpu' 'struct kvm_vcpu *'       `-CallExpr 0x143141608 <line:12:3, col:24> 'int'         |-ImplicitCastExpr 0x1431415f0 <col:3> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x1431415b0 <col:3> 'int ()' Function 0x1431414f8 'sev_es_vcpu_reset' 'int ()'         `-ImplicitCastExpr 0x143141630 <col:21> 'struct vcpu_svm *' <LValueToRValue>           `-DeclRefExpr 0x1431415d0 <col:21> 'struct vcpu_svm *' lvalue Var 0x143140bb8 'svm' 'struct vcpu_svm *' ","20485":"`-FunctionDecl 0x11f128258  line:1:1 invalid CryptGetSymmetricBlockSize 'int (int, int)'   |-ParmVarDecl 0x11f1280f0 <line:2:7, col:23> col:23 invalid symmetricAlg 'int'   |-ParmVarDecl 0x11f128170 <line:3:7, col:23> col:23 invalid keySizeInBits 'int'   `-CompoundStmt 0x11f141910 <line:5:1, line:41:1>     |-DeclStmt 0x11f128390 <line:6:5, col:26>     | `-VarDecl 0x11f128328 <col:5, col:21> col:21 invalid sizes 'const int *'     |-SwitchStmt 0x11f1283e0 <line:9:5, line:25:2>     | |-ImplicitCastExpr 0x11f1283c8 <line:9:12> '<dependent type>' contains-errors <LValueToRValue>     | | `-RecoveryExpr 0x11f1283a8 <col:12> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x11f128458 <line:10:2, line:25:2>     |   `-DefaultStmt 0x11f128438 <line:23:4, line:24:13>     |     `-ReturnStmt 0x11f128428 <col:6, col:13>     |       `-IntegerLiteral 0x11f128408 <col:13> 'int' 0     |-ForStmt 0x11f128708 <line:27:5, line:31:2>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-BinaryOperator 0x11f128538 <line:27:16, col:26> 'int' contains-errors '>='     | | |-UnaryOperator 0x11f128500 <col:16, col:17> '<dependent type>' contains-errors prefix '*' cannot overflow     | | | `-ImplicitCastExpr 0x11f1284e8 <col:17> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-RecoveryExpr 0x11f1284c8 <col:17> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x11f128518 <col:26> 'int' 0     | |-BinaryOperator 0x11f128618 <col:29, col:39> '<dependent type>' contains-errors ','     | | |-UnaryOperator 0x11f128600 <col:29, col:30> '<dependent type>' contains-errors postfix '++' cannot overflow     | | | `-RecoveryExpr 0x11f1285e0 <col:29> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x11f1285a8 <col:34, col:39> '<dependent type>' contains-errors postfix '++' cannot overflow     | |   `-RecoveryExpr 0x11f128588 <col:34> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x11f1286f0 <line:28:2, line:31:2>     |   `-IfStmt 0x11f1286d0 <line:29:6, line:30:3>     |     |-BinaryOperator 0x11f1286a8 <line:29:9, col:19> 'int' contains-errors '=='     |     | |-UnaryOperator 0x11f128670 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow     |     | | `-ImplicitCastExpr 0x11f128658 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |     | |   `-RecoveryExpr 0x11f128638 <col:10> '<dependent type>' contains-errors lvalue     |     | `-RecoveryExpr 0x11f128688 <col:19> '<dependent type>' contains-errors lvalue     |     `-BreakStmt 0x11f1286c8 <line:30:3>     |-IfStmt 0x11f141800 <line:34:5, line:35:9>     | |-BinaryOperator 0x11f1287b0 <line:34:8, col:19> 'int' contains-errors '<'     | | |-UnaryOperator 0x11f128778 <col:8, col:14> '<dependent type>' contains-errors prefix '*' cannot overflow     | | | `-UnaryOperator 0x11f128760 <col:9, col:14> '<dependent type>' contains-errors postfix '++' cannot overflow     | | |   `-RecoveryExpr 0x11f128740 <col:9> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x11f128790 <col:19> 'int' 0     | `-ReturnStmt 0x11f1287f0 <line:35:2, col:9>     |   `-IntegerLiteral 0x11f1287d0 <col:9> 'int' 0     `-WhileStmt 0x11f1418b8 <line:37:5, col:25>       |-BinaryOperator 0x11f141890 <col:11, col:23> 'int' contains-errors '>='       | |-UnaryOperator 0x11f141858 <col:11, col:17> '<dependent type>' contains-errors prefix '*' cannot overflow       | | `-UnaryOperator 0x11f141840 <col:12, col:17> '<dependent type>' contains-errors postfix '++' cannot overflow       | |   `-RecoveryExpr 0x11f141820 <col:12> '<dependent type>' contains-errors lvalue       | `-IntegerLiteral 0x11f141870 <col:23> 'int' 0       `-NullStmt 0x11f1418b0 <col:25> ","20865":"`-FunctionDecl 0x15100e158  line:1:1 invalid spnego_gss_unwrap_aead 'int (int *, int, int, int, int, int *, int *)'   |-ParmVarDecl 0x15100dd28 <col:24, col:35> col:35 invalid minor_status 'int *'   |-ParmVarDecl 0x15100dda8 <line:2:10, col:23> col:23 invalid context_handle 'int'   |-ParmVarDecl 0x15100de28 <line:3:10, col:23> col:23 invalid input_message_buffer 'int'   |-ParmVarDecl 0x15100dea8 <line:4:10, col:23> col:23 invalid input_assoc_buffer 'int'   |-ParmVarDecl 0x15100df28 <line:5:10, col:23> col:23 invalid output_payload_buffer 'int'   |-ParmVarDecl 0x15100dfa8 <line:6:10, col:15> col:15 used conf_state 'int *'   |-ParmVarDecl 0x15100e028 <line:7:10, col:21> col:21 invalid qop_state 'int *'   `-CompoundStmt 0x151027510 <line:8:1, line:18:1> ","20910":"`-FunctionDecl 0x157053488  line:1:1 invalid f_setbufvar 'int (int *, int *)'   |-ParmVarDecl 0x157053328 <col:13, col:23> col:23 invalid argvars 'int *'   |-ParmVarDecl 0x1570533a8 <col:32, col:42> col:42 invalid rettv 'int *'   `-CompoundStmt 0x15706f0c8 <line:2:1, line:49:1>     |-DeclStmt 0x157053670 <line:4:5, col:33>     | |-VarDecl 0x157053570 <col:5, col:13> col:13 used varname 'char *'     | `-VarDecl 0x1570535f0 <col:5, col:23> col:23 used bufvarname 'char *'     |-IfStmt 0x157053898 <line:7:5, line:8:2>     | |-CallExpr 0x157053868 <line:7:9, col:22> 'int'     | | `-ImplicitCastExpr 0x157053850 <col:9> 'int (*)()' <FunctionToPointerDecay>     | |   `-DeclRefExpr 0x157053800 <col:9> 'int ()' Function 0x157053748 'check_secure' 'int ()'     | `-ReturnStmt 0x157053888 <line:8:2>     |-IfStmt 0x15706cda0 <line:10:5, line:13:2>     | |-RecoveryExpr 0x15706cd70 <line:10:9, line:12:46> '_Bool' contains-errors     | `-ReturnStmt 0x15706cd90 <line:13:2>     |-BinaryOperator 0x15706cf98 <line:15:5, col:44> 'char *' contains-errors '='     | |-DeclRefExpr 0x15706cdc0 <col:5> 'char *' lvalue Var 0x157053570 'varname' 'char *'     | `-CallExpr 0x15706cf70 <col:15, col:44> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15706cec0 <col:15> 'int ()' Function 0x15706ce08 'tv_get_string_chk' 'int ()'     |   `-UnaryOperator 0x15706cf58 <col:33, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-ArraySubscriptExpr 0x15706cf38 <col:34, col:43> '<dependent type>' contains-errors lvalue     |       |-ImplicitCastExpr 0x15706cf20 <col:34> '<dependent type>' contains-errors <LValueToRValue>     |       | `-RecoveryExpr 0x15706cee0 <col:34> '<dependent type>' contains-errors lvalue     |       `-IntegerLiteral 0x15706cf00 <col:42> 'int' 1     `-IfStmt 0x15706f0a8 <line:19:5, line:48:5>       |-BinaryOperator 0x15706d458 <line:19:9, col:51> 'int' contains-errors '&&'       | |-BinaryOperator 0x15706d3d8 <col:9, col:35> 'int' contains-errors '&&'       | | |-BinaryOperator 0x15706d378 <col:9, col:16> 'int' contains-errors '!='       | | | |-RecoveryExpr 0x15706d338 <col:9> '<dependent type>' contains-errors lvalue       | | | `-RecoveryExpr 0x15706d358 <col:16> '<dependent type>' contains-errors lvalue       | | `-BinaryOperator 0x15706d3b8 <col:24, col:35> 'int' contains-errors '!='       | |   |-DeclRefExpr 0x15706d250 <col:24> 'char *' lvalue Var 0x157053570 'varname' 'char *'       | |   `-RecoveryExpr 0x15706d398 <col:35> '<dependent type>' contains-errors lvalue       | `-BinaryOperator 0x15706d438 <col:43, col:51> 'int' contains-errors '!='       |   |-RecoveryExpr 0x15706d3f8 <col:43> '<dependent type>' contains-errors lvalue       |   `-RecoveryExpr 0x15706d418 <col:51> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x15706f090 <line:20:5, line:48:5>         `-IfStmt 0x15706f060 <line:21:2, line:47:2> has_else           |-BinaryOperator 0x15706d510 <line:21:6, col:18> 'int' '=='           | |-ImplicitCastExpr 0x15706d4f8 <col:6, col:7> 'int' <IntegralCast>           | | `-ImplicitCastExpr 0x15706d4e0 <col:6, col:7> 'char' <LValueToRValue>           | |   `-UnaryOperator 0x15706d4b0 <col:6, col:7> 'char' lvalue prefix '*' cannot overflow           | |     `-ImplicitCastExpr 0x15706d498 <col:7> 'char *' <LValueToRValue>           | |       `-DeclRefExpr 0x15706d478 <col:7> 'char *' lvalue Var 0x157053570 'varname' 'char *'           | `-CharacterLiteral 0x15706d4c8 <col:18> 'int' 38           |-CompoundStmt 0x15706d8a8 <line:22:2, line:32:2>           `-CompoundStmt 0x15706f040 <line:34:2, line:47:2>             |-BinaryOperator 0x15706e9e8 <line:35:6, col:44> 'char *' '='             | |-DeclRefExpr 0x15706d8b8 <col:6> 'char *' lvalue Var 0x1570535f0 'bufvarname' 'char *'             | `-ImplicitCastExpr 0x15706e9d0 <col:19, col:44> 'char *' <IntegralToPointer>             |   `-CallExpr 0x15706e9a8 <col:19, col:44> 'int'             |     |-ImplicitCastExpr 0x15706e990 <col:19> 'int (*)()' <FunctionToPointerDecay>             |     | `-DeclRefExpr 0x15706d9b8 <col:19> 'int ()' Function 0x15706d900 'alloc' 'int ()'             |     `-BinaryOperator 0x15706e970 <col:25, col:43> 'int' '+'             |       |-CallExpr 0x15706e910 <col:25, col:39> 'int'             |       | |-ImplicitCastExpr 0x15706e8f8 <col:25> 'int (*)()' <FunctionToPointerDecay>             |       | | `-DeclRefExpr 0x15706e8b8 <col:25> 'int ()' Function 0x15706e800 'STRLEN' 'int ()'             |       | `-ImplicitCastExpr 0x15706e938 <col:32> 'char *' <LValueToRValue>             |       |   `-DeclRefExpr 0x15706e8d8 <col:32> 'char *' lvalue Var 0x157053570 'varname' 'char *'             |       `-IntegerLiteral 0x15706e950 <col:43> 'int' 3             `-IfStmt 0x15706f020 <line:36:6, line:46:6>               |-RecoveryExpr 0x15706ea28 <line:36:10, col:24> '_Bool' contains-errors               `-CompoundStmt 0x15706eff8 <line:37:6, line:46:6>                 |-CallExpr 0x15706ebe8 <line:41:3, col:27> 'int'                 | |-ImplicitCastExpr 0x15706ebd0 <col:3> 'int (*)()' <FunctionToPointerDecay>                 | | `-DeclRefExpr 0x15706eb28 <col:3> 'int ()' Function 0x15706ea70 'STRCPY' 'int ()'                 | |-ImplicitCastExpr 0x15706ec18 <col:10> 'char *' <LValueToRValue>                 | | `-DeclRefExpr 0x15706eb48 <col:10> 'char *' lvalue Var 0x1570535f0 'bufvarname' 'char *'                 | `-ImplicitCastExpr 0x15706ec30 <col:22> 'char *' <ArrayToPointerDecay>                 |   `-StringLiteral 0x15706ebb0 <col:22> 'char[4]' lvalue \"STR\"                 |-CallExpr 0x15706ed18 <line:42:3, col:33> 'int'                 | |-ImplicitCastExpr 0x15706ed00 <col:3> 'int (*)()' <FunctionToPointerDecay>                 | | `-DeclRefExpr 0x15706ec48 <col:3> 'int ()' Function 0x15706ea70 'STRCPY' 'int ()'                 | |-BinaryOperator 0x15706ecc0 <col:10, col:23> 'char *' '+'                 | | |-ImplicitCastExpr 0x15706eca8 <col:10> 'char *' <LValueToRValue>                 | | | `-DeclRefExpr 0x15706ec68 <col:10> 'char *' lvalue Var 0x1570535f0 'bufvarname' 'char *'                 | | `-IntegerLiteral 0x15706ec88 <col:23> 'int' 2                 | `-ImplicitCastExpr 0x15706ed48 <col:26> 'char *' <LValueToRValue>                 |   `-DeclRefExpr 0x15706ece0 <col:26> 'char *' lvalue Var 0x157053570 'varname' 'char *'                 `-CallExpr 0x15706efb8 <line:44:3, col:22> 'int'                   |-ImplicitCastExpr 0x15706efa0 <col:3> 'int (*)()' <FunctionToPointerDecay>                   | `-DeclRefExpr 0x15706ef60 <col:3> 'int ()' Function 0x15706eea8 'vim_free' 'int ()'                   `-ImplicitCastExpr 0x15706efe0 <col:12> 'char *' <LValueToRValue>                     `-DeclRefExpr 0x15706ef80 <col:12> 'char *' lvalue Var 0x1570535f0 'bufvarname' 'char *' ","21127":"`-FunctionDecl 0x1541284b0  line:1:8 invalid calloc 'void *(int, int)'   |-ParmVarDecl 0x1541280f0 <col:15, col:22> col:22 invalid n 'int'   |-ParmVarDecl 0x154128170 <col:25, col:32> col:32 invalid lb 'int'   `-CompoundStmt 0x1541287d8 <line:2:1, line:25:1>     `-ReturnStmt 0x1541287c8 <line:24:5, col:41>       `-ParenExpr 0x1541287a8 <col:11, col:41> 'void *' contains-errors         `-CStyleCastExpr 0x154128780 <col:12, col:40> 'void *' contains-errors <Dependent>           `-CallExpr 0x154128740 <col:20, col:40> '<dependent type>' contains-errors             |-DeclRefExpr 0x1541286c0 <col:20> 'int ()' Function 0x154128608 'REDIRECT_MALLOC' 'int ()'             `-BinaryOperator 0x154128720 <col:36, col:38> '<dependent type>' contains-errors '*'               |-RecoveryExpr 0x1541286e0 <col:36> '<dependent type>' contains-errors lvalue               `-RecoveryExpr 0x154128700 <col:38> '<dependent type>' contains-errors lvalue ","20642":"`-FunctionDecl 0x1401422d8  line:1:16 invalid n_tty_write 'int (struct tty_struct *, struct file *, const unsigned char *, int)' static   |-ParmVarDecl 0x140128e68 <col:28, col:47> col:47 used tty 'struct tty_struct *'   |-ParmVarDecl 0x140142058 <col:52, col:65> col:65 used file 'struct file *'   |-ParmVarDecl 0x140142108 <line:2:7, col:28> col:28 used buf 'const unsigned char *'   |-ParmVarDecl 0x140142188 <col:33, col:40> col:40 referenced invalid nr 'int'   `-CompoundStmt 0x140149bf8 <line:3:1, line:84:1>     |-DeclStmt 0x140142458 <line:4:2, col:30>     | `-VarDecl 0x1401423b8 <col:2, col:27> col:23 used b 'const unsigned char *' cinit     |   `-ImplicitCastExpr 0x140142440 <col:27> 'const unsigned char *' <LValueToRValue>     |     `-DeclRefExpr 0x140142420 <col:27> 'const unsigned char *' lvalue ParmVar 0x140142108 'buf' 'const unsigned char *'     |-CallExpr 0x140142690 <line:5:2, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1401425d0 <col:2> 'int ()' Function 0x140142518 'DECLARE_WAITQUEUE' 'int ()'     | |-RecoveryExpr 0x140142650 <col:20> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x140142670 <col:26> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x140142740 <line:6:2, col:7>     | `-VarDecl 0x1401426d8 <col:2, col:6> col:6 used c 'int'     |-IfStmt 0x140142d48 <line:10:2, line:14:2>     | |-BinaryOperator 0x140142af8 <line:10:6, col:44> 'int' contains-errors '&&'     | | |-CallExpr 0x140142a78 <col:6, col:18> 'int'     | | | |-ImplicitCastExpr 0x140142a60 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x140142838 <col:6> 'int ()' Function 0x140142780 'L_TOSTOP' 'int ()'     | | | `-ImplicitCastExpr 0x140142aa0 <col:15> 'struct tty_struct *' <LValueToRValue>     | | |   `-DeclRefExpr 0x140142858 <col:15> 'struct tty_struct *' lvalue ParmVar 0x140128e68 'tty' 'struct tty_struct *'     | | `-BinaryOperator 0x140142ad8 <col:23, col:44> 'int' contains-errors '!='     | |   |-CXXDependentScopeMemberExpr 0x140142968 <col:23, col:35> '<dependent type>' contains-errors lvalue ->write     | |   | `-RecoveryExpr 0x140142940 <col:23, col:29> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x140142908 <col:23> 'struct file *' lvalue ParmVar 0x140142058 'file' 'struct file *'     | |   `-RecoveryExpr 0x140142ab8 <col:44> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x140142d30 <col:66, line:14:2>     |   `-IfStmt 0x140142d10 <line:12:3, line:13:11>     |     |-RecoveryExpr 0x140142ca8 <line:12:7> '<dependent type>' contains-errors lvalue     |     `-ReturnStmt 0x140142d00 <line:13:4, col:11>     |       `-RecoveryExpr 0x140142ce0 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x140142ee0 <line:16:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x140142e48 <col:2> 'int ()' Function 0x140142d90 'down_read' 'int ()'     | `-UnaryOperator 0x140142ec8 <col:12, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x140142ea0 <col:13, col:18> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x140142e68 <col:13> 'struct tty_struct *' lvalue ParmVar 0x140128e68 'tty' 'struct tty_struct *'     |-CallExpr 0x140147858 <line:19:2, col:20> 'int'     | |-ImplicitCastExpr 0x140147840 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x140147800 <col:2> 'int ()' Function 0x140142f30 'process_echoes' 'int ()'     | `-ImplicitCastExpr 0x140147880 <col:17> 'struct tty_struct *' <LValueToRValue>     |   `-DeclRefExpr 0x140147820 <col:17> 'struct tty_struct *' lvalue ParmVar 0x140128e68 'tty' 'struct tty_struct *'     |-CallExpr 0x140147aa8 <line:21:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x140147978 <col:2> 'int ()' Function 0x1401478c0 'add_wait_queue' 'int ()'     | |-UnaryOperator 0x1401479f8 <col:17, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x1401479d0 <col:18, col:23> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x140147998 <col:18> 'struct tty_struct *' lvalue ParmVar 0x140128e68 'tty' 'struct tty_struct *'     | `-UnaryOperator 0x140147a90 <col:35, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x140147a70 <col:36> '<dependent type>' contains-errors lvalue     |-WhileStmt 0x140149470 <line:22:2, line:76:2>     | |-IntegerLiteral 0x140147ad8 <line:22:9> 'int' 1     | `-CompoundStmt 0x140149420 <col:12, line:76:2>     |   |-IfStmt 0x140147d38 <line:24:3, line:27:3>     |   | |-RecoveryExpr 0x140147cf8 <line:24:7, col:29> '_Bool' contains-errors     |   | `-CompoundStmt 0x140147d20 <col:32, line:27:3>     |   |   `-BreakStmt 0x140147d18 <line:26:4>     |   |-IfStmt 0x140148088 <line:28:3, line:31:3>     |   | |-BinaryOperator 0x140148048 <line:28:7, col:61> 'int' contains-errors '||'     |   | | |-CallExpr 0x140147e90 <col:7, col:25> 'int'     |   | | | |-ImplicitCastExpr 0x140147e78 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | | | | `-DeclRefExpr 0x140147e38 <col:7> 'int ()' Function 0x140147d80 'tty_hung_up_p' 'int ()'     |   | | | `-ImplicitCastExpr 0x140147eb8 <col:21> 'struct file *' <LValueToRValue>     |   | | |   `-DeclRefExpr 0x140147e58 <col:21> 'struct file *' lvalue ParmVar 0x140142058 'file' 'struct file *'     |   | | `-ParenExpr 0x140148028 <col:30, col:61> 'int' contains-errors     |   | |   `-BinaryOperator 0x140148008 <col:31, col:56> 'int' contains-errors '&&'     |   | |     |-RecoveryExpr 0x140147f08 <col:31, col:36> '<dependent type>' contains-errors lvalue     |   | |     | `-DeclRefExpr 0x140147ed0 <col:31> 'struct tty_struct *' lvalue ParmVar 0x140128e68 'tty' 'struct tty_struct *'     |   | |     `-UnaryOperator 0x140147ff0 <col:44, col:56> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | |       `-ImplicitCastExpr 0x140147fd8 <col:45, col:56> '<dependent type>' contains-errors <LValueToRValue>     |   | |         `-CXXDependentScopeMemberExpr 0x140147f90 <col:45, col:56> '<dependent type>' contains-errors lvalue ->count     |   | |           `-RecoveryExpr 0x140147f68 <col:45, col:50> '<dependent type>' contains-errors lvalue     |   | |             `-DeclRefExpr 0x140147f30 <col:45> 'struct tty_struct *' lvalue ParmVar 0x140128e68 'tty' 'struct tty_struct *'     |   | `-CompoundStmt 0x140148070 <col:64, line:31:3>     |   |   `-BreakStmt 0x140148068 <line:30:4>     |   |-IfStmt 0x140148f20 <line:32:3, line:64:3> has_else     |   | |-CallExpr 0x1401481e0 <line:32:7, col:18> 'int'     |   | | |-ImplicitCastExpr 0x1401481c8 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | | | `-DeclRefExpr 0x140148188 <col:7> 'int ()' Function 0x1401480d0 'O_OPOST' 'int ()'     |   | | `-ImplicitCastExpr 0x140148208 <col:15> 'struct tty_struct *' <LValueToRValue>     |   | |   `-DeclRefExpr 0x1401481a8 <col:15> 'struct tty_struct *' lvalue ParmVar 0x140128e68 'tty' 'struct tty_struct *'     |   | |-CompoundStmt 0x140148a30 <col:21, line:52:3>     |   | | |-WhileStmt 0x140148858 <line:33:4, line:49:4>     |   | | | |-BinaryOperator 0x140148260 <line:33:11, col:16> 'int' contains-errors '>'     |   | | | | |-RecoveryExpr 0x140148220 <col:11> '<dependent type>' contains-errors lvalue     |   | | | | `-IntegerLiteral 0x140148240 <col:16> 'int' 0     |   | | | `-CompoundStmt 0x140148818 <col:19, line:49:4>     |   | | |   |-IfStmt 0x140148390 <line:35:5, line:40:5>     |   | | |   | |-RecoveryExpr 0x1401482a0 <line:35:9, col:15> '_Bool' contains-errors     |   | | |   | `-CompoundStmt 0x140148370 <col:18, line:40:5>     |   | | |   |   |-IfStmt 0x1401482e8 <line:36:6, line:37:7>     |   | | |   |   | |-RecoveryExpr 0x1401482c0 <line:36:10, col:18> '_Bool' contains-errors     |   | | |   |   | `-BreakStmt 0x1401482e0 <line:37:7>     |   | | |   |   `-GotoStmt 0x140148358 <line:39:6, col:11> 'break_out' 0x140148308     |   | | |   |-IfStmt 0x140148480 <line:43:5, line:44:6>     |   | | |   | |-BinaryOperator 0x140148458 <line:43:9, col:15> 'int' contains-errors '=='     |   | | |   | | |-RecoveryExpr 0x140148418 <col:9> '<dependent type>' contains-errors lvalue     |   | | |   | | `-IntegerLiteral 0x140148438 <col:15> 'int' 0     |   | | |   | `-BreakStmt 0x140148478 <line:44:6>     |   | | |   |-BinaryOperator 0x140148540 <line:45:5, col:10> 'int' '='     |   | | |   | |-DeclRefExpr 0x1401484a0 <col:5> 'int' lvalue Var 0x1401426d8 'c' 'int'     |   | | |   | `-ImplicitCastExpr 0x140148528 <col:9, col:10> 'int' <IntegralCast>     |   | | |   |   `-ImplicitCastExpr 0x140148510 <col:9, col:10> 'unsigned char' <LValueToRValue>     |   | | |   |     `-UnaryOperator 0x1401484f8 <col:9, col:10> 'const unsigned char' lvalue prefix '*' cannot overflow     |   | | |   |       `-ImplicitCastExpr 0x1401484e0 <col:10> 'const unsigned char *' <LValueToRValue>     |   | | |   |         `-DeclRefExpr 0x1401484c0 <col:10> 'const unsigned char *' lvalue Var 0x1401423b8 'b' 'const unsigned char *'     |   | | |   |-IfStmt 0x140148760 <line:46:5, line:47:6>     |   | | |   | |-BinaryOperator 0x140148738 <line:46:9, col:34> 'int' '<'     |   | | |   | | |-CallExpr 0x1401486b8 <col:9, col:30> 'int'     |   | | |   | | | |-ImplicitCastExpr 0x1401486a0 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | | |   | | | | `-DeclRefExpr 0x140148640 <col:9> 'int ()' Function 0x140148588 'process_output' 'int ()'     |   | | |   | | | |-ImplicitCastExpr 0x1401486e8 <col:24> 'int' <LValueToRValue>     |   | | |   | | | | `-DeclRefExpr 0x140148660 <col:24> 'int' lvalue Var 0x1401426d8 'c' 'int'     |   | | |   | | | `-ImplicitCastExpr 0x140148700 <col:27> 'struct tty_struct *' <LValueToRValue>     |   | | |   | | |   `-DeclRefExpr 0x140148680 <col:27> 'struct tty_struct *' lvalue ParmVar 0x140128e68 'tty' 'struct tty_struct *'     |   | | |   | | `-IntegerLiteral 0x140148718 <col:34> 'int' 0     |   | | |   | `-BreakStmt 0x140148758 <line:47:6>     |   | | |   |-UnaryOperator 0x1401487a0 <line:48:5, col:6> 'const unsigned char *' postfix '++'     |   | | |   | `-DeclRefExpr 0x140148780 <col:5> 'const unsigned char *' lvalue Var 0x1401423b8 'b' 'const unsigned char *'     |   | | |   `-UnaryOperator 0x140148800 <col:10, col:12> '<dependent type>' contains-errors postfix '--' cannot overflow     |   | | |     `-RecoveryExpr 0x1401487d8 <col:10> '<dependent type>' contains-errors lvalue     |   | | |       `-DeclRefExpr 0x1401487b8 <col:10> 'int' lvalue ParmVar 0x140142188 'nr' 'int'     |   | | `-IfStmt 0x140148a10 <line:50:4, line:51:30>     |   | |   |-CXXDependentScopeMemberExpr 0x1401488d8 <line:50:8, col:18> '<dependent type>' contains-errors lvalue ->flush_chars     |   | |   | `-RecoveryExpr 0x1401488b0 <col:8, col:13> '<dependent type>' contains-errors lvalue     |   | |   |   `-DeclRefExpr 0x140148878 <col:8> 'struct tty_struct *' lvalue ParmVar 0x140128e68 'tty' 'struct tty_struct *'     |   | |   `-CallExpr 0x1401489e8 <line:51:5, col:30> '<dependent type>' contains-errors     |   | |     |-CXXDependentScopeMemberExpr 0x140148980 <col:5, col:15> '<dependent type>' contains-errors lvalue ->flush_chars     |   | |     | `-RecoveryExpr 0x140148958 <col:5, col:10> '<dependent type>' contains-errors lvalue     |   | |     |   `-DeclRefExpr 0x140148920 <col:5> 'struct tty_struct *' lvalue ParmVar 0x140128e68 'tty' 'struct tty_struct *'     |   | |     `-DeclRefExpr 0x1401489c8 <col:27> 'struct tty_struct *' lvalue ParmVar 0x140128e68 'tty' 'struct tty_struct *'     |   | `-CompoundStmt 0x140148f08 <line:52:10, line:64:3>     |   |   `-WhileStmt 0x140148ee8 <line:53:4, line:63:4>     |   |     |-BinaryOperator 0x140148a90 <line:53:11, col:16> 'int' contains-errors '>'     |   |     | |-RecoveryExpr 0x140148a50 <col:11> '<dependent type>' contains-errors lvalue     |   |     | `-IntegerLiteral 0x140148a70 <col:16> 'int' 0     |   |     `-CompoundStmt 0x140148eb0 <col:19, line:63:4>     |   |       |-BinaryOperator 0x140148c10 <line:54:5, col:35> 'int' contains-errors '='     |   |       | |-DeclRefExpr 0x140148ab0 <col:5> 'int' lvalue Var 0x1401426d8 'c' 'int'     |   |       | `-CallExpr 0x140148bd8 <col:9, col:35> '<dependent type>' contains-errors     |   |       |   |-CXXDependentScopeMemberExpr 0x140148b30 <col:9, col:19> '<dependent type>' contains-errors lvalue ->write     |   |       |   | `-RecoveryExpr 0x140148b08 <col:9, col:14> '<dependent type>' contains-errors lvalue     |   |       |   |   `-DeclRefExpr 0x140148ad0 <col:9> 'struct tty_struct *' lvalue ParmVar 0x140128e68 'tty' 'struct tty_struct *'     |   |       |   |-DeclRefExpr 0x140148b78 <col:25> 'struct tty_struct *' lvalue ParmVar 0x140128e68 'tty' 'struct tty_struct *'     |   |       |   |-DeclRefExpr 0x140148b98 <col:30> 'const unsigned char *' lvalue Var 0x1401423b8 'b' 'const unsigned char *'     |   |       |   `-RecoveryExpr 0x140148bb8 <col:33> '<dependent type>' contains-errors lvalue     |   |       |-IfStmt 0x140148cf8 <line:55:5, line:58:5>     |   |       | |-BinaryOperator 0x140148c88 <line:55:9, col:13> 'int' '<'     |   |       | | |-ImplicitCastExpr 0x140148c70 <col:9> 'int' <LValueToRValue>     |   |       | | | `-DeclRefExpr 0x140148c30 <col:9> 'int' lvalue Var 0x1401426d8 'c' 'int'     |   |       | | `-IntegerLiteral 0x140148c50 <col:13> 'int' 0     |   |       | `-CompoundStmt 0x140148ce0 <col:16, line:58:5>     |   |       |   `-GotoStmt 0x140148cc8 <line:57:6, col:11> 'break_out' 0x140148308     |   |       |-IfStmt 0x140148d70 <line:59:5, line:60:6>     |   |       | |-UnaryOperator 0x140148d50 <line:59:9, col:10> 'int' prefix '!' cannot overflow     |   |       | | `-ImplicitCastExpr 0x140148d38 <col:10> 'int' <LValueToRValue>     |   |       | |   `-DeclRefExpr 0x140148d18 <col:10> 'int' lvalue Var 0x1401426d8 'c' 'int'     |   |       | `-BreakStmt 0x140148d68 <line:60:6>     |   |       |-CompoundAssignOperator 0x140148de8 <line:61:5, col:10> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'     |   |       | |-DeclRefExpr 0x140148d90 <col:5> 'const unsigned char *' lvalue Var 0x1401423b8 'b' 'const unsigned char *'     |   |       | `-ImplicitCastExpr 0x140148dd0 <col:10> 'int' <LValueToRValue>     |   |       |   `-DeclRefExpr 0x140148db0 <col:10> 'int' lvalue Var 0x1401426d8 'c' 'int'     |   |       `-CompoundAssignOperator 0x140148e80 <line:62:5, col:11> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |         |-RecoveryExpr 0x140148e38 <col:5> '<dependent type>' contains-errors lvalue     |   |         | `-DeclRefExpr 0x140148e18 <col:5> 'int' lvalue ParmVar 0x140142188 'nr' 'int'     |   |         `-DeclRefExpr 0x140148e60 <col:11> 'int' lvalue Var 0x1401426d8 'c' 'int'     |   |-IfStmt 0x140148fa8 <line:65:3, line:66:4>     |   | |-UnaryOperator 0x140148f88 <line:65:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | | `-ImplicitCastExpr 0x140148f70 <col:8> '<dependent type>' contains-errors <LValueToRValue>     |   | |   `-RecoveryExpr 0x140148f50 <col:8> '<dependent type>' contains-errors lvalue     |   | `-BreakStmt 0x140148fa0 <line:66:4>     |   |-IfStmt 0x140149068 <line:67:3, line:70:3>     |   | |-RecoveryExpr 0x140149028 <line:67:7, col:23> '_Bool' contains-errors     |   | `-CompoundStmt 0x140149050 <col:35, line:70:3>     |   |   `-BreakStmt 0x140149048 <line:69:4>     |   |-CallExpr 0x140149200 <line:71:3, col:30> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x140149168 <col:3> 'int ()' Function 0x1401490b0 'up_read' 'int ()'     |   | `-UnaryOperator 0x1401491e8 <col:11, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x1401491c0 <col:12, col:17> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x140149188 <col:12> 'struct tty_struct *' lvalue ParmVar 0x140128e68 'tty' 'struct tty_struct *'     |   |-CallExpr 0x140149340 <line:73:3, col:12> 'int'     |   | `-ImplicitCastExpr 0x140149328 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x140149308 <col:3> 'int ()' Function 0x140149250 'schedule' 'int ()'     |   `-CallExpr 0x1401493f8 <line:75:3, col:32> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x140149360 <col:3> 'int ()' Function 0x140142d90 'down_read' 'int ()'     |     `-UnaryOperator 0x1401493e0 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x1401493b8 <col:14, col:19> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x140149380 <col:14> 'struct tty_struct *' lvalue ParmVar 0x140128e68 'tty' 'struct tty_struct *'     |-LabelStmt 0x140149598 <line:77:1, col:10> 'break_out'     | `-NullStmt 0x140149590 <col:10>     `-CallExpr 0x140149a90 <line:82:2, col:29> '<dependent type>' contains-errors       |-DeclRefExpr 0x1401499f8 <col:2> 'int ()' Function 0x1401490b0 'up_read' 'int ()'       `-UnaryOperator 0x140149a78 <col:10, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x140149a50 <col:11, col:16> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x140149a18 <col:11> 'struct tty_struct *' lvalue ParmVar 0x140128e68 'tty' 'struct tty_struct *' ","20403":"`-FunctionDecl 0x1389152e0  line:1:13 scan_inflight 'void (struct sock *, void (*)(struct unix_sock *), struct sk_buff_head *)' static   |-ParmVarDecl 0x13080e248 <col:27, col:40> col:40 used x 'struct sock *'   |-ParmVarDecl 0x138914fd8 <col:43, col:74> col:50 used func 'void (*)(struct unix_sock *)'   |-ParmVarDecl 0x1389151a8 <line:2:6, col:27> col:27 used hitlist 'struct sk_buff_head *'   `-CompoundStmt 0x138915ee8 <line:3:1, line:30:1>     |-DeclStmt 0x1389155d8 <line:4:2, col:21>     | |-RecordDecl 0x1389153e8 <col:2, col:9> col:9 struct sk_buff     | `-VarDecl 0x138915558 <col:2, col:18> col:18 used skb 'struct sk_buff *'     |-DeclStmt 0x1389156e0 <line:5:2, col:22>     | `-VarDecl 0x138915678 <col:2, col:18> col:18 used next 'struct sk_buff *'     |-CallExpr 0x138915900 <line:7:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x138915820 <col:2> 'int ()' Function 0x138915768 'spin_lock' 'int ()'     | `-UnaryOperator 0x1389158e8 <col:12, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x1389158a0 <col:13, col:33> '<dependent type>' contains-errors lvalue .lock     |     `-RecoveryExpr 0x138915878 <col:13, col:16> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x138915840 <col:13> 'struct sock *' lvalue ParmVar 0x13080e248 'x' 'struct sock *'     |-CallExpr 0x138915ad8 <line:8:2, col:41> 'int'     | |-ImplicitCastExpr 0x138915ac0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x138915a08 <col:2> 'int ()' Function 0x138915950 'receive_queue_for_each_skb' 'int ()'     | |-ImplicitCastExpr 0x138915b10 <col:29> 'struct sock *' <LValueToRValue>     | | `-DeclRefExpr 0x138915a28 <col:29> 'struct sock *' lvalue ParmVar 0x13080e248 'x' 'struct sock *'     | |-ImplicitCastExpr 0x138915b28 <col:32> 'struct sk_buff *' <LValueToRValue>     | | `-DeclRefExpr 0x138915a48 <col:32> 'struct sk_buff *' lvalue Var 0x138915678 'next' 'struct sk_buff *'     | `-ImplicitCastExpr 0x138915b40 <col:38> 'struct sk_buff *' <LValueToRValue>     |   `-DeclRefExpr 0x138915a68 <col:38> 'struct sk_buff *' lvalue Var 0x138915558 'skb' 'struct sk_buff *'     |-CompoundStmt 0x13980b2e0 <col:43, line:28:2>     | `-IfStmt 0x13980b2c0 <line:10:3, line:27:3>     |   |-RecoveryExpr 0x138915cd0 <line:10:7, col:19> '<dependent type>' contains-errors lvalue     |   | `-CallExpr 0x138915c90 <col:7, col:17> 'int'     |   |   |-ImplicitCastExpr 0x138915c78 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x138915c38 <col:7> 'int ()' Function 0x138915b80 'UNIXCB' 'int ()'     |   |   `-ImplicitCastExpr 0x138915cb8 <col:14> 'struct sk_buff *' <LValueToRValue>     |   |     `-DeclRefExpr 0x138915c58 <col:14> 'struct sk_buff *' lvalue Var 0x138915558 'skb' 'struct sk_buff *'     |   `-CompoundStmt 0x13980b290 <col:23, line:27:3>     |     |-DeclStmt 0x13980a488 <line:13:4, col:35>     |     | `-VarDecl 0x138915d10 <col:4, col:30> col:8 used nfd 'int' cinit     |     |   `-CXXDependentScopeMemberExpr 0x13980a440 <col:14, col:30> '<dependent type>' contains-errors lvalue ->count     |     |     `-RecoveryExpr 0x13980a418 <col:14, col:26> '<dependent type>' contains-errors lvalue     |     |       `-CallExpr 0x138915dd0 <col:14, col:24> 'int'     |     |         |-ImplicitCastExpr 0x138915db8 <col:14> 'int (*)()' <FunctionToPointerDecay>     |     |         | `-DeclRefExpr 0x138915d78 <col:14> 'int ()' Function 0x138915b80 'UNIXCB' 'int ()'     |     |         `-ImplicitCastExpr 0x13980a400 <col:21> 'struct sk_buff *' <LValueToRValue>     |     |           `-DeclRefExpr 0x138915d98 <col:21> 'struct sk_buff *' lvalue Var 0x138915558 'skb' 'struct sk_buff *'     |     |-DeclStmt 0x13980a7f0 <line:14:4, col:41>     |     | |-RecordDecl 0x13980a4a0 <col:4, col:11> col:11 struct file     |     | `-VarDecl 0x13980a668 <col:4, col:39> col:18 used fp 'struct file **' cinit     |     |   `-CXXDependentScopeMemberExpr 0x13980a790 <col:23, col:39> '<dependent type>' contains-errors lvalue ->fp     |     |     `-RecoveryExpr 0x13980a768 <col:23, col:35> '<dependent type>' contains-errors lvalue     |     |       `-CallExpr 0x13980a728 <col:23, col:33> 'int'     |     |         |-ImplicitCastExpr 0x13980a710 <col:23> 'int (*)()' <FunctionToPointerDecay>     |     |         | `-DeclRefExpr 0x13980a6d0 <col:23> 'int ()' Function 0x138915b80 'UNIXCB' 'int ()'     |     |         `-ImplicitCastExpr 0x13980a750 <col:30> 'struct sk_buff *' <LValueToRValue>     |     |           `-DeclRefExpr 0x13980a6f0 <col:30> 'struct sk_buff *' lvalue Var 0x138915558 'skb' 'struct sk_buff *'     |     |-WhileStmt 0x13980ada0 <line:15:4, line:22:4>     |     | |-UnaryOperator 0x13980a828 <line:15:11, col:14> 'int' contains-errors postfix '--'     |     | | `-DeclRefExpr 0x13980a808 <col:11> 'int' contains-errors lvalue Var 0x138915d10 'nfd' 'int'     |     | `-CompoundStmt 0x13980ad80 <col:18, line:22:4>     |     |   |-DeclStmt 0x13980aaf0 <line:17:5, col:45>     |     |   | `-VarDecl 0x13980a8c8 <col:5, col:44> col:18 used sk 'struct sock *' cinit     |     |   |   `-ImplicitCastExpr 0x13980aad8 <col:23, col:44> 'struct sock *' contains-errors <IntegralToPointer>     |     |   |     `-CallExpr 0x13980aa98 <col:23, col:44> 'int' contains-errors     |     |   |       |-ImplicitCastExpr 0x13980aa80 <col:23> 'int (*)()' <FunctionToPointerDecay>     |     |   |       | `-DeclRefExpr 0x13980aa10 <col:23> 'int ()' Function 0x13980a958 'unix_get_socket' 'int ()'     |     |   |       `-ImplicitCastExpr 0x13980aac0 <col:39, col:42> 'struct file *' contains-errors <LValueToRValue>     |     |   |         `-UnaryOperator 0x13980aa68 <col:39, col:42> 'struct file *' contains-errors lvalue prefix '*' cannot overflow     |     |   |           `-UnaryOperator 0x13980aa50 <col:40, col:42> 'struct file **' contains-errors postfix '++'     |     |   |             `-DeclRefExpr 0x13980aa30 <col:40> 'struct file **' contains-errors lvalue Var 0x13980a668 'fp' 'struct file **'     |     |   `-IfStmt 0x13980ad60 <line:18:5, line:21:5>     |     |     |-ImplicitCastExpr 0x13980ab28 <line:18:9> 'struct sock *' contains-errors <LValueToRValue>     |     |     | `-DeclRefExpr 0x13980ab08 <col:9> 'struct sock *' contains-errors lvalue Var 0x13980a8c8 'sk' 'struct sock *'     |     |     `-CompoundStmt 0x13980ad48 <col:13, line:21:5>     |     |       `-CallExpr 0x13980ad08 <line:20:6, col:22> 'void' contains-errors     |     |         |-ImplicitCastExpr 0x13980acf0 <col:6> 'void (*)(struct unix_sock *)' <LValueToRValue>     |     |         | `-DeclRefExpr 0x13980ab58 <col:6> 'void (*)(struct unix_sock *)' lvalue ParmVar 0x138914fd8 'func' 'void (*)(struct unix_sock *)'     |     |         `-ImplicitCastExpr 0x13980ad30 <col:11, col:21> 'struct unix_sock *' contains-errors <IntegralToPointer>     |     |           `-CallExpr 0x13980acb0 <col:11, col:21> 'int' contains-errors     |     |             |-ImplicitCastExpr 0x13980ac98 <col:11> 'int (*)()' <FunctionToPointerDecay>     |     |             | `-DeclRefExpr 0x13980ac58 <col:11> 'int ()' Function 0x13980aba0 'unix_sk' 'int ()'     |     |             `-ImplicitCastExpr 0x13980acd8 <col:19> 'struct sock *' contains-errors <LValueToRValue>     |     |               `-DeclRefExpr 0x13980ac78 <col:19> 'struct sock *' contains-errors lvalue Var 0x13980a8c8 'sk' 'struct sock *'     |     `-IfStmt 0x13980b270 <line:23:4, line:26:4>     |       |-BinaryOperator 0x13980aeb0 <line:23:8, col:26> 'int' contains-errors '&&'     |       | |-RecoveryExpr 0x13980ae50 <col:8> '<dependent type>' contains-errors lvalue     |       | `-BinaryOperator 0x13980ae90 <col:15, col:26> 'int' contains-errors '!='     |       |   |-DeclRefExpr 0x13980add8 <col:15> 'struct sk_buff_head *' lvalue ParmVar 0x1389151a8 'hitlist' 'struct sk_buff_head *'     |       |   `-RecoveryExpr 0x13980ae70 <col:26> '<dependent type>' contains-errors lvalue     |       `-CompoundStmt 0x13980b250 <col:32, line:26:4>     |         |-CallExpr 0x13980b068 <line:24:5, col:43> '<dependent type>' contains-errors     |         | |-DeclRefExpr 0x13980afb0 <col:5> 'int ()' Function 0x13980aef8 '__skb_unlink' 'int ()'     |         | |-DeclRefExpr 0x13980afd0 <col:18> 'struct sk_buff *' lvalue Var 0x138915558 'skb' 'struct sk_buff *'     |         | `-UnaryOperator 0x13980b050 <col:23, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |         |   `-RecoveryExpr 0x13980b028 <col:24, col:27> '<dependent type>' contains-errors lvalue     |         |     `-DeclRefExpr 0x13980aff0 <col:24> 'struct sock *' lvalue ParmVar 0x13080e248 'x' 'struct sock *'     |         `-CallExpr 0x13980b1f0 <line:25:5, col:34> 'int'     |           |-ImplicitCastExpr 0x13980b1d8 <col:5> 'int (*)()' <FunctionToPointerDecay>     |           | `-DeclRefExpr 0x13980b178 <col:5> 'int ()' Function 0x13980b0c0 '__skb_queue_tail' 'int ()'     |           |-ImplicitCastExpr 0x13980b220 <col:22> 'struct sk_buff_head *' <LValueToRValue>     |           | `-DeclRefExpr 0x13980b198 <col:22> 'struct sk_buff_head *' lvalue ParmVar 0x1389151a8 'hitlist' 'struct sk_buff_head *'     |           `-ImplicitCastExpr 0x13980b238 <col:31> 'struct sk_buff *' <LValueToRValue>     |             `-DeclRefExpr 0x13980b1b8 <col:31> 'struct sk_buff *' lvalue Var 0x138915558 'skb' 'struct sk_buff *'     `-CallExpr 0x138915ec0 <line:29:2, col:39> '<dependent type>' contains-errors       |-DeclRefExpr 0x13980b3d8 <col:2> 'int ()' Function 0x13980b320 'spin_unlock' 'int ()'       `-UnaryOperator 0x138915ea8 <col:14, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow         `-CXXDependentScopeMemberExpr 0x138915e60 <col:15, col:35> '<dependent type>' contains-errors lvalue .lock           `-RecoveryExpr 0x138915e38 <col:15, col:18> '<dependent type>' contains-errors lvalue             `-DeclRefExpr 0x138915e00 <col:15> 'struct sock *' lvalue ParmVar 0x13080e248 'x' 'struct sock *' ","20661":"`-FunctionDecl 0x13280dda8  line:1:1 PHP_FUNCTION 'int (int)'   |-ParmVarDecl 0x13280dcd8 <col:14> col:14 imagepsloadfont 'int'   `-CompoundStmt 0x132829280 <line:2:1, line:35:1>     |-DeclStmt 0x13280df20 <line:3:2, col:12>     | `-VarDecl 0x13280deb8 <col:2, col:8> col:8 used file 'char *'     |-DeclStmt 0x13280e110 <line:4:2, col:28>     | |-VarDecl 0x13280df50 <col:2, col:6> col:6 file_len 'int'     | |-VarDecl 0x13280dfd0 <col:2, col:16> col:16 used f_ind 'int'     | `-VarDecl 0x13280e088 <col:2, col:24> col:24 used font 'int *'     |-IfStmt 0x132828448 <line:9:2, line:11:2>     | |-RecoveryExpr 0x132828400 <line:9:6, col:83> '_Bool' contains-errors     | `-CompoundStmt 0x132828430 <col:92, line:11:2>     |   `-ReturnStmt 0x132828420 <line:10:3>     |-BinaryOperator 0x132828600 <line:20:2, col:25> 'int' '='     | |-DeclRefExpr 0x132828468 <col:2> 'int' lvalue Var 0x13280dfd0 'f_ind' 'int'     | `-CallExpr 0x1328285c0 <col:10, col:25> 'int'     |   |-ImplicitCastExpr 0x1328285a8 <col:10> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x132828568 <col:10> 'int ()' Function 0x1328284b0 'T1_AddFont' 'int ()'     |   `-ImplicitCastExpr 0x1328285e8 <col:21> 'char *' <LValueToRValue>     |     `-DeclRefExpr 0x132828588 <col:21> 'char *' lvalue Var 0x13280deb8 'file' 'char *'     |-IfStmt 0x1328287c0 <line:22:2, line:25:2>     | |-BinaryOperator 0x132828678 <line:22:6, col:14> 'int' '<'     | | |-ImplicitCastExpr 0x132828660 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x132828620 <col:6> 'int' lvalue Var 0x13280dfd0 'f_ind' 'int'     | | `-IntegerLiteral 0x132828640 <col:14> 'int' 0     | `-CompoundStmt 0x1328287b0 <col:17, line:25:2>     |-IfStmt 0x1328289a0 <line:27:2, line:30:2>     | |-CallExpr 0x132828918 <line:27:6, col:23> 'int'     | | |-ImplicitCastExpr 0x132828900 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x1328288c0 <col:6> 'int ()' Function 0x132828808 'T1_LoadFont' 'int ()'     | | `-ImplicitCastExpr 0x132828940 <col:18> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x1328288e0 <col:18> 'int' lvalue Var 0x13280dfd0 'f_ind' 'int'     | `-CompoundStmt 0x132828990 <col:26, line:30:2>     |-BinaryOperator 0x132828fb8 <line:32:2, col:36> 'int *' '='     | |-DeclRefExpr 0x1328289c0 <col:2> 'int *' lvalue Var 0x13280e088 'font' 'int *'     | `-CStyleCastExpr 0x132828f90 <col:9, col:36> 'int *' <IntegralToPointer>     |   `-CallExpr 0x132828b30 <col:17, col:36> 'int'     |     |-ImplicitCastExpr 0x132828b18 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x132828ac0 <col:17> 'int ()' Function 0x132828a08 'emalloc' 'int ()'     |     `-UnaryExprOrTypeTraitExpr 0x132828af8 <col:25, col:35> 'unsigned long' sizeof 'int'     |-BinaryOperator 0x132829060 <line:33:2, col:10> 'int' '='     | |-UnaryOperator 0x132829010 <col:2, col:3> 'int' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x132828ff8 <col:3> 'int *' <LValueToRValue>     | |   `-DeclRefExpr 0x132828fd8 <col:3> 'int *' lvalue Var 0x13280e088 'font' 'int *'     | `-ImplicitCastExpr 0x132829048 <col:10> 'int' <LValueToRValue>     |   `-DeclRefExpr 0x132829028 <col:10> 'int' lvalue Var 0x13280dfd0 'f_ind' 'int'     `-CallExpr 0x132829248 <line:34:2, col:55> '<dependent type>' contains-errors       |-DeclRefExpr 0x132829160 <col:2> 'int ()' Function 0x1328290a8 'ZEND_REGISTER_RESOURCE' 'int ()'       |-RecoveryExpr 0x132829208 <col:25> '<dependent type>' contains-errors lvalue       |-DeclRefExpr 0x132829198 <col:39> 'int *' lvalue Var 0x13280e088 'font' 'int *'       `-RecoveryExpr 0x132829228 <col:45> '<dependent type>' contains-errors lvalue ","21095":"`-FunctionDecl 0x14d02ae28  line:1:5 bt_procfs_init 'int (struct net *, const char *, struct bt_sock_list *, int (*)(struct seq_file *, void *))'   |-ParmVarDecl 0x14d00e248 <col:20, col:32> col:32 net 'struct net *'   |-ParmVarDecl 0x14d00e2c8 <col:37, col:49> col:49 name 'const char *'   |-ParmVarDecl 0x14d02a8c8 <line:2:6, col:27> col:27 sk_list 'struct bt_sock_list *'   |-ParmVarDecl 0x14d02acd8 <line:3:6, col:48> col:13 seq_show 'int (*)(struct seq_file *, void *)'   `-CompoundStmt 0x14d02af68 <line:4:1, line:6:1>     `-ReturnStmt 0x14d02af58 <line:5:2, col:9>       `-IntegerLiteral 0x14d02af38 <col:9> 'int' 0 ","20315":"`-FunctionDecl 0x131128328  line:1:12 main 'int (int, char **)' extern   |-ParmVarDecl 0x1311280d8 <col:17, col:21> col:21 argc 'int'   |-ParmVarDecl 0x131128200 <col:27, col:38> col:33 argv 'char **'   `-CompoundStmt 0x131143c10 <line:2:1, line:60:1>     |-DeclStmt 0x1311284a8 <line:3:3, col:8>     | `-VarDecl 0x131128440 <col:3, col:7> col:7 used r 'int'     |-DeclStmt 0x1311285c8 <line:4:3, col:16>     | `-VarDecl 0x131128560 <col:3, col:15> col:8 used buf 'char[200]'     |-IfStmt 0x131142940 <line:11:3, line:15:3>     | |-ImplicitCastExpr 0x131142400 <line:11:7> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x1311287e0 <col:7> 'int' lvalue Var 0x131128440 'r' 'int'     | `-CompoundStmt 0x131142918 <col:10, line:15:3>     |   |-CallExpr 0x131142660 <line:12:5, col:39> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1311424f8 <col:5> 'int ()' Function 0x131142440 'regerror' 'int ()'     |   | |-DeclRefExpr 0x131142518 <col:14> 'int' lvalue Var 0x131128440 'r' 'int'     |   | |-UnaryOperator 0x131142648 <col:17, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-RecoveryExpr 0x131142628 <col:18> '<dependent type>' contains-errors lvalue     |   | |-DeclRefExpr 0x131142568 <col:23> 'char[200]' lvalue Var 0x131128560 'buf' 'char[200]'     |   | `-UnaryExprOrTypeTraitExpr 0x1311425c8 <col:28, col:38> 'unsigned long' sizeof     |   |   `-ParenExpr 0x1311425a8 <col:34, col:38> 'char[200]' lvalue     |   |     `-DeclRefExpr 0x131142588 <col:35> 'char[200]' lvalue Var 0x131128560 'buf' 'char[200]' non_odr_use_unevaluated     |   |-CallExpr 0x131142898 <line:13:5, col:31> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x131142780 <col:5> 'int ()' Function 0x1311426c8 'fprintf' 'int ()'     |   | |-RecoveryExpr 0x131142878 <col:13> '<dependent type>' contains-errors lvalue     |   | |-StringLiteral 0x131142800 <col:21> 'char[4]' lvalue \"STR\"     |   | `-DeclRefExpr 0x131142820 <col:28> 'char[200]' lvalue Var 0x131128560 'buf' 'char[200]'     |   `-ReturnStmt 0x131142908 <line:14:5, col:13>     |     `-UnaryOperator 0x1311428f0 <col:12, col:13> 'int' prefix '-'     |       `-IntegerLiteral 0x1311428d0 <col:13> 'int' 1     |-IfStmt 0x131142cd8 <line:21:3, line:25:3>     | |-ImplicitCastExpr 0x131142b40 <line:21:7> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x131142b20 <col:7> 'int' lvalue Var 0x131128440 'r' 'int'     | `-CompoundStmt 0x131142cc0 <col:10, line:25:3>     |   `-ReturnStmt 0x131142cb0 <line:24:5, col:13>     |     `-UnaryOperator 0x131142c98 <col:12, col:13> 'int' prefix '-'     |       `-IntegerLiteral 0x131142c78 <col:13> 'int' 1     |-IfStmt 0x131142f30 <line:31:3, line:35:3>     | |-ImplicitCastExpr 0x131142d98 <line:31:7> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x131142d78 <col:7> 'int' lvalue Var 0x131128440 'r' 'int'     | `-CompoundStmt 0x131142f18 <col:10, line:35:3>     |   `-ReturnStmt 0x131142f08 <line:34:5, col:13>     |     `-UnaryOperator 0x131142ef0 <col:12, col:13> 'int' prefix '-'     |       `-IntegerLiteral 0x131142ed0 <col:13> 'int' 1     |-IfStmt 0x131143268 <line:42:3, line:46:3>     | |-ImplicitCastExpr 0x1311430d0 <line:42:7> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x1311430b0 <col:7> 'int' lvalue Var 0x131128440 'r' 'int'     | `-CompoundStmt 0x131143250 <col:10, line:46:3>     |   `-ReturnStmt 0x131143240 <line:45:5, col:13>     |     `-UnaryOperator 0x131143228 <col:12, col:13> 'int' prefix '-'     |       `-IntegerLiteral 0x131143208 <col:13> 'int' 1     |-IfStmt 0x131143aa0 <line:51:3, line:55:3>     | |-ImplicitCastExpr 0x131143308 <line:51:7> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x1311432e8 <col:7> 'int' lvalue Var 0x131128440 'r' 'int'     | `-CompoundStmt 0x131143a88 <col:10, line:55:3>     |   `-ReturnStmt 0x131143a78 <line:54:5, col:13>     |     `-UnaryOperator 0x131143a60 <col:12, col:13> 'int' prefix '-'     |       `-IntegerLiteral 0x131143a40 <col:13> 'int' 1     `-ReturnStmt 0x131143c00 <line:59:3, col:10>       `-IntegerLiteral 0x131143be0 <col:10> 'int' 0 ","20362":"`-FunctionDecl 0x14480de88  line:1:1 invalid hb_set_symmetric_difference 'int (int *, const int *)'   |-ParmVarDecl 0x14480dd28 <col:30, col:46> col:46 referenced invalid set 'int *'   |-ParmVarDecl 0x14480dda8 <line:2:9, col:25> col:25 invalid other 'const int *'   `-CompoundStmt 0x14480e368 <line:3:1, line:8:1>     |-IfStmt 0x14480e240 <line:4:3, line:5:5>     | |-CallExpr 0x14480e208 <line:4:7, col:45> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14480e0a0 <col:7> 'int ()' Function 0x14480dfe8 'unlikely' 'int ()'     | | `-CallExpr 0x14480e1e0 <col:17, col:44> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x14480e1a0 <col:17> 'int ()' Function 0x14480e0e8 'hb_object_is_immutable' 'int ()'     | |   `-RecoveryExpr 0x14480e1c0 <col:41> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14480e230 <line:5:5>     `-CallExpr 0x14480e340 <line:7:3, col:36> '<dependent type>' contains-errors       |-CXXDependentScopeMemberExpr 0x14480e2a8 <col:3, col:8> '<dependent type>' contains-errors lvalue ->symmetric_difference       | `-RecoveryExpr 0x14480e280 <col:3> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x14480e260 <col:3> 'int *' lvalue ParmVar 0x14480dd28 'set' 'int *'       `-UnaryOperator 0x14480e328 <col:30, col:31> '<dependent type>' contains-errors prefix '*' cannot overflow         `-ImplicitCastExpr 0x14480e310 <col:31> '<dependent type>' contains-errors <LValueToRValue>           `-RecoveryExpr 0x14480e2f0 <col:31> '<dependent type>' contains-errors lvalue ","20534":"`-FunctionDecl 0x12093fd48  line:1:12 hwsim_get_radio_nl 'int (struct sk_buff *, struct genl_info *)' static   |-ParmVarDecl 0x120927848 <col:31, col:47> col:47 msg 'struct sk_buff *'   |-ParmVarDecl 0x12093fc28 <col:52, col:70> col:70 used info 'struct genl_info *'   `-CompoundStmt 0x120942dc8 <line:2:1, line:40:1>     |-DeclStmt 0x120940038 <line:3:2, col:34>     | |-RecordDecl 0x12093fe48 <col:2, col:9> col:9 struct mac80211_hwsim_data     | `-VarDecl 0x12093ffb8 <col:2, col:30> col:30 used data 'struct mac80211_hwsim_data *'     |-DeclStmt 0x120940140 <line:4:2, col:21>     | `-VarDecl 0x1209400d8 <col:2, col:18> col:18 used skb 'struct sk_buff *'     |-DeclStmt 0x120940320 <line:5:2, col:24>     | |-VarDecl 0x120940170 <col:2, col:6> col:6 used idx 'int'     | `-VarDecl 0x1209401f0 <col:2, col:18> col:11 used res 'int' cinit     |   `-UnaryOperator 0x1209402f0 <col:17, col:18> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x1209402d8 <col:18> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x1209402b8 <col:18> '<dependent type>' contains-errors lvalue     |-IfStmt 0x120940478 <line:7:2, line:8:11>     | |-RecoveryExpr 0x1209403b0 <line:7:6, col:38> '_Bool' contains-errors     | `-ReturnStmt 0x120940468 <line:8:3, col:11>     |   `-UnaryOperator 0x120940450 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x120940438 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x120940418 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1209407f8 <line:11:2, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x120940748 <col:2> 'int ()' Function 0x120940690 'spin_lock_bh' 'int ()'     | `-UnaryOperator 0x1209407e0 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1209407c0 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x120940a18 <line:12:2, col:47> '<dependent type>' contains-errors     | |-DeclRefExpr 0x120940900 <col:2> 'int ()' Function 0x120940848 'list_for_each_entry' 'int ()'     | |-DeclRefExpr 0x120940920 <col:22> 'struct mac80211_hwsim_data *' lvalue Var 0x12093ffb8 'data' 'struct mac80211_hwsim_data *'     | |-UnaryOperator 0x1209409e0 <col:28, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x1209409c0 <col:29> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1209409f8 <col:43> '<dependent type>' contains-errors lvalue     |-CompoundStmt 0x120942c30 <col:49, line:34:2>     | |-IfStmt 0x1209425d0 <line:20:3, line:23:3>     | | |-UnaryOperator 0x120942518 <line:20:7, col:8> 'int' prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x120942500 <col:8> 'struct sk_buff *' <LValueToRValue>     | | |   `-DeclRefExpr 0x1209424e0 <col:8> 'struct sk_buff *' lvalue Var 0x1209400d8 'skb' 'struct sk_buff *'     | | `-CompoundStmt 0x1209425b8 <col:13, line:23:3>     | |   `-GotoStmt 0x1209425a0 <line:22:4, col:9> 'out_err' 0x120942550     | |-IfStmt 0x120942a58 <line:27:3, line:30:3>     | | |-BinaryOperator 0x120942888 <line:27:7, col:13> 'int' contains-errors '<'     | | | |-ImplicitCastExpr 0x120942870 <col:7> 'int' contains-errors <LValueToRValue>     | | | | `-DeclRefExpr 0x120942830 <col:7> 'int' contains-errors lvalue Var 0x1209401f0 'res' 'int'     | | | `-IntegerLiteral 0x120942850 <col:13> 'int' 0     | | `-CompoundStmt 0x120942a38 <col:16, line:30:3>     | |   |-CallExpr 0x1209429e0 <line:28:4, col:18> 'int'     | |   | |-ImplicitCastExpr 0x1209429c8 <col:4> 'int (*)()' <FunctionToPointerDecay>     | |   | | `-DeclRefExpr 0x120942988 <col:4> 'int ()' Function 0x1209428d0 'nlmsg_free' 'int ()'     | |   | `-ImplicitCastExpr 0x120942a08 <col:15> 'struct sk_buff *' <LValueToRValue>     | |   |   `-DeclRefExpr 0x1209429a8 <col:15> 'struct sk_buff *' lvalue Var 0x1209400d8 'skb' 'struct sk_buff *'     | |   `-GotoStmt 0x120942a20 <line:29:4, col:9> 'out_err' 0x120942550     | `-CallExpr 0x120942bd0 <line:32:3, col:26> 'int'     |   |-ImplicitCastExpr 0x120942bb8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x120942b58 <col:3> 'int ()' Function 0x120942aa0 'genlmsg_reply' 'int ()'     |   |-ImplicitCastExpr 0x120942c00 <col:17> 'struct sk_buff *' <LValueToRValue>     |   | `-DeclRefExpr 0x120942b78 <col:17> 'struct sk_buff *' lvalue Var 0x1209400d8 'skb' 'struct sk_buff *'     |   `-ImplicitCastExpr 0x120942c18 <col:22> 'struct genl_info *' <LValueToRValue>     |     `-DeclRefExpr 0x120942b98 <col:22> 'struct genl_info *' lvalue ParmVar 0x12093fc28 'info' 'struct genl_info *'     |-LabelStmt 0x120942d60 <line:36:1, col:8> 'out_err'     | `-NullStmt 0x120942d58 <col:8>     `-ReturnStmt 0x120942db8 <line:39:2, col:9>       `-ImplicitCastExpr 0x120942da0 <col:9> 'int' contains-errors <LValueToRValue>         `-DeclRefExpr 0x120942d80 <col:9> 'int' contains-errors lvalue Var 0x1209401f0 'res' 'int' ","21058":"`-FunctionDecl 0x124128dc8  line:1:16 invalid ReadIPTCProfile 'int (int)' static   |-ParmVarDecl 0x124128cf0 <col:32, col:49> col:49 invalid jpeg_info 'int'   `-CompoundStmt 0x124144fb0 <line:2:1, line:117:1>     |-DeclStmt 0x124128f08 <line:3:3, line:4:29>     | `-VarDecl 0x124128ea0 <line:3:3, line:4:5> col:5 referenced invalid magick 'char'     |-DeclStmt 0x124128fe8 <line:18:3, line:19:6>     | `-VarDecl 0x124128f80 <line:18:3, line:19:5> col:5 invalid i 'int' register     |-DeclStmt 0x1241290b0 <line:21:3, line:22:7>     | `-VarDecl 0x124129048 <line:21:3, line:22:6> col:6 used p 'unsigned char *' register     |-UnaryExprOrTypeTraitExpr 0x124129120 <line:24:3, line:25:5> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x124129100 <col:5> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1241425a0 <line:35:3, line:41:5>     | |-RecoveryExpr 0x1241292d0 <line:35:7, col:17> '_Bool' contains-errors     | `-CompoundStmt 0x124142588 <line:36:5, line:41:5>     |   `-WhileStmt 0x124142568 <line:37:7, line:39:11>     |     |-RecoveryExpr 0x124129310 <line:37:14, col:25> '_Bool' contains-errors     |     `-IfStmt 0x124142548 <line:38:9, line:39:11>     |       |-RecoveryExpr 0x124142520 <line:38:13, col:40> '_Bool' contains-errors     |       `-BreakStmt 0x124142540 <line:39:11>     |-ForStmt 0x124142830 <line:43:3, line:44:44>     | |-BinaryOperator 0x124142600 <line:43:8, col:10> '<dependent type>' contains-errors '='     | | |-RecoveryExpr 0x1241425c0 <col:8> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x1241425e0 <col:10> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x124142660 <col:13, col:17> 'int' contains-errors '<'     | | |-RecoveryExpr 0x124142620 <col:13> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x124142640 <col:17> 'int' 10     | |-UnaryOperator 0x1241426a0 <col:21, col:22> '<dependent type>' contains-errors postfix '++' cannot overflow     | | `-RecoveryExpr 0x124142680 <col:21> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x124142810 <line:44:5, col:44> '<dependent type>' contains-errors '='     |   |-ArraySubscriptExpr 0x124142750 <col:5, col:13> '<dependent type>' contains-errors lvalue     |   | |-ImplicitCastExpr 0x124142720 <col:5> '<dependent type>' contains-errors <LValueToRValue>     |   | | `-RecoveryExpr 0x1241426d8 <col:5> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x1241426b8 <col:5> 'char' lvalue Var 0x124128ea0 'magick' 'char'     |   | `-ImplicitCastExpr 0x124142738 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |   |   `-RecoveryExpr 0x124142700 <col:12> '<dependent type>' contains-errors lvalue     |   `-CStyleCastExpr 0x1241427e8 <col:15, col:44> 'char' contains-errors <Dependent>     |     `-CallExpr 0x1241427b0 <col:22, col:44> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x124142770 <col:22> 'int ()' Function 0x124142400 'GetCharacter' 'int ()'     |       `-RecoveryExpr 0x124142790 <col:35> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x124142920 <line:45:3, col:14> '<dependent type>' contains-errors '='     | |-ArraySubscriptExpr 0x1241428e8 <col:3, col:12> '<dependent type>' contains-errors lvalue     | | |-ImplicitCastExpr 0x1241428d0 <col:3> '<dependent type>' contains-errors <LValueToRValue>     | | | `-RecoveryExpr 0x124142888 <col:3> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x124142868 <col:3> 'char' lvalue Var 0x124128ea0 'magick' 'char'     | | `-IntegerLiteral 0x1241428b0 <col:10> 'int' 10     | `-CharacterLiteral 0x124142908 <col:14> 'int' 0     |-IfStmt 0x124142d08 <line:49:3, line:56:5>     | |-BinaryOperator 0x124142b70 <line:49:7, col:38> 'int' contains-errors '!='     | | |-CallExpr 0x124142b20 <col:7, col:33> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x124142a80 <col:7> 'int ()' Function 0x1241429c8 'LocaleCompare' 'int ()'     | | | |-RecoveryExpr 0x124142aa0 <col:21> '<dependent type>' contains-errors lvalue     | | | `-StringLiteral 0x124142b00 <col:28> 'char[4]' lvalue \"STR\"     | | `-IntegerLiteral 0x124142b50 <col:38> 'int' 0     | `-CompoundStmt 0x124142cf8 <line:50:5, line:56:5>     |-ForStmt 0x124142ed0 <line:58:3, line:60:7>     | |-BinaryOperator 0x124142d68 <line:58:8, col:10> '<dependent type>' contains-errors '='     | | |-RecoveryExpr 0x124142d28 <col:8> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x124142d48 <col:10> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x124142dc8 <col:13, col:17> 'int' contains-errors '<'     | | |-RecoveryExpr 0x124142d88 <col:13> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x124142da8 <col:17> 'int' 4     | |-UnaryOperator 0x124142e08 <col:20, col:21> '<dependent type>' contains-errors postfix '++' cannot overflow     | | `-RecoveryExpr 0x124142de8 <col:20> '<dependent type>' contains-errors lvalue     | `-IfStmt 0x124142eb0 <line:59:5, line:60:7>     |   |-RecoveryExpr 0x124142e88 <line:59:9, col:36> '_Bool' contains-errors     |   `-BreakStmt 0x124142ea8 <line:60:7>     |-IfStmt 0x124143328 <line:68:3, line:73:5>     | |-RecoveryExpr 0x124143068 <line:68:7, col:33> '_Bool' contains-errors     | `-CompoundStmt 0x124143318 <line:69:5, line:73:5>     |-IfStmt 0x124144a38 <line:87:3, line:94:5>     | |-RecoveryExpr 0x124144870 <line:87:7, col:22> '_Bool' contains-errors     | `-CompoundStmt 0x124144a28 <line:88:5, line:94:5>     `-IfStmt 0x124144de8 <line:97:3, line:112:5> has_else       |-RecoveryExpr 0x124144a58 <line:97:7, col:38> '_Bool' contains-errors       |-CompoundStmt 0x124144b98 <line:98:5, line:101:5>       `-CompoundStmt 0x124144dd0 <line:103:5, line:112:5>         `-IfStmt 0x124144db0 <line:106:7, line:111:9>           |-RecoveryExpr 0x124144ce8 <line:106:11, col:21> '_Bool' contains-errors           `-CompoundStmt 0x124144da0 <line:107:9, line:111:9> ","21153":"`-FunctionDecl 0x13e928288  line:1:6 invalid Match 'int (int *, long long)'   |-ParmVarDecl 0x13e928128 <col:12, col:24> col:24 invalid pReader 'int *'   |-ParmVarDecl 0x13e9281a8 <col:33, col:38> col:42 'long long'   `-CompoundStmt 0x13e942f38 <line:2:49, line:58:1>     |-DeclStmt 0x13e928598 <line:6:3, col:22>     | `-VarDecl 0x13e9284f8 <col:3, col:21> col:13 used total 'long long' cinit     |   `-ImplicitCastExpr 0x13e928580 <col:21> 'long long' <IntegralCast>     |     `-IntegerLiteral 0x13e928560 <col:21> 'int' 0     |-DeclStmt 0x13e928668 <line:7:3, col:26>     | `-VarDecl 0x13e9285c8 <col:3, col:25> col:13 used available 'long long' cinit     |   `-ImplicitCastExpr 0x13e928650 <col:25> 'long long' <IntegralCast>     |     `-IntegerLiteral 0x13e928630 <col:25> 'int' 0     |-DeclStmt 0x13e941848 <line:9:3, col:52>     | `-VarDecl 0x13e928698 <col:3, col:51> col:8 used status 'long' cinit     |   `-CallExpr 0x13e941818 <col:17, col:51> '<dependent type>' contains-errors     |     |-CXXDependentScopeMemberExpr 0x13e928720 <col:17, col:26> '<dependent type>' contains-errors lvalue ->Length     |     | `-RecoveryExpr 0x13e928700 <col:17> '<dependent type>' contains-errors lvalue     |     |-UnaryOperator 0x13e9287c0 <col:33, col:34> 'long long *' prefix '&' cannot overflow     |     | `-DeclRefExpr 0x13e928768 <col:34> 'long long' lvalue Var 0x13e9284f8 'total' 'long long'     |     `-UnaryOperator 0x13e941800 <col:41, col:42> 'long long *' prefix '&' cannot overflow     |       `-DeclRefExpr 0x13e9287d8 <col:42> 'long long' lvalue Var 0x13e9285c8 'available' 'long long'     |-DeclStmt 0x13e941b40 <line:13:3, col:15>     | `-VarDecl 0x13e941aa0 <col:3, col:14> col:8 used len 'long' cinit     |   `-ImplicitCastExpr 0x13e941b28 <col:14> 'long' <IntegralCast>     |     `-IntegerLiteral 0x13e941b08 <col:14> 'int' 0     |-DeclStmt 0x13e941e38 <line:14:3, col:49>     | `-VarDecl 0x13e941b70 <col:3, col:48> col:19 used id 'const long long' cinit     |   `-CallExpr 0x13e941e00 <col:24, col:48> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x13e941d30 <col:24> 'int ()' Function 0x13e941c78 'ReadID' 'int ()'     |     |-RecoveryExpr 0x13e941d50 <col:31> '<dependent type>' contains-errors lvalue     |     |-RecoveryExpr 0x13e941de0 <col:40> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13e941d88 <col:45> 'long' lvalue Var 0x13e941aa0 'len' 'long'     |-DeclStmt 0x13e942268 <line:23:3, col:53>     | `-VarDecl 0x13e942018 <col:3, col:52> col:19 used size 'const long long' cinit     |   `-CallExpr 0x13e942230 <col:26, col:52> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x13e942160 <col:26> 'int ()' Function 0x13e9420a8 'ReadUInt' 'int ()'     |     |-RecoveryExpr 0x13e942180 <col:35> '<dependent type>' contains-errors lvalue     |     |-RecoveryExpr 0x13e942210 <col:44> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13e9421b8 <col:49> 'long' lvalue Var 0x13e941aa0 'len' 'long'     |-DeclStmt 0x13e942550 <line:27:3, line:28:49>     | `-VarDecl 0x13e9424e8 <line:27:3, col:22> col:22 used rollover_check 'unsigned long long'     `-DeclStmt 0x13e942748 <line:44:3, col:47>       `-VarDecl 0x13e9426e0 <col:3, col:14> col:14 used buflen_ 'const long' ","20525":"`-FunctionDecl 0x1489420f8  col:5 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x1489421f8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x148942260 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x1489422c8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1489421a0 <<invalid sloc>> Implicit 900 ","20793":"`-FunctionDecl 0x151128380  line:1:21 invalid siginfo_layout 'enum siginfo_layout (unsigned int, int)'   |-ParmVarDecl 0x151128198 <col:36, col:45> col:45 used sig 'unsigned int'   |-ParmVarDecl 0x151128218 <col:50, col:54> col:54 used si_code 'int'   `-CompoundStmt 0x151145ad0 <line:2:1, line:30:1>     |-DeclStmt 0x151144df8 <line:3:2, col:39>     | `-VarDecl 0x151144d60 <col:2, col:22> col:22 referenced invalid layout 'enum siginfo_layout'     |-IfStmt 0x151145a70 <line:4:2, line:28:2> has_else     | |-RecoveryExpr 0x151144ec0 <line:4:6, col:49> '_Bool' contains-errors     | |-CompoundStmt 0x151145710 <col:52, line:21:2>     | | `-IfStmt 0x1511456e0 <line:5:3, line:20:13> has_else     | |   |-RecoveryExpr 0x1511450e8 <line:5:7, line:6:41> '_Bool' contains-errors     | |   |-CompoundStmt 0x151145550 <col:44, line:18:3>     | |   | `-IfStmt 0x151145520 <line:9:4, line:13:14> has_else     | |   |   |-RecoveryExpr 0x151145290 <line:9:8, line:10:63> '_Bool' contains-errors     | |   |   |-BinaryOperator 0x151145350 <line:11:5, col:14> '<dependent type>' contains-errors '='     | |   |   | |-RecoveryExpr 0x1511452d0 <col:5> '<dependent type>' contains-errors lvalue     | |   |   | | `-DeclRefExpr 0x1511452b0 <col:5> 'enum siginfo_layout' lvalue Var 0x151144d60 'layout' 'enum siginfo_layout'     | |   |   | `-RecoveryExpr 0x151145330 <col:14> '<dependent type>' contains-errors lvalue     | |   |   `-IfStmt 0x151145500 <line:12:9, line:13:14>     | |   |     |-RecoveryExpr 0x151145420 <line:12:13, col:56> '_Bool' contains-errors     | |   |     `-BinaryOperator 0x1511454e0 <line:13:5, col:14> '<dependent type>' contains-errors '='     | |   |       |-RecoveryExpr 0x151145460 <col:5> '<dependent type>' contains-errors lvalue     | |   |       | `-DeclRefExpr 0x151145440 <col:5> 'enum siginfo_layout' lvalue Var 0x151144d60 'layout' 'enum siginfo_layout'     | |   |       `-RecoveryExpr 0x1511454c0 <col:14> '<dependent type>' contains-errors lvalue     | |   `-IfStmt 0x1511456c0 <line:19:8, line:20:13>     | |     |-BinaryOperator 0x1511455e0 <line:19:12, col:23> 'int' contains-errors '<='     | |     | |-DeclRefExpr 0x151145568 <col:12> 'int' lvalue ParmVar 0x151128218 'si_code' 'int'     | |     | `-RecoveryExpr 0x1511455c0 <col:23> '<dependent type>' contains-errors lvalue     | |     `-BinaryOperator 0x1511456a0 <line:20:4, col:13> '<dependent type>' contains-errors '='     | |       |-RecoveryExpr 0x151145620 <col:4> '<dependent type>' contains-errors lvalue     | |       | `-DeclRefExpr 0x151145600 <col:4> 'enum siginfo_layout' lvalue Var 0x151144d60 'layout' 'enum siginfo_layout'     | |       `-RecoveryExpr 0x151145680 <col:13> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x151145a58 <line:21:9, line:28:2>     |   `-IfStmt 0x151145a28 <line:22:3, line:24:8> has_else     |     |-BinaryOperator 0x1511457a0 <line:22:7, col:18> 'int' contains-errors '=='     |     | |-DeclRefExpr 0x151145728 <col:7> 'int' lvalue ParmVar 0x151128218 'si_code' 'int'     |     | `-RecoveryExpr 0x151145780 <col:18> '<dependent type>' contains-errors lvalue     |     |-BinaryOperator 0x151145860 <line:23:4, col:13> '<dependent type>' contains-errors '='     |     | |-RecoveryExpr 0x1511457e0 <col:4> '<dependent type>' contains-errors lvalue     |     | | `-DeclRefExpr 0x1511457c0 <col:4> 'enum siginfo_layout' lvalue Var 0x151144d60 'layout' 'enum siginfo_layout'     |     | `-RecoveryExpr 0x151145840 <col:13> '<dependent type>' contains-errors lvalue     |     `-NullStmt 0x151145a20 <line:24:8>     `-ReturnStmt 0x151145ac0 <line:29:2, col:9>       `-RecoveryExpr 0x151145aa0 <col:9> '<dependent type>' contains-errors lvalue ","20557":"`-FunctionDecl 0x123928198  line:1:1 push 'int (void)'   `-CompoundStmt 0x1239285e8 <line:3:1, line:8:1>     `-IfStmt 0x1239285b8 <line:4:5, line:7:2> has_else       |-BinaryOperator 0x123928330 <line:4:9, col:21> 'int' contains-errors '>='       | |-RecoveryExpr 0x1239282f0 <col:9> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x123928310 <col:21> '<dependent type>' contains-errors lvalue       |-CallExpr 0x123928528 <line:5:2, col:19> 'int'       | |-ImplicitCastExpr 0x123928510 <col:2> 'int (*)()' <FunctionToPointerDecay>       | | `-DeclRefExpr 0x123928460 <col:2> 'int ()' Function 0x1239283a8 '_nc_warning' 'int ()'       | `-ImplicitCastExpr 0x123928550 <col:14> 'char *' <ArrayToPointerDecay>       |   `-StringLiteral 0x1239284c0 <col:14> 'char[4]' lvalue \"STR\"       `-NullStmt 0x1239285b0 <line:7:2> ","20807":"`-FunctionDecl 0x127128288  line:1:21 invalid percentage_parse 'int (const char *, int *)' static   |-ParmVarDecl 0x1271280f0 <col:38, col:50> col:50 used value 'const char *'   |-ParmVarDecl 0x1271281a8 <col:57, col:62> col:62 used ppercent 'int *'   `-CompoundStmt 0x127141b60 <line:2:1, line:18:1>     |-DeclStmt 0x1271283c0 <line:3:5, col:15>     | `-VarDecl 0x127128358 <col:5, col:11> col:11 used endp 'char *'     |-IfStmt 0x127128730 <line:7:5, line:9:5>     | |-RecoveryExpr 0x1271286b0 <line:7:9> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x127128718 <col:16, line:9:5>     |   `-ReturnStmt 0x127128708 <line:8:9, col:16>     |     `-RecoveryExpr 0x1271286e8 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x127141af8 <line:10:5, line:16:5>     | |-BinaryOperator 0x127141800 <line:10:9, col:18> 'int' '=='     | | |-ImplicitCastExpr 0x1271287d0 <col:9, col:10> 'int' <IntegralCast>     | | | `-ImplicitCastExpr 0x1271287b8 <col:9, col:10> 'char' <LValueToRValue>     | | |   `-UnaryOperator 0x127128788 <col:9, col:10> 'char' lvalue prefix '*' cannot overflow     | | |     `-ImplicitCastExpr 0x127128770 <col:10> 'char *' <LValueToRValue>     | | |       `-DeclRefExpr 0x127128750 <col:10> 'char *' lvalue Var 0x127128358 'endp' 'char *'     | | `-CharacterLiteral 0x1271287a0 <col:18> 'int' 37     | `-CompoundStmt 0x127141ad8 <col:23, line:16:5>     |   |-IfStmt 0x1271419f0 <line:11:9, line:13:9>     |   | |-BinaryOperator 0x127141970 <line:11:13, col:27> 'int' contains-errors '||'     |   | | |-BinaryOperator 0x127141910 <col:13, col:17> 'int' contains-errors '<'     |   | | | |-RecoveryExpr 0x1271418f0 <col:13> '<dependent type>' contains-errors lvalue     |   | | | `-IntegerLiteral 0x127141838 <col:17> 'int' 0     |   | | `-BinaryOperator 0x127141950 <col:22, col:27> 'int' contains-errors '>='     |   | |   |-RecoveryExpr 0x127141930 <col:22> '<dependent type>' contains-errors lvalue     |   | |   `-IntegerLiteral 0x127141890 <col:27> 'int' 100     |   | `-CompoundStmt 0x1271419d8 <col:32, line:13:9>     |   |   `-ReturnStmt 0x1271419c8 <line:12:13, col:20>     |   |     `-RecoveryExpr 0x1271419a8 <col:20> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x127141ac8 <line:15:9, col:16>     |     `-RecoveryExpr 0x127141aa8 <col:16> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x127141b50 <line:17:5, col:12>       `-RecoveryExpr 0x127141b30 <col:12> '<dependent type>' contains-errors lvalue ","20443":"`-FunctionDecl 0x14203ce88  line:1:16 invalid bitand 'int *(int *, int)' static   |-ParmVarDecl 0x14203cd28 <col:23, col:33> col:33 invalid J 'int *'   |-ParmVarDecl 0x14203cda8 <col:36, col:40> col:40 used notin 'int'   `-CompoundStmt 0x1420556f0 <line:2:1, line:7:1>     `-ReturnStmt 0x1420556e0 <line:6:2, col:9>       `-RecoveryExpr 0x1420556c0 <col:9> '<dependent type>' contains-errors lvalue ","20645":"`-FunctionDecl 0x15a941358  line:1:12 do_brk_flags 'int (unsigned long, unsigned long, unsigned long, struct list_head *)' static   |-ParmVarDecl 0x15a9288d8 <col:25, col:39> col:39 used addr 'unsigned long'   |-ParmVarDecl 0x15a928958 <col:45, col:59> col:59 used len 'unsigned long'   |-ParmVarDecl 0x15a9289d8 <col:64, col:78> col:78 used flags 'unsigned long'   |-ParmVarDecl 0x15a941200 <col:85, col:103> col:103 used uf 'struct list_head *'   `-CompoundStmt 0x15b009e38 <line:2:1, line:67:1>     |-DeclStmt 0x15a941738 <line:3:2, col:36>     | |-RecordDecl 0x15a941468 <col:2, col:9> col:9 struct mm_struct     | `-VarDecl 0x15a9415d8 <col:2, col:34> col:20 used mm 'struct mm_struct *' cinit     |   `-CXXDependentScopeMemberExpr 0x15a9416d8 <col:25, col:34> '<dependent type>' contains-errors lvalue ->mm     |     `-RecoveryExpr 0x15a9416b8 <col:25> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x15a9419d0 <line:4:2, col:35>     | |-RecordDecl 0x15a941750 <col:2, col:9> col:9 struct vm_area_struct     | |-VarDecl 0x15a9418b8 <col:2, col:25> col:25 used vma 'struct vm_area_struct *'     | `-VarDecl 0x15a941948 <col:2, col:31> col:31 used prev 'struct vm_area_struct *'     |-DeclStmt 0x15a941cd0 <line:5:2, col:38>     | |-RecordDecl 0x15a9419e8 <col:2, col:9> col:9 struct rb_node     | |-VarDecl 0x15a941bb8 <col:2, col:19> col:19 used rb_link 'struct rb_node **'     | `-VarDecl 0x15a941c48 <col:2, col:29> col:29 used rb_parent 'struct rb_node *'     |-DeclStmt 0x15a941d68 <line:7:2, col:11>     | `-VarDecl 0x15a941d00 <col:2, col:6> col:6 used error 'int'     |-IfStmt 0x15a941ed0 <line:10:2, line:11:11>     | |-RecoveryExpr 0x15a941e08 <line:10:6, col:30> '_Bool' contains-errors     | `-ReturnStmt 0x15a941ec0 <line:11:3, col:11>     |   `-UnaryOperator 0x15a941ea8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x15a941e90 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x15a941e70 <col:11> '<dependent type>' contains-errors lvalue     |-CompoundAssignOperator 0x15a942090 <line:12:2, col:52> 'unsigned long' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-DeclRefExpr 0x15a941ef0 <col:2> 'unsigned long' lvalue ParmVar 0x15a9289d8 'flags' 'unsigned long'     | `-BinaryOperator 0x15a942070 <col:11, col:52> '<dependent type>' contains-errors '|'     |   |-BinaryOperator 0x15a942050 <col:11, col:35> '<dependent type>' contains-errors '|'     |   | |-RecoveryExpr 0x15a942010 <col:11> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x15a942030 <col:35> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x15a941f98 <col:48, col:52> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x15a941f60 <col:48> 'struct mm_struct *' contains-errors lvalue Var 0x15a9415d8 'mm' 'struct mm_struct *'     |-BinaryOperator 0x15a9437a0 <line:14:2, col:57> 'int' contains-errors '='     | |-DeclRefExpr 0x15a9420c0 <col:2> 'int' lvalue Var 0x15a941d00 'error' 'int'     | `-CallExpr 0x15a943758 <col:10, col:57> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15a943600 <col:10> 'int ()' Function 0x15a942138 'get_unmapped_area' 'int ()'     |   |-RecoveryExpr 0x15a943718 <col:28> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x15a943638 <col:34> 'unsigned long' lvalue ParmVar 0x15a9288d8 'addr' 'unsigned long'     |   |-DeclRefExpr 0x15a943658 <col:40> 'unsigned long' lvalue ParmVar 0x15a928958 'len' 'unsigned long'     |   |-IntegerLiteral 0x15a943678 <col:45> 'int' 0     |   `-RecoveryExpr 0x15a943738 <col:48> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15a9439b0 <line:15:2, line:16:10>     | |-CallExpr 0x15a943928 <line:15:6, col:26> 'int'     | | |-ImplicitCastExpr 0x15a943910 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x15a9438a0 <col:6> 'int ()' Function 0x15a9437e8 'offset_in_page' 'int ()'     | | `-ImplicitCastExpr 0x15a943950 <col:21> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x15a9438c0 <col:21> 'int' lvalue Var 0x15a941d00 'error' 'int'     | `-ReturnStmt 0x15a9439a0 <line:16:3, col:10>     |   `-ImplicitCastExpr 0x15a943988 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x15a943968 <col:10> 'int' lvalue Var 0x15a941d00 'error' 'int'     |-BinaryOperator 0x15a943bc8 <line:18:2, col:51> 'int' contains-errors '='     | |-DeclRefExpr 0x15a9439d0 <col:2> 'int' lvalue Var 0x15a941d00 'error' 'int'     | `-CallExpr 0x15a943b90 <col:10, col:51> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15a943ad0 <col:10> 'int ()' Function 0x15a943a18 'mlock_future_check' 'int ()'     |   |-DeclRefExpr 0x15a943af0 <col:29> 'struct mm_struct *' contains-errors lvalue Var 0x15a9415d8 'mm' 'struct mm_struct *'     |   |-RecoveryExpr 0x15a943b48 <col:33, col:37> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x15a943b10 <col:33> 'struct mm_struct *' contains-errors lvalue Var 0x15a9415d8 'mm' 'struct mm_struct *'     |   `-DeclRefExpr 0x15a943b70 <col:48> 'unsigned long' lvalue ParmVar 0x15a928958 'len' 'unsigned long'     |-IfStmt 0x15a943c68 <line:19:2, line:20:10>     | |-ImplicitCastExpr 0x15a943c08 <line:19:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x15a943be8 <col:6> 'int' lvalue Var 0x15a941d00 'error' 'int'     | `-ReturnStmt 0x15a943c58 <line:20:3, col:10>     |   `-ImplicitCastExpr 0x15a943c40 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x15a943c20 <col:10> 'int' lvalue Var 0x15a941d00 'error' 'int'     |-WhileStmt 0x15a944380 <line:23:2, line:27:2>     | |-CallExpr 0x15a943fe8 <line:23:9, line:24:20> 'int' contains-errors     | | |-ImplicitCastExpr 0x15a943fd0 <line:23:9> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x15a943d68 <col:9> 'int ()' Function 0x15a943cb0 'find_vma_links' 'int ()'     | | |-ImplicitCastExpr 0x15a944038 <col:24> 'struct mm_struct *' contains-errors <LValueToRValue>     | | | `-DeclRefExpr 0x15a943d88 <col:24> 'struct mm_struct *' contains-errors lvalue Var 0x15a9415d8 'mm' 'struct mm_struct *'     | | |-ImplicitCastExpr 0x15a944050 <col:28> 'unsigned long' <LValueToRValue>     | | | `-DeclRefExpr 0x15a943da8 <col:28> 'unsigned long' lvalue ParmVar 0x15a9288d8 'addr' 'unsigned long'     | | |-BinaryOperator 0x15a943e38 <col:34, col:41> 'unsigned long' '+'     | | | |-ImplicitCastExpr 0x15a943e08 <col:34> 'unsigned long' <LValueToRValue>     | | | | `-DeclRefExpr 0x15a943dc8 <col:34> 'unsigned long' lvalue ParmVar 0x15a9288d8 'addr' 'unsigned long'     | | | `-ImplicitCastExpr 0x15a943e20 <col:41> 'unsigned long' <LValueToRValue>     | | |   `-DeclRefExpr 0x15a943de8 <col:41> 'unsigned long' lvalue ParmVar 0x15a928958 'len' 'unsigned long'     | | |-UnaryOperator 0x15a943ee0 <col:46, col:47> 'struct vm_area_struct **' prefix '&' cannot overflow     | | | `-DeclRefExpr 0x15a943e58 <col:47> 'struct vm_area_struct *' lvalue Var 0x15a941948 'prev' 'struct vm_area_struct *'     | | |-UnaryOperator 0x15a943f80 <col:53, col:54> 'struct rb_node ***' prefix '&' cannot overflow     | | | `-DeclRefExpr 0x15a943ef8 <col:54> 'struct rb_node **' lvalue Var 0x15a941bb8 'rb_link' 'struct rb_node **'     | | `-UnaryOperator 0x15a943fb8 <line:24:10, col:11> 'struct rb_node **' prefix '&' cannot overflow     | |   `-DeclRefExpr 0x15a943f98 <col:11> 'struct rb_node *' lvalue Var 0x15a941c48 'rb_parent' 'struct rb_node *'     | `-CompoundStmt 0x15a944368 <col:23, line:27:2>     |   `-IfStmt 0x15a944348 <line:25:3, line:26:12>     |     |-CallExpr 0x15a944200 <line:25:7, col:34> 'int' contains-errors     |     | |-ImplicitCastExpr 0x15a9441e8 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     | | `-DeclRefExpr 0x15a944148 <col:7> 'int ()' Function 0x15a944090 'do_munmap' 'int ()'     |     | |-ImplicitCastExpr 0x15a944240 <col:17> 'struct mm_struct *' contains-errors <LValueToRValue>     |     | | `-DeclRefExpr 0x15a944168 <col:17> 'struct mm_struct *' contains-errors lvalue Var 0x15a9415d8 'mm' 'struct mm_struct *'     |     | |-ImplicitCastExpr 0x15a944258 <col:21> 'unsigned long' <LValueToRValue>     |     | | `-DeclRefExpr 0x15a944188 <col:21> 'unsigned long' lvalue ParmVar 0x15a9288d8 'addr' 'unsigned long'     |     | |-ImplicitCastExpr 0x15a944270 <col:27> 'unsigned long' <LValueToRValue>     |     | | `-DeclRefExpr 0x15a9441a8 <col:27> 'unsigned long' lvalue ParmVar 0x15a928958 'len' 'unsigned long'     |     | `-ImplicitCastExpr 0x15a944288 <col:32> 'struct list_head *' <LValueToRValue>     |     |   `-DeclRefExpr 0x15a9441c8 <col:32> 'struct list_head *' lvalue ParmVar 0x15a941200 'uf' 'struct list_head *'     |     `-ReturnStmt 0x15a944338 <line:26:4, col:12>     |       `-UnaryOperator 0x15a944320 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |         `-ImplicitCastExpr 0x15a944308 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |           `-RecoveryExpr 0x15a9442e8 <col:12> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15b0088c0 <line:30:2, line:31:11>     | |-UnaryOperator 0x15b008800 <line:30:6, col:49> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x15a9445c8 <col:7, col:49> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x15a944480 <col:7> 'int ()' Function 0x15a9443c8 'may_expand_vm' 'int ()'     | |   |-DeclRefExpr 0x15a9444a0 <col:21> 'struct mm_struct *' contains-errors lvalue Var 0x15a9415d8 'mm' 'struct mm_struct *'     | |   |-DeclRefExpr 0x15a9444c0 <col:25> 'unsigned long' lvalue ParmVar 0x15a9289d8 'flags' 'unsigned long'     | |   `-BinaryOperator 0x15a9445a8 <col:32, col:39> '<dependent type>' contains-errors '>>'     | |     |-DeclRefExpr 0x15a9444e0 <col:32> 'unsigned long' lvalue ParmVar 0x15a928958 'len' 'unsigned long'     | |     `-RecoveryExpr 0x15a944588 <col:39> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x15b0088b0 <line:31:3, col:11>     |   `-UnaryOperator 0x15b008898 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x15b008880 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x15b008860 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15b008d90 <line:42:2, line:43:8>     | |-ImplicitCastExpr 0x15b008d10 <line:42:6> 'struct vm_area_struct *' <LValueToRValue>     | | `-DeclRefExpr 0x15b008cf0 <col:6> 'struct vm_area_struct *' lvalue Var 0x15a9418b8 'vma' 'struct vm_area_struct *'     | `-GotoStmt 0x15b008d78 <line:43:3, col:8> 'out' 0x15b008d28     |-BinaryOperator 0x15b008f60 <line:46:2, col:24> 'struct vm_area_struct *' contains-errors '='     | |-DeclRefExpr 0x15b008db0 <col:2> 'struct vm_area_struct *' lvalue Var 0x15a9418b8 'vma' 'struct vm_area_struct *'     | `-ImplicitCastExpr 0x15b008f48 <col:8, col:24> 'struct vm_area_struct *' contains-errors <IntegralToPointer>     |   `-CallExpr 0x15b008f08 <col:8, col:24> 'int' contains-errors     |     |-ImplicitCastExpr 0x15b008ef0 <col:8> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x15b008eb0 <col:8> 'int ()' Function 0x15b008df8 'vm_area_alloc' 'int ()'     |     `-ImplicitCastExpr 0x15b008f30 <col:22> 'struct mm_struct *' contains-errors <LValueToRValue>     |       `-DeclRefExpr 0x15b008ed0 <col:22> 'struct mm_struct *' contains-errors lvalue Var 0x15a9415d8 'mm' 'struct mm_struct *'     |-IfStmt 0x15b009100 <line:47:2, line:50:2>     | |-UnaryOperator 0x15b008fb8 <line:47:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x15b008fa0 <col:7> 'struct vm_area_struct *' <LValueToRValue>     | |   `-DeclRefExpr 0x15b008f80 <col:7> 'struct vm_area_struct *' lvalue Var 0x15a9418b8 'vma' 'struct vm_area_struct *'     | `-CompoundStmt 0x15b0090f0 <col:12, line:50:2>     |-CallExpr 0x15b009258 <line:52:2, col:23> 'int'     | |-ImplicitCastExpr 0x15b009240 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x15b009200 <col:2> 'int ()' Function 0x15b009148 'vma_set_anonymous' 'int ()'     | `-ImplicitCastExpr 0x15b009280 <col:20> 'struct vm_area_struct *' <LValueToRValue>     |   `-DeclRefExpr 0x15b009220 <col:20> 'struct vm_area_struct *' lvalue Var 0x15a9418b8 'vma' 'struct vm_area_struct *'     |-BinaryOperator 0x15b009318 <line:53:2, col:18> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x15b0092d0 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15b009298 <col:2> 'struct vm_area_struct *' lvalue Var 0x15a9418b8 'vma' 'struct vm_area_struct *'     | `-DeclRefExpr 0x15b0092f8 <col:18> 'unsigned long' lvalue ParmVar 0x15a9288d8 'addr' 'unsigned long'     |-BinaryOperator 0x15b009428 <line:54:2, col:23> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x15b009370 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15b009338 <col:2> 'struct vm_area_struct *' lvalue Var 0x15a9418b8 'vma' 'struct vm_area_struct *'     | `-BinaryOperator 0x15b009408 <col:16, col:23> 'unsigned long' '+'     |   |-ImplicitCastExpr 0x15b0093d8 <col:16> 'unsigned long' <LValueToRValue>     |   | `-DeclRefExpr 0x15b009398 <col:16> 'unsigned long' lvalue ParmVar 0x15a9288d8 'addr' 'unsigned long'     |   `-ImplicitCastExpr 0x15b0093f0 <col:23> 'unsigned long' <LValueToRValue>     |     `-DeclRefExpr 0x15b0093b8 <col:23> 'unsigned long' lvalue ParmVar 0x15a928958 'len' 'unsigned long'     |-BinaryOperator 0x15b009528 <line:56:2, col:18> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x15b0094e0 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15b0094a8 <col:2> 'struct vm_area_struct *' lvalue Var 0x15a9418b8 'vma' 'struct vm_area_struct *'     | `-DeclRefExpr 0x15b009508 <col:18> 'unsigned long' lvalue ParmVar 0x15a9289d8 'flags' 'unsigned long'     |-BinaryOperator 0x15b009720 <line:57:2, col:44> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x15b009580 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15b009548 <col:2> 'struct vm_area_struct *' lvalue Var 0x15a9418b8 'vma' 'struct vm_area_struct *'     | `-CallExpr 0x15b0096e0 <col:22, col:44> 'int'     |   |-ImplicitCastExpr 0x15b0096c8 <col:22> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x15b009688 <col:22> 'int ()' Function 0x15b0095d0 'vm_get_page_prot' 'int ()'     |   `-ImplicitCastExpr 0x15b009708 <col:39> 'unsigned long' <LValueToRValue>     |     `-DeclRefExpr 0x15b0096a8 <col:39> 'unsigned long' lvalue ParmVar 0x15a9289d8 'flags' 'unsigned long'     |-CallExpr 0x15b009990 <line:58:2, col:44> 'int' contains-errors     | |-ImplicitCastExpr 0x15b009978 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x15b0098b8 <col:2> 'int ()' Function 0x15b009800 'vma_link' 'int ()'     | |-ImplicitCastExpr 0x15b0099d8 <col:11> 'struct mm_struct *' contains-errors <LValueToRValue>     | | `-DeclRefExpr 0x15b0098d8 <col:11> 'struct mm_struct *' contains-errors lvalue Var 0x15a9415d8 'mm' 'struct mm_struct *'     | |-ImplicitCastExpr 0x15b0099f0 <col:15> 'struct vm_area_struct *' <LValueToRValue>     | | `-DeclRefExpr 0x15b0098f8 <col:15> 'struct vm_area_struct *' lvalue Var 0x15a9418b8 'vma' 'struct vm_area_struct *'     | |-ImplicitCastExpr 0x15b009a08 <col:20> 'struct vm_area_struct *' <LValueToRValue>     | | `-DeclRefExpr 0x15b009918 <col:20> 'struct vm_area_struct *' lvalue Var 0x15a941948 'prev' 'struct vm_area_struct *'     | |-ImplicitCastExpr 0x15b009a20 <col:26> 'struct rb_node **' <LValueToRValue>     | | `-DeclRefExpr 0x15b009938 <col:26> 'struct rb_node **' lvalue Var 0x15a941bb8 'rb_link' 'struct rb_node **'     | `-ImplicitCastExpr 0x15b009a38 <col:35> 'struct rb_node *' <LValueToRValue>     |   `-DeclRefExpr 0x15b009958 <col:35> 'struct rb_node *' lvalue Var 0x15a941c48 'rb_parent' 'struct rb_node *'     |-LabelStmt 0x15b009bc8 <line:59:1, line:60:21> 'out'     | `-CallExpr 0x15b009b88 <col:2, col:21> 'int'     |   |-ImplicitCastExpr 0x15b009b70 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x15b009b30 <col:2> 'int ()' Function 0x15b009a78 'perf_event_mmap' 'int ()'     |   `-ImplicitCastExpr 0x15b009bb0 <col:18> 'struct vm_area_struct *' <LValueToRValue>     |     `-DeclRefExpr 0x15b009b50 <col:18> 'struct vm_area_struct *' lvalue Var 0x15a9418b8 'vma' 'struct vm_area_struct *'     `-ReturnStmt 0x15b009e28 <line:66:2, col:9>       `-IntegerLiteral 0x15b009e08 <col:9> 'int' 0 ","20194":"`-FunctionDecl 0x146945438  line:1:16 referenced invalid psi_write 'int (struct file *, const char)' static   |-ParmVarDecl 0x146928068 <col:26, col:39> col:39 used file 'struct file *'   |-ParmVarDecl 0x1469280e0 <col:45, col:56> col:56 __user 'const char'   `-CompoundStmt 0x1469475f8 <line:3:1, line:32:1>     |-DeclStmt 0x1469455f8 <line:4:2, col:14>     | `-VarDecl 0x146945590 <col:2, col:13> col:7 used buf 'char[32]'     |-UnaryExprOrTypeTraitExpr 0x146945668 <line:5:2, col:9> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x146945648 <col:9> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x146945878 <line:6:2, col:22>     | |-RecordDecl 0x146945688 <col:2, col:9> col:9 struct seq_file     | `-VarDecl 0x1469457f8 <col:2, col:19> col:19 used seq 'struct seq_file *'     |-DeclStmt 0x146945a78 <line:7:2, col:25>     | |-RecordDecl 0x146945890 <col:2, col:9> col:9 struct psi_trigger     | `-VarDecl 0x1469459f8 <col:2, col:22> col:22 used new 'struct psi_trigger *'     |-IfStmt 0x146945d70 <line:9:2, line:10:11>     | |-CallExpr 0x146945ca0 <line:9:6, col:40> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x146945bf0 <col:6> 'int ()' Function 0x146945b38 'static_branch_likely' 'int ()'     | | `-UnaryOperator 0x146945c88 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x146945c68 <col:28> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x146945d60 <line:10:3, col:11>     |   `-UnaryOperator 0x146945d48 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x146945d30 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x146945d10 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x146945ed0 <line:12:2, line:13:11>     | |-UnaryOperator 0x146945e10 <line:12:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x146945df8 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x146945dd8 <col:7> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x146945ec0 <line:13:3, col:11>     |   `-UnaryOperator 0x146945ea8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x146945e90 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x146945e70 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x146946340 <line:16:2, line:17:11>     | |-CallExpr 0x146946260 <line:16:6, col:44> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x146946178 <col:6> 'int ()' Function 0x1469460c0 'copy_from_user' 'int ()'     | | |-DeclRefExpr 0x146946198 <col:21> 'char[32]' lvalue Var 0x146945590 'buf' 'char[32]'     | | |-RecoveryExpr 0x146946220 <col:26> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x146946240 <col:36> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x146946330 <line:17:3, col:11>     |   `-UnaryOperator 0x146946318 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x146946300 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x1469462e0 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x146946cd8 <line:21:2, col:56> 'struct psi_trigger *' contains-errors '='     | |-DeclRefExpr 0x146946a00 <col:2> 'struct psi_trigger *' lvalue Var 0x1469459f8 'new' 'struct psi_trigger *'     | `-CallExpr 0x146946c98 <col:8, col:56> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x146946b00 <col:8> 'int ()' Function 0x146946a48 'psi_trigger_create' 'int ()'     |   |-UnaryOperator 0x146946c40 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x146946c20 <col:28> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x146946b50 <col:40> 'char[32]' lvalue Var 0x146945590 'buf' 'char[32]'     |   |-RecoveryExpr 0x146946c58 <col:45> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x146946c78 <col:53> '<dependent type>' contains-errors lvalue     |-IfStmt 0x146947030 <line:22:2, line:23:21>     | |-CallExpr 0x146946e68 <line:22:6, col:16> 'int'     | | |-ImplicitCastExpr 0x146946e50 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x146946dd8 <col:6> 'int ()' Function 0x146946d20 'IS_ERR' 'int ()'     | | `-ImplicitCastExpr 0x146946e90 <col:13> 'struct psi_trigger *' <LValueToRValue>     | |   `-DeclRefExpr 0x146946df8 <col:13> 'struct psi_trigger *' lvalue Var 0x1469459f8 'new' 'struct psi_trigger *'     | `-ReturnStmt 0x146947020 <line:23:3, col:21>     |   `-CallExpr 0x146946fe0 <col:10, col:21> 'int'     |     |-ImplicitCastExpr 0x146946fc8 <col:10> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x146946f88 <col:10> 'int ()' Function 0x146946ed0 'PTR_ERR' 'int ()'     |     `-ImplicitCastExpr 0x146947008 <col:18> 'struct psi_trigger *' <LValueToRValue>     |       `-DeclRefExpr 0x146946fa8 <col:18> 'struct psi_trigger *' lvalue Var 0x1469459f8 'new' 'struct psi_trigger *'     |-BinaryOperator 0x1469470d0 <line:25:2, col:14> 'struct seq_file *' contains-errors '='     | |-DeclRefExpr 0x146947050 <col:2> 'struct seq_file *' lvalue Var 0x1469457f8 'seq' 'struct seq_file *'     | `-RecoveryExpr 0x1469470a8 <col:8, col:14> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x146947070 <col:8> 'struct file *' lvalue ParmVar 0x146928068 'file' 'struct file *'     |-CallExpr 0x146947268 <line:27:2, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1469471d0 <col:2> 'int ()' Function 0x146947118 'mutex_lock' 'int ()'     | `-UnaryOperator 0x146947250 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x146947228 <col:14, col:19> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1469471f0 <col:14> 'struct seq_file *' lvalue Var 0x1469457f8 'seq' 'struct seq_file *'     |-CallExpr 0x146947428 <line:28:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x146947370 <col:2> 'int ()' Function 0x1469472b8 'psi_trigger_replace' 'int ()'     | |-UnaryOperator 0x1469473f0 <col:22, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x1469473c8 <col:23, col:28> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x146947390 <col:23> 'struct seq_file *' lvalue Var 0x1469457f8 'seq' 'struct seq_file *'     | `-DeclRefExpr 0x146947408 <col:37> 'struct psi_trigger *' lvalue Var 0x1469459f8 'new' 'struct psi_trigger *'     `-CallExpr 0x1469475d0 <line:29:2, col:25> '<dependent type>' contains-errors       |-DeclRefExpr 0x146947538 <col:2> 'int ()' Function 0x146947480 'mutex_unlock' 'int ()'       `-UnaryOperator 0x1469475b8 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x146947590 <col:16, col:21> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x146947558 <col:16> 'struct seq_file *' lvalue Var 0x1469457f8 'seq' 'struct seq_file *' ","20778":"`-FunctionDecl 0x15600ddc8  line:1:12 invalid StringView 'int (int)'   |-ParmVarDecl 0x15600dcf0 <col:23, col:32> col:32 invalid utf16Ref 'int'   `-CompoundStmt 0x15600de78 <line:6:34, col:35> ","20989":"`-FunctionDecl 0x14c928288  line:1:8 invalid tenc_dump 'int (int *, int *)'   |-ParmVarDecl 0x14c928128 <col:18, col:26> col:26 invalid a 'int *'   |-ParmVarDecl 0x14c9281a8 <col:29, col:36> col:36 invalid trace 'int *'   `-CompoundStmt 0x14d009418 <line:2:1, line:22:1>     |-IfStmt 0x14c928408 <line:4:2, col:17>     | |-UnaryOperator 0x14c9283a8 <col:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14c928390 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x14c928370 <col:7> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14c9283f8 <col:10, col:17>     |   `-RecoveryExpr 0x14c9283d8 <col:17> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14c928640 <line:6:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c928580 <col:2> 'int ()' Function 0x14c9284c8 'gf_isom_box_dump_start' 'int ()'     | |-RecoveryExpr 0x14c9285a0 <col:25> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x14c928600 <col:28> 'char[4]' lvalue \"STR\"     | `-RecoveryExpr 0x14c928620 <col:35> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14d0088e8 <line:8:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c928758 <col:2> 'int ()' Function 0x14c9286a0 'fprintf' 'int ()'     | |-RecoveryExpr 0x14c928778 <col:10> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x14c928798 <col:17> 'char[4]' lvalue \"STR\"     | `-CXXDependentScopeMemberExpr 0x14d0088a0 <col:24, col:29> '<dependent type>' contains-errors lvalue ->isProtected     |   `-RecoveryExpr 0x14d008880 <col:24> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14d008fc0 <line:9:2, line:15:2> has_else     | |-CXXDependentScopeMemberExpr 0x14d0089a0 <line:9:6, col:11> '<dependent type>' contains-errors lvalue ->Per_Sample_IV_Size     | | `-RecoveryExpr 0x14d008980 <col:6> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x14d008b48 <line:10:3, col:48> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14d0089e8 <col:3> 'int ()' Function 0x14c9286a0 'fprintf' 'int ()'     | | |-RecoveryExpr 0x14d008a08 <col:11> '<dependent type>' contains-errors lvalue     | | |-StringLiteral 0x14d008a28 <col:18> 'char[4]' lvalue \"STR\"     | | `-CXXDependentScopeMemberExpr 0x14d008b00 <col:25, col:30> '<dependent type>' contains-errors lvalue ->Per_Sample_IV_Size     | |   `-RecoveryExpr 0x14d008ae0 <col:25> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14d008fa0 <line:11:7, line:15:2>     |   |-CallExpr 0x14d008ce0 <line:12:3, col:46> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14d008b80 <col:3> 'int ()' Function 0x14c9286a0 'fprintf' 'int ()'     |   | |-RecoveryExpr 0x14d008ba0 <col:11> '<dependent type>' contains-errors lvalue     |   | |-StringLiteral 0x14d008bc0 <col:18> 'char[4]' lvalue \"STR\"     |   | `-CXXDependentScopeMemberExpr 0x14d008c98 <col:25, col:30> '<dependent type>' contains-errors lvalue ->constant_IV_size     |   |   `-RecoveryExpr 0x14d008c78 <col:25> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x14d008f70 <line:14:3, col:23> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14d008f10 <col:3> 'int ()' Function 0x14c9286a0 'fprintf' 'int ()'     |     |-RecoveryExpr 0x14d008f30 <col:11> '<dependent type>' contains-errors lvalue     |     `-StringLiteral 0x14d008f50 <col:18> 'char[4]' lvalue \"STR\"     |-CallExpr 0x14d009250 <line:19:2, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14d0091f0 <col:2> 'int ()' Function 0x14c9286a0 'fprintf' 'int ()'     | |-RecoveryExpr 0x14d009210 <col:10> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x14d009230 <col:17> 'char[4]' lvalue \"STR\"     `-CallExpr 0x14d0093e0 <line:20:2, col:39> '<dependent type>' contains-errors       |-DeclRefExpr 0x14d009360 <col:2> 'int ()' Function 0x14d0092a8 'gf_isom_box_dump_done' 'int ()'       |-StringLiteral 0x14d009380 <col:24> 'char[4]' lvalue \"STR\"       |-RecoveryExpr 0x14d0093a0 <col:31> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x14d0093c0 <col:34> '<dependent type>' contains-errors lvalue ","20734":"`-FunctionDecl 0x142943000  col:6 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x142943100 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x142943168 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x1429430a8 <<invalid sloc>> Implicit 887 ","21173":"`-FunctionDecl 0x137940c48  line:1:1 vhost_user_set_req_fd 'int (struct virtio_net **, struct VhostUserMsg *, int)'   |-ParmVarDecl 0x1379286a8 <col:23, col:43> col:43 used pdev 'struct virtio_net **'   |-ParmVarDecl 0x137940a88 <col:49, col:70> col:70 used msg 'struct VhostUserMsg *'   |-ParmVarDecl 0x137940b08 <line:2:4, col:8> col:8 main_fd 'int'   `-CompoundStmt 0x1379416f8 <line:3:1, line:20:1>     |-DeclStmt 0x137940ea8 <line:4:2, col:32>     | `-VarDecl 0x137940dd8 <col:2, col:28> col:21 used dev 'struct virtio_net *' cinit     |   `-ImplicitCastExpr 0x137940e90 <col:27, col:28> 'struct virtio_net *' <LValueToRValue>     |     `-UnaryOperator 0x137940e78 <col:27, col:28> 'struct virtio_net *' lvalue prefix '*' cannot overflow     |       `-ImplicitCastExpr 0x137940e60 <col:28> 'struct virtio_net **' <LValueToRValue>     |         `-DeclRefExpr 0x137940e40 <col:28> 'struct virtio_net **' lvalue ParmVar 0x1379286a8 'pdev' 'struct virtio_net **'     |-DeclStmt 0x137940ff8 <line:5:2, col:22>     | `-VarDecl 0x137940ed8 <col:2, col:21> col:6 used fd 'int' cinit     |   `-ArraySubscriptExpr 0x137940fd8 <col:11, col:21> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x137940fc0 <col:11, col:16> '<dependent type>' contains-errors <LValueToRValue>     |     | `-RecoveryExpr 0x137940f78 <col:11, col:16> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x137940f40 <col:11> 'struct VhostUserMsg *' lvalue ParmVar 0x137940a88 'msg' 'struct VhostUserMsg *'     |     `-IntegerLiteral 0x137940fa0 <col:20> 'int' 0     |-IfStmt 0x1379413a8 <line:7:2, line:12:2>     | |-BinaryOperator 0x137941068 <line:7:6, col:11> 'int' contains-errors '<'     | | |-ImplicitCastExpr 0x137941050 <col:6> 'int' contains-errors <LValueToRValue>     | | | `-DeclRefExpr 0x137941010 <col:6> 'int' contains-errors lvalue Var 0x137940ed8 'fd' 'int'     | | `-IntegerLiteral 0x137941030 <col:11> 'int' 0     | `-CompoundStmt 0x137941388 <col:14, line:12:2>     |   |-CallExpr 0x137941300 <line:8:3, line:10:7> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1379411b0 <line:8:3> 'int ()' Function 0x1379410f8 'RTE_LOG' 'int ()'     |   | |-RecoveryExpr 0x1379412c0 <col:11> '<dependent type>' contains-errors lvalue     |   | |-RecoveryExpr 0x1379412e0 <col:16> '<dependent type>' contains-errors lvalue     |   | |-StringLiteral 0x137941240 <line:9:5> 'char[4]' lvalue \"STR\"     |   | `-DeclRefExpr 0x137941260 <line:10:5> 'int' contains-errors lvalue Var 0x137940ed8 'fd' 'int'     |   `-ReturnStmt 0x137941378 <line:11:3, col:10>     |     `-RecoveryExpr 0x137941358 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1379415f0 <line:14:2, line:15:26>     | |-BinaryOperator 0x137941448 <line:14:6, col:27> 'int' contains-errors '>='     | | |-RecoveryExpr 0x137941400 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x1379413c8 <col:6> 'struct virtio_net *' lvalue Var 0x137940dd8 'dev' 'struct virtio_net *'     | | `-IntegerLiteral 0x137941428 <col:27> 'int' 0     | `-CallExpr 0x1379415c8 <line:15:3, col:26> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x137941548 <col:3> 'int ()' Function 0x137941490 'close' 'int ()'     |   `-RecoveryExpr 0x1379415a0 <col:9, col:14> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x137941568 <col:9> 'struct virtio_net *' lvalue Var 0x137940dd8 'dev' 'struct virtio_net *'     |-BinaryOperator 0x137941690 <line:17:2, col:22> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x137941648 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x137941610 <col:2> 'struct virtio_net *' lvalue Var 0x137940dd8 'dev' 'struct virtio_net *'     | `-DeclRefExpr 0x137941670 <col:22> 'int' contains-errors lvalue Var 0x137940ed8 'fd' 'int'     `-ReturnStmt 0x1379416e8 <line:19:2, col:9>       `-RecoveryExpr 0x1379416c8 <col:9> '<dependent type>' contains-errors lvalue ","20889":"`-FunctionDecl 0x13e80df58  line:1:1 invalid TPMI_RH_PROVISION_Unmarshal 'int (int *, int **, int *)'   |-ParmVarDecl 0x13e80dd28 <col:29, col:48> col:48 invalid target 'int *'   |-ParmVarDecl 0x13e80dde0 <col:56, col:63> col:63 invalid buffer 'int **'   |-ParmVarDecl 0x13e80de60 <col:71, col:78> col:78 invalid size 'int *'   `-CompoundStmt 0x13f809d58 <line:2:1, line:18:1>     |-IfStmt 0x13e80e2e8 <line:5:5, line:7:5>     | |-BinaryOperator 0x13e80e0a8 <line:5:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x13e80e068 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13e80e088 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13e80e2d8 <col:31, line:7:5>     |-IfStmt 0x13f809cf0 <line:8:5, line:16:5>     | |-BinaryOperator 0x13e80e398 <line:8:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x13e80e358 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13e80e378 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13f809cd8 <col:31, line:16:5>     |   `-SwitchStmt 0x13f809c18 <line:9:2, line:15:2>     |     |-UnaryOperator 0x13f809c00 <line:9:10, col:11> '<dependent type>' contains-errors prefix '*' cannot overflow     |     | `-ImplicitCastExpr 0x13e80e3d8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |     |   `-RecoveryExpr 0x13e80e3b8 <col:11> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x13f809cb8 <col:19, line:15:2>     |       |-BreakStmt 0x13f809c70 <line:12:6>     |       `-DefaultStmt 0x13f809c98 <line:13:4, col:11>     |         `-NullStmt 0x13f809c90 <col:11>     `-ReturnStmt 0x13f809d48 <line:17:5, col:12>       `-RecoveryExpr 0x13f809d28 <col:12> '<dependent type>' contains-errors lvalue ","21166":"`-FunctionDecl 0x14d9281f0  line:1:13 invalid unregister_menu_from_server 'void (int *)' static   |-ParmVarDecl 0x14d928128 <col:42, col:53> col:53 invalid cache 'int *'   `-CompoundStmt 0x14d941ad0 <line:2:1, line:10:1>     |-DeclStmt 0x14d9283a8 <line:3:5, col:17>     | `-VarDecl 0x14d928340 <col:5, col:16> col:10 used buf 'char[38]'     |-CallExpr 0x14d928648 <line:4:5, col:44> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14d928520 <col:5> 'int ()' Function 0x14d928468 'g_snprintf' 'int ()'     | |-DeclRefExpr 0x14d928540 <col:17> 'char[38]' lvalue Var 0x14d928340 'buf' 'char[38]'     | |-IntegerLiteral 0x14d928560 <col:22> 'int' 38     | |-StringLiteral 0x14d9285c0 <col:26> 'char[4]' lvalue \"STR\"     | `-CXXDependentScopeMemberExpr 0x14d928600 <col:33, col:40> '<dependent type>' contains-errors lvalue ->md5     |   `-RecoveryExpr 0x14d9285e0 <col:33> '<dependent type>' contains-errors lvalue     `-IfStmt 0x14d941ab0 <line:6:5, line:9:5>       |-BinaryOperator 0x14d9418d0 <line:6:8, col:39> 'int' contains-errors '<='       | |-CallExpr 0x14d941898 <col:8, col:34> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x14d928768 <col:8> 'int ()' Function 0x14d9286b0 'write' 'int ()'       | | |-RecoveryExpr 0x14d941878 <col:15> '<dependent type>' contains-errors lvalue       | | |-DeclRefExpr 0x14d9287a0 <col:26> 'char[38]' lvalue Var 0x14d928340 'buf' 'char[38]'       | | `-IntegerLiteral 0x14d9287c0 <col:31> 'int' 37       | `-IntegerLiteral 0x14d941838 <col:39> 'int' 0       `-CompoundStmt 0x14d941a98 <line:7:5, line:9:5>         `-CallExpr 0x14d941a58 <line:8:9, col:20> 'int'           |-ImplicitCastExpr 0x14d941a40 <col:9> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x14d9419d0 <col:9> 'int ()' Function 0x14d941918 'DEBUG' 'int ()'           `-ImplicitCastExpr 0x14d941a80 <col:15> 'char *' <ArrayToPointerDecay>             `-StringLiteral 0x14d9419f0 <col:15> 'char[4]' lvalue \"STR\" ","21020":"`-FunctionDecl 0x11d944ae0  col:20 implicit used toupper 'int (int)' extern   |-ParmVarDecl 0x11d944be0 <<invalid sloc>> <invalid sloc> 'int'   |-BuiltinAttr 0x11d944b88 <<invalid sloc>> Implicit 933   |-NoThrowAttr 0x11d944c50 <col:20> Implicit   `-PureAttr 0x11d944c78 <col:20> Implicit ","21097":"`-FunctionDecl 0x14200de88  line:1:1 invalid cmp_addr_policies 'int (int *, int *)'   |-ParmVarDecl 0x14200dd28 <col:19, col:32> col:32 invalid a 'int *'   |-ParmVarDecl 0x14200dda8 <col:35, col:48> col:48 invalid b 'int *'   `-CompoundStmt 0x142027d98 <line:2:1, line:17:1>     |-DeclStmt 0x14200e058 <line:3:3, col:11>     | |-VarDecl 0x14200df58 <col:3, col:7> col:7 used r 'int'     | `-VarDecl 0x14200dfd8 <col:3, col:10> col:10 used i 'int'     |-DeclStmt 0x14200e328 <line:4:3, col:39>     | `-VarDecl 0x14200e088 <col:3, col:38> col:7 used len_a 'int' cinit     |   `-ConditionalOperator 0x14200e2f8 <col:15, col:38> '<dependent type>' contains-errors     |     |-RecoveryExpr 0x14200e0f0 <col:15> '<dependent type>' contains-errors lvalue     |     |-CallExpr 0x14200e2b0 <col:19, col:34> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x14200e270 <col:19> 'int ()' Function 0x14200e1b8 'smartlist_len' 'int ()'     |     | `-RecoveryExpr 0x14200e290 <col:33> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x14200e2d8 <col:38> 'int' 0     |-DeclStmt 0x142027498 <line:5:3, col:39>     | `-VarDecl 0x14200e358 <col:3, col:38> col:7 used len_b 'int' cinit     |   `-ConditionalOperator 0x142027468 <col:15, col:38> '<dependent type>' contains-errors     |     |-RecoveryExpr 0x14200e3c0 <col:15> '<dependent type>' contains-errors lvalue     |     |-CallExpr 0x142027420 <col:19, col:34> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x14200e3e0 <col:19> 'int ()' Function 0x14200e1b8 'smartlist_len' 'int ()'     |     | `-RecoveryExpr 0x142027400 <col:33> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x142027448 <col:38> 'int' 0     |-ForStmt 0x142027a98 <line:7:3, line:10:3>     | |-BinaryOperator 0x1420274f0 <line:7:8, col:12> 'int' '='     | | |-DeclRefExpr 0x1420274b0 <col:8> 'int' lvalue Var 0x14200dfd8 'i' 'int'     | | `-IntegerLiteral 0x1420274d0 <col:12> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x142027630 <col:15, col:32> 'int' contains-errors '&&'     | | |-BinaryOperator 0x142027580 <col:15, col:19> 'int' contains-errors '<'     | | | |-ImplicitCastExpr 0x142027550 <col:15> 'int' <LValueToRValue>     | | | | `-DeclRefExpr 0x142027510 <col:15> 'int' lvalue Var 0x14200dfd8 'i' 'int'     | | | `-ImplicitCastExpr 0x142027568 <col:19> 'int' contains-errors <LValueToRValue>     | | |   `-DeclRefExpr 0x142027530 <col:19> 'int' contains-errors lvalue Var 0x14200e088 'len_a' 'int'     | | `-BinaryOperator 0x142027610 <col:28, col:32> 'int' contains-errors '<'     | |   |-ImplicitCastExpr 0x1420275e0 <col:28> 'int' <LValueToRValue>     | |   | `-DeclRefExpr 0x1420275a0 <col:28> 'int' lvalue Var 0x14200dfd8 'i' 'int'     | |   `-ImplicitCastExpr 0x1420275f8 <col:32> 'int' contains-errors <LValueToRValue>     | |     `-DeclRefExpr 0x1420275c0 <col:32> 'int' contains-errors lvalue Var 0x14200e358 'len_b' 'int'     | |-UnaryOperator 0x142027670 <col:39, col:41> 'int' prefix '++'     | | `-DeclRefExpr 0x142027650 <col:41> 'int' lvalue Var 0x14200dfd8 'i' 'int'     | `-CompoundStmt 0x142027a80 <col:44, line:10:3>     |   `-IfStmt 0x142027a60 <line:8:5, line:9:14>     |     |-ParenExpr 0x1420279f8 <line:8:9, col:78> 'int' contains-errors     |     | `-BinaryOperator 0x1420279d8 <col:10, col:77> 'int' contains-errors '='     |     |   |-DeclRefExpr 0x142027688 <col:10> 'int' lvalue Var 0x14200df58 'r' 'int'     |     |   `-CallExpr 0x1420279a8 <col:14, col:77> '<dependent type>' contains-errors     |     |     |-DeclRefExpr 0x142027788 <col:14> 'int ()' Function 0x1420276d0 'cmp_single_addr_policy' 'int ()'     |     |     |-CallExpr 0x1420278e8 <col:37, col:55> '<dependent type>' contains-errors     |     |     | |-DeclRefExpr 0x142027888 <col:37> 'int ()' Function 0x1420277d0 'smartlist_get' 'int ()'     |     |     | |-RecoveryExpr 0x1420278a8 <col:51> '<dependent type>' contains-errors lvalue     |     |     | `-DeclRefExpr 0x1420278c8 <col:54> 'int' lvalue Var 0x14200dfd8 'i' 'int'     |     |     `-CallExpr 0x142027978 <col:58, col:76> '<dependent type>' contains-errors     |     |       |-DeclRefExpr 0x142027918 <col:58> 'int ()' Function 0x1420277d0 'smartlist_get' 'int ()'     |     |       |-RecoveryExpr 0x142027938 <col:72> '<dependent type>' contains-errors lvalue     |     |       `-DeclRefExpr 0x142027958 <col:75> 'int' lvalue Var 0x14200dfd8 'i' 'int'     |     `-ReturnStmt 0x142027a50 <line:9:7, col:14>     |       `-ImplicitCastExpr 0x142027a38 <col:14> 'int' <LValueToRValue>     |         `-DeclRefExpr 0x142027a18 <col:14> 'int' lvalue Var 0x14200df58 'r' 'int'     |-IfStmt 0x142027c40 <line:11:3, line:12:12>     | |-BinaryOperator 0x142027bf0 <line:11:7, col:26> 'int' contains-errors '&&'     | | |-BinaryOperator 0x142027b40 <col:7, col:12> 'int' contains-errors '=='     | | | |-ImplicitCastExpr 0x142027b10 <col:7> 'int' <LValueToRValue>     | | | | `-DeclRefExpr 0x142027ad0 <col:7> 'int' lvalue Var 0x14200dfd8 'i' 'int'     | | | `-ImplicitCastExpr 0x142027b28 <col:12> 'int' contains-errors <LValueToRValue>     | | |   `-DeclRefExpr 0x142027af0 <col:12> 'int' contains-errors lvalue Var 0x14200e088 'len_a' 'int'     | | `-BinaryOperator 0x142027bd0 <col:21, col:26> 'int' contains-errors '=='     | |   |-ImplicitCastExpr 0x142027ba0 <col:21> 'int' <LValueToRValue>     | |   | `-DeclRefExpr 0x142027b60 <col:21> 'int' lvalue Var 0x14200dfd8 'i' 'int'     | |   `-ImplicitCastExpr 0x142027bb8 <col:26> 'int' contains-errors <LValueToRValue>     | |     `-DeclRefExpr 0x142027b80 <col:26> 'int' contains-errors lvalue Var 0x14200e358 'len_b' 'int'     | `-ReturnStmt 0x142027c30 <line:12:5, col:12>     |   `-IntegerLiteral 0x142027c10 <col:12> 'int' 0     `-IfStmt 0x142027d68 <line:13:3, line:16:12> has_else       |-BinaryOperator 0x142027cd0 <line:13:7, col:11> 'int' contains-errors '<'       | |-ImplicitCastExpr 0x142027ca0 <col:7> 'int' <LValueToRValue>       | | `-DeclRefExpr 0x142027c60 <col:7> 'int' lvalue Var 0x14200dfd8 'i' 'int'       | `-ImplicitCastExpr 0x142027cb8 <col:11> 'int' contains-errors <LValueToRValue>       |   `-DeclRefExpr 0x142027c80 <col:11> 'int' contains-errors lvalue Var 0x14200e088 'len_a' 'int'       |-ReturnStmt 0x142027d28 <line:14:5, col:13>       | `-UnaryOperator 0x142027d10 <col:12, col:13> 'int' prefix '-'       |   `-IntegerLiteral 0x142027cf0 <col:13> 'int' 1       `-ReturnStmt 0x142027d58 <line:16:5, col:12>         `-IntegerLiteral 0x142027d38 <col:12> 'int' 1 ","20434":"`-FunctionDecl 0x144107318  line:1:1 invalid read_one_cert 'int (int *, const char *, const char *)'   |-ParmVarDecl 0x144107128 <col:16, col:35> col:35 invalid info 'int *'   |-ParmVarDecl 0x1441071a8 <line:2:16, col:28> col:28 used setting_name 'const char *'   |-ParmVarDecl 0x144107228 <line:3:16, col:28> col:28 used key 'const char *'   `-CompoundStmt 0x144120b18 <line:4:1, line:13:1>     |-DeclStmt 0x144107490 <line:5:2, col:20>     | `-VarDecl 0x1441073f0 <col:2, col:16> col:8 used value 'char *' cinit     |   `-RecoveryExpr 0x144107470 <col:16> '<dependent type>' contains-errors lvalue     `-IfStmt 0x144120810 <line:7:2, line:8:3>       |-UnaryOperator 0x1441077e0 <line:7:6, col:85> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-CallExpr 0x144107798 <col:7, col:85> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x144107600 <col:7> 'int ()' Function 0x144107548 'nm_gconf_get_string_helper' 'int ()'       |   |-CXXDependentScopeMemberExpr 0x144107640 <col:35, col:41> '<dependent type>' contains-errors lvalue ->client       |   | `-RecoveryExpr 0x144107620 <col:35> '<dependent type>' contains-errors lvalue       |   |-CXXDependentScopeMemberExpr 0x1441076a8 <col:49, col:55> '<dependent type>' contains-errors lvalue ->dir       |   | `-RecoveryExpr 0x144107688 <col:49> '<dependent type>' contains-errors lvalue       |   |-DeclRefExpr 0x1441076f0 <col:60> 'const char *' lvalue ParmVar 0x144107228 'key' 'const char *'       |   |-DeclRefExpr 0x144107710 <col:65> 'const char *' lvalue ParmVar 0x1441071a8 'setting_name' 'const char *'       |   `-UnaryOperator 0x144107780 <col:79, col:80> 'char **' contains-errors prefix '&' cannot overflow       |     `-DeclRefExpr 0x144107730 <col:80> 'char *' contains-errors lvalue Var 0x1441073f0 'value' 'char *'       `-ReturnStmt 0x144120800 <line:8:3> ","20777":"`-FunctionDecl 0x13580dd98  line:1:12 install_thread_keyring 'int (void)' static   `-CompoundStmt 0x135827fa8 <line:2:1, line:19:1>     |-DeclStmt 0x13580e078 <line:3:2, col:18>     | |-RecordDecl 0x13580de88 <col:2, col:9> col:9 struct cred     | `-VarDecl 0x13580dff8 <col:2, col:15> col:15 used new 'struct cred *'     |-DeclStmt 0x13580e110 <line:4:2, col:9>     | `-VarDecl 0x13580e0a8 <col:2, col:6> col:6 used ret 'int'     |-BinaryOperator 0x135827730 <line:6:2, col:22> 'struct cred *' '='     | |-DeclRefExpr 0x13580e128 <col:2> 'struct cred *' lvalue Var 0x13580dff8 'new' 'struct cred *'     | `-ImplicitCastExpr 0x13580e2f8 <col:8, col:22> 'struct cred *' <IntegralToPointer>     |   `-CallExpr 0x13580e2d8 <col:8, col:22> 'int'     |     `-ImplicitCastExpr 0x13580e2c0 <col:8> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x13580e270 <col:8> 'int ()' Function 0x13580e1b8 'prepare_creds' 'int ()'     |-IfStmt 0x135827848 <line:7:2, line:8:11>     | |-UnaryOperator 0x135827788 <line:7:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x135827770 <col:7> 'struct cred *' <LValueToRValue>     | |   `-DeclRefExpr 0x135827750 <col:7> 'struct cred *' lvalue Var 0x13580dff8 'new' 'struct cred *'     | `-ReturnStmt 0x135827838 <line:8:3, col:11>     |   `-UnaryOperator 0x135827820 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x135827808 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x1358277e8 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1358279c8 <line:10:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x135827948 <col:2> 'int ()' Function 0x135827890 'BUG_ON' 'int ()'     | `-RecoveryExpr 0x1358279a0 <col:9, col:14> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x135827968 <col:9> 'struct cred *' lvalue Var 0x13580dff8 'new' 'struct cred *'     |-BinaryOperator 0x135827b88 <line:12:2, col:42> 'int' '='     | |-DeclRefExpr 0x1358279f0 <col:2> 'int' lvalue Var 0x13580e0a8 'ret' 'int'     | `-CallExpr 0x135827b48 <col:8, col:42> 'int'     |   |-ImplicitCastExpr 0x135827b30 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x135827af0 <col:8> 'int ()' Function 0x135827a38 'install_thread_keyring_to_cred' 'int ()'     |   `-ImplicitCastExpr 0x135827b70 <col:39> 'struct cred *' <LValueToRValue>     |     `-DeclRefExpr 0x135827b10 <col:39> 'struct cred *' lvalue Var 0x13580dff8 'new' 'struct cred *'     |-IfStmt 0x135827e00 <line:13:2, line:16:2>     | |-BinaryOperator 0x135827c00 <line:13:6, col:12> 'int' '<'     | | |-ImplicitCastExpr 0x135827be8 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x135827ba8 <col:6> 'int' lvalue Var 0x13580e0a8 'ret' 'int'     | | `-IntegerLiteral 0x135827bc8 <col:12> 'int' 0     | `-CompoundStmt 0x135827de0 <col:15, line:16:2>     |   |-CallExpr 0x135827d58 <line:14:3, col:18> 'int'     |   | |-ImplicitCastExpr 0x135827d40 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x135827d00 <col:3> 'int ()' Function 0x135827c48 'abort_creds' 'int ()'     |   | `-ImplicitCastExpr 0x135827d80 <col:15> 'struct cred *' <LValueToRValue>     |   |   `-DeclRefExpr 0x135827d20 <col:15> 'struct cred *' lvalue Var 0x13580dff8 'new' 'struct cred *'     |   `-ReturnStmt 0x135827dd0 <line:15:3, col:10>     |     `-ImplicitCastExpr 0x135827db8 <col:10> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x135827d98 <col:10> 'int' lvalue Var 0x13580e0a8 'ret' 'int'     `-ReturnStmt 0x135827f98 <line:18:2, col:25>       `-CallExpr 0x135827f58 <col:9, col:25> 'int'         |-ImplicitCastExpr 0x135827f40 <col:9> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x135827f00 <col:9> 'int ()' Function 0x135827e48 'commit_creds' 'int ()'         `-ImplicitCastExpr 0x135827f80 <col:22> 'struct cred *' <LValueToRValue>           `-DeclRefExpr 0x135827f20 <col:22> 'struct cred *' lvalue Var 0x13580dff8 'new' 'struct cred *' ","20654":"`-FunctionDecl 0x141113768  line:1:26 rd_alloc_device 'struct se_device *(struct se_hba *, const char *)' static   |-ParmVarDecl 0x1410fb2e8 <col:42, col:57> col:57 used hba 'struct se_hba *'   |-ParmVarDecl 0x1410fb368 <col:62, col:74> col:74 name 'const char *'   `-CompoundStmt 0x141114298 <line:2:1, line:15:1>     |-DeclStmt 0x141113a58 <line:3:2, col:23>     | |-RecordDecl 0x141113868 <col:2, col:9> col:9 struct rd_dev     | `-VarDecl 0x1411139d8 <col:2, col:17> col:17 used rd_dev 'struct rd_dev *'     |-DeclStmt 0x141113cb8 <line:4:2, col:40>     | |-RecordDecl 0x141113a70 <col:2, col:9> col:9 struct rd_host     | `-VarDecl 0x141113bd8 <col:2, col:33> col:18 used rd_host 'struct rd_host *' cinit     |   `-RecoveryExpr 0x141113c78 <col:28, col:33> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x141113c40 <col:28> 'struct se_hba *' lvalue ParmVar 0x1410fb2e8 'hba' 'struct se_hba *'     |-IfStmt 0x141114150 <line:7:2, line:10:2>     | |-UnaryOperator 0x141113ee0 <line:7:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x141113ec8 <col:7> 'struct rd_dev *' <LValueToRValue>     | |   `-DeclRefExpr 0x141113ea8 <col:7> 'struct rd_dev *' lvalue Var 0x1411139d8 'rd_dev' 'struct rd_dev *'     | `-CompoundStmt 0x141114130 <col:15, line:10:2>     |   |-CallExpr 0x1411140a8 <line:8:3, col:15> 'int'     |   | |-ImplicitCastExpr 0x141114090 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x141113fd8 <col:3> 'int ()' Function 0x141113f20 'pr_err' 'int ()'     |   | `-ImplicitCastExpr 0x1411140d0 <col:10> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x141114040 <col:10> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x141114120 <line:9:3, col:10>     |     `-RecoveryExpr 0x141114100 <col:10> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1411141f0 <line:12:2, col:20> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1411141a8 <col:2, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x141114170 <col:2> 'struct rd_dev *' lvalue Var 0x1411139d8 'rd_dev' 'struct rd_dev *'     | `-DeclRefExpr 0x1411141d0 <col:20> 'struct rd_host *' contains-errors lvalue Var 0x141113bd8 'rd_host' 'struct rd_host *'     `-ReturnStmt 0x141114288 <line:14:2, col:18>       `-UnaryOperator 0x141114270 <col:9, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x141114248 <col:10, col:18> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x141114210 <col:10> 'struct rd_dev *' lvalue Var 0x1411139d8 'rd_dev' 'struct rd_dev *' ","20406":"`-FunctionDecl 0x14f00ddf8  line:1:1 invalid mono_type_is_enum_type 'int (int *)'   |-ParmVarDecl 0x14f00dd28 <col:25, col:35> col:35 invalid type 'int *'   `-CompoundStmt 0x14f027448 <line:2:1, line:8:1>     |-IfStmt 0x14f00e108 <line:3:2, line:4:10>     | |-BinaryOperator 0x14f00e0a0 <line:3:6, col:61> 'int' contains-errors '&&'     | | |-BinaryOperator 0x14f00e080 <col:6, col:20> 'int' contains-errors '=='     | | | |-CXXDependentScopeMemberExpr 0x14f00dec8 <col:6, col:12> '<dependent type>' contains-errors lvalue ->type     | | | | `-RecoveryExpr 0x14f00dea8 <col:6> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x14f00e060 <col:20> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x14f00dff8 <col:43, col:61> '<dependent type>' contains-errors lvalue ->enumtype     | |   `-CXXDependentScopeMemberExpr 0x14f00dfb0 <col:43, col:54> '<dependent type>' contains-errors lvalue .klass     | |     `-CXXDependentScopeMemberExpr 0x14f00df68 <col:43, col:49> '<dependent type>' contains-errors lvalue ->data     | |       `-RecoveryExpr 0x14f00df48 <col:43> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14f00e0f8 <line:4:3, col:10>     |   `-RecoveryExpr 0x14f00e0d8 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14f00e3d0 <line:5:2, line:6:10>     | |-BinaryOperator 0x14f00e368 <line:5:6, col:88> 'int' contains-errors '&&'     | | |-BinaryOperator 0x14f00e348 <col:6, col:20> 'int' contains-errors '=='     | | | |-CXXDependentScopeMemberExpr 0x14f00e148 <col:6, col:12> '<dependent type>' contains-errors lvalue ->type     | | | | `-RecoveryExpr 0x14f00e128 <col:6> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x14f00e328 <col:20> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x14f00e2c0 <col:45, col:88> '<dependent type>' contains-errors lvalue ->enumtype     | |   `-CXXDependentScopeMemberExpr 0x14f00e278 <col:45, col:71> '<dependent type>' contains-errors lvalue ->container_class     | |     `-CXXDependentScopeMemberExpr 0x14f00e230 <col:45, col:56> '<dependent type>' contains-errors lvalue .generic_class     | |       `-CXXDependentScopeMemberExpr 0x14f00e1e8 <col:45, col:51> '<dependent type>' contains-errors lvalue ->data     | |         `-RecoveryExpr 0x14f00e1c8 <col:45> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14f00e3c0 <line:6:3, col:10>     |   `-RecoveryExpr 0x14f00e3a0 <col:10> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14f027438 <line:7:2, col:9>       `-RecoveryExpr 0x14f027418 <col:9> '<dependent type>' contains-errors lvalue ","20481":"`-FunctionDecl 0x131027228  line:1:19 ip6_ufo_append_data 'int (struct sock *, int (*)(void *, char *, int, int, int, struct sk_buff *), void *, int, int, int, int, int, unsigned int, struct rt6_info *)' static inline   |-ParmVarDecl 0x13100e248 <col:39, col:52> col:52 used sk 'struct sock *'   |-ParmVarDecl 0x131026af0 <line:2:4, line:3:32> line:2:8 used getfrag 'int (*)(void *, char *, int, int, int, struct sk_buff *)'   |-ParmVarDecl 0x131026b70 <line:4:4, col:10> col:10 used from 'void *'   |-ParmVarDecl 0x131026bf0 <col:16, col:20> col:20 used length 'int'   |-ParmVarDecl 0x131026c70 <col:28, col:32> col:32 used hh_len 'int'   |-ParmVarDecl 0x131026cf0 <col:40, col:44> col:44 used fragheaderlen 'int'   |-ParmVarDecl 0x131026d70 <line:5:4, col:8> col:8 used transhdrlen 'int'   |-ParmVarDecl 0x131026df0 <col:21, col:25> col:25 used mtu 'int'   |-ParmVarDecl 0x131026e70 <col:29, col:42> col:42 used flags 'unsigned int'   |-ParmVarDecl 0x131027048 <line:6:4, col:21> col:21 used rt 'struct rt6_info *'   `-CompoundStmt 0x1320096c0 <line:8:1, line:49:1>     |-DeclStmt 0x131027558 <line:9:2, col:21>     | |-RecordDecl 0x131027368 <col:2, col:9> col:9 struct sk_buff     | `-VarDecl 0x1310274d8 <col:2, col:18> col:18 used skb 'struct sk_buff *'     |-DeclStmt 0x131027600 <line:10:2, col:9>     | `-VarDecl 0x131027588 <col:2, col:6> col:6 used err 'int'     |-IfStmt 0x1320093a0 <line:13:2, line:45:2>     | |-BinaryOperator 0x1310278b8 <line:13:6, col:52> 'int' contains-errors '=='     | | |-ParenExpr 0x131027840 <col:6, col:47> 'struct sk_buff *' contains-errors     | | | `-BinaryOperator 0x131027820 <col:7, col:46> 'struct sk_buff *' contains-errors '='     | | |   |-DeclRefExpr 0x131027618 <col:7> 'struct sk_buff *' lvalue Var 0x1310274d8 'skb' 'struct sk_buff *'     | | |   `-CallExpr 0x1310277f8 <col:13, col:46> '<dependent type>' contains-errors     | | |     |-DeclRefExpr 0x131027760 <col:13> 'int ()' Function 0x1310276a8 'skb_peek_tail' 'int ()'     | | |     `-UnaryOperator 0x1310277e0 <col:27, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |       `-RecoveryExpr 0x1310277b8 <col:28, col:32> '<dependent type>' contains-errors lvalue     | | |         `-DeclRefExpr 0x131027780 <col:28> 'struct sock *' lvalue ParmVar 0x13100e248 'sk' 'struct sock *'     | | `-RecoveryExpr 0x131027898 <col:52> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x132009330 <col:58, line:45:2>     |   |-DeclStmt 0x131027a58 <line:14:3, col:23>     |   | |-RecordDecl 0x1310278d8 <col:3, col:10> col:10 struct frag_hdr     |   | `-VarDecl 0x1310279d8 <col:3, col:19> col:19 invalid fhdr 'struct frag_hdr'     |   |-IfStmt 0x131027e78 <line:19:3, line:20:11>     |   | |-BinaryOperator 0x131027e10 <line:19:7, col:14> 'int' contains-errors '=='     |   | | |-DeclRefExpr 0x131027d98 <col:7> 'struct sk_buff *' lvalue Var 0x1310274d8 'skb' 'struct sk_buff *'     |   | | `-RecoveryExpr 0x131027df0 <col:14> '<dependent type>' contains-errors lvalue     |   | `-ReturnStmt 0x131027e68 <line:20:4, col:11>     |   |   `-ImplicitCastExpr 0x131027e50 <col:11> 'int' <LValueToRValue>     |   |     `-DeclRefExpr 0x131027e30 <col:11> 'int' lvalue Var 0x131027588 'err' 'int'     |   |-CallExpr 0x131028028 <line:23:3, col:26> 'int'     |   | |-ImplicitCastExpr 0x131028010 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x131027f78 <col:3> 'int ()' Function 0x131027ec0 'skb_reserve' 'int ()'     |   | |-ImplicitCastExpr 0x131028058 <col:15> 'struct sk_buff *' <LValueToRValue>     |   | | `-DeclRefExpr 0x131027f98 <col:15> 'struct sk_buff *' lvalue Var 0x1310274d8 'skb' 'struct sk_buff *'     |   | `-ImplicitCastExpr 0x131028070 <col:20> 'int' <LValueToRValue>     |   |   `-DeclRefExpr 0x131027fb8 <col:20> 'int' lvalue ParmVar 0x131026c70 'hh_len' 'int'     |   |-CallExpr 0x131028250 <line:26:3, col:42> 'int'     |   | |-ImplicitCastExpr 0x131028238 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x131028168 <col:3> 'int ()' Function 0x1310280b0 'skb_put' 'int ()'     |   | |-ImplicitCastExpr 0x131028280 <col:11> 'struct sk_buff *' <LValueToRValue>     |   | | `-DeclRefExpr 0x131028188 <col:11> 'struct sk_buff *' lvalue Var 0x1310274d8 'skb' 'struct sk_buff *'     |   | `-BinaryOperator 0x131028218 <col:15, col:31> 'int' '+'     |   |   |-ImplicitCastExpr 0x1310281e8 <col:15> 'int' <LValueToRValue>     |   |   | `-DeclRefExpr 0x1310281a8 <col:15> 'int' lvalue ParmVar 0x131026cf0 'fragheaderlen' 'int'     |   |   `-ImplicitCastExpr 0x131028200 <col:31> 'int' <LValueToRValue>     |   |     `-DeclRefExpr 0x1310281c8 <col:31> 'int' lvalue ParmVar 0x131026d70 'transhdrlen' 'int'     |   |-CallExpr 0x1310283d0 <line:29:3, col:31> 'int'     |   | |-ImplicitCastExpr 0x1310283b8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x131028378 <col:3> 'int ()' Function 0x1310282c0 'skb_reset_network_header' 'int ()'     |   | `-ImplicitCastExpr 0x1310283f8 <col:28> 'struct sk_buff *' <LValueToRValue>     |   |   `-DeclRefExpr 0x131028398 <col:28> 'struct sk_buff *' lvalue Var 0x1310274d8 'skb' 'struct sk_buff *'     |   |-BinaryOperator 0x131028510 <line:32:3, col:49> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x131028448 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x131028410 <col:3> 'struct sk_buff *' lvalue Var 0x1310274d8 'skb' 'struct sk_buff *'     |   | `-BinaryOperator 0x1310284f0 <col:27, col:49> '<dependent type>' contains-errors '+'     |   |   |-RecoveryExpr 0x1310284a8 <col:27, col:32> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x131028470 <col:27> 'struct sk_buff *' lvalue Var 0x1310274d8 'skb' 'struct sk_buff *'     |   |   `-DeclRefExpr 0x1310284d0 <col:49> 'int' lvalue ParmVar 0x131026cf0 'fragheaderlen' 'int'     |   |-BinaryOperator 0x132008980 <line:34:3, col:35> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x131028568 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x131028530 <col:3> 'struct sk_buff *' lvalue Var 0x1310274d8 'skb' 'struct sk_buff *'     |   | `-CallExpr 0x132008958 <col:19, col:35> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x1320088b8 <col:19> 'int ()' Function 0x132008800 'htons' 'int ()'     |   |   `-RecoveryExpr 0x132008938 <col:25> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x132008a58 <line:35:3, col:20> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x1320089d8 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x1320089a0 <col:3> 'struct sk_buff *' lvalue Var 0x1310274d8 'skb' 'struct sk_buff *'     |   | `-RecoveryExpr 0x132008a38 <col:20> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x132008af8 <line:36:3, col:15> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x132008ab0 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x132008a78 <col:3> 'struct sk_buff *' lvalue Var 0x1310274d8 'skb' 'struct sk_buff *'     |   | `-IntegerLiteral 0x132008ad8 <col:15> 'int' 0     |   |-CallExpr 0x132008ff0 <line:42:3, col:30> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x132008f78 <col:3> 'int ()' Function 0x132008ec0 'ipv6_select_ident' 'int ()'     |   | |-UnaryOperator 0x132008fb8 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-RecoveryExpr 0x132008f98 <col:22> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x132008fd0 <col:28> 'struct rt6_info *' lvalue ParmVar 0x131027048 'rt' 'struct rt6_info *'     |   |-BinaryOperator 0x132009148 <line:43:3, col:39> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x1320090b8 <col:3, col:20> '<dependent type>' contains-errors lvalue     |   | | `-CallExpr 0x132009078 <col:3, col:17> 'int'     |   | |   |-ImplicitCastExpr 0x132009060 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | |   | `-DeclRefExpr 0x132009020 <col:3> 'int ()' Function 0x132008b40 'skb_shinfo' 'int ()'     |   | |   `-ImplicitCastExpr 0x1320090a0 <col:14> 'struct sk_buff *' <LValueToRValue>     |   | |     `-DeclRefExpr 0x132009040 <col:14> 'struct sk_buff *' lvalue Var 0x1310274d8 'skb' 'struct sk_buff *'     |   | `-CXXDependentScopeMemberExpr 0x132009100 <col:34, col:39> '<dependent type>' contains-errors lvalue .identification     |   |   `-RecoveryExpr 0x1320090e0 <col:34> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x132009300 <line:44:3, col:44> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x132009248 <col:3> 'int ()' Function 0x132009190 '__skb_queue_tail' 'int ()'     |     |-UnaryOperator 0x1320092c8 <col:20, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | `-RecoveryExpr 0x1320092a0 <col:21, col:25> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x132009268 <col:21> 'struct sock *' lvalue ParmVar 0x13100e248 'sk' 'struct sock *'     |     `-DeclRefExpr 0x1320092e0 <col:41> 'struct sk_buff *' lvalue Var 0x1310274d8 'skb' 'struct sk_buff *'     `-ReturnStmt 0x1320096b0 <line:47:2, line:48:34>       `-CallExpr 0x132009608 <line:47:9, line:48:34> 'int'         |-ImplicitCastExpr 0x1320095f0 <line:47:9> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x1320094a0 <col:9> 'int ()' Function 0x1320093e8 'skb_append_datato_frags' 'int ()'         |-ImplicitCastExpr 0x132009650 <col:33> 'struct sock *' <LValueToRValue>         | `-DeclRefExpr 0x1320094c0 <col:33> 'struct sock *' lvalue ParmVar 0x13100e248 'sk' 'struct sock *'         |-ImplicitCastExpr 0x132009668 <col:37> 'struct sk_buff *' <LValueToRValue>         | `-DeclRefExpr 0x1320094e0 <col:37> 'struct sk_buff *' lvalue Var 0x1310274d8 'skb' 'struct sk_buff *'         |-ImplicitCastExpr 0x132009680 <col:42> 'int (*)(void *, char *, int, int, int, struct sk_buff *)' <LValueToRValue>         | `-DeclRefExpr 0x132009500 <col:42> 'int (*)(void *, char *, int, int, int, struct sk_buff *)' lvalue ParmVar 0x131026af0 'getfrag' 'int (*)(void *, char *, int, int, int, struct sk_buff *)'         |-ImplicitCastExpr 0x132009698 <col:51> 'void *' <LValueToRValue>         | `-DeclRefExpr 0x132009520 <col:51> 'void *' lvalue ParmVar 0x131026b70 'from' 'void *'         `-ParenExpr 0x1320095d0 <line:48:12, col:33> 'int'           `-BinaryOperator 0x1320095b0 <col:13, col:22> 'int' '-'             |-ImplicitCastExpr 0x132009580 <col:13> 'int' <LValueToRValue>             | `-DeclRefExpr 0x132009540 <col:13> 'int' lvalue ParmVar 0x131026bf0 'length' 'int'             `-ImplicitCastExpr 0x132009598 <col:22> 'int' <LValueToRValue>               `-DeclRefExpr 0x132009560 <col:22> 'int' lvalue ParmVar 0x131026d70 'transhdrlen' 'int' ","21071":"`-FunctionDecl 0x148928288  line:1:12 invalid get_refcount 'int (int *, int)' static   |-ParmVarDecl 0x148928128 <col:25, col:43> col:43 invalid bs 'int *'   |-ParmVarDecl 0x1489281a8 <col:47, col:55> col:55 invalid cluster_index 'int'   `-CompoundStmt 0x148942ba0 <line:2:1, line:35:1>     |-DeclStmt 0x1489284d8 <line:4:5, col:42>     | |-VarDecl 0x1489283d8 <col:5, col:9> col:9 used refcount_table_index 'int'     | `-VarDecl 0x148928458 <col:5, col:31> col:31 used block_index 'int'     |-DeclStmt 0x148928570 <line:6:5, col:12>     | `-VarDecl 0x148928508 <col:5, col:9> col:9 used ret 'int'     |-IfStmt 0x1489287d0 <line:11:5, line:12:16>     | |-BinaryOperator 0x148928780 <line:11:9, col:36> 'int' contains-errors '>='     | | |-DeclRefExpr 0x148928678 <col:9> 'int' lvalue Var 0x1489283d8 'refcount_table_index' 'int'     | | `-CXXDependentScopeMemberExpr 0x148928738 <col:33, col:36> '<dependent type>' contains-errors lvalue ->refcount_table_size     | |   `-RecoveryExpr 0x148928718 <col:33> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1489287c0 <line:12:9, col:16>     |   `-IntegerLiteral 0x1489287a0 <col:16> 'int' 0     |-IfStmt 0x148942360 <line:15:5, line:16:16>     | |-UnaryOperator 0x148942318 <line:15:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x148942300 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x1489422e0 <col:10> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x148942350 <line:16:9, col:16>     |   `-IntegerLiteral 0x148942330 <col:16> 'int' 0     |-IfStmt 0x148942710 <line:20:5, line:22:5>     | |-BinaryOperator 0x148942690 <line:20:9, col:15> 'int' '<'     | | |-ImplicitCastExpr 0x148942678 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x148942638 <col:9> 'int' lvalue Var 0x148928508 'ret' 'int'     | | `-IntegerLiteral 0x148942658 <col:15> 'int' 0     | `-CompoundStmt 0x1489426f8 <col:18, line:22:5>     |   `-ReturnStmt 0x1489426e8 <line:21:9, col:16>     |     `-ImplicitCastExpr 0x1489426d0 <col:16> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x1489426b0 <col:16> 'int' lvalue Var 0x148928508 'ret' 'int'     `-IfStmt 0x148942b80 <line:30:5, line:32:5>       |-BinaryOperator 0x148942b00 <line:30:9, col:15> 'int' '<'       | |-ImplicitCastExpr 0x148942ae8 <col:9> 'int' <LValueToRValue>       | | `-DeclRefExpr 0x148942aa8 <col:9> 'int' lvalue Var 0x148928508 'ret' 'int'       | `-IntegerLiteral 0x148942ac8 <col:15> 'int' 0       `-CompoundStmt 0x148942b68 <col:18, line:32:5>         `-ReturnStmt 0x148942b58 <line:31:9, col:16>           `-ImplicitCastExpr 0x148942b40 <col:16> 'int' <LValueToRValue>             `-DeclRefExpr 0x148942b20 <col:16> 'int' lvalue Var 0x148928508 'ret' 'int' ","20564":"`-FunctionDecl 0x135128290  line:1:6 invalid LongestPathsLowerBounds 'void (int, const int)'   |-ParmVarDecl 0x1351280d8 <line:2:5, col:9> col:9 used source 'int'   |-ParmVarDecl 0x135128170 <col:17, <invalid sloc>> col:26 invalid 'const int'   `-CompoundStmt 0x135141ae0 <line:4:56, line:24:1>     |-RecoveryExpr 0x135128378 <line:5:3> '<dependent type>' contains-errors lvalue     `-WhileStmt 0x135141ac0 <line:7:3, line:23:3>       |-UnaryOperator 0x1351284d8 <line:7:10, col:23> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-CallExpr 0x1351284b8 <col:11, col:23> '<dependent type>' contains-errors       |   `-CXXDependentScopeMemberExpr 0x135128470 <col:11, col:17> '<dependent type>' contains-errors lvalue .empty       |     `-RecoveryExpr 0x135128450 <col:11> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x135141aa8 <col:26, line:23:3>         `-DeclStmt 0x135128678 <line:8:5, col:29>           `-VarDecl 0x135128508 <col:5, col:28> col:9 node 'int' cinit             `-CallExpr 0x135128658 <col:16, col:28> '<dependent type>' contains-errors               `-CXXDependentScopeMemberExpr 0x135128610 <col:16, col:22> '<dependent type>' contains-errors lvalue .front                 `-RecoveryExpr 0x1351285f0 <col:16> '<dependent type>' contains-errors lvalue ","20236":"`-FunctionDecl 0x14a140a70  line:1:6 dev_unicast_unsync 'void (struct net_device *, struct net_device *)'   |-ParmVarDecl 0x14a128648 <col:25, col:44> col:44 used to 'struct net_device *'   |-ParmVarDecl 0x14a128738 <col:48, col:67> col:67 used from 'struct net_device *'   `-CompoundStmt 0x14a1416e0 <line:2:1, line:12:1>     |-IfStmt 0x14a140c60 <line:3:2, line:4:3>     | |-BinaryOperator 0x14a140c30 <line:3:6, col:28> 'int' contains-errors '!='     | | |-RecoveryExpr 0x14a140ba8 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x14a140b70 <col:6> 'struct net_device *' lvalue ParmVar 0x14a128648 'to' 'struct net_device *'     | | `-RecoveryExpr 0x14a140c08 <col:22, col:28> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14a140bd0 <col:22> 'struct net_device *' lvalue ParmVar 0x14a128738 'from' 'struct net_device *'     | `-ReturnStmt 0x14a140c50 <line:4:3>     |-CallExpr 0x14a140e38 <line:6:2, col:25> 'int'     | |-ImplicitCastExpr 0x14a140e20 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14a140db0 <col:2> 'int ()' Function 0x14a140cf8 'netif_addr_lock_bh' 'int ()'     | `-ImplicitCastExpr 0x14a140e60 <col:21> 'struct net_device *' <LValueToRValue>     |   `-DeclRefExpr 0x14a140dd0 <col:21> 'struct net_device *' lvalue ParmVar 0x14a128738 'from' 'struct net_device *'     |-CallExpr 0x14a140fb0 <line:7:2, col:20> 'int'     | |-ImplicitCastExpr 0x14a140f98 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14a140f58 <col:2> 'int ()' Function 0x14a140ea0 'netif_addr_lock' 'int ()'     | `-ImplicitCastExpr 0x14a140fd8 <col:18> 'struct net_device *' <LValueToRValue>     |   `-DeclRefExpr 0x14a140f78 <col:18> 'struct net_device *' lvalue ParmVar 0x14a128648 'to' 'struct net_device *'     |-CallExpr 0x14a141240 <line:8:2, col:51> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a1410d0 <col:2> 'int ()' Function 0x14a141018 '__hw_addr_unsync' 'int ()'     | |-UnaryOperator 0x14a141150 <col:19, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x14a141128 <col:20, col:24> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14a1410f0 <col:20> 'struct net_device *' lvalue ParmVar 0x14a128648 'to' 'struct net_device *'     | |-UnaryOperator 0x14a1411c8 <col:28, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x14a1411a0 <col:29, col:35> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14a141168 <col:29> 'struct net_device *' lvalue ParmVar 0x14a128738 'from' 'struct net_device *'     | `-RecoveryExpr 0x14a141218 <col:39, col:43> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14a1411e0 <col:39> 'struct net_device *' lvalue ParmVar 0x14a128648 'to' 'struct net_device *'     |-CallExpr 0x14a1413b0 <line:9:2, col:22> 'int'     | |-ImplicitCastExpr 0x14a141398 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14a141358 <col:2> 'int ()' Function 0x14a1412a0 '__dev_set_rx_mode' 'int ()'     | `-ImplicitCastExpr 0x14a1413d8 <col:20> 'struct net_device *' <LValueToRValue>     |   `-DeclRefExpr 0x14a141378 <col:20> 'struct net_device *' lvalue ParmVar 0x14a128648 'to' 'struct net_device *'     |-CallExpr 0x14a141528 <line:10:2, col:22> 'int'     | |-ImplicitCastExpr 0x14a141510 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14a1414d0 <col:2> 'int ()' Function 0x14a141418 'netif_addr_unlock' 'int ()'     | `-ImplicitCastExpr 0x14a141550 <col:20> 'struct net_device *' <LValueToRValue>     |   `-DeclRefExpr 0x14a1414f0 <col:20> 'struct net_device *' lvalue ParmVar 0x14a128648 'to' 'struct net_device *'     `-CallExpr 0x14a1416a0 <line:11:2, col:27> 'int'       |-ImplicitCastExpr 0x14a141688 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x14a141648 <col:2> 'int ()' Function 0x14a141590 'netif_addr_unlock_bh' 'int ()'       `-ImplicitCastExpr 0x14a1416c8 <col:23> 'struct net_device *' <LValueToRValue>         `-DeclRefExpr 0x14a141668 <col:23> 'struct net_device *' lvalue ParmVar 0x14a128738 'from' 'struct net_device *' ","20474":"`-FunctionDecl 0x12c00df18  line:1:5 invalid SSL_set_ex_data 'int (int *, int, void *)'   |-ParmVarDecl 0x12c00dd28 <col:21, col:26> col:26 invalid s 'int *'   |-ParmVarDecl 0x12c00dda8 <col:28, col:32> col:32 used idx 'int'   |-ParmVarDecl 0x12c00de28 <col:36, col:42> col:42 used arg 'void *'   `-CompoundStmt 0x12c00e278 <line:2:2, line:4:2>     `-ReturnStmt 0x12c00e268 <line:3:2, col:48>       `-ParenExpr 0x12c00e248 <col:8, col:48> '<dependent type>' contains-errors         `-CallExpr 0x12c00e210 <col:9, col:47> '<dependent type>' contains-errors           |-DeclRefExpr 0x12c00e130 <col:9> 'int ()' Function 0x12c00e078 'CRYPTO_set_ex_data' 'int ()'           |-UnaryOperator 0x12c00e1b8 <col:28, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow           | `-CXXDependentScopeMemberExpr 0x12c00e170 <col:29, col:32> '<dependent type>' contains-errors lvalue ->ex_data           |   `-RecoveryExpr 0x12c00e150 <col:29> '<dependent type>' contains-errors lvalue           |-DeclRefExpr 0x12c00e1d0 <col:40> 'int' lvalue ParmVar 0x12c00dda8 'idx' 'int'           `-DeclRefExpr 0x12c00e1f0 <col:44> 'void *' lvalue ParmVar 0x12c00de28 'arg' 'void *' ","20574":"`-FunctionDecl 0x131942128  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x131942228 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x131942290 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x1319422f8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1319421d0 <<invalid sloc>> Implicit 882 ","20409":"`-FunctionDecl 0x142140c98  line:1:22 proc_pid_make_inode 'struct inode *(struct super_block *, struct task_struct *)' static   |-ParmVarDecl 0x1421286e8 <col:42, col:63> col:63 used sb 'struct super_block *'   |-ParmVarDecl 0x142140ac8 <col:67, col:87> col:87 used task 'struct task_struct *'   `-CompoundStmt 0x143008c00 <line:2:1, line:38:1>     |-DeclStmt 0x142140e90 <line:3:2, col:22>     | `-VarDecl 0x142140e28 <col:2, col:17> col:17 used inode 'struct inode *'     |-DeclStmt 0x142141098 <line:4:2, col:23>     | |-RecordDecl 0x142140ea8 <col:2, col:9> col:9 struct proc_inode     | `-VarDecl 0x142141018 <col:2, col:21> col:21 used ei 'struct proc_inode *'     |-DeclStmt 0x142141298 <line:5:2, col:25>     | |-RecordDecl 0x1421410b0 <col:8, col:15> col:15 struct cred     | `-VarDecl 0x142141218 <col:2, col:21> col:21 used cred 'const struct cred *'     |-BinaryOperator 0x1421414e0 <line:9:2, col:22> 'struct inode *' '='     | |-DeclRefExpr 0x1421412b0 <col:2> 'struct inode *' lvalue Var 0x142140e28 'inode' 'struct inode *'     | `-ImplicitCastExpr 0x1421414c8 <col:10, col:22> 'struct inode *' <IntegralToPointer>     |   `-CallExpr 0x142141488 <col:10, col:22> 'int'     |     |-ImplicitCastExpr 0x142141470 <col:10> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x142141400 <col:10> 'int ()' Function 0x142141348 'new_inode' 'int ()'     |     `-ImplicitCastExpr 0x1421414b0 <col:20> 'struct super_block *' <LValueToRValue>     |       `-DeclRefExpr 0x142141420 <col:20> 'struct super_block *' lvalue ParmVar 0x1421286e8 'sb' 'struct super_block *'     |-IfStmt 0x1421415b8 <line:10:2, line:11:8>     | |-UnaryOperator 0x142141538 <line:10:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x142141520 <col:7> 'struct inode *' <LValueToRValue>     | |   `-DeclRefExpr 0x142141500 <col:7> 'struct inode *' lvalue Var 0x142140e28 'inode' 'struct inode *'     | `-GotoStmt 0x1421415a0 <line:11:3, col:8> 'out' 0x142141550     |-BinaryOperator 0x142141788 <line:14:2, col:19> 'struct proc_inode *' '='     | |-DeclRefExpr 0x1421415d8 <col:2> 'struct proc_inode *' lvalue Var 0x142141018 'ei' 'struct proc_inode *'     | `-ImplicitCastExpr 0x142141770 <col:7, col:19> 'struct proc_inode *' <IntegralToPointer>     |   `-CallExpr 0x142141730 <col:7, col:19> 'int'     |     |-ImplicitCastExpr 0x142141718 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1421416d8 <col:7> 'int ()' Function 0x142141620 'PROC_I' 'int ()'     |     `-ImplicitCastExpr 0x142141758 <col:14> 'struct inode *' <LValueToRValue>     |       `-DeclRefExpr 0x1421416f8 <col:14> 'struct inode *' lvalue Var 0x142140e28 'inode' 'struct inode *'     |-BinaryOperator 0x1421419a0 <line:15:2, col:53> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1421417e0 <col:2, col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1421417a8 <col:2> 'struct inode *' lvalue Var 0x142140e28 'inode' 'struct inode *'     | `-BinaryOperator 0x142141980 <col:19, col:53> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x142141840 <col:19, col:26> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x142141808 <col:19> 'struct inode *' lvalue Var 0x142140e28 'inode' 'struct inode *'     |   `-BinaryOperator 0x142141960 <col:36, col:53> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x1421418a0 <col:36, col:43> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x142141868 <col:36> 'struct inode *' lvalue Var 0x142140e28 'inode' 'struct inode *'     |     `-RecoveryExpr 0x142141940 <col:53> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x142146ab0 <line:16:2, col:17> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x142146a00 <col:2, col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1421419c0 <col:2> 'struct inode *' lvalue Var 0x142140e28 'inode' 'struct inode *'     | `-UnaryOperator 0x142146a98 <col:16, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x142146a78 <col:17> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x142146d08 <line:19:2, col:42> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x142146b08 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x142146ad0 <col:2> 'struct proc_inode *' lvalue Var 0x142141018 'ei' 'struct proc_inode *'     | `-CallExpr 0x142146cd8 <col:12, col:42> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x142146c10 <col:12> 'int ()' Function 0x142146b58 'get_task_pid' 'int ()'     |   |-DeclRefExpr 0x142146c30 <col:25> 'struct task_struct *' lvalue ParmVar 0x142140ac8 'task' 'struct task_struct *'     |   `-RecoveryExpr 0x142146cb8 <col:31> '<dependent type>' contains-errors lvalue     |-IfStmt 0x142146e20 <line:20:2, line:21:8>     | |-UnaryOperator 0x142146da0 <line:20:6, col:11> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x142146d88 <col:7, col:11> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x142146d60 <col:7, col:11> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x142146d28 <col:7> 'struct proc_inode *' lvalue Var 0x142141018 'ei' 'struct proc_inode *'     | `-GotoStmt 0x142146e08 <line:21:3, col:8> 'out_unlock' 0x142146db8     |-IfStmt 0x1421475f0 <line:23:2, line:29:2>     | |-CallExpr 0x142146f78 <line:23:6, col:24> 'int'     | | |-ImplicitCastExpr 0x142146f60 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x142146f20 <col:6> 'int ()' Function 0x142146e68 'task_dumpable' 'int ()'     | | `-ImplicitCastExpr 0x142146fa0 <col:20> 'struct task_struct *' <LValueToRValue>     | |   `-DeclRefExpr 0x142146f40 <col:20> 'struct task_struct *' lvalue ParmVar 0x142140ac8 'task' 'struct task_struct *'     | `-CompoundStmt 0x1421475b8 <col:27, line:29:2>     |   |-CallExpr 0x1421470d0 <line:24:3, col:17> 'int'     |   | `-ImplicitCastExpr 0x1421470b8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x142147098 <col:3> 'int ()' Function 0x142146fe0 'rcu_read_lock' 'int ()'     |   |-BinaryOperator 0x1421472a0 <line:25:3, col:26> 'const struct cred *' '='     |   | |-DeclRefExpr 0x1421470f0 <col:3> 'const struct cred *' lvalue Var 0x142141218 'cred' 'const struct cred *'     |   | `-ImplicitCastExpr 0x142147288 <col:10, col:26> 'const struct cred *' <IntegralToPointer>     |   |   `-CallExpr 0x142147248 <col:10, col:26> 'int'     |   |     |-ImplicitCastExpr 0x142147230 <col:10> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x1421471f0 <col:10> 'int ()' Function 0x142147138 '__task_cred' 'int ()'     |   |     `-ImplicitCastExpr 0x142147270 <col:22> 'struct task_struct *' <LValueToRValue>     |   |       `-DeclRefExpr 0x142147210 <col:22> 'struct task_struct *' lvalue ParmVar 0x142140ac8 'task' 'struct task_struct *'     |   |-BinaryOperator 0x142147380 <line:26:3, col:24> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x1421472f8 <col:3, col:10> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x1421472c0 <col:3> 'struct inode *' lvalue Var 0x142140e28 'inode' 'struct inode *'     |   | `-RecoveryExpr 0x142147358 <col:18, col:24> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x142147320 <col:18> 'const struct cred *' lvalue Var 0x142141218 'cred' 'const struct cred *'     |   |-BinaryOperator 0x142147460 <line:27:3, col:24> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x1421473d8 <col:3, col:10> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x1421473a0 <col:3> 'struct inode *' lvalue Var 0x142140e28 'inode' 'struct inode *'     |   | `-RecoveryExpr 0x142147438 <col:18, col:24> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x142147400 <col:18> 'const struct cred *' lvalue Var 0x142141218 'cred' 'const struct cred *'     |   `-CallExpr 0x142147598 <line:28:3, col:19> 'int'     |     `-ImplicitCastExpr 0x142147580 <col:3> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x142147560 <col:3> 'int ()' Function 0x1421474a8 'rcu_read_unlock' 'int ()'     |-CallExpr 0x142147768 <line:30:2, col:36> 'int'     | |-ImplicitCastExpr 0x142147750 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1421476f0 <col:2> 'int ()' Function 0x142147638 'security_task_to_inode' 'int ()'     | |-ImplicitCastExpr 0x142147798 <col:25> 'struct task_struct *' <LValueToRValue>     | | `-DeclRefExpr 0x142147710 <col:25> 'struct task_struct *' lvalue ParmVar 0x142140ac8 'task' 'struct task_struct *'     | `-ImplicitCastExpr 0x1421477b0 <col:31> 'struct inode *' <LValueToRValue>     |   `-DeclRefExpr 0x142147730 <col:31> 'struct inode *' lvalue Var 0x142140e28 'inode' 'struct inode *'     |-LabelStmt 0x142147810 <line:32:1, line:33:9> 'out'     | `-ReturnStmt 0x142147800 <col:2, col:9>     |   `-ImplicitCastExpr 0x1421477e8 <col:9> 'struct inode *' <LValueToRValue>     |     `-DeclRefExpr 0x1421477c8 <col:9> 'struct inode *' lvalue Var 0x142140e28 'inode' 'struct inode *'     `-LabelStmt 0x1421479a8 <line:35:1, line:36:12> 'out_unlock'       `-CallExpr 0x142147968 <col:2, col:12> 'int'         |-ImplicitCastExpr 0x142147950 <col:2> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x142147910 <col:2> 'int ()' Function 0x142147858 'iput' 'int ()'         `-ImplicitCastExpr 0x142147990 <col:7> 'struct inode *' <LValueToRValue>           `-DeclRefExpr 0x142147930 <col:7> 'struct inode *' lvalue Var 0x142140e28 'inode' 'struct inode *' ","20698":"`-FunctionDecl 0x12682b488  col:17 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x12682b588 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x12682b5f0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x12682b658 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x12682b530 <<invalid sloc>> Implicit 882 ","20448":"`-FunctionDecl 0x133928258  line:1:1 invalid date_s__httpdate 'int (int, int)'   |-ParmVarDecl 0x1339280f0 <col:18, col:24> col:24 invalid klass 'int'   |-ParmVarDecl 0x133928170 <col:31, col:37> col:37 invalid str 'int'   `-CompoundStmt 0x1339284e8 <line:2:1, line:4:1>     `-ReturnStmt 0x1339284d8 <line:3:5, col:30>       `-CallExpr 0x1339284b0 <col:12, col:30> '<dependent type>' contains-errors         |-DeclRefExpr 0x133928470 <col:12> 'int ()' Function 0x1339283b8 'date__httpdate' 'int ()'         `-RecoveryExpr 0x133928490 <col:27> '<dependent type>' contains-errors lvalue ","20842":"`-FunctionDecl 0x13e00dfa8  line:1:1 invalid gimp_write_and_read_file 'int (int *, int, int, int)'   |-ParmVarDecl 0x13e00dd28 <col:27, col:37> col:37 invalid gimp 'int *'   |-ParmVarDecl 0x13e00dda8 <line:2:27, col:37> col:37 invalid with_unusual_stuff 'int'   |-ParmVarDecl 0x13e00de28 <line:3:27, col:37> col:37 invalid compat_paths 'int'   |-ParmVarDecl 0x13e00dea8 <line:4:27, col:37> col:37 invalid use_gimp_2_8_features 'int'   `-CompoundStmt 0x13d0ced70 <line:5:1, line:55:1>     |-DeclStmt 0x13e00e138 <line:9:3, col:32>     | `-VarDecl 0x13e00e0d0 <col:3, col:24> col:24 used filename 'char *'     |-CallExpr 0x13d0ce1b0 <line:19:3, line:22:47> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d0ce0b8 <line:19:3> 'int ()' Function 0x13d0ce000 'gimp_assert_mainimage' 'int ()'     | |-RecoveryExpr 0x13d0ce190 <col:26> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x13d0ce0f0 <line:20:26> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x13d0ce110 <line:21:26> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x13d0ce130 <line:22:26> '<dependent type>' contains-errors lvalue     `-CallExpr 0x13d0ce790 <line:27:3, col:19> 'int'       |-ImplicitCastExpr 0x13d0ce778 <col:3> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x13d0ce738 <col:3> 'int ()' Function 0x13d0ce680 'g_free' 'int ()'       `-ImplicitCastExpr 0x13d0ce7b8 <col:11> 'char *' <LValueToRValue>         `-DeclRefExpr 0x13d0ce758 <col:11> 'char *' lvalue Var 0x13e00e0d0 'filename' 'char *' ","20246":"`-FunctionDecl 0x12e128758  line:1:5 sas_discover_end_dev 'int (struct domain_device *)'   |-ParmVarDecl 0x12e128648 <col:26, col:48> col:48 used dev 'struct domain_device *'   `-CompoundStmt 0x12e140fe0 <line:2:1, line:11:1>     |-DeclStmt 0x12e140ad0 <line:3:2, col:9>     | `-VarDecl 0x12e140a68 <col:2, col:6> col:6 used res 'int'     |-BinaryOperator 0x12e140cf8 <line:5:2, col:37> 'int' '='     | |-DeclRefExpr 0x12e140ae8 <col:2> 'int' lvalue Var 0x12e140a68 'res' 'int'     | `-CallExpr 0x12e140cb8 <col:8, col:37> 'int'     |   |-ImplicitCastExpr 0x12e140ca0 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12e140c30 <col:8> 'int ()' Function 0x12e140b78 'sas_notify_lldd_dev_found' 'int ()'     |   `-ImplicitCastExpr 0x12e140ce0 <col:34> 'struct domain_device *' <LValueToRValue>     |     `-DeclRefExpr 0x12e140c50 <col:34> 'struct domain_device *' lvalue ParmVar 0x12e128648 'dev' 'struct domain_device *'     |-IfStmt 0x12e140d98 <line:6:2, line:7:10>     | |-ImplicitCastExpr 0x12e140d38 <line:6:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x12e140d18 <col:6> 'int' lvalue Var 0x12e140a68 'res' 'int'     | `-ReturnStmt 0x12e140d88 <line:7:3, col:10>     |   `-ImplicitCastExpr 0x12e140d70 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x12e140d50 <col:10> 'int' lvalue Var 0x12e140a68 'res' 'int'     |-CallExpr 0x12e140f80 <line:8:2, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12e140e98 <col:2> 'int ()' Function 0x12e140de0 'sas_discover_event' 'int ()'     | |-RecoveryExpr 0x12e140ef0 <col:21, col:26> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12e140eb8 <col:21> 'struct domain_device *' lvalue ParmVar 0x12e128648 'dev' 'struct domain_device *'     | `-RecoveryExpr 0x12e140f60 <col:32> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12e140fd0 <line:10:2, col:9>       `-IntegerLiteral 0x12e140fb0 <col:9> 'int' 0 ","21249":"`-FunctionDecl 0x14380e5f0  line:1:6 invalid rtps_util_add_liveliness_qos 'void (int *, int *, int, const int)'   |-ParmVarDecl 0x14380e328 <col:35, col:47> col:47 invalid tree 'int *'   |-ParmVarDecl 0x14380e3a8 <col:53, col:63> col:63 invalid tvb 'int *'   |-ParmVarDecl 0x14380e428 <col:68, col:73> col:73 used offset 'int'   |-ParmVarDecl 0x14380e4a8 <col:81, col:93> col:93 invalid encoding 'const int'   `-CompoundStmt 0x143828958 <col:103, line:9:1>     |-CallExpr 0x143828618 <line:7:3, col:81> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1438284b8 <col:3> 'int ()' Function 0x143828400 'proto_tree_add_item' 'int ()'     | |-RecoveryExpr 0x1438285d8 <col:23> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x1438285f8 <col:32> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x143828508 <col:57> '<dependent type>' contains-errors lvalue     | |-DeclRefExpr 0x143828528 <col:62> 'int' lvalue ParmVar 0x14380e428 'offset' 'int'     | |-IntegerLiteral 0x143828548 <col:70> 'int' 4     | `-RecoveryExpr 0x143828568 <col:73> '<dependent type>' contains-errors lvalue     `-CallExpr 0x143828910 <line:8:3, col:111> '<dependent type>' contains-errors       |-DeclRefExpr 0x143828748 <col:3> 'int ()' Function 0x143828690 'rtps_util_add_timestamp_sec_and_fraction' 'int ()'       |-RecoveryExpr 0x143828898 <col:44> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x143828780 <col:53> '<dependent type>' contains-errors lvalue       |-BinaryOperator 0x1438288d0 <col:58, col:65> 'int' '+'       | |-ImplicitCastExpr 0x1438288b8 <col:58> 'int' <LValueToRValue>       | | `-DeclRefExpr 0x1438287a0 <col:58> 'int' lvalue ParmVar 0x14380e428 'offset' 'int'       | `-IntegerLiteral 0x1438287c0 <col:65> 'int' 4       |-RecoveryExpr 0x143828818 <col:68> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x1438288f0 <col:78> '<dependent type>' contains-errors lvalue ","20782":"`-FunctionDecl 0x140053e00  line:1:5 kvm_set_cr0 'int (struct kvm_vcpu *, unsigned long)'   |-ParmVarDecl 0x140030e48 <col:17, col:34> col:34 used vcpu 'struct kvm_vcpu *'   |-ParmVarDecl 0x140030ec8 <col:40, col:54> col:54 used cr0 'unsigned long'   `-CompoundStmt 0x140056608 <line:2:1, line:44:1>     |-DeclStmt 0x140054190 <line:3:2, col:44>     | `-VarDecl 0x140053f18 <col:2, col:43> col:16 used old_cr0 'unsigned long' cinit     |   `-ImplicitCastExpr 0x140054178 <col:26, col:43> 'unsigned long' <IntegralCast>     |     `-CallExpr 0x140054138 <col:26, col:43> 'int'     |       |-ImplicitCastExpr 0x140054120 <col:26> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x1400540b0 <col:26> 'int ()' Function 0x140053ff8 'kvm_read_cr0' 'int ()'     |       `-ImplicitCastExpr 0x140054160 <col:39> 'struct kvm_vcpu *' <LValueToRValue>     |         `-DeclRefExpr 0x1400540d0 <col:39> 'struct kvm_vcpu *' lvalue ParmVar 0x140030e48 'vcpu' 'struct kvm_vcpu *'     |-DeclStmt 0x1400543c8 <line:4:2, line:5:32>     | `-VarDecl 0x1400541c0 <line:4:2, line:5:22> line:4:16 used update_bits 'unsigned long' cinit     |   `-BinaryOperator 0x1400543a8 <col:30, line:5:22> '<dependent type>' contains-errors '|'     |     |-BinaryOperator 0x140054368 <line:4:30, line:5:9> '<dependent type>' contains-errors '|'     |     | |-BinaryOperator 0x140054328 <line:4:30, col:43> '<dependent type>' contains-errors '|'     |     | | |-RecoveryExpr 0x1400542e8 <col:30> '<dependent type>' contains-errors lvalue     |     | | `-RecoveryExpr 0x140054308 <col:43> '<dependent type>' contains-errors lvalue     |     | `-RecoveryExpr 0x140054348 <line:5:9> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x140054388 <col:22> '<dependent type>' contains-errors lvalue     |-CompoundAssignOperator 0x140054468 <line:7:2, col:9> 'unsigned long' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-DeclRefExpr 0x1400543e0 <col:2> 'unsigned long' lvalue ParmVar 0x140030ec8 'cr0' 'unsigned long'     | `-RecoveryExpr 0x140054448 <col:9> '<dependent type>' contains-errors lvalue     |-CompoundAssignOperator 0x140054580 <line:14:2, col:10> 'unsigned long' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-DeclRefExpr 0x140054498 <col:2> 'unsigned long' lvalue ParmVar 0x140030ec8 'cr0' 'unsigned long'     | `-UnaryOperator 0x140054568 <col:9, col:10> '<dependent type>' contains-errors prefix '~' cannot overflow     |   `-ImplicitCastExpr 0x140054550 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |     `-RecoveryExpr 0x140054530 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1400546b0 <line:16:2, line:17:10>     | |-RecoveryExpr 0x140054660 <line:16:6, col:46> '_Bool' contains-errors     | `-ReturnStmt 0x1400546a0 <line:17:3, col:10>     |   `-IntegerLiteral 0x140054680 <col:10> 'int' 1     |-IfStmt 0x1400547d0 <line:19:2, line:20:10>     | |-RecoveryExpr 0x140054780 <line:19:6, col:46> '_Bool' contains-errors     | `-ReturnStmt 0x1400547c0 <line:20:3, col:10>     |   `-IntegerLiteral 0x1400547a0 <col:10> 'int' 1     |-IfStmt 0x1400562d8 <line:22:2, line:37:2>     | |-RecoveryExpr 0x1400549d8 <line:22:6, col:43> '_Bool' contains-errors     | `-CompoundStmt 0x1400562c0 <col:46, line:37:2>     |   `-IfStmt 0x1400562a0 <line:34:3, line:36:11>     |     |-BinaryOperator 0x140056250 <line:34:7, line:35:22> 'int' contains-errors '&&'     |     | |-CallExpr 0x140054b30 <line:34:7, col:18> 'int'     |     | | |-ImplicitCastExpr 0x140054b18 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     | | | `-DeclRefExpr 0x140054ad8 <col:7> 'int ()' Function 0x140054a20 'is_pae' 'int ()'     |     | | `-ImplicitCastExpr 0x140054b58 <col:14> 'struct kvm_vcpu *' <LValueToRValue>     |     | |   `-DeclRefExpr 0x140054af8 <col:14> 'struct kvm_vcpu *' lvalue ParmVar 0x140030e48 'vcpu' 'struct kvm_vcpu *'     |     | `-UnaryOperator 0x140056238 <col:23, line:35:22> '<dependent type>' contains-errors prefix '!' cannot overflow     |     |   `-CallExpr 0x140056200 <line:34:24, line:35:22> '<dependent type>' contains-errors     |     |     |-DeclRefExpr 0x140054c50 <line:34:24> 'int ()' Function 0x140054b98 'load_pdptrs' 'int ()'     |     |     |-DeclRefExpr 0x140054c70 <col:36> 'struct kvm_vcpu *' lvalue ParmVar 0x140030e48 'vcpu' 'struct kvm_vcpu *'     |     |     |-CXXDependentScopeMemberExpr 0x140054cf0 <col:42, col:53> '<dependent type>' contains-errors lvalue .walk_mmu     |     |     | `-RecoveryExpr 0x140054cc8 <col:42, col:48> '<dependent type>' contains-errors lvalue     |     |     |   `-DeclRefExpr 0x140054c90 <col:42> 'struct kvm_vcpu *' lvalue ParmVar 0x140030e48 'vcpu' 'struct kvm_vcpu *'     |     |     `-CXXDependentScopeMemberExpr 0x140054d98 <line:35:8, col:19> '<dependent type>' contains-errors lvalue .cr3     |     |       `-RecoveryExpr 0x140054d70 <col:8, col:14> '<dependent type>' contains-errors lvalue     |     |         `-DeclRefExpr 0x140054d38 <col:8> 'struct kvm_vcpu *' lvalue ParmVar 0x140030e48 'vcpu' 'struct kvm_vcpu *'     |     `-ReturnStmt 0x140056290 <line:36:4, col:11>     |       `-IntegerLiteral 0x140056270 <col:11> 'int' 1     |-IfStmt 0x1400565b8 <line:41:2, line:42:29>     | |-BinaryOperator 0x140056420 <line:41:6, col:24> 'unsigned long' contains-errors '&'     | | |-ParenExpr 0x1400563c8 <col:6, col:20> 'unsigned long'     | | | `-BinaryOperator 0x1400563a8 <col:7, col:13> 'unsigned long' '^'     | | |   |-ImplicitCastExpr 0x140056378 <col:7> 'unsigned long' <LValueToRValue>     | | |   | `-DeclRefExpr 0x140056338 <col:7> 'unsigned long' lvalue ParmVar 0x140030ec8 'cr0' 'unsigned long'     | | |   `-ImplicitCastExpr 0x140056390 <col:13> 'unsigned long' <LValueToRValue>     | | |     `-DeclRefExpr 0x140056358 <col:13> 'unsigned long' lvalue Var 0x140053f18 'old_cr0' 'unsigned long'     | | `-ImplicitCastExpr 0x140056408 <col:24> 'unsigned long' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x1400563e8 <col:24> 'unsigned long' contains-errors lvalue Var 0x1400541c0 'update_bits' 'unsigned long'     | `-CallExpr 0x140056578 <line:42:3, col:29> 'int'     |   |-ImplicitCastExpr 0x140056560 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x140056520 <col:3> 'int ()' Function 0x140056468 'kvm_mmu_reset_context' 'int ()'     |   `-ImplicitCastExpr 0x1400565a0 <col:25> 'struct kvm_vcpu *' <LValueToRValue>     |     `-DeclRefExpr 0x140056540 <col:25> 'struct kvm_vcpu *' lvalue ParmVar 0x140030e48 'vcpu' 'struct kvm_vcpu *'     `-ReturnStmt 0x1400565f8 <line:43:2, col:9>       `-IntegerLiteral 0x1400565d8 <col:9> 'int' 0 ","20678":"`-FunctionDecl 0x1419281c8  line:2:21 invalid mp_list_whd 'double (int)' static   |-ParmVarDecl 0x1419280f0 <col:33, <invalid sloc>> col:50 invalid 'int'   `-CompoundStmt 0x1419284c0 <col:56, line:4:91>     `-DeclStmt 0x141928328 <line:3:9, col:92>       `-VarDecl 0x141928290 <col:9, col:28> col:28 used ind 'const unsigned int' ","20345":"`-FunctionDecl 0x11f9464b8  col:2 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x11f9465b8 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x11f946560 <<invalid sloc>> Implicit 873 ","21140":"`-FunctionDecl 0x12e128e48  line:1:1 invalid parse_ber_header 'int (const unsigned char **, int *, int *, int *, int *, int *, int *, int *)'   |-ParmVarDecl 0x12e128940 <col:19, col:41> col:41 used buffer 'const unsigned char **'   |-ParmVarDecl 0x12e128a08 <col:49, col:57> col:57 invalid size 'int *'   |-ParmVarDecl 0x12e128a88 <line:2:19, col:24> col:24 used r_class 'int *'   |-ParmVarDecl 0x12e128b08 <col:33, col:38> col:38 used r_tag 'int *'   |-ParmVarDecl 0x12e128b88 <line:3:19, col:24> col:24 used r_constructed 'int *'   |-ParmVarDecl 0x12e128c08 <col:39, col:44> col:44 used r_ndef 'int *'   |-ParmVarDecl 0x12e128c88 <line:4:19, col:27> col:27 referenced invalid r_length 'int *'   |-ParmVarDecl 0x12e128d08 <col:37, col:45> col:45 invalid r_nhdr 'int *'   `-CompoundStmt 0x12e80c938 <line:5:1, line:77:1>     |-DeclStmt 0x12e128fb0 <line:6:3, col:8>     | `-VarDecl 0x12e128f48 <col:3, col:7> col:7 used c 'int'     |-DeclStmt 0x12e808868 <line:7:3, col:20>     | `-VarDecl 0x12e808800 <col:3, col:17> col:17 used tag 'unsigned long'     |-DeclStmt 0x12e808968 <line:8:3, col:37>     | `-VarDecl 0x12e808898 <col:3, col:31> col:24 used buf 'const unsigned char *' cinit     |   `-ImplicitCastExpr 0x12e808950 <col:30, col:31> 'const unsigned char *' <LValueToRValue>     |     `-UnaryOperator 0x12e808938 <col:30, col:31> 'const unsigned char *' lvalue prefix '*' cannot overflow     |       `-ImplicitCastExpr 0x12e808920 <col:31> 'const unsigned char **' <LValueToRValue>     |         `-DeclRefExpr 0x12e808900 <col:31> 'const unsigned char **' lvalue ParmVar 0x12e128940 'buffer' 'const unsigned char **'     |-BinaryOperator 0x12e808ad0 <line:9:3, col:20> 'unsigned long' contains-errors '='     | |-UnaryExprOrTypeTraitExpr 0x12e808a80 <col:3, col:10> 'unsigned long' contains-errors sizeof     | | `-RecoveryExpr 0x12e808a60 <col:10> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x12e808ab8 <col:19, col:20> '<dependent type>' contains-errors prefix '*' cannot overflow     |   `-ImplicitCastExpr 0x12e808aa0 <col:20> '<dependent type>' contains-errors <LValueToRValue>     |     `-RecoveryExpr 0x12e8089d0 <col:20> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12e808b60 <line:11:3, col:13> 'int' '='     | |-UnaryOperator 0x12e808b28 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x12e808b10 <col:4> 'int *' <LValueToRValue>     | |   `-DeclRefExpr 0x12e808af0 <col:4> 'int *' lvalue ParmVar 0x12e128c08 'r_ndef' 'int *'     | `-IntegerLiteral 0x12e808b40 <col:13> 'int' 0     |-BinaryOperator 0x12e808c40 <line:12:3, col:15> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x12e808c28 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x12e808c10 <col:4> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x12e808b80 <col:4> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x12e808bd0 <col:15> 'int' 0     |-BinaryOperator 0x12e808d20 <line:13:3, col:13> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x12e808d08 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x12e808cf0 <col:4> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x12e808c60 <col:4> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x12e808cb0 <col:13> 'int' 0     |-IfStmt 0x12e809050 <line:16:3, line:17:56>     | |-UnaryOperator 0x12e808de0 <line:16:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12e808dc8 <col:8> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x12e808da8 <col:8> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12e809040 <line:17:5, col:56>     |   `-CallExpr 0x12e809010 <col:12, col:56> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12e808f50 <col:12> 'int ()' Function 0x12e808e98 'gpg_err_make' 'int ()'     |     |-RecoveryExpr 0x12e808fd0 <col:26> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x12e808ff0 <col:45> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12e809110 <line:18:3, col:11> 'int' '='     | |-DeclRefExpr 0x12e809070 <col:3> 'int' lvalue Var 0x12e128f48 'c' 'int'     | `-ImplicitCastExpr 0x12e8090f8 <col:7, col:11> 'int' <IntegralCast>     |   `-ImplicitCastExpr 0x12e8090e0 <col:7, col:11> 'unsigned char' <LValueToRValue>     |     `-UnaryOperator 0x12e8090c8 <col:7, col:11> 'const unsigned char' lvalue prefix '*' cannot overflow     |       `-UnaryOperator 0x12e8090b0 <col:8, col:11> 'const unsigned char *' postfix '++'     |         `-DeclRefExpr 0x12e809090 <col:8> 'const unsigned char *' lvalue Var 0x12e808898 'buf' 'const unsigned char *'     |-UnaryOperator 0x12e809178 <col:15, col:21> '<dependent type>' contains-errors postfix '--' cannot overflow     | `-RecoveryExpr 0x12e809150 <col:15> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12e809130 <col:15> 'int *' lvalue ParmVar 0x12e128c88 'r_length' 'int *'     |-UnaryOperator 0x12e809228 <col:25, col:28> '<dependent type>' contains-errors prefix '++' cannot overflow     | `-UnaryOperator 0x12e809210 <col:27, col:28> '<dependent type>' contains-errors prefix '*' cannot overflow     |   `-ImplicitCastExpr 0x12e8091f8 <col:28> '<dependent type>' contains-errors <LValueToRValue>     |     `-RecoveryExpr 0x12e809190 <col:28> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12e809368 <line:20:3, col:28> 'int' '='     | |-UnaryOperator 0x12e809278 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x12e809260 <col:4> 'int *' <LValueToRValue>     | |   `-DeclRefExpr 0x12e809240 <col:4> 'int *' lvalue ParmVar 0x12e128a88 'r_class' 'int *'     | `-BinaryOperator 0x12e809348 <col:14, col:28> 'int' '>>'     |   |-ParenExpr 0x12e809308 <col:14, col:23> 'int'     |   | `-BinaryOperator 0x12e8092e8 <col:15, col:19> 'int' '&'     |   |   |-ImplicitCastExpr 0x12e8092d0 <col:15> 'int' <LValueToRValue>     |   |   | `-DeclRefExpr 0x12e809290 <col:15> 'int' lvalue Var 0x12e128f48 'c' 'int'     |   |   `-IntegerLiteral 0x12e8092b0 <col:19> 'int' 192     |   `-IntegerLiteral 0x12e809328 <col:28> 'int' 6     |-BinaryOperator 0x12e8094a0 <line:21:3, col:31> 'int' '='     | |-UnaryOperator 0x12e8093c0 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x12e8093a8 <col:4> 'int *' <LValueToRValue>     | |   `-DeclRefExpr 0x12e809388 <col:4> 'int *' lvalue ParmVar 0x12e128b88 'r_constructed' 'int *'     | `-UnaryOperator 0x12e809488 <col:20, col:31> 'int' prefix '!' cannot overflow     |   `-UnaryOperator 0x12e809470 <col:21, col:31> 'int' prefix '!' cannot overflow     |     `-ParenExpr 0x12e809450 <col:22, col:31> 'int'     |       `-BinaryOperator 0x12e809430 <col:23, col:27> 'int' '&'     |         |-ImplicitCastExpr 0x12e809418 <col:23> 'int' <LValueToRValue>     |         | `-DeclRefExpr 0x12e8093d8 <col:23> 'int' lvalue Var 0x12e128f48 'c' 'int'     |         `-IntegerLiteral 0x12e8093f8 <col:27> 'int' 32     |-BinaryOperator 0x12e809570 <line:22:3, col:13> 'unsigned long' '='     | |-DeclRefExpr 0x12e8094c0 <col:3> 'unsigned long' lvalue Var 0x12e808800 'tag' 'unsigned long'     | `-ImplicitCastExpr 0x12e809558 <col:9, col:13> 'unsigned long' <IntegralCast>     |   `-BinaryOperator 0x12e809538 <col:9, col:13> 'int' '&'     |     |-ImplicitCastExpr 0x12e809520 <col:9> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x12e8094e0 <col:9> 'int' lvalue Var 0x12e128f48 'c' 'int'     |     `-IntegerLiteral 0x12e809500 <col:13> 'int' 31     |-IfStmt 0x12e80b0a8 <line:24:3, line:37:5>     | |-BinaryOperator 0x12e809600 <line:24:7, col:14> 'int' '=='     | | |-ImplicitCastExpr 0x12e8095d0 <col:7> 'unsigned long' <LValueToRValue>     | | | `-DeclRefExpr 0x12e809590 <col:7> 'unsigned long' lvalue Var 0x12e808800 'tag' 'unsigned long'     | | `-ImplicitCastExpr 0x12e8095e8 <col:14> 'unsigned long' <IntegralCast>     | |   `-IntegerLiteral 0x12e8095b0 <col:14> 'int' 31     | `-CompoundStmt 0x12e80b088 <line:25:5, line:37:5>     |   |-BinaryOperator 0x12e809678 <line:26:7, col:13> 'unsigned long' '='     |   | |-DeclRefExpr 0x12e809620 <col:7> 'unsigned long' lvalue Var 0x12e808800 'tag' 'unsigned long'     |   | `-ImplicitCastExpr 0x12e809660 <col:13> 'unsigned long' <IntegralCast>     |   |   `-IntegerLiteral 0x12e809640 <col:13> 'int' 0     |   `-DoStmt 0x12e80b068 <line:27:7, line:36:22>     |     |-CompoundStmt 0x12e80afb0 <line:28:9, line:35:9>     |     | |-CompoundAssignOperator 0x12e8096f0 <line:29:11, col:19> 'unsigned long' '<<=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'     |     | | |-DeclRefExpr 0x12e809698 <col:11> 'unsigned long' lvalue Var 0x12e808800 'tag' 'unsigned long'     |     | | `-IntegerLiteral 0x12e8096b8 <col:19> 'int' 7     |     | |-IfStmt 0x12e80ace0 <line:30:11, line:31:64>     |     | | |-UnaryOperator 0x12e8097c0 <line:30:15, col:16> '<dependent type>' contains-errors prefix '!' cannot overflow     |     | | | `-ImplicitCastExpr 0x12e8097a8 <col:16> '<dependent type>' contains-errors <LValueToRValue>     |     | | |   `-RecoveryExpr 0x12e809788 <col:16> '<dependent type>' contains-errors lvalue     |     | | `-ReturnStmt 0x12e80acd0 <line:31:13, col:64>     |     | |   `-CallExpr 0x12e80aca0 <col:20, col:64> '<dependent type>' contains-errors     |     | |     |-DeclRefExpr 0x12e8097d8 <col:20> 'int ()' Function 0x12e808e98 'gpg_err_make' 'int ()'     |     | |     |-RecoveryExpr 0x12e80ac60 <col:34> '<dependent type>' contains-errors lvalue     |     | |     `-RecoveryExpr 0x12e80ac80 <col:53> '<dependent type>' contains-errors lvalue     |     | |-BinaryOperator 0x12e80ada0 <line:32:11, col:19> 'int' '='     |     | | |-DeclRefExpr 0x12e80ad00 <col:11> 'int' lvalue Var 0x12e128f48 'c' 'int'     |     | | `-ImplicitCastExpr 0x12e80ad88 <col:15, col:19> 'int' <IntegralCast>     |     | |   `-ImplicitCastExpr 0x12e80ad70 <col:15, col:19> 'unsigned char' <LValueToRValue>     |     | |     `-UnaryOperator 0x12e80ad58 <col:15, col:19> 'const unsigned char' lvalue prefix '*' cannot overflow     |     | |       `-UnaryOperator 0x12e80ad40 <col:16, col:19> 'const unsigned char *' postfix '++'     |     | |         `-DeclRefExpr 0x12e80ad20 <col:16> 'const unsigned char *' lvalue Var 0x12e808898 'buf' 'const unsigned char *'     |     | |-UnaryOperator 0x12e80ae08 <col:23, col:29> '<dependent type>' contains-errors postfix '--' cannot overflow     |     | | `-RecoveryExpr 0x12e80ade0 <col:23> '<dependent type>' contains-errors lvalue     |     | |   `-DeclRefExpr 0x12e80adc0 <col:23> 'int *' lvalue ParmVar 0x12e128c88 'r_length' 'int *'     |     | |-UnaryOperator 0x12e80aeb8 <col:33, col:36> '<dependent type>' contains-errors prefix '++' cannot overflow     |     | | `-UnaryOperator 0x12e80aea0 <col:35, col:36> '<dependent type>' contains-errors prefix '*' cannot overflow     |     | |   `-ImplicitCastExpr 0x12e80ae88 <col:36> '<dependent type>' contains-errors <LValueToRValue>     |     | |     `-RecoveryExpr 0x12e80ae20 <col:36> '<dependent type>' contains-errors lvalue     |     | `-CompoundAssignOperator 0x12e80af80 <line:33:11, col:22> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'     |     |   |-DeclRefExpr 0x12e80aed0 <col:11> 'unsigned long' lvalue Var 0x12e808800 'tag' 'unsigned long'     |     |   `-ImplicitCastExpr 0x12e80af68 <col:18, col:22> 'unsigned long' <IntegralCast>     |     |     `-BinaryOperator 0x12e80af48 <col:18, col:22> 'int' '&'     |     |       |-ImplicitCastExpr 0x12e80af30 <col:18> 'int' <LValueToRValue>     |     |       | `-DeclRefExpr 0x12e80aef0 <col:18> 'int' lvalue Var 0x12e128f48 'c' 'int'     |     |       `-IntegerLiteral 0x12e80af10 <col:22> 'int' 127     |     `-BinaryOperator 0x12e80b048 <line:36:14, col:18> 'int' '&'     |       |-ImplicitCastExpr 0x12e80b030 <col:14> 'int' <LValueToRValue>     |       | `-DeclRefExpr 0x12e80aff0 <col:14> 'int' lvalue Var 0x12e128f48 'c' 'int'     |       `-IntegerLiteral 0x12e80b010 <col:18> 'int' 128     |-BinaryOperator 0x12e80b168 <line:38:3, col:12> 'int' '='     | |-UnaryOperator 0x12e80b100 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x12e80b0e8 <col:4> 'int *' <LValueToRValue>     | |   `-DeclRefExpr 0x12e80b0c8 <col:4> 'int *' lvalue ParmVar 0x12e128b08 'r_tag' 'int *'     | `-ImplicitCastExpr 0x12e80b150 <col:12> 'int' <IntegralCast>     |   `-ImplicitCastExpr 0x12e80b138 <col:12> 'unsigned long' <LValueToRValue>     |     `-DeclRefExpr 0x12e80b118 <col:12> 'unsigned long' lvalue Var 0x12e808800 'tag' 'unsigned long'     |-IfStmt 0x12e80b340 <line:41:3, line:42:56>     | |-UnaryOperator 0x12e80b228 <line:41:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12e80b210 <col:8> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x12e80b1f0 <col:8> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12e80b330 <line:42:5, col:56>     |   `-CallExpr 0x12e80b300 <col:12, col:56> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12e80b240 <col:12> 'int ()' Function 0x12e808e98 'gpg_err_make' 'int ()'     |     |-RecoveryExpr 0x12e80b2c0 <col:26> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x12e80b2e0 <col:45> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12e80b400 <line:43:3, col:11> 'int' '='     | |-DeclRefExpr 0x12e80b360 <col:3> 'int' lvalue Var 0x12e128f48 'c' 'int'     | `-ImplicitCastExpr 0x12e80b3e8 <col:7, col:11> 'int' <IntegralCast>     |   `-ImplicitCastExpr 0x12e80b3d0 <col:7, col:11> 'unsigned char' <LValueToRValue>     |     `-UnaryOperator 0x12e80b3b8 <col:7, col:11> 'const unsigned char' lvalue prefix '*' cannot overflow     |       `-UnaryOperator 0x12e80b3a0 <col:8, col:11> 'const unsigned char *' postfix '++'     |         `-DeclRefExpr 0x12e80b380 <col:8> 'const unsigned char *' lvalue Var 0x12e808898 'buf' 'const unsigned char *'     |-UnaryOperator 0x12e80b468 <col:15, col:21> '<dependent type>' contains-errors postfix '--' cannot overflow     | `-RecoveryExpr 0x12e80b440 <col:15> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12e80b420 <col:15> 'int *' lvalue ParmVar 0x12e128c88 'r_length' 'int *'     |-UnaryOperator 0x12e80b518 <col:25, col:28> '<dependent type>' contains-errors prefix '++' cannot overflow     | `-UnaryOperator 0x12e80b500 <col:27, col:28> '<dependent type>' contains-errors prefix '*' cannot overflow     |   `-ImplicitCastExpr 0x12e80b4e8 <col:28> '<dependent type>' contains-errors <LValueToRValue>     |     `-RecoveryExpr 0x12e80b480 <col:28> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12e80c5c0 <line:45:3, line:68:5> has_else     | |-UnaryOperator 0x12e80b5c8 <line:45:8, col:18> 'int' prefix '!' cannot overflow     | | `-ParenExpr 0x12e80b5a8 <col:9, col:18> 'int'     | |   `-BinaryOperator 0x12e80b588 <col:10, col:14> 'int' '&'     | |     |-ImplicitCastExpr 0x12e80b570 <col:10> 'int' <LValueToRValue>     | |     | `-DeclRefExpr 0x12e80b530 <col:10> 'int' lvalue Var 0x12e128f48 'c' 'int'     | |     `-IntegerLiteral 0x12e80b550 <col:14> 'int' 128     | |-BinaryOperator 0x12e80b6a0 <line:46:5, col:17> '<dependent type>' contains-errors '='     | | |-UnaryOperator 0x12e80b688 <col:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow     | | | `-ImplicitCastExpr 0x12e80b670 <col:6> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-RecoveryExpr 0x12e80b5e0 <col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12e80b630 <col:17> 'int' lvalue Var 0x12e128f48 'c' 'int'     | `-IfStmt 0x12e80c590 <line:47:8, line:68:5> has_else     |   |-BinaryOperator 0x12e80b718 <line:47:12, col:17> 'int' '=='     |   | |-ImplicitCastExpr 0x12e80b700 <col:12> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x12e80b6c0 <col:12> 'int' lvalue Var 0x12e128f48 'c' 'int'     |   | `-IntegerLiteral 0x12e80b6e0 <col:17> 'int' 128     |   |-BinaryOperator 0x12e80b7a8 <line:48:5, col:15> 'int' '='     |   | |-UnaryOperator 0x12e80b770 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow     |   | | `-ImplicitCastExpr 0x12e80b758 <col:6> 'int *' <LValueToRValue>     |   | |   `-DeclRefExpr 0x12e80b738 <col:6> 'int *' lvalue ParmVar 0x12e128c08 'r_ndef' 'int *'     |   | `-IntegerLiteral 0x12e80b788 <col:15> 'int' 1     |   `-IfStmt 0x12e80c560 <line:49:8, line:68:5> has_else     |     |-BinaryOperator 0x12e80b820 <line:49:12, col:17> 'int' '=='     |     | |-ImplicitCastExpr 0x12e80b808 <col:12> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x12e80b7c8 <col:12> 'int' lvalue Var 0x12e128f48 'c' 'int'     |     | `-IntegerLiteral 0x12e80b7e8 <col:17> 'int' 255     |     |-ReturnStmt 0x12e80b930 <line:50:5, col:60>     |     | `-CallExpr 0x12e80b900 <col:12, col:60> '<dependent type>' contains-errors     |     |   |-DeclRefExpr 0x12e80b840 <col:12> 'int ()' Function 0x12e808e98 'gpg_err_make' 'int ()'     |     |   |-RecoveryExpr 0x12e80b8c0 <col:26> '<dependent type>' contains-errors lvalue     |     |   `-RecoveryExpr 0x12e80b8e0 <col:45> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x12e80c530 <line:52:5, line:68:5>     |       |-DeclStmt 0x12e80b9f8 <line:53:7, col:28>     |       | `-VarDecl 0x12e80b958 <col:7, col:27> col:21 used len 'unsigned long' cinit     |       |   `-ImplicitCastExpr 0x12e80b9e0 <col:27> 'unsigned long' <IntegralCast>     |       |     `-IntegerLiteral 0x12e80b9c0 <col:27> 'int' 0     |       |-DeclStmt 0x12e80bb08 <line:54:7, col:27>     |       | `-VarDecl 0x12e80ba28 <col:7, col:23> col:11 used count 'int' cinit     |       |   `-BinaryOperator 0x12e80bae8 <col:19, col:23> 'int' '&'     |       |     |-ImplicitCastExpr 0x12e80bad0 <col:19> 'int' <LValueToRValue>     |       |     | `-DeclRefExpr 0x12e80ba90 <col:19> 'int' lvalue Var 0x12e128f48 'c' 'int'     |       |     `-IntegerLiteral 0x12e80bab0 <col:23> 'int' 127     |       |-ForStmt 0x12e80c418 <line:59:7, line:66:9>     |       | |-<<<NULL>>>     |       | |-<<<NULL>>>     |       | |-ImplicitCastExpr 0x12e80c080 <line:59:14> 'int' <LValueToRValue>     |       | | `-DeclRefExpr 0x12e80c060 <col:14> 'int' lvalue Var 0x12e80ba28 'count' 'int'     |       | |-UnaryOperator 0x12e80c0b8 <col:21, col:26> 'int' postfix '--'     |       | | `-DeclRefExpr 0x12e80c098 <col:21> 'int' lvalue Var 0x12e80ba28 'count' 'int'     |       | `-CompoundStmt 0x12e80c3e8 <line:60:9, line:66:9>     |       |   |-CompoundAssignOperator 0x12e80c128 <line:61:11, col:19> 'unsigned long' '<<=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'     |       |   | |-DeclRefExpr 0x12e80c0d0 <col:11> 'unsigned long' lvalue Var 0x12e80b958 'len' 'unsigned long'     |       |   | `-IntegerLiteral 0x12e80c0f0 <col:19> 'int' 8     |       |   |-BinaryOperator 0x12e80c238 <line:64:11, col:19> 'int' '='     |       |   | |-DeclRefExpr 0x12e80c198 <col:11> 'int' lvalue Var 0x12e128f48 'c' 'int'     |       |   | `-ImplicitCastExpr 0x12e80c220 <col:15, col:19> 'int' <IntegralCast>     |       |   |   `-ImplicitCastExpr 0x12e80c208 <col:15, col:19> 'unsigned char' <LValueToRValue>     |       |   |     `-UnaryOperator 0x12e80c1f0 <col:15, col:19> 'const unsigned char' lvalue prefix '*' cannot overflow     |       |   |       `-UnaryOperator 0x12e80c1d8 <col:16, col:19> 'const unsigned char *' postfix '++'     |       |   |         `-DeclRefExpr 0x12e80c1b8 <col:16> 'const unsigned char *' lvalue Var 0x12e808898 'buf' 'const unsigned char *'     |       |   |-UnaryOperator 0x12e80c2f0 <col:33, col:36> '<dependent type>' contains-errors prefix '++' cannot overflow     |       |   | `-UnaryOperator 0x12e80c2d8 <col:35, col:36> '<dependent type>' contains-errors prefix '*' cannot overflow     |       |   |   `-ImplicitCastExpr 0x12e80c2c0 <col:36> '<dependent type>' contains-errors <LValueToRValue>     |       |   |     `-RecoveryExpr 0x12e80c258 <col:36> '<dependent type>' contains-errors lvalue     |       |   `-CompoundAssignOperator 0x12e80c3b8 <line:65:11, col:22> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'     |       |     |-DeclRefExpr 0x12e80c308 <col:11> 'unsigned long' lvalue Var 0x12e80b958 'len' 'unsigned long'     |       |     `-ImplicitCastExpr 0x12e80c3a0 <col:18, col:22> 'unsigned long' <IntegralCast>     |       |       `-BinaryOperator 0x12e80c380 <col:18, col:22> 'int' '&'     |       |         |-ImplicitCastExpr 0x12e80c368 <col:18> 'int' <LValueToRValue>     |       |         | `-DeclRefExpr 0x12e80c328 <col:18> 'int' lvalue Var 0x12e128f48 'c' 'int'     |       |         `-IntegerLiteral 0x12e80c348 <col:22> 'int' 255     |       `-BinaryOperator 0x12e80c510 <line:67:7, col:19> '<dependent type>' contains-errors '='     |         |-UnaryOperator 0x12e80c4f8 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow     |         | `-ImplicitCastExpr 0x12e80c4e0 <col:8> '<dependent type>' contains-errors <LValueToRValue>     |         |   `-RecoveryExpr 0x12e80c450 <col:8> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x12e80c4a0 <col:19> 'unsigned long' lvalue Var 0x12e80b958 'len' 'unsigned long'     |-IfStmt 0x12e80c7c0 <line:71:3, line:72:17>     | |-RecoveryExpr 0x12e80c6c0 <line:71:7, col:40> '_Bool' contains-errors     | `-BinaryOperator 0x12e80c7a0 <line:72:5, col:17> '<dependent type>' contains-errors '='     |   |-UnaryOperator 0x12e80c788 <col:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow     |   | `-ImplicitCastExpr 0x12e80c770 <col:6> '<dependent type>' contains-errors <LValueToRValue>     |   |   `-RecoveryExpr 0x12e80c6e0 <col:6> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x12e80c730 <col:17> 'int' 0     |-BinaryOperator 0x12e80c868 <line:74:3, col:13> 'const unsigned char *' '='     | |-UnaryOperator 0x12e80c818 <col:3, col:4> 'const unsigned char *' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x12e80c800 <col:4> 'const unsigned char **' <LValueToRValue>     | |   `-DeclRefExpr 0x12e80c7e0 <col:4> 'const unsigned char **' lvalue ParmVar 0x12e128940 'buffer' 'const unsigned char **'     | `-ImplicitCastExpr 0x12e80c850 <col:13> 'const unsigned char *' <LValueToRValue>     |   `-DeclRefExpr 0x12e80c830 <col:13> 'const unsigned char *' lvalue Var 0x12e808898 'buf' 'const unsigned char *'     `-ReturnStmt 0x12e80c928 <line:76:3, col:10>       `-IntegerLiteral 0x12e80c908 <col:10> 'int' 0 ","21139":"`-FunctionDecl 0x141128a88  line:1:1 invalid on_screen_monitors_changed 'int (int *, int *)'   |-ParmVarDecl 0x141128928 <col:29, col:40> col:40 invalid screen 'int *'   |-ParmVarDecl 0x1411289a8 <line:2:29, col:40> col:40 referenced invalid manager 'int *'   `-CompoundStmt 0x141143d28 <line:3:1, line:40:1>     |-DeclStmt 0x141128bd8 <line:5:9, col:27>     | `-VarDecl 0x141128b70 <col:9, col:17> col:17 used n_monitors 'int'     |-DeclStmt 0x141128c70 <line:6:9, col:26>     | `-VarDecl 0x141128c08 <col:9, col:17> col:17 used n_windows 'int'     |-DeclStmt 0x141128d08 <line:7:9, col:18>     | `-VarDecl 0x141128ca0 <col:9, col:17> col:17 used i 'int'     |-BinaryOperator 0x141128f08 <line:9:9, col:55> 'int' contains-errors '='     | |-DeclRefExpr 0x141128d20 <col:9> 'int' lvalue Var 0x141128b70 'n_monitors' 'int'     | `-CallExpr 0x141128ee0 <col:22, col:55> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x141128ea0 <col:22> 'int ()' Function 0x141128de8 'gdk_screen_get_n_monitors' 'int ()'     |   `-RecoveryExpr 0x141128ec0 <col:49> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1411421b0 <line:10:9, col:59> 'int' contains-errors '='     | |-DeclRefExpr 0x141128f28 <col:9> 'int' lvalue Var 0x141128c08 'n_windows' 'int'     | `-CallExpr 0x141142188 <col:21, col:59> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1411420b8 <col:21> 'int ()' Function 0x141142000 'g_slist_length' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x141142140 <col:37, col:52> '<dependent type>' contains-errors lvalue ->windows     |     `-CXXDependentScopeMemberExpr 0x1411420f8 <col:37, col:46> '<dependent type>' contains-errors lvalue ->priv     |       `-RecoveryExpr 0x1411420d8 <col:37> '<dependent type>' contains-errors lvalue     |-CallExpr 0x141142498 <line:12:9, line:14:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1411422b0 <line:12:9> 'int ()' Function 0x1411421f8 'gs_debug' 'int ()'     | |-StringLiteral 0x141142310 <col:19> 'char[4]' lvalue \"STR\"     | |-CallExpr 0x141142450 <line:13:19, col:48> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x141142410 <col:19> 'int ()' Function 0x141142358 'gdk_screen_get_number' 'int ()'     | | `-RecoveryExpr 0x141142430 <col:42> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x141142478 <line:14:19> 'int' lvalue Var 0x141128b70 'n_monitors' 'int'     `-IfStmt 0x141143cf8 <line:16:9, line:39:9> has_else       |-BinaryOperator 0x141142540 <line:16:13, col:26> 'int' '>'       | |-ImplicitCastExpr 0x141142510 <col:13> 'int' <LValueToRValue>       | | `-DeclRefExpr 0x1411424d0 <col:13> 'int' lvalue Var 0x141128b70 'n_monitors' 'int'       | `-ImplicitCastExpr 0x141142528 <col:26> 'int' <LValueToRValue>       |   `-DeclRefExpr 0x1411424f0 <col:26> 'int' lvalue Var 0x141128c08 'n_windows' 'int'       |-CompoundStmt 0x141142888 <col:37, line:21:9>       | `-ForStmt 0x141142850 <line:18:17, line:20:17>       |   |-BinaryOperator 0x1411425b8 <line:18:22, col:26> 'int' '='       |   | |-DeclRefExpr 0x141142560 <col:22> 'int' lvalue Var 0x141128ca0 'i' 'int'       |   | `-ImplicitCastExpr 0x1411425a0 <col:26> 'int' <LValueToRValue>       |   |   `-DeclRefExpr 0x141142580 <col:26> 'int' lvalue Var 0x141128c08 'n_windows' 'int'       |   |-<<<NULL>>>       |   |-BinaryOperator 0x141142648 <col:37, col:41> 'int' '<'       |   | |-ImplicitCastExpr 0x141142618 <col:37> 'int' <LValueToRValue>       |   | | `-DeclRefExpr 0x1411425d8 <col:37> 'int' lvalue Var 0x141128ca0 'i' 'int'       |   | `-ImplicitCastExpr 0x141142630 <col:41> 'int' <LValueToRValue>       |   |   `-DeclRefExpr 0x1411425f8 <col:41> 'int' lvalue Var 0x141128b70 'n_monitors' 'int'       |   |-UnaryOperator 0x141142688 <col:53, col:54> 'int' postfix '++'       |   | `-DeclRefExpr 0x141142668 <col:53> 'int' lvalue Var 0x141128ca0 'i' 'int'       |   `-CompoundStmt 0x141142838 <col:58, line:20:17>       |     `-CallExpr 0x141142800 <line:19:25, col:81> '<dependent type>' contains-errors       |       |-DeclRefExpr 0x141142780 <col:25> 'int ()' Function 0x1411426c8 'gs_manager_create_window_for_monitor' 'int ()'       |       |-RecoveryExpr 0x1411427a0 <col:63> '<dependent type>' contains-errors lvalue       |       |-RecoveryExpr 0x1411427c0 <col:72> '<dependent type>' contains-errors lvalue       |       `-DeclRefExpr 0x1411427e0 <col:80> 'int' lvalue Var 0x141128ca0 'i' 'int'       `-CompoundStmt 0x141143ce0 <line:21:16, line:39:9>         `-WhileStmt 0x141143cc0 <line:24:17, line:38:17>           |-BinaryOperator 0x1411429e0 <line:24:24, col:29> 'int' contains-errors '!='           | |-RecoveryExpr 0x1411429a0 <col:24> '<dependent type>' contains-errors lvalue           | `-RecoveryExpr 0x1411429c0 <col:29> '<dependent type>' contains-errors lvalue           `-CompoundStmt 0x141143ca0 <col:35, line:38:17>             |-DeclStmt 0x141142a98 <line:26:25, col:48>             | `-VarDecl 0x141142a30 <col:25, col:36> col:36 used this_monitor 'int'             `-IfStmt 0x141143c80 <line:31:25, line:36:25>               |-RecoveryExpr 0x141142f18 <line:31:29, col:70> '_Bool' contains-errors               `-CompoundStmt 0x141143c70 <col:82, line:36:25> ","20930":"`-FunctionDecl 0x123127950  line:1:13 sk_enter_memory_pressure 'void (struct sock *)' static   |-ParmVarDecl 0x123127848 <col:38, col:51> col:51 used sk 'struct sock *'   `-CompoundStmt 0x12313fe40 <line:2:1, line:7:1>     |-IfStmt 0x12313fd30 <line:3:2, line:4:3>     | |-UnaryOperator 0x12313fd08 <line:3:6, col:20> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12313fcf0 <col:7, col:20> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x12313fca8 <col:7, col:20> '<dependent type>' contains-errors lvalue ->enter_memory_pressure     | |     `-RecoveryExpr 0x12313fc80 <col:7, col:11> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x12313fc48 <col:7> 'struct sock *' lvalue ParmVar 0x123127848 'sk' 'struct sock *'     | `-ReturnStmt 0x12313fd20 <line:4:3>     `-CallExpr 0x12313fe18 <line:6:2, col:39> '<dependent type>' contains-errors       |-CXXDependentScopeMemberExpr 0x12313fdb0 <col:2, col:15> '<dependent type>' contains-errors lvalue ->enter_memory_pressure       | `-RecoveryExpr 0x12313fd88 <col:2, col:6> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x12313fd50 <col:2> 'struct sock *' lvalue ParmVar 0x123127848 'sk' 'struct sock *'       `-DeclRefExpr 0x12313fdf8 <col:37> 'struct sock *' lvalue ParmVar 0x123127848 'sk' 'struct sock *' ","20312":"`-FunctionDecl 0x122128280  line:1:6 invalid jas_matrix_asr 'void (int *, int)'   |-ParmVarDecl 0x122128128 <col:21, col:35> col:35 invalid matrix 'int *'   |-ParmVarDecl 0x1221281a8 <col:43, col:47> col:47 used n 'int'   `-CompoundStmt 0x1221427a0 <line:2:1, line:22:1>     |-DeclStmt 0x1221283b8 <line:3:2, col:7>     | `-VarDecl 0x122128350 <col:2, col:6> col:6 used i 'int'     |-DeclStmt 0x122128450 <line:4:2, col:7>     | `-VarDecl 0x1221283e8 <col:2, col:6> col:6 used j 'int'     |-DeclStmt 0x122128500 <line:6:2, col:13>     | `-VarDecl 0x122128498 <col:2, col:6> col:6 used rowstep 'int'     |-CallExpr 0x122128778 <line:9:2, col:15> 'int'     | |-ImplicitCastExpr 0x122128760 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x122128690 <col:2> 'int ()' Function 0x1221285d8 'assert' 'int ()'     | `-BinaryOperator 0x122128708 <col:9, col:14> 'int' '>='     |   |-ImplicitCastExpr 0x1221286f0 <col:9> 'int' <LValueToRValue>     |   | `-DeclRefExpr 0x1221286b0 <col:9> 'int' lvalue ParmVar 0x1221281a8 'n' 'int'     |   `-IntegerLiteral 0x1221286d0 <col:14> 'int' 0     `-IfStmt 0x122142780 <line:10:2, line:21:2>       |-BinaryOperator 0x122141ae8 <line:10:6, col:69> 'int' contains-errors '&&'       | |-BinaryOperator 0x122141940 <col:6, col:35> 'int' contains-errors '>'       | | |-CallExpr 0x1221418f8 <col:6, col:31> '<dependent type>' contains-errors       | | | |-DeclRefExpr 0x1221418b8 <col:6> 'int ()' Function 0x122141800 'jas_matrix_numrows' 'int ()'       | | | `-RecoveryExpr 0x1221418d8 <col:25> '<dependent type>' contains-errors lvalue       | | `-IntegerLiteral 0x122141920 <col:35> 'int' 0       | `-BinaryOperator 0x122141ac8 <col:40, col:69> 'int' contains-errors '>'       |   |-CallExpr 0x122141a80 <col:40, col:65> '<dependent type>' contains-errors       |   | |-DeclRefExpr 0x122141a40 <col:40> 'int ()' Function 0x122141988 'jas_matrix_numcols' 'int ()'       |   | `-RecoveryExpr 0x122141a60 <col:59> '<dependent type>' contains-errors lvalue       |   `-IntegerLiteral 0x122141aa8 <col:69> 'int' 0       `-CompoundStmt 0x122142758 <col:72, line:21:2>         |-CallExpr 0x122141b90 <line:11:3, col:23> '<dependent type>' contains-errors         | |-DeclRefExpr 0x122141b08 <col:3> 'int ()' Function 0x1221285d8 'assert' 'int ()'         | `-CXXDependentScopeMemberExpr 0x122141b48 <col:10, col:18> '<dependent type>' contains-errors lvalue ->rows_         |   `-RecoveryExpr 0x122141b28 <col:10> '<dependent type>' contains-errors lvalue         |-BinaryOperator 0x122141d20 <line:12:3, col:38> 'int' contains-errors '='         | |-DeclRefExpr 0x122141bb8 <col:3> 'int' lvalue Var 0x122128498 'rowstep' 'int'         | `-CallExpr 0x122141cf8 <col:13, col:38> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x122141cb8 <col:13> 'int ()' Function 0x122141c00 'jas_matrix_rowstep' 'int ()'         |   `-RecoveryExpr 0x122141cd8 <col:32> '<dependent type>' contains-errors lvalue         `-ForStmt 0x122142720 <line:13:3, line:20:3>           |-BinaryOperator 0x122141f78 <line:13:8, col:56> 'int' contains-errors ','           | |-BinaryOperator 0x122141dc8 <col:8, col:20> 'int' contains-errors '='           | | |-DeclRefExpr 0x122141d40 <col:8> 'int' lvalue Var 0x122128350 'i' 'int'           | | `-CXXDependentScopeMemberExpr 0x122141d80 <col:12, col:20> '<dependent type>' contains-errors lvalue ->numrows_           | |   `-RecoveryExpr 0x122141d60 <col:12> '<dependent type>' contains-errors lvalue           | `-BinaryOperator 0x122141f58 <col:30, col:56> 'int' contains-errors '='           |   |-DeclRefExpr 0x122141f00 <col:30> 'int' lvalue Var 0x122128498 'rowstep' 'int'           |   `-ArraySubscriptExpr 0x122141f38 <col:41, col:56> '<dependent type>' contains-errors lvalue           |     |-ImplicitCastExpr 0x122141f20 <col:41, col:49> '<dependent type>' contains-errors <LValueToRValue>           |     | `-CXXDependentScopeMemberExpr 0x122141e20 <col:41, col:49> '<dependent type>' contains-errors lvalue ->rows_           |     |   `-RecoveryExpr 0x122141e00 <col:41> '<dependent type>' contains-errors lvalue           |     `-IntegerLiteral 0x122141e68 <col:55> 'int' 0           |-<<<NULL>>>           |-BinaryOperator 0x122141ff0 <col:59, col:63> 'int' '>'           | |-ImplicitCastExpr 0x122141fd8 <col:59> 'int' <LValueToRValue>           | | `-DeclRefExpr 0x122141f98 <col:59> 'int' lvalue Var 0x122128350 'i' 'int'           | `-IntegerLiteral 0x122141fb8 <col:63> 'int' 0           |-BinaryOperator 0x122142138 <col:66, line:14:17> 'int' ','           | |-UnaryOperator 0x122142030 <line:13:66, col:68> 'int' prefix '--'           | | `-DeclRefExpr 0x122142010 <col:68> 'int' lvalue Var 0x122128350 'i' 'int'           | `-CompoundAssignOperator 0x122142108 <line:14:5, col:17> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'           |   |-DeclRefExpr 0x1221420d0 <col:5> 'int' lvalue Var 0x122128498 'rowstep' 'int'           |   `-ImplicitCastExpr 0x1221420f0 <col:17> 'int' <LValueToRValue>           |     `-DeclRefExpr 0x122142060 <col:17> 'int' lvalue Var 0x122128498 'rowstep' 'int'           `-CompoundStmt 0x122142708 <col:26, line:20:3>             `-ForStmt 0x1221426d0 <line:15:4, line:19:4>               |-<<<NULL>>>               |-<<<NULL>>>               |-BinaryOperator 0x1221422c8 <line:15:48, col:52> 'int' '>'               | |-ImplicitCastExpr 0x1221422b0 <col:48> 'int' <LValueToRValue>               | | `-DeclRefExpr 0x122142270 <col:48> 'int' lvalue Var 0x1221283e8 'j' 'int'               | `-IntegerLiteral 0x122142290 <col:52> 'int' 0               |-BinaryOperator 0x1221423a8 <col:55, line:16:8> '<dependent type>' contains-errors ','               | |-UnaryOperator 0x122142308 <line:15:55, col:57> 'int' prefix '--'               | | `-DeclRefExpr 0x1221422e8 <col:57> 'int' lvalue Var 0x1221283e8 'j' 'int'               | `-UnaryOperator 0x122142390 <line:16:6, col:8> '<dependent type>' contains-errors prefix '++' cannot overflow               |   `-RecoveryExpr 0x122142370 <col:8> '<dependent type>' contains-errors lvalue               `-CompoundStmt 0x1221426b8 <col:14, line:19:4>                 `-BinaryOperator 0x122142698 <line:18:5, col:36> '<dependent type>' contains-errors '='                   |-UnaryOperator 0x122142600 <col:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow                   | `-ImplicitCastExpr 0x1221425e8 <col:6> '<dependent type>' contains-errors <LValueToRValue>                   |   `-RecoveryExpr 0x1221425c8 <col:6> '<dependent type>' contains-errors lvalue                   `-CallExpr 0x122142668 <col:13, col:36> '<dependent type>' contains-errors                     |-DeclRefExpr 0x1221424f0 <col:13> 'int ()' Function 0x122142438 'jas_seqent_asr' 'int ()'                     |-UnaryOperator 0x122142650 <col:28, col:29> '<dependent type>' contains-errors prefix '*' cannot overflow                     | `-ImplicitCastExpr 0x122142638 <col:29> '<dependent type>' contains-errors <LValueToRValue>                     |   `-RecoveryExpr 0x122142618 <col:29> '<dependent type>' contains-errors lvalue                     `-DeclRefExpr 0x122142558 <col:35> 'int' lvalue ParmVar 0x1221281a8 'n' 'int' ","21255":"`-FunctionDecl 0x12d90dd50  line:1:13 i40e_quiesce_vsi 'void (struct i40e_vsi *)' static   |-ParmVarDecl 0x12d90dc48 <col:30, col:47> col:47 used vsi 'struct i40e_vsi *'   `-CompoundStmt 0x12d926a08 <line:2:1, line:11:1>     |-IfStmt 0x12d926298 <line:3:2, line:4:3>     | |-CallExpr 0x12d926258 <line:3:6, col:42> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x12d926170 <col:6> 'int ()' Function 0x12d9260b8 'test_bit' 'int ()'     | | |-RecoveryExpr 0x12d926238 <col:15> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12d9261e0 <col:32, col:37> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12d9261a8 <col:32> 'struct i40e_vsi *' lvalue ParmVar 0x12d90dc48 'vsi' 'struct i40e_vsi *'     | `-ReturnStmt 0x12d926288 <line:4:3>     |-CallExpr 0x12d926480 <line:6:2, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d926398 <col:2> 'int ()' Function 0x12d9262e0 'set_bit' 'int ()'     | |-RecoveryExpr 0x12d926460 <col:10> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x12d926408 <col:36, col:41> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12d9263d0 <col:36> 'struct i40e_vsi *' lvalue ParmVar 0x12d90dc48 'vsi' 'struct i40e_vsi *'     `-IfStmt 0x12d9269d8 <line:7:2, line:10:21> has_else       |-BinaryOperator 0x12d926698 <line:7:6, col:46> 'int' contains-errors '&&'       | |-RecoveryExpr 0x12d9264e8 <col:6, col:11> '<dependent type>' contains-errors lvalue       | | `-DeclRefExpr 0x12d9264b0 <col:6> 'struct i40e_vsi *' lvalue ParmVar 0x12d90dc48 'vsi' 'struct i40e_vsi *'       | `-CallExpr 0x12d926670 <col:21, col:46> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x12d9265f0 <col:21> 'int ()' Function 0x12d926538 'netif_running' 'int ()'       |   `-RecoveryExpr 0x12d926648 <col:35, col:40> '<dependent type>' contains-errors lvalue       |     `-DeclRefExpr 0x12d926610 <col:35> 'struct i40e_vsi *' lvalue ParmVar 0x12d90dc48 'vsi' 'struct i40e_vsi *'       |-CallExpr 0x12d926808 <line:8:3, col:48> '<dependent type>' contains-errors       | |-CXXDependentScopeMemberExpr 0x12d926760 <col:3, col:28> '<dependent type>' contains-errors lvalue ->ndo_stop       | | `-CXXDependentScopeMemberExpr 0x12d926718 <col:3, col:16> '<dependent type>' contains-errors lvalue ->netdev_ops       | |   `-RecoveryExpr 0x12d9266f0 <col:3, col:8> '<dependent type>' contains-errors lvalue       | |     `-DeclRefExpr 0x12d9266b8 <col:3> 'struct i40e_vsi *' lvalue ParmVar 0x12d90dc48 'vsi' 'struct i40e_vsi *'       | `-RecoveryExpr 0x12d9267e0 <col:37, col:42> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x12d9267a8 <col:37> 'struct i40e_vsi *' lvalue ParmVar 0x12d90dc48 'vsi' 'struct i40e_vsi *'       `-CallExpr 0x12d926998 <line:10:3, col:21> 'int'         |-ImplicitCastExpr 0x12d926980 <col:3> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x12d926910 <col:3> 'int ()' Function 0x12d926858 'i40e_vsi_close' 'int ()'         `-ImplicitCastExpr 0x12d9269c0 <col:18> 'struct i40e_vsi *' <LValueToRValue>           `-DeclRefExpr 0x12d926930 <col:18> 'struct i40e_vsi *' lvalue ParmVar 0x12d90dc48 'vsi' 'struct i40e_vsi *' ","20313":"`-FunctionDecl 0x1221286b8  line:2:5 config_parse_line_max 'int (const char *, const char *, unsigned int, const char *, unsigned int, const char *, int, const char *, void *, void *)'   |-ParmVarDecl 0x1221280d8 <line:3:17, col:29> col:29 used unit 'const char *'   |-ParmVarDecl 0x122128158 <line:4:17, col:29> col:29 used filename 'const char *'   |-ParmVarDecl 0x1221281d8 <line:5:17, col:26> col:26 used line 'unsigned int'   |-ParmVarDecl 0x122128258 <line:6:17, col:29> col:29 section 'const char *'   |-ParmVarDecl 0x1221282d8 <line:7:17, col:26> col:26 section_line 'unsigned int'   |-ParmVarDecl 0x122128358 <line:8:17, col:29> col:29 used lvalue 'const char *'   |-ParmVarDecl 0x1221283d8 <line:9:17, col:21> col:21 ltype 'int'   |-ParmVarDecl 0x122128458 <line:10:17, col:29> col:29 used rvalue 'const char *'   |-ParmVarDecl 0x1221284d8 <line:11:17, col:23> col:23 used data 'void *'   |-ParmVarDecl 0x122128558 <line:12:17, col:23> col:23 userdata 'void *'   `-CompoundStmt 0x1221435e0 <col:33, line:46:18>     |-DeclStmt 0x122140ad0 <line:15:9, col:14>     | `-VarDecl 0x122140a68 <col:9, col:13> col:13 used r 'int'     |-CallExpr 0x122140c88 <line:17:9, col:24> 'int'     | |-ImplicitCastExpr 0x122140c70 <col:9> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x122140c00 <col:9> 'int ()' Function 0x122140b48 'assert' 'int ()'     | `-ImplicitCastExpr 0x122140cb0 <col:16> 'const char *' <LValueToRValue>     |   `-DeclRefExpr 0x122140c20 <col:16> 'const char *' lvalue ParmVar 0x122128158 'filename' 'const char *'     |-CallExpr 0x122140d20 <line:18:9, col:22> 'int'     | |-ImplicitCastExpr 0x122140d08 <col:9> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x122140cc8 <col:9> 'int ()' Function 0x122140b48 'assert' 'int ()'     | `-ImplicitCastExpr 0x122140d48 <col:16> 'const char *' <LValueToRValue>     |   `-DeclRefExpr 0x122140ce8 <col:16> 'const char *' lvalue ParmVar 0x122128358 'lvalue' 'const char *'     |-CallExpr 0x122140db8 <line:19:9, col:22> 'int'     | |-ImplicitCastExpr 0x122140da0 <col:9> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x122140d60 <col:9> 'int ()' Function 0x122140b48 'assert' 'int ()'     | `-ImplicitCastExpr 0x122140de0 <col:16> 'const char *' <LValueToRValue>     |   `-DeclRefExpr 0x122140d80 <col:16> 'const char *' lvalue ParmVar 0x122128458 'rvalue' 'const char *'     |-CallExpr 0x122140e50 <line:20:9, col:20> 'int'     | |-ImplicitCastExpr 0x122140e38 <col:9> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x122140df8 <col:9> 'int ()' Function 0x122140b48 'assert' 'int ()'     | `-ImplicitCastExpr 0x122140e78 <col:16> 'void *' <LValueToRValue>     |   `-DeclRefExpr 0x122140e18 <col:16> 'void *' lvalue ParmVar 0x1221284d8 'data' 'void *'     |-IfStmt 0x122143580 <line:22:9, line:44:9> has_else     | |-CallExpr 0x122140fc8 <line:22:13, col:27> 'int'     | | |-ImplicitCastExpr 0x122140fb0 <col:13> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x122140f70 <col:13> 'int ()' Function 0x122140eb8 'isempty' 'int ()'     | | `-ImplicitCastExpr 0x122140ff0 <col:21> 'const char *' <LValueToRValue>     | |   `-DeclRefExpr 0x122140f90 <col:21> 'const char *' lvalue ParmVar 0x122128458 'rvalue' 'const char *'     | |-BinaryOperator 0x1221410f8 <line:24:17, col:23> '<dependent type>' contains-errors '='     | | |-UnaryOperator 0x1221410c0 <col:17, col:18> '<dependent type>' contains-errors prefix '*' cannot overflow     | | | `-ImplicitCastExpr 0x1221410a8 <col:18> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-RecoveryExpr 0x122141088 <col:18> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1221410d8 <col:23> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x122143558 <line:25:14, line:44:9>     |   |-BinaryOperator 0x122141370 <line:28:17, col:48> 'int' contains-errors '='     |   | |-DeclRefExpr 0x122141118 <col:17> 'int' lvalue Var 0x122140a68 'r' 'int'     |   | `-CallExpr 0x122141338 <col:21, col:48> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x122141218 <col:21> 'int ()' Function 0x122141160 'parse_size' 'int ()'     |   |   |-DeclRefExpr 0x122141238 <col:32> 'const char *' lvalue ParmVar 0x122128458 'rvalue' 'const char *'     |   |   |-IntegerLiteral 0x122141258 <col:40> 'int' 1024     |   |   `-UnaryOperator 0x122141320 <col:46, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |     `-RecoveryExpr 0x122141300 <col:47> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x122141740 <line:29:17, line:32:17>     |   | |-BinaryOperator 0x1221413e8 <line:29:21, col:25> 'int' '<'     |   | | |-ImplicitCastExpr 0x1221413d0 <col:21> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x122141390 <col:21> 'int' lvalue Var 0x122140a68 'r' 'int'     |   | | `-IntegerLiteral 0x1221413b0 <col:25> 'int' 0     |   | `-CompoundStmt 0x122141720 <col:28, line:32:17>     |   |   |-CallExpr 0x122141698 <line:30:25, col:83> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x1221414e8 <col:25> 'int ()' Function 0x122141430 'log_syntax' 'int ()'     |   |   | |-DeclRefExpr 0x122141508 <col:36> 'const char *' lvalue ParmVar 0x1221280d8 'unit' 'const char *'     |   |   | |-RecoveryExpr 0x122141678 <col:42> '<dependent type>' contains-errors lvalue     |   |   | |-DeclRefExpr 0x122141540 <col:51> 'const char *' lvalue ParmVar 0x122128158 'filename' 'const char *'     |   |   | |-DeclRefExpr 0x122141560 <col:61> 'unsigned int' lvalue ParmVar 0x1221281d8 'line' 'unsigned int'     |   |   | |-DeclRefExpr 0x122141580 <col:67> 'int' lvalue Var 0x122140a68 'r' 'int'     |   |   | |-StringLiteral 0x1221415e0 <col:70> 'char[4]' lvalue \"STR\"     |   |   | `-DeclRefExpr 0x122141600 <col:77> 'const char *' lvalue ParmVar 0x122128458 'rvalue' 'const char *'     |   |   `-ReturnStmt 0x122141710 <line:31:25, col:32>     |   |     `-IntegerLiteral 0x1221416f0 <col:32> 'int' 0     |   `-IfStmt 0x122143528 <line:34:17, line:43:25> has_else     |     |-BinaryOperator 0x1221417d8 <line:34:21, col:25> 'int' contains-errors '<'     |     | |-RecoveryExpr 0x1221417b8 <col:21> '<dependent type>' contains-errors lvalue     |     | `-IntegerLiteral 0x122141778 <col:25> 'int' 79     |     |-CompoundStmt 0x1221432c8 <col:29, line:38:17>     |     | |-CallExpr 0x122141968 <line:36:25, col:87> '<dependent type>' contains-errors     |     | | |-DeclRefExpr 0x1221417f8 <col:25> 'int ()' Function 0x122141430 'log_syntax' 'int ()'     |     | | |-DeclRefExpr 0x122141818 <col:36> 'const char *' lvalue ParmVar 0x1221280d8 'unit' 'const char *'     |     | | |-RecoveryExpr 0x122141948 <col:42> '<dependent type>' contains-errors lvalue     |     | | |-DeclRefExpr 0x122141850 <col:55> 'const char *' lvalue ParmVar 0x122128158 'filename' 'const char *'     |     | | |-DeclRefExpr 0x122141870 <col:65> 'unsigned int' lvalue ParmVar 0x1221281d8 'line' 'unsigned int'     |     | | |-IntegerLiteral 0x122141890 <col:71> 'int' 0     |     | | |-StringLiteral 0x1221418b0 <col:74> 'char[4]' lvalue \"STR\"     |     | | `-DeclRefExpr 0x1221418d0 <col:81> 'const char *' lvalue ParmVar 0x122128458 'rvalue' 'const char *'     |     | `-BinaryOperator 0x1221432a8 <line:37:25, col:31> '<dependent type>' contains-errors '='     |     |   |-UnaryOperator 0x122143290 <col:25, col:26> '<dependent type>' contains-errors prefix '*' cannot overflow     |     |   | `-ImplicitCastExpr 0x122143278 <col:26> '<dependent type>' contains-errors <LValueToRValue>     |     |   |   `-RecoveryExpr 0x122143258 <col:26> '<dependent type>' contains-errors lvalue     |     |   `-IntegerLiteral 0x122143218 <col:31> 'int' 79     |     `-IfStmt 0x1221434f8 <line:38:24, line:43:25> has_else     |       |-RecoveryExpr 0x122143370 <line:38:28, col:55> '_Bool' contains-errors     |       |-CompoundStmt 0x1221434e0 <col:58, line:42:17>     |       `-NullStmt 0x1221434f0 <line:43:25>     `-ReturnStmt 0x1221435d0 <line:46:9, col:16>       `-IntegerLiteral 0x1221435b0 <col:16> 'int' 0 ","20735":"`-FunctionDecl 0x13e80de08  col:3 invalid Hybrid_type 'int (const int)'   |-ParmVarDecl 0x13e80dcf0 <col:15, <invalid sloc>> col:33 invalid 'const int'   `-CompoundStmt 0x13e80deb8 <col:59, col:60> ","20337":"`-FunctionDecl 0x14d84b340  col:43 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x14d84b440 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x14d84b3e8 <<invalid sloc>> Implicit 902 ","20519":"`-FunctionDecl 0x11f80ddc8  line:1:20 invalid cmdid2name 'const char *(int)' static   |-ParmVarDecl 0x11f80dcf0 <col:31, col:35> col:35 invalid cmdid 'int'   `-CompoundStmt 0x11f828698 <line:2:1, line:111:1>     `-SwitchStmt 0x11f80deb0 <line:3:2, line:110:2>       |-ImplicitCastExpr 0x11f80de98 <line:3:10> '<dependent type>' contains-errors <LValueToRValue>       | `-RecoveryExpr 0x11f80de78 <col:10> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x11f8284e0 <col:17, line:110:2>         |-ReturnStmt 0x11f80df80 <line:5:3, col:10>         | `-ImplicitCastExpr 0x11f80df68 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f80df50 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f80df30 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f80dff8 <line:7:3, col:10>         | `-ImplicitCastExpr 0x11f80dfe0 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f80dfc8 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f80dfa8 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f80e070 <line:9:3, col:10>         | `-ImplicitCastExpr 0x11f80e058 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f80e040 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f80e020 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f80e0e8 <line:11:3, col:10>         | `-ImplicitCastExpr 0x11f80e0d0 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f80e0b8 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f80e098 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f80e160 <line:13:3, col:10>         | `-ImplicitCastExpr 0x11f80e148 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f80e130 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f80e110 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f80e1d8 <line:15:3, col:10>         | `-ImplicitCastExpr 0x11f80e1c0 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f80e1a8 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f80e188 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f80e250 <line:17:3, col:10>         | `-ImplicitCastExpr 0x11f80e238 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f80e220 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f80e200 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f80e2c8 <line:19:3, col:10>         | `-ImplicitCastExpr 0x11f80e2b0 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f80e298 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f80e278 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f80e340 <line:21:3, col:10>         | `-ImplicitCastExpr 0x11f80e328 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f80e310 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f80e2f0 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f80e3b8 <line:23:3, col:10>         | `-ImplicitCastExpr 0x11f80e3a0 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f80e388 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f80e368 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827430 <line:25:3, col:10>         | `-ImplicitCastExpr 0x11f827418 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827400 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f80e3e0 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f8274a8 <line:27:3, col:10>         | `-ImplicitCastExpr 0x11f827490 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827478 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827458 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827520 <line:29:3, col:10>         | `-ImplicitCastExpr 0x11f827508 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f8274f0 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f8274d0 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827598 <line:31:3, col:10>         | `-ImplicitCastExpr 0x11f827580 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827568 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827548 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827610 <line:33:3, col:10>         | `-ImplicitCastExpr 0x11f8275f8 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f8275e0 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f8275c0 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827688 <line:35:3, col:10>         | `-ImplicitCastExpr 0x11f827670 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827658 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827638 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827700 <line:37:3, col:10>         | `-ImplicitCastExpr 0x11f8276e8 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f8276d0 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f8276b0 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827778 <line:39:3, col:10>         | `-ImplicitCastExpr 0x11f827760 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827748 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827728 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f8277f0 <line:41:3, col:10>         | `-ImplicitCastExpr 0x11f8277d8 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f8277c0 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f8277a0 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827850 <line:43:3, col:10>         | `-ImplicitCastExpr 0x11f827838 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827820 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827800 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f8278b0 <line:45:3, col:10>         | `-ImplicitCastExpr 0x11f827898 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827880 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827860 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827910 <line:47:3, col:10>         | `-ImplicitCastExpr 0x11f8278f8 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f8278e0 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f8278c0 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827970 <line:49:3, col:10>         | `-ImplicitCastExpr 0x11f827958 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827940 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827920 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f8279d0 <line:51:3, col:10>         | `-ImplicitCastExpr 0x11f8279b8 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f8279a0 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827980 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827a30 <line:53:3, col:10>         | `-ImplicitCastExpr 0x11f827a18 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827a00 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f8279e0 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827a90 <line:55:3, col:10>         | `-ImplicitCastExpr 0x11f827a78 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827a60 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827a40 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827af0 <line:57:3, col:10>         | `-ImplicitCastExpr 0x11f827ad8 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827ac0 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827aa0 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827b50 <line:59:3, col:10>         | `-ImplicitCastExpr 0x11f827b38 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827b20 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827b00 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827bb0 <line:61:3, col:10>         | `-ImplicitCastExpr 0x11f827b98 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827b80 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827b60 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827c10 <line:63:3, col:10>         | `-ImplicitCastExpr 0x11f827bf8 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827be0 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827bc0 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827c70 <line:65:3, col:10>         | `-ImplicitCastExpr 0x11f827c58 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827c40 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827c20 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827cd0 <line:67:3, col:10>         | `-ImplicitCastExpr 0x11f827cb8 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827ca0 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827c80 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827d30 <line:69:3, col:10>         | `-ImplicitCastExpr 0x11f827d18 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827d00 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827ce0 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827d90 <line:71:3, col:10>         | `-ImplicitCastExpr 0x11f827d78 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827d60 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827d40 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827df0 <line:73:3, col:10>         | `-ImplicitCastExpr 0x11f827dd8 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827dc0 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827da0 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827e50 <line:75:3, col:10>         | `-ImplicitCastExpr 0x11f827e38 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827e20 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827e00 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827eb0 <line:77:3, col:10>         | `-ImplicitCastExpr 0x11f827e98 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827e80 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827e60 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827f10 <line:79:3, col:10>         | `-ImplicitCastExpr 0x11f827ef8 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827ee0 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827ec0 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827f70 <line:81:3, col:10>         | `-ImplicitCastExpr 0x11f827f58 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827f40 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827f20 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827fd0 <line:83:3, col:10>         | `-ImplicitCastExpr 0x11f827fb8 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827fa0 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827f80 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f828030 <line:85:3, col:10>         | `-ImplicitCastExpr 0x11f828018 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f828000 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827fe0 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f828090 <line:87:3, col:10>         | `-ImplicitCastExpr 0x11f828078 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f828060 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f828040 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f8280f0 <line:89:3, col:10>         | `-ImplicitCastExpr 0x11f8280d8 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f8280c0 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f8280a0 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f828150 <line:91:3, col:10>         | `-ImplicitCastExpr 0x11f828138 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f828120 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f828100 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f8281b0 <line:93:3, col:10>         | `-ImplicitCastExpr 0x11f828198 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f828180 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f828160 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f828210 <line:95:3, col:10>         | `-ImplicitCastExpr 0x11f8281f8 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f8281e0 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f8281c0 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f828270 <line:97:3, col:10>         | `-ImplicitCastExpr 0x11f828258 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f828240 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f828220 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f8282d0 <line:99:3, col:10>         | `-ImplicitCastExpr 0x11f8282b8 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f8282a0 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f828280 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f828330 <line:101:3, col:10>         | `-ImplicitCastExpr 0x11f828318 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f828300 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f8282e0 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f828390 <line:103:3, col:10>         | `-ImplicitCastExpr 0x11f828378 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f828360 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f828340 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f8283f0 <line:105:3, col:10>         | `-ImplicitCastExpr 0x11f8283d8 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f8283c0 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f8283a0 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f828450 <line:107:3, col:10>         | `-ImplicitCastExpr 0x11f828438 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f828420 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f828400 <col:10> 'char[4]' lvalue \"STR\"         `-DefaultStmt 0x11f8284c0 <line:108:2, line:109:10>           `-ReturnStmt 0x11f8284b0 <col:3, col:10>             `-ImplicitCastExpr 0x11f828498 <col:10> 'const char *' <NoOp>               `-ImplicitCastExpr 0x11f828480 <col:10> 'char *' <ArrayToPointerDecay>                 `-StringLiteral 0x11f828460 <col:10> 'char[4]' lvalue \"STR\" ","21083":"`-FunctionDecl 0x14c142700  col:2 implicit used exit 'void (int) __attribute__((noreturn))' extern   |-ParmVarDecl 0x14c143000 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x14c1427a8 <<invalid sloc>> Implicit 869 ","20542":"`-FunctionDecl 0x132013540  col:20 implicit used tolower 'int (int)' extern   |-ParmVarDecl 0x132013640 <<invalid sloc>> <invalid sloc> 'int'   |-BuiltinAttr 0x1320135e8 <<invalid sloc>> Implicit 932   |-NoThrowAttr 0x1320136b0 <col:20> Implicit   `-PureAttr 0x1320136d8 <col:20> Implicit ","20441":"`-FunctionDecl 0x146808368  line:1:35 lookup_neigh_params 'struct neigh_parms *(struct neigh_table *, int)' static inline   |-ParmVarDecl 0x1461286e8 <col:55, col:75> col:75 used tbl 'struct neigh_table *'   |-ParmVarDecl 0x146128768 <line:2:13, col:17> col:17 used ifindex 'int'   `-CompoundStmt 0x146808ad0 <line:3:1, line:12:1>     |-DeclStmt 0x146808560 <line:4:2, col:23>     | `-VarDecl 0x1468084f8 <col:2, col:22> col:22 used p 'struct neigh_parms *'     |-ForStmt 0x146808a38 <line:6:2, line:9:11>     | |-BinaryOperator 0x146808610 <line:6:7, col:17> 'struct neigh_parms *' contains-errors '='     | | |-DeclRefExpr 0x146808578 <col:7> 'struct neigh_parms *' lvalue Var 0x1468084f8 'p' 'struct neigh_parms *'     | | `-UnaryOperator 0x1468085f8 <col:11, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x1468085d0 <col:12, col:17> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x146808598 <col:12> 'struct neigh_table *' lvalue ParmVar 0x1461286e8 'tbl' 'struct neigh_table *'     | |-<<<NULL>>>     | |-ImplicitCastExpr 0x146808650 <col:24> 'struct neigh_parms *' <LValueToRValue>     | | `-DeclRefExpr 0x146808630 <col:24> 'struct neigh_parms *' lvalue Var 0x1468084f8 'p' 'struct neigh_parms *'     | |-BinaryOperator 0x1468086e8 <col:27, col:34> 'struct neigh_parms *' contains-errors '='     | | |-DeclRefExpr 0x146808668 <col:27> 'struct neigh_parms *' lvalue Var 0x1468084f8 'p' 'struct neigh_parms *'     | | `-RecoveryExpr 0x1468086c0 <col:31, col:34> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x146808688 <col:31> 'struct neigh_parms *' lvalue Var 0x1468084f8 'p' 'struct neigh_parms *'     | `-IfStmt 0x146808a18 <line:7:3, line:9:11>     |   |-BinaryOperator 0x1468089b0 <line:7:7, line:8:27> 'int' contains-errors '||'     |   | |-ParenExpr 0x146808870 <line:7:7, col:44> 'int' contains-errors     |   | | `-BinaryOperator 0x146808850 <col:8, col:37> 'int' contains-errors '&&'     |   | |   |-RecoveryExpr 0x146808740 <col:8, col:11> '<dependent type>' contains-errors lvalue     |   | |   | `-DeclRefExpr 0x146808708 <col:8> 'struct neigh_parms *' lvalue Var 0x1468084f8 'p' 'struct neigh_parms *'     |   | |   `-BinaryOperator 0x146808830 <col:18, col:37> 'int' contains-errors '=='     |   | |     |-CXXDependentScopeMemberExpr 0x1468087c8 <col:18, col:26> '<dependent type>' contains-errors lvalue ->ifindex     |   | |     | `-RecoveryExpr 0x1468087a0 <col:18, col:21> '<dependent type>' contains-errors lvalue     |   | |     |   `-DeclRefExpr 0x146808768 <col:18> 'struct neigh_parms *' lvalue Var 0x1468084f8 'p' 'struct neigh_parms *'     |   | |     `-DeclRefExpr 0x146808810 <col:37> 'int' lvalue ParmVar 0x146128768 'ifindex' 'int'     |   | `-ParenExpr 0x146808990 <line:8:7, col:27> 'int' contains-errors     |   |   `-BinaryOperator 0x146808970 <col:8, col:20> 'int' contains-errors '&&'     |   |     |-UnaryOperator 0x146808908 <col:8, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow     |   |     | `-ImplicitCastExpr 0x1468088f0 <col:9, col:12> '<dependent type>' contains-errors <LValueToRValue>     |   |     |   `-RecoveryExpr 0x1468088c8 <col:9, col:12> '<dependent type>' contains-errors lvalue     |   |     |     `-DeclRefExpr 0x146808890 <col:9> 'struct neigh_parms *' lvalue Var 0x1468084f8 'p' 'struct neigh_parms *'     |   |     `-UnaryOperator 0x146808958 <col:19, col:20> 'int' prefix '!' cannot overflow     |   |       `-ImplicitCastExpr 0x146808940 <col:20> 'int' <LValueToRValue>     |   |         `-DeclRefExpr 0x146808920 <col:20> 'int' lvalue ParmVar 0x146128768 'ifindex' 'int'     |   `-ReturnStmt 0x146808a08 <line:9:4, col:11>     |     `-ImplicitCastExpr 0x1468089f0 <col:11> 'struct neigh_parms *' <LValueToRValue>     |       `-DeclRefExpr 0x1468089d0 <col:11> 'struct neigh_parms *' lvalue Var 0x1468084f8 'p' 'struct neigh_parms *'     `-ReturnStmt 0x146808ac0 <line:11:2, col:9>       `-RecoveryExpr 0x146808aa0 <col:9> '<dependent type>' contains-errors lvalue ","20839":"`-FunctionDecl 0x12a928318  line:1:1 referenced invalid xbstream_open 'int (int *, const char *, int *)'   |-ParmVarDecl 0x12a928128 <col:15, col:26> col:26 invalid ctxt 'int *'   |-ParmVarDecl 0x12a9281a8 <col:32, col:44> col:44 used path 'const char *'   |-ParmVarDecl 0x12a928228 <col:50, col:59> col:59 invalid mystat 'int *'   `-CompoundStmt 0x12b009240 <line:2:1, line:56:1>     |-CallExpr 0x12a928708 <line:11:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12a9285e0 <col:2> 'int ()' Function 0x12a928528 'xb_ad' 'int ()'     | `-BinaryOperator 0x12a9286e8 <col:8, col:27> 'int' contains-errors '!='     |   |-CXXDependentScopeMemberExpr 0x12a928620 <col:8, col:14> '<dependent type>' contains-errors lvalue ->pipe_ctxt     |   | `-RecoveryExpr 0x12a928600 <col:8> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x12a9286c8 <col:27> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12b008aa0 <line:17:2, line:22:2>     | |-RecoveryExpr 0x12b0088d8 <line:17:6, col:32> '_Bool' contains-errors     | `-CompoundStmt 0x12b008a88 <col:38, line:22:2>     |   `-IfStmt 0x12b008a68 <line:19:3, line:21:3>     |     |-RecoveryExpr 0x12b008a38 <line:19:7, col:33> '_Bool' contains-errors     |     `-CompoundStmt 0x12b008a58 <col:39, line:21:3>     |-IfStmt 0x12b008fb0 <line:36:2, line:39:2>     | |-RecoveryExpr 0x12b008d20 <line:36:6, col:23> '_Bool' contains-errors     | `-CompoundStmt 0x12b008f90 <col:29, line:39:2>     |   |-CallExpr 0x12b008ee8 <line:37:3, col:12> 'int'     |   | |-ImplicitCastExpr 0x12b008ed0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x12b008e20 <col:3> 'int ()' Function 0x12b008d68 'msg' 'int ()'     |   | `-ImplicitCastExpr 0x12b008f10 <col:7> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x12b008e80 <col:7> 'char[4]' lvalue \"STR\"     |   `-GotoStmt 0x12b008f78 <line:38:3, col:8> 'err' 0x12b008f28     `-LabelStmt 0x12b009120 <line:48:1, line:52:2> 'err'       `-IfStmt 0x12b009100 <line:49:2, line:52:2>         |-RecoveryExpr 0x12b008fd0 <line:49:6, col:19> '_Bool' contains-errors         `-CompoundStmt 0x12b0090f0 <col:30, line:52:2> ","20380":"`-FunctionDecl 0x14d00df58  line:1:1 invalid TPMI_RH_AC_Unmarshal 'int (int *, int **, int *)'   |-ParmVarDecl 0x14d00dd28 <col:22, col:34> col:34 invalid target 'int *'   |-ParmVarDecl 0x14d00dde0 <col:42, col:49> col:49 invalid buffer 'int **'   |-ParmVarDecl 0x14d00de60 <col:57, col:64> col:64 invalid size 'int *'   `-CompoundStmt 0x14e808cc8 <line:2:1, line:15:1>     |-IfStmt 0x14d00e2e8 <line:5:5, line:7:5>     | |-BinaryOperator 0x14d00e0a8 <line:5:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x14d00e068 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14d00e088 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14d00e2d8 <col:31, line:7:5>     |-IfStmt 0x14e808c60 <line:8:5, line:13:5>     | |-BinaryOperator 0x14d00e398 <line:8:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x14d00e358 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14d00e378 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14e808c48 <col:31, line:13:5>     |   `-IfStmt 0x14e808c28 <line:10:2, line:12:2>     |     |-RecoveryExpr 0x14d00e3d0 <line:10:6> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x14e808c18 <col:15, line:12:2>     `-ReturnStmt 0x14e808cb8 <line:14:5, col:12>       `-RecoveryExpr 0x14e808c98 <col:12> '<dependent type>' contains-errors lvalue ","20647":"`-FunctionDecl 0x13e1284c0  line:1:13 invalid manager_invoke_notify_message 'void (int *, int *, int, const char *, int, int *)' static   |-ParmVarDecl 0x13e128128 <col:43, col:52> col:52 invalid m 'int *'   |-ParmVarDecl 0x13e1281a8 <col:55, col:61> col:61 invalid u 'int *'   |-ParmVarDecl 0x13e128228 <col:64, col:70> col:70 invalid pid 'int'   |-ParmVarDecl 0x13e1282a8 <col:75, col:87> col:87 used buf 'const char *'   |-ParmVarDecl 0x13e128328 <col:92, col:99> col:99 invalid n 'int'   |-ParmVarDecl 0x13e1283a8 <col:102, col:109> col:109 invalid fds 'int *'   `-CompoundStmt 0x13e809c40 <col:114, line:19:1>     |-CallExpr 0x13e128730 <line:4:9, col:17> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13e1286f0 <col:9> 'int ()' Function 0x13e128638 'assert' 'int ()'     | `-RecoveryExpr 0x13e128710 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13e128798 <line:5:9, col:17> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13e128758 <col:9> 'int ()' Function 0x13e128638 'assert' 'int ()'     | `-RecoveryExpr 0x13e128778 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13e809248 <line:6:9, col:19> 'int'     | |-ImplicitCastExpr 0x13e809230 <col:9> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13e1287c0 <col:9> 'int ()' Function 0x13e128638 'assert' 'int ()'     | `-ImplicitCastExpr 0x13e809270 <col:16> 'const char *' <LValueToRValue>     |   `-DeclRefExpr 0x13e1287e0 <col:16> 'const char *' lvalue ParmVar 0x13e1282a8 'buf' 'const char *'     |-CallExpr 0x13e809308 <line:7:9, col:21> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13e809288 <col:9> 'int ()' Function 0x13e128638 'assert' 'int ()'     | `-BinaryOperator 0x13e8092e8 <col:16, col:20> 'int' contains-errors '>'     |   |-RecoveryExpr 0x13e8092a8 <col:16> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x13e8092c8 <col:20> 'int' 0     |-IfStmt 0x13e809728 <line:10:9, line:13:9>     | |-UnaryOperator 0x13e8095a8 <line:10:13, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13e809590 <col:14> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x13e809570 <col:14> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13e809708 <col:20, line:13:9>     |   |-CallExpr 0x13e8096d8 <line:11:17, col:25> 'int'     |   | `-ImplicitCastExpr 0x13e8096c0 <col:17> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x13e8096a0 <col:17> 'int ()' Function 0x13e8095e8 'log_oom' 'int ()'     |   `-ReturnStmt 0x13e8096f8 <line:12:17>     `-IfStmt 0x13e809c10 <line:15:9, line:18:40> has_else       |-CXXDependentScopeMemberExpr 0x13e809890 <line:15:13, col:29> '<dependent type>' contains-errors lvalue ->notify_message       | `-CallExpr 0x13e809868 <col:13, col:26> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x13e809828 <col:13> 'int ()' Function 0x13e809770 'UNIT_VTABLE' 'int ()'       |   `-RecoveryExpr 0x13e809848 <col:25> '<dependent type>' contains-errors lvalue       |-CallExpr 0x13e809a60 <line:16:17, col:65> '<dependent type>' contains-errors       | |-CXXDependentScopeMemberExpr 0x13e809940 <col:17, col:33> '<dependent type>' contains-errors lvalue ->notify_message       | | `-CallExpr 0x13e809918 <col:17, col:30> '<dependent type>' contains-errors       | |   |-DeclRefExpr 0x13e8098d8 <col:17> 'int ()' Function 0x13e809770 'UNIT_VTABLE' 'int ()'       | |   `-RecoveryExpr 0x13e8098f8 <col:29> '<dependent type>' contains-errors lvalue       | |-RecoveryExpr 0x13e809988 <col:48> '<dependent type>' contains-errors lvalue       | |-RecoveryExpr 0x13e8099a8 <col:51> '<dependent type>' contains-errors lvalue       | |-RecoveryExpr 0x13e809a40 <col:56> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x13e8099e0 <col:62> '<dependent type>' contains-errors lvalue       `-CallExpr 0x13e809be0 <line:18:17, col:40> '<dependent type>' contains-errors         |-DeclRefExpr 0x13e809b80 <col:17> 'int ()' Function 0x13e809ac8 'log_unit_debug' 'int ()'         |-RecoveryExpr 0x13e809ba0 <col:32> '<dependent type>' contains-errors lvalue         `-StringLiteral 0x13e809bc0 <col:35> 'char[4]' lvalue \"STR\" ","20872":"`-FunctionDecl 0x11e928288  line:1:16 invalid getGeometryRef 'int *(int, const char *)'   |-ParmVarDecl 0x11e9280f0 <col:31, col:35> col:35 used ncid 'int'   |-ParmVarDecl 0x11e928170 <col:41, col:54> col:54 used varName 'const char *'   `-CompoundStmt 0x11e9286f0 <line:2:5, line:6:5>     |-DeclStmt 0x11e9283e0 <line:3:9, col:22>     | `-VarDecl 0x11e928358 <col:9, col:21> col:13 used varId 'int' cinit     |   `-IntegerLiteral 0x11e9283c0 <col:21> 'int' 0     |-CallExpr 0x11e928638 <line:4:9, col:43> 'int'     | |-ImplicitCastExpr 0x11e928620 <col:9> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x11e928550 <col:9> 'int ()' Function 0x11e928498 'nc_inq_varid' 'int ()'     | |-ImplicitCastExpr 0x11e928670 <col:22> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x11e928570 <col:22> 'int' lvalue ParmVar 0x11e9280f0 'ncid' 'int'     | |-ImplicitCastExpr 0x11e928688 <col:28> 'const char *' <LValueToRValue>     | | `-DeclRefExpr 0x11e928590 <col:28> 'const char *' lvalue ParmVar 0x11e928170 'varName' 'const char *'     | `-UnaryOperator 0x11e9285d0 <col:37, col:38> 'int *' prefix '&' cannot overflow     |   `-DeclRefExpr 0x11e9285b0 <col:38> 'int' lvalue Var 0x11e928358 'varId' 'int'     |-ReturnStmt 0x11e9286d8 <line:5:9, col:16>     | `-RecoveryExpr 0x11e9286b8 <col:16> '<dependent type>' contains-errors lvalue     `-NullStmt 0x11e9286e8 <col:42> ","20593":"`-FunctionDecl 0x13c80e0c0  line:1:6 invalid markPredictionBlockBoundary 'void (int *, int, int, int, int, int)'   |-ParmVarDecl 0x13c80dd28 <col:34, col:47> col:47 referenced invalid img 'int *'   |-ParmVarDecl 0x13c80dda8 <col:52, col:56> col:56 used x0 'int'   |-ParmVarDecl 0x13c80de28 <col:59, col:63> col:63 used y0 'int'   |-ParmVarDecl 0x13c80dea8 <line:2:34, col:38> col:38 used log2CbSize 'int'   |-ParmVarDecl 0x13c80df28 <line:3:34, col:38> col:38 used filterLeftCbEdge 'int'   |-ParmVarDecl 0x13c80dfa8 <col:56, col:60> col:60 used filterTopCbEdge 'int'   `-CompoundStmt 0x13d8090b8 <line:4:1, line:62:1>     |-CallExpr 0x13c8278b8 <line:5:3, line:6:56> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13c80e2f0 <line:5:3> 'int ()' Function 0x13c80e238 'logtrace' 'int ()'     | |-RecoveryExpr 0x13c827898 <col:12> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x13c80e370 <col:23> 'char[4]' lvalue \"STR\"     | |-DeclRefExpr 0x13c80e390 <col:29> 'int' lvalue ParmVar 0x13c80dda8 'x0' 'int'     | |-DeclRefExpr 0x13c80e3b0 <col:32> 'int' lvalue ParmVar 0x13c80de28 'y0' 'int'     | |-DeclRefExpr 0x13c80e3d0 <line:6:12> 'int' lvalue ParmVar 0x13c80dea8 'log2CbSize' 'int'     | |-DeclRefExpr 0x13c827800 <col:24> 'int' lvalue ParmVar 0x13c80df28 'filterLeftCbEdge' 'int'     | `-DeclRefExpr 0x13c827820 <col:41> 'int' lvalue ParmVar 0x13c80dfa8 'filterTopCbEdge' 'int'     |-DeclStmt 0x13c827fa8 <line:8:3, col:52>     | |-EnumDecl 0x13c827910 <col:3, col:8> col:8 PartMode     | `-VarDecl 0x13c827a28 <col:3, col:17> col:17 invalid partMode 'enum PartMode'     |-DeclStmt 0x13c8280b8 <line:10:3, col:29>     | `-VarDecl 0x13c827fd8 <col:3, col:19> col:7 used cbSize 'int' cinit     |   `-BinaryOperator 0x13c828098 <col:16, col:19> 'int' '<<'     |     |-IntegerLiteral 0x13c828040 <col:16> 'int' 1     |     `-ImplicitCastExpr 0x13c828080 <col:19> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x13c828060 <col:19> 'int' lvalue ParmVar 0x13c80dea8 'log2CbSize' 'int'     |-DeclStmt 0x13c828228 <line:11:3, col:34>     | `-VarDecl 0x13c8280e8 <col:3, col:33> col:7 used cbSize2 'int' cinit     |   `-BinaryOperator 0x13c828208 <col:17, col:33> 'int' '<<'     |     |-IntegerLiteral 0x13c828150 <col:17> 'int' 1     |     `-ParenExpr 0x13c8281e8 <col:20, col:33> 'int'     |       `-BinaryOperator 0x13c8281c8 <col:21, col:32> 'int' '-'     |         |-ImplicitCastExpr 0x13c8281b0 <col:21> 'int' <LValueToRValue>     |         | `-DeclRefExpr 0x13c828170 <col:21> 'int' lvalue ParmVar 0x13c80dea8 'log2CbSize' 'int'     |         `-IntegerLiteral 0x13c828190 <col:32> 'int' 1     |-DeclStmt 0x13c828398 <line:12:3, col:34>     | `-VarDecl 0x13c828258 <col:3, col:33> col:7 used cbSize4 'int' cinit     |   `-BinaryOperator 0x13c828378 <col:17, col:33> 'int' '<<'     |     |-IntegerLiteral 0x13c8282c0 <col:17> 'int' 1     |     `-ParenExpr 0x13c828358 <col:20, col:33> 'int'     |       `-BinaryOperator 0x13c828338 <col:21, col:32> 'int' '-'     |         |-ImplicitCastExpr 0x13c828320 <col:21> 'int' <LValueToRValue>     |         | `-DeclRefExpr 0x13c8282e0 <col:21> 'int' lvalue ParmVar 0x13c80dea8 'log2CbSize' 'int'     |         `-IntegerLiteral 0x13c828300 <col:32> 'int' 2     `-SwitchStmt 0x13c8283e8 <line:14:3, line:61:3>       |-ImplicitCastExpr 0x13c8283d0 <line:14:11> '<dependent type>' contains-errors <LValueToRValue>       | `-RecoveryExpr 0x13c8283b0 <col:11> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x13d809030 <col:21, line:61:3>         |-ForStmt 0x13c123300 <line:16:5, line:19:5>         | |-DeclStmt 0x13c8284c8 <line:16:10, col:17>         | | `-VarDecl 0x13c828440 <col:10, col:16> col:14 used k 'int' cinit         | |   `-IntegerLiteral 0x13c8284a8 <col:16> 'int' 0         | |-<<<NULL>>>         | |-BinaryOperator 0x13c828550 <col:18, col:20> 'int' '<'         | | |-ImplicitCastExpr 0x13c828520 <col:18> 'int' <LValueToRValue>         | | | `-DeclRefExpr 0x13c8284e0 <col:18> 'int' lvalue Var 0x13c828440 'k' 'int'         | | `-ImplicitCastExpr 0x13c828538 <col:20> 'int' <LValueToRValue>         | |   `-DeclRefExpr 0x13c828500 <col:20> 'int' lvalue Var 0x13c827fd8 'cbSize' 'int'         | |-UnaryOperator 0x13c828590 <col:27, col:28> 'int' postfix '++'         | | `-DeclRefExpr 0x13c828570 <col:27> 'int' lvalue Var 0x13c828440 'k' 'int'         | `-CompoundStmt 0x13c1232e0 <col:32, line:19:5>         |   |-CallExpr 0x13c122f10 <line:17:7, col:66> '<dependent type>' contains-errors         |   | |-CXXDependentScopeMemberExpr 0x13c8285f0 <col:7, col:12> '<dependent type>' contains-errors lvalue ->set_deblk_flags         |   | | `-RecoveryExpr 0x13c8285c8 <col:7> '<dependent type>' contains-errors lvalue         |   | |   `-DeclRefExpr 0x13c8285a8 <col:7> 'int *' lvalue ParmVar 0x13c80dd28 'img' 'int *'         |   | |-BinaryOperator 0x13c122e80 <col:28, col:31> 'int' '+'         |   | | |-ImplicitCastExpr 0x13c122e50 <col:28> 'int' <LValueToRValue>         |   | | | `-DeclRefExpr 0x13c828638 <col:28> 'int' lvalue ParmVar 0x13c80dda8 'x0' 'int'         |   | | `-ImplicitCastExpr 0x13c122e68 <col:31> 'int' <LValueToRValue>         |   | |   `-DeclRefExpr 0x13c828658 <col:31> 'int' lvalue Var 0x13c8280e8 'cbSize2' 'int'         |   | |-BinaryOperator 0x13c122ed0 <col:39, col:42> 'int' '+'         |   | | |-ImplicitCastExpr 0x13c122ea0 <col:39> 'int' <LValueToRValue>         |   | | | `-DeclRefExpr 0x13c8286c8 <col:39> 'int' lvalue ParmVar 0x13c80de28 'y0' 'int'         |   | | `-ImplicitCastExpr 0x13c122eb8 <col:42> 'int' <LValueToRValue>         |   | |   `-DeclRefExpr 0x13c8286e8 <col:42> 'int' lvalue Var 0x13c828440 'k' 'int'         |   | `-RecoveryExpr 0x13c122ef0 <col:45> '<dependent type>' contains-errors lvalue         |   `-CallExpr 0x13c1232a8 <line:18:7, col:66> '<dependent type>' contains-errors         |     |-CXXDependentScopeMemberExpr 0x13c122f90 <col:7, col:12> '<dependent type>' contains-errors lvalue ->set_deblk_flags         |     | `-RecoveryExpr 0x13c122f68 <col:7> '<dependent type>' contains-errors lvalue         |     |   `-DeclRefExpr 0x13c122f48 <col:7> 'int *' lvalue ParmVar 0x13c80dd28 'img' 'int *'         |     |-BinaryOperator 0x13c123218 <col:28, col:31> 'int' '+'         |     | |-ImplicitCastExpr 0x13c1231e8 <col:28> 'int' <LValueToRValue>         |     | | `-DeclRefExpr 0x13c122fd8 <col:28> 'int' lvalue ParmVar 0x13c80dda8 'x0' 'int'         |     | `-ImplicitCastExpr 0x13c123200 <col:31> 'int' <LValueToRValue>         |     |   `-DeclRefExpr 0x13c122ff8 <col:31> 'int' lvalue Var 0x13c828440 'k' 'int'         |     |-BinaryOperator 0x13c123268 <col:33, col:36> 'int' '+'         |     | |-ImplicitCastExpr 0x13c123238 <col:33> 'int' <LValueToRValue>         |     | | `-DeclRefExpr 0x13c123068 <col:33> 'int' lvalue ParmVar 0x13c80de28 'y0' 'int'         |     | `-ImplicitCastExpr 0x13c123250 <col:36> 'int' <LValueToRValue>         |     |   `-DeclRefExpr 0x13c123088 <col:36> 'int' lvalue Var 0x13c8280e8 'cbSize2' 'int'         |     `-RecoveryExpr 0x13c123288 <col:45> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x13c123338 <line:20:5>         |-ForStmt 0x13c123888 <line:23:5, line:25:5>         | |-DeclStmt 0x13c1233f8 <line:23:10, col:17>         | | `-VarDecl 0x13c123370 <col:10, col:16> col:14 used k 'int' cinit         | |   `-IntegerLiteral 0x13c1233d8 <col:16> 'int' 0         | |-<<<NULL>>>         | |-BinaryOperator 0x13c123480 <col:18, col:20> 'int' '<'         | | |-ImplicitCastExpr 0x13c123450 <col:18> 'int' <LValueToRValue>         | | | `-DeclRefExpr 0x13c123410 <col:18> 'int' lvalue Var 0x13c123370 'k' 'int'         | | `-ImplicitCastExpr 0x13c123468 <col:20> 'int' <LValueToRValue>         | |   `-DeclRefExpr 0x13c123430 <col:20> 'int' lvalue Var 0x13c827fd8 'cbSize' 'int'         | |-UnaryOperator 0x13c1234c0 <col:27, col:28> 'int' postfix '++'         | | `-DeclRefExpr 0x13c1234a0 <col:27> 'int' lvalue Var 0x13c123370 'k' 'int'         | `-CompoundStmt 0x13c123870 <col:32, line:25:5>         |   `-CallExpr 0x13c123838 <line:24:7, col:66> '<dependent type>' contains-errors         |     |-CXXDependentScopeMemberExpr 0x13c123520 <col:7, col:12> '<dependent type>' contains-errors lvalue ->set_deblk_flags         |     | `-RecoveryExpr 0x13c1234f8 <col:7> '<dependent type>' contains-errors lvalue         |     |   `-DeclRefExpr 0x13c1234d8 <col:7> 'int *' lvalue ParmVar 0x13c80dd28 'img' 'int *'         |     |-BinaryOperator 0x13c1237a8 <col:28, col:31> 'int' '+'         |     | |-ImplicitCastExpr 0x13c123778 <col:28> 'int' <LValueToRValue>         |     | | `-DeclRefExpr 0x13c123568 <col:28> 'int' lvalue ParmVar 0x13c80dda8 'x0' 'int'         |     | `-ImplicitCastExpr 0x13c123790 <col:31> 'int' <LValueToRValue>         |     |   `-DeclRefExpr 0x13c123588 <col:31> 'int' lvalue Var 0x13c8280e8 'cbSize2' 'int'         |     |-BinaryOperator 0x13c1237f8 <col:39, col:42> 'int' '+'         |     | |-ImplicitCastExpr 0x13c1237c8 <col:39> 'int' <LValueToRValue>         |     | | `-DeclRefExpr 0x13c1235f8 <col:39> 'int' lvalue ParmVar 0x13c80de28 'y0' 'int'         |     | `-ImplicitCastExpr 0x13c1237e0 <col:42> 'int' <LValueToRValue>         |     |   `-DeclRefExpr 0x13c123618 <col:42> 'int' lvalue Var 0x13c123370 'k' 'int'         |     `-RecoveryExpr 0x13c123818 <col:45> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x13c1238c0 <line:26:5>         |-ForStmt 0x13c123e18 <line:29:5, line:31:5>         | |-DeclStmt 0x13c123980 <line:29:10, col:17>         | | `-VarDecl 0x13c1238f8 <col:10, col:16> col:14 used k 'int' cinit         | |   `-IntegerLiteral 0x13c123960 <col:16> 'int' 0         | |-<<<NULL>>>         | |-BinaryOperator 0x13c123a08 <col:18, col:20> 'int' '<'         | | |-ImplicitCastExpr 0x13c1239d8 <col:18> 'int' <LValueToRValue>         | | | `-DeclRefExpr 0x13c123998 <col:18> 'int' lvalue Var 0x13c1238f8 'k' 'int'         | | `-ImplicitCastExpr 0x13c1239f0 <col:20> 'int' <LValueToRValue>         | |   `-DeclRefExpr 0x13c1239b8 <col:20> 'int' lvalue Var 0x13c827fd8 'cbSize' 'int'         | |-UnaryOperator 0x13c123a48 <col:27, col:28> 'int' postfix '++'         | | `-DeclRefExpr 0x13c123a28 <col:27> 'int' lvalue Var 0x13c1238f8 'k' 'int'         | `-CompoundStmt 0x13c123e00 <col:32, line:31:5>         |   `-CallExpr 0x13c123dc0 <line:30:7, col:66> '<dependent type>' contains-errors         |     |-CXXDependentScopeMemberExpr 0x13c123aa8 <col:7, col:12> '<dependent type>' contains-errors lvalue ->set_deblk_flags         |     | `-RecoveryExpr 0x13c123a80 <col:7> '<dependent type>' contains-errors lvalue         |     |   `-DeclRefExpr 0x13c123a60 <col:7> 'int *' lvalue ParmVar 0x13c80dd28 'img' 'int *'         |     |-BinaryOperator 0x13c123d30 <col:28, col:31> 'int' '+'         |     | |-ImplicitCastExpr 0x13c123d00 <col:28> 'int' <LValueToRValue>         |     | | `-DeclRefExpr 0x13c123af0 <col:28> 'int' lvalue ParmVar 0x13c80dda8 'x0' 'int'         |     | `-ImplicitCastExpr 0x13c123d18 <col:31> 'int' <LValueToRValue>         |     |   `-DeclRefExpr 0x13c123b10 <col:31> 'int' lvalue Var 0x13c1238f8 'k' 'int'         |     |-BinaryOperator 0x13c123d80 <col:33, col:36> 'int' '+'         |     | |-ImplicitCastExpr 0x13c123d50 <col:33> 'int' <LValueToRValue>         |     | | `-DeclRefExpr 0x13c123b80 <col:33> 'int' lvalue ParmVar 0x13c80de28 'y0' 'int'         |     | `-ImplicitCastExpr 0x13c123d68 <col:36> 'int' <LValueToRValue>         |     |   `-DeclRefExpr 0x13c123ba0 <col:36> 'int' lvalue Var 0x13c8280e8 'cbSize2' 'int'         |     `-RecoveryExpr 0x13c123da0 <col:45> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x13c123e50 <line:32:5>         |-ForStmt 0x13c1243a0 <line:35:5, line:37:5>         | |-DeclStmt 0x13c123f10 <line:35:10, col:17>         | | `-VarDecl 0x13c123e88 <col:10, col:16> col:14 used k 'int' cinit         | |   `-IntegerLiteral 0x13c123ef0 <col:16> 'int' 0         | |-<<<NULL>>>         | |-BinaryOperator 0x13c123f98 <col:18, col:20> 'int' '<'         | | |-ImplicitCastExpr 0x13c123f68 <col:18> 'int' <LValueToRValue>         | | | `-DeclRefExpr 0x13c123f28 <col:18> 'int' lvalue Var 0x13c123e88 'k' 'int'         | | `-ImplicitCastExpr 0x13c123f80 <col:20> 'int' <LValueToRValue>         | |   `-DeclRefExpr 0x13c123f48 <col:20> 'int' lvalue Var 0x13c827fd8 'cbSize' 'int'         | |-UnaryOperator 0x13c123fd8 <col:27, col:28> 'int' postfix '++'         | | `-DeclRefExpr 0x13c123fb8 <col:27> 'int' lvalue Var 0x13c123e88 'k' 'int'         | `-CompoundStmt 0x13c124388 <col:32, line:37:5>         |   `-CallExpr 0x13c124350 <line:36:7, col:66> '<dependent type>' contains-errors         |     |-CXXDependentScopeMemberExpr 0x13c124038 <col:7, col:12> '<dependent type>' contains-errors lvalue ->set_deblk_flags         |     | `-RecoveryExpr 0x13c124010 <col:7> '<dependent type>' contains-errors lvalue         |     |   `-DeclRefExpr 0x13c123ff0 <col:7> 'int *' lvalue ParmVar 0x13c80dd28 'img' 'int *'         |     |-BinaryOperator 0x13c1242c0 <col:28, col:31> 'int' '+'         |     | |-ImplicitCastExpr 0x13c124290 <col:28> 'int' <LValueToRValue>         |     | | `-DeclRefExpr 0x13c124080 <col:28> 'int' lvalue ParmVar 0x13c80dda8 'x0' 'int'         |     | `-ImplicitCastExpr 0x13c1242a8 <col:31> 'int' <LValueToRValue>         |     |   `-DeclRefExpr 0x13c1240a0 <col:31> 'int' lvalue Var 0x13c828258 'cbSize4' 'int'         |     |-BinaryOperator 0x13c124310 <col:39, col:42> 'int' '+'         |     | |-ImplicitCastExpr 0x13c1242e0 <col:39> 'int' <LValueToRValue>         |     | | `-DeclRefExpr 0x13c124110 <col:39> 'int' lvalue ParmVar 0x13c80de28 'y0' 'int'         |     | `-ImplicitCastExpr 0x13c1242f8 <col:42> 'int' <LValueToRValue>         |     |   `-DeclRefExpr 0x13c124130 <col:42> 'int' lvalue Var 0x13c123e88 'k' 'int'         |     `-RecoveryExpr 0x13c124330 <col:45> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x13c1243d8 <line:38:5>         |-ForStmt 0x13c1249f0 <line:41:5, line:43:5>         | |-DeclStmt 0x13c124498 <line:41:10, col:17>         | | `-VarDecl 0x13c124410 <col:10, col:16> col:14 used k 'int' cinit         | |   `-IntegerLiteral 0x13c124478 <col:16> 'int' 0         | |-<<<NULL>>>         | |-BinaryOperator 0x13c124520 <col:18, col:20> 'int' '<'         | | |-ImplicitCastExpr 0x13c1244f0 <col:18> 'int' <LValueToRValue>         | | | `-DeclRefExpr 0x13c1244b0 <col:18> 'int' lvalue Var 0x13c124410 'k' 'int'         | | `-ImplicitCastExpr 0x13c124508 <col:20> 'int' <LValueToRValue>         | |   `-DeclRefExpr 0x13c1244d0 <col:20> 'int' lvalue Var 0x13c827fd8 'cbSize' 'int'         | |-UnaryOperator 0x13c124560 <col:27, col:28> 'int' postfix '++'         | | `-DeclRefExpr 0x13c124540 <col:27> 'int' lvalue Var 0x13c124410 'k' 'int'         | `-CompoundStmt 0x13c1249d8 <col:32, line:43:5>         |   `-CallExpr 0x13c1249a0 <line:42:7, col:74> '<dependent type>' contains-errors         |     |-CXXDependentScopeMemberExpr 0x13c1245c0 <col:7, col:12> '<dependent type>' contains-errors lvalue ->set_deblk_flags         |     | `-RecoveryExpr 0x13c124598 <col:7> '<dependent type>' contains-errors lvalue         |     |   `-DeclRefExpr 0x13c124578 <col:7> 'int *' lvalue ParmVar 0x13c80dd28 'img' 'int *'         |     |-BinaryOperator 0x13c124910 <col:28, col:39> 'int' '+'         |     | |-BinaryOperator 0x13c1248d8 <col:28, col:31> 'int' '+'         |     | | |-ImplicitCastExpr 0x13c1248a8 <col:28> 'int' <LValueToRValue>         |     | | | `-DeclRefExpr 0x13c124608 <col:28> 'int' lvalue ParmVar 0x13c80dda8 'x0' 'int'         |     | | `-ImplicitCastExpr 0x13c1248c0 <col:31> 'int' <LValueToRValue>         |     | |   `-DeclRefExpr 0x13c124628 <col:31> 'int' lvalue Var 0x13c8280e8 'cbSize2' 'int'         |     | `-ImplicitCastExpr 0x13c1248f8 <col:39> 'int' <LValueToRValue>         |     |   `-DeclRefExpr 0x13c124698 <col:39> 'int' lvalue Var 0x13c828258 'cbSize4' 'int'         |     |-BinaryOperator 0x13c124960 <col:47, col:50> 'int' '+'         |     | |-ImplicitCastExpr 0x13c124930 <col:47> 'int' <LValueToRValue>         |     | | `-DeclRefExpr 0x13c1246f0 <col:47> 'int' lvalue ParmVar 0x13c80de28 'y0' 'int'         |     | `-ImplicitCastExpr 0x13c124948 <col:50> 'int' <LValueToRValue>         |     |   `-DeclRefExpr 0x13c124710 <col:50> 'int' lvalue Var 0x13c124410 'k' 'int'         |     `-RecoveryExpr 0x13c124980 <col:53> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x13c124a28 <line:44:5>         |-ForStmt 0x13d808980 <line:47:5, line:49:5>         | |-DeclStmt 0x13c124ae8 <line:47:10, col:17>         | | `-VarDecl 0x13c124a60 <col:10, col:16> col:14 used k 'int' cinit         | |   `-IntegerLiteral 0x13c124ac8 <col:16> 'int' 0         | |-<<<NULL>>>         | |-BinaryOperator 0x13c124b70 <col:18, col:20> 'int' '<'         | | |-ImplicitCastExpr 0x13c124b40 <col:18> 'int' <LValueToRValue>         | | | `-DeclRefExpr 0x13c124b00 <col:18> 'int' lvalue Var 0x13c124a60 'k' 'int'         | | `-ImplicitCastExpr 0x13c124b58 <col:20> 'int' <LValueToRValue>         | |   `-DeclRefExpr 0x13c124b20 <col:20> 'int' lvalue Var 0x13c827fd8 'cbSize' 'int'         | |-UnaryOperator 0x13c124bb0 <col:27, col:28> 'int' postfix '++'         | | `-DeclRefExpr 0x13c124b90 <col:27> 'int' lvalue Var 0x13c124a60 'k' 'int'         | `-CompoundStmt 0x13d808968 <col:32, line:49:5>         |   `-CallExpr 0x13d808930 <line:48:7, col:66> '<dependent type>' contains-errors         |     |-CXXDependentScopeMemberExpr 0x13c124c10 <col:7, col:12> '<dependent type>' contains-errors lvalue ->set_deblk_flags         |     | `-RecoveryExpr 0x13c124be8 <col:7> '<dependent type>' contains-errors lvalue         |     |   `-DeclRefExpr 0x13c124bc8 <col:7> 'int *' lvalue ParmVar 0x13c80dd28 'img' 'int *'         |     |-BinaryOperator 0x13d8088a0 <col:28, col:31> 'int' '+'         |     | |-ImplicitCastExpr 0x13d808870 <col:28> 'int' <LValueToRValue>         |     | | `-DeclRefExpr 0x13c124c58 <col:28> 'int' lvalue ParmVar 0x13c80dda8 'x0' 'int'         |     | `-ImplicitCastExpr 0x13d808888 <col:31> 'int' <LValueToRValue>         |     |   `-DeclRefExpr 0x13c124c78 <col:31> 'int' lvalue Var 0x13c124a60 'k' 'int'         |     |-BinaryOperator 0x13d8088f0 <col:33, col:36> 'int' '+'         |     | |-ImplicitCastExpr 0x13d8088c0 <col:33> 'int' <LValueToRValue>         |     | | `-DeclRefExpr 0x13c124ce8 <col:33> 'int' lvalue ParmVar 0x13c80de28 'y0' 'int'         |     | `-ImplicitCastExpr 0x13d8088d8 <col:36> 'int' <LValueToRValue>         |     |   `-DeclRefExpr 0x13c124d08 <col:36> 'int' lvalue Var 0x13c828258 'cbSize4' 'int'         |     `-RecoveryExpr 0x13d808910 <col:45> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x13d8089b8 <line:50:5>         |-ForStmt 0x13d808fd0 <line:53:5, line:55:5>         | |-DeclStmt 0x13d808a78 <line:53:10, col:17>         | | `-VarDecl 0x13d8089f0 <col:10, col:16> col:14 used k 'int' cinit         | |   `-IntegerLiteral 0x13d808a58 <col:16> 'int' 0         | |-<<<NULL>>>         | |-BinaryOperator 0x13d808b00 <col:18, col:20> 'int' '<'         | | |-ImplicitCastExpr 0x13d808ad0 <col:18> 'int' <LValueToRValue>         | | | `-DeclRefExpr 0x13d808a90 <col:18> 'int' lvalue Var 0x13d8089f0 'k' 'int'         | | `-ImplicitCastExpr 0x13d808ae8 <col:20> 'int' <LValueToRValue>         | |   `-DeclRefExpr 0x13d808ab0 <col:20> 'int' lvalue Var 0x13c827fd8 'cbSize' 'int'         | |-UnaryOperator 0x13d808b40 <col:27, col:28> 'int' postfix '++'         | | `-DeclRefExpr 0x13d808b20 <col:27> 'int' lvalue Var 0x13d8089f0 'k' 'int'         | `-CompoundStmt 0x13d808fb8 <col:32, line:55:5>         |   `-CallExpr 0x13d808f80 <line:54:7, col:74> '<dependent type>' contains-errors         |     |-CXXDependentScopeMemberExpr 0x13d808ba0 <col:7, col:12> '<dependent type>' contains-errors lvalue ->set_deblk_flags         |     | `-RecoveryExpr 0x13d808b78 <col:7> '<dependent type>' contains-errors lvalue         |     |   `-DeclRefExpr 0x13d808b58 <col:7> 'int *' lvalue ParmVar 0x13c80dd28 'img' 'int *'         |     |-BinaryOperator 0x13d808eb8 <col:28, col:31> 'int' '+'         |     | |-ImplicitCastExpr 0x13d808e88 <col:28> 'int' <LValueToRValue>         |     | | `-DeclRefExpr 0x13d808be8 <col:28> 'int' lvalue ParmVar 0x13c80dda8 'x0' 'int'         |     | `-ImplicitCastExpr 0x13d808ea0 <col:31> 'int' <LValueToRValue>         |     |   `-DeclRefExpr 0x13d808c08 <col:31> 'int' lvalue Var 0x13d8089f0 'k' 'int'         |     |-BinaryOperator 0x13d808f40 <col:33, col:44> 'int' '+'         |     | |-BinaryOperator 0x13d808f08 <col:33, col:36> 'int' '+'         |     | | |-ImplicitCastExpr 0x13d808ed8 <col:33> 'int' <LValueToRValue>         |     | | | `-DeclRefExpr 0x13d808c78 <col:33> 'int' lvalue ParmVar 0x13c80de28 'y0' 'int'         |     | | `-ImplicitCastExpr 0x13d808ef0 <col:36> 'int' <LValueToRValue>         |     | |   `-DeclRefExpr 0x13d808c98 <col:36> 'int' lvalue Var 0x13c8280e8 'cbSize2' 'int'         |     | `-ImplicitCastExpr 0x13d808f28 <col:44> 'int' <LValueToRValue>         |     |   `-DeclRefExpr 0x13d808d08 <col:44> 'int' lvalue Var 0x13c828258 'cbSize4' 'int'         |     `-RecoveryExpr 0x13d808f60 <col:53> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x13d809008 <line:56:5>         `-BreakStmt 0x13d809028 <line:60:5> ","20844":"`-FunctionDecl 0x127128238  line:1:1 TEST_F 'int (int, int)'   |-ParmVarDecl 0x127128158 <col:8> col:8 HttpHealthCheckerImplTest 'int'   |-ParmVarDecl 0x1271280d8 <col:35> col:35 ProxyConnectionClose 'int'   `-CompoundStmt 0x1271415a0 <col:57, line:21:1>     |-CallExpr 0x1271284c8 <line:2:3, col:30> 'int'     | `-ImplicitCastExpr 0x1271284b0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x127128460 <col:3> 'int ()' Function 0x1271283a8 'setupNoServiceValidationHC' 'int ()'     |-CallExpr 0x127140af0 <line:7:3, col:23> 'int'     | `-ImplicitCastExpr 0x127140ad8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x127140ab8 <col:3> 'int ()' Function 0x127140a00 'expectSessionCreate' 'int ()'     |-CallExpr 0x127140c48 <line:8:3, col:23> 'int'     | |-ImplicitCastExpr 0x127140c30 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x127140bf0 <col:3> 'int ()' Function 0x127140b38 'expectStreamCreate' 'int ()'     | `-IntegerLiteral 0x127140c10 <col:22> 'int' 0     |-CallExpr 0x127141478 <line:17:3, col:23> 'int'     | |-ImplicitCastExpr 0x127141460 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x127141420 <col:3> 'int ()' Function 0x127141368 'expectClientCreate' 'int ()'     | `-IntegerLiteral 0x127141440 <col:22> 'int' 0     `-CallExpr 0x1271414f8 <line:18:3, col:23> 'int'       |-ImplicitCastExpr 0x1271414e0 <col:3> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x1271414a0 <col:3> 'int ()' Function 0x127140b38 'expectStreamCreate' 'int ()'       `-IntegerLiteral 0x1271414c0 <col:22> 'int' 0 ","21075":"`-FunctionDecl 0x12c9418d8  line:1:12 invalid _hostsock_getpeername 'int (int *, struct oe_sockaddr *, int *)' static   |-ParmVarDecl 0x12c928128 <line:2:5, col:14> col:14 referenced invalid sock_ 'int *'   |-ParmVarDecl 0x12c928718 <line:3:5, col:25> col:25 used addr 'struct oe_sockaddr *'   |-ParmVarDecl 0x12c928798 <line:4:5, col:19> col:19 referenced invalid addrlen 'int *'   `-CompoundStmt 0x12c942730 <line:5:1, line:31:1>     |-DeclStmt 0x12c941a50 <line:6:5, col:17>     | `-VarDecl 0x12c9419b0 <col:5, col:16> col:9 used ret 'int' cinit     |   `-UnaryOperator 0x12c941a38 <col:15, col:16> 'int' prefix '-'     |     `-IntegerLiteral 0x12c941a18 <col:16> 'int' 1     |-BinaryOperator 0x12c941d28 <line:7:5, col:36> '<dependent type>' contains-errors '='     | |-BinaryOperator 0x12c941d08 <col:5, col:13> '<dependent type>' contains-errors '*'     | | |-RecoveryExpr 0x12c941a88 <col:5> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x12c941a68 <col:5> 'int *' lvalue ParmVar 0x12c928128 'sock_' 'int *'     | | `-RecoveryExpr 0x12c941ce8 <col:13> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x12c941c80 <col:20, col:36> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12c941c40 <col:20> 'int ()' Function 0x12c941b88 '_cast_sock' 'int ()'     |   `-RecoveryExpr 0x12c941c60 <col:31> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12c941fa8 <line:12:5, line:13:33>     | |-UnaryOperator 0x12c941e08 <line:12:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12c941df0 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x12c941dd0 <col:10> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x12c941f80 <line:13:9, col:33> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12c941f00 <col:9> 'int ()' Function 0x12c941e48 'OE_RAISE_ERRNO' 'int ()'     |   `-RecoveryExpr 0x12c941f60 <col:24> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12c9420a0 <line:15:5, line:16:23>     | |-RecoveryExpr 0x12c941fc8 <line:15:9> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x12c942080 <line:16:9, col:23> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x12c942008 <col:9> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x12c941fe8 <col:9> 'int *' lvalue ParmVar 0x12c928798 'addrlen' 'int *'     |   `-UnaryOperator 0x12c942068 <col:22, col:23> '<dependent type>' contains-errors prefix '*' cannot overflow     |     `-ImplicitCastExpr 0x12c942050 <col:23> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12c942030 <col:23> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12c942658 <line:18:5, line:26:5>     | |-BinaryOperator 0x12c942578 <line:18:9, line:23:25> 'int' contains-errors '!='     | | |-CallExpr 0x12c942510 <line:18:9, line:23:20> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x12c9421a0 <line:18:9> 'int ()' Function 0x12c9420e8 'oe_syscall_getpeername_ocall' 'int ()'     | | | |-UnaryOperator 0x12c9421e0 <line:19:13, col:14> 'int *' prefix '&' cannot overflow     | | | | `-DeclRefExpr 0x12c9421c0 <col:14> 'int' lvalue Var 0x12c9419b0 'ret' 'int'     | | | |-CXXDependentScopeMemberExpr 0x12c942440 <line:20:13, col:19> '<dependent type>' contains-errors lvalue ->host_fd     | | | | `-RecoveryExpr 0x12c942420 <col:13> '<dependent type>' contains-errors lvalue     | | | |-CStyleCastExpr 0x12c9424c8 <line:21:13, col:34> 'struct oe_sockaddr *' <NoOp>     | | | | `-ImplicitCastExpr 0x12c9424b0 <col:34> 'struct oe_sockaddr *' <LValueToRValue> part_of_explicit_cast     | | | |   `-DeclRefExpr 0x12c942258 <col:34> 'struct oe_sockaddr *' lvalue ParmVar 0x12c928718 'addr' 'struct oe_sockaddr *'     | | | |-RecoveryExpr 0x12c9424f0 <line:22:13> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x12c942360 <line:23:13> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12c942558 <col:25> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12c942640 <line:24:5, line:26:5>     |   `-CallExpr 0x12c942618 <line:25:9, col:33> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12c942598 <col:9> 'int ()' Function 0x12c941e48 'OE_RAISE_ERRNO' 'int ()'     |     `-RecoveryExpr 0x12c9425f8 <col:24> '<dependent type>' contains-errors lvalue     `-LabelStmt 0x12c942710 <line:28:1, line:30:12> 'done'       `-ReturnStmt 0x12c9426b0 <col:5, col:12>         `-ImplicitCastExpr 0x12c942698 <col:12> 'int' <LValueToRValue>           `-DeclRefExpr 0x12c942678 <col:12> 'int' lvalue Var 0x12c9419b0 'ret' 'int' ","20652":"`-FunctionDecl 0x140009548  col:17 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x140009648 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x1400096b0 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x140009718 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1400095f0 <<invalid sloc>> Implicit 900 ","20792":"`-FunctionDecl 0x11c9281f8  line:1:1 invalid nautilus_file_is_home 'int (int *)'   |-ParmVarDecl 0x11c928128 <col:24, col:38> col:38 invalid file 'int *'   `-CompoundStmt 0x11c941948 <line:2:1, line:12:1>     |-IfStmt 0x11c928510 <line:6:2, line:8:2>     | |-BinaryOperator 0x11c928490 <line:6:6, col:13> 'int' contains-errors '=='     | | |-RecoveryExpr 0x11c928450 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x11c928470 <col:13> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x11c9284f8 <col:19, line:8:2>     |   `-ReturnStmt 0x11c9284e8 <line:7:3, col:10>     |     `-RecoveryExpr 0x11c9284c8 <col:10> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x11c941938 <line:10:2, line:11:45>       `-CallExpr 0x11c941908 <line:10:9, line:11:45> '<dependent type>' contains-errors         |-DeclRefExpr 0x11c928690 <line:10:9> 'int ()' Function 0x11c9285d8 'nautilus_is_home_directory_file' 'int ()'         |-RecoveryExpr 0x11c9418e8 <col:42> '<dependent type>' contains-errors lvalue         `-CallExpr 0x11c941890 <line:11:7, col:44> '<dependent type>' contains-errors           |-DeclRefExpr 0x11c9287a8 <col:7> 'int ()' Function 0x11c9286f0 'eel_ref_str_peek' 'int ()'           `-CXXDependentScopeMemberExpr 0x11c941848 <col:25, col:40> '<dependent type>' contains-errors lvalue ->name             `-CXXDependentScopeMemberExpr 0x11c941800 <col:25, col:31> '<dependent type>' contains-errors lvalue ->details               `-RecoveryExpr 0x11c9287c8 <col:25> '<dependent type>' contains-errors lvalue ","20861":"`-FunctionDecl 0x13a80e350  line:1:13 ip6gre_dev_free 'void (struct net_device *)' static   |-ParmVarDecl 0x13a80e248 <col:29, col:48> col:48 used dev 'struct net_device *'   `-CompoundStmt 0x13a826f00 <line:2:1, line:8:1>     |-DeclStmt 0x13a826a48 <line:3:2, col:38>     | |-RecordDecl 0x13a826648 <col:2, col:9> col:9 struct ip6_tnl     | `-VarDecl 0x13a8267b8 <col:2, col:37> col:18 used t 'struct ip6_tnl *' cinit     |   `-ImplicitCastExpr 0x13a826a18 <col:22, col:37> 'struct ip6_tnl *' <IntegralToPointer>     |     `-CallExpr 0x13a8269d8 <col:22, col:37> 'int'     |       |-ImplicitCastExpr 0x13a8269c0 <col:22> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x13a826950 <col:22> 'int ()' Function 0x13a826898 'netdev_priv' 'int ()'     |       `-ImplicitCastExpr 0x13a826a00 <col:34> 'struct net_device *' <LValueToRValue>     |         `-DeclRefExpr 0x13a826970 <col:34> 'struct net_device *' lvalue ParmVar 0x13a80e248 'dev' 'struct net_device *'     |-CallExpr 0x13a826bd8 <line:5:2, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13a826b40 <col:2> 'int ()' Function 0x13a826a88 'dst_cache_destroy' 'int ()'     | `-UnaryOperator 0x13a826bc0 <col:20, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13a826b98 <col:21, col:24> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13a826b60 <col:21> 'struct ip6_tnl *' lvalue Var 0x13a8267b8 't' 'struct ip6_tnl *'     |-CallExpr 0x13a826d60 <line:6:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13a826ce0 <col:2> 'int ()' Function 0x13a826c28 'free_percpu' 'int ()'     | `-RecoveryExpr 0x13a826d38 <col:14, col:19> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x13a826d00 <col:14> 'struct net_device *' lvalue ParmVar 0x13a80e248 'dev' 'struct net_device *'     `-CallExpr 0x13a826ec0 <line:7:2, col:17> 'int'       |-ImplicitCastExpr 0x13a826ea8 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x13a826e68 <col:2> 'int ()' Function 0x13a826db0 'free_netdev' 'int ()'       `-ImplicitCastExpr 0x13a826ee8 <col:14> 'struct net_device *' <LValueToRValue>         `-DeclRefExpr 0x13a826e88 <col:14> 'struct net_device *' lvalue ParmVar 0x13a80e248 'dev' 'struct net_device *' ","21191":"`-FunctionDecl 0x1428279d8  line:1:1 invalid bgp_rte_update 'int (struct bgp_proto *, int, int, int, int *, struct rte_src **, int *, int **)'   |-ParmVarDecl 0x14280e248 <col:16, col:34> col:34 used p 'struct bgp_proto *'   |-ParmVarDecl 0x14280e2e0 <col:37, col:45> col:45 invalid prefix 'int'   |-ParmVarDecl 0x14280e360 <col:53, col:57> col:57 used pxlen 'int'   |-ParmVarDecl 0x142827400 <line:2:9, col:13> col:13 invalid path_id 'int'   |-ParmVarDecl 0x1428274b8 <col:22, col:27> col:27 invalid last_id 'int *'   |-ParmVarDecl 0x1428276e8 <col:36, col:53> col:53 used src 'struct rte_src **'   |-ParmVarDecl 0x142827768 <line:3:9, col:14> col:14 referenced invalid a0 'int *'   |-ParmVarDecl 0x142827820 <col:18, col:24> col:24 invalid a 'int **'   `-CompoundStmt 0x142123068 <line:4:1, line:35:1>     |-IfStmt 0x1428281f0 <line:5:3, line:15:5>     | |-BinaryOperator 0x142827b30 <line:5:7, col:19> 'int' contains-errors '!='     | | |-RecoveryExpr 0x142827ac0 <col:7> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x142827b18 <col:18, col:19> '<dependent type>' contains-errors prefix '*' cannot overflow     | |   `-ImplicitCastExpr 0x142827b00 <col:19> '<dependent type>' contains-errors <LValueToRValue>     | |     `-RecoveryExpr 0x142827ae0 <col:19> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1428281c8 <line:6:5, line:15:5>     |   |-BinaryOperator 0x142827de8 <line:7:7, col:42> 'struct rte_src *' contains-errors '='     |   | |-UnaryOperator 0x142827b88 <col:7, col:8> 'struct rte_src *' lvalue prefix '*' cannot overflow     |   | | `-ImplicitCastExpr 0x142827b70 <col:8> 'struct rte_src **' <LValueToRValue>     |   | |   `-DeclRefExpr 0x142827b50 <col:8> 'struct rte_src **' lvalue ParmVar 0x1428276e8 'src' 'struct rte_src **'     |   | `-CallExpr 0x142827db8 <col:14, col:42> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x142827d00 <col:14> 'int ()' Function 0x142827c48 'rt_get_source' 'int ()'     |   |   |-UnaryOperator 0x142827d80 <col:28, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   | `-RecoveryExpr 0x142827d58 <col:29, col:32> '<dependent type>' contains-errors lvalue     |   |   |   `-DeclRefExpr 0x142827d20 <col:29> 'struct bgp_proto *' lvalue ParmVar 0x14280e248 'p' 'struct bgp_proto *'     |   |   `-RecoveryExpr 0x142827d98 <col:35> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x142827e78 <line:8:7, col:18> '<dependent type>' contains-errors '='     |   | |-UnaryOperator 0x142827e40 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow     |   | | `-ImplicitCastExpr 0x142827e28 <col:8> '<dependent type>' contains-errors <LValueToRValue>     |   | |   `-RecoveryExpr 0x142827e08 <col:8> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x142827e58 <col:18> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x1428281a8 <line:10:7, line:14:2>     |     |-UnaryOperator 0x142827ed0 <line:10:11, col:12> '<dependent type>' contains-errors prefix '*' cannot overflow     |     | `-ImplicitCastExpr 0x142827eb8 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |     |   `-RecoveryExpr 0x142827e98 <col:12> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x142828188 <line:11:2, line:14:2>     |       |-CallExpr 0x142828038 <line:12:4, col:15> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x142827fc8 <col:4> 'int ()' Function 0x142827f10 'rta_free' 'int ()'     |       | `-UnaryOperator 0x142828020 <col:13, col:14> '<dependent type>' contains-errors prefix '*' cannot overflow     |       |   `-ImplicitCastExpr 0x142828008 <col:14> '<dependent type>' contains-errors <LValueToRValue>     |       |     `-RecoveryExpr 0x142827fe8 <col:14> '<dependent type>' contains-errors lvalue     |       `-BinaryOperator 0x142828168 <line:13:4, col:9> '<dependent type>' contains-errors '='     |         |-UnaryOperator 0x142828130 <col:4, col:5> '<dependent type>' contains-errors prefix '*' cannot overflow     |         | `-ImplicitCastExpr 0x142828118 <col:5> '<dependent type>' contains-errors <LValueToRValue>     |         |   `-RecoveryExpr 0x142828060 <col:5> '<dependent type>' contains-errors lvalue     |         `-RecoveryExpr 0x142828148 <col:9> '<dependent type>' contains-errors lvalue     `-IfStmt 0x1421228e8 <line:18:3, line:26:5>       |-UnaryOperator 0x142828260 <line:18:7, col:9> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-UnaryOperator 0x142828248 <col:8, col:9> '<dependent type>' contains-errors prefix '*' cannot overflow       |   `-ImplicitCastExpr 0x142828230 <col:9> '<dependent type>' contains-errors <LValueToRValue>       |     `-RecoveryExpr 0x142828210 <col:9> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x1421228c0 <line:19:5, line:26:5>         |-BinaryOperator 0x142828358 <line:20:7, col:18> '<dependent type>' contains-errors '='         | |-CXXDependentScopeMemberExpr 0x1428282c0 <col:7, col:11> '<dependent type>' contains-errors lvalue ->src         | | `-RecoveryExpr 0x142828298 <col:7> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x142828278 <col:7> 'int *' lvalue ParmVar 0x142827768 'a0' 'int *'         | `-UnaryOperator 0x142828340 <col:17, col:18> 'struct rte_src *' lvalue prefix '*' cannot overflow         |   `-ImplicitCastExpr 0x142828328 <col:18> 'struct rte_src **' <LValueToRValue>         |     `-DeclRefExpr 0x142828308 <col:18> 'struct rte_src **' lvalue ParmVar 0x1428276e8 'src' 'struct rte_src **'         |-BinaryOperator 0x142122798 <line:24:7, col:25> '<dependent type>' contains-errors '='         | |-UnaryOperator 0x142122638 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow         | | `-ImplicitCastExpr 0x142122620 <col:8> '<dependent type>' contains-errors <LValueToRValue>         | |   `-RecoveryExpr 0x142122600 <col:8> '<dependent type>' contains-errors lvalue         | `-CallExpr 0x142122770 <col:12, col:25> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x142122730 <col:12> 'int ()' Function 0x142122678 'rta_lookup' 'int ()'         |   `-RecoveryExpr 0x142122750 <col:23> '<dependent type>' contains-errors lvalue         `-BinaryOperator 0x1421228a0 <line:25:7, col:20> '<dependent type>' contains-errors '='           |-CXXDependentScopeMemberExpr 0x142122800 <col:7, col:11> '<dependent type>' contains-errors lvalue ->eattrs           | `-RecoveryExpr 0x1421227d8 <col:7> '<dependent type>' contains-errors lvalue           |   `-DeclRefExpr 0x1421227b8 <col:7> 'int *' lvalue ParmVar 0x142827768 'a0' 'int *'           `-RecoveryExpr 0x142122880 <col:20> '<dependent type>' contains-errors lvalue ","20932":"`-FunctionDecl 0x143921e00  line:1:12 entry_unshown 'int (struct object_array_entry *, void *)' static   |-ParmVarDecl 0x143909a48 <col:26, col:53> col:53 used entry 'struct object_array_entry *'   |-ParmVarDecl 0x143909ac8 <col:60, col:66> col:66 cb_data_unused 'void *'   `-CompoundStmt 0x143921ff8 <line:2:1, line:4:1> ","20513":"`-FunctionDecl 0x12e140d88  line:1:1 invalid glue 'int (int (*)(), int)'   |-ParmVarDecl 0x12e128180 <col:6, <invalid sloc>> col:6 invalid glue 'int (*)()'   |-ParmVarDecl 0x12e128200 <col:53> col:53 _16 'int'   `-CompoundStmt 0x12e1415f0 <line:5:1, line:26:1>     |-DeclStmt 0x12e140f58 <line:6:5, col:12>     | |-VarDecl 0x12e140e58 <col:5, col:9> col:9 used x 'int'     | `-VarDecl 0x12e140ed8 <col:5, col:11> col:11 used y 'int'     `-ForStmt 0x12e1415b8 <line:10:5, line:25:5>       |-BinaryOperator 0x12e140fe0 <line:10:10, col:14> 'int' '='       | |-DeclRefExpr 0x12e140fa0 <col:10> 'int' lvalue Var 0x12e140ed8 'y' 'int'       | `-IntegerLiteral 0x12e140fc0 <col:14> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x12e141078 <col:17, col:21> 'int' contains-errors '<'       | |-DeclRefExpr 0x12e141000 <col:17> 'int' lvalue Var 0x12e140ed8 'y' 'int'       | `-RecoveryExpr 0x12e141058 <col:21> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x12e1410b8 <col:32, col:33> 'int' postfix '++'       | `-DeclRefExpr 0x12e141098 <col:32> 'int' lvalue Var 0x12e140ed8 'y' 'int'       `-CompoundStmt 0x12e1415a0 <col:37, line:25:5>         `-ForStmt 0x12e141568 <line:11:9, line:22:9>           |-BinaryOperator 0x12e141110 <line:11:14, col:18> 'int' '='           | |-DeclRefExpr 0x12e1410d0 <col:14> 'int' lvalue Var 0x12e140e58 'x' 'int'           | `-IntegerLiteral 0x12e1410f0 <col:18> 'int' 0           |-<<<NULL>>>           |-BinaryOperator 0x12e1411a8 <col:21, col:25> 'int' contains-errors '<'           | |-DeclRefExpr 0x12e141130 <col:21> 'int' lvalue Var 0x12e140e58 'x' 'int'           | `-RecoveryExpr 0x12e141188 <col:25> '<dependent type>' contains-errors lvalue           |-CompoundAssignOperator 0x12e141208 <col:35, col:38> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'           | |-DeclRefExpr 0x12e1411c8 <col:35> 'int' lvalue Var 0x12e140e58 'x' 'int'           | `-IntegerLiteral 0x12e1411e8 <col:38> 'int' 2           `-CompoundStmt 0x12e141550 <col:41, line:22:9>             `-IfStmt 0x12e1414f0 <line:16:6, line:19:6>               |-RecoveryExpr 0x12e1414a0 <line:16:10, col:51> '_Bool' contains-errors               `-CompoundStmt 0x12e1414e0 <col:54, line:19:6> ","20516":"`-FunctionDecl 0x15a9281c8  line:1:8 invalid x509_proxy_expiration_time 'int (int)'   |-ParmVarDecl 0x15a9280f0 <col:36, col:61> col:61 invalid handle 'int'   `-CompoundStmt 0x15a941a30 <line:2:1, line:15:1>     |-IfStmt 0x15a9284f8 <line:5:2, line:7:2>     | |-BinaryOperator 0x15a928478 <line:5:7, col:32> 'int' '!='     | | |-CallExpr 0x15a928438 <col:7, col:27> 'int'     | | | `-ImplicitCastExpr 0x15a928420 <col:7> 'int (*)()' <FunctionToPointerDecay>     | | |   `-DeclRefExpr 0x15a9283d0 <col:7> 'int ()' Function 0x15a928318 'activate_globus_gsi' 'int ()'     | | `-IntegerLiteral 0x15a928458 <col:32> 'int' 0     | `-CompoundStmt 0x15a9284e0 <col:36, line:7:2>     |   `-ReturnStmt 0x15a9284d0 <line:6:3, col:11>     |     `-UnaryOperator 0x15a9284b8 <col:10, col:11> 'int' prefix '-'     |       `-IntegerLiteral 0x15a928498 <col:11> 'int' 1     |-IfStmt 0x15a941800 <line:9:2, line:12:5>     | |-RecoveryExpr 0x15a9285b0 <line:9:6, col:60> '_Bool' contains-errors     | `-CompoundStmt 0x15a9287d0 <col:63, line:12:5>     |   |-CallExpr 0x15a928748 <line:10:3, col:27> 'int'     |   | |-ImplicitCastExpr 0x15a928730 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x15a9286b0 <col:3> 'int ()' Function 0x15a9285f8 'set_error_string' 'int ()'     |   | `-ImplicitCastExpr 0x15a928770 <col:21> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x15a928710 <col:21> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x15a9287c0 <line:11:3, col:11>     |     `-UnaryOperator 0x15a9287a8 <col:10, col:11> 'int' prefix '-'     |       `-IntegerLiteral 0x15a928788 <col:11> 'int' 1     `-ReturnStmt 0x15a941a20 <line:14:2, col:22>       `-BinaryOperator 0x15a941a00 <col:9, col:22> '<dependent type>' contains-errors '+'         |-CallExpr 0x15a9419b8 <col:9, col:18> '<dependent type>' contains-errors         | |-DeclRefExpr 0x15a941900 <col:9> 'int ()' Function 0x15a941848 'time' 'int ()'         | `-RecoveryExpr 0x15a941998 <col:14> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x15a9419e0 <col:22> '<dependent type>' contains-errors lvalue ","20372":"`-FunctionDecl 0x134941978  line:1:9 invalid vhost_chr_write_iter 'int (struct vhost_dev *, struct iov_iter *)'   |-ParmVarDecl 0x134928668 <col:30, col:48> col:48 used dev 'struct vhost_dev *'   |-ParmVarDecl 0x134941858 <line:2:9, col:26> col:26 used from 'struct iov_iter *'   `-CompoundStmt 0x135009540 <line:3:1, line:42:1>     |-DeclStmt 0x134941ba8 <line:4:2, col:28>     | |-RecordDecl 0x134941a30 <col:2, col:9> col:9 struct vhost_iotlb_msg     | `-VarDecl 0x134941b28 <col:2, col:25> col:25 invalid msg 'struct vhost_iotlb_msg'     |-UnaryExprOrTypeTraitExpr 0x134941c18 <line:5:2, col:9> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x134941bf8 <col:9> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x134941d50 <line:6:2, col:15>     | |-VarDecl 0x134941c50 <col:2, col:6> col:6 used type 'int'     | `-VarDecl 0x134941cd0 <col:2, col:12> col:12 used ret 'int'     |-BinaryOperator 0x134942088 <line:8:2, col:48> 'int' '='     | |-DeclRefExpr 0x134941d68 <col:2> 'int' lvalue Var 0x134941cd0 'ret' 'int'     | `-CallExpr 0x134942038 <col:8, col:48> 'int'     |   |-ImplicitCastExpr 0x134942020 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x134941ee0 <col:8> 'int ()' Function 0x134941e28 'copy_from_iter' 'int ()'     |   |-UnaryOperator 0x134941f50 <col:23, col:24> 'int *' prefix '&' cannot overflow     |   | `-DeclRefExpr 0x134941f00 <col:24> 'int' lvalue Var 0x134941c50 'type' 'int'     |   |-UnaryExprOrTypeTraitExpr 0x134941fa8 <col:30, col:41> 'unsigned long' sizeof     |   | `-ParenExpr 0x134941f88 <col:36, col:41> 'int' lvalue     |   |   `-DeclRefExpr 0x134941f68 <col:37> 'int' lvalue Var 0x134941c50 'type' 'int' non_odr_use_unevaluated     |   `-ImplicitCastExpr 0x134942070 <col:44> 'struct iov_iter *' <LValueToRValue>     |     `-DeclRefExpr 0x134941fc8 <col:44> 'struct iov_iter *' lvalue ParmVar 0x134941858 'from' 'struct iov_iter *'     |-IfStmt 0x1349422f8 <line:9:2, line:12:2>     | |-BinaryOperator 0x134942158 <line:9:6, col:24> 'int' '!='     | | |-ImplicitCastExpr 0x134942140 <col:6> 'unsigned long' <IntegralCast>     | | | `-ImplicitCastExpr 0x134942128 <col:6> 'int' <LValueToRValue>     | | |   `-DeclRefExpr 0x1349420a8 <col:6> 'int' lvalue Var 0x134941cd0 'ret' 'int'     | | `-UnaryExprOrTypeTraitExpr 0x134942108 <col:13, col:24> 'unsigned long' sizeof     | |   `-ParenExpr 0x1349420e8 <col:19, col:24> 'int' lvalue     | |     `-DeclRefExpr 0x1349420c8 <col:20> 'int' lvalue Var 0x134941c50 'type' 'int' non_odr_use_unevaluated     | `-CompoundStmt 0x1349422d8 <col:27, line:12:2>     |   |-BinaryOperator 0x134942250 <line:10:3, col:10> 'int' contains-errors '='     |   | |-DeclRefExpr 0x134942178 <col:3> 'int' lvalue Var 0x134941cd0 'ret' 'int'     |   | `-UnaryOperator 0x134942238 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x134942220 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x134942200 <col:10> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x1349422c0 <line:11:3, col:8> 'done' 0x134942270     |-SwitchStmt 0x134942350 <line:14:2, line:25:2>     | |-ImplicitCastExpr 0x134942338 <line:14:10> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x134942318 <col:10> 'int' lvalue Var 0x134941c50 'type' 'int'     | `-CompoundStmt 0x134942650 <col:16, line:25:2>     |   |-BreakStmt 0x1349424e0 <line:18:3>     |   |-BreakStmt 0x134942518 <line:21:3>     |   |-DefaultStmt 0x134942618 <line:22:2, line:23:10>     |   | `-BinaryOperator 0x1349425f8 <col:3, col:10> 'int' contains-errors '='     |   |   |-DeclRefExpr 0x134942520 <col:3> 'int' lvalue Var 0x134941cd0 'ret' 'int'     |   |   `-UnaryOperator 0x1349425e0 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |     `-ImplicitCastExpr 0x1349425c8 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |   |       `-RecoveryExpr 0x1349425a8 <col:10> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x134942638 <line:24:3, col:8> 'done' 0x134942270     |-CallExpr 0x135008c20 <line:27:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x134942760 <col:2> 'int ()' Function 0x1349426a8 'iov_iter_advance' 'int ()'     | |-DeclRefExpr 0x134942780 <col:19> 'struct iov_iter *' lvalue ParmVar 0x134941858 'from' 'struct iov_iter *'     | `-RecoveryExpr 0x135008c00 <col:25> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x135008d80 <line:28:2, col:46> 'int' contains-errors '='     | |-DeclRefExpr 0x135008c50 <col:2> 'int' lvalue Var 0x134941cd0 'ret' 'int'     | `-CallExpr 0x135008d48 <col:8, col:46> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x135008c70 <col:8> 'int ()' Function 0x134941e28 'copy_from_iter' 'int ()'     |   |-UnaryOperator 0x135008cb0 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x135008c90 <col:24> '<dependent type>' contains-errors lvalue     |   |-UnaryExprOrTypeTraitExpr 0x135008d08 <col:29, col:39> 'unsigned long' contains-errors sizeof     |   | `-ParenExpr 0x135008ce8 <col:35, col:39> '<dependent type>' contains-errors lvalue     |   |   `-RecoveryExpr 0x135008cc8 <col:36> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x135008d28 <col:42> 'struct iov_iter *' lvalue ParmVar 0x134941858 'from' 'struct iov_iter *'     |-IfStmt 0x135008fa0 <line:29:2, line:32:2>     | |-BinaryOperator 0x135008e50 <line:29:6, col:23> 'int' contains-errors '!='     | | |-ImplicitCastExpr 0x135008e38 <col:6> 'unsigned long' <IntegralCast>     | | | `-ImplicitCastExpr 0x135008e20 <col:6> 'int' <LValueToRValue>     | | |   `-DeclRefExpr 0x135008da0 <col:6> 'int' lvalue Var 0x134941cd0 'ret' 'int'     | | `-UnaryExprOrTypeTraitExpr 0x135008e00 <col:13, col:23> 'unsigned long' contains-errors sizeof     | |   `-ParenExpr 0x135008de0 <col:19, col:23> '<dependent type>' contains-errors lvalue     | |     `-RecoveryExpr 0x135008dc0 <col:20> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x135008f80 <col:26, line:32:2>     |   |-BinaryOperator 0x135008f48 <line:30:3, col:10> 'int' contains-errors '='     |   | |-DeclRefExpr 0x135008e70 <col:3> 'int' lvalue Var 0x134941cd0 'ret' 'int'     |   | `-UnaryOperator 0x135008f30 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x135008f18 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x135008ef8 <col:10> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x135008f68 <line:31:3, col:8> 'done' 0x134942270     |-IfStmt 0x135009278 <line:33:2, line:36:2>     | |-CallExpr 0x135009118 <line:33:6, col:39> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1350090a0 <col:6> 'int ()' Function 0x135008fe8 'vhost_process_iotlb_msg' 'int ()'     | | |-DeclRefExpr 0x1350090c0 <col:30> 'struct vhost_dev *' lvalue ParmVar 0x134928668 'dev' 'struct vhost_dev *'     | | `-UnaryOperator 0x135009100 <col:35, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x1350090e0 <col:36> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x135009258 <col:42, line:36:2>     |   |-BinaryOperator 0x135009220 <line:34:3, col:10> 'int' contains-errors '='     |   | |-DeclRefExpr 0x135009148 <col:3> 'int' lvalue Var 0x134941cd0 'ret' 'int'     |   | `-UnaryOperator 0x135009208 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x1350091f0 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x1350091d0 <col:10> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x135009240 <line:35:3, col:8> 'done' 0x134942270     `-LabelStmt 0x135009520 <line:40:1, line:41:9> 'done'       `-ReturnStmt 0x135009510 <col:2, col:9>         `-ImplicitCastExpr 0x1350094f8 <col:9> 'int' <LValueToRValue>           `-DeclRefExpr 0x1350094d8 <col:9> 'int' lvalue Var 0x134941cd0 'ret' 'int' ","21211":"`-FunctionDecl 0x144029948  line:1:12 tc_ctl_action 'int (struct sk_buff *, struct nlmsghdr *)' static   |-ParmVarDecl 0x1448bb248 <col:26, col:42> col:42 used skb 'struct sk_buff *'   |-ParmVarDecl 0x144029828 <col:47, col:64> col:64 used n 'struct nlmsghdr *'   `-CompoundStmt 0x144031bf8 <line:2:1, line:44:1>     |-DeclStmt 0x144029e10 <line:3:2, col:37>     | |-RecordDecl 0x144029a48 <col:2, col:9> col:9 struct net     | `-VarDecl 0x144029bb8 <col:2, col:36> col:14 used net 'struct net *' cinit     |   `-CallExpr 0x144029dd0 <col:20, col:36> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x144029d50 <col:20> 'int ()' Function 0x144029c98 'sock_net' 'int ()'     |     `-RecoveryExpr 0x144029da8 <col:29, col:34> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x144029d70 <col:29> 'struct sk_buff *' lvalue ParmVar 0x1448bb248 'skb' 'struct sk_buff *'     |-DeclStmt 0x14402a078 <line:4:2, col:37>     | |-RecordDecl 0x144029e28 <col:2, col:9> col:9 struct nlattr     | `-VarDecl 0x144029ff8 <col:2, col:17> col:17 invalid tca 'struct nlattr *'     |-DeclStmt 0x14402a1e8 <line:6:2, col:22>     | |-VarDecl 0x14402a0a8 <col:2, col:12> col:6 used ret 'int' cinit     | | `-IntegerLiteral 0x14402a110 <col:12> 'int' 0     | `-VarDecl 0x14402a148 <col:2, col:21> col:15 used ovr 'int' cinit     |   `-IntegerLiteral 0x14402a1b0 <col:21> 'int' 0     |-IfStmt 0x14402a4b8 <line:8:2, line:9:11>     | |-RecoveryExpr 0x14402a3f0 <line:8:6, col:64> '_Bool' contains-errors     | `-ReturnStmt 0x14402a4a8 <line:9:3, col:11>     |   `-UnaryOperator 0x14402a490 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14402a478 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14402a458 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x144031028 <line:12:2, line:13:10>     | |-BinaryOperator 0x14402a7c0 <line:12:6, col:12> 'int' '<'     | | |-ImplicitCastExpr 0x14402a7a8 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x14402a768 <col:6> 'int' lvalue Var 0x14402a0a8 'ret' 'int'     | | `-IntegerLiteral 0x14402a788 <col:12> 'int' 0     | `-ReturnStmt 0x144031018 <line:13:3, col:10>     |   `-ImplicitCastExpr 0x144031000 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x14402a7e0 <col:10> 'int' lvalue Var 0x14402a0a8 'ret' 'int'     |-IfStmt 0x144031370 <line:15:2, line:18:2>     | |-RecoveryExpr 0x144031098 <line:15:6, col:26> '_Bool' contains-errors     | `-CompoundStmt 0x144031350 <col:32, line:18:2>     |   |-CallExpr 0x144031268 <line:16:3, col:18> 'int'     |   | |-ImplicitCastExpr 0x144031250 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x144031198 <col:3> 'int ()' Function 0x1440310e0 'pr_notice' 'int ()'     |   | `-ImplicitCastExpr 0x144031290 <col:13> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x144031200 <col:13> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x144031340 <line:17:3, col:11>     |     `-UnaryOperator 0x144031328 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x144031310 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x1440312f0 <col:11> '<dependent type>' contains-errors lvalue     |-SwitchStmt 0x144031408 <line:21:2, line:41:2>     | |-ImplicitCastExpr 0x1440313f0 <line:21:10, col:13> '<dependent type>' contains-errors <LValueToRValue>     | | `-RecoveryExpr 0x1440313c8 <col:10, col:13> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x144031390 <col:10> 'struct nlmsghdr *' lvalue ParmVar 0x144029828 'n' 'struct nlmsghdr *'     | `-CompoundStmt 0x144031b68 <col:25, line:41:2>     |   |-IfStmt 0x144031528 <line:24:3, line:25:10>     |   | |-RecoveryExpr 0x1440314a8 <line:24:7, col:24> '_Bool' contains-errors     |   | `-BinaryOperator 0x144031508 <line:25:4, col:10> 'int' '='     |   |   |-DeclRefExpr 0x1440314c8 <col:4> 'int' lvalue Var 0x14402a148 'ovr' 'int'     |   |   `-IntegerLiteral 0x1440314e8 <col:10> 'int' 1     |   |-LabelStmt 0x144031740 <line:26:1, col:7> 'replay'     |   | `-NullStmt 0x1440316e8 <col:7>     |   |-IfStmt 0x1440317b8 <line:28:3, line:29:9>     |   | |-RecoveryExpr 0x144031780 <line:28:7, col:15> '_Bool' contains-errors     |   | `-GotoStmt 0x1440317a0 <line:29:4, col:9> 'replay' 0x1440316f0     |   |-BreakStmt 0x1440317d8 <line:30:3>     |   |-BreakStmt 0x144031960 <line:34:3>     |   |-BreakStmt 0x144031a08 <line:38:3>     |   `-DefaultStmt 0x144031b48 <line:39:2, line:40:7>     |     `-CallExpr 0x144031b28 <col:3, col:7> 'int'     |       `-ImplicitCastExpr 0x144031b10 <col:3> 'int (*)()' <FunctionToPointerDecay>     |         `-DeclRefExpr 0x144031af0 <col:3> 'int ()' Function 0x144031a38 'BUG' 'int ()'     `-ReturnStmt 0x144031be8 <line:43:2, col:9>       `-ImplicitCastExpr 0x144031bd0 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x144031bb0 <col:9> 'int' lvalue Var 0x14402a0a8 'ret' 'int' ","20230":"`-FunctionDecl 0x14a00ddf8  line:1:1 invalid g_socket_client_async_connect_complete 'int (int *)'   |-ParmVarDecl 0x14a00dd28 <col:41, col:72> col:72 referenced invalid data 'int *'   `-CompoundStmt 0x14a027008 <line:2:1, line:18:1>     |-CallExpr 0x14a00e088 <line:3:3, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a00e000 <col:3> 'int ()' Function 0x14a00df48 'g_assert' 'int ()'     | `-CXXDependentScopeMemberExpr 0x14a00e040 <col:13, col:19> '<dependent type>' contains-errors lvalue ->connection     |   `-RecoveryExpr 0x14a00e020 <col:13> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14a0268c8 <line:5:3, line:12:5>     | |-UnaryOperator 0x14a00e240 <line:5:7, col:48> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x14a00e218 <col:8, col:48> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x14a00e190 <col:8> 'int ()' Function 0x14a00e0d8 'G_IS_SOCKET_CONNECTION' 'int ()'     | |   `-CXXDependentScopeMemberExpr 0x14a00e1d0 <col:32, col:38> '<dependent type>' contains-errors lvalue ->connection     | |     `-RecoveryExpr 0x14a00e1b0 <col:32> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14a0268b0 <line:6:5, line:12:5>     |   `-CallExpr 0x14a0267e0 <line:10:7, col:39> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14a026758 <col:7> 'int ()' Function 0x14a0266a0 'g_object_unref' 'int ()'     |     `-CXXDependentScopeMemberExpr 0x14a026798 <col:23, col:29> '<dependent type>' contains-errors lvalue ->connection     |       `-RecoveryExpr 0x14a026778 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14a026b98 <line:14:3, col:106> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a0269c8 <col:3> 'int ()' Function 0x14a026910 'g_socket_client_emit_event' 'int ()'     | |-CXXDependentScopeMemberExpr 0x14a026a08 <col:31, col:37> '<dependent type>' contains-errors lvalue ->client     | | `-RecoveryExpr 0x14a0269e8 <col:31> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x14a026b78 <col:45> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x14a026a88 <col:71, col:77> '<dependent type>' contains-errors lvalue ->connectable     | | `-RecoveryExpr 0x14a026a68 <col:71> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x14a026af0 <col:90, col:96> '<dependent type>' contains-errors lvalue ->connection     |   `-RecoveryExpr 0x14a026ad0 <col:90> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14a026e18 <line:15:3, col:70> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a026cb8 <col:3> 'int ()' Function 0x14a026c00 'g_task_return_pointer' 'int ()'     | |-CXXDependentScopeMemberExpr 0x14a026cf8 <col:26, col:32> '<dependent type>' contains-errors lvalue ->task     | | `-RecoveryExpr 0x14a026cd8 <col:26> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x14a026d60 <col:38, col:44> '<dependent type>' contains-errors lvalue ->connection     | | `-RecoveryExpr 0x14a026d40 <col:38> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14a026df8 <col:56> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14a026f38 <line:16:3, col:22> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14a026e98 <col:3, col:9> '<dependent type>' contains-errors lvalue ->connection     | | `-RecoveryExpr 0x14a026e70 <col:3> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14a026e50 <col:3> 'int *' lvalue ParmVar 0x14a00dd28 'data' 'int *'     | `-RecoveryExpr 0x14a026f18 <col:22> '<dependent type>' contains-errors lvalue     `-CallExpr 0x14a026fe0 <line:17:3, col:29> '<dependent type>' contains-errors       |-DeclRefExpr 0x14a026f58 <col:3> 'int ()' Function 0x14a0266a0 'g_object_unref' 'int ()'       `-CXXDependentScopeMemberExpr 0x14a026f98 <col:19, col:25> '<dependent type>' contains-errors lvalue ->task         `-RecoveryExpr 0x14a026f78 <col:19> '<dependent type>' contains-errors lvalue ","20553":"`-FunctionDecl 0x14800ddf8  line:1:1 invalid free_conversation 'int (int *)'   |-ParmVarDecl 0x14800dd28 <col:20, col:44> col:44 invalid conversation 'int *'   `-CompoundStmt 0x149008a60 <line:2:1, line:35:1>     |-IfStmt 0x14800e210 <line:3:9, line:5:9>     | |-BinaryOperator 0x14800df68 <line:3:13, col:34> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x14800dec8 <col:13, col:27> '<dependent type>' contains-errors lvalue ->job     | | | `-RecoveryExpr 0x14800dea8 <col:13> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14800df48 <col:34> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14800e1f8 <col:40, line:5:9>     |   `-CallExpr 0x14800e1c8 <line:4:17, col:61> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14800e0e0 <col:17> 'int ()' Function 0x14800e028 'g_warning' 'int ()'     |     |-StringLiteral 0x14800e140 <col:28> 'char[4]' lvalue \"STR\"     |     `-CXXDependentScopeMemberExpr 0x14800e180 <col:35, col:49> '<dependent type>' contains-errors lvalue ->service_name     |       `-RecoveryExpr 0x14800e160 <col:35> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14800e398 <line:7:9, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14800e310 <col:9> 'int ()' Function 0x14800e258 'g_free' 'int ()'     | `-CXXDependentScopeMemberExpr 0x14800e350 <col:17, col:31> '<dependent type>' contains-errors lvalue ->service_name     |   `-RecoveryExpr 0x14800e330 <col:17> '<dependent type>' contains-errors lvalue     |-CallExpr 0x148027448 <line:8:9, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14800e3c0 <col:9> 'int ()' Function 0x14800e258 'g_free' 'int ()'     | `-CXXDependentScopeMemberExpr 0x148027400 <col:17, col:31> '<dependent type>' contains-errors lvalue ->starting_username     |   `-RecoveryExpr 0x14800e3e0 <col:17> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1480274f8 <line:9:9, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x148027470 <col:9> 'int ()' Function 0x14800e258 'g_free' 'int ()'     | `-CXXDependentScopeMemberExpr 0x1480274b0 <col:17, col:31> '<dependent type>' contains-errors lvalue ->session_id     |   `-RecoveryExpr 0x148027490 <col:17> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1480276a0 <line:10:9, col:64> '<dependent type>' contains-errors     | |-DeclRefExpr 0x148027600 <col:9> 'int ()' Function 0x148027548 'g_clear_object' 'int ()'     | `-UnaryOperator 0x148027688 <col:25, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x148027640 <col:26, col:40> '<dependent type>' contains-errors lvalue ->worker_manager_interface     |     `-RecoveryExpr 0x148027620 <col:26> '<dependent type>' contains-errors lvalue     |-IfStmt 0x149008910 <line:12:9, line:32:9>     | |-BinaryOperator 0x148027788 <line:12:13, col:43> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x1480276e8 <col:13, col:27> '<dependent type>' contains-errors lvalue ->worker_proxy     | | | `-RecoveryExpr 0x1480276c8 <col:13> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x148027768 <col:43> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1490088c8 <col:49, line:32:9>     |   |-CallExpr 0x148027af0 <line:13:17, line:15:67> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x148027888 <line:13:17> 'int ()' Function 0x1480277d0 'g_signal_handlers_disconnect_by_func' 'int ()'     |   | |-CXXDependentScopeMemberExpr 0x1480278c8 <col:55, col:69> '<dependent type>' contains-errors lvalue ->worker_proxy     |   | | `-RecoveryExpr 0x1480278a8 <col:55> '<dependent type>' contains-errors lvalue     |   | |-CallExpr 0x148027ac8 <line:14:55, col:93> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x1480279f0 <col:55> 'int ()' Function 0x148027938 'G_CALLBACK' 'int ()'     |   | | `-RecoveryExpr 0x148027aa8 <col:67> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x148027a50 <line:15:55> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x148027cb0 <line:16:17, line:18:67> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x148027b28 <line:16:17> 'int ()' Function 0x1480277d0 'g_signal_handlers_disconnect_by_func' 'int ()'     |   | |-CXXDependentScopeMemberExpr 0x148027b68 <col:55, col:69> '<dependent type>' contains-errors lvalue ->worker_proxy     |   | | `-RecoveryExpr 0x148027b48 <col:55> '<dependent type>' contains-errors lvalue     |   | |-CallExpr 0x148027c88 <line:17:55, col:91> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x148027bb0 <col:55> 'int ()' Function 0x148027938 'G_CALLBACK' 'int ()'     |   | | `-RecoveryExpr 0x148027c68 <col:67> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x148027c10 <line:18:55> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x148027e70 <line:19:17, line:21:67> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x148027ce8 <line:19:17> 'int ()' Function 0x1480277d0 'g_signal_handlers_disconnect_by_func' 'int ()'     |   | |-CXXDependentScopeMemberExpr 0x148027d28 <col:55, col:69> '<dependent type>' contains-errors lvalue ->worker_proxy     |   | | `-RecoveryExpr 0x148027d08 <col:55> '<dependent type>' contains-errors lvalue     |   | |-CallExpr 0x148027e48 <line:20:55, col:92> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x148027d70 <col:55> 'int ()' Function 0x148027938 'G_CALLBACK' 'int ()'     |   | | `-RecoveryExpr 0x148027e28 <col:67> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x148027dd0 <line:21:55> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x148028030 <line:22:17, line:24:67> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x148027ea8 <line:22:17> 'int ()' Function 0x1480277d0 'g_signal_handlers_disconnect_by_func' 'int ()'     |   | |-CXXDependentScopeMemberExpr 0x148027ee8 <col:55, col:69> '<dependent type>' contains-errors lvalue ->worker_proxy     |   | | `-RecoveryExpr 0x148027ec8 <col:55> '<dependent type>' contains-errors lvalue     |   | |-CallExpr 0x148028008 <line:23:55, col:101> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x148027f30 <col:55> 'int ()' Function 0x148027938 'G_CALLBACK' 'int ()'     |   | | `-RecoveryExpr 0x148027fe8 <col:67> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x148027f90 <line:24:55> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x1480281f0 <line:25:17, line:27:67> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x148028068 <line:25:17> 'int ()' Function 0x1480277d0 'g_signal_handlers_disconnect_by_func' 'int ()'     |   | |-CXXDependentScopeMemberExpr 0x1480280a8 <col:55, col:69> '<dependent type>' contains-errors lvalue ->worker_proxy     |   | | `-RecoveryExpr 0x148028088 <col:55> '<dependent type>' contains-errors lvalue     |   | |-CallExpr 0x1480281c8 <line:26:55, col:100> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x1480280f0 <col:55> 'int ()' Function 0x148027938 'G_CALLBACK' 'int ()'     |   | | `-RecoveryExpr 0x1480281a8 <col:67> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x148028150 <line:27:55> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x1480283b0 <line:28:17, line:30:67> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x148028228 <line:28:17> 'int ()' Function 0x1480277d0 'g_signal_handlers_disconnect_by_func' 'int ()'     |   | |-CXXDependentScopeMemberExpr 0x148028268 <col:55, col:69> '<dependent type>' contains-errors lvalue ->worker_proxy     |   | | `-RecoveryExpr 0x148028248 <col:55> '<dependent type>' contains-errors lvalue     |   | |-CallExpr 0x148028388 <line:29:55, col:97> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x1480282b0 <col:55> 'int ()' Function 0x148027938 'G_CALLBACK' 'int ()'     |   | | `-RecoveryExpr 0x148028368 <col:67> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x148028310 <line:30:55> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x1490088a0 <line:31:17, col:60> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x149008800 <col:17> 'int ()' Function 0x148027548 'g_clear_object' 'int ()'     |     `-UnaryOperator 0x149008888 <col:33, col:48> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-CXXDependentScopeMemberExpr 0x149008840 <col:34, col:48> '<dependent type>' contains-errors lvalue ->worker_proxy     |         `-RecoveryExpr 0x149008820 <col:34> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1490089d0 <line:33:9, col:47> '<dependent type>' contains-errors     | |-DeclRefExpr 0x149008930 <col:9> 'int ()' Function 0x148027548 'g_clear_object' 'int ()'     | `-UnaryOperator 0x1490089b8 <col:25, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x149008970 <col:26, col:40> '<dependent type>' contains-errors lvalue ->session     |     `-RecoveryExpr 0x149008950 <col:26> '<dependent type>' contains-errors lvalue     `-CallExpr 0x149008a38 <line:34:9, col:29> '<dependent type>' contains-errors       |-DeclRefExpr 0x1490089f8 <col:9> 'int ()' Function 0x14800e258 'g_free' 'int ()'       `-RecoveryExpr 0x149008a18 <col:17> '<dependent type>' contains-errors lvalue ","20552":"`-FunctionDecl 0x1428279c0  col:3 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x142827ac0 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x142827b28 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x142827b90 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x142827a68 <<invalid sloc>> Implicit 900 ","20287":"`-FunctionDecl 0x155140b48  line:1:12 sr9700_rx_fixup 'int (struct usbnet *, struct sk_buff *)' static   |-ParmVarDecl 0x155128648 <col:28, col:43> col:43 used dev 'struct usbnet *'   |-ParmVarDecl 0x155140a28 <col:48, col:64> col:64 used skb 'struct sk_buff *'   `-CompoundStmt 0x1551435e0 <line:2:1, line:47:1>     |-DeclStmt 0x155140d40 <line:3:2, col:24>     | `-VarDecl 0x155140cd8 <col:2, col:18> col:18 used sr_skb 'struct sk_buff *'     |-DeclStmt 0x155140dd8 <line:4:2, col:9>     | `-VarDecl 0x155140d70 <col:2, col:6> col:6 used len 'int'     |-IfStmt 0x1551412b0 <line:7:2, line:10:2>     | |-CallExpr 0x155141040 <line:7:6, col:40> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x155140f20 <col:6> 'int ()' Function 0x155140e68 'unlikely' 'int ()'     | | `-BinaryOperator 0x155141020 <col:15, col:26> 'int' contains-errors '<'     | |   |-RecoveryExpr 0x155140f78 <col:15, col:20> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x155140f40 <col:15> 'struct sk_buff *' lvalue ParmVar 0x155140a28 'skb' 'struct sk_buff *'     | |   `-RecoveryExpr 0x155141000 <col:26> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x155141290 <col:43, line:10:2>     |   |-CallExpr 0x155141230 <line:8:3, col:29> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x155141148 <col:3> 'int ()' Function 0x155141090 'netdev_err' 'int ()'     |   | |-RecoveryExpr 0x1551411a0 <col:14, col:19> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x155141168 <col:14> 'struct usbnet *' lvalue ParmVar 0x155128648 'dev' 'struct usbnet *'     |   | `-StringLiteral 0x155141210 <col:24> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x155141280 <line:9:3, col:10>     |     `-IntegerLiteral 0x155141260 <col:10> 'int' 0     |-WhileStmt 0x155143590 <line:13:2, line:44:2>     | |-BinaryOperator 0x155141388 <line:13:9, col:20> 'int' contains-errors '>'     | | |-RecoveryExpr 0x155141308 <col:9, col:14> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x1551412d0 <col:9> 'struct sk_buff *' lvalue ParmVar 0x155140a28 'skb' 'struct sk_buff *'     | | `-RecoveryExpr 0x155141368 <col:20> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x155143530 <col:36, line:44:2>     |   |-IfStmt 0x1551414d0 <line:14:3, line:15:11>     |   | |-BinaryOperator 0x155141480 <line:14:7, col:23> 'int' contains-errors '!='     |   | | |-ArraySubscriptExpr 0x155141440 <col:7, col:18> '<dependent type>' contains-errors lvalue     |   | | | |-ImplicitCastExpr 0x155141428 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>     |   | | | | `-RecoveryExpr 0x1551413e0 <col:7, col:12> '<dependent type>' contains-errors lvalue     |   | | | |   `-DeclRefExpr 0x1551413a8 <col:7> 'struct sk_buff *' lvalue ParmVar 0x155140a28 'skb' 'struct sk_buff *'     |   | | | `-IntegerLiteral 0x155141408 <col:17> 'int' 0     |   | | `-IntegerLiteral 0x155141460 <col:23> 'int' 64     |   | `-ReturnStmt 0x1551414c0 <line:15:4, col:11>     |   |   `-IntegerLiteral 0x1551414a0 <col:11> 'int' 0     |   |-BinaryOperator 0x155141760 <line:18:3, col:48> 'int' contains-errors '='     |   | |-DeclRefExpr 0x1551414f0 <col:3> 'int' lvalue Var 0x155140d70 'len' 'int'     |   | `-BinaryOperator 0x155141740 <col:9, col:48> '<dependent type>' contains-errors '-'     |   |   |-ParenExpr 0x155141700 <col:9, col:44> '<dependent type>' contains-errors     |   |   | `-BinaryOperator 0x1551416e0 <col:10, col:43> '<dependent type>' contains-errors '|'     |   |   |   |-ArraySubscriptExpr 0x1551415a8 <col:10, col:21> '<dependent type>' contains-errors lvalue     |   |   |   | |-ImplicitCastExpr 0x155141590 <col:10, col:15> '<dependent type>' contains-errors <LValueToRValue>     |   |   |   | | `-RecoveryExpr 0x155141548 <col:10, col:15> '<dependent type>' contains-errors lvalue     |   |   |   | |   `-DeclRefExpr 0x155141510 <col:10> 'struct sk_buff *' lvalue ParmVar 0x155140a28 'skb' 'struct sk_buff *'     |   |   |   | `-IntegerLiteral 0x155141570 <col:20> 'int' 1     |   |   |   `-ParenExpr 0x1551416c0 <col:25, col:43> '<dependent type>' contains-errors     |   |   |     `-BinaryOperator 0x1551416a0 <col:26, col:42> '<dependent type>' contains-errors '<<'     |   |   |       |-ArraySubscriptExpr 0x155141660 <col:26, col:37> '<dependent type>' contains-errors lvalue     |   |   |       | |-ImplicitCastExpr 0x155141648 <col:26, col:31> '<dependent type>' contains-errors <LValueToRValue>     |   |   |       | | `-RecoveryExpr 0x155141600 <col:26, col:31> '<dependent type>' contains-errors lvalue     |   |   |       | |   `-DeclRefExpr 0x1551415c8 <col:26> 'struct sk_buff *' lvalue ParmVar 0x155140a28 'skb' 'struct sk_buff *'     |   |   |       | `-IntegerLiteral 0x155141628 <col:36> 'int' 2     |   |   |       `-IntegerLiteral 0x155141680 <col:42> 'int' 8     |   |   `-IntegerLiteral 0x155141720 <col:48> 'int' 4     |   |-IfStmt 0x155141848 <line:20:3, line:21:11>     |   | |-BinaryOperator 0x1551417f8 <line:20:7, col:13> 'int' contains-errors '>'     |   | | |-DeclRefExpr 0x155141780 <col:7> 'int' lvalue Var 0x155140d70 'len' 'int'     |   | | `-RecoveryExpr 0x1551417d8 <col:13> '<dependent type>' contains-errors lvalue     |   | `-ReturnStmt 0x155141838 <line:21:4, col:11>     |   |   `-IntegerLiteral 0x155141818 <col:11> 'int' 0     |   |-IfStmt 0x155142d08 <line:24:3, line:30:3>     |   | |-RecoveryExpr 0x155141920 <line:24:7, col:40> '_Bool' contains-errors     |   | `-CompoundStmt 0x155142cd8 <col:43, line:30:3>     |   |   |-CallExpr 0x155142968 <line:25:4, col:19> 'int'     |   |   | |-ImplicitCastExpr 0x155142950 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x1551428b8 <col:4> 'int ()' Function 0x155142800 'skb_pull' 'int ()'     |   |   | |-ImplicitCastExpr 0x155142998 <col:13> 'struct sk_buff *' <LValueToRValue>     |   |   | | `-DeclRefExpr 0x1551428d8 <col:13> 'struct sk_buff *' lvalue ParmVar 0x155140a28 'skb' 'struct sk_buff *'     |   |   | `-IntegerLiteral 0x1551428f8 <col:18> 'int' 3     |   |   |-BinaryOperator 0x155142a30 <line:26:4, col:15> '<dependent type>' contains-errors '='     |   |   | |-RecoveryExpr 0x1551429e8 <col:4, col:9> '<dependent type>' contains-errors lvalue     |   |   | | `-DeclRefExpr 0x1551429b0 <col:4> 'struct sk_buff *' lvalue ParmVar 0x155140a28 'skb' 'struct sk_buff *'     |   |   | `-DeclRefExpr 0x155142a10 <col:15> 'int' lvalue Var 0x155140d70 'len' 'int'     |   |   |-CallExpr 0x155142ba8 <line:27:4, col:33> 'int'     |   |   | |-ImplicitCastExpr 0x155142b90 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x155142b30 <col:4> 'int ()' Function 0x155142a78 'skb_set_tail_pointer' 'int ()'     |   |   | |-ImplicitCastExpr 0x155142bd8 <col:25> 'struct sk_buff *' <LValueToRValue>     |   |   | | `-DeclRefExpr 0x155142b50 <col:25> 'struct sk_buff *' lvalue ParmVar 0x155140a28 'skb' 'struct sk_buff *'     |   |   | `-ImplicitCastExpr 0x155142bf0 <col:30> 'int' <LValueToRValue>     |   |   |   `-DeclRefExpr 0x155142b70 <col:30> 'int' lvalue Var 0x155140d70 'len' 'int'     |   |   `-ReturnStmt 0x155142cc8 <line:29:4, col:11>     |   |     `-IntegerLiteral 0x155142ca8 <col:11> 'int' 2     |   |-BinaryOperator 0x155142f20 <line:33:3, col:37> 'struct sk_buff *' contains-errors '='     |   | |-DeclRefExpr 0x155142d28 <col:3> 'struct sk_buff *' lvalue Var 0x155140cd8 'sr_skb' 'struct sk_buff *'     |   | `-CallExpr 0x155142ef0 <col:12, col:37> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x155142e28 <col:12> 'int ()' Function 0x155142d70 'skb_clone' 'int ()'     |   |   |-DeclRefExpr 0x155142e48 <col:22> 'struct sk_buff *' lvalue ParmVar 0x155140a28 'skb' 'struct sk_buff *'     |   |   `-RecoveryExpr 0x155142ed0 <col:27> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x155142fc0 <line:34:3, line:35:11>     |   | |-UnaryOperator 0x155142f78 <line:34:7, col:8> 'int' prefix '!' cannot overflow     |   | | `-ImplicitCastExpr 0x155142f60 <col:8> 'struct sk_buff *' <LValueToRValue>     |   | |   `-DeclRefExpr 0x155142f40 <col:8> 'struct sk_buff *' lvalue Var 0x155140cd8 'sr_skb' 'struct sk_buff *'     |   | `-ReturnStmt 0x155142fb0 <line:35:4, col:11>     |   |   `-IntegerLiteral 0x155142f90 <col:11> 'int' 0     |   |-BinaryOperator 0x155143060 <line:37:3, col:17> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x155143018 <col:3, col:11> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x155142fe0 <col:3> 'struct sk_buff *' lvalue Var 0x155140cd8 'sr_skb' 'struct sk_buff *'     |   | `-DeclRefExpr 0x155143040 <col:17> 'int' lvalue Var 0x155140d70 'len' 'int'     |   |-BinaryOperator 0x155143180 <line:38:3, col:30> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x1551430b8 <col:3, col:11> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x155143080 <col:3> 'struct sk_buff *' lvalue Var 0x155140cd8 'sr_skb' 'struct sk_buff *'     |   | `-BinaryOperator 0x155143160 <col:18, col:30> '<dependent type>' contains-errors '+'     |   |   |-RecoveryExpr 0x155143118 <col:18, col:23> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x1551430e0 <col:18> 'struct sk_buff *' lvalue ParmVar 0x155140a28 'skb' 'struct sk_buff *'     |   |   `-IntegerLiteral 0x155143140 <col:30> 'int' 3     |   |-CallExpr 0x155143218 <line:39:3, col:35> 'int'     |   | |-ImplicitCastExpr 0x155143200 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x1551431a0 <col:3> 'int ()' Function 0x155142a78 'skb_set_tail_pointer' 'int ()'     |   | |-ImplicitCastExpr 0x155143248 <col:24> 'struct sk_buff *' <LValueToRValue>     |   | | `-DeclRefExpr 0x1551431c0 <col:24> 'struct sk_buff *' lvalue Var 0x155140cd8 'sr_skb' 'struct sk_buff *'     |   | `-ImplicitCastExpr 0x155143260 <col:32> 'int' <LValueToRValue>     |   |   `-DeclRefExpr 0x1551431e0 <col:32> 'int' lvalue Var 0x155140d70 'len' 'int'     |   `-CallExpr 0x155143470 <line:41:3, col:32> 'int'     |     |-ImplicitCastExpr 0x155143458 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1551433f8 <col:3> 'int ()' Function 0x155143340 'usbnet_skb_return' 'int ()'     |     |-ImplicitCastExpr 0x1551434a0 <col:21> 'struct usbnet *' <LValueToRValue>     |     | `-DeclRefExpr 0x155143418 <col:21> 'struct usbnet *' lvalue ParmVar 0x155128648 'dev' 'struct usbnet *'     |     `-ImplicitCastExpr 0x1551434b8 <col:26> 'struct sk_buff *' <LValueToRValue>     |       `-DeclRefExpr 0x155143438 <col:26> 'struct sk_buff *' lvalue Var 0x155140cd8 'sr_skb' 'struct sk_buff *'     `-ReturnStmt 0x1551435d0 <line:46:2, col:9>       `-IntegerLiteral 0x1551435b0 <col:9> 'int' 0 ","20417":"`-FunctionDecl 0x139144c00  line:1:1 add_cfs_task_weight 'int (struct cfs_rq *, unsigned long)'   |-ParmVarDecl 0x139128648 <col:21, col:36> col:36 used cfs_rq 'struct cfs_rq *'   |-ParmVarDecl 0x1391286c8 <col:44, col:58> col:58 used weight 'unsigned long'   `-CompoundStmt 0x139144db0 <line:2:1, line:4:1>     `-CompoundAssignOperator 0x139144d80 <line:3:2, col:25> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'       |-RecoveryExpr 0x139144d38 <col:2, col:10> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x139144d00 <col:2> 'struct cfs_rq *' lvalue ParmVar 0x139128648 'cfs_rq' 'struct cfs_rq *'       `-DeclRefExpr 0x139144d60 <col:25> 'unsigned long' lvalue ParmVar 0x1391286c8 'weight' 'unsigned long' ","20794":"`-FunctionDecl 0x157128758  line:1:12 referenced etm_event_init 'int (struct perf_event *)' static   |-ParmVarDecl 0x157128648 <col:27, col:46> col:46 used event 'struct perf_event *'   `-CompoundStmt 0x157141238 <line:2:1, line:17:1>     |-DeclStmt 0x157140af0 <line:3:2, col:13>     | `-VarDecl 0x157140a68 <col:2, col:12> col:6 used ret 'int' cinit     |   `-IntegerLiteral 0x157140ad0 <col:12> 'int' 0     |-IfStmt 0x157140e50 <line:5:2, line:8:2>     | |-BinaryOperator 0x157140cb0 <line:5:6, col:34> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x157140b68 <col:6, col:18> '<dependent type>' contains-errors lvalue .type     | | | `-RecoveryExpr 0x157140b40 <col:6, col:13> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x157140b08 <col:6> 'struct perf_event *' lvalue ParmVar 0x157128648 'event' 'struct perf_event *'     | | `-CXXDependentScopeMemberExpr 0x157140c68 <col:26, col:34> '<dependent type>' contains-errors lvalue .type     | |   `-RecoveryExpr 0x157140c48 <col:26> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x157140e30 <col:40, line:8:2>     |   |-BinaryOperator 0x157140da8 <line:6:3, col:10> 'int' contains-errors '='     |   | |-DeclRefExpr 0x157140cd0 <col:3> 'int' lvalue Var 0x157140a68 'ret' 'int'     |   | `-UnaryOperator 0x157140d90 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x157140d78 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x157140d58 <col:10> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x157140e18 <line:7:3, col:8> 'out' 0x157140dc8     |-BinaryOperator 0x157141068 <line:10:2, col:36> 'int' '='     | |-DeclRefExpr 0x157140e70 <col:2> 'int' lvalue Var 0x157140a68 'ret' 'int'     | `-CallExpr 0x157141028 <col:8, col:36> 'int'     |   |-ImplicitCastExpr 0x157141010 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x157140fa0 <col:8> 'int ()' Function 0x157140ee8 'etm_addr_filters_alloc' 'int ()'     |   `-ImplicitCastExpr 0x157141050 <col:31> 'struct perf_event *' <LValueToRValue>     |     `-DeclRefExpr 0x157140fc0 <col:31> 'struct perf_event *' lvalue ParmVar 0x157128648 'event' 'struct perf_event *'     |-IfStmt 0x1571410d8 <line:11:2, line:12:8>     | |-ImplicitCastExpr 0x1571410a8 <line:11:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x157141088 <col:6> 'int' lvalue Var 0x157140a68 'ret' 'int'     | `-GotoStmt 0x1571410c0 <line:12:3, col:8> 'out' 0x157140dc8     |-BinaryOperator 0x1571411b0 <line:14:2, col:19> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x157141130 <col:2, col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1571410f8 <col:2> 'struct perf_event *' lvalue ParmVar 0x157128648 'event' 'struct perf_event *'     | `-DeclRefExpr 0x157141190 <col:19> 'int (struct perf_event *)' Function 0x157128758 'etm_event_init' 'int (struct perf_event *)'     `-LabelStmt 0x157141218 <line:15:1, line:16:9> 'out'       `-ReturnStmt 0x157141208 <col:2, col:9>         `-ImplicitCastExpr 0x1571411f0 <col:9> 'int' <LValueToRValue>           `-DeclRefExpr 0x1571411d0 <col:9> 'int' lvalue Var 0x157140a68 'ret' 'int' ","20952":"`-FunctionDecl 0x120141968  line:1:5 invalid change_huge_pmd 'int (struct vm_area_struct *, int *, unsigned long, int)'   |-ParmVarDecl 0x120128648 <col:21, col:44> col:44 used vma 'struct vm_area_struct *'   |-ParmVarDecl 0x120128718 <col:49, col:56> col:56 invalid pmd 'int *'   |-ParmVarDecl 0x120128798 <line:2:3, col:17> col:17 used addr 'unsigned long'   |-ParmVarDecl 0x120141818 <col:23, col:32> col:32 invalid newprot 'int'   `-CompoundStmt 0x120143130 <line:3:1, line:26:1>     |-DeclStmt 0x120141c78 <line:4:2, col:35>     | |-RecordDecl 0x120141a30 <col:2, col:9> col:9 struct mm_struct     | `-VarDecl 0x120141b98 <col:2, col:30> col:20 used mm 'struct mm_struct *' cinit     |   `-RecoveryExpr 0x120141c38 <col:25, col:30> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x120141c00 <col:25> 'struct vm_area_struct *' lvalue ParmVar 0x120128648 'vma' 'struct vm_area_struct *'     |-DeclStmt 0x120141d30 <line:5:2, col:13>     | `-VarDecl 0x120141ca8 <col:2, col:12> col:6 used ret 'int' cinit     |   `-IntegerLiteral 0x120141d10 <col:12> 'int' 0     |-CallExpr 0x120141f38 <line:7:2, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x120141ea0 <col:2> 'int ()' Function 0x120141de8 'spin_lock' 'int ()'     | `-UnaryOperator 0x120141f20 <col:12, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x120141ef8 <col:13, col:17> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x120141ec0 <col:13> 'struct mm_struct *' contains-errors lvalue Var 0x120141b98 'mm' 'struct mm_struct *'     |-IfStmt 0x1201430b8 <line:8:2, line:23:43> has_else     | |-CallExpr 0x1201421d8 <line:8:6, col:33> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x120142040 <col:6> 'int ()' Function 0x120141f88 'likely' 'int ()'     | | `-CallExpr 0x1201421b0 <col:13, col:32> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x120142140 <col:13> 'int ()' Function 0x120142088 'pmd_trans_huge' 'int ()'     | |   `-UnaryOperator 0x120142198 <col:28, col:29> '<dependent type>' contains-errors prefix '*' cannot overflow     | |     `-ImplicitCastExpr 0x120142180 <col:29> '<dependent type>' contains-errors <LValueToRValue>     | |       `-RecoveryExpr 0x120142160 <col:29> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x120142f98 <col:36, line:22:2>     | | `-IfStmt 0x120142f68 <line:9:3, line:21:3> has_else     | |   |-CallExpr 0x120142478 <line:9:7, col:41> '<dependent type>' contains-errors     | |   | |-DeclRefExpr 0x1201422e0 <col:7> 'int ()' Function 0x120142228 'unlikely' 'int ()'     | |   | `-CallExpr 0x120142450 <col:16, col:40> '<dependent type>' contains-errors     | |   |   |-DeclRefExpr 0x1201423e0 <col:16> 'int ()' Function 0x120142328 'pmd_trans_splitting' 'int ()'     | |   |   `-UnaryOperator 0x120142438 <col:36, col:37> '<dependent type>' contains-errors prefix '*' cannot overflow     | |   |     `-ImplicitCastExpr 0x120142420 <col:37> '<dependent type>' contains-errors <LValueToRValue>     | |   |       `-RecoveryExpr 0x120142400 <col:37> '<dependent type>' contains-errors lvalue     | |   |-CompoundStmt 0x120142800 <col:44, line:12:3>     | |   | |-CallExpr 0x120142618 <line:10:4, col:36> '<dependent type>' contains-errors     | |   | | |-DeclRefExpr 0x120142580 <col:4> 'int ()' Function 0x1201424c8 'spin_unlock' 'int ()'     | |   | | `-UnaryOperator 0x120142600 <col:16, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   | |   `-RecoveryExpr 0x1201425d8 <col:17, col:21> '<dependent type>' contains-errors lvalue     | |   | |     `-DeclRefExpr 0x1201425a0 <col:17> 'struct mm_struct *' contains-errors lvalue Var 0x120141b98 'mm' 'struct mm_struct *'     | |   | `-CallExpr 0x1201427c0 <line:11:4, col:43> '<dependent type>' contains-errors     | |   |   |-DeclRefExpr 0x120142720 <col:4> 'int ()' Function 0x120142668 'wait_split_huge_page' 'int ()'     | |   |   |-RecoveryExpr 0x120142778 <col:25, col:30> '<dependent type>' contains-errors lvalue     | |   |   | `-DeclRefExpr 0x120142740 <col:25> 'struct vm_area_struct *' lvalue ParmVar 0x120128648 'vma' 'struct vm_area_struct *'     | |   |   `-RecoveryExpr 0x1201427a0 <col:40> '<dependent type>' contains-errors lvalue     | |   `-CompoundStmt 0x120142f48 <line:12:10, line:21:3>     | |     |-CallExpr 0x120142d60 <line:18:4, col:44> '<dependent type>' contains-errors     | |     | |-DeclRefExpr 0x120142c80 <col:4> 'int ()' Function 0x1201424c8 'spin_unlock' 'int ()'     | |     | `-UnaryOperator 0x120142d48 <col:16, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     |   `-CXXDependentScopeMemberExpr 0x120142d00 <col:17, col:29> '<dependent type>' contains-errors lvalue ->page_table_lock     | |     |     `-RecoveryExpr 0x120142cd8 <col:17, col:22> '<dependent type>' contains-errors lvalue     | |     |       `-DeclRefExpr 0x120142ca0 <col:17> 'struct vm_area_struct *' lvalue ParmVar 0x120128648 'vma' 'struct vm_area_struct *'     | |     `-BinaryOperator 0x120142f28 <line:20:4, col:10> 'int' '='     | |       |-DeclRefExpr 0x120142ee8 <col:4> 'int' lvalue Var 0x120141ca8 'ret' 'int'     | |       `-IntegerLiteral 0x120142f08 <col:10> 'int' 1     | `-CallExpr 0x120143090 <line:23:3, col:43> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x120142fb0 <col:3> 'int ()' Function 0x1201424c8 'spin_unlock' 'int ()'     |   `-UnaryOperator 0x120143078 <col:15, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-CXXDependentScopeMemberExpr 0x120143030 <col:16, col:28> '<dependent type>' contains-errors lvalue ->page_table_lock     |       `-RecoveryExpr 0x120143008 <col:16, col:21> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x120142fd0 <col:16> 'struct vm_area_struct *' lvalue ParmVar 0x120128648 'vma' 'struct vm_area_struct *'     `-ReturnStmt 0x120143120 <line:25:2, col:9>       `-ImplicitCastExpr 0x120143108 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x1201430e8 <col:9> 'int' lvalue Var 0x120141ca8 'ret' 'int' ","21060":"`-FunctionDecl 0x1259283a8  line:1:1 invalid create_token_tree 'int (int *, int *, int *, const int *)'   |-ParmVarDecl 0x125928128 <col:20, col:30> col:30 referenced invalid dfa 'int *'   |-ParmVarDecl 0x1259281a8 <col:35, col:47> col:47 referenced invalid left 'int *'   |-ParmVarDecl 0x125928228 <col:53, col:65> col:65 referenced invalid right 'int *'   |-ParmVarDecl 0x1259282a8 <line:2:6, col:24> col:24 invalid token 'const int *'   `-CompoundStmt 0x1259420d0 <line:3:1, line:32:1>     `-IfStmt 0x125941cc0 <line:5:3, line:14:5>       |-CallExpr 0x125928730 <line:5:7, col:64> '<dependent type>' contains-errors       | |-DeclRefExpr 0x1259285e0 <col:7> 'int ()' Function 0x125928528 'BE' 'int ()'       | |-BinaryOperator 0x125928710 <col:11, col:40> 'int' contains-errors '=='       | | |-CXXDependentScopeMemberExpr 0x125928620 <col:11, col:16> '<dependent type>' contains-errors lvalue ->str_tree_storage_idx       | | | `-RecoveryExpr 0x125928600 <col:11> '<dependent type>' contains-errors lvalue       | | `-RecoveryExpr 0x1259286f0 <col:40> '<dependent type>' contains-errors lvalue       | `-IntegerLiteral 0x1259286a0 <col:63> 'int' 0       `-CompoundStmt 0x125941c98 <line:6:5, line:14:5>         |-IfStmt 0x125941a38 <line:9:7, line:10:9>         | |-BinaryOperator 0x1259419d0 <line:9:11, col:22> 'int' contains-errors '=='         | | |-RecoveryExpr 0x125941990 <col:11> '<dependent type>' contains-errors lvalue         | | `-RecoveryExpr 0x1259419b0 <col:22> '<dependent type>' contains-errors lvalue         | `-ReturnStmt 0x125941a28 <line:10:2, col:9>         |   `-RecoveryExpr 0x125941a08 <col:9> '<dependent type>' contains-errors lvalue         |-BinaryOperator 0x125941ba8 <line:12:7, col:31> '<dependent type>' contains-errors '='         | |-CXXDependentScopeMemberExpr 0x125941b08 <col:7, col:12> '<dependent type>' contains-errors lvalue ->str_tree_storage         | | `-RecoveryExpr 0x125941ae0 <col:7> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x125941ac0 <col:7> 'int *' lvalue ParmVar 0x125928128 'dfa' 'int *'         | `-RecoveryExpr 0x125941b88 <col:31> '<dependent type>' contains-errors lvalue         `-BinaryOperator 0x125941c78 <line:13:7, col:35> '<dependent type>' contains-errors '='           |-CXXDependentScopeMemberExpr 0x125941c10 <col:7, col:12> '<dependent type>' contains-errors lvalue ->str_tree_storage_idx           | `-RecoveryExpr 0x125941be8 <col:7> '<dependent type>' contains-errors lvalue           |   `-DeclRefExpr 0x125941bc8 <col:7> 'int *' lvalue ParmVar 0x125928128 'dfa' 'int *'           `-IntegerLiteral 0x125941c58 <col:35> 'int' 0 ","20879":"`-FunctionDecl 0x13384c000  line:1:5 udp6_seq_show 'int (struct seq_file *, void *)'   |-ParmVarDecl 0x133829048 <col:19, col:36> col:36 used seq 'struct seq_file *'   |-ParmVarDecl 0x1338290c8 <col:41, col:47> col:47 used v 'void *'   `-CompoundStmt 0x13384cd28 <line:2:1, line:13:1>     |-IfStmt 0x13384ccc8 <line:3:2, line:11:2> has_else     | |-BinaryOperator 0x13384c190 <line:3:6, col:11> 'int' contains-errors '=='     | | |-DeclRefExpr 0x13384c100 <col:6> 'void *' lvalue ParmVar 0x1338290c8 'v' 'void *'     | | `-RecoveryExpr 0x13384c170 <col:11> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x13384c398 <col:28, line:5:2>     | | `-CallExpr 0x13384c368 <line:4:3, col:38> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x13384c2c0 <col:3> 'int ()' Function 0x13384c208 'seq_puts' 'int ()'     | |   |-DeclRefExpr 0x13384c2e0 <col:12> 'struct seq_file *' lvalue ParmVar 0x133829048 'seq' 'struct seq_file *'     | |   `-RecoveryExpr 0x13384c348 <col:17> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13384cca0 <line:5:9, line:11:2>     |   |-DeclStmt 0x13384c668 <line:6:3, col:63>     |   | `-VarDecl 0x13384c3c8 <col:3, col:57> col:7 used bucket 'int' cinit     |   |   `-RecoveryExpr 0x13384c640 <col:16, col:57> '<dependent type>' contains-errors lvalue     |   |     `-ParenExpr 0x13384c620 <col:16, col:54> 'struct udp_iter_state *' contains-errors     |   |       `-CStyleCastExpr 0x13384c5f8 <col:17, col:47> 'struct udp_iter_state *' contains-errors <Dependent>     |   |         `-RecoveryExpr 0x13384c508 <col:42, col:47> '<dependent type>' contains-errors lvalue     |   |           `-DeclRefExpr 0x13384c4d0 <col:42> 'struct seq_file *' lvalue ParmVar 0x133829048 'seq' 'struct seq_file *'     |   |-DeclStmt 0x13384ca28 <line:7:3, col:38>     |   | |-RecordDecl 0x13384c680 <col:3, col:10> col:10 struct inet_sock     |   | `-VarDecl 0x13384c7e8 <col:3, col:37> col:21 inet 'struct inet_sock *' cinit     |   |   `-ImplicitCastExpr 0x13384c9f8 <col:28, col:37> 'struct inet_sock *' <IntegralToPointer>     |   |     `-CallExpr 0x13384c9b8 <col:28, col:37> 'int'     |   |       |-ImplicitCastExpr 0x13384c9a0 <col:28> 'int (*)()' <FunctionToPointerDecay>     |   |       | `-DeclRefExpr 0x13384c930 <col:28> 'int ()' Function 0x13384c878 'inet_sk' 'int ()'     |   |       `-ImplicitCastExpr 0x13384c9e0 <col:36> 'void *' <LValueToRValue>     |   |         `-DeclRefExpr 0x13384c950 <col:36> 'void *' lvalue ParmVar 0x1338290c8 'v' 'void *'     |   `-CallExpr 0x13384cc58 <line:10:3, col:54> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x13384cb20 <col:3> 'int ()' Function 0x13384ca68 'ip6_dgram_sock_seq_show' 'int ()'     |     |-DeclRefExpr 0x13384cb40 <col:27> 'struct seq_file *' lvalue ParmVar 0x133829048 'seq' 'struct seq_file *'     |     |-DeclRefExpr 0x13384cb60 <col:32> 'void *' lvalue ParmVar 0x1338290c8 'v' 'void *'     |     |-RecoveryExpr 0x13384cc18 <col:35> '<dependent type>' contains-errors lvalue     |     |-RecoveryExpr 0x13384cc38 <col:41> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13384cbb0 <col:48> 'int' contains-errors lvalue Var 0x13384c3c8 'bucket' 'int'     `-ReturnStmt 0x13384cd18 <line:12:2, col:9>       `-IntegerLiteral 0x13384ccf8 <col:9> 'int' 0 ","20550":"`-FunctionDecl 0x127928750  line:1:13 fsl_lpspi_read_rx_fifo 'void (struct fsl_lpspi_data *)' static   |-ParmVarDecl 0x127928648 <col:36, col:59> col:59 used fsl_lpspi 'struct fsl_lpspi_data *'   `-CompoundStmt 0x127940d70 <line:2:1, line:5:1>     `-WhileStmt 0x127940d50 <line:3:2, line:4:26>       |-RecoveryExpr 0x127940c88 <line:3:9, col:61> '_Bool' contains-errors       `-CallExpr 0x127940d28 <line:4:3, col:26> '<dependent type>' contains-errors         |-RecoveryExpr 0x127940ce0 <col:3, col:14> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x127940ca8 <col:3> 'struct fsl_lpspi_data *' lvalue ParmVar 0x127928648 'fsl_lpspi' 'struct fsl_lpspi_data *'         `-DeclRefExpr 0x127940d08 <col:17> 'struct fsl_lpspi_data *' lvalue ParmVar 0x127928648 'fsl_lpspi' 'struct fsl_lpspi_data *' ","20679":"`-FunctionDecl 0x14a80ddc8  line:1:1 create_worker_threads 'int (int)'   |-ParmVarDecl 0x14a80dcf0 <col:23, col:28> col:28 used n 'int'   `-CompoundStmt 0x14a8290c0 <line:2:1, line:58:1>     |-DeclStmt 0x14a80df58 <line:4:2, col:11>     | `-VarDecl 0x14a80def0 <col:2, col:10> col:10 used i 'int'     |-ForStmt 0x14a828c90 <line:9:2, line:42:2>     | |-BinaryOperator 0x14a80dfc8 <line:9:7, col:11> 'int' '='     | | |-DeclRefExpr 0x14a80df88 <col:7> 'int' lvalue Var 0x14a80def0 'i' 'int'     | | `-IntegerLiteral 0x14a80dfa8 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x14a80e058 <col:14, col:18> 'int' '<'     | | |-ImplicitCastExpr 0x14a80e028 <col:14> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x14a80dfe8 <col:14> 'int' lvalue Var 0x14a80def0 'i' 'int'     | | `-ImplicitCastExpr 0x14a80e040 <col:18> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x14a80e008 <col:18> 'int' lvalue ParmVar 0x14a80dcf0 'n' 'int'     | |-UnaryOperator 0x14a80e098 <col:21, col:22> 'int' postfix '++'     | | `-DeclRefExpr 0x14a80e078 <col:21> 'int' lvalue Var 0x14a80def0 'i' 'int'     | `-CompoundStmt 0x14a828c68 <col:26, line:42:2>     |   |-IfStmt 0x14a8286c0 <line:22:3, line:25:3>     |   | |-RecoveryExpr 0x14a828620 <line:22:7, line:23:46> '_Bool' contains-errors     |   | `-CompoundStmt 0x14a8286a8 <col:49, line:25:3>     |   |   `-GotoStmt 0x14a828690 <line:24:4, col:9> 'err' 0x14a828640     |   |-IfStmt 0x14a828770 <line:28:3, line:31:3>     |   | |-RecoveryExpr 0x14a828720 <line:28:7, line:29:46> '_Bool' contains-errors     |   | `-CompoundStmt 0x14a828758 <col:49, line:31:3>     |   |   `-GotoStmt 0x14a828740 <line:30:4, col:9> 'err' 0x14a828640     |   `-IfStmt 0x14a828c48 <line:35:3, line:41:3>     |     |-RecoveryExpr 0x14a828990 <line:35:7, line:36:11> '_Bool' contains-errors     |     `-CompoundStmt 0x14a828c30 <col:14, line:41:3>     |       `-GotoStmt 0x14a828c18 <line:40:4, col:9> 'err' 0x14a828640     |-ForStmt 0x14a828f60 <line:45:2, line:51:2>     | |-BinaryOperator 0x14a828d08 <line:45:7, col:11> 'int' '='     | | |-DeclRefExpr 0x14a828cc8 <col:7> 'int' lvalue Var 0x14a80def0 'i' 'int'     | | `-IntegerLiteral 0x14a828ce8 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x14a828d98 <col:14, col:18> 'int' '<'     | | |-ImplicitCastExpr 0x14a828d68 <col:14> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x14a828d28 <col:14> 'int' lvalue Var 0x14a80def0 'i' 'int'     | | `-ImplicitCastExpr 0x14a828d80 <col:18> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x14a828d48 <col:18> 'int' lvalue ParmVar 0x14a80dcf0 'n' 'int'     | |-UnaryOperator 0x14a828dd8 <col:21, col:22> 'int' postfix '++'     | | `-DeclRefExpr 0x14a828db8 <col:21> 'int' lvalue Var 0x14a80def0 'i' 'int'     | `-CompoundStmt 0x14a828f50 <col:26, line:51:2>     `-LabelStmt 0x14a8290a0 <line:55:1, col:4> 'err'       `-NullStmt 0x14a829098 <col:4> ","20544":"`-FunctionDecl 0x12900ddc8  line:1:18 invalid base_enabledebuginfo 'int (int)' static   |-ParmVarDecl 0x12900dcf0 <col:39, col:51> col:51 invalid v 'int'   `-CompoundStmt 0x12900e1e8 <line:2:1, line:7:1>     `-ReturnStmt 0x12900e1d8 <line:6:5, col:12>       `-IntegerLiteral 0x12900e1b8 <col:12> 'int' 0 ","21172":"`-FunctionDecl 0x13e026748  line:1:19 emulate_grp45 'int (struct x86_emulate_ctxt *, struct x86_emulate_ops *)' static inline   |-ParmVarDecl 0x13e00e248 <col:33, col:58> col:58 used ctxt 'struct x86_emulate_ctxt *'   |-ParmVarDecl 0x13e026628 <line:2:11, col:35> col:35 ops 'struct x86_emulate_ops *'   `-CompoundStmt 0x13e028c68 <line:3:1, line:29:1>     |-DeclStmt 0x13e026ab0 <line:4:2, col:40>     | |-RecordDecl 0x13e026848 <col:2, col:9> col:9 struct decode_cache     | `-VarDecl 0x13e0269b8 <col:2, col:34> col:23 used c 'struct decode_cache *' cinit     |   `-UnaryOperator 0x13e026a80 <col:27, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x13e026a58 <col:28, col:34> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13e026a20 <col:28> 'struct x86_emulate_ctxt *' lvalue ParmVar 0x13e00e248 'ctxt' 'struct x86_emulate_ctxt *'     |-SwitchStmt 0x13e026b40 <line:6:2, line:27:2>     | |-ImplicitCastExpr 0x13e026b28 <line:6:10, col:13> '<dependent type>' contains-errors <LValueToRValue>     | | `-RecoveryExpr 0x13e026b00 <col:10, col:13> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13e026ac8 <col:10> 'struct decode_cache *' contains-errors lvalue Var 0x13e0269b8 'c' 'struct decode_cache *'     | `-CompoundStmt 0x13e028be0 <col:24, line:27:2>     |   |-CaseStmt 0x13e026b88 <line:7:2, line:8:42>     |   | |-IntegerLiteral 0x13e026b68 <line:7:7> 'int' 0     |   | `-CallExpr 0x13e026e20 <line:8:3, col:42> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x13e026ce0 <col:3> 'int ()' Function 0x13e026c28 'emulate_1op' 'int ()'     |   |   |-StringLiteral 0x13e026d40 <col:15> 'char[4]' lvalue \"STR\"     |   |   |-RecoveryExpr 0x13e026d98 <col:22, col:25> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x13e026d60 <col:22> 'struct decode_cache *' contains-errors lvalue Var 0x13e0269b8 'c' 'struct decode_cache *'     |   |   `-RecoveryExpr 0x13e026df8 <col:30, col:36> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x13e026dc0 <col:30> 'struct x86_emulate_ctxt *' lvalue ParmVar 0x13e00e248 'ctxt' 'struct x86_emulate_ctxt *'     |   |-BreakStmt 0x13e026e58 <line:9:3>     |   |-CaseStmt 0x13e026e80 <line:10:2, line:11:42>     |   | |-IntegerLiteral 0x13e026e60 <line:10:7> 'int' 1     |   | `-CallExpr 0x13e026fa8 <line:11:3, col:42> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x13e026ea8 <col:3> 'int ()' Function 0x13e026c28 'emulate_1op' 'int ()'     |   |   |-StringLiteral 0x13e026ec8 <col:15> 'char[4]' lvalue \"STR\"     |   |   |-RecoveryExpr 0x13e026f20 <col:22, col:25> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x13e026ee8 <col:22> 'struct decode_cache *' contains-errors lvalue Var 0x13e0269b8 'c' 'struct decode_cache *'     |   |   `-RecoveryExpr 0x13e026f80 <col:30, col:36> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x13e026f48 <col:30> 'struct x86_emulate_ctxt *' lvalue ParmVar 0x13e00e248 'ctxt' 'struct x86_emulate_ctxt *'     |   |-BreakStmt 0x13e026fe0 <line:12:3>     |   |-CaseStmt 0x13e027008 <line:13:2, line:20:2>     |   | |-IntegerLiteral 0x13e026fe8 <line:13:7> 'int' 2     |   | `-CompoundStmt 0x13e027530 <col:11, line:20:2>     |   |   |-DeclStmt 0x13e0270b0 <line:14:3, col:19>     |   |   | `-VarDecl 0x13e027048 <col:3, col:12> col:12 used old_eip 'long'     |   |   |-BinaryOperator 0x13e027148 <line:15:3, col:16> 'long' contains-errors '='     |   |   | |-DeclRefExpr 0x13e0270c8 <col:3> 'long' lvalue Var 0x13e027048 'old_eip' 'long'     |   |   | `-RecoveryExpr 0x13e027120 <col:13, col:16> '<dependent type>' contains-errors lvalue     |   |   |   `-DeclRefExpr 0x13e0270e8 <col:13> 'struct decode_cache *' contains-errors lvalue Var 0x13e0269b8 'c' 'struct decode_cache *'     |   |   |-BinaryOperator 0x13e027270 <line:16:3, col:19> '<dependent type>' contains-errors '='     |   |   | |-RecoveryExpr 0x13e0271a0 <col:3, col:6> '<dependent type>' contains-errors lvalue     |   |   | | `-DeclRefExpr 0x13e027168 <col:3> 'struct decode_cache *' contains-errors lvalue Var 0x13e0269b8 'c' 'struct decode_cache *'     |   |   | `-CXXDependentScopeMemberExpr 0x13e027228 <col:12, col:19> '<dependent type>' contains-errors lvalue .val     |   |   |   `-RecoveryExpr 0x13e027200 <col:12, col:15> '<dependent type>' contains-errors lvalue     |   |   |     `-DeclRefExpr 0x13e0271c8 <col:12> 'struct decode_cache *' contains-errors lvalue Var 0x13e0269b8 'c' 'struct decode_cache *'     |   |   |-BinaryOperator 0x13e027358 <line:17:3, col:16> '<dependent type>' contains-errors '='     |   |   | |-CXXDependentScopeMemberExpr 0x13e0272f0 <col:3, col:10> '<dependent type>' contains-errors lvalue .val     |   |   | | `-RecoveryExpr 0x13e0272c8 <col:3, col:6> '<dependent type>' contains-errors lvalue     |   |   | |   `-DeclRefExpr 0x13e027290 <col:3> 'struct decode_cache *' contains-errors lvalue Var 0x13e0269b8 'c' 'struct decode_cache *'     |   |   | `-DeclRefExpr 0x13e027338 <col:16> 'long' lvalue Var 0x13e027048 'old_eip' 'long'     |   |   |-CallExpr 0x13e0274e8 <line:18:3, col:20> 'int'     |   |   | |-ImplicitCastExpr 0x13e0274d0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x13e027458 <col:3> 'int ()' Function 0x13e0273a0 'emulate_push' 'int ()'     |   |   | `-ImplicitCastExpr 0x13e027510 <col:16> 'struct x86_emulate_ctxt *' <LValueToRValue>     |   |   |   `-DeclRefExpr 0x13e027478 <col:16> 'struct x86_emulate_ctxt *' lvalue ParmVar 0x13e00e248 'ctxt' 'struct x86_emulate_ctxt *'     |   |   `-BreakStmt 0x13e027528 <line:19:3>     |   |-CaseStmt 0x13e027590 <line:21:2, line:22:19>     |   | |-IntegerLiteral 0x13e027570 <line:21:7> 'int' 4     |   | `-BinaryOperator 0x13e028ad0 <line:22:3, col:19> '<dependent type>' contains-errors '='     |   |   |-RecoveryExpr 0x13e028a00 <col:3, col:6> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x13e0275b8 <col:3> 'struct decode_cache *' contains-errors lvalue Var 0x13e0269b8 'c' 'struct decode_cache *'     |   |   `-CXXDependentScopeMemberExpr 0x13e028a88 <col:12, col:19> '<dependent type>' contains-errors lvalue .val     |   |     `-RecoveryExpr 0x13e028a60 <col:12, col:15> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x13e028a28 <col:12> 'struct decode_cache *' contains-errors lvalue Var 0x13e0269b8 'c' 'struct decode_cache *'     |   |-BreakStmt 0x13e028af0 <line:23:3>     |   |-CaseStmt 0x13e028b18 <line:24:2, line:25:20>     |   | |-IntegerLiteral 0x13e028af8 <line:24:7> 'int' 6     |   | `-CallExpr 0x13e028b98 <line:25:3, col:20> 'int'     |   |   |-ImplicitCastExpr 0x13e028b80 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x13e028b40 <col:3> 'int ()' Function 0x13e0273a0 'emulate_push' 'int ()'     |   |   `-ImplicitCastExpr 0x13e028bc0 <col:16> 'struct x86_emulate_ctxt *' <LValueToRValue>     |   |     `-DeclRefExpr 0x13e028b60 <col:16> 'struct x86_emulate_ctxt *' lvalue ParmVar 0x13e00e248 'ctxt' 'struct x86_emulate_ctxt *'     |   `-BreakStmt 0x13e028bd8 <line:26:3>     `-ReturnStmt 0x13e028c58 <line:28:2, col:9>       `-IntegerLiteral 0x13e028c38 <col:9> 'int' 0 ","21241":"`-FunctionDecl 0x1530095b8  col:3 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x1530096b8 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x153009660 <<invalid sloc>> Implicit 873 ","21070":"`-FunctionDecl 0x13e00e358  line:1:12 spawn_next_command_in_evd 'int (struct analyze_event_data *)' static   |-ParmVarDecl 0x13e00e248 <col:38, col:65> col:65 used evd 'struct analyze_event_data *'   `-CompoundStmt 0x13e027018 <line:2:1, line:15:1>     |-BinaryOperator 0x13e026888 <line:3:5, col:56> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13e026688 <col:5, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13e026650 <col:5> 'struct analyze_event_data *' lvalue ParmVar 0x13e00e248 'evd' 'struct analyze_event_data *'     | `-CallExpr 0x13e026860 <col:21, col:56> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13e0267e0 <col:21> 'int ()' Function 0x13e026728 'export_event_config' 'int ()'     |   `-RecoveryExpr 0x13e026838 <col:41, col:46> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13e026800 <col:41> 'struct analyze_event_data *' lvalue ParmVar 0x13e00e248 'evd' 'struct analyze_event_data *'     |-DeclStmt 0x13e026bd8 <line:4:5, col:98>     | `-VarDecl 0x13e0268c0 <col:5, col:97> col:9 used r 'int' cinit     |   `-CallExpr 0x13e026b98 <col:13, col:97> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x13e026a08 <col:13> 'int ()' Function 0x13e026950 'spawn_next_command' 'int ()'     |     |-RecoveryExpr 0x13e026a60 <col:32, col:37> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x13e026a28 <col:32> 'struct analyze_event_data *' lvalue ParmVar 0x13e00e248 'evd' 'struct analyze_event_data *'     |     |-RecoveryExpr 0x13e026b58 <col:48> '<dependent type>' contains-errors lvalue     |     |-RecoveryExpr 0x13e026ad8 <col:65, col:70> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x13e026aa0 <col:65> 'struct analyze_event_data *' lvalue ParmVar 0x13e00e248 'evd' 'struct analyze_event_data *'     |     `-RecoveryExpr 0x13e026b78 <col:82> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13e026fa0 <line:5:5, line:13:5> has_else     | |-BinaryOperator 0x13e026c48 <line:5:9, col:14> 'int' contains-errors '>='     | | |-ImplicitCastExpr 0x13e026c30 <col:9> 'int' contains-errors <LValueToRValue>     | | | `-DeclRefExpr 0x13e026bf0 <col:9> 'int' contains-errors lvalue Var 0x13e0268c0 'r' 'int'     | | `-IntegerLiteral 0x13e026c10 <col:14> 'int' 0     | |-CompoundStmt 0x13e026d10 <line:6:5, line:8:5>     | `-CompoundStmt 0x13e026f80 <line:10:5, line:13:5>     |   |-CallExpr 0x13e026e80 <line:11:9, col:44> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13e026e00 <col:9> 'int ()' Function 0x13e026d48 'unexport_event_config' 'int ()'     |   | `-RecoveryExpr 0x13e026e58 <col:31, col:36> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x13e026e20 <col:31> 'struct analyze_event_data *' lvalue ParmVar 0x13e00e248 'evd' 'struct analyze_event_data *'     |   `-BinaryOperator 0x13e026f60 <line:12:9, col:25> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x13e026ee0 <col:9, col:14> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x13e026ea8 <col:9> 'struct analyze_event_data *' lvalue ParmVar 0x13e00e248 'evd' 'struct analyze_event_data *'     |     `-RecoveryExpr 0x13e026f40 <col:25> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x13e027008 <line:14:5, col:12>       `-ImplicitCastExpr 0x13e026ff0 <col:12> 'int' contains-errors <LValueToRValue>         `-DeclRefExpr 0x13e026fd0 <col:12> 'int' contains-errors lvalue Var 0x13e0268c0 'r' 'int' ","21120":"`-FunctionDecl 0x1541281f8  line:1:1 invalid scrollback_get_filename 'int (int *)'   |-ParmVarDecl 0x154128128 <col:26, col:35> col:35 invalid sess 'int *'   `-CompoundStmt 0x1541434f8 <line:2:1, line:27:1>     |-DeclStmt 0x154128508 <line:3:2, col:37>     | |-VarDecl 0x1541282c0 <col:2, col:8> col:8 used net 'char *'     | |-VarDecl 0x154128340 <col:2, col:14> col:14 used chan 'char *'     | |-VarDecl 0x1541283c0 <col:2, col:21> col:21 used buf 'char *'     | `-VarDecl 0x154128440 <col:2, col:33> col:27 used ret 'char *' cinit     |   `-RecoveryExpr 0x1541284c0 <col:33> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1541287e0 <line:5:2, col:47> 'char *' contains-errors '='     | |-DeclRefExpr 0x154128520 <col:2> 'char *' lvalue Var 0x1541282c0 'net' 'char *'     | `-CallExpr 0x1541287b0 <col:8, col:47> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1541286a0 <col:8> 'int ()' Function 0x1541285e8 'server_get_network' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x1541286e0 <col:28, col:34> '<dependent type>' contains-errors lvalue ->server     |   | `-RecoveryExpr 0x1541286c0 <col:28> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x154128790 <col:42> '<dependent type>' contains-errors lvalue     |-IfStmt 0x154141898 <line:6:2, line:7:10>     | |-UnaryOperator 0x154141838 <line:6:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x154141820 <col:7> 'char *' <LValueToRValue>     | |   `-DeclRefExpr 0x154141800 <col:7> 'char *' lvalue Var 0x1541282c0 'net' 'char *'     | `-ReturnStmt 0x154141888 <line:7:3, col:10>     |   `-RecoveryExpr 0x154141868 <col:10> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x154141f00 <line:9:2, col:30> 'char *' '='     | |-DeclRefExpr 0x1541418b8 <col:2> 'char *' lvalue Var 0x1541283c0 'buf' 'char *'     | `-ImplicitCastExpr 0x154141ac8 <col:8, col:30> 'char *' <IntegralToPointer>     |   `-CallExpr 0x154141a88 <col:8, col:30> 'int'     |     |-ImplicitCastExpr 0x154141a70 <col:8> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1541419b8 <col:8> 'int ()' Function 0x154141900 'g_strdup_printf' 'int ()'     |     `-ImplicitCastExpr 0x154141ab0 <col:25> 'char *' <ArrayToPointerDecay>     |       `-StringLiteral 0x154141a20 <col:25> 'char[4]' lvalue \"STR\"     |-CallExpr 0x154142058 <line:10:2, col:14> 'int'     | |-ImplicitCastExpr 0x154142040 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x154142000 <col:2> 'int ()' Function 0x154141f48 'mkdir_p' 'int ()'     | `-ImplicitCastExpr 0x154142080 <col:11> 'char *' <LValueToRValue>     |   `-DeclRefExpr 0x154142020 <col:11> 'char *' lvalue Var 0x1541283c0 'buf' 'char *'     |-CallExpr 0x1541421d0 <line:11:2, col:13> 'int'     | |-ImplicitCastExpr 0x1541421b8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x154142178 <col:2> 'int ()' Function 0x1541420c0 'g_free' 'int ()'     | `-ImplicitCastExpr 0x1541421f8 <col:10> 'char *' <LValueToRValue>     |   `-DeclRefExpr 0x154142198 <col:10> 'char *' lvalue Var 0x1541283c0 'buf' 'char *'     |-BinaryOperator 0x1541423c0 <line:13:2, col:43> 'char *' contains-errors '='     | |-DeclRefExpr 0x154142210 <col:2> 'char *' lvalue Var 0x154128340 'chan' 'char *'     | `-CallExpr 0x154142398 <col:9, col:43> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x154142310 <col:9> 'int ()' Function 0x154142258 'log_create_filename' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x154142350 <col:30, col:36> '<dependent type>' contains-errors lvalue ->channel     |     `-RecoveryExpr 0x154142330 <col:30> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1541427b8 <line:14:2, line:17:9> has_else     | |-ImplicitCastExpr 0x154142458 <line:14:6, col:12> 'char' <LValueToRValue>     | | `-ArraySubscriptExpr 0x154142438 <col:6, col:12> 'char' lvalue     | |   |-ImplicitCastExpr 0x154142420 <col:6> 'char *' <LValueToRValue>     | |   | `-DeclRefExpr 0x1541423e0 <col:6> 'char *' lvalue Var 0x154128340 'chan' 'char *'     | |   `-IntegerLiteral 0x154142400 <col:11> 'int' 0     | |-BinaryOperator 0x154142700 <line:15:3, col:55> 'char *' '='     | | |-DeclRefExpr 0x154142470 <col:3> 'char *' lvalue Var 0x1541283c0 'buf' 'char *'     | | `-ImplicitCastExpr 0x1541426e8 <col:9, col:55> 'char *' <IntegralToPointer>     | |   `-CallExpr 0x154142660 <col:9, col:55> 'int'     | |     |-ImplicitCastExpr 0x154142648 <col:9> 'int (*)()' <FunctionToPointerDecay>     | |     | `-DeclRefExpr 0x154142490 <col:9> 'int ()' Function 0x154141900 'g_strdup_printf' 'int ()'     | |     |-ImplicitCastExpr 0x1541426a0 <col:26> 'char *' <ArrayToPointerDecay>     | |     | `-StringLiteral 0x1541424b0 <col:26> 'char[4]' lvalue \"STR\"     | |     |-CallExpr 0x1541425e8 <col:33, col:43> 'int'     | |     | `-ImplicitCastExpr 0x1541425d0 <col:33> 'int (*)()' <FunctionToPointerDecay>     | |     |   `-DeclRefExpr 0x1541425b0 <col:33> 'int ()' Function 0x1541424f8 'get_xdir' 'int ()'     | |     |-ImplicitCastExpr 0x1541426b8 <col:46> 'char *' <LValueToRValue>     | |     | `-DeclRefExpr 0x154142608 <col:46> 'char *' lvalue Var 0x1541282c0 'net' 'char *'     | |     `-ImplicitCastExpr 0x1541426d0 <col:51> 'char *' <LValueToRValue>     | |       `-DeclRefExpr 0x154142628 <col:51> 'char *' lvalue Var 0x154128340 'chan' 'char *'     | `-BinaryOperator 0x154142798 <line:17:3, col:9> 'char *' contains-errors '='     |   |-DeclRefExpr 0x154142720 <col:3> 'char *' lvalue Var 0x1541283c0 'buf' 'char *'     |   `-RecoveryExpr 0x154142778 <col:9> '<dependent type>' contains-errors lvalue     |-CallExpr 0x154143058 <line:18:2, col:14> 'int'     | |-ImplicitCastExpr 0x154143040 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x154143000 <col:2> 'int ()' Function 0x1541420c0 'g_free' 'int ()'     | `-ImplicitCastExpr 0x154143080 <col:10> 'char *' <LValueToRValue>     |   `-DeclRefExpr 0x154143020 <col:10> 'char *' lvalue Var 0x154128340 'chan' 'char *'     |-IfStmt 0x154143478 <line:20:2, line:24:2>     | |-ImplicitCastExpr 0x1541430b8 <line:20:6> 'char *' <LValueToRValue>     | | `-DeclRefExpr 0x154143098 <col:6> 'char *' lvalue Var 0x1541283c0 'buf' 'char *'     | `-CompoundStmt 0x154143458 <line:21:2, line:24:2>     |   |-BinaryOperator 0x1541433a0 <line:22:3, col:56> 'char *' contains-errors '='     |   | |-DeclRefExpr 0x1541430d0 <col:3> 'char *' contains-errors lvalue Var 0x154128440 'ret' 'char *'     |   | `-CallExpr 0x154143358 <col:9, col:56> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x1541431d0 <col:9> 'int ()' Function 0x154143118 'g_filename_from_utf8' 'int ()'     |   |   |-DeclRefExpr 0x1541431f0 <col:31> 'char *' lvalue Var 0x1541283c0 'buf' 'char *'     |   |   |-UnaryOperator 0x154143230 <col:36, col:37> 'int' prefix '-'     |   |   | `-IntegerLiteral 0x154143210 <col:37> 'int' 1     |   |   |-RecoveryExpr 0x1541432f8 <col:40> '<dependent type>' contains-errors lvalue     |   |   |-RecoveryExpr 0x154143318 <col:46> '<dependent type>' contains-errors lvalue     |   |   `-RecoveryExpr 0x154143338 <col:52> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x154143418 <line:23:3, col:14> 'int'     |     |-ImplicitCastExpr 0x154143400 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1541433c0 <col:3> 'int ()' Function 0x1541420c0 'g_free' 'int ()'     |     `-ImplicitCastExpr 0x154143440 <col:11> 'char *' <LValueToRValue>     |       `-DeclRefExpr 0x1541433e0 <col:11> 'char *' lvalue Var 0x1541283c0 'buf' 'char *'     `-ReturnStmt 0x1541434e8 <line:26:2, col:9>       `-ImplicitCastExpr 0x1541434d0 <col:9> 'int' contains-errors <PointerToIntegral>         `-ImplicitCastExpr 0x1541434b8 <col:9> 'char *' contains-errors <LValueToRValue>           `-DeclRefExpr 0x154143498 <col:9> 'char *' contains-errors lvalue Var 0x154128440 'ret' 'char *' ","21019":"`-FunctionDecl 0x14e1462a8  col:14 implicit used sscanf 'int (const char *restrict, const char *restrict, ...)' extern   |-ParmVarDecl 0x14e1463a8 <<invalid sloc>> <invalid sloc> 'const char *restrict'   |-ParmVarDecl 0x14e146410 <<invalid sloc>> <invalid sloc> 'const char *restrict'   |-BuiltinAttr 0x14e146350 <<invalid sloc>> Implicit 913   `-FormatAttr 0x14e146488 <col:14> Implicit scanf 2 3 ","20845":"`-FunctionDecl 0x12f941348  line:1:12 p54u_probe 'int (struct usb_interface *, const struct usb_device_id *)' static   |-ParmVarDecl 0x12f928e48 <col:23, col:45> col:45 used intf 'struct usb_interface *'   |-ParmVarDecl 0x12f941228 <line:2:5, col:33> col:33 id 'const struct usb_device_id *'   `-CompoundStmt 0x13800ad20 <line:3:1, line:74:1>     |-DeclStmt 0x12f941848 <line:4:2, col:53>     | |-RecordDecl 0x12f941448 <col:2, col:9> col:9 struct usb_device     | `-VarDecl 0x12f9415b8 <col:2, col:52> col:21 used udev 'struct usb_device *' cinit     |   `-ImplicitCastExpr 0x12f941818 <col:28, col:52> 'struct usb_device *' <IntegralToPointer>     |     `-CallExpr 0x12f9417d8 <col:28, col:52> 'int'     |       |-ImplicitCastExpr 0x12f9417c0 <col:28> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x12f941750 <col:28> 'int ()' Function 0x12f941698 'interface_to_usbdev' 'int ()'     |       `-ImplicitCastExpr 0x12f941800 <col:48> 'struct usb_interface *' <LValueToRValue>     |         `-DeclRefExpr 0x12f941770 <col:48> 'struct usb_interface *' lvalue ParmVar 0x12f928e48 'intf' 'struct usb_interface *'     |-DeclStmt 0x12f941a48 <line:5:2, col:26>     | |-RecordDecl 0x12f941860 <col:2, col:9> col:9 struct ieee80211_hw     | `-VarDecl 0x12f9419c8 <col:2, col:23> col:23 used dev 'struct ieee80211_hw *'     |-DeclStmt 0x12f941c48 <line:6:2, col:24>     | |-RecordDecl 0x12f941a60 <col:2, col:9> col:9 struct p54u_priv     | `-VarDecl 0x12f941bc8 <col:2, col:20> col:20 used priv 'struct p54u_priv *'     |-DeclStmt 0x12f941ce0 <line:7:2, col:9>     | `-VarDecl 0x12f941c78 <col:2, col:6> col:6 used err 'int'     |-DeclStmt 0x12f941e10 <line:8:2, col:34>     | |-VarDecl 0x12f941d10 <col:2, col:15> col:15 used i 'unsigned int'     | `-VarDecl 0x12f941d90 <col:2, col:18> col:18 used recognized_pipes 'unsigned int'     |-IfStmt 0x12f9430f8 <line:12:2, line:15:2>     | |-UnaryOperator 0x12f941ff0 <line:12:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12f941fd8 <col:7> 'struct ieee80211_hw *' <LValueToRValue>     | |   `-DeclRefExpr 0x12f941fb8 <col:7> 'struct ieee80211_hw *' lvalue Var 0x12f9419c8 'dev' 'struct ieee80211_hw *'     | `-CompoundStmt 0x12f9430d8 <col:12, line:15:2>     |   |-CallExpr 0x12f943000 <line:13:3, col:28> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12f9420e8 <col:3> 'int ()' Function 0x12f942030 'dev_err' 'int ()'     |   | |-UnaryOperator 0x12f942168 <col:11, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-RecoveryExpr 0x12f942140 <col:12, col:18> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x12f942108 <col:12> 'struct usb_device *' lvalue Var 0x12f9415b8 'udev' 'struct usb_device *'     |   | `-StringLiteral 0x12f9421c0 <col:23> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x12f9430c8 <line:14:3, col:11>     |     `-UnaryOperator 0x12f9430b0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x12f943098 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x12f943078 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12f943198 <line:17:2, col:14> 'struct p54u_priv *' contains-errors '='     | |-DeclRefExpr 0x12f943118 <col:2> 'struct p54u_priv *' lvalue Var 0x12f941bc8 'priv' 'struct p54u_priv *'     | `-RecoveryExpr 0x12f943170 <col:9, col:14> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12f943138 <col:9> 'struct ieee80211_hw *' lvalue Var 0x12f9419c8 'dev' 'struct ieee80211_hw *'     |-BinaryOperator 0x12f943270 <line:18:2, col:18> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12f9431f0 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12f9431b8 <col:2> 'struct p54u_priv *' lvalue Var 0x12f941bc8 'priv' 'struct p54u_priv *'     | `-RecoveryExpr 0x12f943250 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12f943428 <line:20:2, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f943370 <col:2> 'int ()' Function 0x12f9432b8 'SET_IEEE80211_DEV' 'int ()'     | |-DeclRefExpr 0x12f943390 <col:20> 'struct ieee80211_hw *' lvalue Var 0x12f9419c8 'dev' 'struct ieee80211_hw *'     | `-UnaryOperator 0x12f943410 <col:25, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12f9433e8 <col:26, col:32> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12f9433b0 <col:26> 'struct usb_interface *' lvalue ParmVar 0x12f928e48 'intf' 'struct usb_interface *'     |-CallExpr 0x12f9435b0 <line:21:2, col:28> 'int'     | |-ImplicitCastExpr 0x12f943598 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12f943538 <col:2> 'int ()' Function 0x12f943480 'usb_set_intfdata' 'int ()'     | |-ImplicitCastExpr 0x12f9435e0 <col:19> 'struct usb_interface *' <LValueToRValue>     | | `-DeclRefExpr 0x12f943558 <col:19> 'struct usb_interface *' lvalue ParmVar 0x12f928e48 'intf' 'struct usb_interface *'     | `-ImplicitCastExpr 0x12f9435f8 <col:25> 'struct ieee80211_hw *' <LValueToRValue>     |   `-DeclRefExpr 0x12f943578 <col:25> 'struct ieee80211_hw *' lvalue Var 0x12f9419c8 'dev' 'struct ieee80211_hw *'     |-BinaryOperator 0x12f943690 <line:22:2, col:15> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12f943648 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12f943610 <col:2> 'struct p54u_priv *' lvalue Var 0x12f941bc8 'priv' 'struct p54u_priv *'     | `-DeclRefExpr 0x12f943670 <col:15> 'struct usb_device *' lvalue Var 0x12f9415b8 'udev' 'struct usb_device *'     |-BinaryOperator 0x12f943730 <line:23:2, col:15> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12f9436e8 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12f9436b0 <col:2> 'struct p54u_priv *' lvalue Var 0x12f941bc8 'priv' 'struct p54u_priv *'     | `-DeclRefExpr 0x12f943710 <col:15> 'struct usb_interface *' lvalue ParmVar 0x12f928e48 'intf' 'struct usb_interface *'     |-CallExpr 0x12f9438c8 <line:24:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f943830 <col:2> 'int ()' Function 0x12f943778 'skb_queue_head_init' 'int ()'     | `-UnaryOperator 0x12f9438b0 <col:22, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12f943888 <col:23, col:29> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12f943850 <col:23> 'struct p54u_priv *' lvalue Var 0x12f941bc8 'priv' 'struct p54u_priv *'     |-CallExpr 0x12f943a68 <line:25:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f9439d0 <col:2> 'int ()' Function 0x12f943918 'init_usb_anchor' 'int ()'     | `-UnaryOperator 0x12f943a50 <col:18, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12f943a28 <col:19, col:25> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12f9439f0 <col:19> 'struct p54u_priv *' lvalue Var 0x12f941bc8 'priv' 'struct p54u_priv *'     |-CallExpr 0x12f943bc8 <line:27:2, col:18> 'int'     | |-ImplicitCastExpr 0x12f943bb0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12f943b70 <col:2> 'int ()' Function 0x12f943ab8 'usb_get_dev' 'int ()'     | `-ImplicitCastExpr 0x12f943bf0 <col:14> 'struct usb_device *' <LValueToRValue>     |   `-DeclRefExpr 0x12f943b90 <col:14> 'struct usb_device *' lvalue Var 0x12f9415b8 'udev' 'struct usb_device *'     |-BinaryOperator 0x12f943d18 <line:31:2, col:29> 'unsigned int' contains-errors '='     | |-DeclRefExpr 0x12f943c08 <col:2> 'unsigned int' lvalue Var 0x12f941d10 'i' 'unsigned int'     | `-CXXDependentScopeMemberExpr 0x12f943cd0 <col:6, col:29> '<dependent type>' contains-errors lvalue .bNumEndpoints     |   `-CXXDependentScopeMemberExpr 0x12f943c88 <col:6, col:24> '<dependent type>' contains-errors lvalue ->desc     |     `-RecoveryExpr 0x12f943c60 <col:6, col:12> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x12f943c28 <col:6> 'struct usb_interface *' lvalue ParmVar 0x12f928e48 'intf' 'struct usb_interface *'     |-BinaryOperator 0x12f943d90 <line:32:2, col:21> 'unsigned int' '='     | |-DeclRefExpr 0x12f943d38 <col:2> 'unsigned int' lvalue Var 0x12f941d90 'recognized_pipes' 'unsigned int'     | `-ImplicitCastExpr 0x12f943d78 <col:21> 'unsigned int' <IntegralCast>     |   `-IntegerLiteral 0x12f943d58 <col:21> 'int' 0     |-WhileStmt 0x138008848 <line:33:2, line:46:2>     | |-UnaryOperator 0x12f943dd0 <line:33:9, col:10> 'unsigned int' postfix '--'     | | `-DeclRefExpr 0x12f943db0 <col:9> 'unsigned int' lvalue Var 0x12f941d10 'i' 'unsigned int'     | `-CompoundStmt 0x138008830 <col:14, line:46:2>     |   `-SwitchStmt 0x12f943fa8 <line:34:3, line:45:3>     |     |-ImplicitCastExpr 0x12f943f90 <line:34:11, col:46> '<dependent type>' contains-errors <LValueToRValue>     |     | `-CXXDependentScopeMemberExpr 0x12f943f48 <col:11, col:46> '<dependent type>' contains-errors lvalue .bEndpointAddress     |     |   `-CXXDependentScopeMemberExpr 0x12f943f00 <col:11, col:41> '<dependent type>' contains-errors lvalue .desc     |     |     `-ArraySubscriptExpr 0x12f943ee0 <col:11, col:39> '<dependent type>' contains-errors lvalue     |     |       |-ImplicitCastExpr 0x12f943eb0 <col:11, col:29> '<dependent type>' contains-errors <LValueToRValue>     |     |       | `-CXXDependentScopeMemberExpr 0x12f943e48 <col:11, col:29> '<dependent type>' contains-errors lvalue ->endpoint     |     |       |   `-RecoveryExpr 0x12f943e20 <col:11, col:17> '<dependent type>' contains-errors lvalue     |     |       |     `-DeclRefExpr 0x12f943de8 <col:11> 'struct usb_interface *' lvalue ParmVar 0x12f928e48 'intf' 'struct usb_interface *'     |     |       `-ImplicitCastExpr 0x12f943ec8 <col:38> 'unsigned int' <LValueToRValue>     |     |         `-DeclRefExpr 0x12f943e90 <col:38> 'unsigned int' lvalue Var 0x12f941d10 'i' 'unsigned int'     |     `-CompoundStmt 0x138008818 <col:64, line:45:3>     |       `-UnaryOperator 0x138008800 <line:44:4, col:20> 'unsigned int' postfix '++'     |         `-DeclRefExpr 0x12f943fd0 <col:4> 'unsigned int' lvalue Var 0x12f941d90 'recognized_pipes' 'unsigned int'     |-IfStmt 0x138009348 <line:49:2, line:67:2> has_else     | |-RecoveryExpr 0x1380089d8 <line:49:6, col:25> '_Bool' contains-errors     | |-CompoundStmt 0x138008f68 <col:43, line:61:2>     | | `-BinaryOperator 0x138008b90 <line:54:3, col:30> 'int' '='     | |   |-DeclRefExpr 0x1380089f8 <col:3> 'int' lvalue Var 0x12f941c78 'err' 'int'     | |   `-CallExpr 0x138008b50 <col:9, col:30> 'int'     | |     |-ImplicitCastExpr 0x138008b38 <col:9> 'int (*)()' <FunctionToPointerDecay>     | |     | `-DeclRefExpr 0x138008af8 <col:9> 'int ()' Function 0x138008a40 'p54u_device_reset' 'int ()'     | |     `-ImplicitCastExpr 0x138008b78 <col:27> 'struct ieee80211_hw *' <LValueToRValue>     | |       `-DeclRefExpr 0x138008b18 <col:27> 'struct ieee80211_hw *' lvalue Var 0x12f9419c8 'dev' 'struct ieee80211_hw *'     | `-CompoundStmt 0x138009338 <line:61:9, line:67:2>     |-BinaryOperator 0x138009550 <line:68:2, col:36> 'int' '='     | |-DeclRefExpr 0x138009378 <col:2> 'int' lvalue Var 0x12f941c78 'err' 'int'     | `-CallExpr 0x1380094f0 <col:8, col:36> 'int'     |   |-ImplicitCastExpr 0x1380094d8 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x138009478 <col:8> 'int ()' Function 0x1380093c0 'p54u_load_firmware' 'int ()'     |   |-ImplicitCastExpr 0x138009520 <col:27> 'struct ieee80211_hw *' <LValueToRValue>     |   | `-DeclRefExpr 0x138009498 <col:27> 'struct ieee80211_hw *' lvalue Var 0x12f9419c8 'dev' 'struct ieee80211_hw *'     |   `-ImplicitCastExpr 0x138009538 <col:32> 'struct usb_interface *' <LValueToRValue>     |     `-DeclRefExpr 0x1380094b8 <col:32> 'struct usb_interface *' lvalue ParmVar 0x12f928e48 'intf' 'struct usb_interface *'     |-IfStmt 0x13800acb8 <line:69:2, line:72:2>     | |-ImplicitCastExpr 0x138009590 <line:69:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x138009570 <col:6> 'int' lvalue Var 0x12f941c78 'err' 'int'     | `-CompoundStmt 0x13800ac98 <col:11, line:72:2>     |   |-CallExpr 0x1380096e0 <line:70:3, col:19> 'int'     |   | |-ImplicitCastExpr 0x1380096c8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x138009688 <col:3> 'int ()' Function 0x1380095d0 'usb_put_dev' 'int ()'     |   | `-ImplicitCastExpr 0x138009708 <col:15> 'struct usb_device *' <LValueToRValue>     |   |   `-DeclRefExpr 0x1380096a8 <col:15> 'struct usb_device *' lvalue Var 0x12f9415b8 'udev' 'struct usb_device *'     |   `-CallExpr 0x13800ac58 <line:71:3, col:22> 'int'     |     |-ImplicitCastExpr 0x13800ac40 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x13800ac00 <col:3> 'int ()' Function 0x138009748 'p54_free_common' 'int ()'     |     `-ImplicitCastExpr 0x13800ac80 <col:19> 'struct ieee80211_hw *' <LValueToRValue>     |       `-DeclRefExpr 0x13800ac20 <col:19> 'struct ieee80211_hw *' lvalue Var 0x12f9419c8 'dev' 'struct ieee80211_hw *'     `-ReturnStmt 0x13800ad10 <line:73:2, col:9>       `-ImplicitCastExpr 0x13800acf8 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x13800acd8 <col:9> 'int' lvalue Var 0x12f941c78 'err' 'int' ","20639":"`-FunctionDecl 0x13d854258  line:1:21 referenced dma_pte_list_pagetables 'struct page *(struct dmar_domain *, int, struct dma_pte *, struct page *)' static   |-ParmVarDecl 0x13d830ee8 <col:45, col:65> col:65 used domain 'struct dmar_domain *'   |-ParmVarDecl 0x13d830f68 <line:2:10, col:14> col:14 used level 'int'   |-ParmVarDecl 0x13d853f68 <col:21, col:37> col:37 used pte 'struct dma_pte *'   |-ParmVarDecl 0x13d854088 <line:3:10, col:23> col:23 used freelist 'struct page *'   `-CompoundStmt 0x13d8566c8 <line:4:1, line:23:1>     |-DeclStmt 0x13d8543f8 <line:5:2, col:17>     | `-VarDecl 0x13d854390 <col:2, col:15> col:15 used pg 'struct page *'     |-BinaryOperator 0x13d8548c0 <line:7:2, col:50> 'struct page *' contains-errors '='     | |-DeclRefExpr 0x13d854410 <col:2> 'struct page *' lvalue Var 0x13d854390 'pg' 'struct page *'     | `-CallExpr 0x13d854898 <col:7, col:50> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13d854560 <col:7> 'int ()' Function 0x13d8544a8 'pfn_to_page' 'int ()'     |   `-BinaryOperator 0x13d854878 <col:19, col:40> '<dependent type>' contains-errors '>>'     |     |-CallExpr 0x13d854818 <col:19, col:35> 'int'     |     | |-ImplicitCastExpr 0x13d854800 <col:19> 'int (*)()' <FunctionToPointerDecay>     |     | | `-DeclRefExpr 0x13d854660 <col:19> 'int ()' Function 0x13d8545a8 'dma_pte_addr' 'int ()'     |     | `-ImplicitCastExpr 0x13d854840 <col:32> 'struct dma_pte *' <LValueToRValue>     |     |   `-DeclRefExpr 0x13d854680 <col:32> 'struct dma_pte *' lvalue ParmVar 0x13d853f68 'pte' 'struct dma_pte *'     |     `-RecoveryExpr 0x13d854858 <col:40> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13d854960 <line:8:2, col:17> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13d854918 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13d8548e0 <col:2> 'struct page *' lvalue Var 0x13d854390 'pg' 'struct page *'     | `-DeclRefExpr 0x13d854940 <col:17> 'struct page *' lvalue ParmVar 0x13d854088 'freelist' 'struct page *'     |-BinaryOperator 0x13d8549d8 <line:9:2, col:13> 'struct page *' '='     | |-DeclRefExpr 0x13d854980 <col:2> 'struct page *' lvalue ParmVar 0x13d854088 'freelist' 'struct page *'     | `-ImplicitCastExpr 0x13d8549c0 <col:13> 'struct page *' <LValueToRValue>     |   `-DeclRefExpr 0x13d8549a0 <col:13> 'struct page *' lvalue Var 0x13d854390 'pg' 'struct page *'     |-IfStmt 0x13d854ab8 <line:11:2, line:12:10>     | |-BinaryOperator 0x13d854a50 <line:11:6, col:15> 'int' '=='     | | |-ImplicitCastExpr 0x13d854a38 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x13d8549f8 <col:6> 'int' lvalue ParmVar 0x13d830f68 'level' 'int'     | | `-IntegerLiteral 0x13d854a18 <col:15> 'int' 1     | `-ReturnStmt 0x13d854aa8 <line:12:3, col:10>     |   `-ImplicitCastExpr 0x13d854a90 <col:10> 'struct page *' <LValueToRValue>     |     `-DeclRefExpr 0x13d854a70 <col:10> 'struct page *' lvalue ParmVar 0x13d854088 'freelist' 'struct page *'     |-BinaryOperator 0x13d854c88 <line:14:2, col:23> 'struct dma_pte *' '='     | |-DeclRefExpr 0x13d854ad8 <col:2> 'struct dma_pte *' lvalue ParmVar 0x13d853f68 'pte' 'struct dma_pte *'     | `-ImplicitCastExpr 0x13d854c70 <col:8, col:23> 'struct dma_pte *' <IntegralToPointer>     |   `-CallExpr 0x13d854c30 <col:8, col:23> 'int'     |     |-ImplicitCastExpr 0x13d854c18 <col:8> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x13d854bd8 <col:8> 'int ()' Function 0x13d854b20 'page_address' 'int ()'     |     `-ImplicitCastExpr 0x13d854c58 <col:21> 'struct page *' <LValueToRValue>     |       `-DeclRefExpr 0x13d854bf8 <col:21> 'struct page *' lvalue Var 0x13d854390 'pg' 'struct page *'     |-DoStmt 0x13d856660 <line:15:2, line:20:34>     | |-CompoundStmt 0x13d8564b0 <line:15:5, line:20:2>     | | |-IfStmt 0x13d856430 <line:16:3, line:18:24>     | | | |-BinaryOperator 0x13d8561d0 <line:16:7, col:53> 'int' '&&'     | | | | |-CallExpr 0x13d856000 <col:7, col:26> 'int'     | | | | | |-ImplicitCastExpr 0x13d854dc8 <col:7> 'int (*)()' <FunctionToPointerDecay>     | | | | | | `-DeclRefExpr 0x13d854d88 <col:7> 'int ()' Function 0x13d854cd0 'dma_pte_present' 'int ()'     | | | | | `-ImplicitCastExpr 0x13d856028 <col:23> 'struct dma_pte *' <LValueToRValue>     | | | | |   `-DeclRefExpr 0x13d854da8 <col:23> 'struct dma_pte *' lvalue ParmVar 0x13d853f68 'pte' 'struct dma_pte *'     | | | | `-UnaryOperator 0x13d8561b8 <col:31, col:53> 'int' prefix '!' cannot overflow     | | | |   `-CallExpr 0x13d856178 <col:32, col:53> 'int'     | | | |     |-ImplicitCastExpr 0x13d856160 <col:32> 'int (*)()' <FunctionToPointerDecay>     | | | |     | `-DeclRefExpr 0x13d856120 <col:32> 'int ()' Function 0x13d856068 'dma_pte_superpage' 'int ()'     | | | |     `-ImplicitCastExpr 0x13d8561a0 <col:50> 'struct dma_pte *' <LValueToRValue>     | | | |       `-DeclRefExpr 0x13d856140 <col:50> 'struct dma_pte *' lvalue ParmVar 0x13d853f68 'pte' 'struct dma_pte *'     | | | `-BinaryOperator 0x13d856410 <line:17:4, line:18:24> 'struct page *' '='     | | |   |-DeclRefExpr 0x13d8561f0 <line:17:4> 'struct page *' lvalue ParmVar 0x13d854088 'freelist' 'struct page *'     | | |   `-CallExpr 0x13d856388 <col:15, line:18:24> 'struct page *'     | | |     |-ImplicitCastExpr 0x13d856370 <line:17:15> 'struct page *(*)(struct dmar_domain *, int, struct dma_pte *, struct page *)' <FunctionToPointerDecay>     | | |     | `-DeclRefExpr 0x13d856210 <col:15> 'struct page *(struct dmar_domain *, int, struct dma_pte *, struct page *)' Function 0x13d854258 'dma_pte_list_pagetables' 'struct page *(struct dmar_domain *, int, struct dma_pte *, struct page *)'     | | |     |-ImplicitCastExpr 0x13d8563c8 <col:39> 'struct dmar_domain *' <LValueToRValue>     | | |     | `-DeclRefExpr 0x13d856230 <col:39> 'struct dmar_domain *' lvalue ParmVar 0x13d830ee8 'domain' 'struct dmar_domain *'     | | |     |-BinaryOperator 0x13d8562a8 <col:47, col:55> 'int' '-'     | | |     | |-ImplicitCastExpr 0x13d856290 <col:47> 'int' <LValueToRValue>     | | |     | | `-DeclRefExpr 0x13d856250 <col:47> 'int' lvalue ParmVar 0x13d830f68 'level' 'int'     | | |     | `-IntegerLiteral 0x13d856270 <col:55> 'int' 1     | | |     |-ImplicitCastExpr 0x13d8563e0 <line:18:11> 'struct dma_pte *' <LValueToRValue>     | | |     | `-DeclRefExpr 0x13d8562c8 <col:11> 'struct dma_pte *' lvalue ParmVar 0x13d853f68 'pte' 'struct dma_pte *'     | | |     `-ImplicitCastExpr 0x13d8563f8 <col:16> 'struct page *' <LValueToRValue>     | | |       `-DeclRefExpr 0x13d8562e8 <col:16> 'struct page *' lvalue ParmVar 0x13d854088 'freelist' 'struct page *'     | | `-ImplicitCastExpr 0x13d856498 <line:19:3, col:6> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x13d856470 <col:3, col:6> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x13d856450 <col:3> 'struct dma_pte *' lvalue ParmVar 0x13d853f68 'pte' 'struct dma_pte *'     | `-UnaryOperator 0x13d856648 <line:20:11, col:33> 'int' prefix '!' cannot overflow     |   `-CallExpr 0x13d856608 <col:12, col:33> 'int'     |     |-ImplicitCastExpr 0x13d8565f0 <col:12> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x13d8565b0 <col:12> 'int ()' Function 0x13d8564f8 'first_pte_in_page' 'int ()'     |     `-ImplicitCastExpr 0x13d856630 <col:30> 'struct dma_pte *' <LValueToRValue>     |       `-DeclRefExpr 0x13d8565d0 <col:30> 'struct dma_pte *' lvalue ParmVar 0x13d853f68 'pte' 'struct dma_pte *'     `-ReturnStmt 0x13d8566b8 <line:22:2, col:9>       `-ImplicitCastExpr 0x13d8566a0 <col:9> 'struct page *' <LValueToRValue>         `-DeclRefExpr 0x13d856680 <col:9> 'struct page *' lvalue ParmVar 0x13d854088 'freelist' 'struct page *' ","20628":"`-FunctionDecl 0x138941038  line:1:1 invalid __archive_read_filter_consume 'int (struct archive_read_filter *, int)'   |-ParmVarDecl 0x138927e48 <col:31, col:60> col:60 used filter 'struct archive_read_filter *'   |-ParmVarDecl 0x138927ee0 <line:2:5, col:13> col:13 invalid request 'int'   `-CompoundStmt 0x138941838 <line:3:1, line:20:1>     |-IfStmt 0x138941180 <line:6:2, line:7:10>     | |-BinaryOperator 0x138941130 <line:6:6, col:17> 'int' contains-errors '=='     | | |-RecoveryExpr 0x1389410f0 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x138941110 <col:17> 'int' 0     | `-ReturnStmt 0x138941170 <line:7:3, col:10>     |   `-IntegerLiteral 0x138941150 <col:10> 'int' 0     `-IfStmt 0x1389414d8 <line:10:2, line:11:18>       |-BinaryOperator 0x138941408 <line:10:6, col:17> 'int' contains-errors '=='       | |-RecoveryExpr 0x1389413e8 <col:6> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x1389413a8 <col:17> '<dependent type>' contains-errors lvalue       `-ReturnStmt 0x1389414c8 <line:11:3, col:18>         `-RecoveryExpr 0x1389414a0 <col:10, col:18> 'int' contains-errors           `-ParenExpr 0x138941480 <col:10, col:18> '<overloaded function type>' lvalue             `-UnresolvedLookupExpr 0x138941440 <col:11> '<overloaded function type>' lvalue (no ADL) = 'skipped' empty ","20720":"`-FunctionDecl 0x14c827bf8  col:5 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x14c827cf8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x14c827d60 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x14c827dc8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14c827ca0 <<invalid sloc>> Implicit 900 ","20222":"`-FunctionDecl 0x14e0269f0  col:7 implicit used printf 'int (const char *, ...)' extern   |-ParmVarDecl 0x14e026af0 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x14e026a98 <<invalid sloc>> Implicit 903   `-FormatAttr 0x14e026b60 <col:7> Implicit printf 1 2 ","21239":"`-FunctionDecl 0x13a028460  col:2 implicit used strcat 'char *(char *, const char *)' extern   |-ParmVarDecl 0x13a028560 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x13a0285c8 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x13a028508 <<invalid sloc>> Implicit 889 ","20635":"`-FunctionDecl 0x13402a148  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x13402a248 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x13402a2b0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x13402a318 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x13402a1f0 <<invalid sloc>> Implicit 882 ","20716":"`-FunctionDecl 0x13f827400  line:1:10 invalid smb2cli_session_encryption_on 'int (struct smbXcli_session *)'   |-ParmVarDecl 0x13f80e268 <col:40, col:64> col:64 used session 'struct smbXcli_session *'   `-CompoundStmt 0x13f827cc0 <line:2:1, line:20:1>     |-IfStmt 0x13f8275b8 <line:3:2, line:5:2>     | |-CXXDependentScopeMemberExpr 0x13f827510 <line:3:6, col:21> '<dependent type>' contains-errors lvalue ->should_encrypt     | | `-RecoveryExpr 0x13f8274e8 <col:6, col:15> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13f8274b0 <col:6> 'struct smbXcli_session *' lvalue ParmVar 0x13f80e268 'session' 'struct smbXcli_session *'     | `-CompoundStmt 0x13f8275a0 <col:37, line:5:2>     |   `-ReturnStmt 0x13f827590 <line:4:3, col:10>     |     `-RecoveryExpr 0x13f827570 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13f827758 <line:7:2, line:9:2>     | |-BinaryOperator 0x13f8276d8 <line:7:6, col:32> 'int' contains-errors '<'     | | |-CXXDependentScopeMemberExpr 0x13f827638 <col:6, col:21> '<dependent type>' contains-errors lvalue ->protocol     | | | `-RecoveryExpr 0x13f827610 <col:6, col:15> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x13f8275d8 <col:6> 'struct smbXcli_session *' lvalue ParmVar 0x13f80e268 'session' 'struct smbXcli_session *'     | | `-RecoveryExpr 0x13f8276b8 <col:32> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13f827740 <col:50, line:9:2>     |   `-ReturnStmt 0x13f827730 <line:8:3, col:10>     |     `-RecoveryExpr 0x13f827710 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13f827950 <line:11:2, line:13:2>     | |-BinaryOperator 0x13f8278d0 <line:11:6, col:43> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x13f827868 <col:6, col:33> '<dependent type>' contains-errors lvalue .cipher     | | | `-CXXDependentScopeMemberExpr 0x13f827820 <col:6, col:26> '<dependent type>' contains-errors lvalue .server     | | |   `-CXXDependentScopeMemberExpr 0x13f8277d8 <col:6, col:21> '<dependent type>' contains-errors lvalue ->smb2     | | |     `-RecoveryExpr 0x13f8277b0 <col:6, col:15> '<dependent type>' contains-errors lvalue     | | |       `-DeclRefExpr 0x13f827778 <col:6> 'struct smbXcli_session *' lvalue ParmVar 0x13f80e268 'session' 'struct smbXcli_session *'     | | `-IntegerLiteral 0x13f8278b0 <col:43> 'int' 0     | `-CompoundStmt 0x13f827938 <col:46, line:13:2>     |   `-ReturnStmt 0x13f827928 <line:12:3, col:10>     |     `-RecoveryExpr 0x13f827908 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13f827b38 <line:15:2, line:17:2>     | |-BinaryOperator 0x13f827ab8 <line:15:6, col:41> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x13f827a18 <col:6, col:33> '<dependent type>' contains-errors lvalue .data     | | | `-CXXDependentScopeMemberExpr 0x13f8279d0 <col:6, col:21> '<dependent type>' contains-errors lvalue ->signing_key     | | |   `-RecoveryExpr 0x13f8279a8 <col:6, col:15> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x13f827970 <col:6> 'struct smbXcli_session *' lvalue ParmVar 0x13f80e268 'session' 'struct smbXcli_session *'     | | `-RecoveryExpr 0x13f827a98 <col:41> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13f827b20 <col:47, line:17:2>     |   `-ReturnStmt 0x13f827b10 <line:16:3, col:10>     |     `-RecoveryExpr 0x13f827af0 <col:10> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13f827c58 <line:18:2, col:34> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13f827bb8 <col:2, col:17> '<dependent type>' contains-errors lvalue ->should_encrypt     | | `-RecoveryExpr 0x13f827b90 <col:2, col:11> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13f827b58 <col:2> 'struct smbXcli_session *' lvalue ParmVar 0x13f80e268 'session' 'struct smbXcli_session *'     | `-RecoveryExpr 0x13f827c38 <col:34> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x13f827cb0 <line:19:2, col:9>       `-RecoveryExpr 0x13f827c90 <col:9> '<dependent type>' contains-errors lvalue ","20339":"`-FunctionDecl 0x1480267c8  line:1:24 udp_gro_receive_segment 'struct sk_buff *(struct list_head *, struct sk_buff *)' static   |-ParmVarDecl 0x14800e2e8 <col:48, col:66> col:66 used head 'struct list_head *'   |-ParmVarDecl 0x148026628 <line:2:13, col:29> col:29 used skb 'struct sk_buff *'   `-CompoundStmt 0x14802ace0 <line:3:1, line:42:1>     |-DeclStmt 0x148026cc8 <line:4:2, col:34>     | |-RecordDecl 0x1480268c8 <col:2, col:9> col:9 struct udphdr     | `-VarDecl 0x148026a38 <col:2, col:33> col:17 used uh 'struct udphdr *' cinit     |   `-ImplicitCastExpr 0x148026c98 <col:22, col:33> 'struct udphdr *' <IntegralToPointer>     |     `-CallExpr 0x148026c58 <col:22, col:33> 'int'     |       |-ImplicitCastExpr 0x148026c40 <col:22> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x148026bd0 <col:22> 'int ()' Function 0x148026b18 'udp_hdr' 'int ()'     |       `-ImplicitCastExpr 0x148026c80 <col:30> 'struct sk_buff *' <LValueToRValue>     |         `-DeclRefExpr 0x148026bf0 <col:30> 'struct sk_buff *' lvalue ParmVar 0x148026628 'skb' 'struct sk_buff *'     |-DeclStmt 0x148026da8 <line:5:2, col:27>     | `-VarDecl 0x148026d08 <col:2, col:23> col:18 used pp 'struct sk_buff *' cinit     |   `-RecoveryExpr 0x148026d88 <col:23> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x148026eb0 <line:6:2, col:20>     | `-VarDecl 0x148026e48 <col:2, col:17> col:17 used uh2 'struct udphdr *'     |-DeclStmt 0x148026f58 <line:7:2, col:19>     | `-VarDecl 0x148026ef0 <col:2, col:18> col:18 used p 'struct sk_buff *'     |-IfStmt 0x148027248 <line:10:2, line:13:2>     | |-UnaryOperator 0x148026fe8 <line:10:6, col:11> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x148026fd0 <col:7, col:11> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x148026fa8 <col:7, col:11> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x148026f70 <col:7> 'struct udphdr *' lvalue Var 0x148026a38 'uh' 'struct udphdr *'     | `-CompoundStmt 0x148027228 <col:18, line:13:2>     |   |-BinaryOperator 0x1480271c0 <line:11:3, col:29> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x148027178 <col:3, col:21> '<dependent type>' contains-errors lvalue     |   | | `-CallExpr 0x148027138 <col:3, col:18> 'int'     |   | |   |-ImplicitCastExpr 0x148027120 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | |   | `-DeclRefExpr 0x1480270e0 <col:3> 'int ()' Function 0x148027028 'NAPI_GRO_CB' 'int ()'     |   | |   `-ImplicitCastExpr 0x148027160 <col:15> 'struct sk_buff *' <LValueToRValue>     |   | |     `-DeclRefExpr 0x148027100 <col:15> 'struct sk_buff *' lvalue ParmVar 0x148026628 'skb' 'struct sk_buff *'     |   | `-IntegerLiteral 0x1480271a0 <col:29> 'int' 1     |   `-ReturnStmt 0x148027218 <line:12:3, col:10>     |     `-RecoveryExpr 0x1480271f8 <col:10> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14802a2d0 <line:19:2, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14802a200 <col:2> 'int ()' Function 0x148027530 'list_for_each_entry' 'int ()'     | |-DeclRefExpr 0x14802a220 <col:22> 'struct sk_buff *' lvalue Var 0x148026ef0 'p' 'struct sk_buff *'     | |-DeclRefExpr 0x14802a240 <col:25> 'struct list_head *' lvalue ParmVar 0x14800e2e8 'head' 'struct list_head *'     | `-RecoveryExpr 0x14802a2b0 <col:31> '<dependent type>' contains-errors lvalue     `-CompoundStmt 0x14802acb0 <col:37, line:38:2>       |-BinaryOperator 0x14802a4c8 <line:23:3, col:18> 'struct udphdr *' '='       | |-DeclRefExpr 0x14802a3f8 <col:3> 'struct udphdr *' lvalue Var 0x148026e48 'uh2' 'struct udphdr *'       | `-ImplicitCastExpr 0x14802a4b0 <col:9, col:18> 'struct udphdr *' <IntegralToPointer>       |   `-CallExpr 0x14802a470 <col:9, col:18> 'int'       |     |-ImplicitCastExpr 0x14802a458 <col:9> 'int (*)()' <FunctionToPointerDecay>       |     | `-DeclRefExpr 0x14802a418 <col:9> 'int ()' Function 0x148026b18 'udp_hdr' 'int ()'       |     `-ImplicitCastExpr 0x14802a498 <col:17> 'struct sk_buff *' <LValueToRValue>       |       `-DeclRefExpr 0x14802a438 <col:17> 'struct sk_buff *' lvalue Var 0x148026ef0 'p' 'struct sk_buff *'       |-IfStmt 0x14802a718 <line:26:3, line:29:3>       | |-RecoveryExpr 0x14802a5e0 <line:26:7, col:51> '_Bool' contains-errors       | `-CompoundStmt 0x14802a700 <col:54, line:29:3>       |   `-BinaryOperator 0x14802a6e0 <line:27:4, col:32> '<dependent type>' contains-errors '='       |     |-RecoveryExpr 0x14802a698 <col:4, col:20> '<dependent type>' contains-errors lvalue       |     | `-CallExpr 0x14802a658 <col:4, col:17> 'int'       |     |   |-ImplicitCastExpr 0x14802a640 <col:4> 'int (*)()' <FunctionToPointerDecay>       |     |   | `-DeclRefExpr 0x14802a600 <col:4> 'int ()' Function 0x148027028 'NAPI_GRO_CB' 'int ()'       |     |   `-ImplicitCastExpr 0x14802a680 <col:16> 'struct sk_buff *' <LValueToRValue>       |     |     `-DeclRefExpr 0x14802a620 <col:16> 'struct sk_buff *' lvalue Var 0x148026ef0 'p' 'struct sk_buff *'       |     `-IntegerLiteral 0x14802a6c0 <col:32> 'int' 0       |-IfStmt 0x14802ac48 <line:32:3, line:35:9>       | |-RecoveryExpr 0x14802abb0 <line:32:7, line:34:32> '_Bool' contains-errors       | `-BinaryOperator 0x14802ac28 <line:35:4, col:9> 'struct sk_buff *' contains-errors '='       |   |-DeclRefExpr 0x14802abd0 <col:4> 'struct sk_buff *' contains-errors lvalue Var 0x148026d08 'pp' 'struct sk_buff *'       |   `-ImplicitCastExpr 0x14802ac10 <col:9> 'struct sk_buff *' <LValueToRValue>       |     `-DeclRefExpr 0x14802abf0 <col:9> 'struct sk_buff *' lvalue Var 0x148026ef0 'p' 'struct sk_buff *'       `-ReturnStmt 0x14802aca0 <line:37:3, col:10>         `-ImplicitCastExpr 0x14802ac88 <col:10> 'struct sk_buff *' contains-errors <LValueToRValue>           `-DeclRefExpr 0x14802ac68 <col:10> 'struct sk_buff *' contains-errors lvalue Var 0x148026d08 'pp' 'struct sk_buff *' ","20979":"`-FunctionDecl 0x14f922758  line:1:5 invalid wmi_send 'int (struct wil6210_priv *, int, void *, int)'   |-ParmVarDecl 0x15800e248 <col:14, col:35> col:35 used wil 'struct wil6210_priv *'   |-ParmVarDecl 0x15800e2e0 <col:40, col:44> col:44 invalid cmdid 'int'   |-ParmVarDecl 0x15800e360 <col:51, col:57> col:57 used buf 'void *'   |-ParmVarDecl 0x14f922600 <col:62, col:66> col:66 invalid len 'int'   `-CompoundStmt 0x14f922eb8 <line:2:1, line:10:1>     |-DeclStmt 0x14f9228a0 <line:3:2, col:8>     | `-VarDecl 0x14f922838 <col:2, col:6> col:6 used rc 'int'     |-CallExpr 0x14f922aa8 <line:5:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14f922a10 <col:2> 'int ()' Function 0x14f922958 'mutex_lock' 'int ()'     | `-UnaryOperator 0x14f922a90 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14f922a68 <col:14, col:19> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14f922a30 <col:14> 'struct wil6210_priv *' lvalue ParmVar 0x15800e248 'wil' 'struct wil6210_priv *'     |-BinaryOperator 0x14f922cb0 <line:6:2, col:38> 'int' contains-errors '='     | |-DeclRefExpr 0x14f922ad0 <col:2> 'int' lvalue Var 0x14f922838 'rc' 'int'     | `-CallExpr 0x14f922c70 <col:7, col:38> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14f922bd0 <col:7> 'int ()' Function 0x14f922b18 '__wmi_send' 'int ()'     |   |-DeclRefExpr 0x14f922bf0 <col:18> 'struct wil6210_priv *' lvalue ParmVar 0x15800e248 'wil' 'struct wil6210_priv *'     |   |-RecoveryExpr 0x14f922c10 <col:23> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x14f922c30 <col:30> 'void *' lvalue ParmVar 0x15800e360 'buf' 'void *'     |   `-RecoveryExpr 0x14f922c50 <col:35> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14f922e48 <line:7:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14f922db0 <col:2> 'int ()' Function 0x14f922cf8 'mutex_unlock' 'int ()'     | `-UnaryOperator 0x14f922e30 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14f922e08 <col:16, col:21> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14f922dd0 <col:16> 'struct wil6210_priv *' lvalue ParmVar 0x15800e248 'wil' 'struct wil6210_priv *'     `-ReturnStmt 0x14f922ea8 <line:9:2, col:9>       `-ImplicitCastExpr 0x14f922e90 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x14f922e70 <col:9> 'int' lvalue Var 0x14f922838 'rc' 'int' ","20631":"`-FunctionDecl 0x14c00e040  line:2:12 check_matrix_square 'void (const unsigned int, const unsigned int, char *const, char *const, const char)'   |-ParmVarDecl 0x14c00dcd8 <col:32, col:51> col:51 used arg 'const unsigned int'   |-ParmVarDecl 0x14c00dd58 <col:56, col:75> col:75 used n_arg 'const unsigned int'   |-ParmVarDecl 0x14c00ddd8 <line:3:32, col:44> col:44 used ss 'char *const'   |-ParmVarDecl 0x14c00de58 <col:48, col:60> col:60 used se 'char *const'   |-ParmVarDecl 0x14c00ded0 <col:64, col:75> col:75 used saved_char 'const char'   `-CompoundStmt 0x14c0280a8 <col:87, line:22:10>     |-CallExpr 0x14c00e368 <line:4:9, col:42> 'int'     | |-ImplicitCastExpr 0x14c00e350 <col:9> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14c00e280 <col:9> 'int ()' Function 0x14c00e1c8 '_cimg_mp_check_type' 'int ()'     | |-ImplicitCastExpr 0x14c00e3a8 <col:29> 'unsigned int' <LValueToRValue>     | | `-DeclRefExpr 0x14c00e2a0 <col:29> 'const unsigned int' lvalue ParmVar 0x14c00dcd8 'arg' 'const unsigned int'     | |-ImplicitCastExpr 0x14c00e3c0 <col:33> 'unsigned int' <LValueToRValue>     | | `-DeclRefExpr 0x14c00e2c0 <col:33> 'const unsigned int' lvalue ParmVar 0x14c00dd58 'n_arg' 'const unsigned int'     | |-IntegerLiteral 0x14c00e2e0 <col:39> 'int' 2     | `-IntegerLiteral 0x14c00e300 <col:41> 'int' 0     |-DeclStmt 0x14c0276c0 <line:5:9, line:7:63>     | |-VarDecl 0x14c027400 <line:5:9, line:6:34> col:11 used siz 'const unsigned int' cinit     | | `-ImplicitCastExpr 0x14c0275e0 <col:17, col:34> 'unsigned int' <IntegralCast>     | |   `-CallExpr 0x14c0275a0 <col:17, col:34> 'int'     | |     |-ImplicitCastExpr 0x14c027588 <col:17> 'int (*)()' <FunctionToPointerDecay>     | |     | `-DeclRefExpr 0x14c027548 <col:17> 'int ()' Function 0x14c027490 '_cimg_mp_size' 'int ()'     | |     `-ImplicitCastExpr 0x14c0275c8 <col:31> 'unsigned int' <LValueToRValue>     | |       `-DeclRefExpr 0x14c027568 <col:31> 'const unsigned int' lvalue ParmVar 0x14c00dcd8 'arg' 'const unsigned int'     | `-VarDecl 0x14c027610 <line:5:9, line:7:11> col:11 used n 'const unsigned int'     `-IfStmt 0x14c028088 <line:8:9, line:22:9>       |-BinaryOperator 0x14c0277a0 <line:8:13, col:18> 'int' '!='       | |-BinaryOperator 0x14c027748 <col:13, col:15> 'unsigned int' '*'       | | |-ImplicitCastExpr 0x14c027718 <col:13> 'unsigned int' <LValueToRValue>       | | | `-DeclRefExpr 0x14c0276d8 <col:13> 'const unsigned int' lvalue Var 0x14c027610 'n' 'const unsigned int'       | | `-ImplicitCastExpr 0x14c027730 <col:15> 'unsigned int' <LValueToRValue>       | |   `-DeclRefExpr 0x14c0276f8 <col:15> 'const unsigned int' lvalue Var 0x14c027610 'n' 'const unsigned int'       | `-ImplicitCastExpr 0x14c027788 <col:18> 'unsigned int' <LValueToRValue>       |   `-DeclRefExpr 0x14c027768 <col:18> 'const unsigned int' lvalue Var 0x14c027400 'siz' 'const unsigned int'       `-CompoundStmt 0x14c028058 <col:23, line:22:9>         |-DeclStmt 0x14c027898 <line:9:11, col:28>         | `-VarDecl 0x14c027830 <col:11, col:23> col:23 used s_arg 'const char *'         |-BinaryOperator 0x14c027b88 <line:12:11, col:17> 'char' '='         | |-UnaryOperator 0x14c027b38 <col:11, col:12> 'char' lvalue prefix '*' cannot overflow         | | `-ImplicitCastExpr 0x14c027b20 <col:12> 'char *' <LValueToRValue>         | |   `-DeclRefExpr 0x14c027b00 <col:12> 'char *const' lvalue ParmVar 0x14c00de58 'se' 'char *const'         | `-ImplicitCastExpr 0x14c027b70 <col:17> 'char' <LValueToRValue>         |   `-DeclRefExpr 0x14c027b50 <col:17> 'const char' lvalue ParmVar 0x14c00ded0 'saved_char' 'const char'         |-DeclStmt 0x14c027ff0 <line:13:11, col:63>         | `-VarDecl 0x14c027bc0 <col:11, col:58> col:23 s0 'char *const' cinit         |   `-ConditionalOperator 0x14c027fc0 <col:28, col:58> '<dependent type>' contains-errors         |     |-BinaryOperator 0x14c027f00 <col:28, col:40> 'int' contains-errors '>'         |     | |-BinaryOperator 0x14c027e78 <col:28, col:33> 'char *' '-'         |     | | |-ImplicitCastExpr 0x14c027e60 <col:28> 'char *' <LValueToRValue>         |     | | | `-DeclRefExpr 0x14c027c28 <col:28> 'char *const' lvalue ParmVar 0x14c00ddd8 'ss' 'char *const'         |     | | `-IntegerLiteral 0x14c027c48 <col:33> 'int' 4         |     | `-CXXDependentScopeMemberExpr 0x14c027eb8 <col:35, col:40> '<dependent type>' contains-errors lvalue ._data         |     |   `-RecoveryExpr 0x14c027e98 <col:35> '<dependent type>' contains-errors lvalue         |     |-BinaryOperator 0x14c027f38 <col:46, col:51> 'char *' '-'         |     | |-ImplicitCastExpr 0x14c027f20 <col:46> 'char *' <LValueToRValue>         |     | | `-DeclRefExpr 0x14c027d20 <col:46> 'char *const' lvalue ParmVar 0x14c00ddd8 'ss' 'char *const'         |     | `-IntegerLiteral 0x14c027d40 <col:51> 'int' 4         |     `-CXXDependentScopeMemberExpr 0x14c027f78 <col:53, col:58> '<dependent type>' contains-errors lvalue ._data         |       `-RecoveryExpr 0x14c027f58 <col:53> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x14c028038 <line:14:11> '<dependent type>' contains-errors lvalue ","20795":"`-FunctionDecl 0x132128310  line:1:13 invalid sasl_start 'void (int *, const char *, const char *)' static   |-ParmVarDecl 0x132128128 <col:24, col:40> col:40 referenced invalid server 'int *'   |-ParmVarDecl 0x1321281a8 <col:48, col:60> col:60 data 'const char *'   |-ParmVarDecl 0x132128228 <col:66, col:78> col:78 from 'const char *'   `-CompoundStmt 0x132141a68 <line:2:1, line:17:1>     `-SwitchStmt 0x132128530 <line:7:2, line:15:2>       |-CXXDependentScopeMemberExpr 0x1321284e8 <line:7:10, col:16> '<dependent type>' contains-errors lvalue ->sasl_mechanism       | `-RecoveryExpr 0x1321284c8 <col:10> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x132141858 <col:32, line:15:2>         |-CallExpr 0x132128770 <line:9:4, col:34> '<dependent type>' contains-errors         | |-DeclRefExpr 0x1321286d0 <col:4> 'int ()' Function 0x132128618 'irc_send_cmd_now' 'int ()'         | |-RecoveryExpr 0x1321286f0 <col:21> '<dependent type>' contains-errors lvalue         | `-StringLiteral 0x132128750 <col:29> 'char[4]' lvalue \"STR\"         |-BreakStmt 0x1321287a0 <line:10:4>         |-CallExpr 0x132141820 <line:13:4, col:34> '<dependent type>' contains-errors         | |-DeclRefExpr 0x1321287c0 <col:4> 'int ()' Function 0x132128618 'irc_send_cmd_now' 'int ()'         | |-RecoveryExpr 0x1321287e0 <col:21> '<dependent type>' contains-errors lvalue         | `-StringLiteral 0x132141800 <col:29> 'char[4]' lvalue \"STR\"         `-BreakStmt 0x132141850 <line:14:4> ","20509":"`-FunctionDecl 0x12c8845c8  line:1:1 invalid Perl_reg_named_buff_exists 'int (int)'   |-ParmVarDecl 0x12c8844f0 <col:28, col:34> col:34 invalid REGEXP 'int'   `-CompoundStmt 0x12c89dcc8 <line:3:1, line:23:1>     |-DeclStmt 0x12c884a70 <line:4:5, col:39>     | |-RecordDecl 0x12c884678 <col:5, col:12> col:12 struct regexp     | `-VarDecl 0x12c8847e8 <col:5, col:38> col:26 used rx 'struct regexp *const' cinit     |   `-CallExpr 0x12c884a30 <col:31, col:38> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12c8849b0 <col:31> 'int ()' Function 0x12c8848f8 'ReANY' 'int ()'     |     `-RecoveryExpr 0x12c884a10 <col:37> '<dependent type>' contains-errors lvalue     `-IfStmt 0x12c89dc98 <line:8:5, line:22:5> has_else       |-BinaryOperator 0x12c89d470 <line:8:9, col:33> 'int' contains-errors '&&'       | |-ImplicitCastExpr 0x12c89d458 <col:9> 'struct regexp *' contains-errors <LValueToRValue>       | | `-DeclRefExpr 0x12c884a88 <col:9> 'struct regexp *const' contains-errors lvalue Var 0x12c8847e8 'rx' 'struct regexp *const'       | `-CallExpr 0x12c89d418 <col:15, col:33> 'int' contains-errors       |   |-ImplicitCastExpr 0x12c89d400 <col:15> 'int (*)()' <FunctionToPointerDecay>       |   | `-DeclRefExpr 0x12c884b88 <col:15> 'int ()' Function 0x12c884ad0 'RXp_PAREN_NAMES' 'int ()'       |   `-ImplicitCastExpr 0x12c89d440 <col:31> 'struct regexp *' contains-errors <LValueToRValue>       |     `-DeclRefExpr 0x12c884ba8 <col:31> 'struct regexp *const' contains-errors lvalue Var 0x12c8847e8 'rx' 'struct regexp *const'       |-CompoundStmt 0x12c89dc70 <col:36, line:20:5>       | `-IfStmt 0x12c89dc40 <line:9:9, line:19:9> has_else       |   |-BinaryOperator 0x12c89d520 <line:9:13, col:21> '<dependent type>' contains-errors '&'       |   | |-RecoveryExpr 0x12c89d4e0 <col:13> '<dependent type>' contains-errors lvalue       |   | `-RecoveryExpr 0x12c89d500 <col:21> '<dependent type>' contains-errors lvalue       |   |-CompoundStmt 0x12c89d860 <col:33, line:11:9>       |   | `-ReturnStmt 0x12c89d850 <line:10:13, col:61>       |   |   `-CallExpr 0x12c89d818 <col:20, col:61> '<dependent type>' contains-errors       |   |     |-DeclRefExpr 0x12c89d620 <col:20> 'int ()' Function 0x12c89d568 'hv_exists_ent' 'int ()'       |   |     |-CallExpr 0x12c89d7b8 <col:34, col:52> 'int' contains-errors       |   |     | |-ImplicitCastExpr 0x12c89d7a0 <col:34> 'int (*)()' <FunctionToPointerDecay>       |   |     | | `-DeclRefExpr 0x12c89d640 <col:34> 'int ()' Function 0x12c884ad0 'RXp_PAREN_NAMES' 'int ()'       |   |     | `-ImplicitCastExpr 0x12c89d7e0 <col:50> 'struct regexp *' contains-errors <LValueToRValue>       |   |     |   `-DeclRefExpr 0x12c89d660 <col:50> 'struct regexp *const' contains-errors lvalue Var 0x12c8847e8 'rx' 'struct regexp *const'       |   |     |-RecoveryExpr 0x12c89d7f8 <col:55> '<dependent type>' contains-errors lvalue       |   |     `-IntegerLiteral 0x12c89d6f0 <col:60> 'int' 0       |   `-CompoundStmt 0x12c89dc28 <line:11:16, line:19:9>       |     `-IfStmt 0x12c89dbf8 <line:13:13, line:18:13> has_else       |       |-RecoveryExpr 0x12c89da28 <line:13:17> '<dependent type>' contains-errors lvalue       |       |-CompoundStmt 0x12c89dbd0 <col:21, line:16:13>       |       | `-CallExpr 0x12c89dba8 <line:14:3, col:21> '<dependent type>' contains-errors       |       |   |-DeclRefExpr 0x12c89db28 <col:3> 'int ()' Function 0x12c89da70 'SvREFCNT_dec_NN' 'int ()'       |       |   `-RecoveryExpr 0x12c89db88 <col:19> '<dependent type>' contains-errors lvalue       |       `-CompoundStmt 0x12c89dbe8 <line:16:20, line:18:13>       `-CompoundStmt 0x12c89dc88 <line:20:12, line:22:5> ","21126":"`-FunctionDecl 0x14f01f5a8  line:1:1 invalid log2vis_unicode 'int (int *, int, int, int)'   |-ParmVarDecl 0x14f01f328 <col:18, col:29> col:29 invalid unicode 'int *'   |-ParmVarDecl 0x14f01f3a8 <col:38, col:53> col:53 invalid base_direction 'int'   |-ParmVarDecl 0x14f01f428 <col:69, col:73> col:73 used clean 'int'   |-ParmVarDecl 0x14f01f4a8 <col:80, col:84> col:84 used reordernsm 'int'   `-CompoundStmt 0x159008b38 <line:2:1, line:25:1>     |-DeclStmt 0x14f01f948 <line:7:2, col:43>     | `-VarDecl 0x14f01f718 <col:2, col:42> col:6 used length 'int' cinit     |   `-CallExpr 0x14f01f920 <col:15, col:42> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14f01f8e0 <col:15> 'int ()' Function 0x14f01f828 'PyUnicode_GET_SIZE' 'int ()'     |     `-RecoveryExpr 0x14f01f900 <col:35> '<dependent type>' contains-errors lvalue     |-IfStmt 0x159008438 <line:10:2, line:11:8>     | |-BinaryOperator 0x1590083b0 <line:10:6, col:17> 'int' contains-errors '=='     | | |-RecoveryExpr 0x159008370 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x159008390 <col:17> '<dependent type>' contains-errors lvalue     | `-GotoStmt 0x159008420 <line:11:3, col:8> 'cleanup' 0x1590083d0     |-IfStmt 0x159008670 <line:14:2, line:15:8>     | |-RecoveryExpr 0x159008638 <line:14:6, col:16> '_Bool' contains-errors     | `-GotoStmt 0x159008658 <line:15:3, col:8> 'cleanup' 0x1590083d0     `-LabelStmt 0x159008af8 <line:20:7, col:14> 'cleanup'       `-NullStmt 0x159008af0 <col:14> ","20837":"`-FunctionDecl 0x13400dd90  line:1:6 mem_cgroup_uncharge_end 'void (void)'   `-CompoundStmt 0x13400f900 <line:2:1, line:24:1>     |-DeclStmt 0x13400e178 <line:3:2, col:56>     | |-RecordDecl 0x13400de80 <col:2, col:9> col:9 struct memcg_batch_info     | `-VarDecl 0x13400dfe8 <col:2, col:45> col:27 used batch 'struct memcg_batch_info *' cinit     |   `-UnaryOperator 0x13400e148 <col:35, col:45> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-CXXDependentScopeMemberExpr 0x13400e100 <col:36, col:45> '<dependent type>' contains-errors lvalue ->memcg_batch     |       `-RecoveryExpr 0x13400e0e0 <col:36> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13400ee78 <line:5:2, line:6:3>     | |-UnaryOperator 0x13400ee50 <line:5:6, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13400ee38 <col:7, col:14> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x13400ee10 <col:7, col:14> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x13400e190 <col:7> 'struct memcg_batch_info *' contains-errors lvalue Var 0x13400dfe8 'batch' 'struct memcg_batch_info *'     | `-ReturnStmt 0x13400ee68 <line:6:3>     |-UnaryOperator 0x13400eef8 <line:8:2, col:17> '<dependent type>' contains-errors postfix '--' cannot overflow     | `-RecoveryExpr 0x13400eed0 <col:2, col:9> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x13400ee98 <col:2> 'struct memcg_batch_info *' contains-errors lvalue Var 0x13400dfe8 'batch' 'struct memcg_batch_info *'     |-IfStmt 0x13400ef80 <line:9:2, line:10:3>     | |-RecoveryExpr 0x13400ef48 <line:9:6, col:13> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13400ef10 <col:6> 'struct memcg_batch_info *' contains-errors lvalue Var 0x13400dfe8 'batch' 'struct memcg_batch_info *'     | `-ReturnStmt 0x13400ef70 <line:10:3>     |-IfStmt 0x13400f040 <line:12:2, line:13:3>     | |-UnaryOperator 0x13400f018 <line:12:6, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13400f000 <col:7, col:14> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x13400efd8 <col:7, col:14> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x13400efa0 <col:7> 'struct memcg_batch_info *' contains-errors lvalue Var 0x13400dfe8 'batch' 'struct memcg_batch_info *'     | `-ReturnStmt 0x13400f030 <line:13:3>     |-IfStmt 0x13400f3e8 <line:15:2, line:17:37>     | |-RecoveryExpr 0x13400f098 <line:15:6, col:13> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13400f060 <col:6> 'struct memcg_batch_info *' contains-errors lvalue Var 0x13400dfe8 'batch' 'struct memcg_batch_info *'     | `-CallExpr 0x13400f3b8 <line:16:3, line:17:37> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13400f1d0 <line:16:3> 'int ()' Function 0x13400f118 'res_counter_uncharge' 'int ()'     |   |-UnaryOperator 0x13400f298 <col:24, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-CXXDependentScopeMemberExpr 0x13400f250 <col:25, col:39> '<dependent type>' contains-errors lvalue ->res     |   |   `-RecoveryExpr 0x13400f228 <col:25, col:32> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x13400f1f0 <col:25> 'struct memcg_batch_info *' contains-errors lvalue Var 0x13400dfe8 'batch' 'struct memcg_batch_info *'     |   `-BinaryOperator 0x13400f398 <line:17:10, col:28> '<dependent type>' contains-errors '*'     |     |-RecoveryExpr 0x13400f2e8 <col:10, col:17> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x13400f2b0 <col:10> 'struct memcg_batch_info *' contains-errors lvalue Var 0x13400dfe8 'batch' 'struct memcg_batch_info *'     |     `-RecoveryExpr 0x13400f378 <col:28> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13400f680 <line:18:2, line:20:43>     | |-RecoveryExpr 0x13400f440 <line:18:6, col:13> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13400f408 <col:6> 'struct memcg_batch_info *' contains-errors lvalue Var 0x13400dfe8 'batch' 'struct memcg_batch_info *'     | `-CallExpr 0x13400f650 <line:19:3, line:20:43> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13400f468 <line:19:3> 'int ()' Function 0x13400f118 'res_counter_uncharge' 'int ()'     |   |-UnaryOperator 0x13400f530 <col:24, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-CXXDependentScopeMemberExpr 0x13400f4e8 <col:25, col:39> '<dependent type>' contains-errors lvalue ->memsw     |   |   `-RecoveryExpr 0x13400f4c0 <col:25, col:32> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x13400f488 <col:25> 'struct memcg_batch_info *' contains-errors lvalue Var 0x13400dfe8 'batch' 'struct memcg_batch_info *'     |   `-BinaryOperator 0x13400f630 <line:20:10, col:34> '<dependent type>' contains-errors '*'     |     |-RecoveryExpr 0x13400f580 <col:10, col:17> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x13400f548 <col:10> 'struct memcg_batch_info *' contains-errors lvalue Var 0x13400dfe8 'batch' 'struct memcg_batch_info *'     |     `-RecoveryExpr 0x13400f610 <col:34> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13400f800 <line:21:2, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13400f780 <col:2> 'int ()' Function 0x13400f6c8 'memcg_oom_recover' 'int ()'     | `-RecoveryExpr 0x13400f7d8 <col:20, col:27> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x13400f7a0 <col:20> 'struct memcg_batch_info *' contains-errors lvalue Var 0x13400dfe8 'batch' 'struct memcg_batch_info *'     `-BinaryOperator 0x13400f8e0 <line:23:2, col:17> '<dependent type>' contains-errors '='       |-RecoveryExpr 0x13400f860 <col:2, col:9> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x13400f828 <col:2> 'struct memcg_batch_info *' contains-errors lvalue Var 0x13400dfe8 'batch' 'struct memcg_batch_info *'       `-RecoveryExpr 0x13400f8c0 <col:17> '<dependent type>' contains-errors lvalue ","20537":"`-FunctionDecl 0x13a919d98  line:1:12 pcd_detect 'int (void)' static   `-CompoundStmt 0x13a936d58 <line:2:1, line:55:1>     |-DeclStmt 0x13a919f98 <line:3:2, col:13>     | `-VarDecl 0x13a919f30 <col:2, col:12> col:7 used id 'char[18]'     |-DeclStmt 0x13a91a0c8 <line:4:2, col:13>     | |-VarDecl 0x13a919fc8 <col:2, col:6> col:6 used k 'int'     | `-VarDecl 0x13a91a048 <col:2, col:9> col:9 used unit 'int'     |-DeclStmt 0x13a91a2c8 <line:5:2, col:21>     | |-RecordDecl 0x13a91a0e0 <col:2, col:9> col:9 struct pcd_unit     | `-VarDecl 0x13a91a248 <col:2, col:19> col:19 used cd 'struct pcd_unit *'     |-CallExpr 0x13a933bf8 <line:7:2, line:8:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13a933a10 <line:7:2> 'int ()' Function 0x13a91a358 'printk' 'int ()'     | |-StringLiteral 0x13a933a70 <col:9> 'char[4]' lvalue \"STR\"     | |-RecoveryExpr 0x13a933b58 <line:8:9> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x13a933b78 <col:15> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x13a933b98 <col:21> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x13a933bb8 <col:34> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x13a933bd8 <col:41> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13a934040 <line:11:2, line:14:2>     | |-UnaryOperator 0x13a933e08 <line:11:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13a933df0 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x13a933dd0 <col:7> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13a934020 <col:16, line:14:2>     |   |-CallExpr 0x13a933fa8 <line:12:3, col:21> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13a933f00 <col:3> 'int ()' Function 0x13a933e48 'pr_err' 'int ()'     |   | |-StringLiteral 0x13a933f20 <col:10> 'char[4]' lvalue \"STR\"     |   | `-RecoveryExpr 0x13a933f88 <col:17> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x13a934010 <line:13:3, col:11>     |     `-UnaryOperator 0x13a933ff8 <col:10, col:11> 'int' prefix '-'     |       `-IntegerLiteral 0x13a933fd8 <col:11> 'int' 1     |-BinaryOperator 0x13a9340a0 <line:16:2, col:6> 'int' '='     | |-DeclRefExpr 0x13a934060 <col:2> 'int' lvalue Var 0x13a919fc8 'k' 'int'     | `-IntegerLiteral 0x13a934080 <col:6> 'int' 0     |-IfStmt 0x13a936408 <line:17:2, line:42:2> has_else     | |-BinaryOperator 0x13a934138 <line:17:6, col:25> 'int' contains-errors '=='     | | |-RecoveryExpr 0x13a934118 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x13a9340d8 <col:25> 'int' 0     | |-CompoundStmt 0x13a935c60 <col:28, line:27:2>     | | |-BinaryOperator 0x13a9341e8 <line:18:3, col:8> 'struct pcd_unit *' '='     | | | |-DeclRefExpr 0x13a934158 <col:3> 'struct pcd_unit *' lvalue Var 0x13a91a248 'cd' 'struct pcd_unit *'     | | | `-ImplicitCastExpr 0x13a9341d0 <col:8> 'struct pcd_unit *' <LValueToRValue>     | | |   `-DeclRefExpr 0x13a9341b0 <col:8> 'struct pcd_unit *' lvalue Var 0x13a91a248 'cd' 'struct pcd_unit *'     | | `-IfStmt 0x13a935c40 <line:19:3, line:26:3>     | |   |-CallExpr 0x13a935640 <line:19:7, line:20:33> '<dependent type>' contains-errors     | |   | |-DeclRefExpr 0x13a9342e8 <line:19:7> 'int ()' Function 0x13a934230 'pi_init' 'int ()'     | |   | |-RecoveryExpr 0x13a934760 <col:15, col:19> '<dependent type>' contains-errors lvalue     | |   | | `-DeclRefExpr 0x13a934308 <col:15> 'struct pcd_unit *' lvalue Var 0x13a91a248 'cd' 'struct pcd_unit *'     | |   | |-IntegerLiteral 0x13a934788 <col:23> 'int' 1     | |   | |-UnaryOperator 0x13a9347c8 <col:26, col:27> 'int' prefix '-'     | |   | | `-IntegerLiteral 0x13a9347a8 <col:27> 'int' 1     | |   | |-UnaryOperator 0x13a934800 <col:30, col:31> 'int' prefix '-'     | |   | | `-IntegerLiteral 0x13a9347e0 <col:31> 'int' 1     | |   | |-UnaryOperator 0x13a934838 <col:34, col:35> 'int' prefix '-'     | |   | | `-IntegerLiteral 0x13a934818 <col:35> 'int' 1     | |   | |-UnaryOperator 0x13a934870 <col:38, col:39> 'int' prefix '-'     | |   | | `-IntegerLiteral 0x13a934850 <col:39> 'int' 1     | |   | |-UnaryOperator 0x13a9348a8 <col:42, col:43> 'int' prefix '-'     | |   | | `-IntegerLiteral 0x13a934888 <col:43> 'int' 1     | |   | |-RecoveryExpr 0x13a9349e0 <col:46> '<dependent type>' contains-errors lvalue     | |   | |-RecoveryExpr 0x13a935600 <line:20:8> '<dependent type>' contains-errors lvalue     | |   | |-RecoveryExpr 0x13a935620 <col:16> '<dependent type>' contains-errors lvalue     | |   | `-RecoveryExpr 0x13a934940 <col:25, col:29> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x13a934908 <col:25> 'struct pcd_unit *' lvalue Var 0x13a91a248 'cd' 'struct pcd_unit *'     | |   `-CompoundStmt 0x13a935c28 <col:36, line:26:3>     | |     `-IfStmt 0x13a935bf8 <line:21:4, line:25:22> has_else     | |       |-BinaryOperator 0x13a935958 <line:21:8, col:38> 'int' contains-errors '&&'     | |       | |-UnaryOperator 0x13a9358e0 <col:8, col:29> 'int' prefix '!' cannot overflow     | |       | | `-CallExpr 0x13a935878 <col:9, col:29> 'int'     | |       | |   |-ImplicitCastExpr 0x13a935860 <col:9> 'int (*)()' <FunctionToPointerDecay>     | |       | |   | `-DeclRefExpr 0x13a935798 <col:9> 'int ()' Function 0x13a9356e0 'pcd_probe' 'int ()'     | |       | |   |-ImplicitCastExpr 0x13a9358b0 <col:19> 'struct pcd_unit *' <LValueToRValue>     | |       | |   | `-DeclRefExpr 0x13a9357b8 <col:19> 'struct pcd_unit *' lvalue Var 0x13a91a248 'cd' 'struct pcd_unit *'     | |       | |   |-UnaryOperator 0x13a9357f8 <col:23, col:24> 'int' prefix '-'     | |       | |   | `-IntegerLiteral 0x13a9357d8 <col:24> 'int' 1     | |       | |   `-ImplicitCastExpr 0x13a9358c8 <col:27> 'char *' <ArrayToPointerDecay>     | |       | |     `-DeclRefExpr 0x13a935810 <col:27> 'char[18]' lvalue Var 0x13a919f30 'id' 'char[18]'     | |       | `-RecoveryExpr 0x13a935930 <col:34, col:38> '<dependent type>' contains-errors lvalue     | |       |   `-DeclRefExpr 0x13a9358f8 <col:34> 'struct pcd_unit *' lvalue Var 0x13a91a248 'cd' 'struct pcd_unit *'     | |       |-CompoundStmt 0x13a935a50 <col:44, line:24:4>     | |       | |-BinaryOperator 0x13a9359f8 <line:22:5, col:19> '<dependent type>' contains-errors '='     | |       | | |-RecoveryExpr 0x13a9359b0 <col:5, col:9> '<dependent type>' contains-errors lvalue     | |       | | | `-DeclRefExpr 0x13a935978 <col:5> 'struct pcd_unit *' lvalue Var 0x13a91a248 'cd' 'struct pcd_unit *'     | |       | | `-IntegerLiteral 0x13a9359d8 <col:19> 'int' 1     | |       | `-UnaryOperator 0x13a935a38 <line:23:5, col:6> 'int' postfix '++'     | |       |   `-DeclRefExpr 0x13a935a18 <col:5> 'int' lvalue Var 0x13a919fc8 'k' 'int'     | |       `-CallExpr 0x13a935bd0 <line:25:5, col:22> '<dependent type>' contains-errors     | |         |-DeclRefExpr 0x13a935b50 <col:5> 'int ()' Function 0x13a935a98 'pi_release' 'int ()'     | |         `-RecoveryExpr 0x13a935ba8 <col:16, col:20> '<dependent type>' contains-errors lvalue     | |           `-DeclRefExpr 0x13a935b70 <col:16> 'struct pcd_unit *' lvalue Var 0x13a91a248 'cd' 'struct pcd_unit *'     | `-CompoundStmt 0x13a9363f8 <line:27:9, line:42:2>     |-IfStmt 0x13a9364a0 <line:43:2, line:44:10>     | |-ImplicitCastExpr 0x13a936458 <line:43:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x13a936438 <col:6> 'int' lvalue Var 0x13a919fc8 'k' 'int'     | `-ReturnStmt 0x13a936490 <line:44:3, col:10>     |   `-IntegerLiteral 0x13a936470 <col:10> 'int' 0     `-ReturnStmt 0x13a936d48 <line:54:2, col:10>       `-UnaryOperator 0x13a936d30 <col:9, col:10> 'int' prefix '-'         `-IntegerLiteral 0x13a936d10 <col:10> 'int' 1 ","20904":"`-FunctionDecl 0x140928750  line:1:13 digi_rx_unthrottle 'void (struct tty_struct *)' static   |-ParmVarDecl 0x140928648 <col:32, col:51> col:51 used tty 'struct tty_struct *'   `-CompoundStmt 0x141008b90 <line:2:1, line:24:1>     |-DeclStmt 0x140940ae8 <line:3:2, col:13>     | `-VarDecl 0x140940a60 <col:2, col:12> col:6 used ret 'int' cinit     |   `-IntegerLiteral 0x140940ac8 <col:12> 'int' 0     |-DeclStmt 0x140940b80 <line:4:2, col:21>     | `-VarDecl 0x140940b18 <col:2, col:16> col:16 used flags 'unsigned long'     |-DeclStmt 0x140940de8 <line:5:2, col:49>     | |-RecordDecl 0x140940b98 <col:2, col:9> col:9 struct usb_serial_port     | `-VarDecl 0x140940d08 <col:2, col:38> col:26 used port 'struct usb_serial_port *' cinit     |   `-RecoveryExpr 0x140940da8 <col:33, col:38> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x140940d70 <col:33> 'struct tty_struct *' lvalue ParmVar 0x140928648 'tty' 'struct tty_struct *'     |-DeclStmt 0x1409411f8 <line:6:2, col:57>     | |-RecordDecl 0x140940e00 <col:2, col:9> col:9 struct digi_port     | `-VarDecl 0x140940f68 <col:2, col:56> col:20 used priv 'struct digi_port *' cinit     |   `-ImplicitCastExpr 0x1409411c8 <col:27, col:56> 'struct digi_port *' contains-errors <IntegralToPointer>     |     `-CallExpr 0x140941188 <col:27, col:56> 'int' contains-errors     |       |-ImplicitCastExpr 0x140941170 <col:27> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x140941100 <col:27> 'int ()' Function 0x140941048 'usb_get_serial_port_data' 'int ()'     |       `-ImplicitCastExpr 0x1409411b0 <col:52> 'struct usb_serial_port *' contains-errors <LValueToRValue>     |         `-DeclRefExpr 0x140941120 <col:52> 'struct usb_serial_port *' contains-errors lvalue Var 0x140940d08 'port' 'struct usb_serial_port *'     |-CallExpr 0x1409413a8 <line:8:2, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1409412f0 <col:2> 'int ()' Function 0x140941238 'spin_lock_irqsave' 'int ()'     | |-UnaryOperator 0x140941370 <col:20, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x140941348 <col:21, col:27> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x140941310 <col:21> 'struct digi_port *' contains-errors lvalue Var 0x140940f68 'priv' 'struct digi_port *'     | `-DeclRefExpr 0x140941388 <col:41> 'unsigned long' lvalue Var 0x140940b18 'flags' 'unsigned long'     |-IfStmt 0x140941690 <line:11:2, line:12:50>     | |-RecoveryExpr 0x140941410 <line:11:6, col:12> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1409413d8 <col:6> 'struct digi_port *' contains-errors lvalue Var 0x140940f68 'priv' 'struct digi_port *'     | `-BinaryOperator 0x140941670 <line:12:3, col:50> 'int' contains-errors '='     |   |-DeclRefExpr 0x140941438 <col:3> 'int' lvalue Var 0x140940a60 'ret' 'int'     |   `-CallExpr 0x140941640 <col:9, col:50> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x140941538 <col:9> 'int ()' Function 0x140941480 'usb_submit_urb' 'int ()'     |     |-RecoveryExpr 0x140941590 <col:24, col:30> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x140941558 <col:24> 'struct usb_serial_port *' contains-errors lvalue Var 0x140940d08 'port' 'struct usb_serial_port *'     |     `-RecoveryExpr 0x140941620 <col:40> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x140941730 <line:15:2, col:23> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1409416e8 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1409416b0 <col:2> 'struct digi_port *' contains-errors lvalue Var 0x140940f68 'priv' 'struct digi_port *'     | `-IntegerLiteral 0x140941710 <col:23> 'int' 0     |-BinaryOperator 0x1409417d0 <line:16:2, col:30> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x140941788 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x140941750 <col:2> 'struct digi_port *' contains-errors lvalue Var 0x140940f68 'priv' 'struct digi_port *'     | `-IntegerLiteral 0x1409417b0 <col:30> 'int' 0     |-CallExpr 0x140941988 <line:18:2, col:51> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1409418d0 <col:2> 'int ()' Function 0x140941818 'spin_unlock_irqrestore' 'int ()'     | |-UnaryOperator 0x140941950 <col:25, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x140941928 <col:26, col:32> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1409418f0 <col:26> 'struct digi_port *' contains-errors lvalue Var 0x140940f68 'priv' 'struct digi_port *'     | `-DeclRefExpr 0x140941968 <col:46> 'unsigned long' lvalue Var 0x140940b18 'flags' 'unsigned long'     `-IfStmt 0x141008b70 <line:20:2, line:23:36>       |-ImplicitCastExpr 0x1409419d8 <line:20:6> 'int' <LValueToRValue>       | `-DeclRefExpr 0x1409419b8 <col:6> 'int' lvalue Var 0x140940a60 'ret' 'int'       `-CallExpr 0x141008b28 <line:21:3, line:23:36> '<dependent type>' contains-errors         |-DeclRefExpr 0x1410088e0 <line:21:3> 'int ()' Function 0x141008828 'dev_err' 'int ()'         |-UnaryOperator 0x141008960 <col:11, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow         | `-RecoveryExpr 0x141008938 <col:12, col:18> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x141008900 <col:12> 'struct usb_serial_port *' contains-errors lvalue Var 0x140940d08 'port' 'struct usb_serial_port *'         |-StringLiteral 0x1410089c0 <line:22:4> 'char[4]' lvalue \"STR\"         |-PredefinedExpr 0x141008a90 <line:23:4> 'const char[19]' lvalue __func__         | `-StringLiteral 0x141008a60 <col:4> 'const char[19]' lvalue \"digi_rx_unthrottle\"         |-DeclRefExpr 0x141008aa8 <col:14> 'int' lvalue Var 0x140940a60 'ret' 'int'         `-RecoveryExpr 0x141008b00 <col:19, col:25> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x141008ac8 <col:19> 'struct digi_port *' contains-errors lvalue Var 0x140940f68 'priv' 'struct digi_port *' ","20926":"`-FunctionDecl 0x1470092f0  col:2 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern   |-ParmVarDecl 0x1470093f0 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x147009458 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-ParmVarDecl 0x1470094c0 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x147009398 <<invalid sloc>> Implicit 905   `-FormatAttr 0x147009540 <col:2> Implicit printf 3 4 ","20903":"`-FunctionDecl 0x133809370  col:24 implicit used calloc 'void *(unsigned long, unsigned long)' extern   |-ParmVarDecl 0x133809470 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-ParmVarDecl 0x1338094d8 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-BuiltinAttr 0x133809418 <<invalid sloc>> Implicit 868   `-AllocSizeAttr 0x133809550 <col:24> Implicit 1 2 ","21115":"`-FunctionDecl 0x15900de38  line:1:1 SPL_METHOD 'int (int, int)'   |-ParmVarDecl 0x15900dd58 <col:12> col:12 DirectoryIterator 'int'   |-ParmVarDecl 0x15900dcd8 <col:31> col:31 next 'int'   `-CompoundStmt 0x14f920ab8 <line:2:1, line:18:1>     |-DeclStmt 0x15900e290 <line:4:2, col:68>     | `-VarDecl 0x15900df98 <col:2, col:67> col:6 used skip_dots 'int' cinit     |   `-CallExpr 0x15900e260 <col:18, col:67> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x15900e110 <col:18> 'int ()' Function 0x15900e058 'SPL_HAS_FLAG' 'int ()'     |     |-CXXDependentScopeMemberExpr 0x15900e1f8 <col:31, col:39> '<dependent type>' contains-errors lvalue ->flags     |     | `-RecoveryExpr 0x15900e1d8 <col:31> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x15900e240 <col:46> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14f920330 <line:6:2, line:8:2>     | |-BinaryOperator 0x14f9202e8 <line:6:6, col:38> 'int' contains-errors '=='     | | |-CallExpr 0x14f9202a8 <col:6, col:33> 'int'     | | | `-ImplicitCastExpr 0x14f920290 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | |   `-DeclRefExpr 0x15900e388 <col:6> 'int ()' Function 0x15900e2d0 'zend_parse_parameters_none' 'int ()'     | | `-RecoveryExpr 0x14f9202c8 <col:38> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14f920318 <col:47, line:8:2>     |   `-ReturnStmt 0x14f920308 <line:7:3>     |-DoStmt 0x14f9208a0 <line:11:2, line:13:73>     | |-CompoundStmt 0x14f920468 <line:11:5, line:13:2>     | `-BinaryOperator 0x14f920880 <col:11, col:72> 'int' contains-errors '&&'     |   |-DeclRefExpr 0x14f920478 <col:11> 'int' contains-errors lvalue Var 0x15900df98 'skip_dots' 'int'     |   `-CallExpr 0x14f920858 <col:24, col:72> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14f920578 <col:24> 'int ()' Function 0x14f9204c0 'spl_filesystem_is_dot' 'int ()'     |     `-CXXDependentScopeMemberExpr 0x14f920810 <col:46, col:66> '<dependent type>' contains-errors lvalue .d_name     |       `-CXXDependentScopeMemberExpr 0x14f9207c8 <col:46, col:60> '<dependent type>' contains-errors lvalue .entry     |         `-CXXDependentScopeMemberExpr 0x14f920780 <col:46, col:56> '<dependent type>' contains-errors lvalue .dir     |           `-CXXDependentScopeMemberExpr 0x14f920738 <col:46, col:54> '<dependent type>' contains-errors lvalue ->u     |             `-RecoveryExpr 0x14f920718 <col:46> '<dependent type>' contains-errors lvalue     `-IfStmt 0x14f920a98 <line:14:2, line:17:2>       |-CXXDependentScopeMemberExpr 0x14f920940 <line:14:6, col:14> '<dependent type>' contains-errors lvalue ->file_name       | `-RecoveryExpr 0x14f920920 <col:6> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x14f920a88 <col:25, line:17:2> ","20634":"`-FunctionDecl 0x13000dfe8  line:1:1 invalid TPMI_ALG_KDF_Unmarshal 'int (int *, int **, int *, int)'   |-ParmVarDecl 0x13000dd28 <col:24, col:38> col:38 invalid target 'int *'   |-ParmVarDecl 0x13000dde0 <col:46, col:53> col:53 invalid buffer 'int **'   |-ParmVarDecl 0x13000de60 <col:61, col:68> col:68 invalid size 'int *'   |-ParmVarDecl 0x13000dee0 <col:74, col:79> col:79 invalid allowNull 'int'   `-CompoundStmt 0x1308eb040 <line:2:1, line:32:1>     |-IfStmt 0x13000e388 <line:5:5, line:7:5>     | |-BinaryOperator 0x13000e140 <line:5:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x13000e100 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13000e120 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13000e378 <col:31, line:7:5>     |-IfStmt 0x1308eafd8 <line:8:5, line:30:5>     | |-BinaryOperator 0x1308eae40 <line:8:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x1308eae00 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1308eae20 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1308eafc0 <col:31, line:30:5>     |   `-SwitchStmt 0x1308eaeb0 <line:9:2, line:29:2>     |     |-UnaryOperator 0x1308eae98 <line:9:10, col:11> '<dependent type>' contains-errors prefix '*' cannot overflow     |     | `-ImplicitCastExpr 0x1308eae80 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |     |   `-RecoveryExpr 0x1308eae60 <col:11> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x1308eaf98 <col:19, line:29:2>     |       |-BreakStmt 0x1308eaed8 <line:22:6>     |       |-IfStmt 0x1308eaf38 <line:24:6, line:26:6>     |       | |-RecoveryExpr 0x1308eaef8 <line:24:10> '<dependent type>' contains-errors lvalue     |       | `-CompoundStmt 0x1308eaf20 <col:21, line:26:6>     |       |   `-BreakStmt 0x1308eaf18 <line:25:3>     |       `-DefaultStmt 0x1308eaf78 <line:27:4, col:11>     |         `-NullStmt 0x1308eaf70 <col:11>     `-ReturnStmt 0x1308eb030 <line:31:5, col:12>       `-RecoveryExpr 0x1308eb010 <col:12> '<dependent type>' contains-errors lvalue ","20863":"`-FunctionDecl 0x126928288  line:1:1 invalid print_p2r 'int (const unsigned char *, int)'   |-ParmVarDecl 0x126928108 <col:12, col:33> col:33 used msg 'const unsigned char *'   |-ParmVarDecl 0x1269281a0 <col:38, col:45> col:45 invalid msglen 'int'   `-CompoundStmt 0x127009b60 <line:2:1, line:51:1>     `-SwitchStmt 0x126928428 <line:3:3, line:50:5>       |-ConditionalOperator 0x1269283f8 <line:3:11, col:26> '<dependent type>' contains-errors       | |-RecoveryExpr 0x126928340 <col:11> '<dependent type>' contains-errors lvalue       | |-ArraySubscriptExpr 0x1269283b8 <col:19, col:24> 'const unsigned char' lvalue       | | |-ImplicitCastExpr 0x1269283a0 <col:19> 'const unsigned char *' <LValueToRValue>       | | | `-DeclRefExpr 0x126928360 <col:19> 'const unsigned char *' lvalue ParmVar 0x126928108 'msg' 'const unsigned char *'       | | `-IntegerLiteral 0x126928380 <col:23> 'int' 0       | `-IntegerLiteral 0x1269283d8 <col:26> 'int' 0       `-CompoundStmt 0x127009a60 <line:4:5, line:50:5>         |-CallExpr 0x126928620 <line:6:7, col:40> '<dependent type>' contains-errors         | |-DeclRefExpr 0x1269285c0 <col:7> 'int ()' Function 0x126928508 'print_p2r_iccpoweron' 'int ()'         | |-DeclRefExpr 0x1269285e0 <col:29> 'const unsigned char *' lvalue ParmVar 0x126928108 'msg' 'const unsigned char *'         | `-RecoveryExpr 0x126928600 <col:34> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x126928650 <line:7:7>         |-CallExpr 0x1269287b0 <line:9:7, col:41> '<dependent type>' contains-errors         | |-DeclRefExpr 0x126928750 <col:7> 'int ()' Function 0x126928698 'print_p2r_iccpoweroff' 'int ()'         | |-DeclRefExpr 0x126928770 <col:30> 'const unsigned char *' lvalue ParmVar 0x126928108 'msg' 'const unsigned char *'         | `-RecoveryExpr 0x126928790 <col:35> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x1269287e0 <line:10:7>         |-CallExpr 0x126941940 <line:12:7, col:43> '<dependent type>' contains-errors         | |-DeclRefExpr 0x1269418e0 <col:7> 'int ()' Function 0x126941828 'print_p2r_getslotstatus' 'int ()'         | |-DeclRefExpr 0x126941900 <col:32> 'const unsigned char *' lvalue ParmVar 0x126928108 'msg' 'const unsigned char *'         | `-RecoveryExpr 0x126941920 <col:37> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x126941970 <line:13:7>         |-CallExpr 0x126941ad0 <line:15:7, col:38> '<dependent type>' contains-errors         | |-DeclRefExpr 0x126941a70 <col:7> 'int ()' Function 0x1269419b8 'print_p2r_xfrblock' 'int ()'         | |-DeclRefExpr 0x126941a90 <col:27> 'const unsigned char *' lvalue ParmVar 0x126928108 'msg' 'const unsigned char *'         | `-RecoveryExpr 0x126941ab0 <col:32> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x126941b00 <line:16:7>         |-CallExpr 0x126941c60 <line:18:7, col:43> '<dependent type>' contains-errors         | |-DeclRefExpr 0x126941c00 <col:7> 'int ()' Function 0x126941b48 'print_p2r_getparameters' 'int ()'         | |-DeclRefExpr 0x126941c20 <col:32> 'const unsigned char *' lvalue ParmVar 0x126928108 'msg' 'const unsigned char *'         | `-RecoveryExpr 0x126941c40 <col:37> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x126941c90 <line:19:7>         |-CallExpr 0x126941df0 <line:21:7, col:45> '<dependent type>' contains-errors         | |-DeclRefExpr 0x126941d90 <col:7> 'int ()' Function 0x126941cd8 'print_p2r_resetparameters' 'int ()'         | |-DeclRefExpr 0x126941db0 <col:34> 'const unsigned char *' lvalue ParmVar 0x126928108 'msg' 'const unsigned char *'         | `-RecoveryExpr 0x126941dd0 <col:39> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x126941e20 <line:22:7>         |-CallExpr 0x126941f80 <line:24:7, col:43> '<dependent type>' contains-errors         | |-DeclRefExpr 0x126941f20 <col:7> 'int ()' Function 0x126941e68 'print_p2r_setparameters' 'int ()'         | |-DeclRefExpr 0x126941f40 <col:32> 'const unsigned char *' lvalue ParmVar 0x126928108 'msg' 'const unsigned char *'         | `-RecoveryExpr 0x126941f60 <col:37> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x126941fb0 <line:25:7>         |-CallExpr 0x126942110 <line:27:7, col:36> '<dependent type>' contains-errors         | |-DeclRefExpr 0x1269420b0 <col:7> 'int ()' Function 0x126941ff8 'print_p2r_escape' 'int ()'         | |-DeclRefExpr 0x1269420d0 <col:25> 'const unsigned char *' lvalue ParmVar 0x126928108 'msg' 'const unsigned char *'         | `-RecoveryExpr 0x1269420f0 <col:30> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x126942140 <line:28:7>         |-CallExpr 0x1269422a0 <line:30:7, col:38> '<dependent type>' contains-errors         | |-DeclRefExpr 0x126942240 <col:7> 'int ()' Function 0x126942188 'print_p2r_iccclock' 'int ()'         | |-DeclRefExpr 0x126942260 <col:27> 'const unsigned char *' lvalue ParmVar 0x126928108 'msg' 'const unsigned char *'         | `-RecoveryExpr 0x126942280 <col:32> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x1269422d0 <line:31:7>         |-CallExpr 0x126942418 <line:33:7, col:37> '<dependent type>' contains-errors         | |-DeclRefExpr 0x1269423b8 <col:7> 'int ()' Function 0x126942300 'print_p2r_to0apdu' 'int ()'         | |-DeclRefExpr 0x1269423d8 <col:26> 'const unsigned char *' lvalue ParmVar 0x126928108 'msg' 'const unsigned char *'         | `-RecoveryExpr 0x1269423f8 <col:31> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x126942448 <line:34:7>         |-CallExpr 0x126942590 <line:36:7, col:36> '<dependent type>' contains-errors         | |-DeclRefExpr 0x126942530 <col:7> 'int ()' Function 0x126942478 'print_p2r_secure' 'int ()'         | |-DeclRefExpr 0x126942550 <col:25> 'const unsigned char *' lvalue ParmVar 0x126928108 'msg' 'const unsigned char *'         | `-RecoveryExpr 0x126942570 <col:30> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x1269425c0 <line:37:7>         |-CallExpr 0x126942708 <line:39:7, col:40> '<dependent type>' contains-errors         | |-DeclRefExpr 0x1269426a8 <col:7> 'int ()' Function 0x1269425f0 'print_p2r_mechanical' 'int ()'         | |-DeclRefExpr 0x1269426c8 <col:29> 'const unsigned char *' lvalue ParmVar 0x126928108 'msg' 'const unsigned char *'         | `-RecoveryExpr 0x1269426e8 <col:34> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x126942738 <line:40:7>         |-CallExpr 0x127009718 <line:42:7, col:35> '<dependent type>' contains-errors         | |-DeclRefExpr 0x1270096b8 <col:7> 'int ()' Function 0x127009600 'print_p2r_abort' 'int ()'         | |-DeclRefExpr 0x1270096d8 <col:24> 'const unsigned char *' lvalue ParmVar 0x126928108 'msg' 'const unsigned char *'         | `-RecoveryExpr 0x1270096f8 <col:29> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x127009748 <line:43:7>         |-CallExpr 0x127009890 <line:45:7, col:41> '<dependent type>' contains-errors         | |-DeclRefExpr 0x127009830 <col:7> 'int ()' Function 0x127009778 'print_p2r_setdatarate' 'int ()'         | |-DeclRefExpr 0x127009850 <col:30> 'const unsigned char *' lvalue ParmVar 0x126928108 'msg' 'const unsigned char *'         | `-RecoveryExpr 0x127009870 <col:35> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x1270098c0 <line:46:7>         |-DefaultStmt 0x127009a38 <line:47:5, line:48:37>         | `-CallExpr 0x127009a08 <col:7, col:37> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x1270099a8 <col:7> 'int ()' Function 0x1270098f0 'print_p2r_unknown' 'int ()'         |   |-DeclRefExpr 0x1270099c8 <col:26> 'const unsigned char *' lvalue ParmVar 0x126928108 'msg' 'const unsigned char *'         |   `-RecoveryExpr 0x1270099e8 <col:31> '<dependent type>' contains-errors lvalue         `-BreakStmt 0x127009a58 <line:49:7> ","20914":"`-FunctionDecl 0x12d9432b0  col:7 implicit used strcpy 'char *(char *, const char *)' extern   |-ParmVarDecl 0x12d9433b0 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x12d943418 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x12d943358 <<invalid sloc>> Implicit 885 ","20569":"`-FunctionDecl 0x1321416b8  col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x1321417b8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x132141820 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x132141888 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x132141760 <<invalid sloc>> Implicit 882 ","20596":"`-FunctionDecl 0x15b928198  line:1:1 ves_icall_System_Environment_GetLogicalDrives 'int (void)'   `-CompoundStmt 0x14b809eb0 <line:2:1, line:52:1>     |-DeclStmt 0x15b928338 <line:6:2, col:14>     | `-VarDecl 0x15b9282d0 <col:2, col:7> col:7 used ndrives 'int'     |-DeclStmt 0x15b9285d8 <line:10:2, col:10>     | `-VarDecl 0x15b928570 <col:2, col:7> col:7 used len 'int'     |-WhileStmt 0x14b809798 <line:17:2, line:26:2>     | |-BinaryOperator 0x15b9286d0 <line:17:9, col:16> 'int' contains-errors '>'     | | |-RecoveryExpr 0x15b928690 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x15b9286b0 <col:16> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14b809780 <col:30, line:26:2>     |   `-IfStmt 0x14b809760 <line:19:3, line:25:3>     |     |-RecoveryExpr 0x15b9286f0 <line:19:7, col:14> '_Bool' contains-errors     |     `-CompoundStmt 0x14b809750 <col:28, line:25:3>     |-BinaryOperator 0x14b8097f8 <line:30:2, col:12> 'int' '='     | |-DeclRefExpr 0x14b8097b8 <col:2> 'int' lvalue Var 0x15b9282d0 'ndrives' 'int'     | `-IntegerLiteral 0x14b8097d8 <col:12> 'int' 0     |-DoStmt 0x14b8098d8 <line:31:2, line:34:17>     | |-CompoundStmt 0x14b809898 <line:31:5, line:34:2>     | | |-WhileStmt 0x14b809840 <line:32:3, col:19>     | | | |-RecoveryExpr 0x14b809818 <col:10, col:16> '_Bool' contains-errors     | | | `-NullStmt 0x14b809838 <col:19>     | | `-UnaryOperator 0x14b809880 <line:33:3, col:10> 'int' postfix '++'     | |   `-DeclRefExpr 0x14b809860 <col:3> 'int' lvalue Var 0x15b9282d0 'ndrives' 'int'     | `-RecoveryExpr 0x14b8098b8 <line:34:11, col:12> '_Bool' contains-errors     |-BinaryOperator 0x14b809a58 <line:38:2, col:12> 'int' '='     | |-DeclRefExpr 0x14b809a18 <col:2> 'int' lvalue Var 0x15b9282d0 'ndrives' 'int'     | `-IntegerLiteral 0x14b809a38 <col:12> 'int' 0     `-DoStmt 0x14b809e50 <line:39:2, line:46:17>       |-CompoundStmt 0x14b809e08 <line:39:5, line:46:2>       | |-BinaryOperator 0x14b809ab8 <line:40:3, col:9> 'int' '='       | | |-DeclRefExpr 0x14b809a78 <col:3> 'int' lvalue Var 0x15b928570 'len' 'int'       | | `-IntegerLiteral 0x14b809a98 <col:9> 'int' 0       | |-WhileStmt 0x14b809b48 <line:42:3, col:33>       | | |-RecoveryExpr 0x14b809ad8 <col:10, col:11> '_Bool' contains-errors       | | `-CompoundStmt 0x14b809b30 <col:16, col:33>       | |   `-UnaryOperator 0x14b809b18 <col:25, col:29> 'int' postfix '++'       | |     `-DeclRefExpr 0x14b809af8 <col:25> 'int' lvalue Var 0x15b928570 'len' 'int'       | `-WhileStmt 0x14b809de8 <line:45:3, col:19>       |   |-RecoveryExpr 0x14b809dc0 <col:10, col:16> '_Bool' contains-errors       |   `-NullStmt 0x14b809de0 <col:19>       `-RecoveryExpr 0x14b809e30 <line:46:11, col:12> '_Bool' contains-errors ","20371":"`-FunctionDecl 0x141874ba8  line:1:1 PHP_FUNCTION 'int (int)'   |-ParmVarDecl 0x141874ad8 <col:14> col:14 imagegrabwindow 'int'   `-CompoundStmt 0x141891880 <line:2:1, line:85:1>     |-DeclStmt 0x141874d70 <line:4:2, col:22>     | `-VarDecl 0x141874cd0 <col:2, col:21> col:7 used client_area 'long' cinit     |   `-ImplicitCastExpr 0x141874d58 <col:21> 'long' <IntegralCast>     |     `-IntegerLiteral 0x141874d38 <col:21> 'int' 0     |-DeclStmt 0x141874ea0 <line:7:2, col:19>     | |-VarDecl 0x141874da0 <col:2, col:6> col:6 used Width 'int'     | `-VarDecl 0x141874e20 <col:2, col:13> col:13 used Height 'int'     |-DeclStmt 0x141874f38 <line:13:2, col:21>     | `-VarDecl 0x141874ed0 <col:2, col:7> col:7 lwindow_handle 'long'     |-DeclStmt 0x141875100 <line:14:2, col:53>     | `-TypedefDecl 0x1418750a8 <col:2, <invalid sloc>> col:10 invalid BOOL 'int ((int *))()'     |   `-FunctionProtoType 0x141875030 'int ((int *))()' cdecl     |     |-FunctionNoProtoType 0x141875000 'int ()' cdecl     |     | `-BuiltinType 0x140855710 'int'     |     `-PointerType 0x141874f50 'int *'     |       `-BuiltinType 0x140855710 'int'     |-IfStmt 0x14188f3d0 <line:18:2, line:20:2>     | |-RecoveryExpr 0x14188f3a0 <line:18:6, col:96> '_Bool' contains-errors     | `-CompoundStmt 0x14188f3c0 <col:105, line:20:2>     |-IfStmt 0x14188f680 <line:24:2, line:27:2>     | |-RecoveryExpr 0x14188f4f0 <line:24:6, col:22> '_Bool' contains-errors     | `-CompoundStmt 0x14188f670 <col:25, line:27:2>     |-IfStmt 0x14188fad8 <line:31:2, line:39:2> has_else     | |-ImplicitCastExpr 0x14188f820 <line:31:6> 'long' <LValueToRValue>     | | `-DeclRefExpr 0x14188f800 <col:6> 'long' lvalue Var 0x141874cd0 'client_area' 'long'     | |-CompoundStmt 0x14188f978 <col:19, line:35:2>     | `-CompoundStmt 0x14188fac8 <col:9, line:39:2>     |-BinaryOperator 0x14188fc00 <line:41:2, col:21> 'int' '='     | |-DeclRefExpr 0x14188fb08 <col:2> 'int' lvalue Var 0x141874da0 'Width' 'int'     | `-BinaryOperator 0x14188fbe0 <col:11, col:21> 'int' '*'     |   |-ParenExpr 0x14188fba0 <col:11, col:19> 'int'     |   | `-BinaryOperator 0x14188fb80 <col:12, col:18> 'int' '\/'     |   |   |-ImplicitCastExpr 0x14188fb68 <col:12> 'int' <LValueToRValue>     |   |   | `-DeclRefExpr 0x14188fb28 <col:12> 'int' lvalue Var 0x141874da0 'Width' 'int'     |   |   `-IntegerLiteral 0x14188fb48 <col:18> 'int' 4     |   `-IntegerLiteral 0x14188fbc0 <col:21> 'int' 4     |-IfStmt 0x141890098 <line:49:2, line:51:2>     | |-RecoveryExpr 0x14188fff8 <line:49:7, col:17> '_Bool' contains-errors     | `-CompoundStmt 0x141890080 <col:21, line:51:2>     |   `-GotoStmt 0x141890068 <line:50:3, col:8> 'clean' 0x141890018     |-IfStmt 0x141890270 <line:54:2, line:59:2> has_else     | |-RecoveryExpr 0x1418900b8 <line:54:7> '_Bool' contains-errors     | |-CompoundStmt 0x1418901d8 <col:23, line:56:2>     | `-CompoundStmt 0x141890258 <col:9, line:59:2>     |   `-GotoStmt 0x141890240 <line:58:3, col:8> 'clean' 0x141890018     |-IfStmt 0x1418912a8 <line:64:2, line:72:2>     | |-RecoveryExpr 0x141890558 <line:64:6> '_Bool' contains-errors     | `-CompoundStmt 0x141891288 <col:10, line:72:2>     |   |-DeclStmt 0x141890690 <line:65:3, col:10>     |   | |-VarDecl 0x141890590 <col:3, col:7> col:7 used x 'int'     |   | `-VarDecl 0x141890610 <col:3, col:9> col:9 used y 'int'     |   `-ForStmt 0x141891250 <line:66:3, line:71:3>     |     |-BinaryOperator 0x1418906e8 <line:66:8, col:10> 'int' '='     |     | |-DeclRefExpr 0x1418906a8 <col:8> 'int' lvalue Var 0x141890610 'y' 'int'     |     | `-IntegerLiteral 0x1418906c8 <col:10> 'int' 0     |     |-<<<NULL>>>     |     |-BinaryOperator 0x141890778 <col:13, col:18> 'int' '<='     |     | |-ImplicitCastExpr 0x141890748 <col:13> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x141890708 <col:13> 'int' lvalue Var 0x141890610 'y' 'int'     |     | `-ImplicitCastExpr 0x141890760 <col:18> 'int' <LValueToRValue>     |     |   `-DeclRefExpr 0x141890728 <col:18> 'int' lvalue Var 0x141874e20 'Height' 'int'     |     |-UnaryOperator 0x1418907b8 <col:26, col:27> 'int' postfix '++'     |     | `-DeclRefExpr 0x141890798 <col:26> 'int' lvalue Var 0x141890610 'y' 'int'     |     `-CompoundStmt 0x141891238 <col:31, line:71:3>     |       `-ForStmt 0x141891200 <line:67:4, line:70:4>     |         |-BinaryOperator 0x141890810 <line:67:9, col:11> 'int' '='     |         | |-DeclRefExpr 0x1418907d0 <col:9> 'int' lvalue Var 0x141890590 'x' 'int'     |         | `-IntegerLiteral 0x1418907f0 <col:11> 'int' 0     |         |-<<<NULL>>>     |         |-BinaryOperator 0x1418908a0 <col:14, col:19> 'int' '<='     |         | |-ImplicitCastExpr 0x141890870 <col:14> 'int' <LValueToRValue>     |         | | `-DeclRefExpr 0x141890830 <col:14> 'int' lvalue Var 0x141890590 'x' 'int'     |         | `-ImplicitCastExpr 0x141890888 <col:19> 'int' <LValueToRValue>     |         |   `-DeclRefExpr 0x141890850 <col:19> 'int' lvalue Var 0x141874da0 'Width' 'int'     |         |-UnaryOperator 0x1418908e0 <col:26, col:27> 'int' postfix '++'     |         | `-DeclRefExpr 0x1418908c0 <col:26> 'int' lvalue Var 0x141890590 'x' 'int'     |         `-CompoundStmt 0x1418911c8 <col:31, line:70:4>     |           `-DeclStmt 0x141890ab8 <line:68:5, col:33>     |             `-VarDecl 0x141890910 <col:5, col:9> col:9 used c 'int'     |-LabelStmt 0x1418913d0 <line:74:1, col:6> 'clean'     | `-NullStmt 0x1418913c8 <col:6>     `-IfStmt 0x141891850 <line:80:2, line:84:2> has_else       |-RecoveryExpr 0x141891710 <line:80:6, col:7> '_Bool' contains-errors       |-CompoundStmt 0x141891730 <col:11, line:82:2>       `-CompoundStmt 0x141891840 <col:9, line:84:2> ","20846":"`-FunctionDecl 0x141940c88  line:1:23 proc_mount 'struct dentry *(struct file_system_type *, int, const char *, void *)' static   |-ParmVarDecl 0x1419286e8 <col:34, col:59> col:59 used fs_type 'struct file_system_type *'   |-ParmVarDecl 0x141928768 <line:2:2, col:6> col:6 used flags 'int'   |-ParmVarDecl 0x141940a00 <col:13, col:25> col:25 dev_name 'const char *'   |-ParmVarDecl 0x141940a80 <col:35, col:41> col:41 used data 'void *'   `-CompoundStmt 0x141945648 <line:3:1, line:43:1>     |-DeclStmt 0x141940e18 <line:4:2, col:9>     | `-VarDecl 0x141940db0 <col:2, col:6> col:6 used err 'int'     |-DeclStmt 0x141941018 <line:5:2, col:24>     | |-RecordDecl 0x141940e30 <col:2, col:9> col:9 struct super_block     | `-VarDecl 0x141940f98 <col:2, col:22> col:22 used sb 'struct super_block *'     |-DeclStmt 0x141941218 <line:6:2, col:26>     | |-RecordDecl 0x141941030 <col:2, col:9> col:9 struct pid_namespace     | `-VarDecl 0x141941198 <col:2, col:24> col:24 used ns 'struct pid_namespace *'     |-DeclStmt 0x1419412b0 <line:7:2, col:15>     | `-VarDecl 0x141941248 <col:2, col:8> col:8 used options 'char *'     |-IfStmt 0x141943a88 <line:9:2, line:19:2> has_else     | |-BinaryOperator 0x141941358 <line:9:6, col:14> '<dependent type>' contains-errors '&'     | | |-DeclRefExpr 0x1419412c8 <col:6> 'int' lvalue ParmVar 0x141928768 'flags' 'int'     | | `-RecoveryExpr 0x141941338 <col:14> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x141941540 <col:28, line:12:2>     | | |-BinaryOperator 0x141941488 <line:10:3, col:32> 'struct pid_namespace *' '='     | | | |-DeclRefExpr 0x141941378 <col:3> 'struct pid_namespace *' lvalue Var 0x141941198 'ns' 'struct pid_namespace *'     | | | `-CStyleCastExpr 0x141941460 <col:8, col:32> 'struct pid_namespace *' <BitCast>     | | |   `-ImplicitCastExpr 0x141941448 <col:32> 'void *' <LValueToRValue> part_of_explicit_cast     | | |     `-DeclRefExpr 0x141941398 <col:32> 'void *' lvalue ParmVar 0x141940a80 'data' 'void *'     | | `-BinaryOperator 0x141941520 <line:11:3, col:13> 'char *' contains-errors '='     | |   |-DeclRefExpr 0x1419414a8 <col:3> 'char *' lvalue Var 0x141941248 'options' 'char *'     | |   `-RecoveryExpr 0x141941500 <col:13> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x141943a60 <line:12:9, line:19:2>     |   |-BinaryOperator 0x141941758 <line:13:3, col:34> 'struct pid_namespace *' contains-errors '='     |   | |-DeclRefExpr 0x141941560 <col:3> 'struct pid_namespace *' lvalue Var 0x141941198 'ns' 'struct pid_namespace *'     |   | `-CallExpr 0x141941730 <col:8, col:34> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x141941690 <col:8> 'int ()' Function 0x1419415d8 'task_active_pid_ns' 'int ()'     |   |   `-RecoveryExpr 0x141941710 <col:27> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x1419417e8 <line:14:3, col:13> 'char *' '='     |   | |-DeclRefExpr 0x141941778 <col:3> 'char *' lvalue Var 0x141941248 'options' 'char *'     |   | `-ImplicitCastExpr 0x1419417d0 <col:13> 'char *' <BitCast>     |   |   `-ImplicitCastExpr 0x1419417b8 <col:13> 'void *' <LValueToRValue>     |   |     `-DeclRefExpr 0x141941798 <col:13> 'void *' lvalue ParmVar 0x141940a80 'data' 'void *'     |   `-IfStmt 0x141943a40 <line:17:3, line:18:25>     |     |-UnaryOperator 0x141943830 <line:17:7, col:45> '<dependent type>' contains-errors prefix '!' cannot overflow     |     | `-CallExpr 0x141943800 <col:8, col:45> '<dependent type>' contains-errors     |     |   |-DeclRefExpr 0x1419418e8 <col:8> 'int ()' Function 0x141941830 'ns_capable' 'int ()'     |     |   |-RecoveryExpr 0x141941940 <col:19, col:23> '<dependent type>' contains-errors lvalue     |     |   | `-DeclRefExpr 0x141941908 <col:19> 'struct pid_namespace *' lvalue Var 0x141941198 'ns' 'struct pid_namespace *'     |     |   `-RecoveryExpr 0x1419419c8 <col:32> '<dependent type>' contains-errors lvalue     |     `-ReturnStmt 0x141943a30 <line:18:4, col:25>     |       `-CallExpr 0x141943a08 <col:11, col:25> '<dependent type>' contains-errors     |         |-DeclRefExpr 0x141943928 <col:11> 'int ()' Function 0x141943870 'ERR_PTR' 'int ()'     |         `-UnaryOperator 0x1419439f0 <col:19, col:20> '<dependent type>' contains-errors prefix '-' cannot overflow     |           `-ImplicitCastExpr 0x1419439d8 <col:20> '<dependent type>' contains-errors <LValueToRValue>     |             `-RecoveryExpr 0x1419439b8 <col:20> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x141943d58 <line:21:2, col:63> 'struct super_block *' contains-errors '='     | |-DeclRefExpr 0x141943ab8 <col:2> 'struct super_block *' lvalue Var 0x141940f98 'sb' 'struct super_block *'     | `-CallExpr 0x141943d10 <col:7, col:63> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x141943bb8 <col:7> 'int ()' Function 0x141943b00 'sget' 'int ()'     |   |-DeclRefExpr 0x141943bd8 <col:12> 'struct file_system_type *' lvalue ParmVar 0x1419286e8 'fs_type' 'struct file_system_type *'     |   |-RecoveryExpr 0x141943cd0 <col:21> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x141943cf0 <col:38> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x141943c28 <col:54> 'int' lvalue ParmVar 0x141928768 'flags' 'int'     |   `-DeclRefExpr 0x141943c48 <col:61> 'struct pid_namespace *' lvalue Var 0x141941198 'ns' 'struct pid_namespace *'     |-IfStmt 0x1419440c8 <line:22:2, line:23:21>     | |-CallExpr 0x141943ee8 <line:22:6, col:15> 'int'     | | |-ImplicitCastExpr 0x141943ed0 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x141943e58 <col:6> 'int ()' Function 0x141943da0 'IS_ERR' 'int ()'     | | `-ImplicitCastExpr 0x141943f10 <col:13> 'struct super_block *' <LValueToRValue>     | |   `-DeclRefExpr 0x141943e78 <col:13> 'struct super_block *' lvalue Var 0x141940f98 'sb' 'struct super_block *'     | `-ReturnStmt 0x1419440b8 <line:23:3, col:21>     |   `-ImplicitCastExpr 0x1419440a0 <col:10, col:21> 'struct dentry *' <IntegralToPointer>     |     `-CallExpr 0x141944060 <col:10, col:21> 'int'     |       |-ImplicitCastExpr 0x141944048 <col:10> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x141944008 <col:10> 'int ()' Function 0x141943f50 'ERR_CAST' 'int ()'     |       `-ImplicitCastExpr 0x141944088 <col:19> 'struct super_block *' <LValueToRValue>     |         `-DeclRefExpr 0x141944028 <col:19> 'struct super_block *' lvalue Var 0x141940f98 'sb' 'struct super_block *'     |-IfStmt 0x141944568 <line:25:2, line:28:2>     | |-UnaryOperator 0x1419442a0 <line:25:6, col:37> 'int' prefix '!' cannot overflow     | | `-CallExpr 0x141944240 <col:7, col:37> 'int'     | |   |-ImplicitCastExpr 0x141944228 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x1419441c8 <col:7> 'int ()' Function 0x141944110 'proc_parse_options' 'int ()'     | |   |-ImplicitCastExpr 0x141944270 <col:26> 'char *' <LValueToRValue>     | |   | `-DeclRefExpr 0x1419441e8 <col:26> 'char *' lvalue Var 0x141941248 'options' 'char *'     | |   `-ImplicitCastExpr 0x141944288 <col:35> 'struct pid_namespace *' <LValueToRValue>     | |     `-DeclRefExpr 0x141944208 <col:35> 'struct pid_namespace *' lvalue Var 0x141941198 'ns' 'struct pid_namespace *'     | `-CompoundStmt 0x141944548 <col:40, line:28:2>     |   |-CallExpr 0x1419443f0 <line:26:3, col:29> 'int'     |   | |-ImplicitCastExpr 0x1419443d8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x141944398 <col:3> 'int ()' Function 0x1419442e0 'deactivate_locked_super' 'int ()'     |   | `-ImplicitCastExpr 0x141944418 <col:27> 'struct super_block *' <LValueToRValue>     |   |   `-DeclRefExpr 0x1419443b8 <col:27> 'struct super_block *' lvalue Var 0x141940f98 'sb' 'struct super_block *'     |   `-ReturnStmt 0x141944538 <line:27:3, col:25>     |     `-CallExpr 0x141944510 <col:10, col:25> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x141944430 <col:10> 'int ()' Function 0x141943870 'ERR_PTR' 'int ()'     |       `-UnaryOperator 0x1419444f8 <col:18, col:19> '<dependent type>' contains-errors prefix '-' cannot overflow     |         `-ImplicitCastExpr 0x1419444e0 <col:19> '<dependent type>' contains-errors <LValueToRValue>     |           `-RecoveryExpr 0x1419444c0 <col:19> '<dependent type>' contains-errors lvalue     |-IfStmt 0x141945490 <line:30:2, line:40:2>     | |-UnaryOperator 0x141944600 <line:30:6, col:11> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1419445e8 <col:7, col:11> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x1419445c0 <col:7, col:11> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x141944588 <col:7> 'struct super_block *' lvalue Var 0x141940f98 'sb' 'struct super_block *'     | `-CompoundStmt 0x141945470 <col:19, line:40:2>     |   |-BinaryOperator 0x1419447b0 <line:31:3, col:27> 'int' '='     |   | |-DeclRefExpr 0x141944618 <col:3> 'int' lvalue Var 0x141940db0 'err' 'int'     |   | `-CallExpr 0x141944770 <col:9, col:27> 'int'     |   |   |-ImplicitCastExpr 0x141944758 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x141944718 <col:9> 'int ()' Function 0x141944660 'proc_fill_super' 'int ()'     |   |   `-ImplicitCastExpr 0x141944798 <col:25> 'struct super_block *' <LValueToRValue>     |   |     `-DeclRefExpr 0x141944738 <col:25> 'struct super_block *' lvalue Var 0x141940f98 'sb' 'struct super_block *'     |   `-IfStmt 0x141945390 <line:32:3, line:35:3>     |     |-ImplicitCastExpr 0x141945200 <line:32:7> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x1419447d0 <col:7> 'int' lvalue Var 0x141940db0 'err' 'int'     |     `-CompoundStmt 0x141945370 <col:12, line:35:3>     |       |-CallExpr 0x141945270 <line:33:4, col:30> 'int'     |       | |-ImplicitCastExpr 0x141945258 <col:4> 'int (*)()' <FunctionToPointerDecay>     |       | | `-DeclRefExpr 0x141945218 <col:4> 'int ()' Function 0x1419442e0 'deactivate_locked_super' 'int ()'     |       | `-ImplicitCastExpr 0x141945298 <col:28> 'struct super_block *' <LValueToRValue>     |       |   `-DeclRefExpr 0x141945238 <col:28> 'struct super_block *' lvalue Var 0x141940f98 'sb' 'struct super_block *'     |       `-ReturnStmt 0x141945360 <line:34:4, col:22>     |         `-ImplicitCastExpr 0x141945348 <col:11, col:22> 'struct dentry *' <IntegralToPointer>     |           `-CallExpr 0x141945308 <col:11, col:22> 'int'     |             |-ImplicitCastExpr 0x1419452f0 <col:11> 'int (*)()' <FunctionToPointerDecay>     |             | `-DeclRefExpr 0x1419452b0 <col:11> 'int ()' Function 0x141943870 'ERR_PTR' 'int ()'     |             `-ImplicitCastExpr 0x141945330 <col:19> 'int' <LValueToRValue>     |               `-DeclRefExpr 0x1419452d0 <col:19> 'int' lvalue Var 0x141940db0 'err' 'int'     `-ReturnStmt 0x141945638 <line:42:2, col:24>       `-CallExpr 0x141945610 <col:9, col:24> '<dependent type>' contains-errors         |-DeclRefExpr 0x141945590 <col:9> 'int ()' Function 0x1419454d8 'dget' 'int ()'         `-RecoveryExpr 0x1419455e8 <col:14, col:18> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x1419455b0 <col:14> 'struct super_block *' lvalue Var 0x141940f98 'sb' 'struct super_block *' ","20985":"`-FunctionDecl 0x12380dfa8  line:1:12 invalid decode_dds1 'int (int *, int *, int, int)' static   |-ParmVarDecl 0x12380dd28 <col:24, col:40> col:40 invalid gb 'int *'   |-ParmVarDecl 0x12380dda8 <col:44, col:53> col:53 referenced invalid frame 'int *'   |-ParmVarDecl 0x12380de28 <col:60, col:64> col:64 used width 'int'   |-ParmVarDecl 0x12380dea8 <col:71, col:75> col:75 used height 'int'   `-CompoundStmt 0x123124350 <line:2:1, line:48:1>     |-DeclStmt 0x12380e110 <line:3:5, col:39>     | `-VarDecl 0x12380e088 <col:5, col:20> col:20 invalid frame_start 'const int *'     |-DeclStmt 0x12380e278 <line:4:5, col:56>     | `-VarDecl 0x12380e140 <col:5, col:20> col:20 invalid frame_end 'const int *'     |-DeclStmt 0x12380e3e8 <line:5:5, col:35>     | |-VarDecl 0x12380e2a8 <col:5, col:16> col:9 used mask 'int' cinit     | | `-IntegerLiteral 0x12380e310 <col:16> 'int' 65536     | `-VarDecl 0x12380e348 <col:5, col:34> col:25 used bitbuf 'int' cinit     |   `-IntegerLiteral 0x12380e3b0 <col:34> 'int' 0     |-DeclStmt 0x1238276b0 <line:6:5, col:38>     | |-VarDecl 0x123827418 <col:5, col:9> col:9 used i 'int'     | |-VarDecl 0x123827498 <col:5, col:12> col:12 used v 'int'     | |-VarDecl 0x123827518 <col:5, col:15> col:15 used offset 'int'     | |-VarDecl 0x123827598 <col:5, col:23> col:23 used count 'int'     | `-VarDecl 0x123827618 <col:5, col:30> col:30 used segments 'int'     |-BinaryOperator 0x1238278a8 <line:8:5, col:39> 'int' contains-errors '='     | |-DeclRefExpr 0x1238276c8 <col:5> 'int' lvalue Var 0x123827618 'segments' 'int'     | `-CallExpr 0x123827880 <col:16, col:39> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x123827840 <col:16> 'int ()' Function 0x123827788 'bytestream2_get_le16' 'int ()'     |   `-RecoveryExpr 0x123827860 <col:37> '<dependent type>' contains-errors lvalue     |-WhileStmt 0x123124300 <line:9:5, line:45:5>     | |-UnaryOperator 0x1238278e8 <line:9:12, col:20> 'int' postfix '--'     | | `-DeclRefExpr 0x1238278c8 <col:12> 'int' lvalue Var 0x123827618 'segments' 'int'     | `-CompoundStmt 0x1231242d0 <col:24, line:45:5>     |   |-IfStmt 0x123827ad0 <line:10:9, line:11:20>     |   | |-BinaryOperator 0x123827a68 <line:10:13, col:46> 'int' contains-errors '<'     |   | | |-CallExpr 0x123827a20 <col:13, col:42> '<dependent type>' contains-errors     |   | | | |-DeclRefExpr 0x1238279e0 <col:13> 'int ()' Function 0x123827928 'bytestream2_get_bytes_left' 'int ()'     |   | | | `-RecoveryExpr 0x123827a00 <col:40> '<dependent type>' contains-errors lvalue     |   | | `-IntegerLiteral 0x123827a48 <col:46> 'int' 2     |   | `-ReturnStmt 0x123827ac0 <line:11:13, col:20>     |   |   `-RecoveryExpr 0x123827aa0 <col:20> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x123827d70 <line:12:9, line:15:9>     |   | |-BinaryOperator 0x123827b48 <line:12:13, col:21> 'int' '=='     |   | | |-ImplicitCastExpr 0x123827b30 <col:13> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x123827af0 <col:13> 'int' lvalue Var 0x12380e2a8 'mask' 'int'     |   | | `-IntegerLiteral 0x123827b10 <col:21> 'int' 65536     |   | `-CompoundStmt 0x123827d50 <col:30, line:15:9>     |   |   |-BinaryOperator 0x123827cd0 <line:13:13, col:46> 'int' contains-errors '='     |   |   | |-DeclRefExpr 0x123827b68 <col:13> 'int' lvalue Var 0x12380e348 'bitbuf' 'int'     |   |   | `-CallExpr 0x123827ca8 <col:22, col:46> '<dependent type>' contains-errors     |   |   |   |-DeclRefExpr 0x123827c68 <col:22> 'int ()' Function 0x123827bb0 'bytestream2_get_le16u' 'int ()'     |   |   |   `-RecoveryExpr 0x123827c88 <col:44> '<dependent type>' contains-errors lvalue     |   |   `-BinaryOperator 0x123827d30 <line:14:13, col:20> 'int' '='     |   |     |-DeclRefExpr 0x123827cf0 <col:13> 'int' lvalue Var 0x12380e2a8 'mask' 'int'     |   |     `-IntegerLiteral 0x123827d10 <col:20> 'int' 1     |   |-IfStmt 0x123124218 <line:17:9, line:43:9> has_else     |   | |-BinaryOperator 0x123827e00 <line:17:13, col:22> 'int' '&'     |   | | |-ImplicitCastExpr 0x123827dd0 <col:13> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x123827d90 <col:13> 'int' lvalue Var 0x12380e348 'bitbuf' 'int'     |   | | `-ImplicitCastExpr 0x123827de8 <col:22> 'int' <LValueToRValue>     |   | |   `-DeclRefExpr 0x123827db0 <col:22> 'int' lvalue Var 0x12380e2a8 'mask' 'int'     |   | |-CompoundStmt 0x123123398 <col:28, line:29:9>     |   | | |-BinaryOperator 0x123827ea8 <line:18:13, col:40> 'int' contains-errors '='     |   | | | |-DeclRefExpr 0x123827e20 <col:13> 'int' lvalue Var 0x123827498 'v' 'int'     |   | | | `-CallExpr 0x123827e80 <col:17, col:40> '<dependent type>' contains-errors     |   | | |   |-DeclRefExpr 0x123827e40 <col:17> 'int ()' Function 0x123827788 'bytestream2_get_le16' 'int ()'     |   | | |   `-RecoveryExpr 0x123827e60 <col:38> '<dependent type>' contains-errors lvalue     |   | | |-BinaryOperator 0x123827fc0 <line:19:13, col:38> 'int' '='     |   | | | |-DeclRefExpr 0x123827ec8 <col:13> 'int' lvalue Var 0x123827518 'offset' 'int'     |   | | | `-BinaryOperator 0x123827fa0 <col:22, col:38> 'int' '<<'     |   | | |   |-ParenExpr 0x123827f60 <col:22, col:33> 'int'     |   | | |   | `-BinaryOperator 0x123827f40 <col:23, col:27> 'int' '&'     |   | | |   |   |-ImplicitCastExpr 0x123827f28 <col:23> 'int' <LValueToRValue>     |   | | |   |   | `-DeclRefExpr 0x123827ee8 <col:23> 'int' lvalue Var 0x123827498 'v' 'int'     |   | | |   |   `-IntegerLiteral 0x123827f08 <col:27> 'int' 8191     |   | | |   `-IntegerLiteral 0x123827f80 <col:38> 'int' 2     |   | | |-BinaryOperator 0x123828138 <line:20:13, col:40> 'int' '='     |   | | | |-DeclRefExpr 0x123827fe0 <col:13> 'int' lvalue Var 0x123827598 'count' 'int'     |   | | | `-BinaryOperator 0x123828118 <col:21, col:40> 'int' '<<'     |   | | |   |-ParenExpr 0x1238280d8 <col:21, col:35> 'int'     |   | | |   | `-BinaryOperator 0x1238280b8 <col:22, col:34> 'int' '+'     |   | | |   |   |-ParenExpr 0x123828078 <col:22, col:30> 'int'     |   | | |   |   | `-BinaryOperator 0x123828058 <col:23, col:28> 'int' '>>'     |   | | |   |   |   |-ImplicitCastExpr 0x123828040 <col:23> 'int' <LValueToRValue>     |   | | |   |   |   | `-DeclRefExpr 0x123828000 <col:23> 'int' lvalue Var 0x123827498 'v' 'int'     |   | | |   |   |   `-IntegerLiteral 0x123828020 <col:28> 'int' 13     |   | | |   |   `-IntegerLiteral 0x123828098 <col:34> 'int' 2     |   | | |   `-IntegerLiteral 0x1238280f8 <col:40> 'int' 1     |   | | |-IfStmt 0x1238283b0 <line:21:13, line:22:24>     |   | | | |-BinaryOperator 0x123828348 <line:21:17, col:79> 'int' contains-errors '||'     |   | | | | |-BinaryOperator 0x1238281d8 <col:17, col:39> 'int' contains-errors '<'     |   | | | | | |-BinaryOperator 0x123828198 <col:17, col:25> '<dependent type>' contains-errors '-'     |   | | | | | | |-RecoveryExpr 0x123828158 <col:17> '<dependent type>' contains-errors lvalue     |   | | | | | | `-RecoveryExpr 0x123828178 <col:25> '<dependent type>' contains-errors lvalue     |   | | | | | `-DeclRefExpr 0x1238281b8 <col:39> 'int' lvalue Var 0x123827518 'offset' 'int'     |   | | | | `-BinaryOperator 0x123828328 <col:49, col:79> 'int' contains-errors '<'     |   | | | |   |-BinaryOperator 0x123828238 <col:49, col:61> '<dependent type>' contains-errors '-'     |   | | | |   | |-RecoveryExpr 0x1238281f8 <col:49> '<dependent type>' contains-errors lvalue     |   | | | |   | `-RecoveryExpr 0x123828218 <col:61> '<dependent type>' contains-errors lvalue     |   | | | |   `-BinaryOperator 0x123828308 <col:69, col:79> 'int' '+'     |   | | | |     |-BinaryOperator 0x1238282b0 <col:69, col:75> 'int' '*'     |   | | | |     | |-ImplicitCastExpr 0x123828298 <col:69> 'int' <LValueToRValue>     |   | | | |     | | `-DeclRefExpr 0x123828258 <col:69> 'int' lvalue Var 0x123827598 'count' 'int'     |   | | | |     | `-IntegerLiteral 0x123828278 <col:75> 'int' 2     |   | | | |     `-ImplicitCastExpr 0x1238282f0 <col:79> 'int' <LValueToRValue>     |   | | | |       `-DeclRefExpr 0x1238282d0 <col:79> 'int' lvalue ParmVar 0x12380de28 'width' 'int'     |   | | | `-ReturnStmt 0x1238283a0 <line:22:17, col:24>     |   | | |   `-RecoveryExpr 0x123828380 <col:24> '<dependent type>' contains-errors lvalue     |   | | `-ForStmt 0x123123360 <line:23:13, line:28:13>     |   | |   |-BinaryOperator 0x123122e20 <line:23:18, col:22> 'int' '='     |   | |   | |-DeclRefExpr 0x1238283d0 <col:18> 'int' lvalue Var 0x123827418 'i' 'int'     |   | |   | `-IntegerLiteral 0x123122e00 <col:22> 'int' 0     |   | |   |-<<<NULL>>>     |   | |   |-BinaryOperator 0x123122eb0 <col:25, col:29> 'int' '<'     |   | |   | |-ImplicitCastExpr 0x123122e80 <col:25> 'int' <LValueToRValue>     |   | |   | | `-DeclRefExpr 0x123122e40 <col:25> 'int' lvalue Var 0x123827418 'i' 'int'     |   | |   | `-ImplicitCastExpr 0x123122e98 <col:29> 'int' <LValueToRValue>     |   | |   |   `-DeclRefExpr 0x123122e60 <col:29> 'int' lvalue Var 0x123827598 'count' 'int'     |   | |   |-UnaryOperator 0x123122ef0 <col:36, col:37> 'int' postfix '++'     |   | |   | `-DeclRefExpr 0x123122ed0 <col:36> 'int' lvalue Var 0x123827418 'i' 'int'     |   | |   `-CompoundStmt 0x123123340 <col:41, line:28:13>     |   | |     |-BinaryOperator 0x123123288 <line:24:17, line:25:64> '<dependent type>' contains-errors '='     |   | |     | |-ArraySubscriptExpr 0x123122f88 <line:24:17, col:24> '<dependent type>' contains-errors lvalue     |   | |     | | |-ImplicitCastExpr 0x123122f70 <col:17> '<dependent type>' contains-errors <LValueToRValue>     |   | |     | | | `-RecoveryExpr 0x123122f28 <col:17> '<dependent type>' contains-errors lvalue     |   | |     | | |   `-DeclRefExpr 0x123122f08 <col:17> 'int *' lvalue ParmVar 0x12380dda8 'frame' 'int *'     |   | |     | | `-IntegerLiteral 0x123122f50 <col:23> 'int' 0     |   | |     | `-BinaryOperator 0x123123268 <col:28, line:25:64> '<dependent type>' contains-errors '='     |   | |     |   |-ArraySubscriptExpr 0x123123000 <line:24:28, col:35> '<dependent type>' contains-errors lvalue     |   | |     |   | |-ImplicitCastExpr 0x123122fe8 <col:28> '<dependent type>' contains-errors <LValueToRValue>     |   | |     |   | | `-RecoveryExpr 0x123122fa8 <col:28> '<dependent type>' contains-errors lvalue     |   | |     |   | `-IntegerLiteral 0x123122fc8 <col:34> 'int' 1     |   | |     |   `-BinaryOperator 0x123123248 <line:25:17, col:64> '<dependent type>' contains-errors '='     |   | |     |     |-ArraySubscriptExpr 0x123123090 <col:17, col:28> '<dependent type>' contains-errors lvalue     |   | |     |     | |-ImplicitCastExpr 0x123123060 <col:17> '<dependent type>' contains-errors <LValueToRValue>     |   | |     |     | | `-RecoveryExpr 0x123123020 <col:17> '<dependent type>' contains-errors lvalue     |   | |     |     | `-ImplicitCastExpr 0x123123078 <col:23> 'int' <LValueToRValue>     |   | |     |     |   `-DeclRefExpr 0x123123040 <col:23> 'int' lvalue ParmVar 0x12380de28 'width' 'int'     |   | |     |     `-BinaryOperator 0x123123228 <col:32, col:64> '<dependent type>' contains-errors '='     |   | |     |       |-ArraySubscriptExpr 0x123123160 <col:32, col:47> '<dependent type>' contains-errors lvalue     |   | |     |       | |-ImplicitCastExpr 0x123123148 <col:32> '<dependent type>' contains-errors <LValueToRValue>     |   | |     |       | | `-RecoveryExpr 0x1231230b0 <col:32> '<dependent type>' contains-errors lvalue     |   | |     |       | `-BinaryOperator 0x123123128 <col:38, col:46> 'int' '+'     |   | |     |       |   |-ImplicitCastExpr 0x123123110 <col:38> 'int' <LValueToRValue>     |   | |     |       |   | `-DeclRefExpr 0x1231230d0 <col:38> 'int' lvalue ParmVar 0x12380de28 'width' 'int'     |   | |     |       |   `-IntegerLiteral 0x1231230f0 <col:46> 'int' 1     |   | |     |       `-ArraySubscriptExpr 0x123123208 <col:51, col:64> '<dependent type>' contains-errors lvalue     |   | |     |         |-ImplicitCastExpr 0x1231231f0 <col:51> '<dependent type>' contains-errors <LValueToRValue>     |   | |     |         | `-RecoveryExpr 0x123123180 <col:51> '<dependent type>' contains-errors lvalue     |   | |     |         `-UnaryOperator 0x1231231d8 <col:57, col:58> 'int' prefix '-'     |   | |     |           `-ImplicitCastExpr 0x1231231c0 <col:58> 'int' <LValueToRValue>     |   | |     |             `-DeclRefExpr 0x1231231a0 <col:58> 'int' lvalue Var 0x123827518 'offset' 'int'     |   | |     `-CompoundAssignOperator 0x123123310 <line:27:17, col:26> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   | |       |-RecoveryExpr 0x1231232c8 <col:17> '<dependent type>' contains-errors lvalue     |   | |       | `-DeclRefExpr 0x1231232a8 <col:17> 'int *' lvalue ParmVar 0x12380dda8 'frame' 'int *'     |   | |       `-IntegerLiteral 0x1231232f0 <col:26> 'int' 2     |   | `-IfStmt 0x1231241e8 <line:29:16, line:43:9> has_else     |   |   |-BinaryOperator 0x1231234a0 <line:29:20, col:39> 'int' '&'     |   |   | |-ImplicitCastExpr 0x123123488 <col:20> 'int' <LValueToRValue>     |   |   | | `-DeclRefExpr 0x1231233d0 <col:20> 'int' lvalue Var 0x12380e348 'bitbuf' 'int'     |   |   | `-ParenExpr 0x123123468 <col:29, col:39> 'int'     |   |   |   `-BinaryOperator 0x123123448 <col:30, col:38> 'int' '<<'     |   |   |     |-ImplicitCastExpr 0x123123430 <col:30> 'int' <LValueToRValue>     |   |   |     | `-DeclRefExpr 0x1231233f0 <col:30> 'int' lvalue Var 0x12380e2a8 'mask' 'int'     |   |   |     `-IntegerLiteral 0x123123410 <col:38> 'int' 1     |   |   |-CompoundStmt 0x123123748 <col:42, line:34:9>     |   |   | |-BinaryOperator 0x123123588 <line:30:13, col:42> 'int' contains-errors '='     |   |   | | |-DeclRefExpr 0x1231234c0 <col:13> 'int' lvalue Var 0x123827498 'v' 'int'     |   |   | | `-BinaryOperator 0x123123568 <col:17, col:42> '<dependent type>' contains-errors '*'     |   |   | |   |-CallExpr 0x123123520 <col:17, col:40> '<dependent type>' contains-errors     |   |   | |   | |-DeclRefExpr 0x1231234e0 <col:17> 'int ()' Function 0x123827788 'bytestream2_get_le16' 'int ()'     |   |   | |   | `-RecoveryExpr 0x123123500 <col:38> '<dependent type>' contains-errors lvalue     |   |   | |   `-IntegerLiteral 0x123123548 <col:42> 'int' 2     |   |   | |-IfStmt 0x123123690 <line:31:13, line:32:24>     |   |   | | |-BinaryOperator 0x123123628 <line:31:17, col:37> 'int' contains-errors '<'     |   |   | | | |-BinaryOperator 0x1231235e8 <col:17, col:25> '<dependent type>' contains-errors '-'     |   |   | | | | |-RecoveryExpr 0x1231235a8 <col:17> '<dependent type>' contains-errors lvalue     |   |   | | | | `-RecoveryExpr 0x1231235c8 <col:25> '<dependent type>' contains-errors lvalue     |   |   | | | `-DeclRefExpr 0x123123608 <col:37> 'int' lvalue Var 0x123827498 'v' 'int'     |   |   | | `-ReturnStmt 0x123123680 <line:32:17, col:24>     |   |   | |   `-RecoveryExpr 0x123123660 <col:24> '<dependent type>' contains-errors lvalue     |   |   | `-CompoundAssignOperator 0x123123718 <line:33:13, col:22> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |   |   |-RecoveryExpr 0x1231236d0 <col:13> '<dependent type>' contains-errors lvalue     |   |   |   | `-DeclRefExpr 0x1231236b0 <col:13> 'int *' lvalue ParmVar 0x12380dda8 'frame' 'int *'     |   |   |   `-DeclRefExpr 0x1231236f8 <col:22> 'int' lvalue Var 0x123827498 'v' 'int'     |   |   `-CompoundStmt 0x1231241b0 <line:34:16, line:43:9>     |   |     |-IfStmt 0x1231238b0 <line:35:13, line:36:24>     |   |     | |-BinaryOperator 0x123123848 <line:35:17, col:45> 'int' contains-errors '<'     |   |     | | |-BinaryOperator 0x1231237b0 <col:17, col:29> '<dependent type>' contains-errors '-'     |   |     | | | |-RecoveryExpr 0x123123770 <col:17> '<dependent type>' contains-errors lvalue     |   |     | | | `-RecoveryExpr 0x123123790 <col:29> '<dependent type>' contains-errors lvalue     |   |     | | `-BinaryOperator 0x123123828 <col:37, col:45> 'int' '+'     |   |     | |   |-ImplicitCastExpr 0x123123810 <col:37> 'int' <LValueToRValue>     |   |     | |   | `-DeclRefExpr 0x1231237d0 <col:37> 'int' lvalue ParmVar 0x12380de28 'width' 'int'     |   |     | |   `-IntegerLiteral 0x1231237f0 <col:45> 'int' 3     |   |     | `-ReturnStmt 0x1231238a0 <line:36:17, col:24>     |   |     |   `-RecoveryExpr 0x123123880 <col:24> '<dependent type>' contains-errors lvalue     |   |     |-BinaryOperator 0x123123cf0 <line:37:13, line:38:71> '<dependent type>' contains-errors '='     |   |     | |-ArraySubscriptExpr 0x123123950 <line:37:13, col:20> '<dependent type>' contains-errors lvalue     |   |     | | |-ImplicitCastExpr 0x123123938 <col:13> '<dependent type>' contains-errors <LValueToRValue>     |   |     | | | `-RecoveryExpr 0x1231238f0 <col:13> '<dependent type>' contains-errors lvalue     |   |     | | |   `-DeclRefExpr 0x1231238d0 <col:13> 'int *' lvalue ParmVar 0x12380dda8 'frame' 'int *'     |   |     | | `-IntegerLiteral 0x123123918 <col:19> 'int' 0     |   |     | `-BinaryOperator 0x123123cd0 <col:24, line:38:71> '<dependent type>' contains-errors '='     |   |     |   |-ArraySubscriptExpr 0x1231239c8 <line:37:24, col:31> '<dependent type>' contains-errors lvalue     |   |     |   | |-ImplicitCastExpr 0x1231239b0 <col:24> '<dependent type>' contains-errors <LValueToRValue>     |   |     |   | | `-RecoveryExpr 0x123123970 <col:24> '<dependent type>' contains-errors lvalue     |   |     |   | `-IntegerLiteral 0x123123990 <col:30> 'int' 1     |   |     |   `-BinaryOperator 0x123123cb0 <line:38:13, col:71> '<dependent type>' contains-errors '='     |   |     |     |-ArraySubscriptExpr 0x123123a58 <col:13, col:24> '<dependent type>' contains-errors lvalue     |   |     |     | |-ImplicitCastExpr 0x123123a28 <col:13> '<dependent type>' contains-errors <LValueToRValue>     |   |     |     | | `-RecoveryExpr 0x1231239e8 <col:13> '<dependent type>' contains-errors lvalue     |   |     |     | `-ImplicitCastExpr 0x123123a40 <col:19> 'int' <LValueToRValue>     |   |     |     |   `-DeclRefExpr 0x123123a08 <col:19> 'int' lvalue ParmVar 0x12380de28 'width' 'int'     |   |     |     `-BinaryOperator 0x123123c90 <col:28, col:71> '<dependent type>' contains-errors '='     |   |     |       |-ArraySubscriptExpr 0x123123b28 <col:28, col:43> '<dependent type>' contains-errors lvalue     |   |     |       | |-ImplicitCastExpr 0x123123b10 <col:28> '<dependent type>' contains-errors <LValueToRValue>     |   |     |       | | `-RecoveryExpr 0x123123a78 <col:28> '<dependent type>' contains-errors lvalue     |   |     |       | `-BinaryOperator 0x123123af0 <col:34, col:42> 'int' '+'     |   |     |       |   |-ImplicitCastExpr 0x123123ad8 <col:34> 'int' <LValueToRValue>     |   |     |       |   | `-DeclRefExpr 0x123123a98 <col:34> 'int' lvalue ParmVar 0x12380de28 'width' 'int'     |   |     |       |   `-IntegerLiteral 0x123123ab8 <col:42> 'int' 1     |   |     |       `-CallExpr 0x123123c68 <col:48, col:71> '<dependent type>' contains-errors     |   |     |         |-DeclRefExpr 0x123123c28 <col:48> 'int ()' Function 0x123123b70 'bytestream2_get_byte' 'int ()'     |   |     |         `-RecoveryExpr 0x123123c48 <col:69> '<dependent type>' contains-errors lvalue     |   |     |-CompoundAssignOperator 0x123123d78 <line:39:13, col:22> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |     | |-RecoveryExpr 0x123123d30 <col:13> '<dependent type>' contains-errors lvalue     |   |     | | `-DeclRefExpr 0x123123d10 <col:13> 'int *' lvalue ParmVar 0x12380dda8 'frame' 'int *'     |   |     | `-IntegerLiteral 0x123123d58 <col:22> 'int' 2     |   |     |-BinaryOperator 0x1231240f8 <line:40:13, line:41:71> '<dependent type>' contains-errors '='     |   |     | |-ArraySubscriptExpr 0x123123e38 <line:40:13, col:20> '<dependent type>' contains-errors lvalue     |   |     | | |-ImplicitCastExpr 0x123123e20 <col:13> '<dependent type>' contains-errors <LValueToRValue>     |   |     | | | `-RecoveryExpr 0x123123dc8 <col:13> '<dependent type>' contains-errors lvalue     |   |     | | |   `-DeclRefExpr 0x123123da8 <col:13> 'int *' lvalue ParmVar 0x12380dda8 'frame' 'int *'     |   |     | | `-IntegerLiteral 0x123123e00 <col:19> 'int' 0     |   |     | `-BinaryOperator 0x1231240d8 <col:24, line:41:71> '<dependent type>' contains-errors '='     |   |     |   |-ArraySubscriptExpr 0x123123eb0 <line:40:24, col:31> '<dependent type>' contains-errors lvalue     |   |     |   | |-ImplicitCastExpr 0x123123e98 <col:24> '<dependent type>' contains-errors <LValueToRValue>     |   |     |   | | `-RecoveryExpr 0x123123e58 <col:24> '<dependent type>' contains-errors lvalue     |   |     |   | `-IntegerLiteral 0x123123e78 <col:30> 'int' 1     |   |     |   `-BinaryOperator 0x1231240b8 <line:41:13, col:71> '<dependent type>' contains-errors '='     |   |     |     |-ArraySubscriptExpr 0x123123f40 <col:13, col:24> '<dependent type>' contains-errors lvalue     |   |     |     | |-ImplicitCastExpr 0x123123f10 <col:13> '<dependent type>' contains-errors <LValueToRValue>     |   |     |     | | `-RecoveryExpr 0x123123ed0 <col:13> '<dependent type>' contains-errors lvalue     |   |     |     | `-ImplicitCastExpr 0x123123f28 <col:19> 'int' <LValueToRValue>     |   |     |     |   `-DeclRefExpr 0x123123ef0 <col:19> 'int' lvalue ParmVar 0x12380de28 'width' 'int'     |   |     |     `-BinaryOperator 0x123124098 <col:28, col:71> '<dependent type>' contains-errors '='     |   |     |       |-ArraySubscriptExpr 0x123124010 <col:28, col:43> '<dependent type>' contains-errors lvalue     |   |     |       | |-ImplicitCastExpr 0x123123ff8 <col:28> '<dependent type>' contains-errors <LValueToRValue>     |   |     |       | | `-RecoveryExpr 0x123123f60 <col:28> '<dependent type>' contains-errors lvalue     |   |     |       | `-BinaryOperator 0x123123fd8 <col:34, col:42> 'int' '+'     |   |     |       |   |-ImplicitCastExpr 0x123123fc0 <col:34> 'int' <LValueToRValue>     |   |     |       |   | `-DeclRefExpr 0x123123f80 <col:34> 'int' lvalue ParmVar 0x12380de28 'width' 'int'     |   |     |       |   `-IntegerLiteral 0x123123fa0 <col:42> 'int' 1     |   |     |       `-CallExpr 0x123124070 <col:48, col:71> '<dependent type>' contains-errors     |   |     |         |-DeclRefExpr 0x123124030 <col:48> 'int ()' Function 0x123123b70 'bytestream2_get_byte' 'int ()'     |   |     |         `-RecoveryExpr 0x123124050 <col:69> '<dependent type>' contains-errors lvalue     |   |     `-CompoundAssignOperator 0x123124180 <line:42:13, col:22> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |       |-RecoveryExpr 0x123124138 <col:13> '<dependent type>' contains-errors lvalue     |   |       | `-DeclRefExpr 0x123124118 <col:13> 'int *' lvalue ParmVar 0x12380dda8 'frame' 'int *'     |   |       `-IntegerLiteral 0x123124160 <col:22> 'int' 2     |   `-CompoundAssignOperator 0x1231242a0 <line:44:9, col:18> 'int' '<<=' ComputeLHSTy='int' ComputeResultTy='int'     |     |-DeclRefExpr 0x123124248 <col:9> 'int' lvalue Var 0x12380e2a8 'mask' 'int'     |     `-IntegerLiteral 0x123124268 <col:18> 'int' 2     `-ReturnStmt 0x123124340 <line:47:5, col:12>       `-IntegerLiteral 0x123124320 <col:12> 'int' 0 ","20512":"`-FunctionDecl 0x14b008408  line:1:5 invalid dccp_sendmsg 'int (struct sock *, struct msghdr *, int)'   |-ParmVarDecl 0x14a928648 <col:18, col:31> col:31 used sk 'struct sock *'   |-ParmVarDecl 0x14b008228 <col:35, col:50> col:50 used msg 'struct msghdr *'   |-ParmVarDecl 0x14b0082c0 <col:55, col:62> col:62 invalid len 'int'   `-CompoundStmt 0x14b00ea30 <line:2:1, line:56:1>     |-DeclStmt 0x14b0088f8 <line:3:2, col:42>     | |-RecordDecl 0x14b0084c8 <col:8, col:15> col:15 struct dccp_sock     | `-VarDecl 0x14b008638 <col:2, col:41> col:26 used dp 'const struct dccp_sock *' cinit     |   `-ImplicitCastExpr 0x14b0088c8 <col:31, col:41> 'const struct dccp_sock *' <IntegralToPointer>     |     `-CallExpr 0x14b008888 <col:31, col:41> 'int'     |       |-ImplicitCastExpr 0x14b008870 <col:31> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14b008800 <col:31> 'int ()' Function 0x14b008748 'dccp_sk' 'int ()'     |       `-ImplicitCastExpr 0x14b0088b0 <col:39> 'struct sock *' <LValueToRValue>     |         `-DeclRefExpr 0x14b008820 <col:39> 'struct sock *' lvalue ParmVar 0x14a928648 'sk' 'struct sock *'     |-DeclStmt 0x14b0089f0 <line:4:2, col:34>     | `-VarDecl 0x14b008928 <col:2, col:25> col:12 used flags 'const int' cinit     |   `-RecoveryExpr 0x14b0089c8 <col:20, col:25> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14b008990 <col:20> 'struct msghdr *' lvalue ParmVar 0x14b008228 'msg' 'struct msghdr *'     |-DeclStmt 0x14b008b20 <line:5:2, col:42>     | `-VarDecl 0x14b008a20 <col:2, col:30> col:12 used noblock 'const int' cinit     |   `-BinaryOperator 0x14b008b00 <col:22, col:30> '<dependent type>' contains-errors '&'     |     |-DeclRefExpr 0x14b008a88 <col:22> 'const int' contains-errors lvalue Var 0x14b008928 'flags' 'const int'     |     `-RecoveryExpr 0x14b008ae0 <col:30> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x14b008d28 <line:6:2, col:21>     | |-RecordDecl 0x14b008b38 <col:2, col:9> col:9 struct sk_buff     | `-VarDecl 0x14b008ca8 <col:2, col:18> col:18 used skb 'struct sk_buff *'     |-DeclStmt 0x14b008e58 <line:7:2, col:14>     | |-VarDecl 0x14b008d58 <col:2, col:6> col:6 used rc 'int'     | `-VarDecl 0x14b008dd8 <col:2, col:10> col:10 used size 'int'     |-DeclStmt 0x14b008ef0 <line:8:2, col:12>     | `-VarDecl 0x14b008e88 <col:2, col:7> col:7 used timeo 'long'     |-CallExpr 0x14b009048 <line:10:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b008fe8 <col:2> 'int ()' Function 0x14b008f30 'trace_dccp_probe' 'int ()'     | |-DeclRefExpr 0x14b009008 <col:19> 'struct sock *' lvalue ParmVar 0x14a928648 'sk' 'struct sock *'     | `-RecoveryExpr 0x14b009028 <col:23> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14b0091c0 <line:12:2, line:13:11>     | |-BinaryOperator 0x14b0090f8 <line:12:6, col:16> 'int' contains-errors '>'     | | |-RecoveryExpr 0x14b009078 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14b0090d0 <col:12, col:16> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14b009098 <col:12> 'const struct dccp_sock *' lvalue Var 0x14b008638 'dp' 'const struct dccp_sock *'     | `-ReturnStmt 0x14b0091b0 <line:13:3, col:11>     |   `-UnaryOperator 0x14b009198 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14b009180 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14b009160 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14b00b538 <line:15:2, col:14> 'int'     | |-ImplicitCastExpr 0x14b00b520 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14b00b4e0 <col:2> 'int ()' Function 0x14b00b428 'lock_sock' 'int ()'     | `-ImplicitCastExpr 0x14b00b560 <col:12> 'struct sock *' <LValueToRValue>     |   `-DeclRefExpr 0x14b00b500 <col:12> 'struct sock *' lvalue ParmVar 0x14a928648 'sk' 'struct sock *'     |-IfStmt 0x14b00b870 <line:17:2, line:20:2>     | |-CallExpr 0x14b00b6b0 <line:17:6, col:26> 'int'     | | |-ImplicitCastExpr 0x14b00b698 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x14b00b658 <col:6> 'int ()' Function 0x14b00b5a0 'dccp_qpolicy_full' 'int ()'     | | `-ImplicitCastExpr 0x14b00b6d8 <col:24> 'struct sock *' <LValueToRValue>     | |   `-DeclRefExpr 0x14b00b678 <col:24> 'struct sock *' lvalue ParmVar 0x14a928648 'sk' 'struct sock *'     | `-CompoundStmt 0x14b00b850 <col:29, line:20:2>     |   |-BinaryOperator 0x14b00b7c8 <line:18:3, col:9> 'int' contains-errors '='     |   | |-DeclRefExpr 0x14b00b6f0 <col:3> 'int' lvalue Var 0x14b008d58 'rc' 'int'     |   | `-UnaryOperator 0x14b00b7b0 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x14b00b798 <col:9> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x14b00b778 <col:9> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x14b00b838 <line:19:3, col:8> 'out_release' 0x14b00b7e8     |-BinaryOperator 0x14b00ba80 <line:22:2, col:35> 'long' contains-errors '='     | |-DeclRefExpr 0x14b00b890 <col:2> 'long' lvalue Var 0x14b008e88 'timeo' 'long'     | `-ImplicitCastExpr 0x14b00ba68 <col:10, col:35> 'long' contains-errors <IntegralCast>     |   `-CallExpr 0x14b00ba08 <col:10, col:35> 'int' contains-errors     |     |-ImplicitCastExpr 0x14b00b9f0 <col:10> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14b00b990 <col:10> 'int ()' Function 0x14b00b8d8 'sock_sndtimeo' 'int ()'     |     |-ImplicitCastExpr 0x14b00ba38 <col:24> 'struct sock *' <LValueToRValue>     |     | `-DeclRefExpr 0x14b00b9b0 <col:24> 'struct sock *' lvalue ParmVar 0x14a928648 'sk' 'struct sock *'     |     `-ImplicitCastExpr 0x14b00ba50 <col:28> 'int' contains-errors <LValueToRValue>     |       `-DeclRefExpr 0x14b00b9d0 <col:28> 'const int' contains-errors lvalue Var 0x14b008a20 'noblock' 'const int'     |-IfStmt 0x14b00be90 <line:26:2, line:28:9>     | |-RecoveryExpr 0x14b00bbb0 <line:26:6, col:57> '_Bool' contains-errors     | `-IfStmt 0x14b00be70 <line:27:3, line:28:9>     |   |-BinaryOperator 0x14b00be38 <line:27:7, col:52> 'int' '!='     |   | |-ParenExpr 0x14b00bdf8 <col:7, col:47> 'int'     |   | | `-BinaryOperator 0x14b00bdd8 <col:8, col:46> 'int' '='     |   | |   |-DeclRefExpr 0x14b00bbd0 <col:8> 'int' lvalue Var 0x14b008d58 'rc' 'int'     |   | |   `-CallExpr 0x14b00bd90 <col:13, col:46> 'int'     |   | |     |-ImplicitCastExpr 0x14b00bd78 <col:13> 'int (*)()' <FunctionToPointerDecay>     |   | |     | `-DeclRefExpr 0x14b00bcd0 <col:13> 'int ()' Function 0x14b00bc18 'sk_stream_wait_connect' 'int ()'     |   | |     |-ImplicitCastExpr 0x14b00bdc0 <col:36> 'struct sock *' <LValueToRValue>     |   | |     | `-DeclRefExpr 0x14b00bcf0 <col:36> 'struct sock *' lvalue ParmVar 0x14a928648 'sk' 'struct sock *'     |   | |     `-UnaryOperator 0x14b00bd60 <col:40, col:41> 'long *' prefix '&' cannot overflow     |   | |       `-DeclRefExpr 0x14b00bd10 <col:41> 'long' lvalue Var 0x14b008e88 'timeo' 'long'     |   | `-IntegerLiteral 0x14b00be18 <col:52> 'int' 0     |   `-GotoStmt 0x14b00be58 <line:28:4, col:9> 'out_release' 0x14b00b7e8     |-BinaryOperator 0x14b00bfb8 <line:30:2, col:35> 'int' contains-errors '='     | |-DeclRefExpr 0x14b00beb0 <col:2> 'int' lvalue Var 0x14b008dd8 'size' 'int'     | `-BinaryOperator 0x14b00bf98 <col:9, col:35> '<dependent type>' contains-errors '+'     |   |-CXXDependentScopeMemberExpr 0x14b00bf30 <col:9, col:22> '<dependent type>' contains-errors lvalue ->max_header     |   | `-RecoveryExpr 0x14b00bf08 <col:9, col:13> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14b00bed0 <col:9> 'struct sock *' lvalue ParmVar 0x14a928648 'sk' 'struct sock *'     |   `-RecoveryExpr 0x14b00bf78 <col:35> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14b00c110 <line:31:2, col:17> 'int'     | |-ImplicitCastExpr 0x14b00c0f8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14b00c0b8 <col:2> 'int ()' Function 0x14b00c000 'release_sock' 'int ()'     | `-ImplicitCastExpr 0x14b00c138 <col:15> 'struct sock *' <LValueToRValue>     |   `-DeclRefExpr 0x14b00c0d8 <col:15> 'struct sock *' lvalue ParmVar 0x14a928648 'sk' 'struct sock *'     |-BinaryOperator 0x14b00d800 <line:32:2, col:50> 'struct sk_buff *' contains-errors '='     | |-DeclRefExpr 0x14b00c150 <col:2> 'struct sk_buff *' lvalue Var 0x14b008ca8 'skb' 'struct sk_buff *'     | `-ImplicitCastExpr 0x14b00c3d8 <col:8, col:50> 'struct sk_buff *' contains-errors <IntegralToPointer>     |   `-CallExpr 0x14b00c350 <col:8, col:50> 'int' contains-errors     |     |-ImplicitCastExpr 0x14b00c338 <col:8> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14b00c250 <col:8> 'int ()' Function 0x14b00c198 'sock_alloc_send_skb' 'int ()'     |     |-ImplicitCastExpr 0x14b00c390 <col:28> 'struct sock *' <LValueToRValue>     |     | `-DeclRefExpr 0x14b00c270 <col:28> 'struct sock *' lvalue ParmVar 0x14a928648 'sk' 'struct sock *'     |     |-ImplicitCastExpr 0x14b00c3a8 <col:32> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x14b00c290 <col:32> 'int' lvalue Var 0x14b008dd8 'size' 'int'     |     |-ImplicitCastExpr 0x14b00c3c0 <col:38> 'int' contains-errors <LValueToRValue>     |     | `-DeclRefExpr 0x14b00c2b0 <col:38> 'const int' contains-errors lvalue Var 0x14b008a20 'noblock' 'const int'     |     `-UnaryOperator 0x14b00c320 <col:47, col:48> 'int *' prefix '&' cannot overflow     |       `-DeclRefExpr 0x14b00c2d0 <col:48> 'int' lvalue Var 0x14b008d58 'rc' 'int'     |-CallExpr 0x14b00d878 <line:33:2, col:14> 'int'     | |-ImplicitCastExpr 0x14b00d860 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14b00d820 <col:2> 'int ()' Function 0x14b00b428 'lock_sock' 'int ()'     | `-ImplicitCastExpr 0x14b00d8a0 <col:12> 'struct sock *' <LValueToRValue>     |   `-DeclRefExpr 0x14b00d840 <col:12> 'struct sock *' lvalue ParmVar 0x14a928648 'sk' 'struct sock *'     |-IfStmt 0x14b00d910 <line:34:2, line:35:8>     | |-RecoveryExpr 0x14b00d8d8 <line:34:6, col:13> '_Bool' contains-errors     | `-GotoStmt 0x14b00d8f8 <line:35:3, col:8> 'out_release' 0x14b00b7e8     |-CallExpr 0x14b00daf8 <line:37:2, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b00da10 <col:2> 'int ()' Function 0x14b00d958 'skb_reserve' 'int ()'     | |-DeclRefExpr 0x14b00da30 <col:14> 'struct sk_buff *' lvalue Var 0x14b008ca8 'skb' 'struct sk_buff *'     | `-CXXDependentScopeMemberExpr 0x14b00dab0 <col:19, col:32> '<dependent type>' contains-errors lvalue ->max_header     |   `-RecoveryExpr 0x14b00da88 <col:19, col:23> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14b00da50 <col:19> 'struct sock *' lvalue ParmVar 0x14a928648 'sk' 'struct sock *'     |-BinaryOperator 0x14b00de30 <line:38:2, col:50> 'int' contains-errors '='     | |-DeclRefExpr 0x14b00db28 <col:2> 'int' lvalue Var 0x14b008d58 'rc' 'int'     | `-CallExpr 0x14b00ddf8 <col:7, col:50> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14b00dc28 <col:7> 'int ()' Function 0x14b00db70 'memcpy_from_msg' 'int ()'     |   |-CallExpr 0x14b00dd88 <col:23, col:39> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14b00dd28 <col:23> 'int ()' Function 0x14b00dc70 'skb_put' 'int ()'     |   | |-DeclRefExpr 0x14b00dd48 <col:31> 'struct sk_buff *' lvalue Var 0x14b008ca8 'skb' 'struct sk_buff *'     |   | `-RecoveryExpr 0x14b00dd68 <col:36> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x14b00ddb8 <col:42> 'struct msghdr *' lvalue ParmVar 0x14b008228 'msg' 'struct msghdr *'     |   `-RecoveryExpr 0x14b00ddd8 <col:47> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14b00df30 <line:39:2, line:40:8>     | |-BinaryOperator 0x14b00dea8 <line:39:6, col:12> 'int' '!='     | | |-ImplicitCastExpr 0x14b00de90 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x14b00de50 <col:6> 'int' lvalue Var 0x14b008d58 'rc' 'int'     | | `-IntegerLiteral 0x14b00de70 <col:12> 'int' 0     | `-GotoStmt 0x14b00df18 <line:40:3, col:8> 'out_discard' 0x14b00dec8     |-BinaryOperator 0x14b00e128 <line:42:2, col:33> 'int' '='     | |-DeclRefExpr 0x14b00df50 <col:2> 'int' lvalue Var 0x14b008d58 'rc' 'int'     | `-CallExpr 0x14b00e0c8 <col:7, col:33> 'int'     |   |-ImplicitCastExpr 0x14b00e0b0 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14b00e050 <col:7> 'int ()' Function 0x14b00df98 'dccp_msghdr_parse' 'int ()'     |   |-ImplicitCastExpr 0x14b00e0f8 <col:25> 'struct msghdr *' <LValueToRValue>     |   | `-DeclRefExpr 0x14b00e070 <col:25> 'struct msghdr *' lvalue ParmVar 0x14b008228 'msg' 'struct msghdr *'     |   `-ImplicitCastExpr 0x14b00e110 <col:30> 'struct sk_buff *' <LValueToRValue>     |     `-DeclRefExpr 0x14b00e090 <col:30> 'struct sk_buff *' lvalue Var 0x14b008ca8 'skb' 'struct sk_buff *'     |-IfStmt 0x14b00e1d8 <line:43:2, line:44:8>     | |-BinaryOperator 0x14b00e1a0 <line:43:6, col:12> 'int' '!='     | | |-ImplicitCastExpr 0x14b00e188 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x14b00e148 <col:6> 'int' lvalue Var 0x14b008d58 'rc' 'int'     | | `-IntegerLiteral 0x14b00e168 <col:12> 'int' 0     | `-GotoStmt 0x14b00e1c0 <line:44:3, col:8> 'out_discard' 0x14b00dec8     |-CallExpr 0x14b00e350 <line:46:2, col:27> 'int'     | |-ImplicitCastExpr 0x14b00e338 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14b00e2d8 <col:2> 'int ()' Function 0x14b00e220 'dccp_qpolicy_push' 'int ()'     | |-ImplicitCastExpr 0x14b00e380 <col:20> 'struct sock *' <LValueToRValue>     | | `-DeclRefExpr 0x14b00e2f8 <col:20> 'struct sock *' lvalue ParmVar 0x14a928648 'sk' 'struct sock *'     | `-ImplicitCastExpr 0x14b00e398 <col:24> 'struct sk_buff *' <LValueToRValue>     |   `-DeclRefExpr 0x14b00e318 <col:24> 'struct sk_buff *' lvalue Var 0x14b008ca8 'skb' 'struct sk_buff *'     |-IfStmt 0x14b00e6e0 <line:48:2, line:49:21>     | |-UnaryOperator 0x14b00e550 <line:48:6, col:42> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x14b00e528 <col:7, col:42> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x14b00e490 <col:7> 'int ()' Function 0x14b00e3d8 'timer_pending' 'int ()'     | |   `-UnaryOperator 0x14b00e510 <col:21, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-RecoveryExpr 0x14b00e4e8 <col:22, col:26> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x14b00e4b0 <col:22> 'const struct dccp_sock *' lvalue Var 0x14b008638 'dp' 'const struct dccp_sock *'     | `-CallExpr 0x14b00e6a0 <line:49:3, col:21> 'int'     |   |-ImplicitCastExpr 0x14b00e688 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14b00e648 <col:3> 'int ()' Function 0x14b00e590 'dccp_write_xmit' 'int ()'     |   `-ImplicitCastExpr 0x14b00e6c8 <col:19> 'struct sock *' <LValueToRValue>     |     `-DeclRefExpr 0x14b00e668 <col:19> 'struct sock *' lvalue ParmVar 0x14a928648 'sk' 'struct sock *'     |-LabelStmt 0x14b00e798 <line:50:1, line:51:17> 'out_release'     | `-CallExpr 0x14b00e758 <col:2, col:17> 'int'     |   |-ImplicitCastExpr 0x14b00e740 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14b00e700 <col:2> 'int ()' Function 0x14b00c000 'release_sock' 'int ()'     |   `-ImplicitCastExpr 0x14b00e780 <col:15> 'struct sock *' <LValueToRValue>     |     `-DeclRefExpr 0x14b00e720 <col:15> 'struct sock *' lvalue ParmVar 0x14a928648 'sk' 'struct sock *'     |-ReturnStmt 0x14b00e870 <line:52:2, col:16>     | `-BinaryConditionalOperator 0x14b00e830 <col:9, col:16> '<dependent type>' contains-errors     |   |-ImplicitCastExpr 0x14b00e800 <col:9> 'int' <LValueToRValue>     |   | `-DeclRefExpr 0x14b00e7b8 <col:9> 'int' lvalue Var 0x14b008d58 'rc' 'int'     |   |-OpaqueValueExpr 0x14b00e818 <col:9> 'int'     |   | `-ImplicitCastExpr 0x14b00e800 <col:9> 'int' <LValueToRValue>     |   |   `-DeclRefExpr 0x14b00e7b8 <col:9> 'int' lvalue Var 0x14b008d58 'rc' 'int'     |   |-OpaqueValueExpr 0x14b00e818 <col:9> 'int'     |   | `-ImplicitCastExpr 0x14b00e800 <col:9> 'int' <LValueToRValue>     |   |   `-DeclRefExpr 0x14b00e7b8 <col:9> 'int' lvalue Var 0x14b008d58 'rc' 'int'     |   `-RecoveryExpr 0x14b00e7d8 <col:16> '<dependent type>' contains-errors lvalue     |-LabelStmt 0x14b00e9f8 <line:53:1, line:54:15> 'out_discard'     | `-CallExpr 0x14b00e9b8 <col:2, col:15> 'int'     |   |-ImplicitCastExpr 0x14b00e9a0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14b00e960 <col:2> 'int ()' Function 0x14b00e8a8 'kfree_skb' 'int ()'     |   `-ImplicitCastExpr 0x14b00e9e0 <col:12> 'struct sk_buff *' <LValueToRValue>     |     `-DeclRefExpr 0x14b00e980 <col:12> 'struct sk_buff *' lvalue Var 0x14b008ca8 'skb' 'struct sk_buff *'     `-GotoStmt 0x14b00ea18 <line:55:2, col:7> 'out_release' 0x14b00b7e8 ","20401":"`-FunctionDecl 0x15c141a70  col:7 implicit used printf 'int (const char *, ...)' extern   |-ParmVarDecl 0x15c141b70 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x15c141b18 <<invalid sloc>> Implicit 903   `-FormatAttr 0x15c141be0 <col:7> Implicit printf 1 2 ","21214":"`-FunctionDecl 0x1280a59a8  line:1:6 invalid recovery_cipher_abort 'int (void)'   `-CompoundStmt 0x1280a5b38 <line:2:1, line:8:1>     `-IfStmt 0x1280a5b00 <line:3:5, line:6:5>       |-RecoveryExpr 0x1280a5a68 <line:3:9> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x1280a5ae8 <col:29, line:6:5>         `-ReturnStmt 0x1280a5ad8 <line:5:9, col:16>           `-RecoveryExpr 0x1280a5ab8 <col:16> '<dependent type>' contains-errors lvalue ","20459":"`-FunctionDecl 0x126128758  line:1:12 uio_find_mem_index 'int (struct vm_area_struct *)' static   |-ParmVarDecl 0x126128648 <col:31, col:54> col:54 used vma 'struct vm_area_struct *'   `-CompoundStmt 0x126141120 <line:2:1, line:11:1>     |-DeclStmt 0x126140c98 <line:3:2, col:48>     | |-RecordDecl 0x126140a50 <col:2, col:9> col:9 struct uio_device     | `-VarDecl 0x126140bb8 <col:2, col:33> col:21 used idev 'struct uio_device *' cinit     |   `-RecoveryExpr 0x126140c58 <col:28, col:33> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x126140c20 <col:28> 'struct vm_area_struct *' lvalue ParmVar 0x126128648 'vma' 'struct vm_area_struct *'     |-IfStmt 0x1261410b8 <line:5:2, line:9:2>     | |-BinaryOperator 0x126140d80 <line:5:6, col:22> 'int' contains-errors '<'     | | |-RecoveryExpr 0x126140ce8 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x126140cb0 <col:6> 'struct vm_area_struct *' lvalue ParmVar 0x126128648 'vma' 'struct vm_area_struct *'     | | `-RecoveryExpr 0x126140d60 <col:22> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x126141098 <col:36, line:9:2>     |   |-IfStmt 0x126140fc8 <line:6:3, line:7:12>     |   | |-BinaryOperator 0x126140f60 <line:6:7, col:46> 'int' contains-errors '=='     |   | | |-CXXDependentScopeMemberExpr 0x126140ef8 <col:7, col:38> '<dependent type>' contains-errors lvalue .size     |   | | | `-ArraySubscriptExpr 0x126140ed8 <col:7, col:36> '<dependent type>' contains-errors lvalue     |   | | |   |-ImplicitCastExpr 0x126140ea8 <col:7, col:19> '<dependent type>' contains-errors <LValueToRValue>     |   | | |   | `-CXXDependentScopeMemberExpr 0x126140e00 <col:7, col:19> '<dependent type>' contains-errors lvalue ->mem     |   | | |   |   `-RecoveryExpr 0x126140dd8 <col:7, col:13> '<dependent type>' contains-errors lvalue     |   | | |   |     `-DeclRefExpr 0x126140da0 <col:7> 'struct uio_device *' contains-errors lvalue Var 0x126140bb8 'idev' 'struct uio_device *'     |   | | |   `-ImplicitCastExpr 0x126140ec0 <col:23, col:28> '<dependent type>' contains-errors <LValueToRValue>     |   | | |     `-RecoveryExpr 0x126140e80 <col:23, col:28> '<dependent type>' contains-errors lvalue     |   | | |       `-DeclRefExpr 0x126140e48 <col:23> 'struct vm_area_struct *' lvalue ParmVar 0x126128648 'vma' 'struct vm_area_struct *'     |   | | `-IntegerLiteral 0x126140f40 <col:46> 'int' 0     |   | `-ReturnStmt 0x126140fb8 <line:7:4, col:12>     |   |   `-UnaryOperator 0x126140fa0 <col:11, col:12> 'int' prefix '-'     |   |     `-IntegerLiteral 0x126140f80 <col:12> 'int' 1     |   `-ReturnStmt 0x126141088 <line:8:3, col:20>     |     `-CStyleCastExpr 0x126141060 <col:10, col:20> 'int' contains-errors <Dependent>     |       `-RecoveryExpr 0x126141020 <col:15, col:20> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x126140fe8 <col:15> 'struct vm_area_struct *' lvalue ParmVar 0x126128648 'vma' 'struct vm_area_struct *'     `-ReturnStmt 0x126141110 <line:10:2, col:10>       `-UnaryOperator 0x1261410f8 <col:9, col:10> 'int' prefix '-'         `-IntegerLiteral 0x1261410d8 <col:10> 'int' 1 ","21203":"`-FunctionDecl 0x156128318  line:1:1 invalid g_socket_client_tls_handshake_callback 'int (int *, int *, int)'   |-ParmVarDecl 0x156128128 <col:41, col:55> col:55 invalid object 'int *'   |-ParmVarDecl 0x1561281a8 <line:2:6, col:20> col:20 invalid result 'int *'   |-ParmVarDecl 0x156128228 <line:3:6, col:20> col:20 invalid user_data 'int'   `-CompoundStmt 0x156142368 <line:4:1, line:22:1>     `-IfStmt 0x156142338 <line:7:3, line:21:5> has_else       |-CallExpr 0x156141860 <line:7:7, line:9:24> '<dependent type>' contains-errors       | |-DeclRefExpr 0x156128570 <line:7:7> 'int ()' Function 0x1561284b8 'g_tls_connection_handshake_finish' 'int ()'       | |-CallExpr 0x1561286b0 <col:42, col:66> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x156128670 <col:42> 'int ()' Function 0x1561285b8 'G_TLS_CONNECTION' 'int ()'       | | `-RecoveryExpr 0x156128690 <col:60> '<dependent type>' contains-errors lvalue       | |-RecoveryExpr 0x1561286d8 <line:8:7> '<dependent type>' contains-errors lvalue       | `-UnaryOperator 0x156141848 <line:9:7, col:14> '<dependent type>' contains-errors prefix '&' cannot overflow       |   `-CXXDependentScopeMemberExpr 0x156141800 <col:8, col:14> '<dependent type>' contains-errors lvalue ->last_error       |     `-RecoveryExpr 0x1561287a8 <col:8> '<dependent type>' contains-errors lvalue       |-CompoundStmt 0x156142190 <line:10:5, line:16:5>       | |-CallExpr 0x156141a88 <line:11:7, col:39> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x156141978 <col:7> 'int ()' Function 0x1561418c0 'g_object_unref' 'int ()'       | | `-CXXDependentScopeMemberExpr 0x156141a40 <col:23, col:29> '<dependent type>' contains-errors lvalue ->connection       | |   `-RecoveryExpr 0x156141a20 <col:23> '<dependent type>' contains-errors lvalue       | |-CallExpr 0x156141fc8 <line:14:7, col:116> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x156141cd8 <col:7> 'int ()' Function 0x156141c20 'g_socket_client_emit_event' 'int ()'       | | |-CXXDependentScopeMemberExpr 0x156141e90 <col:35, col:41> '<dependent type>' contains-errors lvalue ->client       | | | `-RecoveryExpr 0x156141e70 <col:35> '<dependent type>' contains-errors lvalue       | | |-RecoveryExpr 0x156141ed8 <col:49> '<dependent type>' contains-errors lvalue       | | |-CXXDependentScopeMemberExpr 0x156141f18 <col:81, col:87> '<dependent type>' contains-errors lvalue ->connectable       | | | `-RecoveryExpr 0x156141ef8 <col:81> '<dependent type>' contains-errors lvalue       | | `-CXXDependentScopeMemberExpr 0x156141f80 <col:100, col:106> '<dependent type>' contains-errors lvalue ->connection       | |   `-RecoveryExpr 0x156141f60 <col:100> '<dependent type>' contains-errors lvalue       | `-CallExpr 0x156142168 <line:15:7, col:51> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x1561420e8 <col:7> 'int ()' Function 0x156142030 'g_socket_client_async_connect_complete' 'int ()'       |   `-RecoveryExpr 0x156142148 <col:47> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x156142320 <line:18:5, line:21:5>         `-CallExpr 0x1561421f8 <line:19:7, col:29> '<dependent type>' contains-errors           |-DeclRefExpr 0x1561421b8 <col:7> 'int ()' Function 0x1561418c0 'g_object_unref' 'int ()'           `-RecoveryExpr 0x1561421d8 <col:23> '<dependent type>' contains-errors lvalue ","20826":"`-FunctionDecl 0x122008348  line:1:1 evdev_transform_absolute 'int (struct evdev_device *, struct device_coords *)'   |-ParmVarDecl 0x121928648 <col:26, col:47> col:47 used device 'struct evdev_device *'   |-ParmVarDecl 0x122008228 <line:2:5, col:27> col:27 used point 'struct device_coords *'   `-CompoundStmt 0x122008888 <line:3:1, line:8:1>     |-IfStmt 0x122008530 <line:4:2, line:5:3>     | |-UnaryOperator 0x122008508 <line:4:6, col:19> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1220084f0 <col:7, col:19> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x1220084a8 <col:7, col:19> '<dependent type>' contains-errors lvalue .apply_calibration     | |     `-RecoveryExpr 0x122008480 <col:7, col:15> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x122008448 <col:7> 'struct evdev_device *' lvalue ParmVar 0x121928648 'device' 'struct evdev_device *'     | `-ReturnStmt 0x122008520 <line:5:3>     `-CallExpr 0x122008850 <line:7:2, col:64> '<dependent type>' contains-errors       |-DeclRefExpr 0x122008680 <col:2> 'int ()' Function 0x1220085c8 'matrix_mult_vec' 'int ()'       |-UnaryOperator 0x122008748 <col:18, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow       | `-CXXDependentScopeMemberExpr 0x122008700 <col:19, col:31> '<dependent type>' contains-errors lvalue .calibration       |   `-RecoveryExpr 0x1220086d8 <col:19, col:27> '<dependent type>' contains-errors lvalue       |     `-DeclRefExpr 0x1220086a0 <col:19> 'struct evdev_device *' lvalue ParmVar 0x121928648 'device' 'struct evdev_device *'       |-UnaryOperator 0x1220087c0 <col:44, col:52> '<dependent type>' contains-errors prefix '&' cannot overflow       | `-RecoveryExpr 0x122008798 <col:45, col:52> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x122008760 <col:45> 'struct device_coords *' lvalue ParmVar 0x122008228 'point' 'struct device_coords *'       `-UnaryOperator 0x122008838 <col:55, col:63> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x122008810 <col:56, col:63> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x1220087d8 <col:56> 'struct device_coords *' lvalue ParmVar 0x122008228 'point' 'struct device_coords *' ","20687":"`-FunctionDecl 0x125942fb8  col:35 implicit used strdup 'char *(const char *)' extern   |-ParmVarDecl 0x1259430b8 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x125943060 <<invalid sloc>> Implicit 950 ","20499":"`-FunctionDecl 0x130031318  line:1:1 invalid date_s_httpdate 'int (int, int *, int)'   |-ParmVarDecl 0x1300310d8 <col:17, col:21> col:21 used argc 'int'   |-ParmVarDecl 0x1300311a8 <col:27, col:34> col:34 invalid argv 'int *'   |-ParmVarDecl 0x130031228 <col:40, col:46> col:46 invalid klass 'int'   `-CompoundStmt 0x130049bd0 <line:2:1, line:18:1>     |-CallExpr 0x130031708 <line:5:5, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x130031530 <col:5> 'int ()' Function 0x130031478 'rb_scan_args' 'int ()'     | |-DeclRefExpr 0x130031550 <col:18> 'int' lvalue ParmVar 0x1300310d8 'argc' 'int'     | |-RecoveryExpr 0x130031570 <col:24> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x1300315d0 <col:30> 'char[4]' lvalue \"STR\"     | |-UnaryOperator 0x1300316b8 <col:37, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x130031698 <col:38> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x1300316f0 <col:43, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1300316d0 <col:44> '<dependent type>' contains-errors lvalue     |-SwitchStmt 0x130031788 <line:7:5, line:12:5>     | |-ImplicitCastExpr 0x130031770 <line:7:13> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x130031750 <col:13> 'int' lvalue ParmVar 0x1300310d8 'argc' 'int'     | `-CompoundStmt 0x130049988 <col:19, line:12:5>     |   |-CaseStmt 0x130049600 <line:8:7, <invalid sloc>>     |   | |-ConstantExpr 0x1300317d0 <col:12> 'int'     |   | | `-IntegerLiteral 0x1300317b0 <col:12> 'int' 0     |   | `-NullStmt 0x1300497d8 <<invalid sloc>>     |   `-CaseStmt 0x130049818 <line:10:7, <invalid sloc>>     |     |-ConstantExpr 0x130049800 <col:12> 'int'     |     | `-IntegerLiteral 0x1300497e0 <col:12> 'int' 1     |     `-NullStmt 0x130049980 <<invalid sloc>>     `-CompoundStmt 0x130049bb8 <line:14:5, line:17:5>       `-ReturnStmt 0x130049ba8 <line:16:2, col:39>         `-CallExpr 0x130049b70 <col:9, col:39> '<dependent type>' contains-errors           |-DeclRefExpr 0x130049a88 <col:9> 'int ()' Function 0x1300499d0 'd_new_by_frags' 'int ()'           |-RecoveryExpr 0x130049aa8 <col:24> '<dependent type>' contains-errors lvalue           |-RecoveryExpr 0x130049b30 <col:31> '<dependent type>' contains-errors lvalue           `-RecoveryExpr 0x130049b50 <col:37> '<dependent type>' contains-errors lvalue ","20747":"`-FunctionDecl 0x12b144078  col:17 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x12b144178 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x12b144120 <<invalid sloc>> Implicit 873 ","20940":"`-FunctionDecl 0x15b145b68  line:1:1 invalid pxa3xx_gcu_write 'int (struct file *, const char *, int, int *)'   |-ParmVarDecl 0x15b128648 <col:18, col:31> col:31 used file 'struct file *'   |-ParmVarDecl 0x15b1286c8 <col:37, col:49> col:49 used buff 'const char *'   |-ParmVarDecl 0x15b128760 <line:2:4, col:11> col:11 invalid count 'int'   |-ParmVarDecl 0x15b145a18 <col:18, col:26> col:26 invalid offp 'int *'   `-CompoundStmt 0x15b80a988 <line:3:1, line:68:1>     |-DeclStmt 0x15b145cb0 <line:4:2, col:9>     | `-VarDecl 0x15b145c48 <col:2, col:6> col:6 used ret 'int'     |-DeclStmt 0x15b145d48 <line:5:2, col:21>     | `-VarDecl 0x15b145ce0 <col:2, col:16> col:16 used flags 'unsigned long'     |-DeclStmt 0x15b145f48 <line:6:2, col:33>     | |-RecordDecl 0x15b145d60 <col:2, col:9> col:9 struct pxa3xx_gcu_batch     | `-VarDecl 0x15b145ec8 <col:2, col:27> col:27 used buffer 'struct pxa3xx_gcu_batch *'     |-DeclStmt 0x15b146388 <line:7:2, col:57>     | |-RecordDecl 0x15b145f60 <col:2, col:9> col:9 struct pxa3xx_gcu_priv     | `-VarDecl 0x15b1460c8 <col:2, col:56> col:26 used priv 'struct pxa3xx_gcu_priv *' cinit     |   `-ImplicitCastExpr 0x15b146358 <col:33, col:56> 'struct pxa3xx_gcu_priv *' <IntegralToPointer>     |     `-CallExpr 0x15b146318 <col:33, col:56> 'int'     |       |-ImplicitCastExpr 0x15b146300 <col:33> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x15b146290 <col:33> 'int ()' Function 0x15b1461d8 'to_pxa3xx_gcu_priv' 'int ()'     |       `-ImplicitCastExpr 0x15b146340 <col:52> 'struct file *' <LValueToRValue>     |         `-DeclRefExpr 0x15b1462b0 <col:52> 'struct file *' lvalue ParmVar 0x15b128648 'file' 'struct file *'     |-DeclStmt 0x15b146480 <line:9:2, col:23>     | `-VarDecl 0x15b1463b8 <col:2, col:22> col:6 used words 'int' cinit     |   `-BinaryOperator 0x15b146460 <col:14, col:22> '<dependent type>' contains-errors '\/'     |     |-RecoveryExpr 0x15b146420 <col:14> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x15b146440 <col:22> 'int' 4     |-UnaryOperator 0x15b146540 <line:12:2, col:26> '<dependent type>' contains-errors postfix '++' cannot overflow     | `-CXXDependentScopeMemberExpr 0x15b1464f8 <col:2, col:16> '<dependent type>' contains-errors lvalue ->num_writes     |   `-RecoveryExpr 0x15b1464d0 <col:2, col:8> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x15b146498 <col:2> 'struct pxa3xx_gcu_priv *' lvalue Var 0x15b1460c8 'priv' 'struct pxa3xx_gcu_priv *'     |-CompoundAssignOperator 0x15b146620 <line:13:2, col:29> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-CXXDependentScopeMemberExpr 0x15b1465b8 <col:2, col:16> '<dependent type>' contains-errors lvalue ->num_words     | | `-RecoveryExpr 0x15b146590 <col:2, col:8> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15b146558 <col:2> 'struct pxa3xx_gcu_priv *' lvalue Var 0x15b1460c8 'priv' 'struct pxa3xx_gcu_priv *'     | `-DeclRefExpr 0x15b146600 <col:29> 'int' contains-errors lvalue Var 0x15b1463b8 'words' 'int'     |-IfStmt 0x15b146790 <line:16:2, line:17:11>     | |-BinaryOperator 0x15b1466c8 <line:16:6, col:15> 'int' contains-errors '>='     | | |-DeclRefExpr 0x15b146650 <col:6> 'int' contains-errors lvalue Var 0x15b1463b8 'words' 'int'     | | `-RecoveryExpr 0x15b1466a8 <col:15> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x15b146780 <line:17:3, col:11>     |   `-UnaryOperator 0x15b146768 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x15b146750 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x15b146730 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15b808900 <line:20:2, line:24:2>     | |-UnaryOperator 0x15b146828 <line:20:6, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x15b146810 <col:7, col:13> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x15b1467e8 <col:7, col:13> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x15b1467b0 <col:7> 'struct pxa3xx_gcu_priv *' lvalue Var 0x15b1460c8 'priv' 'struct pxa3xx_gcu_priv *'     | `-CompoundStmt 0x15b8088e0 <col:19, line:24:2>     |   |-BinaryOperator 0x15b1469d8 <line:21:3, col:34> 'int' '='     |   | |-DeclRefExpr 0x15b146840 <col:3> 'int' lvalue Var 0x15b145c48 'ret' 'int'     |   | `-CallExpr 0x15b146998 <col:9, col:34> 'int'     |   |   |-ImplicitCastExpr 0x15b146980 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x15b146940 <col:9> 'int ()' Function 0x15b146888 'pxa3xx_gcu_wait_free' 'int ()'     |   |   `-ImplicitCastExpr 0x15b1469c0 <col:30> 'struct pxa3xx_gcu_priv *' <LValueToRValue>     |   |     `-DeclRefExpr 0x15b146960 <col:30> 'struct pxa3xx_gcu_priv *' lvalue Var 0x15b1460c8 'priv' 'struct pxa3xx_gcu_priv *'     |   `-IfStmt 0x15b8088c0 <line:22:3, line:23:11>     |     |-BinaryOperator 0x15b808858 <line:22:7, col:13> 'int' '<'     |     | |-ImplicitCastExpr 0x15b808840 <col:7> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x15b808800 <col:7> 'int' lvalue Var 0x15b145c48 'ret' 'int'     |     | `-IntegerLiteral 0x15b808820 <col:13> 'int' 0     |     `-ReturnStmt 0x15b8088b0 <line:23:4, col:11>     |       `-ImplicitCastExpr 0x15b808898 <col:11> 'int' <LValueToRValue>     |         `-DeclRefExpr 0x15b808878 <col:11> 'int' lvalue Var 0x15b145c48 'ret' 'int'     |-CallExpr 0x15b808ab8 <line:27:2, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15b808a00 <col:2> 'int ()' Function 0x15b808948 'spin_lock_irqsave' 'int ()'     | |-UnaryOperator 0x15b808a80 <col:20, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x15b808a58 <col:21, col:27> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15b808a20 <col:21> 'struct pxa3xx_gcu_priv *' lvalue Var 0x15b1460c8 'priv' 'struct pxa3xx_gcu_priv *'     | `-DeclRefExpr 0x15b808a98 <col:37> 'unsigned long' lvalue Var 0x15b145ce0 'flags' 'unsigned long'     |-BinaryOperator 0x15b808b68 <line:28:2, col:17> 'struct pxa3xx_gcu_batch *' contains-errors '='     | |-DeclRefExpr 0x15b808ae8 <col:2> 'struct pxa3xx_gcu_batch *' lvalue Var 0x15b145ec8 'buffer' 'struct pxa3xx_gcu_batch *'     | `-RecoveryExpr 0x15b808b40 <col:11, col:17> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x15b808b08 <col:11> 'struct pxa3xx_gcu_priv *' lvalue Var 0x15b1460c8 'priv' 'struct pxa3xx_gcu_priv *'     |-BinaryOperator 0x15b808c48 <line:29:2, col:23> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x15b808bc0 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15b808b88 <col:2> 'struct pxa3xx_gcu_priv *' lvalue Var 0x15b1460c8 'priv' 'struct pxa3xx_gcu_priv *'     | `-RecoveryExpr 0x15b808c20 <col:15, col:23> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x15b808be8 <col:15> 'struct pxa3xx_gcu_batch *' lvalue Var 0x15b145ec8 'buffer' 'struct pxa3xx_gcu_batch *'     |-CallExpr 0x15b808e00 <line:30:2, col:47> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15b808d48 <col:2> 'int ()' Function 0x15b808c90 'spin_unlock_irqrestore' 'int ()'     | |-UnaryOperator 0x15b808dc8 <col:25, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x15b808da0 <col:26, col:32> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15b808d68 <col:26> 'struct pxa3xx_gcu_priv *' lvalue Var 0x15b1460c8 'priv' 'struct pxa3xx_gcu_priv *'     | `-DeclRefExpr 0x15b808de0 <col:42> 'unsigned long' lvalue Var 0x15b145ce0 'flags' 'unsigned long'     |-BinaryOperator 0x15b809080 <line:34:2, col:51> 'int' contains-errors '='     | |-DeclRefExpr 0x15b808e30 <col:2> 'int' lvalue Var 0x15b145c48 'ret' 'int'     | `-CallExpr 0x15b809048 <col:8, col:51> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15b808f30 <col:8> 'int ()' Function 0x15b808e78 'copy_from_user' 'int ()'     |   |-RecoveryExpr 0x15b808f88 <col:23, col:31> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x15b808f50 <col:23> 'struct pxa3xx_gcu_batch *' lvalue Var 0x15b145ec8 'buffer' 'struct pxa3xx_gcu_batch *'     |   |-DeclRefExpr 0x15b808fb0 <col:36> 'const char *' lvalue ParmVar 0x15b1286c8 'buff' 'const char *'     |   `-BinaryOperator 0x15b809028 <col:42, col:50> 'int' contains-errors '*'     |     |-ImplicitCastExpr 0x15b809010 <col:42> 'int' contains-errors <LValueToRValue>     |     | `-DeclRefExpr 0x15b808fd0 <col:42> 'int' contains-errors lvalue Var 0x15b1463b8 'words' 'int'     |     `-IntegerLiteral 0x15b808ff0 <col:50> 'int' 4     |-IfStmt 0x15b809458 <line:35:2, line:41:2>     | |-ImplicitCastExpr 0x15b8090c0 <line:35:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x15b8090a0 <col:6> 'int' lvalue Var 0x15b145c48 'ret' 'int'     | `-CompoundStmt 0x15b809428 <col:11, line:41:2>     |   |-CallExpr 0x15b809190 <line:36:3, col:43> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x15b8090d8 <col:3> 'int ()' Function 0x15b808948 'spin_lock_irqsave' 'int ()'     |   | |-UnaryOperator 0x15b809158 <col:21, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-RecoveryExpr 0x15b809130 <col:22, col:28> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x15b8090f8 <col:22> 'struct pxa3xx_gcu_priv *' lvalue Var 0x15b1460c8 'priv' 'struct pxa3xx_gcu_priv *'     |   | `-DeclRefExpr 0x15b809170 <col:38> 'unsigned long' lvalue Var 0x15b145ce0 'flags' 'unsigned long'     |   |-BinaryOperator 0x15b809280 <line:37:3, col:24> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x15b8091f8 <col:3, col:11> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x15b8091c0 <col:3> 'struct pxa3xx_gcu_batch *' lvalue Var 0x15b145ec8 'buffer' 'struct pxa3xx_gcu_batch *'     |   | `-RecoveryExpr 0x15b809258 <col:18, col:24> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x15b809220 <col:18> 'struct pxa3xx_gcu_priv *' lvalue Var 0x15b1460c8 'priv' 'struct pxa3xx_gcu_priv *'     |   |-BinaryOperator 0x15b809320 <line:38:3, col:16> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x15b8092d8 <col:3, col:9> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x15b8092a0 <col:3> 'struct pxa3xx_gcu_priv *' lvalue Var 0x15b1460c8 'priv' 'struct pxa3xx_gcu_priv *'     |   | `-DeclRefExpr 0x15b809300 <col:16> 'struct pxa3xx_gcu_batch *' lvalue Var 0x15b145ec8 'buffer' 'struct pxa3xx_gcu_batch *'     |   `-CallExpr 0x15b8093f8 <line:39:3, col:48> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x15b809340 <col:3> 'int ()' Function 0x15b808c90 'spin_unlock_irqrestore' 'int ()'     |     |-UnaryOperator 0x15b8093c0 <col:26, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | `-RecoveryExpr 0x15b809398 <col:27, col:33> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x15b809360 <col:27> 'struct pxa3xx_gcu_priv *' lvalue Var 0x15b1460c8 'priv' 'struct pxa3xx_gcu_priv *'     |     `-DeclRefExpr 0x15b8093d8 <col:43> 'unsigned long' lvalue Var 0x15b145ce0 'flags' 'unsigned long'     |-BinaryOperator 0x15b8094f8 <line:43:2, col:19> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x15b8094b0 <col:2, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15b809478 <col:2> 'struct pxa3xx_gcu_batch *' lvalue Var 0x15b145ec8 'buffer' 'struct pxa3xx_gcu_batch *'     | `-DeclRefExpr 0x15b8094d8 <col:19> 'int' contains-errors lvalue Var 0x15b1463b8 'words' 'int'     |-BinaryOperator 0x15b809608 <line:46:2, col:23> '<dependent type>' contains-errors '='     | |-ArraySubscriptExpr 0x15b8095c8 <col:2, col:19> '<dependent type>' contains-errors lvalue     | | |-ImplicitCastExpr 0x15b809598 <col:2, col:10> '<dependent type>' contains-errors <LValueToRValue>     | | | `-RecoveryExpr 0x15b809550 <col:2, col:10> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x15b809518 <col:2> 'struct pxa3xx_gcu_batch *' lvalue Var 0x15b145ec8 'buffer' 'struct pxa3xx_gcu_batch *'     | | `-ImplicitCastExpr 0x15b8095b0 <col:14> 'int' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x15b809578 <col:14> 'int' contains-errors lvalue Var 0x15b1463b8 'words' 'int'     | `-IntegerLiteral 0x15b8095e8 <col:23> 'int' 16777216     |-CallExpr 0x15b8096e0 <line:49:2, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15b809628 <col:2> 'int ()' Function 0x15b808948 'spin_lock_irqsave' 'int ()'     | |-UnaryOperator 0x15b8096a8 <col:20, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x15b809680 <col:21, col:27> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15b809648 <col:21> 'struct pxa3xx_gcu_priv *' lvalue Var 0x15b1460c8 'priv' 'struct pxa3xx_gcu_priv *'     | `-DeclRefExpr 0x15b8096c0 <col:37> 'unsigned long' lvalue Var 0x15b145ce0 'flags' 'unsigned long'     |-IfStmt 0x15b80a4d8 <line:53:2, line:58:17> has_else     | |-RecoveryExpr 0x15b8097a8 <line:53:6, col:12> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15b809770 <col:6> 'struct pxa3xx_gcu_priv *' lvalue Var 0x15b1460c8 'priv' 'struct pxa3xx_gcu_priv *'     | |-CompoundStmt 0x15b80a420 <col:19, line:57:2>     | | `-BinaryOperator 0x15b80a400 <line:56:3, col:28> '<dependent type>' contains-errors '='     | |   |-CXXDependentScopeMemberExpr 0x15b80a398 <col:3, col:21> '<dependent type>' contains-errors lvalue ->next     | |   | `-RecoveryExpr 0x15b80a370 <col:3, col:9> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x15b80a338 <col:3> 'struct pxa3xx_gcu_priv *' lvalue Var 0x15b1460c8 'priv' 'struct pxa3xx_gcu_priv *'     | |   `-DeclRefExpr 0x15b80a3e0 <col:28> 'struct pxa3xx_gcu_batch *' lvalue Var 0x15b145ec8 'buffer' 'struct pxa3xx_gcu_batch *'     | `-BinaryOperator 0x15b80a4b8 <line:58:3, col:17> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x15b80a470 <col:3, col:9> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x15b80a438 <col:3> 'struct pxa3xx_gcu_priv *' lvalue Var 0x15b1460c8 'priv' 'struct pxa3xx_gcu_priv *'     |   `-DeclRefExpr 0x15b80a498 <col:17> 'struct pxa3xx_gcu_batch *' lvalue Var 0x15b145ec8 'buffer' 'struct pxa3xx_gcu_batch *'     |-BinaryOperator 0x15b80a588 <line:60:2, col:21> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x15b80a540 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15b80a508 <col:2> 'struct pxa3xx_gcu_priv *' lvalue Var 0x15b1460c8 'priv' 'struct pxa3xx_gcu_priv *'     | `-DeclRefExpr 0x15b80a568 <col:21> 'struct pxa3xx_gcu_batch *' lvalue Var 0x15b145ec8 'buffer' 'struct pxa3xx_gcu_batch *'     |-IfStmt 0x15b80a7f8 <line:62:2, line:63:17>     | |-UnaryOperator 0x15b80a668 <line:62:6, col:21> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x15b80a650 <col:7, col:21> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x15b80a608 <col:7, col:21> '<dependent type>' contains-errors lvalue ->hw_running     | |     `-RecoveryExpr 0x15b80a5e0 <col:7, col:13> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x15b80a5a8 <col:7> 'struct pxa3xx_gcu_priv *' lvalue Var 0x15b1460c8 'priv' 'struct pxa3xx_gcu_priv *'     | `-CallExpr 0x15b80a7b8 <line:63:3, col:17> 'int'     |   |-ImplicitCastExpr 0x15b80a7a0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x15b80a760 <col:3> 'int ()' Function 0x15b80a6a8 'run_ready' 'int ()'     |   `-ImplicitCastExpr 0x15b80a7e0 <col:13> 'struct pxa3xx_gcu_priv *' <LValueToRValue>     |     `-DeclRefExpr 0x15b80a780 <col:13> 'struct pxa3xx_gcu_priv *' lvalue Var 0x15b1460c8 'priv' 'struct pxa3xx_gcu_priv *'     |-CallExpr 0x15b80a8d0 <line:65:2, col:47> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15b80a818 <col:2> 'int ()' Function 0x15b808c90 'spin_unlock_irqrestore' 'int ()'     | |-UnaryOperator 0x15b80a898 <col:25, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x15b80a870 <col:26, col:32> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15b80a838 <col:26> 'struct pxa3xx_gcu_priv *' lvalue Var 0x15b1460c8 'priv' 'struct pxa3xx_gcu_priv *'     | `-DeclRefExpr 0x15b80a8b0 <col:42> 'unsigned long' lvalue Var 0x15b145ce0 'flags' 'unsigned long'     `-ReturnStmt 0x15b80a978 <line:67:2, col:17>       `-BinaryOperator 0x15b80a958 <col:9, col:17> 'int' contains-errors '*'         |-ImplicitCastExpr 0x15b80a940 <col:9> 'int' contains-errors <LValueToRValue>         | `-DeclRefExpr 0x15b80a900 <col:9> 'int' contains-errors lvalue Var 0x15b1463b8 'words' 'int'         `-IntegerLiteral 0x15b80a920 <col:17> 'int' 4 ","20637":"`-FunctionDecl 0x160026af8  line:1:21 invalid map_build_fixup_req 'struct ldb_request *(struct map_context *, struct ldb_dn *, struct ldb_dn *, void *, int)'   |-ParmVarDecl 0x16000e2e8 <col:41, col:61> col:61 used ac 'struct map_context *'   |-ParmVarDecl 0x1600266c8 <line:2:6, col:21> col:21 used olddn 'struct ldb_dn *'   |-ParmVarDecl 0x1600267b8 <line:3:6, col:21> col:21 used newdn 'struct ldb_dn *'   |-ParmVarDecl 0x160026838 <line:4:6, col:12> col:12 used context 'void *'   |-ParmVarDecl 0x1600268d0 <line:5:6, col:25> col:25 invalid callback 'int'   `-CompoundStmt 0x16002a938 <line:6:1, line:50:1>     |-DeclStmt 0x160026db8 <line:7:2, col:25>     | |-RecordDecl 0x160026bc8 <col:2, col:9> col:9 struct ldb_context     | `-VarDecl 0x160026d38 <col:2, col:22> col:22 used ldb 'struct ldb_context *'     |-DeclStmt 0x160026ec0 <line:8:2, col:25>     | `-VarDecl 0x160026e58 <col:2, col:22> col:22 used req 'struct ldb_request *'     |-DeclStmt 0x1600270c8 <line:9:2, col:25>     | |-RecordDecl 0x160026ed8 <col:2, col:9> col:9 struct ldb_message     | `-VarDecl 0x160027048 <col:2, col:22> col:22 used msg 'struct ldb_message *'     |-DeclStmt 0x160027160 <line:10:2, col:16>     | `-VarDecl 0x1600270f8 <col:2, col:14> col:14 used dn 'const char *'     |-DeclStmt 0x1600271f8 <line:11:2, col:9>     | `-VarDecl 0x160027190 <col:2, col:6> col:6 used ret 'int'     |-BinaryOperator 0x160027438 <line:13:2, col:37> 'struct ldb_context *' contains-errors '='     | |-DeclRefExpr 0x160027210 <col:2> 'struct ldb_context *' lvalue Var 0x160026d38 'ldb' 'struct ldb_context *'     | `-CallExpr 0x160027410 <col:8, col:37> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x160027390 <col:8> 'int ()' Function 0x1600272d8 'ldb_module_get_ctx' 'int ()'     |   `-RecoveryExpr 0x1600273e8 <col:27, col:31> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1600273b0 <col:27> 'struct map_context *' lvalue ParmVar 0x16000e2e8 'ac' 'struct map_context *'     |-BinaryOperator 0x160028a58 <line:16:2, col:22> 'struct ldb_message *' '='     | |-DeclRefExpr 0x160027458 <col:2> 'struct ldb_message *' lvalue Var 0x160027048 'msg' 'struct ldb_message *'     | `-ImplicitCastExpr 0x160028a40 <col:8, col:22> 'struct ldb_message *' <IntegralToPointer>     |   `-CallExpr 0x160028a00 <col:8, col:22> 'int'     |     |-ImplicitCastExpr 0x1600275d0 <col:8> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x160027558 <col:8> 'int ()' Function 0x1600274a0 'ldb_msg_new' 'int ()'     |     `-ImplicitCastExpr 0x160028a28 <col:20> 'struct map_context *' <LValueToRValue>     |       `-DeclRefExpr 0x160027578 <col:20> 'struct map_context *' lvalue ParmVar 0x16000e2e8 'ac' 'struct map_context *'     |-IfStmt 0x160028d00 <line:17:2, line:20:2>     | |-BinaryOperator 0x160028af0 <line:17:6, col:13> 'int' contains-errors '=='     | | |-DeclRefExpr 0x160028a78 <col:6> 'struct ldb_message *' lvalue Var 0x160027048 'msg' 'struct ldb_message *'     | | `-RecoveryExpr 0x160028ad0 <col:13> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x160028ce0 <col:19, line:20:2>     |   |-CallExpr 0x160028c70 <line:18:3, col:21> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x160028bf0 <col:3> 'int ()' Function 0x160028b38 'map_oom' 'int ()'     |   | `-RecoveryExpr 0x160028c48 <col:11, col:15> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x160028c10 <col:11> 'struct map_context *' lvalue ParmVar 0x16000e2e8 'ac' 'struct map_context *'     |   `-ReturnStmt 0x160028cd0 <line:19:3, col:10>     |     `-RecoveryExpr 0x160028cb0 <col:10> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x160028f38 <line:23:2, col:34> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x160028d58 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x160028d20 <col:2> 'struct ldb_message *' lvalue Var 0x160027048 'msg' 'struct ldb_message *'     | `-CallExpr 0x160028ed8 <col:12, col:34> 'int'     |   |-ImplicitCastExpr 0x160028ec0 <col:12> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x160028e60 <col:12> 'int ()' Function 0x160028da8 'ldb_dn_copy' 'int ()'     |   |-ImplicitCastExpr 0x160028f08 <col:24> 'struct ldb_message *' <LValueToRValue>     |   | `-DeclRefExpr 0x160028e80 <col:24> 'struct ldb_message *' lvalue Var 0x160027048 'msg' 'struct ldb_message *'     |   `-ImplicitCastExpr 0x160028f20 <col:29> 'struct ldb_dn *' <LValueToRValue>     |     `-DeclRefExpr 0x160028ea0 <col:29> 'struct ldb_dn *' lvalue ParmVar 0x1600266c8 'olddn' 'struct ldb_dn *'     |-BinaryOperator 0x160029148 <line:24:2, col:41> 'const char *' '='     | |-DeclRefExpr 0x160028f58 <col:2> 'const char *' lvalue Var 0x1600270f8 'dn' 'const char *'     | `-ImplicitCastExpr 0x160029130 <col:7, col:41> 'const char *' <IntegralToPointer>     |   `-CallExpr 0x1600290d0 <col:7, col:41> 'int'     |     |-ImplicitCastExpr 0x1600290b8 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x160029058 <col:7> 'int ()' Function 0x160028fa0 'ldb_dn_alloc_linearized' 'int ()'     |     |-ImplicitCastExpr 0x160029100 <col:31> 'struct ldb_message *' <LValueToRValue>     |     | `-DeclRefExpr 0x160029078 <col:31> 'struct ldb_message *' lvalue Var 0x160027048 'msg' 'struct ldb_message *'     |     `-ImplicitCastExpr 0x160029118 <col:36> 'struct ldb_dn *' <LValueToRValue>     |       `-DeclRefExpr 0x160029098 <col:36> 'struct ldb_dn *' lvalue ParmVar 0x1600267b8 'newdn' 'struct ldb_dn *'     |-IfStmt 0x1600293f8 <line:25:2, line:27:2>     | |-BinaryOperator 0x160029358 <line:25:7, col:40> 'int' contains-errors '||'     | | |-UnaryOperator 0x1600291a0 <col:7, col:9> 'int' prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x160029188 <col:9> 'const char *' <LValueToRValue>     | | |   `-DeclRefExpr 0x160029168 <col:9> 'const char *' lvalue Var 0x1600270f8 'dn' 'const char *'     | | `-UnaryOperator 0x160029340 <col:15, col:40> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-CallExpr 0x160029318 <col:17, col:40> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x160029298 <col:17> 'int ()' Function 0x1600291e0 'ldb_dn_validate' 'int ()'     | |     `-RecoveryExpr 0x1600292f0 <col:33, col:38> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x1600292b8 <col:33> 'struct ldb_message *' lvalue Var 0x160027048 'msg' 'struct ldb_message *'     | `-CompoundStmt 0x1600293e0 <col:43, line:27:2>     |   `-GotoStmt 0x1600293c8 <line:26:3, col:8> 'failed' 0x160029378     |-IfStmt 0x1600296f0 <line:28:2, line:30:2>     | |-BinaryOperator 0x1600296a0 <line:28:6, col:71> 'int' contains-errors '!='     | | |-CallExpr 0x160029660 <col:6, col:66> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x1600294f8 <col:6> 'int ()' Function 0x160029440 'ldb_msg_add_empty' 'int ()'     | | | |-DeclRefExpr 0x160029518 <col:24> 'struct ldb_message *' lvalue Var 0x160027048 'msg' 'struct ldb_message *'     | | | |-RecoveryExpr 0x160029600 <col:29> '<dependent type>' contains-errors lvalue     | | | |-RecoveryExpr 0x160029620 <col:40> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x160029640 <col:62> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x1600295c0 <col:71> 'int' 0     | `-CompoundStmt 0x1600296d8 <col:74, line:30:2>     |   `-GotoStmt 0x1600296c0 <line:29:3, col:8> 'failed' 0x160029378     |-IfStmt 0x1600298c0 <line:31:2, line:33:2>     | |-RecoveryExpr 0x160029870 <line:31:6, col:48> '_Bool' contains-errors     | `-CompoundStmt 0x1600298a8 <col:51, line:33:2>     |   `-GotoStmt 0x160029890 <line:32:3, col:8> 'failed' 0x160029378     |-CallExpr 0x16002a4d0 <line:40:2, col:26> 'int'     | |-ImplicitCastExpr 0x16002a4b8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x16002a478 <col:2> 'int ()' Function 0x16002a3c0 'LDB_REQ_SET_LOCATION' 'int ()'     | `-ImplicitCastExpr 0x16002a4f8 <col:23> 'struct ldb_request *' <LValueToRValue>     |   `-DeclRefExpr 0x16002a498 <col:23> 'struct ldb_request *' lvalue Var 0x160026e58 'req' 'struct ldb_request *'     |-IfStmt 0x16002a580 <line:41:2, line:43:2>     | |-RecoveryExpr 0x16002a530 <line:41:6, col:13> '_Bool' contains-errors     | `-CompoundStmt 0x16002a568 <col:26, line:43:2>     |   `-GotoStmt 0x16002a550 <line:42:3, col:8> 'failed' 0x160029378     |-CallExpr 0x16002a6f8 <line:44:2, col:23> 'int'     | |-ImplicitCastExpr 0x16002a6e0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x16002a680 <col:2> 'int ()' Function 0x16002a5c8 'talloc_steal' 'int ()'     | |-ImplicitCastExpr 0x16002a728 <col:15> 'struct ldb_request *' <LValueToRValue>     | | `-DeclRefExpr 0x16002a6a0 <col:15> 'struct ldb_request *' lvalue Var 0x160026e58 'req' 'struct ldb_request *'     | `-ImplicitCastExpr 0x16002a740 <col:20> 'struct ldb_message *' <LValueToRValue>     |   `-DeclRefExpr 0x16002a6c0 <col:20> 'struct ldb_message *' lvalue Var 0x160027048 'msg' 'struct ldb_message *'     |-ReturnStmt 0x16002a790 <line:46:2, col:9>     | `-ImplicitCastExpr 0x16002a778 <col:9> 'struct ldb_request *' <LValueToRValue>     |   `-DeclRefExpr 0x16002a758 <col:9> 'struct ldb_request *' lvalue Var 0x160026e58 'req' 'struct ldb_request *'     `-LabelStmt 0x16002a918 <line:47:1, line:48:17> 'failed'       `-CallExpr 0x16002a8d8 <col:2, col:17> 'int'         |-ImplicitCastExpr 0x16002a8c0 <col:2> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x16002a880 <col:2> 'int ()' Function 0x16002a7c8 'talloc_free' 'int ()'         `-ImplicitCastExpr 0x16002a900 <col:14> 'struct ldb_message *' <LValueToRValue>           `-DeclRefExpr 0x16002a8a0 <col:14> 'struct ldb_message *' lvalue Var 0x160027048 'msg' 'struct ldb_message *' ","20341":"`-FunctionDecl 0x151928758  line:1:1 scsi_nl_rcv_msg 'int (struct sk_buff *)'   |-ParmVarDecl 0x151928648 <col:17, col:33> col:33 used skb 'struct sk_buff *'   `-CompoundStmt 0x151944a88 <line:2:1, line:71:1>     |-DeclStmt 0x151940c38 <line:3:2, col:22>     | |-RecordDecl 0x151940a50 <col:2, col:9> col:9 struct nlmsghdr     | `-VarDecl 0x151940bb8 <col:2, col:19> col:19 used nlh 'struct nlmsghdr *'     |-DeclStmt 0x151940e38 <line:4:2, col:25>     | |-RecordDecl 0x151940c50 <col:2, col:9> col:9 struct scsi_nl_hdr     | `-VarDecl 0x151940db8 <col:2, col:22> col:22 used hdr 'struct scsi_nl_hdr *'     |-DeclStmt 0x151940f80 <line:6:2, col:16>     | |-VarDecl 0x151940e80 <col:2, col:6> col:6 used err 'int'     | `-VarDecl 0x151940f00 <col:2, col:11> col:11 used tport 'int'     `-WhileStmt 0x151944a68 <line:8:2, line:70:2>       |-BinaryOperator 0x151941050 <line:8:9, col:21> 'int' contains-errors '>='       | |-RecoveryExpr 0x151940fd0 <col:9, col:14> '<dependent type>' contains-errors lvalue       | | `-DeclRefExpr 0x151940f98 <col:9> 'struct sk_buff *' lvalue ParmVar 0x151928648 'skb' 'struct sk_buff *'       | `-RecoveryExpr 0x151941030 <col:21> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x151944a00 <col:35, line:70:2>         |-BinaryOperator 0x1519410b0 <line:9:3, col:9> 'int' '='         | |-DeclRefExpr 0x151941070 <col:3> 'int' lvalue Var 0x151940e80 'err' 'int'         | `-IntegerLiteral 0x151941090 <col:9> 'int' 0         |-BinaryOperator 0x1519412e0 <line:11:3, col:22> 'struct nlmsghdr *' '='         | |-DeclRefExpr 0x1519410d0 <col:3> 'struct nlmsghdr *' lvalue Var 0x151940bb8 'nlh' 'struct nlmsghdr *'         | `-ImplicitCastExpr 0x1519412c8 <col:9, col:22> 'struct nlmsghdr *' <IntegralToPointer>         |   `-CallExpr 0x151941288 <col:9, col:22> 'int'         |     |-ImplicitCastExpr 0x151941270 <col:9> 'int (*)()' <FunctionToPointerDecay>         |     | `-DeclRefExpr 0x151941200 <col:9> 'int ()' Function 0x151941148 'nlmsg_hdr' 'int ()'         |     `-ImplicitCastExpr 0x1519412b0 <col:19> 'struct sk_buff *' <LValueToRValue>         |       `-DeclRefExpr 0x151941220 <col:19> 'struct sk_buff *' lvalue ParmVar 0x151928648 'skb' 'struct sk_buff *'         |-IfStmt 0x1519416a0 <line:12:3, line:17:3>         | |-RecoveryExpr 0x151941540 <line:12:7, line:13:33> '_Bool' contains-errors         | `-CompoundStmt 0x151941688 <col:36, line:17:3>         |   `-ReturnStmt 0x151941678 <line:16:4>         |-IfStmt 0x151942ea0 <line:23:3, line:26:3>         | |-RecoveryExpr 0x1519419e0 <line:23:7, col:26> '_Bool' contains-errors         | `-CompoundStmt 0x151942e88 <col:46, line:26:3>         |   `-GotoStmt 0x151942e70 <line:25:4, col:9> 'next_msg' 0x151942e20         |-BinaryOperator 0x151943070 <line:28:3, col:23> 'struct scsi_nl_hdr *' '='         | |-DeclRefExpr 0x151942ec0 <col:3> 'struct scsi_nl_hdr *' lvalue Var 0x151940db8 'hdr' 'struct scsi_nl_hdr *'         | `-ImplicitCastExpr 0x151943058 <col:9, col:23> 'struct scsi_nl_hdr *' <IntegralToPointer>         |   `-CallExpr 0x151943018 <col:9, col:23> 'int'         |     |-ImplicitCastExpr 0x151943000 <col:9> 'int (*)()' <FunctionToPointerDecay>         |     | `-DeclRefExpr 0x151942fc0 <col:9> 'int ()' Function 0x151942f08 'nlmsg_data' 'int ()'         |     `-ImplicitCastExpr 0x151943040 <col:20> 'struct nlmsghdr *' <LValueToRValue>         |       `-DeclRefExpr 0x151942fe0 <col:20> 'struct nlmsghdr *' lvalue Var 0x151940bb8 'nlh' 'struct nlmsghdr *'         |-IfStmt 0x1519431c0 <line:29:3, line:33:3>         | |-RecoveryExpr 0x151943150 <line:29:7, line:30:35> '_Bool' contains-errors         | `-CompoundStmt 0x1519431a8 <col:38, line:33:3>         |   `-GotoStmt 0x151943190 <line:32:4, col:9> 'next_msg' 0x151942e20         |-IfStmt 0x151943350 <line:35:3, line:38:3>         | |-RecoveryExpr 0x1519432e0 <line:35:7, col:29> '_Bool' contains-errors         | `-CompoundStmt 0x151943338 <col:32, line:38:3>         |   `-GotoStmt 0x151943320 <line:37:4, col:9> 'next_msg' 0x151942e20         |-IfStmt 0x1519435d0 <line:40:3, line:44:3>         | |-RecoveryExpr 0x1519434a0 <line:40:7, col:51> '_Bool' contains-errors         | `-CompoundStmt 0x1519435b8 <col:54, line:44:3>         |   `-GotoStmt 0x1519435a0 <line:43:4, col:9> 'next_msg' 0x151942e20         |-BinaryOperator 0x151943670 <line:47:3, col:16> 'int' contains-errors '='         | |-DeclRefExpr 0x1519435f0 <col:3> 'int' lvalue Var 0x151940f00 'tport' 'int'         | `-RecoveryExpr 0x151943648 <col:11, col:16> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x151943610 <col:11> 'struct scsi_nl_hdr *' lvalue Var 0x151940db8 'hdr' 'struct scsi_nl_hdr *'         |-IfStmt 0x151943968 <line:48:3, line:63:4> has_else         | |-RecoveryExpr 0x1519436b0 <line:48:7, col:16> '_Bool' contains-errors         | |-CompoundStmt 0x151943928 <col:35, line:61:3>         | | `-SwitchStmt 0x151943748 <line:49:4, line:57:4>         | |   |-ImplicitCastExpr 0x151943730 <line:49:12, col:17> '<dependent type>' contains-errors <LValueToRValue>         | |   | `-RecoveryExpr 0x151943708 <col:12, col:17> '<dependent type>' contains-errors lvalue         | |   |   `-DeclRefExpr 0x1519436d0 <col:12> 'struct scsi_nl_hdr *' lvalue Var 0x151940db8 'hdr' 'struct scsi_nl_hdr *'         | |   `-CompoundStmt 0x1519437e8 <col:26, line:57:4>         | |     |-BreakStmt 0x151943790 <line:53:5>         | |     |-DefaultStmt 0x1519437c0 <line:54:4, col:11>         | |     | `-NullStmt 0x1519437b8 <col:11>         | |     `-BreakStmt 0x1519437e0 <line:56:5>         | `-NullStmt 0x151943960 <line:63:4>         `-LabelStmt 0x151943c70 <line:65:1, line:67:29> 'next_msg'           `-IfStmt 0x151943c50 <line:66:3, line:67:29>             |-RecoveryExpr 0x151943a38 <line:66:7, col:45> '_Bool' contains-errors             `-CallExpr 0x151943bd0 <line:67:4, col:29> 'int'               |-ImplicitCastExpr 0x151943bb8 <col:4> 'int (*)()' <FunctionToPointerDecay>               | `-DeclRefExpr 0x151943b38 <col:4> 'int ()' Function 0x151943a80 'netlink_ack' 'int ()'               |-ImplicitCastExpr 0x151943c08 <col:16> 'struct sk_buff *' <LValueToRValue>               | `-DeclRefExpr 0x151943b58 <col:16> 'struct sk_buff *' lvalue ParmVar 0x151928648 'skb' 'struct sk_buff *'               |-ImplicitCastExpr 0x151943c20 <col:21> 'struct nlmsghdr *' <LValueToRValue>               | `-DeclRefExpr 0x151943b78 <col:21> 'struct nlmsghdr *' lvalue Var 0x151940bb8 'nlh' 'struct nlmsghdr *'               `-ImplicitCastExpr 0x151943c38 <col:26> 'int' <LValueToRValue>                 `-DeclRefExpr 0x151943b98 <col:26> 'int' lvalue Var 0x151940e80 'err' 'int' ","20506":"`-FunctionDecl 0x1241438c8  col:16 implicit used strncasecmp 'int (const char *, const char *, unsigned long)' extern   |-ParmVarDecl 0x1241439c8 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x124143a30 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x124143a98 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x124143970 <<invalid sloc>> Implicit 958 ","20295":"`-FunctionDecl 0x146141838  line:1:20 invalid LUKS2_keyslot_info 'int (struct luks2_hdr *, int)'   |-ParmVarDecl 0x146128668 <col:39, col:57> col:57 used hdr 'struct luks2_hdr *'   |-ParmVarDecl 0x1461286e8 <col:62, col:66> col:66 used keyslot 'int'   `-CompoundStmt 0x146142720 <line:2:1, line:18:1>     |-IfStmt 0x146141ac0 <line:3:2, line:4:10>     | |-BinaryOperator 0x146141a58 <line:3:5, col:48> 'int' contains-errors '||'     | | |-BinaryOperator 0x146141a00 <col:5, col:16> 'int' contains-errors '>='     | | | |-DeclRefExpr 0x1461418f0 <col:5> 'int' lvalue ParmVar 0x1461286e8 'keyslot' 'int'     | | | `-RecoveryExpr 0x1461419e0 <col:16> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x146141a38 <col:38, col:48> 'int' '<'     | |   |-ImplicitCastExpr 0x146141a20 <col:38> 'int' <LValueToRValue>     | |   | `-DeclRefExpr 0x146141948 <col:38> 'int' lvalue ParmVar 0x1461286e8 'keyslot' 'int'     | |   `-IntegerLiteral 0x146141968 <col:48> 'int' 0     | `-ReturnStmt 0x146141ab0 <line:4:3, col:10>     |   `-RecoveryExpr 0x146141a90 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x146141da8 <line:6:2, line:7:10>     | |-UnaryOperator 0x146141d48 <line:6:6, col:42> 'int' prefix '!' cannot overflow     | | `-CallExpr 0x146141ce8 <col:7, col:42> 'int'     | |   |-ImplicitCastExpr 0x146141cd0 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x146141c40 <col:7> 'int ()' Function 0x146141b88 'LUKS2_get_keyslot_jobj' 'int ()'     | |   |-ImplicitCastExpr 0x146141d18 <col:30> 'struct luks2_hdr *' <LValueToRValue>     | |   | `-DeclRefExpr 0x146141c60 <col:30> 'struct luks2_hdr *' lvalue ParmVar 0x146128668 'hdr' 'struct luks2_hdr *'     | |   `-ImplicitCastExpr 0x146141d30 <col:35> 'int' <LValueToRValue>     | |     `-DeclRefExpr 0x146141c80 <col:35> 'int' lvalue ParmVar 0x1461286e8 'keyslot' 'int'     | `-ReturnStmt 0x146141d98 <line:7:3, col:10>     |   `-RecoveryExpr 0x146141d78 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1461421e0 <line:9:2, line:11:10>     | |-BinaryOperator 0x146142178 <line:9:6, line:10:40> 'int' '||'     | | |-BinaryOperator 0x146141fa0 <line:9:6, col:46> 'int' '<'     | | | |-CallExpr 0x146141f20 <col:6, col:42> 'int'     | | | | |-ImplicitCastExpr 0x146141f08 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | | | `-DeclRefExpr 0x146141ea8 <col:6> 'int ()' Function 0x146141df0 'LUKS2_digest_by_keyslot' 'int ()'     | | | | |-ImplicitCastExpr 0x146141f50 <col:30> 'struct luks2_hdr *' <LValueToRValue>     | | | | | `-DeclRefExpr 0x146141ec8 <col:30> 'struct luks2_hdr *' lvalue ParmVar 0x146128668 'hdr' 'struct luks2_hdr *'     | | | | `-ImplicitCastExpr 0x146141f68 <col:35> 'int' <LValueToRValue>     | | | |   `-DeclRefExpr 0x146141ee8 <col:35> 'int' lvalue ParmVar 0x1461286e8 'keyslot' 'int'     | | | `-IntegerLiteral 0x146141f80 <col:46> 'int' 0     | | `-CallExpr 0x146142118 <line:10:6, col:40> 'int'     | |   |-ImplicitCastExpr 0x146142100 <col:6> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x1461420a0 <col:6> 'int ()' Function 0x146141fe8 'LUKS2_keyslot_unbound' 'int ()'     | |   |-ImplicitCastExpr 0x146142148 <col:28> 'struct luks2_hdr *' <LValueToRValue>     | |   | `-DeclRefExpr 0x1461420c0 <col:28> 'struct luks2_hdr *' lvalue ParmVar 0x146128668 'hdr' 'struct luks2_hdr *'     | |   `-ImplicitCastExpr 0x146142160 <col:33> 'int' <LValueToRValue>     | |     `-DeclRefExpr 0x1461420e0 <col:33> 'int' lvalue ParmVar 0x1461286e8 'keyslot' 'int'     | `-ReturnStmt 0x1461421d0 <line:11:3, col:10>     |   `-RecoveryExpr 0x1461421b0 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1461426b8 <line:13:2, line:15:10>     | |-BinaryOperator 0x146142650 <line:13:6, line:14:68> 'int' contains-errors '&&'     | | |-BinaryOperator 0x1461425c0 <line:13:6, col:64> 'int' contains-errors '=='     | | | |-CallExpr 0x146142590 <col:6, col:59> '<dependent type>' contains-errors     | | | | |-DeclRefExpr 0x1461422e0 <col:6> 'int ()' Function 0x146142228 'LUKS2_keyslot_active_count' 'int ()'     | | | | |-DeclRefExpr 0x146142300 <col:33> 'struct luks2_hdr *' lvalue ParmVar 0x146128668 'hdr' 'struct luks2_hdr *'     | | | | `-RecoveryExpr 0x146142570 <col:38> '<dependent type>' contains-errors lvalue     | | | `-IntegerLiteral 0x146142368 <col:64> 'int' 1     | | `-UnaryOperator 0x146142638 <line:14:6, col:68> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-CallExpr 0x146142600 <col:7, col:68> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x146142488 <col:7> 'int ()' Function 0x1461423d0 'LUKS2_keyslot_for_segment' 'int ()'     | |     |-DeclRefExpr 0x1461424a8 <col:33> 'struct luks2_hdr *' lvalue ParmVar 0x146128668 'hdr' 'struct luks2_hdr *'     | |     |-DeclRefExpr 0x1461424c8 <col:38> 'int' lvalue ParmVar 0x1461286e8 'keyslot' 'int'     | |     `-RecoveryExpr 0x1461425e0 <col:47> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1461426a8 <line:15:3, col:10>     |   `-RecoveryExpr 0x146142688 <col:10> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x146142710 <line:17:2, col:9>       `-RecoveryExpr 0x1461426f0 <col:9> '<dependent type>' contains-errors lvalue ","20335":"`-FunctionDecl 0x136127c88  line:1:12 invalid jp2_pclr_getdata 'int (int *, int *)' static   |-ParmVarDecl 0x136127b28 <col:29, col:40> col:40 invalid box 'int *'   |-ParmVarDecl 0x136127ba8 <col:45, col:59> col:59 invalid in 'int *'   `-CompoundStmt 0x136142ef0 <line:2:1, line:37:1>     |-DeclStmt 0x136127ea0 <line:4:2, col:13>     | `-VarDecl 0x136127e38 <col:2, col:6> col:6 used lutsize 'int'     |-DeclStmt 0x136127f38 <line:5:2, col:16>     | `-VarDecl 0x136127ed0 <col:2, col:15> col:15 used i 'unsigned int'     |-DeclStmt 0x136127fd0 <line:6:2, col:16>     | `-VarDecl 0x136127f68 <col:2, col:15> col:15 used j 'unsigned int'     |-IfStmt 0x136141610 <line:11:2, line:14:2>     | |-BinaryOperator 0x136141590 <line:11:6, line:12:36> 'int' contains-errors '||'     | | |-CallExpr 0x1361414b0 <line:11:6, col:41> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x136128160 <col:6> 'int ()' Function 0x1361280a8 'jp2_getuint16' 'int ()'     | | | |-RecoveryExpr 0x136128180 <col:20> '<dependent type>' contains-errors lvalue     | | | `-UnaryOperator 0x136141498 <col:24, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-CXXDependentScopeMemberExpr 0x136141450 <col:25, col:31> '<dependent type>' contains-errors lvalue ->numlutents     | | |     `-RecoveryExpr 0x136141430 <col:25> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x136141560 <line:12:4, col:36> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x136141328 <col:4> 'int ()' Function 0x136141270 'jp2_getuint8' 'int ()'     | |   |-RecoveryExpr 0x136141348 <col:17> '<dependent type>' contains-errors lvalue     | |   `-UnaryOperator 0x136141548 <col:21, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-CXXDependentScopeMemberExpr 0x136141500 <col:22, col:28> '<dependent type>' contains-errors lvalue ->numchans     | |       `-RecoveryExpr 0x1361414e0 <col:22> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1361415f8 <col:39, line:14:2>     |   `-ReturnStmt 0x1361415e8 <line:13:3, col:11>     |     `-UnaryOperator 0x1361415d0 <col:10, col:11> 'int' prefix '-'     |       `-IntegerLiteral 0x1361415b0 <col:11> 'int' 1     |-BinaryOperator 0x136141840 <line:15:2, col:37> 'int' contains-errors '='     | |-DeclRefExpr 0x136141630 <col:2> 'int' lvalue Var 0x136127e38 'lutsize' 'int'     | `-BinaryOperator 0x136141820 <col:12, col:37> '<dependent type>' contains-errors '*'     |   |-CXXDependentScopeMemberExpr 0x136141770 <col:12, col:18> '<dependent type>' contains-errors lvalue ->numlutents     |   | `-RecoveryExpr 0x136141750 <col:12> '<dependent type>' contains-errors lvalue     |   `-CXXDependentScopeMemberExpr 0x1361417d8 <col:31, col:37> '<dependent type>' contains-errors lvalue ->numchans     |     `-RecoveryExpr 0x1361417b8 <col:31> '<dependent type>' contains-errors lvalue     |-IfStmt 0x136141a78 <line:16:2, line:18:2>     | |-RecoveryExpr 0x1361419f8 <line:16:6, col:66> '_Bool' contains-errors     | `-CompoundStmt 0x136141a60 <col:69, line:18:2>     |   `-ReturnStmt 0x136141a50 <line:17:3, col:11>     |     `-UnaryOperator 0x136141a38 <col:10, col:11> 'int' prefix '-'     |       `-IntegerLiteral 0x136141a18 <col:11> 'int' 1     |-IfStmt 0x136141c10 <line:19:2, line:21:2>     | |-RecoveryExpr 0x136141b90 <line:19:6, col:69> '_Bool' contains-errors     | `-CompoundStmt 0x136141bf8 <col:72, line:21:2>     |   `-ReturnStmt 0x136141be8 <line:20:3, col:11>     |     `-UnaryOperator 0x136141bd0 <col:10, col:11> 'int' prefix '-'     |       `-IntegerLiteral 0x136141bb0 <col:11> 'int' 1     |-ForStmt 0x136141f80 <line:22:2, line:26:2>     | |-BinaryOperator 0x136141c88 <line:22:7, col:11> 'unsigned int' '='     | | |-DeclRefExpr 0x136141c30 <col:7> 'unsigned int' lvalue Var 0x136127ed0 'i' 'unsigned int'     | | `-ImplicitCastExpr 0x136141c70 <col:11> 'unsigned int' <IntegralCast>     | |   `-IntegerLiteral 0x136141c50 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x136141db0 <col:14, col:24> 'int' contains-errors '<'     | | |-DeclRefExpr 0x136141ca8 <col:14> 'unsigned int' lvalue Var 0x136127ed0 'i' 'unsigned int'     | | `-CXXDependentScopeMemberExpr 0x136141d68 <col:18, col:24> '<dependent type>' contains-errors lvalue ->numchans     | |   `-RecoveryExpr 0x136141d48 <col:18> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x136141df0 <col:34, col:36> 'unsigned int' prefix '++'     | | `-DeclRefExpr 0x136141dd0 <col:36> 'unsigned int' lvalue Var 0x136127ed0 'i' 'unsigned int'     | `-CompoundStmt 0x136141f68 <col:39, line:26:2>     |   `-IfStmt 0x136141f48 <line:23:3, line:25:3>     |     |-RecoveryExpr 0x136141ec8 <line:23:7, col:37> '_Bool' contains-errors     |     `-CompoundStmt 0x136141f30 <col:40, line:25:3>     |       `-ReturnStmt 0x136141f20 <line:24:4, col:12>     |         `-UnaryOperator 0x136141f08 <col:11, col:12> 'int' prefix '-'     |           `-IntegerLiteral 0x136141ee8 <col:12> 'int' 1     `-ReturnStmt 0x136142ee0 <line:36:2, col:9>       `-IntegerLiteral 0x136142ec0 <col:9> 'int' 0 ","21072":"`-FunctionDecl 0x154128358  line:1:6 _do_fork 'long (unsigned long, unsigned long, unsigned long, int)'   |-ParmVarDecl 0x1541280d8 <col:15, col:29> col:29 used clone_flags 'unsigned long'   |-ParmVarDecl 0x154128158 <line:2:8, col:22> col:22 used stack_start 'unsigned long'   |-ParmVarDecl 0x1541281d8 <line:3:8, col:22> col:22 used stack_size 'unsigned long'   |-ParmVarDecl 0x154128258 <line:4:8, col:12> col:12 __user 'int'   `-CompoundStmt 0x154149718 <line:7:1, line:63:1>     |-DeclStmt 0x154128658 <line:8:2, col:23>     | |-RecordDecl 0x154128468 <col:2, col:9> col:9 struct task_struct     | `-VarDecl 0x1541285d8 <col:2, col:22> col:22 used p 'struct task_struct *'     |-DeclStmt 0x154128710 <line:9:2, col:15>     | `-VarDecl 0x154128688 <col:2, col:14> col:6 used trace 'int' cinit     |   `-IntegerLiteral 0x1541286f0 <col:14> 'int' 0     |-DeclStmt 0x1541287a8 <line:10:2, col:9>     | `-VarDecl 0x154128740 <col:2, col:7> col:7 used nr 'long'     |-IfStmt 0x1541411b8 <line:13:2, line:23:2>     | |-RecoveryExpr 0x154140a38 <line:13:6, col:36> '_Bool' contains-errors     | `-CompoundStmt 0x154141198 <col:39, line:23:2>     |   |-IfStmt 0x154140d78 <line:14:3, line:19:12> has_else     |   | |-BinaryOperator 0x154140ad0 <line:14:7, col:21> '<dependent type>' contains-errors '&'     |   | | |-DeclRefExpr 0x154140a58 <col:7> 'unsigned long' lvalue ParmVar 0x1541280d8 'clone_flags' 'unsigned long'     |   | | `-RecoveryExpr 0x154140ab0 <col:21> '<dependent type>' contains-errors lvalue     |   | |-BinaryOperator 0x154140b68 <line:15:4, col:12> 'int' contains-errors '='     |   | | |-DeclRefExpr 0x154140af0 <col:4> 'int' lvalue Var 0x154128688 'trace' 'int'     |   | | `-RecoveryExpr 0x154140b48 <col:12> '<dependent type>' contains-errors lvalue     |   | `-IfStmt 0x154140d48 <line:16:8, line:19:12> has_else     |   |   |-RecoveryExpr 0x154140bf8 <line:16:12, col:39> '_Bool' contains-errors     |   |   |-BinaryOperator 0x154140c90 <line:17:4, col:12> 'int' contains-errors '='     |   |   | |-DeclRefExpr 0x154140c18 <col:4> 'int' lvalue Var 0x154128688 'trace' 'int'     |   |   | `-RecoveryExpr 0x154140c70 <col:12> '<dependent type>' contains-errors lvalue     |   |   `-BinaryOperator 0x154140d28 <line:19:4, col:12> 'int' contains-errors '='     |   |     |-DeclRefExpr 0x154140cb0 <col:4> 'int' lvalue Var 0x154128688 'trace' 'int'     |   |     `-RecoveryExpr 0x154140d08 <col:12> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x154141178 <line:21:3, line:22:12>     |     |-CallExpr 0x1541410f0 <line:21:7, col:51> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x154140ec0 <col:7> 'int ()' Function 0x154140e08 'likely' 'int ()'     |     | `-UnaryOperator 0x1541410d8 <col:14, col:50> '<dependent type>' contains-errors prefix '!' cannot overflow     |     |   `-CallExpr 0x1541410a8 <col:15, col:50> '<dependent type>' contains-errors     |     |     |-DeclRefExpr 0x154140fc0 <col:15> 'int ()' Function 0x154140f08 'ptrace_event_enabled' 'int ()'     |     |     |-RecoveryExpr 0x154141088 <col:36> '<dependent type>' contains-errors lvalue     |     |     `-DeclRefExpr 0x154140ff8 <col:45> 'int' lvalue Var 0x154128688 'trace' 'int'     |     `-BinaryOperator 0x154141158 <line:22:4, col:12> 'int' '='     |       |-DeclRefExpr 0x154141118 <col:4> 'int' lvalue Var 0x154128688 'trace' 'int'     |       `-IntegerLiteral 0x154141138 <col:12> 'int' 0     |-BinaryOperator 0x154141538 <line:25:2, line:26:49> 'struct task_struct *' contains-errors '='     | |-DeclRefExpr 0x1541411d8 <line:25:2> 'struct task_struct *' lvalue Var 0x1541285d8 'p' 'struct task_struct *'     | `-CallExpr 0x1541414d8 <col:6, line:26:49> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1541412d8 <line:25:6> 'int ()' Function 0x154141220 'copy_process' 'int ()'     |   |-DeclRefExpr 0x1541412f8 <col:19> 'unsigned long' lvalue ParmVar 0x1541280d8 'clone_flags' 'unsigned long'     |   |-DeclRefExpr 0x154141318 <col:32> 'unsigned long' lvalue ParmVar 0x154128158 'stack_start' 'unsigned long'     |   |-DeclRefExpr 0x154141338 <col:45> 'unsigned long' lvalue ParmVar 0x1541281d8 'stack_size' 'unsigned long'     |   |-RecoveryExpr 0x154141458 <line:26:5> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x154141478 <col:19> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x154141388 <col:25> 'int' lvalue Var 0x154128688 'trace' 'int'     |   |-RecoveryExpr 0x154141498 <col:32> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x1541414b8 <col:37> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1541416a8 <line:27:2, col:21> 'int'     | `-ImplicitCastExpr 0x154141690 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x154141638 <col:2> 'int ()' Function 0x154141580 'add_latent_entropy' 'int ()'     |-IfStmt 0x1541496a0 <line:29:2, line:61:2> has_else     | |-UnaryOperator 0x154141840 <line:29:6, col:15> 'int' prefix '!' cannot overflow     | | `-CallExpr 0x154141800 <col:7, col:15> 'int'     | |   |-ImplicitCastExpr 0x1541417e8 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x1541417a8 <col:7> 'int ()' Function 0x1541416f0 'IS_ERR' 'int ()'     | |   `-ImplicitCastExpr 0x154141828 <col:14> 'struct task_struct *' <LValueToRValue>     | |     `-DeclRefExpr 0x1541417c8 <col:14> 'struct task_struct *' lvalue Var 0x1541285d8 'p' 'struct task_struct *'     | |-CompoundStmt 0x154149468 <col:18, line:59:2>     | | |-DeclStmt 0x154143008 <line:30:3, col:26>     | | | |-RecordDecl 0x154141858 <col:3, col:10> col:10 struct completion     | | | `-VarDecl 0x154141958 <col:3, col:21> col:21 invalid vfork 'struct completion'     | | |-DeclStmt 0x154143208 <line:31:3, col:18>     | | | |-RecordDecl 0x154143020 <col:3, col:10> col:10 struct pid     | | | `-VarDecl 0x154143188 <col:3, col:15> col:15 used pid 'struct pid *'     | | |-BinaryOperator 0x154143630 <line:36:3, col:19> 'long' '='     | | | |-DeclRefExpr 0x154143480 <col:3> 'long' lvalue Var 0x154128740 'nr' 'long'     | | | `-ImplicitCastExpr 0x154143618 <col:8, col:19> 'long' <IntegralCast>     | | |   `-CallExpr 0x1541435d8 <col:8, col:19> 'int'     | | |     |-ImplicitCastExpr 0x1541435c0 <col:8> 'int (*)()' <FunctionToPointerDecay>     | | |     | `-DeclRefExpr 0x154143580 <col:8> 'int ()' Function 0x1541434c8 'pid_vnr' 'int ()'     | | |     `-ImplicitCastExpr 0x154143600 <col:16> 'struct pid *' <LValueToRValue>     | | |       `-DeclRefExpr 0x1541435a0 <col:16> 'struct pid *' lvalue Var 0x154143188 'pid' 'struct pid *'     | | |-IfStmt 0x154143ba8 <line:41:3, line:45:3>     | | | |-RecoveryExpr 0x1541437d0 <line:41:7, col:21> '_Bool' contains-errors     | | | `-CompoundStmt 0x154143b80 <col:34, line:45:3>     | | |   |-BinaryOperator 0x154143888 <line:42:4, col:21> '<dependent type>' contains-errors '='     | | |   | |-RecoveryExpr 0x154143828 <col:4, col:7> '<dependent type>' contains-errors lvalue     | | |   | | `-DeclRefExpr 0x1541437f0 <col:4> 'struct task_struct *' lvalue Var 0x1541285d8 'p' 'struct task_struct *'     | | |   | `-UnaryOperator 0x154143870 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   |   `-RecoveryExpr 0x154143850 <col:21> '<dependent type>' contains-errors lvalue     | | |   |-CallExpr 0x1541439e0 <line:43:4, col:26> '<dependent type>' contains-errors     | | |   | |-DeclRefExpr 0x154143988 <col:4> 'int ()' Function 0x1541438d0 'init_completion' 'int ()'     | | |   | `-UnaryOperator 0x1541439c8 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   |   `-RecoveryExpr 0x1541439a8 <col:21> '<dependent type>' contains-errors lvalue     | | |   `-CallExpr 0x154143b40 <line:44:4, col:21> 'int'     | | |     |-ImplicitCastExpr 0x154143b28 <col:4> 'int (*)()' <FunctionToPointerDecay>     | | |     | `-DeclRefExpr 0x154143ae8 <col:4> 'int ()' Function 0x154143a30 'get_task_struct' 'int ()'     | | |     `-ImplicitCastExpr 0x154143b68 <col:20> 'struct task_struct *' <LValueToRValue>     | | |       `-DeclRefExpr 0x154143b08 <col:20> 'struct task_struct *' lvalue Var 0x1541285d8 'p' 'struct task_struct *'     | | |-CallExpr 0x154148d10 <line:47:3, col:21> 'int'     | | | |-ImplicitCastExpr 0x154148cf8 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x154148cb8 <col:3> 'int ()' Function 0x154148c00 'wake_up_new_task' 'int ()'     | | | `-ImplicitCastExpr 0x154148d38 <col:20> 'struct task_struct *' <LValueToRValue>     | | |   `-DeclRefExpr 0x154148cd8 <col:20> 'struct task_struct *' lvalue Var 0x1541285d8 'p' 'struct task_struct *'     | | |-IfStmt 0x154149080 <line:50:3, line:51:31>     | | | |-CallExpr 0x154148e88 <line:50:7, col:21> 'int'     | | | | |-ImplicitCastExpr 0x154148e70 <col:7> 'int (*)()' <FunctionToPointerDecay>     | | | | | `-DeclRefExpr 0x154148e30 <col:7> 'int ()' Function 0x154148d78 'unlikely' 'int ()'     | | | | `-ImplicitCastExpr 0x154148eb0 <col:16> 'int' <LValueToRValue>     | | | |   `-DeclRefExpr 0x154148e50 <col:16> 'int' lvalue Var 0x154128688 'trace' 'int'     | | | `-CallExpr 0x154149020 <line:51:4, col:31> 'int'     | | |   |-ImplicitCastExpr 0x154149008 <col:4> 'int (*)()' <FunctionToPointerDecay>     | | |   | `-DeclRefExpr 0x154148fa8 <col:4> 'int ()' Function 0x154148ef0 'ptrace_event_pid' 'int ()'     | | |   |-ImplicitCastExpr 0x154149050 <col:21> 'int' <LValueToRValue>     | | |   | `-DeclRefExpr 0x154148fc8 <col:21> 'int' lvalue Var 0x154128688 'trace' 'int'     | | |   `-ImplicitCastExpr 0x154149068 <col:28> 'struct pid *' <LValueToRValue>     | | |     `-DeclRefExpr 0x154148fe8 <col:28> 'struct pid *' lvalue Var 0x154143188 'pid' 'struct pid *'     | | |-IfStmt 0x1541492d0 <line:53:3, line:56:3>     | | | |-RecoveryExpr 0x1541490c0 <line:53:7, col:21> '_Bool' contains-errors     | | | `-CompoundStmt 0x1541492c0 <col:34, line:56:3>     | | `-CallExpr 0x154149428 <line:58:3, col:14> 'int'     | |   |-ImplicitCastExpr 0x154149410 <col:3> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x1541493d0 <col:3> 'int ()' Function 0x154149318 'put_pid' 'int ()'     | |   `-ImplicitCastExpr 0x154149450 <col:11> 'struct pid *' <LValueToRValue>     | |     `-DeclRefExpr 0x1541493f0 <col:11> 'struct pid *' lvalue Var 0x154143188 'pid' 'struct pid *'     | `-CompoundStmt 0x154149688 <line:59:9, line:61:2>     |   `-BinaryOperator 0x154149668 <line:60:3, col:17> 'long' '='     |     |-DeclRefExpr 0x1541494b8 <col:3> 'long' lvalue Var 0x154128740 'nr' 'long'     |     `-ImplicitCastExpr 0x154149650 <col:8, col:17> 'long' <IntegralCast>     |       `-CallExpr 0x154149610 <col:8, col:17> 'int'     |         |-ImplicitCastExpr 0x1541495f8 <col:8> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x1541495b8 <col:8> 'int ()' Function 0x154149500 'PTR_ERR' 'int ()'     |         `-ImplicitCastExpr 0x154149638 <col:16> 'struct task_struct *' <LValueToRValue>     |           `-DeclRefExpr 0x1541495d8 <col:16> 'struct task_struct *' lvalue Var 0x1541285d8 'p' 'struct task_struct *'     `-ReturnStmt 0x154149708 <line:62:2, col:9>       `-ImplicitCastExpr 0x1541496f0 <col:9> 'long' <LValueToRValue>         `-DeclRefExpr 0x1541496d0 <col:9> 'long' lvalue Var 0x154128740 'nr' 'long' ","20567":"`-FunctionDecl 0x132928750  line:1:13 __sco_sock_close 'void (struct sock *)' static   |-ParmVarDecl 0x132928648 <col:30, col:43> col:43 used sk 'struct sock *'   `-CompoundStmt 0x132942e58 <line:2:1, line:33:1>     |-CallExpr 0x132940cd0 <line:3:2, col:47> '<dependent type>' contains-errors     | |-DeclRefExpr 0x132940b70 <col:2> 'int ()' Function 0x132940ab8 'BT_DBG' 'int ()'     | |-StringLiteral 0x132940bd0 <col:9> 'char[4]' lvalue \"STR\"     | |-DeclRefExpr 0x132940bf0 <col:16> 'struct sock *' lvalue ParmVar 0x132928648 'sk' 'struct sock *'     | |-RecoveryExpr 0x132940c48 <col:20, col:24> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x132940c10 <col:20> 'struct sock *' lvalue ParmVar 0x132928648 'sk' 'struct sock *'     | `-RecoveryExpr 0x132940ca8 <col:34, col:38> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x132940c70 <col:34> 'struct sock *' lvalue ParmVar 0x132928648 'sk' 'struct sock *'     `-SwitchStmt 0x132940d88 <line:5:2, line:32:2>       |-ImplicitCastExpr 0x132940d70 <line:5:10, col:14> '<dependent type>' contains-errors <LValueToRValue>       | `-RecoveryExpr 0x132940d48 <col:10, col:14> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x132940d10 <col:10> 'struct sock *' lvalue ParmVar 0x132928648 'sk' 'struct sock *'       `-CompoundStmt 0x132942e10 <col:24, line:32:2>         |-CallExpr 0x132940f38 <line:7:3, col:29> 'int'         | |-ImplicitCastExpr 0x132940f20 <col:3> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x132940ea8 <col:3> 'int ()' Function 0x132940df0 'sco_sock_cleanup_listen' 'int ()'         | `-ImplicitCastExpr 0x132940f60 <col:27> 'struct sock *' <LValueToRValue>         |   `-DeclRefExpr 0x132940ec8 <col:27> 'struct sock *' lvalue ParmVar 0x132928648 'sk' 'struct sock *'         |-BreakStmt 0x132940f78 <line:8:3>         |-IfStmt 0x132942c40 <line:12:3, line:20:4> has_else         | |-CXXDependentScopeMemberExpr 0x132941150 <line:12:7, col:25> '<dependent type>' contains-errors lvalue ->hcon         | | `-RecoveryExpr 0x132941128 <col:7, col:19> '<dependent type>' contains-errors lvalue         | |   `-CallExpr 0x1329410e8 <col:7, col:16> 'int'         | |     |-ImplicitCastExpr 0x1329410d0 <col:7> 'int (*)()' <FunctionToPointerDecay>         | |     | `-DeclRefExpr 0x132941090 <col:7> 'int ()' Function 0x132940fd8 'sco_pi' 'int ()'         | |     `-ImplicitCastExpr 0x132941110 <col:14> 'struct sock *' <LValueToRValue>         | |       `-DeclRefExpr 0x1329410b0 <col:14> 'struct sock *' lvalue ParmVar 0x132928648 'sk' 'struct sock *'         | |-CompoundStmt 0x132942ad8 <col:31, line:19:3>         | | |-BinaryOperator 0x132941250 <line:13:4, col:19> '<dependent type>' contains-errors '='         | | | |-RecoveryExpr 0x1329411d0 <col:4, col:8> '<dependent type>' contains-errors lvalue         | | | | `-DeclRefExpr 0x132941198 <col:4> 'struct sock *' lvalue ParmVar 0x132928648 'sk' 'struct sock *'         | | | `-RecoveryExpr 0x132941230 <col:19> '<dependent type>' contains-errors lvalue         | | |-CallExpr 0x1329413f8 <line:14:4, col:46> '<dependent type>' contains-errors         | | | |-DeclRefExpr 0x132941350 <col:4> 'int ()' Function 0x132941298 'sco_sock_set_timer' 'int ()'         | | | |-DeclRefExpr 0x132941370 <col:23> 'struct sock *' lvalue ParmVar 0x132928648 'sk' 'struct sock *'         | | | `-RecoveryExpr 0x1329413d8 <col:27> '<dependent type>' contains-errors lvalue         | | |-CallExpr 0x1329415e8 <line:15:4, col:34> '<dependent type>' contains-errors         | | | |-DeclRefExpr 0x132941508 <col:4> 'int ()' Function 0x132941450 'sco_conn_lock' 'int ()'         | | | `-RecoveryExpr 0x1329415c0 <col:18, col:30> '<dependent type>' contains-errors lvalue         | | |   `-CallExpr 0x132941580 <col:18, col:27> 'int'         | | |     |-ImplicitCastExpr 0x132941568 <col:18> 'int (*)()' <FunctionToPointerDecay>         | | |     | `-DeclRefExpr 0x132941528 <col:18> 'int ()' Function 0x132940fd8 'sco_pi' 'int ()'         | | |     `-ImplicitCastExpr 0x1329415a8 <col:25> 'struct sock *' <LValueToRValue>         | | |       `-DeclRefExpr 0x132941548 <col:25> 'struct sock *' lvalue ParmVar 0x132928648 'sk' 'struct sock *'         | | |-CallExpr 0x132941818 <line:16:4, col:40> '<dependent type>' contains-errors         | | | |-DeclRefExpr 0x1329416f0 <col:4> 'int ()' Function 0x132941638 'hci_conn_drop' 'int ()'         | | | `-CXXDependentScopeMemberExpr 0x1329417d0 <col:18, col:36> '<dependent type>' contains-errors lvalue ->hcon         | | |   `-RecoveryExpr 0x1329417a8 <col:18, col:30> '<dependent type>' contains-errors lvalue         | | |     `-CallExpr 0x132941768 <col:18, col:27> 'int'         | | |       |-ImplicitCastExpr 0x132941750 <col:18> 'int (*)()' <FunctionToPointerDecay>         | | |       | `-DeclRefExpr 0x132941710 <col:18> 'int ()' Function 0x132940fd8 'sco_pi' 'int ()'         | | |       `-ImplicitCastExpr 0x132941790 <col:25> 'struct sock *' <LValueToRValue>         | | |         `-DeclRefExpr 0x132941730 <col:25> 'struct sock *' lvalue ParmVar 0x132928648 'sk' 'struct sock *'         | | |-BinaryOperator 0x1329428d0 <line:17:4, col:29> '<dependent type>' contains-errors '='         | | | |-CXXDependentScopeMemberExpr 0x132942868 <col:4, col:22> '<dependent type>' contains-errors lvalue ->hcon         | | | | `-RecoveryExpr 0x132942840 <col:4, col:16> '<dependent type>' contains-errors lvalue         | | | |   `-CallExpr 0x132942800 <col:4, col:13> 'int'         | | | |     |-ImplicitCastExpr 0x1329419d8 <col:4> 'int (*)()' <FunctionToPointerDecay>         | | | |     | `-DeclRefExpr 0x132941840 <col:4> 'int ()' Function 0x132940fd8 'sco_pi' 'int ()'         | | | |     `-ImplicitCastExpr 0x132942828 <col:11> 'struct sock *' <LValueToRValue>         | | | |       `-DeclRefExpr 0x132941860 <col:11> 'struct sock *' lvalue ParmVar 0x132928648 'sk' 'struct sock *'         | | | `-RecoveryExpr 0x1329428b0 <col:29> '<dependent type>' contains-errors lvalue         | | `-CallExpr 0x132942ab0 <line:18:4, col:36> '<dependent type>' contains-errors         | |   |-DeclRefExpr 0x1329429d0 <col:4> 'int ()' Function 0x132942918 'sco_conn_unlock' 'int ()'         | |   `-RecoveryExpr 0x132942a88 <col:20, col:32> '<dependent type>' contains-errors lvalue         | |     `-CallExpr 0x132942a48 <col:20, col:29> 'int'         | |       |-ImplicitCastExpr 0x132942a30 <col:20> 'int (*)()' <FunctionToPointerDecay>         | |       | `-DeclRefExpr 0x1329429f0 <col:20> 'int ()' Function 0x132940fd8 'sco_pi' 'int ()'         | |       `-ImplicitCastExpr 0x132942a70 <col:27> 'struct sock *' <LValueToRValue>         | |         `-DeclRefExpr 0x132942a10 <col:27> 'struct sock *' lvalue ParmVar 0x132928648 'sk' 'struct sock *'         | `-NullStmt 0x132942c38 <line:20:4>         |-BreakStmt 0x132942c70 <line:21:3>         |-BreakStmt 0x132942cb8 <line:27:3>         |-DefaultStmt 0x132942de8 <line:29:2, col:9>         | `-NullStmt 0x132942de0 <col:9>         `-BreakStmt 0x132942e08 <line:31:3> ","20866":"`-FunctionDecl 0x122940b28  line:1:12 put_v4l2_standard32 'int (struct v4l2_standard *, struct v4l2_standard32)' static   |-ParmVarDecl 0x122928648 <col:32, col:54> col:54 used kp 'struct v4l2_standard *'   |-ParmVarDecl 0x122940a00 <col:58, col:81> col:81 invalid __user 'struct v4l2_standard32'   `-CompoundStmt 0x1229417b8 <line:2:1, line:13:1>     `-ReturnStmt 0x1229417a8 <line:12:2, col:9>       `-IntegerLiteral 0x122941788 <col:9> 'int' 0 ","21080":"`-FunctionDecl 0x121128288  line:1:8 invalid ftab_dump 'int (int *, int *)'   |-ParmVarDecl 0x121128128 <col:18, col:26> col:26 invalid a 'int *'   |-ParmVarDecl 0x1211281a8 <col:29, col:36> col:36 invalid trace 'int *'   `-CompoundStmt 0x121141e28 <line:2:1, line:15:1>     |-CallExpr 0x121128590 <line:5:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1211284d0 <col:2> 'int ()' Function 0x121128418 'gf_isom_box_dump_start' 'int ()'     | |-RecoveryExpr 0x1211284f0 <col:25> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x121128550 <col:28> 'char[4]' lvalue \"STR\"     | `-RecoveryExpr 0x121128570 <col:35> '<dependent type>' contains-errors lvalue     |-CallExpr 0x121128708 <line:6:2, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1211286a8 <col:2> 'int ()' Function 0x1211285f0 'fprintf' 'int ()'     | |-RecoveryExpr 0x1211286c8 <col:10> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x1211286e8 <col:17> 'char[4]' lvalue \"STR\"     |-ForStmt 0x121141a20 <line:7:2, line:9:2>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-BinaryOperator 0x1211418f0 <line:7:12, col:17> 'int' contains-errors '<'     | | |-RecoveryExpr 0x121141868 <col:12> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x1211418a8 <col:14, col:17> '<dependent type>' contains-errors lvalue ->entry_count     | |   `-RecoveryExpr 0x121141888 <col:14> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x121141960 <col:30, col:31> '<dependent type>' contains-errors postfix '++' cannot overflow     | | `-RecoveryExpr 0x121141940 <col:30> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x121141a08 <col:35, line:9:2>     |   `-CallExpr 0x1211419d8 <line:8:3, col:23> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x121141978 <col:3> 'int ()' Function 0x1211285f0 'fprintf' 'int ()'     |     |-RecoveryExpr 0x121141998 <col:11> '<dependent type>' contains-errors lvalue     |     `-StringLiteral 0x1211419b8 <col:18> 'char[4]' lvalue \"STR\"     |-IfStmt 0x121141c28 <line:10:2, line:12:2>     | |-UnaryOperator 0x121141b68 <line:10:6, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x121141b50 <col:7, col:10> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x121141b08 <col:7, col:10> '<dependent type>' contains-errors lvalue ->size     | |     `-RecoveryExpr 0x121141ae8 <col:7> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x121141c10 <col:16, line:12:2>     |   `-CallExpr 0x121141be0 <line:11:3, col:23> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x121141b80 <col:3> 'int ()' Function 0x1211285f0 'fprintf' 'int ()'     |     |-RecoveryExpr 0x121141ba0 <col:11> '<dependent type>' contains-errors lvalue     |     `-StringLiteral 0x121141bc0 <col:18> 'char[4]' lvalue \"STR\"     |-CallExpr 0x121141da8 <line:13:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x121141d28 <col:2> 'int ()' Function 0x121141c70 'gf_isom_box_dump_done' 'int ()'     | |-StringLiteral 0x121141d48 <col:24> 'char[4]' lvalue \"STR\"     | |-RecoveryExpr 0x121141d68 <col:31> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x121141d88 <col:34> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x121141e18 <line:14:2, col:9>       `-RecoveryExpr 0x121141df8 <col:9> '<dependent type>' contains-errors lvalue ","20803":"`-FunctionDecl 0x1609131d8  line:1:5 invalid blk_rq_map_user_iov 'int (struct request_queue *, struct request *, struct rq_map_data *, const struct iov_iter *, int)'   |-ParmVarDecl 0x1608fa848 <col:25, col:47> col:47 used q 'struct request_queue *'   |-ParmVarDecl 0x160912c28 <col:50, col:66> col:66 used rq 'struct request *'   |-ParmVarDecl 0x160912df8 <line:2:4, col:24> col:24 used map_data 'struct rq_map_data *'   |-ParmVarDecl 0x160912fc8 <line:3:4, col:27> col:27 used iter 'const struct iov_iter *'   |-ParmVarDecl 0x160913060 <col:33, col:39> col:39 invalid gfp_mask 'int'   `-CompoundStmt 0x16091a0e0 <line:4:1, line:35:1>     |-DeclStmt 0x1609135c8 <line:6:2, col:64>     | `-VarDecl 0x1609132c0 <col:2, col:63> col:16 used align 'unsigned long' cinit     |   `-BinaryOperator 0x1609135a8 <col:24, col:63> '<dependent type>' contains-errors '|'     |     |-RecoveryExpr 0x160913360 <col:24, col:27> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x160913328 <col:24> 'struct request_queue *' lvalue ParmVar 0x1608fa848 'q' 'struct request_queue *'     |     `-CallExpr 0x160913568 <col:42, col:63> 'int'     |       |-ImplicitCastExpr 0x160913550 <col:42> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x1609134e0 <col:42> 'int ()' Function 0x160913428 'queue_dma_alignment' 'int ()'     |       `-ImplicitCastExpr 0x160913590 <col:62> 'struct request_queue *' <LValueToRValue>     |         `-DeclRefExpr 0x160913500 <col:62> 'struct request_queue *' lvalue ParmVar 0x1608fa848 'q' 'struct request_queue *'     |-DeclStmt 0x160913800 <line:7:2, col:24>     | |-RecordDecl 0x1609135e0 <col:2, col:9> col:9 struct bio     | `-VarDecl 0x160913748 <col:2, col:20> col:14 used bio 'struct bio *' cinit     |   `-RecoveryExpr 0x1609137c8 <col:20> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x1609138d8 <line:8:2, col:19>     | `-VarDecl 0x160913870 <col:2, col:18> col:18 referenced invalid i 'struct iov_iter'     |-DeclStmt 0x160913970 <line:9:2, col:9>     | `-VarDecl 0x160913908 <col:2, col:6> col:6 used ret 'int'     |-BinaryOperator 0x160919618 <line:18:2, col:7> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1609195a0 <col:2> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x160919580 <col:2> 'struct iov_iter' lvalue Var 0x160913870 'i' 'struct iov_iter'     | `-UnaryOperator 0x160919600 <col:6, col:7> 'const struct iov_iter' lvalue prefix '*' cannot overflow     |   `-ImplicitCastExpr 0x1609195e8 <col:7> 'const struct iov_iter *' <LValueToRValue>     |     `-DeclRefExpr 0x1609195c8 <col:7> 'const struct iov_iter *' lvalue ParmVar 0x160912fc8 'iter' 'const struct iov_iter *'     |-DoStmt 0x160919c50 <line:19:2, line:25:29>     | |-CompoundStmt 0x160919ac8 <line:19:5, line:25:2>     | | |-BinaryOperator 0x1609198d8 <line:20:3, col:62> 'int' contains-errors '='     | | | |-DeclRefExpr 0x160919638 <col:3> 'int' lvalue Var 0x160913908 'ret' 'int'     | | | `-CallExpr 0x160919890 <col:8, col:62> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x160919738 <col:8> 'int ()' Function 0x160919680 '__blk_rq_map_user_iov' 'int ()'     | | |   |-DeclRefExpr 0x160919758 <col:30> 'struct request *' lvalue ParmVar 0x160912c28 'rq' 'struct request *'     | | |   |-DeclRefExpr 0x160919778 <col:34> 'struct rq_map_data *' lvalue ParmVar 0x160912df8 'map_data' 'struct rq_map_data *'     | | |   |-UnaryOperator 0x1609197b8 <col:44, col:45> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   | `-RecoveryExpr 0x160919798 <col:45> '<dependent type>' contains-errors lvalue     | | |   |-RecoveryExpr 0x1609197d0 <col:48> '<dependent type>' contains-errors lvalue     | | |   `-RecoveryExpr 0x160919870 <col:58> '<dependent type>' contains-errors lvalue     | | |-IfStmt 0x160919998 <line:21:3, line:22:9>     | | | |-ImplicitCastExpr 0x160919918 <line:21:7> 'int' <LValueToRValue>     | | | | `-DeclRefExpr 0x1609198f8 <col:7> 'int' lvalue Var 0x160913908 'ret' 'int'     | | | `-GotoStmt 0x160919980 <line:22:4, col:9> 'unmap_rq' 0x160919930     | | `-IfStmt 0x160919aa8 <line:23:3, line:24:14>     | |   |-UnaryOperator 0x1609199f0 <line:23:7, col:8> 'int' contains-errors prefix '!' cannot overflow     | |   | `-ImplicitCastExpr 0x1609199d8 <col:8> 'struct bio *' contains-errors <LValueToRValue>     | |   |   `-DeclRefExpr 0x1609199b8 <col:8> 'struct bio *' contains-errors lvalue Var 0x160913748 'bio' 'struct bio *'     | |   `-BinaryOperator 0x160919a88 <line:24:4, col:14> 'struct bio *' contains-errors '='     | |     |-DeclRefExpr 0x160919a08 <col:4> 'struct bio *' contains-errors lvalue Var 0x160913748 'bio' 'struct bio *'     | |     `-RecoveryExpr 0x160919a60 <col:10, col:14> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x160919a28 <col:10> 'struct request *' lvalue ParmVar 0x160912c28 'rq' 'struct request *'     | `-CallExpr 0x160919c28 <line:25:11, col:28> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x160919bd0 <col:11> 'int ()' Function 0x160919b18 'iov_iter_count' 'int ()'     |   `-UnaryOperator 0x160919c10 <col:26, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x160919bf0 <col:27> '<dependent type>' contains-errors lvalue     |-ReturnStmt 0x160919ed8 <line:29:2, col:9>     | `-IntegerLiteral 0x160919eb8 <col:9> 'int' 0     `-LabelStmt 0x16091a060 <line:31:1, line:32:25> 'unmap_rq'       `-CallExpr 0x16091a020 <col:2, col:25> 'int' contains-errors         |-ImplicitCastExpr 0x16091a008 <col:2> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x160919fc8 <col:2> 'int ()' Function 0x160919f10 '__blk_rq_unmap_user' 'int ()'         `-ImplicitCastExpr 0x16091a048 <col:22> 'struct bio *' contains-errors <LValueToRValue>           `-DeclRefExpr 0x160919fe8 <col:22> 'struct bio *' contains-errors lvalue Var 0x160913748 'bio' 'struct bio *' ","21011":"`-FunctionDecl 0x14100e038  line:1:13 get_net_ns_by_id 'struct net *(struct net *, int)'   |-ParmVarDecl 0x14100de18 <col:30, col:42> col:42 used net 'struct net *'   |-ParmVarDecl 0x14100de98 <col:47, col:51> col:51 used id 'int'   `-CompoundStmt 0x14102cd40 <line:2:1, line:17:1>     |-DeclStmt 0x14100e1c8 <line:3:2, col:18>     | `-VarDecl 0x14100e160 <col:2, col:14> col:14 used peer 'struct net *'     |-IfStmt 0x14100e2b8 <line:5:2, line:6:10>     | |-BinaryOperator 0x14100e238 <line:5:6, col:11> 'int' '<'     | | |-ImplicitCastExpr 0x14100e220 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x14100e1e0 <col:6> 'int' lvalue ParmVar 0x14100de98 'id' 'int'     | | `-IntegerLiteral 0x14100e200 <col:11> 'int' 0     | `-ReturnStmt 0x14100e2a8 <line:6:3, col:10>     |   `-RecoveryExpr 0x14100e288 <col:10> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14102c068 <line:8:2, col:16> 'int'     | `-ImplicitCastExpr 0x14102c050 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x14102c000 <col:2> 'int ()' Function 0x14100e338 'rcu_read_lock' 'int ()'     |-CallExpr 0x14102c620 <line:9:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14102c168 <col:2> 'int ()' Function 0x14102c0b0 'spin_lock_bh' 'int ()'     | `-UnaryOperator 0x14102c608 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14102c5e0 <col:16, col:21> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14102c188 <col:16> 'struct net *' lvalue ParmVar 0x14100de18 'net' 'struct net *'     |-BinaryOperator 0x14102c830 <line:10:2, col:37> 'struct net *' contains-errors '='     | |-DeclRefExpr 0x14102c648 <col:2> 'struct net *' lvalue Var 0x14100e160 'peer' 'struct net *'     | `-CallExpr 0x14102c800 <col:9, col:37> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14102c748 <col:9> 'int ()' Function 0x14102c690 'idr_find' 'int ()'     |   |-UnaryOperator 0x14102c7c8 <col:18, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x14102c7a0 <col:19, col:24> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14102c768 <col:19> 'struct net *' lvalue ParmVar 0x14100de18 'net' 'struct net *'     |   `-DeclRefExpr 0x14102c7e0 <col:35> 'int' lvalue ParmVar 0x14100de98 'id' 'int'     |-IfStmt 0x14102ca00 <line:11:2, line:12:15>     | |-ImplicitCastExpr 0x14102c870 <line:11:6> 'struct net *' <LValueToRValue>     | | `-DeclRefExpr 0x14102c850 <col:6> 'struct net *' lvalue Var 0x14100e160 'peer' 'struct net *'     | `-CallExpr 0x14102c9c0 <line:12:3, col:15> 'int'     |   |-ImplicitCastExpr 0x14102c9a8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14102c968 <col:3> 'int ()' Function 0x14102c8b0 'get_net' 'int ()'     |   `-ImplicitCastExpr 0x14102c9e8 <col:11> 'struct net *' <LValueToRValue>     |     `-DeclRefExpr 0x14102c988 <col:11> 'struct net *' lvalue Var 0x14100e160 'peer' 'struct net *'     |-CallExpr 0x14102cb98 <line:13:2, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14102cb00 <col:2> 'int ()' Function 0x14102ca48 'spin_unlock_bh' 'int ()'     | `-UnaryOperator 0x14102cb80 <col:17, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14102cb58 <col:18, col:23> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14102cb20 <col:18> 'struct net *' lvalue ParmVar 0x14100de18 'net' 'struct net *'     |-CallExpr 0x14102ccd8 <line:14:2, col:18> 'int'     | `-ImplicitCastExpr 0x14102ccc0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x14102cca0 <col:2> 'int ()' Function 0x14102cbe8 'rcu_read_unlock' 'int ()'     `-ReturnStmt 0x14102cd30 <line:16:2, col:9>       `-ImplicitCastExpr 0x14102cd18 <col:9> 'struct net *' <LValueToRValue>         `-DeclRefExpr 0x14102ccf8 <col:9> 'struct net *' lvalue Var 0x14100e160 'peer' 'struct net *' ","21205":"`-FunctionDecl 0x123140a00  line:1:1 ensure_space 'int (struct interface *, int)'   |-ParmVarDecl 0x123128648 <col:14, col:32> col:32 used ifp 'struct interface *'   |-ParmVarDecl 0x1231286c8 <col:37, col:41> col:41 used space 'int'   `-CompoundStmt 0x1231410d0 <line:2:1, line:6:1>     `-IfStmt 0x1231410b0 <line:4:5, line:5:21>       |-BinaryOperator 0x123140f18 <line:4:8, col:51> 'int' contains-errors '<'       | |-BinaryOperator 0x123140ef8 <col:8, col:40> '<dependent type>' contains-errors '-'       | | |-CXXDependentScopeMemberExpr 0x123140e48 <col:8, col:19> '<dependent type>' contains-errors lvalue ->bufsize       | | | `-RecoveryExpr 0x123140e28 <col:8> '<dependent type>' contains-errors lvalue       | | `-CXXDependentScopeMemberExpr 0x123140eb0 <col:29, col:40> '<dependent type>' contains-errors lvalue ->buffered       | |   `-RecoveryExpr 0x123140e90 <col:29> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x123140de8 <col:51> 'int' lvalue ParmVar 0x1231286c8 'space' 'int'       `-CallExpr 0x123141070 <line:5:9, col:21> 'int'         |-ImplicitCastExpr 0x123141058 <col:9> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x123141018 <col:9> 'int ()' Function 0x123140f60 'flushbuf' 'int ()'         `-ImplicitCastExpr 0x123141098 <col:18> 'struct interface *' <LValueToRValue>           `-DeclRefExpr 0x123141038 <col:18> 'struct interface *' lvalue ParmVar 0x123128648 'ifp' 'struct interface *' ","20616":"`-FunctionDecl 0x138826600  line:1:5 platform_get_irq_byname_optional 'int (struct platform_device *, const char *)'   |-ParmVarDecl 0x13880e248 <col:38, col:62> col:62 used dev 'struct platform_device *'   |-ParmVarDecl 0x13880e2c8 <line:2:10, col:22> col:22 used name 'const char *'   `-CompoundStmt 0x138826948 <line:3:1, line:5:1>     `-ReturnStmt 0x138826938 <line:4:2, col:44>       `-CallExpr 0x1388268d8 <col:9, col:44> 'int'         |-ImplicitCastExpr 0x1388268c0 <col:9> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x138826830 <col:9> 'int ()' Function 0x138826778 '__platform_get_irq_byname' 'int ()'         |-ImplicitCastExpr 0x138826908 <col:35> 'struct platform_device *' <LValueToRValue>         | `-DeclRefExpr 0x138826850 <col:35> 'struct platform_device *' lvalue ParmVar 0x13880e248 'dev' 'struct platform_device *'         `-ImplicitCastExpr 0x138826920 <col:40> 'const char *' <LValueToRValue>           `-DeclRefExpr 0x138826870 <col:40> 'const char *' lvalue ParmVar 0x13880e2c8 'name' 'const char *' ","21144":"`-FunctionDecl 0x12c00e038  line:1:1 invalid GetCode_ 'int (int *, int *, int, int, int *)'   |-ParmVarDecl 0x12c00dd28 <col:10, col:19> col:19 invalid fd 'int *'   |-ParmVarDecl 0x12c00dda8 <col:23, col:41> col:41 referenced invalid scd 'int *'   |-ParmVarDecl 0x12c00de28 <col:46, col:50> col:50 used code_size 'int'   |-ParmVarDecl 0x12c00dea8 <col:61, col:65> col:65 used flag 'int'   |-ParmVarDecl 0x12c00df28 <col:71, col:76> col:76 used ZeroDataBlockP 'int *'   `-CompoundStmt 0x12c0296d0 <line:2:1, line:43:1>     |-DeclStmt 0x12c00e2a8 <line:3:2, col:25>     | |-VarDecl 0x12c00e120 <col:2, col:16> col:16 used i 'int'     | |-VarDecl 0x12c00e1a0 <col:2, col:19> col:19 used j 'int'     | `-VarDecl 0x12c00e220 <col:2, col:22> col:22 used ret 'int'     |-DeclStmt 0x12c00e340 <line:4:2, col:21>     | `-VarDecl 0x12c00e2d8 <col:2, col:16> col:16 used count 'unsigned char'     |-IfStmt 0x12c027798 <line:6:2, line:12:2>     | |-ImplicitCastExpr 0x12c00e378 <line:6:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x12c00e358 <col:6> 'int' lvalue ParmVar 0x12c00dea8 'flag' 'int'     | `-CompoundStmt 0x12c027760 <col:12, line:12:2>     |   |-BinaryOperator 0x12c027468 <line:7:3, col:17> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x12c027400 <col:3, col:8> '<dependent type>' contains-errors lvalue ->curbit     |   | | `-RecoveryExpr 0x12c00e3b0 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x12c00e390 <col:3> 'int *' lvalue ParmVar 0x12c00dda8 'scd' 'int *'     |   | `-IntegerLiteral 0x12c027448 <col:17> 'int' 0     |   |-BinaryOperator 0x12c027538 <line:8:3, col:18> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x12c0274d0 <col:3, col:8> '<dependent type>' contains-errors lvalue ->lastbit     |   | | `-RecoveryExpr 0x12c0274a8 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x12c027488 <col:3> 'int *' lvalue ParmVar 0x12c00dda8 'scd' 'int *'     |   | `-IntegerLiteral 0x12c027518 <col:18> 'int' 0     |   |-BinaryOperator 0x12c027608 <line:9:3, col:20> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x12c0275a0 <col:3, col:8> '<dependent type>' contains-errors lvalue ->last_byte     |   | | `-RecoveryExpr 0x12c027578 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x12c027558 <col:3> 'int *' lvalue ParmVar 0x12c00dda8 'scd' 'int *'     |   | `-IntegerLiteral 0x12c0275e8 <col:20> 'int' 0     |   |-BinaryOperator 0x12c027710 <line:10:3, col:15> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x12c027670 <col:3, col:8> '<dependent type>' contains-errors lvalue ->done     |   | | `-RecoveryExpr 0x12c027648 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x12c027628 <col:3> 'int *' lvalue ParmVar 0x12c00dda8 'scd' 'int *'     |   | `-RecoveryExpr 0x12c0276f0 <col:15> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x12c027750 <line:11:3, col:10>     |     `-IntegerLiteral 0x12c027730 <col:10> 'int' 0     |-IfStmt 0x12c028d88 <line:14:2, line:30:2>     | |-BinaryOperator 0x12c0278e8 <line:14:7, col:41> 'int' contains-errors '>='     | | |-ParenExpr 0x12c027860 <col:7, col:31> '<dependent type>' contains-errors     | | | `-BinaryOperator 0x12c027840 <col:8, col:22> '<dependent type>' contains-errors '+'     | | |   |-CXXDependentScopeMemberExpr 0x12c0277d8 <col:8, col:13> '<dependent type>' contains-errors lvalue ->curbit     | | |   | `-RecoveryExpr 0x12c0277b8 <col:8> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x12c027820 <col:22> 'int' lvalue ParmVar 0x12c00de28 'code_size' 'int'     | | `-CXXDependentScopeMemberExpr 0x12c0278a0 <col:36, col:41> '<dependent type>' contains-errors lvalue ->lastbit     | |   `-RecoveryExpr 0x12c027880 <col:36> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12c028d40 <col:50, line:30:2>     |   |-IfStmt 0x12c027af8 <line:15:3, line:20:3>     |   | |-CXXDependentScopeMemberExpr 0x12c027928 <line:15:7, col:12> '<dependent type>' contains-errors lvalue ->done     |   | | `-RecoveryExpr 0x12c027908 <col:7> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x12c027ad8 <col:18, line:20:3>     |   |   |-IfStmt 0x12c027a70 <line:16:4, line:18:4>     |   |   | |-BinaryOperator 0x12c027a40 <line:16:8, col:28> 'int' contains-errors '>='     |   |   | | |-CXXDependentScopeMemberExpr 0x12c027990 <col:8, col:13> '<dependent type>' contains-errors lvalue ->curbit     |   |   | | | `-RecoveryExpr 0x12c027970 <col:8> '<dependent type>' contains-errors lvalue     |   |   | | `-CXXDependentScopeMemberExpr 0x12c0279f8 <col:23, col:28> '<dependent type>' contains-errors lvalue ->lastbit     |   |   | |   `-RecoveryExpr 0x12c0279d8 <col:23> '<dependent type>' contains-errors lvalue     |   |   | `-CompoundStmt 0x12c027a60 <col:37, line:18:4>     |   |   `-ReturnStmt 0x12c027ac8 <line:19:4, col:12>     |   |     `-UnaryOperator 0x12c027ab0 <col:11, col:12> 'int' prefix '-'     |   |       `-IntegerLiteral 0x12c027a90 <col:12> 'int' 1     |   |-BinaryOperator 0x12c027d48 <line:21:3, col:42> '<dependent type>' contains-errors '='     |   | |-ArraySubscriptExpr 0x12c027be0 <col:3, col:13> '<dependent type>' contains-errors lvalue     |   | | |-ImplicitCastExpr 0x12c027bc8 <col:3, col:8> '<dependent type>' contains-errors <LValueToRValue>     |   | | | `-CXXDependentScopeMemberExpr 0x12c027b60 <col:3, col:8> '<dependent type>' contains-errors lvalue ->buf     |   | | |   `-RecoveryExpr 0x12c027b38 <col:3> '<dependent type>' contains-errors lvalue     |   | | |     `-DeclRefExpr 0x12c027b18 <col:3> 'int *' lvalue ParmVar 0x12c00dda8 'scd' 'int *'     |   | | `-IntegerLiteral 0x12c027ba8 <col:12> 'int' 0     |   | `-ArraySubscriptExpr 0x12c027d28 <col:17, col:42> '<dependent type>' contains-errors lvalue     |   |   |-ImplicitCastExpr 0x12c027d10 <col:17, col:22> '<dependent type>' contains-errors <LValueToRValue>     |   |   | `-CXXDependentScopeMemberExpr 0x12c027c20 <col:17, col:22> '<dependent type>' contains-errors lvalue ->buf     |   |   |   `-RecoveryExpr 0x12c027c00 <col:17> '<dependent type>' contains-errors lvalue     |   |   `-BinaryOperator 0x12c027cf0 <col:26, col:41> '<dependent type>' contains-errors '-'     |   |     |-CXXDependentScopeMemberExpr 0x12c027c88 <col:26, col:31> '<dependent type>' contains-errors lvalue ->last_byte     |   |     | `-RecoveryExpr 0x12c027c68 <col:26> '<dependent type>' contains-errors lvalue     |   |     `-IntegerLiteral 0x12c027cd0 <col:41> 'int' 2     |   |-BinaryOperator 0x12c027f98 <line:22:3, col:42> '<dependent type>' contains-errors '='     |   | |-ArraySubscriptExpr 0x12c027e30 <col:3, col:13> '<dependent type>' contains-errors lvalue     |   | | |-ImplicitCastExpr 0x12c027e18 <col:3, col:8> '<dependent type>' contains-errors <LValueToRValue>     |   | | | `-CXXDependentScopeMemberExpr 0x12c027db0 <col:3, col:8> '<dependent type>' contains-errors lvalue ->buf     |   | | |   `-RecoveryExpr 0x12c027d88 <col:3> '<dependent type>' contains-errors lvalue     |   | | |     `-DeclRefExpr 0x12c027d68 <col:3> 'int *' lvalue ParmVar 0x12c00dda8 'scd' 'int *'     |   | | `-IntegerLiteral 0x12c027df8 <col:12> 'int' 1     |   | `-ArraySubscriptExpr 0x12c027f78 <col:17, col:42> '<dependent type>' contains-errors lvalue     |   |   |-ImplicitCastExpr 0x12c027f60 <col:17, col:22> '<dependent type>' contains-errors <LValueToRValue>     |   |   | `-CXXDependentScopeMemberExpr 0x12c027e70 <col:17, col:22> '<dependent type>' contains-errors lvalue ->buf     |   |   |   `-RecoveryExpr 0x12c027e50 <col:17> '<dependent type>' contains-errors lvalue     |   |   `-BinaryOperator 0x12c027f40 <col:26, col:41> '<dependent type>' contains-errors '-'     |   |     |-CXXDependentScopeMemberExpr 0x12c027ed8 <col:26, col:31> '<dependent type>' contains-errors lvalue ->last_byte     |   |     | `-RecoveryExpr 0x12c027eb8 <col:26> '<dependent type>' contains-errors lvalue     |   |     `-IntegerLiteral 0x12c027f20 <col:41> 'int' 1     |   |-IfStmt 0x12c028840 <line:24:16, line:25:16>     |   | |-BinaryOperator 0x12c028300 <line:24:20, col:80> 'int' contains-errors '<='     |   | | |-ParenExpr 0x12c0282c0 <col:20, col:75> 'unsigned char' contains-errors     |   | | | `-BinaryOperator 0x12c0282a0 <col:21, col:74> 'unsigned char' contains-errors '='     |   | | |   |-DeclRefExpr 0x12c027fb8 <col:21> 'unsigned char' lvalue Var 0x12c00e2d8 'count' 'unsigned char'     |   | | |   `-CallExpr 0x12c028268 <col:29, col:74> '<dependent type>' contains-errors     |   | | |     |-DeclRefExpr 0x12c028130 <col:29> 'int ()' Function 0x12c028078 'GetDataBlock' 'int ()'     |   | | |     |-RecoveryExpr 0x12c028150 <col:42> '<dependent type>' contains-errors lvalue     |   | | |     |-UnaryOperator 0x12c028230 <col:46, col:57> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | |     | `-ArraySubscriptExpr 0x12c028210 <col:47, col:57> '<dependent type>' contains-errors lvalue     |   | | |     |   |-ImplicitCastExpr 0x12c0281f8 <col:47, col:52> '<dependent type>' contains-errors <LValueToRValue>     |   | | |     |   | `-CXXDependentScopeMemberExpr 0x12c028190 <col:47, col:52> '<dependent type>' contains-errors lvalue ->buf     |   | | |     |   |   `-RecoveryExpr 0x12c028170 <col:47> '<dependent type>' contains-errors lvalue     |   | | |     |   `-IntegerLiteral 0x12c0281d8 <col:56> 'int' 2     |   | | |     `-DeclRefExpr 0x12c028248 <col:60> 'int *' lvalue ParmVar 0x12c00df28 'ZeroDataBlockP' 'int *'     |   | | `-IntegerLiteral 0x12c0282e0 <col:80> 'int' 0     |   | `-BinaryOperator 0x12c028820 <line:25:4, col:16> '<dependent type>' contains-errors '='     |   |   |-CXXDependentScopeMemberExpr 0x12c028368 <col:4, col:9> '<dependent type>' contains-errors lvalue ->done     |   |   | `-RecoveryExpr 0x12c028340 <col:4> '<dependent type>' contains-errors lvalue     |   |   |   `-DeclRefExpr 0x12c028320 <col:4> 'int *' lvalue ParmVar 0x12c00dda8 'scd' 'int *'     |   |   `-RecoveryExpr 0x12c028800 <col:16> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x12c028980 <line:27:3, col:24> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x12c0288a8 <col:3, col:8> '<dependent type>' contains-errors lvalue ->last_byte     |   | | `-RecoveryExpr 0x12c028880 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x12c028860 <col:3> 'int *' lvalue ParmVar 0x12c00dda8 'scd' 'int *'     |   | `-BinaryOperator 0x12c028960 <col:20, col:24> 'int' '+'     |   |   |-IntegerLiteral 0x12c0288f0 <col:20> 'int' 2     |   |   `-ImplicitCastExpr 0x12c028948 <col:24> 'int' <IntegralCast>     |   |     `-ImplicitCastExpr 0x12c028930 <col:24> 'unsigned char' <LValueToRValue>     |   |       `-DeclRefExpr 0x12c028910 <col:24> 'unsigned char' lvalue Var 0x12c00e2d8 'count' 'unsigned char'     |   |-BinaryOperator 0x12c028b80 <line:28:3, col:48> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x12c0289e8 <col:3, col:8> '<dependent type>' contains-errors lvalue ->curbit     |   | | `-RecoveryExpr 0x12c0289c0 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x12c0289a0 <col:3> 'int *' lvalue ParmVar 0x12c00dda8 'scd' 'int *'     |   | `-BinaryOperator 0x12c028b60 <col:17, col:48> '<dependent type>' contains-errors '+'     |   |   |-ParenExpr 0x12c028b20 <col:17, col:44> '<dependent type>' contains-errors     |   |   | `-BinaryOperator 0x12c028b00 <col:18, col:37> '<dependent type>' contains-errors '-'     |   |   |   |-CXXDependentScopeMemberExpr 0x12c028a50 <col:18, col:23> '<dependent type>' contains-errors lvalue ->curbit     |   |   |   | `-RecoveryExpr 0x12c028a30 <col:18> '<dependent type>' contains-errors lvalue     |   |   |   `-CXXDependentScopeMemberExpr 0x12c028ab8 <col:32, col:37> '<dependent type>' contains-errors lvalue ->lastbit     |   |   |     `-RecoveryExpr 0x12c028a98 <col:32> '<dependent type>' contains-errors lvalue     |   |   `-IntegerLiteral 0x12c028b40 <col:48> 'int' 16     |   `-BinaryOperator 0x12c028d20 <line:29:3, col:28> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x12c028be8 <col:3, col:8> '<dependent type>' contains-errors lvalue ->lastbit     |     | `-RecoveryExpr 0x12c028bc0 <col:3> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x12c028ba0 <col:3> 'int *' lvalue ParmVar 0x12c00dda8 'scd' 'int *'     |     `-BinaryOperator 0x12c028d00 <col:18, col:28> 'int' '*'     |       |-ParenExpr 0x12c028cc0 <col:18, col:26> 'int'     |       | `-BinaryOperator 0x12c028ca0 <col:19, col:21> 'int' '+'     |       |   |-IntegerLiteral 0x12c028c30 <col:19> 'int' 2     |       |   `-ImplicitCastExpr 0x12c028c88 <col:21> 'int' <IntegralCast>     |       |     `-ImplicitCastExpr 0x12c028c70 <col:21> 'unsigned char' <LValueToRValue>     |       |       `-DeclRefExpr 0x12c028c50 <col:21> 'unsigned char' lvalue Var 0x12c00e2d8 'count' 'unsigned char'     |       `-IntegerLiteral 0x12c028ce0 <col:28> 'int' 8     |-BinaryOperator 0x12c028de8 <line:32:2, col:8> 'int' '='     | |-DeclRefExpr 0x12c028da8 <col:2> 'int' lvalue Var 0x12c00e220 'ret' 'int'     | `-IntegerLiteral 0x12c028dc8 <col:8> 'int' 0     |-ForStmt 0x12c029570 <line:33:2, line:39:3>     | |-BinaryOperator 0x12c028f10 <line:33:7, col:28> 'int' contains-errors ','     | | |-BinaryOperator 0x12c028e90 <col:7, col:16> 'int' contains-errors '='     | | | |-DeclRefExpr 0x12c028e08 <col:7> 'int' lvalue Var 0x12c00e120 'i' 'int'     | | | `-CXXDependentScopeMemberExpr 0x12c028e48 <col:11, col:16> '<dependent type>' contains-errors lvalue ->curbit     | | |   `-RecoveryExpr 0x12c028e28 <col:11> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x12c028ef0 <col:24, col:28> 'int' '='     | |   |-DeclRefExpr 0x12c028eb0 <col:24> 'int' lvalue Var 0x12c00e1a0 'j' 'int'     | |   `-IntegerLiteral 0x12c028ed0 <col:28> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x12c028fa0 <col:31, col:35> 'int' '<'     | | |-ImplicitCastExpr 0x12c028f70 <col:31> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x12c028f30 <col:31> 'int' lvalue Var 0x12c00e1a0 'j' 'int'     | | `-ImplicitCastExpr 0x12c028f88 <col:35> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x12c028f50 <col:35> 'int' lvalue ParmVar 0x12c00de28 'code_size' 'int'     | |-BinaryOperator 0x12c029030 <col:46, col:53> 'int' ','     | | |-UnaryOperator 0x12c028fe0 <col:46, col:48> 'int' prefix '++'     | | | `-DeclRefExpr 0x12c028fc0 <col:48> 'int' lvalue Var 0x12c00e120 'i' 'int'     | | `-UnaryOperator 0x12c029018 <col:51, col:53> 'int' prefix '++'     | |   `-DeclRefExpr 0x12c028ff8 <col:53> 'int' lvalue Var 0x12c00e1a0 'j' 'int'     | `-IfStmt 0x12c029540 <line:34:3, line:39:3> has_else     |   |-BinaryOperator 0x12c029128 <line:34:7, col:26> 'int' contains-errors '<'     |   | |-DeclRefExpr 0x12c029050 <col:7> 'int' lvalue Var 0x12c00e120 'i' 'int'     |   | `-BinaryOperator 0x12c029108 <col:11, col:26> '<dependent type>' contains-errors '*'     |   |   |-RecoveryExpr 0x12c0290e8 <col:11> '<dependent type>' contains-errors lvalue     |   |   `-IntegerLiteral 0x12c029088 <col:26> 'int' 8     |   |-CompoundStmt 0x12c029488 <col:29, line:36:3>     |   | `-CompoundAssignOperator 0x12c029458 <line:35:4, col:56> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |   |-DeclRefExpr 0x12c029148 <col:4> 'int' lvalue Var 0x12c00e220 'ret' 'int'     |   |   `-BinaryOperator 0x12c029438 <col:11, col:56> '<dependent type>' contains-errors '<<'     |   |     |-ParenExpr 0x12c0293f8 <col:11, col:51> 'int' contains-errors     |   |     | `-BinaryOperator 0x12c0293d8 <col:12, col:50> 'int' contains-errors '!='     |   |     |   |-ParenExpr 0x12c029398 <col:12, col:45> '<dependent type>' contains-errors     |   |     |   | `-BinaryOperator 0x12c029378 <col:13, col:44> '<dependent type>' contains-errors '&'     |   |     |   |   |-ArraySubscriptExpr 0x12c029260 <col:13, col:27> '<dependent type>' contains-errors lvalue     |   |     |   |   | |-ImplicitCastExpr 0x12c029248 <col:13, col:18> '<dependent type>' contains-errors <LValueToRValue>     |   |     |   |   | | `-CXXDependentScopeMemberExpr 0x12c029188 <col:13, col:18> '<dependent type>' contains-errors lvalue ->buf     |   |     |   |   | |   `-RecoveryExpr 0x12c029168 <col:13> '<dependent type>' contains-errors lvalue     |   |     |   |   | `-BinaryOperator 0x12c029228 <col:22, col:26> 'int' '\/'     |   |     |   |   |   |-ImplicitCastExpr 0x12c029210 <col:22> 'int' <LValueToRValue>     |   |     |   |   |   | `-DeclRefExpr 0x12c0291d0 <col:22> 'int' lvalue Var 0x12c00e120 'i' 'int'     |   |     |   |   |   `-IntegerLiteral 0x12c0291f0 <col:26> 'int' 8     |   |     |   |   `-ParenExpr 0x12c029358 <col:31, col:44> 'int'     |   |     |   |     `-BinaryOperator 0x12c029338 <col:32, col:43> 'int' '<<'     |   |     |   |       |-IntegerLiteral 0x12c029280 <col:32> 'int' 1     |   |     |   |       `-ParenExpr 0x12c029318 <col:37, col:43> 'int'     |   |     |   |         `-BinaryOperator 0x12c0292f8 <col:38, col:42> 'int' '%'     |   |     |   |           |-ImplicitCastExpr 0x12c0292e0 <col:38> 'int' <LValueToRValue>     |   |     |   |           | `-DeclRefExpr 0x12c0292a0 <col:38> 'int' lvalue Var 0x12c00e120 'i' 'int'     |   |     |   |           `-IntegerLiteral 0x12c0292c0 <col:42> 'int' 8     |   |     |   `-IntegerLiteral 0x12c0293b8 <col:50> 'int' 0     |   |     `-DeclRefExpr 0x12c029418 <col:56> 'int' lvalue Var 0x12c00e1a0 'j' 'int'     |   `-CompoundStmt 0x12c029520 <line:36:10, line:39:3>     |     |-BinaryOperator 0x12c0294f8 <line:37:4, col:11> 'int' '='     |     | |-DeclRefExpr 0x12c0294a0 <col:4> 'int' lvalue Var 0x12c00e220 'ret' 'int'     |     | `-UnaryOperator 0x12c0294e0 <col:10, col:11> 'int' prefix '-'     |     |   `-IntegerLiteral 0x12c0294c0 <col:11> 'int' 1     |     `-BreakStmt 0x12c029518 <line:38:4>     |-CompoundAssignOperator 0x12c029658 <line:41:2, col:17> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-CXXDependentScopeMemberExpr 0x12c0295f0 <col:2, col:7> '<dependent type>' contains-errors lvalue ->curbit     | | `-RecoveryExpr 0x12c0295c8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12c0295a8 <col:2> 'int *' lvalue ParmVar 0x12c00dda8 'scd' 'int *'     | `-DeclRefExpr 0x12c029638 <col:17> 'int' lvalue ParmVar 0x12c00de28 'code_size' 'int'     `-ReturnStmt 0x12c0296c0 <line:42:2, col:9>       `-ImplicitCastExpr 0x12c0296a8 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x12c029688 <col:9> 'int' lvalue Var 0x12c00e220 'ret' 'int' ","21177":"`-FunctionDecl 0x13c116750  line:1:13 tipc_sk_timeout 'void (struct timer_list *)' static   |-ParmVarDecl 0x13c116648 <col:29, col:48> col:48 used t 'struct timer_list *'   `-CompoundStmt 0x13c810108 <line:2:1, line:36:1>     |-DeclStmt 0x13e008670 <line:3:2, col:47>     | |-RecordDecl 0x13e008248 <col:2, col:9> col:9 struct sock     | `-VarDecl 0x13e0083b8 <col:2, col:46> col:15 used sk 'struct sock *' cinit     |   `-CallExpr 0x13e008620 <col:20, col:46> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x13e008550 <col:20> 'int ()' Function 0x13e008498 'from_timer' 'int ()'     |     |-DeclRefExpr 0x13e008570 <col:31> 'struct sock *' lvalue Var 0x13e0083b8 'sk' 'struct sock *'     |     |-DeclRefExpr 0x13e008590 <col:35> 'struct timer_list *' lvalue ParmVar 0x13c116648 't' 'struct timer_list *'     |     `-RecoveryExpr 0x13e008600 <col:38> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x13e008a38 <line:4:2, col:37>     | |-RecordDecl 0x13e008688 <col:2, col:9> col:9 struct tipc_sock     | `-VarDecl 0x13e0087f8 <col:2, col:36> col:20 used tsk 'struct tipc_sock *' cinit     |   `-ImplicitCastExpr 0x13e008a08 <col:26, col:36> 'struct tipc_sock *' contains-errors <IntegralToPointer>     |     `-CallExpr 0x13e0089c8 <col:26, col:36> 'int' contains-errors     |       |-ImplicitCastExpr 0x13e0089b0 <col:26> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x13e008940 <col:26> 'int ()' Function 0x13e008888 'tipc_sk' 'int ()'     |       `-ImplicitCastExpr 0x13e0089f0 <col:34> 'struct sock *' contains-errors <LValueToRValue>     |         `-DeclRefExpr 0x13e008960 <col:34> 'struct sock *' contains-errors lvalue Var 0x13e0083b8 'sk' 'struct sock *'     |-DeclStmt 0x13e008bc8 <line:6:2, col:26>     | |-RecordDecl 0x13e008a50 <col:2, col:9> col:9 struct sk_buff_head     | `-VarDecl 0x13e008b48 <col:2, col:22> col:22 invalid list 'struct sk_buff_head'     |-DeclStmt 0x13e008c80 <line:7:2, col:12>     | `-VarDecl 0x13e008bf8 <col:2, col:11> col:6 used rc 'int' cinit     |   `-IntegerLiteral 0x13e008c60 <col:11> 'int' 0     |-CallExpr 0x13e008dd0 <line:9:2, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13e008d78 <col:2> 'int ()' Function 0x13e008cc0 '__skb_queue_head_init' 'int ()'     | `-UnaryOperator 0x13e008db8 <col:24, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13e008d98 <col:25> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13e008f30 <line:10:2, col:17> 'int' contains-errors     | |-ImplicitCastExpr 0x13e008f18 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13e008ed8 <col:2> 'int ()' Function 0x13e008e20 'bh_lock_sock' 'int ()'     | `-ImplicitCastExpr 0x13e008f58 <col:15> 'struct sock *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x13e008ef8 <col:15> 'struct sock *' contains-errors lvalue Var 0x13e0083b8 'sk' 'struct sock *'     |-IfStmt 0x13d80cb48 <line:13:2, line:18:2>     | |-CallExpr 0x13e0090a8 <line:13:6, col:27> 'int' contains-errors     | | |-ImplicitCastExpr 0x13e009090 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x13e009050 <col:6> 'int ()' Function 0x13e008f98 'sock_owned_by_user' 'int ()'     | | `-ImplicitCastExpr 0x13e0090d0 <col:25> 'struct sock *' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x13e009070 <col:25> 'struct sock *' contains-errors lvalue Var 0x13e0083b8 'sk' 'struct sock *'     | `-CompoundStmt 0x13d80cb18 <col:30, line:18:2>     |   |-CallExpr 0x13d80c7e0 <line:14:3, col:54> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13e0091c8 <col:3> 'int ()' Function 0x13e009110 'sk_reset_timer' 'int ()'     |   | |-DeclRefExpr 0x13d80c600 <col:18> 'struct sock *' contains-errors lvalue Var 0x13e0083b8 'sk' 'struct sock *'     |   | |-UnaryOperator 0x13d80c680 <col:22, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-RecoveryExpr 0x13d80c658 <col:23, col:27> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x13d80c620 <col:23> 'struct sock *' contains-errors lvalue Var 0x13e0083b8 'sk' 'struct sock *'     |   | `-BinaryOperator 0x13d80c7c0 <col:37, col:52> '<dependent type>' contains-errors '+'     |   |   |-RecoveryExpr 0x13d80c760 <col:37> '<dependent type>' contains-errors lvalue     |   |   `-BinaryOperator 0x13d80c7a0 <col:47, col:52> '<dependent type>' contains-errors '\/'     |   |     |-RecoveryExpr 0x13d80c780 <col:47> '<dependent type>' contains-errors lvalue     |   |     `-IntegerLiteral 0x13d80c6c8 <col:52> 'int' 20     |   |-CallExpr 0x13d80c950 <line:15:3, col:20> 'int' contains-errors     |   | |-ImplicitCastExpr 0x13d80c938 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x13d80c8f8 <col:3> 'int ()' Function 0x13d80c840 'bh_unlock_sock' 'int ()'     |   | `-ImplicitCastExpr 0x13d80c978 <col:18> 'struct sock *' contains-errors <LValueToRValue>     |   |   `-DeclRefExpr 0x13d80c918 <col:18> 'struct sock *' contains-errors lvalue Var 0x13e0083b8 'sk' 'struct sock *'     |   |-CallExpr 0x13d80cac8 <line:16:3, col:14> 'int' contains-errors     |   | |-ImplicitCastExpr 0x13d80cab0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x13d80ca70 <col:3> 'int ()' Function 0x13d80c9b8 'sock_put' 'int ()'     |   | `-ImplicitCastExpr 0x13d80caf0 <col:12> 'struct sock *' contains-errors <LValueToRValue>     |   |   `-DeclRefExpr 0x13d80ca90 <col:12> 'struct sock *' contains-errors lvalue Var 0x13e0083b8 'sk' 'struct sock *'     |   `-ReturnStmt 0x13d80cb08 <line:17:3>     |-IfStmt 0x13d80d048 <line:20:2, line:23:34> has_else     | |-BinaryOperator 0x13d80cc20 <line:20:6, col:22> 'int' contains-errors '=='     | | |-RecoveryExpr 0x13d80cba0 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x13d80cb68 <col:6> 'struct sock *' contains-errors lvalue Var 0x13e0083b8 'sk' 'struct sock *'     | | `-RecoveryExpr 0x13d80cc00 <col:22> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x13d80cd98 <line:21:3, col:40> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x13d80cd20 <col:3> 'int ()' Function 0x13d80cc68 'tipc_sk_check_probing_state' 'int ()'     | | |-DeclRefExpr 0x13d80cd40 <col:31> 'struct sock *' contains-errors lvalue Var 0x13e0083b8 'sk' 'struct sock *'     | | `-UnaryOperator 0x13d80cd80 <col:35, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x13d80cd60 <col:36> '<dependent type>' contains-errors lvalue     | `-IfStmt 0x13d80d028 <line:22:7, line:23:34>     |   |-BinaryOperator 0x13d80ce80 <line:22:11, col:27> 'int' contains-errors '=='     |   | |-RecoveryExpr 0x13d80ce00 <col:11, col:15> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x13d80cdc8 <col:11> 'struct sock *' contains-errors lvalue Var 0x13e0083b8 'sk' 'struct sock *'     |   | `-RecoveryExpr 0x13d80ce60 <col:27> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x13d80cff8 <line:23:3, col:34> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x13d80cf80 <col:3> 'int ()' Function 0x13d80cec8 'tipc_sk_retry_connect' 'int ()'     |     |-DeclRefExpr 0x13d80cfa0 <col:25> 'struct sock *' contains-errors lvalue Var 0x13e0083b8 'sk' 'struct sock *'     |     `-UnaryOperator 0x13d80cfe0 <col:29, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x13d80cfc0 <col:30> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13d80d0d0 <line:25:2, col:19> 'int' contains-errors     | |-ImplicitCastExpr 0x13d80d0b8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13d80d078 <col:2> 'int ()' Function 0x13d80c840 'bh_unlock_sock' 'int ()'     | `-ImplicitCastExpr 0x13d80d0f8 <col:17> 'struct sock *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x13d80d098 <col:17> 'struct sock *' contains-errors lvalue Var 0x13e0083b8 'sk' 'struct sock *'     |-IfStmt 0x13c810050 <line:31:2, line:34:2>     | |-RecoveryExpr 0x13d80d5d8 <line:31:6, col:13> '_Bool' contains-errors     | `-CompoundStmt 0x13c810038 <col:24, line:34:2>     |   `-BinaryOperator 0x13c810018 <line:33:3, col:24> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x13c80ffd0 <col:3, col:8> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x13c80ff98 <col:3> 'struct tipc_sock *' contains-errors lvalue Var 0x13e0087f8 'tsk' 'struct tipc_sock *'     |     `-IntegerLiteral 0x13c80fff8 <col:24> 'int' 1     `-CallExpr 0x13c8100c8 <line:35:2, col:13> 'int' contains-errors       |-ImplicitCastExpr 0x13c8100b0 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x13c810070 <col:2> 'int ()' Function 0x13d80c9b8 'sock_put' 'int ()'       `-ImplicitCastExpr 0x13c8100f0 <col:11> 'struct sock *' contains-errors <LValueToRValue>         `-DeclRefExpr 0x13c810090 <col:11> 'struct sock *' contains-errors lvalue Var 0x13e0083b8 'sk' 'struct sock *' ","21148":"`-FunctionDecl 0x13f026688  line:1:12 putreg 'int (struct task_struct *, unsigned long, unsigned long)' static   |-ParmVarDecl 0x13f00e248 <col:19, col:39> col:39 used child 'struct task_struct *'   |-ParmVarDecl 0x13f00e2c8 <line:2:2, col:16> col:16 used regno 'unsigned long'   |-ParmVarDecl 0x13f00e348 <col:23, col:37> col:37 used value 'unsigned long'   `-CompoundStmt 0x13f029e08 <line:3:1, line:32:1>     |-SwitchStmt 0x13f026808 <line:4:2, line:27:2>     | |-BinaryOperator 0x13f0267e8 <line:4:10, col:19> 'unsigned long' '>>'     | | |-ImplicitCastExpr 0x13f0267d0 <col:10> 'unsigned long' <LValueToRValue>     | | | `-DeclRefExpr 0x13f026790 <col:10> 'unsigned long' lvalue ParmVar 0x13f00e2c8 'regno' 'unsigned long'     | | `-IntegerLiteral 0x13f0267b0 <col:19> 'int' 2     | `-CompoundStmt 0x13f027548 <col:22, line:27:2>     |   |-IfStmt 0x13f026a68 <line:6:4, line:7:13>     |   | |-BinaryOperator 0x13f0269a0 <line:6:8, col:32> 'int' '&&'     |   | | |-ImplicitCastExpr 0x13f026988 <col:8> 'unsigned long' <LValueToRValue>     |   | | | `-DeclRefExpr 0x13f026860 <col:8> 'unsigned long' lvalue ParmVar 0x13f00e348 'value' 'unsigned long'     |   | | `-BinaryOperator 0x13f026968 <col:17, col:32> 'int' '!='     |   | |   |-ParenExpr 0x13f026910 <col:17, col:27> 'unsigned long'     |   | |   | `-BinaryOperator 0x13f0268f0 <col:18, col:26> 'unsigned long' '&'     |   | |   |   |-ImplicitCastExpr 0x13f0268c0 <col:18> 'unsigned long' <LValueToRValue>     |   | |   |   | `-DeclRefExpr 0x13f026880 <col:18> 'unsigned long' lvalue ParmVar 0x13f00e348 'value' 'unsigned long'     |   | |   |   `-ImplicitCastExpr 0x13f0268d8 <col:26> 'unsigned long' <IntegralCast>     |   | |   |     `-IntegerLiteral 0x13f0268a0 <col:26> 'int' 3     |   | |   `-ImplicitCastExpr 0x13f026950 <col:32> 'unsigned long' <IntegralCast>     |   | |     `-IntegerLiteral 0x13f026930 <col:32> 'int' 3     |   | `-ReturnStmt 0x13f026a58 <line:7:5, col:13>     |   |   `-UnaryOperator 0x13f026a40 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |     `-ImplicitCastExpr 0x13f026a28 <col:13> '<dependent type>' contains-errors <LValueToRValue>     |   |       `-RecoveryExpr 0x13f026a08 <col:13> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x13f026b50 <line:8:4, col:23> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x13f026ae8 <col:4, col:18> '<dependent type>' contains-errors lvalue .gs     |   | | `-RecoveryExpr 0x13f026ac0 <col:4, col:11> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x13f026a88 <col:4> 'struct task_struct *' lvalue ParmVar 0x13f00e248 'child' 'struct task_struct *'     |   | `-DeclRefExpr 0x13f026b30 <col:23> 'unsigned long' lvalue ParmVar 0x13f00e348 'value' 'unsigned long'     |   |-ReturnStmt 0x13f026b90 <line:9:4, col:11>     |   | `-IntegerLiteral 0x13f026b70 <col:11> 'int' 0     |   |-IfStmt 0x13f026df0 <line:13:4, line:14:13>     |   | |-BinaryOperator 0x13f026d28 <line:13:8, col:32> 'int' '&&'     |   | | |-ImplicitCastExpr 0x13f026d10 <col:8> 'unsigned long' <LValueToRValue>     |   | | | `-DeclRefExpr 0x13f026be8 <col:8> 'unsigned long' lvalue ParmVar 0x13f00e348 'value' 'unsigned long'     |   | | `-BinaryOperator 0x13f026cf0 <col:17, col:32> 'int' '!='     |   | |   |-ParenExpr 0x13f026c98 <col:17, col:27> 'unsigned long'     |   | |   | `-BinaryOperator 0x13f026c78 <col:18, col:26> 'unsigned long' '&'     |   | |   |   |-ImplicitCastExpr 0x13f026c48 <col:18> 'unsigned long' <LValueToRValue>     |   | |   |   | `-DeclRefExpr 0x13f026c08 <col:18> 'unsigned long' lvalue ParmVar 0x13f00e348 'value' 'unsigned long'     |   | |   |   `-ImplicitCastExpr 0x13f026c60 <col:26> 'unsigned long' <IntegralCast>     |   | |   |     `-IntegerLiteral 0x13f026c28 <col:26> 'int' 3     |   | |   `-ImplicitCastExpr 0x13f026cd8 <col:32> 'unsigned long' <IntegralCast>     |   | |     `-IntegerLiteral 0x13f026cb8 <col:32> 'int' 3     |   | `-ReturnStmt 0x13f026de0 <line:14:5, col:13>     |   |   `-UnaryOperator 0x13f026dc8 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |     `-ImplicitCastExpr 0x13f026db0 <col:13> '<dependent type>' contains-errors <LValueToRValue>     |   |       `-RecoveryExpr 0x13f026d90 <col:13> '<dependent type>' contains-errors lvalue     |   |-CompoundAssignOperator 0x13f026e68 <line:15:4, col:13> 'unsigned long' '&=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'     |   | |-DeclRefExpr 0x13f026e10 <col:4> 'unsigned long' lvalue ParmVar 0x13f00e348 'value' 'unsigned long'     |   | `-ImplicitCastExpr 0x13f026e50 <col:13> 'unsigned long' <IntegralCast>     |   |   `-IntegerLiteral 0x13f026e30 <col:13> 'int' 65535     |   |-BreakStmt 0x13f026e98 <line:16:4>     |   |-IfStmt 0x13f027080 <line:19:4, line:20:13>     |   | |-BinaryOperator 0x13f026fb8 <line:19:8, col:23> 'int' '!='     |   | | |-ParenExpr 0x13f026f60 <col:8, col:18> 'unsigned long'     |   | | | `-BinaryOperator 0x13f026f40 <col:9, col:17> 'unsigned long' '&'     |   | | |   |-ImplicitCastExpr 0x13f026f10 <col:9> 'unsigned long' <LValueToRValue>     |   | | |   | `-DeclRefExpr 0x13f026ed0 <col:9> 'unsigned long' lvalue ParmVar 0x13f00e348 'value' 'unsigned long'     |   | | |   `-ImplicitCastExpr 0x13f026f28 <col:17> 'unsigned long' <IntegralCast>     |   | | |     `-IntegerLiteral 0x13f026ef0 <col:17> 'int' 3     |   | | `-ImplicitCastExpr 0x13f026fa0 <col:23> 'unsigned long' <IntegralCast>     |   | |   `-IntegerLiteral 0x13f026f80 <col:23> 'int' 3     |   | `-ReturnStmt 0x13f027070 <line:20:5, col:13>     |   |   `-UnaryOperator 0x13f027058 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |     `-ImplicitCastExpr 0x13f027040 <col:13> '<dependent type>' contains-errors <LValueToRValue>     |   |       `-RecoveryExpr 0x13f027020 <col:13> '<dependent type>' contains-errors lvalue     |   |-CompoundAssignOperator 0x13f0270f8 <line:21:4, col:13> 'unsigned long' '&=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'     |   | |-DeclRefExpr 0x13f0270a0 <col:4> 'unsigned long' lvalue ParmVar 0x13f00e348 'value' 'unsigned long'     |   | `-ImplicitCastExpr 0x13f0270e0 <col:13> 'unsigned long' <IntegralCast>     |   |   `-IntegerLiteral 0x13f0270c0 <col:13> 'int' 65535     |   |-BreakStmt 0x13f027128 <line:22:4>     |   |-CompoundAssignOperator 0x13f0271d0 <line:24:4, col:13> 'unsigned long' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   | |-DeclRefExpr 0x13f027148 <col:4> 'unsigned long' lvalue ParmVar 0x13f00e348 'value' 'unsigned long'     |   | `-RecoveryExpr 0x13f0271b0 <col:13> '<dependent type>' contains-errors lvalue     |   |-CompoundAssignOperator 0x13f027510 <line:25:4, col:50> 'unsigned long' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   | |-DeclRefExpr 0x13f027200 <col:4> 'unsigned long' lvalue ParmVar 0x13f00e348 'value' 'unsigned long'     |   | `-BinaryOperator 0x13f0274f0 <col:13, col:50> '<dependent type>' contains-errors '&'     |   |   |-CallExpr 0x13f027470 <col:13, col:45> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x13f027330 <col:13> 'int ()' Function 0x13f027278 'get_stack_long' 'int ()'     |   |   | |-DeclRefExpr 0x13f027350 <col:28> 'struct task_struct *' lvalue ParmVar 0x13f00e248 'child' 'struct task_struct *'     |   |   | `-RecoveryExpr 0x13f027450 <col:35> '<dependent type>' contains-errors lvalue     |   |   `-UnaryOperator 0x13f0274d8 <col:49, col:50> '<dependent type>' contains-errors prefix '~' cannot overflow     |   |     `-ImplicitCastExpr 0x13f0274c0 <col:50> '<dependent type>' contains-errors <LValueToRValue>     |   |       `-RecoveryExpr 0x13f0274a0 <col:50> '<dependent type>' contains-errors lvalue     |   `-BreakStmt 0x13f027540 <line:26:4>     |-IfStmt 0x13f029b88 <line:28:2, line:29:14>     | |-BinaryOperator 0x13f029aa0 <line:28:6, col:17> 'int' contains-errors '>'     | | |-DeclRefExpr 0x13f0275b8 <col:6> 'unsigned long' lvalue ParmVar 0x13f00e2c8 'regno' 'unsigned long'     | | `-BinaryOperator 0x13f029a80 <col:14, col:17> '<dependent type>' contains-errors '*'     | |   |-RecoveryExpr 0x13f029a60 <col:14> '<dependent type>' contains-errors lvalue     | |   `-IntegerLiteral 0x13f029a00 <col:17> 'int' 4     | `-CompoundAssignOperator 0x13f029b58 <line:29:3, col:14> 'unsigned long' '-=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'     |   |-DeclRefExpr 0x13f029ac0 <col:3> 'unsigned long' lvalue ParmVar 0x13f00e2c8 'regno' 'unsigned long'     |   `-ImplicitCastExpr 0x13f029b40 <col:12, col:14> 'unsigned long' <IntegralCast>     |     `-BinaryOperator 0x13f029b20 <col:12, col:14> 'int' '*'     |       |-IntegerLiteral 0x13f029ae0 <col:12> 'int' 1     |       `-IntegerLiteral 0x13f029b00 <col:14> 'int' 4     |-CallExpr 0x13f029d58 <line:30:2, col:36> 'int'     | |-ImplicitCastExpr 0x13f029d40 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13f029c88 <col:2> 'int ()' Function 0x13f029bd0 'put_stack_long' 'int ()'     | |-ImplicitCastExpr 0x13f029d90 <col:17> 'struct task_struct *' <LValueToRValue>     | | `-DeclRefExpr 0x13f029ca8 <col:17> 'struct task_struct *' lvalue ParmVar 0x13f00e248 'child' 'struct task_struct *'     | |-ImplicitCastExpr 0x13f029da8 <col:24> 'unsigned long' <LValueToRValue>     | | `-DeclRefExpr 0x13f029cc8 <col:24> 'unsigned long' lvalue ParmVar 0x13f00e2c8 'regno' 'unsigned long'     | `-ImplicitCastExpr 0x13f029dc0 <col:31> 'unsigned long' <LValueToRValue>     |   `-DeclRefExpr 0x13f029ce8 <col:31> 'unsigned long' lvalue ParmVar 0x13f00e348 'value' 'unsigned long'     `-ReturnStmt 0x13f029df8 <line:31:2, col:9>       `-IntegerLiteral 0x13f029dd8 <col:9> 'int' 0 ","20918":"`-FunctionDecl 0x15580de88  line:1:8 invalid stsd_box_read 'int (int *, int *)'   |-ParmVarDecl 0x15580dd28 <col:22, col:30> col:30 invalid s 'int *'   |-ParmVarDecl 0x15580dda8 <col:33, col:47> col:47 invalid bs 'int *'   `-CompoundStmt 0x1570096d0 <line:2:1, line:7:1>     |-CallExpr 0x15580e100 <line:3:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15580e0a0 <col:2> 'int ()' Function 0x15580dfe8 'ISOM_DECREASE_SIZE' 'int ()'     | |-RecoveryExpr 0x15580e0c0 <col:21> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x15580e0e0 <col:24> 'int' 4     |-CallExpr 0x15580e250 <line:4:2, col:19> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15580e210 <col:2> 'int ()' Function 0x15580e158 'gf_bs_read_u32' 'int ()'     | `-RecoveryExpr 0x15580e230 <col:17> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1570096c0 <line:6:2, col:82>       `-CallExpr 0x157009680 <col:9, col:82> '<dependent type>' contains-errors         |-DeclRefExpr 0x15580e358 <col:9> 'int ()' Function 0x15580e2a0 'gf_isom_box_array_read_ex' 'int ()'         |-RecoveryExpr 0x15580e378 <col:35> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x15580e398 <col:38> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x157009640 <col:42> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x157009660 <col:61> '<dependent type>' contains-errors lvalue ","20179":"`-FunctionDecl 0x13e928500  line:1:20 ModulateLCHuv 'void (const double, const double, const double, double *, double *, double *)' static inline   |-ParmVarDecl 0x13e9280d8 <col:34, col:47> col:47 used percent_luma 'const double'   |-ParmVarDecl 0x13e928158 <line:2:3, col:16> col:16 used percent_chroma 'const double'   |-ParmVarDecl 0x13e9281d8 <col:31, col:44> col:44 used percent_hue 'const double'   |-ParmVarDecl 0x13e928288 <col:56, col:64> col:64 used red 'double *'   |-ParmVarDecl 0x13e928308 <line:3:3, col:11> col:11 used green 'double *'   |-ParmVarDecl 0x13e928388 <col:17, col:25> col:25 used blue 'double *'   `-CompoundStmt 0x13e942370 <line:4:1, line:20:1>     |-DeclStmt 0x13e9287c0 <line:5:3, line:8:11>     | |-VarDecl 0x13e928638 <line:5:3, line:6:5> col:5 used hue 'double'     | |-VarDecl 0x13e9286b8 <line:5:3, line:7:5> col:5 used luma 'double'     | `-VarDecl 0x13e928738 <line:5:3, line:8:5> col:5 used chroma 'double'     |-CallExpr 0x13e941b18 <line:11:3, col:57> 'int'     | |-ImplicitCastExpr 0x13e941b00 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13e941910 <col:3> 'int ()' Function 0x13e941858 'ConvertRGBToLCHuv' 'int ()'     | |-ImplicitCastExpr 0x13e941b68 <col:21, col:22> 'double' <LValueToRValue>     | | `-UnaryOperator 0x13e941968 <col:21, col:22> 'double' lvalue prefix '*' cannot overflow     | |   `-ImplicitCastExpr 0x13e941950 <col:22> 'double *' <LValueToRValue>     | |     `-DeclRefExpr 0x13e941930 <col:22> 'double *' lvalue ParmVar 0x13e928288 'red' 'double *'     | |-ImplicitCastExpr 0x13e941b80 <col:26, col:27> 'double' <LValueToRValue>     | | `-UnaryOperator 0x13e9419b8 <col:26, col:27> 'double' lvalue prefix '*' cannot overflow     | |   `-ImplicitCastExpr 0x13e9419a0 <col:27> 'double *' <LValueToRValue>     | |     `-DeclRefExpr 0x13e941980 <col:27> 'double *' lvalue ParmVar 0x13e928308 'green' 'double *'     | |-ImplicitCastExpr 0x13e941b98 <col:33, col:34> 'double' <LValueToRValue>     | | `-UnaryOperator 0x13e941a08 <col:33, col:34> 'double' lvalue prefix '*' cannot overflow     | |   `-ImplicitCastExpr 0x13e9419f0 <col:34> 'double *' <LValueToRValue>     | |     `-DeclRefExpr 0x13e9419d0 <col:34> 'double *' lvalue ParmVar 0x13e928388 'blue' 'double *'     | |-UnaryOperator 0x13e941a40 <col:39, col:40> 'double *' prefix '&' cannot overflow     | | `-DeclRefExpr 0x13e941a20 <col:40> 'double' lvalue Var 0x13e9286b8 'luma' 'double'     | |-UnaryOperator 0x13e941a78 <col:45, col:46> 'double *' prefix '&' cannot overflow     | | `-DeclRefExpr 0x13e941a58 <col:46> 'double' lvalue Var 0x13e928738 'chroma' 'double'     | `-UnaryOperator 0x13e941ab0 <col:53, col:54> 'double *' prefix '&' cannot overflow     |   `-DeclRefExpr 0x13e941a90 <col:54> 'double' lvalue Var 0x13e928638 'hue' 'double'     |-CompoundAssignOperator 0x13e941c48 <line:12:3, col:14> 'double' '*=' ComputeLHSTy='double' ComputeResultTy='double'     | |-DeclRefExpr 0x13e941bb0 <col:3> 'double' lvalue Var 0x13e9286b8 'luma' 'double'     | `-BinaryOperator 0x13e941c28 <col:9, col:14> 'double' '*'     |   |-FloatingLiteral 0x13e941bd0 <col:9> 'double' 1.000000e-02     |   `-ImplicitCastExpr 0x13e941c10 <col:14> 'double' <LValueToRValue>     |     `-DeclRefExpr 0x13e941bf0 <col:14> 'const double' lvalue ParmVar 0x13e9280d8 'percent_luma' 'const double'     |-CompoundAssignOperator 0x13e941d10 <line:13:3, col:16> 'double' '*=' ComputeLHSTy='double' ComputeResultTy='double'     | |-DeclRefExpr 0x13e941c78 <col:3> 'double' lvalue Var 0x13e928738 'chroma' 'double'     | `-BinaryOperator 0x13e941cf0 <col:11, col:16> 'double' '*'     |   |-FloatingLiteral 0x13e941c98 <col:11> 'double' 1.000000e-02     |   `-ImplicitCastExpr 0x13e941cd8 <col:16> 'double' <LValueToRValue>     |     `-DeclRefExpr 0x13e941cb8 <col:16> 'const double' lvalue ParmVar 0x13e928158 'percent_chroma' 'const double'     |-CompoundAssignOperator 0x13e941e78 <line:14:3, col:33> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'     | |-DeclRefExpr 0x13e941d40 <col:3> 'double' lvalue Var 0x13e928638 'hue' 'double'     | `-BinaryOperator 0x13e941e58 <col:8, col:33> 'double' '*'     |   |-FloatingLiteral 0x13e941d60 <col:8> 'double' 5.000000e-01     |   `-ParenExpr 0x13e941e38 <col:12, col:33> 'double'     |     `-BinaryOperator 0x13e941e18 <col:13, col:30> 'double' '-'     |       |-BinaryOperator 0x13e941dd8 <col:13, col:18> 'double' '*'     |       | |-FloatingLiteral 0x13e941d80 <col:13> 'double' 1.000000e-02     |       | `-ImplicitCastExpr 0x13e941dc0 <col:18> 'double' <LValueToRValue>     |       |   `-DeclRefExpr 0x13e941da0 <col:18> 'const double' lvalue ParmVar 0x13e9281d8 'percent_hue' 'const double'     |       `-FloatingLiteral 0x13e941df8 <col:30> 'double' 1.000000e+00     |-WhileStmt 0x13e941f90 <line:15:3, line:16:10>     | |-BinaryOperator 0x13e941f00 <line:15:10, col:16> 'int' '<'     | | |-ImplicitCastExpr 0x13e941ee8 <col:10> 'double' <LValueToRValue>     | | | `-DeclRefExpr 0x13e941ea8 <col:10> 'double' lvalue Var 0x13e928638 'hue' 'double'     | | `-FloatingLiteral 0x13e941ec8 <col:16> 'double' 0.000000e+00     | `-CompoundAssignOperator 0x13e941f60 <line:16:5, col:10> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'     |   |-DeclRefExpr 0x13e941f20 <col:5> 'double' lvalue Var 0x13e928638 'hue' 'double'     |   `-FloatingLiteral 0x13e941f40 <col:10> 'double' 1.000000e+00     |-WhileStmt 0x13e942098 <line:17:3, line:18:10>     | |-BinaryOperator 0x13e942008 <line:17:10, col:17> 'int' '>='     | | |-ImplicitCastExpr 0x13e941ff0 <col:10> 'double' <LValueToRValue>     | | | `-DeclRefExpr 0x13e941fb0 <col:10> 'double' lvalue Var 0x13e928638 'hue' 'double'     | | `-FloatingLiteral 0x13e941fd0 <col:17> 'double' 1.000000e+00     | `-CompoundAssignOperator 0x13e942068 <line:18:5, col:10> 'double' '-=' ComputeLHSTy='double' ComputeResultTy='double'     |   |-DeclRefExpr 0x13e942028 <col:5> 'double' lvalue Var 0x13e928638 'hue' 'double'     |   `-FloatingLiteral 0x13e942048 <col:10> 'double' 1.000000e+00     `-CallExpr 0x13e942290 <line:19:3, col:51> 'int'       |-ImplicitCastExpr 0x13e942278 <col:3> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x13e942198 <col:3> 'int ()' Function 0x13e9420e0 'ConvertLCHuvToRGB' 'int ()'       |-ImplicitCastExpr 0x13e9422e0 <col:21> 'double' <LValueToRValue>       | `-DeclRefExpr 0x13e9421b8 <col:21> 'double' lvalue Var 0x13e9286b8 'luma' 'double'       |-ImplicitCastExpr 0x13e9422f8 <col:26> 'double' <LValueToRValue>       | `-DeclRefExpr 0x13e9421d8 <col:26> 'double' lvalue Var 0x13e928738 'chroma' 'double'       |-ImplicitCastExpr 0x13e942310 <col:33> 'double' <LValueToRValue>       | `-DeclRefExpr 0x13e9421f8 <col:33> 'double' lvalue Var 0x13e928638 'hue' 'double'       |-ImplicitCastExpr 0x13e942328 <col:37> 'double *' <LValueToRValue>       | `-DeclRefExpr 0x13e942218 <col:37> 'double *' lvalue ParmVar 0x13e928288 'red' 'double *'       |-ImplicitCastExpr 0x13e942340 <col:41> 'double *' <LValueToRValue>       | `-DeclRefExpr 0x13e942238 <col:41> 'double *' lvalue ParmVar 0x13e928308 'green' 'double *'       `-ImplicitCastExpr 0x13e942358 <col:47> 'double *' <LValueToRValue>         `-DeclRefExpr 0x13e942258 <col:47> 'double *' lvalue ParmVar 0x13e928388 'blue' 'double *' ","20286":"`-FunctionDecl 0x134128c38  line:1:6 invalid remove_dir 'int (int *, int *, int *, int *, int)'   |-ParmVarDecl 0x134128928 <line:2:3, col:16> col:16 invalid cct 'int *'   |-ParmVarDecl 0x1341289a8 <line:3:3, col:16> col:16 referenced invalid store 'int *'   |-ParmVarDecl 0x134128a28 <col:23, col:35> col:35 invalid mapper 'int *'   |-ParmVarDecl 0x134128aa8 <line:4:3, col:13> col:13 invalid osdriver 'int *'   |-ParmVarDecl 0x134128b28 <line:5:3, <invalid sloc>> col:14 invalid 'int'   `-CompoundStmt 0x134142e90 <line:9:1, line:65:1>     |-RecoveryExpr 0x134128d68 <line:12:3> '<dependent type>' contains-errors lvalue     `-IfStmt 0x134142e70 <line:52:3, line:61:3>       |-RecoveryExpr 0x134142d90 <line:52:7> '_Bool' contains-errors       `-CompoundStmt 0x134142e60 <col:12, line:61:3> ","21251":"`-FunctionDecl 0x15b928230  line:1:6 csync_file_update 'void (const char *, const char *)'   |-ParmVarDecl 0x15b9280d8 <col:24, col:36> col:36 used filename 'const char *'   |-ParmVarDecl 0x15b928158 <col:46, col:58> col:58 used peername 'const char *'   `-CompoundStmt 0x15b942a38 <line:2:1, line:23:1>     |-DeclStmt 0x15b940b28 <line:3:2, col:16>     | |-RecordDecl 0x15b928330 <col:2, col:9> col:9 struct stat     | `-VarDecl 0x15b928428 <col:2, col:14> col:14 invalid st 'struct stat'     |-CallExpr 0x15b940ef0 <line:4:2, line:6:34> 'int'     | |-ImplicitCastExpr 0x15b940ed8 <line:4:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x15b940c70 <col:2> 'int ()' Function 0x15b940bb8 'SQL' 'int ()'     | |-ImplicitCastExpr 0x15b940f30 <col:6> 'char *' <ArrayToPointerDecay>     | | `-StringLiteral 0x15b940cd0 <col:6> 'char[4]' lvalue \"STR\"     | |-ImplicitCastExpr 0x15b940f48 <line:5:4> 'char *' <ArrayToPointerDecay>     | | `-StringLiteral 0x15b940cf0 <col:4> 'char[4]' lvalue \"STR\"     | |-CallExpr 0x15b940e78 <line:6:4, col:23> 'int'     | | |-ImplicitCastExpr 0x15b940e60 <col:4> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x15b940df0 <col:4> 'int ()' Function 0x15b940d38 'url_encode' 'int ()'     | | `-ImplicitCastExpr 0x15b940ea0 <col:15> 'const char *' <LValueToRValue>     | |   `-DeclRefExpr 0x15b940e10 <col:15> 'const char *' lvalue ParmVar 0x15b9280d8 'filename' 'const char *'     | `-ImplicitCastExpr 0x15b940f60 <col:26> 'const char *' <LValueToRValue>     |   `-DeclRefExpr 0x15b940eb8 <col:26> 'const char *' lvalue ParmVar 0x15b928158 'peername' 'const char *'     `-IfStmt 0x15b942a08 <line:7:2, line:22:2> has_else       |-BinaryOperator 0x15b941410 <line:7:7, col:81> 'int' contains-errors '||'       | |-BinaryOperator 0x15b941278 <col:7, col:51> 'int' contains-errors '!='       | | |-CallExpr 0x15b941228 <col:7, col:46> '<dependent type>' contains-errors       | | | |-DeclRefExpr 0x15b941058 <col:7> 'int ()' Function 0x15b940fa0 'lstat_strict' 'int ()'       | | | |-CallExpr 0x15b9411b0 <col:20, col:40> 'int'       | | | | |-ImplicitCastExpr 0x15b941198 <col:20> 'int (*)()' <FunctionToPointerDecay>       | | | | | `-DeclRefExpr 0x15b941158 <col:20> 'int ()' Function 0x15b9410a0 'prefixsubst' 'int ()'       | | | | `-ImplicitCastExpr 0x15b9411d8 <col:32> 'const char *' <LValueToRValue>       | | | |   `-DeclRefExpr 0x15b941178 <col:32> 'const char *' lvalue ParmVar 0x15b9280d8 'filename' 'const char *'       | | | `-UnaryOperator 0x15b941210 <col:43, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow       | | |   `-RecoveryExpr 0x15b9411f0 <col:44> '<dependent type>' contains-errors lvalue       | | `-IntegerLiteral 0x15b941258 <col:51> 'int' 0       | `-CallExpr 0x15b9413d0 <col:56, col:81> 'int'       |   |-ImplicitCastExpr 0x15b9413b8 <col:56> 'int (*)()' <FunctionToPointerDecay>       |   | `-DeclRefExpr 0x15b941378 <col:56> 'int ()' Function 0x15b9412c0 'csync_check_pure' 'int ()'       |   `-ImplicitCastExpr 0x15b9413f8 <col:73> 'const char *' <LValueToRValue>       |     `-DeclRefExpr 0x15b941398 <col:73> 'const char *' lvalue ParmVar 0x15b9280d8 'filename' 'const char *'       |-CompoundStmt 0x15b9415a8 <col:85, line:11:2>       | `-CallExpr 0x15b941540 <line:8:3, line:10:24> 'int'       |   |-ImplicitCastExpr 0x15b941528 <line:8:3> 'int (*)()' <FunctionToPointerDecay>       |   | `-DeclRefExpr 0x15b941430 <col:3> 'int ()' Function 0x15b940bb8 'SQL' 'int ()'       |   |-ImplicitCastExpr 0x15b941578 <col:7> 'char *' <ArrayToPointerDecay>       |   | `-StringLiteral 0x15b941450 <col:7> 'char[4]' lvalue \"STR\"       |   |-ImplicitCastExpr 0x15b941590 <line:9:4> 'char *' <ArrayToPointerDecay>       |   | `-StringLiteral 0x15b941470 <col:4> 'char[4]' lvalue \"STR\"       |   `-CallExpr 0x15b9414e8 <line:10:4, col:23> 'int'       |     |-ImplicitCastExpr 0x15b9414d0 <col:4> 'int (*)()' <FunctionToPointerDecay>       |     | `-DeclRefExpr 0x15b941490 <col:4> 'int ()' Function 0x15b940d38 'url_encode' 'int ()'       |     `-ImplicitCastExpr 0x15b941510 <col:15> 'const char *' <LValueToRValue>       |       `-DeclRefExpr 0x15b9414b0 <col:15> 'const char *' lvalue ParmVar 0x15b9280d8 'filename' 'const char *'       `-CompoundStmt 0x15b9429e0 <line:11:9, line:22:2>         |-DeclStmt 0x15b9417f0 <line:12:3, col:61>         | `-VarDecl 0x15b9415d8 <col:3, col:60> col:15 used checktxt 'const char *' cinit         |   `-CallExpr 0x15b9417b8 <col:26, col:60> '<dependent type>' contains-errors         |     |-DeclRefExpr 0x15b941720 <col:26> 'int ()' Function 0x15b941668 'csync_genchecktxt' 'int ()'         |     |-UnaryOperator 0x15b941760 <col:44, col:45> '<dependent type>' contains-errors prefix '&' cannot overflow         |     | `-RecoveryExpr 0x15b941740 <col:45> '<dependent type>' contains-errors lvalue         |     |-DeclRefExpr 0x15b941778 <col:49> 'const char *' lvalue ParmVar 0x15b9280d8 'filename' 'const char *'         |     `-IntegerLiteral 0x15b941798 <col:59> 'int' 0         |-CallExpr 0x15b941918 <line:14:3, line:16:24> 'int'         | |-ImplicitCastExpr 0x15b941900 <line:14:3> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x15b941808 <col:3> 'int ()' Function 0x15b940bb8 'SQL' 'int ()'         | |-ImplicitCastExpr 0x15b941950 <col:7> 'char *' <ArrayToPointerDecay>         | | `-StringLiteral 0x15b941828 <col:7> 'char[4]' lvalue \"STR\"         | |-ImplicitCastExpr 0x15b941968 <line:15:4> 'char *' <ArrayToPointerDecay>         | | `-StringLiteral 0x15b941848 <col:4> 'char[4]' lvalue \"STR\"         | `-CallExpr 0x15b9418c0 <line:16:4, col:23> 'int'         |   |-ImplicitCastExpr 0x15b9418a8 <col:4> 'int (*)()' <FunctionToPointerDecay>         |   | `-DeclRefExpr 0x15b941868 <col:4> 'int ()' Function 0x15b940d38 'url_encode' 'int ()'         |   `-ImplicitCastExpr 0x15b9418e8 <col:15> 'const char *' <LValueToRValue>         |     `-DeclRefExpr 0x15b941888 <col:15> 'const char *' lvalue ParmVar 0x15b9280d8 'filename' 'const char *'         `-CallExpr 0x15b942970 <line:18:3, line:21:24> 'int' contains-errors           |-ImplicitCastExpr 0x15b942958 <line:18:3> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x15b941980 <col:3> 'int ()' Function 0x15b940bb8 'SQL' 'int ()'           |-ImplicitCastExpr 0x15b9429b0 <col:7> 'char *' <ArrayToPointerDecay>           | `-StringLiteral 0x15b9419a0 <col:7> 'char[4]' lvalue \"STR\"           |-ImplicitCastExpr 0x15b9429c8 <line:19:4, line:20:4> 'char *' <ArrayToPointerDecay>           | `-StringLiteral 0x15b942800 <line:19:4, line:20:4> 'char[7]' lvalue \"STRSTR\"           |-CallExpr 0x15b942880 <col:11, col:30> 'int'           | |-ImplicitCastExpr 0x15b942868 <col:11> 'int (*)()' <FunctionToPointerDecay>           | | `-DeclRefExpr 0x15b942828 <col:11> 'int ()' Function 0x15b940d38 'url_encode' 'int ()'           | `-ImplicitCastExpr 0x15b9428a8 <col:22> 'const char *' <LValueToRValue>           |   `-DeclRefExpr 0x15b942848 <col:22> 'const char *' lvalue ParmVar 0x15b9280d8 'filename' 'const char *'           `-CallExpr 0x15b942918 <line:21:4, col:23> 'int' contains-errors             |-ImplicitCastExpr 0x15b942900 <col:4> 'int (*)()' <FunctionToPointerDecay>             | `-DeclRefExpr 0x15b9428c0 <col:4> 'int ()' Function 0x15b940d38 'url_encode' 'int ()'             `-ImplicitCastExpr 0x15b942940 <col:15> 'const char *' contains-errors <LValueToRValue>               `-DeclRefExpr 0x15b9428e0 <col:15> 'const char *' contains-errors lvalue Var 0x15b9415d8 'checktxt' 'const char *' ","20797":"`-FunctionDecl 0x136827590  col:5 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x136827690 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x1368276f8 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x136827760 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x136827638 <<invalid sloc>> Implicit 900 ","21066":"`-FunctionDecl 0x13704bdc8  line:1:1 invalid agoo_server_add_upgraded 'int (int)'   |-ParmVarDecl 0x13704bcf0 <col:26, col:39> col:39 referenced invalid up 'int'   `-CompoundStmt 0x137063718 <col:43, line:12:1>     |-CallExpr 0x13704c110 <line:2:5, col:44> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13704bfd0 <col:5> 'int ()' Function 0x13704bf18 'pthread_mutex_lock' 'int ()'     | `-UnaryOperator 0x13704c0f8 <col:24, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x13704c0b0 <col:25, col:37> '<dependent type>' contains-errors lvalue .up_lock     |     `-RecoveryExpr 0x13704c090 <col:25> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13704c3c8 <line:3:5, line:7:5> has_else     | |-BinaryOperator 0x13704c258 <line:3:9, col:29> 'int' contains-errors '=='     | | |-RecoveryExpr 0x13704c1d0 <col:9> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x13704c210 <col:17, col:29> '<dependent type>' contains-errors lvalue .up_list     | |   `-RecoveryExpr 0x13704c1f0 <col:17> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x13704c380 <col:38, line:5:5>     | | `-BinaryOperator 0x13704c360 <line:4:2, col:13> '<dependent type>' contains-errors '='     | |   |-CXXDependentScopeMemberExpr 0x13704c2c0 <col:2, col:6> '<dependent type>' contains-errors lvalue ->next     | |   | `-RecoveryExpr 0x13704c298 <col:2> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x13704c278 <col:2> 'int' lvalue ParmVar 0x13704bcf0 'up' 'int'     | |   `-RecoveryExpr 0x13704c340 <col:13> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13704c3b8 <line:5:12, line:7:5>     |-BinaryOperator 0x137063378 <line:8:5, col:28> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x137063248 <col:5, col:9> '<dependent type>' contains-errors lvalue ->next     | | `-RecoveryExpr 0x137063220 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x137063200 <col:5> 'int' lvalue ParmVar 0x13704bcf0 'up' 'int'     | `-CXXDependentScopeMemberExpr 0x137063330 <col:16, col:28> '<dependent type>' contains-errors lvalue .up_list     |   `-RecoveryExpr 0x137063310 <col:16> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1370634b0 <line:10:5, col:19> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x137063448 <col:5, col:14> '<dependent type>' contains-errors lvalue ->up     | | `-CXXDependentScopeMemberExpr 0x137063400 <col:5, col:9> '<dependent type>' contains-errors lvalue ->con     | |   `-RecoveryExpr 0x1370633d8 <col:5> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x1370633b8 <col:5> 'int' lvalue ParmVar 0x13704bcf0 'up' 'int'     | `-RecoveryExpr 0x137063490 <col:19> '<dependent type>' contains-errors lvalue     `-CallExpr 0x1370636f0 <line:11:5, col:46> '<dependent type>' contains-errors       |-DeclRefExpr 0x1370635b0 <col:5> 'int ()' Function 0x1370634f8 'pthread_mutex_unlock' 'int ()'       `-UnaryOperator 0x1370636d8 <col:26, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow         `-CXXDependentScopeMemberExpr 0x137063690 <col:27, col:39> '<dependent type>' contains-errors lvalue .up_lock           `-RecoveryExpr 0x137063670 <col:27> '<dependent type>' contains-errors lvalue ","20894":"`-FunctionDecl 0x1448090e0  col:13 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x14480c400 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x14480c468 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x144809188 <<invalid sloc>> Implicit 887 ","20617":"`-FunctionDecl 0x13002aa00  col:7 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x13002ab00 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x13002aaa8 <<invalid sloc>> Implicit 873 ","20867":"`-FunctionDecl 0x155128750  line:1:20 emulate_push 'void (struct x86_emulate_ctxt *)' static inline   |-ParmVarDecl 0x155128648 <col:33, col:58> col:58 used ctxt 'struct x86_emulate_ctxt *'   `-CompoundStmt 0x1551416e0 <line:2:1, line:11:1>     |-DeclStmt 0x155140cb0 <line:3:2, col:40>     | |-RecordDecl 0x155140a48 <col:2, col:9> col:9 struct decode_cache     | `-VarDecl 0x155140bb8 <col:2, col:34> col:23 used c 'struct decode_cache *' cinit     |   `-UnaryOperator 0x155140c80 <col:27, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x155140c58 <col:28, col:34> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x155140c20 <col:28> 'struct x86_emulate_ctxt *' lvalue ParmVar 0x155128648 'ctxt' 'struct x86_emulate_ctxt *'     |-BinaryOperator 0x155140de0 <line:5:2, col:17> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x155140d28 <col:2, col:9> '<dependent type>' contains-errors lvalue .type     | | `-RecoveryExpr 0x155140d00 <col:2, col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x155140cc8 <col:2> 'struct decode_cache *' contains-errors lvalue Var 0x155140bb8 'c' 'struct decode_cache *'     | `-RecoveryExpr 0x155140dc0 <col:17> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x155140f08 <line:6:2, col:20> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x155140e60 <col:2, col:9> '<dependent type>' contains-errors lvalue .bytes     | | `-RecoveryExpr 0x155140e38 <col:2, col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x155140e00 <col:2> 'struct decode_cache *' contains-errors lvalue Var 0x155140bb8 'c' 'struct decode_cache *'     | `-RecoveryExpr 0x155140ee0 <col:17, col:20> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x155140ea8 <col:17> 'struct decode_cache *' contains-errors lvalue Var 0x155140bb8 'c' 'struct decode_cache *'     `-BinaryOperator 0x155141078 <line:7:2, col:22> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x155140f88 <col:2, col:9> '<dependent type>' contains-errors lvalue .val       | `-RecoveryExpr 0x155140f60 <col:2, col:5> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x155140f28 <col:2> 'struct decode_cache *' contains-errors lvalue Var 0x155140bb8 'c' 'struct decode_cache *'       `-CXXDependentScopeMemberExpr 0x155141030 <col:15, col:22> '<dependent type>' contains-errors lvalue .val         `-RecoveryExpr 0x155141008 <col:15, col:18> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x155140fd0 <col:15> 'struct decode_cache *' contains-errors lvalue Var 0x155140bb8 'c' 'struct decode_cache *' ","20686":"`-FunctionDecl 0x1528c9088  line:1:1 invalid parse_wcc_attr 'int (int *, const int *)'   |-ParmVarDecl 0x1528c8f28 <col:16, col:36> col:36 invalid ndo 'int *'   |-ParmVarDecl 0x1528c8fa8 <line:2:16, col:32> col:32 invalid dp 'const int *'   `-CompoundStmt 0x152018ba0 <line:3:1, line:9:1>     |-CallExpr 0x1528c9360 <line:4:2, col:54> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1528c92a0 <col:2> 'int ()' Function 0x1528c91e8 'ND_PRINT' 'int ()'     | `-BinaryOperator 0x1528c9340 <col:12, col:17> 'char[4]' contains-errors ','     |   |-RecoveryExpr 0x1528c92c0 <col:12> '<dependent type>' contains-errors lvalue     |   `-StringLiteral 0x1528c9320 <col:17> 'char[4]' lvalue \"STR\"     |-CallExpr 0x152018ae8 <line:5:2, line:7:56> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1528c9388 <line:5:2> 'int ()' Function 0x1528c91e8 'ND_PRINT' 'int ()'     | `-ParenExpr 0x152018ac8 <col:11, line:7:55> '<dependent type>' contains-errors     |   `-BinaryOperator 0x152018aa8 <line:5:12, line:7:54> '<dependent type>' contains-errors ','     |     |-BinaryOperator 0x1520189b0 <line:5:12, line:7:30> '<dependent type>' contains-errors ','     |     | |-BinaryOperator 0x1520188b8 <line:5:12, line:6:54> '<dependent type>' contains-errors ','     |     | | |-BinaryOperator 0x1528c95c0 <line:5:12, line:6:30> '<dependent type>' contains-errors ','     |     | | | |-BinaryOperator 0x1528c93e8 <line:5:12, col:17> 'char[4]' contains-errors ','     |     | | | | |-RecoveryExpr 0x1528c93a8 <col:12> '<dependent type>' contains-errors lvalue     |     | | | | `-StringLiteral 0x1528c93c8 <col:17> 'char[4]' lvalue \"STR\"     |     | | | `-CallExpr 0x1528c9598 <line:6:9, col:30> '<dependent type>' contains-errors     |     | | |   |-DeclRefExpr 0x1528c94e8 <col:9> 'int ()' Function 0x1528c9430 'EXTRACT_32BITS' 'int ()'     |     | | |   `-UnaryOperator 0x1528c9580 <col:24, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | | |     `-ArraySubscriptExpr 0x1528c9560 <col:25, col:29> '<dependent type>' contains-errors lvalue     |     | | |       |-ImplicitCastExpr 0x1528c9548 <col:25> '<dependent type>' contains-errors <LValueToRValue>     |     | | |       | `-RecoveryExpr 0x1528c9508 <col:25> '<dependent type>' contains-errors lvalue     |     | | |       `-IntegerLiteral 0x1528c9528 <col:28> 'int' 2     |     | | `-CallExpr 0x152018890 <col:33, col:54> '<dependent type>' contains-errors     |     | |   |-DeclRefExpr 0x1528c95e0 <col:33> 'int ()' Function 0x1528c9430 'EXTRACT_32BITS' 'int ()'     |     | |   `-UnaryOperator 0x152018878 <col:48, col:53> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | |     `-ArraySubscriptExpr 0x152018858 <col:49, col:53> '<dependent type>' contains-errors lvalue     |     | |       |-ImplicitCastExpr 0x152018840 <col:49> '<dependent type>' contains-errors <LValueToRValue>     |     | |       | `-RecoveryExpr 0x152018800 <col:49> '<dependent type>' contains-errors lvalue     |     | |       `-IntegerLiteral 0x152018820 <col:52> 'int' 3     |     | `-CallExpr 0x152018988 <line:7:9, col:30> '<dependent type>' contains-errors     |     |   |-DeclRefExpr 0x1520188d8 <col:9> 'int ()' Function 0x1528c9430 'EXTRACT_32BITS' 'int ()'     |     |   `-UnaryOperator 0x152018970 <col:24, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |     |     `-ArraySubscriptExpr 0x152018950 <col:25, col:29> '<dependent type>' contains-errors lvalue     |     |       |-ImplicitCastExpr 0x152018938 <col:25> '<dependent type>' contains-errors <LValueToRValue>     |     |       | `-RecoveryExpr 0x1520188f8 <col:25> '<dependent type>' contains-errors lvalue     |     |       `-IntegerLiteral 0x152018918 <col:28> 'int' 4     |     `-CallExpr 0x152018a80 <col:33, col:54> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x1520189d0 <col:33> 'int ()' Function 0x1528c9430 'EXTRACT_32BITS' 'int ()'     |       `-UnaryOperator 0x152018a68 <col:48, col:53> '<dependent type>' contains-errors prefix '&' cannot overflow     |         `-ArraySubscriptExpr 0x152018a48 <col:49, col:53> '<dependent type>' contains-errors lvalue     |           |-ImplicitCastExpr 0x152018a30 <col:49> '<dependent type>' contains-errors <LValueToRValue>     |           | `-RecoveryExpr 0x1520189f0 <col:49> '<dependent type>' contains-errors lvalue     |           `-IntegerLiteral 0x152018a10 <col:52> 'int' 5     `-ReturnStmt 0x152018b90 <line:8:2, col:16>       `-ParenExpr 0x152018b70 <col:9, col:16> '<dependent type>' contains-errors         `-BinaryOperator 0x152018b50 <col:10, col:15> '<dependent type>' contains-errors '+'           |-RecoveryExpr 0x152018b10 <col:10> '<dependent type>' contains-errors lvalue           `-IntegerLiteral 0x152018b30 <col:15> 'int' 6 ","21035":"`-FunctionDecl 0x138128bc8  line:1:1 invalid virDomainHostdevDefValidate 'int (const int *)'   |-ParmVarDecl 0x138128af0 <col:29, col:56> col:56 invalid hostdev 'const int *'   `-CompoundStmt 0x1300095a8 <line:2:1, line:48:1>     |-IfStmt 0x130009558 <line:3:5, line:46:5>     | |-BinaryOperator 0x138128d38 <line:3:9, col:26> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x138128c98 <col:9, col:18> '<dependent type>' contains-errors lvalue ->mode     | | | `-RecoveryExpr 0x138128c78 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x138128d18 <col:26> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x130009540 <col:58, line:46:5>     |   `-SwitchStmt 0x138128d90 <line:4:9, line:45:9>     |     |-RecoveryExpr 0x138128d70 <line:4:17, col:69> 'int' contains-errors     |     `-CompoundStmt 0x1300094e8 <col:75, line:45:9>     |       |-IfStmt 0x130008748 <line:6:13, line:13:13>     |       | |-BinaryOperator 0x1381291a8 <line:6:17, line:8:40> 'int' contains-errors '&&'     |       | | |-BinaryOperator 0x138129148 <line:6:17, line:7:40> 'int' contains-errors '&&'     |       | | | |-BinaryOperator 0x1381290e8 <line:6:17, col:40> 'int' contains-errors '!='     |       | | | | |-CXXDependentScopeMemberExpr 0x138128e38 <col:17, col:32> '<dependent type>' contains-errors lvalue ->type     |       | | | | | `-CXXDependentScopeMemberExpr 0x138128df0 <col:17, col:26> '<dependent type>' contains-errors lvalue ->info     |       | | | | |   `-RecoveryExpr 0x138128dd0 <col:17> '<dependent type>' contains-errors lvalue     |       | | | | `-RecoveryExpr 0x1381290c8 <col:40> '<dependent type>' contains-errors lvalue     |       | | | `-BinaryOperator 0x138129128 <line:7:17, col:40> 'int' contains-errors '!='     |       | | |   |-CXXDependentScopeMemberExpr 0x138128f20 <col:17, col:32> '<dependent type>' contains-errors lvalue ->type     |       | | |   | `-CXXDependentScopeMemberExpr 0x138128ed8 <col:17, col:26> '<dependent type>' contains-errors lvalue ->info     |       | | |   |   `-RecoveryExpr 0x138128eb8 <col:17> '<dependent type>' contains-errors lvalue     |       | | |   `-RecoveryExpr 0x138129108 <col:40> '<dependent type>' contains-errors lvalue     |       | | `-BinaryOperator 0x138129188 <line:8:17, col:40> 'int' contains-errors '!='     |       | |   |-CXXDependentScopeMemberExpr 0x138129028 <col:17, col:32> '<dependent type>' contains-errors lvalue ->type     |       | |   | `-CXXDependentScopeMemberExpr 0x138128fe0 <col:17, col:26> '<dependent type>' contains-errors lvalue ->info     |       | |   |   `-RecoveryExpr 0x138128fc0 <col:17> '<dependent type>' contains-errors lvalue     |       | |   `-RecoveryExpr 0x138129168 <col:40> '<dependent type>' contains-errors lvalue     |       | `-CompoundStmt 0x130008728 <col:76, line:13:13>     |       |   |-CallExpr 0x1300086a8 <line:9:17, line:11:40> '<dependent type>' contains-errors     |       |   | |-DeclRefExpr 0x130008360 <line:9:17> 'int ()' Function 0x1300082a8 'virReportError' 'int ()'     |       |   | |-RecoveryExpr 0x130008630 <col:32> '<dependent type>' contains-errors lvalue     |       |   | |-StringLiteral 0x1300083e0 <col:56> 'char[4]' lvalue \"STR\"     |       |   | `-CallExpr 0x130008668 <line:10:32, line:11:39> 'int'     |       |   |   |-ImplicitCastExpr 0x130008650 <line:10:32> 'int (*)()' <FunctionToPointerDecay>     |       |   |   | `-DeclRefExpr 0x1300084e0 <col:32> 'int ()' Function 0x130008428 '_' 'int ()'     |       |   |   `-ImplicitCastExpr 0x130008690 <col:34, line:11:34> 'char *' <ArrayToPointerDecay>     |       |   |     `-StringLiteral 0x130008540 <line:10:34, line:11:34> 'char[7]' lvalue \"STRSTR\"     |       |   `-ReturnStmt 0x130008718 <line:12:17, col:25>     |       |     `-UnaryOperator 0x130008700 <col:24, col:25> 'int' prefix '-'     |       |       `-IntegerLiteral 0x1300086e0 <col:25> 'int' 1     |       |-BreakStmt 0x130008768 <line:14:13>     |       |-IfStmt 0x130008c60 <line:16:13, line:22:13>     |       | |-BinaryOperator 0x1300089f8 <line:16:17, line:17:40> 'int' contains-errors '&&'     |       | | |-BinaryOperator 0x130008998 <line:16:17, col:40> 'int' contains-errors '!='     |       | | | |-CXXDependentScopeMemberExpr 0x1300087f0 <col:17, col:32> '<dependent type>' contains-errors lvalue ->type     |       | | | | `-CXXDependentScopeMemberExpr 0x1300087a8 <col:17, col:26> '<dependent type>' contains-errors lvalue ->info     |       | | | |   `-RecoveryExpr 0x130008788 <col:17> '<dependent type>' contains-errors lvalue     |       | | | `-RecoveryExpr 0x130008978 <col:40> '<dependent type>' contains-errors lvalue     |       | | `-BinaryOperator 0x1300089d8 <line:17:17, col:40> 'int' contains-errors '!='     |       | |   |-CXXDependentScopeMemberExpr 0x1300088d8 <col:17, col:32> '<dependent type>' contains-errors lvalue ->type     |       | |   | `-CXXDependentScopeMemberExpr 0x130008890 <col:17, col:26> '<dependent type>' contains-errors lvalue ->info     |       | |   |   `-RecoveryExpr 0x130008870 <col:17> '<dependent type>' contains-errors lvalue     |       | |   `-RecoveryExpr 0x1300089b8 <col:40> '<dependent type>' contains-errors lvalue     |       | `-CompoundStmt 0x130008c40 <col:78, line:22:13>     |       |   |-CallExpr 0x130008bc0 <line:18:17, line:20:40> '<dependent type>' contains-errors     |       |   | |-DeclRefExpr 0x130008a18 <line:18:17> 'int ()' Function 0x1300082a8 'virReportError' 'int ()'     |       |   | |-RecoveryExpr 0x130008b48 <col:32> '<dependent type>' contains-errors lvalue     |       |   | |-StringLiteral 0x130008a50 <col:51> 'char[4]' lvalue \"STR\"     |       |   | `-CallExpr 0x130008b80 <line:19:32, line:20:39> 'int'     |       |   |   |-ImplicitCastExpr 0x130008b68 <line:19:32> 'int (*)()' <FunctionToPointerDecay>     |       |   |   | `-DeclRefExpr 0x130008a70 <col:32> 'int ()' Function 0x130008428 '_' 'int ()'     |       |   |   `-ImplicitCastExpr 0x130008ba8 <col:34, line:20:34> 'char *' <ArrayToPointerDecay>     |       |   |     `-StringLiteral 0x130008a90 <line:19:34, line:20:34> 'char[7]' lvalue \"STRSTR\"     |       |   `-ReturnStmt 0x130008c30 <line:21:17, col:25>     |       |     `-UnaryOperator 0x130008c18 <col:24, col:25> 'int' prefix '-'     |       |       `-IntegerLiteral 0x130008bf8 <col:25> 'int' 1     |       |-BreakStmt 0x130008c80 <line:23:13>     |       |-IfStmt 0x1300091d8 <line:25:13, line:32:13>     |       | |-BinaryOperator 0x130009078 <line:25:17, line:27:40> 'int' contains-errors '&&'     |       | | |-BinaryOperator 0x130009018 <line:25:17, line:26:40> 'int' contains-errors '&&'     |       | | | |-BinaryOperator 0x130008fb8 <line:25:17, col:40> 'int' contains-errors '!='     |       | | | | |-CXXDependentScopeMemberExpr 0x130008d08 <col:17, col:32> '<dependent type>' contains-errors lvalue ->type     |       | | | | | `-CXXDependentScopeMemberExpr 0x130008cc0 <col:17, col:26> '<dependent type>' contains-errors lvalue ->info     |       | | | | |   `-RecoveryExpr 0x130008ca0 <col:17> '<dependent type>' contains-errors lvalue     |       | | | | `-RecoveryExpr 0x130008f98 <col:40> '<dependent type>' contains-errors lvalue     |       | | | `-BinaryOperator 0x130008ff8 <line:26:17, col:40> 'int' contains-errors '!='     |       | | |   |-CXXDependentScopeMemberExpr 0x130008df0 <col:17, col:32> '<dependent type>' contains-errors lvalue ->type     |       | | |   | `-CXXDependentScopeMemberExpr 0x130008da8 <col:17, col:26> '<dependent type>' contains-errors lvalue ->info     |       | | |   |   `-RecoveryExpr 0x130008d88 <col:17> '<dependent type>' contains-errors lvalue     |       | | |   `-RecoveryExpr 0x130008fd8 <col:40> '<dependent type>' contains-errors lvalue     |       | | `-BinaryOperator 0x130009058 <line:27:17, col:40> 'int' contains-errors '!='     |       | |   |-CXXDependentScopeMemberExpr 0x130008ef8 <col:17, col:32> '<dependent type>' contains-errors lvalue ->type     |       | |   | `-CXXDependentScopeMemberExpr 0x130008eb0 <col:17, col:26> '<dependent type>' contains-errors lvalue ->info     |       | |   |   `-RecoveryExpr 0x130008e90 <col:17> '<dependent type>' contains-errors lvalue     |       | |   `-RecoveryExpr 0x130009038 <col:40> '<dependent type>' contains-errors lvalue     |       | `-CompoundStmt 0x1300091c0 <col:76, line:32:13>     |       |   `-ReturnStmt 0x1300091b0 <line:31:17, col:25>     |       |     `-UnaryOperator 0x130009198 <col:24, col:25> 'int' prefix '-'     |       |       `-IntegerLiteral 0x130009178 <col:25> 'int' 1     |       |-BreakStmt 0x1300091f8 <line:33:13>     |       |-IfStmt 0x1300094b8 <line:35:13, line:40:13>     |       | |-RecoveryExpr 0x130009360 <line:35:17, line:36:40> '_Bool' contains-errors     |       | `-CompoundStmt 0x1300094a0 <col:76, line:40:13>     |       |   `-ReturnStmt 0x130009490 <line:39:17, col:25>     |       |     `-UnaryOperator 0x130009478 <col:24, col:25> 'int' prefix '-'     |       |       `-IntegerLiteral 0x130009458 <col:25> 'int' 1     |       |-BreakStmt 0x1300094d8 <line:41:13>     |       `-BreakStmt 0x1300094e0 <line:44:13>     `-ReturnStmt 0x130009598 <line:47:5, col:12>       `-IntegerLiteral 0x130009578 <col:12> 'int' 0 ","20518":"`-FunctionDecl 0x13e928318  line:1:12 invalid obj_trust 'int (int, int *, int)' static   |-ParmVarDecl 0x13e9280d8 <col:22, col:26> col:26 used id 'int'   |-ParmVarDecl 0x13e9281a8 <col:30, col:36> col:36 invalid x 'int *'   |-ParmVarDecl 0x13e928228 <col:39, col:43> col:43 flags 'int'   `-CompoundStmt 0x13e942698 <line:2:1, line:29:1>     |-DeclStmt 0x13e9284d8 <line:4:5, col:10>     | `-VarDecl 0x13e928470 <col:5, col:9> col:9 used i 'int'     |-IfStmt 0x13e9285d0 <line:6:5, line:7:16>     | |-UnaryOperator 0x13e928570 <line:6:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13e928558 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x13e928538 <col:10> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13e9285c0 <line:7:9, col:16>     |   `-RecoveryExpr 0x13e9285a0 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13e942130 <line:8:5, line:16:5>     | |-CXXDependentScopeMemberExpr 0x13e928670 <line:8:9, col:13> '<dependent type>' contains-errors lvalue ->reject     | | `-RecoveryExpr 0x13e928650 <col:9> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13e942118 <col:21, line:16:5>     |   `-ForStmt 0x13e9420e0 <line:9:9, line:15:9>     |     |-BinaryOperator 0x13e9286f8 <line:9:14, col:18> 'int' '='     |     | |-DeclRefExpr 0x13e9286b8 <col:14> 'int' lvalue Var 0x13e928470 'i' 'int'     |     | `-IntegerLiteral 0x13e9286d8 <col:18> 'int' 0     |     |-<<<NULL>>>     |     |-BinaryOperator 0x13e941a10 <col:21, col:54> 'int' contains-errors '<'     |     | |-DeclRefExpr 0x13e928718 <col:21> 'int' lvalue Var 0x13e928470 'i' 'int'     |     | `-CallExpr 0x13e9419e8 <col:25, col:54> '<dependent type>' contains-errors     |     |   |-DeclRefExpr 0x13e9418b8 <col:25> 'int ()' Function 0x13e941800 'sk_ASN1_OBJECT_num' 'int ()'     |     |   `-CXXDependentScopeMemberExpr 0x13e9419a0 <col:44, col:48> '<dependent type>' contains-errors lvalue ->reject     |     |     `-RecoveryExpr 0x13e941980 <col:44> '<dependent type>' contains-errors lvalue     |     |-UnaryOperator 0x13e941a50 <col:57, col:58> 'int' postfix '++'     |     | `-DeclRefExpr 0x13e941a30 <col:57> 'int' lvalue Var 0x13e928470 'i' 'int'     |     `-CompoundStmt 0x13e9420c0 <col:62, line:15:9>     |       |-DeclStmt 0x13e941e38 <line:11:13, col:39>     |       | `-VarDecl 0x13e941c48 <col:13, col:38> col:17 used nid 'int' cinit     |       |   `-CallExpr 0x13e941e10 <col:23, col:38> '<dependent type>' contains-errors     |       |     |-DeclRefExpr 0x13e941d90 <col:23> 'int ()' Function 0x13e941cd8 'OBJ_obj2nid' 'int ()'     |       |     `-RecoveryExpr 0x13e941df0 <col:35> '<dependent type>' contains-errors lvalue     |       `-IfStmt 0x13e9420a0 <line:13:13, line:14:24>     |         |-BinaryOperator 0x13e942038 <line:13:17, col:37> 'int' contains-errors '||'     |         | |-BinaryOperator 0x13e941fd8 <col:17, col:24> 'int' contains-errors '=='     |         | | |-ImplicitCastExpr 0x13e941fa8 <col:17> 'int' contains-errors <LValueToRValue>     |         | | | `-DeclRefExpr 0x13e941e50 <col:17> 'int' contains-errors lvalue Var 0x13e941c48 'nid' 'int'     |         | | `-ImplicitCastExpr 0x13e941fc0 <col:24> 'int' <LValueToRValue>     |         | |   `-DeclRefExpr 0x13e941e70 <col:24> 'int' lvalue ParmVar 0x13e9280d8 'id' 'int'     |         | `-BinaryOperator 0x13e942018 <col:30, col:37> 'int' contains-errors '=='     |         |   |-DeclRefExpr 0x13e941ee0 <col:30> 'int' contains-errors lvalue Var 0x13e941c48 'nid' 'int'     |         |   `-RecoveryExpr 0x13e941ff8 <col:37> '<dependent type>' contains-errors lvalue     |         `-ReturnStmt 0x13e942090 <line:14:17, col:24>     |           `-RecoveryExpr 0x13e942070 <col:24> '<dependent type>' contains-errors lvalue     `-IfStmt 0x13e942678 <line:17:5, line:27:5>       |-CXXDependentScopeMemberExpr 0x13e9421d0 <line:17:9, col:13> '<dependent type>' contains-errors lvalue ->trust       | `-RecoveryExpr 0x13e9421b0 <col:9> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x13e942660 <col:20, line:27:5>         `-ForStmt 0x13e942628 <line:18:9, line:24:9>           |-BinaryOperator 0x13e942258 <line:18:14, col:18> 'int' '='           | |-DeclRefExpr 0x13e942218 <col:14> 'int' lvalue Var 0x13e928470 'i' 'int'           | `-IntegerLiteral 0x13e942238 <col:18> 'int' 0           |-<<<NULL>>>           |-BinaryOperator 0x13e9423f0 <col:21, col:53> 'int' contains-errors '<'           | |-DeclRefExpr 0x13e942278 <col:21> 'int' lvalue Var 0x13e928470 'i' 'int'           | `-CallExpr 0x13e9423c8 <col:25, col:53> '<dependent type>' contains-errors           |   |-DeclRefExpr 0x13e942298 <col:25> 'int ()' Function 0x13e941800 'sk_ASN1_OBJECT_num' 'int ()'           |   `-CXXDependentScopeMemberExpr 0x13e942380 <col:44, col:48> '<dependent type>' contains-errors lvalue ->trust           |     `-RecoveryExpr 0x13e942360 <col:44> '<dependent type>' contains-errors lvalue           |-UnaryOperator 0x13e942430 <col:56, col:57> 'int' postfix '++'           | `-DeclRefExpr 0x13e942410 <col:56> 'int' lvalue Var 0x13e928470 'i' 'int'           `-CompoundStmt 0x13e942610 <col:61, line:24:9>             `-DeclStmt 0x13e942528 <line:20:13, col:39>               `-VarDecl 0x13e9424a0 <col:13, col:17> col:17 used nid 'int' ","21067":"`-FunctionDecl 0x138928758  line:1:13 vma_compute_subtree_gap 'long (struct vm_area_struct *)' static   |-ParmVarDecl 0x138928648 <col:37, col:60> col:60 used vma 'struct vm_area_struct *'   `-CompoundStmt 0x138941538 <line:2:1, line:20:1>     |-DeclStmt 0x138940b68 <line:3:2, col:32>     | |-VarDecl 0x138940a68 <col:2, col:16> col:16 used max 'unsigned long'     | `-VarDecl 0x138940ae8 <col:2, col:21> col:21 used subtree_gap 'unsigned long'     |-BinaryOperator 0x138940c00 <line:4:2, col:13> 'unsigned long' contains-errors '='     | |-DeclRefExpr 0x138940b80 <col:2> 'unsigned long' lvalue Var 0x138940a68 'max' 'unsigned long'     | `-RecoveryExpr 0x138940bd8 <col:8, col:13> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x138940ba0 <col:8> 'struct vm_area_struct *' lvalue ParmVar 0x138928648 'vma' 'struct vm_area_struct *'     |-IfStmt 0x138940d78 <line:5:2, line:6:24>     | |-RecoveryExpr 0x138940c58 <line:5:6, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x138940c20 <col:6> 'struct vm_area_struct *' lvalue ParmVar 0x138928648 'vma' 'struct vm_area_struct *'     | `-CompoundAssignOperator 0x138940d48 <line:6:3, col:24> 'unsigned long' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |-DeclRefExpr 0x138940c80 <col:3> 'unsigned long' lvalue Var 0x138940a68 'max' 'unsigned long'     |   `-CXXDependentScopeMemberExpr 0x138940d00 <col:10, col:24> '<dependent type>' contains-errors lvalue ->vm_end     |     `-RecoveryExpr 0x138940cd8 <col:10, col:15> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x138940ca0 <col:10> 'struct vm_area_struct *' lvalue ParmVar 0x138928648 'vma' 'struct vm_area_struct *'     |-IfStmt 0x1389411b0 <line:7:2, line:12:2>     | |-CXXDependentScopeMemberExpr 0x138940df8 <line:7:6, col:17> '<dependent type>' contains-errors lvalue .rb_left     | | `-RecoveryExpr 0x138940dd0 <col:6, col:11> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x138940d98 <col:6> 'struct vm_area_struct *' lvalue ParmVar 0x138928648 'vma' 'struct vm_area_struct *'     | `-CompoundStmt 0x138941198 <col:26, line:12:2>     |   `-IfStmt 0x138941178 <line:10:3, line:11:10>     |     |-BinaryOperator 0x1389410e0 <line:10:7, col:21> 'int' '>'     |     | |-ImplicitCastExpr 0x1389410b0 <col:7> 'unsigned long' <LValueToRValue>     |     | | `-DeclRefExpr 0x138941070 <col:7> 'unsigned long' lvalue Var 0x138940ae8 'subtree_gap' 'unsigned long'     |     | `-ImplicitCastExpr 0x1389410c8 <col:21> 'unsigned long' <LValueToRValue>     |     |   `-DeclRefExpr 0x138941090 <col:21> 'unsigned long' lvalue Var 0x138940a68 'max' 'unsigned long'     |     `-BinaryOperator 0x138941158 <line:11:4, col:10> 'unsigned long' '='     |       |-DeclRefExpr 0x138941100 <col:4> 'unsigned long' lvalue Var 0x138940a68 'max' 'unsigned long'     |       `-ImplicitCastExpr 0x138941140 <col:10> 'unsigned long' <LValueToRValue>     |         `-DeclRefExpr 0x138941120 <col:10> 'unsigned long' lvalue Var 0x138940ae8 'subtree_gap' 'unsigned long'     |-IfStmt 0x1389414b8 <line:13:2, line:18:2>     | |-CXXDependentScopeMemberExpr 0x138941230 <line:13:6, col:17> '<dependent type>' contains-errors lvalue .rb_right     | | `-RecoveryExpr 0x138941208 <col:6, col:11> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1389411d0 <col:6> 'struct vm_area_struct *' lvalue ParmVar 0x138928648 'vma' 'struct vm_area_struct *'     | `-CompoundStmt 0x1389414a0 <col:27, line:18:2>     |   `-IfStmt 0x138941480 <line:16:3, line:17:10>     |     |-BinaryOperator 0x1389413e8 <line:16:7, col:21> 'int' '>'     |     | |-ImplicitCastExpr 0x1389413b8 <col:7> 'unsigned long' <LValueToRValue>     |     | | `-DeclRefExpr 0x138941378 <col:7> 'unsigned long' lvalue Var 0x138940ae8 'subtree_gap' 'unsigned long'     |     | `-ImplicitCastExpr 0x1389413d0 <col:21> 'unsigned long' <LValueToRValue>     |     |   `-DeclRefExpr 0x138941398 <col:21> 'unsigned long' lvalue Var 0x138940a68 'max' 'unsigned long'     |     `-BinaryOperator 0x138941460 <line:17:4, col:10> 'unsigned long' '='     |       |-DeclRefExpr 0x138941408 <col:4> 'unsigned long' lvalue Var 0x138940a68 'max' 'unsigned long'     |       `-ImplicitCastExpr 0x138941448 <col:10> 'unsigned long' <LValueToRValue>     |         `-DeclRefExpr 0x138941428 <col:10> 'unsigned long' lvalue Var 0x138940ae8 'subtree_gap' 'unsigned long'     `-ReturnStmt 0x138941528 <line:19:2, col:9>       `-ImplicitCastExpr 0x138941510 <col:9> 'long' <IntegralCast>         `-ImplicitCastExpr 0x1389414f8 <col:9> 'unsigned long' <LValueToRValue>           `-DeclRefExpr 0x1389414d8 <col:9> 'unsigned long' lvalue Var 0x138940a68 'max' 'unsigned long' ","20348":"`-FunctionDecl 0x13d124148  line:1:12 referenced invalid php_stream_temp_cast 'int (int *, int, void **)' static   |-ParmVarDecl 0x13d123f28 <col:33, col:45> col:45 invalid stream 'int *'   |-ParmVarDecl 0x13d123fa8 <col:53, col:57> col:57 used castas 'int'   |-ParmVarDecl 0x13d124058 <col:65, col:72> col:72 used ret 'void **'   `-CompoundStmt 0x13d13e548 <line:2:1, line:41:1>     |-UnaryExprOrTypeTraitExpr 0x13d124330 <line:5:2, col:9> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x13d124310 <col:9> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x13d1243d0 <line:6:2, col:14>     | `-VarDecl 0x13d124368 <col:2, col:8> col:8 used membuf 'char *'     |-CallExpr 0x13d13d640 <line:9:2, col:19> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d124540 <col:2> 'int ()' Function 0x13d124488 'assert' 'int ()'     | `-BinaryOperator 0x13d13d620 <col:9, col:15> 'int' contains-errors '!='     |   |-RecoveryExpr 0x13d1245d8 <col:9> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x13d13d600 <col:15> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13d13d7f0 <line:11:2, line:13:2>     | |-UnaryOperator 0x13d13d778 <line:11:6, col:11> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13d13d760 <col:7, col:11> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x13d13d718 <col:7, col:11> '<dependent type>' contains-errors lvalue ->innerstream     | |     `-RecoveryExpr 0x13d13d6f8 <col:7> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13d13d7d8 <col:24, line:13:2>     |   `-ReturnStmt 0x13d13d7c8 <line:12:3, col:10>     |     `-RecoveryExpr 0x13d13d7a8 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13d13dbe0 <line:14:2, line:16:2>     | |-CallExpr 0x13d13da40 <line:14:6, col:56> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x13d13d8f0 <col:6> 'int ()' Function 0x13d13d838 'php_stream_is' 'int ()'     | | |-CXXDependentScopeMemberExpr 0x13d13d9d8 <col:20, col:24> '<dependent type>' contains-errors lvalue ->innerstream     | | | `-RecoveryExpr 0x13d13d9b8 <col:20> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13d13da20 <col:37> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13d13dbd0 <col:59, line:16:2>     |-IfStmt 0x13d13dc70 <line:20:2, line:22:2>     | |-RecoveryExpr 0x13d13dc40 <line:20:6, col:31> '_Bool' contains-errors     | `-CompoundStmt 0x13d13dc60 <col:52, line:22:2>     `-IfStmt 0x13d13dce0 <line:25:2, line:27:2>       |-RecoveryExpr 0x13d13dcb0 <line:25:6, col:13> '_Bool' contains-errors       `-CompoundStmt 0x13d13dcd0 <col:19, line:27:2> ","20991":"`-FunctionDecl 0x129830a88  line:1:8 invalid dinf_Read 'int (int *, int *)'   |-ParmVarDecl 0x129830928 <col:18, col:26> col:26 invalid s 'int *'   |-ParmVarDecl 0x1298309a8 <col:29, col:43> col:43 invalid bs 'int *'   `-CompoundStmt 0x129830fc0 <line:2:1, line:12:1>     |-IfStmt 0x129830bd8 <line:4:2, line:6:2>     | |-RecoveryExpr 0x129830b58 <line:4:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x129830bc0 <col:9, line:6:2>     |   `-ReturnStmt 0x129830bb0 <line:5:3, col:10>     |     `-RecoveryExpr 0x129830b90 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x129830f58 <line:7:2, line:10:2>     | |-RecoveryExpr 0x129830c10 <line:7:6, col:37> '_Bool' contains-errors     | `-CompoundStmt 0x129830f40 <col:43, line:10:2>     |   `-CallExpr 0x129830ed8 <line:8:3, col:49> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x129830d90 <col:3> 'int ()' Function 0x129830cd8 'GF_LOG' 'int ()'     |     |-RecoveryExpr 0x129830e98 <col:10> '<dependent type>' contains-errors lvalue     |     |-RecoveryExpr 0x129830eb8 <col:24> '<dependent type>' contains-errors lvalue     |     `-ParenExpr 0x129830e40 <col:42, col:48> 'char[4]' lvalue     |       `-StringLiteral 0x129830e20 <col:43> 'char[4]' lvalue \"STR\"     `-ReturnStmt 0x129830fb0 <line:11:2, col:9>       `-RecoveryExpr 0x129830f90 <col:9> '<dependent type>' contains-errors lvalue ","21017":"`-FunctionDecl 0x14e8e4c88  col:2 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x14e8e4d88 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x14e8e4d30 <<invalid sloc>> Implicit 873 ","20978":"`-FunctionDecl 0x1530268a0  line:1:20 switch_mm 'void (struct mm_struct *, struct mm_struct *, struct task_struct *)' static inline   |-ParmVarDecl 0x15300e248 <col:30, col:48> col:48 used prev 'struct mm_struct *'   |-ParmVarDecl 0x15300e338 <col:54, col:72> col:72 used next 'struct mm_struct *'   |-ParmVarDecl 0x153026768 <line:2:9, col:29> col:29 tsk 'struct task_struct *'   `-CompoundStmt 0x153029810 <line:3:1, line:18:1>     |-DeclStmt 0x153026bd8 <line:4:2, col:30>     | `-VarDecl 0x1530269c0 <col:2, col:29> col:6 used cpu 'int' cinit     |   `-CallExpr 0x153026bb8 <col:12, col:29> 'int'     |     `-ImplicitCastExpr 0x153026ba0 <col:12> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x153026b50 <col:12> 'int ()' Function 0x153026a98 'smp_processor_id' 'int ()'     |-IfStmt 0x153026ee0 <line:7:2, line:8:3>     | |-BinaryOperator 0x153026eb0 <line:7:6, col:14> 'int' '=='     | | |-ImplicitCastExpr 0x153026e80 <col:6> 'struct mm_struct *' <LValueToRValue>     | | | `-DeclRefExpr 0x153026e40 <col:6> 'struct mm_struct *' lvalue ParmVar 0x15300e248 'prev' 'struct mm_struct *'     | | `-ImplicitCastExpr 0x153026e98 <col:14> 'struct mm_struct *' <LValueToRValue>     | |   `-DeclRefExpr 0x153026e60 <col:14> 'struct mm_struct *' lvalue ParmVar 0x15300e338 'next' 'struct mm_struct *'     | `-ReturnStmt 0x153026ed0 <line:8:3>     |-IfStmt 0x153027148 <line:9:2, line:10:54>     | |-RecoveryExpr 0x153026f18 <line:9:6> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x153027118 <line:10:3, col:54> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x153027018 <col:3> 'int ()' Function 0x153026f60 'cpumask_set_cpu' 'int ()'     |   |-DeclRefExpr 0x153027038 <col:19> 'int' lvalue Var 0x1530269c0 'cpu' 'int'     |   `-UnaryOperator 0x153027100 <col:24, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-CXXDependentScopeMemberExpr 0x1530270b8 <col:25, col:39> '<dependent type>' contains-errors lvalue .cpu_attach_mask     |       `-RecoveryExpr 0x153027090 <col:25, col:31> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x153027058 <col:25> 'struct mm_struct *' lvalue ParmVar 0x15300e338 'next' 'struct mm_struct *'     |-CallExpr 0x1530273a8 <line:12:2, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x153027248 <col:2> 'int ()' Function 0x153027190 '__ctl_load' 'int ()'     | |-CXXDependentScopeMemberExpr 0x153027360 <col:13, col:26> '<dependent type>' contains-errors lvalue .kernel_asce     | | `-RecoveryExpr 0x153027340 <col:13> '<dependent type>' contains-errors lvalue     | |-IntegerLiteral 0x1530272c8 <col:39> 'int' 1     | `-IntegerLiteral 0x1530272e8 <col:42> 'int' 1     |-CallExpr 0x153027540 <line:13:2, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1530273e0 <col:2> 'int ()' Function 0x153027190 '__ctl_load' 'int ()'     | |-CXXDependentScopeMemberExpr 0x1530274f8 <col:13, col:26> '<dependent type>' contains-errors lvalue .kernel_asce     | | `-RecoveryExpr 0x1530274d8 <col:13> '<dependent type>' contains-errors lvalue     | |-IntegerLiteral 0x153027460 <col:39> 'int' 7     | `-IntegerLiteral 0x153027480 <col:42> 'int' 7     |-CallExpr 0x153029398 <line:14:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1530292b8 <col:2> 'int ()' Function 0x153029200 'atomic_inc' 'int ()'     | `-UnaryOperator 0x153029380 <col:13, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x153029338 <col:14, col:28> '<dependent type>' contains-errors lvalue .attach_count     |     `-RecoveryExpr 0x153029310 <col:14, col:20> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x1530292d8 <col:14> 'struct mm_struct *' lvalue ParmVar 0x15300e338 'next' 'struct mm_struct *'     |-CallExpr 0x153029580 <line:15:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1530294a0 <col:2> 'int ()' Function 0x1530293e8 'atomic_dec' 'int ()'     | `-UnaryOperator 0x153029568 <col:13, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x153029520 <col:14, col:28> '<dependent type>' contains-errors lvalue .attach_count     |     `-RecoveryExpr 0x1530294f8 <col:14, col:20> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x1530294c0 <col:14> 'struct mm_struct *' lvalue ParmVar 0x15300e248 'prev' 'struct mm_struct *'     `-IfStmt 0x1530297f0 <line:16:2, line:17:56>       |-RecoveryExpr 0x1530295c0 <line:16:6> '<dependent type>' contains-errors lvalue       `-CallExpr 0x1530297c0 <line:17:3, col:56> '<dependent type>' contains-errors         |-DeclRefExpr 0x1530296c0 <col:3> 'int ()' Function 0x153029608 'cpumask_clear_cpu' 'int ()'         |-DeclRefExpr 0x1530296e0 <col:21> 'int' lvalue Var 0x1530269c0 'cpu' 'int'         `-UnaryOperator 0x1530297a8 <col:26, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow           `-CXXDependentScopeMemberExpr 0x153029760 <col:27, col:41> '<dependent type>' contains-errors lvalue .cpu_attach_mask             `-RecoveryExpr 0x153029738 <col:27, col:33> '<dependent type>' contains-errors lvalue               `-DeclRefExpr 0x153029700 <col:27> 'struct mm_struct *' lvalue ParmVar 0x15300e248 'prev' 'struct mm_struct *' ","20899":"`-FunctionDecl 0x144093a88  line:1:15 invalid jas_matrix_create 'int *(int, int)'   |-ParmVarDecl 0x1440938f0 <col:33, col:37> col:37 used numrows 'int'   |-ParmVarDecl 0x144093970 <col:46, col:50> col:50 used numcols 'int'   `-CompoundStmt 0x1440ade78 <line:2:1, line:47:1>     |-DeclStmt 0x144093bd8 <line:4:2, col:7>     | `-VarDecl 0x144093b70 <col:2, col:6> col:6 used i 'int'     |-IfStmt 0x144093e18 <line:6:2, line:8:2>     | |-RecoveryExpr 0x144093d98 <line:6:6, col:49> '_Bool' contains-errors     | `-CompoundStmt 0x144093e00 <col:52, line:8:2>     |   `-ReturnStmt 0x144093df0 <line:7:3, col:10>     |     `-ImplicitCastExpr 0x144093dd8 <col:10> 'int *' <NullToPointer>     |       `-IntegerLiteral 0x144093db8 <col:10> 'int' 0     |-IfStmt 0x1440ada08 <line:17:2, line:23:2>     | |-BinaryOperator 0x1440ad6a8 <line:17:6, col:25> 'int' contains-errors '>'     | | |-CXXDependentScopeMemberExpr 0x1440ad660 <col:6, col:14> '<dependent type>' contains-errors lvalue ->maxrows_     | | | `-RecoveryExpr 0x1440ad640 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x1440ad600 <col:25> 'int' 0     | `-CompoundStmt 0x1440ad9f0 <col:28, line:23:2>     |   `-IfStmt 0x1440ad9d0 <line:18:3, line:22:3>     |     |-RecoveryExpr 0x1440ad7c0 <line:18:7, line:19:28> '_Bool' contains-errors     |     `-CompoundStmt 0x1440ad9b0 <col:31, line:22:3>     |       |-CallExpr 0x1440ad940 <line:20:4, col:29> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x1440ad8c0 <col:4> 'int ()' Function 0x1440ad808 'jas_matrix_destroy' 'int ()'     |       | `-RecoveryExpr 0x1440ad920 <col:23> '<dependent type>' contains-errors lvalue     |       `-ReturnStmt 0x1440ad9a0 <line:21:4, col:11>     |         `-ImplicitCastExpr 0x1440ad988 <col:11> 'int *' <NullToPointer>     |           `-IntegerLiteral 0x1440ad968 <col:11> 'int' 0     |-IfStmt 0x1440adb60 <line:25:2, line:31:2>     | |-RecoveryExpr 0x1440ada48 <line:25:6, col:26> '_Bool' contains-errors     | `-CompoundStmt 0x1440adb48 <col:29, line:31:2>     |   `-IfStmt 0x1440adb28 <line:26:3, line:30:3>     |     |-RecoveryExpr 0x1440ada88 <line:26:7, line:27:26> '_Bool' contains-errors     |     `-CompoundStmt 0x1440adb10 <col:29, line:30:3>     |       `-ReturnStmt 0x1440adb00 <line:29:4, col:11>     |         `-ImplicitCastExpr 0x1440adae8 <col:11> 'int *' <NullToPointer>     |           `-IntegerLiteral 0x1440adac8 <col:11> 'int' 0     `-ForStmt 0x1440adcf8 <line:33:2, line:35:2>       |-BinaryOperator 0x1440adbc0 <line:33:7, col:11> 'int' '='       | |-DeclRefExpr 0x1440adb80 <col:7> 'int' lvalue Var 0x144093b70 'i' 'int'       | `-IntegerLiteral 0x1440adba0 <col:11> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x1440adc50 <col:14, col:18> 'int' '<'       | |-ImplicitCastExpr 0x1440adc20 <col:14> 'int' <LValueToRValue>       | | `-DeclRefExpr 0x1440adbe0 <col:14> 'int' lvalue Var 0x144093b70 'i' 'int'       | `-ImplicitCastExpr 0x1440adc38 <col:18> 'int' <LValueToRValue>       |   `-DeclRefExpr 0x1440adc00 <col:18> 'int' lvalue ParmVar 0x1440938f0 'numrows' 'int'       |-UnaryOperator 0x1440adc90 <col:27, col:29> 'int' prefix '++'       | `-DeclRefExpr 0x1440adc70 <col:29> 'int' lvalue Var 0x144093b70 'i' 'int'       `-CompoundStmt 0x1440adce8 <col:32, line:35:2> ","20397":"`-FunctionDecl 0x158128280  line:1:6 invalid HardSwishFree 'void (int *, void *)'   |-ParmVarDecl 0x158128128 <col:20, col:35> col:35 invalid context 'int *'   |-ParmVarDecl 0x1581281a8 <col:44, col:50> col:50 buffer 'void *'   `-CompoundStmt 0x158128338 <col:58, line:3:1> ","20936":"`-FunctionDecl 0x14000de58  line:1:1 invalid getEntitySplit 'int (void *, const int *)'   |-ParmVarDecl 0x14000dcd8 <col:16, col:22> col:22 used ctx 'void *'   |-ParmVarDecl 0x14000dd70 <col:27, col:42> col:42 invalid name 'const int *'   `-CompoundStmt 0x14000e330 <line:2:1, line:8:1> ","20884":"`-FunctionDecl 0x14682b778  line:1:6 invalid f2fs_init_extent_tree 'int (struct inode *, struct f2fs_extent *)'   |-ParmVarDecl 0x14680e268 <col:28, col:42> col:42 used inode 'struct inode *'   |-ParmVarDecl 0x14682b658 <col:49, col:69> col:69 used i_ext 'struct f2fs_extent *'   `-CompoundStmt 0x146122808 <line:2:1, line:37:1>     |-DeclStmt 0x14682bc58 <line:3:2, col:45>     | |-RecordDecl 0x14682b830 <col:2, col:9> col:9 struct f2fs_sb_info     | `-VarDecl 0x14682b998 <col:2, col:44> col:23 used sbi 'struct f2fs_sb_info *' cinit     |   `-ImplicitCastExpr 0x14682bc28 <col:29, col:44> 'struct f2fs_sb_info *' <IntegralToPointer>     |     `-CallExpr 0x14682bbe8 <col:29, col:44> 'int'     |       |-ImplicitCastExpr 0x14682bbd0 <col:29> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14682bb60 <col:29> 'int ()' Function 0x14682baa8 'F2FS_I_SB' 'int ()'     |       `-ImplicitCastExpr 0x14682bc10 <col:39> 'struct inode *' <LValueToRValue>     |         `-DeclRefExpr 0x14682bb80 <col:39> 'struct inode *' lvalue ParmVar 0x14680e268 'inode' 'struct inode *'     |-DeclStmt 0x14682be58 <line:4:2, col:24>     | |-RecordDecl 0x14682bc70 <col:2, col:9> col:9 struct extent_tree     | `-VarDecl 0x14682bdd8 <col:2, col:22> col:22 used et 'struct extent_tree *'     |-DeclStmt 0x14682c058 <line:5:2, col:24>     | |-RecordDecl 0x14682be70 <col:2, col:9> col:9 struct extent_node     | `-VarDecl 0x14682bfd8 <col:2, col:22> col:22 used en 'struct extent_node *'     |-DeclStmt 0x14682c1e8 <line:6:2, col:23>     | |-RecordDecl 0x14682c070 <col:2, col:9> col:9 struct extent_info     | `-VarDecl 0x14682c168 <col:2, col:21> col:21 invalid ei 'struct extent_info'     |-IfStmt 0x14682c588 <line:8:2, line:15:2>     | |-UnaryOperator 0x14682c378 <line:8:6, col:33> 'int' prefix '!' cannot overflow     | | `-CallExpr 0x14682c338 <col:7, col:33> 'int'     | |   |-ImplicitCastExpr 0x14682c320 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x14682c2e0 <col:7> 'int ()' Function 0x14682c228 'f2fs_may_extent_tree' 'int ()'     | |   `-ImplicitCastExpr 0x14682c360 <col:28> 'struct inode *' <LValueToRValue>     | |     `-DeclRefExpr 0x14682c300 <col:28> 'struct inode *' lvalue ParmVar 0x14680e268 'inode' 'struct inode *'     | `-CompoundStmt 0x14682c570 <col:36, line:15:2>     |   `-IfStmt 0x14682c538 <line:10:3, line:13:3>     |     |-BinaryOperator 0x14682c410 <line:10:7, col:23> 'int' contains-errors '&&'     |     | |-DeclRefExpr 0x14682c390 <col:7> 'struct f2fs_extent *' lvalue ParmVar 0x14682b658 'i_ext' 'struct f2fs_extent *'     |     | `-RecoveryExpr 0x14682c3e8 <col:16, col:23> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x14682c3b0 <col:16> 'struct f2fs_extent *' lvalue ParmVar 0x14682b658 'i_ext' 'struct f2fs_extent *'     |     `-CompoundStmt 0x14682c518 <col:28, line:13:3>     |       |-BinaryOperator 0x14682c4b0 <line:11:4, col:17> '<dependent type>' contains-errors '='     |       | |-RecoveryExpr 0x14682c468 <col:4, col:11> '<dependent type>' contains-errors lvalue     |       | | `-DeclRefExpr 0x14682c430 <col:4> 'struct f2fs_extent *' lvalue ParmVar 0x14682b658 'i_ext' 'struct f2fs_extent *'     |       | `-IntegerLiteral 0x14682c490 <col:17> 'int' 0     |       `-ReturnStmt 0x14682c508 <line:12:4, col:11>     |         `-RecoveryExpr 0x14682c4e8 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14682d168 <line:17:2, col:31> 'struct extent_tree *' '='     | |-DeclRefExpr 0x14682c5a8 <col:2> 'struct extent_tree *' lvalue Var 0x14682bdd8 'et' 'struct extent_tree *'     | `-ImplicitCastExpr 0x14682d150 <col:7, col:31> 'struct extent_tree *' <IntegralToPointer>     |   `-CallExpr 0x14682d110 <col:7, col:31> 'int'     |     |-ImplicitCastExpr 0x14682d0f8 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14682d0b8 <col:7> 'int ()' Function 0x14682d000 '__grab_extent_tree' 'int ()'     |     `-ImplicitCastExpr 0x14682d138 <col:26> 'struct inode *' <LValueToRValue>     |       `-DeclRefExpr 0x14682d0d8 <col:26> 'struct inode *' lvalue ParmVar 0x14680e268 'inode' 'struct inode *'     |-CallExpr 0x14682d478 <line:22:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14682d400 <col:2> 'int ()' Function 0x14682d348 'get_extent_info' 'int ()'     | |-UnaryOperator 0x14682d440 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x14682d420 <col:19> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x14682d458 <col:23> 'struct f2fs_extent *' lvalue ParmVar 0x14682b658 'i_ext' 'struct f2fs_extent *'     |-CallExpr 0x14682d620 <line:24:2, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14682d588 <col:2> 'int ()' Function 0x14682d4d0 'write_lock' 'int ()'     | `-UnaryOperator 0x14682d608 <col:13, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14682d5e0 <col:14, col:18> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14682d5a8 <col:14> 'struct extent_tree *' lvalue Var 0x14682bdd8 'et' 'struct extent_tree *'     |-IfStmt 0x14682d850 <line:25:2, line:26:8>     | |-CallExpr 0x14682d7c0 <line:25:6, col:31> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14682d728 <col:6> 'int ()' Function 0x14682d670 'atomic_read' 'int ()'     | | `-UnaryOperator 0x14682d7a8 <col:18, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x14682d780 <col:19, col:23> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x14682d748 <col:19> 'struct extent_tree *' lvalue Var 0x14682bdd8 'et' 'struct extent_tree *'     | `-GotoStmt 0x14682d838 <line:26:3, col:8> 'out' 0x14682d7e8     |-BinaryOperator 0x14682da40 <line:28:2, col:38> 'struct extent_node *' contains-errors '='     | |-DeclRefExpr 0x14682d870 <col:2> 'struct extent_node *' lvalue Var 0x14682bfd8 'en' 'struct extent_node *'     | `-CallExpr 0x14682da08 <col:7, col:38> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14682d970 <col:7> 'int ()' Function 0x14682d8b8 '__init_extent_tree' 'int ()'     |   |-DeclRefExpr 0x14682d990 <col:26> 'struct f2fs_sb_info *' lvalue Var 0x14682b998 'sbi' 'struct f2fs_sb_info *'     |   |-DeclRefExpr 0x14682d9b0 <col:31> 'struct extent_tree *' lvalue Var 0x14682bdd8 'et' 'struct extent_tree *'     |   `-UnaryOperator 0x14682d9f0 <col:35, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x14682d9d0 <col:36> '<dependent type>' contains-errors lvalue     |-IfStmt 0x146122628 <line:29:2, line:33:2>     | |-ImplicitCastExpr 0x14682da80 <line:29:6> 'struct extent_node *' <LValueToRValue>     | | `-DeclRefExpr 0x14682da60 <col:6> 'struct extent_node *' lvalue Var 0x14682bfd8 'en' 'struct extent_node *'     | `-CompoundStmt 0x146122600 <col:10, line:33:2>     |   |-CallExpr 0x14682dc10 <line:30:3, col:30> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14682db78 <col:3> 'int ()' Function 0x14682dac0 'spin_lock' 'int ()'     |   | `-UnaryOperator 0x14682dbf8 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x14682dbd0 <col:14, col:19> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x14682db98 <col:14> 'struct f2fs_sb_info *' lvalue Var 0x14682b998 'sbi' 'struct f2fs_sb_info *'     |   |-CallExpr 0x14682de28 <line:31:3, col:45> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14682dd18 <col:3> 'int ()' Function 0x14682dc60 'list_add_tail' 'int ()'     |   | |-UnaryOperator 0x14682dd98 <col:17, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-RecoveryExpr 0x14682dd70 <col:18, col:22> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x14682dd38 <col:18> 'struct extent_node *' lvalue Var 0x14682bfd8 'en' 'struct extent_node *'     |   | `-UnaryOperator 0x14682de10 <col:28, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x14682dde8 <col:29, col:34> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x14682ddb0 <col:29> 'struct f2fs_sb_info *' lvalue Var 0x14682b998 'sbi' 'struct f2fs_sb_info *'     |   `-CallExpr 0x14682dfd0 <line:32:3, col:32> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14682df38 <col:3> 'int ()' Function 0x14682de80 'spin_unlock' 'int ()'     |     `-UnaryOperator 0x14682dfb8 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x14682df90 <col:16, col:21> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x14682df58 <col:16> 'struct f2fs_sb_info *' lvalue Var 0x14682b998 'sbi' 'struct f2fs_sb_info *'     `-LabelStmt 0x1461227e8 <line:34:1, line:35:24> 'out'       `-CallExpr 0x1461227c0 <col:2, col:24> '<dependent type>' contains-errors         |-DeclRefExpr 0x146122728 <col:2> 'int ()' Function 0x146122670 'write_unlock' 'int ()'         `-UnaryOperator 0x1461227a8 <col:15, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow           `-RecoveryExpr 0x146122780 <col:16, col:20> '<dependent type>' contains-errors lvalue             `-DeclRefExpr 0x146122748 <col:16> 'struct extent_tree *' lvalue Var 0x14682bdd8 'et' 'struct extent_tree *' ","20749":"`-FunctionDecl 0x15a80de38  line:1:1 TEST_F 'int (int, int)'   |-ParmVarDecl 0x15a80dd58 <col:8> col:8 LuaHeaderMapWrapperTest 'int'   |-ParmVarDecl 0x15a80dcd8 <col:33> col:33 Methods 'int'   `-CompoundStmt 0x15a80df50 <col:42, line:33:2> ","20770":"`-FunctionDecl 0x129140c08  line:1:1 parse_STACK_PUSH 'int (char *, struct ofpbuf *, enum ofputil_protocol *)'   |-ParmVarDecl 0x1291280d8 <col:18, col:24> col:24 used arg 'char *'   |-ParmVarDecl 0x1291286c8 <col:29, col:44> col:44 used ofpacts 'struct ofpbuf *'   |-ParmVarDecl 0x129140ac8 <line:2:18, col:41> col:41 usable_protocols 'enum ofputil_protocol *'   `-CompoundStmt 0x129141098 <line:3:1, line:5:1>     `-ReturnStmt 0x129141088 <line:4:5, col:70>       `-CallExpr 0x129141040 <col:12, col:70> 'int'         |-ImplicitCastExpr 0x129141028 <col:12> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x129140e40 <col:12> 'int ()' Function 0x129140d88 'nxm_parse_stack_action' 'int ()'         |-CallExpr 0x129140fc8 <col:35, col:64> 'int'         | |-ImplicitCastExpr 0x129140fb0 <col:35> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x129140f40 <col:35> 'int ()' Function 0x129140e88 'ofpact_put_STACK_PUSH' 'int ()'         | `-ImplicitCastExpr 0x129140ff0 <col:57> 'struct ofpbuf *' <LValueToRValue>         |   `-DeclRefExpr 0x129140f60 <col:57> 'struct ofpbuf *' lvalue ParmVar 0x1291286c8 'ofpacts' 'struct ofpbuf *'         `-ImplicitCastExpr 0x129141070 <col:67> 'char *' <LValueToRValue>           `-DeclRefExpr 0x129141008 <col:67> 'char *' lvalue ParmVar 0x1291280d8 'arg' 'char *' ","20407":"`-FunctionDecl 0x151008490  col:6 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x151008590 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x1510085f8 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x151008538 <<invalid sloc>> Implicit 887 ","20827":"`-FunctionDecl 0x1448ba348  line:1:5 security_inode_getattr 'int (struct vfsmount *, struct dentry *)'   |-ParmVarDecl 0x1448a1e48 <col:28, col:45> col:45 used mnt 'struct vfsmount *'   |-ParmVarDecl 0x1448ba228 <col:50, col:65> col:65 used dentry 'struct dentry *'   `-CompoundStmt 0x1448ba908 <line:2:1, line:6:1>     |-IfStmt 0x1448ba770 <line:3:2, line:4:10>     | |-CallExpr 0x1448ba718 <line:3:6, col:42> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1448ba570 <col:6> 'int ()' Function 0x1448ba4b8 'unlikely' 'int ()'     | | `-CallExpr 0x1448ba6f0 <col:15, col:41> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x1448ba670 <col:15> 'int ()' Function 0x1448ba5b8 'IS_PRIVATE' 'int ()'     | |   `-RecoveryExpr 0x1448ba6c8 <col:26, col:34> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x1448ba690 <col:26> 'struct dentry *' lvalue ParmVar 0x1448ba228 'dentry' 'struct dentry *'     | `-ReturnStmt 0x1448ba760 <line:4:3, col:10>     |   `-IntegerLiteral 0x1448ba740 <col:10> 'int' 0     `-ReturnStmt 0x1448ba8f8 <line:5:2, col:48>       `-CallExpr 0x1448ba8c8 <col:9, col:48> '<dependent type>' contains-errors         |-CXXDependentScopeMemberExpr 0x1448ba880 <col:9, col:23> '<dependent type>' contains-errors lvalue ->inode_getattr         | `-RecoveryExpr 0x1448ba860 <col:9> '<dependent type>' contains-errors lvalue         |-DeclRefExpr 0x1448ba7f0 <col:37> 'struct vfsmount *' lvalue ParmVar 0x1448a1e48 'mnt' 'struct vfsmount *'         `-DeclRefExpr 0x1448ba810 <col:42> 'struct dentry *' lvalue ParmVar 0x1448ba228 'dentry' 'struct dentry *' ","20808":"`-FunctionDecl 0x12c00dea8  line:1:15 mask_password 'char **(int, char ***)' static   |-ParmVarDecl 0x12c00dcd8 <col:29, col:33> col:33 used argc 'int'   |-ParmVarDecl 0x12c00ddc0 <col:39, col:47> col:47 used argv 'char ***'   `-CompoundStmt 0x12c02ad20 <line:2:1, line:23:1>     |-DeclStmt 0x12c00e028 <line:3:3, col:19>     | `-VarDecl 0x12c00dfc0 <col:3, col:10> col:10 used temp_argv 'char **'     |-UnaryOperator 0x12c028ea8 <line:5:3, col:7> 'int' postfix '--'     | `-DeclRefExpr 0x12c028e88 <col:3> 'int' lvalue ParmVar 0x12c00dcd8 'argc' 'int'     |-WhileStmt 0x12c02a7e0 <line:6:3, line:20:3>     | |-BinaryOperator 0x12c028f18 <line:6:10, col:17> 'int' '>'     | | |-ImplicitCastExpr 0x12c028f00 <col:10> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x12c028ec0 <col:10> 'int' lvalue ParmVar 0x12c00dcd8 'argc' 'int'     | | `-IntegerLiteral 0x12c028ee0 <col:17> 'int' 0     | `-CompoundStmt 0x12c02a7b8 <line:7:3, line:20:3>     |   |-BinaryOperator 0x12c0294b0 <line:8:5, col:58> 'char *' contains-errors '='     |   | |-ArraySubscriptExpr 0x12c029378 <col:5, col:19> 'char *' lvalue     |   | | |-ImplicitCastExpr 0x12c029348 <col:5> 'char **' <LValueToRValue>     |   | | | `-DeclRefExpr 0x12c028f38 <col:5> 'char **' lvalue Var 0x12c00dfc0 'temp_argv' 'char **'     |   | | `-ImplicitCastExpr 0x12c029360 <col:15> 'int' <LValueToRValue>     |   | |   `-DeclRefExpr 0x12c028f58 <col:15> 'int' lvalue ParmVar 0x12c00dcd8 'argc' 'int'     |   | `-CallExpr 0x12c029480 <col:22, col:58> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x12c0290a8 <col:22> 'int ()' Function 0x12c028ff0 'my_strdup' 'int ()'     |   |   |-ArraySubscriptExpr 0x12c029418 <col:32, col:44> 'char *' lvalue     |   |   | |-ImplicitCastExpr 0x12c0293e8 <col:32, col:38> 'char **' <LValueToRValue>     |   |   | | `-ParenExpr 0x12c0293c8 <col:32, col:38> 'char **' lvalue     |   |   | |   `-UnaryOperator 0x12c0293b0 <col:33, col:34> 'char **' lvalue prefix '*' cannot overflow     |   |   | |     `-ImplicitCastExpr 0x12c029398 <col:34> 'char ***' <LValueToRValue>     |   |   | |       `-DeclRefExpr 0x12c0290c8 <col:34> 'char ***' lvalue ParmVar 0x12c00ddc0 'argv' 'char ***'     |   |   | `-ImplicitCastExpr 0x12c029400 <col:40> 'int' <LValueToRValue>     |   |   |   `-DeclRefExpr 0x12c029138 <col:40> 'int' lvalue ParmVar 0x12c00dcd8 'argc' 'int'     |   |   `-CallExpr 0x12c029458 <col:47, col:57> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x12c0291a8 <col:47> 'int ()' Function 0x12c00e280 'MYF' 'int ()'     |   |     `-RecoveryExpr 0x12c029438 <col:51> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x12c02a760 <line:9:5, line:18:6>     |   | |-BinaryOperator 0x12c029da0 <line:9:9, line:10:75> 'int' contains-errors '||'     |   | | |-BinaryOperator 0x12c029bf0 <line:9:9, col:75> 'int' contains-errors '=='     |   | | | |-CallExpr 0x12c029b98 <col:9, col:70> '<dependent type>' contains-errors     |   | | | | |-DeclRefExpr 0x12c0295b0 <col:9> 'int ()' Function 0x12c0294f8 'find_type' 'int ()'     |   | | | | |-ArraySubscriptExpr 0x12c029b20 <col:19, col:35> 'char *' lvalue     |   | | | | | |-ImplicitCastExpr 0x12c029b08 <col:19, col:25> 'char **' <LValueToRValue>     |   | | | | | | `-ParenExpr 0x12c029ab0 <col:19, col:25> 'char **' lvalue     |   | | | | | |   `-UnaryOperator 0x12c029a98 <col:20, col:21> 'char **' lvalue prefix '*' cannot overflow     |   | | | | | |     `-ImplicitCastExpr 0x12c029a80 <col:21> 'char ***' <LValueToRValue>     |   | | | | | |       `-DeclRefExpr 0x12c0295d0 <col:21> 'char ***' lvalue ParmVar 0x12c00ddc0 'argv' 'char ***'     |   | | | | | `-BinaryOperator 0x12c029ae8 <col:27, col:34> 'int' '-'     |   | | | | |   |-ImplicitCastExpr 0x12c029ad0 <col:27> 'int' <LValueToRValue>     |   | | | | |   | `-DeclRefExpr 0x12c029640 <col:27> 'int' lvalue ParmVar 0x12c00dcd8 'argc' 'int'     |   | | | | |   `-IntegerLiteral 0x12c029660 <col:34> 'int' 1     |   | | | | |-UnaryOperator 0x12c029b60 <col:37, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | | | | `-RecoveryExpr 0x12c029b40 <col:38> '<dependent type>' contains-errors lvalue     |   | | | | `-RecoveryExpr 0x12c029b78 <col:55> '<dependent type>' contains-errors lvalue     |   | | | `-RecoveryExpr 0x12c029bd0 <col:75> '<dependent type>' contains-errors lvalue     |   | | `-BinaryOperator 0x12c029d80 <line:10:9, col:75> 'int' contains-errors '=='     |   | |   |-CallExpr 0x12c029d28 <col:9, col:70> '<dependent type>' contains-errors     |   | |   | |-DeclRefExpr 0x12c0297a8 <col:9> 'int ()' Function 0x12c0294f8 'find_type' 'int ()'     |   | |   | |-ArraySubscriptExpr 0x12c029cb0 <col:19, col:35> 'char *' lvalue     |   | |   | | |-ImplicitCastExpr 0x12c029c98 <col:19, col:25> 'char **' <LValueToRValue>     |   | |   | | | `-ParenExpr 0x12c029c40 <col:19, col:25> 'char **' lvalue     |   | |   | | |   `-UnaryOperator 0x12c029c28 <col:20, col:21> 'char **' lvalue prefix '*' cannot overflow     |   | |   | | |     `-ImplicitCastExpr 0x12c029c10 <col:21> 'char ***' <LValueToRValue>     |   | |   | | |       `-DeclRefExpr 0x12c0297c8 <col:21> 'char ***' lvalue ParmVar 0x12c00ddc0 'argv' 'char ***'     |   | |   | | `-BinaryOperator 0x12c029c78 <col:27, col:34> 'int' '-'     |   | |   | |   |-ImplicitCastExpr 0x12c029c60 <col:27> 'int' <LValueToRValue>     |   | |   | |   | `-DeclRefExpr 0x12c029838 <col:27> 'int' lvalue ParmVar 0x12c00dcd8 'argc' 'int'     |   | |   | |   `-IntegerLiteral 0x12c029858 <col:34> 'int' 1     |   | |   | |-UnaryOperator 0x12c029cf0 <col:37, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | |   | | `-RecoveryExpr 0x12c029cd0 <col:38> '<dependent type>' contains-errors lvalue     |   | |   | `-RecoveryExpr 0x12c029d08 <col:55> '<dependent type>' contains-errors lvalue     |   | |   `-RecoveryExpr 0x12c029d60 <col:75> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x12c02a730 <line:11:5, line:18:6>     |   |   |-DeclStmt 0x12c02a360 <line:12:7, col:33>     |   |   | `-VarDecl 0x12c02a200 <col:7, col:32> col:13 used start 'char *' cinit     |   |   |   `-ImplicitCastExpr 0x12c02a348 <col:20, col:32> 'char *' <LValueToRValue>     |   |   |     `-ArraySubscriptExpr 0x12c02a328 <col:20, col:32> 'char *' lvalue     |   |   |       |-ImplicitCastExpr 0x12c02a2f8 <col:20, col:26> 'char **' <LValueToRValue>     |   |   |       | `-ParenExpr 0x12c02a2b8 <col:20, col:26> 'char **' lvalue     |   |   |       |   `-UnaryOperator 0x12c02a2a0 <col:21, col:22> 'char **' lvalue prefix '*' cannot overflow     |   |   |       |     `-ImplicitCastExpr 0x12c02a288 <col:22> 'char ***' <LValueToRValue>     |   |   |       |       `-DeclRefExpr 0x12c02a268 <col:22> 'char ***' lvalue ParmVar 0x12c00ddc0 'argv' 'char ***'     |   |   |       `-ImplicitCastExpr 0x12c02a310 <col:28> 'int' <LValueToRValue>     |   |   |         `-DeclRefExpr 0x12c02a2d8 <col:28> 'int' lvalue ParmVar 0x12c00dcd8 'argc' 'int'     |   |   |-WhileStmt 0x12c02a480 <line:13:7, line:14:19>     |   |   | |-ImplicitCastExpr 0x12c02a3c8 <line:13:14, col:15> 'char' <LValueToRValue>     |   |   | | `-UnaryOperator 0x12c02a3b0 <col:14, col:15> 'char' lvalue prefix '*' cannot overflow     |   |   | |   `-ImplicitCastExpr 0x12c02a398 <col:15> 'char *' <LValueToRValue>     |   |   | |     `-DeclRefExpr 0x12c02a378 <col:15> 'char *' lvalue Var 0x12c02a200 'start' 'char *'     |   |   | `-BinaryOperator 0x12c02a460 <line:14:9, col:19> 'char' '='     |   |   |   |-UnaryOperator 0x12c02a418 <col:9, col:15> 'char' lvalue prefix '*' cannot overflow     |   |   |   | `-UnaryOperator 0x12c02a400 <col:10, col:15> 'char *' postfix '++'     |   |   |   |   `-DeclRefExpr 0x12c02a3e0 <col:10> 'char *' lvalue Var 0x12c02a200 'start' 'char *'     |   |   |   `-ImplicitCastExpr 0x12c02a448 <col:19> 'char' <IntegralCast>     |   |   |     `-CharacterLiteral 0x12c02a430 <col:19> 'int' 120     |   |   |-BinaryOperator 0x12c02a5b8 <line:15:7, col:26> 'char *' '='     |   |   | |-DeclRefExpr 0x12c02a4a0 <col:7> 'char *' lvalue Var 0x12c02a200 'start' 'char *'     |   |   | `-ImplicitCastExpr 0x12c02a5a0 <col:14, col:26> 'char *' <LValueToRValue>     |   |   |   `-ArraySubscriptExpr 0x12c02a580 <col:14, col:26> 'char *' lvalue     |   |   |     |-ImplicitCastExpr 0x12c02a550 <col:14, col:20> 'char **' <LValueToRValue>     |   |   |     | `-ParenExpr 0x12c02a510 <col:14, col:20> 'char **' lvalue     |   |   |     |   `-UnaryOperator 0x12c02a4f8 <col:15, col:16> 'char **' lvalue prefix '*' cannot overflow     |   |   |     |     `-ImplicitCastExpr 0x12c02a4e0 <col:16> 'char ***' <LValueToRValue>     |   |   |     |       `-DeclRefExpr 0x12c02a4c0 <col:16> 'char ***' lvalue ParmVar 0x12c00ddc0 'argv' 'char ***'     |   |   |     `-ImplicitCastExpr 0x12c02a568 <col:22> 'int' <LValueToRValue>     |   |   |       `-DeclRefExpr 0x12c02a530 <col:22> 'int' lvalue ParmVar 0x12c00dcd8 'argc' 'int'     |   |   `-IfStmt 0x12c02a710 <line:16:7, line:17:19>     |   |     |-ImplicitCastExpr 0x12c02a628 <line:16:11, col:12> 'char' <LValueToRValue>     |   |     | `-UnaryOperator 0x12c02a610 <col:11, col:12> 'char' lvalue prefix '*' cannot overflow     |   |     |   `-ImplicitCastExpr 0x12c02a5f8 <col:12> 'char *' <LValueToRValue>     |   |     |     `-DeclRefExpr 0x12c02a5d8 <col:12> 'char *' lvalue Var 0x12c02a200 'start' 'char *'     |   |     `-BinaryOperator 0x12c02a6f0 <line:17:9, col:19> 'char' '='     |   |       |-ArraySubscriptExpr 0x12c02a698 <col:9, col:16> 'char' lvalue     |   |       | |-ImplicitCastExpr 0x12c02a680 <col:9> 'char *' <LValueToRValue>     |   |       | | `-DeclRefExpr 0x12c02a640 <col:9> 'char *' lvalue Var 0x12c02a200 'start' 'char *'     |   |       | `-IntegerLiteral 0x12c02a660 <col:15> 'int' 1     |   |       `-ImplicitCastExpr 0x12c02a6d8 <col:19> 'char' <IntegralCast>     |   |         `-IntegerLiteral 0x12c02a6b8 <col:19> 'int' 0     |   `-UnaryOperator 0x12c02a7a0 <line:19:5, col:9> 'int' postfix '--'     |     `-DeclRefExpr 0x12c02a780 <col:5> 'int' lvalue ParmVar 0x12c00dcd8 'argc' 'int'     |-BinaryOperator 0x12c02ac98 <line:21:3, col:56> 'char *' contains-errors '='     | |-ArraySubscriptExpr 0x12c02ab60 <col:3, col:17> 'char *' lvalue     | | |-ImplicitCastExpr 0x12c02ab30 <col:3> 'char **' <LValueToRValue>     | | | `-DeclRefExpr 0x12c02a800 <col:3> 'char **' lvalue Var 0x12c00dfc0 'temp_argv' 'char **'     | | `-ImplicitCastExpr 0x12c02ab48 <col:13> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x12c02a820 <col:13> 'int' lvalue ParmVar 0x12c00dcd8 'argc' 'int'     | `-CallExpr 0x12c02ac68 <col:20, col:56> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12c02a890 <col:20> 'int ()' Function 0x12c028ff0 'my_strdup' 'int ()'     |   |-ArraySubscriptExpr 0x12c02ac00 <col:30, col:42> 'char *' lvalue     |   | |-ImplicitCastExpr 0x12c02abd0 <col:30, col:36> 'char **' <LValueToRValue>     |   | | `-ParenExpr 0x12c02abb0 <col:30, col:36> 'char **' lvalue     |   | |   `-UnaryOperator 0x12c02ab98 <col:31, col:32> 'char **' lvalue prefix '*' cannot overflow     |   | |     `-ImplicitCastExpr 0x12c02ab80 <col:32> 'char ***' <LValueToRValue>     |   | |       `-DeclRefExpr 0x12c02a8b0 <col:32> 'char ***' lvalue ParmVar 0x12c00ddc0 'argv' 'char ***'     |   | `-ImplicitCastExpr 0x12c02abe8 <col:38> 'int' <LValueToRValue>     |   |   `-DeclRefExpr 0x12c02a920 <col:38> 'int' lvalue ParmVar 0x12c00dcd8 'argc' 'int'     |   `-CallExpr 0x12c02ac40 <col:45, col:55> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12c02a990 <col:45> 'int ()' Function 0x12c00e280 'MYF' 'int ()'     |     `-RecoveryExpr 0x12c02ac20 <col:49> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12c02ad10 <line:22:3, col:19>       `-ImplicitCastExpr 0x12c02acf8 <col:9, col:19> 'char **' <LValueToRValue>         `-ParenExpr 0x12c02acd8 <col:9, col:19> 'char **' lvalue           `-DeclRefExpr 0x12c02acb8 <col:10> 'char **' lvalue Var 0x12c00dfc0 'temp_argv' 'char **' ","20322":"`-FunctionDecl 0x13e80ddc8  line:1:14 invalid XMLRPC_DupValueNew 'int (int)'   |-ParmVarDecl 0x13e80dcf0 <col:34, col:47> col:47 invalid xSource 'int'   `-CompoundStmt 0x13f8098d8 <col:56, line:41:1>     `-IfStmt 0x13f8098b8 <line:3:2, line:39:2>       |-RecoveryExpr 0x13e80de78 <line:3:6> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x13f809898 <col:15, line:39:2>         |-IfStmt 0x13e80e3b0 <line:5:3, line:7:3>         | |-CXXDependentScopeMemberExpr 0x13e80e0e0 <line:5:7, col:19> '<dependent type>' contains-errors lvalue .len         | | `-CXXDependentScopeMemberExpr 0x13e80e098 <col:7, col:16> '<dependent type>' contains-errors lvalue ->id         | |   `-RecoveryExpr 0x13e80e078 <col:7> '<dependent type>' contains-errors lvalue         | `-CompoundStmt 0x13e80e3a0 <col:24, line:7:3>         `-SwitchStmt 0x13f808c60 <line:9:3, line:38:3>           |-CXXDependentScopeMemberExpr 0x13f808c00 <line:9:11, col:20> '<dependent type>' contains-errors lvalue ->type           | `-RecoveryExpr 0x13e80e3d0 <col:11> '<dependent type>' contains-errors lvalue           `-CompoundStmt 0x13f809850 <col:26, line:38:3>             |-BreakStmt 0x13f808e38 <line:13:4>             |-BreakStmt 0x13f8090e8 <line:17:4>             |-BreakStmt 0x13f809270 <line:20:4>             |-BreakStmt 0x13f8093e0 <line:23:4>             |-CompoundStmt 0x13f809808 <line:25:4, line:34:4>             | `-WhileStmt 0x13f8097e8 <line:29:5, line:33:5>             |   |-RecoveryExpr 0x13f809598 <line:29:12> '_Bool' contains-errors             |   `-CompoundStmt 0x13f8097d8 <col:16, line:33:5>             |-BreakStmt 0x13f809820 <line:35:4>             `-DefaultStmt 0x13f809830 <line:36:3, line:37:4>               `-BreakStmt 0x13f809828 <col:4> ","20471":"`-FunctionDecl 0x1501281f8  line:1:1 invalid find_book_view 'int (int *)'   |-ParmVarDecl 0x150128128 <col:17, col:35> col:35 invalid bl 'int *'   `-CompoundStmt 0x1501419d0 <line:2:1, line:15:1>     |-IfStmt 0x150141968 <line:8:2, line:12:2>     | |-BinaryOperator 0x150128670 <line:8:6, col:14> 'int' contains-errors '!='     | | |-RecoveryExpr 0x150128630 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x150128650 <col:14> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x150141958 <col:20, line:12:2>     `-ReturnStmt 0x1501419c0 <line:14:2, col:9>       `-RecoveryExpr 0x1501419a0 <col:9> '<dependent type>' contains-errors lvalue ","20644":"`-FunctionDecl 0x12b928288  line:1:17 invalid X509_REQ_get_attr 'int *(const int *, int)'   |-ParmVarDecl 0x12b9280f0 <col:35, col:51> col:51 invalid req 'const int *'   |-ParmVarDecl 0x12b928170 <col:56, col:60> col:60 used loc 'int'   `-CompoundStmt 0x12b9285d0 <line:2:1, line:4:1>     `-ReturnStmt 0x12b9285c0 <line:3:5, col:58>       `-CallExpr 0x12b928590 <col:12, col:58> '<dependent type>' contains-errors         |-DeclRefExpr 0x12b9284a0 <col:12> 'int ()' Function 0x12b9283e8 'X509at_get_attr' 'int ()'         |-CXXDependentScopeMemberExpr 0x12b928528 <col:28, col:43> '<dependent type>' contains-errors lvalue ->attributes         | `-CXXDependentScopeMemberExpr 0x12b9284e0 <col:28, col:33> '<dependent type>' contains-errors lvalue ->req_info         |   `-RecoveryExpr 0x12b9284c0 <col:28> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x12b928570 <col:55> 'int' lvalue ParmVar 0x12b928170 'loc' 'int' ","20376":"`-FunctionDecl 0x13c928258  line:1:1 invalid xmlEncodeAttributeEntities 'int (int, const int *)'   |-ParmVarDecl 0x13c9280f0 <col:28, col:38> col:38 invalid doc 'int'   |-ParmVarDecl 0x13c928170 <col:43, col:58> col:58 invalid input 'const int *'   `-CompoundStmt 0x13c928538 <col:65, line:3:1>     `-ReturnStmt 0x13c928528 <line:2:5, col:51>       `-CallExpr 0x13c9284f0 <col:12, col:51> '<dependent type>' contains-errors         |-DeclRefExpr 0x13c928470 <col:12> 'int ()' Function 0x13c9283b8 'xmlEncodeEntitiesInternal' 'int ()'         |-RecoveryExpr 0x13c928490 <col:38> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x13c9284b0 <col:43> '<dependent type>' contains-errors lvalue         `-IntegerLiteral 0x13c9284d0 <col:50> 'int' 1 ","21258":"`-FunctionDecl 0x123809538  col:9 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x123809638 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x1238096a0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x123809708 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1238095e0 <<invalid sloc>> Implicit 882 ","20684":"`-FunctionDecl 0x14680de58  line:1:1 invalid visit_corrupt 'int (const int *, void *)'   |-ParmVarDecl 0x14680dcf0 <col:16, col:35> col:35 invalid iter 'const int *'   |-ParmVarDecl 0x14680dd70 <col:41, col:47> col:47 data 'void *'   `-CompoundStmt 0x14680df40 <line:2:1, line:4:1> ","21026":"`-FunctionDecl 0x12b128288  line:1:14 invalid utf2char 'char *(int *, char *)' static   |-ParmVarDecl 0x12b128128 <col:23, col:32> col:32 referenced invalid str 'int *'   |-ParmVarDecl 0x12b1281a8 <col:37, col:43> col:43 used buffer 'char *'   `-CompoundStmt 0x12c00b010 <line:2:1, line:12:1>     |-DeclStmt 0x12b1283f8 <line:3:3, col:19>     | `-VarDecl 0x12b128358 <col:3, col:13> col:9 used b 'char *' cinit     |   `-ImplicitCastExpr 0x12b1283e0 <col:13> 'char *' <LValueToRValue>     |     `-DeclRefExpr 0x12b1283c0 <col:13> 'char *' lvalue ParmVar 0x12b1281a8 'buffer' 'char *'     |-WhileStmt 0x12b1286f8 <line:5:3, line:9:3>     | |-BinaryOperator 0x12b128480 <line:5:10, col:18> 'int' contains-errors '!='     | | |-UnaryOperator 0x12b128448 <col:10, col:11> '<dependent type>' contains-errors prefix '*' cannot overflow     | | | `-ImplicitCastExpr 0x12b128430 <col:11> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-RecoveryExpr 0x12b128410 <col:11> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x12b128460 <col:18> 'int' 0     | `-CompoundStmt 0x12b1286d0 <col:24, line:9:3>     |   |-DeclStmt 0x12b128580 <line:6:5, col:28>     |   | `-VarDecl 0x12b1284b8 <col:5, col:25> col:11 used chr 'char *' cinit     |   |   `-CStyleCastExpr 0x12b128558 <col:17, col:25> 'char *' contains-errors <Dependent>     |   |     `-RecoveryExpr 0x12b128520 <col:25> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x12b128650 <line:7:5, col:13> 'char' contains-errors '='     |   | |-UnaryOperator 0x12b1285d0 <col:5, col:7> 'char' lvalue prefix '*' cannot overflow     |   | | `-UnaryOperator 0x12b1285b8 <col:6, col:7> 'char *' postfix '++'     |   | |   `-DeclRefExpr 0x12b128598 <col:6> 'char *' lvalue Var 0x12b128358 'b' 'char *'     |   | `-ImplicitCastExpr 0x12b128638 <col:12, col:13> 'char' contains-errors <LValueToRValue>     |   |   `-UnaryOperator 0x12b128620 <col:12, col:13> 'char' contains-errors lvalue prefix '*' cannot overflow     |   |     `-ImplicitCastExpr 0x12b128608 <col:13> 'char *' contains-errors <LValueToRValue>     |   |       `-DeclRefExpr 0x12b1285e8 <col:13> 'char *' contains-errors lvalue Var 0x12b1284b8 'chr' 'char *'     |   `-UnaryOperator 0x12b1286b8 <line:8:5, col:8> '<dependent type>' contains-errors postfix '++' cannot overflow     |     `-RecoveryExpr 0x12b128690 <col:5> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x12b128670 <col:5> 'int *' lvalue ParmVar 0x12b128128 'str' 'int *'     |-BinaryOperator 0x12b1287a0 <line:10:3, col:8> 'char' '='     | |-UnaryOperator 0x12b128750 <col:3, col:4> 'char' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x12b128738 <col:4> 'char *' <LValueToRValue>     | |   `-DeclRefExpr 0x12b128718 <col:4> 'char *' lvalue Var 0x12b128358 'b' 'char *'     | `-ImplicitCastExpr 0x12b128788 <col:8> 'char' <IntegralCast>     |   `-IntegerLiteral 0x12b128768 <col:8> 'int' 0     `-ReturnStmt 0x12c00b000 <line:11:3, col:10>       `-ImplicitCastExpr 0x12b1287e0 <col:10> 'char *' <LValueToRValue>         `-DeclRefExpr 0x12b1287c0 <col:10> 'char *' lvalue ParmVar 0x12b1281a8 'buffer' 'char *' ","20612":"`-FunctionDecl 0x12f141800  line:1:13 invalid tm_active_with_altivec 'int (struct task_struct *)' static   |-ParmVarDecl 0x12f128668 <col:36, col:56> col:56 used tsk 'struct task_struct *'   `-CompoundStmt 0x12f141c70 <line:2:1, line:5:1> ","21152":"`-FunctionDecl 0x15a08b150  line:1:13 n_hdlc_release 'void (struct n_hdlc *)' static   |-ParmVarDecl 0x15a08b048 <col:28, col:43> col:43 used n_hdlc 'struct n_hdlc *'   `-CompoundStmt 0x15a84e8a0 <line:2:1, line:48:1>     |-DeclStmt 0x15b066848 <line:3:2, col:46>     | |-RecordDecl 0x15b066448 <col:2, col:9> col:9 struct tty_struct     | `-VarDecl 0x15b0665b8 <col:2, col:45> col:21 used tty 'struct tty_struct *' cinit     |   `-ImplicitCastExpr 0x15b066818 <col:27, col:45> 'struct tty_struct *' <IntegralToPointer>     |     `-CallExpr 0x15b0667d8 <col:27, col:45> 'int'     |       |-ImplicitCastExpr 0x15b0667c0 <col:27> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x15b066750 <col:27> 'int ()' Function 0x15b066698 'n_hdlc2tty' 'int ()'     |       `-ImplicitCastExpr 0x15b066800 <col:39> 'struct n_hdlc *' <LValueToRValue>     |         `-DeclRefExpr 0x15b066770 <col:39> 'struct n_hdlc *' lvalue ParmVar 0x15a08b048 'n_hdlc' 'struct n_hdlc *'     |-DeclStmt 0x15b066a48 <line:4:2, col:24>     | |-RecordDecl 0x15b066860 <col:2, col:9> col:9 struct n_hdlc_buf     | `-VarDecl 0x15b0669c8 <col:2, col:21> col:21 used buf 'struct n_hdlc_buf *'     |-IfStmt 0x15b066d90 <line:6:2, line:7:33>     | |-BinaryOperator 0x15b066af0 <line:6:6, col:20> 'int' contains-errors '>='     | | |-RecoveryExpr 0x15b066ab0 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x15b066ad0 <col:20> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x15b066d28 <line:7:3, col:33> 'int'     |   |-ImplicitCastExpr 0x15b066d10 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x15b066bf0 <col:3> 'int ()' Function 0x15b066b38 'printk' 'int ()'     |   |-ImplicitCastExpr 0x15b066d60 <col:10> 'char *' <ArrayToPointerDecay>     |   | `-StringLiteral 0x15b066c50 <col:10> 'char[4]' lvalue \"STR\"     |   |-ImplicitCastExpr 0x15b066d78 <<scratch space>:2:1> 'char *' <ArrayToPointerDecay>     |   | `-StringLiteral 0x15b066cb0 <col:1> 'char[37]' lvalue \"dataset_diviso_filec\/func6616_vuln.c\"     |   `-IntegerLiteral 0x15b066cf0 <line:3:1> 'int' 7     |-CallExpr 0x15b066f28 <dataset_diviso_filec\/func6616_vuln.c:10:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15b066e90 <col:2> 'int ()' Function 0x15b066dd8 'wake_up_interruptible' 'int ()'     | `-UnaryOperator 0x15b066f10 <col:25, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x15b066ee8 <col:26, col:31> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x15b066eb0 <col:26> 'struct tty_struct *' lvalue Var 0x15b0665b8 'tty' 'struct tty_struct *'     |-CallExpr 0x15b066fe8 <line:11:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15b066f50 <col:2> 'int ()' Function 0x15b066dd8 'wake_up_interruptible' 'int ()'     | `-UnaryOperator 0x15b066fd0 <col:25, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x15b066fa8 <col:26, col:31> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x15b066f70 <col:26> 'struct tty_struct *' lvalue Var 0x15b0665b8 'tty' 'struct tty_struct *'     |-IfStmt 0x15b067188 <line:13:2, line:14:20>     | |-BinaryOperator 0x15b067090 <line:13:6, col:24> 'int' contains-errors '=='     | | |-RecoveryExpr 0x15b067048 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x15b067010 <col:6> 'struct tty_struct *' lvalue Var 0x15b0665b8 'tty' 'struct tty_struct *'     | | `-DeclRefExpr 0x15b067070 <col:24> 'struct n_hdlc *' lvalue ParmVar 0x15a08b048 'n_hdlc' 'struct n_hdlc *'     | `-BinaryOperator 0x15b067168 <line:14:3, col:20> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x15b0670e8 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x15b0670b0 <col:3> 'struct tty_struct *' lvalue Var 0x15b0665b8 'tty' 'struct tty_struct *'     |   `-RecoveryExpr 0x15b067148 <col:20> '<dependent type>' contains-errors lvalue     |-ForStmt 0x15a84dfc0 <line:17:2, line:23:2>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-<<<NULL>>>     | `-CompoundStmt 0x15a84dfa0 <line:17:10, line:23:2>     |   |-BinaryOperator 0x15b067368 <line:18:3, col:49> 'struct n_hdlc_buf *' contains-errors '='     |   | |-DeclRefExpr 0x15b0671a8 <col:3> 'struct n_hdlc_buf *' lvalue Var 0x15b0669c8 'buf' 'struct n_hdlc_buf *'     |   | `-CallExpr 0x15b067340 <col:9, col:49> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x15b0672a8 <col:9> 'int ()' Function 0x15b0671f0 'n_hdlc_buf_get' 'int ()'     |   |   `-UnaryOperator 0x15b067328 <col:24, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |     `-RecoveryExpr 0x15b067300 <col:25, col:33> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x15b0672c8 <col:25> 'struct n_hdlc *' lvalue ParmVar 0x15a08b048 'n_hdlc' 'struct n_hdlc *'     |   `-IfStmt 0x15a84df70 <line:19:3, line:22:4> has_else     |     |-ImplicitCastExpr 0x15b0673a8 <line:19:7> 'struct n_hdlc_buf *' <LValueToRValue>     |     | `-DeclRefExpr 0x15b067388 <col:7> 'struct n_hdlc_buf *' lvalue Var 0x15b0669c8 'buf' 'struct n_hdlc_buf *'     |     |-CompoundStmt 0x15a84df50 <col:12, line:21:3>     |     | `-CallExpr 0x15a84df10 <line:20:4, col:13> 'int'     |     |   |-ImplicitCastExpr 0x15a84def8 <col:4> 'int (*)()' <FunctionToPointerDecay>     |     |   | `-DeclRefExpr 0x15a84deb8 <col:4> 'int ()' Function 0x15a84de00 'kfree' 'int ()'     |     |   `-ImplicitCastExpr 0x15a84df38 <col:10> 'struct n_hdlc_buf *' <LValueToRValue>     |     |     `-DeclRefExpr 0x15a84ded8 <col:10> 'struct n_hdlc_buf *' lvalue Var 0x15b0669c8 'buf' 'struct n_hdlc_buf *'     |     `-BreakStmt 0x15a84df68 <line:22:4>     |-ForStmt 0x15a84e238 <line:24:2, line:30:2>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-<<<NULL>>>     | `-CompoundStmt 0x15a84e218 <line:24:10, line:30:2>     |   |-BinaryOperator 0x15a84e0d8 <line:25:3, col:49> 'struct n_hdlc_buf *' contains-errors '='     |   | |-DeclRefExpr 0x15a84dff8 <col:3> 'struct n_hdlc_buf *' lvalue Var 0x15b0669c8 'buf' 'struct n_hdlc_buf *'     |   | `-CallExpr 0x15a84e0b0 <col:9, col:49> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x15a84e018 <col:9> 'int ()' Function 0x15b0671f0 'n_hdlc_buf_get' 'int ()'     |   |   `-UnaryOperator 0x15a84e098 <col:24, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |     `-RecoveryExpr 0x15a84e070 <col:25, col:33> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x15a84e038 <col:25> 'struct n_hdlc *' lvalue ParmVar 0x15a08b048 'n_hdlc' 'struct n_hdlc *'     |   `-IfStmt 0x15a84e1e8 <line:26:3, line:29:4> has_else     |     |-ImplicitCastExpr 0x15a84e118 <line:26:7> 'struct n_hdlc_buf *' <LValueToRValue>     |     | `-DeclRefExpr 0x15a84e0f8 <col:7> 'struct n_hdlc_buf *' lvalue Var 0x15b0669c8 'buf' 'struct n_hdlc_buf *'     |     |-CompoundStmt 0x15a84e1c8 <col:12, line:28:3>     |     | `-CallExpr 0x15a84e188 <line:27:4, col:13> 'int'     |     |   |-ImplicitCastExpr 0x15a84e170 <col:4> 'int (*)()' <FunctionToPointerDecay>     |     |   | `-DeclRefExpr 0x15a84e130 <col:4> 'int ()' Function 0x15a84de00 'kfree' 'int ()'     |     |   `-ImplicitCastExpr 0x15a84e1b0 <col:10> 'struct n_hdlc_buf *' <LValueToRValue>     |     |     `-DeclRefExpr 0x15a84e150 <col:10> 'struct n_hdlc_buf *' lvalue Var 0x15b0669c8 'buf' 'struct n_hdlc_buf *'     |     `-BreakStmt 0x15a84e1e0 <line:29:4>     |-ForStmt 0x15a84e4b0 <line:31:2, line:37:2>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-<<<NULL>>>     | `-CompoundStmt 0x15a84e490 <line:31:10, line:37:2>     |   |-BinaryOperator 0x15a84e350 <line:32:3, col:44> 'struct n_hdlc_buf *' contains-errors '='     |   | |-DeclRefExpr 0x15a84e270 <col:3> 'struct n_hdlc_buf *' lvalue Var 0x15b0669c8 'buf' 'struct n_hdlc_buf *'     |   | `-CallExpr 0x15a84e328 <col:9, col:44> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x15a84e290 <col:9> 'int ()' Function 0x15b0671f0 'n_hdlc_buf_get' 'int ()'     |   |   `-UnaryOperator 0x15a84e310 <col:24, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |     `-RecoveryExpr 0x15a84e2e8 <col:25, col:33> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x15a84e2b0 <col:25> 'struct n_hdlc *' lvalue ParmVar 0x15a08b048 'n_hdlc' 'struct n_hdlc *'     |   `-IfStmt 0x15a84e460 <line:33:3, line:36:4> has_else     |     |-ImplicitCastExpr 0x15a84e390 <line:33:7> 'struct n_hdlc_buf *' <LValueToRValue>     |     | `-DeclRefExpr 0x15a84e370 <col:7> 'struct n_hdlc_buf *' lvalue Var 0x15b0669c8 'buf' 'struct n_hdlc_buf *'     |     |-CompoundStmt 0x15a84e440 <col:12, line:35:3>     |     | `-CallExpr 0x15a84e400 <line:34:4, col:13> 'int'     |     |   |-ImplicitCastExpr 0x15a84e3e8 <col:4> 'int (*)()' <FunctionToPointerDecay>     |     |   | `-DeclRefExpr 0x15a84e3a8 <col:4> 'int ()' Function 0x15a84de00 'kfree' 'int ()'     |     |   `-ImplicitCastExpr 0x15a84e428 <col:10> 'struct n_hdlc_buf *' <LValueToRValue>     |     |     `-DeclRefExpr 0x15a84e3c8 <col:10> 'struct n_hdlc_buf *' lvalue Var 0x15b0669c8 'buf' 'struct n_hdlc_buf *'     |     `-BreakStmt 0x15a84e458 <line:36:4>     |-ForStmt 0x15a84e728 <line:38:2, line:44:2>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-<<<NULL>>>     | `-CompoundStmt 0x15a84e708 <line:38:10, line:44:2>     |   |-BinaryOperator 0x15a84e5c8 <line:39:3, col:44> 'struct n_hdlc_buf *' contains-errors '='     |   | |-DeclRefExpr 0x15a84e4e8 <col:3> 'struct n_hdlc_buf *' lvalue Var 0x15b0669c8 'buf' 'struct n_hdlc_buf *'     |   | `-CallExpr 0x15a84e5a0 <col:9, col:44> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x15a84e508 <col:9> 'int ()' Function 0x15b0671f0 'n_hdlc_buf_get' 'int ()'     |   |   `-UnaryOperator 0x15a84e588 <col:24, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |     `-RecoveryExpr 0x15a84e560 <col:25, col:33> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x15a84e528 <col:25> 'struct n_hdlc *' lvalue ParmVar 0x15a08b048 'n_hdlc' 'struct n_hdlc *'     |   `-IfStmt 0x15a84e6d8 <line:40:3, line:43:4> has_else     |     |-ImplicitCastExpr 0x15a84e608 <line:40:7> 'struct n_hdlc_buf *' <LValueToRValue>     |     | `-DeclRefExpr 0x15a84e5e8 <col:7> 'struct n_hdlc_buf *' lvalue Var 0x15b0669c8 'buf' 'struct n_hdlc_buf *'     |     |-CompoundStmt 0x15a84e6b8 <col:12, line:42:3>     |     | `-CallExpr 0x15a84e678 <line:41:4, col:13> 'int'     |     |   |-ImplicitCastExpr 0x15a84e660 <col:4> 'int (*)()' <FunctionToPointerDecay>     |     |   | `-DeclRefExpr 0x15a84e620 <col:4> 'int ()' Function 0x15a84de00 'kfree' 'int ()'     |     |   `-ImplicitCastExpr 0x15a84e6a0 <col:10> 'struct n_hdlc_buf *' <LValueToRValue>     |     |     `-DeclRefExpr 0x15a84e640 <col:10> 'struct n_hdlc_buf *' lvalue Var 0x15b0669c8 'buf' 'struct n_hdlc_buf *'     |     `-BreakStmt 0x15a84e6d0 <line:43:4>     |-CallExpr 0x15a84e7e0 <line:45:2, col:20> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15a84e760 <col:2> 'int ()' Function 0x15a84de00 'kfree' 'int ()'     | `-RecoveryExpr 0x15a84e7b8 <col:8, col:16> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x15a84e780 <col:8> 'struct n_hdlc *' lvalue ParmVar 0x15a08b048 'n_hdlc' 'struct n_hdlc *'     `-CallExpr 0x15a84e860 <line:46:2, col:14> 'int'       |-ImplicitCastExpr 0x15a84e848 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x15a84e808 <col:2> 'int ()' Function 0x15a84de00 'kfree' 'int ()'       `-ImplicitCastExpr 0x15a84e888 <col:8> 'struct n_hdlc *' <LValueToRValue>         `-DeclRefExpr 0x15a84e828 <col:8> 'struct n_hdlc *' lvalue ParmVar 0x15a08b048 'n_hdlc' 'struct n_hdlc *' ","20714":"`-FunctionDecl 0x1270b4a58  col:22 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x1270b4b58 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x1270b4bc0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x1270b4c28 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1270b4b00 <<invalid sloc>> Implicit 883 ","21036":"`-FunctionDecl 0x127141478  col:7 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern   |-ParmVarDecl 0x127141578 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x1271415e0 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x127141648 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x127141520 <<invalid sloc>> Implicit 888 ","21195":"`-FunctionDecl 0x142829898  col:17 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x142829998 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x142829940 <<invalid sloc>> Implicit 873 ","20651":"`-FunctionDecl 0x14d00df18  line:1:12 invalid mov_write_stss_tag 'int (int *, int *, int)' static   |-ParmVarDecl 0x14d00dd28 <col:31, col:44> col:44 invalid pb 'int *'   |-ParmVarDecl 0x14d00dda8 <col:48, col:58> col:58 invalid track 'int *'   |-ParmVarDecl 0x14d00de28 <col:65, col:74> col:74 invalid flag 'int'   `-CompoundStmt 0x14d809be0 <line:2:1, line:22:1>     |-DeclStmt 0x14d00e110 <line:4:5, col:21>     | |-VarDecl 0x14d00dff0 <col:5, col:9> col:9 used i 'int'     | `-VarDecl 0x14d00e070 <col:5, col:20> col:12 used index 'int' cinit     |   `-IntegerLiteral 0x14d00e0d8 <col:20> 'int' 0     |-CallExpr 0x14d00e2e0 <line:6:5, col:20> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14d00e280 <col:5> 'int ()' Function 0x14d00e1c8 'avio_wb32' 'int ()'     | |-RecoveryExpr 0x14d00e2a0 <col:15> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x14d00e2c0 <col:19> 'int' 0     |-CallExpr 0x14d808f60 <line:8:5, col:20> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14d808f00 <col:5> 'int ()' Function 0x14d00e1c8 'avio_wb32' 'int ()'     | |-RecoveryExpr 0x14d808f20 <col:15> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x14d808f40 <col:19> 'int' 0     |-CallExpr 0x14d809180 <line:10:5, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14d8090d8 <col:5> 'int ()' Function 0x14d00e1c8 'avio_wb32' 'int ()'     | |-RecoveryExpr 0x14d8090f8 <col:15> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x14d809138 <col:19, col:26> '<dependent type>' contains-errors lvalue ->entry     |   `-RecoveryExpr 0x14d809118 <col:19> '<dependent type>' contains-errors lvalue     |-ForStmt 0x14d8095c8 <line:11:5, line:16:5>     | |-BinaryOperator 0x14d8091f0 <line:11:10, col:14> 'int' '='     | | |-DeclRefExpr 0x14d8091b0 <col:10> 'int' lvalue Var 0x14d00dff0 'i' 'int'     | | `-IntegerLiteral 0x14d8091d0 <col:14> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x14d809298 <col:17, col:28> 'int' contains-errors '<'     | | |-DeclRefExpr 0x14d809210 <col:17> 'int' lvalue Var 0x14d00dff0 'i' 'int'     | | `-CXXDependentScopeMemberExpr 0x14d809250 <col:21, col:28> '<dependent type>' contains-errors lvalue ->entry     | |   `-RecoveryExpr 0x14d809230 <col:21> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x14d8092d8 <col:35, col:36> 'int' postfix '++'     | | `-DeclRefExpr 0x14d8092b8 <col:35> 'int' lvalue Var 0x14d00dff0 'i' 'int'     | `-CompoundStmt 0x14d8095b0 <col:40, line:16:5>     |   `-IfStmt 0x14d809590 <line:12:9, line:15:9>     |     |-BinaryOperator 0x14d809430 <line:12:13, col:39> '<dependent type>' contains-errors '&'     |     | |-CXXDependentScopeMemberExpr 0x14d8093c8 <col:13, col:31> '<dependent type>' contains-errors lvalue .flags     |     | | `-ArraySubscriptExpr 0x14d8093a8 <col:13, col:29> '<dependent type>' contains-errors lvalue     |     | |   |-ImplicitCastExpr 0x14d809378 <col:13, col:20> '<dependent type>' contains-errors <LValueToRValue>     |     | |   | `-CXXDependentScopeMemberExpr 0x14d809310 <col:13, col:20> '<dependent type>' contains-errors lvalue ->cluster     |     | |   |   `-RecoveryExpr 0x14d8092f0 <col:13> '<dependent type>' contains-errors lvalue     |     | |   `-ImplicitCastExpr 0x14d809390 <col:28> 'int' <LValueToRValue>     |     | |     `-DeclRefExpr 0x14d809358 <col:28> 'int' lvalue Var 0x14d00dff0 'i' 'int'     |     | `-RecoveryExpr 0x14d809410 <col:39> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x14d809570 <col:45, line:15:9>     |       |-CallExpr 0x14d809508 <line:13:13, col:32> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x14d809450 <col:13> 'int ()' Function 0x14d00e1c8 'avio_wb32' 'int ()'     |       | |-RecoveryExpr 0x14d809470 <col:23> '<dependent type>' contains-errors lvalue     |       | `-BinaryOperator 0x14d8094e8 <col:27, col:31> 'int' '+'     |       |   |-ImplicitCastExpr 0x14d8094d0 <col:27> 'int' <LValueToRValue>     |       |   | `-DeclRefExpr 0x14d809490 <col:27> 'int' lvalue Var 0x14d00dff0 'i' 'int'     |       |   `-IntegerLiteral 0x14d8094b0 <col:31> 'int' 1     |       `-UnaryOperator 0x14d809558 <line:14:13, col:18> 'int' postfix '++'     |         `-DeclRefExpr 0x14d809538 <col:13> 'int' lvalue Var 0x14d00e070 'index' 'int'     |-CallExpr 0x14d809830 <line:18:5, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14d809748 <col:5> 'int ()' Function 0x14d809690 'avio_seek' 'int ()'     | |-RecoveryExpr 0x14d809768 <col:15> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x14d8097f0 <col:19> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14d809810 <col:29> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14d8098c8 <line:19:5, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14d809868 <col:5> 'int ()' Function 0x14d00e1c8 'avio_wb32' 'int ()'     | |-RecoveryExpr 0x14d809888 <col:15> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x14d8098a8 <col:19> 'int' lvalue Var 0x14d00e070 'index' 'int'     |-CallExpr 0x14d8099e0 <line:20:5, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14d8098f8 <col:5> 'int ()' Function 0x14d809690 'avio_seek' 'int ()'     | |-RecoveryExpr 0x14d809918 <col:15> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x14d8099a0 <col:19> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14d8099c0 <col:27> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14d809bd0 <line:21:5, col:31>       `-CallExpr 0x14d809ba0 <col:12, col:31> '<dependent type>' contains-errors         |-DeclRefExpr 0x14d809af8 <col:12> 'int ()' Function 0x14d809a40 'update_size' 'int ()'         |-RecoveryExpr 0x14d809b18 <col:24> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x14d809b80 <col:28> '<dependent type>' contains-errors lvalue ","21181":"`-FunctionDecl 0x14a062748  line:1:1 xfs_fs_nr_cached_objects 'int (struct super_block *, struct shrink_control *)'   |-ParmVarDecl 0x14d80e248 <line:2:2, col:22> col:22 used sb 'struct super_block *'   |-ParmVarDecl 0x14a062628 <line:3:2, col:25> col:25 sc 'struct shrink_control *'   `-CompoundStmt 0x14a062b88 <line:4:1, line:6:1>     `-ReturnStmt 0x14a062b78 <line:5:2, col:43>       `-CallExpr 0x14a062b50 <col:9, col:43> 'int'         |-ImplicitCastExpr 0x14a062b38 <col:9> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x14a062970 <col:9> 'int ()' Function 0x14a0628b8 'xfs_reclaim_inodes_count' 'int ()'         `-CallExpr 0x14a062af8 <col:34, col:42> 'int'           |-ImplicitCastExpr 0x14a062ae0 <col:34> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x14a062a70 <col:34> 'int ()' Function 0x14a0629b8 'XFS_M' 'int ()'           `-ImplicitCastExpr 0x14a062b20 <col:40> 'struct super_block *' <LValueToRValue>             `-DeclRefExpr 0x14a062a90 <col:40> 'struct super_block *' lvalue ParmVar 0x14d80e248 'sb' 'struct super_block *' ","21200":"`-FunctionDecl 0x122128118  line:1:1 SYSCALL_DEFINE3 'int ()'   `-CompoundStmt 0x122140d80 <line:3:1, line:19:1>     |-IfStmt 0x122128448 <line:6:2, line:7:11>     | |-RecoveryExpr 0x122128380 <line:6:6, col:52> '_Bool' contains-errors     | `-ReturnStmt 0x122128438 <line:7:3, col:11>     |   `-UnaryOperator 0x122128420 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x122128408 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x1221283e8 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x122140af0 <line:10:2, line:14:2>     | |-BinaryOperator 0x122128588 <line:10:6, col:22> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x122128520 <col:6, col:11> '<dependent type>' contains-errors lvalue .si_code     | | | `-RecoveryExpr 0x122128500 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x122128568 <col:22> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x122140ad0 <col:32, line:14:2>     |   |-CallExpr 0x122140a00 <line:12:3, col:32> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x122128688 <col:3> 'int ()' Function 0x1221285d0 'WARN_ON_ONCE' 'int ()'     |   | `-BinaryOperator 0x1221287d8 <col:16, col:31> 'int' contains-errors '<'     |   |   |-CXXDependentScopeMemberExpr 0x122128790 <col:16, col:21> '<dependent type>' contains-errors lvalue .si_code     |   |   | `-RecoveryExpr 0x122128770 <col:16> '<dependent type>' contains-errors lvalue     |   |   `-IntegerLiteral 0x122128708 <col:31> 'int' 0     |   `-ReturnStmt 0x122140ac0 <line:13:3, col:11>     |     `-UnaryOperator 0x122140aa8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x122140a90 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x122140a70 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x122140d70 <line:18:2, col:39>       `-CallExpr 0x122140d38 <col:9, col:39> '<dependent type>' contains-errors         |-DeclRefExpr 0x122140c08 <col:9> 'int ()' Function 0x122140b50 'kill_proc_info' 'int ()'         |-RecoveryExpr 0x122140cc0 <col:24> '<dependent type>' contains-errors lvalue         |-UnaryOperator 0x122140d00 <col:29, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow         | `-RecoveryExpr 0x122140ce0 <col:30> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x122140d18 <col:36> '<dependent type>' contains-errors lvalue ","20271":"`-FunctionDecl 0x154928138  col:11 invalid get_up_epoch 'int ()' ","20247":"`-FunctionDecl 0x124140d18  line:1:12 rds_loop_xmit 'int (struct rds_connection *, struct rds_message *, unsigned int, unsigned int, unsigned int)' static   |-ParmVarDecl 0x124128648 <col:26, col:49> col:49 used conn 'struct rds_connection *'   |-ParmVarDecl 0x124140a28 <col:55, col:75> col:75 used rm 'struct rds_message *'   |-ParmVarDecl 0x124140aa8 <line:2:5, col:18> col:18 used hdr_off 'unsigned int'   |-ParmVarDecl 0x124140b28 <col:27, col:40> col:40 used sg 'unsigned int'   |-ParmVarDecl 0x124140ba8 <line:3:5, col:18> col:18 used off 'unsigned int'   `-CompoundStmt 0x124144200 <line:4:1, line:26:1>     |-IfStmt 0x124141280 <line:6:2, line:9:2>     | |-BinaryOperator 0x124140f90 <line:6:6, col:32> '<dependent type>' contains-errors '&'     | | |-CXXDependentScopeMemberExpr 0x124140ed8 <col:6, col:22> '<dependent type>' contains-errors lvalue .h_flags     | | | `-CXXDependentScopeMemberExpr 0x124140e90 <col:6, col:16> '<dependent type>' contains-errors lvalue .i_hdr     | | |   `-RecoveryExpr 0x124140e68 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x124140e30 <col:6> 'struct rds_message *' lvalue ParmVar 0x124140a28 'rm' 'struct rds_message *'     | | `-RecoveryExpr 0x124140f70 <col:32> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x124141270 <col:54, line:9:2>     |-CallExpr 0x1241414d8 <line:11:2, col:29> 'int'     | |-ImplicitCastExpr 0x1241414c0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x124141380 <col:2> 'int ()' Function 0x1241412c8 'BUG_ON' 'int ()'     | `-BinaryOperator 0x124141468 <col:9, col:26> 'int' '||'     |   |-BinaryOperator 0x124141410 <col:9, col:20> 'int' '||'     |   | |-ImplicitCastExpr 0x1241413e0 <col:9> 'unsigned int' <LValueToRValue>     |   | | `-DeclRefExpr 0x1241413a0 <col:9> 'unsigned int' lvalue ParmVar 0x124140aa8 'hdr_off' 'unsigned int'     |   | `-ImplicitCastExpr 0x1241413f8 <col:20> 'unsigned int' <LValueToRValue>     |   |   `-DeclRefExpr 0x1241413c0 <col:20> 'unsigned int' lvalue ParmVar 0x124140b28 'sg' 'unsigned int'     |   `-ImplicitCastExpr 0x124141450 <col:26> 'unsigned int' <LValueToRValue>     |     `-DeclRefExpr 0x124141430 <col:26> 'unsigned int' lvalue ParmVar 0x124140ba8 'off' 'unsigned int'     |-CallExpr 0x1241416f8 <line:13:2, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1241415e0 <col:2> 'int ()' Function 0x124141528 'rds_inc_init' 'int ()'     | |-UnaryOperator 0x124141660 <col:15, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x124141638 <col:16, col:20> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x124141600 <col:16> 'struct rds_message *' lvalue ParmVar 0x124140a28 'rm' 'struct rds_message *'     | |-DeclRefExpr 0x124141678 <col:27> 'struct rds_connection *' lvalue ParmVar 0x124128648 'conn' 'struct rds_connection *'     | `-RecoveryExpr 0x1241416d0 <col:33, col:39> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x124141698 <col:33> 'struct rds_connection *' lvalue ParmVar 0x124128648 'conn' 'struct rds_connection *'     |-CallExpr 0x124141868 <line:15:2, col:23> 'int'     | |-ImplicitCastExpr 0x124141850 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x124141810 <col:2> 'int ()' Function 0x124141758 'rds_message_addref' 'int ()'     | `-ImplicitCastExpr 0x124141890 <col:21> 'struct rds_message *' <LValueToRValue>     |   `-DeclRefExpr 0x124141830 <col:21> 'struct rds_message *' lvalue ParmVar 0x124140a28 'rm' 'struct rds_message *'     |-CallExpr 0x1241439c0 <line:17:2, line:18:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x124141988 <line:17:2> 'int ()' Function 0x1241418d0 'rds_recv_incoming' 'int ()'     | |-DeclRefExpr 0x1241419a8 <col:20> 'struct rds_connection *' lvalue ParmVar 0x124128648 'conn' 'struct rds_connection *'     | |-RecoveryExpr 0x124143800 <col:26, col:32> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1241419c8 <col:26> 'struct rds_connection *' lvalue ParmVar 0x124128648 'conn' 'struct rds_connection *'     | |-RecoveryExpr 0x124143860 <col:41, col:47> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x124143828 <col:41> 'struct rds_connection *' lvalue ParmVar 0x124128648 'conn' 'struct rds_connection *'     | |-UnaryOperator 0x1241438e8 <col:56, col:61> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x1241438c0 <col:57, col:61> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x124143888 <col:57> 'struct rds_message *' lvalue ParmVar 0x124140a28 'rm' 'struct rds_message *'     | |-RecoveryExpr 0x124143980 <line:18:6> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1241439a0 <col:18> '<dependent type>' contains-errors lvalue     `-CallExpr 0x124143ec0 <line:23:2, col:24> '<dependent type>' contains-errors       |-DeclRefExpr 0x124143e28 <col:2> 'int ()' Function 0x124143d70 'rds_inc_put' 'int ()'       `-UnaryOperator 0x124143ea8 <col:14, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x124143e80 <col:15, col:19> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x124143e48 <col:15> 'struct rds_message *' lvalue ParmVar 0x124140a28 'rm' 'struct rds_message *' ","21187":"`-FunctionDecl 0x10580ddc8  line:1:1 referenced invalid xmlFreeNodeList 'int (int)'   |-ParmVarDecl 0x10580dcf0 <col:17, col:28> col:28 referenced invalid cur 'int'   `-CompoundStmt 0x105827f20 <col:33, line:56:1>     |-IfStmt 0x10580df20 <line:5:5, col:22>     | |-BinaryOperator 0x10580def0 <col:9, col:16> 'int' contains-errors '=='     | | |-RecoveryExpr 0x10580de78 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x10580ded0 <col:16> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x10580df10 <col:22>     |-IfStmt 0x10580e1e0 <line:6:5, line:9:5>     | |-BinaryOperator 0x10580e000 <line:6:9, col:22> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x10580df60 <col:9, col:14> '<dependent type>' contains-errors lvalue ->type     | | | `-RecoveryExpr 0x10580df40 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x10580dfe0 <col:22> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x10580e1c8 <col:42, line:9:5>     |   `-ReturnStmt 0x10580e1b8 <line:8:2>     |-IfStmt 0x120122f18 <line:10:5, line:17:5>     | |-RecoveryExpr 0x10580e340 <line:10:9, line:14:38> '_Bool' contains-errors     | `-CompoundStmt 0x120122f00 <col:41, line:17:5>     |   `-ReturnStmt 0x120122ef0 <line:16:2>     `-WhileStmt 0x105827f00 <line:19:5, line:55:5>       |-BinaryOperator 0x120123140 <line:19:12, col:19> 'int' contains-errors '!='       | |-RecoveryExpr 0x1201230c8 <col:12> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x120123120 <col:19> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x105827ee8 <col:25, line:55:5>         `-IfStmt 0x105827e80 <line:21:2, line:53:2>           |-BinaryOperator 0x120123288 <line:21:6, col:19> 'int' contains-errors '!='           | |-CXXDependentScopeMemberExpr 0x1201231e8 <col:6, col:11> '<dependent type>' contains-errors lvalue ->type           | | `-RecoveryExpr 0x1201231c8 <col:6> '<dependent type>' contains-errors lvalue           | `-RecoveryExpr 0x120123268 <col:19> '<dependent type>' contains-errors lvalue           `-CompoundStmt 0x105827e38 <col:33, line:53:2>             |-IfStmt 0x120123440 <line:23:6, line:24:36>             | |-RecoveryExpr 0x1201232d8 <line:23:10, col:68> '_Bool' contains-errors             | `-CallExpr 0x120123418 <line:24:3, col:36> '<dependent type>' contains-errors             |   |-DeclRefExpr 0x1201233d8 <col:3> 'int ()' Function 0x120123320 'xmlDeregisterNodeDefaultValue' 'int ()'             |   `-RecoveryExpr 0x1201233f8 <col:33> '<dependent type>' contains-errors lvalue             |-IfStmt 0x120123628 <line:26:6, line:28:32>             | |-RecoveryExpr 0x120123530 <line:26:10, line:27:36> '_Bool' contains-errors             | `-CallExpr 0x120123600 <line:28:3, col:32> '<dependent type>' contains-errors             |   |-RecoveryExpr 0x120123570 <col:3> '<dependent type>' contains-errors lvalue             |   | `-DeclRefExpr 0x120123550 <col:3> 'int (int)' Function 0x10580ddc8 'xmlFreeNodeList' 'int (int)'             |   `-CXXDependentScopeMemberExpr 0x1201235b8 <col:19, col:24> '<dependent type>' contains-errors lvalue ->children             |     `-RecoveryExpr 0x120123598 <col:19> '<dependent type>' contains-errors lvalue             |-IfStmt 0x120123998 <line:29:6, line:33:34>             | |-RecoveryExpr 0x1201237e8 <line:29:10, line:32:27> '_Bool' contains-errors             | `-CallExpr 0x120123970 <line:33:3, col:34> '<dependent type>' contains-errors             |   |-DeclRefExpr 0x1201238e8 <col:3> 'int ()' Function 0x120123830 'xmlFreePropList' 'int ()'             |   `-CXXDependentScopeMemberExpr 0x120123928 <col:19, col:24> '<dependent type>' contains-errors lvalue ->properties             |     `-RecoveryExpr 0x120123908 <col:19> '<dependent type>' contains-errors lvalue             |-IfStmt 0x105827818 <line:34:6, line:40:6>             | |-RecoveryExpr 0x120123c48 <line:34:10, line:38:50> '_Bool' contains-errors             | `-CompoundStmt 0x105827800 <col:53, line:40:6>             |   `-CallExpr 0x120123dd0 <line:39:3, col:25> '<dependent type>' contains-errors             |     |-DeclRefExpr 0x120123d48 <col:3> 'int ()' Function 0x120123c90 'DICT_FREE' 'int ()'             |     `-CXXDependentScopeMemberExpr 0x120123d88 <col:13, col:18> '<dependent type>' contains-errors lvalue ->content             |       `-RecoveryExpr 0x120123d68 <col:13> '<dependent type>' contains-errors lvalue             |-IfStmt 0x105827aa8 <line:41:6, line:45:27>             | |-RecoveryExpr 0x1058279d8 <line:41:10, line:44:22> '_Bool' contains-errors             | `-CallExpr 0x105827a80 <line:45:3, col:27> '<dependent type>' contains-errors             |   |-DeclRefExpr 0x1058279f8 <col:3> 'int ()' Function 0x10580e0c8 'xmlFreeNsList' 'int ()'             |   `-CXXDependentScopeMemberExpr 0x105827a38 <col:17, col:22> '<dependent type>' contains-errors lvalue ->nsDef             |     `-RecoveryExpr 0x105827a18 <col:17> '<dependent type>' contains-errors lvalue             |-IfStmt 0x105827cd0 <line:48:6, line:51:22>             | |-RecoveryExpr 0x105827c00 <line:48:10, line:50:33> '_Bool' contains-errors             | `-CallExpr 0x105827ca8 <line:51:3, col:22> '<dependent type>' contains-errors             |   |-DeclRefExpr 0x105827c20 <col:3> 'int ()' Function 0x120123c90 'DICT_FREE' 'int ()'             |   `-CXXDependentScopeMemberExpr 0x105827c60 <col:13, col:18> '<dependent type>' contains-errors lvalue ->name             |     `-RecoveryExpr 0x105827c40 <col:13> '<dependent type>' contains-errors lvalue             `-CallExpr 0x105827e10 <line:52:6, col:17> '<dependent type>' contains-errors               |-DeclRefExpr 0x105827dd0 <col:6> 'int ()' Function 0x105827d18 'xmlFree' 'int ()'               `-RecoveryExpr 0x105827df0 <col:14> '<dependent type>' contains-errors lvalue ","20744":"`-FunctionDecl 0x13d1422d8  col:9 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x13d1423d8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x13d142440 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x13d1424a8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x13d142380 <<invalid sloc>> Implicit 882 ","20468":"`-FunctionDecl 0x12d1282e8  line:1:1 invalid uint64_to_str_back_len 'int (char *, int, int)'   |-ParmVarDecl 0x12d1280d8 <col:24, col:30> col:30 used ptr 'char *'   |-ParmVarDecl 0x12d128170 <col:35, col:43> col:43 invalid value 'int'   |-ParmVarDecl 0x12d1281f0 <col:50, col:54> col:54 used len 'int'   `-CompoundStmt 0x12d809e10 <line:2:1, line:18:1>     |-DeclStmt 0x12d128428 <line:3:2, col:15>     | `-VarDecl 0x12d1283c0 <col:2, col:8> col:8 used new_ptr 'char *'     |-BinaryOperator 0x12d128650 <line:5:2, col:41> 'char *' contains-errors '='     | |-DeclRefExpr 0x12d128440 <col:2> 'char *' lvalue Var 0x12d1283c0 'new_ptr' 'char *'     | `-CallExpr 0x12d128620 <col:12, col:41> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12d1285c0 <col:12> 'int ()' Function 0x12d128508 'uint64_to_str_back' 'int ()'     |   |-DeclRefExpr 0x12d1285e0 <col:31> 'char *' lvalue ParmVar 0x12d1280d8 'ptr' 'char *'     |   `-RecoveryExpr 0x12d128600 <col:36> '<dependent type>' contains-errors lvalue     |-CompoundAssignOperator 0x12d1287a0 <line:8:2, col:28> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'     | |-DeclRefExpr 0x12d128670 <col:2> 'int' lvalue ParmVar 0x12d1281f0 'len' 'int'     | `-CStyleCastExpr 0x12d128778 <col:9, col:28> 'int' <IntegralCast>     |   `-ParenExpr 0x12d128758 <col:14, col:28> 'long'     |     `-BinaryOperator 0x12d128700 <col:15, col:21> 'long' '-'     |       |-ImplicitCastExpr 0x12d1286d0 <col:15> 'char *' <LValueToRValue>     |       | `-DeclRefExpr 0x12d128690 <col:15> 'char *' lvalue ParmVar 0x12d1280d8 'ptr' 'char *'     |       `-ImplicitCastExpr 0x12d1286e8 <col:21> 'char *' <LValueToRValue>     |         `-DeclRefExpr 0x12d1286b0 <col:21> 'char *' lvalue Var 0x12d1283c0 'new_ptr' 'char *'     |-WhileStmt 0x12d809970 <line:11:2, line:15:2>     | |-BinaryOperator 0x12d809838 <line:11:9, col:15> 'int' '>'     | | |-ImplicitCastExpr 0x12d809820 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x12d1287d0 <col:9> 'int' lvalue ParmVar 0x12d1281f0 'len' 'int'     | | `-IntegerLiteral 0x12d809800 <col:15> 'int' 0     | `-CompoundStmt 0x12d809950 <line:12:2, line:15:2>     |   |-BinaryOperator 0x12d8098f8 <line:13:3, col:18> 'char' '='     |   | |-UnaryOperator 0x12d8098b0 <col:3, col:14> 'char' lvalue prefix '*' cannot overflow     |   | | `-ParenExpr 0x12d809890 <col:4, col:14> 'char *'     |   | |   `-UnaryOperator 0x12d809878 <col:5, col:7> 'char *' prefix '--'     |   | |     `-DeclRefExpr 0x12d809858 <col:7> 'char *' lvalue Var 0x12d1283c0 'new_ptr' 'char *'     |   | `-ImplicitCastExpr 0x12d8098e0 <col:18> 'char' <IntegralCast>     |   |   `-CharacterLiteral 0x12d8098c8 <col:18> 'int' 48     |   `-UnaryOperator 0x12d809938 <line:14:3, col:6> 'int' postfix '--'     |     `-DeclRefExpr 0x12d809918 <col:3> 'int' lvalue ParmVar 0x12d1281f0 'len' 'int'     `-ReturnStmt 0x12d809e00 <line:17:2, col:9>       `-ImplicitCastExpr 0x12d8099c8 <col:9> 'int' <PointerToIntegral>         `-ImplicitCastExpr 0x12d8099b0 <col:9> 'char *' <LValueToRValue>           `-DeclRefExpr 0x12d809990 <col:9> 'char *' lvalue Var 0x12d1283c0 'new_ptr' 'char *' ","21109":"`-FunctionDecl 0x133941a08  line:1:1 invalid nfsd4_encode_getdeviceinfo 'int (struct nfsd4_compoundres *, int, struct nfsd4_getdeviceinfo *)'   |-ParmVarDecl 0x133928648 <col:28, col:54> col:54 used resp 'struct nfsd4_compoundres *'   |-ParmVarDecl 0x1339286e0 <col:60, col:67> col:67 referenced invalid nfserr 'int'   |-ParmVarDecl 0x1339418c8 <line:2:3, col:31> col:31 used gdev 'struct nfsd4_getdeviceinfo *'   `-CompoundStmt 0x133944280 <line:3:1, line:64:1>     |-DeclStmt 0x133941d30 <line:4:2, col:37>     | |-RecordDecl 0x133941ac8 <col:2, col:9> col:9 struct xdr_stream     | `-VarDecl 0x133941c38 <col:2, col:34> col:21 used xdr 'struct xdr_stream *' cinit     |   `-UnaryOperator 0x133941d00 <col:27, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x133941cd8 <col:28, col:34> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x133941ca0 <col:28> 'struct nfsd4_compoundres *' lvalue ParmVar 0x133928648 'resp' 'struct nfsd4_compoundres *'     |-DeclStmt 0x133941fb0 <line:5:2, line:6:41>     | |-RecordDecl 0x133941d48 <line:5:8, col:15> col:15 struct nfsd4_layout_ops     | `-VarDecl 0x133941eb8 <col:2, col:33> col:33 used ops 'const struct nfsd4_layout_ops *'     |-CallExpr 0x1339423d8 <line:10:2, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x133942140 <col:2> 'int ()' Function 0x133942088 'dprintk' 'int ()'     | |-StringLiteral 0x1339421a0 <col:10> 'char[4]' lvalue \"STR\"     | |-PredefinedExpr 0x133942278 <col:17> 'const char[27]' lvalue __func__     | | `-StringLiteral 0x133942240 <col:17> 'const char[27]' lvalue \"nfsd4_encode_getdeviceinfo\"     | `-CallExpr 0x1339423b0 <col:27, col:45> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x133942370 <col:27> 'int ()' Function 0x1339422b8 'be32_to_cpu' 'int ()'     |   `-RecoveryExpr 0x133942390 <col:39> '<dependent type>' contains-errors lvalue     |-IfStmt 0x133942498 <line:11:2, line:12:8>     | |-RecoveryExpr 0x133942410 <line:11:6> '<dependent type>' contains-errors lvalue     | `-GotoStmt 0x133942480 <line:12:3, col:8> 'out' 0x133942430     |-BinaryOperator 0x133942558 <line:14:2, col:11> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1339424d8 <col:2> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1339424b8 <col:2> 'int' lvalue ParmVar 0x1339286e0 'nfserr' 'int'     | `-RecoveryExpr 0x133942538 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x133942800 <line:16:2, line:17:8>     | |-UnaryOperator 0x1339427d0 <line:16:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1339427b8 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x133942798 <col:7> '<dependent type>' contains-errors lvalue     | `-GotoStmt 0x1339427e8 <line:17:3, col:8> 'out' 0x133942430     |-BinaryOperator 0x133942a60 <line:19:2, col:41> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x133942a48 <col:2, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-UnaryOperator 0x133942a30 <col:3, col:4> '<dependent type>' contains-errors postfix '++' cannot overflow     | |   `-RecoveryExpr 0x133942a10 <col:3> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x1339429c8 <col:9, col:41> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x133942948 <col:9> 'int ()' Function 0x133942890 'cpu_to_be32' 'int ()'     |   `-RecoveryExpr 0x1339429a0 <col:21, col:27> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x133942968 <col:21> 'struct nfsd4_getdeviceinfo *' lvalue ParmVar 0x1339418c8 'gdev' 'struct nfsd4_getdeviceinfo *'     |-IfStmt 0x133942ee0 <line:22:2, line:30:2>     | |-BinaryOperator 0x133942b00 <line:22:6, col:27> 'int' contains-errors '!='     | | |-RecoveryExpr 0x133942ab8 <col:6, col:12> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x133942a80 <col:6> 'struct nfsd4_getdeviceinfo *' lvalue ParmVar 0x1339418c8 'gdev' 'struct nfsd4_getdeviceinfo *'     | | `-IntegerLiteral 0x133942ae0 <col:27> 'int' 0     | `-CompoundStmt 0x133942ec0 <col:30, line:30:2>     |   |-BinaryOperator 0x133942c38 <line:23:3, col:47> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x133942b40 <col:3> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x133942b20 <col:3> 'int' lvalue ParmVar 0x1339286e0 'nfserr' 'int'     |   | `-CallExpr 0x133942c08 <col:12, col:47> '<dependent type>' contains-errors     |   |   |-RecoveryExpr 0x133942ba0 <col:12, col:17> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x133942b68 <col:12> 'const struct nfsd4_layout_ops *' lvalue Var 0x133941eb8 'ops' 'const struct nfsd4_layout_ops *'     |   |   |-DeclRefExpr 0x133942bc8 <col:38> 'struct xdr_stream *' contains-errors lvalue Var 0x133941c38 'xdr' 'struct xdr_stream *'     |   |   `-DeclRefExpr 0x133942be8 <col:43> 'struct nfsd4_getdeviceinfo *' lvalue ParmVar 0x1339418c8 'gdev' 'struct nfsd4_getdeviceinfo *'     |   `-IfStmt 0x133942ea0 <line:24:3, line:29:3>     |     |-RecoveryExpr 0x133942c58 <line:24:7> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x133942e80 <col:15, line:29:3>     |       |-IfStmt 0x133942e48 <line:26:4, line:27:10>     |       | |-BinaryOperator 0x133942dc0 <line:26:8, col:34> 'int' contains-errors '>'     |       | | |-BinaryOperator 0x133942d40 <col:8, col:24> '<dependent type>' contains-errors '+'     |       | | | |-CXXDependentScopeMemberExpr 0x133942cd8 <col:8, col:18> '<dependent type>' contains-errors lvalue ->len     |       | | | | `-RecoveryExpr 0x133942cb0 <col:8, col:13> '<dependent type>' contains-errors lvalue     |       | | | |   `-DeclRefExpr 0x133942c78 <col:8> 'struct xdr_stream *' contains-errors lvalue Var 0x133941c38 'xdr' 'struct xdr_stream *'     |       | | | `-IntegerLiteral 0x133942d20 <col:24> 'int' 4     |       | | `-RecoveryExpr 0x133942d98 <col:28, col:34> '<dependent type>' contains-errors lvalue     |       | |   `-DeclRefExpr 0x133942d60 <col:28> 'struct nfsd4_getdeviceinfo *' lvalue ParmVar 0x1339418c8 'gdev' 'struct nfsd4_getdeviceinfo *'     |       | `-GotoStmt 0x133942e30 <line:27:5, col:10> 'toosmall' 0x133942de0     |       `-GotoStmt 0x133942e68 <line:28:4, col:9> 'out' 0x133942430     |-IfStmt 0x133943390 <line:33:2, line:44:2> has_else     | |-RecoveryExpr 0x133942f80 <line:33:6, col:12> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x133942f48 <col:6> 'struct nfsd4_getdeviceinfo *' lvalue ParmVar 0x1339418c8 'gdev' 'struct nfsd4_getdeviceinfo *'     | |-CompoundStmt 0x133943228 <col:29, line:39:2>     | | `-IfStmt 0x1339430e0 <line:35:3, line:36:9>     | |   |-RecoveryExpr 0x1339430a8 <line:35:7, col:8> '_Bool' contains-errors     | |   `-GotoStmt 0x1339430c8 <line:36:4, col:9> 'out' 0x133942430     | `-CompoundStmt 0x133943378 <line:39:9, line:44:2>     |   `-IfStmt 0x133943338 <line:41:3, line:42:9>     |     |-RecoveryExpr 0x133943300 <line:41:7, col:8> '_Bool' contains-errors     |     `-GotoStmt 0x133943320 <line:42:4, col:9> 'out' 0x133942430     |-BinaryOperator 0x133943428 <line:46:2, col:11> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1339433e0 <col:2> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1339433c0 <col:2> 'int' lvalue ParmVar 0x1339286e0 'nfserr' 'int'     | `-IntegerLiteral 0x133943408 <col:11> 'int' 0     |-LabelStmt 0x1339435d0 <line:47:1, line:48:23> 'out'     | `-CallExpr 0x1339435a8 <col:2, col:23> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x133943528 <col:2> 'int ()' Function 0x133943470 'kfree' 'int ()'     |   `-RecoveryExpr 0x133943580 <col:8, col:14> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x133943548 <col:8> 'struct nfsd4_getdeviceinfo *' lvalue ParmVar 0x1339418c8 'gdev' 'struct nfsd4_getdeviceinfo *'     |-CallExpr 0x1339436e8 <line:49:2, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1339435f0 <col:2> 'int ()' Function 0x133942088 'dprintk' 'int ()'     | |-StringLiteral 0x133943610 <col:10> 'char[4]' lvalue \"STR\"     | |-PredefinedExpr 0x133943668 <col:17> 'const char[27]' lvalue __func__     | | `-StringLiteral 0x133943630 <col:17> 'const char[27]' lvalue \"nfsd4_encode_getdeviceinfo\"     | `-CallExpr 0x1339436c0 <col:27, col:45> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x133943680 <col:27> 'int ()' Function 0x1339422b8 'be32_to_cpu' 'int ()'     |   `-RecoveryExpr 0x1339436a0 <col:39> '<dependent type>' contains-errors lvalue     |-ReturnStmt 0x133943740 <line:50:2, col:9>     | `-RecoveryExpr 0x133943720 <col:9> '<dependent type>' contains-errors lvalue     |-LabelStmt 0x133943e60 <line:52:1, line:53:25> 'toosmall'     | `-CallExpr 0x133943e00 <col:2, col:25> 'int'     |   |-ImplicitCastExpr 0x1339437e0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x133943750 <col:2> 'int ()' Function 0x133942088 'dprintk' 'int ()'     |   |-ImplicitCastExpr 0x133943e30 <col:10> 'char *' <ArrayToPointerDecay>     |   | `-StringLiteral 0x133943770 <col:10> 'char[4]' lvalue \"STR\"     |   `-ImplicitCastExpr 0x133943e48 <col:17> 'const char *' <ArrayToPointerDecay>     |     `-PredefinedExpr 0x1339437c8 <col:17> 'const char[27]' lvalue __func__     |       `-StringLiteral 0x133943790 <col:17> 'const char[27]' lvalue \"nfsd4_encode_getdeviceinfo\"     |-IfStmt 0x133944238 <line:57:2, line:62:2> has_else     | |-RecoveryExpr 0x133944148 <line:57:6, col:7> '_Bool' contains-errors     | |-CompoundStmt 0x1339441b0 <col:10, line:59:2>     | `-CompoundStmt 0x133944228 <col:9, line:62:2>     `-GotoStmt 0x133944268 <line:63:2, col:7> 'out' 0x133942430 ","21051":"`-FunctionDecl 0x152928f08  line:1:1 spectre_v2_user_select_mitigation 'int (enum spectre_v2_mitigation_cmd)'   |-ParmVarDecl 0x152928df8 <col:35, col:66> col:66 invalid v2_cmd 'enum spectre_v2_mitigation_cmd'   `-CompoundStmt 0x154009858 <line:2:1, line:76:1>     |-DeclStmt 0x1529413c8 <line:3:2, col:61>     | |-EnumDecl 0x152941200 <col:2, col:7> col:7 spectre_v2_user_mitigation     | `-VarDecl 0x152941318 <col:2, col:34> col:34 referenced invalid mode 'enum spectre_v2_user_mitigation'     |-DeclStmt 0x152941578 <line:5:2, col:30>     | |-EnumDecl 0x1529413e0 <col:2, col:7> col:7 spectre_v2_user_cmd     | `-VarDecl 0x1529414f8 <col:2, col:27> col:27 referenced invalid cmd 'enum spectre_v2_user_cmd'     |-IfStmt 0x1529418a0 <line:7:2, line:8:3>     | |-BinaryOperator 0x152941870 <line:7:6, col:72> 'int' contains-errors '&&'     | | |-UnaryOperator 0x1529417f8 <col:6, col:36> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | `-CallExpr 0x1529417d0 <col:7, col:36> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x1529416a0 <col:7> 'int ()' Function 0x1529415e8 'boot_cpu_has' 'int ()'     | | |   `-RecoveryExpr 0x1529417b0 <col:20> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x152941858 <col:41, col:72> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-CallExpr 0x152941830 <col:42, col:72> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x152941718 <col:42> 'int ()' Function 0x1529415e8 'boot_cpu_has' 'int ()'     | |     `-RecoveryExpr 0x152941810 <col:55> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x152941890 <line:8:3>     |-BinaryOperator 0x152941c08 <line:14:2, col:44> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x152941a98 <col:2> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x152941a78 <col:2> 'enum spectre_v2_user_cmd' lvalue Var 0x1529414f8 'cmd' 'enum spectre_v2_user_cmd'     | `-CallExpr 0x152941be0 <col:8, col:44> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x152941ba0 <col:8> 'int ()' Function 0x152941ae8 'spectre_v2_parse_user_cmdline' 'int ()'     |   `-RecoveryExpr 0x152941bc0 <col:38> '<dependent type>' contains-errors lvalue     |-SwitchStmt 0x152941c60 <line:15:2, line:33:2>     | |-RecoveryExpr 0x152941c28 <line:15:10> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x152941ff0 <col:15, line:33:2>     |   |-GotoStmt 0x152941cf0 <line:17:3, col:8> 'set_mode' 0x152941ca0     |   |-BinaryOperator 0x152941dc0 <line:19:3, col:10> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x152941d40 <col:3> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x152941d20 <col:3> 'enum spectre_v2_user_mitigation' lvalue Var 0x152941318 'mode' 'enum spectre_v2_user_mitigation'     |   | `-RecoveryExpr 0x152941da0 <col:10> '<dependent type>' contains-errors lvalue     |   |-BreakStmt 0x152941de0 <line:20:3>     |   |-BreakStmt 0x152941e30 <line:24:3>     |   `-BreakStmt 0x152941fe8 <line:32:3>     |-IfStmt 0x154009698 <line:41:2, line:62:2>     | |-RecoveryExpr 0x1529420f0 <line:41:6, col:35> '_Bool' contains-errors     | `-CompoundStmt 0x154009680 <col:38, line:62:2>     |   `-SwitchStmt 0x154009258 <line:44:3, line:57:3>     |     |-RecoveryExpr 0x154009220 <line:44:11> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x1540093d8 <col:16, line:57:3>     |       |-BreakStmt 0x154009380 <line:49:4>     |       |-BreakStmt 0x1540093a8 <line:54:4>     |       `-DefaultStmt 0x1540093b8 <line:55:3, line:56:4>     |         `-BreakStmt 0x1540093b0 <col:4>     |-IfStmt 0x1540096e8 <line:65:2, line:66:3>     | |-RecoveryExpr 0x1540096b8 <line:65:6, col:28> '_Bool' contains-errors     | `-ReturnStmt 0x1540096d8 <line:66:3>     `-LabelStmt 0x1540097b8 <line:71:1, col:9> 'set_mode'       `-NullStmt 0x1540097b0 <col:9> ","21003":"`-FunctionDecl 0x152142378  line:1:16 invalid fuse_dev_splice_write 'int (struct pipe_inode_info *, struct file *, int *, int, unsigned int)' static   |-ParmVarDecl 0x152128e68 <col:38, col:62> col:62 used pipe 'struct pipe_inode_info *'   |-ParmVarDecl 0x152142058 <line:2:10, col:23> col:23 used out 'struct file *'   |-ParmVarDecl 0x152142108 <col:28, col:36> col:36 invalid ppos 'int *'   |-ParmVarDecl 0x152142188 <line:3:10, col:17> col:17 invalid len 'int'   |-ParmVarDecl 0x152142208 <col:22, col:35> col:35 used flags 'unsigned int'   `-CompoundStmt 0x15214bca0 <line:4:1, line:83:1>     |-DeclStmt 0x1521424c8 <line:5:2, col:15>     | `-VarDecl 0x152142460 <col:2, col:11> col:11 used nbuf 'unsigned int'     |-DeclStmt 0x152142560 <line:6:2, col:14>     | `-VarDecl 0x1521424f8 <col:2, col:11> col:11 used idx 'unsigned int'     |-DeclStmt 0x152142768 <line:7:2, col:26>     | |-RecordDecl 0x152142578 <col:2, col:9> col:9 struct pipe_buffer     | `-VarDecl 0x1521426e8 <col:2, col:22> col:22 used bufs 'struct pipe_buffer *'     |-DeclStmt 0x1521428f8 <line:8:2, col:27>     | |-RecordDecl 0x152142780 <col:2, col:9> col:9 struct fuse_copy_state     | `-VarDecl 0x152142878 <col:2, col:25> col:25 referenced invalid cs 'struct fuse_copy_state'     |-DeclStmt 0x152142af8 <line:9:2, col:22>     | |-RecordDecl 0x152142910 <col:2, col:9> col:9 struct fuse_dev     | `-VarDecl 0x152142a78 <col:2, col:19> col:19 used fud 'struct fuse_dev *'     |-UnaryExprOrTypeTraitExpr 0x152142b68 <line:10:2, col:9> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x152142b48 <col:9> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x152142de0 <line:13:2, col:24> 'struct fuse_dev *' '='     | |-DeclRefExpr 0x152142b88 <col:2> 'struct fuse_dev *' lvalue Var 0x152142a78 'fud' 'struct fuse_dev *'     | `-ImplicitCastExpr 0x152142dc8 <col:8, col:24> 'struct fuse_dev *' <IntegralToPointer>     |   `-CallExpr 0x152142d88 <col:8, col:24> 'int'     |     |-ImplicitCastExpr 0x152142d70 <col:8> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x152142d00 <col:8> 'int ()' Function 0x152142c48 'fuse_get_dev' 'int ()'     |     `-ImplicitCastExpr 0x152142db0 <col:21> 'struct file *' <LValueToRValue>     |       `-DeclRefExpr 0x152142d20 <col:21> 'struct file *' lvalue ParmVar 0x152142058 'out' 'struct file *'     |-IfStmt 0x152142ef8 <line:14:2, line:15:11>     | |-UnaryOperator 0x152142e38 <line:14:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x152142e20 <col:7> 'struct fuse_dev *' <LValueToRValue>     | |   `-DeclRefExpr 0x152142e00 <col:7> 'struct fuse_dev *' lvalue Var 0x152142a78 'fud' 'struct fuse_dev *'     | `-ReturnStmt 0x152142ee8 <line:15:3, col:11>     |   `-UnaryOperator 0x152142ed0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x152142eb8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x152142e98 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x152143058 <line:17:2, col:16> 'int'     | |-ImplicitCastExpr 0x152143040 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x152143000 <col:2> 'int ()' Function 0x152142f40 'pipe_lock' 'int ()'     | `-ImplicitCastExpr 0x152143080 <col:12> 'struct pipe_inode_info *' <LValueToRValue>     |   `-DeclRefExpr 0x152143020 <col:12> 'struct pipe_inode_info *' lvalue ParmVar 0x152128e68 'pipe' 'struct pipe_inode_info *'     |-IfStmt 0x152143518 <line:21:2, line:24:2>     | |-UnaryOperator 0x1521432c0 <line:21:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1521432a8 <col:7> 'struct pipe_buffer *' <LValueToRValue>     | |   `-DeclRefExpr 0x152143288 <col:7> 'struct pipe_buffer *' lvalue Var 0x1521426e8 'bufs' 'struct pipe_buffer *'     | `-CompoundStmt 0x1521434f8 <col:13, line:24:2>     |   |-CallExpr 0x152143410 <line:22:3, col:19> 'int'     |   | |-ImplicitCastExpr 0x1521433f8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x1521433b8 <col:3> 'int ()' Function 0x152143300 'pipe_unlock' 'int ()'     |   | `-ImplicitCastExpr 0x152143438 <col:15> 'struct pipe_inode_info *' <LValueToRValue>     |   |   `-DeclRefExpr 0x1521433d8 <col:15> 'struct pipe_inode_info *' lvalue ParmVar 0x152128e68 'pipe' 'struct pipe_inode_info *'     |   `-ReturnStmt 0x1521434e8 <line:23:3, col:11>     |     `-UnaryOperator 0x1521434d0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x1521434b8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x152143498 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x152143590 <line:26:2, col:9> 'unsigned int' '='     | |-DeclRefExpr 0x152143538 <col:2> 'unsigned int' lvalue Var 0x152142460 'nbuf' 'unsigned int'     | `-ImplicitCastExpr 0x152143578 <col:9> 'unsigned int' <IntegralCast>     |   `-IntegerLiteral 0x152143558 <col:9> 'int' 0     |-IfStmt 0x152143bd8 <line:32:2, line:35:2>     | |-RecoveryExpr 0x152143a98 <line:32:6, col:12> '_Bool' contains-errors     | `-CompoundStmt 0x152143bb8 <col:17, line:35:2>     |   |-CallExpr 0x152143b10 <line:33:3, col:19> 'int'     |   | |-ImplicitCastExpr 0x152143af8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x152143ab8 <col:3> 'int ()' Function 0x152143300 'pipe_unlock' 'int ()'     |   | `-ImplicitCastExpr 0x152143b38 <col:15> 'struct pipe_inode_info *' <LValueToRValue>     |   |   `-DeclRefExpr 0x152143ad8 <col:15> 'struct pipe_inode_info *' lvalue ParmVar 0x152128e68 'pipe' 'struct pipe_inode_info *'     |   `-GotoStmt 0x152143ba0 <line:34:3, col:8> 'out' 0x152143b50     |-WhileStmt 0x152146380 <line:38:2, line:62:2>     | |-RecoveryExpr 0x152143c18 <line:38:9> '_Bool' contains-errors     | `-CompoundStmt 0x152146338 <col:14, line:62:2>     |   |-DeclStmt 0x152143d00 <line:39:3, col:27>     |   | `-VarDecl 0x152143c98 <col:3, col:23> col:23 used ibuf 'struct pipe_buffer *'     |   |-DeclStmt 0x152143da8 <line:40:3, col:27>     |   | `-VarDecl 0x152143d40 <col:3, col:23> col:23 used obuf 'struct pipe_buffer *'     |   |-CallExpr 0x152143f60 <line:42:3, col:31> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x152143ea0 <col:3> 'int ()' Function 0x152143de8 'BUG_ON' 'int ()'     |   | `-BinaryOperator 0x152143f40 <col:10, col:24> 'int' contains-errors '>='     |   |   |-DeclRefExpr 0x152143ec0 <col:10> 'unsigned int' lvalue Var 0x152142460 'nbuf' 'unsigned int'     |   |   `-RecoveryExpr 0x152143f18 <col:18, col:24> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x152143ee0 <col:18> 'struct pipe_inode_info *' lvalue ParmVar 0x152128e68 'pipe' 'struct pipe_inode_info *'     |   |-CallExpr 0x152145658 <line:43:3, col:23> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x152143f88 <col:3> 'int ()' Function 0x152143de8 'BUG_ON' 'int ()'     |   | `-UnaryOperator 0x152145640 <col:10, col:17> '<dependent type>' contains-errors prefix '!' cannot overflow     |   |   `-ImplicitCastExpr 0x152145628 <col:11, col:17> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x152145600 <col:11, col:17> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x152143fa8 <col:11> 'struct pipe_inode_info *' lvalue ParmVar 0x152128e68 'pipe' 'struct pipe_inode_info *'     |   |-BinaryOperator 0x1521457c8 <line:44:3, col:34> 'struct pipe_buffer *' contains-errors '='     |   | |-DeclRefExpr 0x152145680 <col:3> 'struct pipe_buffer *' lvalue Var 0x152143c98 'ibuf' 'struct pipe_buffer *'     |   | `-UnaryOperator 0x1521457b0 <col:10, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-ArraySubscriptExpr 0x152145790 <col:11, col:34> '<dependent type>' contains-errors lvalue     |   |     |-ImplicitCastExpr 0x152145760 <col:11, col:17> '<dependent type>' contains-errors <LValueToRValue>     |   |     | `-RecoveryExpr 0x1521456d8 <col:11, col:17> '<dependent type>' contains-errors lvalue     |   |     |   `-DeclRefExpr 0x1521456a0 <col:11> 'struct pipe_inode_info *' lvalue ParmVar 0x152128e68 'pipe' 'struct pipe_inode_info *'     |   |     `-ImplicitCastExpr 0x152145778 <col:22, col:28> '<dependent type>' contains-errors <LValueToRValue>     |   |       `-RecoveryExpr 0x152145738 <col:22, col:28> '<dependent type>' contains-errors lvalue     |   |         `-DeclRefExpr 0x152145700 <col:22> 'struct pipe_inode_info *' lvalue ParmVar 0x152128e68 'pipe' 'struct pipe_inode_info *'     |   |-IfStmt 0x152146270 <line:47:3, line:59:3> has_else     |   | |-RecoveryExpr 0x1521458d8 <line:47:7, col:20> '_Bool' contains-errors     |   | |-CompoundStmt 0x152145cd8 <col:25, line:52:3>     |   | | |-ImplicitCastExpr 0x1521459c8 <line:48:4, col:13> '<dependent type>' contains-errors <LValueToRValue>     |   | | | `-RecoveryExpr 0x152145998 <col:4, col:13> '<dependent type>' contains-errors lvalue     |   | | |   |-UnaryOperator 0x152145930 <col:4, col:5> 'struct pipe_buffer' lvalue prefix '*' cannot overflow     |   | | |   | `-ImplicitCastExpr 0x152145918 <col:5> 'struct pipe_buffer *' <LValueToRValue>     |   | | |   |   `-DeclRefExpr 0x1521458f8 <col:5> 'struct pipe_buffer *' lvalue Var 0x152143d40 'obuf' 'struct pipe_buffer *'     |   | | |   `-UnaryOperator 0x152145980 <col:12, col:13> 'struct pipe_buffer' lvalue prefix '*' cannot overflow     |   | | |     `-ImplicitCastExpr 0x152145968 <col:13> 'struct pipe_buffer *' <LValueToRValue>     |   | | |       `-DeclRefExpr 0x152145948 <col:13> 'struct pipe_buffer *' lvalue Var 0x152143c98 'ibuf' 'struct pipe_buffer *'     |   | | |-BinaryOperator 0x152145c40 <line:50:4, col:58> '<dependent type>' contains-errors '='     |   | | | |-RecoveryExpr 0x152145a78 <col:4, col:10> '<dependent type>' contains-errors lvalue     |   | | | | `-DeclRefExpr 0x152145a40 <col:4> 'struct pipe_inode_info *' lvalue ParmVar 0x152128e68 'pipe' 'struct pipe_inode_info *'     |   | | | `-BinaryOperator 0x152145c20 <col:19, col:58> '<dependent type>' contains-errors '&'     |   | | |   |-ParenExpr 0x152145b40 <col:19, col:36> '<dependent type>' contains-errors     |   | | |   | `-BinaryOperator 0x152145b20 <col:20, col:35> '<dependent type>' contains-errors '+'     |   | | |   |   |-RecoveryExpr 0x152145ad8 <col:20, col:26> '<dependent type>' contains-errors lvalue     |   | | |   |   | `-DeclRefExpr 0x152145aa0 <col:20> 'struct pipe_inode_info *' lvalue ParmVar 0x152128e68 'pipe' 'struct pipe_inode_info *'     |   | | |   |   `-IntegerLiteral 0x152145b00 <col:35> 'int' 1     |   | | |   `-ParenExpr 0x152145c00 <col:40, col:58> '<dependent type>' contains-errors     |   | | |     `-BinaryOperator 0x152145be0 <col:41, col:57> '<dependent type>' contains-errors '-'     |   | | |       |-RecoveryExpr 0x152145b98 <col:41, col:47> '<dependent type>' contains-errors lvalue     |   | | |       | `-DeclRefExpr 0x152145b60 <col:41> 'struct pipe_inode_info *' lvalue ParmVar 0x152128e68 'pipe' 'struct pipe_inode_info *'     |   | | |       `-IntegerLiteral 0x152145bc0 <col:57> 'int' 1     |   | | `-UnaryOperator 0x152145cc0 <line:51:4, col:16> '<dependent type>' contains-errors postfix '--' cannot overflow     |   | |   `-RecoveryExpr 0x152145c98 <col:4, col:10> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x152145c60 <col:4> 'struct pipe_inode_info *' lvalue ParmVar 0x152128e68 'pipe' 'struct pipe_inode_info *'     |   | `-CompoundStmt 0x152146240 <line:52:10, line:59:3>     |   |   |-CallExpr 0x152145e58 <line:53:4, col:27> 'int'     |   |   | |-ImplicitCastExpr 0x152145e40 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x152145de0 <col:4> 'int ()' Function 0x152145d28 'pipe_buf_get' 'int ()'     |   |   | |-ImplicitCastExpr 0x152145e88 <col:17> 'struct pipe_inode_info *' <LValueToRValue>     |   |   | | `-DeclRefExpr 0x152145e00 <col:17> 'struct pipe_inode_info *' lvalue ParmVar 0x152128e68 'pipe' 'struct pipe_inode_info *'     |   |   | `-ImplicitCastExpr 0x152145ea0 <col:23> 'struct pipe_buffer *' <LValueToRValue>     |   |   |   `-DeclRefExpr 0x152145e20 <col:23> 'struct pipe_buffer *' lvalue Var 0x152143c98 'ibuf' 'struct pipe_buffer *'     |   |   |-ImplicitCastExpr 0x152145f88 <line:54:4, col:13> '<dependent type>' contains-errors <LValueToRValue>     |   |   | `-RecoveryExpr 0x152145f58 <col:4, col:13> '<dependent type>' contains-errors lvalue     |   |   |   |-UnaryOperator 0x152145ef0 <col:4, col:5> 'struct pipe_buffer' lvalue prefix '*' cannot overflow     |   |   |   | `-ImplicitCastExpr 0x152145ed8 <col:5> 'struct pipe_buffer *' <LValueToRValue>     |   |   |   |   `-DeclRefExpr 0x152145eb8 <col:5> 'struct pipe_buffer *' lvalue Var 0x152143d40 'obuf' 'struct pipe_buffer *'     |   |   |   `-UnaryOperator 0x152145f40 <col:12, col:13> 'struct pipe_buffer' lvalue prefix '*' cannot overflow     |   |   |     `-ImplicitCastExpr 0x152145f28 <col:13> 'struct pipe_buffer *' <LValueToRValue>     |   |   |       `-DeclRefExpr 0x152145f08 <col:13> 'struct pipe_buffer *' lvalue Var 0x152143c98 'ibuf' 'struct pipe_buffer *'     |   |   |-CompoundAssignOperator 0x152146120 <line:57:4, col:26> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |   | |-RecoveryExpr 0x152146098 <col:4, col:10> '<dependent type>' contains-errors lvalue     |   |   | | `-DeclRefExpr 0x152146060 <col:4> 'struct pipe_buffer *' lvalue Var 0x152143c98 'ibuf' 'struct pipe_buffer *'     |   |   | `-RecoveryExpr 0x1521460f8 <col:20, col:26> '<dependent type>' contains-errors lvalue     |   |   |   `-DeclRefExpr 0x1521460c0 <col:20> 'struct pipe_buffer *' lvalue Var 0x152143d40 'obuf' 'struct pipe_buffer *'     |   |   `-CompoundAssignOperator 0x152146210 <line:58:4, col:23> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |     |-RecoveryExpr 0x152146188 <col:4, col:10> '<dependent type>' contains-errors lvalue     |   |     | `-DeclRefExpr 0x152146150 <col:4> 'struct pipe_buffer *' lvalue Var 0x152143c98 'ibuf' 'struct pipe_buffer *'     |   |     `-RecoveryExpr 0x1521461e8 <col:17, col:23> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x1521461b0 <col:17> 'struct pipe_buffer *' lvalue Var 0x152143d40 'obuf' 'struct pipe_buffer *'     |   `-UnaryOperator 0x1521462c0 <line:60:3, col:7> 'unsigned int' postfix '++'     |     `-DeclRefExpr 0x1521462a0 <col:3> 'unsigned int' lvalue Var 0x152142460 'nbuf' 'unsigned int'     |-CallExpr 0x1521463f8 <line:63:2, col:18> 'int'     | |-ImplicitCastExpr 0x1521463e0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1521463a0 <col:2> 'int ()' Function 0x152143300 'pipe_unlock' 'int ()'     | `-ImplicitCastExpr 0x152146420 <col:14> 'struct pipe_inode_info *' <LValueToRValue>     |   `-DeclRefExpr 0x1521463c0 <col:14> 'struct pipe_inode_info *' lvalue ParmVar 0x152128e68 'pipe' 'struct pipe_inode_info *'     |-BinaryOperator 0x15214b268 <line:66:2, col:16> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15214b200 <col:2, col:5> '<dependent type>' contains-errors lvalue .pipebufs     | | `-RecoveryExpr 0x1521465b0 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x152146590 <col:2> 'struct fuse_copy_state' lvalue Var 0x152142878 'cs' 'struct fuse_copy_state'     | `-DeclRefExpr 0x15214b248 <col:16> 'struct pipe_buffer *' lvalue Var 0x1521426e8 'bufs' 'struct pipe_buffer *'     |-BinaryOperator 0x15214b338 <line:67:2, col:15> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15214b2d0 <col:2, col:5> '<dependent type>' contains-errors lvalue .nr_segs     | | `-RecoveryExpr 0x15214b2a8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15214b288 <col:2> 'struct fuse_copy_state' lvalue Var 0x152142878 'cs' 'struct fuse_copy_state'     | `-DeclRefExpr 0x15214b318 <col:15> 'unsigned int' lvalue Var 0x152142460 'nbuf' 'unsigned int'     |-BinaryOperator 0x15214b408 <line:68:2, col:12> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15214b3a0 <col:2, col:5> '<dependent type>' contains-errors lvalue .pipe     | | `-RecoveryExpr 0x15214b378 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15214b358 <col:2> 'struct fuse_copy_state' lvalue Var 0x152142878 'cs' 'struct fuse_copy_state'     | `-DeclRefExpr 0x15214b3e8 <col:12> 'struct pipe_inode_info *' lvalue ParmVar 0x152128e68 'pipe' 'struct pipe_inode_info *'     |-IfStmt 0x15214b538 <line:70:2, line:71:19>     | |-RecoveryExpr 0x15214b448 <line:70:6, col:14> '_Bool' contains-errors     | `-BinaryOperator 0x15214b518 <line:71:3, col:19> '<dependent type>' contains-errors '='     |   |-CXXDependentScopeMemberExpr 0x15214b4b0 <col:3, col:6> '<dependent type>' contains-errors lvalue .move_pages     |   | `-RecoveryExpr 0x15214b488 <col:3> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x15214b468 <col:3> 'struct fuse_copy_state' lvalue Var 0x152142878 'cs' 'struct fuse_copy_state'     |   `-IntegerLiteral 0x15214b4f8 <col:19> 'int' 1     |-CallExpr 0x15214b760 <line:75:2, col:16> 'int'     | |-ImplicitCastExpr 0x15214b748 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x15214b708 <col:2> 'int ()' Function 0x152142f40 'pipe_lock' 'int ()'     | `-ImplicitCastExpr 0x15214b788 <col:12> 'struct pipe_inode_info *' <LValueToRValue>     |   `-DeclRefExpr 0x15214b728 <col:12> 'struct pipe_inode_info *' lvalue ParmVar 0x152128e68 'pipe' 'struct pipe_inode_info *'     |-CallExpr 0x15214bac8 <line:78:2, col:18> 'int'     | |-ImplicitCastExpr 0x15214bab0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x15214ba70 <col:2> 'int ()' Function 0x152143300 'pipe_unlock' 'int ()'     | `-ImplicitCastExpr 0x15214baf0 <col:14> 'struct pipe_inode_info *' <LValueToRValue>     |   `-DeclRefExpr 0x15214ba90 <col:14> 'struct pipe_inode_info *' lvalue ParmVar 0x152128e68 'pipe' 'struct pipe_inode_info *'     `-LabelStmt 0x15214bc80 <line:80:1, line:81:13> 'out'       `-CallExpr 0x15214bc40 <col:2, col:13> 'int'         |-ImplicitCastExpr 0x15214bc28 <col:2> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x15214bbe8 <col:2> 'int ()' Function 0x15214bb30 'kvfree' 'int ()'         `-ImplicitCastExpr 0x15214bc68 <col:9> 'struct pipe_buffer *' <LValueToRValue>           `-DeclRefExpr 0x15214bc08 <col:9> 'struct pipe_buffer *' lvalue Var 0x1521426e8 'bufs' 'struct pipe_buffer *' ","20611":"`-FunctionDecl 0x1408dc958  line:1:12 snd_usb_playback_close 'int (struct snd_pcm_substream *)' static   |-ParmVarDecl 0x1408dc848 <col:35, col:61> col:61 used substream 'struct snd_pcm_substream *'   `-CompoundStmt 0x1408f4e68 <line:2:1, line:4:1>     `-ReturnStmt 0x1408f4e58 <line:3:2, col:63>       `-CallExpr 0x1408f4e28 <col:9, col:63> '<dependent type>' contains-errors         |-DeclRefExpr 0x1408f4d80 <col:9> 'int ()' Function 0x1408f4cc8 'snd_usb_pcm_close' 'int ()'         |-DeclRefExpr 0x1408f4da0 <col:27> 'struct snd_pcm_substream *' lvalue ParmVar 0x1408dc848 'substream' 'struct snd_pcm_substream *'         `-RecoveryExpr 0x1408f4e08 <col:38> '<dependent type>' contains-errors lvalue ","20776":"`-FunctionDecl 0x134142e20  col:8 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x134142f20 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x134142f88 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x134142ec8 <<invalid sloc>> Implicit 887 ","21073":"`-FunctionDecl 0x128114420  line:1:13 invalid ldap_decode_attrib 'void (int *, struct asn1_data *, struct ldb_message_element *)' static   |-ParmVarDecl 0x1280fab28 <col:32, col:44> col:44 invalid mem_ctx 'int *'   |-ParmVarDecl 0x1280fb118 <col:53, col:71> col:71 used data 'struct asn1_data *'   |-ParmVarDecl 0x1281142e8 <line:2:11, col:39> col:39 used attrib 'struct ldb_message_element *'   `-CompoundStmt 0x1281153e8 <line:3:1, line:15:1>     |-CallExpr 0x128114828 <line:4:2, col:39> 'int'     | |-ImplicitCastExpr 0x128114810 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x128114640 <col:2> 'int ()' Function 0x128114588 'asn1_start_tag' 'int ()'     | |-ImplicitCastExpr 0x128114858 <col:17> 'struct asn1_data *' <LValueToRValue>     | | `-DeclRefExpr 0x128114660 <col:17> 'struct asn1_data *' lvalue ParmVar 0x1280fb118 'data' 'struct asn1_data *'     | `-CallExpr 0x1281147e8 <col:23, col:38> 'int'     |   |-ImplicitCastExpr 0x1281147d0 <col:23> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x128114760 <col:23> 'int ()' Function 0x1281146a8 'ASN1_SEQUENCE' 'int ()'     |   `-IntegerLiteral 0x128114780 <col:37> 'int' 0     |-CallExpr 0x128114a28 <line:5:2, col:59> '<dependent type>' contains-errors     | |-DeclRefExpr 0x128114950 <col:2> 'int ()' Function 0x128114898 'asn1_read_OctetString_talloc' 'int ()'     | |-RecoveryExpr 0x128114970 <col:31> '<dependent type>' contains-errors lvalue     | |-DeclRefExpr 0x128114990 <col:40> 'struct asn1_data *' lvalue ParmVar 0x1280fb118 'data' 'struct asn1_data *'     | `-UnaryOperator 0x128114a10 <col:46, col:55> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1281149e8 <col:47, col:55> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1281149b0 <col:47> 'struct ldb_message_element *' lvalue ParmVar 0x1281142e8 'attrib' 'struct ldb_message_element *'     |-CallExpr 0x128114b08 <line:6:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x128114a60 <col:2> 'int ()' Function 0x128114588 'asn1_start_tag' 'int ()'     | |-DeclRefExpr 0x128114a80 <col:17> 'struct asn1_data *' lvalue ParmVar 0x1280fb118 'data' 'struct asn1_data *'     | `-RecoveryExpr 0x128114ae8 <col:23> '<dependent type>' contains-errors lvalue     |-WhileStmt 0x128115140 <line:7:2, line:11:2>     | |-CallExpr 0x128114cc0 <line:7:9, col:46> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x128114c18 <col:9> 'int ()' Function 0x128114b60 'asn1_peek_tag' 'int ()'     | | |-DeclRefExpr 0x128114c38 <col:23> 'struct asn1_data *' lvalue ParmVar 0x1280fb118 'data' 'struct asn1_data *'     | | `-RecoveryExpr 0x128114ca0 <col:29> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x128115120 <col:49, line:11:2>     |   |-CallExpr 0x128114ed0 <line:9:3, col:45> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x128114dd0 <col:3> 'int ()' Function 0x128114d18 'asn1_read_OctetString' 'int ()'     |   | |-DeclRefExpr 0x128114df0 <col:25> 'struct asn1_data *' lvalue ParmVar 0x1280fb118 'data' 'struct asn1_data *'     |   | |-RecoveryExpr 0x128114e10 <col:31> '<dependent type>' contains-errors lvalue     |   | `-UnaryOperator 0x128114eb8 <col:40, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x128114e98 <col:41> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x1281150e8 <line:10:3, col:45> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x128114fe8 <col:3> 'int ()' Function 0x128114f30 'add_value_to_attrib' 'int ()'     |     |-RecoveryExpr 0x128115008 <col:23> '<dependent type>' contains-errors lvalue     |     |-UnaryOperator 0x1281150d0 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | `-RecoveryExpr 0x1281150b0 <col:33> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x128115058 <col:39> 'struct ldb_message_element *' lvalue ParmVar 0x1281142e8 'attrib' 'struct ldb_message_element *'     |-CallExpr 0x128115310 <line:12:2, col:19> 'int'     | |-ImplicitCastExpr 0x1281152f8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1281152b8 <col:2> 'int ()' Function 0x128115200 'asn1_end_tag' 'int ()'     | `-ImplicitCastExpr 0x128115338 <col:15> 'struct asn1_data *' <LValueToRValue>     |   `-DeclRefExpr 0x1281152d8 <col:15> 'struct asn1_data *' lvalue ParmVar 0x1280fb118 'data' 'struct asn1_data *'     `-CallExpr 0x1281153a8 <line:13:2, col:19> 'int'       |-ImplicitCastExpr 0x128115390 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x128115350 <col:2> 'int ()' Function 0x128115200 'asn1_end_tag' 'int ()'       `-ImplicitCastExpr 0x1281153d0 <col:15> 'struct asn1_data *' <LValueToRValue>         `-DeclRefExpr 0x128115370 <col:15> 'struct asn1_data *' lvalue ParmVar 0x1280fb118 'data' 'struct asn1_data *' ","20673":"`-FunctionDecl 0x125128750  line:1:20 timer_stats_timer_clear_start_info 'void (struct timer_list *)' static inline   |-ParmVarDecl 0x125128648 <col:55, col:74> col:74 used timer 'struct timer_list *'   `-CompoundStmt 0x125140b38 <line:2:1, line:4:1>     `-BinaryOperator 0x125140b18 <line:3:2, col:22> '<dependent type>' contains-errors '='       |-RecoveryExpr 0x125140a80 <col:2, col:9> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x125140a48 <col:2> 'struct timer_list *' lvalue ParmVar 0x125128648 'timer' 'struct timer_list *'       `-RecoveryExpr 0x125140af8 <col:22> '<dependent type>' contains-errors lvalue ","20951":"`-FunctionDecl 0x15a8267f8  line:1:15 arch_get_unmapped_area 'unsigned long (struct file *, unsigned long, unsigned long, unsigned long, unsigned long)'   |-ParmVarDecl 0x15a80e248 <col:38, col:51> col:51 used filp 'struct file *'   |-ParmVarDecl 0x15a80e2c8 <col:57, col:71> col:71 used addr 'unsigned long'   |-ParmVarDecl 0x15a80e348 <col:77, col:91> col:91 used len 'unsigned long'   |-ParmVarDecl 0x15a826600 <col:96, col:110> col:110 used pgoff 'unsigned long'   |-ParmVarDecl 0x15a826680 <col:117, col:131> col:131 used flags 'unsigned long'   `-CompoundStmt 0x15a125b90 <line:2:1, line:54:1>     |-DeclStmt 0x15a826bd8 <line:3:2, col:36>     | |-RecordDecl 0x15a826910 <col:2, col:9> col:9 struct mm_struct     | `-VarDecl 0x15a826a78 <col:2, col:34> col:20 used mm 'struct mm_struct *' cinit     |   `-CXXDependentScopeMemberExpr 0x15a826b78 <col:25, col:34> '<dependent type>' contains-errors lvalue ->mm     |     `-RecoveryExpr 0x15a826b58 <col:25> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x15a826dd8 <line:4:2, col:29>     | |-RecordDecl 0x15a826bf0 <col:2, col:9> col:9 struct vm_area_struct     | `-VarDecl 0x15a826d58 <col:2, col:26> col:26 used vma 'struct vm_area_struct *'     |-DeclStmt 0x15a826ea8 <line:5:2, col:37>     | `-VarDecl 0x15a826e08 <col:2, col:28> col:16 used task_size 'unsigned long' cinit     |   `-RecoveryExpr 0x15a826e88 <col:28> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x15a826f40 <line:6:2, col:20>     | `-VarDecl 0x15a826ed8 <col:2, col:6> col:6 used do_color_align 'int'     |-DeclStmt 0x15a8270d8 <line:7:2, col:35>     | |-RecordDecl 0x15a826f58 <col:2, col:9> col:9 struct vm_unmapped_area_info     | `-VarDecl 0x15a827058 <col:2, col:31> col:31 referenced invalid info 'struct vm_unmapped_area_info'     |-IfStmt 0x15a827400 <line:9:2, line:15:2>     | |-BinaryOperator 0x15a827168 <line:9:6, col:14> '<dependent type>' contains-errors '&'     | | |-DeclRefExpr 0x15a8270f0 <col:6> 'unsigned long' lvalue ParmVar 0x15a826680 'flags' 'unsigned long'     | | `-RecoveryExpr 0x15a827148 <col:14> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x15a8273e0 <col:25, line:15:2>     |   |-IfStmt 0x15a827378 <line:11:3, line:13:12>     |   | |-RecoveryExpr 0x15a8272b0 <line:11:7, line:12:53> '_Bool' contains-errors     |   | `-ReturnStmt 0x15a827368 <line:13:4, col:12>     |   |   `-UnaryOperator 0x15a827350 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |     `-ImplicitCastExpr 0x15a827338 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |   |       `-RecoveryExpr 0x15a827318 <col:12> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x15a8273d0 <line:14:3, col:10>     |     `-ImplicitCastExpr 0x15a8273b8 <col:10> 'unsigned long' <LValueToRValue>     |       `-DeclRefExpr 0x15a827398 <col:10> 'unsigned long' lvalue ParmVar 0x15a80e2c8 'addr' 'unsigned long'     |-IfStmt 0x15a124078 <line:17:2, line:18:15>     | |-CallExpr 0x15a8275b0 <line:17:6, col:32> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x15a827530 <col:6> 'int ()' Function 0x15a827478 'test_thread_flag' 'int ()'     | | `-RecoveryExpr 0x15a827590 <col:23> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x15a124058 <line:18:3, col:15> 'unsigned long' contains-errors '='     |   |-DeclRefExpr 0x15a8275d8 <col:3> 'unsigned long' contains-errors lvalue Var 0x15a826e08 'task_size' 'unsigned long'     |   `-RecoveryExpr 0x15a124038 <col:15> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15a124498 <line:19:2, line:20:11>     | |-CallExpr 0x15a1243c8 <line:19:6, col:57> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x15a124178 <col:6> 'int ()' Function 0x15a1240c0 'unlikely' 'int ()'     | | `-BinaryOperator 0x15a1243a8 <col:15, col:41> 'int' contains-errors '||'     | |   |-BinaryOperator 0x15a124348 <col:15, col:21> 'int' contains-errors '>'     | |   | |-ImplicitCastExpr 0x15a124318 <col:15> 'unsigned long' <LValueToRValue>     | |   | | `-DeclRefExpr 0x15a124198 <col:15> 'unsigned long' lvalue ParmVar 0x15a80e348 'len' 'unsigned long'     | |   | `-ImplicitCastExpr 0x15a124330 <col:21> 'unsigned long' contains-errors <LValueToRValue>     | |   |   `-DeclRefExpr 0x15a1241b8 <col:21> 'unsigned long' contains-errors lvalue Var 0x15a826e08 'task_size' 'unsigned long'     | |   `-BinaryOperator 0x15a124388 <col:34, col:41> 'int' contains-errors '>='     | |     |-DeclRefExpr 0x15a124228 <col:34> 'unsigned long' lvalue ParmVar 0x15a80e348 'len' 'unsigned long'     | |     `-RecoveryExpr 0x15a124368 <col:41> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x15a124488 <line:20:3, col:11>     |   `-UnaryOperator 0x15a124470 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x15a124458 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x15a124438 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x15a1244f8 <line:22:2, col:19> 'int' '='     | |-DeclRefExpr 0x15a1244b8 <col:2> 'int' lvalue Var 0x15a826ed8 'do_color_align' 'int'     | `-IntegerLiteral 0x15a1244d8 <col:19> 'int' 0     |-IfStmt 0x15a124610 <line:23:2, line:24:20>     | |-RecoveryExpr 0x15a124590 <line:23:6, col:33> '_Bool' contains-errors     | `-BinaryOperator 0x15a1245f0 <line:24:3, col:20> 'int' '='     |   |-DeclRefExpr 0x15a1245b0 <col:3> 'int' lvalue Var 0x15a826ed8 'do_color_align' 'int'     |   `-IntegerLiteral 0x15a1245d0 <col:20> 'int' 1     |-IfStmt 0x15a125028 <line:26:2, line:36:2>     | |-ImplicitCastExpr 0x15a124650 <line:26:6> 'unsigned long' <LValueToRValue>     | | `-DeclRefExpr 0x15a124630 <col:6> 'unsigned long' lvalue ParmVar 0x15a80e2c8 'addr' 'unsigned long'     | `-CompoundStmt 0x15a125000 <col:12, line:36:2>     |   |-IfStmt 0x15a124ab0 <line:27:3, line:30:26> has_else     |   | |-ImplicitCastExpr 0x15a124688 <line:27:7> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x15a124668 <col:7> 'int' lvalue Var 0x15a826ed8 'do_color_align' 'int'     |   | |-BinaryOperator 0x15a1248c0 <line:28:4, col:34> 'unsigned long' '='     |   | | |-DeclRefExpr 0x15a1246a0 <col:4> 'unsigned long' lvalue ParmVar 0x15a80e2c8 'addr' 'unsigned long'     |   | | `-ImplicitCastExpr 0x15a1248a8 <col:11, col:34> 'unsigned long' <IntegralCast>     |   | |   `-CallExpr 0x15a124848 <col:11, col:34> 'int'     |   | |     |-ImplicitCastExpr 0x15a124830 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   | |     | `-DeclRefExpr 0x15a1247a0 <col:11> 'int ()' Function 0x15a1246e8 'COLOR_ALIGN' 'int ()'     |   | |     |-ImplicitCastExpr 0x15a124878 <col:23> 'unsigned long' <LValueToRValue>     |   | |     | `-DeclRefExpr 0x15a1247c0 <col:23> 'unsigned long' lvalue ParmVar 0x15a80e2c8 'addr' 'unsigned long'     |   | |     `-ImplicitCastExpr 0x15a124890 <col:29> 'unsigned long' <LValueToRValue>     |   | |       `-DeclRefExpr 0x15a1247e0 <col:29> 'unsigned long' lvalue ParmVar 0x15a826600 'pgoff' 'unsigned long'     |   | `-BinaryOperator 0x15a124a90 <line:30:4, col:26> 'unsigned long' '='     |   |   |-DeclRefExpr 0x15a1248e0 <col:4> 'unsigned long' lvalue ParmVar 0x15a80e2c8 'addr' 'unsigned long'     |   |   `-ImplicitCastExpr 0x15a124a78 <col:11, col:26> 'unsigned long' <IntegralCast>     |   |     `-CallExpr 0x15a124a38 <col:11, col:26> 'int'     |   |       |-ImplicitCastExpr 0x15a124a20 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   |       | `-DeclRefExpr 0x15a1249e0 <col:11> 'int ()' Function 0x15a124928 'PAGE_ALIGN' 'int ()'     |   |       `-ImplicitCastExpr 0x15a124a60 <col:22> 'unsigned long' <LValueToRValue>     |   |         `-DeclRefExpr 0x15a124a00 <col:22> 'unsigned long' lvalue ParmVar 0x15a80e2c8 'addr' 'unsigned long'     |   |-BinaryOperator 0x15a124cd0 <line:32:3, col:26> 'struct vm_area_struct *' contains-errors '='     |   | |-DeclRefExpr 0x15a124ae0 <col:3> 'struct vm_area_struct *' lvalue Var 0x15a826d58 'vma' 'struct vm_area_struct *'     |   | `-ImplicitCastExpr 0x15a124cb8 <col:9, col:26> 'struct vm_area_struct *' contains-errors <IntegralToPointer>     |   |   `-CallExpr 0x15a124c58 <col:9, col:26> 'int' contains-errors     |   |     |-ImplicitCastExpr 0x15a124c40 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x15a124be0 <col:9> 'int ()' Function 0x15a124b28 'find_vma' 'int ()'     |   |     |-ImplicitCastExpr 0x15a124c88 <col:18> 'struct mm_struct *' contains-errors <LValueToRValue>     |   |     | `-DeclRefExpr 0x15a124c00 <col:18> 'struct mm_struct *' contains-errors lvalue Var 0x15a826a78 'mm' 'struct mm_struct *'     |   |     `-ImplicitCastExpr 0x15a124ca0 <col:22> 'unsigned long' <LValueToRValue>     |   |       `-DeclRefExpr 0x15a124c20 <col:22> 'unsigned long' lvalue ParmVar 0x15a80e2c8 'addr' 'unsigned long'     |   `-IfStmt 0x15a124fe0 <line:33:3, line:35:11>     |     |-BinaryOperator 0x15a124f78 <line:33:7, line:34:43> 'int' contains-errors '&&'     |     | |-BinaryOperator 0x15a124db8 <line:33:7, col:26> 'int' contains-errors '>='     |     | | |-BinaryOperator 0x15a124d60 <col:7, col:19> 'unsigned long' contains-errors '-'     |     | | | |-ImplicitCastExpr 0x15a124d30 <col:7> 'unsigned long' contains-errors <LValueToRValue>     |     | | | | `-DeclRefExpr 0x15a124cf0 <col:7> 'unsigned long' contains-errors lvalue Var 0x15a826e08 'task_size' 'unsigned long'     |     | | | `-ImplicitCastExpr 0x15a124d48 <col:19> 'unsigned long' <LValueToRValue>     |     | | |   `-DeclRefExpr 0x15a124d10 <col:19> 'unsigned long' lvalue ParmVar 0x15a80e348 'len' 'unsigned long'     |     | | `-ImplicitCastExpr 0x15a124da0 <col:26> 'unsigned long' <LValueToRValue>     |     | |   `-DeclRefExpr 0x15a124d80 <col:26> 'unsigned long' lvalue ParmVar 0x15a80e2c8 'addr' 'unsigned long'     |     | `-ParenExpr 0x15a124f58 <line:34:7, col:43> 'int' contains-errors     |     |   `-BinaryOperator 0x15a124f38 <col:8, col:35> 'int' contains-errors '||'     |     |     |-UnaryOperator 0x15a124e10 <col:8, col:9> 'int' prefix '!' cannot overflow     |     |     | `-ImplicitCastExpr 0x15a124df8 <col:9> 'struct vm_area_struct *' <LValueToRValue>     |     |     |   `-DeclRefExpr 0x15a124dd8 <col:9> 'struct vm_area_struct *' lvalue Var 0x15a826d58 'vma' 'struct vm_area_struct *'     |     |     `-BinaryOperator 0x15a124f18 <col:16, col:35> 'int' contains-errors '<='     |     |       |-BinaryOperator 0x15a124e98 <col:16, col:23> 'unsigned long' '+'     |     |       | |-ImplicitCastExpr 0x15a124e68 <col:16> 'unsigned long' <LValueToRValue>     |     |       | | `-DeclRefExpr 0x15a124e28 <col:16> 'unsigned long' lvalue ParmVar 0x15a80e2c8 'addr' 'unsigned long'     |     |       | `-ImplicitCastExpr 0x15a124e80 <col:23> 'unsigned long' <LValueToRValue>     |     |       |   `-DeclRefExpr 0x15a124e48 <col:23> 'unsigned long' lvalue ParmVar 0x15a80e348 'len' 'unsigned long'     |     |       `-RecoveryExpr 0x15a124ef0 <col:30, col:35> '<dependent type>' contains-errors lvalue     |     |         `-DeclRefExpr 0x15a124eb8 <col:30> 'struct vm_area_struct *' lvalue Var 0x15a826d58 'vma' 'struct vm_area_struct *'     |     `-ReturnStmt 0x15a124fd0 <line:35:4, col:11>     |       `-ImplicitCastExpr 0x15a124fb8 <col:11> 'unsigned long' <LValueToRValue>     |         `-DeclRefExpr 0x15a124f98 <col:11> 'unsigned long' lvalue ParmVar 0x15a80e2c8 'addr' 'unsigned long'     |-BinaryOperator 0x15a1250f8 <line:38:2, col:15> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15a125090 <col:2, col:7> '<dependent type>' contains-errors lvalue .flags     | | `-RecoveryExpr 0x15a125068 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15a125048 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x15a827058 'info' 'struct vm_unmapped_area_info'     | `-IntegerLiteral 0x15a1250d8 <col:15> 'int' 0     |-BinaryOperator 0x15a1251c8 <line:39:2, col:16> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15a125160 <col:2, col:7> '<dependent type>' contains-errors lvalue .length     | | `-RecoveryExpr 0x15a125138 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15a125118 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x15a827058 'info' 'struct vm_unmapped_area_info'     | `-DeclRefExpr 0x15a1251a8 <col:16> 'unsigned long' lvalue ParmVar 0x15a80e348 'len' 'unsigned long'     |-BinaryOperator 0x15a125748 <line:44:2, col:31> 'unsigned long' contains-errors '='     | |-DeclRefExpr 0x15a1255c8 <col:2> 'unsigned long' lvalue ParmVar 0x15a80e2c8 'addr' 'unsigned long'     | `-CallExpr 0x15a125720 <col:9, col:31> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15a1256c8 <col:9> 'int ()' Function 0x15a125610 'vm_unmapped_area' 'int ()'     |   `-UnaryOperator 0x15a125708 <col:26, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x15a1256e8 <col:27> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15a125b28 <line:46:2, line:51:2>     | |-RecoveryExpr 0x15a1257a8 <line:46:6, col:41> '_Bool' contains-errors     | `-CompoundStmt 0x15a125b08 <col:57, line:51:2>     |   |-BinaryOperator 0x15a125a28 <line:49:3, col:21> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x15a1259c0 <col:3, col:8> '<dependent type>' contains-errors lvalue .high_limit     |   | | `-RecoveryExpr 0x15a125998 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x15a125978 <col:3> 'struct vm_unmapped_area_info' lvalue Var 0x15a827058 'info' 'struct vm_unmapped_area_info'     |   | `-DeclRefExpr 0x15a125a08 <col:21> 'unsigned long' contains-errors lvalue Var 0x15a826e08 'task_size' 'unsigned long'     |   `-BinaryOperator 0x15a125ae8 <line:50:3, col:32> 'unsigned long' contains-errors '='     |     |-DeclRefExpr 0x15a125a48 <col:3> 'unsigned long' lvalue ParmVar 0x15a80e2c8 'addr' 'unsigned long'     |     `-CallExpr 0x15a125ac0 <col:10, col:32> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x15a125a68 <col:10> 'int ()' Function 0x15a125610 'vm_unmapped_area' 'int ()'     |       `-UnaryOperator 0x15a125aa8 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |         `-RecoveryExpr 0x15a125a88 <col:28> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x15a125b80 <line:53:2, col:9>       `-ImplicitCastExpr 0x15a125b68 <col:9> 'unsigned long' <LValueToRValue>         `-DeclRefExpr 0x15a125b48 <col:9> 'unsigned long' lvalue ParmVar 0x15a80e2c8 'addr' 'unsigned long' ","20610":"`-FunctionDecl 0x128140ab8  line:1:1 add_trace_export 'int (struct trace_export **, struct trace_export *)'   |-ParmVarDecl 0x1281286a8 <col:18, col:40> col:40 used list 'struct trace_export **'   |-ParmVarDecl 0x128128798 <col:46, col:67> col:67 used export 'struct trace_export *'   `-CompoundStmt 0x128140f18 <line:2:1, line:6:1>     |-CallExpr 0x128140db0 <line:3:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x128140ce0 <col:2> 'int ()' Function 0x128140c28 'rcu_assign_pointer' 'int ()'     | |-RecoveryExpr 0x128140d38 <col:21, col:29> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x128140d00 <col:21> 'struct trace_export *' lvalue ParmVar 0x128128798 'export' 'struct trace_export *'     | `-UnaryOperator 0x128140d98 <col:35, col:36> 'struct trace_export *' lvalue prefix '*' cannot overflow     |   `-ImplicitCastExpr 0x128140d80 <col:36> 'struct trace_export **' <LValueToRValue>     |     `-DeclRefExpr 0x128140d60 <col:36> 'struct trace_export **' lvalue ParmVar 0x1281286a8 'list' 'struct trace_export **'     `-CallExpr 0x128140eb8 <line:5:2, col:34> 'int'       |-ImplicitCastExpr 0x128140ea0 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x128140de0 <col:2> 'int ()' Function 0x128140c28 'rcu_assign_pointer' 'int ()'       |-ImplicitCastExpr 0x128140ee8 <col:21, col:22> 'struct trace_export *' <LValueToRValue>       | `-UnaryOperator 0x128140e38 <col:21, col:22> 'struct trace_export *' lvalue prefix '*' cannot overflow       |   `-ImplicitCastExpr 0x128140e20 <col:22> 'struct trace_export **' <LValueToRValue>       |     `-DeclRefExpr 0x128140e00 <col:22> 'struct trace_export **' lvalue ParmVar 0x1281286a8 'list' 'struct trace_export **'       `-ImplicitCastExpr 0x128140f00 <col:28> 'struct trace_export *' <LValueToRValue>         `-DeclRefExpr 0x128140e50 <col:28> 'struct trace_export *' lvalue ParmVar 0x128128798 'export' 'struct trace_export *' ","20618":"`-FunctionDecl 0x1469141f8  line:1:8 invalid fecr_Size 'int (int *)'   |-ParmVarDecl 0x146914128 <col:18, col:26> col:26 invalid s 'int *'   `-CompoundStmt 0x146914520 <line:2:1, line:6:1>     `-ReturnStmt 0x146914510 <line:5:2, col:9>       `-RecoveryExpr 0x1469144f0 <col:9> '<dependent type>' contains-errors lvalue ","20942":"`-FunctionDecl 0x12880df18  line:1:5 invalid tls12_get_sigandhash 'int (unsigned char *, const int *, const int *)'   |-ParmVarDecl 0x12880dd08 <col:26, col:41> col:41 used p 'unsigned char *'   |-ParmVarDecl 0x12880dda0 <col:44, col:60> col:60 invalid pk 'const int *'   |-ParmVarDecl 0x12880de20 <col:64, col:78> col:78 invalid md 'const int *'   `-CompoundStmt 0x129009b28 <line:2:1, line:15:1>     |-DeclStmt 0x12880e0f0 <line:3:5, col:22>     | |-VarDecl 0x12880dff0 <col:5, col:9> col:9 used sig_id 'int'     | `-VarDecl 0x12880e070 <col:5, col:17> col:17 used md_id 'int'     |-IfStmt 0x12880e188 <line:4:5, line:5:16>     | |-UnaryOperator 0x12880e140 <line:4:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12880e128 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x12880e108 <col:10> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12880e178 <line:5:9, col:16>     |   `-IntegerLiteral 0x12880e158 <col:16> 'int' 0     |-BinaryOperator 0x129009570 <line:6:5, col:74> 'int' contains-errors '='     | |-DeclRefExpr 0x12880e1a8 <col:5> 'int' lvalue Var 0x12880e070 'md_id' 'int'     | `-CallExpr 0x129009538 <col:13, col:74> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12880e320 <col:13> 'int ()' Function 0x12880e268 'tls12_find_id' 'int ()'     |   |-CallExpr 0x1290092f8 <col:27, col:41> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1290092b8 <col:27> 'int ()' Function 0x129009200 'EVP_MD_type' 'int ()'     |   | `-RecoveryExpr 0x1290092d8 <col:39> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x1290094d0 <col:44> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x129009510 <col:54, col:73> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x129009418 <col:54> 'int ()' Function 0x129009360 'OSSL_NELEM' 'int ()'     |     `-RecoveryExpr 0x1290094f0 <col:65> '<dependent type>' contains-errors lvalue     |-IfStmt 0x129009650 <line:7:5, line:8:16>     | |-BinaryOperator 0x129009600 <line:7:9, col:19> 'int' '=='     | | |-ImplicitCastExpr 0x1290095e8 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x129009590 <col:9> 'int' lvalue Var 0x12880e070 'md_id' 'int'     | | `-UnaryOperator 0x1290095d0 <col:18, col:19> 'int' prefix '-'     | |   `-IntegerLiteral 0x1290095b0 <col:19> 'int' 1     | `-ReturnStmt 0x129009640 <line:8:9, col:16>     |   `-IntegerLiteral 0x129009620 <col:16> 'int' 0     |-BinaryOperator 0x1290097d8 <line:9:5, col:32> 'int' contains-errors '='     | |-DeclRefExpr 0x129009670 <col:5> 'int' lvalue Var 0x12880dff0 'sig_id' 'int'     | `-CallExpr 0x1290097b0 <col:14, col:32> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x129009770 <col:14> 'int ()' Function 0x1290096b8 'tls12_get_sigid' 'int ()'     |   `-RecoveryExpr 0x129009790 <col:30> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1290098b8 <line:10:5, line:11:16>     | |-BinaryOperator 0x129009868 <line:10:9, col:20> 'int' '=='     | | |-ImplicitCastExpr 0x129009850 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x1290097f8 <col:9> 'int' lvalue Var 0x12880dff0 'sig_id' 'int'     | | `-UnaryOperator 0x129009838 <col:19, col:20> 'int' prefix '-'     | |   `-IntegerLiteral 0x129009818 <col:20> 'int' 1     | `-ReturnStmt 0x1290098a8 <line:11:9, col:16>     |   `-IntegerLiteral 0x129009888 <col:16> 'int' 0     |-BinaryOperator 0x1290099c8 <line:12:5, col:27> 'unsigned char' '='     | |-ArraySubscriptExpr 0x129009930 <col:5, col:8> 'unsigned char' lvalue     | | |-ImplicitCastExpr 0x129009918 <col:5> 'unsigned char *' <LValueToRValue>     | | | `-DeclRefExpr 0x1290098d8 <col:5> 'unsigned char *' lvalue ParmVar 0x12880dd08 'p' 'unsigned char *'     | | `-IntegerLiteral 0x1290098f8 <col:7> 'int' 0     | `-CStyleCastExpr 0x1290099a0 <col:12, col:27> 'unsigned char' <IntegralCast>     |   `-ImplicitCastExpr 0x129009988 <col:27> 'int' <LValueToRValue> part_of_explicit_cast     |     `-DeclRefExpr 0x129009950 <col:27> 'int' lvalue Var 0x12880e070 'md_id' 'int'     |-BinaryOperator 0x129009ad8 <line:13:5, col:27> 'unsigned char' '='     | |-ArraySubscriptExpr 0x129009a40 <col:5, col:8> 'unsigned char' lvalue     | | |-ImplicitCastExpr 0x129009a28 <col:5> 'unsigned char *' <LValueToRValue>     | | | `-DeclRefExpr 0x1290099e8 <col:5> 'unsigned char *' lvalue ParmVar 0x12880dd08 'p' 'unsigned char *'     | | `-IntegerLiteral 0x129009a08 <col:7> 'int' 1     | `-CStyleCastExpr 0x129009ab0 <col:12, col:27> 'unsigned char' <IntegralCast>     |   `-ImplicitCastExpr 0x129009a98 <col:27> 'int' <LValueToRValue> part_of_explicit_cast     |     `-DeclRefExpr 0x129009a60 <col:27> 'int' lvalue Var 0x12880dff0 'sig_id' 'int'     `-ReturnStmt 0x129009b18 <line:14:5, col:12>       `-IntegerLiteral 0x129009af8 <col:12> 'int' 1 ","20503":"`-FunctionDecl 0x14602ab58  line:1:12 do_siocgstampns 'int (struct net *, struct socket *, unsigned int, struct compat_timespec)' static   |-ParmVarDecl 0x14600e248 <col:28, col:40> col:40 used net 'struct net *'   |-ParmVarDecl 0x14602a828 <col:45, col:60> col:60 used sock 'struct socket *'   |-ParmVarDecl 0x14602a8a8 <line:2:5, col:18> col:18 used cmd 'unsigned int'   |-ParmVarDecl 0x14602aa08 <col:23, col:46> col:46 invalid __user 'struct compat_timespec'   `-CompoundStmt 0x14602e780 <line:3:1, line:16:1>     |-DeclStmt 0x14602adf8 <line:5:2, col:21>     | |-RecordDecl 0x14602ac80 <col:2, col:9> col:9 struct timespec     | `-VarDecl 0x14602ad78 <col:2, col:18> col:18 invalid kts 'struct timespec'     |-DeclStmt 0x14602ae90 <line:6:2, col:9>     | `-VarDecl 0x14602ae28 <col:2, col:6> col:6 used err 'int'     |-CallExpr 0x14602b040 <line:8:2, col:18> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14602afc0 <col:2> 'int ()' Function 0x14602af08 'set_fs' 'int ()'     | `-RecoveryExpr 0x14602b020 <col:9> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14602b330 <line:9:2, col:57> 'int' contains-errors '='     | |-DeclRefExpr 0x14602b068 <col:2> 'int' lvalue Var 0x14602ae28 'err' 'int'     | `-CallExpr 0x14602b2a8 <col:8, col:57> 'int' contains-errors     |   |-ImplicitCastExpr 0x14602b290 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14602b168 <col:8> 'int ()' Function 0x14602b0b0 'sock_do_ioctl' 'int ()'     |   |-ImplicitCastExpr 0x14602b2e8 <col:22> 'struct net *' <LValueToRValue>     |   | `-DeclRefExpr 0x14602b188 <col:22> 'struct net *' lvalue ParmVar 0x14600e248 'net' 'struct net *'     |   |-ImplicitCastExpr 0x14602b300 <col:27> 'struct socket *' <LValueToRValue>     |   | `-DeclRefExpr 0x14602b1a8 <col:27> 'struct socket *' lvalue ParmVar 0x14602a828 'sock' 'struct socket *'     |   |-ImplicitCastExpr 0x14602b318 <col:33> 'unsigned int' <LValueToRValue>     |   | `-DeclRefExpr 0x14602b1c8 <col:33> 'unsigned int' lvalue ParmVar 0x14602a8a8 'cmd' 'unsigned int'     |   `-CStyleCastExpr 0x14602b238 <col:38, col:54> 'unsigned long' contains-errors <Dependent>     |     `-UnaryOperator 0x14602b208 <col:53, col:54> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x14602b1e8 <col:54> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14602b3d0 <line:10:2, col:15> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14602b350 <col:2> 'int ()' Function 0x14602af08 'set_fs' 'int ()'     | `-RecoveryExpr 0x14602b3b0 <col:9> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14602e718 <line:11:2, line:14:2>     | |-UnaryOperator 0x14602b430 <line:11:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14602b418 <col:7> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x14602b3f8 <col:7> 'int' lvalue Var 0x14602ae28 'err' 'int'     | `-CompoundStmt 0x14602e6f8 <col:12, line:14:2>     |   |-BinaryOperator 0x14602b748 <line:12:3, col:41> 'int' contains-errors '='     |   | |-DeclRefExpr 0x14602b448 <col:3> 'int' lvalue Var 0x14602ae28 'err' 'int'     |   | `-CallExpr 0x14602b718 <col:9, col:41> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x14602b548 <col:9> 'int ()' Function 0x14602b490 'put_user' 'int ()'     |   |   |-CXXDependentScopeMemberExpr 0x14602b588 <col:18, col:22> '<dependent type>' contains-errors lvalue .tv_sec     |   |   | `-RecoveryExpr 0x14602b568 <col:18> '<dependent type>' contains-errors lvalue     |   |   `-UnaryOperator 0x14602b700 <col:30, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |     `-CXXDependentScopeMemberExpr 0x14602b6b8 <col:31, col:35> '<dependent type>' contains-errors lvalue ->tv_sec     |   |       `-RecoveryExpr 0x14602b698 <col:31> '<dependent type>' contains-errors lvalue     |   `-CompoundAssignOperator 0x14602e6c8 <line:13:3, col:46> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |     |-DeclRefExpr 0x14602b768 <col:3> 'int' lvalue Var 0x14602ae28 'err' 'int'     |     `-CallExpr 0x14602e698 <col:10, col:46> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x14602e4b8 <col:10> 'int ()' Function 0x14602e400 '__put_user' 'int ()'     |       |-CXXDependentScopeMemberExpr 0x14602e4f8 <col:21, col:25> '<dependent type>' contains-errors lvalue .tv_nsec     |       | `-RecoveryExpr 0x14602e4d8 <col:21> '<dependent type>' contains-errors lvalue     |       `-UnaryOperator 0x14602e680 <col:34, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     |         `-CXXDependentScopeMemberExpr 0x14602e638 <col:35, col:39> '<dependent type>' contains-errors lvalue ->tv_nsec     |           `-RecoveryExpr 0x14602e618 <col:35> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14602e770 <line:15:2, col:9>       `-ImplicitCastExpr 0x14602e758 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x14602e738 <col:9> 'int' lvalue Var 0x14602ae28 'err' 'int' ","20710":"`-FunctionDecl 0x142941838  line:1:12 invalid i40e_rebuild_cloud_filters 'int (struct i40e_vsi *, int)' static   |-ParmVarDecl 0x142928648 <col:39, col:56> col:56 used vsi 'struct i40e_vsi *'   |-ParmVarDecl 0x1429286e0 <col:61, col:65> col:65 invalid seid 'int'   `-CompoundStmt 0x144009148 <line:2:1, line:30:1>     |-DeclStmt 0x142941ad8 <line:3:2, col:35>     | |-RecordDecl 0x1429418f0 <col:2, col:9> col:9 struct i40e_cloud_filter     | `-VarDecl 0x142941a58 <col:2, col:28> col:28 used cfilter 'struct i40e_cloud_filter *'     |-DeclStmt 0x142941d38 <line:4:2, col:32>     | |-RecordDecl 0x142941af0 <col:2, col:9> col:9 struct i40e_pf     | `-VarDecl 0x142941c58 <col:2, col:28> col:18 used pf 'struct i40e_pf *' cinit     |   `-RecoveryExpr 0x142941cf8 <col:23, col:28> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x142941cc0 <col:23> 'struct i40e_vsi *' lvalue ParmVar 0x142928648 'vsi' 'struct i40e_vsi *'     |-DeclStmt 0x142941f38 <line:5:2, col:25>     | |-RecordDecl 0x142941d50 <col:2, col:9> col:9 struct hlist_node     | `-VarDecl 0x142941eb8 <col:2, col:21> col:21 used node 'struct hlist_node *'     |-CallExpr 0x142942200 <line:9:2, line:10:17> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1429420b0 <line:9:2> 'int ()' Function 0x142941ff8 'hlist_for_each_entry_safe' 'int ()'     | |-DeclRefExpr 0x1429420d0 <col:28> 'struct i40e_cloud_filter *' lvalue Var 0x142941a58 'cfilter' 'struct i40e_cloud_filter *'     | |-DeclRefExpr 0x1429420f0 <col:37> 'struct hlist_node *' lvalue Var 0x142941eb8 'node' 'struct hlist_node *'     | |-UnaryOperator 0x142942170 <col:43, col:48> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x142942148 <col:44, col:48> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x142942110 <col:44> 'struct i40e_pf *' contains-errors lvalue Var 0x142941c58 'pf' 'struct i40e_pf *'     | `-RecoveryExpr 0x1429421e0 <line:10:7> '<dependent type>' contains-errors lvalue     |-CompoundStmt 0x144009100 <col:19, line:28:2>     | `-IfStmt 0x1440090e0 <line:20:3, line:27:3>     |   |-RecoveryExpr 0x142942678 <line:20:7> '<dependent type>' contains-errors lvalue     |   `-CompoundStmt 0x1440090d0 <col:12, line:27:3>     `-ReturnStmt 0x144009138 <line:29:2, col:9>       `-IntegerLiteral 0x144009118 <col:9> 'int' 0 ","21053":"`-FunctionDecl 0x127144e98  line:1:1 invalid v9fs_vfs_getattr_dotl 'int (const struct path *, struct kstat *, int, unsigned int)'   |-ParmVarDecl 0x127128648 <col:23, col:42> col:42 used path 'const struct path *'   |-ParmVarDecl 0x127144c28 <col:48, col:62> col:62 used stat 'struct kstat *'   |-ParmVarDecl 0x127144cc0 <line:2:4, col:8> col:8 invalid request_mask 'int'   |-ParmVarDecl 0x127144d40 <col:22, col:35> col:35 flags 'unsigned int'   `-CompoundStmt 0x127146020 <line:3:1, line:32:1>     |-DeclStmt 0x1271451a8 <line:4:2, col:38>     | |-RecordDecl 0x127144f60 <col:2, col:9> col:9 struct dentry     | `-VarDecl 0x1271450c8 <col:2, col:32> col:17 used dentry 'struct dentry *' cinit     |   `-RecoveryExpr 0x127145168 <col:26, col:32> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x127145130 <col:26> 'const struct path *' lvalue ParmVar 0x127128648 'path' 'const struct path *'     |-DeclStmt 0x1271453a8 <line:5:2, col:33>     | |-RecordDecl 0x1271451c0 <col:2, col:9> col:9 struct v9fs_session_info     | `-VarDecl 0x127145328 <col:2, col:28> col:28 used v9ses 'struct v9fs_session_info *'     |-DeclStmt 0x1271455a8 <line:6:2, col:20>     | |-RecordDecl 0x1271453c0 <col:2, col:9> col:9 struct p9_fid     | `-VarDecl 0x127145528 <col:2, col:17> col:17 used fid 'struct p9_fid *'     |-DeclStmt 0x1271457a8 <line:7:2, col:25>     | |-RecordDecl 0x1271455c0 <col:2, col:9> col:9 struct p9_stat_dotl     | `-VarDecl 0x127145728 <col:2, col:23> col:23 used st 'struct p9_stat_dotl *'     |-CallExpr 0x127145a38 <line:9:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x127145920 <col:2> 'int ()' Function 0x127145868 'p9_debug' 'int ()'     | |-RecoveryExpr 0x127145a18 <col:11> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x1271459a0 <col:25> 'char[4]' lvalue \"STR\"     | `-DeclRefExpr 0x1271459c0 <col:32> 'struct dentry *' contains-errors lvalue Var 0x1271450c8 'dentry' 'struct dentry *'     |-BinaryOperator 0x127809058 <line:10:2, col:34> 'struct v9fs_session_info *' contains-errors '='     | |-DeclRefExpr 0x127145a70 <col:2> 'struct v9fs_session_info *' lvalue Var 0x127145328 'v9ses' 'struct v9fs_session_info *'     | `-ImplicitCastExpr 0x127809040 <col:10, col:34> 'struct v9fs_session_info *' contains-errors <IntegralToPointer>     |   `-CallExpr 0x127809000 <col:10, col:34> 'int' contains-errors     |     |-ImplicitCastExpr 0x127145be0 <col:10> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x127145b70 <col:10> 'int ()' Function 0x127145ab8 'v9fs_dentry2v9ses' 'int ()'     |     `-ImplicitCastExpr 0x127809028 <col:28> 'struct dentry *' contains-errors <LValueToRValue>     |       `-DeclRefExpr 0x127145b90 <col:28> 'struct dentry *' contains-errors lvalue Var 0x1271450c8 'dentry' 'struct dentry *'     |-IfStmt 0x1278095b0 <line:11:2, line:14:2>     | |-BinaryOperator 0x127809248 <line:11:6, col:53> 'int' contains-errors '||'     | | |-BinaryOperator 0x1278091e8 <col:6, col:22> 'int' contains-errors '=='     | | | |-RecoveryExpr 0x1278090b0 <col:6, col:13> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x127809078 <col:6> 'struct v9fs_session_info *' lvalue Var 0x127145328 'v9ses' 'struct v9fs_session_info *'     | | | `-RecoveryExpr 0x1278091c8 <col:22> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x127809228 <col:37, col:53> 'int' contains-errors '=='     | |   |-RecoveryExpr 0x127809148 <col:37, col:44> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x127809110 <col:37> 'struct v9fs_session_info *' lvalue Var 0x127145328 'v9ses' 'struct v9fs_session_info *'     | |   `-RecoveryExpr 0x127809208 <col:53> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x127809590 <col:68, line:14:2>     |   |-CallExpr 0x127809518 <line:12:3, col:41> 'int' contains-errors     |   | |-ImplicitCastExpr 0x127809500 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x127809348 <col:3> 'int ()' Function 0x127809290 'generic_fillattr' 'int ()'     |   | |-CallExpr 0x1278094a0 <col:20, col:34> 'int' contains-errors     |   | | |-ImplicitCastExpr 0x127809488 <col:20> 'int (*)()' <FunctionToPointerDecay>     |   | | | `-DeclRefExpr 0x127809448 <col:20> 'int ()' Function 0x127809390 'd_inode' 'int ()'     |   | | `-ImplicitCastExpr 0x1278094c8 <col:28> 'struct dentry *' contains-errors <LValueToRValue>     |   | |   `-DeclRefExpr 0x127809468 <col:28> 'struct dentry *' contains-errors lvalue Var 0x1271450c8 'dentry' 'struct dentry *'     |   | `-ImplicitCastExpr 0x127809548 <col:37> 'struct kstat *' <LValueToRValue>     |   |   `-DeclRefExpr 0x1278094e0 <col:37> 'struct kstat *' lvalue ParmVar 0x127144c28 'stat' 'struct kstat *'     |   `-ReturnStmt 0x127809580 <line:13:3, col:10>     |     `-IntegerLiteral 0x127809560 <col:10> 'int' 0     |-BinaryOperator 0x127809780 <line:15:2, col:30> 'struct p9_fid *' contains-errors '='     | |-DeclRefExpr 0x1278095d0 <col:2> 'struct p9_fid *' lvalue Var 0x127145528 'fid' 'struct p9_fid *'     | `-ImplicitCastExpr 0x127809768 <col:8, col:30> 'struct p9_fid *' contains-errors <IntegralToPointer>     |   `-CallExpr 0x127809728 <col:8, col:30> 'int' contains-errors     |     |-ImplicitCastExpr 0x127809710 <col:8> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1278096d0 <col:8> 'int ()' Function 0x127809618 'v9fs_fid_lookup' 'int ()'     |     `-ImplicitCastExpr 0x127809750 <col:24> 'struct dentry *' contains-errors <LValueToRValue>     |       `-DeclRefExpr 0x1278096f0 <col:24> 'struct dentry *' contains-errors lvalue Var 0x1271450c8 'dentry' 'struct dentry *'     |-IfStmt 0x127809aa0 <line:16:2, line:17:21>     | |-CallExpr 0x1278098d8 <line:16:6, col:16> 'int'     | | |-ImplicitCastExpr 0x1278098c0 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x127809880 <col:6> 'int ()' Function 0x1278097c8 'IS_ERR' 'int ()'     | | `-ImplicitCastExpr 0x127809900 <col:13> 'struct p9_fid *' <LValueToRValue>     | |   `-DeclRefExpr 0x1278098a0 <col:13> 'struct p9_fid *' lvalue Var 0x127145528 'fid' 'struct p9_fid *'     | `-ReturnStmt 0x127809a90 <line:17:3, col:21>     |   `-CallExpr 0x127809a50 <col:10, col:21> 'int'     |     |-ImplicitCastExpr 0x127809a38 <col:10> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1278099f8 <col:10> 'int ()' Function 0x127809940 'PTR_ERR' 'int ()'     |     `-ImplicitCastExpr 0x127809a78 <col:18> 'struct p9_fid *' <LValueToRValue>     |       `-DeclRefExpr 0x127809a18 <col:18> 'struct p9_fid *' lvalue Var 0x127145528 'fid' 'struct p9_fid *'     |-BinaryOperator 0x127809cb8 <line:21:2, col:47> 'struct p9_stat_dotl *' contains-errors '='     | |-DeclRefExpr 0x127809ac0 <col:2> 'struct p9_stat_dotl *' lvalue Var 0x127145728 'st' 'struct p9_stat_dotl *'     | `-CallExpr 0x127809c88 <col:7, col:47> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x127809bc0 <col:7> 'int ()' Function 0x127809b08 'p9_client_getattr_dotl' 'int ()'     |   |-DeclRefExpr 0x127809be0 <col:30> 'struct p9_fid *' lvalue Var 0x127145528 'fid' 'struct p9_fid *'     |   `-RecoveryExpr 0x127809c68 <col:35> '<dependent type>' contains-errors lvalue     |-IfStmt 0x127809e18 <line:22:2, line:23:20>     | |-CallExpr 0x127809d30 <line:22:6, col:15> 'int'     | | |-ImplicitCastExpr 0x127809d18 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x127809cd8 <col:6> 'int ()' Function 0x1278097c8 'IS_ERR' 'int ()'     | | `-ImplicitCastExpr 0x127809d58 <col:13> 'struct p9_stat_dotl *' <LValueToRValue>     | |   `-DeclRefExpr 0x127809cf8 <col:13> 'struct p9_stat_dotl *' lvalue Var 0x127145728 'st' 'struct p9_stat_dotl *'     | `-ReturnStmt 0x127809e08 <line:23:3, col:20>     |   `-CallExpr 0x127809dc8 <col:10, col:20> 'int'     |     |-ImplicitCastExpr 0x127809db0 <col:10> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x127809d70 <col:10> 'int ()' Function 0x127809940 'PTR_ERR' 'int ()'     |     `-ImplicitCastExpr 0x127809df0 <col:18> 'struct p9_stat_dotl *' <LValueToRValue>     |       `-DeclRefExpr 0x127809d90 <col:18> 'struct p9_stat_dotl *' lvalue Var 0x127145728 'st' 'struct p9_stat_dotl *'     |-CallExpr 0x127145c18 <line:25:2, col:42> 'int' contains-errors     | |-ImplicitCastExpr 0x127145c00 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x127809f18 <col:2> 'int ()' Function 0x127809e60 'v9fs_stat2inode_dotl' 'int ()'     | |-ImplicitCastExpr 0x127145c48 <col:23> 'struct p9_stat_dotl *' <LValueToRValue>     | | `-DeclRefExpr 0x127809f38 <col:23> 'struct p9_stat_dotl *' lvalue Var 0x127145728 'st' 'struct p9_stat_dotl *'     | `-CallExpr 0x127809fb0 <col:27, col:41> 'int' contains-errors     |   |-ImplicitCastExpr 0x127809f98 <col:27> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x127809f58 <col:27> 'int ()' Function 0x127809390 'd_inode' 'int ()'     |   `-ImplicitCastExpr 0x127809fd8 <col:35> 'struct dentry *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x127809f78 <col:35> 'struct dentry *' contains-errors lvalue Var 0x1271450c8 'dentry' 'struct dentry *'     |-CallExpr 0x127145d50 <line:26:2, col:40> 'int' contains-errors     | |-ImplicitCastExpr 0x127145d38 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x127145c60 <col:2> 'int ()' Function 0x127809290 'generic_fillattr' 'int ()'     | |-CallExpr 0x127145cd8 <col:19, col:33> 'int' contains-errors     | | |-ImplicitCastExpr 0x127145cc0 <col:19> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x127145c80 <col:19> 'int ()' Function 0x127809390 'd_inode' 'int ()'     | | `-ImplicitCastExpr 0x127145d00 <col:27> 'struct dentry *' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x127145ca0 <col:27> 'struct dentry *' contains-errors lvalue Var 0x1271450c8 'dentry' 'struct dentry *'     | `-ImplicitCastExpr 0x127145d80 <col:36> 'struct kstat *' <LValueToRValue>     |   `-DeclRefExpr 0x127145d18 <col:36> 'struct kstat *' lvalue ParmVar 0x127144c28 'stat' 'struct kstat *'     |-BinaryOperator 0x127145e58 <line:28:2, col:22> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x127145dd0 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x127145d98 <col:2> 'struct kstat *' lvalue ParmVar 0x127144c28 'stat' 'struct kstat *'     | `-RecoveryExpr 0x127145e30 <col:18, col:22> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x127145df8 <col:18> 'struct p9_stat_dotl *' lvalue Var 0x127145728 'st' 'struct p9_stat_dotl *'     |-CallExpr 0x127145fb0 <line:30:2, col:10> 'int'     | |-ImplicitCastExpr 0x127145f98 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x127145f58 <col:2> 'int ()' Function 0x127145ea0 'kfree' 'int ()'     | `-ImplicitCastExpr 0x127145fd8 <col:8> 'struct p9_stat_dotl *' <LValueToRValue>     |   `-DeclRefExpr 0x127145f78 <col:8> 'struct p9_stat_dotl *' lvalue Var 0x127145728 'st' 'struct p9_stat_dotl *'     `-ReturnStmt 0x127146010 <line:31:2, col:9>       `-IntegerLiteral 0x127145ff0 <col:9> 'int' 0 ","20887":"`-FunctionDecl 0x13200ddf8  line:1:1 invalid goa_web_view_init 'int (int *)'   |-ParmVarDecl 0x13200dd28 <col:20, col:32> col:32 referenced invalid self 'int *'   `-CompoundStmt 0x13300a360 <line:2:1, line:66:1>     |-BinaryOperator 0x13200e188 <line:10:3, col:46> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13200df80 <col:3, col:9> '<dependent type>' contains-errors lvalue ->priv     | | `-RecoveryExpr 0x13200df58 <col:3> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13200df38 <col:3> 'int *' lvalue ParmVar 0x13200dd28 'self' 'int *'     | `-CallExpr 0x13200e160 <col:16, col:46> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13200e120 <col:16> 'int ()' Function 0x13200e068 'GOA_WEB_VIEW_GET_PRIVATE' 'int ()'     |   `-RecoveryExpr 0x13200e140 <col:42> '<dependent type>' contains-errors lvalue     `-CallExpr 0x132027678 <line:14:3, col:104> '<dependent type>' contains-errors       |-DeclRefExpr 0x1320274b8 <col:3> 'int ()' Function 0x132027400 'g_object_set' 'int ()'       |-RecoveryExpr 0x1320275b8 <col:17> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x1320275d8 <col:26> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x1320275f8 <col:63> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x132027618 <col:69> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x132027638 <col:94> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x132027658 <col:100> '<dependent type>' contains-errors lvalue ","20816":"`-FunctionDecl 0x13b941b48  line:1:5 invalid SMB2_query_info 'int (const unsigned int, struct cifs_tcon *, int, int, struct smb2_file_all_info *)'   |-ParmVarDecl 0x13b9280d8 <col:21, col:40> col:40 used xid 'const unsigned int'   |-ParmVarDecl 0x13b9286c8 <col:45, col:63> col:63 used tcon 'struct cifs_tcon *'   |-ParmVarDecl 0x13b928760 <line:2:2, col:6> col:6 invalid persistent_fid 'int'   |-ParmVarDecl 0x13b941800 <col:22, col:26> col:26 invalid volatile_fid 'int'   |-ParmVarDecl 0x13b9419d8 <col:40, col:67> col:67 used data 'struct smb2_file_all_info *'   `-CompoundStmt 0x13b942058 <line:3:1, line:9:1> ","20435":"`-FunctionDecl 0x124943528  col:14 implicit used strdup 'char *(const char *)' extern   |-ParmVarDecl 0x124943628 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x1249435d0 <<invalid sloc>> Implicit 950 ","20579":"`-FunctionDecl 0x12d027ab8  col:5 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x12d027bb8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x12d027c20 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x12d027c88 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x12d027b60 <<invalid sloc>> Implicit 900 ","20965":"`-FunctionDecl 0x13800dda0  line:1:6 snd_msndmidi_input_read 'void (void *)'   |-ParmVarDecl 0x13800dcd8 <col:30, col:36> col:36 used mpuv 'void *'   `-CompoundStmt 0x13802a038 <line:2:1, line:25:1>     |-DeclStmt 0x13800df18 <line:3:2, col:21>     | `-VarDecl 0x13800deb0 <col:2, col:16> col:16 used flags 'unsigned long'     |-DeclStmt 0x13800e168 <line:4:2, col:33>     | |-RecordDecl 0x13800df30 <col:2, col:9> col:9 struct snd_msndmidi     | `-VarDecl 0x13800e098 <col:2, col:29> col:23 used mpu 'struct snd_msndmidi *' cinit     |   `-ImplicitCastExpr 0x13800e138 <col:29> 'struct snd_msndmidi *' <BitCast>     |     `-ImplicitCastExpr 0x13800e120 <col:29> 'void *' <LValueToRValue>     |       `-DeclRefExpr 0x13800e100 <col:29> 'void *' lvalue ParmVar 0x13800dcd8 'mpuv' 'void *'     |-DeclStmt 0x138026970 <line:5:2, col:58>     | `-VarDecl 0x13800e198 <col:2, col:44> col:8 used pwMIDQData 'void *' cinit     |   `-BinaryOperator 0x138026950 <col:21, col:44> '<dependent type>' contains-errors '+'     |     |-CXXDependentScopeMemberExpr 0x138026898 <col:21, col:31> '<dependent type>' contains-errors lvalue ->mappedbase     |     | `-RecoveryExpr 0x138026870 <col:21, col:26> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x13800e200 <col:21> 'struct snd_msndmidi *' lvalue Var 0x13800e098 'mpu' 'struct snd_msndmidi *'     |     `-RecoveryExpr 0x138026930 <col:44> '<dependent type>' contains-errors lvalue     |-CallExpr 0x138026b58 <line:7:2, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x138026aa0 <col:2> 'int ()' Function 0x1380269e8 'spin_lock_irqsave' 'int ()'     | |-UnaryOperator 0x138026b20 <col:20, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x138026af8 <col:21, col:26> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x138026ac0 <col:21> 'struct snd_msndmidi *' lvalue Var 0x13800e098 'mpu' 'struct snd_msndmidi *'     | `-DeclRefExpr 0x138026b38 <col:38> 'unsigned long' lvalue Var 0x13800deb0 'flags' 'unsigned long'     |-WhileStmt 0x138029e50 <line:8:2, line:23:2>     | |-BinaryOperator 0x138026fa8 <line:8:9, line:9:41> 'int' contains-errors '!='     | | |-CallExpr 0x138026f18 <line:8:9, col:41> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x138026c68 <col:9> 'int ()' Function 0x138026bb0 'readw' 'int ()'     | | | `-BinaryOperator 0x138026ef8 <col:15, col:32> '<dependent type>' contains-errors '+'     | | |   |-CXXDependentScopeMemberExpr 0x138026ce8 <col:15, col:25> '<dependent type>' contains-errors lvalue ->MIDQ     | | |   | `-RecoveryExpr 0x138026cc0 <col:15, col:20> '<dependent type>' contains-errors lvalue     | | |   |   `-DeclRefExpr 0x138026c88 <col:15> 'struct snd_msndmidi *' lvalue Var 0x13800e098 'mpu' 'struct snd_msndmidi *'     | | |   `-RecoveryExpr 0x138026ed8 <col:32> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x138026f80 <line:9:9, col:41> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x138026d90 <col:9> 'int ()' Function 0x138026bb0 'readw' 'int ()'     | |   `-BinaryOperator 0x138026f60 <col:15, col:32> '<dependent type>' contains-errors '+'     | |     |-CXXDependentScopeMemberExpr 0x138026e10 <col:15, col:25> '<dependent type>' contains-errors lvalue ->MIDQ     | |     | `-RecoveryExpr 0x138026de8 <col:15, col:20> '<dependent type>' contains-errors lvalue     | |     |   `-DeclRefExpr 0x138026db0 <col:15> 'struct snd_msndmidi *' lvalue Var 0x13800e098 'mpu' 'struct snd_msndmidi *'     | |     `-RecoveryExpr 0x138026f40 <col:32> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x138029e40 <col:44, line:23:2>     `-CallExpr 0x13802a008 <line:24:2, col:48> '<dependent type>' contains-errors       |-DeclRefExpr 0x138029f50 <col:2> 'int ()' Function 0x138029e98 'spin_unlock_irqrestore' 'int ()'       |-UnaryOperator 0x138029fd0 <col:25, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow       | `-RecoveryExpr 0x138029fa8 <col:26, col:31> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x138029f70 <col:26> 'struct snd_msndmidi *' lvalue Var 0x13800e098 'mpu' 'struct snd_msndmidi *'       `-DeclRefExpr 0x138029fe8 <col:43> 'unsigned long' lvalue Var 0x13800deb0 'flags' 'unsigned long' ","21048":"`-FunctionDecl 0x15980aee8  col:9 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x15980afe8 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x15980af90 <<invalid sloc>> Implicit 873 ","20703":"`-FunctionDecl 0x14002a838  line:1:1 tty_open 'int (struct tty *, char **)'   |-ParmVarDecl 0x14000e248 <col:10, col:22> col:22 used tty 'struct tty *'   |-ParmVarDecl 0x14000e2f8 <col:27, col:34> col:34 used cause 'char **'   `-CompoundStmt 0x148123750 <line:2:1, line:26:1>     |-BinaryOperator 0x14002abf8 <line:3:2, col:58> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14002a970 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14002a938 <col:2> 'struct tty *' lvalue ParmVar 0x14000e248 'tty' 'struct tty *'     | `-CallExpr 0x14002abc0 <col:14, col:58> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14002aac0 <col:14> 'int ()' Function 0x14002aa08 'tty_term_find' 'int ()'     |   |-RecoveryExpr 0x14002ab18 <col:28, col:33> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14002aae0 <col:28> 'struct tty *' lvalue ParmVar 0x14000e248 'tty' 'struct tty *'     |   |-RecoveryExpr 0x14002ab78 <col:44, col:49> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14002ab40 <col:44> 'struct tty *' lvalue ParmVar 0x14000e248 'tty' 'struct tty *'     |   `-DeclRefExpr 0x14002aba0 <col:53> 'char **' lvalue ParmVar 0x14000e2f8 'cause' 'char **'     |-IfStmt 0x14002af20 <line:4:2, line:7:2>     | |-BinaryOperator 0x14002acd0 <line:4:6, col:19> 'int' contains-errors '=='     | | |-RecoveryExpr 0x14002ac50 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x14002ac18 <col:6> 'struct tty *' lvalue ParmVar 0x14000e248 'tty' 'struct tty *'     | | `-RecoveryExpr 0x14002acb0 <col:19> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14002af00 <col:25, line:7:2>     |   |-CallExpr 0x14002ae58 <line:5:3, col:16> 'int'     |   | |-ImplicitCastExpr 0x14002ae40 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14002add0 <col:3> 'int ()' Function 0x14002ad18 'tty_close' 'int ()'     |   | `-ImplicitCastExpr 0x14002ae80 <col:13> 'struct tty *' <LValueToRValue>     |   |   `-DeclRefExpr 0x14002adf0 <col:13> 'struct tty *' lvalue ParmVar 0x14000e248 'tty' 'struct tty *'     |   `-ReturnStmt 0x14002aef0 <line:6:3, col:13>     |     `-ParenExpr 0x14002aed0 <col:10, col:13> 'int'     |       `-UnaryOperator 0x14002aeb8 <col:11, col:12> 'int' prefix '-'     |         `-IntegerLiteral 0x14002ae98 <col:12> 'int' 1     |-CompoundAssignOperator 0x14002b008 <line:8:2, col:16> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-RecoveryExpr 0x14002af78 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14002af40 <col:2> 'struct tty *' lvalue ParmVar 0x14000e248 'tty' 'struct tty *'     | `-RecoveryExpr 0x14002afe8 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14002b480 <line:12:2, line:13:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14002b238 <line:12:2> 'int ()' Function 0x14002b180 'event_set' 'int ()'     | |-UnaryOperator 0x14002b2b8 <col:12, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x14002b290 <col:13, col:18> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14002b258 <col:13> 'struct tty *' lvalue ParmVar 0x14000e248 'tty' 'struct tty *'     | |-RecoveryExpr 0x14002b308 <col:28, col:33> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14002b2d0 <col:28> 'struct tty *' lvalue ParmVar 0x14000e248 'tty' 'struct tty *'     | |-BinaryOperator 0x14002b440 <col:37, col:48> '<dependent type>' contains-errors '|'     | | |-RecoveryExpr 0x14002b400 <col:37> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14002b420 <col:48> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x14002b460 <line:13:6> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x14002b398 <col:25> 'struct tty *' lvalue ParmVar 0x14000e248 'tty' 'struct tty *'     |-BinaryOperator 0x14002b660 <line:14:2, col:25> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14002b500 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14002b4c8 <col:2> 'struct tty *' lvalue ParmVar 0x14000e248 'tty' 'struct tty *'     | `-CallExpr 0x14002b640 <col:12, col:25> 'int'     |   `-ImplicitCastExpr 0x14002b628 <col:12> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x14002b608 <col:12> 'int ()' Function 0x14002b550 'evbuffer_new' 'int ()'     |-BinaryOperator 0x148123258 <line:17:2, col:26> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14002b7d0 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14002b798 <col:2> 'struct tty *' lvalue ParmVar 0x14000e248 'tty' 'struct tty *'     | `-CallExpr 0x148123238 <col:13, col:26> 'int'     |   `-ImplicitCastExpr 0x148123220 <col:13> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x148123200 <col:13> 'int ()' Function 0x14002b550 'evbuffer_new' 'int ()'     |-CallExpr 0x148123548 <line:21:2, col:19> 'int'     | |-ImplicitCastExpr 0x148123530 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1481234f0 <col:2> 'int ()' Function 0x148123438 'tty_start_tty' 'int ()'     | `-ImplicitCastExpr 0x148123570 <col:16> 'struct tty *' <LValueToRValue>     |   `-DeclRefExpr 0x148123510 <col:16> 'struct tty *' lvalue ParmVar 0x14000e248 'tty' 'struct tty *'     |-CallExpr 0x1481236c0 <line:23:2, col:20> 'int'     | |-ImplicitCastExpr 0x1481236a8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x148123668 <col:2> 'int ()' Function 0x1481235b0 'tty_keys_build' 'int ()'     | `-ImplicitCastExpr 0x1481236e8 <col:17> 'struct tty *' <LValueToRValue>     |   `-DeclRefExpr 0x148123688 <col:17> 'struct tty *' lvalue ParmVar 0x14000e248 'tty' 'struct tty *'     `-ReturnStmt 0x148123740 <line:25:2, col:11>       `-ParenExpr 0x148123720 <col:9, col:11> 'int'         `-IntegerLiteral 0x148123700 <col:10> 'int' 0 ","20197":"`-FunctionDecl 0x151128f58  line:1:1 invalid gdm_session_settings_load 'int (int *, const char *, int **)'   |-ParmVarDecl 0x151128d28 <col:28, col:49> col:49 invalid settings 'int *'   |-ParmVarDecl 0x151128da8 <line:2:28, col:49> col:49 used home_directory 'const char *'   |-ParmVarDecl 0x151128e60 <line:3:28, col:49> col:49 referenced invalid error 'int **'   `-CompoundStmt 0x152009a40 <line:4:1, line:76:1>     |-BinaryOperator 0x1511290d0 <line:6:9, col:19> '<dependent type>' contains-errors '*'     | |-RecoveryExpr 0x151129050 <col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x151129030 <col:9> 'int **' lvalue ParmVar 0x151128e60 'error' 'int **'     | `-RecoveryExpr 0x1511290b0 <col:19> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x151129170 <line:8:9, col:31>     | `-VarDecl 0x151129108 <col:9, col:19> col:19 used session_name 'char *'     |-DeclStmt 0x151129208 <line:9:9, col:32>     | `-VarDecl 0x1511291a0 <col:9, col:19> col:19 used language_name 'char *'     |-DeclStmt 0x1511292a0 <line:10:9, col:30>     | `-VarDecl 0x151129238 <col:9, col:19> col:19 used layout_name 'char *'     |-DeclStmt 0x151129338 <line:11:9, col:27>     | `-VarDecl 0x1511292d0 <col:9, col:19> col:19 used filename 'char *'     |-CallExpr 0x1511425d8 <line:13:9, col:54> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1511424b8 <col:9> 'int ()' Function 0x151142400 'g_return_val_if_fail' 'int ()'     | |-BinaryOperator 0x151142598 <col:31, col:43> 'int' contains-errors '!='     | | |-RecoveryExpr 0x1511424d8 <col:31> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x151142578 <col:43> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1511425b8 <col:49> '<dependent type>' contains-errors lvalue     |-CallExpr 0x151142728 <line:14:9, col:60> '<dependent type>' contains-errors     | |-DeclRefExpr 0x151142608 <col:9> 'int ()' Function 0x151142400 'g_return_val_if_fail' 'int ()'     | |-BinaryOperator 0x1511426e8 <col:31, col:49> 'int' contains-errors '!='     | | |-DeclRefExpr 0x151142628 <col:31> 'const char *' lvalue ParmVar 0x151128da8 'home_directory' 'const char *'     | | `-RecoveryExpr 0x1511426c8 <col:49> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x151142708 <col:55> '<dependent type>' contains-errors lvalue     |-CallExpr 0x151142940 <line:15:9, col:80> '<dependent type>' contains-errors     | |-DeclRefExpr 0x151142758 <col:9> 'int ()' Function 0x151142400 'g_return_val_if_fail' 'int ()'     | |-UnaryOperator 0x1511428c0 <col:31, col:72> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x151142898 <col:32, col:72> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x151142858 <col:32> 'int ()' Function 0x1511427a0 'gdm_session_settings_is_loaded' 'int ()'     | |   `-RecoveryExpr 0x151142878 <col:64> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x151142920 <col:75> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x151142bd8 <line:16:9, col:65> 'char *' contains-errors '='     | |-DeclRefExpr 0x151142970 <col:9> 'char *' lvalue Var 0x1511292d0 'filename' 'char *'     | `-CallExpr 0x151142ba0 <col:20, col:65> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x151142a70 <col:20> 'int ()' Function 0x1511429b8 'g_build_filename' 'int ()'     |   |-DeclRefExpr 0x151142a90 <col:38> 'const char *' lvalue ParmVar 0x151128da8 'home_directory' 'const char *'     |   |-StringLiteral 0x151142af0 <col:54> 'char[4]' lvalue \"STR\"     |   `-RecoveryExpr 0x151142b80 <col:61> '<dependent type>' contains-errors lvalue     |-IfStmt 0x151143058 <line:22:9, line:26:9>     | |-RecoveryExpr 0x151142e98 <line:22:13, line:23:69> '_Bool' contains-errors     | `-CompoundStmt 0x151143040 <col:72, line:26:9>     |   `-GotoStmt 0x151143028 <line:25:17, col:22> 'out' 0x151142fd8     |-IfStmt 0x152009040 <line:31:9, line:40:9> has_else     | |-RecoveryExpr 0x1511431d8 <line:31:13, col:29> '_Bool' contains-errors     | |-CompoundStmt 0x152008d50 <col:35, line:34:9>     | | |-CallExpr 0x151143338 <line:32:17, col:78> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x1511432d8 <col:17> 'int ()' Function 0x151143220 'gdm_session_settings_set_session_name' 'int ()'     | | | |-RecoveryExpr 0x1511432f8 <col:56> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x151143318 <col:66> 'char *' lvalue Var 0x151129108 'session_name' 'char *'     | | `-CallExpr 0x152008d10 <line:33:17, col:37> 'int'     | |   |-ImplicitCastExpr 0x152008cf8 <col:17> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x152008cb8 <col:17> 'int ()' Function 0x152008c00 'g_free' 'int ()'     | |   `-ImplicitCastExpr 0x152008d38 <col:25> 'char *' <LValueToRValue>     | |     `-DeclRefExpr 0x152008cd8 <col:25> 'char *' lvalue Var 0x151129108 'session_name' 'char *'     | `-IfStmt 0x152009010 <line:34:16, line:40:9> has_else     |   |-RecoveryExpr 0x152008e70 <line:34:20, col:97> '_Bool' contains-errors     |   |-CompoundStmt 0x152008f90 <col:100, line:37:9>     |   `-CompoundStmt 0x152008ff8 <col:16, line:40:9>     |     `-GotoStmt 0x152008fe0 <line:39:17, col:22> 'out' 0x151142fd8     |-IfStmt 0x152009448 <line:45:9, line:54:9> has_else     | |-RecoveryExpr 0x1520090f0 <line:45:13, col:30> '_Bool' contains-errors     | |-CompoundStmt 0x152009318 <col:36, line:48:9>     | | |-CallExpr 0x152009250 <line:46:17, col:80> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x1520091f0 <col:17> 'int ()' Function 0x152009138 'gdm_session_settings_set_language_name' 'int ()'     | | | |-RecoveryExpr 0x152009210 <col:57> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x152009230 <col:67> 'char *' lvalue Var 0x1511291a0 'language_name' 'char *'     | | `-CallExpr 0x1520092d8 <line:47:17, col:38> 'int'     | |   |-ImplicitCastExpr 0x1520092c0 <col:17> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x152009280 <col:17> 'int ()' Function 0x152008c00 'g_free' 'int ()'     | |   `-ImplicitCastExpr 0x152009300 <col:25> 'char *' <LValueToRValue>     | |     `-DeclRefExpr 0x1520092a0 <col:25> 'char *' lvalue Var 0x1511291a0 'language_name' 'char *'     | `-IfStmt 0x152009418 <line:48:16, line:54:9> has_else     |   |-RecoveryExpr 0x152009358 <line:48:20, col:97> '_Bool' contains-errors     |   |-CompoundStmt 0x152009398 <col:100, line:51:9>     |   `-CompoundStmt 0x152009400 <col:16, line:54:9>     |     `-GotoStmt 0x1520093e8 <line:53:17, col:22> 'out' 0x151142fd8     |-IfStmt 0x152009850 <line:59:9, line:68:9> has_else     | |-RecoveryExpr 0x1520094f8 <line:59:13, col:28> '_Bool' contains-errors     | |-CompoundStmt 0x152009720 <col:34, line:62:9>     | | |-CallExpr 0x152009658 <line:60:17, col:76> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x1520095f8 <col:17> 'int ()' Function 0x152009540 'gdm_session_settings_set_layout_name' 'int ()'     | | | |-RecoveryExpr 0x152009618 <col:55> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x152009638 <col:65> 'char *' lvalue Var 0x151129238 'layout_name' 'char *'     | | `-CallExpr 0x1520096e0 <line:61:17, col:36> 'int'     | |   |-ImplicitCastExpr 0x1520096c8 <col:17> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x152009688 <col:17> 'int ()' Function 0x152008c00 'g_free' 'int ()'     | |   `-ImplicitCastExpr 0x152009708 <col:25> 'char *' <LValueToRValue>     | |     `-DeclRefExpr 0x1520096a8 <col:25> 'char *' lvalue Var 0x151129238 'layout_name' 'char *'     | `-IfStmt 0x152009820 <line:62:16, line:68:9> has_else     |   |-RecoveryExpr 0x152009760 <line:62:20, col:97> '_Bool' contains-errors     |   |-CompoundStmt 0x1520097a0 <col:100, line:65:9>     |   `-CompoundStmt 0x152009808 <col:16, line:68:9>     |     `-GotoStmt 0x1520097f0 <line:67:17, col:22> 'out' 0x151142fd8     |-LabelStmt 0x152009988 <line:71:1, col:4> 'out'     | `-NullStmt 0x152009980 <col:4>     `-CallExpr 0x152009a00 <line:73:9, col:25> 'int'       |-ImplicitCastExpr 0x1520099e8 <col:9> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x1520099a8 <col:9> 'int ()' Function 0x152008c00 'g_free' 'int ()'       `-ImplicitCastExpr 0x152009a28 <col:17> 'char *' <LValueToRValue>         `-DeclRefExpr 0x1520099c8 <col:17> 'char *' lvalue Var 0x1511292d0 'filename' 'char *' ","20806":"`-FunctionDecl 0x152026600  line:1:6 ping_close 'void (struct sock *, long)'   |-ParmVarDecl 0x15200e248 <col:17, col:30> col:30 used sk 'struct sock *'   |-ParmVarDecl 0x15200e2c8 <col:34, col:39> col:39 timeout 'long'   `-CompoundStmt 0x152026de0 <line:2:1, line:8:1>     |-CallExpr 0x152026b18 <line:3:2, line:4:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x152026830 <line:3:2> 'int ()' Function 0x152026778 'pr_debug' 'int ()'     | |-StringLiteral 0x152026890 <col:11> 'char[4]' lvalue \"STR\"     | |-CallExpr 0x152026a18 <line:4:4, col:14> 'int'     | | |-ImplicitCastExpr 0x152026a00 <col:4> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x152026990 <col:4> 'int ()' Function 0x1520268d8 'inet_sk' 'int ()'     | | `-ImplicitCastExpr 0x152026a40 <col:12> 'struct sock *' <LValueToRValue>     | |   `-DeclRefExpr 0x1520269b0 <col:12> 'struct sock *' lvalue ParmVar 0x15200e248 'sk' 'struct sock *'     | `-RecoveryExpr 0x152026af0 <col:17, col:30> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x152026ab0 <col:17, col:27> 'int'     |     |-ImplicitCastExpr 0x152026a98 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x152026a58 <col:17> 'int ()' Function 0x1520268d8 'inet_sk' 'int ()'     |     `-ImplicitCastExpr 0x152026ad8 <col:25> 'struct sock *' <LValueToRValue>     |       `-DeclRefExpr 0x152026a78 <col:25> 'struct sock *' lvalue ParmVar 0x15200e248 'sk' 'struct sock *'     |-CallExpr 0x152026c38 <line:5:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x152026b50 <col:2> 'int ()' Function 0x152026778 'pr_debug' 'int ()'     | |-StringLiteral 0x152026b70 <col:11> 'char[4]' lvalue \"STR\"     | `-CXXDependentScopeMemberExpr 0x152026bf0 <col:18, col:32> '<dependent type>' contains-errors lvalue .counter     |   `-RecoveryExpr 0x152026bc8 <col:18, col:22> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x152026b90 <col:18> 'struct sock *' lvalue ParmVar 0x15200e248 'sk' 'struct sock *'     `-CallExpr 0x152026da0 <line:7:2, col:22> 'int'       |-ImplicitCastExpr 0x152026d88 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x152026d48 <col:2> 'int ()' Function 0x152026c90 'sk_common_release' 'int ()'       `-ImplicitCastExpr 0x152026dc8 <col:20> 'struct sock *' <LValueToRValue>         `-DeclRefExpr 0x152026d68 <col:20> 'struct sock *' lvalue ParmVar 0x15200e248 'sk' 'struct sock *' ","20657":"`-FunctionDecl 0x15a928df8  line:1:1 invalid autoar_extractor_step_extract 'int (int *)'   |-ParmVarDecl 0x15a928d28 <col:32, col:49> col:49 referenced invalid self 'int *'   `-CompoundStmt 0x15a945720 <col:55, line:105:1>     |-DeclStmt 0x15a929098 <line:4:3, col:20>     | |-RecordDecl 0x15a928ea8 <col:3, col:10> col:10 struct archive     | `-VarDecl 0x15a929018 <col:3, col:19> col:19 used a 'struct archive *'     |-DeclStmt 0x15a929298 <line:5:3, col:30>     | |-RecordDecl 0x15a9290b0 <col:3, col:10> col:10 struct archive_entry     | `-VarDecl 0x15a929218 <col:3, col:25> col:25 used entry 'struct archive_entry *'     |-DeclStmt 0x15a929330 <line:7:3, col:8>     | `-VarDecl 0x15a9292c8 <col:3, col:7> col:7 used r 'int'     |-CallExpr 0x15a942588 <line:9:3, col:17> 'int'     | |-ImplicitCastExpr 0x15a942570 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x15a9424b8 <col:3> 'int ()' Function 0x15a942400 'g_debug' 'int ()'     | `-ImplicitCastExpr 0x15a9425b0 <col:12> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x15a942520 <col:12> 'char[4]' lvalue \"STR\"     |-BinaryOperator 0x15a942840 <line:11:3, col:68> 'int' contains-errors '='     | |-DeclRefExpr 0x15a9425c8 <col:3> 'int' lvalue Var 0x15a9292c8 'r' 'int'     | `-CallExpr 0x15a942808 <col:7, col:68> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15a9426c8 <col:7> 'int ()' Function 0x15a942610 'libarchive_create_read_object' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x15a942708 <col:38, col:44> '<dependent type>' contains-errors lvalue ->use_raw_format     |   | `-RecoveryExpr 0x15a9426e8 <col:38> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x15a942750 <col:60> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x15a9427f0 <col:66, col:67> 'struct archive **' prefix '&' cannot overflow     |     `-DeclRefExpr 0x15a942770 <col:67> 'struct archive *' lvalue Var 0x15a929018 'a' 'struct archive *'     |-IfStmt 0x15a942e28 <line:12:3, line:19:3>     | |-BinaryOperator 0x15a9428d8 <line:12:7, col:12> 'int' contains-errors '!='     | | |-DeclRefExpr 0x15a942860 <col:7> 'int' lvalue Var 0x15a9292c8 'r' 'int'     | | `-RecoveryExpr 0x15a9428b8 <col:12> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x15a942e00 <col:24, line:19:3>     |   |-IfStmt 0x15a942c58 <line:13:5, line:16:5>     |   | |-BinaryOperator 0x15a9429b8 <line:13:9, col:24> 'int' contains-errors '=='     |   | | |-CXXDependentScopeMemberExpr 0x15a942918 <col:9, col:15> '<dependent type>' contains-errors lvalue ->error     |   | | | `-RecoveryExpr 0x15a9428f8 <col:9> '<dependent type>' contains-errors lvalue     |   | | `-RecoveryExpr 0x15a942998 <col:24> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x15a942c40 <col:30, line:16:5>     |   |   `-BinaryOperator 0x15a942c20 <line:14:7, line:15:62> '<dependent type>' contains-errors '='     |   |     |-CXXDependentScopeMemberExpr 0x15a942a20 <line:14:7, col:13> '<dependent type>' contains-errors lvalue ->error     |   |     | `-RecoveryExpr 0x15a9429f8 <col:7> '<dependent type>' contains-errors lvalue     |   |     |   `-DeclRefExpr 0x15a9429d8 <col:7> 'int *' lvalue ParmVar 0x15a928d28 'self' 'int *'     |   |     `-CallExpr 0x15a942bf0 <line:15:9, col:62> '<dependent type>' contains-errors     |   |       |-DeclRefExpr 0x15a942b48 <col:9> 'int ()' Function 0x15a942a90 'autoar_common_g_error_new_a' 'int ()'     |   |       |-DeclRefExpr 0x15a942b68 <col:38> 'struct archive *' lvalue Var 0x15a929018 'a' 'struct archive *'     |   |       `-CXXDependentScopeMemberExpr 0x15a942ba8 <col:41, col:47> '<dependent type>' contains-errors lvalue ->source_basename     |   |         `-RecoveryExpr 0x15a942b88 <col:41> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x15a942db0 <line:17:5, col:25> 'int'     |   | |-ImplicitCastExpr 0x15a942d98 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x15a942d58 <col:5> 'int ()' Function 0x15a942ca0 'archive_read_free' 'int ()'     |   | `-ImplicitCastExpr 0x15a942dd8 <col:24> 'struct archive *' <LValueToRValue>     |   |   `-DeclRefExpr 0x15a942d78 <col:24> 'struct archive *' lvalue Var 0x15a929018 'a' 'struct archive *'     |   `-ReturnStmt 0x15a942df0 <line:18:5>     |-WhileStmt 0x15a9452f0 <line:21:3, line:93:3>     | |-BinaryOperator 0x15a943260 <line:21:10, col:56> 'int' contains-errors '=='     | | |-ParenExpr 0x15a943220 <col:10, col:51> 'int'     | | | `-BinaryOperator 0x15a943200 <col:11, col:50> 'int' '='     | | |   |-DeclRefExpr 0x15a942e48 <col:11> 'int' lvalue Var 0x15a9292c8 'r' 'int'     | | |   `-CallExpr 0x15a9431b8 <col:15, col:50> 'int'     | | |     |-ImplicitCastExpr 0x15a9431a0 <col:15> 'int (*)()' <FunctionToPointerDecay>     | | |     | `-DeclRefExpr 0x15a942f48 <col:15> 'int ()' Function 0x15a942e90 'archive_read_next_header' 'int ()'     | | |     |-ImplicitCastExpr 0x15a9431e8 <col:41> 'struct archive *' <LValueToRValue>     | | |     | `-DeclRefExpr 0x15a942f68 <col:41> 'struct archive *' lvalue Var 0x15a929018 'a' 'struct archive *'     | | |     `-UnaryOperator 0x15a943010 <col:44, col:45> 'struct archive_entry **' prefix '&' cannot overflow     | | |       `-DeclRefExpr 0x15a942f88 <col:45> 'struct archive_entry *' lvalue Var 0x15a929218 'entry' 'struct archive_entry *'     | | `-RecoveryExpr 0x15a943240 <col:56> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x15a945278 <col:68, line:93:3>     |   |-DeclStmt 0x15a943300 <line:22:5, col:25>     |   | `-VarDecl 0x15a943298 <col:5, col:17> col:17 used pathname 'const char *'     |   |-DeclStmt 0x15a943398 <line:23:5, col:25>     |   | `-VarDecl 0x15a943330 <col:5, col:17> col:17 used hardlink 'const char *'     |   |-CallExpr 0x15a943938 <line:24:5, col:21> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x15a9438b8 <col:5> 'int ()' Function 0x15a943800 'g_autoptr' 'int ()'     |   | `-RecoveryExpr 0x15a943918 <col:16> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x15a9439f8 <line:25:5, col:21> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x15a943978 <col:5> 'int ()' Function 0x15a943800 'g_autoptr' 'int ()'     |   | `-RecoveryExpr 0x15a9439d8 <col:16> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x15a943c90 <line:29:5, line:32:5>     |   | |-CallExpr 0x15a943ba0 <line:29:9, col:54> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x15a943b18 <col:9> 'int ()' Function 0x15a943a60 'g_cancellable_is_cancelled' 'int ()'     |   | | `-CXXDependentScopeMemberExpr 0x15a943b58 <col:37, col:43> '<dependent type>' contains-errors lvalue ->cancellable     |   | |   `-RecoveryExpr 0x15a943b38 <col:37> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x15a943c70 <col:57, line:32:5>     |   |   |-CallExpr 0x15a943c20 <line:30:7, col:27> 'int'     |   |   | |-ImplicitCastExpr 0x15a943c08 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x15a943bc8 <col:7> 'int ()' Function 0x15a942ca0 'archive_read_free' 'int ()'     |   |   | `-ImplicitCastExpr 0x15a943c48 <col:26> 'struct archive *' <LValueToRValue>     |   |   |   `-DeclRefExpr 0x15a943be8 <col:26> 'struct archive *' lvalue Var 0x15a929018 'a' 'struct archive *'     |   |   `-ReturnStmt 0x15a943c60 <line:31:7>     |   |-BinaryOperator 0x15a943e60 <line:34:5, col:45> 'const char *' '='     |   | |-DeclRefExpr 0x15a943cb0 <col:5> 'const char *' lvalue Var 0x15a943298 'pathname' 'const char *'     |   | `-ImplicitCastExpr 0x15a943e48 <col:16, col:45> 'const char *' <IntegralToPointer>     |   |   `-CallExpr 0x15a943e08 <col:16, col:45> 'int'     |   |     |-ImplicitCastExpr 0x15a943df0 <col:16> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x15a943db0 <col:16> 'int ()' Function 0x15a943cf8 'archive_entry_pathname' 'int ()'     |   |     `-ImplicitCastExpr 0x15a943e30 <col:40> 'struct archive_entry *' <LValueToRValue>     |   |       `-DeclRefExpr 0x15a943dd0 <col:40> 'struct archive_entry *' lvalue Var 0x15a929218 'entry' 'struct archive_entry *'     |   |-BinaryOperator 0x15a944030 <line:35:5, col:45> 'const char *' '='     |   | |-DeclRefExpr 0x15a943e80 <col:5> 'const char *' lvalue Var 0x15a943330 'hardlink' 'const char *'     |   | `-ImplicitCastExpr 0x15a944018 <col:16, col:45> 'const char *' <IntegralToPointer>     |   |   `-CallExpr 0x15a943fd8 <col:16, col:45> 'int'     |   |     |-ImplicitCastExpr 0x15a943fc0 <col:16> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x15a943f80 <col:16> 'int ()' Function 0x15a943ec8 'archive_entry_hardlink' 'int ()'     |   |     `-ImplicitCastExpr 0x15a944000 <col:40> 'struct archive_entry *' <LValueToRValue>     |   |       `-DeclRefExpr 0x15a943fa0 <col:40> 'struct archive_entry *' lvalue Var 0x15a929218 'entry' 'struct archive_entry *'     |   |-IfStmt 0x15a9442a0 <line:40:5, line:43:5>     |   | |-RecoveryExpr 0x15a9441e0 <line:40:9, col:21> '_Bool' contains-errors     |   | `-CompoundStmt 0x15a944290 <col:27, line:43:5>     |   |-WhileStmt 0x15a944d38 <line:48:5, line:77:5>     |   | |-RecoveryExpr 0x15a944538 <line:48:12> '_Bool' contains-errors     |   | `-CompoundStmt 0x15a944d18 <col:27, line:77:5>     |   |   |-SwitchStmt 0x15a944698 <line:55:7, line:69:7>     |   |   | |-RecoveryExpr 0x15a944678 <line:55:15> 'int' contains-errors     |   |   | `-CompoundStmt 0x15a944bc0 <col:23, line:69:7>     |   |   |   |-BreakStmt 0x15a9446c0 <line:57:11>     |   |   |   |-BreakStmt 0x15a9448d8 <line:62:11>     |   |   |   |-CallExpr 0x15a944a18 <line:64:11, col:36> 'int'     |   |   |   | |-ImplicitCastExpr 0x15a944a00 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   |   |   | | `-DeclRefExpr 0x15a9449c0 <col:11> 'int ()' Function 0x15a944908 'archive_read_data_skip' 'int ()'     |   |   |   | `-ImplicitCastExpr 0x15a944a40 <col:35> 'struct archive *' <LValueToRValue>     |   |   |   |   `-DeclRefExpr 0x15a9449e0 <col:35> 'struct archive *' lvalue Var 0x15a929018 'a' 'struct archive *'     |   |   |   |-BreakStmt 0x15a944a58 <line:65:11>     |   |   |   |-DefaultStmt 0x15a944b98 <line:66:9, line:67:33>     |   |   |   | `-CallExpr 0x15a944b78 <col:11, col:33> 'int'     |   |   |   |   `-ImplicitCastExpr 0x15a944b60 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   |   |   |     `-DeclRefExpr 0x15a944b40 <col:11> 'int ()' Function 0x15a944a88 'g_assert_not_reached' 'int ()'     |   |   |   `-BreakStmt 0x15a944bb8 <line:68:11>     |   |   `-IfStmt 0x15a944c40 <line:71:7, line:73:7>     |   |     |-RecoveryExpr 0x15a944c00 <line:71:11, col:21> '_Bool' contains-errors     |   |     `-CompoundStmt 0x15a944c28 <col:57, line:73:7>     |   |       `-BreakStmt 0x15a944c20 <line:72:9>     |   |-IfStmt 0x15a944d98 <line:79:5, line:81:5>     |   | |-RecoveryExpr 0x15a944d58 <line:79:9, col:36> '_Bool' contains-errors     |   | `-CompoundStmt 0x15a944d80 <col:58, line:81:5>     |   |   `-ContinueStmt 0x15a944d78 <line:80:7>     |   |-IfStmt 0x15a945068 <line:86:5, line:89:5>     |   | |-RecoveryExpr 0x15a944f80 <line:86:9, col:24> '_Bool' contains-errors     |   | `-CompoundStmt 0x15a945048 <col:30, line:89:5>     |   |   |-CallExpr 0x15a944ff8 <line:87:7, col:27> 'int'     |   |   | |-ImplicitCastExpr 0x15a944fe0 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x15a944fa0 <col:7> 'int ()' Function 0x15a942ca0 'archive_read_free' 'int ()'     |   |   | `-ImplicitCastExpr 0x15a945020 <col:26> 'struct archive *' <LValueToRValue>     |   |   |   `-DeclRefExpr 0x15a944fc0 <col:26> 'struct archive *' lvalue Var 0x15a929018 'a' 'struct archive *'     |   |   `-ReturnStmt 0x15a945038 <line:88:7>     |   |-UnaryOperator 0x15a945118 <line:91:5, col:26> '<dependent type>' contains-errors postfix '++' cannot overflow     |   | `-CXXDependentScopeMemberExpr 0x15a9450d0 <col:5, col:11> '<dependent type>' contains-errors lvalue ->completed_files     |   |   `-RecoveryExpr 0x15a9450a8 <col:5> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x15a945088 <col:5> 'int *' lvalue ParmVar 0x15a928d28 'self' 'int *'     |   `-CallExpr 0x15a945250 <line:92:5, col:43> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x15a945210 <col:5> 'int ()' Function 0x15a945158 'autoar_extractor_signal_progress' 'int ()'     |     `-RecoveryExpr 0x15a945230 <col:39> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15a945668 <line:95:3, line:102:3>     | |-RecoveryExpr 0x15a945330 <line:95:7, col:12> '_Bool' contains-errors     | `-CompoundStmt 0x15a945640 <col:25, line:102:3>     |   |-IfStmt 0x15a945578 <line:96:5, line:99:5>     |   | |-RecoveryExpr 0x15a9453b8 <line:96:9, col:24> '_Bool' contains-errors     |   | `-CompoundStmt 0x15a945560 <col:30, line:99:5>     |   |   `-BinaryOperator 0x15a945540 <line:97:7, line:98:62> '<dependent type>' contains-errors '='     |   |     |-CXXDependentScopeMemberExpr 0x15a945420 <line:97:7, col:13> '<dependent type>' contains-errors lvalue ->error     |   |     | `-RecoveryExpr 0x15a9453f8 <col:7> '<dependent type>' contains-errors lvalue     |   |     |   `-DeclRefExpr 0x15a9453d8 <col:7> 'int *' lvalue ParmVar 0x15a928d28 'self' 'int *'     |   |     `-CallExpr 0x15a945510 <line:98:9, col:62> '<dependent type>' contains-errors     |   |       |-DeclRefExpr 0x15a945468 <col:9> 'int ()' Function 0x15a942a90 'autoar_common_g_error_new_a' 'int ()'     |   |       |-DeclRefExpr 0x15a945488 <col:38> 'struct archive *' lvalue Var 0x15a929018 'a' 'struct archive *'     |   |       `-CXXDependentScopeMemberExpr 0x15a9454c8 <col:41, col:47> '<dependent type>' contains-errors lvalue ->source_basename     |   |         `-RecoveryExpr 0x15a9454a8 <col:41> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x15a9455f0 <line:100:5, col:25> 'int'     |   | |-ImplicitCastExpr 0x15a9455d8 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x15a945598 <col:5> 'int ()' Function 0x15a942ca0 'archive_read_free' 'int ()'     |   | `-ImplicitCastExpr 0x15a945618 <col:24> 'struct archive *' <LValueToRValue>     |   |   `-DeclRefExpr 0x15a9455b8 <col:24> 'struct archive *' lvalue Var 0x15a929018 'a' 'struct archive *'     |   `-ReturnStmt 0x15a945630 <line:101:5>     `-CallExpr 0x15a9456e0 <line:104:3, col:23> 'int'       |-ImplicitCastExpr 0x15a9456c8 <col:3> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x15a945688 <col:3> 'int ()' Function 0x15a942ca0 'archive_read_free' 'int ()'       `-ImplicitCastExpr 0x15a945708 <col:22> 'struct archive *' <LValueToRValue>         `-DeclRefExpr 0x15a9456a8 <col:22> 'struct archive *' lvalue Var 0x15a929018 'a' 'struct archive *' ","20361":"`-FunctionDecl 0x15a1282e8  line:1:13 invalid ntlm_av_pair_check_data 'int (const int *, int, int)' static   |-ParmVarDecl 0x15a1280f0 <col:37, col:57> col:57 invalid pAvPair 'const int *'   |-ParmVarDecl 0x15a128170 <col:66, col:73> col:73 invalid cbAvPair 'int'   |-ParmVarDecl 0x15a1281f0 <col:83, col:90> col:90 invalid size 'int'   `-CompoundStmt 0x15a141978 <line:2:1, line:9:1>     |-UnaryExprOrTypeTraitExpr 0x15a128418 <line:3:2, col:9> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x15a1283f8 <col:9> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15a128578 <line:4:2, line:5:10>     | |-RecoveryExpr 0x15a128510 <line:4:6, col:52> '_Bool' contains-errors     | `-ReturnStmt 0x15a128568 <line:5:3, col:10>     |   `-RecoveryExpr 0x15a128548 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15a1418b0 <line:6:2, line:7:10>     | |-UnaryOperator 0x15a141850 <line:6:6, col:62> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x15a141818 <col:7, col:62> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x15a1286f0 <col:7> 'int ()' Function 0x15a128638 'ntlm_av_pair_get_next_offset' 'int ()'     | |   |-RecoveryExpr 0x15a128710 <col:36> '<dependent type>' contains-errors lvalue     | |   |-RecoveryExpr 0x15a128730 <col:45> '<dependent type>' contains-errors lvalue     | |   `-UnaryOperator 0x15a141800 <col:55, col:56> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-RecoveryExpr 0x15a1287d0 <col:56> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x15a1418a0 <line:7:3, col:10>     |   `-RecoveryExpr 0x15a141880 <col:10> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x15a141968 <line:8:2, col:21>       `-BinaryOperator 0x15a141948 <col:9, col:21> 'int' contains-errors '>='         |-RecoveryExpr 0x15a1418d0 <col:9> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x15a141928 <col:21> '<dependent type>' contains-errors lvalue ","20576":"`-FunctionDecl 0x1510b0600  line:1:12 io_epoll_ctl 'int (struct io_kiocb *, unsigned int)' static   |-ParmVarDecl 0x15109aa48 <col:25, col:42> col:42 req 'struct io_kiocb *'   |-ParmVarDecl 0x15109aac8 <col:47, col:60> col:60 issue_flags 'unsigned int'   `-CompoundStmt 0x1510b07c0 <line:2:1, line:19:1>     `-ReturnStmt 0x1510b07b0 <line:17:2, col:10>       `-UnaryOperator 0x1510b0798 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow         `-ImplicitCastExpr 0x1510b0780 <col:10> '<dependent type>' contains-errors <LValueToRValue>           `-RecoveryExpr 0x1510b0760 <col:10> '<dependent type>' contains-errors lvalue ","20535":"`-FunctionDecl 0x14a027b68  col:9 implicit used sprintf 'int (char *, const char *, ...)' extern   |-ParmVarDecl 0x14a027c68 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x14a027cd0 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x14a027c10 <<invalid sloc>> Implicit 906   `-FormatAttr 0x14a027d48 <col:9> Implicit printf 2 3 ","20941":"`-FunctionDecl 0x14880df18  line:1:1 invalid nautilus_file_get_date 'int (int *, int, int *)'   |-ParmVarDecl 0x14880dd28 <col:25, col:39> col:39 invalid file 'int *'   |-ParmVarDecl 0x14880dda8 <line:2:4, col:21> col:21 invalid date_type 'int'   |-ParmVarDecl 0x14880de28 <line:3:4, col:12> col:12 invalid date 'int *'   `-CompoundStmt 0x149008a68 <line:4:1, line:23:1>     |-IfStmt 0x14880e118 <line:5:2, line:7:2>     | |-BinaryOperator 0x14880e050 <line:5:6, col:14> 'int' contains-errors '!='     | | |-RecoveryExpr 0x14880dfd8 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14880e030 <col:14> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14880e100 <col:20, line:7:2>     |   `-BinaryOperator 0x14880e0e0 <line:6:3, col:11> '<dependent type>' contains-errors '='     |     |-UnaryOperator 0x14880e0a8 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow     |     | `-ImplicitCastExpr 0x14880e090 <col:4> '<dependent type>' contains-errors <LValueToRValue>     |     |   `-RecoveryExpr 0x14880e070 <col:4> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x14880e0c0 <col:11> 'int' 0     |-CallExpr 0x149008440 <line:9:2, line:12:71> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14880e290 <line:9:2> 'int ()' Function 0x14880e1d8 'g_return_val_if_fail' 'int ()'     | |-BinaryOperator 0x149008400 <col:24, line:12:26> 'int' contains-errors '||'     | | |-BinaryOperator 0x1490083a0 <line:9:24, line:11:26> 'int' contains-errors '||'     | | | |-BinaryOperator 0x149008340 <line:9:24, line:10:26> 'int' contains-errors '||'     | | | | |-BinaryOperator 0x1490082e0 <line:9:24, col:37> 'int' contains-errors '=='     | | | | | |-RecoveryExpr 0x14880e2b0 <col:24> '<dependent type>' contains-errors lvalue     | | | | | `-RecoveryExpr 0x1490082c0 <col:37> '<dependent type>' contains-errors lvalue     | | | | `-BinaryOperator 0x149008320 <line:10:13, col:26> 'int' contains-errors '=='     | | | |   |-RecoveryExpr 0x14880e308 <col:13> '<dependent type>' contains-errors lvalue     | | | |   `-RecoveryExpr 0x149008300 <col:26> '<dependent type>' contains-errors lvalue     | | | `-BinaryOperator 0x149008380 <line:11:13, col:26> 'int' contains-errors '=='     | | |   |-RecoveryExpr 0x14880e380 <col:13> '<dependent type>' contains-errors lvalue     | | |   `-RecoveryExpr 0x149008360 <col:26> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x1490083e0 <line:12:13, col:26> 'int' contains-errors '=='     | |   |-RecoveryExpr 0x149008200 <col:13> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x1490083c0 <col:26> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x149008420 <col:66> '<dependent type>' contains-errors lvalue     |-IfStmt 0x149008568 <line:14:2, line:16:2>     | |-BinaryOperator 0x1490084e8 <line:14:6, col:14> 'int' contains-errors '=='     | | |-RecoveryExpr 0x149008470 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1490084c8 <col:14> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x149008550 <col:20, line:16:2>     |   `-ReturnStmt 0x149008540 <line:15:3, col:10>     |     `-RecoveryExpr 0x149008520 <col:10> '<dependent type>' contains-errors lvalue     |-CallExpr 0x149008758 <line:18:2, col:54> '<dependent type>' contains-errors     | |-DeclRefExpr 0x149008588 <col:2> 'int ()' Function 0x14880e1d8 'g_return_val_if_fail' 'int ()'     | |-CallExpr 0x1490086c8 <col:24, col:46> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x149008688 <col:24> 'int ()' Function 0x1490085d0 'NAUTILUS_IS_FILE' 'int ()'     | | `-RecoveryExpr 0x1490086a8 <col:42> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x149008738 <col:49> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x149008a58 <line:20:2, line:22:37>       `-CallExpr 0x149008a18 <line:20:9, line:22:37> '<dependent type>' contains-errors         |-DeclRefExpr 0x149008868 <line:20:9> 'int ()' Function 0x1490087b0 'EEL_CALL_METHOD_WITH_RETURN_VALUE' 'int ()'         |-RecoveryExpr 0x1490089d8 <line:21:4> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x1490088a0 <col:25> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x1490089f8 <line:22:4> '<dependent type>' contains-errors lvalue         `-ParenExpr 0x149008978 <col:14, col:36> '<dependent type>' contains-errors           `-BinaryOperator 0x149008958 <col:15, col:32> '<dependent type>' contains-errors ','             |-BinaryOperator 0x149008918 <col:15, col:21> '<dependent type>' contains-errors ','             | |-RecoveryExpr 0x1490088d8 <col:15> '<dependent type>' contains-errors lvalue             | `-RecoveryExpr 0x1490088f8 <col:21> '<dependent type>' contains-errors lvalue             `-RecoveryExpr 0x149008938 <col:32> '<dependent type>' contains-errors lvalue ","20540":"`-FunctionDecl 0x157029cf0  col:3 implicit used printf 'int (const char *, ...)' extern   |-ParmVarDecl 0x157029df0 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x157029d98 <<invalid sloc>> Implicit 903   `-FormatAttr 0x157029e60 <col:3> Implicit printf 1 2 ","20981":"`-FunctionDecl 0x123808200  line:1:19 check_stack_guard_page 'int (struct vm_area_struct *, unsigned long)' static inline   |-ParmVarDecl 0x123128648 <col:42, col:65> col:65 used vma 'struct vm_area_struct *'   |-ParmVarDecl 0x1231286c8 <col:70, col:84> col:84 used address 'unsigned long'   `-CompoundStmt 0x12500a240 <line:2:1, line:23:1>     |-CompoundAssignOperator 0x1238083a0 <line:3:2, col:13> 'unsigned long' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-DeclRefExpr 0x123808300 <col:2> 'unsigned long' lvalue ParmVar 0x1231286c8 'address' 'unsigned long'     | `-RecoveryExpr 0x123808380 <col:13> '<dependent type>' contains-errors lvalue     |-IfStmt 0x123808c20 <line:4:2, line:12:2>     | |-RecoveryExpr 0x123808508 <line:4:6, col:56> '_Bool' contains-errors     | `-CompoundStmt 0x123808bf8 <col:66, line:12:2>     |   |-DeclStmt 0x123808680 <line:5:3, col:45>     |   | `-VarDecl 0x1238085b8 <col:3, col:38> col:26 used prev 'struct vm_area_struct *' cinit     |   |   `-RecoveryExpr 0x123808658 <col:33, col:38> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x123808620 <col:33> 'struct vm_area_struct *' lvalue ParmVar 0x123128648 'vma' 'struct vm_area_struct *'     |   |-IfStmt 0x123808978 <line:8:3, line:9:48>     |   | |-BinaryOperator 0x123808758 <line:8:7, col:31> 'int' contains-errors '&&'     |   | | |-DeclRefExpr 0x123808698 <col:7> 'struct vm_area_struct *' contains-errors lvalue Var 0x1238085b8 'prev' 'struct vm_area_struct *'     |   | | `-BinaryOperator 0x123808738 <col:15, col:31> 'int' contains-errors '=='     |   | |   |-RecoveryExpr 0x1238086f0 <col:15, col:21> '<dependent type>' contains-errors lvalue     |   | |   | `-DeclRefExpr 0x1238086b8 <col:15> 'struct vm_area_struct *' contains-errors lvalue Var 0x1238085b8 'prev' 'struct vm_area_struct *'     |   | |   `-DeclRefExpr 0x123808718 <col:31> 'unsigned long' lvalue ParmVar 0x1231286c8 'address' 'unsigned long'     |   | `-ReturnStmt 0x123808968 <line:9:4, col:48>     |   |   `-ConditionalOperator 0x123808938 <col:11, col:48> '<dependent type>' contains-errors     |   |     |-BinaryOperator 0x1238088c8 <col:11, col:28> '<dependent type>' contains-errors '&'     |   |     | |-RecoveryExpr 0x1238087b0 <col:11, col:17> '<dependent type>' contains-errors lvalue     |   |     | | `-DeclRefExpr 0x123808778 <col:11> 'struct vm_area_struct *' contains-errors lvalue Var 0x1238085b8 'prev' 'struct vm_area_struct *'     |   |     | `-RecoveryExpr 0x1238088a8 <col:28> '<dependent type>' contains-errors lvalue     |   |     |-IntegerLiteral 0x123808810 <col:43> 'int' 0     |   |     `-UnaryOperator 0x123808920 <col:47, col:48> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |       `-ImplicitCastExpr 0x123808908 <col:48> '<dependent type>' contains-errors <LValueToRValue>     |   |         `-RecoveryExpr 0x1238088e8 <col:48> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x123808be8 <line:11:3, col:51>     |     `-CallExpr 0x123808bb8 <col:10, col:51> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x123808ab0 <col:10> 'int ()' Function 0x1238089f8 'expand_downwards' 'int ()'     |       |-DeclRefExpr 0x123808ad0 <col:27> 'struct vm_area_struct *' lvalue ParmVar 0x123128648 'vma' 'struct vm_area_struct *'     |       `-BinaryOperator 0x123808b98 <col:32, col:42> '<dependent type>' contains-errors '-'     |         |-DeclRefExpr 0x123808af0 <col:32> 'unsigned long' lvalue ParmVar 0x1231286c8 'address' 'unsigned long'     |         `-RecoveryExpr 0x123808b78 <col:42> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12500a1f0 <line:13:2, line:21:2>     | |-RecoveryExpr 0x123808db0 <line:13:6, col:66> '_Bool' contains-errors     | `-CompoundStmt 0x12500a1d0 <col:74, line:21:2>     |   |-DeclStmt 0x123808ec0 <line:14:3, col:45>     |   | `-VarDecl 0x123808df8 <col:3, col:38> col:26 used next 'struct vm_area_struct *' cinit     |   |   `-RecoveryExpr 0x123808e98 <col:33, col:38> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x123808e60 <col:33> 'struct vm_area_struct *' lvalue ParmVar 0x123128648 'vma' 'struct vm_area_struct *'     |   `-IfStmt 0x12500a070 <line:17:3, line:18:46>     |     |-BinaryOperator 0x123809050 <line:17:7, col:43> 'int' contains-errors '&&'     |     | |-DeclRefExpr 0x123808ed8 <col:7> 'struct vm_area_struct *' contains-errors lvalue Var 0x123808df8 'next' 'struct vm_area_struct *'     |     | `-BinaryOperator 0x123809030 <col:15, col:43> 'int' contains-errors '=='     |     |   |-RecoveryExpr 0x123808f30 <col:15, col:21> '<dependent type>' contains-errors lvalue     |     |   | `-DeclRefExpr 0x123808ef8 <col:15> 'struct vm_area_struct *' contains-errors lvalue Var 0x123808df8 'next' 'struct vm_area_struct *'     |     |   `-BinaryOperator 0x123809010 <col:33, col:43> '<dependent type>' contains-errors '+'     |     |     |-DeclRefExpr 0x123808f58 <col:33> 'unsigned long' lvalue ParmVar 0x1231286c8 'address' 'unsigned long'     |     |     `-RecoveryExpr 0x123808ff0 <col:43> '<dependent type>' contains-errors lvalue     |     `-ReturnStmt 0x12500a060 <line:18:4, col:46>     |       `-ConditionalOperator 0x12500a030 <col:11, col:46> '<dependent type>' contains-errors     |         |-BinaryOperator 0x1238091c0 <col:11, col:28> '<dependent type>' contains-errors '&'     |         | |-RecoveryExpr 0x1238090a8 <col:11, col:17> '<dependent type>' contains-errors lvalue     |         | | `-DeclRefExpr 0x123809070 <col:11> 'struct vm_area_struct *' contains-errors lvalue Var 0x123808df8 'next' 'struct vm_area_struct *'     |         | `-RecoveryExpr 0x1238091a0 <col:28> '<dependent type>' contains-errors lvalue     |         |-IntegerLiteral 0x123809108 <col:41> 'int' 0     |         `-UnaryOperator 0x12500a018 <col:45, col:46> '<dependent type>' contains-errors prefix '-' cannot overflow     |           `-ImplicitCastExpr 0x12500a000 <col:46> '<dependent type>' contains-errors <LValueToRValue>     |             `-RecoveryExpr 0x1238091e0 <col:46> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12500a230 <line:22:2, col:9>       `-IntegerLiteral 0x12500a210 <col:9> 'int' 0 ","20953":"`-FunctionDecl 0x13f00dfa8  line:1:1 invalid concat_opt_exact_str 'int (int *, int *, int *, int)'   |-ParmVarDecl 0x13f00dd28 <col:22, col:30> col:30 referenced invalid to 'int *'   |-ParmVarDecl 0x13f00dda8 <col:34, col:41> col:41 invalid s 'int *'   |-ParmVarDecl 0x13f00de28 <col:44, col:51> col:51 invalid end 'int *'   |-ParmVarDecl 0x13f00dea8 <col:56, col:69> col:69 invalid enc 'int'   `-CompoundStmt 0x13f028b20 <line:2:1, line:17:1>     |-DeclStmt 0x13f00e210 <line:3:3, col:16>     | |-VarDecl 0x13f00e088 <col:3, col:7> col:7 used i 'int'     | |-VarDecl 0x13f00e108 <col:3, col:10> col:10 used j 'int'     | `-VarDecl 0x13f00e188 <col:3, col:13> col:13 used len 'int'     |-ForStmt 0x13f028890 <line:6:3, line:11:3>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-BinaryOperator 0x13f027ec0 <line:6:28, col:43> 'int' contains-errors '&&'     | | |-BinaryOperator 0x13f027e60 <col:28, col:32> 'int' contains-errors '<'     | | | |-RecoveryExpr 0x13f027e40 <col:28> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x13f00e378 <col:32> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x13f027ea0 <col:39, col:43> 'int' contains-errors '<'     | |   |-DeclRefExpr 0x13f00e3b8 <col:39> 'int' lvalue Var 0x13f00e088 'i' 'int'     | |   `-RecoveryExpr 0x13f027e80 <col:43> '<dependent type>' contains-errors lvalue     | |-<<<NULL>>>     | `-CompoundStmt 0x13f028868 <col:63, line:11:3>     |   |-BinaryOperator 0x13f028158 <line:7:5, col:24> 'int' contains-errors '='     |   | |-DeclRefExpr 0x13f027ee0 <col:5> 'int' lvalue Var 0x13f00e188 'len' 'int'     |   | `-CallExpr 0x13f028128 <col:11, col:24> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x13f028060 <col:11> 'int ()' Function 0x13f027fa8 'enclen' 'int ()'     |   |   |-RecoveryExpr 0x13f028080 <col:18> '<dependent type>' contains-errors lvalue     |   |   `-RecoveryExpr 0x13f028108 <col:23> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x13f028328 <line:8:5, col:37>     |   | |-BinaryOperator 0x13f028300 <col:9, col:19> 'int' contains-errors '>'     |   | | |-BinaryOperator 0x13f0282c0 <col:9, col:13> 'int' '+'     |   | | | |-ImplicitCastExpr 0x13f028290 <col:9> 'int' <LValueToRValue>     |   | | | | `-DeclRefExpr 0x13f028178 <col:9> 'int' lvalue Var 0x13f00e088 'i' 'int'     |   | | | `-ImplicitCastExpr 0x13f0282a8 <col:13> 'int' <LValueToRValue>     |   | | |   `-DeclRefExpr 0x13f028198 <col:13> 'int' lvalue Var 0x13f00e188 'len' 'int'     |   | | `-RecoveryExpr 0x13f0282e0 <col:19> '<dependent type>' contains-errors lvalue     |   | `-BreakStmt 0x13f028320 <col:37>     |   `-ForStmt 0x13f028830 <line:9:5, line:10:22>     |     |-BinaryOperator 0x13f028388 <line:9:10, col:14> 'int' '='     |     | |-DeclRefExpr 0x13f028348 <col:10> 'int' lvalue Var 0x13f00e108 'j' 'int'     |     | `-IntegerLiteral 0x13f028368 <col:14> 'int' 0     |     |-<<<NULL>>>     |     |-BinaryOperator 0x13f028590 <col:17, col:32> 'int' contains-errors '&&'     |     | |-BinaryOperator 0x13f028530 <col:17, col:21> 'int' '<'     |     | | |-ImplicitCastExpr 0x13f028500 <col:17> 'int' <LValueToRValue>     |     | | | `-DeclRefExpr 0x13f0283a8 <col:17> 'int' lvalue Var 0x13f00e108 'j' 'int'     |     | | `-ImplicitCastExpr 0x13f028518 <col:21> 'int' <LValueToRValue>     |     | |   `-DeclRefExpr 0x13f0283c8 <col:21> 'int' lvalue Var 0x13f00e188 'len' 'int'     |     | `-BinaryOperator 0x13f028570 <col:28, col:32> 'int' contains-errors '<'     |     |   |-RecoveryExpr 0x13f028550 <col:28> '<dependent type>' contains-errors lvalue     |     |   `-RecoveryExpr 0x13f028450 <col:32> '<dependent type>' contains-errors lvalue     |     |-UnaryOperator 0x13f0285d0 <col:37, col:38> 'int' postfix '++'     |     | `-DeclRefExpr 0x13f0285b0 <col:37> 'int' lvalue Var 0x13f00e108 'j' 'int'     |     `-BinaryOperator 0x13f028810 <line:10:7, col:22> '<dependent type>' contains-errors '='     |       |-ArraySubscriptExpr 0x13f0287a0 <col:7, col:16> '<dependent type>' contains-errors lvalue     |       | |-ImplicitCastExpr 0x13f028788 <col:7, col:11> '<dependent type>' contains-errors <LValueToRValue>     |       | | `-CXXDependentScopeMemberExpr 0x13f028630 <col:7, col:11> '<dependent type>' contains-errors lvalue ->s     |       | |   `-RecoveryExpr 0x13f028608 <col:7> '<dependent type>' contains-errors lvalue     |       | |     `-DeclRefExpr 0x13f0285e8 <col:7> 'int *' lvalue ParmVar 0x13f00dd28 'to' 'int *'     |       | `-UnaryOperator 0x13f028698 <col:13, col:14> 'int' postfix '++'     |       |   `-DeclRefExpr 0x13f028678 <col:13> 'int' lvalue Var 0x13f00e088 'i' 'int'     |       `-UnaryOperator 0x13f0287f8 <col:20, col:22> '<dependent type>' contains-errors prefix '*' cannot overflow     |         `-UnaryOperator 0x13f0287e0 <col:21, col:22> '<dependent type>' contains-errors postfix '++' cannot overflow     |           `-RecoveryExpr 0x13f0287c0 <col:21> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13f028978 <line:13:3, col:13> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13f028910 <col:3, col:7> '<dependent type>' contains-errors lvalue ->len     | | `-RecoveryExpr 0x13f0288e8 <col:3> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13f0288c8 <col:3> 'int *' lvalue ParmVar 0x13f00dd28 'to' 'int *'     | `-DeclRefExpr 0x13f028958 <col:13> 'int' lvalue Var 0x13f00e088 'i' 'int'     `-IfStmt 0x13f028b00 <line:15:3, line:16:21>       |-BinaryOperator 0x13f028a10 <line:15:7, col:12> 'int' contains-errors '>='       | |-RecoveryExpr 0x13f0289f0 <col:7> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x13f0289b0 <col:12> '<dependent type>' contains-errors lvalue       `-BinaryOperator 0x13f028ae0 <line:16:5, col:21> '<dependent type>' contains-errors '='         |-CXXDependentScopeMemberExpr 0x13f028a78 <col:5, col:9> '<dependent type>' contains-errors lvalue ->reach_end         | `-RecoveryExpr 0x13f028a50 <col:5> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x13f028a30 <col:5> 'int *' lvalue ParmVar 0x13f00dd28 'to' 'int *'         `-IntegerLiteral 0x13f028ac0 <col:21> 'int' 1 ","21243":"`-FunctionDecl 0x13b02a940  line:1:6 big_key_describe 'void (const struct key *, struct seq_file *)'   |-ParmVarDecl 0x13b00e248 <col:23, col:41> col:41 used key 'const struct key *'   |-ParmVarDecl 0x13b02a828 <col:46, col:63> col:63 used m 'struct seq_file *'   `-CompoundStmt 0x13b02b1e8 <line:2:1, line:11:1>     `-CallExpr 0x13b02ae00 <line:5:2, col:30> '<dependent type>' contains-errors       |-DeclRefExpr 0x13b02ad60 <col:2> 'int ()' Function 0x13b02aca8 'seq_puts' 'int ()'       |-DeclRefExpr 0x13b02ad80 <col:11> 'struct seq_file *' lvalue ParmVar 0x13b02a828 'm' 'struct seq_file *'       `-RecoveryExpr 0x13b02add8 <col:14, col:19> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x13b02ada0 <col:14> 'const struct key *' lvalue ParmVar 0x13b00e248 'key' 'const struct key *' ","20414":"`-FunctionDecl 0x1201282c8  line:1:1 referenced invalid ldns_str2rdf_certificate_usage 'int (int **, const char *)'   |-ParmVarDecl 0x120128160 <col:32, col:43> col:43 invalid rd 'int **'   |-ParmVarDecl 0x1201281e0 <col:47, col:59> col:59 used str 'const char *'   `-CompoundStmt 0x120128618 <line:2:1, line:5:1>     `-ReturnStmt 0x120128608 <line:3:2, line:4:41>       `-CallExpr 0x1201285d0 <line:3:9, line:4:41> '<dependent type>' contains-errors         |-DeclRefExpr 0x1201284e0 <line:3:9> 'int ()' Function 0x120128428 'ldns_str2rdf_mnemonic4int8' 'int ()'         |-RecoveryExpr 0x1201285b0 <line:4:4> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x120128518 <col:34> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x120128538 <col:38> 'const char *' lvalue ParmVar 0x1201281e0 'str' 'const char *' ","21131":"`-FunctionDecl 0x13900df18  line:1:5 invalid jbd2_journal_start_reserved 'int (int *, unsigned int, unsigned int)'   |-ParmVarDecl 0x13900dd28 <col:33, col:43> col:43 referenced invalid handle 'int *'   |-ParmVarDecl 0x13900dda8 <col:51, col:64> col:64 used type 'unsigned int'   |-ParmVarDecl 0x13900de28 <line:2:5, col:18> col:18 used line_no 'unsigned int'   `-CompoundStmt 0x139028060 <line:3:1, line:29:1>     |-DeclStmt 0x13900e170 <line:5:2, col:16>     | `-VarDecl 0x13900e070 <col:2, col:13> col:6 used ret 'int' cinit     |   `-UnaryOperator 0x13900e158 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x13900e140 <col:13> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13900e120 <col:13> '<dependent type>' contains-errors lvalue     |-IfStmt 0x139027588 <line:7:2, line:11:2>     | |-CallExpr 0x13900e398 <line:7:6, col:33> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x13900e2e0 <col:6> 'int ()' Function 0x13900e228 'WARN_ON' 'int ()'     | | `-UnaryOperator 0x13900e380 <col:14, col:23> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x13900e368 <col:15, col:23> '<dependent type>' contains-errors <LValueToRValue>     | |     `-CXXDependentScopeMemberExpr 0x13900e320 <col:15, col:23> '<dependent type>' contains-errors lvalue ->h_reserved     | |       `-RecoveryExpr 0x13900e300 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x139027568 <col:36, line:11:2>     |   |-CallExpr 0x1390274f8 <line:9:3, col:27> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1390274b8 <col:3> 'int ()' Function 0x139027400 'jbd2_journal_stop' 'int ()'     |   | `-RecoveryExpr 0x1390274d8 <col:21> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x139027558 <line:10:3, col:10>     |     `-ImplicitCastExpr 0x139027540 <col:10> 'int' contains-errors <LValueToRValue>     |       `-DeclRefExpr 0x139027520 <col:10> 'int' contains-errors lvalue Var 0x13900e070 'ret' 'int'     |-IfStmt 0x139027890 <line:13:2, line:16:2>     | |-CallExpr 0x1390276b8 <line:13:6, col:35> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1390275a8 <col:6> 'int ()' Function 0x13900e228 'WARN_ON' 'int ()'     | | `-CXXDependentScopeMemberExpr 0x139027670 <col:14, col:23> '<dependent type>' contains-errors lvalue ->journal_info     | |   `-RecoveryExpr 0x139027650 <col:14> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x139027870 <col:38, line:16:2>     |   |-CallExpr 0x139027800 <line:14:3, col:36> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1390277c0 <col:3> 'int ()' Function 0x139027708 'jbd2_journal_free_reserved' 'int ()'     |   | `-RecoveryExpr 0x1390277e0 <col:30> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x139027860 <line:15:3, col:10>     |     `-ImplicitCastExpr 0x139027848 <col:10> 'int' contains-errors <LValueToRValue>     |       `-DeclRefExpr 0x139027828 <col:10> 'int' contains-errors lvalue Var 0x13900e070 'ret' 'int'     |-BinaryOperator 0x139027998 <line:18:2, col:22> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1390278f8 <col:2, col:10> '<dependent type>' contains-errors lvalue ->h_journal     | | `-RecoveryExpr 0x1390278d0 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1390278b0 <col:2> 'int *' lvalue ParmVar 0x13900dd28 'handle' 'int *'     | `-RecoveryExpr 0x139027978 <col:22> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x139027bf8 <line:20:2, col:51> 'int' contains-errors '='     | |-DeclRefExpr 0x1390279b8 <col:2> 'int' contains-errors lvalue Var 0x13900e070 'ret' 'int'     | `-CallExpr 0x139027bc0 <col:8, col:51> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x139027ab8 <col:8> 'int ()' Function 0x139027a00 'start_this_handle' 'int ()'     |   |-RecoveryExpr 0x139027b80 <col:26> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x139027af0 <col:35> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x139027ba0 <col:43> '<dependent type>' contains-errors lvalue     |-IfStmt 0x139027e70 <line:21:2, line:25:2>     | |-BinaryOperator 0x139027c70 <line:21:6, col:12> 'int' contains-errors '<'     | | |-ImplicitCastExpr 0x139027c58 <col:6> 'int' contains-errors <LValueToRValue>     | | | `-DeclRefExpr 0x139027c18 <col:6> 'int' contains-errors lvalue Var 0x13900e070 'ret' 'int'     | | `-IntegerLiteral 0x139027c38 <col:12> 'int' 0     | `-CompoundStmt 0x139027e48 <col:15, line:25:2>     |   |-BinaryOperator 0x139027d78 <line:22:3, col:23> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x139027cd8 <col:3, col:11> '<dependent type>' contains-errors lvalue ->h_journal     |   | | `-RecoveryExpr 0x139027cb0 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x139027c90 <col:3> 'int *' lvalue ParmVar 0x13900dd28 'handle' 'int *'     |   | `-RecoveryExpr 0x139027d58 <col:23> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x139027dd8 <line:23:3, col:36> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x139027d98 <col:3> 'int ()' Function 0x139027708 'jbd2_journal_free_reserved' 'int ()'     |   | `-RecoveryExpr 0x139027db8 <col:30> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x139027e38 <line:24:3, col:10>     |     `-ImplicitCastExpr 0x139027e20 <col:10> 'int' contains-errors <LValueToRValue>     |       `-DeclRefExpr 0x139027e00 <col:10> 'int' contains-errors lvalue Var 0x13900e070 'ret' 'int'     |-BinaryOperator 0x139027f40 <line:26:2, col:19> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x139027ed8 <col:2, col:10> '<dependent type>' contains-errors lvalue ->h_type     | | `-RecoveryExpr 0x139027eb0 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x139027e90 <col:2> 'int *' lvalue ParmVar 0x13900dd28 'handle' 'int *'     | `-DeclRefExpr 0x139027f20 <col:19> 'unsigned int' lvalue ParmVar 0x13900dda8 'type' 'unsigned int'     |-BinaryOperator 0x139028010 <line:27:2, col:22> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x139027fa8 <col:2, col:10> '<dependent type>' contains-errors lvalue ->h_line_no     | | `-RecoveryExpr 0x139027f80 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x139027f60 <col:2> 'int *' lvalue ParmVar 0x13900dd28 'handle' 'int *'     | `-DeclRefExpr 0x139027ff0 <col:22> 'unsigned int' lvalue ParmVar 0x13900de28 'line_no' 'unsigned int'     `-ReturnStmt 0x139028050 <line:28:2, col:9>       `-IntegerLiteral 0x139028030 <col:9> 'int' 0 ","20620":"`-FunctionDecl 0x138128358  line:1:1 invalid poppler_document_new_from_file 'int (const char *, const char *, int **)'   |-ParmVarDecl 0x1381280d8 <col:33, col:46> col:46 used uri 'const char *'   |-ParmVarDecl 0x138128158 <line:2:5, col:18> col:18 used password 'const char *'   |-ParmVarDecl 0x138128260 <line:3:5, col:18> col:18 invalid error 'int **'   `-CompoundStmt 0x138142490 <line:4:1, line:43:1>     |-DeclStmt 0x1381284e8 <line:7:3, col:17>     | `-VarDecl 0x138128480 <col:3, col:9> col:9 used filename 'char *'     |-IfStmt 0x1381285c0 <line:9:3, line:11:3>     | |-UnaryOperator 0x138128580 <line:9:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x138128568 <col:8> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x138128548 <col:8> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1381285b0 <col:22, line:11:3>     |-BinaryOperator 0x1381418b0 <line:13:3, col:54> 'char *' contains-errors '='     | |-DeclRefExpr 0x1381285e0 <col:3> 'char *' lvalue Var 0x138128480 'filename' 'char *'     | `-CallExpr 0x138141878 <col:14, col:54> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x138128760 <col:14> 'int ()' Function 0x1381286a8 'g_filename_from_uri' 'int ()'     |   |-DeclRefExpr 0x138128780 <col:35> 'const char *' lvalue ParmVar 0x1381280d8 'uri' 'const char *'     |   |-RecoveryExpr 0x138141858 <col:40> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x1381287b8 <col:49> '<dependent type>' contains-errors lvalue     |-IfStmt 0x138141968 <line:14:3, line:15:12>     | |-UnaryOperator 0x138141908 <line:14:7, col:8> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1381418f0 <col:8> 'char *' <LValueToRValue>     | |   `-DeclRefExpr 0x1381418d0 <col:8> 'char *' lvalue Var 0x138128480 'filename' 'char *'     | `-ReturnStmt 0x138141958 <line:15:5, col:12>     |   `-RecoveryExpr 0x138141938 <col:12> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x138141f90 <line:17:3, col:51> 'const char *' '='     | |-DeclRefExpr 0x138141988 <col:3> 'const char *' lvalue ParmVar 0x138128158 'password' 'const char *'     | `-ImplicitCastExpr 0x138141b58 <col:16, col:51> 'const char *' <IntegralToPointer>     |   `-CallExpr 0x138141b18 <col:16, col:51> 'int'     |     |-ImplicitCastExpr 0x138141b00 <col:16> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x138141a88 <col:16> 'int ()' Function 0x1381419d0 'poppler_password_to_latin1' 'int ()'     |     `-ImplicitCastExpr 0x138141b40 <col:43> 'const char *' <LValueToRValue>     |       `-DeclRefExpr 0x138141aa8 <col:43> 'const char *' lvalue ParmVar 0x138128158 'password' 'const char *'     |-BinaryOperator 0x138142060 <line:35:3, col:16> 'char *' contains-errors '='     | |-DeclRefExpr 0x138141fe8 <col:3> 'char *' lvalue Var 0x138128480 'filename' 'char *'     | `-RecoveryExpr 0x138142040 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1381421b8 <col:20, col:39> 'int'     | |-ImplicitCastExpr 0x1381421a0 <col:20> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x138142160 <col:20> 'int ()' Function 0x1381420a8 'GooString' 'int ()'     | `-ImplicitCastExpr 0x1381421e0 <col:31> 'char *' <LValueToRValue>     |   `-DeclRefExpr 0x138142180 <col:31> 'char *' lvalue Var 0x138128480 'filename' 'char *'     `-CallExpr 0x138142330 <line:38:3, col:19> 'int'       |-ImplicitCastExpr 0x138142318 <col:3> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x1381422d8 <col:3> 'int ()' Function 0x138142220 'g_free' 'int ()'       `-ImplicitCastExpr 0x138142358 <col:11> 'char *' <LValueToRValue>         `-DeclRefExpr 0x1381422f8 <col:11> 'char *' lvalue Var 0x138128480 'filename' 'char *' ","20392":"`-FunctionDecl 0x1249285f0  line:1:13 invalid mpeg4_encode_gop_header 'void (int *)' static   |-ParmVarDecl 0x124928528 <col:37, col:53> col:53 referenced invalid s 'int *'   `-CompoundStmt 0x124943630 <line:2:1, line:29:1>     |-DeclStmt 0x124928840 <line:3:5, col:32>     | |-VarDecl 0x1249286b8 <col:5, col:9> col:9 used hours 'int'     | |-VarDecl 0x124928738 <col:5, col:16> col:16 used minutes 'int'     | `-VarDecl 0x1249287b8 <col:5, col:25> col:25 used seconds 'int'     |-CallExpr 0x124928a90 <line:6:5, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1249289b0 <col:5> 'int ()' Function 0x1249288f8 'put_bits' 'int ()'     | |-UnaryOperator 0x124928a38 <col:14, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x1249289f0 <col:15, col:18> '<dependent type>' contains-errors lvalue ->pb     | |   `-RecoveryExpr 0x1249289d0 <col:15> '<dependent type>' contains-errors lvalue     | |-IntegerLiteral 0x124928a50 <col:22> 'int' 16     | `-IntegerLiteral 0x124928a70 <col:26> 'int' 0     |-CallExpr 0x124941c00 <line:7:5, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x124928ac8 <col:5> 'int ()' Function 0x1249288f8 'put_bits' 'int ()'     | |-UnaryOperator 0x124928b50 <col:14, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x124928b08 <col:15, col:18> '<dependent type>' contains-errors lvalue ->pb     | |   `-RecoveryExpr 0x124928ae8 <col:15> '<dependent type>' contains-errors lvalue     | |-IntegerLiteral 0x124928b68 <col:22> 'int' 16     | `-RecoveryExpr 0x124928bd8 <col:26> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1249424f8 <line:13:5, col:61> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x124942200 <col:5, col:8> '<dependent type>' contains-errors lvalue ->last_time_base     | | `-RecoveryExpr 0x1249421d8 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1249421b8 <col:5> 'int *' lvalue ParmVar 0x124928528 's' 'int *'     | `-CallExpr 0x1249424c8 <col:25, col:61> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x124942328 <col:25> 'int ()' Function 0x124942270 'FFUDIV' 'int ()'     |   |-RecoveryExpr 0x1249424a8 <col:32> '<dependent type>' contains-errors lvalue     |   `-CXXDependentScopeMemberExpr 0x124942410 <col:38, col:58> '<dependent type>' contains-errors lvalue .den     |     `-CXXDependentScopeMemberExpr 0x1249423c8 <col:38, col:48> '<dependent type>' contains-errors lvalue ->time_base     |       `-CXXDependentScopeMemberExpr 0x124942380 <col:38, col:41> '<dependent type>' contains-errors lvalue ->avctx     |         `-RecoveryExpr 0x124942360 <col:38> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x124942708 <line:15:5, col:51> 'int' contains-errors '='     | |-DeclRefExpr 0x124942518 <col:5> 'int' lvalue Var 0x1249287b8 'seconds' 'int'     | `-CallExpr 0x1249426d8 <col:15, col:51> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x124942538 <col:15> 'int ()' Function 0x124942270 'FFUDIV' 'int ()'     |   |-RecoveryExpr 0x1249426b8 <col:22> '<dependent type>' contains-errors lvalue     |   `-CXXDependentScopeMemberExpr 0x124942620 <col:28, col:48> '<dependent type>' contains-errors lvalue .den     |     `-CXXDependentScopeMemberExpr 0x1249425d8 <col:28, col:38> '<dependent type>' contains-errors lvalue ->time_base     |       `-CXXDependentScopeMemberExpr 0x124942590 <col:28, col:31> '<dependent type>' contains-errors lvalue ->avctx     |         `-RecoveryExpr 0x124942570 <col:28> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x124942840 <line:16:5, col:33> 'int' '='     | |-DeclRefExpr 0x124942728 <col:5> 'int' lvalue Var 0x124928738 'minutes' 'int'     | `-CallExpr 0x1249427f8 <col:15, col:33> 'int'     |   |-ImplicitCastExpr 0x1249427e0 <col:15> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x124942748 <col:15> 'int ()' Function 0x124942270 'FFUDIV' 'int ()'     |   |-ImplicitCastExpr 0x124942828 <col:22> 'int' <LValueToRValue>     |   | `-DeclRefExpr 0x124942768 <col:22> 'int' lvalue Var 0x1249287b8 'seconds' 'int'     |   `-IntegerLiteral 0x124942788 <col:31> 'int' 60     |-BinaryOperator 0x124942a20 <col:36, col:64> 'int' '='     | |-DeclRefExpr 0x124942860 <col:36> 'int' lvalue Var 0x1249287b8 'seconds' 'int'     | `-CallExpr 0x1249429d8 <col:46, col:64> 'int'     |   |-ImplicitCastExpr 0x1249429c0 <col:46> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x124942960 <col:46> 'int ()' Function 0x1249428a8 'FFUMOD' 'int ()'     |   |-ImplicitCastExpr 0x124942a08 <col:53> 'int' <LValueToRValue>     |   | `-DeclRefExpr 0x124942980 <col:53> 'int' lvalue Var 0x1249287b8 'seconds' 'int'     |   `-IntegerLiteral 0x1249429a0 <col:62> 'int' 60     |-BinaryOperator 0x124942b20 <line:17:5, col:33> 'int' '='     | |-DeclRefExpr 0x124942a40 <col:5> 'int' lvalue Var 0x1249286b8 'hours' 'int'     | `-CallExpr 0x124942ad8 <col:15, col:33> 'int'     |   |-ImplicitCastExpr 0x124942ac0 <col:15> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x124942a60 <col:15> 'int ()' Function 0x124942270 'FFUDIV' 'int ()'     |   |-ImplicitCastExpr 0x124942b08 <col:22> 'int' <LValueToRValue>     |   | `-DeclRefExpr 0x124942a80 <col:22> 'int' lvalue Var 0x124928738 'minutes' 'int'     |   `-IntegerLiteral 0x124942aa0 <col:31> 'int' 60     |-BinaryOperator 0x124942c48 <col:36, col:64> 'int' '='     | |-DeclRefExpr 0x124942b40 <col:36> 'int' lvalue Var 0x124928738 'minutes' 'int'     | `-CallExpr 0x124942c00 <col:46, col:64> 'int'     |   |-ImplicitCastExpr 0x124942bc0 <col:46> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x124942b60 <col:46> 'int ()' Function 0x1249428a8 'FFUMOD' 'int ()'     |   |-ImplicitCastExpr 0x124942c30 <col:53> 'int' <LValueToRValue>     |   | `-DeclRefExpr 0x124942b80 <col:53> 'int' lvalue Var 0x124928738 'minutes' 'int'     |   `-IntegerLiteral 0x124942ba0 <col:62> 'int' 60     |-BinaryOperator 0x124942d48 <line:18:5, col:33> 'int' '='     | |-DeclRefExpr 0x124942c68 <col:5> 'int' lvalue Var 0x1249286b8 'hours' 'int'     | `-CallExpr 0x124942d00 <col:15, col:33> 'int'     |   |-ImplicitCastExpr 0x124942ce8 <col:15> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x124942c88 <col:15> 'int ()' Function 0x1249428a8 'FFUMOD' 'int ()'     |   |-ImplicitCastExpr 0x124942d30 <col:22> 'int' <LValueToRValue>     |   | `-DeclRefExpr 0x124942ca8 <col:22> 'int' lvalue Var 0x1249286b8 'hours' 'int'     |   `-IntegerLiteral 0x124942cc8 <col:31> 'int' 24     |-CallExpr 0x124942e48 <line:20:5, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x124942d68 <col:5> 'int ()' Function 0x1249288f8 'put_bits' 'int ()'     | |-UnaryOperator 0x124942df0 <col:14, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x124942da8 <col:15, col:18> '<dependent type>' contains-errors lvalue ->pb     | |   `-RecoveryExpr 0x124942d88 <col:15> '<dependent type>' contains-errors lvalue     | |-IntegerLiteral 0x124942e08 <col:22> 'int' 5     | `-DeclRefExpr 0x124942e28 <col:25> 'int' lvalue Var 0x1249286b8 'hours' 'int'     |-CallExpr 0x124942f60 <line:21:5, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x124942e80 <col:5> 'int ()' Function 0x1249288f8 'put_bits' 'int ()'     | |-UnaryOperator 0x124942f08 <col:14, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x124942ec0 <col:15, col:18> '<dependent type>' contains-errors lvalue ->pb     | |   `-RecoveryExpr 0x124942ea0 <col:15> '<dependent type>' contains-errors lvalue     | |-IntegerLiteral 0x124942f20 <col:22> 'int' 6     | `-DeclRefExpr 0x124942f40 <col:25> 'int' lvalue Var 0x124928738 'minutes' 'int'     |-CallExpr 0x124943078 <line:22:5, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x124942f98 <col:5> 'int ()' Function 0x1249288f8 'put_bits' 'int ()'     | |-UnaryOperator 0x124943020 <col:14, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x124942fd8 <col:15, col:18> '<dependent type>' contains-errors lvalue ->pb     | |   `-RecoveryExpr 0x124942fb8 <col:15> '<dependent type>' contains-errors lvalue     | |-IntegerLiteral 0x124943038 <col:22> 'int' 1     | `-IntegerLiteral 0x124943058 <col:25> 'int' 1     |-CallExpr 0x124943190 <line:23:5, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1249430b0 <col:5> 'int ()' Function 0x1249288f8 'put_bits' 'int ()'     | |-UnaryOperator 0x124943138 <col:14, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x1249430f0 <col:15, col:18> '<dependent type>' contains-errors lvalue ->pb     | |   `-RecoveryExpr 0x1249430d0 <col:15> '<dependent type>' contains-errors lvalue     | |-IntegerLiteral 0x124943150 <col:22> 'int' 6     | `-DeclRefExpr 0x124943170 <col:25> 'int' lvalue Var 0x1249287b8 'seconds' 'int'     |-CallExpr 0x124943450 <line:26:5, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x124943370 <col:5> 'int ()' Function 0x1249288f8 'put_bits' 'int ()'     | |-UnaryOperator 0x1249433f8 <col:14, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x1249433b0 <col:15, col:18> '<dependent type>' contains-errors lvalue ->pb     | |   `-RecoveryExpr 0x124943390 <col:15> '<dependent type>' contains-errors lvalue     | |-IntegerLiteral 0x124943410 <col:22> 'int' 1     | `-IntegerLiteral 0x124943430 <col:25> 'int' 0     `-CallExpr 0x124943608 <line:28:5, col:29> '<dependent type>' contains-errors       |-DeclRefExpr 0x124943568 <col:5> 'int ()' Function 0x1249434b0 'ff_mpeg4_stuffing' 'int ()'       `-UnaryOperator 0x1249435f0 <col:23, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow         `-CXXDependentScopeMemberExpr 0x1249435a8 <col:24, col:27> '<dependent type>' contains-errors lvalue ->pb           `-RecoveryExpr 0x124943588 <col:24> '<dependent type>' contains-errors lvalue ","20188":"`-FunctionDecl 0x11f9283a0  line:1:6 invalid spl_object_storage_attach 'void (int *, int *, int *, int *)'   |-ParmVarDecl 0x11f928128 <col:32, col:54> col:54 invalid intern 'int *'   |-ParmVarDecl 0x11f9281a8 <col:62, col:68> col:68 invalid this 'int *'   |-ParmVarDecl 0x11f928228 <col:74, col:80> col:80 invalid obj 'int *'   |-ParmVarDecl 0x11f9282a8 <col:85, col:91> col:91 invalid inf 'int *'   `-CompoundStmt 0x11f942448 <line:2:1, line:29:1>     |-DeclStmt 0x11f928518 <line:5:2, col:14>     | `-VarDecl 0x11f9284b0 <col:2, col:6> col:6 used hash_len 'int'     |-DeclStmt 0x11f9287c8 <line:6:2, col:82>     | `-VarDecl 0x11f928548 <col:2, col:8> col:8 used hash 'char *'     |-IfStmt 0x11f941858 <line:7:2, line:9:2>     | |-UnaryOperator 0x11f941818 <line:7:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x11f941800 <col:7> 'char *' <LValueToRValue>     | |   `-DeclRefExpr 0x11f9287e0 <col:7> 'char *' lvalue Var 0x11f928548 'hash' 'char *'     | `-CompoundStmt 0x11f941840 <col:13, line:9:2>     |   `-ReturnStmt 0x11f941830 <line:8:3>     |-IfStmt 0x11f941cb8 <line:13:2, line:17:2> has_else     | |-RecoveryExpr 0x11f9419d8 <line:13:6> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x11f941b40 <col:11, line:15:2>     | | `-CallExpr 0x11f941b18 <line:14:3, col:17> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x11f941ad8 <col:3> 'int ()' Function 0x11f941a20 'Z_ADDREF_P' 'int ()'     | |   `-RecoveryExpr 0x11f941af8 <col:14> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x11f941ca0 <line:15:9, line:17:2>     |   `-CallExpr 0x11f941c78 <line:16:3, col:22> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x11f941c38 <col:3> 'int ()' Function 0x11f941b80 'ALLOC_INIT_ZVAL' 'int ()'     |     `-RecoveryExpr 0x11f941c58 <col:19> '<dependent type>' contains-errors lvalue     |-IfStmt 0x11f942130 <line:18:2, line:23:2>     | |-RecoveryExpr 0x11f941d00 <line:18:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x11f942108 <col:16, line:23:2>     |   |-CallExpr 0x11f941f40 <line:19:3, col:31> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x11f941e00 <col:3> 'int ()' Function 0x11f941d48 'zval_ptr_dtor' 'int ()'     |   | `-UnaryOperator 0x11f941f28 <col:17, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-CXXDependentScopeMemberExpr 0x11f941ee0 <col:18, col:28> '<dependent type>' contains-errors lvalue ->inf     |   |     `-RecoveryExpr 0x11f941ec0 <col:18> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x11f9420c8 <line:21:3, col:44> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x11f942068 <col:3> 'int ()' Function 0x11f941fb0 'spl_object_storage_free_hash' 'int ()'     |   | |-RecoveryExpr 0x11f942088 <col:32> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x11f9420a8 <col:40> 'char *' lvalue Var 0x11f928548 'hash' 'char *'     |   `-ReturnStmt 0x11f9420f8 <line:22:3>     |-CallExpr 0x11f942190 <line:24:2, col:16> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11f942150 <col:2> 'int ()' Function 0x11f941a20 'Z_ADDREF_P' 'int ()'     | `-RecoveryExpr 0x11f942170 <col:13> '<dependent type>' contains-errors lvalue     `-CallExpr 0x11f942418 <line:28:2, col:43> '<dependent type>' contains-errors       |-DeclRefExpr 0x11f9423b8 <col:2> 'int ()' Function 0x11f941fb0 'spl_object_storage_free_hash' 'int ()'       |-RecoveryExpr 0x11f9423d8 <col:31> '<dependent type>' contains-errors lvalue       `-DeclRefExpr 0x11f9423f8 <col:39> 'char *' lvalue Var 0x11f928548 'hash' 'char *' ","21242":"`-FunctionDecl 0x136030bf8  col:3 implicit used _exit 'void (int) __attribute__((noreturn))' extern   |-ParmVarDecl 0x136030cf8 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x136030ca0 <<invalid sloc>> Implicit 959 ","20360":"`-FunctionDecl 0x152128190  line:1:13 success_and_wakeup 'void (void)' static   `-CompoundStmt 0x152128438 <line:2:1, line:5:1>     `-CallExpr 0x152128418 <line:3:2, col:18> 'int'       `-ImplicitCastExpr 0x152128400 <col:2> 'int (*)()' <FunctionToPointerDecay>         `-DeclRefExpr 0x1521283b0 <col:2> 'int ()' Function 0x1521282f8 'generic_success' 'int ()' ","20705":"`-FunctionDecl 0x11e00de88  line:1:14 invalid php_lookup_class_name 'int *(int *, int *)'   |-ParmVarDecl 0x11e00dd28 <col:36, col:42> col:42 invalid object 'int *'   |-ParmVarDecl 0x11e00dda8 <col:50, col:61> col:61 invalid nlen 'int *'   `-CompoundStmt 0x11d922cc0 <line:2:1, line:19:1>     |-DeclStmt 0x11e00e040 <line:4:2, col:21>     | `-VarDecl 0x11e00dfa0 <col:2, col:17> col:8 used retval 'char *' cinit     |   `-RecoveryExpr 0x11e00e020 <col:17> '<dependent type>' contains-errors lvalue     |-CallExpr 0x11e00e238 <line:6:2, col:15> 'int'     | `-ImplicitCastExpr 0x11e00e220 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x11e00e1d0 <col:2> 'int ()' Function 0x11e00e118 'TSRMLS_FETCH' 'int ()'     |-IfStmt 0x11d922c08 <line:10:2, line:16:2>     | |-RecoveryExpr 0x11d9227b0 <line:10:6, col:95> '_Bool' contains-errors     | `-CompoundStmt 0x11d922bf0 <col:104, line:16:2>     |   `-IfStmt 0x11d922bd0 <line:13:3, line:15:3>     |     |-RecoveryExpr 0x11d922b30 <line:13:7> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x11d922bc0 <col:13, line:15:3>     `-ReturnStmt 0x11d922cb0 <line:18:2, col:9>       `-ImplicitCastExpr 0x11d922c60 <col:9> 'int *' contains-errors <BitCast>         `-ImplicitCastExpr 0x11d922c48 <col:9> 'char *' contains-errors <LValueToRValue>           `-DeclRefExpr 0x11d922c28 <col:9> 'char *' contains-errors lvalue Var 0x11e00dfa0 'retval' 'char *' ","20818":"`-FunctionDecl 0x1589418d8  line:1:5 invalid nfc_activate_target 'int (struct nfc_dev *, int, int)'   |-ParmVarDecl 0x158928648 <col:25, col:41> col:41 used dev 'struct nfc_dev *'   |-ParmVarDecl 0x1589286e0 <col:46, col:50> col:50 invalid target_idx 'int'   |-ParmVarDecl 0x158928760 <col:62, col:66> col:66 invalid protocol 'int'   `-CompoundStmt 0x1590097d8 <line:2:1, line:40:1>     |-DeclStmt 0x158941a18 <line:3:2, col:8>     | `-VarDecl 0x1589419b0 <col:2, col:6> col:6 used rc 'int'     |-DeclStmt 0x158941c18 <line:4:2, col:27>     | |-RecordDecl 0x158941a30 <col:2, col:9> col:9 struct nfc_target     | `-VarDecl 0x158941b98 <col:2, col:21> col:21 used target 'struct nfc_target *'     |-CallExpr 0x158941ff0 <line:6:2, line:7:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x158941d90 <line:6:2> 'int ()' Function 0x158941cd8 'pr_debug' 'int ()'     | |-StringLiteral 0x158941df0 <col:11> 'char[4]' lvalue \"STR\"     | |-CallExpr 0x158941f88 <line:7:4, col:22> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x158941ef0 <col:4> 'int ()' Function 0x158941e38 'dev_name' 'int ()'     | | `-UnaryOperator 0x158941f70 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x158941f48 <col:14, col:19> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x158941f10 <col:14> 'struct nfc_dev *' lvalue ParmVar 0x158928648 'dev' 'struct nfc_dev *'     | |-RecoveryExpr 0x158941fb0 <col:25> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x158941fd0 <col:37> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1589421a8 <line:9:2, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x158942110 <col:2> 'int ()' Function 0x158942058 'device_lock' 'int ()'     | `-UnaryOperator 0x158942190 <col:14, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x158942168 <col:15, col:20> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x158942130 <col:15> 'struct nfc_dev *' lvalue ParmVar 0x158928648 'dev' 'struct nfc_dev *'     |-IfStmt 0x158942508 <line:11:2, line:14:2>     | |-UnaryOperator 0x158942370 <line:11:6, col:37> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x158942348 <col:7, col:37> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x1589422b0 <col:7> 'int ()' Function 0x1589421f8 'device_is_registered' 'int ()'     | |   `-UnaryOperator 0x158942330 <col:28, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-RecoveryExpr 0x158942308 <col:29, col:34> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x1589422d0 <col:29> 'struct nfc_dev *' lvalue ParmVar 0x158928648 'dev' 'struct nfc_dev *'     | `-CompoundStmt 0x1589424e8 <col:40, line:14:2>     |   |-BinaryOperator 0x158942460 <line:12:3, col:9> 'int' contains-errors '='     |   | |-DeclRefExpr 0x158942388 <col:3> 'int' lvalue Var 0x1589419b0 'rc' 'int'     |   | `-UnaryOperator 0x158942448 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x158942430 <col:9> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x158942410 <col:9> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x1589424d0 <line:13:3, col:8> 'error' 0x158942480     |-IfStmt 0x1589426b8 <line:16:2, line:19:2>     | |-RecoveryExpr 0x158942560 <line:16:6, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x158942528 <col:6> 'struct nfc_dev *' lvalue ParmVar 0x158928648 'dev' 'struct nfc_dev *'     | `-CompoundStmt 0x158942698 <col:26, line:19:2>     |   |-BinaryOperator 0x158942660 <line:17:3, col:9> 'int' contains-errors '='     |   | |-DeclRefExpr 0x158942588 <col:3> 'int' lvalue Var 0x1589419b0 'rc' 'int'     |   | `-UnaryOperator 0x158942648 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x158942630 <col:9> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x158942610 <col:9> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x158942680 <line:18:3, col:8> 'error' 0x158942480     |-BinaryOperator 0x159008c70 <line:21:2, col:42> 'struct nfc_target *' contains-errors '='     | |-DeclRefExpr 0x1589426d8 <col:2> 'struct nfc_target *' lvalue Var 0x158941b98 'target' 'struct nfc_target *'     | `-CallExpr 0x159008c40 <col:11, col:42> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1589427d8 <col:11> 'int ()' Function 0x158942720 'nfc_find_target' 'int ()'     |   |-DeclRefExpr 0x159008c00 <col:27> 'struct nfc_dev *' lvalue ParmVar 0x158928648 'dev' 'struct nfc_dev *'     |   `-RecoveryExpr 0x159008c20 <col:32> '<dependent type>' contains-errors lvalue     |-IfStmt 0x159008e58 <line:22:2, line:25:2>     | |-BinaryOperator 0x159008d08 <line:22:6, col:16> 'int' contains-errors '=='     | | |-DeclRefExpr 0x159008c90 <col:6> 'struct nfc_target *' lvalue Var 0x158941b98 'target' 'struct nfc_target *'     | | `-RecoveryExpr 0x159008ce8 <col:16> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x159008e38 <col:22, line:25:2>     |   |-BinaryOperator 0x159008e00 <line:23:3, col:9> 'int' contains-errors '='     |   | |-DeclRefExpr 0x159008d28 <col:3> 'int' lvalue Var 0x1589419b0 'rc' 'int'     |   | `-UnaryOperator 0x159008de8 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x159008dd0 <col:9> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x159008db0 <col:9> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x159008e20 <line:24:3, col:8> 'error' 0x158942480     |-BinaryOperator 0x159008fd8 <line:27:2, col:54> 'int' contains-errors '='     | |-DeclRefExpr 0x159008e78 <col:2> 'int' lvalue Var 0x1589419b0 'rc' 'int'     | `-CallExpr 0x159008fa0 <col:7, col:54> '<dependent type>' contains-errors     |   |-CXXDependentScopeMemberExpr 0x159008ef8 <col:7, col:17> '<dependent type>' contains-errors lvalue ->activate_target     |   | `-RecoveryExpr 0x159008ed0 <col:7, col:12> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x159008e98 <col:7> 'struct nfc_dev *' lvalue ParmVar 0x158928648 'dev' 'struct nfc_dev *'     |   |-DeclRefExpr 0x159008f40 <col:33> 'struct nfc_dev *' lvalue ParmVar 0x158928648 'dev' 'struct nfc_dev *'     |   |-DeclRefExpr 0x159008f60 <col:38> 'struct nfc_target *' lvalue Var 0x158941b98 'target' 'struct nfc_target *'     |   `-RecoveryExpr 0x159008f80 <col:46> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1590095b0 <line:28:2, line:35:2>     | |-UnaryOperator 0x159009030 <line:28:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x159009018 <col:7> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x159008ff8 <col:7> 'int' lvalue Var 0x1589419b0 'rc' 'int'     | `-CompoundStmt 0x159009590 <col:11, line:35:2>     |   |-BinaryOperator 0x1590090c8 <line:29:3, col:24> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x159009080 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x159009048 <col:3> 'struct nfc_dev *' lvalue ParmVar 0x158928648 'dev' 'struct nfc_dev *'     |   | `-DeclRefExpr 0x1590090a8 <col:24> 'struct nfc_target *' lvalue Var 0x158941b98 'target' 'struct nfc_target *'     |   `-BinaryOperator 0x1590091a0 <line:30:3, col:18> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x159009120 <col:3, col:8> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x1590090e8 <col:3> 'struct nfc_dev *' lvalue ParmVar 0x158928648 'dev' 'struct nfc_dev *'     |     `-RecoveryExpr 0x159009180 <col:18> '<dependent type>' contains-errors lvalue     |-LabelStmt 0x159009770 <line:37:1, line:38:25> 'error'     | `-CallExpr 0x159009748 <col:2, col:25> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1590096b0 <col:2> 'int ()' Function 0x1590095f8 'device_unlock' 'int ()'     |   `-UnaryOperator 0x159009730 <col:16, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x159009708 <col:17, col:22> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x1590096d0 <col:17> 'struct nfc_dev *' lvalue ParmVar 0x158928648 'dev' 'struct nfc_dev *'     `-ReturnStmt 0x1590097c8 <line:39:2, col:9>       `-ImplicitCastExpr 0x1590097b0 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x159009790 <col:9> 'int' lvalue Var 0x1589419b0 'rc' 'int' ","20724":"`-FunctionDecl 0x13c80de80  line:1:13 invalid do_busid_cmd 'void (int *, int)' static   |-ParmVarDecl 0x13c80dd28 <col:26, col:36> col:36 referenced invalid s 'int *'   |-ParmVarDecl 0x13c80dda8 <col:39, col:47> col:47 invalid busid 'int'   `-CompoundStmt 0x13b07b6f8 <line:2:1, line:40:1>     |-DeclStmt 0x13c80dfb8 <line:5:5, col:12>     | `-VarDecl 0x13c80df50 <col:5, col:9> col:9 used lun 'int'     |-CallExpr 0x13c80e180 <line:9:5, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13c80e140 <col:5> 'int ()' Function 0x13c80e088 'trace_esp_do_busid_cmd' 'int ()'     | `-RecoveryExpr 0x13c80e160 <col:28> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13c80e228 <line:10:5, col:19> 'int' contains-errors '='     | |-DeclRefExpr 0x13c80e1a8 <col:5> 'int' lvalue Var 0x13c80df50 'lun' 'int'     | `-BinaryOperator 0x13c80e208 <col:11, col:19> '<dependent type>' contains-errors '&'     |   |-RecoveryExpr 0x13c80e1c8 <col:11> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x13c80e1e8 <col:19> 'int' 7     |-IfStmt 0x13b0421c8 <line:12:5, line:14:5>     | |-BinaryOperator 0x13b042180 <line:12:9, col:24> 'int' contains-errors '||'     | | |-UnaryOperator 0x13b042138 <col:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x13b042120 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-RecoveryExpr 0x13b042100 <col:10> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x13b042168 <col:20, col:24> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x13b042150 <col:21, col:24> '<dependent type>' contains-errors <LValueToRValue>     | |     `-CXXDependentScopeMemberExpr 0x13b042068 <col:21, col:24> '<dependent type>' contains-errors lvalue ->current_dev     | |       `-RecoveryExpr 0x13b042048 <col:21> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13b0421b0 <col:37, line:14:5>     |   `-ReturnStmt 0x13b0421a0 <line:13:9>     |-CallExpr 0x13b042410 <line:15:5, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13b0422c8 <col:5> 'int ()' Function 0x13b042210 'esp_fifo_pop_buf' 'int ()'     | |-UnaryOperator 0x13b042350 <col:22, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x13b042308 <col:23, col:26> '<dependent type>' contains-errors lvalue ->cmdfifo     | |   `-RecoveryExpr 0x13b0422e8 <col:23> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x13b0423d0 <col:35> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x13b0423f0 <col:40> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13b042a08 <line:18:5, col:62> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13b042740 <col:5, col:8> '<dependent type>' contains-errors lvalue ->current_req     | | `-RecoveryExpr 0x13b042718 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13b0426f8 <col:5> 'int *' lvalue ParmVar 0x13c80dd28 's' 'int *'     | `-CallExpr 0x13b0429c0 <col:22, col:62> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13b042868 <col:22> 'int ()' Function 0x13b0427b0 'scsi_req_new' 'int ()'     |   |-RecoveryExpr 0x13b042980 <col:35> '<dependent type>' contains-errors lvalue     |   |-IntegerLiteral 0x13b0428a0 <col:48> 'int' 0     |   |-DeclRefExpr 0x13b0428c0 <col:51> 'int' lvalue Var 0x13c80df50 'lun' 'int'     |   |-RecoveryExpr 0x13b0429a0 <col:56> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x13b0428f8 <col:61> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13b042dc8 <line:21:5, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13b042d28 <col:5> 'int ()' Function 0x13b042c70 'fifo8_reset' 'int ()'     | `-UnaryOperator 0x13b042db0 <col:17, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x13b042d68 <col:18, col:21> '<dependent type>' contains-errors lvalue ->cmdfifo     |     `-RecoveryExpr 0x13b042d48 <col:18> '<dependent type>' contains-errors lvalue     `-IfStmt 0x13b07b6d8 <line:22:5, line:39:5>       |-RecoveryExpr 0x13b042e10 <line:22:9, col:20> '_Bool' contains-errors       `-CompoundStmt 0x13b07b6a0 <col:23, line:39:5>         |-BinaryOperator 0x13b07ae00 <line:25:9, col:21> '<dependent type>' contains-errors '='         | |-CXXDependentScopeMemberExpr 0x13b042f98 <col:9, col:12> '<dependent type>' contains-errors lvalue ->ti_cmd         | | `-RecoveryExpr 0x13b042f70 <col:9> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x13b042f50 <col:9> 'int *' lvalue ParmVar 0x13c80dd28 's' 'int *'         | `-IntegerLiteral 0x13b042fe0 <col:21> 'int' 0         |-CallExpr 0x13b07af60 <line:26:9, col:24> '<dependent type>' contains-errors         | |-DeclRefExpr 0x13b07af00 <col:9> 'int ()' Function 0x13b07ae48 'esp_set_tc' 'int ()'         | |-RecoveryExpr 0x13b07af20 <col:20> '<dependent type>' contains-errors lvalue         | `-IntegerLiteral 0x13b07af40 <col:23> 'int' 0         |-IfStmt 0x13b07b4d0 <line:27:9, line:36:9> has_else         | |-RecoveryExpr 0x13b07afb0 <line:27:13, col:23> '_Bool' contains-errors         | |-CompoundStmt 0x13b07b0f0 <col:26, line:31:9>         | `-CompoundStmt 0x13b07b4b0 <col:16, line:36:9>         |   |-CallExpr 0x13b07b340 <line:34:13, col:28> '<dependent type>' contains-errors         |   | |-DeclRefExpr 0x13b07b300 <col:13> 'int ()' Function 0x13b07b248 'esp_raise_irq' 'int ()'         |   | `-RecoveryExpr 0x13b07b320 <col:27> '<dependent type>' contains-errors lvalue         |   `-CallExpr 0x13b07b488 <line:35:13, col:28> '<dependent type>' contains-errors         |     |-DeclRefExpr 0x13b07b448 <col:13> 'int ()' Function 0x13b07b390 'esp_lower_drq' 'int ()'         |     `-RecoveryExpr 0x13b07b468 <col:27> '<dependent type>' contains-errors lvalue         |-CallExpr 0x13b07b668 <line:37:9, col:41> '<dependent type>' contains-errors         | |-DeclRefExpr 0x13b07b5e0 <col:9> 'int ()' Function 0x13b07b528 'scsi_req_continue' 'int ()'         | `-CXXDependentScopeMemberExpr 0x13b07b620 <col:27, col:30> '<dependent type>' contains-errors lvalue ->current_req         |   `-RecoveryExpr 0x13b07b600 <col:27> '<dependent type>' contains-errors lvalue         `-ReturnStmt 0x13b07b690 <line:38:9> ","21204":"`-FunctionDecl 0x133128258  line:1:1 invalid hb_buffer_ensure 'int (int, int)'   |-ParmVarDecl 0x1331280f0 <col:19, col:29> col:29 referenced invalid buffer 'int'   |-ParmVarDecl 0x133128170 <line:2:6, col:16> col:16 invalid size 'int'   `-CompoundStmt 0x133809148 <line:3:1, line:44:1>     `-IfStmt 0x133809128 <line:6:3, line:41:5>       |-BinaryOperator 0x133128388 <line:6:7, col:14> 'int' contains-errors '>'       | |-RecoveryExpr 0x133128310 <col:7> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x133128368 <col:14> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x133809100 <line:7:5, line:41:5>         |-IfStmt 0x133808868 <line:13:7, line:17:2>         | |-CXXDependentScopeMemberExpr 0x1331284d8 <line:13:12, col:20> '<dependent type>' contains-errors lvalue ->positions         | | `-RecoveryExpr 0x1331284b8 <col:12> '<dependent type>' contains-errors lvalue         | `-CompoundStmt 0x133808850 <line:14:9, line:17:2>         |   `-IfStmt 0x133808830 <line:15:4, line:16:13>         |     |-CallExpr 0x1331287b0 <line:15:9, col:73> '<dependent type>' contains-errors         |     | |-DeclRefExpr 0x133128680 <col:9> 'int ()' Function 0x1331285c8 'REALLOC_ARRAY' 'int ()'         |     | |-CXXDependentScopeMemberExpr 0x1331286c0 <col:24, col:32> '<dependent type>' contains-errors lvalue ->positions         |     | | `-RecoveryExpr 0x1331286a0 <col:24> '<dependent type>' contains-errors lvalue         |     | |-RecoveryExpr 0x133128770 <col:43> '<dependent type>' contains-errors lvalue         |     | `-RecoveryExpr 0x133128790 <col:58> '<dependent type>' contains-errors lvalue         |     `-ReturnStmt 0x133808820 <line:16:6, col:13>         |       `-RecoveryExpr 0x133808800 <col:13> '<dependent type>' contains-errors lvalue         |-IfStmt 0x133808a38 <line:19:7, line:20:9>         | |-CallExpr 0x1338089b8 <line:19:12, col:77> '<dependent type>' contains-errors         | | |-DeclRefExpr 0x133808888 <col:12> 'int ()' Function 0x1331285c8 'REALLOC_ARRAY' 'int ()'         | | |-CXXDependentScopeMemberExpr 0x1338088c8 <col:27, col:35> '<dependent type>' contains-errors lvalue ->in_string         | | | `-RecoveryExpr 0x1338088a8 <col:27> '<dependent type>' contains-errors lvalue         | | |-RecoveryExpr 0x133808978 <col:46> '<dependent type>' contains-errors lvalue         | | `-RecoveryExpr 0x133808998 <col:61> '<dependent type>' contains-errors lvalue         | `-ReturnStmt 0x133808a28 <line:20:2, col:9>         |   `-RecoveryExpr 0x133808a08 <col:9> '<dependent type>' contains-errors lvalue         `-IfStmt 0x133809040 <line:22:7, line:38:2> has_else           |-CXXDependentScopeMemberExpr 0x133808a78 <line:22:12, col:20> '<dependent type>' contains-errors lvalue ->separate_out           | `-RecoveryExpr 0x133808a58 <col:12> '<dependent type>' contains-errors lvalue           |-CompoundStmt 0x133808da8 <line:23:9, line:28:2>           | |-IfStmt 0x133808c70 <line:24:4, line:25:13>           | | |-CallExpr 0x133808bf0 <line:24:9, col:75> '<dependent type>' contains-errors           | | | |-DeclRefExpr 0x133808ac0 <col:9> 'int ()' Function 0x1331285c8 'REALLOC_ARRAY' 'int ()'           | | | |-CXXDependentScopeMemberExpr 0x133808b00 <col:24, col:32> '<dependent type>' contains-errors lvalue ->alt_string           | | | | `-RecoveryExpr 0x133808ae0 <col:24> '<dependent type>' contains-errors lvalue           | | | |-RecoveryExpr 0x133808bb0 <col:44> '<dependent type>' contains-errors lvalue           | | | `-RecoveryExpr 0x133808bd0 <col:59> '<dependent type>' contains-errors lvalue           | | `-ReturnStmt 0x133808c60 <line:25:6, col:13>           | |   `-RecoveryExpr 0x133808c40 <col:13> '<dependent type>' contains-errors lvalue           | `-BinaryOperator 0x133808d88 <line:27:4, col:33> '<dependent type>' contains-errors '='           |   |-CXXDependentScopeMemberExpr 0x133808cd8 <col:4, col:12> '<dependent type>' contains-errors lvalue ->out_string           |   | `-RecoveryExpr 0x133808cb0 <col:4> '<dependent type>' contains-errors lvalue           |   |   `-DeclRefExpr 0x133808c90 <col:4> 'int' lvalue ParmVar 0x1331280f0 'buffer' 'int'           |   `-CXXDependentScopeMemberExpr 0x133808d40 <col:25, col:33> '<dependent type>' contains-errors lvalue ->alt_string           |     `-RecoveryExpr 0x133808d20 <col:25> '<dependent type>' contains-errors lvalue           `-CompoundStmt 0x133809020 <line:30:9, line:38:2>             |-BinaryOperator 0x133808ec0 <line:31:4, col:33> '<dependent type>' contains-errors '='             | |-CXXDependentScopeMemberExpr 0x133808e10 <col:4, col:12> '<dependent type>' contains-errors lvalue ->out_string             | | `-RecoveryExpr 0x133808de8 <col:4> '<dependent type>' contains-errors lvalue             | |   `-DeclRefExpr 0x133808dc8 <col:4> 'int' lvalue ParmVar 0x1331280f0 'buffer' 'int'             | `-CXXDependentScopeMemberExpr 0x133808e78 <col:25, col:33> '<dependent type>' contains-errors lvalue ->in_string             |   `-RecoveryExpr 0x133808e58 <col:25> '<dependent type>' contains-errors lvalue             `-IfStmt 0x133809000 <line:33:4, line:37:6>               |-CXXDependentScopeMemberExpr 0x133808f00 <line:33:9, col:17> '<dependent type>' contains-errors lvalue ->alt_string               | `-RecoveryExpr 0x133808ee0 <col:9> '<dependent type>' contains-errors lvalue               `-CompoundStmt 0x133808ff0 <line:34:6, line:37:6> ","20715":"`-FunctionDecl 0x13980dd98  line:1:1 pq_peekbyte 'int (void)'   `-CompoundStmt 0x13980e1b8 <line:2:1, line:9:1>     `-WhileStmt 0x13980e168 <line:3:2, line:7:2>       |-BinaryOperator 0x13980df30 <line:3:9, col:26> 'int' contains-errors '>='       | |-RecoveryExpr 0x13980def0 <col:9> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x13980df10 <col:26> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x13980e150 <line:4:2, line:7:2>         `-IfStmt 0x13980e130 <line:5:3, line:6:11>           |-CallExpr 0x13980e0c8 <line:5:7, col:18> 'int'           | `-ImplicitCastExpr 0x13980e0b0 <col:7> 'int (*)()' <FunctionToPointerDecay>           |   `-DeclRefExpr 0x13980e060 <col:7> 'int ()' Function 0x13980dfa8 'pq_recvbuf' 'int ()'           `-ReturnStmt 0x13980e120 <line:6:4, col:11>             `-RecoveryExpr 0x13980e100 <col:11> '<dependent type>' contains-errors lvalue ","20300":"`-FunctionDecl 0x15b141838  line:1:14 invalid mem_devnode 'char *(struct device *, int *)' static   |-ParmVarDecl 0x15b128648 <col:26, col:41> col:41 used dev 'struct device *'   |-ParmVarDecl 0x15b128718 <col:46, col:55> col:55 invalid mode 'int *'   `-CompoundStmt 0x15b141ca0 <line:2:1, line:6:1>     `-ReturnStmt 0x15b141c90 <line:5:2, col:9>       `-RecoveryExpr 0x15b141c70 <col:9> '<dependent type>' contains-errors lvalue ","20559":"`-FunctionDecl 0x125822350  line:1:13 sco_conn_ready 'void (struct sco_conn *)' static   |-ParmVarDecl 0x125822248 <col:28, col:45> col:45 used conn 'struct sco_conn *'   `-CompoundStmt 0x1260091d0 <line:2:1, line:48:1>     |-DeclStmt 0x12583a838 <line:3:2, col:21>     | |-RecordDecl 0x12583a648 <col:2, col:9> col:9 struct sock     | `-VarDecl 0x12583a7b8 <col:2, col:15> col:15 used parent 'struct sock *'     |-DeclStmt 0x12583a9a0 <line:4:2, col:28>     | `-VarDecl 0x12583a8d8 <col:2, col:26> col:15 used sk 'struct sock *' cinit     |   `-RecoveryExpr 0x12583a978 <col:20, col:26> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12583a940 <col:20> 'struct sco_conn *' lvalue ParmVar 0x125822248 'conn' 'struct sco_conn *'     |-CallExpr 0x12583abc8 <line:6:2, col:20> 'int'     | |-ImplicitCastExpr 0x12583abb0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12583aae0 <col:2> 'int ()' Function 0x12583aa28 'BT_DBG' 'int ()'     | |-ImplicitCastExpr 0x12583abf8 <col:9> 'char *' <ArrayToPointerDecay>     | | `-StringLiteral 0x12583ab40 <col:9> 'char[4]' lvalue \"STR\"     | `-ImplicitCastExpr 0x12583ac10 <col:16> 'struct sco_conn *' <LValueToRValue>     |   `-DeclRefExpr 0x12583ab60 <col:16> 'struct sco_conn *' lvalue ParmVar 0x125822248 'conn' 'struct sco_conn *'     |-CallExpr 0x12583ad60 <line:8:2, col:20> 'int'     | |-ImplicitCastExpr 0x12583ad48 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12583ad08 <col:2> 'int ()' Function 0x12583ac50 'sco_conn_lock' 'int ()'     | `-ImplicitCastExpr 0x12583ad88 <col:16> 'struct sco_conn *' <LValueToRValue>     |   `-DeclRefExpr 0x12583ad28 <col:16> 'struct sco_conn *' lvalue ParmVar 0x125822248 'conn' 'struct sco_conn *'     |-IfStmt 0x126009008 <line:10:2, line:44:2> has_else     | |-ImplicitCastExpr 0x12583adc0 <line:10:6> 'struct sock *' contains-errors <LValueToRValue>     | | `-DeclRefExpr 0x12583ada0 <col:6> 'struct sock *' contains-errors lvalue Var 0x12583a8d8 'sk' 'struct sock *'     | |-CompoundStmt 0x12583b3c0 <col:10, line:16:2>     | | |-CallExpr 0x12583af10 <line:11:3, col:26> 'int' contains-errors     | | | |-ImplicitCastExpr 0x12583aef8 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x12583aeb8 <col:3> 'int ()' Function 0x12583ae00 'sco_sock_clear_timer' 'int ()'     | | | `-ImplicitCastExpr 0x12583af38 <col:24> 'struct sock *' contains-errors <LValueToRValue>     | | |   `-DeclRefExpr 0x12583aed8 <col:24> 'struct sock *' contains-errors lvalue Var 0x12583a8d8 'sk' 'struct sock *'     | | |-CallExpr 0x12583b088 <line:12:3, col:18> 'int' contains-errors     | | | |-ImplicitCastExpr 0x12583b070 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x12583b030 <col:3> 'int ()' Function 0x12583af78 'bh_lock_sock' 'int ()'     | | | `-ImplicitCastExpr 0x12583b0b0 <col:16> 'struct sock *' contains-errors <LValueToRValue>     | | |   `-DeclRefExpr 0x12583b050 <col:16> 'struct sock *' contains-errors lvalue Var 0x12583a8d8 'sk' 'struct sock *'     | | |-BinaryOperator 0x12583b180 <line:13:3, col:18> '<dependent type>' contains-errors '='     | | | |-RecoveryExpr 0x12583b100 <col:3, col:7> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x12583b0c8 <col:3> 'struct sock *' contains-errors lvalue Var 0x12583a8d8 'sk' 'struct sock *'     | | | `-RecoveryExpr 0x12583b160 <col:18> '<dependent type>' contains-errors lvalue     | | |-CallExpr 0x12583b220 <line:14:3, col:25> '<dependent type>' contains-errors     | | | |-RecoveryExpr 0x12583b1d8 <col:3, col:7> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x12583b1a0 <col:3> 'struct sock *' contains-errors lvalue Var 0x12583a8d8 'sk' 'struct sock *'     | | | `-DeclRefExpr 0x12583b200 <col:23> 'struct sock *' contains-errors lvalue Var 0x12583a8d8 'sk' 'struct sock *'     | | `-CallExpr 0x12583b380 <line:15:3, col:20> 'int' contains-errors     | |   |-ImplicitCastExpr 0x12583b368 <col:3> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x12583b328 <col:3> 'int ()' Function 0x12583b270 'bh_unlock_sock' 'int ()'     | |   `-ImplicitCastExpr 0x12583b3a8 <col:18> 'struct sock *' contains-errors <LValueToRValue>     | |     `-DeclRefExpr 0x12583b348 <col:18> 'struct sock *' contains-errors lvalue Var 0x12583a8d8 'sk' 'struct sock *'     | `-CompoundStmt 0x126008f98 <line:16:9, line:44:2>     |   |-BinaryOperator 0x12583b5a0 <line:17:3, col:41> 'struct sock *' contains-errors '='     |   | |-DeclRefExpr 0x12583b3f8 <col:3> 'struct sock *' lvalue Var 0x12583a7b8 'parent' 'struct sock *'     |   | `-CallExpr 0x12583b578 <col:12, col:41> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x12583b4f8 <col:12> 'int ()' Function 0x12583b440 'sco_get_sock_listen' 'int ()'     |   |   `-RecoveryExpr 0x12583b550 <col:32, col:38> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x12583b518 <col:32> 'struct sco_conn *' lvalue ParmVar 0x125822248 'conn' 'struct sco_conn *'     |   |-IfStmt 0x125033280 <line:18:3, line:19:9>     |   | |-UnaryOperator 0x125033200 <line:18:7, col:8> 'int' prefix '!' cannot overflow     |   | | `-ImplicitCastExpr 0x12583b5e0 <col:8> 'struct sock *' <LValueToRValue>     |   | |   `-DeclRefExpr 0x12583b5c0 <col:8> 'struct sock *' lvalue Var 0x12583a7b8 'parent' 'struct sock *'     |   | `-GotoStmt 0x125033268 <line:19:4, col:9> 'done' 0x125033218     |   |-CallExpr 0x1250332f8 <line:21:3, col:22> 'int'     |   | |-ImplicitCastExpr 0x1250332e0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x1250332a0 <col:3> 'int ()' Function 0x12583af78 'bh_lock_sock' 'int ()'     |   | `-ImplicitCastExpr 0x125033320 <col:16> 'struct sock *' <LValueToRValue>     |   |   `-DeclRefExpr 0x1250332c0 <col:16> 'struct sock *' lvalue Var 0x12583a7b8 'parent' 'struct sock *'     |   |-BinaryOperator 0x1250337c8 <line:23:3, line:24:28> 'struct sock *' contains-errors '='     |   | |-DeclRefExpr 0x125033338 <line:23:3> 'struct sock *' contains-errors lvalue Var 0x12583a8d8 'sk' 'struct sock *'     |   | `-CallExpr 0x125033788 <col:8, line:24:28> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x125033438 <line:23:8> 'int ()' Function 0x125033380 'sco_sock_alloc' 'int ()'     |   |   |-CallExpr 0x1250336e8 <col:23, col:38> 'int'     |   |   | |-ImplicitCastExpr 0x1250336d0 <col:23> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x125033538 <col:23> 'int ()' Function 0x125033480 'sock_net' 'int ()'     |   |   | `-ImplicitCastExpr 0x125033710 <col:32> 'struct sock *' <LValueToRValue>     |   |   |   `-DeclRefExpr 0x125033558 <col:32> 'struct sock *' lvalue Var 0x12583a7b8 'parent' 'struct sock *'     |   |   |-RecoveryExpr 0x125033728 <col:41> '<dependent type>' contains-errors lvalue     |   |   |-RecoveryExpr 0x125033748 <line:24:5> '<dependent type>' contains-errors lvalue     |   |   `-RecoveryExpr 0x125033768 <col:18> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x125033908 <line:25:3, line:28:3>     |   | |-UnaryOperator 0x125033820 <line:25:7, col:8> 'int' contains-errors prefix '!' cannot overflow     |   | | `-ImplicitCastExpr 0x125033808 <col:8> 'struct sock *' contains-errors <LValueToRValue>     |   | |   `-DeclRefExpr 0x1250337e8 <col:8> 'struct sock *' contains-errors lvalue Var 0x12583a8d8 'sk' 'struct sock *'     |   | `-CompoundStmt 0x1250338e8 <col:12, line:28:3>     |   |   |-CallExpr 0x125033890 <line:26:4, col:25> 'int'     |   |   | |-ImplicitCastExpr 0x125033878 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x125033838 <col:4> 'int ()' Function 0x12583b270 'bh_unlock_sock' 'int ()'     |   |   | `-ImplicitCastExpr 0x1250338b8 <col:19> 'struct sock *' <LValueToRValue>     |   |   |   `-DeclRefExpr 0x125033858 <col:19> 'struct sock *' lvalue Var 0x12583a7b8 'parent' 'struct sock *'     |   |   `-GotoStmt 0x1250338d0 <line:27:4, col:9> 'done' 0x125033218     |   |-CallExpr 0x125033a80 <line:30:3, col:27> 'int' contains-errors     |   | |-ImplicitCastExpr 0x125033a68 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x125033a08 <col:3> 'int ()' Function 0x125033950 'sco_sock_init' 'int ()'     |   | |-ImplicitCastExpr 0x125033ab0 <col:17> 'struct sock *' contains-errors <LValueToRValue>     |   | | `-DeclRefExpr 0x125033a28 <col:17> 'struct sock *' contains-errors lvalue Var 0x12583a8d8 'sk' 'struct sock *'     |   | `-ImplicitCastExpr 0x125033ac8 <col:21> 'struct sock *' <LValueToRValue>     |   |   `-DeclRefExpr 0x125033a48 <col:21> 'struct sock *' lvalue Var 0x12583a7b8 'parent' 'struct sock *'     |   |-CallExpr 0x125033df8 <line:32:3, col:35> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x125033bc0 <col:3> 'int ()' Function 0x125033b08 'bacpy' 'int ()'     |   | |-UnaryOperator 0x125033d80 <col:9, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-RecoveryExpr 0x125033d58 <col:10, col:21> '<dependent type>' contains-errors lvalue     |   | |   `-CallExpr 0x125033d18 <col:10, col:18> 'int' contains-errors     |   | |     |-ImplicitCastExpr 0x125033d00 <col:10> 'int (*)()' <FunctionToPointerDecay>     |   | |     | `-DeclRefExpr 0x125033cc0 <col:10> 'int ()' Function 0x125033c08 'bt_sk' 'int ()'     |   | |     `-ImplicitCastExpr 0x125033d40 <col:16> 'struct sock *' contains-errors <LValueToRValue>     |   | |       `-DeclRefExpr 0x125033ce0 <col:16> 'struct sock *' contains-errors lvalue Var 0x12583a8d8 'sk' 'struct sock *'     |   | `-RecoveryExpr 0x125033dd0 <col:26, col:32> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x125033d98 <col:26> 'struct sco_conn *' lvalue ParmVar 0x125822248 'conn' 'struct sco_conn *'     |   |-CallExpr 0x125033f80 <line:33:3, col:35> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x125033e28 <col:3> 'int ()' Function 0x125033b08 'bacpy' 'int ()'     |   | |-UnaryOperator 0x125033f08 <col:9, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-RecoveryExpr 0x125033ee0 <col:10, col:21> '<dependent type>' contains-errors lvalue     |   | |   `-CallExpr 0x125033ea0 <col:10, col:18> 'int' contains-errors     |   | |     |-ImplicitCastExpr 0x125033e88 <col:10> 'int (*)()' <FunctionToPointerDecay>     |   | |     | `-DeclRefExpr 0x125033e48 <col:10> 'int ()' Function 0x125033c08 'bt_sk' 'int ()'     |   | |     `-ImplicitCastExpr 0x125033ec8 <col:16> 'struct sock *' contains-errors <LValueToRValue>     |   | |       `-DeclRefExpr 0x125033e68 <col:16> 'struct sock *' contains-errors lvalue Var 0x12583a8d8 'sk' 'struct sock *'     |   | `-RecoveryExpr 0x125033f58 <col:26, col:32> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x125033f20 <col:26> 'struct sco_conn *' lvalue ParmVar 0x125822248 'conn' 'struct sco_conn *'     |   |-CallExpr 0x125034110 <line:35:3, col:27> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x125034090 <col:3> 'int ()' Function 0x125033fd8 'hci_conn_hold' 'int ()'     |   | `-RecoveryExpr 0x1250340e8 <col:17, col:23> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x1250340b0 <col:17> 'struct sco_conn *' lvalue ParmVar 0x125822248 'conn' 'struct sco_conn *'     |   |-CallExpr 0x126008d50 <line:36:3, col:34> 'int' contains-errors     |   | |-ImplicitCastExpr 0x126008d38 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x126008cb8 <col:3> 'int ()' Function 0x126008c00 '__sco_chan_add' 'int ()'     |   | |-ImplicitCastExpr 0x126008d88 <col:18> 'struct sco_conn *' <LValueToRValue>     |   | | `-DeclRefExpr 0x126008cd8 <col:18> 'struct sco_conn *' lvalue ParmVar 0x125822248 'conn' 'struct sco_conn *'     |   | |-ImplicitCastExpr 0x126008da0 <col:24> 'struct sock *' contains-errors <LValueToRValue>     |   | | `-DeclRefExpr 0x126008cf8 <col:24> 'struct sock *' contains-errors lvalue Var 0x12583a8d8 'sk' 'struct sock *'     |   | `-ImplicitCastExpr 0x126008db8 <col:28> 'struct sock *' <LValueToRValue>     |   |   `-DeclRefExpr 0x126008d18 <col:28> 'struct sock *' lvalue Var 0x12583a7b8 'parent' 'struct sock *'     |   |-CallExpr 0x126008ed0 <line:41:3, col:34> '<dependent type>' contains-errors     |   | |-RecoveryExpr 0x126008e68 <col:3, col:11> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x126008e30 <col:3> 'struct sock *' lvalue Var 0x12583a7b8 'parent' 'struct sock *'     |   | |-DeclRefExpr 0x126008e90 <col:25> 'struct sock *' lvalue Var 0x12583a7b8 'parent' 'struct sock *'     |   | `-IntegerLiteral 0x126008eb0 <col:33> 'int' 1     |   `-CallExpr 0x126008f58 <line:43:3, col:24> 'int'     |     |-ImplicitCastExpr 0x126008f40 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x126008f00 <col:3> 'int ()' Function 0x12583b270 'bh_unlock_sock' 'int ()'     |     `-ImplicitCastExpr 0x126008f80 <col:18> 'struct sock *' <LValueToRValue>     |       `-DeclRefExpr 0x126008f20 <col:18> 'struct sock *' lvalue Var 0x12583a7b8 'parent' 'struct sock *'     `-LabelStmt 0x1260091b0 <line:46:1, line:47:22> 'done'       `-CallExpr 0x126009170 <col:2, col:22> 'int'         |-ImplicitCastExpr 0x126009158 <col:2> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x126009118 <col:2> 'int ()' Function 0x126009060 'sco_conn_unlock' 'int ()'         `-ImplicitCastExpr 0x126009198 <col:18> 'struct sco_conn *' <LValueToRValue>           `-DeclRefExpr 0x126009138 <col:18> 'struct sco_conn *' lvalue ParmVar 0x125822248 'conn' 'struct sco_conn *' ","20453":"`-FunctionDecl 0x132928bc0  line:1:6 invalid add_page 'void (int)'   |-ParmVarDecl 0x132928af0 <col:15, <invalid sloc>> col:37 invalid 'int'   `-CompoundStmt 0x1330092b0 <line:4:1, line:68:1>     |-BinaryOperator 0x132929080 <line:14:5, col:32> 'unsigned long' contains-errors '='     | |-UnaryExprOrTypeTraitExpr 0x132928fd8 <col:5, col:12> 'unsigned long' contains-errors sizeof     | | `-RecoveryExpr 0x132928fb8 <col:12> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x132929060 <col:20, col:32> '<dependent type>' contains-errors     |   `-CXXDependentScopeMemberExpr 0x132929018 <col:20, col:23> '<dependent type>' contains-errors lvalue ->getWidth     |     `-RecoveryExpr 0x132928ff8 <col:20> '<dependent type>' contains-errors lvalue     `-BinaryOperator 0x133008c68 <line:15:5, col:34> 'unsigned long' contains-errors '='       |-UnaryExprOrTypeTraitExpr 0x132929198 <col:5, col:12> 'unsigned long' contains-errors sizeof       | `-RecoveryExpr 0x132929178 <col:12> '<dependent type>' contains-errors lvalue       `-CallExpr 0x133008c48 <col:21, col:34> '<dependent type>' contains-errors         `-CXXDependentScopeMemberExpr 0x133008c00 <col:21, col:24> '<dependent type>' contains-errors lvalue ->getHeight           `-RecoveryExpr 0x1329291b8 <col:21> '<dependent type>' contains-errors lvalue ","21238":"`-FunctionDecl 0x13f00e358  line:1:1 xfs_acl_from_disk 'int (struct xfs_acl *)'   |-ParmVarDecl 0x13f00e248 <col:19, col:35> col:35 used aclp 'struct xfs_acl *'   `-CompoundStmt 0x13f029cb8 <line:2:1, line:42:1>     |-DeclStmt 0x13f026838 <line:3:2, col:31>     | |-RecordDecl 0x13f026650 <col:2, col:9> col:9 struct posix_acl_entry     | `-VarDecl 0x13f0267b8 <col:2, col:26> col:26 used acl_e 'struct posix_acl_entry *'     |-DeclStmt 0x13f026a38 <line:4:2, col:23>     | |-RecordDecl 0x13f026850 <col:2, col:9> col:9 struct posix_acl     | `-VarDecl 0x13f0269b8 <col:2, col:20> col:20 used acl 'struct posix_acl *'     |-DeclStmt 0x13f026c38 <line:5:2, col:27>     | |-RecordDecl 0x13f026a50 <col:2, col:9> col:9 struct xfs_acl_entry     | `-VarDecl 0x13f026bb8 <col:2, col:24> col:24 used ace 'struct xfs_acl_entry *'     |-DeclStmt 0x13f026d68 <line:6:2, col:14>     | |-VarDecl 0x13f026c68 <col:2, col:6> col:6 used count 'int'     | `-VarDecl 0x13f026ce8 <col:2, col:13> col:13 used i 'int'     |-BinaryOperator 0x13f026f78 <line:8:2, col:35> 'int' contains-errors '='     | |-DeclRefExpr 0x13f026d80 <col:2> 'int' lvalue Var 0x13f026c68 'count' 'int'     | `-CallExpr 0x13f026f50 <col:10, col:35> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13f026ed0 <col:10> 'int ()' Function 0x13f026e18 'be32_to_cpu' 'int ()'     |   `-RecoveryExpr 0x13f026f28 <col:22, col:28> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13f026ef0 <col:22> 'struct xfs_acl *' lvalue ParmVar 0x13f00e248 'aclp' 'struct xfs_acl *'     |-BinaryOperator 0x13f027190 <line:10:2, col:41> 'struct posix_acl *' contains-errors '='     | |-DeclRefExpr 0x13f026f98 <col:2> 'struct posix_acl *' lvalue Var 0x13f0269b8 'acl' 'struct posix_acl *'     | `-CallExpr 0x13f027160 <col:8, col:41> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13f027098 <col:8> 'int ()' Function 0x13f026fe0 'posix_acl_alloc' 'int ()'     |   |-DeclRefExpr 0x13f0270b8 <col:24> 'int' lvalue Var 0x13f026c68 'count' 'int'     |   `-RecoveryExpr 0x13f027140 <col:31> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13f0273f8 <line:11:2, line:12:25>     | |-UnaryOperator 0x13f0271e8 <line:11:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13f0271d0 <col:7> 'struct posix_acl *' <LValueToRValue>     | |   `-DeclRefExpr 0x13f0271b0 <col:7> 'struct posix_acl *' lvalue Var 0x13f0269b8 'acl' 'struct posix_acl *'     | `-ReturnStmt 0x13f0273e8 <line:12:3, col:25>     |   `-CallExpr 0x13f0273c0 <col:10, col:25> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x13f0272e0 <col:10> 'int ()' Function 0x13f027228 'ERR_PTR' 'int ()'     |     `-UnaryOperator 0x13f0273a8 <col:18, col:19> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x13f027390 <col:19> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x13f027370 <col:19> '<dependent type>' contains-errors lvalue     |-ForStmt 0x13f029a38 <line:14:2, line:36:2>     | |-BinaryOperator 0x13f027458 <line:14:7, col:11> 'int' '='     | | |-DeclRefExpr 0x13f027418 <col:7> 'int' lvalue Var 0x13f026ce8 'i' 'int'     | | `-IntegerLiteral 0x13f027438 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x13f0274e8 <col:14, col:18> 'int' '<'     | | |-ImplicitCastExpr 0x13f0274b8 <col:14> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x13f027478 <col:14> 'int' lvalue Var 0x13f026ce8 'i' 'int'     | | `-ImplicitCastExpr 0x13f0274d0 <col:18> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x13f027498 <col:18> 'int' lvalue Var 0x13f026c68 'count' 'int'     | |-UnaryOperator 0x13f027528 <col:25, col:26> 'int' postfix '++'     | | `-DeclRefExpr 0x13f027508 <col:25> 'int' lvalue Var 0x13f026ce8 'i' 'int'     | `-CompoundStmt 0x13f029a00 <col:30, line:36:2>     |   |-BinaryOperator 0x13f029250 <line:15:3, col:28> 'struct posix_acl_entry *' contains-errors '='     |   | |-DeclRefExpr 0x13f027540 <col:3> 'struct posix_acl_entry *' lvalue Var 0x13f0267b8 'acl_e' 'struct posix_acl_entry *'     |   | `-UnaryOperator 0x13f029238 <col:11, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-ArraySubscriptExpr 0x13f029218 <col:12, col:28> '<dependent type>' contains-errors lvalue     |   |     |-ImplicitCastExpr 0x13f0275e0 <col:12, col:17> '<dependent type>' contains-errors <LValueToRValue>     |   |     | `-RecoveryExpr 0x13f027598 <col:12, col:17> '<dependent type>' contains-errors lvalue     |   |     |   `-DeclRefExpr 0x13f027560 <col:12> 'struct posix_acl *' lvalue Var 0x13f0269b8 'acl' 'struct posix_acl *'     |   |     `-ImplicitCastExpr 0x13f029200 <col:27> 'int' <LValueToRValue>     |   |       `-DeclRefExpr 0x13f0275c0 <col:27> 'int' lvalue Var 0x13f026ce8 'i' 'int'     |   |-BinaryOperator 0x13f029378 <line:16:3, col:27> 'struct xfs_acl_entry *' contains-errors '='     |   | |-DeclRefExpr 0x13f029270 <col:3> 'struct xfs_acl_entry *' lvalue Var 0x13f026bb8 'ace' 'struct xfs_acl_entry *'     |   | `-UnaryOperator 0x13f029360 <col:9, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-ArraySubscriptExpr 0x13f029340 <col:10, col:27> '<dependent type>' contains-errors lvalue     |   |     |-ImplicitCastExpr 0x13f029310 <col:10, col:16> '<dependent type>' contains-errors <LValueToRValue>     |   |     | `-RecoveryExpr 0x13f0292c8 <col:10, col:16> '<dependent type>' contains-errors lvalue     |   |     |   `-DeclRefExpr 0x13f029290 <col:10> 'struct xfs_acl *' lvalue ParmVar 0x13f00e248 'aclp' 'struct xfs_acl *'     |   |     `-ImplicitCastExpr 0x13f029328 <col:26> 'int' <LValueToRValue>     |   |       `-DeclRefExpr 0x13f0292f0 <col:26> 'int' lvalue Var 0x13f026ce8 'i' 'int'     |   |-BinaryOperator 0x13f0294a0 <line:19:3, col:41> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x13f0293d0 <col:3, col:10> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x13f029398 <col:3> 'struct posix_acl_entry *' lvalue Var 0x13f0267b8 'acl_e' 'struct posix_acl_entry *'     |   | `-CallExpr 0x13f029478 <col:18, col:41> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x13f0293f8 <col:18> 'int ()' Function 0x13f026e18 'be32_to_cpu' 'int ()'     |   |   `-RecoveryExpr 0x13f029450 <col:30, col:35> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x13f029418 <col:30> 'struct xfs_acl_entry *' lvalue Var 0x13f026bb8 'ace' 'struct xfs_acl_entry *'     |   |-BinaryOperator 0x13f0296a8 <line:20:3, col:43> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x13f0294f8 <col:3, col:10> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x13f0294c0 <col:3> 'struct posix_acl_entry *' lvalue Var 0x13f0267b8 'acl_e' 'struct posix_acl_entry *'     |   | `-CallExpr 0x13f029680 <col:19, col:43> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x13f029600 <col:19> 'int ()' Function 0x13f029548 'be16_to_cpu' 'int ()'     |   |   `-RecoveryExpr 0x13f029658 <col:31, col:36> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x13f029620 <col:31> 'struct xfs_acl_entry *' lvalue Var 0x13f026bb8 'ace' 'struct xfs_acl_entry *'     |   `-SwitchStmt 0x13f029740 <line:22:3, line:35:3>     |     |-ImplicitCastExpr 0x13f029728 <line:22:11, col:18> '<dependent type>' contains-errors <LValueToRValue>     |     | `-RecoveryExpr 0x13f029700 <col:11, col:18> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x13f0296c8 <col:11> 'struct posix_acl_entry *' lvalue Var 0x13f0267b8 'acl_e' 'struct posix_acl_entry *'     |     `-CompoundStmt 0x13f0299d0 <col:25, line:35:3>     |       |-BinaryOperator 0x13f0298a0 <line:25:4, col:40> '<dependent type>' contains-errors '='     |       | |-RecoveryExpr 0x13f0297d0 <col:4, col:11> '<dependent type>' contains-errors lvalue     |       | | `-DeclRefExpr 0x13f029798 <col:4> 'struct posix_acl_entry *' lvalue Var 0x13f0267b8 'acl_e' 'struct posix_acl_entry *'     |       | `-CallExpr 0x13f029878 <col:18, col:40> '<dependent type>' contains-errors     |       |   |-DeclRefExpr 0x13f0297f8 <col:18> 'int ()' Function 0x13f026e18 'be32_to_cpu' 'int ()'     |       |   `-RecoveryExpr 0x13f029850 <col:30, col:35> '<dependent type>' contains-errors lvalue     |       |     `-DeclRefExpr 0x13f029818 <col:30> 'struct xfs_acl_entry *' lvalue Var 0x13f026bb8 'ace' 'struct xfs_acl_entry *'     |       |-BreakStmt 0x13f0298c0 <line:26:4>     |       |-BreakStmt 0x13f029940 <line:32:4>     |       `-DefaultStmt 0x13f0299b0 <line:33:3, line:34:9>     |         `-GotoStmt 0x13f029998 <col:4, col:9> 'fail' 0x13f029948     |-ReturnStmt 0x13f029ac0 <line:37:2, col:9>     | `-ImplicitCastExpr 0x13f029aa8 <col:9> 'int' <PointerToIntegral>     |   `-ImplicitCastExpr 0x13f029a90 <col:9> 'struct posix_acl *' <LValueToRValue>     |     `-DeclRefExpr 0x13f029a70 <col:9> 'struct posix_acl *' lvalue Var 0x13f0269b8 'acl' 'struct posix_acl *'     `-LabelStmt 0x13f029c78 <line:39:1, line:40:23> 'fail'       `-CallExpr 0x13f029c38 <col:2, col:23> 'int'         |-ImplicitCastExpr 0x13f029c20 <col:2> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x13f029bb0 <col:2> 'int ()' Function 0x13f029af8 'posix_acl_release' 'int ()'         `-ImplicitCastExpr 0x13f029c60 <col:20> 'struct posix_acl *' <LValueToRValue>           `-DeclRefExpr 0x13f029bd0 <col:20> 'struct posix_acl *' lvalue Var 0x13f0269b8 'acl' 'struct posix_acl *' ","20307":"`-FunctionDecl 0x128140b28  line:1:12 put_v4l2_format32 'int (struct v4l2_format *, struct v4l2_format32)' static   |-ParmVarDecl 0x128128648 <col:30, col:50> col:50 used kp 'struct v4l2_format *'   |-ParmVarDecl 0x128140a00 <col:54, col:75> col:75 invalid __user 'struct v4l2_format32'   `-CompoundStmt 0x128141098 <line:2:1, line:6:1>     |-IfStmt 0x128140eb0 <line:3:2, line:4:11>     | |-RecoveryExpr 0x128140de8 <line:3:6, col:46> '_Bool' contains-errors     | `-ReturnStmt 0x128140ea0 <line:4:3, col:11>     |   `-UnaryOperator 0x128140e88 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x128140e70 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x128140e50 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x128141088 <line:5:2, col:35>       `-CallExpr 0x128141058 <col:9, col:35> '<dependent type>' contains-errors         |-DeclRefExpr 0x128140fb0 <col:9> 'int ()' Function 0x128140ef8 '__put_v4l2_format32' 'int ()'         |-DeclRefExpr 0x128140fd0 <col:29> 'struct v4l2_format *' lvalue ParmVar 0x128128648 'kp' 'struct v4l2_format *'         `-RecoveryExpr 0x128141038 <col:33> '<dependent type>' contains-errors lvalue ","20600":"`-FunctionDecl 0x11f80de38  line:1:1 TEST_P 'int (int, int)'   |-ParmVarDecl 0x11f80dd58 <col:8> col:8 Http2CodecImplTest 'int'   |-ParmVarDecl 0x11f80dcd8 <col:28> col:28 ShutdownNotice 'int'   `-CompoundStmt 0x11f828b38 <col:44, line:16:1>     |-CallExpr 0x11f80e0c8 <line:2:3, col:14> 'int'     | `-ImplicitCastExpr 0x11f80e0b0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x11f80e060 <col:3> 'int ()' Function 0x11f80dfa8 'initialize' 'int ()'     |-RecoveryExpr 0x11f80e118 <line:5:3> '<dependent type>' contains-errors lvalue     |-CallExpr 0x11f828870 <line:6:3, col:56> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11f80e218 <col:3> 'int ()' Function 0x11f80e160 'EXPECT_CALL' 'int ()'     | |-RecoveryExpr 0x11f80e3e0 <col:15> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x11f828840 <col:33, col:55> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x11f80e330 <col:33> 'int ()' Function 0x11f80e278 'decodeHeaders_' 'int ()'     |   |-RecoveryExpr 0x11f828800 <col:48> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x11f828820 <col:51> '<dependent type>' contains-errors lvalue     `-CallExpr 0x11f828ac8 <line:9:3, col:44> '<dependent type>' contains-errors       |-DeclRefExpr 0x11f8288d0 <col:3> 'int ()' Function 0x11f80e160 'EXPECT_CALL' 'int ()'       |-RecoveryExpr 0x11f828a70 <col:15> '<dependent type>' contains-errors lvalue       `-CallExpr 0x11f828aa8 <col:34, col:43> 'int'         `-ImplicitCastExpr 0x11f828a90 <col:34> 'int (*)()' <FunctionToPointerDecay>           `-DeclRefExpr 0x11f8289e8 <col:34> 'int ()' Function 0x11f828930 'onGoAway' 'int ()' ","20676":"`-FunctionDecl 0x14b827b20  col:11 implicit used strtok 'char *(char *, const char *)' extern   |-ParmVarDecl 0x14b827c20 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x14b827c88 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x14b827bc8 <<invalid sloc>> Implicit 899 ","20217":"`-FunctionDecl 0x12f928758  line:1:5 snd_card_disconnect 'int (struct snd_card *)'   |-ParmVarDecl 0x12f928648 <col:25, col:42> col:42 used card 'struct snd_card *'   `-CompoundStmt 0x138008f58 <line:2:1, line:59:1>     |-DeclStmt 0x12f940c38 <line:3:2, col:32>     | |-RecordDecl 0x12f940a50 <col:2, col:9> col:9 struct snd_monitor_file     | `-VarDecl 0x12f940bb8 <col:2, col:27> col:27 used mfile 'struct snd_monitor_file *'     |-IfStmt 0x12f940d60 <line:5:2, line:6:11>     | |-UnaryOperator 0x12f940c88 <line:5:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12f940c70 <col:7> 'struct snd_card *' <LValueToRValue>     | |   `-DeclRefExpr 0x12f940c50 <col:7> 'struct snd_card *' lvalue ParmVar 0x12f928648 'card' 'struct snd_card *'     | `-ReturnStmt 0x12f940d50 <line:6:3, col:11>     |   `-UnaryOperator 0x12f940d38 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12f940d20 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12f940d00 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12f940f28 <line:8:2, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f940e90 <col:2> 'int ()' Function 0x12f940dd8 'spin_lock' 'int ()'     | `-UnaryOperator 0x12f940f10 <col:12, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12f940ee8 <col:13, col:19> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12f940eb0 <col:13> 'struct snd_card *' lvalue ParmVar 0x12f928648 'card' 'struct snd_card *'     |-IfStmt 0x12f9411a0 <line:9:2, line:12:2>     | |-RecoveryExpr 0x12f940f88 <line:9:6, col:12> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12f940f50 <col:6> 'struct snd_card *' lvalue ParmVar 0x12f928648 'card' 'struct snd_card *'     | `-CompoundStmt 0x12f941180 <col:22, line:12:2>     |   |-CallExpr 0x12f941128 <line:10:3, col:32> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12f941090 <col:3> 'int ()' Function 0x12f940fd8 'spin_unlock' 'int ()'     |   | `-UnaryOperator 0x12f941110 <col:15, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x12f9410e8 <col:16, col:22> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x12f9410b0 <col:16> 'struct snd_card *' lvalue ParmVar 0x12f928648 'card' 'struct snd_card *'     |   `-ReturnStmt 0x12f941170 <line:11:3, col:10>     |     `-IntegerLiteral 0x12f941150 <col:10> 'int' 0     |-BinaryOperator 0x12f941240 <line:13:2, col:19> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12f9411f8 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12f9411c0 <col:2> 'struct snd_card *' lvalue ParmVar 0x12f928648 'card' 'struct snd_card *'     | `-IntegerLiteral 0x12f941220 <col:19> 'int' 1     |-CallExpr 0x12f9412f8 <line:14:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f941260 <col:2> 'int ()' Function 0x12f940fd8 'spin_unlock' 'int ()'     | `-UnaryOperator 0x12f9412e0 <col:14, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12f9412b8 <col:15, col:21> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12f941280 <col:15> 'struct snd_card *' lvalue ParmVar 0x12f928648 'card' 'struct snd_card *'     |-CallExpr 0x12f9414b0 <line:17:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f941400 <col:2> 'int ()' Function 0x12f941348 'mutex_lock' 'int ()'     | `-UnaryOperator 0x12f941498 <col:13, col:14> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12f941478 <col:14> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12f941718 <line:19:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f941630 <col:2> 'int ()' Function 0x12f941578 'clear_bit' 'int ()'     | |-RecoveryExpr 0x12f941688 <col:12, col:18> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12f941650 <col:12> 'struct snd_card *' lvalue ParmVar 0x12f928648 'card' 'struct snd_card *'     | `-RecoveryExpr 0x12f9416f8 <col:26> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12f9418d8 <line:20:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f941828 <col:2> 'int ()' Function 0x12f941770 'mutex_unlock' 'int ()'     | `-UnaryOperator 0x12f9418c0 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12f9418a0 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12f941998 <line:24:2, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f941900 <col:2> 'int ()' Function 0x12f940dd8 'spin_lock' 'int ()'     | `-UnaryOperator 0x12f941980 <col:12, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12f941958 <col:13, col:19> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12f941920 <col:13> 'struct snd_card *' lvalue ParmVar 0x12f928648 'card' 'struct snd_card *'     |-CallExpr 0x138008ad8 <line:48:2, col:32> 'int'     | |-ImplicitCastExpr 0x138008ac0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x138008a50 <col:2> 'int ()' Function 0x138008998 'snd_device_disconnect_all' 'int ()'     | `-ImplicitCastExpr 0x138008b00 <col:28> 'struct snd_card *' <LValueToRValue>     |   `-DeclRefExpr 0x138008a70 <col:28> 'struct snd_card *' lvalue ParmVar 0x12f928648 'card' 'struct snd_card *'     |-CallExpr 0x138008c50 <line:50:2, col:31> 'int'     | |-ImplicitCastExpr 0x138008c38 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x138008bf8 <col:2> 'int ()' Function 0x138008b40 'snd_info_card_disconnect' 'int ()'     | `-ImplicitCastExpr 0x138008c78 <col:27> 'struct snd_card *' <LValueToRValue>     |   `-DeclRefExpr 0x138008c18 <col:27> 'struct snd_card *' lvalue ParmVar 0x12f928648 'card' 'struct snd_card *'     |-IfStmt 0x138008f08 <line:51:2, line:54:2>     | |-RecoveryExpr 0x138008cc8 <line:51:6, col:12> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x138008c90 <col:6> 'struct snd_card *' lvalue ParmVar 0x12f928648 'card' 'struct snd_card *'     | `-CompoundStmt 0x138008ef0 <col:24, line:54:2>     |   `-CallExpr 0x138008e68 <line:52:3, col:29> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x138008dd0 <col:3> 'int ()' Function 0x138008d18 'device_del' 'int ()'     |     `-UnaryOperator 0x138008e50 <col:14, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x138008e28 <col:15, col:21> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x138008df0 <col:15> 'struct snd_card *' lvalue ParmVar 0x12f928648 'card' 'struct snd_card *'     `-ReturnStmt 0x138008f48 <line:58:2, col:9>       `-IntegerLiteral 0x138008f28 <col:9> 'int' 0 ","20955":"`-FunctionDecl 0x11f922728  line:1:1 gen8_modify_rpcs 'int (struct intel_context *, struct intel_sseu)'   |-ParmVarDecl 0x12880e248 <col:18, col:40> col:40 used ce 'struct intel_context *'   |-ParmVarDecl 0x11f922600 <col:44, col:62> col:62 invalid sseu 'struct intel_sseu'   `-CompoundStmt 0x12900a748 <line:2:1, line:52:1>     |-DeclStmt 0x11f922ac0 <line:3:2, col:50>     | |-RecordDecl 0x11f922828 <col:2, col:9> col:9 struct drm_i915_private     | `-VarDecl 0x11f922998 <col:2, col:46> col:27 used i915 'struct drm_i915_private *' cinit     |   `-CXXDependentScopeMemberExpr 0x11f922a60 <col:34, col:46> '<dependent type>' contains-errors lvalue ->i915     |     `-RecoveryExpr 0x11f922a38 <col:34, col:38> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x11f922a00 <col:34> 'struct intel_context *' lvalue ParmVar 0x12880e248 'ce' 'struct intel_context *'     |-DeclStmt 0x11f922d60 <line:4:2, col:32>     | |-RecordDecl 0x11f922ad8 <col:2, col:9> col:9 struct i915_request     | |-VarDecl 0x11f922c48 <col:2, col:23> col:23 used rq 'struct i915_request *'     | `-VarDecl 0x11f922cd8 <col:2, col:28> col:28 used prev 'struct i915_request *'     |-DeclStmt 0x11f922e10 <line:6:2, col:9>     | `-VarDecl 0x11f922da8 <col:2, col:6> col:6 used ret 'int'     |-CallExpr 0x11f922fd8 <line:8:2, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11f922f40 <col:2> 'int ()' Function 0x11f922e88 'lockdep_assert_held' 'int ()'     | `-UnaryOperator 0x11f922fc0 <col:22, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x11f922f98 <col:23, col:27> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x11f922f60 <col:23> 'struct intel_context *' lvalue ParmVar 0x12880e248 'ce' 'struct intel_context *'     |-IfStmt 0x11f9231f0 <line:11:2, line:12:10>     | |-UnaryOperator 0x11f9231a8 <line:11:6, col:33> 'int' prefix '!' cannot overflow     | | `-CallExpr 0x11f923168 <col:7, col:33> 'int'     | |   |-ImplicitCastExpr 0x11f923150 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x11f9230e0 <col:7> 'int ()' Function 0x11f923028 'intel_context_is_pinned' 'int ()'     | |   `-ImplicitCastExpr 0x11f923190 <col:31> 'struct intel_context *' <LValueToRValue>     | |     `-DeclRefExpr 0x11f923100 <col:31> 'struct intel_context *' lvalue ParmVar 0x12880e248 'ce' 'struct intel_context *'     | `-ReturnStmt 0x11f9231e0 <line:12:3, col:10>     |   `-IntegerLiteral 0x11f9231c0 <col:10> 'int' 0     |-BinaryOperator 0x11f923598 <line:17:2, col:58> 'struct i915_request *' contains-errors '='     | |-DeclRefExpr 0x11f923388 <col:2> 'struct i915_request *' lvalue Var 0x11f922c48 'rq' 'struct i915_request *'     | `-CallExpr 0x11f923568 <col:7, col:58> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x11f923488 <col:7> 'int ()' Function 0x11f9233d0 'i915_request_alloc' 'int ()'     |   |-RecoveryExpr 0x11f9234e0 <col:26, col:30> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x11f9234a8 <col:26> 'struct intel_context *' lvalue ParmVar 0x12880e248 'ce' 'struct intel_context *'     |   `-RecoveryExpr 0x11f923540 <col:38, col:44> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x11f923508 <col:38> 'struct drm_i915_private *' contains-errors lvalue Var 0x11f922998 'i915' 'struct drm_i915_private *'     |-IfStmt 0x11f923990 <line:18:2, line:21:2>     | |-CallExpr 0x11f923710 <line:18:6, col:15> 'int'     | | |-ImplicitCastExpr 0x11f9236f8 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x11f9236b8 <col:6> 'int ()' Function 0x11f923600 'IS_ERR' 'int ()'     | | `-ImplicitCastExpr 0x11f923738 <col:13> 'struct i915_request *' <LValueToRValue>     | |   `-DeclRefExpr 0x11f9236d8 <col:13> 'struct i915_request *' lvalue Var 0x11f922c48 'rq' 'struct i915_request *'     | `-CompoundStmt 0x11f923970 <col:18, line:21:2>     |   |-BinaryOperator 0x11f9238e8 <line:19:3, col:19> 'int' '='     |   | |-DeclRefExpr 0x11f923750 <col:3> 'int' lvalue Var 0x11f922da8 'ret' 'int'     |   | `-CallExpr 0x11f9238a8 <col:9, col:19> 'int'     |   |   |-ImplicitCastExpr 0x11f923890 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x11f923850 <col:9> 'int ()' Function 0x11f923798 'PTR_ERR' 'int ()'     |   |   `-ImplicitCastExpr 0x11f9238d0 <col:17> 'struct i915_request *' <LValueToRValue>     |   |     `-DeclRefExpr 0x11f923870 <col:17> 'struct i915_request *' lvalue Var 0x11f922c48 'rq' 'struct i915_request *'     |   `-GotoStmt 0x11f923958 <line:20:3, col:8> 'out_put' 0x11f923908     |-BinaryOperator 0x11f923cc8 <line:24:2, line:25:35> 'struct i915_request *' contains-errors '='     | |-DeclRefExpr 0x11f9239b0 <line:24:2> 'struct i915_request *' lvalue Var 0x11f922cd8 'prev' 'struct i915_request *'     | `-CallExpr 0x11f923c98 <col:9, line:25:35> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x11f923ab0 <line:24:9> 'int ()' Function 0x11f9239f8 'i915_active_request_raw' 'int ()'     |   |-UnaryOperator 0x11f923bc0 <col:33, col:54> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-CXXDependentScopeMemberExpr 0x11f923b78 <col:34, col:54> '<dependent type>' contains-errors lvalue ->last_request     |   |   `-CXXDependentScopeMemberExpr 0x11f923b30 <col:34, col:44> '<dependent type>' contains-errors lvalue ->timeline     |   |     `-RecoveryExpr 0x11f923b08 <col:34, col:38> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x11f923ad0 <col:34> 'struct intel_context *' lvalue ParmVar 0x12880e248 'ce' 'struct intel_context *'     |   `-UnaryOperator 0x11f923c80 <line:25:12, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-CXXDependentScopeMemberExpr 0x11f923c38 <col:13, col:23> '<dependent type>' contains-errors lvalue .struct_mutex     |       `-RecoveryExpr 0x11f923c10 <col:13, col:19> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x11f923bd8 <col:13> 'struct drm_i915_private *' contains-errors lvalue Var 0x11f922998 'i915' 'struct drm_i915_private *'     |-IfStmt 0x11f9241f8 <line:26:2, line:30:2>     | |-BinaryOperator 0x11f923eb0 <line:26:6, col:42> 'int' '&&'     | | |-ImplicitCastExpr 0x11f923e98 <col:6> 'struct i915_request *' <LValueToRValue>     | | | `-DeclRefExpr 0x11f923ce8 <col:6> 'struct i915_request *' lvalue Var 0x11f922cd8 'prev' 'struct i915_request *'     | | `-UnaryOperator 0x11f923e80 <col:14, col:42> 'int' prefix '!' cannot overflow     | |   `-CallExpr 0x11f923e40 <col:15, col:42> 'int'     | |     |-ImplicitCastExpr 0x11f923e28 <col:15> 'int (*)()' <FunctionToPointerDecay>     | |     | `-DeclRefExpr 0x11f923de8 <col:15> 'int ()' Function 0x11f923d30 'i915_request_completed' 'int ()'     | |     `-ImplicitCastExpr 0x11f923e68 <col:38> 'struct i915_request *' <LValueToRValue>     | |       `-DeclRefExpr 0x11f923e08 <col:38> 'struct i915_request *' lvalue Var 0x11f922cd8 'prev' 'struct i915_request *'     | `-CompoundStmt 0x11f9241d8 <col:45, line:30:2>     |   |-BinaryOperator 0x11f9240b8 <line:27:3, col:54> 'int' contains-errors '='     |   | |-DeclRefExpr 0x11f923ed0 <col:3> 'int' lvalue Var 0x11f922da8 'ret' 'int'     |   | `-CallExpr 0x11f924088 <col:9, col:54> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x11f923fd0 <col:9> 'int ()' Function 0x11f923f18 'i915_request_await_dma_fence' 'int ()'     |   |   |-DeclRefExpr 0x11f923ff0 <col:38> 'struct i915_request *' lvalue Var 0x11f922c48 'rq' 'struct i915_request *'     |   |   `-UnaryOperator 0x11f924070 <col:42, col:49> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |     `-RecoveryExpr 0x11f924048 <col:43, col:49> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x11f924010 <col:43> 'struct i915_request *' lvalue Var 0x11f922cd8 'prev' 'struct i915_request *'     |   `-IfStmt 0x11f9241b8 <line:28:3, line:29:9>     |     |-BinaryOperator 0x11f924130 <line:28:7, col:13> 'int' '<'     |     | |-ImplicitCastExpr 0x11f924118 <col:7> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x11f9240d8 <col:7> 'int' lvalue Var 0x11f922da8 'ret' 'int'     |     | `-IntegerLiteral 0x11f9240f8 <col:13> 'int' 0     |     `-GotoStmt 0x11f9241a0 <line:29:4, col:9> 'out_add' 0x11f924150     |-BinaryOperator 0x11f924430 <line:33:2, col:56> 'int' contains-errors '='     | |-DeclRefExpr 0x11f924218 <col:2> 'int' lvalue Var 0x11f922da8 'ret' 'int'     | `-CallExpr 0x11f924400 <col:8, col:56> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x11f924318 <col:8> 'int ()' Function 0x11f924260 'i915_timeline_set_barrier' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x11f924398 <col:34, col:44> '<dependent type>' contains-errors lvalue ->timeline     |   | `-RecoveryExpr 0x11f924370 <col:34, col:38> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x11f924338 <col:34> 'struct intel_context *' lvalue ParmVar 0x12880e248 'ce' 'struct intel_context *'     |   `-DeclRefExpr 0x11f9243e0 <col:54> 'struct i915_request *' lvalue Var 0x11f922c48 'rq' 'struct i915_request *'     |-IfStmt 0x11f9244a0 <line:34:2, line:35:8>     | |-ImplicitCastExpr 0x11f924470 <line:34:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x11f924450 <col:6> 'int' lvalue Var 0x11f922da8 'ret' 'int'     | `-GotoStmt 0x11f924488 <line:35:3, col:8> 'out_add' 0x11f924150     |-BinaryOperator 0x129009e78 <line:37:2, col:42> 'int' contains-errors '='     | |-DeclRefExpr 0x11f9244c0 <col:2> 'int' lvalue Var 0x11f922da8 'ret' 'int'     | `-CallExpr 0x129009e40 <col:8, col:42> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x11f9245c0 <col:8> 'int ()' Function 0x11f924508 'gen8_emit_rpcs_config' 'int ()'     |   |-DeclRefExpr 0x11f9245e0 <col:30> 'struct i915_request *' lvalue Var 0x11f922c48 'rq' 'struct i915_request *'     |   |-DeclRefExpr 0x129009e00 <col:34> 'struct intel_context *' lvalue ParmVar 0x12880e248 'ce' 'struct intel_context *'     |   `-RecoveryExpr 0x129009e20 <col:38> '<dependent type>' contains-errors lvalue     |-IfStmt 0x129009ee8 <line:38:2, line:39:8>     | |-ImplicitCastExpr 0x129009eb8 <line:38:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x129009e98 <col:6> 'int' lvalue Var 0x11f922da8 'ret' 'int'     | `-GotoStmt 0x129009ed0 <line:39:3, col:8> 'out_add' 0x11f924150     |-IfStmt 0x12900a238 <line:42:2, line:43:25>     | |-UnaryOperator 0x12900a0a8 <line:42:6, col:52> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x12900a080 <col:7, col:52> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x129009fe8 <col:7> 'int ()' Function 0x129009f30 'i915_active_request_isset' 'int ()'     | |   `-UnaryOperator 0x12900a068 <col:33, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-RecoveryExpr 0x12900a040 <col:34, col:38> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x12900a008 <col:34> 'struct intel_context *' lvalue ParmVar 0x12880e248 'ce' 'struct intel_context *'     | `-CallExpr 0x12900a1f8 <line:43:3, col:25> 'int'     |   |-ImplicitCastExpr 0x12900a1e0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12900a1a0 <col:3> 'int ()' Function 0x12900a0e8 '__intel_context_pin' 'int ()'     |   `-ImplicitCastExpr 0x12900a220 <col:23> 'struct intel_context *' <LValueToRValue>     |     `-DeclRefExpr 0x12900a1c0 <col:23> 'struct intel_context *' lvalue ParmVar 0x12880e248 'ce' 'struct intel_context *'     |-CallExpr 0x12900a3f0 <line:44:2, col:51> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12900a338 <col:2> 'int ()' Function 0x12900a280 '__i915_active_request_set' 'int ()'     | |-UnaryOperator 0x12900a3b8 <col:28, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x12900a390 <col:29, col:33> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12900a358 <col:29> 'struct intel_context *' lvalue ParmVar 0x12880e248 'ce' 'struct intel_context *'     | `-DeclRefExpr 0x12900a3d0 <col:49> 'struct i915_request *' lvalue Var 0x11f922c48 'rq' 'struct i915_request *'     |-LabelStmt 0x12900a598 <line:46:1, line:47:21> 'out_add'     | `-CallExpr 0x12900a558 <col:2, col:21> 'int'     |   |-ImplicitCastExpr 0x12900a540 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12900a500 <col:2> 'int ()' Function 0x12900a448 'i915_request_add' 'int ()'     |   `-ImplicitCastExpr 0x12900a580 <col:19> 'struct i915_request *' <LValueToRValue>     |     `-DeclRefExpr 0x12900a520 <col:19> 'struct i915_request *' lvalue Var 0x11f922c48 'rq' 'struct i915_request *'     |-LabelStmt 0x12900a6e0 <line:48:1, col:8> 'out_put'     | `-NullStmt 0x12900a6d8 <col:8>     `-ReturnStmt 0x12900a738 <line:51:2, col:9>       `-ImplicitCastExpr 0x12900a720 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x12900a700 <col:9> 'int' lvalue Var 0x11f922da8 'ret' 'int' ","20967":"`-FunctionDecl 0x15400ddc8  line:1:13 invalid llhttp_get_error_pos 'const char *(const int *)'   |-ParmVarDecl 0x15400dcf0 <col:34, col:50> col:50 invalid parser 'const int *'   `-CompoundStmt 0x15400def0 <col:58, line:3:1>     `-ReturnStmt 0x15400dee0 <line:2:3, col:18>       `-CXXDependentScopeMemberExpr 0x15400de98 <col:10, col:18> '<dependent type>' contains-errors lvalue ->error_pos         `-RecoveryExpr 0x15400de78 <col:10> '<dependent type>' contains-errors lvalue ","20691":"`-FunctionDecl 0x131128358  line:1:6 uv__idna_toascii 'long (const char *, const char *, char *, char *)'   |-ParmVarDecl 0x1311280d8 <col:23, col:35> col:35 used s 'const char *'   |-ParmVarDecl 0x131128158 <col:38, col:50> col:50 used se 'const char *'   |-ParmVarDecl 0x1311281d8 <col:54, col:60> col:60 used d 'char *'   |-ParmVarDecl 0x131128258 <col:63, col:69> col:69 used de 'char *'   `-CompoundStmt 0x131142a30 <col:73, line:42:1>     |-DeclStmt 0x1311284e8 <line:2:3, col:17>     | `-VarDecl 0x131128480 <col:3, col:15> col:15 used si 'const char *'     |-DeclStmt 0x131128580 <line:3:3, col:17>     | `-VarDecl 0x131128518 <col:3, col:15> col:15 used st 'const char *'     |-DeclStmt 0x131128618 <line:4:3, col:13>     | `-VarDecl 0x1311285b0 <col:3, col:12> col:12 used c 'unsigned int'     |-DeclStmt 0x1311286b0 <line:5:3, col:11>     | `-VarDecl 0x131128648 <col:3, col:9> col:9 used ds 'char *'     |-DeclStmt 0x131128748 <line:6:3, col:9>     | `-VarDecl 0x1311286e0 <col:3, col:7> col:7 used rc 'int'     |-BinaryOperator 0x1311287b8 <line:8:3, col:8> 'char *' '='     | |-DeclRefExpr 0x131128760 <col:3> 'char *' lvalue Var 0x131128648 'ds' 'char *'     | `-ImplicitCastExpr 0x1311287a0 <col:8> 'char *' <LValueToRValue>     |   `-DeclRefExpr 0x131128780 <col:8> 'char *' lvalue ParmVar 0x1311281d8 'd' 'char *'     |-ForStmt 0x1311416a0 <line:10:3, line:29:3>     | |-BinaryOperator 0x131140a38 <line:10:8, col:13> 'const char *' '='     | | |-DeclRefExpr 0x1311287d8 <col:8> 'const char *' lvalue Var 0x131128480 'si' 'const char *'     | | `-ImplicitCastExpr 0x131140a20 <col:13> 'const char *' <LValueToRValue>     | |   `-DeclRefExpr 0x131140a00 <col:13> 'const char *' lvalue ParmVar 0x1311280d8 's' 'const char *'     | |-<<<NULL>>>     | |-BinaryOperator 0x131140ac8 <col:16, col:21> 'int' '<'     | | |-ImplicitCastExpr 0x131140a98 <col:16> 'const char *' <LValueToRValue>     | | | `-DeclRefExpr 0x131140a58 <col:16> 'const char *' lvalue Var 0x131128480 'si' 'const char *'     | | `-ImplicitCastExpr 0x131140ab0 <col:21> 'const char *' <LValueToRValue>     | |   `-DeclRefExpr 0x131140a78 <col:21> 'const char *' lvalue ParmVar 0x131128158 'se' 'const char *'     | |-<<<NULL>>>     | `-CompoundStmt 0x131141658 <col:27, line:29:3>     |   |-BinaryOperator 0x131140b40 <line:11:5, col:10> 'const char *' '='     |   | |-DeclRefExpr 0x131140ae8 <col:5> 'const char *' lvalue Var 0x131128518 'st' 'const char *'     |   | `-ImplicitCastExpr 0x131140b28 <col:10> 'const char *' <LValueToRValue>     |   |   `-DeclRefExpr 0x131140b08 <col:10> 'const char *' lvalue Var 0x131128480 'si' 'const char *'     |   |-BinaryOperator 0x131140e08 <line:12:5, col:33> 'unsigned int' '='     |   | |-DeclRefExpr 0x131140b60 <col:5> 'unsigned int' lvalue Var 0x1311285b0 'c' 'unsigned int'     |   | `-ImplicitCastExpr 0x131140df0 <col:9, col:33> 'unsigned int' <IntegralCast>     |   |   `-CallExpr 0x131140da8 <col:9, col:33> 'int'     |   |     |-ImplicitCastExpr 0x131140d90 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x131140cb0 <col:9> 'int ()' Function 0x131140bf8 'uv__utf8_decode1' 'int ()'     |   |     |-UnaryOperator 0x131140d20 <col:26, col:27> 'const char **' prefix '&' cannot overflow     |   |     | `-DeclRefExpr 0x131140cd0 <col:27> 'const char *' lvalue Var 0x131128480 'si' 'const char *'     |   |     `-ImplicitCastExpr 0x131140dd8 <col:31> 'const char *' <LValueToRValue>     |   |       `-DeclRefExpr 0x131140d38 <col:31> 'const char *' lvalue ParmVar 0x131128158 'se' 'const char *'     |   |-IfStmt 0x1311410c8 <line:14:5, line:18:13>     |   | |-BinaryOperator 0x131140e90 <line:14:9, col:14> 'int' '!='     |   | | |-ImplicitCastExpr 0x131140e60 <col:9> 'unsigned int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x131140e28 <col:9> 'unsigned int' lvalue Var 0x1311285b0 'c' 'unsigned int'     |   | | `-ImplicitCastExpr 0x131140e78 <col:14> 'unsigned int' <IntegralCast>     |   | |   `-CharacterLiteral 0x131140e48 <col:14> 'int' 46     |   | `-IfStmt 0x1311410a8 <line:15:7, line:18:13>     |   |   |-BinaryOperator 0x131140f20 <line:15:11, col:16> 'int' '!='     |   |   | |-ImplicitCastExpr 0x131140ef0 <col:11> 'unsigned int' <LValueToRValue>     |   |   | | `-DeclRefExpr 0x131140eb0 <col:11> 'unsigned int' lvalue Var 0x1311285b0 'c' 'unsigned int'     |   |   | `-ImplicitCastExpr 0x131140f08 <col:16> 'unsigned int' <IntegralCast>     |   |   |   `-IntegerLiteral 0x131140ed0 <col:16> 'int' 12290     |   |   `-IfStmt 0x131141088 <line:16:9, line:18:13>     |   |     |-BinaryOperator 0x131140fb0 <line:16:13, col:18> 'int' '!='     |   |     | |-ImplicitCastExpr 0x131140f80 <col:13> 'unsigned int' <LValueToRValue>     |   |     | | `-DeclRefExpr 0x131140f40 <col:13> 'unsigned int' lvalue Var 0x1311285b0 'c' 'unsigned int'     |   |     | `-ImplicitCastExpr 0x131140f98 <col:18> 'unsigned int' <IntegralCast>     |   |     |   `-IntegerLiteral 0x131140f60 <col:18> 'int' 65294     |   |     `-IfStmt 0x131141068 <line:17:11, line:18:13>     |   |       |-BinaryOperator 0x131141040 <line:17:15, col:20> 'int' '!='     |   |       | |-ImplicitCastExpr 0x131141010 <col:15> 'unsigned int' <LValueToRValue>     |   |       | | `-DeclRefExpr 0x131140fd0 <col:15> 'unsigned int' lvalue Var 0x1311285b0 'c' 'unsigned int'     |   |       | `-ImplicitCastExpr 0x131141028 <col:20> 'unsigned int' <IntegralCast>     |   |       |   `-IntegerLiteral 0x131140ff0 <col:20> 'int' 65377     |   |       `-ContinueStmt 0x131141060 <line:18:13>     |   |-BinaryOperator 0x131141378 <line:20:5, col:46> 'int' '='     |   | |-DeclRefExpr 0x1311410e8 <col:5> 'int' lvalue Var 0x1311286e0 'rc' 'int'     |   | `-CallExpr 0x1311412f0 <col:10, col:46> 'int'     |   |   |-ImplicitCastExpr 0x1311412d8 <col:10> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x1311411e8 <col:10> 'int ()' Function 0x131141130 'uv__idna_toascii_label' 'int ()'     |   |   |-ImplicitCastExpr 0x131141330 <col:33> 'const char *' <LValueToRValue>     |   |   | `-DeclRefExpr 0x131141208 <col:33> 'const char *' lvalue ParmVar 0x1311280d8 's' 'const char *'     |   |   |-ImplicitCastExpr 0x131141348 <col:36> 'const char *' <LValueToRValue>     |   |   | `-DeclRefExpr 0x131141228 <col:36> 'const char *' lvalue Var 0x131128518 'st' 'const char *'     |   |   |-UnaryOperator 0x1311412a0 <col:40, col:41> 'char **' prefix '&' cannot overflow     |   |   | `-DeclRefExpr 0x131141248 <col:41> 'char *' lvalue ParmVar 0x1311281d8 'd' 'char *'     |   |   `-ImplicitCastExpr 0x131141360 <col:44> 'char *' <LValueToRValue>     |   |     `-DeclRefExpr 0x1311412b8 <col:44> 'char *' lvalue ParmVar 0x131128258 'de' 'char *'     |   |-IfStmt 0x131141470 <line:22:5, line:23:14>     |   | |-BinaryOperator 0x1311413f0 <line:22:9, col:14> 'int' '<'     |   | | |-ImplicitCastExpr 0x1311413d8 <col:9> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x131141398 <col:9> 'int' lvalue Var 0x1311286e0 'rc' 'int'     |   | | `-IntegerLiteral 0x1311413b8 <col:14> 'int' 0     |   | `-ReturnStmt 0x131141460 <line:23:7, col:14>     |   |   `-ImplicitCastExpr 0x131141448 <col:14> 'long' <IntegralCast>     |   |     `-ImplicitCastExpr 0x131141430 <col:14> 'int' <LValueToRValue>     |   |       `-DeclRefExpr 0x131141410 <col:14> 'int' lvalue Var 0x1311286e0 'rc' 'int'     |   |-IfStmt 0x1311415c0 <line:25:5, line:26:14>     |   | |-BinaryOperator 0x131141500 <line:25:9, col:13> 'int' '<'     |   | | |-ImplicitCastExpr 0x1311414d0 <col:9> 'char *' <LValueToRValue>     |   | | | `-DeclRefExpr 0x131141490 <col:9> 'char *' lvalue ParmVar 0x1311281d8 'd' 'char *'     |   | | `-ImplicitCastExpr 0x1311414e8 <col:13> 'char *' <LValueToRValue>     |   | |   `-DeclRefExpr 0x1311414b0 <col:13> 'char *' lvalue ParmVar 0x131128258 'de' 'char *'     |   | `-BinaryOperator 0x1311415a0 <line:26:7, col:14> 'char' '='     |   |   |-UnaryOperator 0x131141558 <col:7, col:9> 'char' lvalue prefix '*' cannot overflow     |   |   | `-UnaryOperator 0x131141540 <col:8, col:9> 'char *' postfix '++'     |   |   |   `-DeclRefExpr 0x131141520 <col:8> 'char *' lvalue ParmVar 0x1311281d8 'd' 'char *'     |   |   `-ImplicitCastExpr 0x131141588 <col:14> 'char' <IntegralCast>     |   |     `-CharacterLiteral 0x131141570 <col:14> 'int' 46     |   `-BinaryOperator 0x131141638 <line:28:5, col:9> 'const char *' '='     |     |-DeclRefExpr 0x1311415e0 <col:5> 'const char *' lvalue ParmVar 0x1311280d8 's' 'const char *'     |     `-ImplicitCastExpr 0x131141620 <col:9> 'const char *' <LValueToRValue>     |       `-DeclRefExpr 0x131141600 <col:9> 'const char *' lvalue Var 0x131128480 'si' 'const char *'     |-IfStmt 0x131142820 <line:31:3, line:36:3>     | |-BinaryOperator 0x131141748 <line:31:7, col:11> 'int' '<'     | | |-ImplicitCastExpr 0x131141718 <col:7> 'const char *' <LValueToRValue>     | | | `-DeclRefExpr 0x1311416d8 <col:7> 'const char *' lvalue ParmVar 0x1311280d8 's' 'const char *'     | | `-ImplicitCastExpr 0x131141730 <col:11> 'const char *' <LValueToRValue>     | |   `-DeclRefExpr 0x1311416f8 <col:11> 'const char *' lvalue ParmVar 0x131128158 'se' 'const char *'     | `-CompoundStmt 0x131142800 <col:15, line:36:3>     |   |-BinaryOperator 0x1311418e0 <line:32:5, col:46> 'int' '='     |   | |-DeclRefExpr 0x131141768 <col:5> 'int' lvalue Var 0x1311286e0 'rc' 'int'     |   | `-CallExpr 0x131141858 <col:10, col:46> 'int'     |   |   |-ImplicitCastExpr 0x131141840 <col:10> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x131141788 <col:10> 'int ()' Function 0x131141130 'uv__idna_toascii_label' 'int ()'     |   |   |-ImplicitCastExpr 0x131141898 <col:33> 'const char *' <LValueToRValue>     |   |   | `-DeclRefExpr 0x1311417a8 <col:33> 'const char *' lvalue ParmVar 0x1311280d8 's' 'const char *'     |   |   |-ImplicitCastExpr 0x1311418b0 <col:36> 'const char *' <LValueToRValue>     |   |   | `-DeclRefExpr 0x1311417c8 <col:36> 'const char *' lvalue ParmVar 0x131128158 'se' 'const char *'     |   |   |-UnaryOperator 0x131141808 <col:40, col:41> 'char **' prefix '&' cannot overflow     |   |   | `-DeclRefExpr 0x1311417e8 <col:41> 'char *' lvalue ParmVar 0x1311281d8 'd' 'char *'     |   |   `-ImplicitCastExpr 0x1311418c8 <col:44> 'char *' <LValueToRValue>     |   |     `-DeclRefExpr 0x131141820 <col:44> 'char *' lvalue ParmVar 0x131128258 'de' 'char *'     |   `-IfStmt 0x1311419d8 <line:34:5, line:35:14>     |     |-BinaryOperator 0x131141958 <line:34:9, col:14> 'int' '<'     |     | |-ImplicitCastExpr 0x131141940 <col:9> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x131141900 <col:9> 'int' lvalue Var 0x1311286e0 'rc' 'int'     |     | `-IntegerLiteral 0x131141920 <col:14> 'int' 0     |     `-ReturnStmt 0x1311419c8 <line:35:7, col:14>     |       `-ImplicitCastExpr 0x1311419b0 <col:14> 'long' <IntegralCast>     |         `-ImplicitCastExpr 0x131141998 <col:14> 'int' <LValueToRValue>     |           `-DeclRefExpr 0x131141978 <col:14> 'int' lvalue Var 0x1311286e0 'rc' 'int'     |-IfStmt 0x131142970 <line:38:3, line:39:12>     | |-BinaryOperator 0x1311428b0 <line:38:7, col:11> 'int' '<'     | | |-ImplicitCastExpr 0x131142880 <col:7> 'char *' <LValueToRValue>     | | | `-DeclRefExpr 0x131142840 <col:7> 'char *' lvalue ParmVar 0x1311281d8 'd' 'char *'     | | `-ImplicitCastExpr 0x131142898 <col:11> 'char *' <LValueToRValue>     | |   `-DeclRefExpr 0x131142860 <col:11> 'char *' lvalue ParmVar 0x131128258 'de' 'char *'     | `-BinaryOperator 0x131142950 <line:39:5, col:12> 'char' '='     |   |-UnaryOperator 0x131142908 <col:5, col:7> 'char' lvalue prefix '*' cannot overflow     |   | `-UnaryOperator 0x1311428f0 <col:6, col:7> 'char *' postfix '++'     |   |   `-DeclRefExpr 0x1311428d0 <col:6> 'char *' lvalue ParmVar 0x1311281d8 'd' 'char *'     |   `-ImplicitCastExpr 0x131142938 <col:12> 'char' <IntegralCast>     |     `-CharacterLiteral 0x131142920 <col:12> 'int' 0     `-ReturnStmt 0x131142a20 <line:41:3, col:14>       `-BinaryOperator 0x131142a00 <col:10, col:14> 'long' '-'         |-ImplicitCastExpr 0x1311429d0 <col:10> 'char *' <LValueToRValue>         | `-DeclRefExpr 0x131142990 <col:10> 'char *' lvalue ParmVar 0x1311281d8 'd' 'char *'         `-ImplicitCastExpr 0x1311429e8 <col:14> 'char *' <LValueToRValue>           `-DeclRefExpr 0x1311429b0 <col:14> 'char *' lvalue Var 0x131128648 'ds' 'char *' ","20949":"`-FunctionDecl 0x12e928758  line:1:5 __kmem_cache_shutdown 'int (struct kmem_cache *)'   |-ParmVarDecl 0x12e928648 <col:27, col:46> col:46 used cachep 'struct kmem_cache *'   `-CompoundStmt 0x12e940c58 <line:2:1, line:4:1>     `-ReturnStmt 0x12e940c48 <line:3:2, col:35>       `-CallExpr 0x12e940c08 <col:9, col:35> 'int'         |-ImplicitCastExpr 0x12e940bf0 <col:9> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x12e940b80 <col:9> 'int ()' Function 0x12e940ac8 '__kmem_cache_shrink' 'int ()'         `-ImplicitCastExpr 0x12e940c30 <col:29> 'struct kmem_cache *' <LValueToRValue>           `-DeclRefExpr 0x12e940ba0 <col:29> 'struct kmem_cache *' lvalue ParmVar 0x12e928648 'cachep' 'struct kmem_cache *' ","20690":"`-FunctionDecl 0x122943a68  col:44 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x122943b68 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x122943b10 <<invalid sloc>> Implicit 902 ","20258":"`-FunctionDecl 0x12202bb58  line:1:20 invalid sctp_sf_discard_chunk 'int (struct net *, const struct sctp_endpoint *, const struct sctp_association *, const int, void *, int *)'   |-ParmVarDecl 0x12200e268 <col:42, col:54> col:54 used net 'struct net *'   |-ParmVarDecl 0x12202b658 <line:2:7, col:35> col:35 used ep 'const struct sctp_endpoint *'   |-ParmVarDecl 0x12202b828 <line:3:7, col:38> col:38 used asoc 'const struct sctp_association *'   |-ParmVarDecl 0x12202b8a8 <line:4:7, col:28> col:28 invalid type 'const int'   |-ParmVarDecl 0x12202b928 <line:5:7, col:13> col:13 used arg 'void *'   |-ParmVarDecl 0x12202b9d8 <line:6:7, col:23> col:23 invalid commands 'int *'   `-CompoundStmt 0x12202c5b0 <line:7:1, line:18:1>     |-DeclStmt 0x12202be68 <line:8:2, col:32>     | |-RecordDecl 0x12202bc30 <col:2, col:9> col:9 struct sctp_chunk     | `-VarDecl 0x12202bd98 <col:2, col:29> col:21 used chunk 'struct sctp_chunk *' cinit     |   `-ImplicitCastExpr 0x12202be38 <col:29> 'struct sctp_chunk *' <BitCast>     |     `-ImplicitCastExpr 0x12202be20 <col:29> 'void *' <LValueToRValue>     |       `-DeclRefExpr 0x12202be00 <col:29> 'void *' lvalue ParmVar 0x12202b928 'arg' 'void *'     |-IfStmt 0x12202c278 <line:11:2, line:13:17>     | |-RecoveryExpr 0x12202c038 <line:11:6, col:61> '_Bool' contains-errors     | `-ReturnStmt 0x12202c268 <line:12:3, line:13:17>     |   `-CallExpr 0x12202c218 <line:12:10, line:13:17> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12202c138 <line:12:10> 'int ()' Function 0x12202c080 'sctp_sf_violation_chunklen' 'int ()'     |     |-DeclRefExpr 0x12202c158 <col:37> 'struct net *' lvalue ParmVar 0x12200e268 'net' 'struct net *'     |     |-DeclRefExpr 0x12202c178 <col:42> 'const struct sctp_endpoint *' lvalue ParmVar 0x12202b658 'ep' 'const struct sctp_endpoint *'     |     |-DeclRefExpr 0x12202c198 <col:46> 'const struct sctp_association *' lvalue ParmVar 0x12202b828 'asoc' 'const struct sctp_association *'     |     |-RecoveryExpr 0x12202c1b8 <col:52> '<dependent type>' contains-errors lvalue     |     |-DeclRefExpr 0x12202c1d8 <col:58> 'void *' lvalue ParmVar 0x12202b928 'arg' 'void *'     |     `-RecoveryExpr 0x12202c1f8 <line:13:9> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12202c530 <line:15:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12202c378 <col:2> 'int ()' Function 0x12202c2c0 'pr_debug' 'int ()'     | |-StringLiteral 0x12202c3e0 <col:11> 'char[4]' lvalue \"STR\"     | |-PredefinedExpr 0x12202c4b0 <col:18> 'const char[22]' lvalue __func__     | | `-StringLiteral 0x12202c480 <col:18> 'const char[22]' lvalue \"sctp_sf_discard_chunk\"     | `-CXXDependentScopeMemberExpr 0x12202c4e8 <col:28, col:33> '<dependent type>' contains-errors lvalue .chunk     |   `-RecoveryExpr 0x12202c4c8 <col:28> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12202c5a0 <line:17:2, col:9>       `-RecoveryExpr 0x12202c580 <col:9> '<dependent type>' contains-errors lvalue ","20505":"`-FunctionDecl 0x13f9392d8  line:1:16 invalid _consolefs_writev 'int (int *, const struct oe_iovec *, int)' static   |-ParmVarDecl 0x13f91fb28 <line:2:5, col:14> col:14 invalid desc 'int *'   |-ParmVarDecl 0x13f920118 <line:3:5, col:28> col:28 used iov 'const struct oe_iovec *'   |-ParmVarDecl 0x13f920198 <line:4:5, col:9> col:9 used iovcnt 'int'   `-CompoundStmt 0x13f93a018 <line:5:1, line:31:1>     |-DeclStmt 0x13f939468 <line:8:5, col:21>     | `-VarDecl 0x13f9393c8 <col:5, col:17> col:11 used buf 'void *' cinit     |   `-RecoveryExpr 0x13f939448 <col:17> '<dependent type>' contains-errors lvalue     |-RecoveryExpr 0x13f939560 <line:9:5, col:23> '<dependent type>' contains-errors lvalue     | |-UnaryExprOrTypeTraitExpr 0x13f939540 <col:5, col:12> 'unsigned long' contains-errors sizeof     | | `-RecoveryExpr 0x13f939520 <col:12> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x13f9394b8 <col:23> 'int' 0     |-IfStmt 0x13f9397c8 <line:11:5, line:12:33>     | |-RecoveryExpr 0x13f9395a8 <line:11:9, col:61> '_Bool' contains-errors     | `-CallExpr 0x13f9397a0 <line:12:9, col:33> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13f939720 <col:9> 'int ()' Function 0x13f939668 'OE_RAISE_ERRNO' 'int ()'     |   `-RecoveryExpr 0x13f939780 <col:24> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13f939b88 <line:15:5, line:16:33>     | |-BinaryOperator 0x13f939ac0 <line:15:9, col:54> 'int' contains-errors '!='     | | |-CallExpr 0x13f939a80 <col:9, col:49> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x13f9398c8 <col:9> 'int ()' Function 0x13f939810 'oe_iov_pack' 'int ()'     | | | |-DeclRefExpr 0x13f9398e8 <col:21> 'const struct oe_iovec *' lvalue ParmVar 0x13f920118 'iov' 'const struct oe_iovec *'     | | | |-DeclRefExpr 0x13f939908 <col:26> 'int' lvalue ParmVar 0x13f920198 'iovcnt' 'int'     | | | |-UnaryOperator 0x13f939980 <col:34, col:35> 'void **' contains-errors prefix '&' cannot overflow     | | | | `-DeclRefExpr 0x13f939928 <col:35> 'void *' contains-errors lvalue Var 0x13f9393c8 'buf' 'void *'     | | | `-UnaryOperator 0x13f939a68 <col:40, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-RecoveryExpr 0x13f939a48 <col:41> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x13f939a08 <col:54> 'int' 0     | `-CallExpr 0x13f939b60 <line:16:9, col:33> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13f939ae0 <col:9> 'int ()' Function 0x13f939668 'OE_RAISE_ERRNO' 'int ()'     |   `-RecoveryExpr 0x13f939b40 <col:24> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13f939d80 <line:19:5, line:23:5>     | |-RecoveryExpr 0x13f939d30 <line:19:9, line:20:9> '_Bool' contains-errors     | `-CompoundStmt 0x13f939d70 <line:21:5, line:23:5>     `-LabelStmt 0x13f939ff8 <line:25:1, line:28:20> 'done'       `-IfStmt 0x13f939f88 <line:27:5, line:28:20>         |-ImplicitCastExpr 0x13f939dc0 <line:27:9> 'void *' contains-errors <LValueToRValue>         | `-DeclRefExpr 0x13f939da0 <col:9> 'void *' contains-errors lvalue Var 0x13f9393c8 'buf' 'void *'         `-CallExpr 0x13f939f48 <line:28:9, col:20> 'int' contains-errors           |-ImplicitCastExpr 0x13f939f30 <col:9> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x13f939eb8 <col:9> 'int ()' Function 0x13f939e00 'oe_free' 'int ()'           `-ImplicitCastExpr 0x13f939f70 <col:17> 'void *' contains-errors <LValueToRValue>             `-DeclRefExpr 0x13f939ed8 <col:17> 'void *' contains-errors lvalue Var 0x13f9393c8 'buf' 'void *' ","20171":"`-FunctionDecl 0x12e940c48  line:1:1 vhost_user_get_queue_num 'int (struct virtio_net **, struct VhostUserMsg *, int)'   |-ParmVarDecl 0x12e9286a8 <col:26, col:46> col:46 used pdev 'struct virtio_net **'   |-ParmVarDecl 0x12e940a88 <col:52, col:73> col:73 used msg 'struct VhostUserMsg *'   |-ParmVarDecl 0x12e940b08 <line:2:4, col:8> col:8 main_fd 'int'   `-CompoundStmt 0x12e941448 <line:3:1, line:14:1>     |-DeclStmt 0x12e940ea8 <line:4:2, col:32>     | `-VarDecl 0x12e940dd8 <col:2, col:28> col:21 used dev 'struct virtio_net *' cinit     |   `-ImplicitCastExpr 0x12e940e90 <col:27, col:28> 'struct virtio_net *' <LValueToRValue>     |     `-UnaryOperator 0x12e940e78 <col:27, col:28> 'struct virtio_net *' lvalue prefix '*' cannot overflow     |       `-ImplicitCastExpr 0x12e940e60 <col:28> 'struct virtio_net **' <LValueToRValue>     |         `-DeclRefExpr 0x12e940e40 <col:28> 'struct virtio_net **' lvalue ParmVar 0x12e9286a8 'pdev' 'struct virtio_net **'     |-CallExpr 0x12e941108 <line:7:2, col:56> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12e940ff0 <col:2> 'int ()' Function 0x12e940f38 'rte_vhost_driver_get_queue_num' 'int ()'     | |-RecoveryExpr 0x12e941048 <col:33, col:38> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12e941010 <col:33> 'struct virtio_net *' lvalue Var 0x12e940dd8 'dev' 'struct virtio_net *'     | `-UnaryOperator 0x12e9410f0 <col:46, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12e9410d0 <col:47> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12e941340 <line:10:2, col:37> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12e941230 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12e9411f8 <col:2> 'struct VhostUserMsg *' lvalue ParmVar 0x12e940a88 'msg' 'struct VhostUserMsg *'     | `-UnaryExprOrTypeTraitExpr 0x12e941320 <col:14, col:37> 'unsigned long' contains-errors sizeof     |   `-ParenExpr 0x12e941300 <col:20, col:37> '<dependent type>' contains-errors lvalue     |     `-CXXDependentScopeMemberExpr 0x12e9412b8 <col:21, col:34> '<dependent type>' contains-errors lvalue .u64     |       `-RecoveryExpr 0x12e941290 <col:21, col:26> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x12e941258 <col:21> 'struct VhostUserMsg *' lvalue ParmVar 0x12e940a88 'msg' 'struct VhostUserMsg *' non_odr_use_unevaluated     |-BinaryOperator 0x12e9413e0 <line:11:2, col:16> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12e941398 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12e941360 <col:2> 'struct VhostUserMsg *' lvalue ParmVar 0x12e940a88 'msg' 'struct VhostUserMsg *'     | `-IntegerLiteral 0x12e9413c0 <col:16> 'int' 0     `-ReturnStmt 0x12e941438 <line:13:2, col:9>       `-RecoveryExpr 0x12e941418 <col:9> '<dependent type>' contains-errors lvalue ","20625":"`-FunctionDecl 0x131928258  line:1:1 invalid _equalSortGroupClause 'int (const int *, const int *)'   |-ParmVarDecl 0x1319280f0 <col:23, col:46> col:46 invalid a 'const int *'   |-ParmVarDecl 0x131928170 <col:49, col:72> col:72 invalid b 'const int *'   `-CompoundStmt 0x131941800 <line:2:1, line:10:1>     |-CallExpr 0x1319284f0 <line:3:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x131928470 <col:2> 'int ()' Function 0x1319283b8 'COMPARE_SCALAR_FIELD' 'int ()'     | `-RecoveryExpr 0x1319284d0 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x131928598 <line:4:2, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x131928518 <col:2> 'int ()' Function 0x1319283b8 'COMPARE_SCALAR_FIELD' 'int ()'     | `-RecoveryExpr 0x131928578 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x131928640 <line:5:2, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1319285c0 <col:2> 'int ()' Function 0x1319283b8 'COMPARE_SCALAR_FIELD' 'int ()'     | `-RecoveryExpr 0x131928620 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1319286e8 <line:6:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x131928668 <col:2> 'int ()' Function 0x1319283b8 'COMPARE_SCALAR_FIELD' 'int ()'     | `-RecoveryExpr 0x1319286c8 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x131928790 <line:7:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x131928710 <col:2> 'int ()' Function 0x1319283b8 'COMPARE_SCALAR_FIELD' 'int ()'     | `-RecoveryExpr 0x131928770 <col:23> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1319287f0 <line:9:2, col:9>       `-RecoveryExpr 0x1319287d0 <col:9> '<dependent type>' contains-errors lvalue ","20296":"`-FunctionDecl 0x14200e350  line:1:6 usb_composite_unregister 'void (struct usb_composite_driver *)'   |-ParmVarDecl 0x14200e248 <col:31, col:60> col:60 used driver 'struct usb_composite_driver *'   `-CompoundStmt 0x142026830 <line:2:1, line:4:1>     `-CallExpr 0x142026808 <line:3:2, col:53> '<dependent type>' contains-errors       |-DeclRefExpr 0x142026770 <col:2> 'int ()' Function 0x1420266b8 'usb_gadget_unregister_driver' 'int ()'       `-UnaryOperator 0x1420267f0 <col:31, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x1420267c8 <col:32, col:40> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x142026790 <col:32> 'struct usb_composite_driver *' lvalue ParmVar 0x14200e248 'driver' 'struct usb_composite_driver *' ","20871":"`-FunctionDecl 0x121128110  line:1:10 finalizeTable 'void ()'   `-CompoundStmt 0x1211282e8 <col:26, line:10:6>     `-RecoveryExpr 0x121128248 <line:2:7> '<dependent type>' contains-errors lvalue ","20693":"`-FunctionDecl 0x1240082d8  line:1:16 invalid srpt_tpg_attrib_srp_sq_size_store 'int (struct config_item *, const char *, int)' static   |-ParmVarDecl 0x12380e268 <col:50, col:70> col:70 used item 'struct config_item *'   |-ParmVarDecl 0x12380e2e8 <line:2:3, col:15> col:15 used page 'const char *'   |-ParmVarDecl 0x12380e368 <col:21, col:28> col:28 invalid count 'int'   `-CompoundStmt 0x123828c28 <line:3:1, line:27:1>     |-DeclStmt 0x1240087c8 <line:4:2, col:54>     | |-RecordDecl 0x124008398 <col:2, col:9> col:9 struct se_portal_group     | `-VarDecl 0x124008508 <col:2, col:53> col:26 used se_tpg 'struct se_portal_group *' cinit     |   `-ImplicitCastExpr 0x124008798 <col:35, col:53> 'struct se_portal_group *' <IntegralToPointer>     |     `-CallExpr 0x124008758 <col:35, col:53> 'int'     |       |-ImplicitCastExpr 0x124008740 <col:35> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x1240086d0 <col:35> 'int ()' Function 0x124008618 'attrib_to_tpg' 'int ()'     |       `-ImplicitCastExpr 0x124008780 <col:49> 'struct config_item *' <LValueToRValue>     |         `-DeclRefExpr 0x1240086f0 <col:49> 'struct config_item *' lvalue ParmVar 0x12380e268 'item' 'struct config_item *'     |-DeclStmt 0x124008b00 <line:5:2, col:78>     | |-RecordDecl 0x1240087e0 <col:2, col:9> col:9 struct srpt_port     | `-VarDecl 0x124008948 <col:2, col:20> col:20 used sport 'struct srpt_port *'     |-DeclStmt 0x124008b98 <line:6:2, col:19>     | `-VarDecl 0x124008b30 <col:2, col:16> col:16 used val 'unsigned long'     |-DeclStmt 0x124008c30 <line:7:2, col:9>     | `-VarDecl 0x124008bc8 <col:2, col:6> col:6 used ret 'int'     |-BinaryOperator 0x124008e80 <line:9:2, col:30> 'int' '='     | |-DeclRefExpr 0x124008c48 <col:2> 'int' lvalue Var 0x124008bc8 'ret' 'int'     | `-CallExpr 0x124008e30 <col:8, col:30> 'int'     |   |-ImplicitCastExpr 0x124008e18 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x124008d48 <col:8> 'int ()' Function 0x124008c90 'kstrtoul' 'int ()'     |   |-ImplicitCastExpr 0x124008e68 <col:17> 'const char *' <LValueToRValue>     |   | `-DeclRefExpr 0x124008d68 <col:17> 'const char *' lvalue ParmVar 0x12380e2e8 'page' 'const char *'     |   |-IntegerLiteral 0x124008d88 <col:23> 'int' 0     |   `-UnaryOperator 0x124008e00 <col:26, col:27> 'unsigned long *' prefix '&' cannot overflow     |     `-DeclRefExpr 0x124008da8 <col:27> 'unsigned long' lvalue Var 0x124008b30 'val' 'unsigned long'     |-IfStmt 0x1240091e0 <line:10:2, line:13:2>     | |-BinaryOperator 0x124008ef8 <line:10:6, col:12> 'int' '<'     | | |-ImplicitCastExpr 0x124008ee0 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x124008ea0 <col:6> 'int' lvalue Var 0x124008bc8 'ret' 'int'     | | `-IntegerLiteral 0x124008ec0 <col:12> 'int' 0     | `-CompoundStmt 0x1240091c0 <col:15, line:13:2>     |   |-CallExpr 0x1240090b8 <line:11:3, col:20> 'int'     |   | |-ImplicitCastExpr 0x1240090a0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x124008ff8 <col:3> 'int ()' Function 0x124008f40 'pr_err' 'int ()'     |   | |-ImplicitCastExpr 0x1240090e8 <col:10> 'char *' <ArrayToPointerDecay>     |   | | `-StringLiteral 0x124009060 <col:10> 'char[4]' lvalue \"STR\"     |   | `-ImplicitCastExpr 0x124009100 <col:17> 'int' <LValueToRValue>     |   |   `-DeclRefExpr 0x124009080 <col:17> 'int' lvalue Var 0x124008bc8 'ret' 'int'     |   `-ReturnStmt 0x1240091b0 <line:12:3, col:11>     |     `-UnaryOperator 0x124009198 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x124009180 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x124009160 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x123828868 <line:14:2, line:18:2>     | |-BinaryOperator 0x123828678 <line:14:6, col:12> 'int' contains-errors '>'     | | |-DeclRefExpr 0x123828600 <col:6> 'unsigned long' lvalue Var 0x124008b30 'val' 'unsigned long'     | | `-RecoveryExpr 0x123828658 <col:12> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x123828848 <col:31, line:18:2>     |   |-CallExpr 0x123828768 <line:15:3, line:16:21> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x123828698 <line:15:3> 'int ()' Function 0x124008f40 'pr_err' 'int ()'     |   | |-StringLiteral 0x1238286b8 <col:10> 'char[4]' lvalue \"STR\"     |   | |-DeclRefExpr 0x1238286d8 <col:17> 'unsigned long' lvalue Var 0x124008b30 'val' 'unsigned long'     |   | `-RecoveryExpr 0x123828748 <line:16:4> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x123828838 <line:17:3, col:11>     |     `-UnaryOperator 0x123828820 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x123828808 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x1238287e8 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x123828af0 <line:19:2, line:23:2>     | |-BinaryOperator 0x123828900 <line:19:6, col:12> 'int' contains-errors '<'     | | |-DeclRefExpr 0x123828888 <col:6> 'unsigned long' lvalue Var 0x124008b30 'val' 'unsigned long'     | | `-RecoveryExpr 0x1238288e0 <col:12> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x123828ad0 <col:31, line:23:2>     |   |-CallExpr 0x1238289f0 <line:20:3, line:21:21> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x123828920 <line:20:3> 'int ()' Function 0x124008f40 'pr_err' 'int ()'     |   | |-StringLiteral 0x123828940 <col:10> 'char[4]' lvalue \"STR\"     |   | |-DeclRefExpr 0x123828960 <col:17> 'unsigned long' lvalue Var 0x124008b30 'val' 'unsigned long'     |   | `-RecoveryExpr 0x1238289d0 <line:21:4> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x123828ac0 <line:22:3, col:11>     |     `-UnaryOperator 0x123828aa8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x123828a90 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x123828a70 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x123828bd8 <line:24:2, col:35> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x123828b70 <col:2, col:21> '<dependent type>' contains-errors lvalue .srp_sq_size     | | `-RecoveryExpr 0x123828b48 <col:2, col:9> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x123828b10 <col:2> 'struct srpt_port *' lvalue Var 0x124008948 'sport' 'struct srpt_port *'     | `-DeclRefExpr 0x123828bb8 <col:35> 'unsigned long' lvalue Var 0x124008b30 'val' 'unsigned long'     `-ReturnStmt 0x123828c18 <line:26:2, col:9>       `-RecoveryExpr 0x123828bf8 <col:9> '<dependent type>' contains-errors lvalue ","20699":"`-FunctionDecl 0x139140b48  line:1:12 nl80211_leave_ocb 'int (struct sk_buff *, struct genl_info *)' static   |-ParmVarDecl 0x139128648 <col:30, col:46> col:46 skb 'struct sk_buff *'   |-ParmVarDecl 0x139140a28 <col:51, col:69> col:69 used info 'struct genl_info *'   `-CompoundStmt 0x139141408 <line:2:1, line:7:1>     |-DeclStmt 0x139140ef0 <line:3:2, col:61>     | |-RecordDecl 0x139140c48 <col:2, col:9> col:9 struct cfg80211_registered_device     | `-VarDecl 0x139140db8 <col:2, col:60> col:37 used rdev 'struct cfg80211_registered_device *' cinit     |   `-ArraySubscriptExpr 0x139140eb8 <col:44, col:60> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x139140ea0 <col:44, col:50> '<dependent type>' contains-errors <LValueToRValue>     |     | `-RecoveryExpr 0x139140e58 <col:44, col:50> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x139140e20 <col:44> 'struct genl_info *' lvalue ParmVar 0x139140a28 'info' 'struct genl_info *'     |     `-IntegerLiteral 0x139140e80 <col:59> 'int' 0     |-DeclStmt 0x1391411b0 <line:4:2, col:44>     | |-RecordDecl 0x139140f08 <col:2, col:9> col:9 struct net_device     | `-VarDecl 0x139141078 <col:2, col:43> col:21 used dev 'struct net_device *' cinit     |   `-ArraySubscriptExpr 0x139141178 <col:27, col:43> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x139141160 <col:27, col:33> '<dependent type>' contains-errors <LValueToRValue>     |     | `-RecoveryExpr 0x139141118 <col:27, col:33> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x1391410e0 <col:27> 'struct genl_info *' lvalue ParmVar 0x139140a28 'info' 'struct genl_info *'     |     `-IntegerLiteral 0x139141140 <col:42> 'int' 1     `-ReturnStmt 0x1391413f8 <line:6:2, col:37>       `-CallExpr 0x139141398 <col:9, col:37> 'int' contains-errors         |-ImplicitCastExpr 0x139141380 <col:9> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x1391412f0 <col:9> 'int ()' Function 0x139141238 'cfg80211_leave_ocb' 'int ()'         |-ImplicitCastExpr 0x1391413c8 <col:28> 'struct cfg80211_registered_device *' contains-errors <LValueToRValue>         | `-DeclRefExpr 0x139141310 <col:28> 'struct cfg80211_registered_device *' contains-errors lvalue Var 0x139140db8 'rdev' 'struct cfg80211_registered_device *'         `-ImplicitCastExpr 0x1391413e0 <col:34> 'struct net_device *' contains-errors <LValueToRValue>           `-DeclRefExpr 0x139141330 <col:34> 'struct net_device *' contains-errors lvalue Var 0x139141078 'dev' 'struct net_device *' ","20351":"`-FunctionDecl 0x125027258  col:3 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x125027358 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x125027300 <<invalid sloc>> Implicit 873 ","21129":"`-FunctionDecl 0x13e922898  line:1:12 invalid fuse_getattr 'int (const struct path *, struct kstat *, int, unsigned int)' static   |-ParmVarDecl 0x13f00e248 <col:25, col:44> col:44 used path 'const struct path *'   |-ParmVarDecl 0x13e922628 <col:50, col:64> col:64 used stat 'struct kstat *'   |-ParmVarDecl 0x13e9226c0 <line:2:4, col:8> col:8 invalid request_mask 'int'   |-ParmVarDecl 0x13e922740 <col:22, col:35> col:35 used flags 'unsigned int'   `-CompoundStmt 0x148808498 <line:3:1, line:18:1>     |-DeclStmt 0x13e922d50 <line:4:2, col:45>     | |-RecordDecl 0x13e922960 <col:2, col:9> col:9 struct inode     | `-VarDecl 0x13e922ac8 <col:2, col:44> col:16 used inode 'struct inode *' cinit     |   `-CallExpr 0x13e922d10 <col:24, col:44> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x13e922c90 <col:24> 'int ()' Function 0x13e922bd8 'd_inode' 'int ()'     |     `-RecoveryExpr 0x13e922ce8 <col:32, col:38> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13e922cb0 <col:32> 'const struct path *' lvalue ParmVar 0x13f00e248 'path' 'const struct path *'     |-DeclStmt 0x13e923118 <line:5:2, col:45>     | |-RecordDecl 0x13e922d68 <col:2, col:9> col:9 struct fuse_conn     | `-VarDecl 0x13e922ed8 <col:2, col:44> col:20 used fc 'struct fuse_conn *' cinit     |   `-ImplicitCastExpr 0x13e9230e8 <col:25, col:44> 'struct fuse_conn *' contains-errors <IntegralToPointer>     |     `-CallExpr 0x13e9230a8 <col:25, col:44> 'int' contains-errors     |       |-ImplicitCastExpr 0x13e923090 <col:25> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x13e923020 <col:25> 'int ()' Function 0x13e922f68 'get_fuse_conn' 'int ()'     |       `-ImplicitCastExpr 0x13e9230d0 <col:39> 'struct inode *' contains-errors <LValueToRValue>     |         `-DeclRefExpr 0x13e923040 <col:39> 'struct inode *' contains-errors lvalue Var 0x13e922ac8 'inode' 'struct inode *'     |-IfStmt 0x148808220 <line:7:2, line:15:2>     | |-UnaryOperator 0x13e9232a8 <line:7:6, col:36> 'int' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x13e923268 <col:7, col:36> 'int' contains-errors     | |   |-ImplicitCastExpr 0x13e923250 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x13e923210 <col:7> 'int ()' Function 0x13e923158 'fuse_allow_current_process' 'int ()'     | |   `-ImplicitCastExpr 0x13e923290 <col:34> 'struct fuse_conn *' contains-errors <LValueToRValue>     | |     `-DeclRefExpr 0x13e923230 <col:34> 'struct fuse_conn *' contains-errors lvalue Var 0x13e922ed8 'fc' 'struct fuse_conn *'     | `-CompoundStmt 0x148808200 <col:39, line:15:2>     |   |-IfStmt 0x13e923530 <line:8:3, line:13:3>     |   | |-UnaryOperator 0x13e9232f8 <line:8:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | | `-ImplicitCastExpr 0x13e9232e0 <col:8> '<dependent type>' contains-errors <LValueToRValue>     |   | |   `-RecoveryExpr 0x13e9232c0 <col:8> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x13e923508 <col:22, line:13:3>     |   |   |-BinaryOperator 0x13e923390 <line:10:4, col:24> '<dependent type>' contains-errors '='     |   |   | |-RecoveryExpr 0x13e923348 <col:4, col:10> '<dependent type>' contains-errors lvalue     |   |   | | `-DeclRefExpr 0x13e923310 <col:4> 'struct kstat *' lvalue ParmVar 0x13e922628 'stat' 'struct kstat *'     |   |   | `-IntegerLiteral 0x13e923370 <col:24> 'int' 0     |   |   |-BinaryOperator 0x13e9234b8 <line:11:4, col:29> '<dependent type>' contains-errors '='     |   |   | |-RecoveryExpr 0x13e9233e8 <col:4, col:10> '<dependent type>' contains-errors lvalue     |   |   | | `-DeclRefExpr 0x13e9233b0 <col:4> 'struct kstat *' lvalue ParmVar 0x13e922628 'stat' 'struct kstat *'     |   |   | `-CXXDependentScopeMemberExpr 0x13e923470 <col:16, col:29> '<dependent type>' contains-errors lvalue ->s_dev     |   |   |   `-RecoveryExpr 0x13e923448 <col:16, col:23> '<dependent type>' contains-errors lvalue     |   |   |     `-DeclRefExpr 0x13e923410 <col:16> 'struct inode *' contains-errors lvalue Var 0x13e922ac8 'inode' 'struct inode *'     |   |   `-ReturnStmt 0x13e9234f8 <line:12:4, col:11>     |   |     `-IntegerLiteral 0x13e9234d8 <col:11> 'int' 0     |   `-ReturnStmt 0x13e9235e8 <line:14:3, col:11>     |     `-UnaryOperator 0x13e9235d0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x13e9235b8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x13e923598 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x148808488 <line:17:2, col:68>       `-CallExpr 0x148808440 <col:9, col:68> '<dependent type>' contains-errors         |-DeclRefExpr 0x148808320 <col:9> 'int ()' Function 0x148808268 'fuse_update_get_attr' 'int ()'         |-DeclRefExpr 0x148808340 <col:30> 'struct inode *' contains-errors lvalue Var 0x13e922ac8 'inode' 'struct inode *'         |-RecoveryExpr 0x148808420 <col:37> '<dependent type>' contains-errors lvalue         |-DeclRefExpr 0x148808378 <col:43> 'struct kstat *' lvalue ParmVar 0x13e922628 'stat' 'struct kstat *'         |-RecoveryExpr 0x148808398 <col:49> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x1488083b8 <col:63> 'unsigned int' lvalue ParmVar 0x13e922740 'flags' 'unsigned int' ","20820":"`-FunctionDecl 0x1218de148  line:1:1 invalid e_ews_connection_get_ssl_error_details 'int (int *, char **, int *)'   |-ParmVarDecl 0x1218ddf28 <col:41, col:57> col:57 invalid cnc 'int *'   |-ParmVarDecl 0x1218ddfd8 <line:2:6, col:14> col:14 used out_certificate_pem 'char **'   |-ParmVarDecl 0x1218de058 <line:3:6, col:28> col:28 invalid out_certificate_errors 'int *'   `-CompoundStmt 0x12100de18 <line:4:1, line:21:1>     |-CallExpr 0x1218de530 <line:5:2, col:56> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1218de360 <col:2> 'int ()' Function 0x1218de2a8 'g_return_val_if_fail' 'int ()'     | |-CallExpr 0x1218de4a0 <col:24, col:48> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1218de460 <col:24> 'int ()' Function 0x1218de3a8 'E_IS_EWS_CONNECTION' 'int ()'     | | `-RecoveryExpr 0x1218de480 <col:45> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1218de510 <col:51> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12100d290 <line:6:2, col:58> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1218de560 <col:2> 'int ()' Function 0x1218de2a8 'g_return_val_if_fail' 'int ()'     | |-BinaryOperator 0x12100d250 <col:24, col:47> 'int' contains-errors '!='     | | |-DeclRefExpr 0x1218de580 <col:24> 'char **' lvalue ParmVar 0x1218ddfd8 'out_certificate_pem' 'char **'     | | `-RecoveryExpr 0x12100d230 <col:47> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x12100d270 <col:53> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12100d3e0 <line:7:2, col:61> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12100d2c0 <col:2> 'int ()' Function 0x1218de2a8 'g_return_val_if_fail' 'int ()'     | |-BinaryOperator 0x12100d3a0 <col:24, col:50> 'int' contains-errors '!='     | | |-RecoveryExpr 0x12100d2e0 <col:24> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12100d380 <col:50> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x12100d3c0 <col:56> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12100d5d8 <line:9:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12100d4f0 <col:2> 'int ()' Function 0x12100d438 'g_mutex_lock' 'int ()'     | `-UnaryOperator 0x12100d5c0 <col:16, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x12100d578 <col:17, col:28> '<dependent type>' contains-errors lvalue ->property_lock     |     `-CXXDependentScopeMemberExpr 0x12100d530 <col:17, col:22> '<dependent type>' contains-errors lvalue ->priv     |       `-RecoveryExpr 0x12100d510 <col:17> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12100d938 <line:10:2, line:13:2>     | |-UnaryOperator 0x12100d6c8 <line:10:6, col:18> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12100d6b0 <col:7, col:18> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x12100d668 <col:7, col:18> '<dependent type>' contains-errors lvalue ->ssl_info_set     | |     `-CXXDependentScopeMemberExpr 0x12100d620 <col:7, col:12> '<dependent type>' contains-errors lvalue ->priv     | |       `-RecoveryExpr 0x12100d600 <col:7> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12100d918 <col:32, line:13:2>     |   |-CallExpr 0x12100d8a8 <line:11:3, col:44> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12100d7c0 <col:3> 'int ()' Function 0x12100d708 'g_mutex_unlock' 'int ()'     |   | `-UnaryOperator 0x12100d890 <col:19, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-CXXDependentScopeMemberExpr 0x12100d848 <col:20, col:31> '<dependent type>' contains-errors lvalue ->property_lock     |   |     `-CXXDependentScopeMemberExpr 0x12100d800 <col:20, col:25> '<dependent type>' contains-errors lvalue ->priv     |   |       `-RecoveryExpr 0x12100d7e0 <col:20> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x12100d908 <line:12:3, col:10>     |     `-RecoveryExpr 0x12100d8e8 <col:10> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12100db80 <line:15:2, col:65> 'char *' contains-errors '='     | |-UnaryOperator 0x12100d990 <col:2, col:3> 'char *' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x12100d978 <col:3> 'char **' <LValueToRValue>     | |   `-DeclRefExpr 0x12100d958 <col:3> 'char **' lvalue ParmVar 0x1218ddfd8 'out_certificate_pem' 'char **'     | `-CallExpr 0x12100db58 <col:25, col:65> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12100da88 <col:25> 'int ()' Function 0x12100d9d0 'g_strdup' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x12100db10 <col:35, col:46> '<dependent type>' contains-errors lvalue ->ssl_certificate_pem     |     `-CXXDependentScopeMemberExpr 0x12100dac8 <col:35, col:40> '<dependent type>' contains-errors lvalue ->priv     |       `-RecoveryExpr 0x12100daa8 <col:35> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12100dca0 <line:16:2, col:39> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x12100dbd8 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x12100dbc0 <col:3> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x12100dba0 <col:3> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x12100dc58 <col:28, col:39> '<dependent type>' contains-errors lvalue ->ssl_certificate_errors     |   `-CXXDependentScopeMemberExpr 0x12100dc10 <col:28, col:33> '<dependent type>' contains-errors lvalue ->priv     |     `-RecoveryExpr 0x12100dbf0 <col:28> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12100dda8 <line:18:2, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12100dcc0 <col:2> 'int ()' Function 0x12100d708 'g_mutex_unlock' 'int ()'     | `-UnaryOperator 0x12100dd90 <col:18, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x12100dd48 <col:19, col:30> '<dependent type>' contains-errors lvalue ->property_lock     |     `-CXXDependentScopeMemberExpr 0x12100dd00 <col:19, col:24> '<dependent type>' contains-errors lvalue ->priv     |       `-RecoveryExpr 0x12100dce0 <col:19> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12100de08 <line:20:2, col:9>       `-RecoveryExpr 0x12100dde8 <col:9> '<dependent type>' contains-errors lvalue ","21065":"`-FunctionDecl 0x12e8fad10  line:1:13 test_prepare_field_result 'void ()' static   `-CompoundStmt 0x12f00a300 <line:2:1, line:49:1>     |-DeclStmt 0x12e8faec8 <line:5:3, col:16>     | `-VarDecl 0x12e8fae60 <col:3, col:14> col:14 used rc 'int'     |-DeclStmt 0x12e8faf70 <line:6:3, col:36>     | `-VarDecl 0x12e8faf08 <col:3, col:8> col:8 invalid query 'char'     |-CallExpr 0x12e8fb168 <line:8:3, col:17> 'int'     | |-ImplicitCastExpr 0x12e8fb150 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12e8fb0a0 <col:3> 'int ()' Function 0x12e8fafe8 'myheader' 'int ()'     | `-ImplicitCastExpr 0x12e8fb190 <col:12> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x12e8fb100 <col:12> 'char[4]' lvalue \"STR\"     |-BinaryOperator 0x12e8fb3a0 <line:10:3, col:31> 'int' contains-errors '='     | |-DeclRefExpr 0x12e8fb1a8 <col:3> 'int' lvalue Var 0x12e8fae60 'rc' 'int'     | `-CallExpr 0x12e8fb370 <col:7, col:31> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12e8fb2a8 <col:7> 'int ()' Function 0x12e8fb1f0 'mysql_query' 'int ()'     |   |-RecoveryExpr 0x12e8fb350 <col:19> '<dependent type>' contains-errors lvalue     |   `-StringLiteral 0x12e8fb2e0 <col:26> 'char[4]' lvalue \"STR\"     |-CallExpr 0x12f008910 <line:11:3, col:13> 'int'     | |-ImplicitCastExpr 0x12f0088f8 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12f0088b8 <col:3> 'int ()' Function 0x12f008800 'myquery' 'int ()'     | `-ImplicitCastExpr 0x12f008938 <col:11> 'int' <LValueToRValue>     |   `-DeclRefExpr 0x12f0088d8 <col:11> 'int' lvalue Var 0x12e8fae60 'rc' 'int'     |-BinaryOperator 0x12f008ac0 <line:13:3, line:15:31> 'int' contains-errors '='     | |-DeclRefExpr 0x12f008950 <line:13:3> 'int' lvalue Var 0x12e8fae60 'rc' 'int'     | `-CallExpr 0x12f008a90 <col:7, line:15:31> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12f008970 <line:13:7> 'int ()' Function 0x12e8fb1f0 'mysql_query' 'int ()'     |   |-RecoveryExpr 0x12f008a70 <col:19> '<dependent type>' contains-errors lvalue     |   `-StringLiteral 0x12f0089f0 <col:26, line:15:26> 'char[10]' lvalue \"STRSTRSTR\"     |-CallExpr 0x12f008b38 <line:16:3, col:13> 'int'     | |-ImplicitCastExpr 0x12f008b20 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12f008ae0 <col:3> 'int ()' Function 0x12f008800 'myquery' 'int ()'     | `-ImplicitCastExpr 0x12f008b60 <col:11> 'int' <LValueToRValue>     |   `-DeclRefExpr 0x12f008b00 <col:11> 'int' lvalue Var 0x12e8fae60 'rc' 'int'     |-CallExpr 0x12f008d08 <line:19:3, line:20:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f008c58 <line:19:3> 'int ()' Function 0x12f008ba0 'strmov' 'int ()'     | |-RecoveryExpr 0x12f008c78 <col:10> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x12f008ce0 <col:17, line:20:17> 'char[7]' lvalue \"STRSTR\"     |-CallExpr 0x12f009000 <line:22:3, col:18> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f008f80 <col:3> 'int ()' Function 0x12f008ec8 'check_stmt' 'int ()'     | `-RecoveryExpr 0x12f008fe0 <col:14> '<dependent type>' contains-errors lvalue     `-CallExpr 0x12f0091b0 <line:24:3, col:29> '<dependent type>' contains-errors       |-DeclRefExpr 0x12f009108 <col:3> 'int ()' Function 0x12f009050 'verify_param_count' 'int ()'       |-RecoveryExpr 0x12f009190 <col:22> '<dependent type>' contains-errors lvalue       `-IntegerLiteral 0x12f009140 <col:28> 'int' 1 ","20245":"`-FunctionDecl 0x1308e3f18  line:1:1 invalid is_nfs4_perms_w 'int (const int *, const int *, int *)'   |-ParmVarDecl 0x1308e3cf0 <col:17, col:32> col:32 invalid start 'const int *'   |-ParmVarDecl 0x1308e3d70 <col:39, col:54> col:54 invalid end 'const int *'   |-ParmVarDecl 0x1308e3e28 <col:59, col:64> col:64 used permset 'int *'   `-CompoundStmt 0x131009d98 <line:2:1, line:56:1>     |-DeclStmt 0x1308e4078 <line:3:2, col:26>     | `-VarDecl 0x1308e3ff0 <col:2, col:17> col:17 invalid p 'const int *'     |-WhileStmt 0x131009d28 <line:5:2, line:54:2>     | |-BinaryOperator 0x1308e40d0 <line:5:9, col:13> 'int' contains-errors '<'     | | |-RecoveryExpr 0x1308e4090 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1308e40b0 <col:13> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x131009d10 <col:18, line:54:2>     |   `-SwitchStmt 0x1308e4140 <line:6:3, line:53:3>     |     |-UnaryOperator 0x1308e4128 <line:6:11, col:13> '<dependent type>' contains-errors prefix '*' cannot overflow     |     | `-UnaryOperator 0x1308e4110 <col:12, col:13> '<dependent type>' contains-errors postfix '++' cannot overflow     |     |   `-RecoveryExpr 0x1308e40f0 <col:12> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x131009c10 <col:17, line:53:3>     |       |-CaseStmt 0x1308e4180 <line:7:3, line:8:16>     |       | |-CharacterLiteral 0x1308e4168 <line:7:8> 'int' 114     |       | `-CompoundAssignOperator 0x1308e42c0 <line:8:4, col:16> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |       |   |-UnaryOperator 0x1308e4288 <col:4, col:5> 'int' lvalue prefix '*' cannot overflow     |       |   | `-ImplicitCastExpr 0x1308e4270 <col:5> 'int *' <LValueToRValue>     |       |   |   `-DeclRefExpr 0x1308e41a8 <col:5> 'int *' lvalue ParmVar 0x1308e3e28 'permset' 'int *'     |       |   `-RecoveryExpr 0x1308e42a0 <col:16> '<dependent type>' contains-errors lvalue     |       |-BreakStmt 0x1308e42f0 <line:9:4>     |       |-CaseStmt 0x1308e4310 <line:10:3, line:11:16>     |       | |-CharacterLiteral 0x1308e42f8 <line:10:8> 'int' 119     |       | `-CompoundAssignOperator 0x13204ee50 <line:11:4, col:16> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |       |   |-UnaryOperator 0x13204ee18 <col:4, col:5> 'int' lvalue prefix '*' cannot overflow     |       |   | `-ImplicitCastExpr 0x13204ee00 <col:5> 'int *' <LValueToRValue>     |       |   |   `-DeclRefExpr 0x1308e4338 <col:5> 'int *' lvalue ParmVar 0x1308e3e28 'permset' 'int *'     |       |   `-RecoveryExpr 0x13204ee30 <col:16> '<dependent type>' contains-errors lvalue     |       |-BreakStmt 0x13204ee80 <line:12:4>     |       |-CaseStmt 0x13204eea0 <line:13:3, line:14:16>     |       | |-CharacterLiteral 0x13204ee88 <line:13:8> 'int' 120     |       | `-CompoundAssignOperator 0x13204efe0 <line:14:4, col:16> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |       |   |-UnaryOperator 0x13204efa8 <col:4, col:5> 'int' lvalue prefix '*' cannot overflow     |       |   | `-ImplicitCastExpr 0x13204ef90 <col:5> 'int *' <LValueToRValue>     |       |   |   `-DeclRefExpr 0x13204eec8 <col:5> 'int *' lvalue ParmVar 0x1308e3e28 'permset' 'int *'     |       |   `-RecoveryExpr 0x13204efc0 <col:16> '<dependent type>' contains-errors lvalue     |       |-BreakStmt 0x13204f010 <line:15:4>     |       |-CaseStmt 0x13204f030 <line:16:3, line:17:16>     |       | |-CharacterLiteral 0x13204f018 <line:16:8> 'int' 112     |       | `-CompoundAssignOperator 0x13204f170 <line:17:4, col:16> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |       |   |-UnaryOperator 0x13204f138 <col:4, col:5> 'int' lvalue prefix '*' cannot overflow     |       |   | `-ImplicitCastExpr 0x13204f120 <col:5> 'int *' <LValueToRValue>     |       |   |   `-DeclRefExpr 0x13204f058 <col:5> 'int *' lvalue ParmVar 0x1308e3e28 'permset' 'int *'     |       |   `-RecoveryExpr 0x13204f150 <col:16> '<dependent type>' contains-errors lvalue     |       |-BreakStmt 0x13204f1a0 <line:18:4>     |       |-CaseStmt 0x13204f1c0 <line:19:3, line:20:16>     |       | |-CharacterLiteral 0x13204f1a8 <line:19:8> 'int' 68     |       | `-CompoundAssignOperator 0x13204f300 <line:20:4, col:16> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |       |   |-UnaryOperator 0x13204f2c8 <col:4, col:5> 'int' lvalue prefix '*' cannot overflow     |       |   | `-ImplicitCastExpr 0x13204f2b0 <col:5> 'int *' <LValueToRValue>     |       |   |   `-DeclRefExpr 0x13204f1e8 <col:5> 'int *' lvalue ParmVar 0x1308e3e28 'permset' 'int *'     |       |   `-RecoveryExpr 0x13204f2e0 <col:16> '<dependent type>' contains-errors lvalue     |       |-BreakStmt 0x13204f330 <line:21:4>     |       |-CaseStmt 0x13204f350 <line:22:3, line:23:16>     |       | |-CharacterLiteral 0x13204f338 <line:22:8> 'int' 100     |       | `-CompoundAssignOperator 0x13204f490 <line:23:4, col:16> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |       |   |-UnaryOperator 0x13204f458 <col:4, col:5> 'int' lvalue prefix '*' cannot overflow     |       |   | `-ImplicitCastExpr 0x13204f440 <col:5> 'int *' <LValueToRValue>     |       |   |   `-DeclRefExpr 0x13204f378 <col:5> 'int *' lvalue ParmVar 0x1308e3e28 'permset' 'int *'     |       |   `-RecoveryExpr 0x13204f470 <col:16> '<dependent type>' contains-errors lvalue     |       |-BreakStmt 0x13204f4c0 <line:24:4>     |       |-CaseStmt 0x13204f4e0 <line:25:3, line:26:16>     |       | |-CharacterLiteral 0x13204f4c8 <line:25:8> 'int' 97     |       | `-CompoundAssignOperator 0x13204f620 <line:26:4, col:16> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |       |   |-UnaryOperator 0x13204f5e8 <col:4, col:5> 'int' lvalue prefix '*' cannot overflow     |       |   | `-ImplicitCastExpr 0x13204f5d0 <col:5> 'int *' <LValueToRValue>     |       |   |   `-DeclRefExpr 0x13204f508 <col:5> 'int *' lvalue ParmVar 0x1308e3e28 'permset' 'int *'     |       |   `-RecoveryExpr 0x13204f600 <col:16> '<dependent type>' contains-errors lvalue     |       |-BreakStmt 0x13204f650 <line:27:4>     |       |-CaseStmt 0x13204f670 <line:28:3, line:29:16>     |       | |-CharacterLiteral 0x13204f658 <line:28:8> 'int' 65     |       | `-CompoundAssignOperator 0x13204f7b0 <line:29:4, col:16> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |       |   |-UnaryOperator 0x13204f778 <col:4, col:5> 'int' lvalue prefix '*' cannot overflow     |       |   | `-ImplicitCastExpr 0x13204f760 <col:5> 'int *' <LValueToRValue>     |       |   |   `-DeclRefExpr 0x13204f698 <col:5> 'int *' lvalue ParmVar 0x1308e3e28 'permset' 'int *'     |       |   `-RecoveryExpr 0x13204f790 <col:16> '<dependent type>' contains-errors lvalue     |       |-BreakStmt 0x13204f7e0 <line:30:4>     |       |-CaseStmt 0x13204f800 <line:31:3, line:32:16>     |       | |-CharacterLiteral 0x13204f7e8 <line:31:8> 'int' 82     |       | `-CompoundAssignOperator 0x13204f940 <line:32:4, col:16> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |       |   |-UnaryOperator 0x13204f908 <col:4, col:5> 'int' lvalue prefix '*' cannot overflow     |       |   | `-ImplicitCastExpr 0x13204f8f0 <col:5> 'int *' <LValueToRValue>     |       |   |   `-DeclRefExpr 0x13204f828 <col:5> 'int *' lvalue ParmVar 0x1308e3e28 'permset' 'int *'     |       |   `-RecoveryExpr 0x13204f920 <col:16> '<dependent type>' contains-errors lvalue     |       |-BreakStmt 0x13204f970 <line:33:4>     |       |-CaseStmt 0x13204f990 <line:34:3, line:35:16>     |       | |-CharacterLiteral 0x13204f978 <line:34:8> 'int' 87     |       | `-CompoundAssignOperator 0x13204fad0 <line:35:4, col:16> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |       |   |-UnaryOperator 0x13204fa98 <col:4, col:5> 'int' lvalue prefix '*' cannot overflow     |       |   | `-ImplicitCastExpr 0x13204fa80 <col:5> 'int *' <LValueToRValue>     |       |   |   `-DeclRefExpr 0x13204f9b8 <col:5> 'int *' lvalue ParmVar 0x1308e3e28 'permset' 'int *'     |       |   `-RecoveryExpr 0x13204fab0 <col:16> '<dependent type>' contains-errors lvalue     |       |-BreakStmt 0x13204fb00 <line:36:4>     |       |-CaseStmt 0x13204fb20 <line:37:3, line:38:16>     |       | |-CharacterLiteral 0x13204fb08 <line:37:8> 'int' 99     |       | `-CompoundAssignOperator 0x13204fc60 <line:38:4, col:16> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |       |   |-UnaryOperator 0x13204fc28 <col:4, col:5> 'int' lvalue prefix '*' cannot overflow     |       |   | `-ImplicitCastExpr 0x13204fc10 <col:5> 'int *' <LValueToRValue>     |       |   |   `-DeclRefExpr 0x13204fb48 <col:5> 'int *' lvalue ParmVar 0x1308e3e28 'permset' 'int *'     |       |   `-RecoveryExpr 0x13204fc40 <col:16> '<dependent type>' contains-errors lvalue     |       |-BreakStmt 0x13204fc90 <line:39:4>     |       |-CaseStmt 0x13204fcb0 <line:40:3, line:41:16>     |       | |-CharacterLiteral 0x13204fc98 <line:40:8> 'int' 67     |       | `-CompoundAssignOperator 0x131009800 <line:41:4, col:16> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |       |   |-UnaryOperator 0x13204fdb8 <col:4, col:5> 'int' lvalue prefix '*' cannot overflow     |       |   | `-ImplicitCastExpr 0x13204fda0 <col:5> 'int *' <LValueToRValue>     |       |   |   `-DeclRefExpr 0x13204fcd8 <col:5> 'int *' lvalue ParmVar 0x1308e3e28 'permset' 'int *'     |       |   `-RecoveryExpr 0x13204fdd0 <col:16> '<dependent type>' contains-errors lvalue     |       |-BreakStmt 0x131009830 <line:42:4>     |       |-CaseStmt 0x131009850 <line:43:3, line:44:16>     |       | |-CharacterLiteral 0x131009838 <line:43:8> 'int' 111     |       | `-CompoundAssignOperator 0x131009990 <line:44:4, col:16> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |       |   |-UnaryOperator 0x131009958 <col:4, col:5> 'int' lvalue prefix '*' cannot overflow     |       |   | `-ImplicitCastExpr 0x131009940 <col:5> 'int *' <LValueToRValue>     |       |   |   `-DeclRefExpr 0x131009878 <col:5> 'int *' lvalue ParmVar 0x1308e3e28 'permset' 'int *'     |       |   `-RecoveryExpr 0x131009970 <col:16> '<dependent type>' contains-errors lvalue     |       |-BreakStmt 0x1310099c0 <line:45:4>     |       |-CaseStmt 0x1310099e0 <line:46:3, line:47:16>     |       | |-CharacterLiteral 0x1310099c8 <line:46:8> 'int' 115     |       | `-CompoundAssignOperator 0x131009b20 <line:47:4, col:16> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |       |   |-UnaryOperator 0x131009ae8 <col:4, col:5> 'int' lvalue prefix '*' cannot overflow     |       |   | `-ImplicitCastExpr 0x131009ad0 <col:5> 'int *' <LValueToRValue>     |       |   |   `-DeclRefExpr 0x131009a08 <col:5> 'int *' lvalue ParmVar 0x1308e3e28 'permset' 'int *'     |       |   `-RecoveryExpr 0x131009b00 <col:16> '<dependent type>' contains-errors lvalue     |       |-BreakStmt 0x131009b50 <line:48:4>     |       |-CaseStmt 0x131009b70 <line:49:3, line:50:4>     |       | |-CharacterLiteral 0x131009b58 <line:49:8> 'int' 45     |       | `-BreakStmt 0x131009b98 <line:50:4>     |       `-DefaultStmt 0x131009bf0 <line:51:3, line:52:12>     |         `-ReturnStmt 0x131009be0 <col:4, col:12>     |           `-ParenExpr 0x131009bc0 <col:10, col:12> 'int'     |             `-IntegerLiteral 0x131009ba0 <col:11> 'int' 0     `-ReturnStmt 0x131009d88 <line:55:2, col:11>       `-ParenExpr 0x131009d68 <col:9, col:11> 'int'         `-IntegerLiteral 0x131009d48 <col:10> 'int' 1 ","20580":"`-FunctionDecl 0x13f80de88  line:1:14 referenced invalid AverageEval 'int (int *, int *)'   |-ParmVarDecl 0x13f80dd28 <col:26, col:41> col:41 invalid context 'int *'   |-ParmVarDecl 0x13f80dda8 <col:50, col:62> col:62 invalid node 'int *'   `-CompoundStmt 0x13f123cb0 <col:68, line:29:1>     |-DeclStmt 0x13f80e078 <line:2:3, col:73>     | `-VarDecl 0x13f80df58 <col:3, col:9> col:9 used params 'int *' auto     |-DeclStmt 0x13f123400 <line:6:3, col:57>     | `-VarDecl 0x13f123200 <col:3, col:23> col:23 invalid input 'const int *'     `-SwitchStmt 0x13f123498 <line:7:3, line:27:3>       |-ImplicitCastExpr 0x13f123480 <line:7:11, col:18> '<dependent type>' contains-errors <LValueToRValue>       | `-CXXDependentScopeMemberExpr 0x13f123438 <col:11, col:18> '<dependent type>' contains-errors lvalue ->type       |   `-RecoveryExpr 0x13f123418 <col:11> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x13f123c78 <col:24, line:27:3>         |-BreakStmt 0x13f1236a8 <line:10:7>         |-BreakStmt 0x13f123770 <line:14:7>         |-BreakStmt 0x13f123838 <line:18:7>         |-BreakStmt 0x13f123900 <line:22:7>         `-DefaultStmt 0x13f123c58 <line:23:5, line:25:56>           `-CallExpr 0x13f123c20 <line:24:7, line:25:56> '<dependent type>' contains-errors             |-DeclRefExpr 0x13f1239e8 <line:24:7> 'int ()' Function 0x13f123930 'TF_LITE_KERNEL_LOG' 'int ()'             |-RecoveryExpr 0x13f123a08 <col:26> '<dependent type>' contains-errors lvalue             |-StringLiteral 0x13f123a70 <col:35> 'char[4]' lvalue \"STR\"             `-CallExpr 0x13f123bf8 <line:25:26, col:55> '<dependent type>' contains-errors               |-DeclRefExpr 0x13f123b70 <col:26> 'int ()' Function 0x13f123ab8 'TfLiteTypeGetName' 'int ()'               `-CXXDependentScopeMemberExpr 0x13f123bb0 <col:44, col:51> '<dependent type>' contains-errors lvalue ->type                 `-RecoveryExpr 0x13f123b90 <col:44> '<dependent type>' contains-errors lvalue ","20306":"`-FunctionDecl 0x156128b78  line:1:15 invalid curl_write_header 'int (char *, int, int, void *)' static   |-ParmVarDecl 0x1561288f0 <col:33, col:39> col:39 used data 'char *'   |-ParmVarDecl 0x156128970 <col:45, col:52> col:52 invalid size 'int'   |-ParmVarDecl 0x1561289f0 <col:58, col:65> col:65 invalid nmemb 'int'   |-ParmVarDecl 0x156128a70 <col:72, col:78> col:78 ctx 'void *'   `-CompoundStmt 0x156143988 <line:2:1, line:73:1>     |-BinaryOperator 0x156128e40 <line:5:2, col:34> 'unsigned long' contains-errors '='     | |-UnaryExprOrTypeTraitExpr 0x156128e20 <col:2, col:18> 'unsigned long' contains-errors sizeof     | | `-RecoveryExpr 0x156128e00 <col:18> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x156128dc0 <col:27, col:34> '<dependent type>' contains-errors '*'     |   |-RecoveryExpr 0x156128d80 <col:27> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x156128da0 <col:34> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1561420d8 <line:6:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x156128fc0 <col:2> 'int ()' Function 0x156128f08 'TSRMLS_FETCH_FROM_CTX' 'int ()'     | `-CXXDependentScopeMemberExpr 0x156142090 <col:24, col:28> '<dependent type>' contains-errors lvalue ->thread_ctx     |   `-RecoveryExpr 0x156142070 <col:24> '<dependent type>' contains-errors lvalue     `-SwitchStmt 0x1561421e0 <line:8:2, line:70:2>       |-CXXDependentScopeMemberExpr 0x156142198 <line:8:10, col:13> '<dependent type>' contains-errors lvalue ->method       | `-RecoveryExpr 0x156142178 <col:10> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x156143958 <col:21, line:70:2>         |-IfStmt 0x1561427b8 <line:11:4, line:15:4> has_else         | |-BinaryOperator 0x156142538 <line:11:8, col:67> 'int' contains-errors '&&'         | | |-BinaryOperator 0x1561424d8 <col:8, col:39> 'int' contains-errors '=='         | | | |-CXXDependentScopeMemberExpr 0x156142470 <col:8, col:29> '<dependent type>' contains-errors lvalue ->method         | | | | `-CXXDependentScopeMemberExpr 0x156142428 <col:8, col:22> '<dependent type>' contains-errors lvalue ->write         | | | |   `-CXXDependentScopeMemberExpr 0x1561423e0 <col:8, col:12> '<dependent type>' contains-errors lvalue ->handlers         | | | |     `-RecoveryExpr 0x1561423c0 <col:8> '<dependent type>' contains-errors lvalue         | | | `-RecoveryExpr 0x1561424b8 <col:39> '<dependent type>' contains-errors lvalue         | | `-BinaryOperator 0x156142518 <col:58, col:67> 'int' contains-errors '>'         | |   |-RecoveryExpr 0x1561424f8 <col:58> '<dependent type>' contains-errors lvalue         | |   `-IntegerLiteral 0x156142360 <col:67> 'int' 0         | |-CompoundStmt 0x156142678 <col:70, line:13:4>         | `-CompoundStmt 0x1561427a8 <col:11, line:15:4>         |-BreakStmt 0x1561427e8 <line:16:4>         |-CompoundStmt 0x1561438c8 <line:19:23, line:63:3>         | |-DeclStmt 0x156142a20 <line:24:4, col:15>         | | `-VarDecl 0x1561429b8 <col:4, col:10> col:10 used error 'int'         | |-IfStmt 0x156143810 <line:50:4, line:59:4> has_else         | | |-RecoveryExpr 0x1561431a0 <line:50:8, col:17> '_Bool' contains-errors         | | |-CompoundStmt 0x156143358 <col:26, line:53:4>         | | `-IfStmt 0x1561437f0 <col:11, line:59:4>         | |   |-RecoveryExpr 0x156143368 <line:53:15> '_Bool' contains-errors         | |   `-CompoundStmt 0x1561437d8 <col:27, line:59:4>         | |     `-IfStmt 0x1561435b8 <line:54:5, line:56:5>         | |       |-RecoveryExpr 0x156143488 <line:54:9, col:33> '_Bool' contains-errors         | |       `-CompoundStmt 0x1561435a8 <col:42, line:56:5>         | `-BreakStmt 0x1561438c0 <line:62:4>         `-DefaultStmt 0x156143938 <line:68:3, line:69:12>           `-ReturnStmt 0x156143928 <col:4, col:12>             `-UnaryOperator 0x156143910 <col:11, col:12> 'int' prefix '-'               `-IntegerLiteral 0x1561438f0 <col:12> 'int' 1 ","20423":"`-FunctionDecl 0x123928310  line:1:13 invalid lrw_xts_encrypt_callback 'void (void *, int *, unsigned int)' static   |-ParmVarDecl 0x1239280d8 <col:38, col:44> col:44 used ctx 'void *'   |-ParmVarDecl 0x1239281a8 <col:49, col:53> col:53 invalid blks 'int *'   |-ParmVarDecl 0x123928228 <col:59, col:72> col:72 used nbytes 'unsigned int'   `-CompoundStmt 0x123928610 <line:2:1, line:4:1>     `-CallExpr 0x1239285d0 <line:3:2, col:39> '<dependent type>' contains-errors       |-DeclRefExpr 0x123928530 <col:2> 'int ()' Function 0x123928478 'aesni_ecb_enc' 'int ()'       |-DeclRefExpr 0x123928550 <col:16> 'void *' lvalue ParmVar 0x1239280d8 'ctx' 'void *'       |-RecoveryExpr 0x123928570 <col:21> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x123928590 <col:27> '<dependent type>' contains-errors lvalue       `-DeclRefExpr 0x1239285b0 <col:33> 'unsigned int' lvalue ParmVar 0x123928228 'nbytes' 'unsigned int' ","20856":"`-FunctionDecl 0x1499281c8  col:16 invalid setEndStream 'int (int)'   |-ParmVarDecl 0x1499280f0 <col:29, col:34> col:34 invalid end 'int'   `-CompoundStmt 0x149928298 <col:39, col:60> ","20577":"`-FunctionDecl 0x122832438  col:5 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x122832538 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x1228324e0 <<invalid sloc>> Implicit 873 ","20264":"`-FunctionDecl 0x14280e098  line:1:1 ldbm_config_exclude_from_export_set 'int (void *, void *, char *, int, int)'   |-ParmVarDecl 0x14280dcd8 <col:37, col:43> col:43 used arg 'void *'   |-ParmVarDecl 0x14280dd58 <line:2:37, col:43> col:43 used value 'void *'   |-ParmVarDecl 0x14280ddd8 <line:3:37, col:43> col:43 errorbuf 'char *'   | `-UnusedAttr 0x14280de40 <col:67> unused   |-ParmVarDecl 0x14280deb0 <line:4:37, col:41> col:41 phase 'int'   | `-UnusedAttr 0x14280df18 <col:62> unused   |-ParmVarDecl 0x14280df88 <line:5:37, col:41> col:41 used apply 'int'   `-CompoundStmt 0x142122738 <line:6:1, line:23:1>     |-DeclStmt 0x142827680 <line:7:5, col:49>     | |-RecordDecl 0x14280e1b0 <col:5, col:12> col:12 struct ldbminfo     | `-VarDecl 0x14280e318 <col:5, col:46> col:22 used li 'struct ldbminfo *' cinit     |   `-CStyleCastExpr 0x142827640 <col:27, col:46> 'struct ldbminfo *' <BitCast>     |     `-ImplicitCastExpr 0x142827628 <col:46> 'void *' <LValueToRValue> part_of_explicit_cast     |       `-DeclRefExpr 0x14280e380 <col:46> 'void *' lvalue ParmVar 0x14280dcd8 'arg' 'void *'     |-IfStmt 0x1421226d0 <line:9:5, line:20:5>     | |-ImplicitCastExpr 0x1428276b8 <line:9:9> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x142827698 <col:9> 'int' lvalue ParmVar 0x14280df88 'apply' 'int'     | `-CompoundStmt 0x1421226b0 <col:16, line:20:5>     |   |-IfStmt 0x142827ea0 <line:10:9, line:13:9>     |   | |-BinaryOperator 0x142827bc8 <line:10:13, col:25> 'int' contains-errors '!='     |   | | |-RecoveryExpr 0x142827ba8 <col:13> '<dependent type>' contains-errors lvalue     |   | | `-RecoveryExpr 0x142827b60 <col:21, col:25> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x142827700 <col:21> 'struct ldbminfo *' lvalue Var 0x14280e318 'li' 'struct ldbminfo *'     |   | `-CompoundStmt 0x142827e80 <col:58, line:13:9>     |   |   |-CallExpr 0x142827d80 <line:11:13, col:61> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x142827d00 <col:13> 'int ()' Function 0x142827c48 'charray_free' 'int ()'     |   |   | `-RecoveryExpr 0x142827d58 <col:26, col:30> '<dependent type>' contains-errors lvalue     |   |   |   `-DeclRefExpr 0x142827d20 <col:26> 'struct ldbminfo *' lvalue Var 0x14280e318 'li' 'struct ldbminfo *'     |   |   `-BinaryOperator 0x142827e60 <line:12:13, col:51> '<dependent type>' contains-errors '='     |   |     |-RecoveryExpr 0x142827de0 <col:13, col:17> '<dependent type>' contains-errors lvalue     |   |     | `-DeclRefExpr 0x142827da8 <col:13> 'struct ldbminfo *' lvalue Var 0x14280e318 'li' 'struct ldbminfo *'     |   |     `-RecoveryExpr 0x142827e40 <col:51> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x142122690 <line:15:9, line:19:9>     |     |-BinaryOperator 0x142827f38 <line:15:13, col:21> 'int' contains-errors '!='     |     | |-RecoveryExpr 0x142827f18 <col:13> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x142827ed8 <col:21> 'void *' lvalue ParmVar 0x14280dd58 'value' 'void *'     |     `-CompoundStmt 0x142122668 <col:28, line:19:9>     |       |-DeclStmt 0x1428281a0 <line:16:13, col:52>     |       | `-VarDecl 0x142827f70 <col:13, col:51> col:19 used dupvalue 'char *' cinit     |       |   `-ImplicitCastExpr 0x142828188 <col:30, col:51> 'char *' <IntegralToPointer>     |       |     `-CallExpr 0x142828148 <col:30, col:51> 'int'     |       |       |-ImplicitCastExpr 0x142828130 <col:30> 'int (*)()' <FunctionToPointerDecay>     |       |       | `-DeclRefExpr 0x1428280b8 <col:30> 'int ()' Function 0x142828000 'slapi_ch_strdup' 'int ()'     |       |       `-ImplicitCastExpr 0x142828170 <col:46> 'void *' <LValueToRValue>     |       |         `-DeclRefExpr 0x1428280d8 <col:46> 'void *' lvalue ParmVar 0x14280dd58 'value' 'void *'     |       |-BinaryOperator 0x142828418 <line:17:13, col:84> '<dependent type>' contains-errors '='     |       | |-RecoveryExpr 0x1428281f0 <col:13, col:17> '<dependent type>' contains-errors lvalue     |       | | `-DeclRefExpr 0x1428281b8 <col:13> 'struct ldbminfo *' lvalue Var 0x14280e318 'li' 'struct ldbminfo *'     |       | `-CallExpr 0x1428283b8 <col:51, col:84> 'int'     |       |   |-ImplicitCastExpr 0x1428283a0 <col:51> 'int (*)()' <FunctionToPointerDecay>     |       |   | `-DeclRefExpr 0x1428282f8 <col:51> 'int ()' Function 0x142828240 'slapi_str2charray' 'int ()'     |       |   |-ImplicitCastExpr 0x1428283e8 <col:69> 'char *' <LValueToRValue>     |       |   | `-DeclRefExpr 0x142828318 <col:69> 'char *' lvalue Var 0x142827f70 'dupvalue' 'char *'     |       |   `-ImplicitCastExpr 0x142828400 <col:79> 'char *' <ArrayToPointerDecay>     |       |     `-StringLiteral 0x142828380 <col:79> 'char[4]' lvalue \"STR\"     |       `-CallExpr 0x142122640 <line:18:13, col:45> 'int'     |         |-ImplicitCastExpr 0x142122628 <col:13> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x142828518 <col:13> 'int ()' Function 0x142828460 'slapi_ch_free' 'int ()'     |         `-CStyleCastExpr 0x142122600 <col:27, col:37> 'void **' <BitCast>     |           `-UnaryOperator 0x142828590 <col:36, col:37> 'char **' prefix '&' cannot overflow     |             `-DeclRefExpr 0x142828538 <col:37> 'char *' lvalue Var 0x142827f70 'dupvalue' 'char *'     `-ReturnStmt 0x142122728 <line:22:5, col:12>       `-RecoveryExpr 0x142122708 <col:12> '<dependent type>' contains-errors lvalue ","20475":"`-FunctionDecl 0x14800df78  line:1:1 invalid xmlFAGenerateCountedTransition 'int (int, int, int, int)'   |-ParmVarDecl 0x14800dcf0 <col:32, col:52> col:52 referenced invalid ctxt 'int'   |-ParmVarDecl 0x14800dd70 <line:2:6, col:21> col:21 invalid from 'int'   |-ParmVarDecl 0x14800ddf0 <col:27, col:42> col:42 referenced invalid to 'int'   |-ParmVarDecl 0x14800de70 <col:46, col:50> col:50 used counter 'int'   `-CompoundStmt 0x13f922a38 <col:59, line:9:1>     |-IfStmt 0x13f922788 <line:3:5, line:7:5>     | |-BinaryOperator 0x14800e0b8 <line:3:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x14800e040 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14800e098 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13f922760 <col:21, line:7:5>     |   |-BinaryOperator 0x14800e2e8 <line:4:2, col:26> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x14800e0f8 <col:2> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x14800e0d8 <col:2> 'int' lvalue ParmVar 0x14800ddf0 'to' 'int'     |   | `-CallExpr 0x14800e2c0 <col:7, col:26> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x14800e280 <col:7> 'int ()' Function 0x14800e1c8 'xmlRegNewState' 'int ()'     |   |   `-RecoveryExpr 0x14800e2a0 <col:22> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x13f922660 <line:5:2, col:26> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13f922600 <col:2> 'int ()' Function 0x14800e330 'xmlRegStatePush' 'int ()'     |   | |-RecoveryExpr 0x13f922620 <col:18> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x13f922640 <col:24> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x13f922740 <line:6:2, col:16> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x13f9226d8 <col:2, col:8> '<dependent type>' contains-errors lvalue ->state     |     | `-RecoveryExpr 0x13f9226b0 <col:2> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x13f922690 <col:2> 'int' lvalue ParmVar 0x14800dcf0 'ctxt' 'int'     |     `-RecoveryExpr 0x13f922720 <col:16> '<dependent type>' contains-errors lvalue     `-CallExpr 0x13f9229e8 <line:8:5, col:58> '<dependent type>' contains-errors       |-DeclRefExpr 0x13f922888 <col:5> 'int ()' Function 0x13f9227d0 'xmlRegStateAddTrans' 'int ()'       |-RecoveryExpr 0x13f9228a8 <col:25> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x13f9228c8 <col:31> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x13f9229c8 <col:37> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x13f922900 <col:43> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x13f922940 <col:47, col:48> 'int' prefix '-'       | `-IntegerLiteral 0x13f922920 <col:48> 'int' 1       `-DeclRefExpr 0x13f922958 <col:51> 'int' lvalue ParmVar 0x14800de70 'counter' 'int' ","20752":"`-FunctionDecl 0x12980de80  line:1:13 invalid cmd_oper 'void (const char *, int *)' static   |-ParmVarDecl 0x12980dcd8 <col:22, col:34> col:34 used data 'const char *'   |-ParmVarDecl 0x12980dda8 <col:40, col:56> col:56 invalid server 'int *'   `-CompoundStmt 0x129829070 <line:2:1, line:32:1>     |-DeclStmt 0x12980e0d8 <line:3:2, col:32>     | |-VarDecl 0x12980df50 <col:2, col:8> col:8 used nick 'char *'     | |-VarDecl 0x12980dfd0 <col:2, col:15> col:15 used password 'char *'     | `-VarDecl 0x12980e050 <col:2, col:26> col:26 used format 'char *'     |-DeclStmt 0x12980e170 <line:4:2, col:16>     | `-VarDecl 0x12980e108 <col:2, col:8> col:8 used free_arg 'void *'     |-CallExpr 0x12980e3c0 <line:6:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12980e2e0 <col:2> 'int ()' Function 0x12980e228 'g_return_if_fail' 'int ()'     | `-BinaryOperator 0x12980e3a0 <col:19, col:27> 'int' contains-errors '!='     |   |-DeclRefExpr 0x12980e300 <col:19> 'const char *' lvalue ParmVar 0x12980dcd8 'data' 'const char *'     |   `-RecoveryExpr 0x12980e380 <col:27> '<dependent type>' contains-errors lvalue     |-IfStmt 0x129827ba0 <line:7:2, line:8:40>     | |-BinaryOperator 0x1298279f8 <line:7:6, col:41> 'int' contains-errors '||'     | | |-UnaryOperator 0x129827948 <col:6, col:27> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | `-CallExpr 0x129827920 <col:7, col:27> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x1298278e0 <col:7> 'int ()' Function 0x129827828 'IS_IRC_SERVER' 'int ()'     | | |   `-RecoveryExpr 0x129827900 <col:21> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x1298279e0 <col:32, col:41> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x1298279c8 <col:33, col:41> '<dependent type>' contains-errors <LValueToRValue>     | |     `-CXXDependentScopeMemberExpr 0x129827980 <col:33, col:41> '<dependent type>' contains-errors lvalue ->connected     | |       `-RecoveryExpr 0x129827960 <col:33> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x129827b78 <line:8:3, col:40> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x129827af8 <col:3> 'int ()' Function 0x129827a40 'cmd_return_error' 'int ()'     |   `-RecoveryExpr 0x129827b58 <col:20> '<dependent type>' contains-errors lvalue     |-IfStmt 0x129827ee0 <line:10:2, line:11:3>     | |-UnaryOperator 0x129827eb8 <line:10:6, col:58> 'int' prefix '!' cannot overflow     | | `-CallExpr 0x129827e58 <col:7, col:58> 'int'     | |   |-ImplicitCastExpr 0x129827e40 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x129827ca0 <col:7> 'int ()' Function 0x129827be8 'cmd_get_params' 'int ()'     | |   |-ImplicitCastExpr 0x129827ea0 <col:22> 'const char *' <LValueToRValue>     | |   | `-DeclRefExpr 0x129827cc0 <col:22> 'const char *' lvalue ParmVar 0x12980dcd8 'data' 'const char *'     | |   |-UnaryOperator 0x129827d30 <col:28, col:29> 'void **' prefix '&' cannot overflow     | |   | `-DeclRefExpr 0x129827ce0 <col:29> 'void *' lvalue Var 0x12980e108 'free_arg' 'void *'     | |   |-IntegerLiteral 0x129827d48 <col:39> 'int' 2     | |   |-UnaryOperator 0x129827dc0 <col:42, col:43> 'char **' prefix '&' cannot overflow     | |   | `-DeclRefExpr 0x129827d68 <col:43> 'char *' lvalue Var 0x12980df50 'nick' 'char *'     | |   `-UnaryOperator 0x129827df8 <col:49, col:50> 'char **' prefix '&' cannot overflow     | |     `-DeclRefExpr 0x129827dd8 <col:50> 'char *' lvalue Var 0x12980dfd0 'password' 'char *'     | `-ReturnStmt 0x129827ed0 <line:11:3>     |-IfStmt 0x129828ed8 <line:12:2, line:29:2>     | |-BinaryOperator 0x129827f98 <line:12:6, col:19> 'int' '=='     | | |-ImplicitCastExpr 0x129827f80 <col:6, col:7> 'int' <IntegralCast>     | | | `-ImplicitCastExpr 0x129827f68 <col:6, col:7> 'char' <LValueToRValue>     | | |   `-UnaryOperator 0x129827f38 <col:6, col:7> 'char' lvalue prefix '*' cannot overflow     | | |     `-ImplicitCastExpr 0x129827f20 <col:7> 'char *' <LValueToRValue>     | | |       `-DeclRefExpr 0x129827f00 <col:7> 'char *' lvalue Var 0x12980dfd0 'password' 'char *'     | | `-CharacterLiteral 0x129827f50 <col:19> 'int' 0     | `-CompoundStmt 0x129828eb0 <col:25, line:29:2>     |   |-BinaryOperator 0x1298286c0 <line:20:3, line:21:27> 'char *' contains-errors '='     |   | |-DeclRefExpr 0x1298283f0 <line:20:3> 'char *' lvalue Var 0x12980e050 'format' 'char *'     |   | `-CallExpr 0x129828678 <col:12, line:21:27> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x1298284f0 <line:20:12> 'int ()' Function 0x129828438 'format_get_text' 'int ()'     |   |   |-RecoveryExpr 0x1298285f8 <col:28> '<dependent type>' contains-errors lvalue     |   |   |-RecoveryExpr 0x129828618 <col:41> '<dependent type>' contains-errors lvalue     |   |   |-RecoveryExpr 0x129828540 <col:47> '<dependent type>' contains-errors lvalue     |   |   |-RecoveryExpr 0x129828638 <col:55> '<dependent type>' contains-errors lvalue     |   |   `-RecoveryExpr 0x129828658 <line:21:7> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x129828d38 <line:26:17, col:30> 'int'     |   | |-ImplicitCastExpr 0x129828d20 <col:17> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x129828ce0 <col:17> 'int ()' Function 0x129828c28 'g_free' 'int ()'     |   | `-ImplicitCastExpr 0x129828d60 <col:24> 'char *' <LValueToRValue>     |   |   `-DeclRefExpr 0x129828d00 <col:24> 'char *' lvalue Var 0x12980e050 'format' 'char *'     |   `-CallExpr 0x129828e90 <line:28:3, col:15> 'int'     |     `-ImplicitCastExpr 0x129828e78 <col:3> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x129828e58 <col:3> 'int ()' Function 0x129828da0 'signal_stop' 'int ()'     `-CallExpr 0x129829030 <line:31:2, col:26> 'int'       |-ImplicitCastExpr 0x129829018 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x129828fd8 <col:2> 'int ()' Function 0x129828f20 'cmd_params_free' 'int ()'       `-ImplicitCastExpr 0x129829058 <col:18> 'void *' <LValueToRValue>         `-DeclRefExpr 0x129828ff8 <col:18> 'void *' lvalue Var 0x12980e108 'free_arg' 'void *' ","21096":"`-FunctionDecl 0x14c80e358  line:1:5 dm_deleting_md 'int (struct mapped_device *)'   |-ParmVarDecl 0x14c80e248 <col:20, col:42> col:42 used md 'struct mapped_device *'   `-CompoundStmt 0x14c8268c0 <line:2:1, line:4:1>     `-ReturnStmt 0x14c8268b0 <line:3:2, col:42>       `-CallExpr 0x14c826880 <col:9, col:42> '<dependent type>' contains-errors         |-DeclRefExpr 0x14c826780 <col:9> 'int ()' Function 0x14c8266c8 'test_bit' 'int ()'         |-RecoveryExpr 0x14c826860 <col:18> '<dependent type>' contains-errors lvalue         `-UnaryOperator 0x14c826818 <col:32, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow           `-RecoveryExpr 0x14c8267f0 <col:33, col:37> '<dependent type>' contains-errors lvalue             `-DeclRefExpr 0x14c8267b8 <col:33> 'struct mapped_device *' lvalue ParmVar 0x14c80e248 'md' 'struct mapped_device *' ","21074":"`-FunctionDecl 0x14f80e350  line:1:6 referenced rt_add_uncached_list 'void (struct rtable *)'   |-ParmVarDecl 0x14f80e248 <col:27, col:42> col:42 used rt 'struct rtable *'   `-CompoundStmt 0x14f827128 <line:2:1, line:10:1>     |-DeclStmt 0x14f826b10 <line:3:2, col:59>     | |-RecordDecl 0x14f826648 <col:2, col:9> col:9 struct uncached_list     | `-VarDecl 0x14f8267b8 <col:2, col:58> col:24 used ul 'struct uncached_list *' cinit     |   `-ImplicitCastExpr 0x14f826ae0 <col:29, col:58> 'struct uncached_list *' <IntegralToPointer>     |     `-CallExpr 0x14f826ab8 <col:29, col:58> 'int'     |       |-ImplicitCastExpr 0x14f826aa0 <col:29> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14f826950 <col:29> 'int ()' Function 0x14f826898 'raw_cpu_ptr' 'int ()'     |       `-UnaryOperator 0x14f826a50 <col:41, col:42> 'void (*)(struct rtable *)' prefix '&' cannot overflow     |         `-DeclRefExpr 0x14f8269c8 <col:42> 'void (struct rtable *)' Function 0x14f80e350 'rt_add_uncached_list' 'void (struct rtable *)'     |-BinaryOperator 0x14f826ba8 <line:5:2, col:25> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14f826b60 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14f826b28 <col:2> 'struct rtable *' lvalue ParmVar 0x14f80e248 'rt' 'struct rtable *'     | `-DeclRefExpr 0x14f826b88 <col:25> 'struct uncached_list *' lvalue Var 0x14f8267b8 'ul' 'struct uncached_list *'     |-CallExpr 0x14f826d40 <line:7:2, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14f826ca8 <col:2> 'int ()' Function 0x14f826bf0 'spin_lock_bh' 'int ()'     | `-UnaryOperator 0x14f826d28 <col:15, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14f826d00 <col:16, col:20> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14f826cc8 <col:16> 'struct uncached_list *' lvalue Var 0x14f8267b8 'ul' 'struct uncached_list *'     |-CallExpr 0x14f826f58 <line:8:2, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14f826e48 <col:2> 'int ()' Function 0x14f826d90 'list_add_tail' 'int ()'     | |-UnaryOperator 0x14f826ec8 <col:16, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x14f826ea0 <col:17, col:21> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14f826e68 <col:17> 'struct rtable *' lvalue ParmVar 0x14f80e248 'rt' 'struct rtable *'     | `-UnaryOperator 0x14f826f40 <col:34, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14f826f18 <col:35, col:39> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14f826ee0 <col:35> 'struct uncached_list *' lvalue Var 0x14f8267b8 'ul' 'struct uncached_list *'     `-CallExpr 0x14f827100 <line:9:2, col:26> '<dependent type>' contains-errors       |-DeclRefExpr 0x14f827068 <col:2> 'int ()' Function 0x14f826fb0 'spin_unlock_bh' 'int ()'       `-UnaryOperator 0x14f8270e8 <col:17, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x14f8270c0 <col:18, col:22> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x14f827088 <col:18> 'struct uncached_list *' lvalue Var 0x14f8267b8 'ul' 'struct uncached_list *' ","21235":"`-FunctionDecl 0x1371447f8  col:9 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x1371448f8 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x1371448a0 <<invalid sloc>> Implicit 873 ","20432":"`-FunctionDecl 0x13e809908  col:6 implicit used isdigit 'int (int)' extern   |-ParmVarDecl 0x13e809a08 <<invalid sloc>> <invalid sloc> 'int'   |-BuiltinAttr 0x13e8099b0 <<invalid sloc>> Implicit 924   |-NoThrowAttr 0x13e809a78 <col:6> Implicit   `-PureAttr 0x13e809aa0 <col:6> Implicit ","20431":"`-FunctionDecl 0x1400283a0  col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x1400284a0 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x140028508 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x140028570 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x140028448 <<invalid sloc>> Implicit 882 ","21028":"`-FunctionDecl 0x15281df18  line:1:5 read_filesystem_tables_4 'int ()'   `-CompoundStmt 0x1528368e0 <line:2:1, line:29:1>     |-DeclStmt 0x15281e120 <line:3:2, col:44>     | |-VarDecl 0x15281e020 <col:2, col:12> col:12 used directory_table_end 'long long'     | `-VarDecl 0x15281e0a0 <col:2, col:33> col:33 used table_start 'long long'     |-IfStmt 0x15281e550 <line:5:2, line:6:10>     | |-BinaryOperator 0x15281e4e8 <line:5:5, col:68> 'int' contains-errors '=='     | | |-CallExpr 0x15281e4a8 <col:5, col:63> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x15281e230 <col:5> 'int ()' Function 0x15281e178 'read_xattrs_from_disk' 'int ()'     | | | |-RecoveryExpr 0x15281e3e8 <col:27> '<dependent type>' contains-errors lvalue     | | | |-UnaryOperator 0x15281e470 <col:31, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | | `-CXXDependentScopeMemberExpr 0x15281e428 <col:32, col:37> '<dependent type>' contains-errors lvalue .s     | | | |   `-RecoveryExpr 0x15281e408 <col:32> '<dependent type>' contains-errors lvalue     | | | |-RecoveryExpr 0x15281e488 <col:40> '<dependent type>' contains-errors lvalue     | | | `-UnaryOperator 0x15281e350 <col:51, col:52> 'long long *' prefix '&' cannot overflow     | | |   `-DeclRefExpr 0x15281e2f8 <col:52> 'long long' lvalue Var 0x15281e0a0 'table_start' 'long long'     | | `-IntegerLiteral 0x15281e3a8 <col:68> 'int' 0     | `-ReturnStmt 0x15281e540 <line:6:3, col:10>     |   `-RecoveryExpr 0x15281e520 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x152835cc0 <line:8:2, line:9:10>     | |-BinaryOperator 0x152835c58 <line:8:5, col:38> 'int' contains-errors '=='     | | |-CallExpr 0x152835c10 <col:5, col:33> 'int'     | | | |-ImplicitCastExpr 0x152835bf8 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x152835ab8 <col:5> 'int ()' Function 0x152835a00 'read_uids_guids' 'int ()'     | | | `-UnaryOperator 0x152835af8 <col:21, col:22> 'long long *' prefix '&' cannot overflow     | | |   `-DeclRefExpr 0x152835ad8 <col:22> 'long long' lvalue Var 0x15281e0a0 'table_start' 'long long'     | | `-RecoveryExpr 0x152835c38 <col:38> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x152835cb0 <line:9:3, col:10>     |   `-RecoveryExpr 0x152835c90 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x152835f98 <line:11:2, line:12:10>     | |-BinaryOperator 0x152835f30 <line:11:5, col:42> 'int' contains-errors '=='     | | |-CallExpr 0x152835ee8 <col:5, col:37> 'int'     | | | |-ImplicitCastExpr 0x152835ed0 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x152835dc0 <col:5> 'int ()' Function 0x152835d08 'parse_exports_table' 'int ()'     | | | `-UnaryOperator 0x152835e00 <col:25, col:26> 'long long *' prefix '&' cannot overflow     | | |   `-DeclRefExpr 0x152835de0 <col:26> 'long long' lvalue Var 0x15281e0a0 'table_start' 'long long'     | | `-RecoveryExpr 0x152835f10 <col:42> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x152835f88 <line:12:3, col:10>     |   `-RecoveryExpr 0x152835f68 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x152836270 <line:14:2, line:15:10>     | |-BinaryOperator 0x152836208 <line:14:5, col:50> 'int' contains-errors '=='     | | |-CallExpr 0x1528361c0 <col:5, col:45> 'int'     | | | |-ImplicitCastExpr 0x1528361a8 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x152836098 <col:5> 'int ()' Function 0x152835fe0 'read_fragment_table' 'int ()'     | | | `-UnaryOperator 0x1528360d8 <col:25, col:26> 'long long *' prefix '&' cannot overflow     | | |   `-DeclRefExpr 0x1528360b8 <col:26> 'long long' lvalue Var 0x15281e020 'directory_table_end' 'long long'     | | `-RecoveryExpr 0x1528361e8 <col:50> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x152836260 <line:15:3, col:10>     |   `-RecoveryExpr 0x152836240 <col:10> '<dependent type>' contains-errors lvalue     `-IfStmt 0x152836760 <line:17:2, line:19:10>       |-BinaryOperator 0x1528366f8 <line:17:5, line:18:38> 'int' contains-errors '=='       | |-CallExpr 0x1528366a8 <line:17:5, line:18:33> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x152836370 <line:17:5> 'int ()' Function 0x1528362b8 'read_inode_table' 'int ()'       | | |-CXXDependentScopeMemberExpr 0x1528365b0 <col:22, col:29> '<dependent type>' contains-errors lvalue .inode_table_start       | | | `-CXXDependentScopeMemberExpr 0x152836568 <col:22, col:27> '<dependent type>' contains-errors lvalue .s       | | |   `-RecoveryExpr 0x152836548 <col:22> '<dependent type>' contains-errors lvalue       | | `-CXXDependentScopeMemberExpr 0x152836660 <line:18:5, col:12> '<dependent type>' contains-errors lvalue .directory_table_start       | |   `-CXXDependentScopeMemberExpr 0x152836618 <col:5, col:10> '<dependent type>' contains-errors lvalue .s       | |     `-RecoveryExpr 0x1528365f8 <col:5> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x1528366d8 <col:38> '<dependent type>' contains-errors lvalue       `-ReturnStmt 0x152836750 <line:19:3, col:10>         `-RecoveryExpr 0x152836730 <col:10> '<dependent type>' contains-errors lvalue ","21117":"`-FunctionDecl 0x11d928758  line:1:12 req_prot_init 'int (const struct proto *)' static   |-ParmVarDecl 0x11d928648 <col:26, col:46> col:46 used prot 'const struct proto *'   `-CompoundStmt 0x11d941908 <line:2:1, line:23:1>     |-DeclStmt 0x11d940c98 <line:3:2, col:52>     | |-RecordDecl 0x11d940a50 <col:2, col:9> col:9 struct request_sock_ops     | `-VarDecl 0x11d940bb8 <col:2, col:44> col:27 used rsk_prot 'struct request_sock_ops *' cinit     |   `-RecoveryExpr 0x11d940c58 <col:38, col:44> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x11d940c20 <col:38> 'const struct proto *' lvalue ParmVar 0x11d928648 'prot' 'const struct proto *'     |-IfStmt 0x11d940d30 <line:5:2, line:6:10>     | |-UnaryOperator 0x11d940ce8 <line:5:6, col:7> 'int' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x11d940cd0 <col:7> 'struct request_sock_ops *' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x11d940cb0 <col:7> 'struct request_sock_ops *' contains-errors lvalue Var 0x11d940bb8 'rsk_prot' 'struct request_sock_ops *'     | `-ReturnStmt 0x11d940d20 <line:6:3, col:10>     |   `-IntegerLiteral 0x11d940d00 <col:10> 'int' 0     |-BinaryOperator 0x11d941090 <line:8:2, line:9:16> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x11d940d88 <line:8:2, col:12> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x11d940d50 <col:2> 'struct request_sock_ops *' contains-errors lvalue Var 0x11d940bb8 'rsk_prot' 'struct request_sock_ops *'     | `-CallExpr 0x11d941058 <col:24, line:9:16> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x11d940ee0 <line:8:24> 'int ()' Function 0x11d940e28 'kasprintf' 'int ()'     |   |-RecoveryExpr 0x11d941038 <col:34> '<dependent type>' contains-errors lvalue     |   |-StringLiteral 0x11d940f60 <col:46> 'char[4]' lvalue \"STR\"     |   `-RecoveryExpr 0x11d940fb8 <line:9:6, col:12> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x11d940f80 <col:6> 'const struct proto *' lvalue ParmVar 0x11d928648 'prot' 'const struct proto *'     |-IfStmt 0x11d9411e8 <line:10:2, line:11:11>     | |-UnaryOperator 0x11d941128 <line:10:6, col:17> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x11d941110 <col:7, col:17> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x11d9410e8 <col:7, col:17> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x11d9410b0 <col:7> 'struct request_sock_ops *' contains-errors lvalue Var 0x11d940bb8 'rsk_prot' 'struct request_sock_ops *'     | `-ReturnStmt 0x11d9411d8 <line:11:3, col:11>     |   `-UnaryOperator 0x11d9411c0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x11d9411a8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x11d941188 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x11d941590 <line:13:2, line:15:31> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x11d941240 <line:13:2, col:12> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x11d941208 <col:2> 'struct request_sock_ops *' contains-errors lvalue Var 0x11d940bb8 'rsk_prot' 'struct request_sock_ops *'     | `-CallExpr 0x11d941548 <col:19, line:15:31> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x11d941348 <line:13:19> 'int ()' Function 0x11d941290 'kmem_cache_create' 'int ()'     |   |-RecoveryExpr 0x11d9413a0 <col:37, col:47> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x11d941368 <col:37> 'struct request_sock_ops *' contains-errors lvalue Var 0x11d940bb8 'rsk_prot' 'struct request_sock_ops *'     |   |-RecoveryExpr 0x11d941400 <line:14:9, col:19> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x11d9413c8 <col:9> 'struct request_sock_ops *' contains-errors lvalue Var 0x11d940bb8 'rsk_prot' 'struct request_sock_ops *'     |   |-IntegerLiteral 0x11d941428 <col:29> 'int' 0     |   |-RecoveryExpr 0x11d941480 <line:15:9, col:15> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x11d941448 <col:9> 'const struct proto *' lvalue ParmVar 0x11d928648 'prot' 'const struct proto *'     |   `-RecoveryExpr 0x11d941528 <col:27> '<dependent type>' contains-errors lvalue     |-IfStmt 0x11d9418b8 <line:17:2, line:21:2>     | |-UnaryOperator 0x11d941628 <line:17:6, col:17> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x11d941610 <col:7, col:17> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x11d9415e8 <col:7, col:17> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x11d9415b0 <col:7> 'struct request_sock_ops *' contains-errors lvalue Var 0x11d940bb8 'rsk_prot' 'struct request_sock_ops *'     | `-CompoundStmt 0x11d941898 <col:23, line:21:2>     |   |-CallExpr 0x11d9417c0 <line:18:3, line:19:14> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x11d941720 <line:18:3> 'int ()' Function 0x11d941668 'pr_crit' 'int ()'     |   | |-StringLiteral 0x11d941740 <col:11> 'char[4]' lvalue \"STR\"     |   | `-RecoveryExpr 0x11d941798 <line:19:4, col:10> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x11d941760 <col:4> 'const struct proto *' lvalue ParmVar 0x11d928648 'prot' 'const struct proto *'     |   `-ReturnStmt 0x11d941888 <line:20:3, col:11>     |     `-UnaryOperator 0x11d941870 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x11d941858 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x11d941838 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x11d9418f8 <line:22:2, col:9>       `-IntegerLiteral 0x11d9418d8 <col:9> 'int' 0 ","21248":"`-FunctionDecl 0x12a1417e8  line:1:5 invalid dccp_recvmsg 'int (struct kiocb *, struct sock *, struct msghdr *, int, int, int, int *)'   |-ParmVarDecl 0x12a128e48 <col:18, col:32> col:32 iocb 'struct kiocb *'   |-ParmVarDecl 0x12a141228 <col:38, col:51> col:51 used sk 'struct sock *'   |-ParmVarDecl 0x12a1413f8 <col:55, col:70> col:70 used msg 'struct msghdr *'   |-ParmVarDecl 0x12a141490 <line:2:4, col:11> col:11 referenced invalid len 'int'   |-ParmVarDecl 0x12a141510 <col:16, col:20> col:20 used nonblock 'int'   |-ParmVarDecl 0x12a141590 <col:30, col:34> col:34 used flags 'int'   |-ParmVarDecl 0x12a141648 <col:41, col:46> col:46 addr_len 'int *'   `-CompoundStmt 0x12a143ba0 <line:3:1, line:103:1>     |-DeclStmt 0x12a141ab8 <line:4:2, col:27>     | |-RecordDecl 0x12a1418c8 <col:8, col:15> col:15 struct dccp_hdr     | `-VarDecl 0x12a141a38 <col:2, col:25> col:25 used dh 'const struct dccp_hdr *'     |-DeclStmt 0x12a141b50 <line:5:2, col:12>     | `-VarDecl 0x12a141ae8 <col:2, col:7> col:7 used timeo 'long'     |-CallExpr 0x12a141d48 <line:7:2, col:14> 'int'     | |-ImplicitCastExpr 0x12a141d30 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12a141cc0 <col:2> 'int ()' Function 0x12a141c08 'lock_sock' 'int ()'     | `-ImplicitCastExpr 0x12a141d70 <col:12> 'struct sock *' <LValueToRValue>     |   `-DeclRefExpr 0x12a141ce0 <col:12> 'struct sock *' lvalue ParmVar 0x12a141228 'sk' 'struct sock *'     |-IfStmt 0x12a142008 <line:9:2, line:12:2>     | |-BinaryOperator 0x12a141e40 <line:9:6, col:22> 'int' contains-errors '=='     | | |-RecoveryExpr 0x12a141dc0 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x12a141d88 <col:6> 'struct sock *' lvalue ParmVar 0x12a141228 'sk' 'struct sock *'     | | `-RecoveryExpr 0x12a141e20 <col:22> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12a141fe8 <col:35, line:12:2>     |   |-BinaryOperator 0x12a141f60 <line:10:3, col:10> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x12a141e80 <col:3> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x12a141e60 <col:3> 'int' lvalue ParmVar 0x12a141490 'len' 'int'     |   | `-UnaryOperator 0x12a141f48 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x12a141f30 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x12a141f10 <col:10> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x12a141fd0 <line:11:3, col:8> 'out' 0x12a141f80     |-BinaryOperator 0x12b808c18 <line:14:2, col:36> 'long' '='     | |-DeclRefExpr 0x12a142028 <col:2> 'long' lvalue Var 0x12a141ae8 'timeo' 'long'     | `-ImplicitCastExpr 0x12b808c00 <col:10, col:36> 'long' <IntegralCast>     |   `-CallExpr 0x12a1421a0 <col:10, col:36> 'int'     |     |-ImplicitCastExpr 0x12a142188 <col:10> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x12a142128 <col:10> 'int ()' Function 0x12a142070 'sock_rcvtimeo' 'int ()'     |     |-ImplicitCastExpr 0x12a1421d0 <col:24> 'struct sock *' <LValueToRValue>     |     | `-DeclRefExpr 0x12a142148 <col:24> 'struct sock *' lvalue ParmVar 0x12a141228 'sk' 'struct sock *'     |     `-ImplicitCastExpr 0x12a1421e8 <col:28> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x12a142168 <col:28> 'int' lvalue ParmVar 0x12a141510 'nonblock' 'int'     |-DoStmt 0x12a1439b8 <line:16:2, line:99:12>     | |-CompoundStmt 0x12a143900 <line:16:5, line:99:2>     | | |-DeclStmt 0x12b808fc8 <line:17:3, col:56>     | | | |-RecordDecl 0x12b808c38 <col:3, col:10> col:10 struct sk_buff     | | | `-VarDecl 0x12b808da8 <col:3, col:55> col:19 used skb 'struct sk_buff *' cinit     | | |   `-CallExpr 0x12b808f88 <col:25, col:55> '<dependent type>' contains-errors     | | |     |-DeclRefExpr 0x12b808ef0 <col:25> 'int ()' Function 0x12b808e38 'skb_peek' 'int ()'     | | |     `-UnaryOperator 0x12b808f70 <col:34, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |       `-RecoveryExpr 0x12b808f48 <col:35, col:39> '<dependent type>' contains-errors lvalue     | | |         `-DeclRefExpr 0x12b808f10 <col:35> 'struct sock *' lvalue ParmVar 0x12a141228 'sk' 'struct sock *'     | | |-IfStmt 0x12b8090e0 <line:19:3, line:20:9>     | | | |-BinaryOperator 0x12b809058 <line:19:7, col:14> 'int' contains-errors '=='     | | | | |-DeclRefExpr 0x12b808fe0 <col:7> 'struct sk_buff *' contains-errors lvalue Var 0x12b808da8 'skb' 'struct sk_buff *'     | | | | `-RecoveryExpr 0x12b809038 <col:14> '<dependent type>' contains-errors lvalue     | | | `-GotoStmt 0x12b8090c8 <line:20:4, col:9> 'verify_sock_status' 0x12b809078     | | |-BinaryOperator 0x12b8092b0 <line:22:3, col:20> 'const struct dccp_hdr *' contains-errors '='     | | | |-DeclRefExpr 0x12b809100 <col:3> 'const struct dccp_hdr *' lvalue Var 0x12a141a38 'dh' 'const struct dccp_hdr *'     | | | `-ImplicitCastExpr 0x12b809298 <col:8, col:20> 'const struct dccp_hdr *' contains-errors <IntegralToPointer>     | | |   `-CallExpr 0x12b809258 <col:8, col:20> 'int' contains-errors     | | |     |-ImplicitCastExpr 0x12b809240 <col:8> 'int (*)()' <FunctionToPointerDecay>     | | |     | `-DeclRefExpr 0x12b809200 <col:8> 'int ()' Function 0x12b809148 'dccp_hdr' 'int ()'     | | |     `-ImplicitCastExpr 0x12b809280 <col:17> 'struct sk_buff *' contains-errors <LValueToRValue>     | | |       `-DeclRefExpr 0x12b809220 <col:17> 'struct sk_buff *' contains-errors lvalue Var 0x12b808da8 'skb' 'struct sk_buff *'     | | |-SwitchStmt 0x12b809348 <line:24:3, line:43:3>     | | | |-ImplicitCastExpr 0x12b809330 <line:24:11, col:15> '<dependent type>' contains-errors <LValueToRValue>     | | | | `-RecoveryExpr 0x12b809308 <col:11, col:15> '<dependent type>' contains-errors lvalue     | | | |   `-DeclRefExpr 0x12b8092d0 <col:11> 'const struct dccp_hdr *' lvalue Var 0x12a141a38 'dh' 'const struct dccp_hdr *'     | | | `-CompoundStmt 0x12a142318 <col:27, line:43:3>     | | |   |-GotoStmt 0x12b8093f0 <line:27:4, col:9> 'found_ok_skb' 0x12b8093a0     | | |   |-IfStmt 0x12b809628 <line:31:4, line:32:33>     | | |   | |-RecoveryExpr 0x12b809490 <line:31:8, col:26> '_Bool' contains-errors     | | |   | `-CallExpr 0x12b8095e8 <line:32:5, col:33> 'int'     | | |   |   |-ImplicitCastExpr 0x12b8095d0 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | |   |   | `-DeclRefExpr 0x12b809590 <col:5> 'int ()' Function 0x12b8094d8 'dccp_finish_passive_close' 'int ()'     | | |   |   `-ImplicitCastExpr 0x12b809610 <col:31> 'struct sock *' <LValueToRValue>     | | |   |     `-DeclRefExpr 0x12b8095b0 <col:31> 'struct sock *' lvalue ParmVar 0x12a141228 'sk' 'struct sock *'     | | |   |-CallExpr 0x12b809948 <line:35:4, line:36:43> '<dependent type>' contains-errors     | | |   | |-DeclRefExpr 0x12b809740 <line:35:4> 'int ()' Function 0x12b809688 'dccp_pr_debug' 'int ()'     | | |   | |-StringLiteral 0x12b8097a0 <col:18> 'char[4]' lvalue \"STR\"     | | |   | `-CallExpr 0x12b809920 <line:36:11, col:42> '<dependent type>' contains-errors     | | |   |   |-DeclRefExpr 0x12b8098a0 <col:11> 'int ()' Function 0x12b8097e8 'dccp_packet_name' 'int ()'     | | |   |   `-RecoveryExpr 0x12b8098f8 <col:28, col:32> '<dependent type>' contains-errors lvalue     | | |   |     `-DeclRefExpr 0x12b8098c0 <col:28> 'const struct dccp_hdr *' lvalue Var 0x12a141a38 'dh' 'const struct dccp_hdr *'     | | |   |-BinaryOperator 0x12b8099e0 <line:37:4, col:10> '<dependent type>' contains-errors '='     | | |   | |-RecoveryExpr 0x12b809998 <col:4> '<dependent type>' contains-errors lvalue     | | |   | | `-DeclRefExpr 0x12b809978 <col:4> 'int' lvalue ParmVar 0x12a141490 'len' 'int'     | | |   | `-IntegerLiteral 0x12b8099c0 <col:10> 'int' 0     | | |   |-GotoStmt 0x12b809a50 <line:38:4, col:9> 'found_fin_ok' 0x12b809a00     | | |   `-DefaultStmt 0x12b809b80 <line:39:3, line:41:43>     | | |     `-CallExpr 0x12b809b50 <line:40:4, line:41:43> '<dependent type>' contains-errors     | | |       |-DeclRefExpr 0x12b809a68 <line:40:4> 'int ()' Function 0x12b809688 'dccp_pr_debug' 'int ()'     | | |       |-StringLiteral 0x12b809a88 <col:18> 'char[4]' lvalue \"STR\"     | | |       `-CallExpr 0x12b809b28 <line:41:11, col:42> '<dependent type>' contains-errors     | | |         |-DeclRefExpr 0x12b809aa8 <col:11> 'int ()' Function 0x12b8097e8 'dccp_packet_name' 'int ()'     | | |         `-RecoveryExpr 0x12b809b00 <col:28, col:32> '<dependent type>' contains-errors lvalue     | | |           `-DeclRefExpr 0x12b809ac8 <col:28> 'const struct dccp_hdr *' lvalue Var 0x12a141a38 'dh' 'const struct dccp_hdr *'     | | |-LabelStmt 0x12a142568 <line:44:1, line:48:3> 'verify_sock_status'     | | | `-IfStmt 0x12a142548 <line:45:3, line:48:3>     | | |   |-RecoveryExpr 0x12a142478 <line:45:7, col:30> '_Bool' contains-errors     | | |   `-CompoundStmt 0x12a142528 <col:33, line:48:3>     | | |     |-BinaryOperator 0x12a142500 <line:46:4, col:10> '<dependent type>' contains-errors '='     | | |     | |-RecoveryExpr 0x12a1424b8 <col:4> '<dependent type>' contains-errors lvalue     | | |     | | `-DeclRefExpr 0x12a142498 <col:4> 'int' lvalue ParmVar 0x12a141490 'len' 'int'     | | |     | `-IntegerLiteral 0x12a1424e0 <col:10> 'int' 0     | | |     `-BreakStmt 0x12a142520 <line:47:4>     | | |-IfStmt 0x12a1427f0 <line:50:3, line:53:3>     | | | |-RecoveryExpr 0x12a1425c0 <line:50:7, col:11> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x12a142588 <col:7> 'struct sock *' lvalue ParmVar 0x12a141228 'sk' 'struct sock *'     | | | `-CompoundStmt 0x12a1427d0 <col:19, line:53:3>     | | |   |-BinaryOperator 0x12a1427a8 <line:51:4, col:23> '<dependent type>' contains-errors '='     | | |   | |-RecoveryExpr 0x12a142608 <col:4> '<dependent type>' contains-errors lvalue     | | |   | | `-DeclRefExpr 0x12a1425e8 <col:4> 'int' lvalue ParmVar 0x12a141490 'len' 'int'     | | |   | `-CallExpr 0x12a142768 <col:10, col:23> 'int'     | | |   |   |-ImplicitCastExpr 0x12a142750 <col:10> 'int (*)()' <FunctionToPointerDecay>     | | |   |   | `-DeclRefExpr 0x12a142710 <col:10> 'int ()' Function 0x12a142658 'sock_error' 'int ()'     | | |   |   `-ImplicitCastExpr 0x12a142790 <col:21> 'struct sock *' <LValueToRValue>     | | |   |     `-DeclRefExpr 0x12a142730 <col:21> 'struct sock *' lvalue ParmVar 0x12a141228 'sk' 'struct sock *'     | | |   `-BreakStmt 0x12a1427c8 <line:52:4>     | | |-IfStmt 0x12a142940 <line:55:3, line:58:3>     | | | |-RecoveryExpr 0x12a142870 <line:55:7, col:25> '_Bool' contains-errors     | | | `-CompoundStmt 0x12a142920 <col:39, line:58:3>     | | |   |-BinaryOperator 0x12a1428f8 <line:56:4, col:10> '<dependent type>' contains-errors '='     | | |   | |-RecoveryExpr 0x12a1428b0 <col:4> '<dependent type>' contains-errors lvalue     | | |   | | `-DeclRefExpr 0x12a142890 <col:4> 'int' lvalue ParmVar 0x12a141490 'len' 'int'     | | |   | `-IntegerLiteral 0x12a1428d8 <col:10> 'int' 0     | | |   `-BreakStmt 0x12a142918 <line:57:4>     | | |-IfStmt 0x12a142b80 <line:60:3, line:68:3>     | | | |-RecoveryExpr 0x12a1429c0 <line:60:7, col:23> '_Bool' contains-errors     | | | `-CompoundStmt 0x12a142b58 <col:36, line:68:3>     | | |   |-IfStmt 0x12a142aa8 <line:61:4, line:65:4>     | | |   | |-RecoveryExpr 0x12a142a20 <line:61:8, col:32> '_Bool' contains-errors     | | |   | `-CompoundStmt 0x12a142a90 <col:35, line:65:4>     | | |   |   `-BreakStmt 0x12a142a88 <line:64:5>     | | |   |-BinaryOperator 0x12a142b30 <line:66:4, col:10> '<dependent type>' contains-errors '='     | | |   | |-RecoveryExpr 0x12a142ae8 <col:4> '<dependent type>' contains-errors lvalue     | | |   | | `-DeclRefExpr 0x12a142ac8 <col:4> 'int' lvalue ParmVar 0x12a141490 'len' 'int'     | | |   | `-IntegerLiteral 0x12a142b10 <col:10> 'int' 0     | | |   `-BreakStmt 0x12a142b50 <line:67:4>     | | |-IfStmt 0x12a142c58 <line:70:3, line:73:3>     | | | |-UnaryOperator 0x12a142bd8 <line:70:7, col:8> 'int' prefix '!' cannot overflow     | | | | `-ImplicitCastExpr 0x12a142bc0 <col:8> 'long' <LValueToRValue>     | | | |   `-DeclRefExpr 0x12a142ba0 <col:8> 'long' lvalue Var 0x12a141ae8 'timeo' 'long'     | | | `-CompoundStmt 0x12a142c40 <col:15, line:73:3>     | | |   `-BreakStmt 0x12a142c38 <line:72:4>     | | |-IfStmt 0x12a142fa0 <line:75:3, line:78:3>     | | | |-RecoveryExpr 0x12a142d78 <line:75:7, col:29> '_Bool' contains-errors     | | | `-CompoundStmt 0x12a142f80 <col:32, line:78:3>     | | |   |-BinaryOperator 0x12a142f58 <line:76:4, col:31> '<dependent type>' contains-errors '='     | | |   | |-RecoveryExpr 0x12a142db8 <col:4> '<dependent type>' contains-errors lvalue     | | |   | | `-DeclRefExpr 0x12a142d98 <col:4> 'int' lvalue ParmVar 0x12a141490 'len' 'int'     | | |   | `-CallExpr 0x12a142f18 <col:10, col:31> 'int'     | | |   |   |-ImplicitCastExpr 0x12a142f00 <col:10> 'int (*)()' <FunctionToPointerDecay>     | | |   |   | `-DeclRefExpr 0x12a142ec0 <col:10> 'int ()' Function 0x12a142e08 'sock_intr_errno' 'int ()'     | | |   |   `-ImplicitCastExpr 0x12a142f40 <col:26> 'long' <LValueToRValue>     | | |   |     `-DeclRefExpr 0x12a142ee0 <col:26> 'long' lvalue Var 0x12a141ae8 'timeo' 'long'     | | |   `-BreakStmt 0x12a142f78 <line:77:4>     | | |-CallExpr 0x12a143160 <line:80:3, col:26> 'int'     | | | |-ImplicitCastExpr 0x12a143148 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x12a1430a0 <col:3> 'int ()' Function 0x12a142fe8 'sk_wait_data' 'int ()'     | | | |-ImplicitCastExpr 0x12a143190 <col:16> 'struct sock *' <LValueToRValue>     | | | | `-DeclRefExpr 0x12a1430c0 <col:16> 'struct sock *' lvalue ParmVar 0x12a141228 'sk' 'struct sock *'     | | | `-UnaryOperator 0x12a143130 <col:20, col:21> 'long *' prefix '&' cannot overflow     | | |   `-DeclRefExpr 0x12a1430e0 <col:21> 'long' lvalue Var 0x12a141ae8 'timeo' 'long'     | | |-ContinueStmt 0x12a1431a8 <line:81:3>     | | |-LabelStmt 0x12a143460 <line:82:2, line:85:8> 'found_ok_skb'     | | | `-IfStmt 0x12a143430 <line:83:3, line:85:8> has_else     | | |   |-BinaryOperator 0x12a143240 <line:83:7, col:18> 'int' contains-errors '>'     | | |   | |-RecoveryExpr 0x12a1431b0 <col:7> '<dependent type>' contains-errors lvalue     | | |   | `-RecoveryExpr 0x12a143218 <col:13, col:18> '<dependent type>' contains-errors lvalue     | | |   |   `-DeclRefExpr 0x12a1431d0 <col:13> 'struct sk_buff *' contains-errors lvalue Var 0x12b808da8 'skb' 'struct sk_buff *'     | | |   |-BinaryOperator 0x12a143308 <line:84:4, col:15> '<dependent type>' contains-errors '='     | | |   | |-RecoveryExpr 0x12a143280 <col:4> '<dependent type>' contains-errors lvalue     | | |   | | `-DeclRefExpr 0x12a143260 <col:4> 'int' lvalue ParmVar 0x12a141490 'len' 'int'     | | |   | `-RecoveryExpr 0x12a1432e0 <col:10, col:15> '<dependent type>' contains-errors lvalue     | | |   |   `-DeclRefExpr 0x12a1432a8 <col:10> 'struct sk_buff *' contains-errors lvalue Var 0x12b808da8 'skb' 'struct sk_buff *'     | | |   `-NullStmt 0x12a143428 <line:85:8>     | | |-IfStmt 0x12a1436e8 <line:88:3, line:92:3>     | | | |-CallExpr 0x12a143640 <line:88:7, col:56> '<dependent type>' contains-errors     | | | | |-DeclRefExpr 0x12a143560 <col:7> 'int ()' Function 0x12a1434a8 'skb_copy_datagram_iovec' 'int ()'     | | | | |-DeclRefExpr 0x12a143580 <col:31> 'struct sk_buff *' contains-errors lvalue Var 0x12b808da8 'skb' 'struct sk_buff *'     | | | | |-IntegerLiteral 0x12a1435a0 <col:36> 'int' 0     | | | | |-RecoveryExpr 0x12a1435f8 <col:39, col:44> '<dependent type>' contains-errors lvalue     | | | | | `-DeclRefExpr 0x12a1435c0 <col:39> 'struct msghdr *' lvalue ParmVar 0x12a1413f8 'msg' 'struct msghdr *'     | | | | `-RecoveryExpr 0x12a143620 <col:53> '<dependent type>' contains-errors lvalue     | | | `-CompoundStmt 0x12a1436d0 <col:59, line:92:3>     | | |   `-BreakStmt 0x12a1436c8 <line:91:4>     | | |-IfStmt 0x12a143810 <line:93:3, line:94:15>     | | | |-RecoveryExpr 0x12a143728 <line:93:7, col:15> '_Bool' contains-errors     | | | `-BinaryOperator 0x12a1437f0 <line:94:4, col:15> '<dependent type>' contains-errors '='     | | |   |-RecoveryExpr 0x12a143768 <col:4> '<dependent type>' contains-errors lvalue     | | |   | `-DeclRefExpr 0x12a143748 <col:4> 'int' lvalue ParmVar 0x12a141490 'len' 'int'     | | |   `-RecoveryExpr 0x12a1437c8 <col:10, col:15> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x12a143790 <col:10> 'struct sk_buff *' contains-errors lvalue Var 0x12b808da8 'skb' 'struct sk_buff *'     | | |-LabelStmt 0x12a1438d8 <line:95:2, col:14> 'found_fin_ok'     | | | `-NullStmt 0x12a1438d0 <col:14>     | | `-BreakStmt 0x12a1438f8 <line:98:3>     | `-IntegerLiteral 0x12a143998 <line:99:11> 'int' 1     |-LabelStmt 0x12a143b50 <line:100:1, line:101:17> 'out'     | `-CallExpr 0x12a143b10 <col:2, col:17> 'int'     |   |-ImplicitCastExpr 0x12a143af8 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12a143ab8 <col:2> 'int ()' Function 0x12a143a00 'release_sock' 'int ()'     |   `-ImplicitCastExpr 0x12a143b38 <col:15> 'struct sock *' <LValueToRValue>     |     `-DeclRefExpr 0x12a143ad8 <col:15> 'struct sock *' lvalue ParmVar 0x12a141228 'sk' 'struct sock *'     `-ReturnStmt 0x12a143b90 <line:102:2, col:9>       `-RecoveryExpr 0x12a143b70 <col:9> '<dependent type>' contains-errors lvalue ","20238":"`-FunctionDecl 0x134826600  line:1:6 kvm_arch_vcpu_load 'void (struct kvm_vcpu *, int)'   |-ParmVarDecl 0x13480e248 <col:25, col:42> col:42 used vcpu 'struct kvm_vcpu *'   |-ParmVarDecl 0x13480e2c8 <col:48, col:52> col:52 used cpu 'int'   `-CompoundStmt 0x134826b38 <line:2:1, line:8:1>     `-IfStmt 0x134826b18 <line:3:2, line:7:2>       |-BinaryOperator 0x134826780 <line:3:6, col:19> 'int' contains-errors '!='       | |-DeclRefExpr 0x134826700 <col:6> 'int' lvalue ParmVar 0x13480e2c8 'cpu' 'int'       | `-RecoveryExpr 0x134826758 <col:13, col:19> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x134826720 <col:13> 'struct kvm_vcpu *' lvalue ParmVar 0x13480e248 'vcpu' 'struct kvm_vcpu *'       `-CompoundStmt 0x134826af8 <col:24, line:7:2>         |-BinaryOperator 0x134826820 <line:4:3, col:15> '<dependent type>' contains-errors '='         | |-RecoveryExpr 0x1348267d8 <col:3, col:9> '<dependent type>' contains-errors lvalue         | | `-DeclRefExpr 0x1348267a0 <col:3> 'struct kvm_vcpu *' lvalue ParmVar 0x13480e248 'vcpu' 'struct kvm_vcpu *'         | `-DeclRefExpr 0x134826800 <col:15> 'int' lvalue ParmVar 0x13480e2c8 'cpu' 'int'         `-IfStmt 0x134826ad8 <line:5:3, line:6:30>           |-CXXDependentScopeMemberExpr 0x1348268a0 <line:5:7, col:18> '<dependent type>' contains-errors lvalue .ht_active           | `-RecoveryExpr 0x134826878 <col:7, col:13> '<dependent type>' contains-errors lvalue           |   `-DeclRefExpr 0x134826840 <col:7> 'struct kvm_vcpu *' lvalue ParmVar 0x13480e248 'vcpu' 'struct kvm_vcpu *'           `-CallExpr 0x134826a98 <line:6:4, col:30> 'int'             |-ImplicitCastExpr 0x134826a80 <col:4> 'int (*)()' <FunctionToPointerDecay>             | `-DeclRefExpr 0x134826a10 <col:4> 'int ()' Function 0x134826958 'kvm_migrate_hlt_timer' 'int ()'             `-ImplicitCastExpr 0x134826ac0 <col:26> 'struct kvm_vcpu *' <LValueToRValue>               `-DeclRefExpr 0x134826a30 <col:26> 'struct kvm_vcpu *' lvalue ParmVar 0x13480e248 'vcpu' 'struct kvm_vcpu *' ","21004":"`-FunctionDecl 0x14e00ddf0  line:1:13 invalid vhost_vsock_common_send_transport_reset 'void (int *)' static   |-ParmVarDecl 0x14e00dd28 <col:53, col:71> col:71 invalid vvc 'int *'   `-CompoundStmt 0x14f808d00 <line:2:1, line:32:1>     |-DeclStmt 0x14f0084e8 <line:5:5, line:7:6>     | |-RecordDecl 0x14e00df38 <line:5:5, col:12> col:12 struct virtio_vsock_event     | `-VarDecl 0x14e00e038 <col:5, col:31> col:31 invalid event 'struct virtio_vsock_event'     |-IfStmt 0x14f0088e8 <line:10:5, line:13:5>     | |-UnaryOperator 0x14f0086b0 <line:10:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14f008698 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x14f008678 <col:10> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14f0088c8 <col:16, line:13:5>     |   |-CallExpr 0x14f008878 <line:11:9, col:27> 'int'     |   | |-ImplicitCastExpr 0x14f008860 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14f0087a8 <col:9> 'int ()' Function 0x14f0086f0 'error_report' 'int ()'     |   | `-ImplicitCastExpr 0x14f0088a0 <col:22> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x14f008810 <col:22> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x14f0088b8 <line:12:9>     |-IfStmt 0x14f008aa8 <line:15:5, line:19:5>     | |-RecoveryExpr 0x14f008920 <line:15:9, col:15> '_Bool' contains-errors     | `-CompoundStmt 0x14f008a88 <col:24, line:19:5>     |   |-CallExpr 0x14f0089e0 <line:16:9, line:17:27> 'int'     |   | |-ImplicitCastExpr 0x14f0089c8 <line:16:9> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14f008940 <col:9> 'int ()' Function 0x14f0086f0 'error_report' 'int ()'     |   | `-ImplicitCastExpr 0x14f008a08 <col:22, line:17:22> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x14f0089a0 <line:16:22, line:17:22> 'char[7]' lvalue \"STRSTR\"     |   `-GotoStmt 0x14f008a70 <line:18:9, col:14> 'out' 0x14f008a20     |-IfStmt 0x14f008de8 <line:21:5, line:25:5>     | |-RecoveryExpr 0x14f008cf8 <line:21:9, line:22:60> '_Bool' contains-errors     | `-CompoundStmt 0x14f008dc8 <col:63, line:25:5>     |   |-CallExpr 0x14f008d70 <line:23:9, col:27> 'int'     |   | |-ImplicitCastExpr 0x14f008d58 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14f008d18 <col:9> 'int ()' Function 0x14f0086f0 'error_report' 'int ()'     |   | `-ImplicitCastExpr 0x14f008d98 <col:22> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x14f008d38 <col:22> 'char[4]' lvalue \"STR\"     |   `-GotoStmt 0x14f008db0 <line:24:9, col:14> 'out' 0x14f008a20     `-LabelStmt 0x14f808ce0 <line:30:1, col:4> 'out'       `-NullStmt 0x14f808cd8 <col:4> ","21101":"`-FunctionDecl 0x105027438  line:1:12 invalid audit_netlink_ok 'int (struct sk_buff *, int)' static   |-ParmVarDecl 0x10500e248 <col:29, col:45> col:45 skb 'struct sk_buff *'   |-ParmVarDecl 0x10500e2e0 <col:50, col:54> col:54 invalid msg_type 'int'   `-CompoundStmt 0x105027f68 <line:2:1, line:45:1>     |-DeclStmt 0x105027590 <line:3:2, col:13>     | `-VarDecl 0x105027508 <col:2, col:12> col:6 used err 'int' cinit     |   `-IntegerLiteral 0x105027570 <col:12> 'int' 0     |-IfStmt 0x105027948 <line:7:2, line:8:11>     | |-BinaryOperator 0x105027880 <line:7:6, col:28> 'int' contains-errors '!='     | | |-CallExpr 0x105027828 <col:6, col:22> 'int'     | | | `-ImplicitCastExpr 0x105027810 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | |   `-DeclRefExpr 0x105027700 <col:6> 'int ()' Function 0x105027648 'current_user_ns' 'int ()'     | | `-UnaryOperator 0x105027868 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x105027848 <col:28> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x105027938 <line:8:3, col:11>     |   `-UnaryOperator 0x105027920 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x105027908 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x1050278e8 <col:11> '<dependent type>' contains-errors lvalue     |-SwitchStmt 0x1050279a0 <line:10:2, line:42:2>     | |-ImplicitCastExpr 0x105027988 <line:10:10> '<dependent type>' contains-errors <LValueToRValue>     | | `-RecoveryExpr 0x105027968 <col:10> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x105027ef0 <col:20, line:42:2>     |   |-ReturnStmt 0x105027aa8 <line:14:3, col:11>     |   | `-UnaryOperator 0x105027a90 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x105027a78 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x105027a58 <col:11> '<dependent type>' contains-errors lvalue     |   |-BreakStmt 0x105027e38 <line:33:3>     |   |-BreakStmt 0x105027ea0 <line:39:3>     |   `-DefaultStmt 0x105027ed0 <line:40:2, col:9>     |     `-NullStmt 0x105027ec8 <col:9>     `-ReturnStmt 0x105027f58 <line:44:2, col:9>       `-ImplicitCastExpr 0x105027f40 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x105027f20 <col:9> 'int' lvalue Var 0x105027508 'err' 'int' ","21118":"`-FunctionDecl 0x1268328f8  col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x1268329f8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x126832a60 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x126832ac8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1268329a0 <<invalid sloc>> Implicit 882 ","20522":"`-FunctionDecl 0x14c928438  line:1:30 cpu_cfs_rq 'struct cfs_rq *(struct cfs_rq *, int)' static inline   |-ParmVarDecl 0x14c928218 <col:41, col:56> col:56 used cfs_rq 'struct cfs_rq *'   |-ParmVarDecl 0x14c928298 <col:64, col:68> col:68 used this_cpu 'int'   `-CompoundStmt 0x14c944e90 <line:2:1, line:4:1>     `-ReturnStmt 0x14c944e80 <line:3:2, col:36>       `-ArraySubscriptExpr 0x14c944e60 <col:9, col:36> '<dependent type>' contains-errors lvalue         |-ImplicitCastExpr 0x14c944e30 <col:9, col:21> '<dependent type>' contains-errors <LValueToRValue>         | `-CXXDependentScopeMemberExpr 0x14c944dc8 <col:9, col:21> '<dependent type>' contains-errors lvalue ->cfs_rq         |   `-RecoveryExpr 0x14c944da0 <col:9, col:17> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x14c928538 <col:9> 'struct cfs_rq *' lvalue ParmVar 0x14c928218 'cfs_rq' 'struct cfs_rq *'         `-ImplicitCastExpr 0x14c944e48 <col:28> 'int' <LValueToRValue>           `-DeclRefExpr 0x14c944e10 <col:28> 'int' lvalue ParmVar 0x14c928298 'this_cpu' 'int' ","20358":"`-FunctionDecl 0x13f912d48  line:1:12 nfs4_proc_pgio_rpc_prepare 'int (struct rpc_task *, struct nfs_pgio_header *)' static   |-ParmVarDecl 0x13f8fa848 <col:39, col:56> col:56 used task 'struct rpc_task *'   |-ParmVarDecl 0x13f912c28 <line:2:11, col:35> col:35 used hdr 'struct nfs_pgio_header *'   `-CompoundStmt 0x13f914bc8 <line:3:1, line:16:1>     |-IfStmt 0x13f913370 <line:4:2, line:8:10>     | |-CallExpr 0x13f913300 <line:4:6, line:7:8> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x13f912f70 <line:4:6> 'int ()' Function 0x13f912eb8 'nfs4_setup_sequence' 'int ()'     | | |-CXXDependentScopeMemberExpr 0x13f913118 <col:26, col:50> '<dependent type>' contains-errors lvalue ->nfs_client     | | | `-CallExpr 0x13f9130f0 <col:26, col:47> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x13f913070 <col:26> 'int ()' Function 0x13f912fb8 'NFS_SERVER' 'int ()'     | | |   `-RecoveryExpr 0x13f9130c8 <col:37, col:42> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x13f913090 <col:37> 'struct nfs_pgio_header *' lvalue ParmVar 0x13f912c28 'hdr' 'struct nfs_pgio_header *'     | | |-UnaryOperator 0x13f913208 <line:5:4, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | `-CXXDependentScopeMemberExpr 0x13f9131c0 <col:5, col:15> '<dependent type>' contains-errors lvalue .seq_args     | | |   `-RecoveryExpr 0x13f913198 <col:5, col:10> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x13f913160 <col:5> 'struct nfs_pgio_header *' lvalue ParmVar 0x13f912c28 'hdr' 'struct nfs_pgio_header *'     | | |-UnaryOperator 0x13f9132c8 <line:6:4, col:14> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | `-CXXDependentScopeMemberExpr 0x13f913280 <col:5, col:14> '<dependent type>' contains-errors lvalue .seq_res     | | |   `-RecoveryExpr 0x13f913258 <col:5, col:10> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x13f913220 <col:5> 'struct nfs_pgio_header *' lvalue ParmVar 0x13f912c28 'hdr' 'struct nfs_pgio_header *'     | | `-DeclRefExpr 0x13f9132e0 <line:7:4> 'struct rpc_task *' lvalue ParmVar 0x13f8fa848 'task' 'struct rpc_task *'     | `-ReturnStmt 0x13f913360 <line:8:3, col:10>     |   `-IntegerLiteral 0x13f913340 <col:10> 'int' 0     |-IfStmt 0x13f9138c0 <line:9:2, line:12:11>     | |-BinaryOperator 0x13f9137f8 <line:9:6, line:11:23> 'int' contains-errors '=='     | | |-CallExpr 0x13f913700 <line:9:6, line:11:17> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x13f913470 <line:9:6> 'int ()' Function 0x13f9133b8 'nfs4_set_rw_stateid' 'int ()'     | | | |-UnaryOperator 0x13f913538 <col:26, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | | `-CXXDependentScopeMemberExpr 0x13f9134f0 <col:27, col:37> '<dependent type>' contains-errors lvalue .stateid     | | | |   `-RecoveryExpr 0x13f9134c8 <col:27, col:32> '<dependent type>' contains-errors lvalue     | | | |     `-DeclRefExpr 0x13f913490 <col:27> 'struct nfs_pgio_header *' lvalue ParmVar 0x13f912c28 'hdr' 'struct nfs_pgio_header *'     | | | |-CXXDependentScopeMemberExpr 0x13f9135b0 <col:46, col:56> '<dependent type>' contains-errors lvalue .context     | | | | `-RecoveryExpr 0x13f913588 <col:46, col:51> '<dependent type>' contains-errors lvalue     | | | |   `-DeclRefExpr 0x13f913550 <col:46> 'struct nfs_pgio_header *' lvalue ParmVar 0x13f912c28 'hdr' 'struct nfs_pgio_header *'     | | | |-CXXDependentScopeMemberExpr 0x13f913658 <line:10:5, col:15> '<dependent type>' contains-errors lvalue .lock_context     | | | | `-RecoveryExpr 0x13f913630 <col:5, col:10> '<dependent type>' contains-errors lvalue     | | | |   `-DeclRefExpr 0x13f9135f8 <col:5> 'struct nfs_pgio_header *' lvalue ParmVar 0x13f912c28 'hdr' 'struct nfs_pgio_header *'     | | | `-RecoveryExpr 0x13f9136d8 <line:11:5, col:10> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x13f9136a0 <col:5> 'struct nfs_pgio_header *' lvalue ParmVar 0x13f912c28 'hdr' 'struct nfs_pgio_header *'     | | `-UnaryOperator 0x13f9137e0 <col:22, col:23> '<dependent type>' contains-errors prefix '-' cannot overflow     | |   `-ImplicitCastExpr 0x13f9137c8 <col:23> '<dependent type>' contains-errors <LValueToRValue>     | |     `-RecoveryExpr 0x13f9137a8 <col:23> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13f9138b0 <line:12:3, col:11>     |   `-UnaryOperator 0x13f913898 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x13f913880 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13f913860 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13f914b78 <line:13:2, line:14:11>     | |-CallExpr 0x13f914aa8 <line:13:6, col:67> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x13f9139c0 <col:6> 'int ()' Function 0x13f913908 'unlikely' 'int ()'     | | `-CallExpr 0x13f914a78 <col:15, col:66> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x13f913ac0 <col:15> 'int ()' Function 0x13f913a08 'test_bit' 'int ()'     | |   |-RecoveryExpr 0x13f914a58 <col:24> '<dependent type>' contains-errors lvalue     | |   `-UnaryOperator 0x13f913be8 <col:41, col:61> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-CXXDependentScopeMemberExpr 0x13f913ba0 <col:42, col:61> '<dependent type>' contains-errors lvalue ->flags     | |       `-CXXDependentScopeMemberExpr 0x13f913b58 <col:42, col:52> '<dependent type>' contains-errors lvalue .context     | |         `-RecoveryExpr 0x13f913b30 <col:42, col:47> '<dependent type>' contains-errors lvalue     | |           `-DeclRefExpr 0x13f913af8 <col:42> 'struct nfs_pgio_header *' lvalue ParmVar 0x13f912c28 'hdr' 'struct nfs_pgio_header *'     | `-ReturnStmt 0x13f914b68 <line:14:3, col:11>     |   `-UnaryOperator 0x13f914b50 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x13f914b38 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13f914b18 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x13f914bb8 <line:15:2, col:9>       `-IntegerLiteral 0x13f914b98 <col:9> 'int' 0 ","20231":"`-FunctionDecl 0x138140d38  line:1:1 i915_gem_execbuffer_relocate 'int (struct drm_device *, struct eb_objects *, struct list_head *)'   |-ParmVarDecl 0x138128648 <col:30, col:49> col:49 dev 'struct drm_device *'   |-ParmVarDecl 0x138140a28 <line:2:9, col:28> col:28 used eb 'struct eb_objects *'   |-ParmVarDecl 0x138140bf8 <line:3:9, col:27> col:27 used objects 'struct list_head *'   `-CompoundStmt 0x138141858 <line:4:1, line:18:1>     |-DeclStmt 0x138141028 <line:5:2, col:33>     | |-RecordDecl 0x138140e40 <col:2, col:9> col:9 struct drm_i915_gem_object     | `-VarDecl 0x138140fa8 <col:2, col:30> col:30 used obj 'struct drm_i915_gem_object *'     |-DeclStmt 0x1381410e0 <line:6:2, col:13>     | `-VarDecl 0x138141058 <col:2, col:12> col:6 used ret 'int' cinit     |   `-IntegerLiteral 0x1381410c0 <col:12> 'int' 0     |-CallExpr 0x138141288 <line:9:2, col:20> 'int'     | `-ImplicitCastExpr 0x138141270 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x138141220 <col:2> 'int ()' Function 0x138141168 'pagefault_disable' 'int ()'     |-CallExpr 0x138141458 <line:10:2, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x138141388 <col:2> 'int ()' Function 0x1381412d0 'list_for_each_entry' 'int ()'     | |-DeclRefExpr 0x1381413a8 <col:22> 'struct drm_i915_gem_object *' lvalue Var 0x138140fa8 'obj' 'struct drm_i915_gem_object *'     | |-DeclRefExpr 0x1381413c8 <col:27> 'struct list_head *' lvalue ParmVar 0x138140bf8 'objects' 'struct list_head *'     | `-RecoveryExpr 0x138141438 <col:36> '<dependent type>' contains-errors lvalue     |-CompoundStmt 0x1381416c0 <col:47, line:14:2>     | `-BinaryOperator 0x138141668 <line:11:3, col:52> 'int' '='     |   |-DeclRefExpr 0x138141490 <col:3> 'int' lvalue Var 0x138141058 'ret' 'int'     |   `-CallExpr 0x138141608 <col:9, col:52> 'int'     |     |-ImplicitCastExpr 0x1381415f0 <col:9> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x138141590 <col:9> 'int ()' Function 0x1381414d8 'i915_gem_execbuffer_relocate_object' 'int ()'     |     |-ImplicitCastExpr 0x138141638 <col:45> 'struct drm_i915_gem_object *' <LValueToRValue>     |     | `-DeclRefExpr 0x1381415b0 <col:45> 'struct drm_i915_gem_object *' lvalue Var 0x138140fa8 'obj' 'struct drm_i915_gem_object *'     |     `-ImplicitCastExpr 0x138141650 <col:50> 'struct eb_objects *' <LValueToRValue>     |       `-DeclRefExpr 0x1381415d0 <col:50> 'struct eb_objects *' lvalue ParmVar 0x138140a28 'eb' 'struct eb_objects *'     |-CallExpr 0x1381417f0 <line:15:2, col:19> 'int'     | `-ImplicitCastExpr 0x1381417d8 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x1381417b8 <col:2> 'int ()' Function 0x138141700 'pagefault_enable' 'int ()'     `-ReturnStmt 0x138141848 <line:17:2, col:9>       `-ImplicitCastExpr 0x138141830 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x138141810 <col:9> 'int' lvalue Var 0x138141058 'ret' 'int' ","20859":"`-FunctionDecl 0x12580ddc8  line:1:13 invalid ssh_scp_request_get_filename 'const char *(int)'   |-ParmVarDecl 0x12580dcf0 <col:42, col:50> col:50 invalid scp 'int'   `-CompoundStmt 0x12580dff0 <col:54, line:5:1>     |-IfStmt 0x12580df58 <line:2:3, line:3:14>     | |-BinaryOperator 0x12580def0 <line:2:6, col:11> 'int' contains-errors '=='     | | |-RecoveryExpr 0x12580de78 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12580ded0 <col:11> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12580df48 <line:3:7, col:14>     |   `-RecoveryExpr 0x12580df28 <col:14> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12580dfe0 <line:4:3, col:15>       `-CXXDependentScopeMemberExpr 0x12580df98 <col:10, col:15> '<dependent type>' contains-errors lvalue ->request_name         `-RecoveryExpr 0x12580df78 <col:10> '<dependent type>' contains-errors lvalue ","20354":"`-FunctionDecl 0x13c928528  line:1:17 invalid UnsortedSegmentCustomKernel 'int (const int, const int, const int, const int *, const int *, int *)'   |-ParmVarDecl 0x13c9280f0 <col:45, col:57> col:57 invalid input_outer_dim_size 'const int'   |-ParmVarDecl 0x13c928170 <line:2:45, col:57> col:57 invalid inner_dim_size 'const int'   |-ParmVarDecl 0x13c9281f0 <line:3:45, col:57> col:57 invalid output_outer_dim_size 'const int'   |-ParmVarDecl 0x13c928270 <line:4:45, col:58> col:58 invalid segment_ids 'const int *'   |-ParmVarDecl 0x13c9282f0 <line:5:45, col:54> col:54 invalid input 'const int *'   |-ParmVarDecl 0x13c9283a8 <col:61, col:64> col:64 invalid output 'int *'   `-CompoundStmt 0x13c942240 <col:72, line:19:1>     |-DeclStmt 0x13c9286e0 <line:6:3, col:71>     | `-VarDecl 0x13c928618 <col:3, col:15> col:15 invalid input_total_size 'const int'     `-DeclStmt 0x13c9287d8 <line:7:3, col:73>       `-VarDecl 0x13c928710 <col:3, col:15> col:15 invalid output_total_size 'const int' ","20221":"`-FunctionDecl 0x14d00df68  line:1:1 invalid mobility_opt_print 'int (int *, const char *, const unsigned int)'   |-ParmVarDecl 0x14d00dd28 <col:20, col:40> col:40 invalid ndo 'int *'   |-ParmVarDecl 0x14d00dda8 <line:2:20, col:34> col:34 used bp 'const char *'   |-ParmVarDecl 0x14d00de28 <col:38, col:53> col:53 used len 'const unsigned int'   `-CompoundStmt 0x14d80ada0 <line:3:1, line:78:1>     |-DeclStmt 0x14d00e140 <line:4:2, col:20>     | |-VarDecl 0x14d00e040 <col:2, col:11> col:11 used i 'unsigned int'     | `-VarDecl 0x14d00e0c0 <col:2, col:14> col:14 used optlen 'unsigned int'     |-ForStmt 0x14d80ace8 <line:6:2, line:73:2>     | |-BinaryOperator 0x14d00e1b0 <line:6:7, col:11> 'unsigned int' '='     | | |-DeclRefExpr 0x14d00e158 <col:7> 'unsigned int' lvalue Var 0x14d00e040 'i' 'unsigned int'     | | `-ImplicitCastExpr 0x14d00e198 <col:11> 'unsigned int' <IntegralCast>     | |   `-IntegerLiteral 0x14d00e178 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x14d00e240 <col:14, col:18> 'int' '<'     | | |-ImplicitCastExpr 0x14d00e210 <col:14> 'unsigned int' <LValueToRValue>     | | | `-DeclRefExpr 0x14d00e1d0 <col:14> 'unsigned int' lvalue Var 0x14d00e040 'i' 'unsigned int'     | | `-ImplicitCastExpr 0x14d00e228 <col:18> 'unsigned int' <LValueToRValue>     | |   `-DeclRefExpr 0x14d00e1f0 <col:18> 'const unsigned int' lvalue ParmVar 0x14d00de28 'len' 'const unsigned int'     | |-CompoundAssignOperator 0x14d00e2b8 <col:23, col:28> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'     | | |-DeclRefExpr 0x14d00e260 <col:23> 'unsigned int' lvalue Var 0x14d00e040 'i' 'unsigned int'     | | `-ImplicitCastExpr 0x14d00e2a0 <col:28> 'unsigned int' <LValueToRValue>     | |   `-DeclRefExpr 0x14d00e280 <col:28> 'unsigned int' lvalue Var 0x14d00e0c0 'optlen' 'unsigned int'     | `-CompoundStmt 0x14d80acb0 <col:36, line:73:2>     |   |-CallExpr 0x14c922fb8 <line:7:3, col:18> 'int'     |   | |-ImplicitCastExpr 0x14c922fa0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14c922eb8 <col:3> 'int ()' Function 0x14c922e00 'ND_TCHECK' 'int ()'     |   | `-ImplicitCastExpr 0x14c922ff8 <col:13, col:17> 'int' <IntegralCast>     |   |   `-ImplicitCastExpr 0x14c922fe0 <col:13, col:17> 'char' <LValueToRValue>     |   |     `-ArraySubscriptExpr 0x14c922f48 <col:13, col:17> 'const char' lvalue     |   |       |-ImplicitCastExpr 0x14c922f18 <col:13> 'const char *' <LValueToRValue>     |   |       | `-DeclRefExpr 0x14c922ed8 <col:13> 'const char *' lvalue ParmVar 0x14d00dda8 'bp' 'const char *'     |   |       `-ImplicitCastExpr 0x14c922f30 <col:16> 'unsigned int' <LValueToRValue>     |   |         `-DeclRefExpr 0x14c922ef8 <col:16> 'unsigned int' lvalue Var 0x14d00e040 'i' 'unsigned int'     |   |-IfStmt 0x14c923710 <line:8:3, line:17:3> has_else     |   | |-BinaryOperator 0x14c923198 <line:8:7, col:16> 'int' contains-errors '=='     |   | | |-ArraySubscriptExpr 0x14c923158 <col:7, col:11> 'const char' lvalue     |   | | | |-ImplicitCastExpr 0x14c923128 <col:7> 'const char *' <LValueToRValue>     |   | | | | `-DeclRefExpr 0x14c923010 <col:7> 'const char *' lvalue ParmVar 0x14d00dda8 'bp' 'const char *'     |   | | | `-ImplicitCastExpr 0x14c923140 <col:10> 'unsigned int' <LValueToRValue>     |   | | |   `-DeclRefExpr 0x14c923030 <col:10> 'unsigned int' lvalue Var 0x14d00e040 'i' 'unsigned int'     |   | | `-RecoveryExpr 0x14c923178 <col:16> '<dependent type>' contains-errors lvalue     |   | |-BinaryOperator 0x14c923210 <line:9:4, col:13> 'unsigned int' '='     |   | | |-DeclRefExpr 0x14c9231b8 <col:4> 'unsigned int' lvalue Var 0x14d00e0c0 'optlen' 'unsigned int'     |   | | `-ImplicitCastExpr 0x14c9231f8 <col:13> 'unsigned int' <IntegralCast>     |   | |   `-IntegerLiteral 0x14c9231d8 <col:13> 'int' 1     |   | `-CompoundStmt 0x14c9236f8 <line:10:8, line:17:3>     |   |   `-IfStmt 0x14c9236c8 <line:11:4, line:16:10> has_else     |   |     |-BinaryOperator 0x14c9232f8 <line:11:8, col:16> 'int' '<'     |   |     | |-BinaryOperator 0x14c9232a0 <col:8, col:12> 'unsigned int' '+'     |   |     | | |-ImplicitCastExpr 0x14c923270 <col:8> 'unsigned int' <LValueToRValue>     |   |     | | | `-DeclRefExpr 0x14c923230 <col:8> 'unsigned int' lvalue Var 0x14d00e040 'i' 'unsigned int'     |   |     | | `-ImplicitCastExpr 0x14c923288 <col:12> 'unsigned int' <IntegralCast>     |   |     | |   `-IntegerLiteral 0x14c923250 <col:12> 'int' 1     |   |     | `-ImplicitCastExpr 0x14c9232e0 <col:16> 'unsigned int' <LValueToRValue>     |   |     |   `-DeclRefExpr 0x14c9232c0 <col:16> 'const unsigned int' lvalue ParmVar 0x14d00de28 'len' 'const unsigned int'     |   |     |-CompoundStmt 0x14c923640 <col:21, line:14:4>     |   |     | |-CallExpr 0x14c923438 <line:12:5, col:24> 'int'     |   |     | | |-ImplicitCastExpr 0x14c923420 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   |     | | | `-DeclRefExpr 0x14c923318 <col:5> 'int ()' Function 0x14c922e00 'ND_TCHECK' 'int ()'     |   |     | | `-ImplicitCastExpr 0x14c923478 <col:15, col:23> 'int' <IntegralCast>     |   |     | |   `-ImplicitCastExpr 0x14c923460 <col:15, col:23> 'char' <LValueToRValue>     |   |     | |     `-ArraySubscriptExpr 0x14c923400 <col:15, col:23> 'const char' lvalue     |   |     | |       |-ImplicitCastExpr 0x14c9233e8 <col:15> 'const char *' <LValueToRValue>     |   |     | |       | `-DeclRefExpr 0x14c923338 <col:15> 'const char *' lvalue ParmVar 0x14d00dda8 'bp' 'const char *'     |   |     | |       `-BinaryOperator 0x14c9233c8 <col:18, col:22> 'unsigned int' '+'     |   |     | |         |-ImplicitCastExpr 0x14c923398 <col:18> 'unsigned int' <LValueToRValue>     |   |     | |         | `-DeclRefExpr 0x14c923358 <col:18> 'unsigned int' lvalue Var 0x14d00e040 'i' 'unsigned int'     |   |     | |         `-ImplicitCastExpr 0x14c9233b0 <col:22> 'unsigned int' <IntegralCast>     |   |     | |           `-IntegerLiteral 0x14c923378 <col:22> 'int' 1     |   |     | `-BinaryOperator 0x14c923620 <line:13:5, col:26> 'unsigned int' '='     |   |     |   |-DeclRefExpr 0x14c923490 <col:5> 'unsigned int' lvalue Var 0x14d00e0c0 'optlen' 'unsigned int'     |   |     |   `-ImplicitCastExpr 0x14c923608 <col:14, col:26> 'unsigned int' <IntegralCast>     |   |     |     `-BinaryOperator 0x14c9235e8 <col:14, col:26> 'int' '+'     |   |     |       |-ImplicitCastExpr 0x14c9235d0 <col:14, col:22> 'int' <IntegralCast>     |   |     |       | `-ImplicitCastExpr 0x14c9235b8 <col:14, col:22> 'char' <LValueToRValue>     |   |     |       |   `-ArraySubscriptExpr 0x14c923578 <col:14, col:22> 'const char' lvalue     |   |     |       |     |-ImplicitCastExpr 0x14c923560 <col:14> 'const char *' <LValueToRValue>     |   |     |       |     | `-DeclRefExpr 0x14c9234b0 <col:14> 'const char *' lvalue ParmVar 0x14d00dda8 'bp' 'const char *'     |   |     |       |     `-BinaryOperator 0x14c923540 <col:17, col:21> 'unsigned int' '+'     |   |     |       |       |-ImplicitCastExpr 0x14c923510 <col:17> 'unsigned int' <LValueToRValue>     |   |     |       |       | `-DeclRefExpr 0x14c9234d0 <col:17> 'unsigned int' lvalue Var 0x14d00e040 'i' 'unsigned int'     |   |     |       |       `-ImplicitCastExpr 0x14c923528 <col:21> 'unsigned int' <IntegralCast>     |   |     |       |         `-IntegerLiteral 0x14c9234f0 <col:21> 'int' 1     |   |     |       `-IntegerLiteral 0x14c923598 <col:26> 'int' 2     |   |     `-GotoStmt 0x14c9236b0 <line:16:5, col:10> 'trunc' 0x14c923660     |   |-IfStmt 0x14c923840 <line:18:3, line:19:9>     |   | |-BinaryOperator 0x14c923808 <line:18:7, col:20> 'int' '>'     |   | | |-BinaryOperator 0x14c9237b0 <col:7, col:11> 'unsigned int' '+'     |   | | | |-ImplicitCastExpr 0x14c923780 <col:7> 'unsigned int' <LValueToRValue>     |   | | | | `-DeclRefExpr 0x14c923740 <col:7> 'unsigned int' lvalue Var 0x14d00e040 'i' 'unsigned int'     |   | | | `-ImplicitCastExpr 0x14c923798 <col:11> 'unsigned int' <LValueToRValue>     |   | | |   `-DeclRefExpr 0x14c923760 <col:11> 'unsigned int' lvalue Var 0x14d00e0c0 'optlen' 'unsigned int'     |   | | `-ImplicitCastExpr 0x14c9237f0 <col:20> 'unsigned int' <LValueToRValue>     |   | |   `-DeclRefExpr 0x14c9237d0 <col:20> 'const unsigned int' lvalue ParmVar 0x14d00de28 'len' 'const unsigned int'     |   | `-GotoStmt 0x14c923828 <line:19:4, col:9> 'trunc' 0x14c923660     |   |-CallExpr 0x14c923980 <line:20:3, col:27> 'int'     |   | |-ImplicitCastExpr 0x14c923968 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14c923860 <col:3> 'int ()' Function 0x14c922e00 'ND_TCHECK' 'int ()'     |   | `-ImplicitCastExpr 0x14c9239c0 <col:13, col:26> 'int' <IntegralCast>     |   |   `-ImplicitCastExpr 0x14c9239a8 <col:13, col:26> 'char' <LValueToRValue>     |   |     `-ArraySubscriptExpr 0x14c923948 <col:13, col:26> 'const char' lvalue     |   |       |-ImplicitCastExpr 0x14c923930 <col:13> 'const char *' <LValueToRValue>     |   |       | `-DeclRefExpr 0x14c923880 <col:13> 'const char *' lvalue ParmVar 0x14d00dda8 'bp' 'const char *'     |   |       `-BinaryOperator 0x14c923910 <col:16, col:20> 'unsigned int' '+'     |   |         |-ImplicitCastExpr 0x14c9238e0 <col:16> 'unsigned int' <LValueToRValue>     |   |         | `-DeclRefExpr 0x14c9238a0 <col:16> 'unsigned int' lvalue Var 0x14d00e040 'i' 'unsigned int'     |   |         `-ImplicitCastExpr 0x14c9238f8 <col:20> 'unsigned int' <LValueToRValue>     |   |           `-DeclRefExpr 0x14c9238c0 <col:20> 'unsigned int' lvalue Var 0x14d00e0c0 'optlen' 'unsigned int'     |   `-SwitchStmt 0x14c923a98 <line:22:3, line:72:3>     |     |-ImplicitCastExpr 0x14c923a80 <line:22:11, col:15> 'int' <IntegralCast>     |     | `-ImplicitCastExpr 0x14c923a68 <col:11, col:15> 'char' <LValueToRValue>     |     |   `-ArraySubscriptExpr 0x14c923a48 <col:11, col:15> 'const char' lvalue     |     |     |-ImplicitCastExpr 0x14c923a18 <col:11> 'const char *' <LValueToRValue>     |     |     | `-DeclRefExpr 0x14c9239d8 <col:11> 'const char *' lvalue ParmVar 0x14d00dda8 'bp' 'const char *'     |     |     `-ImplicitCastExpr 0x14c923a30 <col:14> 'unsigned int' <LValueToRValue>     |     |       `-DeclRefExpr 0x14c9239f8 <col:14> 'unsigned int' lvalue Var 0x14d00e040 'i' 'unsigned int'     |     `-CompoundStmt 0x14d80ac00 <col:18, line:72:3>     |       |-CallExpr 0x14c923ca0 <line:24:4, col:25> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x14c923bb8 <col:4> 'int ()' Function 0x14c923b00 'ND_PRINT' 'int ()'     |       | `-ParenExpr 0x14c923c80 <col:13, col:24> 'char[4]' contains-errors     |       |   `-BinaryOperator 0x14c923c60 <col:14, col:19> 'char[4]' contains-errors ','     |       |     |-RecoveryExpr 0x14c923bd8 <col:14> '<dependent type>' contains-errors lvalue     |       |     `-StringLiteral 0x14c923c40 <col:19> 'char[4]' lvalue \"STR\"     |       |-BreakStmt 0x14c923cc8 <line:25:4>     |       |-IfStmt 0x14d808390 <line:27:4, line:30:4>     |       | |-BinaryOperator 0x14d808270 <line:27:8, col:18> 'int' contains-errors '<'     |       | | |-BinaryOperator 0x14d808230 <col:8, col:14> 'unsigned int' '-'     |       | | | |-ImplicitCastExpr 0x14d808200 <col:8> 'unsigned int' <LValueToRValue>     |       | | | | `-DeclRefExpr 0x14c923ce8 <col:8> 'const unsigned int' lvalue ParmVar 0x14d00de28 'len' 'const unsigned int'     |       | | | `-ImplicitCastExpr 0x14d808218 <col:14> 'unsigned int' <LValueToRValue>     |       | | |   `-DeclRefExpr 0x14c923d08 <col:14> 'unsigned int' lvalue Var 0x14d00e040 'i' 'unsigned int'     |       | | `-RecoveryExpr 0x14d808250 <col:18> '<dependent type>' contains-errors lvalue     |       | `-CompoundStmt 0x14d808370 <col:34, line:30:4>     |       |   |-CallExpr 0x14d808330 <line:28:5, col:26> '<dependent type>' contains-errors     |       |   | |-DeclRefExpr 0x14d808290 <col:5> 'int ()' Function 0x14c923b00 'ND_PRINT' 'int ()'     |       |   | `-ParenExpr 0x14d808310 <col:14, col:25> 'char[4]' contains-errors     |       |   |   `-BinaryOperator 0x14d8082f0 <col:15, col:20> 'char[4]' contains-errors ','     |       |   |     |-RecoveryExpr 0x14d8082b0 <col:15> '<dependent type>' contains-errors lvalue     |       |   |     `-StringLiteral 0x14d8082d0 <col:20> 'char[4]' lvalue \"STR\"     |       |   `-GotoStmt 0x14d808358 <line:29:5, col:10> 'trunc' 0x14c923660     |       |-CallExpr 0x14d808450 <line:31:4, col:25> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x14d8083b0 <col:4> 'int ()' Function 0x14c923b00 'ND_PRINT' 'int ()'     |       | `-ParenExpr 0x14d808430 <col:13, col:24> 'char[4]' contains-errors     |       |   `-BinaryOperator 0x14d808410 <col:14, col:19> 'char[4]' contains-errors ','     |       |     |-RecoveryExpr 0x14d8083d0 <col:14> '<dependent type>' contains-errors lvalue     |       |     `-StringLiteral 0x14d8083f0 <col:19> 'char[4]' lvalue \"STR\"     |       |-BreakStmt 0x14d808478 <line:32:4>     |       |-IfStmt 0x14d808740 <line:34:4, line:37:4>     |       | |-BinaryOperator 0x14d808620 <line:34:8, col:18> 'int' contains-errors '<'     |       | | |-BinaryOperator 0x14d8085e0 <col:8, col:14> 'unsigned int' '-'     |       | | | |-ImplicitCastExpr 0x14d8085b0 <col:8> 'unsigned int' <LValueToRValue>     |       | | | | `-DeclRefExpr 0x14d808498 <col:8> 'const unsigned int' lvalue ParmVar 0x14d00de28 'len' 'const unsigned int'     |       | | | `-ImplicitCastExpr 0x14d8085c8 <col:14> 'unsigned int' <LValueToRValue>     |       | | |   `-DeclRefExpr 0x14d8084b8 <col:14> 'unsigned int' lvalue Var 0x14d00e040 'i' 'unsigned int'     |       | | `-RecoveryExpr 0x14d808600 <col:18> '<dependent type>' contains-errors lvalue     |       | `-CompoundStmt 0x14d808720 <col:42, line:37:4>     |       |   |-CallExpr 0x14d8086e0 <line:35:5, col:26> '<dependent type>' contains-errors     |       |   | |-DeclRefExpr 0x14d808640 <col:5> 'int ()' Function 0x14c923b00 'ND_PRINT' 'int ()'     |       |   | `-ParenExpr 0x14d8086c0 <col:14, col:25> 'char[4]' contains-errors     |       |   |   `-BinaryOperator 0x14d8086a0 <col:15, col:20> 'char[4]' contains-errors ','     |       |   |     |-RecoveryExpr 0x14d808660 <col:15> '<dependent type>' contains-errors lvalue     |       |   |     `-StringLiteral 0x14d808680 <col:20> 'char[4]' lvalue \"STR\"     |       |   `-GotoStmt 0x14d808708 <line:36:5, col:10> 'trunc' 0x14c923660     |       |-CallExpr 0x14d808aa0 <line:39:4, line:40:35> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x14d808760 <line:39:4> 'int ()' Function 0x14c923b00 'ND_PRINT' 'int ()'     |       | `-ParenExpr 0x14d808a80 <col:13, line:40:34> 'int' contains-errors     |       |   `-BinaryOperator 0x14d808a60 <line:39:14, line:40:33> 'int' contains-errors ','     |       |     |-BinaryOperator 0x14d8087c0 <line:39:14, col:19> 'char[4]' contains-errors ','     |       |     | |-RecoveryExpr 0x14d808780 <col:14> '<dependent type>' contains-errors lvalue     |       |     | `-StringLiteral 0x14d8087a0 <col:19> 'char[4]' lvalue \"STR\"     |       |     `-BinaryOperator 0x14d808a40 <line:40:5, col:33> 'int' '<<'     |       |       |-CallExpr 0x14d8089f8 <col:5, col:28> 'int'     |       |       | |-ImplicitCastExpr 0x14d8089e0 <col:5> 'int (*)()' <FunctionToPointerDecay>     |       |       | | `-DeclRefExpr 0x14d8088c0 <col:5> 'int ()' Function 0x14d808808 'EXTRACT_16BITS' 'int ()'     |       |       | `-UnaryOperator 0x14d8089c8 <col:20, col:27> 'const char *' prefix '&' cannot overflow     |       |       |   `-ArraySubscriptExpr 0x14d8089a8 <col:21, col:27> 'const char' lvalue     |       |       |     |-ImplicitCastExpr 0x14d808990 <col:21> 'const char *' <LValueToRValue>     |       |       |     | `-DeclRefExpr 0x14d8088e0 <col:21> 'const char *' lvalue ParmVar 0x14d00dda8 'bp' 'const char *'     |       |       |     `-BinaryOperator 0x14d808970 <col:24, col:26> 'unsigned int' '+'     |       |       |       |-ImplicitCastExpr 0x14d808940 <col:24> 'unsigned int' <LValueToRValue>     |       |       |       | `-DeclRefExpr 0x14d808900 <col:24> 'unsigned int' lvalue Var 0x14d00e040 'i' 'unsigned int'     |       |       |       `-ImplicitCastExpr 0x14d808958 <col:26> 'unsigned int' <IntegralCast>     |       |       |         `-IntegerLiteral 0x14d808920 <col:26> 'int' 2     |       |       `-IntegerLiteral 0x14d808a20 <col:33> 'int' 2     |       |-BreakStmt 0x14d808ac8 <line:41:4>     |       |-IfStmt 0x14d808d90 <line:43:4, line:46:4>     |       | |-BinaryOperator 0x14d808c70 <line:43:8, col:18> 'int' contains-errors '<'     |       | | |-BinaryOperator 0x14d808c30 <col:8, col:14> 'unsigned int' '-'     |       | | | |-ImplicitCastExpr 0x14d808c00 <col:8> 'unsigned int' <LValueToRValue>     |       | | | | `-DeclRefExpr 0x14d808ae8 <col:8> 'const unsigned int' lvalue ParmVar 0x14d00de28 'len' 'const unsigned int'     |       | | | `-ImplicitCastExpr 0x14d808c18 <col:14> 'unsigned int' <LValueToRValue>     |       | | |   `-DeclRefExpr 0x14d808b08 <col:14> 'unsigned int' lvalue Var 0x14d00e040 'i' 'unsigned int'     |       | | `-RecoveryExpr 0x14d808c50 <col:18> '<dependent type>' contains-errors lvalue     |       | `-CompoundStmt 0x14d808d70 <col:41, line:46:4>     |       |   |-CallExpr 0x14d808d30 <line:44:5, col:26> '<dependent type>' contains-errors     |       |   | |-DeclRefExpr 0x14d808c90 <col:5> 'int ()' Function 0x14c923b00 'ND_PRINT' 'int ()'     |       |   | `-ParenExpr 0x14d808d10 <col:14, col:25> 'char[4]' contains-errors     |       |   |   `-BinaryOperator 0x14d808cf0 <col:15, col:20> 'char[4]' contains-errors ','     |       |   |     |-RecoveryExpr 0x14d808cb0 <col:15> '<dependent type>' contains-errors lvalue     |       |   |     `-StringLiteral 0x14d808cd0 <col:20> 'char[4]' lvalue \"STR\"     |       |   `-GotoStmt 0x14d808d58 <line:45:5, col:10> 'trunc' 0x14c923660     |       |-CallExpr 0x14d8090c0 <line:47:4, col:56> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x14d808db0 <col:4> 'int ()' Function 0x14c923b00 'ND_PRINT' 'int ()'     |       | `-ParenExpr 0x14d8090a0 <col:13, col:55> '<dependent type>' contains-errors     |       |   `-BinaryOperator 0x14d809080 <col:14, col:54> '<dependent type>' contains-errors ','     |       |     |-BinaryOperator 0x14d808e10 <col:14, col:19> 'char[4]' contains-errors ','     |       |     | |-RecoveryExpr 0x14d808dd0 <col:14> '<dependent type>' contains-errors lvalue     |       |     | `-StringLiteral 0x14d808df0 <col:19> 'char[4]' lvalue \"STR\"     |       |     `-CallExpr 0x14d809050 <col:26, col:54> '<dependent type>' contains-errors     |       |       |-DeclRefExpr 0x14d808f10 <col:26> 'int ()' Function 0x14d808e58 'ip6addr_string' 'int ()'     |       |       |-RecoveryExpr 0x14d808f30 <col:41> '<dependent type>' contains-errors lvalue     |       |       `-UnaryOperator 0x14d809038 <col:46, col:53> 'const char *' prefix '&' cannot overflow     |       |         `-ArraySubscriptExpr 0x14d809018 <col:47, col:53> 'const char' lvalue     |       |           |-ImplicitCastExpr 0x14d809000 <col:47> 'const char *' <LValueToRValue>     |       |           | `-DeclRefExpr 0x14d808f50 <col:47> 'const char *' lvalue ParmVar 0x14d00dda8 'bp' 'const char *'     |       |           `-BinaryOperator 0x14d808fe0 <col:50, col:52> 'unsigned int' '+'     |       |             |-ImplicitCastExpr 0x14d808fb0 <col:50> 'unsigned int' <LValueToRValue>     |       |             | `-DeclRefExpr 0x14d808f70 <col:50> 'unsigned int' lvalue Var 0x14d00e040 'i' 'unsigned int'     |       |             `-ImplicitCastExpr 0x14d808fc8 <col:52> 'unsigned int' <IntegralCast>     |       |               `-IntegerLiteral 0x14d808f90 <col:52> 'int' 2     |       |-BreakStmt 0x14d8090e8 <line:48:4>     |       |-IfStmt 0x14d809db0 <line:50:4, line:53:4>     |       | |-BinaryOperator 0x14d809c90 <line:50:8, col:18> 'int' contains-errors '<'     |       | | |-BinaryOperator 0x14d809c50 <col:8, col:14> 'unsigned int' '-'     |       | | | |-ImplicitCastExpr 0x14d809c20 <col:8> 'unsigned int' <LValueToRValue>     |       | | | | `-DeclRefExpr 0x14d809108 <col:8> 'const unsigned int' lvalue ParmVar 0x14d00de28 'len' 'const unsigned int'     |       | | | `-ImplicitCastExpr 0x14d809c38 <col:14> 'unsigned int' <LValueToRValue>     |       | | |   `-DeclRefExpr 0x14d809128 <col:14> 'unsigned int' lvalue Var 0x14d00e040 'i' 'unsigned int'     |       | | `-RecoveryExpr 0x14d809c70 <col:18> '<dependent type>' contains-errors lvalue     |       | `-CompoundStmt 0x14d809d90 <col:42, line:53:4>     |       |   |-CallExpr 0x14d809d50 <line:51:5, col:26> '<dependent type>' contains-errors     |       |   | |-DeclRefExpr 0x14d809cb0 <col:5> 'int ()' Function 0x14c923b00 'ND_PRINT' 'int ()'     |       |   | `-ParenExpr 0x14d809d30 <col:14, col:25> 'char[4]' contains-errors     |       |   |   `-BinaryOperator 0x14d809d10 <col:15, col:20> 'char[4]' contains-errors ','     |       |   |     |-RecoveryExpr 0x14d809cd0 <col:15> '<dependent type>' contains-errors lvalue     |       |   |     `-StringLiteral 0x14d809cf0 <col:20> 'char[4]' lvalue \"STR\"     |       |   `-GotoStmt 0x14d809d78 <line:52:5, col:10> 'trunc' 0x14c923660     |       |-CallExpr 0x14d80a170 <line:54:4, line:56:30> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x14d809dd0 <line:54:4> 'int ()' Function 0x14c923b00 'ND_PRINT' 'int ()'     |       | `-ParenExpr 0x14d80a150 <col:13, line:56:29> 'int' contains-errors     |       |   `-BinaryOperator 0x14d80a130 <line:54:14, line:56:28> 'int' contains-errors ','     |       |     |-BinaryOperator 0x14d809fb0 <line:54:14, line:55:28> 'int' contains-errors ','     |       |     | |-BinaryOperator 0x14d809e30 <line:54:14, col:19> 'char[4]' contains-errors ','     |       |     | | |-RecoveryExpr 0x14d809df0 <col:14> '<dependent type>' contains-errors lvalue     |       |     | | `-StringLiteral 0x14d809e10 <col:19> 'char[4]' lvalue \"STR\"     |       |     | `-CallExpr 0x14d809f88 <line:55:5, col:28> 'int'     |       |     |   |-ImplicitCastExpr 0x14d809f70 <col:5> 'int (*)()' <FunctionToPointerDecay>     |       |     |   | `-DeclRefExpr 0x14d809e50 <col:5> 'int ()' Function 0x14d808808 'EXTRACT_16BITS' 'int ()'     |       |     |   `-UnaryOperator 0x14d809f58 <col:20, col:27> 'const char *' prefix '&' cannot overflow     |       |     |     `-ArraySubscriptExpr 0x14d809f38 <col:21, col:27> 'const char' lvalue     |       |     |       |-ImplicitCastExpr 0x14d809f20 <col:21> 'const char *' <LValueToRValue>     |       |     |       | `-DeclRefExpr 0x14d809e70 <col:21> 'const char *' lvalue ParmVar 0x14d00dda8 'bp' 'const char *'     |       |     |       `-BinaryOperator 0x14d809f00 <col:24, col:26> 'unsigned int' '+'     |       |     |         |-ImplicitCastExpr 0x14d809ed0 <col:24> 'unsigned int' <LValueToRValue>     |       |     |         | `-DeclRefExpr 0x14d809e90 <col:24> 'unsigned int' lvalue Var 0x14d00e040 'i' 'unsigned int'     |       |     |         `-ImplicitCastExpr 0x14d809ee8 <col:26> 'unsigned int' <IntegralCast>     |       |     |           `-IntegerLiteral 0x14d809eb0 <col:26> 'int' 2     |       |     `-CallExpr 0x14d80a108 <line:56:5, col:28> 'int'     |       |       |-ImplicitCastExpr 0x14d80a0f0 <col:5> 'int (*)()' <FunctionToPointerDecay>     |       |       | `-DeclRefExpr 0x14d809fd0 <col:5> 'int ()' Function 0x14d808808 'EXTRACT_16BITS' 'int ()'     |       |       `-UnaryOperator 0x14d80a0d8 <col:20, col:27> 'const char *' prefix '&' cannot overflow     |       |         `-ArraySubscriptExpr 0x14d80a0b8 <col:21, col:27> 'const char' lvalue     |       |           |-ImplicitCastExpr 0x14d80a0a0 <col:21> 'const char *' <LValueToRValue>     |       |           | `-DeclRefExpr 0x14d809ff0 <col:21> 'const char *' lvalue ParmVar 0x14d00dda8 'bp' 'const char *'     |       |           `-BinaryOperator 0x14d80a080 <col:24, col:26> 'unsigned int' '+'     |       |             |-ImplicitCastExpr 0x14d80a050 <col:24> 'unsigned int' <LValueToRValue>     |       |             | `-DeclRefExpr 0x14d80a010 <col:24> 'unsigned int' lvalue Var 0x14d00e040 'i' 'unsigned int'     |       |             `-ImplicitCastExpr 0x14d80a068 <col:26> 'unsigned int' <IntegralCast>     |       |               `-IntegerLiteral 0x14d80a030 <col:26> 'int' 4     |       |-BreakStmt 0x14d80a198 <line:57:4>     |       |-IfStmt 0x14d80a460 <line:59:4, line:62:4>     |       | |-BinaryOperator 0x14d80a340 <line:59:8, col:18> 'int' contains-errors '<'     |       | | |-BinaryOperator 0x14d80a300 <col:8, col:14> 'unsigned int' '-'     |       | | | |-ImplicitCastExpr 0x14d80a2d0 <col:8> 'unsigned int' <LValueToRValue>     |       | | | | `-DeclRefExpr 0x14d80a1b8 <col:8> 'const unsigned int' lvalue ParmVar 0x14d00de28 'len' 'const unsigned int'     |       | | | `-ImplicitCastExpr 0x14d80a2e8 <col:14> 'unsigned int' <LValueToRValue>     |       | | |   `-DeclRefExpr 0x14d80a1d8 <col:14> 'unsigned int' lvalue Var 0x14d00e040 'i' 'unsigned int'     |       | | `-RecoveryExpr 0x14d80a320 <col:18> '<dependent type>' contains-errors lvalue     |       | `-CompoundStmt 0x14d80a440 <col:39, line:62:4>     |       |   |-CallExpr 0x14d80a400 <line:60:5, col:26> '<dependent type>' contains-errors     |       |   | |-DeclRefExpr 0x14d80a360 <col:5> 'int ()' Function 0x14c923b00 'ND_PRINT' 'int ()'     |       |   | `-ParenExpr 0x14d80a3e0 <col:14, col:25> 'char[4]' contains-errors     |       |   |   `-BinaryOperator 0x14d80a3c0 <col:15, col:20> 'char[4]' contains-errors ','     |       |   |     |-RecoveryExpr 0x14d80a380 <col:15> '<dependent type>' contains-errors lvalue     |       |   |     `-StringLiteral 0x14d80a3a0 <col:20> 'char[4]' lvalue \"STR\"     |       |   `-GotoStmt 0x14d80a428 <line:61:5, col:10> 'trunc' 0x14c923660     |       |-CallExpr 0x14d80a520 <line:63:4, col:25> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x14d80a480 <col:4> 'int ()' Function 0x14c923b00 'ND_PRINT' 'int ()'     |       | `-ParenExpr 0x14d80a500 <col:13, col:24> 'char[4]' contains-errors     |       |   `-BinaryOperator 0x14d80a4e0 <col:14, col:19> 'char[4]' contains-errors ','     |       |     |-RecoveryExpr 0x14d80a4a0 <col:14> '<dependent type>' contains-errors lvalue     |       |     `-StringLiteral 0x14d80a4c0 <col:19> 'char[4]' lvalue \"STR\"     |       |-BreakStmt 0x14d80a548 <line:64:4>     |       |-DefaultStmt 0x14d80a8c8 <line:65:3, line:69:4>     |       | `-IfStmt 0x14d80a8a8 <line:66:4, line:69:4>     |       |   |-BinaryOperator 0x14d80a6d8 <line:66:8, col:18> 'int' contains-errors '<'     |       |   | |-BinaryOperator 0x14d80a698 <col:8, col:14> 'unsigned int' '-'     |       |   | | |-ImplicitCastExpr 0x14d80a668 <col:8> 'unsigned int' <LValueToRValue>     |       |   | | | `-DeclRefExpr 0x14d80a550 <col:8> 'const unsigned int' lvalue ParmVar 0x14d00de28 'len' 'const unsigned int'     |       |   | | `-ImplicitCastExpr 0x14d80a680 <col:14> 'unsigned int' <LValueToRValue>     |       |   | |   `-DeclRefExpr 0x14d80a570 <col:14> 'unsigned int' lvalue Var 0x14d00e040 'i' 'unsigned int'     |       |   | `-RecoveryExpr 0x14d80a6b8 <col:18> '<dependent type>' contains-errors lvalue     |       |   `-CompoundStmt 0x14d80a888 <col:34, line:69:4>     |       |     |-CallExpr 0x14d80a848 <line:67:5, col:33> '<dependent type>' contains-errors     |       |     | |-DeclRefExpr 0x14d80a6f8 <col:5> 'int ()' Function 0x14c923b00 'ND_PRINT' 'int ()'     |       |     | `-ParenExpr 0x14d80a828 <col:14, col:32> 'const char' contains-errors     |       |     |   `-BinaryOperator 0x14d80a808 <col:15, col:31> 'const char' contains-errors ','     |       |     |     |-BinaryOperator 0x14d80a758 <col:15, col:20> 'char[4]' contains-errors ','     |       |     |     | |-RecoveryExpr 0x14d80a718 <col:15> '<dependent type>' contains-errors lvalue     |       |     |     | `-StringLiteral 0x14d80a738 <col:20> 'char[4]' lvalue \"STR\"     |       |     |     `-ArraySubscriptExpr 0x14d80a7e8 <col:27, col:31> 'const char' lvalue     |       |     |       |-ImplicitCastExpr 0x14d80a7b8 <col:27> 'const char *' <LValueToRValue>     |       |     |       | `-DeclRefExpr 0x14d80a778 <col:27> 'const char *' lvalue ParmVar 0x14d00dda8 'bp' 'const char *'     |       |     |       `-ImplicitCastExpr 0x14d80a7d0 <col:30> 'unsigned int' <LValueToRValue>     |       |     |         `-DeclRefExpr 0x14d80a798 <col:30> 'unsigned int' lvalue Var 0x14d00e040 'i' 'unsigned int'     |       |     `-GotoStmt 0x14d80a870 <line:68:5, col:10> 'trunc' 0x14c923660     |       |-CallExpr 0x14d80ab40 <line:70:4, col:43> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x14d80a8e8 <col:4> 'int ()' Function 0x14c923b00 'ND_PRINT' 'int ()'     |       | `-ParenExpr 0x14d80ab20 <col:13, col:42> 'const char' contains-errors     |       |   `-BinaryOperator 0x14d80ab00 <col:14, col:41> 'const char' contains-errors ','     |       |     |-BinaryOperator 0x14d80a9f8 <col:14, col:30> 'const char' contains-errors ','     |       |     | |-BinaryOperator 0x14d80a948 <col:14, col:19> 'char[4]' contains-errors ','     |       |     | | |-RecoveryExpr 0x14d80a908 <col:14> '<dependent type>' contains-errors lvalue     |       |     | | `-StringLiteral 0x14d80a928 <col:19> 'char[4]' lvalue \"STR\"     |       |     | `-ArraySubscriptExpr 0x14d80a9d8 <col:26, col:30> 'const char' lvalue     |       |     |   |-ImplicitCastExpr 0x14d80a9a8 <col:26> 'const char *' <LValueToRValue>     |       |     |   | `-DeclRefExpr 0x14d80a968 <col:26> 'const char *' lvalue ParmVar 0x14d00dda8 'bp' 'const char *'     |       |     |   `-ImplicitCastExpr 0x14d80a9c0 <col:29> 'unsigned int' <LValueToRValue>     |       |     |     `-DeclRefExpr 0x14d80a988 <col:29> 'unsigned int' lvalue Var 0x14d00e040 'i' 'unsigned int'     |       |     `-ArraySubscriptExpr 0x14d80aae0 <col:33, col:41> 'const char' lvalue     |       |       |-ImplicitCastExpr 0x14d80aac8 <col:33> 'const char *' <LValueToRValue>     |       |       | `-DeclRefExpr 0x14d80aa18 <col:33> 'const char *' lvalue ParmVar 0x14d00dda8 'bp' 'const char *'     |       |       `-BinaryOperator 0x14d80aaa8 <col:36, col:40> 'unsigned int' '+'     |       |         |-ImplicitCastExpr 0x14d80aa78 <col:36> 'unsigned int' <LValueToRValue>     |       |         | `-DeclRefExpr 0x14d80aa38 <col:36> 'unsigned int' lvalue Var 0x14d00e040 'i' 'unsigned int'     |       |         `-ImplicitCastExpr 0x14d80aa90 <col:40> 'unsigned int' <IntegralCast>     |       |           `-IntegerLiteral 0x14d80aa58 <col:40> 'int' 1     |       `-BreakStmt 0x14d80ab68 <line:71:4>     |-ReturnStmt 0x14d80ad40 <line:74:2, col:9>     | `-IntegerLiteral 0x14d80ad20 <col:9> 'int' 0     `-LabelStmt 0x14d80ad80 <line:76:1, line:77:9> 'trunc'       `-ReturnStmt 0x14d80ad70 <col:2, col:9>         `-IntegerLiteral 0x14d80ad50 <col:9> 'int' 1 ","20954":"`-FunctionDecl 0x10500e350  line:1:13 ext4_wait_for_tail_page_commit 'void (struct inode *)' static   |-ParmVarDecl 0x10500e248 <col:44, col:58> col:58 used inode 'struct inode *'   `-CompoundStmt 0x10502ddd8 <line:2:1, line:32:1>     |-DeclStmt 0x10502aa38 <line:3:2, col:19>     | |-RecordDecl 0x10502a848 <col:2, col:9> col:9 struct page     | `-VarDecl 0x10502a9b8 <col:2, col:15> col:15 used page 'struct page *'     |-DeclStmt 0x10502aad0 <line:4:2, col:17>     | `-VarDecl 0x10502aa68 <col:2, col:11> col:11 used offset 'unsigned int'     |-DeclStmt 0x10502ada0 <line:7:2, col:9>     | `-VarDecl 0x10502ad38 <col:2, col:6> col:6 used ret 'int'     |-IfStmt 0x10502b180 <line:11:2, line:12:3>     | |-BinaryOperator 0x10502b150 <line:11:6, col:44> 'int' contains-errors '>'     | | |-DeclRefExpr 0x10502ae90 <col:6> 'unsigned int' lvalue Var 0x10502aa68 'offset' 'unsigned int'     | | `-BinaryOperator 0x10502b130 <col:15, col:44> '<dependent type>' contains-errors '-'     | |   |-RecoveryExpr 0x10502b0b8 <col:15> '<dependent type>' contains-errors lvalue     | |   `-CallExpr 0x10502b0f0 <col:27, col:44> 'int'     | |     |-ImplicitCastExpr 0x10502b0d8 <col:27> 'int (*)()' <FunctionToPointerDecay>     | |     | `-DeclRefExpr 0x10502afa8 <col:27> 'int ()' Function 0x10502aef0 'i_blocksize' 'int ()'     | |     `-ImplicitCastExpr 0x10502b118 <col:39> 'struct inode *' <LValueToRValue>     | |       `-DeclRefExpr 0x10502afc8 <col:39> 'struct inode *' lvalue ParmVar 0x10500e248 'inode' 'struct inode *'     | `-ReturnStmt 0x10502b170 <line:12:3>     `-WhileStmt 0x10502ddb8 <line:13:2, line:31:2>       |-IntegerLiteral 0x10502b1a0 <line:13:9> 'int' 1       `-CompoundStmt 0x10502dd78 <col:12, line:31:2>         |-BinaryOperator 0x10502b498 <line:14:3, line:15:38> 'struct page *' contains-errors '='         | |-DeclRefExpr 0x10502b1c0 <line:14:3> 'struct page *' lvalue Var 0x10502a9b8 'page' 'struct page *'         | `-CallExpr 0x10502b468 <col:10, line:15:38> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x10502b2c0 <line:14:10> 'int ()' Function 0x10502b208 'find_lock_page' 'int ()'         |   |-RecoveryExpr 0x10502b318 <col:25, col:32> '<dependent type>' contains-errors lvalue         |   | `-DeclRefExpr 0x10502b2e0 <col:25> 'struct inode *' lvalue ParmVar 0x10500e248 'inode' 'struct inode *'         |   `-BinaryOperator 0x10502b448 <line:15:11, col:28> '<dependent type>' contains-errors '>>'         |     |-RecoveryExpr 0x10502b378 <col:11, col:18> '<dependent type>' contains-errors lvalue         |     | `-DeclRefExpr 0x10502b340 <col:11> 'struct inode *' lvalue ParmVar 0x10500e248 'inode' 'struct inode *'         |     `-RecoveryExpr 0x10502b428 <col:28> '<dependent type>' contains-errors lvalue         |-IfStmt 0x10502b518 <line:16:3, line:17:4>         | |-UnaryOperator 0x10502b4f0 <line:16:7, col:8> 'int' prefix '!' cannot overflow         | | `-ImplicitCastExpr 0x10502b4d8 <col:8> 'struct page *' <LValueToRValue>         | |   `-DeclRefExpr 0x10502b4b8 <col:8> 'struct page *' lvalue Var 0x10502a9b8 'page' 'struct page *'         | `-ReturnStmt 0x10502b508 <line:17:4>         |-BinaryOperator 0x10502b7c0 <line:18:3, line:19:25> 'int' contains-errors '='         | |-DeclRefExpr 0x10502b538 <line:18:3> 'int' lvalue Var 0x10502ad38 'ret' 'int'         | `-CallExpr 0x10502b788 <col:9, line:19:25> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x10502b638 <line:18:9> 'int ()' Function 0x10502b580 '__ext4_journalled_invalidatepage' 'int ()'         |   |-DeclRefExpr 0x10502b658 <col:42> 'struct page *' lvalue Var 0x10502a9b8 'page' 'struct page *'         |   |-DeclRefExpr 0x10502b678 <col:48> 'unsigned int' lvalue Var 0x10502aa68 'offset' 'unsigned int'         |   `-BinaryOperator 0x10502b768 <line:19:7, col:19> '<dependent type>' contains-errors '-'         |     |-RecoveryExpr 0x10502b748 <col:7> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x10502b6b0 <col:19> 'unsigned int' lvalue Var 0x10502aa68 'offset' 'unsigned int'         |-CallExpr 0x10502d738 <line:20:3, col:19> 'int'         | |-ImplicitCastExpr 0x10502d720 <col:3> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x10502d6e0 <col:3> 'int ()' Function 0x10502d628 'unlock_page' 'int ()'         | `-ImplicitCastExpr 0x10502d760 <col:15> 'struct page *' <LValueToRValue>         |   `-DeclRefExpr 0x10502d700 <col:15> 'struct page *' lvalue Var 0x10502a9b8 'page' 'struct page *'         |-CallExpr 0x10502d8b0 <line:21:3, col:16> 'int'         | |-ImplicitCastExpr 0x10502d898 <col:3> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x10502d858 <col:3> 'int ()' Function 0x10502d7a0 'put_page' 'int ()'         | `-ImplicitCastExpr 0x10502d8d8 <col:12> 'struct page *' <LValueToRValue>         |   `-DeclRefExpr 0x10502d878 <col:12> 'struct page *' lvalue Var 0x10502a9b8 'page' 'struct page *'         `-IfStmt 0x10502d9f8 <line:22:3, line:23:4>           |-BinaryOperator 0x10502d9c8 <line:22:7, col:15> 'int' contains-errors '!='           | |-DeclRefExpr 0x10502d8f0 <col:7> 'int' lvalue Var 0x10502ad38 'ret' 'int'           | `-UnaryOperator 0x10502d9b0 <col:14, col:15> '<dependent type>' contains-errors prefix '-' cannot overflow           |   `-ImplicitCastExpr 0x10502d998 <col:15> '<dependent type>' contains-errors <LValueToRValue>           |     `-RecoveryExpr 0x10502d978 <col:15> '<dependent type>' contains-errors lvalue           `-ReturnStmt 0x10502d9e8 <line:23:4> ","20386":"`-FunctionDecl 0x12600e300  col:7 implicit used strcasecmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x126026600 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x126026668 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x12600e3a8 <<invalid sloc>> Implicit 957 ","20815":"`-FunctionDecl 0x13780e358  line:1:5 kvm_highest_pending_irq 'int (struct kvm_vcpu *)'   |-ParmVarDecl 0x13780e248 <col:29, col:46> col:46 used vcpu 'struct kvm_vcpu *'   `-CompoundStmt 0x1378270d0 <line:2:1, line:11:1>     |-DeclStmt 0x137826ac0 <line:3:5, col:57>     | |-RecordDecl 0x137826650 <col:5, col:12> col:12 struct vpd     | `-VarDecl 0x1378267b8 <col:5, col:56> col:17 used vpd 'struct vpd *' cinit     |   `-CallExpr 0x137826a78 <col:23, col:56> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x137826950 <col:23> 'int ()' Function 0x137826898 'to_host' 'int ()'     |     |-RecoveryExpr 0x1378269a8 <col:31, col:37> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x137826970 <col:31> 'struct kvm_vcpu *' lvalue ParmVar 0x13780e248 'vcpu' 'struct kvm_vcpu *'     |     `-CXXDependentScopeMemberExpr 0x137826a30 <col:42, col:53> '<dependent type>' contains-errors lvalue .vpd     |       `-RecoveryExpr 0x137826a08 <col:42, col:48> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x1378269d0 <col:42> 'struct kvm_vcpu *' lvalue ParmVar 0x13780e248 'vcpu' 'struct kvm_vcpu *'     |-IfStmt 0x137826c50 <line:5:5, line:6:10>     | |-RecoveryExpr 0x137826be8 <line:5:9, col:41> '_Bool' contains-errors     | `-ReturnStmt 0x137826c40 <line:6:3, col:10>     |   `-RecoveryExpr 0x137826c20 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x137826de8 <line:7:5, line:8:10>     | |-RecoveryExpr 0x137826d80 <line:7:9, col:44> '_Bool' contains-errors     | `-ReturnStmt 0x137826dd8 <line:8:3, col:10>     |   `-RecoveryExpr 0x137826db8 <col:10> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1378270c0 <line:10:5, col:49>       `-CallExpr 0x137827098 <col:12, col:49> 'int' contains-errors         |-ImplicitCastExpr 0x137827080 <col:12> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x137826ee8 <col:12> 'int ()' Function 0x137826e30 'find_highest_bits' 'int ()'         `-CStyleCastExpr 0x137827028 <col:30, col:48> 'int *' contains-errors <Dependent>           `-UnaryOperator 0x137826fc0 <col:37, col:48> '<dependent type>' contains-errors prefix '&' cannot overflow             `-ArraySubscriptExpr 0x137826fa0 <col:38, col:48> '<dependent type>' contains-errors lvalue               |-ImplicitCastExpr 0x137826f88 <col:38, col:43> '<dependent type>' contains-errors <LValueToRValue>               | `-RecoveryExpr 0x137826f40 <col:38, col:43> '<dependent type>' contains-errors lvalue               |   `-DeclRefExpr 0x137826f08 <col:38> 'struct vpd *' contains-errors lvalue Var 0x1378267b8 'vpd' 'struct vpd *'               `-IntegerLiteral 0x137826f68 <col:47> 'int' 0 ","20898":"`-FunctionDecl 0x15700e358  line:1:1 http_DissectRequest 'int (struct sess *)'   |-ParmVarDecl 0x15700e248 <col:21, col:34> col:34 used sp 'struct sess *'   `-CompoundStmt 0x1570296f0 <line:2:1, line:29:1>     |-DeclStmt 0x157026838 <line:3:2, col:23>     | |-RecordDecl 0x157026650 <col:2, col:9> col:9 struct http_conn     | `-VarDecl 0x1570267b8 <col:2, col:20> col:20 used htc 'struct http_conn *'     |-DeclStmt 0x157026a38 <line:4:2, col:17>     | |-RecordDecl 0x157026850 <col:2, col:9> col:9 struct http     | `-VarDecl 0x1570269b8 <col:2, col:15> col:15 used hp 'struct http *'     |-CallExpr 0x157026c28 <line:7:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x157026b80 <col:2> 'int ()' Function 0x157026ac8 'CHECK_OBJ_NOTNULL' 'int ()'     | |-DeclRefExpr 0x157026ba0 <col:20> 'struct sess *' lvalue ParmVar 0x15700e248 'sp' 'struct sess *'     | `-RecoveryExpr 0x157026c08 <col:24> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x157026cd8 <line:8:2, col:12> 'struct http_conn *' contains-errors '='     | |-DeclRefExpr 0x157026c58 <col:2> 'struct http_conn *' lvalue Var 0x1570267b8 'htc' 'struct http_conn *'     | `-RecoveryExpr 0x157026cb0 <col:8, col:12> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x157026c78 <col:8> 'struct sess *' lvalue ParmVar 0x15700e248 'sp' 'struct sess *'     |-CallExpr 0x157026da0 <line:9:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x157026cf8 <col:2> 'int ()' Function 0x157026ac8 'CHECK_OBJ_NOTNULL' 'int ()'     | |-DeclRefExpr 0x157026d18 <col:20> 'struct http_conn *' lvalue Var 0x1570267b8 'htc' 'struct http_conn *'     | `-RecoveryExpr 0x157026d80 <col:25> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x157026e50 <line:10:2, col:11> 'struct http *' contains-errors '='     | |-DeclRefExpr 0x157026dd0 <col:2> 'struct http *' lvalue Var 0x1570269b8 'hp' 'struct http *'     | `-RecoveryExpr 0x157026e28 <col:7, col:11> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x157026df0 <col:7> 'struct sess *' lvalue ParmVar 0x15700e248 'sp' 'struct sess *'     |-CallExpr 0x157026f18 <line:11:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x157026e70 <col:2> 'int ()' Function 0x157026ac8 'CHECK_OBJ_NOTNULL' 'int ()'     | |-DeclRefExpr 0x157026e90 <col:20> 'struct http *' lvalue Var 0x1570269b8 'hp' 'struct http *'     | `-RecoveryExpr 0x157026ef8 <col:24> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x157027000 <line:13:2, col:15> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x157026f80 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x157026f48 <col:2> 'struct http *' lvalue Var 0x1570269b8 'hp' 'struct http *'     | `-RecoveryExpr 0x157026fe0 <col:15> '<dependent type>' contains-errors lvalue     |-IfStmt 0x157027598 <line:17:2, line:20:2>     | |-BinaryOperator 0x157027338 <line:17:6, col:16> 'int' contains-errors '!='     | | |-RecoveryExpr 0x157027318 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x1570272d8 <col:16> 'int' 0     | `-CompoundStmt 0x157027580 <col:19, line:20:2>     |   `-CallExpr 0x157027548 <line:18:3, col:39> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x157027438 <col:3> 'int ()' Function 0x157027380 'WSPR' 'int ()'     |     |-DeclRefExpr 0x157027458 <col:8> 'struct sess *' lvalue ParmVar 0x15700e248 'sp' 'struct sess *'     |     |-RecoveryExpr 0x157027528 <col:12> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x1570274c8 <col:29, col:34> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x157027490 <col:29> 'struct http_conn *' lvalue Var 0x1570267b8 'htc' 'struct http_conn *'     |-CallExpr 0x157029348 <line:21:2, col:18> 'int'     | |-ImplicitCastExpr 0x157029330 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1570292b8 <col:2> 'int ()' Function 0x157029200 'http_ProtoVer' 'int ()'     | `-ImplicitCastExpr 0x157029370 <col:16> 'struct http *' <LValueToRValue>     |   `-DeclRefExpr 0x1570292d8 <col:16> 'struct http *' lvalue Var 0x1570269b8 'hp' 'struct http *'     `-IfStmt 0x1570296d0 <line:24:2, line:27:2>       |-RecoveryExpr 0x157029520 <line:24:6, col:16> '_Bool' contains-errors       `-CompoundStmt 0x1570296c0 <col:19, line:27:2> ","21221":"`-FunctionDecl 0x145028320  col:42 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x145028e30 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x145028e98 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x1450283c8 <<invalid sloc>> Implicit 887 ","20289":"`-FunctionDecl 0x156008b78  line:2:1 invalid cvt_8 'int (union VALUETYPE *, const struct magic *)'   |-ParmVarDecl 0x15481f868 <col:7, col:24> col:24 p 'union VALUETYPE *'   |-ParmVarDecl 0x156008a58 <col:27, col:47> col:47 m 'const struct magic *'   `-CompoundStmt 0x156008e10 <line:3:1, line:5:11>     `-ReturnStmt 0x156008e00 <col:2, col:9>       `-IntegerLiteral 0x156008de0 <col:9> 'int' 0 ","20541":"`-FunctionDecl 0x1419284d8  line:1:1 invalid strtoargvsub 'int (int *, char *, unsigned int *, char ***, unsigned int)'   |-ParmVarDecl 0x141928128 <col:14, col:25> col:25 invalid mctx 'int *'   |-ParmVarDecl 0x1419281a8 <col:31, col:37> col:37 used s 'char *'   |-ParmVarDecl 0x141928258 <col:40, col:54> col:54 used argcp 'unsigned int *'   |-ParmVarDecl 0x141928340 <line:2:7, col:15> col:15 used argvp 'char ***'   |-ParmVarDecl 0x1419283c0 <col:22, col:35> col:35 used n 'unsigned int'   `-CompoundStmt 0x141942630 <line:3:1, line:29:1>     |-WhileStmt 0x141928770 <line:7:2, line:8:4>     | |-BinaryOperator 0x141928718 <line:7:9, col:28> 'int' '||'     | | |-BinaryOperator 0x141928640 <col:9, col:15> 'int' '=='     | | | |-ImplicitCastExpr 0x141928628 <col:9, col:10> 'int' <IntegralCast>     | | | | `-ImplicitCastExpr 0x141928610 <col:9, col:10> 'char' <LValueToRValue>     | | | |   `-UnaryOperator 0x1419285e0 <col:9, col:10> 'char' lvalue prefix '*' cannot overflow     | | | |     `-ImplicitCastExpr 0x1419285c8 <col:10> 'char *' <LValueToRValue>     | | | |       `-DeclRefExpr 0x1419285a8 <col:10> 'char *' lvalue ParmVar 0x1419281a8 's' 'char *'     | | | `-CharacterLiteral 0x1419285f8 <col:15> 'int' 32     | | `-BinaryOperator 0x1419286f8 <col:22, col:28> 'int' '=='     | |   |-ImplicitCastExpr 0x1419286e0 <col:22, col:23> 'int' <IntegralCast>     | |   | `-ImplicitCastExpr 0x1419286c8 <col:22, col:23> 'char' <LValueToRValue>     | |   |   `-UnaryOperator 0x141928698 <col:22, col:23> 'char' lvalue prefix '*' cannot overflow     | |   |     `-ImplicitCastExpr 0x141928680 <col:23> 'char *' <LValueToRValue>     | |   |       `-DeclRefExpr 0x141928660 <col:23> 'char *' lvalue ParmVar 0x1419281a8 's' 'char *'     | |   `-CharacterLiteral 0x1419286b0 <col:28> 'int' 9     | `-UnaryOperator 0x141928758 <line:8:3, col:4> 'char *' postfix '++'     |   `-DeclRefExpr 0x141928738 <col:3> 'char *' lvalue ParmVar 0x1419281a8 's' 'char *'     `-IfStmt 0x1419425e8 <line:10:2, line:27:2> has_else       |-BinaryOperator 0x141941830 <line:10:6, col:12> 'int' '=='       | |-ImplicitCastExpr 0x141941818 <col:6, col:7> 'int' <IntegralCast>       | | `-ImplicitCastExpr 0x141941800 <col:6, col:7> 'char' <LValueToRValue>       | |   `-UnaryOperator 0x1419287c8 <col:6, col:7> 'char' lvalue prefix '*' cannot overflow       | |     `-ImplicitCastExpr 0x1419287b0 <col:7> 'char *' <LValueToRValue>       | |       `-DeclRefExpr 0x141928790 <col:7> 'char *' lvalue ParmVar 0x1419281a8 's' 'char *'       | `-CharacterLiteral 0x1419287e0 <col:12> 'int' 0       |-CompoundStmt 0x141941d18 <col:18, line:16:2>       | |-BinaryOperator 0x1419418d8 <line:12:3, col:12> 'unsigned int' '='       | | |-UnaryOperator 0x141941888 <col:3, col:4> 'unsigned int' lvalue prefix '*' cannot overflow       | | | `-ImplicitCastExpr 0x141941870 <col:4> 'unsigned int *' <LValueToRValue>       | | |   `-DeclRefExpr 0x141941850 <col:4> 'unsigned int *' lvalue ParmVar 0x141928258 'argcp' 'unsigned int *'       | | `-ImplicitCastExpr 0x1419418c0 <col:12> 'unsigned int' <LValueToRValue>       | |   `-DeclRefExpr 0x1419418a0 <col:12> 'unsigned int' lvalue ParmVar 0x1419283c0 'n' 'unsigned int'       | `-BinaryOperator 0x141941bb8 <line:13:3, col:48> 'char **' contains-errors '='       |   |-UnaryOperator 0x141941930 <col:3, col:4> 'char **' lvalue prefix '*' cannot overflow       |   | `-ImplicitCastExpr 0x141941918 <col:4> 'char ***' <LValueToRValue>       |   |   `-DeclRefExpr 0x1419418f8 <col:4> 'char ***' lvalue ParmVar 0x141928340 'argvp' 'char ***'       |   `-CallExpr 0x141941b88 <col:12, col:48> '<dependent type>' contains-errors       |     |-DeclRefExpr 0x141941aa0 <col:12> 'int ()' Function 0x1419419e8 'isc_mem_get' 'int ()'       |     |-RecoveryExpr 0x141941ac0 <col:24> '<dependent type>' contains-errors lvalue       |     `-BinaryOperator 0x141941b68 <col:30, col:47> 'unsigned long' '*'       |       |-ImplicitCastExpr 0x141941b50 <col:30> 'unsigned long' <IntegralCast>       |       | `-ImplicitCastExpr 0x141941b38 <col:30> 'unsigned int' <LValueToRValue>       |       |   `-DeclRefExpr 0x141941ae0 <col:30> 'unsigned int' lvalue ParmVar 0x1419283c0 'n' 'unsigned int'       |       `-UnaryExprOrTypeTraitExpr 0x141941b18 <col:34, col:47> 'unsigned long' sizeof 'char *'       `-CompoundStmt 0x1419425b8 <line:16:9, line:27:2>         |-DeclStmt 0x141941df0 <line:17:3, col:14>         | `-VarDecl 0x141941d50 <col:3, col:13> col:9 used p 'char *' cinit         |   `-ImplicitCastExpr 0x141941dd8 <col:13> 'char *' <LValueToRValue>         |     `-DeclRefExpr 0x141941db8 <col:13> 'char *' lvalue ParmVar 0x1419281a8 's' 'char *'         |-WhileStmt 0x1419420a8 <line:18:3, line:19:5>         | |-BinaryOperator 0x141942050 <line:18:10, col:43> 'int' '&&'         | | |-BinaryOperator 0x141941f78 <col:10, col:29> 'int' '&&'         | | | |-BinaryOperator 0x141941ea0 <col:10, col:16> 'int' '!='         | | | | |-ImplicitCastExpr 0x141941e88 <col:10, col:11> 'int' <IntegralCast>         | | | | | `-ImplicitCastExpr 0x141941e70 <col:10, col:11> 'char' <LValueToRValue>         | | | | |   `-UnaryOperator 0x141941e40 <col:10, col:11> 'char' lvalue prefix '*' cannot overflow         | | | | |     `-ImplicitCastExpr 0x141941e28 <col:11> 'char *' <LValueToRValue>         | | | | |       `-DeclRefExpr 0x141941e08 <col:11> 'char *' lvalue Var 0x141941d50 'p' 'char *'         | | | | `-CharacterLiteral 0x141941e58 <col:16> 'int' 32         | | | `-BinaryOperator 0x141941f58 <col:23, col:29> 'int' '!='         | | |   |-ImplicitCastExpr 0x141941f40 <col:23, col:24> 'int' <IntegralCast>         | | |   | `-ImplicitCastExpr 0x141941f28 <col:23, col:24> 'char' <LValueToRValue>         | | |   |   `-UnaryOperator 0x141941ef8 <col:23, col:24> 'char' lvalue prefix '*' cannot overflow         | | |   |     `-ImplicitCastExpr 0x141941ee0 <col:24> 'char *' <LValueToRValue>         | | |   |       `-DeclRefExpr 0x141941ec0 <col:24> 'char *' lvalue Var 0x141941d50 'p' 'char *'         | | |   `-CharacterLiteral 0x141941f10 <col:29> 'int' 9         | | `-BinaryOperator 0x141942030 <col:37, col:43> 'int' '!='         | |   |-ImplicitCastExpr 0x141942018 <col:37, col:38> 'int' <IntegralCast>         | |   | `-ImplicitCastExpr 0x141942000 <col:37, col:38> 'char' <LValueToRValue>         | |   |   `-UnaryOperator 0x141941fd0 <col:37, col:38> 'char' lvalue prefix '*' cannot overflow         | |   |     `-ImplicitCastExpr 0x141941fb8 <col:38> 'char *' <LValueToRValue>         | |   |       `-DeclRefExpr 0x141941f98 <col:38> 'char *' lvalue Var 0x141941d50 'p' 'char *'         | |   `-CharacterLiteral 0x141941fe8 <col:43> 'int' 0         | `-UnaryOperator 0x141942090 <line:19:4, col:5> 'char *' postfix '++'         |   `-DeclRefExpr 0x141942070 <col:4> 'char *' lvalue Var 0x141941d50 'p' 'char *'         |-IfStmt 0x141942220 <line:20:3, line:21:11>         | |-BinaryOperator 0x141942160 <line:20:7, col:13> 'int' '!='         | | |-ImplicitCastExpr 0x141942148 <col:7, col:8> 'int' <IntegralCast>         | | | `-ImplicitCastExpr 0x141942130 <col:7, col:8> 'char' <LValueToRValue>         | | |   `-UnaryOperator 0x141942100 <col:7, col:8> 'char' lvalue prefix '*' cannot overflow         | | |     `-ImplicitCastExpr 0x1419420e8 <col:8> 'char *' <LValueToRValue>         | | |       `-DeclRefExpr 0x1419420c8 <col:8> 'char *' lvalue Var 0x141941d50 'p' 'char *'         | | `-CharacterLiteral 0x141942118 <col:13> 'int' 0         | `-BinaryOperator 0x141942200 <line:21:4, col:11> 'char' '='         |   |-UnaryOperator 0x1419421b8 <col:4, col:6> 'char' lvalue prefix '*' cannot overflow         |   | `-UnaryOperator 0x1419421a0 <col:5, col:6> 'char *' postfix '++'         |   |   `-DeclRefExpr 0x141942180 <col:5> 'char *' lvalue Var 0x141941d50 'p' 'char *'         |   `-ImplicitCastExpr 0x1419421e8 <col:11> 'char' <IntegralCast>         |     `-CharacterLiteral 0x1419421d0 <col:11> 'int' 0         `-BinaryOperator 0x141942598 <line:26:3, col:17> 'char *' '='           |-ArraySubscriptExpr 0x141942540 <col:3, col:13> 'char *' lvalue           | |-ImplicitCastExpr 0x141942510 <col:3, col:10> 'char **' <LValueToRValue>           | | `-ParenExpr 0x1419424d0 <col:3, col:10> 'char **' lvalue           | |   `-UnaryOperator 0x1419424b8 <col:4, col:5> 'char **' lvalue prefix '*' cannot overflow           | |     `-ImplicitCastExpr 0x1419424a0 <col:5> 'char ***' <LValueToRValue>           | |       `-DeclRefExpr 0x141942480 <col:5> 'char ***' lvalue ParmVar 0x141928340 'argvp' 'char ***'           | `-ImplicitCastExpr 0x141942528 <col:12> 'unsigned int' <LValueToRValue>           |   `-DeclRefExpr 0x1419424f0 <col:12> 'unsigned int' lvalue ParmVar 0x1419283c0 'n' 'unsigned int'           `-ImplicitCastExpr 0x141942580 <col:17> 'char *' <LValueToRValue>             `-DeclRefExpr 0x141942560 <col:17> 'char *' lvalue ParmVar 0x1419281a8 's' 'char *' ","20969":"`-FunctionDecl 0x12d009658  line:1:1 invalid date_s__xmlschema 'int (int, int)'   |-ParmVarDecl 0x12d0094f0 <col:19, col:25> col:25 invalid klass 'int'   |-ParmVarDecl 0x12d009570 <col:32, col:38> col:38 invalid str 'int'   `-CompoundStmt 0x12d0098e8 <line:2:1, line:4:1>     `-ReturnStmt 0x12d0098d8 <line:3:5, col:31>       `-CallExpr 0x12d0098b0 <col:12, col:31> '<dependent type>' contains-errors         |-DeclRefExpr 0x12d009870 <col:12> 'int ()' Function 0x12d0097b8 'date__xmlschema' 'int ()'         `-RecoveryExpr 0x12d009890 <col:28> '<dependent type>' contains-errors lvalue ","20869":"`-FunctionDecl 0x15a1410d8  col:2 implicit used va_end 'void (__builtin_va_list &)' extern   |-ParmVarDecl 0x15a1411d8 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'   |-BuiltinAttr 0x15a141180 <<invalid sloc>> Implicit 865   `-NoThrowAttr 0x15a141248 <col:2> Implicit ","20669":"`-FunctionDecl 0x1530f3888  line:1:14 invalid mdesc_iterate_over_cpus 'void *(void *(*)(struct mdesc_handle *, int, int, void *), void *, int *)' static   |-ParmVarDecl 0x1530f35f8 <col:38, col:91> col:46 used func 'void *(*)(struct mdesc_handle *, int, int, void *)'   |-ParmVarDecl 0x1530f3678 <col:94, col:100> col:100 used arg 'void *'   |-ParmVarDecl 0x1530f3748 <col:105, col:116> col:116 invalid mask 'int *'   `-CompoundStmt 0x152831df0 <line:2:1, line:29:1>     |-DeclStmt 0x1530f3d38 <line:3:2, col:40>     | |-RecordDecl 0x1530f3948 <col:2, col:9> col:9 struct mdesc_handle     | `-VarDecl 0x1530f3ab8 <col:2, col:39> col:23 used hp 'struct mdesc_handle *' cinit     |   `-ImplicitCastExpr 0x1530f3d08 <col:28, col:39> 'struct mdesc_handle *' <IntegralToPointer>     |     `-CallExpr 0x1530f3ce8 <col:28, col:39> 'int'     |       `-ImplicitCastExpr 0x1530f3cd0 <col:28> 'int (*)()' <FunctionToPointerDecay>     |         `-DeclRefExpr 0x1530f3c80 <col:28> 'int ()' Function 0x1530f3bc8 'mdesc_grab' 'int ()'     |-DeclStmt 0x1530f3e08 <line:4:2, col:18>     | `-VarDecl 0x1530f3d68 <col:2, col:14> col:8 used ret 'void *' cinit     |   `-RecoveryExpr 0x1530f3de8 <col:14> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1530f4018 <line:7:2, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1530f3f00 <col:2> 'int ()' Function 0x1530f3e48 'mdesc_for_each_node_by_name' 'int ()'     | |-DeclRefExpr 0x1530f3f20 <col:30> 'struct mdesc_handle *' lvalue Var 0x1530f3ab8 'hp' 'struct mdesc_handle *'     | |-RecoveryExpr 0x1530f3ff8 <col:34> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x1530f3fa0 <col:38> 'char[4]' lvalue \"STR\"     |-CompoundStmt 0x152831be0 <col:45, line:25:2>     | |-DeclStmt 0x1530f4280 <line:8:3, col:58>     | | `-VarDecl 0x1530f4068 <col:3, col:14> col:14 invalid id 'const int *'     | |-DeclStmt 0x1530f4368 <line:9:3, col:18>     | | `-VarDecl 0x1530f42b0 <col:3, col:16> col:7 used cpuid 'int' cinit     | |   `-UnaryOperator 0x1530f4350 <col:15, col:16> '<dependent type>' contains-errors prefix '*' cannot overflow     | |     `-ImplicitCastExpr 0x1530f4338 <col:16> '<dependent type>' contains-errors <LValueToRValue>     | |       `-RecoveryExpr 0x1530f4318 <col:16> '<dependent type>' contains-errors lvalue     | |-BinaryOperator 0x152831b00 <line:22:3, col:32> 'void *' contains-errors '='     | | |-DeclRefExpr 0x1530f4380 <col:3> 'void *' contains-errors lvalue Var 0x1530f3d68 'ret' 'void *'     | | `-CallExpr 0x152831ac0 <col:9, col:32> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x1530f43a0 <col:9> 'void *(*)(struct mdesc_handle *, int, int, void *)' lvalue ParmVar 0x1530f35f8 'func' 'void *(*)(struct mdesc_handle *, int, int, void *)'     | |   |-DeclRefExpr 0x1530f43c0 <col:14> 'struct mdesc_handle *' lvalue Var 0x1530f3ab8 'hp' 'struct mdesc_handle *'     | |   |-RecoveryExpr 0x152831aa0 <col:18> '<dependent type>' contains-errors lvalue     | |   |-DeclRefExpr 0x152831a00 <col:22> 'int' contains-errors lvalue Var 0x1530f42b0 'cpuid' 'int'     | |   `-DeclRefExpr 0x152831a20 <col:29> 'void *' lvalue ParmVar 0x1530f3678 'arg' 'void *'     | `-IfStmt 0x152831bc0 <line:23:3, line:24:9>     |   |-ImplicitCastExpr 0x152831b40 <line:23:7> 'void *' contains-errors <LValueToRValue>     |   | `-DeclRefExpr 0x152831b20 <col:7> 'void *' contains-errors lvalue Var 0x1530f3d68 'ret' 'void *'     |   `-GotoStmt 0x152831ba8 <line:24:4, col:9> 'out' 0x152831b58     |-LabelStmt 0x152831d88 <line:26:1, line:27:18> 'out'     | `-CallExpr 0x152831d48 <col:2, col:18> 'int'     |   |-ImplicitCastExpr 0x152831d30 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x152831cf0 <col:2> 'int ()' Function 0x152831c38 'mdesc_release' 'int ()'     |   `-ImplicitCastExpr 0x152831d70 <col:16> 'struct mdesc_handle *' <LValueToRValue>     |     `-DeclRefExpr 0x152831d10 <col:16> 'struct mdesc_handle *' lvalue Var 0x1530f3ab8 'hp' 'struct mdesc_handle *'     `-ReturnStmt 0x152831de0 <line:28:2, col:9>       `-ImplicitCastExpr 0x152831dc8 <col:9> 'void *' contains-errors <LValueToRValue>         `-DeclRefExpr 0x152831da8 <col:9> 'void *' contains-errors lvalue Var 0x1530f3d68 'ret' 'void *' ","20228":"`-FunctionDecl 0x13b00e350  line:1:20 sem_putref 'void (struct sem_array *)' static inline   |-ParmVarDecl 0x13b00e248 <col:31, col:49> col:49 used sma 'struct sem_array *'   `-CompoundStmt 0x13c008798 <line:2:1, line:6:1>     |-CallExpr 0x13c008408 <line:3:2, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13c008370 <col:2> 'int ()' Function 0x13c0082b8 'ipc_lock_by_ptr' 'int ()'     | `-UnaryOperator 0x13c0083f0 <col:18, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13c0083c8 <col:19, col:24> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13c008390 <col:19> 'struct sem_array *' lvalue ParmVar 0x13b00e248 'sma' 'struct sem_array *'     |-CallExpr 0x13c008598 <line:4:2, col:20> 'int'     | |-ImplicitCastExpr 0x13c008580 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13c008510 <col:2> 'int ()' Function 0x13c008458 'ipc_rcu_putref' 'int ()'     | `-ImplicitCastExpr 0x13c0085c0 <col:17> 'struct sem_array *' <LValueToRValue>     |   `-DeclRefExpr 0x13c008530 <col:17> 'struct sem_array *' lvalue ParmVar 0x13b00e248 'sma' 'struct sem_array *'     `-CallExpr 0x13c008770 <line:5:2, col:29> '<dependent type>' contains-errors       |-DeclRefExpr 0x13c0086b8 <col:2> 'int ()' Function 0x13c008600 'ipc_unlock' 'int ()'       `-UnaryOperator 0x13c008758 <col:13, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x13c008730 <col:14, col:21> '<dependent type>' contains-errors lvalue           `-ParenExpr 0x13c0086f8 <col:14, col:18> 'struct sem_array *' lvalue             `-DeclRefExpr 0x13c0086d8 <col:15> 'struct sem_array *' lvalue ParmVar 0x13b00e248 'sma' 'struct sem_array *' ","21034":"`-FunctionDecl 0x14f808200  line:1:1 process_form_int 'int (struct parsed_tag *, int)'   |-ParmVarDecl 0x14f00e248 <col:18, col:37> col:37 used tag 'struct parsed_tag *'   |-ParmVarDecl 0x14f00e2c8 <col:42, col:46> col:46 used fid 'int'   `-CompoundStmt 0x158808ca0 <line:2:1, line:65:1>     |-DeclStmt 0x14f808638 <line:3:5, col:33>     | |-VarDecl 0x14f808318 <col:5, col:11> col:11 used p 'char *'     | |-VarDecl 0x14f808398 <col:5, col:15> col:15 used q 'char *'     | |-VarDecl 0x14f808418 <col:5, col:19> col:19 used r 'char *'     | |-VarDecl 0x14f808498 <col:5, col:23> col:23 used s 'char *'     | |-VarDecl 0x14f808518 <col:5, col:27> col:27 used tg 'char *'     | `-VarDecl 0x14f808598 <col:5, col:32> col:32 used n 'char *'     |-BinaryOperator 0x14f8086e8 <line:5:5, col:9> 'char *' '='     | |-DeclRefExpr 0x14f808650 <col:5> 'char *' lvalue Var 0x14f808318 'p' 'char *'     | `-ImplicitCastExpr 0x14f8086d0 <col:9> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x14f8086b0 <col:9> 'char[4]' lvalue \"STR\"     |-CallExpr 0x14f808950 <line:6:5, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14f808830 <col:5> 'int ()' Function 0x14f808778 'parsedtag_get_value' 'int ()'     | |-DeclRefExpr 0x14f808850 <col:25> 'struct parsed_tag *' lvalue ParmVar 0x14f00e248 'tag' 'struct parsed_tag *'     | |-RecoveryExpr 0x14f808930 <col:30> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x14f8088e0 <col:43, col:44> 'char **' prefix '&' cannot overflow     |   `-DeclRefExpr 0x14f808888 <col:44> 'char *' lvalue Var 0x14f808318 'p' 'char *'     |-BinaryOperator 0x14f8089e0 <line:7:5, col:9> 'char *' '='     | |-DeclRefExpr 0x14f808988 <col:5> 'char *' lvalue Var 0x14f808398 'q' 'char *'     | `-ImplicitCastExpr 0x14f8089c8 <col:9> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x14f8089a8 <col:9> 'char[4]' lvalue \"STR\"     |-CallExpr 0x14f808ae8 <line:8:5, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14f808a00 <col:5> 'int ()' Function 0x14f808778 'parsedtag_get_value' 'int ()'     | |-DeclRefExpr 0x14f808a20 <col:25> 'struct parsed_tag *' lvalue ParmVar 0x14f00e248 'tag' 'struct parsed_tag *'     | |-RecoveryExpr 0x14f808ac8 <col:30> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x14f808a78 <col:43, col:44> 'char **' prefix '&' cannot overflow     |   `-DeclRefExpr 0x14f808a58 <col:44> 'char *' lvalue Var 0x14f808398 'q' 'char *'     |-BinaryOperator 0x14f808f98 <line:9:5, col:70> 'char *' contains-errors '='     | |-DeclRefExpr 0x14f808b20 <col:5> 'char *' lvalue Var 0x14f808398 'q' 'char *'     | `-CallExpr 0x14f808f60 <col:9, col:70> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14f808c20 <col:9> 'int ()' Function 0x14f808b68 'url_encode' 'int ()'     |   |-CallExpr 0x14f808ee0 <col:20, col:34> 'int'     |   | |-ImplicitCastExpr 0x14f808ec8 <col:20> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14f808d20 <col:20> 'int ()' Function 0x14f808c68 'remove_space' 'int ()'     |   | `-ImplicitCastExpr 0x14f808f08 <col:33> 'char *' <LValueToRValue>     |   |   `-DeclRefExpr 0x14f808d40 <col:33> 'char *' lvalue Var 0x14f808398 'q' 'char *'     |   |-RecoveryExpr 0x14f808f20 <col:37> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x14f808f40 <col:50> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14f809030 <line:10:5, col:9> 'char *' contains-errors '='     | |-DeclRefExpr 0x14f808fb8 <col:5> 'char *' lvalue Var 0x14f808418 'r' 'char *'     | `-RecoveryExpr 0x14f809010 <col:9> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14f8090c8 <line:17:5, col:9> 'char *' contains-errors '='     | |-DeclRefExpr 0x14f809050 <col:5> 'char *' lvalue Var 0x14f808498 's' 'char *'     | `-RecoveryExpr 0x14f8090a8 <col:9> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14f028800 <line:18:5, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14f8090e8 <col:5> 'int ()' Function 0x14f808778 'parsedtag_get_value' 'int ()'     | |-DeclRefExpr 0x14f809108 <col:25> 'struct parsed_tag *' lvalue ParmVar 0x14f00e248 'tag' 'struct parsed_tag *'     | |-RecoveryExpr 0x14f8091b0 <col:30> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x14f809160 <col:44, col:45> 'char **' prefix '&' cannot overflow     |   `-DeclRefExpr 0x14f809140 <col:45> 'char *' lvalue Var 0x14f808498 's' 'char *'     |-BinaryOperator 0x14f0288b0 <line:19:5, col:10> 'char *' contains-errors '='     | |-DeclRefExpr 0x14f028838 <col:5> 'char *' lvalue Var 0x14f808518 'tg' 'char *'     | `-RecoveryExpr 0x14f028890 <col:10> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14f0289b8 <line:20:5, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14f0288d0 <col:5> 'int ()' Function 0x14f808778 'parsedtag_get_value' 'int ()'     | |-DeclRefExpr 0x14f0288f0 <col:25> 'struct parsed_tag *' lvalue ParmVar 0x14f00e248 'tag' 'struct parsed_tag *'     | |-RecoveryExpr 0x14f028998 <col:30> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x14f028948 <col:43, col:44> 'char **' prefix '&' cannot overflow     |   `-DeclRefExpr 0x14f028928 <col:44> 'char *' lvalue Var 0x14f808518 'tg' 'char *'     |-BinaryOperator 0x14f028a68 <line:21:5, col:9> 'char *' contains-errors '='     | |-DeclRefExpr 0x14f0289f0 <col:5> 'char *' lvalue Var 0x14f808598 'n' 'char *'     | `-RecoveryExpr 0x14f028a48 <col:9> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14f028b70 <line:22:5, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14f028a88 <col:5> 'int ()' Function 0x14f808778 'parsedtag_get_value' 'int ()'     | |-DeclRefExpr 0x14f028aa8 <col:25> 'struct parsed_tag *' lvalue ParmVar 0x14f00e248 'tag' 'struct parsed_tag *'     | |-RecoveryExpr 0x14f028b50 <col:30> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x14f028b00 <col:41, col:42> 'char **' prefix '&' cannot overflow     |   `-DeclRefExpr 0x14f028ae0 <col:42> 'char *' lvalue Var 0x14f808598 'n' 'char *'     |-IfStmt 0x14f028db8 <line:24:5, line:33:5> has_else     | |-BinaryOperator 0x14f028c00 <line:24:9, col:15> 'int' '<'     | | |-ImplicitCastExpr 0x14f028be8 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x14f028ba8 <col:9> 'int' lvalue ParmVar 0x14f00e2c8 'fid' 'int'     | | `-IntegerLiteral 0x14f028bc8 <col:15> 'int' 0     | |-CompoundStmt 0x14f028cb8 <col:18, line:28:5>     | | `-BinaryOperator 0x14f028c98 <line:27:2, col:8> 'int' contains-errors '='     | |   |-DeclRefExpr 0x14f028c20 <col:2> 'int' lvalue ParmVar 0x14f00e2c8 'fid' 'int'     | |   `-RecoveryExpr 0x14f028c78 <col:8> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14f028da8 <line:29:10, line:33:5>     |-IfStmt 0x14f0291a8 <line:34:5, line:43:5> has_else     | |-RecoveryExpr 0x14f028e08 <line:34:9, col:23> '_Bool' contains-errors     | |-CompoundStmt 0x14f029028 <col:26, line:38:5>     | `-IfStmt 0x14f029188 <line:39:10, line:43:5>     |   |-RecoveryExpr 0x14f029038 <line:39:14, col:28> '_Bool' contains-errors     |   `-CompoundStmt 0x14f029178 <col:38, line:43:5>     `-IfStmt 0x158808aa0 <line:46:5, line:61:5>       |-RecoveryExpr 0x14f0291f8 <line:46:9> '_Bool' contains-errors       `-CompoundStmt 0x158808a90 <col:23, line:61:5> ","20204":"`-FunctionDecl 0x124029c00  col:68 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x124029d00 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x124029ca8 <<invalid sloc>> Implicit 902 ","20604":"`-FunctionDecl 0x13005c480  line:1:13 invalid funcinfo 'void (int *, int *)' static   |-ParmVarDecl 0x13005c328 <col:23, col:34> col:34 referenced invalid ar 'int *'   |-ParmVarDecl 0x13005c3a8 <col:38, col:47> col:47 invalid cl 'int *'   `-CompoundStmt 0x130076ca0 <col:51, line:24:1>     |-IfStmt 0x130076a00 <line:2:3, line:22:3> has_else     | |-CallExpr 0x13005c6d0 <line:2:7, col:22> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x13005c690 <col:7> 'int ()' Function 0x13005c5d8 'noLuaClosure' 'int ()'     | | `-RecoveryExpr 0x13005c6b0 <col:20> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x130075d18 <col:25, line:8:3>     | | |-BinaryOperator 0x13005c7f0 <line:3:5, col:18> '<dependent type>' contains-errors '='     | | | |-CXXDependentScopeMemberExpr 0x13005c740 <col:5, col:9> '<dependent type>' contains-errors lvalue ->source     | | | | `-RecoveryExpr 0x13005c718 <col:5> '<dependent type>' contains-errors lvalue     | | | |   `-DeclRefExpr 0x13005c6f8 <col:5> 'int *' lvalue ParmVar 0x13005c328 'ar' 'int *'     | | | `-StringLiteral 0x13005c7d0 <col:18> 'char[4]' lvalue \"STR\"     | | |-BinaryOperator 0x130075a58 <line:4:5, col:26> '<dependent type>' contains-errors '='     | | | |-CXXDependentScopeMemberExpr 0x13005c858 <col:5, col:9> '<dependent type>' contains-errors lvalue ->srclen     | | | | `-RecoveryExpr 0x13005c830 <col:5> '<dependent type>' contains-errors lvalue     | | | |   `-DeclRefExpr 0x13005c810 <col:5> 'int *' lvalue ParmVar 0x13005c328 'ar' 'int *'     | | | `-CallExpr 0x130075a18 <col:18, col:26> 'int'     | | |   |-ImplicitCastExpr 0x130075a00 <col:18> 'int (*)()' <FunctionToPointerDecay>     | | |   | `-DeclRefExpr 0x13005c980 <col:18> 'int ()' Function 0x13005c8c8 'LL' 'int ()'     | | |   `-ImplicitCastExpr 0x130075a40 <col:21> 'char *' <ArrayToPointerDecay>     | | |     `-StringLiteral 0x13005c9a0 <col:21> 'char[4]' lvalue \"STR\"     | | |-BinaryOperator 0x130075b40 <line:5:5, col:24> '<dependent type>' contains-errors '='     | | | |-CXXDependentScopeMemberExpr 0x130075ac0 <col:5, col:9> '<dependent type>' contains-errors lvalue ->linedefined     | | | | `-RecoveryExpr 0x130075a98 <col:5> '<dependent type>' contains-errors lvalue     | | | |   `-DeclRefExpr 0x130075a78 <col:5> 'int *' lvalue ParmVar 0x13005c328 'ar' 'int *'     | | | `-UnaryOperator 0x130075b28 <col:23, col:24> 'int' prefix '-'     | | |   `-IntegerLiteral 0x130075b08 <col:24> 'int' 1     | | |-BinaryOperator 0x130075c28 <line:6:5, col:28> '<dependent type>' contains-errors '='     | | | |-CXXDependentScopeMemberExpr 0x130075ba8 <col:5, col:9> '<dependent type>' contains-errors lvalue ->lastlinedefined     | | | | `-RecoveryExpr 0x130075b80 <col:5> '<dependent type>' contains-errors lvalue     | | | |   `-DeclRefExpr 0x130075b60 <col:5> 'int *' lvalue ParmVar 0x13005c328 'ar' 'int *'     | | | `-UnaryOperator 0x130075c10 <col:27, col:28> 'int' prefix '-'     | | |   `-IntegerLiteral 0x130075bf0 <col:28> 'int' 1     | | `-BinaryOperator 0x130075cf8 <line:7:5, col:16> '<dependent type>' contains-errors '='     | |   |-CXXDependentScopeMemberExpr 0x130075c90 <col:5, col:9> '<dependent type>' contains-errors lvalue ->what     | |   | `-RecoveryExpr 0x130075c68 <col:5> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x130075c48 <col:5> 'int *' lvalue ParmVar 0x13005c328 'ar' 'int *'     | |   `-StringLiteral 0x130075cd8 <col:16> 'char[4]' lvalue \"STR\"     | `-CompoundStmt 0x1300769b0 <line:9:8, line:22:3>     |   |-DeclStmt 0x130075e80 <line:10:5, col:29>     |   | `-VarDecl 0x130075d68 <col:5, col:18> col:18 invalid p 'const int *'     |   |-IfStmt 0x1300765d8 <line:11:5, line:18:5> has_else     |   | |-CXXDependentScopeMemberExpr 0x130075eb8 <line:11:9, col:12> '<dependent type>' contains-errors lvalue ->source     |   | | `-RecoveryExpr 0x130075e98 <col:9> '<dependent type>' contains-errors lvalue     |   | |-CompoundStmt 0x130076380 <col:20, line:14:5>     |   | | |-BinaryOperator 0x130076120 <line:12:7, col:36> '<dependent type>' contains-errors '='     |   | | | |-CXXDependentScopeMemberExpr 0x130075f48 <col:7, col:11> '<dependent type>' contains-errors lvalue ->source     |   | | | | `-RecoveryExpr 0x130075f20 <col:7> '<dependent type>' contains-errors lvalue     |   | | | |   `-DeclRefExpr 0x130075f00 <col:7> 'int *' lvalue ParmVar 0x13005c328 'ar' 'int *'     |   | | | `-CallExpr 0x1300760f8 <col:20, col:36> '<dependent type>' contains-errors     |   | | |   |-DeclRefExpr 0x130076070 <col:20> 'int ()' Function 0x130075fb8 'getstr' 'int ()'     |   | | |   `-CXXDependentScopeMemberExpr 0x1300760b0 <col:27, col:30> '<dependent type>' contains-errors lvalue ->source     |   | | |     `-RecoveryExpr 0x130076090 <col:27> '<dependent type>' contains-errors lvalue     |   | | `-BinaryOperator 0x130076360 <line:13:7, col:36> '<dependent type>' contains-errors '='     |   | |   |-CXXDependentScopeMemberExpr 0x130076188 <col:7, col:11> '<dependent type>' contains-errors lvalue ->srclen     |   | |   | `-RecoveryExpr 0x130076160 <col:7> '<dependent type>' contains-errors lvalue     |   | |   |   `-DeclRefExpr 0x130076140 <col:7> 'int *' lvalue ParmVar 0x13005c328 'ar' 'int *'     |   | |   `-CallExpr 0x130076338 <col:20, col:36> '<dependent type>' contains-errors     |   | |     |-DeclRefExpr 0x1300762b0 <col:20> 'int ()' Function 0x1300761f8 'tsslen' 'int ()'     |   | |     `-CXXDependentScopeMemberExpr 0x1300762f0 <col:27, col:30> '<dependent type>' contains-errors lvalue ->source     |   | |       `-RecoveryExpr 0x1300762d0 <col:27> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x1300765b8 <line:15:10, line:18:5>     |   |   |-BinaryOperator 0x130076450 <line:16:7, col:20> '<dependent type>' contains-errors '='     |   |   | |-CXXDependentScopeMemberExpr 0x1300763e8 <col:7, col:11> '<dependent type>' contains-errors lvalue ->source     |   |   | | `-RecoveryExpr 0x1300763c0 <col:7> '<dependent type>' contains-errors lvalue     |   |   | |   `-DeclRefExpr 0x1300763a0 <col:7> 'int *' lvalue ParmVar 0x13005c328 'ar' 'int *'     |   |   | `-StringLiteral 0x130076430 <col:20> 'char[4]' lvalue \"STR\"     |   |   `-BinaryOperator 0x130076598 <line:17:7, col:28> '<dependent type>' contains-errors '='     |   |     |-CXXDependentScopeMemberExpr 0x1300764b8 <col:7, col:11> '<dependent type>' contains-errors lvalue ->srclen     |   |     | `-RecoveryExpr 0x130076490 <col:7> '<dependent type>' contains-errors lvalue     |   |     |   `-DeclRefExpr 0x130076470 <col:7> 'int *' lvalue ParmVar 0x13005c328 'ar' 'int *'     |   |     `-CallExpr 0x130076558 <col:20, col:28> 'int'     |   |       |-ImplicitCastExpr 0x130076540 <col:20> 'int (*)()' <FunctionToPointerDecay>     |   |       | `-DeclRefExpr 0x130076500 <col:20> 'int ()' Function 0x13005c8c8 'LL' 'int ()'     |   |       `-ImplicitCastExpr 0x130076580 <col:23> 'char *' <ArrayToPointerDecay>     |   |         `-StringLiteral 0x130076520 <col:23> 'char[4]' lvalue \"STR\"     |   |-BinaryOperator 0x130076700 <line:19:5, col:26> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x130076650 <col:5, col:9> '<dependent type>' contains-errors lvalue ->linedefined     |   | | `-RecoveryExpr 0x130076628 <col:5> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x130076608 <col:5> 'int *' lvalue ParmVar 0x13005c328 'ar' 'int *'     |   | `-CXXDependentScopeMemberExpr 0x1300766b8 <col:23, col:26> '<dependent type>' contains-errors lvalue ->linedefined     |   |   `-RecoveryExpr 0x130076698 <col:23> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x130076818 <line:20:5, col:30> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x130076768 <col:5, col:9> '<dependent type>' contains-errors lvalue ->lastlinedefined     |     | `-RecoveryExpr 0x130076740 <col:5> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x130076720 <col:5> 'int *' lvalue ParmVar 0x13005c328 'ar' 'int *'     |     `-CXXDependentScopeMemberExpr 0x1300767d0 <col:27, col:30> '<dependent type>' contains-errors lvalue ->lastlinedefined     |       `-RecoveryExpr 0x1300767b0 <col:27> '<dependent type>' contains-errors lvalue     `-CallExpr 0x130076c68 <line:23:3, col:53> '<dependent type>' contains-errors       |-DeclRefExpr 0x130076b10 <col:3> 'int ()' Function 0x130076a58 'luaO_chunkid' 'int ()'       |-CXXDependentScopeMemberExpr 0x130076b50 <col:16, col:20> '<dependent type>' contains-errors lvalue ->short_src       | `-RecoveryExpr 0x130076b30 <col:16> '<dependent type>' contains-errors lvalue       |-CXXDependentScopeMemberExpr 0x130076bb8 <col:31, col:35> '<dependent type>' contains-errors lvalue ->source       | `-RecoveryExpr 0x130076b98 <col:31> '<dependent type>' contains-errors lvalue       `-CXXDependentScopeMemberExpr 0x130076c20 <col:43, col:47> '<dependent type>' contains-errors lvalue ->srclen         `-RecoveryExpr 0x130076c00 <col:43> '<dependent type>' contains-errors lvalue ","20382":"`-FunctionDecl 0x139827518  col:10 implicit used memchr 'void *(const void *, int, unsigned long)' extern   |-ParmVarDecl 0x139827618 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x139827680 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x1398276e8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1398275c0 <<invalid sloc>> Implicit 892 ","21015":"`-FunctionDecl 0x13800de88  line:1:1 invalid p11_rpc_message_write_version 'int (int *, int *)'   |-ParmVarDecl 0x13800dd28 <col:32, col:49> col:49 invalid msg 'int *'   |-ParmVarDecl 0x13800dda8 <line:2:32, col:44> col:44 invalid version 'int *'   `-CompoundStmt 0x138027b90 <line:3:1, line:15:1>     |-CallExpr 0x13800e180 <line:4:2, col:21> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13800e0a0 <col:2> 'int ()' Function 0x13800dfe8 'assert' 'int ()'     | `-BinaryOperator 0x13800e160 <col:10, col:17> 'int' contains-errors '!='     |   |-RecoveryExpr 0x13800e0c0 <col:10> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x13800e140 <col:17> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13800e2d0 <line:5:2, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13800e1a8 <col:2> 'int ()' Function 0x13800dfe8 'assert' 'int ()'     | `-BinaryOperator 0x13800e2b0 <col:10, col:25> 'int' contains-errors '!='     |   |-CXXDependentScopeMemberExpr 0x13800e1e8 <col:10, col:15> '<dependent type>' contains-errors lvalue ->output     |   | `-RecoveryExpr 0x13800e1c8 <col:10> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x13800e290 <col:25> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13800e3d8 <line:6:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13800e2f8 <col:2> 'int ()' Function 0x13800dfe8 'assert' 'int ()'     | `-BinaryOperator 0x13800e3b8 <col:10, col:21> 'int' contains-errors '!='     |   |-RecoveryExpr 0x13800e318 <col:10> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x13800e398 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x138027690 <line:9:2, col:69> '<dependent type>' contains-errors     | |-DeclRefExpr 0x138027400 <col:2> 'int ()' Function 0x13800dfe8 'assert' 'int ()'     | `-BinaryOperator 0x138027670 <col:10, col:68> 'int' contains-errors '||'     |   |-UnaryOperator 0x1380274a0 <col:10, col:16> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | `-ImplicitCastExpr 0x138027488 <col:11, col:16> '<dependent type>' contains-errors <LValueToRValue>     |   |   `-CXXDependentScopeMemberExpr 0x138027440 <col:11, col:16> '<dependent type>' contains-errors lvalue ->signature     |   |     `-RecoveryExpr 0x138027420 <col:11> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x138027640 <col:29, col:68> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x138027598 <col:29> 'int ()' Function 0x1380274e0 'p11_rpc_message_verify_part' 'int ()'     |     |-RecoveryExpr 0x1380275b8 <col:58> '<dependent type>' contains-errors lvalue     |     `-StringLiteral 0x138027620 <col:63> 'char[4]' lvalue \"STR\"     |-CallExpr 0x138027888 <line:11:2, col:54> '<dependent type>' contains-errors     | |-DeclRefExpr 0x138027798 <col:2> 'int ()' Function 0x1380276e0 'p11_rpc_buffer_add_byte' 'int ()'     | |-CXXDependentScopeMemberExpr 0x1380277d8 <col:27, col:32> '<dependent type>' contains-errors lvalue ->output     | | `-RecoveryExpr 0x1380277b8 <col:27> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x138027840 <col:40, col:49> '<dependent type>' contains-errors lvalue ->major     |   `-RecoveryExpr 0x138027820 <col:40> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1380279a8 <line:12:2, col:54> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1380278b8 <col:2> 'int ()' Function 0x1380276e0 'p11_rpc_buffer_add_byte' 'int ()'     | |-CXXDependentScopeMemberExpr 0x1380278f8 <col:27, col:32> '<dependent type>' contains-errors lvalue ->output     | | `-RecoveryExpr 0x1380278d8 <col:27> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x138027960 <col:40, col:49> '<dependent type>' contains-errors lvalue ->minor     |   `-RecoveryExpr 0x138027940 <col:40> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x138027b80 <line:14:2, col:40>       `-UnaryOperator 0x138027b68 <col:9, col:40> '<dependent type>' contains-errors prefix '!' cannot overflow         `-CallExpr 0x138027b40 <col:10, col:40> '<dependent type>' contains-errors           |-DeclRefExpr 0x138027ab8 <col:10> 'int ()' Function 0x138027a00 'p11_buffer_failed' 'int ()'           `-CXXDependentScopeMemberExpr 0x138027af8 <col:29, col:34> '<dependent type>' contains-errors lvalue ->output             `-RecoveryExpr 0x138027ad8 <col:29> '<dependent type>' contains-errors lvalue ","21161":"`-FunctionDecl 0x158928298  line:1:12 invalid add_client_CA 'int (int (*)())' static   |-ParmVarDecl 0x158928180 <col:26, <invalid sloc>> col:26 invalid STACK_OF 'int (*)()'   `-CompoundStmt 0x158941140 <line:2:2, line:18:2>     |-IfStmt 0x158928478 <line:5:2, col:25>     | |-BinaryOperator 0x158928408 <col:6, col:11> 'int' contains-errors '=='     | | |-RecoveryExpr 0x1589283c8 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1589283e8 <col:11> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x158928468 <col:17, col:25>     |   `-ParenExpr 0x158928448 <col:23, col:25> 'int'     |     `-IntegerLiteral 0x158928428 <col:24> 'int' 0     |-IfStmt 0x158928788 <line:6:2, line:7:11>     | |-RecoveryExpr 0x158928718 <line:6:6, col:61> '_Bool' contains-errors     | `-ReturnStmt 0x158928778 <line:7:3, col:11>     |   `-ParenExpr 0x158928758 <col:9, col:11> 'int'     |     `-IntegerLiteral 0x158928738 <col:10> 'int' 0     |-IfStmt 0x158940ce8 <line:9:2, line:10:11>     | |-RecoveryExpr 0x158940c78 <line:9:6, col:56> '_Bool' contains-errors     | `-ReturnStmt 0x158940cd8 <line:10:3, col:11>     |   `-ParenExpr 0x158940cb8 <col:9, col:11> 'int'     |     `-IntegerLiteral 0x158940c98 <col:10> 'int' 0     |-IfStmt 0x1589410d0 <line:12:2, line:16:3>     | |-UnaryOperator 0x158940f50 <line:12:6, col:33> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x158940f20 <col:7, col:33> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x158940de8 <col:7> 'int ()' Function 0x158940d30 'sk_X509_NAME_push' 'int ()'     | |   |-UnaryOperator 0x158940ee8 <col:25, col:26> '<dependent type>' contains-errors prefix '*' cannot overflow     | |   | `-ImplicitCastExpr 0x158940ed0 <col:26> '<dependent type>' contains-errors <LValueToRValue>     | |   |   `-RecoveryExpr 0x158940eb0 <col:26> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x158940f00 <col:29> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1589410b8 <line:13:3, line:16:3>     |   `-ReturnStmt 0x1589410a8 <line:15:3, col:11>     |     `-ParenExpr 0x158941088 <col:9, col:11> 'int'     |       `-IntegerLiteral 0x158941068 <col:10> 'int' 0     `-ReturnStmt 0x158941130 <line:17:2, col:10>       `-ParenExpr 0x158941110 <col:8, col:10> 'int'         `-IntegerLiteral 0x1589410f0 <col:9> 'int' 1 ","20633":"`-FunctionDecl 0x14780e030  line:1:13 invalid rebase_buffer 'void (int *, int, int *, int *, int)' static   |-ParmVarDecl 0x14780dd28 <col:27, col:44> col:44 referenced invalid obj 'int *'   |-ParmVarDecl 0x14780dda8 <col:49, col:54> col:54 invalid off 'int'   |-ParmVarDecl 0x14780de28 <col:59, col:68> col:68 invalid fd 'int *'   |-ParmVarDecl 0x14780dea8 <col:72, col:77> col:77 invalid buf 'int *'   |-ParmVarDecl 0x14780df28 <col:82, col:86> col:86 used count 'int'   `-CompoundStmt 0x1471232f8 <col:93, line:27:1>     |-IfStmt 0x14780e200 <line:2:2, line:4:2>     | |-BinaryOperator 0x14780e1b8 <line:2:6, col:31> 'int' contains-errors '||'     | | |-CXXDependentScopeMemberExpr 0x14780e120 <col:6, col:11> '<dependent type>' contains-errors lvalue ->rebasing_buffer     | | | `-RecoveryExpr 0x14780e100 <col:6> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x14780e1a0 <col:30, col:31> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x14780e188 <col:31> '<dependent type>' contains-errors <LValueToRValue>     | |     `-RecoveryExpr 0x14780e168 <col:31> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14780e1e8 <col:36, line:4:2>     |   `-ReturnStmt 0x14780e1d8 <line:3:3>     |-BinaryOperator 0x14780e308 <line:5:2, col:25> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14780e268 <col:2, col:7> '<dependent type>' contains-errors lvalue ->rebasing_buffer     | | `-RecoveryExpr 0x14780e240 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14780e220 <col:2> 'int *' lvalue ParmVar 0x14780dd28 'obj' 'int *'     | `-RecoveryExpr 0x14780e2e8 <col:25> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x14780e3c8 <line:8:2, col:11>     | `-VarDecl 0x14780e340 <col:2, col:10> col:6 used i 'int' cinit     |   `-IntegerLiteral 0x14780e3a8 <col:10> 'int' 0     `-ForStmt 0x147123230 <line:17:2, line:24:2>       |-<<<NULL>>>       |-<<<NULL>>>       |-BinaryOperator 0x147122d48 <line:17:9, col:31> 'int' contains-errors '<'       | |-DeclRefExpr 0x147122c78 <col:9> 'int' lvalue Var 0x14780e340 'i' 'int'       | `-CXXDependentScopeMemberExpr 0x147122d00 <col:13, col:31> '<dependent type>' contains-errors lvalue ->n_ranges       |   `-CXXDependentScopeMemberExpr 0x147122cb8 <col:13, col:18> '<dependent type>' contains-errors lvalue ->rebase_info       |     `-RecoveryExpr 0x147122c98 <col:13> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x147122d88 <col:41, col:42> 'int' postfix '++'       | `-DeclRefExpr 0x147122d68 <col:41> 'int' lvalue Var 0x14780e340 'i' 'int'       `-CompoundStmt 0x147123218 <col:46, line:24:2>         `-IfStmt 0x1471231f8 <line:20:3, line:23:3>           |-BinaryOperator 0x147122f08 <line:20:7, col:30> 'int' contains-errors '&&'           | |-BinaryOperator 0x147122e88 <col:7, col:14> 'int' contains-errors '>='           | | |-RecoveryExpr 0x147122e68 <col:7> '<dependent type>' contains-errors lvalue           | | `-RecoveryExpr 0x147122db8 <col:14> '<dependent type>' contains-errors lvalue           | `-BinaryOperator 0x147122ee8 <col:21, col:30> 'int' contains-errors '<='           |   |-RecoveryExpr 0x147122ea8 <col:21> '<dependent type>' contains-errors lvalue           |   `-RecoveryExpr 0x147122ec8 <col:30> '<dependent type>' contains-errors lvalue           `-CompoundStmt 0x1471231e8 <col:35, line:23:3> ","20385":"`-FunctionDecl 0x11f9281c0  line:1:7 invalid print_string 'void (int)'   |-ParmVarDecl 0x11f9280f0 <col:20, <invalid sloc>> col:23 invalid 'int'   `-CompoundStmt 0x12800a540 <line:2:2, line:36:2>     |-ForStmt 0x11f928670 <line:4:3, line:10:3>     | |-DeclStmt 0x11f928310 <line:4:8, col:17>     | | `-VarDecl 0x11f928288 <col:8, col:16> col:12 used i 'int' cinit     | |   `-IntegerLiteral 0x11f9282f0 <col:16> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x11f9283a0 <col:19, col:23> 'int' contains-errors '<'     | | |-DeclRefExpr 0x11f928328 <col:19> 'int' lvalue Var 0x11f928288 'i' 'int'     | | `-RecoveryExpr 0x11f928380 <col:23> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x11f9283e0 <col:28, col:30> 'int' prefix '++'     | | `-DeclRefExpr 0x11f9283c0 <col:30> 'int' lvalue Var 0x11f928288 'i' 'int'     | `-CompoundStmt 0x11f928648 <line:5:3, line:10:3>     |   |-DeclStmt 0x11f9284a8 <line:6:4, col:19>     |   | `-VarDecl 0x11f928408 <col:4, col:9> col:9 used c 'char'     |   |-IfStmt 0x11f928608 <line:7:4, col:28>     |   | |-BinaryOperator 0x11f9285e0 <col:8, col:23> 'int' '&&'     |   | | |-BinaryOperator 0x11f928530 <col:8, col:13> 'int' '>='     |   | | | |-ImplicitCastExpr 0x11f928518 <col:8> 'int' <IntegralCast>     |   | | | | `-ImplicitCastExpr 0x11f928500 <col:8> 'char' <LValueToRValue>     |   | | | |   `-DeclRefExpr 0x11f9284c0 <col:8> 'char' lvalue Var 0x11f928408 'c' 'char'     |   | | | `-IntegerLiteral 0x11f9284e0 <col:13> 'int' 32     |   | | `-BinaryOperator 0x11f9285c0 <col:19, col:23> 'int' '<'     |   | |   |-ImplicitCastExpr 0x11f9285a8 <col:19> 'int' <IntegralCast>     |   | |   | `-ImplicitCastExpr 0x11f928590 <col:19> 'char' <LValueToRValue>     |   | |   |   `-DeclRefExpr 0x11f928550 <col:19> 'char' lvalue Var 0x11f928408 'c' 'char'     |   | |   `-IntegerLiteral 0x11f928570 <col:23> 'int' 127     |   | `-ContinueStmt 0x11f928600 <col:28>     |   `-BreakStmt 0x11f928640 <line:9:4>     |-IfStmt 0x12800a230 <line:12:3, line:24:3>     | |-RecoveryExpr 0x11f928728 <line:12:7> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12800a210 <line:13:3, line:24:3>     |   |-IfStmt 0x12800a1b0 <line:14:4, line:21:5> has_else     |   | |-BinaryOperator 0x12800a040 <line:14:8, col:29> 'int' contains-errors '&&'     |   | | |-RecoveryExpr 0x11f9287d8 <col:8> '<dependent type>' contains-errors lvalue     |   | | `-BinaryOperator 0x12800a020 <col:23, col:29> 'int' contains-errors '>'     |   | |   |-RecoveryExpr 0x12800a000 <col:23> '<dependent type>' contains-errors lvalue     |   | |   `-IntegerLiteral 0x11f928778 <col:29> 'int' 30     |   | |-CompoundStmt 0x12800a168 <line:15:4, line:19:4>     |   | `-NullStmt 0x12800a1a8 <line:21:5>     |   `-ReturnStmt 0x12800a200 <line:23:4>     `-IfStmt 0x12800a4f0 <line:25:3, line:34:3> has_else       |-RecoveryExpr 0x12800a270 <line:25:7, col:28> '_Bool' contains-errors       |-CompoundStmt 0x12800a4b0 <line:26:3, line:30:3>       `-CompoundStmt 0x12800a4e0 <line:32:3, line:34:3> ","20274":"`-FunctionDecl 0x120941ab8  line:1:1 invalid equal_h 'int (const struct ecc_modulo *, const int *, const int *, const int *, const int *, int *)'   |-ParmVarDecl 0x120928648 <col:10, col:35> col:35 used p 'const struct ecc_modulo *'   |-ParmVarDecl 0x1209286e0 <line:2:3, col:20> col:20 invalid x1 'const int *'   |-ParmVarDecl 0x120928760 <col:24, col:41> col:41 invalid z1 'const int *'   |-ParmVarDecl 0x120941800 <line:3:3, col:20> col:20 invalid x2 'const int *'   |-ParmVarDecl 0x120941880 <col:24, col:41> col:41 invalid z2 'const int *'   |-ParmVarDecl 0x120941938 <line:4:3, col:14> col:14 invalid scratch 'int *'   `-CompoundStmt 0x120943248 <line:5:1, line:21:1>     |-CallExpr 0x120941e28 <line:9:3, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x120941cf0 <col:3> 'int ()' Function 0x120941c38 'ecc_mod_mul' 'int ()'     | |-DeclRefExpr 0x120941d10 <col:16> 'const struct ecc_modulo *' lvalue ParmVar 0x120928648 'p' 'const struct ecc_modulo *'     | |-RecoveryExpr 0x120941de8 <col:19> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x120941d48 <col:23> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x120941d68 <col:27> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x120941e08 <col:31> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1209423e8 <line:10:3, line:11:37>     | |-BinaryOperator 0x120942118 <line:10:7, col:38> 'int' contains-errors '>='     | | |-CallExpr 0x1209420e0 <col:7, col:33> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x120941f50 <col:7> 'int ()' Function 0x120941e98 'mpn_cmp' 'int ()'     | | | |-RecoveryExpr 0x1209420c0 <col:16> '<dependent type>' contains-errors lvalue     | | | |-RecoveryExpr 0x120941fc0 <col:20, col:23> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x120941f88 <col:20> 'const struct ecc_modulo *' lvalue ParmVar 0x120928648 'p' 'const struct ecc_modulo *'     | | | `-RecoveryExpr 0x120942020 <col:26, col:29> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x120941fe8 <col:26> 'const struct ecc_modulo *' lvalue ParmVar 0x120928648 'p' 'const struct ecc_modulo *'     | | `-IntegerLiteral 0x120942080 <col:38> 'int' 0     | `-CallExpr 0x1209423a8 <line:11:5, col:37> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x120942218 <col:5> 'int ()' Function 0x120942160 'mpn_sub_n' 'int ()'     |   |-RecoveryExpr 0x120942368 <col:16> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x120942388 <col:20> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x1209422a0 <col:24, col:27> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x120942268 <col:24> 'const struct ecc_modulo *' lvalue ParmVar 0x120928648 'p' 'const struct ecc_modulo *'     |   `-RecoveryExpr 0x120942300 <col:30, col:33> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1209422c8 <col:30> 'const struct ecc_modulo *' lvalue ParmVar 0x120928648 'p' 'const struct ecc_modulo *'     `-CallExpr 0x120942540 <line:13:3, col:33> '<dependent type>' contains-errors       |-DeclRefExpr 0x120942408 <col:3> 'int ()' Function 0x120941c38 'ecc_mod_mul' 'int ()'       |-DeclRefExpr 0x120942428 <col:16> 'const struct ecc_modulo *' lvalue ParmVar 0x120928648 'p' 'const struct ecc_modulo *'       |-RecoveryExpr 0x120942500 <col:19> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x120942460 <col:23> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x120942480 <col:27> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x120942520 <col:31> '<dependent type>' contains-errors lvalue ","20915":"`-FunctionDecl 0x13b00df18  line:1:1 invalid crm_send_remote_msg 'int (void *, int *, int)'   |-ParmVarDecl 0x13b00dcd8 <col:21, col:27> col:27 used session 'void *'   |-ParmVarDecl 0x13b00dda8 <col:36, col:46> col:46 invalid msg 'int *'   |-ParmVarDecl 0x13b00de28 <col:51, col:60> col:60 invalid encrypted 'int'   `-CompoundStmt 0x13b027a20 <line:2:1, line:12:1>     `-IfStmt 0x13b0279f0 <line:3:5, line:11:5> has_else       |-RecoveryExpr 0x13b00dfd8 <line:3:9> '<dependent type>' contains-errors lvalue       |-CompoundStmt 0x13b00e258 <col:20, line:9:5>       | `-CallExpr 0x13b00e230 <line:7:9, col:38> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x13b00e150 <col:9> 'int ()' Function 0x13b00e098 'CRM_ASSERT' 'int ()'       |   `-BinaryOperator 0x13b00e210 <col:20, col:33> 'int' contains-errors '=='       |     |-RecoveryExpr 0x13b00e170 <col:20> '<dependent type>' contains-errors lvalue       |     `-RecoveryExpr 0x13b00e1f0 <col:33> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x13b0279d8 <line:9:12, line:11:5>         `-CallExpr 0x13b0279a8 <line:10:9, col:57> '<dependent type>' contains-errors           |-DeclRefExpr 0x13b00e350 <col:9> 'int ()' Function 0x13b00e298 'cib_send_plaintext' 'int ()'           |-CallExpr 0x13b027948 <col:28, col:51> 'int'           | |-ImplicitCastExpr 0x13b027930 <col:28> 'int (*)()' <FunctionToPointerDecay>           | | `-DeclRefExpr 0x13b0278b8 <col:28> 'int ()' Function 0x13b027800 'GPOINTER_TO_INT' 'int ()'           | `-ImplicitCastExpr 0x13b027970 <col:44> 'void *' <LValueToRValue>           |   `-DeclRefExpr 0x13b0278d8 <col:44> 'void *' lvalue ParmVar 0x13b00dcd8 'session' 'void *'           `-RecoveryExpr 0x13b027988 <col:54> '<dependent type>' contains-errors lvalue ","20566":"`-FunctionDecl 0x15800e358  line:1:12 usb_dev_resume 'int (struct device *)' static   |-ParmVarDecl 0x15800e248 <col:27, col:42> col:42 used dev 'struct device *'   `-CompoundStmt 0x158026868 <line:2:1, line:4:1>     `-ReturnStmt 0x158026858 <line:3:2, col:36>       `-CallExpr 0x158026828 <col:9, col:36> '<dependent type>' contains-errors         |-DeclRefExpr 0x158026780 <col:9> 'int ()' Function 0x1580266c8 'usb_resume' 'int ()'         |-DeclRefExpr 0x1580267a0 <col:20> 'struct device *' lvalue ParmVar 0x15800e248 'dev' 'struct device *'         `-RecoveryExpr 0x158026808 <col:25> '<dependent type>' contains-errors lvalue ","20995":"`-FunctionDecl 0x1410eca88  line:1:14 invalid Eval 'int (int *, int *)'   |-ParmVarDecl 0x1410ec928 <col:19, col:34> col:34 referenced invalid context 'int *'   |-ParmVarDecl 0x1410ec9a8 <col:43, col:55> col:55 invalid node 'int *'   `-CompoundStmt 0x1411069f0 <col:61, line:34:1>     |-ImplicitCastExpr 0x1410ecb88 <line:2:3> '<dependent type>' contains-errors <LValueToRValue>     | `-RecoveryExpr 0x1410ecb60 <col:3> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1410ecb40 <col:3> 'int *' lvalue ParmVar 0x1410ec928 'context' 'int *'     |-CallExpr 0x1410ecd60 <col:13, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1410ecd00 <col:13> 'int ()' Function 0x1410ecc48 'op_context' 'int ()'     | |-RecoveryExpr 0x1410ecd20 <col:24> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1410ecd40 <col:33> '<dependent type>' contains-errors lvalue     `-SwitchStmt 0x141106268 <line:4:5, line:32:5>       |-ImplicitCastExpr 0x141106250 <line:4:13, col:32> '<dependent type>' contains-errors <LValueToRValue>       | `-CXXDependentScopeMemberExpr 0x141106208 <col:13, col:32> '<dependent type>' contains-errors lvalue ->type       |   `-RecoveryExpr 0x1411061e0 <col:13, col:24> '<dependent type>' contains-errors lvalue       |     `-DeclRefExpr 0x1410ecd90 <col:13> 'int ()' Function 0x1410ecc48 'op_context' 'int ()'       `-CompoundStmt 0x1411069a8 <col:38, line:32:5>         |-BreakStmt 0x1411062c0 <line:7:9>         |-BreakStmt 0x141106408 <line:11:9>         |-BreakStmt 0x141106550 <line:14:9>         |-BreakStmt 0x141106618 <line:18:9>         |-BreakStmt 0x1411066e0 <line:22:9>         |-BreakStmt 0x1411067a8 <line:26:9>         `-DefaultStmt 0x141106988 <line:27:7, line:30:53>           `-CallExpr 0x141106950 <line:28:9, line:30:53> '<dependent type>' contains-errors             |-CXXDependentScopeMemberExpr 0x1411067f8 <line:28:9, col:18> '<dependent type>' contains-errors lvalue ->ReportError             | `-RecoveryExpr 0x1411067d0 <col:9> '<dependent type>' contains-errors lvalue             |   `-DeclRefExpr 0x1411067b0 <col:9> 'int *' lvalue ParmVar 0x1410ec928 'context' 'int *'             |-RecoveryExpr 0x141106840 <col:30> '<dependent type>' contains-errors lvalue             |-StringLiteral 0x1411068a0 <line:29:30> 'char[4]' lvalue \"STR\"             `-CXXDependentScopeMemberExpr 0x141106908 <line:30:30, col:49> '<dependent type>' contains-errors lvalue ->type               `-RecoveryExpr 0x1411068e0 <col:30, col:41> '<dependent type>' contains-errors lvalue                 `-DeclRefExpr 0x1411068c0 <col:30> 'int ()' Function 0x1410ecc48 'op_context' 'int ()' ","21160":"`-FunctionDecl 0x11e8087d8  line:1:5 invalid tcf_classify 'int (struct sk_buff *, const struct tcf_block *, const struct tcf_proto *, struct tcf_result *, int)'   |-ParmVarDecl 0x11e128648 <col:18, col:34> col:34 used skb 'struct sk_buff *'   |-ParmVarDecl 0x11e808228 <line:2:4, col:28> col:28 used block 'const struct tcf_block *'   |-ParmVarDecl 0x11e8083f8 <line:3:4, col:28> col:28 used tp 'const struct tcf_proto *'   |-ParmVarDecl 0x11e8085c8 <line:4:4, col:23> col:23 used res 'struct tcf_result *'   |-ParmVarDecl 0x11e808660 <col:28, col:33> col:33 invalid compat_mode 'int'   `-CompoundStmt 0x11f0089d0 <line:5:1, line:55:1>     |-DeclStmt 0x11e8089d8 <line:13:2, col:38>     | `-VarDecl 0x11e808938 <col:2, col:36> col:26 used orig_tp 'const struct tcf_proto *' cinit     |   `-ImplicitCastExpr 0x11e8089c0 <col:36> 'const struct tcf_proto *' <LValueToRValue>     |     `-DeclRefExpr 0x11e8089a0 <col:36> 'const struct tcf_proto *' lvalue ParmVar 0x11e8083f8 'tp' 'const struct tcf_proto *'     |-DeclStmt 0x11e808bd8 <line:14:2, col:24>     | |-RecordDecl 0x11e8089f0 <col:2, col:9> col:9 struct tc_skb_ext     | `-VarDecl 0x11e808b58 <col:2, col:21> col:21 used ext 'struct tc_skb_ext *'     |-DeclStmt 0x11e808c70 <line:15:2, col:9>     | `-VarDecl 0x11e808c08 <col:2, col:6> col:6 used ret 'int'     |-IfStmt 0x11e141100 <line:17:2, line:33:2>     | |-ImplicitCastExpr 0x11e808ca8 <line:17:6> 'const struct tcf_block *' <LValueToRValue>     | | `-DeclRefExpr 0x11e808c88 <col:6> 'const struct tcf_block *' lvalue ParmVar 0x11e808228 'block' 'const struct tcf_block *'     | `-CompoundStmt 0x11e1410e0 <col:13, line:33:2>     |   |-BinaryOperator 0x11e808f38 <line:18:3, col:37> 'struct tc_skb_ext *' contains-errors '='     |   | |-DeclRefExpr 0x11e808cc0 <col:3> 'struct tc_skb_ext *' lvalue Var 0x11e808b58 'ext' 'struct tc_skb_ext *'     |   | `-CallExpr 0x11e808f08 <col:9, col:37> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x11e808e40 <col:9> 'int ()' Function 0x11e808d88 'skb_ext_find' 'int ()'     |   |   |-DeclRefExpr 0x11e808e60 <col:22> 'struct sk_buff *' lvalue ParmVar 0x11e128648 'skb' 'struct sk_buff *'     |   |   `-RecoveryExpr 0x11e808ee8 <col:27> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x11e1410c0 <line:20:3, line:32:3>     |     |-BinaryOperator 0x11e808fd8 <line:20:7, col:19> 'int' contains-errors '&&'     |     | |-DeclRefExpr 0x11e808f58 <col:7> 'struct tc_skb_ext *' lvalue Var 0x11e808b58 'ext' 'struct tc_skb_ext *'     |     | `-RecoveryExpr 0x11e808fb0 <col:14, col:19> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x11e808f78 <col:14> 'struct tc_skb_ext *' lvalue Var 0x11e808b58 'ext' 'struct tc_skb_ext *'     |     `-CompoundStmt 0x11e141088 <col:26, line:32:3>     |       |-DeclStmt 0x11e8091e8 <line:21:4, col:28>     |       | |-RecordDecl 0x11e808ff8 <col:4, col:11> col:11 struct tcf_chain     |       | `-VarDecl 0x11e809168 <col:4, col:22> col:22 used fchain 'struct tcf_chain *'     |       |-BinaryOperator 0x11e140bd0 <line:23:4, col:51> 'struct tcf_chain *' contains-errors '='     |       | |-DeclRefExpr 0x11e140a00 <col:4> 'struct tcf_chain *' lvalue Var 0x11e809168 'fchain' 'struct tcf_chain *'     |       | `-CallExpr 0x11e140ba0 <col:13, col:51> '<dependent type>' contains-errors     |       |   |-DeclRefExpr 0x11e140b00 <col:13> 'int ()' Function 0x11e140a48 'tcf_chain_lookup_rcu' 'int ()'     |       |   |-DeclRefExpr 0x11e140b20 <col:34> 'const struct tcf_block *' lvalue ParmVar 0x11e808228 'block' 'const struct tcf_block *'     |       |   `-RecoveryExpr 0x11e140b78 <col:41, col:46> '<dependent type>' contains-errors lvalue     |       |     `-DeclRefExpr 0x11e140b40 <col:41> 'struct tc_skb_ext *' lvalue Var 0x11e808b58 'ext' 'struct tc_skb_ext *'     |       |-IfStmt 0x11e140c88 <line:24:4, line:25:12>     |       | |-UnaryOperator 0x11e140c28 <line:24:8, col:9> 'int' prefix '!' cannot overflow     |       | | `-ImplicitCastExpr 0x11e140c10 <col:9> 'struct tcf_chain *' <LValueToRValue>     |       | |   `-DeclRefExpr 0x11e140bf0 <col:9> 'struct tcf_chain *' lvalue Var 0x11e809168 'fchain' 'struct tcf_chain *'     |       | `-ReturnStmt 0x11e140c78 <line:25:5, col:12>     |       |   `-RecoveryExpr 0x11e140c58 <col:12> '<dependent type>' contains-errors lvalue     |       |-CallExpr 0x11e140e30 <line:28:4, col:31> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x11e140d88 <col:4> 'int ()' Function 0x11e140cd0 'skb_ext_del' 'int ()'     |       | |-DeclRefExpr 0x11e140da8 <col:16> 'struct sk_buff *' lvalue ParmVar 0x11e128648 'skb' 'struct sk_buff *'     |       | `-RecoveryExpr 0x11e140e10 <col:21> '<dependent type>' contains-errors lvalue     |       `-BinaryOperator 0x11e141008 <line:30:4, col:48> 'const struct tcf_proto *' contains-errors '='     |         |-DeclRefExpr 0x11e140e60 <col:4> 'const struct tcf_proto *' lvalue ParmVar 0x11e8083f8 'tp' 'const struct tcf_proto *'     |         `-CallExpr 0x11e140fe0 <col:9, col:48> '<dependent type>' contains-errors     |           |-DeclRefExpr 0x11e140f60 <col:9> 'int ()' Function 0x11e140ea8 'rcu_dereference_bh' 'int ()'     |           `-RecoveryExpr 0x11e140fb8 <col:28, col:36> '<dependent type>' contains-errors lvalue     |             `-DeclRefExpr 0x11e140f80 <col:28> 'struct tcf_chain *' lvalue Var 0x11e809168 'fchain' 'struct tcf_chain *'     |-BinaryOperator 0x11e141408 <line:35:2, line:36:29> 'int' contains-errors '='     | |-DeclRefExpr 0x11e141120 <line:35:2> 'int' lvalue Var 0x11e808c08 'ret' 'int'     | `-CallExpr 0x11e1413b8 <col:8, line:36:29> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x11e141220 <line:35:8> 'int ()' Function 0x11e141168 '__tcf_classify' 'int ()'     |   |-DeclRefExpr 0x11e141240 <col:23> 'struct sk_buff *' lvalue ParmVar 0x11e128648 'skb' 'struct sk_buff *'     |   |-DeclRefExpr 0x11e141260 <col:28> 'const struct tcf_proto *' lvalue ParmVar 0x11e8083f8 'tp' 'const struct tcf_proto *'     |   |-DeclRefExpr 0x11e141280 <col:32> 'const struct tcf_proto *' lvalue Var 0x11e808938 'orig_tp' 'const struct tcf_proto *'     |   |-DeclRefExpr 0x11e1412a0 <col:41> 'struct tcf_result *' lvalue ParmVar 0x11e8085c8 'res' 'struct tcf_result *'     |   |-RecoveryExpr 0x11e1412c0 <col:46> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x11e1413a0 <line:36:9, col:10> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x11e141380 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x11f008968 <line:39:2, line:51:2>     | |-BinaryOperator 0x11e141518 <line:39:6, col:30> 'int' contains-errors '&&'     | | |-BinaryOperator 0x11e1414d8 <col:6, col:13> 'int' contains-errors '=='     | | | |-DeclRefExpr 0x11e141428 <col:6> 'int' lvalue Var 0x11e808c08 'ret' 'int'     | | | `-RecoveryExpr 0x11e1414b8 <col:13> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x11e1414f8 <col:30> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x11f008920 <col:51, line:51:2>     |   |-DeclStmt 0x11e1418e8 <line:40:3, col:40>     |   | |-RecordDecl 0x11e141538 <col:3, col:10> col:10 struct tc_skb_cb     |   | `-VarDecl 0x11e1416a8 <col:3, col:39> col:21 used cb 'struct tc_skb_cb *' cinit     |   |   `-ImplicitCastExpr 0x11e1418b8 <col:26, col:39> 'struct tc_skb_cb *' <IntegralToPointer>     |   |     `-CallExpr 0x11e141878 <col:26, col:39> 'int'     |   |       |-ImplicitCastExpr 0x11e141860 <col:26> 'int (*)()' <FunctionToPointerDecay>     |   |       | `-DeclRefExpr 0x11e1417f0 <col:26> 'int ()' Function 0x11e141738 'tc_skb_cb' 'int ()'     |   |       `-ImplicitCastExpr 0x11e1418a0 <col:36> 'struct sk_buff *' <LValueToRValue>     |   |         `-DeclRefExpr 0x11e141810 <col:36> 'struct sk_buff *' lvalue ParmVar 0x11e128648 'skb' 'struct sk_buff *'     |   |-BinaryOperator 0x11f0082b0 <line:42:3, col:29> 'struct tc_skb_ext *' '='     |   | |-DeclRefExpr 0x11e141900 <col:3> 'struct tc_skb_ext *' lvalue Var 0x11e808b58 'ext' 'struct tc_skb_ext *'     |   | `-ImplicitCastExpr 0x11f008298 <col:9, col:29> 'struct tc_skb_ext *' <IntegralToPointer>     |   |   `-CallExpr 0x11f008258 <col:9, col:29> 'int'     |   |     |-ImplicitCastExpr 0x11f008240 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x11f008200 <col:9> 'int ()' Function 0x11e141948 'tc_skb_ext_alloc' 'int ()'     |   |     `-ImplicitCastExpr 0x11f008280 <col:26> 'struct sk_buff *' <LValueToRValue>     |   |       `-DeclRefExpr 0x11f008220 <col:26> 'struct sk_buff *' lvalue ParmVar 0x11e128648 'skb' 'struct sk_buff *'     |   |-BinaryOperator 0x11f008580 <line:46:3, col:18> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x11f0084f8 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x11f0084c0 <col:3> 'struct tc_skb_ext *' lvalue Var 0x11e808b58 'ext' 'struct tc_skb_ext *'     |   | `-RecoveryExpr 0x11f008558 <col:14, col:18> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x11f008520 <col:14> 'struct tc_skb_cb *' lvalue Var 0x11e1416a8 'cb' 'struct tc_skb_cb *'     |   |-BinaryOperator 0x11f008660 <line:47:3, col:22> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x11f0085d8 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x11f0085a0 <col:3> 'struct tc_skb_ext *' lvalue Var 0x11e808b58 'ext' 'struct tc_skb_ext *'     |   | `-RecoveryExpr 0x11f008638 <col:18, col:22> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x11f008600 <col:18> 'struct tc_skb_cb *' lvalue Var 0x11e1416a8 'cb' 'struct tc_skb_cb *'     |   |-BinaryOperator 0x11f008740 <line:48:3, col:27> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x11f0086b8 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x11f008680 <col:3> 'struct tc_skb_ext *' lvalue Var 0x11e808b58 'ext' 'struct tc_skb_ext *'     |   | `-RecoveryExpr 0x11f008718 <col:23, col:27> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x11f0086e0 <col:23> 'struct tc_skb_cb *' lvalue Var 0x11e1416a8 'cb' 'struct tc_skb_cb *'     |   |-BinaryOperator 0x11f008820 <line:49:3, col:27> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x11f008798 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x11f008760 <col:3> 'struct tc_skb_ext *' lvalue Var 0x11e808b58 'ext' 'struct tc_skb_ext *'     |   | `-RecoveryExpr 0x11f0087f8 <col:23, col:27> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x11f0087c0 <col:23> 'struct tc_skb_cb *' lvalue Var 0x11e1416a8 'cb' 'struct tc_skb_cb *'     |   `-BinaryOperator 0x11f008900 <line:50:3, col:19> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x11f008878 <col:3, col:8> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x11f008840 <col:3> 'struct tc_skb_ext *' lvalue Var 0x11e808b58 'ext' 'struct tc_skb_ext *'     |     `-RecoveryExpr 0x11f0088d8 <col:15, col:19> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x11f0088a0 <col:15> 'struct tc_skb_cb *' lvalue Var 0x11e1416a8 'cb' 'struct tc_skb_cb *'     `-ReturnStmt 0x11f0089c0 <line:53:2, col:9>       `-ImplicitCastExpr 0x11f0089a8 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x11f008988 <col:9> 'int' lvalue Var 0x11e808c08 'ret' 'int' ","21078":"`-FunctionDecl 0x145808538  line:1:1 invalid bgp_attr_aggregator 'int (struct peer *, int, struct attr *, char, char *)'   |-ParmVarDecl 0x145128648 <col:22, col:35> col:35 used peer 'struct peer *'   |-ParmVarDecl 0x1451286e0 <col:41, col:52> col:52 invalid length 'int'   |-ParmVarDecl 0x1458082c8 <line:2:8, col:21> col:21 used attr 'struct attr *'   |-ParmVarDecl 0x145808340 <col:27, col:34> col:34 used flag 'char'   |-ParmVarDecl 0x1458083c0 <col:40, col:48> col:48 used startp 'char *'   `-CompoundStmt 0x147009d00 <line:3:1, line:37:1>     |-DeclStmt 0x1458086a8 <line:4:3, col:20>     | `-VarDecl 0x145808620 <col:3, col:19> col:7 used wantedlen 'int' cinit     |   `-IntegerLiteral 0x145808688 <col:19> 'int' 6     |-DeclStmt 0x145808ae8 <line:5:3, col:55>     | |-RecordDecl 0x1458086c0 <col:3, col:10> col:10 struct attr_extra     | `-VarDecl 0x145808828 <col:3, col:54> col:22 used attre 'struct attr_extra *' cinit     |   `-ImplicitCastExpr 0x145808ab8 <col:30, col:54> 'struct attr_extra *' <IntegralToPointer>     |     `-CallExpr 0x145808a78 <col:30, col:54> 'int'     |       |-ImplicitCastExpr 0x145808a60 <col:30> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x1458089f0 <col:30> 'int ()' Function 0x145808938 'bgp_attr_extra_get' 'int ()'     |       `-ImplicitCastExpr 0x145808aa0 <col:50> 'struct attr *' <LValueToRValue>     |         `-DeclRefExpr 0x145808a10 <col:50> 'struct attr *' lvalue ParmVar 0x1458082c8 'attr' 'struct attr *'     |-IfStmt 0x145809198 <line:10:3, line:13:45>     | |-CallExpr 0x145808ea8 <line:10:7, col:61> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x145808dd8 <col:7> 'int ()' Function 0x145808d20 'bgp_attr_flag_invalid' 'int ()'     | | |-DeclRefExpr 0x145808df8 <col:30> 'struct peer *' lvalue ParmVar 0x145128648 'peer' 'struct peer *'     | | |-RecoveryExpr 0x145808e88 <col:36> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x145808e30 <col:57> 'char' lvalue ParmVar 0x145808340 'flag' 'char'     | `-ReturnStmt 0x145809188 <line:11:5, line:13:45>     |   `-CallExpr 0x145809138 <line:11:12, line:13:45> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x145808fc0 <line:11:12> 'int ()' Function 0x145808f08 'bgp_attr_malformed' 'int ()'     |     |-DeclRefExpr 0x145808fe0 <col:32> 'struct peer *' lvalue ParmVar 0x145128648 'peer' 'struct peer *'     |     |-RecoveryExpr 0x1458090d8 <col:38> '<dependent type>' contains-errors lvalue     |     |-DeclRefExpr 0x145809018 <col:59> 'char' lvalue ParmVar 0x145808340 'flag' 'char'     |     |-RecoveryExpr 0x1458090f8 <line:12:32> '<dependent type>' contains-errors lvalue     |     |-DeclRefExpr 0x145809050 <line:13:32> 'char *' lvalue ParmVar 0x1458083c0 'startp' 'char *'     |     `-RecoveryExpr 0x145809118 <col:40> '<dependent type>' contains-errors lvalue     |-IfStmt 0x147009138 <line:16:3, line:17:17>     | |-CallExpr 0x1470090a8 <line:16:7, col:46> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1458091b8 <col:7> 'int ()' Function 0x145808b48 'CHECK_FLAG' 'int ()'     | | |-RecoveryExpr 0x147009018 <col:19, col:25> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x1458091d8 <col:19> 'struct peer *' lvalue ParmVar 0x145128648 'peer' 'struct peer *'     | | `-RecoveryExpr 0x147009088 <col:30> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x147009118 <line:17:5, col:17> 'int' '='     |   |-DeclRefExpr 0x1470090d8 <col:5> 'int' lvalue Var 0x145808620 'wantedlen' 'int'     |   `-IntegerLiteral 0x1470090f8 <col:17> 'int' 8     |-IfStmt 0x147009450 <line:19:3, line:25:5>     | |-BinaryOperator 0x147009198 <line:19:7, col:17> 'int' contains-errors '!='     | | |-RecoveryExpr 0x147009158 <col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x147009178 <col:17> 'int' lvalue Var 0x145808620 'wantedlen' 'int'     | `-CompoundStmt 0x147009440 <line:20:5, line:25:5>     |-IfStmt 0x147009920 <line:27:3, line:30:51> has_else     | |-RecoveryExpr 0x1470094f0 <line:27:8, col:48> '_Bool' contains-errors     | |-BinaryOperator 0x1470096f8 <line:28:5, col:51> '<dependent type>' contains-errors '='     | | |-RecoveryExpr 0x147009548 <col:5, col:12> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x147009510 <col:5> 'struct attr_extra *' lvalue Var 0x145808828 'attre' 'struct attr_extra *'     | | `-CallExpr 0x1470096d0 <col:28, col:51> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x147009650 <col:28> 'int ()' Function 0x147009598 'stream_getl' 'int ()'     | |   `-RecoveryExpr 0x1470096a8 <col:41, col:47> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x147009670 <col:41> 'struct peer *' lvalue ParmVar 0x145128648 'peer' 'struct peer *'     | `-BinaryOperator 0x147009900 <line:30:5, col:51> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x147009750 <col:5, col:12> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x147009718 <col:5> 'struct attr_extra *' lvalue Var 0x145808828 'attre' 'struct attr_extra *'     |   `-CallExpr 0x1470098d8 <col:28, col:51> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x147009858 <col:28> 'int ()' Function 0x1470097a0 'stream_getw' 'int ()'     |     `-RecoveryExpr 0x1470098b0 <col:41, col:47> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x147009878 <col:41> 'struct peer *' lvalue ParmVar 0x145128648 'peer' 'struct peer *'     `-BinaryOperator 0x147009b80 <line:31:3, col:62> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x1470099b0 <col:3, col:26> '<dependent type>' contains-errors lvalue .s_addr       | `-RecoveryExpr 0x147009988 <col:3, col:10> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x147009950 <col:3> 'struct attr_extra *' lvalue Var 0x145808828 'attre' 'struct attr_extra *'       `-CallExpr 0x147009b58 <col:35, col:62> '<dependent type>' contains-errors         |-DeclRefExpr 0x147009ad8 <col:35> 'int ()' Function 0x147009a20 'stream_get_ipv4' 'int ()'         `-RecoveryExpr 0x147009b30 <col:52, col:58> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x147009af8 <col:52> 'struct peer *' lvalue ParmVar 0x145128648 'peer' 'struct peer *' ","20994":"`-FunctionDecl 0x1371283a8  line:1:1 invalid gs_grab_get_mouse 'int (int *, int *, int *, int)'   |-ParmVarDecl 0x137128128 <col:20, col:31> col:31 referenced invalid grab 'int *'   |-ParmVarDecl 0x1371281a8 <line:2:20, col:31> col:31 invalid window 'int *'   |-ParmVarDecl 0x137128228 <line:3:20, col:31> col:31 invalid screen 'int *'   |-ParmVarDecl 0x1371282a8 <line:4:20, col:31> col:31 invalid hide_cursor 'int'   `-CompoundStmt 0x137142218 <line:5:1, line:28:1>     |-CallExpr 0x137128700 <line:9:9, col:52> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1371285e0 <col:9> 'int ()' Function 0x137128528 'g_return_val_if_fail' 'int ()'     | |-BinaryOperator 0x1371286c0 <col:31, col:41> 'int' contains-errors '!='     | | |-RecoveryExpr 0x137128600 <col:31> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1371286a0 <col:41> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1371286e0 <col:47> '<dependent type>' contains-errors lvalue     |-CallExpr 0x137141860 <line:10:9, col:52> '<dependent type>' contains-errors     | |-DeclRefExpr 0x137128730 <col:9> 'int ()' Function 0x137128528 'g_return_val_if_fail' 'int ()'     | |-BinaryOperator 0x137141820 <col:31, col:41> 'int' contains-errors '!='     | | |-RecoveryExpr 0x137128750 <col:31> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x137141800 <col:41> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x137141840 <col:47> '<dependent type>' contains-errors lvalue     `-IfStmt 0x1371420f8 <line:19:9, line:23:9>       |-RecoveryExpr 0x137141d68 <line:19:13, col:23> '_Bool' contains-errors       `-CompoundStmt 0x1371420d0 <col:41, line:23:9>         |-BinaryOperator 0x137141e80 <line:20:17, col:49> '<dependent type>' contains-errors '='         | |-CXXDependentScopeMemberExpr 0x137141e18 <col:17, col:29> '<dependent type>' contains-errors lvalue ->mouse_grab_window         | | `-CXXDependentScopeMemberExpr 0x137141dd0 <col:17, col:23> '<dependent type>' contains-errors lvalue ->priv         | |   `-RecoveryExpr 0x137141da8 <col:17> '<dependent type>' contains-errors lvalue         | |     `-DeclRefExpr 0x137141d88 <col:17> 'int *' lvalue ParmVar 0x137128128 'grab' 'int *'         | `-RecoveryExpr 0x137141e60 <col:49> '<dependent type>' contains-errors lvalue         |-BinaryOperator 0x137141f98 <line:21:17, col:49> '<dependent type>' contains-errors '='         | |-CXXDependentScopeMemberExpr 0x137141f30 <col:17, col:29> '<dependent type>' contains-errors lvalue ->mouse_grab_screen         | | `-CXXDependentScopeMemberExpr 0x137141ee8 <col:17, col:23> '<dependent type>' contains-errors lvalue ->priv         | |   `-RecoveryExpr 0x137141ec0 <col:17> '<dependent type>' contains-errors lvalue         | |     `-DeclRefExpr 0x137141ea0 <col:17> 'int *' lvalue ParmVar 0x137128128 'grab' 'int *'         | `-RecoveryExpr 0x137141f78 <col:49> '<dependent type>' contains-errors lvalue         `-BinaryOperator 0x1371420b0 <line:22:17, col:49> '<dependent type>' contains-errors '='           |-CXXDependentScopeMemberExpr 0x137142048 <col:17, col:29> '<dependent type>' contains-errors lvalue ->mouse_hide_cursor           | `-CXXDependentScopeMemberExpr 0x137142000 <col:17, col:23> '<dependent type>' contains-errors lvalue ->priv           |   `-RecoveryExpr 0x137141fd8 <col:17> '<dependent type>' contains-errors lvalue           |     `-DeclRefExpr 0x137141fb8 <col:17> 'int *' lvalue ParmVar 0x137128128 'grab' 'int *'           `-RecoveryExpr 0x137142090 <col:49> '<dependent type>' contains-errors lvalue ","20956":"`-FunctionDecl 0x1311413e8  line:1:12 ax25_bind 'int (struct socket *, struct sockaddr *, int)' static   |-ParmVarDecl 0x131128e48 <col:22, col:37> col:37 used sock 'struct socket *'   |-ParmVarDecl 0x131141228 <col:43, col:60> col:60 used uaddr 'struct sockaddr *'   |-ParmVarDecl 0x1311412a8 <col:67, col:71> col:71 used addr_len 'int'   `-CompoundStmt 0x13280a468 <line:2:1, line:70:1>     |-DeclStmt 0x131141738 <line:3:2, col:28>     | |-RecordDecl 0x1311414f0 <col:2, col:9> col:9 struct sock     | `-VarDecl 0x131141658 <col:2, col:26> col:15 used sk 'struct sock *' cinit     |   `-RecoveryExpr 0x1311416f8 <col:20, col:26> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1311416c0 <col:20> 'struct socket *' lvalue ParmVar 0x131128e48 'sock' 'struct socket *'     |-DeclStmt 0x131141a20 <line:4:2, col:70>     | |-RecordDecl 0x131141750 <col:2, col:9> col:9 struct full_sockaddr_ax25     | `-VarDecl 0x1311418b8 <col:2, col:65> col:29 used addr 'struct full_sockaddr_ax25 *' cinit     |   `-CStyleCastExpr 0x1311419e0 <col:36, col:65> 'struct full_sockaddr_ax25 *' <BitCast>     |     `-ImplicitCastExpr 0x1311419c8 <col:65> 'struct sockaddr *' <LValueToRValue> part_of_explicit_cast     |       `-DeclRefExpr 0x131141920 <col:65> 'struct sockaddr *' lvalue ParmVar 0x131141228 'uaddr' 'struct sockaddr *'     |-DeclStmt 0x131141b50 <line:9:2, col:13>     | `-VarDecl 0x131141ac8 <col:2, col:12> col:6 used err 'int' cinit     |   `-IntegerLiteral 0x131141b30 <col:12> 'int' 0     |-IfStmt 0x131141ec0 <line:11:2, line:16:12>     | |-RecoveryExpr 0x131141cc8 <line:11:6, line:12:50> '_Bool' contains-errors     | `-IfStmt 0x131141ea0 <line:14:3, line:16:12>     |   |-RecoveryExpr 0x131141dd8 <line:14:7, line:15:52> '_Bool' contains-errors     |   `-ReturnStmt 0x131141e90 <line:16:4, col:12>     |     `-UnaryOperator 0x131141e78 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x131141e60 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x131141e40 <col:12> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1311420a8 <line:18:2, line:19:11>     | |-BinaryOperator 0x131141fe0 <line:18:6, col:37> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x131141f40 <col:6, col:21> '<dependent type>' contains-errors lvalue .sax25_family     | | | `-RecoveryExpr 0x131141f18 <col:6, col:12> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x131141ee0 <col:6> 'struct full_sockaddr_ax25 *' lvalue Var 0x1311418b8 'addr' 'struct full_sockaddr_ax25 *'     | | `-RecoveryExpr 0x131141fc0 <col:37> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x131142098 <line:19:3, col:11>     |   `-UnaryOperator 0x131142080 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x131142068 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x131142048 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x132808cb0 <line:22:2, line:30:2> has_else     | |-RecoveryExpr 0x1328089a8 <line:22:6> '_Bool' contains-errors     | |-CompoundStmt 0x132808ac8 <col:12, line:25:2>     | `-CompoundStmt 0x132808ca0 <col:9, line:30:2>     |-CallExpr 0x132808e18 <line:32:2, col:14> 'int' contains-errors     | |-ImplicitCastExpr 0x132808e00 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x132808dc0 <col:2> 'int ()' Function 0x132808d08 'lock_sock' 'int ()'     | `-ImplicitCastExpr 0x132808e40 <col:12> 'struct sock *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x132808de0 <col:12> 'struct sock *' contains-errors lvalue Var 0x131141658 'sk' 'struct sock *'     |-IfStmt 0x1328091b0 <line:35:2, line:38:2>     | |-RecoveryExpr 0x1328090f0 <line:35:6, col:32> '_Bool' contains-errors     | `-CompoundStmt 0x132809198 <col:35, line:38:2>     |   `-GotoStmt 0x132809180 <line:37:3, col:8> 'out' 0x132809130     |-IfStmt 0x132809258 <line:43:2, line:44:8>     | |-RecoveryExpr 0x1328091d0 <line:43:6, col:24> '_Bool' contains-errors     | `-GotoStmt 0x132809240 <line:44:3, col:8> 'done' 0x1328091f0     |-IfStmt 0x132809ef0 <line:46:2, line:57:2> has_else     | |-RecoveryExpr 0x132809480 <line:46:6, col:80> '_Bool' contains-errors     | |-CompoundStmt 0x132809d28 <col:83, line:52:2>     | | `-IfStmt 0x132809d08 <line:47:3, line:51:3>     | |   |-RecoveryExpr 0x132809c98 <line:47:7, line:48:67> '_Bool' contains-errors     | |   `-CompoundStmt 0x132809cf0 <col:73, line:51:3>     | |     `-GotoStmt 0x132809cd8 <line:50:4, col:9> 'out' 0x132809130     | `-CompoundStmt 0x132809ed8 <line:52:9, line:57:2>     |   `-IfStmt 0x132809eb8 <line:53:3, line:56:3>     |     |-RecoveryExpr 0x132809e48 <line:53:7, col:69> '_Bool' contains-errors     |     `-CompoundStmt 0x132809ea0 <col:75, line:56:3>     |       `-GotoStmt 0x132809e88 <line:55:4, col:9> 'out' 0x132809130     |-LabelStmt 0x13280a148 <line:62:1, col:5> 'done'     | `-NullStmt 0x13280a140 <col:5>     |-LabelStmt 0x13280a400 <line:66:1, line:67:17> 'out'     | `-CallExpr 0x13280a3c0 <col:2, col:17> 'int' contains-errors     |   |-ImplicitCastExpr 0x13280a3a8 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x13280a368 <col:2> 'int ()' Function 0x13280a2b0 'release_sock' 'int ()'     |   `-ImplicitCastExpr 0x13280a3e8 <col:15> 'struct sock *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x13280a388 <col:15> 'struct sock *' contains-errors lvalue Var 0x131141658 'sk' 'struct sock *'     `-ReturnStmt 0x13280a458 <line:69:2, col:9>       `-ImplicitCastExpr 0x13280a440 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x13280a420 <col:9> 'int' lvalue Var 0x131141ac8 'err' 'int' ","20974":"`-FunctionDecl 0x14a928190  line:1:6 auth_policy_deinit 'void (void)'   `-CompoundStmt 0x14a9286e0 <line:2:1, line:6:1>     |-IfStmt 0x14a928538 <line:3:2, line:4:34>     | |-BinaryOperator 0x14a928328 <line:3:6, col:21> 'int' contains-errors '!='     | | |-RecoveryExpr 0x14a9282e8 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14a928308 <col:21> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x14a928510 <line:4:3, col:34> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14a928460 <col:3> 'int ()' Function 0x14a9283a8 'http_client_deinit' 'int ()'     |   `-UnaryOperator 0x14a9284f8 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x14a9284d8 <col:23> '<dependent type>' contains-errors lvalue     `-CallExpr 0x14a9286b8 <line:5:2, col:34> '<dependent type>' contains-errors       |-DeclRefExpr 0x14a928638 <col:2> 'int ()' Function 0x14a928580 'i_free' 'int ()'       `-RecoveryExpr 0x14a928698 <col:9> '<dependent type>' contains-errors lvalue ","20369":"`-FunctionDecl 0x130942200  line:1:13 invalid vmxnet_tx_pkt_parse_headers 'int (struct VmxnetTxPkt *)' static   |-ParmVarDecl 0x130929068 <col:41, col:61> col:61 used pkt 'struct VmxnetTxPkt *'   `-CompoundStmt 0x130945b20 <line:2:1, line:78:1>     |-DeclStmt 0x130942530 <line:3:5, col:34>     | |-RecordDecl 0x1309422b0 <col:5, col:12> col:12 struct iovec     | |-VarDecl 0x130942418 <col:5, col:19> col:19 used l2_hdr 'struct iovec *'     | `-VarDecl 0x1309424a8 <col:5, col:28> col:28 used l3_hdr 'struct iovec *'     |-UnaryExprOrTypeTraitExpr 0x1309425a0 <line:4:5, col:12> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x130942580 <col:12> '<dependent type>' contains-errors lvalue     |-UnaryExprOrTypeTraitExpr 0x130942618 <line:5:5, col:12> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x1309425f8 <col:12> '<dependent type>' contains-errors lvalue     |-CallExpr 0x130942818 <line:8:5, col:15> 'int'     | |-ImplicitCastExpr 0x130942800 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x130942790 <col:5> 'int ()' Function 0x1309426d8 'assert' 'int ()'     | `-ImplicitCastExpr 0x130942840 <col:12> 'struct VmxnetTxPkt *' <LValueToRValue>     |   `-DeclRefExpr 0x1309427b0 <col:12> 'struct VmxnetTxPkt *' lvalue ParmVar 0x130929068 'pkt' 'struct VmxnetTxPkt *'     |-IfStmt 0x130942fb0 <line:15:5, line:20:5> has_else     | |-BinaryOperator 0x130942cb8 <line:15:9, col:22> 'int' contains-errors '<'     | | |-RecoveryExpr 0x130942c78 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x130942c98 <col:22> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x130942d78 <col:42, line:18:5>     | | `-BinaryOperator 0x130942d58 <line:16:9, col:27> '<dependent type>' contains-errors '='     | |   |-RecoveryExpr 0x130942d10 <col:9, col:17> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x130942cd8 <col:9> 'struct iovec *' lvalue Var 0x130942418 'l2_hdr' 'struct iovec *'     | |   `-IntegerLiteral 0x130942d38 <col:27> 'int' 0     | `-CompoundStmt 0x130942f98 <line:18:12, line:20:5>     |   `-BinaryOperator 0x130942f78 <line:19:9, col:65> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x130942dc8 <col:9, col:17> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x130942d90 <col:9> 'struct iovec *' lvalue Var 0x130942418 'l2_hdr' 'struct iovec *'     |     `-CallExpr 0x130942f50 <col:27, col:65> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x130942ed0 <col:27> 'int ()' Function 0x130942e18 'eth_get_l2_hdr_length' 'int ()'     |       `-RecoveryExpr 0x130942f28 <col:49, col:57> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x130942ef0 <col:49> 'struct iovec *' lvalue Var 0x130942418 'l2_hdr' 'struct iovec *'     |-SwitchStmt 0x130943200 <line:24:5, line:73:5>     | |-RecoveryExpr 0x1309431d0 <line:24:13> 'int' contains-errors     | `-CompoundStmt 0x130945740 <col:23, line:73:5>     |   |-IfStmt 0x130943758 <line:31:9, line:34:9>     |   | |-RecoveryExpr 0x130943680 <line:31:13, col:49> '_Bool' contains-errors     |   | `-CompoundStmt 0x130943740 <col:52, line:34:9>     |   |   `-BinaryOperator 0x130943720 <line:32:13, col:31> '<dependent type>' contains-errors '='     |   |     |-RecoveryExpr 0x1309436d8 <col:13, col:21> '<dependent type>' contains-errors lvalue     |   |     | `-DeclRefExpr 0x1309436a0 <col:13> 'struct iovec *' lvalue Var 0x1309424a8 'l3_hdr' 'struct iovec *'     |   |     `-IntegerLiteral 0x130943700 <col:31> 'int' 0     |   |-BinaryOperator 0x130943960 <line:36:9, col:58> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x1309437b0 <col:9, col:17> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x130943778 <col:9> 'struct iovec *' lvalue Var 0x1309424a8 'l3_hdr' 'struct iovec *'     |   | `-CallExpr 0x130943938 <col:27, col:58> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x1309438b8 <col:27> 'int ()' Function 0x130943800 'IP_HDR_GET_LEN' 'int ()'     |   |   `-RecoveryExpr 0x130943910 <col:42, col:50> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x1309438d8 <col:42> 'struct iovec *' lvalue Var 0x1309424a8 'l3_hdr' 'struct iovec *'     |   |-BinaryOperator 0x130943b38 <line:37:9, col:65> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x1309439b8 <col:9, col:14> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x130943980 <col:9> 'struct VmxnetTxPkt *' lvalue ParmVar 0x130929068 'pkt' 'struct VmxnetTxPkt *'     |   | `-RecoveryExpr 0x130943b10 <col:24, col:65> '<dependent type>' contains-errors lvalue     |   |   `-ParenExpr 0x130943af0 <col:24, col:62> 'struct ip_header *' contains-errors     |   |     `-CStyleCastExpr 0x130943ac8 <col:25, col:54> 'struct ip_header *' contains-errors <Dependent>     |   |       `-RecoveryExpr 0x130943a18 <col:46, col:54> '<dependent type>' contains-errors lvalue     |   |         `-DeclRefExpr 0x1309439e0 <col:46> 'struct iovec *' lvalue Var 0x1309424a8 'l3_hdr' 'struct iovec *'     |   |-IfStmt 0x130943f10 <line:44:9, line:47:9>     |   | |-RecoveryExpr 0x130943e38 <line:44:13, col:67> '_Bool' contains-errors     |   | `-CompoundStmt 0x130943ef8 <col:70, line:47:9>     |   |   `-BinaryOperator 0x130943ed8 <line:45:13, col:31> '<dependent type>' contains-errors '='     |   |     |-RecoveryExpr 0x130943e90 <col:13, col:21> '<dependent type>' contains-errors lvalue     |   |     | `-DeclRefExpr 0x130943e58 <col:13> 'struct iovec *' lvalue Var 0x1309424a8 'l3_hdr' 'struct iovec *'     |   |     `-IntegerLiteral 0x130943eb8 <col:31> 'int' 0     |   |-BreakStmt 0x130943f30 <line:48:9>     |   |-IfStmt 0x1309452b8 <line:51:9, line:55:9>     |   | |-RecoveryExpr 0x1309441d0 <line:51:13, line:52:63> '_Bool' contains-errors     |   | `-CompoundStmt 0x1309452a0 <col:66, line:55:9>     |   |   `-BinaryOperator 0x130945280 <line:53:13, col:31> '<dependent type>' contains-errors '='     |   |     |-RecoveryExpr 0x130945238 <col:13, col:21> '<dependent type>' contains-errors lvalue     |   |     | `-DeclRefExpr 0x130945200 <col:13> 'struct iovec *' lvalue Var 0x1309424a8 'l3_hdr' 'struct iovec *'     |   |     `-IntegerLiteral 0x130945260 <col:31> 'int' 0     |   |-IfStmt 0x130945640 <line:62:9, line:67:9> has_else     |   | |-RecoveryExpr 0x1309454f8 <line:62:13, col:26> '_Bool' contains-errors     |   | |-CompoundStmt 0x1309455b8 <col:43, line:65:9>     |   | | `-BinaryOperator 0x130945598 <line:63:13, col:31> '<dependent type>' contains-errors '='     |   | |   |-RecoveryExpr 0x130945550 <col:13, col:21> '<dependent type>' contains-errors lvalue     |   | |   | `-DeclRefExpr 0x130945518 <col:13> 'struct iovec *' lvalue Var 0x1309424a8 'l3_hdr' 'struct iovec *'     |   | |   `-IntegerLiteral 0x130945578 <col:31> 'int' 0     |   | `-CompoundStmt 0x130945630 <line:65:16, line:67:9>     |   |-BreakStmt 0x130945670 <line:68:9>     |   |-DefaultStmt 0x130945718 <line:70:5, line:71:27>     |   | `-BinaryOperator 0x1309456f8 <col:9, col:27> '<dependent type>' contains-errors '='     |   |   |-RecoveryExpr 0x1309456b0 <col:9, col:17> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x130945678 <col:9> 'struct iovec *' lvalue Var 0x1309424a8 'l3_hdr' 'struct iovec *'     |   |   `-IntegerLiteral 0x1309456d8 <col:27> 'int' 0     |   `-BreakStmt 0x130945738 <line:72:9>     |-CallExpr 0x1309458d8 <line:75:5, col:40> 'int'     | |-ImplicitCastExpr 0x1309458c0 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x130945880 <col:5> 'int ()' Function 0x1309457c8 'vmxnet_tx_pkt_calculate_hdr_len' 'int ()'     | `-ImplicitCastExpr 0x130945900 <col:37> 'struct VmxnetTxPkt *' <LValueToRValue>     |   `-DeclRefExpr 0x1309458a0 <col:37> 'struct VmxnetTxPkt *' lvalue ParmVar 0x130929068 'pkt' 'struct VmxnetTxPkt *'     `-BinaryOperator 0x130945b00 <line:76:5, col:60> '<dependent type>' contains-errors '='       |-RecoveryExpr 0x130945950 <col:5, col:10> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x130945918 <col:5> 'struct VmxnetTxPkt *' lvalue ParmVar 0x130929068 'pkt' 'struct VmxnetTxPkt *'       `-CallExpr 0x130945ad8 <col:24, col:60> '<dependent type>' contains-errors         |-DeclRefExpr 0x130945a58 <col:24> 'int ()' Function 0x1309459a0 'get_eth_packet_type' 'int ()'         `-RecoveryExpr 0x130945ab0 <col:44, col:52> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x130945a78 <col:44> 'struct iovec *' lvalue Var 0x130942418 'l2_hdr' 'struct iovec *' ","20350":"`-FunctionDecl 0x15002f9a8  col:2 implicit used sprintf 'int (char *, const char *, ...)' extern   |-ParmVarDecl 0x15002faa8 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x15002fb10 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x15002fa50 <<invalid sloc>> Implicit 906   `-FormatAttr 0x15002fb88 <col:2> Implicit printf 2 3 ","20592":"`-FunctionDecl 0x128102df8  line:1:5 invalid ssl3_send_client_certificate 'int (int *)'   |-ParmVarDecl 0x128102d28 <col:34, col:39> col:39 referenced invalid s 'int *'   `-CompoundStmt 0x128120650 <line:2:2, line:73:2>     |-DeclStmt 0x128102f88 <line:5:2, col:7>     | `-VarDecl 0x128102f20 <col:2, col:6> col:6 used i 'int'     |-DeclStmt 0x128103020 <line:6:2, col:17>     | `-VarDecl 0x128102fb8 <col:2, col:16> col:16 used l 'unsigned long'     |-IfStmt 0x12811c698 <line:8:2, line:16:3>     | |-BinaryOperator 0x1281030f8 <line:8:6, col:18> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x128103058 <col:6, col:9> '<dependent type>' contains-errors lvalue ->state     | | | `-RecoveryExpr 0x128103038 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1281030d8 <col:18> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12811c680 <line:9:3, line:16:3>     |   `-IfStmt 0x12811c650 <line:10:3, line:15:13> has_else     |     |-RecoveryExpr 0x12811c420 <line:10:7, line:12:37> '_Bool' contains-errors     |     |-BinaryOperator 0x12811c528 <line:13:4, col:13> '<dependent type>' contains-errors '='     |     | |-CXXDependentScopeMemberExpr 0x12811c488 <col:4, col:7> '<dependent type>' contains-errors lvalue ->state     |     | | `-RecoveryExpr 0x12811c460 <col:4> '<dependent type>' contains-errors lvalue     |     | |   `-DeclRefExpr 0x12811c440 <col:4> 'int *' lvalue ParmVar 0x128102d28 's' 'int *'     |     | `-RecoveryExpr 0x12811c508 <col:13> '<dependent type>' contains-errors lvalue     |     `-BinaryOperator 0x12811c630 <line:15:4, col:13> '<dependent type>' contains-errors '='     |       |-CXXDependentScopeMemberExpr 0x12811c590 <col:4, col:7> '<dependent type>' contains-errors lvalue ->state     |       | `-RecoveryExpr 0x12811c568 <col:4> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x12811c548 <col:4> 'int *' lvalue ParmVar 0x128102d28 's' 'int *'     |       `-RecoveryExpr 0x12811c610 <col:13> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12811ee20 <line:19:2, line:61:3>     | |-BinaryOperator 0x12811c778 <line:19:6, col:18> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x12811c6d8 <col:6, col:9> '<dependent type>' contains-errors lvalue ->state     | | | `-RecoveryExpr 0x12811c6b8 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12811c758 <col:18> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12811ede0 <line:20:3, line:61:3>     |   |-BinaryOperator 0x12811c7d8 <line:22:3, col:5> 'int' '='     |   | |-DeclRefExpr 0x12811c798 <col:3> 'int' lvalue Var 0x128102f20 'i' 'int'     |   | `-IntegerLiteral 0x12811c7b8 <col:5> 'int' 0     |   |-BinaryOperator 0x12811cb10 <line:23:3, col:44> 'int' contains-errors '='     |   | |-DeclRefExpr 0x12811c7f8 <col:3> 'int' lvalue Var 0x128102f20 'i' 'int'     |   | `-CallExpr 0x12811cad8 <col:7, col:44> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x12811c970 <col:7> 'int ()' Function 0x12811c8b8 'ssl_do_client_cert_cb' 'int ()'     |   |   |-RecoveryExpr 0x12811c990 <col:29> '<dependent type>' contains-errors lvalue     |   |   |-UnaryOperator 0x12811ca88 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   | `-RecoveryExpr 0x12811ca68 <col:33> '<dependent type>' contains-errors lvalue     |   |   `-UnaryOperator 0x12811cac0 <col:39, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |     `-RecoveryExpr 0x12811caa0 <col:40> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x12811cd38 <line:24:3, line:28:4>     |   | |-BinaryOperator 0x12811cb88 <line:24:7, col:11> 'int' '<'     |   | | |-ImplicitCastExpr 0x12811cb70 <col:7> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x12811cb30 <col:7> 'int' lvalue Var 0x128102f20 'i' 'int'     |   | | `-IntegerLiteral 0x12811cb50 <col:11> 'int' 0     |   | `-CompoundStmt 0x12811cd18 <line:25:4, line:28:4>     |   |   |-BinaryOperator 0x12811cc90 <line:26:4, col:15> '<dependent type>' contains-errors '='     |   |   | |-CXXDependentScopeMemberExpr 0x12811cbf0 <col:4, col:7> '<dependent type>' contains-errors lvalue ->rwstate     |   |   | | `-RecoveryExpr 0x12811cbc8 <col:4> '<dependent type>' contains-errors lvalue     |   |   | |   `-DeclRefExpr 0x12811cba8 <col:4> 'int *' lvalue ParmVar 0x128102d28 's' 'int *'     |   |   | `-RecoveryExpr 0x12811cc70 <col:15> '<dependent type>' contains-errors lvalue     |   |   `-ReturnStmt 0x12811cd08 <line:27:4, col:13>     |   |     `-ParenExpr 0x12811cce8 <col:10, col:13> 'int'     |   |       `-UnaryOperator 0x12811ccd0 <col:11, col:12> 'int' prefix '-'     |   |         `-IntegerLiteral 0x12811ccb0 <col:12> 'int' 1     |   |-BinaryOperator 0x12811ce40 <line:29:3, col:14> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x12811cda0 <col:3, col:6> '<dependent type>' contains-errors lvalue ->rwstate     |   | | `-RecoveryExpr 0x12811cd78 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x12811cd58 <col:3> 'int *' lvalue ParmVar 0x128102d28 's' 'int *'     |   | `-RecoveryExpr 0x12811ce20 <col:14> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x12811e510 <line:30:3, line:41:4> has_else     |   | |-RecoveryExpr 0x12811cf48 <line:30:7, col:50> '_Bool' contains-errors     |   | |-CompoundStmt 0x12811d2d8 <line:31:4, line:36:4>     |   | | `-IfStmt 0x12811d2b8 <line:33:4, line:35:7>     |   | |   |-RecoveryExpr 0x12811d238 <line:33:9, line:34:31> '_Bool' contains-errors     |   | |   `-BinaryOperator 0x12811d298 <line:35:5, col:7> 'int' '='     |   | |     |-DeclRefExpr 0x12811d258 <col:5> 'int' lvalue Var 0x128102f20 'i' 'int'     |   | |     `-IntegerLiteral 0x12811d278 <col:7> 'int' 0     |   | `-IfStmt 0x12811e4f0 <line:37:8, line:41:4>     |   |   |-BinaryOperator 0x12811d348 <line:37:12, col:17> 'int' '=='     |   |   | |-ImplicitCastExpr 0x12811d330 <col:12> 'int' <LValueToRValue>     |   |   | | `-DeclRefExpr 0x12811d2f0 <col:12> 'int' lvalue Var 0x128102f20 'i' 'int'     |   |   | `-IntegerLiteral 0x12811d310 <col:17> 'int' 1     |   |   `-CompoundStmt 0x12811e4d8 <line:38:4, line:41:4>     |   |     `-BinaryOperator 0x12811d3a8 <line:39:4, col:6> 'int' '='     |   |       |-DeclRefExpr 0x12811d368 <col:4> 'int' lvalue Var 0x128102f20 'i' 'int'     |   |       `-IntegerLiteral 0x12811d388 <col:6> 'int' 0     |   `-IfStmt 0x12811ed30 <line:45:3, line:57:4>     |     |-BinaryOperator 0x12811e7d8 <line:45:7, col:12> 'int' '=='     |     | |-ImplicitCastExpr 0x12811e7c0 <col:7> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x12811e780 <col:7> 'int' lvalue Var 0x128102f20 'i' 'int'     |     | `-IntegerLiteral 0x12811e7a0 <col:12> 'int' 0     |     `-CompoundStmt 0x12811ed18 <line:46:4, line:57:4>     |       `-IfStmt 0x12811ece8 <line:47:4, line:56:5> has_else     |         |-RecoveryExpr 0x12811e860 <line:47:8, col:22> '_Bool' contains-errors     |         |-CompoundStmt 0x12811eb50 <line:48:5, line:52:5>     |         | |-BinaryOperator 0x12811e9c0 <line:49:5, col:25> '<dependent type>' contains-errors '='     |         | | |-CXXDependentScopeMemberExpr 0x12811e958 <col:5, col:16> '<dependent type>' contains-errors lvalue .cert_req     |         | | | `-CXXDependentScopeMemberExpr 0x12811e910 <col:5, col:12> '<dependent type>' contains-errors lvalue ->tmp     |         | | |   `-CXXDependentScopeMemberExpr 0x12811e8c8 <col:5, col:8> '<dependent type>' contains-errors lvalue ->s3     |         | | |     `-RecoveryExpr 0x12811e8a0 <col:5> '<dependent type>' contains-errors lvalue     |         | | |       `-DeclRefExpr 0x12811e880 <col:5> 'int *' lvalue ParmVar 0x128102d28 's' 'int *'     |         | | `-IntegerLiteral 0x12811e9a0 <col:25> 'int' 0     |         | `-ReturnStmt 0x12811eb40 <line:51:5, col:13>     |         |   `-ParenExpr 0x12811eb20 <col:11, col:13> 'int'     |         |     `-IntegerLiteral 0x12811eb00 <col:12> 'int' 1     |         `-CompoundStmt 0x12811ecd0 <line:54:5, line:56:5>     |           `-BinaryOperator 0x12811ecb0 <line:55:5, col:25> '<dependent type>' contains-errors '='     |             |-CXXDependentScopeMemberExpr 0x12811ec48 <col:5, col:16> '<dependent type>' contains-errors lvalue .cert_req     |             | `-CXXDependentScopeMemberExpr 0x12811ec00 <col:5, col:12> '<dependent type>' contains-errors lvalue ->tmp     |             |   `-CXXDependentScopeMemberExpr 0x12811ebb8 <col:5, col:8> '<dependent type>' contains-errors lvalue ->s3     |             |     `-RecoveryExpr 0x12811eb90 <col:5> '<dependent type>' contains-errors lvalue     |             |       `-DeclRefExpr 0x12811eb70 <col:5> 'int *' lvalue ParmVar 0x128102d28 's' 'int *'     |             `-IntegerLiteral 0x12811ec90 <col:25> 'int' 2     `-IfStmt 0x128120510 <line:63:2, line:70:3>       |-RecoveryExpr 0x12811eea8 <line:63:6, col:18> '_Bool' contains-errors       `-CompoundStmt 0x1281204f0 <line:64:3, line:70:3>         |-BinaryOperator 0x128120400 <line:68:3, col:20> '<dependent type>' contains-errors '='         | |-CXXDependentScopeMemberExpr 0x12811f330 <col:3, col:6> '<dependent type>' contains-errors lvalue ->init_num         | | `-RecoveryExpr 0x12811f308 <col:3> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x12811f2e8 <col:3> 'int *' lvalue ParmVar 0x128102d28 's' 'int *'         | `-CStyleCastExpr 0x12811f3c8 <col:15, col:20> 'int' <IntegralCast>         |   `-ImplicitCastExpr 0x12811f3b0 <col:20> 'unsigned long' <LValueToRValue> part_of_explicit_cast         |     `-DeclRefExpr 0x12811f378 <col:20> 'unsigned long' lvalue Var 0x128102fb8 'l' 'unsigned long'         `-BinaryOperator 0x1281204d0 <line:69:3, col:15> '<dependent type>' contains-errors '='           |-CXXDependentScopeMemberExpr 0x128120468 <col:3, col:6> '<dependent type>' contains-errors lvalue ->init_off           | `-RecoveryExpr 0x128120440 <col:3> '<dependent type>' contains-errors lvalue           |   `-DeclRefExpr 0x128120420 <col:3> 'int *' lvalue ParmVar 0x128102d28 's' 'int *'           `-IntegerLiteral 0x1281204b0 <col:15> 'int' 0 ","21188":"`-FunctionDecl 0x1238291f8  line:1:1 invalid md_open 'int (int *)'   |-ParmVarDecl 0x123829128 <col:9, col:20> col:20 invalid pdev 'int *'   `-CompoundStmt 0x125008838 <line:2:1, line:10:1>     |-DeclStmt 0x123829460 <line:3:9, line:6:11>     | `-VarDecl 0x123829398 <line:3:9, col:40> col:28 used md_margins 'const float[4]' static     |-CallExpr 0x1238296a0 <line:8:9, col:53> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1238295d0 <col:9> 'int ()' Function 0x123829518 'gx_device_set_margins' 'int ()'     | |-RecoveryExpr 0x1238295f0 <col:31> '<dependent type>' contains-errors lvalue     | |-DeclRefExpr 0x123829610 <col:37> 'const float[4]' lvalue Var 0x123829398 'md_margins' 'const float[4]'     | `-RecoveryExpr 0x123829680 <col:49> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x125008828 <line:9:9, col:34>       `-CallExpr 0x125008800 <col:16, col:34> '<dependent type>' contains-errors         |-DeclRefExpr 0x1238297b8 <col:16> 'int ()' Function 0x123829700 'gdev_prn_open' 'int ()'         `-RecoveryExpr 0x1238297d8 <col:30> '<dependent type>' contains-errors lvalue ","20484":"`-FunctionDecl 0x151942318  col:4 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x151942418 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x151942480 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x1519424e8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1519423c0 <<invalid sloc>> Implicit 882 ","20870":"`-FunctionDecl 0x137128258  line:1:1 invalid skip_buffer_input_data 'int (int, long)'   |-ParmVarDecl 0x1371280f0 <col:24, col:41> col:41 referenced invalid cinfo 'int'   |-ParmVarDecl 0x137128170 <col:48, col:53> col:53 used num_bytes 'long'   `-CompoundStmt 0x137141cd8 <line:2:1, line:20:1>     |-IfStmt 0x1371283b0 <line:3:5, line:8:5>     | |-BinaryOperator 0x137128380 <line:3:9, col:21> 'int' '<'     | | |-ImplicitCastExpr 0x137128350 <col:9> 'long' <LValueToRValue>     | | | `-DeclRefExpr 0x137128310 <col:9> 'long' lvalue ParmVar 0x137128170 'num_bytes' 'long'     | | `-ImplicitCastExpr 0x137128368 <col:21> 'long' <IntegralCast>     | |   `-IntegerLiteral 0x137128330 <col:21> 'int' 0     | `-CompoundStmt 0x1371283a0 <line:4:5, line:8:5>     `-IfStmt 0x137141ca8 <line:10:5, line:19:5> has_else       |-RecoveryExpr 0x1371285b8 <line:10:9, col:65> '_Bool' contains-errors       |-CompoundStmt 0x1371418e0 <line:11:5, line:14:5>       | |-CompoundAssignOperator 0x137128718 <line:12:9, col:40> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'       | | |-CXXDependentScopeMemberExpr 0x137128668 <col:9, col:21> '<dependent type>' contains-errors lvalue ->next_input_byte       | | | `-CXXDependentScopeMemberExpr 0x137128620 <col:9, col:16> '<dependent type>' contains-errors lvalue ->src       | | |   `-RecoveryExpr 0x1371285f8 <col:9> '<dependent type>' contains-errors lvalue       | | |     `-DeclRefExpr 0x1371285d8 <col:9> 'int' lvalue ParmVar 0x1371280f0 'cinfo' 'int'       | | `-RecoveryExpr 0x1371286f8 <col:40> '<dependent type>' contains-errors lvalue       | `-CompoundAssignOperator 0x1371418b0 <line:13:9, col:40> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'       |   |-CXXDependentScopeMemberExpr 0x137141800 <col:9, col:21> '<dependent type>' contains-errors lvalue ->bytes_in_buffer       |   | `-CXXDependentScopeMemberExpr 0x137128790 <col:9, col:16> '<dependent type>' contains-errors lvalue ->src       |   |   `-RecoveryExpr 0x137128768 <col:9> '<dependent type>' contains-errors lvalue       |   |     `-DeclRefExpr 0x137128748 <col:9> 'int' lvalue ParmVar 0x1371280f0 'cinfo' 'int'       |   `-RecoveryExpr 0x137141890 <col:40> '<dependent type>' contains-errors lvalue       `-IfStmt 0x137141c88 <line:15:10, line:19:5>         |-BinaryOperator 0x137141978 <line:15:14, col:25> 'int' contains-errors '!='         | |-RecoveryExpr 0x137141958 <col:14> '<dependent type>' contains-errors lvalue         | `-IntegerLiteral 0x137141918 <col:25> 'int' 0         `-CompoundStmt 0x137141c68 <line:16:5, line:19:5>           |-CompoundAssignOperator 0x137141b20 <line:17:9, col:52> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'           | |-CXXDependentScopeMemberExpr 0x137141a28 <col:9, col:21> '<dependent type>' contains-errors lvalue ->next_input_byte           | | `-CXXDependentScopeMemberExpr 0x1371419e0 <col:9, col:16> '<dependent type>' contains-errors lvalue ->src           | |   `-RecoveryExpr 0x1371419b8 <col:9> '<dependent type>' contains-errors lvalue           | |     `-DeclRefExpr 0x137141998 <col:9> 'int' lvalue ParmVar 0x1371280f0 'cinfo' 'int'           | `-CXXDependentScopeMemberExpr 0x137141ad8 <col:40, col:52> '<dependent type>' contains-errors lvalue ->bytes_in_buffer           |   `-CXXDependentScopeMemberExpr 0x137141a90 <col:40, col:47> '<dependent type>' contains-errors lvalue ->src           |     `-RecoveryExpr 0x137141a70 <col:40> '<dependent type>' contains-errors lvalue           `-BinaryOperator 0x137141c48 <line:18:9, col:39> '<dependent type>' contains-errors '='             |-CXXDependentScopeMemberExpr 0x137141be0 <col:9, col:21> '<dependent type>' contains-errors lvalue ->bytes_in_buffer             | `-CXXDependentScopeMemberExpr 0x137141b98 <col:9, col:16> '<dependent type>' contains-errors lvalue ->src             |   `-RecoveryExpr 0x137141b70 <col:9> '<dependent type>' contains-errors lvalue             |     `-DeclRefExpr 0x137141b50 <col:9> 'int' lvalue ParmVar 0x1371280f0 'cinfo' 'int'             `-IntegerLiteral 0x137141c28 <col:39> 'int' 0 ","20449":"`-FunctionDecl 0x13f029b18  col:3 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x13f029c18 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x13f029c80 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x13f029ce8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x13f029bc0 <<invalid sloc>> Implicit 900 ","20659":"`-FunctionDecl 0x149026820  line:1:13 perf_event_for_each 'void (struct perf_event *, void (*)(struct perf_event *))' static   |-ParmVarDecl 0x14900e248 <col:33, col:52> col:52 used event 'struct perf_event *'   |-ParmVarDecl 0x149026708 <line:2:7, col:39> col:14 used func 'void (*)(struct perf_event *)'   `-CompoundStmt 0x14902a178 <line:3:1, line:15:1>     |-DeclStmt 0x149026b68 <line:4:2, col:45>     | |-RecordDecl 0x149026920 <col:2, col:9> col:9 struct perf_event_context     | `-VarDecl 0x149026a88 <col:2, col:42> col:29 used ctx 'struct perf_event_context *' cinit     |   `-RecoveryExpr 0x149026b28 <col:35, col:42> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x149026af0 <col:35> 'struct perf_event *' lvalue ParmVar 0x14900e248 'event' 'struct perf_event *'     |-DeclStmt 0x149026c10 <line:5:2, col:28>     | `-VarDecl 0x149026ba8 <col:2, col:21> col:21 used sibling 'struct perf_event *'     |-CallExpr 0x149026dd0 <line:7:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x149026d50 <col:2> 'int ()' Function 0x149026c98 'WARN_ON_ONCE' 'int ()'     | `-RecoveryExpr 0x149026da8 <col:15, col:20> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x149026d70 <col:15> 'struct perf_event_context *' contains-errors lvalue Var 0x149026a88 'ctx' 'struct perf_event_context *'     |-CallExpr 0x149026f70 <line:8:2, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x149026ed8 <col:2> 'int ()' Function 0x149026e20 'mutex_lock' 'int ()'     | `-UnaryOperator 0x149026f58 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x149026f30 <col:14, col:19> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x149026ef8 <col:14> 'struct perf_event_context *' contains-errors lvalue Var 0x149026a88 'ctx' 'struct perf_event_context *'     |-BinaryOperator 0x149027018 <line:9:2, col:17> 'struct perf_event *' contains-errors '='     | |-DeclRefExpr 0x149026f98 <col:2> 'struct perf_event *' lvalue ParmVar 0x14900e248 'event' 'struct perf_event *'     | `-RecoveryExpr 0x149026ff0 <col:10, col:17> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x149026fb8 <col:10> 'struct perf_event *' lvalue ParmVar 0x14900e248 'event' 'struct perf_event *'     |-CallExpr 0x1490271c8 <line:11:2, col:39> 'int'     | |-ImplicitCastExpr 0x1490271b0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x149027118 <col:2> 'int ()' Function 0x149027060 'perf_event_for_each_child' 'int ()'     | |-ImplicitCastExpr 0x1490271f8 <col:28> 'struct perf_event *' <LValueToRValue>     | | `-DeclRefExpr 0x149027138 <col:28> 'struct perf_event *' lvalue ParmVar 0x14900e248 'event' 'struct perf_event *'     | `-ImplicitCastExpr 0x149027210 <col:35> 'void (*)(struct perf_event *)' <LValueToRValue>     |   `-DeclRefExpr 0x149027158 <col:35> 'void (*)(struct perf_event *)' lvalue ParmVar 0x149026708 'func' 'void (*)(struct perf_event *)'     |-CallExpr 0x149027430 <line:12:2, col:64> '<dependent type>' contains-errors     | |-DeclRefExpr 0x149027308 <col:2> 'int ()' Function 0x149027250 'list_for_each_entry' 'int ()'     | |-DeclRefExpr 0x149027328 <col:22> 'struct perf_event *' lvalue Var 0x149026ba8 'sibling' 'struct perf_event *'     | |-UnaryOperator 0x1490273a8 <col:31, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x149027380 <col:32, col:39> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x149027348 <col:32> 'struct perf_event *' lvalue ParmVar 0x14900e248 'event' 'struct perf_event *'     | `-RecoveryExpr 0x149027410 <col:53> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1490274e0 <line:13:3, col:42> 'int'     | |-ImplicitCastExpr 0x1490274c8 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x149027468 <col:3> 'int ()' Function 0x149027060 'perf_event_for_each_child' 'int ()'     | |-ImplicitCastExpr 0x149027510 <col:29> 'struct perf_event *' <LValueToRValue>     | | `-DeclRefExpr 0x149027488 <col:29> 'struct perf_event *' lvalue Var 0x149026ba8 'sibling' 'struct perf_event *'     | `-ImplicitCastExpr 0x149027528 <col:38> 'void (*)(struct perf_event *)' <LValueToRValue>     |   `-DeclRefExpr 0x1490274a8 <col:38> 'void (*)(struct perf_event *)' lvalue ParmVar 0x149026708 'func' 'void (*)(struct perf_event *)'     `-CallExpr 0x14902a150 <line:14:2, col:26> '<dependent type>' contains-errors       |-DeclRefExpr 0x14902a0b8 <col:2> 'int ()' Function 0x14902a000 'mutex_unlock' 'int ()'       `-UnaryOperator 0x14902a138 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x14902a110 <col:16, col:21> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x14902a0d8 <col:16> 'struct perf_event_context *' contains-errors lvalue Var 0x149026a88 'ctx' 'struct perf_event_context *' ","21050":"`-FunctionDecl 0x12b928288  line:1:8 invalid stts_box_dump 'int (int *, int *)'   |-ParmVarDecl 0x12b928128 <col:22, col:30> col:30 invalid a 'int *'   |-ParmVarDecl 0x12b9281a8 <col:33, col:40> col:40 invalid trace 'int *'   `-CompoundStmt 0x12b941f40 <line:2:1, line:25:1>     |-IfStmt 0x12b9283d8 <line:6:2, line:7:10>     | |-RecoveryExpr 0x12b928370 <line:6:6> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12b9283c8 <line:7:3, col:10>     |   `-RecoveryExpr 0x12b9283a8 <col:10> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12b928630 <line:10:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12b928570 <col:2> 'int ()' Function 0x12b9284b8 'gf_isom_box_dump_start' 'int ()'     | |-RecoveryExpr 0x12b928590 <col:25> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x12b9285f0 <col:28> 'char[4]' lvalue \"STR\"     | `-RecoveryExpr 0x12b928610 <col:35> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12b9418e8 <line:11:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12b928748 <col:2> 'int ()' Function 0x12b928690 'gf_fprintf' 'int ()'     | |-RecoveryExpr 0x12b928768 <col:13> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x12b928788 <col:20> 'char[4]' lvalue \"STR\"     | `-CXXDependentScopeMemberExpr 0x12b9418a0 <col:27, col:30> '<dependent type>' contains-errors lvalue ->nb_entries     |   `-RecoveryExpr 0x12b941880 <col:27> '<dependent type>' contains-errors lvalue     |-ForStmt 0x12b941c28 <line:14:2, line:17:2>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-BinaryOperator 0x12b941ab8 <line:14:12, col:17> 'int' contains-errors '<'     | | |-RecoveryExpr 0x12b941a30 <col:12> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x12b941a70 <col:14, col:17> '<dependent type>' contains-errors lvalue ->nb_entries     | |   `-RecoveryExpr 0x12b941a50 <col:14> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x12b941b28 <col:29, col:30> '<dependent type>' contains-errors postfix '++' cannot overflow     | | `-RecoveryExpr 0x12b941b08 <col:29> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12b941c18 <col:34, line:17:2>     |-IfStmt 0x12b941d78 <line:18:2, line:21:26> has_else     | |-RecoveryExpr 0x12b941c60 <line:18:6, col:9> '_Bool' contains-errors     | |-NullStmt 0x12b941d70 <line:19:3>     | `-CallExpr 0x12b941d40 <line:21:3, col:26> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12b941ce0 <col:3> 'int ()' Function 0x12b928690 'gf_fprintf' 'int ()'     |   |-RecoveryExpr 0x12b941d00 <col:14> '<dependent type>' contains-errors lvalue     |   `-StringLiteral 0x12b941d20 <col:21> 'char[4]' lvalue \"STR\"     `-CallExpr 0x12b941f08 <line:23:2, col:39> '<dependent type>' contains-errors       |-DeclRefExpr 0x12b941e88 <col:2> 'int ()' Function 0x12b941dd0 'gf_isom_box_dump_done' 'int ()'       |-StringLiteral 0x12b941ea8 <col:24> 'char[4]' lvalue \"STR\"       |-RecoveryExpr 0x12b941ec8 <col:31> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x12b941ee8 <col:34> '<dependent type>' contains-errors lvalue ","20674":"`-FunctionDecl 0x11e946a00  col:2 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x11e946b00 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x11e946aa8 <<invalid sloc>> Implicit 873 ","20925":"`-FunctionDecl 0x12d128758  line:1:12 handle_wrmsr 'int (struct kvm_vcpu *)' static   |-ParmVarDecl 0x12d128648 <col:25, col:42> col:42 used vcpu 'struct kvm_vcpu *'   `-CompoundStmt 0x12d141840 <line:2:1, line:20:1>     |-DeclStmt 0x12d140bc8 <line:3:2, col:21>     | |-RecordDecl 0x12d140a50 <col:2, col:9> col:9 struct msr_data     | `-VarDecl 0x12d140b48 <col:2, col:18> col:18 referenced invalid msr 'struct msr_data'     |-BinaryOperator 0x12d140ce0 <line:8:2, col:13> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12d140c40 <col:2, col:6> '<dependent type>' contains-errors lvalue .data     | | `-RecoveryExpr 0x12d140c18 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12d140bf8 <col:2> 'struct msr_data' lvalue Var 0x12d140b48 'msr' 'struct msr_data'     | `-RecoveryExpr 0x12d140cc0 <col:13> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12d140de8 <line:9:2, col:14> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12d140d48 <col:2, col:6> '<dependent type>' contains-errors lvalue .index     | | `-RecoveryExpr 0x12d140d20 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12d140d00 <col:2> 'struct msr_data' lvalue Var 0x12d140b48 'msr' 'struct msr_data'     | `-RecoveryExpr 0x12d140dc8 <col:14> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12d1414a8 <line:11:2, line:15:2>     | |-BinaryOperator 0x12d141088 <line:11:6, col:33> 'int' contains-errors '!='     | | |-CallExpr 0x12d141038 <col:6, col:28> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x12d140fc0 <col:6> 'int ()' Function 0x12d140f08 'vmx_set_msr' 'int ()'     | | | |-DeclRefExpr 0x12d140fe0 <col:18> 'struct kvm_vcpu *' lvalue ParmVar 0x12d128648 'vcpu' 'struct kvm_vcpu *'     | | | `-UnaryOperator 0x12d141020 <col:24, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-RecoveryExpr 0x12d141000 <col:25> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x12d141068 <col:33> 'int' 0     | `-CompoundStmt 0x12d141480 <col:36, line:15:2>     |   |-CallExpr 0x12d141248 <line:12:3, col:35> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12d141188 <col:3> 'int ()' Function 0x12d1410d0 'trace_kvm_msr_write_ex' 'int ()'     |   | |-RecoveryExpr 0x12d141208 <col:26> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x12d141228 <col:31> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x12d141408 <line:13:3, col:24> 'int'     |   | |-ImplicitCastExpr 0x12d1413f0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x12d141358 <col:3> 'int ()' Function 0x12d1412a0 'kvm_inject_gp' 'int ()'     |   | |-ImplicitCastExpr 0x12d141438 <col:17> 'struct kvm_vcpu *' <LValueToRValue>     |   | | `-DeclRefExpr 0x12d141378 <col:17> 'struct kvm_vcpu *' lvalue ParmVar 0x12d128648 'vcpu' 'struct kvm_vcpu *'     |   | `-IntegerLiteral 0x12d141398 <col:23> 'int' 0     |   `-ReturnStmt 0x12d141470 <line:14:3, col:10>     |     `-IntegerLiteral 0x12d141450 <col:10> 'int' 1     |-CallExpr 0x12d141668 <line:17:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d1415a8 <col:2> 'int ()' Function 0x12d1414f0 'trace_kvm_msr_write' 'int ()'     | |-RecoveryExpr 0x12d141628 <col:22> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x12d141648 <col:27> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12d1417d0 <line:18:2, col:32> 'int'     | |-ImplicitCastExpr 0x12d1417b8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12d141778 <col:2> 'int ()' Function 0x12d1416c0 'skip_emulated_instruction' 'int ()'     | `-ImplicitCastExpr 0x12d1417f8 <col:28> 'struct kvm_vcpu *' <LValueToRValue>     |   `-DeclRefExpr 0x12d141798 <col:28> 'struct kvm_vcpu *' lvalue ParmVar 0x12d128648 'vcpu' 'struct kvm_vcpu *'     `-ReturnStmt 0x12d141830 <line:19:2, col:9>       `-IntegerLiteral 0x12d141810 <col:9> 'int' 1 ","20412":"`-FunctionDecl 0x14b9281a8  line:1:19 invalid tcp_cookie_time 'int (void)' static inline   `-CompoundStmt 0x14b941a98 <line:2:1, line:6:1>     |-DeclStmt 0x14b9287e8 <line:3:2, col:21>     | |-RecordDecl 0x14b928250 <col:2, col:9> col:9 struct timespec     | `-VarDecl 0x14b928348 <col:2, col:18> col:18 invalid now 'struct timespec'     |-CallExpr 0x14b9419b8 <line:4:2, col:21> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b941960 <col:2> 'int ()' Function 0x14b9418a8 'getnstimeofday' 'int ()'     | `-UnaryOperator 0x14b9419a0 <col:17, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14b941980 <col:18> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14b941a88 <line:5:2, col:23>       `-BinaryOperator 0x14b941a68 <col:9, col:23> '<dependent type>' contains-errors '>>'         |-CXXDependentScopeMemberExpr 0x14b941a00 <col:9, col:13> '<dependent type>' contains-errors lvalue .tv_sec         | `-RecoveryExpr 0x14b9419e0 <col:9> '<dependent type>' contains-errors lvalue         `-IntegerLiteral 0x14b941a48 <col:23> 'int' 6 ","20833":"`-FunctionDecl 0x13b02abe8  line:1:12 __f2fs_set_acl 'int (struct inode *, int, struct posix_acl *, struct page *)' static   |-ParmVarDecl 0x13b00e248 <col:27, col:41> col:41 used inode 'struct inode *'   |-ParmVarDecl 0x13b00e2c8 <col:48, col:52> col:52 used type 'int'   |-ParmVarDecl 0x13b02a8c8 <line:2:4, col:22> col:22 used acl 'struct posix_acl *'   |-ParmVarDecl 0x13b02aa98 <col:27, col:40> col:40 used ipage 'struct page *'   `-CompoundStmt 0x13c00b4b8 <line:3:1, line:48:1>     |-DeclStmt 0x13b02ad78 <line:4:2, col:16>     | `-VarDecl 0x13b02ad10 <col:2, col:6> col:6 used name_index 'int'     |-DeclStmt 0x13b02ae60 <line:5:2, col:20>     | `-VarDecl 0x13b02ada8 <col:2, col:16> col:8 used value 'void *' cinit     |   `-RecoveryExpr 0x13b02ae40 <col:16> '<dependent type>' contains-errors lvalue     |-RecoveryExpr 0x13b02af58 <line:6:2, col:16> '<dependent type>' contains-errors lvalue     | |-UnaryExprOrTypeTraitExpr 0x13b02af38 <col:2, col:9> 'unsigned long' contains-errors sizeof     | | `-RecoveryExpr 0x13b02af18 <col:9> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x13b02aeb0 <col:16> 'int' 0     |-DeclStmt 0x13b02b008 <line:7:2, col:11>     | `-VarDecl 0x13b02afa0 <col:2, col:6> col:6 used error 'int'     |-SwitchStmt 0x13b02b058 <line:9:2, line:30:2>     | |-ImplicitCastExpr 0x13b02b040 <line:9:10> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x13b02b020 <col:10> 'int' lvalue ParmVar 0x13b00e2c8 'type' 'int'     | `-CompoundStmt 0x13c009250 <col:16, line:30:2>     |   |-BinaryOperator 0x13b02b110 <line:11:3, col:16> 'int' contains-errors '='     |   | |-DeclRefExpr 0x13b02b098 <col:3> 'int' lvalue Var 0x13b02ad10 'name_index' 'int'     |   | `-RecoveryExpr 0x13b02b0f0 <col:16> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x13b02b798 <line:12:3, line:19:3>     |   | |-ImplicitCastExpr 0x13b02b150 <line:12:7> 'struct posix_acl *' <LValueToRValue>     |   | | `-DeclRefExpr 0x13b02b130 <col:7> 'struct posix_acl *' lvalue ParmVar 0x13b02a8c8 'acl' 'struct posix_acl *'     |   | `-CompoundStmt 0x13b02b768 <col:12, line:19:3>     |   |   |-BinaryOperator 0x13b02b388 <line:13:4, col:52> 'int' contains-errors '='     |   |   | |-DeclRefExpr 0x13b02b168 <col:4> 'int' lvalue Var 0x13b02afa0 'error' 'int'     |   |   | `-CallExpr 0x13b02b358 <col:12, col:52> '<dependent type>' contains-errors     |   |   |   |-DeclRefExpr 0x13b02b2a0 <col:12> 'int ()' Function 0x13b02b1e8 'posix_acl_equiv_mode' 'int ()'     |   |   |   |-DeclRefExpr 0x13b02b2c0 <col:33> 'struct posix_acl *' lvalue ParmVar 0x13b02a8c8 'acl' 'struct posix_acl *'     |   |   |   `-UnaryOperator 0x13b02b340 <col:38, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   |     `-RecoveryExpr 0x13b02b318 <col:39, col:46> '<dependent type>' contains-errors lvalue     |   |   |       `-DeclRefExpr 0x13b02b2e0 <col:39> 'struct inode *' lvalue ParmVar 0x13b00e248 'inode' 'struct inode *'     |   |   |-IfStmt 0x13b02b468 <line:14:4, line:15:12>     |   |   | |-BinaryOperator 0x13b02b400 <line:14:8, col:16> 'int' '<'     |   |   | | |-ImplicitCastExpr 0x13b02b3e8 <col:8> 'int' <LValueToRValue>     |   |   | | | `-DeclRefExpr 0x13b02b3a8 <col:8> 'int' lvalue Var 0x13b02afa0 'error' 'int'     |   |   | | `-IntegerLiteral 0x13b02b3c8 <col:16> 'int' 0     |   |   | `-ReturnStmt 0x13b02b458 <line:15:5, col:12>     |   |   |   `-ImplicitCastExpr 0x13b02b440 <col:12> 'int' <LValueToRValue>     |   |   |     `-DeclRefExpr 0x13b02b420 <col:12> 'int' lvalue Var 0x13b02afa0 'error' 'int'     |   |   |-CallExpr 0x13b02b608 <line:16:4, col:38> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x13b02b568 <col:4> 'int ()' Function 0x13b02b4b0 'set_acl_inode' 'int ()'     |   |   | |-DeclRefExpr 0x13b02b588 <col:18> 'struct inode *' lvalue ParmVar 0x13b00e248 'inode' 'struct inode *'     |   |   | `-RecoveryExpr 0x13b02b5e0 <col:25, col:32> '<dependent type>' contains-errors lvalue     |   |   |   `-DeclRefExpr 0x13b02b5a8 <col:25> 'struct inode *' lvalue ParmVar 0x13b00e248 'inode' 'struct inode *'     |   |   `-IfStmt 0x13b02b748 <line:17:4, line:18:11>     |   |     |-BinaryOperator 0x13b02b690 <line:17:8, col:17> 'int' '=='     |   |     | |-ImplicitCastExpr 0x13b02b678 <col:8> 'int' <LValueToRValue>     |   |     | | `-DeclRefExpr 0x13b02b638 <col:8> 'int' lvalue Var 0x13b02afa0 'error' 'int'     |   |     | `-IntegerLiteral 0x13b02b658 <col:17> 'int' 0     |   |     `-BinaryOperator 0x13b02b728 <line:18:5, col:11> 'struct posix_acl *' contains-errors '='     |   |       |-DeclRefExpr 0x13b02b6b0 <col:5> 'struct posix_acl *' lvalue ParmVar 0x13b02a8c8 'acl' 'struct posix_acl *'     |   |       `-RecoveryExpr 0x13b02b708 <col:11> '<dependent type>' contains-errors lvalue     |   |-BreakStmt 0x13b02b7b8 <line:20:3>     |   |-BinaryOperator 0x13c008e58 <line:23:3, col:16> 'int' contains-errors '='     |   | |-DeclRefExpr 0x13b02b7d8 <col:3> 'int' lvalue Var 0x13b02ad10 'name_index' 'int'     |   | `-RecoveryExpr 0x13c008e38 <col:16> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x13c009160 <line:24:3, line:25:27>     |   | |-UnaryOperator 0x13c009000 <line:24:7, col:29> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | | `-CallExpr 0x13c008fd8 <col:8, col:29> '<dependent type>' contains-errors     |   | |   |-DeclRefExpr 0x13c008f58 <col:8> 'int ()' Function 0x13c008ea0 'S_ISDIR' 'int ()'     |   | |   `-RecoveryExpr 0x13c008fb0 <col:16, col:23> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x13c008f78 <col:16> 'struct inode *' lvalue ParmVar 0x13b00e248 'inode' 'struct inode *'     |   | `-ReturnStmt 0x13c009150 <line:25:4, col:27>     |   |   `-ConditionalOperator 0x13c009120 <col:11, col:27> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x13c009018 <col:11> 'struct posix_acl *' lvalue ParmVar 0x13b02a8c8 'acl' 'struct posix_acl *'     |   |     |-UnaryOperator 0x13c009108 <col:17, col:18> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |     | `-ImplicitCastExpr 0x13c0090f0 <col:18> '<dependent type>' contains-errors <LValueToRValue>     |   |     |   `-RecoveryExpr 0x13c0090d0 <col:18> '<dependent type>' contains-errors lvalue     |   |     `-IntegerLiteral 0x13c009080 <col:27> 'int' 0     |   |-BreakStmt 0x13c009180 <line:26:3>     |   `-DefaultStmt 0x13c009230 <line:28:2, line:29:11>     |     `-ReturnStmt 0x13c009220 <col:3, col:11>     |       `-UnaryOperator 0x13c009208 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |         `-ImplicitCastExpr 0x13c0091f0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |           `-RecoveryExpr 0x13c0091d0 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13c009a08 <line:32:2, line:38:2>     | |-ImplicitCastExpr 0x13c0092b8 <line:32:6> 'struct posix_acl *' <LValueToRValue>     | | `-DeclRefExpr 0x13c009298 <col:6> 'struct posix_acl *' lvalue ParmVar 0x13b02a8c8 'acl' 'struct posix_acl *'     | `-CompoundStmt 0x13c0099e8 <col:11, line:38:2>     |   |-BinaryOperator 0x13c0094f8 <line:33:3, col:38> 'void *' contains-errors '='     |   | |-DeclRefExpr 0x13c0092d0 <col:3> 'void *' contains-errors lvalue Var 0x13b02ada8 'value' 'void *'     |   | `-CallExpr 0x13c0094c8 <col:11, col:38> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x13c0093d0 <col:11> 'int ()' Function 0x13c009318 'f2fs_acl_to_disk' 'int ()'     |   |   |-DeclRefExpr 0x13c0093f0 <col:28> 'struct posix_acl *' lvalue ParmVar 0x13b02a8c8 'acl' 'struct posix_acl *'     |   |   `-UnaryOperator 0x13c0094b0 <col:33, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |     `-RecoveryExpr 0x13c009490 <col:34> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x13c0099c8 <line:34:3, line:37:3>     |     |-CallExpr 0x13c009688 <line:34:7, col:19> 'int' contains-errors     |     | |-ImplicitCastExpr 0x13c009670 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     | | `-DeclRefExpr 0x13c0095f8 <col:7> 'int ()' Function 0x13c009540 'IS_ERR' 'int ()'     |     | `-ImplicitCastExpr 0x13c0096b0 <col:14> 'void *' contains-errors <LValueToRValue>     |     |   `-DeclRefExpr 0x13c009618 <col:14> 'void *' contains-errors lvalue Var 0x13b02ada8 'value' 'void *'     |     `-CompoundStmt 0x13c0099b0 <col:22, line:37:3>     |       `-ReturnStmt 0x13c0099a0 <line:36:4, col:29>     |         `-CStyleCastExpr 0x13c009978 <col:11, col:29> 'int' contains-errors <NoOp>     |           `-CallExpr 0x13c009920 <col:16, col:29> 'int' contains-errors     |             |-ImplicitCastExpr 0x13c009908 <col:16> 'int (*)()' <FunctionToPointerDecay>     |             | `-DeclRefExpr 0x13c0098c8 <col:16> 'int ()' Function 0x13c009810 'PTR_ERR' 'int ()'     |             `-ImplicitCastExpr 0x13c009948 <col:24> 'void *' contains-errors <LValueToRValue>     |               `-DeclRefExpr 0x13c0098e8 <col:24> 'void *' contains-errors lvalue Var 0x13b02ada8 'value' 'void *'     |-CallExpr 0x13c009d80 <line:42:2, col:13> 'int' contains-errors     | |-ImplicitCastExpr 0x13c009d68 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13c009d28 <col:2> 'int ()' Function 0x13c009c70 'kfree' 'int ()'     | `-ImplicitCastExpr 0x13c009da8 <col:8> 'void *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x13c009d48 <col:8> 'void *' contains-errors lvalue Var 0x13b02ada8 'value' 'void *'     |-IfStmt 0x13c00b410 <line:43:2, line:44:34>     | |-UnaryOperator 0x13c00b200 <line:43:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13c009de0 <col:7> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x13c009dc0 <col:7> 'int' lvalue Var 0x13b02afa0 'error' 'int'     | `-CallExpr 0x13c00b390 <line:44:3, col:34> 'int'     |   |-ImplicitCastExpr 0x13c00b378 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x13c00b2f8 <col:3> 'int ()' Function 0x13c00b240 'set_cached_acl' 'int ()'     |   |-ImplicitCastExpr 0x13c00b3c8 <col:18> 'struct inode *' <LValueToRValue>     |   | `-DeclRefExpr 0x13c00b318 <col:18> 'struct inode *' lvalue ParmVar 0x13b00e248 'inode' 'struct inode *'     |   |-ImplicitCastExpr 0x13c00b3e0 <col:25> 'int' <LValueToRValue>     |   | `-DeclRefExpr 0x13c00b338 <col:25> 'int' lvalue ParmVar 0x13b00e2c8 'type' 'int'     |   `-ImplicitCastExpr 0x13c00b3f8 <col:31> 'struct posix_acl *' <LValueToRValue>     |     `-DeclRefExpr 0x13c00b358 <col:31> 'struct posix_acl *' lvalue ParmVar 0x13b02a8c8 'acl' 'struct posix_acl *'     `-ReturnStmt 0x13c00b4a8 <line:47:2, col:9>       `-ImplicitCastExpr 0x13c00b490 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x13c00b470 <col:9> 'int' lvalue Var 0x13b02afa0 'error' 'int' ","21110":"`-FunctionDecl 0x12f928198  line:1:1 rsvg_new_clip_path 'int (void)'   `-CompoundStmt 0x12f940a10 <line:2:1, line:11:1>     |-CallExpr 0x12f928678 <line:6:5, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f928538 <col:5> 'int ()' Function 0x12f928480 '_rsvg_node_init' 'int ()'     | `-UnaryOperator 0x12f928660 <col:22, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x12f928618 <col:23, col:34> '<dependent type>' contains-errors lvalue ->super     |     `-RecoveryExpr 0x12f9285f8 <col:23> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12f940a00 <line:10:5, col:24>       `-UnaryOperator 0x12f9287e8 <col:12, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow         `-CXXDependentScopeMemberExpr 0x12f9287a0 <col:13, col:24> '<dependent type>' contains-errors lvalue ->super           `-RecoveryExpr 0x12f928780 <col:13> '<dependent type>' contains-errors lvalue ","21125":"`-FunctionDecl 0x12e80df18  line:1:12 invalid tsc210x_load 'int (int *, void *, int)' static   |-ParmVarDecl 0x12e80dd28 <col:25, col:35> col:35 invalid f 'int *'   |-ParmVarDecl 0x12e80dda8 <col:38, col:44> col:44 opaque 'void *'   |-ParmVarDecl 0x12e80de28 <col:52, col:56> col:56 version_id 'int'   `-CompoundStmt 0x12e828828 <line:2:1, line:51:1>     |-DeclStmt 0x12e80e088 <line:5:5, col:10>     | `-VarDecl 0x12e80e020 <col:5, col:9> col:9 used i 'int'     |-CallExpr 0x12e827878 <line:17:5, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12e827710 <col:5> 'int ()' Function 0x12e827658 'qemu_get_be16s' 'int ()'     | |-RecoveryExpr 0x12e827730 <col:20> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x12e827860 <col:23, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x12e827818 <col:24, col:27> '<dependent type>' contains-errors lvalue ->dav     |     `-RecoveryExpr 0x12e8277f8 <col:24> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12e827ac0 <line:19:5, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12e827988 <col:5> 'int ()' Function 0x12e8278d0 'timer_get' 'int ()'     | |-RecoveryExpr 0x12e8279a8 <col:15> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x12e827a78 <col:18, col:21> '<dependent type>' contains-errors lvalue ->timer     |   `-RecoveryExpr 0x12e827a58 <col:18> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12e828818 <line:50:5, col:12>       `-IntegerLiteral 0x12e8287f8 <col:12> 'int' 0 ","20745":"`-FunctionDecl 0x15800de38  line:1:1 TEST_F 'int (int, int)'   |-ParmVarDecl 0x15800dd58 <col:8> col:8 ExprMatchTest 'int'   |-ParmVarDecl 0x15800dcd8 <col:23> col:23 GteWithLHSFieldPathMatchesCorrectly 'int'   `-CompoundStmt 0x158027098 <col:60, line:8:1>     |-CallExpr 0x15800e280 <line:2:5, col:34> 'int'     | |-ImplicitCastExpr 0x15800e268 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x15800e060 <col:5> 'int ()' Function 0x15800dfa8 'createMatcher' 'int ()'     | `-CallExpr 0x15800e228 <col:19, col:33> 'int'     |   |-ImplicitCastExpr 0x15800e210 <col:19> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x15800e160 <col:19> 'int ()' Function 0x15800e0a8 'fromjson' 'int ()'     |   `-ImplicitCastExpr 0x15800e250 <col:28> 'char *' <ArrayToPointerDecay>     |     `-StringLiteral 0x15800e1c0 <col:28> 'char[4]' lvalue \"STR\"     |-CallExpr 0x158026cd0 <line:4:5, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15800e388 <col:5> 'int ()' Function 0x15800e2d0 'ASSERT_TRUE' 'int ()'     | `-CallExpr 0x158026ca8 <col:17, col:41> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1580266b8 <col:17> 'int ()' Function 0x158026600 'matches' 'int ()'     |   `-CallExpr 0x158026c80 <col:25, col:40> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1580267b8 <col:25> 'int ()' Function 0x158026700 'BSON' 'int ()'     |     `-RecoveryExpr 0x158026c50 <col:30, col:39> '<dependent type>' contains-errors lvalue     |       |-StringLiteral 0x1580267d8 <col:30> 'char[4]' lvalue \"STR\"     |       `-IntegerLiteral 0x1580267f8 <col:39> 'int' 3     |-CallExpr 0x158026e30 <line:5:5, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x158026cf8 <col:5> 'int ()' Function 0x15800e2d0 'ASSERT_TRUE' 'int ()'     | `-CallExpr 0x158026e08 <col:17, col:42> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x158026d18 <col:17> 'int ()' Function 0x158026600 'matches' 'int ()'     |   `-CallExpr 0x158026de0 <col:25, col:41> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x158026d38 <col:25> 'int ()' Function 0x158026700 'BSON' 'int ()'     |     `-RecoveryExpr 0x158026db0 <col:30, col:39> '<dependent type>' contains-errors lvalue     |       |-StringLiteral 0x158026d58 <col:30> 'char[4]' lvalue \"STR\"     |       `-IntegerLiteral 0x158026d78 <col:39> 'int' 10     `-CallExpr 0x158027070 <line:7:5, col:43> '<dependent type>' contains-errors       |-DeclRefExpr 0x158026f38 <col:5> 'int ()' Function 0x158026e80 'ASSERT_FALSE' 'int ()'       `-CallExpr 0x158027048 <col:18, col:42> '<dependent type>' contains-errors         |-DeclRefExpr 0x158026f58 <col:18> 'int ()' Function 0x158026600 'matches' 'int ()'         `-CallExpr 0x158027020 <col:26, col:41> '<dependent type>' contains-errors           |-DeclRefExpr 0x158026f78 <col:26> 'int ()' Function 0x158026700 'BSON' 'int ()'           `-RecoveryExpr 0x158026ff0 <col:31, col:40> '<dependent type>' contains-errors lvalue             |-StringLiteral 0x158026f98 <col:31> 'char[4]' lvalue \"STR\"             `-IntegerLiteral 0x158026fb8 <col:40> 'int' 1 ","20240":"`-FunctionDecl 0x1449281f0  line:1:6 invalid qemu_spice_wakeup 'void (int *)'   |-ParmVarDecl 0x144928128 <col:24, col:44> col:44 invalid ssd 'int *'   `-CompoundStmt 0x1449286a0 <line:2:1, line:5:1>     |-CallExpr 0x1449284d0 <line:3:5, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x144928400 <col:5> 'int ()' Function 0x144928348 'trace_qemu_spice_wakeup' 'int ()'     | `-CXXDependentScopeMemberExpr 0x144928488 <col:29, col:38> '<dependent type>' contains-errors lvalue .id     |   `-CXXDependentScopeMemberExpr 0x144928440 <col:29, col:34> '<dependent type>' contains-errors lvalue ->qxl     |     `-RecoveryExpr 0x144928420 <col:29> '<dependent type>' contains-errors lvalue     `-CallExpr 0x144928678 <line:4:5, col:31> '<dependent type>' contains-errors       |-DeclRefExpr 0x1449285d8 <col:5> 'int ()' Function 0x144928520 'spice_qxl_wakeup' 'int ()'       `-UnaryOperator 0x144928660 <col:22, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow         `-CXXDependentScopeMemberExpr 0x144928618 <col:23, col:28> '<dependent type>' contains-errors lvalue ->qxl           `-RecoveryExpr 0x1449285f8 <col:23> '<dependent type>' contains-errors lvalue ","20934":"`-FunctionDecl 0x12e941948  line:1:14 invalid cp_report_fixup 'int *(struct hid_device *, int *, unsigned int *)' static   |-ParmVarDecl 0x12e928668 <col:30, col:49> col:49 used hdev 'struct hid_device *'   |-ParmVarDecl 0x12e928718 <col:55, col:61> col:61 referenced invalid rdesc 'int *'   |-ParmVarDecl 0x12e941800 <line:2:3, col:17> col:17 used rsize 'unsigned int *'   `-CompoundStmt 0x12e943e68 <line:3:1, line:17:1>     |-DeclStmt 0x12e941ce8 <line:4:2, col:61>     | `-VarDecl 0x12e941a20 <col:2, col:60> col:16 used quirks 'unsigned long' cinit     |   `-CStyleCastExpr 0x12e941cc0 <col:25, col:60> 'unsigned long' <IntegralCast>     |     `-CallExpr 0x12e941c68 <col:40, col:60> 'int'     |       |-ImplicitCastExpr 0x12e941c50 <col:40> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x12e941be0 <col:40> 'int ()' Function 0x12e941b28 'hid_get_drvdata' 'int ()'     |       `-ImplicitCastExpr 0x12e941c90 <col:56> 'struct hid_device *' <LValueToRValue>     |         `-DeclRefExpr 0x12e941c00 <col:56> 'struct hid_device *' lvalue ParmVar 0x12e928668 'hdev' 'struct hid_device *'     |-DeclStmt 0x12e941d80 <line:5:2, col:16>     | `-VarDecl 0x12e941d18 <col:2, col:15> col:15 used i 'unsigned int'     |-IfStmt 0x12e941e40 <line:7:2, line:8:10>     | |-RecoveryExpr 0x12e941df0 <line:7:6, col:41> '_Bool' contains-errors     | `-ReturnStmt 0x12e941e30 <line:8:3, col:10>     |   `-RecoveryExpr 0x12e941e10 <col:10> '<dependent type>' contains-errors lvalue     |-ForStmt 0x12e943e00 <line:10:2, line:15:3>     | |-BinaryOperator 0x12e941eb8 <line:10:7, col:11> 'unsigned int' '='     | | |-DeclRefExpr 0x12e941e60 <col:7> 'unsigned int' lvalue Var 0x12e941d18 'i' 'unsigned int'     | | `-ImplicitCastExpr 0x12e941ea0 <col:11> 'unsigned int' <IntegralCast>     | |   `-IntegerLiteral 0x12e941e80 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x12e941fd0 <col:14, col:27> 'int' '<'     | | |-ImplicitCastExpr 0x12e941fb8 <col:14> 'unsigned int' <LValueToRValue>     | | | `-DeclRefExpr 0x12e941ed8 <col:14> 'unsigned int' lvalue Var 0x12e941d18 'i' 'unsigned int'     | | `-BinaryOperator 0x12e941f98 <col:18, col:27> 'unsigned int' '-'     | |   |-ImplicitCastExpr 0x12e941f68 <col:18, col:19> 'unsigned int' <LValueToRValue>     | |   | `-UnaryOperator 0x12e941f30 <col:18, col:19> 'unsigned int' lvalue prefix '*' cannot overflow     | |   |   `-ImplicitCastExpr 0x12e941f18 <col:19> 'unsigned int *' <LValueToRValue>     | |   |     `-DeclRefExpr 0x12e941ef8 <col:19> 'unsigned int *' lvalue ParmVar 0x12e941800 'rsize' 'unsigned int *'     | |   `-ImplicitCastExpr 0x12e941f80 <col:27> 'unsigned int' <IntegralCast>     | |     `-IntegerLiteral 0x12e941f48 <col:27> 'int' 4     | |-UnaryOperator 0x12e942010 <col:30, col:31> 'unsigned int' postfix '++'     | | `-DeclRefExpr 0x12e941ff0 <col:30> 'unsigned int' lvalue Var 0x12e941d18 'i' 'unsigned int'     | `-IfStmt 0x12e9427b0 <line:11:3, line:15:3>     |   |-BinaryOperator 0x12e942220 <line:11:7, col:43> 'int' contains-errors '&&'     |   | |-BinaryOperator 0x12e9420d8 <col:7, col:19> 'int' contains-errors '=='     |   | | |-ArraySubscriptExpr 0x12e942098 <col:7, col:14> '<dependent type>' contains-errors lvalue     |   | | | |-ImplicitCastExpr 0x12e942068 <col:7> '<dependent type>' contains-errors <LValueToRValue>     |   | | | | `-RecoveryExpr 0x12e942028 <col:7> '<dependent type>' contains-errors lvalue     |   | | | `-ImplicitCastExpr 0x12e942080 <col:13> 'unsigned int' <LValueToRValue>     |   | | |   `-DeclRefExpr 0x12e942048 <col:13> 'unsigned int' lvalue Var 0x12e941d18 'i' 'unsigned int'     |   | | `-IntegerLiteral 0x12e9420b8 <col:19> 'int' 41     |   | `-BinaryOperator 0x12e942200 <col:27, col:43> 'int' contains-errors '=='     |   |   |-ArraySubscriptExpr 0x12e9421c0 <col:27, col:38> '<dependent type>' contains-errors lvalue     |   |   | |-ImplicitCastExpr 0x12e9421a8 <col:27> '<dependent type>' contains-errors <LValueToRValue>     |   |   | | `-RecoveryExpr 0x12e9420f8 <col:27> '<dependent type>' contains-errors lvalue     |   |   | `-BinaryOperator 0x12e942188 <col:33, col:37> 'unsigned int' '+'     |   |   |   |-ImplicitCastExpr 0x12e942158 <col:33> 'unsigned int' <LValueToRValue>     |   |   |   | `-DeclRefExpr 0x12e942118 <col:33> 'unsigned int' lvalue Var 0x12e941d18 'i' 'unsigned int'     |   |   |   `-ImplicitCastExpr 0x12e942170 <col:37> 'unsigned int' <IntegralCast>     |   |   |     `-IntegerLiteral 0x12e942138 <col:37> 'int' 2     |   |   `-IntegerLiteral 0x12e9421e0 <col:43> 'int' 25     |   `-CompoundStmt 0x12e942788 <col:49, line:15:3>     |     |-BinaryOperator 0x12e942318 <line:12:4, col:15> '<dependent type>' contains-errors '='     |     | |-ArraySubscriptExpr 0x12e9422d8 <col:4, col:11> '<dependent type>' contains-errors lvalue     |     | | |-ImplicitCastExpr 0x12e9422a8 <col:4> '<dependent type>' contains-errors <LValueToRValue>     |     | | | `-RecoveryExpr 0x12e942260 <col:4> '<dependent type>' contains-errors lvalue     |     | | |   `-DeclRefExpr 0x12e942240 <col:4> 'int *' lvalue ParmVar 0x12e928718 'rdesc' 'int *'     |     | | `-ImplicitCastExpr 0x12e9422c0 <col:10> 'unsigned int' <LValueToRValue>     |     | |   `-DeclRefExpr 0x12e942288 <col:10> 'unsigned int' lvalue Var 0x12e941d18 'i' 'unsigned int'     |     | `-IntegerLiteral 0x12e9422f8 <col:15> 'int' 25     |     |-BinaryOperator 0x12e942468 <line:13:4, col:19> '<dependent type>' contains-errors '='     |     | |-ArraySubscriptExpr 0x12e942428 <col:4, col:15> '<dependent type>' contains-errors lvalue     |     | | |-ImplicitCastExpr 0x12e942410 <col:4> '<dependent type>' contains-errors <LValueToRValue>     |     | | | `-RecoveryExpr 0x12e942358 <col:4> '<dependent type>' contains-errors lvalue     |     | | |   `-DeclRefExpr 0x12e942338 <col:4> 'int *' lvalue ParmVar 0x12e928718 'rdesc' 'int *'     |     | | `-BinaryOperator 0x12e9423f0 <col:10, col:14> 'unsigned int' '+'     |     | |   |-ImplicitCastExpr 0x12e9423c0 <col:10> 'unsigned int' <LValueToRValue>     |     | |   | `-DeclRefExpr 0x12e942380 <col:10> 'unsigned int' lvalue Var 0x12e941d18 'i' 'unsigned int'     |     | |   `-ImplicitCastExpr 0x12e9423d8 <col:14> 'unsigned int' <IntegralCast>     |     | |     `-IntegerLiteral 0x12e9423a0 <col:14> 'int' 2     |     | `-IntegerLiteral 0x12e942448 <col:19> 'int' 41     |     `-CallExpr 0x12e942758 <line:14:4, col:35> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x12e942568 <col:4> 'int ()' Function 0x12e9424b0 'swap' 'int ()'     |       |-ArraySubscriptExpr 0x12e942650 <col:9, col:20> '<dependent type>' contains-errors lvalue     |       | |-ImplicitCastExpr 0x12e942638 <col:9> '<dependent type>' contains-errors <LValueToRValue>     |       | | `-RecoveryExpr 0x12e942588 <col:9> '<dependent type>' contains-errors lvalue     |       | `-BinaryOperator 0x12e942618 <col:15, col:19> 'unsigned int' '+'     |       |   |-ImplicitCastExpr 0x12e9425e8 <col:15> 'unsigned int' <LValueToRValue>     |       |   | `-DeclRefExpr 0x12e9425a8 <col:15> 'unsigned int' lvalue Var 0x12e941d18 'i' 'unsigned int'     |       |   `-ImplicitCastExpr 0x12e942600 <col:19> 'unsigned int' <IntegralCast>     |       |     `-IntegerLiteral 0x12e9425c8 <col:19> 'int' 3     |       `-ArraySubscriptExpr 0x12e942738 <col:23, col:34> '<dependent type>' contains-errors lvalue     |         |-ImplicitCastExpr 0x12e942720 <col:23> '<dependent type>' contains-errors <LValueToRValue>     |         | `-RecoveryExpr 0x12e942670 <col:23> '<dependent type>' contains-errors lvalue     |         `-BinaryOperator 0x12e942700 <col:29, col:33> 'unsigned int' '+'     |           |-ImplicitCastExpr 0x12e9426d0 <col:29> 'unsigned int' <LValueToRValue>     |           | `-DeclRefExpr 0x12e942690 <col:29> 'unsigned int' lvalue Var 0x12e941d18 'i' 'unsigned int'     |           `-ImplicitCastExpr 0x12e9426e8 <col:33> 'unsigned int' <IntegralCast>     |             `-IntegerLiteral 0x12e9426b0 <col:33> 'int' 1     `-ReturnStmt 0x12e943e58 <line:16:2, col:9>       `-RecoveryExpr 0x12e943e38 <col:9> '<dependent type>' contains-errors lvalue ","21217":"`-FunctionDecl 0x12f80ddf8  line:1:11 invalid ax25_addr_ax25dev 'int *(int *)'   |-ParmVarDecl 0x12f80dd28 <col:29, col:43> col:43 invalid addr 'int *'   `-CompoundStmt 0x12f827770 <line:2:1, line:13:1>     |-CallExpr 0x12f80e150 <line:5:2, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f80e0a0 <col:2> 'int ()' Function 0x12f80dfe8 'spin_lock_bh' 'int ()'     | `-UnaryOperator 0x12f80e138 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12f80e118 <col:16> '<dependent type>' contains-errors lvalue     |-ForStmt 0x12f827580 <line:6:2, line:9:3>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-BinaryOperator 0x12f80e258 <line:6:33, col:45> 'int' contains-errors '!='     | | |-RecoveryExpr 0x12f80e218 <col:33> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12f80e238 <col:45> '<dependent type>' contains-errors lvalue     | |-BinaryOperator 0x12f80e398 <col:51, col:72> '<dependent type>' contains-errors '='     | | |-RecoveryExpr 0x12f80e310 <col:51> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x12f80e350 <col:62, col:72> '<dependent type>' contains-errors lvalue ->next     | |   `-RecoveryExpr 0x12f80e330 <col:62> '<dependent type>' contains-errors lvalue     | `-IfStmt 0x12f827560 <line:7:3, line:9:3>     |   |-RecoveryExpr 0x12f827518 <line:7:7, col:71> '_Bool' contains-errors     |   `-CompoundStmt 0x12f827550 <col:74, line:9:3>     `-CallExpr 0x12f827748 <line:10:2, col:31> '<dependent type>' contains-errors       |-DeclRefExpr 0x12f827698 <col:2> 'int ()' Function 0x12f8275e0 'spin_unlock_bh' 'int ()'       `-UnaryOperator 0x12f827730 <col:17, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x12f827710 <col:18> '<dependent type>' contains-errors lvalue ","21218":"`-FunctionDecl 0x1401281f0  line:2:6 invalid stvi_del 'void (int *)'   |-ParmVarDecl 0x140128128 <col:15, col:23> col:23 invalid s 'int *'   `-CompoundStmt 0x1401287d0 <line:3:1, line:7:15>     |-IfStmt 0x140128390 <line:5:2, col:19>     | |-BinaryOperator 0x140128360 <col:6, col:13> 'int' contains-errors '=='     | | |-RecoveryExpr 0x140128320 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x140128340 <col:13> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x140128380 <col:19>     |-IfStmt 0x140128708 <line:6:2, col:70>     | |-CXXDependentScopeMemberExpr 0x140128430 <col:6, col:11> '<dependent type>' contains-errors lvalue ->stereo_indication_type     | | `-RecoveryExpr 0x140128410 <col:6> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x1401286e0 <col:35, col:70> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1401285d0 <col:35> 'int ()' Function 0x140128518 'gf_free' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x140128698 <col:43, col:48> '<dependent type>' contains-errors lvalue ->stereo_indication_type     |     `-RecoveryExpr 0x140128678 <col:43> '<dependent type>' contains-errors lvalue     `-CallExpr 0x1401287a8 <line:7:2, col:13> '<dependent type>' contains-errors       |-DeclRefExpr 0x140128728 <col:2> 'int ()' Function 0x140128518 'gf_free' 'int ()'       `-RecoveryExpr 0x140128788 <col:10> '<dependent type>' contains-errors lvalue ","20249":"`-FunctionDecl 0x128928550  line:1:13 invalid exif_iif_add_tag 'void (int *, int, char *, int, int, int, void *)' static   |-ParmVarDecl 0x128928128 <col:30, col:47> col:47 invalid image_info 'int *'   |-ParmVarDecl 0x1289281a8 <col:59, col:63> col:63 used section_index 'int'   |-ParmVarDecl 0x128928228 <col:78, col:84> col:84 used name 'char *'   |-ParmVarDecl 0x1289282a8 <col:90, col:94> col:94 used tag 'int'   |-ParmVarDecl 0x128928328 <col:99, col:103> col:103 used format 'int'   |-ParmVarDecl 0x1289283a8 <col:111, col:118> col:118 invalid length 'int'   |-ParmVarDecl 0x128928428 <col:126, col:132> col:132 used value 'void *'   `-CompoundStmt 0x1298087a8 <line:2:1, line:4:1>     `-CallExpr 0x129808748 <line:3:2, col:113> '<dependent type>' contains-errors       |-DeclRefExpr 0x128928790 <col:2> 'int ()' Function 0x1289286d8 'exif_iif_add_value' 'int ()'       |-RecoveryExpr 0x1289287b0 <col:21> '<dependent type>' contains-errors lvalue       |-DeclRefExpr 0x1289287d0 <col:33> 'int' lvalue ParmVar 0x1289281a8 'section_index' 'int'       |-DeclRefExpr 0x129808600 <col:48> 'char *' lvalue ParmVar 0x128928228 'name' 'char *'       |-DeclRefExpr 0x129808620 <col:54> 'int' lvalue ParmVar 0x1289282a8 'tag' 'int'       |-DeclRefExpr 0x129808640 <col:59> 'int' lvalue ParmVar 0x128928328 'format' 'int'       |-CStyleCastExpr 0x129808698 <col:67, col:72> 'int' contains-errors <Dependent>       | `-RecoveryExpr 0x129808660 <col:72> '<dependent type>' contains-errors lvalue       |-DeclRefExpr 0x1298086c0 <col:80> 'void *' lvalue ParmVar 0x128928428 'value' 'void *'       `-CXXDependentScopeMemberExpr 0x129808700 <col:87, col:99> '<dependent type>' contains-errors lvalue ->motorola_intel         `-RecoveryExpr 0x1298086e0 <col:87> '<dependent type>' contains-errors lvalue ","20753":"`-FunctionDecl 0x120140ab8  line:1:23 dm_get_from_kobject 'struct mapped_device *(struct kobject *)'   |-ParmVarDecl 0x1201286e8 <col:43, col:59> col:59 used kobj 'struct kobject *'   `-CompoundStmt 0x120141518 <line:2:1, line:13:1>     |-DeclStmt 0x120140ca0 <line:3:2, col:26>     | `-VarDecl 0x120140c38 <col:2, col:24> col:24 used md 'struct mapped_device *'     |-IfStmt 0x120141338 <line:7:2, line:9:10>     | |-BinaryOperator 0x1201412d0 <line:7:6, line:8:23> 'int' contains-errors '||'     | | |-CallExpr 0x120141248 <line:7:6, col:38> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x120140f80 <col:6> 'int ()' Function 0x120140ec8 'test_bit' 'int ()'     | | | |-RecoveryExpr 0x120141228 <col:15> '<dependent type>' contains-errors lvalue     | | | `-UnaryOperator 0x120141018 <col:28, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-RecoveryExpr 0x120140ff0 <col:29, col:33> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x120140fb8 <col:29> 'struct mapped_device *' lvalue Var 0x120140c38 'md' 'struct mapped_device *'     | | `-CallExpr 0x120141290 <line:8:6, col:23> 'int'     | |   |-ImplicitCastExpr 0x120141278 <col:6> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x120141140 <col:6> 'int ()' Function 0x120141088 'dm_deleting_md' 'int ()'     | |   `-ImplicitCastExpr 0x1201412b8 <col:21> 'struct mapped_device *' <LValueToRValue>     | |     `-DeclRefExpr 0x120141160 <col:21> 'struct mapped_device *' lvalue Var 0x120140c38 'md' 'struct mapped_device *'     | `-ReturnStmt 0x120141328 <line:9:3, col:10>     |   `-RecoveryExpr 0x120141308 <col:10> '<dependent type>' contains-errors lvalue     |-CallExpr 0x120141490 <line:11:2, col:11> 'int'     | |-ImplicitCastExpr 0x120141478 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x120141438 <col:2> 'int ()' Function 0x120141380 'dm_get' 'int ()'     | `-ImplicitCastExpr 0x1201414b8 <col:9> 'struct mapped_device *' <LValueToRValue>     |   `-DeclRefExpr 0x120141458 <col:9> 'struct mapped_device *' lvalue Var 0x120140c38 'md' 'struct mapped_device *'     `-ReturnStmt 0x120141508 <line:12:2, col:9>       `-ImplicitCastExpr 0x1201414f0 <col:9> 'struct mapped_device *' <LValueToRValue>         `-DeclRefExpr 0x1201414d0 <col:9> 'struct mapped_device *' lvalue Var 0x120140c38 'md' 'struct mapped_device *' ","20726":"`-FunctionDecl 0x14100de68  line:1:12 keyring_detect_cycle_iterator 'int (const void *, void *)' static   |-ParmVarDecl 0x14100dd08 <col:42, col:54> col:54 used object 'const void *'   |-ParmVarDecl 0x14100dd88 <line:2:7, col:13> col:13 used iterator_data 'void *'   `-CompoundStmt 0x14102ca80 <line:3:1, line:12:1>     |-DeclStmt 0x14100e1a8 <line:4:2, col:52>     | |-RecordDecl 0x14100df68 <col:2, col:9> col:9 struct keyring_search_context     | `-VarDecl 0x14100e0d8 <col:2, col:39> col:33 used ctx 'struct keyring_search_context *' cinit     |   `-ImplicitCastExpr 0x14100e178 <col:39> 'struct keyring_search_context *' <BitCast>     |     `-ImplicitCastExpr 0x14100e160 <col:39> 'void *' <LValueToRValue>     |       `-DeclRefExpr 0x14100e140 <col:39> 'void *' lvalue ParmVar 0x14100dd88 'iterator_data' 'void *'     |-DeclStmt 0x14102c3f8 <line:5:2, col:52>     | |-RecordDecl 0x14100e1c0 <col:8, col:15> col:15 struct key     | `-VarDecl 0x14100e328 <col:2, col:51> col:20 used key 'const struct key *' cinit     |   `-ImplicitCastExpr 0x14102bfa8 <col:26, col:51> 'const struct key *' <IntegralToPointer>     |     `-CallExpr 0x14102bf68 <col:26, col:51> 'int'     |       |-ImplicitCastExpr 0x14102bf50 <col:26> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14102bee0 <col:26> 'int ()' Function 0x14102be28 'keyring_ptr_to_key' 'int ()'     |       `-ImplicitCastExpr 0x14102bf90 <col:45> 'const void *' <LValueToRValue>     |         `-DeclRefExpr 0x14102bf00 <col:45> 'const void *' lvalue ParmVar 0x14100dd08 'object' 'const void *'     |-CallExpr 0x14102c5d0 <line:7:2, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14102c4f0 <col:2> 'int ()' Function 0x14102c438 'kenter' 'int ()'     | |-StringLiteral 0x14102c550 <col:9> 'char[4]' lvalue \"STR\"     | `-RecoveryExpr 0x14102c5a8 <col:16, col:21> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14102c570 <col:16> 'const struct key *' lvalue Var 0x14100e328 'key' 'const struct key *'     |-CallExpr 0x14102c7a0 <line:9:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14102c6e0 <col:2> 'int ()' Function 0x14102c628 'BUG_ON' 'int ()'     | `-BinaryOperator 0x14102c780 <col:9, col:21> 'int' contains-errors '!='     |   |-DeclRefExpr 0x14102c700 <col:9> 'const struct key *' lvalue Var 0x14100e328 'key' 'const struct key *'     |   `-RecoveryExpr 0x14102c758 <col:16, col:21> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14102c720 <col:16> 'struct keyring_search_context *' lvalue Var 0x14100e0d8 'ctx' 'struct keyring_search_context *'     |-BinaryOperator 0x14102ca30 <line:10:2, col:32> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14102c800 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14102c7c8 <col:2> 'struct keyring_search_context *' lvalue Var 0x14100e0d8 'ctx' 'struct keyring_search_context *'     | `-CallExpr 0x14102ca08 <col:16, col:32> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14102c908 <col:16> 'int ()' Function 0x14102c850 'ERR_PTR' 'int ()'     |   `-UnaryOperator 0x14102c9f0 <col:24, col:25> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14102c9d8 <col:25> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14102c9b8 <col:25> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14102ca70 <line:11:2, col:9>       `-IntegerLiteral 0x14102ca50 <col:9> 'int' 1 ","21256":"`-FunctionDecl 0x14d00dfa8  line:1:1 invalid zzip_mem_disk_findfile 'int (int *, char *, int *, int)'   |-ParmVarDecl 0x14d00dd28 <col:24, col:39> col:39 invalid dir 'int *'   |-ParmVarDecl 0x14d00dda8 <line:2:24, col:30> col:30 used filename 'char *'   |-ParmVarDecl 0x14d00de28 <col:40, col:57> col:57 invalid after 'int *'   |-ParmVarDecl 0x14d00dea8 <line:3:10, col:27> col:27 invalid compare 'int'   `-CompoundStmt 0x14d00e308 <col:36, line:4:69>     `-ReturnStmt 0x14d00e2f8 <col:5, col:66>       `-CallExpr 0x14d00e2b8 <col:12, col:66> '<dependent type>' contains-errors         |-DeclRefExpr 0x14d00e1d0 <col:12> 'int ()' Function 0x14d00e118 'zzip_disk_findfile' 'int ()'         |-CXXDependentScopeMemberExpr 0x14d00e210 <col:31, col:36> '<dependent type>' contains-errors lvalue ->disk         | `-RecoveryExpr 0x14d00e1f0 <col:31> '<dependent type>' contains-errors lvalue         |-DeclRefExpr 0x14d00e258 <col:42> 'char *' lvalue ParmVar 0x14d00dda8 'filename' 'char *'         |-RecoveryExpr 0x14d00e278 <col:52> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x14d00e298 <col:59> '<dependent type>' contains-errors lvalue ","21210":"`-FunctionDecl 0x1349283a8  line:1:8 invalid gf_isom_get_fragmented_samples_info 'int (int *, int, int *, int *)'   |-ParmVarDecl 0x134928128 <col:44, col:56> col:56 invalid movie 'int *'   |-ParmVarDecl 0x1349281a8 <col:63, col:77> col:77 invalid trackID 'int'   |-ParmVarDecl 0x134928228 <col:86, col:91> col:91 invalid nb_samples 'int *'   |-ParmVarDecl 0x1349282a8 <col:103, col:108> col:108 invalid duration 'int *'   `-CompoundStmt 0x136809648 <line:2:1, line:42:1>     |-BinaryOperator 0x134928510 <line:8:2, col:16> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x1349284d8 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x1349284c0 <col:3> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x1349284a0 <col:3> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x1349284f0 <col:16> 'int' 0     |-BinaryOperator 0x1349285a0 <line:9:2, col:14> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x134928568 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x134928550 <col:3> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x134928530 <col:3> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x134928580 <col:14> 'int' 0     `-WhileStmt 0x136809628 <line:10:2, line:40:2>       |-RecoveryExpr 0x1349285f0 <line:10:9, col:70> '_Bool' contains-errors       `-CompoundStmt 0x136809608 <col:73, line:40:2>         |-IfStmt 0x134928758 <line:12:3, col:42>         | |-BinaryOperator 0x134928730 <col:7, col:19> 'int' contains-errors '!='         | | |-CXXDependentScopeMemberExpr 0x1349286c8 <col:7, col:13> '<dependent type>' contains-errors lvalue ->type         | | | `-RecoveryExpr 0x1349286a8 <col:7> '<dependent type>' contains-errors lvalue         | | `-RecoveryExpr 0x134928710 <col:19> '<dependent type>' contains-errors lvalue         | `-ContinueStmt 0x134928750 <col:42>         `-WhileStmt 0x1368095e8 <line:14:3, line:39:3>           |-RecoveryExpr 0x1349287a8 <line:14:10, col:72> '_Bool' contains-errors           `-CompoundStmt 0x1368095d0 <col:75, line:39:3>             `-IfStmt 0x136809228 <line:17:4, line:18:5>               |-RecoveryExpr 0x136809200 <line:17:8, col:31> '_Bool' contains-errors               `-ContinueStmt 0x136809220 <line:18:5> ","21231":"`-FunctionDecl 0x12005f798  col:15 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern   |-ParmVarDecl 0x12005f898 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x12005f900 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x12005f968 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x12005f840 <<invalid sloc>> Implicit 888 ","20998":"`-FunctionDecl 0x1361281c8  line:1:6 invalid imap_code 'int (const char *)'   |-ParmVarDecl 0x1361280f0 <col:16, col:28> col:28 used s 'const char *'   `-CompoundStmt 0x1361285d0 <line:2:1, line:4:1>     `-ReturnStmt 0x1361285c0 <line:3:3, col:27>       `-BinaryOperator 0x1361285a0 <col:10, col:27> 'int' contains-errors '=='         |-CallExpr 0x136128540 <col:10, col:22> 'int'         | |-ImplicitCastExpr 0x136128528 <col:10> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x1361283d0 <col:10> 'int ()' Function 0x136128318 'cmd_status' 'int ()'         | `-ImplicitCastExpr 0x136128568 <col:21> 'const char *' <LValueToRValue>         |   `-DeclRefExpr 0x1361283f0 <col:21> 'const char *' lvalue ParmVar 0x1361280f0 's' 'const char *'         `-RecoveryExpr 0x136128580 <col:27> '<dependent type>' contains-errors lvalue ","20420":"`-FunctionDecl 0x14c06cca0  col:13 implicit used strtol 'long (const char *, char **, int)' extern   |-ParmVarDecl 0x14c06cda0 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x14c06ce08 <<invalid sloc>> <invalid sloc> 'char **'   |-ParmVarDecl 0x14c06ce70 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x14c06cd48 <<invalid sloc>> Implicit 877 ","20821":"`-FunctionDecl 0x153142610  col:19 implicit used strtol 'long (const char *, char **, int)' extern   |-ParmVarDecl 0x153142710 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x153142778 <<invalid sloc>> <invalid sloc> 'char **'   |-ParmVarDecl 0x153143000 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x1531426b8 <<invalid sloc>> Implicit 877 ","20415":"`-FunctionDecl 0x15791e038  line:1:12 latest_repeatable_unsubmitted_iter 'int (void *, void *)' static   |-ParmVarDecl 0x15791ded8 <col:47, col:53> col:53 used data 'void *'   |-ParmVarDecl 0x15791df58 <col:59, col:65> col:65 used val 'void *'   `-CompoundStmt 0x157938c10 <line:2:1, line:19:1>     |-IfStmt 0x157938bc0 <line:6:5, line:17:5>     | |-BinaryOperator 0x1579386e8 <line:6:9, line:8:51> 'int' contains-errors '&&'     | | |-BinaryOperator 0x157938568 <line:6:9, line:7:41> 'int' contains-errors '&&'     | | | |-BinaryOperator 0x1579384b8 <line:6:9, col:40> 'int' contains-errors '&&'     | | | | |-CXXDependentScopeMemberExpr 0x157938390 <col:9, col:17> '<dependent type>' contains-errors lvalue ->task     | | | | | `-RecoveryExpr 0x157938370 <col:9> '<dependent type>' contains-errors lvalue     | | | | `-UnaryOperator 0x1579384a0 <col:25, col:40> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | |   `-ImplicitCastExpr 0x157938488 <col:26, col:40> '<dependent type>' contains-errors <LValueToRValue>     | | | |     `-CXXDependentScopeMemberExpr 0x157938440 <col:26, col:40> '<dependent type>' contains-errors lvalue ->worker_done     | | | |       `-CXXDependentScopeMemberExpr 0x1579383f8 <col:26, col:34> '<dependent type>' contains-errors lvalue ->task     | | | |         `-RecoveryExpr 0x1579383d8 <col:26> '<dependent type>' contains-errors lvalue     | | | `-CallExpr 0x157938540 <line:7:12, col:41> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x15791e430 <col:12> 'int ()' Function 0x15791e378 'h2_task_can_redo' 'int ()'     | | |   `-CXXDependentScopeMemberExpr 0x1579384f8 <col:29, col:37> '<dependent type>' contains-errors lvalue ->task     | | |     `-RecoveryExpr 0x1579384d8 <col:29> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x1579386d0 <line:8:12, col:51> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-CallExpr 0x1579386a0 <col:13, col:51> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x15791e5d8 <col:13> 'int ()' Function 0x15791e520 'h2_ihash_get' 'int ()'     | |     |-CXXDependentScopeMemberExpr 0x1579385f0 <col:26, col:34> '<dependent type>' contains-errors lvalue ->sredo     | |     | `-CXXDependentScopeMemberExpr 0x1579385a8 <col:26, col:31> '<dependent type>' contains-errors lvalue ->m     | |     |   `-RecoveryExpr 0x157938588 <col:26> '<dependent type>' contains-errors lvalue     | |     `-CXXDependentScopeMemberExpr 0x157938658 <col:41, col:49> '<dependent type>' contains-errors lvalue ->id     | |       `-RecoveryExpr 0x157938638 <col:41> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x157938ba8 <col:54, line:17:5>     |   `-IfStmt 0x157938b88 <line:9:9, line:16:9>     |     |-UnaryOperator 0x1579388a8 <line:9:13, col:39> '<dependent type>' contains-errors prefix '!' cannot overflow     |     | `-CallExpr 0x157938880 <col:14, col:39> '<dependent type>' contains-errors     |     |   |-DeclRefExpr 0x1579387e8 <col:14> 'int ()' Function 0x157938730 'h2_stream_is_ready' 'int ()'     |     |   `-RecoveryExpr 0x157938860 <col:33> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x157938b70 <col:42, line:16:9>     |       `-IfStmt 0x157938b50 <line:11:13, line:15:13>     |         |-RecoveryExpr 0x157938b08 <line:11:17, line:12:77> '_Bool' contains-errors     |         `-CompoundStmt 0x157938b40 <col:80, line:15:13>     `-ReturnStmt 0x157938c00 <line:18:5, col:12>       `-IntegerLiteral 0x157938be0 <col:12> 'int' 1 ","21105":"`-FunctionDecl 0x12d00de80  line:1:13 invalid event_nick_invalid 'void (int *, const char *)' static   |-ParmVarDecl 0x12d00dd28 <col:32, col:48> col:48 invalid server 'int *'   |-ParmVarDecl 0x12d00dda8 <col:56, col:68> col:68 data 'const char *'   `-CompoundStmt 0x12d00e168 <line:2:1, line:5:1> ","20939":"`-FunctionDecl 0x143142b28  col:9 implicit used sprintf 'int (char *, const char *, ...)' extern   |-ParmVarDecl 0x143142c28 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x143142c90 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x143142bd0 <<invalid sloc>> Implicit 906   `-FormatAttr 0x143142d08 <col:9> Implicit printf 2 3 ","20786":"`-FunctionDecl 0x131928378  line:1:1 invalid ServiceCtrlInteractive 'int (int, int, int, int)'   |-ParmVarDecl 0x1319280f0 <col:24, col:30> col:30 invalid ctrl_code 'int'   |-ParmVarDecl 0x131928170 <col:41, col:47> col:47 invalid event 'int'   |-ParmVarDecl 0x1319281f0 <col:54, col:61> col:61 invalid data 'int'   |-ParmVarDecl 0x131928270 <col:67, col:74> col:74 invalid ctx 'int'   `-CompoundStmt 0x1320084e0 <line:2:1, line:21:1>     `-SwitchStmt 0x1319284b0 <line:4:5, line:20:5>       |-ImplicitCastExpr 0x131928498 <line:4:13> '<dependent type>' contains-errors <LValueToRValue>       | `-RecoveryExpr 0x131928478 <col:13> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x1320084a8 <line:5:5, line:20:5>         |-CallExpr 0x131928720 <line:8:13, col:48> '<dependent type>' contains-errors         | |-DeclRefExpr 0x131928660 <col:13> 'int ()' Function 0x1319285a8 'ReportStatusToSCMgr' 'int ()'         | |-RecoveryExpr 0x1319286e0 <col:33> '<dependent type>' contains-errors lvalue         | `-RecoveryExpr 0x131928700 <col:42> '<dependent type>' contains-errors lvalue         |-IfStmt 0x132008378 <line:9:13, line:12:13>         | |-RecoveryExpr 0x131928768 <line:9:17> '<dependent type>' contains-errors lvalue         | `-CompoundStmt 0x132008360 <line:10:13, line:12:13>         |   `-CallExpr 0x132008338 <line:11:17, col:36> '<dependent type>' contains-errors         |     |-DeclRefExpr 0x1320082b8 <col:17> 'int ()' Function 0x132008200 'SetEvent' 'int ()'         |     `-RecoveryExpr 0x132008318 <col:26> '<dependent type>' contains-errors lvalue         |-ReturnStmt 0x1320083d0 <line:13:13, col:20>         | `-RecoveryExpr 0x1320083b0 <col:20> '<dependent type>' contains-errors lvalue         |-ReturnStmt 0x132008430 <line:16:13, col:20>         | `-RecoveryExpr 0x132008410 <col:20> '<dependent type>' contains-errors lvalue         `-DefaultStmt 0x132008488 <line:18:9, line:19:20>           `-ReturnStmt 0x132008478 <col:13, col:20>             `-RecoveryExpr 0x132008458 <col:20> '<dependent type>' contains-errors lvalue ","21018":"`-FunctionDecl 0x12600dd18  line:1:1 SYSCALL_DEFINE5 'int ()'   `-CompoundStmt 0x12600e298 <line:4:1, line:9:1>     |-IfStmt 0x12600df78 <line:5:2, line:6:11>     | |-BinaryOperator 0x12600deb0 <line:5:6, col:14> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x12600de70 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12600de90 <col:14> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12600df68 <line:6:3, col:11>     |   `-UnaryOperator 0x12600df50 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12600df38 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12600df18 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12600e288 <line:8:2, col:60>       `-CallExpr 0x12600e238 <col:9, col:60> '<dependent type>' contains-errors         |-DeclRefExpr 0x12600e078 <col:9> 'int ()' Function 0x12600dfc0 '__sys_recvmmsg' 'int ()'         |-RecoveryExpr 0x12600e178 <col:24> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x12600e198 <col:28> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x12600e1b8 <col:34> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x12600e1d8 <col:40> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x12600e1f8 <col:47> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x12600e218 <col:53> '<dependent type>' contains-errors lvalue ","20336":"`-FunctionDecl 0x145145b48  line:1:1 flow_wc_map 'int (const struct flow *, struct flowmap *)'   |-ParmVarDecl 0x145129448 <col:13, col:32> col:32 used flow 'const struct flow *'   |-ParmVarDecl 0x145145a28 <col:38, col:54> col:54 used map 'struct flowmap *'   `-CompoundStmt 0x14580ae60 <line:2:1, line:97:1>     |-CallExpr 0x145145e50 <line:4:5, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x145145d70 <col:5> 'int ()' Function 0x145145cb8 'BUILD_ASSERT_DECL' 'int ()'     | `-BinaryOperator 0x145145e30 <col:23, col:38> 'int' contains-errors '=='     |   |-RecoveryExpr 0x145145e10 <col:23> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x145145da8 <col:38> 'int' 41     |-CallExpr 0x145145fe8 <line:6:5, col:21> 'int'     | |-ImplicitCastExpr 0x145145fd0 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x145145f58 <col:5> 'int ()' Function 0x145145ea0 'flowmap_init' 'int ()'     | `-ImplicitCastExpr 0x145146010 <col:18> 'struct flowmap *' <LValueToRValue>     |   `-DeclRefExpr 0x145145f78 <col:18> 'struct flowmap *' lvalue ParmVar 0x145145a28 'map' 'struct flowmap *'     |-IfStmt 0x1458093d8 <line:8:5, line:19:5>     | |-CallExpr 0x1451461a0 <line:8:9, col:42> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x145146108 <col:9> 'int ()' Function 0x145146050 'flow_tnl_dst_is_set' 'int ()'     | | `-UnaryOperator 0x145146188 <col:29, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x145146160 <col:30, col:36> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x145146128 <col:30> 'const struct flow *' lvalue ParmVar 0x145129448 'flow' 'const struct flow *'     | `-CompoundStmt 0x1458093c0 <col:45, line:19:5>     |   `-IfStmt 0x145809390 <line:10:9, line:18:9> has_else     |     |-RecoveryExpr 0x1451464f8 <line:10:13, col:52> '_Bool' contains-errors     |     |-CompoundStmt 0x1451468d0 <col:55, line:14:9>     |     | `-IfStmt 0x1451468b0 <line:11:13, line:13:13>     |     |   |-CXXDependentScopeMemberExpr 0x145146608 <line:11:17, col:47> '<dependent type>' contains-errors lvalue .map     |     |   | `-CXXDependentScopeMemberExpr 0x1451465c0 <col:17, col:39> '<dependent type>' contains-errors lvalue .present     |     |   |   `-CXXDependentScopeMemberExpr 0x145146578 <col:17, col:30> '<dependent type>' contains-errors lvalue .metadata     |     |   |     `-RecoveryExpr 0x145146550 <col:17, col:23> '<dependent type>' contains-errors lvalue     |     |   |       `-DeclRefExpr 0x145146518 <col:17> 'const struct flow *' lvalue ParmVar 0x145129448 'flow' 'const struct flow *'     |     |   `-CompoundStmt 0x145146898 <col:52, line:13:13>     |     |     `-CallExpr 0x145146868 <line:12:17, col:49> '<dependent type>' contains-errors     |     |       |-DeclRefExpr 0x145146730 <col:17> 'int ()' Function 0x145146678 'FLOWMAP_SET' 'int ()'     |     |       |-DeclRefExpr 0x145146750 <col:29> 'struct flowmap *' lvalue ParmVar 0x145145a28 'map' 'struct flowmap *'     |     |       `-CXXDependentScopeMemberExpr 0x145146820 <col:34, col:41> '<dependent type>' contains-errors lvalue .metadata     |     |         `-RecoveryExpr 0x145146800 <col:34> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x145809370 <line:14:16, line:18:9>     |       |-CallExpr 0x145808f70 <line:15:13, col:57> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x1451468e8 <col:13> 'int ()' Function 0x145146678 'FLOWMAP_SET' 'int ()'     |       | |-DeclRefExpr 0x145146908 <col:25> 'struct flowmap *' lvalue ParmVar 0x145145a28 'map' 'struct flowmap *'     |       | `-CXXDependentScopeMemberExpr 0x145808f28 <col:30, col:54> '<dependent type>' contains-errors lvalue .len     |       |   `-CXXDependentScopeMemberExpr 0x145808ee0 <col:30, col:46> '<dependent type>' contains-errors lvalue .present     |       |     `-CXXDependentScopeMemberExpr 0x145808e98 <col:30, col:37> '<dependent type>' contains-errors lvalue .metadata     |       |       `-RecoveryExpr 0x145808e78 <col:30> '<dependent type>' contains-errors lvalue     |       `-CallExpr 0x145809338 <line:16:13, line:17:60> '<dependent type>' contains-errors     |         |-DeclRefExpr 0x145808fa0 <line:16:13> 'int ()' Function 0x1451461f0 'FLOWMAP_SET__' 'int ()'     |         |-DeclRefExpr 0x145808fc0 <col:27> 'struct flowmap *' lvalue ParmVar 0x145145a28 'map' 'struct flowmap *'     |         |-CXXDependentScopeMemberExpr 0x1458092f0 <col:32, col:53> '<dependent type>' contains-errors lvalue .gnv     |         | `-CXXDependentScopeMemberExpr 0x1458092a8 <col:32, col:48> '<dependent type>' contains-errors lvalue .opts     |         |   `-CXXDependentScopeMemberExpr 0x145809260 <col:32, col:39> '<dependent type>' contains-errors lvalue .metadata     |         |     `-RecoveryExpr 0x145809240 <col:32> '<dependent type>' contains-errors lvalue     |         `-CXXDependentScopeMemberExpr 0x1458091c0 <line:17:27, col:57> '<dependent type>' contains-errors lvalue .len     |           `-CXXDependentScopeMemberExpr 0x145809178 <col:27, col:49> '<dependent type>' contains-errors lvalue .present     |             `-CXXDependentScopeMemberExpr 0x145809130 <col:27, col:40> '<dependent type>' contains-errors lvalue .metadata     |               `-RecoveryExpr 0x145809108 <col:27, col:33> '<dependent type>' contains-errors lvalue     |                 `-DeclRefExpr 0x1458090d0 <col:27> 'const struct flow *' lvalue ParmVar 0x145129448 'flow' 'const struct flow *'     `-IfStmt 0x14580ae30 <line:38:5, line:96:5> has_else       |-RecoveryExpr 0x1458099d8 <line:38:9, col:55> '_Bool' contains-errors       |-CompoundStmt 0x14580a028 <col:58, line:58:5>       | `-IfStmt 0x145809ff8 <line:53:9, line:57:9> has_else       |   |-RecoveryExpr 0x145809f38 <line:53:13, col:56> '_Bool' contains-errors       |   |-CompoundStmt 0x145809f98 <col:59, line:55:9>       |   `-CompoundStmt 0x145809fe8 <col:16, line:57:9>       `-IfStmt 0x14580ae00 <line:58:12, line:96:5> has_else         |-RecoveryExpr 0x14580a0c0 <line:58:16, col:52> '_Bool' contains-errors         |-CompoundStmt 0x14580a710 <col:55, line:81:5>         | `-IfStmt 0x14580a6e0 <line:69:9, line:80:9> has_else         |   |-RecoveryExpr 0x14580a460 <line:69:13, col:43> '_Bool' contains-errors         |   |-CompoundStmt 0x14580a540 <col:46, line:73:9>         |   `-CompoundStmt 0x14580a6d0 <col:16, line:80:9>         `-IfStmt 0x14580adb0 <line:81:12, line:96:5> has_else           |-CallExpr 0x14580a888 <line:81:16, col:43> '<dependent type>' contains-errors           | |-DeclRefExpr 0x14580a808 <col:16> 'int ()' Function 0x14580a750 'eth_type_mpls' 'int ()'           | `-RecoveryExpr 0x14580a860 <col:30, col:36> '<dependent type>' contains-errors lvalue           |   `-DeclRefExpr 0x14580a828 <col:30> 'const struct flow *' lvalue ParmVar 0x145129448 'flow' 'const struct flow *'           |-CompoundStmt 0x14580a8f0 <col:46, line:83:5>           `-IfStmt 0x14580ad80 <col:12, line:96:5> has_else             |-RecoveryExpr 0x14580aa00 <line:83:16, line:84:52> '_Bool' contains-errors             |-CompoundStmt 0x14580ab60 <col:55, line:90:5>             `-IfStmt 0x14580ad60 <col:12, line:96:5>               |-RecoveryExpr 0x14580abf0 <line:90:16, col:51> '_Bool' contains-errors               `-CompoundStmt 0x14580ad50 <col:54, line:96:5> ","21215":"`-FunctionDecl 0x12d80de88  line:1:8 invalid xtra_box_read 'int (int *, int *)'   |-ParmVarDecl 0x12d80dd28 <col:22, col:30> col:30 invalid s 'int *'   |-ParmVarDecl 0x12d80dda8 <col:33, col:47> col:47 invalid bs 'int *'   `-CompoundStmt 0x12d827f50 <line:2:1, line:57:1>     `-WhileStmt 0x12d827f30 <line:4:2, line:55:2>       |-CXXDependentScopeMemberExpr 0x12d80dff0 <line:4:9, col:14> '<dependent type>' contains-errors lvalue ->size       | `-RecoveryExpr 0x12d80dfd0 <col:9> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x12d827ef0 <col:20, line:55:2>         |-DeclStmt 0x12d80e1d8 <line:8:3, col:31>         | |-VarDecl 0x12d80e068 <col:3, col:14> col:9 used data 'char *' cinit         | | `-RecoveryExpr 0x12d80e0e8 <col:14> '<dependent type>' contains-errors lvalue         | `-VarDecl 0x12d80e120 <col:3, col:27> col:21 used data2 'char *' cinit         |   `-RecoveryExpr 0x12d80e1a0 <col:27> '<dependent type>' contains-errors lvalue         |-CallExpr 0x12d827400 <line:9:3, col:35> '<dependent type>' contains-errors         | |-DeclRefExpr 0x12d80e350 <col:3> 'int ()' Function 0x12d80e298 'ISOM_DECREASE_SIZE_NO_ERR' 'int ()'         | |-RecoveryExpr 0x12d80e3d8 <col:29> '<dependent type>' contains-errors lvalue         | `-IntegerLiteral 0x12d80e388 <col:34> 'int' 8         |-IfStmt 0x12d827510 <line:12:3, col:28>         | |-BinaryOperator 0x12d8274a8 <col:7, col:18> 'int' contains-errors '<'         | | |-RecoveryExpr 0x12d827488 <col:7> '<dependent type>' contains-errors lvalue         | | `-IntegerLiteral 0x12d827448 <col:18> 'int' 8         | `-ReturnStmt 0x12d827500 <col:21, col:28>         |   `-RecoveryExpr 0x12d8274e0 <col:28> '<dependent type>' contains-errors lvalue         |-IfStmt 0x12d827580 <line:15:3, line:17:3>         | |-RecoveryExpr 0x12d827550 <line:15:7, col:51> '_Bool' contains-errors         | `-CompoundStmt 0x12d827570 <col:54, line:17:3>         |-IfStmt 0x12d827aa8 <line:30:3, line:43:3> has_else         | |-RecoveryExpr 0x12d8277a0 <line:30:7, col:17> '_Bool' contains-errors         | |-CompoundStmt 0x12d827a68 <col:20, line:41:3>         | `-CompoundStmt 0x12d827a98 <col:10, line:43:3>         `-IfStmt 0x12d827ed0 <line:52:3, line:54:3>           |-RecoveryExpr 0x12d827d18 <line:52:7> '_Bool' contains-errors           `-CompoundStmt 0x12d827ec0 <col:17, line:54:3> ","21208":"`-FunctionDecl 0x15700a748  col:5 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x15700a848 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x15700a7f0 <<invalid sloc>> Implicit 873 ","20706":"`-FunctionDecl 0x13b928198  line:1:1 DnDCreateRootStagingDirectory 'int (void)'   `-CompoundStmt 0x13b941508 <line:2:1, line:26:1>     |-DeclStmt 0x13b928308 <line:3:4, col:20>     | `-VarDecl 0x13b9282a0 <col:4, col:16> col:16 used root 'const char *'     |-BinaryOperator 0x13b940b40 <line:6:4, col:27> 'const char *' '='     | |-DeclRefExpr 0x13b928320 <col:4> 'const char *' lvalue Var 0x13b9282a0 'root' 'const char *'     | `-ImplicitCastExpr 0x13b9284f8 <col:11, col:27> 'const char *' <IntegralToPointer>     |   `-CallExpr 0x13b9284d8 <col:11, col:27> 'int'     |     `-ImplicitCastExpr 0x13b9284c0 <col:11> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x13b928470 <col:11> 'int ()' Function 0x13b9283b8 'DnD_GetFileRoot' 'int ()'     |-IfStmt 0x13b940c10 <line:7:4, line:9:4>     | |-UnaryOperator 0x13b940b98 <line:7:8, col:9> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13b940b80 <col:9> 'const char *' <LValueToRValue>     | |   `-DeclRefExpr 0x13b940b60 <col:9> 'const char *' lvalue Var 0x13b9282a0 'root' 'const char *'     | `-CompoundStmt 0x13b940bf8 <col:15, line:9:4>     |   `-ReturnStmt 0x13b940be8 <line:8:7, col:14>     |     `-RecoveryExpr 0x13b940bc8 <col:14> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13b941478 <line:11:4, line:23:4> has_else     | |-CallExpr 0x13b940d68 <line:11:8, col:24> 'int'     | | |-ImplicitCastExpr 0x13b940d50 <col:8> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x13b940d10 <col:8> 'int ()' Function 0x13b940c58 'File_Exists' 'int ()'     | | `-ImplicitCastExpr 0x13b940d90 <col:20> 'const char *' <LValueToRValue>     | |   `-DeclRefExpr 0x13b940d30 <col:20> 'const char *' lvalue Var 0x13b9282a0 'root' 'const char *'     | |-CompoundStmt 0x13b941168 <col:27, line:17:4>     | | `-IfStmt 0x13b941148 <line:12:7, line:16:7>     | |   |-BinaryOperator 0x13b9410c8 <line:12:11, line:13:43> 'int' '&&'     | |   | |-UnaryOperator 0x13b940f20 <line:12:11, col:33> 'int' prefix '!' cannot overflow     | |   | | `-CallExpr 0x13b940ee0 <col:12, col:33> 'int'     | |   | |   |-ImplicitCastExpr 0x13b940ec8 <col:12> 'int (*)()' <FunctionToPointerDecay>     | |   | |   | `-DeclRefExpr 0x13b940e88 <col:12> 'int ()' Function 0x13b940dd0 'DnDRootDirUsable' 'int ()'     | |   | |   `-ImplicitCastExpr 0x13b940f08 <col:29> 'const char *' <LValueToRValue>     | |   | |     `-DeclRefExpr 0x13b940ea8 <col:29> 'const char *' lvalue Var 0x13b9282a0 'root' 'const char *'     | |   | `-UnaryOperator 0x13b9410b0 <line:13:11, col:43> 'int' prefix '!' cannot overflow     | |   |   `-CallExpr 0x13b941070 <col:12, col:43> 'int'     | |   |     |-ImplicitCastExpr 0x13b941058 <col:12> 'int (*)()' <FunctionToPointerDecay>     | |   |     | `-DeclRefExpr 0x13b941018 <col:12> 'int ()' Function 0x13b940f60 'DnDSetPermissionsOnRootDir' 'int ()'     | |   |     `-ImplicitCastExpr 0x13b941098 <col:39> 'const char *' <LValueToRValue>     | |   |       `-DeclRefExpr 0x13b941038 <col:39> 'const char *' lvalue Var 0x13b9282a0 'root' 'const char *'     | |   `-CompoundStmt 0x13b941130 <col:46, line:16:7>     | |     `-ReturnStmt 0x13b941120 <line:15:10, col:17>     | |       `-RecoveryExpr 0x13b941100 <col:17> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13b941460 <line:17:11, line:23:4>     |   `-IfStmt 0x13b941440 <line:18:7, line:22:7>     |     |-BinaryOperator 0x13b9413c0 <line:18:11, line:19:43> 'int' '||'     |     | |-UnaryOperator 0x13b9412f8 <line:18:11, col:37> 'int' prefix '!' cannot overflow     |     | | `-CallExpr 0x13b9412b8 <col:12, col:37> 'int'     |     | |   |-ImplicitCastExpr 0x13b9412a0 <col:12> 'int (*)()' <FunctionToPointerDecay>     |     | |   | `-DeclRefExpr 0x13b941260 <col:12> 'int ()' Function 0x13b9411a8 'File_CreateDirectory' 'int ()'     |     | |   `-ImplicitCastExpr 0x13b9412e0 <col:33> 'const char *' <LValueToRValue>     |     | |     `-DeclRefExpr 0x13b941280 <col:33> 'const char *' lvalue Var 0x13b9282a0 'root' 'const char *'     |     | `-UnaryOperator 0x13b9413a8 <line:19:11, col:43> 'int' prefix '!' cannot overflow     |     |   `-CallExpr 0x13b941368 <col:12, col:43> 'int'     |     |     |-ImplicitCastExpr 0x13b941350 <col:12> 'int (*)()' <FunctionToPointerDecay>     |     |     | `-DeclRefExpr 0x13b941310 <col:12> 'int ()' Function 0x13b940f60 'DnDSetPermissionsOnRootDir' 'int ()'     |     |     `-ImplicitCastExpr 0x13b941390 <col:39> 'const char *' <LValueToRValue>     |     |       `-DeclRefExpr 0x13b941330 <col:39> 'const char *' lvalue Var 0x13b9282a0 'root' 'const char *'     |     `-CompoundStmt 0x13b941428 <col:46, line:22:7>     |       `-ReturnStmt 0x13b941418 <line:21:10, col:17>     |         `-RecoveryExpr 0x13b9413f8 <col:17> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x13b9414f8 <line:25:4, col:11>       `-ImplicitCastExpr 0x13b9414e0 <col:11> 'int' <PointerToIntegral>         `-ImplicitCastExpr 0x13b9414c8 <col:11> 'const char *' <LValueToRValue>           `-DeclRefExpr 0x13b9414a8 <col:11> 'const char *' lvalue Var 0x13b9282a0 'root' 'const char *' ","21005":"`-FunctionDecl 0x128026b18  col:5 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x128026c18 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x128026bc0 <<invalid sloc>> Implicit 873 ","20944":"`-FunctionDecl 0x1500f3058  line:1:5 invalid ListeningStartedDialer 'int (int, int)'   |-ParmVarDecl 0x1500f2ef0 <col:28, col:36> col:36 invalid aHandler 'int'   |-ParmVarDecl 0x1500f2f70 <col:46, <invalid sloc>> col:50 invalid 'int'   `-CompoundStmt 0x1500f3110 <line:2:77, col:78> ","20463":"`-FunctionDecl 0x155026ca0  col:33 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x155026da0 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x155026d48 <<invalid sloc>> Implicit 902 ","20606":"`-FunctionDecl 0x107026bf8  col:3 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x107026cf8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x107026d60 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x107026dc8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x107026ca0 <<invalid sloc>> Implicit 900 ","20454":"`-FunctionDecl 0x13c80dda8  line:1:1 PS_CLOSE_FUNC 'int (int)'   |-ParmVarDecl 0x13c80dcd8 <col:15> col:15 files 'int'   `-CompoundStmt 0x13c826900 <line:2:1, line:17:1>     |-CallExpr 0x13c80e050 <line:5:2, col:21> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13c80dfd0 <col:2> 'int ()' Function 0x13c80df18 'ps_files_close' 'int ()'     | `-RecoveryExpr 0x13c80e030 <col:17> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13c80e388 <line:7:2, line:10:2>     | |-CXXDependentScopeMemberExpr 0x13c80e0f8 <line:7:6, col:12> '<dependent type>' contains-errors lvalue ->lastkey     | | `-RecoveryExpr 0x13c80e0d8 <col:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13c80e370 <col:21, line:10:2>     |   `-CallExpr 0x13c80e330 <line:8:3, col:22> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x13c80e220 <col:3> 'int ()' Function 0x13c80e168 'efree' 'int ()'     |     `-CXXDependentScopeMemberExpr 0x13c80e2e8 <col:9, col:15> '<dependent type>' contains-errors lvalue ->lastkey     |       `-RecoveryExpr 0x13c80e2c8 <col:9> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13c8266d8 <line:12:2, col:21> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13c80e3a8 <col:2> 'int ()' Function 0x13c80e168 'efree' 'int ()'     | `-CXXDependentScopeMemberExpr 0x13c826690 <col:8, col:14> '<dependent type>' contains-errors lvalue ->basedir     |   `-RecoveryExpr 0x13c826670 <col:8> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13c826780 <line:13:2, col:12> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13c826700 <col:2> 'int ()' Function 0x13c80e168 'efree' 'int ()'     | `-RecoveryExpr 0x13c826760 <col:8> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13c826898 <line:14:2, col:14> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x13c826860 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x13c826848 <col:3> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x13c826828 <col:3> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x13c826878 <col:14> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x13c8268f0 <line:16:2, col:9>       `-RecoveryExpr 0x13c8268d0 <col:9> '<dependent type>' contains-errors lvalue ","21039":"`-FunctionDecl 0x14c941910  col:3 implicit used printf 'int (const char *, ...)' extern   |-ParmVarDecl 0x14c941a10 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x14c9419b8 <<invalid sloc>> Implicit 903   `-FormatAttr 0x14c941a80 <col:3> Implicit printf 1 2 ","20629":"`-FunctionDecl 0x15500de80  line:1:13 invalid gx_ttfExport__MoveTo 'void (int *, int *)' static   |-ParmVarDecl 0x15500dd28 <col:34, col:45> col:45 invalid self 'int *'   |-ParmVarDecl 0x15500dda8 <col:51, col:63> col:63 invalid p 'int *'   `-CompoundStmt 0x154922ce8 <line:2:1, line:7:1> ","20436":"`-FunctionDecl 0x14902a800  line:1:5 selinux_netlbl_inode_permission 'int (struct inode *, int)'   |-ParmVarDecl 0x14900e248 <col:37, col:51> col:51 used inode 'struct inode *'   |-ParmVarDecl 0x14900e2c8 <col:58, col:62> col:62 used mask 'int'   `-CompoundStmt 0x14902e318 <line:2:1, line:28:1>     |-DeclStmt 0x14902a980 <line:3:2, col:8>     | `-VarDecl 0x14902a918 <col:2, col:6> col:6 used rc 'int'     |-DeclStmt 0x14902ab88 <line:4:2, col:17>     | |-RecordDecl 0x14902a998 <col:2, col:9> col:9 struct sock     | `-VarDecl 0x14902ab08 <col:2, col:15> col:15 used sk 'struct sock *'     |-DeclStmt 0x14902ad88 <line:5:2, col:21>     | |-RecordDecl 0x14902aba0 <col:2, col:9> col:9 struct socket     | `-VarDecl 0x14902ad08 <col:2, col:17> col:17 used sock 'struct socket *'     |-DeclStmt 0x14902af88 <line:6:2, col:34>     | |-RecordDecl 0x14902ada0 <col:2, col:9> col:9 struct sk_security_struct     | `-VarDecl 0x14902af08 <col:2, col:29> col:29 used sksec 'struct sk_security_struct *'     |-IfStmt 0x14902b270 <line:8:2, line:10:10>     | |-RecoveryExpr 0x14902b220 <line:8:6, line:9:45> '_Bool' contains-errors     | `-ReturnStmt 0x14902b260 <line:10:3, col:10>     |   `-IntegerLiteral 0x14902b240 <col:10> 'int' 0     |-BinaryOperator 0x14902b470 <line:12:2, col:23> 'struct socket *' '='     | |-DeclRefExpr 0x14902b290 <col:2> 'struct socket *' lvalue Var 0x14902ad08 'sock' 'struct socket *'     | `-ImplicitCastExpr 0x14902b458 <col:9, col:23> 'struct socket *' <IntegralToPointer>     |   `-CallExpr 0x14902b418 <col:9, col:23> 'int'     |     |-ImplicitCastExpr 0x14902b400 <col:9> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14902b390 <col:9> 'int ()' Function 0x14902b2d8 'SOCKET_I' 'int ()'     |     `-ImplicitCastExpr 0x14902b440 <col:18> 'struct inode *' <LValueToRValue>     |       `-DeclRefExpr 0x14902b3b0 <col:18> 'struct inode *' lvalue ParmVar 0x14900e248 'inode' 'struct inode *'     |-BinaryOperator 0x14902b510 <line:13:2, col:13> 'struct sock *' contains-errors '='     | |-DeclRefExpr 0x14902b490 <col:2> 'struct sock *' lvalue Var 0x14902ab08 'sk' 'struct sock *'     | `-RecoveryExpr 0x14902b4e8 <col:7, col:13> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14902b4b0 <col:7> 'struct socket *' lvalue Var 0x14902ad08 'sock' 'struct socket *'     |-BinaryOperator 0x14902b5b0 <line:14:2, col:14> 'struct sk_security_struct *' contains-errors '='     | |-DeclRefExpr 0x14902b530 <col:2> 'struct sk_security_struct *' lvalue Var 0x14902af08 'sksec' 'struct sk_security_struct *'     | `-RecoveryExpr 0x14902b588 <col:10, col:14> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14902b550 <col:10> 'struct sock *' lvalue Var 0x14902ab08 'sk' 'struct sock *'     |-IfStmt 0x14902b6d8 <line:15:2, line:16:10>     | |-BinaryOperator 0x14902b688 <line:15:6, col:27> 'int' contains-errors '!='     | | |-RecoveryExpr 0x14902b608 <col:6, col:13> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x14902b5d0 <col:6> 'struct sk_security_struct *' lvalue Var 0x14902af08 'sksec' 'struct sk_security_struct *'     | | `-RecoveryExpr 0x14902b668 <col:27> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14902b6c8 <line:16:3, col:10>     |   `-IntegerLiteral 0x14902b6a8 <col:10> 'int' 0     |-CallExpr 0x14902da18 <line:18:2, col:19> 'int'     | `-ImplicitCastExpr 0x14902da00 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x14902b7d8 <col:2> 'int ()' Function 0x14902b720 'local_bh_disable' 'int ()'     |-CallExpr 0x14902db70 <line:19:2, col:24> 'int'     | |-ImplicitCastExpr 0x14902db58 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14902db18 <col:2> 'int ()' Function 0x14902da60 'bh_lock_sock_nested' 'int ()'     | `-ImplicitCastExpr 0x14902db98 <col:22> 'struct sock *' <LValueToRValue>     |   `-DeclRefExpr 0x14902db38 <col:22> 'struct sock *' lvalue Var 0x14902ab08 'sk' 'struct sock *'     |-IfStmt 0x14902dff0 <line:20:2, line:23:8> has_else     | |-CallExpr 0x14902ddb0 <line:20:6, col:46> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14902dc90 <col:6> 'int ()' Function 0x14902dbd8 'likely' 'int ()'     | | `-BinaryOperator 0x14902dd90 <col:13, col:34> 'int' contains-errors '=='     | |   |-RecoveryExpr 0x14902dce8 <col:13, col:20> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x14902dcb0 <col:13> 'struct sk_security_struct *' lvalue Var 0x14902af08 'sksec' 'struct sk_security_struct *'     | |   `-RecoveryExpr 0x14902dd70 <col:34> '<dependent type>' contains-errors lvalue     | |-BinaryOperator 0x14902df70 <line:21:3, col:37> 'int' '='     | | |-DeclRefExpr 0x14902ddd8 <col:3> 'int' lvalue Var 0x14902a918 'rc' 'int'     | | `-CallExpr 0x14902df30 <col:8, col:37> 'int'     | |   |-ImplicitCastExpr 0x14902df18 <col:8> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x14902ded8 <col:8> 'int ()' Function 0x14902de20 'selinux_netlbl_sock_setsid' 'int ()'     | |   `-ImplicitCastExpr 0x14902df58 <col:35> 'struct sock *' <LValueToRValue>     | |     `-DeclRefExpr 0x14902def8 <col:35> 'struct sock *' lvalue Var 0x14902ab08 'sk' 'struct sock *'     | `-BinaryOperator 0x14902dfd0 <line:23:3, col:8> 'int' '='     |   |-DeclRefExpr 0x14902df90 <col:3> 'int' lvalue Var 0x14902a918 'rc' 'int'     |   `-IntegerLiteral 0x14902dfb0 <col:8> 'int' 0     |-CallExpr 0x14902e158 <line:24:2, col:19> 'int'     | |-ImplicitCastExpr 0x14902e140 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14902e100 <col:2> 'int ()' Function 0x14902e048 'bh_unlock_sock' 'int ()'     | `-ImplicitCastExpr 0x14902e180 <col:17> 'struct sock *' <LValueToRValue>     |   `-DeclRefExpr 0x14902e120 <col:17> 'struct sock *' lvalue Var 0x14902ab08 'sk' 'struct sock *'     |-CallExpr 0x14902e2b0 <line:25:2, col:18> 'int'     | `-ImplicitCastExpr 0x14902e298 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x14902e278 <col:2> 'int ()' Function 0x14902e1c0 'local_bh_enable' 'int ()'     `-ReturnStmt 0x14902e308 <line:27:2, col:9>       `-ImplicitCastExpr 0x14902e2f0 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x14902e2d0 <col:9> 'int' lvalue Var 0x14902a918 'rc' 'int' ","20363":"`-FunctionDecl 0x131012938  line:1:1 invalid decode_bits_in_field 'int (const int, const int, const int)'   |-ParmVarDecl 0x1310126f0 <col:22, col:34> col:34 invalid bit_offset 'const int'   |-ParmVarDecl 0x131012770 <col:46, col:57> col:57 used no_of_bits 'const int'   |-ParmVarDecl 0x1310127f0 <col:69, col:83> col:83 invalid value 'const int'   `-CompoundStmt 0x13280d8c0 <line:2:1, line:52:1>     |-DeclStmt 0x131012a78 <line:4:2, col:11>     | `-VarDecl 0x131012a10 <col:2, col:8> col:8 used str 'char *'     |-DeclStmt 0x131012bc8 <line:5:2, col:20>     | |-VarDecl 0x131012aa8 <col:2, col:6> col:6 used bit 'int'     | `-VarDecl 0x131012b28 <col:2, col:19> col:11 used str_p 'int' cinit     |   `-IntegerLiteral 0x131012b90 <col:19> 'int' 0     |-DeclStmt 0x131012c60 <line:6:2, col:7>     | `-VarDecl 0x131012bf8 <col:2, col:6> col:6 used i 'int'     |-DeclStmt 0x1328089b0 <line:7:2, col:36>     | `-VarDecl 0x131012c90 <col:2, col:35> col:6 used max_bits 'int' cinit     |   `-CallExpr 0x132808968 <col:17, col:35> 'int'     |     |-ImplicitCastExpr 0x132808950 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1328088b8 <col:17> 'int ()' Function 0x132808800 'MIN' 'int ()'     |     |-IntegerLiteral 0x1328088d8 <col:21> 'int' 64     |     `-ImplicitCastExpr 0x132808998 <col:25> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x1328088f8 <col:25> 'const int' lvalue ParmVar 0x131012770 'no_of_bits' 'const int'     |-BinaryOperator 0x132809348 <line:12:2, col:53> 'char *' '='     | |-DeclRefExpr 0x132808be0 <col:2> 'char *' lvalue Var 0x131012a10 'str' 'char *'     | `-CStyleCastExpr 0x132809320 <col:6, col:53> 'char *' <IntegralToPointer>     |   `-CallExpr 0x132808eb0 <col:14, col:53> 'int'     |     |-ImplicitCastExpr 0x132808e98 <col:14> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x132808ce0 <col:14> 'int ()' Function 0x132808c28 'wmem_alloc0' 'int ()'     |     |-CallExpr 0x132808e18 <col:26, col:44> 'int'     |     | `-ImplicitCastExpr 0x132808e00 <col:26> 'int (*)()' <FunctionToPointerDecay>     |     |   `-DeclRefExpr 0x132808de0 <col:26> 'int ()' Function 0x132808d28 'wmem_packet_scope' 'int ()'     |     `-BinaryOperator 0x132808e78 <col:47, col:51> 'int' '+'     |       |-IntegerLiteral 0x132808e38 <col:47> 'int' 256     |       `-IntegerLiteral 0x132808e58 <col:51> 'int' 64     |-ForStmt 0x13280c920 <line:13:2, line:20:2>     | |-BinaryOperator 0x1328093a8 <line:13:6, col:10> 'int' '='     | | |-DeclRefExpr 0x132809368 <col:6> 'int' lvalue Var 0x131012aa8 'bit' 'int'     | | `-IntegerLiteral 0x132809388 <col:10> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x132809500 <col:12, col:39> 'int' contains-errors '<'     | | |-ImplicitCastExpr 0x1328094e8 <col:12> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x1328093c8 <col:12> 'int' lvalue Var 0x131012aa8 'bit' 'int'     | | `-ParenExpr 0x1328094c8 <col:16, col:39> 'int' contains-errors     | |   `-CStyleCastExpr 0x1328094a0 <col:17, col:38> 'int' contains-errors <Dependent>     | |     `-ParenExpr 0x132809480 <col:22, col:38> '<dependent type>' contains-errors     | |       `-BinaryOperator 0x132809428 <col:23, col:34> '<dependent type>' contains-errors '&'     | |         |-RecoveryExpr 0x1328093e8 <col:23> '<dependent type>' contains-errors lvalue     | |         `-IntegerLiteral 0x132809408 <col:34> 'int' 7     | |-UnaryOperator 0x132809540 <col:41, col:44> 'int' postfix '++'     | | `-DeclRefExpr 0x132809520 <col:41> 'int' lvalue Var 0x131012aa8 'bit' 'int'     | `-CompoundStmt 0x13280c8f8 <col:47, line:20:2>     |   |-IfStmt 0x1328097b8 <line:14:3, line:17:3>     |   | |-BinaryOperator 0x132809660 <line:14:6, col:20> 'int' '&&'     |   | | |-ImplicitCastExpr 0x132809648 <col:6> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x132809558 <col:6> 'int' lvalue Var 0x131012aa8 'bit' 'int'     |   | | `-ParenExpr 0x132809628 <col:11, col:20> 'int'     |   | |   `-UnaryOperator 0x132809610 <col:12, col:19> 'int' prefix '!' cannot overflow     |   | |     `-ParenExpr 0x1328095f0 <col:13, col:19> 'int'     |   | |       `-BinaryOperator 0x1328095d0 <col:14, col:18> 'int' '%'     |   | |         |-ImplicitCastExpr 0x1328095b8 <col:14> 'int' <LValueToRValue>     |   | |         | `-DeclRefExpr 0x132809578 <col:14> 'int' lvalue Var 0x131012aa8 'bit' 'int'     |   | |         `-IntegerLiteral 0x132809598 <col:18> 'int' 4     |   | `-CompoundStmt 0x132809798 <col:22, line:17:3>     |   |   |-BinaryOperator 0x132809740 <line:15:4, col:17> 'char' '='     |   |   | |-ArraySubscriptExpr 0x1328096f0 <col:4, col:13> 'char' lvalue     |   |   | | |-ImplicitCastExpr 0x1328096c0 <col:4> 'char *' <LValueToRValue>     |   |   | | | `-DeclRefExpr 0x132809680 <col:4> 'char *' lvalue Var 0x131012a10 'str' 'char *'     |   |   | | `-ImplicitCastExpr 0x1328096d8 <col:8> 'int' <LValueToRValue>     |   |   | |   `-DeclRefExpr 0x1328096a0 <col:8> 'int' lvalue Var 0x131012b28 'str_p' 'int'     |   |   | `-ImplicitCastExpr 0x132809728 <col:17> 'char' <IntegralCast>     |   |   |   `-CharacterLiteral 0x132809710 <col:17> 'int' 32     |   |   `-UnaryOperator 0x132809780 <line:16:4, col:9> 'int' postfix '++'     |   |     `-DeclRefExpr 0x132809760 <col:4> 'int' lvalue Var 0x131012b28 'str_p' 'int'     |   |-BinaryOperator 0x13280c8a0 <line:18:3, col:16> 'char' '='     |   | |-ArraySubscriptExpr 0x13280c850 <col:3, col:12> 'char' lvalue     |   | | |-ImplicitCastExpr 0x13280c820 <col:3> 'char *' <LValueToRValue>     |   | | | `-DeclRefExpr 0x1328097d8 <col:3> 'char *' lvalue Var 0x131012a10 'str' 'char *'     |   | | `-ImplicitCastExpr 0x13280c838 <col:7> 'int' <LValueToRValue>     |   | |   `-DeclRefExpr 0x13280c800 <col:7> 'int' lvalue Var 0x131012b28 'str_p' 'int'     |   | `-ImplicitCastExpr 0x13280c888 <col:16> 'char' <IntegralCast>     |   |   `-CharacterLiteral 0x13280c870 <col:16> 'int' 46     |   `-UnaryOperator 0x13280c8e0 <line:19:3, col:8> 'int' postfix '++'     |     `-DeclRefExpr 0x13280c8c0 <col:3> 'int' lvalue Var 0x131012b28 'str_p' 'int'     |-ForStmt 0x13280d378 <line:23:2, line:41:2>     | |-BinaryOperator 0x13280c998 <line:23:6, col:8> 'int' '='     | | |-DeclRefExpr 0x13280c958 <col:6> 'int' lvalue Var 0x131012bf8 'i' 'int'     | | `-IntegerLiteral 0x13280c978 <col:8> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x13280ca28 <col:10, col:12> 'int' '<'     | | |-ImplicitCastExpr 0x13280c9f8 <col:10> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x13280c9b8 <col:10> 'int' lvalue Var 0x131012bf8 'i' 'int'     | | `-ImplicitCastExpr 0x13280ca10 <col:12> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x13280c9d8 <col:12> 'int' lvalue Var 0x131012c90 'max_bits' 'int'     | |-UnaryOperator 0x13280ca68 <col:21, col:22> 'int' postfix '++'     | | `-DeclRefExpr 0x13280ca48 <col:21> 'int' lvalue Var 0x131012bf8 'i' 'int'     | `-CompoundStmt 0x13280d348 <col:25, line:41:2>     |   |-IfStmt 0x13280cce0 <line:24:3, line:27:3>     |   | |-BinaryOperator 0x13280cb88 <line:24:6, col:20> 'int' '&&'     |   | | |-ImplicitCastExpr 0x13280cb70 <col:6> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x13280ca80 <col:6> 'int' lvalue Var 0x131012aa8 'bit' 'int'     |   | | `-ParenExpr 0x13280cb50 <col:11, col:20> 'int'     |   | |   `-UnaryOperator 0x13280cb38 <col:12, col:19> 'int' prefix '!' cannot overflow     |   | |     `-ParenExpr 0x13280cb18 <col:13, col:19> 'int'     |   | |       `-BinaryOperator 0x13280caf8 <col:14, col:18> 'int' '%'     |   | |         |-ImplicitCastExpr 0x13280cae0 <col:14> 'int' <LValueToRValue>     |   | |         | `-DeclRefExpr 0x13280caa0 <col:14> 'int' lvalue Var 0x131012aa8 'bit' 'int'     |   | |         `-IntegerLiteral 0x13280cac0 <col:18> 'int' 4     |   | `-CompoundStmt 0x13280ccc0 <col:22, line:27:3>     |   |   |-BinaryOperator 0x13280cc68 <line:25:4, col:17> 'char' '='     |   |   | |-ArraySubscriptExpr 0x13280cc18 <col:4, col:13> 'char' lvalue     |   |   | | |-ImplicitCastExpr 0x13280cbe8 <col:4> 'char *' <LValueToRValue>     |   |   | | | `-DeclRefExpr 0x13280cba8 <col:4> 'char *' lvalue Var 0x131012a10 'str' 'char *'     |   |   | | `-ImplicitCastExpr 0x13280cc00 <col:8> 'int' <LValueToRValue>     |   |   | |   `-DeclRefExpr 0x13280cbc8 <col:8> 'int' lvalue Var 0x131012b28 'str_p' 'int'     |   |   | `-ImplicitCastExpr 0x13280cc50 <col:17> 'char' <IntegralCast>     |   |   |   `-CharacterLiteral 0x13280cc38 <col:17> 'int' 32     |   |   `-UnaryOperator 0x13280cca8 <line:26:4, col:9> 'int' postfix '++'     |   |     `-DeclRefExpr 0x13280cc88 <col:4> 'int' lvalue Var 0x131012b28 'str_p' 'int'     |   |-IfStmt 0x13280cf60 <line:28:3, line:31:3>     |   | |-BinaryOperator 0x13280ce08 <line:28:6, col:20> 'int' '&&'     |   | | |-ImplicitCastExpr 0x13280cdf0 <col:6> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x13280cd00 <col:6> 'int' lvalue Var 0x131012aa8 'bit' 'int'     |   | | `-ParenExpr 0x13280cdd0 <col:11, col:20> 'int'     |   | |   `-UnaryOperator 0x13280cdb8 <col:12, col:19> 'int' prefix '!' cannot overflow     |   | |     `-ParenExpr 0x13280cd98 <col:13, col:19> 'int'     |   | |       `-BinaryOperator 0x13280cd78 <col:14, col:18> 'int' '%'     |   | |         |-ImplicitCastExpr 0x13280cd60 <col:14> 'int' <LValueToRValue>     |   | |         | `-DeclRefExpr 0x13280cd20 <col:14> 'int' lvalue Var 0x131012aa8 'bit' 'int'     |   | |         `-IntegerLiteral 0x13280cd40 <col:18> 'int' 8     |   | `-CompoundStmt 0x13280cf40 <col:22, line:31:3>     |   |   |-BinaryOperator 0x13280cee8 <line:29:4, col:17> 'char' '='     |   |   | |-ArraySubscriptExpr 0x13280ce98 <col:4, col:13> 'char' lvalue     |   |   | | |-ImplicitCastExpr 0x13280ce68 <col:4> 'char *' <LValueToRValue>     |   |   | | | `-DeclRefExpr 0x13280ce28 <col:4> 'char *' lvalue Var 0x131012a10 'str' 'char *'     |   |   | | `-ImplicitCastExpr 0x13280ce80 <col:8> 'int' <LValueToRValue>     |   |   | |   `-DeclRefExpr 0x13280ce48 <col:8> 'int' lvalue Var 0x131012b28 'str_p' 'int'     |   |   | `-ImplicitCastExpr 0x13280ced0 <col:17> 'char' <IntegralCast>     |   |   |   `-CharacterLiteral 0x13280ceb8 <col:17> 'int' 32     |   |   `-UnaryOperator 0x13280cf28 <line:30:4, col:9> 'int' postfix '++'     |   |     `-DeclRefExpr 0x13280cf08 <col:4> 'int' lvalue Var 0x131012b28 'str_p' 'int'     |   |-UnaryOperator 0x13280cfa0 <line:32:3, col:6> 'int' postfix '++'     |   | `-DeclRefExpr 0x13280cf80 <col:3> 'int' lvalue Var 0x131012aa8 'bit' 'int'     |   `-IfStmt 0x13280d2c0 <line:33:3, line:39:3> has_else     |     |-RecoveryExpr 0x13280d030 <line:33:6, col:24> '_Bool' contains-errors     |     |-CompoundStmt 0x13280d168 <col:26, line:36:3>     |     | |-BinaryOperator 0x13280d110 <line:34:4, col:17> 'char' '='     |     | | |-ArraySubscriptExpr 0x13280d0c0 <col:4, col:13> 'char' lvalue     |     | | | |-ImplicitCastExpr 0x13280d090 <col:4> 'char *' <LValueToRValue>     |     | | | | `-DeclRefExpr 0x13280d050 <col:4> 'char *' lvalue Var 0x131012a10 'str' 'char *'     |     | | | `-ImplicitCastExpr 0x13280d0a8 <col:8> 'int' <LValueToRValue>     |     | | |   `-DeclRefExpr 0x13280d070 <col:8> 'int' lvalue Var 0x131012b28 'str_p' 'int'     |     | | `-ImplicitCastExpr 0x13280d0f8 <col:17> 'char' <IntegralCast>     |     | |   `-CharacterLiteral 0x13280d0e0 <col:17> 'int' 49     |     | `-UnaryOperator 0x13280d150 <line:35:4, col:9> 'int' postfix '++'     |     |   `-DeclRefExpr 0x13280d130 <col:4> 'int' lvalue Var 0x131012b28 'str_p' 'int'     |     `-CompoundStmt 0x13280d2a0 <line:36:10, line:39:3>     |       |-BinaryOperator 0x13280d248 <line:37:4, col:17> 'char' '='     |       | |-ArraySubscriptExpr 0x13280d1f8 <col:4, col:13> 'char' lvalue     |       | | |-ImplicitCastExpr 0x13280d1c8 <col:4> 'char *' <LValueToRValue>     |       | | | `-DeclRefExpr 0x13280d188 <col:4> 'char *' lvalue Var 0x131012a10 'str' 'char *'     |       | | `-ImplicitCastExpr 0x13280d1e0 <col:8> 'int' <LValueToRValue>     |       | |   `-DeclRefExpr 0x13280d1a8 <col:8> 'int' lvalue Var 0x131012b28 'str_p' 'int'     |       | `-ImplicitCastExpr 0x13280d230 <col:17> 'char' <IntegralCast>     |       |   `-CharacterLiteral 0x13280d218 <col:17> 'int' 48     |       `-UnaryOperator 0x13280d288 <line:38:4, col:9> 'int' postfix '++'     |         `-DeclRefExpr 0x13280d268 <col:4> 'int' lvalue Var 0x131012b28 'str_p' 'int'     |-ForStmt 0x13280d828 <line:43:2, line:50:2>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-BinaryOperator 0x13280d408 <line:43:7, col:11> 'int' '%'     | | |-ImplicitCastExpr 0x13280d3f0 <col:7> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x13280d3b0 <col:7> 'int' lvalue Var 0x131012aa8 'bit' 'int'     | | `-IntegerLiteral 0x13280d3d0 <col:11> 'int' 8     | |-UnaryOperator 0x13280d448 <col:13, col:16> 'int' postfix '++'     | | `-DeclRefExpr 0x13280d428 <col:13> 'int' lvalue Var 0x131012aa8 'bit' 'int'     | `-CompoundStmt 0x13280d800 <col:19, line:50:2>     |   |-IfStmt 0x13280d6c0 <line:44:3, line:47:3>     |   | |-BinaryOperator 0x13280d568 <line:44:6, col:20> 'int' '&&'     |   | | |-ImplicitCastExpr 0x13280d550 <col:6> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x13280d460 <col:6> 'int' lvalue Var 0x131012aa8 'bit' 'int'     |   | | `-ParenExpr 0x13280d530 <col:11, col:20> 'int'     |   | |   `-UnaryOperator 0x13280d518 <col:12, col:19> 'int' prefix '!' cannot overflow     |   | |     `-ParenExpr 0x13280d4f8 <col:13, col:19> 'int'     |   | |       `-BinaryOperator 0x13280d4d8 <col:14, col:18> 'int' '%'     |   | |         |-ImplicitCastExpr 0x13280d4c0 <col:14> 'int' <LValueToRValue>     |   | |         | `-DeclRefExpr 0x13280d480 <col:14> 'int' lvalue Var 0x131012aa8 'bit' 'int'     |   | |         `-IntegerLiteral 0x13280d4a0 <col:18> 'int' 4     |   | `-CompoundStmt 0x13280d6a0 <col:22, line:47:3>     |   |   |-BinaryOperator 0x13280d648 <line:45:4, col:17> 'char' '='     |   |   | |-ArraySubscriptExpr 0x13280d5f8 <col:4, col:13> 'char' lvalue     |   |   | | |-ImplicitCastExpr 0x13280d5c8 <col:4> 'char *' <LValueToRValue>     |   |   | | | `-DeclRefExpr 0x13280d588 <col:4> 'char *' lvalue Var 0x131012a10 'str' 'char *'     |   |   | | `-ImplicitCastExpr 0x13280d5e0 <col:8> 'int' <LValueToRValue>     |   |   | |   `-DeclRefExpr 0x13280d5a8 <col:8> 'int' lvalue Var 0x131012b28 'str_p' 'int'     |   |   | `-ImplicitCastExpr 0x13280d630 <col:17> 'char' <IntegralCast>     |   |   |   `-CharacterLiteral 0x13280d618 <col:17> 'int' 32     |   |   `-UnaryOperator 0x13280d688 <line:46:4, col:9> 'int' postfix '++'     |   |     `-DeclRefExpr 0x13280d668 <col:4> 'int' lvalue Var 0x131012b28 'str_p' 'int'     |   |-BinaryOperator 0x13280d7a0 <line:48:3, col:16> 'char' '='     |   | |-ArraySubscriptExpr 0x13280d750 <col:3, col:12> 'char' lvalue     |   | | |-ImplicitCastExpr 0x13280d720 <col:3> 'char *' <LValueToRValue>     |   | | | `-DeclRefExpr 0x13280d6e0 <col:3> 'char *' lvalue Var 0x131012a10 'str' 'char *'     |   | | `-ImplicitCastExpr 0x13280d738 <col:7> 'int' <LValueToRValue>     |   | |   `-DeclRefExpr 0x13280d700 <col:7> 'int' lvalue Var 0x131012b28 'str_p' 'int'     |   | `-ImplicitCastExpr 0x13280d788 <col:16> 'char' <IntegralCast>     |   |   `-CharacterLiteral 0x13280d770 <col:16> 'int' 46     |   `-UnaryOperator 0x13280d7e0 <line:49:3, col:8> 'int' postfix '++'     |     `-DeclRefExpr 0x13280d7c0 <col:3> 'int' lvalue Var 0x131012b28 'str_p' 'int'     `-ReturnStmt 0x13280d8b0 <line:51:2, col:9>       `-ImplicitCastExpr 0x13280d898 <col:9> 'int' <PointerToIntegral>         `-ImplicitCastExpr 0x13280d880 <col:9> 'char *' <LValueToRValue>           `-DeclRefExpr 0x13280d860 <col:9> 'char *' lvalue Var 0x131012a10 'str' 'char *' ","20244":"`-FunctionDecl 0x14b1281a8  line:1:8 PHP_GINIT_FUNCTION 'int (int)' static   |-ParmVarDecl 0x14b1280d8 <col:27> col:27 libxml 'int'   `-CompoundStmt 0x14b128300 <line:2:1, line:6:1> ","20607":"`-FunctionDecl 0x12283eeb0  col:9 implicit used strcpy 'char *(char *, const char *)' extern   |-ParmVarDecl 0x12283efb0 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x12283f018 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x12283ef58 <<invalid sloc>> Implicit 885 ","21222":"`-FunctionDecl 0x13c856480  line:1:13 invalid jp2_pclr_dumpdata 'void (int *, int *)' static   |-ParmVarDecl 0x13c856328 <col:31, col:42> col:42 invalid box 'int *'   |-ParmVarDecl 0x13c8563a8 <col:47, col:53> col:53 invalid out 'int *'   `-CompoundStmt 0x13c870070 <line:2:1, line:13:1>     |-DeclStmt 0x13c856698 <line:4:2, col:16>     | `-VarDecl 0x13c856630 <col:2, col:15> col:15 used i 'unsigned int'     |-DeclStmt 0x13c856730 <line:5:2, col:7>     | `-VarDecl 0x13c8566c8 <col:2, col:6> col:6 used j 'int'     `-ForStmt 0x13c870038 <line:8:2, line:12:2>       |-BinaryOperator 0x13c86fab8 <line:8:7, col:11> 'unsigned int' '='       | |-DeclRefExpr 0x13c86fa60 <col:7> 'unsigned int' lvalue Var 0x13c856630 'i' 'unsigned int'       | `-ImplicitCastExpr 0x13c86faa0 <col:11> 'unsigned int' <IntegralCast>       |   `-IntegerLiteral 0x13c86fa80 <col:11> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x13c86fbe0 <col:14, col:24> 'int' contains-errors '<'       | |-DeclRefExpr 0x13c86fad8 <col:14> 'unsigned int' lvalue Var 0x13c856630 'i' 'unsigned int'       | `-CXXDependentScopeMemberExpr 0x13c86fb98 <col:18, col:24> '<dependent type>' contains-errors lvalue ->numlutents       |   `-RecoveryExpr 0x13c86fb78 <col:18> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x13c86fc20 <col:36, col:38> 'unsigned int' prefix '++'       | `-DeclRefExpr 0x13c86fc00 <col:38> 'unsigned int' lvalue Var 0x13c856630 'i' 'unsigned int'       `-CompoundStmt 0x13c870020 <col:41, line:12:2>         `-ForStmt 0x13c86ffe8 <line:9:3, line:11:3>           |-BinaryOperator 0x13c86fc78 <line:9:8, col:12> 'int' '='           | |-DeclRefExpr 0x13c86fc38 <col:8> 'int' lvalue Var 0x13c8566c8 'j' 'int'           | `-IntegerLiteral 0x13c86fc58 <col:12> 'int' 0           |-<<<NULL>>>           |-BinaryOperator 0x13c86fda0 <col:15, col:25> 'int' contains-errors '<'           | |-DeclRefExpr 0x13c86fc98 <col:15> 'int' lvalue Var 0x13c8566c8 'j' 'int'           | `-CXXDependentScopeMemberExpr 0x13c86fd58 <col:19, col:25> '<dependent type>' contains-errors lvalue ->numchans           |   `-RecoveryExpr 0x13c86fd38 <col:19> '<dependent type>' contains-errors lvalue           |-UnaryOperator 0x13c86fde0 <col:35, col:37> 'int' prefix '++'           | `-DeclRefExpr 0x13c86fdc0 <col:37> 'int' lvalue Var 0x13c8566c8 'j' 'int'           `-CompoundStmt 0x13c86ffd8 <col:40, line:11:3> ","21147":"`-FunctionDecl 0x131809fd0  col:22 implicit used sprintf 'int (char *, const char *, ...)' extern   |-ParmVarDecl 0x13180a0d0 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x13180a138 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x13180a078 <<invalid sloc>> Implicit 906   `-FormatAttr 0x13180a1b0 <col:22> Implicit printf 2 3 ","20757":"`-FunctionDecl 0x14e940f40  line:1:13 io_wqe_enqueue 'void (struct io_wqe *, struct io_wq_work *)' static   |-ParmVarDecl 0x14e928a48 <col:28, col:43> col:43 used wqe 'struct io_wqe *'   |-ParmVarDecl 0x14e940e28 <col:48, col:67> col:67 used work 'struct io_wq_work *'   `-CompoundStmt 0x14f009c80 <line:2:1, line:40:1>     |-DeclStmt 0x14e941478 <line:3:2, col:56>     | |-RecordDecl 0x14e941040 <col:2, col:9> col:9 struct io_wqe_acct     | `-VarDecl 0x14e9411a8 <col:2, col:55> col:22 used acct 'struct io_wqe_acct *' cinit     |   `-ImplicitCastExpr 0x14e941448 <col:29, col:55> 'struct io_wqe_acct *' <IntegralToPointer>     |     `-CallExpr 0x14e9413e8 <col:29, col:55> 'int'     |       |-ImplicitCastExpr 0x14e9413d0 <col:29> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14e941340 <col:29> 'int ()' Function 0x14e941288 'io_work_get_acct' 'int ()'     |       |-ImplicitCastExpr 0x14e941418 <col:46> 'struct io_wqe *' <LValueToRValue>     |       | `-DeclRefExpr 0x14e941360 <col:46> 'struct io_wqe *' lvalue ParmVar 0x14e928a48 'wqe' 'struct io_wqe *'     |       `-ImplicitCastExpr 0x14e941430 <col:51> 'struct io_wq_work *' <LValueToRValue>     |         `-DeclRefExpr 0x14e941380 <col:51> 'struct io_wq_work *' lvalue ParmVar 0x14e940e28 'work' 'struct io_wq_work *'     |-DeclStmt 0x14e941570 <line:4:2, col:35>     | `-VarDecl 0x14e9414a8 <col:2, col:30> col:11 used work_flags 'unsigned int' cinit     |   `-RecoveryExpr 0x14e941548 <col:24, col:30> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14e941510 <col:24> 'struct io_wq_work *' lvalue ParmVar 0x14e940e28 'work' 'struct io_wq_work *'     |-IfStmt 0x14e941aa0 <line:8:2, line:13:2>     | |-RecoveryExpr 0x14e941828 <line:8:6, line:9:38> '_Bool' contains-errors     | `-CompoundStmt 0x14e941a80 <col:41, line:13:2>     |   |-LabelStmt 0x14e941a50 <line:10:1, line:11:26> 'run_cancel'     |   | `-CallExpr 0x14e9419a0 <col:3, col:26> 'int'     |   |   |-ImplicitCastExpr 0x14e941988 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x14e941928 <col:3> 'int ()' Function 0x14e941870 'io_run_cancel' 'int ()'     |   |   |-ImplicitCastExpr 0x14e9419d0 <col:17> 'struct io_wq_work *' <LValueToRValue>     |   |   | `-DeclRefExpr 0x14e941948 <col:17> 'struct io_wq_work *' lvalue ParmVar 0x14e940e28 'work' 'struct io_wq_work *'     |   |   `-ImplicitCastExpr 0x14e9419e8 <col:23> 'struct io_wqe *' <LValueToRValue>     |   |     `-DeclRefExpr 0x14e941968 <col:23> 'struct io_wqe *' lvalue ParmVar 0x14e928a48 'wqe' 'struct io_wqe *'     |   `-ReturnStmt 0x14e941a70 <line:12:3>     |-CallExpr 0x14e941c38 <line:15:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14e941ba0 <col:2> 'int ()' Function 0x14e941ae8 'raw_spin_lock' 'int ()'     | `-UnaryOperator 0x14e941c20 <col:16, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14e941bf8 <col:17, col:22> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14e941bc0 <col:17> 'struct io_wqe *' lvalue ParmVar 0x14e928a48 'wqe' 'struct io_wqe *'     |-CallExpr 0x14e941db8 <line:16:2, col:30> 'int'     | |-ImplicitCastExpr 0x14e941da0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14e941d40 <col:2> 'int ()' Function 0x14e941c88 'io_wqe_insert_work' 'int ()'     | |-ImplicitCastExpr 0x14e941de8 <col:21> 'struct io_wqe *' <LValueToRValue>     | | `-DeclRefExpr 0x14e941d60 <col:21> 'struct io_wqe *' lvalue ParmVar 0x14e928a48 'wqe' 'struct io_wqe *'     | `-ImplicitCastExpr 0x14f008c00 <col:26> 'struct io_wq_work *' <LValueToRValue>     |   `-DeclRefExpr 0x14e941d80 <col:26> 'struct io_wq_work *' lvalue ParmVar 0x14e940e28 'work' 'struct io_wq_work *'     |-CallExpr 0x14f008df8 <line:17:2, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14f008cf8 <col:2> 'int ()' Function 0x14f008c40 'clear_bit' 'int ()'     | |-RecoveryExpr 0x14f008dd8 <col:12> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x14f008d90 <col:33, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14f008d68 <col:34, col:40> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14f008d30 <col:34> 'struct io_wqe_acct *' lvalue Var 0x14e9411a8 'acct' 'struct io_wqe_acct *'     |-CallExpr 0x14f008f40 <line:19:2, col:16> 'int'     | `-ImplicitCastExpr 0x14f008f28 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x14f008f08 <col:2> 'int ()' Function 0x14f008e50 'rcu_read_lock' 'int ()'     |-CallExpr 0x14f009248 <line:21:2, col:18> 'int'     | `-ImplicitCastExpr 0x14f009230 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x14f009210 <col:2> 'int ()' Function 0x14f009158 'rcu_read_unlock' 'int ()'     |-CallExpr 0x14f0093e0 <line:23:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14f009348 <col:2> 'int ()' Function 0x14f009290 'raw_spin_unlock' 'int ()'     | `-UnaryOperator 0x14f0093c8 <col:18, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14f0093a0 <col:19, col:24> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14f009368 <col:19> 'struct io_wqe *' lvalue ParmVar 0x14e928a48 'wqe' 'struct io_wqe *'     `-IfStmt 0x14f009c60 <line:25:2, line:39:2>       |-RecoveryExpr 0x14f0095e0 <line:25:6, line:26:37> '_Bool' contains-errors       `-CompoundStmt 0x14f009c48 <col:40, line:39:2>         `-IfStmt 0x14f009c28 <line:30:3, line:38:3>           |-RecoveryExpr 0x14f0098b8 <line:30:7, col:27> '_Bool' contains-errors           `-CompoundStmt 0x14f009c00 <col:30, line:38:3>             |-CallExpr 0x14f009970 <line:31:4, col:28> '<dependent type>' contains-errors             | |-DeclRefExpr 0x14f0098d8 <col:4> 'int ()' Function 0x14e941ae8 'raw_spin_lock' 'int ()'             | `-UnaryOperator 0x14f009958 <col:18, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow             |   `-RecoveryExpr 0x14f009930 <col:19, col:24> '<dependent type>' contains-errors lvalue             |     `-DeclRefExpr 0x14f0098f8 <col:19> 'struct io_wqe *' lvalue ParmVar 0x14e928a48 'wqe' 'struct io_wqe *'             |-IfStmt 0x14f009b20 <line:33:4, line:36:4>             | |-UnaryOperator 0x14f009a10 <line:33:8, col:15> '<dependent type>' contains-errors prefix '!' cannot overflow             | | `-ImplicitCastExpr 0x14f0099f8 <col:9, col:15> '<dependent type>' contains-errors <LValueToRValue>             | |   `-RecoveryExpr 0x14f0099d0 <col:9, col:15> '<dependent type>' contains-errors lvalue             | |     `-DeclRefExpr 0x14f009998 <col:9> 'struct io_wqe_acct *' lvalue Var 0x14e9411a8 'acct' 'struct io_wqe_acct *'             | `-CompoundStmt 0x14f009b00 <col:27, line:36:4>             |   |-CallExpr 0x14f009ac0 <line:34:5, col:31> '<dependent type>' contains-errors             |   | |-DeclRefExpr 0x14f009a28 <col:5> 'int ()' Function 0x14f009290 'raw_spin_unlock' 'int ()'             |   | `-UnaryOperator 0x14f009aa8 <col:21, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow             |   |   `-RecoveryExpr 0x14f009a80 <col:22, col:27> '<dependent type>' contains-errors lvalue             |   |     `-DeclRefExpr 0x14f009a48 <col:22> 'struct io_wqe *' lvalue ParmVar 0x14e928a48 'wqe' 'struct io_wqe *'             |   `-GotoStmt 0x14f009ae8 <line:35:5, col:10> 'run_cancel' 0x14e941a00             `-CallExpr 0x14f009bd8 <line:37:4, col:30> '<dependent type>' contains-errors               |-DeclRefExpr 0x14f009b40 <col:4> 'int ()' Function 0x14f009290 'raw_spin_unlock' 'int ()'               `-UnaryOperator 0x14f009bc0 <col:20, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow                 `-RecoveryExpr 0x14f009b98 <col:21, col:26> '<dependent type>' contains-errors lvalue                   `-DeclRefExpr 0x14f009b60 <col:21> 'struct io_wqe *' lvalue ParmVar 0x14e928a48 'wqe' 'struct io_wqe *' ","20761":"`-FunctionDecl 0x139128318  line:1:1 invalid rsvg_metadata_handler_start 'int (int *, const char *, int *)'   |-ParmVarDecl 0x139128128 <col:30, col:47> col:47 invalid self 'int *'   |-ParmVarDecl 0x1391281a8 <col:53, col:65> col:65 used name 'const char *'   |-ParmVarDecl 0x139128228 <col:71, col:89> col:89 invalid atts 'int *'   `-CompoundStmt 0x139141e78 <line:2:1, line:9:1>     |-CallExpr 0x139141848 <line:6:5, col:61> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1391285e0 <col:5> 'int ()' Function 0x139128528 'g_string_append_printf' 'int ()'     | |-CXXDependentScopeMemberExpr 0x139141800 <col:29, col:40> '<dependent type>' contains-errors lvalue ->metadata     | | `-CXXDependentScopeMemberExpr 0x139128788 <col:29, col:34> '<dependent type>' contains-errors lvalue ->priv     | |   `-RecoveryExpr 0x139128768 <col:29> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x1391286f0 <col:50> 'char[4]' lvalue \"STR\"     | `-DeclRefExpr 0x139128710 <col:57> 'const char *' lvalue ParmVar 0x1391281a8 'name' 'const char *'     |-CallExpr 0x139141b68 <line:7:5, col:90> '<dependent type>' contains-errors     | |-DeclRefExpr 0x139141960 <col:5> 'int ()' Function 0x1391418a8 'rsvg_property_bag_enumerate' 'int ()'     | |-RecoveryExpr 0x139141980 <col:34> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x139141a98 <col:40> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x139141b20 <col:71, col:82> '<dependent type>' contains-errors lvalue ->metadata     |   `-CXXDependentScopeMemberExpr 0x139141ad8 <col:71, col:76> '<dependent type>' contains-errors lvalue ->priv     |     `-RecoveryExpr 0x139141ab8 <col:71> '<dependent type>' contains-errors lvalue     `-CallExpr 0x139141e48 <line:8:5, col:48> '<dependent type>' contains-errors       |-DeclRefExpr 0x139141c80 <col:5> 'int ()' Function 0x139141bc8 'g_string_append' 'int ()'       |-CXXDependentScopeMemberExpr 0x139141e00 <col:22, col:33> '<dependent type>' contains-errors lvalue ->metadata       | `-CXXDependentScopeMemberExpr 0x139141db8 <col:22, col:27> '<dependent type>' contains-errors lvalue ->priv       |   `-RecoveryExpr 0x139141d98 <col:22> '<dependent type>' contains-errors lvalue       `-StringLiteral 0x139141d48 <col:43> 'char[4]' lvalue \"STR\" ","20285":"`-FunctionDecl 0x1389282e8  line:1:1 invalid cdf_dump_sat 'int (const char *, const int *, int)'   |-ParmVarDecl 0x1389280d8 <col:14, col:26> col:26 used prefix 'const char *'   |-ParmVarDecl 0x138928170 <col:34, col:51> col:51 invalid sat 'const int *'   |-ParmVarDecl 0x1389281f0 <col:56, col:63> col:63 invalid size 'int'   `-CompoundStmt 0x138941dd0 <line:2:1, line:17:1>     `-ForStmt 0x138941d98 <line:5:2, line:16:2>       |-<<<NULL>>>       |-<<<NULL>>>       |-BinaryOperator 0x138928598 <line:5:14, col:23> 'int' contains-errors '<'       | |-RecoveryExpr 0x138928578 <col:14> '<dependent type>' contains-errors lvalue       | `-CXXDependentScopeMemberExpr 0x138928510 <col:18, col:23> '<dependent type>' contains-errors lvalue ->sat_len       |   `-RecoveryExpr 0x1389284f0 <col:18> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x138928608 <col:32, col:33> '<dependent type>' contains-errors postfix '++' cannot overflow       | `-RecoveryExpr 0x1389285e8 <col:32> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x138941d80 <col:37, line:16:2>         `-ForStmt 0x138941d08 <line:8:3, line:14:3>           |-<<<NULL>>>           |-<<<NULL>>>           |-BinaryOperator 0x1389419e8 <line:8:15, col:19> 'int' contains-errors '<'           | |-RecoveryExpr 0x1389419a8 <col:15> '<dependent type>' contains-errors lvalue           | `-RecoveryExpr 0x1389419c8 <col:19> '<dependent type>' contains-errors lvalue           |-UnaryOperator 0x138941a58 <col:22, col:23> '<dependent type>' contains-errors postfix '++' cannot overflow           | `-RecoveryExpr 0x138941a38 <col:22> '<dependent type>' contains-errors lvalue           `-CompoundStmt 0x138941cf8 <col:27, line:14:3> ","20976":"`-FunctionDecl 0x14f142bd8  col:5 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x14f142cd8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x14f142d40 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x14f142da8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14f142c80 <<invalid sloc>> Implicit 882 ","21167":"`-FunctionDecl 0x122827348  line:1:5 tipc_nl_publ_dump 'int (struct sk_buff *, struct netlink_callback *)'   |-ParmVarDecl 0x12280ee48 <col:23, col:39> col:39 used skb 'struct sk_buff *'   |-ParmVarDecl 0x122827228 <col:44, col:69> col:69 used cb 'struct netlink_callback *'   `-CompoundStmt 0x12282d8c8 <line:2:1, line:49:1>     |-DeclStmt 0x1228274c8 <line:3:2, col:9>     | `-VarDecl 0x122827460 <col:2, col:6> col:6 used err 'int'     |-DeclStmt 0x1228278a0 <line:7:2, col:37>     | |-RecordDecl 0x1228274f8 <col:2, col:9> col:9 struct net     | `-VarDecl 0x122827668 <col:2, col:36> col:14 used net 'struct net *' cinit     |   `-CallExpr 0x122827860 <col:20, col:36> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1228277e0 <col:20> 'int ()' Function 0x122827728 'sock_net' 'int ()'     |     `-RecoveryExpr 0x122827838 <col:29, col:34> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x122827800 <col:29> 'struct sk_buff *' lvalue ParmVar 0x12280ee48 'skb' 'struct sk_buff *'     |-DeclStmt 0x122827aa8 <line:8:2, col:23>     | |-RecordDecl 0x1228278b8 <col:2, col:9> col:9 struct tipc_sock     | `-VarDecl 0x122827a28 <col:2, col:20> col:20 used tsk 'struct tipc_sock *'     |-IfStmt 0x124008d28 <line:10:2, line:28:2>     | |-UnaryOperator 0x122827b40 <line:10:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x122827b28 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x122827b08 <col:7> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x124008ce8 <col:19, line:28:2>     |   |-DeclStmt 0x122827da8 <line:11:3, col:24>     |   | |-RecordDecl 0x122827b58 <col:3, col:10> col:10 struct nlattr     |   | `-VarDecl 0x122827d28 <col:3, col:19> col:19 used attrs 'struct nlattr **'     |   |-DeclStmt 0x122827f10 <line:12:3, col:45>     |   | `-VarDecl 0x122827ea8 <col:3, col:18> col:18 invalid sock 'struct nlattr *'     |   |-BinaryOperator 0x122828178 <line:14:3, col:41> 'int' contains-errors '='     |   | |-DeclRefExpr 0x122827f28 <col:3> 'int' lvalue Var 0x122827460 'err' 'int'     |   | `-CallExpr 0x122828148 <col:9, col:41> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x122828028 <col:9> 'int ()' Function 0x122827f70 'tipc_nlmsg_parse' 'int ()'     |   |   |-RecoveryExpr 0x122828080 <col:26, col:30> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x122828048 <col:26> 'struct netlink_callback *' lvalue ParmVar 0x122827228 'cb' 'struct netlink_callback *'     |   |   `-UnaryOperator 0x122828130 <col:35, col:36> 'struct nlattr ***' prefix '&' cannot overflow     |   |     `-DeclRefExpr 0x1228280a8 <col:36> 'struct nlattr **' lvalue Var 0x122827d28 'attrs' 'struct nlattr **'     |   |-IfStmt 0x124008828 <line:15:3, line:16:11>     |   | |-ImplicitCastExpr 0x1228281b8 <line:15:7> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x122828198 <col:7> 'int' lvalue Var 0x122827460 'err' 'int'     |   | `-ReturnStmt 0x124008818 <line:16:4, col:11>     |   |   `-ImplicitCastExpr 0x124008800 <col:11> 'int' <LValueToRValue>     |   |     `-DeclRefExpr 0x1228281d0 <col:11> 'int' lvalue Var 0x122827460 'err' 'int'     |   |-IfStmt 0x124008a70 <line:21:3, line:22:11>     |   | |-ImplicitCastExpr 0x124008a10 <line:21:7> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x1240089f0 <col:7> 'int' lvalue Var 0x122827460 'err' 'int'     |   | `-ReturnStmt 0x124008a60 <line:22:4, col:11>     |   |   `-ImplicitCastExpr 0x124008a48 <col:11> 'int' <LValueToRValue>     |   |     `-DeclRefExpr 0x124008a28 <col:11> 'int' lvalue Var 0x122827460 'err' 'int'     |   `-IfStmt 0x124008b90 <line:24:3, line:25:12>     |     |-RecoveryExpr 0x124008ac8 <line:24:7, col:30> '_Bool' contains-errors     |     `-ReturnStmt 0x124008b80 <line:25:4, col:12>     |       `-UnaryOperator 0x124008b68 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |         `-ImplicitCastExpr 0x124008b50 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |           `-RecoveryExpr 0x124008b30 <col:12> '<dependent type>' contains-errors lvalue     |-IfStmt 0x124008db0 <line:30:2, line:31:10>     | |-RecoveryExpr 0x124008d60 <line:30:6> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x124008da0 <line:31:3, col:10>     |   `-IntegerLiteral 0x124008d80 <col:10> 'int' 0     |-CallExpr 0x1240090d8 <line:37:2, col:20> '<dependent type>' contains-errors     | |-DeclRefExpr 0x124009040 <col:2> 'int ()' Function 0x124008f88 'lock_sock' 'int ()'     | `-UnaryOperator 0x1240090c0 <col:12, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x124009098 <col:13, col:18> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x124009060 <col:13> 'struct tipc_sock *' lvalue Var 0x122827a28 'tsk' 'struct tipc_sock *'     |-CallExpr 0x124009468 <line:41:2, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1240093d0 <col:2> 'int ()' Function 0x124009318 'release_sock' 'int ()'     | `-UnaryOperator 0x124009450 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x124009428 <col:16, col:21> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1240093f0 <col:16> 'struct tipc_sock *' lvalue Var 0x122827a28 'tsk' 'struct tipc_sock *'     |-CallExpr 0x124009608 <line:42:2, col:19> '<dependent type>' contains-errors     | |-DeclRefExpr 0x124009570 <col:2> 'int ()' Function 0x1240094b8 'sock_put' 'int ()'     | `-UnaryOperator 0x1240095f0 <col:11, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1240095c8 <col:12, col:17> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x124009590 <col:12> 'struct tipc_sock *' lvalue Var 0x122827a28 'tsk' 'struct tipc_sock *'     `-ReturnStmt 0x12282d8b8 <line:48:2, col:14>       `-RecoveryExpr 0x12282d890 <col:9, col:14> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x12282d858 <col:9> 'struct sk_buff *' lvalue ParmVar 0x12280ee48 'skb' 'struct sk_buff *' ","20504":"`-FunctionDecl 0x14280df38  line:1:18 invalid _quicklistNodeAllowMerge 'int (const int *, const int *, const int)'   |-ParmVarDecl 0x14280dcf0 <col:43, col:64> col:64 invalid a 'const int *'   |-ParmVarDecl 0x14280dd70 <line:2:43, col:64> col:64 invalid b 'const int *'   |-ParmVarDecl 0x14280ddf0 <line:3:43, col:53> col:53 used fill 'const int'   `-CompoundStmt 0x142122db0 <col:59, line:17:1>     |-IfStmt 0x14280e0e8 <line:4:5, line:5:16>     | |-BinaryOperator 0x14280e098 <line:4:9, col:16> 'int' contains-errors '||'     | | |-UnaryOperator 0x14280e030 <col:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x14280e018 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-RecoveryExpr 0x14280dff8 <col:10> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x14280e080 <col:15, col:16> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x14280e068 <col:16> '<dependent type>' contains-errors <LValueToRValue>     | |     `-RecoveryExpr 0x14280e048 <col:16> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14280e0d8 <line:5:9, col:16>     |   `-IntegerLiteral 0x14280e0b8 <col:16> 'int' 0     |-DeclStmt 0x14280e2b8 <line:8:5, col:47>     | `-VarDecl 0x14280e120 <col:5, col:45> col:18 used merge_sz 'unsigned int' cinit     |   `-BinaryOperator 0x14280e298 <col:29, col:45> '<dependent type>' contains-errors '-'     |     |-BinaryOperator 0x14280e258 <col:29, col:40> '<dependent type>' contains-errors '+'     |     | |-CXXDependentScopeMemberExpr 0x14280e1a8 <col:29, col:32> '<dependent type>' contains-errors lvalue ->sz     |     | | `-RecoveryExpr 0x14280e188 <col:29> '<dependent type>' contains-errors lvalue     |     | `-CXXDependentScopeMemberExpr 0x14280e210 <col:37, col:40> '<dependent type>' contains-errors lvalue ->sz     |     |   `-RecoveryExpr 0x14280e1f0 <col:37> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x14280e278 <col:45> 'int' 11     `-IfStmt 0x142122d80 <line:9:5, line:16:16> has_else       |-CallExpr 0x1421228e0 <line:9:9, col:78> 'int' contains-errors       | |-ImplicitCastExpr 0x1421228c8 <col:9> 'int (*)()' <FunctionToPointerDecay>       | | `-DeclRefExpr 0x1421226b8 <col:9> 'int ()' Function 0x142122600 'likely' 'int ()'       | `-CallExpr 0x142122868 <col:16, col:77> 'int' contains-errors       |   |-ImplicitCastExpr 0x142122850 <col:16> 'int (*)()' <FunctionToPointerDecay>       |   | `-DeclRefExpr 0x1421227b8 <col:16> 'int ()' Function 0x142122700 '_quicklistNodeSizeMeetsOptimizationRequirement' 'int ()'       |   |-ImplicitCastExpr 0x142122898 <col:63> 'unsigned int' contains-errors <LValueToRValue>       |   | `-DeclRefExpr 0x1421227d8 <col:63> 'unsigned int' contains-errors lvalue Var 0x14280e120 'merge_sz' 'unsigned int'       |   `-ImplicitCastExpr 0x1421228b0 <col:73> 'int' <LValueToRValue>       |     `-DeclRefExpr 0x1421227f8 <col:73> 'const int' lvalue ParmVar 0x14280ddf0 'fill' 'const int'       |-ReturnStmt 0x142122928 <line:10:9, col:16>       | `-IntegerLiteral 0x142122908 <col:16> 'int' 1       `-IfStmt 0x142122d50 <line:11:10, line:16:16> has_else         |-UnaryOperator 0x142122ab0 <line:11:14, col:44> 'int' contains-errors prefix '!' cannot overflow         | `-CallExpr 0x142122a70 <col:15, col:44> 'int' contains-errors         |   |-ImplicitCastExpr 0x142122a58 <col:15> 'int (*)()' <FunctionToPointerDecay>         |   | `-DeclRefExpr 0x142122a18 <col:15> 'int ()' Function 0x142122960 'sizeMeetsSafetyLimit' 'int ()'         |   `-ImplicitCastExpr 0x142122a98 <col:36> 'unsigned int' contains-errors <LValueToRValue>         |     `-DeclRefExpr 0x142122a38 <col:36> 'unsigned int' contains-errors lvalue Var 0x14280e120 'merge_sz' 'unsigned int'         |-ReturnStmt 0x142122ae8 <line:12:9, col:16>         | `-IntegerLiteral 0x142122ac8 <col:16> 'int' 0         `-IfStmt 0x142122d20 <line:13:10, line:16:16> has_else           |-BinaryOperator 0x142122ca0 <line:13:14, col:44> 'int' contains-errors '<='           | |-CStyleCastExpr 0x142122c40 <col:14, col:39> 'int' contains-errors <Dependent>           | | `-ParenExpr 0x142122c20 <col:19, col:39> '<dependent type>' contains-errors           | |   `-BinaryOperator 0x142122bc8 <col:20, col:34> '<dependent type>' contains-errors '+'           | |     |-CXXDependentScopeMemberExpr 0x142122b18 <col:20, col:23> '<dependent type>' contains-errors lvalue ->count           | |     | `-RecoveryExpr 0x142122af8 <col:20> '<dependent type>' contains-errors lvalue           | |     `-CXXDependentScopeMemberExpr 0x142122b80 <col:31, col:34> '<dependent type>' contains-errors lvalue ->count           | |       `-RecoveryExpr 0x142122b60 <col:31> '<dependent type>' contains-errors lvalue           | `-ImplicitCastExpr 0x142122c88 <col:44> 'int' <LValueToRValue>           |   `-DeclRefExpr 0x142122c68 <col:44> 'const int' lvalue ParmVar 0x14280ddf0 'fill' 'const int'           |-ReturnStmt 0x142122ce0 <line:14:9, col:16>           | `-IntegerLiteral 0x142122cc0 <col:16> 'int' 1           `-ReturnStmt 0x142122d10 <line:16:9, col:16>             `-IntegerLiteral 0x142122cf0 <col:16> 'int' 0 ","21254":"`-FunctionDecl 0x128928750  line:1:13 io_task_refs_refill 'void (struct io_uring_task *)' static   |-ParmVarDecl 0x128928648 <col:33, col:55> col:55 used tctx 'struct io_uring_task *'   `-CompoundStmt 0x128941180 <line:2:1, line:8:1>     |-DeclStmt 0x128940c48 <line:3:2, col:66>     | `-VarDecl 0x128940a60 <col:2, col:45> col:15 used refill 'unsigned int' cinit     |   `-BinaryOperator 0x128940c28 <col:24, col:45> '<dependent type>' contains-errors '+'     |     |-UnaryOperator 0x128940bf0 <col:24, col:31> '<dependent type>' contains-errors prefix '-' cannot overflow     |     | `-ImplicitCastExpr 0x128940bd8 <col:25, col:31> '<dependent type>' contains-errors <LValueToRValue>     |     |   `-RecoveryExpr 0x128940b00 <col:25, col:31> '<dependent type>' contains-errors lvalue     |     |     `-DeclRefExpr 0x128940ac8 <col:25> 'struct io_uring_task *' lvalue ParmVar 0x128928648 'tctx' 'struct io_uring_task *'     |     `-RecoveryExpr 0x128940c08 <col:45> '<dependent type>' contains-errors lvalue     |-CallExpr 0x128940e28 <line:5:2, col:44> '<dependent type>' contains-errors     | |-DeclRefExpr 0x128940d70 <col:2> 'int ()' Function 0x128940cb8 'percpu_counter_add' 'int ()'     | |-UnaryOperator 0x128940df0 <col:21, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x128940dc8 <col:22, col:28> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x128940d90 <col:22> 'struct io_uring_task *' lvalue ParmVar 0x128928648 'tctx' 'struct io_uring_task *'     | `-DeclRefExpr 0x128940e08 <col:38> 'unsigned int' contains-errors lvalue Var 0x128940a60 'refill' 'unsigned int'     |-CallExpr 0x1289410a0 <line:6:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x128940f38 <col:2> 'int ()' Function 0x128940e80 'refcount_add' 'int ()'     | |-DeclRefExpr 0x128940f58 <col:15> 'unsigned int' contains-errors lvalue Var 0x128940a60 'refill' 'unsigned int'     | `-UnaryOperator 0x128941088 <col:23, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x128941040 <col:24, col:33> '<dependent type>' contains-errors lvalue ->usage     |     `-RecoveryExpr 0x128941020 <col:24> '<dependent type>' contains-errors lvalue     `-CompoundAssignOperator 0x128941150 <line:7:2, col:23> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'       |-RecoveryExpr 0x128941108 <col:2, col:8> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x1289410d0 <col:2> 'struct io_uring_task *' lvalue ParmVar 0x128928648 'tctx' 'struct io_uring_task *'       `-DeclRefExpr 0x128941130 <col:23> 'unsigned int' contains-errors lvalue Var 0x128940a60 'refill' 'unsigned int' ","21041":"`-FunctionDecl 0x148140ab8  line:1:15 btrfs_alloc_inode 'struct inode *(struct super_block *)'   |-ParmVarDecl 0x1481286e8 <col:33, col:53> col:53 sb 'struct super_block *'   `-CompoundStmt 0x148148dd8 <line:2:1, line:51:1>     |-DeclStmt 0x148140d98 <line:3:2, col:24>     | |-RecordDecl 0x148140bb0 <col:2, col:9> col:9 struct btrfs_inode     | `-VarDecl 0x148140d18 <col:2, col:22> col:22 used ei 'struct btrfs_inode *'     |-DeclStmt 0x148140ea0 <line:4:2, col:21>     | `-VarDecl 0x148140e38 <col:2, col:16> col:16 used inode 'struct inode *'     |-BinaryOperator 0x148141110 <line:6:2, col:52> 'struct btrfs_inode *' contains-errors '='     | |-DeclRefExpr 0x148140eb8 <col:2> 'struct btrfs_inode *' lvalue Var 0x148140d18 'ei' 'struct btrfs_inode *'     | `-CallExpr 0x1481410e0 <col:7, col:52> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x148141000 <col:7> 'int ()' Function 0x148140f48 'kmem_cache_alloc' 'int ()'     |   |-RecoveryExpr 0x1481410a0 <col:24> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x1481410c0 <col:44> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1481411c8 <line:7:2, line:8:10>     | |-UnaryOperator 0x148141168 <line:7:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x148141150 <col:7> 'struct btrfs_inode *' <LValueToRValue>     | |   `-DeclRefExpr 0x148141130 <col:7> 'struct btrfs_inode *' lvalue Var 0x148140d18 'ei' 'struct btrfs_inode *'     | `-ReturnStmt 0x1481411b8 <line:8:3, col:10>     |   `-RecoveryExpr 0x148141198 <col:10> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1481412a0 <line:10:2, col:13> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x148141220 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1481411e8 <col:2> 'struct btrfs_inode *' lvalue Var 0x148140d18 'ei' 'struct btrfs_inode *'     | `-RecoveryExpr 0x148141280 <col:13> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x148141340 <line:11:2, col:19> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1481412f8 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1481412c0 <col:2> 'struct btrfs_inode *' lvalue Var 0x148140d18 'ei' 'struct btrfs_inode *'     | `-IntegerLiteral 0x148141320 <col:19> 'int' 0     |-BinaryOperator 0x1481413e0 <line:12:2, col:19> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x148141398 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x148141360 <col:2> 'struct btrfs_inode *' lvalue Var 0x148140d18 'ei' 'struct btrfs_inode *'     | `-IntegerLiteral 0x1481413c0 <col:19> 'int' 0     |-BinaryOperator 0x148141480 <line:13:2, col:23> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x148141438 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x148141400 <col:2> 'struct btrfs_inode *' lvalue Var 0x148140d18 'ei' 'struct btrfs_inode *'     | `-IntegerLiteral 0x148141460 <col:23> 'int' 0     |-BinaryOperator 0x148141520 <line:14:2, col:21> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1481414d8 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1481414a0 <col:2> 'struct btrfs_inode *' lvalue Var 0x148140d18 'ei' 'struct btrfs_inode *'     | `-IntegerLiteral 0x148141500 <col:21> 'int' 0     |-BinaryOperator 0x1481415c0 <line:15:2, col:23> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x148141578 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x148141540 <col:2> 'struct btrfs_inode *' lvalue Var 0x148140d18 'ei' 'struct btrfs_inode *'     | `-IntegerLiteral 0x1481415a0 <col:23> 'int' 0     |-BinaryOperator 0x148141660 <line:16:2, col:21> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x148141618 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1481415e0 <col:2> 'struct btrfs_inode *' lvalue Var 0x148140d18 'ei' 'struct btrfs_inode *'     | `-IntegerLiteral 0x148141640 <col:21> 'int' 0     |-BinaryOperator 0x148141700 <line:17:2, col:20> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1481416b8 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x148141680 <col:2> 'struct btrfs_inode *' lvalue Var 0x148140d18 'ei' 'struct btrfs_inode *'     | `-IntegerLiteral 0x1481416e0 <col:20> 'int' 0     |-BinaryOperator 0x1481417a0 <line:18:2, col:14> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x148141758 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x148141720 <col:2> 'struct btrfs_inode *' lvalue Var 0x148140d18 'ei' 'struct btrfs_inode *'     | `-IntegerLiteral 0x148141780 <col:14> 'int' 0     |-BinaryOperator 0x148141840 <line:19:2, col:19> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1481417f8 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1481417c0 <col:2> 'struct btrfs_inode *' lvalue Var 0x148140d18 'ei' 'struct btrfs_inode *'     | `-IntegerLiteral 0x148141820 <col:19> 'int' 0     |-BinaryOperator 0x148141978 <line:21:2, col:18> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x148141930 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1481418f8 <col:2> 'struct btrfs_inode *' lvalue Var 0x148140d18 'ei' 'struct btrfs_inode *'     | `-IntegerLiteral 0x148141958 <col:18> 'int' 0     |-BinaryOperator 0x148147620 <line:22:2, col:26> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1481419d0 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x148141998 <col:2> 'struct btrfs_inode *' lvalue Var 0x148140d18 'ei' 'struct btrfs_inode *'     | `-IntegerLiteral 0x148147600 <col:26> 'int' 0     |-BinaryOperator 0x1481476c0 <line:23:2, col:24> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x148147678 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x148147640 <col:2> 'struct btrfs_inode *' lvalue Var 0x148140d18 'ei' 'struct btrfs_inode *'     | `-IntegerLiteral 0x1481476a0 <col:24> 'int' 0     |-CallExpr 0x148147858 <line:25:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1481477c0 <col:2> 'int ()' Function 0x148147708 'spin_lock_init' 'int ()'     | `-UnaryOperator 0x148147840 <col:17, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x148147818 <col:18, col:22> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1481477e0 <col:18> 'struct btrfs_inode *' lvalue Var 0x148140d18 'ei' 'struct btrfs_inode *'     |-BinaryOperator 0x148147900 <line:26:2, col:28> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1481478b8 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x148147880 <col:2> 'struct btrfs_inode *' lvalue Var 0x148140d18 'ei' 'struct btrfs_inode *'     | `-IntegerLiteral 0x1481478e0 <col:28> 'int' 0     |-BinaryOperator 0x1481479a0 <line:27:2, col:25> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x148147958 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x148147920 <col:2> 'struct btrfs_inode *' lvalue Var 0x148140d18 'ei' 'struct btrfs_inode *'     | `-IntegerLiteral 0x148147980 <col:25> 'int' 0     |-BinaryOperator 0x148147a40 <line:29:2, col:22> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1481479f8 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1481479c0 <col:2> 'struct btrfs_inode *' lvalue Var 0x148140d18 'ei' 'struct btrfs_inode *'     | `-IntegerLiteral 0x148147a20 <col:22> 'int' 0     |-BinaryOperator 0x148147be8 <line:34:2, col:23> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x148147b80 <col:2, col:14> '<dependent type>' contains-errors lvalue .tv_sec     | | `-RecoveryExpr 0x148147b58 <col:2, col:6> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x148147b20 <col:2> 'struct btrfs_inode *' lvalue Var 0x148140d18 'ei' 'struct btrfs_inode *'     | `-IntegerLiteral 0x148147bc8 <col:23> 'int' 0     |-BinaryOperator 0x148147cd0 <line:35:2, col:24> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x148147c68 <col:2, col:14> '<dependent type>' contains-errors lvalue .tv_nsec     | | `-RecoveryExpr 0x148147c40 <col:2, col:6> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x148147c08 <col:2> 'struct btrfs_inode *' lvalue Var 0x148140d18 'ei' 'struct btrfs_inode *'     | `-IntegerLiteral 0x148147cb0 <col:24> 'int' 0     |-BinaryOperator 0x148147d88 <line:37:2, col:15> 'struct inode *' contains-errors '='     | |-DeclRefExpr 0x148147cf0 <col:2> 'struct inode *' lvalue Var 0x148140e38 'inode' 'struct inode *'     | `-UnaryOperator 0x148147d70 <col:10, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x148147d48 <col:11, col:15> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x148147d10 <col:11> 'struct btrfs_inode *' lvalue Var 0x148140d18 'ei' 'struct btrfs_inode *'     |-CallExpr 0x148147f20 <line:38:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x148147e88 <col:2> 'int ()' Function 0x148147dd0 'extent_map_tree_init' 'int ()'     | `-UnaryOperator 0x148147f08 <col:23, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x148147ee0 <col:24, col:28> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x148147ea8 <col:24> 'struct btrfs_inode *' lvalue Var 0x148140d18 'ei' 'struct btrfs_inode *'     |-CallExpr 0x148148138 <line:39:2, col:50> '<dependent type>' contains-errors     | |-DeclRefExpr 0x148148028 <col:2> 'int ()' Function 0x148147f70 'extent_io_tree_init' 'int ()'     | |-UnaryOperator 0x1481480a8 <col:22, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x148148080 <col:23, col:27> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x148148048 <col:23> 'struct btrfs_inode *' lvalue Var 0x148140d18 'ei' 'struct btrfs_inode *'     | `-UnaryOperator 0x148148120 <col:36, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1481480f8 <col:37, col:44> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1481480c0 <col:37> 'struct inode *' lvalue Var 0x148140e38 'inode' 'struct inode *'     |-CallExpr 0x148148278 <line:40:2, col:58> '<dependent type>' contains-errors     | |-DeclRefExpr 0x148148168 <col:2> 'int ()' Function 0x148147f70 'extent_io_tree_init' 'int ()'     | |-UnaryOperator 0x1481481e8 <col:22, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x1481481c0 <col:23, col:27> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x148148188 <col:23> 'struct btrfs_inode *' lvalue Var 0x148140d18 'ei' 'struct btrfs_inode *'     | `-UnaryOperator 0x148148260 <col:44, col:52> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x148148238 <col:45, col:52> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x148148200 <col:45> 'struct inode *' lvalue Var 0x148140e38 'inode' 'struct inode *'     |-BinaryOperator 0x148148370 <line:41:2, col:31> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x148148308 <col:2, col:14> '<dependent type>' contains-errors lvalue .track_uptodate     | | `-RecoveryExpr 0x1481482e0 <col:2, col:6> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1481482a8 <col:2> 'struct btrfs_inode *' lvalue Var 0x148140d18 'ei' 'struct btrfs_inode *'     | `-IntegerLiteral 0x148148350 <col:31> 'int' 1     |-BinaryOperator 0x148148458 <line:42:2, col:39> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1481483f0 <col:2, col:22> '<dependent type>' contains-errors lvalue .track_uptodate     | | `-RecoveryExpr 0x1481483c8 <col:2, col:6> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x148148390 <col:2> 'struct btrfs_inode *' lvalue Var 0x148140d18 'ei' 'struct btrfs_inode *'     | `-IntegerLiteral 0x148148438 <col:39> 'int' 1     |-CallExpr 0x148148620 <line:43:2, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x148148558 <col:2> 'int ()' Function 0x1481484a0 'atomic_set' 'int ()'     | |-UnaryOperator 0x1481485d8 <col:13, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x1481485b0 <col:14, col:18> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x148148578 <col:14> 'struct btrfs_inode *' lvalue Var 0x148140d18 'ei' 'struct btrfs_inode *'     | `-IntegerLiteral 0x148148600 <col:32> 'int' 0     |-CallExpr 0x1481487c8 <line:44:2, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x148148730 <col:2> 'int ()' Function 0x148148678 'mutex_init' 'int ()'     | `-UnaryOperator 0x1481487b0 <col:13, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x148148788 <col:14, col:18> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x148148750 <col:14> 'struct btrfs_inode *' lvalue Var 0x148140d18 'ei' 'struct btrfs_inode *'     |-CallExpr 0x148148888 <line:45:2, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1481487f0 <col:2> 'int ()' Function 0x148148678 'mutex_init' 'int ()'     | `-UnaryOperator 0x148148870 <col:13, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x148148848 <col:14, col:18> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x148148810 <col:14> 'struct btrfs_inode *' lvalue Var 0x148140d18 'ei' 'struct btrfs_inode *'     |-CallExpr 0x148148a28 <line:46:2, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x148148990 <col:2> 'int ()' Function 0x1481488d8 'btrfs_ordered_inode_tree_init' 'int ()'     | `-UnaryOperator 0x148148a10 <col:32, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1481489e8 <col:33, col:37> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1481489b0 <col:33> 'struct btrfs_inode *' lvalue Var 0x148140d18 'ei' 'struct btrfs_inode *'     |-CallExpr 0x148148bc8 <line:47:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x148148b30 <col:2> 'int ()' Function 0x148148a78 'INIT_LIST_HEAD' 'int ()'     | `-UnaryOperator 0x148148bb0 <col:17, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x148148b88 <col:18, col:22> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x148148b50 <col:18> 'struct btrfs_inode *' lvalue Var 0x148140d18 'ei' 'struct btrfs_inode *'     |-CallExpr 0x148148d68 <line:48:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x148148cd0 <col:2> 'int ()' Function 0x148148c18 'RB_CLEAR_NODE' 'int ()'     | `-UnaryOperator 0x148148d50 <col:16, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x148148d28 <col:17, col:21> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x148148cf0 <col:17> 'struct btrfs_inode *' lvalue Var 0x148140d18 'ei' 'struct btrfs_inode *'     `-ReturnStmt 0x148148dc8 <line:50:2, col:9>       `-ImplicitCastExpr 0x148148db0 <col:9> 'struct inode *' <LValueToRValue>         `-DeclRefExpr 0x148148d90 <col:9> 'struct inode *' lvalue Var 0x148140e38 'inode' 'struct inode *' ","20330":"`-FunctionDecl 0x12900e350  line:1:6 ip6_input 'void (struct mbuf *)'   |-ParmVarDecl 0x12900e248 <col:16, col:29> col:29 used m 'struct mbuf *'   `-CompoundStmt 0x12a809aa0 <line:2:1, line:60:1>     |-DeclStmt 0x129026838 <line:3:5, col:20>     | |-RecordDecl 0x129026648 <col:5, col:12> col:12 struct ip6     | `-VarDecl 0x1290267b8 <col:5, col:17> col:17 used ip6 'struct ip6 *'     |-IfStmt 0x129026a88 <line:6:5, line:8:5>     | |-UnaryOperator 0x1290269f0 <line:6:9, col:17> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1290269d8 <col:10, col:17> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x129026990 <col:10, col:17> '<dependent type>' contains-errors lvalue ->in6_enabled     | |     `-RecoveryExpr 0x129026970 <col:10> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x129026a70 <col:30, line:8:5>     |   `-GotoStmt 0x129026a58 <line:7:9, col:14> 'bad' 0x129026a08     |-CallExpr 0x129026c88 <line:10:5, col:21> 'int'     | |-ImplicitCastExpr 0x129026c70 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x129026bc0 <col:5> 'int ()' Function 0x129026b08 'DEBUG_CALL' 'int ()'     | `-ImplicitCastExpr 0x129026cb0 <col:16> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x129026c20 <col:16> 'char[4]' lvalue \"STR\"     |-CallExpr 0x129026e20 <line:11:5, col:23> 'int'     | |-ImplicitCastExpr 0x129026e08 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x129026da8 <col:5> 'int ()' Function 0x129026cf0 'DEBUG_ARG' 'int ()'     | |-ImplicitCastExpr 0x129026e50 <col:15> 'char *' <ArrayToPointerDecay>     | | `-StringLiteral 0x129026dc8 <col:15> 'char[4]' lvalue \"STR\"     | `-ImplicitCastExpr 0x129026e68 <col:22> 'struct mbuf *' <LValueToRValue>     |   `-DeclRefExpr 0x129026de8 <col:22> 'struct mbuf *' lvalue ParmVar 0x12900e248 'm' 'struct mbuf *'     |-CallExpr 0x129026f20 <line:12:5, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x129026e80 <col:5> 'int ()' Function 0x129026cf0 'DEBUG_ARG' 'int ()'     | |-StringLiteral 0x129026ea0 <col:15> 'char[4]' lvalue \"STR\"     | `-RecoveryExpr 0x129026ef8 <col:22, col:25> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x129026ec0 <col:22> 'struct mbuf *' lvalue ParmVar 0x12900e248 'm' 'struct mbuf *'     |-IfStmt 0x129027050 <line:14:5, line:16:5>     | |-RecoveryExpr 0x129027000 <line:14:9, col:37> '_Bool' contains-errors     | `-CompoundStmt 0x129027038 <col:40, line:16:5>     |   `-GotoStmt 0x129027020 <line:15:9, col:14> 'bad' 0x129026a08     |-IfStmt 0x1290272b8 <line:20:5, line:22:5>     | |-BinaryOperator 0x129027268 <line:20:9, col:22> 'int' contains-errors '!='     | | |-RecoveryExpr 0x1290271e8 <col:9, col:14> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x1290271b0 <col:9> 'struct ip6 *' lvalue Var 0x1290267b8 'ip6' 'struct ip6 *'     | | `-RecoveryExpr 0x129027248 <col:22> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1290272a0 <col:34, line:22:5>     |   `-GotoStmt 0x129027288 <line:21:9, col:14> 'bad' 0x129026a08     |-IfStmt 0x12a808df8 <line:24:5, line:27:5>     | |-BinaryOperator 0x129027548 <line:24:9, col:36> 'int' contains-errors '>'     | | |-CallExpr 0x129027438 <col:9, col:25> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x1290273b8 <col:9> 'int ()' Function 0x129027300 'ntohs' 'int ()'     | | | `-RecoveryExpr 0x129027410 <col:15, col:20> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x1290273d8 <col:15> 'struct ip6 *' lvalue Var 0x1290267b8 'ip6' 'struct ip6 *'     | | `-CXXDependentScopeMemberExpr 0x129027500 <col:29, col:36> '<dependent type>' contains-errors lvalue ->if_mtu     | |   `-RecoveryExpr 0x1290274e0 <col:29> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12a808dd8 <col:44, line:27:5>     |   |-CallExpr 0x12a808d88 <line:25:9, col:44> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12a808cb8 <col:9> 'int ()' Function 0x12a808c00 'icmp6_send_error' 'int ()'     |   | |-DeclRefExpr 0x12a808cd8 <col:26> 'struct mbuf *' lvalue ParmVar 0x12900e248 'm' 'struct mbuf *'     |   | |-RecoveryExpr 0x12a808d68 <col:29> '<dependent type>' contains-errors lvalue     |   | `-IntegerLiteral 0x12a808d10 <col:43> 'int' 0     |   `-GotoStmt 0x12a808dc0 <line:26:9, col:14> 'bad' 0x129026a08     |-IfStmt 0x12a808f90 <line:32:5, line:34:5>     | |-RecoveryExpr 0x12a808f40 <line:32:9, col:57> '_Bool' contains-errors     | `-CompoundStmt 0x12a808f78 <col:60, line:34:5>     |   `-GotoStmt 0x12a808f60 <line:33:9, col:14> 'bad' 0x129026a08     |-IfStmt 0x12a8090c0 <line:37:5, line:40:5>     | |-BinaryOperator 0x12a809030 <line:37:9, col:23> 'int' contains-errors '=='     | | |-RecoveryExpr 0x12a808fe8 <col:9, col:14> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x12a808fb0 <col:9> 'struct ip6 *' lvalue Var 0x1290267b8 'ip6' 'struct ip6 *'     | | `-IntegerLiteral 0x12a809010 <col:23> 'int' 0     | `-CompoundStmt 0x12a8090a8 <col:26, line:40:5>     |   `-GotoStmt 0x12a809090 <line:39:9, col:14> 'bad' 0x129026a08     |-SwitchStmt 0x12a809158 <line:43:5, line:56:5>     | |-ImplicitCastExpr 0x12a809140 <line:43:13, col:18> '<dependent type>' contains-errors <LValueToRValue>     | | `-RecoveryExpr 0x12a809118 <col:13, col:18> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12a8090e0 <col:13> 'struct ip6 *' lvalue Var 0x1290267b8 'ip6' 'struct ip6 *'     | `-CompoundStmt 0x12a809990 <col:25, line:56:5>     |   |-CallExpr 0x12a8092e0 <line:45:9, col:25> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12a809260 <col:9> 'int ()' Function 0x12a8091a8 'NTOHS' 'int ()'     |   | `-RecoveryExpr 0x12a8092b8 <col:15, col:20> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x12a809280 <col:15> 'struct ip6 *' lvalue Var 0x1290267b8 'ip6' 'struct ip6 *'     |   |-BreakStmt 0x12a8094f0 <line:47:9>     |   |-CallExpr 0x12a809630 <line:49:9, col:21> 'int'     |   | |-ImplicitCastExpr 0x12a809618 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x12a8095d8 <col:9> 'int ()' Function 0x12a809520 'udp6_input' 'int ()'     |   | `-ImplicitCastExpr 0x12a809658 <col:20> 'struct mbuf *' <LValueToRValue>     |   |   `-DeclRefExpr 0x12a8095f8 <col:20> 'struct mbuf *' lvalue ParmVar 0x12900e248 'm' 'struct mbuf *'     |   |-BreakStmt 0x12a809670 <line:50:9>     |   |-CallExpr 0x12a8097b0 <line:52:9, col:22> 'int'     |   | |-ImplicitCastExpr 0x12a809798 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x12a809758 <col:9> 'int ()' Function 0x12a8096a0 'icmp6_input' 'int ()'     |   | `-ImplicitCastExpr 0x12a8097d8 <col:21> 'struct mbuf *' <LValueToRValue>     |   |   `-DeclRefExpr 0x12a809778 <col:21> 'struct mbuf *' lvalue ParmVar 0x12900e248 'm' 'struct mbuf *'     |   |-BreakStmt 0x12a8097f0 <line:53:9>     |   `-DefaultStmt 0x12a809970 <line:54:5, line:55:17>     |     `-CallExpr 0x12a809930 <col:9, col:17> 'int'     |       |-ImplicitCastExpr 0x12a809918 <col:9> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x12a8098d8 <col:9> 'int ()' Function 0x12a809820 'm_free' 'int ()'     |       `-ImplicitCastExpr 0x12a809958 <col:16> 'struct mbuf *' <LValueToRValue>     |         `-DeclRefExpr 0x12a8098f8 <col:16> 'struct mbuf *' lvalue ParmVar 0x12900e248 'm' 'struct mbuf *'     |-ReturnStmt 0x12a8099d8 <line:57:5>     `-LabelStmt 0x12a809a80 <line:58:1, line:59:13> 'bad'       `-CallExpr 0x12a809a40 <col:5, col:13> 'int'         |-ImplicitCastExpr 0x12a809a28 <col:5> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x12a8099e8 <col:5> 'int ()' Function 0x12a809820 'm_free' 'int ()'         `-ImplicitCastExpr 0x12a809a68 <col:12> 'struct mbuf *' <LValueToRValue>           `-DeclRefExpr 0x12a809a08 <col:12> 'struct mbuf *' lvalue ParmVar 0x12900e248 'm' 'struct mbuf *' ","20598":"`-FunctionDecl 0x1459281f8  line:1:1 invalid vips_foreign_load_temp 'int (int *)'   |-ParmVarDecl 0x145928128 <col:25, col:42> col:42 referenced invalid load 'int *'   `-CompoundStmt 0x146009668 <line:2:1, line:45:1>     |-DeclStmt 0x145928508 <line:3:2, col:58>     | `-VarDecl 0x1459282c0 <col:2, col:16> col:16 invalid disc_threshold 'const int'     |-DeclStmt 0x145928730 <line:4:2, col:65>     | `-VarDecl 0x145928538 <col:2, col:16> col:16 invalid image_size 'const int'     |-IfStmt 0x146008dc0 <line:7:2, line:13:2>     | |-BinaryOperator 0x146008c20 <line:7:6, col:20> '<dependent type>' contains-errors '&'     | | |-CXXDependentScopeMemberExpr 0x145928768 <col:6, col:12> '<dependent type>' contains-errors lvalue ->flags     | | | `-RecoveryExpr 0x145928748 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x146008c00 <col:20> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x146008da8 <col:43, line:13:2>     |   `-ReturnStmt 0x146008d98 <line:12:3, col:28>     |     `-ParenExpr 0x146008d78 <col:9, col:28> 'int'     |       `-CallExpr 0x146008d58 <col:11, col:26> 'int'     |         `-ImplicitCastExpr 0x146008d40 <col:11> 'int (*)()' <FunctionToPointerDecay>     |           `-DeclRefExpr 0x146008d20 <col:11> 'int ()' Function 0x146008c68 'vips_image_new' 'int ()'     |-IfStmt 0x146008fe0 <line:16:2, line:23:2>     | |-RecoveryExpr 0x146008f20 <line:16:6, line:17:19> '_Bool' contains-errors     | `-CompoundStmt 0x146008fc8 <col:40, line:23:2>     |   `-ReturnStmt 0x146008fb8 <line:22:3, col:28>     |     `-ParenExpr 0x146008f98 <col:9, col:28> 'int'     |       `-CallExpr 0x146008f78 <col:11, col:26> 'int'     |         `-ImplicitCastExpr 0x146008f60 <col:11> 'int (*)()' <FunctionToPointerDecay>     |           `-DeclRefExpr 0x146008f40 <col:11> 'int ()' Function 0x146008c68 'vips_image_new' 'int ()'     |-IfStmt 0x1460091a0 <line:26:2, line:27:18>     | |-UnaryOperator 0x146009080 <line:26:6, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x146009068 <col:7, col:13> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x146009020 <col:7, col:13> '<dependent type>' contains-errors lvalue ->disc     | |     `-RecoveryExpr 0x146009000 <col:7> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x146009180 <line:27:3, col:18> '<dependent type>' contains-errors '='     |   |-CXXDependentScopeMemberExpr 0x1460090e0 <col:3, col:9> '<dependent type>' contains-errors lvalue ->memory     |   | `-RecoveryExpr 0x1460090b8 <col:3> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x146009098 <col:3> 'int *' lvalue ParmVar 0x145928128 'load' 'int *'     |   `-RecoveryExpr 0x146009160 <col:18> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1460094e0 <line:30:2, line:37:2>     | |-BinaryOperator 0x1460092b8 <line:30:6, line:31:16> 'int' contains-errors '&&'     | | |-UnaryOperator 0x146009240 <line:30:6, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x146009228 <col:7, col:13> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-CXXDependentScopeMemberExpr 0x1460091e0 <col:7, col:13> '<dependent type>' contains-errors lvalue ->memory     | | |     `-RecoveryExpr 0x1460091c0 <col:7> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x146009298 <line:31:3, col:16> 'int' contains-errors '>'     | |   |-RecoveryExpr 0x146009258 <col:3> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x146009278 <col:16> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1460094c8 <col:33, line:37:2>     |   `-ReturnStmt 0x1460094b8 <line:36:3, col:45>     |     `-ParenExpr 0x146009498 <col:9, col:45> 'int'     |       `-CallExpr 0x146009458 <col:11, col:43> 'int'     |         |-ImplicitCastExpr 0x146009440 <col:11> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x1460093b8 <col:11> 'int ()' Function 0x146009300 'vips_image_new_temp_file' 'int ()'     |         `-ImplicitCastExpr 0x146009480 <col:37> 'char *' <ArrayToPointerDecay>     |           `-StringLiteral 0x146009420 <col:37> 'char[4]' lvalue \"STR\"     `-ReturnStmt 0x146009658 <line:44:2, col:34>       `-ParenExpr 0x146009638 <col:8, col:34> 'int'         `-CallExpr 0x146009618 <col:10, col:32> 'int'           `-ImplicitCastExpr 0x146009600 <col:10> 'int (*)()' <FunctionToPointerDecay>             `-DeclRefExpr 0x1460095e0 <col:10> 'int ()' Function 0x146009528 'vips_image_new_memory' 'int ()' ","20619":"`-FunctionDecl 0x15000de38  line:1:1 TEST_P 'int (int, int)'   |-ParmVarDecl 0x15000dd58 <col:8> col:8 Http2CodecImplTest 'int'   |-ParmVarDecl 0x15000dcd8 <col:28> col:28 PingStacksWithDataFlood 'int'   `-CompoundStmt 0x14691ddf0 <col:53, line:30:1>     |-CallExpr 0x15000e0c8 <line:2:3, col:14> 'int'     | `-ImplicitCastExpr 0x15000e0b0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x15000e060 <col:3> 'int ()' Function 0x15000dfa8 'initialize' 'int ()'     |-RecoveryExpr 0x15000e118 <line:5:3> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14691d470 <line:6:3, col:57> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15000e218 <col:3> 'int ()' Function 0x15000e160 'EXPECT_CALL' 'int ()'     | |-RecoveryExpr 0x15000e3e0 <col:15> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x14691d440 <col:33, col:56> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15000e330 <col:33> 'int ()' Function 0x15000e278 'decodeHeaders_' 'int ()'     |   |-RecoveryExpr 0x14691d400 <col:48> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x14691d420 <col:51> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x14691d570 <line:9:3, col:22>     | `-VarDecl 0x14691d4e8 <col:3, col:21> col:7 used frame_count 'int' cinit     |   `-IntegerLiteral 0x14691d550 <col:21> 'int' 0     `-RecoveryExpr 0x14691d5b8 <line:10:3> '<dependent type>' contains-errors lvalue ","21150":"`-FunctionDecl 0x129144d48  line:1:12 aspeed_lpc_ctrl_mmap 'int (struct file *, struct vm_area_struct *)' static   |-ParmVarDecl 0x129128648 <col:33, col:46> col:46 used file 'struct file *'   |-ParmVarDecl 0x129144c28 <col:52, col:75> col:75 used vma 'struct vm_area_struct *'   `-CompoundStmt 0x129145b48 <line:2:1, line:19:1>     |-DeclStmt 0x129145248 <line:3:2, col:63>     | |-RecordDecl 0x129144e48 <col:2, col:9> col:9 struct aspeed_lpc_ctrl     | `-VarDecl 0x129144fb8 <col:2, col:62> col:26 used lpc_ctrl 'struct aspeed_lpc_ctrl *' cinit     |   `-ImplicitCastExpr 0x129145218 <col:37, col:62> 'struct aspeed_lpc_ctrl *' <IntegralToPointer>     |     `-CallExpr 0x1291451d8 <col:37, col:62> 'int'     |       |-ImplicitCastExpr 0x1291451c0 <col:37> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x129145150 <col:37> 'int ()' Function 0x129145098 'file_aspeed_lpc_ctrl' 'int ()'     |       `-ImplicitCastExpr 0x129145200 <col:58> 'struct file *' <LValueToRValue>     |         `-DeclRefExpr 0x129145170 <col:58> 'struct file *' lvalue ParmVar 0x129128648 'file' 'struct file *'     |-DeclStmt 0x1291453c0 <line:4:2, col:51>     | `-VarDecl 0x129145278 <col:2, col:43> col:16 used vsize 'unsigned long' cinit     |   `-BinaryOperator 0x1291453a0 <col:24, col:43> '<dependent type>' contains-errors '-'     |     |-RecoveryExpr 0x129145318 <col:24, col:29> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x1291452e0 <col:24> 'struct vm_area_struct *' lvalue ParmVar 0x129144c28 'vma' 'struct vm_area_struct *'     |     `-RecoveryExpr 0x129145378 <col:38, col:43> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x129145340 <col:38> 'struct vm_area_struct *' lvalue ParmVar 0x129144c28 'vma' 'struct vm_area_struct *'     |-IfStmt 0x129145620 <line:7:2, line:8:11>     | |-BinaryOperator 0x129145558 <line:7:6, col:61> 'int' contains-errors '>'     | | |-BinaryOperator 0x129145458 <col:6, col:22> '<dependent type>' contains-errors '+'     | | | |-RecoveryExpr 0x129145410 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x1291453d8 <col:6> 'struct vm_area_struct *' lvalue ParmVar 0x129144c28 'vma' 'struct vm_area_struct *'     | | | `-DeclRefExpr 0x129145438 <col:22> 'unsigned long' contains-errors lvalue Var 0x129145278 'vsize' 'unsigned long'     | | `-BinaryOperator 0x129145538 <col:30, col:61> '<dependent type>' contains-errors '+'     | |   |-RecoveryExpr 0x1291454b0 <col:30, col:40> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x129145478 <col:30> 'struct aspeed_lpc_ctrl *' lvalue Var 0x129144fb8 'lpc_ctrl' 'struct aspeed_lpc_ctrl *'     | |   `-RecoveryExpr 0x129145510 <col:51, col:61> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x1291454d8 <col:51> 'struct aspeed_lpc_ctrl *' lvalue Var 0x129144fb8 'lpc_ctrl' 'struct aspeed_lpc_ctrl *'     | `-ReturnStmt 0x129145610 <line:8:3, col:11>     |   `-UnaryOperator 0x1291455f8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x1291455e0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x1291455c0 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x129145af8 <line:13:2, line:16:11>     | |-RecoveryExpr 0x129145a30 <line:13:6, line:15:14> '_Bool' contains-errors     | `-ReturnStmt 0x129145ae8 <line:16:3, col:11>     |   `-UnaryOperator 0x129145ad0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x129145ab8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x129145a98 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x129145b38 <line:18:2, col:9>       `-IntegerLiteral 0x129145b18 <col:9> 'int' 0 ","21165":"`-FunctionDecl 0x13000e350  line:1:13 kvm_make_mclock_inprogress_request 'void (struct kvm *)' static   |-ParmVarDecl 0x13000e248 <col:48, col:60> col:60 used kvm 'struct kvm *'   `-CompoundStmt 0x13002aa48 <line:2:1, line:4:1>     `-CallExpr 0x13002aa18 <line:3:2, col:58> '<dependent type>' contains-errors       |-DeclRefExpr 0x13002a970 <col:2> 'int ()' Function 0x13002a8b8 'kvm_make_all_cpus_request' 'int ()'       |-DeclRefExpr 0x13002a990 <col:28> 'struct kvm *' lvalue ParmVar 0x13000e248 'kvm' 'struct kvm *'       `-RecoveryExpr 0x13002a9f8 <col:33> '<dependent type>' contains-errors lvalue ","21087":"`-FunctionDecl 0x12b00e350  line:1:13 xfrm_statistics_fini 'void (struct net *)' static   |-ParmVarDecl 0x12b00e248 <col:34, col:46> col:46 used net 'struct net *'   `-CompoundStmt 0x12b02ac08 <line:2:1, line:5:1>     |-CallExpr 0x12b02a9f8 <line:3:2, col:20> 'int'     | |-ImplicitCastExpr 0x12b02a9e0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12b02a970 <col:2> 'int ()' Function 0x12b02a8b8 'xfrm_proc_fini' 'int ()'     | `-ImplicitCastExpr 0x12b02aa20 <col:17> 'struct net *' <LValueToRValue>     |   `-DeclRefExpr 0x12b02a990 <col:17> 'struct net *' lvalue ParmVar 0x12b00e248 'net' 'struct net *'     `-CallExpr 0x12b02abe0 <line:4:2, col:38> '<dependent type>' contains-errors       |-DeclRefExpr 0x12b02ab18 <col:2> 'int ()' Function 0x12b02aa60 'free_percpu' 'int ()'       `-CXXDependentScopeMemberExpr 0x12b02ab98 <col:14, col:23> '<dependent type>' contains-errors lvalue .xfrm_statistics         `-RecoveryExpr 0x12b02ab70 <col:14, col:19> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x12b02ab38 <col:14> 'struct net *' lvalue ParmVar 0x12b00e248 'net' 'struct net *' ","20411":"`-FunctionDecl 0x14e827600  line:1:13 invalid tcp_illinois_info 'void (struct sock *, int, struct sk_buff *)' static   |-ParmVarDecl 0x14e80e248 <col:31, col:44> col:44 used sk 'struct sock *'   |-ParmVarDecl 0x14e80e2e0 <col:48, col:52> col:52 invalid ext 'int'   |-ParmVarDecl 0x14e8274c8 <line:2:10, col:26> col:26 used skb 'struct sk_buff *'   `-CompoundStmt 0x14e122708 <line:3:1, line:19:1>     |-DeclStmt 0x14e827ae8 <line:4:2, col:45>     | |-RecordDecl 0x14e8276c0 <col:8, col:15> col:15 struct illinois     | `-VarDecl 0x14e827828 <col:2, col:44> col:25 used ca 'const struct illinois *' cinit     |   `-ImplicitCastExpr 0x14e827ab8 <col:30, col:44> 'const struct illinois *' <IntegralToPointer>     |     `-CallExpr 0x14e827a78 <col:30, col:44> 'int'     |       |-ImplicitCastExpr 0x14e827a60 <col:30> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14e8279f0 <col:30> 'int ()' Function 0x14e827938 'inet_csk_ca' 'int ()'     |       `-ImplicitCastExpr 0x14e827aa0 <col:42> 'struct sock *' <LValueToRValue>     |         `-DeclRefExpr 0x14e827a10 <col:42> 'struct sock *' lvalue ParmVar 0x14e80e248 'sk' 'struct sock *'     `-IfStmt 0x14e1226e8 <line:6:2, line:18:2>       |-RecoveryExpr 0x14e827b98 <line:6:6, col:43> '_Bool' contains-errors       `-CompoundStmt 0x14e1226b8 <col:46, line:18:2>         |-DeclStmt 0x14e827f30 <line:7:3, line:11:4>         | |-RecordDecl 0x14e827bb8 <line:7:3, col:10> col:10 struct tcpvegas_info         | `-VarDecl 0x14e827cb8 <col:3, col:24> col:24 referenced invalid info 'struct tcpvegas_info'         |-CallExpr 0x14e828110 <line:14:3, col:24> '<dependent type>' contains-errors         | |-DeclRefExpr 0x14e828028 <col:3> 'int ()' Function 0x14e827f70 'do_div' 'int ()'         | |-RecoveryExpr 0x14e8280f0 <col:10> '<dependent type>' contains-errors lvalue         | `-RecoveryExpr 0x14e828098 <col:13, col:17> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x14e828060 <col:13> 'const struct illinois *' lvalue Var 0x14e827828 'ca' 'const struct illinois *'         |-BinaryOperator 0x14e828228 <line:15:3, col:19> '<dependent type>' contains-errors '='         | |-CXXDependentScopeMemberExpr 0x14e828188 <col:3, col:8> '<dependent type>' contains-errors lvalue .tcpv_rtt         | | `-RecoveryExpr 0x14e828160 <col:3> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x14e828140 <col:3> 'struct tcpvegas_info' lvalue Var 0x14e827cb8 'info' 'struct tcpvegas_info'         | `-RecoveryExpr 0x14e828208 <col:19> '<dependent type>' contains-errors lvalue         `-CallExpr 0x14e122678 <line:17:3, col:56> '<dependent type>' contains-errors           |-DeclRefExpr 0x14e828328 <col:3> 'int ()' Function 0x14e828270 'nla_put' 'int ()'           |-DeclRefExpr 0x14e828348 <col:11> 'struct sk_buff *' lvalue ParmVar 0x14e8274c8 'skb' 'struct sk_buff *'           |-RecoveryExpr 0x14e122658 <col:16> '<dependent type>' contains-errors lvalue           |-UnaryExprOrTypeTraitExpr 0x14e8283c0 <col:37, col:48> 'unsigned long' contains-errors sizeof           | `-ParenExpr 0x14e8283a0 <col:43, col:48> '<dependent type>' contains-errors lvalue           |   `-RecoveryExpr 0x14e828380 <col:44> '<dependent type>' contains-errors lvalue           `-UnaryOperator 0x14e122600 <col:51, col:52> '<dependent type>' contains-errors prefix '&' cannot overflow             `-RecoveryExpr 0x14e8283e0 <col:52> '<dependent type>' contains-errors lvalue ","21154":"`-FunctionDecl 0x14700ddc8  line:1:1 invalid extract_header_length 'int (int)'   |-ParmVarDecl 0x14700dcf0 <col:23, col:32> col:32 invalid fc 'int'   `-CompoundStmt 0x147027a20 <line:2:1, line:40:1>     |-DeclStmt 0x14700df18 <line:3:2, col:13>     | `-VarDecl 0x14700de90 <col:2, col:12> col:6 used len 'int' cinit     |   `-IntegerLiteral 0x14700def8 <col:12> 'int' 0     |-SwitchStmt 0x14700dff0 <line:5:2, line:18:2>     | |-BinaryOperator 0x14700dfd0 <line:5:10, col:23> '<dependent type>' contains-errors '&'     | | |-ParenExpr 0x14700df90 <col:10, col:19> '<dependent type>' contains-errors     | | | `-BinaryOperator 0x14700df70 <col:11, col:17> '<dependent type>' contains-errors '>>'     | | |   |-RecoveryExpr 0x14700df30 <col:11> '<dependent type>' contains-errors lvalue     | | |   `-IntegerLiteral 0x14700df50 <col:17> 'int' 10     | | `-IntegerLiteral 0x14700dfb0 <col:23> 'int' 3     | `-CompoundStmt 0x14700e3a0 <col:28, line:18:2>     |   |-CaseStmt 0x14700e038 <line:6:2, line:8:12>     |   | |-IntegerLiteral 0x14700e018 <line:6:7> 'int' 0     |   | `-IfStmt 0x14700e168 <line:7:3, line:8:12>     |   |   |-BinaryOperator 0x14700e100 <line:7:7, col:19> '<dependent type>' contains-errors '&'     |   |   | |-RecoveryExpr 0x14700e060 <col:7> '<dependent type>' contains-errors lvalue     |   |   | `-ParenExpr 0x14700e0e0 <col:12, col:19> 'int'     |   |   |   `-BinaryOperator 0x14700e0c0 <col:13, col:18> 'int' '<<'     |   |   |     |-IntegerLiteral 0x14700e080 <col:13> 'int' 1     |   |   |     `-IntegerLiteral 0x14700e0a0 <col:18> 'int' 6     |   |   `-ReturnStmt 0x14700e158 <line:8:4, col:12>     |   |     `-UnaryOperator 0x14700e140 <col:11, col:12> 'int' prefix '-'     |   |       `-IntegerLiteral 0x14700e120 <col:12> 'int' 1     |   |-BreakStmt 0x14700e188 <line:9:3>     |   |-CaseStmt 0x14700e1b0 <line:10:2, line:11:11>     |   | |-IntegerLiteral 0x14700e190 <line:10:7> 'int' 1     |   | `-ReturnStmt 0x14700e210 <line:11:3, col:11>     |   |   `-UnaryOperator 0x14700e1f8 <col:10, col:11> 'int' prefix '-'     |   |     `-IntegerLiteral 0x14700e1d8 <col:11> 'int' 1     |   |-CaseStmt 0x14700e240 <line:12:2, line:13:10>     |   | |-IntegerLiteral 0x14700e220 <line:12:7> 'int' 2     |   | `-CompoundAssignOperator 0x14700e2a8 <line:13:3, col:10> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'     |   |   |-DeclRefExpr 0x14700e268 <col:3> 'int' lvalue Var 0x14700de90 'len' 'int'     |   |   `-IntegerLiteral 0x14700e288 <col:10> 'int' 4     |   |-BreakStmt 0x14700e2d8 <line:14:3>     |   |-CaseStmt 0x14700e300 <line:15:2, line:16:10>     |   | |-IntegerLiteral 0x14700e2e0 <line:15:7> 'int' 3     |   | `-CompoundAssignOperator 0x14700e368 <line:16:3, col:10> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'     |   |   |-DeclRefExpr 0x14700e328 <col:3> 'int' lvalue Var 0x14700de90 'len' 'int'     |   |   `-IntegerLiteral 0x14700e348 <col:10> 'int' 10     |   `-BreakStmt 0x14700e398 <line:17:3>     |-SwitchStmt 0x1470274c0 <line:20:2, line:31:2>     | |-BinaryOperator 0x1470274a0 <line:20:10, col:23> '<dependent type>' contains-errors '&'     | | |-ParenExpr 0x147027460 <col:10, col:19> '<dependent type>' contains-errors     | | | `-BinaryOperator 0x147027440 <col:11, col:17> '<dependent type>' contains-errors '>>'     | | |   |-RecoveryExpr 0x147027400 <col:11> '<dependent type>' contains-errors lvalue     | | |   `-IntegerLiteral 0x147027420 <col:17> 'int' 14     | | `-IntegerLiteral 0x147027480 <col:23> 'int' 3     | `-CompoundStmt 0x147027748 <col:28, line:31:2>     |   |-CaseStmt 0x147027508 <line:21:2, line:22:3>     |   | |-IntegerLiteral 0x1470274e8 <line:21:7> 'int' 0     |   | `-BreakStmt 0x147027530 <line:22:3>     |   |-CaseStmt 0x147027558 <line:23:2, line:24:11>     |   | |-IntegerLiteral 0x147027538 <line:23:7> 'int' 1     |   | `-ReturnStmt 0x1470275b8 <line:24:3, col:11>     |   |   `-UnaryOperator 0x1470275a0 <col:10, col:11> 'int' prefix '-'     |   |     `-IntegerLiteral 0x147027580 <col:11> 'int' 1     |   |-CaseStmt 0x1470275e8 <line:25:2, line:26:10>     |   | |-IntegerLiteral 0x1470275c8 <line:25:7> 'int' 2     |   | `-CompoundAssignOperator 0x147027650 <line:26:3, col:10> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'     |   |   |-DeclRefExpr 0x147027610 <col:3> 'int' lvalue Var 0x14700de90 'len' 'int'     |   |   `-IntegerLiteral 0x147027630 <col:10> 'int' 4     |   |-BreakStmt 0x147027680 <line:27:3>     |   |-CaseStmt 0x1470276a8 <line:28:2, line:29:10>     |   | |-IntegerLiteral 0x147027688 <line:28:7> 'int' 3     |   | `-CompoundAssignOperator 0x147027710 <line:29:3, col:10> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'     |   |   |-DeclRefExpr 0x1470276d0 <col:3> 'int' lvalue Var 0x14700de90 'len' 'int'     |   |   `-IntegerLiteral 0x1470276f0 <col:10> 'int' 10     |   `-BreakStmt 0x147027740 <line:30:3>     |-IfStmt 0x1470279b8 <line:33:2, line:37:2>     | |-BinaryOperator 0x147027828 <line:33:6, col:18> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x147027788 <col:6> '<dependent type>' contains-errors lvalue     | | `-ParenExpr 0x147027808 <col:11, col:18> 'int'     | |   `-BinaryOperator 0x1470277e8 <col:12, col:17> 'int' '<<'     | |     |-IntegerLiteral 0x1470277a8 <col:12> 'int' 1     | |     `-IntegerLiteral 0x1470277c8 <col:17> 'int' 6     | `-CompoundStmt 0x147027998 <col:21, line:37:2>     |   |-IfStmt 0x147027908 <line:34:3, line:35:12>     |   | |-BinaryOperator 0x1470278a0 <line:34:7, col:13> 'int' '<'     |   | | |-ImplicitCastExpr 0x147027888 <col:7> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x147027848 <col:7> 'int' lvalue Var 0x14700de90 'len' 'int'     |   | | `-IntegerLiteral 0x147027868 <col:13> 'int' 2     |   | `-ReturnStmt 0x1470278f8 <line:35:4, col:12>     |   |   `-UnaryOperator 0x1470278e0 <col:11, col:12> 'int' prefix '-'     |   |     `-IntegerLiteral 0x1470278c0 <col:12> 'int' 1     |   `-CompoundAssignOperator 0x147027968 <line:36:3, col:10> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'     |     |-DeclRefExpr 0x147027928 <col:3> 'int' lvalue Var 0x14700de90 'len' 'int'     |     `-IntegerLiteral 0x147027948 <col:10> 'int' 2     `-ReturnStmt 0x147027a10 <line:39:2, col:9>       `-ImplicitCastExpr 0x1470279f8 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x1470279d8 <col:9> 'int' lvalue Var 0x14700de90 'len' 'int' ","20759":"`-FunctionDecl 0x121141a08  col:15 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x121141b08 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x121141ab0 <<invalid sloc>> Implicit 902 ","21192":"`-FunctionDecl 0x12181ba58  line:1:1 invalid xmlGetEntityFromTable 'int (int, const int *)'   |-ParmVarDecl 0x12181b8f0 <col:23, col:43> col:43 invalid table 'int'   |-ParmVarDecl 0x12181b970 <col:50, col:65> col:65 invalid name 'const int *'   `-CompoundStmt 0x12181bb28 <col:71, line:3:1> ","20832":"`-FunctionDecl 0x135923208  line:1:1 v3d_submit_cl_ioctl 'int (struct drm_device *, void *, struct drm_file *)'   |-ParmVarDecl 0x13600e248 <col:21, col:40> col:40 used dev 'struct drm_device *'   |-ParmVarDecl 0x13600e2c8 <col:45, col:51> col:51 used data 'void *'   |-ParmVarDecl 0x1359230c8 <line:2:7, col:24> col:24 used file_priv 'struct drm_file *'   `-CompoundStmt 0x136029188 <line:3:1, line:102:1>     |-DeclStmt 0x135923708 <line:4:2, col:39>     | |-RecordDecl 0x135923310 <col:2, col:9> col:9 struct v3d_dev     | `-VarDecl 0x135923478 <col:2, col:38> col:18 used v3d 'struct v3d_dev *' cinit     |   `-ImplicitCastExpr 0x1359236d8 <col:24, col:38> 'struct v3d_dev *' <IntegralToPointer>     |     `-CallExpr 0x135923698 <col:24, col:38> 'int'     |       |-ImplicitCastExpr 0x135923680 <col:24> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x135923610 <col:24> 'int ()' Function 0x135923558 'to_v3d_dev' 'int ()'     |       `-ImplicitCastExpr 0x1359236c0 <col:35> 'struct drm_device *' <LValueToRValue>     |         `-DeclRefExpr 0x135923630 <col:35> 'struct drm_device *' lvalue ParmVar 0x13600e248 'dev' 'struct drm_device *'     |-DeclStmt 0x135923968 <line:5:2, col:57>     | |-RecordDecl 0x135923720 <col:2, col:9> col:9 struct v3d_file_priv     | `-VarDecl 0x135923888 <col:2, col:46> col:24 used v3d_priv 'struct v3d_file_priv *' cinit     |   `-RecoveryExpr 0x135923928 <col:35, col:46> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1359238f0 <col:35> 'struct drm_file *' lvalue ParmVar 0x1359230c8 'file_priv' 'struct drm_file *'     |-DeclStmt 0x135923bb8 <line:6:2, col:39>     | |-RecordDecl 0x135923980 <col:2, col:9> col:9 struct drm_v3d_submit_cl     | `-VarDecl 0x135923ae8 <col:2, col:35> col:28 used args 'struct drm_v3d_submit_cl *' cinit     |   `-ImplicitCastExpr 0x135923b88 <col:35> 'struct drm_v3d_submit_cl *' <BitCast>     |     `-ImplicitCastExpr 0x135923b70 <col:35> 'void *' <LValueToRValue>     |       `-DeclRefExpr 0x135923b50 <col:35> 'void *' lvalue ParmVar 0x13600e2c8 'data' 'void *'     |-DeclStmt 0x135923df0 <line:7:2, col:32>     | |-RecordDecl 0x135923bd0 <col:2, col:9> col:9 struct v3d_bin_job     | `-VarDecl 0x135923d38 <col:2, col:28> col:22 used bin 'struct v3d_bin_job *' cinit     |   `-RecoveryExpr 0x135923db8 <col:28> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x137008c00 <line:8:2, col:31>     | |-RecordDecl 0x135923e08 <col:2, col:9> col:9 struct v3d_render_job     | `-VarDecl 0x135923f78 <col:2, col:25> col:25 used render 'struct v3d_render_job *'     |-DeclStmt 0x137008d98 <line:9:2, col:35>     | |-RecordDecl 0x137008c18 <col:2, col:9> col:9 struct ww_acquire_ctx     | `-VarDecl 0x137008d18 <col:2, col:24> col:24 invalid acquire_ctx 'struct ww_acquire_ctx'     |-DeclStmt 0x137008e50 <line:10:2, col:13>     | `-VarDecl 0x137008dc8 <col:2, col:12> col:6 used ret 'int' cinit     |   `-IntegerLiteral 0x137008e30 <col:12> 'int' 0     |-CallExpr 0x1370090a0 <line:12:2, col:69> '<dependent type>' contains-errors     | |-DeclRefExpr 0x137008f48 <col:2> 'int ()' Function 0x137008e90 'trace_v3d_submit_cl_ioctl' 'int ()'     | |-UnaryOperator 0x137008fc8 <col:28, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x137008fa0 <col:29, col:34> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x137008f68 <col:29> 'struct v3d_dev *' lvalue Var 0x135923478 'v3d' 'struct v3d_dev *'     | |-RecoveryExpr 0x137009018 <col:39, col:45> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x137008fe0 <col:39> 'struct drm_v3d_submit_cl *' lvalue Var 0x135923ae8 'args' 'struct drm_v3d_submit_cl *'     | `-RecoveryExpr 0x137009078 <col:56, col:62> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x137009040 <col:56> 'struct drm_v3d_submit_cl *' lvalue Var 0x135923ae8 'args' 'struct drm_v3d_submit_cl *'     |-IfStmt 0x137009438 <line:14:2, line:17:2>     | |-BinaryOperator 0x137009158 <line:14:6, col:19> 'int' contains-errors '!='     | | |-RecoveryExpr 0x137009110 <col:6, col:12> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x1370090d8 <col:6> 'struct drm_v3d_submit_cl *' lvalue Var 0x135923ae8 'args' 'struct drm_v3d_submit_cl *'     | | `-IntegerLiteral 0x137009138 <col:19> 'int' 0     | `-CompoundStmt 0x137009418 <col:22, line:17:2>     |   |-CallExpr 0x137009340 <line:15:3, col:28> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x137009258 <col:3> 'int ()' Function 0x1370091a0 'DRM_INFO' 'int ()'     |   | |-StringLiteral 0x1370092c0 <col:12> 'char[4]' lvalue \"STR\"     |   | `-RecoveryExpr 0x137009318 <col:19, col:25> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x1370092e0 <col:19> 'struct drm_v3d_submit_cl *' lvalue Var 0x135923ae8 'args' 'struct drm_v3d_submit_cl *'     |   `-ReturnStmt 0x137009408 <line:16:3, col:11>     |     `-UnaryOperator 0x1370093f0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x1370093d8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x1370093b8 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x137009718 <line:20:2, line:21:11>     | |-UnaryOperator 0x137009658 <line:20:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x137009640 <col:7> 'struct v3d_render_job *' <LValueToRValue>     | |   `-DeclRefExpr 0x137009620 <col:7> 'struct v3d_render_job *' lvalue Var 0x135923f78 'render' 'struct v3d_render_job *'     | `-ReturnStmt 0x137009708 <line:21:3, col:11>     |   `-UnaryOperator 0x1370096f0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x1370096d8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x1370096b8 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1370097f8 <line:23:2, col:24> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x137009770 <col:2, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x137009738 <col:2> 'struct v3d_render_job *' lvalue Var 0x135923f78 'render' 'struct v3d_render_job *'     | `-RecoveryExpr 0x1370097d0 <col:18, col:24> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x137009798 <col:18> 'struct drm_v3d_submit_cl *' lvalue Var 0x135923ae8 'args' 'struct drm_v3d_submit_cl *'     |-BinaryOperator 0x1370098d8 <line:24:2, col:22> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x137009850 <col:2, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x137009818 <col:2> 'struct v3d_render_job *' lvalue Var 0x135923f78 'render' 'struct v3d_render_job *'     | `-RecoveryExpr 0x1370098b0 <col:16, col:22> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x137009878 <col:16> 'struct drm_v3d_submit_cl *' lvalue Var 0x135923ae8 'args' 'struct drm_v3d_submit_cl *'     |-CallExpr 0x137009a70 <line:25:2, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1370099d8 <col:2> 'int ()' Function 0x137009920 'INIT_LIST_HEAD' 'int ()'     | `-UnaryOperator 0x137009a58 <col:17, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x137009a30 <col:18, col:26> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1370099f8 <col:18> 'struct v3d_render_job *' lvalue Var 0x135923f78 'render' 'struct v3d_render_job *'     |-IfStmt 0x1360268f0 <line:29:2, line:32:2>     | |-ImplicitCastExpr 0x1360266f8 <line:29:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x1360266d8 <col:6> 'int' lvalue Var 0x137008dc8 'ret' 'int'     | `-CompoundStmt 0x1360268d0 <col:11, line:32:2>     |   |-CallExpr 0x136026848 <line:30:3, col:15> 'int'     |   | |-ImplicitCastExpr 0x136026830 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x1360267f0 <col:3> 'int ()' Function 0x136026738 'kfree' 'int ()'     |   | `-ImplicitCastExpr 0x136026870 <col:9> 'struct v3d_render_job *' <LValueToRValue>     |   |   `-DeclRefExpr 0x136026810 <col:9> 'struct v3d_render_job *' lvalue Var 0x135923f78 'render' 'struct v3d_render_job *'     |   `-ReturnStmt 0x1360268c0 <line:31:3, col:10>     |     `-ImplicitCastExpr 0x1360268a8 <col:10> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x136026888 <col:10> 'int' lvalue Var 0x137008dc8 'ret' 'int'     |-IfStmt 0x136027410 <line:34:2, line:52:2>     | |-BinaryOperator 0x1360269d0 <line:34:6, col:31> 'int' contains-errors '!='     | | |-RecoveryExpr 0x136026948 <col:6, col:12> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x136026910 <col:6> 'struct drm_v3d_submit_cl *' lvalue Var 0x135923ae8 'args' 'struct drm_v3d_submit_cl *'     | | `-RecoveryExpr 0x1360269a8 <col:25, col:31> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x136026970 <col:25> 'struct drm_v3d_submit_cl *' lvalue Var 0x135923ae8 'args' 'struct drm_v3d_submit_cl *'     | `-CompoundStmt 0x1360273c8 <col:40, line:52:2>     |   |-IfStmt 0x136026ea8 <line:41:3, line:44:3>     |   | |-ImplicitCastExpr 0x136026c88 <line:41:7> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x136026c68 <col:7> 'int' lvalue Var 0x137008dc8 'ret' 'int'     |   | `-CompoundStmt 0x136026e88 <col:12, line:44:3>     |   |   |-CallExpr 0x136026e18 <line:42:4, col:29> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x136026d80 <col:4> 'int ()' Function 0x136026cc8 'v3d_job_put' 'int ()'     |   |   | `-UnaryOperator 0x136026e00 <col:16, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   |   `-RecoveryExpr 0x136026dd8 <col:17, col:25> '<dependent type>' contains-errors lvalue     |   |   |     `-DeclRefExpr 0x136026da0 <col:17> 'struct v3d_render_job *' lvalue Var 0x135923f78 'render' 'struct v3d_render_job *'     |   |   `-ReturnStmt 0x136026e78 <line:43:4, col:11>     |   |     `-ImplicitCastExpr 0x136026e60 <col:11> 'int' <LValueToRValue>     |   |       `-DeclRefExpr 0x136026e40 <col:11> 'int' lvalue Var 0x137008dc8 'ret' 'int'     |   |-BinaryOperator 0x136026f88 <line:46:3, col:22> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x136026f00 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x136026ec8 <col:3> 'struct v3d_bin_job *' contains-errors lvalue Var 0x135923d38 'bin' 'struct v3d_bin_job *'     |   | `-RecoveryExpr 0x136026f60 <col:16, col:22> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x136026f28 <col:16> 'struct drm_v3d_submit_cl *' lvalue Var 0x135923ae8 'args' 'struct drm_v3d_submit_cl *'     |   |-BinaryOperator 0x136027068 <line:47:3, col:20> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x136026fe0 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x136026fa8 <col:3> 'struct v3d_bin_job *' contains-errors lvalue Var 0x135923d38 'bin' 'struct v3d_bin_job *'     |   | `-RecoveryExpr 0x136027040 <col:14, col:20> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x136027008 <col:14> 'struct drm_v3d_submit_cl *' lvalue Var 0x135923ae8 'args' 'struct drm_v3d_submit_cl *'     |   |-BinaryOperator 0x136027148 <line:48:3, col:20> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x1360270c0 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x136027088 <col:3> 'struct v3d_bin_job *' contains-errors lvalue Var 0x135923d38 'bin' 'struct v3d_bin_job *'     |   | `-RecoveryExpr 0x136027120 <col:14, col:20> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x1360270e8 <col:14> 'struct drm_v3d_submit_cl *' lvalue Var 0x135923ae8 'args' 'struct drm_v3d_submit_cl *'     |   |-BinaryOperator 0x136027228 <line:49:3, col:20> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x1360271a0 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x136027168 <col:3> 'struct v3d_bin_job *' contains-errors lvalue Var 0x135923d38 'bin' 'struct v3d_bin_job *'     |   | `-RecoveryExpr 0x136027200 <col:14, col:20> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x1360271c8 <col:14> 'struct drm_v3d_submit_cl *' lvalue Var 0x135923ae8 'args' 'struct drm_v3d_submit_cl *'     |   |-BinaryOperator 0x136027308 <line:50:3, col:20> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x136027280 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x136027248 <col:3> 'struct v3d_bin_job *' contains-errors lvalue Var 0x135923d38 'bin' 'struct v3d_bin_job *'     |   | `-RecoveryExpr 0x1360272e0 <col:14, col:20> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x1360272a8 <col:14> 'struct drm_v3d_submit_cl *' lvalue Var 0x135923ae8 'args' 'struct drm_v3d_submit_cl *'     |   `-BinaryOperator 0x1360273a8 <line:51:3, col:17> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x136027360 <col:3, col:8> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x136027328 <col:3> 'struct v3d_bin_job *' contains-errors lvalue Var 0x135923d38 'bin' 'struct v3d_bin_job *'     |     `-DeclRefExpr 0x136027388 <col:17> 'struct v3d_render_job *' lvalue Var 0x135923f78 'render' 'struct v3d_render_job *'     |-BinaryOperator 0x136027720 <line:54:2, line:55:48> 'int' contains-errors '='     | |-DeclRefExpr 0x136027430 <line:54:2> 'int' lvalue Var 0x137008dc8 'ret' 'int'     | `-CallExpr 0x1360276d8 <col:8, line:55:48> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x136027530 <line:54:8> 'int ()' Function 0x136027478 'v3d_lookup_bos' 'int ()'     |   |-DeclRefExpr 0x136027550 <col:23> 'struct drm_device *' lvalue ParmVar 0x13600e248 'dev' 'struct drm_device *'     |   |-DeclRefExpr 0x136027570 <col:28> 'struct drm_file *' lvalue ParmVar 0x1359230c8 'file_priv' 'struct drm_file *'     |   |-UnaryOperator 0x136027600 <col:39, col:48> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x1360275c8 <col:40, col:48> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x136027590 <col:40> 'struct v3d_render_job *' lvalue Var 0x135923f78 'render' 'struct v3d_render_job *'     |   |-RecoveryExpr 0x136027650 <line:55:9, col:15> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x136027618 <col:9> 'struct drm_v3d_submit_cl *' lvalue Var 0x135923ae8 'args' 'struct drm_v3d_submit_cl *'     |   `-RecoveryExpr 0x1360276b0 <col:27, col:33> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x136027678 <col:27> 'struct drm_v3d_submit_cl *' lvalue Var 0x135923ae8 'args' 'struct drm_v3d_submit_cl *'     |-IfStmt 0x1360277e0 <line:56:2, line:57:8>     | |-ImplicitCastExpr 0x136027760 <line:56:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x136027740 <col:6> 'int' lvalue Var 0x137008dc8 'ret' 'int'     | `-GotoStmt 0x1360277c8 <line:57:3, col:8> 'fail' 0x136027778     |-BinaryOperator 0x136027a00 <line:59:2, col:60> 'int' contains-errors '='     | |-DeclRefExpr 0x136027800 <col:2> 'int' lvalue Var 0x137008dc8 'ret' 'int'     | `-CallExpr 0x1360279d0 <col:8, col:60> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x136027900 <col:8> 'int ()' Function 0x136027848 'v3d_lock_bo_reservations' 'int ()'     |   |-UnaryOperator 0x136027980 <col:33, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x136027958 <col:34, col:42> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x136027920 <col:34> 'struct v3d_render_job *' lvalue Var 0x135923f78 'render' 'struct v3d_render_job *'     |   `-UnaryOperator 0x1360279b8 <col:48, col:49> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x136027998 <col:49> '<dependent type>' contains-errors lvalue     |-IfStmt 0x136027a70 <line:60:2, line:61:8>     | |-ImplicitCastExpr 0x136027a40 <line:60:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x136027a20 <col:6> 'int' lvalue Var 0x137008dc8 'ret' 'int'     | `-GotoStmt 0x136027a58 <line:61:3, col:8> 'fail' 0x136027778     |-CallExpr 0x136027c08 <line:63:2, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x136027b70 <col:2> 'int ()' Function 0x136027ab8 'mutex_lock' 'int ()'     | `-UnaryOperator 0x136027bf0 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x136027bc8 <col:14, col:19> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x136027b90 <col:14> 'struct v3d_dev *' lvalue Var 0x135923478 'v3d' 'struct v3d_dev *'     |-IfStmt 0x136028378 <line:64:2, line:73:2>     | |-ImplicitCastExpr 0x136027c50 <line:64:6> 'struct v3d_bin_job *' contains-errors <LValueToRValue>     | | `-DeclRefExpr 0x136027c30 <col:6> 'struct v3d_bin_job *' contains-errors lvalue Var 0x135923d38 'bin' 'struct v3d_bin_job *'     | `-CompoundStmt 0x136028350 <col:11, line:73:2>     |   |-IfStmt 0x136027ec0 <line:66:3, line:67:9>     |   | |-ImplicitCastExpr 0x136027e40 <line:66:7> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x136027e20 <col:7> 'int' lvalue Var 0x137008dc8 'ret' 'int'     |   | `-GotoStmt 0x136027ea8 <line:67:4, col:9> 'fail_unreserve' 0x136027e58     |   |-BinaryOperator 0x1360282c0 <line:69:3, line:70:47> 'int' contains-errors '='     |   | |-DeclRefExpr 0x136027ee0 <line:69:3> 'int' lvalue Var 0x137008dc8 'ret' 'int'     |   | `-CallExpr 0x136028290 <col:9, line:70:47> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x136027fe0 <line:69:9> 'int ()' Function 0x136027f28 'drm_gem_fence_array_add' 'int ()'     |   |   |-UnaryOperator 0x1360280a8 <col:33, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   | `-CXXDependentScopeMemberExpr 0x136028060 <col:34, col:47> '<dependent type>' contains-errors lvalue .deps     |   |   |   `-RecoveryExpr 0x136028038 <col:34, col:42> '<dependent type>' contains-errors lvalue     |   |   |     `-DeclRefExpr 0x136028000 <col:34> 'struct v3d_render_job *' lvalue Var 0x135923f78 'render' 'struct v3d_render_job *'     |   |   `-CallExpr 0x136028268 <line:70:12, col:46> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x1360281a0 <col:12> 'int ()' Function 0x1360280e8 'dma_fence_get' 'int ()'     |   |     `-CXXDependentScopeMemberExpr 0x136028220 <col:26, col:36> '<dependent type>' contains-errors lvalue .done_fence     |   |       `-RecoveryExpr 0x1360281f8 <col:26, col:31> '<dependent type>' contains-errors lvalue     |   |         `-DeclRefExpr 0x1360281c0 <col:26> 'struct v3d_bin_job *' contains-errors lvalue Var 0x135923d38 'bin' 'struct v3d_bin_job *'     |   `-IfStmt 0x136028330 <line:71:3, line:72:9>     |     |-ImplicitCastExpr 0x136028300 <line:71:7> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x1360282e0 <col:7> 'int' lvalue Var 0x137008dc8 'ret' 'int'     |     `-GotoStmt 0x136028318 <line:72:4, col:9> 'fail_unreserve' 0x136027e58     |-IfStmt 0x1360284c0 <line:76:2, line:77:8>     | |-ImplicitCastExpr 0x136028490 <line:76:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x136028470 <col:6> 'int' lvalue Var 0x137008dc8 'ret' 'int'     | `-GotoStmt 0x1360284a8 <line:77:3, col:8> 'fail_unreserve' 0x136027e58     |-CallExpr 0x136028658 <line:78:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1360285c0 <col:2> 'int ()' Function 0x136028508 'mutex_unlock' 'int ()'     | `-UnaryOperator 0x136028640 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x136028618 <col:16, col:21> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1360285e0 <col:16> 'struct v3d_dev *' lvalue Var 0x135923478 'v3d' 'struct v3d_dev *'     |-CallExpr 0x136028958 <line:80:2, line:84:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x136028760 <line:80:2> 'int ()' Function 0x1360286a8 'v3d_attach_fences_and_unlock_reservation' 'int ()'     | |-DeclRefExpr 0x136028780 <col:43> 'struct drm_file *' lvalue ParmVar 0x1359230c8 'file_priv' 'struct drm_file *'     | |-UnaryOperator 0x136028800 <line:81:8, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x1360287d8 <col:9, col:17> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1360287a0 <col:9> 'struct v3d_render_job *' lvalue Var 0x135923f78 'render' 'struct v3d_render_job *'     | |-UnaryOperator 0x136028838 <line:82:8, col:9> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x136028818 <col:9> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x136028888 <line:83:8, col:14> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x136028850 <col:8> 'struct drm_v3d_submit_cl *' lvalue Var 0x135923ae8 'args' 'struct drm_v3d_submit_cl *'     | `-CXXDependentScopeMemberExpr 0x136028910 <line:84:8, col:21> '<dependent type>' contains-errors lvalue .done_fence     |   `-RecoveryExpr 0x1360288e8 <col:8, col:16> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1360288b0 <col:8> 'struct v3d_render_job *' lvalue Var 0x135923f78 'render' 'struct v3d_render_job *'     |-IfStmt 0x136028a98 <line:86:2, line:87:25>     | |-ImplicitCastExpr 0x1360289c0 <line:86:6> 'struct v3d_bin_job *' contains-errors <LValueToRValue>     | | `-DeclRefExpr 0x1360289a0 <col:6> 'struct v3d_bin_job *' contains-errors lvalue Var 0x135923d38 'bin' 'struct v3d_bin_job *'     | `-CallExpr 0x136028a70 <line:87:3, col:25> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1360289d8 <col:3> 'int ()' Function 0x136026cc8 'v3d_job_put' 'int ()'     |   `-UnaryOperator 0x136028a58 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x136028a30 <col:16, col:21> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x1360289f8 <col:16> 'struct v3d_bin_job *' contains-errors lvalue Var 0x135923d38 'bin' 'struct v3d_bin_job *'     |-CallExpr 0x136028b50 <line:88:2, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x136028ab8 <col:2> 'int ()' Function 0x136026cc8 'v3d_job_put' 'int ()'     | `-UnaryOperator 0x136028b38 <col:14, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x136028b10 <col:15, col:23> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x136028ad8 <col:15> 'struct v3d_render_job *' lvalue Var 0x135923f78 'render' 'struct v3d_render_job *'     |-ReturnStmt 0x136028b98 <line:90:2, col:9>     | `-IntegerLiteral 0x136028b78 <col:9> 'int' 0     |-LabelStmt 0x136028c68 <line:92:1, line:93:31> 'fail_unreserve'     | `-CallExpr 0x136028c40 <col:2, col:31> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x136028ba8 <col:2> 'int ()' Function 0x136028508 'mutex_unlock' 'int ()'     |   `-UnaryOperator 0x136028c28 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x136028c00 <col:16, col:21> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x136028bc8 <col:16> 'struct v3d_dev *' lvalue Var 0x135923478 'v3d' 'struct v3d_dev *'     |-CallExpr 0x136028f10 <line:94:2, line:95:44> '<dependent type>' contains-errors     | |-DeclRefExpr 0x136028d68 <line:94:2> 'int ()' Function 0x136028cb0 'drm_gem_unlock_reservations' 'int ()'     | |-CXXDependentScopeMemberExpr 0x136028de8 <col:30, col:43> '<dependent type>' contains-errors lvalue .bo     | | `-RecoveryExpr 0x136028dc0 <col:30, col:38> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x136028d88 <col:30> 'struct v3d_render_job *' lvalue Var 0x135923f78 'render' 'struct v3d_render_job *'     | |-CXXDependentScopeMemberExpr 0x136028e90 <line:95:9, col:22> '<dependent type>' contains-errors lvalue .bo_count     | | `-RecoveryExpr 0x136028e68 <col:9, col:17> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x136028e30 <col:9> 'struct v3d_render_job *' lvalue Var 0x135923f78 'render' 'struct v3d_render_job *'     | `-UnaryOperator 0x136028ef8 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x136028ed8 <col:33> '<dependent type>' contains-errors lvalue     |-LabelStmt 0x136029060 <line:96:1, line:98:25> 'fail'     | `-IfStmt 0x136029040 <line:97:2, line:98:25>     |   |-ImplicitCastExpr 0x136028f68 <line:97:6> 'struct v3d_bin_job *' contains-errors <LValueToRValue>     |   | `-DeclRefExpr 0x136028f48 <col:6> 'struct v3d_bin_job *' contains-errors lvalue Var 0x135923d38 'bin' 'struct v3d_bin_job *'     |   `-CallExpr 0x136029018 <line:98:3, col:25> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x136028f80 <col:3> 'int ()' Function 0x136026cc8 'v3d_job_put' 'int ()'     |     `-UnaryOperator 0x136029000 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x136028fd8 <col:16, col:21> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x136028fa0 <col:16> 'struct v3d_bin_job *' contains-errors lvalue Var 0x135923d38 'bin' 'struct v3d_bin_job *'     |-CallExpr 0x136029118 <line:99:2, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x136029080 <col:2> 'int ()' Function 0x136026cc8 'v3d_job_put' 'int ()'     | `-UnaryOperator 0x136029100 <col:14, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1360290d8 <col:15, col:23> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1360290a0 <col:15> 'struct v3d_render_job *' lvalue Var 0x135923f78 'render' 'struct v3d_render_job *'     `-ReturnStmt 0x136029178 <line:101:2, col:9>       `-ImplicitCastExpr 0x136029160 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x136029140 <col:9> 'int' lvalue Var 0x137008dc8 'ret' 'int' ","20736":"`-FunctionDecl 0x1391281f8  line:1:1 invalid rsvg_paint_server_rad_grad 'int (int *)'   |-ParmVarDecl 0x139128128 <col:29, col:50> col:50 invalid gradient 'int *'   `-CompoundStmt 0x139128548 <line:2:1, line:10:1>     `-ReturnStmt 0x139128538 <line:9:5, col:12>       `-RecoveryExpr 0x139128518 <col:12> '<dependent type>' contains-errors lvalue ","20791":"`-FunctionDecl 0x137008e10  col:2 implicit used strcpy 'char *(char *, const char *)' extern   |-ParmVarDecl 0x137008f10 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x137008f78 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x137008eb8 <<invalid sloc>> Implicit 885 ","20694":"`-FunctionDecl 0x149833cd8  line:1:16 invalid _hostsock_sendmsg 'int (int *, const struct oe_msghdr *, int)' static   |-ParmVarDecl 0x14981fd28 <line:2:5, col:14> col:14 referenced invalid sock_ 'int *'   |-ParmVarDecl 0x149820318 <line:3:5, col:29> col:29 used msg 'const struct oe_msghdr *'   |-ParmVarDecl 0x149820398 <line:4:5, col:9> col:9 used flags 'int'   `-CompoundStmt 0x14b009e28 <line:5:1, line:43:1>     |-BinaryOperator 0x149834058 <line:7:5, col:36> '<dependent type>' contains-errors '='     | |-BinaryOperator 0x149834038 <col:5, col:13> '<dependent type>' contains-errors '*'     | | |-RecoveryExpr 0x149833db8 <col:5> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x149833d98 <col:5> 'int *' lvalue ParmVar 0x14981fd28 'sock_' 'int *'     | | `-RecoveryExpr 0x149834018 <col:13> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x149833fb0 <col:20, col:36> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x149833f70 <col:20> 'int ()' Function 0x149833eb8 '_cast_sock' 'int ()'     |   `-RecoveryExpr 0x149833f90 <col:31> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x149834130 <line:8:5, col:21>     | `-VarDecl 0x149834090 <col:5, col:17> col:11 used buf 'void *' cinit     |   `-RecoveryExpr 0x149834110 <col:17> '<dependent type>' contains-errors lvalue     |-RecoveryExpr 0x149834228 <line:9:5, col:23> '<dependent type>' contains-errors lvalue     | |-UnaryExprOrTypeTraitExpr 0x149834208 <col:5, col:12> 'unsigned long' contains-errors sizeof     | | `-RecoveryExpr 0x1498341e8 <col:12> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x149834180 <col:23> 'int' 0     |-IfStmt 0x1498347a8 <line:14:5, line:15:33>     | |-BinaryOperator 0x149834600 <line:14:9, col:59> 'int' contains-errors '||'     | | |-BinaryOperator 0x149834570 <col:9, col:19> 'int' contains-errors '||'     | | | |-UnaryOperator 0x149834528 <col:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | `-ImplicitCastExpr 0x149834510 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | | | |   `-RecoveryExpr 0x1498344f0 <col:10> '<dependent type>' contains-errors lvalue     | | | `-UnaryOperator 0x149834558 <col:18, col:19> 'int' prefix '!' cannot overflow     | | |   `-ImplicitCastExpr 0x149834540 <col:19> 'const struct oe_msghdr *' <LValueToRValue>     | | |     `-DeclRefExpr 0x1498342c0 <col:19> 'const struct oe_msghdr *' lvalue ParmVar 0x149820318 'msg' 'const struct oe_msghdr *'     | | `-ParenExpr 0x1498345e0 <col:26, col:59> 'int' contains-errors     | |   `-BinaryOperator 0x1498345c0 <col:27, col:52> 'int' contains-errors '&&'     | |     |-RecoveryExpr 0x149834368 <col:27, col:32> '<dependent type>' contains-errors lvalue     | |     | `-DeclRefExpr 0x149834330 <col:27> 'const struct oe_msghdr *' lvalue ParmVar 0x149820318 'msg' 'const struct oe_msghdr *'     | |     `-UnaryOperator 0x1498345a8 <col:46, col:52> '<dependent type>' contains-errors prefix '!' cannot overflow     | |       `-ImplicitCastExpr 0x149834590 <col:47, col:52> '<dependent type>' contains-errors <LValueToRValue>     | |         `-RecoveryExpr 0x1498343c8 <col:47, col:52> '<dependent type>' contains-errors lvalue     | |           `-DeclRefExpr 0x149834390 <col:47> 'const struct oe_msghdr *' lvalue ParmVar 0x149820318 'msg' 'const struct oe_msghdr *'     | `-CallExpr 0x149834780 <line:15:9, col:33> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x149834700 <col:9> 'int ()' Function 0x149834648 'OE_RAISE_ERRNO' 'int ()'     |   `-RecoveryExpr 0x149834760 <col:24> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14b009b90 <line:22:5, line:35:5>     | |-RecoveryExpr 0x14b009b40 <line:22:9, line:32:23> '_Bool' contains-errors     | `-CompoundStmt 0x14b009b80 <line:33:5, line:35:5>     `-LabelStmt 0x14b009e08 <line:37:1, line:40:20> 'done'       `-IfStmt 0x14b009d98 <line:39:5, line:40:20>         |-ImplicitCastExpr 0x14b009bd0 <line:39:9> 'void *' contains-errors <LValueToRValue>         | `-DeclRefExpr 0x14b009bb0 <col:9> 'void *' contains-errors lvalue Var 0x149834090 'buf' 'void *'         `-CallExpr 0x14b009d58 <line:40:9, col:20> 'int' contains-errors           |-ImplicitCastExpr 0x14b009d40 <col:9> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x14b009cc8 <col:9> 'int ()' Function 0x14b009c10 'oe_free' 'int ()'           `-ImplicitCastExpr 0x14b009d80 <col:17> 'void *' contains-errors <LValueToRValue>             `-DeclRefExpr 0x14b009ce8 <col:17> 'void *' contains-errors lvalue Var 0x149834090 'buf' 'void *' ","21038":"`-FunctionDecl 0x12c808f98  line:1:19 empty_stack 'int (void)' static inline   `-CompoundStmt 0x12c809160 <line:2:1, line:4:1>     `-ReturnStmt 0x12c809150 <line:3:2, col:23>       `-BinaryOperator 0x12c809130 <col:9, col:23> 'int' contains-errors '=='         |-RecoveryExpr 0x12c8090f0 <col:9> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x12c809110 <col:23> '<dependent type>' contains-errors lvalue ","20739":"`-FunctionDecl 0x151128280  line:1:13 invalid interface_release_resource 'void (int *, int)' static   |-ParmVarDecl 0x151128128 <col:40, col:53> col:53 referenced invalid sin 'int *'   |-ParmVarDecl 0x1511281a8 <line:2:40, col:58> col:58 referenced invalid ext 'int'   `-CompoundStmt 0x151142f20 <line:3:1, line:42:1>     |-IfStmt 0x151142308 <line:8:5, line:16:5>     | |-BinaryOperator 0x1511286c8 <line:8:9, col:25> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x151128628 <col:9, col:13> '<dependent type>' contains-errors lvalue .group_id     | | | `-RecoveryExpr 0x151128608 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1511286a8 <col:25> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1511422e8 <col:45, line:16:5>     |   |-CallExpr 0x151142170 <line:12:9, col:50> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x151141f58 <col:9> 'int ()' Function 0x151141ea0 'g_assert' 'int ()'     |   | `-BinaryOperator 0x151142150 <col:18, col:38> 'int' contains-errors '=='     |   |   |-CXXDependentScopeMemberExpr 0x1511420e8 <col:18, col:30> '<dependent type>' contains-errors lvalue .type     |   |   | `-CXXDependentScopeMemberExpr 0x1511420a0 <col:18, col:26> '<dependent type>' contains-errors lvalue ->cmd     |   |   |   `-RecoveryExpr 0x151142080 <col:18> '<dependent type>' contains-errors lvalue     |   |   `-RecoveryExpr 0x151142130 <col:38> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x1511422d8 <line:15:9>     |-IfStmt 0x151142470 <line:21:5, line:23:5>     | |-RecoveryExpr 0x151142428 <line:21:9, col:10> '_Bool' contains-errors     | `-CompoundStmt 0x151142458 <col:16, line:23:5>     |   `-ReturnStmt 0x151142448 <line:22:9>     `-IfStmt 0x151142c60 <line:24:5, line:37:5> has_else       |-RecoveryExpr 0x1511424b0 <line:24:9, col:18> '_Bool' contains-errors       |-CompoundStmt 0x151142960 <col:21, line:31:5>       | `-BinaryOperator 0x151142678 <line:27:9, col:26> '<dependent type>' contains-errors '='       |   |-CXXDependentScopeMemberExpr 0x151142610 <col:9, col:19> '<dependent type>' contains-errors lvalue ->next       |   | `-CXXDependentScopeMemberExpr 0x1511425c8 <col:9, col:13> '<dependent type>' contains-errors lvalue .info       |   |   `-RecoveryExpr 0x1511425a0 <col:9> '<dependent type>' contains-errors lvalue       |   |     `-DeclRefExpr 0x151142580 <col:9> 'int' lvalue ParmVar 0x1511281a8 'ext' 'int'       |   `-IntegerLiteral 0x151142658 <col:26> 'int' 0       `-CompoundStmt 0x151142c48 <line:31:12, line:37:5>         `-BinaryOperator 0x151142b40 <line:35:9, col:26> '<dependent type>' contains-errors '='           |-CXXDependentScopeMemberExpr 0x151142ad8 <col:9, col:19> '<dependent type>' contains-errors lvalue ->next           | `-CXXDependentScopeMemberExpr 0x151142a90 <col:9, col:13> '<dependent type>' contains-errors lvalue .info           |   `-RecoveryExpr 0x151142a68 <col:9> '<dependent type>' contains-errors lvalue           |     `-DeclRefExpr 0x151142a48 <col:9> 'int' lvalue ParmVar 0x1511281a8 'ext' 'int'           `-IntegerLiteral 0x151142b20 <col:26> 'int' 0 ","21037":"`-FunctionDecl 0x148808378  line:1:13 invalid hgcm_req_done 'int (struct vbg_dev *, struct vmmdev_hgcmreq_header *)' static   |-ParmVarDecl 0x14800e268 <col:27, col:43> col:43 used gdev 'struct vbg_dev *'   |-ParmVarDecl 0x148808258 <line:2:6, col:36> col:36 used header 'struct vmmdev_hgcmreq_header *'   `-CompoundStmt 0x1488089b0 <line:3:1, line:12:1>     |-DeclStmt 0x1488084b0 <line:4:2, col:21>     | `-VarDecl 0x148808448 <col:2, col:16> col:16 used flags 'unsigned long'     |-CallExpr 0x1488086d8 <line:7:2, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x148808620 <col:2> 'int ()' Function 0x148808568 'spin_lock_irqsave' 'int ()'     | |-UnaryOperator 0x1488086a0 <col:20, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x148808678 <col:21, col:27> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x148808640 <col:21> 'struct vbg_dev *' lvalue ParmVar 0x14800e268 'gdev' 'struct vbg_dev *'     | `-DeclRefExpr 0x1488086b8 <col:43> 'unsigned long' lvalue Var 0x148808448 'flags' 'unsigned long'     |-CallExpr 0x148808938 <line:9:2, col:53> '<dependent type>' contains-errors     | |-DeclRefExpr 0x148808880 <col:2> 'int ()' Function 0x1488087c8 'spin_unlock_irqrestore' 'int ()'     | |-UnaryOperator 0x148808900 <col:25, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x1488088d8 <col:26, col:32> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1488088a0 <col:26> 'struct vbg_dev *' lvalue ParmVar 0x14800e268 'gdev' 'struct vbg_dev *'     | `-DeclRefExpr 0x148808918 <col:48> 'unsigned long' lvalue Var 0x148808448 'flags' 'unsigned long'     `-ReturnStmt 0x1488089a0 <line:11:2, col:9>       `-RecoveryExpr 0x148808980 <col:9> '<dependent type>' contains-errors lvalue ","20458":"`-FunctionDecl 0x11f140bf8  line:1:1 lsquic_qeh_settings 'int (struct qpack_enc_hdl *, unsigned int, unsigned int, unsigned int, int)'   |-ParmVarDecl 0x11f128648 <col:22, col:44> col:44 used qeh 'struct qpack_enc_hdl *'   |-ParmVarDecl 0x11f1286c8 <col:49, col:58> col:58 used max_table_size 'unsigned int'   |-ParmVarDecl 0x11f128748 <line:2:14, col:23> col:23 used dyn_table_size 'unsigned int'   |-ParmVarDecl 0x11f140a00 <col:39, col:48> col:48 used max_risked_streams 'unsigned int'   |-ParmVarDecl 0x11f140a80 <col:68, col:72> col:72 used server 'int'   `-CompoundStmt 0x11f144898 <line:3:1, line:33:1>     |-DeclStmt 0x11f140ea8 <line:4:5, col:35>     | |-EnumDecl 0x11f140d10 <col:5, col:10> col:10 lsqpack_enc_opts     | `-VarDecl 0x11f140e28 <col:5, col:27> col:27 referenced invalid enc_opts 'enum lsqpack_enc_opts'     |-CallExpr 0x11f141110 <line:6:5, col:44> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11f140ff0 <col:5> 'int ()' Function 0x11f140f38 'assert' 'int ()'     | `-BinaryOperator 0x11f1410f0 <col:12, col:29> '<dependent type>' contains-errors '&'     |   |-RecoveryExpr 0x11f141048 <col:12, col:17> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x11f141010 <col:12> 'struct qpack_enc_hdl *' lvalue ParmVar 0x11f128648 'qeh' 'struct qpack_enc_hdl *'     |   `-RecoveryExpr 0x11f1410d0 <col:29> '<dependent type>' contains-errors lvalue     |-IfStmt 0x11f141460 <line:8:5, line:12:5>     | |-BinaryOperator 0x11f1411f0 <line:8:9, col:26> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x11f141170 <col:9, col:14> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x11f141138 <col:9> 'struct qpack_enc_hdl *' lvalue ParmVar 0x11f128648 'qeh' 'struct qpack_enc_hdl *'     | | `-RecoveryExpr 0x11f1411d0 <col:26> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x11f141440 <line:9:5, line:12:5>     |   |-CallExpr 0x11f1413b8 <line:10:9, col:23> 'int'     |   | |-ImplicitCastExpr 0x11f1413a0 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x11f1412f0 <col:9> 'int ()' Function 0x11f141238 'LSQ_WARN' 'int ()'     |   | `-ImplicitCastExpr 0x11f1413e0 <col:18> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x11f141350 <col:18> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x11f141430 <line:11:9, col:17>     |     `-UnaryOperator 0x11f141418 <col:16, col:17> 'int' prefix '-'     |       `-IntegerLiteral 0x11f1413f8 <col:17> 'int' 1     |-BinaryOperator 0x11f141668 <line:16:5, col:46> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x11f1415a0 <col:5, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x11f141568 <col:5> 'struct qpack_enc_hdl *' lvalue ParmVar 0x11f128648 'qeh' 'struct qpack_enc_hdl *'     | `-UnaryExprOrTypeTraitExpr 0x11f141648 <col:23, col:46> 'unsigned long' contains-errors sizeof     |   `-ParenExpr 0x11f141628 <col:29, col:46> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x11f141600 <col:30, col:35> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x11f1415c8 <col:30> 'struct qpack_enc_hdl *' lvalue ParmVar 0x11f128648 'qeh' 'struct qpack_enc_hdl *' non_odr_use_unevaluated     |-IfStmt 0x11f144078 <line:17:5, line:23:5>     | |-BinaryOperator 0x11f143e78 <line:17:9, line:19:51> 'int' contains-errors '!='     | | |-IntegerLiteral 0x11f141688 <line:17:9> 'int' 0     | | `-CallExpr 0x11f143e18 <col:14, line:19:51> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x11f141788 <line:17:14> 'int ()' Function 0x11f1416d0 'lsqpack_enc_init' 'int ()'     | |   |-UnaryOperator 0x11f141808 <col:31, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   | `-RecoveryExpr 0x11f1417e0 <col:32, col:37> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x11f1417a8 <col:32> 'struct qpack_enc_hdl *' lvalue ParmVar 0x11f128648 'qeh' 'struct qpack_enc_hdl *'     | |   |-CStyleCastExpr 0x11f141898 <col:50, col:64> 'void *' contains-errors <Dependent>     | |   | `-RecoveryExpr 0x11f141858 <col:59, col:64> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x11f141820 <col:59> 'struct qpack_enc_hdl *' lvalue ParmVar 0x11f128648 'qeh' 'struct qpack_enc_hdl *'     | |   |-DeclRefExpr 0x11f1418c0 <line:18:17> 'unsigned int' lvalue ParmVar 0x11f1286c8 'max_table_size' 'unsigned int'     | |   |-DeclRefExpr 0x11f1418e0 <col:33> 'unsigned int' lvalue ParmVar 0x11f128748 'dyn_table_size' 'unsigned int'     | |   |-DeclRefExpr 0x11f141900 <col:49> 'unsigned int' lvalue ParmVar 0x11f140a00 'max_risked_streams' 'unsigned int'     | |   |-RecoveryExpr 0x11f141920 <col:69> '<dependent type>' contains-errors lvalue     | |   |-RecoveryExpr 0x11f141978 <line:19:17, col:22> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x11f141940 <col:17> 'struct qpack_enc_hdl *' lvalue ParmVar 0x11f128648 'qeh' 'struct qpack_enc_hdl *'     | |   `-UnaryOperator 0x11f143e00 <col:35, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-RecoveryExpr 0x11f1419d8 <col:36, col:41> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x11f1419a0 <col:36> 'struct qpack_enc_hdl *' lvalue ParmVar 0x11f128648 'qeh' 'struct qpack_enc_hdl *'     | `-CompoundStmt 0x11f144058 <line:20:5, line:23:5>     |   |-CallExpr 0x11f143fd0 <line:21:9, col:23> 'int'     |   | |-ImplicitCastExpr 0x11f143fb8 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x11f143f78 <col:9> 'int ()' Function 0x11f143ec0 'LSQ_INFO' 'int ()'     |   | `-ImplicitCastExpr 0x11f143ff8 <col:18> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x11f143f98 <col:18> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x11f144048 <line:22:9, col:17>     |     `-UnaryOperator 0x11f144030 <col:16, col:17> 'int' prefix '-'     |       `-IntegerLiteral 0x11f144010 <col:17> 'int' 1     |-CallExpr 0x11f144218 <line:24:5, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11f144178 <col:5> 'int ()' Function 0x11f1440c0 'LSQ_DEBUG' 'int ()'     | |-StringLiteral 0x11f144198 <col:15> 'char[4]' lvalue \"STR\"     | `-RecoveryExpr 0x11f1441f0 <col:22, col:27> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x11f1441b8 <col:22> 'struct qpack_enc_hdl *' lvalue ParmVar 0x11f128648 'qeh' 'struct qpack_enc_hdl *'     |-BinaryOperator 0x11f1444a8 <line:26:5, line:27:79> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x11f1442e0 <line:26:5, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x11f1442a8 <col:5> 'struct qpack_enc_hdl *' lvalue ParmVar 0x11f128648 'qeh' 'struct qpack_enc_hdl *'     | `-CallExpr 0x11f144480 <line:27:25, col:79> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x11f1443e8 <col:25> 'int ()' Function 0x11f144330 'lsqpack_enc_header_block_prefix_size' 'int ()'     |   `-UnaryOperator 0x11f144468 <col:62, col:68> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x11f144440 <col:63, col:68> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x11f144408 <col:63> 'struct qpack_enc_hdl *' lvalue ParmVar 0x11f128648 'qeh' 'struct qpack_enc_hdl *'     |-CallExpr 0x11f1445d0 <line:28:5, line:29:66> 'int'     | |-ImplicitCastExpr 0x11f1445b8 <line:28:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x11f1444c8 <col:5> 'int ()' Function 0x11f1440c0 'LSQ_DEBUG' 'int ()'     | |-ImplicitCastExpr 0x11f144610 <col:15, line:29:9> 'char *' <ArrayToPointerDecay>     | | `-StringLiteral 0x11f144530 <line:28:15, line:29:9> 'char[7]' lvalue \"STRSTR\"     | |-ImplicitCastExpr 0x11f144628 <col:16> 'unsigned int' <LValueToRValue>     | | `-DeclRefExpr 0x11f144558 <col:16> 'unsigned int' lvalue ParmVar 0x11f1286c8 'max_table_size' 'unsigned int'     | |-ImplicitCastExpr 0x11f144640 <col:32> 'unsigned int' <LValueToRValue>     | | `-DeclRefExpr 0x11f144578 <col:32> 'unsigned int' lvalue ParmVar 0x11f128748 'dyn_table_size' 'unsigned int'     | `-ImplicitCastExpr 0x11f144658 <col:48> 'unsigned int' <LValueToRValue>     |   `-DeclRefExpr 0x11f144598 <col:48> 'unsigned int' lvalue ParmVar 0x11f140a00 'max_risked_streams' 'unsigned int'     |-IfStmt 0x11f144848 <line:30:5, line:31:26>     | |-RecoveryExpr 0x11f1446a8 <line:30:9, col:14> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x11f144670 <col:9> 'struct qpack_enc_hdl *' lvalue ParmVar 0x11f128648 'qeh' 'struct qpack_enc_hdl *'     | `-CallExpr 0x11f144808 <line:31:9, col:26> 'int'     |   |-ImplicitCastExpr 0x11f1447f0 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x11f1447b0 <col:9> 'int ()' Function 0x11f1446f8 'qeh_begin_out' 'int ()'     |   `-ImplicitCastExpr 0x11f144830 <col:23> 'struct qpack_enc_hdl *' <LValueToRValue>     |     `-DeclRefExpr 0x11f1447d0 <col:23> 'struct qpack_enc_hdl *' lvalue ParmVar 0x11f128648 'qeh' 'struct qpack_enc_hdl *'     `-ReturnStmt 0x11f144888 <line:32:5, col:12>       `-IntegerLiteral 0x11f144868 <col:12> 'int' 0 ","21122":"`-FunctionDecl 0x15a80de80  line:1:6 invalid gpp_write_box 'void (int *, int *)'   |-ParmVarDecl 0x15a80dd28 <col:20, col:34> col:34 invalid bs 'int *'   |-ParmVarDecl 0x15a80dda8 <col:38, col:52> col:52 invalid rec 'int *'   `-CompoundStmt 0x15a827400 <line:2:1, line:7:1>     |-CallExpr 0x15a80e138 <line:3:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15a80e090 <col:2> 'int ()' Function 0x15a80dfd8 'gf_bs_write_u16' 'int ()'     | |-RecoveryExpr 0x15a80e0b0 <col:18> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x15a80e0f0 <col:22, col:27> '<dependent type>' contains-errors lvalue ->top     |   `-RecoveryExpr 0x15a80e0d0 <col:22> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15a80e210 <line:4:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15a80e168 <col:2> 'int ()' Function 0x15a80dfd8 'gf_bs_write_u16' 'int ()'     | |-RecoveryExpr 0x15a80e188 <col:18> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x15a80e1c8 <col:22, col:27> '<dependent type>' contains-errors lvalue ->left     |   `-RecoveryExpr 0x15a80e1a8 <col:22> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15a80e2e8 <line:5:2, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15a80e240 <col:2> 'int ()' Function 0x15a80dfd8 'gf_bs_write_u16' 'int ()'     | |-RecoveryExpr 0x15a80e260 <col:18> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x15a80e2a0 <col:22, col:27> '<dependent type>' contains-errors lvalue ->bottom     |   `-RecoveryExpr 0x15a80e280 <col:22> '<dependent type>' contains-errors lvalue     `-CallExpr 0x15a80e3c0 <line:6:2, col:32> '<dependent type>' contains-errors       |-DeclRefExpr 0x15a80e318 <col:2> 'int ()' Function 0x15a80dfd8 'gf_bs_write_u16' 'int ()'       |-RecoveryExpr 0x15a80e338 <col:18> '<dependent type>' contains-errors lvalue       `-CXXDependentScopeMemberExpr 0x15a80e378 <col:22, col:27> '<dependent type>' contains-errors lvalue ->right         `-RecoveryExpr 0x15a80e358 <col:22> '<dependent type>' contains-errors lvalue ","20491":"`-FunctionDecl 0x14c928238  line:1:1 SPL_METHOD 'int (int, int)'   |-ParmVarDecl 0x14c928158 <col:12> col:12 MultipleIterator 'int'   |-ParmVarDecl 0x14c9280d8 <col:30> col:30 next 'int'   `-CompoundStmt 0x14c9412a0 <line:2:1, line:19:1>     |-IfStmt 0x14c928658 <line:9:2, line:11:2>     | |-BinaryOperator 0x14c928610 <line:9:6, col:38> 'int' contains-errors '=='     | | |-CallExpr 0x14c9285d0 <col:6, col:33> 'int'     | | | `-ImplicitCastExpr 0x14c9285b8 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | |   `-DeclRefExpr 0x14c9284c0 <col:6> 'int ()' Function 0x14c928408 'zend_parse_parameters_none' 'int ()'     | | `-RecoveryExpr 0x14c9285f0 <col:38> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14c928640 <col:47, line:11:2>     |   `-ReturnStmt 0x14c928630 <line:10:3>     |-CallExpr 0x14c940ba8 <line:13:2, col:68> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c928758 <col:2> 'int ()' Function 0x14c9286a0 'zend_hash_internal_pointer_reset_ex' 'int ()'     | |-UnaryOperator 0x14c940b10 <col:38, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x14c940ac8 <col:39, col:47> '<dependent type>' contains-errors lvalue ->storage     | |   `-RecoveryExpr 0x14c940aa8 <col:39> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x14c940b90 <col:56, col:65> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x14c940b48 <col:57, col:65> '<dependent type>' contains-errors lvalue ->pos     |     `-RecoveryExpr 0x14c940b28 <col:57> '<dependent type>' contains-errors lvalue     `-WhileStmt 0x14c941280 <line:14:2, line:18:2>       |-RecoveryExpr 0x14c940ec8 <line:14:9, col:116> '_Bool' contains-errors       `-CompoundStmt 0x14c941270 <col:119, line:18:2> ","20819":"`-FunctionDecl 0x14a00b3e0  line:1:13 kvm_vcpu_init 'void (struct kvm_vcpu *, struct kvm *, unsigned int)' static   |-ParmVarDecl 0x14b80e248 <col:27, col:44> col:44 used vcpu 'struct kvm_vcpu *'   |-ParmVarDecl 0x14a00b228 <col:50, col:62> col:62 used kvm 'struct kvm *'   |-ParmVarDecl 0x14a00b2a8 <col:67, col:76> col:76 used id 'unsigned int'   `-CompoundStmt 0x14a011db0 <line:2:1, line:19:1>     |-CallExpr 0x14a00b6a8 <line:3:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a00b610 <col:2> 'int ()' Function 0x14a00b558 'mutex_init' 'int ()'     | `-UnaryOperator 0x14a00b690 <col:13, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14a00b668 <col:14, col:20> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14a00b630 <col:14> 'struct kvm_vcpu *' lvalue ParmVar 0x14b80e248 'vcpu' 'struct kvm_vcpu *'     |-BinaryOperator 0x14a00b768 <line:4:2, col:15> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14a00b708 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a00b6d0 <col:2> 'struct kvm_vcpu *' lvalue ParmVar 0x14b80e248 'vcpu' 'struct kvm_vcpu *'     | `-UnaryOperator 0x14a00b750 <col:14, col:15> 'int' prefix '-'     |   `-IntegerLiteral 0x14a00b730 <col:15> 'int' 1     |-BinaryOperator 0x14a00b808 <line:5:2, col:14> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14a00b7c0 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a00b788 <col:2> 'struct kvm_vcpu *' lvalue ParmVar 0x14b80e248 'vcpu' 'struct kvm_vcpu *'     | `-DeclRefExpr 0x14a00b7e8 <col:14> 'struct kvm *' lvalue ParmVar 0x14a00b228 'kvm' 'struct kvm *'     |-BinaryOperator 0x14a00b8a8 <line:6:2, col:18> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14a00b860 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a00b828 <col:2> 'struct kvm_vcpu *' lvalue ParmVar 0x14b80e248 'vcpu' 'struct kvm_vcpu *'     | `-DeclRefExpr 0x14a00b888 <col:18> 'unsigned int' lvalue ParmVar 0x14a00b2a8 'id' 'unsigned int'     |-BinaryOperator 0x14a00b980 <line:7:2, col:14> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14a00b900 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a00b8c8 <col:2> 'struct kvm_vcpu *' lvalue ParmVar 0x14b80e248 'vcpu' 'struct kvm_vcpu *'     | `-RecoveryExpr 0x14a00b960 <col:14> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14a00bb18 <line:9:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a00ba80 <col:2> 'int ()' Function 0x14a00b9c8 'rcuwait_init' 'int ()'     | `-UnaryOperator 0x14a00bb00 <col:15, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14a00bad8 <col:16, col:22> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14a00baa0 <col:16> 'struct kvm_vcpu *' lvalue ParmVar 0x14b80e248 'vcpu' 'struct kvm_vcpu *'     |-CallExpr 0x14a00bca8 <line:11:2, col:29> 'int'     | |-ImplicitCastExpr 0x14a00bc90 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14a00bc20 <col:2> 'int ()' Function 0x14a00bb68 'kvm_async_pf_vcpu_init' 'int ()'     | `-ImplicitCastExpr 0x14a00bcd0 <col:25> 'struct kvm_vcpu *' <LValueToRValue>     |   `-DeclRefExpr 0x14a00bc40 <col:25> 'struct kvm_vcpu *' lvalue ParmVar 0x14b80e248 'vcpu' 'struct kvm_vcpu *'     |-CallExpr 0x14a00be70 <line:13:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a00bdc8 <col:2> 'int ()' Function 0x14a00bd10 'kvm_vcpu_set_in_spin_loop' 'int ()'     | |-DeclRefExpr 0x14a00bde8 <col:28> 'struct kvm_vcpu *' lvalue ParmVar 0x14b80e248 'vcpu' 'struct kvm_vcpu *'     | `-RecoveryExpr 0x14a00be50 <col:34> '<dependent type>' contains-errors lvalue     `-CallExpr 0x14a00c028 <line:14:2, col:38> '<dependent type>' contains-errors       |-DeclRefExpr 0x14a00bf80 <col:2> 'int ()' Function 0x14a00bec8 'kvm_vcpu_set_dy_eligible' 'int ()'       |-DeclRefExpr 0x14a00bfa0 <col:27> 'struct kvm_vcpu *' lvalue ParmVar 0x14b80e248 'vcpu' 'struct kvm_vcpu *'       `-RecoveryExpr 0x14a00c008 <col:33> '<dependent type>' contains-errors lvalue ","21000":"`-FunctionDecl 0x14880df60  line:1:20 invalid SetPixelBlack 'void (const int *restrict, const int, int *restrict)' static inline   |-ParmVarDecl 0x14880dcf0 <col:34, col:56> col:56 invalid image 'const int *restrict'   |-ParmVarDecl 0x14880dd70 <line:2:3, col:17> col:17 invalid black 'const int'   |-ParmVarDecl 0x14880de28 <col:23, col:41> col:41 referenced invalid pixel 'int *restrict'   `-CompoundStmt 0x14880e1c0 <line:3:1, line:6:1> ","20462":"`-FunctionDecl 0x14a829fb8  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x14a82a0b8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x14a82a120 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x14a82a188 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14a82a060 <<invalid sloc>> Implicit 882 ","21225":"`-FunctionDecl 0x14d1359f8  line:1:12 invalid handle_pte_fault 'int (struct mm_struct *, struct vm_area_struct *, unsigned long, int *, int *, unsigned int)' static   |-ParmVarDecl 0x14d11d248 <col:29, col:47> col:47 used mm 'struct mm_struct *'   |-ParmVarDecl 0x14d135628 <line:2:8, col:31> col:31 used vma 'struct vm_area_struct *'   |-ParmVarDecl 0x14d1356a8 <col:36, col:50> col:50 used address 'unsigned long'   |-ParmVarDecl 0x14d135778 <line:3:8, col:15> col:15 referenced invalid pte 'int *'   |-ParmVarDecl 0x14d1357f8 <col:20, col:27> col:27 invalid pmd 'int *'   |-ParmVarDecl 0x14d135878 <col:32, col:45> col:45 used flags 'unsigned int'   `-CompoundStmt 0x14e00b7b8 <line:4:1, line:49:1>     |-CallExpr 0x14d135d18 <line:10:2, col:10> 'int'     | `-ImplicitCastExpr 0x14d135d00 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x14d135cb0 <col:2> 'int ()' Function 0x14d135bf8 'barrier' 'int ()'     |-IfStmt 0x14e00a310 <line:11:2, line:23:2>     | |-UnaryOperator 0x14d135ed8 <line:11:6, col:24> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x14d135eb0 <col:7, col:24> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x14d135e18 <col:7> 'int ()' Function 0x14d135d60 'pte_present' 'int ()'     | |   `-RecoveryExpr 0x14d135e90 <col:19> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14e00a2f0 <col:27, line:23:2>     |   |-IfStmt 0x14e00a018 <line:12:3, line:20:3>     |   | |-CallExpr 0x14d136050 <line:12:7, col:21> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x14d135fd0 <col:7> 'int ()' Function 0x14d135f18 'pte_none' 'int ()'     |   | | `-RecoveryExpr 0x14d136030 <col:16> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x14e009ff8 <col:24, line:20:3>     |   |   |-IfStmt 0x14d136598 <line:13:4, line:17:4>     |   |   | |-RecoveryExpr 0x14d1360b0 <line:13:8, col:13> '<dependent type>' contains-errors lvalue     |   |   | | `-DeclRefExpr 0x14d136078 <col:8> 'struct vm_area_struct *' lvalue ParmVar 0x14d135628 'vma' 'struct vm_area_struct *'     |   |   | `-CompoundStmt 0x14d136580 <col:21, line:17:4>     |   |   |   `-IfStmt 0x14d136560 <line:14:5, line:16:25>     |   |   |     |-CallExpr 0x14d136280 <line:14:9, col:34> '<dependent type>' contains-errors     |   |   |     | |-DeclRefExpr 0x14d1361b8 <col:9> 'int ()' Function 0x14d136100 'likely' 'int ()'     |   |   |     | `-CXXDependentScopeMemberExpr 0x14d136238 <col:16, col:29> '<dependent type>' contains-errors lvalue ->fault     |   |   |     |   `-RecoveryExpr 0x14d136210 <col:16, col:21> '<dependent type>' contains-errors lvalue     |   |   |     |     `-DeclRefExpr 0x14d1361d8 <col:16> 'struct vm_area_struct *' lvalue ParmVar 0x14d135628 'vma' 'struct vm_area_struct *'     |   |   |     `-ReturnStmt 0x14d136550 <line:15:6, line:16:25>     |   |   |       `-CallExpr 0x14d1364f8 <line:15:13, line:16:25> '<dependent type>' contains-errors     |   |   |         |-DeclRefExpr 0x14d136388 <line:15:13> 'int ()' Function 0x14d1362d0 'do_fault' 'int ()'     |   |   |         |-DeclRefExpr 0x14d1363a8 <col:22> 'struct mm_struct *' lvalue ParmVar 0x14d11d248 'mm' 'struct mm_struct *'     |   |   |         |-DeclRefExpr 0x14d1363c8 <col:26> 'struct vm_area_struct *' lvalue ParmVar 0x14d135628 'vma' 'struct vm_area_struct *'     |   |   |         |-DeclRefExpr 0x14d1363e8 <col:31> 'unsigned long' lvalue ParmVar 0x14d1356a8 'address' 'unsigned long'     |   |   |         |-RecoveryExpr 0x14d136408 <col:40> '<dependent type>' contains-errors lvalue     |   |   |         |-RecoveryExpr 0x14d136428 <line:16:8> '<dependent type>' contains-errors lvalue     |   |   |         |-DeclRefExpr 0x14d136448 <col:13> 'unsigned int' lvalue ParmVar 0x14d135878 'flags' 'unsigned int'     |   |   |         `-RecoveryExpr 0x14d1364d8 <col:20> '<dependent type>' contains-errors lvalue     |   |   `-ReturnStmt 0x14e009fe8 <line:18:4, line:19:23>     |   |     `-CallExpr 0x14e009f98 <line:18:11, line:19:23> '<dependent type>' contains-errors     |   |       |-DeclRefExpr 0x14e009eb8 <line:18:11> 'int ()' Function 0x14e009e00 'do_anonymous_page' 'int ()'     |   |       |-DeclRefExpr 0x14e009ed8 <col:29> 'struct mm_struct *' lvalue ParmVar 0x14d11d248 'mm' 'struct mm_struct *'     |   |       |-DeclRefExpr 0x14e009ef8 <col:33> 'struct vm_area_struct *' lvalue ParmVar 0x14d135628 'vma' 'struct vm_area_struct *'     |   |       |-DeclRefExpr 0x14e009f18 <col:38> 'unsigned long' lvalue ParmVar 0x14d1356a8 'address' 'unsigned long'     |   |       |-RecoveryExpr 0x14e009f38 <line:19:8> '<dependent type>' contains-errors lvalue     |   |       |-RecoveryExpr 0x14e009f58 <col:13> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x14e009f78 <col:18> 'unsigned int' lvalue ParmVar 0x14d135878 'flags' 'unsigned int'     |   `-ReturnStmt 0x14e00a2e0 <line:21:3, line:22:28>     |     `-CallExpr 0x14e00a288 <line:21:10, line:22:28> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x14e00a118 <line:21:10> 'int ()' Function 0x14e00a060 'do_swap_page' 'int ()'     |       |-DeclRefExpr 0x14e00a138 <col:23> 'struct mm_struct *' lvalue ParmVar 0x14d11d248 'mm' 'struct mm_struct *'     |       |-DeclRefExpr 0x14e00a158 <col:27> 'struct vm_area_struct *' lvalue ParmVar 0x14d135628 'vma' 'struct vm_area_struct *'     |       |-DeclRefExpr 0x14e00a178 <col:32> 'unsigned long' lvalue ParmVar 0x14d1356a8 'address' 'unsigned long'     |       |-RecoveryExpr 0x14e00a198 <line:22:6> '<dependent type>' contains-errors lvalue     |       |-RecoveryExpr 0x14e00a1b8 <col:11> '<dependent type>' contains-errors lvalue     |       |-DeclRefExpr 0x14e00a1d8 <col:16> 'unsigned int' lvalue ParmVar 0x14d135878 'flags' 'unsigned int'     |       `-RecoveryExpr 0x14e00a268 <col:23> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14e00ab38 <line:30:2, line:31:8>     | |-RecoveryExpr 0x14e00aab0 <line:30:6, col:37> '_Bool' contains-errors     | `-GotoStmt 0x14e00ab20 <line:31:3, col:8> 'unlock' 0x14e00aad0     |-IfStmt 0x14e00af70 <line:32:2, line:37:2>     | |-RecoveryExpr 0x14e00ab78 <line:32:6, col:14> '_Bool' contains-errors     | `-CompoundStmt 0x14e00af60 <col:32, line:37:2>     |-IfStmt 0x14e00b610 <line:39:2, line:45:2> has_else     | |-RecoveryExpr 0x14e00b210 <line:39:6, col:78> '_Bool' contains-errors     | |-CompoundStmt 0x14e00b3c8 <col:81, line:41:2>     | | `-CallExpr 0x14e00b390 <line:40:3, col:37> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x14e00b310 <col:3> 'int ()' Function 0x14e00b258 'update_mmu_cache' 'int ()'     | |   |-DeclRefExpr 0x14e00b330 <col:20> 'struct vm_area_struct *' lvalue ParmVar 0x14d135628 'vma' 'struct vm_area_struct *'     | |   |-DeclRefExpr 0x14e00b350 <col:25> 'unsigned long' lvalue ParmVar 0x14d1356a8 'address' 'unsigned long'     | |   `-RecoveryExpr 0x14e00b370 <col:34> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14e00b5f8 <line:41:9, line:45:2>     |   `-IfStmt 0x14e00b5d8 <line:43:3, line:44:45>     |     |-RecoveryExpr 0x14e00b400 <line:43:7, col:15> '_Bool' contains-errors     |     `-CallExpr 0x14e00b578 <line:44:4, col:45> 'int'     |       |-ImplicitCastExpr 0x14e00b560 <col:4> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14e00b500 <col:4> 'int ()' Function 0x14e00b448 'flush_tlb_fix_spurious_fault' 'int ()'     |       |-ImplicitCastExpr 0x14e00b5a8 <col:33> 'struct vm_area_struct *' <LValueToRValue>     |       | `-DeclRefExpr 0x14e00b520 <col:33> 'struct vm_area_struct *' lvalue ParmVar 0x14d135628 'vma' 'struct vm_area_struct *'     |       `-ImplicitCastExpr 0x14e00b5c0 <col:38> 'unsigned long' <LValueToRValue>     |         `-DeclRefExpr 0x14e00b540 <col:38> 'unsigned long' lvalue ParmVar 0x14d1356a8 'address' 'unsigned long'     |-LabelStmt 0x14e00b768 <line:46:1, col:7> 'unlock'     | `-NullStmt 0x14e00b760 <col:7>     `-ReturnStmt 0x14e00b7a8 <line:48:2, col:9>       `-IntegerLiteral 0x14e00b788 <col:9> 'int' 0 ","21132":"`-FunctionDecl 0x13e128138  col:8 invalid HasOverflowed 'int ()' ","20500":"`-FunctionDecl 0x152928ce8  line:1:5 invalid sftp_mkdir 'int (int, const char *, int)'   |-ParmVarDecl 0x152928af0 <col:16, col:29> col:29 invalid sftp 'int'   |-ParmVarDecl 0x152928b70 <col:35, col:47> col:47 used directory 'const char *'   |-ParmVarDecl 0x152928bf0 <col:58, col:65> col:65 invalid mode 'int'   `-CompoundStmt 0x152945340 <col:71, line:82:1>     |-DeclStmt 0x152942358 <line:5:3, col:37>     | |-RecordDecl 0x152928da8 <col:3, col:10> col:10 struct sftp_attributes_struct     | `-VarDecl 0x152928ea8 <col:3, col:33> col:33 referenced invalid attr 'struct sftp_attributes_struct'     |-IfStmt 0x152942800 <line:11:3, line:14:3>     | |-BinaryOperator 0x1529425e8 <line:11:7, col:17> 'int' contains-errors '=='     | | |-RecoveryExpr 0x1529425a8 <col:7> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1529425c8 <col:17> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1529427e0 <col:23, line:14:3>     |   |-CallExpr 0x152942770 <line:12:5, col:36> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1529426e8 <col:5> 'int ()' Function 0x152942630 'ssh_set_error_oom' 'int ()'     |   | `-CXXDependentScopeMemberExpr 0x152942728 <col:23, col:29> '<dependent type>' contains-errors lvalue ->session     |   |   `-RecoveryExpr 0x152942708 <col:23> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x1529427d0 <line:13:5, col:13>     |     `-UnaryOperator 0x1529427b8 <col:12, col:13> 'int' prefix '-'     |       `-IntegerLiteral 0x152942798 <col:13> 'int' 1     |-IfStmt 0x152942c60 <line:17:3, line:21:3>     | |-BinaryOperator 0x152942a28 <line:17:7, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x1529429e8 <col:7> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x152942a08 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x152942c40 <col:21, line:21:3>     |   |-CallExpr 0x152942ad0 <line:18:5, col:36> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x152942a48 <col:5> 'int ()' Function 0x152942630 'ssh_set_error_oom' 'int ()'     |   | `-CXXDependentScopeMemberExpr 0x152942a88 <col:23, col:29> '<dependent type>' contains-errors lvalue ->session     |   |   `-RecoveryExpr 0x152942a68 <col:23> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x152942c30 <line:20:5, col:13>     |     `-UnaryOperator 0x152942c18 <col:12, col:13> 'int' prefix '-'     |       `-IntegerLiteral 0x152942bf8 <col:13> 'int' 1     |-CallExpr 0x152942da0 <line:23:3, col:19> '<dependent type>' contains-errors     | |-DeclRefExpr 0x152942d60 <col:3> 'int ()' Function 0x152942ca8 'ZERO_STRUCT' 'int ()'     | `-RecoveryExpr 0x152942d80 <col:15> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x152942e78 <line:24:3, col:22> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x152942e10 <col:3, col:8> '<dependent type>' contains-errors lvalue .permissions     | | `-RecoveryExpr 0x152942de8 <col:3> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x152942dc8 <col:3> 'struct sftp_attributes_struct' lvalue Var 0x152928ea8 'attr' 'struct sftp_attributes_struct'     | `-RecoveryExpr 0x152942e58 <col:22> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1529442e0 <line:28:3, line:34:3>     | |-RecoveryExpr 0x152944190 <line:28:7, line:31:56> '_Bool' contains-errors     | `-CompoundStmt 0x1529442d0 <col:59, line:34:3>     |-WhileStmt 0x1529446a0 <line:38:3, line:43:3>     | |-RecoveryExpr 0x152944340 <line:38:10, col:17> '_Bool' contains-errors     | `-CompoundStmt 0x152944688 <col:23, line:43:3>     |   `-IfStmt 0x152944548 <line:39:5, line:41:5>     |     |-BinaryOperator 0x1529444c8 <line:39:9, col:40> 'int' contains-errors '<'     |     | |-CallExpr 0x152944480 <col:9, col:36> '<dependent type>' contains-errors     |     | | |-DeclRefExpr 0x152944440 <col:9> 'int ()' Function 0x152944388 'sftp_read_and_dispatch' 'int ()'     |     | | `-RecoveryExpr 0x152944460 <col:32> '<dependent type>' contains-errors lvalue     |     | `-IntegerLiteral 0x1529444a8 <col:40> 'int' 0     |     `-CompoundStmt 0x152944530 <col:43, line:41:5>     |       `-ReturnStmt 0x152944520 <line:40:7, col:15>     |         `-UnaryOperator 0x152944508 <col:14, col:15> 'int' prefix '-'     |           `-IntegerLiteral 0x1529444e8 <col:15> 'int' 1     |-IfStmt 0x1529452c8 <line:46:3, line:79:3> has_else     | |-RecoveryExpr 0x1529446c0 <line:46:7, col:27> '_Bool' contains-errors     | |-CompoundStmt 0x1529451c8 <col:43, line:74:3>     | | |-IfStmt 0x152944960 <line:49:5, line:51:5>     | | | |-RecoveryExpr 0x1529448e0 <line:49:9, col:19> '_Bool' contains-errors     | | | `-CompoundStmt 0x152944948 <col:25, line:51:5>     | | |   `-ReturnStmt 0x152944938 <line:50:7, col:15>     | | |     `-UnaryOperator 0x152944920 <col:14, col:15> 'int' prefix '-'     | | |       `-IntegerLiteral 0x152944900 <col:15> 'int' 1     | | |-SwitchStmt 0x152944ac0 <line:53:5, line:68:5>     | | | |-RecoveryExpr 0x152944aa0 <line:53:13, col:21> 'int' contains-errors     | | | `-CompoundStmt 0x152944f60 <col:29, line:68:5>     | | |   |-IfStmt 0x152944dc8 <line:57:9, line:60:9>     | | |   | |-RecoveryExpr 0x152944c58 <line:57:13, col:27> '_Bool' contains-errors     | | |   | `-CompoundStmt 0x152944db8 <col:33, line:60:9>     | | |   |-BreakStmt 0x152944de8 <line:61:9>     | | |   |-ReturnStmt 0x152944f20 <line:64:9, col:16>     | | |   | `-IntegerLiteral 0x152944f00 <col:16> 'int' 0     | | |   |-BreakStmt 0x152944f30 <line:65:9>     | | |   `-DefaultStmt 0x152944f40 <line:66:7, line:67:9>     | | |     `-BreakStmt 0x152944f38 <col:9>     | | `-ReturnStmt 0x1529451b8 <line:73:5, col:13>     | |   `-UnaryOperator 0x1529451a0 <col:12, col:13> 'int' prefix '-'     | |     `-IntegerLiteral 0x152945180 <col:13> 'int' 1     | `-CompoundStmt 0x1529452b8 <line:74:10, line:79:3>     `-ReturnStmt 0x152945330 <line:81:3, col:11>       `-UnaryOperator 0x152945318 <col:10, col:11> 'int' prefix '-'         `-IntegerLiteral 0x1529452f8 <col:11> 'int' 1 ","20999":"`-FunctionDecl 0x13780c9d8  line:1:19 invalid fib6_rule_lookup 'struct dst_entry *(struct net *, struct flowi6 *, const struct sk_buff *, int, int)'   |-ParmVarDecl 0x1371286e8 <col:36, col:48> col:48 used net 'struct net *'   |-ParmVarDecl 0x13780c4c8 <col:53, col:68> col:68 used fl6 'struct flowi6 *'   |-ParmVarDecl 0x13780c698 <line:2:8, col:30> col:30 used skb 'const struct sk_buff *'   |-ParmVarDecl 0x13780c718 <line:3:8, col:12> col:12 used flags 'int'   |-ParmVarDecl 0x13780c7b0 <col:19, col:32> col:32 invalid lookup 'int'   `-CompoundStmt 0x13780dc68 <line:4:1, line:16:1>     |-DeclStmt 0x13780cc98 <line:5:2, col:21>     | |-RecordDecl 0x13780caa8 <col:2, col:9> col:9 struct rt6_info     | `-VarDecl 0x13780cc18 <col:2, col:19> col:19 used rt 'struct rt6_info *'     |-BinaryOperator 0x13780ce60 <line:7:2, col:59> 'struct rt6_info *' contains-errors '='     | |-DeclRefExpr 0x13780ccb0 <col:2> 'struct rt6_info *' lvalue Var 0x13780cc18 'rt' 'struct rt6_info *'     | `-CallExpr 0x13780ce18 <col:7, col:59> '<dependent type>' contains-errors     |   |-RecoveryExpr 0x13780ccd0 <col:7> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x13780ccf0 <col:14> 'struct net *' lvalue ParmVar 0x1371286e8 'net' 'struct net *'     |   |-CXXDependentScopeMemberExpr 0x13780cd70 <col:19, col:29> '<dependent type>' contains-errors lvalue .fib6_main_tbl     |   | `-RecoveryExpr 0x13780cd48 <col:19, col:24> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x13780cd10 <col:19> 'struct net *' lvalue ParmVar 0x1371286e8 'net' 'struct net *'     |   |-DeclRefExpr 0x13780cdb8 <col:44> 'struct flowi6 *' lvalue ParmVar 0x13780c4c8 'fl6' 'struct flowi6 *'     |   |-DeclRefExpr 0x13780cdd8 <col:49> 'const struct sk_buff *' lvalue ParmVar 0x13780c698 'skb' 'const struct sk_buff *'     |   `-DeclRefExpr 0x13780cdf8 <col:54> 'int' lvalue ParmVar 0x13780c718 'flags' 'int'     |-IfStmt 0x13780dbc0 <line:8:2, line:13:2>     | |-BinaryOperator 0x13780cfe0 <line:8:6, col:24> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x13780cee0 <col:6, col:14> '<dependent type>' contains-errors lvalue .error     | | | `-RecoveryExpr 0x13780ceb8 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x13780ce80 <col:6> 'struct rt6_info *' lvalue Var 0x13780cc18 'rt' 'struct rt6_info *'     | | `-UnaryOperator 0x13780cfc8 <col:23, col:24> '<dependent type>' contains-errors prefix '-' cannot overflow     | |   `-ImplicitCastExpr 0x13780cfb0 <col:24> '<dependent type>' contains-errors <LValueToRValue>     | |     `-RecoveryExpr 0x13780cf90 <col:24> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13780db98 <col:32, line:13:2>     |   |-CallExpr 0x13780d208 <line:9:3, col:29> 'int'     |   | |-ImplicitCastExpr 0x13780d1f0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x13780d160 <col:3> 'int ()' Function 0x13780d0a8 'ip6_rt_put_flags' 'int ()'     |   | |-ImplicitCastExpr 0x13780d238 <col:20> 'struct rt6_info *' <LValueToRValue>     |   | | `-DeclRefExpr 0x13780d180 <col:20> 'struct rt6_info *' lvalue Var 0x13780cc18 'rt' 'struct rt6_info *'     |   | `-ImplicitCastExpr 0x13780d250 <col:24> 'int' <LValueToRValue>     |   |   `-DeclRefExpr 0x13780d1a0 <col:24> 'int' lvalue ParmVar 0x13780c718 'flags' 'int'     |   |-BinaryOperator 0x13780d330 <line:10:3, col:18> 'struct rt6_info *' contains-errors '='     |   | |-DeclRefExpr 0x13780d268 <col:3> 'struct rt6_info *' lvalue Var 0x13780cc18 'rt' 'struct rt6_info *'     |   | `-CXXDependentScopeMemberExpr 0x13780d2e8 <col:8, col:18> '<dependent type>' contains-errors lvalue .ip6_null_entry     |   |   `-RecoveryExpr 0x13780d2c0 <col:8, col:13> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x13780d288 <col:8> 'struct net *' lvalue ParmVar 0x1371286e8 'net' 'struct net *'     |   `-IfStmt 0x13780db78 <line:11:3, line:12:21>     |     |-RecoveryExpr 0x13780d3a8 <line:11:7, col:39> '_Bool' contains-errors     |     `-CallExpr 0x13780db50 <line:12:4, col:21> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x13780dab8 <col:4> 'int ()' Function 0x13780da00 'dst_hold' 'int ()'     |       `-UnaryOperator 0x13780db38 <col:13, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |         `-RecoveryExpr 0x13780db10 <col:14, col:18> '<dependent type>' contains-errors lvalue     |           `-DeclRefExpr 0x13780dad8 <col:14> 'struct rt6_info *' lvalue Var 0x13780cc18 'rt' 'struct rt6_info *'     `-ReturnStmt 0x13780dc58 <line:15:2, col:14>       `-UnaryOperator 0x13780dc40 <col:9, col:14> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x13780dc18 <col:10, col:14> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x13780dbe0 <col:10> 'struct rt6_info *' lvalue Var 0x13780cc18 'rt' 'struct rt6_info *' ","20251":"`-FunctionDecl 0x120928318  line:1:13 invalid rdp_read_font_capability_set 'int (int *, int, int *)' static   |-ParmVarDecl 0x120928128 <col:42, col:51> col:51 invalid s 'int *'   |-ParmVarDecl 0x1209281a8 <col:54, col:61> col:61 invalid length 'int'   |-ParmVarDecl 0x120928228 <col:69, col:82> col:82 invalid settings 'int *'   `-CompoundStmt 0x107008890 <line:2:1, line:11:1>     |-CallExpr 0x120928570 <line:3:2, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x120928530 <col:2> 'int ()' Function 0x120928478 'WINPR_UNUSED' 'int ()'     | `-RecoveryExpr 0x120928550 <col:15> '<dependent type>' contains-errors lvalue     |-IfStmt 0x120928740 <line:4:2, line:5:23>     | |-BinaryOperator 0x1209285d8 <line:4:6, col:15> 'int' contains-errors '>'     | | |-RecoveryExpr 0x120928598 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x1209285b8 <col:15> 'int' 4     | `-CallExpr 0x120928718 <line:5:3, col:23> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1209286d8 <col:3> 'int ()' Function 0x120928620 'Stream_Seek_UINT16' 'int ()'     |   `-RecoveryExpr 0x1209286f8 <col:22> '<dependent type>' contains-errors lvalue     |-IfStmt 0x107008828 <line:7:2, line:8:23>     | |-BinaryOperator 0x1209287a0 <line:7:6, col:15> 'int' contains-errors '>'     | | |-RecoveryExpr 0x120928760 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x120928780 <col:15> 'int' 6     | `-CallExpr 0x107008800 <line:8:3, col:23> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1209287c0 <col:3> 'int ()' Function 0x120928620 'Stream_Seek_UINT16' 'int ()'     |   `-RecoveryExpr 0x1209287e0 <col:22> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x107008880 <line:10:2, col:9>       `-RecoveryExpr 0x107008860 <col:9> '<dependent type>' contains-errors lvalue ","20756":"`-FunctionDecl 0x1580311c8  line:1:1 invalid flow_tun_flag_to_string 'int (int)'   |-ParmVarDecl 0x1580310f0 <col:25, col:34> col:34 invalid flags 'int'   `-CompoundStmt 0x15804a1b8 <line:2:1, line:15:1>     `-SwitchStmt 0x1580312b0 <line:3:5, line:14:5>       |-ImplicitCastExpr 0x158031298 <line:3:13> '<dependent type>' contains-errors <LValueToRValue>       | `-RecoveryExpr 0x158031278 <col:13> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x15804a180 <col:20, line:14:5>         |-ReturnStmt 0x1580317a0 <line:5:9, col:16>         | `-ImplicitCastExpr 0x158031368 <col:16> 'int' <PointerToIntegral>         |   `-ImplicitCastExpr 0x158031350 <col:16> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x158031330 <col:16> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x15804a018 <line:7:9, col:16>         | `-ImplicitCastExpr 0x15804a000 <col:16> 'int' <PointerToIntegral>         |   `-ImplicitCastExpr 0x1580317e8 <col:16> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x1580317c8 <col:16> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x15804a090 <line:9:9, col:16>         | `-ImplicitCastExpr 0x15804a078 <col:16> 'int' <PointerToIntegral>         |   `-ImplicitCastExpr 0x15804a060 <col:16> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x15804a040 <col:16> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x15804a108 <line:11:9, col:16>         | `-ImplicitCastExpr 0x15804a0f0 <col:16> 'int' <PointerToIntegral>         |   `-ImplicitCastExpr 0x15804a0d8 <col:16> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x15804a0b8 <col:16> 'char[4]' lvalue \"STR\"         `-DefaultStmt 0x15804a160 <line:12:5, line:13:16>           `-ReturnStmt 0x15804a150 <col:9, col:16>             `-RecoveryExpr 0x15804a130 <col:16> '<dependent type>' contains-errors lvalue ","21061":"`-FunctionDecl 0x1349281f8  line:1:1 invalid mbuf_avail 'int (int *)'   |-ParmVarDecl 0x134928128 <col:12, col:18> col:18 invalid mbuf 'int *'   `-CompoundStmt 0x1349283a8 <line:2:1, line:4:1>     `-ReturnStmt 0x134928398 <line:3:2, col:32>       `-BinaryOperator 0x134928378 <col:9, col:32> '<dependent type>' contains-errors '-'         |-CXXDependentScopeMemberExpr 0x1349282c8 <col:9, col:15> '<dependent type>' contains-errors lvalue ->data_end         | `-RecoveryExpr 0x1349282a8 <col:9> '<dependent type>' contains-errors lvalue         `-CXXDependentScopeMemberExpr 0x134928330 <col:26, col:32> '<dependent type>' contains-errors lvalue ->read_pos           `-RecoveryExpr 0x134928310 <col:26> '<dependent type>' contains-errors lvalue ","21142":"`-FunctionDecl 0x142027628  line:1:12 invalid nfs4_xdr_enc_lookup 'int (struct rpc_rqst *, int *, const struct nfs4_lookup_arg *)' static   |-ParmVarDecl 0x14200e248 <col:32, col:49> col:49 used req 'struct rpc_rqst *'   |-ParmVarDecl 0x14200e318 <col:54, col:62> col:62 invalid p 'int *'   |-ParmVarDecl 0x1420274e8 <col:65, col:95> col:95 used args 'const struct nfs4_lookup_arg *'   `-CompoundStmt 0x141922bb8 <line:2:1, line:20:1>     |-DeclStmt 0x142027868 <line:3:2, col:23>     | |-RecordDecl 0x1420276e8 <col:2, col:9> col:9 struct xdr_stream     | `-VarDecl 0x1420277e8 <col:2, col:20> col:20 invalid xdr 'struct xdr_stream'     |-DeclStmt 0x142027aa0 <line:4:2, line:6:3>     | |-RecordDecl 0x142027880 <line:4:2, col:9> col:9 struct compound_hdr     | `-VarDecl 0x142027978 <col:2, col:22> col:22 invalid hdr 'struct compound_hdr'     |-DeclStmt 0x142027b38 <line:7:2, col:12>     | `-VarDecl 0x142027ad0 <col:2, col:6> col:6 used status 'int'     |-CallExpr 0x142027da0 <line:9:2, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142027cb0 <col:2> 'int ()' Function 0x142027bf8 'xdr_init_encode' 'int ()'     | |-UnaryOperator 0x142027cf0 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x142027cd0 <col:19> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x142027d68 <col:24, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x142027d40 <col:25, col:30> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x142027d08 <col:25> 'struct rpc_rqst *' lvalue ParmVar 0x14200e248 'req' 'struct rpc_rqst *'     | `-RecoveryExpr 0x142027d80 <col:42> '<dependent type>' contains-errors lvalue     |-CallExpr 0x142027f48 <line:10:2, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142027eb8 <col:2> 'int ()' Function 0x142027e00 'encode_compound_hdr' 'int ()'     | |-UnaryOperator 0x142027ef8 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x142027ed8 <col:23> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x142027f30 <col:28, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x142027f10 <col:29> '<dependent type>' contains-errors lvalue     |-IfStmt 0x142028248 <line:11:2, line:12:8>     | |-BinaryOperator 0x1420281c0 <line:11:6, col:53> 'int' contains-errors '!='     | | |-ParenExpr 0x142028180 <col:6, col:48> 'int' contains-errors     | | | `-BinaryOperator 0x142028160 <col:7, col:47> 'int' contains-errors '='     | | |   |-DeclRefExpr 0x142027f78 <col:7> 'int' lvalue Var 0x142027ad0 'status' 'int'     | | |   `-CallExpr 0x142028130 <col:16, col:47> '<dependent type>' contains-errors     | | |     |-DeclRefExpr 0x142028078 <col:16> 'int ()' Function 0x142027fc0 'encode_putfh' 'int ()'     | | |     |-UnaryOperator 0x1420280b8 <col:29, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |     | `-RecoveryExpr 0x142028098 <col:30> '<dependent type>' contains-errors lvalue     | | |     `-RecoveryExpr 0x142028108 <col:35, col:41> '<dependent type>' contains-errors lvalue     | | |       `-DeclRefExpr 0x1420280d0 <col:35> 'const struct nfs4_lookup_arg *' lvalue ParmVar 0x1420274e8 'args' 'const struct nfs4_lookup_arg *'     | | `-IntegerLiteral 0x1420281a0 <col:53> 'int' 0     | `-GotoStmt 0x142028230 <line:12:3, col:8> 'out' 0x1420281e0     |-IfStmt 0x1419226f0 <line:13:2, line:14:8>     | |-BinaryOperator 0x1419226b8 <line:13:6, col:52> 'int' contains-errors '!='     | | |-ParenExpr 0x141922678 <col:6, col:47> 'int' contains-errors     | | | `-BinaryOperator 0x141922658 <col:7, col:46> 'int' contains-errors '='     | | |   |-DeclRefExpr 0x142028268 <col:7> 'int' lvalue Var 0x142027ad0 'status' 'int'     | | |   `-CallExpr 0x141922628 <col:16, col:46> '<dependent type>' contains-errors     | | |     |-DeclRefExpr 0x142028368 <col:16> 'int ()' Function 0x1420282b0 'encode_lookup' 'int ()'     | | |     |-UnaryOperator 0x1420283a8 <col:30, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |     | `-RecoveryExpr 0x142028388 <col:31> '<dependent type>' contains-errors lvalue     | | |     `-RecoveryExpr 0x141922600 <col:36, col:42> '<dependent type>' contains-errors lvalue     | | |       `-DeclRefExpr 0x1420283c0 <col:36> 'const struct nfs4_lookup_arg *' lvalue ParmVar 0x1420274e8 'args' 'const struct nfs4_lookup_arg *'     | | `-IntegerLiteral 0x141922698 <col:52> 'int' 0     | `-GotoStmt 0x1419226d8 <line:14:3, col:8> 'out' 0x1420281e0     |-IfStmt 0x141922928 <line:15:2, line:16:8>     | |-BinaryOperator 0x1419228f0 <line:15:6, col:39> 'int' contains-errors '!='     | | |-ParenExpr 0x1419228b0 <col:6, col:34> 'int' contains-errors     | | | `-BinaryOperator 0x141922890 <col:7, col:33> 'int' contains-errors '='     | | |   |-DeclRefExpr 0x141922710 <col:7> 'int' lvalue Var 0x142027ad0 'status' 'int'     | | |   `-CallExpr 0x141922868 <col:16, col:33> '<dependent type>' contains-errors     | | |     |-DeclRefExpr 0x141922810 <col:16> 'int ()' Function 0x141922758 'encode_getfh' 'int ()'     | | |     `-UnaryOperator 0x141922850 <col:29, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |       `-RecoveryExpr 0x141922830 <col:30> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x1419228d0 <col:39> 'int' 0     | `-GotoStmt 0x141922910 <line:16:3, col:8> 'out' 0x1420281e0     |-BinaryOperator 0x141922b30 <line:17:2, col:46> 'int' contains-errors '='     | |-DeclRefExpr 0x141922948 <col:2> 'int' lvalue Var 0x142027ad0 'status' 'int'     | `-CallExpr 0x141922b00 <col:11, col:46> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x141922a48 <col:11> 'int ()' Function 0x141922990 'encode_getfattr' 'int ()'     |   |-UnaryOperator 0x141922a88 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x141922a68 <col:28> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x141922ad8 <col:33, col:39> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x141922aa0 <col:33> 'const struct nfs4_lookup_arg *' lvalue ParmVar 0x1420274e8 'args' 'const struct nfs4_lookup_arg *'     `-LabelStmt 0x141922b98 <line:18:1, line:19:9> 'out'       `-ReturnStmt 0x141922b88 <col:2, col:9>         `-ImplicitCastExpr 0x141922b70 <col:9> 'int' <LValueToRValue>           `-DeclRefExpr 0x141922b50 <col:9> 'int' lvalue Var 0x142027ad0 'status' 'int' ","21104":"`-FunctionDecl 0x158808498  line:1:12 invalid ext4_data_block_valid_rcu 'int (struct ext4_sb_info *, struct ext4_system_blocks *, int, unsigned int)' static   |-ParmVarDecl 0x14f928048 <col:38, col:59> col:59 used sbi 'struct ext4_sb_info *'   |-ParmVarDecl 0x158808228 <line:2:10, col:37> col:37 used system_blks 'struct ext4_system_blocks *'   |-ParmVarDecl 0x1588082c0 <line:3:10, col:23> col:23 invalid start_blk 'int'   |-ParmVarDecl 0x158808340 <line:4:10, col:23> col:23 used count 'unsigned int'   `-CompoundStmt 0x15880b9a8 <line:5:1, line:28:1>     |-DeclStmt 0x158808748 <line:6:2, col:32>     | |-RecordDecl 0x158808560 <col:2, col:9> col:9 struct ext4_system_zone     | `-VarDecl 0x1588086c8 <col:2, col:27> col:27 used entry 'struct ext4_system_zone *'     |-DeclStmt 0x158808948 <line:7:2, col:19>     | |-RecordDecl 0x158808760 <col:2, col:9> col:9 struct rb_node     | `-VarDecl 0x1588088c8 <col:2, col:18> col:18 used n 'struct rb_node *'     |-IfStmt 0x158808f68 <line:9:2, line:12:10>     | |-BinaryOperator 0x158808f18 <line:9:6, line:11:55> 'int' contains-errors '||'     | | |-BinaryOperator 0x158808cd0 <line:9:6, line:10:36> 'int' contains-errors '||'     | | | |-ParenExpr 0x158808bf0 <line:9:6, col:62> 'int' contains-errors     | | | | `-BinaryOperator 0x158808bd0 <col:7, col:61> 'int' contains-errors '<='     | | | |   |-RecoveryExpr 0x158808960 <col:7> '<dependent type>' contains-errors lvalue     | | | |   `-CallExpr 0x158808ba8 <col:20, col:61> '<dependent type>' contains-errors     | | | |     |-DeclRefExpr 0x158808ae0 <col:20> 'int ()' Function 0x158808a28 'le32_to_cpu' 'int ()'     | | | |     `-CXXDependentScopeMemberExpr 0x158808b60 <col:32, col:43> '<dependent type>' contains-errors lvalue ->s_first_data_block     | | | |       `-RecoveryExpr 0x158808b38 <col:32, col:37> '<dependent type>' contains-errors lvalue     | | | |         `-DeclRefExpr 0x158808b00 <col:32> 'struct ext4_sb_info *' lvalue ParmVar 0x14f928048 'sbi' 'struct ext4_sb_info *'     | | | `-ParenExpr 0x158808cb0 <line:10:6, col:36> 'int' contains-errors     | | |   `-BinaryOperator 0x158808c90 <col:7, col:27> 'int' contains-errors '<'     | | |     |-BinaryOperator 0x158808c50 <col:7, col:19> '<dependent type>' contains-errors '+'     | | |     | |-RecoveryExpr 0x158808c10 <col:7> '<dependent type>' contains-errors lvalue     | | |     | `-DeclRefExpr 0x158808c30 <col:19> 'unsigned int' lvalue ParmVar 0x158808340 'count' 'unsigned int'     | | |     `-RecoveryExpr 0x158808c70 <col:27> '<dependent type>' contains-errors lvalue     | | `-ParenExpr 0x158808ef8 <line:11:6, col:55> 'int' contains-errors     | |   `-BinaryOperator 0x158808ed8 <col:7, col:54> 'int' contains-errors '>'     | |     |-BinaryOperator 0x158808d30 <col:7, col:19> '<dependent type>' contains-errors '+'     | |     | |-RecoveryExpr 0x158808cf0 <col:7> '<dependent type>' contains-errors lvalue     | |     | `-DeclRefExpr 0x158808d10 <col:19> 'unsigned int' lvalue ParmVar 0x158808340 'count' 'unsigned int'     | |     `-CallExpr 0x158808eb0 <col:27, col:54> '<dependent type>' contains-errors     | |       |-DeclRefExpr 0x158808e30 <col:27> 'int ()' Function 0x158808d78 'ext4_blocks_count' 'int ()'     | |       `-RecoveryExpr 0x158808e88 <col:45, col:50> '<dependent type>' contains-errors lvalue     | |         `-DeclRefExpr 0x158808e50 <col:45> 'struct ext4_sb_info *' lvalue ParmVar 0x14f928048 'sbi' 'struct ext4_sb_info *'     | `-ReturnStmt 0x158808f58 <line:12:3, col:10>     |   `-IntegerLiteral 0x158808f38 <col:10> 'int' 0     |-IfStmt 0x158809050 <line:14:2, line:15:10>     | |-BinaryOperator 0x158809000 <line:14:6, col:21> 'int' contains-errors '=='     | | |-DeclRefExpr 0x158808f88 <col:6> 'struct ext4_system_blocks *' lvalue ParmVar 0x158808228 'system_blks' 'struct ext4_system_blocks *'     | | `-RecoveryExpr 0x158808fe0 <col:21> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x158809040 <line:15:3, col:10>     |   `-IntegerLiteral 0x158809020 <col:10> 'int' 1     |-BinaryOperator 0x158809138 <line:17:2, col:24> 'struct rb_node *' contains-errors '='     | |-DeclRefExpr 0x158809070 <col:2> 'struct rb_node *' lvalue Var 0x1588088c8 'n' 'struct rb_node *'     | `-CXXDependentScopeMemberExpr 0x1588090f0 <col:6, col:24> '<dependent type>' contains-errors lvalue .rb_node     |   `-RecoveryExpr 0x1588090c8 <col:6, col:19> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x158809090 <col:6> 'struct ext4_system_blocks *' lvalue ParmVar 0x158808228 'system_blks' 'struct ext4_system_blocks *'     |-WhileStmt 0x15880b958 <line:18:2, line:26:2>     | |-ImplicitCastExpr 0x158809178 <line:18:9> 'struct rb_node *' <LValueToRValue>     | | `-DeclRefExpr 0x158809158 <col:9> 'struct rb_node *' lvalue Var 0x1588088c8 'n' 'struct rb_node *'     | `-CompoundStmt 0x15880b940 <col:12, line:26:2>     |   `-IfStmt 0x15880b910 <line:20:3, line:25:11> has_else     |     |-BinaryOperator 0x15880b610 <line:20:7, col:38> 'int' contains-errors '<'     |     | |-BinaryOperator 0x15880b590 <col:7, col:27> '<dependent type>' contains-errors '-'     |     | | |-BinaryOperator 0x15880b550 <col:7, col:19> '<dependent type>' contains-errors '+'     |     | | | |-RecoveryExpr 0x15880b510 <col:7> '<dependent type>' contains-errors lvalue     |     | | | `-DeclRefExpr 0x15880b530 <col:19> 'unsigned int' lvalue ParmVar 0x158808340 'count' 'unsigned int'     |     | | `-IntegerLiteral 0x15880b570 <col:27> 'int' 1     |     | `-RecoveryExpr 0x15880b5e8 <col:31, col:38> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x15880b5b0 <col:31> 'struct ext4_system_zone *' lvalue Var 0x1588086c8 'entry' 'struct ext4_system_zone *'     |     |-BinaryOperator 0x15880b6b0 <line:21:4, col:11> 'struct rb_node *' contains-errors '='     |     | |-DeclRefExpr 0x15880b630 <col:4> 'struct rb_node *' lvalue Var 0x1588088c8 'n' 'struct rb_node *'     |     | `-RecoveryExpr 0x15880b688 <col:8, col:11> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x15880b650 <col:8> 'struct rb_node *' lvalue Var 0x1588088c8 'n' 'struct rb_node *'     |     `-IfStmt 0x15880b8e0 <line:22:8, line:25:11> has_else     |       |-BinaryOperator 0x15880b7f0 <line:22:12, col:57> 'int' contains-errors '>='     |       | |-RecoveryExpr 0x15880b6d0 <col:12> '<dependent type>' contains-errors lvalue     |       | `-ParenExpr 0x15880b7d0 <col:25, col:57> '<dependent type>' contains-errors     |       |   `-BinaryOperator 0x15880b7b0 <col:26, col:52> '<dependent type>' contains-errors '+'     |       |     |-RecoveryExpr 0x15880b728 <col:26, col:33> '<dependent type>' contains-errors lvalue     |       |     | `-DeclRefExpr 0x15880b6f0 <col:26> 'struct ext4_system_zone *' lvalue Var 0x1588086c8 'entry' 'struct ext4_system_zone *'     |       |     `-RecoveryExpr 0x15880b788 <col:45, col:52> '<dependent type>' contains-errors lvalue     |       |       `-DeclRefExpr 0x15880b750 <col:45> 'struct ext4_system_zone *' lvalue Var 0x1588086c8 'entry' 'struct ext4_system_zone *'     |       |-BinaryOperator 0x15880b890 <line:23:4, col:11> 'struct rb_node *' contains-errors '='     |       | |-DeclRefExpr 0x15880b810 <col:4> 'struct rb_node *' lvalue Var 0x1588088c8 'n' 'struct rb_node *'     |       | `-RecoveryExpr 0x15880b868 <col:8, col:11> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x15880b830 <col:8> 'struct rb_node *' lvalue Var 0x1588088c8 'n' 'struct rb_node *'     |       `-ReturnStmt 0x15880b8d0 <line:25:4, col:11>     |         `-IntegerLiteral 0x15880b8b0 <col:11> 'int' 0     `-ReturnStmt 0x15880b998 <line:27:2, col:9>       `-IntegerLiteral 0x15880b978 <col:9> 'int' 1 ","21247":"`-FunctionDecl 0x131941838  line:1:12 invalid rsi_suspend 'int (struct usb_interface *, int)' static   |-ParmVarDecl 0x131928648 <col:24, col:46> col:46 intf 'struct usb_interface *'   |-ParmVarDecl 0x1319286e0 <col:52, col:65> col:65 invalid message 'int'   `-CompoundStmt 0x131941998 <line:2:1, line:5:1>     `-ReturnStmt 0x131941988 <line:4:2, col:10>       `-UnaryOperator 0x131941970 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow         `-ImplicitCastExpr 0x131941958 <col:10> '<dependent type>' contains-errors <LValueToRValue>           `-RecoveryExpr 0x131941938 <col:10> '<dependent type>' contains-errors lvalue ","20288":"`-FunctionDecl 0x13d941bc0  col:3 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x13d941cc0 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x13d941d28 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x13d941d90 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x13d941c68 <<invalid sloc>> Implicit 900 ","20480":"`-FunctionDecl 0x1538274d8  line:1:14 invalid ipmr_mfc_seq_next 'void *(struct seq_file *, void *, int *)' static   |-ParmVarDecl 0x15380e248 <col:32, col:49> col:49 used seq 'struct seq_file *'   |-ParmVarDecl 0x15380e2c8 <col:54, col:60> col:60 used v 'void *'   |-ParmVarDecl 0x15380e398 <col:63, col:71> col:71 invalid pos 'int *'   `-CompoundStmt 0x153829590 <line:2:1, line:40:1>     |-DeclStmt 0x1538277d8 <line:3:2, col:27>     | |-RecordDecl 0x153827598 <col:2, col:9> col:9 struct mfc_cache     | `-VarDecl 0x153827708 <col:2, col:26> col:20 used mfc 'struct mfc_cache *' cinit     |   `-ImplicitCastExpr 0x1538277a8 <col:26> 'struct mfc_cache *' <BitCast>     |     `-ImplicitCastExpr 0x153827790 <col:26> 'void *' <LValueToRValue>     |       `-DeclRefExpr 0x153827770 <col:26> 'void *' lvalue ParmVar 0x15380e2c8 'v' 'void *'     |-DeclStmt 0x153827a38 <line:4:2, col:41>     | |-RecordDecl 0x1538277f0 <col:2, col:9> col:9 struct ipmr_mfc_iter     | `-VarDecl 0x153827958 <col:2, col:34> col:24 used it 'struct ipmr_mfc_iter *' cinit     |   `-RecoveryExpr 0x1538279f8 <col:29, col:34> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1538279c0 <col:29> 'struct seq_file *' lvalue ParmVar 0x15380e248 'seq' 'struct seq_file *'     |-UnaryOperator 0x153827aa0 <line:6:2, col:5> '<dependent type>' contains-errors prefix '++' cannot overflow     | `-UnaryOperator 0x153827a88 <col:4, col:5> '<dependent type>' contains-errors prefix '*' cannot overflow     |   `-ImplicitCastExpr 0x153827a70 <col:5> '<dependent type>' contains-errors <LValueToRValue>     |     `-RecoveryExpr 0x153827a50 <col:5> '<dependent type>' contains-errors lvalue     |-IfStmt 0x153827d90 <line:8:2, line:9:42>     | |-BinaryOperator 0x153827b30 <line:8:6, col:11> 'int' contains-errors '=='     | | |-DeclRefExpr 0x153827ab8 <col:6> 'void *' lvalue ParmVar 0x15380e2c8 'v' 'void *'     | | `-RecoveryExpr 0x153827b10 <col:11> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x153827d80 <line:9:3, col:42>     |   `-CallExpr 0x153827d50 <col:10, col:42> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x153827cb0 <col:10> 'int ()' Function 0x153827bf8 'ipmr_mfc_seq_idx' 'int ()'     |     |-RecoveryExpr 0x153827d08 <col:27, col:32> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x153827cd0 <col:27> 'struct seq_file *' lvalue ParmVar 0x15380e248 'seq' 'struct seq_file *'     |     `-IntegerLiteral 0x153827d30 <col:41> 'int' 0     |-IfStmt 0x153827e80 <line:11:2, line:12:15>     | |-RecoveryExpr 0x153827de8 <line:11:6, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x153827db0 <col:6> 'struct mfc_cache *' lvalue Var 0x153827708 'mfc' 'struct mfc_cache *'     | `-ReturnStmt 0x153827e70 <line:12:3, col:15>     |   `-RecoveryExpr 0x153827e48 <col:10, col:15> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x153827e10 <col:10> 'struct mfc_cache *' lvalue Var 0x153827708 'mfc' 'struct mfc_cache *'     |-IfStmt 0x153828010 <line:14:2, line:15:8>     | |-BinaryOperator 0x153827f88 <line:14:6, col:20> 'int' contains-errors '=='     | | |-RecoveryExpr 0x153827ed8 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x153827ea0 <col:6> 'struct ipmr_mfc_iter *' contains-errors lvalue Var 0x153827958 'it' 'struct ipmr_mfc_iter *'     | | `-UnaryOperator 0x153827f70 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x153827f50 <col:20> '<dependent type>' contains-errors lvalue     | `-GotoStmt 0x153827ff8 <line:15:3, col:8> 'end_of_list' 0x153827fa8     |-CallExpr 0x153828230 <line:17:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x153828110 <col:2> 'int ()' Function 0x153828058 'BUG_ON' 'int ()'     | `-BinaryOperator 0x153828210 <col:9, col:22> 'int' contains-errors '!='     |   |-RecoveryExpr 0x153828168 <col:9, col:13> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x153828130 <col:9> 'struct ipmr_mfc_iter *' contains-errors lvalue Var 0x153827958 'it' 'struct ipmr_mfc_iter *'     |   `-RecoveryExpr 0x1538281f0 <col:22> '<dependent type>' contains-errors lvalue     |-WhileStmt 0x153828eb0 <line:19:2, line:23:2>     | |-BinaryOperator 0x153828328 <line:19:9, col:20> 'int' contains-errors '<'     | | |-UnaryOperator 0x1538282b8 <col:9, col:15> '<dependent type>' contains-errors prefix '++' cannot overflow     | | | `-RecoveryExpr 0x153828290 <col:11, col:15> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x153828258 <col:11> 'struct ipmr_mfc_iter *' contains-errors lvalue Var 0x153827958 'it' 'struct ipmr_mfc_iter *'     | | `-RecoveryExpr 0x153828308 <col:20> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x153828e98 <col:31, line:23:2>     |   `-IfStmt 0x153828e78 <line:21:3, line:22:11>     |     |-ImplicitCastExpr 0x153828e00 <line:21:7> 'struct mfc_cache *' <LValueToRValue>     |     | `-DeclRefExpr 0x1538283e0 <col:7> 'struct mfc_cache *' lvalue Var 0x153827708 'mfc' 'struct mfc_cache *'     |     `-ReturnStmt 0x153828e68 <line:22:4, col:11>     |       `-ImplicitCastExpr 0x153828e50 <col:11> 'void *' <BitCast>     |         `-ImplicitCastExpr 0x153828e38 <col:11> 'struct mfc_cache *' <LValueToRValue>     |           `-DeclRefExpr 0x153828e18 <col:11> 'struct mfc_cache *' lvalue Var 0x153827708 'mfc' 'struct mfc_cache *'     |-CallExpr 0x153829060 <line:26:2, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x153828fb0 <col:2> 'int ()' Function 0x153828ef8 'read_unlock' 'int ()'     | `-UnaryOperator 0x153829048 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x153829028 <col:15> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x153829170 <line:27:2, col:15> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1538290c0 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x153829088 <col:2> 'struct ipmr_mfc_iter *' contains-errors lvalue Var 0x153827958 'it' 'struct ipmr_mfc_iter *'     | `-UnaryOperator 0x153829158 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x153829138 <col:15> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x153829210 <line:28:2, col:11> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1538291c8 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x153829190 <col:2> 'struct ipmr_mfc_iter *' contains-errors lvalue Var 0x153827958 'it' 'struct ipmr_mfc_iter *'     | `-IntegerLiteral 0x1538291f0 <col:11> 'int' 0     |-IfStmt 0x1538293e8 <line:32:2, line:33:10>     | |-ImplicitCastExpr 0x153829370 <line:32:6> 'struct mfc_cache *' <LValueToRValue>     | | `-DeclRefExpr 0x153829350 <col:6> 'struct mfc_cache *' lvalue Var 0x153827708 'mfc' 'struct mfc_cache *'     | `-ReturnStmt 0x1538293d8 <line:33:3, col:10>     |   `-ImplicitCastExpr 0x1538293c0 <col:10> 'void *' <BitCast>     |     `-ImplicitCastExpr 0x1538293a8 <col:10> 'struct mfc_cache *' <LValueToRValue>     |       `-DeclRefExpr 0x153829388 <col:10> 'struct mfc_cache *' lvalue Var 0x153827708 'mfc' 'struct mfc_cache *'     `-LabelStmt 0x153829510 <line:35:2, col:13> 'end_of_list'       `-NullStmt 0x153829508 <col:13> ","20763":"`-FunctionDecl 0x12c1283d8  line:1:8 invalid writeJsonObjElm 'int (int *, const char *, const void *, const int *)' static   |-ParmVarDecl 0x12c128128 <col:24, col:33> col:33 invalid ctx 'int *'   |-ParmVarDecl 0x12c1281a8 <col:38, col:50> col:50 used key 'const char *'   |-ParmVarDecl 0x12c128258 <line:2:24, col:36> col:36 used value 'const void *'   |-ParmVarDecl 0x12c1282d8 <col:43, col:62> col:62 invalid type 'const int *'   `-CompoundStmt 0x12c808c68 <col:67, line:4:1>     `-ReturnStmt 0x12c808c58 <line:3:5, col:72>       `-BinaryOperator 0x12c808c38 <col:12, col:72> '<dependent type>' contains-errors '|'         |-CallExpr 0x12c128660 <col:12, col:33> '<dependent type>' contains-errors         | |-DeclRefExpr 0x12c128600 <col:12> 'int ()' Function 0x12c128548 'writeJsonKey' 'int ()'         | |-RecoveryExpr 0x12c128620 <col:25> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x12c128640 <col:30> 'const char *' lvalue ParmVar 0x12c1281a8 'key' 'const char *'         `-CallExpr 0x12c808c00 <col:37, col:72> '<dependent type>' contains-errors           |-DeclRefExpr 0x12c128770 <col:37> 'int ()' Function 0x12c1286b8 'encodeJsonInternal' 'int ()'           |-DeclRefExpr 0x12c128790 <col:56> 'const void *' lvalue ParmVar 0x12c128258 'value' 'const void *'           |-RecoveryExpr 0x12c1287b0 <col:63> '<dependent type>' contains-errors lvalue           `-RecoveryExpr 0x12c1287d0 <col:69> '<dependent type>' contains-errors lvalue ","21237":"`-FunctionDecl 0x13f9282a8  line:1:12 bson_string_is_db_ref 'int (const unsigned char *, const int)' static   |-ParmVarDecl 0x13f928108 <col:35, col:56> col:56 used string 'const unsigned char *'   |-ParmVarDecl 0x13f928188 <col:64, col:74> col:74 used length 'const int'   `-CompoundStmt 0x13f941050 <col:83, line:16:1>     |-DeclStmt 0x13f928448 <line:2:5, col:19>     | `-VarDecl 0x13f9283c0 <col:5, col:18> col:9 used result 'int' cinit     |   `-IntegerLiteral 0x13f928428 <col:18> 'int' 0     |-IfStmt 0x13f940fd8 <line:4:5, line:13:5> has_else     | |-BinaryOperator 0x13f9284b8 <line:4:9, col:19> 'int' '>='     | | |-ImplicitCastExpr 0x13f9284a0 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x13f928460 <col:9> 'const int' lvalue ParmVar 0x13f928188 'length' 'const int'     | | `-IntegerLiteral 0x13f928480 <col:19> 'int' 4     | |-CompoundStmt 0x13f940a40 <col:23, line:7:5>     | | `-IfStmt 0x13f940a20 <line:5:9, line:6:22>     | |   |-BinaryOperator 0x13f928798 <line:5:13, col:66> 'int' '&&'     | |   | |-BinaryOperator 0x13f928698 <col:13, col:46> 'int' '&&'     | |   | | |-BinaryOperator 0x13f928598 <col:13, col:26> 'int' '=='     | |   | | | |-ImplicitCastExpr 0x13f928580 <col:13, col:21> 'int' <IntegralCast>     | |   | | | | `-ImplicitCastExpr 0x13f928568 <col:13, col:21> 'unsigned char' <LValueToRValue>     | |   | | | |   `-ArraySubscriptExpr 0x13f928530 <col:13, col:21> 'const unsigned char' lvalue     | |   | | | |     |-ImplicitCastExpr 0x13f928518 <col:13> 'const unsigned char *' <LValueToRValue>     | |   | | | |     | `-DeclRefExpr 0x13f9284d8 <col:13> 'const unsigned char *' lvalue ParmVar 0x13f928108 'string' 'const unsigned char *'     | |   | | | |     `-IntegerLiteral 0x13f9284f8 <col:20> 'int' 1     | |   | | | `-CharacterLiteral 0x13f928550 <col:26> 'int' 114     | |   | | `-BinaryOperator 0x13f928678 <col:33, col:46> 'int' '=='     | |   | |   |-ImplicitCastExpr 0x13f928660 <col:33, col:41> 'int' <IntegralCast>     | |   | |   | `-ImplicitCastExpr 0x13f928648 <col:33, col:41> 'unsigned char' <LValueToRValue>     | |   | |   |   `-ArraySubscriptExpr 0x13f928610 <col:33, col:41> 'const unsigned char' lvalue     | |   | |   |     |-ImplicitCastExpr 0x13f9285f8 <col:33> 'const unsigned char *' <LValueToRValue>     | |   | |   |     | `-DeclRefExpr 0x13f9285b8 <col:33> 'const unsigned char *' lvalue ParmVar 0x13f928108 'string' 'const unsigned char *'     | |   | |   |     `-IntegerLiteral 0x13f9285d8 <col:40> 'int' 2     | |   | |   `-CharacterLiteral 0x13f928630 <col:46> 'int' 101     | |   | `-BinaryOperator 0x13f928778 <col:53, col:66> 'int' '=='     | |   |   |-ImplicitCastExpr 0x13f928760 <col:53, col:61> 'int' <IntegralCast>     | |   |   | `-ImplicitCastExpr 0x13f928748 <col:53, col:61> 'unsigned char' <LValueToRValue>     | |   |   |   `-ArraySubscriptExpr 0x13f928710 <col:53, col:61> 'const unsigned char' lvalue     | |   |   |     |-ImplicitCastExpr 0x13f9286f8 <col:53> 'const unsigned char *' <LValueToRValue>     | |   |   |     | `-DeclRefExpr 0x13f9286b8 <col:53> 'const unsigned char *' lvalue ParmVar 0x13f928108 'string' 'const unsigned char *'     | |   |   |     `-IntegerLiteral 0x13f9286d8 <col:60> 'int' 3     | |   |   `-CharacterLiteral 0x13f928730 <col:66> 'int' 102     | |   `-BinaryOperator 0x13f940a00 <line:6:13, col:22> 'int' '='     | |     |-DeclRefExpr 0x13f9287b8 <col:13> 'int' lvalue Var 0x13f9283c0 'result' 'int'     | |     `-IntegerLiteral 0x13f9287d8 <col:22> 'int' 1     | `-IfStmt 0x13f940fb8 <line:8:10, line:13:5>     |   |-BinaryOperator 0x13f940ab0 <line:8:14, col:24> 'int' '>='     |   | |-ImplicitCastExpr 0x13f940a98 <col:14> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x13f940a58 <col:14> 'const int' lvalue ParmVar 0x13f928188 'length' 'const int'     |   | `-IntegerLiteral 0x13f940a78 <col:24> 'int' 3     |   `-CompoundStmt 0x13f940fa0 <col:28, line:13:5>     |     `-IfStmt 0x13f940f70 <line:9:9, line:12:22> has_else     |       |-BinaryOperator 0x13f940c90 <line:9:13, col:46> 'int' '&&'     |       | |-BinaryOperator 0x13f940b90 <col:13, col:26> 'int' '=='     |       | | |-ImplicitCastExpr 0x13f940b78 <col:13, col:21> 'int' <IntegralCast>     |       | | | `-ImplicitCastExpr 0x13f940b60 <col:13, col:21> 'unsigned char' <LValueToRValue>     |       | | |   `-ArraySubscriptExpr 0x13f940b28 <col:13, col:21> 'const unsigned char' lvalue     |       | | |     |-ImplicitCastExpr 0x13f940b10 <col:13> 'const unsigned char *' <LValueToRValue>     |       | | |     | `-DeclRefExpr 0x13f940ad0 <col:13> 'const unsigned char *' lvalue ParmVar 0x13f928108 'string' 'const unsigned char *'     |       | | |     `-IntegerLiteral 0x13f940af0 <col:20> 'int' 1     |       | | `-CharacterLiteral 0x13f940b48 <col:26> 'int' 105     |       | `-BinaryOperator 0x13f940c70 <col:33, col:46> 'int' '=='     |       |   |-ImplicitCastExpr 0x13f940c58 <col:33, col:41> 'int' <IntegralCast>     |       |   | `-ImplicitCastExpr 0x13f940c40 <col:33, col:41> 'unsigned char' <LValueToRValue>     |       |   |   `-ArraySubscriptExpr 0x13f940c08 <col:33, col:41> 'const unsigned char' lvalue     |       |   |     |-ImplicitCastExpr 0x13f940bf0 <col:33> 'const unsigned char *' <LValueToRValue>     |       |   |     | `-DeclRefExpr 0x13f940bb0 <col:33> 'const unsigned char *' lvalue ParmVar 0x13f928108 'string' 'const unsigned char *'     |       |   |     `-IntegerLiteral 0x13f940bd0 <col:40> 'int' 2     |       |   `-CharacterLiteral 0x13f940c28 <col:46> 'int' 100     |       |-BinaryOperator 0x13f940cf0 <line:10:13, col:22> 'int' '='     |       | |-DeclRefExpr 0x13f940cb0 <col:13> 'int' lvalue Var 0x13f9283c0 'result' 'int'     |       | `-IntegerLiteral 0x13f940cd0 <col:22> 'int' 1     |       `-IfStmt 0x13f940f50 <line:11:14, line:12:22>     |         |-BinaryOperator 0x13f940ed0 <line:11:18, col:51> 'int' '&&'     |         | |-BinaryOperator 0x13f940dd0 <col:18, col:31> 'int' '=='     |         | | |-ImplicitCastExpr 0x13f940db8 <col:18, col:26> 'int' <IntegralCast>     |         | | | `-ImplicitCastExpr 0x13f940da0 <col:18, col:26> 'unsigned char' <LValueToRValue>     |         | | |   `-ArraySubscriptExpr 0x13f940d68 <col:18, col:26> 'const unsigned char' lvalue     |         | | |     |-ImplicitCastExpr 0x13f940d50 <col:18> 'const unsigned char *' <LValueToRValue>     |         | | |     | `-DeclRefExpr 0x13f940d10 <col:18> 'const unsigned char *' lvalue ParmVar 0x13f928108 'string' 'const unsigned char *'     |         | | |     `-IntegerLiteral 0x13f940d30 <col:25> 'int' 1     |         | | `-CharacterLiteral 0x13f940d88 <col:31> 'int' 100     |         | `-BinaryOperator 0x13f940eb0 <col:38, col:51> 'int' '=='     |         |   |-ImplicitCastExpr 0x13f940e98 <col:38, col:46> 'int' <IntegralCast>     |         |   | `-ImplicitCastExpr 0x13f940e80 <col:38, col:46> 'unsigned char' <LValueToRValue>     |         |   |   `-ArraySubscriptExpr 0x13f940e48 <col:38, col:46> 'const unsigned char' lvalue     |         |   |     |-ImplicitCastExpr 0x13f940e30 <col:38> 'const unsigned char *' <LValueToRValue>     |         |   |     | `-DeclRefExpr 0x13f940df0 <col:38> 'const unsigned char *' lvalue ParmVar 0x13f928108 'string' 'const unsigned char *'     |         |   |     `-IntegerLiteral 0x13f940e10 <col:45> 'int' 2     |         |   `-CharacterLiteral 0x13f940e68 <col:51> 'int' 98     |         `-BinaryOperator 0x13f940f30 <line:12:13, col:22> 'int' '='     |           |-DeclRefExpr 0x13f940ef0 <col:13> 'int' lvalue Var 0x13f9283c0 'result' 'int'     |           `-IntegerLiteral 0x13f940f10 <col:22> 'int' 1     `-ReturnStmt 0x13f941040 <line:15:5, col:12>       `-ImplicitCastExpr 0x13f941028 <col:12> 'int' <LValueToRValue>         `-DeclRefExpr 0x13f941008 <col:12> 'int' lvalue Var 0x13f9283c0 'result' 'int' ","20853":"`-FunctionDecl 0x1541440a8  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x1541441a8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x154144210 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x154144278 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x154144150 <<invalid sloc>> Implicit 882 ","20849":"`-FunctionDecl 0x127142ba8  col:3 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x127142ca8 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x127142c50 <<invalid sloc>> Implicit 873 ","20937":"`-FunctionDecl 0x122008ca0  col:2 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern   |-ParmVarDecl 0x122008da0 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x122008e08 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-ParmVarDecl 0x122008e70 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x122008d48 <<invalid sloc>> Implicit 905   `-FormatAttr 0x122008ef0 <col:2> Implicit printf 3 4 ","20591":"`-FunctionDecl 0x1578428e8  col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x1578429e8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x157842a50 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x157842ab8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x157842990 <<invalid sloc>> Implicit 882 ","20860":"`-FunctionDecl 0x139128280  line:1:13 invalid cleanup_coins 'void (int *, int)' static   |-ParmVarDecl 0x139128128 <col:27, col:33> col:33 invalid coins 'int *'   |-ParmVarDecl 0x1391281a8 <col:40, col:47> col:47 invalid num 'int'   `-CompoundStmt 0x1391286b8 <line:2:1, line:5:1>     `-UnaryExprOrTypeTraitExpr 0x139128390 <line:3:3, col:10> 'unsigned long' contains-errors sizeof       `-RecoveryExpr 0x139128370 <col:10> '<dependent type>' contains-errors lvalue ","21259":"`-FunctionDecl 0x145827400  line:1:17 invalid sys_oabi_semtimedop 'int (int, struct oabi_sembuf)'   |-ParmVarDecl 0x14580dcf0 <col:37, col:41> col:41 used semid 'int'   |-ParmVarDecl 0x14580e278 <line:2:9, col:28> col:28 invalid __user 'struct oabi_sembuf'   `-CompoundStmt 0x145122f08 <line:5:1, line:38:1>     |-DeclStmt 0x1458276a8 <line:6:2, col:21>     | |-RecordDecl 0x1458274b8 <col:2, col:9> col:9 struct sembuf     | `-VarDecl 0x145827628 <col:2, col:17> col:17 used sops 'struct sembuf *'     |-DeclStmt 0x145827838 <line:7:2, col:31>     | |-RecordDecl 0x1458276c0 <col:2, col:9> col:9 struct timespec     | `-VarDecl 0x1458277b8 <col:2, col:18> col:18 invalid local_timeout 'struct timespec'     |-DeclStmt 0x1458278d0 <line:8:2, col:10>     | `-VarDecl 0x145827868 <col:2, col:7> col:7 used err 'long'     |-DeclStmt 0x145827968 <line:9:2, col:7>     | `-VarDecl 0x145827900 <col:2, col:6> col:6 used i 'int'     |-IfStmt 0x145827af0 <line:11:2, line:12:11>     | |-BinaryOperator 0x145827a28 <line:11:6, col:14> 'int' '<'     | | |-ImplicitCastExpr 0x1458279f8 <col:6> 'struct sembuf *' <LValueToRValue>     | | | `-DeclRefExpr 0x1458279d8 <col:6> 'struct sembuf *' lvalue Var 0x145827628 'sops' 'struct sembuf *'     | | `-ImplicitCastExpr 0x145827a10 <col:14> 'struct sembuf *' <IntegralToPointer>     | |   `-IntegerLiteral 0x145827998 <col:14> 'int' 1     | `-ReturnStmt 0x145827ae0 <line:12:3, col:11>     |   `-UnaryOperator 0x145827ac8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x145827ab0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x145827a90 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x145827e68 <line:14:2, line:15:11>     | |-UnaryOperator 0x145827da8 <line:14:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x145827d90 <col:7> 'struct sembuf *' <LValueToRValue>     | |   `-DeclRefExpr 0x145827d70 <col:7> 'struct sembuf *' lvalue Var 0x145827628 'sops' 'struct sembuf *'     | `-ReturnStmt 0x145827e58 <line:15:3, col:11>     |   `-UnaryOperator 0x145827e40 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x145827e28 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x145827e08 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x145827ee0 <line:16:2, col:8> 'long' '='     | |-DeclRefExpr 0x145827e88 <col:2> 'long' lvalue Var 0x145827868 'err' 'long'     | `-ImplicitCastExpr 0x145827ec8 <col:8> 'long' <IntegralCast>     |   `-IntegerLiteral 0x145827ea8 <col:8> 'int' 0     |-ForStmt 0x1451227c0 <line:17:2, line:22:2>     | |-BinaryOperator 0x145827f40 <line:17:7, col:11> 'int' '='     | | |-DeclRefExpr 0x145827f00 <col:7> 'int' lvalue Var 0x145827900 'i' 'int'     | | `-IntegerLiteral 0x145827f20 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x145828020 <col:14, col:18> 'int' '<'     | | |-ImplicitCastExpr 0x145828008 <col:14> 'struct sembuf *' <IntegralToPointer>     | | | `-ImplicitCastExpr 0x145827fd8 <col:14> 'int' <LValueToRValue>     | | |   `-DeclRefExpr 0x145827f60 <col:14> 'int' lvalue Var 0x145827900 'i' 'int'     | | `-ImplicitCastExpr 0x145827ff0 <col:18> 'struct sembuf *' <LValueToRValue>     | |   `-DeclRefExpr 0x145827fb8 <col:18> 'struct sembuf *' lvalue Var 0x145827628 'sops' 'struct sembuf *'     | |-UnaryOperator 0x145828060 <col:25, col:26> 'int' postfix '++'     | | `-DeclRefExpr 0x145828040 <col:25> 'int' lvalue Var 0x145827900 'i' 'int'     | `-CompoundStmt 0x1451227a8 <col:30, line:22:2>     |   `-ImplicitCastExpr 0x145122790 <line:21:3, col:8> '<dependent type>' contains-errors <LValueToRValue>     |     `-RecoveryExpr 0x145122768 <col:3, col:8> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x145122748 <col:3> 'struct sembuf *' lvalue Var 0x145827628 'sops' 'struct sembuf *'     |-IfStmt 0x1451229b8 <line:23:2, line:27:2>     | |-RecoveryExpr 0x1451227f8 <line:23:6> '_Bool' contains-errors     | `-CompoundStmt 0x1451229a8 <col:15, line:27:2>     |-IfStmt 0x145122cd0 <line:28:2, line:35:2> has_else     | |-ImplicitCastExpr 0x1451229f8 <line:28:6> 'long' <LValueToRValue>     | | `-DeclRefExpr 0x1451229d8 <col:6> 'long' lvalue Var 0x145827868 'err' 'long'     | |-CompoundStmt 0x145122a30 <col:11, line:30:2>     | `-CompoundStmt 0x145122cc0 <col:9, line:35:2>     |-CallExpr 0x145122e68 <line:36:2, col:12> 'int'     | |-ImplicitCastExpr 0x145122e50 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x145122de0 <col:2> 'int ()' Function 0x145122d28 'kfree' 'int ()'     | `-ImplicitCastExpr 0x145122e90 <col:8> 'struct sembuf *' <LValueToRValue>     |   `-DeclRefExpr 0x145122e00 <col:8> 'struct sembuf *' lvalue Var 0x145827628 'sops' 'struct sembuf *'     `-ReturnStmt 0x145122ef8 <line:37:2, col:9>       `-ImplicitCastExpr 0x145122ee0 <col:9> 'int' <IntegralCast>         `-ImplicitCastExpr 0x145122ec8 <col:9> 'long' <LValueToRValue>           `-DeclRefExpr 0x145122ea8 <col:9> 'long' lvalue Var 0x145827868 'err' 'long' ","20223":"`-FunctionDecl 0x159830a38  line:1:12 fsmSetFCaps 'int (const char *, const char *)' static   |-ParmVarDecl 0x1598308d8 <col:24, col:36> col:36 path 'const char *'   |-ParmVarDecl 0x159830958 <col:42, col:54> col:54 captxt 'const char *'   `-CompoundStmt 0x159830c38 <line:2:1, line:18:1>     |-DeclStmt 0x159830bd8 <line:3:5, col:15>     | `-VarDecl 0x159830b50 <col:5, col:14> col:9 used rc 'int' cinit     |   `-IntegerLiteral 0x159830bb8 <col:14> 'int' 0     `-ReturnStmt 0x159830c28 <line:17:5, col:12>       `-ImplicitCastExpr 0x159830c10 <col:12> 'int' <LValueToRValue>         `-DeclRefExpr 0x159830bf0 <col:12> 'int' lvalue Var 0x159830b50 'rc' 'int' ","20343":"`-FunctionDecl 0x145928438  line:1:1 invalid dissect_kafka_create_delegation_token_request_renewer 'int (int *, int *, int *, int, int)'   |-ParmVarDecl 0x145928128 <col:55, col:65> col:65 invalid tvb 'int *'   |-ParmVarDecl 0x1459281a8 <col:70, col:83> col:83 invalid pinfo 'int *'   |-ParmVarDecl 0x145928228 <col:90, col:102> col:102 invalid tree 'int *'   |-ParmVarDecl 0x1459282a8 <line:2:47, col:51> col:51 used offset 'int'   |-ParmVarDecl 0x145928328 <col:59, col:79> col:79 invalid api_version 'int'   `-CompoundStmt 0x146009cb0 <line:3:1, line:20:1>     |-BinaryOperator 0x1460095f8 <line:9:5, col:123> 'int' contains-errors '='     | |-DeclRefExpr 0x146009258 <col:5> 'int' lvalue ParmVar 0x1459282a8 'offset' 'int'     | `-CallExpr 0x146009598 <col:14, col:123> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x146009358 <col:14> 'int ()' Function 0x1460092a0 'dissect_kafka_string' 'int ()'     |   |-RecoveryExpr 0x146009518 <col:35> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x146009538 <col:44> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x1460093a8 <col:75> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x1460093c8 <col:80> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x1460093e8 <col:87> 'int' lvalue ParmVar 0x1459282a8 'offset' 'int'     |   |-BinaryOperator 0x146009448 <col:95, col:110> 'int' contains-errors '>='     |   | |-RecoveryExpr 0x146009408 <col:95> '<dependent type>' contains-errors lvalue     |   | `-IntegerLiteral 0x146009428 <col:110> 'int' 2     |   |-RecoveryExpr 0x146009558 <col:113> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x146009578 <col:119> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1460098d8 <line:11:5, col:123> 'int' contains-errors '='     | |-DeclRefExpr 0x146009618 <col:5> 'int' lvalue ParmVar 0x1459282a8 'offset' 'int'     | `-CallExpr 0x146009878 <col:14, col:123> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x146009638 <col:14> 'int ()' Function 0x1460092a0 'dissect_kafka_string' 'int ()'     |   |-RecoveryExpr 0x1460097f8 <col:35> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x146009818 <col:44> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x146009688 <col:75> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x1460096a8 <col:80> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x1460096c8 <col:87> 'int' lvalue ParmVar 0x1459282a8 'offset' 'int'     |   |-BinaryOperator 0x146009728 <col:95, col:110> 'int' contains-errors '>='     |   | |-RecoveryExpr 0x1460096e8 <col:95> '<dependent type>' contains-errors lvalue     |   | `-IntegerLiteral 0x146009708 <col:110> 'int' 2     |   |-RecoveryExpr 0x146009838 <col:113> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x146009858 <col:119> '<dependent type>' contains-errors lvalue     |-IfStmt 0x146009b08 <line:13:5, line:15:5>     | |-BinaryOperator 0x146009938 <line:13:9, col:24> 'int' contains-errors '>='     | | |-RecoveryExpr 0x1460098f8 <col:9> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x146009918 <col:24> 'int' 2     | `-CompoundStmt 0x146009af8 <col:27, line:15:5>     `-ReturnStmt 0x146009ca0 <line:19:5, col:12>       `-ImplicitCastExpr 0x146009c88 <col:12> 'int' <LValueToRValue>         `-DeclRefExpr 0x146009c68 <col:12> 'int' lvalue ParmVar 0x1459282a8 'offset' 'int' ","21108":"`-FunctionDecl 0x13584e898  col:35 implicit used strerror 'char *(int)' extern   |-ParmVarDecl 0x13584e998 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x13584e940 <<invalid sloc>> Implicit 901 ","20502":"`-FunctionDecl 0x12a928288  line:1:1 invalid proto_write_token_info 'int (int *, int)'   |-ParmVarDecl 0x12a928128 <col:25, col:42> col:42 invalid msg 'int *'   |-ParmVarDecl 0x12a9281a8 <line:2:25, col:43> col:43 invalid info 'int'   `-CompoundStmt 0x12a942e08 <line:3:1, line:28:1>     |-CallExpr 0x12a928580 <line:4:2, col:21> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12a9284a0 <col:2> 'int ()' Function 0x12a9283e8 'assert' 'int ()'     | `-BinaryOperator 0x12a928560 <col:10, col:17> 'int' contains-errors '!='     |   |-RecoveryExpr 0x12a9284c0 <col:10> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x12a928540 <col:17> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12a928688 <line:5:2, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12a9285a8 <col:2> 'int ()' Function 0x12a9283e8 'assert' 'int ()'     | `-BinaryOperator 0x12a928668 <col:10, col:18> 'int' contains-errors '!='     |   |-RecoveryExpr 0x12a9285c8 <col:10> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x12a928648 <col:18> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12a942da0 <line:7:2, line:25:10>     | |-BinaryOperator 0x12a942d38 <line:7:6, line:24:65> 'int' contains-errors '||'     | | |-BinaryOperator 0x12a942c00 <line:7:6, line:23:65> 'int' contains-errors '||'     | | | |-BinaryOperator 0x12a942ad8 <line:7:6, line:22:65> 'int' contains-errors '||'     | | | | |-BinaryOperator 0x12a9428d0 <line:7:6, line:21:66> 'int' contains-errors '||'     | | | | | |-BinaryOperator 0x12a9427c0 <line:7:6, line:20:67> 'int' contains-errors '||'     | | | | | | |-BinaryOperator 0x12a9426b0 <line:7:6, line:19:65> 'int' contains-errors '||'     | | | | | | | |-BinaryOperator 0x12a9425a0 <line:7:6, line:18:66> 'int' contains-errors '||'     | | | | | | | | |-BinaryOperator 0x12a942490 <line:7:6, line:17:58> 'int' contains-errors '||'     | | | | | | | | | |-BinaryOperator 0x12a942380 <line:7:6, line:16:58> 'int' contains-errors '||'     | | | | | | | | | | |-BinaryOperator 0x12a942270 <line:7:6, line:15:63> 'int' contains-errors '||'     | | | | | | | | | | | |-BinaryOperator 0x12a942160 <line:7:6, line:14:66> 'int' contains-errors '||'     | | | | | | | | | | | | |-BinaryOperator 0x12a942050 <line:7:6, line:13:61> 'int' contains-errors '||'     | | | | | | | | | | | | | |-BinaryOperator 0x12a941f40 <line:7:6, line:12:64> 'int' contains-errors '||'     | | | | | | | | | | | | | | |-BinaryOperator 0x12a941e30 <line:7:6, line:11:52> 'int' contains-errors '||'     | | | | | | | | | | | | | | | |-BinaryOperator 0x12a941c40 <line:7:6, line:10:70> 'int' contains-errors '||'     | | | | | | | | | | | | | | | | |-BinaryOperator 0x12a941b08 <line:7:6, line:9:63> 'int' contains-errors '||'     | | | | | | | | | | | | | | | | | |-BinaryOperator 0x12a9419d0 <line:7:6, line:8:72> 'int' contains-errors '||'     | | | | | | | | | | | | | | | | | | |-UnaryOperator 0x12a9418a0 <line:7:6, col:63> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | | | | | | | | | | | | | | | | `-CallExpr 0x12a941868 <col:7, col:63> '<dependent type>' contains-errors     | | | | | | | | | | | | | | | | | | |   |-DeclRefExpr 0x12a928790 <col:7> 'int ()' Function 0x12a9286d8 'p11_rpc_message_write_space_string' 'int ()'     | | | | | | | | | | | | | | | | | | |   |-RecoveryExpr 0x12a9287b0 <col:43> '<dependent type>' contains-errors lvalue     | | | | | | | | | | | | | | | | | | |   |-CXXDependentScopeMemberExpr 0x12a941800 <col:48, col:54> '<dependent type>' contains-errors lvalue ->label     | | | | | | | | | | | | | | | | | | |   | `-RecoveryExpr 0x12a9287d0 <col:48> '<dependent type>' contains-errors lvalue     | | | | | | | | | | | | | | | | | | |   `-IntegerLiteral 0x12a941848 <col:61> 'int' 32     | | | | | | | | | | | | | | | | | | `-UnaryOperator 0x12a9419b8 <line:8:6, col:72> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | | | | | | | | | | | | | | |   `-CallExpr 0x12a941980 <col:7, col:72> '<dependent type>' contains-errors     | | | | | | | | | | | | | | | | | |     |-DeclRefExpr 0x12a9418b8 <col:7> 'int ()' Function 0x12a9286d8 'p11_rpc_message_write_space_string' 'int ()'     | | | | | | | | | | | | | | | | | |     |-RecoveryExpr 0x12a9418d8 <col:43> '<dependent type>' contains-errors lvalue     | | | | | | | | | | | | | | | | | |     |-CXXDependentScopeMemberExpr 0x12a941918 <col:48, col:54> '<dependent type>' contains-errors lvalue ->manufacturerID     | | | | | | | | | | | | | | | | | |     | `-RecoveryExpr 0x12a9418f8 <col:48> '<dependent type>' contains-errors lvalue     | | | | | | | | | | | | | | | | | |     `-IntegerLiteral 0x12a941960 <col:70> 'int' 32     | | | | | | | | | | | | | | | | | `-UnaryOperator 0x12a941af0 <line:9:6, col:63> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | | | | | | | | | | | | | |   `-CallExpr 0x12a941ab8 <col:7, col:63> '<dependent type>' contains-errors     | | | | | | | | | | | | | | | | |     |-DeclRefExpr 0x12a9419f0 <col:7> 'int ()' Function 0x12a9286d8 'p11_rpc_message_write_space_string' 'int ()'     | | | | | | | | | | | | | | | | |     |-RecoveryExpr 0x12a941a10 <col:43> '<dependent type>' contains-errors lvalue     | | | | | | | | | | | | | | | | |     |-CXXDependentScopeMemberExpr 0x12a941a50 <col:48, col:54> '<dependent type>' contains-errors lvalue ->model     | | | | | | | | | | | | | | | | |     | `-RecoveryExpr 0x12a941a30 <col:48> '<dependent type>' contains-errors lvalue     | | | | | | | | | | | | | | | | |     `-IntegerLiteral 0x12a941a98 <col:61> 'int' 16     | | | | | | | | | | | | | | | | `-UnaryOperator 0x12a941c28 <line:10:6, col:70> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | | | | | | | | | | | | |   `-CallExpr 0x12a941bf0 <col:7, col:70> '<dependent type>' contains-errors     | | | | | | | | | | | | | | | |     |-DeclRefExpr 0x12a941b28 <col:7> 'int ()' Function 0x12a9286d8 'p11_rpc_message_write_space_string' 'int ()'     | | | | | | | | | | | | | | | |     |-RecoveryExpr 0x12a941b48 <col:43> '<dependent type>' contains-errors lvalue     | | | | | | | | | | | | | | | |     |-CXXDependentScopeMemberExpr 0x12a941b88 <col:48, col:54> '<dependent type>' contains-errors lvalue ->serialNumber     | | | | | | | | | | | | | | | |     | `-RecoveryExpr 0x12a941b68 <col:48> '<dependent type>' contains-errors lvalue     | | | | | | | | | | | | | | | |     `-IntegerLiteral 0x12a941bd0 <col:68> 'int' 16     | | | | | | | | | | | | | | | `-UnaryOperator 0x12a941e18 <line:11:6, col:52> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | | | | | | | | | | | |   `-CallExpr 0x12a941de8 <col:7, col:52> '<dependent type>' contains-errors     | | | | | | | | | | | | | | |     |-DeclRefExpr 0x12a941d40 <col:7> 'int ()' Function 0x12a941c88 'p11_rpc_message_write_ulong' 'int ()'     | | | | | | | | | | | | | | |     |-RecoveryExpr 0x12a941d60 <col:36> '<dependent type>' contains-errors lvalue     | | | | | | | | | | | | | | |     `-CXXDependentScopeMemberExpr 0x12a941da0 <col:41, col:47> '<dependent type>' contains-errors lvalue ->flags     | | | | | | | | | | | | | | |       `-RecoveryExpr 0x12a941d80 <col:41> '<dependent type>' contains-errors lvalue     | | | | | | | | | | | | | | `-UnaryOperator 0x12a941f28 <line:12:6, col:64> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | | | | | | | | | | |   `-CallExpr 0x12a941ef8 <col:7, col:64> '<dependent type>' contains-errors     | | | | | | | | | | | | | |     |-DeclRefExpr 0x12a941e50 <col:7> 'int ()' Function 0x12a941c88 'p11_rpc_message_write_ulong' 'int ()'     | | | | | | | | | | | | | |     |-RecoveryExpr 0x12a941e70 <col:36> '<dependent type>' contains-errors lvalue     | | | | | | | | | | | | | |     `-CXXDependentScopeMemberExpr 0x12a941eb0 <col:41, col:47> '<dependent type>' contains-errors lvalue ->ulMaxSessionCount     | | | | | | | | | | | | | |       `-RecoveryExpr 0x12a941e90 <col:41> '<dependent type>' contains-errors lvalue     | | | | | | | | | | | | | `-UnaryOperator 0x12a942038 <line:13:6, col:61> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | | | | | | | | | |   `-CallExpr 0x12a942008 <col:7, col:61> '<dependent type>' contains-errors     | | | | | | | | | | | | |     |-DeclRefExpr 0x12a941f60 <col:7> 'int ()' Function 0x12a941c88 'p11_rpc_message_write_ulong' 'int ()'     | | | | | | | | | | | | |     |-RecoveryExpr 0x12a941f80 <col:36> '<dependent type>' contains-errors lvalue     | | | | | | | | | | | | |     `-CXXDependentScopeMemberExpr 0x12a941fc0 <col:41, col:47> '<dependent type>' contains-errors lvalue ->ulSessionCount     | | | | | | | | | | | | |       `-RecoveryExpr 0x12a941fa0 <col:41> '<dependent type>' contains-errors lvalue     | | | | | | | | | | | | `-UnaryOperator 0x12a942148 <line:14:6, col:66> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | | | | | | | | |   `-CallExpr 0x12a942118 <col:7, col:66> '<dependent type>' contains-errors     | | | | | | | | | | | |     |-DeclRefExpr 0x12a942070 <col:7> 'int ()' Function 0x12a941c88 'p11_rpc_message_write_ulong' 'int ()'     | | | | | | | | | | | |     |-RecoveryExpr 0x12a942090 <col:36> '<dependent type>' contains-errors lvalue     | | | | | | | | | | | |     `-CXXDependentScopeMemberExpr 0x12a9420d0 <col:41, col:47> '<dependent type>' contains-errors lvalue ->ulMaxRwSessionCount     | | | | | | | | | | | |       `-RecoveryExpr 0x12a9420b0 <col:41> '<dependent type>' contains-errors lvalue     | | | | | | | | | | | `-UnaryOperator 0x12a942258 <line:15:6, col:63> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | | | | | | | |   `-CallExpr 0x12a942228 <col:7, col:63> '<dependent type>' contains-errors     | | | | | | | | | | |     |-DeclRefExpr 0x12a942180 <col:7> 'int ()' Function 0x12a941c88 'p11_rpc_message_write_ulong' 'int ()'     | | | | | | | | | | |     |-RecoveryExpr 0x12a9421a0 <col:36> '<dependent type>' contains-errors lvalue     | | | | | | | | | | |     `-CXXDependentScopeMemberExpr 0x12a9421e0 <col:41, col:47> '<dependent type>' contains-errors lvalue ->ulRwSessionCount     | | | | | | | | | | |       `-RecoveryExpr 0x12a9421c0 <col:41> '<dependent type>' contains-errors lvalue     | | | | | | | | | | `-UnaryOperator 0x12a942368 <line:16:6, col:58> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | | | | | | |   `-CallExpr 0x12a942338 <col:7, col:58> '<dependent type>' contains-errors     | | | | | | | | | |     |-DeclRefExpr 0x12a942290 <col:7> 'int ()' Function 0x12a941c88 'p11_rpc_message_write_ulong' 'int ()'     | | | | | | | | | |     |-RecoveryExpr 0x12a9422b0 <col:36> '<dependent type>' contains-errors lvalue     | | | | | | | | | |     `-CXXDependentScopeMemberExpr 0x12a9422f0 <col:41, col:47> '<dependent type>' contains-errors lvalue ->ulMaxPinLen     | | | | | | | | | |       `-RecoveryExpr 0x12a9422d0 <col:41> '<dependent type>' contains-errors lvalue     | | | | | | | | | `-UnaryOperator 0x12a942478 <line:17:6, col:58> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | | | | | |   `-CallExpr 0x12a942448 <col:7, col:58> '<dependent type>' contains-errors     | | | | | | | | |     |-DeclRefExpr 0x12a9423a0 <col:7> 'int ()' Function 0x12a941c88 'p11_rpc_message_write_ulong' 'int ()'     | | | | | | | | |     |-RecoveryExpr 0x12a9423c0 <col:36> '<dependent type>' contains-errors lvalue     | | | | | | | | |     `-CXXDependentScopeMemberExpr 0x12a942400 <col:41, col:47> '<dependent type>' contains-errors lvalue ->ulMinPinLen     | | | | | | | | |       `-RecoveryExpr 0x12a9423e0 <col:41> '<dependent type>' contains-errors lvalue     | | | | | | | | `-UnaryOperator 0x12a942588 <line:18:6, col:66> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | | | | |   `-CallExpr 0x12a942558 <col:7, col:66> '<dependent type>' contains-errors     | | | | | | | |     |-DeclRefExpr 0x12a9424b0 <col:7> 'int ()' Function 0x12a941c88 'p11_rpc_message_write_ulong' 'int ()'     | | | | | | | |     |-RecoveryExpr 0x12a9424d0 <col:36> '<dependent type>' contains-errors lvalue     | | | | | | | |     `-CXXDependentScopeMemberExpr 0x12a942510 <col:41, col:47> '<dependent type>' contains-errors lvalue ->ulTotalPublicMemory     | | | | | | | |       `-RecoveryExpr 0x12a9424f0 <col:41> '<dependent type>' contains-errors lvalue     | | | | | | | `-UnaryOperator 0x12a942698 <line:19:6, col:65> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | | | |   `-CallExpr 0x12a942668 <col:7, col:65> '<dependent type>' contains-errors     | | | | | | |     |-DeclRefExpr 0x12a9425c0 <col:7> 'int ()' Function 0x12a941c88 'p11_rpc_message_write_ulong' 'int ()'     | | | | | | |     |-RecoveryExpr 0x12a9425e0 <col:36> '<dependent type>' contains-errors lvalue     | | | | | | |     `-CXXDependentScopeMemberExpr 0x12a942620 <col:41, col:47> '<dependent type>' contains-errors lvalue ->ulFreePublicMemory     | | | | | | |       `-RecoveryExpr 0x12a942600 <col:41> '<dependent type>' contains-errors lvalue     | | | | | | `-UnaryOperator 0x12a9427a8 <line:20:6, col:67> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | | |   `-CallExpr 0x12a942778 <col:7, col:67> '<dependent type>' contains-errors     | | | | | |     |-DeclRefExpr 0x12a9426d0 <col:7> 'int ()' Function 0x12a941c88 'p11_rpc_message_write_ulong' 'int ()'     | | | | | |     |-RecoveryExpr 0x12a9426f0 <col:36> '<dependent type>' contains-errors lvalue     | | | | | |     `-CXXDependentScopeMemberExpr 0x12a942730 <col:41, col:47> '<dependent type>' contains-errors lvalue ->ulTotalPrivateMemory     | | | | | |       `-RecoveryExpr 0x12a942710 <col:41> '<dependent type>' contains-errors lvalue     | | | | | `-UnaryOperator 0x12a9428b8 <line:21:6, col:66> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | |   `-CallExpr 0x12a942888 <col:7, col:66> '<dependent type>' contains-errors     | | | | |     |-DeclRefExpr 0x12a9427e0 <col:7> 'int ()' Function 0x12a941c88 'p11_rpc_message_write_ulong' 'int ()'     | | | | |     |-RecoveryExpr 0x12a942800 <col:36> '<dependent type>' contains-errors lvalue     | | | | |     `-CXXDependentScopeMemberExpr 0x12a942840 <col:41, col:47> '<dependent type>' contains-errors lvalue ->ulFreePrivateMemory     | | | | |       `-RecoveryExpr 0x12a942820 <col:41> '<dependent type>' contains-errors lvalue     | | | | `-UnaryOperator 0x12a942ac0 <line:22:6, col:65> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | |   `-CallExpr 0x12a942a90 <col:7, col:65> '<dependent type>' contains-errors     | | | |     |-DeclRefExpr 0x12a9429d0 <col:7> 'int ()' Function 0x12a942918 'p11_rpc_message_write_version' 'int ()'     | | | |     |-RecoveryExpr 0x12a9429f0 <col:38> '<dependent type>' contains-errors lvalue     | | | |     `-UnaryOperator 0x12a942a78 <col:43, col:50> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | |       `-CXXDependentScopeMemberExpr 0x12a942a30 <col:44, col:50> '<dependent type>' contains-errors lvalue ->hardwareVersion     | | | |         `-RecoveryExpr 0x12a942a10 <col:44> '<dependent type>' contains-errors lvalue     | | | `-UnaryOperator 0x12a942be8 <line:23:6, col:65> '<dependent type>' contains-errors prefix '!' cannot overflow     | | |   `-CallExpr 0x12a942bb8 <col:7, col:65> '<dependent type>' contains-errors     | | |     |-DeclRefExpr 0x12a942af8 <col:7> 'int ()' Function 0x12a942918 'p11_rpc_message_write_version' 'int ()'     | | |     |-RecoveryExpr 0x12a942b18 <col:38> '<dependent type>' contains-errors lvalue     | | |     `-UnaryOperator 0x12a942ba0 <col:43, col:50> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |       `-CXXDependentScopeMemberExpr 0x12a942b58 <col:44, col:50> '<dependent type>' contains-errors lvalue ->firmwareVersion     | | |         `-RecoveryExpr 0x12a942b38 <col:44> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x12a942d20 <line:24:6, col:65> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-CallExpr 0x12a942ce8 <col:7, col:65> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x12a942c20 <col:7> 'int ()' Function 0x12a9286d8 'p11_rpc_message_write_space_string' 'int ()'     | |     |-RecoveryExpr 0x12a942c40 <col:43> '<dependent type>' contains-errors lvalue     | |     |-CXXDependentScopeMemberExpr 0x12a942c80 <col:48, col:54> '<dependent type>' contains-errors lvalue ->utcTime     | |     | `-RecoveryExpr 0x12a942c60 <col:48> '<dependent type>' contains-errors lvalue     | |     `-IntegerLiteral 0x12a942cc8 <col:63> 'int' 16     | `-ReturnStmt 0x12a942d90 <line:25:3, col:10>     |   `-RecoveryExpr 0x12a942d70 <col:10> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12a942df8 <line:27:2, col:9>       `-RecoveryExpr 0x12a942dd8 <col:9> '<dependent type>' contains-errors lvalue ","20469":"`-FunctionDecl 0x148928288  line:1:5 invalid ber_write_integer 'int (int *, int)'   |-ParmVarDecl 0x148928128 <col:23, col:32> col:32 invalid s 'int *'   |-ParmVarDecl 0x1489281a8 <col:35, col:42> col:42 invalid value 'int'   `-CompoundStmt 0x14900a720 <line:2:1, line:32:1>     |-CallExpr 0x148928588 <line:3:2, col:51> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1489284a0 <col:2> 'int ()' Function 0x1489283e8 'ber_write_universal_tag' 'int ()'     | |-RecoveryExpr 0x1489284c0 <col:26> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x148928548 <col:29> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x148928568 <col:46> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14900a6c0 <line:5:2, line:29:2> has_else     | |-BinaryOperator 0x148928600 <line:5:6, col:15> 'int' contains-errors '<='     | | |-RecoveryExpr 0x1489285c0 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x1489285e0 <col:15> 'int' 255     | |-CompoundStmt 0x149009d78 <line:6:2, line:10:2>     | | |-CallExpr 0x148928760 <line:7:3, col:24> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x148928700 <col:3> 'int ()' Function 0x148928648 'ber_write_length' 'int ()'     | | | |-RecoveryExpr 0x148928720 <col:20> '<dependent type>' contains-errors lvalue     | | | `-IntegerLiteral 0x148928740 <col:23> 'int' 1     | | |-CallExpr 0x149009d18 <line:8:3, col:30> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x149009cb8 <col:3> 'int ()' Function 0x149009c00 'Stream_Write_UINT8' 'int ()'     | | | |-RecoveryExpr 0x149009cd8 <col:22> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x149009cf8 <col:25> '<dependent type>' contains-errors lvalue     | | `-ReturnStmt 0x149009d68 <line:9:3, col:10>     | |   `-IntegerLiteral 0x149009d48 <col:10> 'int' 2     | `-IfStmt 0x14900a690 <line:11:7, line:29:2> has_else     |   |-BinaryOperator 0x149009de0 <line:11:11, col:19> 'int' contains-errors '<'     |   | |-RecoveryExpr 0x149009da0 <col:11> '<dependent type>' contains-errors lvalue     |   | `-IntegerLiteral 0x149009dc0 <col:19> 'int' 65408     |   |-CompoundStmt 0x14900a030 <line:12:2, line:16:2>     |   | |-CallExpr 0x149009e60 <line:13:3, col:24> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x149009e00 <col:3> 'int ()' Function 0x148928648 'ber_write_length' 'int ()'     |   | | |-RecoveryExpr 0x149009e20 <col:20> '<dependent type>' contains-errors lvalue     |   | | `-IntegerLiteral 0x149009e40 <col:23> 'int' 2     |   | |-CallExpr 0x149009fd0 <line:14:3, col:34> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x149009f70 <col:3> 'int ()' Function 0x149009eb8 'Stream_Write_UINT16_BE' 'int ()'     |   | | |-RecoveryExpr 0x149009f90 <col:26> '<dependent type>' contains-errors lvalue     |   | | `-RecoveryExpr 0x149009fb0 <col:29> '<dependent type>' contains-errors lvalue     |   | `-ReturnStmt 0x14900a020 <line:15:3, col:10>     |   |   `-IntegerLiteral 0x14900a000 <col:10> 'int' 3     |   `-IfStmt 0x14900a660 <line:17:7, line:29:2> has_else     |     |-BinaryOperator 0x14900a098 <line:17:11, col:19> 'int' contains-errors '<'     |     | |-RecoveryExpr 0x14900a058 <col:11> '<dependent type>' contains-errors lvalue     |     | `-IntegerLiteral 0x14900a078 <col:19> 'int' 16744448     |     |-CompoundStmt 0x14900a358 <line:18:2, line:23:2>     |     | |-CallExpr 0x14900a118 <line:19:3, col:24> '<dependent type>' contains-errors     |     | | |-DeclRefExpr 0x14900a0b8 <col:3> 'int ()' Function 0x148928648 'ber_write_length' 'int ()'     |     | | |-RecoveryExpr 0x14900a0d8 <col:20> '<dependent type>' contains-errors lvalue     |     | | `-IntegerLiteral 0x14900a0f8 <col:23> 'int' 3     |     | |-CallExpr 0x14900a208 <line:20:3, col:38> '<dependent type>' contains-errors     |     | | |-DeclRefExpr 0x14900a148 <col:3> 'int ()' Function 0x149009c00 'Stream_Write_UINT8' 'int ()'     |     | | |-RecoveryExpr 0x14900a168 <col:22> '<dependent type>' contains-errors lvalue     |     | | `-ParenExpr 0x14900a1e8 <col:25, col:37> '<dependent type>' contains-errors     |     | |   `-BinaryOperator 0x14900a1c8 <col:26, col:35> '<dependent type>' contains-errors '>>'     |     | |     |-RecoveryExpr 0x14900a188 <col:26> '<dependent type>' contains-errors lvalue     |     | |     `-IntegerLiteral 0x14900a1a8 <col:35> 'int' 16     |     | |-CallExpr 0x14900a2f8 <line:21:3, col:45> '<dependent type>' contains-errors     |     | | |-DeclRefExpr 0x14900a238 <col:3> 'int ()' Function 0x149009eb8 'Stream_Write_UINT16_BE' 'int ()'     |     | | |-RecoveryExpr 0x14900a258 <col:26> '<dependent type>' contains-errors lvalue     |     | | `-ParenExpr 0x14900a2d8 <col:29, col:44> '<dependent type>' contains-errors     |     | |   `-BinaryOperator 0x14900a2b8 <col:30, col:38> '<dependent type>' contains-errors '&'     |     | |     |-RecoveryExpr 0x14900a278 <col:30> '<dependent type>' contains-errors lvalue     |     | |     `-IntegerLiteral 0x14900a298 <col:38> 'int' 65535     |     | `-ReturnStmt 0x14900a348 <line:22:3, col:10>     |     |   `-IntegerLiteral 0x14900a328 <col:10> 'int' 4     |     `-IfStmt 0x14900a640 <line:24:7, line:29:2>     |       |-BinaryOperator 0x14900a3c8 <line:24:11, col:20> 'int' contains-errors '<='     |       | |-RecoveryExpr 0x14900a388 <col:11> '<dependent type>' contains-errors lvalue     |       | `-IntegerLiteral 0x14900a3a8 <col:20> 'unsigned int' 4294967295     |       `-CompoundStmt 0x14900a618 <line:25:2, line:29:2>     |         |-CallExpr 0x14900a448 <line:26:3, col:24> '<dependent type>' contains-errors     |         | |-DeclRefExpr 0x14900a3e8 <col:3> 'int ()' Function 0x148928648 'ber_write_length' 'int ()'     |         | |-RecoveryExpr 0x14900a408 <col:20> '<dependent type>' contains-errors lvalue     |         | `-IntegerLiteral 0x14900a428 <col:23> 'int' 4     |         |-CallExpr 0x14900a5b8 <line:27:3, col:34> '<dependent type>' contains-errors     |         | |-DeclRefExpr 0x14900a558 <col:3> 'int ()' Function 0x14900a4a0 'Stream_Write_UINT32_BE' 'int ()'     |         | |-RecoveryExpr 0x14900a578 <col:26> '<dependent type>' contains-errors lvalue     |         | `-RecoveryExpr 0x14900a598 <col:29> '<dependent type>' contains-errors lvalue     |         `-ReturnStmt 0x14900a608 <line:28:3, col:10>     |           `-IntegerLiteral 0x14900a5e8 <col:10> 'int' 5     `-ReturnStmt 0x14900a710 <line:31:2, col:9>       `-IntegerLiteral 0x14900a6f0 <col:9> 'int' 0 ","20508":"`-FunctionDecl 0x12a928378  line:1:5 invalid OCSP_request_verify 'int (int *, int (*)())'   |-ParmVarDecl 0x12a928128 <col:25, col:39> col:39 invalid req 'int *'   |-ParmVarDecl 0x12a928250 <col:44, <invalid sloc>> col:44 invalid STACK_OF 'int (*)()'   `-CompoundStmt 0x12a942670 <line:3:1, line:35:1>     |-DeclStmt 0x12a9284c8 <line:5:5, col:24>     | `-VarDecl 0x12a928460 <col:5, col:22> col:22 referenced invalid nm 'const int *'     |-DeclStmt 0x12a928578 <line:7:5, col:12>     | `-VarDecl 0x12a928510 <col:5, col:9> col:9 used ret 'int'     |-IfStmt 0x12a9418a0 <line:9:5, line:12:5>     | |-UnaryOperator 0x12a928610 <line:9:9, col:15> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12a9285f8 <col:10, col:15> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x12a9285b0 <col:10, col:15> '<dependent type>' contains-errors lvalue ->optionalSignature     | |     `-RecoveryExpr 0x12a928590 <col:10> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12a941880 <col:34, line:12:5>     |   |-CallExpr 0x12a941820 <line:10:9, col:58> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12a928750 <col:9> 'int ()' Function 0x12a928698 'ERR_raise' 'int ()'     |   | |-RecoveryExpr 0x12a9287d0 <col:19> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x12a941800 <col:33> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x12a941870 <line:11:9, col:16>     |     `-IntegerLiteral 0x12a941850 <col:16> 'int' 0     |-IfStmt 0x12a941cc8 <line:14:5, line:17:5>     | |-BinaryOperator 0x12a941b68 <line:14:9, col:30> 'int' contains-errors '||'     | | |-UnaryOperator 0x12a941aa8 <col:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x12a941a90 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-RecoveryExpr 0x12a941a70 <col:10> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x12a941b48 <col:17, col:30> 'int' contains-errors '!='     | |   |-CXXDependentScopeMemberExpr 0x12a941ae0 <col:17, col:22> '<dependent type>' contains-errors lvalue ->type     | |   | `-RecoveryExpr 0x12a941ac0 <col:17> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x12a941b28 <col:30> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12a941ca8 <col:43, line:17:5>     |   |-CallExpr 0x12a941c48 <line:15:9, col:70> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12a941b88 <col:9> 'int ()' Function 0x12a928698 'ERR_raise' 'int ()'     |   | |-RecoveryExpr 0x12a941c08 <col:19> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x12a941c28 <col:33> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x12a941c98 <line:16:9, col:16>     |     `-IntegerLiteral 0x12a941c78 <col:16> 'int' 0     |-BinaryOperator 0x12a941ea8 <line:18:5, col:17> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12a941d08 <col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12a941ce8 <col:5> 'const int *' lvalue Var 0x12a928460 'nm' 'const int *'     | `-CXXDependentScopeMemberExpr 0x12a941e60 <col:10, col:17> '<dependent type>' contains-errors lvalue .directoryName     |   `-CXXDependentScopeMemberExpr 0x12a941e18 <col:10, col:15> '<dependent type>' contains-errors lvalue ->d     |     `-RecoveryExpr 0x12a941df8 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12a942108 <line:20:5, line:23:5>     | |-BinaryOperator 0x12a942080 <line:20:9, col:16> 'int' '<='     | | |-ImplicitCastExpr 0x12a942068 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x12a942028 <col:9> 'int' lvalue Var 0x12a928510 'ret' 'int'     | | `-IntegerLiteral 0x12a942048 <col:16> 'int' 0     | `-CompoundStmt 0x12a9420f0 <col:19, line:23:5>     |   `-ReturnStmt 0x12a9420e0 <line:22:9, col:16>     |     `-IntegerLiteral 0x12a9420c0 <col:16> 'int' 0     |-IfStmt 0x12a9423b0 <line:27:5, line:28:16>     | |-RecoveryExpr 0x12a942360 <line:27:9, col:58> '_Bool' contains-errors     | `-ReturnStmt 0x12a9423a0 <line:28:9, col:16>     |   `-IntegerLiteral 0x12a942380 <col:16> 'int' 0     `-IfStmt 0x12a942440 <line:29:5, line:30:16>       |-RecoveryExpr 0x12a9423f0 <line:29:9, col:36> '_Bool' contains-errors       `-ReturnStmt 0x12a942430 <line:30:9, col:16>         `-IntegerLiteral 0x12a942410 <col:16> 'int' 1 ","21069":"`-FunctionDecl 0x14c128318  line:1:12 invalid set_register 'int (int *, int, int)' static   |-ParmVarDecl 0x14c128128 <col:25, col:36> col:36 invalid pegasus 'int *'   |-ParmVarDecl 0x14c1281a8 <col:45, col:51> col:51 invalid indx 'int'   |-ParmVarDecl 0x14c128228 <col:57, col:62> col:62 invalid data 'int'   `-CompoundStmt 0x14c141ee8 <line:2:1, line:12:1>     |-DeclStmt 0x14c128458 <line:3:2, col:9>     | `-VarDecl 0x14c1283f0 <col:2, col:6> col:6 used ret 'int'     |-BinaryOperator 0x14c141a48 <line:5:2, line:7:30> 'int' contains-errors '='     | |-DeclRefExpr 0x14c128470 <line:5:2> 'int' lvalue Var 0x14c1283f0 'ret' 'int'     | `-CallExpr 0x14c1419e0 <col:8, line:7:30> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14c1285f0 <line:5:8> 'int ()' Function 0x14c128538 'usb_control_msg' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x14c128630 <col:24, col:33> '<dependent type>' contains-errors lvalue ->usb     |   | `-RecoveryExpr 0x14c128610 <col:24> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x14c141800 <col:38, col:69> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14c128758 <col:38> 'int ()' Function 0x14c1286a0 'usb_sndctrlpipe' 'int ()'     |   | |-CXXDependentScopeMemberExpr 0x14c128798 <col:54, col:63> '<dependent type>' contains-errors lvalue ->usb     |   | | `-RecoveryExpr 0x14c128778 <col:54> '<dependent type>' contains-errors lvalue     |   | `-IntegerLiteral 0x14c1287e0 <col:68> 'int' 0     |   |-RecoveryExpr 0x14c1419a0 <line:6:10> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x14c1419c0 <col:31> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x14c141860 <col:51> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x14c141880 <line:7:10> '<dependent type>' contains-errors lvalue     |   |-UnaryOperator 0x14c1418c0 <col:16, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x14c1418a0 <col:17> '<dependent type>' contains-errors lvalue     |   |-IntegerLiteral 0x14c1418d8 <col:23> 'int' 1     |   `-IntegerLiteral 0x14c1418f8 <col:26> 'int' 1000     |-IfStmt 0x14c141e80 <line:8:2, line:10:26>     | |-BinaryOperator 0x14c141ac0 <line:8:6, col:12> 'int' '<'     | | |-ImplicitCastExpr 0x14c141aa8 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x14c141a68 <col:6> 'int' lvalue Var 0x14c1283f0 'ret' 'int'     | | `-IntegerLiteral 0x14c141a88 <col:12> 'int' 0     | `-CallExpr 0x14c141e30 <line:9:3, line:10:26> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14c141bc0 <line:9:3> 'int ()' Function 0x14c141b08 'netif_dbg' 'int ()'     |   |-RecoveryExpr 0x14c141be0 <col:13> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x14c141e10 <col:22> '<dependent type>' contains-errors lvalue     |   |-CXXDependentScopeMemberExpr 0x14c141c38 <col:27, col:36> '<dependent type>' contains-errors lvalue ->net     |   | `-RecoveryExpr 0x14c141c18 <col:27> '<dependent type>' contains-errors lvalue     |   |-StringLiteral 0x14c141cc0 <line:10:6> 'char[4]' lvalue \"STR\"     |   |-PredefinedExpr 0x14c141d88 <col:13> 'const char[13]' lvalue __func__     |   | `-StringLiteral 0x14c141d60 <col:13> 'const char[13]' lvalue \"set_register\"     |   `-DeclRefExpr 0x14c141da0 <col:23> 'int' lvalue Var 0x14c1283f0 'ret' 'int'     `-ReturnStmt 0x14c141ed8 <line:11:2, col:9>       `-ImplicitCastExpr 0x14c141ec0 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x14c141ea0 <col:9> 'int' lvalue Var 0x14c1283f0 'ret' 'int' ","20272":"`-FunctionDecl 0x13600de08  line:1:15 invalid createActivation 'int (const int)'   |-ParmVarDecl 0x13600dcf0 <col:32, <invalid sloc>> col:48 invalid 'const int'   `-CompoundStmt 0x136027800 <line:4:83, line:18:1>     |-DeclStmt 0x13600df70 <line:5:3, col:24>     | `-VarDecl 0x13600ded0 <col:3, col:21> col:8 used activation 'int' auto cinit     |   `-RecoveryExpr 0x13600df50 <col:21> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1360277f0 <line:17:3, col:10>       `-ImplicitCastExpr 0x1360277d8 <col:10> 'int' contains-errors <LValueToRValue>         `-DeclRefExpr 0x1360277b8 <col:10> 'int' contains-errors lvalue Var 0x13600ded0 'activation' 'int' ","20880":"`-FunctionDecl 0x12d026748  line:1:5 btrfs_scrub_cancel_dev 'int (struct btrfs_fs_info *, struct btrfs_device *)'   |-ParmVarDecl 0x12d00e248 <col:28, col:50> col:50 used fs_info 'struct btrfs_fs_info *'   |-ParmVarDecl 0x12d026628 <line:2:7, col:28> col:28 used dev 'struct btrfs_device *'   `-CompoundStmt 0x12d029310 <line:3:1, line:22:1>     |-DeclStmt 0x12d026a38 <line:4:2, col:24>     | |-RecordDecl 0x12d026848 <col:2, col:9> col:9 struct scrub_ctx     | `-VarDecl 0x12d0269b8 <col:2, col:20> col:20 used sctx 'struct scrub_ctx *'     |-CallExpr 0x12d026c18 <line:6:2, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d026b80 <col:2> 'int ()' Function 0x12d026ac8 'mutex_lock' 'int ()'     | `-UnaryOperator 0x12d026c00 <col:13, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12d026bd8 <col:14, col:23> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12d026ba0 <col:14> 'struct btrfs_fs_info *' lvalue ParmVar 0x12d00e248 'fs_info' 'struct btrfs_fs_info *'     |-BinaryOperator 0x12d026cc0 <line:7:2, col:14> 'struct scrub_ctx *' contains-errors '='     | |-DeclRefExpr 0x12d026c40 <col:2> 'struct scrub_ctx *' lvalue Var 0x12d0269b8 'sctx' 'struct scrub_ctx *'     | `-RecoveryExpr 0x12d026c98 <col:9, col:14> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12d026c60 <col:9> 'struct btrfs_device *' lvalue ParmVar 0x12d026628 'dev' 'struct btrfs_device *'     |-IfStmt 0x12d026f98 <line:8:2, line:11:2>     | |-UnaryOperator 0x12d026d18 <line:8:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12d026d00 <col:7> 'struct scrub_ctx *' <LValueToRValue>     | |   `-DeclRefExpr 0x12d026ce0 <col:7> 'struct scrub_ctx *' lvalue Var 0x12d0269b8 'sctx' 'struct scrub_ctx *'     | `-CompoundStmt 0x12d026f78 <col:13, line:11:2>     |   |-CallExpr 0x12d026ea8 <line:9:3, col:36> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12d026e10 <col:3> 'int ()' Function 0x12d026d58 'mutex_unlock' 'int ()'     |   | `-UnaryOperator 0x12d026e90 <col:16, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x12d026e68 <col:17, col:26> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x12d026e30 <col:17> 'struct btrfs_fs_info *' lvalue ParmVar 0x12d00e248 'fs_info' 'struct btrfs_fs_info *'     |   `-ReturnStmt 0x12d026f68 <line:10:3, col:11>     |     `-UnaryOperator 0x12d026f50 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x12d026f38 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x12d026f18 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12d027130 <line:12:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d027098 <col:2> 'int ()' Function 0x12d026fe0 'atomic_inc' 'int ()'     | `-UnaryOperator 0x12d027118 <col:13, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12d0270f0 <col:14, col:20> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12d0270b8 <col:14> 'struct scrub_ctx *' lvalue Var 0x12d0269b8 'sctx' 'struct scrub_ctx *'     |-WhileStmt 0x12d029200 <line:13:2, line:18:2>     | |-RecoveryExpr 0x12d027190 <line:13:9, col:14> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12d027158 <col:9> 'struct btrfs_device *' lvalue ParmVar 0x12d026628 'dev' 'struct btrfs_device *'     | `-CompoundStmt 0x12d0275d0 <col:25, line:18:2>     |   |-CallExpr 0x12d027250 <line:14:3, col:36> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12d0271b8 <col:3> 'int ()' Function 0x12d026d58 'mutex_unlock' 'int ()'     |   | `-UnaryOperator 0x12d027238 <col:16, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x12d027210 <col:17, col:26> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x12d0271d8 <col:17> 'struct btrfs_fs_info *' lvalue ParmVar 0x12d00e248 'fs_info' 'struct btrfs_fs_info *'     |   |-CallExpr 0x12d0274e0 <line:15:3, line:16:29> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12d027358 <line:15:3> 'int ()' Function 0x12d0272a0 'wait_event' 'int ()'     |   | |-RecoveryExpr 0x12d0273b0 <col:14, col:23> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x12d027378 <col:14> 'struct btrfs_fs_info *' lvalue ParmVar 0x12d00e248 'fs_info' 'struct btrfs_fs_info *'     |   | `-BinaryOperator 0x12d0274c0 <line:16:7, col:25> 'int' contains-errors '=='     |   |   |-RecoveryExpr 0x12d027410 <col:7, col:12> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x12d0273d8 <col:7> 'struct btrfs_device *' lvalue ParmVar 0x12d026628 'dev' 'struct btrfs_device *'     |   |   `-RecoveryExpr 0x12d0274a0 <col:25> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x12d0275a8 <line:17:3, col:34> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12d027510 <col:3> 'int ()' Function 0x12d026ac8 'mutex_lock' 'int ()'     |     `-UnaryOperator 0x12d027590 <col:14, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x12d027568 <col:15, col:24> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x12d027530 <col:15> 'struct btrfs_fs_info *' lvalue ParmVar 0x12d00e248 'fs_info' 'struct btrfs_fs_info *'     |-CallExpr 0x12d0292b8 <line:19:2, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d029220 <col:2> 'int ()' Function 0x12d026d58 'mutex_unlock' 'int ()'     | `-UnaryOperator 0x12d0292a0 <col:15, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12d029278 <col:16, col:25> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12d029240 <col:16> 'struct btrfs_fs_info *' lvalue ParmVar 0x12d00e248 'fs_info' 'struct btrfs_fs_info *'     `-ReturnStmt 0x12d029300 <line:21:2, col:9>       `-IntegerLiteral 0x12d0292e0 <col:9> 'int' 0 ","21001":"`-FunctionDecl 0x14a81bee8  col:9 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x14a81bfe8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x14a81c050 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x14a81c0b8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14a81bf90 <<invalid sloc>> Implicit 882 ","20370":"`-FunctionDecl 0x1381281f8  line:1:1 invalid gsm_xsmp_client_disconnect 'int (int *)'   |-ParmVarDecl 0x138128128 <col:29, col:44> col:44 invalid client 'int *'   `-CompoundStmt 0x138142190 <line:2:1, line:19:1>     |-IfStmt 0x138128600 <line:3:9, line:5:9>     | |-BinaryOperator 0x138128378 <line:3:13, col:38> 'int' contains-errors '>'     | | |-CXXDependentScopeMemberExpr 0x138128310 <col:13, col:27> '<dependent type>' contains-errors lvalue ->watch_id     | | | `-CXXDependentScopeMemberExpr 0x1381282c8 <col:13, col:21> '<dependent type>' contains-errors lvalue ->priv     | | |   `-RecoveryExpr 0x1381282a8 <col:13> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x138128358 <col:38> 'int' 0     | `-CompoundStmt 0x1381285e8 <col:41, line:5:9>     |   `-CallExpr 0x1381285c0 <line:4:17, col:56> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1381284f0 <col:17> 'int ()' Function 0x138128438 'g_source_remove' 'int ()'     |     `-CXXDependentScopeMemberExpr 0x138128578 <col:34, col:48> '<dependent type>' contains-errors lvalue ->watch_id     |       `-CXXDependentScopeMemberExpr 0x138128530 <col:34, col:42> '<dependent type>' contains-errors lvalue ->priv     |         `-RecoveryExpr 0x138128510 <col:34> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1381419c8 <line:7:9, line:9:9>     | |-BinaryOperator 0x138128728 <line:7:13, col:35> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x138128688 <col:13, col:27> '<dependent type>' contains-errors lvalue ->conn     | | | `-CXXDependentScopeMemberExpr 0x138128640 <col:13, col:21> '<dependent type>' contains-errors lvalue ->priv     | | |   `-RecoveryExpr 0x138128620 <col:13> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x138128708 <col:35> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1381419b0 <col:41, line:9:9>     |   `-CallExpr 0x138141988 <line:8:17, col:47> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1381418b8 <col:17> 'int ()' Function 0x138141800 'SmsCleanUp' 'int ()'     |     `-CXXDependentScopeMemberExpr 0x138141940 <col:29, col:43> '<dependent type>' contains-errors lvalue ->conn     |       `-CXXDependentScopeMemberExpr 0x1381418f8 <col:29, col:37> '<dependent type>' contains-errors lvalue ->priv     |         `-RecoveryExpr 0x1381418d8 <col:29> '<dependent type>' contains-errors lvalue     |-IfStmt 0x138141f50 <line:11:9, line:14:9>     | |-BinaryOperator 0x138141af0 <line:11:13, col:45> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x138141a50 <col:13, col:27> '<dependent type>' contains-errors lvalue ->ice_connection     | | | `-CXXDependentScopeMemberExpr 0x138141a08 <col:13, col:21> '<dependent type>' contains-errors lvalue ->priv     | | |   `-RecoveryExpr 0x1381419e8 <col:13> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x138141ad0 <col:45> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x138141f30 <col:51, line:14:9>     |   |-CallExpr 0x138141d28 <line:12:17, col:79> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x138141bf0 <col:17> 'int ()' Function 0x138141b38 'IceSetShutdownNegotiation' 'int ()'     |   | |-CXXDependentScopeMemberExpr 0x138141c78 <col:44, col:58> '<dependent type>' contains-errors lvalue ->ice_connection     |   | | `-CXXDependentScopeMemberExpr 0x138141c30 <col:44, col:52> '<dependent type>' contains-errors lvalue ->priv     |   | |   `-RecoveryExpr 0x138141c10 <col:44> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x138141d08 <col:74> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x138141f08 <line:13:17, col:65> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x138141e38 <col:17> 'int ()' Function 0x138141d80 'IceCloseConnection' 'int ()'     |     `-CXXDependentScopeMemberExpr 0x138141ec0 <col:37, col:51> '<dependent type>' contains-errors lvalue ->ice_connection     |       `-CXXDependentScopeMemberExpr 0x138141e78 <col:37, col:45> '<dependent type>' contains-errors lvalue ->priv     |         `-RecoveryExpr 0x138141e58 <col:37> '<dependent type>' contains-errors lvalue     `-IfStmt 0x138142170 <line:16:9, line:18:9>       |-BinaryOperator 0x138142040 <line:16:13, col:46> 'int' contains-errors '>'       | |-CXXDependentScopeMemberExpr 0x138141fd8 <col:13, col:27> '<dependent type>' contains-errors lvalue ->protocol_timeout       | | `-CXXDependentScopeMemberExpr 0x138141f90 <col:13, col:21> '<dependent type>' contains-errors lvalue ->priv       | |   `-RecoveryExpr 0x138141f70 <col:13> '<dependent type>' contains-errors lvalue       | `-IntegerLiteral 0x138142020 <col:46> 'int' 0       `-CompoundStmt 0x138142158 <col:49, line:18:9>         `-CallExpr 0x138142130 <line:17:17, col:64> '<dependent type>' contains-errors           |-DeclRefExpr 0x138142060 <col:17> 'int ()' Function 0x138128438 'g_source_remove' 'int ()'           `-CXXDependentScopeMemberExpr 0x1381420e8 <col:34, col:48> '<dependent type>' contains-errors lvalue ->protocol_timeout             `-CXXDependentScopeMemberExpr 0x1381420a0 <col:34, col:42> '<dependent type>' contains-errors lvalue ->priv               `-RecoveryExpr 0x138142080 <col:34> '<dependent type>' contains-errors lvalue ","21045":"`-FunctionDecl 0x14b943bb8  col:4 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x14b943cb8 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x14b943c60 <<invalid sloc>> Implicit 873 ","21098":"`-FunctionDecl 0x15980de88  line:1:5 invalid mempool_getbuffer_size 'int (int, int *)'   |-ParmVarDecl 0x15980dcf0 <col:28, col:45> col:45 invalid handle 'int'   |-ParmVarDecl 0x15980dda8 <col:53, col:61> col:61 invalid buffer_size 'int *'   `-CompoundStmt 0x159828c98 <col:74, line:9:1>     |-DeclStmt 0x15980e1f8 <line:2:3, col:50>     | |-RecordDecl 0x15980df40 <col:3, col:10> col:10 struct mempool     | `-VarDecl 0x15980e0a8 <col:3, col:44> col:19 used pool 'struct mempool *' cinit     |   `-CStyleCastExpr 0x15980e1b8 <col:26, col:44> 'struct mempool *' contains-errors <Dependent>     |     `-RecoveryExpr 0x15980e110 <col:44> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15980e340 <line:4:3, line:6:3>     | |-RecoveryExpr 0x15980e2c0 <line:4:7, col:45> '_Bool' contains-errors     | `-CompoundStmt 0x15980e328 <col:48, line:6:3>     |   `-ReturnStmt 0x15980e318 <line:5:5, col:12>     |     `-RecoveryExpr 0x15980e2f8 <col:12> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x159828c48 <line:7:3, col:24> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x15980e398 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x15980e380 <col:4> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x15980e360 <col:4> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x159828c20 <col:18, col:24> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x15980e3b0 <col:18> 'struct mempool *' contains-errors lvalue Var 0x15980e0a8 'pool' 'struct mempool *'     `-ReturnStmt 0x159828c88 <line:8:3, col:10>       `-IntegerLiteral 0x159828c68 <col:10> 'int' 0 ","21206":"`-FunctionDecl 0x130143c68  col:50 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x130143d68 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x130143d10 <<invalid sloc>> Implicit 902 ","20885":"`-FunctionDecl 0x14400de80  line:1:6 invalid ntlm_print_message_fields 'void (int *, const char *)'   |-ParmVarDecl 0x14400dd28 <col:32, col:53> col:53 invalid fields 'int *'   |-ParmVarDecl 0x14400dda8 <col:61, col:73> col:73 used name 'const char *'   `-CompoundStmt 0x144027ae0 <line:2:1, line:8:1>     |-CallExpr 0x14400e2f8 <line:3:2, line:4:66> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14400e090 <line:3:2> 'int ()' Function 0x14400dfd8 'WLog_DBG' 'int ()'     | |-RecoveryExpr 0x14400e2d8 <col:11> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x14400e110 <col:16> 'char[4]' lvalue \"STR\"     | |-DeclRefExpr 0x14400e130 <line:4:11> 'const char *' lvalue ParmVar 0x14400dda8 'name' 'const char *'     | |-CXXDependentScopeMemberExpr 0x14400e170 <col:17, col:25> '<dependent type>' contains-errors lvalue ->Len     | | `-RecoveryExpr 0x14400e150 <col:17> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x14400e1d8 <col:30, col:38> '<dependent type>' contains-errors lvalue ->MaxLen     | | `-RecoveryExpr 0x14400e1b8 <col:30> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x14400e240 <col:46, col:54> '<dependent type>' contains-errors lvalue ->BufferOffset     |   `-RecoveryExpr 0x14400e220 <col:46> '<dependent type>' contains-errors lvalue     `-IfStmt 0x144027ac0 <line:6:2, line:7:61>       |-BinaryOperator 0x14400e3d0 <line:6:6, col:20> 'int' contains-errors '>'       | |-CXXDependentScopeMemberExpr 0x14400e368 <col:6, col:14> '<dependent type>' contains-errors lvalue ->Len       | | `-RecoveryExpr 0x14400e348 <col:6> '<dependent type>' contains-errors lvalue       | `-IntegerLiteral 0x14400e3b0 <col:20> 'int' 0       `-CallExpr 0x144027a80 <line:7:3, col:61> '<dependent type>' contains-errors         |-DeclRefExpr 0x1440278e0 <col:3> 'int ()' Function 0x144027828 'winpr_HexDump' 'int ()'         |-RecoveryExpr 0x144027a40 <col:17> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x144027a60 <col:22> '<dependent type>' contains-errors lvalue         |-CXXDependentScopeMemberExpr 0x144027950 <col:34, col:42> '<dependent type>' contains-errors lvalue ->Buffer         | `-RecoveryExpr 0x144027930 <col:34> '<dependent type>' contains-errors lvalue         `-CXXDependentScopeMemberExpr 0x1440279b8 <col:50, col:58> '<dependent type>' contains-errors lvalue ->Len           `-RecoveryExpr 0x144027998 <col:50> '<dependent type>' contains-errors lvalue ","20717":"`-FunctionDecl 0x1249281f8  line:1:14 invalid token 'char *(int *)' static   |-ParmVarDecl 0x124928128 <col:20, col:26> col:26 invalid stream 'int *'   `-CompoundStmt 0x124942608 <line:2:1, line:24:1>     |-DeclStmt 0x1249283c0 <line:3:5, col:16>     | |-VarDecl 0x1249282c0 <col:5, col:9> col:9 used ch 'int'     | `-VarDecl 0x124928340 <col:5, col:13> col:13 used idx 'int'     |-WhileStmt 0x1249419c8 <line:6:5, line:7:50>     | |-BinaryOperator 0x1249419a0 <line:6:12, line:7:46> 'int' contains-errors '||'     | | |-BinaryOperator 0x124941948 <line:6:12, line:7:32> 'int' contains-errors '||'     | | | |-BinaryOperator 0x1249418f0 <line:6:12, line:7:19> 'int' contains-errors '||'     | | | | |-BinaryOperator 0x124941898 <line:6:12, col:49> 'int' contains-errors '||'     | | | | | |-BinaryOperator 0x124928610 <col:12, col:36> 'int' contains-errors '=='     | | | | | | |-ParenExpr 0x1249285d8 <col:12, col:31> 'int' contains-errors     | | | | | | | `-BinaryOperator 0x1249285b8 <col:13, col:30> 'int' contains-errors '='     | | | | | | |   |-DeclRefExpr 0x1249283d8 <col:13> 'int' lvalue Var 0x1249282c0 'ch' 'int'     | | | | | | |   `-CallExpr 0x124928590 <col:18, col:30> '<dependent type>' contains-errors     | | | | | | |     |-DeclRefExpr 0x124928550 <col:18> 'int ()' Function 0x124928498 'fgetc' 'int ()'     | | | | | | |     `-RecoveryExpr 0x124928570 <col:24> '<dependent type>' contains-errors lvalue     | | | | | | `-CharacterLiteral 0x1249285f8 <col:36> 'int' 32     | | | | | `-BinaryOperator 0x124941878 <col:43, col:49> 'int' contains-errors '=='     | | | | |   |-DeclRefExpr 0x124928630 <col:43> 'int' lvalue Var 0x1249282c0 'ch' 'int'     | | | | |   `-RecoveryExpr 0x124941858 <col:49> '<dependent type>' contains-errors lvalue     | | | | `-BinaryOperator 0x1249418d0 <line:7:13, col:19> 'int' '=='     | | | |   |-ImplicitCastExpr 0x1249418b8 <col:13> 'int' <LValueToRValue>     | | | |   | `-DeclRefExpr 0x1249286a8 <col:13> 'int' lvalue Var 0x1249282c0 'ch' 'int'     | | | |   `-CharacterLiteral 0x1249286c8 <col:19> 'int' 44     | | | `-BinaryOperator 0x124941928 <col:26, col:32> 'int' '=='     | | |   |-ImplicitCastExpr 0x124941910 <col:26> 'int' <LValueToRValue>     | | |   | `-DeclRefExpr 0x124928738 <col:26> 'int' lvalue Var 0x1249282c0 'ch' 'int'     | | |   `-CharacterLiteral 0x124928758 <col:32> 'int' 9     | | `-BinaryOperator 0x124941980 <col:40, col:46> 'int' '=='     | |   |-ImplicitCastExpr 0x124941968 <col:40> 'int' <LValueToRValue>     | |   | `-DeclRefExpr 0x1249287c8 <col:40> 'int' lvalue Var 0x1249282c0 'ch' 'int'     | |   `-CharacterLiteral 0x1249287e8 <col:46> 'int' 59     | `-NullStmt 0x1249419c0 <col:50>     |-BinaryOperator 0x124941a28 <line:9:5, col:11> 'int' '='     | |-DeclRefExpr 0x1249419e8 <col:5> 'int' lvalue Var 0x124928340 'idx' 'int'     | `-IntegerLiteral 0x124941a08 <col:11> 'int' 0     |-WhileStmt 0x124942070 <line:10:5, line:15:5>     | |-BinaryOperator 0x124941f38 <line:10:12, line:11:48> 'int' contains-errors '&&'     | | |-BinaryOperator 0x124941ee0 <line:10:12, line:11:35> 'int' contains-errors '&&'     | | | |-BinaryOperator 0x124941e88 <line:10:12, line:11:21> 'int' contains-errors '&&'     | | | | |-BinaryOperator 0x124941e30 <line:10:12, col:44> 'int' contains-errors '&&'     | | | | | |-BinaryOperator 0x124941dd0 <col:12, col:31> 'int' contains-errors '&&'     | | | | | | |-BinaryOperator 0x124941d78 <col:12, col:18> 'int' contains-errors '!='     | | | | | | | |-DeclRefExpr 0x124941a48 <col:12> 'int' lvalue Var 0x1249282c0 'ch' 'int'     | | | | | | | `-RecoveryExpr 0x124941d58 <col:18> '<dependent type>' contains-errors lvalue     | | | | | | `-BinaryOperator 0x124941db0 <col:25, col:31> 'int' '!='     | | | | | |   |-ImplicitCastExpr 0x124941d98 <col:25> 'int' <LValueToRValue>     | | | | | |   | `-DeclRefExpr 0x124941aa0 <col:25> 'int' lvalue Var 0x1249282c0 'ch' 'int'     | | | | | |   `-CharacterLiteral 0x124941ac0 <col:31> 'int' 32     | | | | | `-BinaryOperator 0x124941e10 <col:38, col:44> 'int' contains-errors '!='     | | | | |   |-DeclRefExpr 0x124941b30 <col:38> 'int' lvalue Var 0x1249282c0 'ch' 'int'     | | | | |   `-RecoveryExpr 0x124941df0 <col:44> '<dependent type>' contains-errors lvalue     | | | | `-BinaryOperator 0x124941e68 <line:11:15, col:21> 'int' '!='     | | | |   |-ImplicitCastExpr 0x124941e50 <col:15> 'int' <LValueToRValue>     | | | |   | `-DeclRefExpr 0x124941ba8 <col:15> 'int' lvalue Var 0x1249282c0 'ch' 'int'     | | | |   `-CharacterLiteral 0x124941bc8 <col:21> 'int' 9     | | | `-BinaryOperator 0x124941ec0 <col:29, col:35> 'int' '!='     | | |   |-ImplicitCastExpr 0x124941ea8 <col:29> 'int' <LValueToRValue>     | | |   | `-DeclRefExpr 0x124941c38 <col:29> 'int' lvalue Var 0x1249282c0 'ch' 'int'     | | |   `-CharacterLiteral 0x124941c58 <col:35> 'int' 58     | | `-BinaryOperator 0x124941f18 <col:42, col:48> 'int' '!='     | |   |-ImplicitCastExpr 0x124941f00 <col:42> 'int' <LValueToRValue>     | |   | `-DeclRefExpr 0x124941cc8 <col:42> 'int' lvalue Var 0x1249282c0 'ch' 'int'     | |   `-CharacterLiteral 0x124941ce8 <col:48> 'int' 59     | `-CompoundStmt 0x124942058 <line:12:5, line:15:5>     |   `-BinaryOperator 0x124942038 <line:14:9, col:26> 'int' contains-errors '='     |     |-DeclRefExpr 0x124941fb0 <col:9> 'int' lvalue Var 0x1249282c0 'ch' 'int'     |     `-CallExpr 0x124942010 <col:14, col:26> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x124941fd0 <col:14> 'int ()' Function 0x124928498 'fgetc' 'int ()'     |       `-RecoveryExpr 0x124941ff0 <col:20> '<dependent type>' contains-errors lvalue     `-IfStmt 0x1249424c0 <line:18:5, col:50>       |-BinaryOperator 0x124942330 <col:9, col:27> 'int' '&&'       | |-BinaryOperator 0x1249422a0 <col:9, col:16> 'int' '>='       | | |-ImplicitCastExpr 0x124942288 <col:9> 'int' <LValueToRValue>       | | | `-DeclRefExpr 0x124942248 <col:9> 'int' lvalue Var 0x124928340 'idx' 'int'       | | `-IntegerLiteral 0x124942268 <col:16> 'int' 1       | `-BinaryOperator 0x124942310 <col:21, col:27> 'int' '!='       |   |-ImplicitCastExpr 0x1249422f8 <col:21> 'int' <LValueToRValue>       |   | `-DeclRefExpr 0x1249422c0 <col:21> 'int' lvalue Var 0x1249282c0 'ch' 'int'       |   `-CharacterLiteral 0x1249422e0 <col:27> 'int' 58       `-CallExpr 0x124942490 <col:33, col:50> '<dependent type>' contains-errors         |-DeclRefExpr 0x124942430 <col:33> 'int ()' Function 0x124942378 'ungetc' 'int ()'         |-DeclRefExpr 0x124942450 <col:40> 'int' lvalue Var 0x1249282c0 'ch' 'int'         `-RecoveryExpr 0x124942470 <col:44> '<dependent type>' contains-errors lvalue ","21230":"`-FunctionDecl 0x141061ac8  line:1:12 invalid kvm_s390_get_cmma 'int (struct kvm *, struct kvm_s390_cmma_log *, int *, unsigned long)' static   |-ParmVarDecl 0x141045a48 <col:30, col:42> col:42 used kvm 'struct kvm *'   |-ParmVarDecl 0x141061828 <col:47, col:73> col:73 used args 'struct kvm_s390_cmma_log *'   |-ParmVarDecl 0x1410618f8 <line:2:9, col:13> col:13 referenced invalid res 'int *'   |-ParmVarDecl 0x141061978 <col:18, col:32> col:32 used bufsize 'unsigned long'   `-CompoundStmt 0x141066070 <line:3:1, line:47:1>     |-DeclStmt 0x141061e40 <line:4:2, col:55>     | |-VarDecl 0x141061ba8 <col:2, col:16> col:16 used mem_end 'unsigned long'     | |-VarDecl 0x141061c28 <col:2, col:25> col:25 used cur_gfn 'unsigned long'     | |-VarDecl 0x141061ca8 <col:2, col:34> col:34 used next_gfn 'unsigned long'     | |-VarDecl 0x141061d28 <col:2, col:44> col:44 used hva 'unsigned long'     | `-VarDecl 0x141061da8 <col:2, col:49> col:49 used pgstev 'unsigned long'     |-DeclStmt 0x141062288 <line:5:2, col:48>     | |-RecordDecl 0x141061e58 <col:2, col:9> col:9 struct kvm_memslots     | `-VarDecl 0x141061fc8 <col:2, col:47> col:23 used slots 'struct kvm_memslots *' cinit     |   `-ImplicitCastExpr 0x141062258 <col:31, col:47> 'struct kvm_memslots *' <IntegralToPointer>     |     `-CallExpr 0x141062218 <col:31, col:47> 'int'     |       |-ImplicitCastExpr 0x141062200 <col:31> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x141062190 <col:31> 'int ()' Function 0x1410620d8 'kvm_memslots' 'int ()'     |       `-ImplicitCastExpr 0x141062240 <col:44> 'struct kvm *' <LValueToRValue>     |         `-DeclRefExpr 0x1410621b0 <col:44> 'struct kvm *' lvalue ParmVar 0x141045a48 'kvm' 'struct kvm *'     |-DeclStmt 0x141062488 <line:6:2, col:28>     | |-RecordDecl 0x1410622a0 <col:2, col:9> col:9 struct kvm_memory_slot     | `-VarDecl 0x141062408 <col:2, col:26> col:26 used ms 'struct kvm_memory_slot *'     |-BinaryOperator 0x141062670 <line:8:2, col:59> 'unsigned long' contains-errors '='     | |-DeclRefExpr 0x1410624a0 <col:2> 'unsigned long' lvalue Var 0x141061c28 'cur_gfn' 'unsigned long'     | `-CallExpr 0x141062640 <col:12, col:59> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1410625a0 <col:12> 'int ()' Function 0x1410624e8 'kvm_s390_next_dirty_cmma' 'int ()'     |   |-DeclRefExpr 0x1410625c0 <col:37> 'struct kvm_memslots *' lvalue Var 0x141061fc8 'slots' 'struct kvm_memslots *'     |   `-RecoveryExpr 0x141062618 <col:44, col:50> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1410625e0 <col:44> 'struct kvm_s390_cmma_log *' lvalue ParmVar 0x141061828 'args' 'struct kvm_s390_cmma_log *'     |-BinaryOperator 0x141063c90 <line:9:2, col:34> 'struct kvm_memory_slot *' '='     | |-DeclRefExpr 0x141062690 <col:2> 'struct kvm_memory_slot *' lvalue Var 0x141062408 'ms' 'struct kvm_memory_slot *'     | `-ImplicitCastExpr 0x141063c78 <col:7, col:34> 'struct kvm_memory_slot *' <IntegralToPointer>     |   `-CallExpr 0x141063c18 <col:7, col:34> 'int'     |     |-ImplicitCastExpr 0x141063c00 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x141062790 <col:7> 'int ()' Function 0x1410626d8 'gfn_to_memslot' 'int ()'     |     |-ImplicitCastExpr 0x141063c48 <col:22> 'struct kvm *' <LValueToRValue>     |     | `-DeclRefExpr 0x1410627b0 <col:22> 'struct kvm *' lvalue ParmVar 0x141045a48 'kvm' 'struct kvm *'     |     `-ImplicitCastExpr 0x141063c60 <col:27> 'unsigned long' <LValueToRValue>     |       `-DeclRefExpr 0x1410627d0 <col:27> 'unsigned long' lvalue Var 0x141061c28 'cur_gfn' 'unsigned long'     |-BinaryOperator 0x141063d30 <line:10:2, col:16> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x141063ce8 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x141063cb0 <col:2> 'struct kvm_s390_cmma_log *' lvalue ParmVar 0x141061828 'args' 'struct kvm_s390_cmma_log *'     | `-IntegerLiteral 0x141063d10 <col:16> 'int' 0     |-BinaryOperator 0x141063dd0 <line:11:2, col:20> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x141063d88 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x141063d50 <col:2> 'struct kvm_s390_cmma_log *' lvalue ParmVar 0x141061828 'args' 'struct kvm_s390_cmma_log *'     | `-DeclRefExpr 0x141063db0 <col:20> 'unsigned long' lvalue Var 0x141061c28 'cur_gfn' 'unsigned long'     |-IfStmt 0x141063e70 <line:12:2, line:13:10>     | |-UnaryOperator 0x141063e28 <line:12:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x141063e10 <col:7> 'struct kvm_memory_slot *' <LValueToRValue>     | |   `-DeclRefExpr 0x141063df0 <col:7> 'struct kvm_memory_slot *' lvalue Var 0x141062408 'ms' 'struct kvm_memory_slot *'     | `-ReturnStmt 0x141063e60 <line:13:3, col:10>     |   `-IntegerLiteral 0x141063e40 <col:10> 'int' 0     |-BinaryOperator 0x141063ff8 <line:14:2, col:56> 'unsigned long' '='     | |-DeclRefExpr 0x141063e90 <col:2> 'unsigned long' lvalue Var 0x141061ca8 'next_gfn' 'unsigned long'     | `-ImplicitCastExpr 0x141063fe0 <col:13, col:56> 'unsigned long' <IntegralCast>     |   `-CallExpr 0x141063f98 <col:13, col:56> 'int'     |     |-ImplicitCastExpr 0x141063f80 <col:13> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x141063eb0 <col:13> 'int ()' Function 0x1410624e8 'kvm_s390_next_dirty_cmma' 'int ()'     |     |-ImplicitCastExpr 0x141063fc8 <col:38> 'struct kvm_memslots *' <LValueToRValue>     |     | `-DeclRefExpr 0x141063ed0 <col:38> 'struct kvm_memslots *' lvalue Var 0x141061fc8 'slots' 'struct kvm_memslots *'     |     `-BinaryOperator 0x141063f60 <col:45, col:55> 'unsigned long' '+'     |       |-ImplicitCastExpr 0x141063f30 <col:45> 'unsigned long' <LValueToRValue>     |       | `-DeclRefExpr 0x141063ef0 <col:45> 'unsigned long' lvalue Var 0x141061c28 'cur_gfn' 'unsigned long'     |       `-ImplicitCastExpr 0x141063f48 <col:55> 'unsigned long' <IntegralCast>     |         `-IntegerLiteral 0x141063f10 <col:55> 'int' 1     |-BinaryOperator 0x141064258 <line:15:2, col:61> 'unsigned long' contains-errors '='     | |-DeclRefExpr 0x141064018 <col:2> 'unsigned long' lvalue Var 0x141061ba8 'mem_end' 'unsigned long'     | `-BinaryOperator 0x141064238 <col:12, col:61> '<dependent type>' contains-errors '+'     |   |-CXXDependentScopeMemberExpr 0x1410640f0 <col:12, col:31> '<dependent type>' contains-errors lvalue .base_gfn     |   | `-ArraySubscriptExpr 0x1410640d0 <col:12, col:29> '<dependent type>' contains-errors lvalue     |   |   |-ImplicitCastExpr 0x1410640b8 <col:12, col:19> '<dependent type>' contains-errors <LValueToRValue>     |   |   | `-RecoveryExpr 0x141064070 <col:12, col:19> '<dependent type>' contains-errors lvalue     |   |   |   `-DeclRefExpr 0x141064038 <col:12> 'struct kvm_memslots *' lvalue Var 0x141061fc8 'slots' 'struct kvm_memslots *'     |   |   `-IntegerLiteral 0x141064098 <col:28> 'int' 0     |   `-CXXDependentScopeMemberExpr 0x1410641f0 <col:42, col:61> '<dependent type>' contains-errors lvalue .npages     |     `-ArraySubscriptExpr 0x1410641d0 <col:42, col:59> '<dependent type>' contains-errors lvalue     |       |-ImplicitCastExpr 0x1410641b8 <col:42, col:49> '<dependent type>' contains-errors <LValueToRValue>     |       | `-RecoveryExpr 0x141064170 <col:42, col:49> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x141064138 <col:42> 'struct kvm_memslots *' lvalue Var 0x141061fc8 'slots' 'struct kvm_memslots *'     |       `-IntegerLiteral 0x141064198 <col:58> 'int' 0     |-WhileStmt 0x141066020 <line:17:2, line:45:2>     | |-BinaryOperator 0x1410642f8 <line:17:9, col:23> 'int' contains-errors '<'     | | |-RecoveryExpr 0x1410642b0 <col:9, col:15> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x141064278 <col:9> 'struct kvm_s390_cmma_log *' lvalue ParmVar 0x141061828 'args' 'struct kvm_s390_cmma_log *'     | | `-DeclRefExpr 0x1410642d8 <col:23> 'unsigned long' lvalue ParmVar 0x141061978 'bufsize' 'unsigned long'     | `-CompoundStmt 0x141065fc0 <col:32, line:45:2>     |   |-BinaryOperator 0x141064508 <line:18:3, col:32> 'unsigned long' '='     |   | |-DeclRefExpr 0x141064318 <col:3> 'unsigned long' lvalue Var 0x141061d28 'hva' 'unsigned long'     |   | `-ImplicitCastExpr 0x1410644f0 <col:9, col:32> 'unsigned long' <IntegralCast>     |   |   `-CallExpr 0x141064490 <col:9, col:32> 'int'     |   |     |-ImplicitCastExpr 0x141064478 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x141064418 <col:9> 'int ()' Function 0x141064360 'gfn_to_hva' 'int ()'     |   |     |-ImplicitCastExpr 0x1410644c0 <col:20> 'struct kvm *' <LValueToRValue>     |   |     | `-DeclRefExpr 0x141064438 <col:20> 'struct kvm *' lvalue ParmVar 0x141045a48 'kvm' 'struct kvm *'     |   |     `-ImplicitCastExpr 0x1410644d8 <col:25> 'unsigned long' <LValueToRValue>     |   |       `-DeclRefExpr 0x141064458 <col:25> 'unsigned long' lvalue Var 0x141061c28 'cur_gfn' 'unsigned long'     |   |-IfStmt 0x1410646d0 <line:19:3, line:20:11>     |   | |-CallExpr 0x141064660 <line:19:7, col:27> 'int'     |   | | |-ImplicitCastExpr 0x141064648 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | | | `-DeclRefExpr 0x141064608 <col:7> 'int ()' Function 0x141064550 'kvm_is_error_hva' 'int ()'     |   | | `-ImplicitCastExpr 0x141064688 <col:24> 'unsigned long' <LValueToRValue>     |   | |   `-DeclRefExpr 0x141064628 <col:24> 'unsigned long' lvalue Var 0x141061d28 'hva' 'unsigned long'     |   | `-ReturnStmt 0x1410646c0 <line:20:4, col:11>     |   |   `-IntegerLiteral 0x1410646a0 <col:11> 'int' 0     |   |-IfStmt 0x141065228 <line:22:3, line:23:44>     |   | |-CallExpr 0x141064a08 <line:22:7, col:77> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x1410647d0 <col:7> 'int ()' Function 0x141064718 'test_and_clear_bit' 'int ()'     |   | | |-BinaryOperator 0x141064870 <col:26, col:40> '<dependent type>' contains-errors '-'     |   | | | |-DeclRefExpr 0x1410647f0 <col:26> 'unsigned long' lvalue Var 0x141061c28 'cur_gfn' 'unsigned long'     |   | | | `-RecoveryExpr 0x141064848 <col:36, col:40> '<dependent type>' contains-errors lvalue     |   | | |   `-DeclRefExpr 0x141064810 <col:36> 'struct kvm_memory_slot *' lvalue Var 0x141062408 'ms' 'struct kvm_memory_slot *'     |   | | `-CallExpr 0x1410649c8 <col:50, col:76> 'int'     |   | |   |-ImplicitCastExpr 0x1410649b0 <col:50> 'int (*)()' <FunctionToPointerDecay>     |   | |   | `-DeclRefExpr 0x141064970 <col:50> 'int ()' Function 0x1410648b8 'kvm_second_dirty_bitmap' 'int ()'     |   | |   `-ImplicitCastExpr 0x1410649f0 <col:74> 'struct kvm_memory_slot *' <LValueToRValue>     |   | |     `-DeclRefExpr 0x141064990 <col:74> 'struct kvm_memory_slot *' lvalue Var 0x141062408 'ms' 'struct kvm_memory_slot *'     |   | `-CallExpr 0x141065200 <line:23:4, col:44> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x141064b18 <col:4> 'int ()' Function 0x141064a60 'atomic64_dec' 'int ()'     |   |   `-UnaryOperator 0x141064be0 <col:17, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |     `-CXXDependentScopeMemberExpr 0x141064b98 <col:18, col:28> '<dependent type>' contains-errors lvalue .cmma_dirty_pages     |   |       `-RecoveryExpr 0x141064b70 <col:18, col:23> '<dependent type>' contains-errors lvalue     |   |         `-DeclRefExpr 0x141064b38 <col:18> 'struct kvm *' lvalue ParmVar 0x141045a48 'kvm' 'struct kvm *'     |   |-IfStmt 0x141065528 <line:24:3, line:25:13>     |   | |-BinaryOperator 0x141065490 <line:24:7, col:42> 'int' contains-errors '<'     |   | | |-CallExpr 0x141065438 <col:7, col:38> '<dependent type>' contains-errors     |   | | | |-DeclRefExpr 0x141065328 <col:7> 'int ()' Function 0x141065270 'get_pgste' 'int ()'     |   | | | |-RecoveryExpr 0x141065380 <col:17, col:22> '<dependent type>' contains-errors lvalue     |   | | | | `-DeclRefExpr 0x141065348 <col:17> 'struct kvm *' lvalue ParmVar 0x141045a48 'kvm' 'struct kvm *'     |   | | | |-DeclRefExpr 0x1410653a8 <col:26> 'unsigned long' lvalue Var 0x141061d28 'hva' 'unsigned long'     |   | | | `-UnaryOperator 0x141065420 <col:31, col:32> 'unsigned long *' prefix '&' cannot overflow     |   | | |   `-DeclRefExpr 0x1410653c8 <col:32> 'unsigned long' lvalue Var 0x141061da8 'pgstev' 'unsigned long'     |   | | `-IntegerLiteral 0x141065470 <col:42> 'int' 0     |   | `-BinaryOperator 0x141065508 <line:25:4, col:13> 'unsigned long' '='     |   |   |-DeclRefExpr 0x1410654b0 <col:4> 'unsigned long' lvalue Var 0x141061da8 'pgstev' 'unsigned long'     |   |   `-ImplicitCastExpr 0x1410654f0 <col:13> 'unsigned long' <IntegralCast>     |   |     `-IntegerLiteral 0x1410654d0 <col:13> 'int' 0     |   |-BinaryOperator 0x141065730 <line:27:3, col:41> '<dependent type>' contains-errors '='     |   | |-ArraySubscriptExpr 0x141065620 <col:3, col:20> '<dependent type>' contains-errors lvalue     |   | | |-ImplicitCastExpr 0x141065608 <col:3> '<dependent type>' contains-errors <LValueToRValue>     |   | | | `-RecoveryExpr 0x141065568 <col:3> '<dependent type>' contains-errors lvalue     |   | | |   `-DeclRefExpr 0x141065548 <col:3> 'int *' lvalue ParmVar 0x1410618f8 'res' 'int *'     |   | | `-UnaryOperator 0x1410655f0 <col:7, col:18> '<dependent type>' contains-errors postfix '++' cannot overflow     |   | |   `-RecoveryExpr 0x1410655c8 <col:7, col:13> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x141065590 <col:7> 'struct kvm_s390_cmma_log *' lvalue ParmVar 0x141061828 'args' 'struct kvm_s390_cmma_log *'     |   | `-BinaryOperator 0x141065710 <col:24, col:41> 'unsigned long' '&'     |   |   |-ParenExpr 0x1410656b8 <col:24, col:37> 'unsigned long'     |   |   | `-BinaryOperator 0x141065698 <col:25, col:35> 'unsigned long' '>>'     |   |   |   |-ImplicitCastExpr 0x141065680 <col:25> 'unsigned long' <LValueToRValue>     |   |   |   | `-DeclRefExpr 0x141065640 <col:25> 'unsigned long' lvalue Var 0x141061da8 'pgstev' 'unsigned long'     |   |   |   `-IntegerLiteral 0x141065660 <col:35> 'int' 24     |   |   `-ImplicitCastExpr 0x1410656f8 <col:41> 'unsigned long' <IntegralCast>     |   |     `-IntegerLiteral 0x1410656d8 <col:41> 'int' 67     |   |-IfStmt 0x1410657e0 <line:29:3, line:30:11>     |   | |-RecoveryExpr 0x141065790 <line:29:7, col:28> '_Bool' contains-errors     |   | `-ReturnStmt 0x1410657d0 <line:30:4, col:11>     |   |   `-IntegerLiteral 0x1410657b0 <col:11> 'int' 0     |   |-IfStmt 0x141065a18 <line:32:3, line:33:58>     |   | |-BinaryOperator 0x141065870 <line:32:7, col:18> 'int' '=='     |   | | |-ImplicitCastExpr 0x141065840 <col:7> 'unsigned long' <LValueToRValue>     |   | | | `-DeclRefExpr 0x141065800 <col:7> 'unsigned long' lvalue Var 0x141061c28 'cur_gfn' 'unsigned long'     |   | | `-ImplicitCastExpr 0x141065858 <col:18> 'unsigned long' <LValueToRValue>     |   | |   `-DeclRefExpr 0x141065820 <col:18> 'unsigned long' lvalue Var 0x141061ca8 'next_gfn' 'unsigned long'     |   | `-BinaryOperator 0x1410659f8 <line:33:4, col:58> 'unsigned long' '='     |   |   |-DeclRefExpr 0x141065890 <col:4> 'unsigned long' lvalue Var 0x141061ca8 'next_gfn' 'unsigned long'     |   |   `-ImplicitCastExpr 0x1410659e0 <col:15, col:58> 'unsigned long' <IntegralCast>     |   |     `-CallExpr 0x141065998 <col:15, col:58> 'int'     |   |       |-ImplicitCastExpr 0x141065980 <col:15> 'int (*)()' <FunctionToPointerDecay>     |   |       | `-DeclRefExpr 0x1410658b0 <col:15> 'int ()' Function 0x1410624e8 'kvm_s390_next_dirty_cmma' 'int ()'     |   |       |-ImplicitCastExpr 0x1410659c8 <col:40> 'struct kvm_memslots *' <LValueToRValue>     |   |       | `-DeclRefExpr 0x1410658d0 <col:40> 'struct kvm_memslots *' lvalue Var 0x141061fc8 'slots' 'struct kvm_memslots *'     |   |       `-BinaryOperator 0x141065960 <col:47, col:57> 'unsigned long' '+'     |   |         |-ImplicitCastExpr 0x141065930 <col:47> 'unsigned long' <LValueToRValue>     |   |         | `-DeclRefExpr 0x1410658f0 <col:47> 'unsigned long' lvalue Var 0x141061c28 'cur_gfn' 'unsigned long'     |   |         `-ImplicitCastExpr 0x141065948 <col:57> 'unsigned long' <IntegralCast>     |   |           `-IntegerLiteral 0x141065910 <col:57> 'int' 1     |   |-IfStmt 0x141065c38 <line:35:3, line:37:11>     |   | |-BinaryOperator 0x141065be8 <line:35:7, line:36:45> 'int' contains-errors '||'     |   | | |-ParenExpr 0x141065ac8 <line:35:7, col:27> 'int'     |   | | | `-BinaryOperator 0x141065aa8 <col:8, col:20> 'int' '>='     |   | | |   |-ImplicitCastExpr 0x141065a78 <col:8> 'unsigned long' <LValueToRValue>     |   | | |   | `-DeclRefExpr 0x141065a38 <col:8> 'unsigned long' lvalue Var 0x141061ca8 'next_gfn' 'unsigned long'     |   | | |   `-ImplicitCastExpr 0x141065a90 <col:20> 'unsigned long' <LValueToRValue>     |   | | |     `-DeclRefExpr 0x141065a58 <col:20> 'unsigned long' lvalue Var 0x141061ba8 'mem_end' 'unsigned long'     |   | | `-ParenExpr 0x141065bc8 <line:36:7, col:45> 'int' contains-errors     |   | |   `-BinaryOperator 0x141065ba8 <col:8, col:38> 'int' contains-errors '>='     |   | |     |-BinaryOperator 0x141065b68 <col:8, col:25> '<dependent type>' contains-errors '-'     |   | |     | |-DeclRefExpr 0x141065ae8 <col:8> 'unsigned long' lvalue Var 0x141061ca8 'next_gfn' 'unsigned long'     |   | |     | `-RecoveryExpr 0x141065b40 <col:19, col:25> '<dependent type>' contains-errors lvalue     |   | |     |   `-DeclRefExpr 0x141065b08 <col:19> 'struct kvm_s390_cmma_log *' lvalue ParmVar 0x141061828 'args' 'struct kvm_s390_cmma_log *'     |   | |     `-DeclRefExpr 0x141065b88 <col:38> 'unsigned long' lvalue ParmVar 0x141061978 'bufsize' 'unsigned long'     |   | `-ReturnStmt 0x141065c28 <line:37:4, col:11>     |   |   `-IntegerLiteral 0x141065c08 <col:11> 'int' 0     |   |-UnaryOperator 0x141065c78 <line:38:3, col:10> 'unsigned long' postfix '++'     |   | `-DeclRefExpr 0x141065c58 <col:3> 'unsigned long' lvalue Var 0x141061c28 'cur_gfn' 'unsigned long'     |   `-IfStmt 0x141065fa0 <line:40:3, line:44:3>     |     |-BinaryOperator 0x141065d90 <line:40:7, col:37> 'int' contains-errors '>='     |     | |-BinaryOperator 0x141065d10 <col:7, col:21> '<dependent type>' contains-errors '-'     |     | | |-DeclRefExpr 0x141065c90 <col:7> 'unsigned long' lvalue Var 0x141061c28 'cur_gfn' 'unsigned long'     |     | | `-RecoveryExpr 0x141065ce8 <col:17, col:21> '<dependent type>' contains-errors lvalue     |     | |   `-DeclRefExpr 0x141065cb0 <col:17> 'struct kvm_memory_slot *' lvalue Var 0x141062408 'ms' 'struct kvm_memory_slot *'     |     | `-RecoveryExpr 0x141065d68 <col:33, col:37> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x141065d30 <col:33> 'struct kvm_memory_slot *' lvalue Var 0x141062408 'ms' 'struct kvm_memory_slot *'     |     `-CompoundStmt 0x141065f80 <col:45, line:44:3>     |       |-BinaryOperator 0x141065ec0 <line:41:4, col:36> 'struct kvm_memory_slot *' '='     |       | |-DeclRefExpr 0x141065db0 <col:4> 'struct kvm_memory_slot *' lvalue Var 0x141062408 'ms' 'struct kvm_memory_slot *'     |       | `-ImplicitCastExpr 0x141065ea8 <col:9, col:36> 'struct kvm_memory_slot *' <IntegralToPointer>     |       |   `-CallExpr 0x141065e48 <col:9, col:36> 'int'     |       |     |-ImplicitCastExpr 0x141065e30 <col:9> 'int (*)()' <FunctionToPointerDecay>     |       |     | `-DeclRefExpr 0x141065dd0 <col:9> 'int ()' Function 0x1410626d8 'gfn_to_memslot' 'int ()'     |       |     |-ImplicitCastExpr 0x141065e78 <col:24> 'struct kvm *' <LValueToRValue>     |       |     | `-DeclRefExpr 0x141065df0 <col:24> 'struct kvm *' lvalue ParmVar 0x141045a48 'kvm' 'struct kvm *'     |       |     `-ImplicitCastExpr 0x141065e90 <col:29> 'unsigned long' <LValueToRValue>     |       |       `-DeclRefExpr 0x141065e10 <col:29> 'unsigned long' lvalue Var 0x141061c28 'cur_gfn' 'unsigned long'     |       `-IfStmt 0x141065f60 <line:42:4, line:43:12>     |         |-UnaryOperator 0x141065f18 <line:42:8, col:9> 'int' prefix '!' cannot overflow     |         | `-ImplicitCastExpr 0x141065f00 <col:9> 'struct kvm_memory_slot *' <LValueToRValue>     |         |   `-DeclRefExpr 0x141065ee0 <col:9> 'struct kvm_memory_slot *' lvalue Var 0x141062408 'ms' 'struct kvm_memory_slot *'     |         `-ReturnStmt 0x141065f50 <line:43:5, col:12>     |           `-IntegerLiteral 0x141065f30 <col:12> 'int' 0     `-ReturnStmt 0x141066060 <line:46:2, col:9>       `-IntegerLiteral 0x141066040 <col:9> 'int' 0 ","20742":"`-FunctionDecl 0x12500dd18  line:1:1 TEST_CASE 'int ()'   `-CompoundStmt 0x12500de20 <line:2:1, line:8:1> ","21033":"`-FunctionDecl 0x15d934d78  line:1:16 invalid sock_write_iter 'int (struct kiocb *, struct iov_iter *)' static   |-ParmVarDecl 0x15d91ba68 <col:32, col:46> col:46 used iocb 'struct kiocb *'   |-ParmVarDecl 0x15d934c58 <col:52, col:69> col:69 used from 'struct iov_iter *'   `-CompoundStmt 0x15c008b10 <line:2:1, line:20:1>     |-DeclStmt 0x15d935078 <line:3:2, col:35>     | |-RecordDecl 0x15d934e30 <col:2, col:9> col:9 struct file     | `-VarDecl 0x15d934f98 <col:2, col:28> col:15 used file 'struct file *' cinit     |   `-RecoveryExpr 0x15d935038 <col:22, col:28> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x15d935000 <col:22> 'struct kiocb *' lvalue ParmVar 0x15d91ba68 'iocb' 'struct kiocb *'     |-DeclStmt 0x15d9352d8 <line:4:2, col:42>     | |-RecordDecl 0x15d935090 <col:2, col:9> col:9 struct socket     | `-VarDecl 0x15d9351f8 <col:2, col:30> col:17 used sock 'struct socket *' cinit     |   `-RecoveryExpr 0x15d935298 <col:24, col:30> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x15d935260 <col:24> 'struct file *' contains-errors lvalue Var 0x15d934f98 'file' 'struct file *'     |-DeclStmt 0x15d935540 <line:5:2, col:41>     | |-RecordDecl 0x15d9352f0 <col:2, col:9> col:9 struct msghdr     | `-VarDecl 0x15d9353e8 <col:2, col:16> col:16 referenced invalid msg 'struct msghdr'     |-IfStmt 0x15d9356a0 <line:8:2, line:9:11>     | |-BinaryOperator 0x15d9355d8 <line:8:6, col:22> 'int' contains-errors '!='     | | |-RecoveryExpr 0x15d935590 <col:6, col:12> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x15d935558 <col:6> 'struct kiocb *' lvalue ParmVar 0x15d91ba68 'iocb' 'struct kiocb *'     | | `-IntegerLiteral 0x15d9355b8 <col:22> 'int' 0     | `-ReturnStmt 0x15d935690 <line:9:3, col:11>     |   `-UnaryOperator 0x15d935678 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x15d935660 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x15d935640 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15d9358a0 <line:11:2, line:12:19>     | |-BinaryOperator 0x15d935778 <line:11:6, col:22> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x15d9356f8 <col:6, col:12> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x15d9356c0 <col:6> 'struct file *' contains-errors lvalue Var 0x15d934f98 'file' 'struct file *'     | | `-RecoveryExpr 0x15d935758 <col:22> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x15d935880 <line:12:3, col:19> '<dependent type>' contains-errors '='     |   |-CXXDependentScopeMemberExpr 0x15d9357e0 <col:3, col:7> '<dependent type>' contains-errors lvalue .msg_flags     |   | `-RecoveryExpr 0x15d9357b8 <col:3> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x15d935798 <col:3> 'struct msghdr' lvalue Var 0x15d9353e8 'msg' 'struct msghdr'     |   `-RecoveryExpr 0x15d935860 <col:19> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15d935ac0 <line:14:2, line:15:20>     | |-BinaryOperator 0x15d935978 <line:14:6, col:20> 'int' contains-errors '=='     | | |-RecoveryExpr 0x15d9358f8 <col:6, col:12> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x15d9358c0 <col:6> 'struct socket *' contains-errors lvalue Var 0x15d9351f8 'sock' 'struct socket *'     | | `-RecoveryExpr 0x15d935958 <col:20> '<dependent type>' contains-errors lvalue     | `-CompoundAssignOperator 0x15d935a90 <line:15:3, col:20> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |-CXXDependentScopeMemberExpr 0x15d9359e0 <col:3, col:7> '<dependent type>' contains-errors lvalue .msg_flags     |   | `-RecoveryExpr 0x15d9359b8 <col:3> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x15d935998 <col:3> 'struct msghdr' lvalue Var 0x15d9353e8 'msg' 'struct msghdr'     |   `-RecoveryExpr 0x15d935a70 <col:20> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x15c008aa8 <line:18:2, col:14> 'struct iov_iter' contains-errors '='     | |-UnaryOperator 0x15c008a28 <col:2, col:3> 'struct iov_iter' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x15c008a10 <col:3> 'struct iov_iter *' <LValueToRValue>     | |   `-DeclRefExpr 0x15c0089f0 <col:3> 'struct iov_iter *' lvalue ParmVar 0x15d934c58 'from' 'struct iov_iter *'     | `-CXXDependentScopeMemberExpr 0x15c008a60 <col:10, col:14> '<dependent type>' contains-errors lvalue .msg_iter     |   `-RecoveryExpr 0x15c008a40 <col:10> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x15c008b00 <line:19:2, col:9>       `-RecoveryExpr 0x15c008ae0 <col:9> '<dependent type>' contains-errors lvalue ","20754":"`-FunctionDecl 0x15000df18  line:1:12 invalid _listFile 'int (int *, int, void *)' static   |-ParmVarDecl 0x15000dd28 <col:22, col:36> col:36 invalid file 'int *'   |-ParmVarDecl 0x15000dda8 <col:42, col:46> col:46 used reset 'int'   |-ParmVarDecl 0x15000de28 <col:53, col:59> col:59 udata 'void *'   `-CompoundStmt 0x15000e2e8 <line:2:1, line:5:1>     `-DeclStmt 0x15000e100 <line:3:2, col:32>       `-VarDecl 0x15000dff0 <col:2, col:28> col:6 used next 'int' cinit         `-ConditionalOperator 0x15000e0d0 <col:13, col:28> 'int'           |-ImplicitCastExpr 0x15000e0b8 <col:13> 'int' <LValueToRValue>           | `-DeclRefExpr 0x15000e058 <col:13> 'int' lvalue ParmVar 0x15000dda8 'reset' 'int'           |-IntegerLiteral 0x15000e078 <col:21> 'int' 0           `-IntegerLiteral 0x15000e098 <col:28> 'int' 1 ","20671":"`-FunctionDecl 0x1380fb518  line:1:1 SYSCALL_DEFINE3 'int ()'   `-CompoundStmt 0x12e031ad0 <line:2:1, line:99:1>     |-DeclStmt 0x1380fb7f8 <line:3:2, col:26>     | |-RecordDecl 0x1380fb608 <col:2, col:9> col:9 struct shmid_kernel     | `-VarDecl 0x1380fb778 <col:2, col:23> col:23 used shp 'struct shmid_kernel *'     |-DeclStmt 0x1380fb928 <line:4:2, col:18>     | |-VarDecl 0x1380fb828 <col:2, col:6> col:6 used err 'int'     | `-VarDecl 0x1380fb8a8 <col:2, col:11> col:11 used version 'int'     |-DeclStmt 0x1380fbb28 <line:5:2, col:26>     | |-RecordDecl 0x1380fb940 <col:2, col:9> col:9 struct ipc_namespace     | `-VarDecl 0x1380fbaa8 <col:2, col:24> col:24 used ns 'struct ipc_namespace *'     |-IfStmt 0x12e01ad88 <line:7:2, line:8:11>     | |-BinaryOperator 0x12e01acc0 <line:7:6, col:25> 'int' contains-errors '||'     | | |-BinaryOperator 0x12e01ac60 <col:6, col:12> 'int' contains-errors '<'     | | | |-RecoveryExpr 0x12e01ac40 <col:6> '<dependent type>' contains-errors lvalue     | | | `-IntegerLiteral 0x1380fbb70 <col:12> 'int' 0     | | `-BinaryOperator 0x12e01aca0 <col:17, col:25> 'int' contains-errors '<'     | |   |-RecoveryExpr 0x12e01ac80 <col:17> '<dependent type>' contains-errors lvalue     | |   `-IntegerLiteral 0x1380fbbc8 <col:25> 'int' 0     | `-ReturnStmt 0x12e01ad78 <line:8:3, col:11>     |   `-UnaryOperator 0x12e01ad60 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12e01ad48 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12e01ad28 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12e01afa0 <line:10:2, col:34> 'int' contains-errors '='     | |-DeclRefExpr 0x12e01ada8 <col:2> 'int' lvalue Var 0x1380fb8a8 'version' 'int'     | `-CallExpr 0x12e01af78 <col:12, col:34> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12e01aea8 <col:12> 'int ()' Function 0x12e01adf0 'ipc_parse_version' 'int ()'     |   `-UnaryOperator 0x12e01af60 <col:30, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x12e01af40 <col:31> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12e01b158 <line:11:2, col:25> 'struct ipc_namespace *' contains-errors '='     | |-DeclRefExpr 0x12e01afc0 <col:2> 'struct ipc_namespace *' lvalue Var 0x1380fbaa8 'ns' 'struct ipc_namespace *'     | `-CXXDependentScopeMemberExpr 0x12e01b110 <col:7, col:25> '<dependent type>' contains-errors lvalue ->ipc_ns     |   `-CXXDependentScopeMemberExpr 0x12e01b0c8 <col:7, col:16> '<dependent type>' contains-errors lvalue ->nsproxy     |     `-RecoveryExpr 0x12e01b0a8 <col:7> '<dependent type>' contains-errors lvalue     |-SwitchStmt 0x12e01b1c8 <line:13:2, line:92:2>     | |-RecoveryExpr 0x12e01b1a8 <line:13:10> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12e031908 <col:15, line:92:2>     |   |-ReturnStmt 0x12e01b4c8 <line:18:3, col:52>     |   | `-CallExpr 0x12e01b480 <col:10, col:52> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x12e01b330 <col:10> 'int ()' Function 0x12e01b278 'shmctl_nolock' 'int ()'     |   |   |-DeclRefExpr 0x12e01b350 <col:24> 'struct ipc_namespace *' lvalue Var 0x1380fbaa8 'ns' 'struct ipc_namespace *'     |   |   |-RecoveryExpr 0x12e01b420 <col:28> '<dependent type>' contains-errors lvalue     |   |   |-RecoveryExpr 0x12e01b440 <col:35> '<dependent type>' contains-errors lvalue     |   |   |-DeclRefExpr 0x12e01b3a0 <col:40> 'int' lvalue Var 0x1380fb8a8 'version' 'int'     |   |   `-RecoveryExpr 0x12e01b460 <col:49> '<dependent type>' contains-errors lvalue     |   |-CompoundStmt 0x12e031838 <line:24:2, line:89:2>     |   | |-DeclStmt 0x12e01b838 <line:25:3, col:24>     |   | | |-RecordDecl 0x12e01b648 <col:3, col:10> col:10 struct file     |   | | `-VarDecl 0x12e01b7b8 <col:3, col:16> col:16 used shm_file 'struct file *'     |   | |-CallExpr 0x12e01b998 <line:27:3, col:17> 'int'     |   | | `-ImplicitCastExpr 0x12e01b980 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | |   `-DeclRefExpr 0x12e01b930 <col:3> 'int ()' Function 0x12e01b878 'rcu_read_lock' 'int ()'     |   | |-IfStmt 0x12e01d2b8 <line:29:3, line:32:3>     |   | | |-CallExpr 0x12e01d038 <line:29:7, col:17> 'int'     |   | | | |-ImplicitCastExpr 0x12e01d020 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | | | | `-DeclRefExpr 0x12e01bbd8 <col:7> 'int ()' Function 0x12e01bb20 'IS_ERR' 'int ()'     |   | | | `-ImplicitCastExpr 0x12e01d060 <col:14> 'struct shmid_kernel *' <LValueToRValue>     |   | | |   `-DeclRefExpr 0x12e01d000 <col:14> 'struct shmid_kernel *' lvalue Var 0x1380fb778 'shp' 'struct shmid_kernel *'     |   | | `-CompoundStmt 0x12e01d298 <col:20, line:32:3>     |   | |   |-BinaryOperator 0x12e01d210 <line:30:4, col:21> 'int' '='     |   | |   | |-DeclRefExpr 0x12e01d078 <col:4> 'int' lvalue Var 0x1380fb828 'err' 'int'     |   | |   | `-CallExpr 0x12e01d1d0 <col:10, col:21> 'int'     |   | |   |   |-ImplicitCastExpr 0x12e01d1b8 <col:10> 'int (*)()' <FunctionToPointerDecay>     |   | |   |   | `-DeclRefExpr 0x12e01d178 <col:10> 'int ()' Function 0x12e01d0c0 'PTR_ERR' 'int ()'     |   | |   |   `-ImplicitCastExpr 0x12e01d1f8 <col:18> 'struct shmid_kernel *' <LValueToRValue>     |   | |   |     `-DeclRefExpr 0x12e01d198 <col:18> 'struct shmid_kernel *' lvalue Var 0x1380fb778 'shp' 'struct shmid_kernel *'     |   | |   `-GotoStmt 0x12e01d280 <line:31:4, col:9> 'out_unlock1' 0x12e01d230     |   | |-CallExpr 0x12e01d470 <line:34:3, col:33> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x12e01d3b8 <col:3> 'int ()' Function 0x12e01d300 'audit_ipc_obj' 'int ()'     |   | | `-UnaryOperator 0x12e01d458 <col:17, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | |   `-ParenExpr 0x12e01d438 <col:18, col:32> '<dependent type>' contains-errors lvalue     |   | |     `-RecoveryExpr 0x12e01d410 <col:19, col:24> '<dependent type>' contains-errors lvalue     |   | |       `-DeclRefExpr 0x12e01d3d8 <col:19> 'struct shmid_kernel *' lvalue Var 0x1380fb778 'shp' 'struct shmid_kernel *'     |   | |-IfStmt 0x12e01d628 <line:36:3, line:37:9>     |   | | |-ImplicitCastExpr 0x12e01d5f8 <line:36:7> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x12e01d5d8 <col:7> 'int' lvalue Var 0x1380fb828 'err' 'int'     |   | | `-GotoStmt 0x12e01d610 <line:37:4, col:9> 'out_unlock1' 0x12e01d230     |   | |-CallExpr 0x12e01d7c0 <line:39:3, col:33> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x12e01d728 <col:3> 'int ()' Function 0x12e01d670 'ipc_lock_object' 'int ()'     |   | | `-UnaryOperator 0x12e01d7a8 <col:19, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | |   `-RecoveryExpr 0x12e01d780 <col:20, col:25> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x12e01d748 <col:20> 'struct shmid_kernel *' lvalue Var 0x1380fb778 'shp' 'struct shmid_kernel *'     |   | |-IfStmt 0x12e01da40 <line:42:3, line:45:3>     |   | | |-UnaryOperator 0x12e01d988 <line:42:7, col:39> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | | | `-CallExpr 0x12e01d960 <col:8, col:39> '<dependent type>' contains-errors     |   | | |   |-DeclRefExpr 0x12e01d8c8 <col:8> 'int ()' Function 0x12e01d810 'ipc_valid_object' 'int ()'     |   | | |   `-UnaryOperator 0x12e01d948 <col:25, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | |     `-RecoveryExpr 0x12e01d920 <col:26, col:31> '<dependent type>' contains-errors lvalue     |   | | |       `-DeclRefExpr 0x12e01d8e8 <col:26> 'struct shmid_kernel *' lvalue Var 0x1380fb778 'shp' 'struct shmid_kernel *'     |   | | `-CompoundStmt 0x12e01da28 <col:42, line:45:3>     |   | |   `-GotoStmt 0x12e01da10 <line:44:4, col:9> 'out_unlock0' 0x12e01d9c0     |   | |-IfStmt 0x12e01e090 <line:47:3, line:59:3>     |   | | |-RecoveryExpr 0x12e01dbc0 <line:47:7, col:44> '_Bool' contains-errors     |   | | `-CompoundStmt 0x12e01e070 <col:47, line:59:3>     |   | |   |-IfStmt 0x12e01dec0 <line:50:4, line:54:4>     |   | |   | |-RecoveryExpr 0x12e01de50 <line:50:8, line:51:40> '_Bool' contains-errors     |   | |   | `-CompoundStmt 0x12e01dea8 <col:43, line:54:4>     |   | |   |   `-GotoStmt 0x12e01de90 <line:53:5, col:10> 'out_unlock0' 0x12e01d9c0     |   | |   `-IfStmt 0x12e01e050 <line:55:4, line:58:4>     |   | |     |-RecoveryExpr 0x12e01dfe0 <line:55:8, col:49> '_Bool' contains-errors     |   | |     `-CompoundStmt 0x12e01e038 <col:52, line:58:4>     |   | |       `-GotoStmt 0x12e01e020 <line:57:5, col:10> 'out_unlock0' 0x12e01d9c0     |   | |-BinaryOperator 0x12e01e130 <line:61:3, col:19> 'struct file *' contains-errors '='     |   | | |-DeclRefExpr 0x12e01e0b0 <col:3> 'struct file *' lvalue Var 0x12e01b7b8 'shm_file' 'struct file *'     |   | | `-RecoveryExpr 0x12e01e108 <col:14, col:19> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x12e01e0d0 <col:14> 'struct shmid_kernel *' lvalue Var 0x1380fb778 'shp' 'struct shmid_kernel *'     |   | |-IfStmt 0x12e01e2e0 <line:62:3, line:63:9>     |   | | |-CallExpr 0x12e01e288 <line:62:7, col:33> 'int'     |   | | | |-ImplicitCastExpr 0x12e01e270 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | | | | `-DeclRefExpr 0x12e01e230 <col:7> 'int ()' Function 0x12e01e178 'is_file_hugepages' 'int ()'     |   | | | `-ImplicitCastExpr 0x12e01e2b0 <col:25> 'struct file *' <LValueToRValue>     |   | | |   `-DeclRefExpr 0x12e01e250 <col:25> 'struct file *' lvalue Var 0x12e01b7b8 'shm_file' 'struct file *'     |   | | `-GotoStmt 0x12e01e2c8 <line:63:4, col:9> 'out_unlock0' 0x12e01d9c0     |   | |-IfStmt 0x12e01eb70 <line:65:3, line:74:3>     |   | | |-RecoveryExpr 0x12e01e300 <line:65:7, col:14> '_Bool' contains-errors     |   | | `-CompoundStmt 0x12e01eb40 <col:24, line:74:3>     |   | |   |-DeclStmt 0x12e01e658 <line:66:4, col:45>     |   | |   | |-RecordDecl 0x12e01e320 <col:4, col:11> col:11 struct user_struct     |   | |   | `-VarDecl 0x12e01e488 <col:4, col:44> col:24 used user 'struct user_struct *' cinit     |   | |   |   `-ImplicitCastExpr 0x12e01e628 <col:31, col:44> 'struct user_struct *' <IntegralToPointer>     |   | |   |     `-CallExpr 0x12e01e608 <col:31, col:44> 'int'     |   | |   |       `-ImplicitCastExpr 0x12e01e5f0 <col:31> 'int (*)()' <FunctionToPointerDecay>     |   | |   |         `-DeclRefExpr 0x12e01e5d0 <col:31> 'int ()' Function 0x12e01e518 'current_user' 'int ()'     |   | |   |-BinaryOperator 0x12e01e870 <line:68:4, col:38> 'int' '='     |   | |   | |-DeclRefExpr 0x12e01e670 <col:4> 'int' lvalue Var 0x1380fb828 'err' 'int'     |   | |   | `-CallExpr 0x12e01e808 <col:10, col:38> 'int'     |   | |   |   |-ImplicitCastExpr 0x12e01e7f0 <col:10> 'int (*)()' <FunctionToPointerDecay>     |   | |   |   | `-DeclRefExpr 0x12e01e770 <col:10> 'int ()' Function 0x12e01e6b8 'shmem_lock' 'int ()'     |   | |   |   |-ImplicitCastExpr 0x12e01e840 <col:21> 'struct file *' <LValueToRValue>     |   | |   |   | `-DeclRefExpr 0x12e01e790 <col:21> 'struct file *' lvalue Var 0x12e01b7b8 'shm_file' 'struct file *'     |   | |   |   |-IntegerLiteral 0x12e01e7b0 <col:31> 'int' 1     |   | |   |   `-ImplicitCastExpr 0x12e01e858 <col:34> 'struct user_struct *' <LValueToRValue>     |   | |   |     `-DeclRefExpr 0x12e01e7d0 <col:34> 'struct user_struct *' lvalue Var 0x12e01e488 'user' 'struct user_struct *'     |   | |   |-IfStmt 0x12e01eb08 <line:69:4, line:72:4>     |   | |   | |-RecoveryExpr 0x12e01e988 <line:69:8, col:49> '_Bool' contains-errors     |   | |   | `-CompoundStmt 0x12e01eaf0 <col:52, line:72:4>     |   | |   |   `-BinaryOperator 0x12e01ead0 <line:71:5, col:23> '<dependent type>' contains-errors '='     |   | |   |     |-RecoveryExpr 0x12e01ea88 <col:5, col:10> '<dependent type>' contains-errors lvalue     |   | |   |     | `-DeclRefExpr 0x12e01ea50 <col:5> 'struct shmid_kernel *' lvalue Var 0x1380fb778 'shp' 'struct shmid_kernel *'     |   | |   |     `-DeclRefExpr 0x12e01eab0 <col:23> 'struct user_struct *' lvalue Var 0x12e01e488 'user' 'struct user_struct *'     |   | |   `-GotoStmt 0x12e01eb28 <line:73:4, col:9> 'out_unlock0' 0x12e01d9c0     |   | |-IfStmt 0x12e01ec70 <line:77:3, line:78:9>     |   | | |-RecoveryExpr 0x12e01ec38 <line:77:7, col:40> '_Bool' contains-errors     |   | | `-GotoStmt 0x12e01ec58 <line:78:4, col:9> 'out_unlock0' 0x12e01d9c0     |   | |-CallExpr 0x12e01ed50 <line:79:3, col:42> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x12e01ec90 <col:3> 'int ()' Function 0x12e01e6b8 'shmem_lock' 'int ()'     |   | | |-DeclRefExpr 0x12e01ecb0 <col:14> 'struct file *' lvalue Var 0x12e01b7b8 'shm_file' 'struct file *'     |   | | |-IntegerLiteral 0x12e01ecd0 <col:24> 'int' 0     |   | | `-RecoveryExpr 0x12e01ed28 <col:27, col:32> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x12e01ecf0 <col:27> 'struct shmid_kernel *' lvalue Var 0x1380fb778 'shp' 'struct shmid_kernel *'     |   | |-CallExpr 0x12e01efc8 <line:82:3, col:20> 'int'     |   | | |-ImplicitCastExpr 0x12e01efb0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | | `-DeclRefExpr 0x12e01ef70 <col:3> 'int ()' Function 0x12e01eeb8 'get_file' 'int ()'     |   | | `-ImplicitCastExpr 0x12e031200 <col:12> 'struct file *' <LValueToRValue>     |   | |   `-DeclRefExpr 0x12e01ef90 <col:12> 'struct file *' lvalue Var 0x12e01b7b8 'shm_file' 'struct file *'     |   | |-CallExpr 0x12e031390 <line:83:3, col:35> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x12e0312f8 <col:3> 'int ()' Function 0x12e031240 'ipc_unlock_object' 'int ()'     |   | | `-UnaryOperator 0x12e031378 <col:21, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | |   `-RecoveryExpr 0x12e031350 <col:22, col:27> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x12e031318 <col:22> 'struct shmid_kernel *' lvalue Var 0x1380fb778 'shp' 'struct shmid_kernel *'     |   | |-CallExpr 0x12e0314d0 <line:84:3, col:19> 'int'     |   | | `-ImplicitCastExpr 0x12e0314b8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | |   `-DeclRefExpr 0x12e031498 <col:3> 'int ()' Function 0x12e0313e0 'rcu_read_unlock' 'int ()'     |   | |-CallExpr 0x12e031650 <line:85:3, col:43> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x12e0315d0 <col:3> 'int ()' Function 0x12e031518 'shmem_unlock_mapping' 'int ()'     |   | | `-RecoveryExpr 0x12e031628 <col:24, col:34> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x12e0315f0 <col:24> 'struct file *' lvalue Var 0x12e01b7b8 'shm_file' 'struct file *'     |   | |-CallExpr 0x12e0317b0 <line:87:3, col:16> 'int'     |   | | |-ImplicitCastExpr 0x12e031798 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | | `-DeclRefExpr 0x12e031758 <col:3> 'int ()' Function 0x12e0316a0 'fput' 'int ()'     |   | | `-ImplicitCastExpr 0x12e0317d8 <col:8> 'struct file *' <LValueToRValue>     |   | |   `-DeclRefExpr 0x12e031778 <col:8> 'struct file *' lvalue Var 0x12e01b7b8 'shm_file' 'struct file *'     |   | `-ReturnStmt 0x12e031828 <line:88:3, col:10>     |   |   `-ImplicitCastExpr 0x12e031810 <col:10> 'int' <LValueToRValue>     |   |     `-DeclRefExpr 0x12e0317f0 <col:10> 'int' lvalue Var 0x1380fb828 'err' 'int'     |   `-DefaultStmt 0x12e0318e8 <line:90:2, col:9>     |     `-NullStmt 0x12e0318e0 <col:9>     |-LabelStmt 0x12e0319f0 <line:94:1, line:95:34> 'out_unlock0'     | `-CallExpr 0x12e0319c8 <col:2, col:34> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12e031930 <col:2> 'int ()' Function 0x12e031240 'ipc_unlock_object' 'int ()'     |   `-UnaryOperator 0x12e0319b0 <col:20, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x12e031988 <col:21, col:26> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x12e031950 <col:21> 'struct shmid_kernel *' lvalue Var 0x1380fb778 'shp' 'struct shmid_kernel *'     |-LabelStmt 0x12e031a68 <line:96:1, line:97:18> 'out_unlock1'     | `-CallExpr 0x12e031a48 <col:2, col:18> 'int'     |   `-ImplicitCastExpr 0x12e031a30 <col:2> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x12e031a10 <col:2> 'int ()' Function 0x12e0313e0 'rcu_read_unlock' 'int ()'     `-ReturnStmt 0x12e031ac0 <line:98:2, col:9>       `-ImplicitCastExpr 0x12e031aa8 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x12e031a88 <col:9> 'int' lvalue Var 0x1380fb828 'err' 'int' ","21077":"`-FunctionDecl 0x13d00de38  line:1:1 SPL_METHOD 'int (int, int)'   |-ParmVarDecl 0x13d00dd58 <col:12> col:12 Array 'int'   |-ParmVarDecl 0x13d00dcd8 <col:19> col:19 seek 'int'   `-CompoundStmt 0x13d027280 <line:2:1, line:31:1>     |-DeclStmt 0x13d00e050 <line:3:2, col:21>     | |-VarDecl 0x13d00df50 <col:2, col:7> col:7 used opos 'long'     | `-VarDecl 0x13d00dfd0 <col:2, col:13> col:13 used position 'long'     |-DeclStmt 0x13d026668 <line:7:2, col:12>     | `-VarDecl 0x13d026600 <col:2, col:6> col:6 used result 'int'     |-IfStmt 0x13d026918 <line:9:2, line:11:2>     | |-RecoveryExpr 0x13d0268d0 <line:9:6, col:76> '_Bool' contains-errors     | `-CompoundStmt 0x13d026900 <col:85, line:11:2>     |   `-ReturnStmt 0x13d0268f0 <line:10:3>     |-IfStmt 0x13d026b58 <line:13:2, line:16:2>     | |-UnaryOperator 0x13d0269b8 <line:13:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13d0269a0 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x13d026980 <col:7> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13d026b40 <col:12, line:16:2>     |   `-ReturnStmt 0x13d026b30 <line:15:3>     |-BinaryOperator 0x13d026bd0 <line:18:2, col:9> 'long' '='     | |-DeclRefExpr 0x13d026b78 <col:2> 'long' lvalue Var 0x13d00df50 'opos' 'long'     | `-ImplicitCastExpr 0x13d026bb8 <col:9> 'long' <LValueToRValue>     |   `-DeclRefExpr 0x13d026b98 <col:9> 'long' lvalue Var 0x13d00dfd0 'position' 'long'     `-IfStmt 0x13d027140 <line:20:2, line:29:2>       |-BinaryOperator 0x13d026c60 <line:20:6, col:18> 'int' '>='       | |-ImplicitCastExpr 0x13d026c30 <col:6> 'long' <LValueToRValue>       | | `-DeclRefExpr 0x13d026bf0 <col:6> 'long' lvalue Var 0x13d00dfd0 'position' 'long'       | `-ImplicitCastExpr 0x13d026c48 <col:18> 'long' <IntegralCast>       |   `-IntegerLiteral 0x13d026c10 <col:18> 'int' 0       `-CompoundStmt 0x13d027120 <col:21, line:29:2>         |-WhileStmt 0x13d026f78 <line:24:3, col:83>         | |-RecoveryExpr 0x13d026f50 <col:10, col:75> '_Bool' contains-errors         | `-NullStmt 0x13d026f70 <col:83>         `-IfStmt 0x13d027100 <line:26:3, line:28:3>           |-RecoveryExpr 0x13d0270b8 <line:26:7, col:81> '_Bool' contains-errors           `-CompoundStmt 0x13d0270e8 <col:90, line:28:3>             `-ReturnStmt 0x13d0270d8 <line:27:4> ","20428":"`-FunctionDecl 0x14d00de88  line:1:33 invalid _gdContributionsAlloc 'int *(unsigned int, unsigned int)' static inline   |-ParmVarDecl 0x14d00dcf0 <col:55, col:68> col:68 used line_length 'unsigned int'   |-ParmVarDecl 0x14d00dd70 <col:81, col:94> col:94 used windows_size 'unsigned int'   `-CompoundStmt 0x14d028a38 <line:2:1, line:38:1>     |-DeclStmt 0x14d00dff8 <line:3:2, col:20>     | `-VarDecl 0x14d00df58 <col:2, col:19> col:15 used u 'unsigned int' cinit     |   `-ImplicitCastExpr 0x14d00dfe0 <col:19> 'unsigned int' <IntegralCast>     |     `-IntegerLiteral 0x14d00dfc0 <col:19> 'int' 0     |-DeclStmt 0x14d00e0c8 <line:5:2, col:24>     | `-VarDecl 0x14d00e040 <col:2, col:23> col:6 used overflow_error 'int' cinit     |   `-IntegerLiteral 0x14d00e0a8 <col:23> 'int' 0     |-IfStmt 0x14d00e1f0 <line:8:2, line:10:2>     | |-UnaryOperator 0x14d00e178 <line:8:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14d00e160 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x14d00e140 <col:7> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14d00e1d8 <col:12, line:10:2>     |   `-ReturnStmt 0x14d00e1c8 <line:9:3, col:10>     |     `-RecoveryExpr 0x14d00e1a8 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14d028028 <line:13:2, line:16:2>     | |-RecoveryExpr 0x14d027e18 <line:13:6, col:53> '_Bool' contains-errors     | `-CompoundStmt 0x14d028008 <col:56, line:16:2>     |   |-CallExpr 0x14d027f98 <line:14:3, col:13> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14d027f18 <col:3> 'int ()' Function 0x14d027e60 'gdFree' 'int ()'     |   | `-RecoveryExpr 0x14d027f78 <col:10> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x14d027ff8 <line:15:3, col:10>     |     `-RecoveryExpr 0x14d027fd8 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14d0281d0 <line:18:2, line:21:2>     | |-BinaryOperator 0x14d028180 <line:18:6, col:25> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x14d028118 <col:6, col:11> '<dependent type>' contains-errors lvalue ->ContribRow     | | | `-RecoveryExpr 0x14d0280f8 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14d028160 <col:25> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14d0281c0 <col:31, line:21:2>     `-ForStmt 0x14d028a00 <line:22:2, line:36:2>       |-BinaryOperator 0x14d028248 <line:22:7, col:11> 'unsigned int' '='       | |-DeclRefExpr 0x14d0281f0 <col:7> 'unsigned int' lvalue Var 0x14d00df58 'u' 'unsigned int'       | `-ImplicitCastExpr 0x14d028230 <col:11> 'unsigned int' <IntegralCast>       |   `-IntegerLiteral 0x14d028210 <col:11> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x14d0282d8 <col:15, col:19> 'int' '<'       | |-ImplicitCastExpr 0x14d0282a8 <col:15> 'unsigned int' <LValueToRValue>       | | `-DeclRefExpr 0x14d028268 <col:15> 'unsigned int' lvalue Var 0x14d00df58 'u' 'unsigned int'       | `-ImplicitCastExpr 0x14d0282c0 <col:19> 'unsigned int' <LValueToRValue>       |   `-DeclRefExpr 0x14d028288 <col:19> 'unsigned int' lvalue ParmVar 0x14d00dcf0 'line_length' 'unsigned int'       |-UnaryOperator 0x14d028318 <col:33, col:34> 'unsigned int' postfix '++'       | `-DeclRefExpr 0x14d0282f8 <col:33> 'unsigned int' lvalue Var 0x14d00df58 'u' 'unsigned int'       `-CompoundStmt 0x14d0289e0 <col:38, line:36:2>         |-IfStmt 0x14d028740 <line:23:3, line:27:3> has_else         | |-CallExpr 0x14d0283f8 <line:23:7, col:45> 'int'         | | |-ImplicitCastExpr 0x14d0283e0 <col:7> 'int (*)()' <FunctionToPointerDecay>         | | | `-DeclRefExpr 0x14d028330 <col:7> 'int ()' Function 0x14d00e2f8 'overflow2' 'int ()'         | | |-ImplicitCastExpr 0x14d028428 <col:17> 'unsigned int' <LValueToRValue>         | | | `-DeclRefExpr 0x14d028350 <col:17> 'unsigned int' lvalue ParmVar 0x14d00dd70 'windows_size' 'unsigned int'         | | `-UnaryExprOrTypeTraitExpr 0x14d028388 <col:31, col:44> 'unsigned long' sizeof 'double'         | |-CompoundStmt 0x14d0284a0 <col:48, line:25:3>         | | `-BinaryOperator 0x14d028480 <line:24:4, col:21> 'int' '='         | |   |-DeclRefExpr 0x14d028440 <col:4> 'int' lvalue Var 0x14d00e040 'overflow_error' 'int'         | |   `-IntegerLiteral 0x14d028460 <col:21> 'int' 1         | `-CompoundStmt 0x14d028730 <line:25:10, line:27:3>         `-IfStmt 0x14d0289c0 <line:28:3, line:35:3>           |-RecoveryExpr 0x14d028808 <line:28:7, col:60> '_Bool' contains-errors           `-CompoundStmt 0x14d0289a0 <col:66, line:35:3>             |-UnaryOperator 0x14d028848 <line:29:4, col:5> 'unsigned int' postfix '--'             | `-DeclRefExpr 0x14d028828 <col:4> 'unsigned int' lvalue Var 0x14d00df58 'u' 'unsigned int'             `-WhileStmt 0x14d028980 <line:30:4, line:33:4>               |-BinaryOperator 0x14d0288d0 <line:30:11, col:16> 'int' '>='               | |-ImplicitCastExpr 0x14d0288a0 <col:11> 'unsigned int' <LValueToRValue>               | | `-DeclRefExpr 0x14d028860 <col:11> 'unsigned int' lvalue Var 0x14d00df58 'u' 'unsigned int'               | `-ImplicitCastExpr 0x14d0288b8 <col:16> 'unsigned int' <IntegralCast>               |   `-IntegerLiteral 0x14d028880 <col:16> 'int' 0               `-CompoundStmt 0x14d028968 <col:19, line:33:4>                 `-UnaryOperator 0x14d028950 <line:32:5, col:6> 'unsigned int' postfix '--'                   `-DeclRefExpr 0x14d028930 <col:5> 'unsigned int' lvalue Var 0x14d00df58 'u' 'unsigned int' ","20444":"`-FunctionDecl 0x11e9281f8  line:1:12 invalid SparseDenseBinaryOpShared 'int (int *)'   |-ParmVarDecl 0x11e928128 <col:38, col:60> col:60 invalid ctx 'int *'   `-CompoundStmt 0x11e9282a8 <line:2:23, col:24> ","20571":"`-FunctionDecl 0x11e80de38  line:1:1 TEST_F 'int (int, int)'   |-ParmVarDecl 0x11e80dd58 <col:8> col:8 QuicServerTransportTest 'int'   |-ParmVarDecl 0x11e80dcd8 <col:33> col:33 RecvStopSendingFrameAfterCloseStream 'int'   `-CompoundStmt 0x11e8294c8 <col:71, line:44:1>     |-RecoveryExpr 0x11e80dfa0 <line:3:3> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x11e80e2f0 <line:11:3, col:77>     | `-VarDecl 0x11e80dfd8 <col:3, col:76> col:8 used stream 'int' auto cinit     |   `-CallExpr 0x11e80e2c8 <col:17, col:76> '<dependent type>' contains-errors     |     |-CXXDependentScopeMemberExpr 0x11e80e260 <col:17, col:58> '<dependent type>' contains-errors lvalue ->getStream     |     | `-CXXDependentScopeMemberExpr 0x11e80e218 <col:17, col:43> '<dependent type>' contains-errors lvalue .streamManager     |     |   `-CallExpr 0x11e80e1f8 <col:17, col:41> '<dependent type>' contains-errors     |     |     `-CXXDependentScopeMemberExpr 0x11e80e1b0 <col:17, col:25> '<dependent type>' contains-errors lvalue ->getNonConstConn     |     |       `-RecoveryExpr 0x11e80e190 <col:17> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x11e80e2a8 <col:68> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x11e828f90 <line:40:3, col:49>     | `-VarDecl 0x11e828f28 <col:3, col:8> col:8 used packet 'int' auto     `-CallExpr 0x11e8294a0 <line:43:3, col:34> 'int'       |-ImplicitCastExpr 0x11e829488 <col:3> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x11e8292a8 <col:3> 'int ()' Function 0x11e8291f0 'deliverData' 'int ()'       `-CallExpr 0x11e829448 <col:15, col:33> 'int'         |-ImplicitCastExpr 0x11e829430 <col:15> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x11e8293a8 <col:15> 'int ()' Function 0x11e8292f0 'packetToBuf' 'int ()'         `-ImplicitCastExpr 0x11e829470 <col:27> 'int' <LValueToRValue>           `-DeclRefExpr 0x11e8293c8 <col:27> 'int' lvalue Var 0x11e828f28 'packet' 'int' ","20488":"`-FunctionDecl 0x1378f75f8  line:1:8 invalid cJSON_CreateString 'int *(const char *)'   |-ParmVarDecl 0x1378f74f0 <col:28, col:40> col:40 used string 'const char *'   `-CompoundStmt 0x1378f7ae8 <line:2:1, line:9:1>     |-IfStmt 0x1378f7a80 <line:4:2, line:7:2>     | |-RecoveryExpr 0x1378f78c0 <line:4:7> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1378f7a70 <col:14, line:7:2>     `-ReturnStmt 0x1378f7ad8 <line:8:2, col:9>       `-RecoveryExpr 0x1378f7ab8 <col:9> '<dependent type>' contains-errors lvalue ","20968":"`-FunctionDecl 0x136821d18  line:1:1 COMPAT_SYSCALL_DEFINE3 'int ()'   `-CompoundStmt 0x135832960 <line:3:1, line:22:1>     |-DeclStmt 0x136821ec0 <line:4:2, col:14>     | `-VarDecl 0x136821e20 <col:2, col:13> col:7 used err 'long' cinit     |   `-ImplicitCastExpr 0x136821ea8 <col:13> 'long' <IntegralCast>     |     `-IntegerLiteral 0x136821e88 <col:13> 'int' 0     |-DeclStmt 0x136821f58 <line:5:2, col:23>     | `-VarDecl 0x136821ef0 <col:2, col:16> col:16 __user 'unsigned long'     |-DeclStmt 0x136822088 <line:6:2, col:35>     | |-VarDecl 0x136821f88 <col:2, col:16> col:16 used nr_bits 'unsigned long'     | `-VarDecl 0x136822008 <col:2, col:25> col:25 used alloc_size 'unsigned long'     |-CallExpr 0x136822258 <line:7:2, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x136822198 <col:2> 'int ()' Function 0x1368220e0 'DECLARE_BITMAP' 'int ()'     | |-RecoveryExpr 0x136822218 <col:17> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x136822238 <col:21> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x135832070 <line:10:2, col:47> 'unsigned long' contains-errors '='     | |-DeclRefExpr 0x135831e18 <col:2> 'unsigned long' lvalue Var 0x136822008 'alloc_size' 'unsigned long'     | `-BinaryOperator 0x135832050 <col:15, col:47> '<dependent type>' contains-errors '\/'     |   |-CallExpr 0x135832020 <col:15, col:43> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x135831f18 <col:15> 'int ()' Function 0x135831e60 'ALIGN' 'int ()'     |   | |-DeclRefExpr 0x135831f38 <col:21> 'unsigned long' lvalue Var 0x136821f88 'nr_bits' 'unsigned long'     |   | `-RecoveryExpr 0x135832000 <col:30> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x135831fa0 <col:47> 'int' 8     `-IfStmt 0x135832778 <line:12:2, line:16:2>       |-RecoveryExpr 0x1358320a8 <line:12:6> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x135832758 <col:13, line:16:2>         |-BinaryOperator 0x135832308 <line:13:3, col:45> 'long' contains-errors '='         | |-DeclRefExpr 0x1358320c8 <col:3> 'long' lvalue Var 0x136821e20 'err' 'long'         | `-CallExpr 0x1358322d0 <col:9, col:45> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x1358321c8 <col:9> 'int ()' Function 0x135832110 'compat_get_bitmap' 'int ()'         |   |-RecoveryExpr 0x135832290 <col:27> '<dependent type>' contains-errors lvalue         |   |-RecoveryExpr 0x1358322b0 <col:31> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x135832218 <col:38> 'unsigned long' lvalue Var 0x136821f88 'nr_bits' 'unsigned long'         `-CompoundAssignOperator 0x135832728 <line:15:3, col:41> 'long' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'           |-DeclRefExpr 0x1358324d8 <col:3> 'long' lvalue Var 0x136821e20 'err' 'long'           `-CallExpr 0x1358326f0 <col:10, col:41> '<dependent type>' contains-errors             |-DeclRefExpr 0x1358325d8 <col:10> 'int ()' Function 0x135832520 'copy_to_user' 'int ()'             |-RecoveryExpr 0x1358326b0 <col:23> '<dependent type>' contains-errors lvalue             |-RecoveryExpr 0x1358326d0 <col:27> '<dependent type>' contains-errors lvalue             `-DeclRefExpr 0x135832628 <col:31> 'unsigned long' lvalue Var 0x136822008 'alloc_size' 'unsigned long' ","20664":"`-FunctionDecl 0x14d026938  line:1:12 create_auto_pcm_quirk 'int (struct snd_usb_audio *, struct usb_interface *, struct usb_driver *)' static   |-ParmVarDecl 0x14d00e248 <col:34, col:56> col:56 used chip 'struct snd_usb_audio *'   |-ParmVarDecl 0x14d026628 <line:2:6, col:28> col:28 used iface 'struct usb_interface *'   |-ParmVarDecl 0x14d0267f8 <line:3:6, col:25> col:25 used driver 'struct usb_driver *'   `-CompoundStmt 0x14d02ada0 <line:4:1, line:36:1>     |-DeclStmt 0x14d026c28 <line:5:2, col:33>     | |-RecordDecl 0x14d026a40 <col:2, col:9> col:9 struct usb_host_interface     | `-VarDecl 0x14d026ba8 <col:2, col:29> col:29 used alts 'struct usb_host_interface *'     |-DeclStmt 0x14d026e28 <line:6:2, col:40>     | |-RecordDecl 0x14d026c40 <col:2, col:9> col:9 struct usb_interface_descriptor     | `-VarDecl 0x14d026da8 <col:2, col:35> col:35 used altsd 'struct usb_interface_descriptor *'     |-DeclStmt 0x14d027028 <line:7:2, col:37>     | |-RecordDecl 0x14d026e40 <col:2, col:9> col:9 struct usb_endpoint_descriptor     | `-VarDecl 0x14d026fa8 <col:2, col:34> col:34 used epd 'struct usb_endpoint_descriptor *'     |-DeclStmt 0x14d027228 <line:8:2, col:40>     | |-RecordDecl 0x14d027040 <col:2, col:9> col:9 struct uac1_as_header_descriptor     | `-VarDecl 0x14d0271a8 <col:2, col:36> col:36 used ashd 'struct uac1_as_header_descriptor *'     |-DeclStmt 0x14d027428 <line:9:2, col:52>     | |-RecordDecl 0x14d027240 <col:2, col:9> col:9 struct uac_format_type_i_discrete_descriptor     | `-VarDecl 0x14d0273a8 <col:2, col:48> col:48 used fmtd 'struct uac_format_type_i_discrete_descriptor *'     |-IfStmt 0x14d0275a0 <line:14:2, line:15:11>     | |-BinaryOperator 0x14d0274c0 <line:14:6, col:30> 'int' contains-errors '<'     | | |-RecoveryExpr 0x14d027478 <col:6, col:13> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x14d027440 <col:6> 'struct usb_interface *' lvalue ParmVar 0x14d026628 'iface' 'struct usb_interface *'     | | `-IntegerLiteral 0x14d0274a0 <col:30> 'int' 2     | `-ReturnStmt 0x14d027590 <line:15:3, col:11>     |   `-UnaryOperator 0x14d027578 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14d027560 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14d027540 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14d0280b0 <line:16:2, col:29> 'struct usb_host_interface *' contains-errors '='     | |-DeclRefExpr 0x14d0275c0 <col:2> 'struct usb_host_interface *' lvalue Var 0x14d026ba8 'alts' 'struct usb_host_interface *'     | `-UnaryOperator 0x14d028098 <col:9, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-ArraySubscriptExpr 0x14d028078 <col:10, col:29> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x14d028060 <col:10, col:17> '<dependent type>' contains-errors <LValueToRValue>     |     | `-RecoveryExpr 0x14d028018 <col:10, col:17> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x14d0275e0 <col:10> 'struct usb_interface *' lvalue ParmVar 0x14d026628 'iface' 'struct usb_interface *'     |     `-IntegerLiteral 0x14d028040 <col:28> 'int' 1     |-BinaryOperator 0x14d0282e0 <line:17:2, col:29> 'struct usb_interface_descriptor *' '='     | |-DeclRefExpr 0x14d0280d0 <col:2> 'struct usb_interface_descriptor *' lvalue Var 0x14d026da8 'altsd' 'struct usb_interface_descriptor *'     | `-ImplicitCastExpr 0x14d0282c8 <col:10, col:29> 'struct usb_interface_descriptor *' <IntegralToPointer>     |   `-CallExpr 0x14d028288 <col:10, col:29> 'int'     |     |-ImplicitCastExpr 0x14d028270 <col:10> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14d028200 <col:10> 'int ()' Function 0x14d028148 'get_iface_desc' 'int ()'     |     `-ImplicitCastExpr 0x14d0282b0 <col:25> 'struct usb_host_interface *' <LValueToRValue>     |       `-DeclRefExpr 0x14d028220 <col:25> 'struct usb_host_interface *' lvalue Var 0x14d026ba8 'alts' 'struct usb_host_interface *'     |-IfStmt 0x14d028448 <line:20:2, line:21:11>     | |-BinaryOperator 0x14d028380 <line:20:6, col:29> 'int' contains-errors '<'     | | |-RecoveryExpr 0x14d028338 <col:6, col:13> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x14d028300 <col:6> 'struct usb_interface_descriptor *' lvalue Var 0x14d026da8 'altsd' 'struct usb_interface_descriptor *'     | | `-IntegerLiteral 0x14d028360 <col:29> 'int' 1     | `-ReturnStmt 0x14d028438 <line:21:3, col:11>     |   `-UnaryOperator 0x14d028420 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14d028408 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14d0283e8 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14d028640 <line:22:2, col:28> 'struct usb_endpoint_descriptor *' '='     | |-DeclRefExpr 0x14d028468 <col:2> 'struct usb_endpoint_descriptor *' lvalue Var 0x14d026fa8 'epd' 'struct usb_endpoint_descriptor *'     | `-ImplicitCastExpr 0x14d028628 <col:8, col:28> 'struct usb_endpoint_descriptor *' <IntegralToPointer>     |   `-CallExpr 0x14d0285e0 <col:8, col:28> 'int'     |     |-ImplicitCastExpr 0x14d0285c8 <col:8> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14d028568 <col:8> 'int ()' Function 0x14d0284b0 'get_endpoint' 'int ()'     |     |-ImplicitCastExpr 0x14d028610 <col:21> 'struct usb_host_interface *' <LValueToRValue>     |     | `-DeclRefExpr 0x14d028588 <col:21> 'struct usb_host_interface *' lvalue Var 0x14d026ba8 'alts' 'struct usb_host_interface *'     |     `-IntegerLiteral 0x14d0285a8 <col:27> 'int' 0     |-IfStmt 0x14d028898 <line:23:2, line:24:11>     | |-UnaryOperator 0x14d0287d8 <line:23:6, col:33> 'int' prefix '!' cannot overflow     | | `-CallExpr 0x14d028798 <col:7, col:33> 'int'     | |   |-ImplicitCastExpr 0x14d028780 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x14d028740 <col:7> 'int ()' Function 0x14d028688 'usb_endpoint_xfer_isoc' 'int ()'     | |   `-ImplicitCastExpr 0x14d0287c0 <col:30> 'struct usb_endpoint_descriptor *' <LValueToRValue>     | |     `-DeclRefExpr 0x14d028760 <col:30> 'struct usb_endpoint_descriptor *' lvalue Var 0x14d026fa8 'epd' 'struct usb_endpoint_descriptor *'     | `-ReturnStmt 0x14d028888 <line:24:3, col:11>     |   `-UnaryOperator 0x14d028870 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14d028858 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14d028838 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14d028ba8 <line:27:2, line:28:26> 'struct uac1_as_header_descriptor *' contains-errors '='     | |-DeclRefExpr 0x14d0288b8 <line:27:2> 'struct uac1_as_header_descriptor *' lvalue Var 0x14d0271a8 'ashd' 'struct uac1_as_header_descriptor *'     | `-CallExpr 0x14d028b68 <col:9, line:28:26> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14d0289b8 <line:27:9> 'int ()' Function 0x14d028900 'snd_usb_find_csint_desc' 'int ()'     |   |-RecoveryExpr 0x14d028a10 <col:33, col:39> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14d0289d8 <col:33> 'struct usb_host_interface *' lvalue Var 0x14d026ba8 'alts' 'struct usb_host_interface *'     |   |-RecoveryExpr 0x14d028a70 <col:46, col:52> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14d028a38 <col:46> 'struct usb_host_interface *' lvalue Var 0x14d026ba8 'alts' 'struct usb_host_interface *'     |   |-RecoveryExpr 0x14d028b28 <col:62> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x14d028b48 <line:28:12> '<dependent type>' contains-errors lvalue     `-BinaryOperator 0x14d028dd8 <line:29:2, line:30:27> 'struct uac_format_type_i_discrete_descriptor *' contains-errors '='       |-DeclRefExpr 0x14d028bc8 <line:29:2> 'struct uac_format_type_i_discrete_descriptor *' lvalue Var 0x14d0273a8 'fmtd' 'struct uac_format_type_i_discrete_descriptor *'       `-CallExpr 0x14d028d98 <col:9, line:30:27> '<dependent type>' contains-errors         |-DeclRefExpr 0x14d028be8 <line:29:9> 'int ()' Function 0x14d028900 'snd_usb_find_csint_desc' 'int ()'         |-RecoveryExpr 0x14d028c40 <col:33, col:39> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x14d028c08 <col:33> 'struct usb_host_interface *' lvalue Var 0x14d026ba8 'alts' 'struct usb_host_interface *'         |-RecoveryExpr 0x14d028ca0 <col:46, col:52> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x14d028c68 <col:46> 'struct usb_host_interface *' lvalue Var 0x14d026ba8 'alts' 'struct usb_host_interface *'         |-RecoveryExpr 0x14d028d58 <col:62> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x14d028d78 <line:30:12> '<dependent type>' contains-errors lvalue ","20783":"`-FunctionDecl 0x14a00e258  line:1:5 invalid ip_idents_reserve 'int (int, int)'   |-ParmVarDecl 0x14a00e0f0 <col:23, col:27> col:27 invalid hash 'int'   |-ParmVarDecl 0x14a00e170 <col:33, col:37> col:37 used segs 'int'   `-CompoundStmt 0x14a8d0ca0 <line:2:1, line:14:1> ","20408":"`-FunctionDecl 0x15a1281f8  line:1:1 invalid mono_thread_alloc_tls 'int (int *)'   |-ParmVarDecl 0x15a128128 <col:24, col:44> col:44 invalid type 'int *'   `-CompoundStmt 0x15a142040 <line:2:1, line:28:1>     `-DeclStmt 0x15a128578 <line:6:2, col:17>       `-VarDecl 0x15a1284f0 <col:2, col:16> col:6 used max_set 'int' cinit         `-IntegerLiteral 0x15a128558 <col:16> 'int' 0 ","20663":"`-FunctionDecl 0x137128498  line:1:6 invalid getSharedDataHandler 'int (void *, int, int, int, int, int)'   |-ParmVarDecl 0x1371280f0 <col:27, col:33> col:33 used raw_context 'void *'   |-ParmVarDecl 0x137128170 <col:46, col:51> col:51 invalid key_ptr 'int'   |-ParmVarDecl 0x1371281f0 <col:60, col:65> col:65 invalid key_size 'int'   |-ParmVarDecl 0x137128270 <col:75, col:80> col:80 invalid value_ptr_ptr 'int'   |-ParmVarDecl 0x1371282f0 <line:2:27, col:32> col:32 invalid value_size_ptr 'int'   |-ParmVarDecl 0x137128370 <col:48, col:53> col:53 invalid cas_ptr 'int'   `-CompoundStmt 0x137142568 <col:62, line:20:1>     |-DeclStmt 0x137141818 <line:3:3, col:43>     | `-VarDecl 0x137128588 <col:3, col:42> col:8 used context 'int' auto cinit     |   `-CallExpr 0x1371287d8 <col:18, col:42> 'int'     |     |-ImplicitCastExpr 0x1371287c0 <col:18> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x137128750 <col:18> 'int ()' Function 0x137128698 'WASM_CONTEXT' 'int ()'     |     `-ImplicitCastExpr 0x137141800 <col:31> 'void *' <LValueToRValue>     |       `-DeclRefExpr 0x137128770 <col:31> 'void *' lvalue ParmVar 0x1371280f0 'raw_context' 'void *'     |-DeclStmt 0x137141ea0 <line:4:3, col:71>     | `-VarDecl 0x137141848 <col:3, col:70> col:8 used key 'int' auto cinit     |   `-CallExpr 0x137141e70 <col:14, col:70> '<dependent type>' contains-errors     |     |-CXXDependentScopeMemberExpr 0x137141d58 <col:14, col:33> '<dependent type>' contains-errors lvalue ->getMemory     |     | `-CallExpr 0x137141d38 <col:14, col:30> '<dependent type>' contains-errors     |     |   `-RecoveryExpr 0x137141d10 <col:14, col:23> '<dependent type>' contains-errors lvalue     |     |     `-DeclRefExpr 0x1371418b0 <col:14> 'int' lvalue Var 0x137128588 'context' 'int'     |     |-CXXDependentScopeMemberExpr 0x137141dc0 <col:43, col:51> '<dependent type>' contains-errors lvalue .u64_     |     | `-RecoveryExpr 0x137141da0 <col:43> '<dependent type>' contains-errors lvalue     |     `-CXXDependentScopeMemberExpr 0x137141e28 <col:57, col:66> '<dependent type>' contains-errors lvalue .u64_     |       `-RecoveryExpr 0x137141e08 <col:57> '<dependent type>' contains-errors lvalue     |-IfStmt 0x137142030 <line:5:3, line:7:3>     | |-UnaryOperator 0x137141ef0 <line:5:7, col:8> 'int' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x137141ed8 <col:8> 'int' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x137141eb8 <col:8> 'int' contains-errors lvalue Var 0x137141848 'key' 'int'     | `-CompoundStmt 0x137142020 <col:13, line:7:3>     |-RecoveryExpr 0x137142080 <line:8:3> '<dependent type>' contains-errors lvalue     |-IfStmt 0x137142180 <line:10:3, line:12:3>     | |-BinaryOperator 0x137142130 <line:10:7, col:17> 'int' contains-errors '!='     | | |-RecoveryExpr 0x1371420f0 <col:7> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x137142110 <col:17> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x137142170 <col:33, line:12:3>     |-IfStmt 0x137142388 <line:13:3, line:15:3>     | |-RecoveryExpr 0x137142338 <line:13:7, col:94> '_Bool' contains-errors     | `-CompoundStmt 0x137142378 <col:97, line:15:3>     `-IfStmt 0x137142528 <line:16:3, line:18:3>       |-RecoveryExpr 0x1371424d8 <line:16:7, col:81> '_Bool' contains-errors       `-CompoundStmt 0x137142518 <col:84, line:18:3> ","20214":"`-FunctionDecl 0x125903fd8  line:1:16 invalid _hostsock_send 'int (int *, const void *, int, int)' static   |-ParmVarDecl 0x125903d28 <line:2:5, col:14> col:14 referenced invalid sock_ 'int *'   |-ParmVarDecl 0x125903dd8 <line:3:5, col:17> col:17 used buf 'const void *'   |-ParmVarDecl 0x125903e58 <line:4:5, col:12> col:12 invalid count 'int'   |-ParmVarDecl 0x125903ed8 <line:5:5, col:9> col:9 used flags 'int'   `-CompoundStmt 0x12591dce0 <line:6:1, line:20:1>     |-BinaryOperator 0x125904368 <line:8:5, col:36> '<dependent type>' contains-errors '='     | |-BinaryOperator 0x125904348 <col:5, col:13> '<dependent type>' contains-errors '*'     | | |-RecoveryExpr 0x1259040c0 <col:5> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x1259040a0 <col:5> 'int *' lvalue ParmVar 0x125903d28 'sock_' 'int *'     | | `-RecoveryExpr 0x125904328 <col:13> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x1259042c0 <col:20, col:36> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x125904280 <col:20> 'int ()' Function 0x1259041c8 '_cast_sock' 'int ()'     |   `-RecoveryExpr 0x1259042a0 <col:31> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12591d7a8 <line:12:5, line:13:33>     | |-BinaryOperator 0x12591d600 <line:12:9, col:32> 'int' contains-errors '||'     | | |-UnaryOperator 0x12591d578 <col:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x12591d560 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-RecoveryExpr 0x12591d540 <col:10> '<dependent type>' contains-errors lvalue     | | `-ParenExpr 0x12591d5e0 <col:18, col:32> 'int' contains-errors     | |   `-BinaryOperator 0x12591d5c0 <col:19, col:29> 'int' contains-errors '&&'     | |     |-RecoveryExpr 0x12591d400 <col:19> '<dependent type>' contains-errors lvalue     | |     `-UnaryOperator 0x12591d5a8 <col:28, col:29> 'int' prefix '!' cannot overflow     | |       `-ImplicitCastExpr 0x12591d590 <col:29> 'const void *' <LValueToRValue>     | |         `-DeclRefExpr 0x12591d420 <col:29> 'const void *' lvalue ParmVar 0x125903dd8 'buf' 'const void *'     | `-CallExpr 0x12591d780 <line:13:9, col:33> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12591d700 <col:9> 'int ()' Function 0x12591d648 'OE_RAISE_ERRNO' 'int ()'     |   `-RecoveryExpr 0x12591d760 <col:24> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12591dc08 <line:15:5, line:16:33>     | |-BinaryOperator 0x12591db40 <line:15:9, col:74> 'int' contains-errors '!='     | | |-CallExpr 0x12591dad8 <col:9, col:69> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x12591d8a8 <col:9> 'int ()' Function 0x12591d7f0 'oe_syscall_send_ocall' 'int ()'     | | | |-UnaryOperator 0x12591da58 <col:31, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | | `-RecoveryExpr 0x12591da38 <col:32> '<dependent type>' contains-errors lvalue     | | | |-CXXDependentScopeMemberExpr 0x12591da90 <col:37, col:43> '<dependent type>' contains-errors lvalue ->host_fd     | | | | `-RecoveryExpr 0x12591da70 <col:37> '<dependent type>' contains-errors lvalue     | | | |-DeclRefExpr 0x12591d958 <col:52> 'const void *' lvalue ParmVar 0x125903dd8 'buf' 'const void *'     | | | |-RecoveryExpr 0x12591d978 <col:57> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x12591d998 <col:64> 'int' lvalue ParmVar 0x125903ed8 'flags' 'int'     | | `-RecoveryExpr 0x12591db20 <col:74> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x12591dbe0 <line:16:9, col:33> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12591db60 <col:9> 'int ()' Function 0x12591d648 'OE_RAISE_ERRNO' 'int ()'     |   `-RecoveryExpr 0x12591dbc0 <col:24> '<dependent type>' contains-errors lvalue     `-LabelStmt 0x12591dcc0 <line:18:1, line:19:12> 'done'       `-ReturnStmt 0x12591dc60 <col:5, col:12>         `-RecoveryExpr 0x12591dc40 <col:12> '<dependent type>' contains-errors lvalue ","21158":"`-FunctionDecl 0x14980df18  line:1:1 invalid parsev3rddirres 'int (int *, const int *, int)'   |-ParmVarDecl 0x14980dd28 <col:17, col:37> col:37 invalid ndo 'int *'   |-ParmVarDecl 0x14980dda8 <line:2:17, col:33> col:33 referenced invalid dp 'const int *'   |-ParmVarDecl 0x14980de28 <col:37, col:41> col:41 used verbose 'int'   `-CompoundStmt 0x149827eb0 <line:3:1, line:22:1>     |-DeclStmt 0x14980e058 <line:4:2, col:8>     | `-VarDecl 0x14980dff0 <col:2, col:6> col:6 used er 'int'     |-IfStmt 0x14980e368 <line:6:2, line:7:12>     | |-UnaryOperator 0x14980e300 <line:6:6, col:38> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ParenExpr 0x14980e2e0 <col:7, col:38> '<dependent type>' contains-errors     | |   `-BinaryOperator 0x14980e2c0 <col:8, col:37> '<dependent type>' contains-errors '='     | |     |-RecoveryExpr 0x14980e070 <col:8> '<dependent type>' contains-errors lvalue     | |     `-CallExpr 0x14980e288 <col:13, col:37> '<dependent type>' contains-errors     | |       |-DeclRefExpr 0x14980e1f0 <col:13> 'int ()' Function 0x14980e138 'parsestatus' 'int ()'     | |       |-RecoveryExpr 0x14980e210 <col:25> '<dependent type>' contains-errors lvalue     | |       |-RecoveryExpr 0x14980e230 <col:30> '<dependent type>' contains-errors lvalue     | |       `-UnaryOperator 0x14980e270 <col:34, col:35> 'int *' prefix '&' cannot overflow     | |         `-DeclRefExpr 0x14980e250 <col:35> 'int' lvalue Var 0x14980dff0 'er' 'int'     | `-ReturnStmt 0x14980e358 <line:7:3, col:12>     |   `-ParenExpr 0x14980e338 <col:10, col:12> 'int'     |     `-IntegerLiteral 0x14980e318 <col:11> 'int' 0     |-IfStmt 0x1498275e8 <line:8:2, line:9:24>     | |-CXXDependentScopeMemberExpr 0x14980e3a8 <line:8:6, col:11> '<dependent type>' contains-errors lvalue ->ndo_vflag     | | `-RecoveryExpr 0x14980e388 <col:6> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x1498275c0 <line:9:3, col:24> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1498274e0 <col:3> 'int ()' Function 0x149827428 'ND_PRINT' 'int ()'     |   `-ParenExpr 0x1498275a0 <col:12, col:23> 'char[4]' contains-errors     |     `-BinaryOperator 0x149827580 <col:13, col:18> 'char[4]' contains-errors ','     |       |-RecoveryExpr 0x149827500 <col:13> '<dependent type>' contains-errors lvalue     |       `-StringLiteral 0x149827560 <col:18> 'char[4]' lvalue \"STR\"     |-IfStmt 0x149827868 <line:10:2, line:11:12>     | |-UnaryOperator 0x149827800 <line:10:6, col:49> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ParenExpr 0x1498277e0 <col:7, col:49> '<dependent type>' contains-errors     | |   `-BinaryOperator 0x1498277c0 <col:8, col:48> '<dependent type>' contains-errors '='     | |     |-RecoveryExpr 0x149827608 <col:8> '<dependent type>' contains-errors lvalue     | |     `-CallExpr 0x149827788 <col:13, col:48> '<dependent type>' contains-errors     | |       |-DeclRefExpr 0x149827708 <col:13> 'int ()' Function 0x149827650 'parse_post_op_attr' 'int ()'     | |       |-RecoveryExpr 0x149827728 <col:32> '<dependent type>' contains-errors lvalue     | |       |-RecoveryExpr 0x149827748 <col:37> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x149827768 <col:41> 'int' lvalue ParmVar 0x14980de28 'verbose' 'int'     | `-ReturnStmt 0x149827858 <line:11:3, col:12>     |   `-ParenExpr 0x149827838 <col:10, col:12> 'int'     |     `-IntegerLiteral 0x149827818 <col:11> 'int' 0     |-IfStmt 0x1498278f0 <line:12:2, line:13:10>     | |-ImplicitCastExpr 0x1498278a8 <line:12:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x149827888 <col:6> 'int' lvalue Var 0x14980dff0 'er' 'int'     | `-ReturnStmt 0x1498278e0 <line:13:3, col:10>     |   `-RecoveryExpr 0x1498278c0 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x149827dd0 <line:14:2, line:18:2>     | |-CXXDependentScopeMemberExpr 0x149827930 <line:14:6, col:11> '<dependent type>' contains-errors lvalue ->ndo_vflag     | | `-RecoveryExpr 0x149827910 <col:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x149827da8 <col:22, line:18:2>     |   |-CallExpr 0x149827af0 <line:15:3, col:18> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x149827a58 <col:3> 'int ()' Function 0x1498279a0 'ND_TCHECK' 'int ()'     |   | `-ArraySubscriptExpr 0x149827ad0 <col:13, col:17> '<dependent type>' contains-errors lvalue     |   |   |-ImplicitCastExpr 0x149827ab8 <col:13> '<dependent type>' contains-errors <LValueToRValue>     |   |   | `-RecoveryExpr 0x149827a78 <col:13> '<dependent type>' contains-errors lvalue     |   |   `-IntegerLiteral 0x149827a98 <col:16> 'int' 1     |   |-CallExpr 0x149827ce8 <line:16:3, col:38> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x149827b18 <col:3> 'int ()' Function 0x149827428 'ND_PRINT' 'int ()'     |   | `-ParenExpr 0x149827cc8 <col:12, col:37> '<dependent type>' contains-errors     |   |   `-BinaryOperator 0x149827ca8 <col:13, col:36> '<dependent type>' contains-errors ','     |   |     |-BinaryOperator 0x149827c10 <col:13, col:29> '<dependent type>' contains-errors ','     |   |     | |-BinaryOperator 0x149827b78 <col:13, col:18> 'char[4]' contains-errors ','     |   |     | | |-RecoveryExpr 0x149827b38 <col:13> '<dependent type>' contains-errors lvalue     |   |     | | `-StringLiteral 0x149827b58 <col:18> 'char[4]' lvalue \"STR\"     |   |     | `-ArraySubscriptExpr 0x149827bf0 <col:25, col:29> '<dependent type>' contains-errors lvalue     |   |     |   |-ImplicitCastExpr 0x149827bd8 <col:25> '<dependent type>' contains-errors <LValueToRValue>     |   |     |   | `-RecoveryExpr 0x149827b98 <col:25> '<dependent type>' contains-errors lvalue     |   |     |   `-IntegerLiteral 0x149827bb8 <col:28> 'int' 0     |   |     `-ArraySubscriptExpr 0x149827c88 <col:32, col:36> '<dependent type>' contains-errors lvalue     |   |       |-ImplicitCastExpr 0x149827c70 <col:32> '<dependent type>' contains-errors <LValueToRValue>     |   |       | `-RecoveryExpr 0x149827c30 <col:32> '<dependent type>' contains-errors lvalue     |   |       `-IntegerLiteral 0x149827c50 <col:35> 'int' 1     |   `-CompoundAssignOperator 0x149827d78 <line:17:3, col:9> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |     |-RecoveryExpr 0x149827d30 <col:3> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x149827d10 <col:3> 'const int *' lvalue ParmVar 0x14980dda8 'dp' 'const int *'     |     `-IntegerLiteral 0x149827d58 <col:9> 'int' 2     |-ReturnStmt 0x149827e10 <line:19:2, col:9>     | `-RecoveryExpr 0x149827df0 <col:9> '<dependent type>' contains-errors lvalue     `-LabelStmt 0x149827e90 <line:20:1, col:6> 'trunc'       `-NullStmt 0x149827e38 <col:6> ","20780":"`-FunctionDecl 0x13e90c088  line:1:12 referenced invalid jas_image_growcmpts 'int (int *, int)' static   |-ParmVarDecl 0x13e90bf28 <col:32, col:45> col:45 referenced invalid image 'int *'   |-ParmVarDecl 0x13e90bfa8 <col:52, col:56> col:56 used maxcmpts 'int'   `-CompoundStmt 0x13e925cf8 <line:2:1, line:17:1>     |-DeclStmt 0x13e90c240 <line:4:2, col:12>     | `-VarDecl 0x13e90c1d8 <col:2, col:6> col:6 used cmptno 'int'     |-IfStmt 0x13e9257b8 <line:8:2, line:10:2>     | |-UnaryOperator 0x13e925740 <line:8:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13e925728 <col:7> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x13e925708 <col:7> 'int' lvalue ParmVar 0x13e90bfa8 'maxcmpts' 'int'     | `-CompoundStmt 0x13e9257a0 <col:17, line:10:2>     |   `-ReturnStmt 0x13e925790 <line:9:3, col:11>     |     `-UnaryOperator 0x13e925778 <col:10, col:11> 'int' prefix '-'     |       `-IntegerLiteral 0x13e925758 <col:11> 'int' 1     |-BinaryOperator 0x13e9258c0 <line:11:2, col:18> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13e925820 <col:2, col:9> '<dependent type>' contains-errors lvalue ->cmpts_     | | `-RecoveryExpr 0x13e9257f8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13e9257d8 <col:2> 'int *' lvalue ParmVar 0x13e90bf28 'image' 'int *'     | `-DeclRefExpr 0x13e9258a0 <col:18> 'int' lvalue ParmVar 0x13e90bfa8 'maxcmpts' 'int'     |-BinaryOperator 0x13e925990 <line:12:2, col:21> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13e925928 <col:2, col:9> '<dependent type>' contains-errors lvalue ->maxcmpts_     | | `-RecoveryExpr 0x13e925900 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13e9258e0 <col:2> 'int *' lvalue ParmVar 0x13e90bf28 'image' 'int *'     | `-DeclRefExpr 0x13e925970 <col:21> 'int' lvalue ParmVar 0x13e90bfa8 'maxcmpts' 'int'     |-ForStmt 0x13e925c90 <line:13:2, line:15:2>     | |-BinaryOperator 0x13e925a38 <line:13:7, col:23> 'int' contains-errors '='     | | |-DeclRefExpr 0x13e9259b0 <col:7> 'int' lvalue Var 0x13e90c1d8 'cmptno' 'int'     | | `-CXXDependentScopeMemberExpr 0x13e9259f0 <col:16, col:23> '<dependent type>' contains-errors lvalue ->numcmpts_     | |   `-RecoveryExpr 0x13e9259d0 <col:16> '<dependent type>' contains-errors lvalue     | |-<<<NULL>>>     | |-BinaryOperator 0x13e925ae0 <col:34, col:50> 'int' contains-errors '<'     | | |-DeclRefExpr 0x13e925a58 <col:34> 'int' lvalue Var 0x13e90c1d8 'cmptno' 'int'     | | `-CXXDependentScopeMemberExpr 0x13e925a98 <col:43, col:50> '<dependent type>' contains-errors lvalue ->maxcmpts_     | |   `-RecoveryExpr 0x13e925a78 <col:43> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x13e925b20 <col:61, col:63> 'int' prefix '++'     | | `-DeclRefExpr 0x13e925b00 <col:63> 'int' lvalue Var 0x13e90c1d8 'cmptno' 'int'     | `-CompoundStmt 0x13e925c78 <col:71, line:15:2>     |   `-BinaryOperator 0x13e925c58 <line:14:3, col:27> '<dependent type>' contains-errors '='     |     |-ArraySubscriptExpr 0x13e925c18 <col:3, col:23> '<dependent type>' contains-errors lvalue     |     | |-ImplicitCastExpr 0x13e925be8 <col:3, col:10> '<dependent type>' contains-errors <LValueToRValue>     |     | | `-CXXDependentScopeMemberExpr 0x13e925b80 <col:3, col:10> '<dependent type>' contains-errors lvalue ->cmpts_     |     | |   `-RecoveryExpr 0x13e925b58 <col:3> '<dependent type>' contains-errors lvalue     |     | |     `-DeclRefExpr 0x13e925b38 <col:3> 'int *' lvalue ParmVar 0x13e90bf28 'image' 'int *'     |     | `-ImplicitCastExpr 0x13e925c00 <col:17> 'int' <LValueToRValue>     |     |   `-DeclRefExpr 0x13e925bc8 <col:17> 'int' lvalue Var 0x13e90c1d8 'cmptno' 'int'     |     `-IntegerLiteral 0x13e925c38 <col:27> 'int' 0     `-ReturnStmt 0x13e925ce8 <line:16:2, col:9>       `-IntegerLiteral 0x13e925cc8 <col:9> 'int' 0 ","21055":"`-FunctionDecl 0x13580de88  line:1:12 invalid ehci_execute 'int (int *, const char *)' static   |-ParmVarDecl 0x13580dd28 <col:25, col:37> col:37 referenced invalid p 'int *'   |-ParmVarDecl 0x13580dda8 <col:40, col:52> col:52 used action 'const char *'   `-CompoundStmt 0x13582aab8 <line:2:1, line:54:1>     |-DeclStmt 0x13580dfd8 <line:4:5, col:13>     | `-VarDecl 0x13580df70 <col:5, col:9> col:9 used endp 'int'     |-CallExpr 0x13580e398 <line:7:5, line:8:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13580e150 <line:7:5> 'int ()' Function 0x13580e098 'assert' 'int ()'     | `-BinaryOperator 0x13580e378 <col:12, line:8:24> 'int' contains-errors '||'     |   |-BinaryOperator 0x13580e318 <line:7:12, col:24> 'int' contains-errors '=='     |   | |-CXXDependentScopeMemberExpr 0x13580e190 <col:12, col:15> '<dependent type>' contains-errors lvalue ->async     |   | | `-RecoveryExpr 0x13580e170 <col:12> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x13580e2f8 <col:24> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x13580e358 <line:8:12, col:24> 'int' contains-errors '=='     |     |-CXXDependentScopeMemberExpr 0x13580e230 <col:12, col:15> '<dependent type>' contains-errors lvalue ->async     |     | `-RecoveryExpr 0x13580e210 <col:12> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x13580e338 <col:24> '<dependent type>' contains-errors lvalue     |-IfStmt 0x135828148 <line:10:5, line:13:5>     | |-RecoveryExpr 0x135827ec8 <line:10:9, col:42> '_Bool' contains-errors     | `-CompoundStmt 0x135828128 <col:45, line:13:5>     |   |-CallExpr 0x1358280b0 <line:11:9, col:30> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x135827fc8 <col:9> 'int ()' Function 0x135827f10 'fprintf' 'int ()'     |   | |-RecoveryExpr 0x135828090 <col:17> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x135828040 <col:25> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x135828118 <line:12:9, col:17>     |     `-UnaryOperator 0x135828100 <col:16, col:17> 'int' prefix '-'     |       `-IntegerLiteral 0x1358280e0 <col:17> 'int' 1     |-IfStmt 0x135828690 <line:15:5, line:19:5>     | |-BinaryOperator 0x135828408 <line:15:9, col:53> 'int' contains-errors '>'     | | |-CallExpr 0x1358283b8 <col:9, col:49> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x135828248 <col:9> 'int ()' Function 0x135828190 'get_field' 'int ()'     | | | |-CXXDependentScopeMemberExpr 0x1358282d0 <col:19, col:26> '<dependent type>' contains-errors lvalue .token     | | | | `-CXXDependentScopeMemberExpr 0x135828288 <col:19, col:22> '<dependent type>' contains-errors lvalue ->qtd     | | | |   `-RecoveryExpr 0x135828268 <col:19> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x135828398 <col:33> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1358283e8 <col:53> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x135828670 <col:64, line:19:5>     |   |-CallExpr 0x1358285f8 <line:16:9, line:17:35> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x135828508 <line:16:9> 'int ()' Function 0x135828450 'ehci_trace_guest_bug' 'int ()'     |   | |-CXXDependentScopeMemberExpr 0x135828590 <col:30, col:40> '<dependent type>' contains-errors lvalue ->ehci     |   | | `-CXXDependentScopeMemberExpr 0x135828548 <col:30, col:33> '<dependent type>' contains-errors lvalue ->queue     |   | |   `-RecoveryExpr 0x135828528 <col:30> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x1358285d8 <line:17:30> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x135828660 <line:18:9, col:17>     |     `-UnaryOperator 0x135828648 <col:16, col:17> 'int' prefix '-'     |       `-IntegerLiteral 0x135828628 <col:17> 'int' 1     |-IfStmt 0x135828a88 <line:21:5, line:23:5>     | |-UnaryOperator 0x1358288c8 <line:21:9, col:43> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x135828898 <col:10, col:43> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x135828790 <col:10> 'int ()' Function 0x1358286d8 'ehci_verify_pid' 'int ()'     | |   |-CXXDependentScopeMemberExpr 0x1358287d0 <col:26, col:29> '<dependent type>' contains-errors lvalue ->queue     | |   | `-RecoveryExpr 0x1358287b0 <col:26> '<dependent type>' contains-errors lvalue     | |   `-UnaryOperator 0x135828880 <col:36, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-CXXDependentScopeMemberExpr 0x135828838 <col:37, col:40> '<dependent type>' contains-errors lvalue ->qtd     | |       `-RecoveryExpr 0x135828818 <col:37> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x135828a70 <col:46, line:23:5>     |   `-CallExpr 0x135828a48 <line:22:9, col:36> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1358289c0 <col:9> 'int ()' Function 0x135828908 'ehci_queue_stopped' 'int ()'     |     `-CXXDependentScopeMemberExpr 0x135828a00 <col:28, col:31> '<dependent type>' contains-errors lvalue ->queue     |       `-RecoveryExpr 0x1358289e0 <col:28> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x135828ce0 <line:24:5, col:34> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x135828af0 <col:5, col:8> '<dependent type>' contains-errors lvalue ->pid     | | `-RecoveryExpr 0x135828ac8 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x135828aa8 <col:5> 'int *' lvalue ParmVar 0x13580dd28 'p' 'int *'     | `-CallExpr 0x135828cb8 <col:14, col:34> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x135828c18 <col:14> 'int ()' Function 0x135828b60 'ehci_get_pid' 'int ()'     |   `-UnaryOperator 0x135828ca0 <col:27, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-CXXDependentScopeMemberExpr 0x135828c58 <col:28, col:31> '<dependent type>' contains-errors lvalue ->qtd     |       `-RecoveryExpr 0x135828c38 <col:28> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x135828e48 <line:25:5, col:29> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x135828d90 <col:5, col:15> '<dependent type>' contains-errors lvalue ->last_pid     | | `-CXXDependentScopeMemberExpr 0x135828d48 <col:5, col:8> '<dependent type>' contains-errors lvalue ->queue     | |   `-RecoveryExpr 0x135828d20 <col:5> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x135828d00 <col:5> 'int *' lvalue ParmVar 0x13580dd28 'p' 'int *'     | `-CXXDependentScopeMemberExpr 0x135828e00 <col:26, col:29> '<dependent type>' contains-errors lvalue ->pid     |   `-RecoveryExpr 0x135828dd8 <col:26> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x135829058 <line:26:5, col:55> 'int' contains-errors '='     | |-DeclRefExpr 0x135828e68 <col:5> 'int' lvalue Var 0x13580df70 'endp' 'int'     | `-CallExpr 0x135829028 <col:12, col:55> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x135828e88 <col:12> 'int ()' Function 0x135828190 'get_field' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x135828f58 <col:22, col:35> '<dependent type>' contains-errors lvalue .epchar     |   | `-CXXDependentScopeMemberExpr 0x135828f10 <col:22, col:32> '<dependent type>' contains-errors lvalue ->qh     |   |   `-CXXDependentScopeMemberExpr 0x135828ec8 <col:22, col:25> '<dependent type>' contains-errors lvalue ->queue     |   |     `-RecoveryExpr 0x135828ea8 <col:22> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x135829008 <col:43> '<dependent type>' contains-errors lvalue     |-IfStmt 0x135829e20 <line:29:5, line:39:5>     | |-RecoveryExpr 0x135829350 <line:29:9, col:21> '_Bool' contains-errors     | `-CompoundStmt 0x135829e00 <col:38, line:39:5>     |   |-IfStmt 0x135829558 <line:30:9, line:32:9>     |   | |-BinaryOperator 0x1358294d8 <line:30:13, col:38> 'int' contains-errors '!='     |   | | |-CallExpr 0x135829490 <col:13, col:33> '<dependent type>' contains-errors     |   | | | |-DeclRefExpr 0x135829450 <col:13> 'int ()' Function 0x135829398 'ehci_init_transfer' 'int ()'     |   | | | `-RecoveryExpr 0x135829470 <col:32> '<dependent type>' contains-errors lvalue     |   | | `-IntegerLiteral 0x1358294b8 <col:38> 'int' 0     |   | `-CompoundStmt 0x135829540 <col:41, line:32:9>     |   |   `-ReturnStmt 0x135829530 <line:31:13, col:21>     |   |     `-UnaryOperator 0x135829518 <col:20, col:21> 'int' prefix '-'     |   |       `-IntegerLiteral 0x1358294f8 <col:21> 'int' 1     |   `-CallExpr 0x135829d38 <line:37:9, col:43> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x135829c18 <col:9> 'int ()' Function 0x135829b60 'usb_packet_map' 'int ()'     |     |-UnaryOperator 0x135829ca0 <col:24, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | `-CXXDependentScopeMemberExpr 0x135829c58 <col:25, col:28> '<dependent type>' contains-errors lvalue ->packet     |     |   `-RecoveryExpr 0x135829c38 <col:25> '<dependent type>' contains-errors lvalue     |     `-UnaryOperator 0x135829d20 <col:36, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-CXXDependentScopeMemberExpr 0x135829cd8 <col:37, col:40> '<dependent type>' contains-errors lvalue ->sgl     |         `-RecoveryExpr 0x135829cb8 <col:37> '<dependent type>' contains-errors lvalue     |-CallExpr 0x135829fe8 <line:41:5, col:53> '<dependent type>' contains-errors     | |-DeclRefExpr 0x135829f20 <col:5> 'int ()' Function 0x135829e68 'trace_usb_ehci_packet_action' 'int ()'     | |-CXXDependentScopeMemberExpr 0x135829f60 <col:34, col:37> '<dependent type>' contains-errors lvalue ->queue     | | `-RecoveryExpr 0x135829f40 <col:34> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x135829fa8 <col:44> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x135829fc8 <col:47> 'const char *' lvalue ParmVar 0x13580dda8 'action' 'const char *'     |-CallExpr 0x13582a250 <line:42:5, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13582a100 <col:5> 'int ()' Function 0x13582a048 'usb_handle_packet' 'int ()'     | |-CXXDependentScopeMemberExpr 0x13582a188 <col:23, col:33> '<dependent type>' contains-errors lvalue ->dev     | | `-CXXDependentScopeMemberExpr 0x13582a140 <col:23, col:26> '<dependent type>' contains-errors lvalue ->queue     | |   `-RecoveryExpr 0x13582a120 <col:23> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x13582a238 <col:38, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x13582a1f0 <col:39, col:42> '<dependent type>' contains-errors lvalue ->packet     |     `-RecoveryExpr 0x13582a1d0 <col:39> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13582a890 <line:43:5, line:46:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13582a360 <line:43:5> 'int ()' Function 0x13582a2a8 'DPRINTF' 'int ()'     | |-StringLiteral 0x13582a3c0 <col:13, line:44:13> 'char[7]' lvalue \"STRSTR\"     | |-CXXDependentScopeMemberExpr 0x13582a450 <col:20, col:30> '<dependent type>' contains-errors lvalue ->qhaddr     | | `-CXXDependentScopeMemberExpr 0x13582a408 <col:20, col:23> '<dependent type>' contains-errors lvalue ->queue     | |   `-RecoveryExpr 0x13582a3e8 <col:20> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x13582a500 <col:38, col:45> '<dependent type>' contains-errors lvalue .next     | | `-CXXDependentScopeMemberExpr 0x13582a4b8 <col:38, col:41> '<dependent type>' contains-errors lvalue ->qtd     | |   `-RecoveryExpr 0x13582a498 <col:38> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x13582a568 <line:45:13, col:16> '<dependent type>' contains-errors lvalue ->qtdaddr     | | `-RecoveryExpr 0x13582a548 <col:13> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x13582a5d0 <col:25, col:28> '<dependent type>' contains-errors lvalue ->pid     | | `-RecoveryExpr 0x13582a5b0 <col:25> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x13582a6c8 <col:33, col:47> '<dependent type>' contains-errors lvalue .size     | | `-CXXDependentScopeMemberExpr 0x13582a680 <col:33, col:43> '<dependent type>' contains-errors lvalue .iov     | |   `-CXXDependentScopeMemberExpr 0x13582a638 <col:33, col:36> '<dependent type>' contains-errors lvalue ->packet     | |     `-RecoveryExpr 0x13582a618 <col:33> '<dependent type>' contains-errors lvalue     | |-DeclRefExpr 0x13582a710 <col:53> 'int' lvalue Var 0x13580df70 'endp' 'int'     | |-CXXDependentScopeMemberExpr 0x13582a798 <col:59, col:69> '<dependent type>' contains-errors lvalue .status     | | `-CXXDependentScopeMemberExpr 0x13582a750 <col:59, col:62> '<dependent type>' contains-errors lvalue ->packet     | |   `-RecoveryExpr 0x13582a730 <col:59> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x13582a848 <line:46:13, col:23> '<dependent type>' contains-errors lvalue .actual_length     |   `-CXXDependentScopeMemberExpr 0x13582a800 <col:13, col:16> '<dependent type>' contains-errors lvalue ->packet     |     `-RecoveryExpr 0x13582a7e0 <col:13> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13582aa68 <line:48:5, line:51:5>     | |-RecoveryExpr 0x13582a9a8 <line:48:9, col:35> '_Bool' contains-errors     | `-CompoundStmt 0x13582aa50 <col:46, line:51:5>     |   `-ReturnStmt 0x13582aa40 <line:50:9, col:17>     |     `-UnaryOperator 0x13582aa28 <col:16, col:17> 'int' prefix '-'     |       `-IntegerLiteral 0x13582aa08 <col:17> 'int' 1     `-ReturnStmt 0x13582aaa8 <line:53:5, col:12>       `-IntegerLiteral 0x13582aa88 <col:12> 'int' 1 ","21175":"`-FunctionDecl 0x1368834e8  line:1:1 invalid xmlMallocLoc 'int (int, const char *, int)'   |-ParmVarDecl 0x1368832f0 <col:14, col:21> col:21 invalid size 'int'   |-ParmVarDecl 0x136883370 <col:27, col:40> col:40 used file 'const char *'   |-ParmVarDecl 0x1368833f0 <col:46, col:50> col:50 used line 'int'   `-CompoundStmt 0x13700ee80 <line:2:1, line:56:1>     |-DeclStmt 0x136883640 <line:4:5, col:14>     | `-VarDecl 0x1368835d8 <col:5, col:11> col:11 used ret 'void *'     |-IfStmt 0x1368838d8 <line:6:5, col:43>     | |-UnaryOperator 0x1368836d8 <col:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1368836c0 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x1368836a0 <col:10> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x1368838b8 <col:29, col:43> 'int'     |   `-ImplicitCastExpr 0x1368838a0 <col:29> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x136883850 <col:29> 'int ()' Function 0x136883798 'xmlInitMemory' 'int ()'     |-IfStmt 0x13700e788 <line:16:5, line:21:5>     | |-UnaryOperator 0x136883978 <line:16:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x136883960 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x136883940 <col:10> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13700e768 <col:13, line:21:5>     |   |-CallExpr 0x13700e5b8 <line:17:2, line:18:8> 'int'     |   | |-ImplicitCastExpr 0x13700e5a0 <line:17:2> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x13700e4b8 <col:2> 'int ()' Function 0x13700e400 'xmlGenericError' 'int ()'     |   | |-ImplicitCastExpr 0x13700e5e8 <col:18> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x13700e580 <col:18> 'int ()' Function 0x13700e400 'xmlGenericError' 'int ()'     |   | `-ImplicitCastExpr 0x13700e600 <line:18:3> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x13700e530 <col:3> 'char[4]' lvalue \"STR\"     |   `-CallExpr 0x13700e730 <line:19:2, col:16> 'int'     |     `-ImplicitCastExpr 0x13700e718 <col:2> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x13700e6f8 <col:2> 'int ()' Function 0x13700e640 'xmlMemoryDump' 'int ()'     |-IfStmt 0x13700ebd0 <line:42:5, col:64>     | |-RecoveryExpr 0x13700ea78 <col:9, col:33> '_Bool' contains-errors     | `-CallExpr 0x13700ebb0 <col:44, col:64> 'int'     |   `-ImplicitCastExpr 0x13700eb98 <col:44> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x13700eb78 <col:44> 'int ()' Function 0x13700eac0 'xmlMallocBreakpoint' 'int ()'     `-IfStmt 0x13700ee60 <line:46:5, line:51:5>       |-RecoveryExpr 0x13700ed30 <line:46:9, col:31> '_Bool' contains-errors       `-CompoundStmt 0x13700ee48 <col:36, line:51:5>         `-CallExpr 0x13700ee28 <line:50:2, col:22> 'int'           `-ImplicitCastExpr 0x13700ee10 <col:2> 'int (*)()' <FunctionToPointerDecay>             `-DeclRefExpr 0x13700edf0 <col:2> 'int ()' Function 0x13700eac0 'xmlMallocBreakpoint' 'int ()' ","20327":"`-FunctionDecl 0x14980df30  line:1:17 invalid FindPuttygenCompatibleSwitch 'int (int *, const int) __attribute__((fastcall))':'int (int *, const int)'   |-ParmVarDecl 0x14980dd28 <line:2:3, col:20> col:20 invalid Params 'int *'   |-ParmVarDecl 0x14980dda8 <col:28, <invalid sloc>> col:48 invalid 'const int'   `-CompoundStmt 0x149828468 <line:3:1, line:16:1>     |-IfStmt 0x149828400 <line:5:3, line:14:3>     | |-UnaryOperator 0x14980e068 <line:5:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14980e050 <col:8> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x14980e030 <col:8> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14980e3c8 <line:6:3, line:14:3>     |   |-RecoveryExpr 0x14980e0b0 <line:7:5> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x14980e3a8 <line:9:5, line:13:5>     |     |-RecoveryExpr 0x14980e2e0 <line:9:9, col:36> '_Bool' contains-errors     |     `-CompoundStmt 0x14980e398 <line:10:5, line:13:5>     `-ReturnStmt 0x149828458 <line:15:3, col:10>       `-RecoveryExpr 0x149828438 <col:10> '<dependent type>' contains-errors lvalue ","21186":"`-FunctionDecl 0x142027400  line:2:20 invalid skb_defer_rx_timestamp 'int (struct sk_buff *)' static inline   |-ParmVarDecl 0x14200e268 <col:43, col:59> col:59 skb 'struct sk_buff *'   `-CompoundStmt 0x1420274c8 <line:3:1, line:4:15> ","20802":"`-FunctionDecl 0x1451289c8  line:1:1 invalid SdMmcHcInitHost 'int (int)'   |-ParmVarDecl 0x1451288f0 <line:2:3, col:6> col:6 invalid SD_MMC_HC_PRIVATE_DATA 'int'   `-CompoundStmt 0x145142a00 <line:5:1, line:75:1>     |-IfStmt 0x145142298 <line:14:3, line:26:3>     | |-BinaryOperator 0x145128ca0 <line:14:7, col:54> 'int' contains-errors '&&'     | | |-BinaryOperator 0x145128bd8 <col:7, col:20> 'int' contains-errors '!='     | | | |-RecoveryExpr 0x145128b98 <col:7> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x145128bb8 <col:20> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x145128c80 <col:28, col:54> 'int' contains-errors '!='     | |   |-CXXDependentScopeMemberExpr 0x145128c18 <col:28, col:39> '<dependent type>' contains-errors lvalue ->NotifyPhase     | |   | `-RecoveryExpr 0x145128bf8 <col:28> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x145128c60 <col:54> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x145142280 <col:60, line:26:3>     |   `-IfStmt 0x145142260 <line:20:5, line:25:5>     |     |-CallExpr 0x145142000 <line:20:9, col:26> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x145128f60 <col:9> 'int ()' Function 0x145128ea8 'EFI_ERROR' 'int ()'     |     | `-RecoveryExpr 0x145128fc0 <col:20> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x145142250 <col:29, line:25:5>     |-IfStmt 0x145142408 <line:32:3, line:34:3>     | |-RecoveryExpr 0x1451423d8 <line:32:7, col:24> '_Bool' contains-errors     | `-CompoundStmt 0x1451423f8 <col:27, line:34:3>     |-IfStmt 0x1451425b8 <line:44:3, line:46:3>     | |-RecoveryExpr 0x145142588 <line:44:7, col:24> '_Bool' contains-errors     | `-CompoundStmt 0x1451425a8 <col:27, line:46:3>     |-IfStmt 0x145142728 <line:49:3, line:51:3>     | |-RecoveryExpr 0x1451426f8 <line:49:7, col:24> '_Bool' contains-errors     | `-CompoundStmt 0x145142718 <col:27, line:51:3>     |-IfStmt 0x145142898 <line:54:3, line:56:3>     | |-RecoveryExpr 0x145142868 <line:54:7, col:24> '_Bool' contains-errors     | `-CompoundStmt 0x145142888 <col:27, line:56:3>     `-IfStmt 0x1451429e0 <line:62:3, line:73:3>       |-RecoveryExpr 0x1451428b8 <line:62:7, col:54> '_Bool' contains-errors       `-CompoundStmt 0x1451429c8 <col:60, line:73:3>         `-IfStmt 0x1451429a8 <line:68:5, line:72:5>           |-RecoveryExpr 0x1451428f8 <line:68:9, col:26> '_Bool' contains-errors           `-CompoundStmt 0x145142998 <col:29, line:72:5> ","21223":"`-FunctionDecl 0x12100de38  line:1:1 TEST_F 'int (int, int)'   |-ParmVarDecl 0x12100dd58 <col:8> col:8 QueryPlannerTest 'int'   |-ParmVarDecl 0x12100dcd8 <col:26> col:26 ElemMatchTwoFields 'int'   `-CompoundStmt 0x121027240 <col:46, line:10:1>     |-CallExpr 0x1210268c8 <line:2:5, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12100e060 <col:5> 'int ()' Function 0x12100dfa8 'addIndex' 'int ()'     | `-CallExpr 0x1210268a0 <col:14, col:29> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12100e160 <col:14> 'int ()' Function 0x12100e0a8 'BSON' 'int ()'     |   `-RecoveryExpr 0x121026870 <col:19, col:28> '<dependent type>' contains-errors lvalue     |     |-StringLiteral 0x12100e1c0 <col:19> 'char[4]' lvalue \"STR\"     |     `-IntegerLiteral 0x12100e1e0 <col:28> 'int' 1     |-CallExpr 0x1210269e0 <line:3:5, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1210268f0 <col:5> 'int ()' Function 0x12100dfa8 'addIndex' 'int ()'     | `-CallExpr 0x1210269b8 <col:14, col:29> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x121026910 <col:14> 'int ()' Function 0x12100e0a8 'BSON' 'int ()'     |   `-RecoveryExpr 0x121026988 <col:19, col:28> '<dependent type>' contains-errors lvalue     |     |-StringLiteral 0x121026930 <col:19> 'char[4]' lvalue \"STR\"     |     `-IntegerLiteral 0x121026950 <col:28> 'int' 1     |-CallExpr 0x121026cd0 <line:4:5, col:29> 'int'     | |-ImplicitCastExpr 0x121026cb8 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x121026ae8 <col:5> 'int ()' Function 0x121026a30 'runQuery' 'int ()'     | `-CallExpr 0x121026c78 <col:14, col:28> 'int'     |   |-ImplicitCastExpr 0x121026c60 <col:14> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x121026be8 <col:14> 'int ()' Function 0x121026b30 'fromjson' 'int ()'     |   `-ImplicitCastExpr 0x121026ca0 <col:23> 'char *' <ArrayToPointerDecay>     |     `-StringLiteral 0x121026c08 <col:23> 'char[4]' lvalue \"STR\"     |-CallExpr 0x121026f68 <line:6:5, col:40> 'int'     | |-ImplicitCastExpr 0x121026f50 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x121026dd8 <col:5> 'int ()' Function 0x121026d20 'ASSERT_EQUALS' 'int ()'     | |-CallExpr 0x121026f10 <col:19, col:35> 'int'     | | `-ImplicitCastExpr 0x121026ef8 <col:19> 'int (*)()' <FunctionToPointerDecay>     | |   `-DeclRefExpr 0x121026ed8 <col:19> 'int ()' Function 0x121026e20 'getNumSolutions' 'int ()'     | `-IntegerLiteral 0x121026f30 <col:38> 'unsigned int' 3     |-CallExpr 0x1210270d0 <line:7:5, col:31> 'int'     | |-ImplicitCastExpr 0x1210270b8 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x121027078 <col:5> 'int ()' Function 0x121026fc0 'assertSolutionExists' 'int ()'     | `-ImplicitCastExpr 0x1210270f8 <col:26> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x121027098 <col:26> 'char[4]' lvalue \"STR\"     |-CallExpr 0x121027168 <line:8:5, col:31> 'int'     | |-ImplicitCastExpr 0x121027150 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x121027110 <col:5> 'int ()' Function 0x121026fc0 'assertSolutionExists' 'int ()'     | `-ImplicitCastExpr 0x121027190 <col:26> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x121027130 <col:26> 'char[4]' lvalue \"STR\"     `-CallExpr 0x121027200 <line:9:5, col:31> 'int'       |-ImplicitCastExpr 0x1210271e8 <col:5> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x1210271a8 <col:5> 'int ()' Function 0x121026fc0 'assertSolutionExists' 'int ()'       `-ImplicitCastExpr 0x121027228 <col:26> 'char *' <ArrayToPointerDecay>         `-StringLiteral 0x1210271c8 <col:26> 'char[4]' lvalue \"STR\" ","20242":"`-FunctionDecl 0x13a928750  line:1:13 nested_vmcb02_prepare_control 'void (struct vcpu_svm *)' static   |-ParmVarDecl 0x13a928648 <col:43, col:60> col:60 used svm 'struct vcpu_svm *'   `-CompoundStmt 0x13b00ad78 <line:2:1, line:48:1>     |-DeclStmt 0x13a940b68 <line:3:2, col:71>     | `-VarDecl 0x13a940a78 <col:2, col:12> col:12 invalid mask 'const int'     |-DeclStmt 0x13a940de0 <line:4:2, col:36>     | |-RecordDecl 0x13a940b80 <col:2, col:9> col:9 struct kvm_vcpu     | `-VarDecl 0x13a940ce8 <col:2, col:32> col:19 used vcpu 'struct kvm_vcpu *' cinit     |   `-UnaryOperator 0x13a940db0 <col:26, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x13a940d88 <col:27, col:32> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13a940d50 <col:27> 'struct vcpu_svm *' lvalue ParmVar 0x13a928648 'svm' 'struct vcpu_svm *'     |-CallExpr 0x13a941100 <line:9:2, col:44> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13a940f10 <col:2> 'int ()' Function 0x13a940e58 'WARN_ON' 'int ()'     | `-CallExpr 0x13a9410d8 <col:10, col:43> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13a941010 <col:10> 'int ()' Function 0x13a940f58 'kvm_apicv_activated' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x13a941090 <col:30, col:40> '<dependent type>' contains-errors lvalue .kvm     |     `-RecoveryExpr 0x13a941068 <col:30, col:35> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13a941030 <col:30> 'struct vcpu_svm *' lvalue ParmVar 0x13a928648 'svm' 'struct vcpu_svm *'     |-BinaryOperator 0x13a941350 <line:12:2, col:59> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13a9411d0 <col:2, col:21> '<dependent type>' contains-errors lvalue .nested_ctl     | | `-CXXDependentScopeMemberExpr 0x13a941188 <col:2, col:13> '<dependent type>' contains-errors lvalue ->control     | |   `-RecoveryExpr 0x13a941160 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x13a941128 <col:2> 'struct vcpu_svm *' lvalue ParmVar 0x13a928648 'svm' 'struct vcpu_svm *'     | `-CXXDependentScopeMemberExpr 0x13a941308 <col:34, col:59> '<dependent type>' contains-errors lvalue .nested_ctl     |   `-CXXDependentScopeMemberExpr 0x13a9412c0 <col:34, col:51> '<dependent type>' contains-errors lvalue ->control     |     `-CXXDependentScopeMemberExpr 0x13a941278 <col:34, col:46> '<dependent type>' contains-errors lvalue .ptr     |       `-RecoveryExpr 0x13a941250 <col:34, col:39> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x13a941218 <col:34> 'struct vcpu_svm *' lvalue ParmVar 0x13a928648 'svm' 'struct vcpu_svm *'     |-BinaryOperator 0x13a941598 <line:13:2, col:61> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13a941418 <col:2, col:21> '<dependent type>' contains-errors lvalue .iopm_base_pa     | | `-CXXDependentScopeMemberExpr 0x13a9413d0 <col:2, col:13> '<dependent type>' contains-errors lvalue ->control     | |   `-RecoveryExpr 0x13a9413a8 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x13a941370 <col:2> 'struct vcpu_svm *' lvalue ParmVar 0x13a928648 'svm' 'struct vcpu_svm *'     | `-CXXDependentScopeMemberExpr 0x13a941550 <col:36, col:61> '<dependent type>' contains-errors lvalue .iopm_base_pa     |   `-CXXDependentScopeMemberExpr 0x13a941508 <col:36, col:53> '<dependent type>' contains-errors lvalue ->control     |     `-CXXDependentScopeMemberExpr 0x13a9414c0 <col:36, col:48> '<dependent type>' contains-errors lvalue .ptr     |       `-RecoveryExpr 0x13a941498 <col:36, col:41> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x13a941460 <col:36> 'struct vcpu_svm *' lvalue ParmVar 0x13a928648 'svm' 'struct vcpu_svm *'     |-BinaryOperator 0x13a9417e0 <line:14:2, col:62> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13a941660 <col:2, col:21> '<dependent type>' contains-errors lvalue .msrpm_base_pa     | | `-CXXDependentScopeMemberExpr 0x13a941618 <col:2, col:13> '<dependent type>' contains-errors lvalue ->control     | |   `-RecoveryExpr 0x13a9415f0 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x13a9415b8 <col:2> 'struct vcpu_svm *' lvalue ParmVar 0x13a928648 'svm' 'struct vcpu_svm *'     | `-CXXDependentScopeMemberExpr 0x13a941798 <col:37, col:62> '<dependent type>' contains-errors lvalue .msrpm_base_pa     |   `-CXXDependentScopeMemberExpr 0x13a941750 <col:37, col:54> '<dependent type>' contains-errors lvalue ->control     |     `-CXXDependentScopeMemberExpr 0x13a941708 <col:37, col:49> '<dependent type>' contains-errors lvalue .ptr     |       `-RecoveryExpr 0x13a9416e0 <col:37, col:42> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x13a9416a8 <col:37> 'struct vcpu_svm *' lvalue ParmVar 0x13a928648 'svm' 'struct vcpu_svm *'     |-BinaryOperator 0x13a941948 <line:19:2, col:31> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13a9418a8 <col:2, col:21> '<dependent type>' contains-errors lvalue .tlb_ctl     | | `-CXXDependentScopeMemberExpr 0x13a941860 <col:2, col:13> '<dependent type>' contains-errors lvalue ->control     | |   `-RecoveryExpr 0x13a941838 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x13a941800 <col:2> 'struct vcpu_svm *' lvalue ParmVar 0x13a928648 'svm' 'struct vcpu_svm *'     | `-RecoveryExpr 0x13a941928 <col:31> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13b008f00 <line:22:2, line:23:35>     | |-CallExpr 0x13b008d48 <line:22:6, col:28> 'int'     | | |-ImplicitCastExpr 0x13b008d30 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x13b008cb8 <col:6> 'int ()' Function 0x13b008c00 'nested_npt_enabled' 'int ()'     | | `-ImplicitCastExpr 0x13b008d70 <col:25> 'struct vcpu_svm *' <LValueToRValue>     | |   `-DeclRefExpr 0x13b008cd8 <col:25> 'struct vcpu_svm *' lvalue ParmVar 0x13a928648 'svm' 'struct vcpu_svm *'     | `-CallExpr 0x13b008ec0 <line:23:3, col:35> 'int' contains-errors     |   |-ImplicitCastExpr 0x13b008ea8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x13b008e68 <col:3> 'int ()' Function 0x13b008db0 'nested_svm_init_mmu_context' 'int ()'     |   `-ImplicitCastExpr 0x13b008ee8 <col:31> 'struct kvm_vcpu *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x13b008e88 <col:31> 'struct kvm_vcpu *' contains-errors lvalue Var 0x13a940ce8 'vcpu' 'struct kvm_vcpu *'     |-BinaryOperator 0x13b009290 <line:25:2, line:26:46> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13b008fc8 <line:25:2, col:21> '<dependent type>' contains-errors lvalue .tsc_offset     | | `-CXXDependentScopeMemberExpr 0x13b008f80 <col:2, col:13> '<dependent type>' contains-errors lvalue ->control     | |   `-RecoveryExpr 0x13b008f58 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x13b008f20 <col:2> 'struct vcpu_svm *' lvalue ParmVar 0x13a928648 'svm' 'struct vcpu_svm *'     | `-BinaryOperator 0x13b009270 <col:34, line:26:46> '<dependent type>' contains-errors '='     |   |-CXXDependentScopeMemberExpr 0x13b009070 <line:25:34, col:45> '<dependent type>' contains-errors lvalue .tsc_offset     |   | `-RecoveryExpr 0x13b009048 <col:34, col:40> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x13b009010 <col:34> 'struct kvm_vcpu *' contains-errors lvalue Var 0x13a940ce8 'vcpu' 'struct kvm_vcpu *'     |   `-BinaryOperator 0x13b009250 <line:26:3, col:46> '<dependent type>' contains-errors '+'     |     |-CXXDependentScopeMemberExpr 0x13b009118 <col:3, col:14> '<dependent type>' contains-errors lvalue .l1_tsc_offset     |     | `-RecoveryExpr 0x13b0090f0 <col:3, col:9> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x13b0090b8 <col:3> 'struct kvm_vcpu *' contains-errors lvalue Var 0x13a940ce8 'vcpu' 'struct kvm_vcpu *'     |     `-CXXDependentScopeMemberExpr 0x13b009208 <col:30, col:46> '<dependent type>' contains-errors lvalue .tsc_offset     |       `-CXXDependentScopeMemberExpr 0x13b0091c0 <col:30, col:42> '<dependent type>' contains-errors lvalue .ctl     |         `-RecoveryExpr 0x13b009198 <col:30, col:35> '<dependent type>' contains-errors lvalue     |           `-DeclRefExpr 0x13b009160 <col:30> 'struct vcpu_svm *' lvalue ParmVar 0x13a928648 'svm' 'struct vcpu_svm *'     |-BinaryOperator 0x13b0096d8 <line:28:2, line:30:43> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13b009358 <line:28:2, col:21> '<dependent type>' contains-errors lvalue .int_ctl     | | `-CXXDependentScopeMemberExpr 0x13b009310 <col:2, col:13> '<dependent type>' contains-errors lvalue ->control     | |   `-RecoveryExpr 0x13b0092e8 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x13b0092b0 <col:2> 'struct vcpu_svm *' lvalue ParmVar 0x13a928648 'svm' 'struct vcpu_svm *'     | `-BinaryOperator 0x13b0096b8 <line:29:3, line:30:43> '<dependent type>' contains-errors '|'     |   |-ParenExpr 0x13b009500 <line:29:3, col:35> '<dependent type>' contains-errors     |   | `-BinaryOperator 0x13b0094e0 <col:4, col:31> '<dependent type>' contains-errors '&'     |   |   |-CXXDependentScopeMemberExpr 0x13b009448 <col:4, col:20> '<dependent type>' contains-errors lvalue .int_ctl     |   |   | `-CXXDependentScopeMemberExpr 0x13b009400 <col:4, col:16> '<dependent type>' contains-errors lvalue .ctl     |   |   |   `-RecoveryExpr 0x13b0093d8 <col:4, col:9> '<dependent type>' contains-errors lvalue     |   |   |     `-DeclRefExpr 0x13b0093a0 <col:4> 'struct vcpu_svm *' lvalue ParmVar 0x13a928648 'svm' 'struct vcpu_svm *'     |   |   `-UnaryOperator 0x13b0094c8 <col:30, col:31> '<dependent type>' contains-errors prefix '~' cannot overflow     |   |     `-ImplicitCastExpr 0x13b0094b0 <col:31> '<dependent type>' contains-errors <LValueToRValue>     |   |       `-RecoveryExpr 0x13b009490 <col:31> '<dependent type>' contains-errors lvalue     |   `-ParenExpr 0x13b009698 <line:30:3, col:43> '<dependent type>' contains-errors     |     `-BinaryOperator 0x13b009678 <col:4, col:39> '<dependent type>' contains-errors '&'     |       |-CXXDependentScopeMemberExpr 0x13b009610 <col:4, col:29> '<dependent type>' contains-errors lvalue .int_ctl     |       | `-CXXDependentScopeMemberExpr 0x13b0095c8 <col:4, col:21> '<dependent type>' contains-errors lvalue ->control     |       |   `-CXXDependentScopeMemberExpr 0x13b009580 <col:4, col:16> '<dependent type>' contains-errors lvalue .ptr     |       |     `-RecoveryExpr 0x13b009558 <col:4, col:9> '<dependent type>' contains-errors lvalue     |       |       `-DeclRefExpr 0x13b009520 <col:4> 'struct vcpu_svm *' lvalue ParmVar 0x13a928648 'svm' 'struct vcpu_svm *'     |       `-RecoveryExpr 0x13b009658 <col:39> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13b0098d8 <line:32:2, col:59> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13b0097a0 <col:2, col:21> '<dependent type>' contains-errors lvalue .virt_ext     | | `-CXXDependentScopeMemberExpr 0x13b009758 <col:2, col:13> '<dependent type>' contains-errors lvalue ->control     | |   `-RecoveryExpr 0x13b009730 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x13b0096f8 <col:2> 'struct vcpu_svm *' lvalue ParmVar 0x13a928648 'svm' 'struct vcpu_svm *'     | `-CXXDependentScopeMemberExpr 0x13b009890 <col:43, col:59> '<dependent type>' contains-errors lvalue .virt_ext     |   `-CXXDependentScopeMemberExpr 0x13b009848 <col:43, col:55> '<dependent type>' contains-errors lvalue .ctl     |     `-RecoveryExpr 0x13b009820 <col:43, col:48> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13b0097e8 <col:43> 'struct vcpu_svm *' lvalue ParmVar 0x13a928648 'svm' 'struct vcpu_svm *'     |-BinaryOperator 0x13b009ad8 <line:33:2, col:59> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13b0099a0 <col:2, col:21> '<dependent type>' contains-errors lvalue .int_vector     | | `-CXXDependentScopeMemberExpr 0x13b009958 <col:2, col:13> '<dependent type>' contains-errors lvalue ->control     | |   `-RecoveryExpr 0x13b009930 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x13b0098f8 <col:2> 'struct vcpu_svm *' lvalue ParmVar 0x13a928648 'svm' 'struct vcpu_svm *'     | `-CXXDependentScopeMemberExpr 0x13b009a90 <col:43, col:59> '<dependent type>' contains-errors lvalue .int_vector     |   `-CXXDependentScopeMemberExpr 0x13b009a48 <col:43, col:55> '<dependent type>' contains-errors lvalue .ctl     |     `-RecoveryExpr 0x13b009a20 <col:43, col:48> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13b0099e8 <col:43> 'struct vcpu_svm *' lvalue ParmVar 0x13a928648 'svm' 'struct vcpu_svm *'     |-BinaryOperator 0x13b00a0f0 <line:34:2, col:59> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13b009ba0 <col:2, col:21> '<dependent type>' contains-errors lvalue .int_state     | | `-CXXDependentScopeMemberExpr 0x13b009b58 <col:2, col:13> '<dependent type>' contains-errors lvalue ->control     | |   `-RecoveryExpr 0x13b009b30 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x13b009af8 <col:2> 'struct vcpu_svm *' lvalue ParmVar 0x13a928648 'svm' 'struct vcpu_svm *'     | `-CXXDependentScopeMemberExpr 0x13b00a0a8 <col:43, col:59> '<dependent type>' contains-errors lvalue .int_state     |   `-CXXDependentScopeMemberExpr 0x13b00a060 <col:43, col:55> '<dependent type>' contains-errors lvalue .ctl     |     `-RecoveryExpr 0x13b00a038 <col:43, col:48> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13b00a000 <col:43> 'struct vcpu_svm *' lvalue ParmVar 0x13a928648 'svm' 'struct vcpu_svm *'     |-BinaryOperator 0x13b00a2f0 <line:35:2, col:59> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13b00a1b8 <col:2, col:21> '<dependent type>' contains-errors lvalue .event_inj     | | `-CXXDependentScopeMemberExpr 0x13b00a170 <col:2, col:13> '<dependent type>' contains-errors lvalue ->control     | |   `-RecoveryExpr 0x13b00a148 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x13b00a110 <col:2> 'struct vcpu_svm *' lvalue ParmVar 0x13a928648 'svm' 'struct vcpu_svm *'     | `-CXXDependentScopeMemberExpr 0x13b00a2a8 <col:43, col:59> '<dependent type>' contains-errors lvalue .event_inj     |   `-CXXDependentScopeMemberExpr 0x13b00a260 <col:43, col:55> '<dependent type>' contains-errors lvalue .ctl     |     `-RecoveryExpr 0x13b00a238 <col:43, col:48> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13b00a200 <col:43> 'struct vcpu_svm *' lvalue ParmVar 0x13a928648 'svm' 'struct vcpu_svm *'     |-BinaryOperator 0x13b00a4f0 <line:36:2, col:59> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13b00a3b8 <col:2, col:21> '<dependent type>' contains-errors lvalue .event_inj_err     | | `-CXXDependentScopeMemberExpr 0x13b00a370 <col:2, col:13> '<dependent type>' contains-errors lvalue ->control     | |   `-RecoveryExpr 0x13b00a348 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x13b00a310 <col:2> 'struct vcpu_svm *' lvalue ParmVar 0x13a928648 'svm' 'struct vcpu_svm *'     | `-CXXDependentScopeMemberExpr 0x13b00a4a8 <col:43, col:59> '<dependent type>' contains-errors lvalue .event_inj_err     |   `-CXXDependentScopeMemberExpr 0x13b00a460 <col:43, col:55> '<dependent type>' contains-errors lvalue .ctl     |     `-RecoveryExpr 0x13b00a438 <col:43, col:48> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13b00a400 <col:43> 'struct vcpu_svm *' lvalue ParmVar 0x13a928648 'svm' 'struct vcpu_svm *'     |-BinaryOperator 0x13b00a6f0 <line:38:2, col:59> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13b00a5b8 <col:2, col:21> '<dependent type>' contains-errors lvalue .pause_filter_count     | | `-CXXDependentScopeMemberExpr 0x13b00a570 <col:2, col:13> '<dependent type>' contains-errors lvalue ->control     | |   `-RecoveryExpr 0x13b00a548 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x13b00a510 <col:2> 'struct vcpu_svm *' lvalue ParmVar 0x13a928648 'svm' 'struct vcpu_svm *'     | `-CXXDependentScopeMemberExpr 0x13b00a6a8 <col:43, col:59> '<dependent type>' contains-errors lvalue .pause_filter_count     |   `-CXXDependentScopeMemberExpr 0x13b00a660 <col:43, col:55> '<dependent type>' contains-errors lvalue .ctl     |     `-RecoveryExpr 0x13b00a638 <col:43, col:48> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13b00a600 <col:43> 'struct vcpu_svm *' lvalue ParmVar 0x13a928648 'svm' 'struct vcpu_svm *'     |-BinaryOperator 0x13b00a8f0 <line:39:2, col:59> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13b00a7b8 <col:2, col:21> '<dependent type>' contains-errors lvalue .pause_filter_thresh     | | `-CXXDependentScopeMemberExpr 0x13b00a770 <col:2, col:13> '<dependent type>' contains-errors lvalue ->control     | |   `-RecoveryExpr 0x13b00a748 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x13b00a710 <col:2> 'struct vcpu_svm *' lvalue ParmVar 0x13a928648 'svm' 'struct vcpu_svm *'     | `-CXXDependentScopeMemberExpr 0x13b00a8a8 <col:43, col:59> '<dependent type>' contains-errors lvalue .pause_filter_thresh     |   `-CXXDependentScopeMemberExpr 0x13b00a860 <col:43, col:55> '<dependent type>' contains-errors lvalue .ctl     |     `-RecoveryExpr 0x13b00a838 <col:43, col:48> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13b00a800 <col:43> 'struct vcpu_svm *' lvalue ParmVar 0x13a928648 'svm' 'struct vcpu_svm *'     |-CallExpr 0x13b00aa48 <line:41:2, col:38> 'int' contains-errors     | |-ImplicitCastExpr 0x13b00aa30 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13b00a9f0 <col:2> 'int ()' Function 0x13b00a938 'nested_svm_transition_tlb_flush' 'int ()'     | `-ImplicitCastExpr 0x13b00aa70 <col:34> 'struct kvm_vcpu *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x13b00aa10 <col:34> 'struct kvm_vcpu *' contains-errors lvalue Var 0x13a940ce8 'vcpu' 'struct kvm_vcpu *'     |-CallExpr 0x13b00abc0 <line:44:2, col:23> 'int' contains-errors     | |-ImplicitCastExpr 0x13b00aba8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13b00ab68 <col:2> 'int ()' Function 0x13b00aab0 'enter_guest_mode' 'int ()'     | `-ImplicitCastExpr 0x13b00abe8 <col:19> 'struct kvm_vcpu *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x13b00ab88 <col:19> 'struct kvm_vcpu *' contains-errors lvalue Var 0x13a940ce8 'vcpu' 'struct kvm_vcpu *'     `-CallExpr 0x13b00ad38 <line:47:2, col:23> 'int'       |-ImplicitCastExpr 0x13b00ad20 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x13b00ace0 <col:2> 'int ()' Function 0x13b00ac28 'recalc_intercepts' 'int ()'       `-ImplicitCastExpr 0x13b00ad60 <col:20> 'struct vcpu_svm *' <LValueToRValue>         `-DeclRefExpr 0x13b00ad00 <col:20> 'struct vcpu_svm *' lvalue ParmVar 0x13a928648 'svm' 'struct vcpu_svm *' ","20220":"`-FunctionDecl 0x12e1454a8  col:6 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x12e145600 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x12e145668 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x12e1456d0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x12e145550 <<invalid sloc>> Implicit 883 ","20881":"`-FunctionDecl 0x153940db8  line:1:30 dup_mnt_ns 'struct mnt_namespace *(struct mnt_namespace *, struct user_namespace *, struct fs_struct *)' static   |-ParmVarDecl 0x153928218 <col:41, col:63> col:63 used mnt_ns 'struct mnt_namespace *'   |-ParmVarDecl 0x153940a28 <line:2:3, col:26> col:26 used user_ns 'struct user_namespace *'   |-ParmVarDecl 0x153940bf8 <col:35, col:53> col:53 used fs 'struct fs_struct *'   `-CompoundStmt 0x15500ae88 <line:3:1, line:57:1>     |-DeclStmt 0x153940f50 <line:4:2, col:30>     | `-VarDecl 0x153940ee8 <col:2, col:24> col:24 used new_ns 'struct mnt_namespace *'     |-DeclStmt 0x153941278 <line:5:2, col:49>     | |-RecordDecl 0x153940f68 <col:2, col:9> col:9 struct vfsmount     | |-VarDecl 0x1539410d8 <col:2, col:29> col:19 used rootmnt 'struct vfsmount *' cinit     | | `-RecoveryExpr 0x153941170 <col:29> '<dependent type>' contains-errors lvalue     | `-VarDecl 0x1539411b8 <col:2, col:45> col:36 used pwdmnt 'struct vfsmount *' cinit     |   `-RecoveryExpr 0x153941238 <col:45> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x153941510 <line:6:2, col:21>     | |-RecordDecl 0x153941290 <col:2, col:9> col:9 struct mount     | |-VarDecl 0x1539413f8 <col:2, col:16> col:16 used p 'struct mount *'     | `-VarDecl 0x153941488 <col:2, col:20> col:20 used q 'struct mount *'     |-DeclStmt 0x153941680 <line:7:2, col:34>     | `-VarDecl 0x1539415b8 <col:2, col:30> col:16 used old 'struct mount *' cinit     |   `-RecoveryExpr 0x153941658 <col:22, col:30> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x153941620 <col:22> 'struct mnt_namespace *' lvalue ParmVar 0x153928218 'mnt_ns' 'struct mnt_namespace *'     |-DeclStmt 0x153941728 <line:8:2, col:19>     | `-VarDecl 0x1539416c0 <col:2, col:16> col:16 used new 'struct mount *'     |-DeclStmt 0x1539417c0 <line:9:2, col:16>     | `-VarDecl 0x153941758 <col:2, col:6> col:6 used copy_flags 'int'     |-BinaryOperator 0x154008c00 <line:11:2, col:31> 'struct mnt_namespace *' '='     | |-DeclRefExpr 0x1539417d8 <col:2> 'struct mnt_namespace *' lvalue Var 0x153940ee8 'new_ns' 'struct mnt_namespace *'     | `-ImplicitCastExpr 0x1539419d8 <col:11, col:31> 'struct mnt_namespace *' <IntegralToPointer>     |   `-CallExpr 0x153941998 <col:11, col:31> 'int'     |     |-ImplicitCastExpr 0x153941980 <col:11> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x153941910 <col:11> 'int ()' Function 0x153941858 'alloc_mnt_ns' 'int ()'     |     `-ImplicitCastExpr 0x1539419c0 <col:24> 'struct user_namespace *' <LValueToRValue>     |       `-DeclRefExpr 0x153941930 <col:24> 'struct user_namespace *' lvalue ParmVar 0x153940a28 'user_ns' 'struct user_namespace *'     |-IfStmt 0x154008de0 <line:12:2, line:13:10>     | |-CallExpr 0x154008d58 <line:12:6, col:19> 'int'     | | |-ImplicitCastExpr 0x154008d40 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x154008d00 <col:6> 'int ()' Function 0x154008c48 'IS_ERR' 'int ()'     | | `-ImplicitCastExpr 0x154008d80 <col:13> 'struct mnt_namespace *' <LValueToRValue>     | |   `-DeclRefExpr 0x154008d20 <col:13> 'struct mnt_namespace *' lvalue Var 0x153940ee8 'new_ns' 'struct mnt_namespace *'     | `-ReturnStmt 0x154008dd0 <line:13:3, col:10>     |   `-ImplicitCastExpr 0x154008db8 <col:10> 'struct mnt_namespace *' <LValueToRValue>     |     `-DeclRefExpr 0x154008d98 <col:10> 'struct mnt_namespace *' lvalue Var 0x153940ee8 'new_ns' 'struct mnt_namespace *'     |-CallExpr 0x154008f90 <line:15:2, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x154008ee0 <col:2> 'int ()' Function 0x154008e28 'down_write' 'int ()'     | `-UnaryOperator 0x154008f78 <col:13, col:14> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x154008f58 <col:14> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1540090a8 <line:17:2, col:29> 'int' contains-errors '='     | |-DeclRefExpr 0x154008fb8 <col:2> 'int' lvalue Var 0x153941758 'copy_flags' 'int'     | `-BinaryOperator 0x154009088 <col:15, col:29> '<dependent type>' contains-errors '|'     |   |-RecoveryExpr 0x154009048 <col:15> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x154009068 <col:29> '<dependent type>' contains-errors lvalue     |-IfStmt 0x154009220 <line:18:2, line:19:17>     | |-BinaryOperator 0x154009148 <line:18:6, col:25> 'int' contains-errors '!='     | | |-DeclRefExpr 0x1540090c8 <col:6> 'struct user_namespace *' lvalue ParmVar 0x153940a28 'user_ns' 'struct user_namespace *'     | | `-RecoveryExpr 0x154009120 <col:17, col:25> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1540090e8 <col:17> 'struct mnt_namespace *' lvalue ParmVar 0x153928218 'mnt_ns' 'struct mnt_namespace *'     | `-CompoundAssignOperator 0x1540091f0 <line:19:3, col:17> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |-DeclRefExpr 0x154009168 <col:3> 'int' lvalue Var 0x153941758 'copy_flags' 'int'     |   `-RecoveryExpr 0x1540091d0 <col:17> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x154009480 <line:20:2, col:52> 'struct mount *' contains-errors '='     | |-DeclRefExpr 0x154009240 <col:2> 'struct mount *' lvalue Var 0x1539416c0 'new' 'struct mount *'     | `-CallExpr 0x154009448 <col:8, col:52> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x154009340 <col:8> 'int ()' Function 0x154009288 'copy_tree' 'int ()'     |   |-DeclRefExpr 0x154009360 <col:18> 'struct mount *' contains-errors lvalue Var 0x1539415b8 'old' 'struct mount *'     |   |-CXXDependentScopeMemberExpr 0x1540093e0 <col:23, col:32> '<dependent type>' contains-errors lvalue .mnt_root     |   | `-RecoveryExpr 0x1540093b8 <col:23, col:28> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x154009380 <col:23> 'struct mount *' contains-errors lvalue Var 0x1539415b8 'old' 'struct mount *'     |   `-DeclRefExpr 0x154009428 <col:42> 'int' lvalue Var 0x153941758 'copy_flags' 'int'     |-IfStmt 0x154009a30 <line:21:2, line:25:2>     | |-CallExpr 0x1540094f8 <line:21:6, col:16> 'int'     | | |-ImplicitCastExpr 0x1540094e0 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x1540094a0 <col:6> 'int ()' Function 0x154008c48 'IS_ERR' 'int ()'     | | `-ImplicitCastExpr 0x154009520 <col:13> 'struct mount *' <LValueToRValue>     | |   `-DeclRefExpr 0x1540094c0 <col:13> 'struct mount *' lvalue Var 0x1539416c0 'new' 'struct mount *'     | `-CompoundStmt 0x154009a08 <col:19, line:25:2>     |   |-CallExpr 0x1540096c8 <line:22:3, col:26> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x154009618 <col:3> 'int ()' Function 0x154009560 'up_write' 'int ()'     |   | `-UnaryOperator 0x1540096b0 <col:12, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x154009690 <col:13> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x154009828 <line:23:3, col:21> 'int'     |   | |-ImplicitCastExpr 0x154009810 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x1540097d0 <col:3> 'int ()' Function 0x154009718 'free_mnt_ns' 'int ()'     |   | `-ImplicitCastExpr 0x154009850 <col:15> 'struct mnt_namespace *' <LValueToRValue>     |   |   `-DeclRefExpr 0x1540097f0 <col:15> 'struct mnt_namespace *' lvalue Var 0x153940ee8 'new_ns' 'struct mnt_namespace *'     |   `-ReturnStmt 0x1540099f8 <line:24:3, col:22>     |     `-ImplicitCastExpr 0x1540099e0 <col:10, col:22> 'struct mnt_namespace *' <IntegralToPointer>     |       `-CallExpr 0x1540099a0 <col:10, col:22> 'int'     |         |-ImplicitCastExpr 0x154009988 <col:10> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x154009948 <col:10> 'int ()' Function 0x154009890 'ERR_CAST' 'int ()'     |         `-ImplicitCastExpr 0x1540099c8 <col:19> 'struct mount *' <LValueToRValue>     |           `-DeclRefExpr 0x154009968 <col:19> 'struct mount *' lvalue Var 0x1539416c0 'new' 'struct mount *'     |-BinaryOperator 0x154009ad0 <line:26:2, col:17> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x154009a88 <col:2, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x154009a50 <col:2> 'struct mnt_namespace *' lvalue Var 0x153940ee8 'new_ns' 'struct mnt_namespace *'     | `-DeclRefExpr 0x154009ab0 <col:17> 'struct mount *' lvalue Var 0x1539416c0 'new' 'struct mount *'     |-CallExpr 0x155009bf0 <line:28:2, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x155009ae0 <col:2> 'int ()' Function 0x155009a28 'list_add_tail' 'int ()'     | |-UnaryOperator 0x155009b60 <col:16, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x155009b38 <col:17, col:25> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x155009b00 <col:17> 'struct mnt_namespace *' lvalue Var 0x153940ee8 'new_ns' 'struct mnt_namespace *'     | `-UnaryOperator 0x155009bd8 <col:31, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x155009bb0 <col:32, col:37> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x155009b78 <col:32> 'struct mount *' lvalue Var 0x1539416c0 'new' 'struct mount *'     |-BinaryOperator 0x155009d78 <line:32:2, col:6> 'struct mount *' contains-errors '='     | |-DeclRefExpr 0x155009d20 <col:2> 'struct mount *' lvalue Var 0x1539413f8 'p' 'struct mount *'     | `-ImplicitCastExpr 0x155009d60 <col:6> 'struct mount *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x155009d40 <col:6> 'struct mount *' contains-errors lvalue Var 0x1539415b8 'old' 'struct mount *'     |-BinaryOperator 0x155009df0 <line:33:2, col:6> 'struct mount *' '='     | |-DeclRefExpr 0x155009d98 <col:2> 'struct mount *' lvalue Var 0x153941488 'q' 'struct mount *'     | `-ImplicitCastExpr 0x155009dd8 <col:6> 'struct mount *' <LValueToRValue>     |   `-DeclRefExpr 0x155009db8 <col:6> 'struct mount *' lvalue Var 0x1539416c0 'new' 'struct mount *'     |-WhileStmt 0x15500ab40 <line:34:2, line:48:2>     | |-ImplicitCastExpr 0x155009e30 <line:34:9> 'struct mount *' <LValueToRValue>     | | `-DeclRefExpr 0x155009e10 <col:9> 'struct mount *' lvalue Var 0x1539413f8 'p' 'struct mount *'     | `-CompoundStmt 0x15500ab10 <col:12, line:48:2>     |   |-BinaryOperator 0x155009ec8 <line:35:3, col:15> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x155009e80 <col:3, col:6> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x155009e48 <col:3> 'struct mount *' lvalue Var 0x153941488 'q' 'struct mount *'     |   | `-DeclRefExpr 0x155009ea8 <col:15> 'struct mnt_namespace *' lvalue Var 0x153940ee8 'new_ns' 'struct mnt_namespace *'     |   |-IfStmt 0x15500a7a0 <line:36:3, line:45:3>     |   | |-ImplicitCastExpr 0x155009f08 <line:36:7> 'struct fs_struct *' <LValueToRValue>     |   | | `-DeclRefExpr 0x155009ee8 <col:7> 'struct fs_struct *' lvalue ParmVar 0x153940bf8 'fs' 'struct fs_struct *'     |   | `-CompoundStmt 0x15500a780 <col:11, line:45:3>     |   |   |-IfStmt 0x15500a3a0 <line:37:4, line:40:4>     |   |   | |-BinaryOperator 0x15500a040 <line:37:8, col:28> 'int' contains-errors '=='     |   |   | | |-UnaryOperator 0x155009f80 <col:8, col:12> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   | | | `-RecoveryExpr 0x155009f58 <col:9, col:12> '<dependent type>' contains-errors lvalue     |   |   | | |   `-DeclRefExpr 0x155009f20 <col:9> 'struct mount *' lvalue Var 0x1539413f8 'p' 'struct mount *'     |   |   | | `-CXXDependentScopeMemberExpr 0x155009ff8 <col:19, col:28> '<dependent type>' contains-errors lvalue .mnt     |   |   | |   `-RecoveryExpr 0x155009fd0 <col:19, col:23> '<dependent type>' contains-errors lvalue     |   |   | |     `-DeclRefExpr 0x155009f98 <col:19> 'struct fs_struct *' lvalue ParmVar 0x153940bf8 'fs' 'struct fs_struct *'     |   |   | `-CompoundStmt 0x15500a380 <col:33, line:40:4>     |   |   |   |-BinaryOperator 0x15500a2a8 <line:38:5, col:34> '<dependent type>' contains-errors '='     |   |   |   | |-CXXDependentScopeMemberExpr 0x15500a0c0 <col:5, col:14> '<dependent type>' contains-errors lvalue .mnt     |   |   |   | | `-RecoveryExpr 0x15500a098 <col:5, col:9> '<dependent type>' contains-errors lvalue     |   |   |   | |   `-DeclRefExpr 0x15500a060 <col:5> 'struct fs_struct *' lvalue ParmVar 0x153940bf8 'fs' 'struct fs_struct *'     |   |   |   | `-CallExpr 0x15500a280 <col:20, col:34> '<dependent type>' contains-errors     |   |   |   |   |-DeclRefExpr 0x15500a1e8 <col:20> 'int ()' Function 0x15500a130 'mntget' 'int ()'     |   |   |   |   `-UnaryOperator 0x15500a268 <col:27, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   |   |     `-RecoveryExpr 0x15500a240 <col:28, col:31> '<dependent type>' contains-errors lvalue     |   |   |   |       `-DeclRefExpr 0x15500a208 <col:28> 'struct mount *' lvalue Var 0x153941488 'q' 'struct mount *'     |   |   |   `-BinaryOperator 0x15500a360 <line:39:5, col:19> 'struct vfsmount *' contains-errors '='     |   |   |     |-DeclRefExpr 0x15500a2c8 <col:5> 'struct vfsmount *' contains-errors lvalue Var 0x1539410d8 'rootmnt' 'struct vfsmount *'     |   |   |     `-UnaryOperator 0x15500a348 <col:15, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   |       `-RecoveryExpr 0x15500a320 <col:16, col:19> '<dependent type>' contains-errors lvalue     |   |   |         `-DeclRefExpr 0x15500a2e8 <col:16> 'struct mount *' lvalue Var 0x1539413f8 'p' 'struct mount *'     |   |   `-IfStmt 0x15500a760 <line:41:4, line:44:4>     |   |     |-BinaryOperator 0x15500a4e0 <line:41:8, col:27> 'int' contains-errors '=='     |   |     | |-UnaryOperator 0x15500a420 <col:8, col:12> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |     | | `-RecoveryExpr 0x15500a3f8 <col:9, col:12> '<dependent type>' contains-errors lvalue     |   |     | |   `-DeclRefExpr 0x15500a3c0 <col:9> 'struct mount *' lvalue Var 0x1539413f8 'p' 'struct mount *'     |   |     | `-CXXDependentScopeMemberExpr 0x15500a498 <col:19, col:27> '<dependent type>' contains-errors lvalue .mnt     |   |     |   `-RecoveryExpr 0x15500a470 <col:19, col:23> '<dependent type>' contains-errors lvalue     |   |     |     `-DeclRefExpr 0x15500a438 <col:19> 'struct fs_struct *' lvalue ParmVar 0x153940bf8 'fs' 'struct fs_struct *'     |   |     `-CompoundStmt 0x15500a740 <col:32, line:44:4>     |   |       |-BinaryOperator 0x15500a668 <line:42:5, col:33> '<dependent type>' contains-errors '='     |   |       | |-CXXDependentScopeMemberExpr 0x15500a560 <col:5, col:13> '<dependent type>' contains-errors lvalue .mnt     |   |       | | `-RecoveryExpr 0x15500a538 <col:5, col:9> '<dependent type>' contains-errors lvalue     |   |       | |   `-DeclRefExpr 0x15500a500 <col:5> 'struct fs_struct *' lvalue ParmVar 0x153940bf8 'fs' 'struct fs_struct *'     |   |       | `-CallExpr 0x15500a640 <col:19, col:33> '<dependent type>' contains-errors     |   |       |   |-DeclRefExpr 0x15500a5a8 <col:19> 'int ()' Function 0x15500a130 'mntget' 'int ()'     |   |       |   `-UnaryOperator 0x15500a628 <col:26, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |       |     `-RecoveryExpr 0x15500a600 <col:27, col:30> '<dependent type>' contains-errors lvalue     |   |       |       `-DeclRefExpr 0x15500a5c8 <col:27> 'struct mount *' lvalue Var 0x153941488 'q' 'struct mount *'     |   |       `-BinaryOperator 0x15500a720 <line:43:5, col:18> 'struct vfsmount *' contains-errors '='     |   |         |-DeclRefExpr 0x15500a688 <col:5> 'struct vfsmount *' contains-errors lvalue Var 0x1539411b8 'pwdmnt' 'struct vfsmount *'     |   |         `-UnaryOperator 0x15500a708 <col:14, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |           `-RecoveryExpr 0x15500a6e0 <col:15, col:18> '<dependent type>' contains-errors lvalue     |   |             `-DeclRefExpr 0x15500a6a8 <col:15> 'struct mount *' lvalue Var 0x1539413f8 'p' 'struct mount *'     |   |-BinaryOperator 0x15500a9b0 <line:46:3, col:22> 'struct mount *' contains-errors '='     |   | |-DeclRefExpr 0x15500a7c0 <col:3> 'struct mount *' lvalue Var 0x1539413f8 'p' 'struct mount *'     |   | `-ImplicitCastExpr 0x15500a998 <col:7, col:22> 'struct mount *' contains-errors <IntegralToPointer>     |   |   `-CallExpr 0x15500a938 <col:7, col:22> 'int' contains-errors     |   |     |-ImplicitCastExpr 0x15500a920 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x15500a8c0 <col:7> 'int ()' Function 0x15500a808 'next_mnt' 'int ()'     |   |     |-ImplicitCastExpr 0x15500a968 <col:16> 'struct mount *' <LValueToRValue>     |   |     | `-DeclRefExpr 0x15500a8e0 <col:16> 'struct mount *' lvalue Var 0x1539413f8 'p' 'struct mount *'     |   |     `-ImplicitCastExpr 0x15500a980 <col:19> 'struct mount *' contains-errors <LValueToRValue>     |   |       `-DeclRefExpr 0x15500a900 <col:19> 'struct mount *' contains-errors lvalue Var 0x1539415b8 'old' 'struct mount *'     |   `-BinaryOperator 0x15500aaf0 <line:47:3, col:22> 'struct mount *' '='     |     |-DeclRefExpr 0x15500a9d0 <col:3> 'struct mount *' lvalue Var 0x153941488 'q' 'struct mount *'     |     `-ImplicitCastExpr 0x15500aad8 <col:7, col:22> 'struct mount *' <IntegralToPointer>     |       `-CallExpr 0x15500aa78 <col:7, col:22> 'int'     |         |-ImplicitCastExpr 0x15500aa60 <col:7> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x15500aa00 <col:7> 'int ()' Function 0x15500a808 'next_mnt' 'int ()'     |         |-ImplicitCastExpr 0x15500aaa8 <col:16> 'struct mount *' <LValueToRValue>     |         | `-DeclRefExpr 0x15500aa20 <col:16> 'struct mount *' lvalue Var 0x153941488 'q' 'struct mount *'     |         `-ImplicitCastExpr 0x15500aac0 <col:19> 'struct mount *' <LValueToRValue>     |           `-DeclRefExpr 0x15500aa40 <col:19> 'struct mount *' lvalue Var 0x1539416c0 'new' 'struct mount *'     |-IfStmt 0x15500ad30 <line:51:2, line:52:17>     | |-ImplicitCastExpr 0x15500aba0 <line:51:6> 'struct vfsmount *' contains-errors <LValueToRValue>     | | `-DeclRefExpr 0x15500ab80 <col:6> 'struct vfsmount *' contains-errors lvalue Var 0x1539410d8 'rootmnt' 'struct vfsmount *'     | `-CallExpr 0x15500acf0 <line:52:3, col:17> 'int' contains-errors     |   |-ImplicitCastExpr 0x15500acd8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x15500ac98 <col:3> 'int ()' Function 0x15500abe0 'mntput' 'int ()'     |   `-ImplicitCastExpr 0x15500ad18 <col:10> 'struct vfsmount *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x15500acb8 <col:10> 'struct vfsmount *' contains-errors lvalue Var 0x1539410d8 'rootmnt' 'struct vfsmount *'     |-IfStmt 0x15500ae20 <line:53:2, line:54:16>     | |-ImplicitCastExpr 0x15500ad70 <line:53:6> 'struct vfsmount *' contains-errors <LValueToRValue>     | | `-DeclRefExpr 0x15500ad50 <col:6> 'struct vfsmount *' contains-errors lvalue Var 0x1539411b8 'pwdmnt' 'struct vfsmount *'     | `-CallExpr 0x15500ade0 <line:54:3, col:16> 'int' contains-errors     |   |-ImplicitCastExpr 0x15500adc8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x15500ad88 <col:3> 'int ()' Function 0x15500abe0 'mntput' 'int ()'     |   `-ImplicitCastExpr 0x15500ae08 <col:10> 'struct vfsmount *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x15500ada8 <col:10> 'struct vfsmount *' contains-errors lvalue Var 0x1539411b8 'pwdmnt' 'struct vfsmount *'     `-ReturnStmt 0x15500ae78 <line:56:2, col:9>       `-ImplicitCastExpr 0x15500ae60 <col:9> 'struct mnt_namespace *' <LValueToRValue>         `-DeclRefExpr 0x15500ae40 <col:9> 'struct mnt_namespace *' lvalue Var 0x153940ee8 'new_ns' 'struct mnt_namespace *' ","20886":"`-FunctionDecl 0x10702f3d8  col:5 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x10702f4d8 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x10702f480 <<invalid sloc>> Implicit 873 ","20990":"`-FunctionDecl 0x12d128318  line:1:13 invalid update_read_multi_draw_nine_grid_order 'int (int *, const int *, int *)' static   |-ParmVarDecl 0x12d128128 <col:52, col:61> col:61 invalid s 'int *'   |-ParmVarDecl 0x12d1281a8 <col:64, col:82> col:82 invalid orderInfo 'const int *'   |-ParmVarDecl 0x12d128228 <line:2:52, col:80> col:80 invalid multi_draw_nine_grid 'int *'   `-CompoundStmt 0x12e009958 <line:3:1, line:22:1>     |-CallExpr 0x12d1285d8 <line:4:2, col:52> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d128530 <col:2> 'int ()' Function 0x12d128478 'ORDER_FIELD_COORD' 'int ()'     | |-IntegerLiteral 0x12d128550 <col:20> 'int' 1     | `-CXXDependentScopeMemberExpr 0x12d128590 <col:23, col:45> '<dependent type>' contains-errors lvalue ->srcLeft     |   `-RecoveryExpr 0x12d128570 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12d1286b0 <line:5:2, col:51> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d128608 <col:2> 'int ()' Function 0x12d128478 'ORDER_FIELD_COORD' 'int ()'     | |-IntegerLiteral 0x12d128628 <col:20> 'int' 2     | `-CXXDependentScopeMemberExpr 0x12d128668 <col:23, col:45> '<dependent type>' contains-errors lvalue ->srcTop     |   `-RecoveryExpr 0x12d128648 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12d128788 <line:6:2, col:53> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d1286e0 <col:2> 'int ()' Function 0x12d128478 'ORDER_FIELD_COORD' 'int ()'     | |-IntegerLiteral 0x12d128700 <col:20> 'int' 3     | `-CXXDependentScopeMemberExpr 0x12d128740 <col:23, col:45> '<dependent type>' contains-errors lvalue ->srcRight     |   `-RecoveryExpr 0x12d128720 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12e008e68 <line:7:2, col:54> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d1287b8 <col:2> 'int ()' Function 0x12d128478 'ORDER_FIELD_COORD' 'int ()'     | |-IntegerLiteral 0x12d1287d8 <col:20> 'int' 4     | `-CXXDependentScopeMemberExpr 0x12e008e20 <col:23, col:45> '<dependent type>' contains-errors lvalue ->srcBottom     |   `-RecoveryExpr 0x12e008e00 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12e009020 <line:8:2, col:54> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12e008f78 <col:2> 'int ()' Function 0x12e008ec0 'ORDER_FIELD_UINT16' 'int ()'     | |-IntegerLiteral 0x12e008f98 <col:21> 'int' 5     | `-CXXDependentScopeMemberExpr 0x12e008fd8 <col:24, col:46> '<dependent type>' contains-errors lvalue ->bitmapId     |   `-RecoveryExpr 0x12e008fb8 <col:24> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12e0091d8 <line:9:2, col:57> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12e009130 <col:2> 'int ()' Function 0x12e009078 'ORDER_FIELD_BYTE' 'int ()'     | |-IntegerLiteral 0x12e009150 <col:19> 'int' 6     | `-CXXDependentScopeMemberExpr 0x12e009190 <col:22, col:44> '<dependent type>' contains-errors lvalue ->nDeltaEntries     |   `-RecoveryExpr 0x12e009170 <col:22> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12e0098f0 <line:11:2, line:19:2>     | |-BinaryOperator 0x12e0092c8 <line:11:6, col:30> '<dependent type>' contains-errors '&'     | | |-CXXDependentScopeMemberExpr 0x12e009228 <col:6, col:17> '<dependent type>' contains-errors lvalue ->fieldFlags     | | | `-RecoveryExpr 0x12e009208 <col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12e0092a8 <col:30> 'int ()' Function 0x12e009078 'ORDER_FIELD_BYTE' 'int ()'     | `-CompoundStmt 0x12e0098c8 <line:12:2, line:19:2>     |   |-IfStmt 0x12e0094b8 <line:13:3, line:14:11>     |   | |-BinaryOperator 0x12e009450 <line:13:7, col:38> 'int' contains-errors '<'     |   | | |-CallExpr 0x12e009408 <col:7, col:34> '<dependent type>' contains-errors     |   | | | |-DeclRefExpr 0x12e0093c8 <col:7> 'int ()' Function 0x12e009310 'Stream_GetRemainingLength' 'int ()'     |   | | | `-RecoveryExpr 0x12e0093e8 <col:33> '<dependent type>' contains-errors lvalue     |   | | `-IntegerLiteral 0x12e009430 <col:38> 'int' 2     |   | `-ReturnStmt 0x12e0094a8 <line:14:4, col:11>     |   |   `-RecoveryExpr 0x12e009488 <col:11> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x12e009660 <line:16:3, col:53> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12e0095b8 <col:3> 'int ()' Function 0x12e009500 'Stream_Read_UINT16' 'int ()'     |   | |-RecoveryExpr 0x12e0095d8 <col:22> '<dependent type>' contains-errors lvalue     |   | `-CXXDependentScopeMemberExpr 0x12e009618 <col:25, col:47> '<dependent type>' contains-errors lvalue ->cbData     |   |   `-RecoveryExpr 0x12e0095f8 <col:25> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x12e0098b8 <line:17:3, line:18:69>     |     `-CallExpr 0x12e009880 <line:17:10, line:18:69> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x12e009770 <line:17:10> 'int ()' Function 0x12e0096b8 'update_read_delta_rects' 'int ()'     |       |-RecoveryExpr 0x12e009790 <col:34> '<dependent type>' contains-errors lvalue     |       |-CXXDependentScopeMemberExpr 0x12e0097d0 <col:37, col:59> '<dependent type>' contains-errors lvalue ->rectangles     |       | `-RecoveryExpr 0x12e0097b0 <col:37> '<dependent type>' contains-errors lvalue     |       `-CXXDependentScopeMemberExpr 0x12e009838 <line:18:34, col:56> '<dependent type>' contains-errors lvalue ->nDeltaEntries     |         `-RecoveryExpr 0x12e009818 <col:34> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12e009948 <line:21:2, col:9>       `-RecoveryExpr 0x12e009928 <col:9> '<dependent type>' contains-errors lvalue ","20318":"`-FunctionDecl 0x12480de88  line:1:8 invalid gf_isom_remove_cenc_saio 'int (int *, int)'   |-ParmVarDecl 0x12480dd28 <col:33, col:45> col:45 invalid the_file 'int *'   |-ParmVarDecl 0x12480dda8 <col:55, col:59> col:59 invalid trackNumber 'int'   `-CompoundStmt 0x124827c58 <line:2:1, line:35:1>     |-IfStmt 0x12480e240 <line:6:2, col:20>     | |-UnaryOperator 0x12480e1e0 <col:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12480e1c8 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x12480e1a8 <col:7> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12480e230 <col:13, col:20>     |   `-RecoveryExpr 0x12480e210 <col:20> '<dependent type>' contains-errors lvalue     |-IfStmt 0x124827430 <line:9:2, line:10:10>     | |-UnaryOperator 0x12480e3d0 <line:9:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12480e3b8 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x12480e398 <col:7> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x124827420 <line:10:3, col:10>     |   `-RecoveryExpr 0x124827400 <col:10> '<dependent type>' contains-errors lvalue     |-ForStmt 0x124827ab0 <line:12:2, line:27:2>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-BinaryOperator 0x124827718 <line:12:14, col:49> 'int' contains-errors '<'     | | |-RecoveryExpr 0x124827668 <col:14> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x1248276f0 <col:18, col:49> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x1248275a0 <col:18> 'int ()' Function 0x1248274e8 'gf_list_count' 'int ()'     | |   `-CXXDependentScopeMemberExpr 0x1248276a8 <col:32, col:38> '<dependent type>' contains-errors lvalue ->sai_offsets     | |     `-RecoveryExpr 0x124827688 <col:32> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x124827788 <col:52, col:53> '<dependent type>' contains-errors postfix '++' cannot overflow     | | `-RecoveryExpr 0x124827768 <col:52> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x124827a98 <col:57, line:27:2>     |   `-SwitchStmt 0x1248277c0 <line:14:3, line:23:3>     |     |-RecoveryExpr 0x1248277a0 <line:14:11, col:17> 'int' contains-errors     |     `-CompoundStmt 0x124827878 <col:32, line:23:3>     |       |-CaseStmt 0x124827820 <line:19:3, line:20:4>     |       | |-ConstantExpr 0x124827808 <line:19:8> 'int'     |       | | `-IntegerLiteral 0x1248277e8 <col:8> 'int' 0     |       | `-BreakStmt 0x124827848 <line:20:4>     |       `-DefaultStmt 0x124827858 <line:21:3, line:22:4>     |         `-ContinueStmt 0x124827850 <col:4>     `-IfStmt 0x124827c38 <line:29:2, line:32:2>       |-RecoveryExpr 0x124827b08 <line:29:6, col:38> '_Bool' contains-errors       `-CompoundStmt 0x124827c28 <col:41, line:32:2> ","20701":"`-FunctionDecl 0x13b00ddc8  line:1:17 invalid sys_time 'int (int)'   |-ParmVarDecl 0x13b00dcf0 <col:26, col:33> col:33 invalid __user 'int'   `-CompoundStmt 0x13b00e1c0 <line:2:1, line:10:1>     |-IfStmt 0x13b00e158 <line:5:2, line:8:2>     | |-RecoveryExpr 0x13b00de90 <line:5:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13b00e148 <col:12, line:8:2>     `-ReturnStmt 0x13b00e1b0 <line:9:2, col:9>       `-RecoveryExpr 0x13b00e190 <col:9> '<dependent type>' contains-errors lvalue ","20273":"`-FunctionDecl 0x131140c08  line:1:12 invalid sco_sock_sendmsg 'int (struct socket *, struct msghdr *, int)' static   |-ParmVarDecl 0x131128648 <col:29, col:44> col:44 used sock 'struct socket *'   |-ParmVarDecl 0x131140a28 <col:50, col:65> col:65 used msg 'struct msghdr *'   |-ParmVarDecl 0x131140ac0 <line:2:8, col:15> col:15 invalid len 'int'   `-CompoundStmt 0x131147c88 <line:3:1, line:36:1>     |-DeclStmt 0x131140f18 <line:4:2, col:28>     | |-RecordDecl 0x131140cc8 <col:2, col:9> col:9 struct sock     | `-VarDecl 0x131140e38 <col:2, col:26> col:15 used sk 'struct sock *' cinit     |   `-RecoveryExpr 0x131140ed8 <col:20, col:26> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x131140ea0 <col:20> 'struct socket *' lvalue ParmVar 0x131128648 'sock' 'struct socket *'     |-DeclStmt 0x131140fb0 <line:5:2, col:11>     | `-VarDecl 0x131140f48 <col:2, col:8> col:8 used buf 'void *'     |-DeclStmt 0x131141048 <line:6:2, col:9>     | `-VarDecl 0x131140fe0 <col:2, col:6> col:6 used err 'int'     |-CallExpr 0x1311412c8 <line:8:2, col:24> 'int' contains-errors     | |-ImplicitCastExpr 0x1311412b0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1311411c0 <col:2> 'int ()' Function 0x131141108 'BT_DBG' 'int ()'     | |-ImplicitCastExpr 0x131141300 <col:9> 'char *' <ArrayToPointerDecay>     | | `-StringLiteral 0x131141220 <col:9> 'char[4]' lvalue \"STR\"     | |-ImplicitCastExpr 0x131141318 <col:16> 'struct socket *' <LValueToRValue>     | | `-DeclRefExpr 0x131141240 <col:16> 'struct socket *' lvalue ParmVar 0x131128648 'sock' 'struct socket *'     | `-ImplicitCastExpr 0x131141330 <col:22> 'struct sock *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x131141260 <col:22> 'struct sock *' contains-errors lvalue Var 0x131140e38 'sk' 'struct sock *'     |-BinaryOperator 0x1311414e0 <line:10:2, col:21> 'int' contains-errors '='     | |-DeclRefExpr 0x131141348 <col:2> 'int' lvalue Var 0x131140fe0 'err' 'int'     | `-CallExpr 0x1311414a0 <col:8, col:21> 'int' contains-errors     |   |-ImplicitCastExpr 0x131141488 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x131141448 <col:8> 'int ()' Function 0x131141390 'sock_error' 'int ()'     |   `-ImplicitCastExpr 0x1311414c8 <col:19> 'struct sock *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x131141468 <col:19> 'struct sock *' contains-errors lvalue Var 0x131140e38 'sk' 'struct sock *'     |-IfStmt 0x131141580 <line:11:2, line:12:10>     | |-ImplicitCastExpr 0x131141520 <line:11:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x131141500 <col:6> 'int' lvalue Var 0x131140fe0 'err' 'int'     | `-ReturnStmt 0x131141570 <line:12:3, col:10>     |   `-ImplicitCastExpr 0x131141558 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x131141538 <col:10> 'int' lvalue Var 0x131140fe0 'err' 'int'     |-IfStmt 0x131141720 <line:14:2, line:15:11>     | |-BinaryOperator 0x131141658 <line:14:6, col:23> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x1311415d8 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x1311415a0 <col:6> 'struct msghdr *' lvalue ParmVar 0x131140a28 'msg' 'struct msghdr *'     | | `-RecoveryExpr 0x131141638 <col:23> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x131141710 <line:15:3, col:11>     |   `-UnaryOperator 0x1311416f8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x1311416e0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x1311416c0 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x131141938 <line:17:2, col:31> 'void *' contains-errors '='     | |-DeclRefExpr 0x131141740 <col:2> 'void *' lvalue Var 0x131140f48 'buf' 'void *'     | `-CallExpr 0x131141908 <col:8, col:31> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x131141840 <col:8> 'int ()' Function 0x131141788 'kmalloc' 'int ()'     |   |-RecoveryExpr 0x131141860 <col:16> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x1311418e8 <col:21> '<dependent type>' contains-errors lvalue     |-IfStmt 0x131147060 <line:18:2, line:19:11>     | |-UnaryOperator 0x131141990 <line:18:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x131141978 <col:7> 'void *' <LValueToRValue>     | |   `-DeclRefExpr 0x131141958 <col:7> 'void *' lvalue Var 0x131140f48 'buf' 'void *'     | `-ReturnStmt 0x131147050 <line:19:3, col:11>     |   `-UnaryOperator 0x131147038 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x131147020 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x131147000 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x131147458 <line:21:2, line:24:2>     | |-CallExpr 0x1311471e0 <line:21:6, col:35> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x131147160 <col:6> 'int ()' Function 0x1311470a8 'memcpy_from_msg' 'int ()'     | | |-DeclRefExpr 0x131147180 <col:22> 'void *' lvalue Var 0x131140f48 'buf' 'void *'     | | |-DeclRefExpr 0x1311471a0 <col:27> 'struct msghdr *' lvalue ParmVar 0x131140a28 'msg' 'struct msghdr *'     | | `-RecoveryExpr 0x1311471c0 <col:32> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x131147438 <col:38, line:24:2>     |   |-CallExpr 0x131147350 <line:22:3, col:12> 'int'     |   | |-ImplicitCastExpr 0x131147338 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x1311472f8 <col:3> 'int ()' Function 0x131147240 'kfree' 'int ()'     |   | `-ImplicitCastExpr 0x131147378 <col:9> 'void *' <LValueToRValue>     |   |   `-DeclRefExpr 0x131147318 <col:9> 'void *' lvalue Var 0x131140f48 'buf' 'void *'     |   `-ReturnStmt 0x131147428 <line:23:3, col:11>     |     `-UnaryOperator 0x131147410 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x1311473f8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x1311473d8 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1311475b0 <line:26:2, col:14> 'int' contains-errors     | |-ImplicitCastExpr 0x131147598 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x131147558 <col:2> 'int ()' Function 0x1311474a0 'lock_sock' 'int ()'     | `-ImplicitCastExpr 0x1311475d8 <col:12> 'struct sock *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x131147578 <col:12> 'struct sock *' contains-errors lvalue Var 0x131140e38 'sk' 'struct sock *'     |-IfStmt 0x131147a00 <line:28:2, line:31:10> has_else     | |-BinaryOperator 0x1311476a8 <line:28:6, col:22> 'int' contains-errors '=='     | | |-RecoveryExpr 0x131147628 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x1311475f0 <col:6> 'struct sock *' contains-errors lvalue Var 0x131140e38 'sk' 'struct sock *'     | | `-RecoveryExpr 0x131147688 <col:22> '<dependent type>' contains-errors lvalue     | |-BinaryOperator 0x1311478e8 <line:29:3, col:52> 'int' contains-errors '='     | | |-DeclRefExpr 0x1311476c8 <col:3> 'int' lvalue Var 0x131140fe0 'err' 'int'     | | `-CallExpr 0x1311478a8 <col:9, col:52> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x1311477c8 <col:9> 'int ()' Function 0x131147710 'sco_send_frame' 'int ()'     | |   |-DeclRefExpr 0x1311477e8 <col:24> 'struct sock *' contains-errors lvalue Var 0x131140e38 'sk' 'struct sock *'     | |   |-DeclRefExpr 0x131147808 <col:28> 'void *' lvalue Var 0x131140f48 'buf' 'void *'     | |   |-RecoveryExpr 0x131147828 <col:33> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x131147880 <col:38, col:43> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x131147848 <col:38> 'struct msghdr *' lvalue ParmVar 0x131140a28 'msg' 'struct msghdr *'     | `-BinaryOperator 0x1311479e0 <line:31:3, col:10> 'int' contains-errors '='     |   |-DeclRefExpr 0x131147908 <col:3> 'int' lvalue Var 0x131140fe0 'err' 'int'     |   `-UnaryOperator 0x1311479c8 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x1311479b0 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x131147990 <col:10> '<dependent type>' contains-errors lvalue     |-CallExpr 0x131147b68 <line:33:2, col:17> 'int' contains-errors     | |-ImplicitCastExpr 0x131147b50 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x131147b10 <col:2> 'int ()' Function 0x131147a58 'release_sock' 'int ()'     | `-ImplicitCastExpr 0x131147b90 <col:15> 'struct sock *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x131147b30 <col:15> 'struct sock *' contains-errors lvalue Var 0x131140e38 'sk' 'struct sock *'     |-CallExpr 0x131147c00 <line:34:2, col:11> 'int'     | |-ImplicitCastExpr 0x131147be8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x131147ba8 <col:2> 'int ()' Function 0x131147240 'kfree' 'int ()'     | `-ImplicitCastExpr 0x131147c28 <col:8> 'void *' <LValueToRValue>     |   `-DeclRefExpr 0x131147bc8 <col:8> 'void *' lvalue Var 0x131140f48 'buf' 'void *'     `-ReturnStmt 0x131147c78 <line:35:2, col:9>       `-ImplicitCastExpr 0x131147c60 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x131147c40 <col:9> 'int' lvalue Var 0x131140fe0 'err' 'int' ","20959":"`-FunctionDecl 0x141124e50  line:1:13 invalid blkid_probe_set_partlist 'void (int, int)' static   |-ParmVarDecl 0x141124cf0 <col:38, col:50> col:50 referenced invalid pr 'int'   |-ParmVarDecl 0x141124d70 <col:54, col:69> col:69 invalid ls 'int'   `-CompoundStmt 0x141124fd0 <line:2:1, line:4:1> ","20774":"`-FunctionDecl 0x14a8fa458  line:1:1 invalid cmd_readkey 'int (int, char *)'   |-ParmVarDecl 0x14a8fa2f0 <col:14, col:31> col:31 referenced invalid ctx 'int'   |-ParmVarDecl 0x14a8fa370 <col:36, col:42> col:42 used line 'char *'   `-CompoundStmt 0x14a916f30 <line:2:1, line:70:1>     |-DeclStmt 0x14a8fa590 <line:4:3, col:9>     | `-VarDecl 0x14a8fa528 <col:3, col:7> col:7 used rc 'int'     |-DeclStmt 0x14a8fa698 <line:5:3, col:29>     | `-VarDecl 0x14a8fa5f8 <col:3, col:25> col:18 used cert 'unsigned char *' cinit     |   `-RecoveryExpr 0x14a8fa678 <col:25> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14a8fa7c0 <line:6:3, col:17> '<dependent type>' contains-errors ','     | |-UnaryExprOrTypeTraitExpr 0x14a8fa780 <col:3, col:10> 'unsigned long' contains-errors sizeof     | | `-RecoveryExpr 0x14a8fa760 <col:10> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14a8fa7a0 <col:17> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x14a8fa860 <line:9:3, col:20>     | `-VarDecl 0x14a8fa7f8 <col:3, col:18> col:18 used pk 'unsigned char *'     |-UnaryExprOrTypeTraitExpr 0x14a8fa8d0 <line:10:3, col:10> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x14a8fa8b0 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14a913c00 <line:12:3, line:13:12>     | |-RecoveryExpr 0x14a913b98 <line:12:7, col:35> '_Bool' contains-errors     | `-ReturnStmt 0x14a913bf0 <line:13:5, col:12>     |   `-ImplicitCastExpr 0x14a913bd8 <col:12> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x14a913bb8 <col:12> 'int' lvalue Var 0x14a8fa528 'rc' 'int'     |-BinaryOperator 0x14a914220 <line:15:3, col:23> 'char *' '='     | |-DeclRefExpr 0x14a913c20 <col:3> 'char *' lvalue ParmVar 0x14a8fa370 'line' 'char *'     | `-ImplicitCastExpr 0x14a913de8 <col:10, col:23> 'char *' <IntegralToPointer>     |   `-CallExpr 0x14a913da8 <col:10, col:23> 'int'     |     |-ImplicitCastExpr 0x14a913d90 <col:10> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14a913d20 <col:10> 'int ()' Function 0x14a913c68 'xstrdup' 'int ()'     |     `-ImplicitCastExpr 0x14a913dd0 <col:19> 'char *' <LValueToRValue>     |       `-DeclRefExpr 0x14a913d40 <col:19> 'char *' lvalue ParmVar 0x14a8fa370 'line' 'char *'     |-BinaryOperator 0x14a914610 <line:17:3, col:53> 'int' contains-errors '='     | |-DeclRefExpr 0x14a914240 <col:3> 'int' lvalue Var 0x14a8fa528 'rc' 'int'     | `-CallExpr 0x14a9145d0 <col:8, col:53> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14a914340 <col:8> 'int ()' Function 0x14a914288 'app_readkey' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x14a914550 <col:21, col:27> '<dependent type>' contains-errors lvalue ->app_ctx     |   | `-RecoveryExpr 0x14a914530 <col:21> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x14a9143c0 <col:36> 'char *' lvalue ParmVar 0x14a8fa370 'line' 'char *'     |   |-UnaryOperator 0x14a914430 <col:42, col:43> 'unsigned char **' prefix '&' cannot overflow     |   | `-DeclRefExpr 0x14a9143e0 <col:43> 'unsigned char *' lvalue Var 0x14a8fa7f8 'pk' 'unsigned char *'     |   `-UnaryOperator 0x14a9145b8 <col:47, col:48> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x14a914598 <col:48> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14a9158b0 <line:18:3, line:25:5>     | |-UnaryOperator 0x14a914668 <line:18:7, col:8> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14a914650 <col:8> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x14a914630 <col:8> 'int' lvalue Var 0x14a8fa528 'rc' 'int'     | `-CompoundStmt 0x14a915888 <line:19:5, line:25:5>     |   |-CallExpr 0x14a914918 <line:21:7, col:16> 'int'     |   | |-ImplicitCastExpr 0x14a914900 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14a9148c0 <col:7> 'int ()' Function 0x14a914808 'xfree' 'int ()'     |   | `-ImplicitCastExpr 0x14a914940 <col:14> 'unsigned char *' <LValueToRValue>     |   |   `-DeclRefExpr 0x14a9148e0 <col:14> 'unsigned char *' lvalue Var 0x14a8fa7f8 'pk' 'unsigned char *'     |   |-CallExpr 0x14a9149b0 <line:22:7, col:18> 'int'     |   | |-ImplicitCastExpr 0x14a914998 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14a914958 <col:7> 'int ()' Function 0x14a914808 'xfree' 'int ()'     |   | `-ImplicitCastExpr 0x14a9149d8 <col:14> 'char *' <LValueToRValue>     |   |   `-DeclRefExpr 0x14a914978 <col:14> 'char *' lvalue ParmVar 0x14a8fa370 'line' 'char *'     |   `-GotoStmt 0x14a915870 <line:24:7, col:12> 'leave' 0x14a915820     |-IfStmt 0x14a9160c8 <line:27:3, line:34:5> has_else     | |-RecoveryExpr 0x14a915a48 <line:27:7, col:28> '_Bool' contains-errors     | |-CallExpr 0x14a915d60 <line:28:5, col:40> 'int'     | | |-ImplicitCastExpr 0x14a915d48 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x14a915b48 <col:5> 'int ()' Function 0x14a915a90 'log_error' 'int ()'     | | |-ImplicitCastExpr 0x14a915d90 <col:16> 'char *' <ArrayToPointerDecay>     | | | `-StringLiteral 0x14a915bb0 <col:16> 'char[4]' lvalue \"STR\"     | | `-CallExpr 0x14a915d08 <col:23, col:39> 'int'     | |   |-ImplicitCastExpr 0x14a915cf0 <col:23> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x14a915cb0 <col:23> 'int ()' Function 0x14a915bf8 'gpg_strerror' 'int ()'     | |   `-ImplicitCastExpr 0x14a915d30 <col:37> 'int' <LValueToRValue>     | |     `-DeclRefExpr 0x14a915cd0 <col:37> 'int' lvalue Var 0x14a8fa528 'rc' 'int'     | `-CompoundStmt 0x14a9160b0 <line:30:5, line:34:5>     |   `-IfStmt 0x14a916090 <line:32:7, line:33:44>     |     |-ImplicitCastExpr 0x14a915f40 <line:32:11> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x14a915f20 <col:11> 'int' lvalue Var 0x14a8fa528 'rc' 'int'     |     `-CallExpr 0x14a916048 <line:33:9, col:44> 'int'     |       |-ImplicitCastExpr 0x14a916030 <col:9> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14a915f58 <col:9> 'int ()' Function 0x14a915a90 'log_error' 'int ()'     |       |-ImplicitCastExpr 0x14a916078 <col:20> 'char *' <ArrayToPointerDecay>     |       | `-StringLiteral 0x14a915f78 <col:20> 'char[4]' lvalue \"STR\"     |       `-CallExpr 0x14a915ff0 <col:27, col:43> 'int'     |         |-ImplicitCastExpr 0x14a915fd8 <col:27> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x14a915f98 <col:27> 'int ()' Function 0x14a915bf8 'gpg_strerror' 'int ()'     |         `-ImplicitCastExpr 0x14a916018 <col:41> 'int' <LValueToRValue>     |           `-DeclRefExpr 0x14a915fb8 <col:41> 'int' lvalue Var 0x14a8fa528 'rc' 'int'     |-CallExpr 0x14a916150 <line:35:3, col:14> 'int'     | |-ImplicitCastExpr 0x14a916138 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14a9160f8 <col:3> 'int ()' Function 0x14a914808 'xfree' 'int ()'     | `-ImplicitCastExpr 0x14a916178 <col:10> 'char *' <LValueToRValue>     |   `-DeclRefExpr 0x14a916118 <col:10> 'char *' lvalue ParmVar 0x14a8fa370 'line' 'char *'     |-IfStmt 0x14a916200 <line:37:3, line:38:10>     | |-ImplicitCastExpr 0x14a9161d0 <line:37:7> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x14a9161b0 <col:7> 'int' lvalue Var 0x14a8fa528 'rc' 'int'     | `-GotoStmt 0x14a9161e8 <line:38:5, col:10> 'leave' 0x14a915820     |-IfStmt 0x14a916448 <line:41:3, line:45:5>     | |-ImplicitCastExpr 0x14a916360 <line:41:7> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x14a916340 <col:7> 'int' lvalue Var 0x14a8fa528 'rc' 'int'     | `-CompoundStmt 0x14a916428 <line:42:5, line:45:5>     |   |-CallExpr 0x14a9163d0 <line:43:7, col:18> 'int' contains-errors     |   | |-ImplicitCastExpr 0x14a9163b8 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14a916378 <col:7> 'int ()' Function 0x14a914808 'xfree' 'int ()'     |   | `-ImplicitCastExpr 0x14a9163f8 <col:14> 'unsigned char *' contains-errors <LValueToRValue>     |   |   `-DeclRefExpr 0x14a916398 <col:14> 'unsigned char *' contains-errors lvalue Var 0x14a8fa5f8 'cert' 'unsigned char *'     |   `-GotoStmt 0x14a916410 <line:44:7, col:12> 'leave' 0x14a915820     |-IfStmt 0x14a916750 <line:47:3, line:51:5>     | |-ImplicitCastExpr 0x14a9165c8 <line:47:7> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x14a9165a8 <col:7> 'int' lvalue Var 0x14a8fa528 'rc' 'int'     | `-CompoundStmt 0x14a916730 <line:48:5, line:51:5>     |   |-CallExpr 0x14a9166d0 <line:49:7, col:42> 'int'     |   | |-ImplicitCastExpr 0x14a9166b8 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14a9165e0 <col:7> 'int ()' Function 0x14a915a90 'log_error' 'int ()'     |   | |-ImplicitCastExpr 0x14a916700 <col:18> 'char *' <ArrayToPointerDecay>     |   | | `-StringLiteral 0x14a916600 <col:18> 'char[4]' lvalue \"STR\"     |   | `-CallExpr 0x14a916678 <col:25, col:41> 'int'     |   |   |-ImplicitCastExpr 0x14a916660 <col:25> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x14a916620 <col:25> 'int ()' Function 0x14a915bf8 'gpg_strerror' 'int ()'     |   |   `-ImplicitCastExpr 0x14a9166a0 <col:39> 'int' <LValueToRValue>     |   |     `-DeclRefExpr 0x14a916640 <col:39> 'int' lvalue Var 0x14a8fa528 'rc' 'int'     |   `-GotoStmt 0x14a916718 <line:50:7, col:12> 'leave' 0x14a915820     |-IfStmt 0x14a916a48 <line:54:3, line:58:5>     | |-RecoveryExpr 0x14a9168d8 <line:54:7, col:8> '_Bool' contains-errors     | `-CompoundStmt 0x14a916a30 <line:55:5, line:58:5>     |   `-GotoStmt 0x14a916a18 <line:57:7, col:12> 'leave' 0x14a915820     |-LabelStmt 0x14a916d10 <line:65:2, col:7> 'leave'     | `-NullStmt 0x14a916d08 <col:7>     |-CallExpr 0x14a916d88 <line:67:3, col:14> 'int' contains-errors     | |-ImplicitCastExpr 0x14a916d70 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14a916d30 <col:3> 'int ()' Function 0x14a914808 'xfree' 'int ()'     | `-ImplicitCastExpr 0x14a916db0 <col:10> 'unsigned char *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x14a916d50 <col:10> 'unsigned char *' contains-errors lvalue Var 0x14a8fa5f8 'cert' 'unsigned char *'     `-ReturnStmt 0x14a916f20 <line:69:3, col:10>       `-ImplicitCastExpr 0x14a916f08 <col:10> 'int' <LValueToRValue>         `-DeclRefExpr 0x14a916ee8 <col:10> 'int' lvalue Var 0x14a8fa528 'rc' 'int' ","21111":"`-FunctionDecl 0x14b02a800  line:1:1 do_replace 'int (struct net *, int)'   |-ParmVarDecl 0x14b00e248 <col:12, col:24> col:24 used net 'struct net *'   |-ParmVarDecl 0x14b00e2c0 <col:29, col:40> col:40 __user 'int'   `-CompoundStmt 0x14c808fe0 <line:2:1, line:47:1>     |-DeclStmt 0x14b02a980 <line:3:2, col:9>     | `-VarDecl 0x14b02a918 <col:2, col:6> col:6 used ret 'int'     |-DeclStmt 0x14b02ab18 <line:4:2, col:25>     | |-RecordDecl 0x14b02a998 <col:2, col:9> col:9 struct ip6t_replace     | `-VarDecl 0x14b02aa98 <col:2, col:22> col:22 referenced invalid tmp 'struct ip6t_replace'     |-DeclStmt 0x14b02ad18 <line:5:2, col:31>     | |-RecordDecl 0x14b02ab30 <col:2, col:9> col:9 struct xt_table_info     | `-VarDecl 0x14b02ac98 <col:2, col:24> col:24 used newinfo 'struct xt_table_info *'     |-DeclStmt 0x14b02adb0 <line:6:2, col:21>     | `-VarDecl 0x14b02ad48 <col:2, col:8> col:8 used loc_cpu_entry 'void *'     |-DeclStmt 0x14b02afb8 <line:7:2, col:25>     | |-RecordDecl 0x14b02adc8 <col:2, col:9> col:9 struct ip6t_entry     | `-VarDecl 0x14b02af38 <col:2, col:21> col:21 used iter 'struct ip6t_entry *'     |-IfStmt 0x14b02b368 <line:9:2, line:10:11>     | |-BinaryOperator 0x14b02b2a0 <line:9:6, col:49> 'int' contains-errors '!='     | | |-CallExpr 0x14b02b268 <col:6, col:44> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x14b02b100 <col:6> 'int ()' Function 0x14b02b048 'copy_from_user' 'int ()'     | | | |-UnaryOperator 0x14b02b140 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | | `-RecoveryExpr 0x14b02b120 <col:22> '<dependent type>' contains-errors lvalue     | | | |-DeclRefExpr 0x14b02b248 <col:27> 'struct ip6t_entry *' lvalue Var 0x14b02af38 'iter' 'struct ip6t_entry *'     | | | `-UnaryExprOrTypeTraitExpr 0x14b02b1b0 <col:33, col:43> 'unsigned long' contains-errors sizeof     | | |   `-ParenExpr 0x14b02b190 <col:39, col:43> '<dependent type>' contains-errors lvalue     | | |     `-RecoveryExpr 0x14b02b170 <col:40> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x14b02b208 <col:49> 'int' 0     | `-ReturnStmt 0x14b02b358 <line:10:3, col:11>     |   `-UnaryOperator 0x14b02b340 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14b02b328 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14b02b308 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14b02b5d0 <line:13:2, line:14:11>     | |-RecoveryExpr 0x14b02b508 <line:13:6, col:61> '_Bool' contains-errors     | `-ReturnStmt 0x14b02b5c0 <line:14:3, col:11>     |   `-UnaryOperator 0x14b02b5a8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14b02b590 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14b02b570 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14b02b7d8 <line:15:2, col:33> '<dependent type>' contains-errors '='     | |-ArraySubscriptExpr 0x14b02b798 <col:2, col:29> '<dependent type>' contains-errors lvalue     | | |-ImplicitCastExpr 0x14b02b780 <col:2, col:6> '<dependent type>' contains-errors <LValueToRValue>     | | | `-CXXDependentScopeMemberExpr 0x14b02b638 <col:2, col:6> '<dependent type>' contains-errors lvalue .name     | | |   `-RecoveryExpr 0x14b02b610 <col:2> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x14b02b5f0 <col:2> 'struct ip6t_replace' lvalue Var 0x14b02aa98 'tmp' 'struct ip6t_replace'     | | `-BinaryOperator 0x14b02b760 <col:11, col:28> 'unsigned long' contains-errors '-'     | |   |-UnaryExprOrTypeTraitExpr 0x14b02b708 <col:11, col:26> 'unsigned long' contains-errors sizeof     | |   | `-ParenExpr 0x14b02b6e8 <col:17, col:26> '<dependent type>' contains-errors lvalue     | |   |   `-CXXDependentScopeMemberExpr 0x14b02b6a0 <col:18, col:22> '<dependent type>' contains-errors lvalue .name     | |   |     `-RecoveryExpr 0x14b02b680 <col:18> '<dependent type>' contains-errors lvalue     | |   `-ImplicitCastExpr 0x14b02b748 <col:28> 'unsigned long' <IntegralCast>     | |     `-IntegerLiteral 0x14b02b728 <col:28> 'int' 1     | `-IntegerLiteral 0x14b02b7b8 <col:33> 'int' 0     |-BinaryOperator 0x14b02e1b0 <line:17:2, col:40> 'struct xt_table_info *' contains-errors '='     | |-DeclRefExpr 0x14b02e000 <col:2> 'struct xt_table_info *' lvalue Var 0x14b02ac98 'newinfo' 'struct xt_table_info *'     | `-CallExpr 0x14b02e188 <col:12, col:40> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14b02e100 <col:12> 'int ()' Function 0x14b02e048 'xt_alloc_table_info' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x14b02e140 <col:32, col:36> '<dependent type>' contains-errors lvalue .size     |     `-RecoveryExpr 0x14b02e120 <col:32> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14b02e2c8 <line:18:2, line:19:11>     | |-UnaryOperator 0x14b02e208 <line:18:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14b02e1f0 <col:7> 'struct xt_table_info *' <LValueToRValue>     | |   `-DeclRefExpr 0x14b02e1d0 <col:7> 'struct xt_table_info *' lvalue Var 0x14b02ac98 'newinfo' 'struct xt_table_info *'     | `-ReturnStmt 0x14b02e2b8 <line:19:3, col:11>     |   `-UnaryOperator 0x14b02e2a0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14b02e288 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14b02e268 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14b02e510 <line:22:2, col:57> 'void *' contains-errors '='     | |-DeclRefExpr 0x14b02e2e8 <col:2> 'void *' lvalue Var 0x14b02ad48 'loc_cpu_entry' 'void *'     | `-ArraySubscriptExpr 0x14b02e4f0 <col:18, col:57> '<dependent type>' contains-errors lvalue     |   |-ImplicitCastExpr 0x14b02e4d8 <col:18, col:27> '<dependent type>' contains-errors <LValueToRValue>     |   | `-RecoveryExpr 0x14b02e340 <col:18, col:27> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14b02e308 <col:18> 'struct xt_table_info *' lvalue Var 0x14b02ac98 'newinfo' 'struct xt_table_info *'     |   `-CallExpr 0x14b02e4b8 <col:35, col:56> 'int'     |     `-ImplicitCastExpr 0x14b02e4a0 <col:35> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x14b02e448 <col:35> 'int ()' Function 0x14b02e390 'raw_smp_processor_id' 'int ()'     |-IfStmt 0x14b02e938 <line:23:2, line:27:2>     | |-BinaryOperator 0x14b02e798 <line:23:6, line:24:20> 'int' contains-errors '!='     | | |-CallExpr 0x14b02e760 <line:23:6, line:24:15> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x14b02e530 <line:23:6> 'int ()' Function 0x14b02b048 'copy_from_user' 'int ()'     | | | |-DeclRefExpr 0x14b02e550 <col:21> 'void *' lvalue Var 0x14b02ad48 'loc_cpu_entry' 'void *'     | | | |-BinaryOperator 0x14b02e740 <col:36, col:53> '<dependent type>' contains-errors '+'     | | | | |-RecoveryExpr 0x14b02e720 <col:36> '<dependent type>' contains-errors lvalue     | | | | `-UnaryExprOrTypeTraitExpr 0x14b02e5c8 <col:43, col:53> 'unsigned long' contains-errors sizeof     | | | |   `-ParenExpr 0x14b02e5a8 <col:49, col:53> '<dependent type>' contains-errors lvalue     | | | |     `-RecoveryExpr 0x14b02e588 <col:50> '<dependent type>' contains-errors lvalue     | | | `-CXXDependentScopeMemberExpr 0x14b02e628 <line:24:7, col:11> '<dependent type>' contains-errors lvalue .size     | | |   `-RecoveryExpr 0x14b02e608 <col:7> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x14b02e6a8 <col:20> 'int' 0     | `-CompoundStmt 0x14b02e918 <col:23, line:27:2>     |   |-BinaryOperator 0x14b02e890 <line:25:3, col:10> 'int' contains-errors '='     |   | |-DeclRefExpr 0x14b02e7b8 <col:3> 'int' lvalue Var 0x14b02a918 'ret' 'int'     |   | `-UnaryOperator 0x14b02e878 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x14b02e860 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x14b02e840 <col:10> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x14b02e900 <line:26:3, col:8> 'free_newinfo' 0x14b02e8b0     |-BinaryOperator 0x14b02eb50 <line:29:2, col:57> 'int' contains-errors '='     | |-DeclRefExpr 0x14b02e958 <col:2> 'int' lvalue Var 0x14b02a918 'ret' 'int'     | `-CallExpr 0x14b02eb10 <col:8, col:57> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14b02ea58 <col:8> 'int ()' Function 0x14b02e9a0 'translate_table' 'int ()'     |   |-DeclRefExpr 0x14b02ea78 <col:24> 'struct net *' lvalue ParmVar 0x14b00e248 'net' 'struct net *'     |   |-DeclRefExpr 0x14b02ea98 <col:29> 'struct xt_table_info *' lvalue Var 0x14b02ac98 'newinfo' 'struct xt_table_info *'     |   |-DeclRefExpr 0x14b02eab8 <col:38> 'void *' lvalue Var 0x14b02ad48 'loc_cpu_entry' 'void *'     |   `-UnaryOperator 0x14b02eaf8 <col:53, col:54> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x14b02ead8 <col:54> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14b02ec00 <line:30:2, line:31:8>     | |-BinaryOperator 0x14b02ebc8 <line:30:6, col:13> 'int' '!='     | | |-ImplicitCastExpr 0x14b02ebb0 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x14b02eb70 <col:6> 'int' lvalue Var 0x14b02a918 'ret' 'int'     | | `-IntegerLiteral 0x14b02eb90 <col:13> 'int' 0     | `-GotoStmt 0x14b02ebe8 <line:31:3, col:8> 'free_newinfo' 0x14b02e8b0     |-CallExpr 0x14b02ed98 <line:33:2, col:16> 'int'     | |-ImplicitCastExpr 0x14b02ed80 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14b02ed00 <col:2> 'int ()' Function 0x14b02ec48 'duprintf' 'int ()'     | `-ImplicitCastExpr 0x14b02edc0 <col:11> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x14b02ed60 <col:11> 'char[4]' lvalue \"STR\"     |-BinaryOperator 0x14c808940 <line:35:2, line:36:37> 'int' contains-errors '='     | |-DeclRefExpr 0x14b02edd8 <line:35:2> 'int' lvalue Var 0x14b02a918 'ret' 'int'     | `-CallExpr 0x14c8088f0 <col:8, line:36:37> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14b02eed8 <line:35:8> 'int ()' Function 0x14b02ee20 '__do_replace' 'int ()'     |   |-DeclRefExpr 0x14b02eef8 <col:21> 'struct net *' lvalue ParmVar 0x14b00e248 'net' 'struct net *'     |   |-CXXDependentScopeMemberExpr 0x14b02ef38 <col:26, col:30> '<dependent type>' contains-errors lvalue .name     |   | `-RecoveryExpr 0x14b02ef18 <col:26> '<dependent type>' contains-errors lvalue     |   |-CXXDependentScopeMemberExpr 0x14b02efa0 <col:36, col:40> '<dependent type>' contains-errors lvalue .valid_hooks     |   | `-RecoveryExpr 0x14b02ef80 <col:36> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x14c808800 <col:53> 'struct xt_table_info *' lvalue Var 0x14b02ac98 'newinfo' 'struct xt_table_info *'     |   |-CXXDependentScopeMemberExpr 0x14c808840 <line:36:7, col:11> '<dependent type>' contains-errors lvalue .num_counters     |   | `-RecoveryExpr 0x14c808820 <col:7> '<dependent type>' contains-errors lvalue     |   `-CXXDependentScopeMemberExpr 0x14c8088a8 <col:25, col:29> '<dependent type>' contains-errors lvalue .counters     |     `-RecoveryExpr 0x14c808888 <col:25> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14c808a00 <line:37:2, line:38:8>     | |-ImplicitCastExpr 0x14c808980 <line:37:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x14c808960 <col:6> 'int' lvalue Var 0x14b02a918 'ret' 'int'     | `-GotoStmt 0x14c8089e8 <line:38:3, col:8> 'free_newinfo_untrans' 0x14c808998     |-ReturnStmt 0x14c808a40 <line:39:2, col:9>     | `-IntegerLiteral 0x14c808a20 <col:9> 'int' 0     |-LabelStmt 0x14c808c28 <line:41:2, line:42:53> 'free_newinfo_untrans'     | `-CallExpr 0x14c808bf0 <col:2, col:53> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14c808b30 <col:2> 'int ()' Function 0x14c808a78 'xt_entry_foreach' 'int ()'     |   |-DeclRefExpr 0x14c808b50 <col:19> 'struct ip6t_entry *' lvalue Var 0x14b02af38 'iter' 'struct ip6t_entry *'     |   |-DeclRefExpr 0x14c808b70 <col:25> 'void *' lvalue Var 0x14b02ad48 'loc_cpu_entry' 'void *'     |   `-RecoveryExpr 0x14c808bc8 <col:40, col:49> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14c808b90 <col:40> 'struct xt_table_info *' lvalue Var 0x14b02ac98 'newinfo' 'struct xt_table_info *'     |-CallExpr 0x14c808da0 <line:43:3, col:26> 'int'     | |-ImplicitCastExpr 0x14c808d88 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14c808d28 <col:3> 'int ()' Function 0x14c808c70 'cleanup_entry' 'int ()'     | |-ImplicitCastExpr 0x14c808dd0 <col:17> 'struct ip6t_entry *' <LValueToRValue>     | | `-DeclRefExpr 0x14c808d48 <col:17> 'struct ip6t_entry *' lvalue Var 0x14b02af38 'iter' 'struct ip6t_entry *'     | `-ImplicitCastExpr 0x14c808de8 <col:23> 'struct net *' <LValueToRValue>     |   `-DeclRefExpr 0x14c808d68 <col:23> 'struct net *' lvalue ParmVar 0x14b00e248 'net' 'struct net *'     |-LabelStmt 0x14c808f78 <line:44:2, line:45:28> 'free_newinfo'     | `-CallExpr 0x14c808f38 <col:2, col:28> 'int'     |   |-ImplicitCastExpr 0x14c808f20 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14c808ee0 <col:2> 'int ()' Function 0x14c808e28 'xt_free_table_info' 'int ()'     |   `-ImplicitCastExpr 0x14c808f60 <col:21> 'struct xt_table_info *' <LValueToRValue>     |     `-DeclRefExpr 0x14c808f00 <col:21> 'struct xt_table_info *' lvalue Var 0x14b02ac98 'newinfo' 'struct xt_table_info *'     `-ReturnStmt 0x14c808fd0 <line:46:2, col:9>       `-ImplicitCastExpr 0x14c808fb8 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x14c808f98 <col:9> 'int' lvalue Var 0x14b02a918 'ret' 'int' ","20670":"`-FunctionDecl 0x11f928318  line:1:1 invalid memxor_different_alignment 'int (int *, const char *, int)'   |-ParmVarDecl 0x11f928128 <col:29, col:37> col:37 referenced invalid dst 'int *'   |-ParmVarDecl 0x11f9281a8 <col:42, col:54> col:54 used src 'const char *'   |-ParmVarDecl 0x11f928228 <col:59, col:66> col:66 referenced invalid n 'int'   `-CompoundStmt 0x11f9427a8 <line:2:1, line:31:1>     |-DeclStmt 0x11f9284f0 <line:3:3, col:15>     | |-VarDecl 0x11f9283f0 <col:3, col:7> col:7 used shl 'int'     | `-VarDecl 0x11f928470 <col:3, col:12> col:12 used shr 'int'     |-DeclStmt 0x11f928588 <line:4:3, col:25>     | `-VarDecl 0x11f928520 <col:3, col:17> col:17 referenced invalid src_word 'const int *'     |-DeclStmt 0x11f941870 <line:5:3, col:39>     | `-VarDecl 0x11f9285b8 <col:3, col:38> col:12 used offset 'unsigned int' cinit     |   `-ImplicitCastExpr 0x11f941858 <col:21, col:38> 'unsigned int' <IntegralCast>     |     `-CallExpr 0x11f941818 <col:21, col:38> 'int'     |       |-ImplicitCastExpr 0x11f941800 <col:21> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x11f928780 <col:21> 'int ()' Function 0x11f9286c8 'ALIGN_OFFSET' 'int ()'     |       `-ImplicitCastExpr 0x11f941840 <col:35> 'const char *' <LValueToRValue>     |         `-DeclRefExpr 0x11f9287a0 <col:35> 'const char *' lvalue ParmVar 0x11f9281a8 'src' 'const char *'     |-BinaryOperator 0x11f941960 <line:8:3, col:20> 'int' contains-errors '='     | |-DeclRefExpr 0x11f941888 <col:3> 'int' lvalue Var 0x11f9283f0 'shl' 'int'     | `-BinaryOperator 0x11f941940 <col:9, col:20> '<dependent type>' contains-errors '*'     |   |-RecoveryExpr 0x11f941920 <col:9> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x11f9418c0 <col:20> 'unsigned int' lvalue Var 0x11f9285b8 'offset' 'unsigned int'     |-IfStmt 0x11f9420e0 <line:13:3, line:21:5> has_else     | |-BinaryOperator 0x11f941a78 <line:13:7, col:11> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x11f941a38 <col:7> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x11f941a58 <col:11> 'int' 1     | |-CompoundStmt 0x11f942028 <line:14:5, line:19:5>     | | |-UnaryOperator 0x11f941ae0 <line:15:7, col:8> '<dependent type>' contains-errors postfix '--' cannot overflow     | | | `-RecoveryExpr 0x11f941ab8 <col:7> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x11f941a98 <col:7> 'int' lvalue ParmVar 0x11f928228 'n' 'int'     | | `-CompoundAssignOperator 0x11f941ff8 <line:18:7, col:40> '<dependent type>' contains-errors '^=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |   |-ArraySubscriptExpr 0x11f941f58 <col:7, col:12> '<dependent type>' contains-errors lvalue     | |   | |-ImplicitCastExpr 0x11f941f28 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   | | `-RecoveryExpr 0x11f941c60 <col:7> '<dependent type>' contains-errors lvalue     | |   | |   `-DeclRefExpr 0x11f941c40 <col:7> 'int *' lvalue ParmVar 0x11f928128 'dst' 'int *'     | |   | `-ImplicitCastExpr 0x11f941f40 <col:11> '<dependent type>' contains-errors <LValueToRValue>     | |   |   `-RecoveryExpr 0x11f941c88 <col:11> '<dependent type>' contains-errors lvalue     | |   `-CallExpr 0x11f941fb8 <col:17, col:40> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x11f941dd8 <col:17> 'int ()' Function 0x11f941d20 'MERGE' 'int ()'     | |     |-RecoveryExpr 0x11f941f78 <col:24> '<dependent type>' contains-errors lvalue     | |     |-DeclRefExpr 0x11f941e10 <col:28> 'int' lvalue Var 0x11f9283f0 'shl' 'int'     | |     |-RecoveryExpr 0x11f941f98 <col:33> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x11f941e48 <col:37> 'int' lvalue Var 0x11f928470 'shr' 'int'     | `-NullStmt 0x11f9420d8 <line:21:5>     `-WhileStmt 0x11f942788 <line:23:3, line:30:5>       |-BinaryOperator 0x11f942150 <line:23:10, col:14> 'int' contains-errors '>'       | |-RecoveryExpr 0x11f942110 <col:10> '<dependent type>' contains-errors lvalue       | `-IntegerLiteral 0x11f942130 <col:14> 'int' 0       `-CompoundStmt 0x11f942768 <line:24:5, line:30:5>         |-CompoundAssignOperator 0x11f9421d8 <line:25:7, col:12> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'         | |-RecoveryExpr 0x11f942190 <col:7> '<dependent type>' contains-errors lvalue         | | `-DeclRefExpr 0x11f942170 <col:7> 'int' lvalue ParmVar 0x11f928228 'n' 'int'         | `-IntegerLiteral 0x11f9421b8 <col:12> 'int' 2         `-CompoundAssignOperator 0x11f942590 <line:27:7, col:41> '<dependent type>' contains-errors '^=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'           |-ArraySubscriptExpr 0x11f9424f0 <col:7, col:14> '<dependent type>' contains-errors lvalue           | |-ImplicitCastExpr 0x11f9424d8 <col:7> '<dependent type>' contains-errors <LValueToRValue>           | | `-RecoveryExpr 0x11f9422e0 <col:7> '<dependent type>' contains-errors lvalue           | |   `-DeclRefExpr 0x11f9422c0 <col:7> 'int *' lvalue ParmVar 0x11f928128 'dst' 'int *'           | `-BinaryOperator 0x11f942348 <col:11, col:13> '<dependent type>' contains-errors '+'           |   |-RecoveryExpr 0x11f942308 <col:11> '<dependent type>' contains-errors lvalue           |   `-IntegerLiteral 0x11f942328 <col:13> 'int' 1           `-CallExpr 0x11f942550 <col:19, col:41> '<dependent type>' contains-errors             |-DeclRefExpr 0x11f9423a0 <col:19> 'int ()' Function 0x11f941d20 'MERGE' 'int ()'             |-RecoveryExpr 0x11f942510 <col:25> '<dependent type>' contains-errors lvalue             |-DeclRefExpr 0x11f9423d8 <col:29> 'int' lvalue Var 0x11f9283f0 'shl' 'int'             |-RecoveryExpr 0x11f942530 <col:34> '<dependent type>' contains-errors lvalue             `-DeclRefExpr 0x11f942410 <col:38> 'int' lvalue Var 0x11f928470 'shr' 'int' ","20319":"`-FunctionDecl 0x13a9418d8  line:1:1 invalid pci_set_cfgdata8 'int (struct pci_vdev *, int, int)'   |-ParmVarDecl 0x13a928648 <col:18, col:35> col:35 used dev 'struct pci_vdev *'   |-ParmVarDecl 0x13a9286c8 <col:40, col:44> col:44 used offset 'int'   |-ParmVarDecl 0x13a928760 <col:52, col:60> col:60 invalid val 'int'   `-CompoundStmt 0x13a941ea0 <line:2:1, line:8:1>     `-IfStmt 0x13a941da8 <line:3:2, line:6:2>       |-BinaryOperator 0x13a941a10 <line:3:6, col:15> 'int' contains-errors '>'       | |-DeclRefExpr 0x13a941998 <col:6> 'int' lvalue ParmVar 0x13a9286c8 'offset' 'int'       | `-RecoveryExpr 0x13a9419f0 <col:15> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x13a941d88 <col:27, line:6:2>         |-CallExpr 0x13a941d18 <line:4:3, col:25> 'int'         | |-ImplicitCastExpr 0x13a941d00 <col:3> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x13a941b90 <col:3> 'int ()' Function 0x13a941ad8 'pr_err' 'int ()'         | |-ImplicitCastExpr 0x13a941d48 <col:10> 'char *' <ArrayToPointerDecay>         | | `-StringLiteral 0x13a941bf0 <col:10> 'char[4]' lvalue \"STR\"         | `-ImplicitCastExpr 0x13a941d60 <col:17> 'const char *' <ArrayToPointerDecay>         |   `-PredefinedExpr 0x13a941cb8 <col:17> 'const char[17]' lvalue __func__         |     `-StringLiteral 0x13a941c90 <col:17> 'const char[17]' lvalue \"pci_set_cfgdata8\"         `-ReturnStmt 0x13a941d78 <line:5:3> ","21207":"`-FunctionDecl 0x14380dd98  line:1:1 rsvg_new_clip_path 'int (void)'   `-CompoundStmt 0x143122c70 <line:2:1, line:11:1>     |-CallExpr 0x14380e2b8 <line:6:5, col:65> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14380e138 <col:5> 'int ()' Function 0x14380e080 '_rsvg_node_init' 'int ()'     | |-UnaryOperator 0x14380e280 <col:22, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x14380e238 <col:23, col:34> '<dependent type>' contains-errors lvalue ->super     | |   `-RecoveryExpr 0x14380e218 <col:23> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14380e298 <col:41> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x143122c60 <line:10:5, col:24>       `-UnaryOperator 0x143122c48 <col:12, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow         `-CXXDependentScopeMemberExpr 0x143122c00 <col:13, col:24> '<dependent type>' contains-errors lvalue ->super           `-RecoveryExpr 0x14380e3c8 <col:13> '<dependent type>' contains-errors lvalue ","20646":"`-FunctionDecl 0x12d00df18  line:1:1 invalid replace_delete_single_character 'int (int *, char, int)'   |-ParmVarDecl 0x12d00dd28 <col:33, col:49> col:49 invalid self 'int *'   |-ParmVarDecl 0x12d00dda0 <line:2:33, col:38> col:38 used from_c 'char'   |-ParmVarDecl 0x12d00de20 <col:46, col:57> col:57 invalid maxcount 'int'   `-CompoundStmt 0x12c9230d0 <line:3:1, line:39:1>     |-DeclStmt 0x12d00e0f0 <line:4:5, col:28>     | |-VarDecl 0x12d00dff0 <col:5, col:11> col:11 used self_s 'char *'     | `-VarDecl 0x12d00e070 <col:5, col:20> col:20 used result_s 'char *'     |-DeclStmt 0x12d00e2a8 <line:5:5, col:29>     | |-VarDecl 0x12d00e120 <col:5, col:11> col:11 used start 'char *'     | |-VarDecl 0x12d00e1a0 <col:5, col:19> col:19 used next 'char *'     | `-VarDecl 0x12d00e220 <col:5, col:26> col:26 used end 'char *'     |-BinaryOperator 0x12d027a88 <line:11:5, col:37> 'char *' contains-errors '='     | |-DeclRefExpr 0x12d027920 <col:5> 'char *' lvalue Var 0x12d00dff0 'self_s' 'char *'     | `-CallExpr 0x12d027a60 <col:14, col:37> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12d027a20 <col:14> 'int ()' Function 0x12d027968 'PyString_AS_STRING' 'int ()'     |   `-RecoveryExpr 0x12d027a40 <col:33> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12d027ec8 <line:14:5, line:16:5>     | |-BinaryOperator 0x12d027d38 <line:14:9, col:18> 'int' contains-errors '=='     | | |-RecoveryExpr 0x12d027d18 <col:9> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x12d027cd8 <col:18> 'int' 0     | `-CompoundStmt 0x12d027eb0 <col:21, line:16:5>     |   `-ReturnStmt 0x12d027ea0 <line:15:9, col:32>     |     `-CallExpr 0x12d027e78 <col:16, col:32> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x12d027e38 <col:16> 'int ()' Function 0x12d027d80 'return_self' 'int ()'     |       `-RecoveryExpr 0x12d027e58 <col:28> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12d027ff8 <line:18:5, col:29> 'char *' contains-errors '='     | |-DeclRefExpr 0x12d027ee8 <col:5> 'char *' lvalue Var 0x12d00e070 'result_s' 'char *'     | `-BinaryOperator 0x12d027fd8 <col:18, col:29> '<dependent type>' contains-errors '-'     |   |-RecoveryExpr 0x12d027f98 <col:18> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x12d027fb8 <col:29> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12d028258 <line:19:5, col:25> 'int'     | |-ImplicitCastExpr 0x12d028240 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12d0280f8 <col:5> 'int ()' Function 0x12d028040 'assert' 'int ()'     | `-BinaryOperator 0x12d0281e8 <col:12, col:24> 'int' '>='     |   |-ImplicitCastExpr 0x12d0281b8 <col:12> 'char *' <LValueToRValue>     |   | `-DeclRefExpr 0x12d028198 <col:12> 'char *' lvalue Var 0x12d00e070 'result_s' 'char *'     |   `-ImplicitCastExpr 0x12d0281d0 <col:24> 'char *' <NullToPointer>     |     `-IntegerLiteral 0x12d028130 <col:24> 'int' 0     |-BinaryOperator 0x12d028338 <line:26:5, col:13> 'char *' '='     | |-DeclRefExpr 0x12d0282e0 <col:5> 'char *' lvalue Var 0x12d00e120 'start' 'char *'     | `-ImplicitCastExpr 0x12d028320 <col:13> 'char *' <LValueToRValue>     |   `-DeclRefExpr 0x12d028300 <col:13> 'char *' lvalue Var 0x12d00dff0 'self_s' 'char *'     |-WhileStmt 0x12c922f40 <line:28:5, line:35:5>     | |-RecoveryExpr 0x12d0283b8 <line:28:12, col:22> '_Bool' contains-errors     | `-CompoundStmt 0x12c922f08 <col:25, line:35:5>     |   |-BinaryOperator 0x12d028678 <line:29:9, col:49> 'char *' '='     |   | |-DeclRefExpr 0x12d0283d8 <col:9> 'char *' lvalue Var 0x12d00e1a0 'next' 'char *'     |   | `-ImplicitCastExpr 0x12d028660 <col:16, col:49> 'char *' <IntegralToPointer>     |   |   `-CallExpr 0x12d0285e0 <col:16, col:49> 'int'     |   |     |-ImplicitCastExpr 0x12d0285c8 <col:16> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x12d0284d8 <col:16> 'int ()' Function 0x12d028420 'findchar' 'int ()'     |   |     |-ImplicitCastExpr 0x12d028618 <col:25> 'char *' <LValueToRValue>     |   |     | `-DeclRefExpr 0x12d0284f8 <col:25> 'char *' lvalue Var 0x12d00e120 'start' 'char *'     |   |     |-BinaryOperator 0x12d028588 <col:32, col:36> 'long' '-'     |   |     | |-ImplicitCastExpr 0x12d028558 <col:32> 'char *' <LValueToRValue>     |   |     | | `-DeclRefExpr 0x12d028518 <col:32> 'char *' lvalue Var 0x12d00e220 'end' 'char *'     |   |     | `-ImplicitCastExpr 0x12d028570 <col:36> 'char *' <LValueToRValue>     |   |     |   `-DeclRefExpr 0x12d028538 <col:36> 'char *' lvalue Var 0x12d00e120 'start' 'char *'     |   |     `-ImplicitCastExpr 0x12d028648 <col:43> 'int' <IntegralCast>     |   |       `-ImplicitCastExpr 0x12d028630 <col:43> 'char' <LValueToRValue>     |   |         `-DeclRefExpr 0x12d0285a8 <col:43> 'char' lvalue ParmVar 0x12d00dda0 'from_c' 'char'     |   |-IfStmt 0x12d0286e0 <line:30:9, line:31:13>     |   | |-RecoveryExpr 0x12d0286b8 <line:30:13, col:21> '_Bool' contains-errors     |   | `-BreakStmt 0x12d0286d8 <line:31:13>     |   |-CallExpr 0x12c922ce8 <line:32:9, col:46> 'int'     |   | |-ImplicitCastExpr 0x12c922cd0 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x12d0287e0 <col:9> 'int ()' Function 0x12d028728 'Py_MEMCPY' 'int ()'     |   | |-ImplicitCastExpr 0x12c922d20 <col:19> 'char *' <LValueToRValue>     |   | | `-DeclRefExpr 0x12c922c00 <col:19> 'char *' lvalue Var 0x12d00e070 'result_s' 'char *'     |   | |-ImplicitCastExpr 0x12c922d38 <col:29> 'char *' <LValueToRValue>     |   | | `-DeclRefExpr 0x12c922c20 <col:29> 'char *' lvalue Var 0x12d00e120 'start' 'char *'     |   | `-BinaryOperator 0x12c922cb0 <col:36, col:41> 'long' '-'     |   |   |-ImplicitCastExpr 0x12c922c80 <col:36> 'char *' <LValueToRValue>     |   |   | `-DeclRefExpr 0x12c922c40 <col:36> 'char *' lvalue Var 0x12d00e1a0 'next' 'char *'     |   |   `-ImplicitCastExpr 0x12c922c98 <col:41> 'char *' <LValueToRValue>     |   |     `-DeclRefExpr 0x12c922c60 <col:41> 'char *' lvalue Var 0x12d00e120 'start' 'char *'     |   |-CompoundAssignOperator 0x12c922e20 <line:33:9, col:32> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'     |   | |-DeclRefExpr 0x12c922d50 <col:9> 'char *' lvalue Var 0x12d00e070 'result_s' 'char *'     |   | `-ParenExpr 0x12c922e00 <col:21, col:32> 'long'     |   |   `-BinaryOperator 0x12c922de0 <col:22, col:27> 'long' '-'     |   |     |-ImplicitCastExpr 0x12c922db0 <col:22> 'char *' <LValueToRValue>     |   |     | `-DeclRefExpr 0x12c922d70 <col:22> 'char *' lvalue Var 0x12d00e1a0 'next' 'char *'     |   |     `-ImplicitCastExpr 0x12c922dc8 <col:27> 'char *' <LValueToRValue>     |   |       `-DeclRefExpr 0x12c922d90 <col:27> 'char *' lvalue Var 0x12d00e120 'start' 'char *'     |   `-BinaryOperator 0x12c922ee8 <line:34:9, col:22> 'char *' '='     |     |-DeclRefExpr 0x12c922e50 <col:9> 'char *' lvalue Var 0x12d00e120 'start' 'char *'     |     `-BinaryOperator 0x12c922ec8 <col:17, col:22> 'char *' '+'     |       |-ImplicitCastExpr 0x12c922eb0 <col:17> 'char *' <LValueToRValue>     |       | `-DeclRefExpr 0x12c922e70 <col:17> 'char *' lvalue Var 0x12d00e1a0 'next' 'char *'     |       `-IntegerLiteral 0x12c922e90 <col:22> 'int' 1     `-CallExpr 0x12c923068 <line:36:5, col:41> 'int'       |-ImplicitCastExpr 0x12c923050 <col:5> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x12c922f60 <col:5> 'int ()' Function 0x12d028728 'Py_MEMCPY' 'int ()'       |-ImplicitCastExpr 0x12c9230a0 <col:15> 'char *' <LValueToRValue>       | `-DeclRefExpr 0x12c922f80 <col:15> 'char *' lvalue Var 0x12d00e070 'result_s' 'char *'       |-ImplicitCastExpr 0x12c9230b8 <col:25> 'char *' <LValueToRValue>       | `-DeclRefExpr 0x12c922fa0 <col:25> 'char *' lvalue Var 0x12d00e120 'start' 'char *'       `-BinaryOperator 0x12c923030 <col:32, col:36> 'long' '-'         |-ImplicitCastExpr 0x12c923000 <col:32> 'char *' <LValueToRValue>         | `-DeclRefExpr 0x12c922fc0 <col:32> 'char *' lvalue Var 0x12d00e220 'end' 'char *'         `-ImplicitCastExpr 0x12c923018 <col:36> 'char *' <LValueToRValue>           `-DeclRefExpr 0x12c922fe0 <col:36> 'char *' lvalue Var 0x12d00e120 'start' 'char *' ","21052":"`-FunctionDecl 0x1419281f8  col:12 invalid InplaceOpBase 'int (int *)'   |-ParmVarDecl 0x141928128 <col:26, col:48> col:48 invalid ctx 'int *'   `-CompoundStmt 0x1419282a8 <col:69, col:70> ","20983":"`-FunctionDecl 0x15c140b58  line:1:12 add_one_ref 'int (const char *, const struct object_id *, int, void *)' static   |-ParmVarDecl 0x15c1280d8 <col:24, col:36> col:36 used path 'const char *'   |-ParmVarDecl 0x15c1286c8 <col:42, col:66> col:66 used oid 'const struct object_id *'   |-ParmVarDecl 0x15c128748 <line:2:10, col:14> col:14 used flag 'int'   |-ParmVarDecl 0x15c140a00 <col:20, col:26> col:26 used cb_data 'void *'   `-CompoundStmt 0x15c141970 <line:3:1, line:16:1>     |-DeclStmt 0x15c140f40 <line:4:2, col:52>     | |-RecordDecl 0x15c140c68 <col:2, col:9> col:9 struct rev_info     | `-VarDecl 0x15c140dd8 <col:2, col:45> col:19 used revs 'struct rev_info *' cinit     |   `-CStyleCastExpr 0x15c140f00 <col:26, col:45> 'struct rev_info *' <BitCast>     |     `-ImplicitCastExpr 0x15c140ee8 <col:45> 'void *' <LValueToRValue> part_of_explicit_cast     |       `-DeclRefExpr 0x15c140e40 <col:45> 'void *' lvalue ParmVar 0x15c140a00 'cb_data' 'void *'     |-DeclStmt 0x15c141148 <line:5:2, col:23>     | |-RecordDecl 0x15c140f58 <col:2, col:9> col:9 struct object     | `-VarDecl 0x15c1410c8 <col:2, col:17> col:17 used object 'struct object *'     |-IfStmt 0x15c1414f8 <line:7:2, line:10:2>     | |-RecoveryExpr 0x15c141228 <line:7:6, col:51> '_Bool' contains-errors     | `-CompoundStmt 0x15c1414d8 <col:54, line:10:2>     |   |-CallExpr 0x15c141448 <line:8:3, col:22> 'int'     |   | |-ImplicitCastExpr 0x15c141430 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x15c141360 <col:3> 'int ()' Function 0x15c1412a8 'warning' 'int ()'     |   | |-ImplicitCastExpr 0x15c141478 <col:11> 'char *' <ArrayToPointerDecay>     |   | | `-StringLiteral 0x15c1413c0 <col:11> 'char[4]' lvalue \"STR\"     |   | `-ImplicitCastExpr 0x15c141490 <col:18> 'const char *' <LValueToRValue>     |   |   `-DeclRefExpr 0x15c1413e0 <col:18> 'const char *' lvalue ParmVar 0x15c1280d8 'path' 'const char *'     |   `-ReturnStmt 0x15c1414c8 <line:9:3, col:10>     |     `-IntegerLiteral 0x15c1414a8 <col:10> 'int' 0     |-BinaryOperator 0x15c1416e8 <line:12:2, col:46> 'struct object *' contains-errors '='     | |-DeclRefExpr 0x15c141518 <col:2> 'struct object *' lvalue Var 0x15c1410c8 'object' 'struct object *'     | `-CallExpr 0x15c1416b8 <col:11, col:46> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15c141618 <col:11> 'int ()' Function 0x15c141560 'parse_object_or_die' 'int ()'     |   |-RecoveryExpr 0x15c141670 <col:31, col:36> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x15c141638 <col:31> 'const struct object_id *' lvalue ParmVar 0x15c1286c8 'oid' 'const struct object_id *'     |   `-DeclRefExpr 0x15c141698 <col:42> 'const char *' lvalue ParmVar 0x15c1280d8 'path' 'const char *'     |-CallExpr 0x15c1418c0 <line:13:2, col:37> 'int'     | |-ImplicitCastExpr 0x15c1418a8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x15c1417e8 <col:2> 'int ()' Function 0x15c141730 'add_pending_object' 'int ()'     | |-ImplicitCastExpr 0x15c1418f8 <col:21> 'struct rev_info *' <LValueToRValue>     | | `-DeclRefExpr 0x15c141808 <col:21> 'struct rev_info *' lvalue Var 0x15c140dd8 'revs' 'struct rev_info *'     | |-ImplicitCastExpr 0x15c141910 <col:27> 'struct object *' <LValueToRValue>     | | `-DeclRefExpr 0x15c141828 <col:27> 'struct object *' lvalue Var 0x15c1410c8 'object' 'struct object *'     | `-ImplicitCastExpr 0x15c141928 <col:35> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x15c141890 <col:35> 'char[1]' lvalue \"\"     `-ReturnStmt 0x15c141960 <line:15:2, col:9>       `-IntegerLiteral 0x15c141940 <col:9> 'int' 0 ","21062":"`-FunctionDecl 0x11c947238  col:5 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x11c947338 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x11c9472e0 <<invalid sloc>> Implicit 873 ","20299":"`-FunctionDecl 0x15a027f40  col:5 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x15a028040 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x15a0280a8 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x15a028110 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x15a027fe8 <<invalid sloc>> Implicit 900 ","20711":"`-FunctionDecl 0x1581284c8  line:1:1 invalid memxor3_different_alignment_all 'int (int *, const char *, const char *, unsigned int, unsigned int, int)'   |-ParmVarDecl 0x158128128 <col:34, col:42> col:42 referenced invalid dst 'int *'   |-ParmVarDecl 0x1581281a8 <line:2:6, col:18> col:18 a 'const char *'   |-ParmVarDecl 0x158128228 <col:21, col:33> col:33 b 'const char *'   |-ParmVarDecl 0x1581282a8 <line:3:6, col:15> col:15 used a_offset 'unsigned int'   |-ParmVarDecl 0x158128328 <col:25, col:34> col:34 used b_offset 'unsigned int'   |-ParmVarDecl 0x1581283a8 <line:4:6, col:13> col:13 referenced invalid n 'int'   `-CompoundStmt 0x150008810 <line:5:1, line:42:1>     |-DeclStmt 0x1581287c8 <line:6:3, col:21>     | |-VarDecl 0x1581285b8 <col:3, col:7> col:7 used al 'int'     | |-VarDecl 0x158128638 <col:3, col:11> col:11 used ar 'int'     | |-VarDecl 0x1581286b8 <col:3, col:15> col:15 used bl 'int'     | `-VarDecl 0x158128738 <col:3, col:19> col:19 used br 'int'     |-DeclStmt 0x158141868 <line:7:3, col:23>     | `-VarDecl 0x158141800 <col:3, col:17> col:17 referenced invalid a_word 'const int *'     |-DeclStmt 0x158141900 <line:8:3, col:23>     | `-VarDecl 0x158141898 <col:3, col:17> col:17 referenced invalid b_word 'const int *'     |-BinaryOperator 0x1581419f0 <line:12:3, col:19> 'int' contains-errors '='     | |-DeclRefExpr 0x158141918 <col:3> 'int' lvalue Var 0x1581285b8 'al' 'int'     | `-BinaryOperator 0x1581419d0 <col:8, col:19> '<dependent type>' contains-errors '*'     |   |-RecoveryExpr 0x1581419b0 <col:8> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x158141950 <col:19> 'unsigned int' lvalue ParmVar 0x1581282a8 'a_offset' 'unsigned int'     |-BinaryOperator 0x158141b58 <line:14:3, col:19> 'int' contains-errors '='     | |-DeclRefExpr 0x158141a80 <col:3> 'int' lvalue Var 0x1581286b8 'bl' 'int'     | `-BinaryOperator 0x158141b38 <col:8, col:19> '<dependent type>' contains-errors '*'     |   |-RecoveryExpr 0x158141b18 <col:8> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x158141ab8 <col:19> 'unsigned int' lvalue ParmVar 0x158128328 'b_offset' 'unsigned int'     |-IfStmt 0x1581426f0 <line:20:3, line:32:5> has_else     | |-BinaryOperator 0x158141cb8 <line:20:7, col:11> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x158141c78 <col:7> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x158141c98 <col:11> 'int' 1     | |-CompoundStmt 0x1581425a0 <line:21:5, line:27:5>     | | |-UnaryOperator 0x158141d20 <line:22:7, col:8> '<dependent type>' contains-errors postfix '--' cannot overflow     | | | `-RecoveryExpr 0x158141cf8 <col:7> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x158141cd8 <col:7> 'int' lvalue ParmVar 0x1581283a8 'n' 'int'     | | `-BinaryOperator 0x158142580 <line:26:7, col:62> '<dependent type>' contains-errors '='     | |   |-ArraySubscriptExpr 0x158142440 <col:7, col:12> '<dependent type>' contains-errors lvalue     | |   | |-ImplicitCastExpr 0x158142410 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   | | `-RecoveryExpr 0x158141fe8 <col:7> '<dependent type>' contains-errors lvalue     | |   | |   `-DeclRefExpr 0x158141fc8 <col:7> 'int *' lvalue ParmVar 0x158128128 'dst' 'int *'     | |   | `-ImplicitCastExpr 0x158142428 <col:11> '<dependent type>' contains-errors <LValueToRValue>     | |   |   `-RecoveryExpr 0x158142010 <col:11> '<dependent type>' contains-errors lvalue     | |   `-BinaryOperator 0x158142560 <col:16, col:62> '<dependent type>' contains-errors '^'     | |     |-CallExpr 0x1581424a0 <col:16, col:37> '<dependent type>' contains-errors     | |     | |-DeclRefExpr 0x1581421e0 <col:16> 'int ()' Function 0x158142128 'MERGE' 'int ()'     | |     | |-RecoveryExpr 0x158142460 <col:23> '<dependent type>' contains-errors lvalue     | |     | |-DeclRefExpr 0x158142218 <col:27> 'int' lvalue Var 0x1581285b8 'al' 'int'     | |     | |-RecoveryExpr 0x158142480 <col:31> '<dependent type>' contains-errors lvalue     | |     | `-DeclRefExpr 0x158142250 <col:35> 'int' lvalue Var 0x158128638 'ar' 'int'     | |     `-CallExpr 0x158142520 <col:41, col:62> '<dependent type>' contains-errors     | |       |-DeclRefExpr 0x1581422b0 <col:41> 'int ()' Function 0x158142128 'MERGE' 'int ()'     | |       |-RecoveryExpr 0x1581424e0 <col:48> '<dependent type>' contains-errors lvalue     | |       |-DeclRefExpr 0x1581422e8 <col:52> 'int' lvalue Var 0x1581286b8 'bl' 'int'     | |       |-RecoveryExpr 0x158142500 <col:56> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x158142320 <col:60> 'int' lvalue Var 0x158128738 'br' 'int'     | `-CompoundStmt 0x1581426e0 <line:29:5, line:32:5>     `-WhileStmt 0x1500087f0 <line:34:3, line:41:5>       |-BinaryOperator 0x158142760 <line:34:10, col:14> 'int' contains-errors '>'       | |-RecoveryExpr 0x158142720 <col:10> '<dependent type>' contains-errors lvalue       | `-IntegerLiteral 0x158142740 <col:14> 'int' 0       `-CompoundStmt 0x1500087d8 <line:35:5, line:41:5>         `-CompoundAssignOperator 0x150008200 <line:36:7, col:12> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'           |-RecoveryExpr 0x1581427a0 <col:7> '<dependent type>' contains-errors lvalue           | `-DeclRefExpr 0x158142780 <col:7> 'int' lvalue ParmVar 0x1581283a8 'n' 'int'           `-IntegerLiteral 0x1581427c8 <col:12> 'int' 2 ","20584":"`-FunctionDecl 0x107029e00  col:9 implicit used strstr 'char *(const char *, const char *)' extern   |-ParmVarDecl 0x107029f00 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x107029f68 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x107029ea8 <<invalid sloc>> Implicit 898 ","20445":"`-FunctionDecl 0x126082ac8  col:5 implicit used va_end 'void (__builtin_va_list &)' extern   |-ParmVarDecl 0x125841a00 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'   |-BuiltinAttr 0x126082b70 <<invalid sloc>> Implicit 865   `-NoThrowAttr 0x125841a70 <col:5> Implicit ","21056":"`-FunctionDecl 0x141827438  line:1:1 invalid virgl_cmd_get_capset 'int (int *, struct virtio_gpu_ctrl_command *)'   |-ParmVarDecl 0x14180dd28 <col:22, col:29> col:29 invalid g 'int *'   |-ParmVarDecl 0x14180e318 <line:2:22, col:54> col:54 used cmd 'struct virtio_gpu_ctrl_command *'   `-CompoundStmt 0x143008a48 <line:3:1, line:20:1>     |-DeclStmt 0x141827668 <line:4:5, col:36>     | |-RecordDecl 0x1418274f0 <col:5, col:12> col:12 struct virtio_gpu_get_capset     | `-VarDecl 0x1418275e8 <col:5, col:34> col:34 invalid gc 'struct virtio_gpu_get_capset'     |-DeclStmt 0x141827868 <line:5:5, col:40>     | |-RecordDecl 0x141827680 <col:5, col:12> col:12 struct virtio_gpu_resp_capset     | `-VarDecl 0x1418277e8 <col:5, col:36> col:36 used resp 'struct virtio_gpu_resp_capset *'     |-CallExpr 0x141827a20 <line:8:5, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1418279e0 <col:5> 'int ()' Function 0x141827928 'VUGPU_FILL_CMD' 'int ()'     | `-RecoveryExpr 0x141827a00 <col:20> '<dependent type>' contains-errors lvalue     |-CallExpr 0x141827cb8 <line:10:5, line:11:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x141827b28 <line:10:5> 'int ()' Function 0x141827a70 'virgl_renderer_get_cap_set' 'int ()'     | |-CXXDependentScopeMemberExpr 0x141827b68 <col:32, col:35> '<dependent type>' contains-errors lvalue .capset_id     | | `-RecoveryExpr 0x141827b48 <col:32> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x141827c68 <col:46, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x141827c48 <col:47> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x141827ca0 <line:11:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x141827c80 <col:33> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x141827f98 <line:14:5, col:22> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x141827ef8 <col:5, col:15> '<dependent type>' contains-errors lvalue .type     | | `-RecoveryExpr 0x141827ed0 <col:5, col:11> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x141827e98 <col:5> 'struct virtio_gpu_resp_capset *' lvalue Var 0x1418277e8 'resp' 'struct virtio_gpu_resp_capset *'     | `-RecoveryExpr 0x141827f78 <col:22> '<dependent type>' contains-errors lvalue     |-CallExpr 0x141828228 <line:15:5, line:17:55> '<dependent type>' contains-errors     | |-DeclRefExpr 0x141828098 <line:15:5> 'int ()' Function 0x141827fe0 'virgl_renderer_fill_caps' 'int ()'     | |-CXXDependentScopeMemberExpr 0x1418280d8 <col:30, col:33> '<dependent type>' contains-errors lvalue .capset_id     | | `-RecoveryExpr 0x1418280b8 <col:30> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x141828140 <line:16:30, col:33> '<dependent type>' contains-errors lvalue .capset_version     | | `-RecoveryExpr 0x141828120 <col:30> '<dependent type>' contains-errors lvalue     | `-CStyleCastExpr 0x141828200 <line:17:30, col:44> 'void *' contains-errors <Dependent>     |   `-RecoveryExpr 0x1418281c0 <col:38, col:44> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x141828188 <col:38> 'struct virtio_gpu_resp_capset *' lvalue Var 0x1418277e8 'resp' 'struct virtio_gpu_resp_capset *'     `-CallExpr 0x143008a08 <line:19:5, col:16> 'int'       |-ImplicitCastExpr 0x1430089f0 <col:5> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x143008980 <col:5> 'int ()' Function 0x1430088c8 'g_free' 'int ()'       `-ImplicitCastExpr 0x143008a30 <col:12> 'struct virtio_gpu_resp_capset *' <LValueToRValue>         `-DeclRefExpr 0x1430089a0 <col:12> 'struct virtio_gpu_resp_capset *' lvalue Var 0x1418277e8 'resp' 'struct virtio_gpu_resp_capset *' ","20601":"`-FunctionDecl 0x138944d48  line:1:5 ovl_setattr 'int (struct dentry *, struct iattr *)'   |-ParmVarDecl 0x138928648 <col:17, col:32> col:32 used dentry 'struct dentry *'   |-ParmVarDecl 0x138944c28 <col:40, col:54> col:54 used attr 'struct iattr *'   `-CompoundStmt 0x138946e28 <line:2:1, line:21:1>     |-DeclStmt 0x138944ec8 <line:3:2, col:9>     | `-VarDecl 0x138944e60 <col:2, col:6> col:6 used err 'int'     |-DeclStmt 0x138944fd0 <line:4:2, col:28>     | `-VarDecl 0x138944f68 <col:2, col:17> col:17 used upperdentry 'struct dentry *'     |-BinaryOperator 0x1389451f8 <line:6:2, col:29> 'int' '='     | |-DeclRefExpr 0x138944fe8 <col:2> 'int' lvalue Var 0x138944e60 'err' 'int'     | `-CallExpr 0x1389451b8 <col:8, col:29> 'int'     |   |-ImplicitCastExpr 0x1389451a0 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x138945130 <col:8> 'int ()' Function 0x138945078 'ovl_want_write' 'int ()'     |   `-ImplicitCastExpr 0x1389451e0 <col:23> 'struct dentry *' <LValueToRValue>     |     `-DeclRefExpr 0x138945150 <col:23> 'struct dentry *' lvalue ParmVar 0x138928648 'dentry' 'struct dentry *'     |-IfStmt 0x1389452b8 <line:7:2, line:8:8>     | |-ImplicitCastExpr 0x138945238 <line:7:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x138945218 <col:6> 'int' lvalue Var 0x138944e60 'err' 'int'     | `-GotoStmt 0x1389452a0 <line:8:3, col:8> 'out' 0x138945250     |-BinaryOperator 0x138945488 <line:10:2, col:39> 'struct dentry *' '='     | |-DeclRefExpr 0x1389452d8 <col:2> 'struct dentry *' lvalue Var 0x138944f68 'upperdentry' 'struct dentry *'     | `-ImplicitCastExpr 0x138945470 <col:16, col:39> 'struct dentry *' <IntegralToPointer>     |   `-CallExpr 0x138945430 <col:16, col:39> 'int'     |     |-ImplicitCastExpr 0x138945418 <col:16> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1389453d8 <col:16> 'int ()' Function 0x138945320 'ovl_dentry_upper' 'int ()'     |     `-ImplicitCastExpr 0x138945458 <col:33> 'struct dentry *' <LValueToRValue>     |       `-DeclRefExpr 0x1389453f8 <col:33> 'struct dentry *' lvalue ParmVar 0x138928648 'dentry' 'struct dentry *'     |-IfStmt 0x138946c18 <line:11:2, line:17:2> has_else     | |-ImplicitCastExpr 0x1389454c8 <line:11:6> 'struct dentry *' <LValueToRValue>     | | `-DeclRefExpr 0x1389454a8 <col:6> 'struct dentry *' lvalue Var 0x138944f68 'upperdentry' 'struct dentry *'     | |-CompoundStmt 0x138945af8 <col:19, line:15:2>     | | |-CallExpr 0x1389456a0 <line:12:3, col:44> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x1389455c0 <col:3> 'int ()' Function 0x138945508 'mutex_lock' 'int ()'     | | | `-UnaryOperator 0x138945688 <col:14, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-CXXDependentScopeMemberExpr 0x138945640 <col:15, col:37> '<dependent type>' contains-errors lvalue ->i_mutex     | | |     `-RecoveryExpr 0x138945618 <col:15, col:28> '<dependent type>' contains-errors lvalue     | | |       `-DeclRefExpr 0x1389455e0 <col:15> 'struct dentry *' lvalue Var 0x138944f68 'upperdentry' 'struct dentry *'     | | |-BinaryOperator 0x1389458f0 <line:13:3, col:46> 'int' contains-errors '='     | | | |-DeclRefExpr 0x1389456c8 <col:3> 'int' lvalue Var 0x138944e60 'err' 'int'     | | | `-CallExpr 0x1389458b8 <col:9, col:46> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x1389457c8 <col:9> 'int ()' Function 0x138945710 'notify_change' 'int ()'     | | |   |-DeclRefExpr 0x1389457e8 <col:23> 'struct dentry *' lvalue Var 0x138944f68 'upperdentry' 'struct dentry *'     | | |   |-DeclRefExpr 0x138945808 <col:36> 'struct iattr *' lvalue ParmVar 0x138944c28 'attr' 'struct iattr *'     | | |   `-RecoveryExpr 0x138945898 <col:42> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x138945ad0 <line:14:3, col:46> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x1389459f0 <col:3> 'int ()' Function 0x138945938 'mutex_unlock' 'int ()'     | |   `-UnaryOperator 0x138945ab8 <col:16, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-CXXDependentScopeMemberExpr 0x138945a70 <col:17, col:39> '<dependent type>' contains-errors lvalue ->i_mutex     | |       `-RecoveryExpr 0x138945a48 <col:17, col:30> '<dependent type>' contains-errors lvalue     | |         `-DeclRefExpr 0x138945a10 <col:17> 'struct dentry *' lvalue Var 0x138944f68 'upperdentry' 'struct dentry *'     | `-CompoundStmt 0x138946c00 <line:15:9, line:17:2>     |   `-BinaryOperator 0x138946be0 <line:16:3, col:45> 'int' contains-errors '='     |     |-DeclRefExpr 0x138945b20 <col:3> 'int' lvalue Var 0x138944e60 'err' 'int'     |     `-CallExpr 0x138946ba8 <col:9, col:45> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x138946ab8 <col:9> 'int ()' Function 0x138946a00 'ovl_copy_up_last' 'int ()'     |       |-DeclRefExpr 0x138946ad8 <col:26> 'struct dentry *' lvalue ParmVar 0x138928648 'dentry' 'struct dentry *'     |       |-DeclRefExpr 0x138946af8 <col:34> 'struct iattr *' lvalue ParmVar 0x138944c28 'attr' 'struct iattr *'     |       `-RecoveryExpr 0x138946b88 <col:40> '<dependent type>' contains-errors lvalue     |-CallExpr 0x138946d80 <line:18:2, col:23> 'int'     | |-ImplicitCastExpr 0x138946d68 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x138946d28 <col:2> 'int ()' Function 0x138946c70 'ovl_drop_write' 'int ()'     | `-ImplicitCastExpr 0x138946da8 <col:17> 'struct dentry *' <LValueToRValue>     |   `-DeclRefExpr 0x138946d48 <col:17> 'struct dentry *' lvalue ParmVar 0x138928648 'dentry' 'struct dentry *'     `-LabelStmt 0x138946e08 <line:19:1, line:20:9> 'out'       `-ReturnStmt 0x138946df8 <col:2, col:9>         `-ImplicitCastExpr 0x138946de0 <col:9> 'int' <LValueToRValue>           `-DeclRefExpr 0x138946dc0 <col:9> 'int' lvalue Var 0x138944e60 'err' 'int' ","20996":"`-FunctionDecl 0x11e00df10  line:1:13 invalid invalidLens 'void (int *, int *, const char *)' static   |-ParmVarDecl 0x11e00dd28 <col:25, col:33> col:33 invalid tc 'int *'   |-ParmVarDecl 0x11e00dda8 <col:37, col:45> col:45 invalid aug 'int *'   |-ParmVarDecl 0x11e00de28 <col:50, col:62> col:62 used lens 'const char *'   `-CompoundStmt 0x11e027ca0 <col:68, line:15:1>     |-DeclStmt 0x11e00e0e8 <line:2:5, col:20>     | |-VarDecl 0x11e00dfe8 <col:5, col:9> col:9 used r 'int'     | `-VarDecl 0x11e00e068 <col:5, col:12> col:12 used nmatches 'int'     |-BinaryOperator 0x11e00e378 <line:4:5, col:33> 'int' contains-errors '='     | |-DeclRefExpr 0x11e00e100 <col:5> 'int' lvalue Var 0x11e00dfe8 'r' 'int'     | `-CallExpr 0x11e00e340 <col:9, col:33> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x11e00e280 <col:9> 'int ()' Function 0x11e00e1c8 'aug_set' 'int ()'     |   |-RecoveryExpr 0x11e00e2a0 <col:17> '<dependent type>' contains-errors lvalue     |   |-StringLiteral 0x11e00e300 <col:22> 'char[4]' lvalue \"STR\"     |   `-DeclRefExpr 0x11e00e320 <col:29> 'const char *' lvalue ParmVar 0x11e00de28 'lens' 'const char *'     |-CallExpr 0x11e027518 <line:5:5, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11e0274b8 <col:5> 'int ()' Function 0x11e027400 'CuAssertRetSuccess' 'int ()'     | |-RecoveryExpr 0x11e0274d8 <col:24> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x11e0274f8 <col:28> 'int' lvalue Var 0x11e00dfe8 'r' 'int'     |-BinaryOperator 0x11e0275f8 <line:7:5, col:27> 'int' contains-errors '='     | |-DeclRefExpr 0x11e027548 <col:5> 'int' lvalue Var 0x11e00dfe8 'r' 'int'     | `-CallExpr 0x11e0275c8 <col:9, col:27> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x11e027568 <col:9> 'int ()' Function 0x11e00e1c8 'aug_set' 'int ()'     |   |-RecoveryExpr 0x11e027588 <col:17> '<dependent type>' contains-errors lvalue     |   `-StringLiteral 0x11e0275a8 <col:22> 'char[4]' lvalue \"STR\"     |-CallExpr 0x11e027678 <line:8:5, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11e027618 <col:5> 'int ()' Function 0x11e027400 'CuAssertRetSuccess' 'int ()'     | |-RecoveryExpr 0x11e027638 <col:24> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x11e027658 <col:28> 'int' lvalue Var 0x11e00dfe8 'r' 'int'     |-BinaryOperator 0x11e027810 <line:10:5, col:21> 'int' contains-errors '='     | |-DeclRefExpr 0x11e0276a8 <col:5> 'int' lvalue Var 0x11e00dfe8 'r' 'int'     | `-CallExpr 0x11e0277e8 <col:9, col:21> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x11e0277a8 <col:9> 'int ()' Function 0x11e0276f0 'aug_load' 'int ()'     |   `-RecoveryExpr 0x11e0277c8 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x11e027890 <line:11:5, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11e027830 <col:5> 'int ()' Function 0x11e027400 'CuAssertRetSuccess' 'int ()'     | |-RecoveryExpr 0x11e027850 <col:24> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x11e027870 <col:28> 'int' lvalue Var 0x11e00dfe8 'r' 'int'     |-BinaryOperator 0x11e027ae8 <line:13:5, col:42> 'int' contains-errors '='     | |-DeclRefExpr 0x11e0278c0 <col:5> 'int' lvalue Var 0x11e00e068 'nmatches' 'int'     | `-CallExpr 0x11e027ab0 <col:16, col:42> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x11e0279c0 <col:16> 'int ()' Function 0x11e027908 'aug_match' 'int ()'     |   |-RecoveryExpr 0x11e0279e0 <col:26> '<dependent type>' contains-errors lvalue     |   |-StringLiteral 0x11e027a00 <col:31> 'char[4]' lvalue \"STR\"     |   `-RecoveryExpr 0x11e027a90 <col:38> '<dependent type>' contains-errors lvalue     `-CallExpr 0x11e027c68 <line:14:5, col:38> '<dependent type>' contains-errors       |-DeclRefExpr 0x11e027be8 <col:5> 'int ()' Function 0x11e027b30 'CuAssertIntEquals' 'int ()'       |-RecoveryExpr 0x11e027c08 <col:23> '<dependent type>' contains-errors lvalue       |-IntegerLiteral 0x11e027c28 <col:27> 'int' 1       `-DeclRefExpr 0x11e027c48 <col:30> 'int' lvalue Var 0x11e00e068 'nmatches' 'int' ","21063":"`-FunctionDecl 0x158928310  line:1:8 invalid Transcode 'void (int *, int *, int *)'   |-ParmVarDecl 0x158928128 <col:18, col:27> col:27 invalid s 'int *'   |-ParmVarDecl 0x1589281a8 <col:30, col:42> col:42 invalid input_encoder 'int *'   |-ParmVarDecl 0x158928228 <line:2:18, col:24> col:24 invalid found_any_format_error 'int *'   `-CompoundStmt 0x158941858 <col:48, line:11:3>     |-RecoveryExpr 0x158928400 <line:3:5> '<dependent type>' contains-errors lvalue     `-CallExpr 0x158941820 <line:10:5, col:39> '<dependent type>' contains-errors       |-DeclRefExpr 0x158928738 <col:5> 'int ()' Function 0x158928680 'Encode' 'int ()'       |-RecoveryExpr 0x1589287e0 <col:12> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x158941800 <col:30> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x158928788 <col:38> '<dependent type>' contains-errors lvalue ","20539":"`-FunctionDecl 0x1538274a8  col:62 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x153829a00 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x153827550 <<invalid sloc>> Implicit 902 ","20308":"`-FunctionDecl 0x152940c48  line:1:1 invalid archive_mstring_get_wcs 'int (struct archive *, struct archive_mstring *, const int **)'   |-ParmVarDecl 0x152928648 <col:25, col:41> col:41 used a 'struct archive *'   |-ParmVarDecl 0x152940a28 <col:44, col:68> col:68 used aes 'struct archive_mstring *'   |-ParmVarDecl 0x152940b00 <line:2:5, col:21> col:21 invalid wp 'const int **'   `-CompoundStmt 0x152944110 <line:3:1, line:26:1>     |-DeclStmt 0x152940e40 <line:4:2, col:16>     | |-VarDecl 0x152940d20 <col:2, col:6> col:6 used r 'int'     | `-VarDecl 0x152940da0 <col:2, col:15> col:9 used ret 'int' cinit     |   `-IntegerLiteral 0x152940e08 <col:15> 'int' 0     |-CStyleCastExpr 0x152940ea0 <line:6:2, col:8> 'void' <ToVoid>     | `-ImplicitCastExpr 0x152940e88 <col:8> 'struct archive *' <LValueToRValue> part_of_explicit_cast     |   `-DeclRefExpr 0x152940e58 <col:8> 'struct archive *' lvalue ParmVar 0x152928648 'a' 'struct archive *'     |-IfStmt 0x152941140 <line:8:2, line:11:2>     | |-BinaryOperator 0x152940f80 <line:8:6, col:21> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x152940f00 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x152940ec8 <col:6> 'struct archive_mstring *' lvalue ParmVar 0x152940a28 'aes' 'struct archive_mstring *'     | | `-RecoveryExpr 0x152940f60 <col:21> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x152941120 <col:34, line:11:2>     |   |-BinaryOperator 0x152941098 <line:9:3, col:22> '<dependent type>' contains-errors '='     |   | |-UnaryOperator 0x152940fd8 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow     |   | | `-ImplicitCastExpr 0x152940fc0 <col:4> '<dependent type>' contains-errors <LValueToRValue>     |   | |   `-RecoveryExpr 0x152940fa0 <col:4> '<dependent type>' contains-errors lvalue     |   | `-CXXDependentScopeMemberExpr 0x152941050 <col:9, col:22> '<dependent type>' contains-errors lvalue .s     |   |   `-RecoveryExpr 0x152941028 <col:9, col:14> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x152940ff0 <col:9> 'struct archive_mstring *' lvalue ParmVar 0x152940a28 'aes' 'struct archive_mstring *'     |   `-ReturnStmt 0x152941110 <line:10:3, col:14>     |     `-ImplicitCastExpr 0x1529410f8 <col:10, col:14> 'int' <LValueToRValue>     |       `-ParenExpr 0x1529410d8 <col:10, col:14> 'int' lvalue     |         `-DeclRefExpr 0x1529410b8 <col:11> 'int' lvalue Var 0x152940da0 'ret' 'int'     |-BinaryOperator 0x152941268 <line:13:2, col:8> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x152941230 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x152941218 <col:3> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x152941160 <col:3> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x152941248 <col:8> '<dependent type>' contains-errors lvalue     |-IfStmt 0x152944088 <line:15:2, line:24:2>     | |-BinaryOperator 0x152941340 <line:15:6, col:21> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x1529412c0 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x152941288 <col:6> 'struct archive_mstring *' lvalue ParmVar 0x152940a28 'aes' 'struct archive_mstring *'     | | `-RecoveryExpr 0x152941320 <col:21> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x152944060 <col:34, line:24:2>     |   |-CallExpr 0x152941578 <line:16:3, col:40> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1529414c0 <col:3> 'int ()' Function 0x152941408 'archive_wstring_empty' 'int ()'     |   | `-UnaryOperator 0x152941560 <col:25, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-ParenExpr 0x152941540 <col:26, col:39> '<dependent type>' contains-errors lvalue     |   |     `-RecoveryExpr 0x152941518 <col:27, col:32> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x1529414e0 <col:27> 'struct archive_mstring *' lvalue ParmVar 0x152940a28 'aes' 'struct archive_mstring *'     |   |-BinaryOperator 0x1529418e0 <line:17:3, line:18:42> 'int' contains-errors '='     |   | |-DeclRefExpr 0x1529415a0 <line:17:3> 'int' lvalue Var 0x152940d20 'r' 'int'     |   | `-CallExpr 0x1529418a8 <col:7, line:18:42> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x1529416a0 <line:17:7> 'int ()' Function 0x1529415e8 'archive_wstring_append_from_mbs' 'int ()'     |   |   |-UnaryOperator 0x152941740 <col:39, col:53> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   | `-ParenExpr 0x152941720 <col:40, col:53> '<dependent type>' contains-errors lvalue     |   |   |   `-RecoveryExpr 0x1529416f8 <col:41, col:46> '<dependent type>' contains-errors lvalue     |   |   |     `-DeclRefExpr 0x1529416c0 <col:41> 'struct archive_mstring *' lvalue ParmVar 0x152940a28 'aes' 'struct archive_mstring *'     |   |   |-CXXDependentScopeMemberExpr 0x1529417b8 <line:18:7, col:20> '<dependent type>' contains-errors lvalue .s     |   |   | `-RecoveryExpr 0x152941790 <col:7, col:12> '<dependent type>' contains-errors lvalue     |   |   |   `-DeclRefExpr 0x152941758 <col:7> 'struct archive_mstring *' lvalue ParmVar 0x152940a28 'aes' 'struct archive_mstring *'     |   |   `-CXXDependentScopeMemberExpr 0x152941860 <col:23, col:36> '<dependent type>' contains-errors lvalue .length     |   |     `-RecoveryExpr 0x152941838 <col:23, col:28> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x152941800 <col:23> 'struct archive_mstring *' lvalue ParmVar 0x152940a28 'aes' 'struct archive_mstring *'     |   `-IfStmt 0x152944030 <line:19:3, line:23:11> has_else     |     |-BinaryOperator 0x152941958 <line:19:7, col:12> 'int' '=='     |     | |-ImplicitCastExpr 0x152941940 <col:7> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x152941900 <col:7> 'int' lvalue Var 0x152940d20 'r' 'int'     |     | `-IntegerLiteral 0x152941920 <col:12> 'int' 0     |     |-CompoundStmt 0x152943f98 <col:15, line:22:3>     |     | |-CompoundAssignOperator 0x152943e50 <line:20:4, col:20> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |     | | |-RecoveryExpr 0x1529419b0 <col:4, col:9> '<dependent type>' contains-errors lvalue     |     | | | `-DeclRefExpr 0x152941978 <col:4> 'struct archive_mstring *' lvalue ParmVar 0x152940a28 'aes' 'struct archive_mstring *'     |     | | `-RecoveryExpr 0x152943e30 <col:20> '<dependent type>' contains-errors lvalue     |     | `-BinaryOperator 0x152943f78 <line:21:4, col:23> '<dependent type>' contains-errors '='     |     |   |-UnaryOperator 0x152943eb8 <col:4, col:5> '<dependent type>' contains-errors prefix '*' cannot overflow     |     |   | `-ImplicitCastExpr 0x152943ea0 <col:5> '<dependent type>' contains-errors <LValueToRValue>     |     |   |   `-RecoveryExpr 0x152943e80 <col:5> '<dependent type>' contains-errors lvalue     |     |   `-CXXDependentScopeMemberExpr 0x152943f30 <col:10, col:23> '<dependent type>' contains-errors lvalue .s     |     |     `-RecoveryExpr 0x152943f08 <col:10, col:15> '<dependent type>' contains-errors lvalue     |     |       `-DeclRefExpr 0x152943ed0 <col:10> 'struct archive_mstring *' lvalue ParmVar 0x152940a28 'aes' 'struct archive_mstring *'     |     `-BinaryOperator 0x152944010 <line:23:4, col:11> 'int' '='     |       |-DeclRefExpr 0x152943fb8 <col:4> 'int' lvalue Var 0x152940da0 'ret' 'int'     |       `-UnaryOperator 0x152943ff8 <col:10, col:11> 'int' prefix '-'     |         `-IntegerLiteral 0x152943fd8 <col:11> 'int' 1     `-ReturnStmt 0x152944100 <line:25:2, col:13>       `-ImplicitCastExpr 0x1529440e8 <col:9, col:13> 'int' <LValueToRValue>         `-ParenExpr 0x1529440c8 <col:9, col:13> 'int' lvalue           `-DeclRefExpr 0x1529440a8 <col:10> 'int' lvalue Var 0x152940da0 'ret' 'int' ","20636":"`-FunctionDecl 0x14a828860  col:14 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x14a828960 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x14a8289c8 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x14a828908 <<invalid sloc>> Implicit 887 ","20768":"`-FunctionDecl 0x13800dec8  line:1:24 invalid rsa_pss_decode 'int *(const int *, int **)' static   |-ParmVarDecl 0x13800dcf0 <col:39, col:57> col:57 invalid alg 'const int *'   |-ParmVarDecl 0x13800dde0 <line:2:39, col:52> col:52 invalid pmaskHash 'int **'   `-CompoundStmt 0x138028800 <line:3:1, line:30:1>     |-DeclStmt 0x13800e030 <line:4:5, col:27>     | `-VarDecl 0x13800dfc8 <col:5, col:26> col:26 used p 'const unsigned char *'     |-DeclStmt 0x13800e0c8 <line:5:5, col:13>     | `-VarDecl 0x13800e060 <col:5, col:9> col:9 used plen 'int'     |-BinaryOperator 0x13800e200 <line:8:5, col:18> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x13800e1c8 <col:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x13800e1b0 <col:6> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x13800e0f8 <col:6> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x13800e1e0 <col:18> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1380274d8 <line:10:5, line:11:16>     | |-BinaryOperator 0x138027470 <line:10:9, col:52> 'int' contains-errors '||'     | | |-UnaryOperator 0x138027418 <col:9, col:15> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x138027400 <col:10, col:15> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-CXXDependentScopeMemberExpr 0x13800e240 <col:10, col:15> '<dependent type>' contains-errors lvalue ->parameter     | | |     `-RecoveryExpr 0x13800e220 <col:10> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x138027450 <col:28, col:52> 'int' contains-errors '!='     | |   |-CXXDependentScopeMemberExpr 0x13800e320 <col:28, col:44> '<dependent type>' contains-errors lvalue ->type     | |   | `-CXXDependentScopeMemberExpr 0x13800e2d8 <col:28, col:33> '<dependent type>' contains-errors lvalue ->parameter     | |   |   `-RecoveryExpr 0x13800e2b8 <col:28> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x138027430 <col:52> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1380274c8 <line:11:9, col:16>     |   `-RecoveryExpr 0x1380274a8 <col:16> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x138027658 <line:12:5, col:41> 'const unsigned char *' contains-errors '='     | |-DeclRefExpr 0x1380274f8 <col:5> 'const unsigned char *' lvalue Var 0x13800dfc8 'p' 'const unsigned char *'     | `-CXXDependentScopeMemberExpr 0x138027610 <col:9, col:41> '<dependent type>' contains-errors lvalue ->data     |   `-CXXDependentScopeMemberExpr 0x1380275c8 <col:9, col:31> '<dependent type>' contains-errors lvalue .sequence     |     `-CXXDependentScopeMemberExpr 0x138027580 <col:9, col:25> '<dependent type>' contains-errors lvalue ->value     |       `-CXXDependentScopeMemberExpr 0x138027538 <col:9, col:14> '<dependent type>' contains-errors lvalue ->parameter     |         `-RecoveryExpr 0x138027518 <col:9> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1380277d8 <line:13:5, col:44> 'int' contains-errors '='     | |-DeclRefExpr 0x138027678 <col:5> 'int' lvalue Var 0x13800e060 'plen' 'int'     | `-CXXDependentScopeMemberExpr 0x138027790 <col:12, col:44> '<dependent type>' contains-errors lvalue ->length     |   `-CXXDependentScopeMemberExpr 0x138027748 <col:12, col:34> '<dependent type>' contains-errors lvalue .sequence     |     `-CXXDependentScopeMemberExpr 0x138027700 <col:12, col:28> '<dependent type>' contains-errors lvalue ->value     |       `-CXXDependentScopeMemberExpr 0x1380276b8 <col:12, col:17> '<dependent type>' contains-errors lvalue ->parameter     |         `-RecoveryExpr 0x138027698 <col:12> '<dependent type>' contains-errors lvalue     |-IfStmt 0x138027b30 <line:16:5, line:17:16>     | |-UnaryOperator 0x138027ad0 <line:16:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x138027ab8 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x138027a98 <col:10> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x138027b20 <line:17:9, col:16>     |   `-RecoveryExpr 0x138027b00 <col:16> '<dependent type>' contains-errors lvalue     `-IfStmt 0x1380283a8 <line:19:5, line:27:5>       |-CXXDependentScopeMemberExpr 0x138027bd0 <line:19:9, col:14> '<dependent type>' contains-errors lvalue ->maskGenAlgorithm       | `-RecoveryExpr 0x138027bb0 <col:9> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x138028390 <col:32, line:27:5>         `-IfStmt 0x138028370 <line:21:9, line:26:9>           |-BinaryOperator 0x138028158 <line:21:13, line:22:31> 'int' contains-errors '&&'           | |-BinaryOperator 0x138028090 <line:21:13, col:62> 'int' contains-errors '=='           | | |-CallExpr 0x138028048 <col:13, col:57> '<dependent type>' contains-errors           | | | |-DeclRefExpr 0x138027db8 <col:13> 'int ()' Function 0x138027d00 'OBJ_obj2nid' 'int ()'           | | | `-CXXDependentScopeMemberExpr 0x138028000 <col:25, col:48> '<dependent type>' contains-errors lvalue ->algorithm           | | |   `-CXXDependentScopeMemberExpr 0x138027fb8 <col:25, col:30> '<dependent type>' contains-errors lvalue ->maskGenAlgorithm           | | |     `-RecoveryExpr 0x138027f98 <col:25> '<dependent type>' contains-errors lvalue           | | `-RecoveryExpr 0x138028070 <col:62> '<dependent type>' contains-errors lvalue           | `-BinaryOperator 0x138028138 <line:22:16, col:31> 'int' contains-errors '=='           |   |-CXXDependentScopeMemberExpr 0x1380280d0 <col:16, col:23> '<dependent type>' contains-errors lvalue ->type           |   | `-RecoveryExpr 0x1380280b0 <col:16> '<dependent type>' contains-errors lvalue           |   `-RecoveryExpr 0x138028118 <col:31> '<dependent type>' contains-errors lvalue           `-CompoundStmt 0x138028360 <col:48, line:26:9> ","20608":"`-FunctionDecl 0x12580de08  line:1:30 invalid GetPixelInfoLuminance 'int (const int *restrict)' static inline   |-ParmVarDecl 0x12580dcf0 <line:2:3, col:29> col:29 invalid pixel 'const int *restrict'   `-CompoundStmt 0x125827868 <line:3:1, line:17:1>     |-IfStmt 0x12580e030 <line:9:3, line:10:22>     | |-BinaryOperator 0x12580df78 <line:9:7, col:28> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x12580ded8 <col:7, col:14> '<dependent type>' contains-errors lvalue ->colorspace     | | | `-RecoveryExpr 0x12580deb8 <col:7> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12580df58 <col:28> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12580e020 <line:10:5, col:22>     |   `-ParenExpr 0x12580e000 <col:11, col:22> '<dependent type>' contains-errors lvalue     |     `-CXXDependentScopeMemberExpr 0x12580dfb8 <col:12, col:19> '<dependent type>' contains-errors lvalue ->red     |       `-RecoveryExpr 0x12580df98 <col:12> '<dependent type>' contains-errors lvalue     `-IfStmt 0x12580e398 <line:11:3, line:12:77>       |-BinaryOperator 0x12580e110 <line:11:7, col:28> 'int' contains-errors '!='       | |-CXXDependentScopeMemberExpr 0x12580e070 <col:7, col:14> '<dependent type>' contains-errors lvalue ->colorspace       | | `-RecoveryExpr 0x12580e050 <col:7> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x12580e0f0 <col:28> '<dependent type>' contains-errors lvalue       `-ReturnStmt 0x12580e388 <line:12:5, col:77>         `-ParenExpr 0x12580e368 <col:11, col:77> '<dependent type>' contains-errors           `-BinaryOperator 0x12580e348 <col:12, col:73> '<dependent type>' contains-errors '+'             |-BinaryOperator 0x12580e280 <col:12, col:50> '<dependent type>' contains-errors '+'             | |-BinaryOperator 0x12580e1b8 <col:12, col:29> '<dependent type>' contains-errors '*'             | | |-FloatingLiteral 0x12580e130 <col:12> 'float' 2.126560e-01             | | `-CXXDependentScopeMemberExpr 0x12580e170 <col:22, col:29> '<dependent type>' contains-errors lvalue ->red             | |   `-RecoveryExpr 0x12580e150 <col:22> '<dependent type>' contains-errors lvalue             | `-BinaryOperator 0x12580e260 <col:33, col:50> '<dependent type>' contains-errors '*'             |   |-FloatingLiteral 0x12580e1d8 <col:33> 'float' 7.151580e-01             |   `-CXXDependentScopeMemberExpr 0x12580e218 <col:43, col:50> '<dependent type>' contains-errors lvalue ->green             |     `-RecoveryExpr 0x12580e1f8 <col:43> '<dependent type>' contains-errors lvalue             `-BinaryOperator 0x12580e328 <col:56, col:73> '<dependent type>' contains-errors '*'               |-FloatingLiteral 0x12580e2a0 <col:56> 'float' 7.218600e-02               `-CXXDependentScopeMemberExpr 0x12580e2e0 <col:66, col:73> '<dependent type>' contains-errors lvalue ->blue                 `-RecoveryExpr 0x12580e2c0 <col:66> '<dependent type>' contains-errors lvalue ","20498":"`-FunctionDecl 0x15a1281f8  line:1:14 invalid FLAC__bitreader_get_read_crc16 'int (int *)'   |-ParmVarDecl 0x15a128128 <col:45, col:62> col:62 referenced invalid br 'int *'   `-CompoundStmt 0x15a142128 <line:2:1, line:19:1>     |-CallExpr 0x15a128480 <line:3:2, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15a128400 <col:2> 'int ()' Function 0x15a128348 'FLAC__ASSERT' 'int ()'     | `-BinaryOperator 0x15a128460 <col:15, col:20> 'int' contains-errors '!='     |   |-IntegerLiteral 0x15a128420 <col:15> 'int' 0     |   `-RecoveryExpr 0x15a128440 <col:20> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15a128570 <line:4:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15a1284a8 <col:2> 'int ()' Function 0x15a128348 'FLAC__ASSERT' 'int ()'     | `-BinaryOperator 0x15a128550 <col:15, col:24> 'int' contains-errors '!='     |   |-IntegerLiteral 0x15a1284c8 <col:15> 'int' 0     |   `-CXXDependentScopeMemberExpr 0x15a128508 <col:20, col:24> '<dependent type>' contains-errors lvalue ->buffer     |     `-RecoveryExpr 0x15a1284e8 <col:20> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15a1286b8 <line:7:2, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15a128678 <col:2> 'int ()' Function 0x15a1285c0 'crc16_update_block_' 'int ()'     | `-RecoveryExpr 0x15a128698 <col:22> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15a141820 <line:9:2, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15a1286e0 <col:2> 'int ()' Function 0x15a128348 'FLAC__ASSERT' 'int ()'     | `-BinaryOperator 0x15a141800 <col:15, col:42> 'int' contains-errors '=='     |   |-ParenExpr 0x15a1287a8 <col:15, col:37> '<dependent type>' contains-errors     |   | `-BinaryOperator 0x15a128788 <col:16, col:36> '<dependent type>' contains-errors '&'     |   |   |-CXXDependentScopeMemberExpr 0x15a128720 <col:16, col:20> '<dependent type>' contains-errors lvalue ->consumed_bits     |   |   | `-RecoveryExpr 0x15a128700 <col:16> '<dependent type>' contains-errors lvalue     |   |   `-IntegerLiteral 0x15a128768 <col:36> 'int' 7     |   `-IntegerLiteral 0x15a1287c8 <col:42> 'int' 0     |-CallExpr 0x15a141958 <line:10:2, col:51> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15a141848 <col:2> 'int ()' Function 0x15a128348 'FLAC__ASSERT' 'int ()'     | `-BinaryOperator 0x15a141938 <col:15, col:38> 'int' contains-errors '<='     |   |-CXXDependentScopeMemberExpr 0x15a141888 <col:15, col:19> '<dependent type>' contains-errors lvalue ->crc16_align     |   | `-RecoveryExpr 0x15a141868 <col:15> '<dependent type>' contains-errors lvalue     |   `-CXXDependentScopeMemberExpr 0x15a1418f0 <col:34, col:38> '<dependent type>' contains-errors lvalue ->consumed_bits     |     `-RecoveryExpr 0x15a1418d0 <col:34> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15a142090 <line:13:2, line:17:2>     | |-CXXDependentScopeMemberExpr 0x15a1419a0 <line:13:5, col:9> '<dependent type>' contains-errors lvalue ->consumed_bits     | | `-RecoveryExpr 0x15a141980 <col:5> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x15a142078 <col:24, line:17:2>     |   `-DeclStmt 0x15a141b88 <line:14:3, col:53>     |     `-VarDecl 0x15a141a00 <col:3, col:16> col:16 invalid tail 'const int'     `-ReturnStmt 0x15a142118 <line:18:2, col:13>       `-CXXDependentScopeMemberExpr 0x15a1420d0 <col:9, col:13> '<dependent type>' contains-errors lvalue ->read_crc16         `-RecoveryExpr 0x15a1420b0 <col:9> '<dependent type>' contains-errors lvalue ","20931":"`-FunctionDecl 0x120128198  line:1:12 auth_init 'int (void)' static   `-CompoundStmt 0x120141ea0 <col:28, line:12:1>     |-CallExpr 0x1201286c0 <line:3:3, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1201283b0 <col:3> 'int ()' Function 0x1201282f8 'pr_help_add' 'int ()'     | |-RecoveryExpr 0x120128628 <col:15> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x120128660 <col:23, col:30> 'int'     | | |-ImplicitCastExpr 0x120128648 <col:23> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x1201284c8 <col:23> 'int ()' Function 0x120128410 '_' 'int ()'     | | `-ImplicitCastExpr 0x120128688 <col:25> 'char *' <ArrayToPointerDecay>     | |   `-StringLiteral 0x120128530 <col:25> 'char[4]' lvalue \"STR\"     | `-RecoveryExpr 0x1201286a0 <col:33> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1201418d0 <line:4:3, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1201286f8 <col:3> 'int ()' Function 0x1201282f8 'pr_help_add' 'int ()'     | |-RecoveryExpr 0x120141838 <col:15> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x120141870 <col:23, col:30> 'int'     | | |-ImplicitCastExpr 0x120141858 <col:23> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x120128730 <col:23> 'int ()' Function 0x120128410 '_' 'int ()'     | | `-ImplicitCastExpr 0x120141898 <col:25> 'char *' <ArrayToPointerDecay>     | |   `-StringLiteral 0x120128750 <col:25> 'char[4]' lvalue \"STR\"     | `-RecoveryExpr 0x1201418b0 <col:33> '<dependent type>' contains-errors lvalue     |-CallExpr 0x120141ac0 <line:5:3, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x120141908 <col:3> 'int ()' Function 0x1201282f8 'pr_help_add' 'int ()'     | |-RecoveryExpr 0x120141a28 <col:15> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x120141a60 <col:23, col:30> 'int'     | | |-ImplicitCastExpr 0x120141a48 <col:23> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x120141940 <col:23> 'int ()' Function 0x120128410 '_' 'int ()'     | | `-ImplicitCastExpr 0x120141a88 <col:25> 'char *' <ArrayToPointerDecay>     | |   `-StringLiteral 0x120141960 <col:25> 'char[4]' lvalue \"STR\"     | `-RecoveryExpr 0x120141aa0 <col:33> '<dependent type>' contains-errors lvalue     |-CallExpr 0x120141cb0 <line:6:3, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x120141af8 <col:3> 'int ()' Function 0x1201282f8 'pr_help_add' 'int ()'     | |-RecoveryExpr 0x120141c18 <col:15> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x120141c50 <col:23, col:30> 'int'     | | |-ImplicitCastExpr 0x120141c38 <col:23> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x120141b30 <col:23> 'int ()' Function 0x120128410 '_' 'int ()'     | | `-ImplicitCastExpr 0x120141c78 <col:25> 'char *' <ArrayToPointerDecay>     | |   `-StringLiteral 0x120141b50 <col:25> 'char[4]' lvalue \"STR\"     | `-RecoveryExpr 0x120141c90 <col:33> '<dependent type>' contains-errors lvalue     |-CallExpr 0x120141e48 <line:9:3, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x120141dc8 <col:3> 'int ()' Function 0x120141d10 'set_auth_check' 'int ()'     | `-RecoveryExpr 0x120141e28 <col:18> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x120141e90 <line:11:3, col:10>       `-IntegerLiteral 0x120141e70 <col:10> 'int' 0 ","20586":"`-FunctionDecl 0x145808408  line:1:5 invalid fuse_open_common 'int (struct inode *, struct file *, int)'   |-ParmVarDecl 0x144928648 <col:22, col:36> col:36 used inode 'struct inode *'   |-ParmVarDecl 0x145808228 <col:43, col:56> col:56 used file 'struct file *'   |-ParmVarDecl 0x1458082c0 <col:62, col:67> col:67 invalid isdir 'int'   `-CompoundStmt 0x146808a40 <line:2:1, line:42:1>     |-DeclStmt 0x1458088f8 <line:3:2, col:47>     | |-RecordDecl 0x1458084c8 <col:2, col:9> col:9 struct fuse_mount     | `-VarDecl 0x145808638 <col:2, col:46> col:21 used fm 'struct fuse_mount *' cinit     |   `-ImplicitCastExpr 0x1458088c8 <col:26, col:46> 'struct fuse_mount *' <IntegralToPointer>     |     `-CallExpr 0x145808888 <col:26, col:46> 'int'     |       |-ImplicitCastExpr 0x145808870 <col:26> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x145808800 <col:26> 'int ()' Function 0x145808748 'get_fuse_mount' 'int ()'     |       `-ImplicitCastExpr 0x1458088b0 <col:41> 'struct inode *' <LValueToRValue>     |         `-DeclRefExpr 0x145808820 <col:41> 'struct inode *' lvalue ParmVar 0x144928648 'inode' 'struct inode *'     |-DeclStmt 0x145808b58 <line:4:2, col:31>     | |-RecordDecl 0x145808910 <col:2, col:9> col:9 struct fuse_conn     | `-VarDecl 0x145808a78 <col:2, col:29> col:20 fc 'struct fuse_conn *' cinit     |   `-RecoveryExpr 0x145808b18 <col:25, col:29> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x145808ae0 <col:25> 'struct fuse_mount *' lvalue Var 0x145808638 'fm' 'struct fuse_mount *'     |-DeclStmt 0x145808bf0 <line:5:2, col:9>     | `-VarDecl 0x145808b88 <col:2, col:6> col:6 used err 'int'     |-BinaryOperator 0x145808de0 <line:12:2, col:37> 'int' '='     | |-DeclRefExpr 0x145808c08 <col:2> 'int' lvalue Var 0x145808b88 'err' 'int'     | `-CallExpr 0x145808d80 <col:8, col:37> 'int'     |   |-ImplicitCastExpr 0x145808d68 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x145808d08 <col:8> 'int ()' Function 0x145808c50 'generic_file_open' 'int ()'     |   |-ImplicitCastExpr 0x145808db0 <col:26> 'struct inode *' <LValueToRValue>     |   | `-DeclRefExpr 0x145808d28 <col:26> 'struct inode *' lvalue ParmVar 0x144928648 'inode' 'struct inode *'     |   `-ImplicitCastExpr 0x145808dc8 <col:33> 'struct file *' <LValueToRValue>     |     `-DeclRefExpr 0x145808d48 <col:33> 'struct file *' lvalue ParmVar 0x145808228 'file' 'struct file *'     |-IfStmt 0x145808e80 <line:13:2, line:14:10>     | |-ImplicitCastExpr 0x145808e20 <line:13:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x145808e00 <col:6> 'int' lvalue Var 0x145808b88 'err' 'int'     | `-ReturnStmt 0x145808e70 <line:14:3, col:10>     |   `-ImplicitCastExpr 0x145808e58 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x145808e38 <col:10> 'int' lvalue Var 0x145808b88 'err' 'int'     |-IfStmt 0x14500d260 <line:16:2, line:19:2>     | |-BinaryOperator 0x145808f30 <line:16:6, col:24> 'int' contains-errors '||'     | | |-RecoveryExpr 0x145808ef0 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x145808f10 <col:24> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14500d240 <col:38, line:19:2>     |   |-CallExpr 0x145809088 <line:17:3, col:19> 'int'     |   | |-ImplicitCastExpr 0x145809070 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x145809030 <col:3> 'int ()' Function 0x145808f78 'inode_lock' 'int ()'     |   | `-ImplicitCastExpr 0x1458090b0 <col:14> 'struct inode *' <LValueToRValue>     |   |   `-DeclRefExpr 0x145809050 <col:14> 'struct inode *' lvalue ParmVar 0x144928648 'inode' 'struct inode *'     |   `-CallExpr 0x14500d200 <line:18:3, col:25> 'int'     |     |-ImplicitCastExpr 0x1458091e8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1458091a8 <col:3> 'int ()' Function 0x1458090f0 'fuse_set_nowrite' 'int ()'     |     `-ImplicitCastExpr 0x14500d228 <col:20> 'struct inode *' <LValueToRValue>     |       `-DeclRefExpr 0x1458091c8 <col:20> 'struct inode *' lvalue ParmVar 0x144928648 'inode' 'struct inode *'     |-IfStmt 0x14500d888 <line:21:2, line:26:2>     | |-RecoveryExpr 0x14500d298 <line:21:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14500d860 <col:20, line:26:2>     |   |-CallExpr 0x14500d570 <line:22:3, col:48> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14500d398 <col:3> 'int ()' Function 0x14500d2e0 'down_write' 'int ()'     |   | `-UnaryOperator 0x14500d558 <col:14, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x14500d530 <col:15, col:38> '<dependent type>' contains-errors lvalue     |   |     `-CallExpr 0x14500d4f0 <col:15, col:35> 'int'     |   |       |-ImplicitCastExpr 0x14500d4d8 <col:15> 'int (*)()' <FunctionToPointerDecay>     |   |       | `-DeclRefExpr 0x14500d498 <col:15> 'int ()' Function 0x14500d3e0 'get_fuse_inode' 'int ()'     |   |       `-ImplicitCastExpr 0x14500d518 <col:30> 'struct inode *' <LValueToRValue>     |   |         `-DeclRefExpr 0x14500d4b8 <col:30> 'struct inode *' lvalue ParmVar 0x144928648 'inode' 'struct inode *'     |   |-BinaryOperator 0x14500d780 <line:23:3, col:43> 'int' '='     |   | |-DeclRefExpr 0x14500d598 <col:3> 'int' lvalue Var 0x145808b88 'err' 'int'     |   | `-CallExpr 0x14500d730 <col:9, col:43> 'int'     |   |   |-ImplicitCastExpr 0x14500d718 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x14500d698 <col:9> 'int ()' Function 0x14500d5e0 'fuse_dax_break_layouts' 'int ()'     |   |   |-ImplicitCastExpr 0x14500d768 <col:32> 'struct inode *' <LValueToRValue>     |   |   | `-DeclRefExpr 0x14500d6b8 <col:32> 'struct inode *' lvalue ParmVar 0x144928648 'inode' 'struct inode *'     |   |   |-IntegerLiteral 0x14500d6d8 <col:39> 'int' 0     |   |   `-IntegerLiteral 0x14500d6f8 <col:42> 'int' 0     |   `-IfStmt 0x14500d840 <line:24:3, line:25:9>     |     |-ImplicitCastExpr 0x14500d7c0 <line:24:7> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x14500d7a0 <col:7> 'int' lvalue Var 0x145808b88 'err' 'int'     |     `-GotoStmt 0x14500d828 <line:25:4, col:9> 'out' 0x14500d7d8     |-BinaryOperator 0x14500dbe0 <line:28:2, col:56> 'int' contains-errors '='     | |-DeclRefExpr 0x14500d8a8 <col:2> 'int' lvalue Var 0x145808b88 'err' 'int'     | `-CallExpr 0x14500dba0 <col:8, col:56> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14500d9a8 <col:8> 'int ()' Function 0x14500d8f0 'fuse_do_open' 'int ()'     |   |-DeclRefExpr 0x14500d9c8 <col:21> 'struct fuse_mount *' lvalue Var 0x145808638 'fm' 'struct fuse_mount *'     |   |-CallExpr 0x14500db20 <col:25, col:42> 'int'     |   | |-ImplicitCastExpr 0x14500db08 <col:25> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14500dac8 <col:25> 'int ()' Function 0x14500da10 'get_node_id' 'int ()'     |   | `-ImplicitCastExpr 0x14500db48 <col:37> 'struct inode *' <LValueToRValue>     |   |   `-DeclRefExpr 0x14500dae8 <col:37> 'struct inode *' lvalue ParmVar 0x144928648 'inode' 'struct inode *'     |   |-DeclRefExpr 0x14500db60 <col:45> 'struct file *' lvalue ParmVar 0x145808228 'file' 'struct file *'     |   `-RecoveryExpr 0x14500db80 <col:51> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14500de08 <line:29:2, line:30:31>     | |-UnaryOperator 0x14500dc38 <line:29:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14500dc20 <col:7> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x14500dc00 <col:7> 'int' lvalue Var 0x145808b88 'err' 'int'     | `-CallExpr 0x14500dda8 <line:30:3, col:31> 'int'     |   |-ImplicitCastExpr 0x14500dd90 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14500dd30 <col:3> 'int ()' Function 0x14500dc78 'fuse_finish_open' 'int ()'     |   |-ImplicitCastExpr 0x14500ddd8 <col:20> 'struct inode *' <LValueToRValue>     |   | `-DeclRefExpr 0x14500dd50 <col:20> 'struct inode *' lvalue ParmVar 0x144928648 'inode' 'struct inode *'     |   `-ImplicitCastExpr 0x14500ddf0 <col:27> 'struct file *' <LValueToRValue>     |     `-DeclRefExpr 0x14500dd70 <col:27> 'struct file *' lvalue ParmVar 0x145808228 'file' 'struct file *'     |-LabelStmt 0x14500e080 <line:32:1, line:34:46> 'out'     | `-IfStmt 0x14500e060 <line:33:2, line:34:46>     |   |-RecoveryExpr 0x14500de40 <line:33:6> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x14500e038 <line:34:3, col:46> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14500df40 <col:3> 'int ()' Function 0x14500de88 'up_write' 'int ()'     |     `-UnaryOperator 0x14500e020 <col:12, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x14500dff8 <col:13, col:36> '<dependent type>' contains-errors lvalue     |         `-CallExpr 0x14500dfb8 <col:13, col:33> 'int'     |           |-ImplicitCastExpr 0x14500dfa0 <col:13> 'int (*)()' <FunctionToPointerDecay>     |           | `-DeclRefExpr 0x14500df60 <col:13> 'int ()' Function 0x14500d3e0 'get_fuse_inode' 'int ()'     |           `-ImplicitCastExpr 0x14500dfe0 <col:28> 'struct inode *' <LValueToRValue>     |             `-DeclRefExpr 0x14500df80 <col:28> 'struct inode *' lvalue ParmVar 0x144928648 'inode' 'struct inode *'     |-IfStmt 0x1468089d8 <line:36:2, line:39:2>     | |-RecoveryExpr 0x14500e0a0 <line:36:6, col:23> '_Bool' contains-errors     | `-CompoundStmt 0x1468089b8 <col:37, line:39:2>     |   |-CallExpr 0x146808800 <line:37:3, col:29> 'int'     |   | |-ImplicitCastExpr 0x14500e1e0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14500e1a0 <col:3> 'int ()' Function 0x14500e0e8 'fuse_release_nowrite' 'int ()'     |   | `-ImplicitCastExpr 0x146808828 <col:24> 'struct inode *' <LValueToRValue>     |   |   `-DeclRefExpr 0x14500e1c0 <col:24> 'struct inode *' lvalue ParmVar 0x144928648 'inode' 'struct inode *'     |   `-CallExpr 0x146808978 <line:38:3, col:21> 'int'     |     |-ImplicitCastExpr 0x146808960 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x146808920 <col:3> 'int ()' Function 0x146808868 'inode_unlock' 'int ()'     |     `-ImplicitCastExpr 0x1468089a0 <col:16> 'struct inode *' <LValueToRValue>     |       `-DeclRefExpr 0x146808940 <col:16> 'struct inode *' lvalue ParmVar 0x144928648 'inode' 'struct inode *'     `-ReturnStmt 0x146808a30 <line:41:2, col:9>       `-ImplicitCastExpr 0x146808a18 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x1468089f8 <col:9> 'int' lvalue Var 0x145808b88 'err' 'int' ","20279":"`-FunctionDecl 0x1201153c8  line:1:1 invalid XML_GetCurrentByteIndex 'int (int)'   |-ParmVarDecl 0x1201152f0 <col:25, col:36> col:36 invalid parser 'int'   `-CompoundStmt 0x1201157d8 <col:44, line:8:1>     |-IfStmt 0x120115558 <line:2:3, line:3:13>     | |-BinaryOperator 0x1201154f0 <line:2:7, col:17> 'int' contains-errors '=='     | | |-RecoveryExpr 0x120115478 <col:7> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1201154d0 <col:17> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x120115548 <line:3:5, col:13>     |   `-UnaryOperator 0x120115530 <col:12, col:13> 'int' prefix '-'     |     `-IntegerLiteral 0x120115510 <col:13> 'int' 1     `-ReturnStmt 0x1201157c8 <line:7:3, col:11>       `-UnaryOperator 0x1201157b0 <col:10, col:11> 'int' prefix '-'         `-IntegerLiteral 0x120115790 <col:11> 'int' 1 ","20696":"`-FunctionDecl 0x13b9282e8  line:1:1 invalid print_line_header 'int (int, int, int)'   |-ParmVarDecl 0x13b9280f0 <col:19, col:31> col:31 invalid dbg 'int'   |-ParmVarDecl 0x13b928170 <line:2:5, col:16> col:16 invalid is_single_tab 'int'   |-ParmVarDecl 0x13b9281f0 <line:3:5, col:16> col:16 invalid is_actuals_tab 'int'   `-CompoundStmt 0x13b9419f0 <line:4:1, line:35:1>     |-IfStmt 0x13b941928 <line:5:1, line:26:1>     | |-UnaryOperator 0x13b9283e0 <line:5:5, col:6> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13b9283c8 <col:6> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x13b9283a8 <col:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13b941910 <col:21, line:26:1>     |   `-IfStmt 0x13b9418e0 <line:7:1, line:25:1> has_else     |     |-RecoveryExpr 0x13b9283f8 <line:7:5> '<dependent type>' contains-errors lvalue     |     |-CompoundStmt 0x13b928738 <col:21, line:16:1>     |     | |-CallExpr 0x13b928610 <line:8:1, col:24> '<dependent type>' contains-errors     |     | | |-DeclRefExpr 0x13b928570 <col:1> 'int ()' Function 0x13b9284b8 '_dwarf_printf' 'int ()'     |     | | |-RecoveryExpr 0x13b928590 <col:15> '<dependent type>' contains-errors lvalue     |     | | `-StringLiteral 0x13b9285f0 <col:19> 'char[4]' lvalue \"STR\"     |     | |-CallExpr 0x13b9286f8 <line:9:1, line:14:6> '<dependent type>' contains-errors     |     | | |-DeclRefExpr 0x13b928640 <line:9:1> 'int ()' Function 0x13b9284b8 '_dwarf_printf' 'int ()'     |     | | |-RecoveryExpr 0x13b928660 <col:15> '<dependent type>' contains-errors lvalue     |     | | `-StringLiteral 0x13b9286c0 <line:10:1, line:14:1> 'char[16]' lvalue \"STRSTRSTRSTRSTR\"     |     | `-ReturnStmt 0x13b928728 <line:15:5>     |     `-CompoundStmt 0x13b9418b8 <line:16:8, line:25:1>     |       |-CallExpr 0x13b9287c0 <line:17:1, col:24> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x13b928760 <col:1> 'int ()' Function 0x13b9284b8 '_dwarf_printf' 'int ()'     |       | |-RecoveryExpr 0x13b928780 <col:15> '<dependent type>' contains-errors lvalue     |       | `-StringLiteral 0x13b9287a0 <col:19> 'char[4]' lvalue \"STR\"     |       |-CallExpr 0x13b941878 <line:18:1, line:23:6> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x13b941800 <line:18:1> 'int ()' Function 0x13b9284b8 '_dwarf_printf' 'int ()'     |       | |-RecoveryExpr 0x13b941820 <col:15> '<dependent type>' contains-errors lvalue     |       | `-StringLiteral 0x13b941840 <line:19:1, line:23:1> 'char[16]' lvalue \"STRSTRSTRSTRSTR\"     |       `-ReturnStmt 0x13b9418a8 <line:24:5>     `-CallExpr 0x13b9419c0 <line:29:1, line:34:6> '<dependent type>' contains-errors       |-DeclRefExpr 0x13b941948 <line:29:1> 'int ()' Function 0x13b9284b8 '_dwarf_printf' 'int ()'       |-RecoveryExpr 0x13b941968 <col:15> '<dependent type>' contains-errors lvalue       `-StringLiteral 0x13b941988 <line:30:1, line:34:1> 'char[16]' lvalue \"STRSTRSTRSTRSTR\" ","20877":"`-FunctionDecl 0x124928238  line:1:1 SPL_METHOD 'int (int, int)'   |-ParmVarDecl 0x124928158 <col:12> col:12 SplFileObject 'int'   |-ParmVarDecl 0x1249280d8 <col:27> col:27 setCsvControl 'int'   `-CompoundStmt 0x125009c28 <line:2:1, line:39:1>     |-DeclStmt 0x124928598 <line:4:2, col:52>     | |-VarDecl 0x124928390 <col:2, col:19> col:7 used delimiter 'char' cinit     | | `-ImplicitCastExpr 0x124928410 <col:19> 'char' <IntegralCast>     | |   `-CharacterLiteral 0x1249283f8 <col:19> 'int' 44     | |-VarDecl 0x124928438 <col:2, col:36> col:24 used enclosure 'char' cinit     | | `-ImplicitCastExpr 0x1249284b8 <col:36> 'char' <IntegralCast>     | |   `-CharacterLiteral 0x1249284a0 <col:36> 'int' 34     | `-VarDecl 0x1249284e0 <col:2, col:48> col:41 used escape 'char' cinit     |   `-ImplicitCastExpr 0x124928560 <col:48> 'char' <IntegralCast>     |     `-CharacterLiteral 0x124928548 <col:48> 'int' 92     |-DeclStmt 0x125008e00 <line:5:2, col:48>     | |-VarDecl 0x1249285c8 <col:2, col:16> col:8 used delim 'char *' cinit     | | `-RecoveryExpr 0x124928648 <col:16> '<dependent type>' contains-errors lvalue     | |-VarDecl 0x124928680 <col:2, col:31> col:23 used enclo 'char *' cinit     | | `-RecoveryExpr 0x124928700 <col:31> '<dependent type>' contains-errors lvalue     | `-VarDecl 0x124928738 <col:2, col:44> col:38 used esc 'char *' cinit     |   `-RecoveryExpr 0x1249287b8 <col:44> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x125009018 <line:6:2, col:39>     | |-VarDecl 0x125008e30 <col:2, col:14> col:6 used d_len 'int' cinit     | | `-IntegerLiteral 0x125008e98 <col:14> 'int' 0     | |-VarDecl 0x125008ed0 <col:2, col:25> col:17 used e_len 'int' cinit     | | `-IntegerLiteral 0x125008f38 <col:25> 'int' 0     | `-VarDecl 0x125008f70 <col:2, col:38> col:28 used esc_len 'int' cinit     |   `-IntegerLiteral 0x125008fd8 <col:38> 'int' 0     `-IfStmt 0x125009c08 <line:8:2, line:38:2>       |-RecoveryExpr 0x1250092e0 <line:8:6, col:113> '_Bool' contains-errors       `-CompoundStmt 0x125009bf0 <col:122, line:38:2>         `-SwitchStmt 0x125009358 <line:9:3, line:34:3>           |-CallExpr 0x125009338 <line:9:10, col:24> 'int'           | `-ImplicitCastExpr 0x125009320 <col:10> 'int (*)()' <FunctionToPointerDecay>           |   `-DeclRefExpr 0x125009300 <col:10> 'int ()' Function 0x125009188 'ZEND_NUM_ARGS' 'int ()'           `-CompoundStmt 0x125009b48 <line:10:3, line:34:3>             |-CaseStmt 0x1250093b8 <line:11:3, line:15:4>             | |-ConstantExpr 0x1250093a0 <line:11:8> 'int'             | | `-IntegerLiteral 0x125009380 <col:8> 'int' 3             | `-IfStmt 0x125009580 <line:12:4, line:15:4>             |   |-BinaryOperator 0x125009438 <line:12:8, col:19> 'int' '!='             |   | |-ImplicitCastExpr 0x125009420 <col:8> 'int' <LValueToRValue>             |   | | `-DeclRefExpr 0x1250093e0 <col:8> 'int' lvalue Var 0x125008f70 'esc_len' 'int'             |   | `-IntegerLiteral 0x125009400 <col:19> 'int' 1             |   `-CompoundStmt 0x125009570 <col:22, line:15:4>             |-BinaryOperator 0x125009650 <line:16:4, col:18> 'char' contains-errors '='             | |-DeclRefExpr 0x1250095a0 <col:4> 'char' lvalue Var 0x1249284e0 'escape' 'char'             | `-ImplicitCastExpr 0x125009638 <col:13, col:18> 'char' contains-errors <LValueToRValue>             |   `-ArraySubscriptExpr 0x125009618 <col:13, col:18> 'char' contains-errors lvalue             |     |-ImplicitCastExpr 0x125009600 <col:13> 'char *' contains-errors <LValueToRValue>             |     | `-DeclRefExpr 0x1250095c0 <col:13> 'char *' contains-errors lvalue Var 0x124928738 'esc' 'char *'             |     `-IntegerLiteral 0x1250095e0 <col:17> 'int' 0             |-CaseStmt 0x1250096a8 <line:18:3, line:22:4>             | |-ConstantExpr 0x125009690 <line:18:8> 'int'             | | `-IntegerLiteral 0x125009670 <col:8> 'int' 2             | `-IfStmt 0x125009790 <line:19:4, line:22:4>             |   |-BinaryOperator 0x125009728 <line:19:8, col:17> 'int' '!='             |   | |-ImplicitCastExpr 0x125009710 <col:8> 'int' <LValueToRValue>             |   | | `-DeclRefExpr 0x1250096d0 <col:8> 'int' lvalue Var 0x125008ed0 'e_len' 'int'             |   | `-IntegerLiteral 0x1250096f0 <col:17> 'int' 1             |   `-CompoundStmt 0x125009780 <col:20, line:22:4>             |-BinaryOperator 0x125009860 <line:23:4, col:23> 'char' contains-errors '='             | |-DeclRefExpr 0x1250097b0 <col:4> 'char' lvalue Var 0x124928438 'enclosure' 'char'             | `-ImplicitCastExpr 0x125009848 <col:16, col:23> 'char' contains-errors <LValueToRValue>             |   `-ArraySubscriptExpr 0x125009828 <col:16, col:23> 'char' contains-errors lvalue             |     |-ImplicitCastExpr 0x125009810 <col:16> 'char *' contains-errors <LValueToRValue>             |     | `-DeclRefExpr 0x1250097d0 <col:16> 'char *' contains-errors lvalue Var 0x124928680 'enclo' 'char *'             |     `-IntegerLiteral 0x1250097f0 <col:22> 'int' 0             |-CaseStmt 0x1250098b8 <line:25:3, line:29:4>             | |-ConstantExpr 0x1250098a0 <line:25:8> 'int'             | | `-IntegerLiteral 0x125009880 <col:8> 'int' 1             | `-IfStmt 0x1250099f0 <line:26:4, line:29:4>             |   |-BinaryOperator 0x125009938 <line:26:8, col:17> 'int' '!='             |   | |-ImplicitCastExpr 0x125009920 <col:8> 'int' <LValueToRValue>             |   | | `-DeclRefExpr 0x1250098e0 <col:8> 'int' lvalue Var 0x125008e30 'd_len' 'int'             |   | `-IntegerLiteral 0x125009900 <col:17> 'int' 1             |   `-CompoundStmt 0x1250099e0 <col:20, line:29:4>             |-BinaryOperator 0x125009ac0 <line:30:4, col:23> 'char' contains-errors '='             | |-DeclRefExpr 0x125009a10 <col:4> 'char' lvalue Var 0x124928390 'delimiter' 'char'             | `-ImplicitCastExpr 0x125009aa8 <col:16, col:23> 'char' contains-errors <LValueToRValue>             |   `-ArraySubscriptExpr 0x125009a88 <col:16, col:23> 'char' contains-errors lvalue             |     |-ImplicitCastExpr 0x125009a70 <col:16> 'char *' contains-errors <LValueToRValue>             |     | `-DeclRefExpr 0x125009a30 <col:16> 'char *' contains-errors lvalue Var 0x1249285c8 'delim' 'char *'             |     `-IntegerLiteral 0x125009a50 <col:22> 'int' 0             `-CaseStmt 0x125009b18 <line:32:3, line:33:4>               |-ConstantExpr 0x125009b00 <line:32:8> 'int'               | `-IntegerLiteral 0x125009ae0 <col:8> 'int' 0               `-BreakStmt 0x125009b40 <line:33:4> ","20374":"`-FunctionDecl 0x148128e00  line:1:20 path_init 'const char *(struct nameidata *, unsigned int)' static   |-ParmVarDecl 0x148110a48 <col:30, col:48> col:48 used nd 'struct nameidata *'   |-ParmVarDecl 0x148110ac8 <col:52, col:61> col:61 used flags 'unsigned int'   `-CompoundStmt 0x148132ab0 <line:2:1, line:93:1>     |-DeclStmt 0x148128fa0 <line:3:2, col:16>     | `-VarDecl 0x148128f18 <col:2, col:15> col:6 used retval 'int' cinit     |   `-IntegerLiteral 0x148128f80 <col:15> 'int' 0     |-DeclStmt 0x1481290e0 <line:4:2, col:32>     | `-VarDecl 0x148128fd0 <col:2, col:28> col:14 used s 'const char *' cinit     |   `-CXXDependentScopeMemberExpr 0x148129098 <col:18, col:28> '<dependent type>' contains-errors lvalue ->name     |     `-RecoveryExpr 0x148129070 <col:18, col:22> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x148129038 <col:18> 'struct nameidata *' lvalue ParmVar 0x148110a48 'nd' 'struct nameidata *'     |-BinaryOperator 0x1481291c8 <line:6:2, col:18> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x148129130 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1481290f8 <col:2> 'struct nameidata *' lvalue ParmVar 0x148110a48 'nd' 'struct nameidata *'     | `-RecoveryExpr 0x1481291a8 <col:18> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x148129378 <line:7:2, col:38> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x148129220 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1481291e8 <col:2> 'struct nameidata *' lvalue ParmVar 0x148110a48 'nd' 'struct nameidata *'     | `-BinaryOperator 0x148129358 <col:14, col:38> '<dependent type>' contains-errors '|'     |   |-BinaryOperator 0x148129318 <col:14, col:22> '<dependent type>' contains-errors '|'     |   | |-DeclRefExpr 0x148129248 <col:14> 'unsigned int' lvalue ParmVar 0x148110ac8 'flags' 'unsigned int'     |   | `-RecoveryExpr 0x1481292f8 <col:22> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x148129338 <col:38> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x148129418 <line:8:2, col:14> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1481293d0 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x148129398 <col:2> 'struct nameidata *' lvalue ParmVar 0x148110a48 'nd' 'struct nameidata *'     | `-IntegerLiteral 0x1481293f8 <col:14> 'int' 0     |-IfStmt 0x14812fcb0 <line:9:2, line:30:2>     | |-BinaryOperator 0x1481294b0 <line:9:6, col:14> '<dependent type>' contains-errors '&'     | | |-DeclRefExpr 0x148129438 <col:6> 'unsigned int' lvalue ParmVar 0x148110ac8 'flags' 'unsigned int'     | | `-RecoveryExpr 0x148129490 <col:14> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14812fc68 <col:27, line:30:2>     |   |-DeclStmt 0x148129760 <line:10:3, col:40>     |   | |-RecordDecl 0x1481294d0 <col:3, col:10> col:10 struct dentry     |   | `-VarDecl 0x148129638 <col:3, col:34> col:18 used root 'struct dentry *' cinit     |   |   `-CXXDependentScopeMemberExpr 0x148129700 <col:25, col:34> '<dependent type>' contains-errors lvalue .dentry     |   |     `-RecoveryExpr 0x1481296d8 <col:25, col:29> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x1481296a0 <col:25> 'struct nameidata *' lvalue ParmVar 0x148110a48 'nd' 'struct nameidata *'     |   |-DeclStmt 0x1481299c8 <line:11:3, col:38>     |   | |-RecordDecl 0x148129778 <col:3, col:10> col:10 struct inode     |   | `-VarDecl 0x1481298e8 <col:3, col:31> col:17 used inode 'struct inode *' cinit     |   |   `-RecoveryExpr 0x148129988 <col:25, col:31> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x148129950 <col:25> 'struct dentry *' contains-errors lvalue Var 0x148129638 'root' 'struct dentry *'     |   |-IfStmt 0x14812f1b0 <line:12:3, line:18:3>     |   | |-ImplicitCastExpr 0x148129a30 <line:12:7, col:8> 'char' contains-errors <LValueToRValue>     |   | | `-UnaryOperator 0x148129a18 <col:7, col:8> 'const char' contains-errors lvalue prefix '*' cannot overflow     |   | |   `-ImplicitCastExpr 0x148129a00 <col:8> 'const char *' contains-errors <LValueToRValue>     |   | |     `-DeclRefExpr 0x1481299e0 <col:8> 'const char *' contains-errors lvalue Var 0x148128fd0 's' 'const char *'     |   | `-CompoundStmt 0x14812f188 <col:11, line:18:3>     |   |   |-IfStmt 0x14812ee38 <line:13:4, line:14:28>     |   |   | |-UnaryOperator 0x148129c28 <line:13:8, col:26> 'int' contains-errors prefix '!' cannot overflow     |   |   | | `-CallExpr 0x148129be8 <col:9, col:26> 'int' contains-errors     |   |   | |   |-ImplicitCastExpr 0x148129bd0 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |   | |   | `-DeclRefExpr 0x148129b60 <col:9> 'int ()' Function 0x148129aa8 'd_can_lookup' 'int ()'     |   |   | |   `-ImplicitCastExpr 0x148129c10 <col:22> 'struct dentry *' contains-errors <LValueToRValue>     |   |   | |     `-DeclRefExpr 0x148129b80 <col:22> 'struct dentry *' contains-errors lvalue Var 0x148129638 'root' 'struct dentry *'     |   |   | `-ReturnStmt 0x14812ee28 <line:14:5, col:28>     |   |   |   `-CallExpr 0x14812ee00 <col:12, col:28> '<dependent type>' contains-errors     |   |   |     |-DeclRefExpr 0x148129d20 <col:12> 'int ()' Function 0x148129c68 'ERR_PTR' 'int ()'     |   |   |     `-UnaryOperator 0x148129de8 <col:20, col:21> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   |       `-ImplicitCastExpr 0x148129dd0 <col:21> '<dependent type>' contains-errors <LValueToRValue>     |   |   |         `-RecoveryExpr 0x148129db0 <col:21> '<dependent type>' contains-errors lvalue     |   |   |-BinaryOperator 0x14812f050 <line:15:4, col:45> 'int' contains-errors '='     |   |   | |-DeclRefExpr 0x14812ee58 <col:4> 'int' lvalue Var 0x148128f18 'retval' 'int'     |   |   | `-CallExpr 0x14812f020 <col:13, col:45> '<dependent type>' contains-errors     |   |   |   |-DeclRefExpr 0x14812ef58 <col:13> 'int ()' Function 0x14812eea0 'inode_permission' 'int ()'     |   |   |   |-DeclRefExpr 0x14812ef78 <col:30> 'struct inode *' contains-errors lvalue Var 0x1481298e8 'inode' 'struct inode *'     |   |   |   `-RecoveryExpr 0x14812f000 <col:37> '<dependent type>' contains-errors lvalue     |   |   `-IfStmt 0x14812f168 <line:16:4, line:17:26>     |   |     |-ImplicitCastExpr 0x14812f090 <line:16:8> 'int' <LValueToRValue>     |   |     | `-DeclRefExpr 0x14812f070 <col:8> 'int' lvalue Var 0x148128f18 'retval' 'int'     |   |     `-ReturnStmt 0x14812f158 <line:17:5, col:26>     |   |       `-ImplicitCastExpr 0x14812f140 <col:12, col:26> 'const char *' <IntegralToPointer>     |   |         `-CallExpr 0x14812f100 <col:12, col:26> 'int'     |   |           |-ImplicitCastExpr 0x14812f0e8 <col:12> 'int (*)()' <FunctionToPointerDecay>     |   |           | `-DeclRefExpr 0x14812f0a8 <col:12> 'int ()' Function 0x148129c68 'ERR_PTR' 'int ()'     |   |           `-ImplicitCastExpr 0x14812f128 <col:20> 'int' <LValueToRValue>     |   |             `-DeclRefExpr 0x14812f0c8 <col:20> 'int' lvalue Var 0x148128f18 'retval' 'int'     |   |-BinaryOperator 0x14812f290 <line:19:3, col:18> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x14812f208 <col:3, col:7> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x14812f1d0 <col:3> 'struct nameidata *' lvalue ParmVar 0x148110a48 'nd' 'struct nameidata *'     |   | `-RecoveryExpr 0x14812f268 <col:14, col:18> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14812f230 <col:14> 'struct nameidata *' lvalue ParmVar 0x148110a48 'nd' 'struct nameidata *'     |   |-BinaryOperator 0x14812f330 <line:20:3, col:15> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x14812f2e8 <col:3, col:7> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x14812f2b0 <col:3> 'struct nameidata *' lvalue ParmVar 0x148110a48 'nd' 'struct nameidata *'     |   | `-DeclRefExpr 0x14812f310 <col:15> 'struct inode *' contains-errors lvalue Var 0x1481298e8 'inode' 'struct inode *'     |   |-IfStmt 0x14812fbf0 <line:21:3, line:28:3> has_else     |   | |-BinaryOperator 0x14812f3c8 <line:21:7, col:15> '<dependent type>' contains-errors '&'     |   | | |-DeclRefExpr 0x14812f350 <col:7> 'unsigned int' lvalue ParmVar 0x148110ac8 'flags' 'unsigned int'     |   | | `-RecoveryExpr 0x14812f3a8 <col:15> '<dependent type>' contains-errors lvalue     |   | |-CompoundStmt 0x14812fa10 <col:27, line:26:3>     |   | | |-CallExpr 0x14812f500 <line:22:4, col:18> 'int'     |   | | | `-ImplicitCastExpr 0x14812f4e8 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   | | |   `-DeclRefExpr 0x14812f4c8 <col:4> 'int ()' Function 0x14812f410 'rcu_read_lock' 'int ()'     |   | | |-BinaryOperator 0x14812f7b0 <line:23:4, col:59> '<dependent type>' contains-errors '='     |   | | | |-RecoveryExpr 0x14812f558 <col:4, col:8> '<dependent type>' contains-errors lvalue     |   | | | | `-DeclRefExpr 0x14812f520 <col:4> 'struct nameidata *' lvalue ParmVar 0x148110a48 'nd' 'struct nameidata *'     |   | | | `-CallExpr 0x14812f788 <col:14, col:59> '<dependent type>' contains-errors     |   | | |   |-DeclRefExpr 0x14812f660 <col:14> 'int ()' Function 0x14812f5a8 '__read_seqcount_begin' 'int ()'     |   | | |   `-UnaryOperator 0x14812f770 <col:36, col:54> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | |     `-CXXDependentScopeMemberExpr 0x14812f728 <col:37, col:54> '<dependent type>' contains-errors lvalue ->d_seq     |   | | |       `-CXXDependentScopeMemberExpr 0x14812f6e0 <col:37, col:46> '<dependent type>' contains-errors lvalue .dentry     |   | | |         `-RecoveryExpr 0x14812f6b8 <col:37, col:41> '<dependent type>' contains-errors lvalue     |   | | |           `-DeclRefExpr 0x14812f680 <col:37> 'struct nameidata *' lvalue ParmVar 0x148110a48 'nd' 'struct nameidata *'     |   | | `-BinaryOperator 0x14812f890 <line:24:4, col:23> '<dependent type>' contains-errors '='     |   | |   |-RecoveryExpr 0x14812f808 <col:4, col:8> '<dependent type>' contains-errors lvalue     |   | |   | `-DeclRefExpr 0x14812f7d0 <col:4> 'struct nameidata *' lvalue ParmVar 0x148110a48 'nd' 'struct nameidata *'     |   | |   `-RecoveryExpr 0x14812f868 <col:19, col:23> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x14812f830 <col:19> 'struct nameidata *' lvalue ParmVar 0x148110a48 'nd' 'struct nameidata *'     |   | `-CompoundStmt 0x14812fbd8 <line:26:10, line:28:3>     |   |   `-CallExpr 0x14812fbb0 <line:27:4, col:22> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x14812fb18 <col:4> 'int ()' Function 0x14812fa60 'path_get' 'int ()'     |   |     `-UnaryOperator 0x14812fb98 <col:13, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |       `-RecoveryExpr 0x14812fb70 <col:14, col:18> '<dependent type>' contains-errors lvalue     |   |         `-DeclRefExpr 0x14812fb38 <col:14> 'struct nameidata *' lvalue ParmVar 0x148110a48 'nd' 'struct nameidata *'     |   `-ReturnStmt 0x14812fc58 <line:29:3, col:10>     |     `-ImplicitCastExpr 0x14812fc40 <col:10> 'const char *' contains-errors <LValueToRValue>     |       `-DeclRefExpr 0x14812fc20 <col:10> 'const char *' contains-errors lvalue Var 0x148128fd0 's' 'const char *'     `-IfStmt 0x148132a80 <line:37:2, line:92:2> has_else       |-BinaryOperator 0x148130008 <line:37:6, col:12> 'int' contains-errors '=='       | |-ImplicitCastExpr 0x14812fff0 <col:6, col:7> 'int' contains-errors <IntegralCast>       | | `-ImplicitCastExpr 0x14812ffd8 <col:6, col:7> 'char' contains-errors <LValueToRValue>       | |   `-UnaryOperator 0x14812ffa8 <col:6, col:7> 'const char' contains-errors lvalue prefix '*' cannot overflow       | |     `-ImplicitCastExpr 0x14812ff90 <col:7> 'const char *' contains-errors <LValueToRValue>       | |       `-DeclRefExpr 0x14812ff70 <col:7> 'const char *' contains-errors lvalue Var 0x148128fd0 's' 'const char *'       | `-CharacterLiteral 0x14812ffc0 <col:12> 'int' 47       |-CompoundStmt 0x148130790 <col:17, line:46:2>       | |-IfStmt 0x1481300c0 <line:38:3, line:39:18>       | | |-RecoveryExpr 0x148130048 <line:38:7, col:15> '_Bool' contains-errors       | | `-CallExpr 0x1481300a0 <line:39:4, col:18> 'int'       | |   `-ImplicitCastExpr 0x148130088 <col:4> 'int (*)()' <FunctionToPointerDecay>       | |     `-DeclRefExpr 0x148130068 <col:4> 'int ()' Function 0x14812f410 'rcu_read_lock' 'int ()'       | |-CallExpr 0x148130218 <line:40:3, col:14> 'int'       | | |-ImplicitCastExpr 0x148130200 <col:3> 'int (*)()' <FunctionToPointerDecay>       | | | `-DeclRefExpr 0x1481301c0 <col:3> 'int ()' Function 0x148130108 'set_root' 'int ()'       | | `-ImplicitCastExpr 0x148130240 <col:12> 'struct nameidata *' <LValueToRValue>       | |   `-DeclRefExpr 0x1481301e0 <col:12> 'struct nameidata *' lvalue ParmVar 0x148110a48 'nd' 'struct nameidata *'       | |-IfStmt 0x148130570 <line:41:3, line:42:11>       | | |-CallExpr 0x148130500 <line:41:7, col:31> 'int'       | | | |-ImplicitCastExpr 0x1481304e8 <col:7> 'int (*)()' <FunctionToPointerDecay>       | | | | `-DeclRefExpr 0x148130338 <col:7> 'int ()' Function 0x148130280 'likely' 'int ()'       | | | `-UnaryOperator 0x1481304d0 <col:14, col:30> 'int' prefix '!' cannot overflow       | | |   `-CallExpr 0x148130490 <col:15, col:30> 'int'       | | |     |-ImplicitCastExpr 0x148130478 <col:15> 'int (*)()' <FunctionToPointerDecay>       | | |     | `-DeclRefExpr 0x148130438 <col:15> 'int ()' Function 0x148130380 'nd_jump_root' 'int ()'       | | |     `-ImplicitCastExpr 0x1481304b8 <col:28> 'struct nameidata *' <LValueToRValue>       | | |       `-DeclRefExpr 0x148130458 <col:28> 'struct nameidata *' lvalue ParmVar 0x148110a48 'nd' 'struct nameidata *'       | | `-ReturnStmt 0x148130560 <line:42:4, col:11>       | |   `-ImplicitCastExpr 0x148130548 <col:11> 'const char *' contains-errors <LValueToRValue>       | |     `-DeclRefExpr 0x148130528 <col:11> 'const char *' contains-errors lvalue Var 0x148128fd0 's' 'const char *'       | `-CallExpr 0x148130750 <line:44:3, col:19> 'int'       |   `-ImplicitCastExpr 0x148130738 <col:3> 'int (*)()' <FunctionToPointerDecay>       |     `-DeclRefExpr 0x148130718 <col:3> 'int ()' Function 0x148130660 'rcu_read_unlock' 'int ()'       `-IfStmt 0x148132a50 <line:46:9, line:92:2> has_else         |-RecoveryExpr 0x148130820 <line:46:13, col:24> '_Bool' contains-errors         |-CompoundStmt 0x148131748 <col:34, line:64:2>         | |-IfStmt 0x1481316d0 <line:47:3, line:62:3> has_else         | | |-RecoveryExpr 0x148130860 <line:47:7, col:15> '_Bool' contains-errors         | | |-CompoundStmt 0x1481313a0 <col:27, line:59:3>         | | | |-DeclStmt 0x148130a68 <line:48:4, col:38>         | | | | |-RecordDecl 0x148130880 <col:4, col:11> col:11 struct fs_struct         | | | | `-VarDecl 0x1481309e8 <col:4, col:22> col:22 used fs 'struct fs_struct *'         | | | |-DeclStmt 0x148130b00 <line:49:4, col:16>         | | | | `-VarDecl 0x148130a98 <col:4, col:13> col:13 used seq 'unsigned int'         | | | |-CallExpr 0x148130b50 <line:51:4, col:18> 'int'         | | | | `-ImplicitCastExpr 0x148130b38 <col:4> 'int (*)()' <FunctionToPointerDecay>         | | | |   `-DeclRefExpr 0x148130b18 <col:4> 'int ()' Function 0x14812f410 'rcu_read_lock' 'int ()'         | | | `-DoStmt 0x148131380 <line:53:4, line:58:47>         | | |   |-CompoundStmt 0x148131188 <line:53:7, line:58:4>         | | |   | |-BinaryOperator 0x148130d30 <line:54:5, col:39> 'unsigned int' contains-errors '='         | | |   | | |-DeclRefExpr 0x148130b70 <col:5> 'unsigned int' lvalue Var 0x148130a98 'seq' 'unsigned int'         | | |   | | `-CallExpr 0x148130d08 <col:11, col:39> '<dependent type>' contains-errors         | | |   | |   |-DeclRefExpr 0x148130c70 <col:11> 'int ()' Function 0x148130bb8 'read_seqcount_begin' 'int ()'         | | |   | |   `-UnaryOperator 0x148130cf0 <col:31, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow         | | |   | |     `-RecoveryExpr 0x148130cc8 <col:32, col:36> '<dependent type>' contains-errors lvalue         | | |   | |       `-DeclRefExpr 0x148130c90 <col:32> 'struct fs_struct *' lvalue Var 0x1481309e8 'fs' 'struct fs_struct *'         | | |   | |-BinaryOperator 0x148130e28 <line:55:5, col:20> '<dependent type>' contains-errors '='         | | |   | | |-RecoveryExpr 0x148130d88 <col:5, col:9> '<dependent type>' contains-errors lvalue         | | |   | | | `-DeclRefExpr 0x148130d50 <col:5> 'struct nameidata *' lvalue ParmVar 0x148110a48 'nd' 'struct nameidata *'         | | |   | | `-RecoveryExpr 0x148130e00 <col:16, col:20> '<dependent type>' contains-errors lvalue         | | |   | |   `-DeclRefExpr 0x148130db0 <col:16> 'struct fs_struct *' lvalue Var 0x1481309e8 'fs' 'struct fs_struct *'         | | |   | |-BinaryOperator 0x148130f98 <line:56:5, col:34> '<dependent type>' contains-errors '='         | | |   | | |-RecoveryExpr 0x148130e80 <col:5, col:9> '<dependent type>' contains-errors lvalue         | | |   | | | `-DeclRefExpr 0x148130e48 <col:5> 'struct nameidata *' lvalue ParmVar 0x148110a48 'nd' 'struct nameidata *'         | | |   | | `-CXXDependentScopeMemberExpr 0x148130f50 <col:17, col:34> '<dependent type>' contains-errors lvalue ->d_inode         | | |   | |   `-CXXDependentScopeMemberExpr 0x148130f08 <col:17, col:26> '<dependent type>' contains-errors lvalue .dentry         | | |   | |     `-RecoveryExpr 0x148130ee0 <col:17, col:21> '<dependent type>' contains-errors lvalue         | | |   | |       `-DeclRefExpr 0x148130ea8 <col:17> 'struct nameidata *' lvalue ParmVar 0x148110a48 'nd' 'struct nameidata *'         | | |   | `-BinaryOperator 0x148131168 <line:57:5, col:60> '<dependent type>' contains-errors '='         | | |   |   |-RecoveryExpr 0x148130ff0 <col:5, col:9> '<dependent type>' contains-errors lvalue         | | |   |   | `-DeclRefExpr 0x148130fb8 <col:5> 'struct nameidata *' lvalue ParmVar 0x148110a48 'nd' 'struct nameidata *'         | | |   |   `-CallExpr 0x148131140 <col:15, col:60> '<dependent type>' contains-errors         | | |   |     |-DeclRefExpr 0x148131018 <col:15> 'int ()' Function 0x14812f5a8 '__read_seqcount_begin' 'int ()'         | | |   |     `-UnaryOperator 0x148131128 <col:37, col:55> '<dependent type>' contains-errors prefix '&' cannot overflow         | | |   |       `-CXXDependentScopeMemberExpr 0x1481310e0 <col:38, col:55> '<dependent type>' contains-errors lvalue ->d_seq         | | |   |         `-CXXDependentScopeMemberExpr 0x148131098 <col:38, col:47> '<dependent type>' contains-errors lvalue .dentry         | | |   |           `-RecoveryExpr 0x148131070 <col:38, col:42> '<dependent type>' contains-errors lvalue         | | |   |             `-DeclRefExpr 0x148131038 <col:38> 'struct nameidata *' lvalue ParmVar 0x148110a48 'nd' 'struct nameidata *'         | | |   `-CallExpr 0x148131350 <line:58:13, col:46> '<dependent type>' contains-errors         | | |     |-DeclRefExpr 0x148131298 <col:13> 'int ()' Function 0x1481311e0 'read_seqcount_retry' 'int ()'         | | |     |-UnaryOperator 0x148131318 <col:33, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow         | | |     | `-RecoveryExpr 0x1481312f0 <col:34, col:38> '<dependent type>' contains-errors lvalue         | | |     |   `-DeclRefExpr 0x1481312b8 <col:34> 'struct fs_struct *' lvalue Var 0x1481309e8 'fs' 'struct fs_struct *'         | | |     `-DeclRefExpr 0x148131330 <col:43> 'unsigned int' lvalue Var 0x148130a98 'seq' 'unsigned int'         | | `-CompoundStmt 0x1481316b8 <line:59:10, line:62:3>         | |   `-BinaryOperator 0x148131698 <line:61:4, col:33> '<dependent type>' contains-errors '='         | |     |-RecoveryExpr 0x148131580 <col:4, col:8> '<dependent type>' contains-errors lvalue         | |     | `-DeclRefExpr 0x148131548 <col:4> 'struct nameidata *' lvalue ParmVar 0x148110a48 'nd' 'struct nameidata *'         | |     `-CXXDependentScopeMemberExpr 0x148131650 <col:16, col:33> '<dependent type>' contains-errors lvalue ->d_inode         | |       `-CXXDependentScopeMemberExpr 0x148131608 <col:16, col:25> '<dependent type>' contains-errors lvalue .dentry         | |         `-RecoveryExpr 0x1481315e0 <col:16, col:20> '<dependent type>' contains-errors lvalue         | |           `-DeclRefExpr 0x1481315a8 <col:16> 'struct nameidata *' lvalue ParmVar 0x148110a48 'nd' 'struct nameidata *'         | `-ReturnStmt 0x148131738 <line:63:3, col:10>         |   `-ImplicitCastExpr 0x148131720 <col:10> 'const char *' contains-errors <LValueToRValue>         |     `-DeclRefExpr 0x148131700 <col:10> 'const char *' contains-errors lvalue Var 0x148128fd0 's' 'const char *'         `-CompoundStmt 0x148132a00 <line:64:9, line:92:2>           |-DeclStmt 0x148131a70 <line:66:3, col:35>           | |-RecordDecl 0x148131768 <col:3, col:10> col:10 struct fd           | `-VarDecl 0x148131868 <col:3, col:13> col:13 invalid f 'struct fd'           |-DeclStmt 0x148131c78 <line:67:3, col:24>           | |-RecordDecl 0x148131a88 <col:3, col:10> col:10 struct dentry           | `-VarDecl 0x148131bf8 <col:3, col:18> col:18 used dentry 'struct dentry *'           |-BinaryOperator 0x148131e90 <line:72:3, col:27> 'struct dentry *' contains-errors '='           | |-DeclRefExpr 0x148131d48 <col:3> 'struct dentry *' lvalue Var 0x148131bf8 'dentry' 'struct dentry *'           | `-CXXDependentScopeMemberExpr 0x148131e48 <col:12, col:27> '<dependent type>' contains-errors lvalue .dentry           |   `-CXXDependentScopeMemberExpr 0x148131e00 <col:12, col:20> '<dependent type>' contains-errors lvalue ->f_path           |     `-CXXDependentScopeMemberExpr 0x148131d88 <col:12, col:14> '<dependent type>' contains-errors lvalue .file           |       `-RecoveryExpr 0x148131d68 <col:12> '<dependent type>' contains-errors lvalue           |-IfStmt 0x148132180 <line:74:3, line:79:3>           | |-ImplicitCastExpr 0x148131f00 <line:74:7, col:8> 'char' contains-errors <LValueToRValue>           | | `-UnaryOperator 0x148131ee8 <col:7, col:8> 'const char' contains-errors lvalue prefix '*' cannot overflow           | |   `-ImplicitCastExpr 0x148131ed0 <col:8> 'const char *' contains-errors <LValueToRValue>           | |     `-DeclRefExpr 0x148131eb0 <col:8> 'const char *' contains-errors lvalue Var 0x148128fd0 's' 'const char *'           | `-CompoundStmt 0x148132168 <col:11, line:79:3>           |   `-IfStmt 0x148132148 <line:75:4, line:78:4>           |     |-UnaryOperator 0x148131fb0 <line:75:8, col:28> 'int' prefix '!' cannot overflow           |     | `-CallExpr 0x148131f70 <col:9, col:28> 'int'           |     |   |-ImplicitCastExpr 0x148131f58 <col:9> 'int (*)()' <FunctionToPointerDecay>           |     |   | `-DeclRefExpr 0x148131f18 <col:9> 'int ()' Function 0x148129aa8 'd_can_lookup' 'int ()'           |     |   `-ImplicitCastExpr 0x148131f98 <col:22> 'struct dentry *' <LValueToRValue>           |     |     `-DeclRefExpr 0x148131f38 <col:22> 'struct dentry *' lvalue Var 0x148131bf8 'dentry' 'struct dentry *'           |     `-CompoundStmt 0x148132130 <col:31, line:78:4>           |       `-CallExpr 0x1481320e8 <line:76:5, col:12> '<dependent type>' contains-errors           |         |-DeclRefExpr 0x1481320a8 <col:5> 'int ()' Function 0x148131ff0 'fdput' 'int ()'           |         `-RecoveryExpr 0x1481320c8 <col:11> '<dependent type>' contains-errors lvalue           |-BinaryOperator 0x1481322b0 <line:81:3, col:22> '<dependent type>' contains-errors '='           | |-RecoveryExpr 0x1481321d8 <col:3, col:7> '<dependent type>' contains-errors lvalue           | | `-DeclRefExpr 0x1481321a0 <col:3> 'struct nameidata *' lvalue ParmVar 0x148110a48 'nd' 'struct nameidata *'           | `-CXXDependentScopeMemberExpr 0x148132268 <col:14, col:22> '<dependent type>' contains-errors lvalue ->f_path           |   `-CXXDependentScopeMemberExpr 0x148132220 <col:14, col:16> '<dependent type>' contains-errors lvalue .file           |     `-RecoveryExpr 0x148132200 <col:14> '<dependent type>' contains-errors lvalue           |-IfStmt 0x148132920 <line:82:3, line:89:3> has_else           | |-RecoveryExpr 0x1481322f0 <line:82:7, col:15> '_Bool' contains-errors           | |-CompoundStmt 0x1481326a8 <col:27, line:86:3>           | | |-CallExpr 0x148132348 <line:83:4, col:18> 'int'           | | | `-ImplicitCastExpr 0x148132330 <col:4> 'int (*)()' <FunctionToPointerDecay>           | | |   `-DeclRefExpr 0x148132310 <col:4> 'int ()' Function 0x14812f410 'rcu_read_lock' 'int ()'           | | |-BinaryOperator 0x1481324b8 <line:84:4, col:33> '<dependent type>' contains-errors '='           | | | |-RecoveryExpr 0x1481323a0 <col:4, col:8> '<dependent type>' contains-errors lvalue           | | | | `-DeclRefExpr 0x148132368 <col:4> 'struct nameidata *' lvalue ParmVar 0x148110a48 'nd' 'struct nameidata *'           | | | `-CXXDependentScopeMemberExpr 0x148132470 <col:16, col:33> '<dependent type>' contains-errors lvalue ->d_inode           | | |   `-CXXDependentScopeMemberExpr 0x148132428 <col:16, col:25> '<dependent type>' contains-errors lvalue .dentry           | | |     `-RecoveryExpr 0x148132400 <col:16, col:20> '<dependent type>' contains-errors lvalue           | | |       `-DeclRefExpr 0x1481323c8 <col:16> 'struct nameidata *' lvalue ParmVar 0x148110a48 'nd' 'struct nameidata *'           | | `-BinaryOperator 0x148132688 <line:85:4, col:57> '<dependent type>' contains-errors '='           | |   |-RecoveryExpr 0x148132510 <col:4, col:8> '<dependent type>' contains-errors lvalue           | |   | `-DeclRefExpr 0x1481324d8 <col:4> 'struct nameidata *' lvalue ParmVar 0x148110a48 'nd' 'struct nameidata *'           | |   `-CallExpr 0x148132660 <col:14, col:57> '<dependent type>' contains-errors           | |     |-DeclRefExpr 0x148132538 <col:14> 'int ()' Function 0x148130bb8 'read_seqcount_begin' 'int ()'           | |     `-UnaryOperator 0x148132648 <col:34, col:52> '<dependent type>' contains-errors prefix '&' cannot overflow           | |       `-CXXDependentScopeMemberExpr 0x148132600 <col:35, col:52> '<dependent type>' contains-errors lvalue ->d_seq           | |         `-CXXDependentScopeMemberExpr 0x1481325b8 <col:35, col:44> '<dependent type>' contains-errors lvalue .dentry           | |           `-RecoveryExpr 0x148132590 <col:35, col:39> '<dependent type>' contains-errors lvalue           | |             `-DeclRefExpr 0x148132558 <col:35> 'struct nameidata *' lvalue ParmVar 0x148110a48 'nd' 'struct nameidata *'           | `-CompoundStmt 0x148132900 <line:86:10, line:89:3>           |   |-CallExpr 0x148132768 <line:87:4, col:22> '<dependent type>' contains-errors           |   | |-DeclRefExpr 0x1481326d0 <col:4> 'int ()' Function 0x14812fa60 'path_get' 'int ()'           |   | `-UnaryOperator 0x148132750 <col:13, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow           |   |   `-RecoveryExpr 0x148132728 <col:14, col:18> '<dependent type>' contains-errors lvalue           |   |     `-DeclRefExpr 0x1481326f0 <col:14> 'struct nameidata *' lvalue ParmVar 0x148110a48 'nd' 'struct nameidata *'           |   `-BinaryOperator 0x1481328e0 <line:88:4, col:33> '<dependent type>' contains-errors '='           |     |-RecoveryExpr 0x1481327c8 <col:4, col:8> '<dependent type>' contains-errors lvalue           |     | `-DeclRefExpr 0x148132790 <col:4> 'struct nameidata *' lvalue ParmVar 0x148110a48 'nd' 'struct nameidata *'           |     `-CXXDependentScopeMemberExpr 0x148132898 <col:16, col:33> '<dependent type>' contains-errors lvalue ->d_inode           |       `-CXXDependentScopeMemberExpr 0x148132850 <col:16, col:25> '<dependent type>' contains-errors lvalue .dentry           |         `-RecoveryExpr 0x148132828 <col:16, col:20> '<dependent type>' contains-errors lvalue           |           `-DeclRefExpr 0x1481327f0 <col:16> 'struct nameidata *' lvalue ParmVar 0x148110a48 'nd' 'struct nameidata *'           |-CallExpr 0x148132990 <line:90:3, col:10> '<dependent type>' contains-errors           | |-DeclRefExpr 0x148132950 <col:3> 'int ()' Function 0x148131ff0 'fdput' 'int ()'           | `-RecoveryExpr 0x148132970 <col:9> '<dependent type>' contains-errors lvalue           `-ReturnStmt 0x1481329f0 <line:91:3, col:10>             `-ImplicitCastExpr 0x1481329d8 <col:10> 'const char *' contains-errors <LValueToRValue>               `-DeclRefExpr 0x1481329b8 <col:10> 'const char *' contains-errors lvalue Var 0x148128fd0 's' 'const char *' ","20573":"`-FunctionDecl 0x12c928238  line:1:1 TEST 'int (int, int)'   |-ParmVarDecl 0x12c928158 <col:6> col:6 ParseExpression 'int'   |-ParmVarDecl 0x12c9280d8 <col:23> col:23 ShouldAcceptArgumentWithoutArrayAsSingleArgument 'int'   `-CompoundStmt 0x12c941380 <col:73, line:7:1>     |-DeclStmt 0x12c940d50 <line:2:5, col:62>     | `-VarDecl 0x12c928350 <col:5, col:61> col:10 used resultExpression 'int' auto cinit     |   `-CallExpr 0x12c940d28 <col:29, col:61> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12c9284e0 <col:29> 'int ()' Function 0x12c928428 'parseExpression' 'int ()'     |     `-CallExpr 0x12c940d00 <col:45, col:60> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x12c9285e0 <col:45> 'int ()' Function 0x12c928528 'BSON' 'int ()'     |       `-RecoveryExpr 0x12c940cd0 <col:50, col:59> '<dependent type>' contains-errors lvalue     |         |-StringLiteral 0x12c928640 <col:50> 'char[4]' lvalue \"STR\"     |         `-IntegerLiteral 0x12c928660 <col:59> 'int' 1     |-DeclStmt 0x12c940ea0 <line:3:5, col:78>     | `-VarDecl 0x12c940d80 <col:5, col:10> col:10 used notExpression 'int' auto     `-CallExpr 0x12c941028 <line:4:5, col:30> 'int'       |-ImplicitCastExpr 0x12c941010 <col:5> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x12c940f98 <col:5> 'int ()' Function 0x12c940ee0 'ASSERT_TRUE' 'int ()'       `-ImplicitCastExpr 0x12c941050 <col:17> 'int' <LValueToRValue>         `-DeclRefExpr 0x12c940fb8 <col:17> 'int' lvalue Var 0x12c940d80 'notExpression' 'int' ","20507":"`-FunctionDecl 0x126141eb8  col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x126141fb8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x126142020 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x126142088 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x126141f60 <<invalid sloc>> Implicit 882 ","20666":"`-FunctionDecl 0x135928288  line:1:5 invalid ssl_check_tlsext 'int (int *, int)'   |-ParmVarDecl 0x135928128 <col:22, col:27> col:27 referenced invalid s 'int *'   |-ParmVarDecl 0x1359281a8 <col:30, col:34> col:34 is_server 'int'   `-CompoundStmt 0x135942398 <line:2:2, line:26:1>     |-DeclStmt 0x1359283f8 <line:3:2, col:30>     | `-VarDecl 0x135928358 <col:2, col:10> col:6 used ret 'int' cinit     |   `-RecoveryExpr 0x1359283d8 <col:10> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x1359284c8 <line:5:2, col:35>     | `-VarDecl 0x135928428 <col:2, col:11> col:6 used al 'int' cinit     |   `-RecoveryExpr 0x1359284a8 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x135941d80 <line:7:2, line:10:97> has_else     | |-BinaryOperator 0x1359286d0 <line:7:6, col:62> 'int' contains-errors '&&'     | | |-BinaryOperator 0x1359286b0 <col:6, col:16> 'int' contains-errors '!='     | | | |-CXXDependentScopeMemberExpr 0x135928500 <col:6, col:9> '<dependent type>' contains-errors lvalue ->ctx     | | | | `-RecoveryExpr 0x1359284e0 <col:6> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x135928690 <col:16> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x135928650 <col:24, col:62> 'int' contains-errors '!='     | |   |-CXXDependentScopeMemberExpr 0x1359285e8 <col:24, col:32> '<dependent type>' contains-errors lvalue ->tlsext_servername_callback     | |   | `-CXXDependentScopeMemberExpr 0x1359285a0 <col:24, col:27> '<dependent type>' contains-errors lvalue ->ctx     | |   |   `-RecoveryExpr 0x135928580 <col:24> '<dependent type>' contains-errors lvalue     | |   `-IntegerLiteral 0x135928630 <col:62> 'int' 0     | |-BinaryOperator 0x135941900 <line:8:3, col:81> 'int' contains-errors '='     | | |-DeclRefExpr 0x1359286f0 <col:3> 'int' contains-errors lvalue Var 0x135928358 'ret' 'int'     | | `-CallExpr 0x1359418c8 <col:9, col:81> '<dependent type>' contains-errors     | |   |-CXXDependentScopeMemberExpr 0x135928778 <col:9, col:17> '<dependent type>' contains-errors lvalue ->tlsext_servername_callback     | |   | `-CXXDependentScopeMemberExpr 0x135928730 <col:9, col:12> '<dependent type>' contains-errors lvalue ->ctx     | |   |   `-RecoveryExpr 0x135928710 <col:9> '<dependent type>' contains-errors lvalue     | |   |-RecoveryExpr 0x1359287c0 <col:44> '<dependent type>' contains-errors lvalue     | |   |-UnaryOperator 0x135941800 <col:47, col:48> 'int *' contains-errors prefix '&' cannot overflow     | |   | `-DeclRefExpr 0x1359287e0 <col:48> 'int' contains-errors lvalue Var 0x135928428 'al' 'int'     | |   `-CXXDependentScopeMemberExpr 0x135941880 <col:52, col:60> '<dependent type>' contains-errors lvalue ->tlsext_servername_arg     | |     `-CXXDependentScopeMemberExpr 0x135941838 <col:52, col:55> '<dependent type>' contains-errors lvalue ->ctx     | |       `-RecoveryExpr 0x135941818 <col:52> '<dependent type>' contains-errors lvalue     | `-IfStmt 0x135941d60 <line:9:7, line:10:97>     |   |-BinaryOperator 0x135941b10 <line:9:11, col:83> 'int' contains-errors '&&'     |   | |-BinaryOperator 0x135941af0 <col:11, col:29> 'int' contains-errors '!='     |   | | |-CXXDependentScopeMemberExpr 0x135941940 <col:11, col:14> '<dependent type>' contains-errors lvalue ->initial_ctx     |   | | | `-RecoveryExpr 0x135941920 <col:11> '<dependent type>' contains-errors lvalue     |   | | `-RecoveryExpr 0x135941ad0 <col:29> '<dependent type>' contains-errors lvalue     |   | `-BinaryOperator 0x135941a90 <col:37, col:83> 'int' contains-errors '!='     |   |   |-CXXDependentScopeMemberExpr 0x135941a28 <col:37, col:53> '<dependent type>' contains-errors lvalue ->tlsext_servername_callback     |   |   | `-CXXDependentScopeMemberExpr 0x1359419e0 <col:37, col:40> '<dependent type>' contains-errors lvalue ->initial_ctx     |   |   |   `-RecoveryExpr 0x1359419c0 <col:37> '<dependent type>' contains-errors lvalue     |   |   `-IntegerLiteral 0x135941a70 <col:83> 'int' 0     |   `-BinaryOperator 0x135941d40 <line:10:3, col:97> 'int' contains-errors '='     |     |-DeclRefExpr 0x135941b30 <col:3> 'int' contains-errors lvalue Var 0x135928358 'ret' 'int'     |     `-CallExpr 0x135941d08 <col:9, col:97> '<dependent type>' contains-errors     |       |-CXXDependentScopeMemberExpr 0x135941bb8 <col:9, col:25> '<dependent type>' contains-errors lvalue ->tlsext_servername_callback     |       | `-CXXDependentScopeMemberExpr 0x135941b70 <col:9, col:12> '<dependent type>' contains-errors lvalue ->initial_ctx     |       |   `-RecoveryExpr 0x135941b50 <col:9> '<dependent type>' contains-errors lvalue     |       |-RecoveryExpr 0x135941c00 <col:52> '<dependent type>' contains-errors lvalue     |       |-UnaryOperator 0x135941c40 <col:55, col:56> 'int *' contains-errors prefix '&' cannot overflow     |       | `-DeclRefExpr 0x135941c20 <col:56> 'int' contains-errors lvalue Var 0x135928428 'al' 'int'     |       `-CXXDependentScopeMemberExpr 0x135941cc0 <col:60, col:76> '<dependent type>' contains-errors lvalue ->tlsext_servername_arg     |         `-CXXDependentScopeMemberExpr 0x135941c78 <col:60, col:63> '<dependent type>' contains-errors lvalue ->initial_ctx     |           `-RecoveryExpr 0x135941c58 <col:60> '<dependent type>' contains-errors lvalue     `-SwitchStmt 0x135941de8 <line:12:2, line:25:2>       |-ImplicitCastExpr 0x135941dd0 <line:12:10> 'int' contains-errors <LValueToRValue>       | `-DeclRefExpr 0x135941db0 <col:10> 'int' contains-errors lvalue Var 0x135928358 'ret' 'int'       `-CompoundStmt 0x135942358 <col:15, line:25:2>         |-CallExpr 0x135942050 <line:14:4, col:38> '<dependent type>' contains-errors         | |-DeclRefExpr 0x135941f80 <col:4> 'int ()' Function 0x135941ec8 'ssl3_send_alert' 'int ()'         | |-RecoveryExpr 0x135941fa0 <col:20> '<dependent type>' contains-errors lvalue         | |-RecoveryExpr 0x135942030 <col:22> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x135941fd8 <col:36> 'int' contains-errors lvalue Var 0x135928428 'al' 'int'         |-ReturnStmt 0x1359420c0 <line:15:4, col:12>         | `-UnaryOperator 0x1359420a8 <col:11, col:12> 'int' prefix '-'         |   `-IntegerLiteral 0x135942088 <col:12> 'int' 1         |-CallExpr 0x1359421b8 <line:18:4, col:40> '<dependent type>' contains-errors         | |-DeclRefExpr 0x1359420e8 <col:4> 'int ()' Function 0x135941ec8 'ssl3_send_alert' 'int ()'         | |-RecoveryExpr 0x135942108 <col:20> '<dependent type>' contains-errors lvalue         | |-RecoveryExpr 0x135942198 <col:22> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x135942140 <col:38> 'int' contains-errors lvalue Var 0x135928428 'al' 'int'         |-ReturnStmt 0x135942210 <line:19:4, col:11>         | `-IntegerLiteral 0x1359421f0 <col:11> 'int' 1         |-BinaryOperator 0x1359422e8 <line:22:4, col:23> '<dependent type>' contains-errors '='         | |-CXXDependentScopeMemberExpr 0x135942280 <col:4, col:7> '<dependent type>' contains-errors lvalue ->servername_done         | | `-RecoveryExpr 0x135942258 <col:4> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x135942238 <col:4> 'int *' lvalue ParmVar 0x135928128 's' 'int *'         | `-IntegerLiteral 0x1359422c8 <col:23> 'int' 0         `-DefaultStmt 0x135942338 <line:23:4, line:24:10>           `-ReturnStmt 0x135942328 <col:3, col:10>             `-IntegerLiteral 0x135942308 <col:10> 'int' 1 "},"target":{"20641":0,"20419":1,"20746":0,"20442":0,"20680":1,"20883":0,"20562":1,"20615":0,"21100":1,"20685":0,"20405":0,"20858":0,"20373":0,"20493":1,"20381":0,"20543":0,"21162":1,"20321":1,"20447":0,"20585":0,"21119":1,"20563":0,"20424":1,"21198":1,"20583":1,"21103":0,"20767":1,"20758":0,"20241":0,"21023":0,"20523":0,"21081":1,"21219":1,"20626":0,"20923":1,"20489":1,"20495":1,"20909":0,"21227":0,"21184":1,"21232":1,"20555":1,"20364":1,"20398":1,"20655":1,"21146":1,"20377":1,"20908":1,"21121":0,"20402":1,"20430":0,"21171":1,"20921":0,"20378":0,"20235":0,"20874":1,"20492":1,"21086":1,"21068":0,"21143":0,"20823":0,"21149":0,"21128":1,"20570":0,"20992":0,"20811":0,"21229":1,"20344":0,"20263":1,"20857":0,"20993":0,"20787":1,"21089":1,"20558":1,"20769":0,"21250":1,"20958":0,"21016":0,"20219":1,"20840":0,"20638":0,"20181":1,"20986":0,"20738":1,"20514":0,"20466":0,"20900":1,"21043":1,"21155":0,"20472":1,"20383":0,"20260":1,"20764":0,"20677":1,"20533":1,"20658":0,"20400":1,"20963":0,"20191":1,"20304":0,"20971":1,"20750":1,"20662":0,"20487":0,"21076":1,"21212":0,"20689":1,"21240":0,"20226":1,"20762":0,"21134":1,"20460":0,"21169":1,"20548":1,"21116":1,"21257":0,"20233":1,"20829":1,"20323":0,"20253":1,"20667":0,"20700":0,"20282":0,"20660":0,"20237":1,"21012":1,"20355":0,"21091":1,"20269":1,"20357":0,"20467":0,"20252":0,"20486":1,"20578":1,"20785":0,"20524":1,"20948":0,"21093":0,"21044":1,"20255":1,"20692":1,"20695":1,"20347":1,"21196":1,"21088":1,"20365":1,"20831":0,"20800":1,"20367":1,"21042":1,"20452":1,"20532":0,"20919":0,"20325":0,"21168":0,"21079":1,"20394":1,"20276":1,"21046":0,"20772":0,"21228":0,"20256":0,"20320":0,"20254":0,"20922":1,"20261":1,"21107":0,"20324":0,"21233":1,"20855":1,"20805":1,"20353":0,"20554":0,"21137":1,"20277":1,"21024":1,"21185":0,"20704":0,"20536":1,"20173":1,"20597":1,"21021":1,"20413":0,"20817":0,"20682":1,"20893":0,"20309":1,"20446":0,"20901":1,"20773":1,"20526":1,"20303":0,"20843":0,"20790":0,"21112":1,"20293":0,"21029":0,"20429":1,"20950":1,"21099":0,"20259":0,"21209":1,"20653":0,"20314":1,"20396":0,"20587":0,"20929":1,"20470":0,"21159":0,"20814":0,"21049":1,"20545":0,"20765":0,"20483":0,"20450":1,"21030":1,"20478":0,"20283":1,"20964":0,"20890":0,"20464":0,"20775":0,"20262":0,"20727":1,"20356":1,"20551":0,"20946":1,"20556":0,"20810":1,"20189":1,"21253":1,"20310":1,"20316":1,"20609":1,"21199":1,"20426":1,"20665":0,"20451":1,"21009":0,"20697":1,"21027":1,"20457":1,"20799":1,"20391":0,"20250":1,"20311":0,"20280":0,"20729":0,"21163":0,"20966":0,"20317":0,"20546":1,"20801":1,"20461":0,"20529":1,"20961":0,"20709":0,"20796":1,"20702":1,"20205":1,"20760":1,"20239":1,"20427":1,"20975":0,"20917":0,"21202":1,"20798":1,"20278":0,"20572":1,"21201":1,"20326":0,"20418":1,"20366":0,"21193":0,"21136":0,"20627":1,"21025":0,"21082":1,"20733":0,"21124":1,"21092":1,"20913":0,"20248":1,"20476":0,"20224":0,"20962":1,"20960":1,"20973":1,"20180":1,"21245":1,"20741":0,"20862":0,"20202":1,"20935":1,"20977":1,"21141":1,"21094":0,"20614":0,"20284":1,"20334":1,"20707":1,"20875":1,"20688":0,"21013":0,"20211":1,"20368":0,"20291":1,"21032":0,"20560":1,"20683":0,"20384":1,"20437":1,"20905":1,"20824":0,"20847":1,"20755":1,"20439":1,"20938":0,"20520":1,"20511":1,"20640":1,"20730":0,"21190":0,"20275":1,"21216":1,"21236":1,"20329":0,"20390":0,"20781":1,"20528":1,"20510":0,"21182":1,"21213":0,"21183":1,"21022":0,"20789":1,"20257":1,"20565":1,"20675":0,"20649":1,"20175":1,"20731":1,"21064":0,"20712":1,"20972":0,"20672":1,"20895":0,"20722":1,"20920":1,"20723":1,"20982":0,"20267":0,"21244":1,"21176":0,"20828":1,"20852":0,"20603":0,"21102":0,"20888":0,"20721":0,"20547":0,"20841":0,"20218":0,"20479":0,"21008":1,"20305":1,"20352":1,"20530":0,"20891":0,"21197":0,"20595":0,"20421":0,"20748":0,"21059":1,"21180":1,"20854":1,"20333":1,"20477":0,"20933":0,"21151":1,"20473":1,"20494":0,"20957":0,"20834":0,"21164":0,"20650":0,"21006":0,"20575":0,"20590":0,"21113":0,"20349":0,"20515":0,"20581":1,"20838":1,"20825":1,"20876":1,"21002":0,"20433":1,"20328":1,"20630":0,"20342":0,"20848":1,"20490":0,"20292":0,"20294":1,"20740":0,"20375":0,"20892":1,"20232":0,"20302":1,"20395":1,"20215":1,"20298":1,"20338":0,"20455":1,"20266":0,"20732":1,"20623":1,"20265":1,"21106":0,"20681":1,"20440":0,"20425":0,"20456":0,"20928":0,"20719":1,"20501":1,"20538":0,"21220":0,"20788":0,"21031":0,"21130":0,"20422":1,"20835":0,"20582":1,"20203":1,"21135":0,"20997":0,"20836":1,"20771":0,"20399":1,"20708":0,"20902":1,"20281":0,"20813":1,"20988":0,"20229":1,"20725":0,"20632":0,"20465":0,"20599":0,"20812":0,"20766":1,"20517":0,"20737":1,"20947":0,"20234":1,"21157":1,"21047":0,"20613":0,"21138":0,"21252":1,"20718":1,"20438":1,"21226":1,"20911":1,"20531":1,"20984":0,"20743":1,"20332":0,"21014":1,"21123":0,"20297":1,"20882":1,"20784":1,"20340":1,"20868":1,"20379":0,"20878":0,"21010":0,"20410":1,"20268":1,"20331":0,"20496":1,"20980":1,"20521":1,"21174":1,"21133":0,"20873":1,"20924":0,"20346":1,"21179":0,"21057":0,"20216":1,"21040":1,"20656":1,"20549":1,"20916":0,"20388":1,"20387":1,"20568":0,"20668":0,"20588":0,"20970":1,"20850":1,"21189":0,"20561":0,"20589":1,"20621":0,"21194":1,"20906":0,"20393":1,"20404":1,"20290":1,"21007":0,"20804":0,"20648":0,"20822":1,"20359":1,"20987":0,"20270":0,"20713":0,"20896":1,"21085":0,"20527":0,"20185":1,"20897":0,"20622":0,"20227":0,"21084":1,"20594":0,"21054":0,"20912":1,"20809":0,"20200":1,"21178":0,"20728":0,"20497":1,"21234":0,"20830":0,"21246":0,"20851":1,"20943":1,"21145":1,"21114":1,"20927":1,"20643":0,"20225":1,"20945":0,"21156":0,"20389":0,"20602":0,"20605":0,"20779":1,"21170":1,"20416":1,"20907":0,"20624":0,"20301":1,"20243":1,"21090":1,"20482":0,"20751":1,"20864":0,"21224":0,"20485":0,"20865":1,"20910":0,"21127":1,"20642":1,"20403":1,"20661":1,"21095":0,"20315":0,"20362":1,"20534":0,"21058":1,"21153":0,"20525":0,"20793":0,"20557":0,"20807":0,"20443":1,"20645":0,"20194":1,"20778":0,"20989":1,"20734":0,"21173":1,"20889":1,"21166":0,"21020":1,"21097":1,"20434":1,"20777":1,"20654":0,"20406":0,"20481":1,"21071":1,"20564":0,"20236":0,"20474":0,"20574":1,"20409":0,"20698":1,"20448":1,"20842":1,"20246":1,"21249":0,"20782":0,"20678":0,"20345":0,"21140":0,"21139":1,"20930":0,"20312":1,"21255":0,"20313":0,"20735":0,"20337":0,"20519":0,"21083":1,"20542":0,"20441":0,"20839":1,"20380":1,"20647":1,"20872":0,"20593":0,"20844":0,"21075":1,"20652":1,"20792":0,"20861":0,"21191":0,"20932":0,"20513":0,"20516":0,"20372":0,"21211":1,"20230":0,"20553":1,"20552":0,"20287":1,"20417":0,"20794":0,"20952":0,"21060":0,"20879":0,"20550":0,"20679":1,"20544":0,"21172":0,"21241":0,"21070":0,"21120":1,"21019":0,"20845":1,"20639":0,"20628":1,"20720":0,"20222":1,"21239":1,"20635":1,"20716":1,"20339":1,"20979":0,"20631":0,"20795":1,"20509":0,"21126":1,"20837":0,"20537":1,"20904":0,"20926":1,"20903":0,"21115":1,"20634":1,"20863":0,"20914":0,"20569":1,"20596":0,"20371":1,"20846":1,"20985":1,"20512":1,"20401":0,"21214":1,"20459":0,"21203":1,"20826":0,"20687":0,"20499":1,"20747":0,"20940":1,"20637":1,"20341":1,"20506":0,"20295":0,"20335":1,"21072":0,"20567":0,"20866":1,"21080":0,"20803":1,"21011":1,"21205":0,"20616":0,"21144":1,"21177":0,"21148":0,"20918":0,"20179":1,"20286":0,"21251":0,"20797":1,"21066":0,"20894":0,"20617":0,"20867":0,"20686":1,"21035":0,"20518":1,"21067":1,"20348":1,"20991":1,"21017":0,"20978":0,"20899":1,"20397":0,"20936":0,"20884":1,"20749":1,"20770":0,"20407":0,"20827":0,"20808":0,"20322":0,"20471":0,"20644":0,"20376":0,"21258":1,"20684":0,"21026":1,"20612":1,"21152":1,"20714":1,"21036":1,"21195":0,"20651":0,"21181":1,"21200":1,"20271":0,"20247":1,"21187":0,"20744":1,"20468":0,"21109":1,"21051":1,"21003":1,"20611":0,"20776":1,"21073":1,"20673":1,"20951":1,"20610":0,"20618":0,"20942":0,"20503":1,"20710":0,"21053":1,"20887":0,"20816":0,"20435":0,"20579":1,"20965":1,"21048":1,"20703":1,"20197":1,"20806":0,"20657":1,"20361":0,"20576":0,"20535":1,"20941":0,"20540":1,"20981":1,"20953":1,"21243":1,"20414":0,"21131":0,"20620":0,"20392":1,"20188":1,"21242":0,"20360":0,"20705":1,"20818":1,"20724":0,"21204":1,"20715":0,"20300":0,"20559":0,"20453":0,"21238":1,"20307":1,"20600":0,"20676":0,"20217":1,"20955":0,"20967":0,"20691":1,"20949":0,"20690":0,"20258":0,"20505":1,"20171":1,"20625":0,"20296":0,"20871":0,"20693":0,"20699":0,"20351":1,"21129":1,"20820":0,"21065":0,"20245":0,"20580":1,"20306":1,"20423":0,"20856":0,"20577":1,"20264":0,"20475":0,"20752":1,"21096":0,"21074":0,"21235":1,"20432":1,"20431":1,"21028":1,"21117":0,"21248":1,"20238":0,"21004":1,"21101":1,"21118":0,"20522":0,"20358":0,"20231":0,"20859":1,"20354":1,"20221":1,"20954":0,"20386":0,"20815":0,"20898":1,"21221":1,"20289":0,"20541":0,"20969":1,"20869":0,"20669":0,"20228":1,"21034":1,"20204":1,"20604":0,"20382":1,"21015":0,"21161":0,"20633":0,"20385":0,"20274":1,"20915":1,"20566":0,"20995":1,"21160":0,"21078":1,"20994":1,"20956":1,"20974":0,"20369":1,"20350":1,"20592":1,"21188":1,"20484":0,"20870":1,"20449":0,"20659":1,"21050":0,"20674":1,"20925":1,"20412":0,"20833":1,"21110":1,"21125":1,"20745":0,"20240":0,"20934":1,"21217":1,"21218":0,"20249":1,"20753":1,"20726":1,"21256":1,"21210":0,"21231":0,"20998":0,"20420":0,"20821":1,"20415":1,"21105":1,"20939":1,"20786":0,"21018":0,"20336":0,"21215":1,"21208":1,"20706":1,"21005":1,"20944":0,"20463":1,"20606":0,"20454":0,"21039":1,"20629":0,"20436":1,"20363":0,"20244":1,"20607":1,"21222":0,"21147":0,"20757":1,"20761":0,"20285":1,"20976":1,"21167":1,"20504":1,"21254":0,"21041":0,"20330":0,"20598":0,"20619":1,"21150":1,"21165":0,"21087":0,"20411":1,"21154":1,"20759":1,"21192":0,"20832":1,"20736":0,"20791":1,"20694":1,"21038":1,"20739":1,"21037":0,"20458":1,"21122":0,"20491":1,"20819":0,"21000":0,"20462":1,"21225":1,"21132":1,"20500":1,"20999":1,"20251":1,"20756":0,"21061":0,"21142":0,"21104":1,"21247":0,"20288":0,"20480":0,"20763":0,"21237":1,"20853":0,"20849":1,"20937":1,"20591":0,"20860":0,"21259":1,"20223":0,"20343":0,"21108":1,"20502":0,"20469":1,"20508":0,"21069":1,"20272":1,"20880":0,"21001":1,"20370":1,"21045":1,"21098":0,"21206":1,"20885":1,"20717":1,"21230":1,"20742":1,"21033":0,"20754":0,"20671":0,"21077":1,"20428":1,"20444":0,"20571":0,"20488":1,"20968":1,"20664":0,"20783":1,"20408":0,"20663":0,"20214":1,"21158":0,"20780":1,"21055":1,"21175":1,"20327":0,"21186":0,"20802":0,"21223":0,"20242":1,"20220":1,"20881":1,"20886":1,"20990":1,"20318":0,"20701":0,"20273":1,"20959":0,"20774":1,"21111":0,"20670":1,"20319":0,"21207":0,"20646":0,"21052":0,"20983":0,"21062":1,"20299":0,"20711":1,"20584":1,"20445":1,"21056":1,"20601":1,"20996":0,"21063":0,"20539":1,"20308":0,"20636":1,"20768":1,"20608":0,"20498":0,"20931":0,"20586":1,"20279":0,"20696":1,"20877":1,"20374":0,"20573":0,"20507":0,"20666":1}}