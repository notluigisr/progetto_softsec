{"func":{"19657":"`-FunctionDecl 0x14780df18  line:1:15 referenced invalid php_stream_temp_write 'int (int *, const char *, int)' static   |-ParmVarDecl 0x14780dd28 <col:37, col:49> col:49 invalid stream 'int *'   |-ParmVarDecl 0x14780dda8 <col:57, col:69> col:69 used buf 'const char *'   |-ParmVarDecl 0x14780de28 <col:74, col:81> col:81 invalid count 'int'   `-CompoundStmt 0x1478288b8 <line:2:1, line:26:1>     |-CallExpr 0x14780e2e8 <line:4:2, col:19> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14780e1f0 <col:2> 'int ()' Function 0x14780e138 'assert' 'int ()'     | `-BinaryOperator 0x14780e2c8 <col:9, col:15> 'int' contains-errors '!='     |   |-RecoveryExpr 0x14780e288 <col:9> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x14780e2a8 <col:15> '<dependent type>' contains-errors lvalue     |-IfStmt 0x147827ad8 <line:6:2, line:8:2>     | |-UnaryOperator 0x147827a60 <line:6:6, col:11> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x147827a48 <col:7, col:11> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x147827a00 <col:7, col:11> '<dependent type>' contains-errors lvalue ->innerstream     | |     `-RecoveryExpr 0x14780e3a0 <col:7> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x147827ac0 <col:24, line:8:2>     |   `-ReturnStmt 0x147827ab0 <line:7:3, col:11>     |     `-UnaryOperator 0x147827a98 <col:10, col:11> 'int' prefix '-'     |       `-IntegerLiteral 0x147827a78 <col:11> 'int' 1     `-IfStmt 0x147828838 <line:9:2, line:24:2>       |-CallExpr 0x147827d28 <line:9:6, col:57> '<dependent type>' contains-errors       | |-DeclRefExpr 0x147827bd8 <col:6> 'int ()' Function 0x147827b20 'php_stream_is' 'int ()'       | |-CXXDependentScopeMemberExpr 0x147827cc0 <col:20, col:24> '<dependent type>' contains-errors lvalue ->innerstream       | | `-RecoveryExpr 0x147827ca0 <col:20> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x147827d08 <col:37> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x147828810 <col:60, line:24:2>         |-UnaryExprOrTypeTraitExpr 0x147827db0 <line:10:3, col:10> 'unsigned long' contains-errors sizeof         | `-RecoveryExpr 0x147827d90 <col:10> '<dependent type>' contains-errors lvalue         |-DeclStmt 0x1478280e0 <line:11:3, col:73>         | `-VarDecl 0x147827de8 <col:3, col:72> col:9 used membuf 'char *' cinit         |   `-CallExpr 0x1478280b0 <col:18, col:72> '<dependent type>' contains-errors         |     |-DeclRefExpr 0x147827f30 <col:18> 'int ()' Function 0x147827e78 'php_stream_memory_get_buffer' 'int ()'         |     |-CXXDependentScopeMemberExpr 0x147828030 <col:47, col:51> '<dependent type>' contains-errors lvalue ->innerstream         |     | `-RecoveryExpr 0x147828010 <col:47> '<dependent type>' contains-errors lvalue         |     `-UnaryOperator 0x147828098 <col:64, col:65> '<dependent type>' contains-errors prefix '&' cannot overflow         |       `-RecoveryExpr 0x147828078 <col:65> '<dependent type>' contains-errors lvalue         `-IfStmt 0x1478287f0 <line:13:3, line:23:3>           |-RecoveryExpr 0x147828118 <line:13:7, col:30> '_Bool' contains-errors           `-CompoundStmt 0x1478287d8 <col:36, line:23:3>             `-IfStmt 0x147828478 <line:15:4, line:18:4>               |-RecoveryExpr 0x1478282a8 <line:15:8, col:16> '_Bool' contains-errors               `-CompoundStmt 0x147828460 <col:22, line:18:4>                 `-ReturnStmt 0x147828450 <line:17:5, col:12>                   `-IntegerLiteral 0x147828430 <col:12> 'int' 0 ","19411":"`-FunctionDecl 0x141928198  line:1:1 st_init_strtable 'int (void)'   `-CompoundStmt 0x141928498 <line:2:1, line:4:1>     `-ReturnStmt 0x141928488 <line:3:5, col:39>       `-CallExpr 0x141928460 <col:12, col:39> '<dependent type>' contains-errors         |-DeclRefExpr 0x1419283b0 <col:12> 'int ()' Function 0x1419282f8 'st_init_table' 'int ()'         `-UnaryOperator 0x141928448 <col:26, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow           `-RecoveryExpr 0x141928428 <col:27> '<dependent type>' contains-errors lvalue ","19389":"`-FunctionDecl 0x131140b48  line:1:12 hwsim_new_radio_nl 'int (struct sk_buff *, struct genl_info *)' static   |-ParmVarDecl 0x131128648 <col:31, col:47> col:47 msg 'struct sk_buff *'   |-ParmVarDecl 0x131140a28 <col:52, col:70> col:70 used info 'struct genl_info *'   `-CompoundStmt 0x132809710 <line:2:1, line:48:1>     |-DeclStmt 0x131140e30 <line:3:2, col:45>     | |-RecordDecl 0x131140c48 <col:2, col:9> col:9 struct hwsim_new_radio_params     | `-VarDecl 0x131140d48 <col:2, col:32> col:32 referenced invalid param 'struct hwsim_new_radio_params'     |-DeclStmt 0x131140f18 <line:4:2, col:27>     | `-VarDecl 0x131140e60 <col:2, col:23> col:14 used hwname 'const char *' cinit     |   `-RecoveryExpr 0x131140ef8 <col:23> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x131140fb0 <line:5:2, col:9>     | `-VarDecl 0x131140f48 <col:2, col:6> col:6 used ret 'int'     |-BinaryOperator 0x1311412c0 <line:9:2, col:19> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x131141220 <col:2, col:8> '<dependent type>' contains-errors lvalue .channels     | | `-RecoveryExpr 0x1311411f8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1311411d8 <col:2> 'struct hwsim_new_radio_params' lvalue Var 0x131140d48 'param' 'struct hwsim_new_radio_params'     | `-RecoveryExpr 0x1311412a0 <col:19> '<dependent type>' contains-errors lvalue     |-IfStmt 0x131141858 <line:16:2, line:17:18>     | |-RecoveryExpr 0x131141730 <line:16:6, col:35> '_Bool' contains-errors     | `-BinaryOperator 0x131141838 <line:17:3, col:18> '<dependent type>' contains-errors '='     |   |-CXXDependentScopeMemberExpr 0x131141798 <col:3, col:9> '<dependent type>' contains-errors lvalue .no_vif     |   | `-RecoveryExpr 0x131141770 <col:3> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x131141750 <col:3> 'struct hwsim_new_radio_params' lvalue Var 0x131140d48 'param' 'struct hwsim_new_radio_params'     |   `-RecoveryExpr 0x131141818 <col:18> '<dependent type>' contains-errors lvalue     |-IfStmt 0x132808c88 <line:19:2, line:26:2>     | |-RecoveryExpr 0x1311418f0 <line:19:6, col:39> '_Bool' contains-errors     | `-CompoundStmt 0x132808c70 <col:42, line:26:2>     |   `-BinaryOperator 0x132808c50 <line:25:3, col:18> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x132808be8 <col:3, col:9> '<dependent type>' contains-errors lvalue .hwname     |     | `-RecoveryExpr 0x132808bc0 <col:3> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x132808ba0 <col:3> 'struct hwsim_new_radio_params' lvalue Var 0x131140d48 'param' 'struct hwsim_new_radio_params'     |     `-DeclRefExpr 0x132808c30 <col:18> 'const char *' contains-errors lvalue Var 0x131140e60 'hwname' 'const char *'     |-IfStmt 0x132808f38 <line:28:2, line:31:42> has_else     | |-RecoveryExpr 0x132808d08 <line:28:6, col:40> '_Bool' contains-errors     | |-NullStmt 0x132808f30 <line:29:3>     | `-BinaryOperator 0x132808f10 <line:31:3, col:42> '<dependent type>' contains-errors '='     |   |-CXXDependentScopeMemberExpr 0x132808e00 <col:3, col:9> '<dependent type>' contains-errors lvalue .use_chanctx     |   | `-RecoveryExpr 0x132808dd8 <col:3> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x132808db8 <col:3> 'struct hwsim_new_radio_params' lvalue Var 0x131140d48 'param' 'struct hwsim_new_radio_params'     |   `-ParenExpr 0x132808ef0 <col:23, col:42> 'int' contains-errors     |     `-BinaryOperator 0x132808ed0 <col:24, col:41> 'int' contains-errors '>'     |       |-CXXDependentScopeMemberExpr 0x132808e68 <col:24, col:30> '<dependent type>' contains-errors lvalue .channels     |       | `-RecoveryExpr 0x132808e48 <col:24> '<dependent type>' contains-errors lvalue     |       `-IntegerLiteral 0x132808eb0 <col:41> 'int' 1     |-IfStmt 0x132809338 <line:37:2, line:43:2>     | |-RecoveryExpr 0x132809158 <line:37:6, col:43> '_Bool' contains-errors     | `-CompoundStmt 0x132809328 <col:46, line:43:2>     |-BinaryOperator 0x132809500 <line:45:2, col:45> 'int' contains-errors '='     | |-DeclRefExpr 0x132809358 <col:2> 'int' lvalue Var 0x131140f48 'ret' 'int'     | `-CallExpr 0x1328094d0 <col:8, col:45> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x132809458 <col:8> 'int ()' Function 0x1328093a0 'mac80211_hwsim_new_radio' 'int ()'     |   |-DeclRefExpr 0x132809478 <col:33> 'struct genl_info *' lvalue ParmVar 0x131140a28 'info' 'struct genl_info *'     |   `-UnaryOperator 0x1328094b8 <col:39, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x132809498 <col:40> '<dependent type>' contains-errors lvalue     |-CallExpr 0x132809688 <line:46:2, col:14> 'int' contains-errors     | |-ImplicitCastExpr 0x132809670 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x132809600 <col:2> 'int ()' Function 0x132809548 'kfree' 'int ()'     | `-ImplicitCastExpr 0x1328096b0 <col:8> 'const char *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x132809620 <col:8> 'const char *' contains-errors lvalue Var 0x131140e60 'hwname' 'const char *'     `-ReturnStmt 0x132809700 <line:47:2, col:9>       `-ImplicitCastExpr 0x1328096e8 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x1328096c8 <col:9> 'int' lvalue Var 0x131140f48 'ret' 'int' ","19295":"`-FunctionDecl 0x15900de38  line:1:1 trigger_cmd_autocmd 'int (int, int)'   |-ParmVarDecl 0x15900dcd8 <col:21, col:25> col:25 used typechar 'int'   |-ParmVarDecl 0x15900dd58 <col:35, col:39> col:39 used evt 'int'   `-CompoundStmt 0x159028160 <line:2:1, line:8:1>     |-DeclStmt 0x15900e058 <line:3:5, col:22>     | `-VarDecl 0x15900dff0 <col:5, col:21> col:12 used typestr 'char[2]'     |-BinaryOperator 0x15900e138 <line:5:5, col:18> 'char' '='     | |-ArraySubscriptExpr 0x15900e0c8 <col:5, col:14> 'char' lvalue     | | |-ImplicitCastExpr 0x15900e0b0 <col:5> 'char *' <ArrayToPointerDecay>     | | | `-DeclRefExpr 0x15900e070 <col:5> 'char[2]' lvalue Var 0x15900dff0 'typestr' 'char[2]'     | | `-IntegerLiteral 0x15900e090 <col:13> 'int' 0     | `-ImplicitCastExpr 0x15900e120 <col:18> 'char' <IntegralCast>     |   `-ImplicitCastExpr 0x15900e108 <col:18> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x15900e0e8 <col:18> 'int' lvalue ParmVar 0x15900dcd8 'typechar' 'int'     |-BinaryOperator 0x15900e298 <line:6:5, col:18> 'char' contains-errors '='     | |-ArraySubscriptExpr 0x15900e258 <col:5, col:14> 'char' lvalue     | | |-ImplicitCastExpr 0x15900e240 <col:5> 'char *' <ArrayToPointerDecay>     | | | `-DeclRefExpr 0x15900e158 <col:5> 'char[2]' lvalue Var 0x15900dff0 'typestr' 'char[2]'     | | `-IntegerLiteral 0x15900e178 <col:13> 'int' 1     | `-RecoveryExpr 0x15900e278 <col:18> '<dependent type>' contains-errors lvalue     `-CallExpr 0x159028118 <line:7:5, col:56> '<dependent type>' contains-errors       |-DeclRefExpr 0x15900e3d0 <col:5> 'int ()' Function 0x15900e318 'apply_autocmds' 'int ()'       |-DeclRefExpr 0x159028000 <col:20> 'int' lvalue ParmVar 0x15900dd58 'evt' 'int'       |-DeclRefExpr 0x159028020 <col:25> 'char[2]' lvalue Var 0x15900dff0 'typestr' 'char[2]'       |-DeclRefExpr 0x159028040 <col:34> 'char[2]' lvalue Var 0x15900dff0 'typestr' 'char[2]'       |-RecoveryExpr 0x1590280d8 <col:43> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x1590280f8 <col:50> '<dependent type>' contains-errors lvalue ","20048":"`-FunctionDecl 0x14e00de88  line:1:1 str2special 'int (char **, int)'   |-ParmVarDecl 0x14e00dd28 <line:2:5, col:14> col:14 used sp 'char **'   |-ParmVarDecl 0x14e00dda8 <line:3:5, col:10> col:10 used from 'int'   `-CompoundStmt 0x14e02bb58 <line:4:1, line:66:1>     |-DeclStmt 0x14e00e008 <line:5:5, col:12>     | `-VarDecl 0x14e00dfa0 <col:5, col:11> col:11 used c 'int'     |-DeclStmt 0x14e00e128 <line:6:5, col:25>     | `-VarDecl 0x14e00e0c0 <col:5, col:24> col:19 used buf 'char[7]' static     |-DeclStmt 0x14e00e228 <line:7:5, col:23>     | `-VarDecl 0x14e00e158 <col:5, col:21> col:14 used str 'char *' cinit     |   `-ImplicitCastExpr 0x14e00e210 <col:20, col:21> 'char *' <LValueToRValue>     |     `-UnaryOperator 0x14e00e1f8 <col:20, col:21> 'char *' lvalue prefix '*' cannot overflow     |       `-ImplicitCastExpr 0x14e00e1e0 <col:21> 'char **' <LValueToRValue>     |         `-DeclRefExpr 0x14e00e1c0 <col:21> 'char **' lvalue ParmVar 0x14e00dd28 'sp' 'char **'     |-DeclStmt 0x14e00e2e0 <line:8:5, col:24>     | `-VarDecl 0x14e00e258 <col:5, col:23> col:11 used modifiers 'int' cinit     |   `-IntegerLiteral 0x14e00e2c0 <col:23> 'int' 0     |-DeclStmt 0x14e00e3b0 <line:9:5, col:26>     | `-VarDecl 0x14e00e310 <col:5, col:21> col:11 used special 'int' cinit     |   `-RecoveryExpr 0x14e00e390 <col:21> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14e026e30 <line:11:5, line:20:5>     | |-RecoveryExpr 0x14e00e3e0 <line:11:9> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14e026e08 <line:12:5, line:20:5>     |   |-DeclStmt 0x14e026680 <line:13:2, col:11>     |   | `-VarDecl 0x14e026618 <col:2, col:10> col:10 used p 'char *'     |   |-BinaryOperator 0x14e026cd0 <line:17:2, col:20> 'char *' '='     |   | |-DeclRefExpr 0x14e026698 <col:2> 'char *' lvalue Var 0x14e026618 'p' 'char *'     |   | `-ImplicitCastExpr 0x14e026898 <col:6, col:20> 'char *' <IntegralToPointer>     |   |   `-CallExpr 0x14e026858 <col:6, col:20> 'int'     |   |     |-ImplicitCastExpr 0x14e026840 <col:6> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x14e0267d0 <col:6> 'int ()' Function 0x14e026718 'mb_unescape' 'int ()'     |   |     `-ImplicitCastExpr 0x14e026880 <col:18> 'char **' <LValueToRValue>     |   |       `-DeclRefExpr 0x14e0267f0 <col:18> 'char **' lvalue ParmVar 0x14e00dd28 'sp' 'char **'     |   `-IfStmt 0x14e026de8 <line:18:2, line:19:13>     |     |-BinaryOperator 0x14e026d68 <line:18:6, col:11> 'int' contains-errors '!='     |     | |-DeclRefExpr 0x14e026cf0 <col:6> 'char *' lvalue Var 0x14e026618 'p' 'char *'     |     | `-RecoveryExpr 0x14e026d48 <col:11> '<dependent type>' contains-errors lvalue     |     `-ReturnStmt 0x14e026dd8 <line:19:6, col:13>     |       `-ImplicitCastExpr 0x14e026dc0 <col:13> 'int' <PointerToIntegral>     |         `-ImplicitCastExpr 0x14e026da8 <col:13> 'char *' <LValueToRValue>     |           `-DeclRefExpr 0x14e026d88 <col:13> 'char *' lvalue Var 0x14e026618 'p' 'char *'     |-BinaryOperator 0x14e026ef0 <line:22:5, col:10> 'int' '='     | |-DeclRefExpr 0x14e026e50 <col:5> 'int' lvalue Var 0x14e00dfa0 'c' 'int'     | `-ImplicitCastExpr 0x14e026ed8 <col:9, col:10> 'int' <IntegralCast>     |   `-ImplicitCastExpr 0x14e026ec0 <col:9, col:10> 'char' <LValueToRValue>     |     `-UnaryOperator 0x14e026ea8 <col:9, col:10> 'char' lvalue prefix '*' cannot overflow     |       `-ImplicitCastExpr 0x14e026e90 <col:10> 'char *' <LValueToRValue>     |         `-DeclRefExpr 0x14e026e70 <col:10> 'char *' lvalue Var 0x14e00e158 'str' 'char *'     |-IfStmt 0x14e029f48 <line:23:5, line:38:5>     | |-BinaryOperator 0x14e027258 <line:23:9, col:54> 'int' contains-errors '&&'     | | |-BinaryOperator 0x14e0271c0 <col:9, col:37> 'int' contains-errors '&&'     | | | |-BinaryOperator 0x14e027128 <col:9, col:14> 'int' contains-errors '=='     | | | | |-DeclRefExpr 0x14e026f10 <col:9> 'int' lvalue Var 0x14e00dfa0 'c' 'int'     | | | | `-RecoveryExpr 0x14e027108 <col:14> '<dependent type>' contains-errors lvalue     | | | `-BinaryOperator 0x14e0271a0 <col:27, col:37> 'int' contains-errors '!='     | | |   |-ArraySubscriptExpr 0x14e027160 <col:27, col:32> 'char' lvalue     | | |   | |-ImplicitCastExpr 0x14e027148 <col:27> 'char *' <LValueToRValue>     | | |   | | `-DeclRefExpr 0x14e026f68 <col:27> 'char *' lvalue Var 0x14e00e158 'str' 'char *'     | | |   | `-IntegerLiteral 0x14e026f88 <col:31> 'int' 1     | | |   `-RecoveryExpr 0x14e027180 <col:37> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x14e027238 <col:44, col:54> 'int' contains-errors '!='     | |   |-ArraySubscriptExpr 0x14e0271f8 <col:44, col:49> 'char' lvalue     | |   | |-ImplicitCastExpr 0x14e0271e0 <col:44> 'char *' <LValueToRValue>     | |   | | `-DeclRefExpr 0x14e027038 <col:44> 'char *' lvalue Var 0x14e00e158 'str' 'char *'     | |   | `-IntegerLiteral 0x14e027058 <col:48> 'int' 2     | |   `-RecoveryExpr 0x14e027218 <col:54> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14e029f28 <line:24:5, line:38:5>     |   |-IfStmt 0x14e029628 <line:25:2, line:30:2>     |   | |-BinaryOperator 0x14e0273b8 <line:25:6, col:16> 'int' contains-errors '=='     |   | | |-ArraySubscriptExpr 0x14e027378 <col:6, col:11> 'char' lvalue     |   | | | |-ImplicitCastExpr 0x14e027360 <col:6> 'char *' <LValueToRValue>     |   | | | | `-DeclRefExpr 0x14e027278 <col:6> 'char *' lvalue Var 0x14e00e158 'str' 'char *'     |   | | | `-IntegerLiteral 0x14e027298 <col:10> 'int' 1     |   | | `-RecoveryExpr 0x14e027398 <col:16> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x14e029600 <line:26:2, line:30:2>     |   |   |-BinaryOperator 0x14e0274a0 <line:27:6, col:23> 'int' '='     |   |   | |-DeclRefExpr 0x14e0273d8 <col:6> 'int' lvalue Var 0x14e00e258 'modifiers' 'int'     |   |   | `-ImplicitCastExpr 0x14e027488 <col:18, col:23> 'int' <IntegralCast>     |   |   |   `-ImplicitCastExpr 0x14e027470 <col:18, col:23> 'char' <LValueToRValue>     |   |   |     `-ArraySubscriptExpr 0x14e027450 <col:18, col:23> 'char' lvalue     |   |   |       |-ImplicitCastExpr 0x14e027438 <col:18> 'char *' <LValueToRValue>     |   |   |       | `-DeclRefExpr 0x14e0273f8 <col:18> 'char *' lvalue Var 0x14e00e158 'str' 'char *'     |   |   |       `-IntegerLiteral 0x14e027418 <col:22> 'int' 2     |   |   |-CompoundAssignOperator 0x14e027500 <line:28:6, col:13> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'     |   |   | |-DeclRefExpr 0x14e0274c0 <col:6> 'char *' lvalue Var 0x14e00e158 'str' 'char *'     |   |   | `-IntegerLiteral 0x14e0274e0 <col:13> 'int' 3     |   |   `-BinaryOperator 0x14e0275d0 <line:29:6, col:11> 'int' '='     |   |     |-DeclRefExpr 0x14e027530 <col:6> 'int' lvalue Var 0x14e00dfa0 'c' 'int'     |   |     `-ImplicitCastExpr 0x14e0275b8 <col:10, col:11> 'int' <IntegralCast>     |   |       `-ImplicitCastExpr 0x14e0275a0 <col:10, col:11> 'char' <LValueToRValue>     |   |         `-UnaryOperator 0x14e027588 <col:10, col:11> 'char' lvalue prefix '*' cannot overflow     |   |           `-ImplicitCastExpr 0x14e027570 <col:11> 'char *' <LValueToRValue>     |   |             `-DeclRefExpr 0x14e027550 <col:11> 'char *' lvalue Var 0x14e00e158 'str' 'char *'     |   `-IfStmt 0x14e029d18 <line:31:2, line:35:2>     |     |-BinaryOperator 0x14e029990 <line:31:6, col:51> 'int' contains-errors '&&'     |     | |-BinaryOperator 0x14e0298f8 <col:6, col:34> 'int' contains-errors '&&'     |     | | |-BinaryOperator 0x14e029860 <col:6, col:11> 'int' contains-errors '=='     |     | | | |-DeclRefExpr 0x14e029648 <col:6> 'int' lvalue Var 0x14e00dfa0 'c' 'int'     |     | | | `-RecoveryExpr 0x14e029840 <col:11> '<dependent type>' contains-errors lvalue     |     | | `-BinaryOperator 0x14e0298d8 <col:24, col:34> 'int' contains-errors '!='     |     | |   |-ArraySubscriptExpr 0x14e029898 <col:24, col:29> 'char' lvalue     |     | |   | |-ImplicitCastExpr 0x14e029880 <col:24> 'char *' <LValueToRValue>     |     | |   | | `-DeclRefExpr 0x14e0296a0 <col:24> 'char *' lvalue Var 0x14e00e158 'str' 'char *'     |     | |   | `-IntegerLiteral 0x14e0296c0 <col:28> 'int' 1     |     | |   `-RecoveryExpr 0x14e0298b8 <col:34> '<dependent type>' contains-errors lvalue     |     | `-BinaryOperator 0x14e029970 <col:41, col:51> 'int' contains-errors '!='     |     |   |-ArraySubscriptExpr 0x14e029930 <col:41, col:46> 'char' lvalue     |     |   | |-ImplicitCastExpr 0x14e029918 <col:41> 'char *' <LValueToRValue>     |     |   | | `-DeclRefExpr 0x14e029770 <col:41> 'char *' lvalue Var 0x14e00e158 'str' 'char *'     |     |   | `-IntegerLiteral 0x14e029790 <col:45> 'int' 2     |     |   `-RecoveryExpr 0x14e029950 <col:51> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x14e029cf8 <line:32:2, line:35:2>     |       |-BinaryOperator 0x14e029c68 <line:33:6, col:35> 'int' '='     |       | |-DeclRefExpr 0x14e0299b0 <col:6> 'int' lvalue Var 0x14e00dfa0 'c' 'int'     |       | `-CallExpr 0x14e029bd8 <col:10, col:35> 'int'     |       |   |-ImplicitCastExpr 0x14e029bc0 <col:10> 'int (*)()' <FunctionToPointerDecay>     |       |   | `-DeclRefExpr 0x14e029ab0 <col:10> 'int ()' Function 0x14e0299f8 'TO_SPECIAL' 'int ()'     |       |   |-ImplicitCastExpr 0x14e029c20 <col:21, col:26> 'int' <IntegralCast>     |       |   | `-ImplicitCastExpr 0x14e029c08 <col:21, col:26> 'char' <LValueToRValue>     |       |   |   `-ArraySubscriptExpr 0x14e029b28 <col:21, col:26> 'char' lvalue     |       |   |     |-ImplicitCastExpr 0x14e029b10 <col:21> 'char *' <LValueToRValue>     |       |   |     | `-DeclRefExpr 0x14e029ad0 <col:21> 'char *' lvalue Var 0x14e00e158 'str' 'char *'     |       |   |     `-IntegerLiteral 0x14e029af0 <col:25> 'int' 1     |       |   `-ImplicitCastExpr 0x14e029c50 <col:29, col:34> 'int' <IntegralCast>     |       |     `-ImplicitCastExpr 0x14e029c38 <col:29, col:34> 'char' <LValueToRValue>     |       |       `-ArraySubscriptExpr 0x14e029ba0 <col:29, col:34> 'char' lvalue     |       |         |-ImplicitCastExpr 0x14e029b88 <col:29> 'char *' <LValueToRValue>     |       |         | `-DeclRefExpr 0x14e029b48 <col:29> 'char *' lvalue Var 0x14e00e158 'str' 'char *'     |       |         `-IntegerLiteral 0x14e029b68 <col:33> 'int' 2     |       `-CompoundAssignOperator 0x14e029cc8 <line:34:6, col:13> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'     |         |-DeclRefExpr 0x14e029c88 <col:6> 'char *' lvalue Var 0x14e00e158 'str' 'char *'     |         `-IntegerLiteral 0x14e029ca8 <col:13> 'int' 2     |-IfStmt 0x14e02a598 <line:40:5, line:57:14> has_else     | |-RecoveryExpr 0x14e02a1d0 <line:40:9, col:57> '_Bool' contains-errors     | |-CompoundStmt 0x14e02a490 <line:41:5, line:54:5>     | | |-BinaryOperator 0x14e02a278 <line:44:2, col:8> 'char *' '='     | | | |-UnaryOperator 0x14e02a228 <col:2, col:3> 'char *' lvalue prefix '*' cannot overflow     | | | | `-ImplicitCastExpr 0x14e02a210 <col:3> 'char **' <LValueToRValue>     | | | |   `-DeclRefExpr 0x14e02a1f0 <col:3> 'char **' lvalue ParmVar 0x14e00dd28 'sp' 'char **'     | | | `-ImplicitCastExpr 0x14e02a260 <col:8> 'char *' <LValueToRValue>     | | |   `-DeclRefExpr 0x14e02a240 <col:8> 'char *' lvalue Var 0x14e00e158 'str' 'char *'     | | `-IfStmt 0x14e02a460 <line:47:2, line:53:18> has_else     | |   |-RecoveryExpr 0x14e02a330 <line:47:6, col:11> '_Bool' contains-errors     | |   |-NullStmt 0x14e02a458 <line:50:6>     | |   `-BinaryOperator 0x14e02a438 <line:53:6, col:18> 'char *' '='     | |     |-UnaryOperator 0x14e02a3a8 <col:6, col:7> 'char *' lvalue prefix '*' cannot overflow     | |     | `-ImplicitCastExpr 0x14e02a390 <col:7> 'char **' <LValueToRValue>     | |     |   `-DeclRefExpr 0x14e02a370 <col:7> 'char **' lvalue ParmVar 0x14e00dd28 'sp' 'char **'     | |     `-BinaryOperator 0x14e02a418 <col:12, col:18> 'char *' '+'     | |       |-ImplicitCastExpr 0x14e02a400 <col:12> 'char *' <LValueToRValue>     | |       | `-DeclRefExpr 0x14e02a3c0 <col:12> 'char *' lvalue Var 0x14e00e158 'str' 'char *'     | |       `-IntegerLiteral 0x14e02a3e0 <col:18> 'int' 1     | `-BinaryOperator 0x14e02a578 <line:57:2, col:14> 'char *' '='     |   |-UnaryOperator 0x14e02a4e8 <col:2, col:3> 'char *' lvalue prefix '*' cannot overflow     |   | `-ImplicitCastExpr 0x14e02a4d0 <col:3> 'char **' <LValueToRValue>     |   |   `-DeclRefExpr 0x14e02a4b0 <col:3> 'char **' lvalue ParmVar 0x14e00dd28 'sp' 'char **'     |   `-BinaryOperator 0x14e02a558 <col:8, col:14> 'char *' '+'     |     |-ImplicitCastExpr 0x14e02a540 <col:8> 'char *' <LValueToRValue>     |     | `-DeclRefExpr 0x14e02a500 <col:8> 'char *' lvalue Var 0x14e00e158 'str' 'char *'     |     `-IntegerLiteral 0x14e02a520 <col:14> 'int' 1     |-IfStmt 0x14e02b978 <line:61:5, line:62:42>     | |-BinaryOperator 0x14e02b790 <line:61:9, col:48> 'int' contains-errors '||'     | | |-BinaryOperator 0x14e02b688 <col:9, col:24> 'int' contains-errors '||'     | | | |-ImplicitCastExpr 0x14e02b670 <col:9> 'int' contains-errors <LValueToRValue>     | | | | `-DeclRefExpr 0x14e02a5c8 <col:9> 'int' contains-errors lvalue Var 0x14e00e310 'special' 'int'     | | | `-BinaryOperator 0x14e02b650 <col:20, col:24> 'int' '<'     | | |   |-ImplicitCastExpr 0x14e02b638 <col:20> 'int' <LValueToRValue>     | | |   | `-DeclRefExpr 0x14e02b600 <col:20> 'int' lvalue Var 0x14e00dfa0 'c' 'int'     | | |   `-CharacterLiteral 0x14e02b620 <col:24> 'int' 32     | | `-ParenExpr 0x14e02b770 <col:31, col:48> 'int'     | |   `-BinaryOperator 0x14e02b750 <col:32, col:45> 'int' '&&'     | |     |-ImplicitCastExpr 0x14e02b738 <col:32> 'int' <LValueToRValue>     | |     | `-DeclRefExpr 0x14e02b6a8 <col:32> 'int' lvalue ParmVar 0x14e00dda8 'from' 'int'     | |     `-BinaryOperator 0x14e02b718 <col:40, col:45> 'int' '=='     | |       |-ImplicitCastExpr 0x14e02b700 <col:40> 'int' <LValueToRValue>     | |       | `-DeclRefExpr 0x14e02b6c8 <col:40> 'int' lvalue Var 0x14e00dfa0 'c' 'int'     | |       `-CharacterLiteral 0x14e02b6e8 <col:45> 'int' 32     | `-ReturnStmt 0x14e02b968 <line:62:2, col:42>     |   `-CallExpr 0x14e02b908 <col:9, col:42> 'int'     |     |-ImplicitCastExpr 0x14e02b8f0 <col:9> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14e02b890 <col:9> 'int ()' Function 0x14e02b7d8 'get_special_key_name' 'int ()'     |     |-ImplicitCastExpr 0x14e02b938 <col:30> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x14e02b8b0 <col:30> 'int' lvalue Var 0x14e00dfa0 'c' 'int'     |     `-ImplicitCastExpr 0x14e02b950 <col:33> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x14e02b8d0 <col:33> 'int' lvalue Var 0x14e00e258 'modifiers' 'int'     |-BinaryOperator 0x14e02ba60 <line:63:5, col:14> 'char' '='     | |-ArraySubscriptExpr 0x14e02b9f0 <col:5, col:10> 'char' lvalue     | | |-ImplicitCastExpr 0x14e02b9d8 <col:5> 'char *' <ArrayToPointerDecay>     | | | `-DeclRefExpr 0x14e02b998 <col:5> 'char[7]' lvalue Var 0x14e00e0c0 'buf' 'char[7]'     | | `-IntegerLiteral 0x14e02b9b8 <col:9> 'int' 0     | `-ImplicitCastExpr 0x14e02ba48 <col:14> 'char' <IntegralCast>     |   `-ImplicitCastExpr 0x14e02ba30 <col:14> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x14e02ba10 <col:14> 'int' lvalue Var 0x14e00dfa0 'c' 'int'     `-ReturnStmt 0x14e02bb48 <line:65:5, col:12>       `-ImplicitCastExpr 0x14e02bb30 <col:12> 'int' <PointerToIntegral>         `-ImplicitCastExpr 0x14e02bb18 <col:12> 'char *' <ArrayToPointerDecay>           `-DeclRefExpr 0x14e02baf8 <col:12> 'char[7]' lvalue Var 0x14e00e0c0 'buf' 'char[7]' ","19447":"`-FunctionDecl 0x14d9283a8  line:1:8 invalid vterm_new_with_allocator 'int *(int, int, int *, void *)'   |-ParmVarDecl 0x14d9280f0 <col:33, col:37> col:37 used rows 'int'   |-ParmVarDecl 0x14d928170 <col:43, col:47> col:47 used cols 'int'   |-ParmVarDecl 0x14d928228 <col:53, col:78> col:78 invalid funcs 'int *'   |-ParmVarDecl 0x14d9282a8 <col:85, col:91> col:91 used allocdata 'void *'   `-CompoundStmt 0x14f008950 <line:2:1, line:26:1> ","19536":"`-FunctionDecl 0x12d945148  line:1:12 __key_instantiate_and_link 'int (struct key *, struct key_preparsed_payload *, struct key *, struct key *, struct assoc_array_edit **)' static   |-ParmVarDecl 0x12d928648 <col:39, col:51> col:51 used key 'struct key *'   |-ParmVarDecl 0x12d944c28 <line:2:11, col:41> col:41 used prep 'struct key_preparsed_payload *'   |-ParmVarDecl 0x12d944d18 <line:3:11, col:23> col:23 used keyring 'struct key *'   |-ParmVarDecl 0x12d944da8 <line:4:11, col:23> col:23 used authkey 'struct key *'   |-ParmVarDecl 0x12d944fd8 <line:5:11, col:37> col:37 used _edit 'struct assoc_array_edit **'   `-CompoundStmt 0x12e808d08 <line:6:1, line:56:1>     |-DeclStmt 0x12d945378 <line:7:2, col:17>     | |-VarDecl 0x12d945278 <col:2, col:6> col:6 used ret 'int'     | `-VarDecl 0x12d9452f8 <col:2, col:11> col:11 used awaken 'int'     |-CallExpr 0x12d945548 <line:9:2, col:15> 'int'     | |-ImplicitCastExpr 0x12d945530 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12d9454c0 <col:2> 'int ()' Function 0x12d945408 'key_check' 'int ()'     | `-ImplicitCastExpr 0x12d945570 <col:12> 'struct key *' <LValueToRValue>     |   `-DeclRefExpr 0x12d9454e0 <col:12> 'struct key *' lvalue ParmVar 0x12d928648 'key' 'struct key *'     |-CallExpr 0x12d9455e0 <line:10:2, col:19> 'int'     | |-ImplicitCastExpr 0x12d9455c8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12d945588 <col:2> 'int ()' Function 0x12d945408 'key_check' 'int ()'     | `-ImplicitCastExpr 0x12d945608 <col:12> 'struct key *' <LValueToRValue>     |   `-DeclRefExpr 0x12d9455a8 <col:12> 'struct key *' lvalue ParmVar 0x12d944d18 'keyring' 'struct key *'     |-BinaryOperator 0x12d945660 <line:12:2, col:11> 'int' '='     | |-DeclRefExpr 0x12d945620 <col:2> 'int' lvalue Var 0x12d9452f8 'awaken' 'int'     | `-IntegerLiteral 0x12d945640 <col:11> 'int' 0     |-BinaryOperator 0x12d945758 <line:13:2, col:9> 'int' contains-errors '='     | |-DeclRefExpr 0x12d945680 <col:2> 'int' lvalue Var 0x12d945278 'ret' 'int'     | `-UnaryOperator 0x12d945740 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow     |   `-ImplicitCastExpr 0x12d945728 <col:9> '<dependent type>' contains-errors <LValueToRValue>     |     `-RecoveryExpr 0x12d945708 <col:9> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12d945908 <line:15:2, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d945858 <col:2> 'int ()' Function 0x12d9457a0 'mutex_lock' 'int ()'     | `-UnaryOperator 0x12d9458f0 <col:13, col:14> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12d9458d0 <col:14> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12e8089f0 <line:18:2, line:47:2>     | |-UnaryOperator 0x12d945b58 <line:18:6, col:50> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x12d945b28 <col:7, col:50> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12d945a10 <col:7> 'int ()' Function 0x12d945958 'test_bit' 'int ()'     | |   |-RecoveryExpr 0x12d945b08 <col:16> '<dependent type>' contains-errors lvalue     | |   `-UnaryOperator 0x12d945aa8 <col:39, col:45> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-RecoveryExpr 0x12d945a80 <col:40, col:45> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x12d945a48 <col:40> 'struct key *' lvalue ParmVar 0x12d928648 'key' 'struct key *'     | `-CompoundStmt 0x12e8089d0 <col:53, line:47:2>     |   |-BinaryOperator 0x12d9470b8 <line:20:3, col:41> 'int' contains-errors '='     |   | |-DeclRefExpr 0x12d945b70 <col:3> 'int' lvalue Var 0x12d945278 'ret' 'int'     |   | `-CallExpr 0x12d947088 <col:9, col:41> '<dependent type>' contains-errors     |   |   |-CXXDependentScopeMemberExpr 0x12d947000 <col:9, col:20> '<dependent type>' contains-errors lvalue ->instantiate     |   |   | `-RecoveryExpr 0x12d945bc8 <col:9, col:14> '<dependent type>' contains-errors lvalue     |   |   |   `-DeclRefExpr 0x12d945b90 <col:9> 'struct key *' lvalue ParmVar 0x12d928648 'key' 'struct key *'     |   |   |-DeclRefExpr 0x12d947048 <col:32> 'struct key *' lvalue ParmVar 0x12d928648 'key' 'struct key *'     |   |   `-DeclRefExpr 0x12d947068 <col:37> 'struct key_preparsed_payload *' lvalue ParmVar 0x12d944c28 'prep' 'struct key_preparsed_payload *'     |   `-IfStmt 0x12e8089b0 <line:22:3, line:46:3>     |     |-BinaryOperator 0x12d947130 <line:22:7, col:14> 'int' '=='     |     | |-ImplicitCastExpr 0x12d947118 <col:7> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x12d9470d8 <col:7> 'int' lvalue Var 0x12d945278 'ret' 'int'     |     | `-IntegerLiteral 0x12d9470f8 <col:14> 'int' 0     |     `-CompoundStmt 0x12e808970 <col:17, line:46:3>     |       |-CallExpr 0x12d947310 <line:24:4, col:33> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x12d947230 <col:4> 'int ()' Function 0x12d947178 'atomic_inc' 'int ()'     |       | `-UnaryOperator 0x12d9472f8 <col:15, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |       |   `-CXXDependentScopeMemberExpr 0x12d9472b0 <col:16, col:27> '<dependent type>' contains-errors lvalue ->nikeys     |       |     `-RecoveryExpr 0x12d947288 <col:16, col:21> '<dependent type>' contains-errors lvalue     |       |       `-DeclRefExpr 0x12d947250 <col:16> 'struct key *' lvalue ParmVar 0x12d928648 'key' 'struct key *'     |       |-CallExpr 0x12d947518 <line:25:4, col:46> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x12d947418 <col:4> 'int ()' Function 0x12d947360 'set_bit' 'int ()'     |       | |-RecoveryExpr 0x12d9474f8 <col:12> '<dependent type>' contains-errors lvalue     |       | `-UnaryOperator 0x12d9474b0 <col:35, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow     |       |   `-RecoveryExpr 0x12d947488 <col:36, col:41> '<dependent type>' contains-errors lvalue     |       |     `-DeclRefExpr 0x12d947450 <col:36> 'struct key *' lvalue ParmVar 0x12d928648 'key' 'struct key *'     |       |-IfStmt 0x12d9477b8 <line:27:4, line:28:14>     |       | |-CallExpr 0x12d947728 <line:27:8, col:63> '<dependent type>' contains-errors     |       | | |-DeclRefExpr 0x12d947628 <col:8> 'int ()' Function 0x12d947570 'test_and_clear_bit' 'int ()'     |       | | |-RecoveryExpr 0x12d947708 <col:27> '<dependent type>' contains-errors lvalue     |       | | `-UnaryOperator 0x12d9476c0 <col:52, col:58> '<dependent type>' contains-errors prefix '&' cannot overflow     |       | |   `-RecoveryExpr 0x12d947698 <col:53, col:58> '<dependent type>' contains-errors lvalue     |       | |     `-DeclRefExpr 0x12d947660 <col:53> 'struct key *' lvalue ParmVar 0x12d928648 'key' 'struct key *'     |       | `-BinaryOperator 0x12d947798 <line:28:5, col:14> 'int' '='     |       |   |-DeclRefExpr 0x12d947758 <col:5> 'int' lvalue Var 0x12d9452f8 'awaken' 'int'     |       |   `-IntegerLiteral 0x12d947778 <col:14> 'int' 1     |       |-IfStmt 0x12d947c68 <line:31:4, line:36:4>     |       | |-ImplicitCastExpr 0x12d9477f8 <line:31:8> 'struct key *' <LValueToRValue>     |       | | `-DeclRefExpr 0x12d9477d8 <col:8> 'struct key *' lvalue ParmVar 0x12d944d18 'keyring' 'struct key *'     |       | `-CompoundStmt 0x12d947c48 <col:17, line:36:4>     |       |   |-IfStmt 0x12d947a70 <line:32:5, line:33:40>     |       |   | |-CallExpr 0x12d947910 <line:32:9, col:48> '<dependent type>' contains-errors     |       |   | | |-DeclRefExpr 0x12d947810 <col:9> 'int ()' Function 0x12d945958 'test_bit' 'int ()'     |       |   | | |-RecoveryExpr 0x12d9478f0 <col:18> '<dependent type>' contains-errors lvalue     |       |   | | `-UnaryOperator 0x12d9478a8 <col:33, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow     |       |   | |   `-RecoveryExpr 0x12d947880 <col:34, col:43> '<dependent type>' contains-errors lvalue     |       |   | |     `-DeclRefExpr 0x12d947848 <col:34> 'struct key *' lvalue ParmVar 0x12d944d18 'keyring' 'struct key *'     |       |   | `-CallExpr 0x12d947a40 <line:33:6, col:40> '<dependent type>' contains-errors     |       |   |   |-DeclRefExpr 0x12d947940 <col:6> 'int ()' Function 0x12d947360 'set_bit' 'int ()'     |       |   |   |-RecoveryExpr 0x12d947a20 <col:14> '<dependent type>' contains-errors lvalue     |       |   |   `-UnaryOperator 0x12d9479d8 <col:29, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     |       |   |     `-RecoveryExpr 0x12d9479b0 <col:30, col:35> '<dependent type>' contains-errors lvalue     |       |   |       `-DeclRefExpr 0x12d947978 <col:30> 'struct key *' lvalue ParmVar 0x12d928648 'key' 'struct key *'     |       |   `-CallExpr 0x12d947be8 <line:35:5, col:26> 'int'     |       |     |-ImplicitCastExpr 0x12d947bd0 <col:5> 'int (*)()' <FunctionToPointerDecay>     |       |     | `-DeclRefExpr 0x12d947b70 <col:5> 'int ()' Function 0x12d947ab8 '__key_link' 'int ()'     |       |     |-ImplicitCastExpr 0x12d947c18 <col:16> 'struct key *' <LValueToRValue>     |       |     | `-DeclRefExpr 0x12d947b90 <col:16> 'struct key *' lvalue ParmVar 0x12d928648 'key' 'struct key *'     |       |     `-ImplicitCastExpr 0x12d947c30 <col:21> 'struct assoc_array_edit **' <LValueToRValue>     |       |       `-DeclRefExpr 0x12d947bb0 <col:21> 'struct assoc_array_edit **' lvalue ParmVar 0x12d944fd8 '_edit' 'struct assoc_array_edit **'     |       |-IfStmt 0x12d947e38 <line:39:4, line:40:23>     |       | |-ImplicitCastExpr 0x12d947ca8 <line:39:8> 'struct key *' <LValueToRValue>     |       | | `-DeclRefExpr 0x12d947c88 <col:8> 'struct key *' lvalue ParmVar 0x12d944da8 'authkey' 'struct key *'     |       | `-CallExpr 0x12d947df8 <line:40:5, col:23> 'int'     |       |   |-ImplicitCastExpr 0x12d947de0 <col:5> 'int (*)()' <FunctionToPointerDecay>     |       |   | `-DeclRefExpr 0x12d947da0 <col:5> 'int ()' Function 0x12d947ce8 'key_revoke' 'int ()'     |       |   `-ImplicitCastExpr 0x12d947e20 <col:16> 'struct key *' <LValueToRValue>     |       |     `-DeclRefExpr 0x12d947dc0 <col:16> 'struct key *' lvalue ParmVar 0x12d944da8 'authkey' 'struct key *'     |       `-IfStmt 0x12e808950 <line:42:4, line:45:4>     |         |-RecoveryExpr 0x12d947eb8 <line:42:8, col:24> '_Bool' contains-errors     |         `-CompoundStmt 0x12e808938 <col:36, line:45:4>     |           `-BinaryOperator 0x12d947f98 <line:43:5, col:25> '<dependent type>' contains-errors '='     |             |-RecoveryExpr 0x12d947f10 <col:5, col:10> '<dependent type>' contains-errors lvalue     |             | `-DeclRefExpr 0x12d947ed8 <col:5> 'struct key *' lvalue ParmVar 0x12d928648 'key' 'struct key *'     |             `-RecoveryExpr 0x12d947f70 <col:19, col:25> '<dependent type>' contains-errors lvalue     |               `-DeclRefExpr 0x12d947f38 <col:19> 'struct key_preparsed_payload *' lvalue ParmVar 0x12d944c28 'prep' 'struct key_preparsed_payload *'     `-ReturnStmt 0x12e808cf8 <line:55:2, col:9>       `-ImplicitCastExpr 0x12e808ce0 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x12e808cc0 <col:9> 'int' lvalue Var 0x12d945278 'ret' 'int' ","19511":"`-FunctionDecl 0x13800ddc8  line:1:1 invalid xmlXPtrEvalXPointer 'int (int)'   |-ParmVarDecl 0x13800dcf0 <col:21, col:46> col:46 referenced invalid ctxt 'int'   `-CompoundStmt 0x138028018 <col:52, line:36:1>     |-IfStmt 0x138027690 <line:2:5, line:13:5>     | |-BinaryOperator 0x13800df38 <line:2:9, col:27> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x13800de98 <col:9, col:15> '<dependent type>' contains-errors lvalue ->valueTab     | | | `-RecoveryExpr 0x13800de78 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13800df18 <col:27> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x138027660 <col:33, line:13:5>     |   |-IfStmt 0x13800e378 <line:6:2, line:9:2>     |   | |-BinaryOperator 0x13800e0c0 <line:6:6, col:24> 'int' contains-errors '=='     |   | | |-CXXDependentScopeMemberExpr 0x13800e020 <col:6, col:12> '<dependent type>' contains-errors lvalue ->valueTab     |   | | | `-RecoveryExpr 0x13800e000 <col:6> '<dependent type>' contains-errors lvalue     |   | | `-RecoveryExpr 0x13800e0a0 <col:24> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x13800e358 <col:30, line:9:2>     |   |   |-CallExpr 0x13800e308 <line:7:6, col:28> 'int'     |   |   | |-ImplicitCastExpr 0x13800e2f0 <col:6> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x13800e240 <col:6> 'int ()' Function 0x13800e188 'xmlXPtrErrMemory' 'int ()'     |   |   | `-ImplicitCastExpr 0x13800e330 <col:23> 'char *' <ArrayToPointerDecay>     |   |   |   `-StringLiteral 0x13800e2a0 <col:23> 'char[4]' lvalue \"STR\"     |   |   `-ReturnStmt 0x13800e348 <line:8:6>     |   |-BinaryOperator 0x138027468 <line:10:2, col:18> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x138027400 <col:2, col:8> '<dependent type>' contains-errors lvalue ->valueNr     |   | | `-RecoveryExpr 0x13800e3b8 <col:2> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x13800e398 <col:2> 'int' lvalue ParmVar 0x13800dcf0 'ctxt' 'int'     |   | `-IntegerLiteral 0x138027448 <col:18> 'int' 0     |   |-BinaryOperator 0x138027538 <line:11:2, col:19> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x1380274d0 <col:2, col:8> '<dependent type>' contains-errors lvalue ->valueMax     |   | | `-RecoveryExpr 0x1380274a8 <col:2> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x138027488 <col:2> 'int' lvalue ParmVar 0x13800dcf0 'ctxt' 'int'     |   | `-IntegerLiteral 0x138027518 <col:19> 'int' 10     |   `-BinaryOperator 0x138027640 <line:12:2, col:16> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x1380275a0 <col:2, col:8> '<dependent type>' contains-errors lvalue ->value     |     | `-RecoveryExpr 0x138027578 <col:2> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x138027558 <col:2> 'int' lvalue ParmVar 0x13800dcf0 'ctxt' 'int'     |     `-RecoveryExpr 0x138027620 <col:16> '<dependent type>' contains-errors lvalue     `-IfStmt 0x138027f88 <line:15:5, line:32:5> has_else       |-BinaryOperator 0x138027720 <line:15:9, col:16> 'int' contains-errors '=='       | |-RecoveryExpr 0x138027700 <col:9> '<dependent type>' contains-errors lvalue       | `-CharacterLiteral 0x1380276c8 <col:16> 'int' 47       |-CompoundStmt 0x138027a40 <col:21, line:18:5>       | |-CallExpr 0x138027860 <line:16:2, col:19> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x138027820 <col:2> 'int ()' Function 0x138027768 'xmlXPathRoot' 'int ()'       | | `-RecoveryExpr 0x138027840 <col:15> '<dependent type>' contains-errors lvalue       | `-CallExpr 0x138027a10 <line:17:9, col:39> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x138027968 <col:9> 'int ()' Function 0x1380278b0 'xmlXPtrEvalChildSeq' 'int ()'       |   |-RecoveryExpr 0x138027988 <col:29> '<dependent type>' contains-errors lvalue       |   `-RecoveryExpr 0x1380279f0 <col:35> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x138027f70 <line:18:12, line:32:5>         `-IfStmt 0x138027f40 <line:24:2, line:31:2> has_else           |-RecoveryExpr 0x138027d88 <line:24:6, col:13> '_Bool' contains-errors           |-CompoundStmt 0x138027ed8 <col:18, line:28:2>           | `-ReturnStmt 0x138027ec8 <line:27:6>           `-CompoundStmt 0x138027f30 <line:28:9, line:31:2> ","19776":"`-FunctionDecl 0x13a128758  line:1:1 http_GetStatus 'int (const struct http *)'   |-ParmVarDecl 0x13a128648 <col:16, col:35> col:35 used hp 'const struct http *'   `-CompoundStmt 0x13a140ce8 <line:2:1, line:6:1>     |-CallExpr 0x13a140c28 <line:4:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13a140b80 <col:2> 'int ()' Function 0x13a140ac8 'CHECK_OBJ_NOTNULL' 'int ()'     | |-DeclRefExpr 0x13a140ba0 <col:20> 'const struct http *' lvalue ParmVar 0x13a128648 'hp' 'const struct http *'     | `-RecoveryExpr 0x13a140c08 <col:24> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x13a140cd8 <line:5:2, col:20>       `-ParenExpr 0x13a140cb8 <col:9, col:20> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x13a140c90 <col:10, col:14> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x13a140c58 <col:10> 'const struct http *' lvalue ParmVar 0x13a128648 'hp' 'const struct http *' ","19922":"`-FunctionDecl 0x120940b48  line:1:5 kvm_arch_vcpu_ioctl_run 'int (struct kvm_vcpu *, struct kvm_run *)'   |-ParmVarDecl 0x120928648 <col:29, col:46> col:46 used vcpu 'struct kvm_vcpu *'   |-ParmVarDecl 0x120940a28 <col:52, col:68> col:68 used kvm_run 'struct kvm_run *'   `-CompoundStmt 0x120947d48 <line:2:1, line:57:1>     |-DeclStmt 0x120940cc8 <line:3:2, col:7>     | `-VarDecl 0x120940c60 <col:2, col:6> col:6 used r 'int'     |-CallExpr 0x120940e98 <line:6:2, col:16> 'int'     | |-ImplicitCastExpr 0x120940e80 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x120940e10 <col:2> 'int ()' Function 0x120940d58 'vcpu_load' 'int ()'     | `-ImplicitCastExpr 0x120940ec0 <col:12> 'struct kvm_vcpu *' <LValueToRValue>     |   `-DeclRefExpr 0x120940e30 <col:12> 'struct kvm_vcpu *' lvalue ParmVar 0x120928648 'vcpu' 'struct kvm_vcpu *'     |-IfStmt 0x1209411c0 <line:8:2, line:9:52>     | |-RecoveryExpr 0x120940f10 <line:8:6, col:12> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x120940ed8 <col:6> 'struct kvm_vcpu *' lvalue ParmVar 0x120928648 'vcpu' 'struct kvm_vcpu *'     | `-CallExpr 0x120941188 <line:9:3, col:52> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x120941018 <col:3> 'int ()' Function 0x120940f60 'sigprocmask' 'int ()'     |   |-RecoveryExpr 0x120941130 <col:15> '<dependent type>' contains-errors lvalue     |   |-UnaryOperator 0x1209410b0 <col:28, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x120941088 <col:29, col:35> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x120941050 <col:29> 'struct kvm_vcpu *' lvalue ParmVar 0x120928648 'vcpu' 'struct kvm_vcpu *'     |   `-UnaryOperator 0x120941170 <col:43, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x120941150 <col:44> '<dependent type>' contains-errors lvalue     |-IfStmt 0x120941968 <line:11:2, line:16:2>     | |-CallExpr 0x120941428 <line:11:6, col:64> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1209412c0 <col:6> 'int ()' Function 0x120941208 'unlikely' 'int ()'     | | `-BinaryOperator 0x120941408 <col:15, col:38> 'int' contains-errors '=='     | |   |-CXXDependentScopeMemberExpr 0x120941340 <col:15, col:26> '<dependent type>' contains-errors lvalue .mp_state     | |   | `-RecoveryExpr 0x120941318 <col:15, col:21> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x1209412e0 <col:15> 'struct kvm_vcpu *' lvalue ParmVar 0x120928648 'vcpu' 'struct kvm_vcpu *'     | |   `-RecoveryExpr 0x1209413e8 <col:38> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x120941938 <col:67, line:16:2>     |   |-CallExpr 0x120941588 <line:12:3, col:22> 'int'     |   | |-ImplicitCastExpr 0x120941570 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x120941530 <col:3> 'int ()' Function 0x120941478 'kvm_vcpu_block' 'int ()'     |   | `-ImplicitCastExpr 0x1209415b0 <col:18> 'struct kvm_vcpu *' <LValueToRValue>     |   |   `-DeclRefExpr 0x120941550 <col:18> 'struct kvm_vcpu *' lvalue ParmVar 0x120928648 'vcpu' 'struct kvm_vcpu *'     |   |-CallExpr 0x1209417a8 <line:13:3, col:44> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1209416a8 <col:3> 'int ()' Function 0x1209415f0 'clear_bit' 'int ()'     |   | |-RecoveryExpr 0x120941788 <col:13> '<dependent type>' contains-errors lvalue     |   | `-UnaryOperator 0x120941740 <col:29, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x120941718 <col:30, col:36> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x1209416e0 <col:30> 'struct kvm_vcpu *' lvalue ParmVar 0x120928648 'vcpu' 'struct kvm_vcpu *'     |   |-BinaryOperator 0x1209418b0 <line:14:3, col:8> 'int' contains-errors '='     |   | |-DeclRefExpr 0x1209417d8 <col:3> 'int' lvalue Var 0x120940c60 'r' 'int'     |   | `-UnaryOperator 0x120941898 <col:7, col:8> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x120941880 <col:8> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x120941860 <col:8> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x120941920 <line:15:3, col:8> 'out' 0x1209418d0     |-IfStmt 0x120947328 <line:19:2, line:20:33>     | |-UnaryOperator 0x120947160 <line:19:6, col:34> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x120947138 <col:7, col:34> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x1209470b8 <col:7> 'int ()' Function 0x120947000 'irqchip_in_kernel' 'int ()'     | |   `-RecoveryExpr 0x120947110 <col:25, col:31> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x1209470d8 <col:25> 'struct kvm_vcpu *' lvalue ParmVar 0x120928648 'vcpu' 'struct kvm_vcpu *'     | `-CallExpr 0x1209472f8 <line:20:3, col:33> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x120947258 <col:3> 'int ()' Function 0x1209471a0 'kvm_set_cr8' 'int ()'     |   |-DeclRefExpr 0x120947278 <col:15> 'struct kvm_vcpu *' lvalue ParmVar 0x120928648 'vcpu' 'struct kvm_vcpu *'     |   `-RecoveryExpr 0x1209472d0 <col:21, col:30> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x120947298 <col:21> 'struct kvm_run *' lvalue ParmVar 0x120940a28 'kvm_run' 'struct kvm_run *'     |-IfStmt 0x120947680 <line:22:2, line:26:2>     | |-CXXDependentScopeMemberExpr 0x1209473f0 <line:22:6, col:21> '<dependent type>' contains-errors lvalue .cur_count     | | `-CXXDependentScopeMemberExpr 0x1209473a8 <col:6, col:17> '<dependent type>' contains-errors lvalue .pio     | |   `-RecoveryExpr 0x120947380 <col:6, col:12> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x120947348 <col:6> 'struct kvm_vcpu *' lvalue ParmVar 0x120928648 'vcpu' 'struct kvm_vcpu *'     | `-CompoundStmt 0x120947660 <col:32, line:26:2>     |   |-BinaryOperator 0x1209475d0 <line:23:3, col:24> 'int' '='     |   | |-DeclRefExpr 0x120947438 <col:3> 'int' lvalue Var 0x120940c60 'r' 'int'     |   | `-CallExpr 0x120947590 <col:7, col:24> 'int'     |   |   |-ImplicitCastExpr 0x120947578 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x120947538 <col:7> 'int ()' Function 0x120947480 'complete_pio' 'int ()'     |   |   `-ImplicitCastExpr 0x1209475b8 <col:20> 'struct kvm_vcpu *' <LValueToRValue>     |   |     `-DeclRefExpr 0x120947558 <col:20> 'struct kvm_vcpu *' lvalue ParmVar 0x120928648 'vcpu' 'struct kvm_vcpu *'     |   `-IfStmt 0x120947640 <line:24:3, line:25:9>     |     |-ImplicitCastExpr 0x120947610 <line:24:7> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x1209475f0 <col:7> 'int' lvalue Var 0x120940c60 'r' 'int'     |     `-GotoStmt 0x120947628 <line:25:4, col:9> 'out' 0x1209418d0     |-BinaryOperator 0x120947ac0 <line:49:2, col:30> 'int' '='     | |-DeclRefExpr 0x1209478e8 <col:2> 'int' lvalue Var 0x120940c60 'r' 'int'     | `-CallExpr 0x120947a60 <col:6, col:30> 'int'     |   |-ImplicitCastExpr 0x120947a48 <col:6> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1209479e8 <col:6> 'int ()' Function 0x120947930 '__vcpu_run' 'int ()'     |   |-ImplicitCastExpr 0x120947a90 <col:17> 'struct kvm_vcpu *' <LValueToRValue>     |   | `-DeclRefExpr 0x120947a08 <col:17> 'struct kvm_vcpu *' lvalue ParmVar 0x120928648 'vcpu' 'struct kvm_vcpu *'     |   `-ImplicitCastExpr 0x120947aa8 <col:23> 'struct kvm_run *' <LValueToRValue>     |     `-DeclRefExpr 0x120947a28 <col:23> 'struct kvm_run *' lvalue ParmVar 0x120940a28 'kvm_run' 'struct kvm_run *'     |-LabelStmt 0x120947b68 <line:51:1, col:4> 'out'     | `-NullStmt 0x120947b60 <col:4>     |-CallExpr 0x120947cc0 <line:55:2, col:15> 'int'     | |-ImplicitCastExpr 0x120947ca8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x120947c68 <col:2> 'int ()' Function 0x120947bb0 'vcpu_put' 'int ()'     | `-ImplicitCastExpr 0x120947ce8 <col:11> 'struct kvm_vcpu *' <LValueToRValue>     |   `-DeclRefExpr 0x120947c88 <col:11> 'struct kvm_vcpu *' lvalue ParmVar 0x120928648 'vcpu' 'struct kvm_vcpu *'     `-ReturnStmt 0x120947d38 <line:56:2, col:9>       `-ImplicitCastExpr 0x120947d20 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x120947d00 <col:9> 'int' lvalue Var 0x120940c60 'r' 'int' ","19323":"`-FunctionDecl 0x142028ad8  col:4 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x142028bd8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x142028c40 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x142028ca8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x142028b80 <<invalid sloc>> Implicit 882 ","19521":"`-FunctionDecl 0x142838488  line:1:1 invalid libxlDomainHandleDeath 'int (int *, int *)'   |-ParmVarDecl 0x142838328 <col:24, col:44> col:44 invalid driver 'int *'   |-ParmVarDecl 0x1428383a8 <col:52, col:66> col:66 invalid vm 'int *'   `-CompoundStmt 0x142852d50 <line:2:1, line:17:1>     |-IfStmt 0x142838848 <line:5:5, line:6:9>     | |-BinaryOperator 0x142838818 <line:5:9, col:64> 'int' contains-errors '<'     | | |-CallExpr 0x1428387e0 <col:9, col:60> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x1428386d0 <col:9> 'int ()' Function 0x142838618 'libxlDomainObjBeginJob' 'int ()'     | | | |-RecoveryExpr 0x1428386f0 <col:32> '<dependent type>' contains-errors lvalue     | | | |-RecoveryExpr 0x142838710 <col:40> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x1428387c0 <col:44> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x142838780 <col:64> 'int' 0     | `-ReturnStmt 0x142838838 <line:6:9>     |-CallExpr 0x142852440 <line:8:5, col:78> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142838948 <col:5> 'int ()' Function 0x142838890 'virDomainObjSetState' 'int ()'     | |-RecoveryExpr 0x142838968 <col:26> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x142852400 <col:30> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x142852420 <col:50> '<dependent type>' contains-errors lvalue     |-CallExpr 0x142852740 <line:12:5, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1428526e0 <col:5> 'int ()' Function 0x142852628 'libxlDomainCleanup' 'int ()'     | |-RecoveryExpr 0x142852700 <col:24> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x142852720 <col:32> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1428529c0 <line:13:5, line:14:51>     | |-UnaryOperator 0x1428527f0 <line:13:9, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1428527d8 <col:10, col:14> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x142852790 <col:10, col:14> '<dependent type>' contains-errors lvalue ->persistent     | |     `-RecoveryExpr 0x142852770 <col:10> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x142852990 <line:14:9, col:51> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1428528e8 <col:9> 'int ()' Function 0x142852830 'virDomainObjListRemove' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x142852928 <col:32, col:40> '<dependent type>' contains-errors lvalue ->domains     |   | `-RecoveryExpr 0x142852908 <col:32> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x142852970 <col:49> '<dependent type>' contains-errors lvalue     |-CallExpr 0x142852b20 <line:15:5, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142852ac0 <col:5> 'int ()' Function 0x142852a08 'libxlDomainObjEndJob' 'int ()'     | |-RecoveryExpr 0x142852ae0 <col:26> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x142852b00 <col:34> '<dependent type>' contains-errors lvalue     `-CallExpr 0x142852d20 <line:16:5, col:65> '<dependent type>' contains-errors       |-DeclRefExpr 0x142852c30 <col:5> 'int ()' Function 0x142852b78 'virObjectEventStateQueue' 'int ()'       |-CXXDependentScopeMemberExpr 0x142852c70 <col:30, col:38> '<dependent type>' contains-errors lvalue ->domainEventState       | `-RecoveryExpr 0x142852c50 <col:30> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x142852d00 <col:56> '<dependent type>' contains-errors lvalue ","19242":"`-FunctionDecl 0x12b8281d8  col:9 implicit used sprintf 'int (char *, const char *, ...)' extern   |-ParmVarDecl 0x12b8282d8 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x12b828340 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x12b828280 <<invalid sloc>> Implicit 906   `-FormatAttr 0x12b8283b8 <col:9> Implicit printf 2 3 ","19409":"`-FunctionDecl 0x13a827588  line:2:1 invalid MYSQLND_METHOD 'int (int, int)' static   |-ParmVarDecl 0x13a80df48 <col:16> col:16 mysqlnd_protocol 'int'   |-ParmVarDecl 0x13a80dec8 <col:34> col:34 get_rset_header_packet 'int'   `-CompoundStmt 0x13a827ef8 <line:3:1, line:10:21>     |-DeclStmt 0x13a827918 <line:4:2, col:130>     | `-VarDecl 0x13a8276c8 <col:2, col:41> col:41 used packet 'struct st_mysqlnd_packet_rset_header *'     |-CallExpr 0x13a827ad8 <line:5:2, col:17> 'int'     | |-ImplicitCastExpr 0x13a827ac0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13a827a10 <col:2> 'int ()' Function 0x13a827958 'DBG_ENTER' 'int ()'     | `-ImplicitCastExpr 0x13a827b00 <col:12> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x13a827a70 <col:12> 'char[4]' lvalue \"STR\"     |-IfStmt 0x13a827d60 <line:6:2, line:9:2>     | |-ImplicitCastExpr 0x13a827b38 <line:6:6> 'struct st_mysqlnd_packet_rset_header *' <LValueToRValue>     | | `-DeclRefExpr 0x13a827b18 <col:6> 'struct st_mysqlnd_packet_rset_header *' lvalue Var 0x13a8276c8 'packet' 'struct st_mysqlnd_packet_rset_header *'     | `-CompoundStmt 0x13a827d48 <col:14, line:9:2>     |   `-BinaryOperator 0x13a827d28 <line:8:3, col:31> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x13a827c88 <col:3, col:18> '<dependent type>' contains-errors lvalue .persistent     |     | `-RecoveryExpr 0x13a827c60 <col:3, col:11> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x13a827c28 <col:3> 'struct st_mysqlnd_packet_rset_header *' lvalue Var 0x13a8276c8 'packet' 'struct st_mysqlnd_packet_rset_header *'     |     `-RecoveryExpr 0x13a827d08 <col:31> '<dependent type>' contains-errors lvalue     `-CallExpr 0x13a827eb8 <line:10:2, col:19> 'int'       |-ImplicitCastExpr 0x13a827ea0 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x13a827e60 <col:2> 'int ()' Function 0x13a827da8 'DBG_RETURN' 'int ()'       `-ImplicitCastExpr 0x13a827ee0 <col:13> 'struct st_mysqlnd_packet_rset_header *' <LValueToRValue>         `-DeclRefExpr 0x13a827e80 <col:13> 'struct st_mysqlnd_packet_rset_header *' lvalue Var 0x13a8276c8 'packet' 'struct st_mysqlnd_packet_rset_header *' ","19304":"`-FunctionDecl 0x121123a58  col:9 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x121123b58 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x121123b00 <<invalid sloc>> Implicit 873 ","19223":"`-FunctionDecl 0x12a075ed8  line:1:6 invalid net_tx_pkt_add_raw_fragment 'int (struct NetTxPkt *, int, int)'   |-ParmVarDecl 0x12a05ec68 <col:34, col:51> col:51 used pkt 'struct NetTxPkt *'   |-ParmVarDecl 0x12a05ece8 <col:56, col:63> col:63 invalid pa 'int'   |-ParmVarDecl 0x12a05ed68 <line:2:5, col:12> col:12 invalid len 'int'   `-CompoundStmt 0x12a076cc8 <line:3:1, line:26:1>     |-DeclStmt 0x12a076188 <line:5:5, col:25>     | |-RecordDecl 0x12a075f98 <col:5, col:12> col:12 struct iovec     | `-VarDecl 0x12a076108 <col:5, col:19> col:19 used ventry 'struct iovec *'     |-CallExpr 0x12a076388 <line:6:5, col:15> 'int'     | |-ImplicitCastExpr 0x12a076370 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12a076300 <col:5> 'int ()' Function 0x12a076248 'assert' 'int ()'     | `-ImplicitCastExpr 0x12a0763b0 <col:12> 'struct NetTxPkt *' <LValueToRValue>     |   `-DeclRefExpr 0x12a076320 <col:12> 'struct NetTxPkt *' lvalue ParmVar 0x12a05ec68 'pkt' 'struct NetTxPkt *'     |-CallExpr 0x12a0764c8 <line:7:5, col:47> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12a0763c8 <col:5> 'int ()' Function 0x12a076248 'assert' 'int ()'     | `-BinaryOperator 0x12a0764a8 <col:12, col:38> 'int' contains-errors '>'     |   |-RecoveryExpr 0x12a076420 <col:12, col:17> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x12a0763e8 <col:12> 'struct NetTxPkt *' lvalue ParmVar 0x12a05ec68 'pkt' 'struct NetTxPkt *'     |   `-RecoveryExpr 0x12a076480 <col:33, col:38> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12a076448 <col:33> 'struct NetTxPkt *' lvalue ParmVar 0x12a05ec68 'pkt' 'struct NetTxPkt *'     |-IfStmt 0x12a0765a0 <line:9:5, line:11:6>     | |-UnaryOperator 0x12a076528 <line:9:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12a076510 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x12a0764f0 <col:10> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12a076588 <col:15, line:11:6>     |   `-ReturnStmt 0x12a076578 <line:10:9, col:16>     |     `-RecoveryExpr 0x12a076558 <col:16> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12a076708 <line:13:5, col:38> 'struct iovec *' contains-errors '='     | |-DeclRefExpr 0x12a0765c0 <col:5> 'struct iovec *' lvalue Var 0x12a076108 'ventry' 'struct iovec *'     | `-UnaryOperator 0x12a0766f0 <col:14, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-ArraySubscriptExpr 0x12a0766d0 <col:15, col:38> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x12a0766a0 <col:15, col:20> '<dependent type>' contains-errors <LValueToRValue>     |     | `-RecoveryExpr 0x12a076618 <col:15, col:20> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x12a0765e0 <col:15> 'struct NetTxPkt *' lvalue ParmVar 0x12a05ec68 'pkt' 'struct NetTxPkt *'     |     `-ImplicitCastExpr 0x12a0766b8 <col:24, col:29> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12a076678 <col:24, col:29> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x12a076640 <col:24> 'struct NetTxPkt *' lvalue ParmVar 0x12a05ec68 'pkt' 'struct NetTxPkt *'     |-BinaryOperator 0x12a076a68 <line:16:5, line:17:72> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12a076780 <line:16:5, col:13> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12a076748 <col:5> 'struct iovec *' lvalue Var 0x12a076108 'ventry' 'struct iovec *'     | `-CallExpr 0x12a076a28 <col:24, line:17:72> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12a076888 <line:16:24> 'int ()' Function 0x12a0767d0 'pci_dma_map' 'int ()'     |   |-RecoveryExpr 0x12a0768e0 <col:36, col:41> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x12a0768a8 <col:36> 'struct NetTxPkt *' lvalue ParmVar 0x12a05ec68 'pkt' 'struct NetTxPkt *'     |   |-RecoveryExpr 0x12a076908 <col:50> '<dependent type>' contains-errors lvalue     |   |-UnaryOperator 0x12a0769f0 <line:17:36, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x12a0769d0 <col:37> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x12a076a08 <col:49> '<dependent type>' contains-errors lvalue     `-IfStmt 0x12a076c98 <line:19:5, line:25:5> has_else       |-RecoveryExpr 0x12a076b78 <line:19:9, col:57> '_Bool' contains-errors       |-CompoundStmt 0x12a076c70 <col:60, line:23:5>       | `-UnaryOperator 0x12a076c58 <line:21:9, col:23> '<dependent type>' contains-errors postfix '++' cannot overflow       |   `-RecoveryExpr 0x12a076c30 <col:9, col:14> '<dependent type>' contains-errors lvalue       |     `-DeclRefExpr 0x12a076bf8 <col:9> 'struct NetTxPkt *' lvalue ParmVar 0x12a05ec68 'pkt' 'struct NetTxPkt *'       `-CompoundStmt 0x12a076c88 <line:23:12, line:25:5> ","20038":"`-FunctionDecl 0x131941558  line:1:12 input_get_disposition 'int (struct input_dev *, unsigned int, unsigned int, int *)' static   |-ParmVarDecl 0x131929048 <col:34, col:52> col:52 used dev 'struct input_dev *'   |-ParmVarDecl 0x1319290c8 <line:2:6, col:19> col:19 used type 'unsigned int'   |-ParmVarDecl 0x131929148 <col:25, col:38> col:38 used code 'unsigned int'   |-ParmVarDecl 0x131941400 <col:44, col:49> col:49 used pval 'int *'   `-CompoundStmt 0x131944ea0 <line:3:1, line:105:1>     |-DeclStmt 0x131941738 <line:4:2, col:38>     | `-VarDecl 0x131941680 <col:2, col:20> col:6 used disposition 'int' cinit     |   `-RecoveryExpr 0x131941718 <col:20> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x131941838 <line:5:2, col:19>     | `-VarDecl 0x131941768 <col:2, col:15> col:6 used value 'int' cinit     |   `-ImplicitCastExpr 0x131941820 <col:14, col:15> 'int' <LValueToRValue>     |     `-UnaryOperator 0x131941808 <col:14, col:15> 'int' lvalue prefix '*' cannot overflow     |       `-ImplicitCastExpr 0x1319417f0 <col:15> 'int *' <LValueToRValue>     |         `-DeclRefExpr 0x1319417d0 <col:15> 'int *' lvalue ParmVar 0x131941400 'pval' 'int *'     |-SwitchStmt 0x131941888 <line:7:2, line:101:2>     | |-ImplicitCastExpr 0x131941870 <line:7:10> 'unsigned int' <LValueToRValue>     | | `-DeclRefExpr 0x131941850 <col:10> 'unsigned int' lvalue ParmVar 0x1319290c8 'type' 'unsigned int'     | `-CompoundStmt 0x131944d10 <col:16, line:101:2>     |   |-SwitchStmt 0x131941900 <line:10:3, line:21:3>     |   | |-ImplicitCastExpr 0x1319418e8 <line:10:11> 'unsigned int' <LValueToRValue>     |   | | `-DeclRefExpr 0x1319418c8 <col:11> 'unsigned int' lvalue ParmVar 0x131929148 'code' 'unsigned int'     |   | `-CompoundStmt 0x131941bc8 <col:17, line:21:3>     |   |   |-BinaryOperator 0x1319419b8 <line:12:4, col:18> 'int' contains-errors '='     |   |   | |-DeclRefExpr 0x131941940 <col:4> 'int' contains-errors lvalue Var 0x131941680 'disposition' 'int'     |   |   | `-RecoveryExpr 0x131941998 <col:18> '<dependent type>' contains-errors lvalue     |   |   |-BreakStmt 0x1319419d8 <line:13:4>     |   |   |-BinaryOperator 0x131941ae8 <line:16:4, col:43> 'int' contains-errors '='     |   |   | |-DeclRefExpr 0x1319419f8 <col:4> 'int' contains-errors lvalue Var 0x131941680 'disposition' 'int'     |   |   | `-BinaryOperator 0x131941ac8 <col:18, col:43> '<dependent type>' contains-errors '|'     |   |   |   |-RecoveryExpr 0x131941a88 <col:18> '<dependent type>' contains-errors lvalue     |   |   |   `-RecoveryExpr 0x131941aa8 <col:43> '<dependent type>' contains-errors lvalue     |   |   |-BreakStmt 0x131941b08 <line:17:4>     |   |   |-BinaryOperator 0x131941ba0 <line:19:4, col:18> 'int' contains-errors '='     |   |   | |-DeclRefExpr 0x131941b28 <col:4> 'int' contains-errors lvalue Var 0x131941680 'disposition' 'int'     |   |   | `-RecoveryExpr 0x131941b80 <col:18> '<dependent type>' contains-errors lvalue     |   |   `-BreakStmt 0x131941bc0 <line:20:4>     |   |-BreakStmt 0x131941c08 <line:22:3>     |   |-IfStmt 0x1319438f8 <line:25:3, line:38:3>     |   | |-CallExpr 0x131941e50 <line:25:7, col:52> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x131941d40 <col:7> 'int ()' Function 0x131941c88 'is_event_supported' 'int ()'     |   | | |-DeclRefExpr 0x131941d60 <col:26> 'unsigned int' lvalue ParmVar 0x131929148 'code' 'unsigned int'     |   | | |-RecoveryExpr 0x131941db8 <col:32, col:37> '<dependent type>' contains-errors lvalue     |   | | | `-DeclRefExpr 0x131941d80 <col:32> 'struct input_dev *' lvalue ParmVar 0x131929048 'dev' 'struct input_dev *'     |   | | `-RecoveryExpr 0x131941e30 <col:45> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x1319438d8 <col:55, line:38:3>     |   |   |-IfStmt 0x131941fc0 <line:28:4, line:31:4>     |   |   | |-BinaryOperator 0x131941ee0 <line:28:8, col:17> 'int' '=='     |   |   | | |-ImplicitCastExpr 0x131941ec8 <col:8> 'int' <LValueToRValue>     |   |   | | | `-DeclRefExpr 0x131941e88 <col:8> 'int' lvalue Var 0x131941768 'value' 'int'     |   |   | | `-IntegerLiteral 0x131941ea8 <col:17> 'int' 2     |   |   | `-CompoundStmt 0x131941fa0 <col:20, line:31:4>     |   |   |   |-BinaryOperator 0x131941f78 <line:29:5, col:19> 'int' contains-errors '='     |   |   |   | |-DeclRefExpr 0x131941f00 <col:5> 'int' contains-errors lvalue Var 0x131941680 'disposition' 'int'     |   |   |   | `-RecoveryExpr 0x131941f58 <col:19> '<dependent type>' contains-errors lvalue     |   |   |   `-BreakStmt 0x131941f98 <line:30:5>     |   |   `-IfStmt 0x1319438b8 <line:33:4, line:37:4>     |   |     |-BinaryOperator 0x131942228 <line:33:8, col:40> 'int' contains-errors '!='     |   |     | |-UnaryOperator 0x1319421a8 <col:8, col:33> '<dependent type>' contains-errors prefix '!' cannot overflow     |   |     | | `-UnaryOperator 0x131942190 <col:9, col:33> '<dependent type>' contains-errors prefix '!' cannot overflow     |   |     | |   `-CallExpr 0x131942160 <col:10, col:33> '<dependent type>' contains-errors     |   |     | |     |-DeclRefExpr 0x1319420c0 <col:10> 'int ()' Function 0x131942008 'test_bit' 'int ()'     |   |     | |     |-DeclRefExpr 0x1319420e0 <col:19> 'unsigned int' lvalue ParmVar 0x131929148 'code' 'unsigned int'     |   |     | |     `-RecoveryExpr 0x131942138 <col:25, col:30> '<dependent type>' contains-errors lvalue     |   |     | |       `-DeclRefExpr 0x131942100 <col:25> 'struct input_dev *' lvalue ParmVar 0x131929048 'dev' 'struct input_dev *'     |   |     | `-UnaryOperator 0x131942210 <col:38, col:40> 'int' prefix '!' cannot overflow     |   |     |   `-UnaryOperator 0x1319421f8 <col:39, col:40> 'int' prefix '!' cannot overflow     |   |     |     `-ImplicitCastExpr 0x1319421e0 <col:40> 'int' <LValueToRValue>     |   |     |       `-DeclRefExpr 0x1319421c0 <col:40> 'int' lvalue Var 0x131941768 'value' 'int'     |   |     `-CompoundStmt 0x131943898 <col:47, line:37:4>     |   |       |-CallExpr 0x1319423c8 <line:35:5, col:32> '<dependent type>' contains-errors     |   |       | |-DeclRefExpr 0x131942328 <col:5> 'int ()' Function 0x131942270 '__change_bit' 'int ()'     |   |       | |-DeclRefExpr 0x131942348 <col:18> 'unsigned int' lvalue ParmVar 0x131929148 'code' 'unsigned int'     |   |       | `-RecoveryExpr 0x1319423a0 <col:24, col:29> '<dependent type>' contains-errors lvalue     |   |       |   `-DeclRefExpr 0x131942368 <col:24> 'struct input_dev *' lvalue ParmVar 0x131929048 'dev' 'struct input_dev *'     |   |       `-BinaryOperator 0x131943878 <line:36:5, col:19> 'int' contains-errors '='     |   |         |-DeclRefExpr 0x131943800 <col:5> 'int' contains-errors lvalue Var 0x131941680 'disposition' 'int'     |   |         `-RecoveryExpr 0x131943858 <col:19> '<dependent type>' contains-errors lvalue     |   |-BreakStmt 0x131943918 <line:39:3>     |   |-IfStmt 0x131943c88 <line:42:3, line:47:3>     |   | |-RecoveryExpr 0x131943b60 <line:42:7, line:43:38> '_Bool' contains-errors     |   | `-CompoundStmt 0x131943c70 <col:45, line:47:3>     |   |   `-CallExpr 0x131943c20 <line:45:4, col:30> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x131943b80 <col:4> 'int ()' Function 0x131942270 '__change_bit' 'int ()'     |   |     |-DeclRefExpr 0x131943ba0 <col:17> 'unsigned int' lvalue ParmVar 0x131929148 'code' 'unsigned int'     |   |     `-RecoveryExpr 0x131943bf8 <col:23, col:28> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x131943bc0 <col:23> 'struct input_dev *' lvalue ParmVar 0x131929048 'dev' 'struct input_dev *'     |   |-BreakStmt 0x131943ca8 <line:48:3>     |   |-IfStmt 0x131943fe0 <line:51:3, line:52:58>     |   | |-RecoveryExpr 0x131943d50 <line:51:7, col:52> '_Bool' contains-errors     |   | `-BinaryOperator 0x131943fc0 <line:52:4, col:58> 'int' contains-errors '='     |   |   |-DeclRefExpr 0x131943d70 <col:4> 'int' contains-errors lvalue Var 0x131941680 'disposition' 'int'     |   |   `-CallExpr 0x131943f58 <col:18, col:58> 'int'     |   |     |-ImplicitCastExpr 0x131943f40 <col:18> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x131943e70 <col:18> 'int ()' Function 0x131943db8 'input_handle_abs_event' 'int ()'     |   |     |-ImplicitCastExpr 0x131943f90 <col:41> 'struct input_dev *' <LValueToRValue>     |   |     | `-DeclRefExpr 0x131943e90 <col:41> 'struct input_dev *' lvalue ParmVar 0x131929048 'dev' 'struct input_dev *'     |   |     |-ImplicitCastExpr 0x131943fa8 <col:46> 'unsigned int' <LValueToRValue>     |   |     | `-DeclRefExpr 0x131943eb0 <col:46> 'unsigned int' lvalue ParmVar 0x131929148 'code' 'unsigned int'     |   |     `-UnaryOperator 0x131943ef0 <col:52, col:53> 'int *' prefix '&' cannot overflow     |   |       `-DeclRefExpr 0x131943ed0 <col:53> 'int' lvalue Var 0x131941768 'value' 'int'     |   |-BreakStmt 0x131944000 <line:54:3>     |   |-BreakStmt 0x131944108 <line:60:3>     |   |-BreakStmt 0x1319441f0 <line:66:3>     |   |-IfStmt 0x131944548 <line:69:3, line:74:3>     |   | |-RecoveryExpr 0x131944420 <line:69:7, line:70:39> '_Bool' contains-errors     |   | `-CompoundStmt 0x131944530 <col:46, line:74:3>     |   |   `-CallExpr 0x1319444e0 <line:72:4, col:31> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x131944440 <col:4> 'int ()' Function 0x131942270 '__change_bit' 'int ()'     |   |     |-DeclRefExpr 0x131944460 <col:17> 'unsigned int' lvalue ParmVar 0x131929148 'code' 'unsigned int'     |   |     `-RecoveryExpr 0x1319444b8 <col:23, col:28> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x131944480 <col:23> 'struct input_dev *' lvalue ParmVar 0x131929048 'dev' 'struct input_dev *'     |   |-BreakStmt 0x131944568 <line:75:3>     |   |-IfStmt 0x1319448e8 <line:78:3, line:83:3>     |   | |-RecoveryExpr 0x131944610 <line:78:7, col:52> '_Bool' contains-errors     |   | `-CompoundStmt 0x1319448d0 <col:55, line:83:3>     |   |   `-IfStmt 0x131944890 <line:80:4, line:81:32>     |   |     |-BinaryOperator 0x131944798 <line:80:8, col:40> 'int' contains-errors '!='     |   |     | |-UnaryOperator 0x131944718 <col:8, col:33> '<dependent type>' contains-errors prefix '!' cannot overflow     |   |     | | `-UnaryOperator 0x131944700 <col:9, col:33> '<dependent type>' contains-errors prefix '!' cannot overflow     |   |     | |   `-CallExpr 0x1319446d0 <col:10, col:33> '<dependent type>' contains-errors     |   |     | |     |-DeclRefExpr 0x131944630 <col:10> 'int ()' Function 0x131942008 'test_bit' 'int ()'     |   |     | |     |-DeclRefExpr 0x131944650 <col:19> 'unsigned int' lvalue ParmVar 0x131929148 'code' 'unsigned int'     |   |     | |     `-RecoveryExpr 0x1319446a8 <col:25, col:30> '<dependent type>' contains-errors lvalue     |   |     | |       `-DeclRefExpr 0x131944670 <col:25> 'struct input_dev *' lvalue ParmVar 0x131929048 'dev' 'struct input_dev *'     |   |     | `-UnaryOperator 0x131944780 <col:38, col:40> 'int' prefix '!' cannot overflow     |   |     |   `-UnaryOperator 0x131944768 <col:39, col:40> 'int' prefix '!' cannot overflow     |   |     |     `-ImplicitCastExpr 0x131944750 <col:40> 'int' <LValueToRValue>     |   |     |       `-DeclRefExpr 0x131944730 <col:40> 'int' lvalue Var 0x131941768 'value' 'int'     |   |     `-CallExpr 0x131944860 <line:81:5, col:32> '<dependent type>' contains-errors     |   |       |-DeclRefExpr 0x1319447b8 <col:5> 'int ()' Function 0x131942270 '__change_bit' 'int ()'     |   |       |-DeclRefExpr 0x1319447d8 <col:18> 'unsigned int' lvalue ParmVar 0x131929148 'code' 'unsigned int'     |   |       `-RecoveryExpr 0x131944838 <col:24, col:29> '<dependent type>' contains-errors lvalue     |   |         `-DeclRefExpr 0x131944800 <col:24> 'struct input_dev *' lvalue ParmVar 0x131929048 'dev' 'struct input_dev *'     |   |-BreakStmt 0x131944908 <line:84:3>     |   |-IfStmt 0x131944c20 <line:87:3, line:90:3>     |   | |-RecoveryExpr 0x131944ab8 <line:87:7, col:58> '_Bool' contains-errors     |   | `-CompoundStmt 0x131944c08 <col:65, line:90:3>     |   |   `-BinaryOperator 0x131944bc8 <line:88:4, col:21> '<dependent type>' contains-errors '='     |   |     |-ArraySubscriptExpr 0x131944b88 <col:4, col:17> '<dependent type>' contains-errors lvalue     |   |     | |-ImplicitCastExpr 0x131944b58 <col:4, col:9> '<dependent type>' contains-errors <LValueToRValue>     |   |     | | `-RecoveryExpr 0x131944b10 <col:4, col:9> '<dependent type>' contains-errors lvalue     |   |     | |   `-DeclRefExpr 0x131944ad8 <col:4> 'struct input_dev *' lvalue ParmVar 0x131929048 'dev' 'struct input_dev *'     |   |     | `-ImplicitCastExpr 0x131944b70 <col:13> 'unsigned int' <LValueToRValue>     |   |     |   `-DeclRefExpr 0x131944b38 <col:13> 'unsigned int' lvalue ParmVar 0x131929148 'code' 'unsigned int'     |   |     `-DeclRefExpr 0x131944ba8 <col:21> 'int' lvalue Var 0x131941768 'value' 'int'     |   |-BreakStmt 0x131944c40 <line:91:3>     |   |-BreakStmt 0x131944ce0 <line:96:3>     |   `-BreakStmt 0x131944d08 <line:100:3>     |-BinaryOperator 0x131944e38 <line:103:2, col:10> 'int' '='     | |-UnaryOperator 0x131944de8 <col:2, col:3> 'int' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x131944dd0 <col:3> 'int *' <LValueToRValue>     | |   `-DeclRefExpr 0x131944db0 <col:3> 'int *' lvalue ParmVar 0x131941400 'pval' 'int *'     | `-ImplicitCastExpr 0x131944e20 <col:10> 'int' <LValueToRValue>     |   `-DeclRefExpr 0x131944e00 <col:10> 'int' lvalue Var 0x131941768 'value' 'int'     `-ReturnStmt 0x131944e90 <line:104:2, col:9>       `-ImplicitCastExpr 0x131944e78 <col:9> 'int' contains-errors <LValueToRValue>         `-DeclRefExpr 0x131944e58 <col:9> 'int' contains-errors lvalue Var 0x131941680 'disposition' 'int' ","19601":"`-FunctionDecl 0x14e141530  col:15 implicit used abort 'void (void) __attribute__((noreturn))' extern   `-BuiltinAttr 0x14e1415d8 <<invalid sloc>> Implicit 867 ","19581":"`-FunctionDecl 0x124827748  line:1:12 invalid check_stack_boundary 'int (struct bpf_verifier_env *, int, int, int, struct bpf_call_arg_meta *)' static   |-ParmVarDecl 0x12480e248 <col:33, col:58> col:58 used env 'struct bpf_verifier_env *'   |-ParmVarDecl 0x12480e2c8 <col:63, col:67> col:67 used regno 'int'   |-ParmVarDecl 0x12480e348 <line:2:5, col:9> col:9 used access_size 'int'   |-ParmVarDecl 0x124827400 <col:22, col:27> col:27 invalid zero_size_allowed 'int'   |-ParmVarDecl 0x1248275d8 <line:3:5, col:31> col:31 used meta 'struct bpf_call_arg_meta *'   `-CompoundStmt 0x12482b4a0 <line:4:1, line:58:1>     |-DeclStmt 0x124827a68 <line:5:2, col:51>     | |-RecordDecl 0x124827818 <col:2, col:9> col:9 struct bpf_verifier_state     | `-VarDecl 0x124827988 <col:2, col:42> col:29 used state 'struct bpf_verifier_state *' cinit     |   `-RecoveryExpr 0x124827a28 <col:37, col:42> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1248279f0 <col:37> 'struct bpf_verifier_env *' lvalue ParmVar 0x12480e248 'env' 'struct bpf_verifier_env *'     |-DeclStmt 0x124827cc8 <line:6:2, col:42>     | |-RecordDecl 0x124827a80 <col:2, col:9> col:9 struct bpf_reg_state     | `-VarDecl 0x124827be8 <col:2, col:38> col:24 used regs 'struct bpf_reg_state *' cinit     |   `-RecoveryExpr 0x124827c88 <col:31, col:38> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x124827c50 <col:31> 'struct bpf_verifier_state *' contains-errors lvalue Var 0x124827988 'state' 'struct bpf_verifier_state *'     |-DeclStmt 0x124827f08 <line:7:2, col:23>     | |-VarDecl 0x124827cf8 <col:2, col:6> col:6 used off 'int'     | |-VarDecl 0x124827d78 <col:2, col:11> col:11 used i 'int'     | |-VarDecl 0x124827df8 <col:2, col:14> col:14 used slot 'int'     | `-VarDecl 0x124827e78 <col:2, col:20> col:20 used spi 'int'     |-IfStmt 0x124829000 <line:9:2, line:19:2>     | |-RecoveryExpr 0x124827fa8 <line:9:6, col:26> '_Bool' contains-errors     | `-CompoundStmt 0x124828fe0 <col:40, line:19:2>     |   |-IfStmt 0x1248282c0 <line:11:3, line:13:11>     |   | |-RecoveryExpr 0x124828270 <line:11:7, line:12:35> '_Bool' contains-errors     |   | `-ReturnStmt 0x1248282b0 <line:13:4, col:11>     |   |   `-IntegerLiteral 0x124828290 <col:11> 'int' 0     |   `-ReturnStmt 0x124828fd0 <line:18:3, col:11>     |     `-UnaryOperator 0x124828fb8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x124828fa0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x124828f80 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x124829668 <line:22:2, line:28:2>     | |-RecoveryExpr 0x124829190 <line:22:6, col:40> '_Bool' contains-errors     | `-CompoundStmt 0x124829648 <col:43, line:28:2>     |   |-DeclStmt 0x1248292b8 <line:23:3, col:18>     |   | `-VarDecl 0x124829250 <col:3, col:17> col:8 used tn_buf 'char[48]'     |   `-CallExpr 0x1248295a8 <line:26:3, line:27:17> 'int'     |     |-ImplicitCastExpr 0x124829590 <line:26:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1248294c0 <col:3> 'int ()' Function 0x124828308 'verbose' 'int ()'     |     |-ImplicitCastExpr 0x1248295e8 <col:11> 'struct bpf_verifier_env *' <LValueToRValue>     |     | `-DeclRefExpr 0x1248294e0 <col:11> 'struct bpf_verifier_env *' lvalue ParmVar 0x12480e248 'env' 'struct bpf_verifier_env *'     |     |-ImplicitCastExpr 0x124829600 <col:16> 'char *' <ArrayToPointerDecay>     |     | `-StringLiteral 0x124829500 <col:16> 'char[4]' lvalue \"STR\"     |     |-ImplicitCastExpr 0x124829618 <line:27:4> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x124829520 <col:4> 'int' lvalue ParmVar 0x12480e2c8 'regno' 'int'     |     `-ImplicitCastExpr 0x124829630 <col:11> 'char *' <ArrayToPointerDecay>     |       `-DeclRefExpr 0x124829540 <col:11> 'char[48]' lvalue Var 0x124829250 'tn_buf' 'char[48]'     |-IfStmt 0x124829c40 <line:30:2, line:35:2>     | |-RecoveryExpr 0x124829a70 <line:30:6, line:31:64> '_Bool' contains-errors     | `-CompoundStmt 0x124829c28 <col:67, line:35:2>     |   `-CallExpr 0x124829b68 <line:32:3, line:33:27> 'int'     |     |-ImplicitCastExpr 0x124829b50 <line:32:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x124829a90 <col:3> 'int ()' Function 0x124828308 'verbose' 'int ()'     |     |-ImplicitCastExpr 0x124829bb0 <col:11> 'struct bpf_verifier_env *' <LValueToRValue>     |     | `-DeclRefExpr 0x124829ab0 <col:11> 'struct bpf_verifier_env *' lvalue ParmVar 0x12480e248 'env' 'struct bpf_verifier_env *'     |     |-ImplicitCastExpr 0x124829bc8 <col:16> 'char *' <ArrayToPointerDecay>     |     | `-StringLiteral 0x124829ad0 <col:16> 'char[4]' lvalue \"STR\"     |     |-ImplicitCastExpr 0x124829be0 <line:33:4> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x124829af0 <col:4> 'int' lvalue ParmVar 0x12480e2c8 'regno' 'int'     |     |-ImplicitCastExpr 0x124829bf8 <col:11> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x124829b10 <col:11> 'int' lvalue Var 0x124827cf8 'off' 'int'     |     `-ImplicitCastExpr 0x124829c10 <col:16> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x124829b30 <col:16> 'int' lvalue ParmVar 0x12480e348 'access_size' 'int'     |-IfStmt 0x12482ab28 <line:37:2, line:38:34>     | |-BinaryOperator 0x124829da0 <line:37:6, col:37> 'int' contains-errors '<'     | | |-CXXDependentScopeMemberExpr 0x124829d08 <col:6, col:22> '<dependent type>' contains-errors lvalue ->stack_depth     | | | `-CXXDependentScopeMemberExpr 0x124829cc0 <col:6, col:17> '<dependent type>' contains-errors lvalue ->aux     | | |   `-RecoveryExpr 0x124829c98 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x124829c60 <col:6> 'struct bpf_verifier_env *' lvalue ParmVar 0x12480e248 'env' 'struct bpf_verifier_env *'     | | `-UnaryOperator 0x124829d88 <col:36, col:37> 'int' prefix '-'     | |   `-ImplicitCastExpr 0x124829d70 <col:37> 'int' <LValueToRValue>     | |     `-DeclRefExpr 0x124829d50 <col:37> 'int' lvalue Var 0x124827cf8 'off' 'int'     | `-BinaryOperator 0x12482ab08 <line:38:3, col:34> '<dependent type>' contains-errors '='     |   |-CXXDependentScopeMemberExpr 0x12482aa70 <col:3, col:19> '<dependent type>' contains-errors lvalue ->stack_depth     |   | `-CXXDependentScopeMemberExpr 0x12482aa28 <col:3, col:14> '<dependent type>' contains-errors lvalue ->aux     |   |   `-RecoveryExpr 0x12482aa00 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x124829dc0 <col:3> 'struct bpf_verifier_env *' lvalue ParmVar 0x12480e248 'env' 'struct bpf_verifier_env *'     |   `-UnaryOperator 0x12482aaf0 <col:33, col:34> 'int' prefix '-'     |     `-ImplicitCastExpr 0x12482aad8 <col:34> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x12482aab8 <col:34> 'int' lvalue Var 0x124827cf8 'off' 'int'     |-IfStmt 0x12482ad80 <line:40:2, line:44:2>     | |-BinaryOperator 0x12482abc8 <line:40:6, col:20> 'int' contains-errors '&&'     | | |-DeclRefExpr 0x12482ab48 <col:6> 'struct bpf_call_arg_meta *' lvalue ParmVar 0x1248275d8 'meta' 'struct bpf_call_arg_meta *'     | | `-RecoveryExpr 0x12482aba0 <col:14, col:20> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12482ab68 <col:14> 'struct bpf_call_arg_meta *' lvalue ParmVar 0x1248275d8 'meta' 'struct bpf_call_arg_meta *'     | `-CompoundStmt 0x12482ad58 <col:30, line:44:2>     |   |-BinaryOperator 0x12482ac68 <line:41:3, col:23> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x12482ac20 <col:3, col:9> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x12482abe8 <col:3> 'struct bpf_call_arg_meta *' lvalue ParmVar 0x1248275d8 'meta' 'struct bpf_call_arg_meta *'     |   | `-DeclRefExpr 0x12482ac48 <col:23> 'int' lvalue ParmVar 0x12480e348 'access_size' 'int'     |   |-BinaryOperator 0x12482ad08 <line:42:3, col:17> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x12482acc0 <col:3, col:9> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x12482ac88 <col:3> 'struct bpf_call_arg_meta *' lvalue ParmVar 0x1248275d8 'meta' 'struct bpf_call_arg_meta *'     |   | `-DeclRefExpr 0x12482ace8 <col:17> 'int' lvalue ParmVar 0x12480e2c8 'regno' 'int'     |   `-ReturnStmt 0x12482ad48 <line:43:3, col:10>     |     `-IntegerLiteral 0x12482ad28 <col:10> 'int' 0     |-ForStmt 0x12482b438 <line:46:2, line:56:2>     | |-BinaryOperator 0x12482ade0 <line:46:7, col:11> 'int' '='     | | |-DeclRefExpr 0x12482ada0 <col:7> 'int' lvalue Var 0x124827d78 'i' 'int'     | | `-IntegerLiteral 0x12482adc0 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x12482ae70 <col:14, col:18> 'int' '<'     | | |-ImplicitCastExpr 0x12482ae40 <col:14> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x12482ae00 <col:14> 'int' lvalue Var 0x124827d78 'i' 'int'     | | `-ImplicitCastExpr 0x12482ae58 <col:18> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x12482ae20 <col:18> 'int' lvalue ParmVar 0x12480e348 'access_size' 'int'     | |-UnaryOperator 0x12482aeb0 <col:31, col:32> 'int' postfix '++'     | | `-DeclRefExpr 0x12482ae90 <col:31> 'int' lvalue Var 0x124827d78 'i' 'int'     | `-CompoundStmt 0x12482b418 <col:36, line:56:2>     |   |-BinaryOperator 0x12482aff0 <line:47:3, col:23> 'int' '='     |   | |-DeclRefExpr 0x12482aec8 <col:3> 'int' lvalue Var 0x124827df8 'slot' 'int'     |   | `-BinaryOperator 0x12482afd0 <col:10, col:23> 'int' '-'     |   |   |-UnaryOperator 0x12482af98 <col:10, col:19> 'int' prefix '-'     |   |   | `-ParenExpr 0x12482af78 <col:11, col:19> 'int'     |   |   |   `-BinaryOperator 0x12482af58 <col:12, col:18> 'int' '+'     |   |   |     |-ImplicitCastExpr 0x12482af28 <col:12> 'int' <LValueToRValue>     |   |   |     | `-DeclRefExpr 0x12482aee8 <col:12> 'int' lvalue Var 0x124827cf8 'off' 'int'     |   |   |     `-ImplicitCastExpr 0x12482af40 <col:18> 'int' <LValueToRValue>     |   |   |       `-DeclRefExpr 0x12482af08 <col:18> 'int' lvalue Var 0x124827d78 'i' 'int'     |   |   `-IntegerLiteral 0x12482afb0 <col:23> 'int' 1     |   `-IfStmt 0x12482b3f8 <line:49:3, line:55:3>     |     |-RecoveryExpr 0x12482b228 <line:49:7, line:51:4> '_Bool' contains-errors     |     `-CompoundStmt 0x12482b3e0 <col:16, line:55:3>     |       `-CallExpr 0x12482b320 <line:52:4, line:53:24> 'int'     |         |-ImplicitCastExpr 0x12482b308 <line:52:4> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x12482b248 <col:4> 'int ()' Function 0x124828308 'verbose' 'int ()'     |         |-ImplicitCastExpr 0x12482b368 <col:12> 'struct bpf_verifier_env *' <LValueToRValue>     |         | `-DeclRefExpr 0x12482b268 <col:12> 'struct bpf_verifier_env *' lvalue ParmVar 0x12480e248 'env' 'struct bpf_verifier_env *'     |         |-ImplicitCastExpr 0x12482b380 <col:17> 'char *' <ArrayToPointerDecay>     |         | `-StringLiteral 0x12482b288 <col:17> 'char[4]' lvalue \"STR\"     |         |-ImplicitCastExpr 0x12482b398 <line:53:5> 'int' <LValueToRValue>     |         | `-DeclRefExpr 0x12482b2a8 <col:5> 'int' lvalue Var 0x124827cf8 'off' 'int'     |         |-ImplicitCastExpr 0x12482b3b0 <col:10> 'int' <LValueToRValue>     |         | `-DeclRefExpr 0x12482b2c8 <col:10> 'int' lvalue Var 0x124827d78 'i' 'int'     |         `-ImplicitCastExpr 0x12482b3c8 <col:13> 'int' <LValueToRValue>     |           `-DeclRefExpr 0x12482b2e8 <col:13> 'int' lvalue ParmVar 0x12480e348 'access_size' 'int'     `-ReturnStmt 0x12482b490 <line:57:2, col:9>       `-IntegerLiteral 0x12482b470 <col:9> 'int' 0 ","19609":"`-FunctionDecl 0x1328085f8  line:1:12 pfkey_register 'int (struct sock *, struct sk_buff *, const struct sadb_msg *, void *const *)' static   |-ParmVarDecl 0x132128648 <col:27, col:40> col:40 used sk 'struct sock *'   |-ParmVarDecl 0x132808228 <col:44, col:60> col:60 skb 'struct sk_buff *'   |-ParmVarDecl 0x1328083f8 <col:65, col:88> col:88 used hdr 'const struct sadb_msg *'   |-ParmVarDecl 0x1328084a8 <col:93, col:107> col:107 ext_hdrs 'void *const *'   `-CompoundStmt 0x1338091d8 <line:2:1, line:28:1>     |-DeclStmt 0x132808b08 <line:3:2, col:39>     | |-RecordDecl 0x132808708 <col:2, col:9> col:9 struct pfkey_sock     | `-VarDecl 0x132808878 <col:2, col:38> col:21 used pfk 'struct pfkey_sock *' cinit     |   `-ImplicitCastExpr 0x132808ad8 <col:27, col:38> 'struct pfkey_sock *' <IntegralToPointer>     |     `-CallExpr 0x132808a98 <col:27, col:38> 'int'     |       |-ImplicitCastExpr 0x132808a80 <col:27> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x132808a10 <col:27> 'int ()' Function 0x132808958 'pfkey_sk' 'int ()'     |       `-ImplicitCastExpr 0x132808ac0 <col:36> 'struct sock *' <LValueToRValue>     |         `-DeclRefExpr 0x132808a30 <col:36> 'struct sock *' lvalue ParmVar 0x132128648 'sk' 'struct sock *'     |-DeclStmt 0x132808c10 <line:4:2, col:26>     | `-VarDecl 0x132808ba8 <col:2, col:18> col:18 used supp_skb 'struct sk_buff *'     |-IfStmt 0x132808da8 <line:6:2, line:7:11>     | |-BinaryOperator 0x132808ce0 <line:6:6, col:29> 'int' contains-errors '>'     | | |-RecoveryExpr 0x132808c60 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x132808c28 <col:6> 'const struct sadb_msg *' lvalue ParmVar 0x1328083f8 'hdr' 'const struct sadb_msg *'     | | `-RecoveryExpr 0x132808cc0 <col:29> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x132808d98 <line:7:3, col:11>     |   `-UnaryOperator 0x132808d80 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x132808d68 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x132808d48 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x133808820 <line:9:2, line:13:2>     | |-BinaryOperator 0x132808e80 <line:9:6, col:30> 'int' contains-errors '!='     | | |-RecoveryExpr 0x132808e00 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x132808dc8 <col:6> 'const struct sadb_msg *' lvalue ParmVar 0x1328083f8 'hdr' 'const struct sadb_msg *'     | | `-RecoveryExpr 0x132808e60 <col:30> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x133808800 <col:50, line:13:2>     |   |-IfStmt 0x132809088 <line:10:3, line:11:12>     |   | |-BinaryOperator 0x132808fc0 <line:10:7, col:47> '<dependent type>' contains-errors '&'     |   | | |-RecoveryExpr 0x132808ed8 <col:7, col:12> '<dependent type>' contains-errors lvalue     |   | | | `-DeclRefExpr 0x132808ea0 <col:7> 'struct pfkey_sock *' lvalue Var 0x132808878 'pfk' 'struct pfkey_sock *'     |   | | `-ParenExpr 0x132808fa0 <col:23, col:47> '<dependent type>' contains-errors     |   | |   `-BinaryOperator 0x132808f80 <col:24, col:32> '<dependent type>' contains-errors '<<'     |   | |     |-IntegerLiteral 0x132808f00 <col:24> 'int' 1     |   | |     `-RecoveryExpr 0x132808f58 <col:27, col:32> '<dependent type>' contains-errors lvalue     |   | |       `-DeclRefExpr 0x132808f20 <col:27> 'const struct sadb_msg *' lvalue ParmVar 0x1328083f8 'hdr' 'const struct sadb_msg *'     |   | `-ReturnStmt 0x132809078 <line:11:4, col:12>     |   |   `-UnaryOperator 0x132809060 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |     `-ImplicitCastExpr 0x132809048 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |   |       `-RecoveryExpr 0x132809028 <col:12> '<dependent type>' contains-errors lvalue     |   `-CompoundAssignOperator 0x1328091c8 <line:12:3, col:46> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |     |-RecoveryExpr 0x1328090e0 <col:3, col:8> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x1328090a8 <col:3> 'struct pfkey_sock *' lvalue Var 0x132808878 'pfk' 'struct pfkey_sock *'     |     `-ParenExpr 0x1328091a8 <col:22, col:46> '<dependent type>' contains-errors     |       `-BinaryOperator 0x132809188 <col:23, col:31> '<dependent type>' contains-errors '<<'     |         |-IntegerLiteral 0x132809108 <col:23> 'int' 1     |         `-RecoveryExpr 0x132809160 <col:26, col:31> '<dependent type>' contains-errors lvalue     |           `-DeclRefExpr 0x132809128 <col:26> 'const struct sadb_msg *' lvalue ParmVar 0x1328083f8 'hdr' 'const struct sadb_msg *'     |-CallExpr 0x133808958 <line:15:2, col:18> 'int'     | `-ImplicitCastExpr 0x133808940 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x133808920 <col:2> 'int ()' Function 0x133808868 'xfrm_probe_algs' 'int ()'     |-BinaryOperator 0x133808be8 <line:17:2, col:64> 'struct sk_buff *' contains-errors '='     | |-DeclRefExpr 0x133808978 <col:2> 'struct sk_buff *' lvalue Var 0x132808ba8 'supp_skb' 'struct sk_buff *'     | `-CallExpr 0x133808bb8 <col:13, col:64> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x133808a78 <col:13> 'int ()' Function 0x1338089c0 'compose_sadb_supported' 'int ()'     |   |-DeclRefExpr 0x133808a98 <col:36> 'const struct sadb_msg *' lvalue ParmVar 0x1328083f8 'hdr' 'const struct sadb_msg *'     |   `-BinaryOperator 0x133808b98 <col:41, col:54> '<dependent type>' contains-errors '|'     |     |-RecoveryExpr 0x133808b58 <col:41> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x133808b78 <col:54> '<dependent type>' contains-errors lvalue     |-IfStmt 0x133808ed0 <line:18:2, line:23:2>     | |-UnaryOperator 0x133808c40 <line:18:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x133808c28 <col:7> 'struct sk_buff *' <LValueToRValue>     | |   `-DeclRefExpr 0x133808c08 <col:7> 'struct sk_buff *' lvalue Var 0x132808ba8 'supp_skb' 'struct sk_buff *'     | `-CompoundStmt 0x133808eb8 <col:17, line:23:2>     |   `-IfStmt 0x133808e98 <line:19:3, line:20:48>     |     |-BinaryOperator 0x133808d10 <line:19:7, col:31> 'int' contains-errors '!='     |     | |-RecoveryExpr 0x133808c90 <col:7, col:12> '<dependent type>' contains-errors lvalue     |     | | `-DeclRefExpr 0x133808c58 <col:7> 'const struct sadb_msg *' lvalue ParmVar 0x1328083f8 'hdr' 'const struct sadb_msg *'     |     | `-RecoveryExpr 0x133808cf0 <col:31> '<dependent type>' contains-errors lvalue     |     `-CompoundAssignOperator 0x133808e68 <line:20:4, col:48> '<dependent type>' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |       |-RecoveryExpr 0x133808d68 <col:4, col:9> '<dependent type>' contains-errors lvalue     |       | `-DeclRefExpr 0x133808d30 <col:4> 'struct pfkey_sock *' lvalue Var 0x132808878 'pfk' 'struct pfkey_sock *'     |       `-UnaryOperator 0x133808e50 <col:23, col:48> '<dependent type>' contains-errors prefix '~' cannot overflow     |         `-ParenExpr 0x133808e30 <col:24, col:48> '<dependent type>' contains-errors     |           `-BinaryOperator 0x133808e10 <col:25, col:33> '<dependent type>' contains-errors '<<'     |             |-IntegerLiteral 0x133808d90 <col:25> 'int' 1     |             `-RecoveryExpr 0x133808de8 <col:28, col:33> '<dependent type>' contains-errors lvalue     |               `-DeclRefExpr 0x133808db0 <col:28> 'const struct sadb_msg *' lvalue ParmVar 0x1328083f8 'hdr' 'const struct sadb_msg *'     `-ReturnStmt 0x1338091c8 <line:27:2, col:9>       `-IntegerLiteral 0x1338091a8 <col:9> 'int' 0 ","19897":"`-FunctionDecl 0x12f0e8f50  line:1:6 md_super_wait 'void (struct mddev *)'   |-ParmVarDecl 0x12f0e8e48 <col:20, col:34> col:34 used mddev 'struct mddev *'   `-CompoundStmt 0x12f105800 <line:2:1, line:5:1>     `-CallExpr 0x12f1057d0 <line:4:2, col:67> '<dependent type>' contains-errors       |-DeclRefExpr 0x12f105570 <col:2> 'int ()' Function 0x12f1054b8 'wait_event' 'int ()'       |-RecoveryExpr 0x12f1055c8 <col:13, col:20> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x12f105590 <col:13> 'struct mddev *' lvalue ParmVar 0x12f0e8e48 'mddev' 'struct mddev *'       `-BinaryOperator 0x12f1057b0 <col:29, col:66> 'int' contains-errors '=='         |-CallExpr 0x12f105768 <col:29, col:63> '<dependent type>' contains-errors         | |-DeclRefExpr 0x12f1056d0 <col:29> 'int ()' Function 0x12f105618 'atomic_read' 'int ()'         | `-UnaryOperator 0x12f105750 <col:41, col:49> '<dependent type>' contains-errors prefix '&' cannot overflow         |   `-RecoveryExpr 0x12f105728 <col:42, col:49> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x12f1056f0 <col:42> 'struct mddev *' lvalue ParmVar 0x12f0e8e48 'mddev' 'struct mddev *'         `-IntegerLiteral 0x12f105790 <col:66> 'int' 0 ","19414":"`-FunctionDecl 0x14380ddf0  line:1:6 invalid hinf_del 'void (int *)'   |-ParmVarDecl 0x14380dd28 <col:15, col:23> col:23 invalid s 'int *'   `-CompoundStmt 0x14380e0d8 <line:2:1, line:5:1>     `-CallExpr 0x14380e0b0 <line:4:2, col:14> '<dependent type>' contains-errors       |-DeclRefExpr 0x14380e030 <col:2> 'int ()' Function 0x14380df78 'gf_free' 'int ()'       `-RecoveryExpr 0x14380e090 <col:10> '<dependent type>' contains-errors lvalue ","19294":"`-FunctionDecl 0x137128118  line:1:1 cleanup_the_pipeline 'int ()'   `-CompoundStmt 0x1371287a0 <line:2:1, line:13:1>     |-CallExpr 0x1371283d8 <line:6:3, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x137128318 <col:3> 'int ()' Function 0x137128260 'BLOCK_CHILD' 'int ()'     | |-RecoveryExpr 0x137128398 <col:16> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1371283b8 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x137128598 <line:9:3, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x137128518 <col:3> 'int ()' Function 0x137128460 'UNBLOCK_CHILD' 'int ()'     | `-RecoveryExpr 0x137128578 <col:18> '<dependent type>' contains-errors lvalue     `-IfStmt 0x137128780 <line:11:3, line:12:31>       |-RecoveryExpr 0x1371285d8 <line:11:7> '<dependent type>' contains-errors lvalue       `-CallExpr 0x137128758 <line:12:5, col:31> '<dependent type>' contains-errors         |-DeclRefExpr 0x1371286d8 <col:5> 'int ()' Function 0x137128620 'discard_pipeline' 'int ()'         `-RecoveryExpr 0x137128738 <col:23> '<dependent type>' contains-errors lvalue ","19116":"`-FunctionDecl 0x124940b10  col:9 implicit used calloc 'void *(unsigned long, unsigned long)' extern   |-ParmVarDecl 0x124940c10 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-ParmVarDecl 0x124940c78 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-BuiltinAttr 0x124940bb8 <<invalid sloc>> Implicit 868   `-AllocSizeAttr 0x124940cf0 <col:9> Implicit 1 2 ","19887":"`-FunctionDecl 0x11e940b48  line:1:12 route_doit 'int (struct sk_buff *, struct nlmsghdr *)' static   |-ParmVarDecl 0x11e928648 <col:23, col:39> col:39 used skb 'struct sk_buff *'   |-ParmVarDecl 0x11e940a28 <col:44, col:61> col:61 used nlh 'struct nlmsghdr *'   `-CompoundStmt 0x11e949310 <line:2:1, line:42:1>     |-DeclStmt 0x11e941010 <line:3:2, col:37>     | |-RecordDecl 0x11e940c48 <col:2, col:9> col:9 struct net     | `-VarDecl 0x11e940db8 <col:2, col:36> col:14 used net 'struct net *' cinit     |   `-CallExpr 0x11e940fd0 <col:20, col:36> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x11e940f50 <col:20> 'int ()' Function 0x11e940e98 'sock_net' 'int ()'     |     `-RecoveryExpr 0x11e940fa8 <col:29, col:34> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x11e940f70 <col:29> 'struct sk_buff *' lvalue ParmVar 0x11e928648 'skb' 'struct sk_buff *'     |-DeclStmt 0x11e941278 <line:4:2, col:30>     | |-RecordDecl 0x11e941028 <col:2, col:9> col:9 struct nlattr     | `-VarDecl 0x11e9411f8 <col:2, col:17> col:17 invalid tb 'struct nlattr *'     |-DeclStmt 0x11e941478 <line:5:2, col:24>     | |-RecordDecl 0x11e941290 <col:2, col:9> col:9 struct net_device     | `-VarDecl 0x11e9413f8 <col:2, col:21> col:21 used dev 'struct net_device *'     |-DeclStmt 0x11e941678 <line:6:2, col:19>     | |-RecordDecl 0x11e941490 <col:2, col:9> col:9 struct rtmsg     | `-VarDecl 0x11e9415f8 <col:2, col:16> col:16 used rtm 'struct rtmsg *'     |-DeclStmt 0x11e941710 <line:7:2, col:9>     | `-VarDecl 0x11e9416a8 <col:2, col:6> col:6 used err 'int'     |-IfStmt 0x11e941988 <line:10:2, line:11:11>     | |-UnaryOperator 0x11e9418c8 <line:10:6, col:28> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x11e9418a0 <col:7, col:28> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x11e941808 <col:7> 'int ()' Function 0x11e941750 'capable' 'int ()'     | |   `-RecoveryExpr 0x11e941880 <col:15> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x11e941978 <line:11:3, col:11>     |   `-UnaryOperator 0x11e941960 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x11e941948 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x11e941928 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x11e947148 <line:13:2, line:14:11>     | |-UnaryOperator 0x11e947088 <line:13:6, col:28> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x11e947060 <col:7, col:28> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x11e9419a8 <col:7> 'int ()' Function 0x11e941750 'capable' 'int ()'     | |   `-RecoveryExpr 0x11e947040 <col:15> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x11e947138 <line:14:3, col:11>     |   `-UnaryOperator 0x11e947120 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x11e947108 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x11e9470e8 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x11e9472b8 <line:16:2, col:14> 'int'     | `-ImplicitCastExpr 0x11e9472a0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x11e947248 <col:2> 'int ()' Function 0x11e947190 'ASSERT_RTNL' 'int ()'     |-IfStmt 0x11e947598 <line:19:2, line:20:10>     | |-BinaryOperator 0x11e947530 <line:19:6, col:12> 'int' '<'     | | |-ImplicitCastExpr 0x11e947518 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x11e9474d8 <col:6> 'int' lvalue Var 0x11e9416a8 'err' 'int'     | | `-IntegerLiteral 0x11e9474f8 <col:12> 'int' 0     | `-ReturnStmt 0x11e947588 <line:20:3, col:10>     |   `-ImplicitCastExpr 0x11e947570 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x11e947550 <col:10> 'int' lvalue Var 0x11e9416a8 'err' 'int'     |-BinaryOperator 0x11e947768 <line:22:2, col:22> 'struct rtmsg *' '='     | |-DeclRefExpr 0x11e9475b8 <col:2> 'struct rtmsg *' lvalue Var 0x11e9415f8 'rtm' 'struct rtmsg *'     | `-ImplicitCastExpr 0x11e947750 <col:8, col:22> 'struct rtmsg *' <IntegralToPointer>     |   `-CallExpr 0x11e947710 <col:8, col:22> 'int'     |     |-ImplicitCastExpr 0x11e9476f8 <col:8> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x11e9476b8 <col:8> 'int ()' Function 0x11e947600 'nlmsg_data' 'int ()'     |     `-ImplicitCastExpr 0x11e947738 <col:19> 'struct nlmsghdr *' <LValueToRValue>     |       `-DeclRefExpr 0x11e9476d8 <col:19> 'struct nlmsghdr *' lvalue ParmVar 0x11e940a28 'nlh' 'struct nlmsghdr *'     `-ReturnStmt 0x11e949300 <line:41:2, col:9>       `-ImplicitCastExpr 0x11e9492e8 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x11e9492c8 <col:9> 'int' lvalue Var 0x11e9416a8 'err' 'int' ","19925":"`-FunctionDecl 0x149822df0  col:2 implicit used printf 'int (const char *, ...)' extern   |-ParmVarDecl 0x149822ef0 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x149822e98 <<invalid sloc>> Implicit 903   `-FormatAttr 0x149822f60 <col:2> Implicit printf 1 2 ","19658":"`-FunctionDecl 0x15100ddc8  line:1:1 invalid bson_iter_time_t 'int (const int *)'   |-ParmVarDecl 0x15100dcf0 <col:19, col:38> col:38 invalid iter 'const int *'   `-CompoundStmt 0x15100e3b8 <line:2:1, line:10:1>     |-CallExpr 0x15100e010 <line:3:4, col:21> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15100dfd0 <col:4> 'int ()' Function 0x15100df18 'BSON_ASSERT' 'int ()'     | `-RecoveryExpr 0x15100dff0 <col:17> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15100e368 <line:5:4, line:7:4>     | |-BinaryOperator 0x15100e1d8 <line:5:8, col:28> 'int' contains-errors '=='     | | |-CallExpr 0x15100e158 <col:8, col:23> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x15100e118 <col:8> 'int ()' Function 0x15100e060 'ITER_TYPE' 'int ()'     | | | `-RecoveryExpr 0x15100e138 <col:19> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x15100e1b8 <col:28> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x15100e350 <col:49, line:7:4>     |   `-ReturnStmt 0x15100e340 <line:6:7, col:43>     |     `-CallExpr 0x15100e318 <col:14, col:43> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x15100e2d8 <col:14> 'int ()' Function 0x15100e220 'bson_iter_time_t_unsafe' 'int ()'     |       `-RecoveryExpr 0x15100e2f8 <col:39> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x15100e3a8 <line:9:4, col:11>       `-IntegerLiteral 0x15100e388 <col:11> 'int' 0 ","19338":"`-FunctionDecl 0x13100df18  line:1:1 invalid DefineViewRules 'int (int, int *, int)'   |-ParmVarDecl 0x13100dcf0 <col:17, col:21> col:21 invalid viewOid 'int'   |-ParmVarDecl 0x13100dda8 <col:30, col:37> col:37 invalid viewParse 'int *'   |-ParmVarDecl 0x13100de28 <col:48, col:53> col:53 invalid replace 'int'   `-CompoundStmt 0x1310291c0 <line:2:1, line:13:1>     `-CallExpr 0x131029168 <line:4:2, line:10:30> '<dependent type>' contains-errors       |-DeclRefExpr 0x13100e130 <line:4:2> 'int ()' Function 0x13100e078 'DefineQueryRewrite' 'int ()'       |-CallExpr 0x1310290e0 <col:21, col:47> '<dependent type>' contains-errors       | |-DeclRefExpr 0x13100e230 <col:21> 'int ()' Function 0x13100e178 'pstrdup' 'int ()'       | `-RecoveryExpr 0x1310290c0 <col:29> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x13100e290 <line:5:9> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x131029108 <line:6:9> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x131029128 <line:7:9> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x131029148 <line:8:9> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x13100e2f8 <line:9:9> '<dependent type>' contains-errors lvalue       `-CallExpr 0x131029040 <line:10:9, col:29> '<dependent type>' contains-errors         |-DeclRefExpr 0x131029000 <col:9> 'int ()' Function 0x13100e340 'list_make1' 'int ()'         `-RecoveryExpr 0x131029020 <col:20> '<dependent type>' contains-errors lvalue ","19723":"`-FunctionDecl 0x127928758  line:1:29 rb_page_entries 'unsigned long (struct buffer_page *)' static inline   |-ParmVarDecl 0x127928648 <col:45, col:65> col:65 used bpage 'struct buffer_page *'   `-CompoundStmt 0x127940cc8 <line:2:1, line:4:1>     `-ReturnStmt 0x127940cb8 <line:3:2, col:39>       `-BinaryOperator 0x127940c98 <col:9, col:39> '<dependent type>' contains-errors '&'         |-CallExpr 0x127940c18 <col:9, col:35> '<dependent type>' contains-errors         | |-DeclRefExpr 0x127940b80 <col:9> 'int ()' Function 0x127940ac8 'local_read' 'int ()'         | `-UnaryOperator 0x127940c00 <col:20, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow         |   `-RecoveryExpr 0x127940bd8 <col:21, col:28> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x127940ba0 <col:21> 'struct buffer_page *' lvalue ParmVar 0x127928648 'bpage' 'struct buffer_page *'         `-RecoveryExpr 0x127940c78 <col:39> '<dependent type>' contains-errors lvalue ","19235":"`-FunctionDecl 0x13180dee8  line:1:1 invalid RenameRelationInternal 'int (int, const char *, int)'   |-ParmVarDecl 0x13180dcf0 <col:24, col:28> col:28 invalid myrelid 'int'   |-ParmVarDecl 0x13180dd70 <col:37, col:49> col:49 used newrelname 'const char *'   |-ParmVarDecl 0x13180ddf0 <col:61, col:66> col:66 invalid is_internal 'int'   `-CompoundStmt 0x131828fc8 <line:2:1, line:57:1>     `-IfStmt 0x131828ea8 <line:47:2, line:53:2>       |-RecoveryExpr 0x131828d18 <line:47:6, col:41> '_Bool' contains-errors       `-CompoundStmt 0x131828e98 <line:48:2, line:53:2> ","19435":"`-FunctionDecl 0x13d128288  line:1:1 invalid dns_zone_setautomatic 'int (int *, int)'   |-ParmVarDecl 0x13d128128 <col:23, col:35> col:35 referenced invalid zone 'int *'   |-ParmVarDecl 0x13d1281a8 <col:41, col:46> col:46 invalid automatic 'int'   `-CompoundStmt 0x13d1419d0 <col:57, line:7:1>     |-CallExpr 0x13d128608 <line:2:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d1284a0 <col:2> 'int ()' Function 0x13d1283e8 'REQUIRE' 'int ()'     | `-CallExpr 0x13d1285e0 <col:10, col:29> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13d1285a0 <col:10> 'int ()' Function 0x13d1284e8 'DNS_ZONE_VALID' 'int ()'     |   `-RecoveryExpr 0x13d1285c0 <col:25> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13d128750 <line:4:2, col:16> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d128710 <col:2> 'int ()' Function 0x13d128658 'LOCK_ZONE' 'int ()'     | `-RecoveryExpr 0x13d128730 <col:12> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13d141868 <line:5:2, col:20> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13d141800 <col:2, col:8> '<dependent type>' contains-errors lvalue ->automatic     | | `-RecoveryExpr 0x13d128798 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13d128778 <col:2> 'int *' lvalue ParmVar 0x13d128128 'zone' 'int *'     | `-RecoveryExpr 0x13d141848 <col:20> '<dependent type>' contains-errors lvalue     `-CallExpr 0x13d1419a8 <line:6:2, col:18> '<dependent type>' contains-errors       |-DeclRefExpr 0x13d141968 <col:2> 'int ()' Function 0x13d1418b0 'UNLOCK_ZONE' 'int ()'       `-RecoveryExpr 0x13d141988 <col:14> '<dependent type>' contains-errors lvalue ","19250":"`-FunctionDecl 0x151828ca0  col:20 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x151828da0 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x151828d48 <<invalid sloc>> Implicit 902 ","19515":"`-FunctionDecl 0x14a82e3b8  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x14a82e4b8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x14a82e520 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x14a82e588 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14a82e460 <<invalid sloc>> Implicit 900 ","20073":"`-FunctionDecl 0x11f80de88  line:1:13 invalid update_send_switch_surface_order 'int (int *, const int *)' static   |-ParmVarDecl 0x11f80dd28 <col:46, col:58> col:58 invalid context 'int *'   |-ParmVarDecl 0x11f80dda8 <line:2:46, col:74> col:74 invalid switch_surface 'const int *'   `-CompoundStmt 0x11f8282a8 <line:3:1, line:41:1>     |-DeclStmt 0x11f80e060 <line:8:2, col:18>     | `-VarDecl 0x11f80dff8 <col:2, col:6> col:6 used headerLength 'int'     |-IfStmt 0x11f80e320 <line:11:2, line:12:10>     | |-BinaryOperator 0x11f80e2b8 <line:11:6, col:47> 'int' contains-errors '||'     | | |-BinaryOperator 0x11f80e268 <col:6, col:19> 'int' contains-errors '||'     | | | |-UnaryOperator 0x11f80e220 <col:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | `-ImplicitCastExpr 0x11f80e208 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | | | |   `-RecoveryExpr 0x11f80e090 <col:7> '<dependent type>' contains-errors lvalue     | | | `-UnaryOperator 0x11f80e250 <col:18, col:19> '<dependent type>' contains-errors prefix '!' cannot overflow     | | |   `-ImplicitCastExpr 0x11f80e238 <col:19> '<dependent type>' contains-errors <LValueToRValue>     | | |     `-RecoveryExpr 0x11f80e0e0 <col:19> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x11f80e2a0 <col:37, col:47> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x11f80e288 <col:38, col:47> '<dependent type>' contains-errors <LValueToRValue>     | |     `-CXXDependentScopeMemberExpr 0x11f80e170 <col:38, col:47> '<dependent type>' contains-errors lvalue ->update     | |       `-RecoveryExpr 0x11f80e150 <col:38> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x11f80e310 <line:12:3, col:10>     |   `-RecoveryExpr 0x11f80e2f0 <col:10> '<dependent type>' contains-errors lvalue     `-BinaryOperator 0x11f827800 <line:15:2, col:17> 'int' '='       |-DeclRefExpr 0x11f80e3a8 <col:2> 'int' lvalue Var 0x11f80dff8 'headerLength' 'int'       `-IntegerLiteral 0x11f80e3c8 <col:17> 'int' 1 ","19600":"`-FunctionDecl 0x144929358  line:1:1 pax_decode_header 'int (struct tar_sparse_file *)'   |-ParmVarDecl 0x144929248 <col:20, col:44> col:44 used file 'struct tar_sparse_file *'   `-CompoundStmt 0x14500b300 <line:2:1, line:80:1>     `-IfStmt 0x14500b2e0 <line:3:3, line:77:5>       |-BinaryOperator 0x144941718 <line:3:7, col:39> 'int' contains-errors '>'       | |-CXXDependentScopeMemberExpr 0x1449416b0 <col:7, col:24> '<dependent type>' contains-errors lvalue ->sparse_major       | | `-RecoveryExpr 0x144941688 <col:7, col:13> '<dependent type>' contains-errors lvalue       | |   `-DeclRefExpr 0x144941650 <col:7> 'struct tar_sparse_file *' lvalue ParmVar 0x144929248 'file' 'struct tar_sparse_file *'       | `-IntegerLiteral 0x1449416f8 <col:39> 'int' 0       `-CompoundStmt 0x14500b270 <line:4:5, line:77:5>         |-DeclStmt 0x1449417e0 <line:6:7, col:39>         | `-VarDecl 0x144941778 <col:7, col:12> col:12 referenced invalid nbuf 'char'         |-DeclStmt 0x1449419e8 <line:7:7, col:23>         | |-RecordDecl 0x1449417f8 <col:7, col:13> col:13 union block         | `-VarDecl 0x144941968 <col:7, col:20> col:20 used blk 'union block *'         |-DeclStmt 0x144941a80 <line:8:7, col:14>         | `-VarDecl 0x144941a18 <col:7, col:13> col:13 used p 'char *'         |-UnaryExprOrTypeTraitExpr 0x144941af0 <line:9:7, col:14> 'unsigned long' contains-errors sizeof         | `-RecoveryExpr 0x144941ad0 <col:14> '<dependent type>' contains-errors lvalue         |-CompoundStmt 0x145009048 <line:13:2, line:35:2>         | |-DeclStmt 0x144941cd0 <line:14:4, col:38>         | | `-VarDecl 0x144941b28 <col:4, col:29> col:10 used endp 'char *' cinit         | |   `-BinaryOperator 0x144941cb0 <col:17, col:29> '<dependent type>' contains-errors '+'         | |     |-CXXDependentScopeMemberExpr 0x144941c48 <col:17, col:20> '<dependent type>' contains-errors lvalue ->buffer         | |     | `-RecoveryExpr 0x144941c28 <col:17> '<dependent type>' contains-errors lvalue         | |     `-RecoveryExpr 0x144941c90 <col:29> '<dependent type>' contains-errors lvalue         | |-DeclStmt 0x144941dc0 <line:15:4, col:19>         | | `-VarDecl 0x144941d00 <col:4, col:16> col:10 used dst 'char *' cinit         | |   `-RecoveryExpr 0x144941da0 <col:16> '<dependent type>' contains-errors lvalue         | |-DoStmt 0x145008f40 <line:16:4, line:33:25>         | | |-CompoundStmt 0x145008e68 <line:17:6, line:32:6>         | | | |-IfStmt 0x144942448 <line:18:8, line:23:10>         | | | | |-BinaryOperator 0x144941f48 <line:18:12, col:48> 'int' contains-errors '=='         | | | | | |-DeclRefExpr 0x144941dd8 <col:12> 'char *' contains-errors lvalue Var 0x144941d00 'dst' 'char *'         | | | | | `-BinaryOperator 0x144941f28 <col:19, col:48> '<dependent type>' contains-errors '-'         | | | | |   |-BinaryOperator 0x144941f08 <col:19, col:25> '<dependent type>' contains-errors '+'         | | | | |   | |-RecoveryExpr 0x144941ec8 <col:19> '<dependent type>' contains-errors lvalue         | | | | |   | `-RecoveryExpr 0x144941ee8 <col:25> '<dependent type>' contains-errors lvalue         | | | | |   `-IntegerLiteral 0x144941e48 <col:48> 'int' 1         | | | | `-CompoundStmt 0x144942430 <line:19:10, line:23:10>         | | | |   `-CallExpr 0x1449423f0 <line:20:12, line:21:44> '<dependent type>' contains-errors         | | | |     |-DeclRefExpr 0x144942080 <line:20:12> 'int ()' Function 0x144941fc8 'ERROR' 'int ()'         | | | |     `-ParenExpr 0x1449423d0 <col:19, line:21:43> '<dependent type>' contains-errors         | | | |       `-BinaryOperator 0x1449423b0 <line:20:20, line:21:29> '<dependent type>' contains-errors ','         | | | |         |-BinaryOperator 0x1449422e8 <line:20:20, col:33> 'int' ','         | | | |         | |-BinaryOperator 0x1449420e0 <col:20, col:23> 'int' ','         | | | |         | | |-IntegerLiteral 0x1449420a0 <col:20> 'int' 0         | | | |         | | `-IntegerLiteral 0x1449420c0 <col:23> 'int' 0         | | | |         | `-CallExpr 0x1449422a8 <col:26, col:33> 'int'         | | | |         |   |-ImplicitCastExpr 0x144942290 <col:26> 'int (*)()' <FunctionToPointerDecay>         | | | |         |   | `-DeclRefExpr 0x1449421e0 <col:26> 'int ()' Function 0x144942128 '_' 'int ()'         | | | |         |   `-ImplicitCastExpr 0x1449422d0 <col:28> 'char *' <ArrayToPointerDecay>         | | | |         |     `-StringLiteral 0x144942240 <col:28> 'char[4]' lvalue \"STR\"         | | | |         `-CXXDependentScopeMemberExpr 0x144942368 <line:21:12, col:29> '<dependent type>' contains-errors lvalue ->orig_file_name         | | | |           `-RecoveryExpr 0x144942340 <col:12, col:18> '<dependent type>' contains-errors lvalue         | | | |             `-DeclRefExpr 0x144942308 <col:12> 'struct tar_sparse_file *' lvalue ParmVar 0x144929248 'file' 'struct tar_sparse_file *'         | | | `-IfStmt 0x145008df8 <line:24:8, line:30:3>         | | |   |-BinaryOperator 0x1449424e0 <line:24:12, col:19> 'int' contains-errors '=='         | | |   | |-RecoveryExpr 0x1449424c0 <col:12> '<dependent type>' contains-errors lvalue         | | |   | `-DeclRefExpr 0x144942480 <col:19> 'char *' contains-errors lvalue Var 0x144941b28 'endp' 'char *'         | | |   `-CompoundStmt 0x145008de0 <line:25:3, line:30:3>         | | |     `-CallExpr 0x145008c60 <line:26:5, col:28> '<dependent type>' contains-errors         | | |       |-DeclRefExpr 0x1449425e0 <col:5> 'int ()' Function 0x144942528 'set_next_block_after' 'int ()'         | | |       `-RecoveryExpr 0x145008c40 <col:27> '<dependent type>' contains-errors lvalue         | | `-BinaryOperator 0x145008f20 <line:33:11, col:21> 'int' contains-errors '!='         | |   |-ImplicitCastExpr 0x145008f08 <col:11, col:15> 'int' contains-errors <IntegralCast>         | |   | `-ImplicitCastExpr 0x145008ef0 <col:11, col:15> 'char' contains-errors <LValueToRValue>         | |   |   `-UnaryOperator 0x145008ec0 <col:11, col:15> 'char' contains-errors lvalue prefix '*' cannot overflow         | |   |     `-UnaryOperator 0x145008ea8 <col:12, col:15> 'char *' contains-errors postfix '++'         | |   |       `-DeclRefExpr 0x145008e88 <col:12> 'char *' contains-errors lvalue Var 0x144941d00 'dst' 'char *'         | |   `-CharacterLiteral 0x145008ed8 <col:21> 'int' 10         | `-BinaryOperator 0x145009028 <line:34:4, col:14> 'char' contains-errors '='         |   |-ArraySubscriptExpr 0x145008fd0 <col:4, col:10> 'char' contains-errors lvalue         |   | |-ImplicitCastExpr 0x145008fb8 <col:4> 'char *' contains-errors <LValueToRValue>         |   | | `-DeclRefExpr 0x145008f60 <col:4> 'char *' contains-errors lvalue Var 0x144941d00 'dst' 'char *'         |   | `-UnaryOperator 0x145008fa0 <col:8, col:9> 'int' prefix '-'         |   |   `-IntegerLiteral 0x145008f80 <col:9> 'int' 1         |   `-ImplicitCastExpr 0x145009010 <col:14> 'char' <IntegralCast>         |     `-IntegerLiteral 0x145008ff0 <col:14> 'int' 0         |-BinaryOperator 0x145009280 <line:39:7, col:30> 'union block *' '='         | |-DeclRefExpr 0x1450091f0 <col:7> 'union block *' lvalue Var 0x144941968 'blk' 'union block *'         | `-ImplicitCastExpr 0x145009268 <col:13, col:30> 'union block *' <IntegralToPointer>         |   `-CallExpr 0x145009248 <col:13, col:30> 'int'         |     `-ImplicitCastExpr 0x145009230 <col:13> 'int (*)()' <FunctionToPointerDecay>         |       `-DeclRefExpr 0x145009210 <col:13> 'int ()' Function 0x145008cb0 'find_next_block' 'int ()'         |-BinaryOperator 0x145009320 <line:40:7, col:16> 'char *' contains-errors '='         | |-DeclRefExpr 0x1450092a0 <col:7> 'char *' lvalue Var 0x144941a18 'p' 'char *'         | `-RecoveryExpr 0x1450092f8 <col:11, col:16> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x1450092c0 <col:11> 'union block *' lvalue Var 0x144941968 'blk' 'union block *'         |-CallExpr 0x1450094a0 <line:41:7, col:27> '<dependent type>' contains-errors         | |-DeclRefExpr 0x145009420 <col:7> 'int ()' Function 0x145009368 'COPY_BUF' 'int ()'         | |-DeclRefExpr 0x145009440 <col:17> 'union block *' lvalue Var 0x144941968 'blk' 'union block *'         | |-RecoveryExpr 0x145009460 <col:21> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x145009480 <col:26> 'char *' lvalue Var 0x144941a18 'p' 'char *'         |-IfStmt 0x145009af0 <line:42:7, line:47:2>         | |-RecoveryExpr 0x1450096f8 <line:42:11, col:55> '_Bool' contains-errors         | `-CompoundStmt 0x145009ad8 <line:43:2, line:47:2>         |   `-CallExpr 0x145009ab0 <line:44:4, line:45:37> '<dependent type>' contains-errors         |     |-DeclRefExpr 0x145009718 <line:44:4> 'int ()' Function 0x144941fc8 'ERROR' 'int ()'         |     `-ParenExpr 0x145009a90 <col:11, line:45:36> '<dependent type>' contains-errors         |       `-BinaryOperator 0x145009a70 <line:44:12, line:45:22> '<dependent type>' contains-errors ','         |         |-BinaryOperator 0x145009a50 <line:44:12, col:25> 'int' ','         |         | |-BinaryOperator 0x145009778 <col:12, col:15> 'int' ','         |         | | |-IntegerLiteral 0x145009738 <col:12> 'int' 0         |         | | `-IntegerLiteral 0x145009758 <col:15> 'int' 0         |         | `-CallExpr 0x145009a10 <col:18, col:25> 'int'         |         |   |-ImplicitCastExpr 0x1450099f8 <col:18> 'int (*)()' <FunctionToPointerDecay>         |         |   | `-DeclRefExpr 0x145009798 <col:18> 'int ()' Function 0x144942128 '_' 'int ()'         |         |   `-ImplicitCastExpr 0x145009a38 <col:20> 'char *' <ArrayToPointerDecay>         |         |     `-StringLiteral 0x1450097b8 <col:20> 'char[4]' lvalue \"STR\"         |         `-CXXDependentScopeMemberExpr 0x1450098b0 <line:45:5, col:22> '<dependent type>' contains-errors lvalue ->orig_file_name         |           `-RecoveryExpr 0x145009888 <col:5, col:11> '<dependent type>' contains-errors lvalue         |             `-DeclRefExpr 0x145009850 <col:5> 'struct tar_sparse_file *' lvalue ParmVar 0x144929248 'file' 'struct tar_sparse_file *'         |-BinaryOperator 0x14500a020 <line:49:7, line:50:48> '<dependent type>' contains-errors '='         | |-CXXDependentScopeMemberExpr 0x145009c28 <line:49:7, col:24> '<dependent type>' contains-errors lvalue ->sparse_map         | | `-RecoveryExpr 0x145009c00 <col:7, col:13> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x145009bb8 <col:7> 'struct tar_sparse_file *' lvalue ParmVar 0x144929248 'file' 'struct tar_sparse_file *'         | `-CallExpr 0x145009ff0 <col:37, line:50:48> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x145009d50 <line:49:37> 'int ()' Function 0x145009c98 'xcalloc' 'int ()'         |   |-CXXDependentScopeMemberExpr 0x145009dd0 <col:46, col:63> '<dependent type>' contains-errors lvalue ->sparse_map_size         |   | `-RecoveryExpr 0x145009da8 <col:46, col:52> '<dependent type>' contains-errors lvalue         |   |   `-DeclRefExpr 0x145009d70 <col:46> 'struct tar_sparse_file *' lvalue ParmVar 0x144929248 'file' 'struct tar_sparse_file *'         |   `-UnaryExprOrTypeTraitExpr 0x145009fd0 <line:50:11, col:47> 'unsigned long' contains-errors sizeof         |     `-ParenExpr 0x145009fb0 <col:18, col:47> '<dependent type>' contains-errors         |       `-UnaryOperator 0x145009f98 <col:19, col:37> '<dependent type>' contains-errors prefix '*' cannot overflow         |         `-ImplicitCastExpr 0x145009f80 <col:20, col:37> '<dependent type>' contains-errors <LValueToRValue>         |           `-CXXDependentScopeMemberExpr 0x145009e78 <col:20, col:37> '<dependent type>' contains-errors lvalue ->sparse_map         |             `-RecoveryExpr 0x145009e50 <col:20, col:26> '<dependent type>' contains-errors lvalue         |               `-DeclRefExpr 0x145009e18 <col:20> 'struct tar_sparse_file *' lvalue ParmVar 0x144929248 'file' 'struct tar_sparse_file *' non_odr_use_unevaluated         |-BinaryOperator 0x14500a108 <line:51:7, col:43> '<dependent type>' contains-errors '='         | |-CXXDependentScopeMemberExpr 0x14500a0a0 <col:7, col:24> '<dependent type>' contains-errors lvalue ->sparse_map_avail         | | `-RecoveryExpr 0x14500a078 <col:7, col:13> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x14500a040 <col:7> 'struct tar_sparse_file *' lvalue ParmVar 0x144929248 'file' 'struct tar_sparse_file *'         | `-IntegerLiteral 0x14500a0e8 <col:43> 'int' 0         `-CallExpr 0x14500b178 <line:74:7, col:32> 'int'           |-ImplicitCastExpr 0x14500b160 <col:7> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x14500b120 <col:7> 'int ()' Function 0x144942528 'set_next_block_after' 'int ()'           `-ImplicitCastExpr 0x14500b1a0 <col:29> 'union block *' <LValueToRValue>             `-DeclRefExpr 0x14500b140 <col:29> 'union block *' lvalue Var 0x144941968 'blk' 'union block *' ","19363":"`-FunctionDecl 0x138027560  line:1:13 invalid hashkey 'void (struct connectdata *, char *, int, const char **)' static   |-ParmVarDecl 0x13800e248 <col:21, col:41> col:41 used conn 'struct connectdata *'   |-ParmVarDecl 0x13800e2c8 <col:47, col:53> col:53 used buf 'char *'   |-ParmVarDecl 0x13800e360 <line:2:21, col:28> col:28 invalid len 'int'   |-ParmVarDecl 0x138027418 <line:3:21, col:34> col:34 used hostp 'const char **'   `-CompoundStmt 0x138028360 <line:4:1, line:27:1>     |-DeclStmt 0x1380276a8 <line:5:3, col:23>     | `-VarDecl 0x138027640 <col:3, col:15> col:15 used hostname 'const char *'     |-DeclStmt 0x1380277a0 <line:6:3, col:32>     | `-VarDecl 0x1380276d8 <col:3, col:21> col:8 used port 'long' cinit     |   `-RecoveryExpr 0x138027778 <col:15, col:21> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x138027740 <col:15> 'struct connectdata *' lvalue ParmVar 0x13800e248 'conn' 'struct connectdata *'     |-IfStmt 0x138027df0 <line:9:3, line:18:27> has_else     | |-BinaryOperator 0x138027938 <line:9:6, col:42> 'int' contains-errors '&&'     | | |-CXXDependentScopeMemberExpr 0x138027818 <col:6, col:17> '<dependent type>' contains-errors lvalue .httpproxy     | | | `-RecoveryExpr 0x1380277f0 <col:6, col:12> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x1380277b8 <col:6> 'struct connectdata *' lvalue ParmVar 0x13800e248 'conn' 'struct connectdata *'     | | `-UnaryOperator 0x138027920 <col:30, col:42> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x138027908 <col:31, col:42> '<dependent type>' contains-errors <LValueToRValue>     | |     `-CXXDependentScopeMemberExpr 0x1380278c0 <col:31, col:42> '<dependent type>' contains-errors lvalue .tunnel_proxy     | |       `-RecoveryExpr 0x138027898 <col:31, col:37> '<dependent type>' contains-errors lvalue     | |         `-DeclRefExpr 0x138027860 <col:31> 'struct connectdata *' lvalue ParmVar 0x13800e248 'conn' 'struct connectdata *'     | |-CompoundStmt 0x138027b28 <col:56, line:12:3>     | | |-BinaryOperator 0x138027a68 <line:10:5, col:38> 'const char *' contains-errors '='     | | | |-DeclRefExpr 0x138027958 <col:5> 'const char *' lvalue Var 0x138027640 'hostname' 'const char *'     | | | `-CXXDependentScopeMemberExpr 0x138027a20 <col:16, col:38> '<dependent type>' contains-errors lvalue .name     | | |   `-CXXDependentScopeMemberExpr 0x1380279d8 <col:16, col:33> '<dependent type>' contains-errors lvalue .host     | | |     `-RecoveryExpr 0x1380279b0 <col:16, col:22> '<dependent type>' contains-errors lvalue     | | |       `-DeclRefExpr 0x138027978 <col:16> 'struct connectdata *' lvalue ParmVar 0x13800e248 'conn' 'struct connectdata *'     | | `-BinaryOperator 0x138027b08 <line:11:5, col:18> 'long' contains-errors '='     | |   |-DeclRefExpr 0x138027a88 <col:5> 'long' contains-errors lvalue Var 0x1380276d8 'port' 'long'     | |   `-RecoveryExpr 0x138027ae0 <col:12, col:18> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x138027aa8 <col:12> 'struct connectdata *' lvalue ParmVar 0x13800e248 'conn' 'struct connectdata *'     | `-IfStmt 0x138027dc0 <line:15:5, line:18:27> has_else     |   |-CXXDependentScopeMemberExpr 0x138027ba8 <line:15:8, col:19> '<dependent type>' contains-errors lvalue .conn_to_host     |   | `-RecoveryExpr 0x138027b80 <col:8, col:14> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x138027b48 <col:8> 'struct connectdata *' lvalue ParmVar 0x13800e248 'conn' 'struct connectdata *'     |   |-BinaryOperator 0x138027cb8 <line:16:7, col:37> 'const char *' contains-errors '='     |   | |-DeclRefExpr 0x138027bf0 <col:7> 'const char *' lvalue Var 0x138027640 'hostname' 'const char *'     |   | `-CXXDependentScopeMemberExpr 0x138027c70 <col:18, col:37> '<dependent type>' contains-errors lvalue .name     |   |   `-RecoveryExpr 0x138027c48 <col:18, col:24> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x138027c10 <col:18> 'struct connectdata *' lvalue ParmVar 0x13800e248 'conn' 'struct connectdata *'     |   `-BinaryOperator 0x138027da0 <line:18:5, col:27> 'const char *' contains-errors '='     |     |-DeclRefExpr 0x138027cd8 <col:5> 'const char *' lvalue Var 0x138027640 'hostname' 'const char *'     |     `-CXXDependentScopeMemberExpr 0x138027d58 <col:16, col:27> '<dependent type>' contains-errors lvalue .name     |       `-RecoveryExpr 0x138027d30 <col:16, col:22> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x138027cf8 <col:16> 'struct connectdata *' lvalue ParmVar 0x13800e248 'conn' 'struct connectdata *'     |-IfStmt 0x138027f00 <line:20:3, line:22:14>     | |-ImplicitCastExpr 0x138027e40 <line:20:6> 'const char **' <LValueToRValue>     | | `-DeclRefExpr 0x138027e20 <col:6> 'const char **' lvalue ParmVar 0x138027418 'hostp' 'const char **'     | `-BinaryOperator 0x138027ee0 <line:22:5, col:14> 'const char *' '='     |   |-UnaryOperator 0x138027e90 <col:5, col:6> 'const char *' lvalue prefix '*' cannot overflow     |   | `-ImplicitCastExpr 0x138027e78 <col:6> 'const char **' <LValueToRValue>     |   |   `-DeclRefExpr 0x138027e58 <col:6> 'const char **' lvalue ParmVar 0x138027418 'hostp' 'const char **'     |   `-ImplicitCastExpr 0x138027ec8 <col:14> 'const char *' <LValueToRValue>     |     `-DeclRefExpr 0x138027ea8 <col:14> 'const char *' lvalue Var 0x138027640 'hostname' 'const char *'     |-CallExpr 0x138028180 <line:25:3, col:44> '<dependent type>' contains-errors     | |-DeclRefExpr 0x138028080 <col:3> 'int ()' Function 0x138027fc8 'msnprintf' 'int ()'     | |-DeclRefExpr 0x1380280a0 <col:13> 'char *' lvalue ParmVar 0x13800e2c8 'buf' 'char *'     | |-RecoveryExpr 0x1380280c0 <col:18> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x138028120 <col:23> 'char[4]' lvalue \"STR\"     | |-DeclRefExpr 0x138028140 <col:30> 'long' contains-errors lvalue Var 0x1380276d8 'port' 'long'     | `-DeclRefExpr 0x138028160 <col:36> 'const char *' lvalue Var 0x138027640 'hostname' 'const char *'     `-CallExpr 0x138028328 <line:26:3, col:33> '<dependent type>' contains-errors       |-DeclRefExpr 0x1380282a8 <col:3> 'int ()' Function 0x1380281f0 'Curl_strntolower' 'int ()'       |-DeclRefExpr 0x1380282c8 <col:20> 'char *' lvalue ParmVar 0x13800e2c8 'buf' 'char *'       |-DeclRefExpr 0x1380282e8 <col:25> 'char *' lvalue ParmVar 0x13800e2c8 'buf' 'char *'       `-RecoveryExpr 0x138028308 <col:30> '<dependent type>' contains-errors lvalue ","19115":"`-FunctionDecl 0x1411421b8  col:22 implicit used strerror 'char *(int)' extern   |-ParmVarDecl 0x1411422b8 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x141142260 <<invalid sloc>> Implicit 901 ","20127":"`-FunctionDecl 0x157026e00  line:1:6 copy_huge_page_from_user 'long (struct page *, int)'   |-ParmVarDecl 0x15700ea48 <col:31, col:44> col:44 used dst_page 'struct page *'   |-ParmVarDecl 0x15700eac0 <line:2:5, col:16> col:16 __user 'int'   `-CompoundStmt 0x15702a690 <line:5:1, line:31:1>     |-DeclStmt 0x157026fc8 <line:6:2, col:29>     | `-VarDecl 0x157026f18 <col:2, col:8> col:8 used src 'void *'     |-DeclStmt 0x157027060 <line:7:2, col:18>     | `-VarDecl 0x157026ff8 <col:2, col:8> col:8 used page_kaddr 'void *'     |-DeclStmt 0x1570271c8 <line:8:2, col:25>     | |-VarDecl 0x157027090 <col:2, col:16> col:16 used i 'unsigned long'     | `-VarDecl 0x157027110 <col:2, col:24> col:19 used rc 'unsigned long' cinit     |   `-ImplicitCastExpr 0x157027198 <col:24> 'unsigned long' <IntegralCast>     |     `-IntegerLiteral 0x157027178 <col:24> 'int' 0     |-DeclStmt 0x157027310 <line:9:2, col:57>     | `-VarDecl 0x1570271f8 <col:2, col:48> col:16 used ret_val 'unsigned long' cinit     |   `-BinaryOperator 0x1570272f0 <col:26, col:48> '<dependent type>' contains-errors '*'     |     |-RecoveryExpr 0x1570272b0 <col:26> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x1570272d0 <col:48> '<dependent type>' contains-errors lvalue     |-ForStmt 0x15702a5f8 <line:11:2, line:29:2>     | |-BinaryOperator 0x157027380 <line:11:7, col:11> 'unsigned long' '='     | | |-DeclRefExpr 0x157027328 <col:7> 'unsigned long' lvalue Var 0x157027090 'i' 'unsigned long'     | | `-ImplicitCastExpr 0x157027368 <col:11> 'unsigned long' <IntegralCast>     | |   `-IntegerLiteral 0x157027348 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x157027418 <col:14, col:18> 'int' contains-errors '<'     | | |-DeclRefExpr 0x1570273a0 <col:14> 'unsigned long' lvalue Var 0x157027090 'i' 'unsigned long'     | | `-RecoveryExpr 0x1570273f8 <col:18> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x157027458 <col:39, col:40> 'unsigned long' postfix '++'     | | `-DeclRefExpr 0x157027438 <col:39> 'unsigned long' lvalue Var 0x157027090 'i' 'unsigned long'     | `-CompoundStmt 0x15702a5c8 <col:44, line:29:2>     |   |-IfStmt 0x1570278f0 <line:12:3, line:15:41> has_else     |   | |-RecoveryExpr 0x157027488 <line:12:7> '<dependent type>' contains-errors lvalue     |   | |-BinaryOperator 0x1570276c8 <line:13:4, col:34> 'void *' contains-errors '='     |   | | |-DeclRefExpr 0x1570274a8 <col:4> 'void *' lvalue Var 0x157026ff8 'page_kaddr' 'void *'     |   | | `-CallExpr 0x1570276a0 <col:17, col:34> '<dependent type>' contains-errors     |   | |   |-DeclRefExpr 0x1570275e0 <col:17> 'int ()' Function 0x157027528 'kmap' 'int ()'     |   | |   `-RecoveryExpr 0x157027670 <col:22, col:33> '<dependent type>' contains-errors lvalue     |   | |     |-DeclRefExpr 0x157027600 <col:22> 'struct page *' lvalue ParmVar 0x15700ea48 'dst_page' 'struct page *'     |   | |     `-DeclRefExpr 0x157027620 <col:33> 'unsigned long' lvalue Var 0x157027090 'i' 'unsigned long'     |   | `-BinaryOperator 0x1570278d0 <line:15:4, col:41> 'void *' contains-errors '='     |   |   |-DeclRefExpr 0x1570276e8 <col:4> 'void *' lvalue Var 0x157026ff8 'page_kaddr' 'void *'     |   |   `-CallExpr 0x1570278a8 <col:17, col:41> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x1570277e8 <col:17> 'int ()' Function 0x157027730 'kmap_atomic' 'int ()'     |   |     `-RecoveryExpr 0x157027878 <col:29, col:40> '<dependent type>' contains-errors lvalue     |   |       |-DeclRefExpr 0x157027808 <col:29> 'struct page *' lvalue ParmVar 0x15700ea48 'dst_page' 'struct page *'     |   |       `-DeclRefExpr 0x157027828 <col:40> 'unsigned long' lvalue Var 0x157027090 'i' 'unsigned long'     |   |-IfStmt 0x15702a388 <line:19:3, line:22:28> has_else     |   | |-RecoveryExpr 0x157027b58 <line:19:7> '<dependent type>' contains-errors lvalue     |   | |-CallExpr 0x157027d18 <line:20:4, col:23> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x157027c58 <col:4> 'int ()' Function 0x157027ba0 'kunmap' 'int ()'     |   | | `-RecoveryExpr 0x157027ce8 <col:11, col:22> '<dependent type>' contains-errors lvalue     |   | |   |-DeclRefExpr 0x157027c78 <col:11> 'struct page *' lvalue ParmVar 0x15700ea48 'dst_page' 'struct page *'     |   | |   `-DeclRefExpr 0x157027c98 <col:22> 'unsigned long' lvalue Var 0x157027090 'i' 'unsigned long'     |   | `-CallExpr 0x15702a348 <line:22:4, col:28> 'int'     |   |   |-ImplicitCastExpr 0x15702a330 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x15702a2b8 <col:4> 'int ()' Function 0x15702a200 'kunmap_atomic' 'int ()'     |   |   `-ImplicitCastExpr 0x15702a370 <col:18> 'void *' <LValueToRValue>     |   |     `-DeclRefExpr 0x15702a2d8 <col:18> 'void *' lvalue Var 0x157026ff8 'page_kaddr' 'void *'     |   |-IfStmt 0x15702a470 <line:25:3, line:26:4>     |   | |-ImplicitCastExpr 0x15702a450 <line:25:7> 'unsigned long' <LValueToRValue>     |   | | `-DeclRefExpr 0x15702a430 <col:7> 'unsigned long' lvalue Var 0x157027110 'rc' 'unsigned long'     |   | `-BreakStmt 0x15702a468 <line:26:4>     |   `-CallExpr 0x15702a5a8 <line:28:3, col:16> 'int'     |     `-ImplicitCastExpr 0x15702a590 <col:3> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x15702a570 <col:3> 'int ()' Function 0x15702a4b8 'cond_resched' 'int ()'     `-ReturnStmt 0x15702a680 <line:30:2, col:9>       `-ImplicitCastExpr 0x15702a668 <col:9> 'long' contains-errors <IntegralCast>         `-ImplicitCastExpr 0x15702a650 <col:9> 'unsigned long' contains-errors <LValueToRValue>           `-DeclRefExpr 0x15702a630 <col:9> 'unsigned long' contains-errors lvalue Var 0x1570271f8 'ret_val' 'unsigned long' ","19955":"`-FunctionDecl 0x12c1281d8  line:1:12 parse_exports_table 'int (long long *)' static   |-ParmVarDecl 0x12c128108 <col:32, col:43> col:43 used table_start 'long long *'   `-CompoundStmt 0x12c80aac0 <line:2:1, line:19:1>     |-DeclStmt 0x12c128350 <line:3:2, col:9>     | `-VarDecl 0x12c1282e8 <col:2, col:6> col:6 used res 'int'     |-DeclStmt 0x12c1286d8 <line:4:2, col:53>     | `-VarDecl 0x12c128380 <col:2, col:52> col:6 used indexes 'int' cinit     |   `-CallExpr 0x12c1286b0 <col:16, col:52> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12c128510 <col:16> 'int ()' Function 0x12c128458 'SQUASHFS_LOOKUP_BLOCKS' 'int ()'     |     `-CXXDependentScopeMemberExpr 0x12c128668 <col:39, col:46> '<dependent type>' contains-errors lvalue .inodes     |       `-CXXDependentScopeMemberExpr 0x12c128620 <col:39, col:44> '<dependent type>' contains-errors lvalue .s     |         `-RecoveryExpr 0x12c128600 <col:39> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x12c809e68 <line:5:2, col:39>     | `-VarDecl 0x12c809e00 <col:2, col:38> col:12 used export_index_table 'long long[indexes]'     |-BinaryOperator 0x12c80a498 <line:7:2, line:8:65> 'int' contains-errors '='     | |-DeclRefExpr 0x12c809e80 <line:7:2> 'int' lvalue Var 0x12c1282e8 'res' 'int'     | `-CallExpr 0x12c80a458 <col:8, line:8:65> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12c809f80 <line:7:8> 'int ()' Function 0x12c809ec8 'read_fs_bytes' 'int ()'     |   |-RecoveryExpr 0x12c80a2b0 <col:22> '<dependent type>' contains-errors lvalue     |   |-CXXDependentScopeMemberExpr 0x12c80a338 <col:26, col:33> '<dependent type>' contains-errors lvalue .lookup_table_start     |   | `-CXXDependentScopeMemberExpr 0x12c80a2f0 <col:26, col:31> '<dependent type>' contains-errors lvalue .s     |   |   `-RecoveryExpr 0x12c80a2d0 <col:26> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x12c80a430 <line:8:3, col:44> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12c80a140 <col:3> 'int ()' Function 0x12c80a088 'SQUASHFS_LOOKUP_BLOCK_BYTES' 'int ()'     |   | `-CXXDependentScopeMemberExpr 0x12c80a3e8 <col:31, col:38> '<dependent type>' contains-errors lvalue .inodes     |   |   `-CXXDependentScopeMemberExpr 0x12c80a3a0 <col:31, col:36> '<dependent type>' contains-errors lvalue .s     |   |     `-RecoveryExpr 0x12c80a380 <col:31> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12c80a230 <col:47> 'long long[indexes]' contains-errors lvalue Var 0x12c809e00 'export_index_table' 'long long[indexes]'     |-IfStmt 0x12c80a7a0 <line:9:2, line:12:2>     | |-BinaryOperator 0x12c80a530 <line:9:5, col:12> 'int' contains-errors '=='     | | |-DeclRefExpr 0x12c80a4b8 <col:5> 'int' lvalue Var 0x12c1282e8 'res' 'int'     | | `-RecoveryExpr 0x12c80a510 <col:12> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12c80a780 <col:19, line:12:2>     |   |-CallExpr 0x12c80a6f8 <line:10:3, col:14> 'int'     |   | |-ImplicitCastExpr 0x12c80a6e0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x12c80a630 <col:3> 'int ()' Function 0x12c80a578 'ERROR' 'int ()'     |   | `-ImplicitCastExpr 0x12c80a720 <col:9> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x12c80a690 <col:9> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x12c80a770 <line:11:3, col:10>     |     `-RecoveryExpr 0x12c80a750 <col:10> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12c80a918 <line:13:2, col:59> 'int' contains-errors     | |-ImplicitCastExpr 0x12c80a900 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12c80a8a0 <col:2> 'int ()' Function 0x12c80a7e8 'SQUASHFS_INSWAP_LOOKUP_BLOCKS' 'int ()'     | |-ImplicitCastExpr 0x12c80a948 <col:32> 'long long *' contains-errors <ArrayToPointerDecay>     | | `-DeclRefExpr 0x12c80a8c0 <col:32> 'long long[indexes]' contains-errors lvalue Var 0x12c809e00 'export_index_table' 'long long[indexes]'     | `-ImplicitCastExpr 0x12c80a960 <col:52> 'int' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x12c80a8e0 <col:52> 'int' contains-errors lvalue Var 0x12c128380 'indexes' 'int'     |-BinaryOperator 0x12c80aa58 <line:16:2, col:37> 'long long' contains-errors '='     | |-UnaryOperator 0x12c80a9b0 <col:2, col:3> 'long long' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x12c80a998 <col:3> 'long long *' <LValueToRValue>     | |   `-DeclRefExpr 0x12c80a978 <col:3> 'long long *' lvalue ParmVar 0x12c128108 'table_start' 'long long *'     | `-ImplicitCastExpr 0x12c80aa40 <col:17, col:37> 'long long' contains-errors <LValueToRValue>     |   `-ArraySubscriptExpr 0x12c80aa20 <col:17, col:37> 'long long' contains-errors lvalue     |     |-ImplicitCastExpr 0x12c80aa08 <col:17> 'long long *' contains-errors <ArrayToPointerDecay>     |     | `-DeclRefExpr 0x12c80a9c8 <col:17> 'long long[indexes]' contains-errors lvalue Var 0x12c809e00 'export_index_table' 'long long[indexes]'     |     `-IntegerLiteral 0x12c80a9e8 <col:36> 'int' 0     `-ReturnStmt 0x12c80aab0 <line:18:2, col:9>       `-RecoveryExpr 0x12c80aa90 <col:9> '<dependent type>' contains-errors lvalue ","20206":"`-FunctionDecl 0x120141028  col:2 implicit used _exit 'void (int) __attribute__((noreturn))' extern   |-ParmVarDecl 0x120141128 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x1201410d0 <<invalid sloc>> Implicit 959 ","19910":"`-FunctionDecl 0x12600e038  line:1:12 invalid auxgetinfo 'int (int *, const char *, int *, int *, int *)' static   |-ParmVarDecl 0x12600dd28 <col:24, col:35> col:35 invalid L 'int *'   |-ParmVarDecl 0x12600dda8 <col:38, col:50> col:50 used what 'const char *'   |-ParmVarDecl 0x12600de28 <col:56, col:67> col:67 referenced invalid ar 'int *'   |-ParmVarDecl 0x12600dea8 <line:2:24, col:33> col:33 invalid f 'int *'   |-ParmVarDecl 0x12600df28 <col:36, col:46> col:46 invalid ci 'int *'   `-CompoundStmt 0x125923328 <col:50, line:54:1>     |-DeclStmt 0x12600e1a8 <line:3:3, col:17>     | `-VarDecl 0x12600e120 <col:3, col:16> col:7 used status 'int' cinit     |   `-IntegerLiteral 0x12600e188 <col:16> 'int' 1     |-ForStmt 0x1259232a8 <line:4:3, line:52:3>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-ImplicitCastExpr 0x12600e210 <line:4:10, col:11> 'char' <LValueToRValue>     | | `-UnaryOperator 0x12600e1f8 <col:10, col:11> 'const char' lvalue prefix '*' cannot overflow     | |   `-ImplicitCastExpr 0x12600e1e0 <col:11> 'const char *' <LValueToRValue>     | |     `-DeclRefExpr 0x12600e1c0 <col:11> 'const char *' lvalue ParmVar 0x12600dda8 'what' 'const char *'     | |-UnaryOperator 0x12600e248 <col:17, col:21> 'const char *' postfix '++'     | | `-DeclRefExpr 0x12600e228 <col:17> 'const char *' lvalue ParmVar 0x12600dda8 'what' 'const char *'     | `-CompoundStmt 0x125923290 <col:25, line:52:3>     |   `-SwitchStmt 0x12600e2e0 <line:5:5, line:51:5>     |     |-ImplicitCastExpr 0x12600e2c8 <line:5:13, col:14> 'int' <IntegralCast>     |     | `-ImplicitCastExpr 0x12600e2b0 <col:13, col:14> 'char' <LValueToRValue>     |     |   `-UnaryOperator 0x12600e298 <col:13, col:14> 'const char' lvalue prefix '*' cannot overflow     |     |     `-ImplicitCastExpr 0x12600e280 <col:14> 'const char *' <LValueToRValue>     |     |       `-DeclRefExpr 0x12600e260 <col:14> 'const char *' lvalue ParmVar 0x12600dda8 'what' 'const char *'     |     `-CompoundStmt 0x125923240 <col:20, line:51:5>     |       |-CaseStmt 0x12600e338 <line:6:7, line:9:7>     |       | |-ConstantExpr 0x12600e320 <line:6:12> 'int'     |       | | `-CharacterLiteral 0x12600e308 <col:12> 'int' 83     |       | `-CompoundStmt 0x126027b78 <col:17, line:9:7>     |       |   |-CallExpr 0x126027b40 <line:7:9, col:23> '<dependent type>' contains-errors     |       |   | |-DeclRefExpr 0x126027ae0 <col:9> 'int ()' Function 0x126027a28 'funcinfo' 'int ()'     |       |   | |-RecoveryExpr 0x126027b00 <col:18> '<dependent type>' contains-errors lvalue     |       |   | `-RecoveryExpr 0x126027b20 <col:22> '<dependent type>' contains-errors lvalue     |       |   `-BreakStmt 0x126027b70 <line:8:9>     |       |-CaseStmt 0x126027bc8 <line:10:7, line:13:7>     |       | |-ConstantExpr 0x126027bb0 <line:10:12> 'int'     |       | | `-CharacterLiteral 0x126027b98 <col:12> 'int' 108     |       | `-CompoundStmt 0x126028000 <col:17, line:13:7>     |       |   |-BinaryOperator 0x126027fd8 <line:11:9, col:69> '<dependent type>' contains-errors '='     |       |   | |-CXXDependentScopeMemberExpr 0x126027c38 <col:9, col:13> '<dependent type>' contains-errors lvalue ->currentline     |       |   | | `-RecoveryExpr 0x126027c10 <col:9> '<dependent type>' contains-errors lvalue     |       |   | |   `-DeclRefExpr 0x126027bf0 <col:9> 'int *' lvalue ParmVar 0x12600de28 'ar' 'int *'     |       |   | `-ConditionalOperator 0x126027fa8 <col:27, col:69> '<dependent type>' contains-errors     |       |   |   |-ParenExpr 0x126027e08 <col:27, col:43> 'int' contains-errors     |       |   |   | `-BinaryOperator 0x126027de8 <col:28, col:42> 'int' contains-errors '&&'     |       |   |   |   |-RecoveryExpr 0x126027c80 <col:28> '<dependent type>' contains-errors lvalue     |       |   |   |   `-CallExpr 0x126027dc0 <col:34, col:42> '<dependent type>' contains-errors     |       |   |   |     |-DeclRefExpr 0x126027d80 <col:34> 'int ()' Function 0x126027cc8 'isLua' 'int ()'     |       |   |   |     `-RecoveryExpr 0x126027da0 <col:40> '<dependent type>' contains-errors lvalue     |       |   |   |-CallExpr 0x126027f48 <col:47, col:64> '<dependent type>' contains-errors     |       |   |   | |-DeclRefExpr 0x126027f08 <col:47> 'int ()' Function 0x126027e50 'getcurrentline' 'int ()'     |       |   |   | `-RecoveryExpr 0x126027f28 <col:62> '<dependent type>' contains-errors lvalue     |       |   |   `-UnaryOperator 0x126027f90 <col:68, col:69> 'int' prefix '-'     |       |   |     `-IntegerLiteral 0x126027f70 <col:69> 'int' 1     |       |   `-BreakStmt 0x126027ff8 <line:12:9>     |       |-CaseStmt 0x126028050 <line:14:7, line:25:7>     |       | |-ConstantExpr 0x126028038 <line:14:12> 'int'     |       | | `-CharacterLiteral 0x126028020 <col:12> 'int' 117     |       | `-CompoundStmt 0x1260288e0 <col:17, line:25:7>     |       |   |-IfStmt 0x1260288a8 <line:16:9, line:23:9> has_else     |       |   | |-CallExpr 0x126028350 <line:16:13, col:27> '<dependent type>' contains-errors     |       |   | | |-DeclRefExpr 0x126028310 <col:13> 'int ()' Function 0x126028258 'noLuaClosure' 'int ()'     |       |   | | `-RecoveryExpr 0x126028330 <col:26> '<dependent type>' contains-errors lvalue     |       |   | |-CompoundStmt 0x126028518 <col:30, line:19:9>     |       |   | | |-BinaryOperator 0x126028428 <line:17:11, col:26> '<dependent type>' contains-errors '='     |       |   | | | |-CXXDependentScopeMemberExpr 0x1260283c0 <col:11, col:15> '<dependent type>' contains-errors lvalue ->isvararg     |       |   | | | | `-RecoveryExpr 0x126028398 <col:11> '<dependent type>' contains-errors lvalue     |       |   | | | |   `-DeclRefExpr 0x126028378 <col:11> 'int *' lvalue ParmVar 0x12600de28 'ar' 'int *'     |       |   | | | `-IntegerLiteral 0x126028408 <col:26> 'int' 1     |       |   | | `-BinaryOperator 0x1260284f8 <line:18:11, col:25> '<dependent type>' contains-errors '='     |       |   | |   |-CXXDependentScopeMemberExpr 0x126028490 <col:11, col:15> '<dependent type>' contains-errors lvalue ->nparams     |       |   | |   | `-RecoveryExpr 0x126028468 <col:11> '<dependent type>' contains-errors lvalue     |       |   | |   |   `-DeclRefExpr 0x126028448 <col:11> 'int *' lvalue ParmVar 0x12600de28 'ar' 'int *'     |       |   | |   `-IntegerLiteral 0x1260284d8 <col:25> 'int' 0     |       |   | `-CompoundStmt 0x126028888 <line:20:14, line:23:9>     |       |   |   |-BinaryOperator 0x1260286c0 <line:21:11, col:34> '<dependent type>' contains-errors '='     |       |   |   | |-CXXDependentScopeMemberExpr 0x126028580 <col:11, col:15> '<dependent type>' contains-errors lvalue ->isvararg     |       |   |   | | `-RecoveryExpr 0x126028558 <col:11> '<dependent type>' contains-errors lvalue     |       |   |   | |   `-DeclRefExpr 0x126028538 <col:11> 'int *' lvalue ParmVar 0x12600de28 'ar' 'int *'     |       |   |   | `-CXXDependentScopeMemberExpr 0x126028678 <col:26, col:34> '<dependent type>' contains-errors lvalue ->is_vararg     |       |   |   |   `-CXXDependentScopeMemberExpr 0x126028630 <col:26, col:31> '<dependent type>' contains-errors lvalue .p     |       |   |   |     `-CXXDependentScopeMemberExpr 0x1260285e8 <col:26, col:29> '<dependent type>' contains-errors lvalue ->l     |       |   |   |       `-RecoveryExpr 0x1260285c8 <col:26> '<dependent type>' contains-errors lvalue     |       |   |   `-BinaryOperator 0x126028868 <line:22:11, col:33> '<dependent type>' contains-errors '='     |       |   |     |-CXXDependentScopeMemberExpr 0x126028728 <col:11, col:15> '<dependent type>' contains-errors lvalue ->nparams     |       |   |     | `-RecoveryExpr 0x126028700 <col:11> '<dependent type>' contains-errors lvalue     |       |   |     |   `-DeclRefExpr 0x1260286e0 <col:11> 'int *' lvalue ParmVar 0x12600de28 'ar' 'int *'     |       |   |     `-CXXDependentScopeMemberExpr 0x126028820 <col:25, col:33> '<dependent type>' contains-errors lvalue ->numparams     |       |   |       `-CXXDependentScopeMemberExpr 0x1260287d8 <col:25, col:30> '<dependent type>' contains-errors lvalue .p     |       |   |         `-CXXDependentScopeMemberExpr 0x126028790 <col:25, col:28> '<dependent type>' contains-errors lvalue ->l     |       |   |           `-RecoveryExpr 0x126028770 <col:25> '<dependent type>' contains-errors lvalue     |       |   `-BreakStmt 0x1260288d8 <line:24:9>     |       |-CaseStmt 0x126028930 <line:26:7, line:29:7>     |       | |-ConstantExpr 0x126028918 <line:26:12> 'int'     |       | | `-CharacterLiteral 0x126028900 <col:12> 'int' 116     |       | `-CompoundStmt 0x1260293e8 <col:17, line:29:7>     |       |   |-BinaryOperator 0x1260293c0 <line:27:9, col:62> '<dependent type>' contains-errors '='     |       |   | |-CXXDependentScopeMemberExpr 0x1260289a0 <col:9, col:13> '<dependent type>' contains-errors lvalue ->istailcall     |       |   | | `-RecoveryExpr 0x126028978 <col:9> '<dependent type>' contains-errors lvalue     |       |   | |   `-DeclRefExpr 0x126028958 <col:9> 'int *' lvalue ParmVar 0x12600de28 'ar' 'int *'     |       |   | `-ConditionalOperator 0x126029390 <col:26, col:62> '<dependent type>' contains-errors     |       |   |   |-ParenExpr 0x126029220 <col:26, col:29> '<dependent type>' contains-errors lvalue     |       |   |   | `-RecoveryExpr 0x126029200 <col:27> '<dependent type>' contains-errors lvalue     |       |   |   |-BinaryOperator 0x126029370 <col:33, col:50> '<dependent type>' contains-errors '&'     |       |   |   | |-CXXDependentScopeMemberExpr 0x126029260 <col:33, col:37> '<dependent type>' contains-errors lvalue ->callstatus     |       |   |   | | `-RecoveryExpr 0x126029240 <col:33> '<dependent type>' contains-errors lvalue     |       |   |   | `-RecoveryExpr 0x126029350 <col:50> '<dependent type>' contains-errors lvalue     |       |   |   `-IntegerLiteral 0x1260292e0 <col:62> 'int' 0     |       |   `-BreakStmt 0x1260293e0 <line:28:9>     |       |-CaseStmt 0x126029438 <line:30:7, line:37:7>     |       | |-ConstantExpr 0x126029420 <line:30:12> 'int'     |       | | `-CharacterLiteral 0x126029408 <col:12> 'int' 110     |       | `-CompoundStmt 0x126029a48 <col:17, line:37:7>     |       |   |-BinaryOperator 0x1260296e8 <line:31:9, col:52> '<dependent type>' contains-errors '='     |       |   | |-CXXDependentScopeMemberExpr 0x1260294a8 <col:9, col:13> '<dependent type>' contains-errors lvalue ->namewhat     |       |   | | `-RecoveryExpr 0x126029480 <col:9> '<dependent type>' contains-errors lvalue     |       |   | |   `-DeclRefExpr 0x126029460 <col:9> 'int *' lvalue ParmVar 0x12600de28 'ar' 'int *'     |       |   | `-CallExpr 0x1260296b0 <col:24, col:52> '<dependent type>' contains-errors     |       |   |   |-DeclRefExpr 0x1260295d0 <col:24> 'int ()' Function 0x126029518 'getfuncname' 'int ()'     |       |   |   |-RecoveryExpr 0x1260295f0 <col:36> '<dependent type>' contains-errors lvalue     |       |   |   |-RecoveryExpr 0x126029610 <col:39> '<dependent type>' contains-errors lvalue     |       |   |   `-UnaryOperator 0x126029698 <col:43, col:48> '<dependent type>' contains-errors prefix '&' cannot overflow     |       |   |     `-CXXDependentScopeMemberExpr 0x126029650 <col:44, col:48> '<dependent type>' contains-errors lvalue ->name     |       |   |       `-RecoveryExpr 0x126029630 <col:44> '<dependent type>' contains-errors lvalue     |       |   |-IfStmt 0x126029a20 <line:32:9, line:35:9>     |       |   | |-BinaryOperator 0x1260297c8 <line:32:13, col:29> 'int' contains-errors '=='     |       |   | | |-CXXDependentScopeMemberExpr 0x126029728 <col:13, col:17> '<dependent type>' contains-errors lvalue ->namewhat     |       |   | | | `-RecoveryExpr 0x126029708 <col:13> '<dependent type>' contains-errors lvalue     |       |   | | `-RecoveryExpr 0x1260297a8 <col:29> '<dependent type>' contains-errors lvalue     |       |   | `-CompoundStmt 0x126029a00 <col:35, line:35:9>     |       |   |   |-BinaryOperator 0x1260298d8 <line:33:11, col:26> '<dependent type>' contains-errors '='     |       |   |   | |-CXXDependentScopeMemberExpr 0x126029830 <col:11, col:15> '<dependent type>' contains-errors lvalue ->namewhat     |       |   |   | | `-RecoveryExpr 0x126029808 <col:11> '<dependent type>' contains-errors lvalue     |       |   |   | |   `-DeclRefExpr 0x1260297e8 <col:11> 'int *' lvalue ParmVar 0x12600de28 'ar' 'int *'     |       |   |   | `-StringLiteral 0x1260298c0 <col:26> 'char[1]' lvalue \"\"     |       |   |   `-BinaryOperator 0x1260299e0 <line:34:11, col:22> '<dependent type>' contains-errors '='     |       |   |     |-CXXDependentScopeMemberExpr 0x126029940 <col:11, col:15> '<dependent type>' contains-errors lvalue ->name     |       |   |     | `-RecoveryExpr 0x126029918 <col:11> '<dependent type>' contains-errors lvalue     |       |   |     |   `-DeclRefExpr 0x1260298f8 <col:11> 'int *' lvalue ParmVar 0x12600de28 'ar' 'int *'     |       |   |     `-RecoveryExpr 0x1260299c0 <col:22> '<dependent type>' contains-errors lvalue     |       |   `-BreakStmt 0x126029a40 <line:36:9>     |       |-CaseStmt 0x126029aa0 <line:38:7, line:46:7>     |       | |-ConstantExpr 0x126029a88 <line:38:12> 'int'     |       | | `-CharacterLiteral 0x126029a70 <col:12> 'int' 114     |       | `-CompoundStmt 0x12602a0e0 <col:17, line:46:7>     |       |   |-IfStmt 0x12602a0a8 <line:39:9, line:44:9> has_else     |       |   | |-RecoveryExpr 0x126029bc0 <line:39:13, col:55> '_Bool' contains-errors     |       |   | |-BinaryOperator 0x126029d18 <line:40:11, col:43> '<dependent type>' contains-errors '='     |       |   | | |-CXXDependentScopeMemberExpr 0x126029c28 <col:11, col:15> '<dependent type>' contains-errors lvalue ->ftransfer     |       |   | | | `-RecoveryExpr 0x126029c00 <col:11> '<dependent type>' contains-errors lvalue     |       |   | | |   `-DeclRefExpr 0x126029be0 <col:11> 'int *' lvalue ParmVar 0x12600de28 'ar' 'int *'     |       |   | | `-BinaryOperator 0x126029cf8 <col:27, col:43> '<dependent type>' contains-errors '='     |       |   | |   |-CXXDependentScopeMemberExpr 0x126029c90 <col:27, col:31> '<dependent type>' contains-errors lvalue ->ntransfer     |       |   | |   | `-RecoveryExpr 0x126029c70 <col:27> '<dependent type>' contains-errors lvalue     |       |   | |   `-IntegerLiteral 0x126029cd8 <col:43> 'int' 0     |       |   | `-CompoundStmt 0x12602a088 <line:41:14, line:44:9>     |       |   |   |-BinaryOperator 0x126029ec0 <line:42:11, col:47> '<dependent type>' contains-errors '='     |       |   |   | |-CXXDependentScopeMemberExpr 0x126029d80 <col:11, col:15> '<dependent type>' contains-errors lvalue ->ftransfer     |       |   |   | | `-RecoveryExpr 0x126029d58 <col:11> '<dependent type>' contains-errors lvalue     |       |   |   | |   `-DeclRefExpr 0x126029d38 <col:11> 'int *' lvalue ParmVar 0x12600de28 'ar' 'int *'     |       |   |   | `-CXXDependentScopeMemberExpr 0x126029e78 <col:27, col:47> '<dependent type>' contains-errors lvalue .ftransfer     |       |   |   |   `-CXXDependentScopeMemberExpr 0x126029e30 <col:27, col:34> '<dependent type>' contains-errors lvalue .transferinfo     |       |   |   |     `-CXXDependentScopeMemberExpr 0x126029de8 <col:27, col:31> '<dependent type>' contains-errors lvalue ->u2     |       |   |   |       `-RecoveryExpr 0x126029dc8 <col:27> '<dependent type>' contains-errors lvalue     |       |   |   `-BinaryOperator 0x12602a068 <line:43:11, col:47> '<dependent type>' contains-errors '='     |       |   |     |-CXXDependentScopeMemberExpr 0x126029f28 <col:11, col:15> '<dependent type>' contains-errors lvalue ->ntransfer     |       |   |     | `-RecoveryExpr 0x126029f00 <col:11> '<dependent type>' contains-errors lvalue     |       |   |     |   `-DeclRefExpr 0x126029ee0 <col:11> 'int *' lvalue ParmVar 0x12600de28 'ar' 'int *'     |       |   |     `-CXXDependentScopeMemberExpr 0x12602a020 <col:27, col:47> '<dependent type>' contains-errors lvalue .ntransfer     |       |   |       `-CXXDependentScopeMemberExpr 0x126029fd8 <col:27, col:34> '<dependent type>' contains-errors lvalue .transferinfo     |       |   |         `-CXXDependentScopeMemberExpr 0x126029f90 <col:27, col:31> '<dependent type>' contains-errors lvalue ->u2     |       |   |           `-RecoveryExpr 0x126029f70 <col:27> '<dependent type>' contains-errors lvalue     |       |   `-BreakStmt 0x12602a0d8 <line:45:9>     |       |-CaseStmt 0x12602a130 <line:47:7, line:49:9>     |       | |-ConstantExpr 0x12602a118 <line:47:12> 'int'     |       | | `-CharacterLiteral 0x12602a100 <col:12> 'int' 76     |       | `-CaseStmt 0x12602a188 <line:48:7, line:49:9>     |       |   |-ConstantExpr 0x12602a170 <line:48:12> 'int'     |       |   | `-CharacterLiteral 0x12602a158 <col:12> 'int' 102     |       |   `-BreakStmt 0x12602a1b0 <line:49:9>     |       `-DefaultStmt 0x125923220 <line:50:7, col:25>     |         `-BinaryOperator 0x125923200 <col:16, col:25> 'int' '='     |           |-DeclRefExpr 0x12602a1b8 <col:16> 'int' lvalue Var 0x12600e120 'status' 'int'     |           `-IntegerLiteral 0x12602a1d8 <col:25> 'int' 0     `-ReturnStmt 0x125923318 <line:53:3, col:10>       `-ImplicitCastExpr 0x125923300 <col:10> 'int' <LValueToRValue>         `-DeclRefExpr 0x1259232e0 <col:10> 'int' lvalue Var 0x12600e120 'status' 'int' ","19358":"`-FunctionDecl 0x14a054cd8  line:1:1 invalid wb_prep 'int (int *, const struct pkt_prep *, int)'   |-ParmVarDecl 0x14a03cd28 <col:9, col:29> col:29 invalid ndo 'int *'   |-ParmVarDecl 0x14a03d318 <line:2:9, col:32> col:32 used prep 'const struct pkt_prep *'   |-ParmVarDecl 0x14a03d398 <col:38, col:44> col:44 invalid len 'int'   `-CompoundStmt 0x14a055f08 <line:3:1, line:31:1>     |-DeclStmt 0x14a054e18 <line:4:2, col:7>     | `-VarDecl 0x14a054db0 <col:2, col:6> col:6 used n 'int'     |-DeclStmt 0x14a055018 <line:5:2, col:26>     | |-RecordDecl 0x14a054e30 <col:8, col:15> col:15 struct pgstate     | `-VarDecl 0x14a054f98 <col:2, col:24> col:24 used ps 'const struct pgstate *'     |-DeclStmt 0x14a055118 <line:6:2, col:37>     | `-VarDecl 0x14a055048 <col:2, col:26> col:16 ep 'const char *' cinit     |   `-CXXDependentScopeMemberExpr 0x14a0550d0 <col:21, col:26> '<dependent type>' contains-errors lvalue ->ndo_snapend     |     `-RecoveryExpr 0x14a0550b0 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14a055370 <line:8:2, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a055290 <col:2> 'int ()' Function 0x14a0551d8 'ND_PRINT' 'int ()'     | `-ParenExpr 0x14a055350 <col:11, col:22> 'char[4]' contains-errors     |   `-BinaryOperator 0x14a055330 <col:12, col:17> 'char[4]' contains-errors ','     |     |-RecoveryExpr 0x14a0552b0 <col:12> '<dependent type>' contains-errors lvalue     |     `-StringLiteral 0x14a055310 <col:17> 'char[4]' lvalue \"STR\"     |-IfStmt 0x14a0556f0 <line:9:2, line:10:13>     | |-RecoveryExpr 0x14a055668 <line:9:6, col:44> '_Bool' contains-errors     | `-ReturnStmt 0x14a0556e0 <line:10:3, col:13>     |   `-ParenExpr 0x14a0556c0 <col:10, col:13> 'int'     |     `-UnaryOperator 0x14a0556a8 <col:11, col:12> 'int' prefix '-'     |       `-IntegerLiteral 0x14a055688 <col:12> 'int' 1     |-BinaryOperator 0x14a0558d0 <line:11:2, col:32> 'int' contains-errors '='     | |-DeclRefExpr 0x14a055710 <col:2> 'int' lvalue Var 0x14a054db0 'n' 'int'     | `-CallExpr 0x14a0558a8 <col:6, col:32> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14a055810 <col:6> 'int ()' Function 0x14a055758 'EXTRACT_32BITS' 'int ()'     |   `-UnaryOperator 0x14a055890 <col:21, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x14a055868 <col:22, col:28> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14a055830 <col:22> 'const struct pkt_prep *' lvalue ParmVar 0x14a03d318 'prep' 'const struct pkt_prep *'     |-BinaryOperator 0x14a055a90 <line:12:2, col:40> 'const struct pgstate *' contains-errors '='     | |-DeclRefExpr 0x14a0558f0 <col:2> 'const struct pgstate *' lvalue Var 0x14a054f98 'ps' 'const struct pgstate *'     | `-CStyleCastExpr 0x14a055a68 <col:7, col:40> 'const struct pgstate *' contains-errors <Dependent>     |   `-ParenExpr 0x14a055a48 <col:31, col:40> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x14a055968 <col:32, col:39> '<dependent type>' contains-errors lvalue     |       |-DeclRefExpr 0x14a055910 <col:32> 'const struct pkt_prep *' lvalue ParmVar 0x14a03d318 'prep' 'const struct pkt_prep *'     |       `-IntegerLiteral 0x14a055930 <col:39> 'int' 1     `-WhileStmt 0x14a055ee8 <line:13:2, line:29:2>       |-BinaryOperator 0x14a8f6830 <line:13:9, col:33> 'int' contains-errors '&&'       | |-BinaryOperator 0x14a055b08 <col:9, col:16> 'int' '>='       | | |-UnaryOperator 0x14a055ad0 <col:9, col:11> 'int' prefix '--'       | | | `-DeclRefExpr 0x14a055ab0 <col:11> 'int' lvalue Var 0x14a054db0 'n' 'int'       | | `-IntegerLiteral 0x14a055ae8 <col:16> 'int' 0       | `-RecoveryExpr 0x14a8f6800 <col:21, col:33> '<dependent type>' contains-errors lvalue       |   |-DeclRefExpr 0x14a055b28 <col:21> 'int ()' Function 0x14a055450 'ND_TTEST' 'int ()'       |   `-UnaryOperator 0x14a055b80 <col:30, col:31> 'const struct pgstate' lvalue prefix '*' cannot overflow       |     `-ImplicitCastExpr 0x14a055b68 <col:31> 'const struct pgstate *' <LValueToRValue>       |       `-DeclRefExpr 0x14a055b48 <col:31> 'const struct pgstate *' lvalue Var 0x14a054f98 'ps' 'const struct pgstate *'       `-CompoundStmt 0x14a055ea0 <col:36, line:29:2>         |-DeclStmt 0x14a8f6ad0 <line:14:3, col:31>         | |-RecordDecl 0x14a8f6850 <col:9, col:16> col:16 struct id_off         | |-VarDecl 0x14a8f69b8 <col:3, col:24> col:24 used io 'const struct id_off *'         | `-VarDecl 0x14a8f6a48 <col:3, col:29> col:29 used ie 'const struct id_off *'         |-DeclStmt 0x14a8f6b90 <line:15:3, col:15>         | `-VarDecl 0x14a8f6af8 <col:3, col:12> col:8 used c 'char' cinit         |   `-ImplicitCastExpr 0x14a8f6b78 <col:12> 'char' <IntegralCast>         |     `-CharacterLiteral 0x14a8f6b60 <col:12> 'int' 60         |-CallExpr 0x14a8f7080 <line:17:3, line:20:39> '<dependent type>' contains-errors         | |-DeclRefExpr 0x14a8f6ba8 <line:17:3> 'int ()' Function 0x14a0551d8 'ND_PRINT' 'int ()'         | `-ParenExpr 0x14a8f7060 <col:12, line:20:38> '<dependent type>' contains-errors         |   `-BinaryOperator 0x14a8f7040 <line:17:13, line:20:37> '<dependent type>' contains-errors ','         |     |-BinaryOperator 0x14a8f6f18 <line:17:13, line:19:41> '<dependent type>' contains-errors ','         |     | |-BinaryOperator 0x14a8f6ce8 <line:17:13, line:18:31> '<dependent type>' contains-errors ','         |     | | |-BinaryOperator 0x14a8f6c08 <line:17:13, col:18> 'char[4]' contains-errors ','         |     | | | |-RecoveryExpr 0x14a8f6bc8 <col:13> '<dependent type>' contains-errors lvalue         |     | | | `-StringLiteral 0x14a8f6be8 <col:18> 'char[4]' lvalue \"STR\"         |     | | `-CallExpr 0x14a8f6cc0 <line:18:7, col:31> '<dependent type>' contains-errors         |     | |   |-DeclRefExpr 0x14a8f6c28 <col:7> 'int ()' Function 0x14a055758 'EXTRACT_32BITS' 'int ()'         |     | |   `-UnaryOperator 0x14a8f6ca8 <col:22, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow         |     | |     `-RecoveryExpr 0x14a8f6c80 <col:23, col:27> '<dependent type>' contains-errors lvalue         |     | |       `-DeclRefExpr 0x14a8f6c48 <col:23> 'const struct pgstate *' lvalue Var 0x14a054f98 'ps' 'const struct pgstate *'         |     | `-CallExpr 0x14a8f6ee8 <line:19:7, col:41> '<dependent type>' contains-errors         |     |   |-DeclRefExpr 0x14a8f6de8 <col:7> 'int ()' Function 0x14a8f6d30 'ipaddr_string' 'int ()'         |     |   |-RecoveryExpr 0x14a8f6e08 <col:21> '<dependent type>' contains-errors lvalue         |     |   `-UnaryOperator 0x14a8f6ed0 <col:26, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow         |     |     `-CXXDependentScopeMemberExpr 0x14a8f6e88 <col:27, col:36> '<dependent type>' contains-errors lvalue .p_sid         |     |       `-RecoveryExpr 0x14a8f6e60 <col:27, col:31> '<dependent type>' contains-errors lvalue         |     |         `-DeclRefExpr 0x14a8f6e28 <col:27> 'const struct pgstate *' lvalue Var 0x14a054f98 'ps' 'const struct pgstate *'         |     `-CallExpr 0x14a8f7018 <line:20:7, col:37> '<dependent type>' contains-errors         |       |-DeclRefExpr 0x14a8f6f38 <col:7> 'int ()' Function 0x14a055758 'EXTRACT_32BITS' 'int ()'         |       `-UnaryOperator 0x14a8f7000 <col:22, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow         |         `-CXXDependentScopeMemberExpr 0x14a8f6fb8 <col:23, col:32> '<dependent type>' contains-errors lvalue .p_uid         |           `-RecoveryExpr 0x14a8f6f90 <col:23, col:27> '<dependent type>' contains-errors lvalue         |             `-DeclRefExpr 0x14a8f6f58 <col:23> 'const struct pgstate *' lvalue Var 0x14a054f98 'ps' 'const struct pgstate *'         |-BinaryOperator 0x14a8f7240 <line:21:3, col:38> 'const struct id_off *' contains-errors '='         | |-DeclRefExpr 0x14a8f70a8 <col:3> 'const struct id_off *' lvalue Var 0x14a8f69b8 'io' 'const struct id_off *'         | `-CStyleCastExpr 0x14a8f7218 <col:8, col:38> 'const struct id_off *' contains-errors <Dependent>         |   `-ParenExpr 0x14a8f71f8 <col:31, col:38> '<dependent type>' contains-errors lvalue         |     `-RecoveryExpr 0x14a8f7120 <col:32, col:37> '<dependent type>' contains-errors lvalue         |       |-DeclRefExpr 0x14a8f70c8 <col:32> 'const struct pgstate *' lvalue Var 0x14a054f98 'ps' 'const struct pgstate *'         |       `-IntegerLiteral 0x14a8f70e8 <col:37> 'int' 1         |-ForStmt 0x14a055cd8 <line:22:3, line:26:3>         | |-BinaryOperator 0x14a8f7320 <line:22:8, col:22> 'const struct id_off *' contains-errors '='         | | |-DeclRefExpr 0x14a8f7260 <col:8> 'const struct id_off *' lvalue Var 0x14a8f6a48 'ie' 'const struct id_off *'         | | `-BinaryOperator 0x14a8f7300 <col:13, col:22> '<dependent type>' contains-errors '+'         | |   |-DeclRefExpr 0x14a8f7280 <col:13> 'const struct id_off *' lvalue Var 0x14a8f69b8 'io' 'const struct id_off *'         | |   `-RecoveryExpr 0x14a8f72d8 <col:18, col:22> '<dependent type>' contains-errors lvalue         | |     `-DeclRefExpr 0x14a8f72a0 <col:18> 'const struct pgstate *' lvalue Var 0x14a054f98 'ps' 'const struct pgstate *'         | |-<<<NULL>>>         | |-BinaryOperator 0x14a8f74c8 <col:27, col:50> 'int' contains-errors '&&'         | | |-BinaryOperator 0x14a8f73b0 <col:27, col:32> 'int' '<'         | | | |-ImplicitCastExpr 0x14a8f7380 <col:27> 'const struct id_off *' <LValueToRValue>         | | | | `-DeclRefExpr 0x14a8f7340 <col:27> 'const struct id_off *' lvalue Var 0x14a8f69b8 'io' 'const struct id_off *'         | | | `-ImplicitCastExpr 0x14a8f7398 <col:32> 'const struct id_off *' <LValueToRValue>         | | |   `-DeclRefExpr 0x14a8f7360 <col:32> 'const struct id_off *' lvalue Var 0x14a8f6a48 'ie' 'const struct id_off *'         | | `-RecoveryExpr 0x14a8f7498 <col:38, col:50> '<dependent type>' contains-errors lvalue         | |   |-DeclRefExpr 0x14a8f73d0 <col:38> 'int ()' Function 0x14a055450 'ND_TTEST' 'int ()'         | |   `-UnaryOperator 0x14a8f7428 <col:47, col:48> 'const struct id_off' lvalue prefix '*' cannot overflow         | |     `-ImplicitCastExpr 0x14a8f7410 <col:48> 'const struct id_off *' <LValueToRValue>         | |       `-DeclRefExpr 0x14a8f73f0 <col:48> 'const struct id_off *' lvalue Var 0x14a8f69b8 'io' 'const struct id_off *'         | |-ImplicitCastExpr 0x14a8f7530 <col:53, col:55> '<dependent type>' contains-errors <LValueToRValue>         | | `-RecoveryExpr 0x14a8f7508 <col:53, col:55> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x14a8f74e8 <col:55> 'const struct id_off *' lvalue Var 0x14a8f69b8 'io' 'const struct id_off *'         | `-CompoundStmt 0x14a055cb8 <col:59, line:26:3>         |   |-CallExpr 0x14a055c20 <line:23:4, line:24:33> '<dependent type>' contains-errors         |   | |-DeclRefExpr 0x14a8f7548 <line:23:4> 'int ()' Function 0x14a0551d8 'ND_PRINT' 'int ()'         |   | `-ParenExpr 0x14a055c00 <col:13, line:24:32> '<dependent type>' contains-errors         |   |   `-BinaryOperator 0x14a8f77d0 <line:23:14, line:24:31> '<dependent type>' contains-errors ','         |   |     |-BinaryOperator 0x14a8f76f0 <line:23:14, col:55> '<dependent type>' contains-errors ','         |   |     | |-BinaryOperator 0x14a8f75e8 <col:14, col:26> 'char' contains-errors ','         |   |     | | |-BinaryOperator 0x14a8f75a8 <col:14, col:19> 'char[4]' contains-errors ','         |   |     | | | |-RecoveryExpr 0x14a8f7568 <col:14> '<dependent type>' contains-errors lvalue         |   |     | | | `-StringLiteral 0x14a8f7588 <col:19> 'char[4]' lvalue \"STR\"         |   |     | | `-DeclRefExpr 0x14a8f75c8 <col:26> 'char' lvalue Var 0x14a8f6af8 'c' 'char'         |   |     | `-CallExpr 0x14a8f76c0 <col:29, col:55> '<dependent type>' contains-errors         |   |     |   |-DeclRefExpr 0x14a8f7608 <col:29> 'int ()' Function 0x14a8f6d30 'ipaddr_string' 'int ()'         |   |     |   |-RecoveryExpr 0x14a8f7628 <col:43> '<dependent type>' contains-errors lvalue         |   |     |   `-UnaryOperator 0x14a8f76a8 <col:48, col:53> '<dependent type>' contains-errors prefix '&' cannot overflow         |   |     |     `-RecoveryExpr 0x14a8f7680 <col:49, col:53> '<dependent type>' contains-errors lvalue         |   |     |       `-DeclRefExpr 0x14a8f7648 <col:49> 'const struct id_off *' lvalue Var 0x14a8f69b8 'io' 'const struct id_off *'         |   |     `-CallExpr 0x14a8f77a8 <line:24:8, col:31> '<dependent type>' contains-errors         |   |       |-DeclRefExpr 0x14a8f7710 <col:8> 'int ()' Function 0x14a055758 'EXTRACT_32BITS' 'int ()'         |   |       `-UnaryOperator 0x14a8f7790 <col:23, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow         |   |         `-RecoveryExpr 0x14a8f7768 <col:24, col:28> '<dependent type>' contains-errors lvalue         |   |           `-DeclRefExpr 0x14a8f7730 <col:24> 'const struct id_off *' lvalue Var 0x14a8f69b8 'io' 'const struct id_off *'         |   `-BinaryOperator 0x14a055c98 <line:25:4, col:8> 'char' '='         |     |-DeclRefExpr 0x14a055c48 <col:4> 'char' lvalue Var 0x14a8f6af8 'c' 'char'         |     `-ImplicitCastExpr 0x14a055c80 <col:8> 'char' <IntegralCast>         |       `-CharacterLiteral 0x14a055c68 <col:8> 'int' 44         |-CallExpr 0x14a055db0 <line:27:3, col:24> '<dependent type>' contains-errors         | |-DeclRefExpr 0x14a055d10 <col:3> 'int ()' Function 0x14a0551d8 'ND_PRINT' 'int ()'         | `-ParenExpr 0x14a055d90 <col:12, col:23> 'char[4]' contains-errors         |   `-BinaryOperator 0x14a055d70 <col:13, col:18> 'char[4]' contains-errors ','         |     |-RecoveryExpr 0x14a055d30 <col:13> '<dependent type>' contains-errors lvalue         |     `-StringLiteral 0x14a055d50 <col:18> 'char[4]' lvalue \"STR\"         `-BinaryOperator 0x14a055e80 <line:28:3, col:32> 'const struct pgstate *' '='           |-DeclRefExpr 0x14a055dd8 <col:3> 'const struct pgstate *' lvalue Var 0x14a054f98 'ps' 'const struct pgstate *'           `-CStyleCastExpr 0x14a055e58 <col:8, col:32> 'const struct pgstate *' <BitCast>             `-ImplicitCastExpr 0x14a055e40 <col:32> 'const struct id_off *' <LValueToRValue> part_of_explicit_cast               `-DeclRefExpr 0x14a055df8 <col:32> 'const struct id_off *' lvalue Var 0x14a8f69b8 'io' 'const struct id_off *' ","19222":"`-FunctionDecl 0x133140b48  line:1:5 usb_string_ids_tab 'int (struct usb_composite_dev *, struct usb_string *)'   |-ParmVarDecl 0x133128648 <col:24, col:50> col:50 used cdev 'struct usb_composite_dev *'   |-ParmVarDecl 0x133140a28 <col:56, col:75> col:75 used str 'struct usb_string *'   `-CompoundStmt 0x1331412e8 <line:2:1, line:14:1>     |-DeclStmt 0x133140d28 <line:3:2, col:33>     | `-VarDecl 0x133140c60 <col:2, col:19> col:6 used next 'int' cinit     |   `-RecoveryExpr 0x133140d00 <col:13, col:19> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x133140cc8 <col:13> 'struct usb_composite_dev *' lvalue ParmVar 0x133128648 'cdev' 'struct usb_composite_dev *'     |-ForStmt 0x1331411e0 <line:5:2, line:9:2>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-RecoveryExpr 0x133140d78 <line:5:9, col:14> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x133140d40 <col:9> 'struct usb_string *' lvalue ParmVar 0x133140a28 'str' 'struct usb_string *'     | |-ImplicitCastExpr 0x133140de8 <col:17, col:19> '<dependent type>' contains-errors <LValueToRValue>     | | `-RecoveryExpr 0x133140dc0 <col:17, col:19> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x133140da0 <col:19> 'struct usb_string *' lvalue ParmVar 0x133140a28 'str' 'struct usb_string *'     | `-CompoundStmt 0x1331411c0 <col:24, line:9:2>     |   |-IfStmt 0x1331410e8 <line:6:3, line:7:12>     |   | |-CallExpr 0x133141018 <line:6:7, col:27> 'int' contains-errors     |   | | |-ImplicitCastExpr 0x133141000 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | | | `-DeclRefExpr 0x133140f30 <col:7> 'int ()' Function 0x133140e78 'unlikely' 'int ()'     |   | | `-BinaryOperator 0x133140fa8 <col:16, col:24> 'int' contains-errors '>='     |   | |   |-ImplicitCastExpr 0x133140f90 <col:16> 'int' contains-errors <LValueToRValue>     |   | |   | `-DeclRefExpr 0x133140f50 <col:16> 'int' contains-errors lvalue Var 0x133140c60 'next' 'int'     |   | |   `-IntegerLiteral 0x133140f70 <col:24> 'int' 254     |   | `-ReturnStmt 0x1331410d8 <line:7:4, col:12>     |   |   `-UnaryOperator 0x1331410c0 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |     `-ImplicitCastExpr 0x1331410a8 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |   |       `-RecoveryExpr 0x133141088 <col:12> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x1331411a0 <line:8:3, col:15> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x133141140 <col:3, col:8> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x133141108 <col:3> 'struct usb_string *' lvalue ParmVar 0x133140a28 'str' 'struct usb_string *'     |     `-UnaryOperator 0x133141188 <col:13, col:15> 'int' contains-errors prefix '++'     |       `-DeclRefExpr 0x133141168 <col:15> 'int' contains-errors lvalue Var 0x133140c60 'next' 'int'     |-BinaryOperator 0x133141298 <line:11:2, col:25> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x133141250 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x133141218 <col:2> 'struct usb_composite_dev *' lvalue ParmVar 0x133128648 'cdev' 'struct usb_composite_dev *'     | `-DeclRefExpr 0x133141278 <col:25> 'int' contains-errors lvalue Var 0x133140c60 'next' 'int'     `-ReturnStmt 0x1331412d8 <line:13:2, col:9>       `-IntegerLiteral 0x1331412b8 <col:9> 'int' 0 ","20169":"`-FunctionDecl 0x155026878  line:1:14 __packet_lookup_frame_in_block 'void *(struct packet_sock *, struct sk_buff *, int, unsigned int)' static   |-ParmVarDecl 0x15500e248 <col:45, col:65> col:65 used po 'struct packet_sock *'   |-ParmVarDecl 0x155026628 <line:2:10, col:26> col:26 used skb 'struct sk_buff *'   |-ParmVarDecl 0x1550266a8 <line:3:7, col:11> col:11 status 'int'   |-ParmVarDecl 0x155026728 <line:4:10, col:23> col:23 used len 'unsigned int'   `-CompoundStmt 0x15502b520 <line:6:1, line:50:1>     |-DeclStmt 0x155026b78 <line:7:2, col:31>     | |-RecordDecl 0x155026988 <col:2, col:9> col:9 struct tpacket_kbdq_core     | `-VarDecl 0x155026af8 <col:2, col:28> col:28 used pkc 'struct tpacket_kbdq_core *'     |-DeclStmt 0x155026d78 <line:8:2, col:32>     | |-RecordDecl 0x155026b90 <col:2, col:9> col:9 struct tpacket_block_desc     | `-VarDecl 0x155026cf8 <col:2, col:29> col:29 used pbd 'struct tpacket_block_desc *'     |-DeclStmt 0x155026ea8 <line:9:2, col:18>     | |-VarDecl 0x155026da8 <col:2, col:8> col:8 used curr 'char *'     | `-VarDecl 0x155026e28 <col:2, col:15> col:15 used end 'char *'     |-BinaryOperator 0x1550270d0 <line:11:2, col:38> 'struct tpacket_kbdq_core *' contains-errors '='     | |-DeclRefExpr 0x155026ec0 <col:2> 'struct tpacket_kbdq_core *' lvalue Var 0x155026af8 'pkc' 'struct tpacket_kbdq_core *'     | `-CallExpr 0x1550270a8 <col:8, col:38> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x155027010 <col:8> 'int ()' Function 0x155026f58 'GET_PBDQC_FROM_RB' 'int ()'     |   `-UnaryOperator 0x155027090 <col:26, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x155027068 <col:27, col:31> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x155027030 <col:27> 'struct packet_sock *' lvalue ParmVar 0x15500e248 'po' 'struct packet_sock *'     |-BinaryOperator 0x1550272d0 <line:12:2, col:42> 'struct tpacket_block_desc *' '='     | |-DeclRefExpr 0x1550270f0 <col:2> 'struct tpacket_block_desc *' lvalue Var 0x155026cf8 'pbd' 'struct tpacket_block_desc *'     | `-ImplicitCastExpr 0x1550272b8 <col:8, col:42> 'struct tpacket_block_desc *' <IntegralToPointer>     |   `-CallExpr 0x155027278 <col:8, col:42> 'int'     |     |-ImplicitCastExpr 0x155027260 <col:8> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1550271f0 <col:8> 'int ()' Function 0x155027138 'GET_CURR_PBLOCK_DESC_FROM_CORE' 'int ()'     |     `-ImplicitCastExpr 0x1550272a0 <col:39> 'struct tpacket_kbdq_core *' <LValueToRValue>     |       `-DeclRefExpr 0x155027210 <col:39> 'struct tpacket_kbdq_core *' lvalue Var 0x155026af8 'pkc' 'struct tpacket_kbdq_core *'     |-IfStmt 0x155029460 <line:15:2, line:24:2>     | |-CallExpr 0x155027428 <line:15:6, col:26> 'int'     | | |-ImplicitCastExpr 0x155027410 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x1550273d0 <col:6> 'int ()' Function 0x155027318 'prb_queue_frozen' 'int ()'     | | `-ImplicitCastExpr 0x155027450 <col:23> 'struct tpacket_kbdq_core *' <LValueToRValue>     | |   `-DeclRefExpr 0x1550273f0 <col:23> 'struct tpacket_kbdq_core *' lvalue Var 0x155026af8 'pkc' 'struct tpacket_kbdq_core *'     | `-CompoundStmt 0x155029448 <col:29, line:24:2>     |   `-IfStmt 0x155029418 <line:17:3, line:23:3> has_else     |     |-CallExpr 0x1550275a0 <line:17:7, col:30> 'int'     |     | |-ImplicitCastExpr 0x155027588 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     | | `-DeclRefExpr 0x155027548 <col:7> 'int ()' Function 0x155027490 'prb_curr_blk_in_use' 'int ()'     |     | `-ImplicitCastExpr 0x1550275c8 <col:27> 'struct tpacket_block_desc *' <LValueToRValue>     |     |   `-DeclRefExpr 0x155027568 <col:27> 'struct tpacket_block_desc *' lvalue Var 0x155026cf8 'pbd' 'struct tpacket_block_desc *'     |     |-CompoundStmt 0x155029230 <col:33, line:20:3>     |     | `-ReturnStmt 0x155029220 <line:19:4, col:11>     |     |   `-RecoveryExpr 0x155029200 <col:11> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x155029400 <line:20:10, line:23:3>     |       `-CallExpr 0x1550293a0 <line:22:4, col:27> 'int'     |         |-ImplicitCastExpr 0x155029388 <col:4> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x155029328 <col:4> 'int ()' Function 0x155029270 'prb_open_block' 'int ()'     |         |-ImplicitCastExpr 0x1550293d0 <col:19> 'struct tpacket_kbdq_core *' <LValueToRValue>     |         | `-DeclRefExpr 0x155029348 <col:19> 'struct tpacket_kbdq_core *' lvalue Var 0x155026af8 'pkc' 'struct tpacket_kbdq_core *'     |         `-ImplicitCastExpr 0x1550293e8 <col:24> 'struct tpacket_block_desc *' <LValueToRValue>     |           `-DeclRefExpr 0x155029368 <col:24> 'struct tpacket_block_desc *' lvalue Var 0x155026cf8 'pbd' 'struct tpacket_block_desc *'     |-CallExpr 0x155029598 <line:26:2, col:9> 'int'     | `-ImplicitCastExpr 0x155029580 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x155029560 <col:2> 'int ()' Function 0x1550294a8 'smp_mb' 'int ()'     |-BinaryOperator 0x155029638 <line:27:2, col:14> 'char *' contains-errors '='     | |-DeclRefExpr 0x1550295b8 <col:2> 'char *' lvalue Var 0x155026da8 'curr' 'char *'     | `-RecoveryExpr 0x155029610 <col:9, col:14> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1550295d8 <col:9> 'struct tpacket_kbdq_core *' lvalue Var 0x155026af8 'pkc' 'struct tpacket_kbdq_core *'     |-BinaryOperator 0x1550296d8 <line:28:2, col:13> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x155029690 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x155029658 <col:2> 'struct tpacket_kbdq_core *' lvalue Var 0x155026af8 'pkc' 'struct tpacket_kbdq_core *'     | `-DeclRefExpr 0x1550296b8 <col:13> 'struct sk_buff *' lvalue ParmVar 0x155026628 'skb' 'struct sk_buff *'     |-BinaryOperator 0x155029810 <line:29:2, col:27> 'char *' contains-errors '='     | |-DeclRefExpr 0x1550296f8 <col:2> 'char *' lvalue Var 0x155026e28 'end' 'char *'     | `-BinaryOperator 0x1550297f0 <col:8, col:27> '<dependent type>' contains-errors '+'     |   |-CStyleCastExpr 0x155029768 <col:8, col:16> 'char *' <BitCast>     |   | `-ImplicitCastExpr 0x155029750 <col:16> 'struct tpacket_block_desc *' <LValueToRValue> part_of_explicit_cast     |   |   `-DeclRefExpr 0x155029718 <col:16> 'struct tpacket_block_desc *' lvalue Var 0x155026cf8 'pbd' 'struct tpacket_block_desc *'     |   `-RecoveryExpr 0x1550297c8 <col:22, col:27> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x155029790 <col:22> 'struct tpacket_kbdq_core *' lvalue Var 0x155026af8 'pkc' 'struct tpacket_kbdq_core *'     |-IfStmt 0x155029d38 <line:32:2, line:35:2>     | |-BinaryOperator 0x155029a38 <line:32:6, col:43> 'int' '<'     | | |-BinaryOperator 0x1550299e0 <col:6, col:39> 'char *' '+'     | | | |-ImplicitCastExpr 0x1550299c8 <col:6> 'char *' <LValueToRValue>     | | | | `-DeclRefExpr 0x155029830 <col:6> 'char *' lvalue Var 0x155026da8 'curr' 'char *'     | | | `-CallExpr 0x155029988 <col:11, col:39> 'int'     | | |   |-ImplicitCastExpr 0x155029970 <col:11> 'int (*)()' <FunctionToPointerDecay>     | | |   | `-DeclRefExpr 0x155029930 <col:11> 'int ()' Function 0x155029878 'TOTAL_PKT_LEN_INCL_ALIGN' 'int ()'     | | |   `-ImplicitCastExpr 0x1550299b0 <col:36> 'unsigned int' <LValueToRValue>     | | |     `-DeclRefExpr 0x155029950 <col:36> 'unsigned int' lvalue ParmVar 0x155026728 'len' 'unsigned int'     | | `-ImplicitCastExpr 0x155029a20 <col:43> 'char *' <LValueToRValue>     | |   `-DeclRefExpr 0x155029a00 <col:43> 'char *' lvalue Var 0x155026e28 'end' 'char *'     | `-CompoundStmt 0x155029d18 <col:48, line:35:2>     |   |-CallExpr 0x155029bf0 <line:33:3, col:42> 'int'     |   | |-ImplicitCastExpr 0x155029bd8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x155029b38 <col:3> 'int ()' Function 0x155029a80 'prb_fill_curr_block' 'int ()'     |   | |-ImplicitCastExpr 0x155029c30 <col:23> 'char *' <LValueToRValue>     |   | | `-DeclRefExpr 0x155029b58 <col:23> 'char *' lvalue Var 0x155026da8 'curr' 'char *'     |   | |-ImplicitCastExpr 0x155029c48 <col:29> 'struct tpacket_kbdq_core *' <LValueToRValue>     |   | | `-DeclRefExpr 0x155029b78 <col:29> 'struct tpacket_kbdq_core *' lvalue Var 0x155026af8 'pkc' 'struct tpacket_kbdq_core *'     |   | |-ImplicitCastExpr 0x155029c60 <col:34> 'struct tpacket_block_desc *' <LValueToRValue>     |   | | `-DeclRefExpr 0x155029b98 <col:34> 'struct tpacket_block_desc *' lvalue Var 0x155026cf8 'pbd' 'struct tpacket_block_desc *'     |   | `-ImplicitCastExpr 0x155029c78 <col:39> 'unsigned int' <LValueToRValue>     |   |   `-DeclRefExpr 0x155029bb8 <col:39> 'unsigned int' lvalue ParmVar 0x155026728 'len' 'unsigned int'     |   `-ReturnStmt 0x155029d08 <line:34:3, col:18>     |     `-CStyleCastExpr 0x155029ce0 <col:10, col:18> 'void *' <BitCast>     |       `-ImplicitCastExpr 0x155029cc8 <col:18> 'char *' <LValueToRValue> part_of_explicit_cast     |         `-DeclRefExpr 0x155029c90 <col:18> 'char *' lvalue Var 0x155026da8 'curr' 'char *'     |-CallExpr 0x155029ed0 <line:38:2, col:37> 'int'     | |-ImplicitCastExpr 0x155029eb8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x155029e38 <col:2> 'int ()' Function 0x155029d80 'prb_retire_current_block' 'int ()'     | |-ImplicitCastExpr 0x155029f08 <col:27> 'struct tpacket_kbdq_core *' <LValueToRValue>     | | `-DeclRefExpr 0x155029e58 <col:27> 'struct tpacket_kbdq_core *' lvalue Var 0x155026af8 'pkc' 'struct tpacket_kbdq_core *'     | |-ImplicitCastExpr 0x155029f20 <col:32> 'struct packet_sock *' <LValueToRValue>     | | `-DeclRefExpr 0x155029e78 <col:32> 'struct packet_sock *' lvalue ParmVar 0x15500e248 'po' 'struct packet_sock *'     | `-IntegerLiteral 0x155029e98 <col:36> 'int' 0     |-BinaryOperator 0x15502a150 <line:41:2, col:48> 'char *' '='     | |-DeclRefExpr 0x155029f38 <col:2> 'char *' lvalue Var 0x155026da8 'curr' 'char *'     | `-CStyleCastExpr 0x15502a128 <col:9, col:48> 'char *' <IntegralToPointer>     |   `-CallExpr 0x15502a0b0 <col:17, col:48> 'int'     |     |-ImplicitCastExpr 0x15502a098 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x15502a038 <col:17> 'int ()' Function 0x155029f80 'prb_dispatch_next_block' 'int ()'     |     |-ImplicitCastExpr 0x15502a0e0 <col:41> 'struct tpacket_kbdq_core *' <LValueToRValue>     |     | `-DeclRefExpr 0x15502a058 <col:41> 'struct tpacket_kbdq_core *' lvalue Var 0x155026af8 'pkc' 'struct tpacket_kbdq_core *'     |     `-ImplicitCastExpr 0x15502a0f8 <col:46> 'struct packet_sock *' <LValueToRValue>     |       `-DeclRefExpr 0x15502a078 <col:46> 'struct packet_sock *' lvalue ParmVar 0x15500e248 'po' 'struct packet_sock *'     |-IfStmt 0x15502b4b8 <line:42:2, line:46:2>     | |-ImplicitCastExpr 0x15502a190 <line:42:6> 'char *' <LValueToRValue>     | | `-DeclRefExpr 0x15502a170 <col:6> 'char *' lvalue Var 0x155026da8 'curr' 'char *'     | `-CompoundStmt 0x15502b490 <col:12, line:46:2>     |   |-BinaryOperator 0x15502b290 <line:43:3, col:43> 'struct tpacket_block_desc *' '='     |   | |-DeclRefExpr 0x15502a1a8 <col:3> 'struct tpacket_block_desc *' lvalue Var 0x155026cf8 'pbd' 'struct tpacket_block_desc *'     |   | `-ImplicitCastExpr 0x15502b278 <col:9, col:43> 'struct tpacket_block_desc *' <IntegralToPointer>     |   |   `-CallExpr 0x15502b238 <col:9, col:43> 'int'     |   |     |-ImplicitCastExpr 0x15502b220 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x15502a1c8 <col:9> 'int ()' Function 0x155027138 'GET_CURR_PBLOCK_DESC_FROM_CORE' 'int ()'     |   |     `-ImplicitCastExpr 0x15502b260 <col:40> 'struct tpacket_kbdq_core *' <LValueToRValue>     |   |       `-DeclRefExpr 0x15502b200 <col:40> 'struct tpacket_kbdq_core *' lvalue Var 0x155026af8 'pkc' 'struct tpacket_kbdq_core *'     |   |-CallExpr 0x15502b368 <line:44:3, col:42> 'int'     |   | |-ImplicitCastExpr 0x15502b350 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x15502b2b0 <col:3> 'int ()' Function 0x155029a80 'prb_fill_curr_block' 'int ()'     |   | |-ImplicitCastExpr 0x15502b3a8 <col:23> 'char *' <LValueToRValue>     |   | | `-DeclRefExpr 0x15502b2d0 <col:23> 'char *' lvalue Var 0x155026da8 'curr' 'char *'     |   | |-ImplicitCastExpr 0x15502b3c0 <col:29> 'struct tpacket_kbdq_core *' <LValueToRValue>     |   | | `-DeclRefExpr 0x15502b2f0 <col:29> 'struct tpacket_kbdq_core *' lvalue Var 0x155026af8 'pkc' 'struct tpacket_kbdq_core *'     |   | |-ImplicitCastExpr 0x15502b3d8 <col:34> 'struct tpacket_block_desc *' <LValueToRValue>     |   | | `-DeclRefExpr 0x15502b310 <col:34> 'struct tpacket_block_desc *' lvalue Var 0x155026cf8 'pbd' 'struct tpacket_block_desc *'     |   | `-ImplicitCastExpr 0x15502b3f0 <col:39> 'unsigned int' <LValueToRValue>     |   |   `-DeclRefExpr 0x15502b330 <col:39> 'unsigned int' lvalue ParmVar 0x155026728 'len' 'unsigned int'     |   `-ReturnStmt 0x15502b480 <line:45:3, col:18>     |     `-CStyleCastExpr 0x15502b458 <col:10, col:18> 'void *' <BitCast>     |       `-ImplicitCastExpr 0x15502b440 <col:18> 'char *' <LValueToRValue> part_of_explicit_cast     |         `-DeclRefExpr 0x15502b408 <col:18> 'char *' lvalue Var 0x155026da8 'curr' 'char *'     `-ReturnStmt 0x15502b510 <line:49:2, col:9>       `-RecoveryExpr 0x15502b4f0 <col:9> '<dependent type>' contains-errors lvalue ","19946":"`-FunctionDecl 0x15800dda8  line:1:1 PS_CREATE_SID_FUNC 'int (int)'   |-ParmVarDecl 0x15800dcd8 <col:20> col:20 files 'int'   `-CompoundStmt 0x14f922ea0 <line:2:1, line:22:1>     |-DeclStmt 0x15800df20 <line:3:2, col:11>     | `-VarDecl 0x15800deb8 <col:2, col:8> col:8 used sid 'char *'     |-DeclStmt 0x15800dfd8 <line:4:2, col:17>     | `-VarDecl 0x15800df50 <col:2, col:16> col:6 used maxfail 'int' cinit     |   `-IntegerLiteral 0x15800dfb8 <col:16> 'int' 3     |-DoStmt 0x14f9229f8 <line:7:2, line:19:14>     | |-CompoundStmt 0x14f922990 <line:7:5, line:19:2>     | | `-IfStmt 0x14f922970 <line:10:3, line:18:3>     | |   |-RecoveryExpr 0x15800e340 <line:10:7, col:51> '_Bool' contains-errors     | |   `-CompoundStmt 0x14f922950 <col:60, line:18:3>     | |     |-IfStmt 0x14f922840 <line:11:4, line:14:4>     | |     | |-ImplicitCastExpr 0x15800e380 <line:11:8> 'char *' <LValueToRValue>     | |     | | `-DeclRefExpr 0x15800e360 <col:8> 'char *' lvalue Var 0x15800deb8 'sid' 'char *'     | |     | `-CompoundStmt 0x14f922820 <col:13, line:14:4>     | |     |   |-CallExpr 0x14f922748 <line:12:5, col:14> 'int'     | |     |   | |-ImplicitCastExpr 0x14f922730 <col:5> 'int (*)()' <FunctionToPointerDecay>     | |     |   | | `-DeclRefExpr 0x14f9226b8 <col:5> 'int ()' Function 0x14f922600 'efree' 'int ()'     | |     |   | `-ImplicitCastExpr 0x14f922770 <col:11> 'char *' <LValueToRValue>     | |     |   |   `-DeclRefExpr 0x14f9226d8 <col:11> 'char *' lvalue Var 0x15800deb8 'sid' 'char *'     | |     |   `-BinaryOperator 0x14f922800 <line:13:5, col:11> 'char *' contains-errors '='     | |     |     |-DeclRefExpr 0x14f922788 <col:5> 'char *' lvalue Var 0x15800deb8 'sid' 'char *'     | |     |     `-RecoveryExpr 0x14f9227e0 <col:11> '<dependent type>' contains-errors lvalue     | |     `-IfStmt 0x14f922930 <line:15:4, line:17:4>     | |       |-UnaryOperator 0x14f9228b8 <line:15:8, col:19> 'int' prefix '!' cannot overflow     | |       | `-ParenExpr 0x14f922898 <col:9, col:19> 'int'     | |       |   `-UnaryOperator 0x14f922880 <col:10, col:17> 'int' postfix '--'     | |       |     `-DeclRefExpr 0x14f922860 <col:10> 'int' lvalue Var 0x15800df50 'maxfail' 'int'     | |       `-CompoundStmt 0x14f922918 <col:22, line:17:4>     | |         `-ReturnStmt 0x14f922908 <line:16:5, col:12>     | |           `-RecoveryExpr 0x14f9228e8 <col:12> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x14f9229e0 <line:19:10, col:11> 'int' prefix '!' cannot overflow     |   `-ImplicitCastExpr 0x14f9229c8 <col:11> 'char *' <LValueToRValue>     |     `-DeclRefExpr 0x14f9229a8 <col:11> 'char *' lvalue Var 0x15800deb8 'sid' 'char *'     `-ReturnStmt 0x14f922e90 <line:21:2, col:9>       `-ImplicitCastExpr 0x14f922a50 <col:9> 'int' <PointerToIntegral>         `-ImplicitCastExpr 0x14f922a38 <col:9> 'char *' <LValueToRValue>           `-DeclRefExpr 0x14f922a18 <col:9> 'char *' lvalue Var 0x15800deb8 'sid' 'char *' ","19573":"`-FunctionDecl 0x1400269e8  line:1:27 invalid pending_ccc_new 'struct pending_op *(struct bt_att *, struct gatt_db_attribute *, int, int)' static   |-ParmVarDecl 0x14000e2e8 <col:43, col:58> col:58 used att 'struct bt_att *'   |-ParmVarDecl 0x1400266c8 <line:2:6, col:32> col:32 used attrib 'struct gatt_db_attribute *'   |-ParmVarDecl 0x140026760 <line:3:6, col:15> col:15 invalid value 'int'   |-ParmVarDecl 0x1400267e0 <line:4:6, col:14> col:14 invalid link_type 'int'   `-CompoundStmt 0x140029570 <line:5:1, line:25:1>     |-DeclStmt 0x140026ba0 <line:6:2, col:23>     | `-VarDecl 0x140026b38 <col:2, col:21> col:21 used op 'struct pending_op *'     |-DeclStmt 0x140026da8 <line:7:2, col:27>     | |-RecordDecl 0x140026bb8 <col:2, col:9> col:9 struct btd_device     | `-VarDecl 0x140026d28 <col:2, col:21> col:21 used device 'struct btd_device *'     |-BinaryOperator 0x140027020 <line:9:2, col:29> 'struct btd_device *' '='     | |-DeclRefExpr 0x140026dc0 <col:2> 'struct btd_device *' lvalue Var 0x140026d28 'device' 'struct btd_device *'     | `-ImplicitCastExpr 0x140027008 <col:11, col:29> 'struct btd_device *' <IntegralToPointer>     |   `-CallExpr 0x140026fc8 <col:11, col:29> 'int'     |     |-ImplicitCastExpr 0x140026fb0 <col:11> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x140026f40 <col:11> 'int ()' Function 0x140026e88 'att_get_device' 'int ()'     |     `-ImplicitCastExpr 0x140026ff0 <col:26> 'struct bt_att *' <LValueToRValue>     |       `-DeclRefExpr 0x140026f60 <col:26> 'struct bt_att *' lvalue ParmVar 0x14000e2e8 'att' 'struct bt_att *'     |-IfStmt 0x1400272b0 <line:10:2, line:13:2>     | |-UnaryOperator 0x140027078 <line:10:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x140027060 <col:7> 'struct btd_device *' <LValueToRValue>     | |   `-DeclRefExpr 0x140027040 <col:7> 'struct btd_device *' lvalue Var 0x140026d28 'device' 'struct btd_device *'     | `-CompoundStmt 0x140027290 <col:15, line:13:2>     |   |-CallExpr 0x140027208 <line:11:3, col:14> 'int'     |   | |-ImplicitCastExpr 0x1400271f0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x140027170 <col:3> 'int ()' Function 0x1400270b8 'error' 'int ()'     |   | `-ImplicitCastExpr 0x140027230 <col:9> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x1400271d0 <col:9> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x140027280 <line:12:3, col:10>     |     `-RecoveryExpr 0x140027260 <col:10> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x140029200 <line:17:2, col:39> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x140027470 <col:2, col:11> '<dependent type>' contains-errors lvalue .iov_base     | | `-RecoveryExpr 0x140027448 <col:2, col:6> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x140027410 <col:2> 'struct pending_op *' lvalue Var 0x140026b38 'op' 'struct pending_op *'     | `-CallExpr 0x1400275d8 <col:22, col:39> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x140027598 <col:22> 'int ()' Function 0x1400274e0 'UINT_TO_PTR' 'int ()'     |   `-RecoveryExpr 0x1400275b8 <col:34> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x140029328 <line:18:2, col:33> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x140029280 <col:2, col:11> '<dependent type>' contains-errors lvalue .iov_len     | | `-RecoveryExpr 0x140029258 <col:2, col:6> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x140029220 <col:2> 'struct pending_op *' lvalue Var 0x140026b38 'op' 'struct pending_op *'     | `-UnaryExprOrTypeTraitExpr 0x140029308 <col:21, col:33> 'unsigned long' contains-errors sizeof     |   `-ParenExpr 0x1400292e8 <col:27, col:33> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x1400292c8 <col:28> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1400293c8 <line:20:2, col:15> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x140029380 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x140029348 <col:2> 'struct pending_op *' lvalue Var 0x140026b38 'op' 'struct pending_op *'     | `-DeclRefExpr 0x1400293a8 <col:15> 'struct btd_device *' lvalue Var 0x140026d28 'device' 'struct btd_device *'     |-BinaryOperator 0x140029468 <line:21:2, col:15> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x140029420 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1400293e8 <col:2> 'struct pending_op *' lvalue Var 0x140026b38 'op' 'struct pending_op *'     | `-DeclRefExpr 0x140029448 <col:15> 'struct gatt_db_attribute *' lvalue ParmVar 0x1400266c8 'attrib' 'struct gatt_db_attribute *'     |-BinaryOperator 0x140029508 <line:22:2, col:18> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1400294c0 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x140029488 <col:2> 'struct pending_op *' lvalue Var 0x140026b38 'op' 'struct pending_op *'     | `-RecoveryExpr 0x1400294e8 <col:18> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x140029560 <line:24:2, col:9>       `-ImplicitCastExpr 0x140029548 <col:9> 'struct pending_op *' <LValueToRValue>         `-DeclRefExpr 0x140029528 <col:9> 'struct pending_op *' lvalue Var 0x140026b38 'op' 'struct pending_op *' ","19679":"`-FunctionDecl 0x13e80dd98  line:1:1 mouse_scroll_line 'int (void)'   `-CompoundStmt 0x13e80e008 <line:2:1, line:7:1>     `-IfStmt 0x13e80dfd8 <line:3:5, line:6:9> has_else       |-RecoveryExpr 0x13e80deb8 <line:3:9> '<dependent type>' contains-errors lvalue       |-NullStmt 0x13e80dfd0 <line:4:2>       `-ReturnStmt 0x13e80dfc0 <line:6:2, col:9>         `-RecoveryExpr 0x13e80dfa0 <col:9> '<dependent type>' contains-errors lvalue ","19878":"`-FunctionDecl 0x1231207c0  col:4 implicit used printf 'int (const char *, ...)' extern   |-ParmVarDecl 0x1231208c0 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x123120868 <<invalid sloc>> Implicit 903   `-FormatAttr 0x123120930 <col:4> Implicit printf 1 2 ","19190":"`-FunctionDecl 0x13d855118  line:1:13 invalid ff_vc2enc_init_transforms 'int (int *, int, int)'   |-ParmVarDecl 0x13d854f28 <col:39, col:60> col:60 referenced invalid s 'int *'   |-ParmVarDecl 0x13d854fa8 <col:63, col:67> col:67 used p_width 'int'   |-ParmVarDecl 0x13d855028 <col:76, col:80> col:80 used p_height 'int'   `-CompoundStmt 0x13e085d68 <line:2:1, line:11:1>     |-IfStmt 0x13e085d18 <line:7:5, line:8:16>     | |-UnaryOperator 0x13e085cd0 <line:7:9, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13e085cb8 <col:10, col:13> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x13e085c70 <col:10, col:13> '<dependent type>' contains-errors lvalue ->buffer     | |     `-RecoveryExpr 0x13e085c50 <col:10> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13e085d08 <line:8:9, col:16>     |   `-IntegerLiteral 0x13e085ce8 <col:16> 'int' 1     `-ReturnStmt 0x13e085d58 <line:10:5, col:12>       `-IntegerLiteral 0x13e085d38 <col:12> 'int' 0 ","19951":"`-FunctionDecl 0x1270268d0  col:18 implicit used isspace 'int (int)' extern   |-ParmVarDecl 0x1270269d0 <<invalid sloc>> <invalid sloc> 'int'   |-BuiltinAttr 0x127026978 <<invalid sloc>> Implicit 929   |-NoThrowAttr 0x127026a40 <col:18> Implicit   `-PureAttr 0x127026a68 <col:18> Implicit ","19362":"`-FunctionDecl 0x128027aa0  col:21 implicit used toupper 'int (int)' extern   |-ParmVarDecl 0x128027ba0 <<invalid sloc>> <invalid sloc> 'int'   |-BuiltinAttr 0x128027b48 <<invalid sloc>> Implicit 933   |-NoThrowAttr 0x128027c10 <col:21> Implicit   `-PureAttr 0x128027c38 <col:21> Implicit ","19431":"`-FunctionDecl 0x15200e358  line:1:12 bond_init 'int (struct net_device *)' static   |-ParmVarDecl 0x15200e248 <col:22, col:41> col:41 used bond_dev 'struct net_device *'   `-CompoundStmt 0x153008800 <line:2:1, line:28:1>     |-DeclStmt 0x152026a48 <line:3:2, col:46>     | |-RecordDecl 0x152026650 <col:2, col:9> col:9 struct bonding     | `-VarDecl 0x1520267b8 <col:2, col:45> col:18 used bond 'struct bonding *' cinit     |   `-ImplicitCastExpr 0x152026a18 <col:25, col:45> 'struct bonding *' <IntegralToPointer>     |     `-CallExpr 0x1520269d8 <col:25, col:45> 'int'     |       |-ImplicitCastExpr 0x1520269c0 <col:25> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x152026950 <col:25> 'int ()' Function 0x152026898 'netdev_priv' 'int ()'     |       `-ImplicitCastExpr 0x152026a00 <col:37> 'struct net_device *' <LValueToRValue>     |         `-DeclRefExpr 0x152026970 <col:37> 'struct net_device *' lvalue ParmVar 0x15200e248 'bond_dev' 'struct net_device *'     |-DeclStmt 0x152027008 <line:4:2, col:67>     | |-RecordDecl 0x152026a60 <col:2, col:9> col:9 struct bond_net     | `-VarDecl 0x152026bc8 <col:2, col:66> col:19 used bn 'struct bond_net *' cinit     |   `-CallExpr 0x152026fc0 <col:24, col:66> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x152026d10 <col:24> 'int ()' Function 0x152026c58 'net_generic' 'int ()'     |     |-CallExpr 0x152026f60 <col:36, col:52> 'int'     |     | |-ImplicitCastExpr 0x152026f48 <col:36> 'int (*)()' <FunctionToPointerDecay>     |     | | `-DeclRefExpr 0x152026e10 <col:36> 'int ()' Function 0x152026d58 'dev_net' 'int ()'     |     | `-ImplicitCastExpr 0x152026f88 <col:44> 'struct net_device *' <LValueToRValue>     |     |   `-DeclRefExpr 0x152026e30 <col:44> 'struct net_device *' lvalue ParmVar 0x15200e248 'bond_dev' 'struct net_device *'     |     `-RecoveryExpr 0x152026fa0 <col:55> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x1520273c8 <line:5:2, col:58>     | |-RecordDecl 0x152027020 <col:2, col:9> col:9 struct alb_bond_info     | `-VarDecl 0x152027188 <col:2, col:57> col:24 used bond_info 'struct alb_bond_info *' cinit     |   `-RecoveryExpr 0x152027388 <col:58, col:57> '<dependent type>' contains-errors lvalue     |     `-ParenExpr 0x152027368 <col:37, col:57> 'int'     |       `-CallExpr 0x152027328 <col:38, col:56> 'int'     |         |-ImplicitCastExpr 0x152027310 <col:38> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x1520272d0 <col:38> 'int ()' Function 0x152027218 'BOND_ALB_INFO' 'int ()'     |         `-ImplicitCastExpr 0x152027350 <col:52> 'struct bonding *' <LValueToRValue>     |           `-DeclRefExpr 0x1520272f0 <col:52> 'struct bonding *' lvalue Var 0x1520267b8 'bond' 'struct bonding *'     |-CallExpr 0x1520275a0 <line:7:2, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1520274c0 <col:2> 'int ()' Function 0x152027408 'pr_debug' 'int ()'     | |-StringLiteral 0x152027520 <col:11> 'char[4]' lvalue \"STR\"     | `-RecoveryExpr 0x152027578 <col:18, col:28> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x152027540 <col:18> 'struct net_device *' lvalue ParmVar 0x15200e248 'bond_dev' 'struct net_device *'     |-CallExpr 0x151922770 <line:10:2, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1519226b8 <col:2> 'int ()' Function 0x151922600 'spin_lock_init' 'int ()'     | `-UnaryOperator 0x151922758 <col:17, col:45> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-ParenExpr 0x151922738 <col:18, col:45> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x151922710 <col:19, col:30> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x1519226d8 <col:19> 'struct alb_bond_info *' contains-errors lvalue Var 0x152027188 'bond_info' 'struct alb_bond_info *'     |-CallExpr 0x151922850 <line:11:2, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x151922798 <col:2> 'int ()' Function 0x151922600 'spin_lock_init' 'int ()'     | `-UnaryOperator 0x151922838 <col:17, col:45> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-ParenExpr 0x151922818 <col:18, col:45> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x1519227f0 <col:19, col:30> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x1519227b8 <col:19> 'struct alb_bond_info *' contains-errors lvalue Var 0x152027188 'bond_info' 'struct alb_bond_info *'     |-BinaryOperator 0x151922a60 <line:13:2, col:57> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1519228b0 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x151922878 <col:2> 'struct bonding *' lvalue Var 0x1520267b8 'bond' 'struct bonding *'     | `-CallExpr 0x151922a38 <col:13, col:57> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1519229b8 <col:13> 'int ()' Function 0x151922900 'create_singlethread_workqueue' 'int ()'     |   `-RecoveryExpr 0x151922a10 <col:43, col:53> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1519229d8 <col:43> 'struct net_device *' lvalue ParmVar 0x15200e248 'bond_dev' 'struct net_device *'     |-IfStmt 0x151922bb8 <line:14:2, line:15:11>     | |-UnaryOperator 0x151922af8 <line:14:6, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x151922ae0 <col:7, col:13> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x151922ab8 <col:7, col:13> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x151922a80 <col:7> 'struct bonding *' lvalue Var 0x1520267b8 'bond' 'struct bonding *'     | `-ReturnStmt 0x151922ba8 <line:15:3, col:11>     |   `-UnaryOperator 0x151922b90 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x151922b78 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x151922b58 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x151922d10 <line:17:2, col:33> 'int'     | |-ImplicitCastExpr 0x151922cf8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x151922cb8 <col:2> 'int ()' Function 0x151922c00 'bond_set_lockdep_class' 'int ()'     | `-ImplicitCastExpr 0x151922d38 <col:25> 'struct net_device *' <LValueToRValue>     |   `-DeclRefExpr 0x151922cd8 <col:25> 'struct net_device *' lvalue ParmVar 0x15200e248 'bond_dev' 'struct net_device *'     |-CallExpr 0x151922e88 <line:19:2, col:29> 'int'     | |-ImplicitCastExpr 0x151922e70 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x151922e30 <col:2> 'int ()' Function 0x151922d78 'bond_create_proc_entry' 'int ()'     | `-ImplicitCastExpr 0x151922eb0 <col:25> 'struct bonding *' <LValueToRValue>     |   `-DeclRefExpr 0x151922e50 <col:25> 'struct bonding *' lvalue Var 0x1520267b8 'bond' 'struct bonding *'     |-CallExpr 0x1519230b8 <line:20:2, col:47> '<dependent type>' contains-errors     | |-DeclRefExpr 0x151922fa8 <col:2> 'int ()' Function 0x151922ef0 'list_add_tail' 'int ()'     | |-UnaryOperator 0x151923028 <col:16, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x151923000 <col:17, col:23> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x151922fc8 <col:17> 'struct bonding *' lvalue Var 0x1520267b8 'bond' 'struct bonding *'     | `-UnaryOperator 0x1519230a0 <col:34, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x151923078 <col:35, col:39> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x151923040 <col:35> 'struct bond_net *' contains-errors lvalue Var 0x152026bc8 'bn' 'struct bond_net *'     |-CallExpr 0x151923220 <line:22:2, col:31> 'int'     | |-ImplicitCastExpr 0x151923208 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1519231c8 <col:2> 'int ()' Function 0x151923110 'bond_prepare_sysfs_group' 'int ()'     | `-ImplicitCastExpr 0x151923248 <col:27> 'struct bonding *' <LValueToRValue>     |   `-DeclRefExpr 0x1519231e8 <col:27> 'struct bonding *' lvalue Var 0x1520267b8 'bond' 'struct bonding *'     |-CallExpr 0x151923398 <line:24:2, col:26> 'int'     | |-ImplicitCastExpr 0x151923380 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x151923340 <col:2> 'int ()' Function 0x151923288 'bond_debug_register' 'int ()'     | `-ImplicitCastExpr 0x1519233c0 <col:22> 'struct bonding *' <LValueToRValue>     |   `-DeclRefExpr 0x151923360 <col:22> 'struct bonding *' lvalue Var 0x1520267b8 'bond' 'struct bonding *'     |-CallExpr 0x151923550 <line:26:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1519234b8 <col:2> 'int ()' Function 0x151923400 '__hw_addr_init' 'int ()'     | `-UnaryOperator 0x151923538 <col:17, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x151923510 <col:18, col:24> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1519234d8 <col:18> 'struct bonding *' lvalue Var 0x1520267b8 'bond' 'struct bonding *'     `-ReturnStmt 0x151923598 <line:27:2, col:9>       `-IntegerLiteral 0x151923578 <col:9> 'int' 0 ","19434":"`-FunctionDecl 0x14d80e0c8  line:1:20 invalid get_name_len 'int (int, const int *, const int *, const int *, int *, int *)' static   |-ParmVarDecl 0x14d80dcf0 <col:33, col:37> col:37 used rec_counter 'int'   |-ParmVarDecl 0x14d80dd70 <col:50, col:68> col:68 invalid pkt 'const int *'   |-ParmVarDecl 0x14d80ddf0 <line:2:5, col:23> col:23 invalid start 'const int *'   |-ParmVarDecl 0x14d80de70 <col:30, col:48> col:48 invalid max 'const int *'   |-ParmVarDecl 0x14d80df28 <line:3:5, col:10> col:10 used parsed_len 'int *'   |-ParmVarDecl 0x14d80dfa8 <col:22, col:27> col:27 used name_len 'int *'   `-CompoundStmt 0x14d829700 <line:4:1, line:65:1>     |-DeclStmt 0x14d80e220 <line:5:5, col:24>     | `-VarDecl 0x14d80e1b8 <col:5, col:23> col:23 referenced invalid p 'const int *'     |-IfStmt 0x14d80e310 <line:9:5, line:12:5>     | |-BinaryOperator 0x14d80e290 <line:9:9, col:23> 'int' '>'     | | |-ImplicitCastExpr 0x14d80e278 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x14d80e238 <col:9> 'int' lvalue ParmVar 0x14d80dcf0 'rec_counter' 'int'     | | `-IntegerLiteral 0x14d80e258 <col:23> 'int' 10     | `-CompoundStmt 0x14d80e2f8 <col:27, line:12:5>     |   `-ReturnStmt 0x14d80e2e8 <line:11:2, col:9>     |     `-RecoveryExpr 0x14d80e2c8 <col:9> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14d827e20 <line:14:5, col:31> 'int' '='     | |-UnaryOperator 0x14d80e368 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x14d80e350 <col:6> 'int *' <LValueToRValue>     | |   `-DeclRefExpr 0x14d80e330 <col:6> 'int *' lvalue ParmVar 0x14d80dfa8 'name_len' 'int *'     | `-BinaryOperator 0x14d827e00 <col:17, col:31> 'int' '='     |   |-UnaryOperator 0x14d80e3b8 <col:17, col:18> 'int' lvalue prefix '*' cannot overflow     |   | `-ImplicitCastExpr 0x14d80e3a0 <col:18> 'int *' <LValueToRValue>     |   |   `-DeclRefExpr 0x14d80e380 <col:18> 'int *' lvalue ParmVar 0x14d80df28 'parsed_len' 'int *'     |   `-IntegerLiteral 0x14d80e3d0 <col:31> 'int' 0     |-BinaryOperator 0x14d827ea8 <line:15:5, col:9> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14d827e60 <col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14d827e40 <col:5> 'const int *' lvalue Var 0x14d80e1b8 'p' 'const int *'     | `-RecoveryExpr 0x14d827e88 <col:9> '<dependent type>' contains-errors lvalue     |-WhileStmt 0x14d829620 <line:16:5, line:60:5>     | |-UnaryOperator 0x14d827f00 <line:16:12, col:13> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x14d827ee8 <col:13> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x14d827ec8 <col:13> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14d829608 <col:16, line:60:5>     |   `-IfStmt 0x14d8295d8 <line:17:2, line:59:2> has_else     |     |-BinaryOperator 0x14d827fe8 <line:17:6, col:21> 'int' contains-errors '=='     |     | |-ParenExpr 0x14d827fa8 <col:6, col:16> '<dependent type>' contains-errors     |     | | `-BinaryOperator 0x14d827f88 <col:7, col:12> '<dependent type>' contains-errors '&'     |     | |   |-UnaryOperator 0x14d827f50 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow     |     | |   | `-ImplicitCastExpr 0x14d827f38 <col:8> '<dependent type>' contains-errors <LValueToRValue>     |     | |   |   `-RecoveryExpr 0x14d827f18 <col:8> '<dependent type>' contains-errors lvalue     |     | |   `-IntegerLiteral 0x14d827f68 <col:12> 'int' 192     |     | `-IntegerLiteral 0x14d827fc8 <col:21> 'int' 192     |     |-CompoundStmt 0x14d828b80 <col:27, line:42:2>     |     | |-DeclStmt 0x14d8280a8 <line:19:6, col:21>     |     | | `-VarDecl 0x14d828020 <col:6, col:20> col:10 used ptr_len 'int' cinit     |     | |   `-IntegerLiteral 0x14d828088 <col:20> 'int' 0     |     | |-DeclStmt 0x14d828140 <line:20:6, col:15>     |     | | `-VarDecl 0x14d8280d8 <col:6, col:10> col:10 used dummy 'int'     |     | |-CallExpr 0x14d8283b0 <line:24:6, col:29> '<dependent type>' contains-errors     |     | | |-DeclRefExpr 0x14d8282b0 <col:6> 'int ()' Function 0x14d8281f8 'pj_memcpy' 'int ()'     |     | | |-UnaryOperator 0x14d828398 <col:16, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | | | `-RecoveryExpr 0x14d828378 <col:17> '<dependent type>' contains-errors lvalue     |     | | |-RecoveryExpr 0x14d828300 <col:25> '<dependent type>' contains-errors lvalue     |     | | `-IntegerLiteral 0x14d828320 <col:28> 'int' 2     |     | |-IfStmt 0x14d8287c0 <line:29:6, line:30:10>     |     | | |-BinaryOperator 0x14d828758 <line:29:10, col:26> 'int' contains-errors '>='     |     | | | |-RecoveryExpr 0x14d828738 <col:10> '<dependent type>' contains-errors lvalue     |     | | | `-BinaryOperator 0x14d8286f8 <col:20, col:26> '<dependent type>' contains-errors '-'     |     | | |   |-RecoveryExpr 0x14d8286b8 <col:20> '<dependent type>' contains-errors lvalue     |     | | |   `-RecoveryExpr 0x14d8286d8 <col:26> '<dependent type>' contains-errors lvalue     |     | | `-ReturnStmt 0x14d8287b0 <line:30:3, col:10>     |     | |   `-RecoveryExpr 0x14d828790 <col:10> '<dependent type>' contains-errors lvalue     |     | |-CompoundAssignOperator 0x14d828a98 <line:38:6, col:21> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'     |     | | |-UnaryOperator 0x14d828a60 <col:6, col:7> 'int' lvalue prefix '*' cannot overflow     |     | | | `-ImplicitCastExpr 0x14d828a48 <col:7> 'int *' <LValueToRValue>     |     | | |   `-DeclRefExpr 0x14d828a28 <col:7> 'int *' lvalue ParmVar 0x14d80df28 'parsed_len' 'int *'     |     | | `-IntegerLiteral 0x14d828a78 <col:21> 'int' 2     |     | `-CompoundAssignOperator 0x14d828b50 <line:39:6, col:19> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'     |     |   |-UnaryOperator 0x14d828b00 <col:6, col:7> 'int' lvalue prefix '*' cannot overflow     |     |   | `-ImplicitCastExpr 0x14d828ae8 <col:7> 'int *' <LValueToRValue>     |     |   |   `-DeclRefExpr 0x14d828ac8 <col:7> 'int *' lvalue ParmVar 0x14d80dfa8 'name_len' 'int *'     |     |   `-ImplicitCastExpr 0x14d828b38 <col:19> 'int' <LValueToRValue>     |     |     `-DeclRefExpr 0x14d828b18 <col:19> 'int' lvalue Var 0x14d828020 'ptr_len' 'int'     |     `-CompoundStmt 0x14d8295a0 <line:42:9, line:59:2>     |       |-DeclStmt 0x14d828c90 <line:43:6, col:29>     |       | `-VarDecl 0x14d828bd8 <col:6, col:28> col:15 used label_len 'unsigned int' cinit     |       |   `-UnaryOperator 0x14d828c78 <col:27, col:28> '<dependent type>' contains-errors prefix '*' cannot overflow     |       |     `-ImplicitCastExpr 0x14d828c60 <col:28> '<dependent type>' contains-errors <LValueToRValue>     |       |       `-RecoveryExpr 0x14d828c40 <col:28> '<dependent type>' contains-errors lvalue     |       |-CompoundAssignOperator 0x14d829240 <line:49:6, col:25> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |       | |-RecoveryExpr 0x14d828d68 <col:6> '<dependent type>' contains-errors lvalue     |       | | `-DeclRefExpr 0x14d828d48 <col:6> 'const int *' lvalue Var 0x14d80e1b8 'p' 'const int *'     |       | `-ParenExpr 0x14d829220 <col:11, col:25> 'unsigned int' contains-errors     |       |   `-BinaryOperator 0x14d829200 <col:12, col:24> 'unsigned int' contains-errors '+'     |       |     |-ImplicitCastExpr 0x14d828dd0 <col:12> 'unsigned int' contains-errors <LValueToRValue>     |       |     | `-DeclRefExpr 0x14d828d90 <col:12> 'unsigned int' contains-errors lvalue Var 0x14d828bd8 'label_len' 'unsigned int'     |       |     `-ImplicitCastExpr 0x14d828de8 <col:24> 'unsigned int' <IntegralCast>     |       |       `-IntegerLiteral 0x14d828db0 <col:24> 'int' 1     |       |-CompoundAssignOperator 0x14d829370 <line:50:6, col:35> 'int' contains-errors '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'     |       | |-UnaryOperator 0x14d8292a8 <col:6, col:7> 'int' lvalue prefix '*' cannot overflow     |       | | `-ImplicitCastExpr 0x14d829290 <col:7> 'int *' <LValueToRValue>     |       | |   `-DeclRefExpr 0x14d829270 <col:7> 'int *' lvalue ParmVar 0x14d80df28 'parsed_len' 'int *'     |       | `-ParenExpr 0x14d829350 <col:21, col:35> 'unsigned int' contains-errors     |       |   `-BinaryOperator 0x14d829330 <col:22, col:34> 'unsigned int' contains-errors '+'     |       |     |-ImplicitCastExpr 0x14d829300 <col:22> 'unsigned int' contains-errors <LValueToRValue>     |       |     | `-DeclRefExpr 0x14d8292c0 <col:22> 'unsigned int' contains-errors lvalue Var 0x14d828bd8 'label_len' 'unsigned int'     |       |     `-ImplicitCastExpr 0x14d829318 <col:34> 'unsigned int' <IntegralCast>     |       |       `-IntegerLiteral 0x14d8292e0 <col:34> 'int' 1     |       |-IfStmt 0x14d829468 <line:52:6, line:53:5>     |       | |-BinaryOperator 0x14d829410 <line:52:10, col:16> 'int' contains-errors '!='     |       | | |-UnaryOperator 0x14d8293d8 <col:10, col:11> '<dependent type>' contains-errors prefix '*' cannot overflow     |       | | | `-ImplicitCastExpr 0x14d8293c0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       | | |   `-RecoveryExpr 0x14d8293a0 <col:11> '<dependent type>' contains-errors lvalue     |       | | `-IntegerLiteral 0x14d8293f0 <col:16> 'int' 0     |       | `-UnaryOperator 0x14d829450 <line:53:3, col:5> 'unsigned int' contains-errors prefix '++'     |       |   `-DeclRefExpr 0x14d829430 <col:5> 'unsigned int' contains-errors lvalue Var 0x14d828bd8 'label_len' 'unsigned int'     |       `-CompoundAssignOperator 0x14d829510 <line:55:6, col:19> 'int' contains-errors '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'     |         |-UnaryOperator 0x14d8294c0 <col:6, col:7> 'int' lvalue prefix '*' cannot overflow     |         | `-ImplicitCastExpr 0x14d8294a8 <col:7> 'int *' <LValueToRValue>     |         |   `-DeclRefExpr 0x14d829488 <col:7> 'int *' lvalue ParmVar 0x14d80dfa8 'name_len' 'int *'     |         `-ImplicitCastExpr 0x14d8294f8 <col:19> 'unsigned int' contains-errors <LValueToRValue>     |           `-DeclRefExpr 0x14d8294d8 <col:19> 'unsigned int' contains-errors lvalue Var 0x14d828bd8 'label_len' 'unsigned int'     |-UnaryOperator 0x14d829660 <line:61:5, col:7> '<dependent type>' contains-errors prefix '++' cannot overflow     | `-RecoveryExpr 0x14d829640 <col:7> '<dependent type>' contains-errors lvalue     `-UnaryOperator 0x14d8296e8 <line:62:5, col:18> 'int' postfix '++'       `-ParenExpr 0x14d8296c8 <col:5, col:17> 'int' lvalue         `-UnaryOperator 0x14d8296b0 <col:6, col:7> 'int' lvalue prefix '*' cannot overflow           `-ImplicitCastExpr 0x14d829698 <col:7> 'int *' <LValueToRValue>             `-DeclRefExpr 0x14d829678 <col:7> 'int *' lvalue ParmVar 0x14d80df28 'parsed_len' 'int *' ","19350":"`-FunctionDecl 0x15a9283d0  line:1:13 invalid controloptions 'void (int *, int, const char **, int *)' static   |-ParmVarDecl 0x15a928128 <col:29, col:40> col:40 invalid L 'int *'   |-ParmVarDecl 0x15a9281a8 <col:43, col:47> col:47 used opt 'int'   |-ParmVarDecl 0x15a928258 <col:52, col:65> col:65 used fmt 'const char **'   |-ParmVarDecl 0x15a9282d8 <line:2:29, col:37> col:37 referenced invalid h 'int *'   `-CompoundStmt 0x15a942488 <col:40, line:19:1>     `-SwitchStmt 0x15a9284d0 <line:3:3, line:18:3>       |-ImplicitCastExpr 0x15a9284b8 <line:3:11> 'int' <LValueToRValue>       | `-DeclRefExpr 0x15a928498 <col:11> 'int' lvalue ParmVar 0x15a9281a8 'opt' 'int'       `-CompoundStmt 0x15a942440 <col:16, line:18:3>         |-CaseStmt 0x15a928528 <line:4:5, col:16>         | |-ConstantExpr 0x15a928510 <col:11> 'int'         | | `-CharacterLiteral 0x15a9284f8 <col:11> 'int' 32         | `-ReturnStmt 0x15a928550 <col:16>         |-CaseStmt 0x15a928590 <line:5:5, col:27>         | |-ConstantExpr 0x15a928578 <col:10> 'int'         | | `-CharacterLiteral 0x15a928560 <col:10> 'int' 62         | `-BinaryOperator 0x15a9286a0 <col:15, col:27> '<dependent type>' contains-errors '='         |   |-CXXDependentScopeMemberExpr 0x15a928600 <col:15, col:18> '<dependent type>' contains-errors lvalue ->endian         |   | `-RecoveryExpr 0x15a9285d8 <col:15> '<dependent type>' contains-errors lvalue         |   |   `-DeclRefExpr 0x15a9285b8 <col:15> 'int *' lvalue ParmVar 0x15a9282d8 'h' 'int *'         |   `-RecoveryExpr 0x15a928680 <col:27> '<dependent type>' contains-errors lvalue         |-ReturnStmt 0x15a9286c0 <col:32>         |-CaseStmt 0x15a928700 <line:6:5, col:27>         | |-ConstantExpr 0x15a9286e8 <col:10> 'int'         | | `-CharacterLiteral 0x15a9286d0 <col:10> 'int' 60         | `-BinaryOperator 0x15a941820 <col:15, col:27> '<dependent type>' contains-errors '='         |   |-CXXDependentScopeMemberExpr 0x15a928770 <col:15, col:18> '<dependent type>' contains-errors lvalue ->endian         |   | `-RecoveryExpr 0x15a928748 <col:15> '<dependent type>' contains-errors lvalue         |   |   `-DeclRefExpr 0x15a928728 <col:15> 'int *' lvalue ParmVar 0x15a9282d8 'h' 'int *'         |   `-RecoveryExpr 0x15a941800 <col:27> '<dependent type>' contains-errors lvalue         |-ReturnStmt 0x15a941840 <col:35>         |-CaseStmt 0x15a941880 <line:7:5, line:13:5>         | |-ConstantExpr 0x15a941868 <line:7:10> 'int'         | | `-CharacterLiteral 0x15a941850 <col:10> 'int' 33         | `-CompoundStmt 0x15a942008 <col:15, line:13:5>         |   |-DeclStmt 0x15a941b58 <line:8:7, col:36>         |   | `-VarDecl 0x15a9418c0 <col:7, col:35> col:11 used a 'int' cinit         |   |   `-CallExpr 0x15a941b28 <col:15, col:35> '<dependent type>' contains-errors         |   |     |-DeclRefExpr 0x15a941a80 <col:15> 'int ()' Function 0x15a9419c8 'getnum' 'int ()'         |   |     |-DeclRefExpr 0x15a941aa0 <col:22> 'const char **' lvalue ParmVar 0x15a928258 'fmt' 'const char **'         |   |     `-RecoveryExpr 0x15a941b08 <col:27> '<dependent type>' contains-errors lvalue         |   |-IfStmt 0x15a941f08 <line:9:7, line:10:31>         |   | |-UnaryOperator 0x15a941d18 <line:9:11, col:18> 'int' contains-errors prefix '!' cannot overflow         |   | | `-CallExpr 0x15a941cd8 <col:12, col:18> 'int' contains-errors         |   | |   |-ImplicitCastExpr 0x15a941cc0 <col:12> 'int (*)()' <FunctionToPointerDecay>         |   | |   | `-DeclRefExpr 0x15a941c50 <col:12> 'int ()' Function 0x15a941b98 'isp2' 'int ()'         |   | |   `-ImplicitCastExpr 0x15a941d00 <col:17> 'int' contains-errors <LValueToRValue>         |   | |     `-DeclRefExpr 0x15a941c70 <col:17> 'int' contains-errors lvalue Var 0x15a9418c0 'a' 'int'         |   | `-CallExpr 0x15a941ed0 <line:10:9, col:31> '<dependent type>' contains-errors         |   |   |-DeclRefExpr 0x15a941e10 <col:9> 'int ()' Function 0x15a941d58 'luaL_error' 'int ()'         |   |   |-RecoveryExpr 0x15a941e30 <col:20> '<dependent type>' contains-errors lvalue         |   |   |-StringLiteral 0x15a941e90 <col:23> 'char[4]' lvalue \"STR\"         |   |   `-DeclRefExpr 0x15a941eb0 <col:30> 'int' contains-errors lvalue Var 0x15a9418c0 'a' 'int'         |   |-BinaryOperator 0x15a941fd8 <line:11:7, col:18> '<dependent type>' contains-errors '='         |   | |-CXXDependentScopeMemberExpr 0x15a941f70 <col:7, col:10> '<dependent type>' contains-errors lvalue ->align         |   | | `-RecoveryExpr 0x15a941f48 <col:7> '<dependent type>' contains-errors lvalue         |   | |   `-DeclRefExpr 0x15a941f28 <col:7> 'int *' lvalue ParmVar 0x15a9282d8 'h' 'int *'         |   | `-DeclRefExpr 0x15a941fb8 <col:18> 'int' contains-errors lvalue Var 0x15a9418c0 'a' 'int'         |   `-ReturnStmt 0x15a941ff8 <line:12:7>         `-DefaultStmt 0x15a942420 <line:14:5, line:17:5>           `-CompoundStmt 0x15a942400 <line:14:14, line:17:5>             |-DeclStmt 0x15a942250 <line:15:7, col:55>             | `-VarDecl 0x15a942050 <col:7, col:54> col:19 used msg 'const char *' cinit             |   `-CallExpr 0x15a942218 <col:25, col:54> '<dependent type>' contains-errors             |     |-DeclRefExpr 0x15a942198 <col:25> 'int ()' Function 0x15a9420e0 'lua_pushfstring' 'int ()'             |     |-RecoveryExpr 0x15a9421b8 <col:41> '<dependent type>' contains-errors lvalue             |     |-StringLiteral 0x15a9421d8 <col:44> 'char[4]' lvalue \"STR\"             |     `-DeclRefExpr 0x15a9421f8 <col:51> 'int' lvalue ParmVar 0x15a9281a8 'opt' 'int'             `-CallExpr 0x15a9423c8 <line:16:7, col:30> '<dependent type>' contains-errors               |-DeclRefExpr 0x15a942348 <col:7> 'int ()' Function 0x15a942290 'luaL_argerror' 'int ()'               |-RecoveryExpr 0x15a942368 <col:21> '<dependent type>' contains-errors lvalue               |-IntegerLiteral 0x15a942388 <col:24> 'int' 1               `-DeclRefExpr 0x15a9423a8 <col:27> 'const char *' contains-errors lvalue Var 0x15a942050 'msg' 'const char *' ","19472":"`-FunctionDecl 0x153140ae8  line:1:14 ptr_to_id 'char *(char *, char *, void *, struct printf_spec)' static   |-ParmVarDecl 0x1531280d8 <col:24, col:30> col:30 used buf 'char *'   |-ParmVarDecl 0x153128158 <col:35, col:41> col:41 used end 'char *'   |-ParmVarDecl 0x1531281d8 <col:46, col:52> col:52 referenced ptr 'void *'   |-ParmVarDecl 0x153128758 <col:57, col:76> col:76 referenced invalid spec 'struct printf_spec'   `-CompoundStmt 0x153141648 <line:2:1, line:19:1>     |-DeclStmt 0x153140c78 <line:3:2, col:23>     | `-VarDecl 0x153140c10 <col:2, col:16> col:16 used hashval 'unsigned long'     |-IfStmt 0x153141260 <line:5:2, line:9:2>     | |-CallExpr 0x153140ea0 <line:5:6, col:42> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x153140dc0 <col:6> 'int ()' Function 0x153140d08 'unlikely' 'int ()'     | | `-UnaryOperator 0x153140e88 <col:15, col:16> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x153140e70 <col:16> '<dependent type>' contains-errors <LValueToRValue>     | |     `-RecoveryExpr 0x153140e50 <col:16> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x153141240 <col:45, line:9:2>     |   |-BinaryOperator 0x153141010 <line:6:3, col:36> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x153140f10 <col:3, col:8> '<dependent type>' contains-errors lvalue .field_width     |   | | `-RecoveryExpr 0x153140ee8 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x153140ec8 <col:3> 'struct printf_spec' lvalue ParmVar 0x153128758 'spec' 'struct printf_spec'     |   | `-BinaryOperator 0x153140ff0 <col:22, col:36> 'unsigned long' '*'     |   |   |-ImplicitCastExpr 0x153140fd8 <col:22> 'unsigned long' <IntegralCast>     |   |   | `-IntegerLiteral 0x153140f58 <col:22> 'int' 2     |   |   `-UnaryExprOrTypeTraitExpr 0x153140fb8 <col:26, col:36> 'unsigned long' sizeof     |   |     `-ParenExpr 0x153140f98 <col:32, col:36> 'void *' lvalue     |   |       `-DeclRefExpr 0x153140f78 <col:33> 'void *' lvalue ParmVar 0x1531281d8 'ptr' 'void *' non_odr_use_unevaluated     |   `-ReturnStmt 0x153141230 <line:8:3, col:38>     |     `-CallExpr 0x1531411f0 <col:10, col:38> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x153141110 <col:10> 'int ()' Function 0x153141058 'string' 'int ()'     |       |-DeclRefExpr 0x153141130 <col:17> 'char *' lvalue ParmVar 0x1531280d8 'buf' 'char *'     |       |-DeclRefExpr 0x153141150 <col:22> 'char *' lvalue ParmVar 0x153128158 'end' 'char *'     |       |-StringLiteral 0x1531411b0 <col:27> 'char[4]' lvalue \"STR\"     |       `-RecoveryExpr 0x1531411d0 <col:34> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x153141638 <line:18:2, col:61>       `-CallExpr 0x1531415f8 <col:9, col:61> '<dependent type>' contains-errors         |-DeclRefExpr 0x1531414c8 <col:9> 'int ()' Function 0x153141410 'pointer_string' 'int ()'         |-DeclRefExpr 0x1531414e8 <col:24> 'char *' lvalue ParmVar 0x1531280d8 'buf' 'char *'         |-DeclRefExpr 0x153141508 <col:29> 'char *' lvalue ParmVar 0x153128158 'end' 'char *'         |-CStyleCastExpr 0x1531415b0 <col:34, col:48> 'const void *' <IntegralToPointer>         | `-ImplicitCastExpr 0x153141598 <col:48> 'unsigned long' <LValueToRValue> part_of_explicit_cast         |   `-DeclRefExpr 0x153141528 <col:48> 'unsigned long' lvalue Var 0x153140c10 'hashval' 'unsigned long'         `-RecoveryExpr 0x1531415d8 <col:57> '<dependent type>' contains-errors lvalue ","19373":"`-FunctionDecl 0x14a80dec8  line:1:30 invalid GetKeyByID 'int (int, int **)' static   |-ParmVarDecl 0x14a80dcf0 <col:42, col:58> col:58 invalid keyID 'int'   |-ParmVarDecl 0x14a80dde0 <col:65, col:73> col:73 invalid keyItem 'int **'   `-CompoundStmt 0x14a80e348 <line:2:1, line:12:1>     |-ForStmt 0x14a80e2c8 <line:3:5, line:10:5>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-BinaryOperator 0x14a80e028 <line:3:25, col:29> 'int' contains-errors '<'     | | |-RecoveryExpr 0x14a80dfe8 <col:25> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14a80e008 <col:29> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x14a80e098 <col:42, col:43> '<dependent type>' contains-errors postfix '++' cannot overflow     | | `-RecoveryExpr 0x14a80e078 <col:42> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14a80e2b0 <line:4:5, line:10:5>     |   `-IfStmt 0x14a80e290 <line:5:9, line:9:9>     |     |-RecoveryExpr 0x14a80e148 <line:5:13, col:42> '_Bool' contains-errors     |     `-CompoundStmt 0x14a80e278 <line:6:9, line:9:9>     |       `-ReturnStmt 0x14a80e268 <line:8:13, col:20>     |         `-RecoveryExpr 0x14a80e248 <col:20> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14a80e338 <line:11:5, col:12>       `-RecoveryExpr 0x14a80e318 <col:12> '<dependent type>' contains-errors lvalue ","19687":"`-FunctionDecl 0x1260293e8  col:5 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x1260294e8 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x126029490 <<invalid sloc>> Implicit 873 ","19300":"`-FunctionDecl 0x140942b68  col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x140942c68 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x140942cd0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x140942d38 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x140942c10 <<invalid sloc>> Implicit 882 ","19948":"`-FunctionDecl 0x12680c438  line:1:1 invalid save_abbr 'int (int, struct tm *)'   |-ParmVarDecl 0x1261288f0 <col:12, col:23> col:23 invalid tz 'int'   |-ParmVarDecl 0x126128ee8 <col:27, col:38> col:38 tm 'struct tm *'   `-CompoundStmt 0x12680c538 <line:2:1, line:68:1>     `-ReturnStmt 0x12680c528 <line:67:3, col:10>       `-RecoveryExpr 0x12680c508 <col:10> '<dependent type>' contains-errors lvalue ","19616":"`-FunctionDecl 0x130128238  line:1:1 make_local_array_variable 'int (char *, int)'   |-ParmVarDecl 0x1301280d8 <line:2:6, col:12> col:12 used name 'char *'   |-ParmVarDecl 0x130128158 <line:3:6, col:10> col:10 used assoc_ok 'int'   `-CompoundStmt 0x1301434a8 <line:4:1, line:18:1>     |-IfStmt 0x130142ef8 <line:9:3, line:10:12>     | |-RecoveryExpr 0x130142e90 <line:9:7, col:62> '_Bool' contains-errors     | `-ReturnStmt 0x130142ee8 <line:10:5, col:12>     |   `-RecoveryExpr 0x130142ec8 <col:12> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1301431b0 <line:14:3, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x130143130 <col:3> 'int ()' Function 0x130143078 'dispose_variable_value' 'int ()'     | `-RecoveryExpr 0x130143190 <col:27> '<dependent type>' contains-errors lvalue     `-CallExpr 0x130143378 <line:15:3, col:27> '<dependent type>' contains-errors       |-DeclRefExpr 0x1301432b8 <col:3> 'int ()' Function 0x130143200 'var_setarray' 'int ()'       |-RecoveryExpr 0x130143338 <col:17> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x130143358 <col:22> '<dependent type>' contains-errors lvalue ","19422":"`-FunctionDecl 0x155128ba0  line:1:6 invalid jswrap_graphics_drawImage 'void (int *, int *, int, int)'   |-ParmVarDecl 0x155128928 <col:32, col:39> col:39 invalid parent 'int *'   |-ParmVarDecl 0x1551289a8 <col:47, col:54> col:54 invalid image 'int *'   |-ParmVarDecl 0x155128a28 <col:61, col:65> col:65 used xPos 'int'   |-ParmVarDecl 0x155128aa8 <col:71, col:75> col:75 used yPos 'int'   `-CompoundStmt 0x15680a800 <col:81, line:58:1>     |-IfStmt 0x155128f08 <line:2:19, col:58>     | |-UnaryOperator 0x155128ee0 <col:23, col:55> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x155128eb0 <col:24, col:55> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x155128dc0 <col:24> 'int ()' Function 0x155128d08 'graphicsGetFromVar' 'int ()'     | |   |-UnaryOperator 0x155128e98 <col:43, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   | `-RecoveryExpr 0x155128e78 <col:44> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x155128e10 <col:49> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x155128ef8 <col:58>     |-IfStmt 0x1558090c0 <line:3:3, line:6:3>     | |-UnaryOperator 0x155808e78 <line:3:7, col:25> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x155808e50 <col:8, col:25> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x155808e10 <col:8> 'int ()' Function 0x155128f50 'jsvIsObject' 'int ()'     | |   `-RecoveryExpr 0x155808e30 <col:20> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1558090a0 <col:28, line:6:3>     |   |-CallExpr 0x155809060 <line:4:5, col:38> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x155808f70 <col:5> 'int ()' Function 0x155808eb8 'jsExceptionHere' 'int ()'     |   | |-RecoveryExpr 0x155809040 <col:21> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x155808ff0 <col:33> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x155809090 <line:5:5>     |-DeclStmt 0x155809460 <line:7:3, col:83>     | `-VarDecl 0x1558090f8 <col:3, col:82> col:7 used imageWidth 'int' cinit     |   `-CStyleCastExpr 0x155809438 <col:20, col:82> 'int' contains-errors <Dependent>     |     `-CallExpr 0x1558093f8 <col:25, col:82> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x155809240 <col:25> 'int ()' Function 0x155809188 'jsvGetIntegerAndUnLock' 'int ()'     |       `-CallExpr 0x1558093c0 <col:48, col:81> '<dependent type>' contains-errors     |         |-DeclRefExpr 0x155809340 <col:48> 'int ()' Function 0x155809288 'jsvObjectGetChild' 'int ()'     |         |-RecoveryExpr 0x155809360 <col:66> '<dependent type>' contains-errors lvalue     |         |-StringLiteral 0x155809380 <col:73> 'char[4]' lvalue \"STR\"     |         `-IntegerLiteral 0x1558093a0 <col:80> 'int' 0     |-DeclStmt 0x155809638 <line:8:3, col:84>     | `-VarDecl 0x155809490 <col:3, col:83> col:7 used imageHeight 'int' cinit     |   `-CStyleCastExpr 0x155809610 <col:21, col:83> 'int' contains-errors <Dependent>     |     `-CallExpr 0x1558095d0 <col:26, col:83> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x1558094f8 <col:26> 'int ()' Function 0x155809188 'jsvGetIntegerAndUnLock' 'int ()'     |       `-CallExpr 0x155809598 <col:49, col:82> '<dependent type>' contains-errors     |         |-DeclRefExpr 0x155809518 <col:49> 'int ()' Function 0x155809288 'jsvObjectGetChild' 'int ()'     |         |-RecoveryExpr 0x155809538 <col:67> '<dependent type>' contains-errors lvalue     |         |-StringLiteral 0x155809558 <col:74> 'char[4]' lvalue \"STR\"     |         `-IntegerLiteral 0x155809578 <col:81> 'int' 0     |-DeclStmt 0x155809810 <line:9:3, col:81>     | `-VarDecl 0x155809668 <col:3, col:80> col:7 used imageBpp 'int' cinit     |   `-CStyleCastExpr 0x1558097e8 <col:18, col:80> 'int' contains-errors <Dependent>     |     `-CallExpr 0x1558097a8 <col:23, col:80> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x1558096d0 <col:23> 'int ()' Function 0x155809188 'jsvGetIntegerAndUnLock' 'int ()'     |       `-CallExpr 0x155809770 <col:46, col:79> '<dependent type>' contains-errors     |         |-DeclRefExpr 0x1558096f0 <col:46> 'int ()' Function 0x155809288 'jsvObjectGetChild' 'int ()'     |         |-RecoveryExpr 0x155809710 <col:64> '<dependent type>' contains-errors lvalue     |         |-StringLiteral 0x155809730 <col:71> 'char[4]' lvalue \"STR\"     |         `-IntegerLiteral 0x155809750 <col:78> 'int' 0     |-DeclStmt 0x155809a00 <line:10:3, col:64>     | `-VarDecl 0x155809840 <col:3, col:63> col:16 used imageBitMask 'unsigned int' cinit     |   `-CStyleCastExpr 0x1558099d8 <col:31, col:63> 'unsigned int' contains-errors <IntegralCast>     |     `-ParenExpr 0x1558099b8 <col:45, col:63> 'long' contains-errors     |       `-BinaryOperator 0x155809960 <col:46, col:61> 'long' contains-errors '-'     |         |-ParenExpr 0x155809920 <col:46, col:59> 'long' contains-errors     |         | `-BinaryOperator 0x155809900 <col:47, col:51> 'long' contains-errors '<<'     |         |   |-IntegerLiteral 0x1558098a8 <col:47> 'long' 1     |         |   `-ImplicitCastExpr 0x1558098e8 <col:51> 'int' contains-errors <LValueToRValue>     |         |     `-DeclRefExpr 0x1558098c8 <col:51> 'int' contains-errors lvalue Var 0x155809668 'imageBpp' 'int'     |         `-IntegerLiteral 0x155809940 <col:61> 'long' 1     |-DeclStmt 0x155809cc0 <line:13:3, col:76>     | `-VarDecl 0x155809b00 <col:3, col:16> col:16 used imageTransparentCol 'unsigned int'     |-CallExpr 0x156808c48 <line:14:3, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x155809db8 <col:3> 'int ()' Function 0x155809d00 'jsvUnLock' 'int ()'     | `-RecoveryExpr 0x156808c28 <col:13> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1568090c8 <line:16:3, line:20:3>     | |-RecoveryExpr 0x156809020 <line:16:7, col:101> '_Bool' contains-errors     | `-CompoundStmt 0x1568090b0 <col:104, line:20:3>     |   `-ReturnStmt 0x1568090a0 <line:19:5>     |-DeclStmt 0x156809360 <line:25:3, col:15>     | |-VarDecl 0x156809220 <col:3, col:9> col:7 used x 'int' cinit     | | `-IntegerLiteral 0x156809288 <col:9> 'int' 0     | `-VarDecl 0x1568092c0 <col:3, col:14> col:12 used y 'int' cinit     |   `-IntegerLiteral 0x156809328 <col:14> 'int' 0     |-DeclStmt 0x156809418 <line:26:3, col:13>     | `-VarDecl 0x156809390 <col:3, col:12> col:7 used bits 'int' cinit     |   `-IntegerLiteral 0x1568093f8 <col:12> 'int' 0     |-DeclStmt 0x1568094e8 <line:27:3, col:27>     | `-VarDecl 0x156809448 <col:3, col:26> col:16 used colData 'unsigned int' cinit     |   `-ImplicitCastExpr 0x1568094d0 <col:26> 'unsigned int' <IntegralCast>     |     `-IntegerLiteral 0x1568094b0 <col:26> 'int' 0     `-WhileStmt 0x15680a5c0 <line:30:3, line:54:3>       |-RecoveryExpr 0x156809840 <line:30:10, col:65> '_Bool' contains-errors       `-CompoundStmt 0x15680a580 <col:78, line:54:3>         |-WhileStmt 0x156809c48 <line:32:5, line:36:5>         | |-BinaryOperator 0x1568098d0 <line:32:12, col:19> 'int' contains-errors '<'         | | |-ImplicitCastExpr 0x1568098a0 <col:12> 'int' <LValueToRValue>         | | | `-DeclRefExpr 0x156809860 <col:12> 'int' lvalue Var 0x156809390 'bits' 'int'         | | `-ImplicitCastExpr 0x1568098b8 <col:19> 'int' contains-errors <LValueToRValue>         | |   `-DeclRefExpr 0x156809880 <col:19> 'int' contains-errors lvalue Var 0x155809668 'imageBpp' 'int'         | `-CompoundStmt 0x156809c30 <col:29, line:36:5>         |   `-CompoundAssignOperator 0x156809c00 <line:35:7, col:15> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'         |     |-DeclRefExpr 0x156809ba8 <col:7> 'int' lvalue Var 0x156809390 'bits' 'int'         |     `-IntegerLiteral 0x156809bc8 <col:15> 'int' 8         |-DeclStmt 0x156809e68 <line:38:5, col:63>         | `-VarDecl 0x156809c80 <col:5, col:51> col:18 used col 'unsigned int' cinit         |   `-BinaryOperator 0x156809e48 <col:24, col:51> 'unsigned int' contains-errors '&'         |     |-ParenExpr 0x156809df0 <col:24, col:49> 'unsigned int' contains-errors         |     | `-BinaryOperator 0x156809dd0 <col:25, col:48> 'unsigned int' contains-errors '>>'         |     |   |-ImplicitCastExpr 0x156809db8 <col:25> 'unsigned int' <LValueToRValue>         |     |   | `-DeclRefExpr 0x156809ce8 <col:25> 'unsigned int' lvalue Var 0x156809448 'colData' 'unsigned int'         |     |   `-ParenExpr 0x156809d98 <col:34, col:48> 'int' contains-errors         |     |     `-BinaryOperator 0x156809d78 <col:35, col:40> 'int' contains-errors '-'         |     |       |-ImplicitCastExpr 0x156809d48 <col:35> 'int' <LValueToRValue>         |     |       | `-DeclRefExpr 0x156809d08 <col:35> 'int' lvalue Var 0x156809390 'bits' 'int'         |     |       `-ImplicitCastExpr 0x156809d60 <col:40> 'int' contains-errors <LValueToRValue>         |     |         `-DeclRefExpr 0x156809d28 <col:40> 'int' contains-errors lvalue Var 0x155809668 'imageBpp' 'int'         |     `-ImplicitCastExpr 0x156809e30 <col:51> 'unsigned int' contains-errors <LValueToRValue>         |       `-DeclRefExpr 0x156809e10 <col:51> 'unsigned int' contains-errors lvalue Var 0x155809840 'imageBitMask' 'unsigned int'         |-CompoundAssignOperator 0x156809ed8 <line:39:5, col:13> 'int' contains-errors '-=' ComputeLHSTy='int' ComputeResultTy='int'         | |-DeclRefExpr 0x156809e80 <col:5> 'int' lvalue Var 0x156809390 'bits' 'int'         | `-ImplicitCastExpr 0x156809ec0 <col:13> 'int' contains-errors <LValueToRValue>         |   `-DeclRefExpr 0x156809ea0 <col:13> 'int' contains-errors lvalue Var 0x155809668 'imageBpp' 'int'         |-IfStmt 0x15680a3c0 <line:41:5, line:45:5>         | |-RecoveryExpr 0x156809f98 <line:41:9, col:53> '_Bool' contains-errors         | `-CompoundStmt 0x15680a3b0 <col:58, line:45:5>         |-UnaryOperator 0x15680a400 <line:47:5, col:6> 'int' postfix '++'         | `-DeclRefExpr 0x15680a3e0 <col:5> 'int' lvalue Var 0x156809220 'x' 'int'         `-IfStmt 0x15680a560 <line:48:5, line:52:5>           |-BinaryOperator 0x15680a488 <line:48:9, col:12> 'int' contains-errors '>='           | |-ImplicitCastExpr 0x15680a458 <col:9> 'int' <LValueToRValue>           | | `-DeclRefExpr 0x15680a418 <col:9> 'int' lvalue Var 0x156809220 'x' 'int'           | `-ImplicitCastExpr 0x15680a470 <col:12> 'int' contains-errors <LValueToRValue>           |   `-DeclRefExpr 0x15680a438 <col:12> 'int' contains-errors lvalue Var 0x1558090f8 'imageWidth' 'int'           `-CompoundStmt 0x15680a540 <col:24, line:52:5>             |-BinaryOperator 0x15680a4e8 <line:49:7, col:9> 'int' '='             | |-DeclRefExpr 0x15680a4a8 <col:7> 'int' lvalue Var 0x156809220 'x' 'int'             | `-IntegerLiteral 0x15680a4c8 <col:9> 'int' 0             `-UnaryOperator 0x15680a528 <line:50:7, col:8> 'int' postfix '++'               `-DeclRefExpr 0x15680a508 <col:7> 'int' lvalue Var 0x1568092c0 'y' 'int' ","19445":"`-FunctionDecl 0x136928f08  line:1:1 invalid conv_encoding 'int (int, int, const int *, const int *, int **, int **)'   |-ParmVarDecl 0x136928af0 <col:15, col:28> col:28 invalid from 'int'   |-ParmVarDecl 0x136928b70 <col:34, col:47> col:47 invalid to 'int'   |-ParmVarDecl 0x136928bf0 <col:51, col:64> col:64 invalid s 'const int *'   |-ParmVarDecl 0x136928c70 <col:67, col:80> col:80 invalid end 'const int *'   |-ParmVarDecl 0x136928d60 <line:2:15, col:23> col:23 invalid conv 'int **'   |-ParmVarDecl 0x136928de8 <col:29, col:37> col:37 invalid conv_end 'int **'   `-CompoundStmt 0x1369440a0 <line:3:1, line:66:1>     |-DeclStmt 0x1369290c0 <line:4:3, col:20>     | `-VarDecl 0x136928ff8 <col:3, col:19> col:7 used len 'int' cinit     |   `-BinaryOperator 0x1369290a0 <col:13, col:19> '<dependent type>' contains-errors '-'     |     |-RecoveryExpr 0x136929060 <col:13> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x136929080 <col:19> '<dependent type>' contains-errors lvalue     |-IfStmt 0x136942a60 <line:6:3, line:34:3> has_else     | |-BinaryOperator 0x136929150 <line:6:7, col:13> 'int' contains-errors '=='     | | |-RecoveryExpr 0x1369290d8 <col:7> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x136929130 <col:13> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x1400091e0 <col:37, line:22:3>     | | `-IfStmt 0x1400091b0 <line:7:5, line:21:5> has_else     | |   |-BinaryOperator 0x1400082c0 <line:7:9, col:48> 'int' contains-errors '||'     | |   | |-BinaryOperator 0x140008260 <col:9, col:17> 'int' contains-errors '=='     | |   | | |-RecoveryExpr 0x136929170 <col:9> '<dependent type>' contains-errors lvalue     | |   | | `-RecoveryExpr 0x140008240 <col:17> '<dependent type>' contains-errors lvalue     | |   | `-BinaryOperator 0x1400082a0 <col:40, col:48> 'int' contains-errors '=='     | |   |   |-RecoveryExpr 0x1369291c8 <col:40> '<dependent type>' contains-errors lvalue     | |   |   `-RecoveryExpr 0x140008280 <col:48> '<dependent type>' contains-errors lvalue     | |   |-CompoundStmt 0x140008a90 <col:74, line:13:5>     | |   | |-CallExpr 0x140008598 <line:9:7, col:37> '<dependent type>' contains-errors     | |   | | |-DeclRefExpr 0x1400084d0 <col:7> 'int ()' Function 0x140008418 'CHECK_NULL_RETURN_MEMERR' 'int ()'     | |   | | `-UnaryOperator 0x140008580 <col:32, col:33> '<dependent type>' contains-errors prefix '*' cannot overflow     | |   | |   `-ImplicitCastExpr 0x140008568 <col:33> '<dependent type>' contains-errors <LValueToRValue>     | |   | |     `-RecoveryExpr 0x1400084f0 <col:33> '<dependent type>' contains-errors lvalue     | |   | |-BinaryOperator 0x140008810 <line:10:7, col:35> '<dependent type>' contains-errors '='     | |   | | |-UnaryOperator 0x140008750 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow     | |   | | | `-ImplicitCastExpr 0x140008738 <col:8> '<dependent type>' contains-errors <LValueToRValue>     | |   | | |   `-RecoveryExpr 0x1400085c0 <col:8> '<dependent type>' contains-errors lvalue     | |   | | `-BinaryOperator 0x1400087f0 <col:19, col:35> '<dependent type>' contains-errors '+'     | |   | |   |-UnaryOperator 0x140008780 <col:19, col:20> '<dependent type>' contains-errors prefix '*' cannot overflow     | |   | |   | `-ImplicitCastExpr 0x140008768 <col:20> '<dependent type>' contains-errors <LValueToRValue>     | |   | |   |   `-RecoveryExpr 0x140008610 <col:20> '<dependent type>' contains-errors lvalue     | |   | |   `-ParenExpr 0x1400087d0 <col:27, col:35> 'int' contains-errors     | |   | |     `-BinaryOperator 0x1400087b0 <col:28, col:34> 'int' contains-errors '*'     | |   | |       |-ImplicitCastExpr 0x140008798 <col:28> 'int' contains-errors <LValueToRValue>     | |   | |       | `-DeclRefExpr 0x140008660 <col:28> 'int' contains-errors lvalue Var 0x136928ff8 'len' 'int'     | |   | |       `-IntegerLiteral 0x140008680 <col:34> 'int' 2     | |   | |-CallExpr 0x140008a28 <line:11:7, col:32> '<dependent type>' contains-errors     | |   | | |-DeclRefExpr 0x140008910 <col:7> 'int ()' Function 0x140008858 'conv_ext0be' 'int ()'     | |   | | |-RecoveryExpr 0x140008930 <col:19> '<dependent type>' contains-errors lvalue     | |   | | |-RecoveryExpr 0x140008950 <col:22> '<dependent type>' contains-errors lvalue     | |   | | `-UnaryOperator 0x140008a10 <col:27, col:28> '<dependent type>' contains-errors prefix '*' cannot overflow     | |   | |   `-ImplicitCastExpr 0x1400089f8 <col:28> '<dependent type>' contains-errors <LValueToRValue>     | |   | |     `-RecoveryExpr 0x140008970 <col:28> '<dependent type>' contains-errors lvalue     | |   | `-ReturnStmt 0x140008a80 <line:12:7, col:14>     | |   |   `-IntegerLiteral 0x140008a60 <col:14> 'int' 0     | |   `-IfStmt 0x140009190 <line:14:10, line:21:5>     | |     |-BinaryOperator 0x140008b38 <line:14:14, col:22> 'int' contains-errors '=='     | |     | |-RecoveryExpr 0x140008ac0 <col:14> '<dependent type>' contains-errors lvalue     | |     | `-RecoveryExpr 0x140008b18 <col:22> '<dependent type>' contains-errors lvalue     | |     `-CompoundStmt 0x140009158 <col:46, line:21:5>     | |       |-LabelStmt 0x140008c48 <line:15:5, col:11> 'swap16'     | |       | `-NullStmt 0x140008bf0 <col:11>     | |       |-CallExpr 0x140008d30 <line:17:7, col:37> '<dependent type>' contains-errors     | |       | |-DeclRefExpr 0x140008c68 <col:7> 'int ()' Function 0x140008418 'CHECK_NULL_RETURN_MEMERR' 'int ()'     | |       | `-UnaryOperator 0x140008d18 <col:32, col:33> '<dependent type>' contains-errors prefix '*' cannot overflow     | |       |   `-ImplicitCastExpr 0x140008d00 <col:33> '<dependent type>' contains-errors <LValueToRValue>     | |       |     `-RecoveryExpr 0x140008c88 <col:33> '<dependent type>' contains-errors lvalue     | |       |-BinaryOperator 0x140008ed8 <line:18:7, col:27> '<dependent type>' contains-errors '='     | |       | |-UnaryOperator 0x140008e70 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow     | |       | | `-ImplicitCastExpr 0x140008e58 <col:8> '<dependent type>' contains-errors <LValueToRValue>     | |       | |   `-RecoveryExpr 0x140008d58 <col:8> '<dependent type>' contains-errors lvalue     | |       | `-BinaryOperator 0x140008eb8 <col:19, col:27> '<dependent type>' contains-errors '+'     | |       |   |-UnaryOperator 0x140008ea0 <col:19, col:20> '<dependent type>' contains-errors prefix '*' cannot overflow     | |       |   | `-ImplicitCastExpr 0x140008e88 <col:20> '<dependent type>' contains-errors <LValueToRValue>     | |       |   |   `-RecoveryExpr 0x140008da8 <col:20> '<dependent type>' contains-errors lvalue     | |       |   `-DeclRefExpr 0x140008df8 <col:27> 'int' contains-errors lvalue Var 0x136928ff8 'len' 'int'     | |       |-CallExpr 0x1400090f0 <line:19:7, col:36> '<dependent type>' contains-errors     | |       | |-DeclRefExpr 0x140008fd8 <col:7> 'int ()' Function 0x140008f20 'conv_swap2bytes' 'int ()'     | |       | |-RecoveryExpr 0x140008ff8 <col:23> '<dependent type>' contains-errors lvalue     | |       | |-RecoveryExpr 0x140009018 <col:26> '<dependent type>' contains-errors lvalue     | |       | `-UnaryOperator 0x1400090d8 <col:31, col:32> '<dependent type>' contains-errors prefix '*' cannot overflow     | |       |   `-ImplicitCastExpr 0x1400090c0 <col:32> '<dependent type>' contains-errors <LValueToRValue>     | |       |     `-RecoveryExpr 0x140009038 <col:32> '<dependent type>' contains-errors lvalue     | |       `-ReturnStmt 0x140009148 <line:20:7, col:14>     | |         `-IntegerLiteral 0x140009128 <col:14> 'int' 0     | `-IfStmt 0x136942a40 <line:23:8, line:34:3>     |   |-BinaryOperator 0x136942278 <line:23:12, col:18> 'int' contains-errors '=='     |   | |-RecoveryExpr 0x136942200 <col:12> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x136942258 <col:18> '<dependent type>' contains-errors lvalue     |   `-CompoundStmt 0x136942a28 <col:42, line:34:3>     |     `-IfStmt 0x1369429f8 <line:24:5, line:33:5> has_else     |       |-RecoveryExpr 0x1369422d8 <line:24:9, col:48> '_Bool' contains-errors     |       |-CompoundStmt 0x136942938 <col:74, line:30:5>     |       | |-CallExpr 0x136942440 <line:26:7, col:37> '<dependent type>' contains-errors     |       | | |-DeclRefExpr 0x136942378 <col:7> 'int ()' Function 0x140008418 'CHECK_NULL_RETURN_MEMERR' 'int ()'     |       | | `-UnaryOperator 0x136942428 <col:32, col:33> '<dependent type>' contains-errors prefix '*' cannot overflow     |       | |   `-ImplicitCastExpr 0x136942410 <col:33> '<dependent type>' contains-errors <LValueToRValue>     |       | |     `-RecoveryExpr 0x136942398 <col:33> '<dependent type>' contains-errors lvalue     |       | |-BinaryOperator 0x1369426b8 <line:27:7, col:35> '<dependent type>' contains-errors '='     |       | | |-UnaryOperator 0x1369425f8 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow     |       | | | `-ImplicitCastExpr 0x1369425e0 <col:8> '<dependent type>' contains-errors <LValueToRValue>     |       | | |   `-RecoveryExpr 0x136942468 <col:8> '<dependent type>' contains-errors lvalue     |       | | `-BinaryOperator 0x136942698 <col:19, col:35> '<dependent type>' contains-errors '+'     |       | |   |-UnaryOperator 0x136942628 <col:19, col:20> '<dependent type>' contains-errors prefix '*' cannot overflow     |       | |   | `-ImplicitCastExpr 0x136942610 <col:20> '<dependent type>' contains-errors <LValueToRValue>     |       | |   |   `-RecoveryExpr 0x1369424b8 <col:20> '<dependent type>' contains-errors lvalue     |       | |   `-ParenExpr 0x136942678 <col:27, col:35> 'int' contains-errors     |       | |     `-BinaryOperator 0x136942658 <col:28, col:34> 'int' contains-errors '*'     |       | |       |-ImplicitCastExpr 0x136942640 <col:28> 'int' contains-errors <LValueToRValue>     |       | |       | `-DeclRefExpr 0x136942508 <col:28> 'int' contains-errors lvalue Var 0x136928ff8 'len' 'int'     |       | |       `-IntegerLiteral 0x136942528 <col:34> 'int' 2     |       | |-CallExpr 0x1369428d0 <line:28:7, col:32> '<dependent type>' contains-errors     |       | | |-DeclRefExpr 0x1369427b8 <col:7> 'int ()' Function 0x136942700 'conv_ext0le' 'int ()'     |       | | |-RecoveryExpr 0x1369427d8 <col:19> '<dependent type>' contains-errors lvalue     |       | | |-RecoveryExpr 0x1369427f8 <col:22> '<dependent type>' contains-errors lvalue     |       | | `-UnaryOperator 0x1369428b8 <col:27, col:28> '<dependent type>' contains-errors prefix '*' cannot overflow     |       | |   `-ImplicitCastExpr 0x1369428a0 <col:28> '<dependent type>' contains-errors <LValueToRValue>     |       | |     `-RecoveryExpr 0x136942818 <col:28> '<dependent type>' contains-errors lvalue     |       | `-ReturnStmt 0x136942928 <line:29:7, col:14>     |       |   `-IntegerLiteral 0x136942908 <col:14> 'int' 0     |       `-IfStmt 0x1369429d8 <line:31:10, line:33:5>     |         |-RecoveryExpr 0x136942988 <line:31:14, col:22> '_Bool' contains-errors     |         `-CompoundStmt 0x1369429c0 <col:46, line:33:5>     |           `-GotoStmt 0x1369429a8 <line:32:7, col:12> 'swap16' 0x140008bf8     `-IfStmt 0x136944070 <line:35:3, line:63:3> has_else       |-RecoveryExpr 0x136942ab0 <line:35:7, col:13> '_Bool' contains-errors       |-CompoundStmt 0x136943850 <col:37, line:51:3>       | `-IfStmt 0x136943820 <line:36:5, line:50:5> has_else       |   |-RecoveryExpr 0x136942b10 <line:36:9, col:48> '_Bool' contains-errors       |   |-CompoundStmt 0x136943170 <col:74, line:42:5>       |   | |-CallExpr 0x136942c78 <line:38:7, col:37> '<dependent type>' contains-errors       |   | | |-DeclRefExpr 0x136942bb0 <col:7> 'int ()' Function 0x140008418 'CHECK_NULL_RETURN_MEMERR' 'int ()'       |   | | `-UnaryOperator 0x136942c60 <col:32, col:33> '<dependent type>' contains-errors prefix '*' cannot overflow       |   | |   `-ImplicitCastExpr 0x136942c48 <col:33> '<dependent type>' contains-errors <LValueToRValue>       |   | |     `-RecoveryExpr 0x136942bd0 <col:33> '<dependent type>' contains-errors lvalue       |   | |-BinaryOperator 0x136942ef0 <line:39:7, col:35> '<dependent type>' contains-errors '='       |   | | |-UnaryOperator 0x136942e30 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow       |   | | | `-ImplicitCastExpr 0x136942e18 <col:8> '<dependent type>' contains-errors <LValueToRValue>       |   | | |   `-RecoveryExpr 0x136942ca0 <col:8> '<dependent type>' contains-errors lvalue       |   | | `-BinaryOperator 0x136942ed0 <col:19, col:35> '<dependent type>' contains-errors '+'       |   | |   |-UnaryOperator 0x136942e60 <col:19, col:20> '<dependent type>' contains-errors prefix '*' cannot overflow       |   | |   | `-ImplicitCastExpr 0x136942e48 <col:20> '<dependent type>' contains-errors <LValueToRValue>       |   | |   |   `-RecoveryExpr 0x136942cf0 <col:20> '<dependent type>' contains-errors lvalue       |   | |   `-ParenExpr 0x136942eb0 <col:27, col:35> 'int' contains-errors       |   | |     `-BinaryOperator 0x136942e90 <col:28, col:34> 'int' contains-errors '*'       |   | |       |-ImplicitCastExpr 0x136942e78 <col:28> 'int' contains-errors <LValueToRValue>       |   | |       | `-DeclRefExpr 0x136942d40 <col:28> 'int' contains-errors lvalue Var 0x136928ff8 'len' 'int'       |   | |       `-IntegerLiteral 0x136942d60 <col:34> 'int' 4       |   | |-CallExpr 0x136943108 <line:40:7, col:34> '<dependent type>' contains-errors       |   | | |-DeclRefExpr 0x136942ff0 <col:7> 'int ()' Function 0x136942f38 'conv_ext0be32' 'int ()'       |   | | |-RecoveryExpr 0x136943010 <col:21> '<dependent type>' contains-errors lvalue       |   | | |-RecoveryExpr 0x136943030 <col:24> '<dependent type>' contains-errors lvalue       |   | | `-UnaryOperator 0x1369430f0 <col:29, col:30> '<dependent type>' contains-errors prefix '*' cannot overflow       |   | |   `-ImplicitCastExpr 0x1369430d8 <col:30> '<dependent type>' contains-errors <LValueToRValue>       |   | |     `-RecoveryExpr 0x136943050 <col:30> '<dependent type>' contains-errors lvalue       |   | `-ReturnStmt 0x136943160 <line:41:7, col:14>       |   |   `-IntegerLiteral 0x136943140 <col:14> 'int' 0       |   `-IfStmt 0x136943800 <line:43:10, line:50:5>       |     |-RecoveryExpr 0x1369431c0 <line:43:14, col:22> '_Bool' contains-errors       |     `-CompoundStmt 0x1369437c8 <col:46, line:50:5>       |       |-LabelStmt 0x1369432b8 <line:44:5, col:11> 'swap32'       |       | `-NullStmt 0x136943260 <col:11>       |       |-CallExpr 0x1369433a0 <line:46:7, col:37> '<dependent type>' contains-errors       |       | |-DeclRefExpr 0x1369432d8 <col:7> 'int ()' Function 0x140008418 'CHECK_NULL_RETURN_MEMERR' 'int ()'       |       | `-UnaryOperator 0x136943388 <col:32, col:33> '<dependent type>' contains-errors prefix '*' cannot overflow       |       |   `-ImplicitCastExpr 0x136943370 <col:33> '<dependent type>' contains-errors <LValueToRValue>       |       |     `-RecoveryExpr 0x1369432f8 <col:33> '<dependent type>' contains-errors lvalue       |       |-BinaryOperator 0x136943548 <line:47:7, col:27> '<dependent type>' contains-errors '='       |       | |-UnaryOperator 0x1369434e0 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow       |       | | `-ImplicitCastExpr 0x1369434c8 <col:8> '<dependent type>' contains-errors <LValueToRValue>       |       | |   `-RecoveryExpr 0x1369433c8 <col:8> '<dependent type>' contains-errors lvalue       |       | `-BinaryOperator 0x136943528 <col:19, col:27> '<dependent type>' contains-errors '+'       |       |   |-UnaryOperator 0x136943510 <col:19, col:20> '<dependent type>' contains-errors prefix '*' cannot overflow       |       |   | `-ImplicitCastExpr 0x1369434f8 <col:20> '<dependent type>' contains-errors <LValueToRValue>       |       |   |   `-RecoveryExpr 0x136943418 <col:20> '<dependent type>' contains-errors lvalue       |       |   `-DeclRefExpr 0x136943468 <col:27> 'int' contains-errors lvalue Var 0x136928ff8 'len' 'int'       |       |-CallExpr 0x136943760 <line:48:7, col:36> '<dependent type>' contains-errors       |       | |-DeclRefExpr 0x136943648 <col:7> 'int ()' Function 0x136943590 'conv_swap4bytes' 'int ()'       |       | |-RecoveryExpr 0x136943668 <col:23> '<dependent type>' contains-errors lvalue       |       | |-RecoveryExpr 0x136943688 <col:26> '<dependent type>' contains-errors lvalue       |       | `-UnaryOperator 0x136943748 <col:31, col:32> '<dependent type>' contains-errors prefix '*' cannot overflow       |       |   `-ImplicitCastExpr 0x136943730 <col:32> '<dependent type>' contains-errors <LValueToRValue>       |       |     `-RecoveryExpr 0x1369436a8 <col:32> '<dependent type>' contains-errors lvalue       |       `-ReturnStmt 0x1369437b8 <line:49:7, col:14>       |         `-IntegerLiteral 0x136943798 <col:14> 'int' 0       `-IfStmt 0x136944050 <line:52:8, line:63:3>         |-RecoveryExpr 0x136943888 <line:52:12, col:18> '_Bool' contains-errors         `-CompoundStmt 0x136944038 <col:42, line:63:3>           `-IfStmt 0x136944008 <line:53:5, line:62:5> has_else             |-RecoveryExpr 0x1369438e8 <line:53:9, col:48> '_Bool' contains-errors             |-CompoundStmt 0x136943f48 <col:74, line:59:5>             | |-CallExpr 0x136943a50 <line:55:7, col:37> '<dependent type>' contains-errors             | | |-DeclRefExpr 0x136943988 <col:7> 'int ()' Function 0x140008418 'CHECK_NULL_RETURN_MEMERR' 'int ()'             | | `-UnaryOperator 0x136943a38 <col:32, col:33> '<dependent type>' contains-errors prefix '*' cannot overflow             | |   `-ImplicitCastExpr 0x136943a20 <col:33> '<dependent type>' contains-errors <LValueToRValue>             | |     `-RecoveryExpr 0x1369439a8 <col:33> '<dependent type>' contains-errors lvalue             | |-BinaryOperator 0x136943cc8 <line:56:7, col:35> '<dependent type>' contains-errors '='             | | |-UnaryOperator 0x136943c08 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow             | | | `-ImplicitCastExpr 0x136943bf0 <col:8> '<dependent type>' contains-errors <LValueToRValue>             | | |   `-RecoveryExpr 0x136943a78 <col:8> '<dependent type>' contains-errors lvalue             | | `-BinaryOperator 0x136943ca8 <col:19, col:35> '<dependent type>' contains-errors '+'             | |   |-UnaryOperator 0x136943c38 <col:19, col:20> '<dependent type>' contains-errors prefix '*' cannot overflow             | |   | `-ImplicitCastExpr 0x136943c20 <col:20> '<dependent type>' contains-errors <LValueToRValue>             | |   |   `-RecoveryExpr 0x136943ac8 <col:20> '<dependent type>' contains-errors lvalue             | |   `-ParenExpr 0x136943c88 <col:27, col:35> 'int' contains-errors             | |     `-BinaryOperator 0x136943c68 <col:28, col:34> 'int' contains-errors '*'             | |       |-ImplicitCastExpr 0x136943c50 <col:28> 'int' contains-errors <LValueToRValue>             | |       | `-DeclRefExpr 0x136943b18 <col:28> 'int' contains-errors lvalue Var 0x136928ff8 'len' 'int'             | |       `-IntegerLiteral 0x136943b38 <col:34> 'int' 4             | |-CallExpr 0x136943ee0 <line:57:7, col:34> '<dependent type>' contains-errors             | | |-DeclRefExpr 0x136943dc8 <col:7> 'int ()' Function 0x136943d10 'conv_ext0le32' 'int ()'             | | |-RecoveryExpr 0x136943de8 <col:21> '<dependent type>' contains-errors lvalue             | | |-RecoveryExpr 0x136943e08 <col:24> '<dependent type>' contains-errors lvalue             | | `-UnaryOperator 0x136943ec8 <col:29, col:30> '<dependent type>' contains-errors prefix '*' cannot overflow             | |   `-ImplicitCastExpr 0x136943eb0 <col:30> '<dependent type>' contains-errors <LValueToRValue>             | |     `-RecoveryExpr 0x136943e28 <col:30> '<dependent type>' contains-errors lvalue             | `-ReturnStmt 0x136943f38 <line:58:7, col:14>             |   `-IntegerLiteral 0x136943f18 <col:14> 'int' 0             `-IfStmt 0x136943fe8 <line:60:10, line:62:5>               |-RecoveryExpr 0x136943f98 <line:60:14, col:22> '_Bool' contains-errors               `-CompoundStmt 0x136943fd0 <col:46, line:62:5>                 `-GotoStmt 0x136943fb8 <line:61:7, col:12> 'swap32' 0x136943268 ","19619":"`-FunctionDecl 0x11f940b48  line:1:12 referenced p54u_load_firmware 'int (struct ieee80211_hw *, struct usb_interface *)' static   |-ParmVarDecl 0x11f928648 <col:31, col:52> col:52 used dev 'struct ieee80211_hw *'   |-ParmVarDecl 0x11f940a28 <line:2:10, col:32> col:32 used intf 'struct usb_interface *'   `-CompoundStmt 0x11f9482a0 <line:3:1, line:30:1>     |-DeclStmt 0x11f941048 <line:4:2, col:53>     | |-RecordDecl 0x11f940c48 <col:2, col:9> col:9 struct usb_device     | `-VarDecl 0x11f940db8 <col:2, col:52> col:21 used udev 'struct usb_device *' cinit     |   `-ImplicitCastExpr 0x11f941018 <col:28, col:52> 'struct usb_device *' <IntegralToPointer>     |     `-CallExpr 0x11f940fd8 <col:28, col:52> 'int'     |       |-ImplicitCastExpr 0x11f940fc0 <col:28> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x11f940f50 <col:28> 'int ()' Function 0x11f940e98 'interface_to_usbdev' 'int ()'     |       `-ImplicitCastExpr 0x11f941000 <col:48> 'struct usb_interface *' <LValueToRValue>     |         `-DeclRefExpr 0x11f940f70 <col:48> 'struct usb_interface *' lvalue ParmVar 0x11f940a28 'intf' 'struct usb_interface *'     |-DeclStmt 0x11f9412a8 <line:5:2, col:36>     | |-RecordDecl 0x11f941060 <col:2, col:9> col:9 struct p54u_priv     | `-VarDecl 0x11f9411c8 <col:2, col:32> col:20 used priv 'struct p54u_priv *' cinit     |   `-RecoveryExpr 0x11f941268 <col:27, col:32> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x11f941230 <col:27> 'struct ieee80211_hw *' lvalue ParmVar 0x11f928648 'dev' 'struct ieee80211_hw *'     |-DeclStmt 0x11f941520 <line:6:2, col:36>     | |-RecordDecl 0x11f9412c0 <col:2, col:9> col:9 struct device     | `-VarDecl 0x11f941428 <col:2, col:33> col:17 used device 'struct device *' cinit     |   `-UnaryOperator 0x11f9414f0 <col:26, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x11f9414c8 <col:27, col:33> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x11f941490 <col:27> 'struct usb_device *' lvalue Var 0x11f940db8 'udev' 'struct usb_device *'     |-DeclStmt 0x11f941650 <line:7:2, col:12>     | |-VarDecl 0x11f941550 <col:2, col:6> col:6 used err 'int'     | `-VarDecl 0x11f9415d0 <col:2, col:11> col:11 used i 'int'     |-CallExpr 0x11f941990 <line:9:2, col:60> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11f941748 <col:2> 'int ()' Function 0x11f941690 'BUILD_BUG_ON' 'int ()'     | `-BinaryOperator 0x11f941970 <col:15, col:42> 'int' contains-errors '!='     |   |-CallExpr 0x11f941928 <col:15, col:37> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x11f941848 <col:15> 'int ()' Function 0x11f941790 'ARRAY_SIZE' 'int ()'     |   | `-RecoveryExpr 0x11f941908 <col:26> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x11f941950 <col:42> '<dependent type>' contains-errors lvalue     |-CallExpr 0x11f947550 <line:11:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11f9474b8 <col:2> 'int ()' Function 0x11f947400 'init_completion' 'int ()'     | `-UnaryOperator 0x11f947538 <col:18, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x11f947510 <col:19, col:25> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x11f9474d8 <col:19> 'struct p54u_priv *' contains-errors lvalue Var 0x11f9411c8 'priv' 'struct p54u_priv *'     |-BinaryOperator 0x11f947710 <line:12:2, col:24> 'int' contains-errors '='     | |-DeclRefExpr 0x11f947578 <col:2> 'int' lvalue Var 0x11f9415d0 'i' 'int'     | `-CallExpr 0x11f9476d0 <col:6, col:24> 'int' contains-errors     |   |-ImplicitCastExpr 0x11f9476b8 <col:6> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x11f947678 <col:6> 'int ()' Function 0x11f9475c0 'p54_find_type' 'int ()'     |   `-ImplicitCastExpr 0x11f9476f8 <col:20> 'struct p54u_priv *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x11f947698 <col:20> 'struct p54u_priv *' contains-errors lvalue Var 0x11f9411c8 'priv' 'struct p54u_priv *'     |-IfStmt 0x11f9477f0 <line:13:2, line:14:10>     | |-BinaryOperator 0x11f947788 <line:13:6, col:10> 'int' '<'     | | |-ImplicitCastExpr 0x11f947770 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x11f947730 <col:6> 'int' lvalue Var 0x11f9415d0 'i' 'int'     | | `-IntegerLiteral 0x11f947750 <col:10> 'int' 0     | `-ReturnStmt 0x11f9477e0 <line:14:3, col:10>     |   `-ImplicitCastExpr 0x11f9477c8 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x11f9477a8 <col:10> 'int' lvalue Var 0x11f9415d0 'i' 'int'     |-CallExpr 0x11f947ba0 <line:19:2, col:18> 'int'     | |-ImplicitCastExpr 0x11f947b88 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x11f947b48 <col:2> 'int ()' Function 0x11f947a90 'usb_get_dev' 'int ()'     | `-ImplicitCastExpr 0x11f947bc8 <col:14> 'struct usb_device *' <LValueToRValue>     |   `-DeclRefExpr 0x11f947b68 <col:14> 'struct usb_device *' lvalue Var 0x11f940db8 'udev' 'struct usb_device *'     |-IfStmt 0x11f948238 <line:23:2, line:27:2>     | |-ImplicitCastExpr 0x11f947e20 <line:23:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x11f947e00 <col:6> 'int' lvalue Var 0x11f941550 'err' 'int'     | `-CompoundStmt 0x11f948220 <col:11, line:27:2>     |   `-CallExpr 0x11f9481e0 <line:26:3, col:19> 'int'     |     |-ImplicitCastExpr 0x11f9481c8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x11f948188 <col:3> 'int ()' Function 0x11f9480d0 'usb_put_dev' 'int ()'     |     `-ImplicitCastExpr 0x11f948208 <col:15> 'struct usb_device *' <LValueToRValue>     |       `-DeclRefExpr 0x11f9481a8 <col:15> 'struct usb_device *' lvalue Var 0x11f940db8 'udev' 'struct usb_device *'     `-ReturnStmt 0x11f948290 <line:29:2, col:9>       `-ImplicitCastExpr 0x11f948278 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x11f948258 <col:9> 'int' lvalue Var 0x11f941550 'err' 'int' ","20031":"`-FunctionDecl 0x14000ddc8  line:1:5 invalid SSL_get_verify_mode 'int (const int *)'   |-ParmVarDecl 0x14000dcf0 <col:25, col:36> col:36 invalid s 'const int *'   `-CompoundStmt 0x14000df10 <line:2:2, line:4:2>     `-ReturnStmt 0x14000df00 <line:3:2, col:23>       `-ParenExpr 0x14000dee0 <col:8, col:23> '<dependent type>' contains-errors lvalue         `-CXXDependentScopeMemberExpr 0x14000de98 <col:9, col:12> '<dependent type>' contains-errors lvalue ->verify_mode           `-RecoveryExpr 0x14000de78 <col:9> '<dependent type>' contains-errors lvalue ","20064":"`-FunctionDecl 0x14780dd18  line:1:1 TEST_CASE 'int ()'   `-CompoundStmt 0x14780e020 <line:2:1, line:10:1>     `-CallExpr 0x14780dff8 <line:9:5, col:25> '<dependent type>' contains-errors       |-DeclRefExpr 0x14780df00 <col:5> 'int ()' Function 0x14780de48 'REQUIRE' 'int ()'       `-BinaryOperator 0x14780dfd8 <col:13, col:20> 'int' contains-errors '=='         |-RecoveryExpr 0x14780df98 <col:13> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x14780dfb8 <col:20> '<dependent type>' contains-errors lvalue ","19988":"`-FunctionDecl 0x12d141808  line:1:5 vmw_gb_surface_define_ioctl 'int (struct drm_device *, void *, struct drm_file *)'   |-ParmVarDecl 0x12d129248 <col:33, col:52> col:52 used dev 'struct drm_device *'   |-ParmVarDecl 0x12d1292c8 <col:57, col:63> col:63 used data 'void *'   |-ParmVarDecl 0x12d1416c8 <line:2:5, col:22> col:22 used file_priv 'struct drm_file *'   `-CompoundStmt 0x12d1489e0 <line:3:1, line:108:1>     |-DeclStmt 0x12d141d08 <line:4:2, col:46>     | |-RecordDecl 0x12d141910 <col:2, col:9> col:9 struct vmw_private     | `-VarDecl 0x12d141a78 <col:2, col:45> col:22 used dev_priv 'struct vmw_private *' cinit     |   `-ImplicitCastExpr 0x12d141cd8 <col:33, col:45> 'struct vmw_private *' <IntegralToPointer>     |     `-CallExpr 0x12d141c98 <col:33, col:45> 'int'     |       |-ImplicitCastExpr 0x12d141c80 <col:33> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x12d141c10 <col:33> 'int ()' Function 0x12d141b58 'vmw_priv' 'int ()'     |       `-ImplicitCastExpr 0x12d141cc0 <col:42> 'struct drm_device *' <LValueToRValue>     |         `-DeclRefExpr 0x12d141c30 <col:42> 'struct drm_device *' lvalue ParmVar 0x12d129248 'dev' 'struct drm_device *'     |-DeclStmt 0x12d141f08 <line:5:2, col:35>     | |-RecordDecl 0x12d141d20 <col:2, col:9> col:9 struct vmw_user_surface     | `-VarDecl 0x12d141e88 <col:2, col:27> col:27 used user_srf 'struct vmw_user_surface *'     |-DeclStmt 0x12d142108 <line:6:2, col:25>     | |-RecordDecl 0x12d141f20 <col:2, col:9> col:9 struct vmw_surface     | `-VarDecl 0x12d142088 <col:2, col:22> col:22 used srf 'struct vmw_surface *'     |-DeclStmt 0x12d142308 <line:7:2, col:26>     | |-RecordDecl 0x12d142120 <col:2, col:9> col:9 struct vmw_resource     | `-VarDecl 0x12d142288 <col:2, col:23> col:23 used res 'struct vmw_resource *'     |-DeclStmt 0x12d142410 <line:8:2, col:26>     | `-VarDecl 0x12d1423a8 <col:2, col:23> col:23 used tmp 'struct vmw_resource *'     |-DeclStmt 0x12d143500 <line:9:2, line:10:49>     | |-RecordDecl 0x12d142428 <line:9:2, col:8> col:8 union drm_vmw_gb_surface_create_arg     | `-VarDecl 0x12d142598 <col:2, line:10:45> line:9:39 used arg 'union drm_vmw_gb_surface_create_arg *' cinit     |   `-CStyleCastExpr 0x12d1434c0 <line:10:6, col:45> 'union drm_vmw_gb_surface_create_arg *' <BitCast>     |     `-ImplicitCastExpr 0x12d1434a8 <col:45> 'void *' <LValueToRValue> part_of_explicit_cast     |       `-DeclRefExpr 0x12d143400 <col:45> 'void *' lvalue ParmVar 0x12d1292c8 'data' 'void *'     |-DeclStmt 0x12d143780 <line:11:2, col:55>     | |-RecordDecl 0x12d143518 <col:2, col:9> col:9 struct drm_vmw_gb_surface_create_req     | `-VarDecl 0x12d143688 <col:2, col:52> col:40 used req 'struct drm_vmw_gb_surface_create_req *' cinit     |   `-UnaryOperator 0x12d143750 <col:46, col:52> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x12d143728 <col:47, col:52> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x12d1436f0 <col:47> 'union drm_vmw_gb_surface_create_arg *' lvalue Var 0x12d142598 'arg' 'union drm_vmw_gb_surface_create_arg *'     |-DeclStmt 0x12d143a00 <line:12:2, col:55>     | |-RecordDecl 0x12d143798 <col:2, col:9> col:9 struct drm_vmw_gb_surface_create_rep     | `-VarDecl 0x12d143908 <col:2, col:52> col:40 used rep 'struct drm_vmw_gb_surface_create_rep *' cinit     |   `-UnaryOperator 0x12d1439d0 <col:46, col:52> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x12d1439a8 <col:47, col:52> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x12d143970 <col:47> 'union drm_vmw_gb_surface_create_arg *' lvalue Var 0x12d142598 'arg' 'union drm_vmw_gb_surface_create_arg *'     |-DeclStmt 0x12d143da8 <line:13:2, col:61>     | |-RecordDecl 0x12d143a18 <col:2, col:9> col:9 struct ttm_object_file     | `-VarDecl 0x12d143b88 <col:2, col:56> col:26 used tfile 'struct ttm_object_file *' cinit     |   `-RecoveryExpr 0x12d143d68 <col:34, col:56> '<dependent type>' contains-errors lvalue     |     `-CallExpr 0x12d143d28 <col:34, col:53> 'int'     |       |-ImplicitCastExpr 0x12d143d10 <col:34> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x12d143cd0 <col:34> 'int ()' Function 0x12d143c18 'vmw_fpriv' 'int ()'     |       `-ImplicitCastExpr 0x12d143d50 <col:44> 'struct drm_file *' <LValueToRValue>     |         `-DeclRefExpr 0x12d143cf0 <col:44> 'struct drm_file *' lvalue ParmVar 0x12d1416c8 'file_priv' 'struct drm_file *'     |-DeclStmt 0x12d143e40 <line:14:2, col:9>     | `-VarDecl 0x12d143dd8 <col:2, col:6> col:6 used ret 'int'     |-IfStmt 0x12d143fa0 <line:18:2, line:19:11>     | |-BinaryOperator 0x12d143ed8 <line:18:6, col:32> 'int' contains-errors '!='     | | |-RecoveryExpr 0x12d143e90 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x12d143e58 <col:6> 'struct drm_vmw_gb_surface_create_req *' contains-errors lvalue Var 0x12d143688 'req' 'struct drm_vmw_gb_surface_create_req *'     | | `-IntegerLiteral 0x12d143eb8 <col:32> 'int' 0     | `-ReturnStmt 0x12d143f90 <line:19:3, col:11>     |   `-UnaryOperator 0x12d143f78 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12d143f60 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12d143f40 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12d145968 <line:38:2, line:39:10>     | |-CallExpr 0x12d1458f8 <line:38:6, col:23> 'int'     | | |-ImplicitCastExpr 0x12d1458e0 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x12d145848 <col:6> 'int ()' Function 0x12d143fe8 'unlikely' 'int ()'     | | `-BinaryOperator 0x12d1458c0 <col:15, col:22> 'int' '!='     | |   |-ImplicitCastExpr 0x12d1458a8 <col:15> 'int' <LValueToRValue>     | |   | `-DeclRefExpr 0x12d145868 <col:15> 'int' lvalue Var 0x12d143dd8 'ret' 'int'     | |   `-IntegerLiteral 0x12d145888 <col:22> 'int' 0     | `-ReturnStmt 0x12d145958 <line:39:3, col:10>     |   `-ImplicitCastExpr 0x12d145940 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x12d145920 <col:10> 'int' lvalue Var 0x12d143dd8 'ret' 'int'     |-IfStmt 0x12d145e68 <line:42:2, line:43:54>     | |-CallExpr 0x12d145c20 <line:42:6, col:37> 'int'     | | |-ImplicitCastExpr 0x12d145c08 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x12d145bc8 <col:6> 'int ()' Function 0x12d145b10 'drm_is_primary_client' 'int ()'     | | `-ImplicitCastExpr 0x12d145c48 <col:28> 'struct drm_file *' <LValueToRValue>     | |   `-DeclRefExpr 0x12d145be8 <col:28> 'struct drm_file *' lvalue ParmVar 0x12d1416c8 'file_priv' 'struct drm_file *'     | `-BinaryOperator 0x12d145e48 <line:43:3, col:54> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x12d145c98 <col:3, col:13> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x12d145c60 <col:3> 'struct vmw_user_surface *' lvalue Var 0x12d141e88 'user_srf' 'struct vmw_user_surface *'     |   `-CallExpr 0x12d145e20 <col:22, col:54> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12d145da0 <col:22> 'int ()' Function 0x12d145ce8 'drm_master_get' 'int ()'     |     `-RecoveryExpr 0x12d145df8 <col:37, col:48> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x12d145dc0 <col:37> 'struct drm_file *' lvalue ParmVar 0x12d1416c8 'file_priv' 'struct drm_file *'     |-IfStmt 0x12d146140 <line:46:2, line:47:10>     | |-CallExpr 0x12d1460d0 <line:46:6, col:23> 'int'     | | |-ImplicitCastExpr 0x12d1460b8 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x12d146020 <col:6> 'int ()' Function 0x12d143fe8 'unlikely' 'int ()'     | | `-BinaryOperator 0x12d146098 <col:15, col:22> 'int' '!='     | |   |-ImplicitCastExpr 0x12d146080 <col:15> 'int' <LValueToRValue>     | |   | `-DeclRefExpr 0x12d146040 <col:15> 'int' lvalue Var 0x12d143dd8 'ret' 'int'     | |   `-IntegerLiteral 0x12d146060 <col:22> 'int' 0     | `-ReturnStmt 0x12d146130 <line:47:3, col:10>     |   `-ImplicitCastExpr 0x12d146118 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x12d1460f8 <col:10> 'int' lvalue Var 0x12d143dd8 'ret' 'int'     |-BinaryOperator 0x12d146240 <line:49:2, col:23> 'struct vmw_resource *' contains-errors '='     | |-DeclRefExpr 0x12d146160 <col:2> 'struct vmw_resource *' lvalue Var 0x12d142288 'res' 'struct vmw_resource *'     | `-UnaryOperator 0x12d146228 <col:8, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x12d1461e0 <col:9, col:23> '<dependent type>' contains-errors lvalue .res     |     `-RecoveryExpr 0x12d1461b8 <col:9, col:19> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x12d146180 <col:9> 'struct vmw_user_surface *' lvalue Var 0x12d141e88 'user_srf' 'struct vmw_user_surface *'     |-IfStmt 0x12d146fa0 <line:52:2, line:63:9> has_else     | |-RecoveryExpr 0x12d1462c0 <line:52:6, col:28> '_Bool' contains-errors     | |-CompoundStmt 0x12d146be8 <col:47, line:63:2>     | | |-BinaryOperator 0x12d1465b0 <line:53:3, line:55:33> 'int' contains-errors '='     | | | |-DeclRefExpr 0x12d1462e0 <line:53:3> 'int' lvalue Var 0x12d143dd8 'ret' 'int'     | | | `-CallExpr 0x12d146570 <col:9, line:55:33> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x12d1463e0 <line:53:9> 'int ()' Function 0x12d146328 'vmw_user_dmabuf_lookup' 'int ()'     | | |   |-DeclRefExpr 0x12d146400 <col:32> 'struct ttm_object_file *' contains-errors lvalue Var 0x12d143b88 'tfile' 'struct ttm_object_file *'     | | |   |-RecoveryExpr 0x12d146458 <col:39, col:44> '<dependent type>' contains-errors lvalue     | | |   | `-DeclRefExpr 0x12d146420 <col:39> 'struct drm_vmw_gb_surface_create_req *' contains-errors lvalue Var 0x12d143688 'req' 'struct drm_vmw_gb_surface_create_req *'     | | |   |-UnaryOperator 0x12d1464e0 <line:54:11, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   | `-RecoveryExpr 0x12d1464b8 <col:12, col:17> '<dependent type>' contains-errors lvalue     | | |   |   `-DeclRefExpr 0x12d146480 <col:12> 'struct vmw_resource *' lvalue Var 0x12d142288 'res' 'struct vmw_resource *'     | | |   `-UnaryOperator 0x12d146558 <line:55:11, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |     `-RecoveryExpr 0x12d146530 <col:12, col:22> '<dependent type>' contains-errors lvalue     | | |       `-DeclRefExpr 0x12d1464f8 <col:12> 'struct vmw_user_surface *' lvalue Var 0x12d141e88 'user_srf' 'struct vmw_user_surface *'     | | `-IfStmt 0x12d146bc8 <line:56:3, line:62:3>     | |   |-RecoveryExpr 0x12d146798 <line:56:7, line:57:12> '_Bool' contains-errors     | |   `-CompoundStmt 0x12d146ba0 <col:25, line:62:3>     | |     |-CallExpr 0x12d146938 <line:58:4, col:19> 'int'     | |     | |-ImplicitCastExpr 0x12d146920 <col:4> 'int (*)()' <FunctionToPointerDecay>     | |     | | `-DeclRefExpr 0x12d146898 <col:4> 'int ()' Function 0x12d1467e0 'DRM_ERROR' 'int ()'     | |     | `-ImplicitCastExpr 0x12d146960 <col:14> 'char *' <ArrayToPointerDecay>     | |     |   `-StringLiteral 0x12d146900 <col:14> 'char[4]' lvalue \"STR\"     | |     |-CallExpr 0x12d146af0 <line:59:4, col:39> '<dependent type>' contains-errors     | |     | |-DeclRefExpr 0x12d146a58 <col:4> 'int ()' Function 0x12d1469a0 'vmw_dmabuf_unreference' 'int ()'     | |     | `-UnaryOperator 0x12d146ad8 <col:27, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     |   `-RecoveryExpr 0x12d146ab0 <col:28, col:33> '<dependent type>' contains-errors lvalue     | |     |     `-DeclRefExpr 0x12d146a78 <col:28> 'struct vmw_resource *' lvalue Var 0x12d142288 'res' 'struct vmw_resource *'     | |     `-GotoStmt 0x12d146b88 <line:61:4, col:9> 'out_unlock' 0x12d146b38     | `-NullStmt 0x12d146f98 <line:63:9>     |-IfStmt 0x12d1472c0 <line:72:2, line:75:2>     | |-CallExpr 0x12d147080 <line:72:6, col:23> 'int'     | | |-ImplicitCastExpr 0x12d147068 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x12d146fd0 <col:6> 'int ()' Function 0x12d143fe8 'unlikely' 'int ()'     | | `-BinaryOperator 0x12d147048 <col:15, col:22> 'int' '!='     | |   |-ImplicitCastExpr 0x12d147030 <col:15> 'int' <LValueToRValue>     | |   | `-DeclRefExpr 0x12d146ff0 <col:15> 'int' lvalue Var 0x12d143dd8 'ret' 'int'     | |   `-IntegerLiteral 0x12d147010 <col:22> 'int' 0     | `-CompoundStmt 0x12d1472a0 <col:26, line:75:2>     |   |-CallExpr 0x12d147260 <line:73:3, col:32> 'int'     |   | |-ImplicitCastExpr 0x12d147248 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x12d147188 <col:3> 'int ()' Function 0x12d1470d0 'vmw_resource_unreference' 'int ()'     |   | `-UnaryOperator 0x12d147230 <col:28, col:29> 'struct vmw_resource **' prefix '&' cannot overflow     |   |   `-DeclRefExpr 0x12d1471a8 <col:29> 'struct vmw_resource *' lvalue Var 0x12d142288 'res' 'struct vmw_resource *'     |   `-GotoStmt 0x12d147288 <line:74:3, col:8> 'out_unlock' 0x12d146b38     |-BinaryOperator 0x12d147890 <line:77:2, col:34> 'struct vmw_resource *' '='     | |-DeclRefExpr 0x12d1472e0 <col:2> 'struct vmw_resource *' lvalue Var 0x12d1423a8 'tmp' 'struct vmw_resource *'     | `-ImplicitCastExpr 0x12d147878 <col:8, col:34> 'struct vmw_resource *' <IntegralToPointer>     |   `-CallExpr 0x12d147838 <col:8, col:34> 'int'     |     |-ImplicitCastExpr 0x12d147820 <col:8> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x12d1473e0 <col:8> 'int ()' Function 0x12d147328 'vmw_resource_reference' 'int ()'     |     `-ImplicitCastExpr 0x12d147860 <col:31> 'struct vmw_resource *' <LValueToRValue>     |       `-DeclRefExpr 0x12d147800 <col:31> 'struct vmw_resource *' lvalue Var 0x12d142288 'res' 'struct vmw_resource *'     |-IfStmt 0x12d147da0 <line:84:2, line:88:2>     | |-CallExpr 0x12d147bd8 <line:84:6, col:23> 'int'     | | |-ImplicitCastExpr 0x12d147bc0 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x12d147b28 <col:6> 'int ()' Function 0x12d143fe8 'unlikely' 'int ()'     | | `-BinaryOperator 0x12d147ba0 <col:15, col:22> 'int' '!='     | |   |-ImplicitCastExpr 0x12d147b88 <col:15> 'int' <LValueToRValue>     | |   | `-DeclRefExpr 0x12d147b48 <col:15> 'int' lvalue Var 0x12d143dd8 'ret' 'int'     | |   `-IntegerLiteral 0x12d147b68 <col:22> 'int' 0     | `-CompoundStmt 0x12d147d78 <col:26, line:88:2>     |   |-CallExpr 0x12d147ca0 <line:85:3, col:32> 'int'     |   | |-ImplicitCastExpr 0x12d147c88 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x12d147c00 <col:3> 'int ()' Function 0x12d1470d0 'vmw_resource_unreference' 'int ()'     |   | `-UnaryOperator 0x12d147c70 <col:28, col:29> 'struct vmw_resource **' prefix '&' cannot overflow     |   |   `-DeclRefExpr 0x12d147c20 <col:29> 'struct vmw_resource *' lvalue Var 0x12d1423a8 'tmp' 'struct vmw_resource *'     |   |-CallExpr 0x12d147d38 <line:86:3, col:32> 'int'     |   | |-ImplicitCastExpr 0x12d147d20 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x12d147cc8 <col:3> 'int ()' Function 0x12d1470d0 'vmw_resource_unreference' 'int ()'     |   | `-UnaryOperator 0x12d147d08 <col:28, col:29> 'struct vmw_resource **' prefix '&' cannot overflow     |   |   `-DeclRefExpr 0x12d147ce8 <col:29> 'struct vmw_resource *' lvalue Var 0x12d142288 'res' 'struct vmw_resource *'     |   `-GotoStmt 0x12d147d60 <line:87:3, col:8> 'out_unlock' 0x12d146b38     |-BinaryOperator 0x12d147f58 <line:90:2, col:47> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12d147df8 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12d147dc0 <col:2> 'struct drm_vmw_gb_surface_create_rep *' contains-errors lvalue Var 0x12d143908 'rep' 'struct drm_vmw_gb_surface_create_rep *'     | `-CXXDependentScopeMemberExpr 0x12d147f10 <col:21, col:47> '<dependent type>' contains-errors lvalue .key     |   `-CXXDependentScopeMemberExpr 0x12d147ec8 <col:21, col:42> '<dependent type>' contains-errors lvalue .hash     |     `-CXXDependentScopeMemberExpr 0x12d147e80 <col:21, col:37> '<dependent type>' contains-errors lvalue .base     |       `-RecoveryExpr 0x12d147e58 <col:21, col:31> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x12d147e20 <col:21> 'struct vmw_user_surface *' lvalue Var 0x12d141e88 'user_srf' 'struct vmw_user_surface *'     |-BinaryOperator 0x12d148038 <line:91:2, col:26> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12d147fb0 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12d147f78 <col:2> 'struct drm_vmw_gb_surface_create_rep *' contains-errors lvalue Var 0x12d143908 'rep' 'struct drm_vmw_gb_surface_create_rep *'     | `-RecoveryExpr 0x12d148010 <col:21, col:26> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12d147fd8 <col:21> 'struct vmw_resource *' lvalue Var 0x12d142288 'res' 'struct vmw_resource *'     |-IfStmt 0x12d1486f0 <line:92:2, line:101:2> has_else     | |-RecoveryExpr 0x12d148090 <line:92:6, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12d148058 <col:6> 'struct vmw_resource *' lvalue Var 0x12d142288 'res' 'struct vmw_resource *'     | |-CompoundStmt 0x12d148518 <col:19, line:97:2>     | | `-BinaryOperator 0x12d148348 <line:93:3, line:94:56> '<dependent type>' contains-errors '='     | |   |-RecoveryExpr 0x12d1480f0 <line:93:3, col:8> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x12d1480b8 <col:3> 'struct drm_vmw_gb_surface_create_rep *' contains-errors lvalue Var 0x12d143908 'rep' 'struct drm_vmw_gb_surface_create_rep *'     | |   `-CallExpr 0x12d148320 <line:94:4, col:56> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x12d1481f8 <col:4> 'int ()' Function 0x12d148140 'drm_vma_node_offset_addr' 'int ()'     | |     `-UnaryOperator 0x12d148308 <col:29, col:48> '<dependent type>' contains-errors prefix '&' cannot overflow     | |       `-CXXDependentScopeMemberExpr 0x12d1482c0 <col:30, col:48> '<dependent type>' contains-errors lvalue .vma_node     | |         `-CXXDependentScopeMemberExpr 0x12d148278 <col:30, col:43> '<dependent type>' contains-errors lvalue ->base     | |           `-RecoveryExpr 0x12d148250 <col:30, col:35> '<dependent type>' contains-errors lvalue     | |             `-DeclRefExpr 0x12d148218 <col:30> 'struct vmw_resource *' lvalue Var 0x12d142288 'res' 'struct vmw_resource *'     | `-CompoundStmt 0x12d1486d0 <line:97:9, line:101:2>     |   |-BinaryOperator 0x12d1485b0 <line:98:3, col:28> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x12d148568 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x12d148530 <col:3> 'struct drm_vmw_gb_surface_create_rep *' contains-errors lvalue Var 0x12d143908 'rep' 'struct drm_vmw_gb_surface_create_rep *'     |   | `-IntegerLiteral 0x12d148590 <col:28> 'int' 0     |   `-BinaryOperator 0x12d148650 <line:99:3, col:22> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x12d148608 <col:3, col:8> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x12d1485d0 <col:3> 'struct drm_vmw_gb_surface_create_rep *' contains-errors lvalue Var 0x12d143908 'rep' 'struct drm_vmw_gb_surface_create_rep *'     |     `-IntegerLiteral 0x12d148630 <col:22> 'int' 0     |-CallExpr 0x12d148790 <line:103:2, col:31> 'int'     | |-ImplicitCastExpr 0x12d148778 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12d148720 <col:2> 'int ()' Function 0x12d1470d0 'vmw_resource_unreference' 'int ()'     | `-UnaryOperator 0x12d148760 <col:27, col:28> 'struct vmw_resource **' prefix '&' cannot overflow     |   `-DeclRefExpr 0x12d148740 <col:28> 'struct vmw_resource *' lvalue Var 0x12d142288 'res' 'struct vmw_resource *'     |-LabelStmt 0x12d148978 <line:105:1, line:106:44> 'out_unlock'     | `-CallExpr 0x12d148950 <col:2, col:44> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12d1488b8 <col:2> 'int ()' Function 0x12d148800 'ttm_read_unlock' 'int ()'     |   `-UnaryOperator 0x12d148938 <col:18, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x12d148910 <col:19, col:29> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x12d1488d8 <col:19> 'struct vmw_private *' lvalue Var 0x12d141a78 'dev_priv' 'struct vmw_private *'     `-ReturnStmt 0x12d1489d0 <line:107:2, col:9>       `-ImplicitCastExpr 0x12d1489b8 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x12d148998 <col:9> 'int' lvalue Var 0x12d143dd8 'ret' 'int' ","19646":"`-FunctionDecl 0x14700e358  line:1:12 f2fs_set_data_page_dirty 'int (struct page *)' static   |-ParmVarDecl 0x14700e248 <col:37, col:50> col:50 used page 'struct page *'   `-CompoundStmt 0x150008f30 <line:2:1, line:26:1>     |-DeclStmt 0x14702aa98 <line:3:2, col:47>     | |-RecordDecl 0x14702a850 <col:2, col:9> col:9 struct address_space     | `-VarDecl 0x14702a9b8 <col:2, col:40> col:24 used mapping 'struct address_space *' cinit     |   `-RecoveryExpr 0x14702aa58 <col:34, col:40> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14702aa20 <col:34> 'struct page *' lvalue ParmVar 0x14700e248 'page' 'struct page *'     |-DeclStmt 0x14702acf8 <line:4:2, col:37>     | |-RecordDecl 0x14702aab0 <col:2, col:9> col:9 struct inode     | `-VarDecl 0x14702ac18 <col:2, col:33> col:16 used inode 'struct inode *' cinit     |   `-RecoveryExpr 0x14702acb8 <col:24, col:33> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14702ac80 <col:24> 'struct address_space *' contains-errors lvalue Var 0x14702a9b8 'mapping' 'struct address_space *'     |-CallExpr 0x14702aee8 <line:6:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14702ae40 <col:2> 'int ()' Function 0x14702ad88 'trace_f2fs_set_page_dirty' 'int ()'     | |-DeclRefExpr 0x14702ae60 <col:28> 'struct page *' lvalue ParmVar 0x14700e248 'page' 'struct page *'     | `-RecoveryExpr 0x14702aec8 <col:34> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14702b258 <line:8:2, line:9:23>     | |-UnaryOperator 0x14702b0c8 <line:8:6, col:24> 'int' prefix '!' cannot overflow     | | `-CallExpr 0x14702b088 <col:7, col:24> 'int'     | |   |-ImplicitCastExpr 0x14702b070 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x14702aff8 <col:7> 'int ()' Function 0x14702af40 'PageUptodate' 'int ()'     | |   `-ImplicitCastExpr 0x14702b0b0 <col:20> 'struct page *' <LValueToRValue>     | |     `-DeclRefExpr 0x14702b018 <col:20> 'struct page *' lvalue ParmVar 0x14700e248 'page' 'struct page *'     | `-CallExpr 0x14702b218 <line:9:3, col:23> 'int'     |   |-ImplicitCastExpr 0x14702b200 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14702b1c0 <col:3> 'int ()' Function 0x14702b108 'SetPageUptodate' 'int ()'     |   `-ImplicitCastExpr 0x14702b240 <col:19> 'struct page *' <LValueToRValue>     |     `-DeclRefExpr 0x14702b1e0 <col:19> 'struct page *' lvalue ParmVar 0x14700e248 'page' 'struct page *'     |-IfStmt 0x1500089a8 <line:11:2, line:18:2>     | |-BinaryOperator 0x14702b580 <line:11:6, col:70> 'int' contains-errors '&&'     | | |-CallExpr 0x14702b3b0 <col:6, col:31> 'int' contains-errors     | | | |-ImplicitCastExpr 0x14702b398 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x14702b358 <col:6> 'int ()' Function 0x14702b2a0 'f2fs_is_atomic_file' 'int ()'     | | | `-ImplicitCastExpr 0x14702b3d8 <col:26> 'struct inode *' contains-errors <LValueToRValue>     | | |   `-DeclRefExpr 0x14702b378 <col:26> 'struct inode *' contains-errors lvalue Var 0x14702ac18 'inode' 'struct inode *'     | | `-UnaryOperator 0x14702b568 <col:36, col:70> 'int' contains-errors prefix '!' cannot overflow     | |   `-CallExpr 0x14702b528 <col:37, col:70> 'int' contains-errors     | |     |-ImplicitCastExpr 0x14702b510 <col:37> 'int (*)()' <FunctionToPointerDecay>     | |     | `-DeclRefExpr 0x14702b4d0 <col:37> 'int ()' Function 0x14702b418 'f2fs_is_commit_atomic_write' 'int ()'     | |     `-ImplicitCastExpr 0x14702b550 <col:65> 'struct inode *' contains-errors <LValueToRValue>     | |       `-DeclRefExpr 0x14702b4f0 <col:65> 'struct inode *' contains-errors lvalue Var 0x14702ac18 'inode' 'struct inode *'     | `-CompoundStmt 0x150008988 <col:73, line:18:2>     |   |-IfStmt 0x150008938 <line:12:3, line:15:3>     |   | |-UnaryOperator 0x14702b718 <line:12:7, col:35> 'int' prefix '!' cannot overflow     |   | | `-CallExpr 0x14702b6d8 <col:8, col:35> 'int'     |   | |   |-ImplicitCastExpr 0x14702b6c0 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | |   | `-DeclRefExpr 0x14702b680 <col:8> 'int ()' Function 0x14702b5c8 'IS_ATOMIC_WRITTEN_PAGE' 'int ()'     |   | |   `-ImplicitCastExpr 0x14702b700 <col:31> 'struct page *' <LValueToRValue>     |   | |     `-DeclRefExpr 0x14702b6a0 <col:31> 'struct page *' lvalue ParmVar 0x14700e248 'page' 'struct page *'     |   | `-CompoundStmt 0x150008918 <col:38, line:15:3>     |   |   |-CallExpr 0x150008888 <line:13:4, col:40> 'int' contains-errors     |   |   | |-ImplicitCastExpr 0x150008870 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x150008810 <col:4> 'int ()' Function 0x14702b758 'f2fs_register_inmem_page' 'int ()'     |   |   | |-ImplicitCastExpr 0x1500088b8 <col:29> 'struct inode *' contains-errors <LValueToRValue>     |   |   | | `-DeclRefExpr 0x150008830 <col:29> 'struct inode *' contains-errors lvalue Var 0x14702ac18 'inode' 'struct inode *'     |   |   | `-ImplicitCastExpr 0x1500088d0 <col:36> 'struct page *' <LValueToRValue>     |   |   |   `-DeclRefExpr 0x150008850 <col:36> 'struct page *' lvalue ParmVar 0x14700e248 'page' 'struct page *'     |   |   `-ReturnStmt 0x150008908 <line:14:4, col:11>     |   |     `-IntegerLiteral 0x1500088e8 <col:11> 'int' 1     |   `-ReturnStmt 0x150008978 <line:17:3, col:10>     |     `-IntegerLiteral 0x150008958 <col:10> 'int' 0     |-IfStmt 0x150008ee0 <line:20:2, line:24:2>     | |-UnaryOperator 0x150008b40 <line:20:6, col:21> 'int' prefix '!' cannot overflow     | | `-CallExpr 0x150008b00 <col:7, col:21> 'int'     | |   |-ImplicitCastExpr 0x150008ae8 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x150008aa8 <col:7> 'int ()' Function 0x1500089f0 'PageDirty' 'int ()'     | |   `-ImplicitCastExpr 0x150008b28 <col:17> 'struct page *' <LValueToRValue>     | |     `-DeclRefExpr 0x150008ac8 <col:17> 'struct page *' lvalue ParmVar 0x14700e248 'page' 'struct page *'     | `-CompoundStmt 0x150008eb8 <col:24, line:24:2>     |   |-CallExpr 0x150008c90 <line:21:3, col:34> 'int'     |   | |-ImplicitCastExpr 0x150008c78 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x150008c38 <col:3> 'int ()' Function 0x150008b80 '__set_page_dirty_nobuffers' 'int ()'     |   | `-ImplicitCastExpr 0x150008cb8 <col:30> 'struct page *' <LValueToRValue>     |   |   `-DeclRefExpr 0x150008c58 <col:30> 'struct page *' lvalue ParmVar 0x14700e248 'page' 'struct page *'     |   |-CallExpr 0x150008e28 <line:22:3, col:37> 'int' contains-errors     |   | |-ImplicitCastExpr 0x150008e10 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x150008db0 <col:3> 'int ()' Function 0x150008cf8 'f2fs_update_dirty_page' 'int ()'     |   | |-ImplicitCastExpr 0x150008e58 <col:26> 'struct inode *' contains-errors <LValueToRValue>     |   | | `-DeclRefExpr 0x150008dd0 <col:26> 'struct inode *' contains-errors lvalue Var 0x14702ac18 'inode' 'struct inode *'     |   | `-ImplicitCastExpr 0x150008e70 <col:33> 'struct page *' <LValueToRValue>     |   |   `-DeclRefExpr 0x150008df0 <col:33> 'struct page *' lvalue ParmVar 0x14700e248 'page' 'struct page *'     |   `-ReturnStmt 0x150008ea8 <line:23:3, col:10>     |     `-IntegerLiteral 0x150008e88 <col:10> 'int' 1     `-ReturnStmt 0x150008f20 <line:25:2, col:9>       `-IntegerLiteral 0x150008f00 <col:9> 'int' 0 ","19775":"`-FunctionDecl 0x131128758  line:1:1 xfs_perag_set_reclaim_tag 'int (struct xfs_perag *)'   |-ParmVarDecl 0x131128648 <line:2:2, col:20> col:20 used pag 'struct xfs_perag *'   `-CompoundStmt 0x131141928 <line:3:1, line:20:1>     |-DeclStmt 0x131140c98 <line:4:2, col:39>     | |-RecordDecl 0x131140a50 <col:2, col:9> col:9 struct xfs_mount     | `-VarDecl 0x131140bb8 <col:2, col:30> col:20 used mp 'struct xfs_mount *' cinit     |   `-RecoveryExpr 0x131140c58 <col:25, col:30> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x131140c20 <col:25> 'struct xfs_perag *' lvalue ParmVar 0x131128648 'pag' 'struct xfs_perag *'     |-CallExpr 0x131140e78 <line:6:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x131140de0 <col:2> 'int ()' Function 0x131140d28 'lockdep_assert_held' 'int ()'     | `-UnaryOperator 0x131140e60 <col:22, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x131140e38 <col:23, col:28> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x131140e00 <col:23> 'struct xfs_perag *' lvalue ParmVar 0x131128648 'pag' 'struct xfs_perag *'     |-IfStmt 0x131140f28 <line:7:2, line:8:3>     | |-UnaryOperator 0x131140f00 <line:7:6, col:30> '<dependent type>' contains-errors postfix '++' cannot overflow     | | `-RecoveryExpr 0x131140ed8 <col:6, col:11> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x131140ea0 <col:6> 'struct xfs_perag *' lvalue ParmVar 0x131128648 'pag' 'struct xfs_perag *'     | `-ReturnStmt 0x131140f18 <line:8:3>     |-CallExpr 0x1311410c0 <line:11:2, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x131141028 <col:2> 'int ()' Function 0x131140f70 'spin_lock' 'int ()'     | `-UnaryOperator 0x1311410a8 <col:12, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x131141080 <col:13, col:17> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x131141048 <col:13> 'struct xfs_mount *' contains-errors lvalue Var 0x131140bb8 'mp' 'struct xfs_mount *'     |-CallExpr 0x131141330 <line:12:2, line:13:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1311411c8 <line:12:2> 'int ()' Function 0x131141110 'radix_tree_tag_set' 'int ()'     | |-UnaryOperator 0x131141248 <col:21, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x131141220 <col:22, col:26> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1311411e8 <col:22> 'struct xfs_mount *' contains-errors lvalue Var 0x131140bb8 'mp' 'struct xfs_mount *'     | |-RecoveryExpr 0x131141298 <col:40, col:45> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x131141260 <col:40> 'struct xfs_perag *' lvalue ParmVar 0x131128648 'pag' 'struct xfs_perag *'     | `-RecoveryExpr 0x131141310 <line:13:7> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1311414e0 <line:14:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x131141448 <col:2> 'int ()' Function 0x131141390 'spin_unlock' 'int ()'     | `-UnaryOperator 0x1311414c8 <col:14, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1311414a0 <col:15, col:19> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x131141468 <col:15> 'struct xfs_mount *' contains-errors lvalue Var 0x131140bb8 'mp' 'struct xfs_mount *'     |-CallExpr 0x131141678 <line:17:2, col:27> 'int' contains-errors     | |-ImplicitCastExpr 0x131141660 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1311415e8 <col:2> 'int ()' Function 0x131141530 'xfs_reclaim_work_queue' 'int ()'     | `-ImplicitCastExpr 0x1311416a0 <col:25> 'struct xfs_mount *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x131141608 <col:25> 'struct xfs_mount *' contains-errors lvalue Var 0x131140bb8 'mp' 'struct xfs_mount *'     `-CallExpr 0x1311418e8 <line:19:2, col:61> '<dependent type>' contains-errors       |-DeclRefExpr 0x131141798 <col:2> 'int ()' Function 0x1311416e0 'trace_xfs_perag_set_reclaim' 'int ()'       |-DeclRefExpr 0x1311417b8 <col:30> 'struct xfs_mount *' contains-errors lvalue Var 0x131140bb8 'mp' 'struct xfs_mount *'       |-RecoveryExpr 0x131141810 <col:34, col:39> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x1311417d8 <col:34> 'struct xfs_perag *' lvalue ParmVar 0x131128648 'pag' 'struct xfs_perag *'       |-UnaryOperator 0x131141858 <col:49, col:50> 'int' prefix '-'       | `-IntegerLiteral 0x131141838 <col:50> 'int' 1       `-RecoveryExpr 0x1311418c8 <col:53> '<dependent type>' contains-errors lvalue ","19691":"`-FunctionDecl 0x12a128758  line:1:12 su3000_frontend_attach 'int (struct dvb_usb_adapter *)' static   |-ParmVarDecl 0x12a128648 <col:35, col:59> col:59 used d 'struct dvb_usb_adapter *'   `-CompoundStmt 0x12a80a1f8 <line:2:1, line:50:1>     |-IfStmt 0x12a140fb8 <line:6:2, line:7:12>     | |-BinaryOperator 0x12a140db0 <line:6:6, col:56> 'int' contains-errors '<'     | | |-CallExpr 0x12a140d60 <col:6, col:52> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x12a140b80 <col:6> 'int ()' Function 0x12a140ac8 'dvb_usb_generic_rw' 'int ()'     | | | |-RecoveryExpr 0x12a140bd8 <col:25, col:28> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x12a140ba0 <col:25> 'struct dvb_usb_adapter *' lvalue ParmVar 0x12a128648 'd' 'struct dvb_usb_adapter *'     | | | |-RecoveryExpr 0x12a140d20 <col:33> '<dependent type>' contains-errors lvalue     | | | |-IntegerLiteral 0x12a140c18 <col:39> 'int' 3     | | | |-RecoveryExpr 0x12a140d40 <col:42> '<dependent type>' contains-errors lvalue     | | | |-IntegerLiteral 0x12a140c50 <col:48> 'int' 1     | | | `-IntegerLiteral 0x12a140c70 <col:51> 'int' 0     | | `-IntegerLiteral 0x12a140ce0 <col:56> 'int' 0     | `-CallExpr 0x12a140f78 <line:7:3, col:12> 'int'     |   |-ImplicitCastExpr 0x12a140f60 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12a140eb0 <col:3> 'int ()' Function 0x12a140df8 'err' 'int ()'     |   `-ImplicitCastExpr 0x12a140fa0 <col:7> 'char *' <ArrayToPointerDecay>     |     `-StringLiteral 0x12a140f10 <col:7> 'char[4]' lvalue \"STR\"     |-IfStmt 0x12a141380 <line:13:2, line:14:12>     | |-BinaryOperator 0x12a1412c8 <line:13:6, col:56> 'int' contains-errors '<'     | | |-CallExpr 0x12a141278 <col:6, col:52> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x12a141098 <col:6> 'int ()' Function 0x12a140ac8 'dvb_usb_generic_rw' 'int ()'     | | | |-RecoveryExpr 0x12a1410f0 <col:25, col:28> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x12a1410b8 <col:25> 'struct dvb_usb_adapter *' lvalue ParmVar 0x12a128648 'd' 'struct dvb_usb_adapter *'     | | | |-RecoveryExpr 0x12a141238 <col:33> '<dependent type>' contains-errors lvalue     | | | |-IntegerLiteral 0x12a141130 <col:39> 'int' 3     | | | |-RecoveryExpr 0x12a141258 <col:42> '<dependent type>' contains-errors lvalue     | | | |-IntegerLiteral 0x12a141168 <col:48> 'int' 1     | | | `-IntegerLiteral 0x12a141188 <col:51> 'int' 0     | | `-IntegerLiteral 0x12a1411f8 <col:56> 'int' 0     | `-CallExpr 0x12a141340 <line:14:3, col:12> 'int'     |   |-ImplicitCastExpr 0x12a141328 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12a1412e8 <col:3> 'int ()' Function 0x12a140df8 'err' 'int ()'     |   `-ImplicitCastExpr 0x12a141368 <col:7> 'char *' <ArrayToPointerDecay>     |     `-StringLiteral 0x12a141308 <col:7> 'char[4]' lvalue \"STR\"     |-CallExpr 0x12a1414d8 <line:15:2, col:12> 'int'     | |-ImplicitCastExpr 0x12a1414c0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12a141480 <col:2> 'int ()' Function 0x12a1413c8 'msleep' 'int ()'     | `-IntegerLiteral 0x12a1414a0 <col:9> 'int' 300     |-IfStmt 0x12a1418a8 <line:21:2, line:22:12>     | |-BinaryOperator 0x12a1417f0 <line:21:6, col:56> 'int' contains-errors '<'     | | |-CallExpr 0x12a1417a0 <col:6, col:52> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x12a1415c0 <col:6> 'int ()' Function 0x12a140ac8 'dvb_usb_generic_rw' 'int ()'     | | | |-RecoveryExpr 0x12a141618 <col:25, col:28> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x12a1415e0 <col:25> 'struct dvb_usb_adapter *' lvalue ParmVar 0x12a128648 'd' 'struct dvb_usb_adapter *'     | | | |-RecoveryExpr 0x12a141760 <col:33> '<dependent type>' contains-errors lvalue     | | | |-IntegerLiteral 0x12a141658 <col:39> 'int' 3     | | | |-RecoveryExpr 0x12a141780 <col:42> '<dependent type>' contains-errors lvalue     | | | |-IntegerLiteral 0x12a141690 <col:48> 'int' 1     | | | `-IntegerLiteral 0x12a1416b0 <col:51> 'int' 0     | | `-IntegerLiteral 0x12a141720 <col:56> 'int' 0     | `-CallExpr 0x12a141868 <line:22:3, col:12> 'int'     |   |-ImplicitCastExpr 0x12a141850 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12a141810 <col:3> 'int ()' Function 0x12a140df8 'err' 'int ()'     |   `-ImplicitCastExpr 0x12a141890 <col:7> 'char *' <ArrayToPointerDecay>     |     `-StringLiteral 0x12a141830 <col:7> 'char[4]' lvalue \"STR\"     |-IfStmt 0x12a809760 <line:28:2, line:29:12>     | |-RecoveryExpr 0x12a8096a8 <line:28:6, col:56> '_Bool' contains-errors     | `-CallExpr 0x12a809720 <line:29:3, col:12> 'int'     |   |-ImplicitCastExpr 0x12a809708 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12a8096c8 <col:3> 'int ()' Function 0x12a140df8 'err' 'int ()'     |   `-ImplicitCastExpr 0x12a809748 <col:7> 'char *' <ArrayToPointerDecay>     |     `-StringLiteral 0x12a8096e8 <col:7> 'char[4]' lvalue \"STR\"     |-IfStmt 0x12a809978 <line:33:2, line:34:12>     | |-RecoveryExpr 0x12a8098c0 <line:33:6, col:56> '_Bool' contains-errors     | `-CallExpr 0x12a809938 <line:34:3, col:12> 'int'     |   |-ImplicitCastExpr 0x12a809920 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12a8098e0 <col:3> 'int ()' Function 0x12a140df8 'err' 'int ()'     |   `-ImplicitCastExpr 0x12a809960 <col:7> 'char *' <ArrayToPointerDecay>     |     `-StringLiteral 0x12a809900 <col:7> 'char[4]' lvalue \"STR\"     |-IfStmt 0x12a80a140 <line:41:2, line:46:2>     | |-RecoveryExpr 0x12a809f58 <line:41:6, line:43:22> '_Bool' contains-errors     | `-CompoundStmt 0x12a80a120 <col:25, line:46:2>     |   |-CallExpr 0x12a80a0b0 <line:44:3, col:13> 'int'     |   | |-ImplicitCastExpr 0x12a80a098 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x12a80a058 <col:3> 'int ()' Function 0x12a809fa0 'info' 'int ()'     |   | `-ImplicitCastExpr 0x12a80a0d8 <col:8> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x12a80a078 <col:8> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x12a80a110 <line:45:3, col:10>     |     `-IntegerLiteral 0x12a80a0f0 <col:10> 'int' 0     `-CallExpr 0x12a80a1b8 <line:48:2, col:12> 'int'       |-ImplicitCastExpr 0x12a80a1a0 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x12a80a160 <col:2> 'int ()' Function 0x12a809fa0 'info' 'int ()'       `-ImplicitCastExpr 0x12a80a1e0 <col:7> 'char *' <ArrayToPointerDecay>         `-StringLiteral 0x12a80a180 <col:7> 'char[4]' lvalue \"STR\" ","19451":"`-FunctionDecl 0x14d808c18  col:6 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern   |-ParmVarDecl 0x14d808d18 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x14d808d80 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x14d808de8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14d808cc0 <<invalid sloc>> Implicit 888 ","19744":"`-FunctionDecl 0x141826a48  line:1:32 inet_frag_intern 'struct inet_frag_queue *(struct netns_frags *, struct inet_frag_queue *, struct inet_frags *, void *)' static   |-ParmVarDecl 0x14180e2e8 <col:49, col:69> col:69 used nf 'struct netns_frags *'   |-ParmVarDecl 0x141826628 <line:2:3, col:27> col:27 used qp_in 'struct inet_frag_queue *'   |-ParmVarDecl 0x1418267f8 <col:34, col:53> col:53 used f 'struct inet_frags *'   |-ParmVarDecl 0x141826878 <line:3:3, col:9> col:9 arg 'void *'   `-CompoundStmt 0x141829ce8 <line:4:1, line:36:1>     |-DeclStmt 0x141826be8 <line:5:2, col:28>     | `-VarDecl 0x141826b80 <col:2, col:26> col:26 used qp 'struct inet_frag_queue *'     |-DeclStmt 0x141826c80 <line:9:2, col:19>     | `-VarDecl 0x141826c18 <col:2, col:15> col:15 used hash 'unsigned int'     |-CallExpr 0x141826e58 <line:11:2, col:21> '<dependent type>' contains-errors     | |-DeclRefExpr 0x141826dc0 <col:2> 'int ()' Function 0x141826d08 'write_lock' 'int ()'     | `-UnaryOperator 0x141826e40 <col:13, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x141826e18 <col:14, col:17> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x141826de0 <col:14> 'struct inet_frags *' lvalue ParmVar 0x1418267f8 'f' 'struct inet_frags *'     |-BinaryOperator 0x141826f48 <line:13:2, col:24> 'unsigned int' contains-errors '='     | |-DeclRefExpr 0x141826e80 <col:2> 'unsigned int' lvalue Var 0x141826c18 'hash' 'unsigned int'     | `-CallExpr 0x141826f20 <col:9, col:24> '<dependent type>' contains-errors     |   |-RecoveryExpr 0x141826ed8 <col:9, col:12> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x141826ea0 <col:9> 'struct inet_frags *' lvalue ParmVar 0x1418267f8 'f' 'struct inet_frags *'     |   `-DeclRefExpr 0x141826f00 <col:19> 'struct inet_frag_queue *' lvalue ParmVar 0x141826628 'qp_in' 'struct inet_frag_queue *'     |-BinaryOperator 0x141826fc0 <line:26:2, col:7> 'struct inet_frag_queue *' '='     | |-DeclRefExpr 0x141826f68 <col:2> 'struct inet_frag_queue *' lvalue Var 0x141826b80 'qp' 'struct inet_frag_queue *'     | `-ImplicitCastExpr 0x141826fa8 <col:7> 'struct inet_frag_queue *' <LValueToRValue>     |   `-DeclRefExpr 0x141826f88 <col:7> 'struct inet_frag_queue *' lvalue ParmVar 0x141826628 'qp_in' 'struct inet_frag_queue *'     |-IfStmt 0x141827460 <line:27:2, line:28:25>     | |-UnaryOperator 0x1418272a8 <line:27:6, col:50> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x141827278 <col:7, col:50> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x1418270c0 <col:7> 'int ()' Function 0x141827008 'mod_timer' 'int ()'     | |   |-UnaryOperator 0x141827140 <col:17, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   | `-RecoveryExpr 0x141827118 <col:18, col:22> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x1418270e0 <col:18> 'struct inet_frag_queue *' lvalue Var 0x141826b80 'qp' 'struct inet_frag_queue *'     | |   `-BinaryOperator 0x141827258 <col:29, col:43> '<dependent type>' contains-errors '+'     | |     |-RecoveryExpr 0x141827238 <col:29> '<dependent type>' contains-errors lvalue     | |     `-RecoveryExpr 0x1418271a8 <col:39, col:43> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x141827170 <col:39> 'struct netns_frags *' lvalue ParmVar 0x14180e2e8 'nf' 'struct netns_frags *'     | `-CallExpr 0x141827438 <line:28:3, col:25> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1418273a0 <col:3> 'int ()' Function 0x1418272e8 'atomic_inc' 'int ()'     |   `-UnaryOperator 0x141827420 <col:14, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x1418273f8 <col:15, col:19> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x1418273c0 <col:15> 'struct inet_frag_queue *' lvalue Var 0x141826b80 'qp' 'struct inet_frag_queue *'     |-CallExpr 0x141827518 <line:30:2, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x141827480 <col:2> 'int ()' Function 0x1418272e8 'atomic_inc' 'int ()'     | `-UnaryOperator 0x141827500 <col:13, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1418274d8 <col:14, col:18> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1418274a0 <col:14> 'struct inet_frag_queue *' lvalue Var 0x141826b80 'qp' 'struct inet_frag_queue *'     |-CallExpr 0x141829838 <line:31:2, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1418296b8 <col:2> 'int ()' Function 0x141829600 'hlist_add_head' 'int ()'     | |-UnaryOperator 0x141829738 <col:17, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x141829710 <col:18, col:22> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1418296d8 <col:18> 'struct inet_frag_queue *' lvalue Var 0x141826b80 'qp' 'struct inet_frag_queue *'     | `-UnaryOperator 0x141829820 <col:28, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-ArraySubscriptExpr 0x141829800 <col:29, col:41> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x1418297d0 <col:29, col:32> '<dependent type>' contains-errors <LValueToRValue>     |     | `-RecoveryExpr 0x141829788 <col:29, col:32> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x141829750 <col:29> 'struct inet_frags *' lvalue ParmVar 0x1418267f8 'f' 'struct inet_frags *'     |     `-ImplicitCastExpr 0x1418297e8 <col:37> 'unsigned int' <LValueToRValue>     |       `-DeclRefExpr 0x1418297b0 <col:37> 'unsigned int' lvalue Var 0x141826c18 'hash' 'unsigned int'     |-CallExpr 0x141829a58 <line:32:2, col:44> '<dependent type>' contains-errors     | |-DeclRefExpr 0x141829948 <col:2> 'int ()' Function 0x141829890 'list_add_tail' 'int ()'     | |-UnaryOperator 0x1418299c8 <col:16, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x1418299a0 <col:17, col:21> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x141829968 <col:17> 'struct inet_frag_queue *' lvalue Var 0x141826b80 'qp' 'struct inet_frag_queue *'     | `-UnaryOperator 0x141829a40 <col:31, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x141829a18 <col:32, col:36> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1418299e0 <col:32> 'struct netns_frags *' lvalue ParmVar 0x14180e2e8 'nf' 'struct netns_frags *'     |-UnaryOperator 0x141829ae8 <line:33:2, col:13> '<dependent type>' contains-errors postfix '++' cannot overflow     | `-RecoveryExpr 0x141829ac0 <col:2, col:6> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x141829a88 <col:2> 'struct netns_frags *' lvalue ParmVar 0x14180e2e8 'nf' 'struct netns_frags *'     |-CallExpr 0x141829c78 <line:34:2, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x141829be0 <col:2> 'int ()' Function 0x141829b28 'write_unlock' 'int ()'     | `-UnaryOperator 0x141829c60 <col:15, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x141829c38 <col:16, col:19> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x141829c00 <col:16> 'struct inet_frags *' lvalue ParmVar 0x1418267f8 'f' 'struct inet_frags *'     `-ReturnStmt 0x141829cd8 <line:35:2, col:9>       `-ImplicitCastExpr 0x141829cc0 <col:9> 'struct inet_frag_queue *' <LValueToRValue>         `-DeclRefExpr 0x141829ca0 <col:9> 'struct inet_frag_queue *' lvalue Var 0x141826b80 'qp' 'struct inet_frag_queue *' ","19819":"`-FunctionDecl 0x12e141100  col:6 implicit used strchr 'char *(const char *, int)' extern   |-ParmVarDecl 0x12e141200 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x12e141268 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x12e1411a8 <<invalid sloc>> Implicit 893 ","19145":"`-FunctionDecl 0x1311289a8  line:1:1 PHP_FUNCTION 'int (int)'   |-ParmVarDecl 0x1311288d8 <col:14> col:14 imageaffinematrixconcat 'int'   `-CompoundStmt 0x1311440d8 <line:2:1, line:66:1>     |-DeclStmt 0x131128bb0 <line:3:2, col:14>     | `-VarDecl 0x131128b48 <col:2, col:13> col:9 used m1 'double[6]'     |-DeclStmt 0x131128c98 <line:4:2, col:14>     | `-VarDecl 0x131128c30 <col:2, col:13> col:9 used m2 'double[6]'     |-DeclStmt 0x131128d80 <line:5:2, col:14>     | `-VarDecl 0x131128d18 <col:2, col:13> col:9 used mr 'double[6]'     |-DeclStmt 0x131128f40 <line:10:2, col:15>     | |-VarDecl 0x131128e40 <col:2, col:6> col:6 used i 'int'     | `-VarDecl 0x131128ec0 <col:2, col:9> col:9 used nelems 'int'     |-IfStmt 0x1311414a8 <line:12:2, line:14:2>     | |-RecoveryExpr 0x131141460 <line:12:6, col:79> '_Bool' contains-errors     | `-CompoundStmt 0x131141490 <col:89, line:14:2>     |   `-ReturnStmt 0x131141480 <line:13:3>     |-IfStmt 0x1311419e0 <line:16:2, line:19:2>     | |-RecoveryExpr 0x131141898 <line:16:6, col:123> '_Bool' contains-errors     | `-CompoundStmt 0x1311419d0 <col:126, line:19:2>     |-ForStmt 0x131143a50 <line:21:2, line:56:2>     | |-BinaryOperator 0x131141a40 <line:21:7, col:11> 'int' '='     | | |-DeclRefExpr 0x131141a00 <col:7> 'int' lvalue Var 0x131128e40 'i' 'int'     | | `-IntegerLiteral 0x131141a20 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x131141ab8 <col:14, col:18> 'int' '<'     | | |-ImplicitCastExpr 0x131141aa0 <col:14> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x131141a60 <col:14> 'int' lvalue Var 0x131128e40 'i' 'int'     | | `-IntegerLiteral 0x131141a80 <col:18> 'int' 6     | |-UnaryOperator 0x131141af8 <col:21, col:22> 'int' postfix '++'     | | `-DeclRefExpr 0x131141ad8 <col:21> 'int' lvalue Var 0x131128e40 'i' 'int'     | `-CompoundStmt 0x131143a30 <col:26, line:56:2>     |   |-IfStmt 0x1311435f0 <line:22:3, line:38:3>     |   | |-RecoveryExpr 0x131141c50 <line:22:7, col:68> '_Bool' contains-errors     |   | `-CompoundStmt 0x1311435d8 <col:77, line:38:3>     |   |   `-SwitchStmt 0x131141d90 <line:23:4, line:37:4>     |   |     |-RecoveryExpr 0x131141d70 <line:23:12, col:25> 'int' contains-errors     |   |     `-CompoundStmt 0x1311435a8 <col:28, line:37:4>     |   |       |-BreakStmt 0x131141f80 <line:26:6>     |   |       |-BreakStmt 0x131142118 <line:29:6>     |   |       |-BreakStmt 0x1311434d0 <line:33:6>     |   |       `-DefaultStmt 0x131143588 <line:34:5, col:12>     |   |         `-NullStmt 0x131143580 <col:12>     |   `-IfStmt 0x131143a10 <line:39:3, line:55:3>     |     |-RecoveryExpr 0x131143670 <line:39:7, col:68> '_Bool' contains-errors     |     `-CompoundStmt 0x1311439f8 <col:77, line:55:3>     |       `-SwitchStmt 0x1311436d0 <line:40:4, line:54:4>     |         |-RecoveryExpr 0x1311436b0 <line:40:12, col:25> 'int' contains-errors     |         `-CompoundStmt 0x1311439c8 <col:28, line:54:4>     |           |-BreakStmt 0x1311437a8 <line:43:6>     |           |-BreakStmt 0x131143860 <line:46:6>     |           |-BreakStmt 0x131143938 <line:50:6>     |           `-DefaultStmt 0x1311439a8 <line:51:5, col:12>     |             `-NullStmt 0x1311439a0 <col:12>     |-IfStmt 0x131143cb0 <line:58:2, line:60:2>     | |-RecoveryExpr 0x131143c80 <line:58:6, col:37> '_Bool' contains-errors     | `-CompoundStmt 0x131143ca0 <col:46, line:60:2>     `-ForStmt 0x1311440a0 <line:63:2, line:65:2>       |-BinaryOperator 0x131143e10 <line:63:7, col:11> 'int' '='       | |-DeclRefExpr 0x131143dd0 <col:7> 'int' lvalue Var 0x131128e40 'i' 'int'       | `-IntegerLiteral 0x131143df0 <col:11> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x131143e88 <col:14, col:18> 'int' '<'       | |-ImplicitCastExpr 0x131143e70 <col:14> 'int' <LValueToRValue>       | | `-DeclRefExpr 0x131143e30 <col:14> 'int' lvalue Var 0x131128e40 'i' 'int'       | `-IntegerLiteral 0x131143e50 <col:18> 'int' 6       |-UnaryOperator 0x131143ec8 <col:21, col:22> 'int' postfix '++'       | `-DeclRefExpr 0x131143ea8 <col:21> 'int' lvalue Var 0x131128e40 'i' 'int'       `-CompoundStmt 0x131144090 <col:26, line:65:2> ","19791":"`-FunctionDecl 0x13b945a00  line:1:20 referenced invalid hugetlb_register_node 'int (struct node *)' static inline   |-ParmVarDecl 0x13b928668 <col:42, col:55> col:55 used node 'struct node *'   `-CompoundStmt 0x13b946048 <line:2:1, line:9:1>     `-IfStmt 0x13b946010 <line:3:2, line:7:2>       |-BinaryOperator 0x13b945de0 <line:3:6, line:4:37> 'int' contains-errors '&&'       | |-RecoveryExpr 0x13b945d70 <line:3:6> '<dependent type>' contains-errors lvalue       | `-CallExpr 0x13b945db0 <line:4:4, col:37> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x13b945c20 <col:4> 'int ()' Function 0x13b945b68 'node_state' 'int ()'       |   |-CXXDependentScopeMemberExpr 0x13b945ca0 <col:15, col:25> '<dependent type>' contains-errors lvalue .id       |   | `-RecoveryExpr 0x13b945c78 <col:15, col:21> '<dependent type>' contains-errors lvalue       |   |   `-DeclRefExpr 0x13b945c40 <col:15> 'struct node *' lvalue ParmVar 0x13b928668 'node' 'struct node *'       |   `-RecoveryExpr 0x13b945d90 <col:29> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x13b945ff0 <col:40, line:7:2>         |-CallExpr 0x13b945f68 <line:5:3, col:31> 'int'         | |-ImplicitCastExpr 0x13b945f50 <col:3> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x13b945ee0 <col:3> 'int ()' Function 0x13b945e28 '__hugetlb_register_node' 'int ()'         | `-ImplicitCastExpr 0x13b945f90 <col:27> 'struct node *' <LValueToRValue>         |   `-DeclRefExpr 0x13b945f00 <col:27> 'struct node *' lvalue ParmVar 0x13b928668 'node' 'struct node *'         `-ReturnStmt 0x13b945fe0 <line:6:3, col:10>           `-RecoveryExpr 0x13b945fc0 <col:10> '<dependent type>' contains-errors lvalue ","19837":"`-FunctionDecl 0x14680e358  line:1:5 unregister_inet6addr_validator_notifier 'int (struct notifier_block *)'   |-ParmVarDecl 0x14680e248 <col:45, col:68> col:68 used nb 'struct notifier_block *'   `-CompoundStmt 0x146826898 <line:2:1, line:5:1>     `-ReturnStmt 0x146826888 <line:3:2, line:4:11>       `-CallExpr 0x146826858 <line:3:9, line:4:11> '<dependent type>' contains-errors         |-DeclRefExpr 0x146826780 <line:3:9> 'int ()' Function 0x1468266c8 'blocking_notifier_chain_unregister' 'int ()'         |-UnaryOperator 0x146826840 <col:44, col:45> '<dependent type>' contains-errors prefix '&' cannot overflow         | `-RecoveryExpr 0x146826820 <col:45> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x1468267d0 <line:4:9> 'struct notifier_block *' lvalue ParmVar 0x14680e248 'nb' 'struct notifier_block *' ","19180":"`-FunctionDecl 0x10280ddf0  line:1:6 invalid SSL_SESSION_free 'void (int *)'   |-ParmVarDecl 0x10280dd28 <col:23, col:36> col:36 referenced invalid ss 'int *'   `-CompoundStmt 0x103008f00 <line:2:2, line:47:2>     |-DeclStmt 0x10280df20 <line:3:2, col:7>     | `-VarDecl 0x10280deb8 <col:2, col:6> col:6 used i 'int'     |-IfStmt 0x10280dfe0 <line:5:2, line:6:6>     | |-BinaryOperator 0x10280dfb0 <line:5:5, col:11> 'int' contains-errors '=='     | | |-RecoveryExpr 0x10280df38 <col:5> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x10280df90 <col:11> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x10280dfd0 <line:6:6>     |-BinaryOperator 0x10280e320 <line:8:2, col:57> 'int' contains-errors '='     | |-DeclRefExpr 0x10280e000 <col:2> 'int' lvalue Var 0x10280deb8 'i' 'int'     | `-CallExpr 0x10280e2e8 <col:4, col:57> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x10280e180 <col:4> 'int ()' Function 0x10280e0c8 'CRYPTO_add' 'int ()'     |   |-UnaryOperator 0x10280e208 <col:15, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-CXXDependentScopeMemberExpr 0x10280e1c0 <col:16, col:20> '<dependent type>' contains-errors lvalue ->references     |   |   `-RecoveryExpr 0x10280e1a0 <col:16> '<dependent type>' contains-errors lvalue     |   |-UnaryOperator 0x10280e240 <col:31, col:32> 'int' prefix '-'     |   | `-IntegerLiteral 0x10280e220 <col:32> 'int' 1     |   `-RecoveryExpr 0x10280e2c8 <col:34> '<dependent type>' contains-errors lvalue     |-IfStmt 0x10280e3c8 <line:12:2, col:13>     | |-BinaryOperator 0x10280e398 <col:6, col:10> 'int' '>'     | | |-ImplicitCastExpr 0x10280e380 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x10280e340 <col:6> 'int' lvalue Var 0x10280deb8 'i' 'int'     | | `-IntegerLiteral 0x10280e360 <col:10> 'int' 0     | `-ReturnStmt 0x10280e3b8 <col:13>     |-CallExpr 0x102828410 <line:21:2, col:67> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1028282e0 <col:2> 'int ()' Function 0x102828228 'CRYPTO_free_ex_data' 'int ()'     | |-RecoveryExpr 0x1028283f0 <col:22> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x102828318 <col:51> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x1028283a0 <col:55, col:60> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x102828358 <col:56, col:60> '<dependent type>' contains-errors lvalue ->ex_data     |     `-RecoveryExpr 0x102828338 <col:56> '<dependent type>' contains-errors lvalue     |-CallExpr 0x102828638 <line:23:2, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x102828528 <col:2> 'int ()' Function 0x102828470 'OPENSSL_cleanse' 'int ()'     | |-CXXDependentScopeMemberExpr 0x102828568 <col:18, col:22> '<dependent type>' contains-errors lvalue ->key_arg     | | `-RecoveryExpr 0x102828548 <col:18> '<dependent type>' contains-errors lvalue     | `-UnaryExprOrTypeTraitExpr 0x102828618 <col:30, col:41> 'unsigned long' contains-errors sizeof     |   `-CXXDependentScopeMemberExpr 0x1028285d0 <col:37, col:41> '<dependent type>' contains-errors lvalue ->key_arg     |     `-RecoveryExpr 0x1028285b0 <col:37> '<dependent type>' contains-errors lvalue     |-CallExpr 0x102828778 <line:24:2, col:54> '<dependent type>' contains-errors     | |-DeclRefExpr 0x102828668 <col:2> 'int ()' Function 0x102828470 'OPENSSL_cleanse' 'int ()'     | |-CXXDependentScopeMemberExpr 0x1028286a8 <col:18, col:22> '<dependent type>' contains-errors lvalue ->master_key     | | `-RecoveryExpr 0x102828688 <col:18> '<dependent type>' contains-errors lvalue     | `-UnaryExprOrTypeTraitExpr 0x102828758 <col:33, col:44> 'unsigned long' contains-errors sizeof     |   `-CXXDependentScopeMemberExpr 0x102828710 <col:40, col:44> '<dependent type>' contains-errors lvalue ->master_key     |     `-RecoveryExpr 0x1028286f0 <col:40> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1028288b8 <line:25:2, col:54> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1028287a8 <col:2> 'int ()' Function 0x102828470 'OPENSSL_cleanse' 'int ()'     | |-CXXDependentScopeMemberExpr 0x1028287e8 <col:18, col:22> '<dependent type>' contains-errors lvalue ->session_id     | | `-RecoveryExpr 0x1028287c8 <col:18> '<dependent type>' contains-errors lvalue     | `-UnaryExprOrTypeTraitExpr 0x102828898 <col:33, col:44> 'unsigned long' contains-errors sizeof     |   `-CXXDependentScopeMemberExpr 0x102828850 <col:40, col:44> '<dependent type>' contains-errors lvalue ->session_id     |     `-RecoveryExpr 0x102828830 <col:40> '<dependent type>' contains-errors lvalue     |-IfStmt 0x102828b58 <line:26:2, col:61>     | |-BinaryOperator 0x1028289a8 <col:6, col:23> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x102828908 <col:6, col:10> '<dependent type>' contains-errors lvalue ->sess_cert     | | | `-RecoveryExpr 0x1028288e8 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x102828988 <col:23> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x102828b30 <col:29, col:61> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x102828aa8 <col:29> 'int ()' Function 0x1028289f0 'ssl_sess_cert_free' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x102828ae8 <col:48, col:52> '<dependent type>' contains-errors lvalue ->sess_cert     |     `-RecoveryExpr 0x102828ac8 <col:48> '<dependent type>' contains-errors lvalue     |-IfStmt 0x102828de8 <line:27:2, col:42>     | |-BinaryOperator 0x102828c38 <col:6, col:18> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x102828b98 <col:6, col:10> '<dependent type>' contains-errors lvalue ->peer     | | | `-RecoveryExpr 0x102828b78 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x102828c18 <col:18> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x102828dc0 <col:24, col:42> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x102828d38 <col:24> 'int ()' Function 0x102828c80 'X509_free' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x102828d78 <col:34, col:38> '<dependent type>' contains-errors lvalue ->peer     |     `-RecoveryExpr 0x102828d58 <col:34> '<dependent type>' contains-errors lvalue     |-IfStmt 0x102829078 <line:28:2, col:57>     | |-BinaryOperator 0x102828ec8 <col:6, col:21> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x102828e28 <col:6, col:10> '<dependent type>' contains-errors lvalue ->ciphers     | | | `-RecoveryExpr 0x102828e08 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x102828ea8 <col:21> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x102829050 <col:27, col:57> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x102828fc8 <col:27> 'int ()' Function 0x102828f10 'sk_SSL_CIPHER_free' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x102829008 <col:46, col:50> '<dependent type>' contains-errors lvalue ->ciphers     |     `-RecoveryExpr 0x102828fe8 <col:46> '<dependent type>' contains-errors lvalue     |-IfStmt 0x103008368 <line:30:2, col:67>     | |-BinaryOperator 0x102829158 <col:6, col:29> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x1028290b8 <col:6, col:10> '<dependent type>' contains-errors lvalue ->tlsext_hostname     | | | `-RecoveryExpr 0x102829098 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x102829138 <col:29> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x103008340 <col:35, col:67> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1030082b8 <col:35> 'int ()' Function 0x103008200 'OPENSSL_free' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x1030082f8 <col:48, col:52> '<dependent type>' contains-errors lvalue ->tlsext_hostname     |     `-RecoveryExpr 0x1030082d8 <col:48> '<dependent type>' contains-errors lvalue     |-IfStmt 0x103008518 <line:31:2, col:59>     | |-BinaryOperator 0x103008448 <col:6, col:25> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x1030083a8 <col:6, col:10> '<dependent type>' contains-errors lvalue ->tlsext_tick     | | | `-RecoveryExpr 0x103008388 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x103008428 <col:25> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x1030084f0 <col:31, col:59> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x103008468 <col:31> 'int ()' Function 0x103008200 'OPENSSL_free' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x1030084a8 <col:44, col:48> '<dependent type>' contains-errors lvalue ->tlsext_tick     |     `-RecoveryExpr 0x103008488 <col:44> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1030085e8 <line:33:2, col:40> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x103008580 <col:2, col:6> '<dependent type>' contains-errors lvalue ->tlsext_ecpointformatlist_length     | | `-RecoveryExpr 0x103008558 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x103008538 <col:2> 'int *' lvalue ParmVar 0x10280dd28 'ss' 'int *'     | `-IntegerLiteral 0x1030085c8 <col:40> 'int' 0     |-IfStmt 0x103008798 <line:34:2, col:85>     | |-BinaryOperator 0x1030086c8 <col:6, col:38> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x103008628 <col:6, col:10> '<dependent type>' contains-errors lvalue ->tlsext_ecpointformatlist     | | | `-RecoveryExpr 0x103008608 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1030086a8 <col:38> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x103008770 <col:44, col:85> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1030086e8 <col:44> 'int ()' Function 0x103008200 'OPENSSL_free' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x103008728 <col:57, col:61> '<dependent type>' contains-errors lvalue ->tlsext_ecpointformatlist     |     `-RecoveryExpr 0x103008708 <col:57> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x103008868 <line:35:2, col:40> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x103008800 <col:2, col:6> '<dependent type>' contains-errors lvalue ->tlsext_ellipticcurvelist_length     | | `-RecoveryExpr 0x1030087d8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1030087b8 <col:2> 'int *' lvalue ParmVar 0x10280dd28 'ss' 'int *'     | `-IntegerLiteral 0x103008848 <col:40> 'int' 0     |-IfStmt 0x103008a18 <line:36:2, col:85>     | |-BinaryOperator 0x103008948 <col:6, col:38> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x1030088a8 <col:6, col:10> '<dependent type>' contains-errors lvalue ->tlsext_ellipticcurvelist     | | | `-RecoveryExpr 0x103008888 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x103008928 <col:38> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x1030089f0 <col:44, col:85> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x103008968 <col:44> 'int ()' Function 0x103008200 'OPENSSL_free' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x1030089a8 <col:57, col:61> '<dependent type>' contains-errors lvalue ->tlsext_ellipticcurvelist     |     `-RecoveryExpr 0x103008988 <col:57> '<dependent type>' contains-errors lvalue     |-IfStmt 0x103008bc8 <line:40:2, line:41:37>     | |-BinaryOperator 0x103008af8 <line:40:6, col:31> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x103008a58 <col:6, col:10> '<dependent type>' contains-errors lvalue ->psk_identity_hint     | | | `-RecoveryExpr 0x103008a38 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x103008ad8 <col:31> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x103008ba0 <line:41:3, col:37> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x103008b18 <col:3> 'int ()' Function 0x103008200 'OPENSSL_free' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x103008b58 <col:16, col:20> '<dependent type>' contains-errors lvalue ->psk_identity_hint     |     `-RecoveryExpr 0x103008b38 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x103008d78 <line:42:2, line:43:32>     | |-BinaryOperator 0x103008ca8 <line:42:6, col:26> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x103008c08 <col:6, col:10> '<dependent type>' contains-errors lvalue ->psk_identity     | | | `-RecoveryExpr 0x103008be8 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x103008c88 <col:26> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x103008d50 <line:43:3, col:32> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x103008cc8 <col:3> 'int ()' Function 0x103008200 'OPENSSL_free' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x103008d08 <col:16, col:20> '<dependent type>' contains-errors lvalue ->psk_identity     |     `-RecoveryExpr 0x103008ce8 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x103008e68 <line:45:2, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x103008d98 <col:2> 'int ()' Function 0x102828470 'OPENSSL_cleanse' 'int ()'     | |-RecoveryExpr 0x103008db8 <col:18> '<dependent type>' contains-errors lvalue     | `-UnaryExprOrTypeTraitExpr 0x103008e48 <col:21, col:31> 'unsigned long' contains-errors sizeof     |   `-ParenExpr 0x103008e28 <col:27, col:31> '<dependent type>' contains-errors     |     `-UnaryOperator 0x103008e10 <col:28, col:29> '<dependent type>' contains-errors prefix '*' cannot overflow     |       `-ImplicitCastExpr 0x103008df8 <col:29> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x103008dd8 <col:29> '<dependent type>' contains-errors lvalue     `-CallExpr 0x103008ed8 <line:46:2, col:17> '<dependent type>' contains-errors       |-DeclRefExpr 0x103008e98 <col:2> 'int ()' Function 0x103008200 'OPENSSL_free' 'int ()'       `-RecoveryExpr 0x103008eb8 <col:15> '<dependent type>' contains-errors lvalue ","19391":"`-FunctionDecl 0x1391281f8  line:1:15 invalid symbols 'int *(int *)' static   |-ParmVarDecl 0x139128128 <col:23, col:33> col:33 invalid bf 'int *'   `-CompoundStmt 0x139142988 <col:37, line:38:1>     |-CallExpr 0x139128790 <line:3:2, col:59> '<dependent type>' contains-errors     | |-DeclRefExpr 0x139128538 <col:2> 'int ()' Function 0x139128480 'r_return_val_if_fail' 'int ()'     | |-BinaryOperator 0x139128750 <col:24, col:47> 'int' contains-errors '&&'     | | |-BinaryOperator 0x139128730 <col:24, col:35> 'int' contains-errors '&&'     | | | |-RecoveryExpr 0x139128710 <col:24> '<dependent type>' contains-errors lvalue     | | | `-CXXDependentScopeMemberExpr 0x139128590 <col:31, col:35> '<dependent type>' contains-errors lvalue ->o     | | |   `-RecoveryExpr 0x139128570 <col:31> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x139128660 <col:40, col:47> '<dependent type>' contains-errors lvalue ->bin_obj     | |   `-CXXDependentScopeMemberExpr 0x139128618 <col:40, col:44> '<dependent type>' contains-errors lvalue ->o     | |     `-RecoveryExpr 0x1391285f8 <col:40> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x139128770 <col:56> '<dependent type>' contains-errors lvalue     |-UnaryExprOrTypeTraitExpr 0x139141ee8 <line:5:2, col:9> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x139141ec8 <col:9> '<dependent type>' contains-errors lvalue     |-IfStmt 0x139142180 <line:7:2, line:9:2>     | |-UnaryOperator 0x139142108 <line:7:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1391420f0 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x1391420d0 <col:7> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x139142168 <col:13, line:9:2>     |   `-ReturnStmt 0x139142158 <line:8:3, col:10>     |     `-RecoveryExpr 0x139142138 <col:10> '<dependent type>' contains-errors lvalue     `-IfStmt 0x139142868 <line:23:2, line:35:2>       |-RecoveryExpr 0x1391426e8 <line:23:6, col:15> '_Bool' contains-errors       `-CompoundStmt 0x139142858 <col:24, line:35:2> ","19523":"`-FunctionDecl 0x14380ddc8  line:1:1 invalid mechanism_has_no_parameters 'int (int)'   |-ParmVarDecl 0x14380dcf0 <col:30, col:48> col:48 invalid mech 'int'   `-CompoundStmt 0x14380e0d0 <line:2:1, line:99:1>     |-SwitchStmt 0x14380deb0 <line:5:2, line:98:2>     | |-ImplicitCastExpr 0x14380de98 <line:5:10> '<dependent type>' contains-errors <LValueToRValue>     | | `-RecoveryExpr 0x14380de78 <col:10> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14380e0b0 <col:16, line:98:2>     |   `-DefaultStmt 0x14380e090 <line:96:2, col:9>     |     `-NullStmt 0x14380e088 <col:9>     `-NullStmt 0x14380e0c8 <line:98:3> ","19071":"`-FunctionDecl 0x15a128418  line:1:1 invalid p11_rpc_buffer_get_byte_array 'int (int *, int *, const unsigned char **, int *)'   |-ParmVarDecl 0x15a128128 <col:32, col:44> col:44 invalid buf 'int *'   |-ParmVarDecl 0x15a1281a8 <line:2:32, col:40> col:40 invalid offset 'int *'   |-ParmVarDecl 0x15a128290 <line:3:32, col:54> col:54 used data 'const unsigned char **'   |-ParmVarDecl 0x15a128310 <line:4:32, col:40> col:40 invalid length 'int *'   `-CompoundStmt 0x15a80af50 <line:5:1, line:34:1>     |-BinaryOperator 0x15a1285f8 <line:6:2, col:16> 'unsigned long' contains-errors '='     | |-UnaryExprOrTypeTraitExpr 0x15a1285a8 <col:2, col:9> 'unsigned long' contains-errors sizeof     | | `-RecoveryExpr 0x15a128588 <col:9> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x15a1285e0 <col:15, col:16> '<dependent type>' contains-errors prefix '*' cannot overflow     |   `-ImplicitCastExpr 0x15a1285c8 <col:16> '<dependent type>' contains-errors <LValueToRValue>     |     `-RecoveryExpr 0x15a128518 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15a80aa48 <line:10:2, line:20:2> has_else     | |-BinaryOperator 0x15a80a3b8 <line:10:6, col:13> 'int' contains-errors '=='     | | |-RecoveryExpr 0x15a80a398 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x15a80a358 <col:13> 'unsigned int' 4294967295     | |-CompoundStmt 0x15a80a7e8 <col:25, line:17:2>     | | |-BinaryOperator 0x15a80a4e0 <line:11:3, col:13> '<dependent type>' contains-errors '='     | | | |-UnaryOperator 0x15a80a4a8 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow     | | | | `-ImplicitCastExpr 0x15a80a490 <col:4> '<dependent type>' contains-errors <LValueToRValue>     | | | |   `-RecoveryExpr 0x15a80a3d8 <col:4> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x15a80a4c0 <col:13> '<dependent type>' contains-errors lvalue     | | |-IfStmt 0x15a80a660 <line:12:3, line:13:12>     | | | |-ImplicitCastExpr 0x15a80a520 <line:12:7> 'const unsigned char **' <LValueToRValue>     | | | | `-DeclRefExpr 0x15a80a500 <col:7> 'const unsigned char **' lvalue ParmVar 0x15a128290 'data' 'const unsigned char **'     | | | `-BinaryOperator 0x15a80a640 <line:13:4, col:12> 'const unsigned char *' contains-errors '='     | | |   |-UnaryOperator 0x15a80a608 <col:4, col:5> 'const unsigned char *' lvalue prefix '*' cannot overflow     | | |   | `-ImplicitCastExpr 0x15a80a5f0 <col:5> 'const unsigned char **' <LValueToRValue>     | | |   |   `-DeclRefExpr 0x15a80a538 <col:5> 'const unsigned char **' lvalue ParmVar 0x15a128290 'data' 'const unsigned char **'     | | |   `-RecoveryExpr 0x15a80a620 <col:12> '<dependent type>' contains-errors lvalue     | | |-IfStmt 0x15a80a780 <line:14:3, line:15:14>     | | | |-RecoveryExpr 0x15a80a680 <line:14:7> '<dependent type>' contains-errors lvalue     | | | `-BinaryOperator 0x15a80a760 <line:15:4, col:14> '<dependent type>' contains-errors '='     | | |   |-UnaryOperator 0x15a80a748 <col:4, col:5> '<dependent type>' contains-errors prefix '*' cannot overflow     | | |   | `-ImplicitCastExpr 0x15a80a730 <col:5> '<dependent type>' contains-errors <LValueToRValue>     | | |   |   `-RecoveryExpr 0x15a80a6a0 <col:5> '<dependent type>' contains-errors lvalue     | | |   `-IntegerLiteral 0x15a80a6f0 <col:14> 'int' 0     | | `-ReturnStmt 0x15a80a7d8 <line:16:3, col:10>     | |   `-RecoveryExpr 0x15a80a7b8 <col:10> '<dependent type>' contains-errors lvalue     | `-IfStmt 0x15a80aa28 <line:17:9, line:20:2>     |   |-BinaryOperator 0x15a80a890 <line:17:13, col:20> 'int' contains-errors '>='     |   | |-RecoveryExpr 0x15a80a870 <col:13> '<dependent type>' contains-errors lvalue     |   | `-IntegerLiteral 0x15a80a830 <col:20> 'int' 2147483647     |   `-CompoundStmt 0x15a80aa10 <col:32, line:20:2>     |     `-CallExpr 0x15a80a9d0 <line:18:3, col:23> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x15a80a990 <col:3> 'int ()' Function 0x15a80a8d8 'p11_buffer_fail' 'int ()'     |       `-RecoveryExpr 0x15a80a9b0 <col:20> '<dependent type>' contains-errors lvalue     `-IfStmt 0x15a80ac68 <line:22:2, line:25:2>       |-RecoveryExpr 0x15a80abc8 <line:22:6, col:45> '_Bool' contains-errors       `-CompoundStmt 0x15a80ac50 <col:50, line:25:2>         `-CallExpr 0x15a80ac28 <line:23:3, col:23> '<dependent type>' contains-errors           |-DeclRefExpr 0x15a80abe8 <col:3> 'int ()' Function 0x15a80a8d8 'p11_buffer_fail' 'int ()'           `-RecoveryExpr 0x15a80ac08 <col:20> '<dependent type>' contains-errors lvalue ","19597":"`-FunctionDecl 0x15100df10  line:1:13 invalid write_rle_data 'void (int *, int *, int *)' static   |-ParmVarDecl 0x15100dd28 <col:28, col:40> col:40 referenced invalid ctx 'int *'   |-ParmVarDecl 0x15100dda8 <col:45, col:55> col:55 invalid color 'int *'   |-ParmVarDecl 0x15100de28 <col:62, col:69> col:69 invalid rle_count 'int *'   `-CompoundStmt 0x1510277b0 <line:2:1, line:10:1>     `-ForStmt 0x151027778 <line:3:2, line:9:2>       |-<<<NULL>>>       |-<<<NULL>>>       |-UnaryOperator 0x15100e008 <line:3:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow       | `-ImplicitCastExpr 0x15100dff0 <col:10> '<dependent type>' contains-errors <LValueToRValue>       |   `-RecoveryExpr 0x15100dfd0 <col:10> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x15100e090 <col:21, col:33> '<dependent type>' contains-errors postfix '--' cannot overflow       | `-ParenExpr 0x15100e070 <col:21, col:32> '<dependent type>' contains-errors       |   `-UnaryOperator 0x15100e058 <col:22, col:23> '<dependent type>' contains-errors prefix '*' cannot overflow       |     `-ImplicitCastExpr 0x15100e040 <col:23> '<dependent type>' contains-errors <LValueToRValue>       |       `-RecoveryExpr 0x15100e020 <col:23> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x151027750 <col:37, line:9:2>         |-CompoundAssignOperator 0x151027490 <line:5:3, col:27> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'         | |-CXXDependentScopeMemberExpr 0x15100e398 <col:3, col:8> '<dependent type>' contains-errors lvalue ->pptr         | | `-RecoveryExpr 0x15100e370 <col:3> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x15100e350 <col:3> 'int *' lvalue ParmVar 0x15100dd28 'ctx' 'int *'         | `-CXXDependentScopeMemberExpr 0x151027448 <col:16, col:27> '<dependent type>' contains-errors lvalue ->n_channels         |   `-CXXDependentScopeMemberExpr 0x151027400 <col:16, col:21> '<dependent type>' contains-errors lvalue ->pbuf         |     `-RecoveryExpr 0x15100e3e0 <col:16> '<dependent type>' contains-errors lvalue         |-CompoundAssignOperator 0x151027600 <line:6:3, col:38> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'         | |-CXXDependentScopeMemberExpr 0x151027508 <col:3, col:8> '<dependent type>' contains-errors lvalue ->pbuf_bytes_done         | | `-RecoveryExpr 0x1510274e0 <col:3> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x1510274c0 <col:3> 'int *' lvalue ParmVar 0x15100dd28 'ctx' 'int *'         | `-CXXDependentScopeMemberExpr 0x1510275b8 <col:27, col:38> '<dependent type>' contains-errors lvalue ->n_channels         |   `-CXXDependentScopeMemberExpr 0x151027570 <col:27, col:32> '<dependent type>' contains-errors lvalue ->pbuf         |     `-RecoveryExpr 0x151027550 <col:27> '<dependent type>' contains-errors lvalue         `-IfStmt 0x151027730 <line:7:3, line:8:4>           |-BinaryOperator 0x151027700 <line:7:7, col:36> 'int' contains-errors '=='           | |-CXXDependentScopeMemberExpr 0x151027650 <col:7, col:12> '<dependent type>' contains-errors lvalue ->pbuf_bytes_done           | | `-RecoveryExpr 0x151027630 <col:7> '<dependent type>' contains-errors lvalue           | `-CXXDependentScopeMemberExpr 0x1510276b8 <col:31, col:36> '<dependent type>' contains-errors lvalue ->pbuf_bytes           |   `-RecoveryExpr 0x151027698 <col:31> '<dependent type>' contains-errors lvalue           `-ReturnStmt 0x151027720 <line:8:4> ","19891":"`-FunctionDecl 0x144110838  line:1:1 invalid dissect_kafka_txn_offset_commit_response 'int (int *, int *, int *, int, int)'   |-ParmVarDecl 0x144110528 <col:42, col:52> col:52 invalid tvb 'int *'   |-ParmVarDecl 0x1441105a8 <col:57, col:70> col:70 invalid pinfo 'int *'   |-ParmVarDecl 0x144110628 <col:77, col:89> col:89 invalid tree 'int *'   |-ParmVarDecl 0x1441106a8 <col:95, col:99> col:99 used offset 'int'   |-ParmVarDecl 0x144110728 <line:2:39, col:59> col:59 invalid api_version 'int'   `-CompoundStmt 0x146008d40 <line:3:1, line:22:1>     |-BinaryOperator 0x144110b90 <line:7:5, col:66> 'int' contains-errors '='     | |-DeclRefExpr 0x144110938 <col:5> 'int' lvalue ParmVar 0x1441106a8 'offset' 'int'     | `-CallExpr 0x144110b50 <col:14, col:66> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x144110ab0 <col:14> 'int ()' Function 0x1441109f8 'dissect_kafka_throttle_time' 'int ()'     |   |-RecoveryExpr 0x144110ad0 <col:42> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x144110af0 <col:47> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x144110b10 <col:54> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x144110b30 <col:60> 'int' lvalue ParmVar 0x1441106a8 'offset' 'int'     |-BinaryOperator 0x146008830 <line:13:5, line:14:87> 'int' contains-errors '='     | |-DeclRefExpr 0x146008478 <line:13:5> 'int' lvalue ParmVar 0x1441106a8 'offset' 'int'     | `-CallExpr 0x1460087d0 <col:14, line:14:87> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x146008578 <line:13:14> 'int ()' Function 0x1460084c0 'dissect_kafka_array' 'int ()'     |   |-RecoveryExpr 0x146008758 <col:34> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x1460085b0 <col:43> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x1460085d0 <col:48> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x1460085f0 <col:55> 'int' lvalue ParmVar 0x1441106a8 'offset' 'int'     |   |-BinaryOperator 0x146008650 <col:63, col:78> 'int' contains-errors '>='     |   | |-RecoveryExpr 0x146008610 <col:63> '<dependent type>' contains-errors lvalue     |   | `-IntegerLiteral 0x146008630 <col:78> 'int' 3     |   |-RecoveryExpr 0x146008670 <col:81> '<dependent type>' contains-errors lvalue     |   |-UnaryOperator 0x146008798 <line:14:34, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x146008778 <col:35> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x1460087b0 <col:83> '<dependent type>' contains-errors lvalue     |-CallExpr 0x146008a00 <line:15:5, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x146008930 <col:5> 'int ()' Function 0x146008878 'proto_item_set_end' 'int ()'     | |-RecoveryExpr 0x1460089e0 <col:24> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x146008968 <col:31> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x146008988 <col:36> 'int' lvalue ParmVar 0x1441106a8 'offset' 'int'     |-IfStmt 0x146008cd8 <line:17:5, line:19:5>     | |-BinaryOperator 0x146008a78 <line:17:9, col:24> 'int' contains-errors '>='     | | |-RecoveryExpr 0x146008a38 <col:9> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x146008a58 <col:24> 'int' 3     | `-CompoundStmt 0x146008cc0 <col:27, line:19:5>     |   `-BinaryOperator 0x146008ca0 <line:18:9, col:73> 'int' contains-errors '='     |     |-DeclRefExpr 0x146008a98 <col:9> 'int' lvalue ParmVar 0x1441106a8 'offset' 'int'     |     `-CallExpr 0x146008c58 <col:18, col:73> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x146008b98 <col:18> 'int ()' Function 0x146008ae0 'dissect_kafka_tagged_fields' 'int ()'     |       |-RecoveryExpr 0x146008bb8 <col:46> '<dependent type>' contains-errors lvalue     |       |-RecoveryExpr 0x146008bd8 <col:51> '<dependent type>' contains-errors lvalue     |       |-RecoveryExpr 0x146008bf8 <col:58> '<dependent type>' contains-errors lvalue     |       |-DeclRefExpr 0x146008c18 <col:64> 'int' lvalue ParmVar 0x1441106a8 'offset' 'int'     |       `-IntegerLiteral 0x146008c38 <col:72> 'int' 0     `-ReturnStmt 0x146008d30 <line:21:5, col:12>       `-ImplicitCastExpr 0x146008d18 <col:12> 'int' <LValueToRValue>         `-DeclRefExpr 0x146008cf8 <col:12> 'int' lvalue ParmVar 0x1441106a8 'offset' 'int' ","19697":"`-FunctionDecl 0x12d9281f8  line:1:1 invalid _Pickler_FlushToFile 'int (int *)'   |-ParmVarDecl 0x12d928128 <col:22, col:37> col:37 invalid self 'int *'   `-CompoundStmt 0x12d941c00 <line:2:1, line:15:1>     |-CallExpr 0x12d928588 <line:5:5, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d928460 <col:5> 'int ()' Function 0x12d9283a8 'assert' 'int ()'     | `-BinaryOperator 0x12d928568 <col:12, col:27> 'int' contains-errors '!='     |   |-CXXDependentScopeMemberExpr 0x12d9284a0 <col:12, col:18> '<dependent type>' contains-errors lvalue ->write     |   | `-RecoveryExpr 0x12d928480 <col:12> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x12d928548 <col:27> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12d941800 <line:9:5, line:10:17>     | |-BinaryOperator 0x12d928788 <line:9:9, col:19> 'int' contains-errors '=='     | | |-RecoveryExpr 0x12d928748 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12d928768 <col:19> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12d9287e0 <line:10:9, col:17>     |   `-UnaryOperator 0x12d9287c8 <col:16, col:17> 'int' prefix '-'     |     `-IntegerLiteral 0x12d9287a8 <col:17> 'int' 1     `-CallExpr 0x12d941b30 <line:13:5, col:22> '<dependent type>' contains-errors       |-DeclRefExpr 0x12d941ab0 <col:5> 'int ()' Function 0x12d9419f8 'Py_XDECREF' 'int ()'       `-RecoveryExpr 0x12d941b10 <col:16> '<dependent type>' contains-errors lvalue ","19694":"`-FunctionDecl 0x13b830880  col:8 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x13b830980 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x13b8309e8 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x13b830928 <<invalid sloc>> Implicit 887 ","20055":"`-FunctionDecl 0x13a919f18  line:1:5 invalid ff_get_buffer 'int (int *, int *, int)'   |-ParmVarDecl 0x13a919d28 <col:19, col:35> col:35 invalid avctx 'int *'   |-ParmVarDecl 0x13a919da8 <col:42, col:51> col:51 invalid frame 'int *'   |-ParmVarDecl 0x13a919e28 <col:58, col:62> col:62 used flags 'int'   `-CompoundStmt 0x13a933598 <line:2:1, line:7:1>     |-DeclStmt 0x13a91a268 <line:3:5, col:55>     | `-VarDecl 0x13a919ff0 <col:5, col:54> col:9 used ret 'int' cinit     |   `-CallExpr 0x13a91a230 <col:15, col:54> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x13a91a1b0 <col:15> 'int ()' Function 0x13a91a0f8 'get_buffer_internal' 'int ()'     |     |-RecoveryExpr 0x13a91a1d0 <col:35> '<dependent type>' contains-errors lvalue     |     |-RecoveryExpr 0x13a91a1f0 <col:42> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13a91a210 <col:49> 'int' lvalue ParmVar 0x13a919e28 'flags' 'int'     |-IfStmt 0x13a933530 <line:4:5, line:5:42>     | |-BinaryOperator 0x13a91a2d8 <line:4:9, col:15> 'int' contains-errors '<'     | | |-ImplicitCastExpr 0x13a91a2c0 <col:9> 'int' contains-errors <LValueToRValue>     | | | `-DeclRefExpr 0x13a91a280 <col:9> 'int' contains-errors lvalue Var 0x13a919ff0 'ret' 'int'     | | `-IntegerLiteral 0x13a91a2a0 <col:15> 'int' 0     | `-CallExpr 0x13a9334f8 <line:5:9, col:42> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13a91a3d8 <col:9> 'int ()' Function 0x13a91a320 'av_log' 'int ()'     |   |-RecoveryExpr 0x13a933400 <col:16> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x13a9334d8 <col:23> '<dependent type>' contains-errors lvalue     |   `-StringLiteral 0x13a933480 <col:37> 'char[4]' lvalue \"STR\"     `-ReturnStmt 0x13a933588 <line:6:5, col:12>       `-ImplicitCastExpr 0x13a933570 <col:12> 'int' contains-errors <LValueToRValue>         `-DeclRefExpr 0x13a933550 <col:12> 'int' contains-errors lvalue Var 0x13a919ff0 'ret' 'int' ","19877":"`-FunctionDecl 0x14a80a438  line:1:11 skipSpaces 'char *(char *, int)'   |-ParmVarDecl 0x14a80a2d8 <col:23, col:29> col:29 used ptr 'char *'   |-ParmVarDecl 0x14a80a358 <col:34, col:38> col:38 used mode 'int'   `-CompoundStmt 0x14b00ac00 <line:2:5, line:60:5>     |-DeclStmt 0x14a80a5d8 <line:3:9, col:22>     | `-VarDecl 0x14a80a550 <col:9, col:21> col:13 used level 'int' cinit     |   `-IntegerLiteral 0x14a80a5b8 <col:21> 'int' 0     |-ForStmt 0x14a823f78 <line:5:9, line:58:9>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-<<<NULL>>>     | `-CompoundStmt 0x14a823f48 <line:6:9, line:58:9>     |   |-DeclStmt 0x14a80a668 <line:7:13, col:19>     |   | `-VarDecl 0x14a80a600 <col:13, col:18> col:18 used c 'char'     |   |-UnaryOperator 0x14a80a6a0 <line:8:13, col:16> 'char *' postfix '--'     |   | `-DeclRefExpr 0x14a80a680 <col:13> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *'     |   |-IfStmt 0x14a823800 <line:10:13, line:48:13> has_else     |   | |-BinaryOperator 0x14a80a748 <line:10:17, col:25> 'int' contains-errors '=='     |   | | |-DeclRefExpr 0x14a80a6b8 <col:17> 'int' lvalue ParmVar 0x14a80a358 'mode' 'int'     |   | | `-RecoveryExpr 0x14a80a728 <col:25> '<dependent type>' contains-errors lvalue     |   | |-CompoundStmt 0x14b0097a8 <line:11:13, line:21:13>     |   | | |-DoStmt 0x14b0092c8 <line:12:17, line:13:93>     |   | | | |-BinaryOperator 0x14a80a7f0 <line:12:20, col:27> 'char' '='     |   | | | | |-DeclRefExpr 0x14a80a768 <col:20> 'char' lvalue Var 0x14a80a600 'c' 'char'     |   | | | | `-ImplicitCastExpr 0x14a80a7d8 <col:24, col:27> 'char' <LValueToRValue>     |   | | | |   `-UnaryOperator 0x14a80a7c0 <col:24, col:27> 'char' lvalue prefix '*' cannot overflow     |   | | | |     `-UnaryOperator 0x14a80a7a8 <col:25, col:27> 'char *' prefix '++'     |   | | | |       `-DeclRefExpr 0x14a80a788 <col:27> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *'     |   | | | `-BinaryOperator 0x14b0092a8 <line:13:24, col:91> 'int' '&&'     |   | | |   |-CallExpr 0x14a80a9a8 <col:24, col:43> 'int'     |   | | |   | |-ImplicitCastExpr 0x14a80a990 <col:24> 'int (*)()' <FunctionToPointerDecay>     |   | | |   | | `-DeclRefExpr 0x14a80a920 <col:24> 'int ()' Function 0x14a80a868 'cv_isprint_or_tab' 'int ()'     |   | | |   | `-ImplicitCastExpr 0x14a80a9e8 <col:42> 'int' <IntegralCast>     |   | | |   |   `-ImplicitCastExpr 0x14a80a9d0 <col:42> 'char' <LValueToRValue>     |   | | |   |     `-DeclRefExpr 0x14a80a940 <col:42> 'char' lvalue Var 0x14a80a600 'c' 'char'     |   | | |   `-ParenExpr 0x14b009288 <col:48, col:91> 'int'     |   | | |     `-BinaryOperator 0x14b009268 <col:49, col:88> 'int' '||'     |   | | |       |-BinaryOperator 0x14b009168 <col:49, col:71> 'int' '||'     |   | | |       | |-BinaryOperator 0x14b009068 <col:49, col:54> 'int' '!='     |   | | |       | | |-ImplicitCastExpr 0x14b009050 <col:49> 'int' <IntegralCast>     |   | | |       | | | `-ImplicitCastExpr 0x14b009038 <col:49> 'char' <LValueToRValue>     |   | | |       | | |   `-DeclRefExpr 0x14b009000 <col:49> 'char' lvalue Var 0x14a80a600 'c' 'char'     |   | | |       | | `-CharacterLiteral 0x14b009020 <col:54> 'int' 45     |   | | |       | `-BinaryOperator 0x14b009148 <col:61, col:71> 'int' '!='     |   | | |       |   |-ImplicitCastExpr 0x14b009130 <col:61, col:66> 'int' <IntegralCast>     |   | | |       |   | `-ImplicitCastExpr 0x14b009118 <col:61, col:66> 'char' <LValueToRValue>     |   | | |       |   |   `-ArraySubscriptExpr 0x14b0090e0 <col:61, col:66> 'char' lvalue     |   | | |       |   |     |-ImplicitCastExpr 0x14b0090c8 <col:61> 'char *' <LValueToRValue>     |   | | |       |   |     | `-DeclRefExpr 0x14b009088 <col:61> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *'     |   | | |       |   |     `-IntegerLiteral 0x14b0090a8 <col:65> 'int' 1     |   | | |       |   `-CharacterLiteral 0x14b009100 <col:71> 'int' 45     |   | | |       `-BinaryOperator 0x14b009248 <col:78, col:88> 'int' '!='     |   | | |         |-ImplicitCastExpr 0x14b009230 <col:78, col:83> 'int' <IntegralCast>     |   | | |         | `-ImplicitCastExpr 0x14b009218 <col:78, col:83> 'char' <LValueToRValue>     |   | | |         |   `-ArraySubscriptExpr 0x14b0091e0 <col:78, col:83> 'char' lvalue     |   | | |         |     |-ImplicitCastExpr 0x14b0091c8 <col:78> 'char *' <LValueToRValue>     |   | | |         |     | `-DeclRefExpr 0x14b009188 <col:78> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *'     |   | | |         |     `-IntegerLiteral 0x14b0091a8 <col:82> 'int' 2     |   | | |         `-CharacterLiteral 0x14b009200 <col:88> 'int' 62     |   | | `-IfStmt 0x14b009788 <line:15:17, line:20:17>     |   | |   |-BinaryOperator 0x14b009350 <line:15:21, col:26> 'int' '=='     |   | |   | |-ImplicitCastExpr 0x14b009338 <col:21> 'int' <IntegralCast>     |   | |   | | `-ImplicitCastExpr 0x14b009320 <col:21> 'char' <LValueToRValue>     |   | |   | |   `-DeclRefExpr 0x14b0092e8 <col:21> 'char' lvalue Var 0x14a80a600 'c' 'char'     |   | |   | `-CharacterLiteral 0x14b009308 <col:26> 'int' 45     |   | |   `-CompoundStmt 0x14b009760 <line:16:17, line:20:17>     |   | |     |-CallExpr 0x14b009668 <line:17:21, col:60> 'int'     |   | |     | |-ImplicitCastExpr 0x14b009650 <col:21> 'int (*)()' <FunctionToPointerDecay>     |   | |     | | `-DeclRefExpr 0x14b009450 <col:21> 'int ()' Function 0x14b009398 'assert' 'int ()'     |   | |     | `-BinaryOperator 0x14b009630 <col:29, col:56> 'int' '&&'     |   | |     |   |-BinaryOperator 0x14b009530 <col:29, col:39> 'int' '=='     |   | |     |   | |-ImplicitCastExpr 0x14b009518 <col:29, col:34> 'int' <IntegralCast>     |   | |     |   | | `-ImplicitCastExpr 0x14b009500 <col:29, col:34> 'char' <LValueToRValue>     |   | |     |   | |   `-ArraySubscriptExpr 0x14b0094c8 <col:29, col:34> 'char' lvalue     |   | |     |   | |     |-ImplicitCastExpr 0x14b0094b0 <col:29> 'char *' <LValueToRValue>     |   | |     |   | |     | `-DeclRefExpr 0x14b009470 <col:29> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *'     |   | |     |   | |     `-IntegerLiteral 0x14b009490 <col:33> 'int' 1     |   | |     |   | `-CharacterLiteral 0x14b0094e8 <col:39> 'int' 45     |   | |     |   `-BinaryOperator 0x14b009610 <col:46, col:56> 'int' '=='     |   | |     |     |-ImplicitCastExpr 0x14b0095f8 <col:46, col:51> 'int' <IntegralCast>     |   | |     |     | `-ImplicitCastExpr 0x14b0095e0 <col:46, col:51> 'char' <LValueToRValue>     |   | |     |     |   `-ArraySubscriptExpr 0x14b0095a8 <col:46, col:51> 'char' lvalue     |   | |     |     |     |-ImplicitCastExpr 0x14b009590 <col:46> 'char *' <LValueToRValue>     |   | |     |     |     | `-DeclRefExpr 0x14b009550 <col:46> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *'     |   | |     |     |     `-IntegerLiteral 0x14b009570 <col:50> 'int' 2     |   | |     |     `-CharacterLiteral 0x14b0095c8 <col:56> 'int' 62     |   | |     |-BinaryOperator 0x14b0096d0 <line:18:21, col:28> 'int' '='     |   | |     | |-DeclRefExpr 0x14b009690 <col:21> 'int' lvalue ParmVar 0x14a80a358 'mode' 'int'     |   | |     | `-IntegerLiteral 0x14b0096b0 <col:28> 'int' 0     |   | |     `-CompoundAssignOperator 0x14b009730 <line:19:21, col:28> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'     |   | |       |-DeclRefExpr 0x14b0096f0 <col:21> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *'     |   | |       `-IntegerLiteral 0x14b009710 <col:28> 'int' 3     |   | `-IfStmt 0x14a8237d0 <line:22:18, line:48:13> has_else     |   |   |-BinaryOperator 0x14b009840 <line:22:22, col:30> 'int' contains-errors '=='     |   |   | |-DeclRefExpr 0x14b0097c8 <col:22> 'int' lvalue ParmVar 0x14a80a358 'mode' 'int'     |   |   | `-RecoveryExpr 0x14b009820 <col:30> '<dependent type>' contains-errors lvalue     |   |   |-CompoundStmt 0x14b009c98 <line:23:13, line:33:13>     |   |   | `-DoStmt 0x14b009c78 <line:25:17, line:32:47>     |   |   |   |-CompoundStmt 0x14b009b98 <line:26:17, line:32:17>     |   |   |   | |-BinaryOperator 0x14b0098e8 <line:27:21, col:28> 'char' '='     |   |   |   | | |-DeclRefExpr 0x14b009860 <col:21> 'char' lvalue Var 0x14a80a600 'c' 'char'     |   |   |   | | `-ImplicitCastExpr 0x14b0098d0 <col:25, col:28> 'char' <LValueToRValue>     |   |   |   | |   `-UnaryOperator 0x14b0098b8 <col:25, col:28> 'char' lvalue prefix '*' cannot overflow     |   |   |   | |     `-UnaryOperator 0x14b0098a0 <col:26, col:28> 'char *' prefix '++'     |   |   |   | |       `-DeclRefExpr 0x14b009880 <col:28> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *'     |   |   |   | |-CompoundAssignOperator 0x14b0099b0 <line:28:21, col:35> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'     |   |   |   | | |-DeclRefExpr 0x14b009908 <col:21> 'int' lvalue Var 0x14a80a550 'level' 'int'     |   |   |   | | `-BinaryOperator 0x14b009990 <col:30, col:35> 'int' '=='     |   |   |   | |   |-ImplicitCastExpr 0x14b009978 <col:30> 'int' <IntegralCast>     |   |   |   | |   | `-ImplicitCastExpr 0x14b009960 <col:30> 'char' <LValueToRValue>     |   |   |   | |   |   `-DeclRefExpr 0x14b009928 <col:30> 'char' lvalue Var 0x14a80a600 'c' 'char'     |   |   |   | |   `-CharacterLiteral 0x14b009948 <col:35> 'int' 60     |   |   |   | |-CompoundAssignOperator 0x14b009a88 <line:29:21, col:35> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'     |   |   |   | | |-DeclRefExpr 0x14b0099e0 <col:21> 'int' lvalue Var 0x14a80a550 'level' 'int'     |   |   |   | | `-BinaryOperator 0x14b009a68 <col:30, col:35> 'int' '=='     |   |   |   | |   |-ImplicitCastExpr 0x14b009a50 <col:30> 'int' <IntegralCast>     |   |   |   | |   | `-ImplicitCastExpr 0x14b009a38 <col:30> 'char' <LValueToRValue>     |   |   |   | |   |   `-DeclRefExpr 0x14b009a00 <col:30> 'char' lvalue Var 0x14a80a600 'c' 'char'     |   |   |   | |   `-CharacterLiteral 0x14b009a20 <col:35> 'int' 62     |   |   |   | `-IfStmt 0x14b009b78 <line:30:21, line:31:32>     |   |   |   |   |-BinaryOperator 0x14b009b10 <line:30:25, col:33> 'int' '<'     |   |   |   |   | |-ImplicitCastExpr 0x14b009af8 <col:25> 'int' <LValueToRValue>     |   |   |   |   | | `-DeclRefExpr 0x14b009ab8 <col:25> 'int' lvalue Var 0x14a80a550 'level' 'int'     |   |   |   |   | `-IntegerLiteral 0x14b009ad8 <col:33> 'int' 0     |   |   |   |   `-ReturnStmt 0x14b009b68 <line:31:25, col:32>     |   |   |   |     `-ImplicitCastExpr 0x14b009b50 <col:32> 'char *' <LValueToRValue>     |   |   |   |       `-DeclRefExpr 0x14b009b30 <col:32> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *'     |   |   |   `-CallExpr 0x14b009c20 <line:32:26, col:45> 'int'     |   |   |     |-ImplicitCastExpr 0x14b009c08 <col:26> 'int (*)()' <FunctionToPointerDecay>     |   |   |     | `-DeclRefExpr 0x14b009bc8 <col:26> 'int ()' Function 0x14a80a868 'cv_isprint_or_tab' 'int ()'     |   |   |     `-ImplicitCastExpr 0x14b009c60 <col:44> 'int' <IntegralCast>     |   |   |       `-ImplicitCastExpr 0x14b009c48 <col:44> 'char' <LValueToRValue>     |   |   |         `-DeclRefExpr 0x14b009be8 <col:44> 'char' lvalue Var 0x14a80a600 'c' 'char'     |   |   `-CompoundStmt 0x14a8237b0 <line:35:13, line:48:13>     |   |     |-DoStmt 0x14b009e88 <line:36:17, line:37:46>     |   |     | |-BinaryOperator 0x14b009d38 <line:36:20, col:27> 'char' '='     |   |     | | |-DeclRefExpr 0x14b009cb0 <col:20> 'char' lvalue Var 0x14a80a600 'c' 'char'     |   |     | | `-ImplicitCastExpr 0x14b009d20 <col:24, col:27> 'char' <LValueToRValue>     |   |     | |   `-UnaryOperator 0x14b009d08 <col:24, col:27> 'char' lvalue prefix '*' cannot overflow     |   |     | |     `-UnaryOperator 0x14b009cf0 <col:25, col:27> 'char *' prefix '++'     |   |     | |       `-DeclRefExpr 0x14b009cd0 <col:27> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *'     |   |     | `-BinaryOperator 0x14b009e68 <line:37:24, col:41> 'int' '||'     |   |     |   |-BinaryOperator 0x14b009dc0 <col:24, col:29> 'int' '=='     |   |     |   | |-ImplicitCastExpr 0x14b009da8 <col:24> 'int' <IntegralCast>     |   |     |   | | `-ImplicitCastExpr 0x14b009d90 <col:24> 'char' <LValueToRValue>     |   |     |   | |   `-DeclRefExpr 0x14b009d58 <col:24> 'char' lvalue Var 0x14a80a600 'c' 'char'     |   |     |   | `-CharacterLiteral 0x14b009d78 <col:29> 'int' 32     |   |     |   `-BinaryOperator 0x14b009e48 <col:36, col:41> 'int' '=='     |   |     |     |-ImplicitCastExpr 0x14b009e30 <col:36> 'int' <IntegralCast>     |   |     |     | `-ImplicitCastExpr 0x14b009e18 <col:36> 'char' <LValueToRValue>     |   |     |     |   `-DeclRefExpr 0x14b009de0 <col:36> 'char' lvalue Var 0x14a80a600 'c' 'char'     |   |     |     `-CharacterLiteral 0x14b009e00 <col:41> 'int' 9     |   |     `-IfStmt 0x14a823780 <line:39:17, line:47:21> has_else     |   |       |-BinaryOperator 0x14a823220 <line:39:21, col:77> 'int' '&&'     |   |       | |-BinaryOperator 0x14a823120 <col:21, col:60> 'int' '&&'     |   |       | | |-BinaryOperator 0x14a823020 <col:21, col:43> 'int' '&&'     |   |       | | | |-BinaryOperator 0x14b009f10 <col:21, col:26> 'int' '=='     |   |       | | | | |-ImplicitCastExpr 0x14b009ef8 <col:21> 'int' <IntegralCast>     |   |       | | | | | `-ImplicitCastExpr 0x14b009ee0 <col:21> 'char' <LValueToRValue>     |   |       | | | | |   `-DeclRefExpr 0x14b009ea8 <col:21> 'char' lvalue Var 0x14a80a600 'c' 'char'     |   |       | | | | `-CharacterLiteral 0x14b009ec8 <col:26> 'int' 60     |   |       | | | `-BinaryOperator 0x14a823000 <col:33, col:43> 'int' '=='     |   |       | | |   |-ImplicitCastExpr 0x14b009fd8 <col:33, col:38> 'int' <IntegralCast>     |   |       | | |   | `-ImplicitCastExpr 0x14b009fc0 <col:33, col:38> 'char' <LValueToRValue>     |   |       | | |   |   `-ArraySubscriptExpr 0x14b009f88 <col:33, col:38> 'char' lvalue     |   |       | | |   |     |-ImplicitCastExpr 0x14b009f70 <col:33> 'char *' <LValueToRValue>     |   |       | | |   |     | `-DeclRefExpr 0x14b009f30 <col:33> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *'     |   |       | | |   |     `-IntegerLiteral 0x14b009f50 <col:37> 'int' 1     |   |       | | |   `-CharacterLiteral 0x14b009fa8 <col:43> 'int' 33     |   |       | | `-BinaryOperator 0x14a823100 <col:50, col:60> 'int' '=='     |   |       | |   |-ImplicitCastExpr 0x14a8230e8 <col:50, col:55> 'int' <IntegralCast>     |   |       | |   | `-ImplicitCastExpr 0x14a8230d0 <col:50, col:55> 'char' <LValueToRValue>     |   |       | |   |   `-ArraySubscriptExpr 0x14a823098 <col:50, col:55> 'char' lvalue     |   |       | |   |     |-ImplicitCastExpr 0x14a823080 <col:50> 'char *' <LValueToRValue>     |   |       | |   |     | `-DeclRefExpr 0x14a823040 <col:50> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *'     |   |       | |   |     `-IntegerLiteral 0x14a823060 <col:54> 'int' 2     |   |       | |   `-CharacterLiteral 0x14a8230b8 <col:60> 'int' 45     |   |       | `-BinaryOperator 0x14a823200 <col:67, col:77> 'int' '=='     |   |       |   |-ImplicitCastExpr 0x14a8231e8 <col:67, col:72> 'int' <IntegralCast>     |   |       |   | `-ImplicitCastExpr 0x14a8231d0 <col:67, col:72> 'char' <LValueToRValue>     |   |       |   |   `-ArraySubscriptExpr 0x14a823198 <col:67, col:72> 'char' lvalue     |   |       |   |     |-ImplicitCastExpr 0x14a823180 <col:67> 'char *' <LValueToRValue>     |   |       |   |     | `-DeclRefExpr 0x14a823140 <col:67> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *'     |   |       |   |     `-IntegerLiteral 0x14a823160 <col:71> 'int' 3     |   |       |   `-CharacterLiteral 0x14a8231b8 <col:77> 'int' 45     |   |       |-CompoundStmt 0x14a8235a0 <line:40:17, line:45:17>     |   |       | |-IfStmt 0x14a823478 <line:41:21, line:42:51>     |   |       | | |-BinaryOperator 0x14a823298 <line:41:25, col:33> 'int' '!='     |   |       | | | |-ImplicitCastExpr 0x14a823280 <col:25> 'int' <LValueToRValue>     |   |       | | | | `-DeclRefExpr 0x14a823240 <col:25> 'int' lvalue ParmVar 0x14a80a358 'mode' 'int'     |   |       | | | `-IntegerLiteral 0x14a823260 <col:33> 'int' 0     |   |       | | `-CallExpr 0x14a823438 <line:42:25, col:51> 'int'     |   |       | |   |-ImplicitCastExpr 0x14a823420 <col:25> 'int (*)()' <FunctionToPointerDecay>     |   |       | |   | `-DeclRefExpr 0x14a823398 <col:25> 'int ()' Function 0x14a8232e0 'CV_PARSE_ERROR_CPP' 'int ()'     |   |       | |   `-ImplicitCastExpr 0x14a823460 <col:45> 'char *' <ArrayToPointerDecay>     |   |       | |     `-StringLiteral 0x14a823400 <col:45> 'char[4]' lvalue \"STR\"     |   |       | |-BinaryOperator 0x14a823510 <line:43:21, col:28> 'int' contains-errors '='     |   |       | | |-DeclRefExpr 0x14a823498 <col:21> 'int' lvalue ParmVar 0x14a80a358 'mode' 'int'     |   |       | | `-RecoveryExpr 0x14a8234f0 <col:28> '<dependent type>' contains-errors lvalue     |   |       | `-CompoundAssignOperator 0x14a823570 <line:44:21, col:28> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'     |   |       |   |-DeclRefExpr 0x14a823530 <col:21> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *'     |   |       |   `-IntegerLiteral 0x14a823550 <col:28> 'int' 4     |   |       `-IfStmt 0x14a823760 <line:46:22, line:47:21>     |   |         |-CallExpr 0x14a823700 <line:46:26, col:38> 'int'     |   |         | |-ImplicitCastExpr 0x14a8236e8 <col:26> 'int (*)()' <FunctionToPointerDecay>     |   |         | | `-DeclRefExpr 0x14a8236a8 <col:26> 'int ()' Function 0x14a8235f0 'cv_isprint' 'int ()'     |   |         | `-ImplicitCastExpr 0x14a823740 <col:37> 'int' <IntegralCast>     |   |         |   `-ImplicitCastExpr 0x14a823728 <col:37> 'char' <LValueToRValue>     |   |         |     `-DeclRefExpr 0x14a8236c8 <col:37> 'char' lvalue Var 0x14a80a600 'c' 'char'     |   |         `-BreakStmt 0x14a823758 <line:47:21>     |   `-IfStmt 0x14a823f28 <line:50:13, line:57:13>     |     |-UnaryOperator 0x14a823910 <line:50:17, col:33> 'int' prefix '!' cannot overflow     |     | `-CallExpr 0x14a8238b8 <col:18, col:33> 'int'     |     |   |-ImplicitCastExpr 0x14a8238a0 <col:18> 'int (*)()' <FunctionToPointerDecay>     |     |   | `-DeclRefExpr 0x14a823830 <col:18> 'int ()' Function 0x14a8235f0 'cv_isprint' 'int ()'     |     |   `-ImplicitCastExpr 0x14a8238f8 <col:29, col:30> 'int' <IntegralCast>     |     |     `-ImplicitCastExpr 0x14a8238e0 <col:29, col:30> 'char' <LValueToRValue>     |     |       `-UnaryOperator 0x14a823888 <col:29, col:30> 'char' lvalue prefix '*' cannot overflow     |     |         `-ImplicitCastExpr 0x14a823870 <col:30> 'char *' <LValueToRValue>     |     |           `-DeclRefExpr 0x14a823850 <col:30> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *'     |     `-CompoundStmt 0x14a823f00 <line:51:13, line:57:13>     |       |-IfStmt 0x14a823c28 <line:52:17, line:53:47>     |       | |-BinaryOperator 0x14a823b70 <line:52:21, col:61> 'int' '&&'     |       | | |-BinaryOperator 0x14a823a98 <col:21, col:45> 'int' '&&'     |       | | | |-BinaryOperator 0x14a8239c0 <col:21, col:29> 'int' '!='     |       | | | | |-ImplicitCastExpr 0x14a8239a8 <col:21, col:22> 'int' <IntegralCast>     |       | | | | | `-ImplicitCastExpr 0x14a823990 <col:21, col:22> 'char' <LValueToRValue>     |       | | | | |   `-UnaryOperator 0x14a823960 <col:21, col:22> 'char' lvalue prefix '*' cannot overflow     |       | | | | |     `-ImplicitCastExpr 0x14a823948 <col:22> 'char *' <LValueToRValue>     |       | | | | |       `-DeclRefExpr 0x14a823928 <col:22> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *'     |       | | | | `-CharacterLiteral 0x14a823978 <col:29> 'int' 0     |       | | | `-BinaryOperator 0x14a823a78 <col:37, col:45> 'int' '!='     |       | | |   |-ImplicitCastExpr 0x14a823a60 <col:37, col:38> 'int' <IntegralCast>     |       | | |   | `-ImplicitCastExpr 0x14a823a48 <col:37, col:38> 'char' <LValueToRValue>     |       | | |   |   `-UnaryOperator 0x14a823a18 <col:37, col:38> 'char' lvalue prefix '*' cannot overflow     |       | | |   |     `-ImplicitCastExpr 0x14a823a00 <col:38> 'char *' <LValueToRValue>     |       | | |   |       `-DeclRefExpr 0x14a8239e0 <col:38> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *'     |       | | |   `-CharacterLiteral 0x14a823a30 <col:45> 'int' 10     |       | | `-BinaryOperator 0x14a823b50 <col:53, col:61> 'int' '!='     |       | |   |-ImplicitCastExpr 0x14a823b38 <col:53, col:54> 'int' <IntegralCast>     |       | |   | `-ImplicitCastExpr 0x14a823b20 <col:53, col:54> 'char' <LValueToRValue>     |       | |   |   `-UnaryOperator 0x14a823af0 <col:53, col:54> 'char' lvalue prefix '*' cannot overflow     |       | |   |     `-ImplicitCastExpr 0x14a823ad8 <col:54> 'char *' <LValueToRValue>     |       | |   |       `-DeclRefExpr 0x14a823ab8 <col:54> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *'     |       | |   `-CharacterLiteral 0x14a823b08 <col:61> 'int' 13     |       | `-CallExpr 0x14a823be8 <line:53:21, col:47> 'int'     |       |   |-ImplicitCastExpr 0x14a823bd0 <col:21> 'int (*)()' <FunctionToPointerDecay>     |       |   | `-DeclRefExpr 0x14a823b90 <col:21> 'int ()' Function 0x14a8232e0 'CV_PARSE_ERROR_CPP' 'int ()'     |       |   `-ImplicitCastExpr 0x14a823c10 <col:41> 'char *' <ArrayToPointerDecay>     |       |     `-StringLiteral 0x14a823bb0 <col:41> 'char[4]' lvalue \"STR\"     |       |-BinaryOperator 0x14a823d90 <line:54:17, col:32> 'char *' contains-errors '='     |       | |-DeclRefExpr 0x14a823c48 <col:17> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *'     |       | `-CallExpr 0x14a823d70 <col:23, col:32> '<dependent type>' contains-errors     |       |   `-CXXDependentScopeMemberExpr 0x14a823d28 <col:23, col:27> '<dependent type>' contains-errors lvalue ->gets     |       |     `-RecoveryExpr 0x14a823d08 <col:23> '<dependent type>' contains-errors lvalue     |       `-IfStmt 0x14a823ee0 <line:55:17, line:56:21>     |         |-BinaryOperator 0x14a823eb8 <line:55:21, col:37> 'int' '||'     |         | |-UnaryOperator 0x14a823de8 <col:21, col:22> 'int' prefix '!' cannot overflow     |         | | `-ImplicitCastExpr 0x14a823dd0 <col:22> 'char *' <LValueToRValue>     |         | |   `-DeclRefExpr 0x14a823db0 <col:22> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *'     |         | `-BinaryOperator 0x14a823e98 <col:29, col:37> 'int' '=='     |         |   |-ImplicitCastExpr 0x14a823e80 <col:29, col:30> 'int' <IntegralCast>     |         |   | `-ImplicitCastExpr 0x14a823e68 <col:29, col:30> 'char' <LValueToRValue>     |         |   |   `-UnaryOperator 0x14a823e38 <col:29, col:30> 'char' lvalue prefix '*' cannot overflow     |         |   |     `-ImplicitCastExpr 0x14a823e20 <col:30> 'char *' <LValueToRValue>     |         |   |       `-DeclRefExpr 0x14a823e00 <col:30> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *'     |         |   `-CharacterLiteral 0x14a823e50 <col:37> 'int' 0     |         `-BreakStmt 0x14a823ed8 <line:56:21>     `-ReturnStmt 0x14a823fe8 <line:59:9, col:16>       `-ImplicitCastExpr 0x14a823fd0 <col:16> 'char *' <LValueToRValue>         `-DeclRefExpr 0x14a823fb0 <col:16> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *' ","20156":"`-FunctionDecl 0x14f00e350  line:1:13 qd_unlock 'void (struct gfs2_quota_data *)' static   |-ParmVarDecl 0x14f00e248 <col:23, col:47> col:47 used qd 'struct gfs2_quota_data *'   `-CompoundStmt 0x14f027158 <line:2:1, line:9:1>     |-CallExpr 0x14f026a78 <line:3:2, line:4:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14f026770 <line:3:2> 'int ()' Function 0x14f0266b8 'gfs2_assert_warn' 'int ()'     | |-CXXDependentScopeMemberExpr 0x14f0267f0 <col:19, col:30> '<dependent type>' contains-errors lvalue ->gl_sbd     | | `-RecoveryExpr 0x14f0267c8 <col:19, col:23> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14f026790 <col:19> 'struct gfs2_quota_data *' lvalue ParmVar 0x14f00e248 'qd' 'struct gfs2_quota_data *'     | `-CallExpr 0x14f026a48 <line:4:5, col:39> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14f026918 <col:5> 'int ()' Function 0x14f026860 'test_bit' 'int ()'     |   |-RecoveryExpr 0x14f026a28 <col:14> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x14f0269b0 <col:26, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x14f026988 <col:27, col:31> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14f026950 <col:27> 'struct gfs2_quota_data *' lvalue ParmVar 0x14f00e248 'qd' 'struct gfs2_quota_data *'     |-CallExpr 0x14f026c88 <line:5:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14f026b88 <col:2> 'int ()' Function 0x14f026ad0 'clear_bit' 'int ()'     | |-RecoveryExpr 0x14f026c68 <col:12> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x14f026c20 <col:24, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14f026bf8 <col:25, col:29> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14f026bc0 <col:25> 'struct gfs2_quota_data *' lvalue ParmVar 0x14f00e248 'qd' 'struct gfs2_quota_data *'     |-CallExpr 0x14f026e28 <line:6:2, col:11> 'int'     | |-ImplicitCastExpr 0x14f026e10 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14f026d98 <col:2> 'int ()' Function 0x14f026ce0 'bh_put' 'int ()'     | `-ImplicitCastExpr 0x14f026e50 <col:9> 'struct gfs2_quota_data *' <LValueToRValue>     |   `-DeclRefExpr 0x14f026db8 <col:9> 'struct gfs2_quota_data *' lvalue ParmVar 0x14f00e248 'qd' 'struct gfs2_quota_data *'     |-CallExpr 0x14f026fa0 <line:7:2, col:13> 'int'     | |-ImplicitCastExpr 0x14f026f88 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14f026f48 <col:2> 'int ()' Function 0x14f026e90 'slot_put' 'int ()'     | `-ImplicitCastExpr 0x14f026fc8 <col:11> 'struct gfs2_quota_data *' <LValueToRValue>     |   `-DeclRefExpr 0x14f026f68 <col:11> 'struct gfs2_quota_data *' lvalue ParmVar 0x14f00e248 'qd' 'struct gfs2_quota_data *'     `-CallExpr 0x14f027118 <line:8:2, col:11> 'int'       |-ImplicitCastExpr 0x14f027100 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x14f0270c0 <col:2> 'int ()' Function 0x14f027008 'qd_put' 'int ()'       `-ImplicitCastExpr 0x14f027140 <col:9> 'struct gfs2_quota_data *' <LValueToRValue>         `-DeclRefExpr 0x14f0270e0 <col:9> 'struct gfs2_quota_data *' lvalue ParmVar 0x14f00e248 'qd' 'struct gfs2_quota_data *' ","19313":"`-FunctionDecl 0x151826f78  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x151827078 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x1518270e0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x151827148 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x151827020 <<invalid sloc>> Implicit 882 ","19369":"`-FunctionDecl 0x12600e350  line:1:6 __remove_from_page_cache 'void (struct page *)'   |-ParmVarDecl 0x12600e248 <col:31, col:44> col:44 used page 'struct page *'   `-CompoundStmt 0x127808fc8 <line:2:1, line:17:1>     |-DeclStmt 0x12602aa98 <line:3:2, col:47>     | |-RecordDecl 0x12602a848 <col:2, col:9> col:9 struct address_space     | `-VarDecl 0x12602a9b8 <col:2, col:40> col:24 used mapping 'struct address_space *' cinit     |   `-RecoveryExpr 0x12602aa58 <col:34, col:40> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12602aa20 <col:34> 'struct page *' lvalue ParmVar 0x12600e248 'page' 'struct page *'     |-CallExpr 0x12602ac68 <line:5:2, col:37> 'int'     | |-ImplicitCastExpr 0x12602ac50 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12602abe0 <col:2> 'int ()' Function 0x12602ab28 'mem_cgroup_uncharge_cache_page' 'int ()'     | `-ImplicitCastExpr 0x12602ac90 <col:33> 'struct page *' <LValueToRValue>     |   `-DeclRefExpr 0x12602ac00 <col:33> 'struct page *' lvalue ParmVar 0x12600e248 'page' 'struct page *'     |-CallExpr 0x12602ae80 <line:6:2, col:52> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12602ad88 <col:2> 'int ()' Function 0x12602acd0 'radix_tree_delete' 'int ()'     | |-UnaryOperator 0x12602ae08 <col:20, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x12602ade0 <col:21, col:30> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12602ada8 <col:21> 'struct address_space *' contains-errors lvalue Var 0x12602a9b8 'mapping' 'struct address_space *'     | `-RecoveryExpr 0x12602ae58 <col:41, col:47> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12602ae20 <col:41> 'struct page *' lvalue ParmVar 0x12600e248 'page' 'struct page *'     |-BinaryOperator 0x12602af68 <line:7:2, col:18> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12602aee8 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12602aeb0 <col:2> 'struct page *' lvalue ParmVar 0x12600e248 'page' 'struct page *'     | `-RecoveryExpr 0x12602af48 <col:18> '<dependent type>' contains-errors lvalue     |-UnaryOperator 0x12602afe8 <line:8:2, col:18> '<dependent type>' contains-errors postfix '--' cannot overflow     | `-RecoveryExpr 0x12602afc0 <col:2, col:11> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12602af88 <col:2> 'struct address_space *' contains-errors lvalue Var 0x12602a9b8 'mapping' 'struct address_space *'     |-CallExpr 0x12602b188 <line:9:2, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12602b0e0 <col:2> 'int ()' Function 0x12602b028 '__dec_zone_page_state' 'int ()'     | |-DeclRefExpr 0x12602b100 <col:24> 'struct page *' lvalue ParmVar 0x12600e248 'page' 'struct page *'     | `-RecoveryExpr 0x12602b168 <col:30> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12602b448 <line:10:2, col:26> 'int'     | |-ImplicitCastExpr 0x12602b430 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12602b298 <col:2> 'int ()' Function 0x12602b1e0 'BUG_ON' 'int ()'     | `-CallExpr 0x12602b3f0 <col:9, col:25> 'int'     |   |-ImplicitCastExpr 0x12602b3d8 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12602b398 <col:9> 'int ()' Function 0x12602b2e0 'page_mapped' 'int ()'     |   `-ImplicitCastExpr 0x12602b418 <col:21> 'struct page *' <LValueToRValue>     |     `-DeclRefExpr 0x12602b3b8 <col:21> 'struct page *' lvalue ParmVar 0x12600e248 'page' 'struct page *'     `-IfStmt 0x127808fa8 <line:13:2, line:16:2>       |-BinaryOperator 0x12602b760 <line:13:6, col:58> 'int' contains-errors '&&'       | |-CallExpr 0x12602b5a8 <col:6, col:20> 'int'       | | |-ImplicitCastExpr 0x12602b590 <col:6> 'int (*)()' <FunctionToPointerDecay>       | | | `-DeclRefExpr 0x12602b550 <col:6> 'int ()' Function 0x12602b498 'PageDirty' 'int ()'       | | `-ImplicitCastExpr 0x12602b5d0 <col:16> 'struct page *' <LValueToRValue>       | |   `-DeclRefExpr 0x12602b570 <col:16> 'struct page *' lvalue ParmVar 0x12600e248 'page' 'struct page *'       | `-CallExpr 0x12602b720 <col:25, col:58> 'int' contains-errors       |   |-ImplicitCastExpr 0x12602b708 <col:25> 'int (*)()' <FunctionToPointerDecay>       |   | `-DeclRefExpr 0x12602b6c8 <col:25> 'int ()' Function 0x12602b610 'mapping_cap_account_dirty' 'int ()'       |   `-ImplicitCastExpr 0x12602b748 <col:51> 'struct address_space *' contains-errors <LValueToRValue>       |     `-DeclRefExpr 0x12602b6e8 <col:51> 'struct address_space *' contains-errors lvalue Var 0x12602a9b8 'mapping' 'struct address_space *'       `-CompoundStmt 0x127808f88 <col:61, line:16:2>         |-CallExpr 0x127808d60 <line:14:3, col:42> '<dependent type>' contains-errors         | |-DeclRefExpr 0x127808cb8 <col:3> 'int ()' Function 0x127808c00 'dec_zone_page_state' 'int ()'         | |-DeclRefExpr 0x127808cd8 <col:23> 'struct page *' lvalue ParmVar 0x12600e248 'page' 'struct page *'         | `-RecoveryExpr 0x127808d40 <col:29> '<dependent type>' contains-errors lvalue         `-CallExpr 0x127808f58 <line:15:3, col:58> '<dependent type>' contains-errors           |-DeclRefExpr 0x127808e70 <col:3> 'int ()' Function 0x127808db8 'dec_bdi_stat' 'int ()'           |-RecoveryExpr 0x127808ec8 <col:16, col:25> '<dependent type>' contains-errors lvalue           | `-DeclRefExpr 0x127808e90 <col:16> 'struct address_space *' contains-errors lvalue Var 0x12602a9b8 'mapping' 'struct address_space *'           `-RecoveryExpr 0x127808f38 <col:43> '<dependent type>' contains-errors lvalue ","19883":"`-FunctionDecl 0x156940f70  col:35 implicit used strerror 'char *(int)' extern   |-ParmVarDecl 0x156941070 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x156941018 <<invalid sloc>> Implicit 901 ","19682":"`-FunctionDecl 0x129808408  line:1:1 i915_gem_execbuffer2_ioctl 'int (struct drm_device *, void *, struct drm_file *)'   |-ParmVarDecl 0x1290fc848 <col:28, col:47> col:47 used dev 'struct drm_device *'   |-ParmVarDecl 0x1290fc8c8 <col:52, col:58> col:58 used data 'void *'   |-ParmVarDecl 0x1298082c8 <line:2:7, col:24> col:24 used file 'struct drm_file *'   `-CompoundStmt 0x1291162b0 <line:3:1, line:70:1>     |-DeclStmt 0x129808748 <line:4:2, col:46>     | |-RecordDecl 0x129808510 <col:2, col:9> col:9 struct drm_i915_gem_execbuffer2     | `-VarDecl 0x129808678 <col:2, col:42> col:35 used args 'struct drm_i915_gem_execbuffer2 *' cinit     |   `-ImplicitCastExpr 0x129808718 <col:42> 'struct drm_i915_gem_execbuffer2 *' <BitCast>     |     `-ImplicitCastExpr 0x129808700 <col:42> 'void *' <LValueToRValue>     |       `-DeclRefExpr 0x1298086e0 <col:42> 'void *' lvalue ParmVar 0x1290fc8c8 'data' 'void *'     |-DeclStmt 0x129808948 <line:5:2, col:46>     | |-RecordDecl 0x129808760 <col:2, col:9> col:9 struct drm_i915_gem_exec_object2     | `-VarDecl 0x1298088c8 <col:2, col:36> col:36 used exec2_list 'struct drm_i915_gem_exec_object2 *'     |-DeclStmt 0x129808bf8 <line:6:2, col:36>     | |-RecordDecl 0x129808960 <col:2, col:9> col:9 struct drm_syncobj     | `-VarDecl 0x129808b28 <col:2, col:32> col:23 used fences 'struct drm_syncobj **' cinit     |   `-RecoveryExpr 0x129808bc0 <col:32> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x129808cf0 <line:7:2, col:41>     | `-VarDecl 0x129808c28 <col:2, col:15> col:15 invalid count 'const int'     |-DeclStmt 0x129808d88 <line:8:2, col:9>     | `-VarDecl 0x129808d20 <col:2, col:6> col:6 used err 'int'     |-IfStmt 0x1298091a8 <line:10:2, line:13:2>     | |-UnaryOperator 0x129808f18 <line:10:6, col:31> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x129808ef0 <col:7, col:31> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x129808eb0 <col:7> 'int ()' Function 0x129808df8 'check_buffer_count' 'int ()'     | |   `-RecoveryExpr 0x129808ed0 <col:26> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x129809188 <col:34, line:13:2>     |   |-CallExpr 0x1298090b0 <line:11:3, col:25> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x129809010 <col:3> 'int ()' Function 0x129808f58 'DRM_DEBUG' 'int ()'     |   | |-StringLiteral 0x129809070 <col:13> 'char[4]' lvalue \"STR\"     |   | `-RecoveryExpr 0x129809090 <col:20> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x129809178 <line:12:3, col:11>     |     `-UnaryOperator 0x129809160 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x129809148 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x129809128 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12980b848 <line:15:2, line:16:11>     | |-UnaryOperator 0x12980b788 <line:15:6, col:37> 'int' prefix '!' cannot overflow     | | `-CallExpr 0x12980b748 <col:7, col:37> 'int'     | |   |-ImplicitCastExpr 0x12980b730 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x12980b6b8 <col:7> 'int ()' Function 0x12980b600 'i915_gem_check_execbuffer' 'int ()'     | |   `-ImplicitCastExpr 0x12980b770 <col:33> 'struct drm_i915_gem_execbuffer2 *' <LValueToRValue>     | |     `-DeclRefExpr 0x12980b6d8 <col:33> 'struct drm_i915_gem_execbuffer2 *' lvalue Var 0x129808678 'args' 'struct drm_i915_gem_execbuffer2 *'     | `-ReturnStmt 0x12980b838 <line:16:3, col:11>     |   `-UnaryOperator 0x12980b820 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12980b808 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12980b7e8 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12980bcd0 <line:19:2, line:20:34> 'struct drm_i915_gem_exec_object2 *' contains-errors '='     | |-DeclRefExpr 0x12980b868 <line:19:2> 'struct drm_i915_gem_exec_object2 *' lvalue Var 0x1298088c8 'exec2_list' 'struct drm_i915_gem_exec_object2 *'     | `-CallExpr 0x12980bc98 <col:15, line:20:34> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12980b968 <line:19:15> 'int ()' Function 0x12980b8b0 'kvmalloc_array' 'int ()'     |   |-BinaryOperator 0x12980b9c8 <col:30, col:38> '<dependent type>' contains-errors '+'     |   | |-RecoveryExpr 0x12980b988 <col:30> '<dependent type>' contains-errors lvalue     |   | `-IntegerLiteral 0x12980b9a8 <col:38> 'int' 1     |   |-CallExpr 0x12980bc18 <col:41, col:57> 'int'     |   | `-ImplicitCastExpr 0x12980bc00 <col:41> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x12980bac8 <col:41> 'int ()' Function 0x12980ba10 'eb_element_size' 'int ()'     |   `-BinaryOperator 0x12980bc78 <line:20:9, col:24> '<dependent type>' contains-errors '|'     |     |-RecoveryExpr 0x12980bc38 <col:9> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x12980bc58 <col:24> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12980bee0 <line:21:2, line:25:2>     | |-BinaryOperator 0x12980bd68 <line:21:6, col:20> 'int' contains-errors '=='     | | |-DeclRefExpr 0x12980bcf0 <col:6> 'struct drm_i915_gem_exec_object2 *' lvalue Var 0x1298088c8 'exec2_list' 'struct drm_i915_gem_exec_object2 *'     | | `-RecoveryExpr 0x12980bd48 <col:20> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12980bec0 <col:26, line:25:2>     |   |-CallExpr 0x12980bde8 <line:22:3, line:23:11> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12980bd88 <line:22:3> 'int ()' Function 0x129808f58 'DRM_DEBUG' 'int ()'     |   | |-StringLiteral 0x12980bda8 <col:13> 'char[4]' lvalue \"STR\"     |   | `-RecoveryExpr 0x12980bdc8 <line:23:6> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x12980beb0 <line:24:3, col:11>     |     `-UnaryOperator 0x12980be98 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x12980be80 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x12980be60 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12980c480 <line:26:2, line:32:2>     | |-RecoveryExpr 0x12980c238 <line:26:6, line:28:34> '_Bool' contains-errors     | `-CompoundStmt 0x12980c460 <col:37, line:32:2>     |   |-CallExpr 0x12980c2b8 <line:29:3, col:25> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12980c258 <col:3> 'int ()' Function 0x129808f58 'DRM_DEBUG' 'int ()'     |   | |-StringLiteral 0x12980c278 <col:13> 'char[4]' lvalue \"STR\"     |   | `-RecoveryExpr 0x12980c298 <col:20> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x12980c420 <line:30:3, col:20> 'int'     |     |-ImplicitCastExpr 0x12980c408 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x12980c3c8 <col:3> 'int ()' Function 0x12980c310 'kvfree' 'int ()'     |     `-ImplicitCastExpr 0x12980c448 <col:10> 'struct drm_i915_gem_exec_object2 *' <LValueToRValue>     |       `-DeclRefExpr 0x12980c3e8 <col:10> 'struct drm_i915_gem_exec_object2 *' lvalue Var 0x1298088c8 'exec2_list' 'struct drm_i915_gem_exec_object2 *'     |-IfStmt 0x1291151c0 <line:34:2, line:40:2>     | |-RecoveryExpr 0x12980c500 <line:34:6, col:20> '_Bool' contains-errors     | `-CompoundStmt 0x1291151a0 <col:43, line:40:2>     |   |-BinaryOperator 0x129114da8 <line:35:3, col:38> 'struct drm_syncobj **' contains-errors '='     |   | |-DeclRefExpr 0x12980c520 <col:3> 'struct drm_syncobj **' contains-errors lvalue Var 0x129808b28 'fences' 'struct drm_syncobj **'     |   | `-ImplicitCastExpr 0x129114d90 <col:12, col:38> 'struct drm_syncobj **' <IntegralToPointer>     |   |   `-CallExpr 0x129114d30 <col:12, col:38> 'int'     |   |     |-ImplicitCastExpr 0x129114d18 <col:12> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x129114cb8 <col:12> 'int ()' Function 0x129114c00 'get_fence_array' 'int ()'     |   |     |-ImplicitCastExpr 0x129114d60 <col:28> 'struct drm_i915_gem_execbuffer2 *' <LValueToRValue>     |   |     | `-DeclRefExpr 0x129114cd8 <col:28> 'struct drm_i915_gem_execbuffer2 *' lvalue Var 0x129808678 'args' 'struct drm_i915_gem_execbuffer2 *'     |   |     `-ImplicitCastExpr 0x129114d78 <col:34> 'struct drm_file *' <LValueToRValue>     |   |       `-DeclRefExpr 0x129114cf8 <col:34> 'struct drm_file *' lvalue ParmVar 0x1298082c8 'file' 'struct drm_file *'     |   `-IfStmt 0x129115180 <line:36:3, line:39:3>     |     |-CallExpr 0x129114f00 <line:36:7, col:20> 'int' contains-errors     |     | |-ImplicitCastExpr 0x129114ee8 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     | | `-DeclRefExpr 0x129114ea8 <col:7> 'int ()' Function 0x129114df0 'IS_ERR' 'int ()'     |     | `-ImplicitCastExpr 0x129114f28 <col:14> 'struct drm_syncobj **' contains-errors <LValueToRValue>     |     |   `-DeclRefExpr 0x129114ec8 <col:14> 'struct drm_syncobj **' contains-errors lvalue Var 0x129808b28 'fences' 'struct drm_syncobj **'     |     `-CompoundStmt 0x129115160 <col:23, line:39:3>     |       |-CallExpr 0x129114f98 <line:37:4, col:21> 'int'     |       | |-ImplicitCastExpr 0x129114f80 <col:4> 'int (*)()' <FunctionToPointerDecay>     |       | | `-DeclRefExpr 0x129114f40 <col:4> 'int ()' Function 0x12980c310 'kvfree' 'int ()'     |       | `-ImplicitCastExpr 0x129114fc0 <col:11> 'struct drm_i915_gem_exec_object2 *' <LValueToRValue>     |       |   `-DeclRefExpr 0x129114f60 <col:11> 'struct drm_i915_gem_exec_object2 *' lvalue Var 0x1298088c8 'exec2_list' 'struct drm_i915_gem_exec_object2 *'     |       `-ReturnStmt 0x129115150 <line:38:4, col:25>     |         `-CallExpr 0x129115110 <col:11, col:25> 'int' contains-errors     |           |-ImplicitCastExpr 0x1291150f8 <col:11> 'int (*)()' <FunctionToPointerDecay>     |           | `-DeclRefExpr 0x1291150b8 <col:11> 'int ()' Function 0x129115000 'PTR_ERR' 'int ()'     |           `-ImplicitCastExpr 0x129115138 <col:19> 'struct drm_syncobj **' contains-errors <LValueToRValue>     |             `-DeclRefExpr 0x1291150d8 <col:19> 'struct drm_syncobj **' contains-errors lvalue Var 0x129808b28 'fences' 'struct drm_syncobj **'     |-BinaryOperator 0x129115478 <line:42:2, col:66> 'int' contains-errors '='     | |-DeclRefExpr 0x1291151e0 <col:2> 'int' lvalue Var 0x129808d20 'err' 'int'     | `-CallExpr 0x1291153b8 <col:8, col:66> 'int' contains-errors     |   |-ImplicitCastExpr 0x1291153a0 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1291152e0 <col:8> 'int ()' Function 0x129115228 'i915_gem_do_execbuffer' 'int ()'     |   |-ImplicitCastExpr 0x129115400 <col:31> 'struct drm_device *' <LValueToRValue>     |   | `-DeclRefExpr 0x129115300 <col:31> 'struct drm_device *' lvalue ParmVar 0x1290fc848 'dev' 'struct drm_device *'     |   |-ImplicitCastExpr 0x129115418 <col:36> 'struct drm_file *' <LValueToRValue>     |   | `-DeclRefExpr 0x129115320 <col:36> 'struct drm_file *' lvalue ParmVar 0x1298082c8 'file' 'struct drm_file *'     |   |-ImplicitCastExpr 0x129115430 <col:42> 'struct drm_i915_gem_execbuffer2 *' <LValueToRValue>     |   | `-DeclRefExpr 0x129115340 <col:42> 'struct drm_i915_gem_execbuffer2 *' lvalue Var 0x129808678 'args' 'struct drm_i915_gem_execbuffer2 *'     |   |-ImplicitCastExpr 0x129115448 <col:48> 'struct drm_i915_gem_exec_object2 *' <LValueToRValue>     |   | `-DeclRefExpr 0x129115360 <col:48> 'struct drm_i915_gem_exec_object2 *' lvalue Var 0x1298088c8 'exec2_list' 'struct drm_i915_gem_exec_object2 *'     |   `-ImplicitCastExpr 0x129115460 <col:60> 'struct drm_syncobj **' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x129115380 <col:60> 'struct drm_syncobj **' contains-errors lvalue Var 0x129808b28 'fences' 'struct drm_syncobj **'     |-IfStmt 0x129115f98 <line:45:2, line:64:2>     | |-RecoveryExpr 0x1291154f8 <line:45:6, col:20> '_Bool' contains-errors     | `-CompoundStmt 0x129115f60 <col:38, line:64:2>     |   |-DeclStmt 0x1291155d8 <line:46:3, col:43>     |   | `-VarDecl 0x129115570 <col:3, col:36> col:36 invalid __user 'struct drm_i915_gem_exec_object2'     |   |-DeclStmt 0x129115670 <line:48:3, col:17>     |   | `-VarDecl 0x129115608 <col:3, col:16> col:16 used i 'unsigned int'     |   |-CallExpr 0x1291157a0 <line:51:3, col:21> 'int'     |   | `-ImplicitCastExpr 0x129115788 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x129115768 <col:3> 'int ()' Function 0x1291156b0 'user_access_begin' 'int ()'     |   |-ForStmt 0x129115d80 <line:52:3, line:61:3>     |   | |-BinaryOperator 0x129115818 <line:52:8, col:12> 'unsigned int' '='     |   | | |-DeclRefExpr 0x1291157c0 <col:8> 'unsigned int' lvalue Var 0x129115608 'i' 'unsigned int'     |   | | `-ImplicitCastExpr 0x129115800 <col:12> 'unsigned int' <IntegralCast>     |   | |   `-IntegerLiteral 0x1291157e0 <col:12> 'int' 0     |   | |-<<<NULL>>>     |   | |-BinaryOperator 0x1291158b8 <col:15, col:25> 'int' contains-errors '<'     |   | | |-DeclRefExpr 0x129115838 <col:15> 'unsigned int' lvalue Var 0x129115608 'i' 'unsigned int'     |   | | `-RecoveryExpr 0x129115890 <col:19, col:25> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x129115858 <col:19> 'struct drm_i915_gem_execbuffer2 *' lvalue Var 0x129808678 'args' 'struct drm_i915_gem_execbuffer2 *'     |   | |-UnaryOperator 0x1291158f8 <col:39, col:40> 'unsigned int' postfix '++'     |   | | `-DeclRefExpr 0x1291158d8 <col:39> 'unsigned int' lvalue Var 0x129115608 'i' 'unsigned int'     |   | `-CompoundStmt 0x129115d68 <col:44, line:61:3>     |   |   `-IfStmt 0x1291159a8 <line:53:4, line:54:5>     |   |     |-RecoveryExpr 0x129115980 <line:53:8, col:39> '_Bool' contains-errors     |   |     `-ContinueStmt 0x1291159a0 <line:54:5>     |   `-LabelStmt 0x129115f40 <line:62:1, line:63:19> 'end_user'     |     `-CallExpr 0x129115ed0 <col:3, col:19> 'int'     |       `-ImplicitCastExpr 0x129115eb8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |         `-DeclRefExpr 0x129115e98 <col:3> 'int ()' Function 0x129115de0 'user_access_end' 'int ()'     |-CallExpr 0x129116170 <line:67:2, col:30> 'int' contains-errors     | |-ImplicitCastExpr 0x129116158 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1291160f8 <col:2> 'int ()' Function 0x129116040 'put_fence_array' 'int ()'     | |-ImplicitCastExpr 0x1291161a0 <col:18> 'struct drm_i915_gem_execbuffer2 *' <LValueToRValue>     | | `-DeclRefExpr 0x129116118 <col:18> 'struct drm_i915_gem_execbuffer2 *' lvalue Var 0x129808678 'args' 'struct drm_i915_gem_execbuffer2 *'     | `-ImplicitCastExpr 0x1291161b8 <col:24> 'struct drm_syncobj **' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x129116138 <col:24> 'struct drm_syncobj **' contains-errors lvalue Var 0x129808b28 'fences' 'struct drm_syncobj **'     |-CallExpr 0x129116228 <line:68:2, col:19> 'int'     | |-ImplicitCastExpr 0x129116210 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1291161d0 <col:2> 'int ()' Function 0x12980c310 'kvfree' 'int ()'     | `-ImplicitCastExpr 0x129116250 <col:9> 'struct drm_i915_gem_exec_object2 *' <LValueToRValue>     |   `-DeclRefExpr 0x1291161f0 <col:9> 'struct drm_i915_gem_exec_object2 *' lvalue Var 0x1298088c8 'exec2_list' 'struct drm_i915_gem_exec_object2 *'     `-ReturnStmt 0x1291162a0 <line:69:2, col:9>       `-ImplicitCastExpr 0x129116288 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x129116268 <col:9> 'int' lvalue Var 0x129808d20 'err' 'int' ","19937":"`-FunctionDecl 0x128928168  line:2:9 invalid udta_box_new 'int *()'   `-CompoundStmt 0x129008d28 <line:3:1, line:10:23>     |-CallExpr 0x128928430 <line:4:2, col:59> '<dependent type>' contains-errors     | |-DeclRefExpr 0x128928370 <col:2> 'int ()' Function 0x1289282b8 'ISOM_DECL_BOX_ALLOC' 'int ()'     | |-RecoveryExpr 0x1289283f0 <col:22> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x128928410 <col:38> '<dependent type>' contains-errors lvalue     `-IfStmt 0x129008cf0 <line:6:2, line:9:2>       |-UnaryOperator 0x1289286d8 <line:6:6, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-ImplicitCastExpr 0x1289286c0 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>       |   `-CXXDependentScopeMemberExpr 0x128928678 <col:7, col:12> '<dependent type>' contains-errors lvalue ->recordList       |     `-RecoveryExpr 0x128928658 <col:7> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x129008cd0 <col:24, line:9:2>         |-CallExpr 0x129008c60 <line:7:3, col:14> '<dependent type>' contains-errors         | |-DeclRefExpr 0x1289287d0 <col:3> 'int ()' Function 0x128928718 'gf_free' 'int ()'         | `-RecoveryExpr 0x129008c40 <col:11> '<dependent type>' contains-errors lvalue         `-ReturnStmt 0x129008cc0 <line:8:3, col:10>           `-RecoveryExpr 0x129008ca0 <col:10> '<dependent type>' contains-errors lvalue ","19564":"`-FunctionDecl 0x1558cb688  line:1:1 invalid check_backrefs 'int (int *, int *)'   |-ParmVarDecl 0x1558cb528 <col:16, col:22> col:22 invalid node 'int *'   |-ParmVarDecl 0x1558cb5a8 <col:28, col:37> col:37 invalid env 'int *'   `-CompoundStmt 0x155067af8 <line:2:1, line:64:1>     |-DeclStmt 0x1558cb7c0 <line:3:3, col:8>     | `-VarDecl 0x1558cb758 <col:3, col:7> col:7 used r 'int'     |-SwitchStmt 0x1558cb998 <line:5:3, line:61:3>     | |-CallExpr 0x1558cb970 <line:5:11, col:25> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1558cb930 <col:11> 'int ()' Function 0x1558cb878 'NODE_TYPE' 'int ()'     | | `-RecoveryExpr 0x1558cb950 <col:21> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x155067a40 <col:28, line:61:3>     |   |-DoStmt 0x1558e4f48 <line:8:5, line:10:58>     |   | |-CompoundStmt 0x1558cbbe8 <line:8:8, line:10:5>     |   | | `-BinaryOperator 0x1558cbbc8 <line:9:7, col:45> 'int' contains-errors '='     |   | |   |-DeclRefExpr 0x1558cb9f0 <col:7> 'int' lvalue Var 0x1558cb758 'r' 'int'     |   | |   `-CallExpr 0x1558cbb98 <col:11, col:45> '<dependent type>' contains-errors     |   | |     |-RecoveryExpr 0x1558cba10 <col:11> '<dependent type>' contains-errors lvalue     |   | |     |-CallExpr 0x1558cbb50 <col:26, col:39> '<dependent type>' contains-errors     |   | |     | |-DeclRefExpr 0x1558cbb10 <col:26> 'int ()' Function 0x1558cba58 'NODE_CAR' 'int ()'     |   | |     | `-RecoveryExpr 0x1558cbb30 <col:35> '<dependent type>' contains-errors lvalue     |   | |     `-RecoveryExpr 0x1558cbb78 <col:42> '<dependent type>' contains-errors lvalue     |   | `-BinaryOperator 0x1558e4f28 <line:10:14, col:57> 'int' contains-errors '&&'     |   |   |-BinaryOperator 0x1558e4c58 <col:14, col:19> 'int' '=='     |   |   | |-ImplicitCastExpr 0x1558e4c40 <col:14> 'int' <LValueToRValue>     |   |   | | `-DeclRefExpr 0x1558e4c00 <col:14> 'int' lvalue Var 0x1558cb758 'r' 'int'     |   |   | `-IntegerLiteral 0x1558e4c20 <col:19> 'int' 0     |   |   `-CallExpr 0x1558e4f00 <col:24, col:57> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x1558e4d58 <col:24> 'int ()' Function 0x1558e4ca0 'IS_NOT_NULL' 'int ()'     |   |     `-BinaryOperator 0x1558e4ee0 <col:36, col:56> '<dependent type>' contains-errors '='     |   |       |-RecoveryExpr 0x1558e4d78 <col:36> '<dependent type>' contains-errors lvalue     |   |       `-CallExpr 0x1558e4eb8 <col:43, col:56> '<dependent type>' contains-errors     |   |         |-DeclRefExpr 0x1558e4e78 <col:43> 'int ()' Function 0x1558e4dc0 'NODE_CDR' 'int ()'     |   |         `-RecoveryExpr 0x1558e4e98 <col:52> '<dependent type>' contains-errors lvalue     |   |-BreakStmt 0x1558e4f68 <line:11:5>     |   |-CaseStmt 0x1558e4fa8 <line:13:3, line:17:5>     |   | |-DeclRefExpr 0x1558e4f88 <line:13:8> 'int ()' Function 0x1558e4dc0 'NODE_CDR' 'int ()'     |   | `-IfStmt 0x1558e52e0 <line:14:5, line:17:5>     |   |   |-UnaryOperator 0x1558e5240 <line:14:9, col:40> '<dependent type>' contains-errors prefix '!' cannot overflow     |   |   | `-CallExpr 0x1558e5218 <col:11, col:40> '<dependent type>' contains-errors     |   |   |   |-DeclRefExpr 0x1558e50b0 <col:11> 'int ()' Function 0x1558e4ff8 'ANCHOR_HAS_BODY' 'int ()'     |   |   |   `-CallExpr 0x1558e51f0 <col:27, col:39> '<dependent type>' contains-errors     |   |   |     |-DeclRefExpr 0x1558e51b0 <col:27> 'int ()' Function 0x1558e50f8 'ANCHOR_' 'int ()'     |   |   |     `-RecoveryExpr 0x1558e51d0 <col:35> '<dependent type>' contains-errors lvalue     |   |   `-CompoundStmt 0x1558e52c0 <col:43, line:17:5>     |   |     |-BinaryOperator 0x1558e5298 <line:15:7, col:11> 'int' '='     |   |     | |-DeclRefExpr 0x1558e5258 <col:7> 'int' lvalue Var 0x1558cb758 'r' 'int'     |   |     | `-IntegerLiteral 0x1558e5278 <col:11> 'int' 0     |   |     `-BreakStmt 0x1558e52b8 <line:16:7>     |   |-BinaryOperator 0x1558e54f0 <line:20:5, col:44> 'int' contains-errors '='     |   | |-DeclRefExpr 0x1558e5318 <col:5> 'int' lvalue Var 0x1558cb758 'r' 'int'     |   | `-CallExpr 0x1558e54c0 <col:9, col:44> '<dependent type>' contains-errors     |   |   |-RecoveryExpr 0x1558e5338 <col:9> '<dependent type>' contains-errors lvalue     |   |   |-CallExpr 0x1558e5478 <col:24, col:38> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x1558e5438 <col:24> 'int ()' Function 0x1558e5380 'NODE_BODY' 'int ()'     |   |   | `-RecoveryExpr 0x1558e5458 <col:34> '<dependent type>' contains-errors lvalue     |   |   `-RecoveryExpr 0x1558e54a0 <col:41> '<dependent type>' contains-errors lvalue     |   |-BreakStmt 0x1558e5510 <line:21:5>     |   |-BinaryOperator 0x1558e5668 <line:24:5, col:44> 'int' contains-errors '='     |   | |-DeclRefExpr 0x1558e5570 <col:5> 'int' lvalue Var 0x1558cb758 'r' 'int'     |   | `-CallExpr 0x1558e5638 <col:9, col:44> '<dependent type>' contains-errors     |   |   |-RecoveryExpr 0x1558e5590 <col:9> '<dependent type>' contains-errors lvalue     |   |   |-CallExpr 0x1558e55f0 <col:24, col:38> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x1558e55b0 <col:24> 'int ()' Function 0x1558e5380 'NODE_BODY' 'int ()'     |   |   | `-RecoveryExpr 0x1558e55d0 <col:34> '<dependent type>' contains-errors lvalue     |   |   `-RecoveryExpr 0x1558e5618 <col:41> '<dependent type>' contains-errors lvalue     |   |-CompoundStmt 0x1550670d8 <line:25:5, line:38:5>     |   | `-IfStmt 0x1550670b8 <line:28:7, line:37:7>     |   |   |-BinaryOperator 0x1558e5908 <line:28:11, col:23> 'int' contains-errors '=='     |   |   | |-CXXDependentScopeMemberExpr 0x1558e58a0 <col:11, col:15> '<dependent type>' contains-errors lvalue ->type     |   |   | | `-RecoveryExpr 0x1558e5880 <col:11> '<dependent type>' contains-errors lvalue     |   |   | `-RecoveryExpr 0x1558e58e8 <col:23> '<dependent type>' contains-errors lvalue     |   |   `-CompoundStmt 0x155067090 <col:36, line:37:7>     |   |     |-IfStmt 0x1558e59e8 <line:29:9, col:28>     |   |     | |-BinaryOperator 0x1558e5980 <col:13, col:18> 'int' '!='     |   |     | | |-ImplicitCastExpr 0x1558e5968 <col:13> 'int' <LValueToRValue>     |   |     | | | `-DeclRefExpr 0x1558e5928 <col:13> 'int' lvalue Var 0x1558cb758 'r' 'int'     |   |     | | `-IntegerLiteral 0x1558e5948 <col:18> 'int' 0     |   |     | `-ReturnStmt 0x1558e59d8 <col:21, col:28>     |   |     |   `-ImplicitCastExpr 0x1558e59c0 <col:28> 'int' <LValueToRValue>     |   |     |     `-DeclRefExpr 0x1558e59a0 <col:28> 'int' lvalue Var 0x1558cb758 'r' 'int'     |   |     |-IfStmt 0x1558e5ba0 <line:30:9, line:33:9>     |   |     | |-RecoveryExpr 0x1558e5a28 <line:30:13, col:36> '_Bool' contains-errors     |   |     | `-CompoundStmt 0x1558e5b88 <col:39, line:33:9>     |   |     |   `-IfStmt 0x1558e5b68 <line:32:11, col:30>     |   |     |     |-BinaryOperator 0x1558e5b00 <col:15, col:20> 'int' '!='     |   |     |     | |-ImplicitCastExpr 0x1558e5ae8 <col:15> 'int' <LValueToRValue>     |   |     |     | | `-DeclRefExpr 0x1558e5aa8 <col:15> 'int' lvalue Var 0x1558cb758 'r' 'int'     |   |     |     | `-IntegerLiteral 0x1558e5ac8 <col:20> 'int' 0     |   |     |     `-ReturnStmt 0x1558e5b58 <col:23, col:30>     |   |     |       `-ImplicitCastExpr 0x1558e5b40 <col:30> 'int' <LValueToRValue>     |   |     |         `-DeclRefExpr 0x1558e5b20 <col:30> 'int' lvalue Var 0x1558cb758 'r' 'int'     |   |     `-IfStmt 0x155067070 <line:34:9, line:36:9>     |   |       |-RecoveryExpr 0x1558e5be0 <line:34:13, col:36> '_Bool' contains-errors     |   |       `-CompoundStmt 0x155067060 <col:39, line:36:9>     |   |-BreakStmt 0x1550670f0 <line:39:5>     |   |-CompoundStmt 0x155067988 <line:42:5, line:55:5>     |   | |-DeclStmt 0x155067178 <line:43:7, col:12>     |   | | `-VarDecl 0x155067110 <col:7, col:11> col:11 used i 'int'     |   | |-DeclStmt 0x155067458 <line:45:7, col:34>     |   | | `-VarDecl 0x1550672f0 <col:7, col:12> col:12 used backs 'int *'     |   | `-BinaryOperator 0x155067968 <line:54:7, col:11> 'int' '='     |   |   |-DeclRefExpr 0x155067928 <col:7> 'int' lvalue Var 0x1558cb758 'r' 'int'     |   |   `-IntegerLiteral 0x155067948 <col:11> 'int' 0     |   |-BreakStmt 0x1550679b0 <line:56:5>     |   |-DefaultStmt 0x155067a18 <line:58:3, line:59:9>     |   | `-BinaryOperator 0x1550679f8 <col:5, col:9> 'int' '='     |   |   |-DeclRefExpr 0x1550679b8 <col:5> 'int' lvalue Var 0x1558cb758 'r' 'int'     |   |   `-IntegerLiteral 0x1550679d8 <col:9> 'int' 0     |   `-BreakStmt 0x155067a38 <line:60:5>     `-ReturnStmt 0x155067ae8 <line:63:3, col:10>       `-ImplicitCastExpr 0x155067ad0 <col:10> 'int' <LValueToRValue>         `-DeclRefExpr 0x155067ab0 <col:10> 'int' lvalue Var 0x1558cb758 'r' 'int' ","19715":"`-FunctionDecl 0x1438faad8  line:1:16 invalid __nfs4_get_acl_uncached 'int (struct inode *, void *, int)' static   |-ParmVarDecl 0x143030e68 <col:40, col:54> col:54 used inode 'struct inode *'   |-ParmVarDecl 0x143030ee8 <col:61, col:67> col:67 used buf 'void *'   |-ParmVarDecl 0x143030f68 <col:72, col:79> col:79 invalid buflen 'int'   `-CompoundStmt 0x143055a08 <line:2:1, line:67:1>     |-DeclStmt 0x1438fadc0 <line:3:2, col:49>     | |-RecordDecl 0x1438fab98 <col:2, col:9> col:9 struct page     | `-VarDecl 0x1438fad28 <col:2, col:15> col:15 referenced invalid pages 'struct page *'     |-DeclStmt 0x1438fb2d8 <line:4:2, line:8:3>     | |-RecordDecl 0x1438fadd8 <line:4:2, col:9> col:9 struct nfs_getaclargs     | `-VarDecl 0x1438faed8 <col:2, col:24> col:24 referenced invalid args 'struct nfs_getaclargs'     |-DeclStmt 0x1438fb510 <line:9:2, line:11:3>     | |-RecordDecl 0x1438fb2f0 <line:9:2, col:9> col:9 struct nfs_getaclres     | `-VarDecl 0x1438fb3e8 <col:2, col:23> col:23 referenced invalid res 'struct nfs_getaclres'     |-DeclStmt 0x1438fb7c8 <line:12:2, line:16:3>     | |-RecordDecl 0x1438fb528 <line:12:2, col:9> col:9 struct rpc_message     | `-VarDecl 0x1438fb628 <col:2, col:21> col:21 invalid msg 'struct rpc_message'     |-DeclStmt 0x1438fc030 <line:17:2, col:55>     | `-VarDecl 0x1438fb7f8 <col:2, col:54> col:15 used npages 'unsigned int' cinit     |   `-CallExpr 0x1438fc000 <col:24, col:54> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1438fb940 <col:24> 'int ()' Function 0x1438fb888 'DIV_ROUND_UP' 'int ()'     |     |-RecoveryExpr 0x1438fb960 <col:37> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x1438fb9c8 <col:45> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x1438fc1f8 <line:18:2, col:22>     | |-VarDecl 0x1438fc060 <col:2, col:13> col:6 used ret 'int' cinit     | | `-UnaryOperator 0x1438fc148 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow     | |   `-ImplicitCastExpr 0x1438fc130 <col:13> '<dependent type>' contains-errors <LValueToRValue>     | |     `-RecoveryExpr 0x1438fc110 <col:13> '<dependent type>' contains-errors lvalue     | `-VarDecl 0x1438fc178 <col:2, col:21> col:21 used i 'int'     |-IfStmt 0x1438fc318 <line:21:2, line:22:12>     | |-BinaryOperator 0x1438fc280 <line:21:6, col:16> 'int' contains-errors '=='     | | |-ImplicitCastExpr 0x1438fc250 <col:6> 'unsigned int' contains-errors <LValueToRValue>     | | | `-DeclRefExpr 0x1438fc210 <col:6> 'unsigned int' contains-errors lvalue Var 0x1438fb7f8 'npages' 'unsigned int'     | | `-ImplicitCastExpr 0x1438fc268 <col:16> 'unsigned int' <IntegralCast>     | |   `-IntegerLiteral 0x1438fc230 <col:16> 'int' 0     | `-BinaryOperator 0x1438fc2f8 <line:22:3, col:12> 'unsigned int' contains-errors '='     |   |-DeclRefExpr 0x1438fc2a0 <col:3> 'unsigned int' contains-errors lvalue Var 0x1438fb7f8 'npages' 'unsigned int'     |   `-ImplicitCastExpr 0x1438fc2e0 <col:12> 'unsigned int' <IntegralCast>     |     `-IntegerLiteral 0x1438fc2c0 <col:12> 'int' 1     |-IfStmt 0x1438fc568 <line:23:2, line:24:11>     | |-BinaryOperator 0x1438fc4a0 <line:23:6, col:31> 'int' contains-errors '>'     | | |-DeclRefExpr 0x1438fc338 <col:6> 'unsigned int' contains-errors lvalue Var 0x1438fb7f8 'npages' 'unsigned int'     | | `-CallExpr 0x1438fc478 <col:15, col:31> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x1438fc438 <col:15> 'int ()' Function 0x1438fc380 'ARRAY_SIZE' 'int ()'     | |   `-RecoveryExpr 0x1438fc458 <col:26> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1438fc558 <line:24:3, col:11>     |   `-UnaryOperator 0x1438fc540 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x1438fc528 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x1438fc508 <col:11> '<dependent type>' contains-errors lvalue     |-ForStmt 0x1438fcb50 <line:26:2, line:30:2>     | |-BinaryOperator 0x1438fc5c8 <line:26:7, col:11> 'int' '='     | | |-DeclRefExpr 0x1438fc588 <col:7> 'int' lvalue Var 0x1438fc178 'i' 'int'     | | `-IntegerLiteral 0x1438fc5a8 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x1438fc670 <col:14, col:18> 'int' contains-errors '<'     | | |-ImplicitCastExpr 0x1438fc658 <col:14> 'unsigned int' <IntegralCast>     | | | `-ImplicitCastExpr 0x1438fc628 <col:14> 'int' <LValueToRValue>     | | |   `-DeclRefExpr 0x1438fc5e8 <col:14> 'int' lvalue Var 0x1438fc178 'i' 'int'     | | `-ImplicitCastExpr 0x1438fc640 <col:18> 'unsigned int' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x1438fc608 <col:18> 'unsigned int' contains-errors lvalue Var 0x1438fb7f8 'npages' 'unsigned int'     | |-UnaryOperator 0x1438fc6b0 <col:26, col:27> 'int' postfix '++'     | | `-DeclRefExpr 0x1438fc690 <col:26> 'int' lvalue Var 0x1438fc178 'i' 'int'     | `-CompoundStmt 0x1438fcb30 <col:31, line:30:2>     |   |-BinaryOperator 0x1438fc9c8 <line:27:3, col:35> '<dependent type>' contains-errors '='     |   | |-ArraySubscriptExpr 0x1438fc960 <col:3, col:10> '<dependent type>' contains-errors lvalue     |   | | |-ImplicitCastExpr 0x1438fc930 <col:3> '<dependent type>' contains-errors <LValueToRValue>     |   | | | `-RecoveryExpr 0x1438fc6e8 <col:3> '<dependent type>' contains-errors lvalue     |   | | |   `-DeclRefExpr 0x1438fc6c8 <col:3> 'struct page *' lvalue Var 0x1438fad28 'pages' 'struct page *'     |   | | `-ImplicitCastExpr 0x1438fc948 <col:9> 'int' <LValueToRValue>     |   | |   `-DeclRefExpr 0x1438fc710 <col:9> 'int' lvalue Var 0x1438fc178 'i' 'int'     |   | `-CallExpr 0x1438fc9a0 <col:14, col:35> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x1438fc860 <col:14> 'int ()' Function 0x1438fc7a8 'alloc_page' 'int ()'     |   |   `-RecoveryExpr 0x1438fc980 <col:25> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x1438fcb10 <line:28:3, line:29:9>     |     |-UnaryOperator 0x1438fca90 <line:28:7, col:15> '<dependent type>' contains-errors prefix '!' cannot overflow     |     | `-ImplicitCastExpr 0x1438fca78 <col:8, col:15> '<dependent type>' contains-errors <LValueToRValue>     |     |   `-ArraySubscriptExpr 0x1438fca58 <col:8, col:15> '<dependent type>' contains-errors lvalue     |     |     |-ImplicitCastExpr 0x1438fca28 <col:8> '<dependent type>' contains-errors <LValueToRValue>     |     |     | `-RecoveryExpr 0x1438fc9e8 <col:8> '<dependent type>' contains-errors lvalue     |     |     `-ImplicitCastExpr 0x1438fca40 <col:14> 'int' <LValueToRValue>     |     |       `-DeclRefExpr 0x1438fca08 <col:14> 'int' lvalue Var 0x1438fc178 'i' 'int'     |     `-GotoStmt 0x1438fcaf8 <line:29:4, col:9> 'out_free' 0x1438fcaa8     |-BinaryOperator 0x1438fcce0 <line:33:2, col:41> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1438fcbd0 <col:2, col:6> '<dependent type>' contains-errors lvalue .acl_scratch     | | `-RecoveryExpr 0x1438fcba8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1438fcb88 <col:2> 'struct nfs_getaclres' lvalue Var 0x1438fb3e8 'res' 'struct nfs_getaclres'     | `-CallExpr 0x1438fccb8 <col:20, col:41> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1438fcc18 <col:20> 'int ()' Function 0x1438fc7a8 'alloc_page' 'int ()'     |   `-RecoveryExpr 0x1438fcc98 <col:31> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1438fcdb0 <line:34:2, line:35:8>     | |-UnaryOperator 0x1438fcd80 <line:34:6, col:11> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1438fcd68 <col:7, col:11> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x1438fcd20 <col:7, col:11> '<dependent type>' contains-errors lvalue .acl_scratch     | |     `-RecoveryExpr 0x1438fcd00 <col:7> '<dependent type>' contains-errors lvalue     | `-GotoStmt 0x1438fcd98 <line:35:3, col:8> 'out_free' 0x1438fcaa8     |-BinaryOperator 0x1438fcf18 <line:37:2, col:26> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1438fce18 <col:2, col:7> '<dependent type>' contains-errors lvalue .acl_len     | | `-RecoveryExpr 0x1438fcdf0 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1438fcdd0 <col:2> 'struct nfs_getaclargs' lvalue Var 0x1438faed8 'args' 'struct nfs_getaclargs'     | `-BinaryOperator 0x1438fcef8 <col:17, col:26> '<dependent type>' contains-errors '*'     |   |-DeclRefExpr 0x1438fce60 <col:17> 'unsigned int' contains-errors lvalue Var 0x1438fb7f8 'npages' 'unsigned int'     |   `-RecoveryExpr 0x1438fced8 <col:26> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x143054400 <line:38:2, col:20> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1438fcf80 <col:2, col:7> '<dependent type>' contains-errors lvalue .acl_pgbase     | | `-RecoveryExpr 0x1438fcf58 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1438fcf38 <col:2> 'struct nfs_getaclargs' lvalue Var 0x1438faed8 'args' 'struct nfs_getaclargs'     | `-IntegerLiteral 0x1438fcfc8 <col:20> 'int' 0     |-CallExpr 0x143054710 <line:40:2, line:41:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x143054500 <line:40:2> 'int ()' Function 0x143054448 'dprintk' 'int ()'     | |-StringLiteral 0x143054560 <col:10> 'char[4]' lvalue \"STR\"     | |-PredefinedExpr 0x143054630 <line:41:3> 'const char[24]' lvalue __func__     | | `-StringLiteral 0x143054600 <col:3> 'const char[24]' lvalue \"__nfs4_get_acl_uncached\"     | |-DeclRefExpr 0x143054648 <col:13> 'void *' lvalue ParmVar 0x143030ee8 'buf' 'void *'     | |-RecoveryExpr 0x143054668 <col:18> '<dependent type>' contains-errors lvalue     | |-DeclRefExpr 0x143054688 <col:26> 'unsigned int' contains-errors lvalue Var 0x1438fb7f8 'npages' 'unsigned int'     | `-CXXDependentScopeMemberExpr 0x1430546c8 <col:34, col:39> '<dependent type>' contains-errors lvalue .acl_len     |   `-RecoveryExpr 0x1430546a8 <col:34> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x143054c60 <line:42:2, line:43:46> 'int' contains-errors '='     | |-DeclRefExpr 0x143054760 <line:42:2> 'int' contains-errors lvalue Var 0x1438fc060 'ret' 'int'     | `-CallExpr 0x143054c10 <col:8, line:43:46> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x143054860 <line:42:8> 'int ()' Function 0x1430547a8 'nfs4_call_sync' 'int ()'     |   |-RecoveryExpr 0x1430549f8 <col:23, col:42> '<dependent type>' contains-errors lvalue     |   | `-CallExpr 0x1430549b8 <col:23, col:39> 'int'     |   |   |-ImplicitCastExpr 0x1430549a0 <col:23> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x143054960 <col:23> 'int ()' Function 0x1430548a8 'NFS_SERVER' 'int ()'     |   |   `-ImplicitCastExpr 0x1430549e0 <col:34> 'struct inode *' <LValueToRValue>     |   |     `-DeclRefExpr 0x143054980 <col:34> 'struct inode *' lvalue ParmVar 0x143030e68 'inode' 'struct inode *'     |   |-CallExpr 0x143054a78 <col:50, col:66> 'int'     |   | |-ImplicitCastExpr 0x143054a60 <col:50> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x143054a20 <col:50> 'int ()' Function 0x1430548a8 'NFS_SERVER' 'int ()'     |   | `-ImplicitCastExpr 0x143054aa0 <col:61> 'struct inode *' <LValueToRValue>     |   |   `-DeclRefExpr 0x143054a40 <col:61> 'struct inode *' lvalue ParmVar 0x143030e68 'inode' 'struct inode *'     |   |-UnaryOperator 0x143054ad8 <line:43:9, col:10> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x143054ab8 <col:10> '<dependent type>' contains-errors lvalue     |   |-UnaryOperator 0x143054b58 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-CXXDependentScopeMemberExpr 0x143054b10 <col:16, col:21> '<dependent type>' contains-errors lvalue .seq_args     |   |   `-RecoveryExpr 0x143054af0 <col:16> '<dependent type>' contains-errors lvalue     |   |-UnaryOperator 0x143054bd8 <col:31, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-CXXDependentScopeMemberExpr 0x143054b90 <col:32, col:36> '<dependent type>' contains-errors lvalue .seq_res     |   |   `-RecoveryExpr 0x143054b70 <col:32> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x143054bf0 <col:45> 'int' 0     |-IfStmt 0x143054cd0 <line:44:2, line:45:8>     | |-ImplicitCastExpr 0x143054ca0 <line:44:6> 'int' contains-errors <LValueToRValue>     | | `-DeclRefExpr 0x143054c80 <col:6> 'int' contains-errors lvalue Var 0x1438fc060 'ret' 'int'     | `-GotoStmt 0x143054cb8 <line:45:3, col:8> 'out_free' 0x1438fcaa8     |-IfStmt 0x143054e98 <line:48:2, line:54:2>     | |-RecoveryExpr 0x143054d58 <line:48:6, col:22> '_Bool' contains-errors     | `-CompoundStmt 0x143054e78 <col:38, line:54:2>     |   |-IfStmt 0x143054e20 <line:50:3, line:51:9>     |   | |-RecoveryExpr 0x143054d98 <line:50:7, col:14> '_Bool' contains-errors     |   | `-GotoStmt 0x143054e08 <line:51:4, col:9> 'out_ok' 0x143054db8     |   `-GotoStmt 0x143054e60 <line:53:3, col:8> 'out_free' 0x1438fcaa8     |-CallExpr 0x1430550c8 <line:55:2, col:70> '<dependent type>' contains-errors     | |-DeclRefExpr 0x143054f98 <col:2> 'int ()' Function 0x143054ee0 'nfs4_write_cached_acl' 'int ()'     | |-DeclRefExpr 0x143054fb8 <col:24> 'struct inode *' lvalue ParmVar 0x143030e68 'inode' 'struct inode *'     | |-RecoveryExpr 0x143054fd8 <col:31> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x143055018 <col:38, col:42> '<dependent type>' contains-errors lvalue .acl_data_offset     | | `-RecoveryExpr 0x143054ff8 <col:38> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x143055080 <col:59, col:63> '<dependent type>' contains-errors lvalue .acl_len     |   `-RecoveryExpr 0x143055060 <col:59> '<dependent type>' contains-errors lvalue     |-IfStmt 0x143055390 <line:56:2, line:57:64>     | |-ImplicitCastExpr 0x143055128 <line:56:6> 'void *' <LValueToRValue>     | | `-DeclRefExpr 0x143055108 <col:6> 'void *' lvalue ParmVar 0x143030ee8 'buf' 'void *'     | `-CallExpr 0x143055350 <line:57:3, col:64> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x143055220 <col:3> 'int ()' Function 0x143055168 '_copy_from_pages' 'int ()'     |   |-DeclRefExpr 0x143055240 <col:20> 'void *' lvalue ParmVar 0x143030ee8 'buf' 'void *'     |   |-RecoveryExpr 0x143055260 <col:25> '<dependent type>' contains-errors lvalue     |   |-CXXDependentScopeMemberExpr 0x1430552a0 <col:32, col:36> '<dependent type>' contains-errors lvalue .acl_data_offset     |   | `-RecoveryExpr 0x143055280 <col:32> '<dependent type>' contains-errors lvalue     |   `-CXXDependentScopeMemberExpr 0x143055308 <col:53, col:57> '<dependent type>' contains-errors lvalue .acl_len     |     `-RecoveryExpr 0x1430552e8 <col:53> '<dependent type>' contains-errors lvalue     |-LabelStmt 0x143055468 <line:58:1, line:59:12> 'out_ok'     | `-BinaryOperator 0x143055448 <col:2, col:12> 'int' contains-errors '='     |   |-DeclRefExpr 0x1430553b0 <col:2> 'int' contains-errors lvalue Var 0x1438fc060 'ret' 'int'     |   `-CXXDependentScopeMemberExpr 0x143055400 <col:8, col:12> '<dependent type>' contains-errors lvalue .acl_len     |     `-RecoveryExpr 0x1430553d0 <col:8> '<dependent type>' contains-errors lvalue     |-LabelStmt 0x143055868 <line:60:1, line:63:24> 'out_free'     | `-ForStmt 0x143055830 <line:61:2, line:63:24>     |   |-BinaryOperator 0x1430554c8 <line:61:7, col:11> 'int' '='     |   | |-DeclRefExpr 0x143055488 <col:7> 'int' lvalue Var 0x1438fc178 'i' 'int'     |   | `-IntegerLiteral 0x1430554a8 <col:11> 'int' 0     |   |-<<<NULL>>>     |   |-BinaryOperator 0x143055570 <col:14, col:18> 'int' contains-errors '<'     |   | |-ImplicitCastExpr 0x143055558 <col:14> 'unsigned int' <IntegralCast>     |   | | `-ImplicitCastExpr 0x143055528 <col:14> 'int' <LValueToRValue>     |   | |   `-DeclRefExpr 0x1430554e8 <col:14> 'int' lvalue Var 0x1438fc178 'i' 'int'     |   | `-ImplicitCastExpr 0x143055540 <col:18> 'unsigned int' contains-errors <LValueToRValue>     |   |   `-DeclRefExpr 0x143055508 <col:18> 'unsigned int' contains-errors lvalue Var 0x1438fb7f8 'npages' 'unsigned int'     |   |-UnaryOperator 0x1430555b0 <col:26, col:27> 'int' postfix '++'     |   | `-DeclRefExpr 0x143055590 <col:26> 'int' lvalue Var 0x1438fc178 'i' 'int'     |   `-IfStmt 0x143055810 <line:62:3, line:63:24>     |     |-ArraySubscriptExpr 0x143055638 <line:62:7, col:14> '<dependent type>' contains-errors lvalue     |     | |-ImplicitCastExpr 0x143055608 <col:7> '<dependent type>' contains-errors <LValueToRValue>     |     | | `-RecoveryExpr 0x1430555c8 <col:7> '<dependent type>' contains-errors lvalue     |     | `-ImplicitCastExpr 0x143055620 <col:13> 'int' <LValueToRValue>     |     |   `-DeclRefExpr 0x1430555e8 <col:13> 'int' lvalue Var 0x1438fc178 'i' 'int'     |     `-CallExpr 0x1430557e8 <line:63:4, col:24> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x143055738 <col:4> 'int ()' Function 0x143055680 '__free_page' 'int ()'     |       `-ArraySubscriptExpr 0x1430557c8 <col:16, col:23> '<dependent type>' contains-errors lvalue     |         |-ImplicitCastExpr 0x143055798 <col:16> '<dependent type>' contains-errors <LValueToRValue>     |         | `-RecoveryExpr 0x143055758 <col:16> '<dependent type>' contains-errors lvalue     |         `-ImplicitCastExpr 0x1430557b0 <col:22> 'int' <LValueToRValue>     |           `-DeclRefExpr 0x143055778 <col:22> 'int' lvalue Var 0x1438fc178 'i' 'int'     |-IfStmt 0x1430559a0 <line:64:2, line:65:30>     | |-CXXDependentScopeMemberExpr 0x1430558a8 <line:64:6, col:10> '<dependent type>' contains-errors lvalue .acl_scratch     | | `-RecoveryExpr 0x143055888 <col:6> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x143055978 <line:65:3, col:30> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1430558f0 <col:3> 'int ()' Function 0x143055680 '__free_page' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x143055930 <col:15, col:19> '<dependent type>' contains-errors lvalue .acl_scratch     |     `-RecoveryExpr 0x143055910 <col:15> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1430559f8 <line:66:2, col:9>       `-ImplicitCastExpr 0x1430559e0 <col:9> 'int' contains-errors <LValueToRValue>         `-DeclRefExpr 0x1430559c0 <col:9> 'int' contains-errors lvalue Var 0x1438fc060 'ret' 'int' ","19620":"`-FunctionDecl 0x127143a78  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x127143b78 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x127143be0 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x127143c48 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x127143b20 <<invalid sloc>> Implicit 900 ","20054":"`-FunctionDecl 0x13600de08  line:1:12 invalid uvc_colorspace 'int (const int)' static   |-ParmVarDecl 0x13600dcf0 <col:27, col:36> col:36 invalid primaries 'const int'   `-CompoundStmt 0x13600e358 <line:2:1, line:16:1>     |-DeclStmt 0x13600e048 <line:3:2, line:10:3>     | `-VarDecl 0x13600df48 <line:3:2, col:33> col:18 invalid colorprimaries 'const int[]' static     |-IfStmt 0x13600e308 <line:12:2, line:13:34>     | |-BinaryOperator 0x13600e248 <line:12:6, col:43> 'int' contains-errors '<'     | | |-RecoveryExpr 0x13600e060 <col:6> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x13600e220 <col:18, col:43> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x13600e1e0 <col:18> 'int ()' Function 0x13600e128 'ARRAY_SIZE' 'int ()'     | |   `-RecoveryExpr 0x13600e200 <col:29> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13600e2f8 <line:13:3, col:34>     |   `-ArraySubscriptExpr 0x13600e2d8 <col:10, col:34> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x13600e2a8 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |     | `-RecoveryExpr 0x13600e268 <col:10> '<dependent type>' contains-errors lvalue     |     `-ImplicitCastExpr 0x13600e2c0 <col:25> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13600e288 <col:25> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x13600e348 <line:15:2, col:9>       `-IntegerLiteral 0x13600e328 <col:9> 'int' 0 ","19778":"`-FunctionDecl 0x159928318  line:1:1 invalid gst_mpegts_section_new 'int (int, int *, int)'   |-ParmVarDecl 0x1599280f0 <col:25, col:33> col:33 invalid pid 'int'   |-ParmVarDecl 0x1599281a8 <col:38, col:47> col:47 referenced invalid data 'int *'   |-ParmVarDecl 0x159928228 <col:53, col:59> col:59 invalid data_size 'int'   `-CompoundStmt 0x15a0093d0 <line:2:1, line:53:1>     |-IfStmt 0x15a008918 <line:10:3, line:11:10>     | |-CallExpr 0x15a008888 <line:10:7, col:49> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x159928728 <col:7> 'int ()' Function 0x159928670 'G_UNLIKELY' 'int ()'     | | `-BinaryOperator 0x15a008868 <col:19, col:48> 'int' contains-errors '<'     | |   |-RecoveryExpr 0x159928748 <col:19> '<dependent type>' contains-errors lvalue     | |   `-BinaryOperator 0x15a008848 <col:31, col:48> '<dependent type>' contains-errors '+'     | |     |-RecoveryExpr 0x15a008828 <col:31> '<dependent type>' contains-errors lvalue     | |     `-IntegerLiteral 0x159928780 <col:48> 'int' 3     | `-GotoStmt 0x15a008900 <line:11:5, col:10> 'short_packet' 0x15a0088b0     |-UnaryOperator 0x15a008b58 <line:20:3, col:7> '<dependent type>' contains-errors postfix '++' cannot overflow     | `-RecoveryExpr 0x15a008b30 <col:3> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x15a008b10 <col:3> 'int *' lvalue ParmVar 0x1599281a8 'data' 'int *'     |-IfStmt 0x15a0090c8 <line:25:3, line:41:3>     | |-RecoveryExpr 0x15a008c80 <line:25:7, col:13> '_Bool' contains-errors     | `-CompoundStmt 0x15a0090a8 <col:28, line:41:3>     |   |-CompoundAssignOperator 0x15a008e28 <line:29:5, col:13> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   | |-RecoveryExpr 0x15a008de0 <col:5> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x15a008dc0 <col:5> 'int *' lvalue ParmVar 0x1599281a8 'data' 'int *'     |   | `-IntegerLiteral 0x15a008e08 <col:13> 'int' 2     |   `-CompoundAssignOperator 0x15a008f28 <line:32:5, col:13> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |     |-RecoveryExpr 0x15a008ee0 <col:5> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x15a008ec0 <col:5> 'int *' lvalue ParmVar 0x1599281a8 'data' 'int *'     |     `-IntegerLiteral 0x15a008f08 <col:13> 'int' 2     `-LabelStmt 0x15a0093b0 <line:45:1, line:52:3> 'short_packet'       `-CompoundStmt 0x15a009398 <line:46:3, line:52:3>         `-CallExpr 0x15a009370 <line:50:5, col:17> '<dependent type>' contains-errors           |-DeclRefExpr 0x15a009330 <col:5> 'int ()' Function 0x15a009278 'g_free' 'int ()'           `-RecoveryExpr 0x15a009350 <col:13> '<dependent type>' contains-errors lvalue ","19392":"`-FunctionDecl 0x15a928318  line:1:1 invalid horDiff32 'int (int *, int *, int)'   |-ParmVarDecl 0x15a928128 <col:11, col:17> col:17 invalid tif 'int *'   |-ParmVarDecl 0x15a9281a8 <col:22, col:29> col:29 invalid cp0 'int *'   |-ParmVarDecl 0x15a928228 <col:34, col:43> col:43 invalid cc 'int'   `-CompoundStmt 0x15a941a40 <line:2:1, line:18:1>     `-IfStmt 0x15a941a20 <line:10:2, line:17:2>       |-BinaryOperator 0x15a941820 <line:10:6, col:11> 'int' contains-errors '>'       | |-RecoveryExpr 0x15a9287d0 <col:6> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x15a941800 <col:11> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x15a941a08 <col:19, line:17:2>         `-DoStmt 0x15a9419e8 <line:13:3, line:16:18>           |-CompoundStmt 0x15a941998 <line:13:6, line:16:3>           `-RecoveryExpr 0x15a9419c8 <col:12, col:17> '_Bool' contains-errors ","19281":"`-FunctionDecl 0x127928288  line:1:1 invalid wkbConvPointToShape 'int (int *, int *)'   |-ParmVarDecl 0x127928128 <col:21, col:29> col:29 invalid w 'int *'   |-ParmVarDecl 0x1279281a8 <col:32, col:42> col:42 invalid shape 'int *'   `-CompoundStmt 0x127941f70 <line:2:1, line:17:1>     |-DeclStmt 0x1279283c0 <line:3:3, col:11>     | `-VarDecl 0x127928358 <col:3, col:7> col:7 used type 'int'     |-CallExpr 0x127928570 <line:6:3, col:16> '<dependent type>' contains-errors     | |-DeclRefExpr 0x127928530 <col:3> 'int ()' Function 0x127928478 'wkbReadChar' 'int ()'     | `-RecoveryExpr 0x127928550 <col:15> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x127941858 <line:7:3, col:36> 'int' contains-errors '='     | |-DeclRefExpr 0x127928598 <col:3> 'int' lvalue Var 0x127928358 'type' 'int'     | `-CallExpr 0x127941828 <col:10, col:36> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x127928698 <col:10> 'int ()' Function 0x1279285e0 'wkbTypeMap' 'int ()'     |   |-RecoveryExpr 0x1279286b8 <col:21> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x127941800 <col:23, col:35> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1279287b8 <col:23> 'int ()' Function 0x127928700 'wkbReadInt' 'int ()'     |     `-RecoveryExpr 0x1279287d8 <col:34> '<dependent type>' contains-errors lvalue     |-IfStmt 0x127941958 <line:9:3, col:34>     | |-BinaryOperator 0x1279418f0 <col:7, col:15> 'int' contains-errors '!='     | | |-DeclRefExpr 0x127941878 <col:7> 'int' lvalue Var 0x127928358 'type' 'int'     | | `-RecoveryExpr 0x1279418d0 <col:15> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x127941948 <col:27, col:34>     |   `-RecoveryExpr 0x127941928 <col:34> '<dependent type>' contains-errors lvalue     |-IfStmt 0x127941a80 <line:11:3, col:50>     | |-RecoveryExpr 0x127941a18 <col:7, col:39> '_Bool' contains-errors     | `-ReturnStmt 0x127941a70 <col:43, col:50>     |   `-RecoveryExpr 0x127941a50 <col:50> '<dependent type>' contains-errors lvalue     |-CallExpr 0x127941ef8 <line:15:3, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x127941e20 <col:3> 'int ()' Function 0x127941d68 'msAddLineDirectly' 'int ()'     | |-RecoveryExpr 0x127941e40 <col:21> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x127941ee0 <col:28, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x127941ec0 <col:29> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x127941f60 <line:16:3, col:10>       `-RecoveryExpr 0x127941f40 <col:10> '<dependent type>' contains-errors lvalue ","20140":"`-FunctionDecl 0x107808a70  col:5 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x107808b70 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x107808bd8 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x107808c40 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x107808b18 <<invalid sloc>> Implicit 900 ","19284":"`-FunctionDecl 0x1379283a8  line:1:1 invalid add_fromto 'int (int *, int *, char *, char *)'   |-ParmVarDecl 0x137928128 <line:2:5, col:18> col:18 invalid spin 'int *'   |-ParmVarDecl 0x1379281a8 <line:3:5, col:15> col:15 invalid gap 'int *'   |-ParmVarDecl 0x137928228 <line:4:5, col:13> col:13 used from 'char *'   |-ParmVarDecl 0x1379282a8 <line:5:5, col:13> col:13 used to 'char *'   `-CompoundStmt 0x140008b68 <line:6:1, line:19:1>     |-DeclStmt 0x137928518 <line:8:5, col:25>     | `-VarDecl 0x1379284b0 <col:5, col:12> col:12 invalid word 'char'     `-IfStmt 0x140008b48 <line:10:5, line:18:5>       |-BinaryOperator 0x137928778 <line:10:9, col:28> 'int' contains-errors '=='       | |-CallExpr 0x1379286f0 <col:9, col:23> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x137928690 <col:9> 'int ()' Function 0x1379285d8 'ga_grow' 'int ()'       | | |-RecoveryExpr 0x1379286b0 <col:17> '<dependent type>' contains-errors lvalue       | | `-IntegerLiteral 0x1379286d0 <col:22> 'int' 1       | `-RecoveryExpr 0x137928758 <col:28> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x140008b30 <line:11:5, line:18:5>         `-UnaryOperator 0x140008b18 <line:17:2, col:9> '<dependent type>' contains-errors prefix '++' cannot overflow           `-CXXDependentScopeMemberExpr 0x140008ad0 <col:4, col:9> '<dependent type>' contains-errors lvalue ->ga_len             `-RecoveryExpr 0x140008ab0 <col:4> '<dependent type>' contains-errors lvalue ","20062":"`-FunctionDecl 0x14b008f88  col:17 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x14b009088 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x14b0090f0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x14b009158 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14b009030 <<invalid sloc>> Implicit 882 ","19276":"`-FunctionDecl 0x14f140b48  line:1:1 SES_Wait 'int (struct sess *, const struct transport *)'   |-ParmVarDecl 0x14f128648 <col:10, col:23> col:23 used sp 'struct sess *'   |-ParmVarDecl 0x14f140a28 <col:27, col:51> col:51 used xp 'const struct transport *'   `-CompoundStmt 0x14f144340 <line:2:1, line:30:1>     |-DeclStmt 0x14f140e38 <line:3:2, col:17>     | |-RecordDecl 0x14f140c48 <col:2, col:9> col:9 struct pool     | `-VarDecl 0x14f140db8 <col:2, col:15> col:15 used pp 'struct pool *'     |-DeclStmt 0x14f141038 <line:4:2, col:19>     | |-RecordDecl 0x14f140e50 <col:2, col:9> col:9 struct waited     | `-VarDecl 0x14f140fb8 <col:2, col:17> col:17 used wp 'struct waited *'     |-CallExpr 0x14f141228 <line:6:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14f141180 <col:2> 'int ()' Function 0x14f1410c8 'CHECK_OBJ_NOTNULL' 'int ()'     | |-DeclRefExpr 0x14f1411a0 <col:20> 'struct sess *' lvalue ParmVar 0x14f128648 'sp' 'struct sess *'     | `-RecoveryExpr 0x14f141208 <col:24> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14f141300 <line:7:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14f141258 <col:2> 'int ()' Function 0x14f1410c8 'CHECK_OBJ_NOTNULL' 'int ()'     | |-DeclRefExpr 0x14f141278 <col:20> 'const struct transport *' lvalue ParmVar 0x14f140a28 'xp' 'const struct transport *'     | `-RecoveryExpr 0x14f1412e0 <col:24> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14f1413b0 <line:8:2, col:11> 'struct pool *' contains-errors '='     | |-DeclRefExpr 0x14f141330 <col:2> 'struct pool *' lvalue Var 0x14f140db8 'pp' 'struct pool *'     | `-RecoveryExpr 0x14f141388 <col:7, col:11> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14f141350 <col:7> 'struct sess *' lvalue ParmVar 0x14f128648 'sp' 'struct sess *'     |-CallExpr 0x14f141478 <line:9:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14f1413d0 <col:2> 'int ()' Function 0x14f1410c8 'CHECK_OBJ_NOTNULL' 'int ()'     | |-DeclRefExpr 0x14f1413f0 <col:20> 'struct pool *' lvalue Var 0x14f140db8 'pp' 'struct pool *'     | `-RecoveryExpr 0x14f141458 <col:24> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14f141648 <line:10:2, col:19> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14f141588 <col:2> 'int ()' Function 0x14f1414d0 'assert' 'int ()'     | `-BinaryOperator 0x14f141628 <col:9, col:18> 'int' contains-errors '>'     |   |-RecoveryExpr 0x14f1415e0 <col:9, col:13> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14f1415a8 <col:9> 'struct sess *' lvalue ParmVar 0x14f128648 'sp' 'struct sess *'     |   `-IntegerLiteral 0x14f141608 <col:18> 'int' 0     |-CallExpr 0x14f1417d0 <line:12:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14f141750 <col:2> 'int ()' Function 0x14f141698 'VTCP_nonblocking' 'int ()'     | `-RecoveryExpr 0x14f1417a8 <col:19, col:23> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14f141770 <col:19> 'struct sess *' lvalue ParmVar 0x14f128648 'sp' 'struct sess *'     |-IfStmt 0x14f143a30 <line:15:2, line:19:2>     | |-RecoveryExpr 0x14f1419d0 <line:15:6, line:16:28> '_Bool' contains-errors     | `-CompoundStmt 0x14f143a10 <col:31, line:19:2>     |   |-CallExpr 0x14f1439c8 <line:17:3, col:34> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14f1438e0 <col:3> 'int ()' Function 0x14f143828 'SES_Delete' 'int ()'     |   | |-DeclRefExpr 0x14f143900 <col:14> 'struct sess *' lvalue ParmVar 0x14f128648 'sp' 'struct sess *'     |   | |-RecoveryExpr 0x14f143988 <col:18> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x14f1439a8 <col:31> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x14f143a00 <line:18:3>     |-BinaryOperator 0x14f143b70 <line:20:2, col:22> 'struct waited *' contains-errors '='     | |-DeclRefExpr 0x14f143a50 <col:2> 'struct waited *' lvalue Var 0x14f140fb8 'wp' 'struct waited *'     | `-ImplicitCastExpr 0x14f143b58 <col:7, col:22> 'struct waited *' contains-errors <BitCast>     |   `-CStyleCastExpr 0x14f143b30 <col:7, col:22> 'void *' contains-errors <Dependent>     |     `-CXXDependentScopeMemberExpr 0x14f143ad0 <col:14, col:22> '<dependent type>' contains-errors lvalue ->f     |       `-RecoveryExpr 0x14f143aa8 <col:14, col:18> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x14f143a70 <col:14> 'struct sess *' lvalue ParmVar 0x14f128648 'sp' 'struct sess *'     |-BinaryOperator 0x14f143d70 <line:22:2, col:15> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14f143ce8 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14f143cb0 <col:2> 'struct waited *' lvalue Var 0x14f140fb8 'wp' 'struct waited *'     | `-RecoveryExpr 0x14f143d48 <col:11, col:15> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14f143d10 <col:11> 'struct sess *' lvalue ParmVar 0x14f128648 'sp' 'struct sess *'     |-BinaryOperator 0x14f143e10 <line:23:2, col:14> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14f143dc8 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14f143d90 <col:2> 'struct waited *' lvalue Var 0x14f140fb8 'wp' 'struct waited *'     | `-DeclRefExpr 0x14f143df0 <col:14> 'struct sess *' lvalue ParmVar 0x14f128648 'sp' 'struct sess *'     `-BinaryOperator 0x14f143f50 <line:25:2, col:17> '<dependent type>' contains-errors '='       |-RecoveryExpr 0x14f143ec8 <col:2, col:6> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x14f143e90 <col:2> 'struct waited *' lvalue Var 0x14f140fb8 'wp' 'struct waited *'       `-RecoveryExpr 0x14f143f28 <col:13, col:17> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x14f143ef0 <col:13> 'struct sess *' lvalue ParmVar 0x14f128648 'sp' 'struct sess *' ","19464":"`-FunctionDecl 0x13000e350  line:1:13 init_vmcb 'void (struct vcpu_svm *)' static   |-ParmVarDecl 0x13000e248 <col:23, col:40> col:40 used svm 'struct vcpu_svm *'   `-CompoundStmt 0x13002c5f8 <line:2:1, line:109:1>     |-DeclStmt 0x1300268f8 <line:3:2, col:57>     | |-RecordDecl 0x130026648 <col:2, col:9> col:9 struct vmcb_control_area     | `-VarDecl 0x1300267b8 <col:2, col:50> col:28 used control 'struct vmcb_control_area *' cinit     |   `-UnaryOperator 0x1300268c8 <col:38, col:50> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-CXXDependentScopeMemberExpr 0x130026880 <col:39, col:50> '<dependent type>' contains-errors lvalue ->control     |       `-RecoveryExpr 0x130026858 <col:39, col:44> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x130026820 <col:39> 'struct vcpu_svm *' lvalue ParmVar 0x13000e248 'svm' 'struct vcpu_svm *'     |-DeclStmt 0x130026bb8 <line:4:2, col:48>     | |-RecordDecl 0x130026910 <col:2, col:9> col:9 struct vmcb_save_area     | `-VarDecl 0x130026a78 <col:2, col:44> col:25 used save 'struct vmcb_save_area *' cinit     |   `-UnaryOperator 0x130026b88 <col:32, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-CXXDependentScopeMemberExpr 0x130026b40 <col:33, col:44> '<dependent type>' contains-errors lvalue ->save     |       `-RecoveryExpr 0x130026b18 <col:33, col:38> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x130026ae0 <col:33> 'struct vcpu_svm *' lvalue ParmVar 0x13000e248 'svm' 'struct vcpu_svm *'     |-BinaryOperator 0x130026c98 <line:6:2, col:25> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x130026c30 <col:2, col:12> '<dependent type>' contains-errors lvalue .fpu_active     | | `-RecoveryExpr 0x130026c08 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x130026bd0 <col:2> 'struct vcpu_svm *' lvalue ParmVar 0x13000e248 'svm' 'struct vcpu_svm *'     | `-IntegerLiteral 0x130026c78 <col:25> 'int' 1     |-BinaryOperator 0x130026dc8 <line:7:2, col:26> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x130026d60 <col:2, col:17> '<dependent type>' contains-errors lvalue .hflags     | | `-CXXDependentScopeMemberExpr 0x130026d18 <col:2, col:12> '<dependent type>' contains-errors lvalue .arch     | |   `-RecoveryExpr 0x130026cf0 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x130026cb8 <col:2> 'struct vcpu_svm *' lvalue ParmVar 0x13000e248 'svm' 'struct vcpu_svm *'     | `-IntegerLiteral 0x130026da8 <col:26> 'int' 0     |-CallExpr 0x130026fb8 <line:9:2, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x130026f10 <col:2> 'int ()' Function 0x130026e58 'set_cr_intercept' 'int ()'     | |-DeclRefExpr 0x130026f30 <col:19> 'struct vcpu_svm *' lvalue ParmVar 0x13000e248 'svm' 'struct vcpu_svm *'     | `-RecoveryExpr 0x130026f98 <col:24> '<dependent type>' contains-errors lvalue     |-CallExpr 0x130027090 <line:10:2, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x130026fe8 <col:2> 'int ()' Function 0x130026e58 'set_cr_intercept' 'int ()'     | |-DeclRefExpr 0x130027008 <col:19> 'struct vcpu_svm *' lvalue ParmVar 0x13000e248 'svm' 'struct vcpu_svm *'     | `-RecoveryExpr 0x130027070 <col:24> '<dependent type>' contains-errors lvalue     |-CallExpr 0x130027168 <line:11:2, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1300270c0 <col:2> 'int ()' Function 0x130026e58 'set_cr_intercept' 'int ()'     | |-DeclRefExpr 0x1300270e0 <col:19> 'struct vcpu_svm *' lvalue ParmVar 0x13000e248 'svm' 'struct vcpu_svm *'     | `-RecoveryExpr 0x130027148 <col:24> '<dependent type>' contains-errors lvalue     |-CallExpr 0x130027240 <line:12:2, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x130027198 <col:2> 'int ()' Function 0x130026e58 'set_cr_intercept' 'int ()'     | |-DeclRefExpr 0x1300271b8 <col:19> 'struct vcpu_svm *' lvalue ParmVar 0x13000e248 'svm' 'struct vcpu_svm *'     | `-RecoveryExpr 0x130027220 <col:24> '<dependent type>' contains-errors lvalue     |-CallExpr 0x130027318 <line:13:2, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x130027270 <col:2> 'int ()' Function 0x130026e58 'set_cr_intercept' 'int ()'     | |-DeclRefExpr 0x130027290 <col:19> 'struct vcpu_svm *' lvalue ParmVar 0x13000e248 'svm' 'struct vcpu_svm *'     | `-RecoveryExpr 0x1300272f8 <col:24> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1300273f0 <line:14:2, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x130027348 <col:2> 'int ()' Function 0x130026e58 'set_cr_intercept' 'int ()'     | |-DeclRefExpr 0x130027368 <col:19> 'struct vcpu_svm *' lvalue ParmVar 0x13000e248 'svm' 'struct vcpu_svm *'     | `-RecoveryExpr 0x1300273d0 <col:24> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1300274c8 <line:15:2, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x130027420 <col:2> 'int ()' Function 0x130026e58 'set_cr_intercept' 'int ()'     | |-DeclRefExpr 0x130027440 <col:19> 'struct vcpu_svm *' lvalue ParmVar 0x13000e248 'svm' 'struct vcpu_svm *'     | `-RecoveryExpr 0x1300274a8 <col:24> '<dependent type>' contains-errors lvalue     |-CallExpr 0x130028e68 <line:17:2, col:23> 'int'     | |-ImplicitCastExpr 0x130028e50 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1300275d8 <col:2> 'int ()' Function 0x130027520 'set_dr_intercepts' 'int ()'     | `-ImplicitCastExpr 0x130028e90 <col:20> 'struct vcpu_svm *' <LValueToRValue>     |   `-DeclRefExpr 0x130028e00 <col:20> 'struct vcpu_svm *' lvalue ParmVar 0x13000e248 'svm' 'struct vcpu_svm *'     |-CallExpr 0x130029030 <line:19:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x130028f88 <col:2> 'int ()' Function 0x130028ed0 'set_exception_intercept' 'int ()'     | |-DeclRefExpr 0x130028fa8 <col:26> 'struct vcpu_svm *' lvalue ParmVar 0x13000e248 'svm' 'struct vcpu_svm *'     | `-RecoveryExpr 0x130029010 <col:31> '<dependent type>' contains-errors lvalue     |-CallExpr 0x130029108 <line:20:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x130029060 <col:2> 'int ()' Function 0x130028ed0 'set_exception_intercept' 'int ()'     | |-DeclRefExpr 0x130029080 <col:26> 'struct vcpu_svm *' lvalue ParmVar 0x13000e248 'svm' 'struct vcpu_svm *'     | `-RecoveryExpr 0x1300290e8 <col:31> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1300291e0 <line:21:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x130029138 <col:2> 'int ()' Function 0x130028ed0 'set_exception_intercept' 'int ()'     | |-DeclRefExpr 0x130029158 <col:26> 'struct vcpu_svm *' lvalue ParmVar 0x13000e248 'svm' 'struct vcpu_svm *'     | `-RecoveryExpr 0x1300291c0 <col:31> '<dependent type>' contains-errors lvalue     |-CallExpr 0x130029398 <line:23:2, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1300292f0 <col:2> 'int ()' Function 0x130029238 'set_intercept' 'int ()'     | |-DeclRefExpr 0x130029310 <col:16> 'struct vcpu_svm *' lvalue ParmVar 0x13000e248 'svm' 'struct vcpu_svm *'     | `-RecoveryExpr 0x130029378 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x130029470 <line:24:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1300293c8 <col:2> 'int ()' Function 0x130029238 'set_intercept' 'int ()'     | |-DeclRefExpr 0x1300293e8 <col:16> 'struct vcpu_svm *' lvalue ParmVar 0x13000e248 'svm' 'struct vcpu_svm *'     | `-RecoveryExpr 0x130029450 <col:21> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x130029ca8 <line:50:2, col:42> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x130029af8 <col:2, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x130029ac0 <col:2> 'struct vmcb_control_area *' contains-errors lvalue Var 0x1300267b8 'control' 'struct vmcb_control_area *'     | `-CallExpr 0x130029c80 <col:27, col:42> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x130029c00 <col:27> 'int ()' Function 0x130029b48 '__pa' 'int ()'     |   `-RecoveryExpr 0x130029c58 <col:32, col:37> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x130029c20 <col:32> 'struct vcpu_svm *' lvalue ParmVar 0x13000e248 'svm' 'struct vcpu_svm *'     |-CallExpr 0x13002a2a8 <line:53:2, col:20> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13002a210 <col:2> 'int ()' Function 0x130029d50 'init_seg' 'int ()'     | `-UnaryOperator 0x13002a290 <col:11, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13002a268 <col:12, col:18> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13002a230 <col:12> 'struct vmcb_save_area *' contains-errors lvalue Var 0x130026a78 'save' 'struct vmcb_save_area *'     |-CallExpr 0x13002a368 <line:54:2, col:20> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13002a2d0 <col:2> 'int ()' Function 0x130029d50 'init_seg' 'int ()'     | `-UnaryOperator 0x13002a350 <col:11, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13002a328 <col:12, col:18> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13002a2f0 <col:12> 'struct vmcb_save_area *' contains-errors lvalue Var 0x130026a78 'save' 'struct vmcb_save_area *'     |-CallExpr 0x13002a428 <line:55:2, col:20> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13002a390 <col:2> 'int ()' Function 0x130029d50 'init_seg' 'int ()'     | `-UnaryOperator 0x13002a410 <col:11, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13002a3e8 <col:12, col:18> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13002a3b0 <col:12> 'struct vmcb_save_area *' contains-errors lvalue Var 0x130026a78 'save' 'struct vmcb_save_area *'     |-CallExpr 0x13002a4e8 <line:56:2, col:20> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13002a450 <col:2> 'int ()' Function 0x130029d50 'init_seg' 'int ()'     | `-UnaryOperator 0x13002a4d0 <col:11, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13002a4a8 <col:12, col:18> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13002a470 <col:12> 'struct vmcb_save_area *' contains-errors lvalue Var 0x130026a78 'save' 'struct vmcb_save_area *'     |-CallExpr 0x13002a5a8 <line:57:2, col:20> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13002a510 <col:2> 'int ()' Function 0x130029d50 'init_seg' 'int ()'     | `-UnaryOperator 0x13002a590 <col:11, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13002a568 <col:12, col:18> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13002a530 <col:12> 'struct vmcb_save_area *' contains-errors lvalue Var 0x130026a78 'save' 'struct vmcb_save_area *'     |-BinaryOperator 0x13002a698 <line:59:2, col:22> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13002a630 <col:2, col:11> '<dependent type>' contains-errors lvalue .selector     | | `-RecoveryExpr 0x13002a608 <col:2, col:8> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13002a5d0 <col:2> 'struct vmcb_save_area *' contains-errors lvalue Var 0x130026a78 'save' 'struct vmcb_save_area *'     | `-IntegerLiteral 0x13002a678 <col:22> 'int' 61440     |-BinaryOperator 0x13002a780 <line:60:2, col:18> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13002a718 <col:2, col:11> '<dependent type>' contains-errors lvalue .base     | | `-RecoveryExpr 0x13002a6f0 <col:2, col:8> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13002a6b8 <col:2> 'struct vmcb_save_area *' contains-errors lvalue Var 0x130026a78 'save' 'struct vmcb_save_area *'     | `-IntegerLiteral 0x13002a760 <col:18> 'unsigned int' 4294901760     |-BinaryOperator 0x13002a910 <line:64:2, col:19> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13002a8a8 <col:2, col:11> '<dependent type>' contains-errors lvalue .limit     | | `-RecoveryExpr 0x13002a880 <col:2, col:8> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13002a848 <col:2> 'struct vmcb_save_area *' contains-errors lvalue Var 0x130026a78 'save' 'struct vmcb_save_area *'     | `-IntegerLiteral 0x13002a8f0 <col:19> 'int' 65535     |-BinaryOperator 0x13002a9f8 <line:66:2, col:21> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13002a990 <col:2, col:13> '<dependent type>' contains-errors lvalue .limit     | | `-RecoveryExpr 0x13002a968 <col:2, col:8> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13002a930 <col:2> 'struct vmcb_save_area *' contains-errors lvalue Var 0x130026a78 'save' 'struct vmcb_save_area *'     | `-IntegerLiteral 0x13002a9d8 <col:21> 'int' 65535     |-BinaryOperator 0x13002aae0 <line:67:2, col:21> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13002aa78 <col:2, col:13> '<dependent type>' contains-errors lvalue .limit     | | `-RecoveryExpr 0x13002aa50 <col:2, col:8> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13002aa18 <col:2> 'struct vmcb_save_area *' contains-errors lvalue Var 0x130026a78 'save' 'struct vmcb_save_area *'     | `-IntegerLiteral 0x13002aac0 <col:21> 'int' 65535     |-CallExpr 0x13002aea8 <line:72:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13002adf0 <col:2> 'int ()' Function 0x13002ad38 'svm_set_efer' 'int ()'     | |-UnaryOperator 0x13002ae70 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x13002ae48 <col:16, col:21> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13002ae10 <col:16> 'struct vcpu_svm *' lvalue ParmVar 0x13000e248 'svm' 'struct vcpu_svm *'     | `-IntegerLiteral 0x13002ae88 <col:27> 'int' 0     |-BinaryOperator 0x13002af58 <line:73:2, col:14> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13002af10 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13002aed8 <col:2> 'struct vmcb_save_area *' contains-errors lvalue Var 0x130026a78 'save' 'struct vmcb_save_area *'     | `-IntegerLiteral 0x13002af38 <col:14> 'unsigned int' 4294905840     |-CallExpr 0x13002b110 <line:74:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13002b058 <col:2> 'int ()' Function 0x13002afa0 'kvm_set_rflags' 'int ()'     | |-UnaryOperator 0x13002b0d8 <col:17, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x13002b0b0 <col:18, col:23> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13002b078 <col:18> 'struct vcpu_svm *' lvalue ParmVar 0x13000e248 'svm' 'struct vcpu_svm *'     | `-IntegerLiteral 0x13002b0f0 <col:29> 'int' 2     |-BinaryOperator 0x13002b1c0 <line:75:2, col:14> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13002b178 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13002b140 <col:2> 'struct vmcb_save_area *' contains-errors lvalue Var 0x130026a78 'save' 'struct vmcb_save_area *'     | `-IntegerLiteral 0x13002b1a0 <col:14> 'int' 65520     |-CallExpr 0x13002b620 <line:80:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13002b588 <col:2> 'int ()' Function 0x13002b4d0 'kvm_mmu_reset_context' 'int ()'     | `-UnaryOperator 0x13002b608 <col:24, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13002b5e0 <col:25, col:30> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13002b5a8 <col:25> 'struct vcpu_svm *' lvalue ParmVar 0x13000e248 'svm' 'struct vcpu_svm *'     |-IfStmt 0x13002bde8 <line:85:2, line:95:2>     | |-RecoveryExpr 0x13002b6a8 <line:85:6> '_Bool' contains-errors     | `-CompoundStmt 0x13002bdb8 <col:19, line:95:2>     |   |-BinaryOperator 0x13002b748 <line:87:3, col:25> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x13002b700 <col:3, col:12> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x13002b6c8 <col:3> 'struct vmcb_control_area *' contains-errors lvalue Var 0x1300267b8 'control' 'struct vmcb_control_area *'     |   | `-IntegerLiteral 0x13002b728 <col:25> 'int' 1     |   |-BinaryOperator 0x13002bc58 <line:92:3, col:32> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x13002bb40 <col:3, col:9> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x13002bb08 <col:3> 'struct vmcb_save_area *' contains-errors lvalue Var 0x130026a78 'save' 'struct vmcb_save_area *'     |   | `-CXXDependentScopeMemberExpr 0x13002bc10 <col:17, col:32> '<dependent type>' contains-errors lvalue .pat     |   |   `-CXXDependentScopeMemberExpr 0x13002bbc8 <col:17, col:27> '<dependent type>' contains-errors lvalue .arch     |   |     `-RecoveryExpr 0x13002bba0 <col:17, col:22> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x13002bb68 <col:17> 'struct vcpu_svm *' lvalue ParmVar 0x13000e248 'svm' 'struct vcpu_svm *'     |   |-BinaryOperator 0x13002bcf8 <line:93:3, col:15> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x13002bcb0 <col:3, col:9> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x13002bc78 <col:3> 'struct vmcb_save_area *' contains-errors lvalue Var 0x130026a78 'save' 'struct vmcb_save_area *'     |   | `-IntegerLiteral 0x13002bcd8 <col:15> 'int' 0     |   `-BinaryOperator 0x13002bd98 <line:94:3, col:15> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x13002bd50 <col:3, col:9> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x13002bd18 <col:3> 'struct vmcb_save_area *' contains-errors lvalue Var 0x130026a78 'save' 'struct vmcb_save_area *'     |     `-IntegerLiteral 0x13002bd78 <col:15> 'int' 0     |-BinaryOperator 0x13002be88 <line:96:2, col:25> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13002be40 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13002be08 <col:2> 'struct vcpu_svm *' lvalue ParmVar 0x13000e248 'svm' 'struct vcpu_svm *'     | `-IntegerLiteral 0x13002be68 <col:25> 'int' 0     |-BinaryOperator 0x13002bf70 <line:98:2, col:21> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13002bf08 <col:2, col:14> '<dependent type>' contains-errors lvalue .vmcb     | | `-RecoveryExpr 0x13002bee0 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13002bea8 <col:2> 'struct vcpu_svm *' lvalue ParmVar 0x13000e248 'svm' 'struct vcpu_svm *'     | `-IntegerLiteral 0x13002bf50 <col:21> 'int' 0     |-BinaryOperator 0x13002c0a0 <line:99:2, col:26> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13002c038 <col:2, col:17> '<dependent type>' contains-errors lvalue .hflags     | | `-CXXDependentScopeMemberExpr 0x13002bff0 <col:2, col:12> '<dependent type>' contains-errors lvalue .arch     | |   `-RecoveryExpr 0x13002bfc8 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x13002bf90 <col:2> 'struct vcpu_svm *' lvalue ParmVar 0x13000e248 'svm' 'struct vcpu_svm *'     | `-IntegerLiteral 0x13002c080 <col:26> 'int' 0     |-IfStmt 0x13002c2d8 <line:101:2, line:104:2>     | |-RecoveryExpr 0x13002c1c0 <line:101:6, col:42> '_Bool' contains-errors     | `-CompoundStmt 0x13002c2c0 <col:45, line:104:2>     |   `-BinaryOperator 0x13002c260 <line:102:3, col:33> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x13002c218 <col:3, col:12> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x13002c1e0 <col:3> 'struct vmcb_control_area *' contains-errors lvalue Var 0x1300267b8 'control' 'struct vmcb_control_area *'     |     `-IntegerLiteral 0x13002c240 <col:33> 'int' 3000     |-CallExpr 0x13002c458 <line:106:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13002c3d8 <col:2> 'int ()' Function 0x13002c320 'mark_all_dirty' 'int ()'     | `-RecoveryExpr 0x13002c430 <col:17, col:22> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x13002c3f8 <col:17> 'struct vcpu_svm *' lvalue ParmVar 0x13000e248 'svm' 'struct vcpu_svm *'     `-CallExpr 0x13002c5b8 <line:108:2, col:16> 'int'       |-ImplicitCastExpr 0x13002c5a0 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x13002c560 <col:2> 'int ()' Function 0x13002c4a8 'enable_gif' 'int ()'       `-ImplicitCastExpr 0x13002c5e0 <col:13> 'struct vcpu_svm *' <LValueToRValue>         `-DeclRefExpr 0x13002c580 <col:13> 'struct vcpu_svm *' lvalue ParmVar 0x13000e248 'svm' 'struct vcpu_svm *' ","19452":"`-FunctionDecl 0x12100de80  line:1:6 invalid spl_array_iterator_append 'void (int *, int *)'   |-ParmVarDecl 0x12100dd28 <col:32, col:38> col:38 invalid object 'int *'   |-ParmVarDecl 0x12100dda8 <col:46, col:52> col:52 invalid append_value 'int *'   `-CompoundStmt 0x1210278d0 <line:2:1, line:20:1>     |-IfStmt 0x12100e310 <line:6:2, line:9:2>     | |-UnaryOperator 0x12100e1b8 <line:6:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12100e1a0 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x12100e180 <col:7> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12100e2f8 <col:12, line:9:2>     |   `-ReturnStmt 0x12100e2e8 <line:8:3>     |-IfStmt 0x121027620 <line:11:2, line:14:2>     | |-BinaryOperator 0x1210275a0 <line:11:6, col:33> 'int' contains-errors '=='     | | |-CallExpr 0x121027558 <col:6, col:28> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x121027410 <col:6> 'int ()' Function 0x12100e358 'Z_TYPE_P' 'int ()'     | | | `-CXXDependentScopeMemberExpr 0x121027510 <col:15, col:23> '<dependent type>' contains-errors lvalue ->array     | | |   `-RecoveryExpr 0x1210274f0 <col:15> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x121027580 <col:33> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x121027608 <col:44, line:14:2>     |   `-ReturnStmt 0x1210275f8 <line:13:3>     `-IfStmt 0x1210278b0 <line:17:2, line:19:2>       |-RecoveryExpr 0x121027780 <line:17:6, col:15> '_Bool' contains-errors       `-CompoundStmt 0x1210278a0 <col:20, line:19:2> ","19590":"`-FunctionDecl 0x1329459f8  col:12 implicit used strdup 'char *(const char *)' extern   |-ParmVarDecl 0x132945af8 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x132945aa0 <<invalid sloc>> Implicit 950 ","19750":"`-FunctionDecl 0x12b128758  line:1:12 vt_io_fontreset 'int (struct console_font_op *)' static   |-ParmVarDecl 0x12b128648 <col:28, col:52> col:52 used op 'struct console_font_op *'   `-CompoundStmt 0x12b141560 <line:2:1, line:21:1>     |-DeclStmt 0x12b140ad0 <line:3:2, col:9>     | `-VarDecl 0x12b140a68 <col:2, col:6> col:6 used ret 'int'     |-IfStmt 0x12b140d78 <line:5:2, line:8:2>     | |-CallExpr 0x12b140c90 <line:5:6, col:43> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x12b140c10 <col:6> 'int ()' Function 0x12b140b58 '__is_defined' 'int ()'     | | `-RecoveryExpr 0x12b140c70 <col:19> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12b140d60 <col:46, line:8:2>     |   `-ReturnStmt 0x12b140d50 <line:7:3, col:11>     |     `-UnaryOperator 0x12b140d38 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x12b140d20 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x12b140d00 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12b140e50 <line:10:2, col:11> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12b140dd0 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12b140d98 <col:2> 'struct console_font_op *' lvalue ParmVar 0x12b128648 'op' 'struct console_font_op *'     | `-RecoveryExpr 0x12b140e30 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12b140f28 <line:11:2, col:13> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12b140ea8 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12b140e70 <col:2> 'struct console_font_op *' lvalue ParmVar 0x12b128648 'op' 'struct console_font_op *'     | `-RecoveryExpr 0x12b140f08 <col:13> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12b141138 <line:13:2, line:14:10>     | |-ImplicitCastExpr 0x12b1410d8 <line:13:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x12b1410b8 <col:6> 'int' lvalue Var 0x12b140a68 'ret' 'int'     | `-ReturnStmt 0x12b141128 <line:14:3, col:10>     |   `-ImplicitCastExpr 0x12b141110 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x12b1410f0 <col:10> 'int' lvalue Var 0x12b140a68 'ret' 'int'     |-CallExpr 0x12b1412a8 <line:16:2, col:15> 'int'     | `-ImplicitCastExpr 0x12b141290 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x12b141238 <col:2> 'int ()' Function 0x12b141180 'console_lock' 'int ()'     |-CallExpr 0x12b141510 <line:18:2, col:17> 'int'     | `-ImplicitCastExpr 0x12b1414f8 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x12b1414d8 <col:2> 'int ()' Function 0x12b141420 'console_unlock' 'int ()'     `-ReturnStmt 0x12b141550 <line:20:2, col:9>       `-IntegerLiteral 0x12b141530 <col:9> 'int' 0 ","19387":"`-FunctionDecl 0x12201e9c8  line:1:1 invalid dwg_obj_is_subentity 'int (const int *)'   |-ParmVarDecl 0x12201e8f0 <col:23, col:41> col:41 invalid obj 'const int *'   `-CompoundStmt 0x12201eec8 <line:2:1, line:9:1>     `-DeclStmt 0x12201eb60 <line:3:3, col:38>       `-VarDecl 0x12201ea90 <col:3, col:34> col:22 used type 'const unsigned int' cinit         `-CXXDependentScopeMemberExpr 0x12201eb18 <col:29, col:34> '<dependent type>' contains-errors lvalue ->type           `-RecoveryExpr 0x12201eaf8 <col:29> '<dependent type>' contains-errors lvalue ","19847":"`-FunctionDecl 0x12600add8  col:5 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x12600aed8 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x12600ae80 <<invalid sloc>> Implicit 873 ","19748":"`-FunctionDecl 0x12190b3c8  col:25 invalid initDbSession 'int (int)' inline   |-ParmVarDecl 0x12190b2f0 <col:39, <invalid sloc>> col:52 invalid 'int'   `-CompoundStmt 0x12190b478 <col:56, col:57> ","20068":"`-FunctionDecl 0x159928b18  line:1:1 invalid mldv2_query_print 'int (int *, const char *, int)'   |-ParmVarDecl 0x159928928 <col:19, col:39> col:39 invalid ndo 'int *'   |-ParmVarDecl 0x1599289a8 <col:44, col:58> col:58 used bp 'const char *'   |-ParmVarDecl 0x159928a28 <col:62, col:68> col:68 invalid len 'int'   `-CompoundStmt 0x1599457e0 <line:2:1, line:64:1>     |-DeclStmt 0x159928eb0 <line:3:5, col:64>     | |-RecordDecl 0x159928bd8 <col:11, col:18> col:18 struct icmp6_hdr     | `-VarDecl 0x159928d48 <col:5, col:62> col:29 used icp 'const struct icmp6_hdr *' cinit     |   `-CStyleCastExpr 0x159928e70 <col:35, col:62> 'const struct icmp6_hdr *' <BitCast>     |     `-ImplicitCastExpr 0x159928e58 <col:62> 'const char *' <LValueToRValue> part_of_explicit_cast     |       `-DeclRefExpr 0x159928db0 <col:62> 'const char *' lvalue ParmVar 0x1599289a8 'bp' 'const char *'     |-DeclStmt 0x159928fe0 <line:5:5, col:17>     | |-VarDecl 0x159928ee0 <col:5, col:9> col:9 used mrt 'int'     | `-VarDecl 0x159928f60 <col:5, col:14> col:14 used qqi 'int'     |-DeclStmt 0x159943080 <line:7:5, col:21>     | `-VarDecl 0x159943018 <col:5, col:20> col:20 invalid i 'int' register     |-IfStmt 0x1599433c8 <line:10:5, line:13:5>     | |-BinaryOperator 0x1599430d8 <line:10:9, col:15> 'int' contains-errors '<'     | | |-RecoveryExpr 0x159943098 <col:9> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x1599430b8 <col:15> 'int' 28     | `-CompoundStmt 0x1599433a8 <col:19, line:13:5>     |   |-CallExpr 0x159943370 <line:11:13, col:38> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x159943250 <col:13> 'int ()' Function 0x159943198 'ND_PRINT' 'int ()'     |   | `-ParenExpr 0x159943350 <col:22, col:37> '<dependent type>' contains-errors     |   |   `-BinaryOperator 0x159943330 <col:23, col:34> '<dependent type>' contains-errors ','     |   |     |-BinaryOperator 0x1599432f0 <col:23, col:27> 'char[4]' contains-errors ','     |   |     | |-RecoveryExpr 0x159943270 <col:23> '<dependent type>' contains-errors lvalue     |   |     | `-StringLiteral 0x1599432d0 <col:27> 'char[4]' lvalue \"STR\"     |   |     `-RecoveryExpr 0x159943310 <col:34> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x159943398 <line:12:2>     |-CallExpr 0x1599439c0 <line:14:5, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1599434c8 <col:5> 'int ()' Function 0x159943410 'ND_TCHECK' 'int ()'     | `-ArraySubscriptExpr 0x1599439a0 <col:15, col:34> '<dependent type>' contains-errors lvalue     |   |-ImplicitCastExpr 0x159943988 <col:15, col:20> '<dependent type>' contains-errors <LValueToRValue>     |   | `-RecoveryExpr 0x159943940 <col:15, col:20> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x1599434e8 <col:15> 'const struct icmp6_hdr *' lvalue Var 0x159928d48 'icp' 'const struct icmp6_hdr *'     |   `-IntegerLiteral 0x159943968 <col:33> 'int' 0     |-BinaryOperator 0x159943c00 <line:15:5, col:47> 'int' contains-errors '='     | |-DeclRefExpr 0x1599439e8 <col:5> 'int' lvalue Var 0x159928ee0 'mrt' 'int'     | `-CallExpr 0x159943bd8 <col:11, col:47> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x159943ae8 <col:11> 'int ()' Function 0x159943a30 'EXTRACT_16BITS' 'int ()'     |   `-UnaryOperator 0x159943bc0 <col:26, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-ArraySubscriptExpr 0x159943ba0 <col:27, col:46> '<dependent type>' contains-errors lvalue     |       |-ImplicitCastExpr 0x159943b88 <col:27, col:32> '<dependent type>' contains-errors <LValueToRValue>     |       | `-RecoveryExpr 0x159943b40 <col:27, col:32> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x159943b08 <col:27> 'const struct icmp6_hdr *' lvalue Var 0x159928d48 'icp' 'const struct icmp6_hdr *'     |       `-IntegerLiteral 0x159943b68 <col:45> 'int' 0     |-IfStmt 0x15b008cd8 <line:16:5, line:20:5> has_else     | |-BinaryOperator 0x159943cb0 <line:16:9, col:15> 'int' '<'     | | |-ImplicitCastExpr 0x159943c98 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x159943c78 <col:9> 'int' lvalue Var 0x159928ee0 'mrt' 'int'     | | `-IntegerLiteral 0x159943c38 <col:15> 'int' 32768     | |-CompoundStmt 0x159943d80 <col:22, line:18:5>     | | `-BinaryOperator 0x159943d60 <line:17:2, col:8> 'int' '='     | |   |-DeclRefExpr 0x159943cd0 <col:2> 'int' lvalue Var 0x159928ee0 'mrt' 'int'     | |   `-ImplicitCastExpr 0x159943d48 <col:8> 'int' <LValueToRValue>     | |     `-DeclRefExpr 0x159943d28 <col:8> 'int' lvalue Var 0x159928ee0 'mrt' 'int'     | `-CompoundStmt 0x15b008cc0 <line:18:12, line:20:5>     |   `-BinaryOperator 0x15b008ca0 <line:19:9, col:71> 'int' '='     |     |-DeclRefExpr 0x159943d98 <col:9> 'int' lvalue Var 0x159928ee0 'mrt' 'int'     |     `-BinaryOperator 0x15b008c80 <col:15, col:71> 'int' '<<'     |       |-ParenExpr 0x159943ec8 <col:15, col:39> 'int'     |       | `-BinaryOperator 0x159943ea8 <col:16, col:33> 'int' '|'     |       |   |-ParenExpr 0x159943e68 <col:16, col:29> 'int'     |       |   | `-BinaryOperator 0x159943e48 <col:17, col:23> 'int' '&'     |       |   |   |-ImplicitCastExpr 0x159943e30 <col:17> 'int' <LValueToRValue>     |       |   |   | `-DeclRefExpr 0x159943e10 <col:17> 'int' lvalue Var 0x159928ee0 'mrt' 'int'     |       |   |   `-IntegerLiteral 0x159943dd0 <col:23> 'int' 4095     |       |   `-IntegerLiteral 0x159943e88 <col:33> 'int' 4096     |       `-ParenExpr 0x15b008c60 <col:44, col:71> 'int'     |         `-BinaryOperator 0x15b008c40 <col:45, col:70> 'int' '+'     |           |-ParenExpr 0x15b008c00 <col:45, col:66> 'int'     |           | `-BinaryOperator 0x159943fd8 <col:46, col:64> 'int' '>>'     |           |   |-ParenExpr 0x159943f98 <col:46, col:59> 'int'     |           |   | `-BinaryOperator 0x159943f78 <col:47, col:53> 'int' '&'     |           |   |   |-ImplicitCastExpr 0x159943f60 <col:47> 'int' <LValueToRValue>     |           |   |   | `-DeclRefExpr 0x159943f40 <col:47> 'int' lvalue Var 0x159928ee0 'mrt' 'int'     |           |   |   `-IntegerLiteral 0x159943f00 <col:53> 'int' 28672     |           |   `-IntegerLiteral 0x159943fb8 <col:64> 'int' 12     |           `-IntegerLiteral 0x15b008c20 <col:70> 'int' 3     |-IfStmt 0x15b008e90 <line:21:5, line:23:5>     | |-CXXDependentScopeMemberExpr 0x15b008d28 <line:21:9, col:14> '<dependent type>' contains-errors lvalue ->ndo_vflag     | | `-RecoveryExpr 0x15b008d08 <col:9> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x15b008e78 <col:25, line:23:5>     |   `-CallExpr 0x15b008e50 <line:22:13, col:38> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x15b008d70 <col:13> 'int ()' Function 0x159943198 'ND_PRINT' 'int ()'     |     `-ParenExpr 0x15b008e30 <col:22, col:37> 'int' contains-errors     |       `-BinaryOperator 0x15b008e10 <col:23, col:34> 'int' contains-errors ','     |         |-BinaryOperator 0x15b008dd0 <col:23, col:27> 'char[4]' contains-errors ','     |         | |-RecoveryExpr 0x15b008d90 <col:23> '<dependent type>' contains-errors lvalue     |         | `-StringLiteral 0x15b008db0 <col:27> 'char[4]' lvalue \"STR\"     |         `-DeclRefExpr 0x15b008df0 <col:34> 'int' lvalue Var 0x159928ee0 'mrt' 'int'     |-CallExpr 0x15b0093c8 <line:25:5, col:54> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15b009128 <col:5> 'int ()' Function 0x159943198 'ND_PRINT' 'int ()'     | `-ParenExpr 0x15b0093a8 <col:14, col:53> '<dependent type>' contains-errors     |   `-BinaryOperator 0x15b009388 <col:15, col:52> '<dependent type>' contains-errors ','     |     |-BinaryOperator 0x15b009188 <col:15, col:19> 'char[4]' contains-errors ','     |     | |-RecoveryExpr 0x15b009148 <col:15> '<dependent type>' contains-errors lvalue     |     | `-StringLiteral 0x15b009168 <col:19> 'char[4]' lvalue \"STR\"     |     `-CallExpr 0x15b009358 <col:26, col:52> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x15b009288 <col:26> 'int ()' Function 0x15b0091d0 'ip6addr_string' 'int ()'     |       |-RecoveryExpr 0x15b0092a8 <col:41> '<dependent type>' contains-errors lvalue     |       `-UnaryOperator 0x15b009340 <col:46, col:51> 'const char *' prefix '&' cannot overflow     |         `-ArraySubscriptExpr 0x15b009320 <col:47, col:51> 'const char' lvalue     |           |-ImplicitCastExpr 0x15b009308 <col:47> 'const char *' <LValueToRValue>     |           | `-DeclRefExpr 0x15b0092c8 <col:47> 'const char *' lvalue ParmVar 0x1599289a8 'bp' 'const char *'     |           `-IntegerLiteral 0x15b0092e8 <col:50> 'int' 8     |-IfStmt 0x159944b68 <line:27:5, line:41:5>     | |-CXXDependentScopeMemberExpr 0x15b009410 <line:27:9, col:14> '<dependent type>' contains-errors lvalue ->ndo_vflag     | | `-RecoveryExpr 0x15b0093f0 <col:9> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x159944b30 <col:25, line:41:5>     |   |-CallExpr 0x15b009538 <line:28:9, col:25> 'int'     |   | |-ImplicitCastExpr 0x15b009520 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x15b009458 <col:9> 'int ()' Function 0x159943410 'ND_TCHECK' 'int ()'     |   | `-ImplicitCastExpr 0x15b009578 <col:19, col:24> 'int' <IntegralCast>     |   |   `-ImplicitCastExpr 0x15b009560 <col:19, col:24> 'char' <LValueToRValue>     |   |     `-ArraySubscriptExpr 0x15b0094d0 <col:19, col:24> 'const char' lvalue     |   |       |-ImplicitCastExpr 0x15b0094b8 <col:19> 'const char *' <LValueToRValue>     |   |       | `-DeclRefExpr 0x15b009478 <col:19> 'const char *' lvalue ParmVar 0x1599289a8 'bp' 'const char *'     |   |       `-IntegerLiteral 0x15b009498 <col:22> 'int' 25     |   |-IfStmt 0x15b009758 <line:29:2, line:31:2>     |   | |-BinaryOperator 0x15b009658 <line:29:6, col:15> 'int' '&'     |   | | |-ImplicitCastExpr 0x15b009640 <col:6, col:11> 'int' <IntegralCast>     |   | | | `-ImplicitCastExpr 0x15b009628 <col:6, col:11> 'char' <LValueToRValue>     |   | | |   `-ArraySubscriptExpr 0x15b0095e8 <col:6, col:11> 'const char' lvalue     |   | | |     |-ImplicitCastExpr 0x15b0095d0 <col:6> 'const char *' <LValueToRValue>     |   | | |     | `-DeclRefExpr 0x15b009590 <col:6> 'const char *' lvalue ParmVar 0x1599289a8 'bp' 'const char *'     |   | | |     `-IntegerLiteral 0x15b0095b0 <col:9> 'int' 24     |   | | `-IntegerLiteral 0x15b009608 <col:15> 'int' 8     |   | `-CompoundStmt 0x15b009740 <col:21, line:31:2>     |   |   `-CallExpr 0x15b009718 <line:30:3, col:23> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x15b009678 <col:3> 'int ()' Function 0x159943198 'ND_PRINT' 'int ()'     |   |     `-ParenExpr 0x15b0096f8 <col:12, col:22> 'char[4]' contains-errors     |   |       `-BinaryOperator 0x15b0096d8 <col:13, col:17> 'char[4]' contains-errors ','     |   |         |-RecoveryExpr 0x15b009698 <col:13> '<dependent type>' contains-errors lvalue     |   |         `-StringLiteral 0x15b0096b8 <col:17> 'char[4]' lvalue \"STR\"     |   |-IfStmt 0x15b009a48 <line:32:2, line:34:2>     |   | |-BinaryOperator 0x15b009840 <line:32:6, col:15> 'int' '&'     |   | | |-ImplicitCastExpr 0x15b009828 <col:6, col:11> 'int' <IntegralCast>     |   | | | `-ImplicitCastExpr 0x15b009810 <col:6, col:11> 'char' <LValueToRValue>     |   | | |   `-ArraySubscriptExpr 0x15b0097d0 <col:6, col:11> 'const char' lvalue     |   | | |     |-ImplicitCastExpr 0x15b0097b8 <col:6> 'const char *' <LValueToRValue>     |   | | |     | `-DeclRefExpr 0x15b009778 <col:6> 'const char *' lvalue ParmVar 0x1599289a8 'bp' 'const char *'     |   | | |     `-IntegerLiteral 0x15b009798 <col:9> 'int' 24     |   | | `-IntegerLiteral 0x15b0097f0 <col:15> 'int' 7     |   | `-CompoundStmt 0x15b009a30 <col:21, line:34:2>     |   |   `-CallExpr 0x15b009a08 <line:33:3, col:38> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x15b009860 <col:3> 'int ()' Function 0x159943198 'ND_PRINT' 'int ()'     |   |     `-ParenExpr 0x15b0099e8 <col:12, col:37> 'int' contains-errors     |   |       `-BinaryOperator 0x15b0099c8 <col:13, col:33> 'int' contains-errors ','     |   |         |-BinaryOperator 0x15b0098c0 <col:13, col:17> 'char[4]' contains-errors ','     |   |         | |-RecoveryExpr 0x15b009880 <col:13> '<dependent type>' contains-errors lvalue     |   |         | `-StringLiteral 0x15b0098a0 <col:17> 'char[4]' lvalue \"STR\"     |   |         `-BinaryOperator 0x15b0099a8 <col:24, col:33> 'int' '&'     |   |           |-ImplicitCastExpr 0x15b009990 <col:24, col:29> 'int' <IntegralCast>     |   |           | `-ImplicitCastExpr 0x15b009978 <col:24, col:29> 'char' <LValueToRValue>     |   |           |   `-ArraySubscriptExpr 0x15b009938 <col:24, col:29> 'const char' lvalue     |   |           |     |-ImplicitCastExpr 0x15b009920 <col:24> 'const char *' <LValueToRValue>     |   |           |     | `-DeclRefExpr 0x15b0098e0 <col:24> 'const char *' lvalue ParmVar 0x1599289a8 'bp' 'const char *'     |   |           |     `-IntegerLiteral 0x15b009900 <col:27> 'int' 24     |   |           `-IntegerLiteral 0x15b009958 <col:33> 'int' 7     |   |-IfStmt 0x1599449f8 <line:35:2, line:39:2> has_else     |   | |-BinaryOperator 0x15b009b30 <line:35:6, col:15> 'int' '<'     |   | | |-ImplicitCastExpr 0x15b009b18 <col:6, col:11> 'int' <IntegralCast>     |   | | | `-ImplicitCastExpr 0x15b009b00 <col:6, col:11> 'char' <LValueToRValue>     |   | | |   `-ArraySubscriptExpr 0x15b009ac0 <col:6, col:11> 'const char' lvalue     |   | | |     |-ImplicitCastExpr 0x15b009aa8 <col:6> 'const char *' <LValueToRValue>     |   | | |     | `-DeclRefExpr 0x15b009a68 <col:6> 'const char *' lvalue ParmVar 0x1599289a8 'bp' 'const char *'     |   | | |     `-IntegerLiteral 0x15b009a88 <col:9> 'int' 25     |   | | `-IntegerLiteral 0x15b009ae0 <col:15> 'int' 128     |   | |-CompoundStmt 0x159944638 <col:20, line:37:2>     |   | | `-BinaryOperator 0x159944618 <line:36:3, col:14> 'int' '='     |   | |   |-DeclRefExpr 0x15b009b50 <col:3> 'int' lvalue Var 0x159928f60 'qqi' 'int'     |   | |   `-ImplicitCastExpr 0x159944600 <col:9, col:14> 'int' <IntegralCast>     |   | |     `-ImplicitCastExpr 0x15b009be8 <col:9, col:14> 'char' <LValueToRValue>     |   | |       `-ArraySubscriptExpr 0x15b009bc8 <col:9, col:14> 'const char' lvalue     |   | |         |-ImplicitCastExpr 0x15b009bb0 <col:9> 'const char *' <LValueToRValue>     |   | |         | `-DeclRefExpr 0x15b009b70 <col:9> 'const char *' lvalue ParmVar 0x1599289a8 'bp' 'const char *'     |   | |         `-IntegerLiteral 0x15b009b90 <col:12> 'int' 25     |   | `-CompoundStmt 0x1599449e0 <line:37:9, line:39:2>     |   |   `-BinaryOperator 0x1599449c0 <line:38:3, col:64> 'int' '='     |   |     |-DeclRefExpr 0x159944650 <col:3> 'int' lvalue Var 0x159928f60 'qqi' 'int'     |   |     `-BinaryOperator 0x1599449a0 <col:9, col:64> 'int' '<<'     |   |       |-ParenExpr 0x1599447b8 <col:9, col:32> 'int'     |   |       | `-BinaryOperator 0x159944798 <col:10, col:28> 'int' '|'     |   |       |   |-ParenExpr 0x159944758 <col:10, col:24> 'int'     |   |       |   | `-BinaryOperator 0x159944738 <col:11, col:20> 'int' '&'     |   |       |   |   |-ImplicitCastExpr 0x159944720 <col:11, col:16> 'int' <IntegralCast>     |   |       |   |   | `-ImplicitCastExpr 0x159944708 <col:11, col:16> 'char' <LValueToRValue>     |   |       |   |   |   `-ArraySubscriptExpr 0x1599446c8 <col:11, col:16> 'const char' lvalue     |   |       |   |   |     |-ImplicitCastExpr 0x1599446b0 <col:11> 'const char *' <LValueToRValue>     |   |       |   |   |     | `-DeclRefExpr 0x159944670 <col:11> 'const char *' lvalue ParmVar 0x1599289a8 'bp' 'const char *'     |   |       |   |   |     `-IntegerLiteral 0x159944690 <col:14> 'int' 25     |   |       |   |   `-IntegerLiteral 0x1599446e8 <col:20> 'int' 15     |   |       |   `-IntegerLiteral 0x159944778 <col:28> 'int' 16     |   |       `-ParenExpr 0x159944980 <col:37, col:64> 'int'     |   |         `-BinaryOperator 0x159944960 <col:38, col:63> 'int' '+'     |   |           |-ParenExpr 0x159944920 <col:38, col:59> 'int'     |   |           | `-BinaryOperator 0x159944900 <col:39, col:58> 'int' '>>'     |   |           |   |-ParenExpr 0x1599448c0 <col:39, col:53> 'int'     |   |           |   | `-BinaryOperator 0x1599448a0 <col:40, col:49> 'int' '&'     |   |           |   |   |-ImplicitCastExpr 0x159944888 <col:40, col:45> 'int' <IntegralCast>     |   |           |   |   | `-ImplicitCastExpr 0x159944870 <col:40, col:45> 'char' <LValueToRValue>     |   |           |   |   |   `-ArraySubscriptExpr 0x159944830 <col:40, col:45> 'const char' lvalue     |   |           |   |   |     |-ImplicitCastExpr 0x159944818 <col:40> 'const char *' <LValueToRValue>     |   |           |   |   |     | `-DeclRefExpr 0x1599447d8 <col:40> 'const char *' lvalue ParmVar 0x1599289a8 'bp' 'const char *'     |   |           |   |   |     `-IntegerLiteral 0x1599447f8 <col:43> 'int' 25     |   |           |   |   `-IntegerLiteral 0x159944850 <col:49> 'int' 112     |   |           |   `-IntegerLiteral 0x1599448e0 <col:58> 'int' 4     |   |           `-IntegerLiteral 0x159944940 <col:63> 'int' 3     |   `-CallExpr 0x159944b08 <line:40:2, col:27> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x159944a28 <col:2> 'int ()' Function 0x159943198 'ND_PRINT' 'int ()'     |     `-ParenExpr 0x159944ae8 <col:11, col:26> 'int' contains-errors     |       `-BinaryOperator 0x159944ac8 <col:12, col:23> 'int' contains-errors ','     |         |-BinaryOperator 0x159944a88 <col:12, col:16> 'char[4]' contains-errors ','     |         | |-RecoveryExpr 0x159944a48 <col:12> '<dependent type>' contains-errors lvalue     |         | `-StringLiteral 0x159944a68 <col:16> 'char[4]' lvalue \"STR\"     |         `-DeclRefExpr 0x159944aa8 <col:23> 'int' lvalue Var 0x159928f60 'qqi' 'int'     |-CallExpr 0x159944c58 <line:43:5, col:25> 'int'     | |-ImplicitCastExpr 0x159944c40 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x159944b88 <col:5> 'int ()' Function 0x15b008ed8 'ND_TCHECK2' 'int ()'     | |-ImplicitCastExpr 0x159944ca0 <col:16, col:21> 'int' <IntegralCast>     | | `-ImplicitCastExpr 0x159944c88 <col:16, col:21> 'char' <LValueToRValue>     | |   `-ArraySubscriptExpr 0x159944c00 <col:16, col:21> 'const char' lvalue     | |     |-ImplicitCastExpr 0x159944be8 <col:16> 'const char *' <LValueToRValue>     | |     | `-DeclRefExpr 0x159944ba8 <col:16> 'const char *' lvalue ParmVar 0x1599289a8 'bp' 'const char *'     | |     `-IntegerLiteral 0x159944bc8 <col:19> 'int' 26     | `-IntegerLiteral 0x159944c20 <col:24> 'int' 2     |-IfStmt 0x159945588 <line:45:5, line:58:5>     | |-RecoveryExpr 0x159944dc8 <line:45:9, col:17> '_Bool' contains-errors     | `-CompoundStmt 0x159945570 <col:20, line:58:5>     |   `-IfStmt 0x159945540 <line:46:2, line:57:17> has_else     |     |-RecoveryExpr 0x159944e80 <line:46:6, col:47> '_Bool' contains-errors     |     |-CallExpr 0x159944f40 <line:47:6, col:26> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x159944ea0 <col:6> 'int ()' Function 0x159943198 'ND_PRINT' 'int ()'     |     | `-ParenExpr 0x159944f20 <col:15, col:25> 'char[4]' contains-errors     |     |   `-BinaryOperator 0x159944f00 <col:16, col:20> 'char[4]' contains-errors ','     |     |     |-RecoveryExpr 0x159944ec0 <col:16> '<dependent type>' contains-errors lvalue     |     |     `-StringLiteral 0x159944ee0 <col:20> 'char[4]' lvalue \"STR\"     |     `-IfStmt 0x159945510 <line:48:7, line:57:17> has_else     |       |-BinaryOperator 0x159944ff0 <line:48:11, col:28> 'int' contains-errors '>'     |       | |-CXXDependentScopeMemberExpr 0x159944f88 <col:11, col:16> '<dependent type>' contains-errors lvalue ->ndo_vflag     |       | | `-RecoveryExpr 0x159944f68 <col:11> '<dependent type>' contains-errors lvalue     |       | `-IntegerLiteral 0x159944fd0 <col:28> 'int' 1     |       |-CompoundStmt 0x159945468 <col:31, line:56:2>     |       | |-CallExpr 0x1599450b0 <line:49:6, col:26> '<dependent type>' contains-errors     |       | | |-DeclRefExpr 0x159945010 <col:6> 'int ()' Function 0x159943198 'ND_PRINT' 'int ()'     |       | | `-ParenExpr 0x159945090 <col:15, col:25> 'char[4]' contains-errors     |       | |   `-BinaryOperator 0x159945070 <col:16, col:20> 'char[4]' contains-errors ','     |       | |     |-RecoveryExpr 0x159945030 <col:16> '<dependent type>' contains-errors lvalue     |       | |     `-StringLiteral 0x159945050 <col:20> 'char[4]' lvalue \"STR\"     |       | `-CallExpr 0x159945440 <line:55:6, col:26> '<dependent type>' contains-errors     |       |   |-DeclRefExpr 0x1599453a0 <col:6> 'int ()' Function 0x159943198 'ND_PRINT' 'int ()'     |       |   `-ParenExpr 0x159945420 <col:15, col:25> 'char[4]' contains-errors     |       |     `-BinaryOperator 0x159945400 <col:16, col:20> 'char[4]' contains-errors ','     |       |       |-RecoveryExpr 0x1599453c0 <col:16> '<dependent type>' contains-errors lvalue     |       |       `-StringLiteral 0x1599453e0 <col:20> 'char[4]' lvalue \"STR\"     |       `-NullStmt 0x159945508 <line:57:17>     |-CallExpr 0x159945660 <line:59:5, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1599455a8 <col:5> 'int ()' Function 0x159943198 'ND_PRINT' 'int ()'     | `-ParenExpr 0x159945640 <col:14, col:24> 'char[4]' contains-errors     |   `-BinaryOperator 0x159945620 <col:15, col:19> 'char[4]' contains-errors ','     |     |-RecoveryExpr 0x1599455c8 <col:15> '<dependent type>' contains-errors lvalue     |     `-StringLiteral 0x159945600 <col:19> 'char[4]' lvalue \"STR\"     |-ReturnStmt 0x159945688 <line:60:5>     |-LabelStmt 0x1599457b0 <line:61:1, line:62:25> 'trunc'     | `-CallExpr 0x159945738 <col:5, col:25> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x159945698 <col:5> 'int ()' Function 0x159943198 'ND_PRINT' 'int ()'     |   `-ParenExpr 0x159945718 <col:14, col:24> 'char[4]' contains-errors     |     `-BinaryOperator 0x1599456f8 <col:15, col:19> 'char[4]' contains-errors ','     |       |-RecoveryExpr 0x1599456b8 <col:15> '<dependent type>' contains-errors lvalue     |       `-StringLiteral 0x1599456d8 <col:19> 'char[4]' lvalue \"STR\"     `-ReturnStmt 0x1599457d0 <line:63:5> ","19639":"`-FunctionDecl 0x14d128ba8  line:1:1 invalid eval_expr_typval 'int (int *, int *, int, int *)'   |-ParmVarDecl 0x14d128928 <col:18, col:28> col:28 invalid expr 'int *'   |-ParmVarDecl 0x14d1289a8 <col:34, col:44> col:44 invalid argv 'int *'   |-ParmVarDecl 0x14d128a28 <col:50, col:54> col:54 used argc 'int'   |-ParmVarDecl 0x14d128aa8 <col:60, col:70> col:70 invalid rettv 'int *'   `-CompoundStmt 0x14d80a170 <line:2:1, line:72:1>     |-DeclStmt 0x14d128cf0 <line:3:5, col:14>     | `-VarDecl 0x14d128c88 <col:5, col:13> col:13 used s 'char *'     |-DeclStmt 0x14d128d98 <line:4:5, col:26>     | `-VarDecl 0x14d128d30 <col:5, col:12> col:12 invalid buf 'char'     `-IfStmt 0x14d80a140 <line:7:5, line:70:5> has_else       |-BinaryOperator 0x14d128e70 <line:7:9, col:25> 'int' contains-errors '=='       | |-CXXDependentScopeMemberExpr 0x14d128dd0 <col:9, col:15> '<dependent type>' contains-errors lvalue ->v_type       | | `-RecoveryExpr 0x14d128db0 <col:9> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x14d128e50 <col:25> '<dependent type>' contains-errors lvalue       |-CompoundStmt 0x14d142780 <line:8:5, line:16:5>       | |-BinaryOperator 0x14d128f60 <line:9:2, col:17> 'char *' contains-errors '='       | | |-DeclRefExpr 0x14d128e90 <col:2> 'char *' lvalue Var 0x14d128c88 's' 'char *'       | | `-CXXDependentScopeMemberExpr 0x14d128f18 <col:6, col:17> '<dependent type>' contains-errors lvalue .v_string       | |   `-CXXDependentScopeMemberExpr 0x14d128ed0 <col:6, col:12> '<dependent type>' contains-errors lvalue ->vval       | |     `-RecoveryExpr 0x14d128eb0 <col:6> '<dependent type>' contains-errors lvalue       | |-IfStmt 0x14d1421a0 <line:10:2, line:11:13>       | | |-BinaryOperator 0x14d142138 <line:10:6, col:25> 'int' contains-errors '||'       | | | |-BinaryOperator 0x14d1420a8 <col:6, col:11> 'int' contains-errors '=='       | | | | |-DeclRefExpr 0x14d128f80 <col:6> 'char *' lvalue Var 0x14d128c88 's' 'char *'       | | | | `-RecoveryExpr 0x14d142088 <col:11> '<dependent type>' contains-errors lvalue       | | | `-BinaryOperator 0x14d142118 <col:19, col:25> 'int' contains-errors '=='       | | |   |-UnaryOperator 0x14d1420e0 <col:19, col:20> 'char' lvalue prefix '*' cannot overflow       | | |   | `-ImplicitCastExpr 0x14d1420c8 <col:20> 'char *' <LValueToRValue>       | | |   |   `-DeclRefExpr 0x14d128fd8 <col:20> 'char *' lvalue Var 0x14d128c88 's' 'char *'       | | |   `-RecoveryExpr 0x14d1420f8 <col:25> '<dependent type>' contains-errors lvalue       | | `-ReturnStmt 0x14d142190 <line:11:6, col:13>       | |   `-RecoveryExpr 0x14d142170 <col:13> '<dependent type>' contains-errors lvalue       | |-CallExpr 0x14d1423a0 <line:12:2, col:21> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x14d142320 <col:2> 'int ()' Function 0x14d142268 'CLEAR_FIELD' 'int ()'       | | `-RecoveryExpr 0x14d142380 <col:14> '<dependent type>' contains-errors lvalue       | `-IfStmt 0x14d142760 <line:14:2, line:15:13>       |   |-BinaryOperator 0x14d1426f8 <line:14:6, col:55> 'int' contains-errors '=='       |   | |-CallExpr 0x14d142688 <col:6, col:50> '<dependent type>' contains-errors       |   | | |-DeclRefExpr 0x14d1424c0 <col:6> 'int ()' Function 0x14d142408 'call_func' 'int ()'       |   | | |-DeclRefExpr 0x14d1424e0 <col:16> 'char *' lvalue Var 0x14d128c88 's' 'char *'       |   | | |-UnaryOperator 0x14d142520 <col:19, col:20> 'int' prefix '-'       |   | | | `-IntegerLiteral 0x14d142500 <col:20> 'int' 1       |   | | |-RecoveryExpr 0x14d142538 <col:23> '<dependent type>' contains-errors lvalue       |   | | |-DeclRefExpr 0x14d142558 <col:30> 'int' lvalue ParmVar 0x14d128a28 'argc' 'int'       |   | | |-RecoveryExpr 0x14d142578 <col:36> '<dependent type>' contains-errors lvalue       |   | | `-UnaryOperator 0x14d142670 <col:42, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow       |   | |   `-RecoveryExpr 0x14d142650 <col:43> '<dependent type>' contains-errors lvalue       |   | `-RecoveryExpr 0x14d1426d8 <col:55> '<dependent type>' contains-errors lvalue       |   `-ReturnStmt 0x14d142750 <line:15:6, col:13>       |     `-RecoveryExpr 0x14d142730 <col:13> '<dependent type>' contains-errors lvalue       `-IfStmt 0x14d80a110 <line:17:10, line:70:5> has_else         |-RecoveryExpr 0x14d142818 <line:17:14, col:30> '_Bool' contains-errors         |-CompoundStmt 0x14d809358 <line:18:5, line:51:5>         | `-IfStmt 0x14d809328 <line:24:2, line:50:2> has_else         |   |-RecoveryExpr 0x14d142908 <line:24:6, line:25:44> '_Bool' contains-errors         |   |-CompoundStmt 0x14d142e28 <line:26:2, line:39:2>         |   | |-DeclStmt 0x14d142ac8 <line:28:6, col:12>         |   | | `-VarDecl 0x14d142a60 <col:6, col:11> col:11 used r 'int'         |   | `-CallExpr 0x14d142dc8 <line:36:6, col:21> 'int'         |   |   `-ImplicitCastExpr 0x14d142db0 <col:6> 'int (*)()' <FunctionToPointerDecay>         |   |     `-DeclRefExpr 0x14d142d60 <col:6> 'int ()' Function 0x14d142ca8 'remove_funccal' 'int ()'         |   `-CompoundStmt 0x14d809318 <line:41:2, line:50:2>         `-IfStmt 0x14d80a0e0 <line:52:10, line:70:5> has_else           |-RecoveryExpr 0x14d8093d8 <line:52:14, col:30> '_Bool' contains-errors           |-CompoundStmt 0x14d809578 <line:53:5, line:55:5>           | `-ReturnStmt 0x14d809568 <line:54:2, col:37>           |   `-CallExpr 0x14d809538 <col:9, col:37> '<dependent type>' contains-errors           |     |-DeclRefExpr 0x14d8094d8 <col:9> 'int ()' Function 0x14d809420 'exe_typval_instr' 'int ()'           |     |-RecoveryExpr 0x14d8094f8 <col:26> '<dependent type>' contains-errors lvalue           |     `-RecoveryExpr 0x14d809518 <col:32> '<dependent type>' contains-errors lvalue           `-CompoundStmt 0x14d80a0b8 <line:57:5, line:70:5>             |-BinaryOperator 0x14d809860 <line:58:2, col:61> 'char *' contains-errors '='             | |-DeclRefExpr 0x14d809590 <col:2> 'char *' lvalue Var 0x14d128c88 's' 'char *'             | `-CallExpr 0x14d809828 <col:6, col:61> '<dependent type>' contains-errors             |   |-DeclRefExpr 0x14d809690 <col:6> 'int ()' Function 0x14d8095d8 'tv_get_string_buf_chk_strict' 'int ()'             |   |-RecoveryExpr 0x14d8096b0 <col:35> '<dependent type>' contains-errors lvalue             |   |-RecoveryExpr 0x14d8096d0 <col:41> '<dependent type>' contains-errors lvalue             |   `-CallExpr 0x14d809808 <col:46, col:60> 'int'             |     `-ImplicitCastExpr 0x14d8097f0 <col:46> 'int (*)()' <FunctionToPointerDecay>             |       `-DeclRefExpr 0x14d8097d0 <col:46> 'int ()' Function 0x14d809718 'in_vim9script' 'int ()'             |-BinaryOperator 0x14d809a70 <line:61:2, col:17> 'char *' '='             | |-DeclRefExpr 0x14d8098c0 <col:2> 'char *' lvalue Var 0x14d128c88 's' 'char *'             | `-ImplicitCastExpr 0x14d809a58 <col:6, col:17> 'char *' <IntegralToPointer>             |   `-CallExpr 0x14d809a18 <col:6, col:17> 'int'             |     |-ImplicitCastExpr 0x14d809a00 <col:6> 'int (*)()' <FunctionToPointerDecay>             |     | `-DeclRefExpr 0x14d8099c0 <col:6> 'int ()' Function 0x14d809908 'skipwhite' 'int ()'             |     `-ImplicitCastExpr 0x14d809a40 <col:16> 'char *' <LValueToRValue>             |       `-DeclRefExpr 0x14d8099e0 <col:16> 'char *' lvalue Var 0x14d128c88 's' 'char *'             `-IfStmt 0x14d80a098 <line:64:2, line:69:2>               |-RecoveryExpr 0x14d809cf8 <line:64:6, col:23> '_Bool' contains-errors               `-CompoundStmt 0x14d80a080 <line:65:2, line:69:2>                 `-CallExpr 0x14d809e38 <line:66:6, col:20> '<dependent type>' contains-errors                   |-DeclRefExpr 0x14d809df8 <col:6> 'int ()' Function 0x14d809d40 'clear_tv' 'int ()'                   `-RecoveryExpr 0x14d809e18 <col:15> '<dependent type>' contains-errors lvalue ","20093":"`-FunctionDecl 0x13500de88  line:1:1 invalid get_call_expr_argtype 'int (int *, int)'   |-ParmVarDecl 0x13500dd28 <col:23, col:29> col:29 invalid expr 'int *'   |-ParmVarDecl 0x13500dda8 <col:35, col:39> col:39 used argnum 'int'   `-CompoundStmt 0x135027ca0 <line:2:1, line:40:1>     `-IfStmt 0x13500e038 <line:6:2, line:7:10>       |-BinaryOperator 0x13500dfd0 <line:6:6, col:14> 'int' contains-errors '=='       | |-RecoveryExpr 0x13500df58 <col:6> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x13500dfb0 <col:14> '<dependent type>' contains-errors lvalue       `-ReturnStmt 0x13500e028 <line:7:3, col:10>         `-RecoveryExpr 0x13500e008 <col:10> '<dependent type>' contains-errors lvalue ","19689":"`-FunctionDecl 0x153928198  line:1:5 referenced perf_event_task_enable 'int (void)'   `-CompoundStmt 0x1539430b8 <line:2:1, line:15:1>     |-DeclStmt 0x153928478 <line:3:2, col:32>     | |-RecordDecl 0x153928288 <col:2, col:9> col:9 struct perf_event_context     | `-VarDecl 0x1539283f8 <col:2, col:29> col:29 used ctx 'struct perf_event_context *'     |-DeclStmt 0x153928678 <line:4:2, col:26>     | |-RecordDecl 0x153928490 <col:2, col:9> col:9 struct perf_event     | `-VarDecl 0x1539285f8 <col:2, col:21> col:21 used event 'struct perf_event *'     |-CallExpr 0x153941908 <line:6:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1539287c0 <col:2> 'int ()' Function 0x153928708 'mutex_lock' 'int ()'     | `-UnaryOperator 0x1539418f0 <col:13, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x1539418a8 <col:14, col:23> '<dependent type>' contains-errors lvalue ->perf_event_mutex     |     `-RecoveryExpr 0x153941888 <col:14> '<dependent type>' contains-errors lvalue     |-CallExpr 0x153941bb8 <line:7:2, col:67> '<dependent type>' contains-errors     | |-DeclRefExpr 0x153941a10 <col:2> 'int ()' Function 0x153941958 'list_for_each_entry' 'int ()'     | |-DeclRefExpr 0x153941a30 <col:22> 'struct perf_event *' lvalue Var 0x1539285f8 'event' 'struct perf_event *'     | |-UnaryOperator 0x153941b80 <col:29, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x153941b38 <col:30, col:39> '<dependent type>' contains-errors lvalue ->perf_event_list     | |   `-RecoveryExpr 0x153941b18 <col:30> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x153941b98 <col:56> '<dependent type>' contains-errors lvalue     |-CompoundStmt 0x153942600 <col:69, line:11:2>     | |-BinaryOperator 0x1539421f0 <line:8:3, col:34> 'struct perf_event_context *' '='     | | |-DeclRefExpr 0x153941bf0 <col:3> 'struct perf_event_context *' lvalue Var 0x1539283f8 'ctx' 'struct perf_event_context *'     | | `-ImplicitCastExpr 0x153941db8 <col:9, col:34> 'struct perf_event_context *' <IntegralToPointer>     | |   `-CallExpr 0x153941d78 <col:9, col:34> 'int'     | |     |-ImplicitCastExpr 0x153941d60 <col:9> 'int (*)()' <FunctionToPointerDecay>     | |     | `-DeclRefExpr 0x153941cf0 <col:9> 'int ()' Function 0x153941c38 'perf_event_ctx_lock' 'int ()'     | |     `-ImplicitCastExpr 0x153941da0 <col:29> 'struct perf_event *' <LValueToRValue>     | |       `-DeclRefExpr 0x153941d10 <col:29> 'struct perf_event *' lvalue Var 0x1539285f8 'event' 'struct perf_event *'     | |-CallExpr 0x1539423b0 <line:9:3, col:54> 'int'     | | |-ImplicitCastExpr 0x153942398 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x1539422f0 <col:3> 'int ()' Function 0x153942238 'perf_event_for_each_child' 'int ()'     | | |-ImplicitCastExpr 0x1539423e0 <col:29> 'struct perf_event *' <LValueToRValue>     | | | `-DeclRefExpr 0x153942310 <col:29> 'struct perf_event *' lvalue Var 0x1539285f8 'event' 'struct perf_event *'     | | `-ImplicitCastExpr 0x153942430 <col:36> 'int (*)(void)' <FunctionToPointerDecay>     | |   `-DeclRefExpr 0x153942378 <col:36> 'int (void)' Function 0x153928198 'perf_event_task_enable' 'int (void)'     | `-CallExpr 0x1539425a0 <line:10:3, col:35> 'int'     |   |-ImplicitCastExpr 0x153942588 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x153942528 <col:3> 'int ()' Function 0x153942470 'perf_event_ctx_unlock' 'int ()'     |   |-ImplicitCastExpr 0x1539425d0 <col:25> 'struct perf_event *' <LValueToRValue>     |   | `-DeclRefExpr 0x153942548 <col:25> 'struct perf_event *' lvalue Var 0x1539285f8 'event' 'struct perf_event *'     |   `-ImplicitCastExpr 0x1539425e8 <col:32> 'struct perf_event_context *' <LValueToRValue>     |     `-DeclRefExpr 0x153942568 <col:32> 'struct perf_event_context *' lvalue Var 0x1539283f8 'ctx' 'struct perf_event_context *'     |-CallExpr 0x153943060 <line:12:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x153942708 <col:2> 'int ()' Function 0x153942650 'mutex_unlock' 'int ()'     | `-UnaryOperator 0x153943048 <col:15, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x153943000 <col:16, col:25> '<dependent type>' contains-errors lvalue ->perf_event_mutex     |     `-RecoveryExpr 0x1539427c8 <col:16> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1539430a8 <line:14:2, col:9>       `-IntegerLiteral 0x153943088 <col:9> 'int' 0 ","20000":"`-FunctionDecl 0x12900df18  line:1:22 invalid GetTemporary 'int *(int *, const int *, int)' inline   |-ParmVarDecl 0x12900dd28 <col:35, col:50> col:50 invalid context 'int *'   |-ParmVarDecl 0x12900dda8 <line:2:35, col:53> col:53 invalid node 'const int *'   |-ParmVarDecl 0x12900de28 <col:59, col:63> col:63 used index 'int'   `-CompoundStmt 0x12900e1d8 <col:70, line:4:1>     `-ReturnStmt 0x12900e1c8 <line:3:3, col:58>       `-UnaryOperator 0x12900e1b0 <col:10, col:58> '<dependent type>' contains-errors prefix '&' cannot overflow         `-ArraySubscriptExpr 0x12900e190 <col:11, col:58> '<dependent type>' contains-errors lvalue           |-ImplicitCastExpr 0x12900e160 <col:11, col:20> '<dependent type>' contains-errors <LValueToRValue>           | `-CXXDependentScopeMemberExpr 0x12900dff8 <col:11, col:20> '<dependent type>' contains-errors lvalue ->tensors           |   `-RecoveryExpr 0x12900dfd8 <col:11> '<dependent type>' contains-errors lvalue           `-ImplicitCastExpr 0x12900e178 <col:28, col:57> '<dependent type>' contains-errors <LValueToRValue>             `-ArraySubscriptExpr 0x12900e140 <col:28, col:57> '<dependent type>' contains-errors lvalue               |-ImplicitCastExpr 0x12900e110 <col:28, col:47> '<dependent type>' contains-errors <LValueToRValue>               | `-CXXDependentScopeMemberExpr 0x12900e0a8 <col:28, col:47> '<dependent type>' contains-errors lvalue ->data               |   `-CXXDependentScopeMemberExpr 0x12900e060 <col:28, col:34> '<dependent type>' contains-errors lvalue ->temporaries               |     `-RecoveryExpr 0x12900e040 <col:28> '<dependent type>' contains-errors lvalue               `-ImplicitCastExpr 0x12900e128 <col:52> 'int' <LValueToRValue>                 `-DeclRefExpr 0x12900e0f0 <col:52> 'int' lvalue ParmVar 0x12900de28 'index' 'int' ","19712":"`-FunctionDecl 0x12e844488  line:1:12 invalid jas_iccgetuint64 'int (int *, int *)' static   |-ParmVarDecl 0x12e844328 <col:29, col:43> col:43 invalid in 'int *'   |-ParmVarDecl 0x12e8443a8 <col:47, col:64> col:64 invalid val 'int *'   `-CompoundStmt 0x12e844998 <line:2:1, line:8:1>     |-IfStmt 0x12e844820 <line:4:2, line:5:11>     | |-CallExpr 0x12e8447a0 <line:4:6, col:32> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x12e8446a0 <col:6> 'int ()' Function 0x12e8445e8 'jas_iccgetuint' 'int ()'     | | |-RecoveryExpr 0x12e8446c0 <col:21> '<dependent type>' contains-errors lvalue     | | |-IntegerLiteral 0x12e8446e0 <col:25> 'int' 8     | | `-UnaryOperator 0x12e844788 <col:28, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x12e844768 <col:29> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12e844810 <line:5:3, col:11>     |   `-UnaryOperator 0x12e8447f8 <col:10, col:11> 'int' prefix '-'     |     `-IntegerLiteral 0x12e8447d8 <col:11> 'int' 1     |-BinaryOperator 0x12e844948 <line:6:2, col:9> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x12e844910 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x12e8448f8 <col:3> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x12e844840 <col:3> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x12e844928 <col:9> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12e844988 <line:7:2, col:9>       `-IntegerLiteral 0x12e844968 <col:9> 'int' 0 ","19669":"`-FunctionDecl 0x13380e358  line:1:5 nfc_llcp_send_connect 'int (struct nfc_llcp_sock *)'   |-ParmVarDecl 0x13380e248 <col:27, col:49> col:49 used sock 'struct nfc_llcp_sock *'   `-CompoundStmt 0x134809ac0 <line:2:1, line:63:1>     |-DeclStmt 0x133826838 <line:3:2, col:30>     | |-RecordDecl 0x133826650 <col:2, col:9> col:9 struct nfc_llcp_local     | `-VarDecl 0x1338267b8 <col:2, col:25> col:25 used local 'struct nfc_llcp_local *'     |-DeclStmt 0x133826a38 <line:4:2, col:21>     | |-RecordDecl 0x133826850 <col:2, col:9> col:9 struct sk_buff     | `-VarDecl 0x1338269b8 <col:2, col:18> col:18 used skb 'struct sk_buff *'     |-DeclStmt 0x133826bd8 <line:8:2, col:9>     | `-VarDecl 0x133826b70 <col:2, col:6> col:6 used err 'int'     |-CallExpr 0x133826dc8 <line:12:2, col:16> 'int'     | |-ImplicitCastExpr 0x133826db0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x133826d00 <col:2> 'int ()' Function 0x133826c48 'pr_debug' 'int ()'     | `-ImplicitCastExpr 0x133826df0 <col:11> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x133826d60 <col:11> 'char[4]' lvalue \"STR\"     |-BinaryOperator 0x133826e88 <line:14:2, col:16> 'struct nfc_llcp_local *' contains-errors '='     | |-DeclRefExpr 0x133826e08 <col:2> 'struct nfc_llcp_local *' lvalue Var 0x1338267b8 'local' 'struct nfc_llcp_local *'     | `-RecoveryExpr 0x133826e60 <col:10, col:16> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x133826e28 <col:10> 'struct nfc_llcp_sock *' lvalue ParmVar 0x13380e248 'sock' 'struct nfc_llcp_sock *'     |-IfStmt 0x133826fe8 <line:15:2, line:16:11>     | |-BinaryOperator 0x133826f20 <line:15:6, col:15> 'int' contains-errors '=='     | | |-DeclRefExpr 0x133826ea8 <col:6> 'struct nfc_llcp_local *' lvalue Var 0x1338267b8 'local' 'struct nfc_llcp_local *'     | | `-RecoveryExpr 0x133826f00 <col:15> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x133826fd8 <line:16:3, col:11>     |   `-UnaryOperator 0x133826fc0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x133826fa8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x133826f88 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x133827258 <line:18:2, line:24:2>     | |-RecoveryExpr 0x133827068 <line:18:6, col:28> '_Bool' contains-errors     | `-CompoundStmt 0x133827248 <col:34, line:24:2>     |-IfStmt 0x134809320 <line:41:2, line:44:2>     | |-RecoveryExpr 0x134809260 <line:41:6, col:13> '_Bool' contains-errors     | `-CompoundStmt 0x134809308 <col:19, line:44:2>     |   `-GotoStmt 0x1348092f0 <line:43:3, col:8> 'error_tlv' 0x1348092a0     |-CallExpr 0x134809678 <line:50:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1348095c0 <col:2> 'int ()' Function 0x134809508 'skb_queue_tail' 'int ()'     | |-UnaryOperator 0x134809640 <col:17, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x134809618 <col:18, col:25> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1348095e0 <col:18> 'struct nfc_llcp_local *' lvalue Var 0x1338267b8 'local' 'struct nfc_llcp_local *'     | `-DeclRefExpr 0x134809658 <col:35> 'struct sk_buff *' lvalue Var 0x1338269b8 'skb' 'struct sk_buff *'     |-BinaryOperator 0x1348096e8 <line:52:2, col:8> 'int' '='     | |-DeclRefExpr 0x1348096a8 <col:2> 'int' lvalue Var 0x133826b70 'err' 'int'     | `-IntegerLiteral 0x1348096c8 <col:8> 'int' 0     |-LabelStmt 0x134809918 <line:54:1, line:56:20> 'error_tlv'     | `-IfStmt 0x1348098f8 <line:55:2, line:56:20>     |   |-ImplicitCastExpr 0x134809728 <line:55:6> 'int' <LValueToRValue>     |   | `-DeclRefExpr 0x134809708 <col:6> 'int' lvalue Var 0x133826b70 'err' 'int'     |   `-CallExpr 0x134809898 <line:56:3, col:20> 'int'     |     |-ImplicitCastExpr 0x134809880 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x134809820 <col:3> 'int ()' Function 0x134809768 'pr_err' 'int ()'     |     |-ImplicitCastExpr 0x1348098c8 <col:10> 'char *' <ArrayToPointerDecay>     |     | `-StringLiteral 0x134809840 <col:10> 'char[4]' lvalue \"STR\"     |     `-ImplicitCastExpr 0x1348098e0 <col:17> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x134809860 <col:17> 'int' lvalue Var 0x133826b70 'err' 'int'     `-ReturnStmt 0x134809ab0 <line:62:2, col:9>       `-ImplicitCastExpr 0x134809a98 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x134809a78 <col:9> 'int' lvalue Var 0x133826b70 'err' 'int' ","19211":"`-FunctionDecl 0x12f8268d0  col:1 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x12f8269d0 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x12f826a38 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x12f826aa0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x12f826978 <<invalid sloc>> Implicit 900 ","19623":"`-FunctionDecl 0x132009998  col:3 implicit used memmove 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x132009a98 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x132009b00 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x132009b68 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x132009a40 <<invalid sloc>> Implicit 884 ","19628":"`-FunctionDecl 0x13a830f50  line:1:6 sock_rfree 'void (struct sk_buff *)'   |-ParmVarDecl 0x13a830e48 <col:17, col:33> col:33 used skb 'struct sk_buff *'   `-CompoundStmt 0x13a8545a8 <line:2:1, line:8:1>     |-DeclStmt 0x13a854098 <line:3:2, col:27>     | |-RecordDecl 0x13a853e48 <col:2, col:9> col:9 struct sock     | `-VarDecl 0x13a853fb8 <col:2, col:25> col:15 used sk 'struct sock *' cinit     |   `-RecoveryExpr 0x13a854058 <col:20, col:25> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13a854020 <col:20> 'struct sk_buff *' lvalue ParmVar 0x13a830e48 'skb' 'struct sk_buff *'     |-DeclStmt 0x13a854190 <line:4:2, col:34>     | `-VarDecl 0x13a8540c8 <col:2, col:26> col:15 used len 'unsigned int' cinit     |   `-RecoveryExpr 0x13a854168 <col:21, col:26> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13a854130 <col:21> 'struct sk_buff *' lvalue ParmVar 0x13a830e48 'skb' 'struct sk_buff *'     |-CallExpr 0x13a854388 <line:6:2, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13a8542d0 <col:2> 'int ()' Function 0x13a854218 'atomic_sub' 'int ()'     | |-DeclRefExpr 0x13a8542f0 <col:13> 'unsigned int' contains-errors lvalue Var 0x13a8540c8 'len' 'unsigned int'     | `-UnaryOperator 0x13a854370 <col:18, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13a854348 <col:19, col:23> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13a854310 <col:19> 'struct sock *' contains-errors lvalue Var 0x13a853fb8 'sk' 'struct sock *'     `-CallExpr 0x13a854548 <line:7:2, col:25> 'int' contains-errors       |-ImplicitCastExpr 0x13a854530 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x13a854498 <col:2> 'int ()' Function 0x13a8543e0 'sk_mem_uncharge' 'int ()'       |-ImplicitCastExpr 0x13a854578 <col:18> 'struct sock *' contains-errors <LValueToRValue>       | `-DeclRefExpr 0x13a8544b8 <col:18> 'struct sock *' contains-errors lvalue Var 0x13a853fb8 'sk' 'struct sock *'       `-ImplicitCastExpr 0x13a854590 <col:22> 'unsigned int' contains-errors <LValueToRValue>         `-DeclRefExpr 0x13a8544d8 <col:22> 'unsigned int' contains-errors lvalue Var 0x13a8540c8 'len' 'unsigned int' ","19931":"`-FunctionDecl 0x139940ca8  line:1:12 raw_getname 'int (struct socket *, struct sockaddr *, int *, int)' static   |-ParmVarDecl 0x139928648 <col:24, col:39> col:39 used sock 'struct socket *'   |-ParmVarDecl 0x139940a28 <col:45, col:62> col:62 used uaddr 'struct sockaddr *'   |-ParmVarDecl 0x139940ad8 <line:2:10, col:15> col:15 used len 'int *'   |-ParmVarDecl 0x139940b58 <col:20, col:24> col:24 used peer 'int'   `-CompoundStmt 0x139947ad0 <line:3:1, line:17:1>     |-DeclStmt 0x139941090 <line:4:2, col:58>     | |-RecordDecl 0x139940db8 <col:2, col:9> col:9 struct sockaddr_can     | `-VarDecl 0x139940f28 <col:2, col:53> col:23 used addr 'struct sockaddr_can *' cinit     |   `-CStyleCastExpr 0x139941050 <col:30, col:53> 'struct sockaddr_can *' <BitCast>     |     `-ImplicitCastExpr 0x139941038 <col:53> 'struct sockaddr *' <LValueToRValue> part_of_explicit_cast     |       `-DeclRefExpr 0x139940f90 <col:53> 'struct sockaddr *' lvalue ParmVar 0x139940a28 'uaddr' 'struct sockaddr *'     |-DeclStmt 0x1399412f8 <line:5:2, col:28>     | |-RecordDecl 0x1399410a8 <col:2, col:9> col:9 struct sock     | `-VarDecl 0x139941218 <col:2, col:26> col:15 used sk 'struct sock *' cinit     |   `-RecoveryExpr 0x1399412b8 <col:20, col:26> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x139941280 <col:20> 'struct socket *' lvalue ParmVar 0x139928648 'sock' 'struct socket *'     |-DeclStmt 0x139941708 <line:6:2, col:34>     | |-RecordDecl 0x139941310 <col:2, col:9> col:9 struct raw_sock     | `-VarDecl 0x139941478 <col:2, col:33> col:19 used ro 'struct raw_sock *' cinit     |   `-ImplicitCastExpr 0x1399416d8 <col:24, col:33> 'struct raw_sock *' contains-errors <IntegralToPointer>     |     `-CallExpr 0x139941698 <col:24, col:33> 'int' contains-errors     |       |-ImplicitCastExpr 0x139941680 <col:24> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x139941610 <col:24> 'int ()' Function 0x139941558 'raw_sk' 'int ()'     |       `-ImplicitCastExpr 0x1399416c0 <col:31> 'struct sock *' contains-errors <LValueToRValue>     |         `-DeclRefExpr 0x139941630 <col:31> 'struct sock *' contains-errors lvalue Var 0x139941218 'sk' 'struct sock *'     |-IfStmt 0x139941800 <line:8:2, line:9:11>     | |-ImplicitCastExpr 0x139941740 <line:8:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x139941720 <col:6> 'int' lvalue ParmVar 0x139940b58 'peer' 'int'     | `-ReturnStmt 0x1399417f0 <line:9:3, col:11>     |   `-UnaryOperator 0x1399417d8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x1399417c0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x1399417a0 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1399418d8 <line:11:2, col:22> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x139941858 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x139941820 <col:2> 'struct sockaddr_can *' lvalue Var 0x139940f28 'addr' 'struct sockaddr_can *'     | `-RecoveryExpr 0x1399418b8 <col:22> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1399419b8 <line:12:2, col:26> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x139941930 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1399418f8 <col:2> 'struct sockaddr_can *' lvalue Var 0x139940f28 'addr' 'struct sockaddr_can *'     | `-RecoveryExpr 0x139941990 <col:22, col:26> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x139941958 <col:22> 'struct raw_sock *' contains-errors lvalue Var 0x139941478 'ro' 'struct raw_sock *'     `-ReturnStmt 0x139947ac0 <line:16:2, col:9>       `-IntegerLiteral 0x139947aa0 <col:9> 'int' 0 ","19923":"`-FunctionDecl 0x14e026748  line:1:5 fb_cmap_to_user 'int (const struct fb_cmap *, struct fb_cmap_user *)'   |-ParmVarDecl 0x14e00e248 <col:21, col:43> col:43 used from 'const struct fb_cmap *'   |-ParmVarDecl 0x14e026628 <col:49, col:70> col:70 used to 'struct fb_cmap_user *'   `-CompoundStmt 0x14d925120 <line:2:1, line:27:1>     |-DeclStmt 0x14e0269a0 <line:3:2, col:28>     | |-VarDecl 0x14e026860 <col:2, col:14> col:6 used tooff 'int' cinit     | | `-IntegerLiteral 0x14e0268c8 <col:14> 'int' 0     | `-VarDecl 0x14e026900 <col:2, col:27> col:17 used fromoff 'int' cinit     |   `-IntegerLiteral 0x14e026968 <col:27> 'int' 0     |-DeclStmt 0x14e026a38 <line:4:2, col:10>     | `-VarDecl 0x14e0269d0 <col:2, col:6> col:6 used size 'int'     |-IfStmt 0x14e026d70 <line:6:2, line:9:29> has_else     | |-BinaryOperator 0x14e026b10 <line:6:6, col:24> 'int' contains-errors '>'     | | |-RecoveryExpr 0x14e026a88 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x14e026a50 <col:6> 'struct fb_cmap_user *' lvalue ParmVar 0x14e026628 'to' 'struct fb_cmap_user *'     | | `-RecoveryExpr 0x14e026ae8 <col:18, col:24> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14e026ab0 <col:18> 'const struct fb_cmap *' lvalue ParmVar 0x14e00e248 'from' 'const struct fb_cmap *'     | |-BinaryOperator 0x14e026c30 <line:7:3, col:31> 'int' contains-errors '='     | | |-DeclRefExpr 0x14e026b30 <col:3> 'int' lvalue Var 0x14e026900 'fromoff' 'int'     | | `-BinaryOperator 0x14e026c10 <col:13, col:31> '<dependent type>' contains-errors '-'     | |   |-RecoveryExpr 0x14e026b88 <col:13, col:17> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x14e026b50 <col:13> 'struct fb_cmap_user *' lvalue ParmVar 0x14e026628 'to' 'struct fb_cmap_user *'     | |   `-RecoveryExpr 0x14e026be8 <col:25, col:31> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x14e026bb0 <col:25> 'const struct fb_cmap *' lvalue ParmVar 0x14e00e248 'from' 'const struct fb_cmap *'     | `-BinaryOperator 0x14e026d50 <line:9:3, col:29> 'int' contains-errors '='     |   |-DeclRefExpr 0x14e026c50 <col:3> 'int' lvalue Var 0x14e026860 'tooff' 'int'     |   `-BinaryOperator 0x14e026d30 <col:11, col:29> '<dependent type>' contains-errors '-'     |     |-RecoveryExpr 0x14e026ca8 <col:11, col:17> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x14e026c70 <col:11> 'const struct fb_cmap *' lvalue ParmVar 0x14e00e248 'from' 'const struct fb_cmap *'     |     `-RecoveryExpr 0x14e026d08 <col:25, col:29> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14e026cd0 <col:25> 'struct fb_cmap_user *' lvalue ParmVar 0x14e026628 'to' 'struct fb_cmap_user *'     |-BinaryOperator 0x14e026e60 <line:10:2, col:19> 'int' contains-errors '='     | |-DeclRefExpr 0x14e026da0 <col:2> 'int' lvalue Var 0x14e0269d0 'size' 'int'     | `-BinaryOperator 0x14e026e40 <col:9, col:19> '<dependent type>' contains-errors '-'     |   |-RecoveryExpr 0x14e026df8 <col:9, col:13> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14e026dc0 <col:9> 'struct fb_cmap_user *' lvalue ParmVar 0x14e026628 'to' 'struct fb_cmap_user *'     |   `-DeclRefExpr 0x14e026e20 <col:19> 'int' lvalue Var 0x14e026860 'tooff' 'int'     |-IfStmt 0x14e0270d8 <line:11:2, line:12:22>     | |-BinaryOperator 0x14e026fd8 <line:11:6, col:39> 'int' contains-errors '>'     | | |-ImplicitCastExpr 0x14e026fc0 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x14e026e80 <col:6> 'int' lvalue Var 0x14e0269d0 'size' 'int'     | | `-CStyleCastExpr 0x14e026f98 <col:13, col:39> 'int' contains-errors <Dependent>     | |   `-ParenExpr 0x14e026f78 <col:19, col:39> '<dependent type>' contains-errors     | |     `-BinaryOperator 0x14e026f20 <col:20, col:32> '<dependent type>' contains-errors '-'     | |       |-RecoveryExpr 0x14e026ed8 <col:20, col:26> '<dependent type>' contains-errors lvalue     | |       | `-DeclRefExpr 0x14e026ea0 <col:20> 'const struct fb_cmap *' lvalue ParmVar 0x14e00e248 'from' 'const struct fb_cmap *'     | |       `-DeclRefExpr 0x14e026f00 <col:32> 'int' lvalue Var 0x14e026900 'fromoff' 'int'     | `-BinaryOperator 0x14e0270b8 <line:12:3, col:22> 'int' contains-errors '='     |   |-DeclRefExpr 0x14e026ff8 <col:3> 'int' lvalue Var 0x14e0269d0 'size' 'int'     |   `-BinaryOperator 0x14e027098 <col:10, col:22> '<dependent type>' contains-errors '-'     |     |-RecoveryExpr 0x14e027050 <col:10, col:16> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x14e027018 <col:10> 'const struct fb_cmap *' lvalue ParmVar 0x14e00e248 'from' 'const struct fb_cmap *'     |     `-DeclRefExpr 0x14e027078 <col:22> 'int' lvalue Var 0x14e026900 'fromoff' 'int'     |-IfStmt 0x14e027230 <line:13:2, line:14:11>     | |-BinaryOperator 0x14e027150 <line:13:6, col:14> 'int' '<='     | | |-ImplicitCastExpr 0x14e027138 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x14e0270f8 <col:6> 'int' lvalue Var 0x14e0269d0 'size' 'int'     | | `-IntegerLiteral 0x14e027118 <col:14> 'int' 0     | `-ReturnStmt 0x14e027220 <line:14:3, col:11>     |   `-UnaryOperator 0x14e027208 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14e0271f0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14e0271d0 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14d924a00 <line:17:2, line:18:11>     | |-CallExpr 0x14e027520 <line:17:6, col:57> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14e0273a0 <col:6> 'int ()' Function 0x14e0272e8 'copy_to_user' 'int ()'     | | |-BinaryOperator 0x14e027440 <col:19, col:27> '<dependent type>' contains-errors '+'     | | | |-RecoveryExpr 0x14e0273f8 <col:19, col:23> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x14e0273c0 <col:19> 'struct fb_cmap_user *' lvalue ParmVar 0x14e026628 'to' 'struct fb_cmap_user *'     | | | `-DeclRefExpr 0x14e027420 <col:27> 'int' lvalue Var 0x14e026860 'tooff' 'int'     | | |-BinaryOperator 0x14e0274e0 <col:34, col:44> '<dependent type>' contains-errors '+'     | | | |-RecoveryExpr 0x14e027498 <col:34, col:40> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x14e027460 <col:34> 'const struct fb_cmap *' lvalue ParmVar 0x14e00e248 'from' 'const struct fb_cmap *'     | | | `-DeclRefExpr 0x14e0274c0 <col:44> 'int' lvalue Var 0x14e026900 'fromoff' 'int'     | | `-DeclRefExpr 0x14e027500 <col:53> 'int' lvalue Var 0x14e0269d0 'size' 'int'     | `-ReturnStmt 0x14e0275f0 <line:18:3, col:11>     |   `-UnaryOperator 0x14e0275d8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14e0275c0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14e0275a0 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14d924c80 <line:19:2, line:20:11>     | |-CallExpr 0x14d924ba0 <line:19:6, col:61> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14d924a20 <col:6> 'int ()' Function 0x14e0272e8 'copy_to_user' 'int ()'     | | |-BinaryOperator 0x14d924ac0 <col:19, col:29> '<dependent type>' contains-errors '+'     | | | |-RecoveryExpr 0x14d924a78 <col:19, col:23> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x14d924a40 <col:19> 'struct fb_cmap_user *' lvalue ParmVar 0x14e026628 'to' 'struct fb_cmap_user *'     | | | `-DeclRefExpr 0x14d924aa0 <col:29> 'int' lvalue Var 0x14e026860 'tooff' 'int'     | | |-BinaryOperator 0x14d924b60 <col:36, col:48> '<dependent type>' contains-errors '+'     | | | |-RecoveryExpr 0x14d924b18 <col:36, col:42> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x14d924ae0 <col:36> 'const struct fb_cmap *' lvalue ParmVar 0x14e00e248 'from' 'const struct fb_cmap *'     | | | `-DeclRefExpr 0x14d924b40 <col:48> 'int' lvalue Var 0x14e026900 'fromoff' 'int'     | | `-DeclRefExpr 0x14d924b80 <col:57> 'int' lvalue Var 0x14e0269d0 'size' 'int'     | `-ReturnStmt 0x14d924c70 <line:20:3, col:11>     |   `-UnaryOperator 0x14d924c58 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14d924c40 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14d924c20 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14d925110 <line:26:2, col:9>       `-IntegerLiteral 0x14d9250f0 <col:9> 'int' 0 ","19795":"`-FunctionDecl 0x150026a28  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x150026b28 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x150026b90 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x150026bf8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x150026ad0 <<invalid sloc>> Implicit 900 ","19169":"`-FunctionDecl 0x11f80de88  line:1:14 invalid Eval 'int (int *, int *)'   |-ParmVarDecl 0x11f80dd28 <col:19, col:34> col:34 invalid context 'int *'   |-ParmVarDecl 0x11f80dda8 <col:43, col:55> col:55 invalid node 'int *'   `-CompoundStmt 0x11f827aa0 <col:61, line:40:1>     |-DeclStmt 0x11f80e1d0 <line:2:3, col:68>     | `-VarDecl 0x11f80df58 <col:3, col:23> col:23 invalid value 'const int *'     |-IfStmt 0x11f827a30 <line:6:3, line:9:3>     | |-CallExpr 0x11f827538 <line:6:7, col:29> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x11f8274b8 <col:7> 'int ()' Function 0x11f827400 'IsDynamicTensor' 'int ()'     | | `-RecoveryExpr 0x11f827518 <col:23> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x11f827a10 <col:32, line:9:3>     |   |-DeclStmt 0x11f827690 <line:7:5, col:68>     |   | `-VarDecl 0x11f827578 <col:5, col:25> col:25 invalid dims 'const int *'     |   `-CallExpr 0x11f8279e0 <line:8:5, col:67> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x11f827788 <col:5> 'int ()' Function 0x11f8276d0 'TF_LITE_ENSURE_OK' 'int ()'     |     |-RecoveryExpr 0x11f8277a8 <col:23> '<dependent type>' contains-errors lvalue     |     `-CallExpr 0x11f8279a8 <col:32, col:66> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x11f8278a8 <col:32> 'int ()' Function 0x11f8277f0 'ResizeOutput' 'int ()'     |       |-RecoveryExpr 0x11f8278c8 <col:45> '<dependent type>' contains-errors lvalue     |       |-RecoveryExpr 0x11f8278e8 <col:54> '<dependent type>' contains-errors lvalue     |       `-RecoveryExpr 0x11f827988 <col:60> '<dependent type>' contains-errors lvalue     `-RecoveryExpr 0x11f827a80 <line:11:3> '<dependent type>' contains-errors lvalue ","19725":"`-FunctionDecl 0x14c026da8  line:1:13 check_and_migrate_cma_pages 'long (struct task_struct *, struct mm_struct *, unsigned long, unsigned long, struct page **, struct vm_area_struct **, unsigned int)' static   |-ParmVarDecl 0x14c00e248 <col:41, col:61> col:61 tsk 'struct task_struct *'   |-ParmVarDecl 0x14c026628 <line:2:6, col:24> col:24 mm 'struct mm_struct *'   |-ParmVarDecl 0x14c0266a8 <line:3:6, col:20> col:20 start 'unsigned long'   |-ParmVarDecl 0x14c026728 <line:4:6, col:20> col:20 used nr_pages 'unsigned long'   |-ParmVarDecl 0x14c026958 <line:5:6, col:20> col:20 pages 'struct page **'   |-ParmVarDecl 0x14c026b88 <line:6:6, col:30> col:30 vmas 'struct vm_area_struct **'   |-ParmVarDecl 0x14c026c08 <line:7:6, col:19> col:19 gup_flags 'unsigned int'   `-CompoundStmt 0x14c026f30 <line:8:1, line:10:1>     `-ReturnStmt 0x14c026f20 <line:9:2, col:9>       `-ImplicitCastExpr 0x14c026f08 <col:9> 'long' <IntegralCast>         `-ImplicitCastExpr 0x14c026ef0 <col:9> 'unsigned long' <LValueToRValue>           `-DeclRefExpr 0x14c026ed0 <col:9> 'unsigned long' lvalue ParmVar 0x14c026728 'nr_pages' 'unsigned long' ","19311":"`-FunctionDecl 0x143928c58  line:1:31 invalid process_nested_data 'int (int, int)' static   |-ParmVarDecl 0x143928b70 <col:51> col:51 UNSERIALIZE_PARAMETER 'int'   |-ParmVarDecl 0x143928af0 <col:74> col:74 HashTable 'int'   `-CompoundStmt 0x14600a0b8 <line:2:1, line:89:1>     |-WhileStmt 0x14600a068 <line:3:2, line:86:2>     | |-BinaryOperator 0x143928db8 <line:3:9, col:22> 'int' contains-errors '>'     | | |-UnaryOperator 0x143928da0 <col:9, col:17> '<dependent type>' contains-errors postfix '--' cannot overflow     | | | `-RecoveryExpr 0x143928d80 <col:9> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x143928d40 <col:22> 'int' 0     | `-CompoundStmt 0x14600a020 <col:25, line:86:2>     |   |-CallExpr 0x143928fe0 <line:7:3, col:18> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x143928f30 <col:3> 'int ()' Function 0x143928e78 'ZVAL_UNDEF' 'int ()'     |   | `-UnaryOperator 0x143928fc8 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x143928fa8 <col:15> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x143942520 <line:9:3, line:12:3>     |   | |-UnaryOperator 0x143942300 <line:9:7, col:64> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | | `-CallExpr 0x1439422b8 <col:8, col:64> '<dependent type>' contains-errors     |   | |   |-DeclRefExpr 0x1439290e8 <col:8> 'int ()' Function 0x143929030 'php_var_unserialize_internal' 'int ()'     |   | |   |-UnaryOperator 0x143942220 <col:37, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | |   | `-RecoveryExpr 0x143942200 <col:38> '<dependent type>' contains-errors lvalue     |   | |   |-RecoveryExpr 0x143942238 <col:43> '<dependent type>' contains-errors lvalue     |   | |   |-RecoveryExpr 0x143942258 <col:46> '<dependent type>' contains-errors lvalue     |   | |   |-RecoveryExpr 0x143942278 <col:51> '<dependent type>' contains-errors lvalue     |   | |   `-RecoveryExpr 0x143942298 <col:57> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x143942500 <col:67, line:12:3>     |   |   |-CallExpr 0x1439424a8 <line:10:4, col:18> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x1439423f8 <col:4> 'int ()' Function 0x143942340 'zval_dtor' 'int ()'     |   |   | `-UnaryOperator 0x143942490 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   |   `-RecoveryExpr 0x143942470 <col:15> '<dependent type>' contains-errors lvalue     |   |   `-ReturnStmt 0x1439424f0 <line:11:4, col:11>     |   |     `-IntegerLiteral 0x1439424d0 <col:11> 'int' 0     |   |-CallExpr 0x143942608 <line:15:3, col:16> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x143942558 <col:3> 'int ()' Function 0x143928e78 'ZVAL_UNDEF' 'int ()'     |   | `-UnaryOperator 0x1439425f0 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x1439425d0 <col:15> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x146009968 <line:17:3, line:63:3> has_else     |   | |-RecoveryExpr 0x143942630 <line:17:7, col:8> '_Bool' contains-errors     |   | |-CompoundStmt 0x1460090b0 <col:18, line:43:3>     |   | | `-IfStmt 0x146009080 <line:18:4, line:42:4> has_else     |   | |   |-RecoveryExpr 0x143942750 <line:18:8, col:23> '_Bool' contains-errors     |   | |   |-CompoundStmt 0x143942e50 <col:32, line:28:4>     |   | |   | `-LabelStmt 0x143942e30 <line:20:1, line:27:5> 'numeric_key'     |   | |   |   `-IfStmt 0x143942db0 <line:21:5, line:27:5> has_else     |   | |   |     |-RecoveryExpr 0x143942a70 <line:21:9, col:70> '_Bool' contains-errors     |   | |   |     |-CompoundStmt 0x143942c90 <col:73, line:25:5>     |   | |   |     `-CompoundStmt 0x143942da0 <col:12, line:27:5>     |   | |   `-IfStmt 0x146009050 <line:28:11, line:42:4> has_else     |   | |     |-RecoveryExpr 0x143942e88 <line:28:15, col:30> '_Bool' contains-errors     |   | |     |-CompoundStmt 0x146008fc8 <col:41, line:39:4>     |   | |     | |-IfStmt 0x143943118 <line:29:5, line:31:5>     |   | |     | | |-RecoveryExpr 0x1439430c8 <line:29:9, col:56> '_Bool' contains-errors     |   | |     | | `-CompoundStmt 0x143943100 <col:59, line:31:5>     |   | |     | |   `-GotoStmt 0x1439430e8 <line:30:6, col:11> 'numeric_key' 0x143942de0     |   | |     | `-IfStmt 0x146008f98 <line:32:5, line:38:5> has_else     |   | |     |   |-RecoveryExpr 0x146008cf8 <line:32:9, col:71> '_Bool' contains-errors     |   | |     |   |-CompoundStmt 0x146008e58 <col:74, line:36:5>     |   | |     |   `-CompoundStmt 0x146008f88 <col:12, line:38:5>     |   | |     `-CompoundStmt 0x146009038 <line:39:11, line:42:4>     |   | |       `-ReturnStmt 0x146009028 <line:41:5, col:12>     |   | |         `-IntegerLiteral 0x146009008 <col:12> 'int' 0     |   | `-CompoundStmt 0x146009950 <line:43:10, line:63:3>     |   |   `-IfStmt 0x146009920 <line:44:4, line:62:4> has_else     |   |     |-RecoveryExpr 0x1460091e8 <line:44:8, col:41> '_Bool' contains-errors     |   |     |-CompoundStmt 0x146009700 <col:44, line:55:4>     |   |     | `-LabelStmt 0x1460096e0 <line:45:1, line:54:5> 'string_key'     |   |     |   `-IfStmt 0x146009660 <line:46:5, line:54:5> has_else     |   |     |     |-RecoveryExpr 0x146009248 <line:46:9, col:56> '_Bool' contains-errors     |   |     |     |-CompoundStmt 0x1460095f8 <col:62, line:52:5>     |   |     |     | `-IfStmt 0x146009498 <line:47:6, line:49:6>     |   |     |     |   |-RecoveryExpr 0x146009368 <line:47:10, col:32> '_Bool' contains-errors     |   |     |     |   `-CompoundStmt 0x146009488 <col:45, line:49:6>     |   |     |     `-CompoundStmt 0x146009650 <line:52:12, line:54:5>     |   |     `-IfStmt 0x1460098f0 <line:55:11, line:62:4> has_else     |   |       |-RecoveryExpr 0x146009738 <line:55:15, col:30> '_Bool' contains-errors     |   |       |-CompoundStmt 0x146009870 <col:39, line:59:4>     |   |       | `-GotoStmt 0x146009858 <line:58:5, col:10> 'string_key' 0x146009690     |   |       `-CompoundStmt 0x1460098d8 <line:59:11, line:62:4>     |   |         `-ReturnStmt 0x1460098c8 <line:61:5, col:12>     |   |           `-IntegerLiteral 0x1460098a8 <col:12> 'int' 0     |   |-IfStmt 0x146009a40 <line:65:3, line:68:3>     |   | |-RecoveryExpr 0x1460099b8 <line:65:7, col:68> '_Bool' contains-errors     |   | `-CompoundStmt 0x146009a28 <col:71, line:68:3>     |   |   `-ReturnStmt 0x146009a18 <line:67:4, col:11>     |   |     `-IntegerLiteral 0x1460099f8 <col:11> 'int' 0     |   |-IfStmt 0x146009ed8 <line:70:3, line:78:3> has_else     |   | |-RecoveryExpr 0x146009b80 <line:70:7, col:35> '_Bool' contains-errors     |   | |-CompoundStmt 0x146009e90 <col:38, line:76:3>     |   | | `-IfStmt 0x146009e60 <line:71:4, line:75:4> has_else     |   | |   |-RecoveryExpr 0x146009bc0 <line:71:8, col:23> '_Bool' contains-errors     |   | |   |-CompoundStmt 0x146009d20 <col:32, line:73:4>     |   | |   `-CompoundStmt 0x146009e50 <col:11, line:75:4>     |   | `-CompoundStmt 0x146009ec8 <line:76:10, line:78:3>     |   `-IfStmt 0x14600a000 <line:82:3, line:85:3>     |     |-RecoveryExpr 0x146009f98 <line:82:7, col:48> '_Bool' contains-errors     |     `-CompoundStmt 0x146009fe8 <col:53, line:85:3>     |       `-ReturnStmt 0x146009fd8 <line:84:4, col:11>     |         `-IntegerLiteral 0x146009fb8 <col:11> 'int' 0     `-ReturnStmt 0x14600a0a8 <line:88:2, col:9>       `-IntegerLiteral 0x14600a088 <col:9> 'int' 1 ","19835":"`-FunctionDecl 0x12a91f728  line:1:12 init 'int (struct MACH0_)' static   |-ParmVarDecl 0x12a91f618 <col:17, col:36> col:31 invalid obj_t 'struct MACH0_'   `-CompoundStmt 0x12a938758 <col:44, line:16:1>     |-DeclStmt 0x12a937e20 <line:2:2, line:5:18>     | |-RecordDecl 0x12a937a48 <line:2:2, line:5:2> line:2:2 invalid union definition     | | |-FieldDecl 0x12a937b20 <line:3:3, col:8> col:8 invalid word 'int'     | | `-FieldDecl 0x12a937c18 <line:4:3, col:13> col:7 invalid byte 'int[2]'     | `-VarDecl 0x12a937cc8 <line:2:2, line:5:17> col:4 used endian 'union (unnamed union at dataset_diviso_filec\/func20893_nonvuln.c:2:2)':'union (unnamed at dataset_diviso_filec\/func20893_nonvuln.c:2:2)' cinit     |   `-RecoveryExpr 0x12a937de0 <col:13, col:17> '<dependent type>' contains-errors lvalue     |     `-InitListExpr 0x12a937d50 <col:13, col:17> 'union (unnamed union at dataset_diviso_filec\/func20893_nonvuln.c:2:2)':'union (unnamed at dataset_diviso_filec\/func20893_nonvuln.c:2:2)'     |       `-IntegerLiteral 0x12a937d30 <col:15> 'int' 1     |-IfStmt 0x12a9382e8 <line:7:2, line:10:2>     | |-UnaryOperator 0x12a9380b0 <line:7:6, col:19> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x12a938088 <col:7, col:19> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12a937ff0 <col:7> 'int ()' Function 0x12a937f38 'init_hdr' 'int ()'     | |   `-RecoveryExpr 0x12a938068 <col:16> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12a9382d0 <col:22, line:10:2>     |   `-CallExpr 0x12a938278 <line:8:3, col:17> 'int'     |     |-ImplicitCastExpr 0x12a938260 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x12a9381a8 <col:3> 'int ()' Function 0x12a9380f0 'bprintf' 'int ()'     |     `-ImplicitCastExpr 0x12a9382a0 <col:12> 'char *' <ArrayToPointerDecay>     |       `-StringLiteral 0x12a938210 <col:12> 'char[4]' lvalue \"STR\"     |-IfStmt 0x12a938570 <line:11:2, line:13:2>     | |-UnaryOperator 0x12a9384a8 <line:11:6, col:22> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x12a938480 <col:7, col:22> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12a9383e8 <col:7> 'int ()' Function 0x12a938330 'init_items' 'int ()'     | |   `-RecoveryExpr 0x12a938460 <col:19> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12a938558 <col:25, line:13:2>     |   `-CallExpr 0x12a938518 <line:12:3, col:17> 'int'     |     |-ImplicitCastExpr 0x12a938500 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x12a9384c0 <col:3> 'int ()' Function 0x12a9380f0 'bprintf' 'int ()'     |     `-ImplicitCastExpr 0x12a938540 <col:12> 'char *' <ArrayToPointerDecay>     |       `-StringLiteral 0x12a9384e0 <col:12> 'char[4]' lvalue \"STR\"     `-ReturnStmt 0x12a938748 <line:15:2, col:9>       `-RecoveryExpr 0x12a938728 <col:9> '<dependent type>' contains-errors lvalue ","19941":"`-FunctionDecl 0x13e80ddf8  line:1:1 invalid ex_resize 'int (int *)'   |-ParmVarDecl 0x13e80dd28 <col:11, col:20> col:20 invalid eap 'int *'   `-CompoundStmt 0x13e82a8c8 <line:2:1, line:33:1>     |-DeclStmt 0x13e80df28 <line:3:5, col:11>     | `-VarDecl 0x13e80dec0 <col:5, col:10> col:10 used n 'int'     |-IfStmt 0x13e8282c8 <line:6:5, line:11:5>     | |-BinaryOperator 0x13e80dff8 <line:6:9, col:27> 'int' contains-errors '>'     | | |-CXXDependentScopeMemberExpr 0x13e80df90 <col:9, col:14> '<dependent type>' contains-errors lvalue ->addr_count     | | | `-RecoveryExpr 0x13e80df70 <col:9> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x13e80dfd8 <col:27> 'int' 0     | `-CompoundStmt 0x13e8282a8 <line:7:5, line:11:5>     |   |-BinaryOperator 0x13e80e0a0 <line:8:2, col:11> 'int' contains-errors '='     |   | |-DeclRefExpr 0x13e80e018 <col:2> 'int' lvalue Var 0x13e80dec0 'n' 'int'     |   | `-CXXDependentScopeMemberExpr 0x13e80e058 <col:6, col:11> '<dependent type>' contains-errors lvalue ->line2     |   |   `-RecoveryExpr 0x13e80e038 <col:6> '<dependent type>' contains-errors lvalue     |   `-ForStmt 0x13e828270 <line:9:2, line:10:6>     |     |-<<<NULL>>>     |     |-<<<NULL>>>     |     |-BinaryOperator 0x13e80e2e8 <line:9:22, col:50> 'int' contains-errors '&&'     |     | |-BinaryOperator 0x13e80e2c8 <col:22, col:36> 'int' contains-errors '!='     |     | | |-CXXDependentScopeMemberExpr 0x13e80e260 <col:22, col:26> '<dependent type>' contains-errors lvalue ->w_next     |     | | | `-RecoveryExpr 0x13e80e240 <col:22> '<dependent type>' contains-errors lvalue     |     | | `-RecoveryExpr 0x13e80e2a8 <col:36> '<dependent type>' contains-errors lvalue     |     | `-BinaryOperator 0x13e80e200 <col:44, col:50> 'int' '>'     |     |   |-UnaryOperator 0x13e80e1c8 <col:44, col:46> 'int' prefix '--'     |     |   | `-DeclRefExpr 0x13e80e1a8 <col:46> 'int' lvalue Var 0x13e80dec0 'n' 'int'     |     |   `-IntegerLiteral 0x13e80e1e0 <col:50> 'int' 0     |     |-BinaryOperator 0x13e828248 <col:53, col:62> '<dependent type>' contains-errors '='     |     | |-RecoveryExpr 0x13e80e3a0 <col:53> '<dependent type>' contains-errors lvalue     |     | `-CXXDependentScopeMemberExpr 0x13e828200 <col:58, col:62> '<dependent type>' contains-errors lvalue ->w_next     |     |   `-RecoveryExpr 0x13e80e3c0 <col:58> '<dependent type>' contains-errors lvalue     |     `-NullStmt 0x13e828268 <line:10:6>     |-BinaryOperator 0x13e8285a0 <line:16:5, col:30> 'int' contains-errors '='     | |-DeclRefExpr 0x13e8282e8 <col:5> 'int' lvalue Var 0x13e80dec0 'n' 'int'     | `-CallExpr 0x13e828578 <col:9, col:30> 'int' contains-errors     |   |-ImplicitCastExpr 0x13e828560 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x13e828460 <col:9> 'int ()' Function 0x13e8283a8 'atol' 'int ()'     |   `-CStyleCastExpr 0x13e828500 <col:14, col:27> 'char *' contains-errors <Dependent>     |     `-CXXDependentScopeMemberExpr 0x13e8284a0 <col:22, col:27> '<dependent type>' contains-errors lvalue ->arg     |       `-RecoveryExpr 0x13e828480 <col:22> '<dependent type>' contains-errors lvalue     `-IfStmt 0x13e82a898 <line:17:5, line:32:5> has_else       |-BinaryOperator 0x13e8286e0 <line:17:9, col:29> '<dependent type>' contains-errors '&'       | |-CXXDependentScopeMemberExpr 0x13e828678 <col:9, col:16> '<dependent type>' contains-errors lvalue .cmod_split       | | `-RecoveryExpr 0x13e828658 <col:9> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x13e8286c0 <col:29> '<dependent type>' contains-errors lvalue       |-CompoundStmt 0x13e829048 <line:18:5, line:24:5>       | |-IfStmt 0x13e828d58 <line:19:2, line:22:10> has_else       | | |-BinaryOperator 0x13e8288a0 <line:19:6, col:39> 'int' contains-errors '||'       | | | |-BinaryOperator 0x13e8287b0 <col:6, col:19> 'int' contains-errors '=='       | | | | |-UnaryOperator 0x13e828780 <col:6, col:12> '<dependent type>' contains-errors prefix '*' cannot overflow       | | | | | `-ImplicitCastExpr 0x13e828768 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>       | | | | |   `-CXXDependentScopeMemberExpr 0x13e828720 <col:7, col:12> '<dependent type>' contains-errors lvalue ->arg       | | | | |     `-RecoveryExpr 0x13e828700 <col:7> '<dependent type>' contains-errors lvalue       | | | | `-CharacterLiteral 0x13e828798 <col:19> 'int' 45       | | | `-BinaryOperator 0x13e828880 <col:26, col:39> 'int' contains-errors '=='       | | |   |-UnaryOperator 0x13e828850 <col:26, col:32> '<dependent type>' contains-errors prefix '*' cannot overflow       | | |   | `-ImplicitCastExpr 0x13e828838 <col:27, col:32> '<dependent type>' contains-errors <LValueToRValue>       | | |   |   `-CXXDependentScopeMemberExpr 0x13e8287f0 <col:27, col:32> '<dependent type>' contains-errors lvalue ->arg       | | |   |     `-RecoveryExpr 0x13e8287d0 <col:27> '<dependent type>' contains-errors lvalue       | | |   `-CharacterLiteral 0x13e828868 <col:39> 'int' 43       | | |-CompoundAssignOperator 0x13e8289d8 <line:20:6, col:15> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'       | | | |-DeclRefExpr 0x13e8288c0 <col:6> 'int' lvalue Var 0x13e80dec0 'n' 'int'       | | | `-CXXDependentScopeMemberExpr 0x13e828990 <col:11, col:15> '<dependent type>' contains-errors lvalue ->w_width       | | |   `-RecoveryExpr 0x13e828970 <col:11> '<dependent type>' contains-errors lvalue       | | `-IfStmt 0x13e828d38 <line:21:7, line:22:10>       | |   |-BinaryOperator 0x13e828cb8 <line:21:11, col:36> 'int' contains-errors '&&'       | |   | |-BinaryOperator 0x13e828c20 <col:11, col:16> 'int' '=='       | |   | | |-ImplicitCastExpr 0x13e828c08 <col:11> 'int' <LValueToRValue>       | |   | | | `-DeclRefExpr 0x13e828a08 <col:11> 'int' lvalue Var 0x13e80dec0 'n' 'int'       | |   | | `-IntegerLiteral 0x13e828a28 <col:16> 'int' 0       | |   | `-BinaryOperator 0x13e828c98 <col:21, col:36> 'int' contains-errors '=='       | |   |   |-ArraySubscriptExpr 0x13e828c58 <col:21, col:31> '<dependent type>' contains-errors lvalue       | |   |   | |-ImplicitCastExpr 0x13e828c40 <col:21, col:26> '<dependent type>' contains-errors <LValueToRValue>       | |   |   | | `-CXXDependentScopeMemberExpr 0x13e828aa0 <col:21, col:26> '<dependent type>' contains-errors lvalue ->arg       | |   |   | |   `-RecoveryExpr 0x13e828a80 <col:21> '<dependent type>' contains-errors lvalue       | |   |   | `-IntegerLiteral 0x13e828ae8 <col:30> 'int' 0       | |   |   `-RecoveryExpr 0x13e828c78 <col:36> '<dependent type>' contains-errors lvalue       | |   `-BinaryOperator 0x13e828d18 <line:22:6, col:10> 'int' '='       | |     |-DeclRefExpr 0x13e828cd8 <col:6> 'int' lvalue Var 0x13e80dec0 'n' 'int'       | |     `-IntegerLiteral 0x13e828cf8 <col:10> 'int' 9999       | `-CallExpr 0x13e829018 <line:23:2, col:29> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x13e828e68 <col:2> 'int ()' Function 0x13e828db0 'win_setwidth_win' 'int ()'       |   |-CStyleCastExpr 0x13e828fd0 <col:19, col:24> 'int' <NoOp>       |   | `-ImplicitCastExpr 0x13e828fb8 <col:24> 'int' <LValueToRValue> part_of_explicit_cast       |   |   `-DeclRefExpr 0x13e828e88 <col:24> 'int' lvalue Var 0x13e80dec0 'n' 'int'       |   `-RecoveryExpr 0x13e828ff8 <col:27> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x13e82a880 <line:26:5, line:32:5>         `-IfStmt 0x13e82a6d8 <line:27:2, line:30:10> has_else           |-BinaryOperator 0x13e82a220 <line:27:6, col:39> 'int' contains-errors '||'           | |-BinaryOperator 0x13e829118 <col:6, col:19> 'int' contains-errors '=='           | | |-UnaryOperator 0x13e8290e8 <col:6, col:12> '<dependent type>' contains-errors prefix '*' cannot overflow           | | | `-ImplicitCastExpr 0x13e8290d0 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>           | | |   `-CXXDependentScopeMemberExpr 0x13e829088 <col:7, col:12> '<dependent type>' contains-errors lvalue ->arg           | | |     `-RecoveryExpr 0x13e829068 <col:7> '<dependent type>' contains-errors lvalue           | | `-CharacterLiteral 0x13e829100 <col:19> 'int' 45           | `-BinaryOperator 0x13e82a200 <col:26, col:39> 'int' contains-errors '=='           |   |-UnaryOperator 0x13e8291b8 <col:26, col:32> '<dependent type>' contains-errors prefix '*' cannot overflow           |   | `-ImplicitCastExpr 0x13e8291a0 <col:27, col:32> '<dependent type>' contains-errors <LValueToRValue>           |   |   `-CXXDependentScopeMemberExpr 0x13e829158 <col:27, col:32> '<dependent type>' contains-errors lvalue ->arg           |   |     `-RecoveryExpr 0x13e829138 <col:27> '<dependent type>' contains-errors lvalue           |   `-CharacterLiteral 0x13e8291d0 <col:39> 'int' 43           |-CompoundAssignOperator 0x13e82a358 <line:28:6, col:15> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'           | |-DeclRefExpr 0x13e82a240 <col:6> 'int' lvalue Var 0x13e80dec0 'n' 'int'           | `-CXXDependentScopeMemberExpr 0x13e82a310 <col:11, col:15> '<dependent type>' contains-errors lvalue ->w_height           |   `-RecoveryExpr 0x13e82a2f0 <col:11> '<dependent type>' contains-errors lvalue           `-IfStmt 0x13e82a6b8 <line:29:7, line:30:10>             |-BinaryOperator 0x13e82a638 <line:29:11, col:36> 'int' contains-errors '&&'             | |-BinaryOperator 0x13e82a5a0 <col:11, col:16> 'int' '=='             | | |-ImplicitCastExpr 0x13e82a588 <col:11> 'int' <LValueToRValue>             | | | `-DeclRefExpr 0x13e82a388 <col:11> 'int' lvalue Var 0x13e80dec0 'n' 'int'             | | `-IntegerLiteral 0x13e82a3a8 <col:16> 'int' 0             | `-BinaryOperator 0x13e82a618 <col:21, col:36> 'int' contains-errors '=='             |   |-ArraySubscriptExpr 0x13e82a5d8 <col:21, col:31> '<dependent type>' contains-errors lvalue             |   | |-ImplicitCastExpr 0x13e82a5c0 <col:21, col:26> '<dependent type>' contains-errors <LValueToRValue>             |   | | `-CXXDependentScopeMemberExpr 0x13e82a420 <col:21, col:26> '<dependent type>' contains-errors lvalue ->arg             |   | |   `-RecoveryExpr 0x13e82a400 <col:21> '<dependent type>' contains-errors lvalue             |   | `-IntegerLiteral 0x13e82a468 <col:30> 'int' 0             |   `-RecoveryExpr 0x13e82a5f8 <col:36> '<dependent type>' contains-errors lvalue             `-BinaryOperator 0x13e82a698 <line:30:6, col:10> 'int' '='               |-DeclRefExpr 0x13e82a658 <col:6> 'int' lvalue Var 0x13e80dec0 'n' 'int'               `-IntegerLiteral 0x13e82a678 <col:10> 'int' 9999 ","19627":"`-FunctionDecl 0x146100400  line:1:1 mesalink_connect_step3 'int (struct connectdata *, int)'   |-ParmVarDecl 0x14481f848 <col:24, col:44> col:44 used conn 'struct connectdata *'   |-ParmVarDecl 0x14481f8c8 <col:50, col:54> col:54 used sockindex 'int'   `-CompoundStmt 0x146100b88 <line:2:1, line:44:1>     |-DeclStmt 0x1461007f0 <line:4:3, col:59>     | |-RecordDecl 0x146100518 <col:3, col:10> col:10 struct ssl_connect_data     | `-VarDecl 0x146100688 <col:3, col:58> col:28 used connssl 'struct ssl_connect_data *' cinit     |   `-UnaryOperator 0x1461007c0 <col:38, col:58> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-ArraySubscriptExpr 0x1461007a0 <col:39, col:58> '<dependent type>' contains-errors lvalue     |       |-ImplicitCastExpr 0x146100770 <col:39, col:45> '<dependent type>' contains-errors <LValueToRValue>     |       | `-RecoveryExpr 0x146100728 <col:39, col:45> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x1461006f0 <col:39> 'struct connectdata *' lvalue ParmVar 0x14481f848 'conn' 'struct connectdata *'     |       `-ImplicitCastExpr 0x146100788 <col:49> 'int' <LValueToRValue>     |         `-DeclRefExpr 0x146100750 <col:49> 'int' lvalue ParmVar 0x14481f8c8 'sockindex' 'int'     |-CallExpr 0x146100a40 <line:6:3, col:57> '<dependent type>' contains-errors     | |-DeclRefExpr 0x146100920 <col:3> 'int ()' Function 0x146100868 'DEBUGASSERT' 'int ()'     | `-BinaryOperator 0x146100a20 <col:15, col:41> 'int' contains-errors '=='     |   |-RecoveryExpr 0x146100a00 <col:15> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x146100990 <col:32, col:41> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x146100958 <col:32> 'struct ssl_connect_data *' contains-errors lvalue Var 0x146100688 'connssl' 'struct ssl_connect_data *'     |-BinaryOperator 0x146100b20 <line:41:3, col:31> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x146100aa0 <col:3, col:12> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x146100a68 <col:3> 'struct ssl_connect_data *' contains-errors lvalue Var 0x146100688 'connssl' 'struct ssl_connect_data *'     | `-RecoveryExpr 0x146100b00 <col:31> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x146100b78 <line:43:3, col:10>       `-RecoveryExpr 0x146100b58 <col:10> '<dependent type>' contains-errors lvalue ","19553":"`-FunctionDecl 0x1541282e0  line:1:13 invalid bpf_ringbuf_commit 'void (void *, int, int)' static   |-ParmVarDecl 0x1541280d8 <col:32, col:38> col:38 used sample 'void *'   |-ParmVarDecl 0x154128170 <col:46, col:50> col:50 invalid flags 'int'   |-ParmVarDecl 0x1541281f0 <col:57, col:62> col:62 invalid discard 'int'   `-CompoundStmt 0x154131d80 <line:2:1, line:25:1>     |-DeclStmt 0x1541284b8 <line:3:2, col:33>     | |-VarDecl 0x1541283b8 <col:2, col:16> col:16 used rec_pos 'unsigned long'     | `-VarDecl 0x154128438 <col:2, col:25> col:25 used cons_pos 'unsigned long'     |-DeclStmt 0x1541286b8 <line:4:2, col:29>     | |-RecordDecl 0x1541284d0 <col:2, col:9> col:9 struct bpf_ringbuf_hdr     | `-VarDecl 0x154128638 <col:2, col:26> col:26 used hdr 'struct bpf_ringbuf_hdr *'     |-DeclStmt 0x1548196d8 <line:5:2, col:24>     | |-RecordDecl 0x1541286d0 <col:2, col:9> col:9 struct bpf_ringbuf     | `-VarDecl 0x154819658 <col:2, col:22> col:22 used rb 'struct bpf_ringbuf *'     |-BinaryOperator 0x1548197c8 <line:8:2, col:17> 'struct bpf_ringbuf_hdr *' contains-errors '='     | |-DeclRefExpr 0x1548196f0 <col:2> 'struct bpf_ringbuf_hdr *' lvalue Var 0x154128638 'hdr' 'struct bpf_ringbuf_hdr *'     | `-BinaryOperator 0x1548197a8 <col:8, col:17> '<dependent type>' contains-errors '-'     |   |-DeclRefExpr 0x154819710 <col:8> 'void *' lvalue ParmVar 0x1541280d8 'sample' 'void *'     |   `-RecoveryExpr 0x154819788 <col:17> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x154819e60 <line:9:2, col:39> 'struct bpf_ringbuf *' '='     | |-DeclRefExpr 0x1548197e8 <col:2> 'struct bpf_ringbuf *' lvalue Var 0x154819658 'rb' 'struct bpf_ringbuf *'     | `-ImplicitCastExpr 0x154819a28 <col:7, col:39> 'struct bpf_ringbuf *' <IntegralToPointer>     |   `-CallExpr 0x1548199e8 <col:7, col:39> 'int'     |     |-ImplicitCastExpr 0x1548199d0 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x154819960 <col:7> 'int ()' Function 0x1548198a8 'bpf_ringbuf_restore_from_rec' 'int ()'     |     `-ImplicitCastExpr 0x154819a10 <col:36> 'struct bpf_ringbuf_hdr *' <LValueToRValue>     |       `-DeclRefExpr 0x154819980 <col:36> 'struct bpf_ringbuf_hdr *' lvalue Var 0x154128638 'hdr' 'struct bpf_ringbuf_hdr *'     |-CallExpr 0x15481a130 <line:15:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15481a030 <col:2> 'int ()' Function 0x154819f78 'xchg' 'int ()'     | |-UnaryOperator 0x15481a0b0 <col:7, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x15481a088 <col:8, col:13> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15481a050 <col:8> 'struct bpf_ringbuf_hdr *' lvalue Var 0x154128638 'hdr' 'struct bpf_ringbuf_hdr *'     | `-RecoveryExpr 0x15481a110 <col:18> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x15481a2d0 <line:18:2, col:38> 'unsigned long' contains-errors '='     | |-DeclRefExpr 0x15481a160 <col:2> 'unsigned long' lvalue Var 0x1541283b8 'rec_pos' 'unsigned long'     | `-ImplicitCastExpr 0x15481a2b8 <col:12, col:38> 'unsigned long' contains-errors <IntegralCast>     |   `-BinaryOperator 0x15481a298 <col:12, col:38> 'long' contains-errors '-'     |     |-CStyleCastExpr 0x15481a1d0 <col:12, col:20> 'void *' <BitCast>     |     | `-ImplicitCastExpr 0x15481a1b8 <col:20> 'struct bpf_ringbuf_hdr *' <LValueToRValue> part_of_explicit_cast     |     |   `-DeclRefExpr 0x15481a180 <col:20> 'struct bpf_ringbuf_hdr *' lvalue Var 0x154128638 'hdr' 'struct bpf_ringbuf_hdr *'     |     `-CStyleCastExpr 0x15481a270 <col:26, col:38> 'void *' contains-errors <Dependent>     |       `-RecoveryExpr 0x15481a230 <col:34, col:38> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x15481a1f8 <col:34> 'struct bpf_ringbuf *' lvalue Var 0x154819658 'rb' 'struct bpf_ringbuf *'     |-BinaryOperator 0x15481a530 <line:19:2, col:55> 'unsigned long' contains-errors '='     | |-DeclRefExpr 0x15481a2f0 <col:2> 'unsigned long' lvalue Var 0x154128438 'cons_pos' 'unsigned long'     | `-BinaryOperator 0x15481a510 <col:13, col:55> '<dependent type>' contains-errors '&'     |   |-CallExpr 0x15481a488 <col:13, col:47> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x15481a3f0 <col:13> 'int ()' Function 0x15481a338 'smp_load_acquire' 'int ()'     |   | `-UnaryOperator 0x15481a470 <col:30, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x15481a448 <col:31, col:35> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x15481a410 <col:31> 'struct bpf_ringbuf *' lvalue Var 0x154819658 'rb' 'struct bpf_ringbuf *'     |   `-RecoveryExpr 0x15481a4e8 <col:51, col:55> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x15481a4b0 <col:51> 'struct bpf_ringbuf *' lvalue Var 0x154819658 'rb' 'struct bpf_ringbuf *'     `-IfStmt 0x154131d50 <line:21:2, line:24:27> has_else       |-BinaryOperator 0x15481a5c8 <line:21:6, col:14> '<dependent type>' contains-errors '&'       | |-RecoveryExpr 0x15481a550 <col:6> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x15481a5a8 <col:14> '<dependent type>' contains-errors lvalue       |-CallExpr 0x154131b78 <line:22:3, col:27> '<dependent type>' contains-errors       | |-DeclRefExpr 0x154131ae0 <col:3> 'int ()' Function 0x154131a28 'irq_work_queue' 'int ()'       | `-UnaryOperator 0x154131b60 <col:18, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow       |   `-RecoveryExpr 0x154131b38 <col:19, col:23> '<dependent type>' contains-errors lvalue       |     `-DeclRefExpr 0x154131b00 <col:19> 'struct bpf_ringbuf *' lvalue Var 0x154819658 'rb' 'struct bpf_ringbuf *'       `-IfStmt 0x154131d30 <line:23:7, line:24:27>         |-RecoveryExpr 0x154131c50 <line:23:11, col:60> '_Bool' contains-errors         `-CallExpr 0x154131d08 <line:24:3, col:27> '<dependent type>' contains-errors           |-DeclRefExpr 0x154131c70 <col:3> 'int ()' Function 0x154131a28 'irq_work_queue' 'int ()'           `-UnaryOperator 0x154131cf0 <col:18, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow             `-RecoveryExpr 0x154131cc8 <col:19, col:23> '<dependent type>' contains-errors lvalue               `-DeclRefExpr 0x154131c90 <col:19> 'struct bpf_ringbuf *' lvalue Var 0x154819658 'rb' 'struct bpf_ringbuf *' ","19500":"`-FunctionDecl 0x11f928758  line:1:15 arch_randomize_brk 'unsigned long (struct mm_struct *)'   |-ParmVarDecl 0x11f928648 <col:34, col:52> col:52 used mm 'struct mm_struct *'   `-CompoundStmt 0x11f941118 <line:2:1, line:18:1>     |-DeclStmt 0x11f940b30 <line:3:2, col:30>     | `-VarDecl 0x11f940a68 <col:2, col:27> col:16 used base 'unsigned long' cinit     |   `-RecoveryExpr 0x11f940b08 <col:23, col:27> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x11f940ad0 <col:23> 'struct mm_struct *' lvalue ParmVar 0x11f928648 'mm' 'struct mm_struct *'     |-DeclStmt 0x11f940bc8 <line:4:2, col:19>     | `-VarDecl 0x11f940b60 <col:2, col:16> col:16 used ret 'unsigned long'     |-BinaryOperator 0x11f940f80 <line:12:2, col:35> 'unsigned long' contains-errors '='     | |-DeclRefExpr 0x11f940be0 <col:2> 'unsigned long' lvalue Var 0x11f940b60 'ret' 'unsigned long'     | `-ImplicitCastExpr 0x11f940f68 <col:8, col:35> 'unsigned long' contains-errors <IntegralCast>     |   `-CallExpr 0x11f940f40 <col:8, col:35> 'int' contains-errors     |     |-ImplicitCastExpr 0x11f940f28 <col:8> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x11f940d30 <col:8> 'int ()' Function 0x11f940c78 'PAGE_ALIGN' 'int ()'     |     `-BinaryOperator 0x11f940f08 <col:19, col:34> 'unsigned long' contains-errors '+'     |       |-ImplicitCastExpr 0x11f940ed8 <col:19> 'unsigned long' contains-errors <LValueToRValue>     |       | `-DeclRefExpr 0x11f940d50 <col:19> 'unsigned long' contains-errors lvalue Var 0x11f940a68 'base' 'unsigned long'     |       `-ImplicitCastExpr 0x11f940ef0 <col:26, col:34> 'unsigned long' <IntegralCast>     |         `-CallExpr 0x11f940eb8 <col:26, col:34> 'int'     |           `-ImplicitCastExpr 0x11f940ea0 <col:26> 'int (*)()' <FunctionToPointerDecay>     |             `-DeclRefExpr 0x11f940e50 <col:26> 'int ()' Function 0x11f940d98 'brk_rnd' 'int ()'     |-IfStmt 0x11f9410b0 <line:14:2, line:15:14>     | |-BinaryOperator 0x11f941020 <line:14:6, col:16> 'int' contains-errors '<'     | | |-DeclRefExpr 0x11f940fa0 <col:6> 'unsigned long' lvalue Var 0x11f940b60 'ret' 'unsigned long'     | | `-RecoveryExpr 0x11f940ff8 <col:12, col:16> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x11f940fc0 <col:12> 'struct mm_struct *' lvalue ParmVar 0x11f928648 'mm' 'struct mm_struct *'     | `-ReturnStmt 0x11f9410a0 <line:15:3, col:14>     |   `-RecoveryExpr 0x11f941078 <col:10, col:14> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x11f941040 <col:10> 'struct mm_struct *' lvalue ParmVar 0x11f928648 'mm' 'struct mm_struct *'     `-ReturnStmt 0x11f941108 <line:17:2, col:9>       `-ImplicitCastExpr 0x11f9410f0 <col:9> 'unsigned long' <LValueToRValue>         `-DeclRefExpr 0x11f9410d0 <col:9> 'unsigned long' lvalue Var 0x11f940b60 'ret' 'unsigned long' ","20167":"`-FunctionDecl 0x1369281c8  line:1:1 invalid _tiffSizeProc 'int (int)'   |-ParmVarDecl 0x1369280f0 <col:15, col:25> col:25 invalid hdata 'int'   `-CompoundStmt 0x1369286c8 <col:32, line:8:1>     |-CallExpr 0x1369284e8 <line:4:5, col:18> 'int'     | |-ImplicitCastExpr 0x1369284d0 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x136928400 <col:5> 'int ()' Function 0x136928348 'TRACE' 'int ()'     | `-ImplicitCastExpr 0x136928510 <col:11, col:17> 'char *' <ArrayToPointerDecay>     |   `-ParenExpr 0x136928480 <col:11, col:17> 'char[4]' lvalue     |     `-StringLiteral 0x136928460 <col:12> 'char[4]' lvalue \"STR\"     `-CallExpr 0x136928688 <line:5:5, col:21> '<dependent type>' contains-errors       |-DeclRefExpr 0x136928608 <col:5> 'int ()' Function 0x136928550 'dump_state' 'int ()'       `-RecoveryExpr 0x136928668 <col:16> '<dependent type>' contains-errors lvalue ","19516":"`-FunctionDecl 0x15901f5e8  line:1:1 invalid rsvg_handle_write_impl 'int (int *, const char *, int, int **)'   |-ParmVarDecl 0x15901f328 <col:25, col:38> col:38 referenced invalid handle 'int *'   |-ParmVarDecl 0x15901f3a8 <col:46, col:61> col:61 used buf 'const char *'   |-ParmVarDecl 0x15901f428 <col:66, col:72> col:72 invalid count 'int'   |-ParmVarDecl 0x15901f4e0 <col:79, col:89> col:89 referenced invalid error 'int **'   `-CompoundStmt 0x1590490b0 <line:2:1, line:31:1>     |-BinaryOperator 0x15901f7c8 <line:3:5, col:26> '<dependent type>' contains-errors '='     | |-BinaryOperator 0x15901f788 <col:5, col:13> '<dependent type>' contains-errors '*'     | | |-RecoveryExpr 0x15901f6d0 <col:5> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x15901f6b0 <col:5> 'int **' lvalue ParmVar 0x15901f4e0 'error' 'int **'     | | `-RecoveryExpr 0x15901f768 <col:13> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x15901f7a8 <col:26> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x15901f868 <line:4:5, col:15>     | `-VarDecl 0x15901f800 <col:5, col:9> col:9 used result 'int'     |-CallExpr 0x149102f28 <line:6:5, col:58> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15901f9e0 <col:5> 'int ()' Function 0x15901f928 'rsvg_return_val_if_fail' 'int ()'     | |-BinaryOperator 0x149102ee8 <col:30, col:40> 'int' contains-errors '!='     | | |-RecoveryExpr 0x149102e00 <col:30> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x149102ec8 <col:40> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x149102f08 <col:46> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x149102e70 <col:53> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1491030c0 <line:8:5, col:28> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x149102ff0 <col:5, col:19> '<dependent type>' contains-errors lvalue ->error     | | `-CXXDependentScopeMemberExpr 0x149102fa8 <col:5, col:13> '<dependent type>' contains-errors lvalue ->priv     | |   `-RecoveryExpr 0x149102f80 <col:5> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x149102f60 <col:5> 'int *' lvalue ParmVar 0x15901f328 'handle' 'int *'     | `-UnaryOperator 0x1491030a8 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x149103088 <col:28> '<dependent type>' contains-errors lvalue     |-IfStmt 0x149103890 <line:9:5, line:15:5>     | |-BinaryOperator 0x1491031e8 <line:9:9, col:31> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x149103148 <col:9, col:23> '<dependent type>' contains-errors lvalue ->ctxt     | | | `-CXXDependentScopeMemberExpr 0x149103100 <col:9, col:17> '<dependent type>' contains-errors lvalue ->priv     | | |   `-RecoveryExpr 0x1491030e0 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1491031c8 <col:31> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x149103870 <col:37, line:15:5>     |   |-BinaryOperator 0x1491036b8 <line:10:9, line:11:88> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x149103298 <line:10:9, col:23> '<dependent type>' contains-errors lvalue ->ctxt     |   | | `-CXXDependentScopeMemberExpr 0x149103250 <col:9, col:17> '<dependent type>' contains-errors lvalue ->priv     |   | |   `-RecoveryExpr 0x149103228 <col:9> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x149103208 <col:9> 'int *' lvalue ParmVar 0x15901f328 'handle' 'int *'     |   | `-CallExpr 0x149103670 <col:30, line:11:88> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x1491033c0 <line:10:30> 'int ()' Function 0x149103308 'xmlCreatePushParserCtxt' 'int ()'     |   |   |-UnaryOperator 0x149103638 <col:55, col:56> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   | `-RecoveryExpr 0x149103618 <col:56> '<dependent type>' contains-errors lvalue     |   |   |-RecoveryExpr 0x149103410 <col:78> '<dependent type>' contains-errors lvalue     |   |   |-RecoveryExpr 0x149103650 <col:86> '<dependent type>' contains-errors lvalue     |   |   |-IntegerLiteral 0x149103448 <col:92> 'int' 0     |   |   `-CallExpr 0x149103588 <line:11:55, col:87> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x149103548 <col:55> 'int ()' Function 0x149103490 'rsvg_handle_get_base_uri' 'int ()'     |   |     `-RecoveryExpr 0x149103568 <col:81> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x149103850 <line:14:9, col:47> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x1491037b0 <col:9, col:29> '<dependent type>' contains-errors lvalue ->replaceEntities     |     | `-CXXDependentScopeMemberExpr 0x149103768 <col:9, col:23> '<dependent type>' contains-errors lvalue ->ctxt     |     |   `-CXXDependentScopeMemberExpr 0x149103720 <col:9, col:17> '<dependent type>' contains-errors lvalue ->priv     |     |     `-RecoveryExpr 0x1491036f8 <col:9> '<dependent type>' contains-errors lvalue     |     |       `-DeclRefExpr 0x1491036d8 <col:9> 'int *' lvalue ParmVar 0x15901f328 'handle' 'int *'     |     `-RecoveryExpr 0x149103830 <col:47> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x149103b78 <line:17:5, col:71> 'int' contains-errors '='     | |-DeclRefExpr 0x1491038b0 <col:5> 'int' lvalue Var 0x15901f800 'result' 'int'     | `-CallExpr 0x149103b38 <col:14, col:71> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1491039b0 <col:14> 'int ()' Function 0x1491038f8 'xmlParseChunk' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x149103a38 <col:29, col:43> '<dependent type>' contains-errors lvalue ->ctxt     |   | `-CXXDependentScopeMemberExpr 0x1491039f0 <col:29, col:37> '<dependent type>' contains-errors lvalue ->priv     |   |   `-RecoveryExpr 0x1491039d0 <col:29> '<dependent type>' contains-errors lvalue     |   |-CStyleCastExpr 0x149103ad0 <col:49, col:58> 'char *' <NoOp>     |   | `-ImplicitCastExpr 0x149103ab8 <col:58> 'const char *' <LValueToRValue> part_of_explicit_cast     |   |   `-DeclRefExpr 0x149103a80 <col:58> 'const char *' lvalue ParmVar 0x15901f3a8 'buf' 'const char *'     |   |-RecoveryExpr 0x149103af8 <col:63> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x149103b18 <col:70> 'int' 0     |-IfStmt 0x159048e48 <line:18:5, line:21:5>     | |-BinaryOperator 0x149103bf0 <line:18:9, col:19> 'int' '!='     | | |-ImplicitCastExpr 0x149103bd8 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x149103b98 <col:9> 'int' lvalue Var 0x15901f800 'result' 'int'     | | `-IntegerLiteral 0x149103bb8 <col:19> 'int' 0     | `-CompoundStmt 0x159048e30 <col:22, line:21:5>     |   `-CallExpr 0x159048e00 <line:19:9, col:50> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x149103cf0 <col:9> 'int ()' Function 0x149103c38 'rsvg_set_error' 'int ()'     |     |-RecoveryExpr 0x149103d10 <col:25> '<dependent type>' contains-errors lvalue     |     `-CXXDependentScopeMemberExpr 0x149103d98 <col:32, col:46> '<dependent type>' contains-errors lvalue ->ctxt     |       `-CXXDependentScopeMemberExpr 0x149103d50 <col:32, col:40> '<dependent type>' contains-errors lvalue ->priv     |         `-RecoveryExpr 0x149103d30 <col:32> '<dependent type>' contains-errors lvalue     `-IfStmt 0x159049090 <line:25:5, line:28:5>       |-RecoveryExpr 0x159048f40 <line:25:9, col:23> '_Bool' contains-errors       `-CompoundStmt 0x159049080 <col:29, line:28:5> ","20045":"`-FunctionDecl 0x14b8279f0  col:8 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern   |-ParmVarDecl 0x14b827af0 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x14b827b58 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-ParmVarDecl 0x14b827bc0 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x14b827a98 <<invalid sloc>> Implicit 905   `-FormatAttr 0x14b827c40 <col:8> Implicit printf 3 4 ","19913":"`-FunctionDecl 0x130827608  line:1:12 invalid get_vdev_port_node_info 'int (struct mdesc_handle *, int, union md_node_info *)' static   |-ParmVarDecl 0x13080e248 <col:36, col:57> col:57 used md 'struct mdesc_handle *'   |-ParmVarDecl 0x13080e2e0 <col:61, col:65> col:65 invalid node 'int'   |-ParmVarDecl 0x1308274c8 <line:2:8, col:28> col:28 used node_info 'union md_node_info *'   `-CompoundStmt 0x1278fe608 <line:3:1, line:21:1>     |-DeclStmt 0x130827748 <line:4:2, col:28>     | `-VarDecl 0x1308276e0 <col:2, col:13> col:13 referenced invalid parent_cfg_hdlp 'const int *'     |-DeclStmt 0x1308277e0 <line:5:2, col:18>     | `-VarDecl 0x130827778 <col:2, col:14> col:14 used name 'const char *'     |-DeclStmt 0x130827878 <line:6:2, col:16>     | `-VarDecl 0x130827810 <col:2, col:13> col:13 referenced invalid idp 'const int *'     |-BinaryOperator 0x130827bc8 <line:9:2, col:48> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1308278b0 <col:2> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x130827890 <col:2> 'const int *' lvalue Var 0x130827810 'idp' 'const int *'     | `-CallExpr 0x130827b88 <col:8, col:48> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x130827a30 <col:8> 'int ()' Function 0x130827978 'mdesc_get_property' 'int ()'     |   |-DeclRefExpr 0x130827a50 <col:27> 'struct mdesc_handle *' lvalue ParmVar 0x13080e248 'md' 'struct mdesc_handle *'     |   |-RecoveryExpr 0x130827a70 <col:31> '<dependent type>' contains-errors lvalue     |   |-StringLiteral 0x130827ad0 <col:37> 'char[4]' lvalue \"STR\"     |   `-RecoveryExpr 0x130827b68 <col:44> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x130827d60 <line:10:2, col:49> 'const char *' contains-errors '='     | |-DeclRefExpr 0x130827be8 <col:2> 'const char *' lvalue Var 0x130827778 'name' 'const char *'     | `-CallExpr 0x130827d20 <col:9, col:49> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x130827c08 <col:9> 'int ()' Function 0x130827978 'mdesc_get_property' 'int ()'     |   |-DeclRefExpr 0x130827c28 <col:28> 'struct mdesc_handle *' lvalue ParmVar 0x13080e248 'md' 'struct mdesc_handle *'     |   |-RecoveryExpr 0x130827c48 <col:32> '<dependent type>' contains-errors lvalue     |   |-StringLiteral 0x130827c68 <col:38> 'char[4]' lvalue \"STR\"     |   `-RecoveryExpr 0x130827d00 <col:45> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x130827f38 <line:11:2, col:46> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x130827da0 <col:2> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x130827d80 <col:2> 'const int *' lvalue Var 0x1308276e0 'parent_cfg_hdlp' 'const int *'     | `-CallExpr 0x130827f08 <col:20, col:46> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x130827ea8 <col:20> 'int ()' Function 0x130827df0 'parent_cfg_handle' 'int ()'     |   |-DeclRefExpr 0x130827ec8 <col:38> 'struct mdesc_handle *' lvalue ParmVar 0x13080e248 'md' 'struct mdesc_handle *'     |   `-RecoveryExpr 0x130827ee8 <col:42> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1308280d0 <line:13:2, line:14:11>     | |-BinaryOperator 0x130828068 <line:13:6, col:24> 'int' contains-errors '||'     | | |-BinaryOperator 0x130827ff8 <col:6, col:15> 'int' contains-errors '||'     | | | |-UnaryOperator 0x130827f90 <col:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | `-ImplicitCastExpr 0x130827f78 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | | | |   `-RecoveryExpr 0x130827f58 <col:7> '<dependent type>' contains-errors lvalue     | | | `-UnaryOperator 0x130827fe0 <col:14, col:15> 'int' prefix '!' cannot overflow     | | |   `-ImplicitCastExpr 0x130827fc8 <col:15> 'const char *' <LValueToRValue>     | | |     `-DeclRefExpr 0x130827fa8 <col:15> 'const char *' lvalue Var 0x130827778 'name' 'const char *'     | | `-UnaryOperator 0x130828050 <col:23, col:24> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x130828038 <col:24> '<dependent type>' contains-errors <LValueToRValue>     | |     `-RecoveryExpr 0x130828018 <col:24> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1308280c0 <line:14:3, col:11>     |   `-UnaryOperator 0x1308280a8 <col:10, col:11> 'int' prefix '-'     |     `-IntegerLiteral 0x130828088 <col:11> 'int' 1     |-BinaryOperator 0x1308281e8 <line:16:2, col:29> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x130828150 <col:2, col:23> '<dependent type>' contains-errors lvalue .id     | | `-RecoveryExpr 0x130828128 <col:2, col:13> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1308280f0 <col:2> 'union md_node_info *' lvalue ParmVar 0x1308274c8 'node_info' 'union md_node_info *'     | `-UnaryOperator 0x1308281d0 <col:28, col:29> '<dependent type>' contains-errors prefix '*' cannot overflow     |   `-ImplicitCastExpr 0x1308281b8 <col:29> '<dependent type>' contains-errors <LValueToRValue>     |     `-RecoveryExpr 0x130828198 <col:29> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1278fe4a0 <line:17:2, col:60> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x130828268 <col:2, col:23> '<dependent type>' contains-errors lvalue .name     | | `-RecoveryExpr 0x130828240 <col:2, col:13> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x130828208 <col:2> 'union md_node_info *' lvalue ParmVar 0x1308274c8 'node_info' 'union md_node_info *'     | `-CallExpr 0x1278fe470 <col:30, col:60> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x130828390 <col:30> 'int ()' Function 0x1308282d8 'kstrdup_const' 'int ()'     |   |-DeclRefExpr 0x1308283b0 <col:44> 'const char *' lvalue Var 0x130827778 'name' 'const char *'     |   `-RecoveryExpr 0x1278fe450 <col:50> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1278fe5b8 <line:18:2, col:41> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1278fe520 <col:2, col:23> '<dependent type>' contains-errors lvalue .parent_cfg_hdl     | | `-RecoveryExpr 0x1278fe4f8 <col:2, col:13> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1278fe4c0 <col:2> 'union md_node_info *' lvalue ParmVar 0x1308274c8 'node_info' 'union md_node_info *'     | `-UnaryOperator 0x1278fe5a0 <col:40, col:41> '<dependent type>' contains-errors prefix '*' cannot overflow     |   `-ImplicitCastExpr 0x1278fe588 <col:41> '<dependent type>' contains-errors <LValueToRValue>     |     `-RecoveryExpr 0x1278fe568 <col:41> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1278fe5f8 <line:20:2, col:9>       `-IntegerLiteral 0x1278fe5d8 <col:9> 'int' 0 ","19993":"`-FunctionDecl 0x13e928750  line:1:13 cdev_default_release 'void (struct kobject *)' static   |-ParmVarDecl 0x13e928648 <col:34, col:50> col:50 used kobj 'struct kobject *'   `-CompoundStmt 0x13e941270 <line:2:1, line:8:1>     |-DeclStmt 0x13e940dc8 <line:3:2, col:56>     | |-RecordDecl 0x13e940a48 <col:2, col:9> col:9 struct cdev     | `-VarDecl 0x13e940bb8 <col:2, col:15> col:15 used p 'struct cdev *'     |-DeclStmt 0x13e940f30 <line:4:2, col:39>     | `-VarDecl 0x13e940e68 <col:2, col:33> col:18 used parent 'struct kobject *' cinit     |   `-RecoveryExpr 0x13e940f08 <col:27, col:33> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13e940ed0 <col:27> 'struct kobject *' lvalue ParmVar 0x13e928648 'kobj' 'struct kobject *'     |-CallExpr 0x13e9410b8 <line:6:2, col:14> 'int'     | |-ImplicitCastExpr 0x13e9410a0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13e941028 <col:2> 'int ()' Function 0x13e940f70 'cdev_purge' 'int ()'     | `-ImplicitCastExpr 0x13e9410e0 <col:13> 'struct cdev *' <LValueToRValue>     |   `-DeclRefExpr 0x13e941048 <col:13> 'struct cdev *' lvalue Var 0x13e940bb8 'p' 'struct cdev *'     `-CallExpr 0x13e941230 <line:7:2, col:20> 'int' contains-errors       |-ImplicitCastExpr 0x13e941218 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x13e9411d8 <col:2> 'int ()' Function 0x13e941120 'kobject_put' 'int ()'       `-ImplicitCastExpr 0x13e941258 <col:14> 'struct kobject *' contains-errors <LValueToRValue>         `-DeclRefExpr 0x13e9411f8 <col:14> 'struct kobject *' contains-errors lvalue Var 0x13e940e68 'parent' 'struct kobject *' ","19073":"`-FunctionDecl 0x1599281a8  line:1:1 PHP_FUNCTION 'int (int)'   |-ParmVarDecl 0x1599280d8 <col:14> col:14 used chroot 'int'   `-CompoundStmt 0x159941468 <line:2:1, line:26:1>     |-DeclStmt 0x159928320 <line:3:2, col:11>     | `-VarDecl 0x1599282b8 <col:2, col:8> col:8 used str 'char *'     |-DeclStmt 0x159928450 <line:4:2, col:18>     | |-VarDecl 0x159928350 <col:2, col:6> col:6 used ret 'int'     | `-VarDecl 0x1599283d0 <col:2, col:11> col:11 str_len 'int'     |-IfStmt 0x159928760 <line:6:2, line:8:2>     | |-RecoveryExpr 0x159928730 <line:6:6, col:81> '_Bool' contains-errors     | `-CompoundStmt 0x159928750 <col:90, line:8:2>     |-BinaryOperator 0x159940e50 <line:10:2, col:18> 'int' contains-errors '='     | |-DeclRefExpr 0x159928780 <col:2> 'int' lvalue Var 0x159928350 'ret' 'int'     | `-RecoveryExpr 0x159940e20 <col:8, col:18> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x1599287a0 <col:8> 'int' lvalue ParmVar 0x1599280d8 'chroot' 'int'     |   `-DeclRefExpr 0x1599287c0 <col:15> 'char *' lvalue Var 0x1599282b8 'str' 'char *'     |-IfStmt 0x159941010 <line:11:2, line:14:2>     | |-BinaryOperator 0x159940ec8 <line:11:6, col:13> 'int' '!='     | | |-ImplicitCastExpr 0x159940eb0 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x159940e70 <col:6> 'int' lvalue Var 0x159928350 'ret' 'int'     | | `-IntegerLiteral 0x159940e90 <col:13> 'int' 0     | `-CompoundStmt 0x159941000 <col:16, line:14:2>     |-BinaryOperator 0x159941368 <line:18:2, col:19> 'int' '='     | |-DeclRefExpr 0x159941188 <col:2> 'int' lvalue Var 0x159928350 'ret' 'int'     | `-CallExpr 0x159941328 <col:8, col:19> 'int'     |   |-ImplicitCastExpr 0x159941310 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x159941288 <col:8> 'int ()' Function 0x1599411d0 'chdir' 'int ()'     |   `-ImplicitCastExpr 0x159941350 <col:14> 'char *' <ArrayToPointerDecay>     |     `-StringLiteral 0x1599412f0 <col:14> 'char[4]' lvalue \"STR\"     `-IfStmt 0x159941448 <line:20:2, line:23:2>       |-BinaryOperator 0x1599413e0 <line:20:6, col:13> 'int' '!='       | |-ImplicitCastExpr 0x1599413c8 <col:6> 'int' <LValueToRValue>       | | `-DeclRefExpr 0x159941388 <col:6> 'int' lvalue Var 0x159928350 'ret' 'int'       | `-IntegerLiteral 0x1599413a8 <col:13> 'int' 0       `-CompoundStmt 0x159941438 <col:16, line:23:2> ","20208":"`-FunctionDecl 0x1310274d8  line:1:1 invalid flow_wildcards_set_reg_mask 'int (struct flow_wildcards *, int, int)'   |-ParmVarDecl 0x13100e248 <col:29, col:52> col:52 used wc 'struct flow_wildcards *'   |-ParmVarDecl 0x13100e2c8 <col:56, col:60> col:60 used idx 'int'   |-ParmVarDecl 0x13100e360 <col:65, col:74> col:74 invalid mask 'int'   `-CompoundStmt 0x1310276f0 <line:2:1, line:4:1>     `-BinaryOperator 0x1310276d0 <line:3:5, col:27> '<dependent type>' contains-errors '='       |-ArraySubscriptExpr 0x131027690 <col:5, col:23> '<dependent type>' contains-errors lvalue       | |-ImplicitCastExpr 0x131027660 <col:5, col:15> '<dependent type>' contains-errors <LValueToRValue>       | | `-CXXDependentScopeMemberExpr 0x1310275f8 <col:5, col:15> '<dependent type>' contains-errors lvalue .regs       | |   `-RecoveryExpr 0x1310275d0 <col:5, col:9> '<dependent type>' contains-errors lvalue       | |     `-DeclRefExpr 0x131027598 <col:5> 'struct flow_wildcards *' lvalue ParmVar 0x13100e248 'wc' 'struct flow_wildcards *'       | `-ImplicitCastExpr 0x131027678 <col:20> 'int' <LValueToRValue>       |   `-DeclRefExpr 0x131027640 <col:20> 'int' lvalue ParmVar 0x13100e2c8 'idx' 'int'       `-RecoveryExpr 0x1310276b0 <col:27> '<dependent type>' contains-errors lvalue ","19286":"`-FunctionDecl 0x14783f300  col:7 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x14783f400 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x14783f3a8 <<invalid sloc>> Implicit 873 ","20154":"`-FunctionDecl 0x13c00df68  line:1:2 invalid Topic 'int (int *, const int *, const int)'   |-ParmVarDecl 0x13c00dd28 <col:8, col:14> col:14 invalid source 'int *'   |-ParmVarDecl 0x13c00dda8 <col:22, col:37> col:37 invalid chan 'const int *'   |-ParmVarDecl 0x13c00de28 <col:43, <invalid sloc>> col:52 invalid 'const int'   `-CompoundStmt 0x13c00e2d8 <line:3:2, line:6:2>     |-CallExpr 0x13c00e208 <line:4:3, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13c00e180 <col:3> 'int ()' Function 0x13c00e0c8 'PushParamRef' 'int ()'     | `-CXXDependentScopeMemberExpr 0x13c00e1c0 <col:16, col:22> '<dependent type>' contains-errors lvalue ->name     |   `-RecoveryExpr 0x13c00e1a0 <col:16> '<dependent type>' contains-errors lvalue     `-CallExpr 0x13c00e2b0 <line:5:3, col:24> '<dependent type>' contains-errors       |-DeclRefExpr 0x13c00e230 <col:3> 'int ()' Function 0x13c00e0c8 'PushParamRef' 'int ()'       `-RecoveryExpr 0x13c00e290 <col:16> '<dependent type>' contains-errors lvalue ","19943":"`-FunctionDecl 0x12a80e0c8  line:1:12 invalid mxf_read_primer_pack 'int (void *, int *, int, int, int, int)' static   |-ParmVarDecl 0x12a80dcd8 <col:33, col:39> col:39 used arg 'void *'   |-ParmVarDecl 0x12a80dda8 <col:44, col:57> col:57 invalid pb 'int *'   |-ParmVarDecl 0x12a80de28 <col:61, col:65> col:65 tag 'int'   |-ParmVarDecl 0x12a80dea8 <col:70, col:74> col:74 size 'int'   |-ParmVarDecl 0x12a80df28 <col:80, col:84> col:84 invalid uid 'int'   |-ParmVarDecl 0x12a80dfa8 <col:89, col:97> col:97 invalid klv_offset 'int'   `-CompoundStmt 0x12a122db8 <line:2:1, line:25:1>     |-DeclStmt 0x12a827828 <line:4:5, col:33>     | `-VarDecl 0x12a80e1f0 <col:5, col:32> col:9 used item_num 'int' cinit     |   `-CallExpr 0x12a827800 <col:20, col:32> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12a80e3b0 <col:20> 'int ()' Function 0x12a80e2f8 'avio_rb32' 'int ()'     |     `-RecoveryExpr 0x12a80e3d0 <col:30> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x12a827928 <line:5:5, col:33>     | `-VarDecl 0x12a827858 <col:5, col:32> col:9 used item_len 'int' cinit     |   `-CallExpr 0x12a827900 <col:20, col:32> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12a8278c0 <col:20> 'int ()' Function 0x12a80e2f8 'avio_rb32' 'int ()'     |     `-RecoveryExpr 0x12a8278e0 <col:30> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12a827c00 <line:7:5, line:10:5>     | |-BinaryOperator 0x12a827998 <line:7:9, col:21> 'int' contains-errors '!='     | | |-ImplicitCastExpr 0x12a827980 <col:9> 'int' contains-errors <LValueToRValue>     | | | `-DeclRefExpr 0x12a827940 <col:9> 'int' contains-errors lvalue Var 0x12a827858 'item_len' 'int'     | | `-IntegerLiteral 0x12a827960 <col:21> 'int' 18     | `-CompoundStmt 0x12a827be0 <col:25, line:10:5>     |   |-CallExpr 0x12a827b60 <line:8:9, col:50> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12a827a98 <col:9> 'int ()' Function 0x12a8279e0 'avpriv_request_sample' 'int ()'     |   | |-RecoveryExpr 0x12a827ab8 <col:31> '<dependent type>' contains-errors lvalue     |   | |-StringLiteral 0x12a827b20 <col:35> 'char[4]' lvalue \"STR\"     |   | `-DeclRefExpr 0x12a827b40 <col:42> 'int' contains-errors lvalue Var 0x12a827858 'item_len' 'int'     |   `-ReturnStmt 0x12a827bd0 <line:9:9, col:16>     |     `-RecoveryExpr 0x12a827bb0 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12a827fc0 <line:11:5, line:14:5>     | |-BinaryOperator 0x12a827c78 <line:11:9, col:20> 'int' contains-errors '>'     | | |-ImplicitCastExpr 0x12a827c60 <col:9> 'int' contains-errors <LValueToRValue>     | | | `-DeclRefExpr 0x12a827c20 <col:9> 'int' contains-errors lvalue Var 0x12a80e1f0 'item_num' 'int'     | | `-IntegerLiteral 0x12a827c40 <col:20> 'int' 65536     | `-CompoundStmt 0x12a827fa0 <col:27, line:14:5>     |   |-CallExpr 0x12a827f18 <line:12:9, col:54> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12a827d78 <col:9> 'int ()' Function 0x12a827cc0 'av_log' 'int ()'     |   | |-CXXDependentScopeMemberExpr 0x12a827eb0 <col:16, col:21> '<dependent type>' contains-errors lvalue ->fc     |   | | `-RecoveryExpr 0x12a827e90 <col:16> '<dependent type>' contains-errors lvalue     |   | |-RecoveryExpr 0x12a827ef8 <col:25> '<dependent type>' contains-errors lvalue     |   | |-StringLiteral 0x12a827e10 <col:39> 'char[4]' lvalue \"STR\"     |   | `-DeclRefExpr 0x12a827e30 <col:46> 'int' contains-errors lvalue Var 0x12a80e1f0 'item_num' 'int'     |   `-ReturnStmt 0x12a827f90 <line:13:9, col:16>     |     `-RecoveryExpr 0x12a827f70 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12a828258 <line:15:5, line:16:46>     | |-CXXDependentScopeMemberExpr 0x12a828060 <line:15:9, col:14> '<dependent type>' contains-errors lvalue ->local_tags     | | `-RecoveryExpr 0x12a828040 <col:9> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x12a828220 <line:16:9, col:46> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12a8280a8 <col:9> 'int ()' Function 0x12a827cc0 'av_log' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x12a8281b8 <col:16, col:21> '<dependent type>' contains-errors lvalue ->fc     |   | `-RecoveryExpr 0x12a828198 <col:16> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x12a828200 <col:25> '<dependent type>' contains-errors lvalue     |   `-StringLiteral 0x12a828140 <col:41> 'char[4]' lvalue \"STR\"     |-CallExpr 0x12a828468 <line:17:5, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12a828358 <col:5> 'int ()' Function 0x12a8282a0 'av_free' 'int ()'     | `-CXXDependentScopeMemberExpr 0x12a828420 <col:13, col:18> '<dependent type>' contains-errors lvalue ->local_tags     |   `-RecoveryExpr 0x12a828400 <col:13> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12a122da8 <line:24:5, col:12>       `-IntegerLiteral 0x12a122d88 <col:12> 'int' 0 ","19368":"`-FunctionDecl 0x1261281f0  line:1:13 invalid nsc_encode_subsampling 'void (int *)' static   |-ParmVarDecl 0x126128128 <col:36, col:49> col:49 invalid context 'int *'   `-CompoundStmt 0x127808ea8 <line:2:1, line:37:1> ","20106":"`-FunctionDecl 0x12180ddf0  line:1:13 invalid vpc_close 'void (int *)' static   |-ParmVarDecl 0x12180dd28 <col:23, col:41> col:41 invalid bs 'int *'   `-CompoundStmt 0x1218279f0 <line:2:1, line:11:1>     |-CallExpr 0x12180e190 <line:4:5, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12180e080 <col:5> 'int ()' Function 0x12180dfc8 'g_free' 'int ()'     | `-CXXDependentScopeMemberExpr 0x12180e148 <col:12, col:15> '<dependent type>' contains-errors lvalue ->pagetable     |   `-RecoveryExpr 0x12180e128 <col:12> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12180e3a8 <line:9:5, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12180e298 <col:5> 'int ()' Function 0x12180e1e0 'migrate_del_blocker' 'int ()'     | `-CXXDependentScopeMemberExpr 0x12180e360 <col:25, col:28> '<dependent type>' contains-errors lvalue ->migration_blocker     |   `-RecoveryExpr 0x12180e340 <col:25> '<dependent type>' contains-errors lvalue     `-CallExpr 0x1218279c8 <line:10:5, col:36> '<dependent type>' contains-errors       |-DeclRefExpr 0x1218278b8 <col:5> 'int ()' Function 0x121827800 'error_free' 'int ()'       `-CXXDependentScopeMemberExpr 0x121827980 <col:16, col:19> '<dependent type>' contains-errors lvalue ->migration_blocker         `-RecoveryExpr 0x121827960 <col:16> '<dependent type>' contains-errors lvalue ","19404":"`-FunctionDecl 0x12a02c940  col:15 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern   |-ParmVarDecl 0x12a02ca40 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x12a02caa8 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-ParmVarDecl 0x12a02cb10 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x12a02c9e8 <<invalid sloc>> Implicit 905   `-FormatAttr 0x12a02cb90 <col:15> Implicit printf 3 4 ","19198":"`-FunctionDecl 0x145850318  line:1:1 _rl_callback_newline 'int ()'   `-CompoundStmt 0x145850978 <line:2:1, line:15:1>     |-CallExpr 0x145850568 <line:3:3, col:18> 'int'     | `-ImplicitCastExpr 0x145850550 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x145850500 <col:3> 'int ()' Function 0x145850448 'rl_initialize' 'int ()'     |-IfStmt 0x1458506e8 <line:5:3, line:11:5>     | |-BinaryOperator 0x145850600 <line:5:7, col:21> 'int' contains-errors '=='     | | |-RecoveryExpr 0x1458505e0 <col:7> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x1458505a0 <col:21> 'int' 0     | `-CompoundStmt 0x1458506d8 <line:6:5, line:11:5>     |-CallExpr 0x145850820 <line:13:3, col:28> 'int'     | `-ImplicitCastExpr 0x145850808 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x1458507e8 <col:3> 'int ()' Function 0x145850730 'readline_internal_setup' 'int ()'     `-CallExpr 0x145850958 <line:14:3, col:21> 'int'       `-ImplicitCastExpr 0x145850940 <col:3> 'int (*)()' <FunctionToPointerDecay>         `-DeclRefExpr 0x145850920 <col:3> 'int ()' Function 0x145850868 'RL_CHECK_SIGNALS' 'int ()' ","20183":"`-FunctionDecl 0x153827568  line:1:1 invalid mrb_prepend_module 'int (int *, struct RClass *, struct RClass *)'   |-ParmVarDecl 0x15380dd28 <col:20, col:31> col:31 invalid mrb 'int *'   |-ParmVarDecl 0x15380e318 <col:36, col:51> col:51 used c 'struct RClass *'   |-ParmVarDecl 0x153827428 <col:54, col:69> col:69 used m 'struct RClass *'   `-CompoundStmt 0x154009b08 <line:2:1, line:35:1>     |-DeclStmt 0x1538276b8 <line:3:3, col:24>     | `-VarDecl 0x153827650 <col:3, col:18> col:18 used origin 'struct RClass *'     |-CallExpr 0x153827890 <line:5:3, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x153827830 <col:3> 'int ()' Function 0x153827778 'mrb_check_frozen' 'int ()'     | |-RecoveryExpr 0x153827850 <col:20> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x153827870 <col:25> 'struct RClass *' lvalue ParmVar 0x15380e318 'c' 'struct RClass *'     |-IfStmt 0x154009120 <line:6:3, line:24:3>     | |-RecoveryExpr 0x153827958 <line:6:7, col:45> '_Bool' contains-errors     | `-CompoundStmt 0x1540090c0 <col:48, line:24:3>     |   |-DeclStmt 0x153827a08 <line:7:5, col:22>     |   | `-VarDecl 0x1538279a0 <col:5, col:20> col:20 used c0 'struct RClass *'     |   |-IfStmt 0x153827c40 <line:9:5, line:14:5> has_else     |   | |-BinaryOperator 0x153827ad8 <line:9:9, col:18> 'int' contains-errors '=='     |   | | |-RecoveryExpr 0x153827a58 <col:9, col:12> '<dependent type>' contains-errors lvalue     |   | | | `-DeclRefExpr 0x153827a20 <col:9> 'struct RClass *' lvalue ParmVar 0x15380e318 'c' 'struct RClass *'     |   | | `-RecoveryExpr 0x153827ab8 <col:18> '<dependent type>' contains-errors lvalue     |   | |-CompoundStmt 0x153827b98 <col:33, line:11:5>     |   | | `-BinaryOperator 0x153827b78 <line:10:7, col:15> 'struct RClass *' contains-errors '='     |   | |   |-DeclRefExpr 0x153827af8 <col:7> 'struct RClass *' lvalue Var 0x1538279a0 'c0' 'struct RClass *'     |   | |   `-RecoveryExpr 0x153827b50 <col:12, col:15> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x153827b18 <col:12> 'struct RClass *' lvalue ParmVar 0x15380e318 'c' 'struct RClass *'     |   | `-CompoundStmt 0x153827c28 <line:12:10, line:14:5>     |   |   `-BinaryOperator 0x153827c08 <line:13:7, col:12> 'struct RClass *' '='     |   |     |-DeclRefExpr 0x153827bb0 <col:7> 'struct RClass *' lvalue Var 0x1538279a0 'c0' 'struct RClass *'     |   |     `-ImplicitCastExpr 0x153827bf0 <col:12> 'struct RClass *' <LValueToRValue>     |   |       `-DeclRefExpr 0x153827bd0 <col:12> 'struct RClass *' lvalue ParmVar 0x15380e318 'c' 'struct RClass *'     |   |-BinaryOperator 0x153827e98 <line:15:5, col:50> 'struct RClass *' contains-errors '='     |   | |-DeclRefExpr 0x153827c70 <col:5> 'struct RClass *' lvalue Var 0x153827650 'origin' 'struct RClass *'     |   | `-CallExpr 0x153827e60 <col:14, col:50> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x153827d70 <col:14> 'int ()' Function 0x153827cb8 'MRB_OBJ_ALLOC' 'int ()'     |   |   |-RecoveryExpr 0x153827d90 <col:28> '<dependent type>' contains-errors lvalue     |   |   |-RecoveryExpr 0x153827e40 <col:33> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x153827dc8 <col:48> 'struct RClass *' lvalue Var 0x1538279a0 'c0' 'struct RClass *'     |   |-CompoundAssignOperator 0x153827ff8 <line:16:5, col:47> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   | |-RecoveryExpr 0x153827ef0 <col:5, col:13> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x153827eb8 <col:5> 'struct RClass *' lvalue Var 0x153827650 'origin' 'struct RClass *'     |   | `-BinaryOperator 0x153827fd8 <col:22, col:47> '<dependent type>' contains-errors '|'     |   |   |-RecoveryExpr 0x153827f98 <col:22> '<dependent type>' contains-errors lvalue     |   |   `-RecoveryExpr 0x153827fb8 <col:47> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x1538280e8 <line:17:5, col:24> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x153828060 <col:5, col:13> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x153828028 <col:5> 'struct RClass *' lvalue Var 0x153827650 'origin' 'struct RClass *'     |   | `-RecoveryExpr 0x1538280c0 <col:21, col:24> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x153828088 <col:21> 'struct RClass *' lvalue ParmVar 0x15380e318 'c' 'struct RClass *'     |   |-BinaryOperator 0x153828188 <line:18:5, col:16> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x153828140 <col:5, col:8> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x153828108 <col:5> 'struct RClass *' lvalue ParmVar 0x15380e318 'c' 'struct RClass *'     |   | `-DeclRefExpr 0x153828168 <col:16> 'struct RClass *' lvalue Var 0x153827650 'origin' 'struct RClass *'     |   |-BinaryOperator 0x153828268 <line:19:5, col:21> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x1538281e0 <col:5, col:13> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x1538281a8 <col:5> 'struct RClass *' lvalue Var 0x153827650 'origin' 'struct RClass *'     |   | `-RecoveryExpr 0x153828240 <col:18, col:21> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x153828208 <col:18> 'struct RClass *' lvalue ParmVar 0x15380e318 'c' 'struct RClass *'     |   |-BinaryOperator 0x153828340 <line:20:5, col:13> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x1538282c0 <col:5, col:8> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x153828288 <col:5> 'struct RClass *' lvalue ParmVar 0x15380e318 'c' 'struct RClass *'     |   | `-RecoveryExpr 0x153828320 <col:13> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x154008c28 <line:21:5, col:21> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x153828398 <col:5, col:13> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x153828360 <col:5> 'struct RClass *' lvalue Var 0x153827650 'origin' 'struct RClass *'     |   | `-RecoveryExpr 0x154008c00 <col:18, col:21> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x1538283c0 <col:18> 'struct RClass *' lvalue ParmVar 0x15380e318 'c' 'struct RClass *'     |   `-CallExpr 0x154009028 <line:22:5, col:75> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x154008d28 <col:5> 'int ()' Function 0x154008c70 'mrb_field_write_barrier' 'int ()'     |     |-RecoveryExpr 0x154008d48 <col:29> '<dependent type>' contains-errors lvalue     |     |-CStyleCastExpr 0x154008f10 <col:34, col:50> 'struct RBasic *' <BitCast>     |     | `-ImplicitCastExpr 0x154008ef8 <col:50> 'struct RClass *' <LValueToRValue> part_of_explicit_cast     |     |   `-DeclRefExpr 0x154008e10 <col:50> 'struct RClass *' lvalue ParmVar 0x15380e318 'c' 'struct RClass *'     |     `-CStyleCastExpr 0x154009000 <col:53, col:69> 'struct RBasic *' <BitCast>     |       `-ImplicitCastExpr 0x154008fe8 <col:69> 'struct RClass *' <LValueToRValue> part_of_explicit_cast     |         `-DeclRefExpr 0x154008f38 <col:69> 'struct RClass *' lvalue Var 0x153827650 'origin' 'struct RClass *'     |-IfStmt 0x154009500 <line:25:3, line:27:3>     | |-BinaryOperator 0x154009348 <line:25:7, col:44> 'int' contains-errors '<'     | | |-CallExpr 0x1540092e0 <col:7, col:40> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x154009220 <col:7> 'int ()' Function 0x154009168 'include_module_at' 'int ()'     | | | |-RecoveryExpr 0x154009240 <col:25> '<dependent type>' contains-errors lvalue     | | | |-DeclRefExpr 0x154009260 <col:30> 'struct RClass *' lvalue ParmVar 0x15380e318 'c' 'struct RClass *'     | | | |-DeclRefExpr 0x154009280 <col:33> 'struct RClass *' lvalue ParmVar 0x15380e318 'c' 'struct RClass *'     | | | |-DeclRefExpr 0x1540092a0 <col:36> 'struct RClass *' lvalue ParmVar 0x153827428 'm' 'struct RClass *'     | | | `-IntegerLiteral 0x1540092c0 <col:39> 'int' 0     | | `-IntegerLiteral 0x154009328 <col:44> 'int' 0     | `-CompoundStmt 0x1540094f0 <col:47, line:27:3>     `-IfStmt 0x154009ae8 <line:28:3, line:34:3>       |-RecoveryExpr 0x1540095e0 <line:28:7, line:29:72> '_Bool' contains-errors       `-CompoundStmt 0x154009ac0 <col:75, line:34:3>         |-DeclStmt 0x154009760 <line:30:5, col:27>         | `-VarDecl 0x1540096f8 <col:5, col:26> col:20 used data 'struct RClass *[2]'         |-BinaryOperator 0x154009890 <line:31:5, col:15> 'struct RClass *' '='         | |-ArraySubscriptExpr 0x154009838 <col:5, col:11> 'struct RClass *' lvalue         | | |-ImplicitCastExpr 0x154009820 <col:5> 'struct RClass **' <ArrayToPointerDecay>         | | | `-DeclRefExpr 0x154009778 <col:5> 'struct RClass *[2]' lvalue Var 0x1540096f8 'data' 'struct RClass *[2]'         | | `-IntegerLiteral 0x154009798 <col:10> 'int' 0         | `-ImplicitCastExpr 0x154009878 <col:15> 'struct RClass *' <LValueToRValue>         |   `-DeclRefExpr 0x154009858 <col:15> 'struct RClass *' lvalue ParmVar 0x15380e318 'c' 'struct RClass *'         `-BinaryOperator 0x154009960 <line:32:5, col:15> 'struct RClass *' '='           |-ArraySubscriptExpr 0x154009908 <col:5, col:11> 'struct RClass *' lvalue           | |-ImplicitCastExpr 0x1540098f0 <col:5> 'struct RClass **' <ArrayToPointerDecay>           | | `-DeclRefExpr 0x1540098b0 <col:5> 'struct RClass *[2]' lvalue Var 0x1540096f8 'data' 'struct RClass *[2]'           | `-IntegerLiteral 0x1540098d0 <col:10> 'int' 1           `-ImplicitCastExpr 0x154009948 <col:15> 'struct RClass *' <LValueToRValue>             `-DeclRefExpr 0x154009928 <col:15> 'struct RClass *' lvalue ParmVar 0x153827428 'm' 'struct RClass *' ","20067":"`-FunctionDecl 0x13f830d98  line:1:1 auth_passdb_preinit 'int (struct auth *, const struct auth_passdb_settings *, struct auth_passdb **)'   |-ParmVarDecl 0x14000f248 <col:21, col:34> col:34 used auth 'struct auth *'   |-ParmVarDecl 0x13f830a28 <col:40, col:75> col:75 used set 'const struct auth_passdb_settings *'   |-ParmVarDecl 0x13f830c58 <line:2:7, col:28> col:28 used passdbs 'struct auth_passdb **'   `-CompoundStmt 0x14001e328 <line:3:1, line:38:1>     |-DeclStmt 0x13f831068 <line:4:2, col:41>     | |-VarDecl 0x13f830f28 <col:2, col:22> col:22 used auth_passdb 'struct auth_passdb *'     | `-VarDecl 0x13f830fe8 <col:2, col:37> col:37 used dest 'struct auth_passdb **'     |-BinaryOperator 0x13f8312f0 <line:7:2, col:21> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13f8312a8 <col:2, col:15> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13f831270 <col:2> 'struct auth_passdb *' lvalue Var 0x13f830f28 'auth_passdb' 'struct auth_passdb *'     | `-DeclRefExpr 0x13f8312d0 <col:21> 'const struct auth_passdb_settings *' lvalue ParmVar 0x13f830a28 'set' 'const struct auth_passdb_settings *'     |-BinaryOperator 0x13f8314f8 <line:8:2, col:54> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13f831348 <col:2, col:15> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13f831310 <col:2> 'struct auth_passdb *' lvalue Var 0x13f830f28 'auth_passdb' 'struct auth_passdb *'     | `-CallExpr 0x13f8314d0 <col:22, col:54> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13f831450 <col:22> 'int ()' Function 0x13f831398 'auth_passdb_skip_parse' 'int ()'     |   `-RecoveryExpr 0x13f8314a8 <col:45, col:50> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13f831470 <col:45> 'const struct auth_passdb_settings *' lvalue ParmVar 0x13f830a28 'set' 'const struct auth_passdb_settings *'     |-BinaryOperator 0x13f831700 <line:9:2, line:10:41> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13f831550 <line:9:2, col:15> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13f831518 <col:2> 'struct auth_passdb *' lvalue Var 0x13f830f28 'auth_passdb' 'struct auth_passdb *'     | `-CallExpr 0x13f8316d8 <line:10:3, col:41> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13f831658 <col:3> 'int ()' Function 0x13f8315a0 'auth_db_rule_parse' 'int ()'     |   `-RecoveryExpr 0x13f8316b0 <col:22, col:27> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13f831678 <col:22> 'const struct auth_passdb_settings *' lvalue ParmVar 0x13f830a28 'set' 'const struct auth_passdb_settings *'     |-BinaryOperator 0x13f831828 <line:11:2, line:12:41> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13f831758 <line:11:2, col:15> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13f831720 <col:2> 'struct auth_passdb *' lvalue Var 0x13f830f28 'auth_passdb' 'struct auth_passdb *'     | `-CallExpr 0x13f831800 <line:12:3, col:41> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13f831780 <col:3> 'int ()' Function 0x13f8315a0 'auth_db_rule_parse' 'int ()'     |   `-RecoveryExpr 0x13f8317d8 <col:22, col:27> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13f8317a0 <col:22> 'const struct auth_passdb_settings *' lvalue ParmVar 0x13f830a28 'set' 'const struct auth_passdb_settings *'     |-BinaryOperator 0x13f831950 <line:13:2, line:14:46> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13f831880 <line:13:2, col:15> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13f831848 <col:2> 'struct auth_passdb *' lvalue Var 0x13f830f28 'auth_passdb' 'struct auth_passdb *'     | `-CallExpr 0x13f831928 <line:14:3, col:46> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13f8318a8 <col:3> 'int ()' Function 0x13f8315a0 'auth_db_rule_parse' 'int ()'     |   `-RecoveryExpr 0x13f831900 <col:22, col:27> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13f8318c8 <col:22> 'const struct auth_passdb_settings *' lvalue ParmVar 0x13f830a28 'set' 'const struct auth_passdb_settings *'     |-BinaryOperator 0x14001d7c8 <line:16:2, line:17:56> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13f8319a8 <line:16:2, col:15> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13f831970 <col:2> 'struct auth_passdb *' lvalue Var 0x13f830f28 'auth_passdb' 'struct auth_passdb *'     | `-CallExpr 0x14001d798 <line:17:3, col:56> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14001d6b8 <col:3> 'int ()' Function 0x14001d600 'passdb_template_build' 'int ()'     |   |-RecoveryExpr 0x14001d710 <col:25, col:31> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14001d6d8 <col:25> 'struct auth *' lvalue ParmVar 0x14000f248 'auth' 'struct auth *'     |   `-RecoveryExpr 0x14001d770 <col:37, col:42> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14001d738 <col:37> 'const struct auth_passdb_settings *' lvalue ParmVar 0x13f830a28 'set' 'const struct auth_passdb_settings *'     |-BinaryOperator 0x14001d958 <line:18:2, line:19:57> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14001d820 <line:18:2, col:15> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14001d7e8 <col:2> 'struct auth_passdb *' lvalue Var 0x13f830f28 'auth_passdb' 'struct auth_passdb *'     | `-CallExpr 0x14001d928 <line:19:3, col:57> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14001d848 <col:3> 'int ()' Function 0x14001d600 'passdb_template_build' 'int ()'     |   |-RecoveryExpr 0x14001d8a0 <col:25, col:31> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14001d868 <col:25> 'struct auth *' lvalue ParmVar 0x14000f248 'auth' 'struct auth *'     |   `-RecoveryExpr 0x14001d900 <col:37, col:42> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14001d8c8 <col:37> 'const struct auth_passdb_settings *' lvalue ParmVar 0x13f830a28 'set' 'const struct auth_passdb_settings *'     |-BinaryOperator 0x14001dc98 <line:26:2, col:10> 'struct auth_passdb *' '='     | |-UnaryOperator 0x14001dc48 <col:2, col:3> 'struct auth_passdb *' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x14001dc30 <col:3> 'struct auth_passdb **' <LValueToRValue>     | |   `-DeclRefExpr 0x14001dc10 <col:3> 'struct auth_passdb **' lvalue Var 0x13f830fe8 'dest' 'struct auth_passdb **'     | `-ImplicitCastExpr 0x14001dc80 <col:10> 'struct auth_passdb *' <LValueToRValue>     |   `-DeclRefExpr 0x14001dc60 <col:10> 'struct auth_passdb *' lvalue Var 0x13f830f28 'auth_passdb' 'struct auth_passdb *'     |-BinaryOperator 0x14001dec8 <line:28:2, col:54> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14001dcf0 <col:2, col:15> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14001dcb8 <col:2> 'struct auth_passdb *' lvalue Var 0x13f830f28 'auth_passdb' 'struct auth_passdb *'     | `-CallExpr 0x14001de98 <col:24, col:54> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14001ddf8 <col:24> 'int ()' Function 0x14001dd40 'passdb_preinit' 'int ()'     |   |-RecoveryExpr 0x14001de50 <col:39, col:45> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14001de18 <col:39> 'struct auth *' lvalue ParmVar 0x14000f248 'auth' 'struct auth *'     |   `-DeclRefExpr 0x14001de78 <col:51> 'const struct auth_passdb_settings *' lvalue ParmVar 0x13f830a28 'set' 'const struct auth_passdb_settings *'     `-IfStmt 0x14001e2f8 <line:30:2, line:37:2> has_else       |-RecoveryExpr 0x14001df90 <line:30:6, col:48> '_Bool' contains-errors       |-CompoundStmt 0x14001e278 <col:54, line:34:2>       `-CompoundStmt 0x14001e2e8 <line:35:7, line:37:2> ","19492":"`-FunctionDecl 0x12d944d48  line:1:12 referenced md_seq_open 'int (struct inode *, struct file *)' static   |-ParmVarDecl 0x12d928648 <col:24, col:38> col:38 inode 'struct inode *'   |-ParmVarDecl 0x12d944c28 <col:45, col:58> col:58 used file 'struct file *'   `-CompoundStmt 0x12d945820 <line:2:1, line:13:1>     |-DeclStmt 0x12d945038 <line:3:2, col:22>     | |-RecordDecl 0x12d944e48 <col:2, col:9> col:9 struct seq_file     | `-VarDecl 0x12d944fb8 <col:2, col:19> col:19 used seq 'struct seq_file *'     |-DeclStmt 0x12d9450d0 <line:4:2, col:11>     | `-VarDecl 0x12d945068 <col:2, col:6> col:6 used error 'int'     |-BinaryOperator 0x12d945420 <line:6:2, col:36> 'int' '='     | |-DeclRefExpr 0x12d9450e8 <col:2> 'int' lvalue Var 0x12d945068 'error' 'int'     | `-CallExpr 0x12d9453d8 <col:10, col:36> 'int'     |   |-ImplicitCastExpr 0x12d9453c0 <col:10> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12d945230 <col:10> 'int ()' Function 0x12d945178 'seq_open' 'int ()'     |   |-ImplicitCastExpr 0x12d945408 <col:19> 'struct file *' <LValueToRValue>     |   | `-DeclRefExpr 0x12d945250 <col:19> 'struct file *' lvalue ParmVar 0x12d944c28 'file' 'struct file *'     |   `-UnaryOperator 0x12d945370 <col:25, col:26> 'int (*)(struct inode *, struct file *)' prefix '&' cannot overflow     |     `-DeclRefExpr 0x12d9452f0 <col:26> 'int (struct inode *, struct file *)' Function 0x12d944d48 'md_seq_open' 'int (struct inode *, struct file *)'     |-IfStmt 0x12d9454c0 <line:7:2, line:8:10>     | |-ImplicitCastExpr 0x12d945460 <line:7:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x12d945440 <col:6> 'int' lvalue Var 0x12d945068 'error' 'int'     | `-ReturnStmt 0x12d9454b0 <line:8:3, col:10>     |   `-ImplicitCastExpr 0x12d945498 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x12d945478 <col:10> 'int' lvalue Var 0x12d945068 'error' 'int'     |-BinaryOperator 0x12d945560 <line:10:2, col:14> 'struct seq_file *' contains-errors '='     | |-DeclRefExpr 0x12d9454e0 <col:2> 'struct seq_file *' lvalue Var 0x12d944fb8 'seq' 'struct seq_file *'     | `-RecoveryExpr 0x12d945538 <col:8, col:14> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12d945500 <col:8> 'struct file *' lvalue ParmVar 0x12d944c28 'file' 'struct file *'     |-BinaryOperator 0x12d9457b8 <line:11:2, col:47> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12d9455b8 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12d945580 <col:2> 'struct seq_file *' lvalue Var 0x12d944fb8 'seq' 'struct seq_file *'     | `-CallExpr 0x12d945790 <col:20, col:47> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12d9456c0 <col:20> 'int ()' Function 0x12d945608 'atomic_read' 'int ()'     |   `-UnaryOperator 0x12d945778 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x12d945758 <col:33> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12d945810 <line:12:2, col:9>       `-ImplicitCastExpr 0x12d9457f8 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x12d9457d8 <col:9> 'int' lvalue Var 0x12d945068 'error' 'int' ","19755":"`-FunctionDecl 0x14600dda8  line:1:1 libxlDomainDeathThread 'int (void *)'   |-ParmVarDecl 0x14600dcd8 <col:24, col:30> col:30 used opaque 'void *'   `-CompoundStmt 0x147008da8 <line:2:1, line:27:1>     |-DeclStmt 0x14600e0d8 <line:3:5, col:60>     | |-RecordDecl 0x14600dea0 <col:5, col:12> col:12 struct libxlEventHandlerThreadInfo     | `-VarDecl 0x14600e008 <col:5, col:54> col:41 used death_info 'struct libxlEventHandlerThreadInfo *' cinit     |   `-ImplicitCastExpr 0x14600e0a8 <col:54> 'struct libxlEventHandlerThreadInfo *' <BitCast>     |     `-ImplicitCastExpr 0x14600e090 <col:54> 'void *' <LValueToRValue>     |       `-DeclRefExpr 0x14600e070 <col:54> 'void *' lvalue ParmVar 0x14600dcd8 'opaque' 'void *'     |-CallExpr 0x146028880 <line:8:5, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x146028800 <col:5> 'int ()' Function 0x146028748 'g_autoptr' 'int ()'     | `-RecoveryExpr 0x146028860 <col:15> '<dependent type>' contains-errors lvalue     |-IfStmt 0x146028b90 <line:10:5, line:11:14>     | |-RecoveryExpr 0x146028b08 <line:10:9, col:64> '_Bool' contains-errors     | `-GotoStmt 0x146028b78 <line:11:9, col:14> 'cleanup' 0x146028b28     |-LabelStmt 0x1460292d8 <line:23:2, col:9> 'cleanup'     | `-NullStmt 0x1460292d0 <col:9>     `-CallExpr 0x147008d68 <line:26:5, col:24> 'int'       |-ImplicitCastExpr 0x147008d50 <col:5> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x147008ce0 <col:5> 'int ()' Function 0x147008c28 'VIR_FREE' 'int ()'       `-ImplicitCastExpr 0x147008d90 <col:14> 'struct libxlEventHandlerThreadInfo *' <LValueToRValue>         `-DeclRefExpr 0x147008d00 <col:14> 'struct libxlEventHandlerThreadInfo *' lvalue Var 0x14600e008 'death_info' 'struct libxlEventHandlerThreadInfo *' ","20024":"`-FunctionDecl 0x1521281f0  line:1:13 invalid multiwrite_user_cb 'void (int *)' static   |-ParmVarDecl 0x152128128 <col:32, col:46> col:46 referenced invalid mcb 'int *'   `-CompoundStmt 0x152141e38 <line:2:1, line:12:1>     |-DeclStmt 0x152128320 <line:3:5, col:10>     | `-VarDecl 0x1521282b8 <col:5, col:9> col:9 used i 'int'     `-ForStmt 0x152141e00 <line:5:5, line:11:5>       |-BinaryOperator 0x152128378 <line:5:10, col:14> 'int' '='       | |-DeclRefExpr 0x152128338 <col:10> 'int' lvalue Var 0x1521282b8 'i' 'int'       | `-IntegerLiteral 0x152128358 <col:14> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x152128420 <col:17, col:26> 'int' contains-errors '<'       | |-DeclRefExpr 0x152128398 <col:17> 'int' lvalue Var 0x1521282b8 'i' 'int'       | `-CXXDependentScopeMemberExpr 0x1521283d8 <col:21, col:26> '<dependent type>' contains-errors lvalue ->num_callbacks       |   `-RecoveryExpr 0x1521283b8 <col:21> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x152128460 <col:41, col:42> 'int' postfix '++'       | `-DeclRefExpr 0x152128440 <col:41> 'int' lvalue Var 0x1521282b8 'i' 'int'       `-CompoundStmt 0x152141dd8 <col:46, line:11:5>         |-CallExpr 0x152128748 <line:6:9, col:66> '<dependent type>' contains-errors         | |-CXXDependentScopeMemberExpr 0x152128578 <col:9, col:27> '<dependent type>' contains-errors lvalue .cb         | | `-ArraySubscriptExpr 0x152128558 <col:9, col:25> '<dependent type>' contains-errors lvalue         | |   |-ImplicitCastExpr 0x152128528 <col:9, col:14> '<dependent type>' contains-errors <LValueToRValue>         | |   | `-CXXDependentScopeMemberExpr 0x1521284c0 <col:9, col:14> '<dependent type>' contains-errors lvalue ->callbacks         | |   |   `-RecoveryExpr 0x152128498 <col:9> '<dependent type>' contains-errors lvalue         | |   |     `-DeclRefExpr 0x152128478 <col:9> 'int *' lvalue ParmVar 0x152128128 'mcb' 'int *'         | |   `-ImplicitCastExpr 0x152128540 <col:24> 'int' <LValueToRValue>         | |     `-DeclRefExpr 0x152128508 <col:24> 'int' lvalue Var 0x1521282b8 'i' 'int'         | |-CXXDependentScopeMemberExpr 0x152128698 <col:30, col:48> '<dependent type>' contains-errors lvalue .opaque         | | `-ArraySubscriptExpr 0x152128678 <col:30, col:46> '<dependent type>' contains-errors lvalue         | |   |-ImplicitCastExpr 0x152128648 <col:30, col:35> '<dependent type>' contains-errors <LValueToRValue>         | |   | `-CXXDependentScopeMemberExpr 0x1521285e0 <col:30, col:35> '<dependent type>' contains-errors lvalue ->callbacks         | |   |   `-RecoveryExpr 0x1521285c0 <col:30> '<dependent type>' contains-errors lvalue         | |   `-ImplicitCastExpr 0x152128660 <col:45> 'int' <LValueToRValue>         | |     `-DeclRefExpr 0x152128628 <col:45> 'int' lvalue Var 0x1521282b8 'i' 'int'         | `-CXXDependentScopeMemberExpr 0x152128700 <col:56, col:61> '<dependent type>' contains-errors lvalue ->error         |   `-RecoveryExpr 0x1521286e0 <col:56> '<dependent type>' contains-errors lvalue         |-IfStmt 0x152141b70 <line:7:9, line:9:9>         | |-CXXDependentScopeMemberExpr 0x152141850 <line:7:13, col:31> '<dependent type>' contains-errors lvalue .free_qiov         | | `-ArraySubscriptExpr 0x152141830 <col:13, col:29> '<dependent type>' contains-errors lvalue         | |   |-ImplicitCastExpr 0x152141800 <col:13, col:18> '<dependent type>' contains-errors <LValueToRValue>         | |   | `-CXXDependentScopeMemberExpr 0x152128798 <col:13, col:18> '<dependent type>' contains-errors lvalue ->callbacks         | |   |   `-RecoveryExpr 0x152128778 <col:13> '<dependent type>' contains-errors lvalue         | |   `-ImplicitCastExpr 0x152141818 <col:28> 'int' <LValueToRValue>         | |     `-DeclRefExpr 0x1521287e0 <col:28> 'int' lvalue Var 0x1521282b8 'i' 'int'         | `-CompoundStmt 0x152141b58 <col:42, line:9:9>         |   `-CallExpr 0x152141b30 <line:8:13, col:59> '<dependent type>' contains-errors         |     |-DeclRefExpr 0x1521419f0 <col:13> 'int ()' Function 0x152141938 'qemu_iovec_destroy' 'int ()'         |     `-CXXDependentScopeMemberExpr 0x152141ae8 <col:32, col:50> '<dependent type>' contains-errors lvalue .free_qiov         |       `-ArraySubscriptExpr 0x152141ac8 <col:32, col:48> '<dependent type>' contains-errors lvalue         |         |-ImplicitCastExpr 0x152141a98 <col:32, col:37> '<dependent type>' contains-errors <LValueToRValue>         |         | `-CXXDependentScopeMemberExpr 0x152141a30 <col:32, col:37> '<dependent type>' contains-errors lvalue ->callbacks         |         |   `-RecoveryExpr 0x152141a10 <col:32> '<dependent type>' contains-errors lvalue         |         `-ImplicitCastExpr 0x152141ab0 <col:47> 'int' <LValueToRValue>         |           `-DeclRefExpr 0x152141a78 <col:47> 'int' lvalue Var 0x1521282b8 'i' 'int'         `-CallExpr 0x152141db0 <line:10:9, col:43> '<dependent type>' contains-errors           |-DeclRefExpr 0x152141c70 <col:9> 'int ()' Function 0x152141bb8 'g_free' 'int ()'           `-CXXDependentScopeMemberExpr 0x152141d68 <col:16, col:34> '<dependent type>' contains-errors lvalue .free_qiov             `-ArraySubscriptExpr 0x152141d48 <col:16, col:32> '<dependent type>' contains-errors lvalue               |-ImplicitCastExpr 0x152141d18 <col:16, col:21> '<dependent type>' contains-errors <LValueToRValue>               | `-CXXDependentScopeMemberExpr 0x152141cb0 <col:16, col:21> '<dependent type>' contains-errors lvalue ->callbacks               |   `-RecoveryExpr 0x152141c90 <col:16> '<dependent type>' contains-errors lvalue               `-ImplicitCastExpr 0x152141d30 <col:31> 'int' <LValueToRValue>                 `-DeclRefExpr 0x152141cf8 <col:31> 'int' lvalue Var 0x1521282b8 'i' 'int' ","19171":"`-FunctionDecl 0x158129110  line:1:13 invalid TIFFGetEXIFProperties 'void (int *, int *, int *)' static   |-ParmVarDecl 0x158128f28 <col:35, col:41> col:41 invalid tiff 'int *'   |-ParmVarDecl 0x158128fa8 <col:46, col:53> col:53 invalid image 'int *'   |-ParmVarDecl 0x158129028 <line:2:3, col:18> col:18 invalid exception 'int *'   `-CompoundStmt 0x1581292b0 <line:3:1, line:147:1>     |-CStyleCastExpr 0x158129218 <line:144:3, col:10> 'void' contains-errors <ToVoid>     | `-ImplicitCastExpr 0x158129200 <col:10> '<dependent type>' contains-errors <LValueToRValue> part_of_explicit_cast     |   `-RecoveryExpr 0x1581291d0 <col:10> '<dependent type>' contains-errors lvalue     `-CStyleCastExpr 0x158129288 <line:145:3, col:10> 'void' contains-errors <ToVoid>       `-ImplicitCastExpr 0x158129270 <col:10> '<dependent type>' contains-errors <LValueToRValue> part_of_explicit_cast         `-RecoveryExpr 0x158129240 <col:10> '<dependent type>' contains-errors lvalue ","20196":"`-FunctionDecl 0x14d0e3b90  line:1:13 cleanup_children_on_exit 'void (void)' static   `-CompoundStmt 0x14d0e3e88 <line:2:1, line:4:1>     `-CallExpr 0x14d0e3e58 <line:3:2, col:29> '<dependent type>' contains-errors       |-DeclRefExpr 0x14d0e3db0 <col:2> 'int ()' Function 0x14d0e3cf8 'cleanup_children' 'int ()'       |-RecoveryExpr 0x14d0e3e38 <col:19> '<dependent type>' contains-errors lvalue       `-IntegerLiteral 0x14d0e3de8 <col:28> 'int' 0 ","19706":"`-FunctionDecl 0x149944c00  line:1:12 soft_offline_in_use_page 'int (struct page *, int)' static   |-ParmVarDecl 0x149928648 <col:37, col:50> col:50 used page 'struct page *'   |-ParmVarDecl 0x1499286c8 <col:56, col:60> col:60 used flags 'int'   `-CompoundStmt 0x149947e00 <line:2:1, line:32:1>     |-DeclStmt 0x149944d80 <line:3:2, col:9>     | `-VarDecl 0x149944d18 <col:2, col:6> col:6 used ret 'int'     |-DeclStmt 0x149944e18 <line:4:2, col:8>     | `-VarDecl 0x149944db0 <col:2, col:6> col:6 used mt 'int'     |-DeclStmt 0x149945130 <line:5:2, col:42>     | `-VarDecl 0x149944eb8 <col:2, col:41> col:15 used hpage 'struct page *' cinit     |   `-ImplicitCastExpr 0x149945118 <col:23, col:41> 'struct page *' <IntegralToPointer>     |     `-CallExpr 0x1499450d8 <col:23, col:41> 'int'     |       |-ImplicitCastExpr 0x1499450c0 <col:23> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x149945050 <col:23> 'int ()' Function 0x149944f98 'compound_head' 'int ()'     |       `-ImplicitCastExpr 0x149945100 <col:37> 'struct page *' <LValueToRValue>     |         `-DeclRefExpr 0x149945070 <col:37> 'struct page *' lvalue ParmVar 0x149928648 'page' 'struct page *'     |-IfStmt 0x149947480 <line:7:2, line:21:2>     | |-BinaryOperator 0x149945450 <line:7:6, col:44> 'int' '&&'     | | |-UnaryOperator 0x1499452c0 <col:6, col:20> 'int' prefix '!' cannot overflow     | | | `-CallExpr 0x149945280 <col:7, col:20> 'int'     | | |   |-ImplicitCastExpr 0x149945268 <col:7> 'int (*)()' <FunctionToPointerDecay>     | | |   | `-DeclRefExpr 0x149945228 <col:7> 'int ()' Function 0x149945170 'PageHuge' 'int ()'     | | |   `-ImplicitCastExpr 0x1499452a8 <col:16> 'struct page *' <LValueToRValue>     | | |     `-DeclRefExpr 0x149945248 <col:16> 'struct page *' lvalue ParmVar 0x149928648 'page' 'struct page *'     | | `-CallExpr 0x149945410 <col:25, col:44> 'int'     | |   |-ImplicitCastExpr 0x1499453f8 <col:25> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x1499453b8 <col:25> 'int ()' Function 0x149945300 'PageTransHuge' 'int ()'     | |   `-ImplicitCastExpr 0x149945438 <col:39> 'struct page *' <LValueToRValue>     | |     `-DeclRefExpr 0x1499453d8 <col:39> 'struct page *' lvalue Var 0x149944eb8 'hpage' 'struct page *'     | `-CompoundStmt 0x149947448 <col:47, line:21:2>     |   |-CallExpr 0x1499455a8 <line:8:3, col:18> 'int'     |   | |-ImplicitCastExpr 0x149945590 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x149945550 <col:3> 'int ()' Function 0x149945498 'lock_page' 'int ()'     |   | `-ImplicitCastExpr 0x1499455d0 <col:13> 'struct page *' <LValueToRValue>     |   |   `-DeclRefExpr 0x149945570 <col:13> 'struct page *' lvalue Var 0x149944eb8 'hpage' 'struct page *'     |   |-IfStmt 0x149947180 <line:9:3, line:17:3>     |   | |-BinaryOperator 0x149945a30 <line:9:7, col:58> 'int' '||'     |   | | |-UnaryOperator 0x149945760 <col:7, col:22> 'int' prefix '!' cannot overflow     |   | | | `-CallExpr 0x149945720 <col:8, col:22> 'int'     |   | | |   |-ImplicitCastExpr 0x149945708 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | | |   | `-DeclRefExpr 0x1499456c8 <col:8> 'int ()' Function 0x149945610 'PageAnon' 'int ()'     |   | | |   `-ImplicitCastExpr 0x149945748 <col:17> 'struct page *' <LValueToRValue>     |   | | |     `-DeclRefExpr 0x1499456e8 <col:17> 'struct page *' lvalue Var 0x149944eb8 'hpage' 'struct page *'     |   | | `-CallExpr 0x149945a08 <col:27, col:58> 'int'     |   | |   |-ImplicitCastExpr 0x1499459f0 <col:27> 'int (*)()' <FunctionToPointerDecay>     |   | |   | `-DeclRefExpr 0x149945858 <col:27> 'int ()' Function 0x1499457a0 'unlikely' 'int ()'     |   | |   `-CallExpr 0x1499459b0 <col:36, col:57> 'int'     |   | |     |-ImplicitCastExpr 0x149945998 <col:36> 'int (*)()' <FunctionToPointerDecay>     |   | |     | `-DeclRefExpr 0x149945958 <col:36> 'int ()' Function 0x1499458a0 'split_huge_page' 'int ()'     |   | |     `-ImplicitCastExpr 0x1499459d8 <col:52> 'struct page *' <LValueToRValue>     |   | |       `-DeclRefExpr 0x149945978 <col:52> 'struct page *' lvalue Var 0x149944eb8 'hpage' 'struct page *'     |   | `-CompoundStmt 0x149947150 <col:61, line:17:3>     |   |   |-CallExpr 0x149945b88 <line:10:4, col:21> 'int'     |   |   | |-ImplicitCastExpr 0x149945b70 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x149945b30 <col:4> 'int ()' Function 0x149945a78 'unlock_page' 'int ()'     |   |   | `-ImplicitCastExpr 0x149945bb0 <col:16> 'struct page *' <LValueToRValue>     |   |   |   `-DeclRefExpr 0x149945b50 <col:16> 'struct page *' lvalue Var 0x149944eb8 'hpage' 'struct page *'     |   |   |-IfStmt 0x149946f00 <line:11:4, line:14:37> has_else     |   |   | |-UnaryOperator 0x149946a78 <line:11:8, col:23> 'int' prefix '!' cannot overflow     |   |   | | `-CallExpr 0x149946a38 <col:9, col:23> 'int'     |   |   | |   |-ImplicitCastExpr 0x149946a20 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |   | |   | `-DeclRefExpr 0x149945bc8 <col:9> 'int ()' Function 0x149945610 'PageAnon' 'int ()'     |   |   | |   `-ImplicitCastExpr 0x149946a60 <col:18> 'struct page *' <LValueToRValue>     |   |   | |     `-DeclRefExpr 0x149946a00 <col:18> 'struct page *' lvalue Var 0x149944eb8 'hpage' 'struct page *'     |   |   | |-CallExpr 0x149946d80 <line:12:5, col:37> 'int'     |   |   | | |-ImplicitCastExpr 0x149946d68 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   |   | | | `-DeclRefExpr 0x149946b70 <col:5> 'int ()' Function 0x149946ab8 'pr_info' 'int ()'     |   |   | | |-ImplicitCastExpr 0x149946db0 <col:13> 'char *' <ArrayToPointerDecay>     |   |   | | | `-StringLiteral 0x149946bd0 <col:13> 'char[4]' lvalue \"STR\"     |   |   | | `-CallExpr 0x149946d28 <col:20, col:36> 'int'     |   |   | |   |-ImplicitCastExpr 0x149946d10 <col:20> 'int (*)()' <FunctionToPointerDecay>     |   |   | |   | `-DeclRefExpr 0x149946cd0 <col:20> 'int ()' Function 0x149946c18 'page_to_pfn' 'int ()'     |   |   | |   `-ImplicitCastExpr 0x149946d50 <col:32> 'struct page *' <LValueToRValue>     |   |   | |     `-DeclRefExpr 0x149946cf0 <col:32> 'struct page *' lvalue ParmVar 0x149928648 'page' 'struct page *'     |   |   | `-CallExpr 0x149946eb8 <line:14:5, col:37> 'int'     |   |   |   |-ImplicitCastExpr 0x149946ea0 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   |   |   | `-DeclRefExpr 0x149946dc8 <col:5> 'int ()' Function 0x149946ab8 'pr_info' 'int ()'     |   |   |   |-ImplicitCastExpr 0x149946ee8 <col:13> 'char *' <ArrayToPointerDecay>     |   |   |   | `-StringLiteral 0x149946de8 <col:13> 'char[4]' lvalue \"STR\"     |   |   |   `-CallExpr 0x149946e60 <col:20, col:36> 'int'     |   |   |     |-ImplicitCastExpr 0x149946e48 <col:20> 'int (*)()' <FunctionToPointerDecay>     |   |   |     | `-DeclRefExpr 0x149946e08 <col:20> 'int ()' Function 0x149946c18 'page_to_pfn' 'int ()'     |   |   |     `-ImplicitCastExpr 0x149946e88 <col:32> 'struct page *' <LValueToRValue>     |   |   |       `-DeclRefExpr 0x149946e28 <col:32> 'struct page *' lvalue ParmVar 0x149928648 'page' 'struct page *'     |   |   |-CallExpr 0x149947068 <line:15:4, col:27> 'int'     |   |   | |-ImplicitCastExpr 0x149947050 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x149947010 <col:4> 'int ()' Function 0x149946f58 'put_hwpoison_page' 'int ()'     |   |   | `-ImplicitCastExpr 0x149947090 <col:22> 'struct page *' <LValueToRValue>     |   |   |   `-DeclRefExpr 0x149947030 <col:22> 'struct page *' lvalue Var 0x149944eb8 'hpage' 'struct page *'     |   |   `-ReturnStmt 0x149947140 <line:16:4, col:12>     |   |     `-UnaryOperator 0x149947128 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |       `-ImplicitCastExpr 0x149947110 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |   |         `-RecoveryExpr 0x1499470f0 <col:12> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x1499471f8 <line:18:3, col:20> 'int'     |   | |-ImplicitCastExpr 0x1499471e0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x1499471a0 <col:3> 'int ()' Function 0x149945a78 'unlock_page' 'int ()'     |   | `-ImplicitCastExpr 0x149947220 <col:15> 'struct page *' <LValueToRValue>     |   |   `-DeclRefExpr 0x1499471c0 <col:15> 'struct page *' lvalue Var 0x149944eb8 'hpage' 'struct page *'     |   |-CallExpr 0x149947370 <line:19:3, col:25> 'int'     |   | |-ImplicitCastExpr 0x149947358 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x149947318 <col:3> 'int ()' Function 0x149947260 'get_hwpoison_page' 'int ()'     |   | `-ImplicitCastExpr 0x149947398 <col:21> 'struct page *' <LValueToRValue>     |   |   `-DeclRefExpr 0x149947338 <col:21> 'struct page *' lvalue ParmVar 0x149928648 'page' 'struct page *'     |   `-CallExpr 0x149947408 <line:20:3, col:26> 'int'     |     |-ImplicitCastExpr 0x1499473f0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1499473b0 <col:3> 'int ()' Function 0x149946f58 'put_hwpoison_page' 'int ()'     |     `-ImplicitCastExpr 0x149947430 <col:21> 'struct page *' <LValueToRValue>     |       `-DeclRefExpr 0x1499473d0 <col:21> 'struct page *' lvalue Var 0x149944eb8 'hpage' 'struct page *'     |-BinaryOperator 0x149947638 <line:24:2, col:37> 'int' '='     | |-DeclRefExpr 0x1499474a0 <col:2> 'int' lvalue Var 0x149944db0 'mt' 'int'     | `-CallExpr 0x1499475f8 <col:7, col:37> 'int'     |   |-ImplicitCastExpr 0x1499475e0 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1499475a0 <col:7> 'int ()' Function 0x1499474e8 'get_pageblock_migratetype' 'int ()'     |   `-ImplicitCastExpr 0x149947620 <col:33> 'struct page *' <LValueToRValue>     |     `-DeclRefExpr 0x1499475c0 <col:33> 'struct page *' lvalue ParmVar 0x149928648 'page' 'struct page *'     |-CallExpr 0x1499477e0 <line:25:2, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x149947738 <col:2> 'int ()' Function 0x149947680 'set_pageblock_migratetype' 'int ()'     | |-DeclRefExpr 0x149947758 <col:28> 'struct page *' lvalue ParmVar 0x149928648 'page' 'struct page *'     | `-RecoveryExpr 0x1499477c0 <col:34> '<dependent type>' contains-errors lvalue     |-IfStmt 0x149947cb0 <line:26:2, line:29:40> has_else     | |-CallExpr 0x149947868 <line:26:6, col:19> 'int'     | | |-ImplicitCastExpr 0x149947850 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x149947810 <col:6> 'int ()' Function 0x149945170 'PageHuge' 'int ()'     | | `-ImplicitCastExpr 0x149947890 <col:15> 'struct page *' <LValueToRValue>     | |   `-DeclRefExpr 0x149947830 <col:15> 'struct page *' lvalue ParmVar 0x149928648 'page' 'struct page *'     | |-BinaryOperator 0x149947a98 <line:27:3, col:43> 'int' '='     | | |-DeclRefExpr 0x1499478a8 <col:3> 'int' lvalue Var 0x149944d18 'ret' 'int'     | | `-CallExpr 0x149947a38 <col:9, col:43> 'int'     | |   |-ImplicitCastExpr 0x149947a20 <col:9> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x1499479a8 <col:9> 'int ()' Function 0x1499478f0 'soft_offline_huge_page' 'int ()'     | |   |-ImplicitCastExpr 0x149947a68 <col:32> 'struct page *' <LValueToRValue>     | |   | `-DeclRefExpr 0x1499479c8 <col:32> 'struct page *' lvalue ParmVar 0x149928648 'page' 'struct page *'     | |   `-ImplicitCastExpr 0x149947a80 <col:38> 'int' <LValueToRValue>     | |     `-DeclRefExpr 0x149947a00 <col:38> 'int' lvalue ParmVar 0x1499286c8 'flags' 'int'     | `-BinaryOperator 0x149947c90 <line:29:3, col:40> 'int' '='     |   |-DeclRefExpr 0x149947ab8 <col:3> 'int' lvalue Var 0x149944d18 'ret' 'int'     |   `-CallExpr 0x149947c30 <col:9, col:40> 'int'     |     |-ImplicitCastExpr 0x149947c18 <col:9> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x149947bb8 <col:9> 'int ()' Function 0x149947b00 '__soft_offline_page' 'int ()'     |     |-ImplicitCastExpr 0x149947c60 <col:29> 'struct page *' <LValueToRValue>     |     | `-DeclRefExpr 0x149947bd8 <col:29> 'struct page *' lvalue ParmVar 0x149928648 'page' 'struct page *'     |     `-ImplicitCastExpr 0x149947c78 <col:35> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x149947bf8 <col:35> 'int' lvalue ParmVar 0x1499286c8 'flags' 'int'     |-CallExpr 0x149947d58 <line:30:2, col:36> 'int'     | |-ImplicitCastExpr 0x149947d40 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x149947ce0 <col:2> 'int ()' Function 0x149947680 'set_pageblock_migratetype' 'int ()'     | |-ImplicitCastExpr 0x149947d88 <col:28> 'struct page *' <LValueToRValue>     | | `-DeclRefExpr 0x149947d00 <col:28> 'struct page *' lvalue ParmVar 0x149928648 'page' 'struct page *'     | `-ImplicitCastExpr 0x149947da0 <col:34> 'int' <LValueToRValue>     |   `-DeclRefExpr 0x149947d20 <col:34> 'int' lvalue Var 0x149944db0 'mt' 'int'     `-ReturnStmt 0x149947df0 <line:31:2, col:9>       `-ImplicitCastExpr 0x149947dd8 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x149947db8 <col:9> 'int' lvalue Var 0x149944d18 'ret' 'int' ","19546":"`-FunctionDecl 0x13f928318  line:1:1 invalid has_problem 'int (int *, int *, int)'   |-ParmVarDecl 0x13f928128 <col:14, col:33> col:33 invalid directory 'int *'   |-ParmVarDecl 0x13f9281a8 <col:44, col:58> col:58 invalid file 'int *'   |-ParmVarDecl 0x13f928228 <col:64, col:74> col:74 invalid problem 'int'   `-CompoundStmt 0x13f941ba8 <line:2:1, line:16:1>     |-IfStmt 0x13f928568 <line:5:2, line:7:2>     | |-BinaryOperator 0x13f928468 <line:5:6, col:14> 'int' contains-errors '!='     | | |-RecoveryExpr 0x13f9283f0 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13f928448 <col:14> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13f928550 <col:20, line:7:2>     |   `-ReturnStmt 0x13f928540 <line:6:3, col:27>     |     `-CallExpr 0x13f928518 <col:10, col:27> '<dependent type>' contains-errors     |       |-ParenExpr 0x13f9284d8 <col:10, col:20> '<dependent type>' contains-errors     |       | `-UnaryOperator 0x13f9284c0 <col:11, col:13> '<dependent type>' contains-errors prefix '*' cannot overflow     |       |   `-ImplicitCastExpr 0x13f9284a8 <col:13> '<dependent type>' contains-errors <LValueToRValue>     |       |     `-RecoveryExpr 0x13f928488 <col:13> '<dependent type>' contains-errors lvalue     |       `-RecoveryExpr 0x13f9284f8 <col:23> '<dependent type>' contains-errors lvalue     |-ForStmt 0x13f941b28 <line:9:2, line:13:2>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-BinaryOperator 0x13f928700 <line:9:45, col:53> 'int' contains-errors '!='     | | |-RecoveryExpr 0x13f9286c0 <col:45> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13f9286e0 <col:53> '<dependent type>' contains-errors lvalue     | |-BinaryOperator 0x13f941848 <col:59, col:72> '<dependent type>' contains-errors '='     | | |-RecoveryExpr 0x13f9287b8 <col:59> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x13f941800 <col:66, col:72> '<dependent type>' contains-errors lvalue ->next     | |   `-RecoveryExpr 0x13f9287d8 <col:66> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13f941b10 <col:78, line:13:2>     |   `-IfStmt 0x13f941af0 <line:10:3, line:12:3>     |     |-CallExpr 0x13f941a68 <line:10:7, col:30> '<dependent type>' contains-errors     |     | |-ParenExpr 0x13f9419e0 <col:7, col:17> '<dependent type>' contains-errors     |     | | `-UnaryOperator 0x13f9419c8 <col:8, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow     |     | |   `-ImplicitCastExpr 0x13f9419b0 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |     | |     `-RecoveryExpr 0x13f941868 <col:10> '<dependent type>' contains-errors lvalue     |     | `-CXXDependentScopeMemberExpr 0x13f941a20 <col:20, col:26> '<dependent type>' contains-errors lvalue ->data     |     |   `-RecoveryExpr 0x13f941a00 <col:20> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x13f941ad8 <col:33, line:12:3>     |       `-ReturnStmt 0x13f941ac8 <line:11:4, col:11>     |         `-RecoveryExpr 0x13f941aa8 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x13f941b98 <line:15:2, col:9>       `-RecoveryExpr 0x13f941b78 <col:9> '<dependent type>' contains-errors lvalue ","20012":"`-FunctionDecl 0x11f008478  line:1:12 ax25_create 'int (struct net *, struct socket *, int, int)' static   |-ParmVarDecl 0x11e928648 <col:24, col:36> col:36 used net 'struct net *'   |-ParmVarDecl 0x11f008228 <col:41, col:56> col:56 used sock 'struct socket *'   |-ParmVarDecl 0x11f0082a8 <col:62, col:66> col:66 used protocol 'int'   |-ParmVarDecl 0x11f008328 <line:2:10, col:14> col:14 used kern 'int'   `-CompoundStmt 0x128009620 <line:3:1, line:78:1>     |-DeclStmt 0x11f008778 <line:4:2, col:17>     | |-RecordDecl 0x11f008588 <col:2, col:9> col:9 struct sock     | `-VarDecl 0x11f0086f8 <col:2, col:15> col:15 used sk 'struct sock *'     |-IfStmt 0x11f008a28 <line:7:2, line:8:11>     | |-BinaryOperator 0x11f008960 <line:7:6, col:33> 'int' contains-errors '||'     | | |-BinaryOperator 0x11f008900 <col:6, col:17> 'int' '<'     | | | |-ImplicitCastExpr 0x11f0088e8 <col:6> 'int' <LValueToRValue>     | | | | `-DeclRefExpr 0x11f0087c0 <col:6> 'int' lvalue ParmVar 0x11f0082a8 'protocol' 'int'     | | | `-IntegerLiteral 0x11f0087e0 <col:17> 'int' 0     | | `-BinaryOperator 0x11f008940 <col:22, col:33> 'int' contains-errors '>'     | |   |-DeclRefExpr 0x11f008838 <col:22> 'int' lvalue ParmVar 0x11f0082a8 'protocol' 'int'     | |   `-RecoveryExpr 0x11f008920 <col:33> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x11f008a18 <line:8:3, col:11>     |   `-UnaryOperator 0x11f008a00 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x11f0089e8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x11f0089c8 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x11f008d40 <line:10:2, line:11:11>     | |-UnaryOperator 0x11f008c80 <line:10:6, col:28> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x11f008c50 <col:7, col:28> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x11f008b60 <col:7> 'int ()' Function 0x11f008aa8 'net_eq' 'int ()'     | |   |-DeclRefExpr 0x11f008b80 <col:14> 'struct net *' lvalue ParmVar 0x11e928648 'net' 'struct net *'     | |   `-UnaryOperator 0x11f008c38 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-RecoveryExpr 0x11f008c18 <col:20> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x11f008d30 <line:11:3, col:11>     |   `-UnaryOperator 0x11f008d18 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x11f008d00 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x11f008ce0 <col:11> '<dependent type>' contains-errors lvalue     |-SwitchStmt 0x11f008dd8 <line:13:2, line:57:2>     | |-ImplicitCastExpr 0x11f008dc0 <line:13:10, col:16> '<dependent type>' contains-errors <LValueToRValue>     | | `-RecoveryExpr 0x11f008d98 <col:10, col:16> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x11f008d60 <col:10> 'struct socket *' lvalue ParmVar 0x11f008228 'sock' 'struct socket *'     | `-CompoundStmt 0x128008a30 <col:22, line:57:2>     |   |-IfStmt 0x11f009070 <line:15:3, line:16:15>     |   | |-BinaryOperator 0x11f008fb8 <line:15:7, col:36> 'int' contains-errors '||'     |   | | |-BinaryOperator 0x11f008f58 <col:7, col:19> 'int' '=='     |   | | | |-ImplicitCastExpr 0x11f008f40 <col:7> 'int' <LValueToRValue>     |   | | | | `-DeclRefExpr 0x11f008e18 <col:7> 'int' lvalue ParmVar 0x11f0082a8 'protocol' 'int'     |   | | | `-IntegerLiteral 0x11f008e38 <col:19> 'int' 0     |   | | `-BinaryOperator 0x11f008f98 <col:24, col:36> 'int' contains-errors '=='     |   | |   |-DeclRefExpr 0x11f008e90 <col:24> 'int' lvalue ParmVar 0x11f0082a8 'protocol' 'int'     |   | |   `-RecoveryExpr 0x11f008f78 <col:36> '<dependent type>' contains-errors lvalue     |   | `-BinaryOperator 0x11f009050 <line:16:4, col:15> 'int' contains-errors '='     |   |   |-DeclRefExpr 0x11f008fd8 <col:4> 'int' lvalue ParmVar 0x11f0082a8 'protocol' 'int'     |   |   `-RecoveryExpr 0x11f009030 <col:15> '<dependent type>' contains-errors lvalue     |   |-BreakStmt 0x11f009090 <line:17:3>     |   |-SwitchStmt 0x11f0090e8 <line:20:3, line:50:3>     |   | |-ImplicitCastExpr 0x11f0090d0 <line:20:11> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x11f0090b0 <col:11> 'int' lvalue ParmVar 0x11f0082a8 'protocol' 'int'     |   | `-CompoundStmt 0x128008910 <col:21, line:50:3>     |   |   |-CaseStmt 0x11f009148 <line:21:3, line:23:15>     |   |   | |-ConstantExpr 0x11f009130 <line:21:8> 'int'     |   |   | | `-IntegerLiteral 0x11f009110 <col:8> 'int' 0     |   |   | `-BinaryOperator 0x128008800 <line:23:4, col:15> 'int' contains-errors '='     |   |   |   |-DeclRefExpr 0x11f009188 <col:4> 'int' lvalue ParmVar 0x11f0082a8 'protocol' 'int'     |   |   |   `-RecoveryExpr 0x11f0091e0 <col:15> '<dependent type>' contains-errors lvalue     |   |   |-BreakStmt 0x128008820 <line:24:4>     |   |   |-ReturnStmt 0x1280088d8 <line:36:4, col:12>     |   |   | `-UnaryOperator 0x1280088c0 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   |   `-ImplicitCastExpr 0x1280088a8 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |   |   |     `-RecoveryExpr 0x128008888 <col:12> '<dependent type>' contains-errors lvalue     |   |   `-DefaultStmt 0x1280088f0 <line:48:3, line:49:4>     |   |     `-BreakStmt 0x1280088e8 <col:4>     |   |-BreakStmt 0x128008940 <line:51:3>     |   |-BreakStmt 0x128008960 <line:54:3>     |   `-DefaultStmt 0x128008a10 <line:55:2, line:56:11>     |     `-ReturnStmt 0x128008a00 <col:3, col:11>     |       `-UnaryOperator 0x1280089e8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |         `-ImplicitCastExpr 0x1280089d0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |           `-RecoveryExpr 0x1280089b0 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x128008d58 <line:59:2, col:59> 'struct sock *' contains-errors '='     | |-DeclRefExpr 0x128008a70 <col:2> 'struct sock *' lvalue Var 0x11f0086f8 'sk' 'struct sock *'     | `-CallExpr 0x128008d10 <col:7, col:59> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x128008b70 <col:7> 'int ()' Function 0x128008ab8 'sk_alloc' 'int ()'     |   |-DeclRefExpr 0x128008b90 <col:16> 'struct net *' lvalue ParmVar 0x11e928648 'net' 'struct net *'     |   |-RecoveryExpr 0x128008c98 <col:21> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x128008cb8 <col:30> '<dependent type>' contains-errors lvalue     |   |-UnaryOperator 0x128008cf8 <col:42, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x128008cd8 <col:43> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x128008c10 <col:55> 'int' lvalue ParmVar 0x11f008328 'kern' 'int'     |-IfStmt 0x128009298 <line:64:2, line:67:2>     | |-RecoveryExpr 0x1280090e8 <line:64:6, col:7> '_Bool' contains-errors     | `-CompoundStmt 0x128009280 <col:13, line:67:2>     |   `-CallExpr 0x128009240 <line:65:3, col:13> 'int'     |     |-ImplicitCastExpr 0x128009228 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1280091e8 <col:3> 'int ()' Function 0x128009130 'sk_free' 'int ()'     |     `-ImplicitCastExpr 0x128009268 <col:11> 'struct sock *' <LValueToRValue>     |       `-DeclRefExpr 0x128009208 <col:11> 'struct sock *' lvalue Var 0x11f0086f8 'sk' 'struct sock *'     |-CallExpr 0x128009410 <line:69:2, col:25> 'int'     | |-ImplicitCastExpr 0x1280093f8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x128009398 <col:2> 'int ()' Function 0x1280092e0 'sock_init_data' 'int ()'     | |-ImplicitCastExpr 0x128009440 <col:17> 'struct socket *' <LValueToRValue>     | | `-DeclRefExpr 0x1280093b8 <col:17> 'struct socket *' lvalue ParmVar 0x11f008228 'sock' 'struct socket *'     | `-ImplicitCastExpr 0x128009458 <col:23> 'struct sock *' <LValueToRValue>     |   `-DeclRefExpr 0x1280093d8 <col:23> 'struct sock *' lvalue Var 0x11f0086f8 'sk' 'struct sock *'     |-BinaryOperator 0x1280095b0 <line:73:2, col:20> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x128009568 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x128009530 <col:2> 'struct sock *' lvalue Var 0x11f0086f8 'sk' 'struct sock *'     | `-DeclRefExpr 0x128009590 <col:20> 'int' lvalue ParmVar 0x11f0082a8 'protocol' 'int'     `-ReturnStmt 0x128009610 <line:77:2, col:9>       `-IntegerLiteral 0x1280095f0 <col:9> 'int' 0 ","19379":"`-FunctionDecl 0x1538281b8  col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x1538282b8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x153828320 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x153828388 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x153828260 <<invalid sloc>> Implicit 882 ","19736":"`-FunctionDecl 0x14480ddc0  line:1:13 invalid enable_no_etm 'void (int)' static   |-ParmVarDecl 0x14480dcf0 <col:27, col:45> col:45 referenced invalid c 'int'   `-CompoundStmt 0x14480df40 <line:2:1, line:4:1>     `-BinaryOperator 0x14480df20 <line:3:2, col:14> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x14480deb8 <col:2, col:5> '<dependent type>' contains-errors lvalue ->no_etm       | `-RecoveryExpr 0x14480de90 <col:2> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x14480de70 <col:2> 'int' lvalue ParmVar 0x14480dcf0 'c' 'int'       `-IntegerLiteral 0x14480df00 <col:14> 'int' 1 ","20097":"`-FunctionDecl 0x1331284a8  line:1:32 invalid flac_decoder_write_callback 'int (const int *, const int *, const int *const *, void *)'   |-ParmVarDecl 0x1331280f0 <col:60, col:87> col:87 invalid decoder 'const int *'   |-ParmVarDecl 0x133128170 <col:96, col:115> col:115 invalid frame 'const int *'   |-ParmVarDecl 0x1331282d0 <col:122, col:155> col:148 invalid buffer 'const int *const *'   |-ParmVarDecl 0x133128350 <col:158, col:164> col:164 client_data 'void *'   `-CompoundStmt 0x133142c00 <line:2:1, line:16:1>     |-CStyleCastExpr 0x133128708 <line:6:2, col:8> 'void' contains-errors <ToVoid>     | `-ImplicitCastExpr 0x1331286f0 <col:8> '<dependent type>' contains-errors <LValueToRValue> part_of_explicit_cast     |   `-RecoveryExpr 0x1331286c0 <col:8> '<dependent type>' contains-errors lvalue     `-IfStmt 0x133142be0 <line:8:2, line:12:2>       |-RecoveryExpr 0x133142940 <line:8:5, col:51> '_Bool' contains-errors       `-CompoundStmt 0x133142bc0 <col:54, line:12:2>         |-CallExpr 0x133142b30 <line:9:3, col:34> '<dependent type>' contains-errors         | |-DeclRefExpr 0x133142a40 <col:3> 'int ()' Function 0x133142988 'print_error_with_state' 'int ()'         | |-RecoveryExpr 0x133142b10 <col:26> '<dependent type>' contains-errors lvalue         | `-StringLiteral 0x133142ac0 <col:29> 'char[4]' lvalue \"STR\"         `-ReturnStmt 0x133142bb0 <line:11:3, col:10>           `-RecoveryExpr 0x133142b90 <col:10> '<dependent type>' contains-errors lvalue ","19676":"`-FunctionDecl 0x14d027578  line:1:13 invalid brcmf_is_nonetwork 'int (struct brcmf_cfg80211_info *, const struct brcmf_event_msg *)' static   |-ParmVarDecl 0x14d00e268 <col:32, col:60> col:60 cfg 'struct brcmf_cfg80211_info *'   |-ParmVarDecl 0x14d027458 <line:2:11, col:41> col:41 used e 'const struct brcmf_event_msg *'   `-CompoundStmt 0x14d027db8 <line:3:1, line:19:1>     |-IfStmt 0x14d027ae8 <line:7:2, line:11:2>     | |-BinaryOperator 0x14d0277b0 <line:7:6, col:41> 'int' contains-errors '&&'     | | |-BinaryOperator 0x14d027730 <col:6, col:15> 'int' contains-errors '=='     | | | |-RecoveryExpr 0x14d0276f0 <col:6> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x14d027710 <col:15> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x14d027790 <col:31, col:41> 'int' contains-errors '=='     | |   |-RecoveryExpr 0x14d027750 <col:31> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x14d027770 <col:41> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14d027ad0 <col:69, line:11:2>     |   `-ReturnStmt 0x14d027ac0 <line:10:3, col:10>     |     `-RecoveryExpr 0x14d027aa0 <col:10> '<dependent type>' contains-errors lvalue     `-IfStmt 0x14d027d98 <line:13:2, line:16:2>       |-BinaryOperator 0x14d027c88 <line:13:6, col:45> 'int' contains-errors '&&'       | |-BinaryOperator 0x14d027c08 <col:6, col:15> 'int' contains-errors '=='       | | |-RecoveryExpr 0x14d027bc8 <col:6> '<dependent type>' contains-errors lvalue       | | `-RecoveryExpr 0x14d027be8 <col:15> '<dependent type>' contains-errors lvalue       | `-BinaryOperator 0x14d027c68 <col:35, col:45> 'int' contains-errors '!='       |   |-RecoveryExpr 0x14d027c28 <col:35> '<dependent type>' contains-errors lvalue       |   `-RecoveryExpr 0x14d027c48 <col:45> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x14d027d80 <col:69, line:16:2>         `-CallExpr 0x14d027d50 <line:14:3, col:24> '<dependent type>' contains-errors           |-DeclRefExpr 0x14d027ca8 <col:3> 'int ()' Function 0x14d027878 'brcmf_dbg' 'int ()'           |-RecoveryExpr 0x14d027d30 <col:13> '<dependent type>' contains-errors lvalue           `-StringLiteral 0x14d027ce0 <col:19> 'char[4]' lvalue \"STR\" ","19517":"`-FunctionDecl 0x126140b58  line:1:12 rfcomm_sock_getsockopt 'int (struct socket *, int, int, char)' static   |-ParmVarDecl 0x126128648 <col:35, col:50> col:50 used sock 'struct socket *'   |-ParmVarDecl 0x1261286c8 <col:56, col:60> col:60 used level 'int'   |-ParmVarDecl 0x126128748 <col:67, col:71> col:71 used optname 'int'   |-ParmVarDecl 0x126140a00 <col:80, col:85> col:85 __user 'char'   `-CompoundStmt 0x12780c2a0 <line:2:1, line:54:1>     |-DeclStmt 0x126140eb8 <line:3:2, col:28>     | |-RecordDecl 0x126140c68 <col:2, col:9> col:9 struct sock     | `-VarDecl 0x126140dd8 <col:2, col:26> col:15 used sk 'struct sock *' cinit     |   `-RecoveryExpr 0x126140e78 <col:20, col:26> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x126140e40 <col:20> 'struct socket *' lvalue ParmVar 0x126128648 'sock' 'struct socket *'     |-DeclStmt 0x126141048 <line:4:2, col:24>     | |-RecordDecl 0x126140ed0 <col:2, col:9> col:9 struct bt_security     | `-VarDecl 0x126140fc8 <col:2, col:21> col:21 referenced invalid sec 'struct bt_security'     |-DeclStmt 0x126141198 <line:5:2, col:18>     | |-VarDecl 0x126141078 <col:2, col:6> col:6 used len 'int'     | `-VarDecl 0x1261410f8 <col:2, col:17> col:11 used err 'int' cinit     |   `-IntegerLiteral 0x126141160 <col:17> 'int' 0     |-CallExpr 0x1261413c8 <line:7:2, col:18> 'int' contains-errors     | |-ImplicitCastExpr 0x1261413b0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1261412e0 <col:2> 'int ()' Function 0x126141228 'BT_DBG' 'int ()'     | |-ImplicitCastExpr 0x1261413f8 <col:9> 'char *' <ArrayToPointerDecay>     | | `-StringLiteral 0x126141340 <col:9> 'char[4]' lvalue \"STR\"     | `-ImplicitCastExpr 0x126141410 <col:16> 'struct sock *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x126141360 <col:16> 'struct sock *' contains-errors lvalue Var 0x126140dd8 'sk' 'struct sock *'     |-IfStmt 0x126141700 <line:9:2, line:10:66>     | |-BinaryOperator 0x1261414a0 <line:9:6, col:15> 'int' contains-errors '=='     | | |-DeclRefExpr 0x126141428 <col:6> 'int' lvalue ParmVar 0x1261286c8 'level' 'int'     | | `-RecoveryExpr 0x126141480 <col:15> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1261416f0 <line:10:3, col:66>     |   `-CallExpr 0x1261416b0 <col:10, col:66> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1261415a0 <col:10> 'int ()' Function 0x1261414e8 'rfcomm_sock_getsockopt_old' 'int ()'     |     |-DeclRefExpr 0x1261415c0 <col:37> 'struct socket *' lvalue ParmVar 0x126128648 'sock' 'struct socket *'     |     |-DeclRefExpr 0x1261415e0 <col:43> 'int' lvalue ParmVar 0x126128748 'optname' 'int'     |     |-RecoveryExpr 0x126141670 <col:52> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x126141690 <col:60> '<dependent type>' contains-errors lvalue     |-IfStmt 0x126141860 <line:12:2, line:13:11>     | |-BinaryOperator 0x126141798 <line:12:6, col:15> 'int' contains-errors '!='     | | |-DeclRefExpr 0x126141720 <col:6> 'int' lvalue ParmVar 0x1261286c8 'level' 'int'     | | `-RecoveryExpr 0x126141778 <col:15> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x126141850 <line:13:3, col:11>     |   `-UnaryOperator 0x126141838 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x126141820 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x126141800 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x127809af8 <line:15:2, line:16:11>     | |-CallExpr 0x127809a20 <line:15:6, col:26> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x126141960 <col:6> 'int ()' Function 0x1261418a8 'get_user' 'int ()'     | | |-DeclRefExpr 0x126141980 <col:15> 'int' lvalue Var 0x126141078 'len' 'int'     | | `-RecoveryExpr 0x127809a00 <col:20> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x127809ae8 <line:16:3, col:11>     |   `-UnaryOperator 0x127809ad0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x127809ab8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x127809a98 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x127809c50 <line:18:2, col:14> 'int' contains-errors     | |-ImplicitCastExpr 0x127809c38 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x127809bf8 <col:2> 'int ()' Function 0x127809b40 'lock_sock' 'int ()'     | `-ImplicitCastExpr 0x127809c78 <col:12> 'struct sock *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x127809c18 <col:12> 'struct sock *' contains-errors lvalue Var 0x126140dd8 'sk' 'struct sock *'     |-SwitchStmt 0x127809cc8 <line:20:2, line:50:2>     | |-ImplicitCastExpr 0x127809cb0 <line:20:10> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x127809c90 <col:10> 'int' lvalue ParmVar 0x126128748 'optname' 'int'     | `-CompoundStmt 0x12780c098 <col:19, line:50:2>     |   |-IfStmt 0x127809f00 <line:22:3, line:25:3>     |   | |-BinaryOperator 0x127809dc0 <line:22:7, col:22> 'int' contains-errors '!='     |   | | |-RecoveryExpr 0x127809d40 <col:7, col:11> '<dependent type>' contains-errors lvalue     |   | | | `-DeclRefExpr 0x127809d08 <col:7> 'struct sock *' contains-errors lvalue Var 0x126140dd8 'sk' 'struct sock *'     |   | | `-RecoveryExpr 0x127809da0 <col:22> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x127809ee0 <col:35, line:25:3>     |   |   |-BinaryOperator 0x127809eb8 <line:23:4, col:11> 'int' contains-errors '='     |   |   | |-DeclRefExpr 0x127809de0 <col:4> 'int' lvalue Var 0x1261410f8 'err' 'int'     |   |   | `-UnaryOperator 0x127809ea0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   |   `-ImplicitCastExpr 0x127809e88 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |   |   |     `-RecoveryExpr 0x127809e68 <col:11> '<dependent type>' contains-errors lvalue     |   |   `-BreakStmt 0x127809ed8 <line:24:4>     |   |-BinaryOperator 0x12780a150 <line:27:3, col:30> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x127809f68 <col:3, col:7> '<dependent type>' contains-errors lvalue .level     |   | | `-RecoveryExpr 0x127809f40 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x127809f20 <col:3> 'struct bt_security' lvalue Var 0x126140fc8 'sec' 'struct bt_security'     |   | `-RecoveryExpr 0x12780a128 <col:15, col:30> '<dependent type>' contains-errors lvalue     |   |   `-CallExpr 0x12780a0e8 <col:15, col:27> 'int' contains-errors     |   |     |-ImplicitCastExpr 0x12780a0d0 <col:15> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x12780a090 <col:15> 'int ()' Function 0x127809fd8 'rfcomm_pi' 'int ()'     |   |     `-ImplicitCastExpr 0x12780a110 <col:25> 'struct sock *' contains-errors <LValueToRValue>     |   |       `-DeclRefExpr 0x12780a0b0 <col:25> 'struct sock *' contains-errors lvalue Var 0x126140dd8 'sk' 'struct sock *'     |   |-BreakStmt 0x12780a4e8 <line:33:3>     |   |-IfStmt 0x12780a610 <line:36:3, line:39:3>     |   | |-RecoveryExpr 0x12780a5b0 <line:36:7, col:51> '_Bool' contains-errors     |   | `-CompoundStmt 0x12780a5f8 <col:62, line:39:3>     |   |   `-BreakStmt 0x12780a5f0 <line:38:4>     |   |-BreakStmt 0x12780c040 <line:45:3>     |   |-DefaultStmt 0x12780c070 <line:47:2, col:9>     |   | `-NullStmt 0x12780c068 <col:9>     |   `-BreakStmt 0x12780c090 <line:49:3>     |-CallExpr 0x12780c218 <line:52:2, col:17> 'int' contains-errors     | |-ImplicitCastExpr 0x12780c200 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12780c1c0 <col:2> 'int ()' Function 0x12780c108 'release_sock' 'int ()'     | `-ImplicitCastExpr 0x12780c240 <col:15> 'struct sock *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x12780c1e0 <col:15> 'struct sock *' contains-errors lvalue Var 0x126140dd8 'sk' 'struct sock *'     `-ReturnStmt 0x12780c290 <line:53:2, col:9>       `-ImplicitCastExpr 0x12780c278 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x12780c258 <col:9> 'int' lvalue Var 0x1261410f8 'err' 'int' ","19900":"`-FunctionDecl 0x141860400  line:1:13 invalid tcp_undo_cwnd_reduction 'void (struct sock *, int)' static   |-ParmVarDecl 0x141847248 <col:37, col:50> col:50 used sk 'struct sock *'   |-ParmVarDecl 0x1418472e0 <col:54, col:59> col:59 invalid unmark_loss 'int'   `-CompoundStmt 0x141863240 <line:2:1, line:34:1>     |-DeclStmt 0x1418608e8 <line:3:2, col:34>     | |-RecordDecl 0x1418604b8 <col:2, col:9> col:9 struct tcp_sock     | `-VarDecl 0x141860628 <col:2, col:33> col:19 used tp 'struct tcp_sock *' cinit     |   `-ImplicitCastExpr 0x1418608b8 <col:24, col:33> 'struct tcp_sock *' <IntegralToPointer>     |     `-CallExpr 0x141860878 <col:24, col:33> 'int'     |       |-ImplicitCastExpr 0x141860860 <col:24> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x1418607f0 <col:24> 'int ()' Function 0x141860738 'tcp_sk' 'int ()'     |       `-ImplicitCastExpr 0x1418608a0 <col:31> 'struct sock *' <LValueToRValue>     |         `-DeclRefExpr 0x141860810 <col:31> 'struct sock *' lvalue ParmVar 0x141847248 'sk' 'struct sock *'     |-IfStmt 0x1418622b0 <line:5:2, line:15:2>     | |-RecoveryExpr 0x141860900 <line:5:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x141862278 <col:19, line:15:2>     |   |-DeclStmt 0x141860b08 <line:6:3, col:22>     |   | |-RecordDecl 0x141860920 <col:3, col:10> col:10 struct sk_buff     |   | `-VarDecl 0x141860a88 <col:3, col:19> col:19 used skb 'struct sk_buff *'     |   |-CallExpr 0x141860c78 <line:8:3, col:30> 'int'     |   | |-ImplicitCastExpr 0x141860c60 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x141860c00 <col:3> 'int ()' Function 0x141860b48 'tcp_for_write_queue' 'int ()'     |   | |-ImplicitCastExpr 0x141860ca8 <col:23> 'struct sk_buff *' <LValueToRValue>     |   | | `-DeclRefExpr 0x141860c20 <col:23> 'struct sk_buff *' lvalue Var 0x141860a88 'skb' 'struct sk_buff *'     |   | `-ImplicitCastExpr 0x141860cc0 <col:28> 'struct sock *' <LValueToRValue>     |   |   `-DeclRefExpr 0x141860c40 <col:28> 'struct sock *' lvalue ParmVar 0x141847248 'sk' 'struct sock *'     |   |-CompoundStmt 0x141861230 <col:32, line:12:3>     |   | `-CompoundAssignOperator 0x141861200 <line:11:4, col:32> '<dependent type>' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |   |-RecoveryExpr 0x141861188 <col:4, col:21> '<dependent type>' contains-errors lvalue     |   |   | `-CallExpr 0x141861148 <col:4, col:18> 'int'     |   |   |   |-ImplicitCastExpr 0x141861130 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   |   | `-DeclRefExpr 0x141860fa0 <col:4> 'int ()' Function 0x141860ee8 'TCP_SKB_CB' 'int ()'     |   |   |   `-ImplicitCastExpr 0x141861170 <col:15> 'struct sk_buff *' <LValueToRValue>     |   |   |     `-DeclRefExpr 0x141860fc0 <col:15> 'struct sk_buff *' lvalue Var 0x141860a88 'skb' 'struct sk_buff *'     |   |   `-UnaryOperator 0x1418611e8 <col:31, col:32> '<dependent type>' contains-errors prefix '~' cannot overflow     |   |     `-ImplicitCastExpr 0x1418611d0 <col:32> '<dependent type>' contains-errors <LValueToRValue>     |   |       `-RecoveryExpr 0x1418611b0 <col:32> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x1418612c8 <line:13:3, col:18> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x141861280 <col:3, col:7> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x141861248 <col:3> 'struct tcp_sock *' lvalue Var 0x141860628 'tp' 'struct tcp_sock *'     |   | `-IntegerLiteral 0x1418612a8 <col:18> 'int' 0     |   `-CallExpr 0x141862238 <line:14:3, col:33> 'int'     |     |-ImplicitCastExpr 0x141862220 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1418613c8 <col:3> 'int ()' Function 0x141861310 'tcp_clear_all_retrans_hints' 'int ()'     |     `-ImplicitCastExpr 0x141862260 <col:31> 'struct tcp_sock *' <LValueToRValue>     |       `-DeclRefExpr 0x141862200 <col:31> 'struct tcp_sock *' lvalue Var 0x141860628 'tp' 'struct tcp_sock *'     |-IfStmt 0x141863100 <line:17:2, line:31:2> has_else     | |-RecoveryExpr 0x141862308 <line:17:6, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1418622d0 <col:6> 'struct tcp_sock *' lvalue Var 0x141860628 'tp' 'struct tcp_sock *'     | |-CompoundStmt 0x141862f30 <col:26, line:29:2>     | | |-DeclStmt 0x1418626a8 <line:18:3, col:57>     | | | |-RecordDecl 0x141862330 <col:9, col:16> col:16 struct inet_connection_sock     | | | `-VarDecl 0x141862498 <col:3, col:56> col:38 used icsk 'const struct inet_connection_sock *' cinit     | | |   `-ImplicitCastExpr 0x141862678 <col:45, col:56> 'const struct inet_connection_sock *' <IntegralToPointer>     | | |     `-CallExpr 0x141862638 <col:45, col:56> 'int'     | | |       |-ImplicitCastExpr 0x141862620 <col:45> 'int (*)()' <FunctionToPointerDecay>     | | |       | `-DeclRefExpr 0x1418625e0 <col:45> 'int ()' Function 0x141862528 'inet_csk' 'int ()'     | | |       `-ImplicitCastExpr 0x141862660 <col:54> 'struct sock *' <LValueToRValue>     | | |         `-DeclRefExpr 0x141862600 <col:54> 'struct sock *' lvalue ParmVar 0x141847248 'sk' 'struct sock *'     | | |-IfStmt 0x141862b88 <line:20:3, line:23:58> has_else     | | | |-CXXDependentScopeMemberExpr 0x141862720 <line:20:7, col:26> '<dependent type>' contains-errors lvalue ->undo_cwnd     | | | | `-RecoveryExpr 0x1418626f8 <col:7, col:13> '<dependent type>' contains-errors lvalue     | | | |   `-DeclRefExpr 0x1418626c0 <col:7> 'const struct inet_connection_sock *' lvalue Var 0x141862498 'icsk' 'const struct inet_connection_sock *'     | | | |-BinaryOperator 0x1418628b8 <line:21:4, col:50> '<dependent type>' contains-errors '='     | | | | |-RecoveryExpr 0x1418627a0 <col:4, col:8> '<dependent type>' contains-errors lvalue     | | | | | `-DeclRefExpr 0x141862768 <col:4> 'struct tcp_sock *' lvalue Var 0x141860628 'tp' 'struct tcp_sock *'     | | | | `-CallExpr 0x141862890 <col:19, col:50> '<dependent type>' contains-errors     | | | |   |-CXXDependentScopeMemberExpr 0x141862828 <col:19, col:38> '<dependent type>' contains-errors lvalue ->undo_cwnd     | | | |   | `-RecoveryExpr 0x141862800 <col:19, col:25> '<dependent type>' contains-errors lvalue     | | | |   |   `-DeclRefExpr 0x1418627c8 <col:19> 'const struct inet_connection_sock *' lvalue Var 0x141862498 'icsk' 'const struct inet_connection_sock *'     | | | |   `-DeclRefExpr 0x141862870 <col:48> 'struct sock *' lvalue ParmVar 0x141847248 'sk' 'struct sock *'     | | | `-BinaryOperator 0x141862b68 <line:23:4, col:58> '<dependent type>' contains-errors '='     | | |   |-RecoveryExpr 0x141862910 <col:4, col:8> '<dependent type>' contains-errors lvalue     | | |   | `-DeclRefExpr 0x1418628d8 <col:4> 'struct tcp_sock *' lvalue Var 0x141860628 'tp' 'struct tcp_sock *'     | | |   `-CallExpr 0x141862b38 <col:19, col:58> '<dependent type>' contains-errors     | | |     |-DeclRefExpr 0x141862a18 <col:19> 'int ()' Function 0x141862960 'max' 'int ()'     | | |     |-RecoveryExpr 0x141862a70 <col:23, col:27> '<dependent type>' contains-errors lvalue     | | |     | `-DeclRefExpr 0x141862a38 <col:23> 'struct tcp_sock *' lvalue Var 0x141860628 'tp' 'struct tcp_sock *'     | | |     `-BinaryOperator 0x141862b18 <col:37, col:57> '<dependent type>' contains-errors '<<'     | | |       |-RecoveryExpr 0x141862ad0 <col:37, col:41> '<dependent type>' contains-errors lvalue     | | |       | `-DeclRefExpr 0x141862a98 <col:37> 'struct tcp_sock *' lvalue Var 0x141860628 'tp' 'struct tcp_sock *'     | | |       `-IntegerLiteral 0x141862af8 <col:57> 'int' 1     | | `-IfStmt 0x141862f10 <line:25:3, line:28:3>     | |   |-BinaryOperator 0x141862c78 <line:25:7, col:32> 'int' contains-errors '>'     | |   | |-RecoveryExpr 0x141862bf0 <col:7, col:11> '<dependent type>' contains-errors lvalue     | |   | | `-DeclRefExpr 0x141862bb8 <col:7> 'struct tcp_sock *' lvalue Var 0x141860628 'tp' 'struct tcp_sock *'     | |   | `-RecoveryExpr 0x141862c50 <col:28, col:32> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x141862c18 <col:28> 'struct tcp_sock *' lvalue Var 0x141860628 'tp' 'struct tcp_sock *'     | |   `-CompoundStmt 0x141862ef0 <col:46, line:28:3>     | |     |-BinaryOperator 0x141862d58 <line:26:4, col:27> '<dependent type>' contains-errors '='     | |     | |-RecoveryExpr 0x141862cd0 <col:4, col:8> '<dependent type>' contains-errors lvalue     | |     | | `-DeclRefExpr 0x141862c98 <col:4> 'struct tcp_sock *' lvalue Var 0x141860628 'tp' 'struct tcp_sock *'     | |     | `-RecoveryExpr 0x141862d30 <col:23, col:27> '<dependent type>' contains-errors lvalue     | |     |   `-DeclRefExpr 0x141862cf8 <col:23> 'struct tcp_sock *' lvalue Var 0x141860628 'tp' 'struct tcp_sock *'     | |     `-CallExpr 0x141862eb0 <line:27:4, col:27> 'int'     | |       |-ImplicitCastExpr 0x141862e98 <col:4> 'int (*)()' <FunctionToPointerDecay>     | |       | `-DeclRefExpr 0x141862e58 <col:4> 'int ()' Function 0x141862da0 'tcp_ecn_withdraw_cwr' 'int ()'     | |       `-ImplicitCastExpr 0x141862ed8 <col:25> 'struct tcp_sock *' <LValueToRValue>     | |         `-DeclRefExpr 0x141862e78 <col:25> 'struct tcp_sock *' lvalue Var 0x141860628 'tp' 'struct tcp_sock *'     | `-CompoundStmt 0x1418630e8 <line:29:9, line:31:2>     |   `-BinaryOperator 0x1418630c8 <line:30:3, col:52> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x141862f90 <col:3, col:7> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x141862f58 <col:3> 'struct tcp_sock *' lvalue Var 0x141860628 'tp' 'struct tcp_sock *'     |     `-CallExpr 0x141863098 <col:18, col:52> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x141862fb8 <col:18> 'int ()' Function 0x141862960 'max' 'int ()'     |       |-RecoveryExpr 0x141863010 <col:22, col:26> '<dependent type>' contains-errors lvalue     |       | `-DeclRefExpr 0x141862fd8 <col:22> 'struct tcp_sock *' lvalue Var 0x141860628 'tp' 'struct tcp_sock *'     |       `-RecoveryExpr 0x141863070 <col:36, col:40> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x141863038 <col:36> 'struct tcp_sock *' lvalue Var 0x141860628 'tp' 'struct tcp_sock *'     `-BinaryOperator 0x141863220 <line:33:2, col:20> '<dependent type>' contains-errors '='       |-RecoveryExpr 0x1418631c8 <col:2, col:6> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x141863190 <col:2> 'struct tcp_sock *' lvalue Var 0x141860628 'tp' 'struct tcp_sock *'       `-IntegerLiteral 0x141863200 <col:20> 'int' 0 ","19906":"`-FunctionDecl 0x15a9281c8  line:1:1 cin_nocode 'int (char *)'   |-ParmVarDecl 0x15a9280f0 <col:12, col:20> col:20 used s 'char *'   `-CompoundStmt 0x15a940c98 <line:2:1, line:4:1>     `-ReturnStmt 0x15a940c88 <line:3:5, col:35>       `-BinaryOperator 0x15a940c68 <col:12, col:35> 'int' contains-errors '=='         |-RecoveryExpr 0x15a940c20 <col:12, col:30> '<dependent type>' contains-errors lvalue         | `-CallExpr 0x15a940be0 <col:13, col:30> 'int'         |   |-ImplicitCastExpr 0x15a940bc8 <col:13> 'int (*)()' <FunctionToPointerDecay>         |   | `-DeclRefExpr 0x15a9283d0 <col:13> 'int ()' Function 0x15a928318 'cin_skipcomment' 'int ()'         |   `-ImplicitCastExpr 0x15a940c08 <col:29> 'char *' <LValueToRValue>         |     `-DeclRefExpr 0x15a9283f0 <col:29> 'char *' lvalue ParmVar 0x15a9280f0 's' 'char *'         `-RecoveryExpr 0x15a940c48 <col:35> '<dependent type>' contains-errors lvalue ","19316":"`-FunctionDecl 0x13e9252d0  col:7 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x13e9253d0 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x13e925438 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x13e925378 <<invalid sloc>> Implicit 887 ","19857":"`-FunctionDecl 0x12d128168  col:30 invalid get_slave 'int *()' inline   `-CompoundStmt 0x12d128258 <col:42, col:58>     `-ReturnStmt 0x12d128248 <col:44, col:51>       `-RecoveryExpr 0x12d128228 <col:51> '<dependent type>' contains-errors lvalue ","19119":"`-FunctionDecl 0x133928280  line:1:6 invalid ntlm_write_message_header 'void (int *, int *)'   |-ParmVarDecl 0x133928128 <col:32, col:41> col:41 invalid s 'int *'   |-ParmVarDecl 0x1339281a8 <col:44, col:65> col:65 invalid header 'int *'   `-CompoundStmt 0x133928708 <line:2:1, line:5:1>     `-CallExpr 0x1339286d8 <line:4:2, col:44> '<dependent type>' contains-errors       |-DeclRefExpr 0x133928630 <col:2> 'int ()' Function 0x133928578 'Stream_Write_UINT32' 'int ()'       |-RecoveryExpr 0x133928650 <col:22> '<dependent type>' contains-errors lvalue       `-CXXDependentScopeMemberExpr 0x133928690 <col:25, col:33> '<dependent type>' contains-errors lvalue ->MessageType         `-RecoveryExpr 0x133928670 <col:25> '<dependent type>' contains-errors lvalue ","19805":"`-FunctionDecl 0x1461285f0  line:1:6 invalid reds_update_client_mouse_allowed 'void (int *)'   |-ParmVarDecl 0x146128528 <col:39, col:50> col:50 referenced invalid reds 'int *'   `-CompoundStmt 0x146142a88 <line:2:1, line:28:1>     |-DeclStmt 0x146128758 <line:3:5, col:26>     | `-VarDecl 0x1461286b8 <col:5, col:21> col:9 used allow_now 'int' cinit     |   `-RecoveryExpr 0x146128738 <col:21> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x146128810 <line:4:5, col:18>     | `-VarDecl 0x146128788 <col:5, col:17> col:9 used x_res 'int' cinit     |   `-IntegerLiteral 0x1461287f0 <col:17> 'int' 0     |-DeclStmt 0x1461288c8 <line:5:5, col:18>     | `-VarDecl 0x146128840 <col:5, col:17> col:9 used y_res 'int' cinit     |   `-IntegerLiteral 0x1461288a8 <col:17> 'int' 0     |-DeclStmt 0x146128a30 <line:6:5, col:56>     | `-VarDecl 0x1461288f8 <col:5, col:55> col:9 used num_active_workers 'int' cinit     |   `-CallExpr 0x146128a10 <col:30, col:55> '<dependent type>' contains-errors     |     `-CXXDependentScopeMemberExpr 0x1461289c8 <col:30, col:50> '<dependent type>' contains-errors lvalue .size     |       `-CXXDependentScopeMemberExpr 0x146128980 <col:30, col:36> '<dependent type>' contains-errors lvalue ->qxl_instances     |         `-RecoveryExpr 0x146128960 <col:30> '<dependent type>' contains-errors lvalue     |-IfStmt 0x146142060 <line:8:5, line:16:5>     | |-BinaryOperator 0x146128aa0 <line:8:9, col:30> 'int' contains-errors '>'     | | |-ImplicitCastExpr 0x146128a88 <col:9> 'int' contains-errors <LValueToRValue>     | | | `-DeclRefExpr 0x146128a48 <col:9> 'int' contains-errors lvalue Var 0x1461288f8 'num_active_workers' 'int'     | | `-IntegerLiteral 0x146128a68 <col:30> 'int' 0     | `-CompoundStmt 0x146142038 <col:33, line:16:5>     |   |-BinaryOperator 0x146128b38 <line:10:9, col:21> 'int' contains-errors '='     |   | |-DeclRefExpr 0x146128ac0 <col:9> 'int' contains-errors lvalue Var 0x1461286b8 'allow_now' 'int'     |   | `-RecoveryExpr 0x146128b18 <col:21> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x146141d60 <line:11:9, col:39> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x146141cb8 <col:9> 'int ()' Function 0x146141c00 'FOREACH_QXL_INSTANCE' 'int ()'     |   | |-RecoveryExpr 0x146141cd8 <col:30> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x146141d40 <col:36> '<dependent type>' contains-errors lvalue     |   `-CompoundStmt 0x146142020 <col:41, line:15:9>     |     `-IfStmt 0x146142000 <line:12:13, line:14:13>     |       |-CallExpr 0x146141fb0 <line:12:17, col:79> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x146141e70 <col:17> 'int ()' Function 0x146141db8 'red_qxl_get_allow_client_mouse' 'int ()'     |       | |-RecoveryExpr 0x146141f90 <col:48> '<dependent type>' contains-errors lvalue     |       | |-UnaryOperator 0x146141ec8 <col:53, col:54> 'int *' prefix '&' cannot overflow     |       | | `-DeclRefExpr 0x146141ea8 <col:54> 'int' lvalue Var 0x146128788 'x_res' 'int'     |       | |-UnaryOperator 0x146141f00 <col:61, col:62> 'int *' prefix '&' cannot overflow     |       | | `-DeclRefExpr 0x146141ee0 <col:62> 'int' lvalue Var 0x146128840 'y_res' 'int'     |       | `-UnaryOperator 0x146141f38 <col:69, col:70> 'int *' contains-errors prefix '&' cannot overflow     |       |   `-DeclRefExpr 0x146141f18 <col:70> 'int' contains-errors lvalue Var 0x1461286b8 'allow_now' 'int'     |       `-CompoundStmt 0x146141ff0 <col:82, line:14:13>     `-IfStmt 0x146142a68 <line:18:5, line:27:5>       |-BinaryOperator 0x146142148 <line:18:9, col:41> 'int' contains-errors '||'       | |-DeclRefExpr 0x146142080 <col:9> 'int' contains-errors lvalue Var 0x1461286b8 'allow_now' 'int'       | `-BinaryOperator 0x146142128 <col:22, col:41> 'int' contains-errors '!='       |   |-DeclRefExpr 0x1461420a0 <col:22> 'int' contains-errors lvalue Var 0x1461286b8 'allow_now' 'int'       |   `-CXXDependentScopeMemberExpr 0x1461420e0 <col:35, col:41> '<dependent type>' contains-errors lvalue ->dispatcher_allows_client_mouse       |     `-RecoveryExpr 0x1461420c0 <col:35> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x146142a30 <col:73, line:27:5>         |-BinaryOperator 0x146142260 <line:19:9, col:36> '<dependent type>' contains-errors '='         | |-CXXDependentScopeMemberExpr 0x1461421f8 <col:9, col:28> '<dependent type>' contains-errors lvalue .x_res         | | `-CXXDependentScopeMemberExpr 0x1461421b0 <col:9, col:15> '<dependent type>' contains-errors lvalue ->monitor_mode         | |   `-RecoveryExpr 0x146142188 <col:9> '<dependent type>' contains-errors lvalue         | |     `-DeclRefExpr 0x146142168 <col:9> 'int *' lvalue ParmVar 0x146128528 'reds' 'int *'         | `-DeclRefExpr 0x146142240 <col:36> 'int' lvalue Var 0x146128788 'x_res' 'int'         |-BinaryOperator 0x146142378 <line:20:9, col:36> '<dependent type>' contains-errors '='         | |-CXXDependentScopeMemberExpr 0x146142310 <col:9, col:28> '<dependent type>' contains-errors lvalue .y_res         | | `-CXXDependentScopeMemberExpr 0x1461422c8 <col:9, col:15> '<dependent type>' contains-errors lvalue ->monitor_mode         | |   `-RecoveryExpr 0x1461422a0 <col:9> '<dependent type>' contains-errors lvalue         | |     `-DeclRefExpr 0x146142280 <col:9> 'int *' lvalue ParmVar 0x146128528 'reds' 'int *'         | `-DeclRefExpr 0x146142358 <col:36> 'int' lvalue Var 0x146128840 'y_res' 'int'         |-BinaryOperator 0x146142448 <line:21:9, col:48> '<dependent type>' contains-errors '='         | |-CXXDependentScopeMemberExpr 0x1461423e0 <col:9, col:15> '<dependent type>' contains-errors lvalue ->dispatcher_allows_client_mouse         | | `-RecoveryExpr 0x1461423b8 <col:9> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x146142398 <col:9> 'int *' lvalue ParmVar 0x146128528 'reds' 'int *'         | `-DeclRefExpr 0x146142428 <col:48> 'int' contains-errors lvalue Var 0x1461286b8 'allow_now' 'int'         |-CallExpr 0x146142588 <line:22:9, col:36> '<dependent type>' contains-errors         | |-DeclRefExpr 0x146142548 <col:9> 'int ()' Function 0x146142490 'reds_update_mouse_mode' 'int ()'         | `-RecoveryExpr 0x146142568 <col:32> '<dependent type>' contains-errors lvalue         `-IfStmt 0x146142a10 <line:23:9, line:26:9>           |-BinaryOperator 0x146142770 <line:23:13, line:24:46> 'int' contains-errors '&&'           | |-BinaryOperator 0x146142680 <line:23:13, col:52> 'int' contains-errors '&&'           | | |-CXXDependentScopeMemberExpr 0x1461425d0 <col:13, col:19> '<dependent type>' contains-errors lvalue ->is_client_mouse_allowed           | | | `-RecoveryExpr 0x1461425b0 <col:13> '<dependent type>' contains-errors lvalue           | | `-CXXDependentScopeMemberExpr 0x146142638 <col:46, col:52> '<dependent type>' contains-errors lvalue ->inputs_channel           | |   `-RecoveryExpr 0x146142618 <col:46> '<dependent type>' contains-errors lvalue           | `-CallExpr 0x146142750 <line:24:13, col:46> '<dependent type>' contains-errors           |   `-CXXDependentScopeMemberExpr 0x146142708 <col:13, col:35> '<dependent type>' contains-errors lvalue ->has_tablet           |     `-CXXDependentScopeMemberExpr 0x1461426c0 <col:13, col:19> '<dependent type>' contains-errors lvalue ->inputs_channel           |       `-RecoveryExpr 0x1461426a0 <col:13> '<dependent type>' contains-errors lvalue           `-CompoundStmt 0x1461429f8 <col:49, line:26:9>             `-CallExpr 0x1461429c8 <line:25:13, col:109> '<dependent type>' contains-errors               |-CXXDependentScopeMemberExpr 0x146142820 <col:13, col:35> '<dependent type>' contains-errors lvalue ->set_tablet_logical_size               | `-CXXDependentScopeMemberExpr 0x1461427d8 <col:13, col:19> '<dependent type>' contains-errors lvalue ->inputs_channel               |   `-RecoveryExpr 0x1461427b0 <col:13> '<dependent type>' contains-errors lvalue               |     `-DeclRefExpr 0x146142790 <col:13> 'int *' lvalue ParmVar 0x146128528 'reds' 'int *'               |-CXXDependentScopeMemberExpr 0x1461428d0 <col:59, col:78> '<dependent type>' contains-errors lvalue .x_res               | `-CXXDependentScopeMemberExpr 0x146142888 <col:59, col:65> '<dependent type>' contains-errors lvalue ->monitor_mode               |   `-RecoveryExpr 0x146142868 <col:59> '<dependent type>' contains-errors lvalue               `-CXXDependentScopeMemberExpr 0x146142980 <col:85, col:104> '<dependent type>' contains-errors lvalue .y_res                 `-CXXDependentScopeMemberExpr 0x146142938 <col:85, col:91> '<dependent type>' contains-errors lvalue ->monitor_mode                   `-RecoveryExpr 0x146142918 <col:85> '<dependent type>' contains-errors lvalue ","19385":"`-FunctionDecl 0x149008940  col:9 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x149008a40 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x149008aa8 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x149008b10 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1490089e8 <<invalid sloc>> Implicit 883 ","20117":"`-FunctionDecl 0x146941978  line:1:15 invalid nfsd4_decode_reclaim_complete 'int (struct nfsd4_compoundargs *, struct nfsd4_reclaim_complete *)' static   |-ParmVarDecl 0x146928668 <col:45, col:72> col:72 argp 'struct nfsd4_compoundargs *'   |-ParmVarDecl 0x146941858 <col:78, col:109> col:109 used rc 'struct nfsd4_reclaim_complete *'   `-CompoundStmt 0x146941e98 <line:2:1, line:9:1>     |-CallExpr 0x146941c18 <line:5:2, col:12> 'int'     | |-ImplicitCastExpr 0x146941c00 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x146941b90 <col:2> 'int ()' Function 0x146941ad8 'READ_BUF' 'int ()'     | `-IntegerLiteral 0x146941bb0 <col:11> 'int' 4     `-BinaryOperator 0x146941e78 <line:6:2, col:35> '<dependent type>' contains-errors '='       |-RecoveryExpr 0x146941c78 <col:2, col:6> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x146941c40 <col:2> 'struct nfsd4_reclaim_complete *' lvalue ParmVar 0x146941858 'rc' 'struct nfsd4_reclaim_complete *'       `-CallExpr 0x146941e50 <col:19, col:35> '<dependent type>' contains-errors         |-DeclRefExpr 0x146941d80 <col:19> 'int ()' Function 0x146941cc8 'be32_to_cpup' 'int ()'         `-UnaryOperator 0x146941e38 <col:32, col:33> '<dependent type>' contains-errors postfix '++' cannot overflow           `-RecoveryExpr 0x146941e18 <col:32> '<dependent type>' contains-errors lvalue ","19290":"`-FunctionDecl 0x1510c0910  line:1:6 pcntl_signal_dispatch 'void ()'   `-CompoundStmt 0x1510db8c8 <line:2:1, line:52:1>     |-DeclStmt 0x1510c0d60 <line:4:2, col:47>     | |-RecordDecl 0x1510c0ad8 <col:2, col:9> col:9 struct php_pcntl_pending_signal     | |-VarDecl 0x1510c0c48 <col:2, col:35> col:35 used queue 'struct php_pcntl_pending_signal *'     | `-VarDecl 0x1510c0cd8 <col:2, col:43> col:43 used next 'struct php_pcntl_pending_signal *'     |-CallExpr 0x1510c0ef8 <line:7:2, col:15> 'int'     | `-ImplicitCastExpr 0x1510c0ee0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x1510c0e90 <col:2> 'int ()' Function 0x1510c0dd8 'TSRMLS_FETCH' 'int ()'     |-CallExpr 0x1528088b0 <line:10:2, col:18> '<dependent type>' contains-errors     | |-DeclRefExpr 0x152808800 <col:2> 'int ()' Function 0x1510c0f40 'sigfillset' 'int ()'     | `-UnaryOperator 0x152808898 <col:13, col:14> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x152808878 <col:14> '<dependent type>' contains-errors lvalue     |-CallExpr 0x152808b18 <line:11:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1528089b8 <col:2> 'int ()' Function 0x152808900 'sigprocmask' 'int ()'     | |-RecoveryExpr 0x152808a88 <col:14> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x152808ac8 <col:25, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x152808aa8 <col:26> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x152808b00 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x152808ae0 <col:33> '<dependent type>' contains-errors lvalue     |-IfStmt 0x152808f88 <line:14:2, line:17:2>     | |-BinaryOperator 0x152808dd0 <line:14:6, col:56> 'int' contains-errors '||'     | | |-UnaryOperator 0x152808d70 <col:6, col:20> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | `-CallExpr 0x152808d48 <col:8, col:20> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x152808c30 <col:8> 'int ()' Function 0x152808b78 'PCNTL_G' 'int ()'     | | |   `-RecoveryExpr 0x152808d28 <col:16> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x152808da8 <col:25, col:56> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x152808ca8 <col:25> 'int ()' Function 0x152808b78 'PCNTL_G' 'int ()'     | |   `-RecoveryExpr 0x152808d88 <col:33> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x152808f68 <col:59, line:17:2>     |   |-CallExpr 0x152808f20 <line:15:3, col:43> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x152808df0 <col:3> 'int ()' Function 0x152808900 'sigprocmask' 'int ()'     |   | |-RecoveryExpr 0x152808ea8 <col:15> '<dependent type>' contains-errors lvalue     |   | |-UnaryOperator 0x152808ee8 <col:28, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-RecoveryExpr 0x152808ec8 <col:29> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x152808f00 <col:39> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x152808f58 <line:16:3>     |-BinaryOperator 0x152809090 <line:20:2, col:37> '<dependent type>' contains-errors '='     | |-CallExpr 0x152809068 <col:2, col:33> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x152808fa8 <col:2> 'int ()' Function 0x152808b78 'PCNTL_G' 'int ()'     | | `-RecoveryExpr 0x152809048 <col:10> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x152809008 <col:37> 'int' 1     `-WhileStmt 0x1510db848 <line:27:2, line:45:2>       |-ImplicitCastExpr 0x152809130 <line:27:9> 'struct php_pcntl_pending_signal *' <LValueToRValue>       | `-DeclRefExpr 0x152809110 <col:9> 'struct php_pcntl_pending_signal *' lvalue Var 0x1510c0c48 'queue' 'struct php_pcntl_pending_signal *'       `-CompoundStmt 0x1510db820 <col:16, line:45:2>         |-IfStmt 0x1510db628 <line:28:3, line:39:3>         | |-RecoveryExpr 0x1528092c8 <line:28:7, col:90> '_Bool' contains-errors         | `-CompoundStmt 0x1510db618 <col:99, line:39:3>         |-BinaryOperator 0x1510db6c8 <line:41:3, col:17> 'struct php_pcntl_pending_signal *' contains-errors '='         | |-DeclRefExpr 0x1510db648 <col:3> 'struct php_pcntl_pending_signal *' lvalue Var 0x1510c0cd8 'next' 'struct php_pcntl_pending_signal *'         | `-RecoveryExpr 0x1510db6a0 <col:10, col:17> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x1510db668 <col:10> 'struct php_pcntl_pending_signal *' lvalue Var 0x1510c0c48 'queue' 'struct php_pcntl_pending_signal *'         `-BinaryOperator 0x1510db800 <line:44:3, col:11> 'struct php_pcntl_pending_signal *' '='           |-DeclRefExpr 0x1510db7a8 <col:3> 'struct php_pcntl_pending_signal *' lvalue Var 0x1510c0c48 'queue' 'struct php_pcntl_pending_signal *'           `-ImplicitCastExpr 0x1510db7e8 <col:11> 'struct php_pcntl_pending_signal *' <LValueToRValue>             `-DeclRefExpr 0x1510db7c8 <col:11> 'struct php_pcntl_pending_signal *' lvalue Var 0x1510c0cd8 'next' 'struct php_pcntl_pending_signal *' ","19314":"`-FunctionDecl 0x1479282c8  line:1:3 invalid DeletionConfirmationDlg 'int (int *, const int)'   |-ParmVarDecl 0x147928128 <col:27, col:36> col:36 invalid parent 'int *'   |-ParmVarDecl 0x1479281a8 <col:44, col:50> col:54 'const int'   `-CompoundStmt 0x1479425d0 <col:124, line:16:3>     `-CallExpr 0x147928560 <line:2:5, col:17> '<dependent type>' contains-errors       |-DeclRefExpr 0x1479284e0 <col:5> 'int ()' Function 0x147928428 'setupUi' 'int ()'       `-RecoveryExpr 0x147928540 <col:13> '<dependent type>' contains-errors lvalue ","20141":"`-FunctionDecl 0x14000de80  line:1:6 invalid jas_matrix_asr 'void (int *, int)'   |-ParmVarDecl 0x14000dd28 <col:21, col:35> col:35 invalid matrix 'int *'   |-ParmVarDecl 0x14000dda8 <col:43, col:47> col:47 used n 'int'   `-CompoundStmt 0x140028bc8 <line:2:1, line:21:1>     |-DeclStmt 0x14000dfb8 <line:3:2, col:7>     | `-VarDecl 0x14000df50 <col:2, col:6> col:6 used i 'int'     |-DeclStmt 0x14000e050 <line:4:2, col:7>     | `-VarDecl 0x14000dfe8 <col:2, col:6> col:6 used j 'int'     |-DeclStmt 0x14000e100 <line:6:2, col:13>     | `-VarDecl 0x14000e098 <col:2, col:6> col:6 used rowstep 'int'     |-CallExpr 0x14000e378 <line:9:2, col:15> 'int'     | |-ImplicitCastExpr 0x14000e360 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14000e290 <col:2> 'int ()' Function 0x14000e1d8 'assert' 'int ()'     | `-BinaryOperator 0x14000e308 <col:9, col:14> 'int' '>='     |   |-ImplicitCastExpr 0x14000e2f0 <col:9> 'int' <LValueToRValue>     |   | `-DeclRefExpr 0x14000e2b0 <col:9> 'int' lvalue ParmVar 0x14000dda8 'n' 'int'     |   `-IntegerLiteral 0x14000e2d0 <col:14> 'int' 0     `-IfStmt 0x140028ba8 <line:10:2, line:20:2>       |-BinaryOperator 0x1400280e8 <line:10:6, col:69> 'int' contains-errors '&&'       | |-BinaryOperator 0x140027f40 <col:6, col:35> 'int' contains-errors '>'       | | |-CallExpr 0x140027ef8 <col:6, col:31> '<dependent type>' contains-errors       | | | |-DeclRefExpr 0x140027eb8 <col:6> 'int ()' Function 0x140027e00 'jas_matrix_numrows' 'int ()'       | | | `-RecoveryExpr 0x140027ed8 <col:25> '<dependent type>' contains-errors lvalue       | | `-IntegerLiteral 0x140027f20 <col:35> 'int' 0       | `-BinaryOperator 0x1400280c8 <col:40, col:69> 'int' contains-errors '>'       |   |-CallExpr 0x140028080 <col:40, col:65> '<dependent type>' contains-errors       |   | |-DeclRefExpr 0x140028040 <col:40> 'int ()' Function 0x140027f88 'jas_matrix_numcols' 'int ()'       |   | `-RecoveryExpr 0x140028060 <col:59> '<dependent type>' contains-errors lvalue       |   `-IntegerLiteral 0x1400280a8 <col:69> 'int' 0       `-CompoundStmt 0x140028b80 <col:72, line:20:2>         |-CallExpr 0x140028190 <line:11:3, col:23> '<dependent type>' contains-errors         | |-DeclRefExpr 0x140028108 <col:3> 'int ()' Function 0x14000e1d8 'assert' 'int ()'         | `-CXXDependentScopeMemberExpr 0x140028148 <col:10, col:18> '<dependent type>' contains-errors lvalue ->rows_         |   `-RecoveryExpr 0x140028128 <col:10> '<dependent type>' contains-errors lvalue         |-BinaryOperator 0x140028320 <line:12:3, col:38> 'int' contains-errors '='         | |-DeclRefExpr 0x1400281b8 <col:3> 'int' lvalue Var 0x14000e098 'rowstep' 'int'         | `-CallExpr 0x1400282f8 <col:13, col:38> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x1400282b8 <col:13> 'int ()' Function 0x140028200 'jas_matrix_rowstep' 'int ()'         |   `-RecoveryExpr 0x1400282d8 <col:32> '<dependent type>' contains-errors lvalue         `-ForStmt 0x140028b48 <line:13:3, line:19:3>           |-BinaryOperator 0x140028578 <line:13:8, col:56> 'int' contains-errors ','           | |-BinaryOperator 0x1400283c8 <col:8, col:20> 'int' contains-errors '='           | | |-DeclRefExpr 0x140028340 <col:8> 'int' lvalue Var 0x14000df50 'i' 'int'           | | `-CXXDependentScopeMemberExpr 0x140028380 <col:12, col:20> '<dependent type>' contains-errors lvalue ->numrows_           | |   `-RecoveryExpr 0x140028360 <col:12> '<dependent type>' contains-errors lvalue           | `-BinaryOperator 0x140028558 <col:30, col:56> 'int' contains-errors '='           |   |-DeclRefExpr 0x140028500 <col:30> 'int' lvalue Var 0x14000e098 'rowstep' 'int'           |   `-ArraySubscriptExpr 0x140028538 <col:41, col:56> '<dependent type>' contains-errors lvalue           |     |-ImplicitCastExpr 0x140028520 <col:41, col:49> '<dependent type>' contains-errors <LValueToRValue>           |     | `-CXXDependentScopeMemberExpr 0x140028420 <col:41, col:49> '<dependent type>' contains-errors lvalue ->rows_           |     |   `-RecoveryExpr 0x140028400 <col:41> '<dependent type>' contains-errors lvalue           |     `-IntegerLiteral 0x140028468 <col:55> 'int' 0           |-<<<NULL>>>           |-BinaryOperator 0x1400285f0 <col:59, col:63> 'int' '>'           | |-ImplicitCastExpr 0x1400285d8 <col:59> 'int' <LValueToRValue>           | | `-DeclRefExpr 0x140028598 <col:59> 'int' lvalue Var 0x14000df50 'i' 'int'           | `-IntegerLiteral 0x1400285b8 <col:63> 'int' 0           |-BinaryOperator 0x140028738 <col:66, line:14:17> 'int' ','           | |-UnaryOperator 0x140028630 <line:13:66, col:68> 'int' prefix '--'           | | `-DeclRefExpr 0x140028610 <col:68> 'int' lvalue Var 0x14000df50 'i' 'int'           | `-CompoundAssignOperator 0x140028708 <line:14:5, col:17> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'           |   |-DeclRefExpr 0x1400286d0 <col:5> 'int' lvalue Var 0x14000e098 'rowstep' 'int'           |   `-ImplicitCastExpr 0x1400286f0 <col:17> 'int' <LValueToRValue>           |     `-DeclRefExpr 0x140028660 <col:17> 'int' lvalue Var 0x14000e098 'rowstep' 'int'           `-CompoundStmt 0x140028b30 <col:26, line:19:3>             `-ForStmt 0x140028af8 <line:15:4, line:18:4>               |-<<<NULL>>>               |-<<<NULL>>>               |-BinaryOperator 0x1400288c8 <line:15:48, col:52> 'int' '>'               | |-ImplicitCastExpr 0x1400288b0 <col:48> 'int' <LValueToRValue>               | | `-DeclRefExpr 0x140028870 <col:48> 'int' lvalue Var 0x14000dfe8 'j' 'int'               | `-IntegerLiteral 0x140028890 <col:52> 'int' 0               |-BinaryOperator 0x1400289a8 <col:55, line:16:8> '<dependent type>' contains-errors ','               | |-UnaryOperator 0x140028908 <line:15:55, col:57> 'int' prefix '--'               | | `-DeclRefExpr 0x1400288e8 <col:57> 'int' lvalue Var 0x14000dfe8 'j' 'int'               | `-UnaryOperator 0x140028990 <line:16:6, col:8> '<dependent type>' contains-errors prefix '++' cannot overflow               |   `-RecoveryExpr 0x140028970 <col:8> '<dependent type>' contains-errors lvalue               `-CompoundStmt 0x140028ae0 <col:14, line:18:4>                 `-CompoundAssignOperator 0x140028ab0 <line:17:5, col:15> '<dependent type>' contains-errors '>>=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'                   |-UnaryOperator 0x140028a98 <col:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow                   | `-ImplicitCastExpr 0x140028a80 <col:6> '<dependent type>' contains-errors <LValueToRValue>                   |   `-RecoveryExpr 0x140028a60 <col:6> '<dependent type>' contains-errors lvalue                   `-DeclRefExpr 0x140028a10 <col:15> 'int' lvalue ParmVar 0x14000dda8 'n' 'int' ","19821":"`-FunctionDecl 0x1201284c0  line:1:6 invalid qemu_chr_fe_set_handlers 'void (int *, int *, int *, int *, void *, int *)'   |-ParmVarDecl 0x120128128 <col:31, col:44> col:44 invalid b 'int *'   |-ParmVarDecl 0x1201281a8 <line:2:31, col:49> col:49 invalid fd_can_read 'int *'   |-ParmVarDecl 0x120128228 <line:3:31, col:46> col:46 invalid fd_read 'int *'   |-ParmVarDecl 0x1201282a8 <line:4:31, col:47> col:47 invalid fd_event 'int *'   |-ParmVarDecl 0x120128328 <line:5:31, col:37> col:37 used opaque 'void *'   |-ParmVarDecl 0x1201283a8 <line:6:31, col:45> col:45 invalid context 'int *'   `-CompoundStmt 0x1201425c8 <line:7:1, line:45:1>     |-DeclStmt 0x120128630 <line:9:5, col:16>     | `-VarDecl 0x1201285c8 <col:5, col:9> col:9 used fe_open 'int'     |-IfStmt 0x120128770 <line:12:5, line:14:5>     | |-UnaryOperator 0x120128730 <line:12:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x120128718 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x1201286f8 <col:10> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x120128758 <col:13, line:14:5>     |   `-ReturnStmt 0x120128748 <line:13:9>     |-IfStmt 0x120141c30 <line:16:5, line:21:5> has_else     | |-BinaryOperator 0x120141910 <line:16:9, col:49> 'int' contains-errors '&&'     | | |-BinaryOperator 0x1201418a0 <col:9, col:37> 'int' contains-errors '&&'     | | | |-BinaryOperator 0x120141830 <col:9, col:21> 'int' contains-errors '&&'     | | | | |-UnaryOperator 0x1201287c8 <col:9, col:10> 'int' prefix '!' cannot overflow     | | | | | `-ImplicitCastExpr 0x1201287b0 <col:10> 'void *' <LValueToRValue>     | | | | |   `-DeclRefExpr 0x120128790 <col:10> 'void *' lvalue ParmVar 0x120128328 'opaque' 'void *'     | | | | `-UnaryOperator 0x120141818 <col:20, col:21> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | |   `-ImplicitCastExpr 0x120141800 <col:21> '<dependent type>' contains-errors <LValueToRValue>     | | | |     `-RecoveryExpr 0x1201287e0 <col:21> '<dependent type>' contains-errors lvalue     | | | `-UnaryOperator 0x120141888 <col:36, col:37> '<dependent type>' contains-errors prefix '!' cannot overflow     | | |   `-ImplicitCastExpr 0x120141870 <col:37> '<dependent type>' contains-errors <LValueToRValue>     | | |     `-RecoveryExpr 0x120141850 <col:37> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x1201418f8 <col:48, col:49> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x1201418e0 <col:49> '<dependent type>' contains-errors <LValueToRValue>     | |     `-RecoveryExpr 0x1201418c0 <col:49> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x120141b98 <col:59, line:19:5>     | | |-BinaryOperator 0x120141970 <line:17:9, col:19> 'int' '='     | | | |-DeclRefExpr 0x120141930 <col:9> 'int' lvalue Var 0x1201285c8 'fe_open' 'int'     | | | `-IntegerLiteral 0x120141950 <col:19> 'int' 0     | | `-CallExpr 0x120141b70 <line:18:9, col:29> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x120141af0 <col:9> 'int ()' Function 0x120141a38 'remove_fd_in_watch' 'int ()'     | |   `-RecoveryExpr 0x120141b50 <col:28> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x120141c18 <line:19:12, line:21:5>     |   `-BinaryOperator 0x120141bf8 <line:20:9, col:19> 'int' '='     |     |-DeclRefExpr 0x120141bb8 <col:9> 'int' lvalue Var 0x1201285c8 'fe_open' 'int'     |     `-IntegerLiteral 0x120141bd8 <col:19> 'int' 1     |-IfStmt 0x120141e58 <line:26:5, line:28:5>     | |-CXXDependentScopeMemberExpr 0x120141d60 <line:26:9, col:12> '<dependent type>' contains-errors lvalue ->chr_update_read_handler     | | `-RecoveryExpr 0x120141d40 <col:9> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x120141e48 <col:37, line:28:5>     |-IfStmt 0x120142128 <line:30:5, line:32:5>     | |-UnaryOperator 0x120141f88 <line:30:9, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x120141f70 <col:10, col:13> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x120141f28 <col:10, col:13> '<dependent type>' contains-errors lvalue ->explicit_fe_open     | |     `-RecoveryExpr 0x120141f08 <col:10> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x120142110 <col:31, line:32:5>     |   `-CallExpr 0x1201420e0 <line:31:9, col:40> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x120142080 <col:9> 'int ()' Function 0x120141fc8 'qemu_chr_fe_set_open' 'int ()'     |     |-RecoveryExpr 0x1201420a0 <col:30> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1201420c0 <col:33> 'int' lvalue Var 0x1201285c8 'fe_open' 'int'     |-IfStmt 0x120142438 <line:34:5, line:40:5>     | |-ImplicitCastExpr 0x120142168 <line:34:9> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x120142148 <col:9> 'int' lvalue Var 0x1201285c8 'fe_open' 'int'     | `-CompoundStmt 0x120142418 <col:18, line:40:5>     |   |-CallExpr 0x1201422a0 <line:35:9, col:33> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x120142260 <col:9> 'int ()' Function 0x1201421a8 'qemu_chr_fe_take_focus' 'int ()'     |   | `-RecoveryExpr 0x120142280 <col:32> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x1201423f8 <line:37:9, line:39:9>     |     |-RecoveryExpr 0x1201422c8 <line:37:13, col:16> '_Bool' contains-errors     |     `-CompoundStmt 0x1201423e8 <col:25, line:39:9>     `-IfStmt 0x1201425a8 <line:42:5, line:44:5>       |-RecoveryExpr 0x120142458 <line:42:9, col:12> '_Bool' contains-errors       `-CompoundStmt 0x120142598 <col:20, line:44:5> ","19825":"`-FunctionDecl 0x155033678  line:1:15 ksys_mmap_pgoff 'unsigned long (unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)'   |-ParmVarDecl 0x1550332d8 <col:31, col:45> col:45 used addr 'unsigned long'   |-ParmVarDecl 0x155033358 <col:51, col:65> col:65 used len 'unsigned long'   |-ParmVarDecl 0x1550333d8 <line:2:10, col:24> col:24 used prot 'unsigned long'   |-ParmVarDecl 0x155033458 <col:30, col:44> col:44 used flags 'unsigned long'   |-ParmVarDecl 0x1550334d8 <line:3:10, col:24> col:24 used fd 'unsigned long'   |-ParmVarDecl 0x155033558 <col:28, col:42> col:42 used pgoff 'unsigned long'   `-CompoundStmt 0x15505dba0 <line:4:1, line:45:1>     |-DeclStmt 0x1550339d8 <line:5:2, col:26>     | |-RecordDecl 0x155033798 <col:2, col:9> col:9 struct file     | `-VarDecl 0x155033908 <col:2, col:22> col:15 used file 'struct file *' cinit     |   `-RecoveryExpr 0x1550339a0 <col:22> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x15505aa80 <line:6:2, col:22>     | `-VarDecl 0x15505aa18 <col:2, col:16> col:16 used retval 'unsigned long'     |-BinaryOperator 0x15505acb0 <line:8:2, col:27> 'unsigned long' '='     | |-DeclRefExpr 0x15505aa98 <col:2> 'unsigned long' lvalue ParmVar 0x1550332d8 'addr' 'unsigned long'     | `-ImplicitCastExpr 0x15505ac98 <col:9, col:27> 'unsigned long' <IntegralCast>     |   `-CallExpr 0x15505ac58 <col:9, col:27> 'int'     |     |-ImplicitCastExpr 0x15505ac40 <col:9> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x15505abd0 <col:9> 'int ()' Function 0x15505ab18 'untagged_addr' 'int ()'     |     `-ImplicitCastExpr 0x15505ac80 <col:23> 'unsigned long' <LValueToRValue>     |       `-DeclRefExpr 0x15505abf0 <col:23> 'unsigned long' lvalue ParmVar 0x1550332d8 'addr' 'unsigned long'     |-IfStmt 0x15505d608 <line:10:2, line:36:2> has_else     | |-RecoveryExpr 0x15505ad28 <line:10:6, col:29> '_Bool' contains-errors     | |-CompoundStmt 0x156808f10 <col:32, line:20:2>     | | |-CallExpr 0x15505aea0 <line:11:3, col:26> 'int'     | | | |-ImplicitCastExpr 0x15505ae88 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x15505ae28 <col:3> 'int ()' Function 0x15505ad70 'audit_mmap_fd' 'int ()'     | | | |-ImplicitCastExpr 0x15505aed0 <col:17> 'unsigned long' <LValueToRValue>     | | | | `-DeclRefExpr 0x15505ae48 <col:17> 'unsigned long' lvalue ParmVar 0x1550334d8 'fd' 'unsigned long'     | | | `-ImplicitCastExpr 0x15505aee8 <col:21> 'unsigned long' <LValueToRValue>     | | |   `-DeclRefExpr 0x15505ae68 <col:21> 'unsigned long' lvalue ParmVar 0x155033458 'flags' 'unsigned long'     | | |-BinaryOperator 0x15505b4d0 <line:12:3, col:17> 'struct file *' contains-errors '='     | | | |-DeclRefExpr 0x15505af00 <col:3> 'struct file *' contains-errors lvalue Var 0x155033908 'file' 'struct file *'     | | | `-ImplicitCastExpr 0x15505b098 <col:10, col:17> 'struct file *' <IntegralToPointer>     | | |   `-CallExpr 0x15505b058 <col:10, col:17> 'int'     | | |     |-ImplicitCastExpr 0x15505b040 <col:10> 'int (*)()' <FunctionToPointerDecay>     | | |     | `-DeclRefExpr 0x15505b000 <col:10> 'int ()' Function 0x15505af48 'fget' 'int ()'     | | |     `-ImplicitCastExpr 0x15505b080 <col:15> 'unsigned long' <LValueToRValue>     | | |       `-DeclRefExpr 0x15505b020 <col:15> 'unsigned long' lvalue ParmVar 0x1550334d8 'fd' 'unsigned long'     | | |-IfStmt 0x15505b5e8 <line:13:3, line:14:12>     | | | |-UnaryOperator 0x15505b528 <line:13:7, col:8> 'int' contains-errors prefix '!' cannot overflow     | | | | `-ImplicitCastExpr 0x15505b510 <col:8> 'struct file *' contains-errors <LValueToRValue>     | | | |   `-DeclRefExpr 0x15505b4f0 <col:8> 'struct file *' contains-errors lvalue Var 0x155033908 'file' 'struct file *'     | | | `-ReturnStmt 0x15505b5d8 <line:14:4, col:12>     | | |   `-UnaryOperator 0x15505b5c0 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     | | |     `-ImplicitCastExpr 0x15505b5a8 <col:12> '<dependent type>' contains-errors <LValueToRValue>     | | |       `-RecoveryExpr 0x15505b588 <col:12> '<dependent type>' contains-errors lvalue     | | |-IfStmt 0x156808a28 <line:15:3, line:16:54>     | | | |-CallExpr 0x15505b740 <line:15:7, col:29> 'int' contains-errors     | | | | |-ImplicitCastExpr 0x15505b728 <col:7> 'int (*)()' <FunctionToPointerDecay>     | | | | | `-DeclRefExpr 0x15505b6e8 <col:7> 'int ()' Function 0x15505b630 'is_file_hugepages' 'int ()'     | | | | `-ImplicitCastExpr 0x15505b768 <col:25> 'struct file *' contains-errors <LValueToRValue>     | | | |   `-DeclRefExpr 0x15505b708 <col:25> 'struct file *' contains-errors lvalue Var 0x155033908 'file' 'struct file *'     | | | `-BinaryOperator 0x156808a08 <line:16:4, col:54> 'unsigned long' contains-errors '='     | | |   |-DeclRefExpr 0x15505b780 <col:4> 'unsigned long' lvalue ParmVar 0x155033358 'len' 'unsigned long'     | | |   `-ImplicitCastExpr 0x1568089f0 <col:10, col:54> 'unsigned long' contains-errors <IntegralCast>     | | |     `-CallExpr 0x1568089a8 <col:10, col:54> 'int' contains-errors     | | |       |-ImplicitCastExpr 0x156808990 <col:10> 'int (*)()' <FunctionToPointerDecay>     | | |       | `-DeclRefExpr 0x15505b880 <col:10> 'int ()' Function 0x15505b7c8 'ALIGN' 'int ()'     | | |       |-ImplicitCastExpr 0x1568089d8 <col:16> 'unsigned long' <LValueToRValue>     | | |       | `-DeclRefExpr 0x15505b8a0 <col:16> 'unsigned long' lvalue ParmVar 0x155033358 'len' 'unsigned long'     | | |       `-CallExpr 0x156808968 <col:21, col:53> 'int' contains-errors     | | |         |-ImplicitCastExpr 0x156808950 <col:21> 'int (*)()' <FunctionToPointerDecay>     | | |         | `-DeclRefExpr 0x15505b9a0 <col:21> 'int ()' Function 0x15505b8e8 'huge_page_size' 'int ()'     | | |         `-CallExpr 0x156808910 <col:36, col:52> 'int' contains-errors     | | |           |-ImplicitCastExpr 0x1568088f8 <col:36> 'int (*)()' <FunctionToPointerDecay>     | | |           | `-DeclRefExpr 0x1568088b8 <col:36> 'int ()' Function 0x156808800 'hstate_file' 'int ()'     | | |           `-ImplicitCastExpr 0x156808938 <col:48> 'struct file *' contains-errors <LValueToRValue>     | | |             `-DeclRefExpr 0x1568088d8 <col:48> 'struct file *' contains-errors lvalue Var 0x155033908 'file' 'struct file *'     | | |-BinaryOperator 0x156808b20 <line:17:3, col:13> 'unsigned long' contains-errors '='     | | | |-DeclRefExpr 0x156808a48 <col:3> 'unsigned long' lvalue Var 0x15505aa18 'retval' 'unsigned long'     | | | `-UnaryOperator 0x156808b08 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow     | | |   `-ImplicitCastExpr 0x156808af0 <col:13> '<dependent type>' contains-errors <LValueToRValue>     | | |     `-RecoveryExpr 0x156808ad0 <col:13> '<dependent type>' contains-errors lvalue     | | `-IfStmt 0x156808ef0 <line:18:3, line:19:9>     | |   |-CallExpr 0x156808e60 <line:18:7, col:63> '<dependent type>' contains-errors     | |   | |-DeclRefExpr 0x156808c20 <col:7> 'int ()' Function 0x156808b68 'unlikely' 'int ()'     | |   | `-BinaryOperator 0x156808e40 <col:16, col:62> 'int' contains-errors '&&'     | |   |   |-BinaryOperator 0x156808db0 <col:16, col:24> '<dependent type>' contains-errors '&'     | |   |   | |-DeclRefExpr 0x156808c40 <col:16> 'unsigned long' lvalue ParmVar 0x155033458 'flags' 'unsigned long'     | |   |   | `-RecoveryExpr 0x156808d90 <col:24> '<dependent type>' contains-errors lvalue     | |   |   `-UnaryOperator 0x156808e28 <col:39, col:62> 'int' contains-errors prefix '!' cannot overflow     | |   |     `-CallExpr 0x156808de8 <col:40, col:62> 'int' contains-errors     | |   |       |-ImplicitCastExpr 0x156808dd0 <col:40> 'int (*)()' <FunctionToPointerDecay>     | |   |       | `-DeclRefExpr 0x156808c98 <col:40> 'int ()' Function 0x15505b630 'is_file_hugepages' 'int ()'     | |   |       `-ImplicitCastExpr 0x156808e10 <col:58> 'struct file *' contains-errors <LValueToRValue>     | |   |         `-DeclRefExpr 0x156808cb8 <col:58> 'struct file *' contains-errors lvalue Var 0x155033908 'file' 'struct file *'     | |   `-GotoStmt 0x156808ed8 <line:19:4, col:9> 'out_fput' 0x156808e88     | `-IfStmt 0x15505d5e8 <line:20:9, line:36:2>     |   |-BinaryOperator 0x156808fc8 <line:20:13, col:21> '<dependent type>' contains-errors '&'     |   | |-DeclRefExpr 0x156808f50 <col:13> 'unsigned long' lvalue ParmVar 0x155033458 'flags' 'unsigned long'     |   | `-RecoveryExpr 0x156808fa8 <col:21> '<dependent type>' contains-errors lvalue     |   `-CompoundStmt 0x15505d5b0 <col:34, line:36:2>     |     |-DeclStmt 0x156809210 <line:21:3, col:34>     |     | |-RecordDecl 0x156808fe8 <col:3, col:10> col:10 struct user_struct     |     | `-VarDecl 0x156809158 <col:3, col:30> col:23 used user 'struct user_struct *' cinit     |     |   `-RecoveryExpr 0x1568091d8 <col:30> '<dependent type>' contains-errors lvalue     |     |-DeclStmt 0x156809418 <line:22:3, col:20>     |     | |-RecordDecl 0x156809228 <col:3, col:10> col:10 struct hstate     |     | `-VarDecl 0x156809398 <col:3, col:18> col:18 used hs 'struct hstate *'     |     |-IfStmt 0x1568096b8 <line:25:3, line:26:12>     |     | |-UnaryOperator 0x1568095f8 <line:25:7, col:8> 'int' prefix '!' cannot overflow     |     | | `-ImplicitCastExpr 0x1568095e0 <col:8> 'struct hstate *' <LValueToRValue>     |     | |   `-DeclRefExpr 0x1568095c0 <col:8> 'struct hstate *' lvalue Var 0x156809398 'hs' 'struct hstate *'     |     | `-ReturnStmt 0x1568096a8 <line:26:4, col:12>     |     |   `-UnaryOperator 0x156809690 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |     |     `-ImplicitCastExpr 0x156809678 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |     |       `-RecoveryExpr 0x156809658 <col:12> '<dependent type>' contains-errors lvalue     |     |-BinaryOperator 0x15505d060 <line:28:3, col:38> 'unsigned long' '='     |     | |-DeclRefExpr 0x1568096d8 <col:3> 'unsigned long' lvalue ParmVar 0x155033358 'len' 'unsigned long'     |     | `-ImplicitCastExpr 0x15505d048 <col:9, col:38> 'unsigned long' <IntegralCast>     |     |   `-CallExpr 0x15505d000 <col:9, col:38> 'int'     |     |     |-ImplicitCastExpr 0x1568097d0 <col:9> 'int (*)()' <FunctionToPointerDecay>     |     |     | `-DeclRefExpr 0x1568096f8 <col:9> 'int ()' Function 0x15505b7c8 'ALIGN' 'int ()'     |     |     |-ImplicitCastExpr 0x15505d030 <col:15> 'unsigned long' <LValueToRValue>     |     |     | `-DeclRefExpr 0x156809718 <col:15> 'unsigned long' lvalue ParmVar 0x155033358 'len' 'unsigned long'     |     |     `-CallExpr 0x156809790 <col:20, col:37> 'int'     |     |       |-ImplicitCastExpr 0x156809778 <col:20> 'int (*)()' <FunctionToPointerDecay>     |     |       | `-DeclRefExpr 0x156809738 <col:20> 'int ()' Function 0x15505b8e8 'huge_page_size' 'int ()'     |     |       `-ImplicitCastExpr 0x1568097b8 <col:35> 'struct hstate *' <LValueToRValue>     |     |         `-DeclRefExpr 0x156809758 <col:35> 'struct hstate *' lvalue Var 0x156809398 'hs' 'struct hstate *'     |     `-IfStmt 0x15505d590 <line:34:3, line:35:23>     |       |-CallExpr 0x15505d3b0 <line:34:7, col:18> 'int' contains-errors     |       | |-ImplicitCastExpr 0x15505d398 <col:7> 'int (*)()' <FunctionToPointerDecay>     |       | | `-DeclRefExpr 0x15505d358 <col:7> 'int ()' Function 0x15505d2a0 'IS_ERR' 'int ()'     |       | `-ImplicitCastExpr 0x15505d3d8 <col:14> 'struct file *' contains-errors <LValueToRValue>     |       |   `-DeclRefExpr 0x15505d378 <col:14> 'struct file *' contains-errors lvalue Var 0x155033908 'file' 'struct file *'     |       `-ReturnStmt 0x15505d580 <line:35:4, col:23>     |         `-ImplicitCastExpr 0x15505d568 <col:11, col:23> 'unsigned long' contains-errors <IntegralCast>     |           `-CallExpr 0x15505d528 <col:11, col:23> 'int' contains-errors     |             |-ImplicitCastExpr 0x15505d510 <col:11> 'int (*)()' <FunctionToPointerDecay>     |             | `-DeclRefExpr 0x15505d4d0 <col:11> 'int ()' Function 0x15505d418 'PTR_ERR' 'int ()'     |             `-ImplicitCastExpr 0x15505d550 <col:19> 'struct file *' contains-errors <LValueToRValue>     |               `-DeclRefExpr 0x15505d4f0 <col:19> 'struct file *' contains-errors lvalue Var 0x155033908 'file' 'struct file *'     |-BinaryOperator 0x15505d948 <line:40:2, col:60> 'unsigned long' contains-errors '='     | |-DeclRefExpr 0x15505d658 <col:2> 'unsigned long' lvalue Var 0x15505aa18 'retval' 'unsigned long'     | `-ImplicitCastExpr 0x15505d930 <col:11, col:60> 'unsigned long' contains-errors <IntegralCast>     |   `-CallExpr 0x15505d850 <col:11, col:60> 'int' contains-errors     |     |-ImplicitCastExpr 0x15505d838 <col:11> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x15505d758 <col:11> 'int ()' Function 0x15505d6a0 'vm_mmap_pgoff' 'int ()'     |     |-ImplicitCastExpr 0x15505d8a0 <col:25> 'struct file *' contains-errors <LValueToRValue>     |     | `-DeclRefExpr 0x15505d778 <col:25> 'struct file *' contains-errors lvalue Var 0x155033908 'file' 'struct file *'     |     |-ImplicitCastExpr 0x15505d8b8 <col:31> 'unsigned long' <LValueToRValue>     |     | `-DeclRefExpr 0x15505d798 <col:31> 'unsigned long' lvalue ParmVar 0x1550332d8 'addr' 'unsigned long'     |     |-ImplicitCastExpr 0x15505d8d0 <col:37> 'unsigned long' <LValueToRValue>     |     | `-DeclRefExpr 0x15505d7b8 <col:37> 'unsigned long' lvalue ParmVar 0x155033358 'len' 'unsigned long'     |     |-ImplicitCastExpr 0x15505d8e8 <col:42> 'unsigned long' <LValueToRValue>     |     | `-DeclRefExpr 0x15505d7d8 <col:42> 'unsigned long' lvalue ParmVar 0x1550333d8 'prot' 'unsigned long'     |     |-ImplicitCastExpr 0x15505d900 <col:48> 'unsigned long' <LValueToRValue>     |     | `-DeclRefExpr 0x15505d7f8 <col:48> 'unsigned long' lvalue ParmVar 0x155033458 'flags' 'unsigned long'     |     `-ImplicitCastExpr 0x15505d918 <col:55> 'unsigned long' <LValueToRValue>     |       `-DeclRefExpr 0x15505d818 <col:55> 'unsigned long' lvalue ParmVar 0x155033558 'pgoff' 'unsigned long'     |-LabelStmt 0x15505db38 <line:41:1, line:43:12> 'out_fput'     | `-IfStmt 0x15505db18 <line:42:2, line:43:12>     |   |-ImplicitCastExpr 0x15505d988 <line:42:6> 'struct file *' contains-errors <LValueToRValue>     |   | `-DeclRefExpr 0x15505d968 <col:6> 'struct file *' contains-errors lvalue Var 0x155033908 'file' 'struct file *'     |   `-CallExpr 0x15505dad8 <line:43:3, col:12> 'int' contains-errors     |     |-ImplicitCastExpr 0x15505dac0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x15505da80 <col:3> 'int ()' Function 0x15505d9c8 'fput' 'int ()'     |     `-ImplicitCastExpr 0x15505db00 <col:8> 'struct file *' contains-errors <LValueToRValue>     |       `-DeclRefExpr 0x15505daa0 <col:8> 'struct file *' contains-errors lvalue Var 0x155033908 'file' 'struct file *'     `-ReturnStmt 0x15505db90 <line:44:2, col:9>       `-ImplicitCastExpr 0x15505db78 <col:9> 'unsigned long' <LValueToRValue>         `-DeclRefExpr 0x15505db58 <col:9> 'unsigned long' lvalue Var 0x15505aa18 'retval' 'unsigned long' ","19621":"`-FunctionDecl 0x144008498  line:1:17 invalid avdtp_reconf_cmd 'int (struct avdtp *, int, struct seid_req *, int)' static   |-ParmVarDecl 0x14300e268 <col:34, col:48> col:48 used session 'struct avdtp *'   |-ParmVarDecl 0x14300e2e8 <col:57, col:65> col:65 invalid transaction 'int'   |-ParmVarDecl 0x1440082c8 <line:2:6, col:23> col:23 req 'struct seid_req *'   |-ParmVarDecl 0x144008348 <col:28, col:32> col:32 size 'int'   `-CompoundStmt 0x144008c38 <line:3:1, line:11:1>     |-DeclStmt 0x1440086d8 <line:4:2, col:21>     | |-RecordDecl 0x144008560 <col:2, col:9> col:9 struct conf_rej     | `-VarDecl 0x144008658 <col:2, col:18> col:18 referenced invalid rej 'struct conf_rej'     |-BinaryOperator 0x1440087d8 <line:6:2, col:14> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x144008738 <col:2, col:6> '<dependent type>' contains-errors lvalue .error     | | `-RecoveryExpr 0x144008710 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1440086f0 <col:2> 'struct conf_rej' lvalue Var 0x144008658 'rej' 'struct conf_rej'     | `-RecoveryExpr 0x1440087b8 <col:14> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1440088a8 <line:7:2, col:17> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x144008840 <col:2, col:6> '<dependent type>' contains-errors lvalue .category     | | `-RecoveryExpr 0x144008818 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1440087f8 <col:2> 'struct conf_rej' lvalue Var 0x144008658 'rej' 'struct conf_rej'     | `-IntegerLiteral 0x144008888 <col:17> 'int' 0     `-ReturnStmt 0x144008c28 <line:9:2, line:10:42>       `-CallExpr 0x144008bd8 <line:9:9, line:10:42> '<dependent type>' contains-errors         |-DeclRefExpr 0x144008a20 <line:9:9> 'int ()' Function 0x144008968 'avdtp_send' 'int ()'         |-DeclRefExpr 0x144008a40 <col:20> 'struct avdtp *' lvalue ParmVar 0x14300e268 'session' 'struct avdtp *'         |-RecoveryExpr 0x144008a60 <col:29> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x144008b98 <col:42> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x144008bb8 <line:10:6> '<dependent type>' contains-errors lvalue         |-UnaryOperator 0x144008ad0 <col:25, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow         | `-RecoveryExpr 0x144008ab0 <col:26> '<dependent type>' contains-errors lvalue         `-UnaryExprOrTypeTraitExpr 0x144008b28 <col:31, col:41> 'unsigned long' contains-errors sizeof           `-ParenExpr 0x144008b08 <col:37, col:41> '<dependent type>' contains-errors lvalue             `-RecoveryExpr 0x144008ae8 <col:38> '<dependent type>' contains-errors lvalue ","19347":"`-FunctionDecl 0x125928758  line:1:1 bgp_put_cap_ipv6 'int (struct bgp_proto *)'   |-ParmVarDecl 0x125928648 <col:18, col:36> col:36 p 'struct bgp_proto *'   `-CompoundStmt 0x125941098 <line:2:1, line:10:1>     |-BinaryOperator 0x125940b40 <line:3:3, col:12> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x125940b28 <col:3, col:7> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-UnaryOperator 0x125940b10 <col:4, col:7> '<dependent type>' contains-errors postfix '++' cannot overflow     | |   `-RecoveryExpr 0x125940af0 <col:4> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x125940ab0 <col:12> 'int' 1     |-BinaryOperator 0x125940c38 <line:4:3, col:12> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x125940c20 <col:3, col:7> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-UnaryOperator 0x125940c08 <col:4, col:7> '<dependent type>' contains-errors postfix '++' cannot overflow     | |   `-RecoveryExpr 0x125940be8 <col:4> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x125940ba8 <col:12> 'int' 4     |-BinaryOperator 0x125940d30 <line:5:3, col:12> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x125940d18 <col:3, col:7> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-UnaryOperator 0x125940d00 <col:4, col:7> '<dependent type>' contains-errors postfix '++' cannot overflow     | |   `-RecoveryExpr 0x125940ce0 <col:4> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x125940ca0 <col:12> 'int' 0     |-BinaryOperator 0x125940e40 <line:6:3, col:12> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x125940e08 <col:3, col:7> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-UnaryOperator 0x125940df0 <col:4, col:7> '<dependent type>' contains-errors postfix '++' cannot overflow     | |   `-RecoveryExpr 0x125940dd0 <col:4> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x125940e20 <col:12> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x125940f38 <line:7:3, col:12> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x125940f20 <col:3, col:7> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-UnaryOperator 0x125940f08 <col:4, col:7> '<dependent type>' contains-errors postfix '++' cannot overflow     | |   `-RecoveryExpr 0x125940ee8 <col:4> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x125940ea8 <col:12> 'int' 0     |-BinaryOperator 0x125941030 <line:8:3, col:12> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x125941018 <col:3, col:7> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-UnaryOperator 0x125941000 <col:4, col:7> '<dependent type>' contains-errors postfix '++' cannot overflow     | |   `-RecoveryExpr 0x125940fe0 <col:4> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x125940fa0 <col:12> 'int' 1     `-ReturnStmt 0x125941088 <line:9:3, col:10>       `-RecoveryExpr 0x125941068 <col:10> '<dependent type>' contains-errors lvalue ","19224":"`-FunctionDecl 0x12700dee8  line:1:6 invalid cpu_physical_memory_test_and_clear_dirty 'int (int, int, unsigned int)'   |-ParmVarDecl 0x12700dcf0 <col:47, col:58> col:58 invalid start 'int'   |-ParmVarDecl 0x12700dd70 <line:2:47, col:58> col:58 invalid length 'int'   |-ParmVarDecl 0x12700ddf0 <line:3:47, col:56> col:56 used client 'unsigned int'   `-CompoundStmt 0x130008a20 <line:4:1, line:37:1>     |-DeclStmt 0x12700e0d8 <line:6:5, col:28>     | |-VarDecl 0x12700dfd8 <col:5, col:19> col:19 used end 'unsigned long'     | `-VarDecl 0x12700e058 <col:5, col:24> col:24 used page 'unsigned long'     |-IfStmt 0x12700e178 <line:9:5, line:11:5>     | |-BinaryOperator 0x12700e130 <line:9:9, col:19> 'int' contains-errors '=='     | | |-RecoveryExpr 0x12700e0f0 <col:9> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x12700e110 <col:19> 'int' 0     | `-CompoundStmt 0x12700e168 <col:22, line:11:5>     |-BinaryOperator 0x127027860 <line:13:5, col:48> 'unsigned long' contains-errors '='     | |-DeclRefExpr 0x12700e198 <col:5> 'unsigned long' lvalue Var 0x12700dfd8 'end' 'unsigned long'     | `-BinaryOperator 0x127027840 <col:11, col:48> '<dependent type>' contains-errors '>>'     |   |-CallExpr 0x12700e390 <col:11, col:43> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12700e310 <col:11> 'int ()' Function 0x12700e258 'TARGET_PAGE_ALIGN' 'int ()'     |   | `-BinaryOperator 0x12700e370 <col:29, col:37> '<dependent type>' contains-errors '+'     |   |   |-RecoveryExpr 0x12700e330 <col:29> '<dependent type>' contains-errors lvalue     |   |   `-RecoveryExpr 0x12700e350 <col:37> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x127027820 <col:48> 'int ()' Function 0x12700e258 'TARGET_PAGE_ALIGN' 'int ()'     |-BinaryOperator 0x127027958 <line:14:5, col:21> 'unsigned long' contains-errors '='     | |-DeclRefExpr 0x127027880 <col:5> 'unsigned long' lvalue Var 0x12700e058 'page' 'unsigned long'     | `-BinaryOperator 0x127027938 <col:12, col:21> '<dependent type>' contains-errors '>>'     |   |-RecoveryExpr 0x1270278a0 <col:12> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x127027918 <col:21> 'int ()' Function 0x12700e258 'TARGET_PAGE_ALIGN' 'int ()'     |-CallExpr 0x127027ac8 <line:16:5, col:19> 'int'     | `-ImplicitCastExpr 0x127027ab0 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x127027a58 <col:5> 'int ()' Function 0x1270279a0 'rcu_read_lock' 'int ()'     |-WhileStmt 0x1270285b0 <line:20:5, line:28:5>     | |-BinaryOperator 0x127027cd8 <line:20:12, col:19> 'int' '<'     | | |-ImplicitCastExpr 0x127027ca8 <col:12> 'unsigned long' <LValueToRValue>     | | | `-DeclRefExpr 0x127027c68 <col:12> 'unsigned long' lvalue Var 0x12700e058 'page' 'unsigned long'     | | `-ImplicitCastExpr 0x127027cc0 <col:19> 'unsigned long' <LValueToRValue>     | |   `-DeclRefExpr 0x127027c88 <col:19> 'unsigned long' lvalue Var 0x12700dfd8 'end' 'unsigned long'     | `-CompoundStmt 0x127028580 <col:24, line:28:5>     |   |-DeclStmt 0x127027e10 <line:21:9, col:59>     |   | `-VarDecl 0x127027d10 <col:9, col:36> col:23 used idx 'unsigned long' cinit     |   |   `-BinaryOperator 0x127027df0 <col:29, col:36> '<dependent type>' contains-errors '\/'     |   |     |-DeclRefExpr 0x127027d78 <col:29> 'unsigned long' lvalue Var 0x12700e058 'page' 'unsigned long'     |   |     `-RecoveryExpr 0x127027dd0 <col:36> '<dependent type>' contains-errors lvalue     |   |-DeclStmt 0x127027f40 <line:22:9, col:62>     |   | `-VarDecl 0x127027e40 <col:9, col:39> col:23 used offset 'unsigned long' cinit     |   |   `-BinaryOperator 0x127027f20 <col:32, col:39> '<dependent type>' contains-errors '%'     |   |     |-DeclRefExpr 0x127027ea8 <col:32> 'unsigned long' lvalue Var 0x12700e058 'page' 'unsigned long'     |   |     `-RecoveryExpr 0x127027f00 <col:39> '<dependent type>' contains-errors lvalue     |   |-DeclStmt 0x127028380 <line:23:9, col:78>     |   | `-VarDecl 0x127027f70 <col:9, col:77> col:23 used num 'unsigned long' cinit     |   |   `-CallExpr 0x127028350 <col:29, col:77> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x1270280b8 <col:29> 'int ()' Function 0x127028000 'MIN' 'int ()'     |   |     |-BinaryOperator 0x127028330 <col:33, col:39> 'unsigned long' '-'     |   |     | |-ImplicitCastExpr 0x127028300 <col:33> 'unsigned long' <LValueToRValue>     |   |     | | `-DeclRefExpr 0x1270280d8 <col:33> 'unsigned long' lvalue Var 0x12700dfd8 'end' 'unsigned long'     |   |     | `-ImplicitCastExpr 0x127028318 <col:39> 'unsigned long' <LValueToRValue>     |   |     |   `-DeclRefExpr 0x1270280f8 <col:39> 'unsigned long' lvalue Var 0x12700e058 'page' 'unsigned long'     |   |     `-BinaryOperator 0x1270282b0 <col:45, col:71> '<dependent type>' contains-errors '-'     |   |       |-RecoveryExpr 0x127028290 <col:45> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x127028180 <col:71> 'unsigned long' contains-errors lvalue Var 0x127027e40 'offset' 'unsigned long'     |   `-CompoundAssignOperator 0x127028550 <line:27:9, col:17> 'unsigned long' contains-errors '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'     |     |-DeclRefExpr 0x1270284f8 <col:9> 'unsigned long' lvalue Var 0x12700e058 'page' 'unsigned long'     |     `-ImplicitCastExpr 0x127028538 <col:17> 'unsigned long' contains-errors <LValueToRValue>     |       `-DeclRefExpr 0x127028518 <col:17> 'unsigned long' contains-errors lvalue Var 0x127027f70 'num' 'unsigned long'     |-CallExpr 0x1270286e8 <line:30:5, col:21> 'int'     | `-ImplicitCastExpr 0x1270286d0 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x1270286b0 <col:5> 'int ()' Function 0x1270285f8 'rcu_read_unlock' 'int ()'     `-IfStmt 0x130008a00 <line:32:5, line:34:5>       |-RecoveryExpr 0x130008858 <line:32:9, col:30> '_Bool' contains-errors       `-CompoundStmt 0x1300089e8 <col:33, line:34:5>         `-CallExpr 0x1300089b8 <line:33:9, col:48> '<dependent type>' contains-errors           |-DeclRefExpr 0x130008958 <col:9> 'int ()' Function 0x1300088a0 'tlb_reset_dirty_range_all' 'int ()'           |-RecoveryExpr 0x130008978 <col:35> '<dependent type>' contains-errors lvalue           `-RecoveryExpr 0x130008998 <col:42> '<dependent type>' contains-errors lvalue ","19872":"`-FunctionDecl 0x150808200  line:1:1 renderCoTable 'int (struct table *, int)'   |-ParmVarDecl 0x15000e248 <col:15, col:29> col:29 used tbl 'struct table *'   |-ParmVarDecl 0x15000e2c8 <col:34, col:38> col:38 used maxlimit 'int'   `-CompoundStmt 0x150026988 <line:2:1, line:33:1>     |-DeclStmt 0x150808478 <line:3:5, col:27>     | |-RecordDecl 0x150808300 <col:5, col:12> col:12 struct readbuffer     | `-VarDecl 0x1508083f8 <col:5, col:23> col:23 invalid obuf 'struct readbuffer'     |-DeclStmt 0x150808608 <line:4:5, col:35>     | |-RecordDecl 0x150808490 <col:5, col:12> col:12 struct html_feed_environ     | `-VarDecl 0x150808588 <col:5, col:30> col:30 referenced invalid h_env 'struct html_feed_environ'     |-DeclStmt 0x1508087c8 <line:5:5, col:43>     | |-RecordDecl 0x150808620 <col:5, col:12> col:12 struct environment     | `-VarDecl 0x150808748 <col:5, col:24> col:24 invalid envs 'struct environment'     |-DeclStmt 0x1508088d0 <line:6:5, col:20>     | `-VarDecl 0x150808868 <col:5, col:19> col:19 used t 'struct table *'     |-DeclStmt 0x150808a88 <line:7:5, col:20>     | |-VarDecl 0x150808900 <col:5, col:9> col:9 used i 'int'     | |-VarDecl 0x150808980 <col:5, col:12> col:12 used col 'int'     | `-VarDecl 0x150808a00 <col:5, col:17> col:17 used row 'int'     |-DeclStmt 0x150808bb8 <line:8:5, col:25>     | |-VarDecl 0x150808ab8 <col:5, col:9> col:9 used indent 'int'     | `-VarDecl 0x150808b38 <col:5, col:17> col:17 used maxwidth 'int'     |-IfStmt 0x150808c90 <line:10:5, line:11:2>     | |-BinaryOperator 0x150808c60 <line:10:9, col:26> 'int' contains-errors '>='     | | |-RecoveryExpr 0x150808c20 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x150808c40 <col:26> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x150808c80 <line:11:2>     `-ForStmt 0x150026950 <line:14:5, line:32:5>       |-BinaryOperator 0x150808cf0 <line:14:10, col:14> 'int' '='       | |-DeclRefExpr 0x150808cb0 <col:10> 'int' lvalue Var 0x150808900 'i' 'int'       | `-IntegerLiteral 0x150808cd0 <col:14> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x150808d90 <col:17, col:26> 'int' contains-errors '<'       | |-DeclRefExpr 0x150808d10 <col:17> 'int' lvalue Var 0x150808900 'i' 'int'       | `-RecoveryExpr 0x150808d68 <col:21, col:26> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x150808d30 <col:21> 'struct table *' lvalue ParmVar 0x15000e248 'tbl' 'struct table *'       |-UnaryOperator 0x150808dd0 <col:34, col:35> 'int' postfix '++'       | `-DeclRefExpr 0x150808db0 <col:34> 'int' lvalue Var 0x150808900 'i' 'int'       `-CompoundStmt 0x1500268f8 <col:39, line:32:5>         |-BinaryOperator 0x150808f20 <line:15:2, col:21> 'struct table *' contains-errors '='         | |-DeclRefExpr 0x150808de8 <col:2> 'struct table *' lvalue Var 0x150808868 't' 'struct table *'         | `-CXXDependentScopeMemberExpr 0x150808ed8 <col:6, col:21> '<dependent type>' contains-errors lvalue .ptr         |   `-ArraySubscriptExpr 0x150808eb8 <col:6, col:19> '<dependent type>' contains-errors lvalue         |     |-ImplicitCastExpr 0x150808e88 <col:6, col:11> '<dependent type>' contains-errors <LValueToRValue>         |     | `-RecoveryExpr 0x150808e40 <col:6, col:11> '<dependent type>' contains-errors lvalue         |     |   `-DeclRefExpr 0x150808e08 <col:6> 'struct table *' lvalue ParmVar 0x15000e248 'tbl' 'struct table *'         |     `-ImplicitCastExpr 0x150808ea0 <col:18> 'int' <LValueToRValue>         |       `-DeclRefExpr 0x150808e68 <col:18> 'int' lvalue Var 0x150808900 'i' 'int'         |-BinaryOperator 0x150809078 <line:16:2, col:23> 'int' contains-errors '='         | |-DeclRefExpr 0x150808f40 <col:2> 'int' lvalue Var 0x150808980 'col' 'int'         | `-CXXDependentScopeMemberExpr 0x150809030 <col:8, col:23> '<dependent type>' contains-errors lvalue .col         |   `-ArraySubscriptExpr 0x150809010 <col:8, col:21> '<dependent type>' contains-errors lvalue         |     |-ImplicitCastExpr 0x150808fe0 <col:8, col:13> '<dependent type>' contains-errors <LValueToRValue>         |     | `-RecoveryExpr 0x150808f98 <col:8, col:13> '<dependent type>' contains-errors lvalue         |     |   `-DeclRefExpr 0x150808f60 <col:8> 'struct table *' lvalue ParmVar 0x15000e248 'tbl' 'struct table *'         |     `-ImplicitCastExpr 0x150808ff8 <col:20> 'int' <LValueToRValue>         |       `-DeclRefExpr 0x150808fc0 <col:20> 'int' lvalue Var 0x150808900 'i' 'int'         |-BinaryOperator 0x1508091d0 <line:17:2, col:23> 'int' contains-errors '='         | |-DeclRefExpr 0x150809098 <col:2> 'int' lvalue Var 0x150808a00 'row' 'int'         | `-CXXDependentScopeMemberExpr 0x150809188 <col:8, col:23> '<dependent type>' contains-errors lvalue .row         |   `-ArraySubscriptExpr 0x150809168 <col:8, col:21> '<dependent type>' contains-errors lvalue         |     |-ImplicitCastExpr 0x150809138 <col:8, col:13> '<dependent type>' contains-errors <LValueToRValue>         |     | `-RecoveryExpr 0x1508090f0 <col:8, col:13> '<dependent type>' contains-errors lvalue         |     |   `-DeclRefExpr 0x1508090b8 <col:8> 'struct table *' lvalue ParmVar 0x15000e248 'tbl' 'struct table *'         |     `-ImplicitCastExpr 0x150809150 <col:20> 'int' <LValueToRValue>         |       `-DeclRefExpr 0x150809118 <col:20> 'int' lvalue Var 0x150808900 'i' 'int'         |-BinaryOperator 0x15080b138 <line:18:2, col:26> 'int' contains-errors '='         | |-DeclRefExpr 0x15080b000 <col:2> 'int' lvalue Var 0x150808ab8 'indent' 'int'         | `-CXXDependentScopeMemberExpr 0x15080b0f0 <col:11, col:26> '<dependent type>' contains-errors lvalue .indent         |   `-ArraySubscriptExpr 0x15080b0d0 <col:11, col:24> '<dependent type>' contains-errors lvalue         |     |-ImplicitCastExpr 0x15080b0a0 <col:11, col:16> '<dependent type>' contains-errors <LValueToRValue>         |     | `-RecoveryExpr 0x15080b058 <col:11, col:16> '<dependent type>' contains-errors lvalue         |     |   `-DeclRefExpr 0x15080b020 <col:11> 'struct table *' lvalue ParmVar 0x15000e248 'tbl' 'struct table *'         |     `-ImplicitCastExpr 0x15080b0b8 <col:23> 'int' <LValueToRValue>         |       `-DeclRefExpr 0x15080b080 <col:23> 'int' lvalue Var 0x150808900 'i' 'int'         |-CallExpr 0x15080b840 <line:20:2, line:21:47> '<dependent type>' contains-errors         | |-DeclRefExpr 0x15080b270 <line:20:2> 'int ()' Function 0x15080b1b8 'init_henv' 'int ()'         | |-UnaryOperator 0x15080b2b0 <col:12, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow         | | `-RecoveryExpr 0x15080b290 <col:13> '<dependent type>' contains-errors lvalue         | |-UnaryOperator 0x15080b2e8 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow         | | `-RecoveryExpr 0x15080b2c8 <col:21> '<dependent type>' contains-errors lvalue         | |-RecoveryExpr 0x15080b300 <col:27> '<dependent type>' contains-errors lvalue         | |-RecoveryExpr 0x15080b6f0 <col:33> '<dependent type>' contains-errors lvalue         | |-CXXDependentScopeMemberExpr 0x15080b760 <col:48, col:63> '<dependent type>' contains-errors lvalue .buf         | | `-ArraySubscriptExpr 0x15080b740 <col:48, col:61> '<dependent type>' contains-errors lvalue         | |   |-ImplicitCastExpr 0x15080b710 <col:48, col:53> '<dependent type>' contains-errors <LValueToRValue>         | |   | `-RecoveryExpr 0x15080b370 <col:48, col:53> '<dependent type>' contains-errors lvalue         | |   |   `-DeclRefExpr 0x15080b338 <col:48> 'struct table *' lvalue ParmVar 0x15000e248 'tbl' 'struct table *'         | |   `-ImplicitCastExpr 0x15080b728 <col:60> 'int' <LValueToRValue>         | |     `-DeclRefExpr 0x15080b398 <col:60> 'int' lvalue Var 0x150808900 'i' 'int'         | |-CallExpr 0x15080b7c0 <line:21:5, col:38> 'int'         | | |-ImplicitCastExpr 0x15080b7a8 <col:5> 'int (*)()' <FunctionToPointerDecay>         | | | `-DeclRefExpr 0x15080b530 <col:5> 'int ()' Function 0x15080b478 'get_spec_cell_width' 'int ()'         | | |-ImplicitCastExpr 0x15080b7f8 <col:25> 'struct table *' <LValueToRValue>         | | | `-DeclRefExpr 0x15080b550 <col:25> 'struct table *' lvalue ParmVar 0x15000e248 'tbl' 'struct table *'         | | |-ImplicitCastExpr 0x15080b810 <col:30> 'int' <LValueToRValue>         | | | `-DeclRefExpr 0x15080b570 <col:30> 'int' lvalue Var 0x150808a00 'row' 'int'         | | `-ImplicitCastExpr 0x15080b828 <col:35> 'int' <LValueToRValue>         | |   `-DeclRefExpr 0x15080b590 <col:35> 'int' lvalue Var 0x150808980 'col' 'int'         | `-DeclRefExpr 0x15080b678 <col:41> 'int' lvalue Var 0x150808ab8 'indent' 'int'         |-CallExpr 0x15080b9f0 <line:22:2, col:20> 'int'         | |-ImplicitCastExpr 0x15080b9d8 <col:2> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x15080b978 <col:2> 'int ()' Function 0x15080b8c0 'check_row' 'int ()'         | |-ImplicitCastExpr 0x15080ba20 <col:12> 'struct table *' <LValueToRValue>         | | `-DeclRefExpr 0x15080b998 <col:12> 'struct table *' lvalue ParmVar 0x15000e248 'tbl' 'struct table *'         | `-ImplicitCastExpr 0x15080ba38 <col:17> 'int' <LValueToRValue>         |   `-DeclRefExpr 0x15080b9b8 <col:17> 'int' lvalue Var 0x150808a00 'row' 'int'         |-IfStmt 0x15080bbc8 <line:23:2, line:24:20>         | |-BinaryOperator 0x15080bad8 <line:23:6, col:20> 'int' contains-errors '>'         | | |-CXXDependentScopeMemberExpr 0x15080ba70 <col:6, col:12> '<dependent type>' contains-errors lvalue .limit         | | | `-RecoveryExpr 0x15080ba50 <col:6> '<dependent type>' contains-errors lvalue         | | `-DeclRefExpr 0x15080bab8 <col:20> 'int' lvalue ParmVar 0x15000e2c8 'maxlimit' 'int'         | `-BinaryOperator 0x15080bba8 <line:24:6, col:20> '<dependent type>' contains-errors '='         |   |-CXXDependentScopeMemberExpr 0x15080bb40 <col:6, col:12> '<dependent type>' contains-errors lvalue .limit         |   | `-RecoveryExpr 0x15080bb18 <col:6> '<dependent type>' contains-errors lvalue         |   |   `-DeclRefExpr 0x15080baf8 <col:6> 'struct html_feed_environ' lvalue Var 0x150808588 'h_env' 'struct html_feed_environ'         |   `-DeclRefExpr 0x15080bb88 <col:20> 'int' lvalue ParmVar 0x15000e2c8 'maxlimit' 'int'         |-IfStmt 0x150026718 <line:25:2, line:30:66> has_else         | |-BinaryOperator 0x15080bc68 <line:25:6, col:24> 'int' contains-errors '=='         | | |-RecoveryExpr 0x15080bc20 <col:6, col:9> '<dependent type>' contains-errors lvalue         | | | `-DeclRefExpr 0x15080bbe8 <col:6> 'struct table *' lvalue Var 0x150808868 't' 'struct table *'         | | `-IntegerLiteral 0x15080bc48 <col:24> 'int' 0         | |-BinaryOperator 0x15080bd50 <line:26:6, col:31> 'int' contains-errors '='         | | |-DeclRefExpr 0x15080bc88 <col:6> 'int' lvalue Var 0x150808b38 'maxwidth' 'int'         | | `-BinaryOperator 0x15080bd30 <col:17, col:31> '<dependent type>' contains-errors '-'         | |   |-CXXDependentScopeMemberExpr 0x15080bcc8 <col:17, col:23> '<dependent type>' contains-errors lvalue .limit         | |   | `-RecoveryExpr 0x15080bca8 <col:17> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x15080bd10 <col:31> 'int' lvalue Var 0x150808ab8 'indent' 'int'         | `-IfStmt 0x1500266e8 <line:27:7, line:30:66> has_else         |   |-BinaryOperator 0x15080bdf0 <line:27:11, col:28> 'int' contains-errors '>'         |   | |-RecoveryExpr 0x15080bda8 <col:11, col:14> '<dependent type>' contains-errors lvalue         |   | | `-DeclRefExpr 0x15080bd70 <col:11> 'struct table *' lvalue Var 0x150808868 't' 'struct table *'         |   | `-IntegerLiteral 0x15080bdd0 <col:28> 'int' 0         |   |-BinaryOperator 0x15080be90 <line:28:6, col:20> 'int' contains-errors '='         |   | |-DeclRefExpr 0x15080be10 <col:6> 'int' lvalue Var 0x150808b38 'maxwidth' 'int'         |   | `-RecoveryExpr 0x15080be68 <col:17, col:20> '<dependent type>' contains-errors lvalue         |   |   `-DeclRefExpr 0x15080be30 <col:17> 'struct table *' lvalue Var 0x150808868 't' 'struct table *'         |   `-BinaryOperator 0x1500266c8 <line:30:6, col:66> 'int' contains-errors '='         |     |-DeclRefExpr 0x15080beb0 <col:6> 'int' lvalue Var 0x150808b38 'maxwidth' 'int'         |     `-BinaryOperator 0x1500266a8 <col:17, col:66> '<dependent type>' contains-errors '='         |       |-RecoveryExpr 0x15080bf08 <col:17, col:20> '<dependent type>' contains-errors lvalue         |       | `-DeclRefExpr 0x15080bed0 <col:17> 'struct table *' lvalue Var 0x150808868 't' 'struct table *'         |       `-BinaryOperator 0x150026688 <col:34, col:66> '<dependent type>' contains-errors '\/'         |         |-BinaryOperator 0x150026648 <col:34, col:58> '<dependent type>' contains-errors '*'         |         | |-UnaryOperator 0x15080bfa8 <col:34, col:38> '<dependent type>' contains-errors prefix '-' cannot overflow         |         | | `-ImplicitCastExpr 0x15080bf90 <col:35, col:38> '<dependent type>' contains-errors <LValueToRValue>         |         | |   `-RecoveryExpr 0x15080bf68 <col:35, col:38> '<dependent type>' contains-errors lvalue         |         | |     `-DeclRefExpr 0x15080bf30 <col:35> 'struct table *' lvalue Var 0x150808868 't' 'struct table *'         |         | `-CXXDependentScopeMemberExpr 0x150026600 <col:52, col:58> '<dependent type>' contains-errors lvalue .limit         |         |   `-RecoveryExpr 0x15080bfc0 <col:52> '<dependent type>' contains-errors lvalue         |         `-IntegerLiteral 0x150026668 <col:66> 'int' 100         `-CallExpr 0x1500268c0 <line:31:2, col:33> '<dependent type>' contains-errors           |-DeclRefExpr 0x150026828 <col:2> 'int ()' Function 0x150026770 'renderTable' 'int ()'           |-DeclRefExpr 0x150026848 <col:14> 'struct table *' lvalue Var 0x150808868 't' 'struct table *'           |-DeclRefExpr 0x150026868 <col:17> 'int' lvalue Var 0x150808b38 'maxwidth' 'int'           `-UnaryOperator 0x1500268a8 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow             `-RecoveryExpr 0x150026888 <col:28> '<dependent type>' contains-errors lvalue ","19718":"`-FunctionDecl 0x138128250  line:1:13 invalid read_file_into_memory 'void (const char *, int)' static   |-ParmVarDecl 0x1381280d8 <line:2:5, col:17> col:17 filename 'const char *'   |-ParmVarDecl 0x138128170 <line:3:5, <invalid sloc>> col:18 invalid 'int'   `-CompoundStmt 0x138141d38 <line:4:1, line:26:1>     |-CallExpr 0x138128578 <line:6:5, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x138128490 <col:5> 'int ()' Function 0x1381283d8 'fseek' 'int ()'     | |-RecoveryExpr 0x138128538 <col:11> '<dependent type>' contains-errors lvalue     | |-IntegerLiteral 0x1381284c8 <col:14> 'int' 0     | `-RecoveryExpr 0x138128558 <col:17> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1381286b0 <line:8:5, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1381285c8 <col:5> 'int ()' Function 0x1381283d8 'fseek' 'int ()'     | |-RecoveryExpr 0x138128670 <col:11> '<dependent type>' contains-errors lvalue     | |-IntegerLiteral 0x138128600 <col:14> 'int' 0     | `-RecoveryExpr 0x138128690 <col:17> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x1381418f0 <line:10:5, col:49>     | `-VarDecl 0x138128748 <col:5, col:48> col:20 used buf_p 'unsigned char *' cinit     |   `-CallExpr 0x1381418d0 <col:28, col:48> '<dependent type>' contains-errors     |     `-CXXDependentScopeMemberExpr 0x138141888 <col:28, col:37> '<dependent type>' contains-errors lvalue .getPointer     |       `-RecoveryExpr 0x138141868 <col:28> '<dependent type>' contains-errors lvalue     |-RecoveryExpr 0x1381419e8 <line:11:5, col:25> '<dependent type>' contains-errors lvalue     | |-UnaryExprOrTypeTraitExpr 0x1381419c8 <col:5, col:12> 'unsigned long' contains-errors sizeof     | | `-RecoveryExpr 0x1381419a8 <col:12> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x138141940 <col:25> 'int' 0     |-WhileStmt 0x138141bc8 <line:13:5, line:16:5>     | |-RecoveryExpr 0x138141b98 <line:13:12, col:73> '_Bool' contains-errors     | `-CompoundStmt 0x138141bb8 <line:14:5, line:16:5>     `-IfStmt 0x138141c18 <line:17:5, line:24:5>       |-RecoveryExpr 0x138141be8 <line:17:9, col:23> '_Bool' contains-errors       `-CompoundStmt 0x138141c08 <line:18:5, line:24:5> ","19111":"`-FunctionDecl 0x14e128208  line:1:28 invalid ScaleQuantumToLong 'unsigned int (const int)' static inline   |-ParmVarDecl 0x14e1280f0 <col:47, col:61> col:61 invalid quantum 'const int'   `-CompoundStmt 0x14e1283c8 <line:2:1, line:12:1>     `-ReturnStmt 0x14e1283b8 <line:4:3, col:42>       `-ParenExpr 0x14e128398 <col:9, col:42> 'unsigned int' contains-errors         `-CStyleCastExpr 0x14e128370 <col:10, col:41> 'unsigned int' contains-errors <Dependent>           `-ParenExpr 0x14e128350 <col:25, col:41> '<dependent type>' contains-errors             `-BinaryOperator 0x14e1282f8 <col:26, col:34> '<dependent type>' contains-errors '*'               |-IntegerLiteral 0x14e1282b8 <col:26> 'unsigned long' 65537               `-RecoveryExpr 0x14e1282d8 <col:34> '<dependent type>' contains-errors lvalue ","19068":"`-FunctionDecl 0x11e9281a8  line:1:1 PHP_FUNCTION 'int (int)'   |-ParmVarDecl 0x11e9280d8 <col:14> col:14 snmp_set_oid_output_format 'int'   `-CompoundStmt 0x11e942b58 <line:2:1, line:24:1>     |-DeclStmt 0x11e928320 <line:3:2, col:9>     | `-VarDecl 0x11e9282b8 <col:2, col:7> col:7 used a1 'long'     |-IfStmt 0x11e928630 <line:5:2, line:7:2>     | |-RecoveryExpr 0x11e928600 <line:5:6, col:70> '_Bool' contains-errors     | `-CompoundStmt 0x11e928620 <col:79, line:7:2>     `-SwitchStmt 0x11e9286c8 <line:9:2, line:23:2>       |-CStyleCastExpr 0x11e9286a0 <line:9:9, col:15> 'int' <IntegralCast>       | `-ImplicitCastExpr 0x11e928688 <col:15> 'long' <LValueToRValue> part_of_explicit_cast       |   `-DeclRefExpr 0x11e928650 <col:15> 'long' lvalue Var 0x11e9282b8 'a1' 'long'       `-CompoundStmt 0x11e942b28 <col:19, line:23:2>         |-CallExpr 0x11e9429a0 <line:16:4, col:82> '<dependent type>' contains-errors         | |-DeclRefExpr 0x11e9428b8 <col:4> 'int ()' Function 0x11e942800 'netsnmp_ds_set_int' 'int ()'         | |-RecoveryExpr 0x11e942960 <col:23> '<dependent type>' contains-errors lvalue         | |-RecoveryExpr 0x11e942980 <col:46> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x11e942908 <col:80> 'long' lvalue Var 0x11e9282b8 'a1' 'long'         |-BreakStmt 0x11e9429d8 <line:18:4>         |-DefaultStmt 0x11e942b00 <line:19:3, col:10>         | `-NullStmt 0x11e942af8 <col:10>         `-BreakStmt 0x11e942b20 <line:22:4> ","19519":"`-FunctionDecl 0x157940dd8  line:1:1 ebt_check_entry_size_and_hooks 'int (const struct ebt_entry *, const struct ebt_table_info *, unsigned int *, unsigned int *, unsigned int *, unsigned int *)'   |-ParmVarDecl 0x157928648 <col:32, col:56> col:56 used e 'const struct ebt_entry *'   |-ParmVarDecl 0x157940a28 <line:2:11, col:40> col:40 used newinfo 'const struct ebt_table_info *'   |-ParmVarDecl 0x157940ad8 <line:3:11, col:25> col:25 used n 'unsigned int *'   |-ParmVarDecl 0x157940b58 <col:28, col:42> col:42 used cnt 'unsigned int *'   |-ParmVarDecl 0x157940bd8 <line:4:11, col:25> col:25 used totalcnt 'unsigned int *'   |-ParmVarDecl 0x157940c58 <col:35, col:49> col:49 used udc_cnt 'unsigned int *'   `-CompoundStmt 0x160009238 <line:5:1, line:54:1>     |-DeclStmt 0x157940f78 <line:6:2, col:7>     | `-VarDecl 0x157940f10 <col:2, col:6> col:6 used i 'int'     |-ForStmt 0x1579412c0 <line:8:2, line:11:2>     | |-BinaryOperator 0x157940fd0 <line:8:7, col:11> 'int' '='     | | |-DeclRefExpr 0x157940f90 <col:7> 'int' lvalue Var 0x157940f10 'i' 'int'     | | `-IntegerLiteral 0x157940fb0 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x157941080 <col:14, col:18> 'int' contains-errors '<'     | | |-DeclRefExpr 0x157940ff0 <col:14> 'int' lvalue Var 0x157940f10 'i' 'int'     | | `-RecoveryExpr 0x157941060 <col:18> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x1579410c0 <col:34, col:35> 'int' postfix '++'     | | `-DeclRefExpr 0x1579410a0 <col:34> 'int' lvalue Var 0x157940f10 'i' 'int'     | `-CompoundStmt 0x1579412a8 <col:39, line:11:2>     |   `-IfStmt 0x157941288 <line:9:3, line:10:4>     |     |-BinaryOperator 0x157941260 <line:9:7, col:49> 'int' contains-errors '=='     |     | |-CStyleCastExpr 0x157941128 <col:7, col:15> 'void *' <BitCast>     |     | | `-ImplicitCastExpr 0x157941110 <col:15> 'const struct ebt_entry *' <LValueToRValue> part_of_explicit_cast     |     | |   `-DeclRefExpr 0x1579410d8 <col:15> 'const struct ebt_entry *' lvalue ParmVar 0x157928648 'e' 'const struct ebt_entry *'     |     | `-CStyleCastExpr 0x157941238 <col:20, col:49> 'void *' contains-errors <Dependent>     |     |   `-ArraySubscriptExpr 0x157941200 <col:28, col:49> '<dependent type>' contains-errors lvalue     |     |     |-ImplicitCastExpr 0x1579411d0 <col:28, col:37> '<dependent type>' contains-errors <LValueToRValue>     |     |     | `-RecoveryExpr 0x157941188 <col:28, col:37> '<dependent type>' contains-errors lvalue     |     |     |   `-DeclRefExpr 0x157941150 <col:28> 'const struct ebt_table_info *' lvalue ParmVar 0x157940a28 'newinfo' 'const struct ebt_table_info *'     |     |     `-ImplicitCastExpr 0x1579411e8 <col:48> 'int' <LValueToRValue>     |     |       `-DeclRefExpr 0x1579411b0 <col:48> 'int' lvalue Var 0x157940f10 'i' 'int'     |     `-BreakStmt 0x157941280 <line:10:4>     |-IfStmt 0x160008ab0 <line:13:2, line:38:2>     | |-BinaryOperator 0x157941470 <line:13:6, col:33> 'int' contains-errors '||'     | | |-BinaryOperator 0x157941420 <col:6, col:11> 'int' contains-errors '!='     | | | |-DeclRefExpr 0x1579412f8 <col:6> 'int' lvalue Var 0x157940f10 'i' 'int'     | | | `-RecoveryExpr 0x157941400 <col:11> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x157941458 <col:29, col:33> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x157941440 <col:30, col:33> '<dependent type>' contains-errors <LValueToRValue>     | |     `-RecoveryExpr 0x157941388 <col:30, col:33> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x157941350 <col:30> 'const struct ebt_entry *' lvalue ParmVar 0x157928648 'e' 'const struct ebt_entry *'     | `-CompoundStmt 0x160008a68 <col:42, line:38:2>     |   |-IfStmt 0x157941870 <line:15:3, line:19:3>     |   | |-BinaryOperator 0x157941560 <line:15:7, col:14> 'int' '!='     |   | | |-ImplicitCastExpr 0x157941530 <col:7, col:8> 'unsigned int' <LValueToRValue>     |   | | | `-UnaryOperator 0x1579414c8 <col:7, col:8> 'unsigned int' lvalue prefix '*' cannot overflow     |   | | |   `-ImplicitCastExpr 0x1579414b0 <col:8> 'unsigned int *' <LValueToRValue>     |   | | |     `-DeclRefExpr 0x157941490 <col:8> 'unsigned int *' lvalue ParmVar 0x157940ad8 'n' 'unsigned int *'     |   | | `-ImplicitCastExpr 0x157941548 <col:13, col:14> 'unsigned int' <LValueToRValue>     |   | |   `-UnaryOperator 0x157941518 <col:13, col:14> 'unsigned int' lvalue prefix '*' cannot overflow     |   | |     `-ImplicitCastExpr 0x157941500 <col:14> 'unsigned int *' <LValueToRValue>     |   | |       `-DeclRefExpr 0x1579414e0 <col:14> 'unsigned int *' lvalue ParmVar 0x157940b58 'cnt' 'unsigned int *'     |   | `-CompoundStmt 0x157941850 <col:19, line:19:3>     |   |   |-CallExpr 0x157941768 <line:16:4, line:17:11> 'int'     |   |   | |-ImplicitCastExpr 0x157941750 <line:16:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x157941690 <col:4> 'int ()' Function 0x1579415d8 'BUGPRINT' 'int ()'     |   |   | `-ImplicitCastExpr 0x157941790 <col:13, line:17:6> 'char *' <ArrayToPointerDecay>     |   |   |   `-StringLiteral 0x1579416f0 <line:16:13, line:17:6> 'char[7]' lvalue \"STRSTR\"     |   |   `-ReturnStmt 0x157941840 <line:18:4, col:12>     |   |     `-UnaryOperator 0x157941828 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |       `-ImplicitCastExpr 0x157941810 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |   |         `-RecoveryExpr 0x1579417f0 <col:12> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x1579447a8 <line:20:3, line:28:3>     |   | |-BinaryOperator 0x1579442e0 <line:20:7, line:21:43> 'int' contains-errors '&&'     |   | | |-BinaryOperator 0x1579441d0 <line:20:7, col:44> 'int' contains-errors '!='     |   | | | |-RecoveryExpr 0x157944188 <col:7, col:34> '<dependent type>' contains-errors lvalue     |   | | | | `-ParenExpr 0x157944168 <col:7, col:31> 'struct ebt_entries *'     |   | | | |   `-CStyleCastExpr 0x157944140 <col:8, col:30> 'struct ebt_entries *' <BitCast>     |   | | | |     `-ImplicitCastExpr 0x157944128 <col:30> 'const struct ebt_entry *' <LValueToRValue> part_of_explicit_cast     |   | | | |       `-DeclRefExpr 0x157941930 <col:30> 'const struct ebt_entry *' lvalue ParmVar 0x157928648 'e' 'const struct ebt_entry *'     |   | | | `-RecoveryExpr 0x1579441b0 <col:44> '<dependent type>' contains-errors lvalue     |   | | `-BinaryOperator 0x1579442c0 <line:21:6, col:43> 'int' contains-errors '!='     |   | |   |-RecoveryExpr 0x157944278 <col:6, col:33> '<dependent type>' contains-errors lvalue     |   | |   | `-ParenExpr 0x157944258 <col:6, col:30> 'struct ebt_entries *'     |   | |   |   `-CStyleCastExpr 0x157944230 <col:7, col:29> 'struct ebt_entries *' <BitCast>     |   | |   |     `-ImplicitCastExpr 0x157944218 <col:29> 'const struct ebt_entry *' <LValueToRValue> part_of_explicit_cast     |   | |   |       `-DeclRefExpr 0x157943ee8 <col:29> 'const struct ebt_entry *' lvalue ParmVar 0x157928648 'e' 'const struct ebt_entry *'     |   | |   `-RecoveryExpr 0x1579442a0 <col:43> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x157944790 <col:55, line:28:3>     |   |   `-IfStmt 0x157944770 <line:23:4, line:27:4>     |   |     |-BinaryOperator 0x1579445b0 <line:23:8, line:24:44> 'int' contains-errors '||'     |   |     | |-BinaryOperator 0x1579444a0 <line:23:8, col:13> 'int' contains-errors '!='     |   |     | | |-DeclRefExpr 0x157944300 <col:8> 'int' lvalue Var 0x157940f10 'i' 'int'     |   |     | | `-RecoveryExpr 0x157944480 <col:13> '<dependent type>' contains-errors lvalue     |   |     | `-BinaryOperator 0x157944590 <line:24:7, col:44> 'int' contains-errors '!='     |   |     |   |-RecoveryExpr 0x157944548 <col:7, col:34> '<dependent type>' contains-errors lvalue     |   |     |   | `-ParenExpr 0x157944528 <col:7, col:31> 'struct ebt_entries *'     |   |     |   |   `-CStyleCastExpr 0x157944500 <col:8, col:30> 'struct ebt_entries *' <BitCast>     |   |     |   |     `-ImplicitCastExpr 0x1579444e8 <col:30> 'const struct ebt_entry *' <LValueToRValue> part_of_explicit_cast     |   |     |   |       `-DeclRefExpr 0x157944358 <col:30> 'const struct ebt_entry *' lvalue ParmVar 0x157928648 'e' 'const struct ebt_entry *'     |   |     |   `-RecoveryExpr 0x157944570 <col:44> '<dependent type>' contains-errors lvalue     |   |     `-CompoundStmt 0x157944750 <col:56, line:27:4>     |   |       |-CallExpr 0x157944668 <line:25:5, col:19> 'int'     |   |       | |-ImplicitCastExpr 0x157944650 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   |       | | `-DeclRefExpr 0x1579445d0 <col:5> 'int ()' Function 0x1579415d8 'BUGPRINT' 'int ()'     |   |       | `-ImplicitCastExpr 0x157944690 <col:14> 'char *' <ArrayToPointerDecay>     |   |       |   `-StringLiteral 0x157944630 <col:14> 'char[4]' lvalue \"STR\"     |   |       `-ReturnStmt 0x157944740 <line:26:5, col:13>     |   |         `-UnaryOperator 0x157944728 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |           `-ImplicitCastExpr 0x157944710 <col:13> '<dependent type>' contains-errors <LValueToRValue>     |   |             `-RecoveryExpr 0x1579446f0 <col:13> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x1579448e8 <line:29:3, line:30:14>     |   | |-BinaryOperator 0x157944840 <line:29:7, col:12> 'int' contains-errors '=='     |   | | |-DeclRefExpr 0x1579447c8 <col:7> 'int' lvalue Var 0x157940f10 'i' 'int'     |   | | `-RecoveryExpr 0x157944820 <col:12> '<dependent type>' contains-errors lvalue     |   | `-UnaryOperator 0x1579448d0 <line:30:4, col:14> 'unsigned int' postfix '++'     |   |   `-ParenExpr 0x1579448b0 <col:4, col:13> 'unsigned int' lvalue     |   |     `-UnaryOperator 0x157944898 <col:5, col:6> 'unsigned int' lvalue prefix '*' cannot overflow     |   |       `-ImplicitCastExpr 0x157944880 <col:6> 'unsigned int *' <LValueToRValue>     |   |         `-DeclRefExpr 0x157944860 <col:6> 'unsigned int *' lvalue ParmVar 0x157940c58 'udc_cnt' 'unsigned int *'     |   |-IfStmt 0x157944cf0 <line:31:3, line:34:3>     |   | |-BinaryOperator 0x157944b70 <line:31:7, col:53> 'int' contains-errors '!='     |   | | |-RecoveryExpr 0x157944af8 <col:7, col:34> '<dependent type>' contains-errors lvalue     |   | | | `-ParenExpr 0x157944ad8 <col:7, col:31> 'struct ebt_entries *'     |   | | |   `-CStyleCastExpr 0x157944ab0 <col:8, col:30> 'struct ebt_entries *' <BitCast>     |   | | |     `-ImplicitCastExpr 0x157944a98 <col:30> 'const struct ebt_entry *' <LValueToRValue> part_of_explicit_cast     |   | | |       `-DeclRefExpr 0x1579449b0 <col:30> 'const struct ebt_entry *' lvalue ParmVar 0x157928648 'e' 'const struct ebt_entry *'     |   | | `-UnaryOperator 0x157944b58 <col:52, col:53> 'unsigned int' lvalue prefix '*' cannot overflow     |   | |   `-ImplicitCastExpr 0x157944b40 <col:53> 'unsigned int *' <LValueToRValue>     |   | |     `-DeclRefExpr 0x157944b20 <col:53> 'unsigned int *' lvalue ParmVar 0x157940bd8 'totalcnt' 'unsigned int *'     |   | `-CompoundStmt 0x157944cd0 <col:63, line:34:3>     |   |   |-CallExpr 0x157944be8 <line:32:4, col:18> 'int'     |   |   | |-ImplicitCastExpr 0x157944bd0 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x157944b90 <col:4> 'int ()' Function 0x1579415d8 'BUGPRINT' 'int ()'     |   |   | `-ImplicitCastExpr 0x157944c10 <col:13> 'char *' <ArrayToPointerDecay>     |   |   |   `-StringLiteral 0x157944bb0 <col:13> 'char[4]' lvalue \"STR\"     |   |   `-ReturnStmt 0x157944cc0 <line:33:4, col:12>     |   |     `-UnaryOperator 0x157944ca8 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |       `-ImplicitCastExpr 0x157944c90 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |   |         `-RecoveryExpr 0x157944c70 <col:12> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x160008970 <line:35:3, col:35> 'unsigned int' contains-errors '='     |   | |-UnaryOperator 0x157944d48 <col:3, col:4> 'unsigned int' lvalue prefix '*' cannot overflow     |   | | `-ImplicitCastExpr 0x157944d30 <col:4> 'unsigned int *' <LValueToRValue>     |   | |   `-DeclRefExpr 0x157944d10 <col:4> 'unsigned int *' lvalue ParmVar 0x157940ad8 'n' 'unsigned int *'     |   | `-RecoveryExpr 0x160008948 <col:8, col:35> '<dependent type>' contains-errors lvalue     |   |   `-ParenExpr 0x160008928 <col:8, col:32> 'struct ebt_entries *'     |   |     `-CStyleCastExpr 0x160008900 <col:9, col:31> 'struct ebt_entries *' <BitCast>     |   |       `-ImplicitCastExpr 0x1600088e8 <col:31> 'const struct ebt_entry *' <LValueToRValue> part_of_explicit_cast     |   |         `-DeclRefExpr 0x160008800 <col:31> 'const struct ebt_entry *' lvalue ParmVar 0x157928648 'e' 'const struct ebt_entry *'     |   |-BinaryOperator 0x160008a18 <line:36:3, col:10> 'unsigned int' '='     |   | |-UnaryOperator 0x1600089c8 <col:3, col:4> 'unsigned int' lvalue prefix '*' cannot overflow     |   | | `-ImplicitCastExpr 0x1600089b0 <col:4> 'unsigned int *' <LValueToRValue>     |   | |   `-DeclRefExpr 0x160008990 <col:4> 'unsigned int *' lvalue ParmVar 0x157940b58 'cnt' 'unsigned int *'     |   | `-ImplicitCastExpr 0x160008a00 <col:10> 'unsigned int' <IntegralCast>     |   |   `-IntegerLiteral 0x1600089e0 <col:10> 'int' 0     |   `-ReturnStmt 0x160008a58 <line:37:3, col:10>     |     `-IntegerLiteral 0x160008a38 <col:10> 'int' 0     |-IfStmt 0x160008e10 <line:40:2, line:45:2>     | |-RecoveryExpr 0x160008d40 <line:40:6, line:42:28> '_Bool' contains-errors     | `-CompoundStmt 0x160008df8 <col:41, line:45:2>     |   `-CallExpr 0x160008db8 <line:43:3, col:17> 'int'     |     |-ImplicitCastExpr 0x160008da0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x160008d60 <col:3> 'int ()' Function 0x1579415d8 'BUGPRINT' 'int ()'     |     `-ImplicitCastExpr 0x160008de0 <col:12> 'char *' <ArrayToPointerDecay>     |       `-StringLiteral 0x160008d80 <col:12> 'char[4]' lvalue \"STR\"     |-IfStmt 0x1600090d8 <line:47:2, line:50:2>     | |-RecoveryExpr 0x160009008 <line:47:6, col:72> '_Bool' contains-errors     | `-CompoundStmt 0x1600090c0 <col:75, line:50:2>     |   `-CallExpr 0x160009080 <line:48:3, col:17> 'int'     |     |-ImplicitCastExpr 0x160009068 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x160009028 <col:3> 'int ()' Function 0x1579415d8 'BUGPRINT' 'int ()'     |     `-ImplicitCastExpr 0x1600090a8 <col:12> 'char *' <ArrayToPointerDecay>     |       `-StringLiteral 0x160009048 <col:12> 'char[4]' lvalue \"STR\"     |-UnaryOperator 0x160009168 <line:51:2, col:8> 'unsigned int' postfix '++'     | `-ParenExpr 0x160009148 <col:2, col:7> 'unsigned int' lvalue     |   `-UnaryOperator 0x160009130 <col:3, col:4> 'unsigned int' lvalue prefix '*' cannot overflow     |     `-ImplicitCastExpr 0x160009118 <col:4> 'unsigned int *' <LValueToRValue>     |       `-DeclRefExpr 0x1600090f8 <col:4> 'unsigned int *' lvalue ParmVar 0x157940b58 'cnt' 'unsigned int *'     |-UnaryOperator 0x1600091f0 <line:52:2, col:13> 'unsigned int' postfix '++'     | `-ParenExpr 0x1600091d0 <col:2, col:12> 'unsigned int' lvalue     |   `-UnaryOperator 0x1600091b8 <col:3, col:4> 'unsigned int' lvalue prefix '*' cannot overflow     |     `-ImplicitCastExpr 0x1600091a0 <col:4> 'unsigned int *' <LValueToRValue>     |       `-DeclRefExpr 0x160009180 <col:4> 'unsigned int *' lvalue ParmVar 0x157940bd8 'totalcnt' 'unsigned int *'     `-ReturnStmt 0x160009228 <line:53:2, col:9>       `-IntegerLiteral 0x160009208 <col:9> 'int' 0 ","19212":"`-FunctionDecl 0x13b80e350  line:1:13 fpm_parent_resources_use 'void (struct fpm_child_s *)' static   |-ParmVarDecl 0x13b80e248 <col:38, col:58> col:58 used child 'struct fpm_child_s *'   `-CompoundStmt 0x13b8269b0 <line:2:1, line:5:1>     |-CallExpr 0x13b8267f8 <line:3:2, col:34> 'int'     | |-ImplicitCastExpr 0x13b8267e0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13b826770 <col:2> 'int ()' Function 0x13b8266b8 'fpm_stdio_parent_use_pipes' 'int ()'     | `-ImplicitCastExpr 0x13b826820 <col:29> 'struct fpm_child_s *' <LValueToRValue>     |   `-DeclRefExpr 0x13b826790 <col:29> 'struct fpm_child_s *' lvalue ParmVar 0x13b80e248 'child' 'struct fpm_child_s *'     `-CallExpr 0x13b826970 <line:4:2, col:22> 'int'       |-ImplicitCastExpr 0x13b826958 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x13b826918 <col:2> 'int ()' Function 0x13b826860 'fpm_child_link' 'int ()'       `-ImplicitCastExpr 0x13b826998 <col:17> 'struct fpm_child_s *' <LValueToRValue>         `-DeclRefExpr 0x13b826938 <col:17> 'struct fpm_child_s *' lvalue ParmVar 0x13b80e248 'child' 'struct fpm_child_s *' ","19768":"`-FunctionDecl 0x14c82ac88  line:1:12 invalid vmci_transport_dgram_dequeue 'int (struct kiocb *, struct vsock_sock *, struct msghdr *, int, int)' static   |-ParmVarDecl 0x14c80e248 <col:41, col:55> col:55 kiocb 'struct kiocb *'   |-ParmVarDecl 0x14c82a828 <line:2:6, col:25> col:25 used vsk 'struct vsock_sock *'   |-ParmVarDecl 0x14c82a9f8 <line:3:6, col:21> col:21 used msg 'struct msghdr *'   |-ParmVarDecl 0x14c82aa90 <col:26, col:33> col:33 invalid len 'int'   |-ParmVarDecl 0x14c82ab10 <line:4:6, col:10> col:10 used flags 'int'   `-CompoundStmt 0x14c82fd20 <line:5:1, line:63:1>     |-DeclStmt 0x14c82add8 <line:6:2, col:9>     | `-VarDecl 0x14c82ad70 <col:2, col:6> col:6 used err 'int'     |-DeclStmt 0x14c82ae70 <line:7:2, col:13>     | `-VarDecl 0x14c82ae08 <col:2, col:6> col:6 used noblock 'int'     |-DeclStmt 0x14c82b078 <line:8:2, col:26>     | |-RecordDecl 0x14c82ae88 <col:2, col:9> col:9 struct vmci_datagram     | `-VarDecl 0x14c82aff8 <col:2, col:24> col:24 used dg 'struct vmci_datagram *'     |-UnaryExprOrTypeTraitExpr 0x14c82b0e8 <line:9:2, col:9> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x14c82b0c8 <col:9> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x14c82b2f8 <line:10:2, col:21>     | |-RecordDecl 0x14c82b108 <col:2, col:9> col:9 struct sk_buff     | `-VarDecl 0x14c82b278 <col:2, col:18> col:18 used skb 'struct sk_buff *'     |-BinaryOperator 0x14c82b3e8 <line:12:2, col:20> 'int' contains-errors '='     | |-DeclRefExpr 0x14c82b310 <col:2> 'int' lvalue Var 0x14c82ae08 'noblock' 'int'     | `-BinaryOperator 0x14c82b3c8 <col:12, col:20> '<dependent type>' contains-errors '&'     |   |-DeclRefExpr 0x14c82b330 <col:12> 'int' lvalue ParmVar 0x14c82ab10 'flags' 'int'     |   `-RecoveryExpr 0x14c82b3a8 <col:20> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14c82b620 <line:14:2, line:15:11>     | |-BinaryOperator 0x14c82b558 <line:14:6, col:33> 'int' contains-errors '||'     | | |-BinaryOperator 0x14c82b4f8 <col:6, col:14> '<dependent type>' contains-errors '&'     | | | |-DeclRefExpr 0x14c82b408 <col:6> 'int' lvalue ParmVar 0x14c82ab10 'flags' 'int'     | | | `-RecoveryExpr 0x14c82b4d8 <col:14> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x14c82b538 <col:25, col:33> '<dependent type>' contains-errors '&'     | |   |-DeclRefExpr 0x14c82b460 <col:25> 'int' lvalue ParmVar 0x14c82ab10 'flags' 'int'     | |   `-RecoveryExpr 0x14c82b518 <col:33> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14c82b610 <line:15:3, col:11>     |   `-UnaryOperator 0x14c82b5f8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14c82b5e0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14c82b5c0 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14c82b680 <line:18:2, col:8> 'int' '='     | |-DeclRefExpr 0x14c82b640 <col:2> 'int' lvalue Var 0x14c82ad70 'err' 'int'     | `-IntegerLiteral 0x14c82b660 <col:8> 'int' 0     |-BinaryOperator 0x14c82d838 <line:19:2, col:56> 'struct sk_buff *' contains-errors '='     | |-DeclRefExpr 0x14c82b6a0 <col:2> 'struct sk_buff *' lvalue Var 0x14c82b278 'skb' 'struct sk_buff *'     | `-CallExpr 0x14c82d7f8 <col:8, col:56> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14c82d6b8 <col:8> 'int ()' Function 0x14c82d600 'skb_recv_datagram' 'int ()'     |   |-UnaryOperator 0x14c82d738 <col:26, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x14c82d710 <col:27, col:32> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14c82d6d8 <col:27> 'struct vsock_sock *' lvalue ParmVar 0x14c82a828 'vsk' 'struct vsock_sock *'     |   |-DeclRefExpr 0x14c82d750 <col:36> 'int' lvalue ParmVar 0x14c82ab10 'flags' 'int'     |   |-DeclRefExpr 0x14c82d770 <col:43> 'int' lvalue Var 0x14c82ae08 'noblock' 'int'     |   `-UnaryOperator 0x14c82d7e0 <col:52, col:53> 'int *' prefix '&' cannot overflow     |     `-DeclRefExpr 0x14c82d790 <col:53> 'int' lvalue Var 0x14c82ad70 'err' 'int'     |-IfStmt 0x14c82d8d8 <line:20:2, line:21:10>     | |-ImplicitCastExpr 0x14c82d878 <line:20:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x14c82d858 <col:6> 'int' lvalue Var 0x14c82ad70 'err' 'int'     | `-ReturnStmt 0x14c82d8c8 <line:21:3, col:10>     |   `-ImplicitCastExpr 0x14c82d8b0 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x14c82d890 <col:10> 'int' lvalue Var 0x14c82ad70 'err' 'int'     |-IfStmt 0x14c82d9f0 <line:23:2, line:24:11>     | |-UnaryOperator 0x14c82d930 <line:23:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14c82d918 <col:7> 'struct sk_buff *' <LValueToRValue>     | |   `-DeclRefExpr 0x14c82d8f8 <col:7> 'struct sk_buff *' lvalue Var 0x14c82b278 'skb' 'struct sk_buff *'     | `-ReturnStmt 0x14c82d9e0 <line:24:3, col:11>     |   `-UnaryOperator 0x14c82d9c8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14c82d9b0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14c82d990 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14c82db40 <line:26:2, col:36> 'struct vmci_datagram *' contains-errors '='     | |-DeclRefExpr 0x14c82da10 <col:2> 'struct vmci_datagram *' lvalue Var 0x14c82aff8 'dg' 'struct vmci_datagram *'     | `-CStyleCastExpr 0x14c82db18 <col:7, col:36> 'struct vmci_datagram *' contains-errors <Dependent>     |   `-RecoveryExpr 0x14c82da68 <col:31, col:36> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14c82da30 <col:31> 'struct sk_buff *' lvalue Var 0x14c82b278 'skb' 'struct sk_buff *'     |-IfStmt 0x14c82dc18 <line:27:2, line:29:8>     | |-UnaryOperator 0x14c82db98 <line:27:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14c82db80 <col:7> 'struct vmci_datagram *' <LValueToRValue>     | |   `-DeclRefExpr 0x14c82db60 <col:7> 'struct vmci_datagram *' lvalue Var 0x14c82aff8 'dg' 'struct vmci_datagram *'     | `-GotoStmt 0x14c82dc00 <line:29:3, col:8> 'out' 0x14c82dbb0     |-IfStmt 0x14c82ded0 <line:33:2, line:36:2>     | |-RecoveryExpr 0x14c82dd80 <line:33:6, col:42> '_Bool' contains-errors     | `-CompoundStmt 0x14c82deb0 <col:45, line:36:2>     |   |-BinaryOperator 0x14c82de78 <line:34:3, col:10> 'int' contains-errors '='     |   | |-DeclRefExpr 0x14c82dda0 <col:3> 'int' lvalue Var 0x14c82ad70 'err' 'int'     |   | `-UnaryOperator 0x14c82de60 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x14c82de48 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x14c82de28 <col:10> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x14c82de98 <line:35:3, col:8> 'out' 0x14c82dbb0     |-IfStmt 0x14c82e018 <line:38:2, line:41:2>     | |-BinaryOperator 0x14c82df68 <line:38:6, col:20> 'int' contains-errors '>'     | | |-RecoveryExpr 0x14c82df48 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14c82df08 <col:20> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14c82e008 <col:25, line:41:2>     |-IfStmt 0x14c82e298 <line:46:2, line:47:8>     | |-ImplicitCastExpr 0x14c82e268 <line:46:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x14c82e248 <col:6> 'int' lvalue Var 0x14c82ad70 'err' 'int'     | `-GotoStmt 0x14c82e280 <line:47:3, col:8> 'out' 0x14c82dbb0     |-BinaryOperator 0x14c82e338 <line:49:2, col:21> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14c82e2f0 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14c82e2b8 <col:2> 'struct msghdr *' lvalue ParmVar 0x14c82a9f8 'msg' 'struct msghdr *'     | `-IntegerLiteral 0x14c82e318 <col:21> 'int' 0     |-IfStmt 0x14c82fab0 <line:50:2, line:57:2>     | |-RecoveryExpr 0x14c82e390 <line:50:6, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14c82e358 <col:6> 'struct msghdr *' lvalue ParmVar 0x14c82a9f8 'msg' 'struct msghdr *'     | `-CompoundStmt 0x14c82fa88 <col:21, line:57:2>     |   |-DeclStmt 0x14c82e5a8 <line:51:3, col:30>     |   | |-RecordDecl 0x14c82e3b8 <col:3, col:10> col:10 struct sockaddr_vm     |   | `-VarDecl 0x14c82e528 <col:3, col:23> col:23 used vm_addr 'struct sockaddr_vm *'     |   |-BinaryOperator 0x14c82f6f0 <line:54:3, col:40> 'struct sockaddr_vm *' contains-errors '='     |   | |-DeclRefExpr 0x14c82e5c0 <col:3> 'struct sockaddr_vm *' lvalue Var 0x14c82e528 'vm_addr' 'struct sockaddr_vm *'     |   | `-CStyleCastExpr 0x14c82f6c8 <col:13, col:40> 'struct sockaddr_vm *' contains-errors <Dependent>     |   |   `-RecoveryExpr 0x14c82f618 <col:35, col:40> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x14c82e5e0 <col:35> 'struct msghdr *' lvalue ParmVar 0x14c82a9f8 'msg' 'struct msghdr *'     |   `-CallExpr 0x14c82f980 <line:55:3, col:61> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14c82f7f0 <col:3> 'int ()' Function 0x14c82f738 'vsock_addr_init' 'int ()'     |     |-DeclRefExpr 0x14c82f810 <col:19> 'struct sockaddr_vm *' lvalue Var 0x14c82e528 'vm_addr' 'struct sockaddr_vm *'     |     |-CXXDependentScopeMemberExpr 0x14c82f890 <col:28, col:36> '<dependent type>' contains-errors lvalue .context     |     | `-RecoveryExpr 0x14c82f868 <col:28, col:32> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x14c82f830 <col:28> 'struct vmci_datagram *' lvalue Var 0x14c82aff8 'dg' 'struct vmci_datagram *'     |     `-CXXDependentScopeMemberExpr 0x14c82f938 <col:45, col:53> '<dependent type>' contains-errors lvalue .resource     |       `-RecoveryExpr 0x14c82f910 <col:45, col:49> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x14c82f8d8 <col:45> 'struct vmci_datagram *' lvalue Var 0x14c82aff8 'dg' 'struct vmci_datagram *'     |-LabelStmt 0x14c82fcb8 <line:60:1, line:61:33> 'out'     | `-CallExpr 0x14c82fc88 <col:2, col:33> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14c82fbd0 <col:2> 'int ()' Function 0x14c82fb18 'skb_free_datagram' 'int ()'     |   |-UnaryOperator 0x14c82fc50 <col:20, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x14c82fc28 <col:21, col:26> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14c82fbf0 <col:21> 'struct vsock_sock *' lvalue ParmVar 0x14c82a828 'vsk' 'struct vsock_sock *'     |   `-DeclRefExpr 0x14c82fc68 <col:30> 'struct sk_buff *' lvalue Var 0x14c82b278 'skb' 'struct sk_buff *'     `-ReturnStmt 0x14c82fd10 <line:62:2, col:9>       `-ImplicitCastExpr 0x14c82fcf8 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x14c82fcd8 <col:9> 'int' lvalue Var 0x14c82ad70 'err' 'int' ","19436":"`-FunctionDecl 0x134128318  line:1:5 invalid SSL_read 'int (int *, void *, int)'   |-ParmVarDecl 0x134128128 <col:14, col:19> col:19 invalid ssl 'int *'   |-ParmVarDecl 0x1341281a8 <col:24, col:30> col:30 buffer 'void *'   |-ParmVarDecl 0x134128228 <col:38, col:42> col:42 sz 'int'   `-CompoundStmt 0x1341286a8 <line:2:1, line:5:1>     `-ReturnStmt 0x134128698 <line:4:5, col:34>       `-CallExpr 0x134128668 <col:12, col:34> '<dependent type>' contains-errors         |-DeclRefExpr 0x134128530 <col:12> 'int ()' Function 0x134128478 'receiveData' 'int ()'         |-UnaryOperator 0x134128630 <col:24, col:25> '<dependent type>' contains-errors prefix '*' cannot overflow         | `-ImplicitCastExpr 0x134128618 <col:25> '<dependent type>' contains-errors <LValueToRValue>         |   `-RecoveryExpr 0x134128550 <col:25> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x134128648 <col:30> '<dependent type>' contains-errors lvalue ","19467":"`-FunctionDecl 0x14f0f5988  line:1:1 alarm_init_on_stack 'int (struct alarm *, enum alarmtimer_type, enum alarmtimer_restart (*)(struct alarm *, int))'   |-ParmVarDecl 0x14f0d8e48 <col:21, col:35> col:35 used alarm 'struct alarm *'   |-ParmVarDecl 0x14f0f5400 <col:42, col:63> col:63 invalid type 'enum alarmtimer_type'   |-ParmVarDecl 0x14f0f5840 <line:2:7, col:66> col:33 used function 'enum alarmtimer_restart (*)(struct alarm *, int)'   `-CompoundStmt 0x14f0f5e40 <line:3:1, line:7:1>     `-CallExpr 0x14f0f5e08 <line:6:2, col:36> '<dependent type>' contains-errors       |-DeclRefExpr 0x14f0f5d88 <col:2> 'int ()' Function 0x14f0f5cd0 '__alarm_init' 'int ()'       |-DeclRefExpr 0x14f0f5da8 <col:15> 'struct alarm *' lvalue ParmVar 0x14f0d8e48 'alarm' 'struct alarm *'       |-RecoveryExpr 0x14f0f5dc8 <col:22> '<dependent type>' contains-errors lvalue       `-DeclRefExpr 0x14f0f5de8 <col:28> 'enum alarmtimer_restart (*)(struct alarm *, int)' lvalue ParmVar 0x14f0f5840 'function' 'enum alarmtimer_restart (*)(struct alarm *, int)' ","19760":"`-FunctionDecl 0x128829788  col:13 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x128829888 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x1288298f0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x128829958 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x128829830 <<invalid sloc>> Implicit 882 ","19561":"`-FunctionDecl 0x13a1281f8  line:1:1 invalid _gdm_user_show_short_display_name 'int (int *)'   |-ParmVarDecl 0x13a128128 <col:36, col:45> col:45 referenced invalid user 'int *'   `-CompoundStmt 0x13a80afe8 <line:2:1, line:10:1>     |-CallExpr 0x13a128568 <line:3:9, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13a128400 <col:9> 'int ()' Function 0x13a128348 'g_return_if_fail' 'int ()'     | `-CallExpr 0x13a128540 <col:27, col:44> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13a128500 <col:27> 'int ()' Function 0x13a128448 'GDM_IS_USER' 'int ()'     |   `-RecoveryExpr 0x13a128520 <col:40> '<dependent type>' contains-errors lvalue     `-IfStmt 0x13a80afc8 <line:5:9, line:9:9>       |-CXXDependentScopeMemberExpr 0x13a1285b0 <line:5:13, col:19> '<dependent type>' contains-errors lvalue ->display_name       | `-RecoveryExpr 0x13a128590 <col:13> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x13a80afa0 <col:33, line:9:9>         |-CallExpr 0x13a128760 <line:6:17, col:43> '<dependent type>' contains-errors         | |-DeclRefExpr 0x13a1286d8 <col:17> 'int ()' Function 0x13a128620 'g_free' 'int ()'         | `-CXXDependentScopeMemberExpr 0x13a128718 <col:25, col:31> '<dependent type>' contains-errors lvalue ->display_name         |   `-RecoveryExpr 0x13a1286f8 <col:25> '<dependent type>' contains-errors lvalue         |-BinaryOperator 0x13a80aca0 <line:7:17, col:38> '<dependent type>' contains-errors '='         | |-CXXDependentScopeMemberExpr 0x13a80ac00 <col:17, col:23> '<dependent type>' contains-errors lvalue ->display_name         | | `-RecoveryExpr 0x13a1287a8 <col:17> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x13a128788 <col:17> 'int *' lvalue ParmVar 0x13a128128 'user' 'int *'         | `-RecoveryExpr 0x13a80ac80 <col:38> '<dependent type>' contains-errors lvalue         `-CallExpr 0x13a80af70 <line:8:17, col:56> '<dependent type>' contains-errors           |-DeclRefExpr 0x13a80ada0 <col:17> 'int ()' Function 0x13a80ace8 'g_object_notify' 'int ()'           |-CallExpr 0x13a80aee0 <col:34, col:48> '<dependent type>' contains-errors           | |-DeclRefExpr 0x13a80aea0 <col:34> 'int ()' Function 0x13a80ade8 'G_OBJECT' 'int ()'           | `-RecoveryExpr 0x13a80aec0 <col:44> '<dependent type>' contains-errors lvalue           `-StringLiteral 0x13a80af50 <col:51> 'char[4]' lvalue \"STR\" ","19984":"`-FunctionDecl 0x123941288  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x123941388 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x1239413f0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x123941458 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x123941330 <<invalid sloc>> Implicit 882 ","19577":"`-FunctionDecl 0x11f940a78  line:1:12 selinux_socket_accept 'int (struct socket *, struct socket *)' static   |-ParmVarDecl 0x11f928648 <col:34, col:49> col:49 used sock 'struct socket *'   |-ParmVarDecl 0x11f928738 <col:55, col:70> col:70 used newsock 'struct socket *'   `-CompoundStmt 0x11f941800 <line:2:1, line:19:1>     |-DeclStmt 0x11f940bf8 <line:3:2, col:9>     | `-VarDecl 0x11f940b90 <col:2, col:6> col:6 used err 'int'     |-DeclStmt 0x11f940df8 <line:4:2, col:36>     | |-RecordDecl 0x11f940c10 <col:2, col:9> col:9 struct inode_security_struct     | `-VarDecl 0x11f940d78 <col:2, col:32> col:32 used isec 'struct inode_security_struct *'     |-DeclStmt 0x11f940f00 <line:5:2, col:39>     | `-VarDecl 0x11f940e98 <col:2, col:32> col:32 used newisec 'struct inode_security_struct *'     |-BinaryOperator 0x11f9411a0 <line:7:2, col:53> 'int' contains-errors '='     | |-DeclRefExpr 0x11f940f18 <col:2> 'int' lvalue Var 0x11f940b90 'err' 'int'     | `-CallExpr 0x11f941168 <col:8, col:53> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x11f941060 <col:8> 'int ()' Function 0x11f940fa8 'socket_has_perm' 'int ()'     |   |-RecoveryExpr 0x11f941128 <col:24> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x11f941098 <col:33> 'struct socket *' lvalue ParmVar 0x11f928648 'sock' 'struct socket *'     |   `-RecoveryExpr 0x11f941148 <col:39> '<dependent type>' contains-errors lvalue     |-IfStmt 0x11f941240 <line:8:2, line:9:10>     | |-ImplicitCastExpr 0x11f9411e0 <line:8:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x11f9411c0 <col:6> 'int' lvalue Var 0x11f940b90 'err' 'int'     | `-ReturnStmt 0x11f941230 <line:9:3, col:10>     |   `-ImplicitCastExpr 0x11f941218 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x11f9411f8 <col:10> 'int' lvalue Var 0x11f940b90 'err' 'int'     |-BinaryOperator 0x11f941450 <line:11:2, col:33> 'struct inode_security_struct *' contains-errors '='     | |-DeclRefExpr 0x11f941260 <col:2> 'struct inode_security_struct *' lvalue Var 0x11f940e98 'newisec' 'struct inode_security_struct *'     | `-RecoveryExpr 0x11f941428 <col:12, col:33> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x11f9413e8 <col:12, col:30> 'int'     |     |-ImplicitCastExpr 0x11f9413d0 <col:12> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x11f941360 <col:12> 'int ()' Function 0x11f9412a8 'SOCK_INODE' 'int ()'     |     `-ImplicitCastExpr 0x11f941410 <col:23> 'struct socket *' <LValueToRValue>     |       `-DeclRefExpr 0x11f941380 <col:23> 'struct socket *' lvalue ParmVar 0x11f928738 'newsock' 'struct socket *'     |-BinaryOperator 0x11f941550 <line:13:2, col:27> 'struct inode_security_struct *' contains-errors '='     | |-DeclRefExpr 0x11f941470 <col:2> 'struct inode_security_struct *' lvalue Var 0x11f940d78 'isec' 'struct inode_security_struct *'     | `-RecoveryExpr 0x11f941528 <col:9, col:27> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x11f9414e8 <col:9, col:24> 'int'     |     |-ImplicitCastExpr 0x11f9414d0 <col:9> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x11f941490 <col:9> 'int ()' Function 0x11f9412a8 'SOCK_INODE' 'int ()'     |     `-ImplicitCastExpr 0x11f941510 <col:20> 'struct socket *' <LValueToRValue>     |       `-DeclRefExpr 0x11f9414b0 <col:20> 'struct socket *' lvalue ParmVar 0x11f928648 'sock' 'struct socket *'     |-BinaryOperator 0x11f941630 <line:14:2, col:26> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x11f9415a8 <col:2, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x11f941570 <col:2> 'struct inode_security_struct *' lvalue Var 0x11f940e98 'newisec' 'struct inode_security_struct *'     | `-RecoveryExpr 0x11f941608 <col:20, col:26> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x11f9415d0 <col:20> 'struct inode_security_struct *' lvalue Var 0x11f940d78 'isec' 'struct inode_security_struct *'     |-BinaryOperator 0x11f941710 <line:15:2, col:23> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x11f941688 <col:2, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x11f941650 <col:2> 'struct inode_security_struct *' lvalue Var 0x11f940e98 'newisec' 'struct inode_security_struct *'     | `-RecoveryExpr 0x11f9416e8 <col:17, col:23> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x11f9416b0 <col:17> 'struct inode_security_struct *' lvalue Var 0x11f940d78 'isec' 'struct inode_security_struct *'     |-BinaryOperator 0x11f9417b0 <line:16:2, col:25> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x11f941768 <col:2, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x11f941730 <col:2> 'struct inode_security_struct *' lvalue Var 0x11f940e98 'newisec' 'struct inode_security_struct *'     | `-IntegerLiteral 0x11f941790 <col:25> 'int' 1     `-ReturnStmt 0x11f9417f0 <line:18:2, col:9>       `-IntegerLiteral 0x11f9417d0 <col:9> 'int' 0 ","19607":"`-FunctionDecl 0x15c8275a0  col:3 implicit used bzero 'void (void *, unsigned long)' extern   |-ParmVarDecl 0x15c8276a0 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x15c827708 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x15c827648 <<invalid sloc>> Implicit 954 ","19302":"`-FunctionDecl 0x12f00dd90  line:1:13 pl022_register_types 'void (void)' static   `-CompoundStmt 0x12f00e088 <line:2:1, line:4:1>     `-CallExpr 0x12f00e060 <line:3:5, col:37> '<dependent type>' contains-errors       |-DeclRefExpr 0x12f00dfb0 <col:5> 'int ()' Function 0x12f00def8 'type_register_static' 'int ()'       `-UnaryOperator 0x12f00e048 <col:26, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x12f00e028 <col:27> '<dependent type>' contains-errors lvalue ","19882":"`-FunctionDecl 0x124918fc8  line:1:1 invalid _gnutls_x509_pk_to_oid 'int (int)'   |-ParmVarDecl 0x124918ef0 <col:25, col:47> col:47 invalid algorithm 'int'   `-CompoundStmt 0x127008ee0 <line:2:1, line:7:1>     |-DeclStmt 0x124919130 <line:3:3, col:25>     | `-VarDecl 0x124919090 <col:3, col:21> col:15 used ret 'const char *' cinit     |   `-RecoveryExpr 0x124919110 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x124919410 <line:5:3, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1249192a0 <col:3> 'int ()' Function 0x1249191e8 'GNUTLS_PK_ALG_LOOP' 'int ()'     | `-BinaryOperator 0x1249193f0 <col:23, col:32> 'const char *' contains-errors '='     |   |-DeclRefExpr 0x1249192c0 <col:23> 'const char *' contains-errors lvalue Var 0x124919090 'ret' 'const char *'     |   `-CXXDependentScopeMemberExpr 0x1249193a8 <col:29, col:32> '<dependent type>' contains-errors lvalue ->oid     |     `-RecoveryExpr 0x124919388 <col:29> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x127008ed0 <line:6:3, col:10>       `-ImplicitCastExpr 0x124919470 <col:10> 'int' contains-errors <PointerToIntegral>         `-ImplicitCastExpr 0x124919458 <col:10> 'const char *' contains-errors <LValueToRValue>           `-DeclRefExpr 0x124919438 <col:10> 'const char *' contains-errors lvalue Var 0x124919090 'ret' 'const char *' ","19353":"`-FunctionDecl 0x150128288  line:1:12 invalid asf_read_marker 'int (int *, int)' static   |-ParmVarDecl 0x150128128 <col:28, col:45> col:45 invalid s 'int *'   |-ParmVarDecl 0x1501281a8 <col:48, col:56> col:56 invalid size 'int'   `-CompoundStmt 0x150147750 <line:2:1, line:35:1>     |-DeclStmt 0x150128668 <line:5:5, col:32>     | |-VarDecl 0x150128458 <col:5, col:9> col:9 used i 'int'     | |-VarDecl 0x1501284d8 <col:5, col:12> col:12 used count 'int'     | |-VarDecl 0x150128558 <col:5, col:19> col:19 used name_len 'int'     | `-VarDecl 0x1501285d8 <col:5, col:29> col:29 used ret 'int'     |-DeclStmt 0x150128788 <line:6:5, col:20>     | `-VarDecl 0x150128720 <col:5, col:19> col:10 used name 'char[1024]'     |-CallExpr 0x150141f90 <line:8:5, col:17> '<dependent type>' contains-errors     | |-DeclRefExpr 0x150141f10 <col:5> 'int ()' Function 0x150141e58 'avio_rl64' 'int ()'     | `-RecoveryExpr 0x150141f70 <col:15> '<dependent type>' contains-errors lvalue     |-CallExpr 0x150142038 <line:9:5, col:17> '<dependent type>' contains-errors     | |-DeclRefExpr 0x150141fb8 <col:5> 'int ()' Function 0x150141e58 'avio_rl64' 'int ()'     | `-RecoveryExpr 0x150142018 <col:15> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x150142228 <line:10:5, col:25> 'int' contains-errors '='     | |-DeclRefExpr 0x150142060 <col:5> 'int' lvalue Var 0x1501284d8 'count' 'int'     | `-CallExpr 0x150142200 <col:13, col:25> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x150142160 <col:13> 'int ()' Function 0x1501420a8 'avio_rl32' 'int ()'     |   `-RecoveryExpr 0x1501421e0 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1501423a8 <line:11:5, col:17> '<dependent type>' contains-errors     | |-DeclRefExpr 0x150142328 <col:5> 'int ()' Function 0x150142270 'avio_rl16' 'int ()'     | `-RecoveryExpr 0x150142388 <col:15> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1501424b8 <line:12:5, col:28> 'int' contains-errors '='     | |-DeclRefExpr 0x1501423d0 <col:5> 'int' lvalue Var 0x150128558 'name_len' 'int'     | `-CallExpr 0x150142490 <col:16, col:28> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1501423f0 <col:16> 'int ()' Function 0x150142270 'avio_rl16' 'int ()'     |   `-RecoveryExpr 0x150142470 <col:26> '<dependent type>' contains-errors lvalue     |-ForStmt 0x150142788 <line:13:5, line:14:19>     | |-BinaryOperator 0x150142518 <line:13:10, col:14> 'int' '='     | | |-DeclRefExpr 0x1501424d8 <col:10> 'int' lvalue Var 0x150128458 'i' 'int'     | | `-IntegerLiteral 0x1501424f8 <col:14> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x1501425a8 <col:17, col:21> 'int' '<'     | | |-ImplicitCastExpr 0x150142578 <col:17> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x150142538 <col:17> 'int' lvalue Var 0x150128458 'i' 'int'     | | `-ImplicitCastExpr 0x150142590 <col:21> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x150142558 <col:21> 'int' lvalue Var 0x150128558 'name_len' 'int'     | |-UnaryOperator 0x1501425e8 <col:31, col:32> 'int' postfix '++'     | | `-DeclRefExpr 0x1501425c8 <col:31> 'int' lvalue Var 0x150128458 'i' 'int'     | `-CallExpr 0x150142760 <line:14:9, col:19> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1501426e0 <col:9> 'int ()' Function 0x150142628 'avio_r8' 'int ()'     |   `-RecoveryExpr 0x150142740 <col:17> '<dependent type>' contains-errors lvalue     |-ForStmt 0x1501476e8 <line:16:5, line:32:5>     | |-BinaryOperator 0x150142800 <line:16:10, col:14> 'int' '='     | | |-DeclRefExpr 0x1501427c0 <col:10> 'int' lvalue Var 0x150128458 'i' 'int'     | | `-IntegerLiteral 0x1501427e0 <col:14> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x150142890 <col:17, col:21> 'int' '<'     | | |-ImplicitCastExpr 0x150142860 <col:17> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x150142820 <col:17> 'int' lvalue Var 0x150128458 'i' 'int'     | | `-ImplicitCastExpr 0x150142878 <col:21> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x150142840 <col:21> 'int' lvalue Var 0x1501284d8 'count' 'int'     | |-UnaryOperator 0x1501428d0 <col:28, col:29> 'int' postfix '++'     | | `-DeclRefExpr 0x1501428b0 <col:28> 'int' lvalue Var 0x150128458 'i' 'int'     | `-CompoundStmt 0x1501476c8 <col:33, line:32:5>     |   |-DeclStmt 0x150142968 <line:18:9, col:21>     |   | `-VarDecl 0x150142900 <col:9, col:13> col:13 used name_len 'int'     |   `-CallExpr 0x150142a00 <line:20:9, col:21> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x150142980 <col:9> 'int ()' Function 0x150141e58 'avio_rl64' 'int ()'     |     `-RecoveryExpr 0x1501429e0 <col:19> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x150147740 <line:34:5, col:12>       `-IntegerLiteral 0x150147720 <col:12> 'int' 0 ","19219":"`-FunctionDecl 0x12e128138  line:1:6 invalid ValidateIDEA 'int ()'   `-CompoundStmt 0x12e1283f8 <line:2:1, line:7:1>     `-RecoveryExpr 0x12e128210 <line:3:2> '<dependent type>' contains-errors lvalue ","19696":"`-FunctionDecl 0x12980df58  line:1:1 invalid TPML_DIGEST_Unmarshal 'int (int *, int **, int *)'   |-ParmVarDecl 0x12980dd28 <col:23, col:36> col:36 invalid target 'int *'   |-ParmVarDecl 0x12980dde0 <col:44, col:51> col:51 invalid buffer 'int **'   |-ParmVarDecl 0x12980de60 <col:59, col:66> col:66 invalid size 'int *'   `-CompoundStmt 0x1298283e8 <line:2:1, line:24:1>     |-IfStmt 0x12980e348 <line:6:5, line:8:5>     | |-BinaryOperator 0x12980e0a8 <line:6:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x12980e068 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12980e088 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12980e338 <col:31, line:8:5>     |-IfStmt 0x129827f28 <line:9:5, line:14:5>     | |-BinaryOperator 0x129827e00 <line:9:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x12980e3b8 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12980e3d8 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x129827f10 <col:31, line:14:5>     |   `-IfStmt 0x129827ef0 <line:11:2, line:13:2>     |     |-BinaryOperator 0x129827ea8 <line:11:6, col:22> 'int' contains-errors '<'     |     | |-CXXDependentScopeMemberExpr 0x129827e40 <col:6, col:14> '<dependent type>' contains-errors lvalue ->count     |     | | `-RecoveryExpr 0x129827e20 <col:6> '<dependent type>' contains-errors lvalue     |     | `-IntegerLiteral 0x129827e88 <col:22> 'int' 2     |     `-CompoundStmt 0x129827ee0 <col:25, line:13:2>     `-IfStmt 0x129828100 <line:15:5, line:19:5>       |-BinaryOperator 0x129827fd8 <line:15:9, col:15> 'int' contains-errors '=='       | |-RecoveryExpr 0x129827f98 <col:9> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x129827fb8 <col:15> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x1298280e8 <col:31, line:19:5>         `-IfStmt 0x1298280c8 <line:16:2, line:18:2>           |-BinaryOperator 0x129828080 <line:16:6, col:22> 'int' contains-errors '>'           | |-CXXDependentScopeMemberExpr 0x129828018 <col:6, col:14> '<dependent type>' contains-errors lvalue ->count           | | `-RecoveryExpr 0x129827ff8 <col:6> '<dependent type>' contains-errors lvalue           | `-IntegerLiteral 0x129828060 <col:22> 'int' 8           `-CompoundStmt 0x1298280b8 <col:25, line:18:2> ","20047":"`-FunctionDecl 0x144128a88  line:1:12 invalid tls_finish_handshake 'int (int *, int)'   |-ParmVarDecl 0x144128928 <col:33, col:38> col:38 referenced invalid s 'int *'   |-ParmVarDecl 0x1441289a8 <col:41, col:52> col:52 invalid wst 'int'   `-CompoundStmt 0x144818f10 <line:2:1, line:64:1>     |-DeclStmt 0x144128e88 <line:3:5, col:58>     | `-VarDecl 0x144128de8 <col:5, col:54> col:12 used cb 'void (*)(const int *, int, int)' cinit     |   `-RecoveryExpr 0x144128e68 <col:54> '<dependent type>' contains-errors lvalue     |-IfStmt 0x144817570 <line:6:5, line:11:5>     | |-BinaryOperator 0x1448172d8 <line:6:9, col:60> 'int' contains-errors '&&'     | | |-CallExpr 0x144817040 <col:9, col:22> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x144817000 <col:9> 'int ()' Function 0x144128f48 'SSL_IS_DTLS' 'int ()'     | | | `-RecoveryExpr 0x144817020 <col:21> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x1448172b0 <col:27, col:60> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x144817148 <col:27> 'int ()' Function 0x144817090 'BIO_dgram_is_sctp' 'int ()'     | |   `-CallExpr 0x144817288 <col:45, col:59> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x144817248 <col:45> 'int ()' Function 0x144817190 'SSL_get_wbio' 'int ()'     | |     `-RecoveryExpr 0x144817268 <col:58> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x144817558 <col:63, line:11:5>     |   `-IfStmt 0x144817538 <line:9:9, line:10:20>     |     |-BinaryOperator 0x1448174d0 <line:9:13, col:20> 'int' contains-errors '!='     |     | |-RecoveryExpr 0x144817490 <col:13> '<dependent type>' contains-errors lvalue     |     | `-RecoveryExpr 0x1448174b0 <col:20> '<dependent type>' contains-errors lvalue     |     `-ReturnStmt 0x144817528 <line:10:13, col:20>     |       `-RecoveryExpr 0x144817508 <col:20> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1448176b0 <line:15:5, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x144817670 <col:5> 'int ()' Function 0x1448175b8 'ssl3_cleanup_key_block' 'int ()'     | `-RecoveryExpr 0x144817690 <col:28> '<dependent type>' contains-errors lvalue     |-IfStmt 0x144817a10 <line:17:5, line:21:5>     | |-UnaryOperator 0x144817740 <line:17:9, col:23> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x144817718 <col:10, col:23> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x1448176d8 <col:10> 'int ()' Function 0x144128f48 'SSL_IS_DTLS' 'int ()'     | |   `-RecoveryExpr 0x1448176f8 <col:22> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1448179f0 <col:26, line:21:5>     |   |-CallExpr 0x1448178c0 <line:19:9, col:33> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x144817838 <col:9> 'int ()' Function 0x144817780 'BUF_MEM_free' 'int ()'     |   | `-CXXDependentScopeMemberExpr 0x144817878 <col:22, col:25> '<dependent type>' contains-errors lvalue ->init_buf     |   |   `-RecoveryExpr 0x144817858 <col:22> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x1448179d0 <line:20:9, col:23> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x144817930 <col:9, col:12> '<dependent type>' contains-errors lvalue ->init_buf     |     | `-RecoveryExpr 0x144817908 <col:9> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x1448178e8 <col:9> 'int *' lvalue ParmVar 0x144128928 's' 'int *'     |     `-RecoveryExpr 0x1448179b0 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x144817b50 <line:23:5, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x144817b10 <col:5> 'int ()' Function 0x144817a58 'ssl_free_wbio_buffer' 'int ()'     | `-RecoveryExpr 0x144817b30 <col:26> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x144817c28 <line:25:5, col:19> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x144817bc0 <col:5, col:8> '<dependent type>' contains-errors lvalue ->init_num     | | `-RecoveryExpr 0x144817b98 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x144817b78 <col:5> 'int *' lvalue ParmVar 0x144128928 's' 'int *'     | `-IntegerLiteral 0x144817c08 <col:19> 'int' 0     `-IfStmt 0x144818ef0 <line:27:5, line:61:5>       |-BinaryOperator 0x144817d88 <line:27:9, col:41> 'int' contains-errors '||'       | |-UnaryOperator 0x144817cc8 <col:9, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow       | | `-ImplicitCastExpr 0x144817cb0 <col:10, col:13> '<dependent type>' contains-errors <LValueToRValue>       | |   `-CXXDependentScopeMemberExpr 0x144817c68 <col:10, col:13> '<dependent type>' contains-errors lvalue ->server       | |     `-RecoveryExpr 0x144817c48 <col:10> '<dependent type>' contains-errors lvalue       | `-BinaryOperator 0x144817d68 <col:23, col:41> 'int' contains-errors '=='       |   |-CXXDependentScopeMemberExpr 0x144817d00 <col:23, col:26> '<dependent type>' contains-errors lvalue ->renegotiate       |   | `-RecoveryExpr 0x144817ce0 <col:23> '<dependent type>' contains-errors lvalue       |   `-IntegerLiteral 0x144817d48 <col:41> 'int' 2       `-CompoundStmt 0x144818eb8 <col:44, line:61:5>         |-BinaryOperator 0x144817e58 <line:29:9, col:26> '<dependent type>' contains-errors '='         | |-CXXDependentScopeMemberExpr 0x144817df0 <col:9, col:12> '<dependent type>' contains-errors lvalue ->renegotiate         | | `-RecoveryExpr 0x144817dc8 <col:9> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x144817da8 <col:9> 'int *' lvalue ParmVar 0x144128928 's' 'int *'         | `-IntegerLiteral 0x144817e38 <col:26> 'int' 0         |-BinaryOperator 0x144817f28 <line:30:9, col:26> '<dependent type>' contains-errors '='         | |-CXXDependentScopeMemberExpr 0x144817ec0 <col:9, col:12> '<dependent type>' contains-errors lvalue ->new_session         | | `-RecoveryExpr 0x144817e98 <col:9> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x144817e78 <col:9> 'int *' lvalue ParmVar 0x144128928 's' 'int *'         | `-IntegerLiteral 0x144817f08 <col:26> 'int' 0         |-IfStmt 0x144132960 <line:32:9, line:44:9> has_else         | |-CXXDependentScopeMemberExpr 0x144817f68 <line:32:13, col:16> '<dependent type>' contains-errors lvalue ->server         | | `-RecoveryExpr 0x144817f48 <col:13> '<dependent type>' contains-errors lvalue         | |-CompoundStmt 0x144132558 <col:24, line:37:9>         | | |-CallExpr 0x144132360 <line:33:13, col:54> '<dependent type>' contains-errors         | | | |-DeclRefExpr 0x1441322b8 <col:13> 'int ()' Function 0x144132200 'ssl_update_cache' 'int ()'         | | | |-RecoveryExpr 0x1441322d8 <col:30> '<dependent type>' contains-errors lvalue         | | | `-RecoveryExpr 0x144132340 <col:33> '<dependent type>' contains-errors lvalue         | | `-UnaryOperator 0x1441324b0 <line:35:13, col:43> '<dependent type>' contains-errors postfix '++' cannot overflow         | |   `-CXXDependentScopeMemberExpr 0x144132468 <col:13, col:27> '<dependent type>' contains-errors lvalue .sess_accept_good         | |     `-CXXDependentScopeMemberExpr 0x144132420 <col:13, col:21> '<dependent type>' contains-errors lvalue ->stats         | |       `-CXXDependentScopeMemberExpr 0x1441323d8 <col:13, col:16> '<dependent type>' contains-errors lvalue ->ctx         | |         `-RecoveryExpr 0x1441323b0 <col:13> '<dependent type>' contains-errors lvalue         | |           `-DeclRefExpr 0x144132390 <col:13> 'int *' lvalue ParmVar 0x144128928 's' 'int *'         | `-CompoundStmt 0x144132940 <line:37:16, line:44:9>         |   |-IfStmt 0x144132758 <line:39:13, line:40:39>         |   | |-CXXDependentScopeMemberExpr 0x1441325d8 <line:39:17, col:20> '<dependent type>' contains-errors lvalue ->hit         |   | | `-RecoveryExpr 0x1441325b8 <col:17> '<dependent type>' contains-errors lvalue         |   | `-UnaryOperator 0x144132740 <line:40:17, col:39> '<dependent type>' contains-errors postfix '++' cannot overflow         |   |   `-CXXDependentScopeMemberExpr 0x1441326f8 <col:17, col:31> '<dependent type>' contains-errors lvalue .sess_hit         |   |     `-CXXDependentScopeMemberExpr 0x1441326b0 <col:17, col:25> '<dependent type>' contains-errors lvalue ->stats         |   |       `-CXXDependentScopeMemberExpr 0x144132668 <col:17, col:20> '<dependent type>' contains-errors lvalue ->ctx         |   |         `-RecoveryExpr 0x144132640 <col:17> '<dependent type>' contains-errors lvalue         |   |           `-DeclRefExpr 0x144132620 <col:17> 'int *' lvalue ParmVar 0x144128928 's' 'int *'         |   `-UnaryOperator 0x144132928 <line:43:13, col:44> '<dependent type>' contains-errors postfix '++' cannot overflow         |     `-CXXDependentScopeMemberExpr 0x1441328e0 <col:13, col:27> '<dependent type>' contains-errors lvalue .sess_connect_good         |       `-CXXDependentScopeMemberExpr 0x144132898 <col:13, col:21> '<dependent type>' contains-errors lvalue ->stats         |         `-CXXDependentScopeMemberExpr 0x144132850 <col:13, col:16> '<dependent type>' contains-errors lvalue ->ctx         |           `-RecoveryExpr 0x144132828 <col:13> '<dependent type>' contains-errors lvalue         |             `-DeclRefExpr 0x144132808 <col:13> 'int *' lvalue ParmVar 0x144128928 's' 'int *'         |-IfStmt 0x144132ca0 <line:46:9, line:49:26> has_else         | |-RecoveryExpr 0x1441329f8 <line:46:13, col:33> '_Bool' contains-errors         | |-BinaryOperator 0x144132aa0 <line:47:13, col:21> 'void (*)(const int *, int, int)' contains-errors '='         | | |-DeclRefExpr 0x144132a18 <col:13> 'void (*)(const int *, int, int)' contains-errors lvalue Var 0x144128de8 'cb' 'void (*)(const int *, int, int)'         | | `-CXXDependentScopeMemberExpr 0x144132a58 <col:18, col:21> '<dependent type>' contains-errors lvalue ->info_callback         | |   `-RecoveryExpr 0x144132a38 <col:18> '<dependent type>' contains-errors lvalue         | `-IfStmt 0x144132c80 <line:48:14, line:49:26>         |   |-RecoveryExpr 0x144132b70 <line:48:18, col:43> '_Bool' contains-errors         |   `-BinaryOperator 0x144132c60 <line:49:13, col:26> 'void (*)(const int *, int, int)' contains-errors '='         |     |-DeclRefExpr 0x144132b90 <col:13> 'void (*)(const int *, int, int)' contains-errors lvalue Var 0x144128de8 'cb' 'void (*)(const int *, int, int)'         |     `-CXXDependentScopeMemberExpr 0x144132c18 <col:18, col:26> '<dependent type>' contains-errors lvalue ->info_callback         |       `-CXXDependentScopeMemberExpr 0x144132bd0 <col:18, col:21> '<dependent type>' contains-errors lvalue ->ctx         |         `-RecoveryExpr 0x144132bb0 <col:18> '<dependent type>' contains-errors lvalue         `-IfStmt 0x144818e98 <line:54:9, line:60:9>           |-CallExpr 0x144132db0 <line:54:13, col:26> '<dependent type>' contains-errors           | |-DeclRefExpr 0x144132d70 <col:13> 'int ()' Function 0x144128f48 'SSL_IS_DTLS' 'int ()'           | `-RecoveryExpr 0x144132d90 <col:25> '<dependent type>' contains-errors lvalue           `-CompoundStmt 0x144818e68 <col:29, line:60:9>             |-BinaryOperator 0x144132ed0 <line:56:13, col:41> '<dependent type>' contains-errors '='             | |-CXXDependentScopeMemberExpr 0x144132e68 <col:13, col:20> '<dependent type>' contains-errors lvalue ->handshake_read_seq             | | `-CXXDependentScopeMemberExpr 0x144132e20 <col:13, col:16> '<dependent type>' contains-errors lvalue ->d1             | |   `-RecoveryExpr 0x144132df8 <col:13> '<dependent type>' contains-errors lvalue             | |     `-DeclRefExpr 0x144132dd8 <col:13> 'int *' lvalue ParmVar 0x144128928 's' 'int *'             | `-IntegerLiteral 0x144132eb0 <col:41> 'int' 0             |-BinaryOperator 0x144132fe8 <line:57:13, col:42> '<dependent type>' contains-errors '='             | |-CXXDependentScopeMemberExpr 0x144132f80 <col:13, col:20> '<dependent type>' contains-errors lvalue ->handshake_write_seq             | | `-CXXDependentScopeMemberExpr 0x144132f38 <col:13, col:16> '<dependent type>' contains-errors lvalue ->d1             | |   `-RecoveryExpr 0x144132f10 <col:13> '<dependent type>' contains-errors lvalue             | |     `-DeclRefExpr 0x144132ef0 <col:13> 'int *' lvalue ParmVar 0x144128928 's' 'int *'             | `-IntegerLiteral 0x144132fc8 <col:42> 'int' 0             |-BinaryOperator 0x144133100 <line:58:13, col:47> '<dependent type>' contains-errors '='             | |-CXXDependentScopeMemberExpr 0x144133098 <col:13, col:20> '<dependent type>' contains-errors lvalue ->next_handshake_write_seq             | | `-CXXDependentScopeMemberExpr 0x144133050 <col:13, col:16> '<dependent type>' contains-errors lvalue ->d1             | |   `-RecoveryExpr 0x144133028 <col:13> '<dependent type>' contains-errors lvalue             | |     `-DeclRefExpr 0x144133008 <col:13> 'int *' lvalue ParmVar 0x144128928 's' 'int *'             | `-IntegerLiteral 0x1441330e0 <col:47> 'int' 0             `-CallExpr 0x144818e40 <line:59:13, col:42> '<dependent type>' contains-errors               |-DeclRefExpr 0x144818e00 <col:13> 'int ()' Function 0x144133148 'dtls1_clear_received_buffer' 'int ()'               `-RecoveryExpr 0x144818e20 <col:41> '<dependent type>' contains-errors lvalue ","19555":"`-FunctionDecl 0x1368091c8  col:62 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x1368092c8 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x136809270 <<invalid sloc>> Implicit 873 ","19393":"`-FunctionDecl 0x13d9421d0  col:6 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x13d9422d0 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x13d942338 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x13d942278 <<invalid sloc>> Implicit 887 ","20162":"`-FunctionDecl 0x1471228e8  col:2 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x1471229e8 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x147122990 <<invalid sloc>> Implicit 873 ","19149":"`-FunctionDecl 0x14b928280  line:1:6 invalid cJSON_DeleteItemFromArray 'void (int *, int)'   |-ParmVarDecl 0x14b928128 <col:33, col:40> col:40 invalid array 'int *'   |-ParmVarDecl 0x14b9281a8 <col:47, col:51> col:51 used which 'int'   `-CompoundStmt 0x14b928648 <line:2:1, line:4:1>     `-CallExpr 0x14b928620 <line:3:2, col:58> '<dependent type>' contains-errors       |-DeclRefExpr 0x14b928490 <col:2> 'int ()' Function 0x14b9283d8 'cJSON_Delete' 'int ()'       `-CallExpr 0x14b9285f0 <col:16, col:56> '<dependent type>' contains-errors         |-DeclRefExpr 0x14b928590 <col:16> 'int ()' Function 0x14b9284d8 'cJSON_DetachItemFromArray' 'int ()'         |-RecoveryExpr 0x14b9285b0 <col:43> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x14b9285d0 <col:50> 'int' lvalue ParmVar 0x14b9281a8 'which' 'int' ","19589":"`-FunctionDecl 0x11f928758  line:1:1 ath10k_usb_alloc_urb_from_pipe 'int (struct ath10k_usb_pipe *)'   |-ParmVarDecl 0x11f928648 <col:32, col:56> col:56 used pipe 'struct ath10k_usb_pipe *'   `-CompoundStmt 0x11f9417b0 <line:2:1, line:16:1>     |-DeclStmt 0x11f940c88 <line:3:2, col:47>     | |-RecordDecl 0x11f940a50 <col:2, col:9> col:9 struct ath10k_urb_context     | `-VarDecl 0x11f940bb8 <col:2, col:43> col:29 used urb_context 'struct ath10k_urb_context *' cinit     |   `-RecoveryExpr 0x11f940c50 <col:43> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x11f940d20 <line:4:2, col:21>     | `-VarDecl 0x11f940cb8 <col:2, col:16> col:16 used flags 'unsigned long'     |-CallExpr 0x11f940f50 <line:6:2, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11f940e50 <col:2> 'int ()' Function 0x11f940d98 'spin_lock_irqsave' 'int ()'     | |-UnaryOperator 0x11f940f18 <col:20, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x11f940ed0 <col:21, col:35> '<dependent type>' contains-errors lvalue ->cs_lock     | |   `-RecoveryExpr 0x11f940ea8 <col:21, col:27> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x11f940e70 <col:21> 'struct ath10k_usb_pipe *' lvalue ParmVar 0x11f928648 'pipe' 'struct ath10k_usb_pipe *'     | `-DeclRefExpr 0x11f940f30 <col:44> 'unsigned long' lvalue Var 0x11f940cb8 'flags' 'unsigned long'     |-IfStmt 0x11f941520 <line:7:2, line:12:2>     | |-UnaryOperator 0x11f941120 <line:7:6, col:38> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x11f9410f8 <col:7, col:38> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x11f941060 <col:7> 'int ()' Function 0x11f940fa8 'list_empty' 'int ()'     | |   `-UnaryOperator 0x11f9410e0 <col:18, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-RecoveryExpr 0x11f9410b8 <col:19, col:25> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x11f941080 <col:19> 'struct ath10k_usb_pipe *' lvalue ParmVar 0x11f928648 'pipe' 'struct ath10k_usb_pipe *'     | `-CompoundStmt 0x11f941500 <col:41, line:12:2>     |   |-CallExpr 0x11f941460 <line:10:3, col:30> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x11f9413c8 <col:3> 'int ()' Function 0x11f941310 'list_del' 'int ()'     |   | `-UnaryOperator 0x11f941448 <col:12, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x11f941420 <col:13, col:26> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x11f9413e8 <col:13> 'struct ath10k_urb_context *' contains-errors lvalue Var 0x11f940bb8 'urb_context' 'struct ath10k_urb_context *'     |   `-UnaryOperator 0x11f9414e8 <line:11:3, col:16> '<dependent type>' contains-errors postfix '--' cannot overflow     |     `-RecoveryExpr 0x11f9414c0 <col:3, col:9> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x11f941488 <col:3> 'struct ath10k_usb_pipe *' lvalue ParmVar 0x11f928648 'pipe' 'struct ath10k_usb_pipe *'     |-CallExpr 0x11f941720 <line:13:2, col:54> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11f941620 <col:2> 'int ()' Function 0x11f941568 'spin_unlock_irqrestore' 'int ()'     | |-UnaryOperator 0x11f9416e8 <col:25, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x11f9416a0 <col:26, col:40> '<dependent type>' contains-errors lvalue ->cs_lock     | |   `-RecoveryExpr 0x11f941678 <col:26, col:32> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x11f941640 <col:26> 'struct ath10k_usb_pipe *' lvalue ParmVar 0x11f928648 'pipe' 'struct ath10k_usb_pipe *'     | `-DeclRefExpr 0x11f941700 <col:49> 'unsigned long' lvalue Var 0x11f940cb8 'flags' 'unsigned long'     `-ReturnStmt 0x11f9417a0 <line:15:2, col:9>       `-ImplicitCastExpr 0x11f941788 <col:9> 'int' contains-errors <PointerToIntegral>         `-ImplicitCastExpr 0x11f941770 <col:9> 'struct ath10k_urb_context *' contains-errors <LValueToRValue>           `-DeclRefExpr 0x11f941750 <col:9> 'struct ath10k_urb_context *' contains-errors lvalue Var 0x11f940bb8 'urb_context' 'struct ath10k_urb_context *' ","19652":"`-FunctionDecl 0x13f80e350  line:1:13 dns_reset_resolution 'void (struct dns_resolution *)' static   |-ParmVarDecl 0x13f80e248 <col:34, col:57> col:57 used resolution 'struct dns_resolution *'   `-CompoundStmt 0x13f826e28 <line:2:1, line:15:1>     |-BinaryOperator 0x13f826718 <line:4:2, col:32> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13f826680 <col:2, col:14> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13f826648 <col:2> 'struct dns_resolution *' lvalue ParmVar 0x13f80e248 'resolution' 'struct dns_resolution *'     | `-RecoveryExpr 0x13f8266f8 <col:32> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13f8267b8 <line:5:2, col:32> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13f826770 <col:2, col:14> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13f826738 <col:2> 'struct dns_resolution *' lvalue ParmVar 0x13f80e248 'resolution' 'struct dns_resolution *'     | `-IntegerLiteral 0x13f826798 <col:32> 'int' 0     |-BinaryOperator 0x13f826890 <line:6:2, col:32> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13f826810 <col:2, col:14> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13f8267d8 <col:2> 'struct dns_resolution *' lvalue ParmVar 0x13f80e248 'resolution' 'struct dns_resolution *'     | `-RecoveryExpr 0x13f826870 <col:32> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13f826930 <line:7:2, col:32> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13f8268e8 <col:2, col:14> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13f8268b0 <col:2> 'struct dns_resolution *' lvalue ParmVar 0x13f80e248 'resolution' 'struct dns_resolution *'     | `-IntegerLiteral 0x13f826910 <col:32> 'int' 0     |-BinaryOperator 0x13f8269d0 <line:8:2, col:32> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13f826988 <col:2, col:14> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13f826950 <col:2> 'struct dns_resolution *' lvalue ParmVar 0x13f80e248 'resolution' 'struct dns_resolution *'     | `-IntegerLiteral 0x13f8269b0 <col:32> 'int' 0     |-BinaryOperator 0x13f826ab0 <line:9:2, col:44> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13f826a28 <col:2, col:14> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13f8269f0 <col:2> 'struct dns_resolution *' lvalue ParmVar 0x13f80e248 'resolution' 'struct dns_resolution *'     | `-RecoveryExpr 0x13f826a88 <col:32, col:44> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x13f826a50 <col:32> 'struct dns_resolution *' lvalue ParmVar 0x13f80e248 'resolution' 'struct dns_resolution *'     |-CallExpr 0x13f826c78 <line:12:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13f826be0 <col:2> 'int ()' Function 0x13f826b28 'eb32_delete' 'int ()'     | `-UnaryOperator 0x13f826c60 <col:14, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13f826c38 <col:15, col:27> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13f826c00 <col:15> 'struct dns_resolution *' lvalue ParmVar 0x13f80e248 'resolution' 'struct dns_resolution *'     |-BinaryOperator 0x13f826d20 <line:13:2, col:25> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13f826cd8 <col:2, col:14> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13f826ca0 <col:2> 'struct dns_resolution *' lvalue ParmVar 0x13f80e248 'resolution' 'struct dns_resolution *'     | `-IntegerLiteral 0x13f826d00 <col:25> 'int' 0     `-BinaryOperator 0x13f826e08 <line:14:2, col:26> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x13f826da0 <col:2, col:18> '<dependent type>' contains-errors lvalue .key       | `-RecoveryExpr 0x13f826d78 <col:2, col:14> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x13f826d40 <col:2> 'struct dns_resolution *' lvalue ParmVar 0x13f80e248 'resolution' 'struct dns_resolution *'       `-IntegerLiteral 0x13f826de8 <col:26> 'int' 0 ","19554":"`-FunctionDecl 0x11d928238  line:1:1 SPL_METHOD 'int (int, int)'   |-ParmVarDecl 0x11d928158 <col:12> col:12 GlobIterator 'int'   |-ParmVarDecl 0x11d9280d8 <col:26> col:26 count 'int'   `-CompoundStmt 0x11e009448 <line:2:1, line:15:1>     |-IfStmt 0x11d928628 <line:5:2, line:7:2>     | |-BinaryOperator 0x11d9285e0 <line:5:6, col:38> 'int' contains-errors '=='     | | |-CallExpr 0x11d9285a0 <col:6, col:33> 'int'     | | | `-ImplicitCastExpr 0x11d928588 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | |   `-DeclRefExpr 0x11d928490 <col:6> 'int ()' Function 0x11d9283d8 'zend_parse_parameters_none' 'int ()'     | | `-RecoveryExpr 0x11d9285c0 <col:38> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x11d928610 <col:47, line:7:2>     |   `-ReturnStmt 0x11d928600 <line:6:3>     `-IfStmt 0x11e009418 <line:9:2, line:14:2> has_else       |-CallExpr 0x11e008dd8 <line:9:6, col:60> '<dependent type>' contains-errors       | |-DeclRefExpr 0x11d928728 <col:6> 'int ()' Function 0x11d928670 'php_stream_is' 'int ()'       | |-CXXDependentScopeMemberExpr 0x11e008d58 <col:20, col:34> '<dependent type>' contains-errors lvalue .dirp       | | `-CXXDependentScopeMemberExpr 0x11e008d10 <col:20, col:30> '<dependent type>' contains-errors lvalue .dir       | |   `-CXXDependentScopeMemberExpr 0x11e008cc8 <col:20, col:28> '<dependent type>' contains-errors lvalue ->u       | |     `-RecoveryExpr 0x11e008ca8 <col:20> '<dependent type>' contains-errors lvalue       | `-UnaryOperator 0x11e008dc0 <col:40, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow       |   `-RecoveryExpr 0x11e008da0 <col:41> '<dependent type>' contains-errors lvalue       |-CompoundStmt 0x11e0092d8 <col:63, line:11:2>       | `-CallExpr 0x11e0092b0 <line:10:3, col:66> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x11e008ee8 <col:3> 'int ()' Function 0x11e008e30 'RETURN_LONG' 'int ()'       |   `-CallExpr 0x11e009280 <col:15, col:65> '<dependent type>' contains-errors       |     |-DeclRefExpr 0x11e008fe8 <col:15> 'int ()' Function 0x11e008f30 'php_glob_stream_get_count' 'int ()'       |     |-CXXDependentScopeMemberExpr 0x11e009218 <col:41, col:55> '<dependent type>' contains-errors lvalue .dirp       |     | `-CXXDependentScopeMemberExpr 0x11e0091d0 <col:41, col:51> '<dependent type>' contains-errors lvalue .dir       |     |   `-CXXDependentScopeMemberExpr 0x11e009188 <col:41, col:49> '<dependent type>' contains-errors lvalue ->u       |     |     `-RecoveryExpr 0x11e009168 <col:41> '<dependent type>' contains-errors lvalue       |     `-RecoveryExpr 0x11e009260 <col:61> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x11e009408 <line:11:9, line:14:2> ","19986":"`-FunctionDecl 0x12e128288  line:1:12 invalid cirrus_bitblt_solidfill 'int (int *, int)' static   |-ParmVarDecl 0x12e128128 <col:36, col:52> col:52 invalid s 'int *'   |-ParmVarDecl 0x12e1281a8 <col:55, col:59> col:59 used blt_rop 'int'   `-CompoundStmt 0x12e141cc8 <line:2:1, line:14:1>     |-CallExpr 0x12e141800 <line:6:5, line:8:55> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12e128590 <line:6:5> 'int ()' Function 0x12e1284d8 'rop_func' 'int ()'     | |-RecoveryExpr 0x12e1285b0 <col:14> '<dependent type>' contains-errors lvalue     | |-BinaryOperator 0x12e1286a0 <col:17, col:34> '<dependent type>' contains-errors '+'     | | |-CXXDependentScopeMemberExpr 0x12e1285f0 <col:17, col:20> '<dependent type>' contains-errors lvalue ->vram_ptr     | | | `-RecoveryExpr 0x12e1285d0 <col:17> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x12e128658 <col:31, col:34> '<dependent type>' contains-errors lvalue ->cirrus_blt_dstaddr     | |   `-RecoveryExpr 0x12e128638 <col:31> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x12e1286e0 <line:7:14, col:17> '<dependent type>' contains-errors lvalue ->cirrus_blt_dstpitch     | | `-RecoveryExpr 0x12e1286c0 <col:14> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x12e128748 <line:8:14, col:17> '<dependent type>' contains-errors lvalue ->cirrus_blt_width     | | `-RecoveryExpr 0x12e128728 <col:14> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x12e1287b0 <col:35, col:38> '<dependent type>' contains-errors lvalue ->cirrus_blt_height     |   `-RecoveryExpr 0x12e128790 <col:35> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12e141b08 <line:9:5, line:11:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12e141928 <line:9:5> 'int ()' Function 0x12e141870 'cirrus_invalidate_region' 'int ()'     | |-RecoveryExpr 0x12e141948 <col:30> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x12e141988 <col:33, col:36> '<dependent type>' contains-errors lvalue ->cirrus_blt_dstaddr     | | `-RecoveryExpr 0x12e141968 <col:33> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x12e1419f0 <line:10:9, col:12> '<dependent type>' contains-errors lvalue ->cirrus_blt_dstpitch     | | `-RecoveryExpr 0x12e1419d0 <col:9> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x12e141a58 <col:33, col:36> '<dependent type>' contains-errors lvalue ->cirrus_blt_width     | | `-RecoveryExpr 0x12e141a38 <col:33> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x12e141ac0 <line:11:9, col:12> '<dependent type>' contains-errors lvalue ->cirrus_blt_height     |   `-RecoveryExpr 0x12e141aa0 <col:9> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12e141c70 <line:12:5, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12e141c30 <col:5> 'int ()' Function 0x12e141b78 'cirrus_bitblt_reset' 'int ()'     | `-RecoveryExpr 0x12e141c50 <col:25> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12e141cb8 <line:13:5, col:12>       `-IntegerLiteral 0x12e141c98 <col:12> 'int' 1 ","19545":"`-FunctionDecl 0x15782a948  line:1:5 isolate_lru_page 'int (struct page *, struct list_head *)'   |-ParmVarDecl 0x15780e248 <col:22, col:35> col:35 used page 'struct page *'   |-ParmVarDecl 0x15782a828 <col:41, col:59> col:59 used pagelist 'struct list_head *'   `-CompoundStmt 0x15782dc30 <line:2:1, line:21:1>     |-DeclStmt 0x15782ab78 <line:3:2, col:18>     | `-VarDecl 0x15782aa60 <col:2, col:13> col:6 used ret 'int' cinit     |   `-UnaryOperator 0x15782ab60 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x15782ab48 <col:13> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x15782ab28 <col:13> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15782dbc8 <line:5:2, line:19:2>     | |-CallExpr 0x15782ad28 <line:5:6, col:18> 'int'     | | |-ImplicitCastExpr 0x15782ad10 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x15782aca0 <col:6> 'int ()' Function 0x15782abe8 'PageLRU' 'int ()'     | | `-ImplicitCastExpr 0x15782ad50 <col:14> 'struct page *' <LValueToRValue>     | |   `-DeclRefExpr 0x15782acc0 <col:14> 'struct page *' lvalue ParmVar 0x15780e248 'page' 'struct page *'     | `-CompoundStmt 0x15782db98 <col:21, line:19:2>     |   |-DeclStmt 0x15782b0e8 <line:6:3, col:38>     |   | |-RecordDecl 0x15782ad68 <col:3, col:10> col:10 struct zone     |   | `-VarDecl 0x15782aed8 <col:3, col:37> col:16 used zone 'struct zone *' cinit     |   |   `-ImplicitCastExpr 0x15782b0b8 <col:23, col:37> 'struct zone *' <IntegralToPointer>     |   |     `-CallExpr 0x15782b078 <col:23, col:37> 'int'     |   |       |-ImplicitCastExpr 0x15782b060 <col:23> 'int (*)()' <FunctionToPointerDecay>     |   |       | `-DeclRefExpr 0x15782b020 <col:23> 'int ()' Function 0x15782af68 'page_zone' 'int ()'     |   |       `-ImplicitCastExpr 0x15782b0a0 <col:33> 'struct page *' <LValueToRValue>     |   |         `-DeclRefExpr 0x15782b040 <col:33> 'struct page *' lvalue ParmVar 0x15780e248 'page' 'struct page *'     |   |-CallExpr 0x15782b278 <line:8:3, col:32> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x15782b1e0 <col:3> 'int ()' Function 0x15782b128 'spin_lock_irq' 'int ()'     |   | `-UnaryOperator 0x15782b260 <col:17, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x15782b238 <col:18, col:24> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x15782b200 <col:18> 'struct zone *' lvalue Var 0x15782aed8 'zone' 'struct zone *'     |   |-IfStmt 0x15782d9d8 <line:9:3, line:17:3>     |   | |-BinaryOperator 0x15782b4b0 <line:9:7, col:49> 'int' '&&'     |   | | |-CallExpr 0x15782b2f8 <col:7, col:19> 'int'     |   | | | |-ImplicitCastExpr 0x15782b2e0 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | | | | `-DeclRefExpr 0x15782b2a0 <col:7> 'int ()' Function 0x15782abe8 'PageLRU' 'int ()'     |   | | | `-ImplicitCastExpr 0x15782b320 <col:15> 'struct page *' <LValueToRValue>     |   | | |   `-DeclRefExpr 0x15782b2c0 <col:15> 'struct page *' lvalue ParmVar 0x15780e248 'page' 'struct page *'     |   | | `-CallExpr 0x15782b470 <col:24, col:49> 'int'     |   | |   |-ImplicitCastExpr 0x15782b458 <col:24> 'int (*)()' <FunctionToPointerDecay>     |   | |   | `-DeclRefExpr 0x15782b418 <col:24> 'int ()' Function 0x15782b360 'get_page_unless_zero' 'int ()'     |   | |   `-ImplicitCastExpr 0x15782b498 <col:45> 'struct page *' <LValueToRValue>     |   | |     `-DeclRefExpr 0x15782b438 <col:45> 'struct page *' lvalue ParmVar 0x15780e248 'page' 'struct page *'     |   | `-CompoundStmt 0x15782d9a8 <col:52, line:17:3>     |   |   |-BinaryOperator 0x15782b510 <line:10:4, col:10> 'int' contains-errors '='     |   |   | |-DeclRefExpr 0x15782b4d0 <col:4> 'int' contains-errors lvalue Var 0x15782aa60 'ret' 'int'     |   |   | `-IntegerLiteral 0x15782b4f0 <col:10> 'int' 0     |   |   |-CallExpr 0x15782b668 <line:11:4, col:21> 'int'     |   |   | |-ImplicitCastExpr 0x15782b650 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x15782b610 <col:4> 'int ()' Function 0x15782b558 'ClearPageLRU' 'int ()'     |   |   | `-ImplicitCastExpr 0x15782b690 <col:17> 'struct page *' <LValueToRValue>     |   |   |   `-DeclRefExpr 0x15782b630 <col:17> 'struct page *' lvalue ParmVar 0x15780e248 'page' 'struct page *'     |   |   |-IfStmt 0x15782d7b0 <line:12:4, line:15:43> has_else     |   |   | |-CallExpr 0x15782d400 <line:12:8, col:23> 'int'     |   |   | | |-ImplicitCastExpr 0x15782b7c8 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   |   | | | `-DeclRefExpr 0x15782b788 <col:8> 'int ()' Function 0x15782b6d0 'PageActive' 'int ()'     |   |   | | `-ImplicitCastExpr 0x15782d428 <col:19> 'struct page *' <LValueToRValue>     |   |   | |   `-DeclRefExpr 0x15782b7a8 <col:19> 'struct page *' lvalue ParmVar 0x15780e248 'page' 'struct page *'     |   |   | |-CallExpr 0x15782d598 <line:13:5, col:41> 'int'     |   |   | | |-ImplicitCastExpr 0x15782d580 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   |   | | | `-DeclRefExpr 0x15782d520 <col:5> 'int ()' Function 0x15782d468 'del_page_from_active_list' 'int ()'     |   |   | | |-ImplicitCastExpr 0x15782d5c8 <col:31> 'struct zone *' <LValueToRValue>     |   |   | | | `-DeclRefExpr 0x15782d540 <col:31> 'struct zone *' lvalue Var 0x15782aed8 'zone' 'struct zone *'     |   |   | | `-ImplicitCastExpr 0x15782d5e0 <col:37> 'struct page *' <LValueToRValue>     |   |   | |   `-DeclRefExpr 0x15782d560 <col:37> 'struct page *' lvalue ParmVar 0x15780e248 'page' 'struct page *'     |   |   | `-CallExpr 0x15782d750 <line:15:5, col:43> 'int'     |   |   |   |-ImplicitCastExpr 0x15782d738 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   |   |   | `-DeclRefExpr 0x15782d6d8 <col:5> 'int ()' Function 0x15782d620 'del_page_from_inactive_list' 'int ()'     |   |   |   |-ImplicitCastExpr 0x15782d780 <col:33> 'struct zone *' <LValueToRValue>     |   |   |   | `-DeclRefExpr 0x15782d6f8 <col:33> 'struct zone *' lvalue Var 0x15782aed8 'zone' 'struct zone *'     |   |   |   `-ImplicitCastExpr 0x15782d798 <col:39> 'struct page *' <LValueToRValue>     |   |   |     `-DeclRefExpr 0x15782d718 <col:39> 'struct page *' lvalue ParmVar 0x15780e248 'page' 'struct page *'     |   |   `-CallExpr 0x15782d978 <line:16:4, col:38> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x15782d8c0 <col:4> 'int ()' Function 0x15782d808 'list_add_tail' 'int ()'     |   |     |-UnaryOperator 0x15782d940 <col:18, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |     | `-RecoveryExpr 0x15782d918 <col:19, col:25> '<dependent type>' contains-errors lvalue     |   |     |   `-DeclRefExpr 0x15782d8e0 <col:19> 'struct page *' lvalue ParmVar 0x15780e248 'page' 'struct page *'     |   |     `-DeclRefExpr 0x15782d958 <col:30> 'struct list_head *' lvalue ParmVar 0x15782a828 'pagelist' 'struct list_head *'     |   `-CallExpr 0x15782db70 <line:18:3, col:34> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x15782dad8 <col:3> 'int ()' Function 0x15782da20 'spin_unlock_irq' 'int ()'     |     `-UnaryOperator 0x15782db58 <col:19, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x15782db30 <col:20, col:26> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x15782daf8 <col:20> 'struct zone *' lvalue Var 0x15782aed8 'zone' 'struct zone *'     `-ReturnStmt 0x15782dc20 <line:20:2, col:9>       `-ImplicitCastExpr 0x15782dc08 <col:9> 'int' contains-errors <LValueToRValue>         `-DeclRefExpr 0x15782dbe8 <col:9> 'int' contains-errors lvalue Var 0x15782aa60 'ret' 'int' ","19475":"`-FunctionDecl 0x13700e038  line:1:1 invalid gss_get_mic_iov_length 'int (int *, int, int, int *, int)'   |-ParmVarDecl 0x13700dd28 <col:24, col:35> col:35 invalid minor_status 'int *'   |-ParmVarDecl 0x13700dda8 <col:49, col:62> col:62 invalid context_handle 'int'   |-ParmVarDecl 0x13700de28 <line:2:10, col:20> col:20 invalid qop_req 'int'   |-ParmVarDecl 0x13700dea8 <col:29, col:50> col:50 invalid iov 'int *'   |-ParmVarDecl 0x13700df28 <line:3:10, col:14> col:14 used iov_count 'int'   `-CompoundStmt 0x140009ef8 <line:4:1, line:26:1>     `-IfStmt 0x140009aa8 <line:11:5, line:12:9>       |-BinaryOperator 0x140009a40 <line:11:9, col:19> 'int' contains-errors '!='       | |-RecoveryExpr 0x140009a00 <col:9> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x140009a20 <col:19> '<dependent type>' contains-errors lvalue       `-ReturnStmt 0x140009a98 <line:12:2, col:9>         `-RecoveryExpr 0x140009a78 <col:9> '<dependent type>' contains-errors lvalue ","19336":"`-FunctionDecl 0x15a928208  line:1:6 invalid SafeX509ExtPrint 'int (const int)'   |-ParmVarDecl 0x15a9280f0 <col:23, <invalid sloc>> col:39 invalid 'const int'   `-CompoundStmt 0x15c0095b8 <col:67, line:34:1>     `-DeclStmt 0x15a9284f0 <line:2:3, col:56>       `-VarDecl 0x15a9282d0 <col:3, col:28> col:28 invalid method 'const int *' ","20131":"`-FunctionDecl 0x13902a9e0  line:1:6 sock_prot_inuse_add 'void (struct net *, struct proto *, int)'   |-ParmVarDecl 0x13900e248 <col:26, col:38> col:38 used net 'struct net *'   |-ParmVarDecl 0x13902a828 <col:43, col:57> col:57 used prot 'struct proto *'   |-ParmVarDecl 0x13902a8a8 <col:63, col:67> col:67 used val 'int'   `-CompoundStmt 0x13902b070 <line:2:1, line:5:1>     |-DeclStmt 0x13902ad18 <line:3:2, col:30>     | `-VarDecl 0x13902ab00 <col:2, col:29> col:6 used cpu 'int' cinit     |   `-CallExpr 0x13902acf8 <col:12, col:29> 'int'     |     `-ImplicitCastExpr 0x13902ace0 <col:12> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x13902ac90 <col:12> 'int ()' Function 0x13902abd8 'smp_processor_id' 'int ()'     `-CompoundAssignOperator 0x13902b040 <line:4:2, col:61> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'       |-ArraySubscriptExpr 0x13902b000 <col:2, col:56> '<dependent type>' contains-errors lvalue       | |-ImplicitCastExpr 0x13902afd0 <col:2, col:37> '<dependent type>' contains-errors <LValueToRValue>       | | `-CXXDependentScopeMemberExpr 0x13902af28 <col:2, col:37> '<dependent type>' contains-errors lvalue ->val       | |   `-CallExpr 0x13902aef8 <col:2, col:34> '<dependent type>' contains-errors       | |     |-DeclRefExpr 0x13902ae10 <col:2> 'int ()' Function 0x13902ad58 'per_cpu_ptr' 'int ()'       | |     |-CXXDependentScopeMemberExpr 0x13902ae90 <col:14, col:24> '<dependent type>' contains-errors lvalue .inuse       | |     | `-RecoveryExpr 0x13902ae68 <col:14, col:19> '<dependent type>' contains-errors lvalue       | |     |   `-DeclRefExpr 0x13902ae30 <col:14> 'struct net *' lvalue ParmVar 0x13900e248 'net' 'struct net *'       | |     `-DeclRefExpr 0x13902aed8 <col:31> 'int' lvalue Var 0x13902ab00 'cpu' 'int'       | `-ImplicitCastExpr 0x13902afe8 <col:41, col:47> '<dependent type>' contains-errors <LValueToRValue>       |   `-RecoveryExpr 0x13902afa8 <col:41, col:47> '<dependent type>' contains-errors lvalue       |     `-DeclRefExpr 0x13902af70 <col:41> 'struct proto *' lvalue ParmVar 0x13902a828 'prot' 'struct proto *'       `-DeclRefExpr 0x13902b020 <col:61> 'int' lvalue ParmVar 0x13902a8a8 'val' 'int' ","19427":"`-FunctionDecl 0x1379281a8  line:1:1 poly_recv 'int (int)'   |-ParmVarDecl 0x1379280d8 <col:11> col:11 PG_FUNCTION_ARGS 'int'   `-CompoundStmt 0x1379411d8 <line:2:1, line:30:1>     `-DeclStmt 0x137928350 <line:7:2, col:12>       `-VarDecl 0x1379282e8 <col:2, col:8> col:8 used size 'int' ","19507":"`-FunctionDecl 0x14604bf10  line:1:13 invalid sortGlobResult 'void (int *, int, const char *)' static   |-ParmVarDecl 0x14604bd28 <col:28, col:36> col:36 invalid result 'int *'   |-ParmVarDecl 0x14604bda8 <col:44, col:51> col:51 invalid prefix_len 'int'   |-ParmVarDecl 0x14604be28 <col:63, col:75> col:75 dformat 'const char *'   `-CompoundStmt 0x14604bfd0 <col:84, line:3:1> ","19466":"`-FunctionDecl 0x12182a768  col:15 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x12182a868 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x12182a810 <<invalid sloc>> Implicit 902 ","19162":"`-FunctionDecl 0x1338f3bf0  line:1:13 invalid spl_filesystem_dir_it_rewind 'void (int *)' static   |-ParmVarDecl 0x1338f3b28 <col:42, col:64> col:64 invalid iter 'int *'   `-CompoundStmt 0x13390d4e0 <line:2:1, line:10:1>     `-IfStmt 0x13390d3a8 <line:6:2, line:8:2>       |-CXXDependentScopeMemberExpr 0x1338f4008 <line:6:6, col:20> '<dependent type>' contains-errors lvalue .dirp       | `-CXXDependentScopeMemberExpr 0x1338f3fc0 <col:6, col:16> '<dependent type>' contains-errors lvalue .dir       |   `-CXXDependentScopeMemberExpr 0x1338f3f78 <col:6, col:14> '<dependent type>' contains-errors lvalue ->u       |     `-RecoveryExpr 0x1338f3f58 <col:6> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x13390d390 <col:26, line:8:2>         `-CallExpr 0x13390d368 <line:7:3, col:42> '<dependent type>' contains-errors           |-DeclRefExpr 0x1338f4130 <col:3> 'int ()' Function 0x1338f4078 'php_stream_rewinddir' 'int ()'           `-CXXDependentScopeMemberExpr 0x13390d320 <col:24, col:38> '<dependent type>' contains-errors lvalue .dirp             `-CXXDependentScopeMemberExpr 0x13390d2d8 <col:24, col:34> '<dependent type>' contains-errors lvalue .dir               `-CXXDependentScopeMemberExpr 0x13390d290 <col:24, col:32> '<dependent type>' contains-errors lvalue ->u                 `-RecoveryExpr 0x13390d270 <col:24> '<dependent type>' contains-errors lvalue ","20113":"`-FunctionDecl 0x12c80de58  line:1:1 invalid pk11_numbits 'int (int, unsigned int)'   |-ParmVarDecl 0x12c80dcf0 <col:14, col:26> col:26 invalid data 'int'   |-ParmVarDecl 0x12c80dd70 <col:32, col:45> col:45 used bytecnt 'unsigned int'   `-CompoundStmt 0x12c828f60 <col:54, line:34:1>     |-DeclStmt 0x12c80e028 <line:2:2, col:24>     | |-VarDecl 0x12c80df28 <col:2, col:15> col:15 used bitcnt 'unsigned int'     | `-VarDecl 0x12c80dfa8 <col:2, col:23> col:23 used i 'unsigned int'     |-IfStmt 0x12c80e120 <line:5:2, line:6:12>     | |-BinaryOperator 0x12c80e0b0 <line:5:6, col:17> 'int' '=='     | | |-ImplicitCastExpr 0x12c80e080 <col:6> 'unsigned int' <LValueToRValue>     | | | `-DeclRefExpr 0x12c80e040 <col:6> 'unsigned int' lvalue ParmVar 0x12c80dd70 'bytecnt' 'unsigned int'     | | `-ImplicitCastExpr 0x12c80e098 <col:17> 'unsigned int' <IntegralCast>     | |   `-IntegerLiteral 0x12c80e060 <col:17> 'int' 0     | `-ReturnStmt 0x12c80e110 <line:6:3, col:12>     |   `-ParenExpr 0x12c80e0f0 <col:10, col:12> 'int'     |     `-IntegerLiteral 0x12c80e0d0 <col:11> 'int' 0     |-BinaryOperator 0x12c80e1f0 <line:7:2, col:21> 'unsigned int' '='     | |-DeclRefExpr 0x12c80e140 <col:2> 'unsigned int' lvalue Var 0x12c80df28 'bitcnt' 'unsigned int'     | `-BinaryOperator 0x12c80e1d0 <col:11, col:21> 'unsigned int' '*'     |   |-ImplicitCastExpr 0x12c80e1a0 <col:11> 'unsigned int' <LValueToRValue>     |   | `-DeclRefExpr 0x12c80e160 <col:11> 'unsigned int' lvalue ParmVar 0x12c80dd70 'bytecnt' 'unsigned int'     |   `-ImplicitCastExpr 0x12c80e1b8 <col:21> 'unsigned int' <IntegralCast>     |     `-IntegerLiteral 0x12c80e180 <col:21> 'int' 8     |-ForStmt 0x12c828be0 <line:8:2, line:31:2>     | |-BinaryOperator 0x12c80e268 <line:8:7, col:11> 'unsigned int' '='     | | |-DeclRefExpr 0x12c80e210 <col:7> 'unsigned int' lvalue Var 0x12c80dfa8 'i' 'unsigned int'     | | `-ImplicitCastExpr 0x12c80e250 <col:11> 'unsigned int' <IntegralCast>     | |   `-IntegerLiteral 0x12c80e230 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x12c80e2f8 <col:14, col:18> 'int' '<'     | | |-ImplicitCastExpr 0x12c80e2c8 <col:14> 'unsigned int' <LValueToRValue>     | | | `-DeclRefExpr 0x12c80e288 <col:14> 'unsigned int' lvalue Var 0x12c80dfa8 'i' 'unsigned int'     | | `-ImplicitCastExpr 0x12c80e2e0 <col:18> 'unsigned int' <LValueToRValue>     | |   `-DeclRefExpr 0x12c80e2a8 <col:18> 'unsigned int' lvalue ParmVar 0x12c80dd70 'bytecnt' 'unsigned int'     | |-UnaryOperator 0x12c80e338 <col:27, col:28> 'unsigned int' postfix '++'     | | `-DeclRefExpr 0x12c80e318 <col:27> 'unsigned int' lvalue Var 0x12c80dfa8 'i' 'unsigned int'     | `-CompoundStmt 0x12c828b80 <col:32, line:31:2>     |   |-IfStmt 0x12c827f30 <line:10:3, line:13:3>     |   | |-BinaryOperator 0x12c827e60 <line:10:7, col:14> 'int' contains-errors '=='     |   | | |-RecoveryExpr 0x12c827e40 <col:7> '<dependent type>' contains-errors lvalue     |   | | `-IntegerLiteral 0x12c827e00 <col:14> 'int' 0     |   | `-CompoundStmt 0x12c827f10 <col:17, line:13:3>     |   |   |-CompoundAssignOperator 0x12c827ed8 <line:11:4, col:14> 'unsigned int' '-=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'     |   |   | |-DeclRefExpr 0x12c827e80 <col:4> 'unsigned int' lvalue Var 0x12c80df28 'bitcnt' 'unsigned int'     |   |   | `-ImplicitCastExpr 0x12c827ec0 <col:14> 'unsigned int' <IntegralCast>     |   |   |   `-IntegerLiteral 0x12c827ea0 <col:14> 'int' 8     |   |   `-ContinueStmt 0x12c827f08 <line:12:4>     |   |-IfStmt 0x12c828068 <line:14:3, line:15:18>     |   | |-BinaryOperator 0x12c827fc8 <line:14:7, col:13> '<dependent type>' contains-errors '&'     |   | | |-RecoveryExpr 0x12c827fa8 <col:7> '<dependent type>' contains-errors lvalue     |   | | `-IntegerLiteral 0x12c827f68 <col:13> 'int' 128     |   | `-ReturnStmt 0x12c828058 <line:15:4, col:18>     |   |   `-ImplicitCastExpr 0x12c828040 <col:11, col:18> 'int' <IntegralCast>     |   |     `-ImplicitCastExpr 0x12c828028 <col:11, col:18> 'unsigned int' <LValueToRValue>     |   |       `-ParenExpr 0x12c828008 <col:11, col:18> 'unsigned int' lvalue     |   |         `-DeclRefExpr 0x12c827fe8 <col:12> 'unsigned int' lvalue Var 0x12c80df28 'bitcnt' 'unsigned int'     |   |-IfStmt 0x12c8281f8 <line:16:3, line:17:22>     |   | |-BinaryOperator 0x12c828100 <line:16:7, col:13> '<dependent type>' contains-errors '&'     |   | | |-RecoveryExpr 0x12c8280e0 <col:7> '<dependent type>' contains-errors lvalue     |   | | `-IntegerLiteral 0x12c8280a0 <col:13> 'int' 64     |   | `-ReturnStmt 0x12c8281e8 <line:17:4, col:22>     |   |   `-ImplicitCastExpr 0x12c8281d0 <col:11, col:22> 'int' <IntegralCast>     |   |     `-ParenExpr 0x12c8281b0 <col:11, col:22> 'unsigned int'     |   |       `-BinaryOperator 0x12c828190 <col:12, col:21> 'unsigned int' '-'     |   |         |-ImplicitCastExpr 0x12c828160 <col:12> 'unsigned int' <LValueToRValue>     |   |         | `-DeclRefExpr 0x12c828120 <col:12> 'unsigned int' lvalue Var 0x12c80df28 'bitcnt' 'unsigned int'     |   |         `-ImplicitCastExpr 0x12c828178 <col:21> 'unsigned int' <IntegralCast>     |   |           `-IntegerLiteral 0x12c828140 <col:21> 'int' 1     |   |-IfStmt 0x12c828388 <line:18:3, line:19:22>     |   | |-BinaryOperator 0x12c828290 <line:18:7, col:13> '<dependent type>' contains-errors '&'     |   | | |-RecoveryExpr 0x12c828270 <col:7> '<dependent type>' contains-errors lvalue     |   | | `-IntegerLiteral 0x12c828230 <col:13> 'int' 32     |   | `-ReturnStmt 0x12c828378 <line:19:4, col:22>     |   |   `-ImplicitCastExpr 0x12c828360 <col:11, col:22> 'int' <IntegralCast>     |   |     `-ParenExpr 0x12c828340 <col:11, col:22> 'unsigned int'     |   |       `-BinaryOperator 0x12c828320 <col:12, col:21> 'unsigned int' '-'     |   |         |-ImplicitCastExpr 0x12c8282f0 <col:12> 'unsigned int' <LValueToRValue>     |   |         | `-DeclRefExpr 0x12c8282b0 <col:12> 'unsigned int' lvalue Var 0x12c80df28 'bitcnt' 'unsigned int'     |   |         `-ImplicitCastExpr 0x12c828308 <col:21> 'unsigned int' <IntegralCast>     |   |           `-IntegerLiteral 0x12c8282d0 <col:21> 'int' 2     |   |-IfStmt 0x12c828518 <line:20:3, line:21:22>     |   | |-BinaryOperator 0x12c828420 <line:20:7, col:13> '<dependent type>' contains-errors '&'     |   | | |-RecoveryExpr 0x12c828400 <col:7> '<dependent type>' contains-errors lvalue     |   | | `-IntegerLiteral 0x12c8283c0 <col:13> 'int' 16     |   | `-ReturnStmt 0x12c828508 <line:21:4, col:22>     |   |   `-ImplicitCastExpr 0x12c8284f0 <col:11, col:22> 'int' <IntegralCast>     |   |     `-ParenExpr 0x12c8284d0 <col:11, col:22> 'unsigned int'     |   |       `-BinaryOperator 0x12c8284b0 <col:12, col:21> 'unsigned int' '-'     |   |         |-ImplicitCastExpr 0x12c828480 <col:12> 'unsigned int' <LValueToRValue>     |   |         | `-DeclRefExpr 0x12c828440 <col:12> 'unsigned int' lvalue Var 0x12c80df28 'bitcnt' 'unsigned int'     |   |         `-ImplicitCastExpr 0x12c828498 <col:21> 'unsigned int' <IntegralCast>     |   |           `-IntegerLiteral 0x12c828460 <col:21> 'int' 3     |   |-IfStmt 0x12c8286a8 <line:22:3, line:23:22>     |   | |-BinaryOperator 0x12c8285b0 <line:22:7, col:13> '<dependent type>' contains-errors '&'     |   | | |-RecoveryExpr 0x12c828590 <col:7> '<dependent type>' contains-errors lvalue     |   | | `-IntegerLiteral 0x12c828550 <col:13> 'int' 8     |   | `-ReturnStmt 0x12c828698 <line:23:4, col:22>     |   |   `-ImplicitCastExpr 0x12c828680 <col:11, col:22> 'int' <IntegralCast>     |   |     `-ParenExpr 0x12c828660 <col:11, col:22> 'unsigned int'     |   |       `-BinaryOperator 0x12c828640 <col:12, col:21> 'unsigned int' '-'     |   |         |-ImplicitCastExpr 0x12c828610 <col:12> 'unsigned int' <LValueToRValue>     |   |         | `-DeclRefExpr 0x12c8285d0 <col:12> 'unsigned int' lvalue Var 0x12c80df28 'bitcnt' 'unsigned int'     |   |         `-ImplicitCastExpr 0x12c828628 <col:21> 'unsigned int' <IntegralCast>     |   |           `-IntegerLiteral 0x12c8285f0 <col:21> 'int' 4     |   |-IfStmt 0x12c828838 <line:24:3, line:25:22>     |   | |-BinaryOperator 0x12c828740 <line:24:7, col:13> '<dependent type>' contains-errors '&'     |   | | |-RecoveryExpr 0x12c828720 <col:7> '<dependent type>' contains-errors lvalue     |   | | `-IntegerLiteral 0x12c8286e0 <col:13> 'int' 4     |   | `-ReturnStmt 0x12c828828 <line:25:4, col:22>     |   |   `-ImplicitCastExpr 0x12c828810 <col:11, col:22> 'int' <IntegralCast>     |   |     `-ParenExpr 0x12c8287f0 <col:11, col:22> 'unsigned int'     |   |       `-BinaryOperator 0x12c8287d0 <col:12, col:21> 'unsigned int' '-'     |   |         |-ImplicitCastExpr 0x12c8287a0 <col:12> 'unsigned int' <LValueToRValue>     |   |         | `-DeclRefExpr 0x12c828760 <col:12> 'unsigned int' lvalue Var 0x12c80df28 'bitcnt' 'unsigned int'     |   |         `-ImplicitCastExpr 0x12c8287b8 <col:21> 'unsigned int' <IntegralCast>     |   |           `-IntegerLiteral 0x12c828780 <col:21> 'int' 5     |   |-IfStmt 0x12c8289c8 <line:26:3, line:27:22>     |   | |-BinaryOperator 0x12c8288d0 <line:26:7, col:13> '<dependent type>' contains-errors '&'     |   | | |-RecoveryExpr 0x12c8288b0 <col:7> '<dependent type>' contains-errors lvalue     |   | | `-IntegerLiteral 0x12c828870 <col:13> 'int' 2     |   | `-ReturnStmt 0x12c8289b8 <line:27:4, col:22>     |   |   `-ImplicitCastExpr 0x12c8289a0 <col:11, col:22> 'int' <IntegralCast>     |   |     `-ParenExpr 0x12c828980 <col:11, col:22> 'unsigned int'     |   |       `-BinaryOperator 0x12c828960 <col:12, col:21> 'unsigned int' '-'     |   |         |-ImplicitCastExpr 0x12c828930 <col:12> 'unsigned int' <LValueToRValue>     |   |         | `-DeclRefExpr 0x12c8288f0 <col:12> 'unsigned int' lvalue Var 0x12c80df28 'bitcnt' 'unsigned int'     |   |         `-ImplicitCastExpr 0x12c828948 <col:21> 'unsigned int' <IntegralCast>     |   |           `-IntegerLiteral 0x12c828910 <col:21> 'int' 6     |   |-IfStmt 0x12c828b58 <line:28:3, line:29:22>     |   | |-BinaryOperator 0x12c828a60 <line:28:7, col:13> '<dependent type>' contains-errors '&'     |   | | |-RecoveryExpr 0x12c828a40 <col:7> '<dependent type>' contains-errors lvalue     |   | | `-IntegerLiteral 0x12c828a00 <col:13> 'int' 1     |   | `-ReturnStmt 0x12c828b48 <line:29:4, col:22>     |   |   `-ImplicitCastExpr 0x12c828b30 <col:11, col:22> 'int' <IntegralCast>     |   |     `-ParenExpr 0x12c828b10 <col:11, col:22> 'unsigned int'     |   |       `-BinaryOperator 0x12c828af0 <col:12, col:21> 'unsigned int' '-'     |   |         |-ImplicitCastExpr 0x12c828ac0 <col:12> 'unsigned int' <LValueToRValue>     |   |         | `-DeclRefExpr 0x12c828a80 <col:12> 'unsigned int' lvalue Var 0x12c80df28 'bitcnt' 'unsigned int'     |   |         `-ImplicitCastExpr 0x12c828ad8 <col:21> 'unsigned int' <IntegralCast>     |   |           `-IntegerLiteral 0x12c828aa0 <col:21> 'int' 7     |   `-BreakStmt 0x12c828b78 <line:30:3>     |-CallExpr 0x12c828e00 <line:32:2, col:10> 'int'     | |-ImplicitCastExpr 0x12c828de0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12c828d70 <col:2> 'int ()' Function 0x12c828cb8 'INSIST' 'int ()'     | `-IntegerLiteral 0x12c828d90 <col:9> 'int' 0     `-CallExpr 0x12c828f40 <line:33:2, col:18> 'int'       `-ImplicitCastExpr 0x12c828f28 <col:2> 'int (*)()' <FunctionToPointerDecay>         `-DeclRefExpr 0x12c828f08 <col:2> 'int ()' Function 0x12c828e50 'ISC_UNREACHABLE' 'int ()' ","19371":"`-FunctionDecl 0x120145430  col:2 implicit used strcpy 'char *(char *, const char *)' extern   |-ParmVarDecl 0x120145530 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x120145598 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x1201454d8 <<invalid sloc>> Implicit 885 ","19417":"`-FunctionDecl 0x13280de58  line:1:12 invalid complete_hosts 'int (char *, int)' static   |-ParmVarDecl 0x13280dcd8 <col:27, col:33> col:33 used buf 'char *'   |-ParmVarDecl 0x13280dd70 <col:38, col:45> col:45 invalid buflen 'int'   `-CompoundStmt 0x132828698 <line:2:1, line:54:1>     |-DeclStmt 0x13280dfc8 <line:4:3, col:14>     | `-VarDecl 0x13280df28 <col:3, col:13> col:7 used rc 'int' cinit     |   `-UnaryOperator 0x13280dfb0 <col:12, col:13> 'int' prefix '-'     |     `-IntegerLiteral 0x13280df90 <col:13> 'int' 1     |-UnaryExprOrTypeTraitExpr 0x13280e038 <line:5:3, col:10> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x13280e018 <col:10> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x132826be8 <line:8:3, col:54>     | |-RecordDecl 0x13280e278 <col:3, col:10> col:10 struct MailboxList     | `-VarDecl 0x13280e378 <col:3, col:22> col:22 used invalid ml 'struct MailboxList'     |-CallExpr 0x132826de0 <line:9:3, col:61> '<dependent type>' contains-errors     | |-DeclRefExpr 0x132826ce0 <col:3> 'int ()' Function 0x132826c28 'neomutt_mailboxlist_get_all' 'int ()'     | |-UnaryOperator 0x132826d20 <col:31, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x132826d00 <col:32> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x132826da0 <col:36> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x132826dc0 <col:45> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x132827040 <line:10:3, col:32>     | |-RecordDecl 0x132826e18 <col:3, col:10> col:10 struct MailboxNode     | `-VarDecl 0x132826f88 <col:3, col:28> col:23 used np 'struct MailboxNode *' cinit     |   `-RecoveryExpr 0x132827008 <col:28> '<dependent type>' contains-errors lvalue     |-CallExpr 0x132827220 <line:11:3, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x132827138 <col:3> 'int ()' Function 0x132827080 'STAILQ_FOREACH' 'int ()'     | |-DeclRefExpr 0x132827158 <col:18> 'struct MailboxNode *' contains-errors lvalue Var 0x132826f88 'np' 'struct MailboxNode *'     | |-UnaryOperator 0x132827198 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x132827178 <col:23> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x132827200 <col:27> '<dependent type>' contains-errors lvalue     |-CompoundStmt 0x1328284d8 <line:12:3, line:23:3>     | `-IfStmt 0x1328284a8 <line:16:5, line:22:7> has_else     |   |-ImplicitCastExpr 0x132828000 <line:16:9> 'int' <LValueToRValue>     |   | `-DeclRefExpr 0x1328275d8 <col:9> 'int' lvalue Var 0x13280df28 'rc' 'int'     |   |-CompoundStmt 0x132828298 <line:17:5, line:20:5>     |   | |-CallExpr 0x132828200 <line:18:7, col:62> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x1328280f8 <col:7> 'int ()' Function 0x132828040 'mutt_str_strfcpy' 'int ()'     |   | | |-DeclRefExpr 0x132828118 <col:24> 'char *' lvalue ParmVar 0x13280dcd8 'buf' 'char *'     |   | | |-CallExpr 0x1328281b8 <col:29, col:53> '<dependent type>' contains-errors     |   | | | |-DeclRefExpr 0x132828138 <col:29> 'int ()' Function 0x132827380 'mailbox_path' 'int ()'     |   | | | `-RecoveryExpr 0x132828190 <col:42, col:46> '<dependent type>' contains-errors lvalue     |   | | |   `-DeclRefExpr 0x132828158 <col:42> 'struct MailboxNode *' contains-errors lvalue Var 0x132826f88 'np' 'struct MailboxNode *'     |   | | `-RecoveryExpr 0x1328281e0 <col:56> '<dependent type>' contains-errors lvalue     |   | `-BinaryOperator 0x132828278 <line:19:7, col:12> 'int' '='     |   |   |-DeclRefExpr 0x132828238 <col:7> 'int' lvalue Var 0x13280df28 'rc' 'int'     |   |   `-IntegerLiteral 0x132828258 <col:12> 'int' 0     |   `-NullStmt 0x1328284a0 <line:22:7>     |-CallExpr 0x132828628 <line:24:3, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1328285d0 <col:3> 'int ()' Function 0x132828518 'neomutt_mailboxlist_clear' 'int ()'     | `-UnaryOperator 0x132828610 <col:29, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1328285f0 <col:30> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x132828688 <line:53:3, col:10>       `-ImplicitCastExpr 0x132828670 <col:10> 'int' <LValueToRValue>         `-DeclRefExpr 0x132828650 <col:10> 'int' lvalue Var 0x13280df28 'rc' 'int' ","19267":"`-FunctionDecl 0x15580de88  line:1:6 invalid FromkLinuxSigset 'int (const int *, int *)'   |-ParmVarDecl 0x15580dcf0 <col:23, col:46> col:46 invalid input 'const int *'   |-ParmVarDecl 0x15580dda8 <col:53, col:63> col:63 referenced invalid output 'int *'   `-CompoundStmt 0x155827f40 <col:71, line:16:1>     |-IfStmt 0x15580e0f0 <line:2:3, line:5:3>     | |-BinaryOperator 0x15580dfe0 <line:2:7, col:18> 'int' contains-errors '||'     | | |-UnaryOperator 0x15580df78 <col:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x15580df60 <col:8> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-RecoveryExpr 0x15580df40 <col:8> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x15580dfc8 <col:17, col:18> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x15580dfb0 <col:18> '<dependent type>' contains-errors <LValueToRValue>     | |     `-RecoveryExpr 0x15580df90 <col:18> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x15580e0d8 <col:26, line:5:3>     |   `-BinaryOperator 0x15580e0a0 <line:3:5, col:14> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x15580e020 <col:5> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x15580e000 <col:5> 'int *' lvalue ParmVar 0x15580dda8 'output' 'int *'     |     `-RecoveryExpr 0x15580e080 <col:14> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15580e2b0 <line:6:3, col:21> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15580e270 <col:3> 'int ()' Function 0x15580e1b8 'sigemptyset' 'int ()'     | `-RecoveryExpr 0x15580e290 <col:15> '<dependent type>' contains-errors lvalue     |-ForStmt 0x155827ec0 <line:7:3, line:14:3>     | |-DeclStmt 0x15580e378 <line:7:8, col:26>     | | `-VarDecl 0x15580e2f0 <col:8, col:25> col:12 used klinux_sig 'int' cinit     | |   `-IntegerLiteral 0x15580e358 <col:25> 'int' 1     | |-<<<NULL>>>     | |-BinaryOperator 0x155827820 <col:28, col:41> 'int' contains-errors '<'     | | |-DeclRefExpr 0x15580e390 <col:28> 'int' lvalue Var 0x15580e2f0 'klinux_sig' 'int'     | | `-RecoveryExpr 0x155827800 <col:41> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x155827860 <col:54, col:64> 'int' postfix '++'     | | `-DeclRefExpr 0x155827840 <col:54> 'int' lvalue Var 0x15580e2f0 'klinux_sig' 'int'     | `-CompoundStmt 0x155827ea8 <col:68, line:14:3>     |   `-IfStmt 0x155827e88 <line:8:5, line:13:5>     |     |-CallExpr 0x1558279b8 <line:8:9, col:45> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x155827958 <col:9> 'int ()' Function 0x1558278a0 'klinux_sigismember' 'int ()'     |     | |-RecoveryExpr 0x155827978 <col:28> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x155827998 <col:35> 'int' lvalue Var 0x15580e2f0 'klinux_sig' 'int'     |     `-CompoundStmt 0x155827e68 <col:48, line:13:5>     |       |-DeclStmt 0x155827c18 <line:9:7, col:51>     |       | `-VarDecl 0x155827a00 <col:7, col:50> col:11 used sig 'int' cinit     |       |   `-CallExpr 0x155827bd8 <col:17, col:50> 'int'     |       |     |-ImplicitCastExpr 0x155827bc0 <col:17> 'int (*)()' <FunctionToPointerDecay>     |       |     | `-DeclRefExpr 0x155827b48 <col:17> 'int ()' Function 0x155827a90 'FromkLinuxSignalNumber' 'int ()'     |       |     `-ImplicitCastExpr 0x155827c00 <col:40> 'int' <LValueToRValue>     |       |       `-DeclRefExpr 0x155827b68 <col:40> 'int' lvalue Var 0x15580e2f0 'klinux_sig' 'int'     |       `-IfStmt 0x155827e48 <line:10:7, line:12:7>     |         |-BinaryOperator 0x155827ca0 <line:10:11, col:19> 'int' '!='     |         | |-ImplicitCastExpr 0x155827c88 <col:11> 'int' <LValueToRValue>     |         | | `-DeclRefExpr 0x155827c30 <col:11> 'int' lvalue Var 0x155827a00 'sig' 'int'     |         | `-UnaryOperator 0x155827c70 <col:18, col:19> 'int' prefix '-'     |         |   `-IntegerLiteral 0x155827c50 <col:19> 'int' 1     |         `-CompoundStmt 0x155827e30 <col:22, line:12:7>     |           `-CallExpr 0x155827e00 <line:11:9, col:30> '<dependent type>' contains-errors     |             |-DeclRefExpr 0x155827da0 <col:9> 'int ()' Function 0x155827ce8 'sigaddset' 'int ()'     |             |-RecoveryExpr 0x155827dc0 <col:19> '<dependent type>' contains-errors lvalue     |             `-DeclRefExpr 0x155827de0 <col:27> 'int' lvalue Var 0x155827a00 'sig' 'int'     `-ReturnStmt 0x155827f30 <line:15:3, col:10>       `-RecoveryExpr 0x155827f10 <col:10> '<dependent type>' contains-errors lvalue ","19987":"`-FunctionDecl 0x11f809440  col:4 implicit used abort 'void (void) __attribute__((noreturn))' extern   `-BuiltinAttr 0x11f8094e8 <<invalid sloc>> Implicit 867 ","19822":"`-FunctionDecl 0x147128498  line:1:1 invalid httpLocalRequest 'int (int, int, int, int, int, void *)'   |-ParmVarDecl 0x1471280f0 <col:18, col:28> col:28 referenced invalid object 'int'   |-ParmVarDecl 0x147128170 <col:36, col:40> col:40 used method 'int'   |-ParmVarDecl 0x1471281f0 <col:48, col:52> col:52 used from 'int'   |-ParmVarDecl 0x147128270 <col:58, col:62> col:62 used to 'int'   |-ParmVarDecl 0x1471282f0 <line:2:18, col:33> col:33 referenced invalid requestor 'int'   |-ParmVarDecl 0x147128370 <col:44, col:50> col:50 used closure 'void *'   `-CompoundStmt 0x147808c78 <line:3:1, line:27:1>     |-IfStmt 0x147128720 <line:4:5, line:5:29>     | |-BinaryOperator 0x147128630 <line:4:8, col:29> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x147128590 <col:8, col:16> '<dependent type>' contains-errors lvalue ->requestor     | | | `-RecoveryExpr 0x147128570 <col:8> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x147128610 <col:29> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x147128700 <line:5:9, col:29> '<dependent type>' contains-errors '='     |   |-CXXDependentScopeMemberExpr 0x147128698 <col:9, col:17> '<dependent type>' contains-errors lvalue ->requestor     |   | `-RecoveryExpr 0x147128670 <col:9> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x147128650 <col:9> 'int' lvalue ParmVar 0x1471280f0 'object' 'int'     |   `-RecoveryExpr 0x1471286e0 <col:29> '<dependent type>' contains-errors lvalue     |-IfStmt 0x147141cb0 <line:7:5, line:9:53>     | |-BinaryOperator 0x147141a70 <line:7:8, col:76> 'int' contains-errors '&&'     | | |-UnaryOperator 0x147141a58 <col:8, col:9> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x147141a40 <col:9> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-RecoveryExpr 0x147141a20 <col:9> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x1471419d0 <col:34, col:76> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x1471418e0 <col:34> 'int ()' Function 0x147141828 'urlIsSpecial' 'int ()'     | |   |-CXXDependentScopeMemberExpr 0x147141920 <col:47, col:55> '<dependent type>' contains-errors lvalue ->key     | |   | `-RecoveryExpr 0x147141900 <col:47> '<dependent type>' contains-errors lvalue     | |   `-CXXDependentScopeMemberExpr 0x147141988 <col:60, col:68> '<dependent type>' contains-errors lvalue ->key_size     | |     `-RecoveryExpr 0x147141968 <col:60> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x147141ca0 <line:8:9, line:9:53>     |   `-CallExpr 0x147141c50 <line:8:16, line:9:53> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x147141b70 <line:8:16> 'int ()' Function 0x147141ab8 'httpSpecialRequest' 'int ()'     |     |-RecoveryExpr 0x147141b90 <col:35> '<dependent type>' contains-errors lvalue     |     |-DeclRefExpr 0x147141bb0 <col:43> 'int' lvalue ParmVar 0x147128170 'method' 'int'     |     |-DeclRefExpr 0x147141bd0 <col:51> 'int' lvalue ParmVar 0x1471281f0 'from' 'int'     |     |-DeclRefExpr 0x147141bf0 <col:57> 'int' lvalue ParmVar 0x147128270 'to' 'int'     |     |-RecoveryExpr 0x147141c10 <line:9:35> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x147141c30 <col:46> 'void *' lvalue ParmVar 0x147128370 'closure' 'void *'     |-IfStmt 0x1471422f8 <line:11:5, line:15:5>     | |-BinaryOperator 0x147141d48 <line:11:8, col:18> 'int' contains-errors '>='     | | |-DeclRefExpr 0x147141cd0 <col:8> 'int' lvalue ParmVar 0x147128170 'method' 'int'     | | `-RecoveryExpr 0x147141d28 <col:18> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1471422d0 <col:31, line:15:5>     |   |-CallExpr 0x147142098 <line:12:9, col:58> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x147141e48 <col:9> 'int ()' Function 0x147141d90 'httpClientError' 'int ()'     |   | |-RecoveryExpr 0x147141e68 <col:25> '<dependent type>' contains-errors lvalue     |   | |-IntegerLiteral 0x147141e88 <col:36> 'int' 405     |   | `-CallExpr 0x147142058 <col:41, col:57> 'int'     |   |   |-ImplicitCastExpr 0x147142040 <col:41> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x147141f88 <col:41> 'int ()' Function 0x147141ed0 'internAtom' 'int ()'     |   |   `-ImplicitCastExpr 0x147142080 <col:52> 'char *' <ArrayToPointerDecay>     |   |     `-StringLiteral 0x147141ff0 <col:52> 'char[4]' lvalue \"STR\"     |   |-CompoundAssignOperator 0x147142270 <line:13:9, col:42> '<dependent type>' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   | |-CXXDependentScopeMemberExpr 0x147142160 <col:9, col:32> '<dependent type>' contains-errors lvalue ->flags     |   | | `-CXXDependentScopeMemberExpr 0x147142118 <col:9, col:20> '<dependent type>' contains-errors lvalue ->connection     |   | |   `-RecoveryExpr 0x1471420f0 <col:9> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x1471420d0 <col:9> 'int' lvalue ParmVar 0x1471282f0 'requestor' 'int'     |   | `-UnaryOperator 0x147142258 <col:41, col:42> '<dependent type>' contains-errors prefix '~' cannot overflow     |   |   `-ImplicitCastExpr 0x147142240 <col:42> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x147142220 <col:42> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x1471422c0 <line:14:9, col:16>     |     `-IntegerLiteral 0x1471422a0 <col:16> 'int' 1     |-IfStmt 0x147142620 <line:18:5, line:20:5>     | |-BinaryOperator 0x1471423d8 <line:18:8, col:24> '<dependent type>' contains-errors '&'     | | |-CXXDependentScopeMemberExpr 0x147142338 <col:8, col:16> '<dependent type>' contains-errors lvalue ->flags     | | | `-RecoveryExpr 0x147142318 <col:8> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1471423b8 <col:24> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x147142608 <col:40, line:20:5>     |   `-CallExpr 0x1471425d0 <line:19:9, col:51> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1471424d8 <col:9> 'int ()' Function 0x147142420 'abortObject' 'int ()'     |     |-RecoveryExpr 0x1471424f8 <col:21> '<dependent type>' contains-errors lvalue     |     |-IntegerLiteral 0x147142518 <col:29> 'int' 404     |     `-CallExpr 0x147142590 <col:34, col:50> 'int'     |       |-ImplicitCastExpr 0x147142578 <col:34> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x147142538 <col:34> 'int ()' Function 0x147141ed0 'internAtom' 'int ()'     |       `-ImplicitCastExpr 0x1471425b8 <col:45> 'char *' <ArrayToPointerDecay>     |         `-StringLiteral 0x147142558 <col:45> 'char[4]' lvalue \"STR\"     |-BinaryOperator 0x1471427b8 <line:21:5, col:32> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x147142688 <col:5, col:13> '<dependent type>' contains-errors lvalue ->age     | | `-RecoveryExpr 0x147142660 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x147142640 <col:5> 'int' lvalue ParmVar 0x1471280f0 'object' 'int'     | `-CXXDependentScopeMemberExpr 0x147142770 <col:19, col:32> '<dependent type>' contains-errors lvalue .tv_sec     |   `-RecoveryExpr 0x147142750 <col:19> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x147808958 <line:22:5, col:33> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x147808828 <col:5, col:13> '<dependent type>' contains-errors lvalue ->date     | | `-RecoveryExpr 0x147808800 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1471427d8 <col:5> 'int' lvalue ParmVar 0x1471280f0 'object' 'int'     | `-CXXDependentScopeMemberExpr 0x147808910 <col:20, col:33> '<dependent type>' contains-errors lvalue .tv_sec     |   `-RecoveryExpr 0x1478088f0 <col:20> '<dependent type>' contains-errors lvalue     |-CompoundAssignOperator 0x147808ad0 <line:24:5, col:23> '<dependent type>' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-CXXDependentScopeMemberExpr 0x1478089c0 <col:5, col:13> '<dependent type>' contains-errors lvalue ->flags     | | `-RecoveryExpr 0x147808998 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x147808978 <col:5> 'int' lvalue ParmVar 0x1471280f0 'object' 'int'     | `-UnaryOperator 0x147808ab8 <col:22, col:23> '<dependent type>' contains-errors prefix '~' cannot overflow     |   `-ImplicitCastExpr 0x147808aa0 <col:23> '<dependent type>' contains-errors <LValueToRValue>     |     `-RecoveryExpr 0x147808a80 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x147808c20 <line:25:5, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x147808be0 <col:5> 'int ()' Function 0x147808b28 'notifyObject' 'int ()'     | `-RecoveryExpr 0x147808c00 <col:18> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x147808c68 <line:26:5, col:12>       `-IntegerLiteral 0x147808c48 <col:12> 'int' 1 ","19603":"`-FunctionDecl 0x130126830  line:1:13 invalid ext4_inc_count 'void (int *, struct inode *)' static   |-ParmVarDecl 0x12800dd28 <col:28, col:38> col:38 invalid handle 'int *'   |-ParmVarDecl 0x12800e318 <col:46, col:60> col:60 used inode 'struct inode *'   `-CompoundStmt 0x130127308 <line:2:1, line:12:1>     |-CallExpr 0x130126ac8 <line:3:2, col:17> 'int'     | |-ImplicitCastExpr 0x130126ab0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x130126a40 <col:2> 'int ()' Function 0x130126988 'inc_nlink' 'int ()'     | `-ImplicitCastExpr 0x130126af0 <col:12> 'struct inode *' <LValueToRValue>     |   `-DeclRefExpr 0x130126a60 <col:12> 'struct inode *' lvalue ParmVar 0x12800e318 'inode' 'struct inode *'     `-IfStmt 0x1301272e8 <line:4:2, line:11:2>       |-BinaryOperator 0x130126d20 <line:4:6, col:39> 'int' contains-errors '&&'       | |-CallExpr 0x130126c40 <col:6, col:17> 'int'       | | |-ImplicitCastExpr 0x130126c28 <col:6> 'int (*)()' <FunctionToPointerDecay>       | | | `-DeclRefExpr 0x130126be8 <col:6> 'int ()' Function 0x130126b30 'is_dx' 'int ()'       | | `-ImplicitCastExpr 0x130126c68 <col:12> 'struct inode *' <LValueToRValue>       | |   `-DeclRefExpr 0x130126c08 <col:12> 'struct inode *' lvalue ParmVar 0x12800e318 'inode' 'struct inode *'       | `-BinaryOperator 0x130126d00 <col:22, col:39> 'int' contains-errors '>'       |   |-RecoveryExpr 0x130126cb8 <col:22, col:29> '<dependent type>' contains-errors lvalue       |   | `-DeclRefExpr 0x130126c80 <col:22> 'struct inode *' lvalue ParmVar 0x12800e318 'inode' 'struct inode *'       |   `-IntegerLiteral 0x130126ce0 <col:39> 'int' 1       `-CompoundStmt 0x1301272d0 <col:42, line:11:2>         `-IfStmt 0x1301272b0 <line:6:3, line:10:3>           |-BinaryOperator 0x130126ed8 <line:6:7, col:60> 'int' contains-errors '||'           | |-BinaryOperator 0x130126eb8 <col:7, col:25> 'int' contains-errors '>='           | | |-RecoveryExpr 0x130126d78 <col:7, col:14> '<dependent type>' contains-errors lvalue           | | | `-DeclRefExpr 0x130126d40 <col:7> 'struct inode *' lvalue ParmVar 0x12800e318 'inode' 'struct inode *'           | | `-RecoveryExpr 0x130126e98 <col:25> '<dependent type>' contains-errors lvalue           | `-BinaryOperator 0x130126e58 <col:42, col:60> 'int' contains-errors '=='           |   |-RecoveryExpr 0x130126e10 <col:42, col:49> '<dependent type>' contains-errors lvalue           |   | `-DeclRefExpr 0x130126dd8 <col:42> 'struct inode *' lvalue ParmVar 0x12800e318 'inode' 'struct inode *'           |   `-IntegerLiteral 0x130126e38 <col:60> 'int' 2           `-CompoundStmt 0x130127290 <col:63, line:10:3>             |-CallExpr 0x130127050 <line:7:4, col:22> 'int'             | |-ImplicitCastExpr 0x130127038 <col:4> 'int (*)()' <FunctionToPointerDecay>             | | `-DeclRefExpr 0x130126fd8 <col:4> 'int ()' Function 0x130126f20 'set_nlink' 'int ()'             | |-ImplicitCastExpr 0x130127080 <col:14> 'struct inode *' <LValueToRValue>             | | `-DeclRefExpr 0x130126ff8 <col:14> 'struct inode *' lvalue ParmVar 0x12800e318 'inode' 'struct inode *'             | `-IntegerLiteral 0x130127018 <col:21> 'int' 1             `-CallExpr 0x130127260 <line:8:4, line:9:44> '<dependent type>' contains-errors               |-DeclRefExpr 0x130127178 <line:8:4> 'int ()' Function 0x1301270c0 'EXT4_SET_RO_COMPAT_FEATURE' 'int ()'               |-RecoveryExpr 0x1301271d0 <col:31, col:38> '<dependent type>' contains-errors lvalue               | `-DeclRefExpr 0x130127198 <col:31> 'struct inode *' lvalue ParmVar 0x12800e318 'inode' 'struct inode *'               `-RecoveryExpr 0x130127240 <line:9:12> '<dependent type>' contains-errors lvalue ","19093":"`-FunctionDecl 0x12d128c88  line:1:14 invalid SelectPrepare 'int (int *, int *)'   |-ParmVarDecl 0x12d128b28 <col:28, col:43> col:43 invalid context 'int *'   |-ParmVarDecl 0x12d128ba8 <col:52, col:64> col:64 invalid node 'int *'   `-CompoundStmt 0x12d1436a0 <col:70, line:53:1>     |-CallExpr 0x12d129118 <line:4:3, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d128f70 <col:3> 'int ()' Function 0x12d128eb8 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x12d128f90 <col:21> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x12d1290d0 <col:30, col:44> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x12d129090 <col:30> 'int ()' Function 0x12d128fd8 'NumInputs' 'int ()'     | | `-RecoveryExpr 0x12d1290b0 <col:40> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x12d1290f8 <col:47> 'int' 3     |-CallExpr 0x12d142340 <line:5:3, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d129150 <col:3> 'int ()' Function 0x12d128eb8 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x12d129170 <col:21> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x12d1422f8 <col:30, col:45> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x12d1422b8 <col:30> 'int ()' Function 0x12d142200 'NumOutputs' 'int ()'     | | `-RecoveryExpr 0x12d1422d8 <col:41> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x12d142320 <col:48> 'int' 1     |-DeclStmt 0x12d142588 <line:7:3, line:8:53>     | `-VarDecl 0x12d142390 <line:7:3, col:23> col:23 invalid input_condition 'const int *'     |-DeclStmt 0x12d1426d0 <line:9:3, col:71>     | `-VarDecl 0x12d1425b8 <col:3, col:23> col:23 invalid input_x 'const int *'     |-DeclStmt 0x12d142818 <line:10:3, col:71>     | `-VarDecl 0x12d142700 <col:3, col:23> col:23 invalid input_y 'const int *'     |-CallExpr 0x12d142c20 <line:15:3, col:64> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d142b10 <col:3> 'int ()' Function 0x12d1429b0 'TF_LITE_ENSURE_TYPES_EQ' 'int ()'     | |-RecoveryExpr 0x12d142b30 <col:27> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x12d142b70 <col:36, col:45> '<dependent type>' contains-errors lvalue ->type     | | `-RecoveryExpr 0x12d142b50 <col:36> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x12d142bd8 <col:51, col:60> '<dependent type>' contains-errors lvalue ->type     |   `-RecoveryExpr 0x12d142bb8 <col:51> '<dependent type>' contains-errors lvalue     `-IfStmt 0x12d1435e8 <line:21:3, line:50:3> has_else       |-RecoveryExpr 0x12d142cc0 <line:21:7, col:8> '_Bool' contains-errors       |-CompoundStmt 0x12d143510 <col:20, line:48:3>       | `-SwitchStmt 0x12d142d00 <line:22:5, line:47:5>       |   |-RecoveryExpr 0x12d142ce0 <line:22:13> 'int' contains-errors       |   `-CompoundStmt 0x12d1434e8 <col:26, line:47:5>       |     |-CompoundStmt 0x12d1431c0 <line:23:25, line:37:7>       |     | |-CallExpr 0x12d143188 <line:35:9, col:65> '<dependent type>' contains-errors       |     | | |-DeclRefExpr 0x12d142fd8 <col:9> 'int ()' Function 0x12d142d50 'TF_LITE_ENSURE' 'int ()'       |     | | |-RecoveryExpr 0x12d142ff8 <col:24> '<dependent type>' contains-errors lvalue       |     | | `-CallExpr 0x12d143158 <col:33, col:64> '<dependent type>' contains-errors       |     | |   |-DeclRefExpr 0x12d1430f8 <col:33> 'int ()' Function 0x12d143040 'HaveSameShapes' 'int ()'       |     | |   |-RecoveryExpr 0x12d143118 <col:48> '<dependent type>' contains-errors lvalue       |     | |   `-RecoveryExpr 0x12d143138 <col:57> '<dependent type>' contains-errors lvalue       |     | `-BreakStmt 0x12d1431b8 <line:36:9>       |     |-CompoundStmt 0x12d1434a8 <line:38:25, line:44:7>       |     | `-BreakStmt 0x12d1434a0 <line:43:9>       |     `-DefaultStmt 0x12d1434c8 <line:45:7, col:14>       |       `-NullStmt 0x12d1434c0 <col:14>       `-CompoundStmt 0x12d1435d8 <line:48:10, line:50:3> ","19909":"`-FunctionDecl 0x13800ddf8  line:1:1 invalid httpGetState 'int (int *)'   |-ParmVarDecl 0x13800dd28 <col:14, col:22> col:22 invalid http 'int *'   `-CompoundStmt 0x13800df78 <line:2:1, line:4:1> ","19185":"`-FunctionDecl 0x151944700  col:8 implicit used realloc 'void *(void *, unsigned long)' extern   |-ParmVarDecl 0x151944800 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x151944868 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-BuiltinAttr 0x1519447a8 <<invalid sloc>> Implicit 872   `-AllocSizeAttr 0x1519448e0 <col:8> Implicit 2 ","19402":"`-FunctionDecl 0x15a82cfe8  line:1:12 invalid rawv6_recvmsg 'int (struct kiocb *, struct sock *, struct msghdr *, int, int, int, int *)' static   |-ParmVarDecl 0x15a03ea48 <col:26, col:40> col:40 iocb 'struct kiocb *'   |-ParmVarDecl 0x15a82ca28 <col:46, col:59> col:59 used sk 'struct sock *'   |-ParmVarDecl 0x15a82cbf8 <line:2:5, col:20> col:20 used msg 'struct msghdr *'   |-ParmVarDecl 0x15a82cc90 <col:25, col:32> col:32 invalid len 'int'   |-ParmVarDecl 0x15a82cd10 <line:3:5, col:9> col:9 used noblock 'int'   |-ParmVarDecl 0x15a82cd90 <col:18, col:22> col:22 used flags 'int'   |-ParmVarDecl 0x15a82ce48 <col:29, col:34> col:34 used addr_len 'int *'   `-CompoundStmt 0x159095768 <line:4:1, line:77:1>     |-DeclStmt 0x15a82d4f8 <line:5:2, col:38>     | |-RecordDecl 0x15a82d0c8 <col:2, col:9> col:9 struct ipv6_pinfo     | `-VarDecl 0x15a82d238 <col:2, col:37> col:21 used np 'struct ipv6_pinfo *' cinit     |   `-ImplicitCastExpr 0x15a82d4c8 <col:26, col:37> 'struct ipv6_pinfo *' <IntegralToPointer>     |     `-CallExpr 0x15a82d488 <col:26, col:37> 'int'     |       |-ImplicitCastExpr 0x15a82d470 <col:26> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x15a82d400 <col:26> 'int ()' Function 0x15a82d348 'inet6_sk' 'int ()'     |       `-ImplicitCastExpr 0x15a82d4b0 <col:35> 'struct sock *' <LValueToRValue>     |         `-DeclRefExpr 0x15a82d420 <col:35> 'struct sock *' lvalue ParmVar 0x15a82ca28 'sk' 'struct sock *'     |-DeclStmt 0x15a82d808 <line:6:2, col:66>     | |-RecordDecl 0x15a82d510 <col:2, col:9> col:9 struct sockaddr_in6     | `-VarDecl 0x15a82d678 <col:2, col:58> col:23 used sin6 'struct sockaddr_in6 *' cinit     |   `-CStyleCastExpr 0x15a82d7c8 <col:30, col:58> 'struct sockaddr_in6 *' contains-errors <Dependent>     |     `-RecoveryExpr 0x15a82d718 <col:53, col:58> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x15a82d6e0 <col:53> 'struct msghdr *' lvalue ParmVar 0x15a82cbf8 'msg' 'struct msghdr *'     |-DeclStmt 0x15a830818 <line:7:2, col:21>     | |-RecordDecl 0x15a82d820 <col:2, col:9> col:9 struct sk_buff     | `-VarDecl 0x15a82d988 <col:2, col:18> col:18 used skb 'struct sk_buff *'     |-UnaryExprOrTypeTraitExpr 0x15a830888 <line:8:2, col:9> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x15a830868 <col:9> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x15a830928 <line:9:2, col:9>     | `-VarDecl 0x15a8308c0 <col:2, col:6> col:6 used err 'int'     |-IfStmt 0x15a830a80 <line:11:2, line:12:11>     | |-BinaryOperator 0x15a8309b8 <line:11:6, col:14> '<dependent type>' contains-errors '&'     | | |-DeclRefExpr 0x15a830940 <col:6> 'int' lvalue ParmVar 0x15a82cd90 'flags' 'int'     | | `-RecoveryExpr 0x15a830998 <col:14> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x15a830a70 <line:12:3, col:11>     |   `-UnaryOperator 0x15a830a58 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x15a830a40 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x15a830a20 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15a830dd8 <line:17:2, line:18:38>     | |-BinaryOperator 0x15a830c10 <line:17:6, col:14> '<dependent type>' contains-errors '&'     | | |-DeclRefExpr 0x15a830b98 <col:6> 'int' lvalue ParmVar 0x15a82cd90 'flags' 'int'     | | `-RecoveryExpr 0x15a830bf0 <col:14> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x15a830dc8 <line:18:3, col:38>     |   `-CallExpr 0x15a830d90 <col:10, col:38> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x15a830d10 <col:10> 'int ()' Function 0x15a830c58 'ipv6_recv_error' 'int ()'     |     |-DeclRefExpr 0x15a830d30 <col:26> 'struct sock *' lvalue ParmVar 0x15a82ca28 'sk' 'struct sock *'     |     |-DeclRefExpr 0x15a830d50 <col:30> 'struct msghdr *' lvalue ParmVar 0x15a82cbf8 'msg' 'struct msghdr *'     |     `-RecoveryExpr 0x15a830d70 <col:35> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15a831110 <line:20:2, line:21:39>     | |-BinaryOperator 0x15a830f48 <line:20:6, col:35> 'int' contains-errors '&&'     | | |-RecoveryExpr 0x15a830e30 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x15a830df8 <col:6> 'struct ipv6_pinfo *' lvalue Var 0x15a82d238 'np' 'struct ipv6_pinfo *'     | | `-CXXDependentScopeMemberExpr 0x15a830f00 <col:20, col:35> '<dependent type>' contains-errors lvalue .rxpmtu     | |   `-CXXDependentScopeMemberExpr 0x15a830eb8 <col:20, col:30> '<dependent type>' contains-errors lvalue .bits     | |     `-RecoveryExpr 0x15a830e90 <col:20, col:24> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x15a830e58 <col:20> 'struct ipv6_pinfo *' lvalue Var 0x15a82d238 'np' 'struct ipv6_pinfo *'     | `-ReturnStmt 0x15a831100 <line:21:3, col:39>     |   `-CallExpr 0x15a8310c8 <col:10, col:39> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x15a831048 <col:10> 'int ()' Function 0x15a830f90 'ipv6_recv_rxpmtu' 'int ()'     |     |-DeclRefExpr 0x15a831068 <col:27> 'struct sock *' lvalue ParmVar 0x15a82ca28 'sk' 'struct sock *'     |     |-DeclRefExpr 0x15a831088 <col:31> 'struct msghdr *' lvalue ParmVar 0x15a82cbf8 'msg' 'struct msghdr *'     |     `-RecoveryExpr 0x15a8310a8 <col:36> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x15a8313a0 <line:23:2, col:50> 'struct sk_buff *' '='     | |-DeclRefExpr 0x15a831130 <col:2> 'struct sk_buff *' lvalue Var 0x15a82d988 'skb' 'struct sk_buff *'     | `-ImplicitCastExpr 0x15a831388 <col:8, col:50> 'struct sk_buff *' <IntegralToPointer>     |   `-CallExpr 0x15a831300 <col:8, col:50> 'int'     |     |-ImplicitCastExpr 0x15a8312e8 <col:8> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x15a831230 <col:8> 'int ()' Function 0x15a831178 'skb_recv_datagram' 'int ()'     |     |-ImplicitCastExpr 0x15a831340 <col:26> 'struct sock *' <LValueToRValue>     |     | `-DeclRefExpr 0x15a831250 <col:26> 'struct sock *' lvalue ParmVar 0x15a82ca28 'sk' 'struct sock *'     |     |-ImplicitCastExpr 0x15a831358 <col:30> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x15a831270 <col:30> 'int' lvalue ParmVar 0x15a82cd90 'flags' 'int'     |     |-ImplicitCastExpr 0x15a831370 <col:37> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x15a831290 <col:37> 'int' lvalue ParmVar 0x15a82cd10 'noblock' 'int'     |     `-UnaryOperator 0x15a8312d0 <col:46, col:47> 'int *' prefix '&' cannot overflow     |       `-DeclRefExpr 0x15a8312b0 <col:47> 'int' lvalue Var 0x15a8308c0 'err' 'int'     |-IfStmt 0x15a831478 <line:24:2, line:25:8>     | |-UnaryOperator 0x15a8313f8 <line:24:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x15a8313e0 <col:7> 'struct sk_buff *' <LValueToRValue>     | |   `-DeclRefExpr 0x15a8313c0 <col:7> 'struct sk_buff *' lvalue Var 0x15a82d988 'skb' 'struct sk_buff *'     | `-GotoStmt 0x15a831460 <line:25:3, col:8> 'out' 0x15a831410     |-IfStmt 0x15a831620 <line:28:2, line:31:2>     | |-BinaryOperator 0x15a831570 <line:28:6, col:15> 'int' contains-errors '>'     | | |-RecoveryExpr 0x15a831550 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x15a831510 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x15a831610 <col:20, line:31:2>     |-IfStmt 0x1590943e0 <line:33:2, line:43:2> has_else     | |-CallExpr 0x15a831778 <line:33:6, col:30> 'int'     | | |-ImplicitCastExpr 0x15a831760 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x15a831720 <col:6> 'int ()' Function 0x15a831668 'skb_csum_unnecessary' 'int ()'     | | `-ImplicitCastExpr 0x15a8317a0 <col:27> 'struct sk_buff *' <LValueToRValue>     | |   `-DeclRefExpr 0x15a831740 <col:27> 'struct sk_buff *' lvalue Var 0x15a82d988 'skb' 'struct sk_buff *'     | |-CompoundStmt 0x159093d78 <col:33, line:35:2>     | `-IfStmt 0x1590943b0 <col:9, line:43:2> has_else     |   |-RecoveryExpr 0x159093de8 <line:35:13, col:28> '_Bool' contains-errors     |   |-CompoundStmt 0x1590940e8 <col:39, line:39:2>     |   | `-IfStmt 0x159093fe8 <line:36:3, line:37:9>     |   |   |-CallExpr 0x159093f40 <line:36:7, col:34> 'int'     |   |   | |-ImplicitCastExpr 0x159093f28 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x159093ee8 <col:7> 'int ()' Function 0x159093e30 '__skb_checksum_complete' 'int ()'     |   |   | `-ImplicitCastExpr 0x159093f68 <col:31> 'struct sk_buff *' <LValueToRValue>     |   |   |   `-DeclRefExpr 0x159093f08 <col:31> 'struct sk_buff *' lvalue Var 0x15a82d988 'skb' 'struct sk_buff *'     |   |   `-GotoStmt 0x159093fd0 <line:37:4, col:9> 'csum_copy_err' 0x159093f80     |   `-CompoundStmt 0x159094390 <line:39:9, line:43:2>     |     |-BinaryOperator 0x1590942f8 <line:40:3, col:62> 'int' contains-errors '='     |     | |-DeclRefExpr 0x159094100 <col:3> 'int' lvalue Var 0x15a8308c0 'err' 'int'     |     | `-CallExpr 0x1590942c0 <col:9, col:62> '<dependent type>' contains-errors     |     |   |-DeclRefExpr 0x159094200 <col:9> 'int ()' Function 0x159094148 'skb_copy_and_csum_datagram_iovec' 'int ()'     |     |   |-DeclRefExpr 0x159094220 <col:42> 'struct sk_buff *' lvalue Var 0x15a82d988 'skb' 'struct sk_buff *'     |     |   |-IntegerLiteral 0x159094240 <col:47> 'int' 0     |     |   `-RecoveryExpr 0x159094298 <col:50, col:55> '<dependent type>' contains-errors lvalue     |     |     `-DeclRefExpr 0x159094260 <col:50> 'struct msghdr *' lvalue ParmVar 0x15a82cbf8 'msg' 'struct msghdr *'     |     `-IfStmt 0x159094370 <line:41:3, line:42:9>     |       |-RecoveryExpr 0x159094338 <line:41:7, col:15> '_Bool' contains-errors     |       `-GotoStmt 0x159094358 <line:42:4, col:9> 'csum_copy_err' 0x159093f80     |-IfStmt 0x1590944b0 <line:44:2, line:45:8>     | |-ImplicitCastExpr 0x159094430 <line:44:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x159094410 <col:6> 'int' lvalue Var 0x15a8308c0 'err' 'int'     | `-GotoStmt 0x159094498 <line:45:3, col:8> 'out_free' 0x159094448     |-IfStmt 0x159094cc0 <line:48:2, line:55:2>     | |-ImplicitCastExpr 0x1590944f0 <line:48:6> 'struct sockaddr_in6 *' contains-errors <LValueToRValue>     | | `-DeclRefExpr 0x1590944d0 <col:6> 'struct sockaddr_in6 *' contains-errors lvalue Var 0x15a82d678 'sin6' 'struct sockaddr_in6 *'     | `-CompoundStmt 0x159094c90 <col:12, line:55:2>     |   |-BinaryOperator 0x1590945e8 <line:50:3, col:21> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x1590945a0 <col:3, col:9> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x159094568 <col:3> 'struct sockaddr_in6 *' contains-errors lvalue Var 0x15a82d678 'sin6' 'struct sockaddr_in6 *'     |   | `-IntegerLiteral 0x1590945c8 <col:21> 'int' 0     |   |-BinaryOperator 0x159094808 <line:51:3, col:36> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x159094640 <col:3, col:9> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x159094608 <col:3> 'struct sockaddr_in6 *' contains-errors lvalue Var 0x15a82d678 'sin6' 'struct sockaddr_in6 *'     |   | `-RecoveryExpr 0x1590947e0 <col:21, col:36> '<dependent type>' contains-errors lvalue     |   |   `-CallExpr 0x1590947a0 <col:21, col:33> 'int'     |   |     |-ImplicitCastExpr 0x159094788 <col:21> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x159094748 <col:21> 'int ()' Function 0x159094690 'ipv6_hdr' 'int ()'     |   |     `-ImplicitCastExpr 0x1590947c8 <col:30> 'struct sk_buff *' <LValueToRValue>     |   |       `-DeclRefExpr 0x159094768 <col:30> 'struct sk_buff *' lvalue Var 0x15a82d988 'skb' 'struct sk_buff *'     |   |-BinaryOperator 0x1590948a8 <line:52:3, col:25> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x159094860 <col:3, col:9> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x159094828 <col:3> 'struct sockaddr_in6 *' contains-errors lvalue Var 0x15a82d678 'sin6' 'struct sockaddr_in6 *'     |   | `-IntegerLiteral 0x159094888 <col:25> 'int' 0     |   `-BinaryOperator 0x159094c70 <line:53:3, line:54:25> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x159094900 <line:53:3, col:9> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x1590948c8 <col:3> 'struct sockaddr_in6 *' contains-errors lvalue Var 0x15a82d678 'sin6' 'struct sockaddr_in6 *'     |     `-CallExpr 0x159094c40 <col:25, line:54:25> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x159094a08 <line:53:25> 'int ()' Function 0x159094950 'ipv6_iface_scope_id' 'int ()'     |       |-UnaryOperator 0x159094a88 <col:45, col:52> '<dependent type>' contains-errors prefix '&' cannot overflow     |       | `-RecoveryExpr 0x159094a60 <col:46, col:52> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x159094a28 <col:46> 'struct sockaddr_in6 *' contains-errors lvalue Var 0x15a82d678 'sin6' 'struct sockaddr_in6 *'     |       `-RecoveryExpr 0x159094c18 <line:54:10, col:22> '<dependent type>' contains-errors lvalue     |         `-CallExpr 0x159094bd8 <col:10, col:19> 'int'     |           |-ImplicitCastExpr 0x159094bc0 <col:10> 'int (*)()' <FunctionToPointerDecay>     |           | `-DeclRefExpr 0x159094b80 <col:10> 'int ()' Function 0x159094ac8 'IP6CB' 'int ()'     |           `-ImplicitCastExpr 0x159094c00 <col:16> 'struct sk_buff *' <LValueToRValue>     |             `-DeclRefExpr 0x159094ba0 <col:16> 'struct sk_buff *' lvalue Var 0x15a82d988 'skb' 'struct sk_buff *'     |-CallExpr 0x159094e58 <line:57:2, col:37> 'int'     | |-ImplicitCastExpr 0x159094e40 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x159094dc0 <col:2> 'int ()' Function 0x159094d08 'sock_recv_ts_and_drops' 'int ()'     | |-ImplicitCastExpr 0x159094e90 <col:25> 'struct msghdr *' <LValueToRValue>     | | `-DeclRefExpr 0x159094de0 <col:25> 'struct msghdr *' lvalue ParmVar 0x15a82cbf8 'msg' 'struct msghdr *'     | |-ImplicitCastExpr 0x159094ea8 <col:30> 'struct sock *' <LValueToRValue>     | | `-DeclRefExpr 0x159094e00 <col:30> 'struct sock *' lvalue ParmVar 0x15a82ca28 'sk' 'struct sock *'     | `-ImplicitCastExpr 0x159094ec0 <col:34> 'struct sk_buff *' <LValueToRValue>     |   `-DeclRefExpr 0x159094e20 <col:34> 'struct sk_buff *' lvalue Var 0x15a82d988 'skb' 'struct sk_buff *'     |-IfStmt 0x159095178 <line:59:2, line:60:37>     | |-CXXDependentScopeMemberExpr 0x159094f38 <line:59:6, col:16> '<dependent type>' contains-errors lvalue .all     | | `-RecoveryExpr 0x159094f10 <col:6, col:10> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x159094ed8 <col:6> 'struct ipv6_pinfo *' lvalue Var 0x15a82d238 'np' 'struct ipv6_pinfo *'     | `-CallExpr 0x1590950f8 <line:60:3, col:37> 'int'     |   |-ImplicitCastExpr 0x1590950e0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x159095060 <col:3> 'int ()' Function 0x159094fa8 'ip6_datagram_recv_ctl' 'int ()'     |   |-ImplicitCastExpr 0x159095130 <col:25> 'struct sock *' <LValueToRValue>     |   | `-DeclRefExpr 0x159095080 <col:25> 'struct sock *' lvalue ParmVar 0x15a82ca28 'sk' 'struct sock *'     |   |-ImplicitCastExpr 0x159095148 <col:29> 'struct msghdr *' <LValueToRValue>     |   | `-DeclRefExpr 0x1590950a0 <col:29> 'struct msghdr *' lvalue ParmVar 0x15a82cbf8 'msg' 'struct msghdr *'     |   `-ImplicitCastExpr 0x159095160 <col:34> 'struct sk_buff *' <LValueToRValue>     |     `-DeclRefExpr 0x1590950c0 <col:34> 'struct sk_buff *' lvalue Var 0x15a82d988 'skb' 'struct sk_buff *'     |-IfStmt 0x159095298 <line:63:2, line:64:14>     | |-RecoveryExpr 0x1590951d8 <line:63:6, col:14> '_Bool' contains-errors     | `-BinaryOperator 0x159095278 <line:64:3, col:14> 'int' contains-errors '='     |   |-DeclRefExpr 0x1590951f8 <col:3> 'int' lvalue Var 0x15a8308c0 'err' 'int'     |   `-RecoveryExpr 0x159095250 <col:9, col:14> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x159095218 <col:9> 'struct sk_buff *' lvalue Var 0x15a82d988 'skb' 'struct sk_buff *'     |-LabelStmt 0x159095470 <line:66:1, line:67:27> 'out_free'     | `-CallExpr 0x159095410 <col:2, col:27> 'int'     |   |-ImplicitCastExpr 0x1590953f8 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x159095398 <col:2> 'int ()' Function 0x1590952e0 'skb_free_datagram' 'int ()'     |   |-ImplicitCastExpr 0x159095440 <col:20> 'struct sock *' <LValueToRValue>     |   | `-DeclRefExpr 0x1590953b8 <col:20> 'struct sock *' lvalue ParmVar 0x15a82ca28 'sk' 'struct sock *'     |   `-ImplicitCastExpr 0x159095458 <col:24> 'struct sk_buff *' <LValueToRValue>     |     `-DeclRefExpr 0x1590953d8 <col:24> 'struct sk_buff *' lvalue Var 0x15a82d988 'skb' 'struct sk_buff *'     |-LabelStmt 0x1590954d8 <line:68:1, line:69:9> 'out'     | `-ReturnStmt 0x1590954c8 <col:2, col:9>     |   `-ImplicitCastExpr 0x1590954b0 <col:9> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x159095490 <col:9> 'int' lvalue Var 0x15a8308c0 'err' 'int'     |-LabelStmt 0x1590956f0 <line:71:1, line:72:34> 'csum_copy_err'     | `-CallExpr 0x159095670 <col:2, col:34> 'int'     |   |-ImplicitCastExpr 0x159095658 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1590955d8 <col:2> 'int ()' Function 0x159095520 'skb_kill_datagram' 'int ()'     |   |-ImplicitCastExpr 0x1590956a8 <col:20> 'struct sock *' <LValueToRValue>     |   | `-DeclRefExpr 0x1590955f8 <col:20> 'struct sock *' lvalue ParmVar 0x15a82ca28 'sk' 'struct sock *'     |   |-ImplicitCastExpr 0x1590956c0 <col:24> 'struct sk_buff *' <LValueToRValue>     |   | `-DeclRefExpr 0x159095618 <col:24> 'struct sk_buff *' lvalue Var 0x15a82d988 'skb' 'struct sk_buff *'     |   `-ImplicitCastExpr 0x1590956d8 <col:29> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x159095638 <col:29> 'int' lvalue ParmVar 0x15a82cd90 'flags' 'int'     `-GotoStmt 0x159095750 <line:76:2, col:7> 'out' 0x15a831410 ","19354":"`-FunctionDecl 0x13a928618  line:1:1 invalid virDomainMigratePrepare 'int (int, char **, int *, const char *, char **, unsigned long, const char *, unsigned long)'   |-ParmVarDecl 0x13a9280f0 <col:25, col:39> col:39 invalid dconn 'int'   |-ParmVarDecl 0x13a9281a8 <line:2:25, col:32> col:32 used cookie 'char **'   |-ParmVarDecl 0x13a928258 <line:3:25, col:30> col:30 used cookielen 'int *'   |-ParmVarDecl 0x13a9282d8 <line:4:25, col:37> col:37 used uri_in 'const char *'   |-ParmVarDecl 0x13a928358 <line:5:25, col:32> col:32 used uri_out 'char **'   |-ParmVarDecl 0x13a9283d8 <line:6:25, col:39> col:39 used flags 'unsigned long'   |-ParmVarDecl 0x13a928458 <line:7:25, col:37> col:37 used dname 'const char *'   |-ParmVarDecl 0x13a9284d8 <line:8:25, col:39> col:39 used bandwidth 'unsigned long'   `-CompoundStmt 0x13a9433b0 <line:9:1, line:34:1>     |-CallExpr 0x13a941c50 <line:10:5, line:12:73> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13a9418b8 <line:10:5> 'int ()' Function 0x13a941800 'VIR_DEBUG' 'int ()'     | |-StringLiteral 0x13a941920 <col:15, line:11:15> 'char[7]' lvalue \"STRSTR\"     | |-RecoveryExpr 0x13a941948 <col:22> '<dependent type>' contains-errors lvalue     | |-DeclRefExpr 0x13a941968 <col:29> 'char **' lvalue ParmVar 0x13a9281a8 'cookie' 'char **'     | |-DeclRefExpr 0x13a941988 <col:37> 'int *' lvalue ParmVar 0x13a928258 'cookielen' 'int *'     | |-CallExpr 0x13a941b18 <line:12:15, col:29> 'int'     | | |-ImplicitCastExpr 0x13a941b00 <col:15> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x13a941a88 <col:15> 'int ()' Function 0x13a9419d0 'NULLSTR' 'int ()'     | | `-ImplicitCastExpr 0x13a941b40 <col:23> 'const char *' <LValueToRValue>     | |   `-DeclRefExpr 0x13a941aa8 <col:23> 'const char *' lvalue ParmVar 0x13a9282d8 'uri_in' 'const char *'     | |-DeclRefExpr 0x13a941b58 <col:32> 'char **' lvalue ParmVar 0x13a928358 'uri_out' 'char **'     | |-DeclRefExpr 0x13a941b78 <col:41> 'unsigned long' lvalue ParmVar 0x13a9283d8 'flags' 'unsigned long'     | |-CallExpr 0x13a941bf0 <col:48, col:61> 'int'     | | |-ImplicitCastExpr 0x13a941bd8 <col:48> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x13a941b98 <col:48> 'int ()' Function 0x13a9419d0 'NULLSTR' 'int ()'     | | `-ImplicitCastExpr 0x13a941c18 <col:56> 'const char *' <LValueToRValue>     | |   `-DeclRefExpr 0x13a941bb8 <col:56> 'const char *' lvalue ParmVar 0x13a928458 'dname' 'const char *'     | `-DeclRefExpr 0x13a941c30 <col:64> 'unsigned long' lvalue ParmVar 0x13a9284d8 'bandwidth' 'unsigned long'     |-CallExpr 0x13a941dd0 <line:14:5, col:23> 'int'     | `-ImplicitCastExpr 0x13a941db8 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x13a941d98 <col:5> 'int ()' Function 0x13a941ce0 'virResetLastError' 'int ()'     |-CallExpr 0x13a941f48 <line:16:5, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13a941ed0 <col:5> 'int ()' Function 0x13a941e18 'virCheckConnectReturn' 'int ()'     | |-RecoveryExpr 0x13a941ef0 <col:27> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x13a941f30 <col:34, col:35> 'int' prefix '-'     |   `-IntegerLiteral 0x13a941f10 <col:35> 'int' 1     |-CallExpr 0x13a942148 <line:17:5, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13a942058 <col:5> 'int ()' Function 0x13a941fa0 'virCheckReadOnlyGoto' 'int ()'     | |-CXXDependentScopeMemberExpr 0x13a942098 <col:26, col:33> '<dependent type>' contains-errors lvalue ->flags     | | `-RecoveryExpr 0x13a942078 <col:26> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x13a942128 <col:40> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13a942688 <line:19:5, line:27:5>     | |-CXXDependentScopeMemberExpr 0x13a9421e0 <line:19:9, col:24> '<dependent type>' contains-errors lvalue ->domainMigratePrepare     | | `-CXXDependentScopeMemberExpr 0x13a942198 <col:9, col:16> '<dependent type>' contains-errors lvalue ->driver     | |   `-RecoveryExpr 0x13a942178 <col:9> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13a942658 <col:46, line:27:5>     |   |-DeclStmt 0x13a9422a8 <line:20:9, col:16>     |   | `-VarDecl 0x13a942240 <col:9, col:13> col:13 used ret 'int'     |   |-BinaryOperator 0x13a9424f0 <line:21:9, line:23:74> 'int' contains-errors '='     |   | |-DeclRefExpr 0x13a9422c0 <line:21:9> 'int' lvalue Var 0x13a942240 'ret' 'int'     |   | `-CallExpr 0x13a942490 <col:15, line:23:74> '<dependent type>' contains-errors     |   |   |-CXXDependentScopeMemberExpr 0x13a942348 <line:21:15, col:30> '<dependent type>' contains-errors lvalue ->domainMigratePrepare     |   |   | `-CXXDependentScopeMemberExpr 0x13a942300 <col:15, col:22> '<dependent type>' contains-errors lvalue ->driver     |   |   |   `-RecoveryExpr 0x13a9422e0 <col:15> '<dependent type>' contains-errors lvalue     |   |   |-RecoveryExpr 0x13a942390 <col:51> '<dependent type>' contains-errors lvalue     |   |   |-DeclRefExpr 0x13a9423b0 <col:58> 'char **' lvalue ParmVar 0x13a9281a8 'cookie' 'char **'     |   |   |-DeclRefExpr 0x13a9423d0 <col:66> 'int *' lvalue ParmVar 0x13a928258 'cookielen' 'int *'     |   |   |-DeclRefExpr 0x13a9423f0 <line:22:51> 'const char *' lvalue ParmVar 0x13a9282d8 'uri_in' 'const char *'     |   |   |-DeclRefExpr 0x13a942410 <col:59> 'char **' lvalue ParmVar 0x13a928358 'uri_out' 'char **'     |   |   |-DeclRefExpr 0x13a942430 <line:23:51> 'unsigned long' lvalue ParmVar 0x13a9283d8 'flags' 'unsigned long'     |   |   |-DeclRefExpr 0x13a942450 <col:58> 'const char *' lvalue ParmVar 0x13a928458 'dname' 'const char *'     |   |   `-DeclRefExpr 0x13a942470 <col:65> 'unsigned long' lvalue ParmVar 0x13a9284d8 'bandwidth' 'unsigned long'     |   |-IfStmt 0x13a9425f0 <line:24:9, line:25:18>     |   | |-BinaryOperator 0x13a942568 <line:24:13, col:19> 'int' '<'     |   | | |-ImplicitCastExpr 0x13a942550 <col:13> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x13a942510 <col:13> 'int' lvalue Var 0x13a942240 'ret' 'int'     |   | | `-IntegerLiteral 0x13a942530 <col:19> 'int' 0     |   | `-GotoStmt 0x13a9425d8 <line:25:13, col:18> 'error' 0x13a942588     |   `-ReturnStmt 0x13a942648 <line:26:9, col:16>     |     `-ImplicitCastExpr 0x13a942630 <col:16> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x13a942610 <col:16> 'int' lvalue Var 0x13a942240 'ret' 'int'     |-CallExpr 0x13a9427c0 <line:29:5, col:31> 'int'     | `-ImplicitCastExpr 0x13a9427a8 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x13a942788 <col:5> 'int ()' Function 0x13a9426d0 'virReportUnsupportedError' 'int ()'     |-LabelStmt 0x13a943348 <line:31:2, line:32:27> 'error'     | `-CallExpr 0x13a943320 <col:5, col:27> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13a9432e0 <col:5> 'int ()' Function 0x13a943228 'virDispatchError' 'int ()'     |   `-RecoveryExpr 0x13a943300 <col:22> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x13a9433a0 <line:33:5, col:13>       `-UnaryOperator 0x13a943388 <col:12, col:13> 'int' prefix '-'         `-IntegerLiteral 0x13a943368 <col:13> 'int' 1 ","19740":"`-FunctionDecl 0x12400de08  line:1:3 invalid RuntimeShape 'int (const int)'   |-ParmVarDecl 0x12400dcf0 <col:16, <invalid sloc>> col:34 invalid 'const int'   `-CompoundStmt 0x12400dfa0 <col:76, line:6:3>     |-IfStmt 0x12400df30 <line:2:5, line:4:5>     | |-RecoveryExpr 0x12400dee8 <line:2:9, col:17> '_Bool' contains-errors     | `-CompoundStmt 0x12400df20 <col:32, line:4:5>     `-RecoveryExpr 0x12400df80 <line:5:5> '<dependent type>' contains-errors lvalue ","19575":"`-FunctionDecl 0x128928758  line:1:12 alloc_apic_access_page 'int (struct kvm *)' static   |-ParmVarDecl 0x128928648 <col:35, col:47> col:47 used kvm 'struct kvm *'   `-CompoundStmt 0x12a009068 <line:2:1, line:21:1>     |-DeclStmt 0x128944dc8 <line:3:2, col:54>     | |-RecordDecl 0x128944c50 <col:2, col:9> col:9 struct kvm_userspace_memory_region     | `-VarDecl 0x128944d48 <col:2, col:37> col:37 referenced invalid kvm_userspace_mem 'struct kvm_userspace_memory_region'     |-DeclStmt 0x128944e80 <line:4:2, col:11>     | `-VarDecl 0x128944df8 <col:2, col:10> col:6 used r 'int' cinit     |   `-IntegerLiteral 0x128944e60 <col:10> 'int' 0     |-CallExpr 0x128945058 <line:6:2, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x128944fc0 <col:2> 'int ()' Function 0x128944f08 'down_write' 'int ()'     | `-UnaryOperator 0x128945040 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x128945018 <col:14, col:19> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x128944fe0 <col:14> 'struct kvm *' lvalue ParmVar 0x128928648 'kvm' 'struct kvm *'     |-IfStmt 0x128945190 <line:7:2, line:8:8>     | |-CXXDependentScopeMemberExpr 0x1289450e0 <line:7:6, col:16> '<dependent type>' contains-errors lvalue .apic_access_page     | | `-RecoveryExpr 0x1289450b8 <col:6, col:11> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x128945080 <col:6> 'struct kvm *' lvalue ParmVar 0x128928648 'kvm' 'struct kvm *'     | `-GotoStmt 0x128945178 <line:8:3, col:8> 'out' 0x128945128     |-BinaryOperator 0x128945298 <line:9:2, col:27> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1289451f8 <col:2, col:20> '<dependent type>' contains-errors lvalue .slot     | | `-RecoveryExpr 0x1289451d0 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1289451b0 <col:2> 'struct kvm_userspace_memory_region' lvalue Var 0x128944d48 'kvm_userspace_mem' 'struct kvm_userspace_memory_region'     | `-RecoveryExpr 0x128945278 <col:27> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x128945368 <line:10:2, col:28> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x128945300 <col:2, col:20> '<dependent type>' contains-errors lvalue .flags     | | `-RecoveryExpr 0x1289452d8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1289452b8 <col:2> 'struct kvm_userspace_memory_region' lvalue Var 0x128944d48 'kvm_userspace_mem' 'struct kvm_userspace_memory_region'     | `-IntegerLiteral 0x128945348 <col:28> 'int' 0     |-BinaryOperator 0x128945438 <line:11:2, col:38> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1289453d0 <col:2, col:20> '<dependent type>' contains-errors lvalue .guest_phys_addr     | | `-RecoveryExpr 0x1289453a8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x128945388 <col:2> 'struct kvm_userspace_memory_region' lvalue Var 0x128944d48 'kvm_userspace_mem' 'struct kvm_userspace_memory_region'     | `-IntegerLiteral 0x128945418 <col:38> 'unsigned long long' 4276092928     |-BinaryOperator 0x128945540 <line:12:2, col:34> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1289454a0 <col:2, col:20> '<dependent type>' contains-errors lvalue .memory_size     | | `-RecoveryExpr 0x128945478 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x128945458 <col:2> 'struct kvm_userspace_memory_region' lvalue Var 0x128944d48 'kvm_userspace_mem' 'struct kvm_userspace_memory_region'     | `-RecoveryExpr 0x128945520 <col:34> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x128945730 <line:13:2, col:56> 'int' contains-errors '='     | |-DeclRefExpr 0x128945560 <col:2> 'int' lvalue Var 0x128944df8 'r' 'int'     | `-CallExpr 0x1289456f8 <col:6, col:56> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x128945660 <col:6> 'int ()' Function 0x1289455a8 '__kvm_set_memory_region' 'int ()'     |   |-DeclRefExpr 0x128945680 <col:30> 'struct kvm *' lvalue ParmVar 0x128928648 'kvm' 'struct kvm *'     |   |-UnaryOperator 0x1289456c0 <col:35, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x1289456a0 <col:36> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x1289456d8 <col:55> 'int' 0     |-IfStmt 0x1289457a0 <line:14:2, line:15:8>     | |-ImplicitCastExpr 0x128945770 <line:14:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x128945750 <col:6> 'int' lvalue Var 0x128944df8 'r' 'int'     | `-GotoStmt 0x128945788 <line:15:3, col:8> 'out' 0x128945128     |-BinaryOperator 0x128945a40 <line:17:2, col:55> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x128945820 <col:2, col:12> '<dependent type>' contains-errors lvalue .apic_access_page     | | `-RecoveryExpr 0x1289457f8 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1289457c0 <col:2> 'struct kvm *' lvalue ParmVar 0x128928648 'kvm' 'struct kvm *'     | `-CallExpr 0x1289459f8 <col:31, col:55> 'int'     |   |-ImplicitCastExpr 0x1289459e0 <col:31> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x128945948 <col:31> 'int ()' Function 0x128945890 'gfn_to_page' 'int ()'     |   |-ImplicitCastExpr 0x128945a28 <col:43> 'struct kvm *' <LValueToRValue>     |   | `-DeclRefExpr 0x128945968 <col:43> 'struct kvm *' lvalue ParmVar 0x128928648 'kvm' 'struct kvm *'     |   `-IntegerLiteral 0x128945988 <col:48> 'int' 1043968     |-LabelStmt 0x12a009000 <line:18:1, line:19:27> 'out'     | `-CallExpr 0x128945bd8 <col:2, col:27> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x128945b40 <col:2> 'int ()' Function 0x128945a88 'up_write' 'int ()'     |   `-UnaryOperator 0x128945bc0 <col:11, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x128945b98 <col:12, col:17> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x128945b60 <col:12> 'struct kvm *' lvalue ParmVar 0x128928648 'kvm' 'struct kvm *'     `-ReturnStmt 0x12a009058 <line:20:2, col:9>       `-ImplicitCastExpr 0x12a009040 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x12a009020 <col:9> 'int' lvalue Var 0x128944df8 'r' 'int' ","20020":"`-FunctionDecl 0x1280093f8  col:3 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x1280094f8 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x1280094a0 <<invalid sloc>> Implicit 873 ","19069":"`-FunctionDecl 0x13c140ab8  line:1:28 find_chunk 'struct audit_chunk *(struct node *)' static   |-ParmVarDecl 0x13c1286e8 <col:39, col:52> col:52 used p 'struct node *'   `-CompoundStmt 0x13c140fa8 <line:2:1, line:6:1>     |-DeclStmt 0x13c140d48 <line:3:2, col:34>     | `-VarDecl 0x13c140bc8 <col:2, col:33> col:6 used index 'int' cinit     |   `-BinaryOperator 0x13c140d28 <col:14, col:33> '<dependent type>' contains-errors '&'     |     |-RecoveryExpr 0x13c140c68 <col:14, col:17> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x13c140c30 <col:14> 'struct node *' lvalue ParmVar 0x13c1286e8 'p' 'struct node *'     |     `-UnaryOperator 0x13c140d10 <col:25, col:33> 'unsigned int' prefix '~' cannot overflow     |       `-ParenExpr 0x13c140cf0 <col:26, col:33> 'unsigned int'     |         `-BinaryOperator 0x13c140cd0 <col:27, col:31> 'unsigned int' '<<'     |           |-IntegerLiteral 0x13c140c90 <col:27> 'unsigned int' 1     |           `-IntegerLiteral 0x13c140cb0 <col:31> 'int' 31     `-ImplicitCastExpr 0x13c140de8 <line:4:2, col:7> '<dependent type>' contains-errors <LValueToRValue>       `-RecoveryExpr 0x13c140db8 <col:2, col:7> '<dependent type>' contains-errors lvalue         |-DeclRefExpr 0x13c140d60 <col:2> 'struct node *' lvalue ParmVar 0x13c1286e8 'p' 'struct node *'         `-DeclRefExpr 0x13c140d80 <col:7> 'int' contains-errors lvalue Var 0x13c140bc8 'index' 'int' ","19279":"`-FunctionDecl 0x1499424b8  col:3 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x1499425b8 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x149942560 <<invalid sloc>> Implicit 873 ","20116":"`-FunctionDecl 0x1591325d0  col:3 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x1591326d0 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x159132678 <<invalid sloc>> Implicit 873 ","19201":"`-FunctionDecl 0x13f940e38  line:1:5 propagate_mnt 'int (struct mount *, struct dentry *, struct mount *, struct list_head *)'   |-ParmVarDecl 0x13f928648 <col:19, col:33> col:33 used dest_mnt 'struct mount *'   |-ParmVarDecl 0x13f940a28 <col:43, col:58> col:58 used dest_dentry 'struct dentry *'   |-ParmVarDecl 0x13f940b18 <line:2:7, col:21> col:21 used source_mnt 'struct mount *'   |-ParmVarDecl 0x13f940ce8 <col:33, col:51> col:51 used tree_list 'struct list_head *'   `-CompoundStmt 0x13f944b30 <line:3:1, line:47:1>     |-DeclStmt 0x13f941080 <line:4:2, col:25>     | |-VarDecl 0x13f940f70 <col:2, col:16> col:16 used m 'struct mount *'     | `-VarDecl 0x13f941000 <col:2, col:20> col:20 used child 'struct mount *'     |-DeclStmt 0x13f941138 <line:5:2, col:13>     | `-VarDecl 0x13f9410b0 <col:2, col:12> col:6 used ret 'int' cinit     |   `-IntegerLiteral 0x13f941118 <col:12> 'int' 0     |-DeclStmt 0x13f941218 <line:6:2, col:40>     | `-VarDecl 0x13f941178 <col:2, col:32> col:16 used prev_dest_mnt 'struct mount *' cinit     |   `-ImplicitCastExpr 0x13f941200 <col:32> 'struct mount *' <LValueToRValue>     |     `-DeclRefExpr 0x13f9411e0 <col:32> 'struct mount *' lvalue ParmVar 0x13f928648 'dest_mnt' 'struct mount *'     |-DeclStmt 0x13f9412f8 <line:7:2, col:42>     | `-VarDecl 0x13f941258 <col:2, col:32> col:16 used prev_src_mnt 'struct mount *' cinit     |   `-ImplicitCastExpr 0x13f9412e0 <col:32> 'struct mount *' <LValueToRValue>     |     `-DeclRefExpr 0x13f9412c0 <col:32> 'struct mount *' lvalue ParmVar 0x13f940b18 'source_mnt' 'struct mount *'     |-CallExpr 0x13f941508 <line:8:2, col:20> 'int'     | |-ImplicitCastExpr 0x13f9414f0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13f941440 <col:2> 'int ()' Function 0x13f941388 'LIST_HEAD' 'int ()'     | `-ImplicitCastExpr 0x13f941530 <col:12> 'struct list_head *' <LValueToRValue>     |   `-DeclRefExpr 0x13f9414a0 <col:12> 'struct list_head *' lvalue ParmVar 0x13f940ce8 'tree_list' 'struct list_head *'     |-CallExpr 0x13f9415c8 <line:9:2, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13f941548 <col:2> 'int ()' Function 0x13f941388 'LIST_HEAD' 'int ()'     | `-RecoveryExpr 0x13f9415a8 <col:12> '<dependent type>' contains-errors lvalue     |-ForStmt 0x13f9443d8 <line:11:2, line:37:2>     | |-BinaryOperator 0x13f9417e0 <line:11:7, col:46> 'struct mount *' '='     | | |-DeclRefExpr 0x13f9415f0 <col:7> 'struct mount *' lvalue Var 0x13f940f70 'm' 'struct mount *'     | | `-ImplicitCastExpr 0x13f9417c8 <col:11, col:46> 'struct mount *' <IntegralToPointer>     | |   `-CallExpr 0x13f941768 <col:11, col:46> 'int'     | |     |-ImplicitCastExpr 0x13f941750 <col:11> 'int (*)()' <FunctionToPointerDecay>     | |     | `-DeclRefExpr 0x13f9416f0 <col:11> 'int ()' Function 0x13f941638 'propagation_next' 'int ()'     | |     |-ImplicitCastExpr 0x13f941798 <col:28> 'struct mount *' <LValueToRValue>     | |     | `-DeclRefExpr 0x13f941710 <col:28> 'struct mount *' lvalue ParmVar 0x13f928648 'dest_mnt' 'struct mount *'     | |     `-ImplicitCastExpr 0x13f9417b0 <col:38> 'struct mount *' <LValueToRValue>     | |       `-DeclRefExpr 0x13f941730 <col:38> 'struct mount *' lvalue ParmVar 0x13f928648 'dest_mnt' 'struct mount *'     | |-<<<NULL>>>     | |-ImplicitCastExpr 0x13f941820 <col:49> 'struct mount *' <LValueToRValue>     | | `-DeclRefExpr 0x13f941800 <col:49> 'struct mount *' lvalue Var 0x13f940f70 'm' 'struct mount *'     | |-BinaryOperator 0x13f941948 <line:12:4, col:36> 'struct mount *' '='     | | |-DeclRefExpr 0x13f941838 <col:4> 'struct mount *' lvalue Var 0x13f940f70 'm' 'struct mount *'     | | `-ImplicitCastExpr 0x13f941930 <col:8, col:36> 'struct mount *' <IntegralToPointer>     | |   `-CallExpr 0x13f9418d0 <col:8, col:36> 'int'     | |     |-ImplicitCastExpr 0x13f9418b8 <col:8> 'int (*)()' <FunctionToPointerDecay>     | |     | `-DeclRefExpr 0x13f941858 <col:8> 'int ()' Function 0x13f941638 'propagation_next' 'int ()'     | |     |-ImplicitCastExpr 0x13f941900 <col:25> 'struct mount *' <LValueToRValue>     | |     | `-DeclRefExpr 0x13f941878 <col:25> 'struct mount *' lvalue Var 0x13f940f70 'm' 'struct mount *'     | |     `-ImplicitCastExpr 0x13f941918 <col:28> 'struct mount *' <LValueToRValue>     | |       `-DeclRefExpr 0x13f941898 <col:28> 'struct mount *' lvalue ParmVar 0x13f928648 'dest_mnt' 'struct mount *'     | `-CompoundStmt 0x13f944380 <col:39, line:37:2>     |   |-DeclStmt 0x13f9419e8 <line:13:3, col:11>     |   | `-VarDecl 0x13f941980 <col:3, col:7> col:7 used type 'int'     |   |-DeclStmt 0x13f942e90 <line:14:3, col:23>     |   | `-VarDecl 0x13f942e28 <col:3, col:17> col:17 used source 'struct mount *'     |   |-IfStmt 0x13f943028 <line:16:3, line:17:4>     |   | |-CallExpr 0x13f942fe0 <line:16:7, col:19> 'int'     |   | | |-ImplicitCastExpr 0x13f942fc8 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | | | `-DeclRefExpr 0x13f942f88 <col:7> 'int ()' Function 0x13f942ed0 'IS_MNT_NEW' 'int ()'     |   | | `-ImplicitCastExpr 0x13f943008 <col:18> 'struct mount *' <LValueToRValue>     |   | |   `-DeclRefExpr 0x13f942fa8 <col:18> 'struct mount *' lvalue Var 0x13f940f70 'm' 'struct mount *'     |   | `-ContinueStmt 0x13f943020 <line:17:4>     |   |-BinaryOperator 0x13f9432f0 <line:19:3, col:61> 'struct mount *' '='     |   | |-DeclRefExpr 0x13f943048 <col:3> 'struct mount *' lvalue Var 0x13f942e28 'source' 'struct mount *'     |   | `-ImplicitCastExpr 0x13f9432d8 <col:13, col:61> 'struct mount *' <IntegralToPointer>     |   |   `-CallExpr 0x13f943250 <col:13, col:61> 'int'     |   |     |-ImplicitCastExpr 0x13f943238 <col:13> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x13f943148 <col:13> 'int ()' Function 0x13f943090 'get_source' 'int ()'     |   |     |-ImplicitCastExpr 0x13f943290 <col:24> 'struct mount *' <LValueToRValue>     |   |     | `-DeclRefExpr 0x13f943168 <col:24> 'struct mount *' lvalue Var 0x13f940f70 'm' 'struct mount *'     |   |     |-ImplicitCastExpr 0x13f9432a8 <col:27> 'struct mount *' <LValueToRValue>     |   |     | `-DeclRefExpr 0x13f943188 <col:27> 'struct mount *' lvalue Var 0x13f941178 'prev_dest_mnt' 'struct mount *'     |   |     |-ImplicitCastExpr 0x13f9432c0 <col:42> 'struct mount *' <LValueToRValue>     |   |     | `-DeclRefExpr 0x13f9431a8 <col:42> 'struct mount *' lvalue Var 0x13f941258 'prev_src_mnt' 'struct mount *'     |   |     `-UnaryOperator 0x13f943220 <col:56, col:57> 'int *' prefix '&' cannot overflow     |   |       `-DeclRefExpr 0x13f9431c8 <col:57> 'int' lvalue Var 0x13f941980 'type' 'int'     |   |-BinaryOperator 0x13f943550 <line:21:3, col:55> 'struct mount *' contains-errors '='     |   | |-DeclRefExpr 0x13f943310 <col:3> 'struct mount *' lvalue Var 0x13f941000 'child' 'struct mount *'     |   | `-CallExpr 0x13f943518 <col:11, col:55> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x13f943410 <col:11> 'int ()' Function 0x13f943358 'copy_tree' 'int ()'     |   |   |-DeclRefExpr 0x13f943430 <col:21> 'struct mount *' lvalue Var 0x13f942e28 'source' 'struct mount *'     |   |   |-CXXDependentScopeMemberExpr 0x13f9434b0 <col:29, col:41> '<dependent type>' contains-errors lvalue .mnt_root     |   |   | `-RecoveryExpr 0x13f943488 <col:29, col:37> '<dependent type>' contains-errors lvalue     |   |   |   `-DeclRefExpr 0x13f943450 <col:29> 'struct mount *' lvalue Var 0x13f942e28 'source' 'struct mount *'     |   |   `-DeclRefExpr 0x13f9434f8 <col:51> 'int' lvalue Var 0x13f941980 'type' 'int'     |   |-IfStmt 0x13f943b98 <line:22:3, line:26:3>     |   | |-CallExpr 0x13f9436a8 <line:22:7, col:19> 'int'     |   | | |-ImplicitCastExpr 0x13f943690 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | | | `-DeclRefExpr 0x13f943650 <col:7> 'int ()' Function 0x13f943598 'IS_ERR' 'int ()'     |   | | `-ImplicitCastExpr 0x13f9436d0 <col:14> 'struct mount *' <LValueToRValue>     |   | |   `-DeclRefExpr 0x13f943670 <col:14> 'struct mount *' lvalue Var 0x13f941000 'child' 'struct mount *'     |   | `-CompoundStmt 0x13f943b70 <col:22, line:26:3>     |   |   |-BinaryOperator 0x13f943880 <line:23:4, col:23> 'int' '='     |   |   | |-DeclRefExpr 0x13f9436e8 <col:4> 'int' lvalue Var 0x13f9410b0 'ret' 'int'     |   |   | `-CallExpr 0x13f943840 <col:10, col:23> 'int'     |   |   |   |-ImplicitCastExpr 0x13f943828 <col:10> 'int (*)()' <FunctionToPointerDecay>     |   |   |   | `-DeclRefExpr 0x13f9437e8 <col:10> 'int ()' Function 0x13f943730 'PTR_ERR' 'int ()'     |   |   |   `-ImplicitCastExpr 0x13f943868 <col:18> 'struct mount *' <LValueToRValue>     |   |   |     `-DeclRefExpr 0x13f943808 <col:18> 'struct mount *' lvalue Var 0x13f941000 'child' 'struct mount *'     |   |   |-CallExpr 0x13f943ad8 <line:24:4, col:40> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x13f943980 <col:4> 'int ()' Function 0x13f9438c8 'list_splice' 'int ()'     |   |   | |-DeclRefExpr 0x13f9439a0 <col:16> 'struct list_head *' lvalue ParmVar 0x13f940ce8 'tree_list' 'struct list_head *'     |   |   | `-CXXDependentScopeMemberExpr 0x13f943a90 <col:27, col:36> '<dependent type>' contains-errors lvalue .prev     |   |   |   `-RecoveryExpr 0x13f943a70 <col:27> '<dependent type>' contains-errors lvalue     |   |   `-GotoStmt 0x13f943b58 <line:25:4, col:9> 'out' 0x13f943b08     |   |-IfStmt 0x13f944260 <line:28:3, line:34:3> has_else     |   | |-CallExpr 0x13f943d80 <line:28:7, col:45> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x13f943c98 <col:7> 'int ()' Function 0x13f943be0 'is_subdir' 'int ()'     |   | | |-DeclRefExpr 0x13f943cb8 <col:17> 'struct dentry *' lvalue ParmVar 0x13f940a28 'dest_dentry' 'struct dentry *'     |   | | `-CXXDependentScopeMemberExpr 0x13f943d38 <col:30, col:37> '<dependent type>' contains-errors lvalue .mnt_root     |   | |   `-RecoveryExpr 0x13f943d10 <col:30, col:33> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x13f943cd8 <col:30> 'struct mount *' lvalue Var 0x13f940f70 'm' 'struct mount *'     |   | |-CompoundStmt 0x13f944198 <col:48, line:31:3>     |   | | |-CallExpr 0x13f943f50 <line:29:4, col:44> 'int'     |   | | | |-ImplicitCastExpr 0x13f943f38 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   | | | | `-DeclRefExpr 0x13f943eb8 <col:4> 'int ()' Function 0x13f943e00 'mnt_set_mountpoint' 'int ()'     |   | | | |-ImplicitCastExpr 0x13f943f88 <col:23> 'struct mount *' <LValueToRValue>     |   | | | | `-DeclRefExpr 0x13f943ed8 <col:23> 'struct mount *' lvalue Var 0x13f940f70 'm' 'struct mount *'     |   | | | |-ImplicitCastExpr 0x13f943fa0 <col:26> 'struct dentry *' <LValueToRValue>     |   | | | | `-DeclRefExpr 0x13f943ef8 <col:26> 'struct dentry *' lvalue ParmVar 0x13f940a28 'dest_dentry' 'struct dentry *'     |   | | | `-ImplicitCastExpr 0x13f943fb8 <col:39> 'struct mount *' <LValueToRValue>     |   | | |   `-DeclRefExpr 0x13f943f18 <col:39> 'struct mount *' lvalue Var 0x13f941000 'child' 'struct mount *'     |   | | `-CallExpr 0x13f944168 <line:30:4, col:45> '<dependent type>' contains-errors     |   | |   |-DeclRefExpr 0x13f9440b0 <col:4> 'int ()' Function 0x13f943ff8 'list_add_tail' 'int ()'     |   | |   |-UnaryOperator 0x13f944130 <col:18, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | |   | `-RecoveryExpr 0x13f944108 <col:19, col:26> '<dependent type>' contains-errors lvalue     |   | |   |   `-DeclRefExpr 0x13f9440d0 <col:19> 'struct mount *' lvalue Var 0x13f941000 'child' 'struct mount *'     |   | |   `-DeclRefExpr 0x13f944148 <col:36> 'struct list_head *' lvalue ParmVar 0x13f940ce8 'tree_list' 'struct list_head *'     |   | `-CompoundStmt 0x13f944250 <line:31:10, line:34:3>     |   |-BinaryOperator 0x13f9442e8 <line:35:3, col:19> 'struct mount *' '='     |   | |-DeclRefExpr 0x13f944290 <col:3> 'struct mount *' lvalue Var 0x13f941178 'prev_dest_mnt' 'struct mount *'     |   | `-ImplicitCastExpr 0x13f9442d0 <col:19> 'struct mount *' <LValueToRValue>     |   |   `-DeclRefExpr 0x13f9442b0 <col:19> 'struct mount *' lvalue Var 0x13f940f70 'm' 'struct mount *'     |   `-BinaryOperator 0x13f944360 <line:36:3, col:19> 'struct mount *' '='     |     |-DeclRefExpr 0x13f944308 <col:3> 'struct mount *' lvalue Var 0x13f941258 'prev_src_mnt' 'struct mount *'     |     `-ImplicitCastExpr 0x13f944348 <col:19> 'struct mount *' <LValueToRValue>     |       `-DeclRefExpr 0x13f944328 <col:19> 'struct mount *' lvalue Var 0x13f941000 'child' 'struct mount *'     |-LabelStmt 0x13f944518 <line:38:1, col:4> 'out'     | `-NullStmt 0x13f944510 <col:4>     |-WhileStmt 0x13f9448c8 <line:40:2, line:43:2>     | |-RecoveryExpr 0x13f944638 <line:40:9, col:30> '_Bool' contains-errors     | `-CompoundStmt 0x13f9448b8 <col:33, line:43:2>     `-ReturnStmt 0x13f944b20 <line:46:2, col:9>       `-ImplicitCastExpr 0x13f944b08 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x13f944ae8 <col:9> 'int' lvalue Var 0x13f9410b0 'ret' 'int' ","19448":"`-FunctionDecl 0x13c140a70  line:1:13 ip6_copy_metadata 'void (struct sk_buff *, struct sk_buff *)' static   |-ParmVarDecl 0x13c128648 <col:31, col:47> col:47 used to 'struct sk_buff *'   |-ParmVarDecl 0x13c128738 <col:51, col:67> col:67 used from 'struct sk_buff *'   `-CompoundStmt 0x13c141970 <line:2:1, line:16:1>     |-BinaryOperator 0x13c140c30 <line:3:2, col:23> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13c140ba8 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13c140b70 <col:2> 'struct sk_buff *' lvalue ParmVar 0x13c128648 'to' 'struct sk_buff *'     | `-RecoveryExpr 0x13c140c08 <col:17, col:23> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x13c140bd0 <col:17> 'struct sk_buff *' lvalue ParmVar 0x13c128738 'from' 'struct sk_buff *'     |-BinaryOperator 0x13c140d10 <line:4:2, col:23> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13c140c88 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13c140c50 <col:2> 'struct sk_buff *' lvalue ParmVar 0x13c128648 'to' 'struct sk_buff *'     | `-RecoveryExpr 0x13c140ce8 <col:17, col:23> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x13c140cb0 <col:17> 'struct sk_buff *' lvalue ParmVar 0x13c128738 'from' 'struct sk_buff *'     |-BinaryOperator 0x13c140df0 <line:5:2, col:23> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13c140d68 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13c140d30 <col:2> 'struct sk_buff *' lvalue ParmVar 0x13c128648 'to' 'struct sk_buff *'     | `-RecoveryExpr 0x13c140dc8 <col:17, col:23> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x13c140d90 <col:17> 'struct sk_buff *' lvalue ParmVar 0x13c128738 'from' 'struct sk_buff *'     |-CallExpr 0x13c140fc8 <line:6:2, col:17> 'int'     | |-ImplicitCastExpr 0x13c140fb0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13c140f40 <col:2> 'int ()' Function 0x13c140e88 'skb_dst_drop' 'int ()'     | `-ImplicitCastExpr 0x13c140ff0 <col:15> 'struct sk_buff *' <LValueToRValue>     |   `-DeclRefExpr 0x13c140f60 <col:15> 'struct sk_buff *' lvalue ParmVar 0x13c128648 'to' 'struct sk_buff *'     |-CallExpr 0x13c1413f8 <line:7:2, col:42> 'int'     | |-ImplicitCastExpr 0x13c1413e0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13c1410e8 <col:2> 'int ()' Function 0x13c141030 'skb_dst_set' 'int ()'     | |-ImplicitCastExpr 0x13c141428 <col:14> 'struct sk_buff *' <LValueToRValue>     | | `-DeclRefExpr 0x13c141108 <col:14> 'struct sk_buff *' lvalue ParmVar 0x13c128648 'to' 'struct sk_buff *'     | `-CallExpr 0x13c1413b8 <col:18, col:41> 'int'     |   |-ImplicitCastExpr 0x13c1413a0 <col:18> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x13c141208 <col:18> 'int ()' Function 0x13c141150 'dst_clone' 'int ()'     |   `-CallExpr 0x13c141360 <col:28, col:40> 'int'     |     |-ImplicitCastExpr 0x13c141348 <col:28> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x13c141308 <col:28> 'int ()' Function 0x13c141250 'skb_dst' 'int ()'     |     `-ImplicitCastExpr 0x13c141388 <col:36> 'struct sk_buff *' <LValueToRValue>     |       `-DeclRefExpr 0x13c141328 <col:36> 'struct sk_buff *' lvalue ParmVar 0x13c128738 'from' 'struct sk_buff *'     |-BinaryOperator 0x13c141500 <line:8:2, col:18> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13c141478 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13c141440 <col:2> 'struct sk_buff *' lvalue ParmVar 0x13c128648 'to' 'struct sk_buff *'     | `-RecoveryExpr 0x13c1414d8 <col:12, col:18> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x13c1414a0 <col:12> 'struct sk_buff *' lvalue ParmVar 0x13c128738 'from' 'struct sk_buff *'     |-BinaryOperator 0x13c1415e0 <line:9:2, col:19> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13c141558 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13c141520 <col:2> 'struct sk_buff *' lvalue ParmVar 0x13c128648 'to' 'struct sk_buff *'     | `-RecoveryExpr 0x13c1415b8 <col:13, col:19> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x13c141580 <col:13> 'struct sk_buff *' lvalue ParmVar 0x13c128738 'from' 'struct sk_buff *'     |-CallExpr 0x13c141758 <line:14:2, col:18> 'int'     | |-ImplicitCastExpr 0x13c141740 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13c1416e0 <col:2> 'int ()' Function 0x13c141628 'nf_copy' 'int ()'     | |-ImplicitCastExpr 0x13c141788 <col:10> 'struct sk_buff *' <LValueToRValue>     | | `-DeclRefExpr 0x13c141700 <col:10> 'struct sk_buff *' lvalue ParmVar 0x13c128648 'to' 'struct sk_buff *'     | `-ImplicitCastExpr 0x13c1417a0 <col:14> 'struct sk_buff *' <LValueToRValue>     |   `-DeclRefExpr 0x13c141720 <col:14> 'struct sk_buff *' lvalue ParmVar 0x13c128738 'from' 'struct sk_buff *'     `-CallExpr 0x13c141910 <line:15:2, col:27> 'int'       |-ImplicitCastExpr 0x13c1418f8 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x13c141898 <col:2> 'int ()' Function 0x13c1417e0 'skb_copy_secmark' 'int ()'       |-ImplicitCastExpr 0x13c141940 <col:19> 'struct sk_buff *' <LValueToRValue>       | `-DeclRefExpr 0x13c1418b8 <col:19> 'struct sk_buff *' lvalue ParmVar 0x13c128648 'to' 'struct sk_buff *'       `-ImplicitCastExpr 0x13c141958 <col:23> 'struct sk_buff *' <LValueToRValue>         `-DeclRefExpr 0x13c1418d8 <col:23> 'struct sk_buff *' lvalue ParmVar 0x13c128738 'from' 'struct sk_buff *' ","19438":"`-FunctionDecl 0x12a128320  line:1:13 get_mirc_color 'void (const char **, int *, int *)' static   |-ParmVarDecl 0x12a128108 <col:28, col:41> col:41 used str 'const char **'   |-ParmVarDecl 0x12a1281b8 <col:46, col:51> col:51 used fg_ret 'int *'   |-ParmVarDecl 0x12a128238 <col:59, col:64> col:64 used bg_ret 'int *'   `-CompoundStmt 0x12a143068 <line:2:1, line:39:1>     |-DeclStmt 0x12a128540 <line:3:2, col:12>     | |-VarDecl 0x12a128440 <col:2, col:6> col:6 used fg 'int'     | `-VarDecl 0x12a1284c0 <col:2, col:10> col:10 used bg 'int'     |-BinaryOperator 0x12a128760 <line:5:2, col:30> 'int' contains-errors '='     | |-DeclRefExpr 0x12a128558 <col:2> 'int' lvalue Var 0x12a128440 'fg' 'int'     | `-ConditionalOperator 0x12a128730 <col:7, col:30> '<dependent type>' contains-errors     |   |-BinaryOperator 0x12a1286e0 <col:7, col:17> 'int' contains-errors '=='     |   | |-DeclRefExpr 0x12a128578 <col:7> 'int *' lvalue ParmVar 0x12a1281b8 'fg_ret' 'int *'     |   | `-RecoveryExpr 0x12a1286c0 <col:17> '<dependent type>' contains-errors lvalue     |   |-UnaryOperator 0x12a128608 <col:24, col:25> 'int' prefix '-'     |   | `-IntegerLiteral 0x12a1285e8 <col:25> 'int' 1     |   `-UnaryOperator 0x12a128718 <col:29, col:30> 'int' lvalue prefix '*' cannot overflow     |     `-ImplicitCastExpr 0x12a128700 <col:30> 'int *' <LValueToRValue>     |       `-DeclRefExpr 0x12a128620 <col:30> 'int *' lvalue ParmVar 0x12a1281b8 'fg_ret' 'int *'     |-BinaryOperator 0x12a140b78 <line:6:2, col:30> 'int' contains-errors '='     | |-DeclRefExpr 0x12a128780 <col:2> 'int' lvalue Var 0x12a1284c0 'bg' 'int'     | `-ConditionalOperator 0x12a140b48 <col:7, col:30> '<dependent type>' contains-errors     |   |-BinaryOperator 0x12a140af8 <col:7, col:17> 'int' contains-errors '=='     |   | |-DeclRefExpr 0x12a1287a0 <col:7> 'int *' lvalue ParmVar 0x12a128238 'bg_ret' 'int *'     |   | `-RecoveryExpr 0x12a140ad8 <col:17> '<dependent type>' contains-errors lvalue     |   |-UnaryOperator 0x12a140a20 <col:24, col:25> 'int' prefix '-'     |   | `-IntegerLiteral 0x12a140a00 <col:25> 'int' 1     |   `-UnaryOperator 0x12a140b30 <col:29, col:30> 'int' lvalue prefix '*' cannot overflow     |     `-ImplicitCastExpr 0x12a140b18 <col:30> 'int *' <LValueToRValue>     |       `-DeclRefExpr 0x12a140a38 <col:30> 'int *' lvalue ParmVar 0x12a128238 'bg_ret' 'int *'     |-IfStmt 0x12a142e38 <line:8:2, line:35:2> has_else     | |-BinaryOperator 0x12a140ef0 <line:8:6, col:36> 'int' '&&'     | | |-UnaryOperator 0x12a140df0 <col:6, col:22> 'int' prefix '!' cannot overflow     | | | `-CallExpr 0x12a140d98 <col:7, col:22> 'int'     | | |   |-ImplicitCastExpr 0x12a140d80 <col:7> 'int (*)()' <FunctionToPointerDecay>     | | |   | `-DeclRefExpr 0x12a140cb0 <col:7> 'int ()' Function 0x12a140bf8 'i_isdigit' 'int ()'     | | |   `-ImplicitCastExpr 0x12a140dd8 <col:17, col:19> 'int' <IntegralCast>     | | |     `-ImplicitCastExpr 0x12a140dc0 <col:17, col:19> 'char' <LValueToRValue>     | | |       `-UnaryOperator 0x12a140d38 <col:17, col:19> 'const char' lvalue prefix '*' cannot overflow     | | |         `-ImplicitCastExpr 0x12a140d20 <col:18, col:19> 'const char *' <LValueToRValue>     | | |           `-UnaryOperator 0x12a140d08 <col:18, col:19> 'const char *' lvalue prefix '*' cannot overflow     | | |             `-ImplicitCastExpr 0x12a140cf0 <col:19> 'const char **' <LValueToRValue>     | | |               `-DeclRefExpr 0x12a140cd0 <col:19> 'const char **' lvalue ParmVar 0x12a128108 'str' 'const char **'     | | `-BinaryOperator 0x12a140ed0 <col:27, col:36> 'int' '!='     | |   |-ImplicitCastExpr 0x12a140eb8 <col:27, col:29> 'int' <IntegralCast>     | |   | `-ImplicitCastExpr 0x12a140ea0 <col:27, col:29> 'char' <LValueToRValue>     | |   |   `-UnaryOperator 0x12a140e70 <col:27, col:29> 'const char' lvalue prefix '*' cannot overflow     | |   |     `-ImplicitCastExpr 0x12a140e58 <col:28, col:29> 'const char *' <LValueToRValue>     | |   |       `-UnaryOperator 0x12a140e40 <col:28, col:29> 'const char *' lvalue prefix '*' cannot overflow     | |   |         `-ImplicitCastExpr 0x12a140e28 <col:29> 'const char **' <LValueToRValue>     | |   |           `-DeclRefExpr 0x12a140e08 <col:29> 'const char **' lvalue ParmVar 0x12a128108 'str' 'const char **'     | |   `-CharacterLiteral 0x12a140e88 <col:36> 'int' 44     | |-CompoundStmt 0x12a141000 <col:41, line:11:2>     | | |-BinaryOperator 0x12a140f68 <line:9:3, col:9> 'int' '='     | | | |-DeclRefExpr 0x12a140f10 <col:3> 'int' lvalue Var 0x12a128440 'fg' 'int'     | | | `-UnaryOperator 0x12a140f50 <col:8, col:9> 'int' prefix '-'     | | |   `-IntegerLiteral 0x12a140f30 <col:9> 'int' 1     | | `-BinaryOperator 0x12a140fe0 <line:10:3, col:9> 'int' '='     | |   |-DeclRefExpr 0x12a140f88 <col:3> 'int' lvalue Var 0x12a1284c0 'bg' 'int'     | |   `-UnaryOperator 0x12a140fc8 <col:8, col:9> 'int' prefix '-'     | |     `-IntegerLiteral 0x12a140fa8 <col:9> 'int' 1     | `-CompoundStmt 0x12a142e18 <line:11:9, line:35:2>     |   |-IfStmt 0x12a141698 <line:13:3, line:20:3>     |   | |-BinaryOperator 0x12a1410e8 <line:13:7, col:16> 'int' '!='     |   | | |-ImplicitCastExpr 0x12a1410d0 <col:7, col:9> 'int' <IntegralCast>     |   | | | `-ImplicitCastExpr 0x12a1410b8 <col:7, col:9> 'char' <LValueToRValue>     |   | | |   `-UnaryOperator 0x12a141088 <col:7, col:9> 'const char' lvalue prefix '*' cannot overflow     |   | | |     `-ImplicitCastExpr 0x12a141070 <col:8, col:9> 'const char *' <LValueToRValue>     |   | | |       `-UnaryOperator 0x12a141058 <col:8, col:9> 'const char *' lvalue prefix '*' cannot overflow     |   | | |         `-ImplicitCastExpr 0x12a141040 <col:9> 'const char **' <LValueToRValue>     |   | | |           `-DeclRefExpr 0x12a141020 <col:9> 'const char **' lvalue ParmVar 0x12a128108 'str' 'const char **'     |   | | `-CharacterLiteral 0x12a1410a0 <col:16> 'int' 44     |   | `-CompoundStmt 0x12a141670 <col:21, line:20:3>     |   |   |-BinaryOperator 0x12a141210 <line:14:4, col:15> 'int' '='     |   |   | |-DeclRefExpr 0x12a141108 <col:4> 'int' lvalue Var 0x12a128440 'fg' 'int'     |   |   | `-BinaryOperator 0x12a1411f0 <col:9, col:15> 'int' '-'     |   |   |   |-ImplicitCastExpr 0x12a1411d8 <col:9, col:11> 'int' <IntegralCast>     |   |   |   | `-ImplicitCastExpr 0x12a1411c0 <col:9, col:11> 'char' <LValueToRValue>     |   |   |   |   `-UnaryOperator 0x12a141190 <col:9, col:11> 'const char' lvalue prefix '*' cannot overflow     |   |   |   |     `-ImplicitCastExpr 0x12a141178 <col:10, col:11> 'const char *' <LValueToRValue>     |   |   |   |       `-UnaryOperator 0x12a141160 <col:10, col:11> 'const char *' lvalue prefix '*' cannot overflow     |   |   |   |         `-ImplicitCastExpr 0x12a141148 <col:11> 'const char **' <LValueToRValue>     |   |   |   |           `-DeclRefExpr 0x12a141128 <col:11> 'const char **' lvalue ParmVar 0x12a128108 'str' 'const char **'     |   |   |   `-CharacterLiteral 0x12a1411a8 <col:15> 'int' 48     |   |   |-UnaryOperator 0x12a1412a0 <line:15:4, col:10> 'const char *' postfix '++'     |   |   | `-ParenExpr 0x12a141280 <col:4, col:9> 'const char *' lvalue     |   |   |   `-UnaryOperator 0x12a141268 <col:5, col:6> 'const char *' lvalue prefix '*' cannot overflow     |   |   |     `-ImplicitCastExpr 0x12a141250 <col:6> 'const char **' <LValueToRValue>     |   |   |       `-DeclRefExpr 0x12a141230 <col:6> 'const char **' lvalue ParmVar 0x12a128108 'str' 'const char **'     |   |   `-IfStmt 0x12a141650 <line:16:4, line:19:4>     |   |     |-CallExpr 0x12a141370 <line:16:8, col:23> 'int'     |   |     | |-ImplicitCastExpr 0x12a141358 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   |     | | `-DeclRefExpr 0x12a1412b8 <col:8> 'int ()' Function 0x12a140bf8 'i_isdigit' 'int ()'     |   |     | `-ImplicitCastExpr 0x12a1413b0 <col:18, col:20> 'int' <IntegralCast>     |   |     |   `-ImplicitCastExpr 0x12a141398 <col:18, col:20> 'char' <LValueToRValue>     |   |     |     `-UnaryOperator 0x12a141340 <col:18, col:20> 'const char' lvalue prefix '*' cannot overflow     |   |     |       `-ImplicitCastExpr 0x12a141328 <col:19, col:20> 'const char *' <LValueToRValue>     |   |     |         `-UnaryOperator 0x12a141310 <col:19, col:20> 'const char *' lvalue prefix '*' cannot overflow     |   |     |           `-ImplicitCastExpr 0x12a1412f8 <col:20> 'const char **' <LValueToRValue>     |   |     |             `-DeclRefExpr 0x12a1412d8 <col:20> 'const char **' lvalue ParmVar 0x12a128108 'str' 'const char **'     |   |     `-CompoundStmt 0x12a141630 <col:26, line:19:4>     |   |       |-BinaryOperator 0x12a141588 <line:17:5, col:28> 'int' '='     |   |       | |-DeclRefExpr 0x12a1413c8 <col:5> 'int' lvalue Var 0x12a128440 'fg' 'int'     |   |       | `-BinaryOperator 0x12a141568 <col:10, col:28> 'int' '+'     |   |       |   |-BinaryOperator 0x12a141440 <col:10, col:13> 'int' '*'     |   |       |   | |-ImplicitCastExpr 0x12a141428 <col:10> 'int' <LValueToRValue>     |   |       |   | | `-DeclRefExpr 0x12a1413e8 <col:10> 'int' lvalue Var 0x12a128440 'fg' 'int'     |   |       |   | `-IntegerLiteral 0x12a141408 <col:13> 'int' 10     |   |       |   `-ParenExpr 0x12a141548 <col:18, col:28> 'int'     |   |       |     `-BinaryOperator 0x12a141528 <col:19, col:25> 'int' '-'     |   |       |       |-ImplicitCastExpr 0x12a141510 <col:19, col:21> 'int' <IntegralCast>     |   |       |       | `-ImplicitCastExpr 0x12a1414f8 <col:19, col:21> 'char' <LValueToRValue>     |   |       |       |   `-UnaryOperator 0x12a1414c8 <col:19, col:21> 'const char' lvalue prefix '*' cannot overflow     |   |       |       |     `-ImplicitCastExpr 0x12a1414b0 <col:20, col:21> 'const char *' <LValueToRValue>     |   |       |       |       `-UnaryOperator 0x12a141498 <col:20, col:21> 'const char *' lvalue prefix '*' cannot overflow     |   |       |       |         `-ImplicitCastExpr 0x12a141480 <col:21> 'const char **' <LValueToRValue>     |   |       |       |           `-DeclRefExpr 0x12a141460 <col:21> 'const char **' lvalue ParmVar 0x12a128108 'str' 'const char **'     |   |       |       `-CharacterLiteral 0x12a1414e0 <col:25> 'int' 48     |   |       `-UnaryOperator 0x12a141618 <line:18:5, col:11> 'const char *' postfix '++'     |   |         `-ParenExpr 0x12a1415f8 <col:5, col:10> 'const char *' lvalue     |   |           `-UnaryOperator 0x12a1415e0 <col:6, col:7> 'const char *' lvalue prefix '*' cannot overflow     |   |             `-ImplicitCastExpr 0x12a1415c8 <col:7> 'const char **' <LValueToRValue>     |   |               `-DeclRefExpr 0x12a1415a8 <col:7> 'const char **' lvalue ParmVar 0x12a128108 'str' 'const char **'     |   `-IfStmt 0x12a142df8 <line:21:3, line:34:3>     |     |-BinaryOperator 0x12a141780 <line:21:7, col:16> 'int' '=='     |     | |-ImplicitCastExpr 0x12a141768 <col:7, col:9> 'int' <IntegralCast>     |     | | `-ImplicitCastExpr 0x12a141750 <col:7, col:9> 'char' <LValueToRValue>     |     | |   `-UnaryOperator 0x12a141720 <col:7, col:9> 'const char' lvalue prefix '*' cannot overflow     |     | |     `-ImplicitCastExpr 0x12a141708 <col:8, col:9> 'const char *' <LValueToRValue>     |     | |       `-UnaryOperator 0x12a1416f0 <col:8, col:9> 'const char *' lvalue prefix '*' cannot overflow     |     | |         `-ImplicitCastExpr 0x12a1416d8 <col:9> 'const char **' <LValueToRValue>     |     | |           `-DeclRefExpr 0x12a1416b8 <col:9> 'const char **' lvalue ParmVar 0x12a128108 'str' 'const char **'     |     | `-CharacterLiteral 0x12a141738 <col:16> 'int' 44     |     `-CompoundStmt 0x12a142de0 <col:21, line:34:3>     |       `-IfStmt 0x12a142db0 <line:23:4, line:33:4> has_else     |         |-UnaryOperator 0x12a1418f8 <line:23:8, col:28> 'int' prefix '!' cannot overflow     |         | `-CallExpr 0x12a1418a0 <col:9, col:28> 'int'     |         |   |-ImplicitCastExpr 0x12a141888 <col:9> 'int (*)()' <FunctionToPointerDecay>     |         |   | `-DeclRefExpr 0x12a1417a0 <col:9> 'int ()' Function 0x12a140bf8 'i_isdigit' 'int ()'     |         |   `-ImplicitCastExpr 0x12a1418e0 <col:19, col:27> 'int' <IntegralCast>     |         |     `-ImplicitCastExpr 0x12a1418c8 <col:19, col:27> 'char' <LValueToRValue>     |         |       `-ArraySubscriptExpr 0x12a141868 <col:19, col:27> 'const char' lvalue     |         |         |-ImplicitCastExpr 0x12a141850 <col:19, col:24> 'const char *' <LValueToRValue>     |         |         | `-ParenExpr 0x12a141810 <col:19, col:24> 'const char *' lvalue     |         |         |   `-UnaryOperator 0x12a1417f8 <col:20, col:21> 'const char *' lvalue prefix '*' cannot overflow     |         |         |     `-ImplicitCastExpr 0x12a1417e0 <col:21> 'const char **' <LValueToRValue>     |         |         |       `-DeclRefExpr 0x12a1417c0 <col:21> 'const char **' lvalue ParmVar 0x12a128108 'str' 'const char **'     |         |         `-IntegerLiteral 0x12a141830 <col:26> 'int' 1     |         |-BinaryOperator 0x12a141968 <line:24:5, col:11> 'int' '='     |         | |-DeclRefExpr 0x12a141910 <col:5> 'int' lvalue Var 0x12a1284c0 'bg' 'int'     |         | `-UnaryOperator 0x12a141950 <col:10, col:11> 'int' prefix '-'     |         |   `-IntegerLiteral 0x12a141930 <col:11> 'int' 1     |         `-CompoundStmt 0x12a142d80 <line:25:9, line:33:4>     |           |-UnaryOperator 0x12a142800 <line:26:5, col:11> 'const char *' postfix '++'     |           | `-ParenExpr 0x12a1419d8 <col:5, col:10> 'const char *' lvalue     |           |   `-UnaryOperator 0x12a1419c0 <col:6, col:7> 'const char *' lvalue prefix '*' cannot overflow     |           |     `-ImplicitCastExpr 0x12a1419a8 <col:7> 'const char **' <LValueToRValue>     |           |       `-DeclRefExpr 0x12a141988 <col:7> 'const char **' lvalue ParmVar 0x12a128108 'str' 'const char **'     |           |-BinaryOperator 0x12a142920 <line:27:5, col:16> 'int' '='     |           | |-DeclRefExpr 0x12a142818 <col:5> 'int' lvalue Var 0x12a1284c0 'bg' 'int'     |           | `-BinaryOperator 0x12a142900 <col:10, col:16> 'int' '-'     |           |   |-ImplicitCastExpr 0x12a1428e8 <col:10, col:12> 'int' <IntegralCast>     |           |   | `-ImplicitCastExpr 0x12a1428d0 <col:10, col:12> 'char' <LValueToRValue>     |           |   |   `-UnaryOperator 0x12a1428a0 <col:10, col:12> 'const char' lvalue prefix '*' cannot overflow     |           |   |     `-ImplicitCastExpr 0x12a142888 <col:11, col:12> 'const char *' <LValueToRValue>     |           |   |       `-UnaryOperator 0x12a142870 <col:11, col:12> 'const char *' lvalue prefix '*' cannot overflow     |           |   |         `-ImplicitCastExpr 0x12a142858 <col:12> 'const char **' <LValueToRValue>     |           |   |           `-DeclRefExpr 0x12a142838 <col:12> 'const char **' lvalue ParmVar 0x12a128108 'str' 'const char **'     |           |   `-CharacterLiteral 0x12a1428b8 <col:16> 'int' 48     |           |-UnaryOperator 0x12a1429b0 <line:28:5, col:11> 'const char *' postfix '++'     |           | `-ParenExpr 0x12a142990 <col:5, col:10> 'const char *' lvalue     |           |   `-UnaryOperator 0x12a142978 <col:6, col:7> 'const char *' lvalue prefix '*' cannot overflow     |           |     `-ImplicitCastExpr 0x12a142960 <col:7> 'const char **' <LValueToRValue>     |           |       `-DeclRefExpr 0x12a142940 <col:7> 'const char **' lvalue ParmVar 0x12a128108 'str' 'const char **'     |           `-IfStmt 0x12a142d60 <line:29:5, line:32:5>     |             |-CallExpr 0x12a142a80 <line:29:9, col:24> 'int'     |             | |-ImplicitCastExpr 0x12a142a68 <col:9> 'int (*)()' <FunctionToPointerDecay>     |             | | `-DeclRefExpr 0x12a1429c8 <col:9> 'int ()' Function 0x12a140bf8 'i_isdigit' 'int ()'     |             | `-ImplicitCastExpr 0x12a142ac0 <col:19, col:21> 'int' <IntegralCast>     |             |   `-ImplicitCastExpr 0x12a142aa8 <col:19, col:21> 'char' <LValueToRValue>     |             |     `-UnaryOperator 0x12a142a50 <col:19, col:21> 'const char' lvalue prefix '*' cannot overflow     |             |       `-ImplicitCastExpr 0x12a142a38 <col:20, col:21> 'const char *' <LValueToRValue>     |             |         `-UnaryOperator 0x12a142a20 <col:20, col:21> 'const char *' lvalue prefix '*' cannot overflow     |             |           `-ImplicitCastExpr 0x12a142a08 <col:21> 'const char **' <LValueToRValue>     |             |             `-DeclRefExpr 0x12a1429e8 <col:21> 'const char **' lvalue ParmVar 0x12a128108 'str' 'const char **'     |             `-CompoundStmt 0x12a142d40 <col:27, line:32:5>     |               |-BinaryOperator 0x12a142c98 <line:30:6, col:29> 'int' '='     |               | |-DeclRefExpr 0x12a142ad8 <col:6> 'int' lvalue Var 0x12a1284c0 'bg' 'int'     |               | `-BinaryOperator 0x12a142c78 <col:11, col:29> 'int' '+'     |               |   |-BinaryOperator 0x12a142b50 <col:11, col:14> 'int' '*'     |               |   | |-ImplicitCastExpr 0x12a142b38 <col:11> 'int' <LValueToRValue>     |               |   | | `-DeclRefExpr 0x12a142af8 <col:11> 'int' lvalue Var 0x12a1284c0 'bg' 'int'     |               |   | `-IntegerLiteral 0x12a142b18 <col:14> 'int' 10     |               |   `-ParenExpr 0x12a142c58 <col:19, col:29> 'int'     |               |     `-BinaryOperator 0x12a142c38 <col:20, col:26> 'int' '-'     |               |       |-ImplicitCastExpr 0x12a142c20 <col:20, col:22> 'int' <IntegralCast>     |               |       | `-ImplicitCastExpr 0x12a142c08 <col:20, col:22> 'char' <LValueToRValue>     |               |       |   `-UnaryOperator 0x12a142bd8 <col:20, col:22> 'const char' lvalue prefix '*' cannot overflow     |               |       |     `-ImplicitCastExpr 0x12a142bc0 <col:21, col:22> 'const char *' <LValueToRValue>     |               |       |       `-UnaryOperator 0x12a142ba8 <col:21, col:22> 'const char *' lvalue prefix '*' cannot overflow     |               |       |         `-ImplicitCastExpr 0x12a142b90 <col:22> 'const char **' <LValueToRValue>     |               |       |           `-DeclRefExpr 0x12a142b70 <col:22> 'const char **' lvalue ParmVar 0x12a128108 'str' 'const char **'     |               |       `-CharacterLiteral 0x12a142bf0 <col:26> 'int' 48     |               `-UnaryOperator 0x12a142d28 <line:31:6, col:12> 'const char *' postfix '++'     |                 `-ParenExpr 0x12a142d08 <col:6, col:11> 'const char *' lvalue     |                   `-UnaryOperator 0x12a142cf0 <col:7, col:8> 'const char *' lvalue prefix '*' cannot overflow     |                     `-ImplicitCastExpr 0x12a142cd8 <col:8> 'const char **' <LValueToRValue>     |                       `-DeclRefExpr 0x12a142cb8 <col:8> 'const char **' lvalue ParmVar 0x12a128108 'str' 'const char **'     |-IfStmt 0x12a142f48 <line:37:2, col:24>     | |-ImplicitCastExpr 0x12a142e88 <col:6> 'int *' <LValueToRValue>     | | `-DeclRefExpr 0x12a142e68 <col:6> 'int *' lvalue ParmVar 0x12a1281b8 'fg_ret' 'int *'     | `-BinaryOperator 0x12a142f28 <col:14, col:24> 'int' '='     |   |-UnaryOperator 0x12a142ed8 <col:14, col:15> 'int' lvalue prefix '*' cannot overflow     |   | `-ImplicitCastExpr 0x12a142ec0 <col:15> 'int *' <LValueToRValue>     |   |   `-DeclRefExpr 0x12a142ea0 <col:15> 'int *' lvalue ParmVar 0x12a1281b8 'fg_ret' 'int *'     |   `-ImplicitCastExpr 0x12a142f10 <col:24> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x12a142ef0 <col:24> 'int' lvalue Var 0x12a128440 'fg' 'int'     `-IfStmt 0x12a143048 <line:38:2, col:24>       |-ImplicitCastExpr 0x12a142f88 <col:6> 'int *' <LValueToRValue>       | `-DeclRefExpr 0x12a142f68 <col:6> 'int *' lvalue ParmVar 0x12a128238 'bg_ret' 'int *'       `-BinaryOperator 0x12a143028 <col:14, col:24> 'int' '='         |-UnaryOperator 0x12a142fd8 <col:14, col:15> 'int' lvalue prefix '*' cannot overflow         | `-ImplicitCastExpr 0x12a142fc0 <col:15> 'int *' <LValueToRValue>         |   `-DeclRefExpr 0x12a142fa0 <col:15> 'int *' lvalue ParmVar 0x12a128238 'bg_ret' 'int *'         `-ImplicitCastExpr 0x12a143010 <col:24> 'int' <LValueToRValue>           `-DeclRefExpr 0x12a142ff0 <col:24> 'int' lvalue Var 0x12a1284c0 'bg' 'int' ","20074":"`-FunctionDecl 0x13c008348  line:1:5 fpm_request_last_activity 'int (struct fpm_child_s *, struct timeval *)'   |-ParmVarDecl 0x13b80e248 <col:31, col:51> col:51 used child 'struct fpm_child_s *'   |-ParmVarDecl 0x13c008228 <col:58, col:74> col:74 used tv 'struct timeval *'   `-CompoundStmt 0x13c008b98 <line:2:1, line:15:1>     |-DeclStmt 0x13c008638 <line:3:2, col:36>     | |-RecordDecl 0x13c008448 <col:2, col:9> col:9 struct fpm_scoreboard_proc_s     | `-VarDecl 0x13c0085b8 <col:2, col:32> col:32 used proc 'struct fpm_scoreboard_proc_s *'     |-IfStmt 0x13c0086e8 <line:5:2, col:19>     | |-UnaryOperator 0x13c008688 <col:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13c008670 <col:7> 'struct timeval *' <LValueToRValue>     | |   `-DeclRefExpr 0x13c008650 <col:7> 'struct timeval *' lvalue ParmVar 0x13c008228 'tv' 'struct timeval *'     | `-ReturnStmt 0x13c0086d8 <col:11, col:19>     |   `-UnaryOperator 0x13c0086c0 <col:18, col:19> 'int' prefix '-'     |     `-IntegerLiteral 0x13c0086a0 <col:19> 'int' 1     |-BinaryOperator 0x13c0089a8 <line:7:2, col:75> 'struct fpm_scoreboard_proc_s *' contains-errors '='     | |-DeclRefExpr 0x13c008708 <col:2> 'struct fpm_scoreboard_proc_s *' lvalue Var 0x13c0085b8 'proc' 'struct fpm_scoreboard_proc_s *'     | `-CallExpr 0x13c008978 <col:9, col:75> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13c008850 <col:9> 'int ()' Function 0x13c008798 'fpm_scoreboard_proc_get' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x13c0088d0 <col:33, col:44> '<dependent type>' contains-errors lvalue ->scoreboard     |   | `-RecoveryExpr 0x13c0088a8 <col:33, col:40> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x13c008870 <col:33> 'struct fpm_child_s *' lvalue ParmVar 0x13b80e248 'child' 'struct fpm_child_s *'     |   `-RecoveryExpr 0x13c008950 <col:56, col:63> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13c008918 <col:56> 'struct fpm_child_s *' lvalue ParmVar 0x13b80e248 'child' 'struct fpm_child_s *'     |-IfStmt 0x13c008a78 <line:8:2, line:10:2>     | |-UnaryOperator 0x13c008a00 <line:8:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13c0089e8 <col:7> 'struct fpm_scoreboard_proc_s *' <LValueToRValue>     | |   `-DeclRefExpr 0x13c0089c8 <col:7> 'struct fpm_scoreboard_proc_s *' lvalue Var 0x13c0085b8 'proc' 'struct fpm_scoreboard_proc_s *'     | `-CompoundStmt 0x13c008a60 <col:13, line:10:2>     |   `-ReturnStmt 0x13c008a50 <line:9:3, col:11>     |     `-UnaryOperator 0x13c008a38 <col:10, col:11> 'int' prefix '-'     |       `-IntegerLiteral 0x13c008a18 <col:11> 'int' 1     |-BinaryOperator 0x13c008b48 <line:12:2, col:14> 'struct timeval' contains-errors '='     | |-UnaryOperator 0x13c008ad0 <col:2, col:3> 'struct timeval' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x13c008ab8 <col:3> 'struct timeval *' <LValueToRValue>     | |   `-DeclRefExpr 0x13c008a98 <col:3> 'struct timeval *' lvalue ParmVar 0x13c008228 'tv' 'struct timeval *'     | `-RecoveryExpr 0x13c008b20 <col:8, col:14> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x13c008ae8 <col:8> 'struct fpm_scoreboard_proc_s *' lvalue Var 0x13c0085b8 'proc' 'struct fpm_scoreboard_proc_s *'     `-ReturnStmt 0x13c008b88 <line:14:2, col:9>       `-IntegerLiteral 0x13c008b68 <col:9> 'int' 1 ","19425":"`-FunctionDecl 0x14480de38  line:1:1 TEST 'int (int, int)'   |-ParmVarDecl 0x14480dd58 <col:6> col:6 used RegexMatchExpression 'int'   |-ParmVarDecl 0x14480dcd8 <col:28> col:28 TooLargePattern 'int'   `-CompoundStmt 0x14480e0a0 <col:45, line:6:1> ","20083":"`-FunctionDecl 0x15481d238  line:1:1 invalid spnego_gss_get_mic_iov_length 'int (int *, int, int, int *, int)'   |-ParmVarDecl 0x15481cf28 <col:31, col:42> col:42 invalid minor_status 'int *'   |-ParmVarDecl 0x15481cfa8 <line:2:10, col:23> col:23 invalid context_handle 'int'   |-ParmVarDecl 0x15481d028 <col:39, col:49> col:49 invalid qop_req 'int'   |-ParmVarDecl 0x15481d0a8 <line:3:10, col:31> col:31 invalid iov 'int *'   |-ParmVarDecl 0x15481d128 <col:36, col:40> col:40 used iov_count 'int'   `-CompoundStmt 0x15481d578 <line:4:1, line:7:1>     `-ReturnStmt 0x15481d568 <line:5:5, line:6:16>       `-CallExpr 0x15481d520 <line:5:12, line:6:16> '<dependent type>' contains-errors         |-DeclRefExpr 0x15481d460 <line:5:12> 'int ()' Function 0x15481d3a8 'gss_get_mic_iov_length' 'int ()'         |-RecoveryExpr 0x15481d480 <col:35> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x15481d4a0 <col:49> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x15481d4c0 <col:65> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x15481d4e0 <col:74> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x15481d500 <line:6:7> 'int' lvalue ParmVar 0x15481d128 'iov_count' 'int' ","19938":"`-FunctionDecl 0x13b9281f8  line:1:8 invalid MakeUID 'int (unsigned int *)'   |-ParmVarDecl 0x13b928128 <col:16, col:30> col:30 used seed 'unsigned int *'   `-CompoundStmt 0x13c008918 <col:36, line:35:1>     |-ForStmt 0x13c008898 <line:8:3, line:32:3>     | |-DeclStmt 0x13b928348 <line:8:8, col:17>     | | `-VarDecl 0x13b9282c0 <col:8, col:16> col:12 used i 'int' cinit     | |   `-IntegerLiteral 0x13b928328 <col:16> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x13b9283b8 <col:19, col:23> 'int' '<'     | | |-ImplicitCastExpr 0x13b9283a0 <col:19> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x13b928360 <col:19> 'int' lvalue Var 0x13b9282c0 'i' 'int'     | | `-IntegerLiteral 0x13b928380 <col:23> 'int' 7     | |-UnaryOperator 0x13b9283f8 <col:26, col:28> 'int' prefix '++'     | | `-DeclRefExpr 0x13b9283d8 <col:28> 'int' lvalue Var 0x13b9282c0 'i' 'int'     | `-CompoundStmt 0x13c008878 <col:31, line:32:3>     |   |-DeclStmt 0x13b9286d8 <line:27:5, col:34>     |   | `-VarDecl 0x13b928448 <col:5, col:17> col:17 invalid nn 'const int'     |   `-DeclStmt 0x13c008840 <line:29:5, col:37>     |     `-VarDecl 0x13b928708 <col:5, col:17> col:17 invalid n 'const int'     `-ReturnStmt 0x13c008908 <line:34:3, col:10>       `-RecoveryExpr 0x13c0088e8 <col:10> '<dependent type>' contains-errors lvalue ","19531":"`-FunctionDecl 0x135809c68  col:2 implicit used va_end 'void (__builtin_va_list &)' extern   |-ParmVarDecl 0x135809d68 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'   |-BuiltinAttr 0x135809d10 <<invalid sloc>> Implicit 865   `-NoThrowAttr 0x135809dd8 <col:2> Implicit ","19441":"`-FunctionDecl 0x14400df18  line:1:1 invalid dname_pkt_hash 'int (int *, int *, int)'   |-ParmVarDecl 0x14400dd28 <col:16, col:30> col:30 invalid pkt 'int *'   |-ParmVarDecl 0x14400dda8 <col:35, col:44> col:44 referenced invalid dname 'int *'   |-ParmVarDecl 0x14400de28 <col:51, col:66> col:66 referenced invalid h 'int'   `-CompoundStmt 0x144027e90 <line:2:1, line:28:1>     |-DeclStmt 0x14400e058 <line:5:2, col:7>     | `-VarDecl 0x14400dff0 <col:2, col:6> col:6 used i 'int'     |-WhileStmt 0x144027e40 <line:9:2, line:25:2>     | |-RecoveryExpr 0x14400e0d8 <line:9:8> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x144027e10 <col:16, line:25:2>     |   |-IfStmt 0x144027828 <line:10:3, line:15:3>     |   | |-CallExpr 0x14400e2d0 <line:10:6, col:25> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x14400e250 <col:6> 'int ()' Function 0x14400e198 'LABEL_IS_PTR' 'int ()'     |   | | `-RecoveryExpr 0x14400e2b0 <col:19> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x144027808 <col:28, line:15:3>     |   |   |-BinaryOperator 0x144027790 <line:12:4, col:59> '<dependent type>' contains-errors '='     |   |   | |-RecoveryExpr 0x14400e318 <col:4> '<dependent type>' contains-errors lvalue     |   |   | | `-DeclRefExpr 0x14400e2f8 <col:4> 'int *' lvalue ParmVar 0x14400dda8 'dname' 'int *'     |   |   | `-CallExpr 0x144027760 <col:12, col:59> '<dependent type>' contains-errors     |   |   |   |-DeclRefExpr 0x1440274b8 <col:12> 'int ()' Function 0x144027400 'sldns_buffer_at' 'int ()'     |   |   |   |-RecoveryExpr 0x1440274d8 <col:28> '<dependent type>' contains-errors lvalue     |   |   |   `-CallExpr 0x144027730 <col:33, col:58> '<dependent type>' contains-errors     |   |   |     |-DeclRefExpr 0x1440275d8 <col:33> 'int ()' Function 0x144027520 'PTR_OFFSET' 'int ()'     |   |   |     |-RecoveryExpr 0x1440276e0 <col:44> '<dependent type>' contains-errors lvalue     |   |   |     `-UnaryOperator 0x144027718 <col:52, col:53> '<dependent type>' contains-errors prefix '*' cannot overflow     |   |   |       `-ImplicitCastExpr 0x144027700 <col:53> '<dependent type>' contains-errors <LValueToRValue>     |   |   |         `-RecoveryExpr 0x144027610 <col:53> '<dependent type>' contains-errors lvalue     |   |   `-ContinueStmt 0x144027800 <line:14:4>     |   |-CallExpr 0x144027a20 <line:16:3, col:41> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x144027928 <col:3> 'int ()' Function 0x144027870 'log_assert' 'int ()'     |   | `-BinaryOperator 0x144027a00 <col:14, col:24> 'int' contains-errors '<='     |   |   |-RecoveryExpr 0x1440279c0 <col:14> '<dependent type>' contains-errors lvalue     |   |   `-RecoveryExpr 0x1440279e0 <col:24> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x144027ac0 <line:18:3, col:5> 'int' '='     |   | |-DeclRefExpr 0x144027a80 <col:3> 'int' lvalue Var 0x14400dff0 'i' 'int'     |   | `-IntegerLiteral 0x144027aa0 <col:5> 'int' 0     |   `-WhileStmt 0x144027bf8 <line:19:3, line:22:3>     |     |-UnaryOperator 0x144027b30 <line:19:9, col:15> '<dependent type>' contains-errors postfix '--' cannot overflow     |     | `-RecoveryExpr 0x144027b10 <col:9> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x144027be0 <col:19, line:22:3>     |       `-UnaryOperator 0x144027bc8 <line:21:4, col:9> '<dependent type>' contains-errors postfix '++' cannot overflow     |         `-RecoveryExpr 0x144027ba0 <col:4> '<dependent type>' contains-errors lvalue     |           `-DeclRefExpr 0x144027b80 <col:4> 'int *' lvalue ParmVar 0x14400dda8 'dname' 'int *'     `-ReturnStmt 0x144027e80 <line:27:2, col:9>       `-RecoveryExpr 0x144027e60 <col:9> '<dependent type>' contains-errors lvalue ","19965":"`-FunctionDecl 0x12f940e48  line:1:5 ldb_msg_add_value 'int (struct ldb_message *, const char *, const struct ldb_val *, struct ldb_message_element **)'   |-ParmVarDecl 0x12f928648 <col:23, col:43> col:43 used msg 'struct ldb_message *'   |-ParmVarDecl 0x12f9286c8 <line:2:9, col:21> col:21 used attr_name 'const char *'   |-ParmVarDecl 0x12f940ac8 <line:3:9, col:31> col:31 used val 'const struct ldb_val *'   |-ParmVarDecl 0x12f940cf8 <line:4:9, col:38> col:38 used return_el 'struct ldb_message_element **'   `-CompoundStmt 0x13800a258 <line:5:1, line:32:1>     |-DeclStmt 0x12f941050 <line:6:2, col:32>     | `-VarDecl 0x12f940fe8 <col:2, col:30> col:30 used el 'struct ldb_message_element *'     |-DeclStmt 0x12f941190 <line:7:2, col:22>     | `-VarDecl 0x12f941128 <col:2, col:18> col:18 used vals 'struct ldb_val *'     |-DeclStmt 0x12f941228 <line:8:2, col:9>     | `-VarDecl 0x12f9411c0 <col:2, col:6> col:6 used ret 'int'     |-BinaryOperator 0x12f9414b0 <line:10:2, col:42> 'struct ldb_message_element *' '='     | |-DeclRefExpr 0x12f941240 <col:2> 'struct ldb_message_element *' lvalue Var 0x12f940fe8 'el' 'struct ldb_message_element *'     | `-ImplicitCastExpr 0x12f941498 <col:7, col:42> 'struct ldb_message_element *' <IntegralToPointer>     |   `-CallExpr 0x12f941438 <col:7, col:42> 'int'     |     |-ImplicitCastExpr 0x12f941420 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x12f941390 <col:7> 'int ()' Function 0x12f9412d8 'ldb_msg_find_element' 'int ()'     |     |-ImplicitCastExpr 0x12f941468 <col:28> 'struct ldb_message *' <LValueToRValue>     |     | `-DeclRefExpr 0x12f9413b0 <col:28> 'struct ldb_message *' lvalue ParmVar 0x12f928648 'msg' 'struct ldb_message *'     |     `-ImplicitCastExpr 0x12f941480 <col:33> 'const char *' <LValueToRValue>     |       `-DeclRefExpr 0x12f9413d0 <col:33> 'const char *' lvalue ParmVar 0x12f9286c8 'attr_name' 'const char *'     |-IfStmt 0x12f9418e8 <line:11:2, line:16:2>     | |-UnaryOperator 0x12f941508 <line:11:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12f9414f0 <col:7> 'struct ldb_message_element *' <LValueToRValue>     | |   `-DeclRefExpr 0x12f9414d0 <col:7> 'struct ldb_message_element *' lvalue Var 0x12f940fe8 'el' 'struct ldb_message_element *'     | `-CompoundStmt 0x12f9418c8 <col:11, line:16:2>     |   |-BinaryOperator 0x12f941790 <line:12:3, col:49> 'int' '='     |   | |-DeclRefExpr 0x12f941520 <col:3> 'int' lvalue Var 0x12f9411c0 'ret' 'int'     |   | `-CallExpr 0x12f941720 <col:9, col:49> 'int'     |   |   |-ImplicitCastExpr 0x12f941708 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x12f941620 <col:9> 'int ()' Function 0x12f941568 'ldb_msg_add_empty' 'int ()'     |   |   |-ImplicitCastExpr 0x12f941760 <col:27> 'struct ldb_message *' <LValueToRValue>     |   |   | `-DeclRefExpr 0x12f941640 <col:27> 'struct ldb_message *' lvalue ParmVar 0x12f928648 'msg' 'struct ldb_message *'     |   |   |-ImplicitCastExpr 0x12f941778 <col:32> 'const char *' <LValueToRValue>     |   |   | `-DeclRefExpr 0x12f941660 <col:32> 'const char *' lvalue ParmVar 0x12f9286c8 'attr_name' 'const char *'     |   |   |-IntegerLiteral 0x12f941680 <col:43> 'int' 0     |   |   `-UnaryOperator 0x12f9416f0 <col:46, col:47> 'struct ldb_message_element **' prefix '&' cannot overflow     |   |     `-DeclRefExpr 0x12f9416a0 <col:47> 'struct ldb_message_element *' lvalue Var 0x12f940fe8 'el' 'struct ldb_message_element *'     |   `-IfStmt 0x12f9418a8 <line:13:3, line:15:3>     |     |-BinaryOperator 0x12f941828 <line:13:7, col:14> 'int' contains-errors '!='     |     | |-DeclRefExpr 0x12f9417b0 <col:7> 'int' lvalue Var 0x12f9411c0 'ret' 'int'     |     | `-RecoveryExpr 0x12f941808 <col:14> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x12f941890 <col:27, line:15:3>     |       `-ReturnStmt 0x12f941880 <line:14:4, col:11>     |         `-ImplicitCastExpr 0x12f941868 <col:11> 'int' <LValueToRValue>     |           `-DeclRefExpr 0x12f941848 <col:11> 'int' lvalue Var 0x12f9411c0 'ret' 'int'     |-IfStmt 0x138009e40 <line:20:2, line:22:2>     | |-UnaryOperator 0x138009dc8 <line:20:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x138009db0 <col:7> 'struct ldb_val *' <LValueToRValue>     | |   `-DeclRefExpr 0x138009d90 <col:7> 'struct ldb_val *' lvalue Var 0x12f941128 'vals' 'struct ldb_val *'     | `-CompoundStmt 0x138009e28 <col:13, line:22:2>     |   `-ReturnStmt 0x138009e18 <line:21:3, col:10>     |     `-RecoveryExpr 0x138009df8 <col:10> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x138009ee0 <line:23:2, col:15> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x138009e98 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x138009e60 <col:2> 'struct ldb_message_element *' lvalue Var 0x12f940fe8 'el' 'struct ldb_message_element *'     | `-DeclRefExpr 0x138009ec0 <col:15> 'struct ldb_val *' lvalue Var 0x12f941128 'vals' 'struct ldb_val *'     |-BinaryOperator 0x13800a060 <line:24:2, col:32> '<dependent type>' contains-errors '='     | |-ArraySubscriptExpr 0x138009ff0 <col:2, col:27> '<dependent type>' contains-errors lvalue     | | |-ImplicitCastExpr 0x138009fc0 <col:2, col:6> '<dependent type>' contains-errors <LValueToRValue>     | | | `-RecoveryExpr 0x138009f38 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x138009f00 <col:2> 'struct ldb_message_element *' lvalue Var 0x12f940fe8 'el' 'struct ldb_message_element *'     | | `-ImplicitCastExpr 0x138009fd8 <col:13, col:17> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x138009f98 <col:13, col:17> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x138009f60 <col:13> 'struct ldb_message_element *' lvalue Var 0x12f940fe8 'el' 'struct ldb_message_element *'     | `-UnaryOperator 0x13800a048 <col:31, col:32> 'const struct ldb_val' lvalue prefix '*' cannot overflow     |   `-ImplicitCastExpr 0x13800a030 <col:32> 'const struct ldb_val *' <LValueToRValue>     |     `-DeclRefExpr 0x13800a010 <col:32> 'const struct ldb_val *' lvalue ParmVar 0x12f940ac8 'val' 'const struct ldb_val *'     |-UnaryOperator 0x13800a0e0 <line:25:2, col:16> '<dependent type>' contains-errors postfix '++' cannot overflow     | `-RecoveryExpr 0x13800a0b8 <col:2, col:6> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x13800a080 <col:2> 'struct ldb_message_element *' lvalue Var 0x12f940fe8 'el' 'struct ldb_message_element *'     |-IfStmt 0x13800a1f0 <line:27:2, line:29:2>     | |-ImplicitCastExpr 0x13800a118 <line:27:6> 'struct ldb_message_element **' <LValueToRValue>     | | `-DeclRefExpr 0x13800a0f8 <col:6> 'struct ldb_message_element **' lvalue ParmVar 0x12f940cf8 'return_el' 'struct ldb_message_element **'     | `-CompoundStmt 0x13800a1d8 <col:17, line:29:2>     |   `-BinaryOperator 0x13800a1b8 <line:28:3, col:16> 'struct ldb_message_element *' '='     |     |-UnaryOperator 0x13800a168 <col:3, col:4> 'struct ldb_message_element *' lvalue prefix '*' cannot overflow     |     | `-ImplicitCastExpr 0x13800a150 <col:4> 'struct ldb_message_element **' <LValueToRValue>     |     |   `-DeclRefExpr 0x13800a130 <col:4> 'struct ldb_message_element **' lvalue ParmVar 0x12f940cf8 'return_el' 'struct ldb_message_element **'     |     `-ImplicitCastExpr 0x13800a1a0 <col:16> 'struct ldb_message_element *' <LValueToRValue>     |       `-DeclRefExpr 0x13800a180 <col:16> 'struct ldb_message_element *' lvalue Var 0x12f940fe8 'el' 'struct ldb_message_element *'     `-ReturnStmt 0x13800a248 <line:31:2, col:9>       `-RecoveryExpr 0x13800a228 <col:9> '<dependent type>' contains-errors lvalue ","19890":"`-FunctionDecl 0x134941ba8  line:1:16 invalid pipe_get_pages_alloc 'int (struct iov_iter *, struct page ***, int, int *)' static   |-ParmVarDecl 0x134928668 <col:37, col:54> col:54 used i 'struct iov_iter *'   |-ParmVarDecl 0x134941920 <line:2:6, col:21> col:21 used pages 'struct page ***'   |-ParmVarDecl 0x1349419a0 <col:28, col:35> col:35 referenced invalid maxsize 'int'   |-ParmVarDecl 0x134941a58 <line:3:6, col:14> col:14 invalid start 'int *'   `-CompoundStmt 0x1349434a0 <line:4:1, line:33:1>     |-DeclStmt 0x134941d90 <line:5:2, col:17>     | `-VarDecl 0x134941d28 <col:2, col:16> col:16 used p 'struct page **'     |-UnaryExprOrTypeTraitExpr 0x134941e00 <line:6:2, col:9> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x134941de0 <col:9> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x134941ea0 <line:7:2, col:9>     | `-VarDecl 0x134941e38 <col:2, col:6> col:6 used idx 'int'     |-DeclStmt 0x134941f38 <line:8:2, col:12>     | `-VarDecl 0x134941ed0 <col:2, col:6> col:6 used npages 'int'     |-IfStmt 0x134941fd0 <line:10:2, line:11:10>     | |-UnaryOperator 0x134941f88 <line:10:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x134941f70 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x134941f50 <col:7> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x134941fc0 <line:11:3, col:10>     |   `-IntegerLiteral 0x134941fa0 <col:10> 'int' 0     |-IfStmt 0x1349422d8 <line:13:2, line:14:11>     | |-UnaryOperator 0x134942218 <line:13:6, col:15> 'int' prefix '!' cannot overflow     | | `-CallExpr 0x1349421d8 <col:7, col:15> 'int'     | |   |-ImplicitCastExpr 0x1349421c0 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x134942150 <col:7> 'int ()' Function 0x134942098 'sanity' 'int ()'     | |   `-ImplicitCastExpr 0x134942200 <col:14> 'struct iov_iter *' <LValueToRValue>     | |     `-DeclRefExpr 0x134942170 <col:14> 'struct iov_iter *' lvalue ParmVar 0x134928668 'i' 'struct iov_iter *'     | `-ReturnStmt 0x1349422c8 <line:14:3, col:11>     |   `-UnaryOperator 0x1349422b0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x134942298 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x134942278 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x134942470 <line:16:2, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1349423d8 <col:2> 'int ()' Function 0x134942320 'data_start' 'int ()'     | |-DeclRefExpr 0x1349423f8 <col:13> 'struct iov_iter *' lvalue ParmVar 0x134928668 'i' 'struct iov_iter *'     | |-UnaryOperator 0x134942438 <col:16, col:17> 'int *' prefix '&' cannot overflow     | | `-DeclRefExpr 0x134942418 <col:17> 'int' lvalue Var 0x134941e38 'idx' 'int'     | `-RecoveryExpr 0x134942450 <col:22> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x134942798 <line:18:2, col:68> 'int' contains-errors '='     | |-DeclRefExpr 0x1349424a8 <col:2> 'int' lvalue Var 0x134941ed0 'npages' 'int'     | `-BinaryOperator 0x134942778 <col:11, col:68> '<dependent type>' contains-errors '+'     |   |-ParenExpr 0x134942738 <col:11, col:64> '<dependent type>' contains-errors     |   | `-BinaryOperator 0x134942718 <col:12, col:63> '<dependent type>' contains-errors '&'     |   |   |-ParenExpr 0x1349425f0 <col:12, col:38> '<dependent type>' contains-errors     |   |   | `-BinaryOperator 0x1349425d0 <col:13, col:37> '<dependent type>' contains-errors '-'     |   |   |   |-BinaryOperator 0x134942590 <col:13, col:31> '<dependent type>' contains-errors '-'     |   |   |   | |-CXXDependentScopeMemberExpr 0x134942528 <col:13, col:22> '<dependent type>' contains-errors lvalue ->curbuf     |   |   |   | | `-RecoveryExpr 0x134942500 <col:13, col:16> '<dependent type>' contains-errors lvalue     |   |   |   | |   `-DeclRefExpr 0x1349424c8 <col:13> 'struct iov_iter *' lvalue ParmVar 0x134928668 'i' 'struct iov_iter *'     |   |   |   | `-DeclRefExpr 0x134942570 <col:31> 'int' lvalue Var 0x134941e38 'idx' 'int'     |   |   |   `-IntegerLiteral 0x1349425b0 <col:37> 'int' 1     |   |   `-ParenExpr 0x1349426f8 <col:42, col:63> '<dependent type>' contains-errors     |   |     `-BinaryOperator 0x1349426d8 <col:43, col:62> '<dependent type>' contains-errors '-'     |   |       |-CXXDependentScopeMemberExpr 0x134942670 <col:43, col:52> '<dependent type>' contains-errors lvalue ->buffers     |   |       | `-RecoveryExpr 0x134942648 <col:43, col:46> '<dependent type>' contains-errors lvalue     |   |       |   `-DeclRefExpr 0x134942610 <col:43> 'struct iov_iter *' lvalue ParmVar 0x134928668 'i' 'struct iov_iter *'     |   |       `-IntegerLiteral 0x1349426b8 <col:62> 'int' 1     |   `-IntegerLiteral 0x134942758 <col:68> 'int' 1     |-IfStmt 0x134942d10 <line:20:2, line:23:52> has_else     | |-BinaryOperator 0x134942908 <line:20:6, col:16> 'int' contains-errors '>'     | | |-RecoveryExpr 0x134942890 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1349428e8 <col:16> '<dependent type>' contains-errors lvalue     | |-BinaryOperator 0x1349429c8 <line:21:3, col:13> '<dependent type>' contains-errors '='     | | |-RecoveryExpr 0x134942948 <col:3> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x134942928 <col:3> 'int' lvalue ParmVar 0x1349419a0 'maxsize' 'int'     | | `-RecoveryExpr 0x1349429a8 <col:13> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x134942cf0 <line:23:3, col:52> 'int' contains-errors '='     |   |-DeclRefExpr 0x1349429e8 <col:3> 'int' lvalue Var 0x134941ed0 'npages' 'int'     |   `-CallExpr 0x134942cc0 <col:12, col:52> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x134942ae8 <col:12> 'int ()' Function 0x134942a30 'DIV_ROUND_UP' 'int ()'     |     |-BinaryOperator 0x134942c80 <col:25, col:36> '<dependent type>' contains-errors '+'     |     | |-RecoveryExpr 0x134942b08 <col:25> '<dependent type>' contains-errors lvalue     |     | `-UnaryOperator 0x134942c68 <col:35, col:36> '<dependent type>' contains-errors prefix '*' cannot overflow     |     |   `-ImplicitCastExpr 0x134942c50 <col:36> '<dependent type>' contains-errors <LValueToRValue>     |     |     `-RecoveryExpr 0x134942b28 <col:36> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x134942ca0 <col:43> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x134942ef0 <line:24:2, col:28> 'struct page **' '='     | |-DeclRefExpr 0x134942d40 <col:2> 'struct page **' lvalue Var 0x134941d28 'p' 'struct page **'     | `-ImplicitCastExpr 0x134942ed8 <col:6, col:28> 'struct page **' <IntegralToPointer>     |   `-CallExpr 0x134942e98 <col:6, col:28> 'int'     |     |-ImplicitCastExpr 0x134942e80 <col:6> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x134942e40 <col:6> 'int ()' Function 0x134942d88 'get_pages_array' 'int ()'     |     `-ImplicitCastExpr 0x134942ec0 <col:22> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x134942e60 <col:22> 'int' lvalue Var 0x134941ed0 'npages' 'int'     |-IfStmt 0x134943008 <line:25:2, line:26:11>     | |-UnaryOperator 0x134942f48 <line:25:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x134942f30 <col:7> 'struct page **' <LValueToRValue>     | |   `-DeclRefExpr 0x134942f10 <col:7> 'struct page **' lvalue Var 0x134941d28 'p' 'struct page **'     | `-ReturnStmt 0x134942ff8 <line:26:3, col:11>     |   `-UnaryOperator 0x134942fe0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x134942fc8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x134942fa8 <col:11> '<dependent type>' contains-errors lvalue     `-IfStmt 0x134943470 <line:28:2, line:31:11> has_else       |-RecoveryExpr 0x134943230 <line:28:6, col:10> '_Bool' contains-errors       |-BinaryOperator 0x1349432d8 <line:29:3, col:12> 'struct page **' '='       | |-UnaryOperator 0x134943288 <col:3, col:4> 'struct page **' lvalue prefix '*' cannot overflow       | | `-ImplicitCastExpr 0x134943270 <col:4> 'struct page ***' <LValueToRValue>       | |   `-DeclRefExpr 0x134943250 <col:4> 'struct page ***' lvalue ParmVar 0x134941920 'pages' 'struct page ***'       | `-ImplicitCastExpr 0x1349432c0 <col:12> 'struct page **' <LValueToRValue>       |   `-DeclRefExpr 0x1349432a0 <col:12> 'struct page **' lvalue Var 0x134941d28 'p' 'struct page **'       `-CallExpr 0x134943430 <line:31:3, col:11> 'int'         |-ImplicitCastExpr 0x134943418 <col:3> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x1349433d8 <col:3> 'int ()' Function 0x134943320 'kvfree' 'int ()'         `-ImplicitCastExpr 0x134943458 <col:10> 'struct page **' <LValueToRValue>           `-DeclRefExpr 0x1349433f8 <col:10> 'struct page **' lvalue Var 0x134941d28 'p' 'struct page **' ","19351":"`-FunctionDecl 0x12c80de58  line:1:1 invalid _equalLateralJoinInfo 'int (const int *, const int *)'   |-ParmVarDecl 0x12c80dcf0 <col:23, col:46> col:46 invalid a 'const int *'   |-ParmVarDecl 0x12c80dd70 <col:49, col:72> col:72 invalid b 'const int *'   `-CompoundStmt 0x12c80e208 <line:2:1, line:7:1>     |-CallExpr 0x12c80e0f0 <line:3:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12c80e070 <col:2> 'int ()' Function 0x12c80dfb8 'COMPARE_BITMAPSET_FIELD' 'int ()'     | `-RecoveryExpr 0x12c80e0d0 <col:26> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12c80e198 <line:4:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12c80e118 <col:2> 'int ()' Function 0x12c80dfb8 'COMPARE_BITMAPSET_FIELD' 'int ()'     | `-RecoveryExpr 0x12c80e178 <col:26> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12c80e1f8 <line:6:2, col:9>       `-RecoveryExpr 0x12c80e1d8 <col:9> '<dependent type>' contains-errors lvalue ","19666":"`-FunctionDecl 0x129928318  line:1:12 invalid sha1write_ewah_helper 'int (void *, const void *, int)' static   |-ParmVarDecl 0x1299280d8 <col:34, col:40> col:40 used f 'void *'   |-ParmVarDecl 0x129928188 <col:43, col:55> col:55 used buf 'const void *'   |-ParmVarDecl 0x129928220 <col:60, col:67> col:67 invalid len 'int'   `-CompoundStmt 0x129928618 <line:2:1, line:6:1>     |-CallExpr 0x1299285b0 <line:4:2, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x129928530 <col:2> 'int ()' Function 0x129928478 'sha1write' 'int ()'     | |-DeclRefExpr 0x129928550 <col:12> 'void *' lvalue ParmVar 0x1299280d8 'f' 'void *'     | |-DeclRefExpr 0x129928570 <col:15> 'const void *' lvalue ParmVar 0x129928188 'buf' 'const void *'     | `-RecoveryExpr 0x129928590 <col:20> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x129928608 <line:5:2, col:9>       `-RecoveryExpr 0x1299285e8 <col:9> '<dependent type>' contains-errors lvalue ","19722":"`-FunctionDecl 0x11e944358  col:9 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x11e944458 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x11e9444c0 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x11e944528 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x11e944400 <<invalid sloc>> Implicit 900 ","19303":"`-FunctionDecl 0x14f80e350  line:1:13 mntput_no_expire 'void (struct mount *)' static   |-ParmVarDecl 0x14f80e248 <col:30, col:44> col:44 used mnt 'struct mount *'   `-CompoundStmt 0x14f82a030 <line:2:1, line:38:1>     |-CallExpr 0x14f8267d8 <line:3:2, col:16> 'int'     | `-ImplicitCastExpr 0x14f8267c0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x14f826770 <col:2> 'int ()' Function 0x14f8266b8 'rcu_read_lock' 'int ()'     |-CallExpr 0x14f826968 <line:4:2, col:23> 'int'     | |-ImplicitCastExpr 0x14f826950 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14f8268d8 <col:2> 'int ()' Function 0x14f826820 'mnt_add_count' 'int ()'     | |-ImplicitCastExpr 0x14f826998 <col:16> 'struct mount *' <LValueToRValue>     | | `-DeclRefExpr 0x14f8268f8 <col:16> 'struct mount *' lvalue ParmVar 0x14f80e248 'mnt' 'struct mount *'     | `-UnaryOperator 0x14f826938 <col:21, col:22> 'int' prefix '-'     |   `-IntegerLiteral 0x14f826918 <col:22> 'int' 1     |-IfStmt 0x14f826ca0 <line:5:2, line:8:2>     | |-CallExpr 0x14f826b10 <line:5:6, col:24> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14f826a90 <col:6> 'int ()' Function 0x14f8269d8 'likely' 'int ()'     | | `-RecoveryExpr 0x14f826ae8 <col:13, col:18> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14f826ab0 <col:13> 'struct mount *' lvalue ParmVar 0x14f80e248 'mnt' 'struct mount *'     | `-CompoundStmt 0x14f826c80 <col:27, line:8:2>     |   |-CallExpr 0x14f826c50 <line:6:3, col:19> 'int'     |   | `-ImplicitCastExpr 0x14f826c38 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x14f826c18 <col:3> 'int ()' Function 0x14f826b60 'rcu_read_unlock' 'int ()'     |   `-ReturnStmt 0x14f826c70 <line:7:3>     |-CallExpr 0x14f826dd8 <line:9:2, col:18> 'int'     | `-ImplicitCastExpr 0x14f826dc0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x14f826da0 <col:2> 'int ()' Function 0x14f826ce8 'lock_mount_hash' 'int ()'     |-IfStmt 0x14f827138 <line:10:2, line:14:2>     | |-CallExpr 0x14f826f30 <line:10:6, col:23> 'int'     | | |-ImplicitCastExpr 0x14f826f18 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x14f826ed8 <col:6> 'int ()' Function 0x14f826e20 'mnt_get_count' 'int ()'     | | `-ImplicitCastExpr 0x14f826f58 <col:20> 'struct mount *' <LValueToRValue>     | |   `-DeclRefExpr 0x14f826ef8 <col:20> 'struct mount *' lvalue ParmVar 0x14f80e248 'mnt' 'struct mount *'     | `-CompoundStmt 0x14f827110 <col:26, line:14:2>     |   |-CallExpr 0x14f826fa8 <line:11:3, col:19> 'int'     |   | `-ImplicitCastExpr 0x14f826f90 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x14f826f70 <col:3> 'int ()' Function 0x14f826b60 'rcu_read_unlock' 'int ()'     |   |-CallExpr 0x14f8270e0 <line:12:3, col:21> 'int'     |   | `-ImplicitCastExpr 0x14f8270c8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x14f8270a8 <col:3> 'int ()' Function 0x14f826ff0 'unlock_mount_hash' 'int ()'     |   `-ReturnStmt 0x14f827100 <line:13:3>     |-IfStmt 0x14f8274b0 <line:15:2, line:19:2>     | |-CallExpr 0x14f8273a0 <line:15:6, col:46> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14f827238 <col:6> 'int ()' Function 0x14f827180 'unlikely' 'int ()'     | | `-BinaryOperator 0x14f827380 <col:15, col:36> '<dependent type>' contains-errors '&'     | |   |-CXXDependentScopeMemberExpr 0x14f8272b8 <col:15, col:24> '<dependent type>' contains-errors lvalue .mnt_flags     | |   | `-RecoveryExpr 0x14f827290 <col:15, col:20> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x14f827258 <col:15> 'struct mount *' lvalue ParmVar 0x14f80e248 'mnt' 'struct mount *'     | |   `-RecoveryExpr 0x14f827360 <col:36> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14f827488 <col:49, line:19:2>     |   |-CallExpr 0x14f827400 <line:16:3, col:19> 'int'     |   | `-ImplicitCastExpr 0x14f8273e8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x14f8273c8 <col:3> 'int ()' Function 0x14f826b60 'rcu_read_unlock' 'int ()'     |   |-CallExpr 0x14f827458 <line:17:3, col:21> 'int'     |   | `-ImplicitCastExpr 0x14f827440 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x14f827420 <col:3> 'int ()' Function 0x14f826ff0 'unlock_mount_hash' 'int ()'     |   `-ReturnStmt 0x14f827478 <line:18:3>     |-CompoundAssignOperator 0x14f829200 <line:20:2, col:24> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-CXXDependentScopeMemberExpr 0x14f827530 <col:2, col:11> '<dependent type>' contains-errors lvalue .mnt_flags     | | `-RecoveryExpr 0x14f827508 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14f8274d0 <col:2> 'struct mount *' lvalue ParmVar 0x14f80e248 'mnt' 'struct mount *'     | `-RecoveryExpr 0x14f8275c0 <col:24> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14f829268 <line:21:2, col:18> 'int'     | `-ImplicitCastExpr 0x14f829250 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x14f829230 <col:2> 'int ()' Function 0x14f826b60 'rcu_read_unlock' 'int ()'     |-CallExpr 0x14f829400 <line:23:2, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14f829368 <col:2> 'int ()' Function 0x14f8292b0 'list_del' 'int ()'     | `-UnaryOperator 0x14f8293e8 <col:11, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14f8293c0 <col:12, col:17> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14f829388 <col:12> 'struct mount *' lvalue ParmVar 0x14f80e248 'mnt' 'struct mount *'     |-CallExpr 0x14f829460 <line:24:2, col:20> 'int'     | `-ImplicitCastExpr 0x14f829448 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x14f829428 <col:2> 'int ()' Function 0x14f826ff0 'unlock_mount_hash' 'int ()'     |-IfStmt 0x14f829e98 <line:26:2, line:36:2>     | |-RecoveryExpr 0x14f829548 <line:26:6, col:49> '_Bool' contains-errors     | `-CompoundStmt 0x14f829e70 <col:52, line:36:2>     |   |-DeclStmt 0x14f829758 <line:27:3, col:37>     |   | |-RecordDecl 0x14f829568 <col:3, col:10> col:10 struct task_struct     |   | `-VarDecl 0x14f8296d8 <col:3, col:23> col:23 used task 'struct task_struct *'     |   |-IfStmt 0x14f829b88 <line:28:3, line:32:3>     |   | |-RecoveryExpr 0x14f8297f0 <line:28:7, col:41> '_Bool' contains-errors     |   | `-CompoundStmt 0x14f829b70 <col:44, line:32:3>     |   |   `-IfStmt 0x14f829b50 <line:30:4, line:31:5>     |   |     |-RecoveryExpr 0x14f829b20 <line:30:8, col:48> '_Bool' contains-errors     |   |     `-ReturnStmt 0x14f829b40 <line:31:5>     |   `-ReturnStmt 0x14f829e60 <line:35:3>     `-CallExpr 0x14f829ff0 <line:37:2, col:17> 'int'       |-ImplicitCastExpr 0x14f829fd8 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x14f829f98 <col:2> 'int ()' Function 0x14f829ee0 'cleanup_mnt' 'int ()'       `-ImplicitCastExpr 0x14f82a018 <col:14> 'struct mount *' <LValueToRValue>         `-DeclRefExpr 0x14f829fb8 <col:14> 'struct mount *' lvalue ParmVar 0x14f80e248 'mnt' 'struct mount *' ","20192":"`-FunctionDecl 0x122128238  line:1:1 TEST 'int (int, int)'   |-ParmVarDecl 0x122128158 <col:6> col:6 used RegexMatchExpression 'int'   |-ParmVarDecl 0x1221280d8 <col:28> col:28 MatchesElementExact 'int'   `-CompoundStmt 0x122140eb8 <col:49, line:10:1>     |-ImplicitCastExpr 0x122128370 <line:6:5> 'int' <LValueToRValue>     | `-DeclRefExpr 0x122128350 <col:5> 'int' lvalue ParmVar 0x122128158 'RegexMatchExpression' 'int'     |-CallExpr 0x122128730 <line:7:5, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1221284a0 <col:5> 'int ()' Function 0x1221283e8 'ASSERT' 'int ()'     | `-CallExpr 0x122128710 <col:12, col:35> '<dependent type>' contains-errors     |   `-CXXDependentScopeMemberExpr 0x1221286c8 <col:12, col:30> '<dependent type>' contains-errors lvalue .isOK     |     `-CallExpr 0x1221286a0 <col:12, col:28> '<dependent type>' contains-errors     |       |-CXXDependentScopeMemberExpr 0x122128658 <col:12, col:18> '<dependent type>' contains-errors lvalue .init     |       | `-RecoveryExpr 0x122128638 <col:12> '<dependent type>' contains-errors lvalue     |       `-StringLiteral 0x122128560 <col:23> 'char[4]' lvalue \"STR\"     |-CallExpr 0x122140bd0 <line:8:5, col:60> '<dependent type>' contains-errors     | |-DeclRefExpr 0x122128758 <col:5> 'int ()' Function 0x1221283e8 'ASSERT' 'int ()'     | `-CallExpr 0x122140ba8 <col:12, col:59> '<dependent type>' contains-errors     |   |-CXXDependentScopeMemberExpr 0x122140ad8 <col:12, col:18> '<dependent type>' contains-errors lvalue .matchesSingleElement     |   | `-RecoveryExpr 0x122140ab8 <col:12> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x122140b88 <col:39, col:58> '<dependent type>' contains-errors     |     `-CXXDependentScopeMemberExpr 0x122140b40 <col:39, col:45> '<dependent type>' contains-errors lvalue .firstElement     |       `-RecoveryExpr 0x122140b20 <col:39> '<dependent type>' contains-errors lvalue     `-CallExpr 0x122140e90 <line:9:5, col:64> '<dependent type>' contains-errors       |-DeclRefExpr 0x122140bf8 <col:5> 'int ()' Function 0x1221283e8 'ASSERT' 'int ()'       `-UnaryOperator 0x122140e78 <col:12, col:63> '<dependent type>' contains-errors prefix '!' cannot overflow         `-CallExpr 0x122140e50 <col:13, col:63> '<dependent type>' contains-errors           |-CXXDependentScopeMemberExpr 0x122140d80 <col:13, col:19> '<dependent type>' contains-errors lvalue .matchesSingleElement           | `-RecoveryExpr 0x122140d60 <col:13> '<dependent type>' contains-errors lvalue           `-CallExpr 0x122140e30 <col:40, col:62> '<dependent type>' contains-errors             `-CXXDependentScopeMemberExpr 0x122140de8 <col:40, col:49> '<dependent type>' contains-errors lvalue .firstElement               `-RecoveryExpr 0x122140dc8 <col:40> '<dependent type>' contains-errors lvalue ","19753":"`-FunctionDecl 0x127928750  line:1:6 referenced unregister_sysctl_table 'void (struct ctl_table_header *)'   |-ParmVarDecl 0x127928648 <col:30, col:56> col:56 used header 'struct ctl_table_header *'   `-CompoundStmt 0x127944028 <line:2:1, line:28:1>     |-DeclStmt 0x127940ac8 <line:3:2, col:19>     | `-VarDecl 0x127940a60 <col:2, col:6> col:6 used nr_subheaders 'int'     |-CallExpr 0x127940c78 <line:4:2, col:14> 'int'     | `-ImplicitCastExpr 0x127940c60 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x127940c10 <col:2> 'int ()' Function 0x127940b58 'might_sleep' 'int ()'     |-IfStmt 0x127940d40 <line:6:2, line:7:3>     | |-BinaryOperator 0x127940d10 <line:6:6, col:16> 'int' contains-errors '=='     | | |-DeclRefExpr 0x127940c98 <col:6> 'struct ctl_table_header *' lvalue ParmVar 0x127928648 'header' 'struct ctl_table_header *'     | | `-RecoveryExpr 0x127940cf0 <col:16> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x127940d30 <line:7:3>     |-BinaryOperator 0x127940f08 <line:9:2, col:56> 'int' contains-errors '='     | |-DeclRefExpr 0x127940d60 <col:2> 'int' lvalue Var 0x127940a60 'nr_subheaders' 'int'     | `-CallExpr 0x127940ee0 <col:18, col:56> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x127940e60 <col:18> 'int ()' Function 0x127940da8 'count_subheaders' 'int ()'     |   `-RecoveryExpr 0x127940eb8 <col:35, col:43> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x127940e80 <col:35> 'struct ctl_table_header *' lvalue ParmVar 0x127928648 'header' 'struct ctl_table_header *'     |-IfStmt 0x127943b20 <line:10:2, line:23:2>     | |-CallExpr 0x1279410b8 <line:10:6, col:32> 'int'     | | |-ImplicitCastExpr 0x1279410a0 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x127941008 <col:6> 'int ()' Function 0x127940f50 'unlikely' 'int ()'     | | `-BinaryOperator 0x127941080 <col:15, col:31> 'int' '>'     | |   |-ImplicitCastExpr 0x127941068 <col:15> 'int' <LValueToRValue>     | |   | `-DeclRefExpr 0x127941028 <col:15> 'int' lvalue Var 0x127940a60 'nr_subheaders' 'int'     | |   `-IntegerLiteral 0x127941048 <col:31> 'int' 1     | `-CompoundStmt 0x127943ae0 <col:35, line:23:2>     |   |-DeclStmt 0x127941230 <line:11:3, col:39>     |   | `-VarDecl 0x1279411c8 <col:3, col:29> col:29 used subheaders 'struct ctl_table_header **'     |   |-DeclStmt 0x1279412c8 <line:12:3, col:8>     |   | `-VarDecl 0x127941260 <col:3, col:7> col:7 used i 'int'     |   |-BinaryOperator 0x127941418 <line:14:3, col:55> 'struct ctl_table_header **' contains-errors '='     |   | |-DeclRefExpr 0x1279412e0 <col:3> 'struct ctl_table_header **' lvalue Var 0x1279411c8 'subheaders' 'struct ctl_table_header **'     |   | `-CStyleCastExpr 0x1279413f0 <col:16, col:55> 'struct ctl_table_header **' contains-errors <Dependent>     |   |   `-ParenExpr 0x1279413d0 <col:44, col:55> '<dependent type>' contains-errors lvalue     |   |     `-RecoveryExpr 0x127941358 <col:45, col:54> '<dependent type>' contains-errors lvalue     |   |       |-DeclRefExpr 0x127941300 <col:45> 'struct ctl_table_header *' lvalue ParmVar 0x127928648 'header' 'struct ctl_table_header *'     |   |       `-IntegerLiteral 0x127941320 <col:54> 'int' 1     |   |-ForStmt 0x127943a00 <line:15:3, line:20:3>     |   | |-BinaryOperator 0x1279414d0 <line:15:8, col:27> 'int' '='     |   | | |-DeclRefExpr 0x127941438 <col:8> 'int' lvalue Var 0x127941260 'i' 'int'     |   | | `-BinaryOperator 0x1279414b0 <col:12, col:27> 'int' '-'     |   | |   |-ImplicitCastExpr 0x127941498 <col:12> 'int' <LValueToRValue>     |   | |   | `-DeclRefExpr 0x127941458 <col:12> 'int' lvalue Var 0x127940a60 'nr_subheaders' 'int'     |   | |   `-IntegerLiteral 0x127941478 <col:27> 'int' 1     |   | |-<<<NULL>>>     |   | |-BinaryOperator 0x127941548 <col:30, col:35> 'int' '>='     |   | | |-ImplicitCastExpr 0x127941530 <col:30> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x1279414f0 <col:30> 'int' lvalue Var 0x127941260 'i' 'int'     |   | | `-IntegerLiteral 0x127941510 <col:35> 'int' 0     |   | |-UnaryOperator 0x127941588 <col:38, col:39> 'int' postfix '--'     |   | | `-DeclRefExpr 0x127941568 <col:38> 'int' lvalue Var 0x127941260 'i' 'int'     |   | `-CompoundStmt 0x1279439d0 <col:43, line:20:3>     |   |   |-DeclStmt 0x1279416d8 <line:16:4, col:49>     |   |   | `-VarDecl 0x1279415c8 <col:4, col:48> col:29 used subh 'struct ctl_table_header *' cinit     |   |   |   `-ImplicitCastExpr 0x1279416c0 <col:36, col:48> 'struct ctl_table_header *' <LValueToRValue>     |   |   |     `-ArraySubscriptExpr 0x1279416a0 <col:36, col:48> 'struct ctl_table_header *' lvalue     |   |   |       |-ImplicitCastExpr 0x127941670 <col:36> 'struct ctl_table_header **' <LValueToRValue>     |   |   |       | `-DeclRefExpr 0x127941630 <col:36> 'struct ctl_table_header **' lvalue Var 0x1279411c8 'subheaders' 'struct ctl_table_header **'     |   |   |       `-ImplicitCastExpr 0x127941688 <col:47> 'int' <LValueToRValue>     |   |   |         `-DeclRefExpr 0x127941650 <col:47> 'int' lvalue Var 0x127941260 'i' 'int'     |   |   |-DeclStmt 0x127941938 <line:17:4, col:49>     |   |   | |-RecordDecl 0x1279416f0 <col:4, col:11> col:11 struct ctl_table     |   |   | `-VarDecl 0x127941858 <col:4, col:36> col:22 used table 'struct ctl_table *' cinit     |   |   |   `-RecoveryExpr 0x1279418f8 <col:30, col:36> '<dependent type>' contains-errors lvalue     |   |   |     `-DeclRefExpr 0x1279418c0 <col:30> 'struct ctl_table_header *' lvalue Var 0x1279415c8 'subh' 'struct ctl_table_header *'     |   |   |-CallExpr 0x127943818 <line:18:4, col:32> 'void'     |   |   | |-ImplicitCastExpr 0x127943800 <col:4> 'void (*)(struct ctl_table_header *)' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x127941950 <col:4> 'void (struct ctl_table_header *)' Function 0x127928750 'unregister_sysctl_table' 'void (struct ctl_table_header *)'     |   |   | `-ImplicitCastExpr 0x127943840 <col:28> 'struct ctl_table_header *' <LValueToRValue>     |   |   |   `-DeclRefExpr 0x127941970 <col:28> 'struct ctl_table_header *' lvalue Var 0x1279415c8 'subh' 'struct ctl_table_header *'     |   |   `-CallExpr 0x127943990 <line:19:4, col:15> 'int' contains-errors     |   |     |-ImplicitCastExpr 0x127943978 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x127943938 <col:4> 'int ()' Function 0x127943880 'kfree' 'int ()'     |   |     `-ImplicitCastExpr 0x1279439b8 <col:10> 'struct ctl_table *' contains-errors <LValueToRValue>     |   |       `-DeclRefExpr 0x127943958 <col:10> 'struct ctl_table *' contains-errors lvalue Var 0x127941858 'table' 'struct ctl_table *'     |   |-CallExpr 0x127943a90 <line:21:3, col:15> 'int'     |   | |-ImplicitCastExpr 0x127943a78 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x127943a38 <col:3> 'int ()' Function 0x127943880 'kfree' 'int ()'     |   | `-ImplicitCastExpr 0x127943ab8 <col:9> 'struct ctl_table_header *' <LValueToRValue>     |   |   `-DeclRefExpr 0x127943a58 <col:9> 'struct ctl_table_header *' lvalue ParmVar 0x127928648 'header' 'struct ctl_table_header *'     |   `-ReturnStmt 0x127943ad0 <line:22:3>     |-CallExpr 0x127943cd0 <line:25:2, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x127943c20 <col:2> 'int ()' Function 0x127943b68 'spin_lock' 'int ()'     | `-UnaryOperator 0x127943cb8 <col:12, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x127943c98 <col:13> '<dependent type>' contains-errors lvalue     |-CallExpr 0x127943e30 <line:26:2, col:26> 'int'     | |-ImplicitCastExpr 0x127943e18 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x127943dd8 <col:2> 'int ()' Function 0x127943d20 'drop_sysctl_table' 'int ()'     | `-ImplicitCastExpr 0x127943e58 <col:20> 'struct ctl_table_header *' <LValueToRValue>     |   `-DeclRefExpr 0x127943df8 <col:20> 'struct ctl_table_header *' lvalue ParmVar 0x127928648 'header' 'struct ctl_table_header *'     `-CallExpr 0x127944000 <line:27:2, col:26> '<dependent type>' contains-errors       |-DeclRefExpr 0x127943f50 <col:2> 'int ()' Function 0x127943e98 'spin_unlock' 'int ()'       `-UnaryOperator 0x127943fe8 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x127943fc8 <col:15> '<dependent type>' contains-errors lvalue ","20030":"`-FunctionDecl 0x1030279d8  col:5 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x103027ad8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x103027b40 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x103027ba8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x103027a80 <<invalid sloc>> Implicit 882 ","19665":"`-FunctionDecl 0x13b928318  line:1:12 invalid jpc_crg_getparms 'int (int *, int *, int *)' static   |-ParmVarDecl 0x13b928128 <col:29, col:39> col:39 invalid ms 'int *'   |-ParmVarDecl 0x13b9281a8 <col:43, col:57> col:57 invalid cstate 'int *'   |-ParmVarDecl 0x13b928228 <col:65, col:79> col:79 invalid in 'int *'   `-CompoundStmt 0x13b9421d8 <line:2:1, line:19:1>     |-IfStmt 0x13b941818 <line:7:2, line:9:2>     | |-RecoveryExpr 0x13b928790 <line:7:6, col:72> '_Bool' contains-errors     | `-CompoundStmt 0x13b941800 <col:75, line:9:2>     |   `-ReturnStmt 0x13b9287e8 <line:8:3, col:11>     |     `-UnaryOperator 0x13b9287d0 <col:10, col:11> 'int' prefix '-'     |       `-IntegerLiteral 0x13b9287b0 <col:11> 'int' 1     |-ForStmt 0x13b942170 <line:10:2, line:17:2>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-BinaryOperator 0x13b941a08 <line:10:38, col:55> 'int' contains-errors '<'     | | |-RecoveryExpr 0x13b9419e8 <col:38> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x13b941980 <col:47, col:55> '<dependent type>' contains-errors lvalue ->numcomps     | |   `-RecoveryExpr 0x13b941960 <col:47> '<dependent type>' contains-errors lvalue     | |-BinaryOperator 0x13b941b18 <line:11:4, col:16> '<dependent type>' contains-errors ','     | | |-UnaryOperator 0x13b941ac8 <col:4, col:6> '<dependent type>' contains-errors prefix '++' cannot overflow     | | | `-RecoveryExpr 0x13b941aa8 <col:6> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x13b941b00 <col:14, col:16> '<dependent type>' contains-errors prefix '++' cannot overflow     | |   `-RecoveryExpr 0x13b941ae0 <col:16> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13b942158 <col:22, line:17:2>     |   `-IfStmt 0x13b942138 <line:12:3, line:16:3>     |     |-BinaryOperator 0x13b941f68 <line:12:7, line:13:34> 'int' contains-errors '||'     |     | |-CallExpr 0x13b941e88 <line:12:7, col:36> '<dependent type>' contains-errors     |     | | |-DeclRefExpr 0x13b941c18 <col:7> 'int ()' Function 0x13b941b60 'jpc_getuint16' 'int ()'     |     | | |-RecoveryExpr 0x13b941c38 <col:21> '<dependent type>' contains-errors lvalue     |     | | `-UnaryOperator 0x13b941e70 <col:25, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | |   `-CXXDependentScopeMemberExpr 0x13b941e28 <col:26, col:32> '<dependent type>' contains-errors lvalue ->hoff     |     | |     `-RecoveryExpr 0x13b941e08 <col:26> '<dependent type>' contains-errors lvalue     |     | `-CallExpr 0x13b941f38 <line:13:5, col:34> '<dependent type>' contains-errors     |     |   |-DeclRefExpr 0x13b941d00 <col:5> 'int ()' Function 0x13b941b60 'jpc_getuint16' 'int ()'     |     |   |-RecoveryExpr 0x13b941d20 <col:19> '<dependent type>' contains-errors lvalue     |     |   `-UnaryOperator 0x13b941f20 <col:23, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     |     |     `-CXXDependentScopeMemberExpr 0x13b941ed8 <col:24, col:30> '<dependent type>' contains-errors lvalue ->voff     |     |       `-RecoveryExpr 0x13b941eb8 <col:24> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x13b942118 <col:37, line:16:3>     |       |-CallExpr 0x13b9420a8 <line:14:4, col:27> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x13b942068 <col:4> 'int ()' Function 0x13b941fb0 'jpc_crg_destroyparms' 'int ()'     |       | `-RecoveryExpr 0x13b942088 <col:25> '<dependent type>' contains-errors lvalue     |       `-ReturnStmt 0x13b942108 <line:15:4, col:12>     |         `-UnaryOperator 0x13b9420f0 <col:11, col:12> 'int' prefix '-'     |           `-IntegerLiteral 0x13b9420d0 <col:12> 'int' 1     `-ReturnStmt 0x13b9421c8 <line:18:2, col:9>       `-IntegerLiteral 0x13b9421a8 <col:9> 'int' 0 ","20168":"`-FunctionDecl 0x12e80de88  line:1:1 invalid header_put_be_3byte 'int (int *, int)'   |-ParmVarDecl 0x12e80dd28 <col:22, col:34> col:34 referenced invalid psf 'int *'   |-ParmVarDecl 0x12e80dda8 <col:39, col:43> col:43 used x 'int'   `-CompoundStmt 0x12e827678 <line:2:1, line:5:1>     |-BinaryOperator 0x12e80e1b0 <line:2:3, col:50> '<dependent type>' contains-errors '='     | |-ArraySubscriptExpr 0x12e80e0f8 <col:3, col:38> '<dependent type>' contains-errors lvalue     | | |-ImplicitCastExpr 0x12e80e0e0 <col:3, col:15> '<dependent type>' contains-errors <LValueToRValue>     | | | `-CXXDependentScopeMemberExpr 0x12e80dfd0 <col:3, col:15> '<dependent type>' contains-errors lvalue .ptr     | | |   `-CXXDependentScopeMemberExpr 0x12e80df88 <col:3, col:8> '<dependent type>' contains-errors lvalue ->header     | | |     `-RecoveryExpr 0x12e80df60 <col:3> '<dependent type>' contains-errors lvalue     | | |       `-DeclRefExpr 0x12e80df40 <col:3> 'int *' lvalue ParmVar 0x12e80dd28 'psf' 'int *'     | | `-UnaryOperator 0x12e80e0c8 <col:20, col:36> '<dependent type>' contains-errors postfix '++' cannot overflow     | |   `-CXXDependentScopeMemberExpr 0x12e80e080 <col:20, col:32> '<dependent type>' contains-errors lvalue .indx     | |     `-CXXDependentScopeMemberExpr 0x12e80e038 <col:20, col:25> '<dependent type>' contains-errors lvalue ->header     | |       `-RecoveryExpr 0x12e80e018 <col:20> '<dependent type>' contains-errors lvalue     | `-ParenExpr 0x12e80e190 <col:42, col:50> 'int'     |   `-BinaryOperator 0x12e80e170 <col:43, col:48> 'int' '>>'     |     |-ImplicitCastExpr 0x12e80e158 <col:43> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x12e80e118 <col:43> 'int' lvalue ParmVar 0x12e80dda8 'x' 'int'     |     `-IntegerLiteral 0x12e80e138 <col:48> 'int' 16     |-BinaryOperator 0x12e827440 <line:3:2, col:48> '<dependent type>' contains-errors '='     | |-ArraySubscriptExpr 0x12e80e388 <col:2, col:37> '<dependent type>' contains-errors lvalue     | | |-ImplicitCastExpr 0x12e80e370 <col:2, col:14> '<dependent type>' contains-errors <LValueToRValue>     | | | `-CXXDependentScopeMemberExpr 0x12e80e260 <col:2, col:14> '<dependent type>' contains-errors lvalue .ptr     | | |   `-CXXDependentScopeMemberExpr 0x12e80e218 <col:2, col:7> '<dependent type>' contains-errors lvalue ->header     | | |     `-RecoveryExpr 0x12e80e1f0 <col:2> '<dependent type>' contains-errors lvalue     | | |       `-DeclRefExpr 0x12e80e1d0 <col:2> 'int *' lvalue ParmVar 0x12e80dd28 'psf' 'int *'     | | `-UnaryOperator 0x12e80e358 <col:19, col:35> '<dependent type>' contains-errors postfix '++' cannot overflow     | |   `-CXXDependentScopeMemberExpr 0x12e80e310 <col:19, col:31> '<dependent type>' contains-errors lvalue .indx     | |     `-CXXDependentScopeMemberExpr 0x12e80e2c8 <col:19, col:24> '<dependent type>' contains-errors lvalue ->header     | |       `-RecoveryExpr 0x12e80e2a8 <col:19> '<dependent type>' contains-errors lvalue     | `-ParenExpr 0x12e827420 <col:41, col:48> 'int'     |   `-BinaryOperator 0x12e827400 <col:42, col:47> 'int' '>>'     |     |-ImplicitCastExpr 0x12e80e3e8 <col:42> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x12e80e3a8 <col:42> 'int' lvalue ParmVar 0x12e80dda8 'x' 'int'     |     `-IntegerLiteral 0x12e80e3c8 <col:47> 'int' 8     `-BinaryOperator 0x12e827658 <line:4:2, col:41> '<dependent type>' contains-errors '='       |-ArraySubscriptExpr 0x12e827618 <col:2, col:37> '<dependent type>' contains-errors lvalue       | |-ImplicitCastExpr 0x12e827600 <col:2, col:14> '<dependent type>' contains-errors <LValueToRValue>       | | `-CXXDependentScopeMemberExpr 0x12e8274f0 <col:2, col:14> '<dependent type>' contains-errors lvalue .ptr       | |   `-CXXDependentScopeMemberExpr 0x12e8274a8 <col:2, col:7> '<dependent type>' contains-errors lvalue ->header       | |     `-RecoveryExpr 0x12e827480 <col:2> '<dependent type>' contains-errors lvalue       | |       `-DeclRefExpr 0x12e827460 <col:2> 'int *' lvalue ParmVar 0x12e80dd28 'psf' 'int *'       | `-UnaryOperator 0x12e8275e8 <col:19, col:35> '<dependent type>' contains-errors postfix '++' cannot overflow       |   `-CXXDependentScopeMemberExpr 0x12e8275a0 <col:19, col:31> '<dependent type>' contains-errors lvalue .indx       |     `-CXXDependentScopeMemberExpr 0x12e827558 <col:19, col:24> '<dependent type>' contains-errors lvalue ->header       |       `-RecoveryExpr 0x12e827538 <col:19> '<dependent type>' contains-errors lvalue       `-DeclRefExpr 0x12e827638 <col:41> 'int' lvalue ParmVar 0x12e80dda8 'x' 'int' ","19520":"`-FunctionDecl 0x158928358  line:1:1 invalid TPMI_RSA_KEY_BITS_Unmarshal 'int (int *, int **, int *)'   |-ParmVarDecl 0x158928128 <col:29, col:48> col:48 invalid target 'int *'   |-ParmVarDecl 0x1589281e0 <col:56, col:63> col:63 invalid buffer 'int **'   |-ParmVarDecl 0x158928260 <col:71, col:78> col:78 invalid size 'int *'   `-CompoundStmt 0x148809400 <line:2:1, line:19:1>     |-IfStmt 0x1589286e8 <line:5:5, line:7:5>     | |-BinaryOperator 0x1589284a8 <line:5:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x158928468 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x158928488 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1589286d8 <col:31, line:7:5>     |-IfStmt 0x148809398 <line:8:5, line:17:5>     | |-BinaryOperator 0x158928798 <line:8:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x158928758 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x158928778 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x148809380 <col:31, line:17:5>     |   `-SwitchStmt 0x148809218 <line:9:2, line:16:2>     |     |-UnaryOperator 0x148809200 <line:9:10, col:11> '<dependent type>' contains-errors prefix '*' cannot overflow     |     | `-ImplicitCastExpr 0x1589287d8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |     |   `-RecoveryExpr 0x1589287b8 <col:11> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x148809360 <col:19, line:16:2>     |       |-CaseStmt 0x148809260 <line:10:4, line:13:6>     |       | |-IntegerLiteral 0x148809240 <line:10:9> 'int' 1024     |       | `-CaseStmt 0x1488092a8 <line:11:4, line:13:6>     |       |   |-IntegerLiteral 0x148809288 <line:11:9> 'int' 2048     |       |   `-CaseStmt 0x1488092f0 <line:12:4, line:13:6>     |       |     |-IntegerLiteral 0x1488092d0 <line:12:9> 'int' 3072     |       |     `-BreakStmt 0x148809318 <line:13:6>     |       `-DefaultStmt 0x148809340 <line:14:4, col:11>     |         `-NullStmt 0x148809338 <col:11>     `-ReturnStmt 0x1488093f0 <line:18:5, col:12>       `-RecoveryExpr 0x1488093d0 <col:12> '<dependent type>' contains-errors lvalue ","19486":"`-FunctionDecl 0x12f827ab0  col:9 implicit used printf 'int (const char *, ...)' extern   |-ParmVarDecl 0x12f827bb0 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x12f827b58 <<invalid sloc>> Implicit 903   `-FormatAttr 0x12f827c20 <col:9> Implicit printf 1 2 ","19424":"`-FunctionDecl 0x14e008200  line:1:22 key_gc_unused_keys 'void (struct list_head *)' static inline   |-ParmVarDecl 0x14d128668 <col:41, col:59> col:59 used keys 'struct list_head *'   `-CompoundStmt 0x14d142750 <line:2:1, line:38:1>     `-WhileStmt 0x14d142730 <line:3:2, line:37:2>       |-UnaryOperator 0x14e0084d8 <line:3:9, col:25> 'int' prefix '!' cannot overflow       | `-CallExpr 0x14e008498 <col:10, col:25> 'int'       |   |-ImplicitCastExpr 0x14e008480 <col:10> 'int (*)()' <FunctionToPointerDecay>       |   | `-DeclRefExpr 0x14e008410 <col:10> 'int ()' Function 0x14e008358 'list_empty' 'int ()'       |   `-ImplicitCastExpr 0x14e0084c0 <col:21> 'struct list_head *' <LValueToRValue>       |     `-DeclRefExpr 0x14e008430 <col:21> 'struct list_head *' lvalue ParmVar 0x14d128668 'keys' 'struct list_head *'       `-CompoundStmt 0x14d1426c8 <col:28, line:37:2>         |-DeclStmt 0x14e008850 <line:4:3, line:5:54>         | |-RecordDecl 0x14e0084f0 <line:4:3, col:10> col:10 struct key         | `-VarDecl 0x14e008658 <col:3, col:15> col:15 used key 'struct key *'         |-CallExpr 0x14e0089e0 <line:6:3, col:32> '<dependent type>' contains-errors         | |-DeclRefExpr 0x14e008948 <col:3> 'int ()' Function 0x14e008890 'list_del' 'int ()'         | `-UnaryOperator 0x14e0089c8 <col:12, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow         |   `-RecoveryExpr 0x14e0089a0 <col:13, col:18> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x14e008968 <col:13> 'struct key *' lvalue Var 0x14e008658 'key' 'struct key *'         |-CallExpr 0x14e008bd0 <line:8:3, col:28> '<dependent type>' contains-errors         | |-DeclRefExpr 0x14e008ae8 <col:3> 'int ()' Function 0x14e008a30 'kdebug' 'int ()'         | |-StringLiteral 0x14e008b50 <col:10> 'char[4]' lvalue \"STR\"         | `-RecoveryExpr 0x14e008ba8 <col:17, col:22> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x14e008b70 <col:17> 'struct key *' lvalue Var 0x14e008658 'key' 'struct key *'         |-CallExpr 0x14e008d38 <line:9:3, col:16> 'int'         | |-ImplicitCastExpr 0x14e008d20 <col:3> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x14e008ce0 <col:3> 'int ()' Function 0x14e008c28 'key_check' 'int ()'         | `-ImplicitCastExpr 0x14e008d60 <col:13> 'struct key *' <LValueToRValue>         |   `-DeclRefExpr 0x14e008d00 <col:13> 'struct key *' lvalue Var 0x14e008658 'key' 'struct key *'         |-CallExpr 0x14e008eb0 <line:11:3, col:24> 'int'         | |-ImplicitCastExpr 0x14e008e98 <col:3> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x14e008e58 <col:3> 'int ()' Function 0x14e008da0 'security_key_free' 'int ()'         | `-ImplicitCastExpr 0x14e008ed8 <col:21> 'struct key *' <LValueToRValue>         |   `-DeclRefExpr 0x14e008e78 <col:21> 'struct key *' lvalue Var 0x14e008658 'key' 'struct key *'         |-IfStmt 0x14d141cf8 <line:14:3, line:19:3>         | |-CallExpr 0x14e0090d0 <line:14:7, col:46> '<dependent type>' contains-errors         | | |-DeclRefExpr 0x14e008fd0 <col:7> 'int ()' Function 0x14e008f18 'test_bit' 'int ()'         | | |-RecoveryExpr 0x14e0090b0 <col:16> '<dependent type>' contains-errors lvalue         | | `-UnaryOperator 0x14e009068 <col:35, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow         | |   `-RecoveryExpr 0x14e009040 <col:36, col:41> '<dependent type>' contains-errors lvalue         | |     `-DeclRefExpr 0x14e009008 <col:36> 'struct key *' lvalue Var 0x14e008658 'key' 'struct key *'         | `-CompoundStmt 0x14d141cc8 <col:49, line:19:3>         |   |-CallExpr 0x14d1418c0 <line:15:4, col:30> '<dependent type>' contains-errors         |   | |-DeclRefExpr 0x14e0091e0 <col:4> 'int ()' Function 0x14e009128 'spin_lock' 'int ()'         |   | `-UnaryOperator 0x14d1418a8 <col:14, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow         |   |   `-CXXDependentScopeMemberExpr 0x14d141860 <col:15, col:26> '<dependent type>' contains-errors lvalue ->lock         |   |     `-RecoveryExpr 0x14d141838 <col:15, col:20> '<dependent type>' contains-errors lvalue         |   |       `-DeclRefExpr 0x14d141800 <col:15> 'struct key *' lvalue Var 0x14e008658 'key' 'struct key *'         |   |-UnaryOperator 0x14d141990 <line:16:4, col:21> '<dependent type>' contains-errors postfix '--' cannot overflow         |   | `-CXXDependentScopeMemberExpr 0x14d141948 <col:4, col:15> '<dependent type>' contains-errors lvalue ->qnkeys         |   |   `-RecoveryExpr 0x14d141920 <col:4, col:9> '<dependent type>' contains-errors lvalue         |   |     `-DeclRefExpr 0x14d1418e8 <col:4> 'struct key *' lvalue Var 0x14e008658 'key' 'struct key *'         |   |-CompoundAssignOperator 0x14d141ab0 <line:17:4, col:31> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'         |   | |-CXXDependentScopeMemberExpr 0x14d141a08 <col:4, col:15> '<dependent type>' contains-errors lvalue ->qnbytes         |   | | `-RecoveryExpr 0x14d1419e0 <col:4, col:9> '<dependent type>' contains-errors lvalue         |   | |   `-DeclRefExpr 0x14d1419a8 <col:4> 'struct key *' lvalue Var 0x14e008658 'key' 'struct key *'         |   | `-RecoveryExpr 0x14d141a88 <col:26, col:31> '<dependent type>' contains-errors lvalue         |   |   `-DeclRefExpr 0x14d141a50 <col:26> 'struct key *' lvalue Var 0x14e008658 'key' 'struct key *'         |   `-CallExpr 0x14d141ca0 <line:18:4, col:32> '<dependent type>' contains-errors         |     |-DeclRefExpr 0x14d141bc0 <col:4> 'int ()' Function 0x14d141b08 'spin_unlock' 'int ()'         |     `-UnaryOperator 0x14d141c88 <col:16, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow         |       `-CXXDependentScopeMemberExpr 0x14d141c40 <col:17, col:28> '<dependent type>' contains-errors lvalue ->lock         |         `-RecoveryExpr 0x14d141c18 <col:17, col:22> '<dependent type>' contains-errors lvalue         |           `-DeclRefExpr 0x14d141be0 <col:17> 'struct key *' lvalue Var 0x14e008658 'key' 'struct key *'         |-CallExpr 0x14d141ed8 <line:21:3, col:31> '<dependent type>' contains-errors         | |-DeclRefExpr 0x14d141df8 <col:3> 'int ()' Function 0x14d141d40 'atomic_dec' 'int ()'         | `-UnaryOperator 0x14d141ec0 <col:14, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow         |   `-CXXDependentScopeMemberExpr 0x14d141e78 <col:15, col:26> '<dependent type>' contains-errors lvalue ->nkeys         |     `-RecoveryExpr 0x14d141e50 <col:15, col:20> '<dependent type>' contains-errors lvalue         |       `-DeclRefExpr 0x14d141e18 <col:15> 'struct key *' lvalue Var 0x14e008658 'key' 'struct key *'         |-IfStmt 0x14d1420c0 <line:22:3, line:23:33>         | |-RecoveryExpr 0x14d141f98 <line:22:7, col:50> '_Bool' contains-errors         | `-CallExpr 0x14d142098 <line:23:4, col:33> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x14d141fb8 <col:4> 'int ()' Function 0x14d141d40 'atomic_dec' 'int ()'         |   `-UnaryOperator 0x14d142080 <col:15, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow         |     `-CXXDependentScopeMemberExpr 0x14d142038 <col:16, col:27> '<dependent type>' contains-errors lvalue ->nikeys         |       `-RecoveryExpr 0x14d142010 <col:16, col:21> '<dependent type>' contains-errors lvalue         |         `-DeclRefExpr 0x14d141fd8 <col:16> 'struct key *' lvalue Var 0x14e008658 'key' 'struct key *'         |-CallExpr 0x14d142240 <line:25:3, col:25> '<dependent type>' contains-errors         | |-DeclRefExpr 0x14d1421c0 <col:3> 'int ()' Function 0x14d142108 'key_user_put' 'int ()'         | `-RecoveryExpr 0x14d142218 <col:16, col:21> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x14d1421e0 <col:16> 'struct key *' lvalue Var 0x14e008658 'key' 'struct key *'         |-IfStmt 0x14d142400 <line:28:3, line:29:26>         | |-CXXDependentScopeMemberExpr 0x14d1422c8 <line:28:7, col:18> '<dependent type>' contains-errors lvalue ->destroy         | | `-RecoveryExpr 0x14d1422a0 <col:7, col:12> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x14d142268 <col:7> 'struct key *' lvalue Var 0x14e008658 'key' 'struct key *'         | `-CallExpr 0x14d1423d8 <line:29:4, col:26> '<dependent type>' contains-errors         |   |-CXXDependentScopeMemberExpr 0x14d142370 <col:4, col:15> '<dependent type>' contains-errors lvalue ->destroy         |   | `-RecoveryExpr 0x14d142348 <col:4, col:9> '<dependent type>' contains-errors lvalue         |   |   `-DeclRefExpr 0x14d142310 <col:4> 'struct key *' lvalue Var 0x14e008658 'key' 'struct key *'         |   `-DeclRefExpr 0x14d1423b8 <col:23> 'struct key *' lvalue Var 0x14e008658 'key' 'struct key *'         `-CallExpr 0x14d142580 <line:31:3, col:25> '<dependent type>' contains-errors           |-DeclRefExpr 0x14d142500 <col:3> 'int ()' Function 0x14d142448 'kfree' 'int ()'           `-RecoveryExpr 0x14d142558 <col:9, col:14> '<dependent type>' contains-errors lvalue             `-DeclRefExpr 0x14d142520 <col:9> 'struct key *' lvalue Var 0x14e008658 'key' 'struct key *' ","19310":"`-FunctionDecl 0x137111ba8  line:1:14 seq_buf_alloc 'void *(unsigned long)' static   |-ParmVarDecl 0x137111ad8 <col:28, col:42> col:42 used size 'unsigned long'   `-CompoundStmt 0x137111eb8 <line:2:1, line:4:1>     `-ReturnStmt 0x137111ea8 <line:3:2, col:42>       `-CallExpr 0x137111e78 <col:9, col:42> '<dependent type>' contains-errors         |-DeclRefExpr 0x137111dd0 <col:9> 'int ()' Function 0x137111d18 'kvmalloc' 'int ()'         |-DeclRefExpr 0x137111df0 <col:18> 'unsigned long' lvalue ParmVar 0x137111ad8 'size' 'unsigned long'         `-RecoveryExpr 0x137111e58 <col:24> '<dependent type>' contains-errors lvalue ","19843":"`-FunctionDecl 0x126140c68  col:2 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x126140d68 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x126140d10 <<invalid sloc>> Implicit 873 ","19663":"`-FunctionDecl 0x1501227f8  line:1:27 samdb_ntds_GUID 'const struct GUID *(struct ldb_context *, const char *, const char *)' static   |-ParmVarDecl 0x14800e2e8 <col:43, col:63> col:63 used ldb 'struct ldb_context *'   |-ParmVarDecl 0x14800e368 <line:2:8, col:20> col:20 used attribute 'const char *'   |-ParmVarDecl 0x150122600 <line:3:8, col:20> col:20 used cache_name 'const char *'   `-CompoundStmt 0x149809200 <line:4:1, line:74:1>     |-DeclStmt 0x150122a28 <line:6:2, col:43>     | `-VarDecl 0x150122988 <col:2, col:20> col:14 used attrs 'const char *[]'     |-DeclStmt 0x150122ac0 <line:7:2, col:9>     | `-VarDecl 0x150122a58 <col:2, col:6> col:6 used ret 'int'     |-DeclStmt 0x150122cc8 <line:8:2, col:24>     | |-RecordDecl 0x150122ad8 <col:2, col:9> col:9 struct ldb_result     | `-VarDecl 0x150122c48 <col:2, col:21> col:21 used res 'struct ldb_result *'     |-DeclStmt 0x150122e00 <line:9:2, col:24>     | `-VarDecl 0x150122d98 <col:2, col:15> col:15 used ntds_guid 'struct GUID *'     |-DeclStmt 0x150123040 <line:10:2, col:40>     | |-RecordDecl 0x150122e18 <col:2, col:9> col:9 struct ldb_dn     | `-VarDecl 0x150122f88 <col:2, col:36> col:17 used ntds_settings_dn 'struct ldb_dn *' cinit     |   `-RecoveryExpr 0x150123008 <col:36> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x150123110 <line:11:2, col:27>     | `-VarDecl 0x150123070 <col:2, col:23> col:14 used errstr 'const char *' cinit     |   `-RecoveryExpr 0x1501230f0 <col:23> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1501233b8 <line:14:2, col:59> 'struct GUID *' '='     | |-DeclRefExpr 0x150123128 <col:2> 'struct GUID *' lvalue Var 0x150122d98 'ntds_guid' 'struct GUID *'     | `-CStyleCastExpr 0x150123390 <col:14, col:59> 'struct GUID *' <IntegralToPointer>     |   `-CallExpr 0x150123308 <col:29, col:59> 'int'     |     |-ImplicitCastExpr 0x1501232f0 <col:29> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x150123260 <col:29> 'int ()' Function 0x1501231a8 'ldb_get_opaque' 'int ()'     |     |-ImplicitCastExpr 0x150123338 <col:44> 'struct ldb_context *' <LValueToRValue>     |     | `-DeclRefExpr 0x150123280 <col:44> 'struct ldb_context *' lvalue ParmVar 0x14800e2e8 'ldb' 'struct ldb_context *'     |     `-ImplicitCastExpr 0x150123350 <col:49> 'const char *' <LValueToRValue>     |       `-DeclRefExpr 0x1501232a0 <col:49> 'const char *' lvalue ParmVar 0x150122600 'cache_name' 'const char *'     |-IfStmt 0x1501234e8 <line:15:2, line:17:2>     | |-BinaryOperator 0x150123450 <line:15:6, col:19> 'int' contains-errors '!='     | | |-DeclRefExpr 0x1501233d8 <col:6> 'struct GUID *' lvalue Var 0x150122d98 'ntds_guid' 'struct GUID *'     | | `-RecoveryExpr 0x150123430 <col:19> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1501234d0 <col:25, line:17:2>     |   `-ReturnStmt 0x1501234c0 <line:16:3, col:10>     |     `-ImplicitCastExpr 0x1501234a8 <col:10> 'const struct GUID *' <NoOp>     |       `-ImplicitCastExpr 0x150123490 <col:10> 'struct GUID *' <LValueToRValue>     |         `-DeclRefExpr 0x150123470 <col:10> 'struct GUID *' lvalue Var 0x150122d98 'ntds_guid' 'struct GUID *'     |-IfStmt 0x1501267c8 <line:20:2, line:22:2>     | |-BinaryOperator 0x150126728 <line:20:6, col:17> 'int' contains-errors '=='     | | |-RecoveryExpr 0x1501266e8 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x150126708 <col:17> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1501267b0 <col:23, line:22:2>     |   `-GotoStmt 0x150126798 <line:21:3, col:8> 'failed' 0x150126748     |-BinaryOperator 0x1501269e0 <line:24:2, col:56> 'struct ldb_dn *' contains-errors '='     | |-DeclRefExpr 0x1501267e8 <col:2> 'struct ldb_dn *' contains-errors lvalue Var 0x150122f88 'ntds_settings_dn' 'struct ldb_dn *'     | `-CallExpr 0x1501269b0 <col:21, col:56> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1501268e8 <col:21> 'int ()' Function 0x150126830 'samdb_ntds_settings_dn' 'int ()'     |   |-DeclRefExpr 0x150126908 <col:44> 'struct ldb_context *' lvalue ParmVar 0x14800e2e8 'ldb' 'struct ldb_context *'     |   `-RecoveryExpr 0x150126990 <col:49> '<dependent type>' contains-errors lvalue     |-IfStmt 0x150126ba8 <line:25:2, line:28:2>     | |-BinaryOperator 0x150126a78 <line:25:6, col:26> 'int' contains-errors '=='     | | |-DeclRefExpr 0x150126a00 <col:6> 'struct ldb_dn *' contains-errors lvalue Var 0x150122f88 'ntds_settings_dn' 'struct ldb_dn *'     | | `-RecoveryExpr 0x150126a58 <col:26> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x150126b88 <col:32, line:28:2>     |   |-BinaryOperator 0x150126b50 <line:26:3, col:12> 'const char *' contains-errors '='     |   | |-DeclRefExpr 0x150126a98 <col:3> 'const char *' contains-errors lvalue Var 0x150123070 'errstr' 'const char *'     |   | `-ImplicitCastExpr 0x150126b38 <col:12> 'const char *' <NoOp>     |   |   `-ImplicitCastExpr 0x150126b20 <col:12> 'char *' <ArrayToPointerDecay>     |   |     `-StringLiteral 0x150126b00 <col:12> 'char[4]' lvalue \"STR\"     |   `-GotoStmt 0x150126b70 <line:27:3, col:8> 'failed' 0x150126748     |-BinaryOperator 0x150126f58 <line:30:2, line:31:32> 'int' contains-errors '='     | |-DeclRefExpr 0x150126bc8 <line:30:2> 'int' lvalue Var 0x150122a58 'ret' 'int'     | `-CallExpr 0x150126f00 <col:8, line:31:32> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x150126cc8 <line:30:8> 'int ()' Function 0x150126c10 'ldb_search' 'int ()'     |   |-DeclRefExpr 0x150126ce8 <col:19> 'struct ldb_context *' lvalue ParmVar 0x14800e2e8 'ldb' 'struct ldb_context *'     |   |-RecoveryExpr 0x150126ea0 <col:24> '<dependent type>' contains-errors lvalue     |   |-UnaryOperator 0x150126da0 <col:33, col:34> 'struct ldb_result **' prefix '&' cannot overflow     |   | `-DeclRefExpr 0x150126d20 <col:34> 'struct ldb_result *' lvalue Var 0x150122c48 'res' 'struct ldb_result *'     |   |-DeclRefExpr 0x150126db8 <col:39> 'struct ldb_dn *' contains-errors lvalue Var 0x150122f88 'ntds_settings_dn' 'struct ldb_dn *'     |   |-RecoveryExpr 0x150126ec0 <line:31:5> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x150126df0 <col:21> 'const char *[]' lvalue Var 0x150122988 'attrs' 'const char *[]'     |   `-RecoveryExpr 0x150126ee0 <col:28> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1501271b8 <line:32:2, line:35:2>     | |-ImplicitCastExpr 0x150126f98 <line:32:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x150126f78 <col:6> 'int' lvalue Var 0x150122a58 'ret' 'int'     | `-CompoundStmt 0x150127198 <col:11, line:35:2>     |   |-BinaryOperator 0x150127160 <line:33:3, col:29> 'const char *' contains-errors '='     |   | |-DeclRefExpr 0x150126fb0 <col:3> 'const char *' contains-errors lvalue Var 0x150123070 'errstr' 'const char *'     |   | `-ImplicitCastExpr 0x150127148 <col:12, col:29> 'const char *' <IntegralToPointer>     |   |   `-CallExpr 0x150127108 <col:12, col:29> 'int'     |   |     |-ImplicitCastExpr 0x1501270f0 <col:12> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x1501270b0 <col:12> 'int ()' Function 0x150126ff8 'ldb_errstring' 'int ()'     |   |     `-ImplicitCastExpr 0x150127130 <col:26> 'struct ldb_context *' <LValueToRValue>     |   |       `-DeclRefExpr 0x1501270d0 <col:26> 'struct ldb_context *' lvalue ParmVar 0x14800e2e8 'ldb' 'struct ldb_context *'     |   `-GotoStmt 0x150127180 <line:34:3, col:8> 'failed' 0x150126748     |-IfStmt 0x150127340 <line:37:2, line:40:2>     | |-BinaryOperator 0x150127258 <line:37:6, col:20> 'int' contains-errors '!='     | | |-RecoveryExpr 0x150127210 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x1501271d8 <col:6> 'struct ldb_result *' lvalue Var 0x150122c48 'res' 'struct ldb_result *'     | | `-IntegerLiteral 0x150127238 <col:20> 'int' 1     | `-CompoundStmt 0x150127320 <col:23, line:40:2>     |   |-BinaryOperator 0x1501272e8 <line:38:3, col:12> 'const char *' contains-errors '='     |   | |-DeclRefExpr 0x150127278 <col:3> 'const char *' contains-errors lvalue Var 0x150123070 'errstr' 'const char *'     |   | `-ImplicitCastExpr 0x1501272d0 <col:12> 'const char *' <NoOp>     |   |   `-ImplicitCastExpr 0x1501272b8 <col:12> 'char *' <ArrayToPointerDecay>     |   |     `-StringLiteral 0x150127298 <col:12> 'char[4]' lvalue \"STR\"     |   `-GotoStmt 0x150127308 <line:39:3, col:8> 'failed' 0x150126748     |-IfStmt 0x1501274f0 <line:43:2, line:45:2>     | |-RecoveryExpr 0x1501274a0 <line:43:6, col:19> '_Bool' contains-errors     | `-CompoundStmt 0x1501274d8 <col:25, line:45:2>     |   `-GotoStmt 0x1501274c0 <line:44:3, col:8> 'failed' 0x150126748     |-BinaryOperator 0x1498083e0 <line:47:2, col:56> 'struct GUID' contains-errors '='     | |-UnaryOperator 0x150127548 <col:2, col:3> 'struct GUID' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x150127530 <col:3> 'struct GUID *' <LValueToRValue>     | |   `-DeclRefExpr 0x150127510 <col:3> 'struct GUID *' lvalue Var 0x150122d98 'ntds_guid' 'struct GUID *'     | `-CallExpr 0x1498083b0 <col:15, col:56> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1498082b8 <col:15> 'int ()' Function 0x149808200 'samdb_result_guid' 'int ()'     |   |-ArraySubscriptExpr 0x149808370 <col:33, col:44> '<dependent type>' contains-errors lvalue     |   | |-ImplicitCastExpr 0x149808358 <col:33, col:38> '<dependent type>' contains-errors <LValueToRValue>     |   | | `-RecoveryExpr 0x149808310 <col:33, col:38> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x1498082d8 <col:33> 'struct ldb_result *' lvalue Var 0x150122c48 'res' 'struct ldb_result *'     |   | `-IntegerLiteral 0x149808338 <col:43> 'int' 0     |   `-DeclRefExpr 0x149808390 <col:47> 'const char *' lvalue ParmVar 0x14800e368 'attribute' 'const char *'     |-IfStmt 0x149808938 <line:49:2, line:56:2>     | |-CallExpr 0x149808538 <line:49:6, col:29> 'int'     | | |-ImplicitCastExpr 0x149808520 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x1498084e0 <col:6> 'int ()' Function 0x149808428 'GUID_all_zero' 'int ()'     | | `-ImplicitCastExpr 0x149808560 <col:20> 'struct GUID *' <LValueToRValue>     | |   `-DeclRefExpr 0x149808500 <col:20> 'struct GUID *' lvalue Var 0x150122d98 'ntds_guid' 'struct GUID *'     | `-CompoundStmt 0x149808918 <col:32, line:56:2>     |   |-IfStmt 0x1498088d0 <line:50:3, line:54:3> has_else     |   | |-CallExpr 0x149808750 <line:50:7, col:51> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x149808658 <col:7> 'int ()' Function 0x1498085a0 'ldb_msg_find_ldb_val' 'int ()'     |   | | |-ArraySubscriptExpr 0x149808710 <col:28, col:39> '<dependent type>' contains-errors lvalue     |   | | | |-ImplicitCastExpr 0x1498086f8 <col:28, col:33> '<dependent type>' contains-errors <LValueToRValue>     |   | | | | `-RecoveryExpr 0x1498086b0 <col:28, col:33> '<dependent type>' contains-errors lvalue     |   | | | |   `-DeclRefExpr 0x149808678 <col:28> 'struct ldb_result *' lvalue Var 0x150122c48 'res' 'struct ldb_result *'     |   | | | `-IntegerLiteral 0x1498086d8 <col:38> 'int' 0     |   | | `-DeclRefExpr 0x149808730 <col:42> 'const char *' lvalue ParmVar 0x14800e368 'attribute' 'const char *'     |   | |-CompoundStmt 0x149808810 <col:54, line:52:3>     |   | | `-BinaryOperator 0x1498087f0 <line:51:4, col:13> 'const char *' contains-errors '='     |   | |   |-DeclRefExpr 0x149808780 <col:4> 'const char *' contains-errors lvalue Var 0x150123070 'errstr' 'const char *'     |   | |   `-ImplicitCastExpr 0x1498087d8 <col:13> 'const char *' <NoOp>     |   | |     `-ImplicitCastExpr 0x1498087c0 <col:13> 'char *' <ArrayToPointerDecay>     |   | |       `-StringLiteral 0x1498087a0 <col:13> 'char[4]' lvalue \"STR\"     |   | `-CompoundStmt 0x1498088b8 <line:52:10, line:54:3>     |   |   `-BinaryOperator 0x149808898 <line:53:4, col:13> 'const char *' contains-errors '='     |   |     |-DeclRefExpr 0x149808828 <col:4> 'const char *' contains-errors lvalue Var 0x150123070 'errstr' 'const char *'     |   |     `-ImplicitCastExpr 0x149808880 <col:13> 'const char *' <NoOp>     |   |       `-ImplicitCastExpr 0x149808868 <col:13> 'char *' <ArrayToPointerDecay>     |   |         `-StringLiteral 0x149808848 <col:13> 'char[4]' lvalue \"STR\"     |   `-GotoStmt 0x149808900 <line:55:3, col:8> 'failed' 0x150126748     |-IfStmt 0x149808c38 <line:59:2, line:62:2>     | |-RecoveryExpr 0x149808b50 <line:59:6, col:52> '_Bool' contains-errors     | `-CompoundStmt 0x149808c18 <col:65, line:62:2>     |   |-BinaryOperator 0x149808be0 <line:60:3, col:12> 'const char *' contains-errors '='     |   | |-DeclRefExpr 0x149808b70 <col:3> 'const char *' contains-errors lvalue Var 0x150123070 'errstr' 'const char *'     |   | `-ImplicitCastExpr 0x149808bc8 <col:12> 'const char *' <NoOp>     |   |   `-ImplicitCastExpr 0x149808bb0 <col:12> 'char *' <ArrayToPointerDecay>     |   |     `-StringLiteral 0x149808b90 <col:12> 'char[4]' lvalue \"STR\"     |   `-GotoStmt 0x149808c00 <line:61:3, col:8> 'failed' 0x150126748     |-CallExpr 0x149808db0 <line:64:2, col:29> 'int'     | |-ImplicitCastExpr 0x149808d98 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x149808d38 <col:2> 'int ()' Function 0x149808c80 'talloc_steal' 'int ()'     | |-ImplicitCastExpr 0x149808de0 <col:15> 'struct ldb_context *' <LValueToRValue>     | | `-DeclRefExpr 0x149808d58 <col:15> 'struct ldb_context *' lvalue ParmVar 0x14800e2e8 'ldb' 'struct ldb_context *'     | `-ImplicitCastExpr 0x149808df8 <col:20> 'struct GUID *' <LValueToRValue>     |   `-DeclRefExpr 0x149808d78 <col:20> 'struct GUID *' lvalue Var 0x150122d98 'ntds_guid' 'struct GUID *'     |-ReturnStmt 0x149808f60 <line:67:2, col:9>     | `-ImplicitCastExpr 0x149808f48 <col:9> 'const struct GUID *' <NoOp>     |   `-ImplicitCastExpr 0x149808f30 <col:9> 'struct GUID *' <LValueToRValue>     |     `-DeclRefExpr 0x149808f10 <col:9> 'struct GUID *' lvalue Var 0x150122d98 'ntds_guid' 'struct GUID *'     `-LabelStmt 0x149809168 <line:69:1, line:71:24> 'failed'       `-CallExpr 0x1498090e8 <line:70:2, line:71:24> 'int' contains-errors         |-ImplicitCastExpr 0x1498090d0 <line:70:2> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x149809050 <col:2> 'int ()' Function 0x149808f98 'DBG_WARNING' 'int ()'         |-ImplicitCastExpr 0x149809120 <col:14> 'char *' <ArrayToPointerDecay>         | `-StringLiteral 0x149809070 <col:14> 'char[4]' lvalue \"STR\"         |-ImplicitCastExpr 0x149809138 <line:71:7> 'const char *' <LValueToRValue>         | `-DeclRefExpr 0x149809090 <col:7> 'const char *' lvalue ParmVar 0x14800e368 'attribute' 'const char *'         `-ImplicitCastExpr 0x149809150 <col:18> 'const char *' contains-errors <LValueToRValue>           `-DeclRefExpr 0x1498090b0 <col:18> 'const char *' contains-errors lvalue Var 0x150123070 'errstr' 'const char *' ","20009":"`-FunctionDecl 0x157928238  line:1:1 SPL_METHOD 'int (int, int)'   |-ParmVarDecl 0x157928158 <col:12> col:12 SplFileInfo 'int'   |-ParmVarDecl 0x1579280d8 <col:25> col:25 setInfoClass 'int'   `-CompoundStmt 0x157942920 <line:2:1, line:14:1>     `-IfStmt 0x157942800 <line:9:2, line:11:2>       |-RecoveryExpr 0x1579287c0 <line:9:6, col:70> '_Bool' contains-errors       `-CompoundStmt 0x1579287e0 <col:79, line:11:2> ","20195":"`-FunctionDecl 0x12800dec8  line:1:1 invalid dwg_encode_eed 'int (int *restrict, int *restrict)'   |-ParmVarDecl 0x12800dd28 <col:17, col:37> col:37 invalid dat 'int *restrict'   |-ParmVarDecl 0x12800dda8 <col:42, col:63> col:63 invalid obj 'int *restrict'   `-CompoundStmt 0x130122cc8 <line:2:1, line:40:1>     |-DeclStmt 0x12800e068 <line:3:3, col:35>     | `-VarDecl 0x12800df98 <col:3, col:28> col:17 off 'unsigned long' cinit     |   `-CXXDependentScopeMemberExpr 0x12800e020 <col:23, col:28> '<dependent type>' contains-errors lvalue ->address     |     `-RecoveryExpr 0x12800e000 <col:23> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x12800e290 <line:8:3, col:44>     | |-VarDecl 0x12800e098 <col:3, col:7> col:7 used i 'int'     | `-VarDecl 0x12800e118 <col:3, col:37> col:10 used num_eed 'int' cinit     |   `-CXXDependentScopeMemberExpr 0x12800e230 <col:20, col:37> '<dependent type>' contains-errors lvalue ->num_eed     |     `-CXXDependentScopeMemberExpr 0x12800e1e8 <col:20, col:29> '<dependent type>' contains-errors lvalue .object     |       `-CXXDependentScopeMemberExpr 0x12800e1a0 <col:20, col:25> '<dependent type>' contains-errors lvalue ->tio     |         `-RecoveryExpr 0x12800e180 <col:20> '<dependent type>' contains-errors lvalue     |-ForStmt 0x12880b090 <line:9:3, line:33:5>     | |-BinaryOperator 0x12800e2e8 <line:9:8, col:12> 'int' '='     | | |-DeclRefExpr 0x12800e2a8 <col:8> 'int' lvalue Var 0x12800e098 'i' 'int'     | | `-IntegerLiteral 0x12800e2c8 <col:12> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x12800e378 <col:15, col:19> 'int' contains-errors '<'     | | |-ImplicitCastExpr 0x12800e348 <col:15> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x12800e308 <col:15> 'int' lvalue Var 0x12800e098 'i' 'int'     | | `-ImplicitCastExpr 0x12800e360 <col:19> 'int' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x12800e328 <col:19> 'int' contains-errors lvalue Var 0x12800e118 'num_eed' 'int'     | |-UnaryOperator 0x12800e3b8 <col:28, col:29> 'int' postfix '++'     | | `-DeclRefExpr 0x12800e398 <col:28> 'int' lvalue Var 0x12800e098 'i' 'int'     | `-CompoundStmt 0x12880b070 <line:10:5, line:33:5>     |   |-IfStmt 0x12880ab28 <line:13:7, line:27:9>     |   | |-RecoveryExpr 0x12880a398 <line:13:11> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x12880ab00 <line:14:9, line:27:9>     |   |   |-CallExpr 0x12880a5b8 <line:15:11, col:34> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x12880a510 <col:11> 'int ()' Function 0x12880a458 'bit_write_BS' 'int ()'     |   |   | |-RecoveryExpr 0x12880a530 <col:25> '<dependent type>' contains-errors lvalue     |   |   | `-RecoveryExpr 0x12880a598 <col:30> '<dependent type>' contains-errors lvalue     |   |   |-CallExpr 0x12880a7e0 <line:16:11, col:36> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x12880a6c8 <col:11> 'int ()' Function 0x12880a610 'LOG_TRACE' 'int ()'     |   |   | |-StringLiteral 0x12880a730 <col:22> 'char[4]' lvalue \"STR\"     |   |   | |-DeclRefExpr 0x12880a750 <col:29> 'int' lvalue Var 0x12800e098 'i' 'int'     |   |   | `-RecoveryExpr 0x12880a7c0 <col:32> '<dependent type>' contains-errors lvalue     |   |   `-CallExpr 0x12880aac8 <line:19:11, line:20:42> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x12880a818 <line:19:11> 'int ()' Function 0x12880a610 'LOG_TRACE' 'int ()'     |   |     |-StringLiteral 0x12880a838 <col:22> 'char[4]' lvalue \"STR\"     |   |     |-DeclRefExpr 0x12880a858 <col:29> 'int' lvalue Var 0x12800e098 'i' 'int'     |   |     `-CallExpr 0x12880aaa0 <line:20:22, col:41> '<dependent type>' contains-errors     |   |       |-DeclRefExpr 0x12880a958 <col:22> 'int ()' Function 0x12880a8a0 'ARGS_H' 'int ()'     |   |       `-CXXDependentScopeMemberExpr 0x12880aa58 <col:30, col:35> '<dependent type>' contains-errors lvalue ->handle     |   |         `-RecoveryExpr 0x12880aa38 <col:30> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x12880b050 <line:28:7, line:32:9>     |     |-BinaryOperator 0x12880ad58 <line:28:11, col:29> 'int' contains-errors '&&'     |     | |-UnaryOperator 0x12880acd8 <col:11, col:17> '<dependent type>' contains-errors prefix '!' cannot overflow     |     | | `-ImplicitCastExpr 0x12880acc0 <col:12, col:17> '<dependent type>' contains-errors <LValueToRValue>     |     | |   `-CXXDependentScopeMemberExpr 0x12880ac78 <col:12, col:17> '<dependent type>' contains-errors lvalue ->raw     |     | |     `-RecoveryExpr 0x12880ac58 <col:12> '<dependent type>' contains-errors lvalue     |     | `-CXXDependentScopeMemberExpr 0x12880ad10 <col:24, col:29> '<dependent type>' contains-errors lvalue ->data     |     |   `-RecoveryExpr 0x12880acf0 <col:24> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x12880b038 <line:29:9, line:32:9>     |       `-CallExpr 0x12880aff8 <line:30:11, col:55> '<dependent type>' contains-errors     |         |-DeclRefExpr 0x12880ae58 <col:11> 'int ()' Function 0x12880ada0 'dwg_encode_eed_data' 'int ()'     |         |-RecoveryExpr 0x12880ae78 <col:32> '<dependent type>' contains-errors lvalue     |         |-CXXDependentScopeMemberExpr 0x12880af90 <col:37, col:42> '<dependent type>' contains-errors lvalue ->data     |         | `-RecoveryExpr 0x12880af70 <col:37> '<dependent type>' contains-errors lvalue     |         |-RecoveryExpr 0x12880afd8 <col:48> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x12880af10 <col:54> 'int' lvalue Var 0x12800e098 'i' 'int'     |-CallExpr 0x12880b128 <line:34:3, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12880b0c8 <col:3> 'int ()' Function 0x12880a458 'bit_write_BS' 'int ()'     | |-RecoveryExpr 0x12880b0e8 <col:17> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x12880b108 <col:22> 'int' 0     `-IfStmt 0x130122ca8 <line:35:3, line:36:24>       |-ImplicitCastExpr 0x12880b178 <line:35:7> 'int' <LValueToRValue>       | `-DeclRefExpr 0x12880b158 <col:7> 'int' lvalue Var 0x12800e098 'i' 'int'       `-CallExpr 0x130122c48 <line:36:5, col:24> 'int'         |-ImplicitCastExpr 0x130122c30 <col:5> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x12880b190 <col:5> 'int ()' Function 0x12880a610 'LOG_TRACE' 'int ()'         |-ImplicitCastExpr 0x130122c78 <col:16> 'char *' <ArrayToPointerDecay>         | `-StringLiteral 0x12880b1b0 <col:16> 'char[4]' lvalue \"STR\"         `-ImplicitCastExpr 0x130122c90 <col:23> 'int' <LValueToRValue>           `-DeclRefExpr 0x12880b1d0 <col:23> 'int' lvalue Var 0x12800e098 'i' 'int' ","20138":"`-FunctionDecl 0x1260ebc88  line:1:1 invalid nma_set_networking_enabled_cb 'int (int *, int *)'   |-ParmVarDecl 0x1260ebb28 <col:32, col:43> col:43 invalid widget 'int *'   |-ParmVarDecl 0x1260ebba8 <col:51, col:61> col:61 invalid applet 'int *'   `-CompoundStmt 0x12401ae88 <line:2:1, line:9:1>     |-CallExpr 0x1260ebf80 <line:5:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1260ebea0 <col:2> 'int ()' Function 0x1260ebde8 'g_return_if_fail' 'int ()'     | `-BinaryOperator 0x1260ebf60 <col:20, col:30> 'int' contains-errors '!='     |   |-RecoveryExpr 0x1260ebec0 <col:20> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x1260ebf40 <col:30> '<dependent type>' contains-errors lvalue     `-CallExpr 0x12401ae58 <line:8:2, col:44> '<dependent type>' contains-errors       |-DeclRefExpr 0x12401ad08 <col:2> 'int ()' Function 0x12401ac50 'nm_client_sleep' 'int ()'       |-CXXDependentScopeMemberExpr 0x12401ad48 <col:19, col:27> '<dependent type>' contains-errors lvalue ->nm_client       | `-RecoveryExpr 0x12401ad28 <col:19> '<dependent type>' contains-errors lvalue       `-UnaryOperator 0x12401ae40 <col:38, col:39> '<dependent type>' contains-errors prefix '!' cannot overflow         `-ImplicitCastExpr 0x12401ae28 <col:39> '<dependent type>' contains-errors <LValueToRValue>           `-RecoveryExpr 0x12401ae08 <col:39> '<dependent type>' contains-errors lvalue ","19125":"`-FunctionDecl 0x12c140d40  line:1:13 ip6_append_data_mtu 'void (int *, int *, unsigned int, struct sk_buff *, struct rt6_info *)' static   |-ParmVarDecl 0x12c128108 <col:33, col:38> col:38 used mtu 'int *'   |-ParmVarDecl 0x12c128188 <line:2:5, col:10> col:10 used maxfraglen 'int *'   |-ParmVarDecl 0x12c128208 <line:3:5, col:18> col:18 used fragheaderlen 'unsigned int'   |-ParmVarDecl 0x12c140a00 <line:4:5, col:21> col:21 used skb 'struct sk_buff *'   |-ParmVarDecl 0x12c140bd8 <line:5:5, col:22> col:22 used rt 'struct rt6_info *'   `-CompoundStmt 0x12c1417d0 <line:6:1, line:19:1>     `-IfStmt 0x12c1417b0 <line:7:2, line:18:2>       |-RecoveryExpr 0x12c140f50 <line:7:6, col:39> '_Bool' contains-errors       `-CompoundStmt 0x12c141798 <col:42, line:18:2>         `-IfStmt 0x12c141438 <line:8:3, line:15:3> has_else           |-BinaryOperator 0x12c140fe8 <line:8:7, col:14> 'int' contains-errors '=='           | |-DeclRefExpr 0x12c140f70 <col:7> 'struct sk_buff *' lvalue ParmVar 0x12c140a00 'skb' 'struct sk_buff *'           | `-RecoveryExpr 0x12c140fc8 <col:14> '<dependent type>' contains-errors lvalue           |-CompoundStmt 0x12c141190 <col:20, line:12:3>           | `-BinaryOperator 0x12c141170 <line:10:4, col:26> 'int' contains-errors '='           |   |-UnaryOperator 0x12c141040 <col:4, col:5> 'int' lvalue prefix '*' cannot overflow           |   | `-ImplicitCastExpr 0x12c141028 <col:5> 'int *' <LValueToRValue>           |   |   `-DeclRefExpr 0x12c141008 <col:5> 'int *' lvalue ParmVar 0x12c128108 'mtu' 'int *'           |   `-BinaryOperator 0x12c141150 <col:11, col:26> '<dependent type>' contains-errors '-'           |     |-UnaryOperator 0x12c141090 <col:11, col:12> 'int' lvalue prefix '*' cannot overflow           |     | `-ImplicitCastExpr 0x12c141078 <col:12> 'int *' <LValueToRValue>           |     |   `-DeclRefExpr 0x12c141058 <col:12> 'int *' lvalue ParmVar 0x12c128108 'mtu' 'int *'           |     `-CXXDependentScopeMemberExpr 0x12c141108 <col:18, col:26> '<dependent type>' contains-errors lvalue .header_len           |       `-RecoveryExpr 0x12c1410e0 <col:18, col:22> '<dependent type>' contains-errors lvalue           |         `-DeclRefExpr 0x12c1410a8 <col:18> 'struct rt6_info *' lvalue ParmVar 0x12c140bd8 'rt' 'struct rt6_info *'           `-CompoundStmt 0x12c141420 <line:12:10, line:15:3>             `-BinaryOperator 0x12c141400 <line:14:4, col:31> 'int' contains-errors '='               |-UnaryOperator 0x12c1411e0 <col:4, col:5> 'int' lvalue prefix '*' cannot overflow               | `-ImplicitCastExpr 0x12c1411c8 <col:5> 'int *' <LValueToRValue>               |   `-DeclRefExpr 0x12c1411a8 <col:5> 'int *' lvalue ParmVar 0x12c128108 'mtu' 'int *'               `-CallExpr 0x12c1413d8 <col:11, col:31> '<dependent type>' contains-errors                 |-DeclRefExpr 0x12c141310 <col:11> 'int ()' Function 0x12c141258 'dst_mtu' 'int ()'                 `-CXXDependentScopeMemberExpr 0x12c141390 <col:19, col:27> '<dependent type>' contains-errors lvalue .path                   `-RecoveryExpr 0x12c141368 <col:19, col:23> '<dependent type>' contains-errors lvalue                     `-DeclRefExpr 0x12c141330 <col:19> 'struct rt6_info *' lvalue ParmVar 0x12c140bd8 'rt' 'struct rt6_info *' ","19287":"`-FunctionDecl 0x13100dd18  line:2:25 srand 'unsigned int ()' inline   `-CompoundStmt 0x13100df38 <col:33, line:9:34>     |-DeclStmt 0x13100ded0 <line:3:7, col:50>     | `-VarDecl 0x13100de20 <col:7, col:20> col:20 t 'unsigned int'     |-ReturnStmt 0x13100df20 <line:9:7, col:14>     | `-RecoveryExpr 0x13100df00 <col:14> '<dependent type>' contains-errors lvalue     `-NullStmt 0x13100df30 <col:33> ","19443":"`-FunctionDecl 0x155128288  line:1:13 invalid rdp_write_draw_nine_grid_cache_capability_set 'int (int *, const int *)' static   |-ParmVarDecl 0x155128128 <col:59, col:68> col:68 invalid s 'int *'   |-ParmVarDecl 0x1551281a8 <col:71, col:90> col:90 invalid settings 'const int *'   `-CompoundStmt 0x155141ef0 <line:2:1, line:18:1>     |-UnaryExprOrTypeTraitExpr 0x155128398 <line:3:2, col:9> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x155128378 <col:9> '<dependent type>' contains-errors lvalue     |-IfStmt 0x155128600 <line:6:2, line:7:10>     | |-UnaryOperator 0x1551285a0 <line:6:6, col:43> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x155128570 <col:7, col:43> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x155128510 <col:7> 'int ()' Function 0x155128458 'Stream_EnsureRemainingCapacity' 'int ()'     | |   |-RecoveryExpr 0x155128530 <col:38> '<dependent type>' contains-errors lvalue     | |   `-IntegerLiteral 0x155128550 <col:41> 'int' 32     | `-ReturnStmt 0x1551285f0 <line:7:3, col:10>     |   `-RecoveryExpr 0x1551285d0 <col:10> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1551419e8 <line:12:2, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x155141940 <col:2> 'int ()' Function 0x155141888 'Stream_Write_UINT32' 'int ()'     | |-RecoveryExpr 0x155141960 <col:22> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1551419c8 <col:25> '<dependent type>' contains-errors lvalue     |-CallExpr 0x155141ba0 <line:13:2, col:56> '<dependent type>' contains-errors     | |-DeclRefExpr 0x155141af8 <col:2> 'int ()' Function 0x155141a40 'Stream_Write_UINT16' 'int ()'     | |-RecoveryExpr 0x155141b18 <col:22> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x155141b58 <col:25, col:35> '<dependent type>' contains-errors lvalue ->DrawNineGridCacheSize     |   `-RecoveryExpr 0x155141b38 <col:25> '<dependent type>' contains-errors lvalue     |-CallExpr 0x155141c78 <line:14:2, line:15:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x155141bd0 <line:14:2> 'int ()' Function 0x155141a40 'Stream_Write_UINT16' 'int ()'     | |-RecoveryExpr 0x155141bf0 <line:15:6> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x155141c30 <col:9, col:19> '<dependent type>' contains-errors lvalue ->DrawNineGridCacheEntries     |   `-RecoveryExpr 0x155141c10 <col:9> '<dependent type>' contains-errors lvalue     |-CallExpr 0x155141e70 <line:16:2, col:71> '<dependent type>' contains-errors     | |-DeclRefExpr 0x155141d88 <col:2> 'int ()' Function 0x155141cd0 'rdp_capability_set_finish' 'int ()'     | |-RecoveryExpr 0x155141da8 <col:28> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x155141e30 <col:31> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x155141e50 <col:39> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x155141ee0 <line:17:2, col:9>       `-RecoveryExpr 0x155141ec0 <col:9> '<dependent type>' contains-errors lvalue ","19327":"`-FunctionDecl 0x14800de80  line:1:10 invalid copyBytes 'void (int *, int)'   |-ParmVarDecl 0x14800dd28 <col:20, col:30> col:30 referenced invalid is 'int *'   |-ParmVarDecl 0x14800dda8 <col:34, col:38> col:38 used length 'int'   `-CompoundStmt 0x148027ed0 <col:46, line:8:5>     `-WhileStmt 0x148027eb0 <line:2:7, line:7:7>       |-BinaryOperator 0x14800df90 <line:2:14, col:23> 'int' '>'       | |-ImplicitCastExpr 0x14800df78 <col:14> 'int' <LValueToRValue>       | | `-DeclRefExpr 0x14800df38 <col:14> 'int' lvalue ParmVar 0x14800dda8 'length' 'int'       | `-IntegerLiteral 0x14800df58 <col:23> 'int' 0       `-CompoundStmt 0x148027e88 <col:26, line:7:7>         |-DeclStmt 0x14800e280 <line:3:9, col:33>         | `-VarDecl 0x14800dfc8 <col:9, col:32> col:13 used n 'int' cinit         |   `-CallExpr 0x14800e238 <col:17, col:32> 'int'         |     |-ImplicitCastExpr 0x14800e220 <col:17> 'int (*)()' <FunctionToPointerDecay>         |     | `-DeclRefExpr 0x14800e190 <col:17> 'int ()' Function 0x14800e0d8 'check' 'int ()'         |     |-IntegerLiteral 0x14800e1b0 <col:23> 'int' 1         |     `-ImplicitCastExpr 0x14800e268 <col:26> 'int' <LValueToRValue>         |       `-DeclRefExpr 0x14800e1d0 <col:26> 'int' lvalue ParmVar 0x14800dda8 'length' 'int'         |-CallExpr 0x14800e3b0 <line:4:9, col:29> '<dependent type>' contains-errors         | |-CXXDependentScopeMemberExpr 0x14800e2e0 <col:9, col:13> '<dependent type>' contains-errors lvalue ->readBytes         | | `-RecoveryExpr 0x14800e2b8 <col:9> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x14800e298 <col:9> 'int *' lvalue ParmVar 0x14800dd28 'is' 'int *'         | |-RecoveryExpr 0x14800e390 <col:23> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x14800e340 <col:28> 'int' lvalue Var 0x14800dfc8 'n' 'int'         `-CompoundAssignOperator 0x148027e58 <line:6:9, col:19> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'           |-DeclRefExpr 0x148027e00 <col:9> 'int' lvalue ParmVar 0x14800dda8 'length' 'int'           `-ImplicitCastExpr 0x148027e40 <col:19> 'int' <LValueToRValue>             `-DeclRefExpr 0x148027e20 <col:19> 'int' lvalue Var 0x14800dfc8 'n' 'int' ","20111":"`-FunctionDecl 0x15a145a38  line:1:12 invalid vmx_set_identity_map_addr 'int (struct kvm *, int)' static   |-ParmVarDecl 0x15a128648 <col:38, col:50> col:50 used kvm 'struct kvm *'   |-ParmVarDecl 0x15a1286e0 <col:55, col:59> col:59 invalid ident_addr 'int'   `-CompoundStmt 0x15a145db0 <line:2:1, line:5:1>     |-BinaryOperator 0x15a145d60 <line:3:2, col:43> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x15a145d18 <col:2, col:19> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x15a145cd8 <col:2, col:16> 'int'     | |   |-ImplicitCastExpr 0x15a145cc0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x15a145c50 <col:2> 'int ()' Function 0x15a145b98 'to_kvm_vmx' 'int ()'     | |   `-ImplicitCastExpr 0x15a145d00 <col:13> 'struct kvm *' <LValueToRValue>     | |     `-DeclRefExpr 0x15a145c70 <col:13> 'struct kvm *' lvalue ParmVar 0x15a128648 'kvm' 'struct kvm *'     | `-RecoveryExpr 0x15a145d40 <col:43> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x15a145da0 <line:4:2, col:9>       `-IntegerLiteral 0x15a145d80 <col:9> 'int' 0 ","19141":"`-FunctionDecl 0x14b8f9918  line:1:1 SYSCALL_DEFINE6 'int ()'   `-CompoundStmt 0x14b91acd8 <line:5:1, line:62:1>     |-DeclStmt 0x14b912460 <line:6:2, col:50>     | |-RecordDecl 0x14b8f9a08 <col:8, col:15> col:15 struct cred     | |-VarDecl 0x14b8f9b78 <col:2, col:41> col:21 used cred 'const struct cred *' cinit     | | `-ImplicitCastExpr 0x14b8f9d68 <col:28, col:41> 'const struct cred *' <IntegralToPointer>     | |   `-CallExpr 0x14b8f9d48 <col:28, col:41> 'int'     | |     `-ImplicitCastExpr 0x14b8f9d30 <col:28> 'int (*)()' <FunctionToPointerDecay>     | |       `-DeclRefExpr 0x14b8f9cd8 <col:28> 'int ()' Function 0x14b8f9c20 'current_cred' 'int ()'     | `-VarDecl 0x14b9123d8 <col:2, col:45> col:45 used tcred 'const struct cred *'     |-DeclStmt 0x14b912668 <line:7:2, col:26>     | |-RecordDecl 0x14b912478 <col:2, col:9> col:9 struct task_struct     | `-VarDecl 0x14b9125e8 <col:2, col:22> col:22 used task 'struct task_struct *'     |-DeclStmt 0x14b912868 <line:8:2, col:22>     | |-RecordDecl 0x14b912680 <col:2, col:9> col:9 struct mm_struct     | `-VarDecl 0x14b9127e8 <col:2, col:20> col:20 used mm 'struct mm_struct *'     |-DeclStmt 0x14b912900 <line:9:2, col:9>     | `-VarDecl 0x14b912898 <col:2, col:6> col:6 used err 'int'     |-IfStmt 0x14b912a48 <line:13:2, line:14:11>     | |-RecoveryExpr 0x14b912980 <line:13:6, col:45> '_Bool' contains-errors     | `-ReturnStmt 0x14b912a38 <line:14:3, col:11>     |   `-UnaryOperator 0x14b912a20 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14b912a08 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14b9129e8 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14b912cd8 <line:16:2, line:17:11>     | |-RecoveryExpr 0x14b912c10 <line:16:6, col:57> '_Bool' contains-errors     | `-ReturnStmt 0x14b912cc8 <line:17:3, col:11>     |   `-UnaryOperator 0x14b912cb0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14b912c98 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14b912c78 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14b912e10 <line:20:2, col:16> 'int'     | `-ImplicitCastExpr 0x14b912df8 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x14b912dd8 <col:2> 'int ()' Function 0x14b912d20 'rcu_read_lock' 'int ()'     |-BinaryOperator 0x14b9130c8 <line:21:2, col:40> 'struct task_struct *' contains-errors '='     | |-DeclRefExpr 0x14b912e30 <col:2> 'struct task_struct *' lvalue Var 0x14b9125e8 'task' 'struct task_struct *'     | `-ConditionalOperator 0x14b913098 <col:9, col:40> '<dependent type>' contains-errors     |   |-RecoveryExpr 0x14b913010 <col:9> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x14b913050 <col:15, col:36> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14b912f48 <col:15> 'int ()' Function 0x14b912e90 'find_task_by_vpid' 'int ()'     |   | `-RecoveryExpr 0x14b913030 <col:33> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x14b913078 <col:40> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14b914528 <line:22:2, line:25:2>     | |-UnaryOperator 0x14b913120 <line:22:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14b913108 <col:7> 'struct task_struct *' <LValueToRValue>     | |   `-DeclRefExpr 0x14b9130e8 <col:7> 'struct task_struct *' lvalue Var 0x14b9125e8 'task' 'struct task_struct *'     | `-CompoundStmt 0x14b914510 <col:13, line:25:2>     |   `-CallExpr 0x14b9144f0 <line:23:3, col:19> 'int'     |     `-ImplicitCastExpr 0x14b9144d8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x14b9144b8 <col:3> 'int ()' Function 0x14b914400 'rcu_read_unlock' 'int ()'     |-CallExpr 0x14b914680 <line:26:2, col:22> 'int'     | |-ImplicitCastExpr 0x14b914668 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14b914628 <col:2> 'int ()' Function 0x14b914570 'get_task_struct' 'int ()'     | `-ImplicitCastExpr 0x14b9146a8 <col:18> 'struct task_struct *' <LValueToRValue>     |   `-DeclRefExpr 0x14b914648 <col:18> 'struct task_struct *' lvalue Var 0x14b9125e8 'task' 'struct task_struct *'     |-BinaryOperator 0x14b914870 <line:29:2, col:26> 'const struct cred *' '='     | |-DeclRefExpr 0x14b9146c0 <col:2> 'const struct cred *' lvalue Var 0x14b9123d8 'tcred' 'const struct cred *'     | `-ImplicitCastExpr 0x14b914858 <col:10, col:26> 'const struct cred *' <IntegralToPointer>     |   `-CallExpr 0x14b914818 <col:10, col:26> 'int'     |     |-ImplicitCastExpr 0x14b914800 <col:10> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14b9147c0 <col:10> 'int ()' Function 0x14b914708 '__task_cred' 'int ()'     |     `-ImplicitCastExpr 0x14b914840 <col:22> 'struct task_struct *' <LValueToRValue>     |       `-DeclRefExpr 0x14b9147e0 <col:22> 'struct task_struct *' lvalue Var 0x14b9125e8 'task' 'struct task_struct *'     |-IfStmt 0x14b914fb0 <line:30:2, line:36:2>     | |-RecoveryExpr 0x14b914e90 <line:30:6, line:32:27> '_Bool' contains-errors     | `-CompoundStmt 0x14b914f90 <col:30, line:36:2>     |   |-CallExpr 0x14b914ee8 <line:33:3, col:19> 'int'     |   | `-ImplicitCastExpr 0x14b914ed0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x14b914eb0 <col:3> 'int ()' Function 0x14b914400 'rcu_read_unlock' 'int ()'     |   `-GotoStmt 0x14b914f78 <line:35:3, col:8> 'out' 0x14b914f28     |-CallExpr 0x14b915008 <line:37:2, col:18> 'int'     | `-ImplicitCastExpr 0x14b914ff0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x14b914fd0 <col:2> 'int ()' Function 0x14b914400 'rcu_read_unlock' 'int ()'     |-BinaryOperator 0x14b9151c0 <line:39:3, col:38> 'int' '='     | |-DeclRefExpr 0x14b915028 <col:3> 'int' lvalue Var 0x14b912898 'err' 'int'     | `-CallExpr 0x14b915180 <col:9, col:38> 'int'     |   |-ImplicitCastExpr 0x14b915168 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14b915128 <col:9> 'int ()' Function 0x14b915070 'security_task_movememory' 'int ()'     |   `-ImplicitCastExpr 0x14b9151a8 <col:34> 'struct task_struct *' <LValueToRValue>     |     `-DeclRefExpr 0x14b915148 <col:34> 'struct task_struct *' lvalue Var 0x14b9125e8 'task' 'struct task_struct *'     |-IfStmt 0x14b915230 <line:40:3, line:41:8>     | |-ImplicitCastExpr 0x14b915200 <line:40:7> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x14b9151e0 <col:7> 'int' lvalue Var 0x14b912898 'err' 'int'     | `-GotoStmt 0x14b915218 <line:41:3, col:8> 'out' 0x14b914f28     |-BinaryOperator 0x14b91a590 <line:44:2, col:23> 'struct mm_struct *' '='     | |-DeclRefExpr 0x14b9153c8 <col:2> 'struct mm_struct *' lvalue Var 0x14b9127e8 'mm' 'struct mm_struct *'     | `-ImplicitCastExpr 0x14b91a578 <col:7, col:23> 'struct mm_struct *' <IntegralToPointer>     |   `-CallExpr 0x14b91a538 <col:7, col:23> 'int'     |     |-ImplicitCastExpr 0x14b91a520 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14b91a4e0 <col:7> 'int ()' Function 0x14b91a428 'get_task_mm' 'int ()'     |     `-ImplicitCastExpr 0x14b91a560 <col:19> 'struct task_struct *' <LValueToRValue>     |       `-DeclRefExpr 0x14b91a500 <col:19> 'struct task_struct *' lvalue Var 0x14b9125e8 'task' 'struct task_struct *'     |-CallExpr 0x14b91a6e8 <line:45:2, col:22> 'int'     | |-ImplicitCastExpr 0x14b91a6d0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14b91a690 <col:2> 'int ()' Function 0x14b91a5d8 'put_task_struct' 'int ()'     | `-ImplicitCastExpr 0x14b91a710 <col:18> 'struct task_struct *' <LValueToRValue>     |   `-DeclRefExpr 0x14b91a6b0 <col:18> 'struct task_struct *' lvalue Var 0x14b9125e8 'task' 'struct task_struct *'     |-CallExpr 0x14b91ab50 <line:56:2, col:10> 'int'     | |-ImplicitCastExpr 0x14b91ab38 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14b91aaf8 <col:2> 'int ()' Function 0x14b91aa40 'mmput' 'int ()'     | `-ImplicitCastExpr 0x14b91ab78 <col:8> 'struct mm_struct *' <LValueToRValue>     |   `-DeclRefExpr 0x14b91ab18 <col:8> 'struct mm_struct *' lvalue Var 0x14b9127e8 'mm' 'struct mm_struct *'     |-ReturnStmt 0x14b91abc8 <line:57:2, col:9>     | `-ImplicitCastExpr 0x14b91abb0 <col:9> 'int' <LValueToRValue>     |   `-DeclRefExpr 0x14b91ab90 <col:9> 'int' lvalue Var 0x14b912898 'err' 'int'     |-LabelStmt 0x14b91ac70 <line:59:1, line:60:22> 'out'     | `-CallExpr 0x14b91ac30 <col:2, col:22> 'int'     |   |-ImplicitCastExpr 0x14b91ac18 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14b91abd8 <col:2> 'int ()' Function 0x14b91a5d8 'put_task_struct' 'int ()'     |   `-ImplicitCastExpr 0x14b91ac58 <col:18> 'struct task_struct *' <LValueToRValue>     |     `-DeclRefExpr 0x14b91abf8 <col:18> 'struct task_struct *' lvalue Var 0x14b9125e8 'task' 'struct task_struct *'     `-ReturnStmt 0x14b91acc8 <line:61:2, col:9>       `-ImplicitCastExpr 0x14b91acb0 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x14b91ac90 <col:9> 'int' lvalue Var 0x14b912898 'err' 'int' ","19720":"`-FunctionDecl 0x138128198  line:1:12 pf_detect 'int (void)' static   `-CompoundStmt 0x138144c10 <line:2:1, line:52:1>     |-DeclStmt 0x1381284c8 <line:3:2, col:28>     | |-RecordDecl 0x138128288 <col:2, col:9> col:9 struct pf_unit     | `-VarDecl 0x1381283f8 <col:2, col:23> col:18 used pf 'struct pf_unit *' cinit     |   `-RecoveryExpr 0x138128490 <col:23> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x1381285f8 <line:4:2, col:13>     | |-VarDecl 0x1381284f8 <col:2, col:6> col:6 used k 'int'     | `-VarDecl 0x138128578 <col:2, col:9> col:9 used unit 'int'     |-CallExpr 0x138143148 <line:6:2, line:7:53> '<dependent type>' contains-errors     | |-DeclRefExpr 0x138128720 <line:6:2> 'int ()' Function 0x138128668 'printk' 'int ()'     | |-StringLiteral 0x138128780 <col:9> 'char[4]' lvalue \"STR\"     | |-RecoveryExpr 0x138143088 <line:7:9> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x1381430a8 <col:15> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x1381430c8 <col:21> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x1381430e8 <col:33> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x138143108 <col:40> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x138143128 <col:49> '<dependent type>' contains-errors lvalue     |-IfStmt 0x138143598 <line:10:2, line:13:2>     | |-UnaryOperator 0x138143360 <line:10:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x138143348 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x138143328 <col:7> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x138143578 <col:16, line:13:2>     |   |-CallExpr 0x138143500 <line:11:3, col:21> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x138143458 <col:3> 'int ()' Function 0x1381433a0 'pr_err' 'int ()'     |   | |-StringLiteral 0x138143478 <col:10> 'char[4]' lvalue \"STR\"     |   | `-RecoveryExpr 0x1381434e0 <col:17> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x138143568 <line:12:3, col:11>     |     `-UnaryOperator 0x138143550 <col:10, col:11> 'int' prefix '-'     |       `-IntegerLiteral 0x138143530 <col:11> 'int' 1     |-BinaryOperator 0x1381435f8 <line:14:2, col:6> 'int' '='     | |-DeclRefExpr 0x1381435b8 <col:2> 'int' lvalue Var 0x1381284f8 'k' 'int'     | `-IntegerLiteral 0x1381435d8 <col:6> 'int' 0     |-IfStmt 0x138142cb8 <line:15:2, line:26:3> has_else     | |-BinaryOperator 0x138143690 <line:15:6, col:24> 'int' contains-errors '=='     | | |-RecoveryExpr 0x138143670 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x138143630 <col:24> 'int' 0     | |-CompoundStmt 0x138142508 <col:27, line:25:2>     | | `-IfStmt 0x1381424e8 <line:16:3, line:23:3>     | |   |-CallExpr 0x138143ef0 <line:16:7, line:17:25> '<dependent type>' contains-errors     | |   | |-DeclRefExpr 0x138143790 <line:16:7> 'int ()' Function 0x1381436d8 'pi_init' 'int ()'     | |   | |-RecoveryExpr 0x138143c10 <col:15, col:19> '<dependent type>' contains-errors lvalue     | |   | | `-DeclRefExpr 0x1381437b0 <col:15> 'struct pf_unit *' contains-errors lvalue Var 0x1381283f8 'pf' 'struct pf_unit *'     | |   | |-IntegerLiteral 0x138143c38 <col:23> 'int' 1     | |   | |-UnaryOperator 0x138143c78 <col:26, col:27> 'int' prefix '-'     | |   | | `-IntegerLiteral 0x138143c58 <col:27> 'int' 1     | |   | |-UnaryOperator 0x138143cb0 <col:30, col:31> 'int' prefix '-'     | |   | | `-IntegerLiteral 0x138143c90 <col:31> 'int' 1     | |   | |-UnaryOperator 0x138143ce8 <col:34, col:35> 'int' prefix '-'     | |   | | `-IntegerLiteral 0x138143cc8 <col:35> 'int' 1     | |   | |-UnaryOperator 0x138143d20 <col:38, col:39> 'int' prefix '-'     | |   | | `-IntegerLiteral 0x138143d00 <col:39> 'int' 1     | |   | |-UnaryOperator 0x138143d58 <col:42, col:43> 'int' prefix '-'     | |   | | `-IntegerLiteral 0x138143d38 <col:43> 'int' 1     | |   | |-RecoveryExpr 0x138143e90 <col:46> '<dependent type>' contains-errors lvalue     | |   | |-RecoveryExpr 0x138143eb0 <col:58> '<dependent type>' contains-errors lvalue     | |   | |-RecoveryExpr 0x138143ed0 <line:17:8> '<dependent type>' contains-errors lvalue     | |   | `-RecoveryExpr 0x138143df0 <col:17, col:21> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x138143db8 <col:17> 'struct pf_unit *' contains-errors lvalue Var 0x1381283f8 'pf' 'struct pf_unit *'     | |   `-CompoundStmt 0x1381424d0 <col:28, line:23:3>     | |     `-IfStmt 0x1381424a0 <line:18:4, line:22:22> has_else     | |       |-BinaryOperator 0x138142200 <line:18:8, col:29> 'int' contains-errors '&&'     | |       | |-UnaryOperator 0x138142188 <col:8, col:20> 'int' contains-errors prefix '!' cannot overflow     | |       | | `-CallExpr 0x138142148 <col:9, col:20> 'int' contains-errors     | |       | |   |-ImplicitCastExpr 0x138142130 <col:9> 'int (*)()' <FunctionToPointerDecay>     | |       | |   | `-DeclRefExpr 0x1381420b8 <col:9> 'int ()' Function 0x138142000 'pf_probe' 'int ()'     | |       | |   `-ImplicitCastExpr 0x138142170 <col:18> 'struct pf_unit *' contains-errors <LValueToRValue>     | |       | |     `-DeclRefExpr 0x1381420d8 <col:18> 'struct pf_unit *' contains-errors lvalue Var 0x1381283f8 'pf' 'struct pf_unit *'     | |       | `-RecoveryExpr 0x1381421d8 <col:25, col:29> '<dependent type>' contains-errors lvalue     | |       |   `-DeclRefExpr 0x1381421a0 <col:25> 'struct pf_unit *' contains-errors lvalue Var 0x1381283f8 'pf' 'struct pf_unit *'     | |       |-CompoundStmt 0x1381422f8 <col:35, line:21:4>     | |       | |-BinaryOperator 0x1381422a0 <line:19:5, col:19> '<dependent type>' contains-errors '='     | |       | | |-RecoveryExpr 0x138142258 <col:5, col:9> '<dependent type>' contains-errors lvalue     | |       | | | `-DeclRefExpr 0x138142220 <col:5> 'struct pf_unit *' contains-errors lvalue Var 0x1381283f8 'pf' 'struct pf_unit *'     | |       | | `-IntegerLiteral 0x138142280 <col:19> 'int' 1     | |       | `-UnaryOperator 0x1381422e0 <line:20:5, col:6> 'int' postfix '++'     | |       |   `-DeclRefExpr 0x1381422c0 <col:5> 'int' lvalue Var 0x1381284f8 'k' 'int'     | |       `-CallExpr 0x138142478 <line:22:5, col:22> '<dependent type>' contains-errors     | |         |-DeclRefExpr 0x1381423f8 <col:5> 'int ()' Function 0x138142340 'pi_release' 'int ()'     | |         `-RecoveryExpr 0x138142450 <col:16, col:20> '<dependent type>' contains-errors lvalue     | |           `-DeclRefExpr 0x138142418 <col:16> 'struct pf_unit *' contains-errors lvalue Var 0x1381283f8 'pf' 'struct pf_unit *'     | `-NullStmt 0x138142cb0 <line:26:3>     |-IfStmt 0x138142d50 <line:40:2, line:41:10>     | |-ImplicitCastExpr 0x138142d08 <line:40:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x138142ce8 <col:6> 'int' lvalue Var 0x1381284f8 'k' 'int'     | `-ReturnStmt 0x138142d40 <line:41:3, col:10>     |   `-IntegerLiteral 0x138142d20 <col:10> 'int' 0     `-ReturnStmt 0x138144c00 <line:51:2, col:10>       `-UnaryOperator 0x138144be8 <col:9, col:10> 'int' prefix '-'         `-IntegerLiteral 0x138144bc8 <col:10> 'int' 1 ","19711":"`-FunctionDecl 0x14c008d08  col:2 implicit used strncpy 'char *(char *, const char *, unsigned long)' extern   |-ParmVarDecl 0x14c008e08 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x14c008e70 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x14c008ed8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14c008db0 <<invalid sloc>> Implicit 886 ","19272":"`-FunctionDecl 0x14e826600  line:1:12 sctp_setsockopt_del_key 'int (struct sock *, char)' static   |-ParmVarDecl 0x14e80e248 <col:36, col:49> col:49 used sk 'struct sock *'   |-ParmVarDecl 0x14e80e2c0 <line:2:8, col:13> col:13 __user 'char'   `-CompoundStmt 0x14e82a850 <line:4:1, line:23:1>     |-DeclStmt 0x14e826878 <line:5:2, col:27>     | |-RecordDecl 0x14e826700 <col:2, col:9> col:9 struct sctp_authkeyid     | `-VarDecl 0x14e8267f8 <col:2, col:24> col:24 invalid val 'struct sctp_authkeyid'     |-DeclStmt 0x14e826a78 <line:6:2, col:31>     | |-RecordDecl 0x14e826890 <col:2, col:9> col:9 struct sctp_association     | `-VarDecl 0x14e8269f8 <col:2, col:27> col:27 used asoc 'struct sctp_association *'     |-IfStmt 0x14e826be8 <line:8:2, line:9:11>     | |-UnaryOperator 0x14e826b28 <line:8:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14e826b10 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x14e826af0 <col:7> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14e826bd8 <line:9:3, col:11>     |   `-UnaryOperator 0x14e826bc0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14e826ba8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14e826b88 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14e826d38 <line:11:2, line:12:11>     | |-RecoveryExpr 0x14e826c70 <line:11:6, col:44> '_Bool' contains-errors     | `-ReturnStmt 0x14e826d28 <line:12:3, col:11>     |   `-UnaryOperator 0x14e826d10 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14e826cf8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14e826cd8 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14e827050 <line:13:2, line:14:11>     | |-CallExpr 0x14e826f70 <line:13:6, col:41> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14e826e70 <col:6> 'int ()' Function 0x14e826db8 'copy_from_user' 'int ()'     | | |-UnaryOperator 0x14e826eb0 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | `-RecoveryExpr 0x14e826e90 <col:22> '<dependent type>' contains-errors lvalue     | | |-RecoveryExpr 0x14e826f30 <col:27> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14e826f50 <col:35> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14e827040 <line:14:3, col:11>     |   `-UnaryOperator 0x14e827028 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14e827010 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14e826ff0 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14e827248 <line:16:2, col:45> 'struct sctp_association *' contains-errors '='     | |-DeclRefExpr 0x14e827070 <col:2> 'struct sctp_association *' lvalue Var 0x14e8269f8 'asoc' 'struct sctp_association *'     | `-CallExpr 0x14e827218 <col:9, col:45> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14e827170 <col:9> 'int ()' Function 0x14e8270b8 'sctp_id2assoc' 'int ()'     |   |-DeclRefExpr 0x14e827190 <col:23> 'struct sock *' lvalue ParmVar 0x14e80e248 'sk' 'struct sock *'     |   `-CXXDependentScopeMemberExpr 0x14e8271d0 <col:27, col:31> '<dependent type>' contains-errors lvalue .scact_assoc_id     |     `-RecoveryExpr 0x14e8271b0 <col:27> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14e82a490 <line:17:2, line:18:11>     | |-BinaryOperator 0x14e8275b8 <line:17:6, col:55> 'int' contains-errors '&&'     | | |-BinaryOperator 0x14e827548 <col:6, col:19> 'int' contains-errors '&&'     | | | |-UnaryOperator 0x14e827530 <col:6, col:7> 'int' prefix '!' cannot overflow     | | | | `-ImplicitCastExpr 0x14e827518 <col:7> 'struct sctp_association *' <LValueToRValue>     | | | |   `-DeclRefExpr 0x14e827268 <col:7> 'struct sctp_association *' lvalue Var 0x14e8269f8 'asoc' 'struct sctp_association *'     | | | `-CXXDependentScopeMemberExpr 0x14e8272d8 <col:15, col:19> '<dependent type>' contains-errors lvalue .scact_assoc_id     | | |   `-RecoveryExpr 0x14e8272b8 <col:15> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x14e827588 <col:37, col:55> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x14e827420 <col:37> 'int ()' Function 0x14e827368 'sctp_style' 'int ()'     | |   |-DeclRefExpr 0x14e827440 <col:48> 'struct sock *' lvalue ParmVar 0x14e80e248 'sk' 'struct sock *'     | |   `-RecoveryExpr 0x14e827568 <col:52> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14e82a480 <line:18:3, col:11>     |   `-UnaryOperator 0x14e82a468 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14e82a450 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14e82a430 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14e82a840 <line:20:2, line:21:28>       `-CallExpr 0x14e82a808 <line:20:9, line:21:28> '<dependent type>' contains-errors         |-DeclRefExpr 0x14e82a590 <line:20:9> 'int ()' Function 0x14e82a4d8 'sctp_auth_del_key_id' 'int ()'         |-RecoveryExpr 0x14e82a758 <col:30, col:43> '<dependent type>' contains-errors lvalue         | `-CallExpr 0x14e82a718 <col:30, col:40> 'int'         |   |-ImplicitCastExpr 0x14e82a700 <col:30> 'int (*)()' <FunctionToPointerDecay>         |   | `-DeclRefExpr 0x14e82a690 <col:30> 'int ()' Function 0x14e82a5d8 'sctp_sk' 'int ()'         |   `-ImplicitCastExpr 0x14e82a740 <col:38> 'struct sock *' <LValueToRValue>         |     `-DeclRefExpr 0x14e82a6b0 <col:38> 'struct sock *' lvalue ParmVar 0x14e80e248 'sk' 'struct sock *'         |-DeclRefExpr 0x14e82a780 <col:47> 'struct sctp_association *' lvalue Var 0x14e8269f8 'asoc' 'struct sctp_association *'         `-CXXDependentScopeMemberExpr 0x14e82a7c0 <line:21:9, col:13> '<dependent type>' contains-errors lvalue .scact_keynumber           `-RecoveryExpr 0x14e82a7a0 <col:9> '<dependent type>' contains-errors lvalue ","19636":"`-FunctionDecl 0x15300df58  line:1:1 invalid TPMI_ALG_PUBLIC_Unmarshal 'int (int *, int **, int *)'   |-ParmVarDecl 0x15300dd28 <col:27, col:44> col:44 invalid target 'int *'   |-ParmVarDecl 0x15300dde0 <col:52, col:59> col:59 invalid buffer 'int **'   |-ParmVarDecl 0x15300de60 <col:67, col:74> col:74 invalid size 'int *'   `-CompoundStmt 0x1520f5d28 <line:2:1, line:28:1>     |-IfStmt 0x15300e2e8 <line:5:5, line:7:5>     | |-BinaryOperator 0x15300e0a8 <line:5:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x15300e068 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x15300e088 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x15300e2d8 <col:31, line:7:5>     |-IfStmt 0x1520f5cc0 <line:8:5, line:26:5>     | |-BinaryOperator 0x15300e398 <line:8:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x15300e358 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x15300e378 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1520f5ca8 <col:31, line:26:5>     |   `-SwitchStmt 0x1520f5c18 <line:9:2, line:25:2>     |     |-UnaryOperator 0x1520f5c00 <line:9:10, col:11> '<dependent type>' contains-errors prefix '*' cannot overflow     |     | `-ImplicitCastExpr 0x15300e3d8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |     |   `-RecoveryExpr 0x15300e3b8 <col:11> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x1520f5c88 <col:19, line:25:2>     |       |-BreakStmt 0x1520f5c40 <line:22:6>     |       `-DefaultStmt 0x1520f5c68 <line:23:4, col:11>     |         `-NullStmt 0x1520f5c60 <col:11>     `-ReturnStmt 0x1520f5d18 <line:27:5, col:12>       `-RecoveryExpr 0x1520f5cf8 <col:12> '<dependent type>' contains-errors lvalue ","19932":"`-FunctionDecl 0x148008200  line:1:17 invalid tls_handshake 'int (struct tls_context *)' static   |-ParmVarDecl 0x13f80e268 <col:31, col:51> col:51 used tls 'struct tls_context *'   `-CompoundStmt 0x13e85e400 <line:2:1, line:22:1>     |-DeclStmt 0x148008330 <line:3:2, col:9>     | `-VarDecl 0x1480082c8 <col:2, col:6> col:6 used ret 'int'     |-IfStmt 0x148008408 <line:5:2, line:7:2>     | |-RecoveryExpr 0x148008380 <line:5:6, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x148008348 <col:6> 'struct tls_context *' lvalue ParmVar 0x13f80e268 'tls' 'struct tls_context *'     | `-CompoundStmt 0x1480083f0 <col:27, line:7:2>     |   `-ReturnStmt 0x1480083e0 <line:6:3, col:10>     |     `-RecoveryExpr 0x1480083c0 <col:10> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x148008648 <line:9:2, col:37> 'int' contains-errors '='     | |-DeclRefExpr 0x148008428 <col:2> 'int' lvalue Var 0x1480082c8 'ret' 'int'     | `-CallExpr 0x148008620 <col:8, col:37> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1480085a0 <col:8> 'int ()' Function 0x1480084e8 'gnutls_handshake' 'int ()'     |   `-RecoveryExpr 0x1480085f8 <col:25, col:30> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1480085c0 <col:25> 'struct tls_context *' lvalue ParmVar 0x13f80e268 'tls' 'struct tls_context *'     |-IfStmt 0x148008bc8 <line:10:2, line:15:2>     | |-BinaryOperator 0x1480087b8 <line:10:6, col:44> 'int' contains-errors '||'     | | |-BinaryOperator 0x148008758 <col:6, col:13> 'int' contains-errors '=='     | | | |-DeclRefExpr 0x148008668 <col:6> 'int' lvalue Var 0x1480082c8 'ret' 'int'     | | | `-RecoveryExpr 0x148008738 <col:13> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x148008798 <col:37, col:44> 'int' contains-errors '=='     | |   |-DeclRefExpr 0x1480086c0 <col:37> 'int' lvalue Var 0x1480082c8 'ret' 'int'     | |   `-RecoveryExpr 0x148008778 <col:44> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x148008ba8 <col:60, line:15:2>     |   |-IfStmt 0x148008b40 <line:11:3, line:13:3>     |   | |-BinaryOperator 0x148008980 <line:11:7, col:52> 'int' contains-errors '=='     |   | | |-CallExpr 0x148008938 <col:7, col:47> '<dependent type>' contains-errors     |   | | | |-DeclRefExpr 0x1480088b8 <col:7> 'int ()' Function 0x148008800 'gnutls_record_get_direction' 'int ()'     |   | | | `-RecoveryExpr 0x148008910 <col:35, col:40> '<dependent type>' contains-errors lvalue     |   | | |   `-DeclRefExpr 0x1480088d8 <col:35> 'struct tls_context *' lvalue ParmVar 0x13f80e268 'tls' 'struct tls_context *'     |   | | `-IntegerLiteral 0x148008960 <col:52> 'int' 1     |   | `-CompoundStmt 0x148008b28 <col:55, line:13:3>     |   |   `-CallExpr 0x148008b00 <line:12:4, col:32> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x148008a80 <col:4> 'int ()' Function 0x1480089c8 'TEVENT_FD_WRITEABLE' 'int ()'     |   |     `-RecoveryExpr 0x148008ad8 <col:24, col:29> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x148008aa0 <col:24> 'struct tls_context *' lvalue ParmVar 0x13f80e268 'tls' 'struct tls_context *'     |   `-ReturnStmt 0x148008b98 <line:14:3, col:10>     |     `-RecoveryExpr 0x148008b78 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x148009090 <line:16:2, line:19:2>     | |-BinaryOperator 0x148008c40 <line:16:6, col:12> 'int' '<'     | | |-ImplicitCastExpr 0x148008c28 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x148008be8 <col:6> 'int' lvalue Var 0x1480082c8 'ret' 'int'     | | `-IntegerLiteral 0x148008c08 <col:12> 'int' 0     | `-CompoundStmt 0x148009070 <col:15, line:19:2>     |   |-CallExpr 0x148008ff8 <line:17:3, col:40> 'int'     |   | |-ImplicitCastExpr 0x148008fe0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x148008d40 <col:3> 'int ()' Function 0x148008c88 'DEBUG' 'int ()'     |   | |-IntegerLiteral 0x148008d60 <col:9> 'int' 0     |   | `-ParenExpr 0x148008fc0 <col:11, col:39> 'int'     |   |   `-BinaryOperator 0x148008fa0 <col:12, col:38> 'int' ','     |   |     |-ImplicitCastExpr 0x148008f88 <col:12> 'char *' <ArrayToPointerDecay>     |   |     | `-StringLiteral 0x148008dc0 <col:12> 'char[4]' lvalue \"STR\"     |   |     `-CallExpr 0x148008f48 <col:19, col:38> 'int'     |   |       |-ImplicitCastExpr 0x148008f30 <col:19> 'int (*)()' <FunctionToPointerDecay>     |   |       | `-DeclRefExpr 0x148008ec0 <col:19> 'int ()' Function 0x148008e08 'gnutls_strerror' 'int ()'     |   |       `-ImplicitCastExpr 0x148008f70 <col:35> 'int' <LValueToRValue>     |   |         `-DeclRefExpr 0x148008ee0 <col:35> 'int' lvalue Var 0x1480082c8 'ret' 'int'     |   `-ReturnStmt 0x148009060 <line:18:3, col:10>     |     `-RecoveryExpr 0x148009040 <col:10> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x148009168 <line:20:2, col:24> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1480090e8 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1480090b0 <col:2> 'struct tls_context *' lvalue ParmVar 0x13f80e268 'tls' 'struct tls_context *'     | `-RecoveryExpr 0x148009148 <col:24> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1480091c0 <line:21:2, col:9>       `-RecoveryExpr 0x1480091a0 <col:9> '<dependent type>' contains-errors lvalue ","19342":"`-FunctionDecl 0x12500ddc8  line:1:12 invalid futex_unlock_pi 'int (int)' static   |-ParmVarDecl 0x12500dcf0 <col:28, col:32> col:32 invalid __user 'int'   `-CompoundStmt 0x12502aa08 <line:2:1, line:64:1>     |-DeclStmt 0x12500e068 <line:3:2, col:30>     | |-RecordDecl 0x12500de78 <col:2, col:9> col:9 struct futex_hash_bucket     | `-VarDecl 0x12500dfe8 <col:2, col:28> col:28 used hb 'struct futex_hash_bucket *'     |-DeclStmt 0x12500e300 <line:4:2, col:29>     | |-RecordDecl 0x12500e080 <col:2, col:9> col:9 struct futex_q     | |-VarDecl 0x12500e1e8 <col:2, col:18> col:18 used this 'struct futex_q *'     | `-VarDecl 0x12500e278 <col:2, col:25> col:25 used next 'struct futex_q *'     |-DeclStmt 0x1250278d8 <line:5:2, col:38>     | |-RecordDecl 0x12500e318 <col:2, col:8> col:8 union futex_key     | `-VarDecl 0x125027420 <col:2, col:18> col:18 invalid key 'union futex_key'     |-DeclStmt 0x125027970 <line:7:2, col:9>     | `-VarDecl 0x125027908 <col:2, col:6> col:6 used ret 'int'     |-LabelStmt 0x125027d18 <line:9:1, line:11:11> 'retry'     | `-IfStmt 0x125027ca8 <line:10:2, line:11:11>     |   |-CallExpr 0x125027ba0 <line:10:6, col:26> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x125027ae0 <col:6> 'int ()' Function 0x125027a28 'get_user' 'int ()'     |   | |-RecoveryExpr 0x125027b60 <col:15> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x125027b80 <col:21> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x125027c98 <line:11:3, col:11>     |     `-UnaryOperator 0x125027c80 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x125027c68 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x125027c18 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x125027e98 <line:13:2, line:14:11>     | |-RecoveryExpr 0x125027da0 <line:13:6, col:33> '_Bool' contains-errors     | `-ReturnStmt 0x125027e88 <line:14:3, col:11>     |   `-UnaryOperator 0x125027e70 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x125027e58 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x125027e08 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1250281d0 <line:16:2, col:69> 'int' contains-errors '='     | |-DeclRefExpr 0x125027eb8 <col:2> 'int' lvalue Var 0x125027908 'ret' 'int'     | `-CallExpr 0x125028190 <col:8, col:69> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x125027fb8 <col:8> 'int ()' Function 0x125027f00 'get_futex_key' 'int ()'     |   |-RecoveryExpr 0x1250280f0 <col:22> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x125028150 <col:29, col:37> '<dependent type>' contains-errors '&'     |   | |-RecoveryExpr 0x125028110 <col:29> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x125028130 <col:37> '<dependent type>' contains-errors lvalue     |   |-UnaryOperator 0x125028060 <col:51, col:52> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x125028040 <col:52> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x125028170 <col:57> '<dependent type>' contains-errors lvalue     |-IfStmt 0x125029c68 <line:17:2, line:18:8>     | |-CallExpr 0x1250283b8 <line:17:6, col:23> 'int'     | | |-ImplicitCastExpr 0x1250283a0 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x1250282d0 <col:6> 'int ()' Function 0x125028218 'unlikely' 'int ()'     | | `-BinaryOperator 0x125028348 <col:15, col:22> 'int' '!='     | |   |-ImplicitCastExpr 0x125028330 <col:15> 'int' <LValueToRValue>     | |   | `-DeclRefExpr 0x1250282f0 <col:15> 'int' lvalue Var 0x125027908 'ret' 'int'     | |   `-IntegerLiteral 0x125028310 <col:22> 'int' 0     | `-GotoStmt 0x125029c50 <line:18:3, col:8> 'out' 0x125029c00     |-BinaryOperator 0x125029e08 <line:20:2, col:22> 'struct futex_hash_bucket *' contains-errors '='     | |-DeclRefExpr 0x125029c88 <col:2> 'struct futex_hash_bucket *' lvalue Var 0x12500dfe8 'hb' 'struct futex_hash_bucket *'     | `-CallExpr 0x125029de0 <col:7, col:22> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x125029d88 <col:7> 'int ()' Function 0x125029cd0 'hash_futex' 'int ()'     |   `-UnaryOperator 0x125029dc8 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x125029da8 <col:19> '<dependent type>' contains-errors lvalue     |-CallExpr 0x125029fa0 <line:21:2, col:21> '<dependent type>' contains-errors     | |-DeclRefExpr 0x125029f08 <col:2> 'int ()' Function 0x125029e50 'spin_lock' 'int ()'     | `-UnaryOperator 0x125029f88 <col:12, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x125029f60 <col:13, col:17> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x125029f28 <col:13> 'struct futex_hash_bucket *' lvalue Var 0x12500dfe8 'hb' 'struct futex_hash_bucket *'     |-IfStmt 0x12502a170 <line:24:2, line:26:8>     | |-RecoveryExpr 0x12502a0e8 <line:24:6, line:25:54> '_Bool' contains-errors     | `-GotoStmt 0x12502a158 <line:26:3, col:8> 'pi_faulted' 0x12502a108     |-IfStmt 0x12502a238 <line:28:2, line:29:8>     | |-RecoveryExpr 0x12502a1b0 <line:28:6, col:27> '_Bool' contains-errors     | `-GotoStmt 0x12502a220 <line:29:3, col:8> 'out_unlock' 0x12502a1d0     |-CallExpr 0x12502a548 <line:50:2, col:20> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12502a4f0 <col:2> 'int ()' Function 0x12502a438 'put_futex_key' 'int ()'     | `-UnaryOperator 0x12502a530 <col:16, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12502a510 <col:17> '<dependent type>' contains-errors lvalue     |-LabelStmt 0x12502a5b8 <line:52:1, line:53:9> 'out'     | `-ReturnStmt 0x12502a5a8 <col:2, col:9>     |   `-ImplicitCastExpr 0x12502a590 <col:9> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x12502a570 <col:9> 'int' lvalue Var 0x125027908 'ret' 'int'     |-LabelStmt 0x12502a778 <line:55:1, line:56:23> 'pi_faulted'     | `-CallExpr 0x12502a750 <col:2, col:23> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12502a6b8 <col:2> 'int ()' Function 0x12502a600 'spin_unlock' 'int ()'     |   `-UnaryOperator 0x12502a738 <col:14, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x12502a710 <col:15, col:19> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x12502a6d8 <col:15> 'struct futex_hash_bucket *' lvalue Var 0x12500dfe8 'hb' 'struct futex_hash_bucket *'     |-CallExpr 0x12502a7f0 <line:57:2, col:20> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12502a798 <col:2> 'int ()' Function 0x12502a438 'put_futex_key' 'int ()'     | `-UnaryOperator 0x12502a7d8 <col:16, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12502a7b8 <col:17> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12502a9a0 <line:60:2, line:61:8>     | |-UnaryOperator 0x12502a970 <line:60:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12502a958 <col:7> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x12502a938 <col:7> 'int' lvalue Var 0x125027908 'ret' 'int'     | `-GotoStmt 0x12502a988 <line:61:3, col:8> 'retry' 0x125027cc8     `-ReturnStmt 0x12502a9f8 <line:63:2, col:9>       `-ImplicitCastExpr 0x12502a9e0 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x12502a9c0 <col:9> 'int' lvalue Var 0x125027908 'ret' 'int' ","20053":"`-FunctionDecl 0x13b00e350  line:1:6 kvm_hv_invalidate_tsc_page 'void (struct kvm *)'   |-ParmVarDecl 0x13b00e248 <col:33, col:45> col:45 used kvm 'struct kvm *'   `-CompoundStmt 0x13a923b20 <line:2:1, line:34:1>     |-DeclStmt 0x13b02ac48 <line:3:2, col:36>     | |-RecordDecl 0x13b02a848 <col:2, col:9> col:9 struct kvm_hv     | `-VarDecl 0x13b02a9b8 <col:2, col:35> col:17 used hv 'struct kvm_hv *' cinit     |   `-ImplicitCastExpr 0x13b02ac18 <col:22, col:35> 'struct kvm_hv *' <IntegralToPointer>     |     `-CallExpr 0x13b02abd8 <col:22, col:35> 'int'     |       |-ImplicitCastExpr 0x13b02abc0 <col:22> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x13b02ab50 <col:22> 'int ()' Function 0x13b02aa98 'to_kvm_hv' 'int ()'     |       `-ImplicitCastExpr 0x13b02ac00 <col:32> 'struct kvm *' <LValueToRValue>     |         `-DeclRefExpr 0x13b02ab70 <col:32> 'struct kvm *' lvalue ParmVar 0x13b00e248 'kvm' 'struct kvm *'     |-DeclStmt 0x13b02ace0 <line:5:2, col:9>     | `-VarDecl 0x13b02ac78 <col:2, col:6> col:6 used idx 'int'     |-IfStmt 0x13b02b108 <line:7:2, line:10:3>     | |-BinaryOperator 0x13b02b0d8 <line:7:6, line:9:31> 'int' contains-errors '||'     | | |-BinaryOperator 0x13b02b060 <line:7:6, line:8:32> 'int' contains-errors '||'     | | | |-BinaryOperator 0x13b02b000 <line:7:6, col:32> 'int' contains-errors '=='     | | | | |-RecoveryExpr 0x13b02ad30 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | | | | `-DeclRefExpr 0x13b02acf8 <col:6> 'struct kvm_hv *' lvalue Var 0x13b02a9b8 'hv' 'struct kvm_hv *'     | | | | `-RecoveryExpr 0x13b02afe0 <col:32> '<dependent type>' contains-errors lvalue     | | | `-BinaryOperator 0x13b02b040 <line:8:6, col:32> 'int' contains-errors '=='     | | |   |-RecoveryExpr 0x13b02adc8 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | |   | `-DeclRefExpr 0x13b02ad90 <col:6> 'struct kvm_hv *' lvalue Var 0x13b02a9b8 'hv' 'struct kvm_hv *'     | | |   `-RecoveryExpr 0x13b02b020 <col:32> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x13b02b098 <line:9:6, col:31> 'int'     | |   |-ImplicitCastExpr 0x13b02b080 <col:6> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x13b02af28 <col:6> 'int ()' Function 0x13b02ae70 'tsc_page_update_unsafe' 'int ()'     | |   `-ImplicitCastExpr 0x13b02b0c0 <col:29> 'struct kvm_hv *' <LValueToRValue>     | |     `-DeclRefExpr 0x13b02af48 <col:29> 'struct kvm_hv *' lvalue Var 0x13b02a9b8 'hv' 'struct kvm_hv *'     | `-ReturnStmt 0x13b02b0f8 <line:10:3>     |-CallExpr 0x13b02b2a0 <line:12:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13b02b208 <col:2> 'int ()' Function 0x13b02b150 'mutex_lock' 'int ()'     | `-UnaryOperator 0x13b02b288 <col:13, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13b02b260 <col:14, col:18> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13b02b228 <col:14> 'struct kvm_hv *' lvalue Var 0x13b02a9b8 'hv' 'struct kvm_hv *'     |-IfStmt 0x13b02b3e8 <line:14:2, line:15:8>     | |-RecoveryExpr 0x13b02b360 <line:14:6, col:57> '_Bool' contains-errors     | `-GotoStmt 0x13b02b3d0 <line:15:3, col:8> 'out_unlock' 0x13b02b380     |-IfStmt 0x13b02b5b8 <line:18:2, line:19:28>     | |-BinaryOperator 0x13b02b4c0 <line:18:6, col:32> 'int' contains-errors '=='     | | |-RecoveryExpr 0x13b02b440 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x13b02b408 <col:6> 'struct kvm_hv *' lvalue Var 0x13b02a9b8 'hv' 'struct kvm_hv *'     | | `-RecoveryExpr 0x13b02b4a0 <col:32> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x13b02b598 <line:19:3, col:28> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x13b02b518 <col:3, col:7> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x13b02b4e0 <col:3> 'struct kvm_hv *' lvalue Var 0x13b02a9b8 'hv' 'struct kvm_hv *'     |   `-RecoveryExpr 0x13b02b578 <col:28> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13b02b738 <line:23:2, col:29> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13b02b6d0 <col:2, col:14> '<dependent type>' contains-errors lvalue .tsc_sequence     | | `-RecoveryExpr 0x13b02b6a8 <col:2, col:6> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13b02b670 <col:2> 'struct kvm_hv *' lvalue Var 0x13b02a9b8 'hv' 'struct kvm_hv *'     | `-IntegerLiteral 0x13b02b718 <col:29> 'int' 0     |-BinaryOperator 0x13a923378 <line:26:2, col:33> 'int' contains-errors '='     | |-DeclRefExpr 0x13b02b758 <col:2> 'int' lvalue Var 0x13b02ac78 'idx' 'int'     | `-CallExpr 0x13a923350 <col:8, col:33> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13a9232b8 <col:8> 'int ()' Function 0x13a923200 'srcu_read_lock' 'int ()'     |   `-UnaryOperator 0x13a923338 <col:23, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x13a923310 <col:24, col:29> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13a9232d8 <col:24> 'struct kvm *' lvalue ParmVar 0x13b00e248 'kvm' 'struct kvm *'     |-CallExpr 0x13a923930 <line:30:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13a923878 <col:2> 'int ()' Function 0x13a9237c0 'srcu_read_unlock' 'int ()'     | |-UnaryOperator 0x13a9238f8 <col:19, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x13a9238d0 <col:20, col:25> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13a923898 <col:20> 'struct kvm *' lvalue ParmVar 0x13b00e248 'kvm' 'struct kvm *'     | `-DeclRefExpr 0x13a923910 <col:31> 'int' lvalue Var 0x13b02ac78 'idx' 'int'     `-LabelStmt 0x13a923b00 <line:32:1, line:33:27> 'out_unlock'       `-CallExpr 0x13a923ad8 <col:2, col:27> '<dependent type>' contains-errors         |-DeclRefExpr 0x13a923a40 <col:2> 'int ()' Function 0x13a923988 'mutex_unlock' 'int ()'         `-UnaryOperator 0x13a923ac0 <col:15, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow           `-RecoveryExpr 0x13a923a98 <col:16, col:20> '<dependent type>' contains-errors lvalue             `-DeclRefExpr 0x13a923a60 <col:16> 'struct kvm_hv *' lvalue Var 0x13b02a9b8 'hv' 'struct kvm_hv *' ","19762":"`-FunctionDecl 0x13000ddc8  line:1:1 invalid _copyGrantStmt 'int (const int *)'   |-ParmVarDecl 0x13000dcf0 <col:16, col:33> col:33 invalid from 'const int *'   `-CompoundStmt 0x1300277a0 <line:2:1, line:15:1>     |-CallExpr 0x13000e1b0 <line:5:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13000e130 <col:2> 'int ()' Function 0x13000e078 'COPY_SCALAR_FIELD' 'int ()'     | `-RecoveryExpr 0x13000e190 <col:20> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13000e258 <line:6:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13000e1d8 <col:2> 'int ()' Function 0x13000e078 'COPY_SCALAR_FIELD' 'int ()'     | `-RecoveryExpr 0x13000e238 <col:20> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13000e300 <line:7:2, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13000e280 <col:2> 'int ()' Function 0x13000e078 'COPY_SCALAR_FIELD' 'int ()'     | `-RecoveryExpr 0x13000e2e0 <col:20> '<dependent type>' contains-errors lvalue     |-CallExpr 0x130027490 <line:8:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x130027410 <col:2> 'int ()' Function 0x13000e350 'COPY_NODE_FIELD' 'int ()'     | `-RecoveryExpr 0x130027470 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x130027538 <line:9:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1300274b8 <col:2> 'int ()' Function 0x13000e350 'COPY_NODE_FIELD' 'int ()'     | `-RecoveryExpr 0x130027518 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1300275e0 <line:10:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x130027560 <col:2> 'int ()' Function 0x13000e350 'COPY_NODE_FIELD' 'int ()'     | `-RecoveryExpr 0x1300275c0 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x130027688 <line:11:2, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x130027608 <col:2> 'int ()' Function 0x13000e078 'COPY_SCALAR_FIELD' 'int ()'     | `-RecoveryExpr 0x130027668 <col:20> '<dependent type>' contains-errors lvalue     |-CallExpr 0x130027730 <line:12:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1300276b0 <col:2> 'int ()' Function 0x13000e078 'COPY_SCALAR_FIELD' 'int ()'     | `-RecoveryExpr 0x130027710 <col:20> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x130027790 <line:14:2, col:9>       `-RecoveryExpr 0x130027770 <col:9> '<dependent type>' contains-errors lvalue ","19569":"`-FunctionDecl 0x16000e350  line:1:13 calipso_req_delattr 'void (struct request_sock *)' static   |-ParmVarDecl 0x16000e248 <col:33, col:54> col:54 used req 'struct request_sock *'   `-CompoundStmt 0x160029ba8 <line:2:1, line:24:1>     |-DeclStmt 0x160026a48 <line:3:2, col:52>     | |-RecordDecl 0x160026648 <col:2, col:9> col:9 struct inet_request_sock     | `-VarDecl 0x1600267b8 <col:2, col:51> col:28 used req_inet 'struct inet_request_sock *' cinit     |   `-ImplicitCastExpr 0x160026a18 <col:39, col:51> 'struct inet_request_sock *' <IntegralToPointer>     |     `-CallExpr 0x1600269d8 <col:39, col:51> 'int'     |       |-ImplicitCastExpr 0x1600269c0 <col:39> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x160026950 <col:39> 'int ()' Function 0x160026898 'inet_rsk' 'int ()'     |       `-ImplicitCastExpr 0x160026a00 <col:48> 'struct request_sock *' <LValueToRValue>     |         `-DeclRefExpr 0x160026970 <col:48> 'struct request_sock *' lvalue ParmVar 0x16000e248 'req' 'struct request_sock *'     |-DeclStmt 0x160026c48 <line:4:2, col:26>     | |-RecordDecl 0x160026a60 <col:2, col:9> col:9 struct ipv6_opt_hdr     | `-VarDecl 0x160026bc8 <col:2, col:23> col:23 used new 'struct ipv6_opt_hdr *'     |-DeclStmt 0x160026e48 <line:5:2, col:31>     | |-RecordDecl 0x160026c60 <col:2, col:9> col:9 struct ipv6_txoptions     | `-VarDecl 0x160026dc8 <col:2, col:25> col:25 used txopts 'struct ipv6_txoptions *'     |-DeclStmt 0x160027318 <line:6:2, col:49>     | |-RecordDecl 0x160026e60 <col:2, col:9> col:9 struct sock     | `-VarDecl 0x160026fc8 <col:2, col:48> col:15 used sk 'struct sock *' cinit     |   `-ImplicitCastExpr 0x1600272e8 <col:20, col:48> 'struct sock *' <IntegralToPointer>     |     `-CallExpr 0x1600272c0 <col:20, col:48> 'int'     |       |-ImplicitCastExpr 0x1600272a8 <col:20> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x160027110 <col:20> 'int ()' Function 0x160027058 'sk_to_full_sk' 'int ()'     |       `-CallExpr 0x160027268 <col:34, col:47> 'int'     |         |-ImplicitCastExpr 0x160027250 <col:34> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x160027210 <col:34> 'int ()' Function 0x160027158 'req_to_sk' 'int ()'     |         `-ImplicitCastExpr 0x160027290 <col:44> 'struct request_sock *' <LValueToRValue>     |           `-DeclRefExpr 0x160027230 <col:44> 'struct request_sock *' lvalue ParmVar 0x16000e248 'req' 'struct request_sock *'     |-IfStmt 0x1600274c8 <line:8:2, line:9:3>     | |-BinaryOperator 0x160027498 <line:8:6, col:50> 'int' contains-errors '||'     | | |-UnaryOperator 0x1600273a8 <col:6, col:17> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x160027390 <col:7, col:17> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-RecoveryExpr 0x160027368 <col:7, col:17> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x160027330 <col:7> 'struct inet_request_sock *' lvalue Var 0x1600267b8 'req_inet' 'struct inet_request_sock *'     | | `-UnaryOperator 0x160027480 <col:29, col:50> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x160027468 <col:30, col:50> '<dependent type>' contains-errors <LValueToRValue>     | |     `-CXXDependentScopeMemberExpr 0x160027420 <col:30, col:50> '<dependent type>' contains-errors lvalue ->hopopt     | |       `-RecoveryExpr 0x1600273f8 <col:30, col:40> '<dependent type>' contains-errors lvalue     | |         `-DeclRefExpr 0x1600273c0 <col:30> 'struct inet_request_sock *' lvalue Var 0x1600267b8 'req_inet' 'struct inet_request_sock *'     | `-ReturnStmt 0x1600274b8 <line:9:3>     |-IfStmt 0x160028f88 <line:11:2, line:12:3>     | |-CallExpr 0x160028f48 <line:11:6, col:54> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1600275c8 <col:6> 'int ()' Function 0x160027510 'calipso_opt_del' 'int ()'     | | |-CXXDependentScopeMemberExpr 0x160028e60 <col:22, col:42> '<dependent type>' contains-errors lvalue ->hopopt     | | | `-RecoveryExpr 0x160028e38 <col:22, col:32> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x160028e00 <col:22> 'struct inet_request_sock *' lvalue Var 0x1600267b8 'req_inet' 'struct inet_request_sock *'     | | `-UnaryOperator 0x160028f30 <col:50, col:51> 'struct ipv6_opt_hdr **' prefix '&' cannot overflow     | |   `-DeclRefExpr 0x160028ea8 <col:51> 'struct ipv6_opt_hdr *' lvalue Var 0x160026bc8 'new' 'struct ipv6_opt_hdr *'     | `-ReturnStmt 0x160028f78 <line:12:3>     |-BinaryOperator 0x160029240 <line:14:2, col:71> 'struct ipv6_txoptions *' contains-errors '='     | |-DeclRefExpr 0x160028fa8 <col:2> 'struct ipv6_txoptions *' lvalue Var 0x160026dc8 'txopts' 'struct ipv6_txoptions *'     | `-CallExpr 0x160029200 <col:11, col:71> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1600290a8 <col:11> 'int ()' Function 0x160028ff0 'ipv6_renew_options' 'int ()'     |   |-DeclRefExpr 0x1600290c8 <col:30> 'struct sock *' lvalue Var 0x160026fc8 'sk' 'struct sock *'     |   |-RecoveryExpr 0x160029120 <col:34, col:44> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x1600290e8 <col:34> 'struct inet_request_sock *' lvalue Var 0x1600267b8 'req_inet' 'struct inet_request_sock *'     |   |-RecoveryExpr 0x1600291e0 <col:54> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x160029160 <col:68> 'struct ipv6_opt_hdr *' lvalue Var 0x160026bc8 'new' 'struct ipv6_opt_hdr *'     |-IfStmt 0x160029a10 <line:16:2, line:22:2>     | |-UnaryOperator 0x1600293d8 <line:16:6, col:20> 'int' prefix '!' cannot overflow     | | `-CallExpr 0x160029398 <col:7, col:20> 'int'     | |   |-ImplicitCastExpr 0x160029380 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x160029340 <col:7> 'int ()' Function 0x160029288 'IS_ERR' 'int ()'     | |   `-ImplicitCastExpr 0x1600293c0 <col:14> 'struct ipv6_txoptions *' <LValueToRValue>     | |     `-DeclRefExpr 0x160029360 <col:14> 'struct ipv6_txoptions *' lvalue Var 0x160026dc8 'txopts' 'struct ipv6_txoptions *'     | `-CompoundStmt 0x1600299f0 <col:23, line:22:2>     |   |-BinaryOperator 0x1600295d8 <line:17:3, col:44> 'struct ipv6_txoptions *' contains-errors '='     |   | |-DeclRefExpr 0x1600293f0 <col:3> 'struct ipv6_txoptions *' lvalue Var 0x160026dc8 'txopts' 'struct ipv6_txoptions *'     |   | `-CallExpr 0x1600295a8 <col:12, col:44> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x1600294f0 <col:12> 'int ()' Function 0x160029438 'xchg' 'int ()'     |   |   |-UnaryOperator 0x160029570 <col:17, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   | `-RecoveryExpr 0x160029548 <col:18, col:28> '<dependent type>' contains-errors lvalue     |   |   |   `-DeclRefExpr 0x160029510 <col:18> 'struct inet_request_sock *' lvalue Var 0x1600267b8 'req_inet' 'struct inet_request_sock *'     |   |   `-DeclRefExpr 0x160029588 <col:38> 'struct ipv6_txoptions *' lvalue Var 0x160026dc8 'txopts' 'struct ipv6_txoptions *'     |   `-IfStmt 0x1600299d0 <line:18:3, line:21:3>     |     |-ImplicitCastExpr 0x160029618 <line:18:7> 'struct ipv6_txoptions *' <LValueToRValue>     |     | `-DeclRefExpr 0x1600295f8 <col:7> 'struct ipv6_txoptions *' lvalue Var 0x160026dc8 'txopts' 'struct ipv6_txoptions *'     |     `-CompoundStmt 0x1600299b0 <col:15, line:21:3>     |       |-CallExpr 0x160029808 <line:19:4, col:50> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x160029710 <col:4> 'int ()' Function 0x160029658 'atomic_sub' 'int ()'     |       | |-RecoveryExpr 0x160029768 <col:15, col:23> '<dependent type>' contains-errors lvalue     |       | | `-DeclRefExpr 0x160029730 <col:15> 'struct ipv6_txoptions *' lvalue Var 0x160026dc8 'txopts' 'struct ipv6_txoptions *'     |       | `-UnaryOperator 0x1600297f0 <col:32, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow     |       |   `-RecoveryExpr 0x1600297c8 <col:33, col:37> '<dependent type>' contains-errors lvalue     |       |     `-DeclRefExpr 0x160029790 <col:33> 'struct sock *' lvalue Var 0x160026fc8 'sk' 'struct sock *'     |       `-CallExpr 0x160029970 <line:20:4, col:20> 'int'     |         |-ImplicitCastExpr 0x160029958 <col:4> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x160029918 <col:4> 'int ()' Function 0x160029860 'txopt_put' 'int ()'     |         `-ImplicitCastExpr 0x160029998 <col:14> 'struct ipv6_txoptions *' <LValueToRValue>     |           `-DeclRefExpr 0x160029938 <col:14> 'struct ipv6_txoptions *' lvalue Var 0x160026dc8 'txopts' 'struct ipv6_txoptions *'     `-CallExpr 0x160029b68 <line:23:2, col:11> 'int'       |-ImplicitCastExpr 0x160029b50 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x160029b10 <col:2> 'int ()' Function 0x160029a58 'kfree' 'int ()'       `-ImplicitCastExpr 0x160029b90 <col:8> 'struct ipv6_opt_hdr *' <LValueToRValue>         `-DeclRefExpr 0x160029b30 <col:8> 'struct ipv6_opt_hdr *' lvalue Var 0x160026bc8 'new' 'struct ipv6_opt_hdr *' ","19252":"`-FunctionDecl 0x1201281a8  line:1:1 cgi_find_variable 'int (const char *)'   |-ParmVarDecl 0x1201280d8 <col:19, col:31> col:31 used name 'const char *'   `-CompoundStmt 0x120128478 <line:2:1, line:13:1> ","19505":"`-FunctionDecl 0x1430271c8  line:1:12 get_rx_bufs 'int (struct vhost_virtqueue *, struct vring_used_elem *, int, unsigned int *, struct vhost_log *, unsigned int *, unsigned int)' static   |-ParmVarDecl 0x14300e848 <col:24, col:48> col:48 used vq 'struct vhost_virtqueue *'   |-ParmVarDecl 0x143026c28 <line:2:10, col:34> col:34 used heads 'struct vring_used_elem *'   |-ParmVarDecl 0x143026ca8 <line:3:10, col:14> col:14 used datalen 'int'   |-ParmVarDecl 0x143026d58 <line:4:10, col:20> col:20 used iovcount 'unsigned int *'   |-ParmVarDecl 0x143026f28 <line:5:10, col:28> col:28 used log 'struct vhost_log *'   |-ParmVarDecl 0x143026fa8 <line:6:10, col:20> col:20 used log_num 'unsigned int *'   |-ParmVarDecl 0x143027028 <line:7:10, col:23> col:23 used quota 'unsigned int'   `-CompoundStmt 0x14302b718 <line:8:1, line:51:1>     |-DeclStmt 0x143027408 <line:9:2, col:22>     | |-VarDecl 0x143027308 <col:2, col:15> col:15 used out 'unsigned int'     | `-VarDecl 0x143027388 <col:2, col:20> col:20 used in 'unsigned int'     |-DeclStmt 0x1430274c0 <line:10:2, col:13>     | `-VarDecl 0x143027438 <col:2, col:12> col:6 used seg 'int' cinit     |   `-IntegerLiteral 0x1430274a0 <col:12> 'int' 0     |-DeclStmt 0x143027578 <line:11:2, col:19>     | `-VarDecl 0x1430274f0 <col:2, col:18> col:6 used headcount 'int' cinit     |   `-IntegerLiteral 0x143027558 <col:18> 'int' 0     |-DeclStmt 0x143027610 <line:12:2, col:12>     | `-VarDecl 0x1430275a8 <col:2, col:11> col:11 used d 'unsigned int'     |-DeclStmt 0x143027760 <line:13:2, col:18>     | |-VarDecl 0x143027640 <col:2, col:6> col:6 used r 'int'     | `-VarDecl 0x1430276c0 <col:2, col:17> col:9 used nlogs 'int' cinit     |   `-IntegerLiteral 0x143027728 <col:17> 'int' 0     |-WhileStmt 0x14302b188 <line:15:2, line:42:2>     | |-BinaryOperator 0x143027898 <line:15:9, col:36> 'int' '&&'     | | |-BinaryOperator 0x1430277d0 <col:9, col:19> 'int' '>'     | | | |-ImplicitCastExpr 0x1430277b8 <col:9> 'int' <LValueToRValue>     | | | | `-DeclRefExpr 0x143027778 <col:9> 'int' lvalue ParmVar 0x143026ca8 'datalen' 'int'     | | | `-IntegerLiteral 0x143027798 <col:19> 'int' 0     | | `-BinaryOperator 0x143027878 <col:24, col:36> 'int' '<'     | |   |-ImplicitCastExpr 0x143027860 <col:24> 'unsigned int' <IntegralCast>     | |   | `-ImplicitCastExpr 0x143027830 <col:24> 'int' <LValueToRValue>     | |   |   `-DeclRefExpr 0x1430277f0 <col:24> 'int' lvalue Var 0x1430274f0 'headcount' 'int'     | |   `-ImplicitCastExpr 0x143027848 <col:36> 'unsigned int' <LValueToRValue>     | |     `-DeclRefExpr 0x143027810 <col:36> 'unsigned int' lvalue ParmVar 0x143027028 'quota' 'unsigned int'     | `-CompoundStmt 0x14302b140 <col:43, line:42:2>     |   |-IfStmt 0x143029a88 <line:16:3, line:19:3>     |   | |-CallExpr 0x143027ac0 <line:16:7, col:33> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x1430279e0 <col:7> 'int ()' Function 0x143027928 'unlikely' 'int ()'     |   | | `-BinaryOperator 0x143027aa0 <col:16, col:23> 'int' contains-errors '>='     |   | |   |-DeclRefExpr 0x143027a00 <col:16> 'int' lvalue Var 0x143027438 'seg' 'int'     |   | |   `-RecoveryExpr 0x143027a80 <col:23> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x143029a68 <col:36, line:19:3>     |   |   |-BinaryOperator 0x143027bc0 <line:17:4, col:9> 'int' contains-errors '='     |   |   | |-DeclRefExpr 0x143027ae8 <col:4> 'int' lvalue Var 0x143027640 'r' 'int'     |   |   | `-UnaryOperator 0x143027ba8 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   |   `-ImplicitCastExpr 0x143027b90 <col:9> '<dependent type>' contains-errors <LValueToRValue>     |   |   |     `-RecoveryExpr 0x143027b70 <col:9> '<dependent type>' contains-errors lvalue     |   |   `-GotoStmt 0x143029a50 <line:18:4, col:9> 'err' 0x143029a00     |   |-BinaryOperator 0x143029fc0 <line:20:3, line:22:28> 'unsigned int' contains-errors '='     |   | |-DeclRefExpr 0x143029aa8 <line:20:3> 'unsigned int' lvalue Var 0x1430275a8 'd' 'unsigned int'     |   | `-CallExpr 0x143029f60 <col:7, line:22:28> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x143029ba8 <line:20:7> 'int ()' Function 0x143029af0 'vhost_get_vq_desc' 'int ()'     |   |   |-RecoveryExpr 0x143029c00 <col:25, col:29> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x143029bc8 <col:25> 'struct vhost_virtqueue *' lvalue ParmVar 0x14300e848 'vq' 'struct vhost_virtqueue *'     |   |   |-DeclRefExpr 0x143029c28 <col:34> 'struct vhost_virtqueue *' lvalue ParmVar 0x14300e848 'vq' 'struct vhost_virtqueue *'     |   |   |-BinaryOperator 0x143029cc8 <col:38, col:48> '<dependent type>' contains-errors '+'     |   |   | |-RecoveryExpr 0x143029c80 <col:38, col:42> '<dependent type>' contains-errors lvalue     |   |   | | `-DeclRefExpr 0x143029c48 <col:38> 'struct vhost_virtqueue *' lvalue ParmVar 0x14300e848 'vq' 'struct vhost_virtqueue *'     |   |   | `-DeclRefExpr 0x143029ca8 <col:48> 'int' lvalue Var 0x143027438 'seg' 'int'     |   |   |-BinaryOperator 0x143029e90 <line:21:11, col:33> '<dependent type>' contains-errors '-'     |   |   | |-CallExpr 0x143029e48 <col:11, col:29> '<dependent type>' contains-errors     |   |   | | |-DeclRefExpr 0x143029dc8 <col:11> 'int ()' Function 0x143029d10 'ARRAY_SIZE' 'int ()'     |   |   | | `-RecoveryExpr 0x143029e20 <col:22, col:26> '<dependent type>' contains-errors lvalue     |   |   | |   `-DeclRefExpr 0x143029de8 <col:22> 'struct vhost_virtqueue *' lvalue ParmVar 0x14300e848 'vq' 'struct vhost_virtqueue *'     |   |   | `-DeclRefExpr 0x143029e70 <col:33> 'int' lvalue Var 0x143027438 'seg' 'int'     |   |   |-UnaryOperator 0x143029ed0 <col:38, col:39> 'unsigned int *' prefix '&' cannot overflow     |   |   | `-DeclRefExpr 0x143029eb0 <col:39> 'unsigned int' lvalue Var 0x143027308 'out' 'unsigned int'     |   |   |-UnaryOperator 0x143029f08 <line:22:11, col:12> 'unsigned int *' prefix '&' cannot overflow     |   |   | `-DeclRefExpr 0x143029ee8 <col:12> 'unsigned int' lvalue Var 0x143027388 'in' 'unsigned int'     |   |   |-DeclRefExpr 0x143029f20 <col:16> 'struct vhost_log *' lvalue ParmVar 0x143026f28 'log' 'struct vhost_log *'     |   |   `-DeclRefExpr 0x143029f40 <col:21> 'unsigned int *' lvalue ParmVar 0x143026fa8 'log_num' 'unsigned int *'     |   |-IfStmt 0x14302a118 <line:23:3, line:26:3>     |   | |-BinaryOperator 0x14302a060 <line:23:7, col:16> 'int' contains-errors '=='     |   | | |-DeclRefExpr 0x143029fe0 <col:7> 'unsigned int' lvalue Var 0x1430275a8 'd' 'unsigned int'     |   | | `-RecoveryExpr 0x14302a038 <col:12, col:16> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x14302a000 <col:12> 'struct vhost_virtqueue *' lvalue ParmVar 0x14300e848 'vq' 'struct vhost_virtqueue *'     |   | `-CompoundStmt 0x14302a0f8 <col:21, line:26:3>     |   |   |-BinaryOperator 0x14302a0c0 <line:24:4, col:8> 'int' '='     |   |   | |-DeclRefExpr 0x14302a080 <col:4> 'int' lvalue Var 0x143027640 'r' 'int'     |   |   | `-IntegerLiteral 0x14302a0a0 <col:8> 'int' 0     |   |   `-GotoStmt 0x14302a0e0 <line:25:4, col:9> 'err' 0x143029a00     |   |-IfStmt 0x14302a668 <line:27:3, line:32:3>     |   | |-CallExpr 0x14302a288 <line:27:7, col:30> 'int'     |   | | |-ImplicitCastExpr 0x14302a270 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | | | `-DeclRefExpr 0x14302a138 <col:7> 'int ()' Function 0x143027928 'unlikely' 'int ()'     |   | | `-BinaryOperator 0x14302a220 <col:16, col:29> 'int' '||'     |   | |   |-ImplicitCastExpr 0x14302a208 <col:16> 'unsigned int' <LValueToRValue>     |   | |   | `-DeclRefExpr 0x14302a158 <col:16> 'unsigned int' lvalue Var 0x143027308 'out' 'unsigned int'     |   | |   `-BinaryOperator 0x14302a1e8 <col:23, col:29> 'int' '<='     |   | |     |-ImplicitCastExpr 0x14302a1b8 <col:23> 'unsigned int' <LValueToRValue>     |   | |     | `-DeclRefExpr 0x14302a178 <col:23> 'unsigned int' lvalue Var 0x143027388 'in' 'unsigned int'     |   | |     `-ImplicitCastExpr 0x14302a1d0 <col:29> 'unsigned int' <IntegralCast>     |   | |       `-IntegerLiteral 0x14302a198 <col:29> 'int' 0     |   | `-CompoundStmt 0x14302a640 <col:33, line:32:3>     |   |   |-CallExpr 0x14302a490 <line:28:4, line:29:19> 'int'     |   |   | |-ImplicitCastExpr 0x14302a478 <line:28:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x14302a390 <col:4> 'int ()' Function 0x14302a2d8 'vq_err' 'int ()'     |   |   | |-ImplicitCastExpr 0x14302a4d0 <col:11> 'struct vhost_virtqueue *' <LValueToRValue>     |   |   | | `-DeclRefExpr 0x14302a3b0 <col:11> 'struct vhost_virtqueue *' lvalue ParmVar 0x14300e848 'vq' 'struct vhost_virtqueue *'     |   |   | |-ImplicitCastExpr 0x14302a4e8 <col:15, line:29:5> 'char *' <ArrayToPointerDecay>     |   |   | | `-StringLiteral 0x14302a410 <line:28:15, line:29:5> 'char[7]' lvalue \"STRSTR\"     |   |   | |-ImplicitCastExpr 0x14302a500 <col:12> 'unsigned int' <LValueToRValue>     |   |   | | `-DeclRefExpr 0x14302a438 <col:12> 'unsigned int' lvalue Var 0x143027308 'out' 'unsigned int'     |   |   | `-ImplicitCastExpr 0x14302a518 <col:17> 'unsigned int' <LValueToRValue>     |   |   |   `-DeclRefExpr 0x14302a458 <col:17> 'unsigned int' lvalue Var 0x143027388 'in' 'unsigned int'     |   |   |-BinaryOperator 0x14302a608 <line:30:4, col:9> 'int' contains-errors '='     |   |   | |-DeclRefExpr 0x14302a530 <col:4> 'int' lvalue Var 0x143027640 'r' 'int'     |   |   | `-UnaryOperator 0x14302a5f0 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   |   `-ImplicitCastExpr 0x14302a5d8 <col:9> '<dependent type>' contains-errors <LValueToRValue>     |   |   |     `-RecoveryExpr 0x14302a5b8 <col:9> '<dependent type>' contains-errors lvalue     |   |   `-GotoStmt 0x14302a628 <line:31:4, col:9> 'err' 0x143029a00     |   |-IfStmt 0x14302a8c8 <line:33:3, line:36:3>     |   | |-CallExpr 0x14302a6e0 <line:33:7, col:19> 'int'     |   | | |-ImplicitCastExpr 0x14302a6c8 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | | | `-DeclRefExpr 0x14302a688 <col:7> 'int ()' Function 0x143027928 'unlikely' 'int ()'     |   | | `-ImplicitCastExpr 0x14302a708 <col:16> 'struct vhost_log *' <LValueToRValue>     |   | |   `-DeclRefExpr 0x14302a6a8 <col:16> 'struct vhost_log *' lvalue ParmVar 0x143026f28 'log' 'struct vhost_log *'     |   | `-CompoundStmt 0x14302a8a8 <col:22, line:36:3>     |   |   |-CompoundAssignOperator 0x14302a7a8 <line:34:4, col:14> 'int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'     |   |   | |-DeclRefExpr 0x14302a720 <col:4> 'int' lvalue Var 0x1430276c0 'nlogs' 'int'     |   |   | `-ImplicitCastExpr 0x14302a790 <col:13, col:14> 'unsigned int' <LValueToRValue>     |   |   |   `-UnaryOperator 0x14302a778 <col:13, col:14> 'unsigned int' lvalue prefix '*' cannot overflow     |   |   |     `-ImplicitCastExpr 0x14302a760 <col:14> 'unsigned int *' <LValueToRValue>     |   |   |       `-DeclRefExpr 0x14302a740 <col:14> 'unsigned int *' lvalue ParmVar 0x143026fa8 'log_num' 'unsigned int *'     |   |   `-ImplicitCastExpr 0x14302a890 <line:35:4, col:12> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x14302a860 <col:4, col:12> '<dependent type>' contains-errors lvalue     |   |       |-DeclRefExpr 0x14302a7d8 <col:4> 'struct vhost_log *' lvalue ParmVar 0x143026f28 'log' 'struct vhost_log *'     |   |       `-UnaryOperator 0x14302a830 <col:11, col:12> 'unsigned int' lvalue prefix '*' cannot overflow     |   |         `-ImplicitCastExpr 0x14302a818 <col:12> 'unsigned int *' <LValueToRValue>     |   |           `-DeclRefExpr 0x14302a7f8 <col:12> 'unsigned int *' lvalue ParmVar 0x143026fa8 'log_num' 'unsigned int *'     |   |-UnaryOperator 0x14302b0a0 <line:40:3, col:5> 'int' prefix '++'     |   | `-DeclRefExpr 0x14302b080 <col:5> 'int' lvalue Var 0x1430274f0 'headcount' 'int'     |   `-CompoundAssignOperator 0x14302b110 <line:41:3, col:10> 'int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'     |     |-DeclRefExpr 0x14302b0b8 <col:3> 'int' lvalue Var 0x143027438 'seg' 'int'     |     `-ImplicitCastExpr 0x14302b0f8 <col:10> 'unsigned int' <LValueToRValue>     |       `-DeclRefExpr 0x14302b0d8 <col:10> 'unsigned int' lvalue Var 0x143027388 'in' 'unsigned int'     |-BinaryOperator 0x14302b318 <line:44:2, col:14> 'unsigned int' '='     | |-UnaryOperator 0x14302b2b0 <col:2, col:3> 'unsigned int' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x14302b298 <col:3> 'unsigned int *' <LValueToRValue>     | |   `-DeclRefExpr 0x14302b278 <col:3> 'unsigned int *' lvalue ParmVar 0x143026d58 'iovcount' 'unsigned int *'     | `-ImplicitCastExpr 0x14302b300 <col:14> 'unsigned int' <IntegralCast>     |   `-ImplicitCastExpr 0x14302b2e8 <col:14> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x14302b2c8 <col:14> 'int' lvalue Var 0x143027438 'seg' 'int'     |-IfStmt 0x14302b490 <line:45:2, line:46:14>     | |-CallExpr 0x14302b390 <line:45:6, col:18> 'int'     | | |-ImplicitCastExpr 0x14302b378 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x14302b338 <col:6> 'int ()' Function 0x143027928 'unlikely' 'int ()'     | | `-ImplicitCastExpr 0x14302b3b8 <col:15> 'struct vhost_log *' <LValueToRValue>     | |   `-DeclRefExpr 0x14302b358 <col:15> 'struct vhost_log *' lvalue ParmVar 0x143026f28 'log' 'struct vhost_log *'     | `-BinaryOperator 0x14302b470 <line:46:3, col:14> 'unsigned int' '='     |   |-UnaryOperator 0x14302b408 <col:3, col:4> 'unsigned int' lvalue prefix '*' cannot overflow     |   | `-ImplicitCastExpr 0x14302b3f0 <col:4> 'unsigned int *' <LValueToRValue>     |   |   `-DeclRefExpr 0x14302b3d0 <col:4> 'unsigned int *' lvalue ParmVar 0x143026fa8 'log_num' 'unsigned int *'     |   `-ImplicitCastExpr 0x14302b458 <col:14> 'unsigned int' <IntegralCast>     |     `-ImplicitCastExpr 0x14302b440 <col:14> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x14302b420 <col:14> 'int' lvalue Var 0x1430276c0 'nlogs' 'int'     |-ReturnStmt 0x14302b4e8 <line:47:2, col:9>     | `-ImplicitCastExpr 0x14302b4d0 <col:9> 'int' <LValueToRValue>     |   `-DeclRefExpr 0x14302b4b0 <col:9> 'int' lvalue Var 0x1430274f0 'headcount' 'int'     |-LabelStmt 0x14302b6b0 <line:48:1, line:49:37> 'err'     | `-CallExpr 0x14302b650 <col:2, col:37> 'int'     |   |-ImplicitCastExpr 0x14302b638 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14302b5d8 <col:2> 'int ()' Function 0x14302b520 'vhost_discard_vq_desc' 'int ()'     |   |-ImplicitCastExpr 0x14302b680 <col:24> 'struct vhost_virtqueue *' <LValueToRValue>     |   | `-DeclRefExpr 0x14302b5f8 <col:24> 'struct vhost_virtqueue *' lvalue ParmVar 0x14300e848 'vq' 'struct vhost_virtqueue *'     |   `-ImplicitCastExpr 0x14302b698 <col:28> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x14302b618 <col:28> 'int' lvalue Var 0x1430274f0 'headcount' 'int'     `-ReturnStmt 0x14302b708 <line:50:2, col:9>       `-ImplicitCastExpr 0x14302b6f0 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x14302b6d0 <col:9> 'int' lvalue Var 0x143027640 'r' 'int' ","19174":"`-FunctionDecl 0x135808348  line:1:1 parse_ipsecrequest 'int (struct xfrm_policy *, struct sadb_x_ipsecrequest *)'   |-ParmVarDecl 0x135128648 <col:20, col:40> col:40 used xp 'struct xfrm_policy *'   |-ParmVarDecl 0x135808228 <col:44, col:72> col:72 used rq 'struct sadb_x_ipsecrequest *'   `-CompoundStmt 0x137009958 <line:2:1, line:44:1>     |-DeclStmt 0x135808848 <line:3:2, col:30>     | |-RecordDecl 0x135808448 <col:2, col:9> col:9 struct net     | `-VarDecl 0x1358085b8 <col:2, col:29> col:14 used net 'struct net *' cinit     |   `-ImplicitCastExpr 0x135808818 <col:20, col:29> 'struct net *' <IntegralToPointer>     |     `-CallExpr 0x1358087d8 <col:20, col:29> 'int'     |       |-ImplicitCastExpr 0x1358087c0 <col:20> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x135808750 <col:20> 'int ()' Function 0x135808698 'xp_net' 'int ()'     |       `-ImplicitCastExpr 0x135808800 <col:27> 'struct xfrm_policy *' <LValueToRValue>     |         `-DeclRefExpr 0x135808770 <col:27> 'struct xfrm_policy *' lvalue ParmVar 0x135128648 'xp' 'struct xfrm_policy *'     |-DeclStmt 0x135808b28 <line:4:2, col:50>     | |-RecordDecl 0x135808860 <col:2, col:9> col:9 struct xfrm_tmpl     | `-VarDecl 0x1358089c8 <col:2, col:43> col:20 used t 'struct xfrm_tmpl *' cinit     |   `-BinaryOperator 0x135808af0 <col:24, col:43> '<dependent type>' contains-errors '+'     |     |-RecoveryExpr 0x135808a68 <col:24, col:28> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x135808a30 <col:24> 'struct xfrm_policy *' lvalue ParmVar 0x135128648 'xp' 'struct xfrm_policy *'     |     `-RecoveryExpr 0x135808ac8 <col:39, col:43> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x135808a90 <col:39> 'struct xfrm_policy *' lvalue ParmVar 0x135128648 'xp' 'struct xfrm_policy *'     |-DeclStmt 0x135808bc0 <line:5:2, col:10>     | `-VarDecl 0x135808b58 <col:2, col:6> col:6 used mode 'int'     |-IfStmt 0x135808d58 <line:7:2, line:8:11>     | |-BinaryOperator 0x135808c90 <line:7:6, col:21> 'int' contains-errors '>='     | | |-RecoveryExpr 0x135808c10 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x135808bd8 <col:6> 'struct xfrm_policy *' lvalue ParmVar 0x135128648 'xp' 'struct xfrm_policy *'     | | `-RecoveryExpr 0x135808c70 <col:21> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x135808d48 <line:8:3, col:11>     |   `-UnaryOperator 0x135808d30 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x135808d18 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x135808cf8 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x135808ec0 <line:10:2, line:11:11>     | |-BinaryOperator 0x135808df8 <line:10:6, col:38> 'int' contains-errors '=='     | | |-RecoveryExpr 0x135808db0 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x135808d78 <col:6> 'struct sadb_x_ipsecrequest *' lvalue ParmVar 0x135808228 'rq' 'struct sadb_x_ipsecrequest *'     | | `-IntegerLiteral 0x135808dd8 <col:38> 'int' 0     | `-ReturnStmt 0x135808eb0 <line:11:3, col:11>     |   `-UnaryOperator 0x135808e98 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x135808e80 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x135808e60 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x135808fe8 <line:13:2, col:20> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x135808f40 <col:2, col:8> '<dependent type>' contains-errors lvalue .proto     | | `-RecoveryExpr 0x135808f18 <col:2, col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x135808ee0 <col:2> 'struct xfrm_tmpl *' contains-errors lvalue Var 0x1358089c8 't' 'struct xfrm_tmpl *'     | `-RecoveryExpr 0x135808fc0 <col:16, col:20> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x135808f88 <col:16> 'struct sadb_x_ipsecrequest *' lvalue ParmVar 0x135808228 'rq' 'struct sadb_x_ipsecrequest *'     |-IfStmt 0x1360082e8 <line:14:2, line:15:11>     | |-BinaryOperator 0x136008220 <line:14:6, col:66> 'int' contains-errors '<'     | | |-ParenExpr 0x1358091d0 <col:6, col:62> 'int' contains-errors     | | | `-BinaryOperator 0x1358091b0 <col:7, col:61> 'int' contains-errors '='     | | |   |-DeclRefExpr 0x135809008 <col:7> 'int' lvalue Var 0x135808b58 'mode' 'int'     | | |   `-CallExpr 0x135809188 <col:14, col:61> '<dependent type>' contains-errors     | | |     |-DeclRefExpr 0x135809108 <col:14> 'int ()' Function 0x135809050 'pfkey_mode_to_xfrm' 'int ()'     | | |     `-RecoveryExpr 0x135809160 <col:33, col:37> '<dependent type>' contains-errors lvalue     | | |       `-DeclRefExpr 0x135809128 <col:33> 'struct sadb_x_ipsecrequest *' lvalue ParmVar 0x135808228 'rq' 'struct sadb_x_ipsecrequest *'     | | `-IntegerLiteral 0x136008200 <col:66> 'int' 0     | `-ReturnStmt 0x1360082d8 <line:15:3, col:11>     |   `-UnaryOperator 0x1360082c0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x1360082a8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x136008288 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x136008388 <line:16:2, col:12> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x136008340 <col:2, col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x136008308 <col:2> 'struct xfrm_tmpl *' contains-errors lvalue Var 0x1358089c8 't' 'struct xfrm_tmpl *'     | `-DeclRefExpr 0x136008368 <col:12> 'int' lvalue Var 0x135808b58 'mode' 'int'     |-IfStmt 0x136008ae0 <line:17:2, line:25:2> has_else     | |-BinaryOperator 0x136008460 <line:17:6, col:39> 'int' contains-errors '=='     | | |-RecoveryExpr 0x1360083e0 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x1360083a8 <col:6> 'struct sadb_x_ipsecrequest *' lvalue ParmVar 0x135808228 'rq' 'struct sadb_x_ipsecrequest *'     | | `-RecoveryExpr 0x136008440 <col:39> '<dependent type>' contains-errors lvalue     | |-BinaryOperator 0x136008500 <line:18:3, col:17> '<dependent type>' contains-errors '='     | | |-RecoveryExpr 0x1360084b8 <col:3, col:6> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x136008480 <col:3> 'struct xfrm_tmpl *' contains-errors lvalue Var 0x1358089c8 't' 'struct xfrm_tmpl *'     | | `-IntegerLiteral 0x1360084e0 <col:17> 'int' 1     | `-IfStmt 0x136008ac0 <line:19:7, line:25:2>     |   |-RecoveryExpr 0x136008580 <line:19:11, col:44> '_Bool' contains-errors     |   `-CompoundStmt 0x136008aa0 <col:64, line:25:2>     |     |-BinaryOperator 0x136008660 <line:20:3, col:18> '<dependent type>' contains-errors '='     |     | |-RecoveryExpr 0x1360085d8 <col:3, col:6> '<dependent type>' contains-errors lvalue     |     | | `-DeclRefExpr 0x1360085a0 <col:3> 'struct xfrm_tmpl *' contains-errors lvalue Var 0x1358089c8 't' 'struct xfrm_tmpl *'     |     | `-RecoveryExpr 0x136008638 <col:14, col:18> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x136008600 <col:14> 'struct sadb_x_ipsecrequest *' lvalue ParmVar 0x135808228 'rq' 'struct sadb_x_ipsecrequest *'     |     `-IfStmt 0x1360087a0 <line:21:3, line:22:15>     |       |-RecoveryExpr 0x1360086e0 <line:21:7, col:18> '_Bool' contains-errors     |       `-BinaryOperator 0x136008780 <line:22:4, col:15> '<dependent type>' contains-errors '='     |         |-RecoveryExpr 0x136008738 <col:4, col:7> '<dependent type>' contains-errors lvalue     |         | `-DeclRefExpr 0x136008700 <col:4> 'struct xfrm_tmpl *' contains-errors lvalue Var 0x1358089c8 't' 'struct xfrm_tmpl *'     |         `-IntegerLiteral 0x136008760 <col:15> 'int' 0     |-IfStmt 0x1370097e0 <line:28:2, line:38:25> has_else     | |-RecoveryExpr 0x136008b70 <line:28:6, col:17> '_Bool' contains-errors     | |-CompoundStmt 0x1370096e0 <col:35, line:37:2>     | | |-DeclStmt 0x136008c10 <line:29:3, col:10>     | | | `-VarDecl 0x136008ba8 <col:3, col:7> col:7 used err 'int'     | | `-IfStmt 0x1370096c0 <line:35:3, line:36:11>     | |   |-ImplicitCastExpr 0x137009660 <line:35:7> 'int' <LValueToRValue>     | |   | `-DeclRefExpr 0x137009640 <col:7> 'int' lvalue Var 0x136008ba8 'err' 'int'     | |   `-ReturnStmt 0x1370096b0 <line:36:4, col:11>     | |     `-ImplicitCastExpr 0x137009698 <col:11> 'int' <LValueToRValue>     | |       `-DeclRefExpr 0x137009678 <col:11> 'int' lvalue Var 0x136008ba8 'err' 'int'     | `-BinaryOperator 0x1370097c0 <line:38:3, col:25> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x137009738 <col:3, col:6> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x137009700 <col:3> 'struct xfrm_tmpl *' contains-errors lvalue Var 0x1358089c8 't' 'struct xfrm_tmpl *'     |   `-RecoveryExpr 0x137009798 <col:21, col:25> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x137009760 <col:21> 'struct xfrm_policy *' lvalue ParmVar 0x135128648 'xp' 'struct xfrm_policy *'     |-BinaryOperator 0x137009890 <line:41:2, col:15> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x137009848 <col:2, col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x137009810 <col:2> 'struct xfrm_tmpl *' contains-errors lvalue Var 0x1358089c8 't' 'struct xfrm_tmpl *'     | `-IntegerLiteral 0x137009870 <col:15> 'int' 1     |-UnaryOperator 0x137009910 <line:42:2, col:13> '<dependent type>' contains-errors postfix '++' cannot overflow     | `-RecoveryExpr 0x1370098e8 <col:2, col:6> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1370098b0 <col:2> 'struct xfrm_policy *' lvalue ParmVar 0x135128648 'xp' 'struct xfrm_policy *'     `-ReturnStmt 0x137009948 <line:43:2, col:9>       `-IntegerLiteral 0x137009928 <col:9> 'int' 0 ","20032":"`-FunctionDecl 0x13300dd38  line:1:14 invalid end 'int ()'   `-CompoundStmt 0x13300e050 <col:20, line:3:5>     `-ReturnStmt 0x13300e040 <line:2:7, col:27>       `-BinaryOperator 0x13300e020 <col:14, col:27> '<dependent type>' contains-errors '+'         |-RecoveryExpr 0x13300dfc8 <col:14> '<dependent type>' contains-errors lvalue         `-CallExpr 0x13300e000 <col:22, col:27> 'int'           `-ImplicitCastExpr 0x13300dfe8 <col:22> 'int (*)()' <FunctionToPointerDecay>             `-DeclRefExpr 0x13300df20 <col:22> 'int ()' Function 0x13300de68 'size' 'int ()' ","19614":"`-FunctionDecl 0x1429137f8  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x1429138f8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x142913960 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x1429139c8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1429138a0 <<invalid sloc>> Implicit 900 ","19936":"`-FunctionDecl 0x12b017368  col:4 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x12b017468 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x12b017410 <<invalid sloc>> Implicit 873 ","19832":"`-FunctionDecl 0x15b940c98  line:1:23 dcn10_create_resource_pool 'struct resource_pool *(const struct dc_init_data *, struct dc *)'   |-ParmVarDecl 0x15b9286e8 <line:2:3, col:30> col:30 used init_data 'const struct dc_init_data *'   |-ParmVarDecl 0x15b940ac8 <line:3:3, col:14> col:14 used dc 'struct dc *'   `-CompoundStmt 0x15b941640 <line:4:1, line:16:1>     |-DeclStmt 0x15b941140 <line:5:2, line:6:58>     | |-RecordDecl 0x15b940d98 <line:5:2, col:9> col:9 struct dcn10_resource_pool     | `-VarDecl 0x15b940f08 <col:2, col:30> col:30 used pool 'struct dcn10_resource_pool *'     |-IfStmt 0x15b9411f0 <line:8:2, line:9:10>     | |-UnaryOperator 0x15b941190 <line:8:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x15b941178 <col:7> 'struct dcn10_resource_pool *' <LValueToRValue>     | |   `-DeclRefExpr 0x15b941158 <col:7> 'struct dcn10_resource_pool *' lvalue Var 0x15b940f08 'pool' 'struct dcn10_resource_pool *'     | `-ReturnStmt 0x15b9411e0 <line:9:3, col:10>     |   `-RecoveryExpr 0x15b9411c0 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15b941470 <line:11:2, line:12:17>     | |-CallExpr 0x15b9413b0 <line:11:6, col:54> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x15b9412f0 <col:6> 'int ()' Function 0x15b941238 'construct' 'int ()'     | | |-RecoveryExpr 0x15b941348 <col:16, col:27> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x15b941310 <col:16> 'const struct dc_init_data *' lvalue ParmVar 0x15b9286e8 'init_data' 'const struct dc_init_data *'     | | |-DeclRefExpr 0x15b941370 <col:46> 'struct dc *' lvalue ParmVar 0x15b940ac8 'dc' 'struct dc *'     | | `-DeclRefExpr 0x15b941390 <col:50> 'struct dcn10_resource_pool *' lvalue Var 0x15b940f08 'pool' 'struct dcn10_resource_pool *'     | `-ReturnStmt 0x15b941460 <line:12:3, col:17>     |   `-UnaryOperator 0x15b941448 <col:10, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x15b941420 <col:11, col:17> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x15b9413e8 <col:11> 'struct dcn10_resource_pool *' lvalue Var 0x15b940f08 'pool' 'struct dcn10_resource_pool *'     |-CallExpr 0x15b9415d8 <line:14:2, col:20> 'int'     | `-ImplicitCastExpr 0x15b9415c0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x15b941570 <col:2> 'int ()' Function 0x15b9414b8 'BREAK_TO_DEBUGGER' 'int ()'     `-ReturnStmt 0x15b941630 <line:15:2, col:9>       `-RecoveryExpr 0x15b941610 <col:9> '<dependent type>' contains-errors lvalue ","19249":"`-FunctionDecl 0x13a8094a8  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x13a8095a8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x13a809610 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x13a809678 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x13a809550 <<invalid sloc>> Implicit 882 ","19273":"`-FunctionDecl 0x132128750  line:1:13 i40e_free_macvlan_channels 'void (struct i40e_vsi *)' static   |-ParmVarDecl 0x132128648 <col:40, col:57> col:57 used vsi 'struct i40e_vsi *'   `-CompoundStmt 0x13280a160 <line:2:1, line:38:1>     |-DeclStmt 0x132140cd0 <line:3:2, col:34>     | |-RecordDecl 0x132140a48 <col:2, col:9> col:9 struct i40e_channel     | |-VarDecl 0x132140bb8 <col:2, col:23> col:23 used ch 'struct i40e_channel *'     | `-VarDecl 0x132140c48 <col:2, col:28> col:28 used ch_tmp 'struct i40e_channel *'     |-DeclStmt 0x132140d68 <line:4:2, col:9>     | `-VarDecl 0x132140d00 <col:2, col:6> col:6 used ret 'int'     |-IfStmt 0x132140f80 <line:6:2, line:7:3>     | |-CallExpr 0x132140f48 <line:6:6, col:35> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x132140eb0 <col:6> 'int ()' Function 0x132140df8 'list_empty' 'int ()'     | | `-UnaryOperator 0x132140f30 <col:17, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x132140f08 <col:18, col:23> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x132140ed0 <col:18> 'struct i40e_vsi *' lvalue ParmVar 0x132128648 'vsi' 'struct i40e_vsi *'     | `-ReturnStmt 0x132140f70 <line:7:3>     |-CallExpr 0x1321411d0 <line:9:2, col:63> '<dependent type>' contains-errors     | |-DeclRefExpr 0x132141080 <col:2> 'int ()' Function 0x132140fc8 'list_for_each_entry_safe' 'int ()'     | |-DeclRefExpr 0x1321410a0 <col:27> 'struct i40e_channel *' lvalue Var 0x132140bb8 'ch' 'struct i40e_channel *'     | |-DeclRefExpr 0x1321410c0 <col:31> 'struct i40e_channel *' lvalue Var 0x132140c48 'ch_tmp' 'struct i40e_channel *'     | |-UnaryOperator 0x132141140 <col:39, col:45> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x132141118 <col:40, col:45> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1321410e0 <col:40> 'struct i40e_vsi *' lvalue ParmVar 0x132128648 'vsi' 'struct i40e_vsi *'     | `-RecoveryExpr 0x1321411b0 <col:59> '<dependent type>' contains-errors lvalue     |-CompoundStmt 0x13280a078 <col:65, line:36:2>     | |-DeclStmt 0x132141300 <line:10:3, col:30>     | | `-VarDecl 0x132141298 <col:3, col:20> col:20 used parent_vsi 'struct i40e_vsi *'     | |-IfStmt 0x132809598 <line:12:3, line:19:3>     | | |-CallExpr 0x132141488 <line:12:7, col:33> 'int'     | | | |-ImplicitCastExpr 0x132141470 <col:7> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x1321413f8 <col:7> 'int ()' Function 0x132141340 'i40e_is_channel_macvlan' 'int ()'     | | | `-ImplicitCastExpr 0x1321414b0 <col:31> 'struct i40e_channel *' <LValueToRValue>     | | |   `-DeclRefExpr 0x132141418 <col:31> 'struct i40e_channel *' lvalue Var 0x132140bb8 'ch' 'struct i40e_channel *'     | | `-CompoundStmt 0x132809558 <col:36, line:19:3>     | |   |-CallExpr 0x132141620 <line:13:4, col:31> 'int'     | |   | |-ImplicitCastExpr 0x132141608 <col:4> 'int (*)()' <FunctionToPointerDecay>     | |   | | `-DeclRefExpr 0x1321415a8 <col:4> 'int ()' Function 0x1321414f0 'i40e_reset_ch_rings' 'int ()'     | |   | |-ImplicitCastExpr 0x132141650 <col:24> 'struct i40e_vsi *' <LValueToRValue>     | |   | | `-DeclRefExpr 0x1321415c8 <col:24> 'struct i40e_vsi *' lvalue ParmVar 0x132128648 'vsi' 'struct i40e_vsi *'     | |   | `-ImplicitCastExpr 0x132141668 <col:29> 'struct i40e_channel *' <LValueToRValue>     | |   |   `-DeclRefExpr 0x1321415e8 <col:29> 'struct i40e_channel *' lvalue Var 0x132140bb8 'ch' 'struct i40e_channel *'     | |   |-CallExpr 0x132141888 <line:14:4, col:47> '<dependent type>' contains-errors     | |   | |-DeclRefExpr 0x132141760 <col:4> 'int ()' Function 0x1321416a8 'clear_bit' 'int ()'     | |   | |-CXXDependentScopeMemberExpr 0x1321417e0 <col:14, col:23> '<dependent type>' contains-errors lvalue ->bit_no     | |   | | `-RecoveryExpr 0x1321417b8 <col:14, col:18> '<dependent type>' contains-errors lvalue     | |   | |   `-DeclRefExpr 0x132141780 <col:14> 'struct i40e_channel *' lvalue Var 0x132140bb8 'ch' 'struct i40e_channel *'     | |   | `-RecoveryExpr 0x132141860 <col:31, col:36> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x132141828 <col:31> 'struct i40e_vsi *' lvalue ParmVar 0x132128648 'vsi' 'struct i40e_vsi *'     | |   |-CallExpr 0x1328090d0 <line:15:4, col:57> '<dependent type>' contains-errors     | |   | |-DeclRefExpr 0x132141998 <col:4> 'int ()' Function 0x1321418e0 'netdev_unbind_sb_channel' 'int ()'     | |   | |-RecoveryExpr 0x132809000 <col:29, col:34> '<dependent type>' contains-errors lvalue     | |   | | `-DeclRefExpr 0x1321419b8 <col:29> 'struct i40e_vsi *' lvalue ParmVar 0x132128648 'vsi' 'struct i40e_vsi *'     | |   | `-CXXDependentScopeMemberExpr 0x132809088 <col:42, col:51> '<dependent type>' contains-errors lvalue ->netdev     | |   |   `-RecoveryExpr 0x132809060 <col:42, col:46> '<dependent type>' contains-errors lvalue     | |   |     `-DeclRefExpr 0x132809028 <col:42> 'struct i40e_channel *' lvalue Var 0x132140bb8 'ch' 'struct i40e_channel *'     | |   |-CallExpr 0x1328092c8 <line:16:4, col:44> '<dependent type>' contains-errors     | |   | |-DeclRefExpr 0x1328091e0 <col:4> 'int ()' Function 0x132809128 'netdev_set_sb_channel' 'int ()'     | |   | |-CXXDependentScopeMemberExpr 0x132809260 <col:26, col:35> '<dependent type>' contains-errors lvalue ->netdev     | |   | | `-RecoveryExpr 0x132809238 <col:26, col:30> '<dependent type>' contains-errors lvalue     | |   | |   `-DeclRefExpr 0x132809200 <col:26> 'struct i40e_channel *' lvalue Var 0x132140bb8 'ch' 'struct i40e_channel *'     | |   | `-IntegerLiteral 0x1328092a8 <col:43> 'int' 0     | |   |-CallExpr 0x132809458 <line:17:4, col:17> '<dependent type>' contains-errors     | |   | |-DeclRefExpr 0x1328093d8 <col:4> 'int ()' Function 0x132809320 'kfree' 'int ()'     | |   | `-RecoveryExpr 0x132809430 <col:10, col:14> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x1328093f8 <col:10> 'struct i40e_channel *' lvalue Var 0x132140bb8 'ch' 'struct i40e_channel *'     | |   `-BinaryOperator 0x132809538 <line:18:4, col:14> '<dependent type>' contains-errors '='     | |     |-RecoveryExpr 0x1328094b8 <col:4, col:8> '<dependent type>' contains-errors lvalue     | |     | `-DeclRefExpr 0x132809480 <col:4> 'struct i40e_channel *' lvalue Var 0x132140bb8 'ch' 'struct i40e_channel *'     | |     `-RecoveryExpr 0x132809518 <col:14> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x132809730 <line:21:3, col:21> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x132809698 <col:3> 'int ()' Function 0x1328095e0 'list_del' 'int ()'     | | `-UnaryOperator 0x132809718 <col:12, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x1328096f0 <col:13, col:17> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x1328096b8 <col:13> 'struct i40e_channel *' lvalue Var 0x132140bb8 'ch' 'struct i40e_channel *'     | |-BinaryOperator 0x1328097d8 <line:22:3, col:20> 'struct i40e_vsi *' contains-errors '='     | | |-DeclRefExpr 0x132809758 <col:3> 'struct i40e_vsi *' lvalue Var 0x132141298 'parent_vsi' 'struct i40e_vsi *'     | | `-RecoveryExpr 0x1328097b0 <col:16, col:20> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x132809778 <col:16> 'struct i40e_channel *' lvalue Var 0x132140bb8 'ch' 'struct i40e_channel *'     | |-IfStmt 0x1328099a8 <line:23:3, line:26:3>     | | |-BinaryOperator 0x1328098d8 <line:23:7, col:27> 'int' contains-errors '||'     | | | |-UnaryOperator 0x132809830 <col:7, col:8> 'int' prefix '!' cannot overflow     | | | | `-ImplicitCastExpr 0x132809818 <col:8> 'struct i40e_vsi *' <LValueToRValue>     | | | |   `-DeclRefExpr 0x1328097f8 <col:8> 'struct i40e_vsi *' lvalue Var 0x132141298 'parent_vsi' 'struct i40e_vsi *'     | | | `-UnaryOperator 0x1328098c0 <col:22, col:27> '<dependent type>' contains-errors prefix '!' cannot overflow     | | |   `-ImplicitCastExpr 0x1328098a8 <col:23, col:27> '<dependent type>' contains-errors <LValueToRValue>     | | |     `-RecoveryExpr 0x132809880 <col:23, col:27> '<dependent type>' contains-errors lvalue     | | |       `-DeclRefExpr 0x132809848 <col:23> 'struct i40e_channel *' lvalue Var 0x132140bb8 'ch' 'struct i40e_channel *'     | | `-CompoundStmt 0x132809990 <col:40, line:26:3>     | |   `-CallExpr 0x132809950 <line:24:4, col:12> 'int'     | |     |-ImplicitCastExpr 0x132809938 <col:4> 'int (*)()' <FunctionToPointerDecay>     | |     | `-DeclRefExpr 0x1328098f8 <col:4> 'int ()' Function 0x132809320 'kfree' 'int ()'     | |     `-ImplicitCastExpr 0x132809978 <col:10> 'struct i40e_channel *' <LValueToRValue>     | |       `-DeclRefExpr 0x132809918 <col:10> 'struct i40e_channel *' lvalue Var 0x132140bb8 'ch' 'struct i40e_channel *'     | |-IfStmt 0x132809fb0 <line:31:3, line:34:31>     | | |-ImplicitCastExpr 0x132809c28 <line:31:7> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x132809c08 <col:7> 'int' lvalue Var 0x132140d00 'ret' 'int'     | | `-CallExpr 0x132809f70 <line:32:4, line:34:31> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x132809d20 <line:32:4> 'int ()' Function 0x132809c68 'dev_err' 'int ()'     | |   |-UnaryOperator 0x132809e30 <col:12, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   | `-CXXDependentScopeMemberExpr 0x132809de8 <col:13, col:30> '<dependent type>' contains-errors lvalue ->dev     | |   |   `-CXXDependentScopeMemberExpr 0x132809da0 <col:13, col:24> '<dependent type>' contains-errors lvalue ->pdev     | |   |     `-RecoveryExpr 0x132809d78 <col:13, col:18> '<dependent type>' contains-errors lvalue     | |   |       `-DeclRefExpr 0x132809d40 <col:13> 'struct i40e_vsi *' lvalue ParmVar 0x132128648 'vsi' 'struct i40e_vsi *'     | |   |-StringLiteral 0x132809e90 <line:33:5> 'char[4]' lvalue \"STR\"     | |   |-RecoveryExpr 0x132809ee8 <line:34:5, col:9> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x132809eb0 <col:5> 'struct i40e_channel *' lvalue Var 0x132140bb8 'ch' 'struct i40e_channel *'     | |   `-RecoveryExpr 0x132809f48 <col:15, col:27> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x132809f10 <col:15> 'struct i40e_vsi *' lvalue Var 0x132141298 'parent_vsi' 'struct i40e_vsi *'     | `-CallExpr 0x13280a038 <line:35:3, col:11> 'int'     |   |-ImplicitCastExpr 0x13280a020 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x132809fd0 <col:3> 'int ()' Function 0x132809320 'kfree' 'int ()'     |   `-ImplicitCastExpr 0x13280a060 <col:9> 'struct i40e_channel *' <LValueToRValue>     |     `-DeclRefExpr 0x13280a000 <col:9> 'struct i40e_channel *' lvalue Var 0x132140bb8 'ch' 'struct i40e_channel *'     `-BinaryOperator 0x13280a140 <line:37:2, col:21> '<dependent type>' contains-errors '='       |-RecoveryExpr 0x13280a0f8 <col:2, col:7> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x13280a0c0 <col:2> 'struct i40e_vsi *' lvalue ParmVar 0x132128648 'vsi' 'struct i40e_vsi *'       `-IntegerLiteral 0x13280a120 <col:21> 'int' 0 ","19853":"`-FunctionDecl 0x1449282f8  line:1:12 chap_string_to_hex 'int (unsigned char *, unsigned char *, int)' static   |-ParmVarDecl 0x144928108 <col:31, col:46> col:46 used dst 'unsigned char *'   |-ParmVarDecl 0x144928188 <col:51, col:66> col:66 used src 'unsigned char *'   |-ParmVarDecl 0x144928208 <col:71, col:75> col:75 used len 'int'   `-CompoundStmt 0x144941d70 <line:2:1, line:11:1>     |-DeclStmt 0x144928738 <line:3:2, col:34>     | |-VarDecl 0x144928418 <col:2, col:29> col:6 used j 'int' cinit     | | `-CallExpr 0x144928658 <col:10, col:29> 'int'     | |   |-ImplicitCastExpr 0x144928640 <col:10> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x1449285b0 <col:10> 'int ()' Function 0x1449284f8 'DIV_ROUND_UP' 'int ()'     | |   |-ImplicitCastExpr 0x144928688 <col:23> 'int' <LValueToRValue>     | |   | `-DeclRefExpr 0x1449285d0 <col:23> 'int' lvalue ParmVar 0x144928208 'len' 'int'     | |   `-IntegerLiteral 0x1449285f0 <col:28> 'int' 2     | `-VarDecl 0x1449286b8 <col:2, col:32> col:32 used rc 'int'     |-BinaryOperator 0x1449419d0 <line:5:2, col:26> 'int' '='     | |-DeclRefExpr 0x144928750 <col:2> 'int' lvalue Var 0x1449286b8 'rc' 'int'     | `-CallExpr 0x144941950 <col:7, col:26> 'int'     |   |-ImplicitCastExpr 0x144941938 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1449418b8 <col:7> 'int ()' Function 0x144941800 'hex2bin' 'int ()'     |   |-ImplicitCastExpr 0x144941988 <col:15> 'unsigned char *' <LValueToRValue>     |   | `-DeclRefExpr 0x1449418d8 <col:15> 'unsigned char *' lvalue ParmVar 0x144928108 'dst' 'unsigned char *'     |   |-ImplicitCastExpr 0x1449419a0 <col:20> 'unsigned char *' <LValueToRValue>     |   | `-DeclRefExpr 0x1449418f8 <col:20> 'unsigned char *' lvalue ParmVar 0x144928188 'src' 'unsigned char *'     |   `-ImplicitCastExpr 0x1449419b8 <col:25> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x144941918 <col:25> 'int' lvalue Var 0x144928418 'j' 'int'     |-IfStmt 0x144941c28 <line:6:2, line:7:17>     | |-BinaryOperator 0x144941a48 <line:6:6, col:11> 'int' '<'     | | |-ImplicitCastExpr 0x144941a30 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x1449419f0 <col:6> 'int' lvalue Var 0x1449286b8 'rc' 'int'     | | `-IntegerLiteral 0x144941a10 <col:11> 'int' 0     | `-CallExpr 0x144941be8 <line:7:3, col:17> 'int'     |   |-ImplicitCastExpr 0x144941bd0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x144941b48 <col:3> 'int ()' Function 0x144941a90 'pr_debug' 'int ()'     |   `-ImplicitCastExpr 0x144941c10 <col:12> 'char *' <ArrayToPointerDecay>     |     `-StringLiteral 0x144941bb0 <col:12> 'char[4]' lvalue \"STR\"     |-BinaryOperator 0x144941d08 <line:9:2, col:11> 'unsigned char' '='     | |-ArraySubscriptExpr 0x144941cb8 <col:2, col:7> 'unsigned char' lvalue     | | |-ImplicitCastExpr 0x144941c88 <col:2> 'unsigned char *' <LValueToRValue>     | | | `-DeclRefExpr 0x144941c48 <col:2> 'unsigned char *' lvalue ParmVar 0x144928108 'dst' 'unsigned char *'     | | `-ImplicitCastExpr 0x144941ca0 <col:6> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x144941c68 <col:6> 'int' lvalue Var 0x144928418 'j' 'int'     | `-ImplicitCastExpr 0x144941cf0 <col:11> 'unsigned char' <IntegralCast>     |   `-CharacterLiteral 0x144941cd8 <col:11> 'int' 0     `-ReturnStmt 0x144941d60 <line:10:2, col:9>       `-ImplicitCastExpr 0x144941d48 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x144941d28 <col:9> 'int' lvalue Var 0x144928418 'j' 'int' ","20026":"`-FunctionDecl 0x11f143698  col:2 implicit used va_end 'void (__builtin_va_list &)' extern   |-ParmVarDecl 0x11f143798 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'   |-BuiltinAttr 0x11f143740 <<invalid sloc>> Implicit 865   `-NoThrowAttr 0x11f143e08 <col:2> Implicit ","19721":"`-FunctionDecl 0x125928750  line:1:13 inotify_free_group_priv 'void (struct fsnotify_group *)' static   |-ParmVarDecl 0x125928648 <col:37, col:60> col:60 used group 'struct fsnotify_group *'   `-CompoundStmt 0x1259412b8 <line:2:1, line:8:1>     |-CallExpr 0x125940ce0 <line:4:2, col:60> '<dependent type>' contains-errors     | |-DeclRefExpr 0x125940b70 <col:2> 'int ()' Function 0x125940ab8 'idr_for_each' 'int ()'     | |-UnaryOperator 0x125940c38 <col:15, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x125940bf0 <col:16, col:36> '<dependent type>' contains-errors lvalue .idr     | |   `-RecoveryExpr 0x125940bc8 <col:16, col:23> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x125940b90 <col:16> 'struct fsnotify_group *' lvalue ParmVar 0x125928648 'group' 'struct fsnotify_group *'     | |-RecoveryExpr 0x125940cc0 <col:41> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x125940c68 <col:55> 'struct fsnotify_group *' lvalue ParmVar 0x125928648 'group' 'struct fsnotify_group *'     |-CallExpr 0x125940ed8 <line:5:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x125940df8 <col:2> 'int ()' Function 0x125940d40 'idr_remove_all' 'int ()'     | `-UnaryOperator 0x125940ec0 <col:17, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x125940e78 <col:18, col:38> '<dependent type>' contains-errors lvalue .idr     |     `-RecoveryExpr 0x125940e50 <col:18, col:25> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x125940e18 <col:18> 'struct fsnotify_group *' lvalue ParmVar 0x125928648 'group' 'struct fsnotify_group *'     |-CallExpr 0x1259410c0 <line:6:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x125940fe0 <col:2> 'int ()' Function 0x125940f28 'idr_destroy' 'int ()'     | `-UnaryOperator 0x1259410a8 <col:14, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x125941060 <col:15, col:35> '<dependent type>' contains-errors lvalue .idr     |     `-RecoveryExpr 0x125941038 <col:15, col:22> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x125941000 <col:15> 'struct fsnotify_group *' lvalue ParmVar 0x125928648 'group' 'struct fsnotify_group *'     `-CallExpr 0x125941290 <line:7:2, col:35> '<dependent type>' contains-errors       |-DeclRefExpr 0x1259411c8 <col:2> 'int ()' Function 0x125941110 'free_uid' 'int ()'       `-CXXDependentScopeMemberExpr 0x125941248 <col:11, col:31> '<dependent type>' contains-errors lvalue .user         `-RecoveryExpr 0x125941220 <col:11, col:18> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x1259411e8 <col:11> 'struct fsnotify_group *' lvalue ParmVar 0x125928648 'group' 'struct fsnotify_group *' ","19719":"`-FunctionDecl 0x1430e8b58  line:1:1 invalid TPMI_SH_HMAC_Unmarshal 'int (int *, int **, int *)'   |-ParmVarDecl 0x1430e8928 <col:24, col:38> col:38 invalid target 'int *'   |-ParmVarDecl 0x1430e89e0 <col:46, col:53> col:53 invalid buffer 'int **'   |-ParmVarDecl 0x1430e8a60 <col:61, col:68> col:68 invalid size 'int *'   `-CompoundStmt 0x1431020c8 <line:2:1, line:15:1>     |-IfStmt 0x1430e8ee8 <line:5:5, line:7:5>     | |-BinaryOperator 0x1430e8ca8 <line:5:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x1430e8c68 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1430e8c88 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1430e8ed8 <col:31, line:7:5>     |-IfStmt 0x143102060 <line:8:5, line:13:5>     | |-BinaryOperator 0x1430e8f98 <line:8:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x1430e8f58 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1430e8f78 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x143102048 <col:31, line:13:5>     |   `-IfStmt 0x143102028 <line:10:2, line:12:2>     |     |-RecoveryExpr 0x1430e8fd0 <line:10:6> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x143102018 <col:24, line:12:2>     `-ReturnStmt 0x1431020b8 <line:14:5, col:12>       `-RecoveryExpr 0x143102098 <col:12> '<dependent type>' contains-errors lvalue ","19898":"`-FunctionDecl 0x123128288  line:1:14 invalid Prepare 'int (int *, int *)'   |-ParmVarDecl 0x123128128 <col:22, col:37> col:37 invalid context 'int *'   |-ParmVarDecl 0x1231281a8 <col:46, col:58> col:58 invalid node 'int *'   `-CompoundStmt 0x1231426b0 <col:64, line:23:1>     |-CallExpr 0x123128648 <line:2:3, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1231284a0 <col:3> 'int ()' Function 0x1231283e8 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x1231284c0 <col:21> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x123128600 <col:30, col:44> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1231285c0 <col:30> 'int ()' Function 0x123128508 'NumInputs' 'int ()'     | | `-RecoveryExpr 0x1231285e0 <col:40> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x123128628 <col:47> 'int' 1     |-CallExpr 0x123141848 <line:3:3, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x123128680 <col:3> 'int ()' Function 0x1231283e8 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x1231286a0 <col:21> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x123141800 <col:30, col:45> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1231287a0 <col:30> 'int ()' Function 0x1231286e8 'NumOutputs' 'int ()'     | | `-RecoveryExpr 0x1231287c0 <col:41> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x123141828 <col:48> 'int' 1     |-DeclStmt 0x123141a90 <line:4:3, col:68>     | `-VarDecl 0x123141898 <col:3, col:23> col:23 invalid input 'const int *'     |-DeclStmt 0x123141c70 <line:6:3, col:41>     | `-VarDecl 0x123141b40 <col:3, col:37> col:7 used input_dims_size 'int' cinit     |   `-CXXDependentScopeMemberExpr 0x123141c28 <col:25, col:37> '<dependent type>' contains-errors lvalue ->size     |     `-RecoveryExpr 0x123141c08 <col:25> '<dependent type>' contains-errors lvalue     |-CallExpr 0x123141e20 <line:7:3, col:47> '<dependent type>' contains-errors     | |-DeclRefExpr 0x123141d68 <col:3> 'int ()' Function 0x123141cb0 'TF_LITE_ENSURE' 'int ()'     | |-RecoveryExpr 0x123141d88 <col:18> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x123141e00 <col:27, col:46> 'int' contains-errors '>='     |   |-ImplicitCastExpr 0x123141de8 <col:27> 'int' contains-errors <LValueToRValue>     |   | `-DeclRefExpr 0x123141da8 <col:27> 'int' contains-errors lvalue Var 0x123141b40 'input_dims_size' 'int'     |   `-IntegerLiteral 0x123141dc8 <col:46> 'int' 1     `-ForStmt 0x1231423d0 <line:12:3, line:14:3>       |-DeclStmt 0x1231422a0 <line:12:8, col:17>       | `-VarDecl 0x123142218 <col:8, col:16> col:12 used i 'int' cinit       |   `-IntegerLiteral 0x123142280 <col:16> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x123142328 <col:19, col:23> 'int' contains-errors '<'       | |-ImplicitCastExpr 0x1231422f8 <col:19> 'int' <LValueToRValue>       | | `-DeclRefExpr 0x1231422b8 <col:19> 'int' lvalue Var 0x123142218 'i' 'int'       | `-ImplicitCastExpr 0x123142310 <col:23> 'int' contains-errors <LValueToRValue>       |   `-DeclRefExpr 0x1231422d8 <col:23> 'int' contains-errors lvalue Var 0x123141b40 'input_dims_size' 'int'       |-UnaryOperator 0x123142368 <col:40, col:41> 'int' postfix '++'       | `-DeclRefExpr 0x123142348 <col:40> 'int' lvalue Var 0x123142218 'i' 'int'       `-CompoundStmt 0x1231423c0 <col:45, line:14:3> ","19868":"`-FunctionDecl 0x14a9286d8  line:1:1 invalid MODULE_ENTRY 'int (int)'   |-ParmVarDecl 0x14a9281a8 <col:15> col:15 fill_vtable 'int'   `-CompoundStmt 0x14b808800 <line:2:1, line:8:1> ","20172":"`-FunctionDecl 0x13c026ce8  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x13c026de8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x13c026e50 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x13c026eb8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x13c026d90 <<invalid sloc>> Implicit 900 ","19289":"`-FunctionDecl 0x12c923c80  col:13 implicit used printf 'int (const char *, ...)' extern   |-ParmVarDecl 0x12c923d80 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x12c923d28 <<invalid sloc>> Implicit 903   `-FormatAttr 0x12c923df0 <col:13> Implicit printf 1 2 ","19506":"`-FunctionDecl 0x1548effa8  line:1:1 g_file_and_info_free 'int (void *)'   |-ParmVarDecl 0x1548efed8 <col:23, col:29> col:29 used g_file_and_info 'void *'   `-CompoundStmt 0x1548f0470 <line:2:1, line:6:1>     |-CallExpr 0x1548f0310 <line:4:3, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1548f0200 <col:3> 'int ()' Function 0x1548f0148 'g_object_unref' 'int ()'     | `-CXXDependentScopeMemberExpr 0x1548f02c8 <col:19, col:23> '<dependent type>' contains-errors lvalue ->file     |   `-RecoveryExpr 0x1548f02a8 <col:19> '<dependent type>' contains-errors lvalue     `-CallExpr 0x1548f0448 <line:5:3, col:27> '<dependent type>' contains-errors       |-DeclRefExpr 0x1548f0338 <col:3> 'int ()' Function 0x1548f0148 'g_object_unref' 'int ()'       `-CXXDependentScopeMemberExpr 0x1548f0400 <col:19, col:23> '<dependent type>' contains-errors lvalue ->info         `-RecoveryExpr 0x1548f03e0 <col:19> '<dependent type>' contains-errors lvalue ","19239":"`-FunctionDecl 0x1269283a8  line:1:5 invalid regexec 'int (int *, const char *, int *, int)'   |-ParmVarDecl 0x126928128 <col:13, col:21> col:21 invalid prog 'int *'   |-ParmVarDecl 0x1269281a8 <col:27, col:39> col:39 used sp 'const char *'   |-ParmVarDecl 0x126928228 <col:43, col:50> col:50 referenced invalid sub 'int *'   |-ParmVarDecl 0x1269282a8 <col:55, col:59> col:59 used eflags 'int'   `-CompoundStmt 0x130009510 <line:2:1, line:14:1>     |-DeclStmt 0x1269284f0 <line:4:2, col:7>     | `-VarDecl 0x126928488 <col:2, col:6> col:6 used i 'int'     |-BinaryOperator 0x1269286b0 <line:9:2, col:20> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x126928600 <col:2, col:7> '<dependent type>' contains-errors lvalue ->nsub     | | `-RecoveryExpr 0x1269285d8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1269285b8 <col:2> 'int *' lvalue ParmVar 0x126928228 'sub' 'int *'     | `-CXXDependentScopeMemberExpr 0x126928668 <col:14, col:20> '<dependent type>' contains-errors lvalue ->nsub     |   `-RecoveryExpr 0x126928648 <col:14> '<dependent type>' contains-errors lvalue     |-ForStmt 0x130009180 <line:10:2, line:11:37>     | |-BinaryOperator 0x126928710 <line:10:7, col:11> 'int' '='     | | |-DeclRefExpr 0x1269286d0 <col:7> 'int' lvalue Var 0x126928488 'i' 'int'     | | `-IntegerLiteral 0x1269286f0 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x1269287a8 <col:14, col:18> 'int' contains-errors '<'     | | |-DeclRefExpr 0x126928730 <col:14> 'int' lvalue Var 0x126928488 'i' 'int'     | | `-RecoveryExpr 0x126928788 <col:18> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x1269287e8 <col:26, col:28> 'int' prefix '++'     | | `-DeclRefExpr 0x1269287c8 <col:28> 'int' lvalue Var 0x126928488 'i' 'int'     | `-BinaryOperator 0x130009160 <line:11:3, col:37> '<dependent type>' contains-errors '='     |   |-CXXDependentScopeMemberExpr 0x130009040 <col:3, col:15> '<dependent type>' contains-errors lvalue .sp     |   | `-ArraySubscriptExpr 0x130009020 <col:3, col:13> '<dependent type>' contains-errors lvalue     |   |   |-ImplicitCastExpr 0x130008ff0 <col:3, col:8> '<dependent type>' contains-errors <LValueToRValue>     |   |   | `-CXXDependentScopeMemberExpr 0x130008c48 <col:3, col:8> '<dependent type>' contains-errors lvalue ->sub     |   |   |   `-RecoveryExpr 0x130008c20 <col:3> '<dependent type>' contains-errors lvalue     |   |   |     `-DeclRefExpr 0x130008c00 <col:3> 'int *' lvalue ParmVar 0x126928228 'sub' 'int *'     |   |   `-ImplicitCastExpr 0x130009008 <col:12> 'int' <LValueToRValue>     |   |     `-DeclRefExpr 0x130008c90 <col:12> 'int' lvalue Var 0x126928488 'i' 'int'     |   `-BinaryOperator 0x130009140 <col:20, col:37> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x1300090d8 <col:20, col:32> '<dependent type>' contains-errors lvalue .ep     |     | `-ArraySubscriptExpr 0x1300090b8 <col:20, col:30> '<dependent type>' contains-errors lvalue     |     |   |-ImplicitCastExpr 0x130009088 <col:20, col:25> '<dependent type>' contains-errors <LValueToRValue>     |     |   | `-CXXDependentScopeMemberExpr 0x130008d68 <col:20, col:25> '<dependent type>' contains-errors lvalue ->sub     |     |   |   `-RecoveryExpr 0x130008d48 <col:20> '<dependent type>' contains-errors lvalue     |     |   `-ImplicitCastExpr 0x1300090a0 <col:29> 'int' <LValueToRValue>     |     |     `-DeclRefExpr 0x130008db0 <col:29> 'int' lvalue Var 0x126928488 'i' 'int'     |     `-RecoveryExpr 0x130009120 <col:37> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x130009500 <line:13:2, col:62>       `-UnaryOperator 0x1300094e8 <col:9, col:62> '<dependent type>' contains-errors prefix '!' cannot overflow         `-CallExpr 0x1300094a0 <col:10, col:62> '<dependent type>' contains-errors           |-DeclRefExpr 0x130009310 <col:10> 'int ()' Function 0x130009258 'match' 'int ()'           |-CXXDependentScopeMemberExpr 0x130009350 <col:16, col:22> '<dependent type>' contains-errors lvalue ->start           | `-RecoveryExpr 0x130009330 <col:16> '<dependent type>' contains-errors lvalue           |-DeclRefExpr 0x130009398 <col:29> 'const char *' lvalue ParmVar 0x1269281a8 'sp' 'const char *'           |-DeclRefExpr 0x1300093b8 <col:33> 'const char *' lvalue ParmVar 0x1269281a8 'sp' 'const char *'           |-BinaryOperator 0x130009460 <col:37, col:51> '<dependent type>' contains-errors '|'           | |-CXXDependentScopeMemberExpr 0x1300093f8 <col:37, col:43> '<dependent type>' contains-errors lvalue ->flags           | | `-RecoveryExpr 0x1300093d8 <col:37> '<dependent type>' contains-errors lvalue           | `-DeclRefExpr 0x130009440 <col:51> 'int' lvalue ParmVar 0x1269282a8 'eflags' 'int'           `-RecoveryExpr 0x130009480 <col:59> '<dependent type>' contains-errors lvalue ","19394":"`-FunctionDecl 0x11d940ab8  line:1:29 to_o2nm_cluster_from_node 'struct o2nm_cluster *(struct o2nm_node *)' static   |-ParmVarDecl 0x11d9286e8 <col:55, col:73> col:73 used node 'struct o2nm_node *'   `-CompoundStmt 0x11d940e28 <line:2:1, line:5:1>     `-ReturnStmt 0x11d940e18 <line:4:2, col:59>       `-CallExpr 0x11d940df0 <col:9, col:59> '<dependent type>' contains-errors         |-DeclRefExpr 0x11d940ce0 <col:9> 'int ()' Function 0x11d940c28 'to_o2nm_cluster' 'int ()'         `-CXXDependentScopeMemberExpr 0x11d940da8 <col:25, col:50> '<dependent type>' contains-errors lvalue ->ci_parent           `-CXXDependentScopeMemberExpr 0x11d940d60 <col:25, col:39> '<dependent type>' contains-errors lvalue .ci_parent             `-RecoveryExpr 0x11d940d38 <col:25, col:31> '<dependent type>' contains-errors lvalue               `-DeclRefExpr 0x11d940d00 <col:25> 'struct o2nm_node *' lvalue ParmVar 0x11d9286e8 'node' 'struct o2nm_node *' ","19504":"`-FunctionDecl 0x13f945cb8  line:1:5 invalid do_truncate 'int (struct dentry *, int, unsigned int, struct file *)'   |-ParmVarDecl 0x13f928648 <col:17, col:32> col:32 used dentry 'struct dentry *'   |-ParmVarDecl 0x13f9286e0 <col:40, col:47> col:47 invalid length 'int'   |-ParmVarDecl 0x13f928760 <col:55, col:68> col:68 used time_attrs 'unsigned int'   |-ParmVarDecl 0x13f945b68 <line:2:2, col:15> col:15 used filp 'struct file *'   `-CompoundStmt 0x148008408 <line:3:1, line:22:1>     |-DeclStmt 0x13f945e00 <line:4:2, col:9>     | `-VarDecl 0x13f945d98 <col:2, col:6> col:6 used err 'int'     |-DeclStmt 0x13f945f98 <line:5:2, col:23>     | |-RecordDecl 0x13f945e18 <col:2, col:9> col:9 struct iattr     | `-VarDecl 0x13f945f18 <col:2, col:15> col:15 referenced invalid newattrs 'struct iattr'     |-IfStmt 0x13f9460b8 <line:8:2, line:9:11>     | |-BinaryOperator 0x13f945ff0 <line:8:6, col:15> 'int' contains-errors '<'     | | |-RecoveryExpr 0x13f945fb0 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x13f945fd0 <col:15> 'int' 0     | `-ReturnStmt 0x13f9460a8 <line:9:3, col:11>     |   `-UnaryOperator 0x13f946090 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x13f946078 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13f946058 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13f946188 <line:11:2, col:21> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13f946120 <col:2, col:11> '<dependent type>' contains-errors lvalue .ia_size     | | `-RecoveryExpr 0x13f9460f8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13f9460d8 <col:2> 'struct iattr' lvalue Var 0x13f945f18 'newattrs' 'struct iattr'     | `-RecoveryExpr 0x13f946168 <col:21> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13f9462f0 <line:12:2, col:34> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13f9461f0 <col:2, col:11> '<dependent type>' contains-errors lvalue .ia_valid     | | `-RecoveryExpr 0x13f9461c8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13f9461a8 <col:2> 'struct iattr' lvalue Var 0x13f945f18 'newattrs' 'struct iattr'     | `-BinaryOperator 0x13f9462d0 <col:22, col:34> '<dependent type>' contains-errors '|'     |   |-RecoveryExpr 0x13f9462b0 <col:22> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x13f946250 <col:34> 'unsigned int' lvalue ParmVar 0x13f928760 'time_attrs' 'unsigned int'     |-IfStmt 0x13f946560 <line:13:2, line:16:2>     | |-ImplicitCastExpr 0x13f946330 <line:13:6> 'struct file *' <LValueToRValue>     | | `-DeclRefExpr 0x13f946310 <col:6> 'struct file *' lvalue ParmVar 0x13f945b68 'filp' 'struct file *'     | `-CompoundStmt 0x13f946540 <col:12, line:16:2>     |   |-BinaryOperator 0x13f9463f8 <line:14:3, col:22> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x13f946390 <col:3, col:12> '<dependent type>' contains-errors lvalue .ia_file     |   | | `-RecoveryExpr 0x13f946368 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x13f946348 <col:3> 'struct iattr' lvalue Var 0x13f945f18 'newattrs' 'struct iattr'     |   | `-DeclRefExpr 0x13f9463d8 <col:22> 'struct file *' lvalue ParmVar 0x13f945b68 'filp' 'struct file *'     |   `-CompoundAssignOperator 0x13f946510 <line:15:3, col:24> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |     |-CXXDependentScopeMemberExpr 0x13f946460 <col:3, col:12> '<dependent type>' contains-errors lvalue .ia_valid     |     | `-RecoveryExpr 0x13f946438 <col:3> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x13f946418 <col:3> 'struct iattr' lvalue Var 0x13f945f18 'newattrs' 'struct iattr'     |     `-RecoveryExpr 0x13f9464f0 <col:24> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13f9467c0 <line:18:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13f9466e0 <col:2> 'int ()' Function 0x13f946628 'mutex_lock' 'int ()'     | `-UnaryOperator 0x13f9467a8 <col:13, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x13f946760 <col:14, col:31> '<dependent type>' contains-errors lvalue ->i_mutex     |     `-RecoveryExpr 0x13f946738 <col:14, col:22> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13f946700 <col:14> 'struct dentry *' lvalue ParmVar 0x13f928648 'dentry' 'struct dentry *'     |-BinaryOperator 0x13f946990 <line:19:2, col:39> 'int' contains-errors '='     | |-DeclRefExpr 0x13f9467e8 <col:2> 'int' lvalue Var 0x13f945d98 'err' 'int'     | `-CallExpr 0x13f946960 <col:8, col:39> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13f9468e8 <col:8> 'int ()' Function 0x13f946830 'notify_change' 'int ()'     |   |-DeclRefExpr 0x13f946908 <col:22> 'struct dentry *' lvalue ParmVar 0x13f928648 'dentry' 'struct dentry *'     |   `-UnaryOperator 0x13f946948 <col:30, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x13f946928 <col:31> '<dependent type>' contains-errors lvalue     |-CallExpr 0x148008398 <line:20:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1480082b8 <col:2> 'int ()' Function 0x148008200 'mutex_unlock' 'int ()'     | `-UnaryOperator 0x148008380 <col:15, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x148008338 <col:16, col:33> '<dependent type>' contains-errors lvalue ->i_mutex     |     `-RecoveryExpr 0x148008310 <col:16, col:24> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x1480082d8 <col:16> 'struct dentry *' lvalue ParmVar 0x13f928648 'dentry' 'struct dentry *'     `-ReturnStmt 0x1480083f8 <line:21:2, col:9>       `-ImplicitCastExpr 0x1480083e0 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x1480083c0 <col:9> 'int' lvalue Var 0x13f945d98 'err' 'int' ","20010":"`-FunctionDecl 0x12011dd10  col:23 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x12011de10 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x12011ddb8 <<invalid sloc>> Implicit 902 ","19147":"`-FunctionDecl 0x123941800  col:20 invalid tm_active_with_altivec 'int (struct task_struct *)' static inline   |-ParmVarDecl 0x123928668 <col:43, col:63> col:63 tsk 'struct task_struct *'   `-CompoundStmt 0x1239418c8 <col:68, col:84> ","20109":"`-FunctionDecl 0x14d826c28  col:2 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x14d826d28 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x14d826cd0 <<invalid sloc>> Implicit 873 ","19637":"`-FunctionDecl 0x140941948  line:1:12 invalid tiocspgrp 'int (struct tty_struct *, struct tty_struct *, int)' static   |-ParmVarDecl 0x140928648 <col:22, col:41> col:41 tty 'struct tty_struct *'   |-ParmVarDecl 0x140928738 <col:46, col:65> col:65 used real_tty 'struct tty_struct *'   |-ParmVarDecl 0x140941800 <col:75, col:81> col:81 invalid __user 'int'   `-CompoundStmt 0x141009c00 <line:2:1, line:35:1>     |-DeclStmt 0x140941bf8 <line:3:2, col:18>     | |-RecordDecl 0x140941a08 <col:2, col:9> col:9 struct pid     | `-VarDecl 0x140941b78 <col:2, col:14> col:14 used pgrp 'struct pid *'     |-DeclStmt 0x140941eb8 <line:5:2, col:41>     | `-VarDecl 0x140941c28 <col:2, col:40> col:6 used retval 'int' cinit     |   `-CallExpr 0x140941e78 <col:15, col:40> 'int'     |     |-ImplicitCastExpr 0x140941e60 <col:15> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x140941df0 <col:15> 'int ()' Function 0x140941d38 'tty_check_change' 'int ()'     |     `-ImplicitCastExpr 0x140941ea0 <col:32> 'struct tty_struct *' <LValueToRValue>     |       `-DeclRefExpr 0x140941e10 <col:32> 'struct tty_struct *' lvalue ParmVar 0x140928738 'real_tty' 'struct tty_struct *'     |-IfStmt 0x140942070 <line:7:2, line:8:11>     | |-BinaryOperator 0x140941fa8 <line:7:6, col:17> 'int' contains-errors '=='     | | |-DeclRefExpr 0x140941ed0 <col:6> 'int' lvalue Var 0x140941c28 'retval' 'int'     | | `-UnaryOperator 0x140941f90 <col:16, col:17> '<dependent type>' contains-errors prefix '-' cannot overflow     | |   `-ImplicitCastExpr 0x140941f78 <col:17> '<dependent type>' contains-errors <LValueToRValue>     | |     `-RecoveryExpr 0x140941f58 <col:17> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x140942060 <line:8:3, col:11>     |   `-UnaryOperator 0x140942048 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x140942030 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x140942010 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x140942110 <line:9:2, line:10:10>     | |-ImplicitCastExpr 0x1409420b0 <line:9:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x140942090 <col:6> 'int' lvalue Var 0x140941c28 'retval' 'int'     | `-ReturnStmt 0x140942100 <line:10:3, col:10>     |   `-ImplicitCastExpr 0x1409420e8 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x1409420c8 <col:10> 'int' lvalue Var 0x140941c28 'retval' 'int'     |-IfStmt 0x140942578 <line:11:2, line:14:11>     | |-RecoveryExpr 0x1409424b0 <line:11:6, line:13:49> '_Bool' contains-errors     | `-ReturnStmt 0x140942568 <line:14:3, col:11>     |   `-UnaryOperator 0x140942550 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x140942538 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x140942518 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x141008c10 <line:15:2, line:16:11>     | |-CallExpr 0x140942738 <line:15:6, col:25> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x140942678 <col:6> 'int ()' Function 0x1409425c0 'get_user' 'int ()'     | | |-RecoveryExpr 0x1409426f8 <col:15> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x140942718 <col:24> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x141008c00 <line:16:3, col:11>     |   `-UnaryOperator 0x1409427e8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x1409427d0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x1409427b0 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x141008d70 <line:17:2, line:18:11>     | |-BinaryOperator 0x141008ca8 <line:17:6, col:16> 'int' contains-errors '<'     | | |-RecoveryExpr 0x141008c88 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x141008c48 <col:16> 'int' 0     | `-ReturnStmt 0x141008d60 <line:18:3, col:11>     |   `-UnaryOperator 0x141008d48 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x141008d30 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x141008d10 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x141008ea8 <line:19:2, col:16> 'int'     | `-ImplicitCastExpr 0x141008e90 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x141008e70 <col:2> 'int ()' Function 0x141008db8 'rcu_read_lock' 'int ()'     |-IfStmt 0x1410090c0 <line:22:2, line:23:8>     | |-UnaryOperator 0x141009040 <line:22:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x141009028 <col:7> 'struct pid *' <LValueToRValue>     | |   `-DeclRefExpr 0x141009008 <col:7> 'struct pid *' lvalue Var 0x140941b78 'pgrp' 'struct pid *'     | `-GotoStmt 0x1410090a8 <line:23:3, col:8> 'out_unlock' 0x141009058     |-IfStmt 0x1410092d0 <line:25:2, line:26:8>     | |-RecoveryExpr 0x141009298 <line:25:6, col:51> '_Bool' contains-errors     | `-GotoStmt 0x1410092b8 <line:26:3, col:8> 'out_unlock' 0x141009058     |-BinaryOperator 0x141009330 <line:27:2, col:11> 'int' '='     | |-DeclRefExpr 0x1410092f0 <col:2> 'int' lvalue Var 0x140941c28 'retval' 'int'     | `-IntegerLiteral 0x141009310 <col:11> 'int' 0     |-CallExpr 0x1410094c8 <line:28:2, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x141009430 <col:2> 'int ()' Function 0x141009378 'spin_lock_irq' 'int ()'     | `-UnaryOperator 0x1410094b0 <col:16, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x141009488 <col:17, col:27> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x141009450 <col:17> 'struct tty_struct *' lvalue ParmVar 0x140928738 'real_tty' 'struct tty_struct *'     |-CallExpr 0x141009650 <line:29:2, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1410095d0 <col:2> 'int ()' Function 0x141009518 'put_pid' 'int ()'     | `-RecoveryExpr 0x141009628 <col:10, col:20> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1410095f0 <col:10> 'struct tty_struct *' lvalue ParmVar 0x140928738 'real_tty' 'struct tty_struct *'     |-BinaryOperator 0x141009850 <line:30:2, col:31> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1410096b0 <col:2, col:12> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x141009678 <col:2> 'struct tty_struct *' lvalue ParmVar 0x140928738 'real_tty' 'struct tty_struct *'     | `-CallExpr 0x141009810 <col:19, col:31> 'int'     |   |-ImplicitCastExpr 0x1410097f8 <col:19> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1410097b8 <col:19> 'int ()' Function 0x141009700 'get_pid' 'int ()'     |   `-ImplicitCastExpr 0x141009838 <col:27> 'struct pid *' <LValueToRValue>     |     `-DeclRefExpr 0x1410097d8 <col:27> 'struct pid *' lvalue Var 0x140941b78 'pgrp' 'struct pid *'     |-CallExpr 0x1410099e8 <line:31:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x141009950 <col:2> 'int ()' Function 0x141009898 'spin_unlock_irq' 'int ()'     | `-UnaryOperator 0x1410099d0 <col:18, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1410099a8 <col:19, col:29> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x141009970 <col:19> 'struct tty_struct *' lvalue ParmVar 0x140928738 'real_tty' 'struct tty_struct *'     |-LabelStmt 0x141009b48 <line:32:1, line:33:18> 'out_unlock'     | `-CallExpr 0x141009b28 <col:2, col:18> 'int'     |   `-ImplicitCastExpr 0x141009b10 <col:2> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x141009af0 <col:2> 'int ()' Function 0x141009a38 'rcu_read_unlock' 'int ()'     `-ReturnStmt 0x141009ba0 <line:34:2, col:9>       `-ImplicitCastExpr 0x141009b88 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x141009b68 <col:9> 'int' lvalue Var 0x140941c28 'retval' 'int' ","19275":"`-FunctionDecl 0x128128288  line:1:1 invalid pgp_enumerate_blob 'int (int *, int *)'   |-ParmVarDecl 0x128128128 <col:20, col:31> col:31 invalid card 'int *'   |-ParmVarDecl 0x1281281a8 <col:37, col:49> col:49 invalid blob 'int *'   `-CompoundStmt 0x10480bf10 <line:2:1, line:48:1>     |-DeclStmt 0x1281283c0 <line:3:2, col:14>     | `-VarDecl 0x128128358 <col:2, col:12> col:12 referenced invalid in 'const int *'     |-DeclStmt 0x128128458 <line:4:2, col:8>     | `-VarDecl 0x1281283f0 <col:2, col:7> col:7 used r 'int'     |-IfStmt 0x128128598 <line:6:2, line:7:10>     | |-BinaryOperator 0x128128530 <line:6:6, col:21> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x128128490 <col:6, col:12> '<dependent type>' contains-errors lvalue ->files     | | | `-RecoveryExpr 0x128128470 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x128128510 <col:21> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x128128588 <line:7:3, col:10>     |   `-RecoveryExpr 0x128128568 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x104808c88 <line:9:2, line:10:10>     | |-BinaryOperator 0x104808c20 <line:9:6, col:40> 'int' contains-errors '<'     | | |-ParenExpr 0x1281287e0 <col:6, col:36> 'int' contains-errors     | | | `-BinaryOperator 0x1281287c0 <col:7, col:35> 'int' contains-errors '='     | | |   |-DeclRefExpr 0x1281285b8 <col:7> 'int' lvalue Var 0x1281283f0 'r' 'int'     | | |   `-CallExpr 0x128128790 <col:11, col:35> '<dependent type>' contains-errors     | | |     |-DeclRefExpr 0x128128730 <col:11> 'int ()' Function 0x128128678 'pgp_read_blob' 'int ()'     | | |     |-RecoveryExpr 0x128128750 <col:25> '<dependent type>' contains-errors lvalue     | | |     `-RecoveryExpr 0x128128770 <col:31> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x104808c00 <col:40> 'int' 0     | `-ReturnStmt 0x104808c78 <line:10:3, col:10>     |   `-ImplicitCastExpr 0x104808c60 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x104808c40 <col:10> 'int' lvalue Var 0x1281283f0 'r' 'int'     |-BinaryOperator 0x104808d58 <line:12:2, col:13> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x104808cc8 <col:2> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x104808ca8 <col:2> 'const int *' lvalue Var 0x128128358 'in' 'const int *'     | `-CXXDependentScopeMemberExpr 0x104808d10 <col:7, col:13> '<dependent type>' contains-errors lvalue ->data     |   `-RecoveryExpr 0x104808cf0 <col:7> '<dependent type>' contains-errors lvalue     `-WhileStmt 0x10480bef0 <line:14:2, line:45:2>       |-BinaryOperator 0x104808ee8 <line:14:9, col:43> 'int' contains-errors '>'       | |-CStyleCastExpr 0x104808df8 <col:9, col:21> 'int' contains-errors <Dependent>       | | `-CXXDependentScopeMemberExpr 0x104808d98 <col:15, col:21> '<dependent type>' contains-errors lvalue ->len       | |   `-RecoveryExpr 0x104808d78 <col:15> '<dependent type>' contains-errors lvalue       | `-ParenExpr 0x104808ec8 <col:27, col:43> '<dependent type>' contains-errors       |   `-BinaryOperator 0x104808ea8 <col:28, col:39> '<dependent type>' contains-errors '-'       |     |-RecoveryExpr 0x104808e20 <col:28> '<dependent type>' contains-errors lvalue       |     `-CXXDependentScopeMemberExpr 0x104808e60 <col:33, col:39> '<dependent type>' contains-errors lvalue ->data       |       `-RecoveryExpr 0x104808e40 <col:33> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x10480bea0 <col:46, line:45:2>         |-DeclStmt 0x1048090a8 <line:15:3, col:32>         | |-VarDecl 0x104808f20 <col:3, col:16> col:16 used cla 'unsigned int'         | |-VarDecl 0x104808fa0 <col:3, col:21> col:21 used tag 'unsigned int'         | `-VarDecl 0x104809020 <col:3, col:26> col:26 used tmptag 'unsigned int'         |-UnaryExprOrTypeTraitExpr 0x104809118 <line:16:3, col:11> 'unsigned long' contains-errors sizeof         | `-RecoveryExpr 0x1048090f8 <col:11> '<dependent type>' contains-errors lvalue         |-DeclStmt 0x1048091d8 <line:17:3, col:22>         | `-VarDecl 0x104809150 <col:3, col:13> col:13 invalid data 'const int *'         |-BinaryOperator 0x104809668 <line:20:3, line:21:22> 'int' contains-errors '='         | |-DeclRefExpr 0x104809208 <line:20:3> 'int' lvalue Var 0x1281283f0 'r' 'int'         | `-CallExpr 0x104809620 <col:7, line:21:22> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x104809308 <line:20:7> 'int ()' Function 0x104809250 'sc_asn1_read_tag' 'int ()'         |   |-UnaryOperator 0x104809348 <col:24, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow         |   | `-RecoveryExpr 0x104809328 <col:25> '<dependent type>' contains-errors lvalue         |   |-BinaryOperator 0x104809490 <col:31, col:59> '<dependent type>' contains-errors '-'         |   | |-CXXDependentScopeMemberExpr 0x104809380 <col:31, col:37> '<dependent type>' contains-errors lvalue ->len         |   | | `-RecoveryExpr 0x104809360 <col:31> '<dependent type>' contains-errors lvalue         |   | `-ParenExpr 0x104809470 <col:43, col:59> '<dependent type>' contains-errors         |   |   `-BinaryOperator 0x104809450 <col:44, col:55> '<dependent type>' contains-errors '-'         |   |     |-RecoveryExpr 0x1048093c8 <col:44> '<dependent type>' contains-errors lvalue         |   |     `-CXXDependentScopeMemberExpr 0x104809408 <col:49, col:55> '<dependent type>' contains-errors lvalue ->data         |   |       `-RecoveryExpr 0x1048093e8 <col:49> '<dependent type>' contains-errors lvalue         |   |-UnaryOperator 0x104809500 <line:21:6, col:7> 'unsigned int *' prefix '&' cannot overflow         |   | `-DeclRefExpr 0x1048094b0 <col:7> 'unsigned int' lvalue Var 0x104808f20 'cla' 'unsigned int'         |   |-UnaryOperator 0x104809538 <col:12, col:13> 'unsigned int *' prefix '&' cannot overflow         |   | `-DeclRefExpr 0x104809518 <col:13> 'unsigned int' lvalue Var 0x104808fa0 'tag' 'unsigned int'         |   `-UnaryOperator 0x104809608 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow         |     `-RecoveryExpr 0x1048095e8 <col:19> '<dependent type>' contains-errors lvalue         |-IfStmt 0x104809b28 <line:22:3, line:26:3>         | |-BinaryOperator 0x104809828 <line:22:7, col:24> 'int' contains-errors '||'         | | |-BinaryOperator 0x1048097c8 <col:7, col:11> 'int' '<'         | | | |-ImplicitCastExpr 0x1048097b0 <col:7> 'int' <LValueToRValue>         | | | | `-DeclRefExpr 0x104809688 <col:7> 'int' lvalue Var 0x1281283f0 'r' 'int'         | | | `-IntegerLiteral 0x1048096a8 <col:11> 'int' 0         | | `-BinaryOperator 0x104809808 <col:16, col:24> 'int' contains-errors '=='         | |   |-RecoveryExpr 0x104809700 <col:16> '<dependent type>' contains-errors lvalue         | |   `-RecoveryExpr 0x1048097e8 <col:24> '<dependent type>' contains-errors lvalue         | `-CompoundStmt 0x104809b08 <col:30, line:26:3>         |   |-CallExpr 0x104809a88 <line:23:4, line:24:11> '<dependent type>' contains-errors         |   | |-DeclRefExpr 0x104809928 <line:23:4> 'int ()' Function 0x104809870 'sc_debug' 'int ()'         |   | |-CXXDependentScopeMemberExpr 0x104809968 <col:13, col:19> '<dependent type>' contains-errors lvalue ->ctx         |   | | `-RecoveryExpr 0x104809948 <col:13> '<dependent type>' contains-errors lvalue         |   | |-RecoveryExpr 0x104809a68 <col:24> '<dependent type>' contains-errors lvalue         |   | `-StringLiteral 0x104809a10 <line:24:6> 'char[4]' lvalue \"STR\"         |   `-ReturnStmt 0x104809af8 <line:25:4, col:11>         |     `-RecoveryExpr 0x104809ad8 <col:11> '<dependent type>' contains-errors lvalue         |-ForStmt 0x10480b778 <line:29:3, line:31:3>         | |-BinaryOperator 0x104809ba0 <line:29:8, col:17> 'unsigned int' '='         | | |-DeclRefExpr 0x104809b48 <col:8> 'unsigned int' lvalue Var 0x104809020 'tmptag' 'unsigned int'         | | `-ImplicitCastExpr 0x104809b88 <col:17> 'unsigned int' <LValueToRValue>         | |   `-DeclRefExpr 0x104809b68 <col:17> 'unsigned int' lvalue Var 0x104808fa0 'tag' 'unsigned int'         | |-<<<NULL>>>         | |-BinaryOperator 0x10480b630 <col:22, col:31> 'int' '>'         | | |-ImplicitCastExpr 0x10480b600 <col:22> 'unsigned int' <LValueToRValue>         | | | `-DeclRefExpr 0x104809bc0 <col:22> 'unsigned int' lvalue Var 0x104809020 'tmptag' 'unsigned int'         | | `-ImplicitCastExpr 0x10480b618 <col:31> 'unsigned int' <IntegralCast>         | |   `-IntegerLiteral 0x104809be0 <col:31> 'int' 255         | |-CompoundAssignOperator 0x10480b6a8 <col:38, col:49> 'unsigned int' '>>=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'         | | |-DeclRefExpr 0x10480b650 <col:38> 'unsigned int' lvalue Var 0x104809020 'tmptag' 'unsigned int'         | | `-IntegerLiteral 0x10480b670 <col:49> 'int' 8         | `-CompoundStmt 0x10480b760 <col:52, line:31:3>         |   `-CompoundAssignOperator 0x10480b730 <line:30:4, col:12> 'unsigned int' '<<=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'         |     |-DeclRefExpr 0x10480b6d8 <col:4> 'unsigned int' lvalue Var 0x104808f20 'cla' 'unsigned int'         |     `-IntegerLiteral 0x10480b6f8 <col:12> 'int' 8         |-CompoundAssignOperator 0x10480b808 <line:32:3, col:10> 'unsigned int' '|=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'         | |-DeclRefExpr 0x10480b7b0 <col:3> 'unsigned int' lvalue Var 0x104808fa0 'tag' 'unsigned int'         | `-ImplicitCastExpr 0x10480b7f0 <col:10> 'unsigned int' <LValueToRValue>         |   `-DeclRefExpr 0x10480b7d0 <col:10> 'unsigned int' lvalue Var 0x104808f20 'cla' 'unsigned int'         `-IfStmt 0x10480b990 <line:35:3, line:38:3>           |-BinaryOperator 0x10480b8c0 <line:35:7, col:20> 'int' contains-errors '=='           | |-DeclRefExpr 0x10480b838 <col:7> 'unsigned int' lvalue Var 0x104808fa0 'tag' 'unsigned int'           | `-CXXDependentScopeMemberExpr 0x10480b878 <col:14, col:20> '<dependent type>' contains-errors lvalue ->id           |   `-RecoveryExpr 0x10480b858 <col:14> '<dependent type>' contains-errors lvalue           `-CompoundStmt 0x10480b970 <col:24, line:38:3>             |-BinaryOperator 0x10480b948 <line:36:4, col:9> '<dependent type>' contains-errors '='             | |-RecoveryExpr 0x10480b900 <col:4> '<dependent type>' contains-errors lvalue             | | `-DeclRefExpr 0x10480b8e0 <col:4> 'const int *' lvalue Var 0x128128358 'in' 'const int *'             | `-RecoveryExpr 0x10480b928 <col:9> '<dependent type>' contains-errors lvalue             `-ContinueStmt 0x10480b968 <line:37:4> ","19210":"`-FunctionDecl 0x1211481a8  col:3 implicit used sprintf 'int (char *, const char *, ...)' extern   |-ParmVarDecl 0x1211482a8 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x121148310 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x121148250 <<invalid sloc>> Implicit 906   `-FormatAttr 0x121148388 <col:3> Implicit printf 2 3 ","19156":"`-FunctionDecl 0x154945258  col:9 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x154945358 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x154942000 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x154942068 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x154945300 <<invalid sloc>> Implicit 883 ","19107":"`-FunctionDecl 0x13b851368  line:1:1 invalid ikev2_ID_print 'int (int *, char, const struct isakmp_gen *, int)'   |-ParmVarDecl 0x13b838528 <col:16, col:36> col:36 invalid ndo 'int *'   |-ParmVarDecl 0x13b8385a0 <col:41, col:48> col:48 used tpay 'char'   |-ParmVarDecl 0x13b838b98 <line:2:3, col:28> col:28 used ext 'const struct isakmp_gen *'   |-ParmVarDecl 0x13b851218 <line:3:3, col:9> col:9 invalid item_len 'int'   `-CompoundStmt 0x13b856378 <line:6:1, line:80:1>     |-DeclStmt 0x13b8515a8 <line:7:2, col:20>     | |-RecordDecl 0x13b851430 <col:2, col:9> col:9 struct ikev2_id     | `-VarDecl 0x13b851528 <col:2, col:18> col:18 invalid id 'struct ikev2_id'     |-DeclStmt 0x13b851760 <line:8:2, col:27>     | |-VarDecl 0x13b8515d8 <col:2, col:6> col:6 used id_len 'int'     | |-VarDecl 0x13b851658 <col:2, col:14> col:14 used idtype_len 'int'     | `-VarDecl 0x13b8516d8 <col:2, col:26> col:26 used i 'int'     |-DeclStmt 0x13b851890 <line:9:2, col:33>     | |-VarDecl 0x13b851790 <col:2, col:15> col:15 used dumpascii 'unsigned int'     | `-VarDecl 0x13b851810 <col:2, col:26> col:26 used dumphex 'unsigned int'     |-DeclStmt 0x13b851960 <line:10:2, col:31>     | `-VarDecl 0x13b8518f8 <col:2, col:23> col:23 used typedata 'const unsigned char *'     |-ImplicitCastExpr 0x13b851bf8 <line:12:2, col:16> '<dependent type>' contains-errors <LValueToRValue>     | `-RecoveryExpr 0x13b851bc8 <col:2, col:16> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x13b851ad0 <col:2> 'int ()' Function 0x13b851a18 'ND_TCHECK' 'int ()'     |   `-UnaryOperator 0x13b851b28 <col:12, col:13> 'const struct isakmp_gen' lvalue prefix '*' cannot overflow     |     `-ImplicitCastExpr 0x13b851b10 <col:13> 'const struct isakmp_gen *' <LValueToRValue>     |       `-DeclRefExpr 0x13b851af0 <col:13> 'const struct isakmp_gen *' lvalue ParmVar 0x13b838b98 'ext' 'const struct isakmp_gen *'     |-CallExpr 0x13b851dc8 <line:13:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13b851cf0 <col:2> 'int ()' Function 0x13b851c38 'UNALIGNED_MEMCPY' 'int ()'     | |-UnaryOperator 0x13b851d30 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x13b851d10 <col:20> '<dependent type>' contains-errors lvalue     | |-DeclRefExpr 0x13b851d48 <col:24> 'const struct isakmp_gen *' lvalue ParmVar 0x13b838b98 'ext' 'const struct isakmp_gen *'     | `-UnaryExprOrTypeTraitExpr 0x13b851da8 <col:29, col:38> 'unsigned long' contains-errors sizeof     |   `-ParenExpr 0x13b851d88 <col:35, col:38> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x13b851d68 <col:36> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13b852160 <line:14:2, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13b851ee0 <col:2> 'int ()' Function 0x13b851e28 'ikev2_pay_print' 'int ()'     | |-RecoveryExpr 0x13b851f00 <col:18> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x13b852058 <col:23, col:33> 'int'     | | |-ImplicitCastExpr 0x13b852040 <col:23> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x13b852000 <col:23> 'int ()' Function 0x13b851f48 'NPSTR' 'int ()'     | | `-ImplicitCastExpr 0x13b852098 <col:29> 'int' <IntegralCast>     | |   `-ImplicitCastExpr 0x13b852080 <col:29> 'char' <LValueToRValue>     | |     `-DeclRefExpr 0x13b852020 <col:29> 'char' lvalue ParmVar 0x13b8385a0 'tpay' 'char'     | `-CXXDependentScopeMemberExpr 0x13b852118 <col:36, col:41> '<dependent type>' contains-errors lvalue .critical     |   `-CXXDependentScopeMemberExpr 0x13b8520d0 <col:36, col:39> '<dependent type>' contains-errors lvalue .h     |     `-RecoveryExpr 0x13b8520b0 <col:36> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13b8523b0 <line:16:2, col:25> 'int' contains-errors '='     | |-DeclRefExpr 0x13b852198 <col:2> 'int' lvalue Var 0x13b8515d8 'id_len' 'int'     | `-CallExpr 0x13b852388 <col:11, col:25> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13b8522b8 <col:11> 'int ()' Function 0x13b852200 'ntohs' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x13b852340 <col:17, col:22> '<dependent type>' contains-errors lvalue .len     |     `-CXXDependentScopeMemberExpr 0x13b8522f8 <col:17, col:20> '<dependent type>' contains-errors lvalue .h     |       `-RecoveryExpr 0x13b8522d8 <col:17> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13b852628 <line:18:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13b8524b0 <col:2> 'int ()' Function 0x13b8523f8 'ND_PRINT' 'int ()'     | `-ParenExpr 0x13b852608 <col:11, col:33> 'int' contains-errors     |   `-BinaryOperator 0x13b8525e8 <col:12, col:32> 'int' contains-errors ','     |     |-BinaryOperator 0x13b852550 <col:12, col:16> 'char[4]' contains-errors ','     |     | |-RecoveryExpr 0x13b8524d0 <col:12> '<dependent type>' contains-errors lvalue     |     | `-StringLiteral 0x13b852530 <col:16> 'char[4]' lvalue \"STR\"     |     `-BinaryOperator 0x13b8525c8 <col:23, col:32> 'int' '-'     |       |-ImplicitCastExpr 0x13b8525b0 <col:23> 'int' <LValueToRValue>     |       | `-DeclRefExpr 0x13b852570 <col:23> 'int' lvalue Var 0x13b8515d8 'id_len' 'int'     |       `-IntegerLiteral 0x13b852590 <col:32> 'int' 4     |-IfStmt 0x13b852ab8 <line:19:2, line:23:2>     | |-BinaryOperator 0x13b852770 <line:19:6, col:32> 'int' contains-errors '&&'     | | |-BinaryOperator 0x13b8526d8 <col:6, col:15> 'int' contains-errors '<'     | | | |-IntegerLiteral 0x13b852650 <col:6> 'int' 2     | | | `-CXXDependentScopeMemberExpr 0x13b852690 <col:10, col:15> '<dependent type>' contains-errors lvalue ->ndo_vflag     | | |   `-RecoveryExpr 0x13b852670 <col:10> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x13b852750 <col:28, col:32> 'int' '<'     | |   |-IntegerLiteral 0x13b8526f8 <col:28> 'int' 4     | |   `-ImplicitCastExpr 0x13b852738 <col:32> 'int' <LValueToRValue>     | |     `-DeclRefExpr 0x13b852718 <col:32> 'int' lvalue Var 0x13b8515d8 'id_len' 'int'     | `-CompoundStmt 0x13b852a98 <col:40, line:23:2>     |   |-CallExpr 0x13b852830 <line:20:3, col:23> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13b852790 <col:3> 'int ()' Function 0x13b8523f8 'ND_PRINT' 'int ()'     |   | `-ParenExpr 0x13b852810 <col:12, col:22> 'char[4]' contains-errors     |   |   `-BinaryOperator 0x13b8527f0 <col:13, col:17> 'char[4]' contains-errors ','     |   |     |-RecoveryExpr 0x13b8527b0 <col:13> '<dependent type>' contains-errors lvalue     |   |     `-StringLiteral 0x13b8527d0 <col:17> 'char[4]' lvalue \"STR\"     |   `-IfStmt 0x13b852a78 <line:21:3, line:22:9>     |     |-RecoveryExpr 0x13b8529f0 <line:21:7, col:60> '_Bool' contains-errors     |     `-GotoStmt 0x13b852a60 <line:22:4, col:9> 'trunc' 0x13b852a10     |-BinaryOperator 0x13b852bc8 <line:26:2, col:14> 'unsigned int' '='     | |-DeclRefExpr 0x13b852b70 <col:2> 'unsigned int' lvalue Var 0x13b851790 'dumpascii' 'unsigned int'     | `-ImplicitCastExpr 0x13b852bb0 <col:14> 'unsigned int' <IntegralCast>     |   `-IntegerLiteral 0x13b852b90 <col:14> 'int' 0     |-BinaryOperator 0x13b852c40 <line:27:2, col:14> 'unsigned int' '='     | |-DeclRefExpr 0x13b852be8 <col:2> 'unsigned int' lvalue Var 0x13b851810 'dumphex' 'unsigned int'     | `-ImplicitCastExpr 0x13b852c28 <col:14> 'unsigned int' <IntegralCast>     |   `-IntegerLiteral 0x13b852c08 <col:14> 'int' 0     |-SwitchStmt 0x13b852dd8 <line:30:2, line:59:2>     | |-ImplicitCastExpr 0x13b852dc0 <line:30:9, col:12> '<dependent type>' contains-errors <LValueToRValue>     | | `-CXXDependentScopeMemberExpr 0x13b852d78 <col:9, col:12> '<dependent type>' contains-errors lvalue .type     | |   `-RecoveryExpr 0x13b852d58 <col:9> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13b855148 <col:18, line:59:2>     |   |-CallExpr 0x13b852eb8 <line:32:3, col:24> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13b852e18 <col:3> 'int ()' Function 0x13b8523f8 'ND_PRINT' 'int ()'     |   | `-ParenExpr 0x13b852e98 <col:12, col:23> 'char[4]' contains-errors     |   |   `-BinaryOperator 0x13b852e78 <col:13, col:18> 'char[4]' contains-errors ','     |   |     |-RecoveryExpr 0x13b852e38 <col:13> '<dependent type>' contains-errors lvalue     |   |     `-StringLiteral 0x13b852e58 <col:18> 'char[4]' lvalue \"STR\"     |   |-BinaryOperator 0x13b852f38 <line:33:3, col:11> 'unsigned int' '='     |   | |-DeclRefExpr 0x13b852ee0 <col:3> 'unsigned int' lvalue Var 0x13b851810 'dumphex' 'unsigned int'     |   | `-ImplicitCastExpr 0x13b852f20 <col:11> 'unsigned int' <IntegralCast>     |   |   `-IntegerLiteral 0x13b852f00 <col:11> 'int' 1     |   |-BreakStmt 0x13b852f58 <line:34:3>     |   |-CallExpr 0x13b853018 <line:36:3, col:24> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13b852f78 <col:3> 'int ()' Function 0x13b8523f8 'ND_PRINT' 'int ()'     |   | `-ParenExpr 0x13b852ff8 <col:12, col:23> 'char[4]' contains-errors     |   |   `-BinaryOperator 0x13b852fd8 <col:13, col:18> 'char[4]' contains-errors ','     |   |     |-RecoveryExpr 0x13b852f98 <col:13> '<dependent type>' contains-errors lvalue     |   |     `-StringLiteral 0x13b852fb8 <col:18> 'char[4]' lvalue \"STR\"     |   |-BinaryOperator 0x13b853098 <line:37:3, col:13> 'unsigned int' '='     |   | |-DeclRefExpr 0x13b853040 <col:3> 'unsigned int' lvalue Var 0x13b851790 'dumpascii' 'unsigned int'     |   | `-ImplicitCastExpr 0x13b853080 <col:13> 'unsigned int' <IntegralCast>     |   |   `-IntegerLiteral 0x13b853060 <col:13> 'int' 1     |   |-BreakStmt 0x13b8530b8 <line:38:3>     |   |-CallExpr 0x13b853178 <line:40:3, col:24> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13b8530d8 <col:3> 'int ()' Function 0x13b8523f8 'ND_PRINT' 'int ()'     |   | `-ParenExpr 0x13b853158 <col:12, col:23> 'char[4]' contains-errors     |   |   `-BinaryOperator 0x13b853138 <col:13, col:18> 'char[4]' contains-errors ','     |   |     |-RecoveryExpr 0x13b8530f8 <col:13> '<dependent type>' contains-errors lvalue     |   |     `-StringLiteral 0x13b853118 <col:18> 'char[4]' lvalue \"STR\"     |   |-BinaryOperator 0x13b854c00 <line:41:3, col:13> 'unsigned int' '='     |   | |-DeclRefExpr 0x13b8531a0 <col:3> 'unsigned int' lvalue Var 0x13b851790 'dumpascii' 'unsigned int'     |   | `-ImplicitCastExpr 0x13b8531e0 <col:13> 'unsigned int' <IntegralCast>     |   |   `-IntegerLiteral 0x13b8531c0 <col:13> 'int' 1     |   |-BreakStmt 0x13b854c20 <line:42:3>     |   |-CallExpr 0x13b854cc8 <line:44:3, col:24> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13b854c28 <col:3> 'int ()' Function 0x13b8523f8 'ND_PRINT' 'int ()'     |   | `-ParenExpr 0x13b854ca8 <col:12, col:23> 'char[4]' contains-errors     |   |   `-BinaryOperator 0x13b854c88 <col:13, col:18> 'char[4]' contains-errors ','     |   |     |-RecoveryExpr 0x13b854c48 <col:13> '<dependent type>' contains-errors lvalue     |   |     `-StringLiteral 0x13b854c68 <col:18> 'char[4]' lvalue \"STR\"     |   |-BinaryOperator 0x13b854d48 <line:45:3, col:11> 'unsigned int' '='     |   | |-DeclRefExpr 0x13b854cf0 <col:3> 'unsigned int' lvalue Var 0x13b851810 'dumphex' 'unsigned int'     |   | `-ImplicitCastExpr 0x13b854d30 <col:11> 'unsigned int' <IntegralCast>     |   |   `-IntegerLiteral 0x13b854d10 <col:11> 'int' 1     |   |-BreakStmt 0x13b854d68 <line:46:3>     |   |-CallExpr 0x13b854e10 <line:48:3, col:24> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13b854d70 <col:3> 'int ()' Function 0x13b8523f8 'ND_PRINT' 'int ()'     |   | `-ParenExpr 0x13b854df0 <col:12, col:23> 'char[4]' contains-errors     |   |   `-BinaryOperator 0x13b854dd0 <col:13, col:18> 'char[4]' contains-errors ','     |   |     |-RecoveryExpr 0x13b854d90 <col:13> '<dependent type>' contains-errors lvalue     |   |     `-StringLiteral 0x13b854db0 <col:18> 'char[4]' lvalue \"STR\"     |   |-BinaryOperator 0x13b854e90 <line:49:3, col:11> 'unsigned int' '='     |   | |-DeclRefExpr 0x13b854e38 <col:3> 'unsigned int' lvalue Var 0x13b851810 'dumphex' 'unsigned int'     |   | `-ImplicitCastExpr 0x13b854e78 <col:11> 'unsigned int' <IntegralCast>     |   |   `-IntegerLiteral 0x13b854e58 <col:11> 'int' 1     |   |-BreakStmt 0x13b854eb0 <line:50:3>     |   |-CallExpr 0x13b854f58 <line:52:3, col:24> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13b854eb8 <col:3> 'int ()' Function 0x13b8523f8 'ND_PRINT' 'int ()'     |   | `-ParenExpr 0x13b854f38 <col:12, col:23> 'char[4]' contains-errors     |   |   `-BinaryOperator 0x13b854f18 <col:13, col:18> 'char[4]' contains-errors ','     |   |     |-RecoveryExpr 0x13b854ed8 <col:13> '<dependent type>' contains-errors lvalue     |   |     `-StringLiteral 0x13b854ef8 <col:18> 'char[4]' lvalue \"STR\"     |   |-BinaryOperator 0x13b854fd8 <line:53:3, col:11> 'unsigned int' '='     |   | |-DeclRefExpr 0x13b854f80 <col:3> 'unsigned int' lvalue Var 0x13b851810 'dumphex' 'unsigned int'     |   | `-ImplicitCastExpr 0x13b854fc0 <col:11> 'unsigned int' <IntegralCast>     |   |   `-IntegerLiteral 0x13b854fa0 <col:11> 'int' 1     |   |-BreakStmt 0x13b854ff8 <line:54:3>     |   |-CallExpr 0x13b8550a0 <line:56:3, col:24> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13b855000 <col:3> 'int ()' Function 0x13b8523f8 'ND_PRINT' 'int ()'     |   | `-ParenExpr 0x13b855080 <col:12, col:23> 'char[4]' contains-errors     |   |   `-BinaryOperator 0x13b855060 <col:13, col:18> 'char[4]' contains-errors ','     |   |     |-RecoveryExpr 0x13b855020 <col:13> '<dependent type>' contains-errors lvalue     |   |     `-StringLiteral 0x13b855040 <col:18> 'char[4]' lvalue \"STR\"     |   |-BinaryOperator 0x13b855120 <line:57:3, col:11> 'unsigned int' '='     |   | |-DeclRefExpr 0x13b8550c8 <col:3> 'unsigned int' lvalue Var 0x13b851810 'dumphex' 'unsigned int'     |   | `-ImplicitCastExpr 0x13b855108 <col:11> 'unsigned int' <IntegralCast>     |   |   `-IntegerLiteral 0x13b8550e8 <col:11> 'int' 1     |   `-BreakStmt 0x13b855140 <line:58:3>     |-IfStmt 0x13b855a70 <line:61:2, line:70:2>     | |-ImplicitCastExpr 0x13b855220 <line:61:5> 'unsigned int' <LValueToRValue>     | | `-DeclRefExpr 0x13b855200 <col:5> 'unsigned int' lvalue Var 0x13b851790 'dumpascii' 'unsigned int'     | `-CompoundStmt 0x13b855a50 <col:16, line:70:2>     |   |-CallExpr 0x13b8553c0 <line:62:3, col:35> 'int'     |   | |-ImplicitCastExpr 0x13b8553a8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x13b855318 <col:3> 'int ()' Function 0x13b855260 'ND_TCHECK2' 'int ()'     |   | |-ImplicitCastExpr 0x13b855408 <col:14, col:15> 'int' <IntegralCast>     |   | | `-ImplicitCastExpr 0x13b8553f0 <col:14, col:15> 'unsigned char' <LValueToRValue>     |   | |   `-UnaryOperator 0x13b855370 <col:14, col:15> 'const unsigned char' lvalue prefix '*' cannot overflow     |   | |     `-ImplicitCastExpr 0x13b855358 <col:15> 'const unsigned char *' <LValueToRValue>     |   | |       `-DeclRefExpr 0x13b855338 <col:15> 'const unsigned char *' lvalue Var 0x13b8518f8 'typedata' 'const unsigned char *'     |   | `-ImplicitCastExpr 0x13b855420 <col:25> 'int' <LValueToRValue>     |   |   `-DeclRefExpr 0x13b855388 <col:25> 'int' lvalue Var 0x13b851658 'idtype_len' 'int'     |   `-ForStmt 0x13b855a18 <line:63:3, line:69:3>     |     |-BinaryOperator 0x13b855478 <line:63:7, col:9> 'int' '='     |     | |-DeclRefExpr 0x13b855438 <col:7> 'int' lvalue Var 0x13b8516d8 'i' 'int'     |     | `-IntegerLiteral 0x13b855458 <col:9> 'int' 0     |     |-<<<NULL>>>     |     |-BinaryOperator 0x13b855508 <col:12, col:14> 'int' '<'     |     | |-ImplicitCastExpr 0x13b8554d8 <col:12> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x13b855498 <col:12> 'int' lvalue Var 0x13b8516d8 'i' 'int'     |     | `-ImplicitCastExpr 0x13b8554f0 <col:14> 'int' <LValueToRValue>     |     |   `-DeclRefExpr 0x13b8554b8 <col:14> 'int' lvalue Var 0x13b851658 'idtype_len' 'int'     |     |-UnaryOperator 0x13b855548 <col:26, col:27> 'int' postfix '++'     |     | `-DeclRefExpr 0x13b855528 <col:26> 'int' lvalue Var 0x13b8516d8 'i' 'int'     |     `-CompoundStmt 0x13b855a00 <col:31, line:69:3>     |       `-IfStmt 0x13b8559d0 <line:64:4, line:68:4> has_else     |         |-CallExpr 0x13b855708 <line:64:7, col:29> 'int'     |         | |-ImplicitCastExpr 0x13b8556f0 <col:7> 'int (*)()' <FunctionToPointerDecay>     |         | | `-DeclRefExpr 0x13b855640 <col:7> 'int ()' Function 0x13b855588 'ND_ISPRINT' 'int ()'     |         | `-ImplicitCastExpr 0x13b855748 <col:18, col:28> 'int' <IntegralCast>     |         |   `-ImplicitCastExpr 0x13b855730 <col:18, col:28> 'unsigned char' <LValueToRValue>     |         |     `-ArraySubscriptExpr 0x13b8556d0 <col:18, col:28> 'const unsigned char' lvalue     |         |       |-ImplicitCastExpr 0x13b8556a0 <col:18> 'const unsigned char *' <LValueToRValue>     |         |       | `-DeclRefExpr 0x13b855660 <col:18> 'const unsigned char *' lvalue Var 0x13b8518f8 'typedata' 'const unsigned char *'     |         |       `-ImplicitCastExpr 0x13b8556b8 <col:27> 'int' <LValueToRValue>     |         |         `-DeclRefExpr 0x13b855680 <col:27> 'int' lvalue Var 0x13b8516d8 'i' 'int'     |         |-CompoundStmt 0x13b8558d8 <col:32, line:66:4>     |         | `-CallExpr 0x13b8558b0 <line:65:5, col:39> '<dependent type>' contains-errors     |         |   |-DeclRefExpr 0x13b855760 <col:5> 'int ()' Function 0x13b8523f8 'ND_PRINT' 'int ()'     |         |   `-ParenExpr 0x13b855890 <col:14, col:38> 'const unsigned char' contains-errors     |         |     `-BinaryOperator 0x13b855870 <col:15, col:37> 'const unsigned char' contains-errors ','     |         |       |-BinaryOperator 0x13b8557c0 <col:15, col:20> 'char[4]' contains-errors ','     |         |       | |-RecoveryExpr 0x13b855780 <col:15> '<dependent type>' contains-errors lvalue     |         |       | `-StringLiteral 0x13b8557a0 <col:20> 'char[4]' lvalue \"STR\"     |         |       `-ArraySubscriptExpr 0x13b855850 <col:27, col:37> 'const unsigned char' lvalue     |         |         |-ImplicitCastExpr 0x13b855820 <col:27> 'const unsigned char *' <LValueToRValue>     |         |         | `-DeclRefExpr 0x13b8557e0 <col:27> 'const unsigned char *' lvalue Var 0x13b8518f8 'typedata' 'const unsigned char *'     |         |         `-ImplicitCastExpr 0x13b855838 <col:36> 'int' <LValueToRValue>     |         |           `-DeclRefExpr 0x13b855800 <col:36> 'int' lvalue Var 0x13b8516d8 'i' 'int'     |         `-CompoundStmt 0x13b8559b8 <line:66:11, line:68:4>     |           `-CallExpr 0x13b855990 <line:67:5, col:26> '<dependent type>' contains-errors     |             |-DeclRefExpr 0x13b8558f0 <col:5> 'int ()' Function 0x13b8523f8 'ND_PRINT' 'int ()'     |             `-ParenExpr 0x13b855970 <col:14, col:25> 'char[4]' contains-errors     |               `-BinaryOperator 0x13b855950 <col:15, col:20> 'char[4]' contains-errors ','     |                 |-RecoveryExpr 0x13b855910 <col:15> '<dependent type>' contains-errors lvalue     |                 `-StringLiteral 0x13b855930 <col:20> 'char[4]' lvalue \"STR\"     |-IfStmt 0x13b855b98 <line:71:2, line:74:2>     | |-ImplicitCastExpr 0x13b855ab0 <line:71:5> 'unsigned int' <LValueToRValue>     | | `-DeclRefExpr 0x13b855a90 <col:5> 'unsigned int' lvalue Var 0x13b851810 'dumphex' 'unsigned int'     | `-CompoundStmt 0x13b855b80 <col:14, line:74:2>     |   `-IfStmt 0x13b855b60 <line:72:3, line:73:9>     |     |-RecoveryExpr 0x13b855b28 <line:72:7, col:59> '_Bool' contains-errors     |     `-GotoStmt 0x13b855b48 <line:73:4, col:9> 'trunc' 0x13b852a10     `-LabelStmt 0x13b856358 <line:77:1, line:78:35> 'trunc'       `-CallExpr 0x13b856330 <col:2, col:35> '<dependent type>' contains-errors         |-DeclRefExpr 0x13b855bb8 <col:2> 'int ()' Function 0x13b8523f8 'ND_PRINT' 'int ()'         `-ParenExpr 0x13b856310 <col:11, col:34> 'int' contains-errors           `-BinaryOperator 0x13b8562f0 <col:12, col:33> 'int' contains-errors ','             |-BinaryOperator 0x13b856220 <col:12, col:16> 'char[4]' contains-errors ','             | |-RecoveryExpr 0x13b855bd8 <col:12> '<dependent type>' contains-errors lvalue             | `-StringLiteral 0x13b856200 <col:16> 'char[4]' lvalue \"STR\"             `-CallExpr 0x13b856298 <col:23, col:33> 'int'               |-ImplicitCastExpr 0x13b856280 <col:23> 'int (*)()' <FunctionToPointerDecay>               | `-DeclRefExpr 0x13b856240 <col:23> 'int ()' Function 0x13b851f48 'NPSTR' 'int ()'               `-ImplicitCastExpr 0x13b8562d8 <col:29> 'int' <IntegralCast>                 `-ImplicitCastExpr 0x13b8562c0 <col:29> 'char' <LValueToRValue>                   `-DeclRefExpr 0x13b856260 <col:29> 'char' lvalue ParmVar 0x13b8385a0 'tpay' 'char' ","19559":"`-FunctionDecl 0x14c146328  col:2 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x14c146428 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x14c1463d0 <<invalid sloc>> Implicit 873 ","19413":"`-FunctionDecl 0x12504b348  line:1:12 uas_switch_interface 'int (struct usb_device *, struct usb_interface *)' static   |-ParmVarDecl 0x12501ee48 <col:33, col:52> col:52 used udev 'struct usb_device *'   |-ParmVarDecl 0x12504b228 <line:2:5, col:27> col:27 used intf 'struct usb_interface *'   `-CompoundStmt 0x12504bc70 <line:3:1, line:12:1>     |-DeclStmt 0x12504b638 <line:4:2, col:32>     | |-RecordDecl 0x12504b448 <col:2, col:9> col:9 struct usb_host_interface     | `-VarDecl 0x12504b5b8 <col:2, col:29> col:29 used alt 'struct usb_host_interface *'     |-BinaryOperator 0x12504b880 <line:6:2, col:37> 'struct usb_host_interface *' '='     | |-DeclRefExpr 0x12504b650 <col:2> 'struct usb_host_interface *' lvalue Var 0x12504b5b8 'alt' 'struct usb_host_interface *'     | `-ImplicitCastExpr 0x12504b868 <col:8, col:37> 'struct usb_host_interface *' <IntegralToPointer>     |   `-CallExpr 0x12504b828 <col:8, col:37> 'int'     |     |-ImplicitCastExpr 0x12504b810 <col:8> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x12504b7a0 <col:8> 'int ()' Function 0x12504b6e8 'uas_find_uas_alt_setting' 'int ()'     |     `-ImplicitCastExpr 0x12504b850 <col:33> 'struct usb_interface *' <LValueToRValue>     |       `-DeclRefExpr 0x12504b7c0 <col:33> 'struct usb_interface *' lvalue ParmVar 0x12504b228 'intf' 'struct usb_interface *'     |-IfStmt 0x12504b998 <line:7:2, line:8:11>     | |-UnaryOperator 0x12504b8d8 <line:7:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12504b8c0 <col:7> 'struct usb_host_interface *' <LValueToRValue>     | |   `-DeclRefExpr 0x12504b8a0 <col:7> 'struct usb_host_interface *' lvalue Var 0x12504b5b8 'alt' 'struct usb_host_interface *'     | `-ReturnStmt 0x12504b988 <line:8:3, col:11>     |   `-UnaryOperator 0x12504b970 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12504b958 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12504b938 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12504bc60 <line:10:2, line:11:31>       `-CallExpr 0x12504bc28 <line:10:9, line:11:31> '<dependent type>' contains-errors         |-DeclRefExpr 0x12504ba98 <line:10:9> 'int ()' Function 0x12504b9e0 'usb_set_interface' 'int ()'         |-DeclRefExpr 0x12504bab8 <col:27> 'struct usb_device *' lvalue ParmVar 0x12501ee48 'udev' 'struct usb_device *'         |-CXXDependentScopeMemberExpr 0x12504bb38 <col:33, col:43> '<dependent type>' contains-errors lvalue .bInterfaceNumber         | `-RecoveryExpr 0x12504bb10 <col:33, col:38> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x12504bad8 <col:33> 'struct usb_host_interface *' lvalue Var 0x12504b5b8 'alt' 'struct usb_host_interface *'         `-CXXDependentScopeMemberExpr 0x12504bbe0 <line:11:4, col:14> '<dependent type>' contains-errors lvalue .bAlternateSetting           `-RecoveryExpr 0x12504bbb8 <col:4, col:9> '<dependent type>' contains-errors lvalue             `-DeclRefExpr 0x12504bb80 <col:4> 'struct usb_host_interface *' lvalue Var 0x12504b5b8 'alt' 'struct usb_host_interface *' ","19912":"`-FunctionDecl 0x1429419f8  line:1:1 referenced invalid SetOnMsgReceive 'int (int *, int (*)(int *))'   |-ParmVarDecl 0x142928128 <col:17, col:30> col:30 referenced invalid pThis 'int *'   |-ParmVarDecl 0x1429418d0 <col:37, <invalid sloc>> col:37 invalid rsRetVal 'int (*)(int *)'   `-CompoundStmt 0x142941bd8 <line:2:1, line:6:1>     `-BinaryOperator 0x142941bb8 <line:4:2, col:27> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x142941af8 <col:2, col:9> '<dependent type>' contains-errors lvalue ->DoSubmitMessage       | `-RecoveryExpr 0x142941ad0 <col:2> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x142941ab0 <col:2> 'int *' lvalue ParmVar 0x142928128 'pThis' 'int *'       `-RecoveryExpr 0x142941b98 <col:27> '<dependent type>' contains-errors lvalue ","19860":"`-FunctionDecl 0x141128258  line:1:17 invalid HuffmanTree_getCode 'unsigned int (const int *, unsigned int)' static   |-ParmVarDecl 0x1411280f0 <col:37, col:56> col:56 invalid tree 'const int *'   |-ParmVarDecl 0x141128170 <col:62, col:71> col:71 used index 'unsigned int'   `-CompoundStmt 0x1411283f8 <line:2:1, line:4:1>     `-ReturnStmt 0x1411283e8 <line:3:3, col:28>       `-ArraySubscriptExpr 0x1411283c8 <col:10, col:28> '<dependent type>' contains-errors lvalue         |-ImplicitCastExpr 0x141128398 <col:10, col:16> '<dependent type>' contains-errors <LValueToRValue>         | `-CXXDependentScopeMemberExpr 0x141128330 <col:10, col:16> '<dependent type>' contains-errors lvalue ->tree1d         |   `-RecoveryExpr 0x141128310 <col:10> '<dependent type>' contains-errors lvalue         `-ImplicitCastExpr 0x1411283b0 <col:23> 'unsigned int' <LValueToRValue>           `-DeclRefExpr 0x141128378 <col:23> 'unsigned int' lvalue ParmVar 0x141128170 'index' 'unsigned int' ","19234":"`-FunctionDecl 0x14800dda8  line:1:5 diskutil_unloop 'int (const char *)'   |-ParmVarDecl 0x14800dcd8 <col:21, col:33> col:33 used lodev 'const char *'   `-CompoundStmt 0x13f923148 <line:2:1, line:46:1>     |-DeclStmt 0x14800df40 <line:3:5, col:14>     | `-VarDecl 0x14800deb8 <col:5, col:13> col:9 used i 'int' cinit     |   `-IntegerLiteral 0x14800df20 <col:13> 'int' 0     |-DeclStmt 0x14800e028 <line:4:5, col:22>     | `-VarDecl 0x14800df70 <col:5, col:15> col:9 used ret 'int' cinit     |   `-RecoveryExpr 0x14800e008 <col:15> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x14800e0e0 <line:5:5, col:20>     | `-VarDecl 0x14800e058 <col:5, col:19> col:9 used retried 'int' cinit     |   `-IntegerLiteral 0x14800e0c0 <col:19> 'int' 0     |-DeclStmt 0x14800e1b0 <line:6:5, col:24>     | `-VarDecl 0x14800e110 <col:5, col:20> col:11 used output 'char *' cinit     |   `-RecoveryExpr 0x14800e190 <col:20> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13f922f10 <line:9:5, line:42:5>     | |-ImplicitCastExpr 0x14800e1e8 <line:9:9> 'const char *' <LValueToRValue>     | | `-DeclRefExpr 0x14800e1c8 <col:9> 'const char *' lvalue ParmVar 0x14800dcd8 'lodev' 'const char *'     | `-CompoundStmt 0x13f922ee0 <col:16, line:42:5>     |   |-CallExpr 0x148027800 <line:10:9, col:30> 'int'     |   | |-ImplicitCastExpr 0x14800e3e0 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14800e310 <col:9> 'int ()' Function 0x14800e258 'LOGDEBUG' 'int ()'     |   | |-ImplicitCastExpr 0x148027830 <col:18> 'char *' <ArrayToPointerDecay>     |   | | `-StringLiteral 0x14800e370 <col:18> 'char[4]' lvalue \"STR\"     |   | `-ImplicitCastExpr 0x148027848 <col:25> 'const char *' <LValueToRValue>     |   |   `-DeclRefExpr 0x14800e390 <col:25> 'const char *' lvalue ParmVar 0x14800dcd8 'lodev' 'const char *'     |   |-ForStmt 0x1480285d8 <line:14:9, line:33:9>     |   | |-BinaryOperator 0x1480278a0 <line:14:14, col:18> 'int' '='     |   | | |-DeclRefExpr 0x148027860 <col:14> 'int' lvalue Var 0x14800deb8 'i' 'int'     |   | | `-IntegerLiteral 0x148027880 <col:18> 'int' 0     |   | |-<<<NULL>>>     |   | |-BinaryOperator 0x148027938 <col:21, col:25> 'int' contains-errors '<'     |   | | |-DeclRefExpr 0x1480278c0 <col:21> 'int' lvalue Var 0x14800deb8 'i' 'int'     |   | | `-RecoveryExpr 0x148027918 <col:25> '<dependent type>' contains-errors lvalue     |   | |-UnaryOperator 0x148027978 <col:39, col:40> 'int' postfix '++'     |   | | `-DeclRefExpr 0x148027958 <col:39> 'int' lvalue Var 0x14800deb8 'i' 'int'     |   | `-CompoundStmt 0x148028590 <col:44, line:33:9>     |   |   |-CallExpr 0x148027c18 <line:16:13, col:27> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x148027b98 <col:13> 'int ()' Function 0x148027ae0 'sem_p' 'int ()'     |   |   | `-RecoveryExpr 0x148027bf8 <col:19> '<dependent type>' contains-errors lvalue     |   |   |-CompoundStmt 0x148027e18 <line:17:13, line:19:13>     |   |   |-CallExpr 0x148027f88 <line:20:13, col:27> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x148027f08 <col:13> 'int ()' Function 0x148027e50 'sem_v' 'int ()'     |   |   | `-RecoveryExpr 0x148027f68 <col:19> '<dependent type>' contains-errors lvalue     |   |   |-IfStmt 0x1480282f0 <line:22:13, line:28:13> has_else     |   |   | |-UnaryOperator 0x148027fe8 <line:22:17, col:18> 'int' contains-errors prefix '!' cannot overflow     |   |   | | `-ImplicitCastExpr 0x148027fd0 <col:18> 'char *' contains-errors <LValueToRValue>     |   |   | |   `-DeclRefExpr 0x148027fb0 <col:18> 'char *' contains-errors lvalue Var 0x14800e110 'output' 'char *'     |   |   | |-CompoundStmt 0x148028098 <col:26, line:24:13>     |   |   | | `-BinaryOperator 0x148028078 <line:23:17, col:23> 'int' contains-errors '='     |   |   | |   |-DeclRefExpr 0x148028000 <col:17> 'int' contains-errors lvalue Var 0x14800df70 'ret' 'int'     |   |   | |   `-RecoveryExpr 0x148028058 <col:23> '<dependent type>' contains-errors lvalue     |   |   | `-CompoundStmt 0x1480282c8 <line:24:20, line:28:13>     |   |   |   |-BinaryOperator 0x148028128 <line:25:17, col:23> 'int' contains-errors '='     |   |   |   | |-DeclRefExpr 0x1480280b0 <col:17> 'int' contains-errors lvalue Var 0x14800df70 'ret' 'int'     |   |   |   | `-RecoveryExpr 0x148028108 <col:23> '<dependent type>' contains-errors lvalue     |   |   |   |-CallExpr 0x148028280 <line:26:17, col:33> 'int' contains-errors     |   |   |   | |-ImplicitCastExpr 0x148028268 <col:17> 'int (*)()' <FunctionToPointerDecay>     |   |   |   | | `-DeclRefExpr 0x148028228 <col:17> 'int ()' Function 0x148028170 'EUCA_FREE' 'int ()'     |   |   |   | `-ImplicitCastExpr 0x1480282a8 <col:27> 'char *' contains-errors <LValueToRValue>     |   |   |   |   `-DeclRefExpr 0x148028248 <col:27> 'char *' contains-errors lvalue Var 0x14800e110 'output' 'char *'     |   |   |   `-BreakStmt 0x1480282c0 <line:27:17>     |   |   |-CallExpr 0x148028398 <line:30:13, col:34> 'int'     |   |   | |-ImplicitCastExpr 0x148028380 <col:13> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x148028320 <col:13> 'int ()' Function 0x14800e258 'LOGDEBUG' 'int ()'     |   |   | |-ImplicitCastExpr 0x1480283c8 <col:22> 'char *' <ArrayToPointerDecay>     |   |   | | `-StringLiteral 0x148028340 <col:22> 'char[4]' lvalue \"STR\"     |   |   | `-ImplicitCastExpr 0x1480283e0 <col:29> 'const char *' <LValueToRValue>     |   |   |   `-DeclRefExpr 0x148028360 <col:29> 'const char *' lvalue ParmVar 0x14800dcd8 'lodev' 'const char *'     |   |   |-UnaryOperator 0x148028418 <line:31:13, col:20> 'int' postfix '++'     |   |   | `-DeclRefExpr 0x1480283f8 <col:13> 'int' lvalue Var 0x14800e058 'retried' 'int'     |   |   `-CallExpr 0x148028568 <line:32:13, col:20> 'int'     |   |     |-ImplicitCastExpr 0x148028550 <col:13> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x148028510 <col:13> 'int ()' Function 0x148028458 'sleep' 'int ()'     |   |     `-IntegerLiteral 0x148028530 <col:19> 'int' 1     |   |-IfStmt 0x13f922e48 <line:35:9, line:39:9> has_else     |   | |-RecoveryExpr 0x148028630 <line:35:13, col:20> '_Bool' contains-errors     |   | |-CompoundStmt 0x1480287c8 <col:32, line:37:9>     |   | | `-CallExpr 0x148028788 <line:36:13, col:26> 'int'     |   | |   |-ImplicitCastExpr 0x148028770 <col:13> 'int (*)()' <FunctionToPointerDecay>     |   | |   | `-DeclRefExpr 0x148028730 <col:13> 'int ()' Function 0x148028678 'LOGWARN' 'int ()'     |   | |   `-ImplicitCastExpr 0x1480287b0 <col:21> 'char *' <ArrayToPointerDecay>     |   | |     `-StringLiteral 0x148028750 <col:21> 'char[4]' lvalue \"STR\"     |   | `-IfStmt 0x13f922e28 <line:37:16, line:39:9>     |   |   |-ImplicitCastExpr 0x13f922c00 <line:37:20> 'int' <LValueToRValue>     |   |   | `-DeclRefExpr 0x1480287e0 <col:20> 'int' lvalue Var 0x14800e058 'retried' 'int'     |   |   `-CompoundStmt 0x13f922e10 <col:29, line:39:9>     |   |     `-CallExpr 0x13f922d90 <line:38:13, col:42> 'int'     |   |       |-ImplicitCastExpr 0x13f922d78 <col:13> 'int (*)()' <FunctionToPointerDecay>     |   |       | `-DeclRefExpr 0x13f922cf8 <col:13> 'int ()' Function 0x13f922c40 'LOGINFO' 'int ()'     |   |       |-ImplicitCastExpr 0x13f922dc8 <col:21> 'char *' <ArrayToPointerDecay>     |   |       | `-StringLiteral 0x13f922d18 <col:21> 'char[4]' lvalue \"STR\"     |   |       |-ImplicitCastExpr 0x13f922de0 <col:28> 'const char *' <LValueToRValue>     |   |       | `-DeclRefExpr 0x13f922d38 <col:28> 'const char *' lvalue ParmVar 0x14800dcd8 'lodev' 'const char *'     |   |       `-ImplicitCastExpr 0x13f922df8 <col:35> 'int' <LValueToRValue>     |   |         `-DeclRefExpr 0x13f922d58 <col:35> 'int' lvalue Var 0x14800e058 'retried' 'int'     |   `-ReturnStmt 0x13f922ed0 <line:41:9, col:20>     |     `-ImplicitCastExpr 0x13f922eb8 <col:16, col:20> 'int' contains-errors <LValueToRValue>     |       `-ParenExpr 0x13f922e98 <col:16, col:20> 'int' contains-errors lvalue     |         `-DeclRefExpr 0x13f922e78 <col:17> 'int' contains-errors lvalue Var 0x14800df70 'ret' 'int'     `-CallExpr 0x13f923100 <line:44:5, col:29> 'int'       |-ImplicitCastExpr 0x13f9230e8 <col:5> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x13f922f30 <col:5> 'int ()' Function 0x148028678 'LOGWARN' 'int ()'       |-ImplicitCastExpr 0x13f923130 <col:13> 'char *' <ArrayToPointerDecay>       | `-StringLiteral 0x13f922f50 <col:13> 'char[4]' lvalue \"STR\"       `-CallExpr 0x13f9230a8 <col:20, col:28> 'int'         |-ImplicitCastExpr 0x13f923090 <col:20> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x13f923050 <col:20> 'int ()' Function 0x13f922f98 'SP' 'int ()'         `-ImplicitCastExpr 0x13f9230d0 <col:23> 'const char *' <LValueToRValue>           `-DeclRefExpr 0x13f923070 <col:23> 'const char *' lvalue ParmVar 0x14800dcd8 'lodev' 'const char *' ","20040":"`-FunctionDecl 0x1381281f0  line:1:13 invalid _php_mb_regex_globals_dtor 'void (int *)' static   |-ParmVarDecl 0x138128128 <col:40, col:63> col:63 invalid pglobals 'int *'   `-CompoundStmt 0x1381284c8 <line:2:1, line:4:1>     `-CallExpr 0x1381284a0 <line:3:2, col:36> '<dependent type>' contains-errors       |-DeclRefExpr 0x138128400 <col:2> 'int ()' Function 0x138128348 'zend_hash_destroy' 'int ()'       `-UnaryOperator 0x138128488 <col:20, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow         `-CXXDependentScopeMemberExpr 0x138128440 <col:21, col:31> '<dependent type>' contains-errors lvalue ->ht_rc           `-RecoveryExpr 0x138128420 <col:21> '<dependent type>' contains-errors lvalue ","19558":"`-FunctionDecl 0x14f81f480  line:1:13 invalid set_error_response 'void (int *, int)' static   |-ParmVarDecl 0x14f81f328 <col:32, col:43> col:43 referenced invalid stream 'int *'   |-ParmVarDecl 0x14f81f3a8 <col:51, col:55> col:55 used http_status 'int'   `-CompoundStmt 0x14f81f860 <line:2:1, line:6:1>     `-IfStmt 0x14f81f840 <line:3:5, line:5:5>       |-UnaryOperator 0x14f81f6f8 <line:3:9, col:35> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-CallExpr 0x14f81f6d0 <col:10, col:35> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x14f81f690 <col:10> 'int ()' Function 0x14f81f5d8 'h2_stream_is_ready' 'int ()'       |   `-RecoveryExpr 0x14f81f6b0 <col:29> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x14f81f828 <col:38, line:5:5>         `-BinaryOperator 0x14f81f808 <line:4:9, col:37> '<dependent type>' contains-errors '='           |-CXXDependentScopeMemberExpr 0x14f81f7a0 <col:9, col:23> '<dependent type>' contains-errors lvalue ->http_status           | `-CXXDependentScopeMemberExpr 0x14f81f758 <col:9, col:17> '<dependent type>' contains-errors lvalue ->rtmp           |   `-RecoveryExpr 0x14f81f730 <col:9> '<dependent type>' contains-errors lvalue           |     `-DeclRefExpr 0x14f81f710 <col:9> 'int *' lvalue ParmVar 0x14f81f328 'stream' 'int *'           `-DeclRefExpr 0x14f81f7e8 <col:37> 'int' lvalue ParmVar 0x14f81f3a8 'http_status' 'int' ","19799":"`-FunctionDecl 0x1451281a8  line:1:1 PHP_FUNCTION 'int (int)'   |-ParmVarDecl 0x1451280d8 <col:14> col:14 used getenv 'int'   `-CompoundStmt 0x145141340 <line:2:1, line:51:1>     |-DeclStmt 0x1451283b8 <line:3:2, col:17>     | |-VarDecl 0x1451282b8 <col:2, col:8> col:8 used ptr 'char *'     | `-VarDecl 0x145128338 <col:2, col:14> col:14 used str 'char *'     |-DeclStmt 0x145128450 <line:4:2, col:13>     | `-VarDecl 0x1451283e8 <col:2, col:6> col:6 used str_len 'int'     |-IfStmt 0x145128760 <line:6:2, line:8:2>     | |-RecoveryExpr 0x145128730 <line:6:6, col:81> '_Bool' contains-errors     | `-CompoundStmt 0x145128750 <col:90, line:8:2>     |-IfStmt 0x145140d08 <line:12:2, line:14:2>     | |-ImplicitCastExpr 0x145140b38 <line:12:6> 'char *' <LValueToRValue>     | | `-DeclRefExpr 0x145140b18 <col:6> 'char *' lvalue Var 0x1451282b8 'ptr' 'char *'     | `-CompoundStmt 0x145140cf0 <col:11, line:14:2>     |   `-CallExpr 0x145140ca8 <line:13:3, col:23> 'int'     |     |-ImplicitCastExpr 0x145140c90 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x145140c30 <col:3> 'int ()' Function 0x145140b78 'RETURN_STRING' 'int ()'     |     |-ImplicitCastExpr 0x145140cd8 <col:17> 'char *' <LValueToRValue>     |     | `-DeclRefExpr 0x145140c50 <col:17> 'char *' lvalue Var 0x1451282b8 'ptr' 'char *'     |     `-IntegerLiteral 0x145140c70 <col:22> 'int' 0     |-BinaryOperator 0x1451411f0 <line:45:2, col:18> 'char *' contains-errors '='     | |-DeclRefExpr 0x145140d28 <col:2> 'char *' lvalue Var 0x1451282b8 'ptr' 'char *'     | `-RecoveryExpr 0x1451411c0 <col:8, col:18> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x145140d48 <col:8> 'int' lvalue ParmVar 0x1451280d8 'getenv' 'int'     |   `-DeclRefExpr 0x145140d68 <col:15> 'char *' lvalue Var 0x145128338 'str' 'char *'     `-IfStmt 0x145141320 <line:46:2, line:48:2>       |-ImplicitCastExpr 0x145141230 <line:46:6> 'char *' <LValueToRValue>       | `-DeclRefExpr 0x145141210 <col:6> 'char *' lvalue Var 0x1451282b8 'ptr' 'char *'       `-CompoundStmt 0x145141308 <col:11, line:48:2>         `-CallExpr 0x1451412c0 <line:47:3, col:23> 'int'           |-ImplicitCastExpr 0x1451412a8 <col:3> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x145141248 <col:3> 'int ()' Function 0x145140b78 'RETURN_STRING' 'int ()'           |-ImplicitCastExpr 0x1451412f0 <col:17> 'char *' <LValueToRValue>           | `-DeclRefExpr 0x145141268 <col:17> 'char *' lvalue Var 0x1451282b8 'ptr' 'char *'           `-IntegerLiteral 0x145141288 <col:22> 'int' 1 ","19532":"`-FunctionDecl 0x15580e350  line:1:13 drop_links 'void (struct nameidata *)' static   |-ParmVarDecl 0x15580e248 <col:24, col:42> col:42 used nd 'struct nameidata *'   `-CompoundStmt 0x155827078 <line:2:1, line:12:1>     |-DeclStmt 0x155826728 <line:3:2, col:19>     | `-VarDecl 0x155826660 <col:2, col:14> col:6 used i 'int' cinit     |   `-RecoveryExpr 0x155826700 <col:10, col:14> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1558266c8 <col:10> 'struct nameidata *' lvalue ParmVar 0x15580e248 'nd' 'struct nameidata *'     `-WhileStmt 0x155827058 <line:4:2, line:11:2>       |-UnaryOperator 0x155826760 <line:4:9, col:10> 'int' contains-errors postfix '--'       | `-DeclRefExpr 0x155826740 <col:9> 'int' contains-errors lvalue Var 0x155826660 'i' 'int'       `-CompoundStmt 0x155827030 <col:14, line:11:2>         |-DeclStmt 0x155826a08 <line:5:3, col:37>         | |-RecordDecl 0x155826778 <col:3, col:10> col:10 struct saved         | `-VarDecl 0x1558268e8 <col:3, col:36> col:17 used last 'struct saved *' cinit         |   `-BinaryOperator 0x1558269d0 <col:24, col:36> '<dependent type>' contains-errors '+'         |     |-RecoveryExpr 0x155826988 <col:24, col:28> '<dependent type>' contains-errors lvalue         |     | `-DeclRefExpr 0x155826950 <col:24> 'struct nameidata *' lvalue ParmVar 0x15580e248 'nd' 'struct nameidata *'         |     `-DeclRefExpr 0x1558269b0 <col:36> 'int' contains-errors lvalue Var 0x155826660 'i' 'int'         |-DeclStmt 0x155826c68 <line:6:3, col:36>         | |-RecordDecl 0x155826a20 <col:3, col:10> col:10 struct inode         | `-VarDecl 0x155826b88 <col:3, col:31> col:17 used inode 'struct inode *' cinit         |   `-RecoveryExpr 0x155826c28 <col:25, col:31> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x155826bf0 <col:25> 'struct saved *' contains-errors lvalue Var 0x1558268e8 'last' 'struct saved *'         `-IfStmt 0x155827010 <line:7:3, line:10:3>           |-BinaryOperator 0x155826d88 <line:7:7, col:36> 'int' contains-errors '&&'           | |-RecoveryExpr 0x155826cb8 <col:7, col:13> '<dependent type>' contains-errors lvalue           | | `-DeclRefExpr 0x155826c80 <col:7> 'struct saved *' contains-errors lvalue Var 0x1558268e8 'last' 'struct saved *'           | `-CXXDependentScopeMemberExpr 0x155826d40 <col:23, col:36> '<dependent type>' contains-errors lvalue ->put_link           |   `-RecoveryExpr 0x155826d18 <col:23, col:30> '<dependent type>' contains-errors lvalue           |     `-DeclRefExpr 0x155826ce0 <col:23> 'struct inode *' contains-errors lvalue Var 0x155826b88 'inode' 'struct inode *'           `-CompoundStmt 0x155826ff0 <col:46, line:10:3>             |-CallExpr 0x155826ed0 <line:8:4, col:45> '<dependent type>' contains-errors             | |-CXXDependentScopeMemberExpr 0x155826e08 <col:4, col:17> '<dependent type>' contains-errors lvalue ->put_link             | | `-RecoveryExpr 0x155826de0 <col:4, col:11> '<dependent type>' contains-errors lvalue             | |   `-DeclRefExpr 0x155826da8 <col:4> 'struct inode *' contains-errors lvalue Var 0x155826b88 'inode' 'struct inode *'             | |-DeclRefExpr 0x155826e50 <col:26> 'struct inode *' contains-errors lvalue Var 0x155826b88 'inode' 'struct inode *'             | `-RecoveryExpr 0x155826ea8 <col:33, col:39> '<dependent type>' contains-errors lvalue             |   `-DeclRefExpr 0x155826e70 <col:33> 'struct saved *' contains-errors lvalue Var 0x1558268e8 'last' 'struct saved *'             `-BinaryOperator 0x155826fd0 <line:9:4, col:19> '<dependent type>' contains-errors '='               |-RecoveryExpr 0x155826f38 <col:4, col:10> '<dependent type>' contains-errors lvalue               | `-DeclRefExpr 0x155826f00 <col:4> 'struct saved *' contains-errors lvalue Var 0x1558268e8 'last' 'struct saved *'               `-RecoveryExpr 0x155826fb0 <col:19> '<dependent type>' contains-errors lvalue ","20092":"`-FunctionDecl 0x13e9281a8  line:1:19 vmcs_field_readonly 'int (unsigned long)' static inline   |-ParmVarDecl 0x13e9280d8 <col:39, col:53> col:53 used field 'unsigned long'   `-CompoundStmt 0x13e928438 <line:2:1, line:4:1>     `-ReturnStmt 0x13e928428 <line:3:2, col:36>       `-ParenExpr 0x13e928408 <col:9, col:36> 'int'         `-BinaryOperator 0x13e9283e8 <col:10, col:35> 'int' '=='           |-ParenExpr 0x13e928390 <col:10, col:30> 'unsigned long'           | `-BinaryOperator 0x13e928370 <col:11, col:27> 'unsigned long' '&'           |   |-ParenExpr 0x13e928318 <col:11, col:23> 'unsigned long'           |   | `-BinaryOperator 0x13e9282f8 <col:12, col:21> 'unsigned long' '>>'           |   |   |-ImplicitCastExpr 0x13e9282e0 <col:12> 'unsigned long' <LValueToRValue>           |   |   | `-DeclRefExpr 0x13e9282a0 <col:12> 'unsigned long' lvalue ParmVar 0x13e9280d8 'field' 'unsigned long'           |   |   `-IntegerLiteral 0x13e9282c0 <col:21> 'int' 10           |   `-ImplicitCastExpr 0x13e928358 <col:27> 'unsigned long' <IntegralCast>           |     `-IntegerLiteral 0x13e928338 <col:27> 'int' 3           `-ImplicitCastExpr 0x13e9283d0 <col:35> 'unsigned long' <IntegralCast>             `-IntegerLiteral 0x13e9283b0 <col:35> 'int' 1 ","19469":"`-FunctionDecl 0x14c00de88  line:1:13 invalid cmd_ibm_sense_condition 'int (int *, int)' static   |-ParmVarDecl 0x14c00dd28 <col:37, col:47> col:47 referenced invalid s 'int *'   |-ParmVarDecl 0x14c00dda8 <col:50, col:58> col:58 invalid cmd 'int'   `-CompoundStmt 0x14c00e3a8 <line:2:1, line:13:1>     |-SwitchStmt 0x14c00dfc0 <line:3:5, line:10:5>     | |-ImplicitCastExpr 0x14c00dfa8 <line:3:13, col:16> '<dependent type>' contains-errors <LValueToRValue>     | | `-CXXDependentScopeMemberExpr 0x14c00df60 <col:13, col:16> '<dependent type>' contains-errors lvalue ->feature     | |   `-RecoveryExpr 0x14c00df40 <col:13> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14c00e330 <col:25, line:10:5>     |   |-CaseStmt 0x14c00e008 <line:4:5, line:5:22>     |   | |-IntegerLiteral 0x14c00dfe8 <line:4:10> 'int' 1     |   | `-BinaryOperator 0x14c00e0e0 <line:5:9, col:22> '<dependent type>' contains-errors '='     |   |   |-CXXDependentScopeMemberExpr 0x14c00e078 <col:9, col:12> '<dependent type>' contains-errors lvalue ->nsector     |   |   | `-RecoveryExpr 0x14c00e050 <col:9> '<dependent type>' contains-errors lvalue     |   |   |   `-DeclRefExpr 0x14c00e030 <col:9> 'int *' lvalue ParmVar 0x14c00dd28 's' 'int *'     |   |   `-IntegerLiteral 0x14c00e0c0 <col:22> 'int' 80     |   |-BreakStmt 0x14c00e100 <line:6:9>     |   |-DefaultStmt 0x14c00e2c8 <line:7:5, line:8:28>     |   | `-CallExpr 0x14c00e2a0 <col:9, col:28> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x14c00e260 <col:9> 'int ()' Function 0x14c00e1a8 'ide_abort_command' 'int ()'     |   |   `-RecoveryExpr 0x14c00e280 <col:27> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x14c00e320 <line:9:9, col:16>     |     `-RecoveryExpr 0x14c00e300 <col:16> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14c00e398 <line:12:5, col:12>       `-RecoveryExpr 0x14c00e378 <col:12> '<dependent type>' contains-errors lvalue ","19328":"`-FunctionDecl 0x14d80e350  line:1:13 vhost_vdpa_config_put 'void (struct vhost_vdpa *)' static   |-ParmVarDecl 0x14d80e248 <col:35, col:54> col:54 used v 'struct vhost_vdpa *'   `-CompoundStmt 0x14e808590 <line:2:1, line:7:1>     `-IfStmt 0x14e808570 <line:3:2, line:6:2>       |-RecoveryExpr 0x14e808280 <line:3:6, col:9> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x14e808248 <col:6> 'struct vhost_vdpa *' lvalue ParmVar 0x14d80e248 'v' 'struct vhost_vdpa *'       `-CompoundStmt 0x14e808550 <col:21, line:6:2>         |-CallExpr 0x14e808450 <line:4:3, col:32> '<dependent type>' contains-errors         | |-DeclRefExpr 0x14e8083d0 <col:3> 'int ()' Function 0x14e808318 'eventfd_ctx_put' 'int ()'         | `-RecoveryExpr 0x14e808428 <col:19, col:22> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x14e8083f0 <col:19> 'struct vhost_vdpa *' lvalue ParmVar 0x14d80e248 'v' 'struct vhost_vdpa *'         `-BinaryOperator 0x14e808530 <line:5:3, col:19> '<dependent type>' contains-errors '='           |-RecoveryExpr 0x14e8084b0 <col:3, col:6> '<dependent type>' contains-errors lvalue           | `-DeclRefExpr 0x14e808478 <col:3> 'struct vhost_vdpa *' lvalue ParmVar 0x14d80e248 'v' 'struct vhost_vdpa *'           `-RecoveryExpr 0x14e808510 <col:19> '<dependent type>' contains-errors lvalue ","19241":"`-FunctionDecl 0x12d1283a8  line:1:12 invalid set_sec_attr 'int (int *, unsigned int, unsigned int, unsigned int)' static   |-ParmVarDecl 0x12d128128 <col:25, col:36> col:36 invalid file 'int *'   |-ParmVarDecl 0x12d1281a8 <col:42, col:55> col:55 used am 'unsigned int'   |-ParmVarDecl 0x12d128228 <col:59, col:72> col:72 used ac 'unsigned int'   |-ParmVarDecl 0x12d1282a8 <line:2:2, col:15> col:15 used meth 'unsigned int'   `-CompoundStmt 0x12d142200 <line:3:1, line:23:1>     |-DeclStmt 0x12d1284f0 <line:4:2, col:28>     | `-VarDecl 0x12d128488 <col:2, col:23> col:23 referenced invalid table 'const int *'     |-IfStmt 0x12d128758 <line:7:2, line:8:10>     | |-BinaryOperator 0x12d1286a0 <line:7:6, col:33> 'int' contains-errors '&&'     | | |-BinaryOperator 0x12d128630 <col:6, col:14> 'int' contains-errors '=='     | | | |-DeclRefExpr 0x12d128508 <col:6> 'unsigned int' lvalue ParmVar 0x12d1282a8 'meth' 'unsigned int'     | | | `-RecoveryExpr 0x12d128610 <col:14> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x12d128680 <col:27, col:33> 'int' '=='     | |   |-ImplicitCastExpr 0x12d128650 <col:27> 'unsigned int' <LValueToRValue>     | |   | `-DeclRefExpr 0x12d128560 <col:27> 'unsigned int' lvalue ParmVar 0x12d128228 'ac' 'unsigned int'     | |   `-ImplicitCastExpr 0x12d128668 <col:33> 'unsigned int' <IntegralCast>     | |     `-IntegerLiteral 0x12d128580 <col:33> 'int' 0     | `-BinaryOperator 0x12d128738 <line:8:3, col:10> 'unsigned int' contains-errors '='     |   |-DeclRefExpr 0x12d1286c0 <col:3> 'unsigned int' lvalue ParmVar 0x12d1282a8 'meth' 'unsigned int'     |   `-RecoveryExpr 0x12d128718 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12d141d08 <line:10:2, line:17:10> has_else     | |-BinaryOperator 0x12d141840 <line:10:6, col:20> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x12d128798 <col:6, col:12> '<dependent type>' contains-errors lvalue ->type     | | | `-RecoveryExpr 0x12d128778 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12d141820 <col:20> '<dependent type>' contains-errors lvalue     | |-BinaryOperator 0x12d141900 <line:11:3, col:11> '<dependent type>' contains-errors '='     | | |-RecoveryExpr 0x12d141880 <col:3> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x12d141860 <col:3> 'const int *' lvalue Var 0x12d128488 'table' 'const int *'     | | `-RecoveryExpr 0x12d1418e0 <col:11> '<dependent type>' contains-errors lvalue     | `-IfStmt 0x12d141cd8 <line:12:7, line:17:10> has_else     |   |-BinaryOperator 0x12d1419e0 <line:12:11, col:25> 'int' contains-errors '=='     |   | |-CXXDependentScopeMemberExpr 0x12d141940 <col:11, col:17> '<dependent type>' contains-errors lvalue ->type     |   | | `-RecoveryExpr 0x12d141920 <col:11> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x12d1419c0 <col:25> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x12d141aa0 <line:13:3, col:11> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x12d141a20 <col:3> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x12d141a00 <col:3> 'const int *' lvalue Var 0x12d128488 'table' 'const int *'     |   | `-RecoveryExpr 0x12d141a80 <col:11> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x12d141ca8 <line:14:7, line:17:10> has_else     |     |-BinaryOperator 0x12d141b80 <line:14:11, col:25> 'int' contains-errors '=='     |     | |-CXXDependentScopeMemberExpr 0x12d141ae0 <col:11, col:17> '<dependent type>' contains-errors lvalue ->type     |     | | `-RecoveryExpr 0x12d141ac0 <col:11> '<dependent type>' contains-errors lvalue     |     | `-RecoveryExpr 0x12d141b60 <col:25> '<dependent type>' contains-errors lvalue     |     |-BinaryOperator 0x12d141c40 <line:15:3, col:11> '<dependent type>' contains-errors '='     |     | |-RecoveryExpr 0x12d141bc0 <col:3> '<dependent type>' contains-errors lvalue     |     | | `-DeclRefExpr 0x12d141ba0 <col:3> 'const int *' lvalue Var 0x12d128488 'table' 'const int *'     |     | `-RecoveryExpr 0x12d141c20 <col:11> '<dependent type>' contains-errors lvalue     |     `-ReturnStmt 0x12d141c98 <line:17:3, col:10>     |       `-RecoveryExpr 0x12d141c78 <col:10> '<dependent type>' contains-errors lvalue     |-ForStmt 0x12d142180 <line:18:2, line:21:2>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-BinaryOperator 0x12d141dc0 <line:18:9, col:22> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x12d141d58 <col:9, col:16> '<dependent type>' contains-errors lvalue ->am     | | | `-RecoveryExpr 0x12d141d38 <col:9> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x12d141da0 <col:22> 'int' 0     | |-UnaryOperator 0x12d141e00 <col:25, col:30> '<dependent type>' contains-errors postfix '++' cannot overflow     | | `-RecoveryExpr 0x12d141de0 <col:25> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12d142168 <col:34, line:21:2>     |   `-IfStmt 0x12d142148 <line:19:3, line:20:51>     |     |-BinaryOperator 0x12d141ea0 <line:19:7, col:19> '<dependent type>' contains-errors '&'     |     | |-CXXDependentScopeMemberExpr 0x12d141e38 <col:7, col:14> '<dependent type>' contains-errors lvalue ->am     |     | | `-RecoveryExpr 0x12d141e18 <col:7> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x12d141e80 <col:19> 'unsigned int' lvalue ParmVar 0x12d1281a8 'am' 'unsigned int'     |     `-CallExpr 0x12d142108 <line:20:4, col:51> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x12d142020 <col:4> 'int ()' Function 0x12d141f68 'sc_file_add_acl_entry' 'int ()'     |       |-RecoveryExpr 0x12d142040 <col:26> '<dependent type>' contains-errors lvalue     |       |-CXXDependentScopeMemberExpr 0x12d142080 <col:32, col:39> '<dependent type>' contains-errors lvalue ->sc     |       | `-RecoveryExpr 0x12d142060 <col:32> '<dependent type>' contains-errors lvalue     |       |-DeclRefExpr 0x12d1420c8 <col:43> 'unsigned int' lvalue ParmVar 0x12d1282a8 'meth' 'unsigned int'     |       `-DeclRefExpr 0x12d1420e8 <col:49> 'unsigned int' lvalue ParmVar 0x12d128228 'ac' 'unsigned int'     `-ReturnStmt 0x12d1421f0 <line:22:2, col:9>       `-RecoveryExpr 0x12d1421d0 <col:9> '<dependent type>' contains-errors lvalue ","19256":"`-FunctionDecl 0x15400de00  line:1:6 invalid groupGenerate 'void (const int)'   |-ParmVarDecl 0x15400dcf0 <col:20, <invalid sloc>> col:29 invalid 'const int'   `-CompoundStmt 0x154027f38 <line:2:1, line:35:1>     |-RecoveryExpr 0x15400dee0 <line:3:5> '<dependent type>' contains-errors lvalue     `-IfStmt 0x154027f08 <line:4:5, line:34:5> has_else       |-BinaryOperator 0x15400e1d8 <line:4:8, col:35> 'int' contains-errors '&&'       | |-CallExpr 0x15400e188 <col:8, col:30> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x15400e060 <col:8> 'int ()' Function 0x15400dfa8 'startsWith' 'int ()'       | | |-RecoveryExpr 0x15400e168 <col:19> '<dependent type>' contains-errors lvalue       | | `-StringLiteral 0x15400e0e0 <col:25> 'char[4]' lvalue \"STR\"       | `-RecoveryExpr 0x15400e1b8 <col:35> '<dependent type>' contains-errors lvalue       |-CompoundStmt 0x15400e2a0 <line:5:5, line:7:5>       `-IfStmt 0x154027ed8 <line:9:10, line:34:5> has_else         |-CallExpr 0x15400e358 <line:9:13, col:35> '<dependent type>' contains-errors         | |-DeclRefExpr 0x15400e2b0 <col:13> 'int ()' Function 0x15400dfa8 'startsWith' 'int ()'         | |-RecoveryExpr 0x15400e338 <col:24> '<dependent type>' contains-errors lvalue         | `-StringLiteral 0x15400e2e8 <col:30> 'char[4]' lvalue \"STR\"         |-CompoundStmt 0x154027bf8 <line:10:5, line:25:5>         `-CompoundStmt 0x154027ec0 <line:28:5, line:34:5>           `-ForStmt 0x154027e88 <line:29:9, line:33:9>             |-<<<NULL>>>             |-<<<NULL>>>             |-<<<NULL>>>             |-<<<NULL>>>             `-CompoundStmt 0x154027e78 <line:30:9, line:33:9> ","19591":"`-FunctionDecl 0x12389ad48  line:1:5 tcp_seq_open 'int (struct inode *, struct file *)'   |-ParmVarDecl 0x122074248 <col:18, col:32> col:32 used inode 'struct inode *'   |-ParmVarDecl 0x12389ac28 <col:39, col:52> col:52 used file 'struct file *'   `-CompoundStmt 0x122090630 <line:2:1, line:16:1>     |-DeclStmt 0x12389b248 <line:3:2, col:49>     | |-RecordDecl 0x12389ae48 <col:2, col:9> col:9 struct tcp_seq_afinfo     | `-VarDecl 0x12389afb8 <col:2, col:48> col:25 used afinfo 'struct tcp_seq_afinfo *' cinit     |   `-ImplicitCastExpr 0x12389b218 <col:34, col:48> 'struct tcp_seq_afinfo *' <IntegralToPointer>     |     `-CallExpr 0x12389b1d8 <col:34, col:48> 'int'     |       |-ImplicitCastExpr 0x12389b1c0 <col:34> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x12389b150 <col:34> 'int ()' Function 0x12389b098 'PDE_DATA' 'int ()'     |       `-ImplicitCastExpr 0x12389b200 <col:43> 'struct inode *' <LValueToRValue>     |         `-DeclRefExpr 0x12389b170 <col:43> 'struct inode *' lvalue ParmVar 0x122074248 'inode' 'struct inode *'     |-DeclStmt 0x12389b448 <line:4:2, col:26>     | |-RecordDecl 0x12389b260 <col:2, col:9> col:9 struct tcp_iter_state     | `-VarDecl 0x12389b3c8 <col:2, col:25> col:25 used s 'struct tcp_iter_state *'     |-DeclStmt 0x12389b4e0 <line:5:2, col:9>     | `-VarDecl 0x12389b478 <col:2, col:6> col:6 used err 'int'     |-IfStmt 0x12389b7e0 <line:9:2, line:10:10>     | |-BinaryOperator 0x12389b778 <line:9:6, col:12> 'int' '<'     | | |-ImplicitCastExpr 0x12389b760 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x12389b720 <col:6> 'int' lvalue Var 0x12389b478 'err' 'int'     | | `-IntegerLiteral 0x12389b740 <col:12> 'int' 0     | `-ReturnStmt 0x12389b7d0 <line:10:3, col:10>     |   `-ImplicitCastExpr 0x12389b7b8 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x12389b798 <col:10> 'int' lvalue Var 0x12389b478 'err' 'int'     |-BinaryOperator 0x12389ba58 <line:12:2, col:47> 'struct tcp_iter_state *' contains-errors '='     | |-DeclRefExpr 0x12389b800 <col:2> 'struct tcp_iter_state *' lvalue Var 0x12389b3c8 's' 'struct tcp_iter_state *'     | `-RecoveryExpr 0x12389ba30 <col:6, col:47> '<dependent type>' contains-errors lvalue     |   `-ParenExpr 0x12389ba10 <col:6, col:44> 'struct seq_file *' contains-errors     |     `-CStyleCastExpr 0x12389b9e8 <col:7, col:32> 'struct seq_file *' contains-errors <Dependent>     |       `-RecoveryExpr 0x12389b8f8 <col:26, col:32> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x12389b8c0 <col:26> 'struct file *' lvalue ParmVar 0x12389ac28 'file' 'struct file *'     |-BinaryOperator 0x12389bb38 <line:13:2, col:23> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12389bab0 <col:2, col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12389ba78 <col:2> 'struct tcp_iter_state *' lvalue Var 0x12389b3c8 's' 'struct tcp_iter_state *'     | `-RecoveryExpr 0x12389bb10 <col:15, col:23> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12389bad8 <col:15> 'struct tcp_seq_afinfo *' lvalue Var 0x12389afb8 'afinfo' 'struct tcp_seq_afinfo *'     |-BinaryOperator 0x12389bbd8 <line:14:2, col:17> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12389bb90 <col:2, col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12389bb58 <col:2> 'struct tcp_iter_state *' lvalue Var 0x12389b3c8 's' 'struct tcp_iter_state *'     | `-IntegerLiteral 0x12389bbb8 <col:17> 'int' 0     `-ReturnStmt 0x122090620 <line:15:2, col:9>       `-IntegerLiteral 0x122090600 <col:9> 'int' 0 ","20057":"`-FunctionDecl 0x12b928758  line:1:5 kvm_apic_accept_pic_intr 'int (struct kvm_vcpu *)'   |-ParmVarDecl 0x12b928648 <col:30, col:47> col:47 used vcpu 'struct kvm_vcpu *'   `-CompoundStmt 0x12b940f60 <line:2:1, line:11:1>     |-IfStmt 0x12b940cb8 <line:5:2, line:6:10>     | |-UnaryOperator 0x12b940c70 <line:5:6, col:42> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x12b940c48 <col:7, col:42> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12b940b80 <col:7> 'int ()' Function 0x12b940ac8 'kvm_apic_hw_enabled' 'int ()'     | |   `-CXXDependentScopeMemberExpr 0x12b940c00 <col:27, col:38> '<dependent type>' contains-errors lvalue .apic     | |     `-RecoveryExpr 0x12b940bd8 <col:27, col:33> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x12b940ba0 <col:27> 'struct kvm_vcpu *' lvalue ParmVar 0x12b928648 'vcpu' 'struct kvm_vcpu *'     | `-ReturnStmt 0x12b940ca8 <line:6:3, col:10>     |   `-IntegerLiteral 0x12b940c88 <col:10> 'int' 1     |-IfStmt 0x12b940f10 <line:7:2, line:9:10>     | |-RecoveryExpr 0x12b940ec0 <line:7:6, line:8:38> '_Bool' contains-errors     | `-ReturnStmt 0x12b940f00 <line:9:3, col:10>     |   `-IntegerLiteral 0x12b940ee0 <col:10> 'int' 1     `-ReturnStmt 0x12b940f50 <line:10:2, col:9>       `-IntegerLiteral 0x12b940f30 <col:9> 'int' 0 ","19442":"`-FunctionDecl 0x14100ddf8  line:1:1 invalid OJPEGReadHeaderInfoSecTablesQTable 'int (int *)'   |-ParmVarDecl 0x14100dd28 <col:36, col:42> col:42 invalid tif 'int *'   `-CompoundStmt 0x141029628 <line:2:1, line:52:1>     |-DeclStmt 0x14100e040 <line:3:2, col:34>     | `-VarDecl 0x14100df30 <col:2, col:29> col:20 used module 'const char[4]' static cinit     |   `-StringLiteral 0x14100dfe0 <col:29> 'const char[4]' \"STR\"     |-IfStmt 0x141028a30 <line:10:2, line:14:2>     | |-RecoveryExpr 0x14100e140 <line:10:6, col:28> '_Bool' contains-errors     | `-CompoundStmt 0x141028a10 <line:11:2, line:14:2>     |   |-CallExpr 0x14100e388 <line:12:3, col:48> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14100e2c0 <col:3> 'int ()' Function 0x14100e208 'TIFFErrorExt' 'int ()'     |   | |-CXXDependentScopeMemberExpr 0x14100e300 <col:16, col:21> '<dependent type>' contains-errors lvalue ->tif_clientdata     |   | | `-RecoveryExpr 0x14100e2e0 <col:16> '<dependent type>' contains-errors lvalue     |   | |-DeclRefExpr 0x14100e348 <col:36> 'const char[4]' lvalue Var 0x14100df30 'module' 'const char[4]'     |   | `-StringLiteral 0x14100e368 <col:43> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x141028a00 <line:13:3, col:11>     |     `-ParenExpr 0x14100e3e0 <col:9, col:11> 'int'     |       `-IntegerLiteral 0x14100e3c0 <col:10> 'int' 0     |-ForStmt 0x1410295a0 <line:16:2, line:50:2>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-BinaryOperator 0x141028be8 <line:16:12, col:18> 'int' contains-errors '<'     | | |-RecoveryExpr 0x141028b60 <col:12> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x141028ba0 <col:14, col:18> '<dependent type>' contains-errors lvalue ->samples_per_pixel     | |   `-RecoveryExpr 0x141028b80 <col:14> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x141028c58 <col:37, col:38> '<dependent type>' contains-errors postfix '++' cannot overflow     | | `-RecoveryExpr 0x141028c38 <col:37> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x141029588 <line:17:2, line:50:2>     |   `-IfStmt 0x141029558 <line:18:3, line:49:4> has_else     |     |-RecoveryExpr 0x141028d48 <line:18:7, col:93> '_Bool' contains-errors     |     |-CompoundStmt 0x141029510 <line:19:3, line:47:3>     |     | |-IfStmt 0x141029240 <line:30:4, line:34:4>     |     | | |-RecoveryExpr 0x1410290b0 <line:30:8, col:12> '_Bool' contains-errors     |     | | `-CompoundStmt 0x141029220 <line:31:4, line:34:4>     |     | |   |-CallExpr 0x141029198 <line:32:5, col:50> '<dependent type>' contains-errors     |     | |   | |-DeclRefExpr 0x1410290d0 <col:5> 'int ()' Function 0x14100e208 'TIFFErrorExt' 'int ()'     |     | |   | |-CXXDependentScopeMemberExpr 0x141029110 <col:18, col:23> '<dependent type>' contains-errors lvalue ->tif_clientdata     |     | |   | | `-RecoveryExpr 0x1410290f0 <col:18> '<dependent type>' contains-errors lvalue     |     | |   | |-DeclRefExpr 0x141029158 <col:38> 'const char[4]' lvalue Var 0x14100df30 'module' 'const char[4]'     |     | |   | `-StringLiteral 0x141029178 <col:45> 'char[4]' lvalue \"STR\"     |     | |   `-ReturnStmt 0x141029210 <line:33:5, col:13>     |     | |     `-ParenExpr 0x1410291f0 <col:11, col:13> 'int'     |     | |       `-IntegerLiteral 0x1410291d0 <col:12> 'int' 0     |     | `-IfStmt 0x1410294f0 <line:43:4, line:44:13>     |     |   |-RecoveryExpr 0x141029480 <line:43:8, col:11> '_Bool' contains-errors     |     |   `-ReturnStmt 0x1410294e0 <line:44:5, col:13>     |     |     `-ParenExpr 0x1410294c0 <col:11, col:13> 'int'     |     |       `-IntegerLiteral 0x1410294a0 <col:12> 'int' 0     |     `-NullStmt 0x141029550 <line:49:4>     `-ReturnStmt 0x141029618 <line:51:2, col:10>       `-ParenExpr 0x1410295f8 <col:8, col:10> 'int'         `-IntegerLiteral 0x1410295d8 <col:9> 'int' 1 ","20125":"`-FunctionDecl 0x12a140a00  line:1:6 cil_destroy_classperms_list 'void (struct cil_list **)'   |-ParmVarDecl 0x12a1286a8 <col:34, col:52> col:52 used cp_list 'struct cil_list **'   `-CompoundStmt 0x12a141790 <line:2:1, line:18:1>     |-DeclStmt 0x12a140ce8 <line:3:2, col:28>     | |-RecordDecl 0x12a140af8 <col:2, col:9> col:9 struct cil_list_item     | `-VarDecl 0x12a140c68 <col:2, col:24> col:24 used curr 'struct cil_list_item *'     |-IfStmt 0x12a140f10 <line:5:2, line:7:2>     | |-BinaryOperator 0x12a140ec8 <line:5:6, col:37> 'int' contains-errors '||'     | | |-BinaryOperator 0x12a140e38 <col:6, col:17> 'int' contains-errors '=='     | | | |-DeclRefExpr 0x12a140d00 <col:6> 'struct cil_list **' lvalue ParmVar 0x12a1286a8 'cp_list' 'struct cil_list **'     | | | `-RecoveryExpr 0x12a140e18 <col:17> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x12a140ea8 <col:25, col:37> 'int' contains-errors '=='     | |   |-UnaryOperator 0x12a140e70 <col:25, col:26> 'struct cil_list *' lvalue prefix '*' cannot overflow     | |   | `-ImplicitCastExpr 0x12a140e58 <col:26> 'struct cil_list **' <LValueToRValue>     | |   |   `-DeclRefExpr 0x12a140d70 <col:26> 'struct cil_list **' lvalue ParmVar 0x12a1286a8 'cp_list' 'struct cil_list **'     | |   `-RecoveryExpr 0x12a140e88 <col:37> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12a140ef8 <col:43, line:7:2>     |   `-ReturnStmt 0x12a140ee8 <line:6:3>     |-CallExpr 0x12a141118 <line:9:2, col:34> 'int'     | |-ImplicitCastExpr 0x12a141100 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12a141040 <col:2> 'int ()' Function 0x12a140f88 'cil_list_for_each' 'int ()'     | |-ImplicitCastExpr 0x12a141148 <col:20> 'struct cil_list_item *' <LValueToRValue>     | | `-DeclRefExpr 0x12a141060 <col:20> 'struct cil_list_item *' lvalue Var 0x12a140c68 'curr' 'struct cil_list_item *'     | `-ImplicitCastExpr 0x12a141160 <col:26, col:27> 'struct cil_list *' <LValueToRValue>     |   `-UnaryOperator 0x12a1410b8 <col:26, col:27> 'struct cil_list *' lvalue prefix '*' cannot overflow     |     `-ImplicitCastExpr 0x12a1410a0 <col:27> 'struct cil_list **' <LValueToRValue>     |       `-DeclRefExpr 0x12a141080 <col:27> 'struct cil_list **' lvalue ParmVar 0x12a1286a8 'cp_list' 'struct cil_list **'     |-CompoundStmt 0x12a1415c0 <col:36, line:15:2>     | `-IfStmt 0x12a141590 <line:10:3, line:14:3> has_else     |   |-BinaryOperator 0x12a141230 <line:10:7, col:23> 'int' contains-errors '=='     |   | |-RecoveryExpr 0x12a1411b0 <col:7, col:13> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x12a141178 <col:7> 'struct cil_list_item *' lvalue Var 0x12a140c68 'curr' 'struct cil_list_item *'     |   | `-RecoveryExpr 0x12a141210 <col:23> '<dependent type>' contains-errors lvalue     |   |-CompoundStmt 0x12a1413d8 <col:39, line:12:3>     |   | `-CallExpr 0x12a1413b0 <line:11:4, col:37> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x12a141330 <col:4> 'int ()' Function 0x12a141278 'cil_destroy_classperms' 'int ()'     |   |   `-RecoveryExpr 0x12a141388 <col:27, col:33> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x12a141350 <col:27> 'struct cil_list_item *' lvalue Var 0x12a140c68 'curr' 'struct cil_list_item *'     |   `-CompoundStmt 0x12a141578 <line:12:10, line:14:3>     |     `-CallExpr 0x12a141550 <line:13:4, col:41> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x12a1414d0 <col:4> 'int ()' Function 0x12a141418 'cil_destroy_classperms_set' 'int ()'     |       `-RecoveryExpr 0x12a141528 <col:31, col:37> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x12a1414f0 <col:31> 'struct cil_list_item *' lvalue Var 0x12a140c68 'curr' 'struct cil_list_item *'     `-CallExpr 0x12a141760 <line:17:2, col:37> '<dependent type>' contains-errors       |-DeclRefExpr 0x12a1416b8 <col:2> 'int ()' Function 0x12a141600 'cil_list_destroy' 'int ()'       |-DeclRefExpr 0x12a1416d8 <col:19> 'struct cil_list **' lvalue ParmVar 0x12a1286a8 'cp_list' 'struct cil_list **'       `-RecoveryExpr 0x12a141740 <col:28> '<dependent type>' contains-errors lvalue ","19271":"`-FunctionDecl 0x14e940b48  line:1:1 tcf_chain0_head_change_cb_del 'int (struct tcf_block *, struct tcf_block_ext_info *)'   |-ParmVarDecl 0x14e928648 <col:31, col:49> col:49 used block 'struct tcf_block *'   |-ParmVarDecl 0x14e940a28 <line:2:10, col:37> col:37 used ei 'struct tcf_block_ext_info *'   `-CompoundStmt 0x14f808858 <line:3:1, line:22:1>     |-DeclStmt 0x14e940e38 <line:4:2, col:41>     | |-RecordDecl 0x14e940c48 <col:2, col:9> col:9 struct tcf_filter_chain_list_item     | `-VarDecl 0x14e940db8 <col:2, col:37> col:37 used item 'struct tcf_filter_chain_list_item *'     |-CallExpr 0x14e941018 <line:6:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14e940f80 <col:2> 'int ()' Function 0x14e940ec8 'mutex_lock' 'int ()'     | `-UnaryOperator 0x14e941000 <col:13, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14e940fd8 <col:14, col:21> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14e940fa0 <col:14> 'struct tcf_block *' lvalue ParmVar 0x14e928648 'block' 'struct tcf_block *'     |-CallExpr 0x14e941290 <line:7:2, col:66> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14e941120 <col:2> 'int ()' Function 0x14e941068 'list_for_each_entry' 'int ()'     | |-DeclRefExpr 0x14e941140 <col:22> 'struct tcf_filter_chain_list_item *' lvalue Var 0x14e940db8 'item' 'struct tcf_filter_chain_list_item *'     | |-UnaryOperator 0x14e941208 <col:28, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x14e9411c0 <col:29, col:43> '<dependent type>' contains-errors lvalue .filter_chain_list     | |   `-RecoveryExpr 0x14e941198 <col:29, col:36> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x14e941160 <col:29> 'struct tcf_block *' lvalue ParmVar 0x14e928648 'block' 'struct tcf_block *'     | `-RecoveryExpr 0x14e941270 <col:62> '<dependent type>' contains-errors lvalue     |-CompoundStmt 0x14f808620 <col:68, line:19:2>     | `-IfStmt 0x14f808600 <line:8:3, line:18:3>     |   |-BinaryOperator 0x14e941628 <line:8:7, line:10:66> 'int' contains-errors '||'     |   | |-ParenExpr 0x14e941408 <line:8:7, col:61> 'int' contains-errors     |   | | `-BinaryOperator 0x14e9413e8 <col:8, col:39> 'int' contains-errors '&&'     |   | |   |-UnaryOperator 0x14e941340 <col:8, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | |   | `-ImplicitCastExpr 0x14e941328 <col:9, col:13> '<dependent type>' contains-errors <LValueToRValue>     |   | |   |   `-RecoveryExpr 0x14e941300 <col:9, col:13> '<dependent type>' contains-errors lvalue     |   | |   |     `-DeclRefExpr 0x14e9412c8 <col:9> 'struct tcf_block_ext_info *' lvalue ParmVar 0x14e940a28 'ei' 'struct tcf_block_ext_info *'     |   | |   `-UnaryOperator 0x14e9413d0 <col:34, col:39> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | |     `-ImplicitCastExpr 0x14e9413b8 <col:35, col:39> '<dependent type>' contains-errors <LValueToRValue>     |   | |       `-RecoveryExpr 0x14e941390 <col:35, col:39> '<dependent type>' contains-errors lvalue     |   | |         `-DeclRefExpr 0x14e941358 <col:35> 'struct tcf_block_ext_info *' lvalue ParmVar 0x14e940a28 'ei' 'struct tcf_block_ext_info *'     |   | `-ParenExpr 0x14e941608 <line:9:7, line:10:66> 'int' contains-errors     |   |   `-BinaryOperator 0x14e9415e8 <line:9:8, line:10:44> 'int' contains-errors '&&'     |   |     |-BinaryOperator 0x14e9414e8 <line:9:8, col:39> 'int' contains-errors '=='     |   |     | |-RecoveryExpr 0x14e941460 <col:8, col:14> '<dependent type>' contains-errors lvalue     |   |     | | `-DeclRefExpr 0x14e941428 <col:8> 'struct tcf_filter_chain_list_item *' lvalue Var 0x14e940db8 'item' 'struct tcf_filter_chain_list_item *'     |   |     | `-RecoveryExpr 0x14e9414c0 <col:35, col:39> '<dependent type>' contains-errors lvalue     |   |     |   `-DeclRefExpr 0x14e941488 <col:35> 'struct tcf_block_ext_info *' lvalue ParmVar 0x14e940a28 'ei' 'struct tcf_block_ext_info *'     |   |     `-BinaryOperator 0x14e9415c8 <line:10:8, col:44> 'int' contains-errors '=='     |   |       |-RecoveryExpr 0x14e941540 <col:8, col:14> '<dependent type>' contains-errors lvalue     |   |       | `-DeclRefExpr 0x14e941508 <col:8> 'struct tcf_filter_chain_list_item *' lvalue Var 0x14e940db8 'item' 'struct tcf_filter_chain_list_item *'     |   |       `-RecoveryExpr 0x14e9415a0 <col:40, col:44> '<dependent type>' contains-errors lvalue     |   |         `-DeclRefExpr 0x14e941568 <col:40> 'struct tcf_block_ext_info *' lvalue ParmVar 0x14e940a28 'ei' 'struct tcf_block_ext_info *'     |   `-CompoundStmt 0x14f8085c8 <col:69, line:18:3>     |     |-IfStmt 0x14e9418a8 <line:11:4, line:12:42>     |     | |-CXXDependentScopeMemberExpr 0x14e9416a8 <line:11:8, col:22> '<dependent type>' contains-errors lvalue .chain     |     | | `-RecoveryExpr 0x14e941680 <col:8, col:15> '<dependent type>' contains-errors lvalue     |     | |   `-DeclRefExpr 0x14e941648 <col:8> 'struct tcf_block *' lvalue ParmVar 0x14e928648 'block' 'struct tcf_block *'     |     | `-CallExpr 0x14e941878 <line:12:5, col:42> '<dependent type>' contains-errors     |     |   |-DeclRefExpr 0x14e9417d0 <col:5> 'int ()' Function 0x14e941718 'tcf_chain_head_change_item' 'int ()'     |     |   |-DeclRefExpr 0x14e9417f0 <col:32> 'struct tcf_filter_chain_list_item *' lvalue Var 0x14e940db8 'item' 'struct tcf_filter_chain_list_item *'     |     |   `-RecoveryExpr 0x14e941858 <col:38> '<dependent type>' contains-errors lvalue     |     |-CallExpr 0x14f808240 <line:13:4, col:24> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x14e9419a8 <col:4> 'int ()' Function 0x14e9418f0 'list_del' 'int ()'     |     | `-UnaryOperator 0x14f808228 <col:13, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |     |   `-RecoveryExpr 0x14f808200 <col:14, col:20> '<dependent type>' contains-errors lvalue     |     |     `-DeclRefExpr 0x14e9419c8 <col:14> 'struct tcf_filter_chain_list_item *' lvalue Var 0x14e940db8 'item' 'struct tcf_filter_chain_list_item *'     |     |-CallExpr 0x14f8083e0 <line:14:4, col:29> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x14f808348 <col:4> 'int ()' Function 0x14f808290 'mutex_unlock' 'int ()'     |     | `-UnaryOperator 0x14f8083c8 <col:17, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |     |   `-RecoveryExpr 0x14f8083a0 <col:18, col:25> '<dependent type>' contains-errors lvalue     |     |     `-DeclRefExpr 0x14f808368 <col:18> 'struct tcf_block *' lvalue ParmVar 0x14e928648 'block' 'struct tcf_block *'     |     |-CallExpr 0x14f808578 <line:16:4, col:14> 'int'     |     | |-ImplicitCastExpr 0x14f808560 <col:4> 'int (*)()' <FunctionToPointerDecay>     |     | | `-DeclRefExpr 0x14f8084e8 <col:4> 'int ()' Function 0x14f808430 'kfree' 'int ()'     |     | `-ImplicitCastExpr 0x14f8085a0 <col:10> 'struct tcf_filter_chain_list_item *' <LValueToRValue>     |     |   `-DeclRefExpr 0x14f808508 <col:10> 'struct tcf_filter_chain_list_item *' lvalue Var 0x14e940db8 'item' 'struct tcf_filter_chain_list_item *'     |     `-ReturnStmt 0x14f8085b8 <line:17:4>     |-CallExpr 0x14f8086d0 <line:20:2, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14f808638 <col:2> 'int ()' Function 0x14f808290 'mutex_unlock' 'int ()'     | `-UnaryOperator 0x14f8086b8 <col:15, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14f808690 <col:16, col:23> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14f808658 <col:16> 'struct tcf_block *' lvalue ParmVar 0x14e928648 'block' 'struct tcf_block *'     `-CallExpr 0x14f808830 <line:21:2, col:11> 'int'       |-ImplicitCastExpr 0x14f808818 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x14f8087d8 <col:2> 'int ()' Function 0x14f808720 'WARN_ON' 'int ()'       `-IntegerLiteral 0x14f8087f8 <col:10> 'int' 1 ","19654":"`-FunctionDecl 0x137008eb8  col:3 implicit used log 'double (double)' extern   |-ParmVarDecl 0x137008fb8 <<invalid sloc>> <invalid sloc> 'double'   |-BuiltinAttr 0x137008f60 <<invalid sloc>> Implicit 1106   |-ConstAttr 0x137009028 <col:3> Implicit   `-NoThrowAttr 0x137009050 <col:3> Implicit ","19344":"`-FunctionDecl 0x1309281a8  line:1:12 rfcomm_get_dev_list 'int (int)' static   |-ParmVarDecl 0x1309280d0 <col:32, col:37> col:37 __user 'int'   `-CompoundStmt 0x130944300 <line:2:1, line:49:1>     |-DeclStmt 0x130928488 <line:3:2, col:24>     | |-RecordDecl 0x1309282a0 <col:2, col:9> col:9 struct rfcomm_dev     | `-VarDecl 0x130928408 <col:2, col:21> col:21 used dev 'struct rfcomm_dev *'     |-DeclStmt 0x130928688 <line:4:2, col:32>     | |-RecordDecl 0x1309284a0 <col:2, col:9> col:9 struct rfcomm_dev_list_req     | `-VarDecl 0x130928608 <col:2, col:30> col:30 used dl 'struct rfcomm_dev_list_req *'     |-DeclStmt 0x130940aa8 <line:5:2, col:28>     | |-RecordDecl 0x1309286a0 <col:2, col:9> col:9 struct rfcomm_dev_info     | `-VarDecl 0x130940a28 <col:2, col:26> col:26 used di 'struct rfcomm_dev_info *'     |-DeclStmt 0x130940c80 <line:6:2, col:22>     | |-VarDecl 0x130940ad8 <col:2, col:10> col:6 used n 'int' cinit     | | `-IntegerLiteral 0x130940b40 <col:10> 'int' 0     | |-VarDecl 0x130940b78 <col:2, col:13> col:13 used size 'int'     | `-VarDecl 0x130940bf8 <col:2, col:19> col:19 used err 'int'     |-CallExpr 0x130940e88 <line:9:2, col:11> 'int'     | |-ImplicitCastExpr 0x130940e70 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x130940dc0 <col:2> 'int ()' Function 0x130940d08 'BT_DBG' 'int ()'     | `-ImplicitCastExpr 0x130940eb0 <col:9> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x130940e20 <col:9> 'char[1]' lvalue \"\"     |-IfStmt 0x1309410c0 <line:11:2, line:12:11>     | |-RecoveryExpr 0x130940ff8 <line:11:6, col:42> '_Bool' contains-errors     | `-ReturnStmt 0x1309410b0 <line:12:3, col:11>     |   `-UnaryOperator 0x130941098 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x130941080 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x130941060 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1309416f8 <line:14:2, line:15:11>     | |-RecoveryExpr 0x130941630 <line:14:6, col:56> '_Bool' contains-errors     | `-ReturnStmt 0x1309416e8 <line:15:3, col:11>     |   `-UnaryOperator 0x1309416d0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x1309416b8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x130941698 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x130943a30 <line:19:2, col:31> 'struct rfcomm_dev_list_req *' contains-errors '='     | |-DeclRefExpr 0x130941830 <col:2> 'struct rfcomm_dev_list_req *' lvalue Var 0x130928608 'dl' 'struct rfcomm_dev_list_req *'     | `-CallExpr 0x130943a00 <col:7, col:31> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x130941930 <col:7> 'int ()' Function 0x130941878 'kmalloc' 'int ()'     |   |-DeclRefExpr 0x130941950 <col:15> 'int' lvalue Var 0x130940b78 'size' 'int'     |   `-RecoveryExpr 0x1309419d8 <col:21> '<dependent type>' contains-errors lvalue     |-IfStmt 0x130943b48 <line:20:2, line:21:11>     | |-UnaryOperator 0x130943a88 <line:20:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x130943a70 <col:7> 'struct rfcomm_dev_list_req *' <LValueToRValue>     | |   `-DeclRefExpr 0x130943a50 <col:7> 'struct rfcomm_dev_list_req *' lvalue Var 0x130928608 'dl' 'struct rfcomm_dev_list_req *'     | `-ReturnStmt 0x130943b38 <line:21:3, col:11>     |   `-UnaryOperator 0x130943b20 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x130943b08 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x130943ae8 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x130943be8 <line:23:2, col:11> 'struct rfcomm_dev_info *' contains-errors '='     | |-DeclRefExpr 0x130943b68 <col:2> 'struct rfcomm_dev_info *' lvalue Var 0x130940a28 'di' 'struct rfcomm_dev_info *'     | `-RecoveryExpr 0x130943bc0 <col:7, col:11> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x130943b88 <col:7> 'struct rfcomm_dev_list_req *' lvalue Var 0x130928608 'dl' 'struct rfcomm_dev_list_req *'     |-BinaryOperator 0x130943ea8 <line:42:2, col:16> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x130943e60 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x130943e28 <col:2> 'struct rfcomm_dev_list_req *' lvalue Var 0x130928608 'dl' 'struct rfcomm_dev_list_req *'     | `-DeclRefExpr 0x130943e88 <col:16> 'int' lvalue Var 0x130940ad8 'n' 'int'     `-CallExpr 0x130944280 <line:46:2, col:10> 'int'       |-ImplicitCastExpr 0x130944268 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x130944228 <col:2> 'int ()' Function 0x130944170 'kfree' 'int ()'       `-ImplicitCastExpr 0x1309442a8 <col:8> 'struct rfcomm_dev_list_req *' <LValueToRValue>         `-DeclRefExpr 0x130944248 <col:8> 'struct rfcomm_dev_list_req *' lvalue Var 0x130928608 'dl' 'struct rfcomm_dev_list_req *' ","19602":"`-FunctionDecl 0x148123610  col:3 implicit used remainder 'double (double, double)' extern   |-ParmVarDecl 0x148123710 <<invalid sloc>> <invalid sloc> 'double'   |-ParmVarDecl 0x148123778 <<invalid sloc>> <invalid sloc> 'double'   |-BuiltinAttr 0x1481236b8 <<invalid sloc>> Implicit 1136   |-ConstAttr 0x1481237f0 <col:3> Implicit   `-NoThrowAttr 0x148123818 <col:3> Implicit ","19285":"`-FunctionDecl 0x153928700  col:12 implicit used malloc 'void *(unsigned long)' extern   |-ParmVarDecl 0x155008200 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-BuiltinAttr 0x1539287a8 <<invalid sloc>> Implicit 871   `-AllocSizeAttr 0x155008270 <col:12> Implicit 1 ","19904":"`-FunctionDecl 0x131120f28  line:1:12 parse_import_ptr 'int (struct MACH0_)' static   |-ParmVarDecl 0x131120e18 <col:29, col:48> col:43 invalid obj_t 'struct MACH0_'   `-CompoundStmt 0x133008c40 <col:88, line:41:1>     |-DeclStmt 0x131139470 <line:2:2, col:25>     | |-VarDecl 0x131139260 <col:2, col:6> col:6 used i 'int'     | |-VarDecl 0x1311392e0 <col:2, col:9> col:9 used j 'int'     | |-VarDecl 0x131139360 <col:2, col:12> col:12 used sym 'int'     | `-VarDecl 0x1311393e0 <col:2, col:17> col:17 used wordsize 'int'     |-BinaryOperator 0x131139780 <line:4:2, col:37> 'int' contains-errors '='     | |-DeclRefExpr 0x1311394a0 <col:2> 'int' lvalue Var 0x1311393e0 'wordsize' 'int'     | `-BinaryOperator 0x131139760 <col:13, col:37> '<dependent type>' contains-errors '\/'     |   |-CallExpr 0x131139738 <col:13, col:33> '<dependent type>' contains-errors     |   | |-CallExpr 0x1311396f0 <col:13, col:28> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x1311395d0 <col:13> 'int ()' Function 0x131139518 'MACH0_' 'int ()'     |   | | `-RecoveryExpr 0x1311396d0 <col:20> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x131139718 <col:30> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x131139670 <col:37> 'int' 8     |-IfStmt 0x131139a00 <line:5:2, line:7:2>     | |-BinaryOperator 0x131139998 <line:5:6, col:29> 'int' contains-errors '||'     | | |-BinaryOperator 0x1311398d0 <col:6, col:12> 'int' contains-errors '<'     | | | |-RecoveryExpr 0x1311398b0 <col:6> '<dependent type>' contains-errors lvalue     | | | `-IntegerLiteral 0x1311397b8 <col:12> 'int' 0     | | `-BinaryOperator 0x131139978 <col:17, col:29> 'int' contains-errors '>='     | |   |-RecoveryExpr 0x1311398f0 <col:17> '<dependent type>' contains-errors lvalue     | |   `-CXXDependentScopeMemberExpr 0x131139930 <col:24, col:29> '<dependent type>' contains-errors lvalue ->nsymtab     | |     `-RecoveryExpr 0x131139910 <col:24> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1311399e8 <col:38, line:7:2>     |   `-ReturnStmt 0x1311399d8 <line:6:3, col:10>     |     `-IntegerLiteral 0x1311399b8 <col:10> 'int' 0     |-IfStmt 0x131139b38 <line:8:2, line:12:2> has_else     | |-RecoveryExpr 0x131139ac8 <line:8:6, col:52> '_Bool' contains-errors     | |-CompoundStmt 0x131139b00 <col:83, line:10:2>     | `-CompoundStmt 0x131139b28 <col:9, line:12:2>     `-SwitchStmt 0x131139c00 <line:18:2, line:24:2>       |-ImplicitCastExpr 0x131139be8 <line:18:10> 'int' <LValueToRValue>       | `-DeclRefExpr 0x131139bc8 <col:10> 'int' lvalue Var 0x1311393e0 'wordsize' 'int'       `-CompoundStmt 0x131139f68 <col:20, line:24:2>         |-CallExpr 0x131139d98 <line:19:3, col:9> 'int'         | |-ImplicitCastExpr 0x131139d80 <col:3> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x131139d08 <col:3> 'int ()' Function 0x131139c50 'CASE' 'int ()'         | `-IntegerLiteral 0x131139d28 <col:8> 'int' 8         |-CallExpr 0x131139e18 <line:20:3, col:10> 'int'         | |-ImplicitCastExpr 0x131139e00 <col:3> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x131139dc0 <col:3> 'int ()' Function 0x131139c50 'CASE' 'int ()'         | `-IntegerLiteral 0x131139de0 <col:8> 'int' 16         |-CallExpr 0x131139e98 <line:21:3, col:10> 'int'         | |-ImplicitCastExpr 0x131139e80 <col:3> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x131139e40 <col:3> 'int ()' Function 0x131139c50 'CASE' 'int ()'         | `-IntegerLiteral 0x131139e60 <col:8> 'int' 32         |-CallExpr 0x131139f18 <line:22:3, col:10> 'int'         | |-ImplicitCastExpr 0x131139f00 <col:3> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x131139ec0 <col:3> 'int ()' Function 0x131139c50 'CASE' 'int ()'         | `-IntegerLiteral 0x131139ee0 <col:8> 'int' 64         `-DefaultStmt 0x131139f48 <line:23:3, col:10>           `-NullStmt 0x131139f40 <col:10> ","19551":"`-FunctionDecl 0x13c942070  col:9 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x13c942170 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x13c9421d8 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x13c942118 <<invalid sloc>> Implicit 887 ","20001":"`-FunctionDecl 0x127813f10  line:1:13 invalid transit 'void (int *, const char *, int)' static   |-ParmVarDecl 0x127813d28 <col:21, col:33> col:33 referenced invalid session 'int *'   |-ParmVarDecl 0x127813da8 <col:42, col:54> col:54 used action 'const char *'   |-ParmVarDecl 0x127813e28 <col:62, col:79> col:79 invalid nstate 'int'   `-CompoundStmt 0x127830200 <line:2:1, line:58:1>     |-DeclStmt 0x1278140e8 <line:4:5, col:23>     | |-VarDecl 0x127813fe8 <col:5, col:9> col:9 used ostate 'int'     | `-VarDecl 0x127814068 <col:5, col:17> col:17 used loglvl 'int'     |-DeclStmt 0x127814180 <line:5:5, col:18>     | `-VarDecl 0x127814118 <col:5, col:17> col:17 used s 'const char *'     `-IfStmt 0x12782f1c0 <line:7:5, line:57:5>       |-BinaryOperator 0x127814220 <line:7:9, col:27> 'int' contains-errors '!='       | |-CXXDependentScopeMemberExpr 0x1278141b8 <col:9, col:18> '<dependent type>' contains-errors lvalue ->state       | | `-RecoveryExpr 0x127814198 <col:9> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x127814200 <col:27> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x12782f188 <col:35, line:57:5>         |-BinaryOperator 0x1278142c8 <line:8:9, col:27> 'int' contains-errors '='         | |-DeclRefExpr 0x127814240 <col:9> 'int' lvalue Var 0x127813fe8 'ostate' 'int'         | `-CXXDependentScopeMemberExpr 0x127814280 <col:18, col:27> '<dependent type>' contains-errors lvalue ->state         |   `-RecoveryExpr 0x127814260 <col:18> '<dependent type>' contains-errors lvalue         |-BinaryOperator 0x127814398 <line:9:9, col:26> '<dependent type>' contains-errors '='         | |-CXXDependentScopeMemberExpr 0x127814330 <col:9, col:18> '<dependent type>' contains-errors lvalue ->state         | | `-RecoveryExpr 0x127814308 <col:9> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x1278142e8 <col:9> 'int *' lvalue ParmVar 0x127813d28 'session' 'int *'         | `-RecoveryExpr 0x127814378 <col:26> '<dependent type>' contains-errors lvalue         |-BinaryOperator 0x12782c840 <line:11:9, col:18> 'int' contains-errors '='         | |-DeclRefExpr 0x1278143b8 <col:9> 'int' lvalue Var 0x127814068 'loglvl' 'int'         | `-RecoveryExpr 0x12782c820 <col:18> '<dependent type>' contains-errors lvalue         |-IfStmt 0x12782cad0 <line:12:9, line:15:9>         | |-RecoveryExpr 0x12782ca00 <line:12:13, line:13:77> '_Bool' contains-errors         | `-CompoundStmt 0x12782cab8 <col:79, line:15:9>         |   `-BinaryOperator 0x12782ca98 <line:14:13, col:22> 'int' contains-errors '='         |     |-DeclRefExpr 0x12782ca20 <col:13> 'int' lvalue Var 0x127814068 'loglvl' 'int'         |     `-RecoveryExpr 0x12782ca78 <col:22> '<dependent type>' contains-errors lvalue         `-SwitchStmt 0x12782d260 <line:22:9, line:56:9>           |-ImplicitCastExpr 0x12782d248 <line:22:17, col:26> '<dependent type>' contains-errors <LValueToRValue>           | `-CXXDependentScopeMemberExpr 0x12782d200 <col:17, col:26> '<dependent type>' contains-errors lvalue ->state           |   `-RecoveryExpr 0x12782d1e0 <col:17> '<dependent type>' contains-errors lvalue           `-CompoundStmt 0x12782f158 <col:33, line:56:9>             |-IfStmt 0x12782ee28 <line:24:17, line:44:17> has_else             | |-UnaryOperator 0x12782d368 <line:24:21, col:38> '<dependent type>' contains-errors prefix '!' cannot overflow             | | `-ImplicitCastExpr 0x12782d350 <col:22, col:38> '<dependent type>' contains-errors <LValueToRValue>             | |   `-CXXDependentScopeMemberExpr 0x12782d308 <col:22, col:38> '<dependent type>' contains-errors lvalue .emitted_count             | |     `-CXXDependentScopeMemberExpr 0x12782d2c0 <col:22, col:31> '<dependent type>' contains-errors lvalue ->remote             | |       `-RecoveryExpr 0x12782d2a0 <col:22> '<dependent type>' contains-errors lvalue             | |-CompoundStmt 0x12782ea00 <col:53, line:33:17>             | | |-BinaryOperator 0x12782d6c8 <line:26:21, col:84> '<dependent type>' contains-errors '='             | | | |-CXXDependentScopeMemberExpr 0x12782d3c8 <col:21, col:30> '<dependent type>' contains-errors lvalue ->idle_sync_until             | | | | `-RecoveryExpr 0x12782d3a0 <col:21> '<dependent type>' contains-errors lvalue             | | | |   `-DeclRefExpr 0x12782d380 <col:21> 'int *' lvalue ParmVar 0x127813d28 'session' 'int *'             | | | `-BinaryOperator 0x12782d6a8 <col:48, col:84> 'int' '+'             | | |   |-CallExpr 0x12782d528 <col:48, col:61> 'int'             | | |   | `-ImplicitCastExpr 0x12782d510 <col:48> 'int (*)()' <FunctionToPointerDecay>             | | |   |   `-DeclRefExpr 0x12782d4f0 <col:48> 'int ()' Function 0x12782d438 'apr_time_now' 'int ()'             | | |   `-CallExpr 0x12782d680 <col:65, col:84> 'int'             | | |     |-ImplicitCastExpr 0x12782d668 <col:65> 'int (*)()' <FunctionToPointerDecay>             | | |     | `-DeclRefExpr 0x12782d628 <col:65> 'int ()' Function 0x12782d570 'apr_time_from_sec' 'int ()'             | | |     `-IntegerLiteral 0x12782d648 <col:83> 'int' 1             | | `-BinaryOperator 0x12782d758 <line:27:21, col:25> 'const char *' '='             | |   |-DeclRefExpr 0x12782d6e8 <col:21> 'const char *' lvalue Var 0x127814118 's' 'const char *'             | |   `-ImplicitCastExpr 0x12782d740 <col:25> 'const char *' <NoOp>             | |     `-ImplicitCastExpr 0x12782d728 <col:25> 'char *' <ArrayToPointerDecay>             | |       `-StringLiteral 0x12782d708 <col:25> 'char[4]' lvalue \"STR\"             | `-IfStmt 0x12782edf8 <line:34:22, line:44:17> has_else             |   |-CXXDependentScopeMemberExpr 0x12782ea40 <line:34:26, col:35> '<dependent type>' contains-errors lvalue ->open_streams             |   | `-RecoveryExpr 0x12782ea20 <col:26> '<dependent type>' contains-errors lvalue             |   |-CompoundStmt 0x12782ec28 <col:49, line:38:17>             |   | `-BinaryOperator 0x12782eaf8 <line:35:21, col:25> 'const char *' '='             |   |   |-DeclRefExpr 0x12782ea88 <col:21> 'const char *' lvalue Var 0x127814118 's' 'const char *'             |   |   `-ImplicitCastExpr 0x12782eae0 <col:25> 'const char *' <NoOp>             |   |     `-ImplicitCastExpr 0x12782eac8 <col:25> 'char *' <ArrayToPointerDecay>             |   |       `-StringLiteral 0x12782eaa8 <col:25> 'char[4]' lvalue \"STR\"             |   `-CompoundStmt 0x12782ede0 <line:39:22, line:44:17>             |     `-BinaryOperator 0x12782ecb0 <line:41:21, col:25> 'const char *' '='             |       |-DeclRefExpr 0x12782ec40 <col:21> 'const char *' lvalue Var 0x127814118 's' 'const char *'             |       `-ImplicitCastExpr 0x12782ec98 <col:25> 'const char *' <NoOp>             |         `-ImplicitCastExpr 0x12782ec80 <col:25> 'char *' <ArrayToPointerDecay>             |           `-StringLiteral 0x12782ec60 <col:25> 'char[4]' lvalue \"STR\"             |-BreakStmt 0x12782f0c0 <line:49:17>             |-BreakStmt 0x12782f128 <line:52:17>             `-DefaultStmt 0x12782f138 <line:53:13, line:55:17>               `-BreakStmt 0x12782f130 <col:17> ","19981":"`-FunctionDecl 0x158940be8  line:1:1 nfs4_do_lookup_revalidate 'int (struct inode *, struct dentry *, unsigned int)'   |-ParmVarDecl 0x158928648 <col:27, col:41> col:41 used dir 'struct inode *'   |-ParmVarDecl 0x158940a28 <col:46, col:61> col:61 used dentry 'struct dentry *'   |-ParmVarDecl 0x158940aa8 <line:2:6, col:19> col:19 used flags 'unsigned int'   `-CompoundStmt 0x158947958 <line:3:1, line:41:1>     |-DeclStmt 0x158940de0 <line:4:2, col:21>     | `-VarDecl 0x158940d78 <col:2, col:16> col:16 used inode 'struct inode *'     |-IfStmt 0x158940f48 <line:6:2, line:7:8>     | |-RecoveryExpr 0x158940ec0 <line:6:6, col:57> '_Bool' contains-errors     | `-GotoStmt 0x158940f30 <line:7:3, col:8> 'full_reval' 0x158940ee0     |-IfStmt 0x158941160 <line:8:2, line:9:8>     | |-CallExpr 0x158941108 <line:8:6, col:25> 'int'     | | |-ImplicitCastExpr 0x1589410f0 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x158941080 <col:6> 'int ()' Function 0x158940fc8 'd_mountpoint' 'int ()'     | | `-ImplicitCastExpr 0x158941130 <col:19> 'struct dentry *' <LValueToRValue>     | |   `-DeclRefExpr 0x1589410a0 <col:19> 'struct dentry *' lvalue ParmVar 0x158940a28 'dentry' 'struct dentry *'     | `-GotoStmt 0x158941148 <line:9:3, col:8> 'full_reval' 0x158940ee0     |-BinaryOperator 0x158941330 <line:11:2, col:24> 'struct inode *' '='     | |-DeclRefExpr 0x158941180 <col:2> 'struct inode *' lvalue Var 0x158940d78 'inode' 'struct inode *'     | `-ImplicitCastExpr 0x158941318 <col:10, col:24> 'struct inode *' <IntegralToPointer>     |   `-CallExpr 0x1589412d8 <col:10, col:24> 'int'     |     |-ImplicitCastExpr 0x1589412c0 <col:10> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x158941280 <col:10> 'int ()' Function 0x1589411c8 'd_inode' 'int ()'     |     `-ImplicitCastExpr 0x158941300 <col:18> 'struct dentry *' <LValueToRValue>     |       `-DeclRefExpr 0x1589412a0 <col:18> 'struct dentry *' lvalue ParmVar 0x158940a28 'dentry' 'struct dentry *'     |-IfStmt 0x158941400 <line:14:2, line:15:8>     | |-BinaryOperator 0x1589413c8 <line:14:6, col:15> 'int' contains-errors '=='     | | |-DeclRefExpr 0x158941350 <col:6> 'struct inode *' lvalue Var 0x158940d78 'inode' 'struct inode *'     | | `-RecoveryExpr 0x1589413a8 <col:15> '<dependent type>' contains-errors lvalue     | `-GotoStmt 0x1589413e8 <line:15:3, col:8> 'full_reval' 0x158940ee0     |-IfStmt 0x1589417a0 <line:17:2, line:18:60>     | |-CallExpr 0x158941558 <line:17:6, col:38> 'int'     | | |-ImplicitCastExpr 0x158941540 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x158941500 <col:6> 'int ()' Function 0x158941448 'nfs_verifier_is_delegated' 'int ()'     | | `-ImplicitCastExpr 0x158941580 <col:32> 'struct dentry *' <LValueToRValue>     | |   `-DeclRefExpr 0x158941520 <col:32> 'struct dentry *' lvalue ParmVar 0x158940a28 'dentry' 'struct dentry *'     | `-ReturnStmt 0x158941790 <line:18:3, col:60>     |   `-CallExpr 0x158941710 <col:10, col:60> 'int'     |     |-ImplicitCastExpr 0x1589416f8 <col:10> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x158941678 <col:10> 'int ()' Function 0x1589415c0 'nfs_lookup_revalidate_delegated' 'int ()'     |     |-ImplicitCastExpr 0x158941748 <col:42> 'struct inode *' <LValueToRValue>     |     | `-DeclRefExpr 0x158941698 <col:42> 'struct inode *' lvalue ParmVar 0x158928648 'dir' 'struct inode *'     |     |-ImplicitCastExpr 0x158941760 <col:47> 'struct dentry *' <LValueToRValue>     |     | `-DeclRefExpr 0x1589416b8 <col:47> 'struct dentry *' lvalue ParmVar 0x158940a28 'dentry' 'struct dentry *'     |     `-ImplicitCastExpr 0x158941778 <col:55> 'struct inode *' <LValueToRValue>     |       `-DeclRefExpr 0x1589416d8 <col:55> 'struct inode *' lvalue Var 0x158940d78 'inode' 'struct inode *'     |-IfStmt 0x158941978 <line:21:2, line:22:8>     | |-UnaryOperator 0x158941948 <line:21:6, col:28> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x158941920 <col:7, col:28> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x1589418a0 <col:7> 'int ()' Function 0x1589417e8 'S_ISREG' 'int ()'     | |   `-RecoveryExpr 0x1589418f8 <col:15, col:22> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x1589418c0 <col:15> 'struct inode *' lvalue Var 0x158940d78 'inode' 'struct inode *'     | `-GotoStmt 0x158941960 <line:22:3, col:8> 'full_reval' 0x158940ee0     |-IfStmt 0x1589470a8 <line:25:2, line:26:8>     | |-RecoveryExpr 0x158947020 <line:25:6, col:41> '_Bool' contains-errors     | `-GotoStmt 0x158947090 <line:26:3, col:8> 'reval_dentry' 0x158947040     |-IfStmt 0x158947358 <line:29:2, line:30:8>     | |-UnaryOperator 0x158947328 <line:29:6, col:57> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x1589472f0 <col:7, col:57> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x1589471a8 <col:7> 'int ()' Function 0x1589470f0 'nfs_check_verifier' 'int ()'     | |   |-DeclRefExpr 0x1589471c8 <col:26> 'struct inode *' lvalue ParmVar 0x158928648 'dir' 'struct inode *'     | |   |-DeclRefExpr 0x1589471e8 <col:31> 'struct dentry *' lvalue ParmVar 0x158940a28 'dentry' 'struct dentry *'     | |   `-BinaryOperator 0x1589472d0 <col:39, col:47> '<dependent type>' contains-errors '&'     | |     |-DeclRefExpr 0x158947208 <col:39> 'unsigned int' lvalue ParmVar 0x158940aa8 'flags' 'unsigned int'     | |     `-RecoveryExpr 0x1589472b0 <col:47> '<dependent type>' contains-errors lvalue     | `-GotoStmt 0x158947340 <line:30:3, col:8> 'reval_dentry' 0x158947040     |-ReturnStmt 0x158947398 <line:33:2, col:9>     | `-IntegerLiteral 0x158947378 <col:9> 'int' 1     |-LabelStmt 0x158947508 <line:34:1, line:36:11> 'reval_dentry'     | `-IfStmt 0x1589474e8 <line:35:2, line:36:11>     |   |-BinaryOperator 0x158947420 <line:35:6, col:14> '<dependent type>' contains-errors '&'     |   | |-DeclRefExpr 0x1589473a8 <col:6> 'unsigned int' lvalue ParmVar 0x158940aa8 'flags' 'unsigned int'     |   | `-RecoveryExpr 0x158947400 <col:14> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x1589474d8 <line:36:3, col:11>     |     `-UnaryOperator 0x1589474c0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x1589474a8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x158947488 <col:11> '<dependent type>' contains-errors lvalue     |-ReturnStmt 0x158947720 <line:37:2, col:56>     | `-CallExpr 0x1589476a0 <col:9, col:56> 'int'     |   |-ImplicitCastExpr 0x158947688 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x158947608 <col:9> 'int ()' Function 0x158947550 'nfs_lookup_revalidate_dentry' 'int ()'     |   |-ImplicitCastExpr 0x1589476d8 <col:38> 'struct inode *' <LValueToRValue>     |   | `-DeclRefExpr 0x158947628 <col:38> 'struct inode *' lvalue ParmVar 0x158928648 'dir' 'struct inode *'     |   |-ImplicitCastExpr 0x1589476f0 <col:43> 'struct dentry *' <LValueToRValue>     |   | `-DeclRefExpr 0x158947648 <col:43> 'struct dentry *' lvalue ParmVar 0x158940a28 'dentry' 'struct dentry *'     |   `-ImplicitCastExpr 0x158947708 <col:51> 'struct inode *' <LValueToRValue>     |     `-DeclRefExpr 0x158947668 <col:51> 'struct inode *' lvalue Var 0x158940d78 'inode' 'struct inode *'     `-LabelStmt 0x158947938 <line:39:1, line:40:52> 'full_reval'       `-ReturnStmt 0x158947928 <col:2, col:52>         `-CallExpr 0x1589478a8 <col:9, col:52> 'int'           |-ImplicitCastExpr 0x158947890 <col:9> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x158947810 <col:9> 'int ()' Function 0x158947758 'nfs_do_lookup_revalidate' 'int ()'           |-ImplicitCastExpr 0x1589478e0 <col:34> 'struct inode *' <LValueToRValue>           | `-DeclRefExpr 0x158947830 <col:34> 'struct inode *' lvalue ParmVar 0x158928648 'dir' 'struct inode *'           |-ImplicitCastExpr 0x1589478f8 <col:39> 'struct dentry *' <LValueToRValue>           | `-DeclRefExpr 0x158947850 <col:39> 'struct dentry *' lvalue ParmVar 0x158940a28 'dentry' 'struct dentry *'           `-ImplicitCastExpr 0x158947910 <col:47> 'unsigned int' <LValueToRValue>             `-DeclRefExpr 0x158947870 <col:47> 'unsigned int' lvalue ParmVar 0x158940aa8 'flags' 'unsigned int' ","19540":"`-FunctionDecl 0x125928358  line:1:19 invalid sctp_auth_get_hmac 'struct sctp_hmac *(int)'   |-ParmVarDecl 0x125928190 <col:38, col:44> col:44 invalid hmac_id 'int'   `-CompoundStmt 0x125928440 <line:2:1, line:4:1> ","19537":"`-FunctionDecl 0x151128288  line:1:1 invalid sraSpanInsertAfter 'int (int *, int *)'   |-ParmVarDecl 0x151128128 <col:20, col:29> col:29 referenced invalid newspan 'int *'   |-ParmVarDecl 0x1511281a8 <col:38, col:47> col:47 referenced invalid after 'int *'   `-CompoundStmt 0x151128710 <col:54, line:6:1>     |-BinaryOperator 0x151128438 <line:2:3, col:27> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x151128388 <col:3, col:12> '<dependent type>' contains-errors lvalue ->_next     | | `-RecoveryExpr 0x151128360 <col:3> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x151128340 <col:3> 'int *' lvalue ParmVar 0x151128128 'newspan' 'int *'     | `-CXXDependentScopeMemberExpr 0x1511283f0 <col:20, col:27> '<dependent type>' contains-errors lvalue ->_next     |   `-RecoveryExpr 0x1511283d0 <col:20> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x151128508 <line:3:3, col:20> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1511284a0 <col:3, col:12> '<dependent type>' contains-errors lvalue ->_prev     | | `-RecoveryExpr 0x151128478 <col:3> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x151128458 <col:3> 'int *' lvalue ParmVar 0x151128128 'newspan' 'int *'     | `-RecoveryExpr 0x1511284e8 <col:20> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x151128620 <line:4:3, col:25> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1511285b8 <col:3, col:17> '<dependent type>' contains-errors lvalue ->_prev     | | `-CXXDependentScopeMemberExpr 0x151128570 <col:3, col:10> '<dependent type>' contains-errors lvalue ->_next     | |   `-RecoveryExpr 0x151128548 <col:3> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x151128528 <col:3> 'int *' lvalue ParmVar 0x1511281a8 'after' 'int *'     | `-RecoveryExpr 0x151128600 <col:25> '<dependent type>' contains-errors lvalue     `-BinaryOperator 0x1511286f0 <line:5:3, col:18> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x151128688 <col:3, col:10> '<dependent type>' contains-errors lvalue ->_next       | `-RecoveryExpr 0x151128660 <col:3> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x151128640 <col:3> 'int *' lvalue ParmVar 0x1511281a8 'after' 'int *'       `-RecoveryExpr 0x1511286d0 <col:18> '<dependent type>' contains-errors lvalue ","20033":"`-FunctionDecl 0x122140a00  line:1:1 jiffies_to_timespec 'int (const unsigned long, struct timespec *)'   |-ParmVarDecl 0x1221280d8 <col:21, col:41> col:41 jiffies 'const unsigned long'   |-ParmVarDecl 0x1221286c8 <col:50, col:67> col:67 used value 'struct timespec *'   `-CompoundStmt 0x122140e48 <line:2:1, line:6:1>     `-BinaryOperator 0x122140e28 <line:5:2, col:71> '<dependent type>' contains-errors '='       |-RecoveryExpr 0x122140b50 <col:2, col:9> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x122140b18 <col:2> 'struct timespec *' lvalue ParmVar 0x1221286c8 'value' 'struct timespec *'       `-CallExpr 0x122140df0 <col:18, col:71> '<dependent type>' contains-errors         |-DeclRefExpr 0x122140c90 <col:18> 'int ()' Function 0x122140bd8 'div_long_long_rem' 'int ()'         |-RecoveryExpr 0x122140db0 <col:36> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x122140dd0 <col:42> '<dependent type>' contains-errors lvalue         `-UnaryOperator 0x122140d40 <col:56, col:64> '<dependent type>' contains-errors prefix '&' cannot overflow           `-RecoveryExpr 0x122140d18 <col:57, col:64> '<dependent type>' contains-errors lvalue             `-DeclRefExpr 0x122140ce0 <col:57> 'struct timespec *' lvalue ParmVar 0x1221286c8 'value' 'struct timespec *' ","19412":"`-FunctionDecl 0x15780df18  line:1:1 invalid tokenize 'int (int *, int *, const int *)'   |-ParmVarDecl 0x15780dd28 <col:10, col:20> col:20 referenced invalid parseCtx 'int *'   |-ParmVarDecl 0x15780dda8 <col:30, col:39> col:39 referenced invalid ctx 'int *'   |-ParmVarDecl 0x15780de28 <col:44, col:65> col:65 invalid src 'const int *'   `-CompoundStmt 0x157122d60 <col:70, line:23:1>     |-BinaryOperator 0x15780e140 <line:3:5, col:28> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15780e020 <col:5, col:10> '<dependent type>' contains-errors lvalue ->pos     | | `-RecoveryExpr 0x15780dff8 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15780dfd8 <col:5> 'int *' lvalue ParmVar 0x15780dda8 'ctx' 'int *'     | `-UnaryOperator 0x15780e128 <col:16, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-ArraySubscriptExpr 0x15780e108 <col:17, col:28> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x15780e0f0 <col:17, col:22> '<dependent type>' contains-errors <LValueToRValue>     |     | `-CXXDependentScopeMemberExpr 0x15780e088 <col:17, col:22> '<dependent type>' contains-errors lvalue ->data     |     |   `-RecoveryExpr 0x15780e068 <col:17> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x15780e0d0 <col:27> 'int' 0     |-BinaryOperator 0x15780e328 <line:4:5, col:38> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15780e1a8 <col:5, col:10> '<dependent type>' contains-errors lvalue ->end     | | `-RecoveryExpr 0x15780e180 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15780e160 <col:5> 'int *' lvalue ParmVar 0x15780dda8 'ctx' 'int *'     | `-UnaryOperator 0x15780e310 <col:16, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-ArraySubscriptExpr 0x15780e2f0 <col:17, col:38> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x15780e2c0 <col:17, col:22> '<dependent type>' contains-errors <LValueToRValue>     |     | `-CXXDependentScopeMemberExpr 0x15780e210 <col:17, col:22> '<dependent type>' contains-errors lvalue ->data     |     |   `-RecoveryExpr 0x15780e1f0 <col:17> '<dependent type>' contains-errors lvalue     |     `-ImplicitCastExpr 0x15780e2d8 <col:27, col:32> '<dependent type>' contains-errors <LValueToRValue>     |       `-CXXDependentScopeMemberExpr 0x15780e278 <col:27, col:32> '<dependent type>' contains-errors lvalue ->length     |         `-RecoveryExpr 0x15780e258 <col:27> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x157122600 <line:5:5, col:18> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15780e390 <col:5, col:10> '<dependent type>' contains-errors lvalue ->depth     | | `-RecoveryExpr 0x15780e368 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15780e348 <col:5> 'int *' lvalue ParmVar 0x15780dda8 'ctx' 'int *'     | `-IntegerLiteral 0x15780e3d8 <col:18> 'int' 0     |-BinaryOperator 0x1571226d0 <line:6:5, col:28> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x157122668 <col:5, col:15> '<dependent type>' contains-errors lvalue ->tokenCount     | | `-RecoveryExpr 0x157122640 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x157122620 <col:5> 'int *' lvalue ParmVar 0x15780dd28 'parseCtx' 'int *'     | `-IntegerLiteral 0x1571226b0 <col:28> 'int' 0     |-BinaryOperator 0x1571227a0 <line:7:5, col:23> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x157122738 <col:5, col:15> '<dependent type>' contains-errors lvalue ->index     | | `-RecoveryExpr 0x157122710 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1571226f0 <col:5> 'int *' lvalue ParmVar 0x15780dd28 'parseCtx' 'int *'     | `-IntegerLiteral 0x157122780 <col:23> 'int' 0     |-CallExpr 0x1571229d0 <line:11:5, col:17> '<dependent type>' contains-errors     | |-DeclRefExpr 0x157122920 <col:5> 'int ()' Function 0x157122868 'jsmn_init' 'int ()'     | `-UnaryOperator 0x1571229b8 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x157122998 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x157122cf8 <line:16:5, line:20:5>     | |-BinaryOperator 0x157122b28 <line:16:8, col:31> 'int' contains-errors '<'     | | |-CXXDependentScopeMemberExpr 0x157122ac0 <col:8, col:18> '<dependent type>' contains-errors lvalue ->tokenCount     | | | `-RecoveryExpr 0x157122aa0 <col:8> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x157122b08 <col:31> 'int' 0     | `-CompoundStmt 0x157122cd8 <col:34, line:20:5>     |   |-IfStmt 0x157122c70 <line:17:9, line:18:20>     |   | |-BinaryOperator 0x157122c08 <line:17:12, col:36> 'int' contains-errors '=='     |   | | |-CXXDependentScopeMemberExpr 0x157122b68 <col:12, col:22> '<dependent type>' contains-errors lvalue ->tokenCount     |   | | | `-RecoveryExpr 0x157122b48 <col:12> '<dependent type>' contains-errors lvalue     |   | | `-RecoveryExpr 0x157122be8 <col:36> '<dependent type>' contains-errors lvalue     |   | `-ReturnStmt 0x157122c60 <line:18:13, col:20>     |   |   `-RecoveryExpr 0x157122c40 <col:20> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x157122cc8 <line:19:9, col:16>     |     `-RecoveryExpr 0x157122ca8 <col:16> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x157122d50 <line:22:5, col:12>       `-RecoveryExpr 0x157122d30 <col:12> '<dependent type>' contains-errors lvalue ","19229":"`-FunctionDecl 0x13d124388  col:9 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x13d124488 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x13d124430 <<invalid sloc>> Implicit 873 ","19237":"`-FunctionDecl 0x14d82ac98  col:14 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern   |-ParmVarDecl 0x14d82ad98 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x14d82ae00 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x14d82ae68 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14d82ad40 <<invalid sloc>> Implicit 888 ","19707":"`-FunctionDecl 0x14703f148  line:1:12 opt_subreg_zext_lo32_rnd_hi32 'int (struct bpf_verifier_env *, const union bpf_attr *)' static   |-ParmVarDecl 0x14701f848 <col:42, col:67> col:67 used env 'struct bpf_verifier_env *'   |-ParmVarDecl 0x14703f028 <line:2:7, col:29> col:29 used attr 'const union bpf_attr *'   `-CompoundStmt 0x147044770 <line:3:1, line:74:1>     |-DeclStmt 0x14703f500 <line:4:2, col:58>     | |-RecordDecl 0x14703f248 <col:2, col:9> col:9 struct bpf_insn     | |-VarDecl 0x14703f3b8 <col:2, col:19> col:19 used patch 'struct bpf_insn *'     | `-VarDecl 0x14703f458 <col:2, col:26> col:26 referenced invalid zext_patch 'int'     |-DeclStmt 0x14703f768 <line:5:2, col:52>     | |-RecordDecl 0x14703f518 <col:2, col:9> col:9 struct bpf_insn_aux_data     | `-VarDecl 0x14703f688 <col:2, col:39> col:28 used aux 'struct bpf_insn_aux_data *' cinit     |   `-RecoveryExpr 0x14703f728 <col:34, col:39> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14703f6f0 <col:34> 'struct bpf_verifier_env *' lvalue ParmVar 0x14701f848 'env' 'struct bpf_verifier_env *'     |-DeclStmt 0x14703fa70 <line:6:2, col:51>     | |-VarDecl 0x14703f798 <col:2, col:6> col:6 used i 'int'     | |-VarDecl 0x14703f818 <col:2, col:9> col:9 used patch_len 'int'     | |-VarDecl 0x14703f898 <col:2, col:28> col:20 used delta 'int' cinit     | | `-IntegerLiteral 0x14703f900 <col:28> 'int' 0     | `-VarDecl 0x14703f938 <col:2, col:48> col:31 used len 'int' cinit     |   `-CXXDependentScopeMemberExpr 0x14703fa00 <col:37, col:48> '<dependent type>' contains-errors lvalue ->len     |     `-RecoveryExpr 0x14703f9d8 <col:37, col:42> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14703f9a0 <col:37> 'struct bpf_verifier_env *' lvalue ParmVar 0x14701f848 'env' 'struct bpf_verifier_env *'     |-DeclStmt 0x14703fc28 <line:7:2, col:44>     | `-VarDecl 0x14703fb18 <col:2, col:38> col:19 used insns 'struct bpf_insn *' cinit     |   `-CXXDependentScopeMemberExpr 0x14703fbe0 <col:27, col:38> '<dependent type>' contains-errors lvalue ->insnsi     |     `-RecoveryExpr 0x14703fbb8 <col:27, col:32> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14703fb80 <col:27> 'struct bpf_verifier_env *' lvalue ParmVar 0x14701f848 'env' 'struct bpf_verifier_env *'     |-DeclStmt 0x14703fe28 <line:8:2, col:27>     | |-RecordDecl 0x14703fc40 <col:2, col:9> col:9 struct bpf_prog     | `-VarDecl 0x14703fda8 <col:2, col:19> col:19 used new_prog 'struct bpf_prog *'     |-BinaryOperator 0x147041970 <line:12:2, col:32> '<dependent type>' contains-errors '='     | |-ArraySubscriptExpr 0x14703ff70 <col:2, col:14> '<dependent type>' contains-errors lvalue     | | |-ImplicitCastExpr 0x14703ff58 <col:2> '<dependent type>' contains-errors <LValueToRValue>     | | | `-RecoveryExpr 0x14703ff10 <col:2> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x14703fef0 <col:2> 'int' lvalue Var 0x14703f458 'zext_patch' 'int'     | | `-IntegerLiteral 0x14703ff38 <col:13> 'int' 1     | `-CallExpr 0x147041948 <col:18, col:32> 'int'     |   |-ImplicitCastExpr 0x147041930 <col:18> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1470418b8 <col:18> 'int ()' Function 0x147041800 'BPF_ZEXT_REG' 'int ()'     |   `-IntegerLiteral 0x1470418d8 <col:31> 'int' 0     |-ForStmt 0x147044708 <line:16:2, line:71:2>     | |-BinaryOperator 0x147041de8 <line:16:7, col:11> 'int' '='     | | |-DeclRefExpr 0x147041da8 <col:7> 'int' lvalue Var 0x14703f798 'i' 'int'     | | `-IntegerLiteral 0x147041dc8 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x147041e78 <col:14, col:18> 'int' contains-errors '<'     | | |-ImplicitCastExpr 0x147041e48 <col:14> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x147041e08 <col:14> 'int' lvalue Var 0x14703f798 'i' 'int'     | | `-ImplicitCastExpr 0x147041e60 <col:18> 'int' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x147041e28 <col:18> 'int' contains-errors lvalue Var 0x14703f938 'len' 'int'     | |-UnaryOperator 0x147041eb8 <col:23, col:24> 'int' postfix '++'     | | `-DeclRefExpr 0x147041e98 <col:23> 'int' lvalue Var 0x14703f798 'i' 'int'     | `-CompoundStmt 0x147044688 <col:28, line:71:2>     |   |-DeclStmt 0x147041fe0 <line:17:3, col:26>     |   | `-VarDecl 0x147041ee8 <col:3, col:21> col:7 used adj_idx 'int' cinit     |   |   `-BinaryOperator 0x147041fc0 <col:17, col:21> 'int' '+'     |   |     |-ImplicitCastExpr 0x147041f90 <col:17> 'int' <LValueToRValue>     |   |     | `-DeclRefExpr 0x147041f50 <col:17> 'int' lvalue Var 0x14703f798 'i' 'int'     |   |     `-ImplicitCastExpr 0x147041fa8 <col:21> 'int' <LValueToRValue>     |   |       `-DeclRefExpr 0x147041f70 <col:21> 'int' lvalue Var 0x14703f898 'delta' 'int'     |   |-DeclStmt 0x147042080 <line:18:3, col:23>     |   | `-VarDecl 0x147042018 <col:3, col:19> col:19 referenced invalid insn 'struct bpf_insn'     |   |-IfStmt 0x147043ac0 <line:21:3, line:53:3>     |   | |-RecoveryExpr 0x1470421c0 <line:21:7, col:21> '_Bool' contains-errors     |   | `-CompoundStmt 0x147043a80 <col:31, line:53:3>     |   |   |-IfStmt 0x147042208 <line:25:4, line:26:5>     |   |   | |-RecoveryExpr 0x1470421e0 <line:25:8, col:9> '_Bool' contains-errors     |   |   | `-ContinueStmt 0x147042200 <line:26:5>     |   |   |-IfStmt 0x1470424f8 <line:30:4, line:31:5>     |   |   | |-CallExpr 0x1470424c8 <line:30:8, col:25> '<dependent type>' contains-errors     |   |   | | |-DeclRefExpr 0x147042470 <col:8> 'int ()' Function 0x1470423b8 'insn_no_def' 'int ()'     |   |   | | `-UnaryOperator 0x1470424b0 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   | |   `-RecoveryExpr 0x147042490 <col:21> '<dependent type>' contains-errors lvalue     |   |   | `-ContinueStmt 0x1470424f0 <line:31:5>     |   |   |-IfStmt 0x1470436a0 <line:34:4, line:39:4>     |   |   | |-RecoveryExpr 0x1470426d8 <line:34:8, col:55> '_Bool' contains-errors     |   |   | `-CompoundStmt 0x147043680 <col:58, line:39:4>     |   |   |   |-IfStmt 0x147043658 <line:35:5, line:37:7>     |   |   |   | |-RecoveryExpr 0x147043600 <line:35:9, line:36:27> '_Bool' contains-errors     |   |   |   | `-UnaryOperator 0x147043640 <line:37:6, col:7> 'int' postfix '++'     |   |   |   |   `-DeclRefExpr 0x147043620 <col:6> 'int' lvalue Var 0x14703f798 'i' 'int'     |   |   |   `-ContinueStmt 0x147043678 <line:38:5>     |   |   |-IfStmt 0x147043758 <line:42:4, line:44:5>     |   |   | |-RecoveryExpr 0x147043730 <line:42:8, line:43:33> '_Bool' contains-errors     |   |   | `-ContinueStmt 0x147043750 <line:44:5>     |   |   |-BinaryOperator 0x1470439f8 <line:51:4, col:16> 'int' '='     |   |   | |-DeclRefExpr 0x1470439b8 <col:4> 'int' lvalue Var 0x14703f818 'patch_len' 'int'     |   |   | `-IntegerLiteral 0x1470439d8 <col:16> 'int' 4     |   |   `-GotoStmt 0x147043a68 <line:52:4, col:9> 'apply_patch_buffer' 0x147043a18     |   |-IfStmt 0x147043c38 <line:55:3, line:56:4>     |   | |-UnaryOperator 0x147043c18 <line:55:7, col:27> 'int' prefix '!' cannot overflow     |   | | `-CallExpr 0x147043bf8 <col:8, col:27> 'int'     |   | |   `-ImplicitCastExpr 0x147043be0 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | |     `-DeclRefExpr 0x147043bc0 <col:8> 'int ()' Function 0x147043b08 'bpf_jit_needs_zext' 'int ()'     |   | `-ContinueStmt 0x147043c30 <line:56:4>     |   |-BinaryOperator 0x147043d18 <line:58:3, col:19> '<dependent type>' contains-errors '='     |   | |-ArraySubscriptExpr 0x147043cd8 <col:3, col:15> '<dependent type>' contains-errors lvalue     |   | | |-ImplicitCastExpr 0x147043cc0 <col:3> '<dependent type>' contains-errors <LValueToRValue>     |   | | | `-RecoveryExpr 0x147043c78 <col:3> '<dependent type>' contains-errors lvalue     |   | | |   `-DeclRefExpr 0x147043c58 <col:3> 'int' lvalue Var 0x14703f458 'zext_patch' 'int'     |   | | `-IntegerLiteral 0x147043ca0 <col:14> 'int' 0     |   | `-RecoveryExpr 0x147043cf8 <col:19> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x147043e88 <line:59:3, col:32> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x147043dd8 <col:3, col:17> '<dependent type>' contains-errors lvalue .dst_reg     |   | | `-ArraySubscriptExpr 0x147043db8 <col:3, col:15> '<dependent type>' contains-errors lvalue     |   | |   |-ImplicitCastExpr 0x147043da0 <col:3> '<dependent type>' contains-errors <LValueToRValue>     |   | |   | `-RecoveryExpr 0x147043d58 <col:3> '<dependent type>' contains-errors lvalue     |   | |   |   `-DeclRefExpr 0x147043d38 <col:3> 'int' lvalue Var 0x14703f458 'zext_patch' 'int'     |   | |   `-IntegerLiteral 0x147043d80 <col:14> 'int' 1     |   | `-CXXDependentScopeMemberExpr 0x147043e40 <col:27, col:32> '<dependent type>' contains-errors lvalue .dst_reg     |   |   `-RecoveryExpr 0x147043e20 <col:27> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x147043ff8 <line:60:3, col:32> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x147043f48 <col:3, col:17> '<dependent type>' contains-errors lvalue .src_reg     |   | | `-ArraySubscriptExpr 0x147043f28 <col:3, col:15> '<dependent type>' contains-errors lvalue     |   | |   |-ImplicitCastExpr 0x147043f10 <col:3> '<dependent type>' contains-errors <LValueToRValue>     |   | |   | `-RecoveryExpr 0x147043ec8 <col:3> '<dependent type>' contains-errors lvalue     |   | |   |   `-DeclRefExpr 0x147043ea8 <col:3> 'int' lvalue Var 0x14703f458 'zext_patch' 'int'     |   | |   `-IntegerLiteral 0x147043ef0 <col:14> 'int' 1     |   | `-CXXDependentScopeMemberExpr 0x147043fb0 <col:27, col:32> '<dependent type>' contains-errors lvalue .dst_reg     |   |   `-RecoveryExpr 0x147043f90 <col:27> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x147044058 <line:61:3, col:11> 'struct bpf_insn *' contains-errors '='     |   | |-DeclRefExpr 0x147044018 <col:3> 'struct bpf_insn *' lvalue Var 0x14703f3b8 'patch' 'struct bpf_insn *'     |   | `-RecoveryExpr 0x147044038 <col:11> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x1470440b8 <line:62:3, col:15> 'int' '='     |   | |-DeclRefExpr 0x147044078 <col:3> 'int' lvalue Var 0x14703f818 'patch_len' 'int'     |   | `-IntegerLiteral 0x147044098 <col:15> 'int' 2     |   |-LabelStmt 0x147044368 <line:63:1, line:64:64> 'apply_patch_buffer'     |   | `-BinaryOperator 0x147044348 <col:3, col:64> 'struct bpf_prog *' '='     |   |   |-DeclRefExpr 0x1470440d8 <col:3> 'struct bpf_prog *' lvalue Var 0x14703fda8 'new_prog' 'struct bpf_prog *'     |   |   `-ImplicitCastExpr 0x147044330 <col:14, col:64> 'struct bpf_prog *' <IntegralToPointer>     |   |     `-CallExpr 0x147044290 <col:14, col:64> 'int'     |   |       |-ImplicitCastExpr 0x147044278 <col:14> 'int (*)()' <FunctionToPointerDecay>     |   |       | `-DeclRefExpr 0x1470441d8 <col:14> 'int ()' Function 0x147044120 'bpf_patch_insn_data' 'int ()'     |   |       |-ImplicitCastExpr 0x1470442d0 <col:34> 'struct bpf_verifier_env *' <LValueToRValue>     |   |       | `-DeclRefExpr 0x1470441f8 <col:34> 'struct bpf_verifier_env *' lvalue ParmVar 0x14701f848 'env' 'struct bpf_verifier_env *'     |   |       |-ImplicitCastExpr 0x1470442e8 <col:39> 'int' <LValueToRValue>     |   |       | `-DeclRefExpr 0x147044218 <col:39> 'int' lvalue Var 0x147041ee8 'adj_idx' 'int'     |   |       |-ImplicitCastExpr 0x147044300 <col:48> 'struct bpf_insn *' <LValueToRValue>     |   |       | `-DeclRefExpr 0x147044238 <col:48> 'struct bpf_insn *' lvalue Var 0x14703f3b8 'patch' 'struct bpf_insn *'     |   |       `-ImplicitCastExpr 0x147044318 <col:55> 'int' <LValueToRValue>     |   |         `-DeclRefExpr 0x147044258 <col:55> 'int' lvalue Var 0x14703f818 'patch_len' 'int'     |   |-BinaryOperator 0x147044458 <line:67:3, col:15> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x147044410 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x1470443d8 <col:3> 'struct bpf_verifier_env *' lvalue ParmVar 0x14701f848 'env' 'struct bpf_verifier_env *'     |   | `-DeclRefExpr 0x147044438 <col:15> 'struct bpf_prog *' lvalue Var 0x14703fda8 'new_prog' 'struct bpf_prog *'     |   |-BinaryOperator 0x1470444f8 <line:68:3, col:21> 'struct bpf_insn *' contains-errors '='     |   | |-DeclRefExpr 0x147044478 <col:3> 'struct bpf_insn *' contains-errors lvalue Var 0x14703fb18 'insns' 'struct bpf_insn *'     |   | `-RecoveryExpr 0x1470444d0 <col:11, col:21> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x147044498 <col:11> 'struct bpf_prog *' lvalue Var 0x14703fda8 'new_prog' 'struct bpf_prog *'     |   |-BinaryOperator 0x147044598 <line:69:3, col:14> 'struct bpf_insn_aux_data *' contains-errors '='     |   | |-DeclRefExpr 0x147044518 <col:3> 'struct bpf_insn_aux_data *' contains-errors lvalue Var 0x14703f688 'aux' 'struct bpf_insn_aux_data *'     |   | `-RecoveryExpr 0x147044570 <col:9, col:14> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x147044538 <col:9> 'struct bpf_verifier_env *' lvalue ParmVar 0x14701f848 'env' 'struct bpf_verifier_env *'     |   `-CompoundAssignOperator 0x147044658 <line:70:3, col:24> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'     |     |-DeclRefExpr 0x1470445b8 <col:3> 'int' lvalue Var 0x14703f898 'delta' 'int'     |     `-BinaryOperator 0x147044638 <col:12, col:24> 'int' '-'     |       |-ImplicitCastExpr 0x147044620 <col:12> 'int' <LValueToRValue>     |       | `-DeclRefExpr 0x1470445d8 <col:12> 'int' lvalue Var 0x14703f818 'patch_len' 'int'     |       `-IntegerLiteral 0x147044600 <col:24> 'int' 1     `-ReturnStmt 0x147044760 <line:73:2, col:9>       `-IntegerLiteral 0x147044740 <col:9> 'int' 0 ","19306":"`-FunctionDecl 0x159140c80  col:2 implicit used strcpy 'char *(char *, const char *)' extern   |-ParmVarDecl 0x159140d80 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x159140de8 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x159140d28 <<invalid sloc>> Implicit 885 ","19889":"`-FunctionDecl 0x12b80df18  line:1:23 invalid spl_filesystem_tree_get_iterator 'int *(int *, int *, int)'   |-ParmVarDecl 0x12b80dd28 <col:56, col:74> col:74 invalid ce 'int *'   |-ParmVarDecl 0x12b80dda8 <col:78, col:84> col:84 invalid object 'int *'   |-ParmVarDecl 0x12b80de28 <col:92, col:96> col:96 used by_ref 'int'   `-CompoundStmt 0x12c808fe0 <line:2:1, line:20:1>     |-IfStmt 0x12b80e2d8 <line:6:2, line:8:2>     | |-ImplicitCastExpr 0x12b80e028 <line:6:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x12b80e008 <col:6> 'int' lvalue ParmVar 0x12b80de28 'by_ref' 'int'     | `-CompoundStmt 0x12b80e2c0 <col:14, line:8:2>     |   `-CallExpr 0x12b80e290 <line:7:3, col:28> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12b80e1a0 <col:3> 'int ()' Function 0x12b80e0e8 'zend_error' 'int ()'     |     |-RecoveryExpr 0x12b80e270 <col:14> '<dependent type>' contains-errors lvalue     |     `-StringLiteral 0x12b80e220 <col:23> 'char[4]' lvalue \"STR\"     |-IfStmt 0x12c808e60 <line:13:2, line:16:2>     | |-BinaryOperator 0x12c808e10 <line:13:6, col:31> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x12c808da8 <col:6, col:23> '<dependent type>' contains-errors lvalue .data     | | | `-CXXDependentScopeMemberExpr 0x12c808d60 <col:6, col:16> '<dependent type>' contains-errors lvalue ->intern     | | |   `-RecoveryExpr 0x12c808d40 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12c808df0 <col:31> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12c808e50 <col:37, line:16:2>     `-CallExpr 0x12c808fb8 <line:17:2, col:22> '<dependent type>' contains-errors       |-DeclRefExpr 0x12c808f60 <col:2> 'int ()' Function 0x12c808ea8 'zval_add_ref' 'int ()'       `-UnaryOperator 0x12c808fa0 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x12c808f80 <col:16> '<dependent type>' contains-errors lvalue ","19524":"`-FunctionDecl 0x12b928238  line:1:1 TEST_F 'int (int, int)'   |-ParmVarDecl 0x12b928158 <col:8> col:8 HttpConnectionManagerConfigTest 'int'   |-ParmVarDecl 0x12b9280d8 <col:41> col:41 DEPRECATED_FEATURE_TEST 'int'   `-CompoundStmt 0x12b9287a8 <col:79, line:17:1>     `-CallExpr 0x12b928778 <line:16:3, col:55> '<dependent type>' contains-errors       |-DeclRefExpr 0x12b928460 <col:3> 'int ()' Function 0x12b9283a8 'EXPECT_EQ' 'int ()'       |-IntegerLiteral 0x12b928480 <col:13> 'int' 1000       `-CallExpr 0x12b928758 <col:19, col:54> '<dependent type>' contains-errors         `-CXXDependentScopeMemberExpr 0x12b928710 <col:19, col:48> '<dependent type>' contains-errors lvalue .count           `-CallExpr 0x12b9286f0 <col:19, col:46> '<dependent type>' contains-errors             `-CXXDependentScopeMemberExpr 0x12b9286a8 <col:19, col:40> '<dependent type>' contains-errors lvalue .value               `-CallExpr 0x12b928688 <col:19, col:38> '<dependent type>' contains-errors                 `-CXXDependentScopeMemberExpr 0x12b928640 <col:19, col:26> '<dependent type>' contains-errors lvalue .idleTimeout                   `-RecoveryExpr 0x12b928620 <col:19> '<dependent type>' contains-errors lvalue ","20130":"`-FunctionDecl 0x147828450  col:5 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x147828550 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x1478285b8 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x147828620 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1478284f8 <<invalid sloc>> Implicit 900 ","19265":"`-FunctionDecl 0x13f0d75f0  line:1:6 invalid end_read_record 'void (int *)'   |-ParmVarDecl 0x13f0d7528 <col:22, col:35> col:35 referenced invalid info 'int *'   `-CompoundStmt 0x13f0f0e60 <line:2:1, line:13:1>     |-CallExpr 0x13f0d7840 <line:4:3, col:18> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13f0d7800 <col:3> 'int ()' Function 0x13f0d7748 'free_cache' 'int ()'     | `-RecoveryExpr 0x13f0d7820 <col:14> '<dependent type>' contains-errors lvalue     `-IfStmt 0x13f0f0e40 <line:5:3, line:12:3>       |-CXXDependentScopeMemberExpr 0x13f0d7888 <line:5:7, col:13> '<dependent type>' contains-errors lvalue ->table       | `-RecoveryExpr 0x13f0d7868 <col:7> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x13f0f0e20 <line:6:3, line:12:3>         |-IfStmt 0x13f0f0d30 <line:9:5, line:10:53>         | |-BinaryOperator 0x13f0d7ba8 <line:9:9, col:30> 'int' contains-errors '!='         | | |-CXXDependentScopeMemberExpr 0x13f0d7b08 <col:9, col:15> '<dependent type>' contains-errors lvalue ->read_record         | | | `-RecoveryExpr 0x13f0d7ae8 <col:9> '<dependent type>' contains-errors lvalue         | | `-RecoveryExpr 0x13f0d7b88 <col:30> '<dependent type>' contains-errors lvalue         | `-CStyleCastExpr 0x13f0f0d08 <line:10:7, col:53> 'void' contains-errors <ToVoid>         |   `-CallExpr 0x13f0f0cd8 <col:14, col:53> '<dependent type>' contains-errors         |     `-CXXDependentScopeMemberExpr 0x13f0f0c90 <col:14, col:33> '<dependent type>' contains-errors lvalue ->ha_index_or_rnd_end         |       `-CXXDependentScopeMemberExpr 0x13f0f0c48 <col:14, col:27> '<dependent type>' contains-errors lvalue ->file         |         `-CXXDependentScopeMemberExpr 0x13f0f0c00 <col:14, col:20> '<dependent type>' contains-errors lvalue ->table         |           `-RecoveryExpr 0x13f0d7bc8 <col:14> '<dependent type>' contains-errors lvalue         `-BinaryOperator 0x13f0f0e00 <line:11:5, col:17> '<dependent type>' contains-errors '='           |-CXXDependentScopeMemberExpr 0x13f0f0d98 <col:5, col:11> '<dependent type>' contains-errors lvalue ->table           | `-RecoveryExpr 0x13f0f0d70 <col:5> '<dependent type>' contains-errors lvalue           |   `-DeclRefExpr 0x13f0f0d50 <col:5> 'int *' lvalue ParmVar 0x13f0d7528 'info' 'int *'           `-IntegerLiteral 0x13f0f0de0 <col:17> 'int' 0 ","19622":"`-FunctionDecl 0x14d026670  line:1:13 scalar32_min_max_xor 'void (struct bpf_reg_state *, struct bpf_reg_state *)' static   |-ParmVarDecl 0x14d00e248 <col:34, col:56> col:56 used dst_reg 'struct bpf_reg_state *'   |-ParmVarDecl 0x14d00e338 <line:2:6, col:28> col:28 src_reg 'struct bpf_reg_state *'   `-CompoundStmt 0x14d027368 <line:3:1, line:25:1>     |-DeclStmt 0x14d026ac0 <line:6:2, col:55>     | |-RecordDecl 0x14d026788 <col:2, col:9> col:9 struct tnum     | `-VarDecl 0x14d026888 <col:2, col:14> col:14 invalid var32_off 'struct tnum'     |-IfStmt 0x14d026b98 <line:10:2, line:11:3>     | |-BinaryOperator 0x14d026b68 <line:10:6, col:19> 'int' contains-errors '&&'     | | |-RecoveryExpr 0x14d026b28 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14d026b48 <col:19> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14d026b88 <line:11:3>     |-BinaryOperator 0x14d026c80 <line:14:2, col:37> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14d026bf0 <col:2, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14d026bb8 <col:2> 'struct bpf_reg_state *' lvalue ParmVar 0x14d00e248 'dst_reg' 'struct bpf_reg_state *'     | `-CXXDependentScopeMemberExpr 0x14d026c38 <col:27, col:37> '<dependent type>' contains-errors lvalue .value     |   `-RecoveryExpr 0x14d026c18 <col:27> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14d026df0 <line:15:2, col:55> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14d026cd8 <col:2, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14d026ca0 <col:2> 'struct bpf_reg_state *' lvalue ParmVar 0x14d00e248 'dst_reg' 'struct bpf_reg_state *'     | `-BinaryOperator 0x14d026dd0 <col:27, col:55> '<dependent type>' contains-errors '|'     |   |-CXXDependentScopeMemberExpr 0x14d026d20 <col:27, col:37> '<dependent type>' contains-errors lvalue .value     |   | `-RecoveryExpr 0x14d026d00 <col:27> '<dependent type>' contains-errors lvalue     |   `-CXXDependentScopeMemberExpr 0x14d026d88 <col:45, col:55> '<dependent type>' contains-errors lvalue .mask     |     `-RecoveryExpr 0x14d026d68 <col:45> '<dependent type>' contains-errors lvalue     `-IfStmt 0x14d027338 <line:17:2, line:24:2> has_else       |-BinaryOperator 0x14d026f68 <line:17:6, col:49> 'int' contains-errors '&&'       | |-BinaryOperator 0x14d026e90 <col:6, col:32> 'int' contains-errors '>='       | | |-RecoveryExpr 0x14d026e48 <col:6, col:15> '<dependent type>' contains-errors lvalue       | | | `-DeclRefExpr 0x14d026e10 <col:6> 'struct bpf_reg_state *' lvalue ParmVar 0x14d00e248 'dst_reg' 'struct bpf_reg_state *'       | | `-IntegerLiteral 0x14d026e70 <col:32> 'int' 0       | `-BinaryOperator 0x14d026f48 <col:37, col:49> 'int' contains-errors '>='       |   |-RecoveryExpr 0x14d026f28 <col:37> '<dependent type>' contains-errors lvalue       |   `-IntegerLiteral 0x14d026ec8 <col:49> 'int' 0       |-CompoundStmt 0x14d027148 <col:52, line:21:2>       | |-BinaryOperator 0x14d027048 <line:19:3, col:37> '<dependent type>' contains-errors '='       | | |-RecoveryExpr 0x14d026fc0 <col:3, col:12> '<dependent type>' contains-errors lvalue       | | | `-DeclRefExpr 0x14d026f88 <col:3> 'struct bpf_reg_state *' lvalue ParmVar 0x14d00e248 'dst_reg' 'struct bpf_reg_state *'       | | `-RecoveryExpr 0x14d027020 <col:28, col:37> '<dependent type>' contains-errors lvalue       | |   `-DeclRefExpr 0x14d026fe8 <col:28> 'struct bpf_reg_state *' lvalue ParmVar 0x14d00e248 'dst_reg' 'struct bpf_reg_state *'       | `-BinaryOperator 0x14d027128 <line:20:3, col:37> '<dependent type>' contains-errors '='       |   |-RecoveryExpr 0x14d0270a0 <col:3, col:12> '<dependent type>' contains-errors lvalue       |   | `-DeclRefExpr 0x14d027068 <col:3> 'struct bpf_reg_state *' lvalue ParmVar 0x14d00e248 'dst_reg' 'struct bpf_reg_state *'       |   `-RecoveryExpr 0x14d027100 <col:28, col:37> '<dependent type>' contains-errors lvalue       |     `-DeclRefExpr 0x14d0270c8 <col:28> 'struct bpf_reg_state *' lvalue ParmVar 0x14d00e248 'dst_reg' 'struct bpf_reg_state *'       `-CompoundStmt 0x14d027318 <line:21:9, line:24:2>         |-BinaryOperator 0x14d027220 <line:22:3, col:28> '<dependent type>' contains-errors '='         | |-RecoveryExpr 0x14d0271a0 <col:3, col:12> '<dependent type>' contains-errors lvalue         | | `-DeclRefExpr 0x14d027168 <col:3> 'struct bpf_reg_state *' lvalue ParmVar 0x14d00e248 'dst_reg' 'struct bpf_reg_state *'         | `-RecoveryExpr 0x14d027200 <col:28> '<dependent type>' contains-errors lvalue         `-BinaryOperator 0x14d0272f8 <line:23:3, col:28> '<dependent type>' contains-errors '='           |-RecoveryExpr 0x14d027278 <col:3, col:12> '<dependent type>' contains-errors lvalue           | `-DeclRefExpr 0x14d027240 <col:3> 'struct bpf_reg_state *' lvalue ParmVar 0x14d00e248 'dst_reg' 'struct bpf_reg_state *'           `-RecoveryExpr 0x14d0272d8 <col:28> '<dependent type>' contains-errors lvalue ","19728":"`-FunctionDecl 0x159941800  line:1:13 invalid set_pixel_format 'void (int *, int, int, int, int, int, int, int, int, int, int)' static   |-ParmVarDecl 0x159928128 <col:30, col:40> col:40 referenced invalid vs 'int *'   |-ParmVarDecl 0x1599281a8 <line:2:30, col:34> col:34 used bits_per_pixel 'int'   |-ParmVarDecl 0x159928228 <col:50, col:54> col:54 depth 'int'   |-ParmVarDecl 0x1599282a8 <line:3:30, col:34> col:34 used big_endian_flag 'int'   |-ParmVarDecl 0x159928328 <col:51, col:55> col:55 used true_color_flag 'int'   |-ParmVarDecl 0x1599283a8 <line:4:30, col:34> col:34 used red_max 'int'   |-ParmVarDecl 0x159928428 <col:43, col:47> col:47 used green_max 'int'   |-ParmVarDecl 0x1599284a8 <col:58, col:62> col:62 used blue_max 'int'   |-ParmVarDecl 0x159928528 <line:5:30, col:34> col:34 used red_shift 'int'   |-ParmVarDecl 0x1599285a8 <col:45, col:49> col:49 used green_shift 'int'   |-ParmVarDecl 0x159928628 <col:62, col:66> col:66 used blue_shift 'int'   `-CompoundStmt 0x15a009cd0 <line:6:1, line:34:1>     |-IfStmt 0x159941b48 <line:7:5, line:10:5>     | |-UnaryOperator 0x159941938 <line:7:9, col:10> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x159941920 <col:10> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x159941900 <col:10> 'int' lvalue ParmVar 0x159928328 'true_color_flag' 'int'     | `-CompoundStmt 0x159941b28 <col:27, line:10:5>     |   |-CallExpr 0x159941af0 <line:8:9, col:28> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x159941ab0 <col:9> 'int ()' Function 0x1599419f8 'vnc_client_error' 'int ()'     |   | `-RecoveryExpr 0x159941ad0 <col:26> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x159941b18 <line:9:9>     |-BinaryOperator 0x159941d40 <line:12:5, col:38> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x159941bb0 <col:5, col:9> '<dependent type>' contains-errors lvalue ->clientds     | | `-RecoveryExpr 0x159941b88 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x159941b68 <col:5> 'int *' lvalue ParmVar 0x159928128 'vs' 'int *'     | `-UnaryOperator 0x159941d28 <col:20, col:38> '<dependent type>' contains-errors prefix '*' cannot overflow     |   `-ImplicitCastExpr 0x159941d10 <col:21, col:38> '<dependent type>' contains-errors <LValueToRValue>     |     `-ParenExpr 0x159941cf0 <col:21, col:38> '<dependent type>' contains-errors lvalue     |       `-CXXDependentScopeMemberExpr 0x159941ca8 <col:22, col:36> '<dependent type>' contains-errors lvalue .ds     |         `-CXXDependentScopeMemberExpr 0x159941c60 <col:22, col:30> '<dependent type>' contains-errors lvalue ->guest     |           `-CXXDependentScopeMemberExpr 0x159941c18 <col:22, col:26> '<dependent type>' contains-errors lvalue ->vd     |             `-RecoveryExpr 0x159941bf8 <col:22> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x159941ea0 <line:13:5, col:28> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x159941e38 <col:5, col:21> '<dependent type>' contains-errors lvalue .rmax     | | `-CXXDependentScopeMemberExpr 0x159941df0 <col:5, col:18> '<dependent type>' contains-errors lvalue .pf     | |   `-CXXDependentScopeMemberExpr 0x159941da8 <col:5, col:9> '<dependent type>' contains-errors lvalue ->clientds     | |     `-RecoveryExpr 0x159941d80 <col:5> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x159941d60 <col:5> 'int *' lvalue ParmVar 0x159928128 'vs' 'int *'     | `-DeclRefExpr 0x159941e80 <col:28> 'int' lvalue ParmVar 0x1599283a8 'red_max' 'int'     |-BinaryOperator 0x159942188 <line:14:5, col:49> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x159941f98 <col:5, col:21> '<dependent type>' contains-errors lvalue .rbits     | | `-CXXDependentScopeMemberExpr 0x159941f50 <col:5, col:18> '<dependent type>' contains-errors lvalue .pf     | |   `-CXXDependentScopeMemberExpr 0x159941f08 <col:5, col:9> '<dependent type>' contains-errors lvalue ->clientds     | |     `-RecoveryExpr 0x159941ee0 <col:5> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x159941ec0 <col:5> 'int *' lvalue ParmVar 0x159928128 'vs' 'int *'     | `-CallExpr 0x159942148 <col:29, col:49> 'int'     |   |-ImplicitCastExpr 0x159942130 <col:29> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1599420c0 <col:29> 'int ()' Function 0x159942008 'hweight_long' 'int ()'     |   `-ImplicitCastExpr 0x159942170 <col:42> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x1599420e0 <col:42> 'int' lvalue ParmVar 0x1599283a8 'red_max' 'int'     |-BinaryOperator 0x1599422e8 <line:15:5, col:30> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x159942280 <col:5, col:21> '<dependent type>' contains-errors lvalue .rshift     | | `-CXXDependentScopeMemberExpr 0x159942238 <col:5, col:18> '<dependent type>' contains-errors lvalue .pf     | |   `-CXXDependentScopeMemberExpr 0x1599421f0 <col:5, col:9> '<dependent type>' contains-errors lvalue ->clientds     | |     `-RecoveryExpr 0x1599421c8 <col:5> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x1599421a8 <col:5> 'int *' lvalue ParmVar 0x159928128 'vs' 'int *'     | `-DeclRefExpr 0x1599422c8 <col:30> 'int' lvalue ParmVar 0x159928528 'red_shift' 'int'     |-BinaryOperator 0x1599424b8 <line:16:5, col:40> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1599423e0 <col:5, col:21> '<dependent type>' contains-errors lvalue .rmask     | | `-CXXDependentScopeMemberExpr 0x159942398 <col:5, col:18> '<dependent type>' contains-errors lvalue .pf     | |   `-CXXDependentScopeMemberExpr 0x159942350 <col:5, col:9> '<dependent type>' contains-errors lvalue ->clientds     | |     `-RecoveryExpr 0x159942328 <col:5> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x159942308 <col:5> 'int *' lvalue ParmVar 0x159928128 'vs' 'int *'     | `-BinaryOperator 0x159942498 <col:29, col:40> 'int' '<<'     |   |-ImplicitCastExpr 0x159942468 <col:29> 'int' <LValueToRValue>     |   | `-DeclRefExpr 0x159942428 <col:29> 'int' lvalue ParmVar 0x1599283a8 'red_max' 'int'     |   `-ImplicitCastExpr 0x159942480 <col:40> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x159942448 <col:40> 'int' lvalue ParmVar 0x159928528 'red_shift' 'int'     |-BinaryOperator 0x159942618 <line:17:5, col:28> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1599425b0 <col:5, col:21> '<dependent type>' contains-errors lvalue .gmax     | | `-CXXDependentScopeMemberExpr 0x159942568 <col:5, col:18> '<dependent type>' contains-errors lvalue .pf     | |   `-CXXDependentScopeMemberExpr 0x159942520 <col:5, col:9> '<dependent type>' contains-errors lvalue ->clientds     | |     `-RecoveryExpr 0x1599424f8 <col:5> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x1599424d8 <col:5> 'int *' lvalue ParmVar 0x159928128 'vs' 'int *'     | `-DeclRefExpr 0x1599425f8 <col:28> 'int' lvalue ParmVar 0x159928428 'green_max' 'int'     |-BinaryOperator 0x15a008800 <line:18:5, col:51> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x159942710 <col:5, col:21> '<dependent type>' contains-errors lvalue .gbits     | | `-CXXDependentScopeMemberExpr 0x1599426c8 <col:5, col:18> '<dependent type>' contains-errors lvalue .pf     | |   `-CXXDependentScopeMemberExpr 0x159942680 <col:5, col:9> '<dependent type>' contains-errors lvalue ->clientds     | |     `-RecoveryExpr 0x159942658 <col:5> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x159942638 <col:5> 'int *' lvalue ParmVar 0x159928128 'vs' 'int *'     | `-CallExpr 0x1599427b0 <col:29, col:51> 'int'     |   |-ImplicitCastExpr 0x159942798 <col:29> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x159942758 <col:29> 'int ()' Function 0x159942008 'hweight_long' 'int ()'     |   `-ImplicitCastExpr 0x1599427d8 <col:42> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x159942778 <col:42> 'int' lvalue ParmVar 0x159928428 'green_max' 'int'     |-BinaryOperator 0x15a008960 <line:19:5, col:30> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15a0088f8 <col:5, col:21> '<dependent type>' contains-errors lvalue .gshift     | | `-CXXDependentScopeMemberExpr 0x15a0088b0 <col:5, col:18> '<dependent type>' contains-errors lvalue .pf     | |   `-CXXDependentScopeMemberExpr 0x15a008868 <col:5, col:9> '<dependent type>' contains-errors lvalue ->clientds     | |     `-RecoveryExpr 0x15a008840 <col:5> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x15a008820 <col:5> 'int *' lvalue ParmVar 0x159928128 'vs' 'int *'     | `-DeclRefExpr 0x15a008940 <col:30> 'int' lvalue ParmVar 0x1599285a8 'green_shift' 'int'     |-BinaryOperator 0x15a008b30 <line:20:5, col:42> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15a008a58 <col:5, col:21> '<dependent type>' contains-errors lvalue .gmask     | | `-CXXDependentScopeMemberExpr 0x15a008a10 <col:5, col:18> '<dependent type>' contains-errors lvalue .pf     | |   `-CXXDependentScopeMemberExpr 0x15a0089c8 <col:5, col:9> '<dependent type>' contains-errors lvalue ->clientds     | |     `-RecoveryExpr 0x15a0089a0 <col:5> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x15a008980 <col:5> 'int *' lvalue ParmVar 0x159928128 'vs' 'int *'     | `-BinaryOperator 0x15a008b10 <col:29, col:42> 'int' '<<'     |   |-ImplicitCastExpr 0x15a008ae0 <col:29> 'int' <LValueToRValue>     |   | `-DeclRefExpr 0x15a008aa0 <col:29> 'int' lvalue ParmVar 0x159928428 'green_max' 'int'     |   `-ImplicitCastExpr 0x15a008af8 <col:42> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x15a008ac0 <col:42> 'int' lvalue ParmVar 0x1599285a8 'green_shift' 'int'     |-BinaryOperator 0x15a008c90 <line:21:5, col:28> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15a008c28 <col:5, col:21> '<dependent type>' contains-errors lvalue .bmax     | | `-CXXDependentScopeMemberExpr 0x15a008be0 <col:5, col:18> '<dependent type>' contains-errors lvalue .pf     | |   `-CXXDependentScopeMemberExpr 0x15a008b98 <col:5, col:9> '<dependent type>' contains-errors lvalue ->clientds     | |     `-RecoveryExpr 0x15a008b70 <col:5> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x15a008b50 <col:5> 'int *' lvalue ParmVar 0x159928128 'vs' 'int *'     | `-DeclRefExpr 0x15a008c70 <col:28> 'int' lvalue ParmVar 0x1599284a8 'blue_max' 'int'     |-BinaryOperator 0x15a008e68 <line:22:5, col:50> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15a008d88 <col:5, col:21> '<dependent type>' contains-errors lvalue .bbits     | | `-CXXDependentScopeMemberExpr 0x15a008d40 <col:5, col:18> '<dependent type>' contains-errors lvalue .pf     | |   `-CXXDependentScopeMemberExpr 0x15a008cf8 <col:5, col:9> '<dependent type>' contains-errors lvalue ->clientds     | |     `-RecoveryExpr 0x15a008cd0 <col:5> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x15a008cb0 <col:5> 'int *' lvalue ParmVar 0x159928128 'vs' 'int *'     | `-CallExpr 0x15a008e28 <col:29, col:50> 'int'     |   |-ImplicitCastExpr 0x15a008e10 <col:29> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x15a008dd0 <col:29> 'int ()' Function 0x159942008 'hweight_long' 'int ()'     |   `-ImplicitCastExpr 0x15a008e50 <col:42> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x15a008df0 <col:42> 'int' lvalue ParmVar 0x1599284a8 'blue_max' 'int'     |-BinaryOperator 0x15a008fc8 <line:23:5, col:30> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15a008f60 <col:5, col:21> '<dependent type>' contains-errors lvalue .bshift     | | `-CXXDependentScopeMemberExpr 0x15a008f18 <col:5, col:18> '<dependent type>' contains-errors lvalue .pf     | |   `-CXXDependentScopeMemberExpr 0x15a008ed0 <col:5, col:9> '<dependent type>' contains-errors lvalue ->clientds     | |     `-RecoveryExpr 0x15a008ea8 <col:5> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x15a008e88 <col:5> 'int *' lvalue ParmVar 0x159928128 'vs' 'int *'     | `-DeclRefExpr 0x15a008fa8 <col:30> 'int' lvalue ParmVar 0x159928628 'blue_shift' 'int'     |-BinaryOperator 0x15a009198 <line:24:5, col:41> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15a0090c0 <col:5, col:21> '<dependent type>' contains-errors lvalue .bmask     | | `-CXXDependentScopeMemberExpr 0x15a009078 <col:5, col:18> '<dependent type>' contains-errors lvalue .pf     | |   `-CXXDependentScopeMemberExpr 0x15a009030 <col:5, col:9> '<dependent type>' contains-errors lvalue ->clientds     | |     `-RecoveryExpr 0x15a009008 <col:5> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x15a008fe8 <col:5> 'int *' lvalue ParmVar 0x159928128 'vs' 'int *'     | `-BinaryOperator 0x15a009178 <col:29, col:41> 'int' '<<'     |   |-ImplicitCastExpr 0x15a009148 <col:29> 'int' <LValueToRValue>     |   | `-DeclRefExpr 0x15a009108 <col:29> 'int' lvalue ParmVar 0x1599284a8 'blue_max' 'int'     |   `-ImplicitCastExpr 0x15a009160 <col:41> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x15a009128 <col:41> 'int' lvalue ParmVar 0x159928628 'blue_shift' 'int'     |-BinaryOperator 0x15a0092f8 <line:25:5, col:38> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15a009290 <col:5, col:21> '<dependent type>' contains-errors lvalue .bits_per_pixel     | | `-CXXDependentScopeMemberExpr 0x15a009248 <col:5, col:18> '<dependent type>' contains-errors lvalue .pf     | |   `-CXXDependentScopeMemberExpr 0x15a009200 <col:5, col:9> '<dependent type>' contains-errors lvalue ->clientds     | |     `-RecoveryExpr 0x15a0091d8 <col:5> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x15a0091b8 <col:5> 'int *' lvalue ParmVar 0x159928128 'vs' 'int *'     | `-DeclRefExpr 0x15a0092d8 <col:38> 'int' lvalue ParmVar 0x1599281a8 'bits_per_pixel' 'int'     |-BinaryOperator 0x15a0094b0 <line:26:5, col:56> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15a0093f0 <col:5, col:21> '<dependent type>' contains-errors lvalue .bytes_per_pixel     | | `-CXXDependentScopeMemberExpr 0x15a0093a8 <col:5, col:18> '<dependent type>' contains-errors lvalue .pf     | |   `-CXXDependentScopeMemberExpr 0x15a009360 <col:5, col:9> '<dependent type>' contains-errors lvalue ->clientds     | |     `-RecoveryExpr 0x15a009338 <col:5> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x15a009318 <col:5> 'int *' lvalue ParmVar 0x159928128 'vs' 'int *'     | `-BinaryOperator 0x15a009490 <col:39, col:56> 'int' '\/'     |   |-ImplicitCastExpr 0x15a009478 <col:39> 'int' <LValueToRValue>     |   | `-DeclRefExpr 0x15a009438 <col:39> 'int' lvalue ParmVar 0x1599281a8 'bits_per_pixel' 'int'     |   `-IntegerLiteral 0x15a009458 <col:56> 'int' 8     |-BinaryOperator 0x15a0096f0 <line:27:5, col:57> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15a0095a8 <col:5, col:21> '<dependent type>' contains-errors lvalue .depth     | | `-CXXDependentScopeMemberExpr 0x15a009560 <col:5, col:18> '<dependent type>' contains-errors lvalue .pf     | |   `-CXXDependentScopeMemberExpr 0x15a009518 <col:5, col:9> '<dependent type>' contains-errors lvalue ->clientds     | |     `-RecoveryExpr 0x15a0094f0 <col:5> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x15a0094d0 <col:5> 'int *' lvalue ParmVar 0x159928128 'vs' 'int *'     | `-ConditionalOperator 0x15a0096c0 <col:29, col:57> 'int'     |   |-BinaryOperator 0x15a009648 <col:29, col:47> 'int' '=='     |   | |-ImplicitCastExpr 0x15a009630 <col:29> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x15a0095f0 <col:29> 'int' lvalue ParmVar 0x1599281a8 'bits_per_pixel' 'int'     |   | `-IntegerLiteral 0x15a009610 <col:47> 'int' 32     |   |-IntegerLiteral 0x15a009668 <col:52> 'int' 24     |   `-ImplicitCastExpr 0x15a0096a8 <col:57> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x15a009688 <col:57> 'int' lvalue ParmVar 0x1599281a8 'bits_per_pixel' 'int'     |-BinaryOperator 0x15a0098f8 <line:28:5, col:67> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15a0097a0 <col:5, col:18> '<dependent type>' contains-errors lvalue .flags     | | `-CXXDependentScopeMemberExpr 0x15a009758 <col:5, col:9> '<dependent type>' contains-errors lvalue ->clientds     | |   `-RecoveryExpr 0x15a009730 <col:5> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x15a009710 <col:5> 'int *' lvalue ParmVar 0x159928128 'vs' 'int *'     | `-ConditionalOperator 0x15a0098c8 <col:26, col:67> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15a009800 <col:26> 'int' lvalue ParmVar 0x1599282a8 'big_endian_flag' 'int'     |   |-RecoveryExpr 0x15a0098a8 <col:44> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x15a009838 <col:67> 'int' 0     |-CallExpr 0x15a009a38 <line:30:5, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15a0099f8 <col:5> 'int ()' Function 0x15a009940 'set_pixel_conversion' 'int ()'     | `-RecoveryExpr 0x15a009a18 <col:26> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15a009b78 <line:32:5, col:23> 'int'     | `-ImplicitCastExpr 0x15a009b60 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x15a009b40 <col:5> 'int ()' Function 0x15a009a88 'vga_hw_invalidate' 'int ()'     `-CallExpr 0x15a009cb0 <line:33:5, col:19> 'int'       `-ImplicitCastExpr 0x15a009c98 <col:5> 'int (*)()' <FunctionToPointerDecay>         `-DeclRefExpr 0x15a009c78 <col:5> 'int ()' Function 0x15a009bc0 'vga_hw_update' 'int ()' ","19429":"`-FunctionDecl 0x13a928438  line:1:1 invalid efmpat_to_regpat 'int (char *, char *, int *, int, int)'   |-ParmVarDecl 0x13a9280f0 <line:2:2, col:10> col:10 used efmpat 'char *'   |-ParmVarDecl 0x13a928170 <line:3:2, col:10> col:10 used regpat 'char *'   |-ParmVarDecl 0x13a928228 <line:4:2, col:9> col:9 referenced invalid efminfo 'int *'   |-ParmVarDecl 0x13a9282a8 <line:5:2, col:6> col:6 used idx 'int'   |-ParmVarDecl 0x13a928328 <line:6:2, col:6> col:6 round 'int'   `-CompoundStmt 0x13a9430b0 <line:7:1, line:67:1>     |-DeclStmt 0x13a928588 <line:8:5, col:19>     | `-VarDecl 0x13a928520 <col:5, col:13> col:13 used srcptr 'char *'     |-IfStmt 0x13a940cd0 <line:10:5, line:15:5>     | |-ArraySubscriptExpr 0x13a928658 <line:10:9, col:26> '<dependent type>' contains-errors lvalue     | | |-ImplicitCastExpr 0x13a928628 <col:9, col:18> '<dependent type>' contains-errors <LValueToRValue>     | | | `-CXXDependentScopeMemberExpr 0x13a9285c0 <col:9, col:18> '<dependent type>' contains-errors lvalue ->addr     | | |   `-RecoveryExpr 0x13a9285a0 <col:9> '<dependent type>' contains-errors lvalue     | | `-ImplicitCastExpr 0x13a928640 <col:23> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x13a928608 <col:23> 'int' lvalue ParmVar 0x13a9282a8 'idx' 'int'     | `-CompoundStmt 0x13a940cb0 <line:11:5, line:15:5>     |   |-CallExpr 0x13a940c38 <line:13:2, col:51> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13a9287d0 <col:2> 'int ()' Function 0x13a928718 'semsg' 'int ()'     |   | |-CallExpr 0x13a940be0 <col:8, col:41> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x13a940ae0 <col:8> 'int ()' Function 0x13a940a28 '_' 'int ()'     |   | | `-RecoveryExpr 0x13a940bc0 <col:10> '<dependent type>' contains-errors lvalue     |   | `-UnaryOperator 0x13a940c20 <col:44, col:45> 'char' lvalue prefix '*' cannot overflow     |   |   `-ImplicitCastExpr 0x13a940c08 <col:45> 'char *' <LValueToRValue>     |   |     `-DeclRefExpr 0x13a940b40 <col:45> 'char *' lvalue ParmVar 0x13a9280f0 'efmpat' 'char *'     |   `-ReturnStmt 0x13a940ca0 <line:14:2, col:9>     |     `-RecoveryExpr 0x13a940c80 <col:9> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13a9410f0 <line:16:5, line:23:5>     | |-RecoveryExpr 0x13a941030 <line:16:9, line:19:58> '_Bool' contains-errors     | `-CompoundStmt 0x13a9410e0 <line:20:5, line:23:5>     |-BinaryOperator 0x13a9412e0 <line:25:5, col:17> 'char' '='     | |-UnaryOperator 0x13a941298 <col:5, col:12> 'char' lvalue prefix '*' cannot overflow     | | `-UnaryOperator 0x13a941280 <col:6, col:12> 'char *' postfix '++'     | |   `-DeclRefExpr 0x13a941260 <col:6> 'char *' lvalue ParmVar 0x13a928170 'regpat' 'char *'     | `-ImplicitCastExpr 0x13a9412c8 <col:17> 'char' <IntegralCast>     |   `-CharacterLiteral 0x13a9412b0 <col:17> 'int' 92     |-BinaryOperator 0x13a941380 <line:26:5, col:17> 'char' '='     | |-UnaryOperator 0x13a941338 <col:5, col:12> 'char' lvalue prefix '*' cannot overflow     | | `-UnaryOperator 0x13a941320 <col:6, col:12> 'char *' postfix '++'     | |   `-DeclRefExpr 0x13a941300 <col:6> 'char *' lvalue ParmVar 0x13a928170 'regpat' 'char *'     | `-ImplicitCastExpr 0x13a941368 <col:17> 'char' <IntegralCast>     |   `-CharacterLiteral 0x13a941350 <col:17> 'int' 40     |-IfStmt 0x13a942ee0 <line:37:5, line:62:5> has_else     | |-RecoveryExpr 0x13a9414d0 <line:37:9, col:40> '_Bool' contains-errors     | |-CompoundStmt 0x13a942d20 <line:38:5, line:56:5>     | | `-IfStmt 0x13a942cf0 <line:39:2, line:55:2> has_else     | |   |-BinaryOperator 0x13a9416b0 <line:39:6, col:40> 'int' '&&'     | |   | |-BinaryOperator 0x13a9415b0 <col:6, col:19> 'int' '!='     | |   | | |-ImplicitCastExpr 0x13a941598 <col:6, col:14> 'int' <IntegralCast>     | |   | | | `-ImplicitCastExpr 0x13a941580 <col:6, col:14> 'char' <LValueToRValue>     | |   | | |   `-ArraySubscriptExpr 0x13a941548 <col:6, col:14> 'char' lvalue     | |   | | |     |-ImplicitCastExpr 0x13a941530 <col:6> 'char *' <LValueToRValue>     | |   | | |     | `-DeclRefExpr 0x13a9414f0 <col:6> 'char *' lvalue ParmVar 0x13a9280f0 'efmpat' 'char *'     | |   | | |     `-IntegerLiteral 0x13a941510 <col:13> 'int' 1     | |   | | `-CharacterLiteral 0x13a941568 <col:19> 'int' 92     | |   | `-BinaryOperator 0x13a941690 <col:27, col:40> 'int' '!='     | |   |   |-ImplicitCastExpr 0x13a941678 <col:27, col:35> 'int' <IntegralCast>     | |   |   | `-ImplicitCastExpr 0x13a941660 <col:27, col:35> 'char' <LValueToRValue>     | |   |   |   `-ArraySubscriptExpr 0x13a941628 <col:27, col:35> 'char' lvalue     | |   |   |     |-ImplicitCastExpr 0x13a941610 <col:27> 'char *' <LValueToRValue>     | |   |   |     | `-DeclRefExpr 0x13a9415d0 <col:27> 'char *' lvalue ParmVar 0x13a9280f0 'efmpat' 'char *'     | |   |   |     `-IntegerLiteral 0x13a9415f0 <col:34> 'int' 1     | |   |   `-CharacterLiteral 0x13a941648 <col:40> 'int' 37     | |   |-CompoundStmt 0x13a941968 <line:40:2, line:48:2>     | |   | |-CallExpr 0x13a941898 <line:46:6, col:26> 'int'     | |   | | |-ImplicitCastExpr 0x13a941880 <col:6> 'int (*)()' <FunctionToPointerDecay>     | |   | | | `-DeclRefExpr 0x13a9417b0 <col:6> 'int ()' Function 0x13a9416f8 'STRCPY' 'int ()'     | |   | | |-ImplicitCastExpr 0x13a9418c8 <col:13> 'char *' <LValueToRValue>     | |   | | | `-DeclRefExpr 0x13a9417d0 <col:13> 'char *' lvalue ParmVar 0x13a928170 'regpat' 'char *'     | |   | | `-ImplicitCastExpr 0x13a9418e0 <col:21> 'char *' <ArrayToPointerDecay>     | |   | |   `-StringLiteral 0x13a941830 <col:21> 'char[4]' lvalue \"STR\"     | |   | `-CompoundAssignOperator 0x13a941938 <line:47:6, col:16> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'     | |   |   |-DeclRefExpr 0x13a9418f8 <col:6> 'char *' lvalue ParmVar 0x13a928170 'regpat' 'char *'     | |   |   `-IntegerLiteral 0x13a941918 <col:16> 'int' 7     | |   `-CompoundStmt 0x13a942cd0 <line:50:2, line:55:2>     | |     |-CallExpr 0x13a942c00 <line:53:6, col:26> 'int'     | |     | |-ImplicitCastExpr 0x13a9419e8 <col:6> 'int (*)()' <FunctionToPointerDecay>     | |     | | `-DeclRefExpr 0x13a941988 <col:6> 'int ()' Function 0x13a9416f8 'STRCPY' 'int ()'     | |     | |-ImplicitCastExpr 0x13a942c30 <col:13> 'char *' <LValueToRValue>     | |     | | `-DeclRefExpr 0x13a9419a8 <col:13> 'char *' lvalue ParmVar 0x13a928170 'regpat' 'char *'     | |     | `-ImplicitCastExpr 0x13a942c48 <col:21> 'char *' <ArrayToPointerDecay>     | |     |   `-StringLiteral 0x13a9419c8 <col:21> 'char[4]' lvalue \"STR\"     | |     `-CompoundAssignOperator 0x13a942ca0 <line:54:6, col:16> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'     | |       |-DeclRefExpr 0x13a942c60 <col:6> 'char *' lvalue ParmVar 0x13a928170 'regpat' 'char *'     | |       `-IntegerLiteral 0x13a942c80 <col:16> 'int' 4     | `-CompoundStmt 0x13a942ec8 <line:58:5, line:62:5>     |   `-WhileStmt 0x13a942ea8 <line:60:2, line:61:8>     |     |-RecoveryExpr 0x13a942e50 <line:60:9, col:34> '_Bool' contains-errors     |     `-UnaryOperator 0x13a942e90 <line:61:6, col:8> 'char *' prefix '++'     |       `-DeclRefExpr 0x13a942e70 <col:8> 'char *' lvalue ParmVar 0x13a928170 'regpat' 'char *'     |-BinaryOperator 0x13a942f90 <line:63:5, col:17> 'char' '='     | |-UnaryOperator 0x13a942f48 <col:5, col:12> 'char' lvalue prefix '*' cannot overflow     | | `-UnaryOperator 0x13a942f30 <col:6, col:12> 'char *' postfix '++'     | |   `-DeclRefExpr 0x13a942f10 <col:6> 'char *' lvalue ParmVar 0x13a928170 'regpat' 'char *'     | `-ImplicitCastExpr 0x13a942f78 <col:17> 'char' <IntegralCast>     |   `-CharacterLiteral 0x13a942f60 <col:17> 'int' 92     |-BinaryOperator 0x13a943030 <line:64:5, col:17> 'char' '='     | |-UnaryOperator 0x13a942fe8 <col:5, col:12> 'char' lvalue prefix '*' cannot overflow     | | `-UnaryOperator 0x13a942fd0 <col:6, col:12> 'char *' postfix '++'     | |   `-DeclRefExpr 0x13a942fb0 <col:6> 'char *' lvalue ParmVar 0x13a928170 'regpat' 'char *'     | `-ImplicitCastExpr 0x13a943018 <col:17> 'char' <IntegralCast>     |   `-CharacterLiteral 0x13a943000 <col:17> 'int' 41     `-ReturnStmt 0x13a9430a0 <line:66:5, col:12>       `-ImplicitCastExpr 0x13a943088 <col:12> 'int' <PointerToIntegral>         `-ImplicitCastExpr 0x13a943070 <col:12> 'char *' <LValueToRValue>           `-DeclRefExpr 0x13a943050 <col:12> 'char *' lvalue ParmVar 0x13a928170 'regpat' 'char *' ","19449":"`-FunctionDecl 0x14b940d68  line:1:1 invalid xfs_file_splice_write 'int (struct pipe_inode_info *, struct file *, int *, int, unsigned int)'   |-ParmVarDecl 0x14b928648 <line:2:2, col:26> col:26 used pipe 'struct pipe_inode_info *'   |-ParmVarDecl 0x14b940a28 <line:3:2, col:16> col:16 used outfilp 'struct file *'   |-ParmVarDecl 0x14b940af8 <line:4:2, col:12> col:12 invalid ppos 'int *'   |-ParmVarDecl 0x14b940b78 <line:5:2, col:11> col:11 invalid count 'int'   |-ParmVarDecl 0x14b940bf8 <line:6:2, col:16> col:16 used flags 'unsigned int'   `-CompoundStmt 0x14b943160 <line:7:1, line:31:1>     |-DeclStmt 0x14b9410d0 <line:8:2, col:49>     | |-RecordDecl 0x14b940e38 <col:2, col:9> col:9 struct inode     | `-VarDecl 0x14b940fa8 <col:2, col:45> col:17 used inode 'struct inode *' cinit     |   `-CXXDependentScopeMemberExpr 0x14b941070 <col:25, col:45> '<dependent type>' contains-errors lvalue ->host     |     `-RecoveryExpr 0x14b941048 <col:25, col:34> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14b941010 <col:25> 'struct file *' lvalue ParmVar 0x14b940a28 'outfilp' 'struct file *'     |-DeclStmt 0x14b941518 <line:9:2, col:37>     | |-RecordDecl 0x14b9410e8 <col:2, col:9> col:9 struct xfs_inode     | `-VarDecl 0x14b941258 <col:2, col:36> col:20 used ip 'struct xfs_inode *' cinit     |   `-ImplicitCastExpr 0x14b9414e8 <col:25, col:36> 'struct xfs_inode *' contains-errors <IntegralToPointer>     |     `-CallExpr 0x14b9414a8 <col:25, col:36> 'int' contains-errors     |       |-ImplicitCastExpr 0x14b941490 <col:25> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14b941420 <col:25> 'int ()' Function 0x14b941368 'XFS_I' 'int ()'     |       `-ImplicitCastExpr 0x14b9414d0 <col:31> 'struct inode *' contains-errors <LValueToRValue>     |         `-DeclRefExpr 0x14b941440 <col:31> 'struct inode *' contains-errors lvalue Var 0x14b940fa8 'inode' 'struct inode *'     |-DeclStmt 0x14b9415d0 <line:10:2, col:19>     | `-VarDecl 0x14b941548 <col:2, col:18> col:8 used ioflags 'int' cinit     |   `-IntegerLiteral 0x14b9415b0 <col:18> 'int' 0     |-CallExpr 0x14b941748 <line:13:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b9416c8 <col:2> 'int ()' Function 0x14b941610 'XFS_STATS_INC' 'int ()'     | `-RecoveryExpr 0x14b941728 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14b941900 <line:15:2, line:16:14>     | |-BinaryOperator 0x14b941828 <line:15:6, col:24> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x14b9417a8 <col:6, col:15> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x14b941770 <col:6> 'struct file *' lvalue ParmVar 0x14b940a28 'outfilp' 'struct file *'     | | `-RecoveryExpr 0x14b941808 <col:24> '<dependent type>' contains-errors lvalue     | `-CompoundAssignOperator 0x14b9418d0 <line:16:3, col:14> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |-DeclRefExpr 0x14b941848 <col:3> 'int' lvalue Var 0x14b941548 'ioflags' 'int'     |   `-RecoveryExpr 0x14b9418b0 <col:14> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14b942950 <line:18:2, line:19:11>     | |-CallExpr 0x14b942880 <line:18:6, col:37> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14b942800 <col:6> 'int ()' Function 0x14b941948 'XFS_FORCED_SHUTDOWN' 'int ()'     | | `-RecoveryExpr 0x14b942858 <col:26, col:30> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14b942820 <col:26> 'struct xfs_inode *' contains-errors lvalue Var 0x14b941258 'ip' 'struct xfs_inode *'     | `-ReturnStmt 0x14b942940 <line:19:3, col:11>     |   `-UnaryOperator 0x14b942928 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14b942910 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14b9428f0 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14b942af8 <line:21:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b942a50 <col:2> 'int ()' Function 0x14b942998 'xfs_ilock' 'int ()'     | |-DeclRefExpr 0x14b942a70 <col:12> 'struct xfs_inode *' contains-errors lvalue Var 0x14b941258 'ip' 'struct xfs_inode *'     | `-RecoveryExpr 0x14b942ad8 <col:16> '<dependent type>' contains-errors lvalue     `-CallExpr 0x14b942cd8 <line:23:2, col:55> '<dependent type>' contains-errors       |-DeclRefExpr 0x14b942c08 <col:2> 'int ()' Function 0x14b942b50 'trace_xfs_file_splice_write' 'int ()'       |-DeclRefExpr 0x14b942c28 <col:30> 'struct xfs_inode *' contains-errors lvalue Var 0x14b941258 'ip' 'struct xfs_inode *'       |-RecoveryExpr 0x14b942c48 <col:34> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x14b942ca0 <col:41, col:42> '<dependent type>' contains-errors prefix '*' cannot overflow       | `-ImplicitCastExpr 0x14b942c88 <col:42> '<dependent type>' contains-errors <LValueToRValue>       |   `-RecoveryExpr 0x14b942c68 <col:42> '<dependent type>' contains-errors lvalue       `-DeclRefExpr 0x14b942cb8 <col:48> 'int' lvalue Var 0x14b941548 'ioflags' 'int' ","19952":"`-FunctionDecl 0x128928238  line:1:1 TEST_F 'int (int, int)'   |-ParmVarDecl 0x128928158 <col:8> col:8 Http1ServerConnectionImplTest 'int'   |-ParmVarDecl 0x1289280d8 <col:39> col:39 HeaderMutateEmbeddedNul 'int'   `-CompoundStmt 0x12892af80 <col:64, line:20:1>     `-ForStmt 0x12892af48 <line:4:3, line:19:3>       |-<<<NULL>>>       |-<<<NULL>>>       |-BinaryOperator 0x128928550 <line:4:22, col:45> 'int' contains-errors '<'       | |-RecoveryExpr 0x1289284a8 <col:22> '<dependent type>' contains-errors lvalue       | `-CallExpr 0x128928530 <col:26, col:45> '<dependent type>' contains-errors       |   `-CXXDependentScopeMemberExpr 0x1289284e8 <col:26, col:40> '<dependent type>' contains-errors lvalue .size       |     `-RecoveryExpr 0x1289284c8 <col:26> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x1289285c0 <col:48, col:50> '<dependent type>' contains-errors prefix '++' cannot overflow       | `-RecoveryExpr 0x1289285a0 <col:50> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x12892af10 <col:53, line:19:3>         |-CallExpr 0x128928758 <line:5:5, col:16> 'int'         | `-ImplicitCastExpr 0x128928740 <col:5> 'int (*)()' <FunctionToPointerDecay>         |   `-DeclRefExpr 0x1289286f0 <col:5> 'int ()' Function 0x128928638 'initialize' 'int ()'         |-CallExpr 0x12892a780 <line:10:5, col:73> '<dependent type>' contains-errors         | |-CXXDependentScopeMemberExpr 0x12892a6f0 <col:5, col:46> '<dependent type>' contains-errors lvalue .WillOnce         | | `-CallExpr 0x12892a6c0 <col:5, col:44> '<dependent type>' contains-errors         | |   |-DeclRefExpr 0x12892a2b8 <col:5> 'int ()' Function 0x12892a200 'EXPECT_CALL' 'int ()'         | |   |-RecoveryExpr 0x12892a630 <col:17> '<dependent type>' contains-errors lvalue         | |   `-CallExpr 0x12892a690 <col:29, col:43> '<dependent type>' contains-errors         | |     |-DeclRefExpr 0x12892a3d0 <col:29> 'int ()' Function 0x12892a318 'newStream' 'int ()'         | |     |-RecoveryExpr 0x12892a650 <col:39> '<dependent type>' contains-errors lvalue         | |     `-RecoveryExpr 0x12892a670 <col:42> '<dependent type>' contains-errors lvalue         | `-CallExpr 0x12892a758 <col:55, col:72> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x12892a5a8 <col:55> 'int ()' Function 0x12892a4f0 'ReturnRef' 'int ()'         |   `-RecoveryExpr 0x12892a738 <col:65> '<dependent type>' contains-errors lvalue         |-DeclStmt 0x12892a948 <line:15:5, col:43>         | `-VarDecl 0x12892a8e0 <col:5, col:10> col:10 used status 'int' auto         |-CallExpr 0x12892aac8 <line:16:5, col:29> '<dependent type>' contains-errors         | |-DeclRefExpr 0x12892aa40 <col:5> 'int ()' Function 0x12892a988 'EXPECT_FALSE' 'int ()'         | `-CallExpr 0x12892aaa8 <col:18, col:28> '<dependent type>' contains-errors         |   `-RecoveryExpr 0x12892aa80 <col:18, col:25> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x12892aa60 <col:18> 'int' lvalue Var 0x12892a8e0 'status' 'int'         `-CallExpr 0x12892ad80 <line:17:5, col:45> 'int'           |-ImplicitCastExpr 0x12892ad68 <col:5> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x12892abd0 <col:5> 'int ()' Function 0x12892ab18 'EXPECT_TRUE' 'int ()'           `-CallExpr 0x12892ad28 <col:17, col:44> 'int'             |-ImplicitCastExpr 0x12892ad10 <col:17> 'int (*)()' <FunctionToPointerDecay>             | `-DeclRefExpr 0x12892acd0 <col:17> 'int ()' Function 0x12892ac18 'isCodecProtocolError' 'int ()'             `-ImplicitCastExpr 0x12892ad50 <col:38> 'int' <LValueToRValue>               `-DeclRefExpr 0x12892acf0 <col:38> 'int' lvalue Var 0x12892a8e0 'status' 'int' ","20069":"`-FunctionDecl 0x13e80de98  line:1:1 invalid symbols_sort 'int (const int **, const int **)'   |-ParmVarDecl 0x13e80dd30 <col:15, col:30> col:30 invalid first 'const int **'   |-ParmVarDecl 0x13e80ddb8 <col:37, col:52> col:52 invalid second 'const int **'   `-CompoundStmt 0x13e827548 <line:2:1, line:9:1>     `-IfStmt 0x13e827528 <line:3:3, line:8:5>       |-BinaryOperator 0x13e80e290 <line:3:7, col:64> 'int' contains-errors '<'       | |-IntegerLiteral 0x13e80df50 <col:7> 'int' 0       | `-CallExpr 0x13e80e260 <col:11, col:64> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x13e80e0d0 <col:11> 'int ()' Function 0x13e80e018 'location_cmp' 'int ()'       |   |-CXXDependentScopeMemberExpr 0x13e80e160 <col:25, col:35> '<dependent type>' contains-errors lvalue ->location       |   | `-ParenExpr 0x13e80e140 <col:25, col:32> '<dependent type>' contains-errors       |   |   `-UnaryOperator 0x13e80e128 <col:26, col:27> '<dependent type>' contains-errors prefix '*' cannot overflow       |   |     `-ImplicitCastExpr 0x13e80e110 <col:27> '<dependent type>' contains-errors <LValueToRValue>       |   |       `-RecoveryExpr 0x13e80e0f0 <col:27> '<dependent type>' contains-errors lvalue       |   `-CXXDependentScopeMemberExpr 0x13e80e218 <col:45, col:56> '<dependent type>' contains-errors lvalue ->location       |     `-ParenExpr 0x13e80e1f8 <col:45, col:53> '<dependent type>' contains-errors       |       `-UnaryOperator 0x13e80e1e0 <col:46, col:47> '<dependent type>' contains-errors prefix '*' cannot overflow       |         `-ImplicitCastExpr 0x13e80e1c8 <col:47> '<dependent type>' contains-errors <LValueToRValue>       |           `-RecoveryExpr 0x13e80e1a8 <col:47> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x13e827500 <line:4:5, line:8:5>         |-DeclStmt 0x13e80e380 <line:5:7, col:33>         | `-VarDecl 0x13e80e2c8 <col:7, col:21> col:21 invalid tmp 'const int *'         |-BinaryOperator 0x13e827450 <line:6:7, col:17> '<dependent type>' contains-errors '='         | |-UnaryOperator 0x13e80e3d0 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow         | | `-ImplicitCastExpr 0x13e80e3b8 <col:8> '<dependent type>' contains-errors <LValueToRValue>         | |   `-RecoveryExpr 0x13e80e398 <col:8> '<dependent type>' contains-errors lvalue         | `-UnaryOperator 0x13e827438 <col:16, col:17> '<dependent type>' contains-errors prefix '*' cannot overflow         |   `-ImplicitCastExpr 0x13e827420 <col:17> '<dependent type>' contains-errors <LValueToRValue>         |     `-RecoveryExpr 0x13e827400 <col:17> '<dependent type>' contains-errors lvalue         `-BinaryOperator 0x13e8274e0 <line:7:7, col:17> '<dependent type>' contains-errors '='           |-UnaryOperator 0x13e8274a8 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow           | `-ImplicitCastExpr 0x13e827490 <col:8> '<dependent type>' contains-errors <LValueToRValue>           |   `-RecoveryExpr 0x13e827470 <col:8> '<dependent type>' contains-errors lvalue           `-RecoveryExpr 0x13e8274c0 <col:17> '<dependent type>' contains-errors lvalue ","19783":"`-FunctionDecl 0x135128310  line:1:6 invalid addReplyProto 'void (int *, const char *, int)'   |-ParmVarDecl 0x135128128 <col:20, col:28> col:28 invalid c 'int *'   |-ParmVarDecl 0x1351281a8 <col:31, col:43> col:43 used s 'const char *'   |-ParmVarDecl 0x135128228 <col:46, col:53> col:53 invalid len 'int'   `-CompoundStmt 0x135141a18 <col:58, line:5:1>     |-IfStmt 0x135128620 <line:2:5, col:42>     | |-BinaryOperator 0x1351285f0 <col:9, col:36> 'int' contains-errors '!='     | | |-CallExpr 0x135128570 <col:9, col:31> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x135128530 <col:9> 'int ()' Function 0x135128478 'prepareClientToWrite' 'int ()'     | | | `-RecoveryExpr 0x135128550 <col:30> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1351285d0 <col:36> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x135128610 <col:42>     `-IfStmt 0x1351419f8 <line:3:5, line:4:37>       |-BinaryOperator 0x135141840 <line:3:9, col:39> 'int' contains-errors '!='       | |-CallExpr 0x1351287a0 <col:9, col:34> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x135128720 <col:9> 'int ()' Function 0x135128668 '_addReplyToBuffer' 'int ()'       | | |-RecoveryExpr 0x135128740 <col:27> '<dependent type>' contains-errors lvalue       | | |-DeclRefExpr 0x135128760 <col:29> 'const char *' lvalue ParmVar 0x1351281a8 's' 'const char *'       | | `-RecoveryExpr 0x135128780 <col:31> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x135141820 <col:39> '<dependent type>' contains-errors lvalue       `-CallExpr 0x1351419c0 <line:4:9, col:37> '<dependent type>' contains-errors         |-DeclRefExpr 0x135141940 <col:9> 'int ()' Function 0x135141888 '_addReplyProtoToList' 'int ()'         |-RecoveryExpr 0x135141960 <col:30> '<dependent type>' contains-errors lvalue         |-DeclRefExpr 0x135141980 <col:32> 'const char *' lvalue ParmVar 0x1351281a8 's' 'const char *'         `-RecoveryExpr 0x1351419a0 <col:34> '<dependent type>' contains-errors lvalue ","20160":"`-FunctionDecl 0x150941d20  col:3 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x150941e20 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x150941e88 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x150941ef0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x150941dc8 <<invalid sloc>> Implicit 900 ","20147":"`-FunctionDecl 0x148026600  line:1:1 isinsets 'int (struct re_guts *, int)'   |-ParmVarDecl 0x14800e248 <line:2:1, col:26> col:26 used g 'struct re_guts *' register   |-ParmVarDecl 0x14800e2c8 <line:3:1, col:5> col:5 used c 'int'   `-CompoundStmt 0x148026f90 <line:4:1, line:14:1>     |-DeclStmt 0x1480267d0 <line:5:2, col:19>     | `-VarDecl 0x148026768 <col:2, col:16> col:16 invalid col 'int *' register     |-DeclStmt 0x148026868 <line:6:2, col:16>     | `-VarDecl 0x148026800 <col:2, col:15> col:15 used i 'int' register     |-DeclStmt 0x1480269d0 <line:7:2, col:58>     | `-VarDecl 0x148026898 <col:2, col:15> col:15 used ncols 'int' register     |-DeclStmt 0x148026af8 <line:8:2, col:41>     | `-VarDecl 0x148026a00 <col:2, col:40> col:20 used uc 'unsigned int' register cinit     |   `-ImplicitCastExpr 0x148026ae0 <col:25, col:40> 'unsigned int' <IntegralCast>     |     `-CStyleCastExpr 0x148026ab8 <col:25, col:40> 'unsigned char' <IntegralCast>     |       `-ImplicitCastExpr 0x148026aa0 <col:40> 'int' <LValueToRValue> part_of_explicit_cast     |         `-DeclRefExpr 0x148026a68 <col:40> 'int' lvalue ParmVar 0x14800e2c8 'c' 'int'     |-ForStmt 0x148026f08 <line:10:2, line:12:12>     | |-BinaryOperator 0x148026c10 <line:10:7, col:23> '<dependent type>' contains-errors ','     | | |-BinaryOperator 0x148026b50 <col:7, col:11> 'int' '='     | | | |-DeclRefExpr 0x148026b10 <col:7> 'int' lvalue Var 0x148026800 'i' 'int'     | | | `-IntegerLiteral 0x148026b30 <col:11> 'int' 0     | | `-BinaryOperator 0x148026bf0 <col:14, col:23> '<dependent type>' contains-errors '='     | |   |-RecoveryExpr 0x148026b70 <col:14> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x148026bc8 <col:20, col:23> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x148026b90 <col:20> 'struct re_guts *' lvalue ParmVar 0x14800e248 'g' 'struct re_guts *'     | |-<<<NULL>>>     | |-BinaryOperator 0x148026ca0 <col:32, col:36> 'int' '<'     | | |-ImplicitCastExpr 0x148026c70 <col:32> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x148026c30 <col:32> 'int' lvalue Var 0x148026800 'i' 'int'     | | `-ImplicitCastExpr 0x148026c88 <col:36> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x148026c50 <col:36> 'int' lvalue Var 0x148026898 'ncols' 'int'     | |-BinaryOperator 0x148026da8 <col:43, col:58> '<dependent type>' contains-errors ','     | | |-UnaryOperator 0x148026ce0 <col:43, col:44> 'int' postfix '++'     | | | `-DeclRefExpr 0x148026cc0 <col:43> 'int' lvalue Var 0x148026800 'i' 'int'     | | `-CompoundAssignOperator 0x148026d78 <col:48, col:58> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |   |-RecoveryExpr 0x148026cf8 <col:48> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x148026d50 <col:55, col:58> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x148026d18 <col:55> 'struct re_guts *' lvalue ParmVar 0x14800e248 'g' 'struct re_guts *'     | `-IfStmt 0x148026ee8 <line:11:3, line:12:12>     |   |-BinaryOperator 0x148026e78 <line:11:7, col:18> 'int' contains-errors '!='     |   | |-ArraySubscriptExpr 0x148026e38 <col:7, col:13> '<dependent type>' contains-errors lvalue     |   | | |-ImplicitCastExpr 0x148026e08 <col:7> '<dependent type>' contains-errors <LValueToRValue>     |   | | | `-RecoveryExpr 0x148026dc8 <col:7> '<dependent type>' contains-errors lvalue     |   | | `-ImplicitCastExpr 0x148026e20 <col:11> 'unsigned int' <LValueToRValue>     |   | |   `-DeclRefExpr 0x148026de8 <col:11> 'unsigned int' lvalue Var 0x148026a00 'uc' 'unsigned int'     |   | `-IntegerLiteral 0x148026e58 <col:18> 'int' 0     |   `-ReturnStmt 0x148026ed8 <line:12:4, col:12>     |     `-ParenExpr 0x148026eb8 <col:10, col:12> 'int'     |       `-IntegerLiteral 0x148026e98 <col:11> 'int' 1     `-ReturnStmt 0x148026f80 <line:13:2, col:10>       `-ParenExpr 0x148026f60 <col:8, col:10> 'int'         `-IntegerLiteral 0x148026f40 <col:9> 'int' 0 ","19985":"`-FunctionDecl 0x14b82b340  line:1:13 l2cap_streaming_send 'void (struct l2cap_chan *, struct sk_buff_head *)' static   |-ParmVarDecl 0x14b818648 <col:34, col:53> col:53 used chan 'struct l2cap_chan *'   |-ParmVarDecl 0x14b82b228 <line:2:6, col:27> col:27 used skbs 'struct sk_buff_head *'   `-CompoundStmt 0x14b82dfb0 <line:3:1, line:38:1>     |-DeclStmt 0x14b82b628 <line:4:2, col:21>     | |-RecordDecl 0x14b82b440 <col:2, col:9> col:9 struct sk_buff     | `-VarDecl 0x14b82b5a8 <col:2, col:18> col:18 used skb 'struct sk_buff *'     |-DeclStmt 0x14b82b828 <line:5:2, col:28>     | |-RecordDecl 0x14b82b640 <col:2, col:9> col:9 struct l2cap_ctrl     | `-VarDecl 0x14b82b7a8 <col:2, col:21> col:21 used control 'struct l2cap_ctrl *'     |-CallExpr 0x14b82ba78 <line:7:2, col:26> 'int'     | |-ImplicitCastExpr 0x14b82ba60 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14b82b970 <col:2> 'int ()' Function 0x14b82b8b8 'BT_DBG' 'int ()'     | |-ImplicitCastExpr 0x14b82bab0 <col:9> 'char *' <ArrayToPointerDecay>     | | `-StringLiteral 0x14b82b9d0 <col:9> 'char[4]' lvalue \"STR\"     | |-ImplicitCastExpr 0x14b82bac8 <col:16> 'struct l2cap_chan *' <LValueToRValue>     | | `-DeclRefExpr 0x14b82b9f0 <col:16> 'struct l2cap_chan *' lvalue ParmVar 0x14b818648 'chan' 'struct l2cap_chan *'     | `-ImplicitCastExpr 0x14b82bae0 <col:22> 'struct sk_buff_head *' <LValueToRValue>     |   `-DeclRefExpr 0x14b82ba10 <col:22> 'struct sk_buff_head *' lvalue ParmVar 0x14b82b228 'skbs' 'struct sk_buff_head *'     |-IfStmt 0x14b82bc80 <line:9:2, line:10:3>     | |-CallExpr 0x14b82bc30 <line:9:6, col:27> 'int'     | | |-ImplicitCastExpr 0x14b82bc18 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x14b82bbd8 <col:6> 'int ()' Function 0x14b82bb20 '__chan_is_moving' 'int ()'     | | `-ImplicitCastExpr 0x14b82bc58 <col:23> 'struct l2cap_chan *' <LValueToRValue>     | |   `-DeclRefExpr 0x14b82bbf8 <col:23> 'struct l2cap_chan *' lvalue ParmVar 0x14b818648 'chan' 'struct l2cap_chan *'     | `-ReturnStmt 0x14b82bc70 <line:10:3>     |-CallExpr 0x14b82be38 <line:12:2, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b82bd80 <col:2> 'int ()' Function 0x14b82bcc8 'skb_queue_splice_tail_init' 'int ()'     | |-DeclRefExpr 0x14b82bda0 <col:29> 'struct sk_buff_head *' lvalue ParmVar 0x14b82b228 'skbs' 'struct sk_buff_head *'     | `-UnaryOperator 0x14b82be20 <col:35, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14b82bdf8 <col:36, col:42> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14b82bdc0 <col:36> 'struct l2cap_chan *' lvalue ParmVar 0x14b818648 'chan' 'struct l2cap_chan *'     `-WhileStmt 0x14b82df90 <line:14:2, line:37:2>       |-UnaryOperator 0x14b82c008 <line:14:9, col:37> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-CallExpr 0x14b82bfe0 <col:10, col:37> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x14b82bf48 <col:10> 'int ()' Function 0x14b82be90 'skb_queue_empty' 'int ()'       |   `-UnaryOperator 0x14b82bfc8 <col:26, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow       |     `-RecoveryExpr 0x14b82bfa0 <col:27, col:33> '<dependent type>' contains-errors lvalue       |       `-DeclRefExpr 0x14b82bf68 <col:27> 'struct l2cap_chan *' lvalue ParmVar 0x14b818648 'chan' 'struct l2cap_chan *'       `-CompoundStmt 0x14b82df28 <col:40, line:37:2>         |-BinaryOperator 0x14b82c1e0 <line:16:3, col:32> 'struct sk_buff *' contains-errors '='         | |-DeclRefExpr 0x14b82c020 <col:3> 'struct sk_buff *' lvalue Var 0x14b82b5a8 'skb' 'struct sk_buff *'         | `-CallExpr 0x14b82c1b8 <col:9, col:32> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x14b82c120 <col:9> 'int ()' Function 0x14b82c068 'skb_dequeue' 'int ()'         |   `-UnaryOperator 0x14b82c1a0 <col:21, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow         |     `-RecoveryExpr 0x14b82c178 <col:22, col:28> '<dependent type>' contains-errors lvalue         |       `-DeclRefExpr 0x14b82c140 <col:22> 'struct l2cap_chan *' lvalue ParmVar 0x14b818648 'chan' 'struct l2cap_chan *'         |-BinaryOperator 0x14b82d208 <line:18:3, col:31> '<dependent type>' contains-errors '='         | |-CXXDependentScopeMemberExpr 0x14b82d1a0 <col:3, col:21> '<dependent type>' contains-errors lvalue .retries         | | `-RecoveryExpr 0x14b82d178 <col:3, col:15> '<dependent type>' contains-errors lvalue         | |   `-CallExpr 0x14b82d138 <col:3, col:12> 'int'         | |     |-ImplicitCastExpr 0x14b82d120 <col:3> 'int (*)()' <FunctionToPointerDecay>         | |     | `-DeclRefExpr 0x14b82d0e0 <col:3> 'int ()' Function 0x14b82d028 'bt_cb' 'int ()'         | |     `-ImplicitCastExpr 0x14b82d160 <col:9> 'struct sk_buff *' <LValueToRValue>         | |       `-DeclRefExpr 0x14b82d100 <col:9> 'struct sk_buff *' lvalue Var 0x14b82b5a8 'skb' 'struct sk_buff *'         | `-IntegerLiteral 0x14b82d1e8 <col:31> 'int' 1         |-BinaryOperator 0x14b82d320 <line:19:3, col:26> 'struct l2cap_ctrl *' contains-errors '='         | |-DeclRefExpr 0x14b82d228 <col:3> 'struct l2cap_ctrl *' lvalue Var 0x14b82b7a8 'control' 'struct l2cap_ctrl *'         | `-UnaryOperator 0x14b82d308 <col:13, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow         |   `-RecoveryExpr 0x14b82d2e0 <col:14, col:26> '<dependent type>' contains-errors lvalue         |     `-CallExpr 0x14b82d2a0 <col:14, col:23> 'int'         |       |-ImplicitCastExpr 0x14b82d288 <col:14> 'int (*)()' <FunctionToPointerDecay>         |       | `-DeclRefExpr 0x14b82d248 <col:14> 'int ()' Function 0x14b82d028 'bt_cb' 'int ()'         |       `-ImplicitCastExpr 0x14b82d2c8 <col:20> 'struct sk_buff *' <LValueToRValue>         |         `-DeclRefExpr 0x14b82d268 <col:20> 'struct sk_buff *' lvalue Var 0x14b82b5a8 'skb' 'struct sk_buff *'         |-BinaryOperator 0x14b82d3c0 <line:21:3, col:21> '<dependent type>' contains-errors '='         | |-RecoveryExpr 0x14b82d378 <col:3, col:12> '<dependent type>' contains-errors lvalue         | | `-DeclRefExpr 0x14b82d340 <col:3> 'struct l2cap_ctrl *' lvalue Var 0x14b82b7a8 'control' 'struct l2cap_ctrl *'         | `-IntegerLiteral 0x14b82d3a0 <col:21> 'int' 0         |-BinaryOperator 0x14b82d4a0 <line:22:3, col:26> '<dependent type>' contains-errors '='         | |-RecoveryExpr 0x14b82d418 <col:3, col:12> '<dependent type>' contains-errors lvalue         | | `-DeclRefExpr 0x14b82d3e0 <col:3> 'struct l2cap_ctrl *' lvalue Var 0x14b82b7a8 'control' 'struct l2cap_ctrl *'         | `-RecoveryExpr 0x14b82d478 <col:20, col:26> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x14b82d440 <col:20> 'struct l2cap_chan *' lvalue ParmVar 0x14b818648 'chan' 'struct l2cap_chan *'         |-CallExpr 0x14b82d638 <line:24:3, col:36> 'int'         | |-ImplicitCastExpr 0x14b82d620 <col:3> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x14b82d5a0 <col:3> 'int ()' Function 0x14b82d4e8 '__pack_control' 'int ()'         | |-ImplicitCastExpr 0x14b82d670 <col:18> 'struct l2cap_chan *' <LValueToRValue>         | | `-DeclRefExpr 0x14b82d5c0 <col:18> 'struct l2cap_chan *' lvalue ParmVar 0x14b818648 'chan' 'struct l2cap_chan *'         | |-ImplicitCastExpr 0x14b82d688 <col:24> 'struct l2cap_ctrl *' <LValueToRValue>         | | `-DeclRefExpr 0x14b82d5e0 <col:24> 'struct l2cap_ctrl *' lvalue Var 0x14b82b7a8 'control' 'struct l2cap_ctrl *'         | `-ImplicitCastExpr 0x14b82d6a0 <col:33> 'struct sk_buff *' <LValueToRValue>         |   `-DeclRefExpr 0x14b82d600 <col:33> 'struct sk_buff *' lvalue Var 0x14b82b5a8 'skb' 'struct sk_buff *'         |-IfStmt 0x14b82d9d8 <line:26:3, line:29:3>         | |-BinaryOperator 0x14b82d770 <line:26:7, col:20> 'int' contains-errors '=='         | | |-RecoveryExpr 0x14b82d6f0 <col:7, col:13> '<dependent type>' contains-errors lvalue         | | | `-DeclRefExpr 0x14b82d6b8 <col:7> 'struct l2cap_chan *' lvalue ParmVar 0x14b818648 'chan' 'struct l2cap_chan *'         | | `-RecoveryExpr 0x14b82d750 <col:20> '<dependent type>' contains-errors lvalue         | `-CompoundStmt 0x14b82d9c8 <col:37, line:29:3>         |-CallExpr 0x14b82db50 <line:31:3, col:26> 'int'         | |-ImplicitCastExpr 0x14b82db38 <col:3> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x14b82dad8 <col:3> 'int ()' Function 0x14b82da20 'l2cap_do_send' 'int ()'         | |-ImplicitCastExpr 0x14b82db80 <col:17> 'struct l2cap_chan *' <LValueToRValue>         | | `-DeclRefExpr 0x14b82daf8 <col:17> 'struct l2cap_chan *' lvalue ParmVar 0x14b818648 'chan' 'struct l2cap_chan *'         | `-ImplicitCastExpr 0x14b82db98 <col:23> 'struct sk_buff *' <LValueToRValue>         |   `-DeclRefExpr 0x14b82db18 <col:23> 'struct sk_buff *' lvalue Var 0x14b82b5a8 'skb' 'struct sk_buff *'         |-CallExpr 0x14b82dc50 <line:33:3, col:31> '<dependent type>' contains-errors         | |-DeclRefExpr 0x14b82dbb0 <col:3> 'int ()' Function 0x14b82b8b8 'BT_DBG' 'int ()'         | |-StringLiteral 0x14b82dbd0 <col:10> 'char[4]' lvalue \"STR\"         | `-RecoveryExpr 0x14b82dc28 <col:17, col:26> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x14b82dbf0 <col:17> 'struct l2cap_ctrl *' lvalue Var 0x14b82b7a8 'control' 'struct l2cap_ctrl *'         |-BinaryOperator 0x14b82de90 <line:35:3, col:57> '<dependent type>' contains-errors '='         | |-RecoveryExpr 0x14b82dcb8 <col:3, col:9> '<dependent type>' contains-errors lvalue         | | `-DeclRefExpr 0x14b82dc80 <col:3> 'struct l2cap_chan *' lvalue ParmVar 0x14b818648 'chan' 'struct l2cap_chan *'         | `-CallExpr 0x14b82de60 <col:23, col:57> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x14b82ddc0 <col:23> 'int ()' Function 0x14b82dd08 '__next_seq' 'int ()'         |   |-DeclRefExpr 0x14b82dde0 <col:34> 'struct l2cap_chan *' lvalue ParmVar 0x14b818648 'chan' 'struct l2cap_chan *'         |   `-RecoveryExpr 0x14b82de38 <col:40, col:46> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x14b82de00 <col:40> 'struct l2cap_chan *' lvalue ParmVar 0x14b818648 'chan' 'struct l2cap_chan *'         `-UnaryOperator 0x14b82df10 <line:36:3, col:20> '<dependent type>' contains-errors postfix '++' cannot overflow           `-RecoveryExpr 0x14b82dee8 <col:3, col:9> '<dependent type>' contains-errors lvalue             `-DeclRefExpr 0x14b82deb0 <col:3> 'struct l2cap_chan *' lvalue ParmVar 0x14b818648 'chan' 'struct l2cap_chan *' ","19830":"`-FunctionDecl 0x144826670  line:1:13 ucma_lock_files 'void (struct ucma_file *, struct ucma_file *)' static   |-ParmVarDecl 0x14480e248 <col:29, col:47> col:47 used file1 'struct ucma_file *'   |-ParmVarDecl 0x14480e338 <col:54, col:72> col:72 used file2 'struct ucma_file *'   `-CompoundStmt 0x144826e60 <line:2:1, line:11:1>     `-IfStmt 0x144826e30 <line:4:2, line:10:2> has_else       |-BinaryOperator 0x1448267e0 <line:4:6, col:14> 'int' '<'       | |-ImplicitCastExpr 0x1448267b0 <col:6> 'struct ucma_file *' <LValueToRValue>       | | `-DeclRefExpr 0x144826770 <col:6> 'struct ucma_file *' lvalue ParmVar 0x14480e248 'file1' 'struct ucma_file *'       | `-ImplicitCastExpr 0x1448267c8 <col:14> 'struct ucma_file *' <LValueToRValue>       |   `-DeclRefExpr 0x144826790 <col:14> 'struct ucma_file *' lvalue ParmVar 0x14480e338 'file2' 'struct ucma_file *'       |-CompoundStmt 0x144826c00 <col:21, line:7:2>       | |-CallExpr 0x1448269c8 <line:5:3, col:25> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x144826930 <col:3> 'int ()' Function 0x144826878 'mutex_lock' 'int ()'       | | `-UnaryOperator 0x1448269b0 <col:14, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow       | |   `-RecoveryExpr 0x144826988 <col:15, col:22> '<dependent type>' contains-errors lvalue       | |     `-DeclRefExpr 0x144826950 <col:15> 'struct ucma_file *' lvalue ParmVar 0x14480e248 'file1' 'struct ucma_file *'       | `-CallExpr 0x144826bd0 <line:6:3, col:54> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x144826ad0 <col:3> 'int ()' Function 0x144826a18 'mutex_lock_nested' 'int ()'       |   |-UnaryOperator 0x144826b50 <col:21, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow       |   | `-RecoveryExpr 0x144826b28 <col:22, col:29> '<dependent type>' contains-errors lvalue       |   |   `-DeclRefExpr 0x144826af0 <col:22> 'struct ucma_file *' lvalue ParmVar 0x14480e338 'file2' 'struct ucma_file *'       |   `-RecoveryExpr 0x144826bb0 <col:34> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x144826e10 <line:7:9, line:10:2>         |-CallExpr 0x144826cb8 <line:8:3, col:25> '<dependent type>' contains-errors         | |-DeclRefExpr 0x144826c20 <col:3> 'int ()' Function 0x144826878 'mutex_lock' 'int ()'         | `-UnaryOperator 0x144826ca0 <col:14, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow         |   `-RecoveryExpr 0x144826c78 <col:15, col:22> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x144826c40 <col:15> 'struct ucma_file *' lvalue ParmVar 0x14480e338 'file2' 'struct ucma_file *'         `-CallExpr 0x144826de0 <line:9:3, col:54> '<dependent type>' contains-errors           |-DeclRefExpr 0x144826ce0 <col:3> 'int ()' Function 0x144826a18 'mutex_lock_nested' 'int ()'           |-UnaryOperator 0x144826d60 <col:21, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow           | `-RecoveryExpr 0x144826d38 <col:22, col:29> '<dependent type>' contains-errors lvalue           |   `-DeclRefExpr 0x144826d00 <col:22> 'struct ucma_file *' lvalue ParmVar 0x14480e248 'file1' 'struct ucma_file *'           `-RecoveryExpr 0x144826dc0 <col:34> '<dependent type>' contains-errors lvalue ","20121":"`-FunctionDecl 0x15680e350  line:1:13 hugetlbfs_put_super 'void (struct super_block *)' static   |-ParmVarDecl 0x15680e248 <col:33, col:53> col:53 used sb 'struct super_block *'   `-CompoundStmt 0x156826d28 <line:2:1, line:9:1>     |-DeclStmt 0x156826a48 <line:3:2, col:50>     | |-RecordDecl 0x156826648 <col:2, col:9> col:9 struct hugetlbfs_sb_info     | `-VarDecl 0x1568267b8 <col:2, col:49> col:28 used sbi 'struct hugetlbfs_sb_info *' cinit     |   `-ImplicitCastExpr 0x156826a18 <col:34, col:49> 'struct hugetlbfs_sb_info *' <IntegralToPointer>     |     `-CallExpr 0x1568269d8 <col:34, col:49> 'int'     |       |-ImplicitCastExpr 0x1568269c0 <col:34> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x156826950 <col:34> 'int ()' Function 0x156826898 'HUGETLBFS_SB' 'int ()'     |       `-ImplicitCastExpr 0x156826a00 <col:47> 'struct super_block *' <LValueToRValue>     |         `-DeclRefExpr 0x156826970 <col:47> 'struct super_block *' lvalue ParmVar 0x15680e248 'sb' 'struct super_block *'     `-IfStmt 0x156826d08 <line:5:2, line:8:2>       |-ImplicitCastExpr 0x156826a80 <line:5:6> 'struct hugetlbfs_sb_info *' <LValueToRValue>       | `-DeclRefExpr 0x156826a60 <col:6> 'struct hugetlbfs_sb_info *' lvalue Var 0x1568267b8 'sbi' 'struct hugetlbfs_sb_info *'       `-CompoundStmt 0x156826ce8 <col:11, line:8:2>         |-BinaryOperator 0x156826b50 <line:6:3, col:19> '<dependent type>' contains-errors '='         | |-RecoveryExpr 0x156826ad0 <col:3, col:7> '<dependent type>' contains-errors lvalue         | | `-DeclRefExpr 0x156826a98 <col:3> 'struct super_block *' lvalue ParmVar 0x15680e248 'sb' 'struct super_block *'         | `-RecoveryExpr 0x156826b30 <col:19> '<dependent type>' contains-errors lvalue         `-CallExpr 0x156826ca8 <line:7:3, col:12> 'int'           |-ImplicitCastExpr 0x156826c90 <col:3> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x156826c50 <col:3> 'int ()' Function 0x156826b98 'kfree' 'int ()'           `-ImplicitCastExpr 0x156826cd0 <col:9> 'struct hugetlbfs_sb_info *' <LValueToRValue>             `-DeclRefExpr 0x156826c70 <col:9> 'struct hugetlbfs_sb_info *' lvalue Var 0x1568267b8 'sbi' 'struct hugetlbfs_sb_info *' ","19893":"`-FunctionDecl 0x14980dda8  line:1:1 PS_SERIALIZER_DECODE_FUNC 'int (int)'   |-ParmVarDecl 0x14980dcd8 <col:27> col:27 php 'int'   `-CompoundStmt 0x14982c530 <line:2:1, line:61:1>     |-DeclStmt 0x14980dfb8 <line:3:2, col:19>     | |-VarDecl 0x14980deb8 <col:2, col:14> col:14 used p 'const char *'     | `-VarDecl 0x14980df38 <col:2, col:18> col:18 used q 'const char *'     |-DeclStmt 0x14980e050 <line:4:2, col:12>     | `-VarDecl 0x14980dfe8 <col:2, col:8> col:8 used name 'char *'     |-DeclStmt 0x14980e1b0 <line:5:2, col:35>     | `-VarDecl 0x14980e080 <col:2, col:29> col:14 used endptr 'const char *' cinit     |   `-BinaryOperator 0x14980e190 <col:23, col:29> '<dependent type>' contains-errors '+'     |     |-RecoveryExpr 0x14980e150 <col:23> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x14980e170 <col:29> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x14980e260 <line:7:2, col:13>     | `-VarDecl 0x14980e1f8 <col:2, col:6> col:6 used namelen 'int'     |-DeclStmt 0x14980e2f8 <line:8:2, col:15>     | `-VarDecl 0x14980e290 <col:2, col:6> col:6 used has_value 'int'     |-CallExpr 0x149827938 <line:11:2, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1498278b8 <col:2> 'int ()' Function 0x149827800 'PHP_VAR_UNSERIALIZE_INIT' 'int ()'     | `-RecoveryExpr 0x149827918 <col:27> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1498279d8 <line:13:2, col:6> 'const char *' contains-errors '='     | |-DeclRefExpr 0x149827960 <col:2> 'const char *' lvalue Var 0x14980deb8 'p' 'const char *'     | `-RecoveryExpr 0x1498279b8 <col:6> '<dependent type>' contains-errors lvalue     |-WhileStmt 0x14982c4c8 <line:15:2, line:55:2>     | |-BinaryOperator 0x149827a68 <line:15:9, col:13> 'int' contains-errors '<'     | | |-ImplicitCastExpr 0x149827a38 <col:9> 'const char *' <LValueToRValue>     | | | `-DeclRefExpr 0x1498279f8 <col:9> 'const char *' lvalue Var 0x14980deb8 'p' 'const char *'     | | `-ImplicitCastExpr 0x149827a50 <col:13> 'const char *' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x149827a18 <col:13> 'const char *' contains-errors lvalue Var 0x14980e080 'endptr' 'const char *'     | `-CompoundStmt 0x14982c460 <col:21, line:55:2>     |   |-BinaryOperator 0x149827b28 <line:17:3, col:7> 'const char *' '='     |   | |-DeclRefExpr 0x149827ad0 <col:3> 'const char *' lvalue Var 0x14980df38 'q' 'const char *'     |   | `-ImplicitCastExpr 0x149827b10 <col:7> 'const char *' <LValueToRValue>     |   |   `-DeclRefExpr 0x149827af0 <col:7> 'const char *' lvalue Var 0x14980deb8 'p' 'const char *'     |   |-WhileStmt 0x149827da0 <line:18:3, line:20:3>     |   | |-BinaryOperator 0x149827c50 <line:18:10, col:16> 'int' contains-errors '!='     |   | | |-UnaryOperator 0x149827c18 <col:10, col:11> 'const char' lvalue prefix '*' cannot overflow     |   | | | `-ImplicitCastExpr 0x149827c00 <col:11> 'const char *' <LValueToRValue>     |   | | |   `-DeclRefExpr 0x149827b48 <col:11> 'const char *' lvalue Var 0x14980df38 'q' 'const char *'     |   | | `-RecoveryExpr 0x149827c30 <col:16> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x149827d88 <col:30, line:20:3>     |   |   `-IfStmt 0x149827d68 <line:19:4, col:28>     |   |     |-BinaryOperator 0x149827ce0 <col:8, col:15> 'int' contains-errors '>='     |   |     | |-UnaryOperator 0x149827c90 <col:8, col:10> 'const char *' prefix '++'     |   |     | | `-DeclRefExpr 0x149827c70 <col:10> 'const char *' lvalue Var 0x14980df38 'q' 'const char *'     |   |     | `-ImplicitCastExpr 0x149827cc8 <col:15> 'const char *' contains-errors <LValueToRValue>     |   |     |   `-DeclRefExpr 0x149827ca8 <col:15> 'const char *' contains-errors lvalue Var 0x14980e080 'endptr' 'const char *'     |   |     `-GotoStmt 0x149827d50 <col:23, col:28> 'break_outer_loop' 0x149827d00     |   |-IfStmt 0x149828050 <line:21:3, line:26:3> has_else     |   | |-BinaryOperator 0x149827f00 <line:21:7, col:15> 'int' contains-errors '=='     |   | | |-ArraySubscriptExpr 0x149827ec0 <col:7, col:10> 'const char' lvalue     |   | | | |-ImplicitCastExpr 0x149827ea8 <col:7> 'const char *' <LValueToRValue>     |   | | | | `-DeclRefExpr 0x149827dc0 <col:7> 'const char *' lvalue Var 0x14980deb8 'p' 'const char *'     |   | | | `-IntegerLiteral 0x149827de0 <col:9> 'int' 0     |   | | `-RecoveryExpr 0x149827ee0 <col:15> '<dependent type>' contains-errors lvalue     |   | |-CompoundStmt 0x149827fb8 <col:32, line:24:3>     |   | | |-UnaryOperator 0x149827f40 <line:22:4, col:5> 'const char *' postfix '++'     |   | | | `-DeclRefExpr 0x149827f20 <col:4> 'const char *' lvalue Var 0x14980deb8 'p' 'const char *'     |   | | `-BinaryOperator 0x149827f98 <line:23:4, col:16> 'int' '='     |   | |   |-DeclRefExpr 0x149827f58 <col:4> 'int' lvalue Var 0x14980e290 'has_value' 'int'     |   | |   `-IntegerLiteral 0x149827f78 <col:16> 'int' 0     |   | `-CompoundStmt 0x149828038 <line:24:10, line:26:3>     |   |   `-BinaryOperator 0x149828018 <line:25:4, col:16> 'int' '='     |   |     |-DeclRefExpr 0x149827fd8 <col:4> 'int' lvalue Var 0x14980e290 'has_value' 'int'     |   |     `-IntegerLiteral 0x149827ff8 <col:16> 'int' 1     |   |-BinaryOperator 0x149828148 <line:28:3, col:17> 'int' '='     |   | |-DeclRefExpr 0x149828080 <col:3> 'int' lvalue Var 0x14980e1f8 'namelen' 'int'     |   | `-ImplicitCastExpr 0x149828130 <col:13, col:17> 'int' <IntegralCast>     |   |   `-BinaryOperator 0x149828110 <col:13, col:17> 'long' '-'     |   |     |-ImplicitCastExpr 0x1498280e0 <col:13> 'const char *' <LValueToRValue>     |   |     | `-DeclRefExpr 0x1498280a0 <col:13> 'const char *' lvalue Var 0x14980df38 'q' 'const char *'     |   |     `-ImplicitCastExpr 0x1498280f8 <col:17> 'const char *' <LValueToRValue>     |   |       `-DeclRefExpr 0x1498280c0 <col:17> 'const char *' lvalue Var 0x14980deb8 'p' 'const char *'     |   |-BinaryOperator 0x1498287b0 <line:29:3, col:29> 'char *' '='     |   | |-DeclRefExpr 0x149828168 <col:3> 'char *' lvalue Var 0x14980dfe8 'name' 'char *'     |   | `-ImplicitCastExpr 0x149828378 <col:10, col:29> 'char *' <IntegralToPointer>     |   |   `-CallExpr 0x149828318 <col:10, col:29> 'int'     |   |     |-ImplicitCastExpr 0x149828300 <col:10> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x149828268 <col:10> 'int ()' Function 0x1498281b0 'estrndup' 'int ()'     |   |     |-ImplicitCastExpr 0x149828348 <col:19> 'const char *' <LValueToRValue>     |   |     | `-DeclRefExpr 0x149828288 <col:19> 'const char *' lvalue Var 0x14980deb8 'p' 'const char *'     |   |     `-ImplicitCastExpr 0x149828360 <col:22> 'int' <LValueToRValue>     |   |       `-DeclRefExpr 0x1498282a8 <col:22> 'int' lvalue Var 0x14980e1f8 'namelen' 'int'     |   |-UnaryOperator 0x149829600 <line:30:3, col:4> 'const char *' postfix '++'     |   | `-DeclRefExpr 0x1498287d0 <col:3> 'const char *' lvalue Var 0x14980df38 'q' 'const char *'     |   |-IfStmt 0x149829da0 <line:32:3, line:36:3>     |   | |-RecoveryExpr 0x149829988 <line:32:7, col:79> '_Bool' contains-errors     |   | `-CompoundStmt 0x149829d88 <col:88, line:36:3>     |   |   `-IfStmt 0x149829d68 <line:33:4, line:35:4>     |   |     |-RecoveryExpr 0x149829cc8 <line:33:8, col:109> '_Bool' contains-errors     |   |     `-CompoundStmt 0x149829d50 <col:112, line:35:4>     |   |       `-GotoStmt 0x149829d38 <line:34:5, col:10> 'skip' 0x149829ce8     |   |-IfStmt 0x14982c158 <line:38:3, line:49:3>     |   | |-ImplicitCastExpr 0x149829de0 <line:38:7> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x149829dc0 <col:7> 'int' lvalue Var 0x14980e290 'has_value' 'int'     |   | `-CompoundStmt 0x14982c140 <col:18, line:49:3>     |   |   `-IfStmt 0x14982c0f0 <line:40:4, line:47:4> has_else     |   |     |-RecoveryExpr 0x14982a190 <line:40:8, col:118> '_Bool' contains-errors     |   |     |-CompoundStmt 0x14982a2f0 <col:121, line:42:4>     |   |     `-CompoundStmt 0x14982c0d8 <col:11, line:47:4>     |   |       `-CallExpr 0x14982a538 <line:44:5, col:15> 'int'     |   |         |-ImplicitCastExpr 0x14982a520 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   |         | `-DeclRefExpr 0x14982a4e0 <col:5> 'int ()' Function 0x14982a428 'efree' 'int ()'     |   |         `-ImplicitCastExpr 0x14982a560 <col:11> 'char *' <LValueToRValue>     |   |           `-DeclRefExpr 0x14982a500 <col:11> 'char *' lvalue Var 0x14980dfe8 'name' 'char *'     |   |-CallExpr 0x14982c2d0 <line:50:3, col:28> 'int'     |   | |-ImplicitCastExpr 0x14982c2b8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14982c258 <col:3> 'int ()' Function 0x14982c1a0 'PS_ADD_VARL' 'int ()'     |   | |-ImplicitCastExpr 0x14982c300 <col:15> 'char *' <LValueToRValue>     |   | | `-DeclRefExpr 0x14982c278 <col:15> 'char *' lvalue Var 0x14980dfe8 'name' 'char *'     |   | `-ImplicitCastExpr 0x14982c318 <col:21> 'int' <LValueToRValue>     |   |   `-DeclRefExpr 0x14982c298 <col:21> 'int' lvalue Var 0x14980e1f8 'namelen' 'int'     |   |-LabelStmt 0x14982c3c8 <line:51:1, line:52:13> 'skip'     |   | `-CallExpr 0x14982c388 <col:3, col:13> 'int'     |   |   |-ImplicitCastExpr 0x14982c370 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x14982c330 <col:3> 'int ()' Function 0x14982a428 'efree' 'int ()'     |   |   `-ImplicitCastExpr 0x14982c3b0 <col:9> 'char *' <LValueToRValue>     |   |     `-DeclRefExpr 0x14982c350 <col:9> 'char *' lvalue Var 0x14980dfe8 'name' 'char *'     |   `-BinaryOperator 0x14982c440 <line:54:3, col:7> 'const char *' '='     |     |-DeclRefExpr 0x14982c3e8 <col:3> 'const char *' lvalue Var 0x14980deb8 'p' 'const char *'     |     `-ImplicitCastExpr 0x14982c428 <col:7> 'const char *' <LValueToRValue>     |       `-DeclRefExpr 0x14982c408 <col:7> 'const char *' lvalue Var 0x14980df38 'q' 'const char *'     `-LabelStmt 0x14982c510 <line:56:1, col:17> 'break_outer_loop'       `-NullStmt 0x14982c508 <col:17> ","19732":"`-FunctionDecl 0x125928750  line:1:6 kvm_lapic_sync_from_vapic 'void (struct kvm_vcpu *)'   |-ParmVarDecl 0x125928648 <col:32, col:49> col:49 used vcpu 'struct kvm_vcpu *'   `-CompoundStmt 0x1260088a0 <line:2:1, line:17:1>     |-DeclStmt 0x125940ae0 <line:4:2, col:13>     | `-VarDecl 0x125940a78 <col:2, col:8> col:8 used vapic 'void *'     |-IfStmt 0x125940f80 <line:6:2, line:7:52>     | |-CallExpr 0x125940d58 <line:6:6, col:66> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x125940c10 <col:6> 'int ()' Function 0x125940b58 'test_bit' 'int ()'     | | |-RecoveryExpr 0x125940d38 <col:15> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x125940cf0 <col:40, col:52> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-CXXDependentScopeMemberExpr 0x125940ca8 <col:41, col:52> '<dependent type>' contains-errors lvalue .apic_attention     | |     `-RecoveryExpr 0x125940c80 <col:41, col:47> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x125940c48 <col:41> 'struct kvm_vcpu *' lvalue ParmVar 0x125928648 'vcpu' 'struct kvm_vcpu *'     | `-CallExpr 0x125940f50 <line:7:3, col:52> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x125940e68 <col:3> 'int ()' Function 0x125940db0 'apic_sync_pv_eoi_from_guest' 'int ()'     |   |-DeclRefExpr 0x125940e88 <col:31> 'struct kvm_vcpu *' lvalue ParmVar 0x125928648 'vcpu' 'struct kvm_vcpu *'     |   `-CXXDependentScopeMemberExpr 0x125940f08 <col:37, col:48> '<dependent type>' contains-errors lvalue .apic     |     `-RecoveryExpr 0x125940ee0 <col:37, col:43> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x125940ea8 <col:37> 'struct kvm_vcpu *' lvalue ParmVar 0x125928648 'vcpu' 'struct kvm_vcpu *'     |-IfStmt 0x125941158 <line:9:2, line:10:3>     | |-UnaryOperator 0x125941130 <line:9:6, col:64> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x125941100 <col:7, col:64> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x125940fa0 <col:7> 'int ()' Function 0x125940b58 'test_bit' 'int ()'     | |   |-RecoveryExpr 0x1259410e0 <col:16> '<dependent type>' contains-errors lvalue     | |   `-UnaryOperator 0x125941080 <col:38, col:50> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-CXXDependentScopeMemberExpr 0x125941038 <col:39, col:50> '<dependent type>' contains-errors lvalue .apic_attention     | |       `-RecoveryExpr 0x125941010 <col:39, col:45> '<dependent type>' contains-errors lvalue     | |         `-DeclRefExpr 0x125940fd8 <col:39> 'struct kvm_vcpu *' lvalue ParmVar 0x125928648 'vcpu' 'struct kvm_vcpu *'     | `-ReturnStmt 0x125941148 <line:10:3>     |-BinaryOperator 0x1259413b0 <line:12:2, col:49> 'void *' contains-errors '='     | |-DeclRefExpr 0x125941178 <col:2> 'void *' lvalue Var 0x125940a78 'vapic' 'void *'     | `-CallExpr 0x125941388 <col:10, col:49> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x125941278 <col:10> 'int ()' Function 0x1259411c0 'kmap_atomic' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x125941340 <col:22, col:39> '<dependent type>' contains-errors lvalue ->vapic_page     |     `-CXXDependentScopeMemberExpr 0x1259412f8 <col:22, col:33> '<dependent type>' contains-errors lvalue .apic     |       `-RecoveryExpr 0x1259412d0 <col:22, col:28> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x125941298 <col:22> 'struct kvm_vcpu *' lvalue ParmVar 0x125928648 'vcpu' 'struct kvm_vcpu *'     |-CallExpr 0x1259417a8 <line:14:2, col:21> 'int'     | |-ImplicitCastExpr 0x125941790 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x125941720 <col:2> 'int ()' Function 0x125941668 'kunmap_atomic' 'int ()'     | `-ImplicitCastExpr 0x1259417d0 <col:16> 'void *' <LValueToRValue>     |   `-DeclRefExpr 0x125941740 <col:16> 'void *' lvalue Var 0x125940a78 'vapic' 'void *'     `-CallExpr 0x126008870 <line:16:2, col:43> '<dependent type>' contains-errors       |-DeclRefExpr 0x1259418c8 <col:2> 'int ()' Function 0x125941810 'apic_set_tpr' 'int ()'       |-CXXDependentScopeMemberExpr 0x125941948 <col:15, col:26> '<dependent type>' contains-errors lvalue .apic       | `-RecoveryExpr 0x125941920 <col:15, col:21> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x1259418e8 <col:15> 'struct kvm_vcpu *' lvalue ParmVar 0x125928648 'vcpu' 'struct kvm_vcpu *'       `-BinaryOperator 0x126008850 <col:32, col:39> '<dependent type>' contains-errors '&'         |-RecoveryExpr 0x126008830 <col:32> '<dependent type>' contains-errors lvalue         `-IntegerLiteral 0x1259419a8 <col:39> 'int' 255 ","20043":"`-FunctionDecl 0x143128750  line:1:20 save_sprs 'void (struct thread_struct *)' static inline   |-ParmVarDecl 0x143128648 <col:30, col:52> col:52 used t 'struct thread_struct *'   `-CompoundStmt 0x143140c38 <line:2:1, line:24:1>     `-CallExpr 0x143140bf8 <line:23:2, col:25> 'int'       |-ImplicitCastExpr 0x143140be0 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x143140b70 <col:2> 'int ()' Function 0x143140ab8 'thread_pkey_regs_save' 'int ()'       `-ImplicitCastExpr 0x143140c20 <col:24> 'struct thread_struct *' <LValueToRValue>         `-DeclRefExpr 0x143140b90 <col:24> 'struct thread_struct *' lvalue ParmVar 0x143128648 't' 'struct thread_struct *' ","19880":"`-FunctionDecl 0x12d01f3c8  line:1:26 invalid bson_iterator_regex 'const int *(const int *)'   |-ParmVarDecl 0x12d01f2f0 <col:47, col:68> col:68 invalid i 'const int *'   `-CompoundStmt 0x12d01f648 <col:72, line:3:1>     `-ReturnStmt 0x12d01f638 <line:2:5, col:35>       `-CallExpr 0x12d01f610 <col:12, col:35> '<dependent type>' contains-errors         |-DeclRefExpr 0x12d01f5d0 <col:12> 'int ()' Function 0x12d01f518 'bson_iterator_value' 'int ()'         `-RecoveryExpr 0x12d01f5f0 <col:33> '<dependent type>' contains-errors lvalue ","19550":"`-FunctionDecl 0x1428f8348  line:1:5 tcp_v4_do_rcv 'int (struct sock *, struct sk_buff *)'   |-ParmVarDecl 0x143050e48 <col:19, col:32> col:32 used sk 'struct sock *'   |-ParmVarDecl 0x1428f8228 <col:36, col:52> col:52 used skb 'struct sk_buff *'   `-CompoundStmt 0x1428faf98 <line:2:1, line:61:1>     |-DeclStmt 0x1428f8540 <line:3:2, col:18>     | `-VarDecl 0x1428f84d8 <col:2, col:15> col:15 used rsk 'struct sock *'     |-IfStmt 0x1428f9678 <line:10:2, line:23:2>     | |-BinaryOperator 0x1428f8628 <line:10:6, col:22> 'int' contains-errors '=='     | | |-RecoveryExpr 0x1428f8590 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x1428f8558 <col:6> 'struct sock *' lvalue ParmVar 0x143050e48 'sk' 'struct sock *'     | | `-RecoveryExpr 0x1428f8608 <col:22> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1428f9640 <col:39, line:23:2>     |   |-DeclStmt 0x1428f8898 <line:11:3, col:40>     |   | |-RecordDecl 0x1428f8648 <col:3, col:10> col:10 struct dst_entry     |   | `-VarDecl 0x1428f87b8 <col:3, col:31> col:21 used dst 'struct dst_entry *' cinit     |   |   `-RecoveryExpr 0x1428f8858 <col:27, col:31> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x1428f8820 <col:27> 'struct sock *' lvalue ParmVar 0x143050e48 'sk' 'struct sock *'     |   |-CallExpr 0x1428f8a68 <line:13:3, col:31> 'int'     |   | |-ImplicitCastExpr 0x1428f8a50 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x1428f89c0 <col:3> 'int ()' Function 0x1428f8908 'sock_rps_save_rxhash' 'int ()'     |   | |-ImplicitCastExpr 0x1428f8a98 <col:24> 'struct sock *' <LValueToRValue>     |   | | `-DeclRefExpr 0x1428f89e0 <col:24> 'struct sock *' lvalue ParmVar 0x143050e48 'sk' 'struct sock *'     |   | `-ImplicitCastExpr 0x1428f8ab0 <col:28> 'struct sk_buff *' <LValueToRValue>     |   |   `-DeclRefExpr 0x1428f8a00 <col:28> 'struct sk_buff *' lvalue ParmVar 0x1428f8228 'skb' 'struct sk_buff *'     |   |-IfStmt 0x1428f9298 <line:14:3, line:20:3>     |   | |-ImplicitCastExpr 0x1428f8ae8 <line:14:7> 'struct dst_entry *' contains-errors <LValueToRValue>     |   | | `-DeclRefExpr 0x1428f8ac8 <col:7> 'struct dst_entry *' contains-errors lvalue Var 0x1428f87b8 'dst' 'struct dst_entry *'     |   | `-CompoundStmt 0x1428f9280 <col:12, line:20:3>     |   |   `-IfStmt 0x1428f9260 <line:15:4, line:19:4>     |   |     |-BinaryOperator 0x1428f8fc8 <line:15:8, line:16:35> 'int' contains-errors '||'     |   |     | |-BinaryOperator 0x1428f8f68 <line:15:8, col:44> 'int' contains-errors '!='     |   |     | | |-RecoveryExpr 0x1428f8f40 <col:8, col:21> '<dependent type>' contains-errors lvalue     |   |     | | | `-CallExpr 0x1428f8f00 <col:8, col:18> 'int'     |   |     | | |   |-ImplicitCastExpr 0x1428f8ee8 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   |     | | |   | `-DeclRefExpr 0x1428f8be0 <col:8> 'int ()' Function 0x1428f8b28 'inet_sk' 'int ()'     |   |     | | |   `-ImplicitCastExpr 0x1428f8f28 <col:16> 'struct sock *' <LValueToRValue>     |   |     | | |     `-DeclRefExpr 0x1428f8c00 <col:16> 'struct sock *' lvalue ParmVar 0x143050e48 'sk' 'struct sock *'     |   |     | | `-RecoveryExpr 0x1428f8cd8 <col:39, col:44> '<dependent type>' contains-errors lvalue     |   |     | |   `-DeclRefExpr 0x1428f8ca0 <col:39> 'struct sk_buff *' lvalue ParmVar 0x1428f8228 'skb' 'struct sk_buff *'     |   |     | `-BinaryOperator 0x1428f8fa8 <line:16:8, col:35> 'int' contains-errors '=='     |   |     |   |-CallExpr 0x1428f8e08 <col:8, col:30> '<dependent type>' contains-errors     |   |     |   | |-CXXDependentScopeMemberExpr 0x1428f8d80 <col:8, col:18> '<dependent type>' contains-errors lvalue ->check     |   |     |   | | `-RecoveryExpr 0x1428f8d58 <col:8, col:13> '<dependent type>' contains-errors lvalue     |   |     |   | |   `-DeclRefExpr 0x1428f8d20 <col:8> 'struct dst_entry *' contains-errors lvalue Var 0x1428f87b8 'dst' 'struct dst_entry *'     |   |     |   | |-DeclRefExpr 0x1428f8dc8 <col:24> 'struct dst_entry *' contains-errors lvalue Var 0x1428f87b8 'dst' 'struct dst_entry *'     |   |     |   | `-IntegerLiteral 0x1428f8de8 <col:29> 'int' 0     |   |     |   `-RecoveryExpr 0x1428f8f88 <col:35> '<dependent type>' contains-errors lvalue     |   |     `-CompoundStmt 0x1428f9240 <col:41, line:19:4>     |   |       |-CallExpr 0x1428f9120 <line:17:5, col:20> 'int' contains-errors     |   |       | |-ImplicitCastExpr 0x1428f9108 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   |       | | `-DeclRefExpr 0x1428f90c8 <col:5> 'int ()' Function 0x1428f9010 'dst_release' 'int ()'     |   |       | `-ImplicitCastExpr 0x1428f9148 <col:17> 'struct dst_entry *' contains-errors <LValueToRValue>     |   |       |   `-DeclRefExpr 0x1428f90e8 <col:17> 'struct dst_entry *' contains-errors lvalue Var 0x1428f87b8 'dst' 'struct dst_entry *'     |   |       `-BinaryOperator 0x1428f9220 <line:18:5, col:21> '<dependent type>' contains-errors '='     |   |         |-RecoveryExpr 0x1428f9198 <col:5, col:9> '<dependent type>' contains-errors lvalue     |   |         | `-DeclRefExpr 0x1428f9160 <col:5> 'struct sock *' lvalue ParmVar 0x143050e48 'sk' 'struct sock *'     |   |         `-RecoveryExpr 0x1428f9200 <col:21> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x1428f95d0 <line:21:3, col:54> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1428f9398 <col:3> 'int ()' Function 0x1428f92e0 'tcp_rcv_established' 'int ()'     |   | |-DeclRefExpr 0x1428f93b8 <col:23> 'struct sock *' lvalue ParmVar 0x143050e48 'sk' 'struct sock *'     |   | |-DeclRefExpr 0x1428f93d8 <col:27> 'struct sk_buff *' lvalue ParmVar 0x1428f8228 'skb' 'struct sk_buff *'     |   | |-CallExpr 0x1428f9530 <col:32, col:43> 'int'     |   | | |-ImplicitCastExpr 0x1428f9518 <col:32> 'int (*)()' <FunctionToPointerDecay>     |   | | | `-DeclRefExpr 0x1428f94d8 <col:32> 'int ()' Function 0x1428f9420 'tcp_hdr' 'int ()'     |   | | `-ImplicitCastExpr 0x1428f9558 <col:40> 'struct sk_buff *' <LValueToRValue>     |   | |   `-DeclRefExpr 0x1428f94f8 <col:40> 'struct sk_buff *' lvalue ParmVar 0x1428f8228 'skb' 'struct sk_buff *'     |   | `-RecoveryExpr 0x1428f95a8 <col:46, col:51> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x1428f9570 <col:46> 'struct sk_buff *' lvalue ParmVar 0x1428f8228 'skb' 'struct sk_buff *'     |   `-ReturnStmt 0x1428f9630 <line:22:3, col:10>     |     `-IntegerLiteral 0x1428f9610 <col:10> 'int' 0     |-IfStmt 0x1428f9a90 <line:25:2, line:26:8>     | |-BinaryOperator 0x1428f9a08 <line:25:6, col:61> 'int' contains-errors '||'     | | |-BinaryOperator 0x1428f9870 <col:6, col:31> 'int' contains-errors '<'     | | | |-RecoveryExpr 0x1428f96d0 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x1428f9698 <col:6> 'struct sk_buff *' lvalue ParmVar 0x1428f8228 'skb' 'struct sk_buff *'     | | | `-CallExpr 0x1428f9830 <col:17, col:31> 'int'     | | |   |-ImplicitCastExpr 0x1428f9818 <col:17> 'int (*)()' <FunctionToPointerDecay>     | | |   | `-DeclRefExpr 0x1428f97d8 <col:17> 'int ()' Function 0x1428f9720 'tcp_hdrlen' 'int ()'     | | |   `-ImplicitCastExpr 0x1428f9858 <col:28> 'struct sk_buff *' <LValueToRValue>     | | |     `-DeclRefExpr 0x1428f97f8 <col:28> 'struct sk_buff *' lvalue ParmVar 0x1428f8228 'skb' 'struct sk_buff *'     | | `-CallExpr 0x1428f99c8 <col:36, col:61> 'int'     | |   |-ImplicitCastExpr 0x1428f99b0 <col:36> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x1428f9970 <col:36> 'int ()' Function 0x1428f98b8 'tcp_checksum_complete' 'int ()'     | |   `-ImplicitCastExpr 0x1428f99f0 <col:58> 'struct sk_buff *' <LValueToRValue>     | |     `-DeclRefExpr 0x1428f9990 <col:58> 'struct sk_buff *' lvalue ParmVar 0x1428f8228 'skb' 'struct sk_buff *'     | `-GotoStmt 0x1428f9a78 <line:26:3, col:8> 'csum_err' 0x1428f9a28     |-IfStmt 0x1428fa4e0 <line:28:2, line:42:31> has_else     | |-BinaryOperator 0x1428f9b68 <line:28:6, col:22> 'int' contains-errors '=='     | | |-RecoveryExpr 0x1428f9ae8 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x1428f9ab0 <col:6> 'struct sock *' lvalue ParmVar 0x143050e48 'sk' 'struct sock *'     | | `-RecoveryExpr 0x1428f9b48 <col:22> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x1428fa3e0 <col:34, line:41:2>     | | |-DeclStmt 0x1428f9de8 <line:29:3, col:45>     | | | `-VarDecl 0x1428f9bb0 <col:3, col:44> col:16 used nsk 'struct sock *' cinit     | | |   `-ImplicitCastExpr 0x1428f9dd0 <col:22, col:44> 'struct sock *' <IntegralToPointer>     | | |     `-CallExpr 0x1428f9d70 <col:22, col:44> 'int'     | | |       |-ImplicitCastExpr 0x1428f9d58 <col:22> 'int (*)()' <FunctionToPointerDecay>     | | |       | `-DeclRefExpr 0x1428f9cf8 <col:22> 'int ()' Function 0x1428f9c40 'tcp_v4_hnd_req' 'int ()'     | | |       |-ImplicitCastExpr 0x1428f9da0 <col:37> 'struct sock *' <LValueToRValue>     | | |       | `-DeclRefExpr 0x1428f9d18 <col:37> 'struct sock *' lvalue ParmVar 0x143050e48 'sk' 'struct sock *'     | | |       `-ImplicitCastExpr 0x1428f9db8 <col:41> 'struct sk_buff *' <LValueToRValue>     | | |         `-DeclRefExpr 0x1428f9d38 <col:41> 'struct sk_buff *' lvalue ParmVar 0x1428f8228 'skb' 'struct sk_buff *'     | | |-IfStmt 0x1428f9eb8 <line:30:3, line:31:9>     | | | |-UnaryOperator 0x1428f9e38 <line:30:7, col:8> 'int' prefix '!' cannot overflow     | | | | `-ImplicitCastExpr 0x1428f9e20 <col:8> 'struct sock *' <LValueToRValue>     | | | |   `-DeclRefExpr 0x1428f9e00 <col:8> 'struct sock *' lvalue Var 0x1428f9bb0 'nsk' 'struct sock *'     | | | `-GotoStmt 0x1428f9ea0 <line:31:4, col:9> 'discard' 0x1428f9e50     | | `-IfStmt 0x1428fa3c0 <line:33:3, line:40:3>     | |   |-BinaryOperator 0x1428f9f48 <line:33:7, col:14> 'int' '!='     | |   | |-ImplicitCastExpr 0x1428f9f18 <col:7> 'struct sock *' <LValueToRValue>     | |   | | `-DeclRefExpr 0x1428f9ed8 <col:7> 'struct sock *' lvalue Var 0x1428f9bb0 'nsk' 'struct sock *'     | |   | `-ImplicitCastExpr 0x1428f9f30 <col:14> 'struct sock *' <LValueToRValue>     | |   |   `-DeclRefExpr 0x1428f9ef8 <col:14> 'struct sock *' lvalue ParmVar 0x143050e48 'sk' 'struct sock *'     | |   `-CompoundStmt 0x1428fa398 <col:18, line:40:3>     | |     |-CallExpr 0x1428f9fe0 <line:34:4, col:33> 'int'     | |     | |-ImplicitCastExpr 0x1428f9fc8 <col:4> 'int (*)()' <FunctionToPointerDecay>     | |     | | `-DeclRefExpr 0x1428f9f68 <col:4> 'int ()' Function 0x1428f8908 'sock_rps_save_rxhash' 'int ()'     | |     | |-ImplicitCastExpr 0x1428fa010 <col:25> 'struct sock *' <LValueToRValue>     | |     | | `-DeclRefExpr 0x1428f9f88 <col:25> 'struct sock *' lvalue Var 0x1428f9bb0 'nsk' 'struct sock *'     | |     | `-ImplicitCastExpr 0x1428fa028 <col:30> 'struct sk_buff *' <LValueToRValue>     | |     |   `-DeclRefExpr 0x1428f9fa8 <col:30> 'struct sk_buff *' lvalue ParmVar 0x1428f8228 'skb' 'struct sk_buff *'     | |     |-IfStmt 0x1428fa348 <line:35:4, line:38:4>     | |     | |-CallExpr 0x1428fa1b8 <line:35:8, col:38> 'int'     | |     | | |-ImplicitCastExpr 0x1428fa1a0 <col:8> 'int (*)()' <FunctionToPointerDecay>     | |     | | | `-DeclRefExpr 0x1428fa120 <col:8> 'int ()' Function 0x1428fa068 'tcp_child_process' 'int ()'     | |     | | |-ImplicitCastExpr 0x1428fa200 <col:26> 'struct sock *' <LValueToRValue>     | |     | | | `-DeclRefExpr 0x1428fa140 <col:26> 'struct sock *' lvalue ParmVar 0x143050e48 'sk' 'struct sock *'     | |     | | |-ImplicitCastExpr 0x1428fa218 <col:30> 'struct sock *' <LValueToRValue>     | |     | | | `-DeclRefExpr 0x1428fa160 <col:30> 'struct sock *' lvalue Var 0x1428f9bb0 'nsk' 'struct sock *'     | |     | | `-ImplicitCastExpr 0x1428fa230 <col:35> 'struct sk_buff *' <LValueToRValue>     | |     | |   `-DeclRefExpr 0x1428fa180 <col:35> 'struct sk_buff *' lvalue ParmVar 0x1428f8228 'skb' 'struct sk_buff *'     | |     | `-CompoundStmt 0x1428fa328 <col:41, line:38:4>     | |     |   |-BinaryOperator 0x1428fa2a0 <line:36:5, col:11> 'struct sock *' '='     | |     |   | |-DeclRefExpr 0x1428fa248 <col:5> 'struct sock *' lvalue Var 0x1428f84d8 'rsk' 'struct sock *'     | |     |   | `-ImplicitCastExpr 0x1428fa288 <col:11> 'struct sock *' <LValueToRValue>     | |     |   |   `-DeclRefExpr 0x1428fa268 <col:11> 'struct sock *' lvalue Var 0x1428f9bb0 'nsk' 'struct sock *'     | |     |   `-GotoStmt 0x1428fa310 <line:37:5, col:10> 'reset' 0x1428fa2c0     | |     `-ReturnStmt 0x1428fa388 <line:39:4, col:11>     | |       `-IntegerLiteral 0x1428fa368 <col:11> 'int' 0     | `-CallExpr 0x1428fa480 <line:42:3, col:31> 'int'     |   |-ImplicitCastExpr 0x1428fa468 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1428fa408 <col:3> 'int ()' Function 0x1428f8908 'sock_rps_save_rxhash' 'int ()'     |   |-ImplicitCastExpr 0x1428fa4b0 <col:24> 'struct sock *' <LValueToRValue>     |   | `-DeclRefExpr 0x1428fa428 <col:24> 'struct sock *' lvalue ParmVar 0x143050e48 'sk' 'struct sock *'     |   `-ImplicitCastExpr 0x1428fa4c8 <col:28> 'struct sk_buff *' <LValueToRValue>     |     `-DeclRefExpr 0x1428fa448 <col:28> 'struct sk_buff *' lvalue ParmVar 0x1428f8228 'skb' 'struct sk_buff *'     |-IfStmt 0x1428fa838 <line:44:2, line:47:2>     | |-CallExpr 0x1428fa748 <line:44:6, col:59> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1428fa5f0 <col:6> 'int ()' Function 0x1428fa538 'tcp_rcv_state_process' 'int ()'     | | |-DeclRefExpr 0x1428fa610 <col:28> 'struct sock *' lvalue ParmVar 0x143050e48 'sk' 'struct sock *'     | | |-DeclRefExpr 0x1428fa630 <col:32> 'struct sk_buff *' lvalue ParmVar 0x1428f8228 'skb' 'struct sk_buff *'     | | |-CallExpr 0x1428fa6a8 <col:37, col:48> 'int'     | | | |-ImplicitCastExpr 0x1428fa690 <col:37> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x1428fa650 <col:37> 'int ()' Function 0x1428f9420 'tcp_hdr' 'int ()'     | | | `-ImplicitCastExpr 0x1428fa6d0 <col:45> 'struct sk_buff *' <LValueToRValue>     | | |   `-DeclRefExpr 0x1428fa670 <col:45> 'struct sk_buff *' lvalue ParmVar 0x1428f8228 'skb' 'struct sk_buff *'     | | `-RecoveryExpr 0x1428fa720 <col:51, col:56> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1428fa6e8 <col:51> 'struct sk_buff *' lvalue ParmVar 0x1428f8228 'skb' 'struct sk_buff *'     | `-CompoundStmt 0x1428fa818 <col:62, line:47:2>     |   |-BinaryOperator 0x1428fa7e0 <line:45:3, col:9> 'struct sock *' '='     |   | |-DeclRefExpr 0x1428fa788 <col:3> 'struct sock *' lvalue Var 0x1428f84d8 'rsk' 'struct sock *'     |   | `-ImplicitCastExpr 0x1428fa7c8 <col:9> 'struct sock *' <LValueToRValue>     |   |   `-DeclRefExpr 0x1428fa7a8 <col:9> 'struct sock *' lvalue ParmVar 0x143050e48 'sk' 'struct sock *'     |   `-GotoStmt 0x1428fa800 <line:46:3, col:8> 'reset' 0x1428fa2c0     |-ReturnStmt 0x1428fa878 <line:48:2, col:9>     | `-IntegerLiteral 0x1428fa858 <col:9> 'int' 0     |-LabelStmt 0x1428faa40 <line:50:1, line:51:28> 'reset'     | `-CallExpr 0x1428fa9e0 <col:2, col:28> 'int'     |   |-ImplicitCastExpr 0x1428fa9c8 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1428fa968 <col:2> 'int ()' Function 0x1428fa8b0 'tcp_v4_send_reset' 'int ()'     |   |-ImplicitCastExpr 0x1428faa10 <col:20> 'struct sock *' <LValueToRValue>     |   | `-DeclRefExpr 0x1428fa988 <col:20> 'struct sock *' lvalue Var 0x1428f84d8 'rsk' 'struct sock *'     |   `-ImplicitCastExpr 0x1428faa28 <col:25> 'struct sk_buff *' <LValueToRValue>     |     `-DeclRefExpr 0x1428fa9a8 <col:25> 'struct sk_buff *' lvalue ParmVar 0x1428f8228 'skb' 'struct sk_buff *'     |-LabelStmt 0x1428fabd8 <line:52:1, line:53:15> 'discard'     | `-CallExpr 0x1428fab98 <col:2, col:15> 'int'     |   |-ImplicitCastExpr 0x1428fab80 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1428fab40 <col:2> 'int ()' Function 0x1428faa88 'kfree_skb' 'int ()'     |   `-ImplicitCastExpr 0x1428fabc0 <col:12> 'struct sk_buff *' <LValueToRValue>     |     `-DeclRefExpr 0x1428fab60 <col:12> 'struct sk_buff *' lvalue ParmVar 0x1428f8228 'skb' 'struct sk_buff *'     |-ReturnStmt 0x1428fac18 <line:55:2, col:9>     | `-IntegerLiteral 0x1428fabf8 <col:9> 'int' 0     |-LabelStmt 0x1428faea8 <line:57:1, col:9> 'csum_err'     | `-NullStmt 0x1428faea0 <col:9>     `-GotoStmt 0x1428faf80 <line:60:2, col:7> 'discard' 0x1428f9e50 ","19266":"`-FunctionDecl 0x12a942158  col:5 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x12a942258 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x12a9422c0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x12a942328 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x12a942200 <<invalid sloc>> Implicit 882 ","19928":"`-FunctionDecl 0x1500274d8  line:1:12 invalid kill_something_info 'int (int, struct siginfo *, int)' static   |-ParmVarDecl 0x15000dcd8 <col:32, col:36> col:36 used sig 'int'   |-ParmVarDecl 0x15000e2c8 <col:41, col:57> col:57 used info 'struct siginfo *'   |-ParmVarDecl 0x15000e360 <col:63, col:69> col:69 invalid pid 'int'   `-CompoundStmt 0x15002aad0 <line:2:1, line:34:1>     |-DeclStmt 0x150027618 <line:3:2, col:9>     | `-VarDecl 0x1500275b0 <col:2, col:6> col:6 used ret 'int'     |-IfStmt 0x150027d28 <line:5:2, line:10:2>     | |-BinaryOperator 0x150027670 <line:5:6, col:12> 'int' contains-errors '>'     | | |-RecoveryExpr 0x150027630 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x150027650 <col:12> 'int' 0     | `-CompoundStmt 0x150027cf8 <col:15, line:10:2>     |   |-CallExpr 0x150027858 <line:6:3, col:17> 'int'     |   | `-ImplicitCastExpr 0x150027840 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x1500277f0 <col:3> 'int ()' Function 0x150027738 'rcu_read_lock' 'int ()'     |   |-BinaryOperator 0x150027b58 <line:7:3, col:48> 'int' contains-errors '='     |   | |-DeclRefExpr 0x150027878 <col:3> 'int' lvalue Var 0x1500275b0 'ret' 'int'     |   | `-CallExpr 0x150027b20 <col:9, col:48> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x150027978 <col:9> 'int ()' Function 0x1500278c0 'kill_pid_info' 'int ()'     |   |   |-DeclRefExpr 0x150027998 <col:23> 'int' lvalue ParmVar 0x15000dcd8 'sig' 'int'     |   |   |-DeclRefExpr 0x1500279b8 <col:28> 'struct siginfo *' lvalue ParmVar 0x15000e2c8 'info' 'struct siginfo *'     |   |   `-CallExpr 0x150027af8 <col:34, col:47> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x150027ab8 <col:34> 'int ()' Function 0x150027a00 'find_vpid' 'int ()'     |   |     `-RecoveryExpr 0x150027ad8 <col:44> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x150027c90 <line:8:3, col:19> 'int'     |   | `-ImplicitCastExpr 0x150027c78 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x150027c58 <col:3> 'int ()' Function 0x150027ba0 'rcu_read_unlock' 'int ()'     |   `-ReturnStmt 0x150027ce8 <line:9:3, col:10>     |     `-ImplicitCastExpr 0x150027cd0 <col:10> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x150027cb0 <col:10> 'int' lvalue Var 0x1500275b0 'ret' 'int'     |-CallExpr 0x150027ed8 <line:12:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x150027e28 <col:2> 'int ()' Function 0x150027d70 'read_lock' 'int ()'     | `-UnaryOperator 0x150027ec0 <col:12, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x150027ea0 <col:13> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15002a958 <line:13:2, line:30:2> has_else     | |-BinaryOperator 0x150027f58 <line:13:6, col:14> 'int' contains-errors '!='     | | |-RecoveryExpr 0x150027f00 <col:6> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x150027f40 <col:13, col:14> 'int' prefix '-'     | |   `-IntegerLiteral 0x150027f20 <col:14> 'int' 1     | |-CompoundStmt 0x1500298f8 <col:17, line:16:2>     | | `-BinaryOperator 0x1500298d8 <line:14:3, line:15:47> 'int' contains-errors '='     | |   |-DeclRefExpr 0x150027f78 <line:14:3> 'int' lvalue Var 0x1500275b0 'ret' 'int'     | |   `-CallExpr 0x1500298a0 <col:9, line:15:47> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x150028078 <line:14:9> 'int ()' Function 0x150027fc0 '__kill_pgrp_info' 'int ()'     | |     |-DeclRefExpr 0x150028098 <col:26> 'int' lvalue ParmVar 0x15000dcd8 'sig' 'int'     | |     |-DeclRefExpr 0x1500280b8 <col:31> 'struct siginfo *' lvalue ParmVar 0x15000e2c8 'info' 'struct siginfo *'     | |     `-ConditionalOperator 0x150029870 <line:15:5, col:46> '<dependent type>' contains-errors     | |       |-RecoveryExpr 0x1500280d8 <col:5> '<dependent type>' contains-errors lvalue     | |       |-CallExpr 0x150029800 <col:11, col:25> '<dependent type>' contains-errors     | |       | |-DeclRefExpr 0x1500280f8 <col:11> 'int ()' Function 0x150027a00 'find_vpid' 'int ()'     | |       | `-UnaryOperator 0x1500283c8 <col:21, col:22> '<dependent type>' contains-errors prefix '-' cannot overflow     | |       |   `-ImplicitCastExpr 0x1500283b0 <col:22> '<dependent type>' contains-errors <LValueToRValue>     | |       |     `-RecoveryExpr 0x150028118 <col:22> '<dependent type>' contains-errors lvalue     | |       `-CallExpr 0x150029848 <col:29, col:46> '<dependent type>' contains-errors     | |         |-DeclRefExpr 0x150028270 <col:29> 'int ()' Function 0x1500281b8 'task_pgrp' 'int ()'     | |         `-RecoveryExpr 0x150029828 <col:39> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x15002a920 <line:16:9, line:30:2>     |   |-DeclStmt 0x150029a68 <line:17:3, col:28>     |   | |-VarDecl 0x150029928 <col:3, col:16> col:7 used retval 'int' cinit     |   | | `-IntegerLiteral 0x150029990 <col:16> 'int' 0     |   | `-VarDecl 0x1500299c8 <col:3, col:27> col:19 used count 'int' cinit     |   |   `-IntegerLiteral 0x150029a30 <col:27> 'int' 0     |   |-DeclStmt 0x150029c68 <line:18:3, col:25>     |   | |-RecordDecl 0x150029a80 <col:3, col:10> col:10 struct task_struct     |   | `-VarDecl 0x150029be8 <col:3, col:24> col:24 used p 'struct task_struct *'     |   |-CallExpr 0x150029db8 <line:20:3, col:21> 'int'     |   | |-ImplicitCastExpr 0x150029da0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x150029d60 <col:3> 'int ()' Function 0x150029ca8 'for_each_process' 'int ()'     |   | `-ImplicitCastExpr 0x150029de0 <col:20> 'struct task_struct *' <LValueToRValue>     |   |   `-DeclRefExpr 0x150029d80 <col:20> 'struct task_struct *' lvalue Var 0x150029be8 'p' 'struct task_struct *'     |   |-CompoundStmt 0x15002a768 <col:23, line:28:3>     |   | `-IfStmt 0x15002a748 <line:21:4, line:27:4>     |   |   |-BinaryOperator 0x15002a2a8 <line:21:8, line:22:35> 'int' contains-errors '&&'     |   |   | |-BinaryOperator 0x15002a220 <line:21:8, col:26> 'int' '>'     |   |   | | |-CallExpr 0x15002a1e0 <col:8, col:22> 'int'     |   |   | | | |-ImplicitCastExpr 0x15002a1c8 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   |   | | | | `-DeclRefExpr 0x150029ed8 <col:8> 'int ()' Function 0x150029e20 'task_pid_vnr' 'int ()'     |   |   | | | `-ImplicitCastExpr 0x15002a208 <col:21> 'struct task_struct *' <LValueToRValue>     |   |   | | |   `-DeclRefExpr 0x150029ef8 <col:21> 'struct task_struct *' lvalue Var 0x150029be8 'p' 'struct task_struct *'     |   |   | | `-IntegerLiteral 0x150029f70 <col:26> 'int' 1     |   |   | `-UnaryOperator 0x15002a290 <line:22:6, col:35> '<dependent type>' contains-errors prefix '!' cannot overflow     |   |   |   `-CallExpr 0x15002a260 <col:7, col:35> '<dependent type>' contains-errors     |   |   |     |-DeclRefExpr 0x15002a090 <col:7> 'int ()' Function 0x150029fd8 'same_thread_group' 'int ()'     |   |   |     |-DeclRefExpr 0x15002a0b0 <col:25> 'struct task_struct *' lvalue Var 0x150029be8 'p' 'struct task_struct *'     |   |   |     `-RecoveryExpr 0x15002a240 <col:28> '<dependent type>' contains-errors lvalue     |   |   `-CompoundStmt 0x15002a720 <col:38, line:27:4>     |   |     |-DeclStmt 0x15002a540 <line:23:5, col:48>     |   |     | `-VarDecl 0x15002a2e0 <col:5, col:47> col:9 used err 'int' cinit     |   |     |   `-CallExpr 0x15002a4c0 <col:15, col:47> 'int'     |   |     |     |-ImplicitCastExpr 0x15002a4a8 <col:15> 'int (*)()' <FunctionToPointerDecay>     |   |     |     | `-DeclRefExpr 0x15002a428 <col:15> 'int ()' Function 0x15002a370 'group_send_sig_info' 'int ()'     |   |     |     |-ImplicitCastExpr 0x15002a4f8 <col:35> 'int' <LValueToRValue>     |   |     |     | `-DeclRefExpr 0x15002a448 <col:35> 'int' lvalue ParmVar 0x15000dcd8 'sig' 'int'     |   |     |     |-ImplicitCastExpr 0x15002a510 <col:40> 'struct siginfo *' <LValueToRValue>     |   |     |     | `-DeclRefExpr 0x15002a468 <col:40> 'struct siginfo *' lvalue ParmVar 0x15000e2c8 'info' 'struct siginfo *'     |   |     |     `-ImplicitCastExpr 0x15002a528 <col:46> 'struct task_struct *' <LValueToRValue>     |   |     |       `-DeclRefExpr 0x15002a488 <col:46> 'struct task_struct *' lvalue Var 0x150029be8 'p' 'struct task_struct *'     |   |     |-UnaryOperator 0x15002a578 <line:24:5, col:7> 'int' prefix '++'     |   |     | `-DeclRefExpr 0x15002a558 <col:7> 'int' lvalue Var 0x1500299c8 'count' 'int'     |   |     `-IfStmt 0x15002a700 <line:25:5, line:26:15>     |   |       |-BinaryOperator 0x15002a668 <line:25:9, col:17> 'int' contains-errors '!='     |   |       | |-DeclRefExpr 0x15002a590 <col:9> 'int' lvalue Var 0x15002a2e0 'err' 'int'     |   |       | `-UnaryOperator 0x15002a650 <col:16, col:17> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |       |   `-ImplicitCastExpr 0x15002a638 <col:17> '<dependent type>' contains-errors <LValueToRValue>     |   |       |     `-RecoveryExpr 0x15002a618 <col:17> '<dependent type>' contains-errors lvalue     |   |       `-BinaryOperator 0x15002a6e0 <line:26:6, col:15> 'int' '='     |   |         |-DeclRefExpr 0x15002a688 <col:6> 'int' lvalue Var 0x150029928 'retval' 'int'     |   |         `-ImplicitCastExpr 0x15002a6c8 <col:15> 'int' <LValueToRValue>     |   |           `-DeclRefExpr 0x15002a6a8 <col:15> 'int' lvalue Var 0x15002a2e0 'err' 'int'     |   `-BinaryOperator 0x15002a900 <line:29:3, col:27> 'int' contains-errors '='     |     |-DeclRefExpr 0x15002a780 <col:3> 'int' lvalue Var 0x1500275b0 'ret' 'int'     |     `-ConditionalOperator 0x15002a8d0 <col:9, col:27> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x15002a7a0 <col:9> 'int' lvalue Var 0x1500299c8 'count' 'int'     |       |-DeclRefExpr 0x15002a7c0 <col:17> 'int' lvalue Var 0x150029928 'retval' 'int'     |       `-UnaryOperator 0x15002a8b8 <col:26, col:27> '<dependent type>' contains-errors prefix '-' cannot overflow     |         `-ImplicitCastExpr 0x15002a8a0 <col:27> '<dependent type>' contains-errors <LValueToRValue>     |           `-RecoveryExpr 0x15002a880 <col:27> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x15002aac0 <line:33:2, col:9>       `-ImplicitCastExpr 0x15002aaa8 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x15002aa88 <col:9> 'int' lvalue Var 0x1500275b0 'ret' 'int' ","19661":"`-FunctionDecl 0x12f057278  col:17 implicit used memmove 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x12f057378 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x12f057400 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x12f057468 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x12f057320 <<invalid sloc>> Implicit 884 ","19841":"`-FunctionDecl 0x12682f448  col:4 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x12682f548 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x12682f5b0 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x12682f618 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x12682f4f0 <<invalid sloc>> Implicit 900 ","19604":"`-FunctionDecl 0x15b128288  line:1:1 invalid nautilus_file_update_info 'int (int *, int *)'   |-ParmVarDecl 0x15b128128 <col:28, col:42> col:42 invalid file 'int *'   |-ParmVarDecl 0x15b1281a8 <line:2:7, col:18> col:18 invalid info 'int *'   `-CompoundStmt 0x15b1285b8 <line:3:1, line:5:1>     `-ReturnStmt 0x15b1285a8 <line:4:2, col:48>       `-CallExpr 0x15b128570 <col:9, col:48> '<dependent type>' contains-errors         |-DeclRefExpr 0x15b1284a0 <col:9> 'int ()' Function 0x15b1283e8 'update_info_internal' 'int ()'         |-RecoveryExpr 0x15b1284c0 <col:31> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x15b1284e0 <col:37> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x15b128550 <col:43> '<dependent type>' contains-errors lvalue ","19398":"`-FunctionDecl 0x1549418d8  line:1:6 invalid ntlmssp_check_response 'int (const struct ntlmssp_response *, int, const char **)'   |-ParmVarDecl 0x154928668 <col:29, col:60> col:60 used response 'const struct ntlmssp_response *'   |-ParmVarDecl 0x1549286e8 <line:2:8, col:15> col:15 invalid data_size 'int'   |-ParmVarDecl 0x154928798 <col:26, col:39> col:39 used error 'const char **'   `-CompoundStmt 0x154943ae8 <line:3:1, line:27:1>     |-IfStmt 0x154941b98 <line:4:2, line:7:2>     | |-RecoveryExpr 0x154941a10 <line:4:6, col:48> '_Bool' contains-errors     | `-CompoundStmt 0x154941b78 <col:51, line:7:2>     |   |-BinaryOperator 0x154941b10 <line:5:3, col:12> 'const char *' '='     |   | |-UnaryOperator 0x154941a68 <col:3, col:4> 'const char *' lvalue prefix '*' cannot overflow     |   | | `-ImplicitCastExpr 0x154941a50 <col:4> 'const char **' <LValueToRValue>     |   | |   `-DeclRefExpr 0x154941a30 <col:4> 'const char **' lvalue ParmVar 0x154928798 'error' 'const char **'     |   | `-ImplicitCastExpr 0x154941af8 <col:12> 'const char *' <NoOp>     |   |   `-ImplicitCastExpr 0x154941ae0 <col:12> 'char *' <ArrayToPointerDecay>     |   |     `-StringLiteral 0x154941ac0 <col:12> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x154941b68 <line:6:3, col:10>     |     `-RecoveryExpr 0x154941b48 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x154941f70 <line:9:2, line:12:2>     | |-BinaryOperator 0x154941e28 <line:9:6, col:37> 'int' contains-errors '!='     | | |-CallExpr 0x154941da8 <col:6, col:32> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x154941d10 <col:6> 'int ()' Function 0x154941c58 'read_le64' 'int ()'     | | | `-UnaryOperator 0x154941d90 <col:16, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-RecoveryExpr 0x154941d68 <col:17, col:27> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x154941d30 <col:17> 'const struct ntlmssp_response *' lvalue ParmVar 0x154928668 'response' 'const struct ntlmssp_response *'     | | `-RecoveryExpr 0x154941e08 <col:37> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x154941f50 <col:52, line:12:2>     |   |-BinaryOperator 0x154941ee8 <line:10:3, col:12> 'const char *' '='     |   | |-UnaryOperator 0x154941e80 <col:3, col:4> 'const char *' lvalue prefix '*' cannot overflow     |   | | `-ImplicitCastExpr 0x154941e68 <col:4> 'const char **' <LValueToRValue>     |   | |   `-DeclRefExpr 0x154941e48 <col:4> 'const char **' lvalue ParmVar 0x154928798 'error' 'const char **'     |   | `-ImplicitCastExpr 0x154941ed0 <col:12> 'const char *' <NoOp>     |   |   `-ImplicitCastExpr 0x154941eb8 <col:12> 'char *' <ArrayToPointerDecay>     |   |     `-StringLiteral 0x154941e98 <col:12> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x154941f40 <line:11:3, col:10>     |     `-RecoveryExpr 0x154941f20 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1549422d0 <line:14:2, line:17:2>     | |-BinaryOperator 0x154942188 <line:14:6, col:36> 'int' contains-errors '!='     | | |-CallExpr 0x154942108 <col:6, col:31> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x154942070 <col:6> 'int ()' Function 0x154941fb8 'read_le32' 'int ()'     | | | `-UnaryOperator 0x1549420f0 <col:16, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-RecoveryExpr 0x1549420c8 <col:17, col:27> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x154942090 <col:17> 'const struct ntlmssp_response *' lvalue ParmVar 0x154928668 'response' 'const struct ntlmssp_response *'     | | `-RecoveryExpr 0x154942168 <col:36> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1549422b0 <col:55, line:17:2>     |   |-BinaryOperator 0x154942248 <line:15:3, col:12> 'const char *' '='     |   | |-UnaryOperator 0x1549421e0 <col:3, col:4> 'const char *' lvalue prefix '*' cannot overflow     |   | | `-ImplicitCastExpr 0x1549421c8 <col:4> 'const char **' <LValueToRValue>     |   | |   `-DeclRefExpr 0x1549421a8 <col:4> 'const char **' lvalue ParmVar 0x154928798 'error' 'const char **'     |   | `-ImplicitCastExpr 0x154942230 <col:12> 'const char *' <NoOp>     |   |   `-ImplicitCastExpr 0x154942218 <col:12> 'char *' <ArrayToPointerDecay>     |   |     `-StringLiteral 0x1549421f8 <col:12> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x1549422a0 <line:16:3, col:10>     |     `-RecoveryExpr 0x154942280 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x154943a80 <line:19:2, line:24:10>     | |-BinaryOperator 0x154943a18 <line:19:6, line:23:68> 'int' contains-errors '||'     | | |-BinaryOperator 0x1549438d0 <line:19:6, line:22:61> 'int' contains-errors '||'     | | | |-BinaryOperator 0x154942768 <line:19:6, line:21:63> 'int' contains-errors '||'     | | | | |-BinaryOperator 0x154942620 <line:19:6, line:20:70> 'int' contains-errors '||'     | | | | | |-UnaryOperator 0x1549424e0 <line:19:6, col:68> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | | | `-CallExpr 0x1549424a8 <col:7, col:68> '<dependent type>' contains-errors     | | | | | |   |-DeclRefExpr 0x1549423d0 <col:7> 'int ()' Function 0x154942318 'ntlmssp_check_buffer' 'int ()'     | | | | | |   |-UnaryOperator 0x154942450 <col:28, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | | | |   | `-RecoveryExpr 0x154942428 <col:29, col:39> '<dependent type>' contains-errors lvalue     | | | | | |   |   `-DeclRefExpr 0x1549423f0 <col:29> 'const struct ntlmssp_response *' lvalue ParmVar 0x154928668 'response' 'const struct ntlmssp_response *'     | | | | | |   |-RecoveryExpr 0x154942468 <col:52> '<dependent type>' contains-errors lvalue     | | | | | |   `-DeclRefExpr 0x154942488 <col:63> 'const char **' lvalue ParmVar 0x154928798 'error' 'const char **'     | | | | | `-UnaryOperator 0x154942608 <line:20:6, col:70> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | |   `-CallExpr 0x1549425d0 <col:7, col:70> '<dependent type>' contains-errors     | | | | |     |-DeclRefExpr 0x1549424f8 <col:7> 'int ()' Function 0x154942318 'ntlmssp_check_buffer' 'int ()'     | | | | |     |-UnaryOperator 0x154942578 <col:28, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | | |     | `-RecoveryExpr 0x154942550 <col:29, col:39> '<dependent type>' contains-errors lvalue     | | | | |     |   `-DeclRefExpr 0x154942518 <col:29> 'const struct ntlmssp_response *' lvalue ParmVar 0x154928668 'response' 'const struct ntlmssp_response *'     | | | | |     |-RecoveryExpr 0x154942590 <col:54> '<dependent type>' contains-errors lvalue     | | | | |     `-DeclRefExpr 0x1549425b0 <col:65> 'const char **' lvalue ParmVar 0x154928798 'error' 'const char **'     | | | | `-UnaryOperator 0x154942750 <line:21:6, col:63> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | |   `-CallExpr 0x154942718 <col:7, col:63> '<dependent type>' contains-errors     | | | |     |-DeclRefExpr 0x154942640 <col:7> 'int ()' Function 0x154942318 'ntlmssp_check_buffer' 'int ()'     | | | |     |-UnaryOperator 0x1549426c0 <col:28, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | |     | `-RecoveryExpr 0x154942698 <col:29, col:39> '<dependent type>' contains-errors lvalue     | | | |     |   `-DeclRefExpr 0x154942660 <col:29> 'const struct ntlmssp_response *' lvalue ParmVar 0x154928668 'response' 'const struct ntlmssp_response *'     | | | |     |-RecoveryExpr 0x1549426d8 <col:47> '<dependent type>' contains-errors lvalue     | | | |     `-DeclRefExpr 0x1549426f8 <col:58> 'const char **' lvalue ParmVar 0x154928798 'error' 'const char **'     | | | `-UnaryOperator 0x1549438b8 <line:22:6, col:61> '<dependent type>' contains-errors prefix '!' cannot overflow     | | |   `-CallExpr 0x154943880 <col:7, col:61> '<dependent type>' contains-errors     | | |     |-DeclRefExpr 0x154942788 <col:7> 'int ()' Function 0x154942318 'ntlmssp_check_buffer' 'int ()'     | | |     |-UnaryOperator 0x154943828 <col:28, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |     | `-RecoveryExpr 0x154943800 <col:29, col:39> '<dependent type>' contains-errors lvalue     | | |     |   `-DeclRefExpr 0x1549427a8 <col:29> 'const struct ntlmssp_response *' lvalue ParmVar 0x154928668 'response' 'const struct ntlmssp_response *'     | | |     |-RecoveryExpr 0x154943840 <col:45> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x154943860 <col:56> 'const char **' lvalue ParmVar 0x154928798 'error' 'const char **'     | | `-UnaryOperator 0x154943a00 <line:23:6, col:68> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-CallExpr 0x1549439c8 <col:7, col:68> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x1549438f0 <col:7> 'int ()' Function 0x154942318 'ntlmssp_check_buffer' 'int ()'     | |     |-UnaryOperator 0x154943970 <col:28, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     | `-RecoveryExpr 0x154943948 <col:29, col:39> '<dependent type>' contains-errors lvalue     | |     |   `-DeclRefExpr 0x154943910 <col:29> 'const struct ntlmssp_response *' lvalue ParmVar 0x154928668 'response' 'const struct ntlmssp_response *'     | |     |-RecoveryExpr 0x154943988 <col:52> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x1549439a8 <col:63> 'const char **' lvalue ParmVar 0x154928798 'error' 'const char **'     | `-ReturnStmt 0x154943a70 <line:24:3, col:10>     |   `-RecoveryExpr 0x154943a50 <col:10> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x154943ad8 <line:26:2, col:9>       `-RecoveryExpr 0x154943ab8 <col:9> '<dependent type>' contains-errors lvalue ","19220":"`-FunctionDecl 0x13580dec0  line:1:13 polarssl_debug 'void (void *, int, const char *)' static   |-ParmVarDecl 0x13580dcd8 <col:28, col:34> col:34 used context 'void *'   |-ParmVarDecl 0x13580dd58 <col:43, col:47> col:47 used level 'int'   |-ParmVarDecl 0x13580ddd8 <col:54, col:66> col:66 used line 'const char *'   `-CompoundStmt 0x135828ad8 <line:2:1, line:12:1>     |-DeclStmt 0x13580e208 <line:3:3, col:36>     | |-RecordDecl 0x13580dfc8 <col:3, col:10> col:10 struct SessionHandle     | `-VarDecl 0x13580e138 <col:3, col:32> col:25 used data 'struct SessionHandle *' cinit     |   `-RecoveryExpr 0x13580e1d0 <col:32> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13580e280 <line:5:3, line:6:5>     | |-UnaryOperator 0x13580e258 <line:5:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13580e240 <col:7> 'void *' <LValueToRValue>     | |   `-DeclRefExpr 0x13580e220 <col:7> 'void *' lvalue ParmVar 0x13580dcd8 'context' 'void *'     | `-ReturnStmt 0x13580e270 <line:6:5>     |-BinaryOperator 0x13580e3a8 <line:8:3, col:34> 'struct SessionHandle *' contains-errors '='     | |-DeclRefExpr 0x13580e2a0 <col:3> 'struct SessionHandle *' contains-errors lvalue Var 0x13580e138 'data' 'struct SessionHandle *'     | `-CStyleCastExpr 0x13580e380 <col:10, col:34> 'struct SessionHandle *' <BitCast>     |   `-ImplicitCastExpr 0x13580e368 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast     |     `-DeclRefExpr 0x13580e2c0 <col:34> 'void *' lvalue ParmVar 0x13580dcd8 'context' 'void *'     |-CallExpr 0x1358289e8 <line:10:3, col:26> 'int' contains-errors     | |-ImplicitCastExpr 0x1358289d0 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1358288e0 <col:3> 'int ()' Function 0x135828828 'infof' 'int ()'     | |-ImplicitCastExpr 0x135828a20 <col:9> 'struct SessionHandle *' contains-errors <LValueToRValue>     | | `-DeclRefExpr 0x135828900 <col:9> 'struct SessionHandle *' contains-errors lvalue Var 0x13580e138 'data' 'struct SessionHandle *'     | |-ImplicitCastExpr 0x135828a38 <col:15> 'char *' <ArrayToPointerDecay>     | | `-StringLiteral 0x135828960 <col:15> 'char[4]' lvalue \"STR\"     | `-ImplicitCastExpr 0x135828a50 <col:22> 'const char *' <LValueToRValue>     |   `-DeclRefExpr 0x135828980 <col:22> 'const char *' lvalue ParmVar 0x13580ddd8 'line' 'const char *'     `-CStyleCastExpr 0x135828ab0 <line:11:3, col:10> 'void' <ToVoid>       `-ImplicitCastExpr 0x135828a98 <col:10> 'int' <LValueToRValue> part_of_explicit_cast         `-DeclRefExpr 0x135828a68 <col:10> 'int' lvalue ParmVar 0x13580dd58 'level' 'int' ","19278":"`-FunctionDecl 0x13900e068  line:1:15 invalid id3_parse_tag 'int (char *, int, char **, int *, int *)' static   |-ParmVarDecl 0x13900dcf0 <col:29, col:35> col:35 used data 'char *'   |-ParmVarDecl 0x13900dd70 <col:41, col:45> col:45 invalid length 'int'   |-ParmVarDecl 0x13900de28 <col:53, col:60> col:60 used output 'char **'   |-ParmVarDecl 0x13900ded8 <col:68, col:73> col:73 invalid output_size 'int *'   |-ParmVarDecl 0x13900df58 <col:86, col:91> col:91 invalid output_pos 'int *'   `-CompoundStmt 0x1390295d8 <line:2:1, line:41:1>     |-IfStmt 0x1390278d8 <line:6:2, line:7:10>     | |-BinaryOperator 0x139027870 <line:6:6, col:61> 'int' '||'     | | |-BinaryOperator 0x13900e350 <col:6, col:41> 'int' '||'     | | | |-ParenExpr 0x13900e230 <col:6, col:21> 'int'     | | | | `-BinaryOperator 0x13900e210 <col:7, col:18> 'int' '!='     | | | |   |-ImplicitCastExpr 0x13900e1f8 <col:7, col:13> 'int' <IntegralCast>     | | | |   | `-ImplicitCastExpr 0x13900e1e0 <col:7, col:13> 'char' <LValueToRValue>     | | | |   |   `-ArraySubscriptExpr 0x13900e1a8 <col:7, col:13> 'char' lvalue     | | | |   |     |-ImplicitCastExpr 0x13900e190 <col:7> 'char *' <LValueToRValue>     | | | |   |     | `-DeclRefExpr 0x13900e150 <col:7> 'char *' lvalue ParmVar 0x13900dcf0 'data' 'char *'     | | | |   |     `-IntegerLiteral 0x13900e170 <col:12> 'int' 0     | | | |   `-CharacterLiteral 0x13900e1c8 <col:18> 'int' 73     | | | `-ParenExpr 0x13900e330 <col:26, col:41> 'int'     | | |   `-BinaryOperator 0x13900e310 <col:27, col:38> 'int' '!='     | | |     |-ImplicitCastExpr 0x13900e2f8 <col:27, col:33> 'int' <IntegralCast>     | | |     | `-ImplicitCastExpr 0x13900e2e0 <col:27, col:33> 'char' <LValueToRValue>     | | |     |   `-ArraySubscriptExpr 0x13900e2a8 <col:27, col:33> 'char' lvalue     | | |     |     |-ImplicitCastExpr 0x13900e290 <col:27> 'char *' <LValueToRValue>     | | |     |     | `-DeclRefExpr 0x13900e250 <col:27> 'char *' lvalue ParmVar 0x13900dcf0 'data' 'char *'     | | |     |     `-IntegerLiteral 0x13900e270 <col:32> 'int' 1     | | |     `-CharacterLiteral 0x13900e2c8 <col:38> 'int' 68     | | `-ParenExpr 0x139027850 <col:46, col:61> 'int'     | |   `-BinaryOperator 0x139027830 <col:47, col:58> 'int' '!='     | |     |-ImplicitCastExpr 0x139027818 <col:47, col:53> 'int' <IntegralCast>     | |     | `-ImplicitCastExpr 0x139027800 <col:47, col:53> 'char' <LValueToRValue>     | |     |   `-ArraySubscriptExpr 0x13900e3c8 <col:47, col:53> 'char' lvalue     | |     |     |-ImplicitCastExpr 0x13900e3b0 <col:47> 'char *' <LValueToRValue>     | |     |     | `-DeclRefExpr 0x13900e370 <col:47> 'char *' lvalue ParmVar 0x13900dcf0 'data' 'char *'     | |     |     `-IntegerLiteral 0x13900e390 <col:52> 'int' 2     | |     `-CharacterLiteral 0x13900e3e8 <col:58> 'int' 51     | `-ReturnStmt 0x1390278c8 <line:7:3, col:10>     |   `-RecoveryExpr 0x1390278a8 <col:10> '<dependent type>' contains-errors lvalue     |-CallExpr 0x139027c88 <line:11:2, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x139027be0 <col:2> 'int ()' Function 0x139027b28 'gf_bs_skip_bytes' 'int ()'     | |-RecoveryExpr 0x139027c68 <col:19> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x139027c18 <col:23> 'int' 3     |-CallExpr 0x139027e18 <line:12:2, col:18> '<dependent type>' contains-errors     | |-DeclRefExpr 0x139027d98 <col:2> 'int ()' Function 0x139027ce0 'gf_bs_read_u8' 'int ()'     | `-RecoveryExpr 0x139027df8 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x139027ec0 <line:13:2, col:18> '<dependent type>' contains-errors     | |-DeclRefExpr 0x139027e40 <col:2> 'int ()' Function 0x139027ce0 'gf_bs_read_u8' 'int ()'     | `-RecoveryExpr 0x139027ea0 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x139028070 <line:14:2, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x139027fc8 <col:2> 'int ()' Function 0x139027f10 'gf_bs_read_int' 'int ()'     | |-RecoveryExpr 0x139028050 <col:17> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x139028000 <col:21> 'int' 1     |-CallExpr 0x139028148 <line:15:3, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1390280a0 <col:3> 'int ()' Function 0x139027f10 'gf_bs_read_int' 'int ()'     | |-RecoveryExpr 0x139028128 <col:18> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x1390280d8 <col:22> 'int' 1     |-CallExpr 0x139028220 <line:16:2, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x139028178 <col:2> 'int ()' Function 0x139027f10 'gf_bs_read_int' 'int ()'     | |-RecoveryExpr 0x139028200 <col:17> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x1390281b0 <col:21> 'int' 6     `-WhileStmt 0x1390294b8 <line:23:2, line:38:2>       |-RecoveryExpr 0x1390283d0 <line:23:9, col:41> '_Bool' contains-errors       `-CompoundStmt 0x1390294a0 <col:45, line:38:2>         `-IfStmt 0x139029450 <line:30:3, line:36:3> has_else           |-RecoveryExpr 0x139028510 <line:30:7, col:13> '_Bool' contains-errors           |-CompoundStmt 0x139028768 <col:31, line:34:3>           | `-DeclStmt 0x1390285d0 <line:32:4, col:25>           |   `-VarDecl 0x139028548 <col:4, col:10> col:10 used text 'char *'           `-CompoundStmt 0x139029440 <line:34:10, line:36:3> ","20004":"`-FunctionDecl 0x11e9204e8  line:1:12 invalid ia5ncasecmp 'int (const char *, const char *, int)' static   |-ParmVarDecl 0x11e9202d8 <col:24, col:36> col:36 used s1 'const char *'   |-ParmVarDecl 0x11e920358 <col:40, col:52> col:52 used s2 'const char *'   |-ParmVarDecl 0x11e9203f0 <col:56, col:63> col:63 invalid n 'int'   `-CompoundStmt 0x11e93b298 <line:2:1, line:28:1>     |-ForStmt 0x11e93b230 <line:3:5, line:25:5>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-BinaryOperator 0x11e9205e8 <line:3:12, col:16> 'int' contains-errors '>'     | | |-RecoveryExpr 0x11e9205a8 <col:12> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x11e9205c8 <col:16> 'int' 0     | |-BinaryOperator 0x11e9206d0 <col:19, col:32> 'const char *' contains-errors ','     | | |-BinaryOperator 0x11e920678 <col:19, col:26> 'const char *' contains-errors ','     | | | |-UnaryOperator 0x11e920628 <col:19, col:20> '<dependent type>' contains-errors postfix '--' cannot overflow     | | | | `-RecoveryExpr 0x11e920608 <col:19> '<dependent type>' contains-errors lvalue     | | | `-UnaryOperator 0x11e920660 <col:24, col:26> 'const char *' postfix '++'     | | |   `-DeclRefExpr 0x11e920640 <col:24> 'const char *' lvalue ParmVar 0x11e9202d8 's1' 'const char *'     | | `-UnaryOperator 0x11e9206b8 <col:30, col:32> 'const char *' postfix '++'     | |   `-DeclRefExpr 0x11e920698 <col:30> 'const char *' lvalue ParmVar 0x11e920358 's2' 'const char *'     | `-CompoundStmt 0x11e93b218 <col:36, line:25:5>     |   `-IfStmt 0x11e93b1e8 <line:4:9, line:24:9> has_else     |     |-BinaryOperator 0x11e9207f0 <line:4:13, col:21> 'int' '!='     |     | |-ImplicitCastExpr 0x11e9207c0 <col:13, col:14> 'int' <IntegralCast>     |     | | `-ImplicitCastExpr 0x11e920790 <col:13, col:14> 'char' <LValueToRValue>     |     | |   `-UnaryOperator 0x11e920728 <col:13, col:14> 'const char' lvalue prefix '*' cannot overflow     |     | |     `-ImplicitCastExpr 0x11e920710 <col:14> 'const char *' <LValueToRValue>     |     | |       `-DeclRefExpr 0x11e9206f0 <col:14> 'const char *' lvalue ParmVar 0x11e9202d8 's1' 'const char *'     |     | `-ImplicitCastExpr 0x11e9207d8 <col:20, col:21> 'int' <IntegralCast>     |     |   `-ImplicitCastExpr 0x11e9207a8 <col:20, col:21> 'char' <LValueToRValue>     |     |     `-UnaryOperator 0x11e920778 <col:20, col:21> 'const char' lvalue prefix '*' cannot overflow     |     |       `-ImplicitCastExpr 0x11e920760 <col:21> 'const char *' <LValueToRValue>     |     |         `-DeclRefExpr 0x11e920740 <col:21> 'const char *' lvalue ParmVar 0x11e920358 's2' 'const char *'     |     |-CompoundStmt 0x11e93b080 <col:25, line:21:9>     |     | |-DeclStmt 0x11e93aa88 <line:5:13, col:75>     |     | | |-VarDecl 0x11e920828 <col:13, col:48> col:27 used c1 'unsigned char' cinit     |     | | | `-CStyleCastExpr 0x11e920910 <col:32, col:48> 'unsigned char' <IntegralCast>     |     | | |   `-ImplicitCastExpr 0x11e9208f8 <col:47, col:48> 'char' <LValueToRValue> part_of_explicit_cast     |     | | |     `-UnaryOperator 0x11e9208c8 <col:47, col:48> 'const char' lvalue prefix '*' cannot overflow     |     | | |       `-ImplicitCastExpr 0x11e9208b0 <col:48> 'const char *' <LValueToRValue>     |     | | |         `-DeclRefExpr 0x11e920890 <col:48> 'const char *' lvalue ParmVar 0x11e9202d8 's1' 'const char *'     |     | | `-VarDecl 0x11e920950 <col:13, col:73> col:52 used c2 'unsigned char' cinit     |     | |   `-CStyleCastExpr 0x11e93aa48 <col:57, col:73> 'unsigned char' <IntegralCast>     |     | |     `-ImplicitCastExpr 0x11e93aa30 <col:72, col:73> 'char' <LValueToRValue> part_of_explicit_cast     |     | |       `-UnaryOperator 0x11e93aa00 <col:72, col:73> 'const char' lvalue prefix '*' cannot overflow     |     | |         `-ImplicitCastExpr 0x11e9209d8 <col:73> 'const char *' <LValueToRValue>     |     | |           `-DeclRefExpr 0x11e9209b8 <col:73> 'const char *' lvalue ParmVar 0x11e920358 's2' 'const char *'     |     | |-IfStmt 0x11e93ac50 <line:8:13, line:9:23>     |     | | |-BinaryOperator 0x11e93abc0 <line:8:17, col:38> 'int' '&&'     |     | | | |-BinaryOperator 0x11e93ab10 <col:17, col:23> 'int' '>='     |     | | | | |-ImplicitCastExpr 0x11e93aaf8 <col:17> 'int' <IntegralCast>     |     | | | | | `-ImplicitCastExpr 0x11e93aae0 <col:17> 'unsigned char' <LValueToRValue>     |     | | | | |   `-DeclRefExpr 0x11e93aaa0 <col:17> 'unsigned char' lvalue Var 0x11e920828 'c1' 'unsigned char'     |     | | | | `-IntegerLiteral 0x11e93aac0 <col:23> 'int' 65     |     | | | `-BinaryOperator 0x11e93aba0 <col:32, col:38> 'int' '<='     |     | | |   |-ImplicitCastExpr 0x11e93ab88 <col:32> 'int' <IntegralCast>     |     | | |   | `-ImplicitCastExpr 0x11e93ab70 <col:32> 'unsigned char' <LValueToRValue>     |     | | |   |   `-DeclRefExpr 0x11e93ab30 <col:32> 'unsigned char' lvalue Var 0x11e920828 'c1' 'unsigned char'     |     | | |   `-IntegerLiteral 0x11e93ab50 <col:38> 'int' 90     |     | | `-CompoundAssignOperator 0x11e93ac20 <line:9:17, col:23> 'unsigned char' '+=' ComputeLHSTy='int' ComputeResultTy='int'     |     | |   |-DeclRefExpr 0x11e93abe0 <col:17> 'unsigned char' lvalue Var 0x11e920828 'c1' 'unsigned char'     |     | |   `-IntegerLiteral 0x11e93ac00 <col:23> 'int' 32     |     | |-IfStmt 0x11e93ae20 <line:10:13, line:11:23>     |     | | |-BinaryOperator 0x11e93ad90 <line:10:17, col:38> 'int' '&&'     |     | | | |-BinaryOperator 0x11e93ace0 <col:17, col:23> 'int' '>='     |     | | | | |-ImplicitCastExpr 0x11e93acc8 <col:17> 'int' <IntegralCast>     |     | | | | | `-ImplicitCastExpr 0x11e93acb0 <col:17> 'unsigned char' <LValueToRValue>     |     | | | | |   `-DeclRefExpr 0x11e93ac70 <col:17> 'unsigned char' lvalue Var 0x11e920950 'c2' 'unsigned char'     |     | | | | `-IntegerLiteral 0x11e93ac90 <col:23> 'int' 65     |     | | | `-BinaryOperator 0x11e93ad70 <col:32, col:38> 'int' '<='     |     | | |   |-ImplicitCastExpr 0x11e93ad58 <col:32> 'int' <IntegralCast>     |     | | |   | `-ImplicitCastExpr 0x11e93ad40 <col:32> 'unsigned char' <LValueToRValue>     |     | | |   |   `-DeclRefExpr 0x11e93ad00 <col:32> 'unsigned char' lvalue Var 0x11e920950 'c2' 'unsigned char'     |     | | |   `-IntegerLiteral 0x11e93ad20 <col:38> 'int' 90     |     | | `-CompoundAssignOperator 0x11e93adf0 <line:11:17, col:23> 'unsigned char' '+=' ComputeLHSTy='int' ComputeResultTy='int'     |     | |   |-DeclRefExpr 0x11e93adb0 <col:17> 'unsigned char' lvalue Var 0x11e920950 'c2' 'unsigned char'     |     | |   `-IntegerLiteral 0x11e93add0 <col:23> 'int' 32     |     | |-IfStmt 0x11e93af08 <line:13:13, line:14:17>     |     | | |-BinaryOperator 0x11e93aee0 <line:13:17, col:23> 'int' '=='     |     | | | |-ImplicitCastExpr 0x11e93aeb0 <col:17> 'int' <IntegralCast>     |     | | | | `-ImplicitCastExpr 0x11e93ae80 <col:17> 'unsigned char' <LValueToRValue>     |     | | | |   `-DeclRefExpr 0x11e93ae40 <col:17> 'unsigned char' lvalue Var 0x11e920828 'c1' 'unsigned char'     |     | | | `-ImplicitCastExpr 0x11e93aec8 <col:23> 'int' <IntegralCast>     |     | | |   `-ImplicitCastExpr 0x11e93ae98 <col:23> 'unsigned char' <LValueToRValue>     |     | | |     `-DeclRefExpr 0x11e93ae60 <col:23> 'unsigned char' lvalue Var 0x11e920950 'c2' 'unsigned char'     |     | | `-ContinueStmt 0x11e93af00 <line:14:17>     |     | |-IfStmt 0x11e93b030 <line:16:13, line:17:25>     |     | | |-BinaryOperator 0x11e93afc8 <line:16:17, col:22> 'int' '<'     |     | | | |-ImplicitCastExpr 0x11e93af98 <col:17> 'int' <IntegralCast>     |     | | | | `-ImplicitCastExpr 0x11e93af68 <col:17> 'unsigned char' <LValueToRValue>     |     | | | |   `-DeclRefExpr 0x11e93af28 <col:17> 'unsigned char' lvalue Var 0x11e920828 'c1' 'unsigned char'     |     | | | `-ImplicitCastExpr 0x11e93afb0 <col:22> 'int' <IntegralCast>     |     | | |   `-ImplicitCastExpr 0x11e93af80 <col:22> 'unsigned char' <LValueToRValue>     |     | | |     `-DeclRefExpr 0x11e93af48 <col:22> 'unsigned char' lvalue Var 0x11e920950 'c2' 'unsigned char'     |     | | `-ReturnStmt 0x11e93b020 <line:17:17, col:25>     |     | |   `-UnaryOperator 0x11e93b008 <col:24, col:25> 'int' prefix '-'     |     | |     `-IntegerLiteral 0x11e93afe8 <col:25> 'int' 1     |     | `-ReturnStmt 0x11e93b070 <line:20:13, col:20>     |     |   `-IntegerLiteral 0x11e93b050 <col:20> 'int' 1     |     `-IfStmt 0x11e93b1c8 <line:21:16, line:24:9>     |       |-BinaryOperator 0x11e93b160 <line:21:20, col:27> 'int' '=='     |       | |-ImplicitCastExpr 0x11e93b148 <col:20, col:21> 'int' <IntegralCast>     |       | | `-ImplicitCastExpr 0x11e93b130 <col:20, col:21> 'char' <LValueToRValue>     |       | |   `-UnaryOperator 0x11e93b0f8 <col:20, col:21> 'const char' lvalue prefix '*' cannot overflow     |       | |     `-ImplicitCastExpr 0x11e93b0e0 <col:21> 'const char *' <LValueToRValue>     |       | |       `-DeclRefExpr 0x11e93b0c0 <col:21> 'const char *' lvalue ParmVar 0x11e9202d8 's1' 'const char *'     |       | `-IntegerLiteral 0x11e93b110 <col:27> 'int' 0     |       `-CompoundStmt 0x11e93b1b0 <col:30, line:24:9>     |         `-ReturnStmt 0x11e93b1a0 <line:23:13, col:20>     |           `-IntegerLiteral 0x11e93b180 <col:20> 'int' 0     `-ReturnStmt 0x11e93b288 <line:27:5, col:12>       `-IntegerLiteral 0x11e93b268 <col:12> 'int' 0 ","20128":"`-FunctionDecl 0x127031c58  line:1:5 invalid ASN1_template_d2i 'int (int **, const unsigned char **, long, const int *)'   |-ParmVarDecl 0x127031960 <col:23, col:36> col:36 invalid pval 'int **'   |-ParmVarDecl 0x127031a50 <line:2:23, col:45> col:45 used in 'const unsigned char **'   |-ParmVarDecl 0x127031ad0 <col:49, col:54> col:54 used len 'long'   |-ParmVarDecl 0x127031b50 <line:3:23, col:44> col:44 invalid tt 'const int *'   `-CompoundStmt 0x12704c290 <line:4:1, line:8:1>     |-CallExpr 0x127031f30 <line:6:5, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x127031e80 <col:5> 'int ()' Function 0x127031dc8 'asn1_tlc_clear_nc' 'int ()'     | `-UnaryOperator 0x127031f18 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x127031ef8 <col:24> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12704c280 <line:7:5, col:57>       `-CallExpr 0x12704c230 <col:12, col:57> '<dependent type>' contains-errors         |-DeclRefExpr 0x12704c0b8 <col:12> 'int ()' Function 0x12704c000 'asn1_template_ex_d2i' 'int ()'         |-RecoveryExpr 0x12704c0d8 <col:33> '<dependent type>' contains-errors lvalue         |-DeclRefExpr 0x12704c0f8 <col:39> 'const unsigned char **' lvalue ParmVar 0x127031a50 'in' 'const unsigned char **'         |-DeclRefExpr 0x12704c118 <col:43> 'long' lvalue ParmVar 0x127031ad0 'len' 'long'         |-RecoveryExpr 0x12704c138 <col:48> '<dependent type>' contains-errors lvalue         |-IntegerLiteral 0x12704c158 <col:52> 'int' 0         `-UnaryOperator 0x12704c218 <col:55, col:56> '<dependent type>' contains-errors prefix '&' cannot overflow           `-RecoveryExpr 0x12704c1f8 <col:56> '<dependent type>' contains-errors lvalue ","20013":"`-FunctionDecl 0x154140a00  line:1:19 stack_guard_page_end 'int (struct vm_area_struct *, unsigned long)' static inline   |-ParmVarDecl 0x154128648 <col:40, col:63> col:63 used vma 'struct vm_area_struct *'   |-ParmVarDecl 0x1541286c8 <line:2:9, col:23> col:23 used addr 'unsigned long'   `-CompoundStmt 0x154140e68 <line:3:1, line:7:1> ","19113":"`-FunctionDecl 0x120142128  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x120142228 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x120142290 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x1201422f8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1201421d0 <<invalid sloc>> Implicit 882 ","20145":"`-FunctionDecl 0x14e827f38  col:4 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x14e828038 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x14e827fe0 <<invalid sloc>> Implicit 873 ","19996":"`-FunctionDecl 0x13a145088  line:1:12 invalid vmci_transport_dgram_dequeue 'int (struct kiocb *, struct vsock_sock *, struct msghdr *, int, int)' static   |-ParmVarDecl 0x13a128648 <col:41, col:55> col:55 kiocb 'struct kiocb *'   |-ParmVarDecl 0x13a144c28 <line:2:6, col:25> col:25 used vsk 'struct vsock_sock *'   |-ParmVarDecl 0x13a144df8 <line:3:6, col:21> col:21 used msg 'struct msghdr *'   |-ParmVarDecl 0x13a144e90 <col:26, col:33> col:33 invalid len 'int'   |-ParmVarDecl 0x13a144f10 <line:4:6, col:10> col:10 used flags 'int'   `-CompoundStmt 0x13b80a4b0 <line:5:1, line:64:1>     |-DeclStmt 0x13a1451d8 <line:6:2, col:9>     | `-VarDecl 0x13a145170 <col:2, col:6> col:6 used err 'int'     |-DeclStmt 0x13a145270 <line:7:2, col:13>     | `-VarDecl 0x13a145208 <col:2, col:6> col:6 used noblock 'int'     |-DeclStmt 0x13a145478 <line:8:2, col:26>     | |-RecordDecl 0x13a145288 <col:2, col:9> col:9 struct vmci_datagram     | `-VarDecl 0x13a1453f8 <col:2, col:24> col:24 used dg 'struct vmci_datagram *'     |-UnaryExprOrTypeTraitExpr 0x13a1454e8 <line:9:2, col:9> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x13a1454c8 <col:9> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x13a1456f8 <line:10:2, col:21>     | |-RecordDecl 0x13a145508 <col:2, col:9> col:9 struct sk_buff     | `-VarDecl 0x13a145678 <col:2, col:18> col:18 used skb 'struct sk_buff *'     |-BinaryOperator 0x13a1457e8 <line:12:2, col:20> 'int' contains-errors '='     | |-DeclRefExpr 0x13a145710 <col:2> 'int' lvalue Var 0x13a145208 'noblock' 'int'     | `-BinaryOperator 0x13a1457c8 <col:12, col:20> '<dependent type>' contains-errors '&'     |   |-DeclRefExpr 0x13a145730 <col:12> 'int' lvalue ParmVar 0x13a144f10 'flags' 'int'     |   `-RecoveryExpr 0x13a1457a8 <col:20> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13a145a20 <line:14:2, line:15:11>     | |-BinaryOperator 0x13a145958 <line:14:6, col:33> 'int' contains-errors '||'     | | |-BinaryOperator 0x13a1458f8 <col:6, col:14> '<dependent type>' contains-errors '&'     | | | |-DeclRefExpr 0x13a145808 <col:6> 'int' lvalue ParmVar 0x13a144f10 'flags' 'int'     | | | `-RecoveryExpr 0x13a1458d8 <col:14> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x13a145938 <col:25, col:33> '<dependent type>' contains-errors '&'     | |   |-DeclRefExpr 0x13a145860 <col:25> 'int' lvalue ParmVar 0x13a144f10 'flags' 'int'     | |   `-RecoveryExpr 0x13a145918 <col:33> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13a145a10 <line:15:3, col:11>     |   `-UnaryOperator 0x13a1459f8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x13a1459e0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13a1459c0 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13a145ac0 <line:17:2, col:21> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13a145a78 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13a145a40 <col:2> 'struct msghdr *' lvalue ParmVar 0x13a144df8 'msg' 'struct msghdr *'     | `-IntegerLiteral 0x13a145aa0 <col:21> 'int' 0     |-BinaryOperator 0x13a145b20 <line:20:2, col:8> 'int' '='     | |-DeclRefExpr 0x13a145ae0 <col:2> 'int' lvalue Var 0x13a145170 'err' 'int'     | `-IntegerLiteral 0x13a145b00 <col:8> 'int' 0     |-BinaryOperator 0x13a80a468 <line:21:2, col:56> 'struct sk_buff *' contains-errors '='     | |-DeclRefExpr 0x13a145b40 <col:2> 'struct sk_buff *' lvalue Var 0x13a145678 'skb' 'struct sk_buff *'     | `-CallExpr 0x13a80a428 <col:8, col:56> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13a80a2e0 <col:8> 'int ()' Function 0x13a80a228 'skb_recv_datagram' 'int ()'     |   |-UnaryOperator 0x13a80a360 <col:26, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x13a80a338 <col:27, col:32> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x13a80a300 <col:27> 'struct vsock_sock *' lvalue ParmVar 0x13a144c28 'vsk' 'struct vsock_sock *'     |   |-DeclRefExpr 0x13a80a378 <col:36> 'int' lvalue ParmVar 0x13a144f10 'flags' 'int'     |   |-DeclRefExpr 0x13a80a398 <col:43> 'int' lvalue Var 0x13a145208 'noblock' 'int'     |   `-UnaryOperator 0x13a80a410 <col:52, col:53> 'int *' prefix '&' cannot overflow     |     `-DeclRefExpr 0x13a80a3b8 <col:53> 'int' lvalue Var 0x13a145170 'err' 'int'     |-IfStmt 0x13a80a508 <line:22:2, line:23:10>     | |-ImplicitCastExpr 0x13a80a4a8 <line:22:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x13a80a488 <col:6> 'int' lvalue Var 0x13a145170 'err' 'int'     | `-ReturnStmt 0x13a80a4f8 <line:23:3, col:10>     |   `-ImplicitCastExpr 0x13a80a4e0 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x13a80a4c0 <col:10> 'int' lvalue Var 0x13a145170 'err' 'int'     |-IfStmt 0x13a80a620 <line:25:2, line:26:11>     | |-UnaryOperator 0x13a80a560 <line:25:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13a80a548 <col:7> 'struct sk_buff *' <LValueToRValue>     | |   `-DeclRefExpr 0x13a80a528 <col:7> 'struct sk_buff *' lvalue Var 0x13a145678 'skb' 'struct sk_buff *'     | `-ReturnStmt 0x13a80a610 <line:26:3, col:11>     |   `-UnaryOperator 0x13a80a5f8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x13a80a5e0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13a80a5c0 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13a80a770 <line:28:2, col:36> 'struct vmci_datagram *' contains-errors '='     | |-DeclRefExpr 0x13a80a640 <col:2> 'struct vmci_datagram *' lvalue Var 0x13a1453f8 'dg' 'struct vmci_datagram *'     | `-CStyleCastExpr 0x13a80a748 <col:7, col:36> 'struct vmci_datagram *' contains-errors <Dependent>     |   `-RecoveryExpr 0x13a80a698 <col:31, col:36> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13a80a660 <col:31> 'struct sk_buff *' lvalue Var 0x13a145678 'skb' 'struct sk_buff *'     |-IfStmt 0x13a80a848 <line:29:2, line:31:8>     | |-UnaryOperator 0x13a80a7c8 <line:29:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13a80a7b0 <col:7> 'struct vmci_datagram *' <LValueToRValue>     | |   `-DeclRefExpr 0x13a80a790 <col:7> 'struct vmci_datagram *' lvalue Var 0x13a1453f8 'dg' 'struct vmci_datagram *'     | `-GotoStmt 0x13a80a830 <line:31:3, col:8> 'out' 0x13a80a7e0     |-IfStmt 0x13a80ab00 <line:35:2, line:38:2>     | |-RecoveryExpr 0x13a80a9b0 <line:35:6, col:42> '_Bool' contains-errors     | `-CompoundStmt 0x13a80aae0 <col:45, line:38:2>     |   |-BinaryOperator 0x13a80aaa8 <line:36:3, col:10> 'int' contains-errors '='     |   | |-DeclRefExpr 0x13a80a9d0 <col:3> 'int' lvalue Var 0x13a145170 'err' 'int'     |   | `-UnaryOperator 0x13a80aa90 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x13a80aa78 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x13a80aa58 <col:10> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x13a80aac8 <line:37:3, col:8> 'out' 0x13a80a7e0     |-IfStmt 0x13a80ac48 <line:40:2, line:43:2>     | |-BinaryOperator 0x13a80ab98 <line:40:6, col:20> 'int' contains-errors '>'     | | |-RecoveryExpr 0x13a80ab78 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13a80ab38 <col:20> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13a80ac38 <col:25, line:43:2>     |-IfStmt 0x13a80aec8 <line:48:2, line:49:8>     | |-ImplicitCastExpr 0x13a80ae98 <line:48:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x13a80ae78 <col:6> 'int' lvalue Var 0x13a145170 'err' 'int'     | `-GotoStmt 0x13a80aeb0 <line:49:3, col:8> 'out' 0x13a80a7e0     |-IfStmt 0x13b80a240 <line:51:2, line:58:2>     | |-RecoveryExpr 0x13a80af20 <line:51:6, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13a80aee8 <col:6> 'struct msghdr *' lvalue ParmVar 0x13a144df8 'msg' 'struct msghdr *'     | `-CompoundStmt 0x13b80a218 <col:21, line:58:2>     |   |-DeclStmt 0x13a80b138 <line:52:3, col:30>     |   | |-RecordDecl 0x13a80af48 <col:3, col:10> col:10 struct sockaddr_vm     |   | `-VarDecl 0x13a80b0b8 <col:3, col:23> col:23 used vm_addr 'struct sockaddr_vm *'     |   |-BinaryOperator 0x13b809e80 <line:55:3, col:40> 'struct sockaddr_vm *' contains-errors '='     |   | |-DeclRefExpr 0x13a80b150 <col:3> 'struct sockaddr_vm *' lvalue Var 0x13a80b0b8 'vm_addr' 'struct sockaddr_vm *'     |   | `-CStyleCastExpr 0x13b809e58 <col:13, col:40> 'struct sockaddr_vm *' contains-errors <Dependent>     |   |   `-RecoveryExpr 0x13a80b1a8 <col:35, col:40> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x13a80b170 <col:35> 'struct msghdr *' lvalue ParmVar 0x13a144df8 'msg' 'struct msghdr *'     |   `-CallExpr 0x13b80a110 <line:56:3, col:61> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x13b809f80 <col:3> 'int ()' Function 0x13b809ec8 'vsock_addr_init' 'int ()'     |     |-DeclRefExpr 0x13b809fa0 <col:19> 'struct sockaddr_vm *' lvalue Var 0x13a80b0b8 'vm_addr' 'struct sockaddr_vm *'     |     |-CXXDependentScopeMemberExpr 0x13b80a020 <col:28, col:36> '<dependent type>' contains-errors lvalue .context     |     | `-RecoveryExpr 0x13b809ff8 <col:28, col:32> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x13b809fc0 <col:28> 'struct vmci_datagram *' lvalue Var 0x13a1453f8 'dg' 'struct vmci_datagram *'     |     `-CXXDependentScopeMemberExpr 0x13b80a0c8 <col:45, col:53> '<dependent type>' contains-errors lvalue .resource     |       `-RecoveryExpr 0x13b80a0a0 <col:45, col:49> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x13b80a068 <col:45> 'struct vmci_datagram *' lvalue Var 0x13a1453f8 'dg' 'struct vmci_datagram *'     |-LabelStmt 0x13b80a448 <line:61:1, line:62:33> 'out'     | `-CallExpr 0x13b80a418 <col:2, col:33> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13b80a360 <col:2> 'int ()' Function 0x13b80a2a8 'skb_free_datagram' 'int ()'     |   |-UnaryOperator 0x13b80a3e0 <col:20, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x13b80a3b8 <col:21, col:26> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x13b80a380 <col:21> 'struct vsock_sock *' lvalue ParmVar 0x13a144c28 'vsk' 'struct vsock_sock *'     |   `-DeclRefExpr 0x13b80a3f8 <col:30> 'struct sk_buff *' lvalue Var 0x13a145678 'skb' 'struct sk_buff *'     `-ReturnStmt 0x13b80a4a0 <line:63:2, col:9>       `-ImplicitCastExpr 0x13b80a488 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x13b80a468 <col:9> 'int' lvalue Var 0x13a145170 'err' 'int' ","20104":"`-FunctionDecl 0x12d128288  line:1:8 invalid vvnc_box_read 'int (int *, int *)'   |-ParmVarDecl 0x12d128128 <col:22, col:30> col:30 invalid s 'int *'   |-ParmVarDecl 0x12d1281a8 <col:33, col:47> col:47 invalid bs 'int *'   `-CompoundStmt 0x12d141830 <line:2:1, line:9:1>     |-CallExpr 0x12d128578 <line:5:2, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d1284d0 <col:2> 'int ()' Function 0x12d128418 'ISOM_DECREASE_SIZE' 'int ()'     | |-RecoveryExpr 0x12d128558 <col:21> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x12d128508 <col:26> 'int' 1     |-CallExpr 0x12d1286e8 <line:6:2, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d128688 <col:2> 'int ()' Function 0x12d1285d0 'gf_bs_read_int' 'int ()'     | |-RecoveryExpr 0x12d1286a8 <col:17> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x12d1286c8 <col:21> 'int' 6     `-ReturnStmt 0x12d141820 <line:8:2, col:9>       `-RecoveryExpr 0x12d141800 <col:9> '<dependent type>' contains-errors lvalue ","19764":"`-FunctionDecl 0x148142918  col:29 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x148142a18 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x1481429c0 <<invalid sloc>> Implicit 902 ","19902":"`-FunctionDecl 0x140128318  line:1:12 invalid mov_read_pasp 'int (int *, int *, int)' static   |-ParmVarDecl 0x140128128 <col:26, col:38> col:38 invalid c 'int *'   |-ParmVarDecl 0x1401281a8 <col:41, col:54> col:54 invalid pb 'int *'   |-ParmVarDecl 0x140128228 <col:58, col:66> col:66 invalid atom 'int'   `-CompoundStmt 0x140143808 <line:2:1, line:22:1>     |-DeclStmt 0x140128618 <line:3:5, col:34>     | `-VarDecl 0x1401283f0 <col:5, col:33> col:15 used num 'const int' cinit     |   `-CallExpr 0x1401285f0 <col:21, col:33> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1401285b0 <col:21> 'int ()' Function 0x1401284f8 'avio_rb32' 'int ()'     |     `-RecoveryExpr 0x1401285d0 <col:31> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x140128718 <line:4:5, col:34>     | `-VarDecl 0x140128648 <col:5, col:33> col:15 used den 'const int' cinit     |   `-CallExpr 0x1401286f0 <col:21, col:33> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1401286b0 <col:21> 'int ()' Function 0x1401284f8 'avio_rb32' 'int ()'     |     `-RecoveryExpr 0x1401286d0 <col:31> '<dependent type>' contains-errors lvalue     |-IfStmt 0x140141870 <line:7:5, line:8:16>     | |-BinaryOperator 0x140141820 <line:7:9, col:29> 'int' contains-errors '<'     | | |-CXXDependentScopeMemberExpr 0x1401287b0 <col:9, col:16> '<dependent type>' contains-errors lvalue ->nb_streams     | | | `-CXXDependentScopeMemberExpr 0x140128768 <col:9, col:12> '<dependent type>' contains-errors lvalue ->fc     | | |   `-RecoveryExpr 0x140128748 <col:9> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x140141800 <col:29> 'int' 1     | `-ReturnStmt 0x140141860 <line:8:9, col:16>     |   `-IntegerLiteral 0x140141840 <col:16> 'int' 0     |-IfStmt 0x1401437a8 <line:11:5, line:20:5> has_else     | |-RecoveryExpr 0x140141e08 <line:11:9, line:12:82> '_Bool' contains-errors     | |-CompoundStmt 0x1401423d0 <col:85, line:17:5>     | | `-CallExpr 0x140142378 <line:13:9, line:16:24> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x140141f08 <line:13:9> 'int ()' Function 0x140141e50 'av_log' 'int ()'     | |   |-CXXDependentScopeMemberExpr 0x140141f48 <col:16, col:19> '<dependent type>' contains-errors lvalue ->fc     | |   | `-RecoveryExpr 0x140141f28 <col:16> '<dependent type>' contains-errors lvalue     | |   |-RecoveryExpr 0x1401421f8 <col:23> '<dependent type>' contains-errors lvalue     | |   |-StringLiteral 0x140141ff0 <line:14:16> 'char[4]' lvalue \"STR\"     | |   |-CXXDependentScopeMemberExpr 0x140142280 <line:15:16, col:40> '<dependent type>' contains-errors lvalue .num     | |   | `-CXXDependentScopeMemberExpr 0x140142238 <col:16, col:20> '<dependent type>' contains-errors lvalue ->sample_aspect_ratio     | |   |   `-RecoveryExpr 0x140142218 <col:16> '<dependent type>' contains-errors lvalue     | |   |-CXXDependentScopeMemberExpr 0x140142330 <col:45, col:69> '<dependent type>' contains-errors lvalue .den     | |   | `-CXXDependentScopeMemberExpr 0x1401422e8 <col:45, col:49> '<dependent type>' contains-errors lvalue ->sample_aspect_ratio     | |   |   `-RecoveryExpr 0x1401422c8 <col:45> '<dependent type>' contains-errors lvalue     | |   |-DeclRefExpr 0x140142160 <line:16:16> 'const int' contains-errors lvalue Var 0x1401283f0 'num' 'const int'     | |   `-DeclRefExpr 0x140142180 <col:21> 'const int' contains-errors lvalue Var 0x140128648 'den' 'const int'     | `-IfStmt 0x140143788 <line:17:12, line:20:5>     |   |-BinaryOperator 0x140142440 <line:17:16, col:23> 'int' contains-errors '!='     |   | |-ImplicitCastExpr 0x140142428 <col:16> 'int' contains-errors <LValueToRValue>     |   | | `-DeclRefExpr 0x1401423e8 <col:16> 'const int' contains-errors lvalue Var 0x140128648 'den' 'const int'     |   | `-IntegerLiteral 0x140142408 <col:23> 'int' 0     |   `-CompoundStmt 0x140143770 <col:26, line:20:5>     |     `-CallExpr 0x140143728 <line:18:9, line:19:34> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x140142540 <line:18:9> 'int ()' Function 0x140142488 'av_reduce' 'int ()'     |       |-UnaryOperator 0x140143648 <col:19, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow     |       | `-CXXDependentScopeMemberExpr 0x140143600 <col:20, col:44> '<dependent type>' contains-errors lvalue .num     |       |   `-CXXDependentScopeMemberExpr 0x1401427a8 <col:20, col:24> '<dependent type>' contains-errors lvalue ->sample_aspect_ratio     |       |     `-RecoveryExpr 0x140142788 <col:20> '<dependent type>' contains-errors lvalue     |       |-UnaryOperator 0x140143710 <col:49, col:74> '<dependent type>' contains-errors prefix '&' cannot overflow     |       | `-CXXDependentScopeMemberExpr 0x1401436c8 <col:50, col:74> '<dependent type>' contains-errors lvalue .den     |       |   `-CXXDependentScopeMemberExpr 0x140143680 <col:50, col:54> '<dependent type>' contains-errors lvalue ->sample_aspect_ratio     |       |     `-RecoveryExpr 0x140143660 <col:50> '<dependent type>' contains-errors lvalue     |       |-DeclRefExpr 0x1401426e0 <line:19:19> 'const int' contains-errors lvalue Var 0x1401283f0 'num' 'const int'     |       |-DeclRefExpr 0x140142700 <col:24> 'const int' contains-errors lvalue Var 0x140128648 'den' 'const int'     |       `-IntegerLiteral 0x140142720 <col:29> 'int' 32767     `-ReturnStmt 0x1401437f8 <line:21:5, col:12>       `-IntegerLiteral 0x1401437d8 <col:12> 'int' 0 ","20210":"`-FunctionDecl 0x12f80e358  line:1:5 kvm_get_apic_interrupt 'int (struct kvm_vcpu *)'   |-ParmVarDecl 0x12f80e248 <col:28, col:45> col:45 used vcpu 'struct kvm_vcpu *'   `-CompoundStmt 0x12f829698 <line:2:1, line:23:1>     |-DeclStmt 0x12f8268c8 <line:3:2, col:43>     | `-VarDecl 0x12f826668 <col:2, col:42> col:6 used vector 'int' cinit     |   `-CallExpr 0x12f826888 <col:15, col:42> 'int'     |     |-ImplicitCastExpr 0x12f826870 <col:15> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x12f826800 <col:15> 'int ()' Function 0x12f826748 'kvm_apic_has_interrupt' 'int ()'     |     `-ImplicitCastExpr 0x12f8268b0 <col:38> 'struct kvm_vcpu *' <LValueToRValue>     |       `-DeclRefExpr 0x12f826820 <col:38> 'struct kvm_vcpu *' lvalue ParmVar 0x12f80e248 'vcpu' 'struct kvm_vcpu *'     |-DeclStmt 0x12f826b70 <line:4:2, col:42>     | |-RecordDecl 0x12f8268e0 <col:2, col:9> col:9 struct kvm_lapic     | `-VarDecl 0x12f826a48 <col:2, col:38> col:20 used apic 'struct kvm_lapic *' cinit     |   `-CXXDependentScopeMemberExpr 0x12f826b10 <col:27, col:38> '<dependent type>' contains-errors lvalue .apic     |     `-RecoveryExpr 0x12f826ae8 <col:27, col:33> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x12f826ab0 <col:27> 'struct kvm_vcpu *' lvalue ParmVar 0x12f80e248 'vcpu' 'struct kvm_vcpu *'     |-IfStmt 0x12f826c60 <line:7:2, line:8:11>     | |-BinaryOperator 0x12f826bf8 <line:7:6, col:17> 'int' '=='     | | |-ImplicitCastExpr 0x12f826be0 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x12f826b88 <col:6> 'int' lvalue Var 0x12f826668 'vector' 'int'     | | `-UnaryOperator 0x12f826bc8 <col:16, col:17> 'int' prefix '-'     | |   `-IntegerLiteral 0x12f826ba8 <col:17> 'int' 1     | `-ReturnStmt 0x12f826c50 <line:8:3, col:11>     |   `-UnaryOperator 0x12f826c38 <col:10, col:11> 'int' prefix '-'     |     `-IntegerLiteral 0x12f826c18 <col:11> 'int' 1     |-CallExpr 0x12f826dd8 <line:12:2, col:29> 'int' contains-errors     | |-ImplicitCastExpr 0x12f826dc0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12f826d60 <col:2> 'int ()' Function 0x12f826ca8 'apic_clear_irr' 'int ()'     | |-ImplicitCastExpr 0x12f826e08 <col:17> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x12f826d80 <col:17> 'int' lvalue Var 0x12f826668 'vector' 'int'     | `-ImplicitCastExpr 0x12f826e20 <col:25> 'struct kvm_lapic *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x12f826da0 <col:25> 'struct kvm_lapic *' contains-errors lvalue Var 0x12f826a48 'apic' 'struct kvm_lapic *'     |-IfStmt 0x12f829620 <line:13:2, line:20:2> has_else     | |-BinaryOperator 0x12f8272a0 <line:13:6, col:77> 'int' contains-errors '&&'     | | |-CallExpr 0x12f826f70 <col:6, col:21> 'int'     | | | |-ImplicitCastExpr 0x12f826f58 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x12f826f18 <col:6> 'int ()' Function 0x12f826e60 'to_hv_vcpu' 'int ()'     | | | `-ImplicitCastExpr 0x12f826f98 <col:17> 'struct kvm_vcpu *' <LValueToRValue>     | | |   `-DeclRefExpr 0x12f826f38 <col:17> 'struct kvm_vcpu *' lvalue ParmVar 0x12f80e248 'vcpu' 'struct kvm_vcpu *'     | | `-CallExpr 0x12f827270 <col:26, col:77> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12f827090 <col:26> 'int ()' Function 0x12f826fd8 'test_bit' 'int ()'     | |   |-DeclRefExpr 0x12f8270b0 <col:35> 'int' lvalue Var 0x12f826668 'vector' 'int'     | |   `-RecoveryExpr 0x12f827248 <col:43, col:62> '<dependent type>' contains-errors lvalue     | |     `-CallExpr 0x12f827208 <col:43, col:59> 'int'     | |       |-ImplicitCastExpr 0x12f8271f0 <col:43> 'int (*)()' <FunctionToPointerDecay>     | |       | `-DeclRefExpr 0x12f8271b0 <col:43> 'int ()' Function 0x12f8270f8 'to_hv_synic' 'int ()'     | |       `-ImplicitCastExpr 0x12f827230 <col:55> 'struct kvm_vcpu *' <LValueToRValue>     | |         `-DeclRefExpr 0x12f8271d0 <col:55> 'struct kvm_vcpu *' lvalue ParmVar 0x12f80e248 'vcpu' 'struct kvm_vcpu *'     | |-CompoundStmt 0x12f827438 <col:80, line:16:2>     | | `-CallExpr 0x12f8273f8 <line:15:3, col:23> 'int' contains-errors     | |   |-ImplicitCastExpr 0x12f8273e0 <col:3> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x12f8273a0 <col:3> 'int ()' Function 0x12f8272e8 'apic_update_ppr' 'int ()'     | |   `-ImplicitCastExpr 0x12f827420 <col:19> 'struct kvm_lapic *' contains-errors <LValueToRValue>     | |     `-DeclRefExpr 0x12f8273c0 <col:19> 'struct kvm_lapic *' contains-errors lvalue Var 0x12f826a48 'apic' 'struct kvm_lapic *'     | `-CompoundStmt 0x12f829600 <line:16:9, line:20:2>     |   |-CallExpr 0x12f8275a8 <line:18:3, col:28> 'int' contains-errors     |   | |-ImplicitCastExpr 0x12f827590 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x12f827530 <col:3> 'int ()' Function 0x12f827478 'apic_set_isr' 'int ()'     |   | |-ImplicitCastExpr 0x12f8275d8 <col:16> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x12f827550 <col:16> 'int' lvalue Var 0x12f826668 'vector' 'int'     |   | `-ImplicitCastExpr 0x12f829400 <col:24> 'struct kvm_lapic *' contains-errors <LValueToRValue>     |   |   `-DeclRefExpr 0x12f827570 <col:24> 'struct kvm_lapic *' contains-errors lvalue Var 0x12f826a48 'apic' 'struct kvm_lapic *'     |   `-CallExpr 0x12f8295d0 <line:19:3, col:31> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12f8294f8 <col:3> 'int ()' Function 0x12f829440 '__apic_update_ppr' 'int ()'     |     |-DeclRefExpr 0x12f829518 <col:21> 'struct kvm_lapic *' contains-errors lvalue Var 0x12f826a48 'apic' 'struct kvm_lapic *'     |     `-UnaryOperator 0x12f8295b8 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x12f829598 <col:28> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12f829688 <line:22:2, col:9>       `-ImplicitCastExpr 0x12f829670 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x12f829650 <col:9> 'int' lvalue Var 0x12f826668 'vector' 'int' ","19727":"`-FunctionDecl 0x141128348  line:1:11 invalid r_socket_read_block 'int (int *, unsigned char *, int)'   |-ParmVarDecl 0x141128128 <col:31, col:40> col:40 invalid s 'int *'   |-ParmVarDecl 0x1411281d8 <col:43, col:58> col:58 buf 'unsigned char *'   |-ParmVarDecl 0x141128258 <col:63, col:67> col:67 len 'int'   `-CompoundStmt 0x141128450 <col:72, line:3:1>     `-ReturnStmt 0x141128440 <line:2:2, col:10>       `-UnaryOperator 0x141128428 <col:9, col:10> 'int' prefix '-'         `-IntegerLiteral 0x141128408 <col:10> 'int' 1 ","19807":"`-FunctionDecl 0x12803af98  line:1:1 mono_gc_finalize_threadpool_threads 'int (void)'   `-CompoundStmt 0x12803b5b0 <line:2:1, line:14:1>     `-WhileStmt 0x12803b590 <line:3:2, line:13:2>       |-RecoveryExpr 0x12803b0b8 <line:3:9> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x12803b578 <col:30, line:13:2>         `-CallExpr 0x12803b408 <line:10:3, col:37> '<dependent type>' contains-errors           |-DeclRefExpr 0x12803b348 <col:3> 'int ()' Function 0x12803b290 'mono_gc_run_finalize' 'int ()'           |-RecoveryExpr 0x12803b3c8 <col:25> '<dependent type>' contains-errors lvalue           `-RecoveryExpr 0x12803b3e8 <col:33> '<dependent type>' contains-errors lvalue ","19117":"`-FunctionDecl 0x1340f37c0  col:2 implicit used strcpy 'char *(char *, const char *)' extern   |-ParmVarDecl 0x1340f38c0 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x1340f3928 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x1340f3868 <<invalid sloc>> Implicit 885 ","19430":"`-FunctionDecl 0x12800ddf8  line:1:1 invalid fr_window_get_password 'int (int *)'   |-ParmVarDecl 0x12800dd28 <col:25, col:35> col:35 invalid window 'int *'   `-CompoundStmt 0x12800e210 <line:2:1, line:6:1>     |-CallExpr 0x12800e120 <line:3:2, col:44> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12800e000 <col:2> 'int ()' Function 0x12800df48 'g_return_val_if_fail' 'int ()'     | |-BinaryOperator 0x12800e0e0 <col:24, col:34> 'int' contains-errors '!='     | | |-RecoveryExpr 0x12800e020 <col:24> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12800e0c0 <col:34> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x12800e100 <col:40> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12800e200 <line:5:2, col:23>       `-CXXDependentScopeMemberExpr 0x12800e1b8 <col:9, col:23> '<dependent type>' contains-errors lvalue ->password         `-CXXDependentScopeMemberExpr 0x12800e170 <col:9, col:17> '<dependent type>' contains-errors lvalue ->priv           `-RecoveryExpr 0x12800e150 <col:9> '<dependent type>' contains-errors lvalue ","19352":"`-FunctionDecl 0x14d9283a8  line:1:1 invalid tiffscaled_spec_op 'int (int *, int, void *, int)'   |-ParmVarDecl 0x14d928128 <col:20, col:31> col:31 invalid dev_ 'int *'   |-ParmVarDecl 0x14d9281a8 <col:37, col:41> col:41 used op 'int'   |-ParmVarDecl 0x14d928228 <col:45, col:51> col:51 used data 'void *'   |-ParmVarDecl 0x14d9282a8 <col:57, col:61> col:61 used datasize 'int'   `-CompoundStmt 0x14d9287d0 <line:2:1, line:7:1>     |-IfStmt 0x14d928568 <line:3:5, line:5:5>     | |-BinaryOperator 0x14d9284e8 <line:3:9, col:15> 'int' contains-errors '=='     | | |-DeclRefExpr 0x14d928470 <col:9> 'int' lvalue ParmVar 0x14d9281a8 'op' 'int'     | | `-RecoveryExpr 0x14d9284c8 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14d928550 <col:45, line:5:5>     |   `-ReturnStmt 0x14d928540 <line:4:9, col:16>     |     `-RecoveryExpr 0x14d928520 <col:16> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14d9287c0 <line:6:5, col:57>       `-CallExpr 0x14d928780 <col:12, col:57> '<dependent type>' contains-errors         |-DeclRefExpr 0x14d9286e0 <col:12> 'int ()' Function 0x14d928628 'gdev_prn_dev_spec_op' 'int ()'         |-RecoveryExpr 0x14d928700 <col:33> '<dependent type>' contains-errors lvalue         |-DeclRefExpr 0x14d928720 <col:39> 'int' lvalue ParmVar 0x14d9281a8 'op' 'int'         |-DeclRefExpr 0x14d928740 <col:43> 'void *' lvalue ParmVar 0x14d928228 'data' 'void *'         `-DeclRefExpr 0x14d928760 <col:49> 'int' lvalue ParmVar 0x14d9282a8 'datasize' 'int' ","20148":"`-FunctionDecl 0x132826e58  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x132826f58 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x132826fc0 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x132827028 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x132826f00 <<invalid sloc>> Implicit 900 ","19268":"`-FunctionDecl 0x13280dda0  line:1:6 menu_cache_init 'void (int)'   |-ParmVarDecl 0x13280dcd8 <col:22, col:26> col:26 flags 'int'   `-CompoundStmt 0x13280de98 <line:2:1, line:6:1> ","19852":"`-FunctionDecl 0x15000ddf8  line:1:1 invalid vips_foreign_load_gif_next_page 'int (int *)'   |-ParmVarDecl 0x15000dd28 <col:34, col:54> col:54 referenced invalid gif 'int *'   `-CompoundStmt 0x1479239e0 <line:2:1, line:58:1>     |-DoStmt 0x147923970 <line:7:2, line:55:13>     | |-CompoundStmt 0x147923898 <line:7:5, line:54:2>     | | |-IfStmt 0x15000e3b8 <line:8:3, line:11:3>     | | | |-BinaryOperator 0x15000e1c8 <line:8:7, col:50> 'int' contains-errors '=='     | | | | |-CallExpr 0x15000e178 <col:7, col:45> '<dependent type>' contains-errors     | | | | | |-DeclRefExpr 0x15000e020 <col:7> 'int ()' Function 0x15000df68 'DGifGetRecordType' 'int ()'     | | | | | |-CXXDependentScopeMemberExpr 0x15000e060 <col:26, col:31> '<dependent type>' contains-errors lvalue ->file     | | | | | | `-RecoveryExpr 0x15000e040 <col:26> '<dependent type>' contains-errors lvalue     | | | | | `-UnaryOperator 0x15000e160 <col:37, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | | |   `-RecoveryExpr 0x15000e140 <col:38> '<dependent type>' contains-errors lvalue     | | | | `-RecoveryExpr 0x15000e1a8 <col:50> '<dependent type>' contains-errors lvalue     | | | `-CompoundStmt 0x15000e398 <col:62, line:11:3>     | | |   |-CallExpr 0x15000e308 <line:9:4, col:37> '<dependent type>' contains-errors     | | |   | |-DeclRefExpr 0x15000e2c8 <col:4> 'int ()' Function 0x15000e210 'vips_foreign_load_gif_error' 'int ()'     | | |   | `-RecoveryExpr 0x15000e2e8 <col:33> '<dependent type>' contains-errors lvalue     | | |   `-ReturnStmt 0x15000e388 <line:10:4, col:15>     | | |     `-ParenExpr 0x15000e368 <col:10, col:15> 'int'     | | |       `-UnaryOperator 0x15000e350 <col:12, col:13> 'int' prefix '-'     | | |         `-IntegerLiteral 0x15000e330 <col:13> 'int' 1     | | `-SwitchStmt 0x147922c38 <line:13:3, line:53:3>     | |   |-RecoveryExpr 0x147922c18 <line:13:11> '<dependent type>' contains-errors lvalue     | |   `-CompoundStmt 0x147923820 <col:20, line:53:3>     | |     |-CallExpr 0x147922e38 <line:15:4, line:16:11> 'int'     | |     | |-ImplicitCastExpr 0x147922e20 <line:15:4> 'int (*)()' <FunctionToPointerDecay>     | |     | | `-DeclRefExpr 0x147922d58 <col:4> 'int ()' Function 0x147922ca0 'VIPS_DEBUG_MSG' 'int ()'     | |     | `-ImplicitCastExpr 0x147922e60 <col:20, line:16:5> 'char *' <ArrayToPointerDecay>     | |     |   `-StringLiteral 0x147922dc0 <line:15:20, line:16:5> 'char[7]' lvalue \"STRSTR\"     | |     |-IfStmt 0x147923170 <line:18:4, line:21:4>     | |     | |-BinaryOperator 0x147923060 <line:18:8, col:41> 'int' contains-errors '=='     | |     | | |-CallExpr 0x147922fe0 <col:8, col:36> '<dependent type>' contains-errors     | |     | | | |-DeclRefExpr 0x147922f58 <col:8> 'int ()' Function 0x147922ea0 'DGifGetImageDesc' 'int ()'     | |     | | | `-CXXDependentScopeMemberExpr 0x147922f98 <col:26, col:31> '<dependent type>' contains-errors lvalue ->file     | |     | | |   `-RecoveryExpr 0x147922f78 <col:26> '<dependent type>' contains-errors lvalue     | |     | | `-RecoveryExpr 0x147923040 <col:41> '<dependent type>' contains-errors lvalue     | |     | `-CompoundStmt 0x147923150 <col:53, line:21:4>     | |     |   |-CallExpr 0x1479230c0 <line:19:5, col:38> '<dependent type>' contains-errors     | |     |   | |-DeclRefExpr 0x147923080 <col:5> 'int ()' Function 0x15000e210 'vips_foreign_load_gif_error' 'int ()'     | |     |   | `-RecoveryExpr 0x1479230a0 <col:34> '<dependent type>' contains-errors lvalue     | |     |   `-ReturnStmt 0x147923140 <line:20:5, col:16>     | |     |     `-ParenExpr 0x147923120 <col:11, col:16> 'int'     | |     |       `-UnaryOperator 0x147923108 <col:13, col:14> 'int' prefix '-'     | |     |         `-IntegerLiteral 0x1479230e8 <col:14> 'int' 1     | |     |-IfStmt 0x147923340 <line:23:4, line:24:16>     | |     | |-CallExpr 0x1479232b0 <line:23:8, col:42> '<dependent type>' contains-errors     | |     | | |-DeclRefExpr 0x147923270 <col:8> 'int ()' Function 0x1479231b8 'vips_foreign_load_gif_render' 'int ()'     | |     | | `-RecoveryExpr 0x147923290 <col:38> '<dependent type>' contains-errors lvalue     | |     | `-ReturnStmt 0x147923330 <line:24:5, col:16>     | |     |   `-ParenExpr 0x147923310 <col:11, col:16> 'int'     | |     |     `-UnaryOperator 0x1479232f8 <col:13, col:14> 'int' prefix '-'     | |     |       `-IntegerLiteral 0x1479232d8 <col:14> 'int' 1     | |     |-BreakStmt 0x147923378 <line:28:4>     | |     |-IfStmt 0x147923548 <line:31:4, line:32:16>     | |     | |-CallExpr 0x1479234b8 <line:31:8, col:45> '<dependent type>' contains-errors     | |     | | |-DeclRefExpr 0x147923478 <col:8> 'int ()' Function 0x1479233c0 'vips_foreign_load_gif_extension' 'int ()'     | |     | | `-RecoveryExpr 0x147923498 <col:41> '<dependent type>' contains-errors lvalue     | |     | `-ReturnStmt 0x147923538 <line:32:5, col:16>     | |     |   `-ParenExpr 0x147923518 <col:11, col:16> 'int'     | |     |     `-UnaryOperator 0x147923500 <col:13, col:14> 'int' prefix '-'     | |     |       `-IntegerLiteral 0x1479234e0 <col:14> 'int' 1     | |     |-BreakStmt 0x147923568 <line:33:4>     | |     |-CallExpr 0x1479235d0 <line:36:4, line:37:11> 'int'     | |     | |-ImplicitCastExpr 0x1479235b8 <line:36:4> 'int (*)()' <FunctionToPointerDecay>     | |     | | `-DeclRefExpr 0x147923570 <col:4> 'int ()' Function 0x147922ca0 'VIPS_DEBUG_MSG' 'int ()'     | |     | `-ImplicitCastExpr 0x1479235f8 <col:20, line:37:5> 'char *' <ArrayToPointerDecay>     | |     |   `-StringLiteral 0x147923590 <line:36:20, line:37:5> 'char[7]' lvalue \"STRSTR\"     | |     |-BreakStmt 0x1479236a0 <line:39:4>     | |     |-CallExpr 0x147923708 <line:42:4, line:43:11> 'int'     | |     | |-ImplicitCastExpr 0x1479236f0 <line:42:4> 'int (*)()' <FunctionToPointerDecay>     | |     | | `-DeclRefExpr 0x1479236a8 <col:4> 'int ()' Function 0x147922ca0 'VIPS_DEBUG_MSG' 'int ()'     | |     | `-ImplicitCastExpr 0x147923730 <col:20, line:43:5> 'char *' <ArrayToPointerDecay>     | |     |   `-StringLiteral 0x1479236c8 <line:42:20, line:43:5> 'char[7]' lvalue \"STRSTR\"     | |     |-BreakStmt 0x147923748 <line:44:4>     | |     |-CallExpr 0x1479237b0 <line:47:4, line:48:11> 'int'     | |     | |-ImplicitCastExpr 0x147923798 <line:47:4> 'int (*)()' <FunctionToPointerDecay>     | |     | | `-DeclRefExpr 0x147923750 <col:4> 'int ()' Function 0x147922ca0 'VIPS_DEBUG_MSG' 'int ()'     | |     | `-ImplicitCastExpr 0x1479237d8 <col:20, line:48:5> 'char *' <ArrayToPointerDecay>     | |     |   `-StringLiteral 0x147923770 <line:47:20, line:48:5> 'char[7]' lvalue \"STRSTR\"     | |     |-BreakStmt 0x1479237f0 <line:49:4>     | |     `-DefaultStmt 0x147923800 <line:51:3, line:52:4>     | |       `-BreakStmt 0x1479237f8 <col:4>     | `-RecoveryExpr 0x147923950 <line:54:11, line:55:9> '_Bool' contains-errors     `-ReturnStmt 0x1479239d0 <line:57:2, col:12>       `-ParenExpr 0x1479239b0 <col:8, col:12> 'int'         `-IntegerLiteral 0x147923990 <col:10> 'int' 0 ","19842":"`-FunctionDecl 0x123141668  line:1:22 clone_mnt 'struct mount *(struct mount *, struct dentry *, int)' static   |-ParmVarDecl 0x123128c18 <col:32, col:46> col:46 used old 'struct mount *'   |-ParmVarDecl 0x123141428 <col:51, col:66> col:66 used root 'struct dentry *'   |-ParmVarDecl 0x1231414a8 <line:2:6, col:10> col:10 used flag 'int'   `-CompoundStmt 0x123146ca8 <line:3:1, line:81:1>     |-DeclStmt 0x123141a00 <line:4:2, col:42>     | |-RecordDecl 0x123141770 <col:2, col:9> col:9 struct super_block     | `-VarDecl 0x1231418d8 <col:2, col:36> col:22 used sb 'struct super_block *' cinit     |   `-CXXDependentScopeMemberExpr 0x1231419a0 <col:27, col:36> '<dependent type>' contains-errors lvalue .mnt_sb     |     `-RecoveryExpr 0x123141978 <col:27, col:32> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x123141940 <col:27> 'struct mount *' lvalue ParmVar 0x123128c18 'old' 'struct mount *'     |-DeclStmt 0x123141aa8 <line:5:2, col:19>     | `-VarDecl 0x123141a40 <col:2, col:16> col:16 used mnt 'struct mount *'     |-DeclStmt 0x123141b40 <line:6:2, col:9>     | `-VarDecl 0x123141ad8 <col:2, col:6> col:6 used err 'int'     |-BinaryOperator 0x123141d48 <line:8:2, col:37> 'struct mount *' contains-errors '='     | |-DeclRefExpr 0x123141b58 <col:2> 'struct mount *' lvalue Var 0x123141a40 'mnt' 'struct mount *'     | `-CallExpr 0x123141d20 <col:8, col:37> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x123141ca0 <col:8> 'int ()' Function 0x123141be8 'alloc_vfsmnt' 'int ()'     |   `-RecoveryExpr 0x123141cf8 <col:21, col:26> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x123141cc0 <col:21> 'struct mount *' lvalue ParmVar 0x123128c18 'old' 'struct mount *'     |-IfStmt 0x123141fb0 <line:9:2, line:10:25>     | |-UnaryOperator 0x123141da0 <line:9:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x123141d88 <col:7> 'struct mount *' <LValueToRValue>     | |   `-DeclRefExpr 0x123141d68 <col:7> 'struct mount *' lvalue Var 0x123141a40 'mnt' 'struct mount *'     | `-ReturnStmt 0x123141fa0 <line:10:3, col:25>     |   `-CallExpr 0x123141f78 <col:10, col:25> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x123141e98 <col:10> 'int ()' Function 0x123141de0 'ERR_PTR' 'int ()'     |     `-UnaryOperator 0x123141f60 <col:18, col:19> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x123141f48 <col:19> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x123141f28 <col:19> '<dependent type>' contains-errors lvalue     |-IfStmt 0x123142218 <line:12:2, line:15:28> has_else     | |-RecoveryExpr 0x123142078 <line:12:6, col:56> '_Bool' contains-errors     | |-BinaryOperator 0x123142118 <line:13:3, col:23> '<dependent type>' contains-errors '='     | | |-RecoveryExpr 0x1231420d0 <col:3, col:8> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x123142098 <col:3> 'struct mount *' lvalue Var 0x123141a40 'mnt' 'struct mount *'     | | `-IntegerLiteral 0x1231420f8 <col:23> 'int' 0     | `-BinaryOperator 0x1231421f8 <line:15:3, col:28> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x123142170 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x123142138 <col:3> 'struct mount *' lvalue Var 0x123141a40 'mnt' 'struct mount *'     |   `-RecoveryExpr 0x1231421d0 <col:23, col:28> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x123142198 <col:23> 'struct mount *' lvalue ParmVar 0x123128c18 'old' 'struct mount *'     |-IfStmt 0x123144088 <line:17:2, line:21:2>     | |-RecoveryExpr 0x123142330 <line:17:6, col:39> '_Bool' contains-errors     | `-CompoundStmt 0x123144068 <col:53, line:21:2>     |   |-BinaryOperator 0x123143f88 <line:18:3, col:31> 'int' '='     |   | |-DeclRefExpr 0x123142350 <col:3> 'int' lvalue Var 0x123141ad8 'err' 'int'     |   | `-CallExpr 0x123143f48 <col:9, col:31> 'int'     |   |   |-ImplicitCastExpr 0x123143f30 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x123143eb8 <col:9> 'int ()' Function 0x123143e00 'mnt_alloc_group_id' 'int ()'     |   |   `-ImplicitCastExpr 0x123143f70 <col:28> 'struct mount *' <LValueToRValue>     |   |     `-DeclRefExpr 0x123143ed8 <col:28> 'struct mount *' lvalue Var 0x123141a40 'mnt' 'struct mount *'     |   `-IfStmt 0x123144048 <line:19:3, line:20:9>     |     |-ImplicitCastExpr 0x123143fc8 <line:19:7> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x123143fa8 <col:7> 'int' lvalue Var 0x123141ad8 'err' 'int'     |     `-GotoStmt 0x123144030 <line:20:4, col:9> 'out_free' 0x123143fe0     |-IfStmt 0x123144958 <line:25:2, line:39:2>     | |-BinaryOperator 0x1231442c0 <line:25:6, col:13> '<dependent type>' contains-errors '&'     | | |-DeclRefExpr 0x123144248 <col:6> 'int' lvalue ParmVar 0x1231414a8 'flag' 'int'     | | `-RecoveryExpr 0x1231442a0 <col:13> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x123144948 <col:30, line:39:2>     |-CallExpr 0x123144d78 <line:45:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x123144ce0 <col:2> 'int ()' Function 0x123144c28 'atomic_inc' 'int ()'     | `-UnaryOperator 0x123144d60 <col:13, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x123144d38 <col:14, col:18> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x123144d00 <col:14> 'struct super_block *' contains-errors lvalue Var 0x1231418d8 'sb' 'struct super_block *'     |-BinaryOperator 0x123144e68 <line:46:2, col:20> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x123144e00 <col:2, col:11> '<dependent type>' contains-errors lvalue .mnt_sb     | | `-RecoveryExpr 0x123144dd8 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x123144da0 <col:2> 'struct mount *' lvalue Var 0x123141a40 'mnt' 'struct mount *'     | `-DeclRefExpr 0x123144e48 <col:20> 'struct super_block *' contains-errors lvalue Var 0x1231418d8 'sb' 'struct super_block *'     |-BinaryOperator 0x1231450a8 <line:47:2, col:31> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x123144ee8 <col:2, col:11> '<dependent type>' contains-errors lvalue .mnt_root     | | `-RecoveryExpr 0x123144ec0 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x123144e88 <col:2> 'struct mount *' lvalue Var 0x123141a40 'mnt' 'struct mount *'     | `-CallExpr 0x123145068 <col:22, col:31> 'int'     |   |-ImplicitCastExpr 0x123145050 <col:22> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x123145010 <col:22> 'int ()' Function 0x123144f58 'dget' 'int ()'     |   `-ImplicitCastExpr 0x123145090 <col:27> 'struct dentry *' <LValueToRValue>     |     `-DeclRefExpr 0x123145030 <col:27> 'struct dentry *' lvalue ParmVar 0x123141428 'root' 'struct dentry *'     |-BinaryOperator 0x1231451d0 <line:48:2, col:33> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x123145100 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1231450c8 <col:2> 'struct mount *' lvalue Var 0x123141a40 'mnt' 'struct mount *'     | `-CXXDependentScopeMemberExpr 0x123145188 <col:24, col:33> '<dependent type>' contains-errors lvalue .mnt_root     |   `-RecoveryExpr 0x123145160 <col:24, col:29> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x123145128 <col:24> 'struct mount *' lvalue Var 0x123141a40 'mnt' 'struct mount *'     |-BinaryOperator 0x123145270 <line:49:2, col:20> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x123145228 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1231451f0 <col:2> 'struct mount *' lvalue Var 0x123141a40 'mnt' 'struct mount *'     | `-DeclRefExpr 0x123145250 <col:20> 'struct mount *' lvalue Var 0x123141a40 'mnt' 'struct mount *'     |-CallExpr 0x1231453a8 <line:50:2, col:18> 'int'     | `-ImplicitCastExpr 0x123145390 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x123145370 <col:2> 'int ()' Function 0x1231452b8 'lock_mount_hash' 'int ()'     |-CallExpr 0x1231455b8 <line:51:2, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1231454a8 <col:2> 'int ()' Function 0x1231453f0 'list_add_tail' 'int ()'     | |-UnaryOperator 0x123145528 <col:16, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x123145500 <col:17, col:22> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1231454c8 <col:17> 'struct mount *' lvalue Var 0x123141a40 'mnt' 'struct mount *'     | `-UnaryOperator 0x1231455a0 <col:36, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x123145578 <col:37, col:41> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x123145540 <col:37> 'struct super_block *' contains-errors lvalue Var 0x1231418d8 'sb' 'struct super_block *'     |-CallExpr 0x123145700 <line:52:2, col:20> 'int'     | `-ImplicitCastExpr 0x1231456e8 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x1231456c8 <col:2> 'int ()' Function 0x123145610 'unlock_mount_hash' 'int ()'     |-IfStmt 0x1231463d8 <line:54:2, line:65:2> has_else     | |-RecoveryExpr 0x1231458d8 <line:54:6, line:55:56> '_Bool' contains-errors     | |-CompoundStmt 0x123145d30 <col:59, line:59:2>     | | |-CallExpr 0x123145ae8 <line:56:3, col:49> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x1231459d8 <col:3> 'int ()' Function 0x123145920 'list_add' 'int ()'     | | | |-UnaryOperator 0x123145a58 <col:12, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | | `-RecoveryExpr 0x123145a30 <col:13, col:18> '<dependent type>' contains-errors lvalue     | | | |   `-DeclRefExpr 0x1231459f8 <col:13> 'struct mount *' lvalue Var 0x123141a40 'mnt' 'struct mount *'     | | | `-UnaryOperator 0x123145ad0 <col:29, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-RecoveryExpr 0x123145aa8 <col:30, col:35> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x123145a70 <col:30> 'struct mount *' lvalue ParmVar 0x123128c18 'old' 'struct mount *'     | | |-BinaryOperator 0x123145b98 <line:57:3, col:21> '<dependent type>' contains-errors '='     | | | |-RecoveryExpr 0x123145b50 <col:3, col:8> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x123145b18 <col:3> 'struct mount *' lvalue Var 0x123141a40 'mnt' 'struct mount *'     | | | `-DeclRefExpr 0x123145b78 <col:21> 'struct mount *' lvalue ParmVar 0x123128c18 'old' 'struct mount *'     | | `-CallExpr 0x123145cf0 <line:58:3, col:23> 'int'     | |   |-ImplicitCastExpr 0x123145cd8 <col:3> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x123145c98 <col:3> 'int ()' Function 0x123145be0 'CLEAR_MNT_SHARED' 'int ()'     | |   `-ImplicitCastExpr 0x123145d18 <col:20> 'struct mount *' <LValueToRValue>     | |     `-DeclRefExpr 0x123145cb8 <col:20> 'struct mount *' lvalue Var 0x123141a40 'mnt' 'struct mount *'     | `-IfStmt 0x1231463b8 <line:59:9, line:65:2>     |   |-RecoveryExpr 0x123145d78 <line:59:13, col:32> '_Bool' contains-errors     |   `-CompoundStmt 0x123146390 <col:35, line:65:2>     |     |-IfStmt 0x123145fb8 <line:60:3, line:61:45>     |     | |-RecoveryExpr 0x123145e58 <line:60:7, col:51> '_Bool' contains-errors     |     | `-CallExpr 0x123145f88 <line:61:4, col:45> '<dependent type>' contains-errors     |     |   |-DeclRefExpr 0x123145e78 <col:4> 'int ()' Function 0x123145920 'list_add' 'int ()'     |     |   |-UnaryOperator 0x123145ef8 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |     |   | `-RecoveryExpr 0x123145ed0 <col:14, col:19> '<dependent type>' contains-errors lvalue     |     |   |   `-DeclRefExpr 0x123145e98 <col:14> 'struct mount *' lvalue Var 0x123141a40 'mnt' 'struct mount *'     |     |   `-UnaryOperator 0x123145f70 <col:30, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     |     |     `-RecoveryExpr 0x123145f48 <col:31, col:36> '<dependent type>' contains-errors lvalue     |     |       `-DeclRefExpr 0x123145f10 <col:31> 'struct mount *' lvalue ParmVar 0x123128c18 'old' 'struct mount *'     |     |-IfStmt 0x123146290 <line:62:3, line:63:45>     |     | |-CallExpr 0x123146110 <line:62:7, col:23> 'int'     |     | | |-ImplicitCastExpr 0x1231460f8 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     | | | `-DeclRefExpr 0x1231460b8 <col:7> 'int ()' Function 0x123146000 'IS_MNT_SLAVE' 'int ()'     |     | | `-ImplicitCastExpr 0x123146138 <col:20> 'struct mount *' <LValueToRValue>     |     | |   `-DeclRefExpr 0x1231460d8 <col:20> 'struct mount *' lvalue ParmVar 0x123128c18 'old' 'struct mount *'     |     | `-CallExpr 0x123146260 <line:63:4, col:45> '<dependent type>' contains-errors     |     |   |-DeclRefExpr 0x123146150 <col:4> 'int ()' Function 0x123145920 'list_add' 'int ()'     |     |   |-UnaryOperator 0x1231461d0 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |     |   | `-RecoveryExpr 0x1231461a8 <col:14, col:19> '<dependent type>' contains-errors lvalue     |     |   |   `-DeclRefExpr 0x123146170 <col:14> 'struct mount *' lvalue Var 0x123141a40 'mnt' 'struct mount *'     |     |   `-UnaryOperator 0x123146248 <col:30, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     |     |     `-RecoveryExpr 0x123146220 <col:31, col:36> '<dependent type>' contains-errors lvalue     |     |       `-DeclRefExpr 0x1231461e8 <col:31> 'struct mount *' lvalue ParmVar 0x123128c18 'old' 'struct mount *'     |     `-BinaryOperator 0x123146370 <line:64:3, col:26> '<dependent type>' contains-errors '='     |       |-RecoveryExpr 0x1231462e8 <col:3, col:8> '<dependent type>' contains-errors lvalue     |       | `-DeclRefExpr 0x1231462b0 <col:3> 'struct mount *' lvalue Var 0x123141a40 'mnt' 'struct mount *'     |       `-RecoveryExpr 0x123146348 <col:21, col:26> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x123146310 <col:21> 'struct mount *' lvalue ParmVar 0x123128c18 'old' 'struct mount *'     |-IfStmt 0x1231465c0 <line:66:2, line:67:21>     | |-RecoveryExpr 0x123146428 <line:66:6, col:13> '_Bool' contains-errors     | `-CallExpr 0x123146580 <line:67:3, col:21> 'int'     |   |-ImplicitCastExpr 0x123146568 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x123146528 <col:3> 'int ()' Function 0x123146470 'set_mnt_shared' 'int ()'     |   `-ImplicitCastExpr 0x1231465a8 <col:18> 'struct mount *' <LValueToRValue>     |     `-DeclRefExpr 0x123146548 <col:18> 'struct mount *' lvalue Var 0x123141a40 'mnt' 'struct mount *'     |-IfStmt 0x123146870 <line:70:2, line:73:2>     | |-RecoveryExpr 0x123146600 <line:70:6, col:13> '_Bool' contains-errors     | `-CompoundStmt 0x123146858 <col:24, line:73:2>     |   `-IfStmt 0x123146838 <line:71:3, line:72:47>     |     |-UnaryOperator 0x1231466e0 <line:71:7, col:35> '<dependent type>' contains-errors prefix '!' cannot overflow     |     | `-CallExpr 0x1231466b8 <col:8, col:35> '<dependent type>' contains-errors     |     |   |-DeclRefExpr 0x123146620 <col:8> 'int ()' Function 0x1231449c0 'list_empty' 'int ()'     |     |   `-UnaryOperator 0x1231466a0 <col:19, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |     |     `-RecoveryExpr 0x123146678 <col:20, col:25> '<dependent type>' contains-errors lvalue     |     |       `-DeclRefExpr 0x123146640 <col:20> 'struct mount *' lvalue ParmVar 0x123128c18 'old' 'struct mount *'     |     `-CallExpr 0x123146808 <line:72:4, col:47> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x1231466f8 <col:4> 'int ()' Function 0x123145920 'list_add' 'int ()'     |       |-UnaryOperator 0x123146778 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |       | `-RecoveryExpr 0x123146750 <col:14, col:19> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x123146718 <col:14> 'struct mount *' lvalue Var 0x123141a40 'mnt' 'struct mount *'     |       `-UnaryOperator 0x1231467f0 <col:31, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow     |         `-RecoveryExpr 0x1231467c8 <col:32, col:37> '<dependent type>' contains-errors lvalue     |           `-DeclRefExpr 0x123146790 <col:32> 'struct mount *' lvalue ParmVar 0x123128c18 'old' 'struct mount *'     |-ReturnStmt 0x1231468c8 <line:75:2, col:9>     | `-ImplicitCastExpr 0x1231468b0 <col:9> 'struct mount *' <LValueToRValue>     |   `-DeclRefExpr 0x123146890 <col:9> 'struct mount *' lvalue Var 0x123141a40 'mnt' 'struct mount *'     |-LabelStmt 0x123146a50 <line:77:2, line:78:17> 'out_free'     | `-CallExpr 0x123146a10 <col:2, col:17> 'int'     |   |-ImplicitCastExpr 0x1231469f8 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1231469b8 <col:2> 'int ()' Function 0x123146900 'mnt_free_id' 'int ()'     |   `-ImplicitCastExpr 0x123146a38 <col:14> 'struct mount *' <LValueToRValue>     |     `-DeclRefExpr 0x1231469d8 <col:14> 'struct mount *' lvalue Var 0x123141a40 'mnt' 'struct mount *'     |-CallExpr 0x123146ba8 <line:79:2, col:17> 'int'     | |-ImplicitCastExpr 0x123146b90 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x123146b50 <col:2> 'int ()' Function 0x123146a98 'free_vfsmnt' 'int ()'     | `-ImplicitCastExpr 0x123146bd0 <col:14> 'struct mount *' <LValueToRValue>     |   `-DeclRefExpr 0x123146b70 <col:14> 'struct mount *' lvalue Var 0x123141a40 'mnt' 'struct mount *'     `-ReturnStmt 0x123146c98 <line:80:2, col:20>       `-ImplicitCastExpr 0x123146c80 <col:9, col:20> 'struct mount *' <IntegralToPointer>         `-CallExpr 0x123146c40 <col:9, col:20> 'int'           |-ImplicitCastExpr 0x123146c28 <col:9> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x123146be8 <col:9> 'int ()' Function 0x123141de0 'ERR_PTR' 'int ()'           `-ImplicitCastExpr 0x123146c68 <col:17> 'int' <LValueToRValue>             `-DeclRefExpr 0x123146c08 <col:17> 'int' lvalue Var 0x123141ad8 'err' 'int' ","20049":"`-FunctionDecl 0x12b9283d0  line:1:13 invalid controloptions 'void (int *, int, const char **, int *)' static   |-ParmVarDecl 0x12b928128 <col:29, col:40> col:40 invalid L 'int *'   |-ParmVarDecl 0x12b9281a8 <col:43, col:47> col:47 used opt 'int'   |-ParmVarDecl 0x12b928258 <col:52, col:65> col:65 used fmt 'const char **'   |-ParmVarDecl 0x12b9282d8 <line:2:29, col:37> col:37 referenced invalid h 'int *'   `-CompoundStmt 0x12b9424b8 <col:40, line:19:1>     `-SwitchStmt 0x12b9284d0 <line:3:3, line:18:3>       |-ImplicitCastExpr 0x12b9284b8 <line:3:11> 'int' <LValueToRValue>       | `-DeclRefExpr 0x12b928498 <col:11> 'int' lvalue ParmVar 0x12b9281a8 'opt' 'int'       `-CompoundStmt 0x12b942470 <col:16, line:18:3>         |-CaseStmt 0x12b928528 <line:4:5, col:16>         | |-ConstantExpr 0x12b928510 <col:11> 'int'         | | `-CharacterLiteral 0x12b9284f8 <col:11> 'int' 32         | `-ReturnStmt 0x12b928550 <col:16>         |-CaseStmt 0x12b928590 <line:5:5, col:27>         | |-ConstantExpr 0x12b928578 <col:10> 'int'         | | `-CharacterLiteral 0x12b928560 <col:10> 'int' 62         | `-BinaryOperator 0x12b9286a0 <col:15, col:27> '<dependent type>' contains-errors '='         |   |-CXXDependentScopeMemberExpr 0x12b928600 <col:15, col:18> '<dependent type>' contains-errors lvalue ->endian         |   | `-RecoveryExpr 0x12b9285d8 <col:15> '<dependent type>' contains-errors lvalue         |   |   `-DeclRefExpr 0x12b9285b8 <col:15> 'int *' lvalue ParmVar 0x12b9282d8 'h' 'int *'         |   `-RecoveryExpr 0x12b928680 <col:27> '<dependent type>' contains-errors lvalue         |-ReturnStmt 0x12b9286c0 <col:32>         |-CaseStmt 0x12b928700 <line:6:5, col:27>         | |-ConstantExpr 0x12b9286e8 <col:10> 'int'         | | `-CharacterLiteral 0x12b9286d0 <col:10> 'int' 60         | `-BinaryOperator 0x12b941820 <col:15, col:27> '<dependent type>' contains-errors '='         |   |-CXXDependentScopeMemberExpr 0x12b928770 <col:15, col:18> '<dependent type>' contains-errors lvalue ->endian         |   | `-RecoveryExpr 0x12b928748 <col:15> '<dependent type>' contains-errors lvalue         |   |   `-DeclRefExpr 0x12b928728 <col:15> 'int *' lvalue ParmVar 0x12b9282d8 'h' 'int *'         |   `-RecoveryExpr 0x12b941800 <col:27> '<dependent type>' contains-errors lvalue         |-ReturnStmt 0x12b941840 <col:35>         |-CaseStmt 0x12b941880 <line:7:5, line:13:5>         | |-ConstantExpr 0x12b941868 <line:7:10> 'int'         | | `-CharacterLiteral 0x12b941850 <col:10> 'int' 33         | `-CompoundStmt 0x12b942038 <col:15, line:13:5>         |   |-DeclStmt 0x12b941b88 <line:8:7, col:39>         |   | `-VarDecl 0x12b9418c0 <col:7, col:38> col:11 used a 'int' cinit         |   |   `-CallExpr 0x12b941b50 <col:15, col:38> '<dependent type>' contains-errors         |   |     |-DeclRefExpr 0x12b941a80 <col:15> 'int ()' Function 0x12b9419c8 'getnum' 'int ()'         |   |     |-RecoveryExpr 0x12b941aa0 <col:22> '<dependent type>' contains-errors lvalue         |   |     |-DeclRefExpr 0x12b941ac0 <col:25> 'const char **' lvalue ParmVar 0x12b928258 'fmt' 'const char **'         |   |     `-RecoveryExpr 0x12b941b30 <col:30> '<dependent type>' contains-errors lvalue         |   |-IfStmt 0x12b941f38 <line:9:7, line:10:31>         |   | |-UnaryOperator 0x12b941d48 <line:9:11, col:18> 'int' contains-errors prefix '!' cannot overflow         |   | | `-CallExpr 0x12b941d08 <col:12, col:18> 'int' contains-errors         |   | |   |-ImplicitCastExpr 0x12b941cf0 <col:12> 'int (*)()' <FunctionToPointerDecay>         |   | |   | `-DeclRefExpr 0x12b941c80 <col:12> 'int ()' Function 0x12b941bc8 'isp2' 'int ()'         |   | |   `-ImplicitCastExpr 0x12b941d30 <col:17> 'int' contains-errors <LValueToRValue>         |   | |     `-DeclRefExpr 0x12b941ca0 <col:17> 'int' contains-errors lvalue Var 0x12b9418c0 'a' 'int'         |   | `-CallExpr 0x12b941f00 <line:10:9, col:31> '<dependent type>' contains-errors         |   |   |-DeclRefExpr 0x12b941e40 <col:9> 'int ()' Function 0x12b941d88 'luaL_error' 'int ()'         |   |   |-RecoveryExpr 0x12b941e60 <col:20> '<dependent type>' contains-errors lvalue         |   |   |-StringLiteral 0x12b941ec0 <col:23> 'char[4]' lvalue \"STR\"         |   |   `-DeclRefExpr 0x12b941ee0 <col:30> 'int' contains-errors lvalue Var 0x12b9418c0 'a' 'int'         |   |-BinaryOperator 0x12b942008 <line:11:7, col:18> '<dependent type>' contains-errors '='         |   | |-CXXDependentScopeMemberExpr 0x12b941fa0 <col:7, col:10> '<dependent type>' contains-errors lvalue ->align         |   | | `-RecoveryExpr 0x12b941f78 <col:7> '<dependent type>' contains-errors lvalue         |   | |   `-DeclRefExpr 0x12b941f58 <col:7> 'int *' lvalue ParmVar 0x12b9282d8 'h' 'int *'         |   | `-DeclRefExpr 0x12b941fe8 <col:18> 'int' contains-errors lvalue Var 0x12b9418c0 'a' 'int'         |   `-ReturnStmt 0x12b942028 <line:12:7>         `-DefaultStmt 0x12b942450 <line:14:5, line:17:5>           `-CompoundStmt 0x12b942430 <line:14:14, line:17:5>             |-DeclStmt 0x12b942280 <line:15:7, col:55>             | `-VarDecl 0x12b942080 <col:7, col:54> col:19 used msg 'const char *' cinit             |   `-CallExpr 0x12b942248 <col:25, col:54> '<dependent type>' contains-errors             |     |-DeclRefExpr 0x12b9421c8 <col:25> 'int ()' Function 0x12b942110 'lua_pushfstring' 'int ()'             |     |-RecoveryExpr 0x12b9421e8 <col:41> '<dependent type>' contains-errors lvalue             |     |-StringLiteral 0x12b942208 <col:44> 'char[4]' lvalue \"STR\"             |     `-DeclRefExpr 0x12b942228 <col:51> 'int' lvalue ParmVar 0x12b9281a8 'opt' 'int'             `-CallExpr 0x12b9423f8 <line:16:7, col:30> '<dependent type>' contains-errors               |-DeclRefExpr 0x12b942378 <col:7> 'int ()' Function 0x12b9422c0 'luaL_argerror' 'int ()'               |-RecoveryExpr 0x12b942398 <col:21> '<dependent type>' contains-errors lvalue               |-IntegerLiteral 0x12b9423b8 <col:24> 'int' 1               `-DeclRefExpr 0x12b9423d8 <col:27> 'const char *' contains-errors lvalue Var 0x12b942080 'msg' 'const char *' ","19257":"`-FunctionDecl 0x15080dfa8  line:1:12 invalid set_registers 'int (int *, int, int, void *)' static   |-ParmVarDecl 0x15080dd28 <col:26, col:38> col:38 invalid dev 'int *'   |-ParmVarDecl 0x15080dda8 <col:43, col:47> col:47 invalid indx 'int'   |-ParmVarDecl 0x15080de28 <col:53, col:57> col:57 invalid size 'int'   |-ParmVarDecl 0x15080dea8 <col:63, col:69> col:69 used data 'void *'   `-CompoundStmt 0x150827620 <line:2:1, line:6:1>     `-ReturnStmt 0x150827610 <line:3:2, line:5:35>       `-CallExpr 0x1508275a8 <line:3:9, line:5:35> '<dependent type>' contains-errors         |-DeclRefExpr 0x15080e1d0 <line:3:9> 'int ()' Function 0x15080e118 'usb_control_msg' 'int ()'         |-CXXDependentScopeMemberExpr 0x15080e210 <col:25, col:30> '<dependent type>' contains-errors lvalue ->udev         | `-RecoveryExpr 0x15080e1f0 <col:25> '<dependent type>' contains-errors lvalue         |-CallExpr 0x150827400 <col:36, col:64> '<dependent type>' contains-errors         | |-DeclRefExpr 0x15080e338 <col:36> 'int ()' Function 0x15080e280 'usb_sndctrlpipe' 'int ()'         | |-CXXDependentScopeMemberExpr 0x15080e378 <col:52, col:57> '<dependent type>' contains-errors lvalue ->udev         | | `-RecoveryExpr 0x15080e358 <col:52> '<dependent type>' contains-errors lvalue         | `-IntegerLiteral 0x15080e3c0 <col:63> 'int' 0         |-RecoveryExpr 0x150827568 <line:4:11> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x150827588 <col:33> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x150827460 <line:5:11> '<dependent type>' contains-errors lvalue         |-IntegerLiteral 0x150827480 <col:17> 'int' 0         |-DeclRefExpr 0x1508274a0 <col:20> 'void *' lvalue ParmVar 0x15080dea8 'data' 'void *'         |-RecoveryExpr 0x1508274c0 <col:26> '<dependent type>' contains-errors lvalue         `-IntegerLiteral 0x1508274e0 <col:32> 'int' 500 ","20166":"`-FunctionDecl 0x159103358  line:1:12 io_grab_files 'int (struct io_kiocb *)' static   |-ParmVarDecl 0x159103248 <col:26, col:43> col:43 used req 'struct io_kiocb *'   `-CompoundStmt 0x15911d948 <line:2:1, line:26:1>     |-DeclStmt 0x15911b780 <line:3:2, col:18>     | `-VarDecl 0x15911b668 <col:2, col:13> col:6 used ret 'int' cinit     |   `-UnaryOperator 0x15911b768 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x15911b750 <col:13> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x15911b730 <col:13> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x15911b9e8 <line:4:2, col:36>     | |-RecordDecl 0x15911b798 <col:2, col:9> col:9 struct io_ring_ctx     | `-VarDecl 0x15911b908 <col:2, col:33> col:22 used ctx 'struct io_ring_ctx *' cinit     |   `-RecoveryExpr 0x15911b9a8 <col:28, col:33> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x15911b970 <col:28> 'struct io_kiocb *' lvalue ParmVar 0x159103248 'req' 'struct io_kiocb *'     |-CallExpr 0x15911bb98 <line:6:2, col:23> 'int'     | |-ImplicitCastExpr 0x15911bb80 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x15911bb10 <col:2> 'int ()' Function 0x15911ba58 'io_req_init_async' 'int ()'     | `-ImplicitCastExpr 0x15911bbc0 <col:20> 'struct io_kiocb *' <LValueToRValue>     |   `-DeclRefExpr 0x15911bb30 <col:20> 'struct io_kiocb *' lvalue ParmVar 0x159103248 'req' 'struct io_kiocb *'     |-IfStmt 0x15911bd68 <line:8:2, line:9:10>     | |-RecoveryExpr 0x15911bd18 <line:8:6, col:58> '_Bool' contains-errors     | `-ReturnStmt 0x15911bd58 <line:9:3, col:10>     |   `-IntegerLiteral 0x15911bd38 <col:10> 'int' 0     |-IfStmt 0x15911bec0 <line:10:2, line:11:11>     | |-UnaryOperator 0x15911be00 <line:10:6, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x15911bde8 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x15911bdc0 <col:7, col:12> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x15911bd88 <col:7> 'struct io_ring_ctx *' contains-errors lvalue Var 0x15911b908 'ctx' 'struct io_ring_ctx *'     | `-ReturnStmt 0x15911beb0 <line:11:3, col:11>     |   `-UnaryOperator 0x15911be98 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x15911be80 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x15911be60 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15911bff8 <line:13:2, col:16> 'int'     | `-ImplicitCastExpr 0x15911bfe0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x15911bfc0 <col:2> 'int ()' Function 0x15911bf08 'rcu_read_lock' 'int ()'     |-CallExpr 0x15911c190 <line:14:2, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15911c0f8 <col:2> 'int ()' Function 0x15911c040 'spin_lock_irq' 'int ()'     | `-UnaryOperator 0x15911c178 <col:16, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x15911c150 <col:17, col:22> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x15911c118 <col:17> 'struct io_ring_ctx *' contains-errors lvalue Var 0x15911b908 'ctx' 'struct io_ring_ctx *'     |-IfStmt 0x15911d608 <line:16:2, line:21:2>     | |-BinaryOperator 0x15911c3a0 <line:16:6, col:35> 'int' contains-errors '=='     | | |-CallExpr 0x15911c318 <col:6, col:25> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x15911c298 <col:6> 'int ()' Function 0x15911c1e0 'fcheck' 'int ()'     | | | `-RecoveryExpr 0x15911c2f0 <col:13, col:18> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x15911c2b8 <col:13> 'struct io_ring_ctx *' contains-errors lvalue Var 0x15911b908 'ctx' 'struct io_ring_ctx *'     | | `-RecoveryExpr 0x15911c378 <col:30, col:35> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15911c340 <col:30> 'struct io_ring_ctx *' contains-errors lvalue Var 0x15911b908 'ctx' 'struct io_ring_ctx *'     | `-CompoundStmt 0x15911d5e0 <col:46, line:21:2>     |   |-CallExpr 0x15911c5b0 <line:17:3, col:53> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x15911c4a0 <col:3> 'int ()' Function 0x15911c3e8 'list_add' 'int ()'     |   | |-UnaryOperator 0x15911c520 <col:12, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-RecoveryExpr 0x15911c4f8 <col:13, col:18> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x15911c4c0 <col:13> 'struct io_kiocb *' lvalue ParmVar 0x159103248 'req' 'struct io_kiocb *'     |   | `-UnaryOperator 0x15911c598 <col:34, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x15911c570 <col:35, col:40> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x15911c538 <col:35> 'struct io_ring_ctx *' contains-errors lvalue Var 0x15911b908 'ctx' 'struct io_ring_ctx *'     |   |-CompoundAssignOperator 0x15911d4a8 <line:18:3, col:17> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   | |-RecoveryExpr 0x15911d418 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x15911c5e0 <col:3> 'struct io_kiocb *' lvalue ParmVar 0x159103248 'req' 'struct io_kiocb *'     |   | `-RecoveryExpr 0x15911d488 <col:17> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x15911d5c0 <line:20:3, col:9> 'int' contains-errors '='     |     |-DeclRefExpr 0x15911d580 <col:3> 'int' contains-errors lvalue Var 0x15911b668 'ret' 'int'     |     `-IntegerLiteral 0x15911d5a0 <col:9> 'int' 0     |-CallExpr 0x15911d7a0 <line:22:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15911d708 <col:2> 'int ()' Function 0x15911d650 'spin_unlock_irq' 'int ()'     | `-UnaryOperator 0x15911d788 <col:18, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x15911d760 <col:19, col:24> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x15911d728 <col:19> 'struct io_ring_ctx *' contains-errors lvalue Var 0x15911b908 'ctx' 'struct io_ring_ctx *'     |-CallExpr 0x15911d8e0 <line:23:2, col:18> 'int'     | `-ImplicitCastExpr 0x15911d8c8 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x15911d8a8 <col:2> 'int ()' Function 0x15911d7f0 'rcu_read_unlock' 'int ()'     `-ReturnStmt 0x15911d938 <line:25:2, col:9>       `-ImplicitCastExpr 0x15911d920 <col:9> 'int' contains-errors <LValueToRValue>         `-DeclRefExpr 0x15911d900 <col:9> 'int' contains-errors lvalue Var 0x15911b668 'ret' 'int' ","20052":"`-FunctionDecl 0x15b008340  line:1:6 bnx2x_func_init 'void (struct bnx2x *, struct bnx2x_func_init_params *)'   |-ParmVarDecl 0x15a928648 <col:22, col:36> col:36 used bp 'struct bnx2x *'   |-ParmVarDecl 0x15b008228 <col:40, col:71> col:71 used p 'struct bnx2x_func_init_params *'   `-CompoundStmt 0x15c808b10 <line:2:1, line:19:1>     |-IfStmt 0x15b008a48 <line:3:2, line:7:2>     | |-CallExpr 0x15b0085f8 <line:3:6, col:20> 'int'     | | |-ImplicitCastExpr 0x15b0085e0 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x15b008570 <col:6> 'int ()' Function 0x15b0084b8 'CHIP_IS_E1x' 'int ()'     | | `-ImplicitCastExpr 0x15b008620 <col:18> 'struct bnx2x *' <LValueToRValue>     | |   `-DeclRefExpr 0x15b008590 <col:18> 'struct bnx2x *' lvalue ParmVar 0x15a928648 'bp' 'struct bnx2x *'     | `-CompoundStmt 0x15b008a28 <col:23, line:7:2>     |   |-DeclStmt 0x15b008820 <line:4:3, col:54>     |   | |-RecordDecl 0x15b008638 <col:3, col:10> col:10 struct tstorm_eth_function_common_config     |   | `-VarDecl 0x15b008738 <col:3, col:44> col:44 invalid tcfg 'struct tstorm_eth_function_common_config'     |   `-CallExpr 0x15b0089f0 <line:6:3, col:46> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x15b008918 <col:3> 'int ()' Function 0x15b008860 'storm_memset_func_cfg' 'int ()'     |     |-DeclRefExpr 0x15b008938 <col:25> 'struct bnx2x *' lvalue ParmVar 0x15a928648 'bp' 'struct bnx2x *'     |     |-UnaryOperator 0x15b008978 <col:29, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | `-RecoveryExpr 0x15b008958 <col:30> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x15b0089c8 <col:36, col:39> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x15b008990 <col:36> 'struct bnx2x_func_init_params *' lvalue ParmVar 0x15b008228 'p' 'struct bnx2x_func_init_params *'     |-CallExpr 0x15b008c48 <line:10:2, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15b008b48 <col:2> 'int ()' Function 0x15b008a90 'storm_memset_vf_to_pf' 'int ()'     | |-DeclRefExpr 0x15b008b68 <col:24> 'struct bnx2x *' lvalue ParmVar 0x15a928648 'bp' 'struct bnx2x *'     | |-RecoveryExpr 0x15b008bc0 <col:28, col:31> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15b008b88 <col:28> 'struct bnx2x_func_init_params *' lvalue ParmVar 0x15b008228 'p' 'struct bnx2x_func_init_params *'     | `-RecoveryExpr 0x15b008c20 <col:40, col:43> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x15b008be8 <col:40> 'struct bnx2x_func_init_params *' lvalue ParmVar 0x15b008228 'p' 'struct bnx2x_func_init_params *'     |-CallExpr 0x15b008e20 <line:11:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15b008d60 <col:2> 'int ()' Function 0x15b008ca8 'storm_memset_func_en' 'int ()'     | |-DeclRefExpr 0x15b008d80 <col:23> 'struct bnx2x *' lvalue ParmVar 0x15a928648 'bp' 'struct bnx2x *'     | |-RecoveryExpr 0x15b008dd8 <col:27, col:30> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15b008da0 <col:27> 'struct bnx2x_func_init_params *' lvalue ParmVar 0x15b008228 'p' 'struct bnx2x_func_init_params *'     | `-IntegerLiteral 0x15b008e00 <col:39> 'int' 1     `-IfStmt 0x15c808af0 <line:14:2, line:18:2>       |-RecoveryExpr 0x15b008e90 <line:14:6, col:9> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x15b008e58 <col:6> 'struct bnx2x_func_init_params *' lvalue ParmVar 0x15b008228 'p' 'struct bnx2x_func_init_params *'       `-CompoundStmt 0x15c808ad0 <col:21, line:18:2>         |-CallExpr 0x15b009098 <line:15:3, col:51> '<dependent type>' contains-errors         | |-DeclRefExpr 0x15b008f98 <col:3> 'int ()' Function 0x15b008ee0 'storm_memset_spq_addr' 'int ()'         | |-DeclRefExpr 0x15b008fb8 <col:25> 'struct bnx2x *' lvalue ParmVar 0x15a928648 'bp' 'struct bnx2x *'         | |-RecoveryExpr 0x15b009010 <col:29, col:32> '<dependent type>' contains-errors lvalue         | | `-DeclRefExpr 0x15b008fd8 <col:29> 'struct bnx2x_func_init_params *' lvalue ParmVar 0x15b008228 'p' 'struct bnx2x_func_init_params *'         | `-RecoveryExpr 0x15b009070 <col:41, col:44> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x15b009038 <col:41> 'struct bnx2x_func_init_params *' lvalue ParmVar 0x15b008228 'p' 'struct bnx2x_func_init_params *'         `-CallExpr 0x15c808a98 <line:16:3, line:17:57> '<dependent type>' contains-errors           |-DeclRefExpr 0x15b0091b0 <line:16:3> 'int ()' Function 0x15b0090f8 'REG_WR' 'int ()'           |-DeclRefExpr 0x15b0091d0 <col:10> 'struct bnx2x *' lvalue ParmVar 0x15a928648 'bp' 'struct bnx2x *'           |-BinaryOperator 0x15c808a78 <col:14, line:17:43> '<dependent type>' contains-errors '+'           | |-RecoveryExpr 0x15c808a58 <line:16:14> '<dependent type>' contains-errors lvalue           | `-CallExpr 0x15c808978 <line:17:10, col:43> '<dependent type>' contains-errors           |   |-DeclRefExpr 0x15c8088f8 <col:10> 'int ()' Function 0x15c808840 'XSTORM_SPQ_PROD_OFFSET' 'int ()'           |   `-RecoveryExpr 0x15c808950 <col:33, col:36> '<dependent type>' contains-errors lvalue           |     `-DeclRefExpr 0x15c808918 <col:33> 'struct bnx2x_func_init_params *' lvalue ParmVar 0x15b008228 'p' 'struct bnx2x_func_init_params *'           `-RecoveryExpr 0x15c8089f8 <col:46, col:49> '<dependent type>' contains-errors lvalue             `-DeclRefExpr 0x15c8089c0 <col:46> 'struct bnx2x_func_init_params *' lvalue ParmVar 0x15b008228 'p' 'struct bnx2x_func_init_params *' ","19816":"`-FunctionDecl 0x12580de88  line:1:12 invalid phar_tar_process_metadata 'int (int *, int *)' static   |-ParmVarDecl 0x12580dd28 <col:38, col:55> col:55 referenced invalid entry 'int *'   |-ParmVarDecl 0x12580dda8 <col:62, col:74> col:74 invalid fp 'int *'   `-CompoundStmt 0x125827530 <line:2:1, line:35:1>     |-DeclStmt 0x12580dfc0 <line:3:2, col:16>     | `-VarDecl 0x12580df58 <col:2, col:8> col:8 used metadata 'char *'     |-BinaryOperator 0x12580e2b0 <line:4:2, col:37> '<dependent type>' contains-errors ','     | |-BinaryOperator 0x12580e270 <col:2, col:34> 'unsigned long' contains-errors '='     | | |-UnaryExprOrTypeTraitExpr 0x12580e250 <col:2, col:9> 'unsigned long' contains-errors sizeof     | | | `-RecoveryExpr 0x12580e230 <col:9> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x12580e1b0 <col:16, col:34> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12580e170 <col:16> 'int ()' Function 0x12580e0b8 'php_stream_tell' 'int ()'     | |   `-RecoveryExpr 0x12580e190 <col:32> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x12580e290 <col:37> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x125123740 <line:7:2, col:62> 'char *' contains-errors '='     | |-DeclRefExpr 0x12580e308 <col:2> 'char *' lvalue Var 0x12580df58 'metadata' 'char *'     | `-CStyleCastExpr 0x125123718 <col:13, col:62> 'char *' contains-errors <Dependent>     |   `-CallExpr 0x1251236d8 <col:22, col:62> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x125123610 <col:22> 'int ()' Function 0x12580e350 'emalloc' 'int ()'     |     `-BinaryOperator 0x1251236b8 <col:30, col:61> '<dependent type>' contains-errors '+'     |       |-CXXDependentScopeMemberExpr 0x125123650 <col:30, col:37> '<dependent type>' contains-errors lvalue ->uncompressed_filesize     |       | `-RecoveryExpr 0x125123630 <col:30> '<dependent type>' contains-errors lvalue     |       `-IntegerLiteral 0x125123698 <col:61> 'int' 1     |-IfStmt 0x125123e38 <line:10:2, line:14:2>     | |-BinaryOperator 0x125123a00 <line:10:6, col:21> 'int' contains-errors '!='     | | |-RecoveryExpr 0x1251239e0 <col:6> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x125123978 <col:14, col:21> '<dependent type>' contains-errors lvalue ->uncompressed_filesize     | |   `-RecoveryExpr 0x125123958 <col:14> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x125123e10 <col:44, line:14:2>     |   |-CallExpr 0x125123b88 <line:11:3, col:17> 'int'     |   | |-ImplicitCastExpr 0x125123b70 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x125123b00 <col:3> 'int ()' Function 0x125123a48 'efree' 'int ()'     |   | `-ImplicitCastExpr 0x125123bb0 <col:9> 'char *' <LValueToRValue>     |   |   `-DeclRefExpr 0x125123b20 <col:9> 'char *' lvalue Var 0x12580df58 'metadata' 'char *'     |   |-CallExpr 0x125123d90 <line:12:3, col:37> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x125123ca8 <col:3> 'int ()' Function 0x125123bf0 'php_stream_seek' 'int ()'     |   | |-RecoveryExpr 0x125123cc8 <col:19> '<dependent type>' contains-errors lvalue     |   | |-RecoveryExpr 0x125123d50 <col:23> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x125123d70 <col:29> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x125123e00 <line:13:3, col:10>     |     `-RecoveryExpr 0x125123de0 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1251241c0 <line:16:2, line:21:2>     | |-RecoveryExpr 0x1251240b0 <line:16:6, col:98> '_Bool' contains-errors     | `-CompoundStmt 0x1251241a8 <col:107, line:21:2>     |   `-CallExpr 0x125124128 <line:18:3, col:17> 'int'     |     |-ImplicitCastExpr 0x125124110 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1251240d0 <col:3> 'int ()' Function 0x125123a48 'efree' 'int ()'     |     `-ImplicitCastExpr 0x125124150 <col:9> 'char *' <LValueToRValue>     |       `-DeclRefExpr 0x1251240f0 <col:9> 'char *' lvalue Var 0x12580df58 'metadata' 'char *'     `-IfStmt 0x1258274c0 <line:23:2, line:26:9> has_else       |-BinaryOperator 0x125124348 <line:23:6, col:43> 'int' contains-errors '=='       | |-CXXDependentScopeMemberExpr 0x125124200 <col:6, col:13> '<dependent type>' contains-errors lvalue ->filename_len       | | `-RecoveryExpr 0x1251241e0 <col:6> '<dependent type>' contains-errors lvalue       | `-BinaryOperator 0x125124328 <col:29, col:43> 'unsigned long' '-'       |   |-UnaryExprOrTypeTraitExpr 0x1251242d0 <col:29, col:41> 'unsigned long' sizeof       |   | `-ParenExpr 0x1251242b0 <col:35, col:41> 'char[4]' lvalue       |   |   `-StringLiteral 0x125124290 <col:36> 'char[4]' lvalue \"STR\"       |   `-ImplicitCastExpr 0x125124310 <col:43> 'unsigned long' <IntegralCast>       |     `-IntegerLiteral 0x1251242f0 <col:43> 'int' 1       |-CompoundStmt 0x125124558 <col:47, line:26:2>       | `-BinaryOperator 0x1251244a8 <line:24:3, col:34> '<dependent type>' contains-errors '='       |   |-CXXDependentScopeMemberExpr 0x1251243f8 <col:3, col:16> '<dependent type>' contains-errors lvalue ->metadata       |   | `-CXXDependentScopeMemberExpr 0x1251243b0 <col:3, col:10> '<dependent type>' contains-errors lvalue ->phar       |   |   `-RecoveryExpr 0x125124388 <col:3> '<dependent type>' contains-errors lvalue       |   |     `-DeclRefExpr 0x125124368 <col:3> 'int *' lvalue ParmVar 0x12580dd28 'entry' 'int *'       |   `-CXXDependentScopeMemberExpr 0x125124460 <col:27, col:34> '<dependent type>' contains-errors lvalue ->metadata       |     `-RecoveryExpr 0x125124440 <col:27> '<dependent type>' contains-errors lvalue       `-NullStmt 0x1258274b8 <line:26:9> ","19933":"`-FunctionDecl 0x13f82fef8  col:8 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x13f122e00 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x13f122e68 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x13f122ed0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x13f82ffa0 <<invalid sloc>> Implicit 883 ","19432":"`-FunctionDecl 0x11f8f40c8  col:2 implicit used sprintf 'int (char *, const char *, ...)' extern   |-ParmVarDecl 0x11f8f5200 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x11f8f5268 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x11f8f4170 <<invalid sloc>> Implicit 906   `-FormatAttr 0x11f8f52e0 <col:2> Implicit printf 2 3 ","19227":"`-FunctionDecl 0x12680dfa8  line:1:1 invalid pcx_write_rle 'int (const int *, const int *, int, int *)'   |-ParmVarDecl 0x12680dcf0 <col:15, col:28> col:28 referenced invalid from 'const int *'   |-ParmVarDecl 0x12680dd70 <col:34, col:47> col:47 invalid end 'const int *'   |-ParmVarDecl 0x12680ddf0 <col:52, col:56> col:56 used step 'int'   |-ParmVarDecl 0x12680dea8 <col:62, col:72> col:72 invalid file 'int *'   `-CompoundStmt 0x126828198 <line:2:1, line:30:1>     |-DeclStmt 0x12680e188 <line:4:5, col:39>     | `-VarDecl 0x12680e088 <col:5, col:26> col:9 used max_run 'int' cinit     |   `-BinaryOperator 0x12680e168 <col:19, col:26> '<dependent type>' contains-errors '*'     |     |-DeclRefExpr 0x12680e0f0 <col:19> 'int' lvalue ParmVar 0x12680ddf0 'step' 'int'     |     `-RecoveryExpr 0x12680e148 <col:26> '<dependent type>' contains-errors lvalue     `-WhileStmt 0x126828178 <line:6:5, line:28:5>       |-BinaryOperator 0x12680e1e0 <line:6:12, col:19> 'int' contains-errors '<'       | |-RecoveryExpr 0x12680e1a0 <col:12> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x12680e1c0 <col:19> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x126828150 <col:24, line:28:5>         |-CompoundAssignOperator 0x12680e268 <line:9:9, col:17> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'         | |-RecoveryExpr 0x12680e220 <col:9> '<dependent type>' contains-errors lvalue         | | `-DeclRefExpr 0x12680e200 <col:9> 'const int *' lvalue ParmVar 0x12680dcf0 'from' 'const int *'         | `-DeclRefExpr 0x12680e248 <col:17> 'int' lvalue ParmVar 0x12680ddf0 'step' 'int'         |-IfStmt 0x126828048 <line:10:9, line:26:9> has_else         | |-BinaryOperator 0x126827420 <line:10:13, col:38> 'int' contains-errors '||'         | | |-BinaryOperator 0x126827400 <col:13, col:22> 'int' contains-errors '!='         | | | |-RecoveryExpr 0x12680e3a0 <col:13> '<dependent type>' contains-errors lvalue         | | | `-UnaryOperator 0x12680e3d8 <col:21, col:22> '<dependent type>' contains-errors prefix '*' cannot overflow         | | |   `-ImplicitCastExpr 0x12680e3c0 <col:22> '<dependent type>' contains-errors <LValueToRValue>         | | |     `-RecoveryExpr 0x12680e2b0 <col:22> '<dependent type>' contains-errors lvalue         | | `-BinaryOperator 0x12680e360 <col:30, col:38> 'int' contains-errors '=='         | |   |-RecoveryExpr 0x12680e320 <col:30> '<dependent type>' contains-errors lvalue         | |   `-RecoveryExpr 0x12680e340 <col:38> '<dependent type>' contains-errors lvalue         | |-CompoundStmt 0x1268276e0 <col:43, line:13:9>         | | `-IfStmt 0x1268276c0 <line:11:13, line:12:36>         | |   |-BinaryOperator 0x1268274b8 <line:11:17, col:25> 'int' contains-errors '>='         | |   | |-RecoveryExpr 0x126827498 <col:17> '<dependent type>' contains-errors lvalue         | |   | `-IntegerLiteral 0x126827458 <col:25> 'int' 192         | |   `-CallExpr 0x126827690 <line:12:17, col:36> '<dependent type>' contains-errors         | |     |-DeclRefExpr 0x126827630 <col:17> 'int ()' Function 0x126827578 'gp_fputc' 'int ()'         | |     |-IntegerLiteral 0x126827650 <col:26> 'int' 193         | |     `-RecoveryExpr 0x126827670 <col:32> '<dependent type>' contains-errors lvalue         | `-CompoundStmt 0x126828018 <line:13:16, line:26:9>         |   |-DeclStmt 0x126827798 <line:14:13, col:37>         |   | `-VarDecl 0x126827710 <col:13, col:25> col:25 referenced invalid start 'const int *'         |   |-WhileStmt 0x1268279a0 <line:16:13, line:17:25>         |   | |-RecoveryExpr 0x1268278e8 <line:16:20, col:50> '_Bool' contains-errors         |   | `-CompoundAssignOperator 0x126827970 <line:17:17, col:25> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'         |   |   |-RecoveryExpr 0x126827928 <col:17> '<dependent type>' contains-errors lvalue         |   |   | `-DeclRefExpr 0x126827908 <col:17> 'const int *' lvalue ParmVar 0x12680dcf0 'from' 'const int *'         |   |   `-DeclRefExpr 0x126827950 <col:25> 'int' lvalue ParmVar 0x12680ddf0 'step' 'int'         |   |-WhileStmt 0x126827d30 <line:19:13, line:23:13>         |   | |-BinaryOperator 0x126827a40 <line:19:20, col:36> 'int' contains-errors '>='         |   | | |-BinaryOperator 0x126827a00 <col:20, col:27> '<dependent type>' contains-errors '-'         |   | | | |-RecoveryExpr 0x1268279c0 <col:20> '<dependent type>' contains-errors lvalue         |   | | | `-RecoveryExpr 0x1268279e0 <col:27> '<dependent type>' contains-errors lvalue         |   | | `-DeclRefExpr 0x126827a20 <col:36> 'int' contains-errors lvalue Var 0x12680e088 'max_run' 'int'         |   | `-CompoundStmt 0x126827d08 <col:45, line:23:13>         |   |   |-CallExpr 0x126827b68 <line:20:17, col:52> '<dependent type>' contains-errors         |   |   | |-DeclRefExpr 0x126827a60 <col:17> 'int ()' Function 0x126827578 'gp_fputc' 'int ()'         |   |   | |-BinaryOperator 0x126827b48 <col:26, col:33> '<dependent type>' contains-errors '+'         |   |   | | |-IntegerLiteral 0x126827a80 <col:26> 'int' 192         |   |   | | `-RecoveryExpr 0x126827b28 <col:33> '<dependent type>' contains-errors lvalue         |   |   | `-RecoveryExpr 0x126827ad8 <col:48> '<dependent type>' contains-errors lvalue         |   |   |-CallExpr 0x126827c40 <line:21:17, col:36> '<dependent type>' contains-errors         |   |   | |-DeclRefExpr 0x126827b98 <col:17> 'int ()' Function 0x126827578 'gp_fputc' 'int ()'         |   |   | |-RecoveryExpr 0x126827c20 <col:26> '<dependent type>' contains-errors lvalue         |   |   | `-RecoveryExpr 0x126827bd0 <col:32> '<dependent type>' contains-errors lvalue         |   |   `-CompoundAssignOperator 0x126827cd8 <line:22:17, col:26> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'         |   |     |-RecoveryExpr 0x126827c90 <col:17> '<dependent type>' contains-errors lvalue         |   |     | `-DeclRefExpr 0x126827c70 <col:17> 'const int *' lvalue Var 0x126827710 'start' 'const int *'         |   |     `-DeclRefExpr 0x126827cb8 <col:26> 'int' contains-errors lvalue Var 0x12680e088 'max_run' 'int'         |   `-IfStmt 0x126827ff8 <line:24:13, line:25:60>         |     |-BinaryOperator 0x126827e68 <line:24:17, col:41> 'int' contains-errors '||'         |     | |-BinaryOperator 0x126827d90 <col:17, col:24> 'int' contains-errors '>'         |     | | |-RecoveryExpr 0x126827d50 <col:17> '<dependent type>' contains-errors lvalue         |     | | `-RecoveryExpr 0x126827d70 <col:24> '<dependent type>' contains-errors lvalue         |     | `-BinaryOperator 0x126827e48 <col:33, col:41> 'int' contains-errors '>='         |     |   |-RecoveryExpr 0x126827e28 <col:33> '<dependent type>' contains-errors lvalue         |     |   `-IntegerLiteral 0x126827dc8 <col:41> 'int' 192         |     `-CallExpr 0x126827fc8 <line:25:17, col:60> '<dependent type>' contains-errors         |       |-DeclRefExpr 0x126827e88 <col:17> 'int ()' Function 0x126827578 'gp_fputc' 'int ()'         |       |-BinaryOperator 0x126827f88 <col:26, col:50> '<dependent type>' contains-errors '+'         |       | |-BinaryOperator 0x126827f48 <col:26, col:43> '<dependent type>' contains-errors '\/'         |       | | |-ParenExpr 0x126827f08 <col:26, col:39> '<dependent type>' contains-errors         |       | | | `-BinaryOperator 0x126827ee8 <col:27, col:34> '<dependent type>' contains-errors '-'         |       | | |   |-RecoveryExpr 0x126827ea8 <col:27> '<dependent type>' contains-errors lvalue         |       | | |   `-RecoveryExpr 0x126827ec8 <col:34> '<dependent type>' contains-errors lvalue         |       | | `-DeclRefExpr 0x126827f28 <col:43> 'int' lvalue ParmVar 0x12680ddf0 'step' 'int'         |       | `-IntegerLiteral 0x126827f68 <col:50> 'int' 193         |       `-RecoveryExpr 0x126827fa8 <col:56> '<dependent type>' contains-errors lvalue         `-CallExpr 0x126828120 <line:27:9, col:28> '<dependent type>' contains-errors           |-DeclRefExpr 0x126828078 <col:9> 'int ()' Function 0x126827578 'gp_fputc' 'int ()'           |-RecoveryExpr 0x126828100 <col:18> '<dependent type>' contains-errors lvalue           `-RecoveryExpr 0x1268280b0 <col:24> '<dependent type>' contains-errors lvalue ","19836":"`-FunctionDecl 0x1330280d0  col:4 implicit used abort 'void (void) __attribute__((noreturn))' extern   `-BuiltinAttr 0x133028178 <<invalid sloc>> Implicit 867 ","19850":"`-FunctionDecl 0x1469443e8  col:4 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x1469444e8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x146944550 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x1469445b8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x146944490 <<invalid sloc>> Implicit 900 ","19780":"`-FunctionDecl 0x12e928288  line:1:7 invalid problem_data_get_content_or_NULL 'char *(int *, const char *)'   |-ParmVarDecl 0x12e928128 <col:40, col:56> col:56 invalid problem_data 'int *'   |-ParmVarDecl 0x12e9281a8 <col:70, col:82> col:82 used key 'const char *'   `-CompoundStmt 0x12e941c98 <line:2:1, line:7:1>     |-DeclStmt 0x12e928718 <line:3:5, col:81>     | |-RecordDecl 0x12e928340 <col:5, col:12> col:12 struct problem_item     | `-VarDecl 0x12e9284a8 <col:5, col:80> col:26 used item 'struct problem_item *' cinit     |   `-CallExpr 0x12e9286d0 <col:33, col:80> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12e928670 <col:33> 'int ()' Function 0x12e9285b8 'problem_data_get_item_or_NULL' 'int ()'     |     |-RecoveryExpr 0x12e928690 <col:63> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12e9286b0 <col:77> 'const char *' lvalue ParmVar 0x12e9281a8 'key' 'const char *'     |-IfStmt 0x12e9287c8 <line:4:5, line:5:16>     | |-UnaryOperator 0x12e928768 <line:4:9, col:10> 'int' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12e928750 <col:10> 'struct problem_item *' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x12e928730 <col:10> 'struct problem_item *' contains-errors lvalue Var 0x12e9284a8 'item' 'struct problem_item *'     | `-ReturnStmt 0x12e9287b8 <line:5:9, col:16>     |   `-RecoveryExpr 0x12e928798 <col:16> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12e941c88 <line:6:5, col:18>       `-RecoveryExpr 0x12e941c60 <col:12, col:18> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x12e941800 <col:12> 'struct problem_item *' contains-errors lvalue Var 0x12e9284a8 'item' 'struct problem_item *' ","19742":"`-FunctionDecl 0x140924fe0  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x1409250e0 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x140925148 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x1409251b0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x140925088 <<invalid sloc>> Implicit 882 ","19512":"`-FunctionDecl 0x12980f358  line:1:19 file_list_cpu 'int (struct file *)' static inline   |-ParmVarDecl 0x12980f248 <col:33, col:46> col:46 file 'struct file *'   `-CompoundStmt 0x12982b218 <line:2:1, line:8:1>     `-ReturnStmt 0x12982b208 <line:6:2, col:26>       `-CallExpr 0x12982b1e8 <col:9, col:26> 'int'         `-ImplicitCastExpr 0x12982b1d0 <col:9> 'int (*)()' <FunctionToPointerDecay>           `-DeclRefExpr 0x12982b180 <col:9> 'int ()' Function 0x12982b0c8 'smp_processor_id' 'int ()' ","19415":"`-FunctionDecl 0x12a00ddf0  line:1:13 invalid jpc_dec_destroy 'void (int *)' static   |-ParmVarDecl 0x12a00dd28 <col:29, col:40> col:40 invalid dec 'int *'   `-CompoundStmt 0x12a027be0 <line:2:1, line:26:1>     |-IfStmt 0x12a00e128 <line:3:2, line:5:2>     | |-CXXDependentScopeMemberExpr 0x12a00dec0 <line:3:6, col:11> '<dependent type>' contains-errors lvalue ->cstate     | | `-RecoveryExpr 0x12a00dea0 <col:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12a00e110 <col:19, line:5:2>     |   `-CallExpr 0x12a00e0e8 <line:4:3, col:33> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12a00e060 <col:3> 'int ()' Function 0x12a00dfa8 'jpc_cstate_destroy' 'int ()'     |     `-CXXDependentScopeMemberExpr 0x12a00e0a0 <col:22, col:27> '<dependent type>' contains-errors lvalue ->cstate     |       `-RecoveryExpr 0x12a00e080 <col:22> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12a00e358 <line:6:2, line:8:2>     | |-CXXDependentScopeMemberExpr 0x12a00e168 <line:6:6, col:11> '<dependent type>' contains-errors lvalue ->pkthdrstreams     | | `-RecoveryExpr 0x12a00e148 <col:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12a00e340 <col:26, line:8:2>     |   `-CallExpr 0x12a00e318 <line:7:3, col:44> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12a00e290 <col:3> 'int ()' Function 0x12a00e1d8 'jpc_streamlist_destroy' 'int ()'     |     `-CXXDependentScopeMemberExpr 0x12a00e2d0 <col:26, col:31> '<dependent type>' contains-errors lvalue ->pkthdrstreams     |       `-RecoveryExpr 0x12a00e2b0 <col:26> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12a0275a8 <line:9:2, line:11:2>     | |-CXXDependentScopeMemberExpr 0x12a00e398 <line:9:6, col:11> '<dependent type>' contains-errors lvalue ->image     | | `-RecoveryExpr 0x12a00e378 <col:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12a027590 <col:18, line:11:2>     |   `-CallExpr 0x12a027568 <line:10:3, col:31> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12a0274e0 <col:3> 'int ()' Function 0x12a027428 'jas_image_destroy' 'int ()'     |     `-CXXDependentScopeMemberExpr 0x12a027520 <col:21, col:26> '<dependent type>' contains-errors lvalue ->image     |       `-RecoveryExpr 0x12a027500 <col:21> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12a0277d8 <line:13:2, line:15:2>     | |-CXXDependentScopeMemberExpr 0x12a0275e8 <line:13:6, col:11> '<dependent type>' contains-errors lvalue ->cp     | | `-RecoveryExpr 0x12a0275c8 <col:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12a0277c0 <col:15, line:15:2>     |   `-CallExpr 0x12a027798 <line:14:3, col:29> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12a027710 <col:3> 'int ()' Function 0x12a027658 'jpc_dec_cp_destroy' 'int ()'     |     `-CXXDependentScopeMemberExpr 0x12a027750 <col:22, col:27> '<dependent type>' contains-errors lvalue ->cp     |       `-RecoveryExpr 0x12a027730 <col:22> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12a027a08 <line:17:2, line:19:2>     | |-CXXDependentScopeMemberExpr 0x12a027818 <line:17:6, col:11> '<dependent type>' contains-errors lvalue ->cmpts     | | `-RecoveryExpr 0x12a0277f8 <col:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12a0279f0 <col:18, line:19:2>     |   `-CallExpr 0x12a0279c8 <line:18:3, col:22> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12a027940 <col:3> 'int ()' Function 0x12a027888 'jas_free' 'int ()'     |     `-CXXDependentScopeMemberExpr 0x12a027980 <col:12, col:17> '<dependent type>' contains-errors lvalue ->cmpts     |       `-RecoveryExpr 0x12a027960 <col:12> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12a027b58 <line:21:2, line:23:2>     | |-CXXDependentScopeMemberExpr 0x12a027a48 <line:21:6, col:11> '<dependent type>' contains-errors lvalue ->tiles     | | `-RecoveryExpr 0x12a027a28 <col:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12a027b40 <col:18, line:23:2>     |   `-CallExpr 0x12a027b18 <line:22:3, col:22> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12a027a90 <col:3> 'int ()' Function 0x12a027888 'jas_free' 'int ()'     |     `-CXXDependentScopeMemberExpr 0x12a027ad0 <col:12, col:17> '<dependent type>' contains-errors lvalue ->tiles     |       `-RecoveryExpr 0x12a027ab0 <col:12> '<dependent type>' contains-errors lvalue     `-CallExpr 0x12a027bb8 <line:25:2, col:14> '<dependent type>' contains-errors       |-DeclRefExpr 0x12a027b78 <col:2> 'int ()' Function 0x12a027888 'jas_free' 'int ()'       `-RecoveryExpr 0x12a027b98 <col:11> '<dependent type>' contains-errors lvalue ","19296":"`-FunctionDecl 0x14b008778  col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x14b008878 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x14b0088e0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x14b008948 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14b008820 <<invalid sloc>> Implicit 882 ","19729":"`-FunctionDecl 0x12d9281f8  line:1:20 invalid rsa_mgf1_decode 'int *(int *)' static   |-ParmVarDecl 0x12d928128 <col:36, col:48> col:48 invalid alg 'int *'   `-CompoundStmt 0x12d941ed8 <line:2:1, line:15:1>     |-DeclStmt 0x12d928360 <line:3:5, col:27>     | `-VarDecl 0x12d9282f8 <col:5, col:26> col:26 used p 'const unsigned char *'     |-DeclStmt 0x12d9283f8 <line:4:5, col:13>     | `-VarDecl 0x12d928390 <col:5, col:9> col:9 used plen 'int'     |-IfStmt 0x12d9284f0 <line:5:5, line:6:16>     | |-BinaryOperator 0x12d928488 <line:5:9, col:16> 'int' contains-errors '=='     | | |-RecoveryExpr 0x12d928410 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12d928468 <col:16> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12d9284e0 <line:6:9, col:16>     |   `-RecoveryExpr 0x12d9284c0 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12d9287e0 <line:7:5, line:8:16>     | |-BinaryOperator 0x12d928778 <line:7:9, col:40> 'int' contains-errors '!='     | | |-CallExpr 0x12d9286f8 <col:9, col:35> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x12d928670 <col:9> 'int ()' Function 0x12d9285b8 'OBJ_obj2nid' 'int ()'     | | | `-CXXDependentScopeMemberExpr 0x12d9286b0 <col:21, col:26> '<dependent type>' contains-errors lvalue ->algorithm     | | |   `-RecoveryExpr 0x12d928690 <col:21> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12d928758 <col:40> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12d9287d0 <line:8:9, col:16>     |   `-RecoveryExpr 0x12d9287b0 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12d941970 <line:9:5, line:10:16>     | |-BinaryOperator 0x12d941908 <line:9:9, col:33> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x12d941868 <col:9, col:25> '<dependent type>' contains-errors lvalue ->type     | | | `-CXXDependentScopeMemberExpr 0x12d941820 <col:9, col:14> '<dependent type>' contains-errors lvalue ->parameter     | | |   `-RecoveryExpr 0x12d941800 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12d9418e8 <col:33> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12d941960 <line:10:9, col:16>     |   `-RecoveryExpr 0x12d941940 <col:16> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12d941af0 <line:12:5, col:41> 'const unsigned char *' contains-errors '='     | |-DeclRefExpr 0x12d941990 <col:5> 'const unsigned char *' lvalue Var 0x12d9282f8 'p' 'const unsigned char *'     | `-CXXDependentScopeMemberExpr 0x12d941aa8 <col:9, col:41> '<dependent type>' contains-errors lvalue ->data     |   `-CXXDependentScopeMemberExpr 0x12d941a60 <col:9, col:31> '<dependent type>' contains-errors lvalue .sequence     |     `-CXXDependentScopeMemberExpr 0x12d941a18 <col:9, col:25> '<dependent type>' contains-errors lvalue ->value     |       `-CXXDependentScopeMemberExpr 0x12d9419d0 <col:9, col:14> '<dependent type>' contains-errors lvalue ->parameter     |         `-RecoveryExpr 0x12d9419b0 <col:9> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12d941c70 <line:13:5, col:44> 'int' contains-errors '='     | |-DeclRefExpr 0x12d941b10 <col:5> 'int' lvalue Var 0x12d928390 'plen' 'int'     | `-CXXDependentScopeMemberExpr 0x12d941c28 <col:12, col:44> '<dependent type>' contains-errors lvalue ->length     |   `-CXXDependentScopeMemberExpr 0x12d941be0 <col:12, col:34> '<dependent type>' contains-errors lvalue .sequence     |     `-CXXDependentScopeMemberExpr 0x12d941b98 <col:12, col:28> '<dependent type>' contains-errors lvalue ->value     |       `-CXXDependentScopeMemberExpr 0x12d941b50 <col:12, col:17> '<dependent type>' contains-errors lvalue ->parameter     |         `-RecoveryExpr 0x12d941b30 <col:12> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12d941ec8 <line:14:5, col:41>       `-CallExpr 0x12d941e90 <col:12, col:41> '<dependent type>' contains-errors         |-DeclRefExpr 0x12d941d70 <col:12> 'int ()' Function 0x12d941cb8 'd2i_X509_ALGOR' 'int ()'         |-RecoveryExpr 0x12d941e70 <col:27> '<dependent type>' contains-errors lvalue         |-UnaryOperator 0x12d941e00 <col:33, col:34> 'const unsigned char **' prefix '&' cannot overflow         | `-DeclRefExpr 0x12d941da8 <col:34> 'const unsigned char *' lvalue Var 0x12d9282f8 'p' 'const unsigned char *'         `-DeclRefExpr 0x12d941e18 <col:37> 'int' lvalue Var 0x12d928390 'plen' 'int' ","19886":"`-FunctionDecl 0x132928750  line:1:13 mwifiex_pcie_device_dump_work 'void (struct mwifiex_adapter *)' static   |-ParmVarDecl 0x132928648 <col:43, col:67> col:67 used adapter 'struct mwifiex_adapter *'   `-CompoundStmt 0x1329415d0 <line:2:1, line:14:1>     |-BinaryOperator 0x132940c98 <line:3:2, col:54> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x132940a80 <col:2, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x132940a48 <col:2> 'struct mwifiex_adapter *' lvalue ParmVar 0x132928648 'adapter' 'struct mwifiex_adapter *'     | `-CallExpr 0x132940c70 <col:26, col:54> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x132940bd0 <col:26> 'int ()' Function 0x132940b18 'vzalloc' 'int ()'     |   `-RecoveryExpr 0x132940c50 <col:34> '<dependent type>' contains-errors lvalue     |-IfStmt 0x132940fa0 <line:4:2, line:8:2>     | |-UnaryOperator 0x132940d30 <line:4:6, col:16> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x132940d18 <col:7, col:16> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x132940cf0 <col:7, col:16> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x132940cb8 <col:7> 'struct mwifiex_adapter *' lvalue ParmVar 0x132928648 'adapter' 'struct mwifiex_adapter *'     | `-CompoundStmt 0x132940f80 <col:30, line:8:2>     |   |-CallExpr 0x132940f38 <line:5:3, line:6:13> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x132940e28 <line:5:3> 'int ()' Function 0x132940d70 'mwifiex_dbg' 'int ()'     |   | |-DeclRefExpr 0x132940e48 <col:15> 'struct mwifiex_adapter *' lvalue ParmVar 0x132928648 'adapter' 'struct mwifiex_adapter *'     |   | |-RecoveryExpr 0x132940f18 <col:24> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x132940ec0 <line:6:8> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x132940f70 <line:7:3>     |-CallExpr 0x132941128 <line:10:2, col:31> 'int'     | |-ImplicitCastExpr 0x132941110 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1329410a0 <col:2> 'int ()' Function 0x132940fe8 'mwifiex_drv_info_dump' 'int ()'     | `-ImplicitCastExpr 0x132941150 <col:24> 'struct mwifiex_adapter *' <LValueToRValue>     |   `-DeclRefExpr 0x1329410c0 <col:24> 'struct mwifiex_adapter *' lvalue ParmVar 0x132928648 'adapter' 'struct mwifiex_adapter *'     |-CallExpr 0x1329412a0 <line:11:2, col:30> 'int'     | |-ImplicitCastExpr 0x132941288 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x132941248 <col:2> 'int ()' Function 0x132941190 'mwifiex_pcie_fw_dump' 'int ()'     | `-ImplicitCastExpr 0x1329412c8 <col:23> 'struct mwifiex_adapter *' <LValueToRValue>     |   `-DeclRefExpr 0x132941268 <col:23> 'struct mwifiex_adapter *' lvalue ParmVar 0x132928648 'adapter' 'struct mwifiex_adapter *'     |-CallExpr 0x132941418 <line:12:2, col:38> 'int'     | |-ImplicitCastExpr 0x132941400 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1329413c0 <col:2> 'int ()' Function 0x132941308 'mwifiex_prepare_fw_dump_info' 'int ()'     | `-ImplicitCastExpr 0x132941440 <col:31> 'struct mwifiex_adapter *' <LValueToRValue>     |   `-DeclRefExpr 0x1329413e0 <col:31> 'struct mwifiex_adapter *' lvalue ParmVar 0x132928648 'adapter' 'struct mwifiex_adapter *'     `-CallExpr 0x132941590 <line:13:2, col:36> 'int'       |-ImplicitCastExpr 0x132941578 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x132941538 <col:2> 'int ()' Function 0x132941480 'mwifiex_upload_device_dump' 'int ()'       `-ImplicitCastExpr 0x1329415b8 <col:29> 'struct mwifiex_adapter *' <LValueToRValue>         `-DeclRefExpr 0x132941558 <col:29> 'struct mwifiex_adapter *' lvalue ParmVar 0x132928648 'adapter' 'struct mwifiex_adapter *' ","19681":"`-FunctionDecl 0x12a921118  col:5 CImgException 'int ()'   `-CompoundStmt 0x12a921330 <col:21, col:62>     `-BinaryOperator 0x12a921310 <col:47, col:59> '<dependent type>' contains-errors '='       |-UnaryOperator 0x12a9212f8 <col:47, col:48> '<dependent type>' contains-errors prefix '*' cannot overflow       | `-ImplicitCastExpr 0x12a9212e0 <col:48> '<dependent type>' contains-errors <LValueToRValue>       |   `-RecoveryExpr 0x12a9212c0 <col:48> '<dependent type>' contains-errors lvalue       `-IntegerLiteral 0x12a921280 <col:59> 'int' 0 ","19896":"`-FunctionDecl 0x13b941800  col:9 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x13b941900 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x13b9418a8 <<invalid sloc>> Implicit 873 ","20201":"`-FunctionDecl 0x12b013880  line:1:13 invalid receive_packet 'void (int *, int *)' static   |-ParmVarDecl 0x12b013728 <col:28, col:36> col:36 invalid n 'int *'   |-ParmVarDecl 0x12b0137a8 <col:39, col:53> col:53 invalid packet 'int *'   `-CompoundStmt 0x12b032e20 <col:61, line:6:1>     |-CallExpr 0x12b013b10 <line:2:2, col:17> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12b013a90 <col:2> 'int ()' Function 0x12b0139d8 'ifdebug' 'int ()'     | `-RecoveryExpr 0x12b013af0 <col:10> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12b032c68 <col:19, line:3:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12b013c18 <line:2:19> 'int ()' Function 0x12b013b60 'logger' 'int ()'     | |-RecoveryExpr 0x12b032c48 <col:26> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x12b013c90 <col:37> 'char[4]' lvalue \"STR\"     | |-CXXDependentScopeMemberExpr 0x12b013cd0 <line:3:7, col:15> '<dependent type>' contains-errors lvalue ->len     | | `-RecoveryExpr 0x12b013cb0 <col:7> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x12b013d38 <col:20, col:23> '<dependent type>' contains-errors lvalue ->name     | | `-RecoveryExpr 0x12b013d18 <col:20> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x12b013da0 <col:29, col:32> '<dependent type>' contains-errors lvalue ->hostname     |   `-RecoveryExpr 0x12b013d80 <col:29> '<dependent type>' contains-errors lvalue     `-CallExpr 0x12b032df0 <line:5:2, col:17> '<dependent type>' contains-errors       |-DeclRefExpr 0x12b032d90 <col:2> 'int ()' Function 0x12b032cd8 'route' 'int ()'       |-RecoveryExpr 0x12b032db0 <col:8> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x12b032dd0 <col:11> '<dependent type>' contains-errors lvalue ","19236":"`-FunctionDecl 0x14a028820  col:7 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x14a028920 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x14a028988 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x14a0288c8 <<invalid sloc>> Implicit 887 ","20152":"`-FunctionDecl 0x13680de38  line:1:12 do_vm86_irq_handling 'int (int, int)' static   |-ParmVarDecl 0x13680dcd8 <col:33, col:37> col:37 used subfunction 'int'   |-ParmVarDecl 0x13680dd58 <col:50, col:54> col:54 used irqnumber 'int'   `-CompoundStmt 0x136122720 <line:2:1, line:33:1>     |-DeclStmt 0x13680dfb8 <line:3:2, col:9>     | `-VarDecl 0x13680df50 <col:2, col:6> col:6 used ret 'int'     `-SwitchStmt 0x13680e008 <line:4:2, line:31:2>       |-ImplicitCastExpr 0x13680dff0 <line:4:10> 'int' <LValueToRValue>       | `-DeclRefExpr 0x13680dfd0 <col:10> 'int' lvalue ParmVar 0x13680dcd8 'subfunction' 'int'       `-CompoundStmt 0x1361226f0 <col:23, line:31:2>         |-CompoundStmt 0x13680e248 <line:5:32, line:7:3>         | `-ReturnStmt 0x13680e238 <line:6:4, col:38>         |   `-CallExpr 0x13680e1f8 <col:11, col:38> 'int'         |     |-ImplicitCastExpr 0x13680e1e0 <col:11> 'int (*)()' <FunctionToPointerDecay>         |     | `-DeclRefExpr 0x13680e170 <col:11> 'int ()' Function 0x13680e0b8 'get_and_reset_irq' 'int ()'         |     `-ImplicitCastExpr 0x13680e220 <col:29> 'int' <LValueToRValue>         |       `-DeclRefExpr 0x13680e190 <col:29> 'int' lvalue ParmVar 0x13680dd58 'irqnumber' 'int'         |-CompoundStmt 0x13680e2c0 <line:8:27, line:10:3>         | `-ReturnStmt 0x13680e2b0 <line:9:4, col:11>         |   `-RecoveryExpr 0x13680e290 <col:11> '<dependent type>' contains-errors lvalue         |-CompoundStmt 0x136828550 <line:11:26, line:23:3>         | |-DeclStmt 0x13680e3e8 <line:12:4, col:28>         | | `-VarDecl 0x13680e308 <col:4, col:27> col:8 used sig 'int' cinit         | |   `-BinaryOperator 0x13680e3c8 <col:14, col:27> 'int' '>>'         | |     |-ImplicitCastExpr 0x13680e3b0 <col:14> 'int' <LValueToRValue>         | |     | `-DeclRefExpr 0x13680e370 <col:14> 'int' lvalue ParmVar 0x13680dd58 'irqnumber' 'int'         | |     `-IntegerLiteral 0x13680e390 <col:27> 'int' 8         | |-DeclStmt 0x1368278f8 <line:13:4, col:29>         | | `-VarDecl 0x136827818 <col:4, col:26> col:8 used irq 'int' cinit         | |   `-BinaryOperator 0x1368278d8 <col:14, col:26> 'int' '&'         | |     |-ImplicitCastExpr 0x1368278c0 <col:14> 'int' <LValueToRValue>         | |     | `-DeclRefExpr 0x136827880 <col:14> 'int' lvalue ParmVar 0x13680dd58 'irqnumber' 'int'         | |     `-IntegerLiteral 0x1368278a0 <col:26> 'int' 255         | |-IfStmt 0x136827b70 <line:14:4, col:41>         | | |-UnaryOperator 0x136827ab0 <col:8, col:30> '<dependent type>' contains-errors prefix '!' cannot overflow         | | | `-CallExpr 0x136827a88 <col:9, col:30> '<dependent type>' contains-errors         | | |   |-DeclRefExpr 0x1368279f0 <col:9> 'int ()' Function 0x136827938 'capable' 'int ()'         | | |   `-RecoveryExpr 0x136827a68 <col:17> '<dependent type>' contains-errors lvalue         | | `-ReturnStmt 0x136827b60 <col:33, col:41>         | |   `-UnaryOperator 0x136827b48 <col:40, col:41> '<dependent type>' contains-errors prefix '-' cannot overflow         | |     `-ImplicitCastExpr 0x136827b30 <col:41> '<dependent type>' contains-errors <LValueToRValue>         | |       `-RecoveryExpr 0x136827b10 <col:41> '<dependent type>' contains-errors lvalue         | |-IfStmt 0x136827d80 <line:15:4, col:46>         | | |-RecoveryExpr 0x136827cb8 <col:8, col:35> '_Bool' contains-errors         | | `-ReturnStmt 0x136827d70 <col:38, col:46>         | |   `-UnaryOperator 0x136827d58 <col:45, col:46> '<dependent type>' contains-errors prefix '-' cannot overflow         | |     `-ImplicitCastExpr 0x136827d40 <col:46> '<dependent type>' contains-errors <LValueToRValue>         | |       `-RecoveryExpr 0x136827d20 <col:46> '<dependent type>' contains-errors lvalue         | |-IfStmt 0x136827fc0 <line:16:4, col:39>         | | |-CallExpr 0x136827ed8 <col:8, col:28> 'int'         | | | |-ImplicitCastExpr 0x136827ec0 <col:8> 'int (*)()' <FunctionToPointerDecay>         | | | | `-DeclRefExpr 0x136827e80 <col:8> 'int ()' Function 0x136827dc8 'invalid_vm86_irq' 'int ()'         | | | `-ImplicitCastExpr 0x136827f00 <col:25> 'int' <LValueToRValue>         | | |   `-DeclRefExpr 0x136827ea0 <col:25> 'int' lvalue Var 0x136827818 'irq' 'int'         | | `-ReturnStmt 0x136827fb0 <col:31, col:39>         | |   `-UnaryOperator 0x136827f98 <col:38, col:39> '<dependent type>' contains-errors prefix '-' cannot overflow         | |     `-ImplicitCastExpr 0x136827f80 <col:39> '<dependent type>' contains-errors <LValueToRValue>         | |       `-RecoveryExpr 0x136827f60 <col:39> '<dependent type>' contains-errors lvalue         | |-IfStmt 0x1368280e0 <line:17:4, col:36>         | | |-RecoveryExpr 0x136828018 <col:8, col:23> '_Bool' contains-errors         | | `-ReturnStmt 0x1368280d0 <col:28, col:36>         | |   `-UnaryOperator 0x1368280b8 <col:35, col:36> '<dependent type>' contains-errors prefix '-' cannot overflow         | |     `-ImplicitCastExpr 0x1368280a0 <col:36> '<dependent type>' contains-errors <LValueToRValue>         | |       `-RecoveryExpr 0x136828080 <col:36> '<dependent type>' contains-errors lvalue         | |-BinaryOperator 0x1368283e8 <line:18:4, col:62> 'int' contains-errors '='         | | |-DeclRefExpr 0x136828100 <col:4> 'int' lvalue Var 0x13680df50 'ret' 'int'         | | `-CallExpr 0x1368283a0 <col:10, col:62> '<dependent type>' contains-errors         | |   |-DeclRefExpr 0x136828200 <col:10> 'int ()' Function 0x136828148 'request_irq' 'int ()'         | |   |-DeclRefExpr 0x136828220 <col:22> 'int' lvalue Var 0x136827818 'irq' 'int'         | |   |-UnaryOperator 0x136828348 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow         | |   | `-RecoveryExpr 0x136828328 <col:28> '<dependent type>' contains-errors lvalue         | |   |-IntegerLiteral 0x136828270 <col:41> 'int' 0         | |   |-RecoveryExpr 0x136828360 <col:44> '<dependent type>' contains-errors lvalue         | |   `-RecoveryExpr 0x136828380 <col:58> '<dependent type>' contains-errors lvalue         | |-IfStmt 0x136828488 <line:19:4, col:20>         | | |-ImplicitCastExpr 0x136828428 <col:8> 'int' <LValueToRValue>         | | | `-DeclRefExpr 0x136828408 <col:8> 'int' lvalue Var 0x13680df50 'ret' 'int'         | | `-ReturnStmt 0x136828478 <col:13, col:20>         | |   `-ImplicitCastExpr 0x136828460 <col:20> 'int' <LValueToRValue>         | |     `-DeclRefExpr 0x136828440 <col:20> 'int' lvalue Var 0x13680df50 'ret' 'int'         | `-ReturnStmt 0x136828540 <line:22:4, col:11>         |   `-ImplicitCastExpr 0x136828528 <col:11> 'int' <LValueToRValue>         |     `-DeclRefExpr 0x136828508 <col:11> 'int' lvalue Var 0x136827818 'irq' 'int'         `-CompoundStmt 0x1361226c8 <line:24:24, line:30:3>           |-IfStmt 0x1368286b0 <line:26:4, col:42>           | |-RecoveryExpr 0x136828660 <col:8, col:30> '_Bool' contains-errors           | `-ReturnStmt 0x1368286a0 <col:35, col:42>           |   `-IntegerLiteral 0x136828680 <col:42> 'int' 0           |-CallExpr 0x136122658 <line:28:4, col:27> 'int'           | |-ImplicitCastExpr 0x136122640 <col:4> 'int (*)()' <FunctionToPointerDecay>           | | `-DeclRefExpr 0x136122600 <col:4> 'int ()' Function 0x136828738 'free_vm86_irq' 'int ()'           | `-ImplicitCastExpr 0x136122680 <col:18> 'int' <LValueToRValue>           |   `-DeclRefExpr 0x136122620 <col:18> 'int' lvalue ParmVar 0x13680dd58 'irqnumber' 'int'           `-ReturnStmt 0x1361226b8 <line:29:4, col:11>             `-IntegerLiteral 0x136122698 <col:11> 'int' 0 ","19566":"`-FunctionDecl 0x15680de88  line:1:5 invalid jp2_box_put 'int (int *, int *)'   |-ParmVarDecl 0x15680dd28 <col:17, col:28> col:28 referenced invalid box 'int *'   |-ParmVarDecl 0x15680dda8 <col:33, col:47> col:47 invalid out 'int *'   `-CompoundStmt 0x157009430 <line:2:1, line:51:1>     |-IfStmt 0x156123b48 <line:11:2, line:22:2>     | |-RecoveryExpr 0x15680e090 <line:11:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x156123b18 <col:16, line:22:2>     |   |-IfStmt 0x15680e3b8 <line:12:3, line:14:3>     |   | |-RecoveryExpr 0x15680e318 <line:12:7, col:45> '_Bool' contains-errors     |   | `-CompoundStmt 0x15680e3a0 <col:48, line:14:3>     |   |   `-GotoStmt 0x15680e388 <line:13:4, col:9> 'error' 0x15680e338     |   |-IfStmt 0x156123550 <line:15:3, line:19:3>     |   | |-CXXDependentScopeMemberExpr 0x156123248 <line:15:7, col:17> '<dependent type>' contains-errors lvalue ->putdata     |   | | `-CXXDependentScopeMemberExpr 0x156123200 <col:7, col:12> '<dependent type>' contains-errors lvalue ->ops     |   | |   `-RecoveryExpr 0x15680e3d8 <col:7> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x156123538 <col:26, line:19:3>     |   |   `-IfStmt 0x156123518 <line:16:4, line:18:4>     |   |     |-CallExpr 0x1561234b8 <line:16:8, col:43> '<dependent type>' contains-errors     |   |     | |-ParenExpr 0x156123478 <col:8, col:27> '<dependent type>' contains-errors     |   |     | | `-UnaryOperator 0x156123460 <col:9, col:20> '<dependent type>' contains-errors prefix '*' cannot overflow     |   |     | |   `-ImplicitCastExpr 0x156123448 <col:10, col:20> '<dependent type>' contains-errors <LValueToRValue>     |   |     | |     `-CXXDependentScopeMemberExpr 0x1561232f8 <col:10, col:20> '<dependent type>' contains-errors lvalue ->putdata     |   |     | |       `-CXXDependentScopeMemberExpr 0x1561232b0 <col:10, col:15> '<dependent type>' contains-errors lvalue ->ops     |   |     | |         `-RecoveryExpr 0x156123290 <col:10> '<dependent type>' contains-errors lvalue     |   |     | |-RecoveryExpr 0x156123390 <col:29> '<dependent type>' contains-errors lvalue     |   |     | `-RecoveryExpr 0x156123498 <col:34> '<dependent type>' contains-errors lvalue     |   |     `-CompoundStmt 0x156123500 <col:46, line:18:4>     |   |       `-GotoStmt 0x1561234e8 <line:17:5, col:10> 'error' 0x15680e338     |   |-BinaryOperator 0x156123970 <line:20:3, col:63> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x1561235b8 <col:3, col:8> '<dependent type>' contains-errors lvalue ->len     |   | | `-RecoveryExpr 0x156123590 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x156123570 <col:3> 'int *' lvalue ParmVar 0x15680dd28 'box' 'int *'     |   | `-BinaryOperator 0x156123950 <col:14, col:63> '<dependent type>' contains-errors '+'     |   |   |-CallExpr 0x1561238e0 <col:14, col:39> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x1561236e0 <col:14> 'int ()' Function 0x156123628 'jas_stream_tell' 'int ()'     |   |   | `-RecoveryExpr 0x1561238c0 <col:30> '<dependent type>' contains-errors lvalue     |   |   `-CallExpr 0x156123928 <col:43, col:63> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x156123820 <col:43> 'int ()' Function 0x156123768 'JP2_BOX_HDRLEN' 'int ()'     |   |     `-RecoveryExpr 0x156123908 <col:58> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x156123af0 <line:21:3, col:30> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x156123a70 <col:3> 'int ()' Function 0x1561239b8 'jas_stream_rewind' 'int ()'     |     `-RecoveryExpr 0x156123ad0 <col:21> '<dependent type>' contains-errors lvalue     |-IfStmt 0x156123e08 <line:24:2, line:26:2>     | |-RecoveryExpr 0x156123db8 <line:24:6, col:46> '_Bool' contains-errors     | `-CompoundStmt 0x156123df0 <col:49, line:26:2>     |   `-GotoStmt 0x156123dd8 <line:25:3, col:8> 'error' 0x15680e338     |-IfStmt 0x156123f30 <line:27:2, line:29:2>     | |-CallExpr 0x156123ed0 <line:27:6, col:34> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x156123e28 <col:6> 'int ()' Function 0x156123c38 'jp2_putuint32' 'int ()'     | | |-RecoveryExpr 0x156123e48 <col:20> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x156123e88 <col:25, col:30> '<dependent type>' contains-errors lvalue ->type     | |   `-RecoveryExpr 0x156123e68 <col:25> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x156123f18 <col:37, line:29:2>     |   `-GotoStmt 0x156123f00 <line:28:3, col:8> 'error' 0x15680e338     |-IfStmt 0x156124190 <line:30:2, line:34:2>     | |-RecoveryExpr 0x156123f50 <line:30:6> '_Bool' contains-errors     | `-CompoundStmt 0x156124178 <col:14, line:34:2>     |   `-IfStmt 0x156124158 <line:31:3, line:33:3>     |     |-CallExpr 0x1561240f8 <line:31:7, col:34> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x156124050 <col:7> 'int ()' Function 0x156123f98 'jp2_putuint64' 'int ()'     |     | |-RecoveryExpr 0x156124070 <col:21> '<dependent type>' contains-errors lvalue     |     | `-CXXDependentScopeMemberExpr 0x1561240b0 <col:26, col:31> '<dependent type>' contains-errors lvalue ->len     |     |   `-RecoveryExpr 0x156124090 <col:26> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x156124140 <col:37, line:33:3>     |       `-GotoStmt 0x156124128 <line:32:4, col:9> 'error' 0x15680e338     |-IfStmt 0x157009308 <line:36:2, line:41:2>     | |-RecoveryExpr 0x1561241b0 <line:36:6> '_Bool' contains-errors     | `-CompoundStmt 0x1570092f0 <col:16, line:41:2>     |   `-IfStmt 0x1570091d0 <line:37:3, line:39:3>     |     |-RecoveryExpr 0x157009180 <line:37:7, col:71> '_Bool' contains-errors     |     `-CompoundStmt 0x1570091b8 <col:74, line:39:3>     |       `-GotoStmt 0x1570091a0 <line:38:4, col:9> 'error' 0x15680e338     |-ReturnStmt 0x157009348 <line:43:2, col:9>     | `-IntegerLiteral 0x157009328 <col:9> 'int' 0     |-LabelStmt 0x1570093c8 <line:45:1, line:49:2> 'error'     | `-IfStmt 0x1570093a8 <line:47:2, line:49:2>     |   |-RecoveryExpr 0x157009358 <line:47:6> '_Bool' contains-errors     |   `-CompoundStmt 0x157009398 <col:17, line:49:2>     `-ReturnStmt 0x157009420 <line:50:2, col:10>       `-UnaryOperator 0x157009408 <col:9, col:10> 'int' prefix '-'         `-IntegerLiteral 0x1570093e8 <col:10> 'int' 1 ","19408":"`-FunctionDecl 0x14e808988  col:36 implicit used floor 'double (double)' extern   |-ParmVarDecl 0x14e808a88 <<invalid sloc>> <invalid sloc> 'double'   |-BuiltinAttr 0x14e808a30 <<invalid sloc>> Implicit 1079   |-NoThrowAttr 0x14e808af8 <col:36> Implicit   `-ConstAttr 0x14e808b20 <col:36> Implicit ","20199":"`-FunctionDecl 0x13e941800  line:1:13 invalid dns_server_hash_func 'void (const int *, struct siphash *)' static   |-ParmVarDecl 0x13e9280f0 <col:34, col:51> col:51 invalid s 'const int *'   |-ParmVarDecl 0x13e9286e8 <col:54, col:70> col:70 used state 'struct siphash *'   `-CompoundStmt 0x13e942120 <col:77, line:7:1>     |-CallExpr 0x13e941a50 <line:2:9, col:17> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13e941a10 <col:9> 'int ()' Function 0x13e941958 'assert' 'int ()'     | `-RecoveryExpr 0x13e941a30 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13e941cc0 <line:4:9, col:64> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13e941b58 <col:9> 'int ()' Function 0x13e941aa0 'siphash24_compress' 'int ()'     | |-UnaryOperator 0x13e941be0 <col:28, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x13e941b98 <col:29, col:32> '<dependent type>' contains-errors lvalue ->family     | |   `-RecoveryExpr 0x13e941b78 <col:29> '<dependent type>' contains-errors lvalue     | |-UnaryExprOrTypeTraitExpr 0x13e941c80 <col:40, col:56> 'unsigned long' contains-errors sizeof     | | `-ParenExpr 0x13e941c60 <col:46, col:56> '<dependent type>' contains-errors lvalue     | |   `-CXXDependentScopeMemberExpr 0x13e941c18 <col:47, col:50> '<dependent type>' contains-errors lvalue ->family     | |     `-RecoveryExpr 0x13e941bf8 <col:47> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x13e941ca0 <col:59> 'struct siphash *' lvalue ParmVar 0x13e9286e8 'state' 'struct siphash *'     |-CallExpr 0x13e941f48 <line:5:9, col:78> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13e941cf8 <col:9> 'int ()' Function 0x13e941aa0 'siphash24_compress' 'int ()'     | |-UnaryOperator 0x13e941d80 <col:28, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x13e941d38 <col:29, col:32> '<dependent type>' contains-errors lvalue ->address     | |   `-RecoveryExpr 0x13e941d18 <col:29> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x13e941f00 <col:41, col:70> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x13e941e78 <col:41> 'int ()' Function 0x13e941dc0 'FAMILY_ADDRESS_SIZE' 'int ()'     | | `-CXXDependentScopeMemberExpr 0x13e941eb8 <col:61, col:64> '<dependent type>' contains-errors lvalue ->family     | |   `-RecoveryExpr 0x13e941e98 <col:61> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x13e941f28 <col:73> 'struct siphash *' lvalue ParmVar 0x13e9286e8 'state' 'struct siphash *'     `-CallExpr 0x13e9420e8 <line:6:9, col:66> '<dependent type>' contains-errors       |-DeclRefExpr 0x13e941f80 <col:9> 'int ()' Function 0x13e941aa0 'siphash24_compress' 'int ()'       |-UnaryOperator 0x13e942008 <col:28, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow       | `-CXXDependentScopeMemberExpr 0x13e941fc0 <col:29, col:32> '<dependent type>' contains-errors lvalue ->ifindex       |   `-RecoveryExpr 0x13e941fa0 <col:29> '<dependent type>' contains-errors lvalue       |-UnaryExprOrTypeTraitExpr 0x13e9420a8 <col:41, col:58> 'unsigned long' contains-errors sizeof       | `-ParenExpr 0x13e942088 <col:47, col:58> '<dependent type>' contains-errors lvalue       |   `-CXXDependentScopeMemberExpr 0x13e942040 <col:48, col:51> '<dependent type>' contains-errors lvalue ->ifindex       |     `-RecoveryExpr 0x13e942020 <col:48> '<dependent type>' contains-errors lvalue       `-DeclRefExpr 0x13e9420c8 <col:61> 'struct siphash *' lvalue ParmVar 0x13e9286e8 'state' 'struct siphash *' ","19588":"`-FunctionDecl 0x126026cb0  col:3 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern   |-ParmVarDecl 0x126026db0 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x126026e18 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-ParmVarDecl 0x126026e80 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x126026d58 <<invalid sloc>> Implicit 905   `-FormatAttr 0x126026f00 <col:3> Implicit printf 3 4 ","20080":"`-FunctionDecl 0x13480e350  line:1:13 igmp6_group_added 'void (struct ifmcaddr6 *)' static   |-ParmVarDecl 0x13480e248 <col:31, col:49> col:49 used mc 'struct ifmcaddr6 *'   `-CompoundStmt 0x13301e468 <line:2:1, line:30:1>     |-DeclStmt 0x1348268e0 <line:3:2, col:40>     | |-RecordDecl 0x134826648 <col:2, col:9> col:9 struct net_device     | `-VarDecl 0x1348267b8 <col:2, col:37> col:21 used dev 'struct net_device *' cinit     |   `-CXXDependentScopeMemberExpr 0x134826880 <col:27, col:37> '<dependent type>' contains-errors lvalue ->dev     |     `-RecoveryExpr 0x134826858 <col:27, col:31> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x134826820 <col:27> 'struct ifmcaddr6 *' lvalue ParmVar 0x13480e248 'mc' 'struct ifmcaddr6 *'     |-DeclStmt 0x1348269a0 <line:4:2, col:24>     | `-VarDecl 0x134826938 <col:2, col:7> col:7 invalid buf 'char'     |-IfStmt 0x134826c18 <line:6:2, line:8:3>     | |-BinaryOperator 0x134826be8 <line:6:6, line:7:6> 'int' contains-errors '<'     | | |-CallExpr 0x134826b68 <line:6:6, col:38> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x134826ad0 <col:6> 'int ()' Function 0x134826a18 'IPV6_ADDR_MC_SCOPE' 'int ()'     | | | `-UnaryOperator 0x134826b50 <col:25, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-RecoveryExpr 0x134826b28 <col:26, col:30> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x134826af0 <col:26> 'struct ifmcaddr6 *' lvalue ParmVar 0x13480e248 'mc' 'struct ifmcaddr6 *'     | | `-RecoveryExpr 0x134826bc8 <line:7:6> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x134826c08 <line:8:3>     |-IfStmt 0x1348271f0 <line:10:2, line:14:2>     | |-RecoveryExpr 0x134826cd0 <line:10:6, col:32> '_Bool' contains-errors     | `-CompoundStmt 0x1348271d0 <col:35, line:14:2>     |   |-CompoundAssignOperator 0x134826db8 <line:11:3, col:20> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   | |-RecoveryExpr 0x134826d28 <col:3, col:7> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x134826cf0 <col:3> 'struct ifmcaddr6 *' lvalue ParmVar 0x13480e248 'mc' 'struct ifmcaddr6 *'     |   | `-RecoveryExpr 0x134826d98 <col:20> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x1348271b0 <line:12:3, line:13:23>     |     |-BinaryOperator 0x134827020 <line:12:7, col:51> 'int' contains-errors '=='     |     | |-CallExpr 0x134826fc0 <col:7, col:46> '<dependent type>' contains-errors     |     | | |-DeclRefExpr 0x134826ec8 <col:7> 'int ()' Function 0x134826e10 'ndisc_mc_map' 'int ()'     |     | | |-UnaryOperator 0x134826f48 <col:20, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | | | `-RecoveryExpr 0x134826f20 <col:21, col:25> '<dependent type>' contains-errors lvalue     |     | | |   `-DeclRefExpr 0x134826ee8 <col:21> 'struct ifmcaddr6 *' lvalue ParmVar 0x13480e248 'mc' 'struct ifmcaddr6 *'     |     | | |-RecoveryExpr 0x134826f60 <col:35> '<dependent type>' contains-errors lvalue     |     | | |-DeclRefExpr 0x134826f80 <col:40> 'struct net_device *' contains-errors lvalue Var 0x1348267b8 'dev' 'struct net_device *'     |     | | `-IntegerLiteral 0x134826fa0 <col:45> 'int' 0     |     | `-IntegerLiteral 0x134827000 <col:51> 'int' 0     |     `-CallExpr 0x134827180 <line:13:4, col:23> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x134827120 <col:4> 'int ()' Function 0x134827068 'dev_mc_add' 'int ()'     |       |-DeclRefExpr 0x134827140 <col:15> 'struct net_device *' contains-errors lvalue Var 0x1348267b8 'dev' 'struct net_device *'     |       `-RecoveryExpr 0x134827160 <col:20> '<dependent type>' contains-errors lvalue     |-IfStmt 0x134827370 <line:16:2, line:17:3>     | |-RecoveryExpr 0x134827340 <line:16:6, col:61> '_Bool' contains-errors     | `-ReturnStmt 0x134827360 <line:17:3>     |-IfStmt 0x13301e0f8 <line:19:2, line:22:2>     | |-CallExpr 0x1348274f0 <line:19:6, col:29> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x134827470 <col:6> 'int ()' Function 0x1348273b8 'mld_in_v1_mode' 'int ()'     | | `-RecoveryExpr 0x1348274c8 <col:21, col:25> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x134827490 <col:21> 'struct ifmcaddr6 *' lvalue ParmVar 0x13480e248 'mc' 'struct ifmcaddr6 *'     | `-CompoundStmt 0x13301e0d8 <col:32, line:22:2>     |   |-CallExpr 0x13301e088 <line:20:3, col:22> 'int'     |   | |-ImplicitCastExpr 0x13301e070 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x13301e000 <col:3> 'int ()' Function 0x134827540 'igmp6_join_group' 'int ()'     |   | `-ImplicitCastExpr 0x13301e0b0 <col:20> 'struct ifmcaddr6 *' <LValueToRValue>     |   |   `-DeclRefExpr 0x13301e020 <col:20> 'struct ifmcaddr6 *' lvalue ParmVar 0x13480e248 'mc' 'struct ifmcaddr6 *'     |   `-ReturnStmt 0x13301e0c8 <line:21:3>     |-IfStmt 0x13301e2c0 <line:26:2, line:27:31>     | |-RecoveryExpr 0x13301e178 <line:26:6, col:24> '_Bool' contains-errors     | `-BinaryOperator 0x13301e2a0 <line:27:3, col:31> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x13301e1d0 <col:3, col:7> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x13301e198 <col:3> 'struct ifmcaddr6 *' lvalue ParmVar 0x13480e248 'mc' 'struct ifmcaddr6 *'     |   `-CXXDependentScopeMemberExpr 0x13301e258 <col:21, col:31> '<dependent type>' contains-errors lvalue ->mc_qrv     |     `-RecoveryExpr 0x13301e230 <col:21, col:25> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13301e1f8 <col:21> 'struct ifmcaddr6 *' lvalue ParmVar 0x13480e248 'mc' 'struct ifmcaddr6 *'     `-CallExpr 0x13301e440 <line:29:2, col:24> '<dependent type>' contains-errors       |-DeclRefExpr 0x13301e3c0 <col:2> 'int ()' Function 0x13301e308 'mld_ifc_event' 'int ()'       `-RecoveryExpr 0x13301e418 <col:16, col:20> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x13301e3e0 <col:16> 'struct ifmcaddr6 *' lvalue ParmVar 0x13480e248 'mc' 'struct ifmcaddr6 *' ","20134":"`-FunctionDecl 0x1579418d8  line:1:12 invalid stimer_set_config 'int (struct kvm_vcpu_hv_stimer *, int, int)' static   |-ParmVarDecl 0x157928648 <col:30, col:57> col:57 used stimer 'struct kvm_vcpu_hv_stimer *'   |-ParmVarDecl 0x1579286e0 <col:65, col:69> col:69 invalid config 'int'   |-ParmVarDecl 0x157928760 <line:2:9, col:14> col:14 invalid host 'int'   `-CompoundStmt 0x157943f28 <line:3:1, line:31:1>     |-DeclStmt 0x157941d80 <line:4:2, line:5:55>     | |-RecordDecl 0x157941998 <line:4:2, col:8> col:8 union hv_stimer_config     | |-VarDecl 0x157941a98 <col:2, col:25> col:25 referenced invalid new_config 'union hv_stimer_config'     | `-VarDecl 0x157941bc8 <col:2, line:5:3> col:3 invalid old_config 'union hv_stimer_config'     |-DeclStmt 0x1579421c8 <line:6:2, col:51>     | |-RecordDecl 0x157941d98 <col:2, col:9> col:9 struct kvm_vcpu     | `-VarDecl 0x157941f08 <col:2, col:50> col:19 used vcpu 'struct kvm_vcpu *' cinit     |   `-ImplicitCastExpr 0x157942198 <col:26, col:50> 'struct kvm_vcpu *' <IntegralToPointer>     |     `-CallExpr 0x157942158 <col:26, col:50> 'int'     |       |-ImplicitCastExpr 0x157942140 <col:26> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x1579420d0 <col:26> 'int ()' Function 0x157942018 'hv_stimer_to_vcpu' 'int ()'     |       `-ImplicitCastExpr 0x157942180 <col:44> 'struct kvm_vcpu_hv_stimer *' <LValueToRValue>     |         `-DeclRefExpr 0x1579420f0 <col:44> 'struct kvm_vcpu_hv_stimer *' lvalue ParmVar 0x157928648 'stimer' 'struct kvm_vcpu_hv_stimer *'     |-DeclStmt 0x157942558 <line:7:2, col:48>     | |-RecordDecl 0x1579421e0 <col:2, col:9> col:9 struct kvm_vcpu_hv     | `-VarDecl 0x157942348 <col:2, col:47> col:22 used hv_vcpu 'struct kvm_vcpu_hv *' cinit     |   `-ImplicitCastExpr 0x157942528 <col:32, col:47> 'struct kvm_vcpu_hv *' <IntegralToPointer>     |     `-CallExpr 0x1579424e8 <col:32, col:47> 'int'     |       |-ImplicitCastExpr 0x1579424d0 <col:32> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x157942490 <col:32> 'int ()' Function 0x1579423d8 'to_hv_vcpu' 'int ()'     |       `-ImplicitCastExpr 0x157942510 <col:43> 'struct kvm_vcpu *' <LValueToRValue>     |         `-DeclRefExpr 0x1579424b0 <col:43> 'struct kvm_vcpu *' lvalue Var 0x157941f08 'vcpu' 'struct kvm_vcpu *'     |-DeclStmt 0x157942f80 <line:8:2, col:53>     | |-RecordDecl 0x157942570 <col:2, col:9> col:9 struct kvm_vcpu_hv_synic     | `-VarDecl 0x1579426d8 <col:2, col:52> col:28 used synic 'struct kvm_vcpu_hv_synic *' cinit     |   `-ImplicitCastExpr 0x157942f50 <col:36, col:52> 'struct kvm_vcpu_hv_synic *' <IntegralToPointer>     |     `-CallExpr 0x157942f10 <col:36, col:52> 'int'     |       |-ImplicitCastExpr 0x157942ef8 <col:36> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x157942eb8 <col:36> 'int ()' Function 0x157942e00 'to_hv_synic' 'int ()'     |       `-ImplicitCastExpr 0x157942f38 <col:48> 'struct kvm_vcpu *' <LValueToRValue>     |         `-DeclRefExpr 0x157942ed8 <col:48> 'struct kvm_vcpu *' lvalue Var 0x157941f08 'vcpu' 'struct kvm_vcpu *'     |-IfStmt 0x1579430c8 <line:10:2, line:11:10>     | |-BinaryOperator 0x157943078 <line:10:6, col:25> 'int' contains-errors '&&'     | | |-UnaryOperator 0x157943010 <col:6, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x157942ff8 <col:7, col:14> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-RecoveryExpr 0x157942fd0 <col:7, col:14> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x157942f98 <col:7> 'struct kvm_vcpu_hv_synic *' lvalue Var 0x1579426d8 'synic' 'struct kvm_vcpu_hv_synic *'     | | `-UnaryOperator 0x157943060 <col:24, col:25> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x157943048 <col:25> '<dependent type>' contains-errors <LValueToRValue>     | |     `-RecoveryExpr 0x157943028 <col:25> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1579430b8 <line:11:3, col:10>     |   `-IntegerLiteral 0x157943098 <col:10> 'int' 1     |-IfStmt 0x157943470 <line:13:2, line:16:10>     | |-RecoveryExpr 0x157943420 <line:13:6, line:15:42> '_Bool' contains-errors     | `-ReturnStmt 0x157943460 <line:16:3, col:10>     |   `-IntegerLiteral 0x157943440 <col:10> 'int' 1     |-CallExpr 0x1579436f0 <line:18:2, line:19:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x157943570 <line:18:2> 'int ()' Function 0x1579434b8 'trace_kvm_hv_stimer_set_config' 'int ()'     | |-RecoveryExpr 0x157943628 <col:33, col:60> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x1579435e8 <col:33, col:57> 'int'     | |   |-ImplicitCastExpr 0x1579435d0 <col:33> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x157943590 <col:33> 'int ()' Function 0x157942018 'hv_stimer_to_vcpu' 'int ()'     | |   `-ImplicitCastExpr 0x157943610 <col:51> 'struct kvm_vcpu_hv_stimer *' <LValueToRValue>     | |     `-DeclRefExpr 0x1579435b0 <col:51> 'struct kvm_vcpu_hv_stimer *' lvalue ParmVar 0x157928648 'stimer' 'struct kvm_vcpu_hv_stimer *'     | |-RecoveryExpr 0x157943688 <line:19:12, col:20> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x157943650 <col:12> 'struct kvm_vcpu_hv_stimer *' lvalue ParmVar 0x157928648 'stimer' 'struct kvm_vcpu_hv_stimer *'     | |-RecoveryExpr 0x1579436b0 <col:27> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1579436d0 <col:35> '<dependent type>' contains-errors lvalue     |-CallExpr 0x157943868 <line:21:2, col:23> 'int'     | |-ImplicitCastExpr 0x157943850 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x157943810 <col:2> 'int ()' Function 0x157943758 'stimer_cleanup' 'int ()'     | `-ImplicitCastExpr 0x157943890 <col:17> 'struct kvm_vcpu_hv_stimer *' <LValueToRValue>     |   `-DeclRefExpr 0x157943830 <col:17> 'struct kvm_vcpu_hv_stimer *' lvalue ParmVar 0x157928648 'stimer' 'struct kvm_vcpu_hv_stimer *'     |-IfStmt 0x157943b60 <line:22:2, line:24:23>     | |-BinaryOperator 0x157943a70 <line:22:6, line:23:53> 'int' contains-errors '&&'     | | |-BinaryOperator 0x1579439a8 <line:22:6, line:23:18> 'int' contains-errors '&&'     | | | |-CXXDependentScopeMemberExpr 0x1579438c8 <line:22:6, col:17> '<dependent type>' contains-errors lvalue .enable     | | | | `-RecoveryExpr 0x1579438a8 <col:6> '<dependent type>' contains-errors lvalue     | | | `-UnaryOperator 0x157943990 <line:23:6, col:18> '<dependent type>' contains-errors prefix '!' cannot overflow     | | |   `-ImplicitCastExpr 0x157943978 <col:7, col:18> '<dependent type>' contains-errors <LValueToRValue>     | | |     `-CXXDependentScopeMemberExpr 0x157943930 <col:7, col:18> '<dependent type>' contains-errors lvalue .direct_mode     | | |       `-RecoveryExpr 0x157943910 <col:7> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x157943a50 <col:33, col:53> 'int' contains-errors '=='     | |   |-CXXDependentScopeMemberExpr 0x1579439e8 <col:33, col:44> '<dependent type>' contains-errors lvalue .sintx     | |   | `-RecoveryExpr 0x1579439c8 <col:33> '<dependent type>' contains-errors lvalue     | |   `-IntegerLiteral 0x157943a30 <col:53> 'int' 0     | `-BinaryOperator 0x157943b40 <line:24:3, col:23> '<dependent type>' contains-errors '='     |   |-CXXDependentScopeMemberExpr 0x157943ad8 <col:3, col:14> '<dependent type>' contains-errors lvalue .enable     |   | `-RecoveryExpr 0x157943ab0 <col:3> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x157943a90 <col:3> 'union hv_stimer_config' lvalue Var 0x157941a98 'new_config' 'union hv_stimer_config'     |   `-IntegerLiteral 0x157943b20 <col:23> 'int' 0     |-BinaryOperator 0x157943c90 <line:25:2, col:40> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x157943be0 <col:2, col:17> '<dependent type>' contains-errors lvalue .as_uint64     | | `-RecoveryExpr 0x157943bb8 <col:2, col:10> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x157943b80 <col:2> 'struct kvm_vcpu_hv_stimer *' lvalue ParmVar 0x157928648 'stimer' 'struct kvm_vcpu_hv_stimer *'     | `-CXXDependentScopeMemberExpr 0x157943c48 <col:29, col:40> '<dependent type>' contains-errors lvalue .as_uint64     |   `-RecoveryExpr 0x157943c28 <col:29> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x157943f18 <line:30:2, col:9>       `-IntegerLiteral 0x157943ef8 <col:9> 'int' 0 ","19800":"`-FunctionDecl 0x15a9282b8  line:1:12 invalid spl_dllist_object_count_elements 'int (int *, long *)' static   |-ParmVarDecl 0x15a928128 <col:45, col:51> col:51 invalid object 'int *'   |-ParmVarDecl 0x15a9281d8 <col:59, col:65> col:65 used count 'long *'   `-CompoundStmt 0x15b00a228 <line:2:1, line:22:1>     `-IfStmt 0x15b00a0b8 <line:5:2, line:18:2>       |-CXXDependentScopeMemberExpr 0x15a928420 <line:5:6, col:14> '<dependent type>' contains-errors lvalue ->fptr_count       | `-RecoveryExpr 0x15a928400 <col:6> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x15b00a090 <col:26, line:18:2>         |-CallExpr 0x15b0095b0 <line:7:3, col:90> '<dependent type>' contains-errors         | |-DeclRefExpr 0x15a9285e0 <col:3> 'int ()' Function 0x15a928528 'zend_call_method_with_0_params' 'int ()'         | |-UnaryOperator 0x15a928620 <col:34, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow         | | `-RecoveryExpr 0x15a928600 <col:35> '<dependent type>' contains-errors lvalue         | |-CXXDependentScopeMemberExpr 0x15b0094b0 <col:43, col:55> '<dependent type>' contains-errors lvalue .ce         | | `-CXXDependentScopeMemberExpr 0x15b009468 <col:43, col:51> '<dependent type>' contains-errors lvalue ->std         | |   `-RecoveryExpr 0x15b009448 <col:43> '<dependent type>' contains-errors lvalue         | |-UnaryOperator 0x15b009560 <col:59, col:68> '<dependent type>' contains-errors prefix '&' cannot overflow         | | `-CXXDependentScopeMemberExpr 0x15b009518 <col:60, col:68> '<dependent type>' contains-errors lvalue ->fptr_count         | |   `-RecoveryExpr 0x15b0094f8 <col:60> '<dependent type>' contains-errors lvalue         | |-StringLiteral 0x15a9287a0 <col:80> 'char[4]' lvalue \"STR\"         | `-UnaryOperator 0x15b009598 <col:87, col:88> '<dependent type>' contains-errors prefix '&' cannot overflow         |   `-RecoveryExpr 0x15b009578 <col:88> '<dependent type>' contains-errors lvalue         |-IfStmt 0x15b009fc8 <line:8:3, line:15:3>         | |-RecoveryExpr 0x15b009610 <line:8:7> '<dependent type>' contains-errors lvalue         | `-CompoundStmt 0x15b009fa0 <col:11, line:15:3>         |   |-CallExpr 0x15b009850 <line:9:4, col:33> '<dependent type>' contains-errors         |   | |-DeclRefExpr 0x15b009710 <col:4> 'int ()' Function 0x15b009658 'zval_ptr_dtor' 'int ()'         |   | `-UnaryOperator 0x15b009838 <col:18, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow         |   |   `-CXXDependentScopeMemberExpr 0x15b0097f0 <col:19, col:27> '<dependent type>' contains-errors lvalue ->retval         |   |     `-RecoveryExpr 0x15b0097d0 <col:19> '<dependent type>' contains-errors lvalue         |   |-CallExpr 0x15b009a68 <line:10:4, col:32> '<dependent type>' contains-errors         |   | |-DeclRefExpr 0x15b009958 <col:4> 'int ()' Function 0x15b0098a0 'MAKE_STD_ZVAL' 'int ()'         |   | `-CXXDependentScopeMemberExpr 0x15b009a20 <col:18, col:26> '<dependent type>' contains-errors lvalue ->retval         |   |   `-RecoveryExpr 0x15b009a00 <col:18> '<dependent type>' contains-errors lvalue         |   `-CallExpr 0x15b009d10 <line:11:4, col:38> '<dependent type>' contains-errors         |     |-DeclRefExpr 0x15b009b70 <col:4> 'int ()' Function 0x15b009ab8 'ZVAL_ZVAL' 'int ()'         |     |-CXXDependentScopeMemberExpr 0x15b009ca8 <col:14, col:22> '<dependent type>' contains-errors lvalue ->retval         |     | `-RecoveryExpr 0x15b009c88 <col:14> '<dependent type>' contains-errors lvalue         |     |-RecoveryExpr 0x15b009cf0 <col:30> '<dependent type>' contains-errors lvalue         |     |-IntegerLiteral 0x15b009c08 <col:34> 'int' 1         |     `-IntegerLiteral 0x15b009c28 <col:37> 'int' 1         `-BinaryOperator 0x15b00a070 <line:16:3, col:12> 'long' '='           |-UnaryOperator 0x15b00a020 <col:3, col:4> 'long' lvalue prefix '*' cannot overflow           | `-ImplicitCastExpr 0x15b00a008 <col:4> 'long *' <LValueToRValue>           |   `-DeclRefExpr 0x15b009fe8 <col:4> 'long *' lvalue ParmVar 0x15a9281d8 'count' 'long *'           `-ImplicitCastExpr 0x15b00a058 <col:12> 'long' <IntegralCast>             `-IntegerLiteral 0x15b00a038 <col:12> 'int' 0 ","19815":"`-FunctionDecl 0x14b80dd90  line:1:13 compute_bandwidth 'void (void)' static   `-CompoundStmt 0x14c809878 <line:2:1, line:22:1>     |-DeclStmt 0x14b80df00 <line:3:5, col:23>     | `-VarDecl 0x14b80de98 <col:5, col:14> col:14 used bandwidth 'unsigned int'     |-DeclStmt 0x14b80df98 <line:4:5, col:10>     | `-VarDecl 0x14b80df30 <col:5, col:9> col:9 used i 'int'     `-ForStmt 0x14c809840 <line:7:5, line:21:5>       |-<<<NULL>>>       |-<<<NULL>>>       |-RecoveryExpr 0x14b80e090 <line:7:39> '<dependent type>' contains-errors lvalue       |-BinaryOperator 0x14b80e1d0 <col:47, col:64> '<dependent type>' contains-errors '='       | |-RecoveryExpr 0x14b80e148 <col:47> '<dependent type>' contains-errors lvalue       | `-CXXDependentScopeMemberExpr 0x14b80e188 <col:56, col:64> '<dependent type>' contains-errors lvalue ->next       |   `-RecoveryExpr 0x14b80e168 <col:56> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x14c809820 <col:70, line:21:5>         |-BinaryOperator 0x14b80e248 <line:8:9, col:21> 'unsigned int' '='         | |-DeclRefExpr 0x14b80e1f0 <col:9> 'unsigned int' lvalue Var 0x14b80de98 'bandwidth' 'unsigned int'         | `-ImplicitCastExpr 0x14b80e230 <col:21> 'unsigned int' <IntegralCast>         |   `-IntegerLiteral 0x14b80e210 <col:21> 'int' 0         `-ForStmt 0x14c8096e0 <line:9:9, line:19:9>           |-BinaryOperator 0x14b80e2a8 <line:9:13, col:15> 'int' '='           | |-DeclRefExpr 0x14b80e268 <col:13> 'int' lvalue Var 0x14b80df30 'i' 'int'           | `-IntegerLiteral 0x14b80e288 <col:15> 'int' 0           |-<<<NULL>>>           |-BinaryOperator 0x14b80e3d0 <col:17, col:27> 'int' contains-errors '<'           | |-DeclRefExpr 0x14b80e2c8 <col:17> 'int' lvalue Var 0x14b80df30 'i' 'int'           | `-CXXDependentScopeMemberExpr 0x14b80e388 <col:19, col:27> '<dependent type>' contains-errors lvalue ->nb_streams           |   `-RecoveryExpr 0x14b80e368 <col:19> '<dependent type>' contains-errors lvalue           |-UnaryOperator 0x14c809220 <col:38, col:39> 'int' postfix '++'           | `-DeclRefExpr 0x14c809200 <col:38> 'int' lvalue Var 0x14b80df30 'i' 'int'           `-CompoundStmt 0x14c8096c8 <col:43, line:19:9>             `-SwitchStmt 0x14c809440 <line:11:13, line:18:13>               |-CXXDependentScopeMemberExpr 0x14c8093f8 <line:11:20, col:31> '<dependent type>' contains-errors lvalue ->codec_type               | `-CXXDependentScopeMemberExpr 0x14c8093b0 <col:20, col:24> '<dependent type>' contains-errors lvalue ->codec               |   `-RecoveryExpr 0x14c809390 <col:20> '<dependent type>' contains-errors lvalue               `-CompoundStmt 0x14c8096a0 <col:43, line:18:13>                 |-CompoundAssignOperator 0x14c809640 <line:14:17, col:41> 'unsigned int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'                 | |-DeclRefExpr 0x14c809498 <col:17> 'unsigned int' lvalue Var 0x14b80de98 'bandwidth' 'unsigned int'                 | `-CXXDependentScopeMemberExpr 0x14c8095f8 <col:30, col:41> '<dependent type>' contains-errors lvalue ->bit_rate                 |   `-CXXDependentScopeMemberExpr 0x14c8095b0 <col:30, col:34> '<dependent type>' contains-errors lvalue ->codec                 |     `-RecoveryExpr 0x14c809590 <col:30> '<dependent type>' contains-errors lvalue                 |-BreakStmt 0x14c809670 <line:15:17>                 `-DefaultStmt 0x14c809680 <line:16:13, line:17:17>                   `-BreakStmt 0x14c809678 <col:17> ","19885":"`-FunctionDecl 0x13580ddf0  line:1:6 invalid void_box_del 'void (int *)'   |-ParmVarDecl 0x13580dd28 <col:19, col:27> col:27 invalid s 'int *'   `-CompoundStmt 0x13580e068 <line:2:1, line:4:1>     `-CallExpr 0x13580e040 <line:3:2, col:11> '<dependent type>' contains-errors       |-DeclRefExpr 0x13580e000 <col:2> 'int ()' Function 0x13580df48 'gf_free' 'int ()'       `-RecoveryExpr 0x13580e020 <col:10> '<dependent type>' contains-errors lvalue ","19549":"`-FunctionDecl 0x12a00e078  line:1:1 invalid flatpak_dir_get_deploy_data 'int (int *, int *, int, int *, int **)'   |-ParmVarDecl 0x12a00dd28 <col:30, col:49> col:49 invalid self 'int *'   |-ParmVarDecl 0x12a00dda8 <line:2:30, col:49> col:49 invalid ref 'int *'   |-ParmVarDecl 0x12a00de28 <line:3:30, col:49> col:49 used required_version 'int'   |-ParmVarDecl 0x12a00dea8 <line:4:30, col:49> col:49 invalid cancellable 'int *'   |-ParmVarDecl 0x12a00df60 <line:5:30, col:49> col:49 invalid error 'int **'   `-CompoundStmt 0x12b00a9b8 <line:6:1, line:26:1>     |-CallExpr 0x12a00e320 <line:7:3, col:18> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12a00e2a0 <col:3> 'int ()' Function 0x12a00e1e8 'g_autoptr' 'int ()'     | `-RecoveryExpr 0x12a00e300 <col:13> '<dependent type>' contains-errors lvalue     `-IfStmt 0x12b00a600 <line:10:3, line:15:5>       |-BinaryOperator 0x12b00a020 <line:10:7, col:21> 'int' contains-errors '=='       | |-RecoveryExpr 0x12b009fe0 <col:7> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x12b00a000 <col:21> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x12b00a5e8 <line:11:5, line:15:5>         `-CallExpr 0x12b00a5a0 <line:12:7, line:13:62> '<dependent type>' contains-errors           |-DeclRefExpr 0x12b00a120 <line:12:7> 'int ()' Function 0x12b00a068 'g_set_error' 'int ()'           |-RecoveryExpr 0x12b00a140 <col:20> '<dependent type>' contains-errors lvalue           |-RecoveryExpr 0x12b00a508 <col:27> '<dependent type>' contains-errors lvalue           |-RecoveryExpr 0x12b00a528 <col:42> '<dependent type>' contains-errors lvalue           |-CallExpr 0x12b00a560 <line:13:20, col:27> 'int'           | |-ImplicitCastExpr 0x12b00a548 <col:20> 'int (*)()' <FunctionToPointerDecay>           | | `-DeclRefExpr 0x12b00a270 <col:20> 'int ()' Function 0x12b00a1b8 '_' 'int ()'           | `-ImplicitCastExpr 0x12b00a588 <col:22> 'char *' <ArrayToPointerDecay>           |   `-StringLiteral 0x12b00a2d0 <col:22> 'char[4]' lvalue \"STR\"           `-CallExpr 0x12b00a498 <col:30, col:61> '<dependent type>' contains-errors             |-DeclRefExpr 0x12b00a458 <col:30> 'int ()' Function 0x12b00a3a0 'flatpak_decomposed_get_ref' 'int ()'             `-RecoveryExpr 0x12b00a478 <col:58> '<dependent type>' contains-errors lvalue ","19957":"`-FunctionDecl 0x123940c58  col:59 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x123940d58 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x123940d00 <<invalid sloc>> Implicit 873 ","19617":"`-FunctionDecl 0x1498311d0  line:1:13 invalid desc_read_cb 'void (struct gatt_db_attribute *, unsigned int, int, int, struct bt_att *, void *)' static   |-ParmVarDecl 0x149817c48 <col:26, col:52> col:52 used attrib 'struct gatt_db_attribute *'   |-ParmVarDecl 0x149817cc8 <line:2:6, col:19> col:19 used id 'unsigned int'   |-ParmVarDecl 0x149817d60 <col:23, col:32> col:32 invalid offset 'int'   |-ParmVarDecl 0x149830e00 <line:3:6, col:14> col:14 invalid opcode 'int'   |-ParmVarDecl 0x149830fd8 <col:22, col:37> col:37 used att 'struct bt_att *'   |-ParmVarDecl 0x149831058 <line:4:6, col:12> col:12 used user_data 'void *'   `-CompoundStmt 0x14a8eba98 <line:5:1, line:27:1>     |-DeclStmt 0x1498314e8 <line:6:2, col:40>     | |-RecordDecl 0x1498312a8 <col:2, col:9> col:9 struct external_desc     | `-VarDecl 0x149831418 <col:2, col:31> col:24 used desc 'struct external_desc *' cinit     |   `-ImplicitCastExpr 0x1498314b8 <col:31> 'struct external_desc *' <BitCast>     |     `-ImplicitCastExpr 0x1498314a0 <col:31> 'void *' <LValueToRValue>     |       `-DeclRefExpr 0x149831480 <col:31> 'void *' lvalue ParmVar 0x149831058 'user_data' 'void *'     |-DeclStmt 0x1498316e8 <line:7:2, col:27>     | |-RecordDecl 0x149831500 <col:2, col:9> col:9 struct btd_device     | `-VarDecl 0x149831668 <col:2, col:21> col:21 used device 'struct btd_device *'     |-IfStmt 0x149831a90 <line:9:2, line:12:2>     | |-BinaryOperator 0x149831780 <line:9:6, col:22> 'int' contains-errors '!='     | | |-RecoveryExpr 0x149831738 <col:6, col:12> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x149831700 <col:6> 'struct external_desc *' lvalue Var 0x149831418 'desc' 'struct external_desc *'     | | `-DeclRefExpr 0x149831760 <col:22> 'struct gatt_db_attribute *' lvalue ParmVar 0x149817c48 'attrib' 'struct gatt_db_attribute *'     | `-CompoundStmt 0x149831a70 <col:30, line:12:2>     |   |-CallExpr 0x1498319c8 <line:10:3, col:14> 'int'     |   | |-ImplicitCastExpr 0x1498319b0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x149831900 <col:3> 'int ()' Function 0x149831848 'error' 'int ()'     |   | `-ImplicitCastExpr 0x1498319f0 <col:9> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x149831960 <col:9> 'char[4]' lvalue \"STR\"     |   `-GotoStmt 0x149831a58 <line:11:3, col:8> 'fail' 0x149831a08     |-BinaryOperator 0x149831c60 <line:14:2, col:29> 'struct btd_device *' '='     | |-DeclRefExpr 0x149831ab0 <col:2> 'struct btd_device *' lvalue Var 0x149831668 'device' 'struct btd_device *'     | `-ImplicitCastExpr 0x149831c48 <col:11, col:29> 'struct btd_device *' <IntegralToPointer>     |   `-CallExpr 0x149831c08 <col:11, col:29> 'int'     |     |-ImplicitCastExpr 0x149831bf0 <col:11> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x149831bb0 <col:11> 'int ()' Function 0x149831af8 'att_get_device' 'int ()'     |     `-ImplicitCastExpr 0x149831c30 <col:26> 'struct bt_att *' <LValueToRValue>     |       `-DeclRefExpr 0x149831bd0 <col:26> 'struct bt_att *' lvalue ParmVar 0x149830fd8 'att' 'struct bt_att *'     |-IfStmt 0x149831da0 <line:15:2, line:18:2>     | |-UnaryOperator 0x149831cb8 <line:15:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x149831ca0 <col:7> 'struct btd_device *' <LValueToRValue>     | |   `-DeclRefExpr 0x149831c80 <col:7> 'struct btd_device *' lvalue Var 0x149831668 'device' 'struct btd_device *'     | `-CompoundStmt 0x149831d80 <col:15, line:18:2>     |   |-CallExpr 0x149831d28 <line:16:3, col:14> 'int'     |   | |-ImplicitCastExpr 0x149831d10 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x149831cd0 <col:3> 'int ()' Function 0x149831848 'error' 'int ()'     |   | `-ImplicitCastExpr 0x149831d50 <col:9> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x149831cf0 <col:9> 'char[4]' lvalue \"STR\"     |   `-GotoStmt 0x149831d68 <line:17:3, col:8> 'fail' 0x149831a08     |-IfStmt 0x14a8eb7f8 <line:20:2, line:22:3>     | |-CallExpr 0x14a8eb790 <line:20:6, line:21:39> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14a8eb4b8 <line:20:6> 'int ()' Function 0x14a8eb400 'send_read' 'int ()'     | | |-DeclRefExpr 0x14a8eb4d8 <col:16> 'struct btd_device *' lvalue Var 0x149831668 'device' 'struct btd_device *'     | | |-DeclRefExpr 0x14a8eb4f8 <col:24> 'struct gatt_db_attribute *' lvalue ParmVar 0x149817c48 'attrib' 'struct gatt_db_attribute *'     | | |-RecoveryExpr 0x14a8eb550 <col:32, col:38> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x14a8eb518 <col:32> 'struct external_desc *' lvalue Var 0x149831418 'desc' 'struct external_desc *'     | | |-RecoveryExpr 0x14a8eb5b0 <col:45, col:51> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x14a8eb578 <col:45> 'struct external_desc *' lvalue Var 0x149831418 'desc' 'struct external_desc *'     | | |-DeclRefExpr 0x14a8eb5d8 <col:66> 'unsigned int' lvalue ParmVar 0x149817cc8 'id' 'unsigned int'     | | |-RecoveryExpr 0x14a8eb5f8 <line:21:6> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x14a8eb750 <col:14, col:38> 'int'     | |   |-ImplicitCastExpr 0x14a8eb738 <col:14> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x14a8eb6f8 <col:14> 'int ()' Function 0x14a8eb640 'bt_att_get_link_type' 'int ()'     | |   `-ImplicitCastExpr 0x14a8eb778 <col:35> 'struct bt_att *' <LValueToRValue>     | |     `-DeclRefExpr 0x14a8eb718 <col:35> 'struct bt_att *' lvalue ParmVar 0x149830fd8 'att' 'struct bt_att *'     | `-ReturnStmt 0x14a8eb7e8 <line:22:3>     `-LabelStmt 0x14a8eba78 <line:24:1, line:26:16> 'fail'       `-CallExpr 0x14a8eba30 <line:25:2, line:26:16> '<dependent type>' contains-errors         |-DeclRefExpr 0x14a8eb8f8 <line:25:2> 'int ()' Function 0x14a8eb840 'gatt_db_attribute_read_result' 'int ()'         |-DeclRefExpr 0x14a8eb918 <col:32> 'struct gatt_db_attribute *' lvalue ParmVar 0x149817c48 'attrib' 'struct gatt_db_attribute *'         |-DeclRefExpr 0x14a8eb938 <col:40> 'unsigned int' lvalue ParmVar 0x149817cc8 'id' 'unsigned int'         |-RecoveryExpr 0x14a8eb9f0 <col:44> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x14a8eba10 <line:26:9> '<dependent type>' contains-errors lvalue         `-IntegerLiteral 0x14a8eb988 <col:15> 'int' 0 ","20119":"`-FunctionDecl 0x12b00df18  line:1:5 invalid ssh_scp_write 'int (int, const void *, int)'   |-ParmVarDecl 0x12b00dcf0 <col:19, col:27> col:27 referenced invalid scp 'int'   |-ParmVarDecl 0x12b00dda8 <col:32, col:44> col:44 used buffer 'const void *'   |-ParmVarDecl 0x12b00de28 <col:52, col:59> col:59 referenced invalid len 'int'   `-CompoundStmt 0x12b027f30 <line:2:1, line:66:1>     |-DeclStmt 0x12b00e058 <line:3:5, col:10>     | `-VarDecl 0x12b00dff0 <col:5, col:9> col:9 used w 'int'     |-DeclStmt 0x12b00e0f0 <line:4:5, col:11>     | `-VarDecl 0x12b00e088 <col:5, col:9> col:9 used rc 'int'     |-IfStmt 0x12b00e200 <line:7:5, line:9:5>     | |-BinaryOperator 0x12b00e180 <line:7:9, col:16> 'int' contains-errors '=='     | | |-RecoveryExpr 0x12b00e108 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12b00e160 <col:16> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12b00e1e8 <col:22, line:9:5>     |   `-ReturnStmt 0x12b00e1d8 <line:8:9, col:16>     |     `-RecoveryExpr 0x12b00e1b8 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12a9230b8 <line:11:5, line:15:5>     | |-BinaryOperator 0x12b00e2e0 <line:11:9, col:23> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x12b00e240 <col:9, col:14> '<dependent type>' contains-errors lvalue ->state     | | | `-RecoveryExpr 0x12b00e220 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12b00e2c0 <col:23> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12a923098 <col:46, line:15:5>     |   |-CallExpr 0x12a923018 <line:12:9, line:13:28> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12a922eb8 <line:12:9> 'int ()' Function 0x12a922e00 'ssh_set_error' 'int ()'     |   | |-CXXDependentScopeMemberExpr 0x12a922ef8 <col:23, col:28> '<dependent type>' contains-errors lvalue ->session     |   | | `-RecoveryExpr 0x12a922ed8 <col:23> '<dependent type>' contains-errors lvalue     |   | |-RecoveryExpr 0x12a922ff8 <col:37> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x12a922fa0 <line:13:23> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x12a923088 <line:14:9, col:16>     |     `-RecoveryExpr 0x12a923068 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12a923418 <line:17:5, line:19:5>     | |-BinaryOperator 0x12a9231e8 <line:17:9, col:37> 'int' contains-errors '>'     | | |-BinaryOperator 0x12a923160 <col:9, col:26> '<dependent type>' contains-errors '+'     | | | |-CXXDependentScopeMemberExpr 0x12a9230f8 <col:9, col:14> '<dependent type>' contains-errors lvalue ->processed     | | | | `-RecoveryExpr 0x12a9230d8 <col:9> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x12a923140 <col:26> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x12a9231a0 <col:32, col:37> '<dependent type>' contains-errors lvalue ->filelen     | |   `-RecoveryExpr 0x12a923180 <col:32> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12a923400 <col:46, line:19:5>     |   `-BinaryOperator 0x12a9233e0 <line:18:9, col:54> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x12a923228 <col:9> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x12a923208 <col:9> 'int' lvalue ParmVar 0x12b00de28 'len' 'int'     |     `-CallExpr 0x12a9233b8 <col:15, col:54> '<dependent type>' contains-errors     |       |-ParenExpr 0x12a9232a8 <col:15, col:22> '<overloaded function type>' lvalue     |       | `-UnresolvedLookupExpr 0x12a923268 <col:16> '<overloaded function type>' lvalue (no ADL) = 'size_t' empty     |       `-BinaryOperator 0x12a923398 <col:25, col:45> '<dependent type>' contains-errors '-'     |         |-CXXDependentScopeMemberExpr 0x12a9232e8 <col:25, col:30> '<dependent type>' contains-errors lvalue ->filelen     |         | `-RecoveryExpr 0x12a9232c8 <col:25> '<dependent type>' contains-errors lvalue     |         `-CXXDependentScopeMemberExpr 0x12a923350 <col:40, col:45> '<dependent type>' contains-errors lvalue ->processed     |           `-RecoveryExpr 0x12a923330 <col:40> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12a923610 <line:22:5, col:42> 'int' contains-errors '='     | |-DeclRefExpr 0x12a923438 <col:5> 'int' lvalue Var 0x12b00e088 'rc' 'int'     | `-CallExpr 0x12a9235e0 <col:10, col:42> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12a923538 <col:10> 'int ()' Function 0x12a923480 'ssh_channel_poll' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x12a923578 <col:27, col:32> '<dependent type>' contains-errors lvalue ->channel     |   | `-RecoveryExpr 0x12a923558 <col:27> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x12a9235c0 <col:41> 'int' 0     |-IfStmt 0x12a923838 <line:23:5, line:26:5>     | |-BinaryOperator 0x12a9236a8 <line:23:9, col:15> 'int' contains-errors '=='     | | |-DeclRefExpr 0x12a923630 <col:9> 'int' lvalue Var 0x12b00e088 'rc' 'int'     | | `-RecoveryExpr 0x12a923688 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12a923818 <col:26, line:26:5>     |   |-BinaryOperator 0x12a9237b0 <line:24:9, col:22> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x12a923710 <col:9, col:14> '<dependent type>' contains-errors lvalue ->state     |   | | `-RecoveryExpr 0x12a9236e8 <col:9> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x12a9236c8 <col:9> 'int' lvalue ParmVar 0x12b00dcf0 'scp' 'int'     |   | `-RecoveryExpr 0x12a923790 <col:22> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x12a923808 <line:25:9, col:16>     |     `-RecoveryExpr 0x12a9237e8 <col:16> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12a923a58 <line:28:5, col:52> 'int' contains-errors '='     | |-DeclRefExpr 0x12a923858 <col:5> 'int' lvalue Var 0x12b00dff0 'w' 'int'     | `-CallExpr 0x12a923a20 <col:9, col:52> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12a923958 <col:9> 'int ()' Function 0x12a9238a0 'ssh_channel_write' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x12a923998 <col:27, col:32> '<dependent type>' contains-errors lvalue ->channel     |   | `-RecoveryExpr 0x12a923978 <col:27> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x12a9239e0 <col:41> 'const void *' lvalue ParmVar 0x12b00dda8 'buffer' 'const void *'     |   `-RecoveryExpr 0x12a923a00 <col:49> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12a923d78 <line:29:5, line:35:5> has_else     | |-BinaryOperator 0x12a923af0 <line:29:9, col:14> 'int' contains-errors '!='     | | |-DeclRefExpr 0x12a923a78 <col:9> 'int' lvalue Var 0x12b00dff0 'w' 'int'     | | `-RecoveryExpr 0x12a923ad0 <col:14> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x12a923bf0 <col:25, line:31:5>     | | `-CompoundAssignOperator 0x12a923bc0 <line:30:9, col:27> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |   |-CXXDependentScopeMemberExpr 0x12a923b58 <col:9, col:14> '<dependent type>' contains-errors lvalue ->processed     | |   | `-RecoveryExpr 0x12a923b30 <col:9> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x12a923b10 <col:9> 'int' lvalue ParmVar 0x12b00dcf0 'scp' 'int'     | |   `-DeclRefExpr 0x12a923ba0 <col:27> 'int' lvalue Var 0x12b00dff0 'w' 'int'     | `-CompoundStmt 0x12a923d58 <line:31:12, line:35:5>     |   |-BinaryOperator 0x12a923cf0 <line:32:9, col:22> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x12a923c50 <col:9, col:14> '<dependent type>' contains-errors lvalue ->state     |   | | `-RecoveryExpr 0x12a923c28 <col:9> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x12a923c08 <col:9> 'int' lvalue ParmVar 0x12b00dcf0 'scp' 'int'     |   | `-RecoveryExpr 0x12a923cd0 <col:22> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x12a923d48 <line:34:9, col:16>     |     `-RecoveryExpr 0x12a923d28 <col:16> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12b0274b8 <line:38:5, col:42> 'int' contains-errors '='     | |-DeclRefExpr 0x12a923da8 <col:5> 'int' lvalue Var 0x12b00e088 'rc' 'int'     | `-CallExpr 0x12b027488 <col:10, col:42> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12a923dc8 <col:10> 'int ()' Function 0x12a923480 'ssh_channel_poll' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x12b027420 <col:27, col:32> '<dependent type>' contains-errors lvalue ->channel     |   | `-RecoveryExpr 0x12b027400 <col:27> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x12b027468 <col:41> 'int' 0     |-IfStmt 0x12b027a10 <line:39:5, line:50:5>     | |-BinaryOperator 0x12b027530 <line:39:9, col:14> 'int' '>'     | | |-ImplicitCastExpr 0x12b027518 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x12b0274d8 <col:9> 'int' lvalue Var 0x12b00e088 'rc' 'int'     | | `-IntegerLiteral 0x12b0274f8 <col:14> 'int' 0     | `-CompoundStmt 0x12b0279e8 <col:17, line:50:5>     |   |-BinaryOperator 0x12b027820 <line:40:9, col:56> 'int' contains-errors '='     |   | |-DeclRefExpr 0x12b027550 <col:9> 'int' lvalue Var 0x12b00e088 'rc' 'int'     |   | `-CallExpr 0x12b0277e0 <col:14, col:56> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x12b027650 <col:14> 'int ()' Function 0x12b027598 'ssh_channel_read' 'int ()'     |   |   |-CXXDependentScopeMemberExpr 0x12b027690 <col:31, col:36> '<dependent type>' contains-errors lvalue ->channel     |   |   | `-RecoveryExpr 0x12b027670 <col:31> '<dependent type>' contains-errors lvalue     |   |   |-UnaryOperator 0x12b0277c8 <col:45, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   | `-RecoveryExpr 0x12b0277a8 <col:46> '<dependent type>' contains-errors lvalue     |   |   |-IntegerLiteral 0x12b027708 <col:52> 'int' 1     |   |   `-IntegerLiteral 0x12b027728 <col:55> 'int' 0     |   |-IfStmt 0x12b027890 <line:41:9, line:43:9>     |   | |-RecoveryExpr 0x12b027860 <line:41:13, col:19> '_Bool' contains-errors     |   | `-CompoundStmt 0x12b027880 <col:30, line:43:9>     |   `-IfStmt 0x12b0279c8 <line:45:9, line:49:9>     |     |-RecoveryExpr 0x12b0278f0 <line:45:13, col:34> '_Bool' contains-errors     |     `-CompoundStmt 0x12b0279b8 <col:37, line:49:9>     `-IfStmt 0x12b027f10 <line:53:5, line:63:5>       |-BinaryOperator 0x12b027b00 <line:53:9, col:32> 'int' contains-errors '=='       | |-CXXDependentScopeMemberExpr 0x12b027a50 <col:9, col:14> '<dependent type>' contains-errors lvalue ->processed       | | `-RecoveryExpr 0x12b027a30 <col:9> '<dependent type>' contains-errors lvalue       | `-CXXDependentScopeMemberExpr 0x12b027ab8 <col:27, col:32> '<dependent type>' contains-errors lvalue ->filelen       |   `-RecoveryExpr 0x12b027a98 <col:27> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x12b027ef0 <col:41, line:63:5>         |-IfStmt 0x12b027ce8 <line:56:9, line:59:9>         | |-RecoveryExpr 0x12b027c28 <line:56:13, col:18> '_Bool' contains-errors         | `-CompoundStmt 0x12b027cd8 <col:29, line:59:9>         `-BinaryOperator 0x12b027e40 <line:61:9, col:41> '<dependent type>' contains-errors '='           |-CXXDependentScopeMemberExpr 0x12b027d50 <col:9, col:14> '<dependent type>' contains-errors lvalue ->processed           | `-RecoveryExpr 0x12b027d28 <col:9> '<dependent type>' contains-errors lvalue           |   `-DeclRefExpr 0x12b027d08 <col:9> 'int' lvalue ParmVar 0x12b00dcf0 'scp' 'int'           `-BinaryOperator 0x12b027e20 <col:26, col:41> '<dependent type>' contains-errors '='             |-CXXDependentScopeMemberExpr 0x12b027db8 <col:26, col:31> '<dependent type>' contains-errors lvalue ->filelen             | `-RecoveryExpr 0x12b027d98 <col:26> '<dependent type>' contains-errors lvalue             `-IntegerLiteral 0x12b027e00 <col:41> 'int' 0 ","20143":"`-FunctionDecl 0x14e942818  col:17 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x14e942918 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x14e942980 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x14e9429e8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14e9428c0 <<invalid sloc>> Implicit 882 ","19094":"`-FunctionDecl 0x156827628  line:1:12 invalid tftp_session_find 'int (int *, struct sockaddr_storage *, struct tftp_t *)' static   |-ParmVarDecl 0x15680dd28 <col:30, col:37> col:37 invalid slirp 'int *'   |-ParmVarDecl 0x15680e318 <col:44, col:69> col:69 used srcsas 'struct sockaddr_storage *'   |-ParmVarDecl 0x1568274e8 <line:2:30, col:45> col:45 used tp 'struct tftp_t *'   `-CompoundStmt 0x156828288 <line:3:1, line:20:1>     |-DeclStmt 0x1568278d8 <line:4:5, col:29>     | |-RecordDecl 0x1568276e8 <col:5, col:12> col:12 struct tftp_session     | `-VarDecl 0x156827858 <col:5, col:26> col:26 used spt 'struct tftp_session *'     |-DeclStmt 0x156827970 <line:5:5, col:10>     | `-VarDecl 0x156827908 <col:5, col:9> col:9 used k 'int'     |-ForStmt 0x156828208 <line:7:5, line:17:5>     | |-BinaryOperator 0x1568279c8 <line:7:10, col:14> 'int' '='     | | |-DeclRefExpr 0x156827988 <col:10> 'int' lvalue Var 0x156827908 'k' 'int'     | | `-IntegerLiteral 0x1568279a8 <col:14> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x156827a60 <col:17, col:21> 'int' contains-errors '<'     | | |-DeclRefExpr 0x1568279e8 <col:17> 'int' lvalue Var 0x156827908 'k' 'int'     | | `-RecoveryExpr 0x156827a40 <col:21> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x156827aa0 <col:40, col:41> 'int' postfix '++'     | | `-DeclRefExpr 0x156827a80 <col:40> 'int' lvalue Var 0x156827908 'k' 'int'     | `-CompoundStmt 0x1568281e8 <col:45, line:17:5>     |   |-BinaryOperator 0x156827bc8 <line:8:9, col:38> 'struct tftp_session *' contains-errors '='     |   | |-DeclRefExpr 0x156827ab8 <col:9> 'struct tftp_session *' lvalue Var 0x156827858 'spt' 'struct tftp_session *'     |   | `-UnaryOperator 0x156827bb0 <col:15, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-ArraySubscriptExpr 0x156827b90 <col:16, col:38> '<dependent type>' contains-errors lvalue     |   |     |-ImplicitCastExpr 0x156827b60 <col:16, col:23> '<dependent type>' contains-errors <LValueToRValue>     |   |     | `-CXXDependentScopeMemberExpr 0x156827af8 <col:16, col:23> '<dependent type>' contains-errors lvalue ->tftp_sessions     |   |     |   `-RecoveryExpr 0x156827ad8 <col:16> '<dependent type>' contains-errors lvalue     |   |     `-ImplicitCastExpr 0x156827b78 <col:37> 'int' <LValueToRValue>     |   |       `-DeclRefExpr 0x156827b40 <col:37> 'int' lvalue Var 0x156827908 'k' 'int'     |   `-IfStmt 0x1568281c8 <line:10:9, line:16:9>     |     |-CallExpr 0x156827dc8 <line:10:13, col:36> 'int'     |     | |-ImplicitCastExpr 0x156827db0 <col:13> 'int (*)()' <FunctionToPointerDecay>     |     | | `-DeclRefExpr 0x156827d40 <col:13> 'int ()' Function 0x156827c88 'tftp_session_in_use' 'int ()'     |     | `-ImplicitCastExpr 0x156827df0 <col:33> 'struct tftp_session *' <LValueToRValue>     |     |   `-DeclRefExpr 0x156827d60 <col:33> 'struct tftp_session *' lvalue Var 0x156827858 'spt' 'struct tftp_session *'     |     `-CompoundStmt 0x1568281b0 <col:39, line:16:9>     |       `-IfStmt 0x156828190 <line:11:13, line:15:13>     |         |-CallExpr 0x156827fa0 <line:11:17, col:57> '<dependent type>' contains-errors     |         | |-DeclRefExpr 0x156827ee8 <col:17> 'int ()' Function 0x156827e30 'sockaddr_equal' 'int ()'     |         | |-UnaryOperator 0x156827f68 <col:32, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     |         | | `-RecoveryExpr 0x156827f40 <col:33, col:38> '<dependent type>' contains-errors lvalue     |         | |   `-DeclRefExpr 0x156827f08 <col:33> 'struct tftp_session *' lvalue Var 0x156827858 'spt' 'struct tftp_session *'     |         | `-DeclRefExpr 0x156827f80 <col:51> 'struct sockaddr_storage *' lvalue ParmVar 0x15680e318 'srcsas' 'struct sockaddr_storage *'     |         `-CompoundStmt 0x156828178 <col:60, line:15:13>     |           `-IfStmt 0x156828158 <line:12:17, line:14:17>     |             |-BinaryOperator 0x1568280d8 <line:12:21, col:49> 'int' contains-errors '=='     |             | |-RecoveryExpr 0x156828008 <col:21, col:26> '<dependent type>' contains-errors lvalue     |             | | `-DeclRefExpr 0x156827fd0 <col:21> 'struct tftp_session *' lvalue Var 0x156827858 'spt' 'struct tftp_session *'     |             | `-CXXDependentScopeMemberExpr 0x156828090 <col:41, col:49> '<dependent type>' contains-errors lvalue .uh_sport     |             |   `-RecoveryExpr 0x156828068 <col:41, col:45> '<dependent type>' contains-errors lvalue     |             |     `-DeclRefExpr 0x156828030 <col:41> 'struct tftp_t *' lvalue ParmVar 0x1568274e8 'tp' 'struct tftp_t *'     |             `-CompoundStmt 0x156828140 <col:59, line:14:17>     |               `-ReturnStmt 0x156828130 <line:13:21, col:28>     |                 `-ImplicitCastExpr 0x156828118 <col:28> 'int' <LValueToRValue>     |                   `-DeclRefExpr 0x1568280f8 <col:28> 'int' lvalue Var 0x156827908 'k' 'int'     `-ReturnStmt 0x156828278 <line:19:5, col:13>       `-UnaryOperator 0x156828260 <col:12, col:13> 'int' prefix '-'         `-IntegerLiteral 0x156828240 <col:13> 'int' 1 ","19230":"`-FunctionDecl 0x13081f3a8  line:1:1 referenced rsvg_new_node_component_transfer_function 'int (char)'   |-ParmVarDecl 0x13081f2d0 <col:44, col:49> col:49 channel 'char'   `-CompoundStmt 0x13081f950 <line:2:1, line:12:1>     `-CallExpr 0x13081f888 <line:6:5, col:36> '<dependent type>' contains-errors       |-DeclRefExpr 0x13081f748 <col:5> 'int ()' Function 0x13081f690 '_rsvg_node_init' 'int ()'       `-UnaryOperator 0x13081f870 <col:22, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow         `-CXXDependentScopeMemberExpr 0x13081f828 <col:23, col:31> '<dependent type>' contains-errors lvalue ->super           `-RecoveryExpr 0x13081f808 <col:23> '<dependent type>' contains-errors lvalue ","19456":"`-FunctionDecl 0x15b923448  line:1:5 invalid ext4_da_write_inline_data_begin 'int (struct address_space *, struct inode *, int, unsigned int, unsigned int, struct page **, void **)'   |-ParmVarDecl 0x15c00e248 <col:37, col:59> col:59 used mapping 'struct address_space *'   |-ParmVarDecl 0x15b922e28 <line:2:9, col:23> col:23 used inode 'struct inode *'   |-ParmVarDecl 0x15b922ec0 <line:3:9, col:16> col:16 invalid pos 'int'   |-ParmVarDecl 0x15b922f40 <col:21, col:30> col:30 used len 'unsigned int'   |-ParmVarDecl 0x15b922fc0 <line:4:9, col:18> col:18 used flags 'unsigned int'   |-ParmVarDecl 0x15b9231f8 <line:5:9, col:23> col:23 used pagep 'struct page **'   |-ParmVarDecl 0x15b9232a8 <line:6:9, col:16> col:16 used fsdata 'void **'   `-CompoundStmt 0x15d009df0 <line:7:1, line:81:1>     |-DeclStmt 0x15b923640 <line:8:2, col:22>     | |-VarDecl 0x15b923540 <col:2, col:6> col:6 used ret 'int'     | `-VarDecl 0x15b9235c0 <col:2, col:11> col:11 used inline_size 'int'     |-DeclStmt 0x15b923760 <line:10:2, col:19>     | `-VarDecl 0x15b9236f8 <col:2, col:15> col:15 used page 'struct page *'     |-DeclStmt 0x15b9238f8 <line:11:2, col:23>     | |-RecordDecl 0x15b923778 <col:2, col:9> col:9 struct ext4_iloc     | `-VarDecl 0x15b923878 <col:2, col:19> col:19 invalid iloc 'struct ext4_iloc'     |-DeclStmt 0x15b923990 <line:12:2, col:13>     | `-VarDecl 0x15b923928 <col:2, col:6> col:6 used retries 'int'     |-BinaryOperator 0x15b923bc8 <line:14:2, col:39> 'int' contains-errors '='     | |-DeclRefExpr 0x15b9239a8 <col:2> 'int' lvalue Var 0x15b923540 'ret' 'int'     | `-CallExpr 0x15b923b98 <col:8, col:39> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15b923b20 <col:8> 'int ()' Function 0x15b923a68 'ext4_get_inode_loc' 'int ()'     |   |-DeclRefExpr 0x15b923b40 <col:27> 'struct inode *' lvalue ParmVar 0x15b922e28 'inode' 'struct inode *'     |   `-UnaryOperator 0x15b923b80 <col:34, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x15b923b60 <col:35> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15b923c68 <line:15:2, line:16:10>     | |-ImplicitCastExpr 0x15b923c08 <line:15:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x15b923be8 <col:6> 'int' lvalue Var 0x15b923540 'ret' 'int'     | `-ReturnStmt 0x15b923c58 <line:16:3, col:10>     |   `-ImplicitCastExpr 0x15b923c40 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x15b923c20 <col:10> 'int' lvalue Var 0x15b923540 'ret' 'int'     |-LabelStmt 0x15b929a90 <line:18:1, col:14> 'retry_journal'     | `-NullStmt 0x15b929a38 <col:14>     |-IfStmt 0x15b929ea8 <line:20:2, line:23:2>     | |-CallExpr 0x15b929c10 <line:20:6, col:19> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x15b929b90 <col:6> 'int ()' Function 0x15b929ad8 'IS_ERR' 'int ()'     | | `-RecoveryExpr 0x15b929bf0 <col:13> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x15b929e88 <col:22, line:23:2>     |   |-BinaryOperator 0x15b929e00 <line:21:3, col:23> 'int' contains-errors '='     |   | |-DeclRefExpr 0x15b929c38 <col:3> 'int' lvalue Var 0x15b923540 'ret' 'int'     |   | `-CallExpr 0x15b929dd8 <col:9, col:23> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x15b929d38 <col:9> 'int ()' Function 0x15b929c80 'PTR_ERR' 'int ()'     |   |   `-RecoveryExpr 0x15b929db8 <col:17> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x15b929e70 <line:22:3, col:8> 'out' 0x15b929e20     |-BinaryOperator 0x15b92a098 <line:25:2, col:46> 'int' '='     | |-DeclRefExpr 0x15b929ec8 <col:2> 'int' lvalue Var 0x15b9235c0 'inline_size' 'int'     | `-CallExpr 0x15b92a058 <col:16, col:46> 'int'     |   |-ImplicitCastExpr 0x15b92a040 <col:16> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x15b929fc8 <col:16> 'int ()' Function 0x15b929f10 'ext4_get_max_inline_size' 'int ()'     |   `-ImplicitCastExpr 0x15b92a080 <col:41> 'struct inode *' <LValueToRValue>     |     `-DeclRefExpr 0x15b929fe8 <col:41> 'struct inode *' lvalue ParmVar 0x15b922e28 'inode' 'struct inode *'     |-BinaryOperator 0x15b92a190 <line:27:2, col:9> 'int' contains-errors '='     | |-DeclRefExpr 0x15b92a0b8 <col:2> 'int' lvalue Var 0x15b923540 'ret' 'int'     | `-UnaryOperator 0x15b92a178 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow     |   `-ImplicitCastExpr 0x15b92a160 <col:9> '<dependent type>' contains-errors <LValueToRValue>     |     `-RecoveryExpr 0x15b92a140 <col:9> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15b92a6d8 <line:28:2, line:32:2>     | |-BinaryOperator 0x15b92a230 <line:28:6, col:27> 'int' contains-errors '>='     | | |-DeclRefExpr 0x15b92a1b0 <col:6> 'int' lvalue Var 0x15b9235c0 'inline_size' 'int'     | | `-BinaryOperator 0x15b92a210 <col:21, col:27> '<dependent type>' contains-errors '+'     | |   |-RecoveryExpr 0x15b92a1d0 <col:21> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15b92a1f0 <col:27> 'unsigned int' lvalue ParmVar 0x15b922f40 'len' 'unsigned int'     | `-CompoundStmt 0x15b92a6b8 <col:32, line:32:2>     |   |-BinaryOperator 0x15b92a4b8 <line:29:3, col:58> 'int' contains-errors '='     |   | |-DeclRefExpr 0x15b92a250 <col:3> 'int' lvalue Var 0x15b923540 'ret' 'int'     |   | `-CallExpr 0x15b92a480 <col:9, col:58> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x15b92a350 <col:9> 'int ()' Function 0x15b92a298 'ext4_prepare_inline_data' 'int ()'     |   |   |-RecoveryExpr 0x15b92a460 <col:34> '<dependent type>' contains-errors lvalue     |   |   |-DeclRefExpr 0x15b92a388 <col:42> 'struct inode *' lvalue ParmVar 0x15b922e28 'inode' 'struct inode *'     |   |   `-BinaryOperator 0x15b92a3e8 <col:49, col:55> '<dependent type>' contains-errors '+'     |   |     |-RecoveryExpr 0x15b92a3a8 <col:49> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x15b92a3c8 <col:55> 'unsigned int' lvalue ParmVar 0x15b922f40 'len' 'unsigned int'     |   `-IfStmt 0x15b92a698 <line:30:3, line:31:9>     |     |-BinaryOperator 0x15b92a610 <line:30:7, col:22> 'int' contains-errors '&&'     |     | |-DeclRefExpr 0x15b92a4d8 <col:7> 'int' lvalue Var 0x15b923540 'ret' 'int'     |     | `-BinaryOperator 0x15b92a5f0 <col:14, col:22> 'int' contains-errors '!='     |     |   |-DeclRefExpr 0x15b92a4f8 <col:14> 'int' lvalue Var 0x15b923540 'ret' 'int'     |     |   `-UnaryOperator 0x15b92a5d8 <col:21, col:22> '<dependent type>' contains-errors prefix '-' cannot overflow     |     |     `-ImplicitCastExpr 0x15b92a5c0 <col:22> '<dependent type>' contains-errors <LValueToRValue>     |     |       `-RecoveryExpr 0x15b92a5a0 <col:22> '<dependent type>' contains-errors lvalue     |     `-GotoStmt 0x15b92a680 <line:31:4, col:9> 'out_journal' 0x15b92a630     |-CompoundAssignOperator 0x15b92a780 <line:35:2, col:11> 'unsigned int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-DeclRefExpr 0x15b92a6f8 <col:2> 'unsigned int' lvalue ParmVar 0x15b922fc0 'flags' 'unsigned int'     | `-RecoveryExpr 0x15b92a760 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15d0086f0 <line:37:2, line:47:2>     | |-BinaryOperator 0x15b92a888 <line:37:6, col:14> 'int' contains-errors '=='     | | |-DeclRefExpr 0x15b92a7b0 <col:6> 'int' lvalue Var 0x15b923540 'ret' 'int'     | | `-UnaryOperator 0x15b92a870 <col:13, col:14> '<dependent type>' contains-errors prefix '-' cannot overflow     | |   `-ImplicitCastExpr 0x15b92a858 <col:14> '<dependent type>' contains-errors <LValueToRValue>     | |     `-RecoveryExpr 0x15b92a838 <col:14> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x15d0086c8 <col:22, line:47:2>     |   |-BinaryOperator 0x15d008318 <line:38:3, line:41:18> 'int' '='     |   | |-DeclRefExpr 0x15b92a8a8 <line:38:3> 'int' lvalue Var 0x15b923540 'ret' 'int'     |   | `-CallExpr 0x15d008278 <col:9, line:41:18> 'int'     |   |   |-ImplicitCastExpr 0x15d008260 <line:38:9> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x15b92a9a8 <col:9> 'int ()' Function 0x15b92a8f0 'ext4_da_convert_inline_data_to_extent' 'int ()'     |   |   |-ImplicitCastExpr 0x15d0082b8 <col:47> 'struct address_space *' <LValueToRValue>     |   |   | `-DeclRefExpr 0x15b92a9c8 <col:47> 'struct address_space *' lvalue ParmVar 0x15c00e248 'mapping' 'struct address_space *'     |   |   |-ImplicitCastExpr 0x15d0082d0 <line:39:12> 'struct inode *' <LValueToRValue>     |   |   | `-DeclRefExpr 0x15d008200 <col:12> 'struct inode *' lvalue ParmVar 0x15b922e28 'inode' 'struct inode *'     |   |   |-ImplicitCastExpr 0x15d0082e8 <line:40:12> 'unsigned int' <LValueToRValue>     |   |   | `-DeclRefExpr 0x15d008220 <col:12> 'unsigned int' lvalue ParmVar 0x15b922fc0 'flags' 'unsigned int'     |   |   `-ImplicitCastExpr 0x15d008300 <line:41:12> 'void **' <LValueToRValue>     |   |     `-DeclRefExpr 0x15d008240 <col:12> 'void **' lvalue ParmVar 0x15b9232a8 'fsdata' 'void **'     |   |-IfStmt 0x15d008690 <line:43:3, line:45:9>     |   | |-RecoveryExpr 0x15d008658 <line:43:7, line:44:52> '_Bool' contains-errors     |   | `-GotoStmt 0x15d008678 <line:45:4, col:9> 'retry_journal' 0x15b929a40     |   `-GotoStmt 0x15d0086b0 <line:46:3, col:8> 'out' 0x15b929e20     |-BinaryOperator 0x15d008928 <line:50:2, col:54> 'struct page *' '='     | |-DeclRefExpr 0x15d008710 <col:2> 'struct page *' lvalue Var 0x15b9236f8 'page' 'struct page *'     | `-ImplicitCastExpr 0x15d008910 <col:9, col:54> 'struct page *' <IntegralToPointer>     |   `-CallExpr 0x15d0088a8 <col:9, col:54> 'int'     |     |-ImplicitCastExpr 0x15d008890 <col:9> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x15d008810 <col:9> 'int ()' Function 0x15d008758 'grab_cache_page_write_begin' 'int ()'     |     |-ImplicitCastExpr 0x15d0088e0 <col:37> 'struct address_space *' <LValueToRValue>     |     | `-DeclRefExpr 0x15d008830 <col:37> 'struct address_space *' lvalue ParmVar 0x15c00e248 'mapping' 'struct address_space *'     |     |-IntegerLiteral 0x15d008850 <col:46> 'int' 0     |     `-ImplicitCastExpr 0x15d0088f8 <col:49> 'unsigned int' <LValueToRValue>     |       `-DeclRefExpr 0x15d008870 <col:49> 'unsigned int' lvalue ParmVar 0x15b922fc0 'flags' 'unsigned int'     |-IfStmt 0x15d0089e8 <line:51:2, line:54:2>     | |-UnaryOperator 0x15d008980 <line:51:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x15d008968 <col:7> 'struct page *' <LValueToRValue>     | |   `-DeclRefExpr 0x15d008948 <col:7> 'struct page *' lvalue Var 0x15b9236f8 'page' 'struct page *'     | `-CompoundStmt 0x15d0089d0 <col:13, line:54:2>     |   `-GotoStmt 0x15d0089b8 <line:53:3, col:8> 'out_journal' 0x15b92a630     |-CallExpr 0x15d008cc0 <line:56:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15d008ae8 <col:2> 'int ()' Function 0x15d008a30 'down_read' 'int ()'     | `-UnaryOperator 0x15d008ca8 <col:12, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x15d008c80 <col:13, col:28> '<dependent type>' contains-errors lvalue     |     `-CallExpr 0x15d008c40 <col:13, col:25> 'int'     |       |-ImplicitCastExpr 0x15d008c28 <col:13> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x15d008be8 <col:13> 'int ()' Function 0x15d008b30 'EXT4_I' 'int ()'     |       `-ImplicitCastExpr 0x15d008c68 <col:20> 'struct inode *' <LValueToRValue>     |         `-DeclRefExpr 0x15d008c08 <col:20> 'struct inode *' lvalue ParmVar 0x15b922e28 'inode' 'struct inode *'     |-IfStmt 0x15d008f60 <line:57:2, line:60:2>     | |-UnaryOperator 0x15d008e60 <line:57:6, col:33> 'int' prefix '!' cannot overflow     | | `-CallExpr 0x15d008e20 <col:7, col:33> 'int'     | |   |-ImplicitCastExpr 0x15d008e08 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x15d008dc8 <col:7> 'int ()' Function 0x15d008d10 'ext4_has_inline_data' 'int ()'     | |   `-ImplicitCastExpr 0x15d008e48 <col:28> 'struct inode *' <LValueToRValue>     | |     `-DeclRefExpr 0x15d008de8 <col:28> 'struct inode *' lvalue ParmVar 0x15b922e28 'inode' 'struct inode *'     | `-CompoundStmt 0x15d008f40 <col:36, line:60:2>     |   |-BinaryOperator 0x15d008eb8 <line:58:3, col:9> 'int' '='     |   | |-DeclRefExpr 0x15d008e78 <col:3> 'int' lvalue Var 0x15b923540 'ret' 'int'     |   | `-IntegerLiteral 0x15d008e98 <col:9> 'int' 0     |   `-GotoStmt 0x15d008f28 <line:59:3, col:8> 'out_release_page' 0x15d008ed8     |-IfStmt 0x15d0093d8 <line:62:2, line:66:2>     | |-UnaryOperator 0x15d0090f8 <line:62:6, col:24> 'int' prefix '!' cannot overflow     | | `-CallExpr 0x15d0090b8 <col:7, col:24> 'int'     | |   |-ImplicitCastExpr 0x15d0090a0 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x15d009060 <col:7> 'int ()' Function 0x15d008fa8 'PageUptodate' 'int ()'     | |   `-ImplicitCastExpr 0x15d0090e0 <col:20> 'struct page *' <LValueToRValue>     | |     `-DeclRefExpr 0x15d009080 <col:20> 'struct page *' lvalue Var 0x15b9236f8 'page' 'struct page *'     | `-CompoundStmt 0x15d0093b8 <col:27, line:66:2>     |   |-BinaryOperator 0x15d0092e8 <line:63:3, col:42> 'int' '='     |   | |-DeclRefExpr 0x15d009110 <col:3> 'int' lvalue Var 0x15b923540 'ret' 'int'     |   | `-CallExpr 0x15d009288 <col:9, col:42> 'int'     |   |   |-ImplicitCastExpr 0x15d009270 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x15d009210 <col:9> 'int ()' Function 0x15d009158 'ext4_read_inline_page' 'int ()'     |   |   |-ImplicitCastExpr 0x15d0092b8 <col:31> 'struct inode *' <LValueToRValue>     |   |   | `-DeclRefExpr 0x15d009230 <col:31> 'struct inode *' lvalue ParmVar 0x15b922e28 'inode' 'struct inode *'     |   |   `-ImplicitCastExpr 0x15d0092d0 <col:38> 'struct page *' <LValueToRValue>     |   |     `-DeclRefExpr 0x15d009250 <col:38> 'struct page *' lvalue Var 0x15b9236f8 'page' 'struct page *'     |   `-IfStmt 0x15d009398 <line:64:3, line:65:9>     |     |-BinaryOperator 0x15d009360 <line:64:7, col:13> 'int' '<'     |     | |-ImplicitCastExpr 0x15d009348 <col:7> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x15d009308 <col:7> 'int' lvalue Var 0x15b923540 'ret' 'int'     |     | `-IntegerLiteral 0x15d009328 <col:13> 'int' 0     |     `-GotoStmt 0x15d009380 <line:65:4, col:9> 'out_release_page' 0x15d008ed8     |-CallExpr 0x15d0095d0 <line:68:2, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15d0094d8 <col:2> 'int ()' Function 0x15d009420 'up_read' 'int ()'     | `-UnaryOperator 0x15d0095b8 <col:10, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x15d009590 <col:11, col:26> '<dependent type>' contains-errors lvalue     |     `-CallExpr 0x15d009550 <col:11, col:23> 'int'     |       |-ImplicitCastExpr 0x15d009538 <col:11> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x15d0094f8 <col:11> 'int ()' Function 0x15d008b30 'EXT4_I' 'int ()'     |       `-ImplicitCastExpr 0x15d009578 <col:18> 'struct inode *' <LValueToRValue>     |         `-DeclRefExpr 0x15d009518 <col:18> 'struct inode *' lvalue ParmVar 0x15b922e28 'inode' 'struct inode *'     |-BinaryOperator 0x15d009680 <line:69:2, col:11> 'struct page *' '='     | |-UnaryOperator 0x15d009630 <col:2, col:3> 'struct page *' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x15d009618 <col:3> 'struct page **' <LValueToRValue>     | |   `-DeclRefExpr 0x15d0095f8 <col:3> 'struct page **' lvalue ParmVar 0x15b9231f8 'pagep' 'struct page **'     | `-ImplicitCastExpr 0x15d009668 <col:11> 'struct page *' <LValueToRValue>     |   `-DeclRefExpr 0x15d009648 <col:11> 'struct page *' lvalue Var 0x15b9236f8 'page' 'struct page *'     |-CallExpr 0x15d009808 <line:70:2, col:16> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15d009780 <col:2> 'int ()' Function 0x15d0096c8 'brelse' 'int ()'     | `-CXXDependentScopeMemberExpr 0x15d0097c0 <col:9, col:14> '<dependent type>' contains-errors lvalue .bh     |   `-RecoveryExpr 0x15d0097a0 <col:9> '<dependent type>' contains-errors lvalue     |-ReturnStmt 0x15d009850 <line:71:2, col:9>     | `-IntegerLiteral 0x15d009830 <col:9> 'int' 1     |-LabelStmt 0x15d009980 <line:72:1, line:73:35> 'out_release_page'     | `-CallExpr 0x15d009958 <col:2, col:35> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15d009860 <col:2> 'int ()' Function 0x15d009420 'up_read' 'int ()'     |   `-UnaryOperator 0x15d009940 <col:10, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x15d009918 <col:11, col:26> '<dependent type>' contains-errors lvalue     |       `-CallExpr 0x15d0098d8 <col:11, col:23> 'int'     |         |-ImplicitCastExpr 0x15d0098c0 <col:11> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x15d009880 <col:11> 'int ()' Function 0x15d008b30 'EXT4_I' 'int ()'     |         `-ImplicitCastExpr 0x15d009900 <col:18> 'struct inode *' <LValueToRValue>     |           `-DeclRefExpr 0x15d0098a0 <col:18> 'struct inode *' lvalue ParmVar 0x15b922e28 'inode' 'struct inode *'     |-CallExpr 0x15d009ad8 <line:74:2, col:18> 'int'     | |-ImplicitCastExpr 0x15d009ac0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x15d009a80 <col:2> 'int ()' Function 0x15d0099c8 'unlock_page' 'int ()'     | `-ImplicitCastExpr 0x15d009b00 <col:14> 'struct page *' <LValueToRValue>     |   `-DeclRefExpr 0x15d009aa0 <col:14> 'struct page *' lvalue Var 0x15b9236f8 'page' 'struct page *'     |-CallExpr 0x15d009c50 <line:75:2, col:15> 'int'     | |-ImplicitCastExpr 0x15d009c38 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x15d009bf8 <col:2> 'int ()' Function 0x15d009b40 'put_page' 'int ()'     | `-ImplicitCastExpr 0x15d009c78 <col:11> 'struct page *' <LValueToRValue>     |   `-DeclRefExpr 0x15d009c18 <col:11> 'struct page *' lvalue Var 0x15b9236f8 'page' 'struct page *'     |-LabelStmt 0x15d009cb8 <line:76:1, col:12> 'out_journal'     | `-NullStmt 0x15d009cb0 <col:12>     |-LabelStmt 0x15d009d88 <line:78:1, line:79:16> 'out'     | `-CallExpr 0x15d009d60 <col:2, col:16> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15d009cd8 <col:2> 'int ()' Function 0x15d0096c8 'brelse' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x15d009d18 <col:9, col:14> '<dependent type>' contains-errors lvalue .bh     |     `-RecoveryExpr 0x15d009cf8 <col:9> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x15d009de0 <line:80:2, col:9>       `-ImplicitCastExpr 0x15d009dc8 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x15d009da8 <col:9> 'int' lvalue Var 0x15b923540 'ret' 'int' ","19380":"`-FunctionDecl 0x13a80e358  line:1:12 vq2txq 'int (struct virtqueue *)' static   |-ParmVarDecl 0x13a80e248 <col:19, col:37> col:37 used vq 'struct virtqueue *'   `-CompoundStmt 0x13a826760 <line:2:1, line:4:1>     `-ReturnStmt 0x13a826750 <line:3:2, col:27>       `-BinaryOperator 0x13a826730 <col:9, col:27> '<dependent type>' contains-errors '\/'         |-ParenExpr 0x13a8266f0 <col:9, col:23> '<dependent type>' contains-errors         | `-BinaryOperator 0x13a8266d0 <col:10, col:22> '<dependent type>' contains-errors '-'         |   |-RecoveryExpr 0x13a826688 <col:10, col:14> '<dependent type>' contains-errors lvalue         |   | `-DeclRefExpr 0x13a826650 <col:10> 'struct virtqueue *' lvalue ParmVar 0x13a80e248 'vq' 'struct virtqueue *'         |   `-IntegerLiteral 0x13a8266b0 <col:22> 'int' 1         `-IntegerLiteral 0x13a826710 <col:27> 'int' 2 ","19221":"`-FunctionDecl 0x12e80de68  line:1:1 tabstop_eq 'int (int *, int *)'   |-ParmVarDecl 0x12e80dd08 <col:12, col:17> col:17 used ts1 'int *'   |-ParmVarDecl 0x12e80dd88 <col:22, col:27> col:27 used ts2 'int *'   `-CompoundStmt 0x12e826b28 <line:2:1, line:17:1>     |-DeclStmt 0x12e80dfe8 <line:3:5, col:11>     | `-VarDecl 0x12e80df80 <col:5, col:10> col:10 used t 'int'     |-IfStmt 0x12e80e290 <line:5:5, line:6:9>     | |-BinaryOperator 0x12e80e210 <line:5:9, col:46> 'int' '||'     | | |-ParenExpr 0x12e80e0e8 <col:9, col:25> 'int'     | | | `-BinaryOperator 0x12e80e0c8 <col:10, col:22> 'int' '&&'     | | |   |-BinaryOperator 0x12e80e070 <col:10, col:17> 'int' '=='     | | |   | |-ImplicitCastExpr 0x12e80e040 <col:10> 'int *' <LValueToRValue>     | | |   | | `-DeclRefExpr 0x12e80e000 <col:10> 'int *' lvalue ParmVar 0x12e80dd08 'ts1' 'int *'     | | |   | `-ImplicitCastExpr 0x12e80e058 <col:17> 'int *' <NullToPointer>     | | |   |   `-IntegerLiteral 0x12e80e020 <col:17> 'int' 0     | | |   `-ImplicitCastExpr 0x12e80e0b0 <col:22> 'int *' <LValueToRValue>     | | |     `-DeclRefExpr 0x12e80e090 <col:22> 'int *' lvalue ParmVar 0x12e80dd88 'ts2' 'int *'     | | `-ParenExpr 0x12e80e1f0 <col:30, col:46> 'int'     | |   `-BinaryOperator 0x12e80e1d0 <col:31, col:45> 'int' '&&'     | |     |-ImplicitCastExpr 0x12e80e1b8 <col:31> 'int *' <LValueToRValue>     | |     | `-DeclRefExpr 0x12e80e108 <col:31> 'int *' lvalue ParmVar 0x12e80dd08 'ts1' 'int *'     | |     `-BinaryOperator 0x12e80e198 <col:38, col:45> 'int' '=='     | |       |-ImplicitCastExpr 0x12e80e168 <col:38> 'int *' <LValueToRValue>     | |       | `-DeclRefExpr 0x12e80e128 <col:38> 'int *' lvalue ParmVar 0x12e80dd88 'ts2' 'int *'     | |       `-ImplicitCastExpr 0x12e80e180 <col:45> 'int *' <NullToPointer>     | |         `-IntegerLiteral 0x12e80e148 <col:45> 'int' 0     | `-ReturnStmt 0x12e80e280 <line:6:2, col:9>     |   `-RecoveryExpr 0x12e80e260 <col:9> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12e80e388 <line:7:5, line:8:9>     | |-BinaryOperator 0x12e80e320 <line:7:9, col:16> 'int' '=='     | | |-ImplicitCastExpr 0x12e80e2f0 <col:9> 'int *' <LValueToRValue>     | | | `-DeclRefExpr 0x12e80e2b0 <col:9> 'int *' lvalue ParmVar 0x12e80dd08 'ts1' 'int *'     | | `-ImplicitCastExpr 0x12e80e308 <col:16> 'int *' <LValueToRValue>     | |   `-DeclRefExpr 0x12e80e2d0 <col:16> 'int *' lvalue ParmVar 0x12e80dd88 'ts2' 'int *'     | `-ReturnStmt 0x12e80e378 <line:8:2, col:9>     |   `-RecoveryExpr 0x12e80e358 <col:9> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12e826730 <line:9:5, line:10:9>     | |-BinaryOperator 0x12e8266c8 <line:9:9, col:24> 'int' '!='     | | |-ImplicitCastExpr 0x12e826698 <col:9, col:14> 'int' <LValueToRValue>     | | | `-ArraySubscriptExpr 0x12e826600 <col:9, col:14> 'int' lvalue     | | |   |-ImplicitCastExpr 0x12e80e3e8 <col:9> 'int *' <LValueToRValue>     | | |   | `-DeclRefExpr 0x12e80e3a8 <col:9> 'int *' lvalue ParmVar 0x12e80dd08 'ts1' 'int *'     | | |   `-IntegerLiteral 0x12e80e3c8 <col:13> 'int' 0     | | `-ImplicitCastExpr 0x12e8266b0 <col:19, col:24> 'int' <LValueToRValue>     | |   `-ArraySubscriptExpr 0x12e826678 <col:19, col:24> 'int' lvalue     | |     |-ImplicitCastExpr 0x12e826660 <col:19> 'int *' <LValueToRValue>     | |     | `-DeclRefExpr 0x12e826620 <col:19> 'int *' lvalue ParmVar 0x12e80dd88 'ts2' 'int *'     | |     `-IntegerLiteral 0x12e826640 <col:23> 'int' 0     | `-ReturnStmt 0x12e826720 <line:10:2, col:9>     |   `-RecoveryExpr 0x12e826700 <col:9> '<dependent type>' contains-errors lvalue     |-ForStmt 0x12e826aa8 <line:12:5, line:14:13>     | |-BinaryOperator 0x12e826790 <line:12:10, col:14> 'int' '='     | | |-DeclRefExpr 0x12e826750 <col:10> 'int' lvalue Var 0x12e80df80 't' 'int'     | | `-IntegerLiteral 0x12e826770 <col:14> 'int' 1     | |-<<<NULL>>>     | |-BinaryOperator 0x12e826878 <col:17, col:27> 'int' '<='     | | |-ImplicitCastExpr 0x12e826848 <col:17> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x12e8267b0 <col:17> 'int' lvalue Var 0x12e80df80 't' 'int'     | | `-ImplicitCastExpr 0x12e826860 <col:22, col:27> 'int' <LValueToRValue>     | |   `-ArraySubscriptExpr 0x12e826828 <col:22, col:27> 'int' lvalue     | |     |-ImplicitCastExpr 0x12e826810 <col:22> 'int *' <LValueToRValue>     | |     | `-DeclRefExpr 0x12e8267d0 <col:22> 'int *' lvalue ParmVar 0x12e80dd08 'ts1' 'int *'     | |     `-IntegerLiteral 0x12e8267f0 <col:26> 'int' 0     | |-UnaryOperator 0x12e8268b8 <col:30, col:32> 'int' prefix '++'     | | `-DeclRefExpr 0x12e826898 <col:32> 'int' lvalue Var 0x12e80df80 't' 'int'     | `-IfStmt 0x12e826a88 <line:13:2, line:14:13>     |   |-BinaryOperator 0x12e826a20 <line:13:6, col:21> 'int' '!='     |   | |-ImplicitCastExpr 0x12e8269f0 <col:6, col:11> 'int' <LValueToRValue>     |   | | `-ArraySubscriptExpr 0x12e826940 <col:6, col:11> 'int' lvalue     |   | |   |-ImplicitCastExpr 0x12e826910 <col:6> 'int *' <LValueToRValue>     |   | |   | `-DeclRefExpr 0x12e8268d0 <col:6> 'int *' lvalue ParmVar 0x12e80dd08 'ts1' 'int *'     |   | |   `-ImplicitCastExpr 0x12e826928 <col:10> 'int' <LValueToRValue>     |   | |     `-DeclRefExpr 0x12e8268f0 <col:10> 'int' lvalue Var 0x12e80df80 't' 'int'     |   | `-ImplicitCastExpr 0x12e826a08 <col:16, col:21> 'int' <LValueToRValue>     |   |   `-ArraySubscriptExpr 0x12e8269d0 <col:16, col:21> 'int' lvalue     |   |     |-ImplicitCastExpr 0x12e8269a0 <col:16> 'int *' <LValueToRValue>     |   |     | `-DeclRefExpr 0x12e826960 <col:16> 'int *' lvalue ParmVar 0x12e80dd88 'ts2' 'int *'     |   |     `-ImplicitCastExpr 0x12e8269b8 <col:20> 'int' <LValueToRValue>     |   |       `-DeclRefExpr 0x12e826980 <col:20> 'int' lvalue Var 0x12e80df80 't' 'int'     |   `-ReturnStmt 0x12e826a78 <line:14:6, col:13>     |     `-RecoveryExpr 0x12e826a58 <col:13> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12e826b18 <line:16:5, col:12>       `-RecoveryExpr 0x12e826af8 <col:12> '<dependent type>' contains-errors lvalue ","19959":"`-FunctionDecl 0x145923578  col:17 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x145923678 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x1459236e0 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x145923748 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x145923620 <<invalid sloc>> Implicit 900 ","19677":"`-FunctionDecl 0x11e128238  line:1:1 PHP_METHOD 'int (int, int)'   |-ParmVarDecl 0x11e128158 <col:12> col:12 Phar 'int'   |-ParmVarDecl 0x11e1280d8 <col:18> col:18 offsetExists 'int'   `-CompoundStmt 0x11e1422e8 <line:2:1, line:32:1>     |-DeclStmt 0x11e1283b8 <line:3:2, col:13>     | `-VarDecl 0x11e128350 <col:2, col:8> col:8 used fname 'char *'     |-UnaryExprOrTypeTraitExpr 0x11e128440 <line:4:2, col:9> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x11e128420 <col:9> '<dependent type>' contains-errors lvalue     |-CallExpr 0x11e1285f8 <line:7:2, col:22> 'int'     | `-ImplicitCastExpr 0x11e1285e0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x11e128590 <col:2> 'int ()' Function 0x11e1284d8 'PHAR_ARCHIVE_OBJECT' 'int ()'     |-IfStmt 0x11e141b20 <line:9:2, line:11:2>     | |-BinaryOperator 0x11e141ad8 <line:9:6, col:75> 'int' contains-errors '=='     | | |-CallExpr 0x11e141a78 <col:6, col:70> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x11e1286f8 <col:6> 'int ()' Function 0x11e128640 'zend_parse_parameters' 'int ()'     | | | |-CallExpr 0x11e141a20 <col:28, col:42> 'int'     | | | | `-ImplicitCastExpr 0x11e141a08 <col:28> 'int (*)()' <FunctionToPointerDecay>     | | | |   `-DeclRefExpr 0x11e141800 <col:28> 'int ()' Function 0x11e128740 'ZEND_NUM_ARGS' 'int ()'     | | | |-StringLiteral 0x11e1418a0 <col:45> 'char[4]' lvalue \"STR\"     | | | |-UnaryOperator 0x11e141910 <col:52, col:53> 'char **' prefix '&' cannot overflow     | | | | `-DeclRefExpr 0x11e1418c0 <col:53> 'char *' lvalue Var 0x11e128350 'fname' 'char *'     | | | `-UnaryOperator 0x11e141a60 <col:60, col:61> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-RecoveryExpr 0x11e141a40 <col:61> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x11e141ab8 <col:75> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x11e141b08 <col:84, line:11:2>     |   `-ReturnStmt 0x11e141af8 <line:10:3>     `-IfStmt 0x11e1422b8 <line:13:2, line:31:2> has_else       |-RecoveryExpr 0x11e141d98 <line:13:6, col:80> '_Bool' contains-errors       |-CompoundStmt 0x11e1421f0 <col:83, line:26:2>       | |-IfStmt 0x11e1420c8 <line:14:3, line:19:3>       | | |-RecoveryExpr 0x11e142040 <line:14:7, col:101> '_Bool' contains-errors       | | `-CompoundStmt 0x11e1420b0 <col:104, line:19:3>       | |   `-IfStmt 0x11e142090 <line:15:4, line:18:4>       | |     |-RecoveryExpr 0x11e142060 <line:15:8, col:15> '_Bool' contains-errors       | |     `-CompoundStmt 0x11e142080 <col:27, line:18:4>       | `-IfStmt 0x11e1421d0 <line:21:3, line:24:3>       |   |-RecoveryExpr 0x11e1421a0 <line:21:7, col:34> '_Bool' contains-errors       |   `-CompoundStmt 0x11e1421c0 <col:38, line:24:3>       `-CompoundStmt 0x11e1422a0 <line:26:9, line:31:2>         `-IfStmt 0x11e142280 <line:27:3, line:29:3>           |-RecoveryExpr 0x11e142250 <line:27:7, col:85> '_Bool' contains-errors           `-CompoundStmt 0x11e142270 <col:88, line:29:3> ","19625":"`-FunctionDecl 0x123940a00  line:1:13 decode_data 'void (struct sixpack *, unsigned char)' static   |-ParmVarDecl 0x123928648 <col:25, col:41> col:41 used sp 'struct sixpack *'   |-ParmVarDecl 0x1239286c8 <col:45, col:59> col:59 used inbyte 'unsigned char'   `-CompoundStmt 0x123941970 <line:2:1, line:19:1>     |-DeclStmt 0x123940bb0 <line:3:2, col:20>     | `-VarDecl 0x123940b48 <col:2, col:17> col:17 used buf 'unsigned char *'     |-IfStmt 0x123940de8 <line:5:2, line:9:2>     | |-BinaryOperator 0x123940c48 <line:5:6, col:22> 'int' contains-errors '!='     | | |-RecoveryExpr 0x123940c00 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x123940bc8 <col:6> 'struct sixpack *' lvalue ParmVar 0x123928648 'sp' 'struct sixpack *'     | | `-IntegerLiteral 0x123940c28 <col:22> 'int' 3     | `-CompoundStmt 0x123940dc8 <col:25, line:9:2>     |   |-BinaryOperator 0x123940d98 <line:6:3, col:33> '<dependent type>' contains-errors '='     |   | |-ArraySubscriptExpr 0x123940d58 <col:3, col:29> '<dependent type>' contains-errors lvalue     |   | | |-ImplicitCastExpr 0x123940d40 <col:3, col:7> '<dependent type>' contains-errors <LValueToRValue>     |   | | | `-RecoveryExpr 0x123940ca0 <col:3, col:7> '<dependent type>' contains-errors lvalue     |   | | |   `-DeclRefExpr 0x123940c68 <col:3> 'struct sixpack *' lvalue ParmVar 0x123928648 'sp' 'struct sixpack *'     |   | | `-UnaryOperator 0x123940d28 <col:15, col:27> '<dependent type>' contains-errors postfix '++' cannot overflow     |   | |   `-RecoveryExpr 0x123940d00 <col:15, col:19> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x123940cc8 <col:15> 'struct sixpack *' lvalue ParmVar 0x123928648 'sp' 'struct sixpack *'     |   | `-DeclRefExpr 0x123940d78 <col:33> 'unsigned char' lvalue ParmVar 0x1239286c8 'inbyte' 'unsigned char'     |   `-ReturnStmt 0x123940db8 <line:8:3>     |-BinaryOperator 0x123940e88 <line:11:2, col:12> 'unsigned char *' contains-errors '='     | |-DeclRefExpr 0x123940e08 <col:2> 'unsigned char *' lvalue Var 0x123940b48 'buf' 'unsigned char *'     | `-RecoveryExpr 0x123940e60 <col:8, col:12> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x123940e28 <col:8> 'struct sixpack *' lvalue ParmVar 0x123928648 'sp' 'struct sixpack *'     |-BinaryOperator 0x1239411e8 <line:12:2, line:13:33> '<dependent type>' contains-errors '='     | |-ArraySubscriptExpr 0x123940f98 <line:12:2, col:38> '<dependent type>' contains-errors lvalue     | | |-ImplicitCastExpr 0x123940f80 <col:2, col:6> '<dependent type>' contains-errors <LValueToRValue>     | | | `-RecoveryExpr 0x123940ee0 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x123940ea8 <col:2> 'struct sixpack *' lvalue ParmVar 0x123928648 'sp' 'struct sixpack *'     | | `-UnaryOperator 0x123940f68 <col:17, col:36> '<dependent type>' contains-errors postfix '++' cannot overflow     | |   `-RecoveryExpr 0x123940f40 <col:17, col:21> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x123940f08 <col:17> 'struct sixpack *' lvalue ParmVar 0x123928648 'sp' 'struct sixpack *'     | `-BinaryOperator 0x1239411c8 <line:13:3, col:33> 'int' '|'     |   |-ImplicitCastExpr 0x1239411b0 <col:3, col:8> 'int' <IntegralCast>     |   | `-ImplicitCastExpr 0x123941198 <col:3, col:8> 'unsigned char' <LValueToRValue>     |   |   `-ArraySubscriptExpr 0x123941010 <col:3, col:8> 'unsigned char' lvalue     |   |     |-ImplicitCastExpr 0x123940ff8 <col:3> 'unsigned char *' <LValueToRValue>     |   |     | `-DeclRefExpr 0x123940fb8 <col:3> 'unsigned char *' lvalue Var 0x123940b48 'buf' 'unsigned char *'     |   |     `-IntegerLiteral 0x123940fd8 <col:7> 'int' 0     |   `-ParenExpr 0x123941178 <col:12, col:33> 'int'     |     `-BinaryOperator 0x123941158 <col:13, col:29> 'int' '&'     |       |-ParenExpr 0x123941118 <col:13, col:25> 'int'     |       | `-BinaryOperator 0x1239410f8 <col:14, col:24> 'int' '<<'     |       |   |-ImplicitCastExpr 0x1239410e0 <col:14, col:19> 'int' <IntegralCast>     |       |   | `-ImplicitCastExpr 0x1239410c8 <col:14, col:19> 'unsigned char' <LValueToRValue>     |       |   |   `-ArraySubscriptExpr 0x123941088 <col:14, col:19> 'unsigned char' lvalue     |       |   |     |-ImplicitCastExpr 0x123941070 <col:14> 'unsigned char *' <LValueToRValue>     |       |   |     | `-DeclRefExpr 0x123941030 <col:14> 'unsigned char *' lvalue Var 0x123940b48 'buf' 'unsigned char *'     |       |   |     `-IntegerLiteral 0x123941050 <col:18> 'int' 1     |       |   `-IntegerLiteral 0x1239410a8 <col:24> 'int' 2     |       `-IntegerLiteral 0x123941138 <col:29> 'int' 192     |-BinaryOperator 0x1239415a8 <line:14:2, line:15:42> '<dependent type>' contains-errors '='     | |-ArraySubscriptExpr 0x1239412f8 <line:14:2, col:38> '<dependent type>' contains-errors lvalue     | | |-ImplicitCastExpr 0x1239412e0 <col:2, col:6> '<dependent type>' contains-errors <LValueToRValue>     | | | `-RecoveryExpr 0x123941240 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x123941208 <col:2> 'struct sixpack *' lvalue ParmVar 0x123928648 'sp' 'struct sixpack *'     | | `-UnaryOperator 0x1239412c8 <col:17, col:36> '<dependent type>' contains-errors postfix '++' cannot overflow     | |   `-RecoveryExpr 0x1239412a0 <col:17, col:21> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x123941268 <col:17> 'struct sixpack *' lvalue ParmVar 0x123928648 'sp' 'struct sixpack *'     | `-BinaryOperator 0x123941588 <line:15:3, col:42> 'int' '|'     |   |-ParenExpr 0x123941400 <col:3, col:17> 'int'     |   | `-BinaryOperator 0x1239413e0 <col:4, col:13> 'int' '&'     |   |   |-ImplicitCastExpr 0x1239413c8 <col:4, col:9> 'int' <IntegralCast>     |   |   | `-ImplicitCastExpr 0x1239413b0 <col:4, col:9> 'unsigned char' <LValueToRValue>     |   |   |   `-ArraySubscriptExpr 0x123941370 <col:4, col:9> 'unsigned char' lvalue     |   |   |     |-ImplicitCastExpr 0x123941358 <col:4> 'unsigned char *' <LValueToRValue>     |   |   |     | `-DeclRefExpr 0x123941318 <col:4> 'unsigned char *' lvalue Var 0x123940b48 'buf' 'unsigned char *'     |   |   |     `-IntegerLiteral 0x123941338 <col:8> 'int' 1     |   |   `-IntegerLiteral 0x123941390 <col:13> 'int' 15     |   `-ParenExpr 0x123941568 <col:21, col:42> 'int'     |     `-BinaryOperator 0x123941548 <col:22, col:38> 'int' '&'     |       |-ParenExpr 0x123941508 <col:22, col:34> 'int'     |       | `-BinaryOperator 0x1239414e8 <col:23, col:33> 'int' '<<'     |       |   |-ImplicitCastExpr 0x1239414d0 <col:23, col:28> 'int' <IntegralCast>     |       |   | `-ImplicitCastExpr 0x1239414b8 <col:23, col:28> 'unsigned char' <LValueToRValue>     |       |   |   `-ArraySubscriptExpr 0x123941478 <col:23, col:28> 'unsigned char' lvalue     |       |   |     |-ImplicitCastExpr 0x123941460 <col:23> 'unsigned char *' <LValueToRValue>     |       |   |     | `-DeclRefExpr 0x123941420 <col:23> 'unsigned char *' lvalue Var 0x123940b48 'buf' 'unsigned char *'     |       |   |     `-IntegerLiteral 0x123941440 <col:27> 'int' 2     |       |   `-IntegerLiteral 0x123941498 <col:33> 'int' 2     |       `-IntegerLiteral 0x123941528 <col:38> 'int' 240     |-BinaryOperator 0x1239418b0 <line:16:2, line:17:33> '<dependent type>' contains-errors '='     | |-ArraySubscriptExpr 0x1239416b8 <line:16:2, col:38> '<dependent type>' contains-errors lvalue     | | |-ImplicitCastExpr 0x1239416a0 <col:2, col:6> '<dependent type>' contains-errors <LValueToRValue>     | | | `-RecoveryExpr 0x123941600 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x1239415c8 <col:2> 'struct sixpack *' lvalue ParmVar 0x123928648 'sp' 'struct sixpack *'     | | `-UnaryOperator 0x123941688 <col:17, col:36> '<dependent type>' contains-errors postfix '++' cannot overflow     | |   `-RecoveryExpr 0x123941660 <col:17, col:21> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x123941628 <col:17> 'struct sixpack *' lvalue ParmVar 0x123928648 'sp' 'struct sixpack *'     | `-BinaryOperator 0x123941890 <line:17:3, col:33> 'int' '|'     |   |-ParenExpr 0x1239417c0 <col:3, col:17> 'int'     |   | `-BinaryOperator 0x1239417a0 <col:4, col:13> 'int' '&'     |   |   |-ImplicitCastExpr 0x123941788 <col:4, col:9> 'int' <IntegralCast>     |   |   | `-ImplicitCastExpr 0x123941770 <col:4, col:9> 'unsigned char' <LValueToRValue>     |   |   |   `-ArraySubscriptExpr 0x123941730 <col:4, col:9> 'unsigned char' lvalue     |   |   |     |-ImplicitCastExpr 0x123941718 <col:4> 'unsigned char *' <LValueToRValue>     |   |   |     | `-DeclRefExpr 0x1239416d8 <col:4> 'unsigned char *' lvalue Var 0x123940b48 'buf' 'unsigned char *'     |   |   |     `-IntegerLiteral 0x1239416f8 <col:8> 'int' 2     |   |   `-IntegerLiteral 0x123941750 <col:13> 'int' 3     |   `-ParenExpr 0x123941870 <col:21, col:33> 'int'     |     `-BinaryOperator 0x123941850 <col:22, col:32> 'int' '<<'     |       |-ImplicitCastExpr 0x123941838 <col:22> 'int' <IntegralCast>     |       | `-ImplicitCastExpr 0x123941820 <col:22> 'unsigned char' <LValueToRValue>     |       |   `-DeclRefExpr 0x1239417e0 <col:22> 'unsigned char' lvalue ParmVar 0x1239286c8 'inbyte' 'unsigned char'     |       `-IntegerLiteral 0x123941800 <col:32> 'int' 2     `-BinaryOperator 0x123941950 <line:18:2, col:17> '<dependent type>' contains-errors '='       |-RecoveryExpr 0x123941908 <col:2, col:6> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x1239418d0 <col:2> 'struct sixpack *' lvalue ParmVar 0x123928648 'sp' 'struct sixpack *'       `-IntegerLiteral 0x123941930 <col:17> 'int' 0 ","19574":"`-FunctionDecl 0x15b141fd0  col:3 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x15b1420d0 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x15b142138 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x15b1421a0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x15b142078 <<invalid sloc>> Implicit 900 ","20207":"`-FunctionDecl 0x10500dee8  line:1:13 invalid start_new_rx_buffer 'int (int, unsigned long, int)' static   |-ParmVarDecl 0x10500dcf0 <col:33, col:37> col:37 used offset 'int'   |-ParmVarDecl 0x10500dd70 <col:45, col:59> col:59 used size 'unsigned long'   |-ParmVarDecl 0x10500ddf0 <col:65, col:69> col:69 used head 'int'   `-CompoundStmt 0x105027f60 <line:2:1, line:13:1>     |-IfStmt 0x10500e088 <line:4:2, line:5:10>     | |-BinaryOperator 0x10500e020 <line:4:6, col:16> 'int' contains-errors '=='     | | |-DeclRefExpr 0x10500dfa8 <col:6> 'int' lvalue ParmVar 0x10500dcf0 'offset' 'int'     | | `-RecoveryExpr 0x10500e000 <col:16> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x10500e078 <line:5:3, col:10>     |   `-RecoveryExpr 0x10500e058 <col:10> '<dependent type>' contains-errors lvalue     |-CallExpr 0x10500e2e0 <line:8:2, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x10500e200 <col:2> 'int ()' Function 0x10500e148 'BUG_ON' 'int ()'     | `-BinaryOperator 0x10500e2c0 <col:9, col:16> 'int' contains-errors '>'     |   |-DeclRefExpr 0x10500e220 <col:9> 'unsigned long' lvalue ParmVar 0x10500dd70 'size' 'unsigned long'     |   `-RecoveryExpr 0x10500e2a0 <col:16> '<dependent type>' contains-errors lvalue     `-IfStmt 0x105027f28 <line:9:2, line:10:10>       |-RecoveryExpr 0x105027ec0 <line:9:6, col:56> '_Bool' contains-errors       `-ReturnStmt 0x105027f18 <line:10:3, col:10>         `-RecoveryExpr 0x105027ef8 <col:10> '<dependent type>' contains-errors lvalue ","19919":"`-FunctionDecl 0x1421282e8  line:1:1 invalid virPCIEDeviceInfoParseXML 'int (int, int, int)'   |-ParmVarDecl 0x1421280f0 <col:27, col:46> col:46 referenced invalid ctxt 'int'   |-ParmVarDecl 0x142128170 <line:2:27, col:38> col:38 invalid pciExpressNode 'int'   |-ParmVarDecl 0x1421281f0 <line:3:27, col:48> col:48 referenced invalid pci_express 'int'   `-CompoundStmt 0x142142470 <line:4:1, line:30:1>     |-CallExpr 0x142128540 <line:5:5, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142128500 <col:5> 'int ()' Function 0x142128448 'VIR_XPATH_NODE_AUTORESTORE' 'int ()'     | `-RecoveryExpr 0x142128520 <col:32> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x142128620 <line:7:5, col:17>     | `-VarDecl 0x142128580 <col:5, col:16> col:9 used ret 'int' cinit     |   `-UnaryOperator 0x142128608 <col:15, col:16> 'int' prefix '-'     |     `-IntegerLiteral 0x1421285e8 <col:16> 'int' 1     |-BinaryOperator 0x1421286e8 <line:9:5, col:18> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x142128680 <col:5, col:11> '<dependent type>' contains-errors lvalue ->node     | | `-RecoveryExpr 0x142128658 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x142128638 <col:5> 'int' lvalue ParmVar 0x1421280f0 'ctxt' 'int'     | `-RecoveryExpr 0x1421286c8 <col:18> '<dependent type>' contains-errors lvalue     |-IfStmt 0x142141ed0 <line:11:5, line:17:5>     | |-RecoveryExpr 0x1421418f0 <line:11:9, col:41> '_Bool' contains-errors     | `-CompoundStmt 0x142141eb0 <col:44, line:17:5>     |   |-BinaryOperator 0x142141b78 <line:12:9, col:54> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x142141958 <col:9, col:22> '<dependent type>' contains-errors lvalue ->link_cap     |   | | `-RecoveryExpr 0x142141930 <col:9> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x142141910 <col:9> 'int' lvalue ParmVar 0x1421281f0 'pci_express' 'int'     |   | `-CallExpr 0x142141b48 <col:33, col:54> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x142141a80 <col:33> 'int ()' Function 0x1421419c8 'g_new0' 'int ()'     |   |   |-RecoveryExpr 0x142141b28 <col:40> '<dependent type>' contains-errors lvalue     |   |   `-IntegerLiteral 0x142141ab8 <col:53> 'int' 1     |   `-IfStmt 0x142141e90 <line:14:9, line:16:18>     |     |-BinaryOperator 0x142141e08 <line:14:13, line:15:68> 'int' contains-errors '<'     |     | |-CallExpr 0x142141dd0 <line:14:13, line:15:64> '<dependent type>' contains-errors     |     | | |-DeclRefExpr 0x142141c78 <line:14:13> 'int ()' Function 0x142141bc0 'virPCIEDeviceInfoLinkParseXML' 'int ()'     |     | | |-RecoveryExpr 0x142141c98 <col:43> '<dependent type>' contains-errors lvalue     |     | | |-RecoveryExpr 0x142141db0 <col:49> '<dependent type>' contains-errors lvalue     |     | | `-CXXDependentScopeMemberExpr 0x142141cf0 <line:15:43, col:56> '<dependent type>' contains-errors lvalue ->link_cap     |     | |   `-RecoveryExpr 0x142141cd0 <col:43> '<dependent type>' contains-errors lvalue     |     | `-IntegerLiteral 0x142141d70 <col:68> 'int' 0     |     `-GotoStmt 0x142141e78 <line:16:13, col:18> 'cleanup' 0x142141e28     |-IfStmt 0x142142388 <line:19:5, line:25:5>     | |-RecoveryExpr 0x142141fb8 <line:19:9, col:41> '_Bool' contains-errors     | `-CompoundStmt 0x142142368 <col:44, line:25:5>     |   |-BinaryOperator 0x142142160 <line:20:9, col:54> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x142142020 <col:9, col:22> '<dependent type>' contains-errors lvalue ->link_sta     |   | | `-RecoveryExpr 0x142141ff8 <col:9> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x142141fd8 <col:9> 'int' lvalue ParmVar 0x1421281f0 'pci_express' 'int'     |   | `-CallExpr 0x142142130 <col:33, col:54> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x142142068 <col:33> 'int ()' Function 0x1421419c8 'g_new0' 'int ()'     |   |   |-RecoveryExpr 0x142142110 <col:40> '<dependent type>' contains-errors lvalue     |   |   `-IntegerLiteral 0x1421420a0 <col:53> 'int' 1     |   `-IfStmt 0x142142348 <line:22:9, line:24:18>     |     |-BinaryOperator 0x142142310 <line:22:13, line:23:68> 'int' contains-errors '<'     |     | |-CallExpr 0x1421422d8 <line:22:13, line:23:64> '<dependent type>' contains-errors     |     | | |-DeclRefExpr 0x142142180 <line:22:13> 'int ()' Function 0x142141bc0 'virPCIEDeviceInfoLinkParseXML' 'int ()'     |     | | |-RecoveryExpr 0x1421421a0 <col:43> '<dependent type>' contains-errors lvalue     |     | | |-RecoveryExpr 0x1421422b8 <col:49> '<dependent type>' contains-errors lvalue     |     | | `-CXXDependentScopeMemberExpr 0x1421421f8 <line:23:43, col:56> '<dependent type>' contains-errors lvalue ->link_sta     |     | |   `-RecoveryExpr 0x1421421d8 <col:43> '<dependent type>' contains-errors lvalue     |     | `-IntegerLiteral 0x142142278 <col:68> 'int' 0     |     `-GotoStmt 0x142142330 <line:24:13, col:18> 'cleanup' 0x142141e28     |-BinaryOperator 0x1421423e8 <line:27:5, col:11> 'int' '='     | |-DeclRefExpr 0x1421423a8 <col:5> 'int' lvalue Var 0x142128580 'ret' 'int'     | `-IntegerLiteral 0x1421423c8 <col:11> 'int' 0     `-LabelStmt 0x142142450 <line:28:2, line:29:12> 'cleanup'       `-ReturnStmt 0x142142440 <col:5, col:12>         `-ImplicitCastExpr 0x142142428 <col:12> 'int' <LValueToRValue>           `-DeclRefExpr 0x142142408 <col:12> 'int' lvalue Var 0x142128580 'ret' 'int' ","19662":"`-FunctionDecl 0x13800de58  line:1:1 invalid unmatched_exit 'int (int, int)'   |-ParmVarDecl 0x13800dcf0 <col:16, col:23> col:23 invalid op 'int'   |-ParmVarDecl 0x13800dd70 <col:27, col:37> col:37 invalid opproc 'int'   `-CompoundStmt 0x1380278a8 <line:2:1, line:6:1>     |-CallExpr 0x13800e130 <line:3:5, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13800e070 <col:5> 'int ()' Function 0x13800dfb8 'make_oper' 'int ()'     | |-BinaryOperator 0x13800e0d0 <col:15, col:20> '<dependent type>' contains-errors '-'     | | |-RecoveryExpr 0x13800e090 <col:15> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x13800e0b0 <col:20> 'int' 1     | |-IntegerLiteral 0x13800e0f0 <col:23> 'int' 0     | `-RecoveryExpr 0x13800e110 <col:26> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13800e2f0 <line:4:5, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13800e248 <col:5> 'int ()' Function 0x13800e190 'make_int' 'int ()'     | |-RecoveryExpr 0x13800e268 <col:14> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x13800e2d0 <col:18> '<dependent type>' contains-errors lvalue     `-CallExpr 0x138027880 <line:5:5, col:31> '<dependent type>' contains-errors       |-DeclRefExpr 0x138027800 <col:5> 'int ()' Function 0x13800e348 'return_error' 'int ()'       `-RecoveryExpr 0x138027860 <col:18> '<dependent type>' contains-errors lvalue ","19528":"`-FunctionDecl 0x15800de88  line:1:20 invalid r_read_at_le16 'int (const void *, int)' static inline   |-ParmVarDecl 0x15800dd28 <col:35, col:47> col:47 src 'const void *'   |-ParmVarDecl 0x15800dda8 <col:52, col:59> col:59 invalid offset 'int'   `-CompoundStmt 0x15800e1a8 <col:67, line:4:1>     |-DeclStmt 0x15800dfc0 <line:2:2, col:41>     | `-VarDecl 0x15800df58 <col:2, col:13> col:13 invalid s 'const int *'     `-ReturnStmt 0x15800e198 <line:3:2, col:23>       `-CallExpr 0x15800e170 <col:9, col:23> '<dependent type>' contains-errors         |-DeclRefExpr 0x15800e130 <col:9> 'int ()' Function 0x15800e078 'r_read_le16' 'int ()'         `-RecoveryExpr 0x15800e150 <col:22> '<dependent type>' contains-errors lvalue ","20006":"`-FunctionDecl 0x13c141958  line:1:12 invalid bnx2x_afex_handle_vif_list_cmd 'int (struct bnx2x *, int, int, int)' static   |-ParmVarDecl 0x13c128648 <col:43, col:57> col:57 used bp 'struct bnx2x *'   |-ParmVarDecl 0x13c1286e0 <col:61, col:64> col:64 invalid cmd_type 'int'   |-ParmVarDecl 0x13c128760 <line:2:8, col:12> col:12 invalid vif_index 'int'   |-ParmVarDecl 0x13c141800 <col:23, col:26> col:26 invalid func_bit_map 'int'   `-CompoundStmt 0x13c143790 <line:3:1, line:35:1>     |-DeclStmt 0x13c141bb0 <line:4:2, col:53>     | |-RecordDecl 0x13c141a20 <col:2, col:9> col:9 struct bnx2x_func_state_params     | `-VarDecl 0x13c141b18 <col:2, col:33> col:33 referenced invalid func_params 'struct bnx2x_func_state_params'     |-DeclStmt 0x13c141e80 <line:5:2, line:6:36>     | |-RecordDecl 0x13c141bc8 <line:5:2, col:9> col:9 struct bnx2x_func_afex_viflists_params     | `-VarDecl 0x13c141d38 <col:2, line:6:23> line:5:42 used update_params 'struct bnx2x_func_afex_viflists_params *' cinit     |   `-UnaryOperator 0x13c141e50 <line:6:3, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-CXXDependentScopeMemberExpr 0x13c141e08 <col:4, col:23> '<dependent type>' contains-errors lvalue .afex_viflists     |       `-CXXDependentScopeMemberExpr 0x13c141dc0 <col:4, col:16> '<dependent type>' contains-errors lvalue .params     |         `-RecoveryExpr 0x13c141da0 <col:4> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x13c141f18 <line:7:2, col:8>     | `-VarDecl 0x13c141eb0 <col:2, col:6> col:6 used rc 'int'     |-IfStmt 0x13c142230 <line:11:2, line:13:14>     | |-RecoveryExpr 0x13c141fe0 <line:11:6, col:71> '_Bool' contains-errors     | `-CallExpr 0x13c142200 <line:12:3, line:13:14> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13c142160 <line:12:3> 'int ()' Function 0x13c1420a8 'BNX2X_ERR' 'int ()'     |   |-StringLiteral 0x13c1421c0 <col:13> 'char[4]' lvalue \"STR\"     |   `-RecoveryExpr 0x13c1421e0 <line:13:6> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13c142358 <line:15:2, col:27> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13c142298 <col:2, col:14> '<dependent type>' contains-errors lvalue .f_obj     | | `-RecoveryExpr 0x13c142270 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13c142250 <col:2> 'struct bnx2x_func_state_params' lvalue Var 0x13c141b18 'func_params' 'struct bnx2x_func_state_params'     | `-UnaryOperator 0x13c142340 <col:22, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13c142318 <col:23, col:27> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13c1422e0 <col:23> 'struct bnx2x *' lvalue ParmVar 0x13c128648 'bp' 'struct bnx2x *'     |-BinaryOperator 0x13c142460 <line:16:2, col:20> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13c1423c0 <col:2, col:14> '<dependent type>' contains-errors lvalue .cmd     | | `-RecoveryExpr 0x13c142398 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13c142378 <col:2> 'struct bnx2x_func_state_params' lvalue Var 0x13c141b18 'func_params' 'struct bnx2x_func_state_params'     | `-RecoveryExpr 0x13c142440 <col:20> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13c142500 <line:19:2, col:41> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13c1424b8 <col:2, col:17> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13c142480 <col:2> 'struct bnx2x_func_afex_viflists_params *' contains-errors lvalue Var 0x13c141d38 'update_params' 'struct bnx2x_func_afex_viflists_params *'     | `-RecoveryExpr 0x13c1424e0 <col:41> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13c1425a0 <line:20:2, col:34> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13c142558 <col:2, col:17> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13c142520 <col:2> 'struct bnx2x_func_afex_viflists_params *' contains-errors lvalue Var 0x13c141d38 'update_params' 'struct bnx2x_func_afex_viflists_params *'     | `-RecoveryExpr 0x13c142580 <col:34> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13c142738 <line:23:2, col:33> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13c1426f0 <col:2, col:17> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13c1426b8 <col:2> 'struct bnx2x_func_afex_viflists_params *' contains-errors lvalue Var 0x13c141d38 'update_params' 'struct bnx2x_func_afex_viflists_params *'     | `-IntegerLiteral 0x13c142718 <col:33> 'int' 0     |-BinaryOperator 0x13c143588 <line:30:2, col:47> 'int' contains-errors '='     | |-DeclRefExpr 0x13c1427e0 <col:2> 'int' lvalue Var 0x13c141eb0 'rc' 'int'     | `-CallExpr 0x13c143558 <col:7, col:47> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13c1434e0 <col:7> 'int ()' Function 0x13c143428 'bnx2x_func_state_change' 'int ()'     |   |-DeclRefExpr 0x13c143500 <col:31> 'struct bnx2x *' lvalue ParmVar 0x13c128648 'bp' 'struct bnx2x *'     |   `-UnaryOperator 0x13c143540 <col:35, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x13c143520 <col:36> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x13c143780 <line:34:2, col:9>       `-IntegerLiteral 0x13c143760 <col:9> 'int' 0 ","19788":"`-FunctionDecl 0x153828988  col:5 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x153828a88 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x153828af0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x153828b58 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x153828a30 <<invalid sloc>> Implicit 882 ","19490":"`-FunctionDecl 0x128026600  line:1:12 sctp_setsockopt_del_key 'int (struct sock *, char)' static   |-ParmVarDecl 0x12800e248 <col:36, col:49> col:49 used sk 'struct sock *'   |-ParmVarDecl 0x12800e2c0 <line:2:6, col:11> col:11 __user 'char'   `-CompoundStmt 0x12802a780 <line:4:1, line:20:1>     |-DeclStmt 0x128026878 <line:5:2, col:27>     | |-RecordDecl 0x128026700 <col:2, col:9> col:9 struct sctp_authkeyid     | `-VarDecl 0x1280267f8 <col:2, col:24> col:24 invalid val 'struct sctp_authkeyid'     |-DeclStmt 0x128026a78 <line:6:2, col:31>     | |-RecordDecl 0x128026890 <col:2, col:9> col:9 struct sctp_association     | `-VarDecl 0x1280269f8 <col:2, col:27> col:27 used asoc 'struct sctp_association *'     |-IfStmt 0x128026bd8 <line:8:2, line:9:11>     | |-RecoveryExpr 0x128026b10 <line:8:6, col:44> '_Bool' contains-errors     | `-ReturnStmt 0x128026bc8 <line:9:3, col:11>     |   `-UnaryOperator 0x128026bb0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x128026b98 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x128026b78 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x128026ef0 <line:10:2, line:11:11>     | |-CallExpr 0x128026e10 <line:10:6, col:41> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x128026d10 <col:6> 'int ()' Function 0x128026c58 'copy_from_user' 'int ()'     | | |-UnaryOperator 0x128026d50 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | `-RecoveryExpr 0x128026d30 <col:22> '<dependent type>' contains-errors lvalue     | | |-RecoveryExpr 0x128026dd0 <col:27> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x128026df0 <col:35> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x128026ee0 <line:11:3, col:11>     |   `-UnaryOperator 0x128026ec8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x128026eb0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x128026e90 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1280270e8 <line:13:2, col:45> 'struct sctp_association *' contains-errors '='     | |-DeclRefExpr 0x128026f10 <col:2> 'struct sctp_association *' lvalue Var 0x1280269f8 'asoc' 'struct sctp_association *'     | `-CallExpr 0x1280270b8 <col:9, col:45> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x128027010 <col:9> 'int ()' Function 0x128026f58 'sctp_id2assoc' 'int ()'     |   |-DeclRefExpr 0x128027030 <col:23> 'struct sock *' lvalue ParmVar 0x12800e248 'sk' 'struct sock *'     |   `-CXXDependentScopeMemberExpr 0x128027070 <col:27, col:31> '<dependent type>' contains-errors lvalue .scact_assoc_id     |     `-RecoveryExpr 0x128027050 <col:27> '<dependent type>' contains-errors lvalue     |-IfStmt 0x128027520 <line:14:2, line:15:11>     | |-BinaryOperator 0x128027458 <line:14:6, col:55> 'int' contains-errors '&&'     | | |-BinaryOperator 0x1280273e8 <col:6, col:19> 'int' contains-errors '&&'     | | | |-UnaryOperator 0x1280273d0 <col:6, col:7> 'int' prefix '!' cannot overflow     | | | | `-ImplicitCastExpr 0x1280273b8 <col:7> 'struct sctp_association *' <LValueToRValue>     | | | |   `-DeclRefExpr 0x128027108 <col:7> 'struct sctp_association *' lvalue Var 0x1280269f8 'asoc' 'struct sctp_association *'     | | | `-CXXDependentScopeMemberExpr 0x128027178 <col:15, col:19> '<dependent type>' contains-errors lvalue .scact_assoc_id     | | |   `-RecoveryExpr 0x128027158 <col:15> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x128027428 <col:37, col:55> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x1280272c0 <col:37> 'int ()' Function 0x128027208 'sctp_style' 'int ()'     | |   |-DeclRefExpr 0x1280272e0 <col:48> 'struct sock *' lvalue ParmVar 0x12800e248 'sk' 'struct sock *'     | |   `-RecoveryExpr 0x128027408 <col:52> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x128027510 <line:15:3, col:11>     |   `-UnaryOperator 0x1280274f8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x1280274e0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x1280274c0 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12802a770 <line:17:2, line:18:28>       `-CallExpr 0x12802a738 <line:17:9, line:18:28> '<dependent type>' contains-errors         |-DeclRefExpr 0x12802a4b8 <line:17:9> 'int ()' Function 0x12802a400 'sctp_auth_del_key_id' 'int ()'         |-RecoveryExpr 0x12802a688 <col:30, col:43> '<dependent type>' contains-errors lvalue         | `-CallExpr 0x12802a648 <col:30, col:40> 'int'         |   |-ImplicitCastExpr 0x12802a630 <col:30> 'int (*)()' <FunctionToPointerDecay>         |   | `-DeclRefExpr 0x12802a5b8 <col:30> 'int ()' Function 0x12802a500 'sctp_sk' 'int ()'         |   `-ImplicitCastExpr 0x12802a670 <col:38> 'struct sock *' <LValueToRValue>         |     `-DeclRefExpr 0x12802a5d8 <col:38> 'struct sock *' lvalue ParmVar 0x12800e248 'sk' 'struct sock *'         |-DeclRefExpr 0x12802a6b0 <col:47> 'struct sctp_association *' lvalue Var 0x1280269f8 'asoc' 'struct sctp_association *'         `-CXXDependentScopeMemberExpr 0x12802a6f0 <line:18:9, col:13> '<dependent type>' contains-errors lvalue .scact_keynumber           `-RecoveryExpr 0x12802a6d0 <col:9> '<dependent type>' contains-errors lvalue ","19283":"`-FunctionDecl 0x130128258  line:1:3 invalid Type_geometry_attributes 'int (const int *, const int *)'   |-ParmVarDecl 0x1301280f0 <col:28, col:48> col:48 invalid handler 'const int *'   |-ParmVarDecl 0x130128170 <line:2:28, col:55> col:55 invalid gattr 'const int *'   `-CompoundStmt 0x130128500 <line:4:3, line:6:3>     `-CallExpr 0x1301284d0 <line:5:5, col:24> '<dependent type>' contains-errors       |-DeclRefExpr 0x130128470 <col:5> 'int ()' Function 0x1301283b8 'copy' 'int ()'       |-RecoveryExpr 0x130128490 <col:10> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x1301284b0 <col:19> '<dependent type>' contains-errors lvalue ","19851":"`-FunctionDecl 0x135826600  line:1:5 expand_stack 'int (struct vm_area_struct *, unsigned long)'   |-ParmVarDecl 0x13580e248 <col:18, col:41> col:41 used vma 'struct vm_area_struct *'   |-ParmVarDecl 0x13580e2c8 <col:46, col:60> col:60 used address 'unsigned long'   `-CompoundStmt 0x135826e38 <line:2:1, line:12:1>     |-DeclStmt 0x1358267f0 <line:3:2, col:29>     | `-VarDecl 0x135826788 <col:2, col:25> col:25 used prev 'struct vm_area_struct *'     |-CompoundAssignOperator 0x1358268a8 <line:5:2, col:13> 'unsigned long' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-DeclRefExpr 0x135826808 <col:2> 'unsigned long' lvalue ParmVar 0x13580e2c8 'address' 'unsigned long'     | `-RecoveryExpr 0x135826888 <col:13> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x135826958 <line:6:2, col:14> 'struct vm_area_struct *' contains-errors '='     | |-DeclRefExpr 0x1358268d8 <col:2> 'struct vm_area_struct *' lvalue Var 0x135826788 'prev' 'struct vm_area_struct *'     | `-RecoveryExpr 0x135826930 <col:9, col:14> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1358268f8 <col:9> 'struct vm_area_struct *' lvalue ParmVar 0x13580e248 'vma' 'struct vm_area_struct *'     |-IfStmt 0x135826bf0 <line:7:2, line:10:2>     | |-BinaryOperator 0x135826a38 <line:7:6, col:30> 'int' contains-errors '&&'     | | |-DeclRefExpr 0x135826978 <col:6> 'struct vm_area_struct *' lvalue Var 0x135826788 'prev' 'struct vm_area_struct *'     | | `-BinaryOperator 0x135826a18 <col:14, col:30> 'int' contains-errors '=='     | |   |-RecoveryExpr 0x1358269d0 <col:14, col:20> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x135826998 <col:14> 'struct vm_area_struct *' lvalue Var 0x135826788 'prev' 'struct vm_area_struct *'     | |   `-DeclRefExpr 0x1358269f8 <col:30> 'unsigned long' lvalue ParmVar 0x13580e2c8 'address' 'unsigned long'     | `-CompoundStmt 0x135826bd8 <col:39, line:10:2>     |   `-IfStmt 0x135826bb8 <line:8:3, line:9:12>     |     |-RecoveryExpr 0x135826af0 <line:8:7, col:38> '_Bool' contains-errors     |     `-ReturnStmt 0x135826ba8 <line:9:4, col:12>     |       `-UnaryOperator 0x135826b90 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |         `-ImplicitCastExpr 0x135826b78 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |           `-RecoveryExpr 0x135826b58 <col:12> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x135826e28 <line:11:2, col:38>       `-CallExpr 0x135826dc8 <col:9, col:38> 'int'         |-ImplicitCastExpr 0x135826db0 <col:9> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x135826d20 <col:9> 'int ()' Function 0x135826c68 'expand_downwards' 'int ()'         |-ImplicitCastExpr 0x135826df8 <col:26> 'struct vm_area_struct *' <LValueToRValue>         | `-DeclRefExpr 0x135826d40 <col:26> 'struct vm_area_struct *' lvalue ParmVar 0x13580e248 'vma' 'struct vm_area_struct *'         `-ImplicitCastExpr 0x135826e10 <col:31> 'unsigned long' <LValueToRValue>           `-DeclRefExpr 0x135826d60 <col:31> 'unsigned long' lvalue ParmVar 0x13580e2c8 'address' 'unsigned long' ","20081":"`-FunctionDecl 0x13700e0b0  line:1:8 invalid calloc 'void *(int, int)'   |-ParmVarDecl 0x13700dcf0 <col:15, col:22> col:22 invalid n 'int'   |-ParmVarDecl 0x13700dd70 <col:25, col:32> col:32 invalid lb 'int'   `-CompoundStmt 0x1369273d0 <line:2:1, line:27:1>     |-IfStmt 0x13700e308 <line:3:5, line:4:14>     | |-BinaryOperator 0x13700e2a0 <line:3:9, col:33> 'int' contains-errors '&&'     | | |-RecoveryExpr 0x13700e168 <col:9> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x13700e280 <col:15, col:33> 'int' contains-errors '>'     | |   |-RecoveryExpr 0x13700e188 <col:15> '<dependent type>' contains-errors lvalue     | |   `-BinaryOperator 0x13700e260 <col:19, col:33> '<dependent type>' contains-errors '\/'     | |     |-RecoveryExpr 0x13700e240 <col:19> '<dependent type>' contains-errors lvalue     | |     `-RecoveryExpr 0x13700e1c0 <col:33> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13700e2f8 <line:4:7, col:14>     |   `-RecoveryExpr 0x13700e2d8 <col:14> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1369273c0 <line:26:5, col:41>       `-ParenExpr 0x1369273a0 <col:11, col:41> 'void *' contains-errors         `-CStyleCastExpr 0x136927378 <col:12, col:40> 'void *' contains-errors <Dependent>           `-CallExpr 0x136927338 <col:20, col:40> '<dependent type>' contains-errors             |-DeclRefExpr 0x1369272b8 <col:20> 'int ()' Function 0x136927200 'REDIRECT_MALLOC' 'int ()'             `-BinaryOperator 0x136927318 <col:36, col:38> '<dependent type>' contains-errors '*'               |-RecoveryExpr 0x1369272d8 <col:36> '<dependent type>' contains-errors lvalue               `-RecoveryExpr 0x1369272f8 <col:38> '<dependent type>' contains-errors lvalue ","19374":"`-FunctionDecl 0x1598fdd18  line:1:1 invalid dict_spot_results 'int (int *, int *, const int *)'   |-ParmVarDecl 0x1598fdb28 <col:19, col:28> col:28 invalid i_ctx_p 'int *'   |-ParmVarDecl 0x1598fdba8 <col:37, col:43> col:43 invalid pdict 'int *'   |-ParmVarDecl 0x1598fdc28 <col:50, col:75> col:75 invalid psp 'const int *'   `-CompoundStmt 0x159917420 <line:2:1, line:11:1>     |-DeclStmt 0x1598fde58 <line:3:5, col:13>     | `-VarDecl 0x1598fddf0 <col:5, col:9> col:9 used code 'int'     |-BinaryOperator 0x1598fe1a0 <line:5:5, line:6:57> 'int' contains-errors '='     | |-DeclRefExpr 0x1598fde70 <line:5:5> 'int' lvalue Var 0x1598fddf0 'code' 'int'     | `-CallExpr 0x1598fe160 <col:12, line:6:57> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1598fdff0 <line:5:12> 'int ()' Function 0x1598fdf38 'dict_real_result' 'int ()'     |   |-RecoveryExpr 0x1598fe010 <col:29> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x1598fe030 <col:38> '<dependent type>' contains-errors lvalue     |   |-StringLiteral 0x1598fe090 <col:45> 'char[4]' lvalue \"STR\"     |   `-CXXDependentScopeMemberExpr 0x1598fe118 <line:6:29, col:41> '<dependent type>' contains-errors lvalue .actual_frequency     |     `-CXXDependentScopeMemberExpr 0x1598fe0d0 <col:29, col:34> '<dependent type>' contains-errors lvalue ->screen     |       `-RecoveryExpr 0x1598fe0b0 <col:29> '<dependent type>' contains-errors lvalue     |-IfStmt 0x159917280 <line:7:5, line:8:16>     | |-BinaryOperator 0x159917218 <line:7:9, col:16> 'int' '<'     | | |-ImplicitCastExpr 0x159917200 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x1598fe1c0 <col:9> 'int' lvalue Var 0x1598fddf0 'code' 'int'     | | `-IntegerLiteral 0x1598fe1e0 <col:16> 'int' 0     | `-ReturnStmt 0x159917270 <line:8:9, col:16>     |   `-ImplicitCastExpr 0x159917258 <col:16> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x159917238 <col:16> 'int' lvalue Var 0x1598fddf0 'code' 'int'     `-ReturnStmt 0x159917410 <line:9:5, line:10:53>       `-CallExpr 0x1599173d0 <line:9:12, line:10:53> '<dependent type>' contains-errors         |-DeclRefExpr 0x1599172a0 <line:9:12> 'int ()' Function 0x1598fdf38 'dict_real_result' 'int ()'         |-RecoveryExpr 0x1599172c0 <col:29> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x1599172e0 <col:38> '<dependent type>' contains-errors lvalue         |-StringLiteral 0x159917300 <col:45> 'char[4]' lvalue \"STR\"         `-CXXDependentScopeMemberExpr 0x159917388 <line:10:29, col:41> '<dependent type>' contains-errors lvalue .actual_angle           `-CXXDependentScopeMemberExpr 0x159917340 <col:29, col:34> '<dependent type>' contains-errors lvalue ->screen             `-RecoveryExpr 0x159917320 <col:29> '<dependent type>' contains-errors lvalue ","19459":"`-FunctionDecl 0x13d9281f8  line:1:1 invalid gdata_service_dispose 'int (int *)'   |-ParmVarDecl 0x13d928128 <col:24, col:33> col:33 invalid object 'int *'   `-CompoundStmt 0x13d941d98 <line:2:1, line:15:1>     |-IfStmt 0x13d941828 <line:5:2, line:6:35>     | |-BinaryOperator 0x13d9285f0 <line:5:6, col:26> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x13d928588 <col:6, col:12> '<dependent type>' contains-errors lvalue ->authorizer     | | | `-RecoveryExpr 0x13d928568 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13d9285d0 <col:26> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x13d941800 <line:6:3, col:35> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13d9286f0 <col:3> 'int ()' Function 0x13d928638 'g_object_unref' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x13d9287b8 <col:19, col:25> '<dependent type>' contains-errors lvalue ->authorizer     |     `-RecoveryExpr 0x13d928798 <col:19> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13d941ad8 <line:9:2, line:10:32>     | |-BinaryOperator 0x13d941980 <line:9:6, col:23> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x13d941918 <col:6, col:12> '<dependent type>' contains-errors lvalue ->session     | | | `-RecoveryExpr 0x13d9418f8 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13d941960 <col:23> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x13d941ab0 <line:10:3, col:32> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13d9419a0 <col:3> 'int ()' Function 0x13d928638 'g_object_unref' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x13d941a68 <col:19, col:25> '<dependent type>' contains-errors lvalue ->session     |     `-RecoveryExpr 0x13d941a48 <col:19> '<dependent type>' contains-errors lvalue     `-CallExpr 0x13d941d70 <line:14:2, col:62> '<dependent type>' contains-errors       |-CXXDependentScopeMemberExpr 0x13d941d28 <col:2, col:47> '<dependent type>' contains-errors lvalue ->dispose       | `-CallExpr 0x13d941d00 <col:2, col:44> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x13d941bf0 <col:2> 'int ()' Function 0x13d941b38 'G_OBJECT_CLASS' 'int ()'       |   `-RecoveryExpr 0x13d941ce0 <col:18> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x13d941c98 <col:56> '<dependent type>' contains-errors lvalue ","19808":"`-FunctionDecl 0x1569281c8  line:1:21 invalid mp_vkth 'double (int)' static   |-ParmVarDecl 0x1569280f0 <col:29, <invalid sloc>> col:46 invalid 'int'   `-CompoundStmt 0x156928638 <col:52, line:4:7> ","19773":"`-FunctionDecl 0x14d9282e0  col:10 invalid convert 'void (const char *, int, int)'   |-ParmVarDecl 0x14d9280d8 <col:18, col:31> col:31 in0 'const char *'   |-ParmVarDecl 0x14d928158 <col:36, col:40> col:40 size 'int'   `-ParmVarDecl 0x14d9281f0 <col:46, <invalid sloc>> col:57 invalid 'int' ","19792":"`-FunctionDecl 0x12d928758  line:1:12 fail_path 'int (struct pgpath *)' static   |-ParmVarDecl 0x12d928648 <col:22, col:37> col:37 used pgpath 'struct pgpath *'   `-CompoundStmt 0x12d947040 <line:2:1, line:31:1>     |-DeclStmt 0x12d944cd0 <line:3:2, col:21>     | `-VarDecl 0x12d944c68 <col:2, col:16> col:16 used flags 'unsigned long'     |-DeclStmt 0x12d944f80 <line:4:2, col:37>     | |-RecordDecl 0x12d944ce8 <col:2, col:9> col:9 struct multipath     | `-VarDecl 0x12d944e58 <col:2, col:36> col:20 used m 'struct multipath *' cinit     |   `-CXXDependentScopeMemberExpr 0x12d944f20 <col:24, col:36> '<dependent type>' contains-errors lvalue ->m     |     `-RecoveryExpr 0x12d944ef8 <col:24, col:32> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x12d944ec0 <col:24> 'struct pgpath *' lvalue ParmVar 0x12d928648 'pgpath' 'struct pgpath *'     |-CallExpr 0x12d945178 <line:6:2, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d9450c0 <col:2> 'int ()' Function 0x12d945008 'spin_lock_irqsave' 'int ()'     | |-UnaryOperator 0x12d945140 <col:20, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x12d945118 <col:21, col:24> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12d9450e0 <col:21> 'struct multipath *' contains-errors lvalue Var 0x12d944e58 'm' 'struct multipath *'     | `-DeclRefExpr 0x12d945158 <col:30> 'unsigned long' lvalue Var 0x12d944c68 'flags' 'unsigned long'     |-IfStmt 0x12d9452a0 <line:8:2, line:9:8>     | |-UnaryOperator 0x12d945220 <line:8:6, col:15> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12d945208 <col:7, col:15> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x12d9451e0 <col:7, col:15> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x12d9451a8 <col:7> 'struct pgpath *' lvalue ParmVar 0x12d928648 'pgpath' 'struct pgpath *'     | `-GotoStmt 0x12d945288 <line:9:3, col:8> 'out' 0x12d945238     |-CallExpr 0x12d945510 <line:11:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d9453a0 <col:2> 'int ()' Function 0x12d9452e8 'DMWARN' 'int ()'     | |-StringLiteral 0x12d945400 <col:9> 'char[4]' lvalue \"STR\"     | `-CXXDependentScopeMemberExpr 0x12d9454c8 <col:16, col:34> '<dependent type>' contains-errors lvalue ->name     |   `-CXXDependentScopeMemberExpr 0x12d945480 <col:16, col:29> '<dependent type>' contains-errors lvalue .dev     |     `-RecoveryExpr 0x12d945458 <col:16, col:24> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x12d945420 <col:16> 'struct pgpath *' lvalue ParmVar 0x12d928648 'pgpath' 'struct pgpath *'     |-CallExpr 0x12d9457b0 <line:13:2, col:63> '<dependent type>' contains-errors     | |-CXXDependentScopeMemberExpr 0x12d945630 <col:2, col:23> '<dependent type>' contains-errors lvalue ->fail_path     | | `-CXXDependentScopeMemberExpr 0x12d9455e8 <col:2, col:17> '<dependent type>' contains-errors lvalue .type     | |   `-CXXDependentScopeMemberExpr 0x12d9455a0 <col:2, col:14> '<dependent type>' contains-errors lvalue ->ps     | |     `-RecoveryExpr 0x12d945578 <col:2, col:10> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x12d945540 <col:2> 'struct pgpath *' lvalue ParmVar 0x12d928648 'pgpath' 'struct pgpath *'     | |-UnaryOperator 0x12d945720 <col:33, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x12d9456d8 <col:34, col:46> '<dependent type>' contains-errors lvalue ->ps     | |   `-RecoveryExpr 0x12d9456b0 <col:34, col:42> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x12d945678 <col:34> 'struct pgpath *' lvalue ParmVar 0x12d928648 'pgpath' 'struct pgpath *'     | `-UnaryOperator 0x12d945798 <col:50, col:59> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12d945770 <col:51, col:59> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12d945738 <col:51> 'struct pgpath *' lvalue ParmVar 0x12d928648 'pgpath' 'struct pgpath *'     |-BinaryOperator 0x12d945860 <line:14:2, col:22> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12d945818 <col:2, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12d9457e0 <col:2> 'struct pgpath *' lvalue ParmVar 0x12d928648 'pgpath' 'struct pgpath *'     | `-IntegerLiteral 0x12d945840 <col:22> 'int' 0     |-UnaryOperator 0x12d9458e0 <line:15:2, col:20> '<dependent type>' contains-errors postfix '++' cannot overflow     | `-RecoveryExpr 0x12d9458b8 <col:2, col:10> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12d945880 <col:2> 'struct pgpath *' lvalue ParmVar 0x12d928648 'pgpath' 'struct pgpath *'     |-UnaryOperator 0x12d945958 <line:17:2, col:19> '<dependent type>' contains-errors postfix '--' cannot overflow     | `-RecoveryExpr 0x12d945930 <col:2, col:5> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12d9458f8 <col:2> 'struct multipath *' contains-errors lvalue Var 0x12d944e58 'm' 'struct multipath *'     |-IfStmt 0x12d945ae8 <line:19:2, line:20:23>     | |-BinaryOperator 0x12d9459f0 <line:19:6, col:19> 'int' contains-errors '=='     | | |-DeclRefExpr 0x12d945970 <col:6> 'struct pgpath *' lvalue ParmVar 0x12d928648 'pgpath' 'struct pgpath *'     | | `-RecoveryExpr 0x12d9459c8 <col:16, col:19> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12d945990 <col:16> 'struct multipath *' contains-errors lvalue Var 0x12d944e58 'm' 'struct multipath *'     | `-BinaryOperator 0x12d945ac8 <line:20:3, col:23> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x12d945a48 <col:3, col:6> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x12d945a10 <col:3> 'struct multipath *' contains-errors lvalue Var 0x12d944e58 'm' 'struct multipath *'     |   `-RecoveryExpr 0x12d945aa8 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12d946c48 <line:22:2, line:23:50> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d946a00 <line:22:2> 'int ()' Function 0x12d945b30 'dm_path_uevent' 'int ()'     | |-RecoveryExpr 0x12d946c28 <col:17> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x12d946a70 <col:40, col:43> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12d946a38 <col:40> 'struct multipath *' contains-errors lvalue Var 0x12d944e58 'm' 'struct multipath *'     | |-CXXDependentScopeMemberExpr 0x12d946b40 <line:23:9, col:27> '<dependent type>' contains-errors lvalue ->name     | | `-CXXDependentScopeMemberExpr 0x12d946af8 <col:9, col:22> '<dependent type>' contains-errors lvalue .dev     | |   `-RecoveryExpr 0x12d946ad0 <col:9, col:17> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x12d946a98 <col:9> 'struct pgpath *' lvalue ParmVar 0x12d928648 'pgpath' 'struct pgpath *'     | `-RecoveryExpr 0x12d946bc0 <col:33, col:36> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12d946b88 <col:33> 'struct multipath *' contains-errors lvalue Var 0x12d944e58 'm' 'struct multipath *'     |-CallExpr 0x12d946e00 <line:25:2, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d946d68 <col:2> 'int ()' Function 0x12d946cb0 'schedule_work' 'int ()'     | `-UnaryOperator 0x12d946de8 <col:16, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12d946dc0 <col:17, col:20> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12d946d88 <col:17> 'struct multipath *' contains-errors lvalue Var 0x12d944e58 'm' 'struct multipath *'     |-LabelStmt 0x12d946ff0 <line:27:1, line:28:40> 'out'     | `-CallExpr 0x12d946fc0 <col:2, col:40> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12d946f08 <col:2> 'int ()' Function 0x12d946e50 'spin_unlock_irqrestore' 'int ()'     |   |-UnaryOperator 0x12d946f88 <col:25, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x12d946f60 <col:26, col:29> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x12d946f28 <col:26> 'struct multipath *' contains-errors lvalue Var 0x12d944e58 'm' 'struct multipath *'     |   `-DeclRefExpr 0x12d946fa0 <col:35> 'unsigned long' lvalue Var 0x12d944c68 'flags' 'unsigned long'     `-ReturnStmt 0x12d947030 <line:30:2, col:9>       `-IntegerLiteral 0x12d947010 <col:9> 'int' 0 ","19709":"`-FunctionDecl 0x14b027b68  col:9 implicit used sprintf 'int (char *, const char *, ...)' extern   |-ParmVarDecl 0x14b027c68 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x14b027cd0 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x14b027c10 <<invalid sloc>> Implicit 906   `-FormatAttr 0x14b027d48 <col:9> Implicit printf 2 3 ","19481":"`-FunctionDecl 0x131829f18  col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x13182a018 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x13182a080 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x13182a0e8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x131829fc0 <<invalid sloc>> Implicit 882 ","19974":"`-FunctionDecl 0x126128288  line:1:1 invalid CC_ESC_WARN 'int (int *, int *)'   |-ParmVarDecl 0x126128128 <col:13, col:22> col:22 invalid env 'int *'   |-ParmVarDecl 0x1261281a8 <col:27, col:34> col:34 invalid c 'int *'   `-CompoundStmt 0x126141b48 <line:2:1, line:14:1>     |-IfStmt 0x126128400 <line:3:3, col:36>     | |-BinaryOperator 0x1261283d0 <col:7, col:20> 'int' contains-errors '=='     | | |-RecoveryExpr 0x126128390 <col:7> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1261283b0 <col:20> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1261283f0 <col:36>     `-IfStmt 0x126141b28 <line:5:3, line:13:3>       |-BinaryOperator 0x1261287e0 <line:5:7, line:6:64> 'int' contains-errors '&&'       | |-CallExpr 0x126128760 <line:5:7, col:64> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x126128580 <col:7> 'int ()' Function 0x1261284c8 'IS_SYNTAX_BV' 'int ()'       | | |-CXXDependentScopeMemberExpr 0x1261285c0 <col:20, col:25> '<dependent type>' contains-errors lvalue ->syntax       | | | `-RecoveryExpr 0x1261285a0 <col:20> '<dependent type>' contains-errors lvalue       | | `-RecoveryExpr 0x126128740 <col:33> '<dependent type>' contains-errors lvalue       | `-CallExpr 0x1261287b0 <line:6:7, col:64> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x126128650 <col:7> 'int ()' Function 0x1261284c8 'IS_SYNTAX_BV' 'int ()'       |   |-CXXDependentScopeMemberExpr 0x126128690 <col:20, col:25> '<dependent type>' contains-errors lvalue ->syntax       |   | `-RecoveryExpr 0x126128670 <col:20> '<dependent type>' contains-errors lvalue       |   `-RecoveryExpr 0x126128790 <col:33> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x126141b18 <col:67, line:13:3> ","19334":"`-FunctionDecl 0x141026a98  col:12 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x141026b98 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x141026b40 <<invalid sloc>> Implicit 902 ","19833":"`-FunctionDecl 0x151928318  line:1:12 invalid jas_cmshapmatlut_invert 'int (int *, int *, int)' static   |-ParmVarDecl 0x151928128 <col:36, col:56> col:56 referenced invalid invlut 'int *'   |-ParmVarDecl 0x1519281a8 <line:2:3, col:23> col:23 invalid lut 'int *'   |-ParmVarDecl 0x151928228 <col:28, col:32> col:32 used n 'int'   `-CompoundStmt 0x151945c68 <line:3:1, line:70:1>     |-DeclStmt 0x151928458 <line:4:2, col:7>     | `-VarDecl 0x1519283f0 <col:2, col:6> col:6 used i 'int'     |-DeclStmt 0x1519284f0 <line:5:2, col:7>     | `-VarDecl 0x151928488 <col:2, col:6> col:6 used j 'int'     |-DeclStmt 0x151928588 <line:6:2, col:7>     | `-VarDecl 0x151928520 <col:2, col:6> col:6 used k 'int'     |-CallExpr 0x151941800 <line:13:2, col:15> 'int'     | |-ImplicitCastExpr 0x1519287d0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x151928700 <col:2> 'int ()' Function 0x151928648 'assert' 'int ()'     | `-BinaryOperator 0x151928778 <col:9, col:14> 'int' '>='     |   |-ImplicitCastExpr 0x151928760 <col:9> 'int' <LValueToRValue>     |   | `-DeclRefExpr 0x151928720 <col:9> 'int' lvalue ParmVar 0x151928228 'n' 'int'     |   `-IntegerLiteral 0x151928740 <col:14> 'int' 2     |-IfStmt 0x151941b10 <line:14:2, line:17:2>     | |-CXXDependentScopeMemberExpr 0x151941848 <line:14:6, col:14> '<dependent type>' contains-errors lvalue ->data     | | `-RecoveryExpr 0x151941828 <col:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x151941af0 <col:20, line:17:2>     |   |-CallExpr 0x1519419f8 <line:15:3, col:24> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x151941970 <col:3> 'int ()' Function 0x1519418b8 'jas_free' 'int ()'     |   | `-CXXDependentScopeMemberExpr 0x1519419b0 <col:12, col:20> '<dependent type>' contains-errors lvalue ->data     |   |   `-RecoveryExpr 0x151941990 <col:12> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x151941ad0 <line:16:3, col:18> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x151941a68 <col:3, col:11> '<dependent type>' contains-errors lvalue ->data     |     | `-RecoveryExpr 0x151941a40 <col:3> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x151941a20 <col:3> 'int *' lvalue ParmVar 0x151928128 'invlut' 'int *'     |     `-IntegerLiteral 0x151941ab0 <col:18> 'int' 0     |-ForStmt 0x151941fa0 <line:19:2, line:24:2>     | |-BinaryOperator 0x151941b70 <line:19:7, col:11> 'int' '='     | | |-DeclRefExpr 0x151941b30 <col:7> 'int' lvalue Var 0x1519283f0 'i' 'int'     | | `-IntegerLiteral 0x151941b50 <col:11> 'int' 1     | |-<<<NULL>>>     | |-BinaryOperator 0x151941c18 <col:14, col:23> 'int' contains-errors '<'     | | |-DeclRefExpr 0x151941b90 <col:14> 'int' lvalue Var 0x1519283f0 'i' 'int'     | | `-CXXDependentScopeMemberExpr 0x151941bd0 <col:18, col:23> '<dependent type>' contains-errors lvalue ->size     | |   `-RecoveryExpr 0x151941bb0 <col:18> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x151941c58 <col:29, col:31> 'int' prefix '++'     | | `-DeclRefExpr 0x151941c38 <col:31> 'int' lvalue Var 0x1519283f0 'i' 'int'     | `-CompoundStmt 0x151941f88 <col:34, line:24:2>     |   `-IfStmt 0x151941f68 <line:20:3, line:23:3>     |     |-BinaryOperator 0x151941e60 <line:20:7, col:37> 'int' contains-errors '>'     |     | |-ArraySubscriptExpr 0x151941d68 <col:7, col:22> '<dependent type>' contains-errors lvalue     |     | | |-ImplicitCastExpr 0x151941d50 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>     |     | | | `-CXXDependentScopeMemberExpr 0x151941c90 <col:7, col:12> '<dependent type>' contains-errors lvalue ->data     |     | | |   `-RecoveryExpr 0x151941c70 <col:7> '<dependent type>' contains-errors lvalue     |     | | `-BinaryOperator 0x151941d30 <col:17, col:21> 'int' '-'     |     | |   |-ImplicitCastExpr 0x151941d18 <col:17> 'int' <LValueToRValue>     |     | |   | `-DeclRefExpr 0x151941cd8 <col:17> 'int' lvalue Var 0x1519283f0 'i' 'int'     |     | |   `-IntegerLiteral 0x151941cf8 <col:21> 'int' 1     |     | `-ArraySubscriptExpr 0x151941e40 <col:26, col:37> '<dependent type>' contains-errors lvalue     |     |   |-ImplicitCastExpr 0x151941e10 <col:26, col:31> '<dependent type>' contains-errors <LValueToRValue>     |     |   | `-CXXDependentScopeMemberExpr 0x151941da8 <col:26, col:31> '<dependent type>' contains-errors lvalue ->data     |     |   |   `-RecoveryExpr 0x151941d88 <col:26> '<dependent type>' contains-errors lvalue     |     |   `-ImplicitCastExpr 0x151941e28 <col:36> 'int' <LValueToRValue>     |     |     `-DeclRefExpr 0x151941df0 <col:36> 'int' lvalue Var 0x1519283f0 'i' 'int'     |     `-CompoundStmt 0x151941f48 <col:40, line:23:3>     |       |-CallExpr 0x151941ed8 <line:21:4, col:12> 'int'     |       | |-ImplicitCastExpr 0x151941ec0 <col:4> 'int (*)()' <FunctionToPointerDecay>     |       | | `-DeclRefExpr 0x151941e80 <col:4> 'int ()' Function 0x151928648 'assert' 'int ()'     |       | `-IntegerLiteral 0x151941ea0 <col:11> 'int' 0     |       `-ReturnStmt 0x151941f38 <line:22:4, col:12>     |         `-UnaryOperator 0x151941f20 <col:11, col:12> 'int' prefix '-'     |           `-IntegerLiteral 0x151941f00 <col:12> 'int' 1     |-IfStmt 0x1519421e0 <line:25:2, line:26:11>     | |-RecoveryExpr 0x151942178 <line:25:6, col:59> '_Bool' contains-errors     | `-ReturnStmt 0x1519421d0 <line:26:3, col:11>     |   `-UnaryOperator 0x1519421b8 <col:10, col:11> 'int' prefix '-'     |     `-IntegerLiteral 0x151942198 <col:11> 'int' 1     |-BinaryOperator 0x1519422b0 <line:27:2, col:17> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x151942248 <col:2, col:10> '<dependent type>' contains-errors lvalue ->size     | | `-RecoveryExpr 0x151942220 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x151942200 <col:2> 'int *' lvalue ParmVar 0x151928128 'invlut' 'int *'     | `-DeclRefExpr 0x151942290 <col:17> 'int' lvalue ParmVar 0x151928228 'n' 'int'     |-ForStmt 0x151945c00 <line:28:2, line:62:2>     | |-BinaryOperator 0x151942310 <line:28:7, col:11> 'int' '='     | | |-DeclRefExpr 0x1519422d0 <col:7> 'int' lvalue Var 0x1519283f0 'i' 'int'     | | `-IntegerLiteral 0x1519422f0 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x1519423b8 <col:14, col:26> 'int' contains-errors '<'     | | |-DeclRefExpr 0x151942330 <col:14> 'int' lvalue Var 0x1519283f0 'i' 'int'     | | `-CXXDependentScopeMemberExpr 0x151942370 <col:18, col:26> '<dependent type>' contains-errors lvalue ->size     | |   `-RecoveryExpr 0x151942350 <col:18> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x1519423f8 <col:32, col:34> 'int' prefix '++'     | | `-DeclRefExpr 0x1519423d8 <col:34> 'int' lvalue Var 0x1519283f0 'i' 'int'     | `-CompoundStmt 0x1519457e8 <col:37, line:62:2>     |   `-ForStmt 0x1519456b0 <line:31:3, line:60:3>     |     |-BinaryOperator 0x1519425f0 <line:31:8, col:12> 'int' '='     |     | |-DeclRefExpr 0x1519425b0 <col:8> 'int' lvalue Var 0x151928488 'j' 'int'     |     | `-IntegerLiteral 0x1519425d0 <col:12> 'int' 0     |     |-<<<NULL>>>     |     |-BinaryOperator 0x151942698 <col:15, col:24> 'int' contains-errors '<'     |     | |-DeclRefExpr 0x151942610 <col:15> 'int' lvalue Var 0x151928488 'j' 'int'     |     | `-CXXDependentScopeMemberExpr 0x151942650 <col:19, col:24> '<dependent type>' contains-errors lvalue ->size     |     |   `-RecoveryExpr 0x151942630 <col:19> '<dependent type>' contains-errors lvalue     |     |-UnaryOperator 0x1519426d8 <col:30, col:32> 'int' prefix '++'     |     | `-DeclRefExpr 0x1519426b8 <col:32> 'int' lvalue Var 0x151928488 'j' 'int'     |     `-CompoundStmt 0x151945690 <col:35, line:60:3>     |       |-IfStmt 0x151945080 <line:33:4, line:49:4>     |       | |-BinaryOperator 0x151944860 <line:33:8, col:14> 'int' contains-errors '=='     |       | | |-RecoveryExpr 0x151944820 <col:8> '<dependent type>' contains-errors lvalue     |       | | `-RecoveryExpr 0x151944840 <col:14> '<dependent type>' contains-errors lvalue     |       | `-CompoundStmt 0x151945058 <col:18, line:49:4>     |       |   |-ForStmt 0x151944be0 <line:34:5, line:41:5>     |       |   | |-BinaryOperator 0x151944918 <line:34:10, col:18> 'int' '='     |       |   | | |-DeclRefExpr 0x151944880 <col:10> 'int' lvalue Var 0x151928520 'k' 'int'     |       |   | | `-BinaryOperator 0x1519448f8 <col:14, col:18> 'int' '+'     |       |   | |   |-ImplicitCastExpr 0x1519448e0 <col:14> 'int' <LValueToRValue>     |       |   | |   | `-DeclRefExpr 0x1519448a0 <col:14> 'int' lvalue Var 0x151928488 'j' 'int'     |       |   | |   `-IntegerLiteral 0x1519448c0 <col:18> 'int' 1     |       |   | |-<<<NULL>>>     |       |   | |-BinaryOperator 0x1519449c0 <col:21, col:30> 'int' contains-errors '<'     |       |   | | |-DeclRefExpr 0x151944938 <col:21> 'int' lvalue Var 0x151928520 'k' 'int'     |       |   | | `-CXXDependentScopeMemberExpr 0x151944978 <col:25, col:30> '<dependent type>' contains-errors lvalue ->size     |       |   | |   `-RecoveryExpr 0x151944958 <col:25> '<dependent type>' contains-errors lvalue     |       |   | |-UnaryOperator 0x151944a00 <col:36, col:38> 'int' prefix '++'     |       |   | | `-DeclRefExpr 0x1519449e0 <col:38> 'int' lvalue Var 0x151928520 'k' 'int'     |       |   | `-CompoundStmt 0x151944bc8 <col:41, line:41:5>     |       |   |   `-IfStmt 0x151944ba8 <line:36:6, line:37:7>     |       |   |     |-BinaryOperator 0x151944b80 <line:36:10, col:16> 'int' contains-errors '!='     |       |   |     | |-RecoveryExpr 0x151944b40 <col:10> '<dependent type>' contains-errors lvalue     |       |   |     | `-RecoveryExpr 0x151944b60 <col:16> '<dependent type>' contains-errors lvalue     |       |   |     `-BreakStmt 0x151944ba0 <line:37:7>     |       |   |-IfStmt 0x151945030 <line:42:5, line:47:5>     |       |   | |-BinaryOperator 0x151944ca0 <line:42:9, col:18> 'int' contains-errors '<'     |       |   | | |-DeclRefExpr 0x151944c18 <col:9> 'int' lvalue Var 0x151928520 'k' 'int'     |       |   | | `-CXXDependentScopeMemberExpr 0x151944c58 <col:13, col:18> '<dependent type>' contains-errors lvalue ->size     |       |   | |   `-RecoveryExpr 0x151944c38 <col:13> '<dependent type>' contains-errors lvalue     |       |   | `-CompoundStmt 0x151945018 <col:24, line:47:5>     |       |   |   `-UnaryOperator 0x151944ce0 <line:43:6, col:8> 'int' prefix '--'     |       |   |     `-DeclRefExpr 0x151944cc0 <col:8> 'int' lvalue Var 0x151928520 'k' 'int'     |       |   `-BreakStmt 0x151945050 <line:48:5>     |       `-IfStmt 0x151945670 <line:50:4, line:59:4>     |         |-BinaryOperator 0x151945168 <line:50:8, col:24> 'int' contains-errors '<'     |         | |-DeclRefExpr 0x1519450a0 <col:8> 'int' lvalue Var 0x151928488 'j' 'int'     |         | `-BinaryOperator 0x151945148 <col:12, col:24> '<dependent type>' contains-errors '-'     |         |   |-CXXDependentScopeMemberExpr 0x1519450e0 <col:12, col:17> '<dependent type>' contains-errors lvalue ->size     |         |   | `-RecoveryExpr 0x1519450c0 <col:12> '<dependent type>' contains-errors lvalue     |         |   `-IntegerLiteral 0x151945128 <col:24> 'int' 1     |         `-CompoundStmt 0x151945658 <col:27, line:59:4>     |           `-IfStmt 0x151945638 <line:52:5, line:58:5>     |             |-RecoveryExpr 0x1519452a0 <line:52:9, col:25> '_Bool' contains-errors     |             `-CompoundStmt 0x151945620 <col:29, line:58:5>     |               `-BreakStmt 0x151945618 <line:57:6>     `-ReturnStmt 0x151945c58 <line:69:2, col:9>       `-IntegerLiteral 0x151945c38 <col:9> 'int' 0 ","19675":"`-FunctionDecl 0x13c9281a8  line:1:1 print_usage 'int (int)'   |-ParmVarDecl 0x13c9280d8 <col:14, col:18> col:18 used error 'int'   `-CompoundStmt 0x13c9287c8 <line:2:1, line:5:1>     `-CallExpr 0x13c928790 <line:3:3, line:4:21> '<dependent type>' contains-errors       |-DeclRefExpr 0x13c9283d0 <line:3:3> 'int ()' Function 0x13c928318 'fprintf' 'int ()'       |-ConditionalOperator 0x13c9286e8 <col:12, col:29> '<dependent type>' contains-errors       | |-DeclRefExpr 0x13c9283f0 <col:12> 'int' lvalue ParmVar 0x13c9280d8 'error' 'int'       | |-RecoveryExpr 0x13c9286a8 <col:20> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x13c9286c8 <col:29> '<dependent type>' contains-errors lvalue       |-CallExpr 0x13c928730 <col:37, col:44> 'int'       | |-ImplicitCastExpr 0x13c928718 <col:37> 'int (*)()' <FunctionToPointerDecay>       | | `-DeclRefExpr 0x13c928550 <col:37> 'int ()' Function 0x13c928498 '_' 'int ()'       | `-ImplicitCastExpr 0x13c928758 <col:39> 'char *' <ArrayToPointerDecay>       |   `-StringLiteral 0x13c9285b0 <col:39> 'char[4]' lvalue \"STR\"       `-RecoveryExpr 0x13c928770 <line:4:12> '<dependent type>' contains-errors lvalue ","19255":"`-FunctionDecl 0x1308a3c38  line:1:12 invalid purge_port 'int (struct usb_serial_port *, int)' static   |-ParmVarDecl 0x13100e248 <col:23, col:47> col:47 used port 'struct usb_serial_port *'   |-ParmVarDecl 0x13100e2e0 <col:53, col:59> col:59 invalid mask 'int'   `-CompoundStmt 0x1308a4410 <line:2:1, line:13:1>     |-DeclStmt 0x1308a3dd0 <line:3:2, col:37>     | `-VarDecl 0x1308a3d08 <col:2, col:26> col:6 used port_number 'int' cinit     |   `-RecoveryExpr 0x1308a3da8 <col:20, col:26> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1308a3d70 <col:20> 'struct usb_serial_port *' lvalue ParmVar 0x13100e248 'port' 'struct usb_serial_port *'     `-CallExpr 0x1308a4140 <line:5:2, col:56> '<dependent type>' contains-errors       |-DeclRefExpr 0x1308a3f40 <col:2> 'int ()' Function 0x1308a3e88 'dev_dbg' 'int ()'       |-UnaryOperator 0x1308a3fc0 <col:10, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow       | `-RecoveryExpr 0x1308a3f98 <col:11, col:17> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x1308a3f60 <col:11> 'struct usb_serial_port *' lvalue ParmVar 0x13100e248 'port' 'struct usb_serial_port *'       |-StringLiteral 0x1308a4020 <col:22> 'char[4]' lvalue \"STR\"       |-PredefinedExpr 0x1308a40e8 <col:29> 'const char[11]' lvalue __func__       | `-StringLiteral 0x1308a40c0 <col:29> 'const char[11]' lvalue \"purge_port\"       |-DeclRefExpr 0x1308a4100 <col:39> 'int' contains-errors lvalue Var 0x1308a3d08 'port_number' 'int'       `-RecoveryExpr 0x1308a4120 <col:52> '<dependent type>' contains-errors lvalue ","20021":"`-FunctionDecl 0x12a826a20  col:31 implicit used strchr 'char *(const char *, int)' extern   |-ParmVarDecl 0x12a826b20 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x12a826b88 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x12a826ac8 <<invalid sloc>> Implicit 893 ","19582":"`-FunctionDecl 0x12b028708  col:5 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x12b029030 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x12b0287b0 <<invalid sloc>> Implicit 873 ","20122":"`-FunctionDecl 0x1550268c8  line:1:12 kvm_vcpu_ioctl_set_cpuid2 'int (struct kvm_vcpu *, struct kvm_cpuid2 *, struct kvm_cpuid_entry2)' static   |-ParmVarDecl 0x15500e248 <col:38, col:55> col:55 used vcpu 'struct kvm_vcpu *'   |-ParmVarDecl 0x155026628 <line:2:10, col:29> col:29 used cpuid 'struct kvm_cpuid2 *'   |-ParmVarDecl 0x155026788 <line:3:10, col:34> col:34 invalid __user 'struct kvm_cpuid_entry2'   `-CompoundStmt 0x1550272a8 <line:4:1, line:19:1>     |-DeclStmt 0x155026a50 <line:5:2, col:7>     | `-VarDecl 0x1550269e8 <col:2, col:6> col:6 used r 'int'     |-BinaryOperator 0x155026b58 <line:7:2, col:7> 'int' contains-errors '='     | |-DeclRefExpr 0x155026a68 <col:2> 'int' lvalue Var 0x1550269e8 'r' 'int'     | `-UnaryOperator 0x155026b40 <col:6, col:7> '<dependent type>' contains-errors prefix '-' cannot overflow     |   `-ImplicitCastExpr 0x155026b28 <col:7> '<dependent type>' contains-errors <LValueToRValue>     |     `-RecoveryExpr 0x155026b08 <col:7> '<dependent type>' contains-errors lvalue     |-IfStmt 0x155026cb8 <line:8:2, line:9:8>     | |-BinaryOperator 0x155026c30 <line:8:6, col:20> 'int' contains-errors '>'     | | |-RecoveryExpr 0x155026bb0 <col:6, col:13> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x155026b78 <col:6> 'struct kvm_cpuid2 *' lvalue ParmVar 0x155026628 'cpuid' 'struct kvm_cpuid2 *'     | | `-RecoveryExpr 0x155026c10 <col:20> '<dependent type>' contains-errors lvalue     | `-GotoStmt 0x155026ca0 <line:9:3, col:8> 'out' 0x155026c50     |-BinaryOperator 0x155026db0 <line:10:2, col:7> 'int' contains-errors '='     | |-DeclRefExpr 0x155026cd8 <col:2> 'int' lvalue Var 0x1550269e8 'r' 'int'     | `-UnaryOperator 0x155026d98 <col:6, col:7> '<dependent type>' contains-errors prefix '-' cannot overflow     |   `-ImplicitCastExpr 0x155026d80 <col:7> '<dependent type>' contains-errors <LValueToRValue>     |     `-RecoveryExpr 0x155026d60 <col:7> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1550270c8 <line:11:2, line:13:8>     | |-RecoveryExpr 0x155027090 <line:11:6, line:12:52> '_Bool' contains-errors     | `-GotoStmt 0x1550270b0 <line:13:3, col:8> 'out' 0x155026c50     |-BinaryOperator 0x1550271f0 <line:14:2, col:33> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x155027148 <col:2, col:13> '<dependent type>' contains-errors lvalue .cpuid_nent     | | `-RecoveryExpr 0x155027120 <col:2, col:8> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1550270e8 <col:2> 'struct kvm_vcpu *' lvalue ParmVar 0x15500e248 'vcpu' 'struct kvm_vcpu *'     | `-RecoveryExpr 0x1550271c8 <col:26, col:33> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x155027190 <col:26> 'struct kvm_cpuid2 *' lvalue ParmVar 0x155026628 'cpuid' 'struct kvm_cpuid2 *'     |-ReturnStmt 0x155027230 <line:15:2, col:9>     | `-IntegerLiteral 0x155027210 <col:9> 'int' 0     `-LabelStmt 0x155027288 <line:17:1, line:18:9> 'out'       `-ReturnStmt 0x155027278 <col:2, col:9>         `-ImplicitCastExpr 0x155027260 <col:9> 'int' <LValueToRValue>           `-DeclRefExpr 0x155027240 <col:9> 'int' lvalue Var 0x1550269e8 'r' 'int' ","19695":"`-FunctionDecl 0x12e80df18  line:1:5 invalid Converter_strntoll 'int (int *, const char *, int)'   |-ParmVarDecl 0x12e80dd28 <col:24, col:38> col:38 invalid cs 'int *'   |-ParmVarDecl 0x12e80dda8 <col:42, col:54> col:54 used str 'const char *'   |-ParmVarDecl 0x12e80de28 <col:59, col:66> col:66 invalid length 'int'   `-CompoundStmt 0x12e80e350 <line:2:5, line:6:5> ","19189":"`-FunctionDecl 0x121942670  col:8 implicit used isprint 'int (int)' extern   |-ParmVarDecl 0x121942770 <<invalid sloc>> <invalid sloc> 'int'   |-BuiltinAttr 0x121942718 <<invalid sloc>> Implicit 927   |-NoThrowAttr 0x122009000 <col:8> Implicit   `-PureAttr 0x122009028 <col:8> Implicit ","19730":"`-FunctionDecl 0x154112600  col:5 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x154112700 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x1541126a8 <<invalid sloc>> Implicit 873 ","19092":"`-FunctionDecl 0x12a128750  line:1:6 recalc_intercepts 'void (struct vcpu_svm *)'   |-ParmVarDecl 0x12a128648 <col:24, col:41> col:41 used svm 'struct vcpu_svm *'   `-CompoundStmt 0x12a143610 <line:2:1, line:36:1>     |-DeclStmt 0x12a140d68 <line:3:2, col:37>     | |-RecordDecl 0x12a140a48 <col:2, col:9> col:9 struct vmcb_control_area     | |-VarDecl 0x12a140bb8 <col:2, col:28> col:28 used c 'struct vmcb_control_area *'     | |-VarDecl 0x12a140c48 <col:2, col:32> col:32 used h 'struct vmcb_control_area *'     | `-VarDecl 0x12a140cd8 <col:2, col:36> col:36 used g 'struct vmcb_control_area *'     |-DeclStmt 0x12a140e00 <line:4:2, col:16>     | `-VarDecl 0x12a140d98 <col:2, col:15> col:15 used i 'unsigned int'     |-CallExpr 0x12a141028 <line:6:2, col:44> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12a140f40 <col:2> 'int ()' Function 0x12a140e88 'vmcb_mark_dirty' 'int ()'     | |-RecoveryExpr 0x12a140f98 <col:18, col:23> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12a140f60 <col:18> 'struct vcpu_svm *' lvalue ParmVar 0x12a128648 'svm' 'struct vcpu_svm *'     | `-RecoveryExpr 0x12a141008 <col:29> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12a141220 <line:8:2, line:9:3>     | |-UnaryOperator 0x12a1411f8 <line:8:6, col:31> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x12a1411d0 <col:7, col:31> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12a141138 <col:7> 'int ()' Function 0x12a141080 'is_guest_mode' 'int ()'     | |   `-UnaryOperator 0x12a1411b8 <col:21, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-RecoveryExpr 0x12a141190 <col:22, col:27> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x12a141158 <col:22> 'struct vcpu_svm *' lvalue ParmVar 0x12a128648 'svm' 'struct vcpu_svm *'     | `-ReturnStmt 0x12a141210 <line:9:3>     |-BinaryOperator 0x12a141320 <line:11:2, col:18> 'struct vmcb_control_area *' contains-errors '='     | |-DeclRefExpr 0x12a141240 <col:2> 'struct vmcb_control_area *' lvalue Var 0x12a140bb8 'c' 'struct vmcb_control_area *'     | `-UnaryOperator 0x12a141308 <col:6, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x12a1412c0 <col:7, col:18> '<dependent type>' contains-errors lvalue ->control     |     `-RecoveryExpr 0x12a141298 <col:7, col:12> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x12a141260 <col:7> 'struct vcpu_svm *' lvalue ParmVar 0x12a128648 'svm' 'struct vcpu_svm *'     |-BinaryOperator 0x12a141468 <line:12:2, col:24> 'struct vmcb_control_area *' contains-errors '='     | |-DeclRefExpr 0x12a141340 <col:2> 'struct vmcb_control_area *' lvalue Var 0x12a140c48 'h' 'struct vmcb_control_area *'     | `-UnaryOperator 0x12a141450 <col:6, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x12a141408 <col:7, col:24> '<dependent type>' contains-errors lvalue ->control     |     `-CXXDependentScopeMemberExpr 0x12a1413c0 <col:7, col:19> '<dependent type>' contains-errors lvalue .ptr     |       `-RecoveryExpr 0x12a141398 <col:7, col:12> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x12a141360 <col:7> 'struct vcpu_svm *' lvalue ParmVar 0x12a128648 'svm' 'struct vcpu_svm *'     |-BinaryOperator 0x12a141568 <line:13:2, col:19> 'struct vmcb_control_area *' contains-errors '='     | |-DeclRefExpr 0x12a141488 <col:2> 'struct vmcb_control_area *' lvalue Var 0x12a140cd8 'g' 'struct vmcb_control_area *'     | `-UnaryOperator 0x12a141550 <col:6, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x12a141508 <col:7, col:19> '<dependent type>' contains-errors lvalue .ctl     |     `-RecoveryExpr 0x12a1414e0 <col:7, col:12> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x12a1414a8 <col:7> 'struct vcpu_svm *' lvalue ParmVar 0x12a128648 'svm' 'struct vcpu_svm *'     |-ForStmt 0x12a141890 <line:15:2, line:16:37>     | |-BinaryOperator 0x12a1415e0 <line:15:7, col:11> 'unsigned int' '='     | | |-DeclRefExpr 0x12a141588 <col:7> 'unsigned int' lvalue Var 0x12a140d98 'i' 'unsigned int'     | | `-ImplicitCastExpr 0x12a1415c8 <col:11> 'unsigned int' <IntegralCast>     | |   `-IntegerLiteral 0x12a1415a8 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x12a141678 <col:14, col:18> 'int' contains-errors '<'     | | |-DeclRefExpr 0x12a141600 <col:14> 'unsigned int' lvalue Var 0x12a140d98 'i' 'unsigned int'     | | `-RecoveryExpr 0x12a141658 <col:18> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x12a1416b8 <col:33, col:34> 'unsigned int' postfix '++'     | | `-DeclRefExpr 0x12a141698 <col:33> 'unsigned int' lvalue Var 0x12a140d98 'i' 'unsigned int'     | `-BinaryOperator 0x12a141870 <line:16:3, col:37> '<dependent type>' contains-errors '='     |   |-ArraySubscriptExpr 0x12a141780 <col:3, col:18> '<dependent type>' contains-errors lvalue     |   | |-ImplicitCastExpr 0x12a141750 <col:3, col:6> '<dependent type>' contains-errors <LValueToRValue>     |   | | `-RecoveryExpr 0x12a141708 <col:3, col:6> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x12a1416d0 <col:3> 'struct vmcb_control_area *' lvalue Var 0x12a140bb8 'c' 'struct vmcb_control_area *'     |   | `-ImplicitCastExpr 0x12a141768 <col:17> 'unsigned int' <LValueToRValue>     |   |   `-DeclRefExpr 0x12a141730 <col:17> 'unsigned int' lvalue Var 0x12a140d98 'i' 'unsigned int'     |   `-ArraySubscriptExpr 0x12a141850 <col:22, col:37> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x12a141820 <col:22, col:25> '<dependent type>' contains-errors <LValueToRValue>     |     | `-RecoveryExpr 0x12a1417d8 <col:22, col:25> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x12a1417a0 <col:22> 'struct vmcb_control_area *' lvalue Var 0x12a140c48 'h' 'struct vmcb_control_area *'     |     `-ImplicitCastExpr 0x12a141838 <col:36> 'unsigned int' <LValueToRValue>     |       `-DeclRefExpr 0x12a141800 <col:36> 'unsigned int' lvalue Var 0x12a140d98 'i' 'unsigned int'     |-IfStmt 0x12a143168 <line:18:2, line:25:2>     | |-BinaryOperator 0x12a141980 <line:18:6, col:19> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x12a141900 <col:6, col:9> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x12a1418c8 <col:6> 'struct vmcb_control_area *' lvalue Var 0x12a140cd8 'g' 'struct vmcb_control_area *'     | | `-RecoveryExpr 0x12a141960 <col:19> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12a143140 <col:40, line:25:2>     |   |-CallExpr 0x12a142f60 <line:20:3, col:43> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12a142eb8 <col:3> 'int ()' Function 0x12a142e00 'vmcb_clr_intercept' 'int ()'     |   | |-DeclRefExpr 0x12a142ed8 <col:22> 'struct vmcb_control_area *' lvalue Var 0x12a140bb8 'c' 'struct vmcb_control_area *'     |   | `-RecoveryExpr 0x12a142f40 <col:25> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x12a143038 <line:21:3, col:44> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12a142f90 <col:3> 'int ()' Function 0x12a142e00 'vmcb_clr_intercept' 'int ()'     |   | |-DeclRefExpr 0x12a142fb0 <col:22> 'struct vmcb_control_area *' lvalue Var 0x12a140bb8 'c' 'struct vmcb_control_area *'     |   | `-RecoveryExpr 0x12a143018 <col:25> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x12a143110 <line:24:3, col:40> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12a143068 <col:3> 'int ()' Function 0x12a142e00 'vmcb_clr_intercept' 'int ()'     |     |-DeclRefExpr 0x12a143088 <col:22> 'struct vmcb_control_area *' lvalue Var 0x12a140bb8 'c' 'struct vmcb_control_area *'     |     `-RecoveryExpr 0x12a1430f0 <col:25> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12a143230 <line:28:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12a143188 <col:2> 'int ()' Function 0x12a142e00 'vmcb_clr_intercept' 'int ()'     | |-DeclRefExpr 0x12a1431a8 <col:21> 'struct vmcb_control_area *' lvalue Var 0x12a140bb8 'c' 'struct vmcb_control_area *'     | `-RecoveryExpr 0x12a143210 <col:24> '<dependent type>' contains-errors lvalue     `-ForStmt 0x12a143578 <line:30:2, line:31:38>       |-BinaryOperator 0x12a1432b8 <line:30:7, col:11> 'unsigned int' '='       | |-DeclRefExpr 0x12a143260 <col:7> 'unsigned int' lvalue Var 0x12a140d98 'i' 'unsigned int'       | `-ImplicitCastExpr 0x12a1432a0 <col:11> 'unsigned int' <IntegralCast>       |   `-IntegerLiteral 0x12a143280 <col:11> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x12a143350 <col:14, col:18> 'int' contains-errors '<'       | |-DeclRefExpr 0x12a1432d8 <col:14> 'unsigned int' lvalue Var 0x12a140d98 'i' 'unsigned int'       | `-RecoveryExpr 0x12a143330 <col:18> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x12a143390 <col:33, col:34> 'unsigned int' postfix '++'       | `-DeclRefExpr 0x12a143370 <col:33> 'unsigned int' lvalue Var 0x12a140d98 'i' 'unsigned int'       `-CompoundAssignOperator 0x12a143548 <line:31:3, col:38> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'         |-ArraySubscriptExpr 0x12a143458 <col:3, col:18> '<dependent type>' contains-errors lvalue         | |-ImplicitCastExpr 0x12a143428 <col:3, col:6> '<dependent type>' contains-errors <LValueToRValue>         | | `-RecoveryExpr 0x12a1433e0 <col:3, col:6> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x12a1433a8 <col:3> 'struct vmcb_control_area *' lvalue Var 0x12a140bb8 'c' 'struct vmcb_control_area *'         | `-ImplicitCastExpr 0x12a143440 <col:17> 'unsigned int' <LValueToRValue>         |   `-DeclRefExpr 0x12a143408 <col:17> 'unsigned int' lvalue Var 0x12a140d98 'i' 'unsigned int'         `-ArraySubscriptExpr 0x12a143528 <col:23, col:38> '<dependent type>' contains-errors lvalue           |-ImplicitCastExpr 0x12a1434f8 <col:23, col:26> '<dependent type>' contains-errors <LValueToRValue>           | `-RecoveryExpr 0x12a1434b0 <col:23, col:26> '<dependent type>' contains-errors lvalue           |   `-DeclRefExpr 0x12a143478 <col:23> 'struct vmcb_control_area *' lvalue Var 0x12a140cd8 'g' 'struct vmcb_control_area *'           `-ImplicitCastExpr 0x12a143510 <col:37> 'unsigned int' <LValueToRValue>             `-DeclRefExpr 0x12a1434d8 <col:37> 'unsigned int' lvalue Var 0x12a140d98 'i' 'unsigned int' ","19642":"`-FunctionDecl 0x13200dda0  line:1:13 comps_objmrtree_data_destroy_v 'void (void *)' inline   |-ParmVarDecl 0x13200dcd8 <col:44, col:51> col:51 rtd 'void *'   `-CompoundStmt 0x13200dff8 <col:56, line:3:1> ","19875":"`-FunctionDecl 0x1220333a8  line:1:7 secure_getenv 'char *(const char *)'   |-ParmVarDecl 0x1220332d8 <col:21, col:33> col:33 used name 'const char *'   `-CompoundStmt 0x122033570 <col:39, line:4:1>     |-CStyleCastExpr 0x1220334e8 <line:2:3, col:9> 'void' <ToVoid>     | `-ImplicitCastExpr 0x1220334d0 <col:9> 'const char *' <LValueToRValue> part_of_explicit_cast     |   `-DeclRefExpr 0x1220334a0 <col:9> 'const char *' lvalue ParmVar 0x1220332d8 'name' 'const char *'     `-ReturnStmt 0x122033560 <line:3:3, col:10>       `-RecoveryExpr 0x122033540 <col:10> '<dependent type>' contains-errors lvalue ","19766":"`-FunctionDecl 0x145128198  line:1:1 func_tbl_get 'int (void)'   `-CompoundStmt 0x145128318 <line:2:1, line:4:1>     `-ReturnStmt 0x145128308 <line:3:5, col:13>       `-UnaryOperator 0x1451282f0 <col:12, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x1451282d0 <col:13> '<dependent type>' contains-errors lvalue ","19848":"`-FunctionDecl 0x1558943c8  line:1:16 invalid escLeftBracket9Routine 'int (int)' static   |-ParmVarDecl 0x1558942f0 <col:39, col:47> col:47 invalid c 'int'   `-CompoundStmt 0x155894648 <col:50, line:3:1>     `-ReturnStmt 0x155894638 <line:2:5, col:31>       `-CallExpr 0x155894610 <col:12, col:31> '<dependent type>' contains-errors         |-DeclRefExpr 0x1558945d0 <col:12> 'int ()' Function 0x155894518 'escFailureRoutine' 'int ()'         `-RecoveryExpr 0x1558945f0 <col:30> '<dependent type>' contains-errors lvalue ","19470":"`-FunctionDecl 0x153928208  line:1:30 invalid ScaleQuantumToLongLong 'int (const int)' static inline   |-ParmVarDecl 0x1539280f0 <col:53, col:67> col:67 invalid quantum 'const int'   `-CompoundStmt 0x153928520 <line:2:1, line:12:1> ","20066":"`-FunctionDecl 0x13d00dd98  line:1:1 _dbus_print_backtrace 'int (void)'   `-CompoundStmt 0x13d00e0d0 <line:2:1, line:28:1>     `-CallExpr 0x13d00e0a0 <line:26:3, col:25> '<dependent type>' contains-errors       |-DeclRefExpr 0x13d00dfb0 <col:3> 'int ()' Function 0x13d00def8 'fprintf' 'int ()'       |-RecoveryExpr 0x13d00e080 <col:12> '<dependent type>' contains-errors lvalue       `-StringLiteral 0x13d00e030 <col:20> 'char[4]' lvalue \"STR\" ","20158":"`-FunctionDecl 0x13a00de58  line:1:21 invalid send_discover 'int (int, int)' static   |-ParmVarDecl 0x13a00dcf0 <col:35, col:44> col:44 invalid xid 'int'   |-ParmVarDecl 0x13a00dd70 <col:49, col:58> col:58 invalid requested 'int'   `-CompoundStmt 0x13a027f48 <line:2:1, line:17:1>     |-DeclStmt 0x13a0274a8 <line:3:2, col:27>     | |-RecordDecl 0x13a00df10 <col:2, col:9> col:9 struct dhcp_packet     | `-VarDecl 0x13a00e008 <col:2, col:21> col:21 referenced invalid packet 'struct dhcp_packet'     |-CallExpr 0x13a0276e0 <line:6:2, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13a027620 <col:2> 'int ()' Function 0x13a027568 'init_packet' 'int ()'     | |-UnaryOperator 0x13a027660 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x13a027640 <col:15> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x13a0276c0 <col:23> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13a0277c0 <line:8:2, col:15> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13a027758 <col:2, col:9> '<dependent type>' contains-errors lvalue .xid     | | `-RecoveryExpr 0x13a027730 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13a027710 <col:2> 'struct dhcp_packet' lvalue Var 0x13a00e008 'packet' 'struct dhcp_packet'     | `-RecoveryExpr 0x13a0277a0 <col:15> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13a027a00 <line:9:2, line:10:64>     | |-RecoveryExpr 0x13a0277e0 <line:9:6> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x13a0279c8 <line:10:3, col:64> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13a0278e0 <col:3> 'int ()' Function 0x13a027828 'udhcp_add_simple_option' 'int ()'     |   |-UnaryOperator 0x13a027920 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x13a027900 <col:28> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x13a0279a8 <col:36> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x13a027950 <col:55> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13a027b58 <line:13:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13a027b00 <col:2> 'int ()' Function 0x13a027a48 'add_client_options' 'int ()'     | `-UnaryOperator 0x13a027b40 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13a027b20 <col:22> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13a027d28 <line:15:2, col:20> 'int'     | |-ImplicitCastExpr 0x13a027d10 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13a027c60 <col:2> 'int ()' Function 0x13a027ba8 'bb_error_msg' 'int ()'     | `-ImplicitCastExpr 0x13a027d50 <col:15> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x13a027cc0 <col:15> 'char[4]' lvalue \"STR\"     `-ReturnStmt 0x13a027f38 <line:16:2, col:65>       `-CallExpr 0x13a027f08 <col:9, col:65> '<dependent type>' contains-errors         |-DeclRefExpr 0x13a027e48 <col:9> 'int ()' Function 0x13a027d90 'raw_bcast_from_client_config_ifindex' 'int ()'         |-UnaryOperator 0x13a027e88 <col:46, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow         | `-RecoveryExpr 0x13a027e68 <col:47> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x13a027ee8 <col:55> '<dependent type>' contains-errors lvalue ","19488":"`-FunctionDecl 0x14e80de38  line:1:1 SPL_METHOD 'int (int, int)'   |-ParmVarDecl 0x14e80dd58 <col:12> col:12 SplObjectStorage 'int'   |-ParmVarDecl 0x14e80dcd8 <col:30> col:30 getHash 'int'   `-CompoundStmt 0x14f809468 <line:2:1, line:15:1>     |-DeclStmt 0x14e80dfe8 <line:4:2, col:12>     | `-VarDecl 0x14e80df80 <col:2, col:8> col:8 used hash 'char *'     |-IfStmt 0x14e80e2f8 <line:6:2, line:8:2>     | |-RecoveryExpr 0x14e80e2b0 <line:6:6, col:71> '_Bool' contains-errors     | `-CompoundStmt 0x14e80e2e0 <col:80, line:8:2>     |   `-ReturnStmt 0x14e80e2d0 <line:7:3>     |-BinaryOperator 0x14f809170 <line:10:2, col:19> 'char *' '='     | |-DeclRefExpr 0x14e80e318 <col:2> 'char *' lvalue Var 0x14e80df80 'hash' 'char *'     | `-ImplicitCastExpr 0x14f808d38 <col:9, col:19> 'char *' <IntegralToPointer>     |   `-CallExpr 0x14f808d10 <col:9, col:19> 'int'     |     |-ImplicitCastExpr 0x14f808cf8 <col:9> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14f808cb8 <col:9> 'int ()' Function 0x14f808c00 'emalloc' 'int ()'     |     `-IntegerLiteral 0x14f808cd8 <col:17> 'int' 33     `-CallExpr 0x14f809420 <line:13:2, col:23> 'int'       |-ImplicitCastExpr 0x14f809408 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x14f8093a8 <col:2> 'int ()' Function 0x14f8092f0 'RETVAL_STRING' 'int ()'       |-ImplicitCastExpr 0x14f809450 <col:16> 'char *' <LValueToRValue>       | `-DeclRefExpr 0x14f8093c8 <col:16> 'char *' lvalue Var 0x14e80df80 'hash' 'char *'       `-IntegerLiteral 0x14f8093e8 <col:22> 'int' 0 ","20124":"`-FunctionDecl 0x15780de38  line:1:1 TEST_F 'int (int, int)'   |-ParmVarDecl 0x15780dd58 <col:8> col:8 RouterTest 'int'   |-ParmVarDecl 0x15780dcd8 <col:20> col:20 MissingRequiredHeaders 'int'   `-CompoundStmt 0x1578277b0 <col:44, line:31:1>     |-RecoveryExpr 0x15780df98 <line:3:3> '<dependent type>' contains-errors lvalue     |-CallExpr 0x157827428 <line:13:3, col:29> 'int'     | `-ImplicitCastExpr 0x157827410 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x1578273b8 <col:3> 'int ()' Function 0x157827300 'expectResponseTimerCreate' 'int ()'     |-RecoveryExpr 0x157827478 <line:15:3> '<dependent type>' contains-errors lvalue     `-RecoveryExpr 0x1578274c8 <line:16:3> '<dependent type>' contains-errors lvalue ","19596":"`-FunctionDecl 0x13c826318  line:1:15 invalid GetTempLhs 'int *(int *, int *, const int *)'   |-ParmVarDecl 0x13c826128 <col:26, col:41> col:41 invalid context 'int *'   |-ParmVarDecl 0x13c8261a8 <col:50, col:62> col:62 invalid node 'int *'   |-ParmVarDecl 0x13c826228 <line:2:26, col:46> col:46 invalid lhs 'const int *'   `-CompoundStmt 0x13c10d0c0 <col:51, line:10:1>     |-IfStmt 0x13c10d058 <line:4:3, line:8:3>     | |-BinaryOperator 0x13c8266c8 <line:4:7, col:20> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x13c826628 <col:7, col:12> '<dependent type>' contains-errors lvalue ->type     | | | `-RecoveryExpr 0x13c826608 <col:7> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13c8266a8 <col:20> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13c10d048 <col:33, line:8:3>     `-ReturnStmt 0x13c10d0b0 <line:9:3, col:10>       `-RecoveryExpr 0x13c10d090 <col:10> '<dependent type>' contains-errors lvalue ","19784":"`-FunctionDecl 0x15b928758  line:1:23 is_ip_over_ddp 'int (struct sk_buff *)' static inline   |-ParmVarDecl 0x15b928648 <col:38, col:54> col:54 used skb 'struct sk_buff *'   `-CompoundStmt 0x15b940b58 <line:2:1, line:4:1>     `-ReturnStmt 0x15b940b48 <line:3:9, col:33>       `-BinaryOperator 0x15b940b28 <col:16, col:33> 'int' contains-errors '=='         |-ArraySubscriptExpr 0x15b940ae8 <col:16, col:28> '<dependent type>' contains-errors lvalue         | |-ImplicitCastExpr 0x15b940ad0 <col:16, col:21> '<dependent type>' contains-errors <LValueToRValue>         | | `-RecoveryExpr 0x15b940a88 <col:16, col:21> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x15b940a50 <col:16> 'struct sk_buff *' lvalue ParmVar 0x15b928648 'skb' 'struct sk_buff *'         | `-IntegerLiteral 0x15b940ab0 <col:26> 'int' 12         `-IntegerLiteral 0x15b940b08 <col:33> 'int' 22 ","19444":"`-FunctionDecl 0x13d80e350  line:1:13 assign_proto_idx 'void (struct proto *)' static   |-ParmVarDecl 0x13d80e248 <col:30, col:44> col:44 used prot 'struct proto *'   `-CompoundStmt 0x13d826fc0 <line:2:1, line:11:1>     |-BinaryOperator 0x13d8268e0 <line:3:2, col:71> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13d826680 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13d826648 <col:2> 'struct proto *' lvalue ParmVar 0x13d80e248 'prot' 'struct proto *'     | `-CallExpr 0x13d8268b0 <col:20, col:71> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13d8267d0 <col:20> 'int ()' Function 0x13d826718 'find_first_zero_bit' 'int ()'     |   |-RecoveryExpr 0x13d826870 <col:40> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x13d826890 <col:57> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13d826da8 <line:5:2, line:8:2>     | |-CallExpr 0x13d826b60 <line:5:6, col:52> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x13d8269e0 <col:6> 'int ()' Function 0x13d826928 'unlikely' 'int ()'     | | `-BinaryOperator 0x13d826b40 <col:15, col:51> 'int' contains-errors '=='     | |   |-RecoveryExpr 0x13d826a38 <col:15, col:21> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x13d826a00 <col:15> 'struct proto *' lvalue ParmVar 0x13d80e248 'prot' 'struct proto *'     | |   `-BinaryOperator 0x13d826b20 <col:34, col:51> '<dependent type>' contains-errors '-'     | |     |-RecoveryExpr 0x13d826b00 <col:34> '<dependent type>' contains-errors lvalue     | |     `-IntegerLiteral 0x13d826a78 <col:51> 'int' 1     | `-CompoundStmt 0x13d826d88 <col:55, line:8:2>     |   |-CallExpr 0x13d826d38 <line:6:3, col:15> 'int'     |   | |-ImplicitCastExpr 0x13d826d20 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x13d826c68 <col:3> 'int ()' Function 0x13d826bb0 'pr_err' 'int ()'     |   | `-ImplicitCastExpr 0x13d826d60 <col:10> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x13d826cd0 <col:10> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x13d826d78 <line:7:3>     `-CallExpr 0x13d826f90 <line:10:2, col:42> '<dependent type>' contains-errors       |-DeclRefExpr 0x13d826ea8 <col:2> 'int ()' Function 0x13d826df0 'set_bit' 'int ()'       |-RecoveryExpr 0x13d826f00 <col:10, col:16> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x13d826ec8 <col:10> 'struct proto *' lvalue ParmVar 0x13d80e248 'prot' 'struct proto *'       `-RecoveryExpr 0x13d826f70 <col:27> '<dependent type>' contains-errors lvalue ","19299":"`-FunctionDecl 0x12f940a00  line:1:1 referenced nfsd4_layout_verify 'int (struct svc_export *, unsigned int)'   |-ParmVarDecl 0x12f928648 <col:21, col:40> col:40 used exp 'struct svc_export *'   |-ParmVarDecl 0x12f9286c8 <col:45, col:58> col:58 used layout_type 'unsigned int'   `-CompoundStmt 0x12f941340 <line:2:1, line:15:1>     |-IfStmt 0x12f940f20 <line:3:2, line:6:2>     | |-UnaryOperator 0x12f940b78 <line:3:6, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12f940b60 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x12f940b38 <col:7, col:12> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x12f940b00 <col:7> 'struct svc_export *' lvalue ParmVar 0x12f928648 'exp' 'struct svc_export *'     | `-CompoundStmt 0x12f940f00 <col:29, line:6:2>     |   |-CallExpr 0x12f940e58 <line:4:3, col:26> 'int'     |   | |-ImplicitCastExpr 0x12f940e40 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x12f940cc0 <col:3> 'int ()' Function 0x12f940c08 'dprintk' 'int ()'     |   | |-ImplicitCastExpr 0x12f940e88 <col:11> 'char *' <ArrayToPointerDecay>     |   | | `-StringLiteral 0x12f940d20 <col:11> 'char[4]' lvalue \"STR\"     |   | `-ImplicitCastExpr 0x12f940ea0 <col:18> 'const char *' <ArrayToPointerDecay>     |   |   `-PredefinedExpr 0x12f940df0 <col:18> 'const char[20]' lvalue __func__     |   |     `-StringLiteral 0x12f940dc0 <col:18> 'const char[20]' lvalue \"nfsd4_layout_verify\"     |   `-ReturnStmt 0x12f940ef0 <line:5:3, col:10>     |     `-RecoveryExpr 0x12f940ed0 <col:10> '<dependent type>' contains-errors lvalue     `-IfStmt 0x12f941238 <line:8:2, line:12:2>       |-UnaryOperator 0x12f941078 <line:8:6, col:49> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-ParenExpr 0x12f941058 <col:7, col:49> '<dependent type>' contains-errors       |   `-BinaryOperator 0x12f941038 <col:8, col:48> '<dependent type>' contains-errors '&'       |     |-RecoveryExpr 0x12f940f78 <col:8, col:13> '<dependent type>' contains-errors lvalue       |     | `-DeclRefExpr 0x12f940f40 <col:8> 'struct svc_export *' lvalue ParmVar 0x12f928648 'exp' 'struct svc_export *'       |     `-ParenExpr 0x12f941018 <col:31, col:48> 'int'       |       `-BinaryOperator 0x12f940ff8 <col:32, col:37> 'int' '<<'       |         |-IntegerLiteral 0x12f940fa0 <col:32> 'int' 1       |         `-ImplicitCastExpr 0x12f940fe0 <col:37> 'unsigned int' <LValueToRValue>       |           `-DeclRefExpr 0x12f940fc0 <col:37> 'unsigned int' lvalue ParmVar 0x12f9286c8 'layout_type' 'unsigned int'       `-CompoundStmt 0x12f941218 <col:52, line:12:2>         |-CallExpr 0x12f941150 <line:9:3, line:10:25> 'int'         | |-ImplicitCastExpr 0x12f941138 <line:9:3> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x12f941090 <col:3> 'int ()' Function 0x12f940c08 'dprintk' 'int ()'         | |-ImplicitCastExpr 0x12f941188 <col:11> 'char *' <ArrayToPointerDecay>         | | `-StringLiteral 0x12f9410b0 <col:11> 'char[4]' lvalue \"STR\"         | |-ImplicitCastExpr 0x12f9411a0 <line:10:4> 'const char *' <ArrayToPointerDecay>         | | `-PredefinedExpr 0x12f941100 <col:4> 'const char[20]' lvalue __func__         | |   `-StringLiteral 0x12f9410d0 <col:4> 'const char[20]' lvalue \"nfsd4_layout_verify\"         | `-ImplicitCastExpr 0x12f9411b8 <col:14> 'unsigned int' <LValueToRValue>         |   `-DeclRefExpr 0x12f941118 <col:14> 'unsigned int' lvalue ParmVar 0x12f9286c8 'layout_type' 'unsigned int'         `-ReturnStmt 0x12f941208 <line:11:3, col:10>           `-RecoveryExpr 0x12f9411e8 <col:10> '<dependent type>' contains-errors lvalue ","20060":"`-FunctionDecl 0x158928da8  line:1:10 invalid h2_mplx_create 'int *(int *, int *, int *, int *)'   |-ParmVarDecl 0x158928b28 <col:25, col:35> col:35 invalid c 'int *'   |-ParmVarDecl 0x158928ba8 <col:38, col:50> col:50 invalid s 'int *'   |-ParmVarDecl 0x158928c28 <col:53, col:65> col:65 invalid parent 'int *'   |-ParmVarDecl 0x158928ca8 <line:2:25, col:37> col:37 invalid workers 'int *'   `-CompoundStmt 0x158943860 <line:3:1, line:67:1>     `-IfStmt 0x158943840 <line:10:5, line:65:5>       |-RecoveryExpr 0x158929080 <line:10:9> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x158943808 <col:12, line:65:5>         |-IfStmt 0x158942308 <line:17:9, line:19:9>         | |-RecoveryExpr 0x1589422d8 <line:17:13, col:23> '_Bool' contains-errors         | `-CompoundStmt 0x1589422f8 <col:36, line:19:9>         |-IfStmt 0x158942678 <line:22:9, line:25:9>         | |-RecoveryExpr 0x158942548 <line:22:13, col:17> '_Bool' contains-errors         | `-CompoundStmt 0x158942668 <col:23, line:25:9>         |-IfStmt 0x158942b30 <line:30:9, line:33:9>         | |-RecoveryExpr 0x158942a00 <line:30:13, col:23> '_Bool' contains-errors         | `-CompoundStmt 0x158942b20 <col:36, line:33:9>         |-IfStmt 0x158942cc0 <line:38:9, line:41:9>         | |-RecoveryExpr 0x158942c70 <line:38:13, col:23> '_Bool' contains-errors         | `-CompoundStmt 0x158942cb0 <col:36, line:41:9>         `-IfStmt 0x158943350 <line:53:9, line:56:9>           |-RecoveryExpr 0x158943300 <line:53:13, col:23> '_Bool' contains-errors           `-CompoundStmt 0x158943340 <col:36, line:56:9> ","19977":"`-FunctionDecl 0x11d940b48  line:1:12 ax88179_rx_fixup 'int (struct usbnet *, struct sk_buff *)' static   |-ParmVarDecl 0x11d928648 <col:29, col:44> col:44 used dev 'struct usbnet *'   |-ParmVarDecl 0x11d940a28 <col:49, col:65> col:65 used skb 'struct sk_buff *'   `-CompoundStmt 0x11f009440 <line:2:1, line:61:1>     |-DeclStmt 0x11d940d40 <line:3:2, col:24>     | `-VarDecl 0x11d940cd8 <col:2, col:18> col:18 used ax_skb 'struct sk_buff *'     |-DeclStmt 0x11d940dd8 <line:4:2, col:13>     | `-VarDecl 0x11d940d70 <col:2, col:6> col:6 used pkt_cnt 'int'     |-IfStmt 0x11d940f98 <line:10:2, line:11:10>     | |-BinaryOperator 0x11d940f48 <line:10:6, col:27> 'int' contains-errors '<'     | | |-RecoveryExpr 0x11d940e78 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x11d940e40 <col:6> 'struct sk_buff *' lvalue ParmVar 0x11d940a28 'skb' 'struct sk_buff *'     | | `-CXXDependentScopeMemberExpr 0x11d940f00 <col:17, col:27> '<dependent type>' contains-errors lvalue ->hard_header_len     | |   `-RecoveryExpr 0x11d940ed8 <col:17, col:22> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x11d940ea0 <col:17> 'struct usbnet *' lvalue ParmVar 0x11d928648 'dev' 'struct usbnet *'     | `-ReturnStmt 0x11d940f88 <line:11:3, col:10>     |   `-IntegerLiteral 0x11d940f68 <col:10> 'int' 0     |-CallExpr 0x11d9411b0 <line:13:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11d9410d0 <col:2> 'int ()' Function 0x11d941018 'skb_trim' 'int ()'     | |-DeclRefExpr 0x11d9410f0 <col:11> 'struct sk_buff *' lvalue ParmVar 0x11d940a28 'skb' 'struct sk_buff *'     | `-BinaryOperator 0x11d941190 <col:16, col:27> '<dependent type>' contains-errors '-'     |   |-RecoveryExpr 0x11d941148 <col:16, col:21> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x11d941110 <col:16> 'struct sk_buff *' lvalue ParmVar 0x11d940a28 'skb' 'struct sk_buff *'     |   `-IntegerLiteral 0x11d941170 <col:27> 'int' 4     |-WhileStmt 0x11f0093f0 <line:20:2, line:59:2>     | |-UnaryOperator 0x11d941640 <line:20:9, col:16> 'int' postfix '--'     | | `-DeclRefExpr 0x11d941620 <col:9> 'int' lvalue Var 0x11d940d70 'pkt_cnt' 'int'     | `-CompoundStmt 0x11f0093c8 <col:20, line:59:2>     |   |-IfStmt 0x11d941938 <line:27:3, line:32:3>     |   | |-RecoveryExpr 0x11d941798 <line:27:7, line:28:36> '_Bool' contains-errors     |   | `-CompoundStmt 0x11d941920 <col:39, line:32:3>     |   |   `-ContinueStmt 0x11d941918 <line:31:4>     |   |-IfStmt 0x11f008ca8 <line:34:3, line:42:3>     |   | |-BinaryOperator 0x11d9419b0 <line:34:7, col:18> 'int' '=='     |   | | |-ImplicitCastExpr 0x11d941998 <col:7> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x11d941958 <col:7> 'int' lvalue Var 0x11d940d70 'pkt_cnt' 'int'     |   | | `-IntegerLiteral 0x11d941978 <col:18> 'int' 0     |   | `-CompoundStmt 0x11f008c80 <col:21, line:42:3>     |   |   |-CallExpr 0x11f0088b8 <line:37:4, col:19> 'int'     |   |   | |-ImplicitCastExpr 0x11f0088a0 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x11f008840 <col:4> 'int ()' Function 0x11d9417e0 'skb_pull' 'int ()'     |   |   | |-ImplicitCastExpr 0x11f0088e8 <col:13> 'struct sk_buff *' <LValueToRValue>     |   |   | | `-DeclRefExpr 0x11f008860 <col:13> 'struct sk_buff *' lvalue ParmVar 0x11d940a28 'skb' 'struct sk_buff *'     |   |   | `-IntegerLiteral 0x11f008880 <col:18> 'int' 2     |   |   |-CallExpr 0x11f008a80 <line:38:4, col:38> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x11f0089e0 <col:4> 'int ()' Function 0x11f008928 'skb_set_tail_pointer' 'int ()'     |   |   | |-DeclRefExpr 0x11f008a00 <col:25> 'struct sk_buff *' lvalue ParmVar 0x11d940a28 'skb' 'struct sk_buff *'     |   |   | `-RecoveryExpr 0x11f008a58 <col:30, col:35> '<dependent type>' contains-errors lvalue     |   |   |   `-DeclRefExpr 0x11f008a20 <col:30> 'struct sk_buff *' lvalue ParmVar 0x11d940a28 'skb' 'struct sk_buff *'     |   |   `-ReturnStmt 0x11f008c70 <line:41:4, col:11>     |   |     `-IntegerLiteral 0x11f008c50 <col:11> 'int' 1     |   `-IfStmt 0x11f009318 <line:45:3, line:55:3> has_else     |     |-ImplicitCastExpr 0x11f008e28 <line:45:7> 'struct sk_buff *' <LValueToRValue>     |     | `-DeclRefExpr 0x11f008e08 <col:7> 'struct sk_buff *' lvalue Var 0x11d940cd8 'ax_skb' 'struct sk_buff *'     |     |-CompoundStmt 0x11f0092a8 <col:15, line:53:3>     |     | |-CallExpr 0x11f008f18 <line:48:4, col:22> 'int'     |     | | |-ImplicitCastExpr 0x11f008f00 <col:4> 'int (*)()' <FunctionToPointerDecay>     |     | | | `-DeclRefExpr 0x11f008ea0 <col:4> 'int ()' Function 0x11d9417e0 'skb_pull' 'int ()'     |     | | |-ImplicitCastExpr 0x11f008f48 <col:13> 'struct sk_buff *' <LValueToRValue>     |     | | | `-DeclRefExpr 0x11f008ec0 <col:13> 'struct sk_buff *' lvalue Var 0x11d940cd8 'ax_skb' 'struct sk_buff *'     |     | | `-IntegerLiteral 0x11f008ee0 <col:21> 'int' 2     |     | |-CallExpr 0x11f009000 <line:49:4, col:44> '<dependent type>' contains-errors     |     | | |-DeclRefExpr 0x11f008f60 <col:4> 'int ()' Function 0x11f008928 'skb_set_tail_pointer' 'int ()'     |     | | |-DeclRefExpr 0x11f008f80 <col:25> 'struct sk_buff *' lvalue Var 0x11d940cd8 'ax_skb' 'struct sk_buff *'     |     | | `-RecoveryExpr 0x11f008fd8 <col:33, col:41> '<dependent type>' contains-errors lvalue     |     | |   `-DeclRefExpr 0x11f008fa0 <col:33> 'struct sk_buff *' lvalue Var 0x11d940cd8 'ax_skb' 'struct sk_buff *'     |     | `-CallExpr 0x11f009248 <line:52:4, col:33> 'int'     |     |   |-ImplicitCastExpr 0x11f009230 <col:4> 'int (*)()' <FunctionToPointerDecay>     |     |   | `-DeclRefExpr 0x11f0091d0 <col:4> 'int ()' Function 0x11f009118 'usbnet_skb_return' 'int ()'     |     |   |-ImplicitCastExpr 0x11f009278 <col:22> 'struct usbnet *' <LValueToRValue>     |     |   | `-DeclRefExpr 0x11f0091f0 <col:22> 'struct usbnet *' lvalue ParmVar 0x11d928648 'dev' 'struct usbnet *'     |     |   `-ImplicitCastExpr 0x11f009290 <col:27> 'struct sk_buff *' <LValueToRValue>     |     |     `-DeclRefExpr 0x11f009210 <col:27> 'struct sk_buff *' lvalue Var 0x11d940cd8 'ax_skb' 'struct sk_buff *'     |     `-CompoundStmt 0x11f009300 <line:53:10, line:55:3>     |       `-ReturnStmt 0x11f0092f0 <line:54:4, col:11>     |         `-IntegerLiteral 0x11f0092d0 <col:11> 'int' 0     `-ReturnStmt 0x11f009430 <line:60:2, col:9>       `-IntegerLiteral 0x11f009410 <col:9> 'int' 1 ","20118":"`-FunctionDecl 0x12c00ddf8  line:1:1 invalid xbstream_close 'int (int *)'   |-ParmVarDecl 0x12c00dd28 <col:16, col:27> col:27 invalid file 'int *'   `-CompoundStmt 0x12c027828 <line:2:1, line:13:1>     |-DeclStmt 0x12c00df60 <line:4:2, col:14>     | `-VarDecl 0x12c00ded8 <col:2, col:13> col:8 used rc 'int' cinit     |   `-IntegerLiteral 0x12c00df40 <col:13> 'int' 0     |-BinaryOperator 0x12c00e268 <line:8:2, col:55> 'int' contains-errors '='     | |-DeclRefExpr 0x12c00df90 <col:2> 'int' lvalue Var 0x12c00ded8 'rc' 'int'     | `-CallExpr 0x12c00e240 <col:7, col:55> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12c00e110 <col:7> 'int ()' Function 0x12c00e058 'xb_stream_write_close' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x12c00e1f8 <col:29, col:42> '<dependent type>' contains-errors lvalue ->xbstream_file     |     `-RecoveryExpr 0x12c00e1d8 <col:29> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12c00e3a8 <line:10:2, col:14> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12c00e368 <col:2> 'int ()' Function 0x12c00e2b0 'my_free' 'int ()'     | `-RecoveryExpr 0x12c00e388 <col:10> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12c027818 <line:12:2, col:9>       `-ImplicitCastExpr 0x12c027800 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x12c00e3d0 <col:9> 'int' lvalue Var 0x12c00ded8 'rc' 'int' ","19179":"`-FunctionDecl 0x13c1281a8  line:1:1 zzip_mem_disk_fdopen 'int (int)'   |-ParmVarDecl 0x13c1280d8 <col:22, col:26> col:26 used fd 'int'   `-CompoundStmt 0x13c140bf0 <line:2:1, line:13:1>     |-IfStmt 0x13c128788 <line:4:5, line:8:5>     | |-UnaryOperator 0x13c128528 <line:4:9, col:11> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13c128510 <col:11> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x13c1284f0 <col:11> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13c128768 <line:5:5, line:8:5>     |   |-CallExpr 0x13c1286d8 <line:6:8, col:24> 'int'     |   | |-ImplicitCastExpr 0x13c1286c0 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x13c128620 <col:8> 'int ()' Function 0x13c128568 'debug2' 'int ()'     |   | |-ImplicitCastExpr 0x13c128708 <col:15> 'char *' <ArrayToPointerDecay>     |   | | `-StringLiteral 0x13c128680 <col:15> 'char[4]' lvalue \"STR\"     |   | `-ImplicitCastExpr 0x13c128720 <col:22> 'int' <LValueToRValue>     |   |   `-DeclRefExpr 0x13c1286a0 <col:22> 'int' lvalue ParmVar 0x13c1280d8 'fd' 'int'     |   `-ReturnStmt 0x13c128758 <line:7:8, col:15>     |     `-IntegerLiteral 0x13c128738 <col:15> 'int' 0     |-CallExpr 0x13c140b78 <line:10:5, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13c140ab8 <col:5> 'int ()' Function 0x13c140a00 'zzip_mem_disk_load' 'int ()'     | |-RecoveryExpr 0x13c140b38 <col:24> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x13c140b58 <col:29> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x13c140be0 <line:11:5, col:12>       `-RecoveryExpr 0x13c140bc0 <col:12> '<dependent type>' contains-errors lvalue ","20184":"`-FunctionDecl 0x1271282e8  line:1:19 invalid sctp_vtag_hashfn 'int (int, int, int)' static inline   |-ParmVarDecl 0x1271280f0 <col:36, col:42> col:42 invalid lport 'int'   |-ParmVarDecl 0x127128170 <col:49, col:55> col:55 invalid rport 'int'   |-ParmVarDecl 0x1271281f0 <col:62, col:68> col:68 invalid vtag 'int'   `-CompoundStmt 0x1271285e8 <line:2:1, line:6:1>     |-DeclStmt 0x1271284e8 <line:3:2, col:31>     | `-VarDecl 0x1271283c0 <col:2, col:26> col:6 used h 'int' cinit     |   `-BinaryOperator 0x1271284c8 <col:10, col:26> '<dependent type>' contains-errors '+'     |     |-ParenExpr 0x127128488 <col:10, col:22> '<dependent type>' contains-errors     |     | `-BinaryOperator 0x127128468 <col:11, col:20> '<dependent type>' contains-errors '<<'     |     |   |-RecoveryExpr 0x127128428 <col:11> '<dependent type>' contains-errors lvalue     |     |   `-IntegerLiteral 0x127128448 <col:20> 'int' 16     |     `-RecoveryExpr 0x1271284a8 <col:26> '<dependent type>' contains-errors lvalue     `-CompoundAssignOperator 0x127128540 <line:4:2, col:7> 'int' contains-errors '^=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'       |-DeclRefExpr 0x127128500 <col:2> 'int' contains-errors lvalue Var 0x1271283c0 'h' 'int'       `-RecoveryExpr 0x127128520 <col:7> '<dependent type>' contains-errors lvalue ","19858":"`-FunctionDecl 0x14000ddf0  line:1:13 invalid sdhci_send_command 'void (int *)' static   |-ParmVarDecl 0x14000dd28 <col:32, col:44> col:44 referenced invalid s 'int *'   `-CompoundStmt 0x140028890 <line:2:1, line:55:1>     |-DeclStmt 0x14000df20 <line:5:5, col:13>     | `-VarDecl 0x14000deb8 <col:5, col:9> col:9 used rlen 'int'     |-BinaryOperator 0x14000dfe8 <line:8:5, col:20> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14000df80 <col:5, col:8> '<dependent type>' contains-errors lvalue ->errintsts     | | `-RecoveryExpr 0x14000df58 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14000df38 <col:5> 'int *' lvalue ParmVar 0x14000dd28 's' 'int *'     | `-IntegerLiteral 0x14000dfc8 <col:20> 'int' 0     |-BinaryOperator 0x14000e0b8 <line:9:5, col:23> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14000e050 <col:5, col:8> '<dependent type>' contains-errors lvalue ->acmd12errsts     | | `-RecoveryExpr 0x14000e028 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14000e008 <col:5> 'int *' lvalue ParmVar 0x14000dd28 's' 'int *'     | `-IntegerLiteral 0x14000e098 <col:23> 'int' 0     |-CallExpr 0x148123548 <line:13:5, col:54> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14000e340 <col:5> 'int ()' Function 0x14000e288 'trace_sdhci_send_command' 'int ()'     | |-CXXDependentScopeMemberExpr 0x148123498 <col:30, col:38> '<dependent type>' contains-errors lvalue .cmd     | | `-RecoveryExpr 0x148123478 <col:30> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x148123500 <col:43, col:51> '<dependent type>' contains-errors lvalue .arg     |   `-RecoveryExpr 0x1481234e0 <col:43> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x148123848 <line:14:5, col:58> 'int' contains-errors '='     | |-DeclRefExpr 0x148123578 <col:5> 'int' lvalue Var 0x14000deb8 'rlen' 'int'     | `-CallExpr 0x148123810 <col:12, col:58> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x148123678 <col:12> 'int ()' Function 0x1481235c0 'sdbus_do_command' 'int ()'     |   |-UnaryOperator 0x148123700 <col:29, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-CXXDependentScopeMemberExpr 0x1481236b8 <col:30, col:33> '<dependent type>' contains-errors lvalue ->sdbus     |   |   `-RecoveryExpr 0x148123698 <col:30> '<dependent type>' contains-errors lvalue     |   |-UnaryOperator 0x1481237d8 <col:40, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x1481237b8 <col:41> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x1481237f0 <col:50> '<dependent type>' contains-errors lvalue     |-IfStmt 0x140028298 <line:16:5, line:43:5>     | |-BinaryOperator 0x148123928 <line:16:9, col:21> '<dependent type>' contains-errors '&'     | | |-CXXDependentScopeMemberExpr 0x148123888 <col:9, col:12> '<dependent type>' contains-errors lvalue ->cmdreg     | | | `-RecoveryExpr 0x148123868 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x148123908 <col:21> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x140028278 <col:40, line:43:5>     |   |-IfStmt 0x140028030 <line:17:9, line:36:9> has_else     |   | |-BinaryOperator 0x1481239a0 <line:17:13, col:21> 'int' '=='     |   | | |-ImplicitCastExpr 0x148123988 <col:13> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x148123948 <col:13> 'int' lvalue Var 0x14000deb8 'rlen' 'int'     |   | | `-IntegerLiteral 0x148123968 <col:21> 'int' 4     |   | |-CompoundStmt 0x1481241b0 <col:24, line:21:9>     |   | | |-BinaryOperator 0x148123cc0 <line:18:13, col:45> '<dependent type>' contains-errors '='     |   | | | |-ArraySubscriptExpr 0x148123c58 <col:13, col:24> '<dependent type>' contains-errors lvalue     |   | | | | |-ImplicitCastExpr 0x148123c40 <col:13, col:16> '<dependent type>' contains-errors <LValueToRValue>     |   | | | | | `-CXXDependentScopeMemberExpr 0x148123a08 <col:13, col:16> '<dependent type>' contains-errors lvalue ->rspreg     |   | | | | |   `-RecoveryExpr 0x1481239e0 <col:13> '<dependent type>' contains-errors lvalue     |   | | | | |     `-DeclRefExpr 0x1481239c0 <col:13> 'int *' lvalue ParmVar 0x14000dd28 's' 'int *'     |   | | | | `-IntegerLiteral 0x148123a50 <col:23> 'int' 0     |   | | | `-CallExpr 0x148123c98 <col:28, col:45> '<dependent type>' contains-errors     |   | | |   |-DeclRefExpr 0x148123b88 <col:28> 'int ()' Function 0x148123ad0 'ldl_be_p' 'int ()'     |   | | |   `-RecoveryExpr 0x148123c78 <col:37> '<dependent type>' contains-errors lvalue     |   | | |-BinaryOperator 0x148123fa8 <line:19:13, col:58> '<dependent type>' contains-errors '='     |   | | | |-ArraySubscriptExpr 0x148123da8 <col:13, col:24> '<dependent type>' contains-errors lvalue     |   | | | | |-ImplicitCastExpr 0x148123d90 <col:13, col:16> '<dependent type>' contains-errors <LValueToRValue>     |   | | | | | `-CXXDependentScopeMemberExpr 0x148123d28 <col:13, col:16> '<dependent type>' contains-errors lvalue ->rspreg     |   | | | | |   `-RecoveryExpr 0x148123d00 <col:13> '<dependent type>' contains-errors lvalue     |   | | | | |     `-DeclRefExpr 0x148123ce0 <col:13> 'int *' lvalue ParmVar 0x14000dd28 's' 'int *'     |   | | | | `-IntegerLiteral 0x148123d70 <col:23> 'int' 1     |   | | | `-BinaryOperator 0x148123f88 <col:28, col:58> '<dependent type>' contains-errors '='     |   | | |   |-ArraySubscriptExpr 0x148123e68 <col:28, col:39> '<dependent type>' contains-errors lvalue     |   | | |   | |-ImplicitCastExpr 0x148123e50 <col:28, col:31> '<dependent type>' contains-errors <LValueToRValue>     |   | | |   | | `-CXXDependentScopeMemberExpr 0x148123de8 <col:28, col:31> '<dependent type>' contains-errors lvalue ->rspreg     |   | | |   | |   `-RecoveryExpr 0x148123dc8 <col:28> '<dependent type>' contains-errors lvalue     |   | | |   | `-IntegerLiteral 0x148123e30 <col:38> 'int' 2     |   | | |   `-BinaryOperator 0x148123f68 <col:43, col:58> '<dependent type>' contains-errors '='     |   | | |     |-ArraySubscriptExpr 0x148123f28 <col:43, col:54> '<dependent type>' contains-errors lvalue     |   | | |     | |-ImplicitCastExpr 0x148123f10 <col:43, col:46> '<dependent type>' contains-errors <LValueToRValue>     |   | | |     | | `-CXXDependentScopeMemberExpr 0x148123ea8 <col:43, col:46> '<dependent type>' contains-errors lvalue ->rspreg     |   | | |     | |   `-RecoveryExpr 0x148123e88 <col:43> '<dependent type>' contains-errors lvalue     |   | | |     | `-IntegerLiteral 0x148123ef0 <col:53> 'int' 3     |   | | |     `-IntegerLiteral 0x148123f48 <col:58> 'int' 0     |   | | `-CallExpr 0x148124188 <line:20:13, col:47> '<dependent type>' contains-errors     |   | |   |-DeclRefExpr 0x1481240a8 <col:13> 'int ()' Function 0x148123ff0 'trace_sdhci_response4' 'int ()'     |   | |   `-ArraySubscriptExpr 0x148124168 <col:35, col:46> '<dependent type>' contains-errors lvalue     |   | |     |-ImplicitCastExpr 0x148124150 <col:35, col:38> '<dependent type>' contains-errors <LValueToRValue>     |   | |     | `-CXXDependentScopeMemberExpr 0x1481240e8 <col:35, col:38> '<dependent type>' contains-errors lvalue ->rspreg     |   | |     |   `-RecoveryExpr 0x1481240c8 <col:35> '<dependent type>' contains-errors lvalue     |   | |     `-IntegerLiteral 0x148124130 <col:45> 'int' 0     |   | `-IfStmt 0x140028000 <line:21:16, line:36:9> has_else     |   |   |-BinaryOperator 0x148124230 <line:21:20, col:28> 'int' '=='     |   |   | |-ImplicitCastExpr 0x148124218 <col:20> 'int' <LValueToRValue>     |   |   | | `-DeclRefExpr 0x1481241d8 <col:20> 'int' lvalue Var 0x14000deb8 'rlen' 'int'     |   |   | `-IntegerLiteral 0x1481241f8 <col:28> 'int' 16     |   |   |-CompoundStmt 0x140027c00 <col:32, line:29:9>     |   |   | `-CallExpr 0x140027bc0 <line:27:13, line:28:62> '<dependent type>' contains-errors     |   |   |   |-DeclRefExpr 0x1400278a0 <line:27:13> 'int ()' Function 0x1400277e8 'trace_sdhci_response16' 'int ()'     |   |   |   |-ArraySubscriptExpr 0x140027960 <col:36, col:47> '<dependent type>' contains-errors lvalue     |   |   |   | |-ImplicitCastExpr 0x140027948 <col:36, col:39> '<dependent type>' contains-errors <LValueToRValue>     |   |   |   | | `-CXXDependentScopeMemberExpr 0x1400278e0 <col:36, col:39> '<dependent type>' contains-errors lvalue ->rspreg     |   |   |   | |   `-RecoveryExpr 0x1400278c0 <col:36> '<dependent type>' contains-errors lvalue     |   |   |   | `-IntegerLiteral 0x140027928 <col:46> 'int' 3     |   |   |   |-ArraySubscriptExpr 0x140027a20 <col:50, col:61> '<dependent type>' contains-errors lvalue     |   |   |   | |-ImplicitCastExpr 0x140027a08 <col:50, col:53> '<dependent type>' contains-errors <LValueToRValue>     |   |   |   | | `-CXXDependentScopeMemberExpr 0x1400279a0 <col:50, col:53> '<dependent type>' contains-errors lvalue ->rspreg     |   |   |   | |   `-RecoveryExpr 0x140027980 <col:50> '<dependent type>' contains-errors lvalue     |   |   |   | `-IntegerLiteral 0x1400279e8 <col:60> 'int' 2     |   |   |   |-ArraySubscriptExpr 0x140027ae0 <line:28:36, col:47> '<dependent type>' contains-errors lvalue     |   |   |   | |-ImplicitCastExpr 0x140027ac8 <col:36, col:39> '<dependent type>' contains-errors <LValueToRValue>     |   |   |   | | `-CXXDependentScopeMemberExpr 0x140027a60 <col:36, col:39> '<dependent type>' contains-errors lvalue ->rspreg     |   |   |   | |   `-RecoveryExpr 0x140027a40 <col:36> '<dependent type>' contains-errors lvalue     |   |   |   | `-IntegerLiteral 0x140027aa8 <col:46> 'int' 1     |   |   |   `-ArraySubscriptExpr 0x140027ba0 <col:50, col:61> '<dependent type>' contains-errors lvalue     |   |   |     |-ImplicitCastExpr 0x140027b88 <col:50, col:53> '<dependent type>' contains-errors <LValueToRValue>     |   |   |     | `-CXXDependentScopeMemberExpr 0x140027b20 <col:50, col:53> '<dependent type>' contains-errors lvalue ->rspreg     |   |   |     |   `-RecoveryExpr 0x140027b00 <col:50> '<dependent type>' contains-errors lvalue     |   |   |     `-IntegerLiteral 0x140027b68 <col:60> 'int' 0     |   |   `-CompoundStmt 0x140027fe0 <line:29:16, line:36:9>     |   |     |-CallExpr 0x140027dc8 <line:31:13, col:36> 'int'     |   |     | |-ImplicitCastExpr 0x140027db0 <col:13> 'int (*)()' <FunctionToPointerDecay>     |   |     | | `-DeclRefExpr 0x140027cf8 <col:13> 'int ()' Function 0x140027c40 'trace_sdhci_error' 'int ()'     |   |     | `-ImplicitCastExpr 0x140027df0 <col:31> 'char *' <ArrayToPointerDecay>     |   |     |   `-StringLiteral 0x140027d60 <col:31> 'char[4]' lvalue \"STR\"     |   |     `-IfStmt 0x140027fc0 <line:32:13, line:35:13>     |   |       |-RecoveryExpr 0x140027e70 <line:32:17, col:34> '_Bool' contains-errors     |   |       `-CompoundStmt 0x140027fb0 <col:57, line:35:13>     |   `-IfStmt 0x140028258 <line:38:9, line:42:9>     |     |-RecoveryExpr 0x140028198 <line:38:13, line:40:48> '_Bool' contains-errors     |     `-CompoundStmt 0x140028248 <col:72, line:42:9>     |-IfStmt 0x1400283e0 <line:45:5, line:47:5>     | |-RecoveryExpr 0x140028320 <line:45:9, col:26> '_Bool' contains-errors     | `-CompoundStmt 0x1400283d0 <col:45, line:47:5>     |-CallExpr 0x140028520 <line:49:5, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1400284e0 <col:5> 'int ()' Function 0x140028428 'sdhci_update_irq' 'int ()'     | `-RecoveryExpr 0x140028500 <col:22> '<dependent type>' contains-errors lvalue     `-IfStmt 0x140028870 <line:51:5, line:54:5>       |-RecoveryExpr 0x140028618 <line:51:9, col:69> '_Bool' contains-errors       `-CompoundStmt 0x140028850 <col:72, line:54:5>         |-BinaryOperator 0x1400286e8 <line:52:9, col:25> '<dependent type>' contains-errors '='         | |-CXXDependentScopeMemberExpr 0x140028680 <col:9, col:12> '<dependent type>' contains-errors lvalue ->data_count         | | `-RecoveryExpr 0x140028658 <col:9> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x140028638 <col:9> 'int *' lvalue ParmVar 0x14000dd28 's' 'int *'         | `-IntegerLiteral 0x1400286c8 <col:25> 'int' 0         `-CallExpr 0x140028828 <line:53:9, col:30> '<dependent type>' contains-errors           |-DeclRefExpr 0x1400287e8 <col:9> 'int ()' Function 0x140028730 'sdhci_data_transfer' 'int ()'           `-RecoveryExpr 0x140028808 <col:29> '<dependent type>' contains-errors lvalue ","19274":"`-FunctionDecl 0x1501282e8  line:1:1 invalid virDomainMigrateSetMaxDowntime 'int (int, unsigned long long, unsigned int)'   |-ParmVarDecl 0x1501280f0 <col:32, col:45> col:45 invalid domain 'int'   |-ParmVarDecl 0x150128170 <line:2:32, col:51> col:51 used downtime 'unsigned long long'   |-ParmVarDecl 0x1501281f0 <line:3:32, col:45> col:45 used flags 'unsigned int'   `-CompoundStmt 0x150142428 <line:4:1, line:26:1>     |-CallExpr 0x1501285e0 <line:7:5, col:52> '<dependent type>' contains-errors     | |-DeclRefExpr 0x150128500 <col:5> 'int ()' Function 0x150128448 'VIR_DOMAIN_DEBUG' 'int ()'     | |-RecoveryExpr 0x150128520 <col:22> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x150128580 <col:30> 'char[4]' lvalue \"STR\"     | |-DeclRefExpr 0x1501285a0 <col:37> 'unsigned long long' lvalue ParmVar 0x150128170 'downtime' 'unsigned long long'     | `-DeclRefExpr 0x1501285c0 <col:47> 'unsigned int' lvalue ParmVar 0x1501281f0 'flags' 'unsigned int'     |-CallExpr 0x150128768 <line:9:5, col:23> 'int'     | `-ImplicitCastExpr 0x150128750 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x150128700 <col:5> 'int ()' Function 0x150128648 'virResetLastError' 'int ()'     |-CallExpr 0x150141930 <line:11:5, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1501418b8 <col:5> 'int ()' Function 0x150141800 'virCheckDomainReturn' 'int ()'     | |-RecoveryExpr 0x1501418d8 <col:26> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x150141918 <col:34, col:35> 'int' prefix '-'     |   `-IntegerLiteral 0x1501418f8 <col:35> 'int' 1     |-CallExpr 0x150141bf8 <line:14:5, col:44> '<dependent type>' contains-errors     | |-DeclRefExpr 0x150141aa8 <col:5> 'int ()' Function 0x1501419f0 'virCheckReadOnlyGoto' 'int ()'     | |-CXXDependentScopeMemberExpr 0x150141b90 <col:26, col:32> '<dependent type>' contains-errors lvalue ->flags     | | `-RecoveryExpr 0x150141b70 <col:26> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x150141bd8 <col:39> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1501420e0 <line:16:5, line:20:5>     | |-CXXDependentScopeMemberExpr 0x150141d38 <line:16:9, col:23> '<dependent type>' contains-errors lvalue ->domainMigrateSetMaxDowntime     | | `-CXXDependentScopeMemberExpr 0x150141cf0 <col:9, col:15> '<dependent type>' contains-errors lvalue ->driver     | |   `-RecoveryExpr 0x150141cd0 <col:9> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1501420c0 <col:52, line:20:5>     |   |-IfStmt 0x150142070 <line:17:9, line:18:18>     |   | |-BinaryOperator 0x150141fe8 <line:17:13, col:82> 'int' contains-errors '<'     |   | | |-CallExpr 0x150141fb0 <col:13, col:78> '<dependent type>' contains-errors     |   | | | |-CXXDependentScopeMemberExpr 0x150141f68 <col:13, col:27> '<dependent type>' contains-errors lvalue ->domainMigrateSetMaxDowntime     |   | | | | `-CXXDependentScopeMemberExpr 0x150141f20 <col:13, col:19> '<dependent type>' contains-errors lvalue ->driver     |   | | | |   `-RecoveryExpr 0x150141f00 <col:13> '<dependent type>' contains-errors lvalue     |   | | | |-RecoveryExpr 0x150141e28 <col:55> '<dependent type>' contains-errors lvalue     |   | | | |-DeclRefExpr 0x150141e48 <col:63> 'unsigned long long' lvalue ParmVar 0x150128170 'downtime' 'unsigned long long'     |   | | | `-DeclRefExpr 0x150141e68 <col:73> 'unsigned int' lvalue ParmVar 0x1501281f0 'flags' 'unsigned int'     |   | | `-IntegerLiteral 0x150141ec0 <col:82> 'int' 0     |   | `-GotoStmt 0x150142058 <line:18:13, col:18> 'error' 0x150142008     |   `-ReturnStmt 0x1501420b0 <line:19:9, col:16>     |     `-IntegerLiteral 0x150142090 <col:16> 'int' 0     |-CallExpr 0x150142218 <line:22:5, col:31> 'int'     | `-ImplicitCastExpr 0x150142200 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x1501421e0 <col:5> 'int ()' Function 0x150142128 'virReportUnsupportedError' 'int ()'     |-LabelStmt 0x1501423c0 <line:23:2, line:24:26> 'error'     | `-CallExpr 0x150142398 <col:5, col:26> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x150142318 <col:5> 'int ()' Function 0x150142260 'virDispatchError' 'int ()'     |   `-RecoveryExpr 0x150142378 <col:22> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x150142418 <line:25:5, col:13>       `-UnaryOperator 0x150142400 <col:12, col:13> 'int' prefix '-'         `-IntegerLiteral 0x1501423e0 <col:13> 'int' 1 ","19489":"`-FunctionDecl 0x121128750  line:1:20 atl2_irq_disable 'void (struct atl2_adapter *)' static inline   |-ParmVarDecl 0x121128648 <col:37, col:58> col:58 used adapter 'struct atl2_adapter *'   `-CompoundStmt 0x121141040 <line:2:1, line:6:1>     |-CallExpr 0x121140c98 <line:3:5, col:44> '<dependent type>' contains-errors     | |-DeclRefExpr 0x121140b70 <col:5> 'int ()' Function 0x121140ab8 'ATL2_WRITE_REG' 'int ()'     | |-UnaryOperator 0x121140bf0 <col:20, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x121140bc8 <col:21, col:30> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x121140b90 <col:21> 'struct atl2_adapter *' lvalue ParmVar 0x121128648 'adapter' 'struct atl2_adapter *'     | |-RecoveryExpr 0x121140c78 <col:34> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x121140c20 <col:43> 'int' 0     |-CallExpr 0x121140e48 <line:4:5, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x121140db0 <col:5> 'int ()' Function 0x121140cf8 'ATL2_WRITE_FLUSH' 'int ()'     | `-UnaryOperator 0x121140e30 <col:22, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x121140e08 <col:23, col:32> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x121140dd0 <col:23> 'struct atl2_adapter *' lvalue ParmVar 0x121128648 'adapter' 'struct atl2_adapter *'     `-CallExpr 0x121141018 <line:5:5, col:39> '<dependent type>' contains-errors       |-DeclRefExpr 0x121140f50 <col:5> 'int ()' Function 0x121140e98 'synchronize_irq' 'int ()'       `-CXXDependentScopeMemberExpr 0x121140fd0 <col:21, col:36> '<dependent type>' contains-errors lvalue ->irq         `-RecoveryExpr 0x121140fa8 <col:21, col:30> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x121140f70 <col:21> 'struct atl2_adapter *' lvalue ParmVar 0x121128648 'adapter' 'struct atl2_adapter *' ","19136":"`-FunctionDecl 0x1209283c8  line:1:31 seq_create_client1 'struct snd_seq_client *(int, int)' static   |-ParmVarDecl 0x120928178 <col:50, col:54> col:54 used client_index 'int'   |-ParmVarDecl 0x1209281f8 <col:68, col:72> col:72 used poolsize 'int'   `-CompoundStmt 0x1228098a8 <line:2:1, line:45:1>     |-DeclStmt 0x120928548 <line:3:2, col:21>     | `-VarDecl 0x1209284e0 <col:2, col:16> col:16 used flags 'unsigned long'     |-DeclStmt 0x1209285e0 <line:4:2, col:7>     | `-VarDecl 0x120928578 <col:2, col:6> col:6 used c 'int'     |-DeclStmt 0x1209286f0 <line:5:2, col:31>     | `-VarDecl 0x120928688 <col:2, col:25> col:25 used client 'struct snd_seq_client *'     |-IfStmt 0x121008868 <line:9:2, line:10:10>     | |-BinaryOperator 0x121008800 <line:9:6, col:16> 'int' contains-errors '=='     | | |-DeclRefExpr 0x121008788 <col:6> 'struct snd_seq_client *' lvalue Var 0x120928688 'client' 'struct snd_seq_client *'     | | `-RecoveryExpr 0x1210087e0 <col:16> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x121008858 <line:10:3, col:10>     |   `-RecoveryExpr 0x121008838 <col:10> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x121008a98 <line:11:2, col:42> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1210088c0 <col:2, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x121008888 <col:2> 'struct snd_seq_client *' lvalue Var 0x120928688 'client' 'struct snd_seq_client *'     | `-CallExpr 0x121008a58 <col:17, col:42> 'int'     |   |-ImplicitCastExpr 0x121008a40 <col:17> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1210089c8 <col:17> 'int ()' Function 0x121008910 'snd_seq_pool_new' 'int ()'     |   `-ImplicitCastExpr 0x121008a80 <col:34> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x1210089e8 <col:34> 'int' lvalue ParmVar 0x1209281f8 'poolsize' 'int'     |-IfStmt 0x121008d70 <line:12:2, line:15:2>     | |-BinaryOperator 0x121008b70 <line:12:6, col:22> 'int' contains-errors '=='     | | |-RecoveryExpr 0x121008af0 <col:6, col:14> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x121008ab8 <col:6> 'struct snd_seq_client *' lvalue Var 0x120928688 'client' 'struct snd_seq_client *'     | | `-RecoveryExpr 0x121008b50 <col:22> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x121008d50 <col:28, line:15:2>     |   |-CallExpr 0x121008cc8 <line:13:3, col:15> 'int'     |   | |-ImplicitCastExpr 0x121008cb0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x121008c70 <col:3> 'int ()' Function 0x121008bb8 'kfree' 'int ()'     |   | `-ImplicitCastExpr 0x121008cf0 <col:9> 'struct snd_seq_client *' <LValueToRValue>     |   |   `-DeclRefExpr 0x121008c90 <col:9> 'struct snd_seq_client *' lvalue Var 0x120928688 'client' 'struct snd_seq_client *'     |   `-ReturnStmt 0x121008d40 <line:14:3, col:10>     |     `-RecoveryExpr 0x121008d20 <col:10> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x121008e48 <line:16:2, col:17> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x121008dc8 <col:2, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x121008d90 <col:2> 'struct snd_seq_client *' lvalue Var 0x120928688 'client' 'struct snd_seq_client *'     | `-RecoveryExpr 0x121008e28 <col:17> '<dependent type>' contains-errors lvalue     |-CallExpr 0x121008fe0 <line:17:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x121008f48 <col:2> 'int ()' Function 0x121008e90 'snd_use_lock_init' 'int ()'     | `-UnaryOperator 0x121008fc8 <col:20, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x121008fa0 <col:21, col:29> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x121008f68 <col:21> 'struct snd_seq_client *' lvalue Var 0x120928688 'client' 'struct snd_seq_client *'     |-CallExpr 0x121009180 <line:18:2, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1210090e8 <col:2> 'int ()' Function 0x121009030 'rwlock_init' 'int ()'     | `-UnaryOperator 0x121009168 <col:14, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x121009140 <col:15, col:23> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x121009108 <col:15> 'struct snd_seq_client *' lvalue Var 0x120928688 'client' 'struct snd_seq_client *'     |-CallExpr 0x122808d50 <line:19:2, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x122808cb8 <col:2> 'int ()' Function 0x122808c00 'mutex_init' 'int ()'     | `-UnaryOperator 0x122808d38 <col:13, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x122808d10 <col:14, col:22> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x122808cd8 <col:14> 'struct snd_seq_client *' lvalue Var 0x120928688 'client' 'struct snd_seq_client *'     |-CallExpr 0x122808ef0 <line:20:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x122808e58 <col:2> 'int ()' Function 0x122808da0 'INIT_LIST_HEAD' 'int ()'     | `-UnaryOperator 0x122808ed8 <col:17, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x122808eb0 <col:18, col:26> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x122808e78 <col:18> 'struct snd_seq_client *' lvalue Var 0x120928688 'client' 'struct snd_seq_client *'     |-IfStmt 0x122809600 <line:24:2, line:40:2> has_else     | |-BinaryOperator 0x122809090 <line:24:6, col:21> 'int' '<'     | | |-ImplicitCastExpr 0x122809078 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x122809038 <col:6> 'int' lvalue ParmVar 0x120928178 'client_index' 'int'     | | `-IntegerLiteral 0x122809058 <col:21> 'int' 0     | |-CompoundStmt 0x1228093f8 <col:24, line:34:2>     | `-CompoundStmt 0x1228095e8 <col:9, line:40:2>     |   `-IfStmt 0x1228095c8 <line:35:3, line:39:3>     |     |-RecoveryExpr 0x122809448 <line:35:7, col:69> '_Bool' contains-errors     |     `-CompoundStmt 0x1228095b0 <col:72, line:39:3>     |       `-ReturnStmt 0x1228095a0 <line:38:4, col:11>     |         `-ImplicitCastExpr 0x122809588 <col:11> 'struct snd_seq_client *' <LValueToRValue>     |           `-DeclRefExpr 0x122809568 <col:11> 'struct snd_seq_client *' lvalue Var 0x120928688 'client' 'struct snd_seq_client *'     |-CallExpr 0x1228097e8 <line:42:2, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x122809750 <col:2> 'int ()' Function 0x122809698 'snd_seq_pool_delete' 'int ()'     | `-UnaryOperator 0x1228097d0 <col:22, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1228097a8 <col:23, col:31> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x122809770 <col:23> 'struct snd_seq_client *' lvalue Var 0x120928688 'client' 'struct snd_seq_client *'     `-CallExpr 0x122809868 <line:43:2, col:14> 'int'       |-ImplicitCastExpr 0x122809850 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x122809810 <col:2> 'int ()' Function 0x121008bb8 'kfree' 'int ()'       `-ImplicitCastExpr 0x122809890 <col:8> 'struct snd_seq_client *' <LValueToRValue>         `-DeclRefExpr 0x122809830 <col:8> 'struct snd_seq_client *' lvalue Var 0x120928688 'client' 'struct snd_seq_client *' ","20084":"`-FunctionDecl 0x1421424e8  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x1421425e8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x142142650 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x1421426b8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x142142590 <<invalid sloc>> Implicit 882 ","20159":"`-FunctionDecl 0x15a929238  line:1:1 TEST_F 'int (int, int)'   |-ParmVarDecl 0x15a929158 <col:8> col:8 ConnectionHandlerTest 'int'   |-ParmVarDecl 0x15a9290d8 <col:31> col:31 NormalRedirect 'int'   `-CompoundStmt 0x14b008bb0 <col:47, line:70:1>     |-RecoveryExpr 0x15a9295c0 <line:3:3> '<dependent type>' contains-errors lvalue     `-RecoveryExpr 0x15a929610 <line:4:3> '<dependent type>' contains-errors lvalue ","20170":"`-FunctionDecl 0x139141aa0  col:5 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x139141ba0 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x139141c08 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x139141c70 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x139141b48 <<invalid sloc>> Implicit 900 ","19770":"`-FunctionDecl 0x1470083e8  line:1:12 bcm_delete_tx_op 'int (struct list_head *, struct bcm_msg_head *, int)' static   |-ParmVarDecl 0x146928648 <col:29, col:47> col:47 used ops 'struct list_head *'   |-ParmVarDecl 0x147008228 <col:52, col:73> col:73 used mh 'struct bcm_msg_head *'   |-ParmVarDecl 0x1470082a8 <line:2:8, col:12> col:12 used ifindex 'int'   `-CompoundStmt 0x147009128 <line:3:1, line:16:1>     |-DeclStmt 0x147008770 <line:4:2, col:23>     | |-RecordDecl 0x1470084f0 <col:2, col:9> col:9 struct bcm_op     | |-VarDecl 0x147008658 <col:2, col:17> col:17 used op 'struct bcm_op *'     | `-VarDecl 0x1470086e8 <col:2, col:22> col:22 used n 'struct bcm_op *'     |-CallExpr 0x1470089a8 <line:6:2, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1470088b0 <col:2> 'int ()' Function 0x1470087f8 'list_for_each_entry_safe' 'int ()'     | |-DeclRefExpr 0x1470088d0 <col:27> 'struct bcm_op *' lvalue Var 0x147008658 'op' 'struct bcm_op *'     | |-DeclRefExpr 0x1470088f0 <col:31> 'struct bcm_op *' lvalue Var 0x1470086e8 'n' 'struct bcm_op *'     | |-DeclRefExpr 0x147008910 <col:34> 'struct list_head *' lvalue ParmVar 0x146928648 'ops' 'struct list_head *'     | `-RecoveryExpr 0x147008988 <col:39> '<dependent type>' contains-errors lvalue     |-CompoundStmt 0x1470090e0 <col:45, line:13:2>     | `-IfStmt 0x1470090c0 <line:7:3, line:12:3>     |   |-RecoveryExpr 0x147008cf8 <line:7:7, line:8:62> '_Bool' contains-errors     |   `-CompoundStmt 0x147009098 <col:65, line:12:3>     |     |-CallExpr 0x147008e90 <line:9:4, col:22> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x147008df8 <col:4> 'int ()' Function 0x147008d40 'list_del' 'int ()'     |     | `-UnaryOperator 0x147008e78 <col:13, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |     |   `-RecoveryExpr 0x147008e50 <col:14, col:18> '<dependent type>' contains-errors lvalue     |     |     `-DeclRefExpr 0x147008e18 <col:14> 'struct bcm_op *' lvalue Var 0x147008658 'op' 'struct bcm_op *'     |     |-CallExpr 0x147009028 <line:10:4, col:20> 'int'     |     | |-ImplicitCastExpr 0x147009010 <col:4> 'int (*)()' <FunctionToPointerDecay>     |     | | `-DeclRefExpr 0x147008f98 <col:4> 'int ()' Function 0x147008ee0 'bcm_remove_op' 'int ()'     |     | `-ImplicitCastExpr 0x147009050 <col:18> 'struct bcm_op *' <LValueToRValue>     |     |   `-DeclRefExpr 0x147008fb8 <col:18> 'struct bcm_op *' lvalue Var 0x147008658 'op' 'struct bcm_op *'     |     `-ReturnStmt 0x147009088 <line:11:4, col:11>     |       `-IntegerLiteral 0x147009068 <col:11> 'int' 1     `-ReturnStmt 0x147009118 <line:15:2, col:9>       `-IntegerLiteral 0x1470090f8 <col:9> 'int' 0 ","19598":"`-FunctionDecl 0x12780ddf0  line:1:13 invalid sungem_reset_tx 'void (int *)' static   |-ParmVarDecl 0x12780dd28 <col:29, col:42> col:42 referenced invalid s 'int *'   `-CompoundStmt 0x1278277a8 <line:2:1, line:16:1>     |-CallExpr 0x12780e068 <line:3:5, col:27> 'int'     | `-ImplicitCastExpr 0x12780e050 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x12780e000 <col:5> 'int ()' Function 0x12780df48 'trace_sungem_tx_reset' 'int ()'     |-CallExpr 0x1278275e0 <line:12:5, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1278275a0 <col:5> 'int ()' Function 0x1278274e8 'sungem_update_masks' 'int ()'     | `-RecoveryExpr 0x1278275c0 <col:25> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1278276b8 <line:14:5, col:18> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x127827650 <col:5, col:8> '<dependent type>' contains-errors lvalue ->tx_size     | | `-RecoveryExpr 0x127827628 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x127827608 <col:5> 'int *' lvalue ParmVar 0x12780dd28 's' 'int *'     | `-IntegerLiteral 0x127827698 <col:18> 'int' 0     `-BinaryOperator 0x127827788 <line:15:5, col:23> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x127827720 <col:5, col:8> '<dependent type>' contains-errors lvalue ->tx_first_ctl       | `-RecoveryExpr 0x1278276f8 <col:5> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x1278276d8 <col:5> 'int *' lvalue ParmVar 0x12780dd28 's' 'int *'       `-IntegerLiteral 0x127827768 <col:23> 'int' 0 ","19522":"`-FunctionDecl 0x15680de38  line:1:1 copy_to_fd 'int (const char *, int)'   |-ParmVarDecl 0x15680dcd8 <col:13, col:25> col:25 used from 'const char *'   |-ParmVarDecl 0x15680dd58 <col:31, col:35> col:35 used tofd 'int'   `-CompoundStmt 0x1568290e0 <line:2:1, line:17:1>     |-DeclStmt 0x15680dfb8 <line:3:3, col:13>     | `-VarDecl 0x15680df50 <col:3, col:7> col:7 used fromfd 'int'     |-IfStmt 0x1568285e8 <line:6:3, line:7:35>     | |-RecoveryExpr 0x15680e248 <line:6:7, col:61> '_Bool' contains-errors     | `-CallExpr 0x1568285a0 <line:7:5, col:35> 'int'     |   |-ImplicitCastExpr 0x156828588 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x15680e348 <col:5> 'int ()' Function 0x15680e290 'pfatal' 'int ()'     |   |-ImplicitCastExpr 0x1568285d0 <col:13> 'char *' <ArrayToPointerDecay>     |   | `-StringLiteral 0x15680e3b0 <col:13> 'char[4]' lvalue \"STR\"     |   `-CallExpr 0x156828548 <col:20, col:34> 'int'     |     |-ImplicitCastExpr 0x156828530 <col:20> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1568284b8 <col:20> 'int ()' Function 0x156828400 'quotearg' 'int ()'     |     `-ImplicitCastExpr 0x156828570 <col:30> 'const char *' <LValueToRValue>     |       `-DeclRefExpr 0x1568284d8 <col:30> 'const char *' lvalue ParmVar 0x15680dcd8 'from' 'const char *'     |-WhileStmt 0x156828e90 <line:8:3, line:14:5>     | |-RecoveryExpr 0x1568287e8 <line:8:10, col:47> '_Bool' contains-errors     | `-CompoundStmt 0x156828e70 <line:9:5, line:14:5>     |   |-IfStmt 0x156828a80 <line:10:7, line:11:14>     |   | |-RecoveryExpr 0x156828928 <line:10:11, col:27> '_Bool' contains-errors     |   | `-CallExpr 0x156828a60 <line:11:2, col:14> 'int'     |   |   `-ImplicitCastExpr 0x156828a48 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   |     `-DeclRefExpr 0x156828a28 <col:2> 'int ()' Function 0x156828970 'read_fatal' 'int ()'     |   `-IfStmt 0x156828e50 <line:12:7, line:13:15>     |     |-BinaryOperator 0x156828cf8 <line:12:11, col:40> 'int' contains-errors '!='     |     | |-CallExpr 0x156828ca0 <col:11, col:35> '<dependent type>' contains-errors     |     | | |-DeclRefExpr 0x156828b80 <col:11> 'int ()' Function 0x156828ac8 'full_write' 'int ()'     |     | | |-DeclRefExpr 0x156828ba0 <col:23> 'int' lvalue ParmVar 0x15680dd58 'tofd' 'int'     |     | | |-RecoveryExpr 0x156828c60 <col:29> '<dependent type>' contains-errors lvalue     |     | | `-RecoveryExpr 0x156828c80 <col:34> '<dependent type>' contains-errors lvalue     |     | `-RecoveryExpr 0x156828cd8 <col:40> '<dependent type>' contains-errors lvalue     |     `-CallExpr 0x156828e30 <line:13:2, col:15> 'int'     |       `-ImplicitCastExpr 0x156828e18 <col:2> 'int (*)()' <FunctionToPointerDecay>     |         `-DeclRefExpr 0x156828df8 <col:2> 'int ()' Function 0x156828d40 'write_fatal' 'int ()'     `-IfStmt 0x1568290c0 <line:15:3, line:16:17>       |-BinaryOperator 0x156829048 <line:15:7, col:25> 'int' '!='       | |-CallExpr 0x156828fe8 <col:7, col:20> 'int'       | | |-ImplicitCastExpr 0x156828fd0 <col:7> 'int (*)()' <FunctionToPointerDecay>       | | | `-DeclRefExpr 0x156828f90 <col:7> 'int ()' Function 0x156828ed8 'close' 'int ()'       | | `-ImplicitCastExpr 0x156829010 <col:14> 'int' <LValueToRValue>       | |   `-DeclRefExpr 0x156828fb0 <col:14> 'int' lvalue Var 0x15680df50 'fromfd' 'int'       | `-IntegerLiteral 0x156829028 <col:25> 'int' 0       `-CallExpr 0x1568290a0 <line:16:5, col:17> 'int'         `-ImplicitCastExpr 0x156829088 <col:5> 'int (*)()' <FunctionToPointerDecay>           `-DeclRefExpr 0x156829068 <col:5> 'int ()' Function 0x156828970 'read_fatal' 'int ()' ","19397":"`-FunctionDecl 0x14a941bb0  col:5 implicit used printf 'int (const char *, ...)' extern   |-ParmVarDecl 0x14a941cb0 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x14a941c58 <<invalid sloc>> Implicit 903   `-FormatAttr 0x14a941d20 <col:5> Implicit printf 1 2 ","19501":"`-FunctionDecl 0x12480de88  line:1:11 referenced invalid TFE_Py_TapeSetNew 'int *(int *, int *)'   |-ParmVarDecl 0x12480dd28 <col:29, col:39> col:39 invalid persistent 'int *'   |-ParmVarDecl 0x12480dda8 <line:2:29, col:39> col:39 invalid watch_accessed_variables 'int *'   `-CompoundStmt 0x124122b30 <col:65, line:12:1>     |-BinaryOperator 0x12480e028 <line:3:3, col:29> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12480df88 <col:3, col:20> '<dependent type>' contains-errors lvalue .tp_new     | | `-RecoveryExpr 0x12480df60 <col:3> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12480df40 <col:3> 'int *(int *, int *)' Function 0x12480de88 'TFE_Py_TapeSetNew' 'int *(int *, int *)'     | `-RecoveryExpr 0x12480e008 <col:29> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12480e340 <line:4:3, col:51>     | |-BinaryOperator 0x12480e2d8 <col:7, col:41> 'int' contains-errors '<'     | | |-CallExpr 0x12480e2b0 <col:7, col:37> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x12480e1a0 <col:7> 'int ()' Function 0x12480e0e8 'PyType_Ready' 'int ()'     | | | `-UnaryOperator 0x12480e298 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-RecoveryExpr 0x12480e278 <col:21> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x12480e218 <col:41> 'int' 0     | `-ReturnStmt 0x12480e330 <col:44, col:51>     |   `-RecoveryExpr 0x12480e310 <col:51> '<dependent type>' contains-errors lvalue     `-CallExpr 0x1241228c8 <line:8:3, col:17> '<dependent type>' contains-errors       |-DeclRefExpr 0x124122848 <col:3> 'int ()' Function 0x124122790 'Py_INCREF' 'int ()'       `-RecoveryExpr 0x1241228a8 <col:13> '<dependent type>' contains-errors lvalue ","19726":"`-FunctionDecl 0x1540269c8  line:1:12 __check_buffer_access 'int (struct bpf_verifier_env *, const char *, const struct bpf_reg_state *, int, int, int)' static   |-ParmVarDecl 0x15400e248 <col:34, col:59> col:59 used env 'struct bpf_verifier_env *'   |-ParmVarDecl 0x15400e2c8 <line:2:6, col:18> col:18 used buf_info 'const char *'   |-ParmVarDecl 0x1540266c8 <line:3:6, col:34> col:34 used reg 'const struct bpf_reg_state *'   |-ParmVarDecl 0x154026748 <line:4:6, col:10> col:10 used regno 'int'   |-ParmVarDecl 0x1540267c8 <col:17, col:21> col:21 used off 'int'   |-ParmVarDecl 0x154026848 <col:26, col:30> col:30 used size 'int'   `-CompoundStmt 0x154029640 <line:5:1, line:23:1>     |-IfStmt 0x154026fa0 <line:6:2, line:11:2>     | |-BinaryOperator 0x154026b40 <line:6:6, col:12> 'int' '<'     | | |-ImplicitCastExpr 0x154026b28 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x154026ae8 <col:6> 'int' lvalue ParmVar 0x1540267c8 'off' 'int'     | | `-IntegerLiteral 0x154026b08 <col:12> 'int' 0     | `-CompoundStmt 0x154026f80 <col:15, line:11:2>     |   |-CallExpr 0x154026df8 <line:7:3, line:9:30> 'int'     |   | |-ImplicitCastExpr 0x154026de0 <line:7:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x154026c90 <col:3> 'int ()' Function 0x154026bd8 'verbose' 'int ()'     |   | |-ImplicitCastExpr 0x154026e48 <col:11> 'struct bpf_verifier_env *' <LValueToRValue>     |   | | `-DeclRefExpr 0x154026cb0 <col:11> 'struct bpf_verifier_env *' lvalue ParmVar 0x15400e248 'env' 'struct bpf_verifier_env *'     |   | |-ImplicitCastExpr 0x154026e60 <line:8:4> 'char *' <ArrayToPointerDecay>     |   | | `-StringLiteral 0x154026d10 <col:4> 'char[4]' lvalue \"STR\"     |   | |-ImplicitCastExpr 0x154026e78 <line:9:4> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x154026d30 <col:4> 'int' lvalue ParmVar 0x154026748 'regno' 'int'     |   | |-ImplicitCastExpr 0x154026e90 <col:11> 'const char *' <LValueToRValue>     |   | | `-DeclRefExpr 0x154026d50 <col:11> 'const char *' lvalue ParmVar 0x15400e2c8 'buf_info' 'const char *'     |   | |-ImplicitCastExpr 0x154026ea8 <col:21> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x154026d70 <col:21> 'int' lvalue ParmVar 0x1540267c8 'off' 'int'     |   | `-ImplicitCastExpr 0x154026ec0 <col:26> 'int' <LValueToRValue>     |   |   `-DeclRefExpr 0x154026d90 <col:26> 'int' lvalue ParmVar 0x154026848 'size' 'int'     |   `-ReturnStmt 0x154026f70 <line:10:3, col:11>     |     `-UnaryOperator 0x154026f58 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x154026f40 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x154026f20 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1540295f0 <line:12:2, line:20:2>     | |-BinaryOperator 0x154027208 <line:12:6, col:51> 'int' contains-errors '||'     | | |-UnaryOperator 0x154027148 <col:6, col:33> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | `-CallExpr 0x154027120 <col:7, col:33> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x1540270a0 <col:7> 'int ()' Function 0x154026fe8 'tnum_is_const' 'int ()'     | | |   `-RecoveryExpr 0x1540270f8 <col:21, col:26> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x1540270c0 <col:21> 'const struct bpf_reg_state *' lvalue ParmVar 0x1540266c8 'reg' 'const struct bpf_reg_state *'     | | `-CXXDependentScopeMemberExpr 0x1540271c0 <col:38, col:51> '<dependent type>' contains-errors lvalue .value     | |   `-RecoveryExpr 0x154027198 <col:38, col:43> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x154027160 <col:38> 'const struct bpf_reg_state *' lvalue ParmVar 0x1540266c8 'reg' 'const struct bpf_reg_state *'     | `-CompoundStmt 0x1540295c0 <col:58, line:20:2>     |   |-DeclStmt 0x154027338 <line:13:3, col:18>     |   | `-VarDecl 0x1540272d0 <col:3, col:17> col:8 used tn_buf 'char[48]'     |   |-CallExpr 0x154027530 <line:15:3, col:49> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x154027430 <col:3> 'int ()' Function 0x154027378 'tnum_strn' 'int ()'     |   | |-DeclRefExpr 0x154027450 <col:13> 'char[48]' lvalue Var 0x1540272d0 'tn_buf' 'char[48]'     |   | |-UnaryExprOrTypeTraitExpr 0x1540274b0 <col:21, col:34> 'unsigned long' sizeof     |   | | `-ParenExpr 0x154027490 <col:27, col:34> 'char[48]' lvalue     |   | |   `-DeclRefExpr 0x154027470 <col:28> 'char[48]' lvalue Var 0x1540272d0 'tn_buf' 'char[48]' non_odr_use_unevaluated     |   | `-RecoveryExpr 0x154027508 <col:37, col:42> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x1540274d0 <col:37> 'const struct bpf_reg_state *' lvalue ParmVar 0x1540266c8 'reg' 'const struct bpf_reg_state *'     |   |-CallExpr 0x154029458 <line:16:3, line:18:22> 'int'     |   | |-ImplicitCastExpr 0x154029440 <line:16:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x154027568 <col:3> 'int ()' Function 0x154026bd8 'verbose' 'int ()'     |   | |-ImplicitCastExpr 0x1540294a0 <col:11> 'struct bpf_verifier_env *' <LValueToRValue>     |   | | `-DeclRefExpr 0x154027588 <col:11> 'struct bpf_verifier_env *' lvalue ParmVar 0x15400e248 'env' 'struct bpf_verifier_env *'     |   | |-ImplicitCastExpr 0x1540294b8 <line:17:4> 'char *' <ArrayToPointerDecay>     |   | | `-StringLiteral 0x1540275a8 <col:4> 'char[4]' lvalue \"STR\"     |   | |-ImplicitCastExpr 0x1540294d0 <line:18:4> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x1540275c8 <col:4> 'int' lvalue ParmVar 0x154026748 'regno' 'int'     |   | |-ImplicitCastExpr 0x1540294e8 <col:11> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x154029400 <col:11> 'int' lvalue ParmVar 0x1540267c8 'off' 'int'     |   | `-ImplicitCastExpr 0x154029500 <col:16> 'char *' <ArrayToPointerDecay>     |   |   `-DeclRefExpr 0x154029420 <col:16> 'char[48]' lvalue Var 0x1540272d0 'tn_buf' 'char[48]'     |   `-ReturnStmt 0x1540295b0 <line:19:3, col:11>     |     `-UnaryOperator 0x154029598 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x154029580 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x154029560 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x154029630 <line:22:2, col:9>       `-IntegerLiteral 0x154029610 <col:9> 'int' 0 ","19947":"`-FunctionDecl 0x14302b2c8  col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x14302b3c8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x14302b430 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x14302b498 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14302b370 <<invalid sloc>> Implicit 882 ","19479":"`-FunctionDecl 0x145008358  line:1:12 push_insn 'int (int, int, int, struct bpf_verifier_env *)' static   |-ParmVarDecl 0x1449280d8 <col:22, col:26> col:26 used t 'int'   |-ParmVarDecl 0x144928158 <col:29, col:33> col:33 used w 'int'   |-ParmVarDecl 0x1449281d8 <col:36, col:40> col:40 used e 'int'   |-ParmVarDecl 0x145008200 <col:43, col:68> col:68 used env 'struct bpf_verifier_env *'   `-CompoundStmt 0x1460099d0 <line:2:1, line:37:1>     |-IfStmt 0x1450085b0 <line:3:2, line:4:10>     | |-RecoveryExpr 0x145008560 <line:3:6, col:68> '_Bool' contains-errors     | `-ReturnStmt 0x1450085a0 <line:4:3, col:10>     |   `-IntegerLiteral 0x145008580 <col:10> 'int' 0     |-IfStmt 0x145008700 <line:6:2, line:7:10>     | |-RecoveryExpr 0x1450086b0 <line:6:6, col:58> '_Bool' contains-errors     | `-ReturnStmt 0x1450086f0 <line:7:3, col:10>     |   `-IntegerLiteral 0x1450086d0 <col:10> 'int' 0     |-IfStmt 0x145008c40 <line:9:2, line:12:2>     | |-BinaryOperator 0x145008880 <line:9:6, col:31> 'int' contains-errors '||'     | | |-BinaryOperator 0x145008778 <col:6, col:10> 'int' '<'     | | | |-ImplicitCastExpr 0x145008760 <col:6> 'int' <LValueToRValue>     | | | | `-DeclRefExpr 0x145008720 <col:6> 'int' lvalue ParmVar 0x144928158 'w' 'int'     | | | `-IntegerLiteral 0x145008740 <col:10> 'int' 0     | | `-BinaryOperator 0x145008860 <col:15, col:31> 'int' contains-errors '>='     | |   |-DeclRefExpr 0x145008798 <col:15> 'int' lvalue ParmVar 0x144928158 'w' 'int'     | |   `-CXXDependentScopeMemberExpr 0x145008818 <col:20, col:31> '<dependent type>' contains-errors lvalue ->len     | |     `-RecoveryExpr 0x1450087f0 <col:20, col:25> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x1450087b8 <col:20> 'struct bpf_verifier_env *' lvalue ParmVar 0x145008200 'env' 'struct bpf_verifier_env *'     | `-CompoundStmt 0x145008c20 <col:36, line:12:2>     |   |-CallExpr 0x145008ad8 <line:10:3, col:27> 'int'     |   | |-ImplicitCastExpr 0x145008ac0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x1450089b0 <col:3> 'int ()' Function 0x1450088f8 'verbose' 'int ()'     |   | |-ImplicitCastExpr 0x145008b18 <col:11> 'struct bpf_verifier_env *' <LValueToRValue>     |   | | `-DeclRefExpr 0x1450089d0 <col:11> 'struct bpf_verifier_env *' lvalue ParmVar 0x145008200 'env' 'struct bpf_verifier_env *'     |   | |-ImplicitCastExpr 0x145008b30 <col:16> 'char *' <ArrayToPointerDecay>     |   | | `-StringLiteral 0x145008a30 <col:16> 'char[4]' lvalue \"STR\"     |   | |-ImplicitCastExpr 0x145008b48 <col:23> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x145008a50 <col:23> 'int' lvalue ParmVar 0x1449280d8 't' 'int'     |   | `-ImplicitCastExpr 0x145008b60 <col:26> 'int' <LValueToRValue>     |   |   `-DeclRefExpr 0x145008a70 <col:26> 'int' lvalue ParmVar 0x144928158 'w' 'int'     |   `-ReturnStmt 0x145008c10 <line:11:3, col:11>     |     `-UnaryOperator 0x145008bf8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x145008be0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x145008bc0 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x145008ee0 <line:14:2, line:16:29>     | |-BinaryOperator 0x145008cd8 <line:14:6, col:11> 'int' contains-errors '=='     | | |-DeclRefExpr 0x145008c60 <col:6> 'int' lvalue ParmVar 0x1449281d8 'e' 'int'     | | `-RecoveryExpr 0x145008cb8 <col:11> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x145008ec0 <line:16:3, col:29> '<dependent type>' contains-errors '='     |   |-ArraySubscriptExpr 0x145008e80 <col:3, col:25> '<dependent type>' contains-errors lvalue     |   | |-ImplicitCastExpr 0x145008e50 <col:3, col:8> '<dependent type>' contains-errors <LValueToRValue>     |   | | `-RecoveryExpr 0x145008d30 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x145008cf8 <col:3> 'struct bpf_verifier_env *' lvalue ParmVar 0x145008200 'env' 'struct bpf_verifier_env *'     |   | `-ImplicitCastExpr 0x145008e68 <col:24> 'int' <LValueToRValue>     |   |   `-DeclRefExpr 0x145008d58 <col:24> 'int' lvalue ParmVar 0x144928158 'w' 'int'     |   `-RecoveryExpr 0x145008ea0 <col:29> '<dependent type>' contains-errors lvalue     |-IfStmt 0x146009970 <line:18:2, line:35:2> has_else     | |-RecoveryExpr 0x145008f58 <line:18:6, col:23> '_Bool' contains-errors     | |-CompoundStmt 0x145009198 <col:26, line:26:2>     | | `-ReturnStmt 0x145009188 <line:25:3, col:10>     | |   `-IntegerLiteral 0x145009168 <col:10> 'int' 1     | `-IfStmt 0x146009940 <line:26:9, line:35:2> has_else     |   |-RecoveryExpr 0x146009600 <line:26:13, col:39> '_Bool' contains-errors     |   |-CompoundStmt 0x146009778 <col:51, line:29:2>     |   | `-CallExpr 0x1460096d8 <line:27:3, col:27> 'int'     |   |   |-ImplicitCastExpr 0x1460096c0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x146009620 <col:3> 'int ()' Function 0x1450088f8 'verbose' 'int ()'     |   |   |-ImplicitCastExpr 0x146009718 <col:11> 'struct bpf_verifier_env *' <LValueToRValue>     |   |   | `-DeclRefExpr 0x146009640 <col:11> 'struct bpf_verifier_env *' lvalue ParmVar 0x145008200 'env' 'struct bpf_verifier_env *'     |   |   |-ImplicitCastExpr 0x146009730 <col:16> 'char *' <ArrayToPointerDecay>     |   |   | `-StringLiteral 0x146009660 <col:16> 'char[4]' lvalue \"STR\"     |   |   |-ImplicitCastExpr 0x146009748 <col:23> 'int' <LValueToRValue>     |   |   | `-DeclRefExpr 0x146009680 <col:23> 'int' lvalue ParmVar 0x1449280d8 't' 'int'     |   |   `-ImplicitCastExpr 0x146009760 <col:26> 'int' <LValueToRValue>     |   |     `-DeclRefExpr 0x1460096a0 <col:26> 'int' lvalue ParmVar 0x144928158 'w' 'int'     |   `-IfStmt 0x146009910 <line:29:9, line:35:2> has_else     |     |-RecoveryExpr 0x1460097b0 <line:29:13, col:30> '_Bool' contains-errors     |     |-CompoundStmt 0x146009810 <col:40, line:32:2>     |     `-CompoundStmt 0x1460098f8 <col:9, line:35:2>     |       `-CallExpr 0x146009898 <line:33:3, col:21> 'int'     |         |-ImplicitCastExpr 0x146009880 <col:3> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x146009820 <col:3> 'int ()' Function 0x1450088f8 'verbose' 'int ()'     |         |-ImplicitCastExpr 0x1460098c8 <col:11> 'struct bpf_verifier_env *' <LValueToRValue>     |         | `-DeclRefExpr 0x146009840 <col:11> 'struct bpf_verifier_env *' lvalue ParmVar 0x145008200 'env' 'struct bpf_verifier_env *'     |         `-ImplicitCastExpr 0x1460098e0 <col:16> 'char *' <ArrayToPointerDecay>     |           `-StringLiteral 0x146009860 <col:16> 'char[4]' lvalue \"STR\"     `-ReturnStmt 0x1460099c0 <line:36:2, col:9>       `-IntegerLiteral 0x1460099a0 <col:9> 'int' 0 ","20100":"`-FunctionDecl 0x147028da8  col:9 implicit used malloc 'void *(unsigned long)' extern   |-ParmVarDecl 0x147028ea8 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-BuiltinAttr 0x147028e50 <<invalid sloc>> Implicit 871   `-AllocSizeAttr 0x147028f18 <col:9> Implicit 1 ","19859":"`-FunctionDecl 0x159940da8  line:1:12 ebb_get 'int (struct task_struct *, const struct user_regset *, unsigned int, unsigned int, void *, int)' static   |-ParmVarDecl 0x159928648 <col:20, col:40> col:40 used target 'struct task_struct *'   |-ParmVarDecl 0x159940a28 <line:2:9, col:35> col:35 regset 'const struct user_regset *'   |-ParmVarDecl 0x159940aa8 <line:3:9, col:22> col:22 used pos 'unsigned int'   |-ParmVarDecl 0x159940b28 <col:27, col:40> col:40 used count 'unsigned int'   |-ParmVarDecl 0x159940ba8 <line:4:9, col:15> col:15 used kbuf 'void *'   |-ParmVarDecl 0x159940c20 <col:21, col:26> col:26 __user 'int'   `-CompoundStmt 0x159944370 <line:5:1, line:18:1>     |-CallExpr 0x159941358 <line:7:2, col:63> '<dependent type>' contains-errors     | |-DeclRefExpr 0x159940ff0 <col:2> 'int ()' Function 0x159940f38 'BUILD_BUG_ON' 'int ()'     | `-BinaryOperator 0x159941338 <col:15, col:62> 'int' contains-errors '!='     |   |-BinaryOperator 0x1599412d0 <col:15, col:48> '<dependent type>' contains-errors '+'     |   | |-CallExpr 0x159941270 <col:15, col:24> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x1599410f0 <col:15> 'int ()' Function 0x159941038 'TSO' 'int ()'     |   | | `-RecoveryExpr 0x159941250 <col:19> '<dependent type>' contains-errors lvalue     |   | `-UnaryExprOrTypeTraitExpr 0x1599412b0 <col:28, col:48> 'unsigned long' sizeof 'unsigned long'     |   `-CallExpr 0x159941310 <col:53, col:62> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1599411a8 <col:53> 'int ()' Function 0x159941038 'TSO' 'int ()'     |     `-RecoveryExpr 0x1599412f0 <col:57> '<dependent type>' contains-errors lvalue     |-CallExpr 0x159941608 <line:8:2, col:63> '<dependent type>' contains-errors     | |-DeclRefExpr 0x159941380 <col:2> 'int ()' Function 0x159940f38 'BUILD_BUG_ON' 'int ()'     | `-BinaryOperator 0x1599415e8 <col:15, col:62> 'int' contains-errors '!='     |   |-BinaryOperator 0x159941580 <col:15, col:48> '<dependent type>' contains-errors '+'     |   | |-CallExpr 0x159941520 <col:15, col:24> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x1599413a0 <col:15> 'int ()' Function 0x159941038 'TSO' 'int ()'     |   | | `-RecoveryExpr 0x159941500 <col:19> '<dependent type>' contains-errors lvalue     |   | `-UnaryExprOrTypeTraitExpr 0x159941560 <col:28, col:48> 'unsigned long' sizeof 'unsigned long'     |   `-CallExpr 0x1599415c0 <col:53, col:62> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x159941458 <col:53> 'int ()' Function 0x159941038 'TSO' 'int ()'     |     `-RecoveryExpr 0x1599415a0 <col:57> '<dependent type>' contains-errors lvalue     |-IfStmt 0x159941890 <line:10:2, line:11:11>     | |-UnaryOperator 0x1599417d0 <line:10:6, col:40> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x1599417a8 <col:7, col:40> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x159941710 <col:7> 'int ()' Function 0x159941658 'cpu_has_feature' 'int ()'     | |   `-RecoveryExpr 0x159941788 <col:23> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x159941880 <line:11:3, col:11>     |   `-UnaryOperator 0x159941868 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x159941850 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x159941830 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x159943e40 <line:13:2, line:14:11>     | |-UnaryOperator 0x159941970 <line:13:6, col:22> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x159941958 <col:7, col:22> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x159941910 <col:7, col:22> '<dependent type>' contains-errors lvalue .used_ebb     | |     `-RecoveryExpr 0x1599418e8 <col:7, col:15> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x1599418b0 <col:7> 'struct task_struct *' lvalue ParmVar 0x159928648 'target' 'struct task_struct *'     | `-ReturnStmt 0x159943e30 <line:14:3, col:11>     |   `-UnaryOperator 0x159943e18 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x159943e00 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x1599419d0 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x159944360 <line:16:2, line:17:55>       `-CallExpr 0x159944308 <line:16:9, line:17:55> '<dependent type>' contains-errors         |-DeclRefExpr 0x159943f40 <line:16:9> 'int ()' Function 0x159943e88 'user_regset_copyout' 'int ()'         |-UnaryOperator 0x159943fb0 <col:29, col:30> 'unsigned int *' prefix '&' cannot overflow         | `-DeclRefExpr 0x159943f60 <col:30> 'unsigned int' lvalue ParmVar 0x159940aa8 'pos' 'unsigned int'         |-UnaryOperator 0x159943fe8 <col:35, col:36> 'unsigned int *' prefix '&' cannot overflow         | `-DeclRefExpr 0x159943fc8 <col:36> 'unsigned int' lvalue ParmVar 0x159940b28 'count' 'unsigned int'         |-UnaryOperator 0x159944050 <col:43, col:44> 'void **' prefix '&' cannot overflow         | `-DeclRefExpr 0x159944000 <col:44> 'void *' lvalue ParmVar 0x159940ba8 'kbuf' 'void *'         |-UnaryOperator 0x159944280 <col:50, col:51> 'void **' prefix '&' cannot overflow         | `-DeclRefExpr 0x159944260 <col:51> 'void *' lvalue ParmVar 0x159940ba8 'kbuf' 'void *'         |-UnaryOperator 0x159944140 <line:17:4, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow         | `-CXXDependentScopeMemberExpr 0x1599440f8 <col:5, col:20> '<dependent type>' contains-errors lvalue .ebbrr         |   `-RecoveryExpr 0x1599440d0 <col:5, col:13> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x159944098 <col:5> 'struct task_struct *' lvalue ParmVar 0x159928648 'target' 'struct task_struct *'         |-IntegerLiteral 0x159944158 <col:27> 'int' 0         `-BinaryOperator 0x1599442e8 <col:30, col:54> 'unsigned long' '*'           |-ImplicitCastExpr 0x1599442d0 <col:30> 'unsigned long' <IntegralCast>           | `-IntegerLiteral 0x159944178 <col:30> 'int' 3           `-UnaryExprOrTypeTraitExpr 0x1599442b0 <col:34, col:54> 'unsigned long' sizeof 'unsigned long' ","19526":"`-FunctionDecl 0x152941838  line:2:16 invalid xps_rxqs_show 'int (struct netdev_queue *, char *)' static   |-ParmVarDecl 0x152928668 <col:30, col:51> col:51 used queue 'struct netdev_queue *'   |-ParmVarDecl 0x1529286e8 <col:58, col:64> col:64 used buf 'char *'   `-CompoundStmt 0x1529452e8 <line:3:1, line:48:41>     |-DeclStmt 0x152941b38 <line:4:2, col:37>     | |-RecordDecl 0x1529418f0 <col:2, col:9> col:9 struct net_device     | `-VarDecl 0x152941a58 <col:2, col:34> col:21 used dev 'struct net_device *' cinit     |   `-RecoveryExpr 0x152941af8 <col:27, col:34> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x152941ac0 <col:27> 'struct netdev_queue *' lvalue ParmVar 0x152928668 'queue' 'struct netdev_queue *'     |-DeclStmt 0x152941d38 <line:5:2, col:31>     | |-RecordDecl 0x152941b50 <col:2, col:9> col:9 struct xps_dev_maps     | `-VarDecl 0x152941cb8 <col:2, col:23> col:23 used dev_maps 'struct xps_dev_maps *'     |-DeclStmt 0x152941e98 <line:6:2, col:28>     | |-VarDecl 0x152941d98 <col:2, col:17> col:17 used mask 'unsigned long *'     | `-VarDecl 0x152941e18 <col:2, col:23> col:23 used index 'unsigned long'     |-DeclStmt 0x152942118 <line:7:2, col:32>     | |-VarDecl 0x152941ec8 <col:2, col:6> col:6 used j 'int'     | |-VarDecl 0x152941f48 <col:2, col:9> col:9 used len 'int'     | |-VarDecl 0x152941fc8 <col:2, col:23> col:14 used num_tc 'int' cinit     | | `-IntegerLiteral 0x152942030 <col:23> 'int' 1     | `-VarDecl 0x152942068 <col:2, col:31> col:26 used tc 'int' cinit     |   `-IntegerLiteral 0x1529420d0 <col:31> 'int' 0     |-BinaryOperator 0x152942390 <line:9:2, col:38> 'unsigned long' '='     | |-DeclRefExpr 0x152942130 <col:2> 'unsigned long' lvalue Var 0x152941e18 'index' 'unsigned long'     | `-ImplicitCastExpr 0x152942378 <col:10, col:38> 'unsigned long' <IntegralCast>     |   `-CallExpr 0x152942338 <col:10, col:38> 'int'     |     |-ImplicitCastExpr 0x152942320 <col:10> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1529422b0 <col:10> 'int ()' Function 0x1529421f8 'get_netdev_queue_index' 'int ()'     |     `-ImplicitCastExpr 0x152942360 <col:33> 'struct netdev_queue *' <LValueToRValue>     |       `-DeclRefExpr 0x1529422d0 <col:33> 'struct netdev_queue *' lvalue ParmVar 0x152928668 'queue' 'struct netdev_queue *'     |-IfStmt 0x152943428 <line:11:2, line:16:2>     | |-RecoveryExpr 0x1529423e8 <line:11:6, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1529423b0 <col:6> 'struct net_device *' contains-errors lvalue Var 0x152941a58 'dev' 'struct net_device *'     | `-CompoundStmt 0x152943400 <col:19, line:16:2>     |   |-BinaryOperator 0x152942490 <line:12:3, col:17> 'int' contains-errors '='     |   | |-DeclRefExpr 0x152942410 <col:3> 'int' lvalue Var 0x152941fc8 'num_tc' 'int'     |   | `-RecoveryExpr 0x152942468 <col:12, col:17> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x152942430 <col:12> 'struct net_device *' contains-errors lvalue Var 0x152941a58 'dev' 'struct net_device *'     |   |-BinaryOperator 0x152942688 <line:13:3, col:35> 'int' contains-errors '='     |   | |-DeclRefExpr 0x1529424b0 <col:3> 'int' lvalue Var 0x152942068 'tc' 'int'     |   | `-CallExpr 0x152942628 <col:8, col:35> 'int' contains-errors     |   |   |-ImplicitCastExpr 0x152942610 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x1529425b0 <col:8> 'int ()' Function 0x1529424f8 'netdev_txq_to_tc' 'int ()'     |   |   |-ImplicitCastExpr 0x152942658 <col:25> 'struct net_device *' contains-errors <LValueToRValue>     |   |   | `-DeclRefExpr 0x1529425d0 <col:25> 'struct net_device *' contains-errors lvalue Var 0x152941a58 'dev' 'struct net_device *'     |   |   `-ImplicitCastExpr 0x152942670 <col:30> 'unsigned long' <LValueToRValue>     |   |     `-DeclRefExpr 0x1529425f0 <col:30> 'unsigned long' lvalue Var 0x152941e18 'index' 'unsigned long'     |   `-IfStmt 0x1529427c8 <line:14:3, line:15:12>     |     |-BinaryOperator 0x152942700 <line:14:7, col:12> 'int' '<'     |     | |-ImplicitCastExpr 0x1529426e8 <col:7> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x1529426a8 <col:7> 'int' lvalue Var 0x152942068 'tc' 'int'     |     | `-IntegerLiteral 0x1529426c8 <col:12> 'int' 0     |     `-ReturnStmt 0x1529427b8 <line:15:4, col:12>     |       `-UnaryOperator 0x1529427a0 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |         `-ImplicitCastExpr 0x152942788 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |           `-RecoveryExpr 0x152942768 <col:12> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x152943680 <line:17:2, col:53> 'unsigned long *' contains-errors '='     | |-DeclRefExpr 0x152943448 <col:2> 'unsigned long *' lvalue Var 0x152941d98 'mask' 'unsigned long *'     | `-CallExpr 0x152943650 <col:9, col:53> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x152943548 <col:9> 'int ()' Function 0x152943490 'bitmap_zalloc' 'int ()'     |   |-RecoveryExpr 0x1529435a0 <col:23, col:28> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x152943568 <col:23> 'struct net_device *' contains-errors lvalue Var 0x152941a58 'dev' 'struct net_device *'     |   `-RecoveryExpr 0x152943630 <col:43> '<dependent type>' contains-errors lvalue     |-IfStmt 0x152943798 <line:18:2, line:19:11>     | |-UnaryOperator 0x1529436d8 <line:18:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1529436c0 <col:7> 'unsigned long *' <LValueToRValue>     | |   `-DeclRefExpr 0x1529436a0 <col:7> 'unsigned long *' lvalue Var 0x152941d98 'mask' 'unsigned long *'     | `-ReturnStmt 0x152943788 <line:19:3, col:11>     |   `-UnaryOperator 0x152943770 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x152943758 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x152943738 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1529438d0 <line:21:2, col:16> 'int'     | `-ImplicitCastExpr 0x1529438b8 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x152943898 <col:2> 'int ()' Function 0x1529437e0 'rcu_read_lock' 'int ()'     |-BinaryOperator 0x152943a98 <line:22:2, col:46> 'struct xps_dev_maps *' contains-errors '='     | |-DeclRefExpr 0x1529438f0 <col:2> 'struct xps_dev_maps *' lvalue Var 0x152941cb8 'dev_maps' 'struct xps_dev_maps *'     | `-CallExpr 0x152943a70 <col:13, col:46> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1529439f0 <col:13> 'int ()' Function 0x152943938 'rcu_dereference' 'int ()'     |   `-RecoveryExpr 0x152943a48 <col:29, col:34> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x152943a10 <col:29> 'struct net_device *' contains-errors lvalue Var 0x152941a58 'dev' 'struct net_device *'     |-IfStmt 0x152943b70 <line:23:2, line:24:8>     | |-UnaryOperator 0x152943af0 <line:23:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x152943ad8 <col:7> 'struct xps_dev_maps *' <LValueToRValue>     | |   `-DeclRefExpr 0x152943ab8 <col:7> 'struct xps_dev_maps *' lvalue Var 0x152941cb8 'dev_maps' 'struct xps_dev_maps *'     | `-GotoStmt 0x152943b58 <line:24:3, col:8> 'out_no_maps' 0x152943b08     |-ForStmt 0x152944de0 <line:26:2, line:41:2>     | |-BinaryOperator 0x152943be8 <line:26:7, col:12> 'int' '='     | | |-DeclRefExpr 0x152943b90 <col:7> 'int' lvalue Var 0x152941ec8 'j' 'int'     | | `-UnaryOperator 0x152943bd0 <col:11, col:12> 'int' prefix '-'     | |   `-IntegerLiteral 0x152943bb0 <col:12> 'int' 1     | |-<<<NULL>>>     | |-BinaryOperator 0x152943f50 <col:15, line:27:16> 'int' contains-errors ','     | | |-BinaryOperator 0x152943f30 <line:26:15, col:66> 'int' contains-errors '='     | | | |-DeclRefExpr 0x152943c08 <col:15> 'int' lvalue Var 0x152941ec8 'j' 'int'     | | | `-CallExpr 0x152943ef8 <col:19, col:66> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x152943d08 <col:19> 'int ()' Function 0x152943c50 'netif_attrmask_next' 'int ()'     | | |   |-DeclRefExpr 0x152943d28 <col:39> 'int' lvalue Var 0x152941ec8 'j' 'int'     | | |   |-RecoveryExpr 0x152943ed8 <col:42> '<dependent type>' contains-errors lvalue     | | |   `-RecoveryExpr 0x152943d98 <col:48, col:53> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x152943d60 <col:48> 'struct net_device *' contains-errors lvalue Var 0x152941a58 'dev' 'struct net_device *'     | | `-BinaryOperator 0x152943e98 <line:27:7, col:16> 'int' contains-errors '<'     | |   |-DeclRefExpr 0x152943e18 <col:7> 'int' lvalue Var 0x152941ec8 'j' 'int'     | |   `-RecoveryExpr 0x152943e70 <col:11, col:16> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x152943e38 <col:11> 'struct net_device *' contains-errors lvalue Var 0x152941a58 'dev' 'struct net_device *'     | |-<<<NULL>>>     | `-CompoundStmt 0x152944da8 <col:32, line:41:2>     |   |-DeclStmt 0x152944170 <line:28:3, col:31>     |   | |-VarDecl 0x152943f88 <col:3, col:7> col:7 used i 'int'     |   | `-VarDecl 0x152944008 <col:3, col:29> col:10 used tci 'int' cinit     |   |   `-BinaryOperator 0x152944138 <col:16, col:29> 'int' '+'     |   |     |-BinaryOperator 0x1529440e0 <col:16, col:20> 'int' '*'     |   |     | |-ImplicitCastExpr 0x1529440b0 <col:16> 'int' <LValueToRValue>     |   |     | | `-DeclRefExpr 0x152944070 <col:16> 'int' lvalue Var 0x152941ec8 'j' 'int'     |   |     | `-ImplicitCastExpr 0x1529440c8 <col:20> 'int' <LValueToRValue>     |   |     |   `-DeclRefExpr 0x152944090 <col:20> 'int' lvalue Var 0x152941fc8 'num_tc' 'int'     |   |     `-ImplicitCastExpr 0x152944120 <col:29> 'int' <LValueToRValue>     |   |       `-DeclRefExpr 0x152944100 <col:29> 'int' lvalue Var 0x152942068 'tc' 'int'     |   |-DeclStmt 0x152944378 <line:29:3, col:22>     |   | |-RecordDecl 0x152944188 <col:3, col:10> col:10 struct xps_map     |   | `-VarDecl 0x1529442f8 <col:3, col:19> col:19 used map 'struct xps_map *'     |   |-BinaryOperator 0x1529448d8 <line:31:3, col:48> 'struct xps_map *' contains-errors '='     |   | |-DeclRefExpr 0x152944390 <col:3> 'struct xps_map *' lvalue Var 0x1529442f8 'map' 'struct xps_map *'     |   | `-CallExpr 0x1529448b0 <col:9, col:48> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x1529443b0 <col:9> 'int ()' Function 0x152943938 'rcu_dereference' 'int ()'     |   |   `-ArraySubscriptExpr 0x152944890 <col:25, col:47> '<dependent type>' contains-errors lvalue     |   |     |-ImplicitCastExpr 0x152944860 <col:25, col:35> '<dependent type>' contains-errors <LValueToRValue>     |   |     | `-RecoveryExpr 0x152944818 <col:25, col:35> '<dependent type>' contains-errors lvalue     |   |     |   `-DeclRefExpr 0x1529443d0 <col:25> 'struct xps_dev_maps *' lvalue Var 0x152941cb8 'dev_maps' 'struct xps_dev_maps *'     |   |     `-ImplicitCastExpr 0x152944878 <col:44> 'int' <LValueToRValue>     |   |       `-DeclRefExpr 0x152944840 <col:44> 'int' lvalue Var 0x152944008 'tci' 'int'     |   |-IfStmt 0x152944950 <line:32:3, line:33:4>     |   | |-UnaryOperator 0x152944930 <line:32:7, col:8> 'int' prefix '!' cannot overflow     |   | | `-ImplicitCastExpr 0x152944918 <col:8> 'struct xps_map *' <LValueToRValue>     |   | |   `-DeclRefExpr 0x1529448f8 <col:8> 'struct xps_map *' lvalue Var 0x1529442f8 'map' 'struct xps_map *'     |   | `-ContinueStmt 0x152944948 <line:33:4>     |   `-ForStmt 0x152944d70 <line:35:3, line:40:3>     |     |-BinaryOperator 0x1529449f0 <line:35:8, col:17> 'int' contains-errors '='     |     | |-DeclRefExpr 0x152944970 <col:8> 'int' lvalue Var 0x152943f88 'i' 'int'     |     | `-RecoveryExpr 0x1529449c8 <col:12, col:17> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x152944990 <col:12> 'struct xps_map *' lvalue Var 0x1529442f8 'map' 'struct xps_map *'     |     |-<<<NULL>>>     |     |-UnaryOperator 0x152944a30 <col:22, col:23> 'int' postfix '--'     |     | `-DeclRefExpr 0x152944a10 <col:22> 'int' lvalue Var 0x152943f88 'i' 'int'     |     |-<<<NULL>>>     |     `-CompoundStmt 0x152944d58 <col:28, line:40:3>     |       `-IfStmt 0x152944d38 <line:36:4, line:39:4>     |         |-BinaryOperator 0x152944b38 <line:36:8, col:26> 'int' contains-errors '=='     |         | |-ArraySubscriptExpr 0x152944af8 <col:8, col:21> '<dependent type>' contains-errors lvalue     |         | | |-ImplicitCastExpr 0x152944ac8 <col:8, col:13> '<dependent type>' contains-errors <LValueToRValue>     |         | | | `-RecoveryExpr 0x152944a80 <col:8, col:13> '<dependent type>' contains-errors lvalue     |         | | |   `-DeclRefExpr 0x152944a48 <col:8> 'struct xps_map *' lvalue Var 0x1529442f8 'map' 'struct xps_map *'     |         | | `-ImplicitCastExpr 0x152944ae0 <col:20> 'int' <LValueToRValue>     |         | |   `-DeclRefExpr 0x152944aa8 <col:20> 'int' lvalue Var 0x152943f88 'i' 'int'     |         | `-DeclRefExpr 0x152944b18 <col:26> 'unsigned long' lvalue Var 0x152941e18 'index' 'unsigned long'     |         `-CompoundStmt 0x152944d18 <col:33, line:39:4>     |           |-CallExpr 0x152944cb0 <line:37:5, col:20> 'int'     |           | |-ImplicitCastExpr 0x152944c98 <col:5> 'int (*)()' <FunctionToPointerDecay>     |           | | `-DeclRefExpr 0x152944c38 <col:5> 'int ()' Function 0x152944b80 'set_bit' 'int ()'     |           | |-ImplicitCastExpr 0x152944ce0 <col:13> 'int' <LValueToRValue>     |           | | `-DeclRefExpr 0x152944c58 <col:13> 'int' lvalue Var 0x152941ec8 'j' 'int'     |           | `-ImplicitCastExpr 0x152944cf8 <col:16> 'unsigned long *' <LValueToRValue>     |           |   `-DeclRefExpr 0x152944c78 <col:16> 'unsigned long *' lvalue Var 0x152941d98 'mask' 'unsigned long *'     |           `-BreakStmt 0x152944d10 <line:38:5>     |-LabelStmt 0x152944f50 <line:42:1, line:43:18> 'out_no_maps'     | `-CallExpr 0x152944f30 <col:2, col:18> 'int'     |   `-ImplicitCastExpr 0x152944f18 <col:2> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x152944ef8 <col:2> 'int ()' Function 0x152944e40 'rcu_read_unlock' 'int ()'     `-CallExpr 0x152945268 <line:46:2, col:18> 'int'       |-ImplicitCastExpr 0x152945250 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x152945210 <col:2> 'int ()' Function 0x152945158 'bitmap_free' 'int ()'       `-ImplicitCastExpr 0x152945290 <col:14> 'unsigned long *' <LValueToRValue>         `-DeclRefExpr 0x152945230 <col:14> 'unsigned long *' lvalue Var 0x152941d98 'mask' 'unsigned long *' ","19562":"`-FunctionDecl 0x14d027628  line:1:12 invalid nfs4_xdr_enc_setclientid 'int (struct rpc_rqst *, int *, struct nfs4_setclientid *)' static   |-ParmVarDecl 0x14d00e248 <col:37, col:54> col:54 used req 'struct rpc_rqst *'   |-ParmVarDecl 0x14d00e318 <col:59, col:67> col:67 invalid p 'int *'   |-ParmVarDecl 0x14d0274e8 <col:70, col:95> col:95 used sc 'struct nfs4_setclientid *'   `-CompoundStmt 0x14d028070 <line:2:1, line:11:1>     |-DeclStmt 0x14d027868 <line:3:2, col:23>     | |-RecordDecl 0x14d0276e8 <col:2, col:9> col:9 struct xdr_stream     | `-VarDecl 0x14d0277e8 <col:2, col:20> col:20 invalid xdr 'struct xdr_stream'     |-DeclStmt 0x14d027aa0 <line:4:2, line:6:3>     | |-RecordDecl 0x14d027880 <line:4:2, col:9> col:9 struct compound_hdr     | `-VarDecl 0x14d027978 <col:2, col:22> col:22 invalid hdr 'struct compound_hdr'     |-CallExpr 0x14d027d00 <line:8:2, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14d027c10 <col:2> 'int ()' Function 0x14d027b58 'xdr_init_encode' 'int ()'     | |-UnaryOperator 0x14d027c50 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x14d027c30 <col:19> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x14d027cc8 <col:24, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x14d027ca0 <col:25, col:30> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14d027c68 <col:25> 'struct rpc_rqst *' lvalue ParmVar 0x14d00e248 'req' 'struct rpc_rqst *'     | `-RecoveryExpr 0x14d027ce0 <col:42> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14d027ea8 <line:9:2, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14d027e18 <col:2> 'int ()' Function 0x14d027d60 'encode_compound_hdr' 'int ()'     | |-UnaryOperator 0x14d027e58 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x14d027e38 <col:23> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x14d027e90 <col:28, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14d027e70 <col:29> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14d028060 <line:10:2, col:36>       `-CallExpr 0x14d028030 <col:9, col:36> '<dependent type>' contains-errors         |-DeclRefExpr 0x14d027fb8 <col:9> 'int ()' Function 0x14d027f00 'encode_setclientid' 'int ()'         |-UnaryOperator 0x14d027ff8 <col:28, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow         | `-RecoveryExpr 0x14d027fd8 <col:29> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x14d028010 <col:34> 'struct nfs4_setclientid *' lvalue ParmVar 0x14d0274e8 'sc' 'struct nfs4_setclientid *' ","19739":"`-FunctionDecl 0x135827c60  col:12 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x135827d60 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x135827d08 <<invalid sloc>> Implicit 902 ","19291":"`-FunctionDecl 0x12a80de38  line:1:1 TEST 'int (int, int)'   |-ParmVarDecl 0x12a80dd58 <col:6> col:6 used IndexBoundsBuilderTest 'int'   |-ParmVarDecl 0x12a80dcd8 <col:30> col:30 CodeWithScopeTypeBounds 'int'   `-CompoundStmt 0x12a826c20 <col:55, line:23:1>     |-DeclStmt 0x12a80e168 <line:2:5, col:45>     | `-VarDecl 0x12a80df50 <col:5, col:44> col:10 testIndex 'int' auto cinit     |   `-CallExpr 0x12a80e148 <col:22, col:44> 'int'     |     `-ImplicitCastExpr 0x12a80e130 <col:22> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x12a80e0e0 <col:22> 'int ()' Function 0x12a80e028 'buildSimpleIndexEntry' 'int ()'     |-DeclStmt 0x12a80e388 <line:4:5, col:42>     | `-VarDecl 0x12a80e198 <col:5, col:41> col:10 expr 'int' auto cinit     |   `-CallExpr 0x12a80e360 <col:17, col:41> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12a80e2e0 <col:17> 'int ()' Function 0x12a80e228 'parseMatchExpression' 'int ()'     |     `-RecoveryExpr 0x12a80e340 <col:38> '<dependent type>' contains-errors lvalue     |-DeclRefExpr 0x12a80e3d0 <line:8:5> 'int' lvalue ParmVar 0x12a80dd58 'IndexBoundsBuilderTest' 'int'     |-DeclRefExpr 0x12a826630 <line:9:5> 'int' lvalue ParmVar 0x12a80dd58 'IndexBoundsBuilderTest' 'int'     `-ImplicitCastExpr 0x12a826868 <line:15:5> 'int (*)()' <FunctionToPointerDecay>       `-DeclRefExpr 0x12a826848 <col:5> 'int ()' Function 0x12a8266d8 'BSONObj' 'int ()' ","19437":"`-FunctionDecl 0x121128238  line:1:1 TEST_F 'int (int, int)'   |-ParmVarDecl 0x121128158 <col:8> col:8 used HttpConnectionManagerConfigTest 'int'   |-ParmVarDecl 0x1211280d8 <col:41> col:41 ServerAppendIfAbsent 'int'   `-CompoundStmt 0x121140b90 <col:63, line:20:1>     |-ImplicitCastExpr 0x121128370 <line:14:3> 'int' <LValueToRValue>     | `-DeclRefExpr 0x121128350 <col:3> 'int' lvalue ParmVar 0x121128158 'HttpConnectionManagerConfigTest' 'int'     `-CallExpr 0x121140a00 <col:31, line:17:69> '<dependent type>' contains-errors       |-DeclRefExpr 0x1211284a0 <line:14:31> 'int ()' Function 0x1211283e8 'config' 'int ()'       |-CallExpr 0x121128708 <col:38, col:84> '<dependent type>' contains-errors       | |-DeclRefExpr 0x1211285a0 <col:38> 'int ()' Function 0x1211284e8 'parseHttpConnectionManagerFromYaml' 'int ()'       | `-RecoveryExpr 0x1211286e8 <col:73> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x121128730 <col:87> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x121128750 <line:15:38> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x121128770 <col:54> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x121128790 <line:16:38> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x1211287b0 <col:78> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x1211287d0 <line:17:38> '<dependent type>' contains-errors lvalue ","19349":"`-FunctionDecl 0x13d03faa8  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x13d03fba8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x13d03fc10 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x13d03fc78 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x13d03fb50 <<invalid sloc>> Implicit 900 ","19647":"`-FunctionDecl 0x12c1281f0  line:1:13 invalid sdhci_sdma_transfer_single_block 'void (int *)' static   |-ParmVarDecl 0x12c128128 <col:46, col:58> col:58 referenced invalid s 'int *'   `-CompoundStmt 0x12c142168 <line:2:1, line:15:1>     |-IfStmt 0x12c141f48 <line:5:5, line:11:5> has_else     | |-BinaryOperator 0x12c128360 <line:5:9, col:21> '<dependent type>' contains-errors '&'     | | |-CXXDependentScopeMemberExpr 0x12c1282c0 <col:9, col:12> '<dependent type>' contains-errors lvalue ->trnmod     | | | `-RecoveryExpr 0x12c1282a0 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12c128340 <col:21> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x12c141988 <col:37, line:8:5>     | | |-CallExpr 0x12c128658 <line:6:9, col:59> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x12c1284e0 <col:9> 'int ()' Function 0x12c128428 'sdbus_read_data' 'int ()'     | | | |-UnaryOperator 0x12c128568 <col:25, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | | `-CXXDependentScopeMemberExpr 0x12c128520 <col:26, col:29> '<dependent type>' contains-errors lvalue ->sdbus     | | | |   `-RecoveryExpr 0x12c128500 <col:26> '<dependent type>' contains-errors lvalue     | | | |-CXXDependentScopeMemberExpr 0x12c1285a0 <col:36, col:39> '<dependent type>' contains-errors lvalue ->fifo_buffer     | | | | `-RecoveryExpr 0x12c128580 <col:36> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x12c128638 <col:52> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x12c141948 <line:7:9, col:74> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12c128770 <col:9> 'int ()' Function 0x12c1286b8 'dma_memory_write' 'int ()'     | |   |-CXXDependentScopeMemberExpr 0x12c1287b0 <col:26, col:29> '<dependent type>' contains-errors lvalue ->dma_as     | |   | `-RecoveryExpr 0x12c128790 <col:26> '<dependent type>' contains-errors lvalue     | |   |-CXXDependentScopeMemberExpr 0x12c141820 <col:37, col:40> '<dependent type>' contains-errors lvalue ->sdmasysad     | |   | `-RecoveryExpr 0x12c141800 <col:37> '<dependent type>' contains-errors lvalue     | |   |-CXXDependentScopeMemberExpr 0x12c141888 <col:51, col:54> '<dependent type>' contains-errors lvalue ->fifo_buffer     | |   | `-RecoveryExpr 0x12c141868 <col:51> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x12c141928 <col:67> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12c141f28 <line:8:12, line:11:5>     |   |-CallExpr 0x12c141c58 <line:9:9, col:73> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12c141a88 <col:9> 'int ()' Function 0x12c1419d0 'dma_memory_read' 'int ()'     |   | |-CXXDependentScopeMemberExpr 0x12c141ac8 <col:25, col:28> '<dependent type>' contains-errors lvalue ->dma_as     |   | | `-RecoveryExpr 0x12c141aa8 <col:25> '<dependent type>' contains-errors lvalue     |   | |-CXXDependentScopeMemberExpr 0x12c141b30 <col:36, col:39> '<dependent type>' contains-errors lvalue ->sdmasysad     |   | | `-RecoveryExpr 0x12c141b10 <col:36> '<dependent type>' contains-errors lvalue     |   | |-CXXDependentScopeMemberExpr 0x12c141b98 <col:50, col:53> '<dependent type>' contains-errors lvalue ->fifo_buffer     |   | | `-RecoveryExpr 0x12c141b78 <col:50> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x12c141c38 <col:66> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x12c141ef0 <line:10:9, col:60> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12c141d78 <col:9> 'int ()' Function 0x12c141cc0 'sdbus_write_data' 'int ()'     |     |-UnaryOperator 0x12c141e00 <col:26, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | `-CXXDependentScopeMemberExpr 0x12c141db8 <col:27, col:30> '<dependent type>' contains-errors lvalue ->sdbus     |     |   `-RecoveryExpr 0x12c141d98 <col:27> '<dependent type>' contains-errors lvalue     |     |-CXXDependentScopeMemberExpr 0x12c141e38 <col:37, col:40> '<dependent type>' contains-errors lvalue ->fifo_buffer     |     | `-RecoveryExpr 0x12c141e18 <col:37> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x12c141ed0 <col:53> '<dependent type>' contains-errors lvalue     |-UnaryOperator 0x12c142008 <line:12:5, col:14> '<dependent type>' contains-errors postfix '--' cannot overflow     | `-CXXDependentScopeMemberExpr 0x12c141fc0 <col:5, col:8> '<dependent type>' contains-errors lvalue ->blkcnt     |   `-RecoveryExpr 0x12c141f98 <col:5> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12c141f78 <col:5> 'int *' lvalue ParmVar 0x12c128128 's' 'int *'     `-CallExpr 0x12c142140 <line:14:5, col:25> '<dependent type>' contains-errors       |-DeclRefExpr 0x12c142100 <col:5> 'int ()' Function 0x12c142048 'sdhci_end_transfer' 'int ()'       `-RecoveryExpr 0x12c142120 <col:24> '<dependent type>' contains-errors lvalue ","19502":"`-FunctionDecl 0x13000dfa8  line:1:17 invalid opj_j2k_write_coc 'int (int *, int, int *, int *)' static   |-ParmVarDecl 0x13000dd28 <col:35, col:46> col:46 referenced invalid p_j2k 'int *'   |-ParmVarDecl 0x13000dda8 <line:2:35, col:46> col:46 referenced invalid p_comp_no 'int'   |-ParmVarDecl 0x13000de28 <line:3:35, col:57> col:57 invalid p_stream 'int *'   |-ParmVarDecl 0x13000dea8 <line:4:35, col:53> col:53 invalid p_manager 'int *'   `-CompoundStmt 0x1279231e0 <line:5:1, line:47:1>     |-CallExpr 0x13000e250 <line:10:5, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13000e1d0 <col:5> 'int ()' Function 0x13000e118 'assert' 'int ()'     | `-BinaryOperator 0x13000e230 <col:12, col:21> 'int' contains-errors '!='     |   |-RecoveryExpr 0x13000e1f0 <col:12> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x13000e210 <col:21> 'int' 0     |-CallExpr 0x13000e2f8 <line:11:5, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13000e278 <col:5> 'int ()' Function 0x13000e118 'assert' 'int ()'     | `-BinaryOperator 0x13000e2d8 <col:12, col:25> 'int' contains-errors '!='     |   |-RecoveryExpr 0x13000e298 <col:12> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x13000e2b8 <col:25> 'int' 0     |-CallExpr 0x13000e3a0 <line:12:5, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13000e320 <col:5> 'int ()' Function 0x13000e118 'assert' 'int ()'     | `-BinaryOperator 0x13000e380 <col:12, col:24> 'int' contains-errors '!='     |   |-RecoveryExpr 0x13000e340 <col:12> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x13000e360 <col:24> 'int' 0     |-IfStmt 0x131009cc8 <line:19:5, line:34:5>     | |-BinaryOperator 0x131009328 <line:19:9, col:56> 'int' contains-errors '>'     | | |-RecoveryExpr 0x131009308 <col:9> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x1310092a0 <col:22, col:56> '<dependent type>' contains-errors lvalue .m_header_tile_data_size     | |   `-CXXDependentScopeMemberExpr 0x131009258 <col:22, col:46> '<dependent type>' contains-errors lvalue .m_encoder     | |     `-CXXDependentScopeMemberExpr 0x131009210 <col:22, col:29> '<dependent type>' contains-errors lvalue ->m_specific_param     | |       `-RecoveryExpr 0x1310091f0 <col:22> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x131009cb0 <col:81, line:34:5>     |   `-IfStmt 0x131009a50 <line:25:9, line:31:9>     |     |-UnaryOperator 0x1310093f8 <line:25:13, col:15> '<dependent type>' contains-errors prefix '!' cannot overflow     |     | `-ImplicitCastExpr 0x1310093e0 <col:15> '<dependent type>' contains-errors <LValueToRValue>     |     |   `-RecoveryExpr 0x1310093c0 <col:15> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x131009a30 <col:37, line:31:9>     |       |-CallExpr 0x131009608 <line:26:13, col:74> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x1310094f0 <col:13> 'int ()' Function 0x131009438 'opj_free' 'int ()'     |       | `-CXXDependentScopeMemberExpr 0x1310095c0 <col:22, col:56> '<dependent type>' contains-errors lvalue .m_header_tile_data     |       |   `-CXXDependentScopeMemberExpr 0x131009578 <col:22, col:46> '<dependent type>' contains-errors lvalue .m_encoder     |       |     `-CXXDependentScopeMemberExpr 0x131009530 <col:22, col:29> '<dependent type>' contains-errors lvalue ->m_specific_param     |       |       `-RecoveryExpr 0x131009510 <col:22> '<dependent type>' contains-errors lvalue     |       `-BinaryOperator 0x131009890 <line:28:13, col:73> '<dependent type>' contains-errors '='     |         |-CXXDependentScopeMemberExpr 0x131009828 <col:13, col:47> '<dependent type>' contains-errors lvalue .m_header_tile_data_size     |         | `-CXXDependentScopeMemberExpr 0x1310097e0 <col:13, col:37> '<dependent type>' contains-errors lvalue .m_encoder     |         |   `-CXXDependentScopeMemberExpr 0x131009798 <col:13, col:20> '<dependent type>' contains-errors lvalue ->m_specific_param     |         |     `-RecoveryExpr 0x131009770 <col:13> '<dependent type>' contains-errors lvalue     |         |       `-DeclRefExpr 0x131009750 <col:13> 'int *' lvalue ParmVar 0x13000dd28 'p_j2k' 'int *'     |         `-IntegerLiteral 0x131009870 <col:73> 'int' 0     `-IfStmt 0x1279231c0 <line:40:5, line:44:5>       |-RecoveryExpr 0x127923190 <line:40:9, line:42:45> '_Bool' contains-errors       `-CompoundStmt 0x1279231b0 <col:57, line:44:5> ","20129":"`-FunctionDecl 0x14b82ab98  line:1:1 ext4_xattr_cache_find 'int (struct inode *, struct ext4_xattr_header *, struct mb_cache_entry **)'   |-ParmVarDecl 0x14b80e248 <col:23, col:37> col:37 used inode 'struct inode *'   |-ParmVarDecl 0x14b82a828 <col:44, col:70> col:70 used header 'struct ext4_xattr_header *'   |-ParmVarDecl 0x14b82aa58 <line:2:9, col:33> col:33 used pce 'struct mb_cache_entry **'   `-CompoundStmt 0x14b8310b0 <line:3:1, line:40:1>     |-DeclStmt 0x14b82adb0 <line:5:2, col:27>     | `-VarDecl 0x14b82ad48 <col:2, col:25> col:25 used ce 'struct mb_cache_entry *'     |-DeclStmt 0x14b82b1a8 <line:6:2, col:59>     | |-RecordDecl 0x14b82adc8 <col:2, col:9> col:9 struct mb_cache     | `-VarDecl 0x14b82af38 <col:2, col:58> col:19 used ext4_mb_cache 'struct mb_cache *' cinit     |   `-ImplicitCastExpr 0x14b82b178 <col:35, col:58> 'struct mb_cache *' <IntegralToPointer>     |     `-CallExpr 0x14b82b138 <col:35, col:58> 'int'     |       |-ImplicitCastExpr 0x14b82b120 <col:35> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14b82b0b0 <col:35> 'int ()' Function 0x14b82aff8 'EXT4_GET_MB_CACHE' 'int ()'     |       `-ImplicitCastExpr 0x14b82b160 <col:53> 'struct inode *' <LValueToRValue>     |         `-DeclRefExpr 0x14b82b0d0 <col:53> 'struct inode *' lvalue ParmVar 0x14b80e248 'inode' 'struct inode *'     |-IfStmt 0x14b82b298 <line:8:2, line:9:10>     | |-UnaryOperator 0x14b82b238 <line:8:6, col:15> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14b82b220 <col:7, col:15> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x14b82b1f8 <col:7, col:15> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x14b82b1c0 <col:7> 'struct ext4_xattr_header *' lvalue ParmVar 0x14b82a828 'header' 'struct ext4_xattr_header *'     | `-ReturnStmt 0x14b82b288 <line:9:3, col:10>     |   `-RecoveryExpr 0x14b82b268 <col:10> '<dependent type>' contains-errors lvalue     |-LabelStmt 0x14b82b790 <line:11:1, line:13:16> 'again'     | `-BinaryOperator 0x14b82b720 <line:12:2, line:13:16> 'struct mb_cache_entry *' contains-errors '='     |   |-DeclRefExpr 0x14b82b470 <line:12:2> 'struct mb_cache_entry *' lvalue Var 0x14b82ad48 'ce' 'struct mb_cache_entry *'     |   `-CallExpr 0x14b82b6e8 <col:7, line:13:16> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14b82b570 <line:12:7> 'int ()' Function 0x14b82b4b8 'mb_cache_entry_find_first' 'int ()'     |     |-DeclRefExpr 0x14b82b590 <col:33> 'struct mb_cache *' lvalue Var 0x14b82af38 'ext4_mb_cache' 'struct mb_cache *'     |     |-CXXDependentScopeMemberExpr 0x14b82b610 <col:48, col:61> '<dependent type>' contains-errors lvalue ->s_bdev     |     | `-RecoveryExpr 0x14b82b5e8 <col:48, col:55> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x14b82b5b0 <col:48> 'struct inode *' lvalue ParmVar 0x14b80e248 'inode' 'struct inode *'     |     `-RecoveryExpr 0x14b82b6c8 <line:13:12> '<dependent type>' contains-errors lvalue     `-WhileStmt 0x14b831090 <line:14:2, line:38:2>       |-ImplicitCastExpr 0x14b82b7d0 <line:14:9> 'struct mb_cache_entry *' <LValueToRValue>       | `-DeclRefExpr 0x14b82b7b0 <col:9> 'struct mb_cache_entry *' lvalue Var 0x14b82ad48 'ce' 'struct mb_cache_entry *'       `-CompoundStmt 0x14b831058 <col:13, line:38:2>         |-DeclStmt 0x14b82dde8 <line:15:3, col:25>         | |-RecordDecl 0x14b82dc00 <col:3, col:10> col:10 struct buffer_head         | `-VarDecl 0x14b82dd68 <col:3, col:23> col:23 used bh 'struct buffer_head *'         |-IfStmt 0x14b82e2d8 <line:17:3, line:21:3>         | |-CallExpr 0x14b82df38 <line:17:7, col:16> 'int'         | | |-ImplicitCastExpr 0x14b82df20 <col:7> 'int (*)()' <FunctionToPointerDecay>         | | | `-DeclRefExpr 0x14b82dee0 <col:7> 'int ()' Function 0x14b82de28 'IS_ERR' 'int ()'         | | `-ImplicitCastExpr 0x14b82df60 <col:14> 'struct mb_cache_entry *' <LValueToRValue>         | |   `-DeclRefExpr 0x14b82df00 <col:14> 'struct mb_cache_entry *' lvalue Var 0x14b82ad48 'ce' 'struct mb_cache_entry *'         | `-CompoundStmt 0x14b82e2b8 <col:19, line:21:3>         |   |-IfStmt 0x14b82e290 <line:18:4, line:19:10>         |   | |-BinaryOperator 0x14b82e258 <line:18:8, col:24> 'int' contains-errors '=='         |   | | |-CallExpr 0x14b82e1c8 <col:8, col:18> 'int'         |   | | | |-ImplicitCastExpr 0x14b82e1b0 <col:8> 'int (*)()' <FunctionToPointerDecay>         |   | | | | `-DeclRefExpr 0x14b82e058 <col:8> 'int ()' Function 0x14b82dfa0 'PTR_ERR' 'int ()'         |   | | | `-ImplicitCastExpr 0x14b82e1f0 <col:16> 'struct mb_cache_entry *' <LValueToRValue>         |   | | |   `-DeclRefExpr 0x14b82e078 <col:16> 'struct mb_cache_entry *' lvalue Var 0x14b82ad48 'ce' 'struct mb_cache_entry *'         |   | | `-UnaryOperator 0x14b82e240 <col:23, col:24> '<dependent type>' contains-errors prefix '-' cannot overflow         |   | |   `-ImplicitCastExpr 0x14b82e228 <col:24> '<dependent type>' contains-errors <LValueToRValue>         |   | |     `-RecoveryExpr 0x14b82e208 <col:24> '<dependent type>' contains-errors lvalue         |   | `-GotoStmt 0x14b82e278 <line:19:5, col:10> 'again' 0x14b82b740         |   `-BreakStmt 0x14b82e2b0 <line:20:4>         |-BinaryOperator 0x14b82e508 <line:22:3, col:41> 'struct buffer_head *' contains-errors '='         | |-DeclRefExpr 0x14b82e2f8 <col:3> 'struct buffer_head *' lvalue Var 0x14b82dd68 'bh' 'struct buffer_head *'         | `-CallExpr 0x14b82e4d8 <col:8, col:41> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x14b82e3f8 <col:8> 'int ()' Function 0x14b82e340 'sb_bread' 'int ()'         |   |-RecoveryExpr 0x14b82e450 <col:17, col:24> '<dependent type>' contains-errors lvalue         |   | `-DeclRefExpr 0x14b82e418 <col:17> 'struct inode *' lvalue ParmVar 0x14b80e248 'inode' 'struct inode *'         |   `-RecoveryExpr 0x14b82e4b0 <col:30, col:34> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x14b82e478 <col:30> 'struct mb_cache_entry *' lvalue Var 0x14b82ad48 'ce' 'struct mb_cache_entry *'         |-IfStmt 0x14b830cc8 <line:23:3, line:35:3> has_else         | |-UnaryOperator 0x14b82e560 <line:23:7, col:8> 'int' prefix '!' cannot overflow         | | `-ImplicitCastExpr 0x14b82e548 <col:8> 'struct buffer_head *' <LValueToRValue>         | |   `-DeclRefExpr 0x14b82e528 <col:8> 'struct buffer_head *' lvalue Var 0x14b82dd68 'bh' 'struct buffer_head *'         | |-CompoundStmt 0x14b82e7d8 <col:12, line:26:3>         | | `-CallExpr 0x14b82e770 <line:24:4, line:25:34> 'int' contains-errors         | |   |-ImplicitCastExpr 0x14b82e758 <line:24:4> 'int (*)()' <FunctionToPointerDecay>         | |   | `-DeclRefExpr 0x14b82e658 <col:4> 'int ()' Function 0x14b82e5a0 'EXT4_ERROR_INODE' 'int ()'         | |   |-ImplicitCastExpr 0x14b82e7a8 <col:21> 'struct inode *' <LValueToRValue>         | |   | `-DeclRefExpr 0x14b82e678 <col:21> 'struct inode *' lvalue ParmVar 0x14b80e248 'inode' 'struct inode *'         | |   |-ImplicitCastExpr 0x14b82e7c0 <col:28> 'char *' <ArrayToPointerDecay>         | |   | `-StringLiteral 0x14b82e698 <col:28> 'char[4]' lvalue \"STR\"         | |   `-CStyleCastExpr 0x14b82e730 <line:25:7, col:27> 'unsigned long' contains-errors <Dependent>         | |     `-RecoveryExpr 0x14b82e6f0 <col:23, col:27> '<dependent type>' contains-errors lvalue         | |       `-DeclRefExpr 0x14b82e6b8 <col:23> 'struct mb_cache_entry *' lvalue Var 0x14b82ad48 'ce' 'struct mb_cache_entry *'         | `-IfStmt 0x14b830c98 <line:26:10, line:35:3> has_else         |   |-RecoveryExpr 0x14b82eab8 <line:26:14, line:27:5> '_Bool' contains-errors         |   |-CompoundStmt 0x14b8308e8 <col:30, line:32:3>         |   `-IfStmt 0x14b830c78 <col:10, line:35:3>         |     |-BinaryOperator 0x14b830b30 <line:32:14, col:50> 'int' '=='         |     | |-CallExpr 0x14b830ac8 <col:14, col:45> 'int'         |     | | |-ImplicitCastExpr 0x14b830ab0 <col:14> 'int (*)()' <FunctionToPointerDecay>         |     | | | `-DeclRefExpr 0x14b8309d8 <col:14> 'int ()' Function 0x14b830920 'ext4_xattr_cmp' 'int ()'         |     | | |-ImplicitCastExpr 0x14b830af8 <col:29> 'struct ext4_xattr_header *' <LValueToRValue>         |     | | | `-DeclRefExpr 0x14b8309f8 <col:29> 'struct ext4_xattr_header *' lvalue ParmVar 0x14b82a828 'header' 'struct ext4_xattr_header *'         |     | | `-CallExpr 0x14b830a70 <col:37, col:44> 'int'         |     | |   |-ImplicitCastExpr 0x14b830a58 <col:37> 'int (*)()' <FunctionToPointerDecay>         |     | |   | `-DeclRefExpr 0x14b830a18 <col:37> 'int ()' Function 0x14b82e918 'BHDR' 'int ()'         |     | |   `-ImplicitCastExpr 0x14b830a98 <col:42> 'struct buffer_head *' <LValueToRValue>         |     | |     `-DeclRefExpr 0x14b830a38 <col:42> 'struct buffer_head *' lvalue Var 0x14b82dd68 'bh' 'struct buffer_head *'         |     | `-IntegerLiteral 0x14b830b10 <col:50> 'int' 0         |     `-CompoundStmt 0x14b830c58 <col:53, line:35:3>         |       |-BinaryOperator 0x14b830bd8 <line:33:4, col:11> 'struct mb_cache_entry *' '='         |       | |-UnaryOperator 0x14b830b88 <col:4, col:5> 'struct mb_cache_entry *' lvalue prefix '*' cannot overflow         |       | | `-ImplicitCastExpr 0x14b830b70 <col:5> 'struct mb_cache_entry **' <LValueToRValue>         |       | |   `-DeclRefExpr 0x14b830b50 <col:5> 'struct mb_cache_entry **' lvalue ParmVar 0x14b82aa58 'pce' 'struct mb_cache_entry **'         |       | `-ImplicitCastExpr 0x14b830bc0 <col:11> 'struct mb_cache_entry *' <LValueToRValue>         |       |   `-DeclRefExpr 0x14b830ba0 <col:11> 'struct mb_cache_entry *' lvalue Var 0x14b82ad48 'ce' 'struct mb_cache_entry *'         |       `-ReturnStmt 0x14b830c48 <line:34:4, col:11>         |         `-ImplicitCastExpr 0x14b830c30 <col:11> 'int' <PointerToIntegral>         |           `-ImplicitCastExpr 0x14b830c18 <col:11> 'struct buffer_head *' <LValueToRValue>         |             `-DeclRefExpr 0x14b830bf8 <col:11> 'struct buffer_head *' lvalue Var 0x14b82dd68 'bh' 'struct buffer_head *'         `-CallExpr 0x14b830e30 <line:36:3, col:12> 'int'           |-ImplicitCastExpr 0x14b830e18 <col:3> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x14b830dd8 <col:3> 'int ()' Function 0x14b830d20 'brelse' 'int ()'           `-ImplicitCastExpr 0x14b830e58 <col:10> 'struct buffer_head *' <LValueToRValue>             `-DeclRefExpr 0x14b830df8 <col:10> 'struct buffer_head *' lvalue Var 0x14b82dd68 'bh' 'struct buffer_head *' ","20161":"`-FunctionDecl 0x13300e350  line:1:13 ndpi_reset_packet_line_info 'void (struct ndpi_packet_struct *)' static   |-ParmVarDecl 0x13300e248 <col:41, col:68> col:68 used packet 'struct ndpi_packet_struct *'   `-CompoundStmt 0x132925e10 <col:76, line:13:1> ","20139":"`-FunctionDecl 0x149928938  line:1:15 invalid do_tsel_act 'int ()' static   `-CompoundStmt 0x149942650 <line:2:1, line:41:1>     `-ForStmt 0x149942618 <line:5:2, line:39:2>       |-<<<NULL>>>       |-<<<NULL>>>       |-BinaryOperator 0x149928ac8 <line:5:12, col:14> 'int' contains-errors '<'       | |-RecoveryExpr 0x149928a88 <col:12> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x149928aa8 <col:14> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x149928b38 <col:28, col:29> '<dependent type>' contains-errors postfix '++' cannot overflow       | `-RecoveryExpr 0x149928b18 <col:28> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x149942600 <col:33, line:39:2>         `-SwitchStmt 0x149928ba0 <line:6:3, line:38:3>           |-RecoveryExpr 0x149928b80 <line:6:11, col:24> 'int' contains-errors           `-CompoundStmt 0x1499425c8 <col:34, line:38:3>             |-IfStmt 0x149942368 <line:14:4, line:22:4>             | |-RecoveryExpr 0x149928f38 <line:14:8, col:13> '_Bool' contains-errors             | `-CompoundStmt 0x149942350 <col:27, line:22:4>             |   `-IfStmt 0x149942320 <line:17:5, line:21:5> has_else             |     |-RecoveryExpr 0x1499420f8 <line:17:9> '_Bool' contains-errors             |     |-CompoundStmt 0x1499422a0 <col:27, line:19:5>             |     `-CompoundStmt 0x149942310 <col:12, line:21:5>             |-BreakStmt 0x1499423a8 <line:25:4>             |-BreakStmt 0x149942510 <line:30:4>             |-BreakStmt 0x149942598 <line:35:4>             `-DefaultStmt 0x1499425a8 <line:36:3, line:37:4>               `-BreakStmt 0x1499425a0 <col:4> ","19797":"`-FunctionDecl 0x11f9419a0  col:3 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x11f941aa0 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x11f941a48 <<invalid sloc>> Implicit 873 ","19934":"`-FunctionDecl 0x13e00ddc8  line:1:7 invalid qemu_mac_strdup_printf 'char *(const int *)'   |-ParmVarDecl 0x13e00dcf0 <col:30, col:45> col:45 invalid macaddr 'const int *'   `-CompoundStmt 0x13e00e388 <line:2:1, line:6:1>     `-ReturnStmt 0x13e00e378 <line:3:5, line:5:62>       `-CallExpr 0x13e00e320 <line:3:12, line:5:62> '<dependent type>' contains-errors         |-DeclRefExpr 0x13e00dfd0 <line:3:12> 'int ()' Function 0x13e00df18 'g_strdup_printf' 'int ()'         |-StringLiteral 0x13e00e030 <col:28> 'char[4]' lvalue \"STR\"         |-ArraySubscriptExpr 0x13e00e0a8 <line:4:28, col:37> '<dependent type>' contains-errors lvalue         | |-ImplicitCastExpr 0x13e00e090 <col:28> '<dependent type>' contains-errors <LValueToRValue>         | | `-RecoveryExpr 0x13e00e050 <col:28> '<dependent type>' contains-errors lvalue         | `-IntegerLiteral 0x13e00e070 <col:36> 'int' 0         |-ArraySubscriptExpr 0x13e00e120 <col:40, col:49> '<dependent type>' contains-errors lvalue         | |-ImplicitCastExpr 0x13e00e108 <col:40> '<dependent type>' contains-errors <LValueToRValue>         | | `-RecoveryExpr 0x13e00e0c8 <col:40> '<dependent type>' contains-errors lvalue         | `-IntegerLiteral 0x13e00e0e8 <col:48> 'int' 1         |-ArraySubscriptExpr 0x13e00e198 <col:52, col:61> '<dependent type>' contains-errors lvalue         | |-ImplicitCastExpr 0x13e00e180 <col:52> '<dependent type>' contains-errors <LValueToRValue>         | | `-RecoveryExpr 0x13e00e140 <col:52> '<dependent type>' contains-errors lvalue         | `-IntegerLiteral 0x13e00e160 <col:60> 'int' 2         |-ArraySubscriptExpr 0x13e00e210 <line:5:28, col:37> '<dependent type>' contains-errors lvalue         | |-ImplicitCastExpr 0x13e00e1f8 <col:28> '<dependent type>' contains-errors <LValueToRValue>         | | `-RecoveryExpr 0x13e00e1b8 <col:28> '<dependent type>' contains-errors lvalue         | `-IntegerLiteral 0x13e00e1d8 <col:36> 'int' 3         |-ArraySubscriptExpr 0x13e00e288 <col:40, col:49> '<dependent type>' contains-errors lvalue         | |-ImplicitCastExpr 0x13e00e270 <col:40> '<dependent type>' contains-errors <LValueToRValue>         | | `-RecoveryExpr 0x13e00e230 <col:40> '<dependent type>' contains-errors lvalue         | `-IntegerLiteral 0x13e00e250 <col:48> 'int' 4         `-ArraySubscriptExpr 0x13e00e300 <col:52, col:61> '<dependent type>' contains-errors lvalue           |-ImplicitCastExpr 0x13e00e2e8 <col:52> '<dependent type>' contains-errors <LValueToRValue>           | `-RecoveryExpr 0x13e00e2a8 <col:52> '<dependent type>' contains-errors lvalue           `-IntegerLiteral 0x13e00e2c8 <col:60> 'int' 5 ","19216":"`-FunctionDecl 0x125827438  line:1:11 invalid bits 'int (struct state *, int)'   |-ParmVarDecl 0x12580e268 <col:16, col:30> col:30 used s 'struct state *'   |-ParmVarDecl 0x12580e2e8 <col:33, col:37> col:37 used need 'int'   `-CompoundStmt 0x125827f28 <line:2:1, line:19:1>     |-RecoveryExpr 0x125827520 <line:3:2> '<dependent type>' contains-errors lvalue     |-WhileStmt 0x125827c58 <line:7:5, line:11:5>     | |-BinaryOperator 0x125827620 <line:7:12, col:24> 'int' contains-errors '<'     | | |-RecoveryExpr 0x1258275d8 <col:12, col:15> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x1258275a0 <col:12> 'struct state *' lvalue ParmVar 0x12580e268 's' 'struct state *'     | | `-DeclRefExpr 0x125827600 <col:24> 'int' lvalue ParmVar 0x12580e2e8 'need' 'int'     | `-CompoundStmt 0x125827c38 <col:30, line:11:5>     |   |-IfStmt 0x1258279a8 <line:8:9, col:52>     |   | |-BinaryOperator 0x125827700 <col:13, col:28> 'int' contains-errors '=='     |   | | |-RecoveryExpr 0x125827678 <col:13, col:16> '<dependent type>' contains-errors lvalue     |   | | | `-DeclRefExpr 0x125827640 <col:13> 'struct state *' lvalue ParmVar 0x12580e268 's' 'struct state *'     |   | | `-RecoveryExpr 0x1258276d8 <col:25, col:28> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x1258276a0 <col:25> 'struct state *' lvalue ParmVar 0x12580e268 's' 'struct state *'     |   | `-CallExpr 0x125827978 <col:35, col:52> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x1258278d8 <col:35> 'int ()' Function 0x1258277c8 'longjmp' 'int ()'     |   |   |-RecoveryExpr 0x125827930 <col:43, col:46> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x1258278f8 <col:43> 'struct state *' lvalue ParmVar 0x12580e268 's' 'struct state *'     |   |   `-IntegerLiteral 0x125827958 <col:51> 'int' 1     |   `-CompoundAssignOperator 0x125827c08 <line:10:9, col:22> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |     |-RecoveryExpr 0x125827bc0 <col:9, col:12> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x125827b88 <col:9> 'struct state *' lvalue ParmVar 0x12580e268 's' 'struct state *'     |     `-IntegerLiteral 0x125827be8 <col:22> 'int' 8     `-CompoundAssignOperator 0x125827de8 <line:15:5, col:18> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'       |-RecoveryExpr 0x125827da0 <col:5, col:8> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x125827d68 <col:5> 'struct state *' lvalue ParmVar 0x12580e268 's' 'struct state *'       `-DeclRefExpr 0x125827dc8 <col:18> 'int' lvalue ParmVar 0x12580e2e8 'need' 'int' ","19915":"`-FunctionDecl 0x1438d79f8  line:1:1 invalid ippValidateAttributes 'int (int *)'   |-ParmVarDecl 0x1438d7928 <col:23, col:30> col:30 invalid ipp 'int *'   `-CompoundStmt 0x1438f10d8 <line:2:1, line:14:1>     |-IfStmt 0x1438d7b60 <line:6:3, line:7:14>     | |-UnaryOperator 0x1438d7af8 <line:6:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1438d7ae0 <col:8> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x1438d7ac0 <col:8> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1438d7b50 <line:7:5, col:14>     |   `-ParenExpr 0x1438d7b30 <col:12, col:14> 'int'     |     `-IntegerLiteral 0x1438d7b10 <col:13> 'int' 1     |-ForStmt 0x1438f1050 <line:9:3, line:11:16>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-RecoveryExpr 0x1438d7c38 <line:9:27> '<dependent type>' contains-errors lvalue     | |-BinaryOperator 0x1438d7d78 <col:33, col:46> '<dependent type>' contains-errors '='     | | |-RecoveryExpr 0x1438d7cf0 <col:33> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x1438d7d30 <col:40, col:46> '<dependent type>' contains-errors lvalue ->next     | |   `-RecoveryExpr 0x1438d7d10 <col:40> '<dependent type>' contains-errors lvalue     | `-IfStmt 0x1438f1030 <line:10:5, line:11:16>     |   |-UnaryOperator 0x1438d7fb0 <line:10:9, col:35> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | `-CallExpr 0x1438d7f88 <col:10, col:35> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x1438d7ef0 <col:10> 'int ()' Function 0x1438d7e38 'ippValidateAttribute' 'int ()'     |   |   `-RecoveryExpr 0x1438d7f68 <col:31> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x1438f1020 <line:11:7, col:16>     |     `-ParenExpr 0x1438f1000 <col:14, col:16> 'int'     |       `-IntegerLiteral 0x1438d7fc8 <col:15> 'int' 0     `-ReturnStmt 0x1438f10c8 <line:13:3, col:12>       `-ParenExpr 0x1438f10a8 <col:10, col:12> 'int'         `-IntegerLiteral 0x1438f1088 <col:11> 'int' 1 ","19418":"`-FunctionDecl 0x13f827708  line:1:9 invalid PacketTunnelPktSetup 'int *(int *, int *, int *, int *, int, enum DecodeTunnelProto, int *)'   |-ParmVarDecl 0x13f80dd28 <col:30, col:42> col:42 invalid tv 'int *'   |-ParmVarDecl 0x13f80dda8 <col:46, col:64> col:64 invalid dtv 'int *'   |-ParmVarDecl 0x13f80de28 <col:69, col:77> col:77 invalid parent 'int *'   |-ParmVarDecl 0x13f80dea8 <line:2:30, col:39> col:39 invalid pkt 'int *'   |-ParmVarDecl 0x13f80df28 <col:44, col:53> col:53 invalid len 'int'   |-ParmVarDecl 0x13f8274e8 <col:58, col:81> col:81 invalid proto 'enum DecodeTunnelProto'   |-ParmVarDecl 0x13f827568 <line:3:30, col:43> col:43 invalid pq 'int *'   `-CompoundStmt 0x13f1241d8 <line:4:1, line:53:1>     |-DeclStmt 0x13f827868 <line:5:5, col:12>     | `-VarDecl 0x13f827800 <col:5, col:9> col:9 used ret 'int'     |-CallExpr 0x13f827a48 <line:7:5, col:13> 'int'     | `-ImplicitCastExpr 0x13f827a30 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x13f8279e0 <col:5> 'int ()' Function 0x13f827928 'SCEnter' 'int ()'     |-IfStmt 0x13f827fc8 <line:11:5, line:13:5>     | |-CallExpr 0x13f827d90 <line:11:9, col:27> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x13f827c98 <col:9> 'int ()' Function 0x13f827be0 'unlikely' 'int ()'     | | `-BinaryOperator 0x13f827d70 <col:18, col:23> 'int' contains-errors '=='     | |   |-RecoveryExpr 0x13f827d30 <col:18> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x13f827d50 <col:23> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13f827fb0 <col:30, line:13:5>     |   `-CallExpr 0x13f827f80 <line:12:9, col:32> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x13f827e98 <col:9> 'int ()' Function 0x13f827de0 'SCReturnPtr' 'int ()'     |     |-RecoveryExpr 0x13f827f60 <col:21> '<dependent type>' contains-errors lvalue     |     `-StringLiteral 0x13f827f10 <col:27> 'char[4]' lvalue \"STR\"     |-CallExpr 0x13f828198 <line:16:5, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13f8280c8 <col:5> 'int ()' Function 0x13f828010 'PacketCopyData' 'int ()'     | |-RecoveryExpr 0x13f828178 <col:20> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x13f828100 <col:23> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x13f828120 <col:28> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13f123ec8 <line:35:5, line:41:5>     | |-RecoveryExpr 0x13f123c38 <line:35:9, col:36> '_Bool' contains-errors     | `-CompoundStmt 0x13f123eb8 <col:39, line:41:5>     |-CallExpr 0x13f123f28 <line:45:5, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13f123ee8 <col:5> 'int ()' Function 0x13f123780 'SET_TUNNEL_PKT' 'int ()'     | `-RecoveryExpr 0x13f123f08 <col:20> '<dependent type>' contains-errors lvalue     `-CallExpr 0x13f124170 <line:51:5, col:44> '<dependent type>' contains-errors       |-DeclRefExpr 0x13f124130 <col:5> 'int ()' Function 0x13f124078 'DecodeSetNoPayloadInspectionFlag' 'int ()'       `-RecoveryExpr 0x13f124150 <col:38> '<dependent type>' contains-errors lvalue ","19983":"`-FunctionDecl 0x12802f368  line:1:5 invalid file_read_actor 'int (int *, struct page *, unsigned long, unsigned long)'   |-ParmVarDecl 0x128011928 <col:21, col:40> col:40 referenced invalid desc 'int *'   |-ParmVarDecl 0x128011f18 <col:46, col:59> col:59 used page 'struct page *'   |-ParmVarDecl 0x128011f98 <line:2:4, col:18> col:18 used offset 'unsigned long'   |-ParmVarDecl 0x12802f218 <col:26, col:40> col:40 used size 'unsigned long'   `-CompoundStmt 0x11f91cad0 <line:3:1, line:34:1>     |-DeclStmt 0x12802f4b0 <line:4:2, col:13>     | `-VarDecl 0x12802f448 <col:2, col:8> col:8 used kaddr 'char *'     |-DeclStmt 0x12802f648 <line:5:2, col:41>     | |-VarDecl 0x12802f4e0 <col:2, col:16> col:16 used left 'unsigned long'     | `-VarDecl 0x12802f560 <col:2, col:36> col:22 used count 'unsigned long' cinit     |   `-CXXDependentScopeMemberExpr 0x12802f5e8 <col:30, col:36> '<dependent type>' contains-errors lvalue ->count     |     `-RecoveryExpr 0x12802f5c8 <col:30> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12802f768 <line:7:2, line:8:10>     | |-BinaryOperator 0x12802f6d0 <line:7:6, col:13> 'int' contains-errors '>'     | | |-ImplicitCastExpr 0x12802f6a0 <col:6> 'unsigned long' <LValueToRValue>     | | | `-DeclRefExpr 0x12802f660 <col:6> 'unsigned long' lvalue ParmVar 0x12802f218 'size' 'unsigned long'     | | `-ImplicitCastExpr 0x12802f6b8 <col:13> 'unsigned long' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x12802f680 <col:13> 'unsigned long' contains-errors lvalue Var 0x12802f560 'count' 'unsigned long'     | `-BinaryOperator 0x12802f748 <line:8:3, col:10> 'unsigned long' contains-errors '='     |   |-DeclRefExpr 0x12802f6f0 <col:3> 'unsigned long' lvalue ParmVar 0x12802f218 'size' 'unsigned long'     |   `-ImplicitCastExpr 0x12802f730 <col:10> 'unsigned long' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x12802f710 <col:10> 'unsigned long' contains-errors lvalue Var 0x12802f560 'count' 'unsigned long'     |-IfStmt 0x11f91be30 <line:11:2, line:18:2>     | |-UnaryOperator 0x12802fa00 <line:11:6, col:51> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x12802f9d0 <col:7, col:51> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12802f8e0 <col:7> 'int ()' Function 0x12802f828 'fault_in_pages_writeable' 'int ()'     | |   |-CXXDependentScopeMemberExpr 0x12802f968 <col:32, col:42> '<dependent type>' contains-errors lvalue .buf     | |   | `-CXXDependentScopeMemberExpr 0x12802f920 <col:32, col:38> '<dependent type>' contains-errors lvalue ->arg     | |   |   `-RecoveryExpr 0x12802f900 <col:32> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12802f9b0 <col:47> 'unsigned long' lvalue ParmVar 0x12802f218 'size' 'unsigned long'     | `-CompoundStmt 0x11f91be00 <col:54, line:18:2>     |   |-BinaryOperator 0x12802fc10 <line:12:3, col:37> 'char *' contains-errors '='     |   | |-DeclRefExpr 0x12802fa18 <col:3> 'char *' lvalue Var 0x12802f448 'kaddr' 'char *'     |   | `-CallExpr 0x12802fbe0 <col:11, col:37> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x12802fb18 <col:11> 'int ()' Function 0x12802fa60 'kmap_atomic' 'int ()'     |   |   |-DeclRefExpr 0x12802fb38 <col:23> 'struct page *' lvalue ParmVar 0x128011f18 'page' 'struct page *'     |   |   `-RecoveryExpr 0x12802fbc0 <col:29> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x12802fee8 <line:13:3, line:14:27> 'unsigned long' contains-errors '='     |   | |-DeclRefExpr 0x12802fc30 <line:13:3> 'unsigned long' lvalue Var 0x12802f4e0 'left' 'unsigned long'     |   | `-CallExpr 0x12802feb0 <col:10, line:14:27> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x12802fd30 <line:13:10> 'int ()' Function 0x12802fc78 '__copy_to_user_inatomic' 'int ()'     |   |   |-CXXDependentScopeMemberExpr 0x12802fdb8 <col:34, col:44> '<dependent type>' contains-errors lvalue .buf     |   |   | `-CXXDependentScopeMemberExpr 0x12802fd70 <col:34, col:40> '<dependent type>' contains-errors lvalue ->arg     |   |   |   `-RecoveryExpr 0x12802fd50 <col:34> '<dependent type>' contains-errors lvalue     |   |   |-BinaryOperator 0x12802fe70 <line:14:7, col:15> 'char *' '+'     |   |   | |-ImplicitCastExpr 0x12802fe40 <col:7> 'char *' <LValueToRValue>     |   |   | | `-DeclRefExpr 0x12802fe00 <col:7> 'char *' lvalue Var 0x12802f448 'kaddr' 'char *'     |   |   | `-ImplicitCastExpr 0x12802fe58 <col:15> 'unsigned long' <LValueToRValue>     |   |   |   `-DeclRefExpr 0x12802fe20 <col:15> 'unsigned long' lvalue ParmVar 0x128011f98 'offset' 'unsigned long'     |   |   `-DeclRefExpr 0x12802fe90 <col:23> 'unsigned long' lvalue ParmVar 0x12802f218 'size' 'unsigned long'     |   |-CallExpr 0x128030090 <line:15:3, col:32> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12802ffe8 <col:3> 'int ()' Function 0x12802ff30 'kunmap_atomic' 'int ()'     |   | |-DeclRefExpr 0x128030008 <col:17> 'char *' lvalue Var 0x12802f448 'kaddr' 'char *'     |   | `-RecoveryExpr 0x128030070 <col:24> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x1280301b8 <line:16:3, line:17:9>     |     |-BinaryOperator 0x128030130 <line:16:7, col:15> 'int' '=='     |     | |-ImplicitCastExpr 0x128030100 <col:7> 'unsigned long' <LValueToRValue>     |     | | `-DeclRefExpr 0x1280300c0 <col:7> 'unsigned long' lvalue Var 0x12802f4e0 'left' 'unsigned long'     |     | `-ImplicitCastExpr 0x128030118 <col:15> 'unsigned long' <IntegralCast>     |     |   `-IntegerLiteral 0x1280300e0 <col:15> 'int' 0     |     `-GotoStmt 0x1280301a0 <line:17:4, col:9> 'success' 0x128030150     |-BinaryOperator 0x11f91c030 <line:21:2, col:19> 'char *' '='     | |-DeclRefExpr 0x11f91be50 <col:2> 'char *' lvalue Var 0x12802f448 'kaddr' 'char *'     | `-ImplicitCastExpr 0x11f91c018 <col:10, col:19> 'char *' <IntegralToPointer>     |   `-CallExpr 0x11f91bfd8 <col:10, col:19> 'int'     |     |-ImplicitCastExpr 0x11f91bfc0 <col:10> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x11f91bf50 <col:10> 'int ()' Function 0x11f91be98 'kmap' 'int ()'     |     `-ImplicitCastExpr 0x11f91c000 <col:15> 'struct page *' <LValueToRValue>     |       `-DeclRefExpr 0x11f91bf70 <col:15> 'struct page *' lvalue ParmVar 0x128011f18 'page' 'struct page *'     |-BinaryOperator 0x11f91c308 <line:22:2, col:59> 'unsigned long' contains-errors '='     | |-DeclRefExpr 0x11f91c050 <col:2> 'unsigned long' lvalue Var 0x12802f4e0 'left' 'unsigned long'     | `-CallExpr 0x11f91c2d0 <col:9, col:59> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x11f91c150 <col:9> 'int ()' Function 0x11f91c098 '__copy_to_user' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x11f91c1d8 <col:24, col:34> '<dependent type>' contains-errors lvalue .buf     |   | `-CXXDependentScopeMemberExpr 0x11f91c190 <col:24, col:30> '<dependent type>' contains-errors lvalue ->arg     |   |   `-RecoveryExpr 0x11f91c170 <col:24> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x11f91c290 <col:39, col:47> 'char *' '+'     |   | |-ImplicitCastExpr 0x11f91c260 <col:39> 'char *' <LValueToRValue>     |   | | `-DeclRefExpr 0x11f91c220 <col:39> 'char *' lvalue Var 0x12802f448 'kaddr' 'char *'     |   | `-ImplicitCastExpr 0x11f91c278 <col:47> 'unsigned long' <LValueToRValue>     |   |   `-DeclRefExpr 0x11f91c240 <col:47> 'unsigned long' lvalue ParmVar 0x128011f98 'offset' 'unsigned long'     |   `-DeclRefExpr 0x11f91c2b0 <col:55> 'unsigned long' lvalue ParmVar 0x12802f218 'size' 'unsigned long'     |-CallExpr 0x11f91c460 <line:23:2, col:13> 'int'     | |-ImplicitCastExpr 0x11f91c448 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x11f91c408 <col:2> 'int ()' Function 0x11f91c350 'kunmap' 'int ()'     | `-ImplicitCastExpr 0x11f91c488 <col:9> 'struct page *' <LValueToRValue>     |   `-DeclRefExpr 0x11f91c428 <col:9> 'struct page *' lvalue ParmVar 0x128011f18 'page' 'struct page *'     |-IfStmt 0x11f91c6e8 <line:25:2, line:28:2>     | |-ImplicitCastExpr 0x11f91c4c0 <line:25:6> 'unsigned long' <LValueToRValue>     | | `-DeclRefExpr 0x11f91c4a0 <col:6> 'unsigned long' lvalue Var 0x12802f4e0 'left' 'unsigned long'     | `-CompoundStmt 0x11f91c6c8 <col:12, line:28:2>     |   |-CompoundAssignOperator 0x11f91c530 <line:26:3, col:11> 'unsigned long' '-=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'     |   | |-DeclRefExpr 0x11f91c4d8 <col:3> 'unsigned long' lvalue ParmVar 0x12802f218 'size' 'unsigned long'     |   | `-ImplicitCastExpr 0x11f91c518 <col:11> 'unsigned long' <LValueToRValue>     |   |   `-DeclRefExpr 0x11f91c4f8 <col:11> 'unsigned long' lvalue Var 0x12802f4e0 'left' 'unsigned long'     |   `-BinaryOperator 0x11f91c6a8 <line:27:3, col:18> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x11f91c5a8 <col:3, col:9> '<dependent type>' contains-errors lvalue ->error     |     | `-RecoveryExpr 0x11f91c580 <col:3> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x11f91c560 <col:3> 'int *' lvalue ParmVar 0x128011928 'desc' 'int *'     |     `-UnaryOperator 0x11f91c690 <col:17, col:18> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x11f91c678 <col:18> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x11f91c658 <col:18> '<dependent type>' contains-errors lvalue     |-LabelStmt 0x11f91c848 <line:29:1, line:30:24> 'success'     | `-BinaryOperator 0x11f91c828 <col:2, col:24> '<dependent type>' contains-errors '='     |   |-CXXDependentScopeMemberExpr 0x11f91c750 <col:2, col:8> '<dependent type>' contains-errors lvalue ->count     |   | `-RecoveryExpr 0x11f91c728 <col:2> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x11f91c708 <col:2> 'int *' lvalue ParmVar 0x128011928 'desc' 'int *'     |   `-BinaryOperator 0x11f91c808 <col:16, col:24> 'unsigned long' contains-errors '-'     |     |-ImplicitCastExpr 0x11f91c7d8 <col:16> 'unsigned long' contains-errors <LValueToRValue>     |     | `-DeclRefExpr 0x11f91c798 <col:16> 'unsigned long' contains-errors lvalue Var 0x12802f560 'count' 'unsigned long'     |     `-ImplicitCastExpr 0x11f91c7f0 <col:24> 'unsigned long' <LValueToRValue>     |       `-DeclRefExpr 0x11f91c7b8 <col:24> 'unsigned long' lvalue ParmVar 0x12802f218 'size' 'unsigned long'     |-CompoundAssignOperator 0x11f91c918 <line:31:2, col:19> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-CXXDependentScopeMemberExpr 0x11f91c8b0 <col:2, col:8> '<dependent type>' contains-errors lvalue ->written     | | `-RecoveryExpr 0x11f91c888 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x11f91c868 <col:2> 'int *' lvalue ParmVar 0x128011928 'desc' 'int *'     | `-DeclRefExpr 0x11f91c8f8 <col:19> 'unsigned long' lvalue ParmVar 0x12802f218 'size' 'unsigned long'     |-CompoundAssignOperator 0x11f91ca40 <line:32:2, col:19> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-CXXDependentScopeMemberExpr 0x11f91c9d8 <col:2, col:12> '<dependent type>' contains-errors lvalue .buf     | | `-CXXDependentScopeMemberExpr 0x11f91c990 <col:2, col:8> '<dependent type>' contains-errors lvalue ->arg     | |   `-RecoveryExpr 0x11f91c968 <col:2> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x11f91c948 <col:2> 'int *' lvalue ParmVar 0x128011928 'desc' 'int *'     | `-DeclRefExpr 0x11f91ca20 <col:19> 'unsigned long' lvalue ParmVar 0x12802f218 'size' 'unsigned long'     `-ReturnStmt 0x11f91cac0 <line:33:2, col:9>       `-ImplicitCastExpr 0x11f91caa8 <col:9> 'int' <IntegralCast>         `-ImplicitCastExpr 0x11f91ca90 <col:9> 'unsigned long' <LValueToRValue>           `-DeclRefExpr 0x11f91ca70 <col:9> 'unsigned long' lvalue ParmVar 0x12802f218 'size' 'unsigned long' ","19731":"`-FunctionDecl 0x1448fbc38  line:1:1 TEST_F 'int (int, int)'   |-ParmVarDecl 0x1448fbb58 <col:8> col:8 Http1ServerConnectionImplTest 'int'   |-ParmVarDecl 0x1448fbad8 <col:39> col:39 LargeTrailersRejected 'int'   `-CompoundStmt 0x1448fbfa0 <col:62, line:5:1>     |-RecoveryExpr 0x1448fbd80 <line:3:3> '<dependent type>' contains-errors lvalue     `-CallExpr 0x1448fbf70 <line:4:3, col:44> '<dependent type>' contains-errors       |-DeclRefExpr 0x1448fbeb0 <col:3> 'int ()' Function 0x1448fbdf8 'testTrailersExceedLimit' 'int ()'       |-RecoveryExpr 0x1448fbf30 <col:27> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x1448fbf50 <col:40> '<dependent type>' contains-errors lvalue ","19956":"`-FunctionDecl 0x13b9281c8  line:1:1 invalid print_script_debug 'int (int)'   |-ParmVarDecl 0x13b9280f0 <col:21, col:27> col:27 invalid expanded_script 'int'   `-CompoundStmt 0x13b941bf0 <line:2:1, line:14:1>     |-CallExpr 0x13b9287a0 <line:10:3, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13b9286f8 <col:3> 'int ()' Function 0x13b928570 'g_string_append_printf' 'int ()'     | |-RecoveryExpr 0x13b928780 <col:27> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x13b928730 <col:32> 'char[4]' lvalue \"STR\"     |-CallExpr 0x13b9419f0 <line:12:3, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13b9418b8 <col:3> 'int ()' Function 0x13b941800 'g_debug' 'int ()'     | |-StringLiteral 0x13b9418d8 <col:12> 'char[4]' lvalue \"STR\"     | `-CXXDependentScopeMemberExpr 0x13b9419a8 <col:19, col:24> '<dependent type>' contains-errors lvalue ->str     |   `-RecoveryExpr 0x13b941988 <col:19> '<dependent type>' contains-errors lvalue     `-CallExpr 0x13b941bc0 <line:13:3, col:27> '<dependent type>' contains-errors       |-DeclRefExpr 0x13b941b00 <col:3> 'int ()' Function 0x13b941a48 'g_string_free' 'int ()'       |-RecoveryExpr 0x13b941b80 <col:18> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x13b941ba0 <col:23> '<dependent type>' contains-errors lvalue ","19982":"`-FunctionDecl 0x15500de80  line:2:13 invalid pe_add_heuristic_property 'void (int *, const char *)' static   |-ParmVarDecl 0x15500dd28 <col:39, col:48> col:48 invalid ctx 'int *'   |-ParmVarDecl 0x15500dda8 <col:53, col:65> col:65 used key 'const char *'   `-CompoundStmt 0x155029190 <line:3:1, line:24:44>     |-DeclStmt 0x15500e128 <line:4:5, col:35>     | |-RecordDecl 0x15500df38 <col:5, col:12> col:12 struct json_object     | `-VarDecl 0x15500e0a8 <col:5, col:25> col:25 used heuristics 'struct json_object *'     |-DeclStmt 0x15500e230 <line:5:5, col:27>     | `-VarDecl 0x15500e1c8 <col:5, col:25> col:25 used pe 'struct json_object *'     |-DeclStmt 0x15500e2d8 <line:6:5, col:28>     | `-VarDecl 0x15500e270 <col:5, col:25> col:25 used str 'struct json_object *'     |-BinaryOperator 0x155027520 <line:8:5, col:29> 'struct json_object *' contains-errors '='     | |-DeclRefExpr 0x15500e2f0 <col:5> 'struct json_object *' lvalue Var 0x15500e1c8 'pe' 'struct json_object *'     | `-CallExpr 0x1550274f8 <col:10, col:29> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1550274b8 <col:10> 'int ()' Function 0x155027400 'get_pe_property' 'int ()'     |   `-RecoveryExpr 0x1550274d8 <col:26> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1550275c0 <line:9:5, line:10:9>     | |-UnaryOperator 0x155027598 <line:9:9, col:13> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x155027580 <col:10, col:13> 'struct json_object *' <LValueToRValue>     | |   `-ParenExpr 0x155027560 <col:10, col:13> 'struct json_object *' lvalue     | |     `-DeclRefExpr 0x155027540 <col:11> 'struct json_object *' lvalue Var 0x15500e1c8 'pe' 'struct json_object *'     | `-ReturnStmt 0x1550275b0 <line:10:9>     |-IfStmt 0x155028140 <line:12:5, line:18:5>     | |-UnaryOperator 0x1550278b0 <line:12:9, col:58> 'int' prefix '!' cannot overflow     | | `-CallExpr 0x155027848 <col:10, col:58> 'int'     | |   |-ImplicitCastExpr 0x155027830 <col:10> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x1550276c0 <col:10> 'int ()' Function 0x155027608 'json_object_object_get_ex' 'int ()'     | |   |-ImplicitCastExpr 0x155027880 <col:36> 'struct json_object *' <LValueToRValue>     | |   | `-DeclRefExpr 0x1550276e0 <col:36> 'struct json_object *' lvalue Var 0x15500e1c8 'pe' 'struct json_object *'     | |   |-ImplicitCastExpr 0x155027898 <col:40> 'char *' <ArrayToPointerDecay>     | |   | `-StringLiteral 0x155027740 <col:40> 'char[4]' lvalue \"STR\"     | |   `-UnaryOperator 0x1550277e0 <col:47, col:48> 'struct json_object **' prefix '&' cannot overflow     | |     `-DeclRefExpr 0x155027760 <col:48> 'struct json_object *' lvalue Var 0x15500e0a8 'heuristics' 'struct json_object *'     | `-CompoundStmt 0x155028118 <col:61, line:18:5>     |   |-BinaryOperator 0x155027e60 <line:13:9, col:44> 'struct json_object *' '='     |   | |-DeclRefExpr 0x1550278c8 <col:9> 'struct json_object *' lvalue Var 0x15500e0a8 'heuristics' 'struct json_object *'     |   | `-ImplicitCastExpr 0x155027a20 <col:22, col:44> 'struct json_object *' <IntegralToPointer>     |   |   `-CallExpr 0x155027a00 <col:22, col:44> 'int'     |   |     `-ImplicitCastExpr 0x1550279e8 <col:22> 'int (*)()' <FunctionToPointerDecay>     |   |       `-DeclRefExpr 0x1550279c8 <col:22> 'int ()' Function 0x155027910 'json_object_new_array' 'int ()'     |   |-IfStmt 0x155027f00 <line:14:9, line:15:13>     |   | |-UnaryOperator 0x155027ed8 <line:14:13, col:25> 'int' prefix '!' cannot overflow     |   | | `-ImplicitCastExpr 0x155027ec0 <col:14, col:25> 'struct json_object *' <LValueToRValue>     |   | |   `-ParenExpr 0x155027ea0 <col:14, col:25> 'struct json_object *' lvalue     |   | |     `-DeclRefExpr 0x155027e80 <col:15> 'struct json_object *' lvalue Var 0x15500e0a8 'heuristics' 'struct json_object *'     |   | `-ReturnStmt 0x155027ef0 <line:15:13>     |   `-CallExpr 0x155028098 <line:17:9, col:53> 'int'     |     |-ImplicitCastExpr 0x155028080 <col:9> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x155028000 <col:9> 'int ()' Function 0x155027f48 'json_object_object_add' 'int ()'     |     |-ImplicitCastExpr 0x1550280d0 <col:32> 'struct json_object *' <LValueToRValue>     |     | `-DeclRefExpr 0x155028020 <col:32> 'struct json_object *' lvalue Var 0x15500e1c8 'pe' 'struct json_object *'     |     |-ImplicitCastExpr 0x1550280e8 <col:36> 'char *' <ArrayToPointerDecay>     |     | `-StringLiteral 0x155028040 <col:36> 'char[4]' lvalue \"STR\"     |     `-ImplicitCastExpr 0x155028100 <col:43> 'struct json_object *' <LValueToRValue>     |       `-DeclRefExpr 0x155028060 <col:43> 'struct json_object *' lvalue Var 0x15500e0a8 'heuristics' 'struct json_object *'     |-BinaryOperator 0x155028310 <line:20:5, col:37> 'struct json_object *' '='     | |-DeclRefExpr 0x155028160 <col:5> 'struct json_object *' lvalue Var 0x15500e270 'str' 'struct json_object *'     | `-ImplicitCastExpr 0x1550282f8 <col:11, col:37> 'struct json_object *' <IntegralToPointer>     |   `-CallExpr 0x1550282b8 <col:11, col:37> 'int'     |     |-ImplicitCastExpr 0x1550282a0 <col:11> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x155028260 <col:11> 'int ()' Function 0x1550281a8 'json_object_new_string' 'int ()'     |     `-ImplicitCastExpr 0x1550282e0 <col:34> 'const char *' <LValueToRValue>     |       `-DeclRefExpr 0x155028280 <col:34> 'const char *' lvalue ParmVar 0x15500dda8 'key' 'const char *'     |-IfStmt 0x1550283b0 <line:21:5, line:22:9>     | |-UnaryOperator 0x155028388 <line:21:9, col:14> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x155028370 <col:10, col:14> 'struct json_object *' <LValueToRValue>     | |   `-ParenExpr 0x155028350 <col:10, col:14> 'struct json_object *' lvalue     | |     `-DeclRefExpr 0x155028330 <col:11> 'struct json_object *' lvalue Var 0x15500e270 'str' 'struct json_object *'     | `-ReturnStmt 0x1550283a0 <line:22:9>     `-CallExpr 0x155029130 <line:24:5, col:42> 'int'       |-ImplicitCastExpr 0x155029118 <col:5> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x1550290b8 <col:5> 'int ()' Function 0x155029000 'json_object_array_add' 'int ()'       |-ImplicitCastExpr 0x155029160 <col:27> 'struct json_object *' <LValueToRValue>       | `-DeclRefExpr 0x1550290d8 <col:27> 'struct json_object *' lvalue Var 0x15500e0a8 'heuristics' 'struct json_object *'       `-ImplicitCastExpr 0x155029178 <col:39> 'struct json_object *' <LValueToRValue>         `-DeclRefExpr 0x1550290f8 <col:39> 'struct json_object *' lvalue Var 0x15500e270 'str' 'struct json_object *' ","19471":"`-FunctionDecl 0x154816888  col:3 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x154816988 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x1548169f0 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x154816a58 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x154816930 <<invalid sloc>> Implicit 900 ","19710":"`-FunctionDecl 0x13680cc38  line:1:16 invalid f_hidg_write 'int (struct file *, const char)' static   |-ParmVarDecl 0x136128e68 <col:29, col:42> col:42 used file 'struct file *'   |-ParmVarDecl 0x136128ee0 <col:48, col:59> col:59 __user 'const char'   `-CompoundStmt 0x13680f6c8 <line:3:1, line:78:1>     |-DeclStmt 0x13680cf38 <line:4:2, col:43>     | |-RecordDecl 0x13680ccf0 <col:2, col:9> col:9 struct f_hidg     | `-VarDecl 0x13680ce58 <col:2, col:31> col:17 used hidg 'struct f_hidg *' cinit     |   `-RecoveryExpr 0x13680cef8 <col:25, col:31> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13680cec0 <col:25> 'struct file *' lvalue ParmVar 0x136128e68 'file' 'struct file *'     |-DeclStmt 0x13680d138 <line:5:2, col:25>     | |-RecordDecl 0x13680cf50 <col:2, col:9> col:9 struct usb_request     | `-VarDecl 0x13680d0b8 <col:2, col:22> col:22 used req 'struct usb_request *'     |-DeclStmt 0x13680d1d0 <line:6:2, col:21>     | `-VarDecl 0x13680d168 <col:2, col:16> col:16 used flags 'unsigned long'     |-IfStmt 0x13680d508 <line:9:2, line:10:11>     | |-UnaryOperator 0x13680d448 <line:9:6, col:30> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x13680d418 <col:7, col:30> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x13680d340 <col:7> 'int ()' Function 0x13680d288 'access_ok' 'int ()'     | |   |-RecoveryExpr 0x13680d3d8 <col:17> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x13680d3f8 <col:25> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13680d4f8 <line:10:3, col:11>     |   `-UnaryOperator 0x13680d4e0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x13680d4c8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13680d4a8 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13680d6c0 <line:12:2, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13680d608 <col:2> 'int ()' Function 0x13680d550 'spin_lock_irqsave' 'int ()'     | |-UnaryOperator 0x13680d688 <col:20, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x13680d660 <col:21, col:27> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13680d628 <col:21> 'struct f_hidg *' contains-errors lvalue Var 0x13680ce58 'hidg' 'struct f_hidg *'     | `-DeclRefExpr 0x13680d6a0 <col:43> 'unsigned long' lvalue Var 0x13680d168 'flags' 'unsigned long'     |-LabelStmt 0x137809948 <line:15:1, line:27:2> 'try_again'     | `-WhileStmt 0x1378098d8 <line:17:2, line:27:2>     |   |-UnaryOperator 0x13680d770 <line:17:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | `-ImplicitCastExpr 0x13680d758 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |   |   `-RecoveryExpr 0x13680d738 <col:10> '<dependent type>' contains-errors lvalue     |   `-CompoundStmt 0x1378098a8 <col:22, line:27:2>     |     |-CallExpr 0x13680d920 <line:18:3, col:54> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x13680d868 <col:3> 'int ()' Function 0x13680d7b0 'spin_unlock_irqrestore' 'int ()'     |     | |-UnaryOperator 0x13680d8e8 <col:26, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | | `-RecoveryExpr 0x13680d8c0 <col:27, col:33> '<dependent type>' contains-errors lvalue     |     | |   `-DeclRefExpr 0x13680d888 <col:27> 'struct f_hidg *' contains-errors lvalue Var 0x13680ce58 'hidg' 'struct f_hidg *'     |     | `-DeclRefExpr 0x13680d900 <col:49> 'unsigned long' lvalue Var 0x13680d168 'flags' 'unsigned long'     |     |-IfStmt 0x13680dad0 <line:19:3, line:20:12>     |     | |-BinaryOperator 0x13680da08 <line:19:7, col:23> '<dependent type>' contains-errors '&'     |     | | |-RecoveryExpr 0x13680d988 <col:7, col:13> '<dependent type>' contains-errors lvalue     |     | | | `-DeclRefExpr 0x13680d950 <col:7> 'struct file *' lvalue ParmVar 0x136128e68 'file' 'struct file *'     |     | | `-RecoveryExpr 0x13680d9e8 <col:23> '<dependent type>' contains-errors lvalue     |     | `-ReturnStmt 0x13680dac0 <line:20:4, col:12>     |     |   `-UnaryOperator 0x13680daa8 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |     |     `-ImplicitCastExpr 0x13680da90 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |     |       `-RecoveryExpr 0x13680da70 <col:12> '<dependent type>' contains-errors lvalue     |     |-IfStmt 0x1378097a0 <line:22:3, line:24:12>     |     | |-CallExpr 0x1378096c8 <line:22:7, line:23:34> '<dependent type>' contains-errors     |     | | |-DeclRefExpr 0x13680dbd0 <line:22:7> 'int ()' Function 0x13680db18 'wait_event_interruptible_exclusive' 'int ()'     |     | | |-RecoveryExpr 0x137809638 <line:23:5, col:11> '<dependent type>' contains-errors lvalue     |     | | | `-DeclRefExpr 0x137809600 <col:5> 'struct f_hidg *' contains-errors lvalue Var 0x13680ce58 'hidg' 'struct f_hidg *'     |     | | `-RecoveryExpr 0x1378096a8 <col:24> '<dependent type>' contains-errors lvalue     |     | `-ReturnStmt 0x137809790 <line:24:4, col:12>     |     |   `-UnaryOperator 0x137809778 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |     |     `-ImplicitCastExpr 0x137809760 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |     |       `-RecoveryExpr 0x137809740 <col:12> '<dependent type>' contains-errors lvalue     |     `-CallExpr 0x137809878 <line:26:3, col:49> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x1378097c0 <col:3> 'int ()' Function 0x13680d550 'spin_lock_irqsave' 'int ()'     |       |-UnaryOperator 0x137809840 <col:21, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |       | `-RecoveryExpr 0x137809818 <col:22, col:28> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x1378097e0 <col:22> 'struct f_hidg *' contains-errors lvalue Var 0x13680ce58 'hidg' 'struct f_hidg *'     |       `-DeclRefExpr 0x137809858 <col:44> 'unsigned long' lvalue Var 0x13680d168 'flags' 'unsigned long'     |-BinaryOperator 0x1378099e8 <line:29:2, col:24> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1378099a0 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x137809968 <col:2> 'struct f_hidg *' contains-errors lvalue Var 0x13680ce58 'hidg' 'struct f_hidg *'     | `-IntegerLiteral 0x1378099c8 <col:24> 'int' 1     |-BinaryOperator 0x137809a88 <line:30:2, col:14> 'struct usb_request *' contains-errors '='     | |-DeclRefExpr 0x137809a08 <col:2> 'struct usb_request *' lvalue Var 0x13680d0b8 'req' 'struct usb_request *'     | `-RecoveryExpr 0x137809a60 <col:8, col:14> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x137809a28 <col:8> 'struct f_hidg *' contains-errors lvalue Var 0x13680ce58 'hidg' 'struct f_hidg *'     |-CallExpr 0x137809cc0 <line:33:2, col:53> '<dependent type>' contains-errors     | |-DeclRefExpr 0x137809c08 <col:2> 'int ()' Function 0x13680d7b0 'spin_unlock_irqrestore' 'int ()'     | |-UnaryOperator 0x137809c88 <col:25, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x137809c60 <col:26, col:32> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x137809c28 <col:26> 'struct f_hidg *' contains-errors lvalue Var 0x13680ce58 'hidg' 'struct f_hidg *'     | `-DeclRefExpr 0x137809ca0 <col:48> 'unsigned long' lvalue Var 0x13680d168 'flags' 'unsigned long'     |-IfStmt 0x13780a198 <line:36:2, line:41:2>     | |-RecoveryExpr 0x137809e70 <line:36:6, col:16> '_Bool' contains-errors     | `-CompoundStmt 0x13780a178 <col:19, line:41:2>     |   |-CallExpr 0x13780a0e0 <line:37:3, line:38:9> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x137809f70 <line:37:3> 'int ()' Function 0x137809eb8 'ERROR' 'int ()'     |   | |-CXXDependentScopeMemberExpr 0x13780a038 <col:9, col:28> '<dependent type>' contains-errors lvalue ->cdev     |   | | `-CXXDependentScopeMemberExpr 0x137809ff0 <col:9, col:20> '<dependent type>' contains-errors lvalue .config     |   | |   `-RecoveryExpr 0x137809fc8 <col:9, col:15> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x137809f90 <col:9> 'struct f_hidg *' contains-errors lvalue Var 0x13680ce58 'hidg' 'struct f_hidg *'     |   | `-StringLiteral 0x13780a0c0 <line:38:4> 'char[4]' lvalue \"STR\"     |   `-GotoStmt 0x13780a160 <line:40:3, col:8> 'release_write_pending' 0x13780a110     |-CallExpr 0x13780a270 <line:43:2, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13780a1b8 <col:2> 'int ()' Function 0x13680d550 'spin_lock_irqsave' 'int ()'     | |-UnaryOperator 0x13780a238 <col:20, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x13780a210 <col:21, col:27> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13780a1d8 <col:21> 'struct f_hidg *' contains-errors lvalue Var 0x13680ce58 'hidg' 'struct f_hidg *'     | `-DeclRefExpr 0x13780a250 <col:43> 'unsigned long' lvalue Var 0x13680d168 'flags' 'unsigned long'     |-IfStmt 0x13780a518 <line:46:2, line:50:2>     | |-UnaryOperator 0x13780a318 <line:46:6, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13780a300 <col:7, col:13> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x13780a2d8 <col:7, col:13> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x13780a2a0 <col:7> 'struct f_hidg *' contains-errors lvalue Var 0x13680ce58 'hidg' 'struct f_hidg *'     | `-CompoundStmt 0x13780a4f8 <col:18, line:50:2>     |   |-CallExpr 0x13780a4b0 <line:47:3, col:31> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13780a410 <col:3> 'int ()' Function 0x13780a358 'free_ep_req' 'int ()'     |   | |-RecoveryExpr 0x13780a468 <col:15, col:21> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x13780a430 <col:15> 'struct f_hidg *' contains-errors lvalue Var 0x13680ce58 'hidg' 'struct f_hidg *'     |   | `-DeclRefExpr 0x13780a490 <col:28> 'struct usb_request *' lvalue Var 0x13680d0b8 'req' 'struct usb_request *'     |   `-GotoStmt 0x13780a4e0 <line:49:3, col:8> 'try_again' 0x1378098f8     |-BinaryOperator 0x13780a5b8 <line:52:2, col:18> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13780a570 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13780a538 <col:2> 'struct usb_request *' lvalue Var 0x13680d0b8 'req' 'struct usb_request *'     | `-IntegerLiteral 0x13780a598 <col:18> 'int' 0     |-BinaryOperator 0x13680ec60 <line:53:2, col:18> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13680ec18 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13780a5d8 <col:2> 'struct usb_request *' lvalue Var 0x13680d0b8 'req' 'struct usb_request *'     | `-IntegerLiteral 0x13680ec40 <col:18> 'int' 0     |-BinaryOperator 0x13680edc0 <line:56:2, col:18> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13680ed78 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13680ed40 <col:2> 'struct usb_request *' lvalue Var 0x13680d0b8 'req' 'struct usb_request *'     | `-DeclRefExpr 0x13680eda0 <col:18> 'struct f_hidg *' contains-errors lvalue Var 0x13680ce58 'hidg' 'struct f_hidg *'     |-IfStmt 0x13680f160 <line:59:2, line:65:2> has_else     | |-RecoveryExpr 0x13680ef80 <line:59:6, col:15> '_Bool' contains-errors     | |-CompoundStmt 0x13680f138 <col:18, line:63:2>     | | `-GotoStmt 0x13680f120 <line:62:3, col:8> 'release_write_pending_unlocked' 0x13680f0d0     | `-CompoundStmt 0x13680f150 <line:63:9, line:65:2>     |-CallExpr 0x13680f248 <line:66:2, col:53> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13680f190 <col:2> 'int ()' Function 0x13680d7b0 'spin_unlock_irqrestore' 'int ()'     | |-UnaryOperator 0x13680f210 <col:25, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x13680f1e8 <col:26, col:32> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13680f1b0 <col:26> 'struct f_hidg *' contains-errors lvalue Var 0x13680ce58 'hidg' 'struct f_hidg *'     | `-DeclRefExpr 0x13680f228 <col:48> 'unsigned long' lvalue Var 0x13680d168 'flags' 'unsigned long'     |-LabelStmt 0x13680f360 <line:69:1, line:70:48> 'release_write_pending'     | `-CallExpr 0x13680f330 <col:2, col:48> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13680f278 <col:2> 'int ()' Function 0x13680d550 'spin_lock_irqsave' 'int ()'     |   |-UnaryOperator 0x13680f2f8 <col:20, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x13680f2d0 <col:21, col:27> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x13680f298 <col:21> 'struct f_hidg *' contains-errors lvalue Var 0x13680ce58 'hidg' 'struct f_hidg *'     |   `-DeclRefExpr 0x13680f310 <col:43> 'unsigned long' lvalue Var 0x13680d168 'flags' 'unsigned long'     |-LabelStmt 0x13680f420 <line:71:1, line:72:24> 'release_write_pending_unlocked'     | `-BinaryOperator 0x13680f400 <col:2, col:24> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x13680f3b8 <col:2, col:8> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x13680f380 <col:2> 'struct f_hidg *' contains-errors lvalue Var 0x13680ce58 'hidg' 'struct f_hidg *'     |   `-IntegerLiteral 0x13680f3e0 <col:24> 'int' 0     |-CallExpr 0x13680f4f8 <line:73:2, col:53> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13680f440 <col:2> 'int ()' Function 0x13680d7b0 'spin_unlock_irqrestore' 'int ()'     | |-UnaryOperator 0x13680f4c0 <col:25, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x13680f498 <col:26, col:32> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13680f460 <col:26> 'struct f_hidg *' contains-errors lvalue Var 0x13680ce58 'hidg' 'struct f_hidg *'     | `-DeclRefExpr 0x13680f4d8 <col:48> 'unsigned long' lvalue Var 0x13680d168 'flags' 'unsigned long'     `-CallExpr 0x13680f6a0 <line:75:2, col:28> '<dependent type>' contains-errors       |-DeclRefExpr 0x13680f608 <col:2> 'int ()' Function 0x13680f550 'wake_up' 'int ()'       `-UnaryOperator 0x13680f688 <col:10, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x13680f660 <col:11, col:17> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x13680f628 <col:11> 'struct f_hidg *' contains-errors lvalue Var 0x13680ce58 'hidg' 'struct f_hidg *' ","19680":"`-FunctionDecl 0x12c940b40  col:6 implicit used strcasecmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x12c940c40 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x12c940ca8 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x12c940be8 <<invalid sloc>> Implicit 957 ","20164":"`-FunctionDecl 0x13f923e20  col:5 implicit used memmove 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x13f923f20 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x13f923f88 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x13f923ff0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x13f923ec8 <<invalid sloc>> Implicit 884 ","19384":"`-FunctionDecl 0x14000df18  line:1:25 sc_get_cac1_driver 'struct sc_card_driver *(void)'   `-CompoundStmt 0x140027e20 <line:2:1, line:4:1>     `-ReturnStmt 0x140027e10 <line:3:2, col:23>       `-ImplicitCastExpr 0x14000e1b8 <col:9, col:23> 'struct sc_card_driver *' <IntegralToPointer>         `-CallExpr 0x14000e198 <col:9, col:23> 'int'           `-ImplicitCastExpr 0x14000e180 <col:9> 'int (*)()' <FunctionToPointerDecay>             `-DeclRefExpr 0x14000e130 <col:9> 'int ()' Function 0x14000e078 'sc_get_driver' 'int ()' ","20050":"`-FunctionDecl 0x13b128378  line:1:5 invalid gnutls_subject_alt_names_set 'int (int, unsigned int, const int *, const char *)'   |-ParmVarDecl 0x13b1280f0 <col:34, col:61> col:61 invalid sans 'int'   |-ParmVarDecl 0x13b128170 <line:2:6, col:19> col:19 used san_type 'unsigned int'   |-ParmVarDecl 0x13b1281f0 <line:3:6, col:29> col:29 invalid san 'const int *'   |-ParmVarDecl 0x13b128270 <line:4:6, col:18> col:18 used othername_oid 'const char *'   `-CompoundStmt 0x13b143650 <line:5:1, line:26:1>     |-DeclStmt 0x13b1284c0 <line:6:2, col:9>     | `-VarDecl 0x13b128458 <col:2, col:6> col:6 used ret 'int'     |-DeclStmt 0x13b128558 <line:8:2, col:11>     | `-VarDecl 0x13b1284f0 <col:2, col:8> col:8 used ooc 'char *'     |-BinaryOperator 0x13b141910 <line:10:2, col:56> 'int' contains-errors '='     | |-DeclRefExpr 0x13b128570 <col:2> 'int' lvalue Var 0x13b128458 'ret' 'int'     | `-CallExpr 0x13b1418d8 <col:8, col:56> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13b1286f0 <col:8> 'int ()' Function 0x13b128638 '_gnutls_set_strdatum' 'int ()'     |   |-UnaryOperator 0x13b1418c0 <col:29, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x13b1418a0 <col:30> '<dependent type>' contains-errors lvalue     |   |-CXXDependentScopeMemberExpr 0x13b128760 <col:36, col:41> '<dependent type>' contains-errors lvalue ->data     |   | `-RecoveryExpr 0x13b128740 <col:36> '<dependent type>' contains-errors lvalue     |   `-CXXDependentScopeMemberExpr 0x13b141800 <col:47, col:52> '<dependent type>' contains-errors lvalue ->size     |     `-RecoveryExpr 0x13b1287a8 <col:47> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13b141b68 <line:11:2, line:12:31>     | |-BinaryOperator 0x13b141988 <line:11:6, col:12> 'int' '<'     | | |-ImplicitCastExpr 0x13b141970 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x13b141930 <col:6> 'int' lvalue Var 0x13b128458 'ret' 'int'     | | `-IntegerLiteral 0x13b141950 <col:12> 'int' 0     | `-ReturnStmt 0x13b141b58 <line:12:3, col:31>     |   `-CallExpr 0x13b141b18 <col:10, col:31> 'int'     |     |-ImplicitCastExpr 0x13b141b00 <col:10> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x13b141a88 <col:10> 'int ()' Function 0x13b1419d0 'gnutls_assert_val' 'int ()'     |     `-ImplicitCastExpr 0x13b141b40 <col:28> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x13b141aa8 <col:28> 'int' lvalue Var 0x13b128458 'ret' 'int'     |-IfStmt 0x13b1422a8 <line:14:2, line:17:9> has_else     | |-BinaryOperator 0x13b141c00 <line:14:6, col:23> 'int' contains-errors '!='     | | |-DeclRefExpr 0x13b141b88 <col:6> 'const char *' lvalue ParmVar 0x13b128270 'othername_oid' 'const char *'     | | `-RecoveryExpr 0x13b141be0 <col:23> '<dependent type>' contains-errors lvalue     | |-BinaryOperator 0x13b1421f0 <line:15:3, col:36> 'char *' '='     | | |-DeclRefExpr 0x13b141c20 <col:3> 'char *' lvalue Var 0x13b1284f0 'ooc' 'char *'     | | `-ImplicitCastExpr 0x13b141db8 <col:9, col:36> 'char *' <IntegralToPointer>     | |   `-CallExpr 0x13b141d78 <col:9, col:36> 'int'     | |     |-ImplicitCastExpr 0x13b141d60 <col:9> 'int (*)()' <FunctionToPointerDecay>     | |     | `-DeclRefExpr 0x13b141d20 <col:9> 'int ()' Function 0x13b141c68 'gnutls_strdup' 'int ()'     | |     `-ImplicitCastExpr 0x13b141da0 <col:23> 'const char *' <LValueToRValue>     | |       `-DeclRefExpr 0x13b141d40 <col:23> 'const char *' lvalue ParmVar 0x13b128270 'othername_oid' 'const char *'     | `-BinaryOperator 0x13b142288 <line:17:3, col:9> 'char *' contains-errors '='     |   |-DeclRefExpr 0x13b142210 <col:3> 'char *' lvalue Var 0x13b1284f0 'ooc' 'char *'     |   `-RecoveryExpr 0x13b142268 <col:9> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13b142680 <line:18:2, line:19:32> 'int' contains-errors '='     | |-DeclRefExpr 0x13b1422d8 <line:18:2> 'int' lvalue Var 0x13b128458 'ret' 'int'     | `-CallExpr 0x13b142630 <col:8, line:19:32> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13b1423d8 <line:18:8> 'int ()' Function 0x13b142320 'subject_alt_names_set' 'int ()'     |   |-UnaryOperator 0x13b142460 <col:30, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-CXXDependentScopeMemberExpr 0x13b142418 <col:31, col:37> '<dependent type>' contains-errors lvalue ->names     |   |   `-RecoveryExpr 0x13b1423f8 <col:31> '<dependent type>' contains-errors lvalue     |   |-UnaryOperator 0x13b1424e0 <col:44, col:51> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-CXXDependentScopeMemberExpr 0x13b142498 <col:45, col:51> '<dependent type>' contains-errors lvalue ->size     |   |   `-RecoveryExpr 0x13b142478 <col:45> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x13b1424f8 <line:19:9> 'unsigned int' lvalue ParmVar 0x13b128170 'san_type' 'unsigned int'     |   |-UnaryOperator 0x13b142618 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x13b1425f8 <col:20> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x13b142548 <col:26> 'char *' lvalue Var 0x13b1284f0 'ooc' 'char *'     |   `-IntegerLiteral 0x13b142568 <col:31> 'int' 0     |-IfStmt 0x13b143600 <line:20:2, line:23:2>     | |-BinaryOperator 0x13b1426f8 <line:20:6, col:12> 'int' '<'     | | |-ImplicitCastExpr 0x13b1426e0 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x13b1426a0 <col:6> 'int' lvalue Var 0x13b128458 'ret' 'int'     | | `-IntegerLiteral 0x13b1426c0 <col:12> 'int' 0     | `-CompoundStmt 0x13b1435e0 <col:15, line:23:2>     |   |-CallExpr 0x13b143510 <line:21:3, col:24> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13b143400 <col:3> 'int ()' Function 0x13b142740 'gnutls_free' 'int ()'     |   | `-CXXDependentScopeMemberExpr 0x13b1434c8 <col:15, col:20> '<dependent type>' contains-errors lvalue .data     |   |   `-RecoveryExpr 0x13b1434a8 <col:15> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x13b1435d0 <line:22:3, col:31>     |     `-CallExpr 0x13b143590 <col:10, col:31> 'int'     |       |-ImplicitCastExpr 0x13b143578 <col:10> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x13b143538 <col:10> 'int ()' Function 0x13b1419d0 'gnutls_assert_val' 'int ()'     |       `-ImplicitCastExpr 0x13b1435b8 <col:28> 'int' <LValueToRValue>     |         `-DeclRefExpr 0x13b143558 <col:28> 'int' lvalue Var 0x13b128458 'ret' 'int'     `-ReturnStmt 0x13b143640 <line:25:2, col:9>       `-IntegerLiteral 0x13b143620 <col:9> 'int' 0 ","20178":"`-FunctionDecl 0x142928118  line:1:1 SYSCALL_DEFINE4 'int ()'   `-CompoundStmt 0x143009050 <line:4:1, line:28:1>     |-DeclStmt 0x142928288 <line:5:2, col:11>     | `-VarDecl 0x142928220 <col:2, col:6> col:6 used error 'int'     |-DeclStmt 0x142928488 <line:6:2, col:19>     | |-RecordDecl 0x1429282a0 <col:2, col:9> col:9 struct file     | `-VarDecl 0x142928408 <col:2, col:15> col:15 used file 'struct file *'     |-DeclStmt 0x142940c88 <line:7:2, col:32>     | |-RecordDecl 0x1429284a0 <col:2, col:9> col:9 struct osf_dirent_callback     | `-VarDecl 0x142928598 <col:2, col:29> col:29 referenced invalid buf 'struct osf_dirent_callback'     |-BinaryOperator 0x142940d90 <line:9:2, col:11> 'int' contains-errors '='     | |-DeclRefExpr 0x142940ca0 <col:2> 'int' lvalue Var 0x142928220 'error' 'int'     | `-UnaryOperator 0x142940d78 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |   `-ImplicitCastExpr 0x142940d60 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |     `-RecoveryExpr 0x142940d40 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x142940f78 <line:10:2, col:16> 'struct file *' contains-errors '='     | |-DeclRefExpr 0x142940db0 <col:2> 'struct file *' lvalue Var 0x142928408 'file' 'struct file *'     | `-CallExpr 0x142940f50 <col:9, col:16> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x142940eb0 <col:9> 'int ()' Function 0x142940df8 'fget' 'int ()'     |   `-RecoveryExpr 0x142940f30 <col:14> '<dependent type>' contains-errors lvalue     |-IfStmt 0x142941050 <line:11:2, line:12:8>     | |-UnaryOperator 0x142940fd0 <line:11:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x142940fb8 <col:7> 'struct file *' <LValueToRValue>     | |   `-DeclRefExpr 0x142940f98 <col:7> 'struct file *' lvalue Var 0x142928408 'file' 'struct file *'     | `-GotoStmt 0x142941038 <line:12:3, col:8> 'out' 0x142940fe8     |-BinaryOperator 0x142941158 <line:14:2, col:15> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1429410b8 <col:2, col:6> '<dependent type>' contains-errors lvalue .dirent     | | `-RecoveryExpr 0x142941090 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x142941070 <col:2> 'struct osf_dirent_callback' lvalue Var 0x142928598 'buf' 'struct osf_dirent_callback'     | `-RecoveryExpr 0x142941138 <col:15> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x142941260 <line:15:2, col:14> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1429411c0 <col:2, col:6> '<dependent type>' contains-errors lvalue .basep     | | `-RecoveryExpr 0x142941198 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x142941178 <col:2> 'struct osf_dirent_callback' lvalue Var 0x142928598 'buf' 'struct osf_dirent_callback'     | `-RecoveryExpr 0x142941240 <col:14> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x142941368 <line:16:2, col:14> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1429412c8 <col:2, col:6> '<dependent type>' contains-errors lvalue .count     | | `-RecoveryExpr 0x1429412a0 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x142941280 <col:2> 'struct osf_dirent_callback' lvalue Var 0x142928598 'buf' 'struct osf_dirent_callback'     | `-RecoveryExpr 0x142941348 <col:14> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x142941438 <line:17:2, col:14> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1429413d0 <col:2, col:6> '<dependent type>' contains-errors lvalue .error     | | `-RecoveryExpr 0x1429413a8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x142941388 <col:2> 'struct osf_dirent_callback' lvalue Var 0x142928598 'buf' 'struct osf_dirent_callback'     | `-IntegerLiteral 0x142941418 <col:14> 'int' 0     |-BinaryOperator 0x142941698 <line:19:2, col:45> 'int' contains-errors '='     | |-DeclRefExpr 0x142941458 <col:2> 'int' lvalue Var 0x142928220 'error' 'int'     | `-CallExpr 0x142941660 <col:10, col:45> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x142941558 <col:10> 'int ()' Function 0x1429414a0 'vfs_readdir' 'int ()'     |   |-DeclRefExpr 0x142941578 <col:22> 'struct file *' lvalue Var 0x142928408 'file' 'struct file *'     |   |-RecoveryExpr 0x142941640 <col:28> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x1429415d0 <col:41, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x1429415b0 <col:42> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1429417d8 <line:20:2, line:21:15>     | |-BinaryOperator 0x142941710 <line:20:6, col:15> 'int' '>='     | | |-ImplicitCastExpr 0x1429416f8 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x1429416b8 <col:6> 'int' lvalue Var 0x142928220 'error' 'int'     | | `-IntegerLiteral 0x1429416d8 <col:15> 'int' 0     | `-BinaryOperator 0x1429417b8 <line:21:3, col:15> 'int' contains-errors '='     |   |-DeclRefExpr 0x142941730 <col:3> 'int' lvalue Var 0x142928220 'error' 'int'     |   `-CXXDependentScopeMemberExpr 0x142941770 <col:11, col:15> '<dependent type>' contains-errors lvalue .error     |     `-RecoveryExpr 0x142941750 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x143008e20 <line:22:2, line:23:23>     | |-BinaryOperator 0x1429418b8 <line:22:6, col:19> 'int' contains-errors '!='     | | |-RecoveryExpr 0x142941898 <col:6> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x142941830 <col:15, col:19> '<dependent type>' contains-errors lvalue .count     | |   `-RecoveryExpr 0x142941810 <col:15> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x143008e00 <line:23:3, col:23> 'int' contains-errors '='     |   |-DeclRefExpr 0x1429418d8 <col:3> 'int' lvalue Var 0x142928220 'error' 'int'     |   `-BinaryOperator 0x1429419d8 <col:11, col:23> '<dependent type>' contains-errors '-'     |     |-RecoveryExpr 0x1429419b8 <col:11> '<dependent type>' contains-errors lvalue     |     `-CXXDependentScopeMemberExpr 0x142941930 <col:19, col:23> '<dependent type>' contains-errors lvalue .count     |       `-RecoveryExpr 0x142941910 <col:19> '<dependent type>' contains-errors lvalue     |-CallExpr 0x143008fa8 <line:25:2, col:11> 'int'     | |-ImplicitCastExpr 0x143008f90 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x143008f20 <col:2> 'int ()' Function 0x143008e68 'fput' 'int ()'     | `-ImplicitCastExpr 0x143008fd0 <col:7> 'struct file *' <LValueToRValue>     |   `-DeclRefExpr 0x143008f40 <col:7> 'struct file *' lvalue Var 0x142928408 'file' 'struct file *'     `-LabelStmt 0x143009030 <line:26:2, line:27:9> 'out'       `-ReturnStmt 0x143009020 <col:2, col:9>         `-ImplicitCastExpr 0x143009008 <col:9> 'int' <LValueToRValue>           `-DeclRefExpr 0x143008fe8 <col:9> 'int' lvalue Var 0x142928220 'error' 'int' ","19446":"`-FunctionDecl 0x121928168  line:1:8 invalid jslGetTokenValueAsVar 'int *()'   `-CompoundStmt 0x121941b20 <col:32, line:9:1>     `-IfStmt 0x121941af0 <line:2:3, line:8:3> has_else       |-CXXDependentScopeMemberExpr 0x121928290 <line:2:7, col:12> '<dependent type>' contains-errors lvalue ->tokenValue       | `-RecoveryExpr 0x121928270 <col:7> '<dependent type>' contains-errors lvalue       |-CompoundStmt 0x121928578 <col:24, line:4:3>       | `-ReturnStmt 0x121928568 <line:3:5, col:40>       |   `-CallExpr 0x121928540 <col:12, col:40> '<dependent type>' contains-errors       |     |-DeclRefExpr 0x121928430 <col:12> 'int ()' Function 0x121928378 'jsvLockAgain' 'int ()'       |     `-CXXDependentScopeMemberExpr 0x1219284f8 <col:25, col:30> '<dependent type>' contains-errors lvalue ->tokenValue       |       `-RecoveryExpr 0x1219284d8 <col:25> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x121941ad0 <line:4:10, line:8:3>         |-CallExpr 0x121941800 <line:5:5, col:48> '<dependent type>' contains-errors         | |-DeclRefExpr 0x121928670 <col:5> 'int ()' Function 0x1219285b8 'assert' 'int ()'         | `-BinaryOperator 0x1219287d8 <col:12, col:26> 'int' contains-errors '<'         |   |-CXXDependentScopeMemberExpr 0x121928770 <col:12, col:17> '<dependent type>' contains-errors lvalue ->tokenl         |   | `-RecoveryExpr 0x121928750 <col:12> '<dependent type>' contains-errors lvalue         |   `-RecoveryExpr 0x1219287b8 <col:26> '<dependent type>' contains-errors lvalue         `-ReturnStmt 0x121941ac0 <line:7:5, col:39>           `-CallExpr 0x121941a98 <col:12, col:39> '<dependent type>' contains-errors             |-DeclRefExpr 0x121941988 <col:12> 'int ()' Function 0x1219418d0 'jsvNewFromString' 'int ()'             `-CXXDependentScopeMemberExpr 0x121941a50 <col:29, col:34> '<dependent type>' contains-errors lvalue ->token               `-RecoveryExpr 0x121941a30 <col:29> '<dependent type>' contains-errors lvalue ","20042":"`-FunctionDecl 0x120928288  line:1:1 invalid nm_gconf_compare_private_connection_values 'int (int *, int *)'   |-ParmVarDecl 0x120928128 <col:45, col:59> col:59 invalid dst 'int *'   |-ParmVarDecl 0x1209281a8 <col:64, col:78> col:78 invalid src 'int *'   `-CompoundStmt 0x108008f10 <line:2:1, line:36:1>     |-CallExpr 0x120928670 <line:5:2, col:53> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1209284a0 <col:2> 'int ()' Function 0x1209283e8 'g_return_val_if_fail' 'int ()'     | |-CallExpr 0x1209285e0 <col:24, col:45> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1209285a0 <col:24> 'int ()' Function 0x1209284e8 'NM_IS_CONNECTION' 'int ()'     | | `-RecoveryExpr 0x1209285c0 <col:42> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x120928650 <col:48> '<dependent type>' contains-errors lvalue     |-CallExpr 0x120928790 <line:6:2, col:53> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1209286a0 <col:2> 'int ()' Function 0x1209283e8 'g_return_val_if_fail' 'int ()'     | |-CallExpr 0x120928700 <col:24, col:45> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1209286c0 <col:24> 'int ()' Function 0x1209284e8 'NM_IS_CONNECTION' 'int ()'     | | `-RecoveryExpr 0x1209286e0 <col:42> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x120928770 <col:48> '<dependent type>' contains-errors lvalue     `-IfStmt 0x108008800 <line:10:2, line:11:10>       |-BinaryOperator 0x108008798 <line:10:6, col:14> 'int' contains-errors '!='       | |-RecoveryExpr 0x108008758 <col:6> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x108008778 <col:14> '<dependent type>' contains-errors lvalue       `-ReturnStmt 0x1080087f0 <line:11:3, col:10>         `-RecoveryExpr 0x1080087d0 <col:10> '<dependent type>' contains-errors lvalue ","19396":"`-FunctionDecl 0x14a144d48  line:1:12 minix_statfs 'int (struct dentry *, struct kstatfs *)' static   |-ParmVarDecl 0x14a128648 <col:25, col:40> col:40 used dentry 'struct dentry *'   |-ParmVarDecl 0x14a144c28 <col:48, col:64> col:64 used buf 'struct kstatfs *'   `-CompoundStmt 0x14a146b70 <line:2:1, line:13:1>     |-DeclStmt 0x14a145210 <line:3:2, col:52>     | |-RecordDecl 0x14a144e48 <col:2, col:9> col:9 struct minix_sb_info     | `-VarDecl 0x14a144fb8 <col:2, col:51> col:24 used sbi 'struct minix_sb_info *' cinit     |   `-CallExpr 0x14a1451d0 <col:30, col:51> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14a145150 <col:30> 'int ()' Function 0x14a145098 'minix_sb' 'int ()'     |     `-RecoveryExpr 0x14a1451a8 <col:39, col:47> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14a145170 <col:39> 'struct dentry *' lvalue ParmVar 0x14a128648 'dentry' 'struct dentry *'     |-BinaryOperator 0x14a145330 <line:4:2, col:30> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14a145260 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a145228 <col:2> 'struct kstatfs *' lvalue ParmVar 0x14a144c28 'buf' 'struct kstatfs *'     | `-CXXDependentScopeMemberExpr 0x14a1452e8 <col:16, col:30> '<dependent type>' contains-errors lvalue ->s_magic     |   `-RecoveryExpr 0x14a1452c0 <col:16, col:24> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14a145288 <col:16> 'struct dentry *' lvalue ParmVar 0x14a128648 'dentry' 'struct dentry *'     |-BinaryOperator 0x14a145458 <line:5:2, col:31> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14a145388 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a145350 <col:2> 'struct kstatfs *' lvalue ParmVar 0x14a144c28 'buf' 'struct kstatfs *'     | `-CXXDependentScopeMemberExpr 0x14a145410 <col:17, col:31> '<dependent type>' contains-errors lvalue ->s_blocksize     |   `-RecoveryExpr 0x14a1453e8 <col:17, col:25> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14a1453b0 <col:17> 'struct dentry *' lvalue ParmVar 0x14a128648 'dentry' 'struct dentry *'     |-BinaryOperator 0x14a145658 <line:6:2, col:65> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14a1454b0 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a145478 <col:2> 'struct kstatfs *' lvalue ParmVar 0x14a144c28 'buf' 'struct kstatfs *'     | `-BinaryOperator 0x14a145638 <col:18, col:65> '<dependent type>' contains-errors '<<'     |   |-ParenExpr 0x14a1455b8 <col:18, col:55> '<dependent type>' contains-errors     |   | `-BinaryOperator 0x14a145598 <col:19, col:40> '<dependent type>' contains-errors '-'     |   |   |-RecoveryExpr 0x14a145510 <col:19, col:24> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x14a1454d8 <col:19> 'struct minix_sb_info *' contains-errors lvalue Var 0x14a144fb8 'sbi' 'struct minix_sb_info *'     |   |   `-RecoveryExpr 0x14a145570 <col:35, col:40> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x14a145538 <col:35> 'struct minix_sb_info *' contains-errors lvalue Var 0x14a144fb8 'sbi' 'struct minix_sb_info *'     |   `-RecoveryExpr 0x14a145610 <col:60, col:65> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14a1455d8 <col:60> 'struct minix_sb_info *' contains-errors lvalue Var 0x14a144fb8 'sbi' 'struct minix_sb_info *'     |-BinaryOperator 0x14a145888 <line:7:2, col:44> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14a1456b0 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a145678 <col:2> 'struct kstatfs *' lvalue ParmVar 0x14a144c28 'buf' 'struct kstatfs *'     | `-CallExpr 0x14a145848 <col:17, col:44> 'int' contains-errors     |   |-ImplicitCastExpr 0x14a145830 <col:17> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14a1457b8 <col:17> 'int ()' Function 0x14a145700 'minix_count_free_blocks' 'int ()'     |   `-ImplicitCastExpr 0x14a145870 <col:41> 'struct minix_sb_info *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x14a1457d8 <col:41> 'struct minix_sb_info *' contains-errors lvalue Var 0x14a144fb8 'sbi' 'struct minix_sb_info *'     |-BinaryOperator 0x14a145968 <line:8:2, col:23> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14a1458e0 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a1458a8 <col:2> 'struct kstatfs *' lvalue ParmVar 0x14a144c28 'buf' 'struct kstatfs *'     | `-RecoveryExpr 0x14a145940 <col:18, col:23> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14a145908 <col:18> 'struct kstatfs *' lvalue ParmVar 0x14a144c28 'buf' 'struct kstatfs *'     |-BinaryOperator 0x14a145a48 <line:9:2, col:22> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14a1459c0 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a145988 <col:2> 'struct kstatfs *' lvalue ParmVar 0x14a144c28 'buf' 'struct kstatfs *'     | `-RecoveryExpr 0x14a145a20 <col:17, col:22> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14a1459e8 <col:17> 'struct minix_sb_info *' contains-errors lvalue Var 0x14a144fb8 'sbi' 'struct minix_sb_info *'     |-BinaryOperator 0x14a146a40 <line:10:2, col:44> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14a145aa0 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a145a68 <col:2> 'struct kstatfs *' lvalue ParmVar 0x14a144c28 'buf' 'struct kstatfs *'     | `-CallExpr 0x14a146a00 <col:17, col:44> 'int' contains-errors     |   |-ImplicitCastExpr 0x14a145be8 <col:17> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14a145ba8 <col:17> 'int ()' Function 0x14a145af0 'minix_count_free_inodes' 'int ()'     |   `-ImplicitCastExpr 0x14a146a28 <col:41> 'struct minix_sb_info *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x14a145bc8 <col:41> 'struct minix_sb_info *' contains-errors lvalue Var 0x14a144fb8 'sbi' 'struct minix_sb_info *'     |-BinaryOperator 0x14a146b20 <line:11:2, col:24> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14a146a98 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a146a60 <col:2> 'struct kstatfs *' lvalue ParmVar 0x14a144c28 'buf' 'struct kstatfs *'     | `-RecoveryExpr 0x14a146af8 <col:19, col:24> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14a146ac0 <col:19> 'struct minix_sb_info *' contains-errors lvalue Var 0x14a144fb8 'sbi' 'struct minix_sb_info *'     `-ReturnStmt 0x14a146b60 <line:12:2, col:9>       `-IntegerLiteral 0x14a146b40 <col:9> 'int' 0 ","19260":"`-FunctionDecl 0x1301281c8  line:1:1 invalid DatumGetFloat4 'int (int)'   |-ParmVarDecl 0x1301280f0 <col:16, col:22> col:22 invalid X 'int'   `-CompoundStmt 0x130128798 <line:2:1, line:11:1>     |-DeclStmt 0x1301284c8 <line:3:2, line:7:13>     | |-RecordDecl 0x130128278 <line:3:2, line:7:2> line:3:2 invalid union definition     | | |-FieldDecl 0x130128338 <line:5:3, col:10> col:10 invalid value 'int'     | | `-FieldDecl 0x1301283a0 <line:6:3, col:11> col:11 referenced retval 'float'     | `-VarDecl 0x130128448 <line:3:2, line:7:6> col:6 used myunion 'union (unnamed union at dataset_diviso_filec\/func11735_nonvuln.c:3:2)':'union (unnamed at dataset_diviso_filec\/func11735_nonvuln.c:3:2)'     |-BinaryOperator 0x1301286e8 <line:9:2, col:31> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x130128500 <col:2, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1301284e0 <col:2> 'union (unnamed union at dataset_diviso_filec\/func11735_nonvuln.c:3:2)':'union (unnamed at dataset_diviso_filec\/func11735_nonvuln.c:3:2)' lvalue Var 0x130128448 'myunion' 'union (unnamed union at dataset_diviso_filec\/func11735_nonvuln.c:3:2)':'union (unnamed at dataset_diviso_filec\/func11735_nonvuln.c:3:2)'     | `-CallExpr 0x1301286c0 <col:18, col:31> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x130128680 <col:18> 'int ()' Function 0x1301285c8 'GET_4_BYTES' 'int ()'     |   `-RecoveryExpr 0x1301286a0 <col:30> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x130128788 <line:10:2, col:17>       `-ImplicitCastExpr 0x130128770 <col:9, col:17> 'int' <FloatingToIntegral>         `-ImplicitCastExpr 0x130128758 <col:9, col:17> 'float' <LValueToRValue>           `-MemberExpr 0x130128728 <col:9, col:17> 'float' lvalue .retval 0x1301283a0             `-DeclRefExpr 0x130128708 <col:9> 'union (unnamed union at dataset_diviso_filec\/func11735_nonvuln.c:3:2)':'union (unnamed at dataset_diviso_filec\/func11735_nonvuln.c:3:2)' lvalue Var 0x130128448 'myunion' 'union (unnamed union at dataset_diviso_filec\/func11735_nonvuln.c:3:2)':'union (unnamed at dataset_diviso_filec\/func11735_nonvuln.c:3:2)' ","19700":"`-FunctionDecl 0x14000dfa0  line:1:13 invalid cirrus_mem_writeb_mode4and5_16bpp 'void (int *, unsigned int, unsigned int, int)' static   |-ParmVarDecl 0x14000dd28 <col:47, col:64> col:64 invalid s 'int *'   |-ParmVarDecl 0x14000dda8 <line:2:12, col:21> col:21 used mode 'unsigned int'   |-ParmVarDecl 0x14000de28 <line:3:12, col:21> col:21 used offset 'unsigned int'   |-ParmVarDecl 0x14000dea8 <line:4:12, col:21> col:21 invalid mem_value 'int'   `-CompoundStmt 0x140028260 <line:5:1, line:24:1>     |-DeclStmt 0x14000e0e8 <line:6:5, col:10>     | `-VarDecl 0x14000e080 <col:5, col:9> col:9 used x 'int'     |-DeclStmt 0x14000e1a0 <line:7:5, col:29>     | `-VarDecl 0x14000e118 <col:5, col:20> col:14 used val 'unsigned int' cinit     |   `-RecoveryExpr 0x14000e180 <col:20> '<dependent type>' contains-errors lvalue     |-ForStmt 0x140027ea8 <line:11:5, line:21:5>     | |-BinaryOperator 0x14000e2b8 <line:11:10, col:14> 'int' '='     | | |-DeclRefExpr 0x14000e278 <col:10> 'int' lvalue Var 0x14000e080 'x' 'int'     | | `-IntegerLiteral 0x14000e298 <col:14> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x14000e330 <col:17, col:21> 'int' '<'     | | |-ImplicitCastExpr 0x14000e318 <col:17> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x14000e2d8 <col:17> 'int' lvalue Var 0x14000e080 'x' 'int'     | | `-IntegerLiteral 0x14000e2f8 <col:21> 'int' 8     | |-UnaryOperator 0x14000e370 <col:24, col:25> 'int' postfix '++'     | | `-DeclRefExpr 0x14000e350 <col:24> 'int' lvalue Var 0x14000e080 'x' 'int'     | `-CompoundStmt 0x140027e88 <col:29, line:21:5>     |   |-IfStmt 0x140027db0 <line:12:2, line:18:2> has_else     |   | |-BinaryOperator 0x140027800 <line:12:6, col:12> 'unsigned int' contains-errors '&'     |   | | |-ImplicitCastExpr 0x14000e3c8 <col:6> 'unsigned int' contains-errors <LValueToRValue>     |   | | | `-DeclRefExpr 0x14000e388 <col:6> 'unsigned int' contains-errors lvalue Var 0x14000e118 'val' 'unsigned int'     |   | | `-ImplicitCastExpr 0x14000e3e0 <col:12> 'unsigned int' <IntegralCast>     |   | |   `-IntegerLiteral 0x14000e3a8 <col:12> 'int' 128     |   | |-CompoundStmt 0x140027a78 <col:18, line:15:2>     |   | | `-BinaryOperator 0x140027940 <line:13:6, col:16> '<dependent type>' contains-errors '='     |   | |   |-UnaryOperator 0x140027928 <col:6, col:7> '<dependent type>' contains-errors prefix '*' cannot overflow     |   | |   | `-ImplicitCastExpr 0x140027910 <col:7> '<dependent type>' contains-errors <LValueToRValue>     |   | |   |   `-RecoveryExpr 0x1400278f0 <col:7> '<dependent type>' contains-errors lvalue     |   | |   `-CXXDependentScopeMemberExpr 0x140027888 <col:13, col:16> '<dependent type>' contains-errors lvalue ->cirrus_shadow_gr1     |   | |     `-RecoveryExpr 0x140027868 <col:13> '<dependent type>' contains-errors lvalue     |   | `-IfStmt 0x140027d90 <line:15:9, line:18:2>     |   |   |-BinaryOperator 0x140027b00 <line:15:13, col:21> 'int' '=='     |   |   | |-ImplicitCastExpr 0x140027ad0 <col:13> 'unsigned int' <LValueToRValue>     |   |   | | `-DeclRefExpr 0x140027a90 <col:13> 'unsigned int' lvalue ParmVar 0x14000dda8 'mode' 'unsigned int'     |   |   | `-ImplicitCastExpr 0x140027ae8 <col:21> 'unsigned int' <IntegralCast>     |   |   |   `-IntegerLiteral 0x140027ab0 <col:21> 'int' 5     |   |   `-CompoundStmt 0x140027d78 <col:24, line:18:2>     |   |     `-BinaryOperator 0x140027c40 <line:16:6, col:16> '<dependent type>' contains-errors '='     |   |       |-UnaryOperator 0x140027c28 <col:6, col:7> '<dependent type>' contains-errors prefix '*' cannot overflow     |   |       | `-ImplicitCastExpr 0x140027c10 <col:7> '<dependent type>' contains-errors <LValueToRValue>     |   |       |   `-RecoveryExpr 0x140027bf0 <col:7> '<dependent type>' contains-errors lvalue     |   |       `-CXXDependentScopeMemberExpr 0x140027b88 <col:13, col:16> '<dependent type>' contains-errors lvalue ->cirrus_shadow_gr0     |   |         `-RecoveryExpr 0x140027b68 <col:13> '<dependent type>' contains-errors lvalue     |   `-CompoundAssignOperator 0x140027e38 <line:19:2, col:10> 'unsigned int' contains-errors '<<=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'     |     |-DeclRefExpr 0x140027de0 <col:2> 'unsigned int' contains-errors lvalue Var 0x14000e118 'val' 'unsigned int'     |     `-IntegerLiteral 0x140027e00 <col:10> 'int' 1     |-CallExpr 0x140028108 <line:22:5, col:58> '<dependent type>' contains-errors     | |-DeclRefExpr 0x140028040 <col:5> 'int ()' Function 0x140027f88 'cpu_physical_memory_set_dirty' 'int ()'     | `-BinaryOperator 0x1400280e8 <col:35, col:52> '<dependent type>' contains-errors '+'     |   |-CXXDependentScopeMemberExpr 0x140028080 <col:35, col:38> '<dependent type>' contains-errors lvalue ->vram_offset     |   | `-RecoveryExpr 0x140028060 <col:35> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1400280c8 <col:52> 'unsigned int' lvalue ParmVar 0x14000de28 'offset' 'unsigned int'     `-CallExpr 0x140028238 <line:23:5, col:63> '<dependent type>' contains-errors       |-DeclRefExpr 0x140028130 <col:5> 'int ()' Function 0x140027f88 'cpu_physical_memory_set_dirty' 'int ()'       `-BinaryOperator 0x140028218 <col:35, col:61> '<dependent type>' contains-errors '+'         |-BinaryOperator 0x1400281d8 <col:35, col:52> '<dependent type>' contains-errors '+'         | |-CXXDependentScopeMemberExpr 0x140028170 <col:35, col:38> '<dependent type>' contains-errors lvalue ->vram_offset         | | `-RecoveryExpr 0x140028150 <col:35> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x1400281b8 <col:52> 'unsigned int' lvalue ParmVar 0x14000de28 'offset' 'unsigned int'         `-IntegerLiteral 0x1400281f8 <col:61> 'int' 15 ","19759":"`-FunctionDecl 0x12f9281f0  line:1:6 invalid geoposCommand 'void (int *)'   |-ParmVarDecl 0x12f928128 <col:20, col:28> col:28 invalid c 'int *'   `-CompoundStmt 0x12f943748 <col:31, line:26:1>     |-DeclStmt 0x12f928320 <line:2:5, col:10>     | `-VarDecl 0x12f9282b8 <col:5, col:9> col:9 used j 'int'     |-IfStmt 0x12f941ec8 <line:6:5, col:47>     | |-BinaryOperator 0x12f941e98 <col:9, col:44> 'int' contains-errors '&&'     | | |-RecoveryExpr 0x12f941e00 <col:9> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x12f941e60 <col:17, col:44> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12f928720 <col:17> 'int ()' Function 0x12f928668 'checkType' 'int ()'     | |   |-RecoveryExpr 0x12f928740 <col:27> '<dependent type>' contains-errors lvalue     | |   |-RecoveryExpr 0x12f941e20 <col:30> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x12f941e40 <col:36> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12f941eb8 <col:47>     |-CallExpr 0x12f9420b0 <line:9:5, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f941fc8 <col:5> 'int ()' Function 0x12f941f10 'addReplyArrayLen' 'int ()'     | |-RecoveryExpr 0x12f941fe8 <col:22> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x12f942090 <col:24, col:32> '<dependent type>' contains-errors '-'     |   |-CXXDependentScopeMemberExpr 0x12f942028 <col:24, col:27> '<dependent type>' contains-errors lvalue ->argc     |   | `-RecoveryExpr 0x12f942008 <col:24> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x12f942070 <col:32> 'int' 2     `-ForStmt 0x12f943710 <line:10:5, line:25:5>       |-BinaryOperator 0x12f942120 <line:10:10, col:14> 'int' '='       | |-DeclRefExpr 0x12f9420e0 <col:10> 'int' lvalue Var 0x12f9282b8 'j' 'int'       | `-IntegerLiteral 0x12f942100 <col:14> 'int' 2       |-<<<NULL>>>       |-BinaryOperator 0x12f9421c8 <col:17, col:24> 'int' contains-errors '<'       | |-DeclRefExpr 0x12f942140 <col:17> 'int' lvalue Var 0x12f9282b8 'j' 'int'       | `-CXXDependentScopeMemberExpr 0x12f942180 <col:21, col:24> '<dependent type>' contains-errors lvalue ->argc       |   `-RecoveryExpr 0x12f942160 <col:21> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x12f942208 <col:30, col:31> 'int' postfix '++'       | `-DeclRefExpr 0x12f9421e8 <col:30> 'int' lvalue Var 0x12f9282b8 'j' 'int'       `-CompoundStmt 0x12f9436f0 <col:35, line:25:5>         |-DeclStmt 0x12f9422a0 <line:11:9, col:21>         | `-VarDecl 0x12f942238 <col:9, col:16> col:16 used score 'double'         `-IfStmt 0x12f9436c0 <line:12:9, line:24:9> has_else           |-BinaryOperator 0x12f9427b8 <line:12:13, col:66> 'int' contains-errors '||'           | |-UnaryOperator 0x12f942670 <col:13, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow           | | `-ImplicitCastExpr 0x12f942658 <col:14> '<dependent type>' contains-errors <LValueToRValue>           | |   `-RecoveryExpr 0x12f942638 <col:14> '<dependent type>' contains-errors lvalue           | `-BinaryOperator 0x12f942798 <col:22, col:66> 'int' contains-errors '=='           |   |-CallExpr 0x12f942740 <col:22, col:61> '<dependent type>' contains-errors           |   | |-DeclRefExpr 0x12f9423e0 <col:22> 'int ()' Function 0x12f942328 'zsetScore' 'int ()'           |   | |-RecoveryExpr 0x12f942688 <col:32> '<dependent type>' contains-errors lvalue           |   | |-CXXDependentScopeMemberExpr 0x12f9426f8 <col:38, col:50> '<dependent type>' contains-errors lvalue ->ptr           |   | | `-ArraySubscriptExpr 0x12f9426d8 <col:38, col:47> '<dependent type>' contains-errors lvalue           |   | |   |-ImplicitCastExpr 0x12f9426a8 <col:38, col:41> '<dependent type>' contains-errors <LValueToRValue>           |   | |   | `-CXXDependentScopeMemberExpr 0x12f942438 <col:38, col:41> '<dependent type>' contains-errors lvalue ->argv           |   | |   |   `-RecoveryExpr 0x12f942418 <col:38> '<dependent type>' contains-errors lvalue           |   | |   `-ImplicitCastExpr 0x12f9426c0 <col:46> 'int' <LValueToRValue>           |   | |     `-DeclRefExpr 0x12f942480 <col:46> 'int' lvalue Var 0x12f9282b8 'j' 'int'           |   | `-UnaryOperator 0x12f942590 <col:55, col:56> 'double *' prefix '&' cannot overflow           |   |   `-DeclRefExpr 0x12f942538 <col:56> 'double' lvalue Var 0x12f942238 'score' 'double'           |   `-RecoveryExpr 0x12f942778 <col:66> '<dependent type>' contains-errors lvalue           |-CompoundStmt 0x12f942920 <col:73, line:14:9>           | `-CallExpr 0x12f9428f8 <line:13:13, col:32> '<dependent type>' contains-errors           |   |-DeclRefExpr 0x12f9428b8 <col:13> 'int ()' Function 0x12f942800 'addReplyNullArray' 'int ()'           |   `-RecoveryExpr 0x12f9428d8 <col:31> '<dependent type>' contains-errors lvalue           `-CompoundStmt 0x12f943688 <line:14:16, line:24:9>             |-DeclStmt 0x12f942a50 <line:16:13, col:25>             | `-VarDecl 0x12f9429e8 <col:13, col:24> col:20 used xy 'double[2]'             |-IfStmt 0x12f942d00 <line:17:13, line:20:13>             | |-UnaryOperator 0x12f942c58 <line:17:17, col:40> 'int' prefix '!' cannot overflow             | | `-CallExpr 0x12f942bf8 <col:18, col:40> 'int'             | |   |-ImplicitCastExpr 0x12f942be0 <col:18> 'int (*)()' <FunctionToPointerDecay>             | |   | `-DeclRefExpr 0x12f942b48 <col:18> 'int ()' Function 0x12f942a90 'decodeGeohash' 'int ()'             | |   |-ImplicitCastExpr 0x12f942c28 <col:32> 'double' <LValueToRValue>             | |   | `-DeclRefExpr 0x12f942b68 <col:32> 'double' lvalue Var 0x12f942238 'score' 'double'             | |   `-ImplicitCastExpr 0x12f942c40 <col:38> 'double *' <ArrayToPointerDecay>             | |     `-DeclRefExpr 0x12f942b88 <col:38> 'double[2]' lvalue Var 0x12f9429e8 'xy' 'double[2]'             | `-CompoundStmt 0x12f942ce0 <col:43, line:20:13>             |   |-CallExpr 0x12f942cb0 <line:18:17, col:36> '<dependent type>' contains-errors             |   | |-DeclRefExpr 0x12f942c70 <col:17> 'int ()' Function 0x12f942800 'addReplyNullArray' 'int ()'             |   | `-RecoveryExpr 0x12f942c90 <col:35> '<dependent type>' contains-errors lvalue             |   `-ContinueStmt 0x12f942cd8 <line:19:17>             |-CallExpr 0x12f942d80 <line:21:13, col:33> '<dependent type>' contains-errors             | |-DeclRefExpr 0x12f942d20 <col:13> 'int ()' Function 0x12f941f10 'addReplyArrayLen' 'int ()'             | |-RecoveryExpr 0x12f942d40 <col:30> '<dependent type>' contains-errors lvalue             | `-IntegerLiteral 0x12f942d60 <col:32> 'int' 2             |-CallExpr 0x12f943570 <line:22:13, col:44> '<dependent type>' contains-errors             | |-DeclRefExpr 0x12f9434b8 <col:13> 'int ()' Function 0x12f943400 'addReplyHumanLongDouble' 'int ()'             | |-RecoveryExpr 0x12f9434d8 <col:37> '<dependent type>' contains-errors lvalue             | `-ArraySubscriptExpr 0x12f943550 <col:39, col:43> 'double' lvalue             |   |-ImplicitCastExpr 0x12f943538 <col:39> 'double *' <ArrayToPointerDecay>             |   | `-DeclRefExpr 0x12f9434f8 <col:39> 'double[2]' lvalue Var 0x12f9429e8 'xy' 'double[2]'             |   `-IntegerLiteral 0x12f943518 <col:42> 'int' 0             `-CallExpr 0x12f943658 <line:23:13, col:44> '<dependent type>' contains-errors               |-DeclRefExpr 0x12f9435a0 <col:13> 'int ()' Function 0x12f943400 'addReplyHumanLongDouble' 'int ()'               |-RecoveryExpr 0x12f9435c0 <col:37> '<dependent type>' contains-errors lvalue               `-ArraySubscriptExpr 0x12f943638 <col:39, col:43> 'double' lvalue                 |-ImplicitCastExpr 0x12f943620 <col:39> 'double *' <ArrayToPointerDecay>                 | `-DeclRefExpr 0x12f9435e0 <col:39> 'double[2]' lvalue Var 0x12f9429e8 'xy' 'double[2]'                 `-IntegerLiteral 0x12f943600 <col:42> 'int' 1 ","19263":"`-FunctionDecl 0x12b00ddc8  line:1:1 invalid test_loading_error 'int (int)'   |-ParmVarDecl 0x12b00dcf0 <col:21, col:35> col:35 invalid data 'int'   `-CompoundStmt 0x12b027ef0 <line:2:1, line:15:1>     |-DeclStmt 0x12b00df18 <line:3:5, col:32>     | `-VarDecl 0x12b00de90 <col:5, col:28> col:17 used basename 'const char *' cinit     |   `-RecoveryExpr 0x12b00def8 <col:28> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x12b027610 <line:4:5, col:50>     | `-VarDecl 0x12b00df48 <col:5, col:49> col:11 used filename 'char *' cinit     |   `-ImplicitCastExpr 0x12b00e1d8 <col:22, col:49> 'char *' contains-errors <IntegralToPointer>     |     `-CallExpr 0x12b00e198 <col:22, col:49> 'int' contains-errors     |       |-ImplicitCastExpr 0x12b00e180 <col:22> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x12b00e110 <col:22> 'int ()' Function 0x12b00e058 'get_test_filename' 'int ()'     |       `-ImplicitCastExpr 0x12b00e1c0 <col:41> 'const char *' contains-errors <LValueToRValue>     |         `-DeclRefExpr 0x12b00e130 <col:41> 'const char *' contains-errors lvalue Var 0x12b00de90 'basename' 'const char *'     |-CallExpr 0x12b027928 <line:9:5, col:21> 'int' contains-errors     | |-ImplicitCastExpr 0x12b027910 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12b0278d0 <col:5> 'int ()' Function 0x12b027818 'g_free' 'int ()'     | `-ImplicitCastExpr 0x12b027950 <col:13> 'char *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x12b0278f0 <col:13> 'char *' contains-errors lvalue Var 0x12b00df48 'filename' 'char *'     |-CallExpr 0x12b027b40 <line:11:5, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12b027a48 <col:5> 'int ()' Function 0x12b027990 'g_assert' 'int ()'     | `-BinaryOperator 0x12b027b20 <col:15, col:25> 'int' contains-errors '=='     |   |-RecoveryExpr 0x12b027ae0 <col:15> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x12b027b00 <col:25> '<dependent type>' contains-errors lvalue     `-CallExpr 0x12b027dc8 <line:12:5, col:69> '<dependent type>' contains-errors       |-DeclRefExpr 0x12b027b68 <col:5> 'int ()' Function 0x12b027990 'g_assert' 'int ()'       `-CallExpr 0x12b027d90 <col:15, col:68> '<dependent type>' contains-errors         |-DeclRefExpr 0x12b027c68 <col:15> 'int ()' Function 0x12b027bb0 'g_error_matches' 'int ()'         |-RecoveryExpr 0x12b027d30 <col:32> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x12b027d50 <col:39> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x12b027d70 <col:51> '<dependent type>' contains-errors lvalue ","19177":"`-FunctionDecl 0x125123f08  col:42 implicit used sscanf 'int (const char *restrict, const char *restrict, ...)' extern   |-ParmVarDecl 0x125124008 <<invalid sloc>> <invalid sloc> 'const char *restrict'   |-ParmVarDecl 0x125124070 <<invalid sloc>> <invalid sloc> 'const char *restrict'   |-BuiltinAttr 0x125123fb0 <<invalid sloc>> Implicit 913   `-FormatAttr 0x1251240e8 <col:42> Implicit scanf 2 3 ","19197":"`-FunctionDecl 0x15000dda8  line:1:5 rpc_type_of_NPPVariable 'int (int)'   |-ParmVarDecl 0x15000dcd8 <col:29, col:33> col:33 used variable 'int'   `-CompoundStmt 0x150026aa8 <line:2:1, line:29:1>     |-DeclStmt 0x15000df20 <line:3:3, col:11>     | `-VarDecl 0x15000deb8 <col:3, col:7> col:7 used type 'int'     |-SwitchStmt 0x15000df70 <line:4:3, line:27:3>     | |-ImplicitCastExpr 0x15000df58 <line:4:11> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x15000df38 <col:11> 'int' lvalue ParmVar 0x15000dcd8 'variable' 'int'     | `-CompoundStmt 0x150026a00 <col:21, line:27:3>     |   |-BinaryOperator 0x15000e070 <line:8:2, col:9> 'int' contains-errors '='     |   | |-DeclRefExpr 0x15000dff8 <col:2> 'int' lvalue Var 0x15000deb8 'type' 'int'     |   | `-RecoveryExpr 0x15000e050 <col:9> '<dependent type>' contains-errors lvalue     |   |-BreakStmt 0x15000e090 <line:9:2>     |   |-BinaryOperator 0x15000e140 <line:12:2, col:9> 'int' contains-errors '='     |   | |-DeclRefExpr 0x15000e0c8 <col:2> 'int' lvalue Var 0x15000deb8 'type' 'int'     |   | `-RecoveryExpr 0x15000e120 <col:9> '<dependent type>' contains-errors lvalue     |   |-BreakStmt 0x15000e160 <line:13:2>     |   |-BinaryOperator 0x15000e258 <line:19:2, col:9> 'int' contains-errors '='     |   | |-DeclRefExpr 0x15000e1e0 <col:2> 'int' lvalue Var 0x15000deb8 'type' 'int'     |   | `-RecoveryExpr 0x15000e238 <col:9> '<dependent type>' contains-errors lvalue     |   |-BreakStmt 0x15000e278 <line:20:2>     |   |-BinaryOperator 0x15000e310 <line:22:2, col:9> 'int' contains-errors '='     |   | |-DeclRefExpr 0x15000e298 <col:2> 'int' lvalue Var 0x15000deb8 'type' 'int'     |   | `-RecoveryExpr 0x15000e2f0 <col:9> '<dependent type>' contains-errors lvalue     |   |-BreakStmt 0x15000e330 <line:23:2>     |   |-DefaultStmt 0x15000e3d0 <line:24:3, line:25:9>     |   | `-BinaryOperator 0x15000e3b0 <col:2, col:9> 'int' contains-errors '='     |   |   |-DeclRefExpr 0x15000e338 <col:2> 'int' lvalue Var 0x15000deb8 'type' 'int'     |   |   `-RecoveryExpr 0x15000e390 <col:9> '<dependent type>' contains-errors lvalue     |   `-BreakStmt 0x15000e3f0 <line:26:2>     `-ReturnStmt 0x150026a98 <line:28:3, col:10>       `-ImplicitCastExpr 0x150026a80 <col:10> 'int' <LValueToRValue>         `-DeclRefExpr 0x150026a60 <col:10> 'int' lvalue Var 0x15000deb8 'type' 'int' ","19634":"`-FunctionDecl 0x13180de68  line:1:7 format_string_expand 'char *(const char *, int *)'   |-ParmVarDecl 0x13180dcd8 <col:28, col:40> col:40 used text 'const char *'   |-ParmVarDecl 0x13180dd88 <col:46, col:51> col:51 used flags 'int *'   `-CompoundStmt 0x131829560 <line:2:1, line:38:1>     |-DeclStmt 0x13180e0a8 <line:4:2, col:17>     | |-VarDecl 0x13180dfa8 <col:2, col:7> col:7 used code 'char'     | `-VarDecl 0x13180e028 <col:2, col:14> col:14 used ret 'char *'     |-DeclStmt 0x13180e140 <line:5:2, col:9>     | `-VarDecl 0x13180e0d8 <col:2, col:6> col:6 used adv 'int'     |-CallExpr 0x13180e390 <line:7:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13180e270 <col:2> 'int ()' Function 0x13180e1b8 'g_return_val_if_fail' 'int ()'     | |-BinaryOperator 0x13180e350 <col:23, col:31> 'int' contains-errors '!='     | | |-DeclRefExpr 0x13180e290 <col:23> 'const char *' lvalue ParmVar 0x13180dcd8 'text' 'const char *'     | | `-RecoveryExpr 0x13180e330 <col:31> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x13180e370 <col:37> '<dependent type>' contains-errors lvalue     |-IfStmt 0x131828440 <line:11:2, col:30>     | |-BinaryOperator 0x131828390 <col:6, col:15> 'int' contains-errors '!='     | | |-DeclRefExpr 0x131828318 <col:6> 'int *' lvalue ParmVar 0x13180dd88 'flags' 'int *'     | | `-RecoveryExpr 0x131828370 <col:15> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x131828420 <col:21, col:30> 'int' '='     |   |-UnaryOperator 0x1318283e8 <col:21, col:22> 'int' lvalue prefix '*' cannot overflow     |   | `-ImplicitCastExpr 0x1318283d0 <col:22> 'int *' <LValueToRValue>     |   |   `-DeclRefExpr 0x1318283b0 <col:22> 'int *' lvalue ParmVar 0x13180dd88 'flags' 'int *'     |   `-IntegerLiteral 0x131828400 <col:30> 'int' 0     |-BinaryOperator 0x1318284b8 <line:12:2, col:9> 'char' '='     | |-DeclRefExpr 0x131828460 <col:2> 'char' lvalue Var 0x13180dfa8 'code' 'char'     | `-ImplicitCastExpr 0x1318284a0 <col:9> 'char' <IntegralCast>     |   `-IntegerLiteral 0x131828480 <col:9> 'int' 0     |-WhileStmt 0x131829200 <line:13:2, line:33:2>     | |-BinaryOperator 0x131828570 <line:13:9, col:18> 'int' '!='     | | |-ImplicitCastExpr 0x131828558 <col:9, col:10> 'int' <IntegralCast>     | | | `-ImplicitCastExpr 0x131828540 <col:9, col:10> 'char' <LValueToRValue>     | | |   `-UnaryOperator 0x131828510 <col:9, col:10> 'const char' lvalue prefix '*' cannot overflow     | | |     `-ImplicitCastExpr 0x1318284f8 <col:10> 'const char *' <LValueToRValue>     | | |       `-DeclRefExpr 0x1318284d8 <col:10> 'const char *' lvalue ParmVar 0x13180dcd8 'text' 'const char *'     | | `-CharacterLiteral 0x131828528 <col:18> 'int' 0     | `-CompoundStmt 0x1318291d0 <col:24, line:33:2>     |   |-IfStmt 0x131829168 <line:14:3, line:30:3> has_else     |   | |-BinaryOperator 0x1318285f8 <line:14:7, col:15> 'int' '=='     |   | | |-ImplicitCastExpr 0x1318285e0 <col:7> 'int' <IntegralCast>     |   | | | `-ImplicitCastExpr 0x1318285c8 <col:7> 'char' <LValueToRValue>     |   | | |   `-DeclRefExpr 0x131828590 <col:7> 'char' lvalue Var 0x13180dfa8 'code' 'char'     |   | | `-CharacterLiteral 0x1318285b0 <col:15> 'int' 37     |   | |-CompoundStmt 0x131828e60 <col:20, line:25:3>     |   | | |-BinaryOperator 0x131828888 <line:16:4, col:48> 'int' contains-errors '='     |   | | | |-DeclRefExpr 0x131828618 <col:4> 'int' lvalue Var 0x13180e0d8 'adv' 'int'     |   | | | `-CallExpr 0x131828850 <col:10, col:48> '<dependent type>' contains-errors     |   | | |   |-DeclRefExpr 0x131828718 <col:10> 'int ()' Function 0x131828660 'format_expand_styles' 'int ()'     |   | | |   |-RecoveryExpr 0x131828830 <col:31> '<dependent type>' contains-errors lvalue     |   | | |   |-UnaryOperator 0x1318287a0 <col:36, col:37> 'const char **' prefix '&' cannot overflow     |   | | |   | `-DeclRefExpr 0x131828750 <col:37> 'const char *' lvalue ParmVar 0x13180dcd8 'text' 'const char *'     |   | | |   `-DeclRefExpr 0x1318287b8 <col:43> 'int *' lvalue ParmVar 0x13180dd88 'flags' 'int *'     |   | | |-IfStmt 0x131828db8 <line:17:4, line:23:4> has_else     |   | | | |-UnaryOperator 0x1318288e0 <line:17:8, col:9> 'int' prefix '!' cannot overflow     |   | | | | `-ImplicitCastExpr 0x1318288c8 <col:9> 'int' <LValueToRValue>     |   | | | |   `-DeclRefExpr 0x1318288a8 <col:9> 'int' lvalue Var 0x13180e0d8 'adv' 'int'     |   | | | |-CompoundStmt 0x131828cb0 <col:14, line:21:4>     |   | | | | |-CallExpr 0x131828a78 <line:18:5, col:31> '<dependent type>' contains-errors     |   | | | | | |-DeclRefExpr 0x1318289d8 <col:5> 'int ()' Function 0x131828920 'g_string_append_c' 'int ()'     |   | | | | | |-RecoveryExpr 0x131828a58 <col:23> '<dependent type>' contains-errors lvalue     |   | | | | | `-CharacterLiteral 0x131828a10 <col:28> 'int' 37     |   | | | | |-CallExpr 0x131828b48 <line:19:5, col:31> '<dependent type>' contains-errors     |   | | | | | |-DeclRefExpr 0x131828aa8 <col:5> 'int ()' Function 0x131828920 'g_string_append_c' 'int ()'     |   | | | | | |-RecoveryExpr 0x131828b28 <col:23> '<dependent type>' contains-errors lvalue     |   | | | | | `-CharacterLiteral 0x131828ae0 <col:28> 'int' 37     |   | | | | `-CallExpr 0x131828c80 <line:20:5, col:33> '<dependent type>' contains-errors     |   | | | |   |-DeclRefExpr 0x131828b78 <col:5> 'int ()' Function 0x131828920 'g_string_append_c' 'int ()'     |   | | | |   |-RecoveryExpr 0x131828c30 <col:23> '<dependent type>' contains-errors lvalue     |   | | | |   `-UnaryOperator 0x131828c68 <col:28, col:29> 'const char' lvalue prefix '*' cannot overflow     |   | | | |     `-ImplicitCastExpr 0x131828c50 <col:29> 'const char *' <LValueToRValue>     |   | | | |       `-DeclRefExpr 0x131828bb0 <col:29> 'const char *' lvalue ParmVar 0x13180dcd8 'text' 'const char *'     |   | | | `-CompoundStmt 0x131828da0 <line:21:11, line:23:4>     |   | | |   `-CompoundAssignOperator 0x131828d70 <line:22:6, col:20> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'     |   | | |     |-DeclRefExpr 0x131828cd8 <col:6> 'const char *' lvalue ParmVar 0x13180dcd8 'text' 'const char *'     |   | | |     `-BinaryOperator 0x131828d50 <col:14, col:20> 'int' '-'     |   | | |       |-ImplicitCastExpr 0x131828d38 <col:14> 'int' <LValueToRValue>     |   | | |       | `-DeclRefExpr 0x131828cf8 <col:14> 'int' lvalue Var 0x13180e0d8 'adv' 'int'     |   | | |       `-IntegerLiteral 0x131828d18 <col:20> 'int' 1     |   | | `-BinaryOperator 0x131828e40 <line:24:4, col:11> 'char' '='     |   | |   |-DeclRefExpr 0x131828de8 <col:4> 'char' lvalue Var 0x13180dfa8 'code' 'char'     |   | |   `-ImplicitCastExpr 0x131828e28 <col:11> 'char' <IntegralCast>     |   | |     `-IntegerLiteral 0x131828e08 <col:11> 'int' 0     |   | `-CompoundStmt 0x131829150 <line:25:10, line:30:3>     |   |   `-IfStmt 0x131829120 <line:26:4, line:29:33> has_else     |   |     |-BinaryOperator 0x131828f20 <line:26:8, col:17> 'int' '=='     |   |     | |-ImplicitCastExpr 0x131828f08 <col:8, col:9> 'int' <IntegralCast>     |   |     | | `-ImplicitCastExpr 0x131828ef0 <col:8, col:9> 'char' <LValueToRValue>     |   |     | |   `-UnaryOperator 0x131828ec0 <col:8, col:9> 'const char' lvalue prefix '*' cannot overflow     |   |     | |     `-ImplicitCastExpr 0x131828ea8 <col:9> 'const char *' <LValueToRValue>     |   |     | |       `-DeclRefExpr 0x131828e88 <col:9> 'const char *' lvalue ParmVar 0x13180dcd8 'text' 'const char *'     |   |     | `-CharacterLiteral 0x131828ed8 <col:17> 'int' 37     |   |     |-BinaryOperator 0x131828fc8 <line:27:5, col:13> 'char' '='     |   |     | |-DeclRefExpr 0x131828f40 <col:5> 'char' lvalue Var 0x13180dfa8 'code' 'char'     |   |     | `-ImplicitCastExpr 0x131828fb0 <col:12, col:13> 'char' <LValueToRValue>     |   |     |   `-UnaryOperator 0x131828f98 <col:12, col:13> 'const char' lvalue prefix '*' cannot overflow     |   |     |     `-ImplicitCastExpr 0x131828f80 <col:13> 'const char *' <LValueToRValue>     |   |     |       `-DeclRefExpr 0x131828f60 <col:13> 'const char *' lvalue ParmVar 0x13180dcd8 'text' 'const char *'     |   |     `-CallExpr 0x1318290f0 <line:29:5, col:33> '<dependent type>' contains-errors     |   |       |-DeclRefExpr 0x131828fe8 <col:5> 'int ()' Function 0x131828920 'g_string_append_c' 'int ()'     |   |       |-RecoveryExpr 0x1318290a0 <col:23> '<dependent type>' contains-errors lvalue     |   |       `-UnaryOperator 0x1318290d8 <col:28, col:29> 'const char' lvalue prefix '*' cannot overflow     |   |         `-ImplicitCastExpr 0x1318290c0 <col:29> 'const char *' <LValueToRValue>     |   |           `-DeclRefExpr 0x131829020 <col:29> 'const char *' lvalue ParmVar 0x13180dcd8 'text' 'const char *'     |   `-UnaryOperator 0x1318291b8 <line:32:3, col:7> 'const char *' postfix '++'     |     `-DeclRefExpr 0x131829198 <col:3> 'const char *' lvalue ParmVar 0x13180dcd8 'text' 'const char *'     |-BinaryOperator 0x131829328 <line:35:2, col:13> 'char *' contains-errors '='     | |-DeclRefExpr 0x131829220 <col:2> 'char *' lvalue Var 0x13180e028 'ret' 'char *'     | `-CXXDependentScopeMemberExpr 0x1318292e0 <col:8, col:13> '<dependent type>' contains-errors lvalue ->str     |   `-RecoveryExpr 0x1318292c0 <col:8> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1318294e8 <line:36:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x131829428 <col:2> 'int ()' Function 0x131829370 'g_string_free' 'int ()'     | |-RecoveryExpr 0x1318294a8 <col:16> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1318294c8 <col:21> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x131829550 <line:37:2, col:9>       `-ImplicitCastExpr 0x131829538 <col:9> 'char *' <LValueToRValue>         `-DeclRefExpr 0x131829518 <col:9> 'char *' lvalue Var 0x13180e028 'ret' 'char *' ","19685":"`-FunctionDecl 0x12e142410  col:6 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x12e142510 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x12e142578 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x12e1424b8 <<invalid sloc>> Implicit 887 ","19421":"`-FunctionDecl 0x14480dfa8  line:1:1 invalid decompress 'int (int *, int *, int, int)'   |-ParmVarDecl 0x14480dd28 <col:12, col:25> col:25 invalid pinfo 'int *'   |-ParmVarDecl 0x14480dda8 <col:32, col:42> col:42 invalid tvb 'int *'   |-ParmVarDecl 0x14480de28 <col:47, col:52> col:52 used offset 'int'   |-ParmVarDecl 0x14480dea8 <col:60, col:65> col:65 used length 'int'   `-CompoundStmt 0x144827998 <line:2:1, line:53:1>     |-IfStmt 0x144123150 <line:3:2, line:9:2>     | |-CallExpr 0x14480e210 <line:3:5, col:27> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14480e1d0 <col:5> 'int ()' Function 0x14480e118 'PINFO_FD_VISITED' 'int ()'     | | `-RecoveryExpr 0x14480e1f0 <col:22> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x144123128 <col:30, line:9:2>     |   |-DeclStmt 0x14480e2d0 <line:4:3, col:99>     |   | `-VarDecl 0x14480e250 <col:3, col:18> col:18 invalid saved_data 'const int *'     |   |-CallExpr 0x1441230a8 <line:7:3, col:54> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x144122f90 <col:3> 'int ()' Function 0x144122ed8 'add_new_data_source' 'int ()'     |   | |-RecoveryExpr 0x144122fb0 <col:23> '<dependent type>' contains-errors lvalue     |   | |-RecoveryExpr 0x144123088 <col:30> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x144123030 <col:49> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x144123118 <line:8:3, col:10>     |     `-RecoveryExpr 0x1441230f8 <col:10> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x144123388 <line:11:2, col:54>     | `-VarDecl 0x144123188 <col:2, col:16> col:16 invalid buf 'const int *'     |-DeclStmt 0x1441236e0 <line:13:2, col:53>     | `-VarDecl 0x144123598 <col:2, col:23> col:14 invalid trailer 'int[4]' static     |-IfStmt 0x144123b70 <line:14:2, line:24:2>     | |-RecoveryExpr 0x1441236f8 <line:14:5, col:25> '_Bool' contains-errors     | `-CompoundStmt 0x144123b50 <col:35, line:24:2>     |   |-DeclStmt 0x1441238f8 <line:18:3, col:56>     |   | `-VarDecl 0x144123790 <col:3, col:7> col:7 used err 'int'     |   `-IfStmt 0x144123b30 <line:19:3, line:23:3>     |     |-RecoveryExpr 0x144123930 <line:19:6, col:13> '_Bool' contains-errors     |     `-CompoundStmt 0x144123b18 <col:19, line:23:3>     |       `-CallExpr 0x144123ad8 <line:21:4, col:30> 'int'     |         |-ImplicitCastExpr 0x144123ac0 <col:4> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x144123a50 <col:4> 'int ()' Function 0x144123998 'REPORT_DISSECTOR_BUG' 'int ()'     |         `-ImplicitCastExpr 0x144123b00 <col:25> 'char *' <ArrayToPointerDecay>     |           `-StringLiteral 0x144123a70 <col:25> 'char[4]' lvalue \"STR\"     |-DeclStmt 0x144123d30 <line:32:2, col:50>     | `-VarDecl 0x144123bc8 <col:2, col:6> col:6 used err 'int'     |-IfStmt 0x144123dd0 <line:33:2, line:35:2>     | |-BinaryOperator 0x144123da0 <line:33:5, col:11> 'int' '<'     | | |-ImplicitCastExpr 0x144123d88 <col:5> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x144123d48 <col:5> 'int' lvalue Var 0x144123bc8 'err' 'int'     | | `-IntegerLiteral 0x144123d68 <col:11> 'int' 0     | `-CompoundStmt 0x144123dc0 <col:14, line:35:2>     `-IfStmt 0x144827508 <line:40:2, line:42:2>       |-BinaryOperator 0x1448274d8 <line:40:5, col:11> 'int' '<'       | |-ImplicitCastExpr 0x1448274c0 <col:5> 'int' <LValueToRValue>       | | `-DeclRefExpr 0x144827480 <col:5> 'int' lvalue Var 0x144123bc8 'err' 'int'       | `-IntegerLiteral 0x1448274a0 <col:11> 'int' 0       `-CompoundStmt 0x1448274f8 <col:14, line:42:2> ","19262":"`-FunctionDecl 0x12480e038  line:1:12 invalid php_swoole_unserialize 'int (void *, int, int *, int *, long)'   |-ParmVarDecl 0x12480dcf0 <col:35, col:41> col:41 used buffer 'void *'   |-ParmVarDecl 0x12480dd70 <col:49, col:56> col:56 referenced invalid len 'int'   |-ParmVarDecl 0x12480de28 <col:61, col:67> col:67 invalid return_value 'int *'   |-ParmVarDecl 0x12480dea8 <col:81, col:87> col:87 invalid object_args 'int *'   |-ParmVarDecl 0x12480df28 <col:100, col:105> col:105 used flag 'long'   `-CompoundStmt 0x124828b30 <line:2:1, line:60:1>     `-SwitchStmt 0x12480e190 <line:6:5, line:57:5>       |-RecoveryExpr 0x12480e170 <line:6:13> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x124828ab0 <line:7:5, line:57:5>         |-BinaryOperator 0x124827820 <line:11:13, col:43> '<dependent type>' contains-errors '='         | |-CallExpr 0x12480e3a0 <col:13, col:39> '<dependent type>' contains-errors         | | |-DeclRefExpr 0x12480e360 <col:13> 'int ()' Function 0x12480e2a8 'Z_TYPE_INFO_P' 'int ()'         | | `-RecoveryExpr 0x12480e380 <col:27> '<dependent type>' contains-errors lvalue         | `-RecoveryExpr 0x124827800 <col:43> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x124827840 <line:12:13>         |-CallExpr 0x124827a10 <line:14:13, col:63> '<dependent type>' contains-errors         | |-DeclRefExpr 0x124827940 <col:13> 'int ()' Function 0x124827888 'swoole_unserialize_long' 'int ()'         | |-DeclRefExpr 0x124827960 <col:37> 'void *' lvalue ParmVar 0x12480dcf0 'buffer' 'void *'         | |-RecoveryExpr 0x124827980 <col:45> '<dependent type>' contains-errors lvalue         | `-RecoveryExpr 0x1248279f0 <col:59> '<dependent type>' contains-errors lvalue         |-BinaryOperator 0x124827b08 <line:15:13, col:43> '<dependent type>' contains-errors '='         | |-CallExpr 0x124827a88 <col:13, col:39> '<dependent type>' contains-errors         | | |-DeclRefExpr 0x124827a48 <col:13> 'int ()' Function 0x12480e2a8 'Z_TYPE_INFO_P' 'int ()'         | | `-RecoveryExpr 0x124827a68 <col:27> '<dependent type>' contains-errors lvalue         | `-RecoveryExpr 0x124827ae8 <col:43> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x124827b28 <line:16:13>         |-CallExpr 0x124827c88 <line:18:13, col:56> '<dependent type>' contains-errors         | |-DeclRefExpr 0x124827c28 <col:13> 'int ()' Function 0x124827b70 'swoole_unserialize_raw' 'int ()'         | |-DeclRefExpr 0x124827c48 <col:36> 'void *' lvalue ParmVar 0x12480dcf0 'buffer' 'void *'         | `-RecoveryExpr 0x124827c68 <col:44> '<dependent type>' contains-errors lvalue         |-BinaryOperator 0x124827d78 <line:19:13, col:43> '<dependent type>' contains-errors '='         | |-CallExpr 0x124827cf8 <col:13, col:39> '<dependent type>' contains-errors         | | |-DeclRefExpr 0x124827cb8 <col:13> 'int ()' Function 0x12480e2a8 'Z_TYPE_INFO_P' 'int ()'         | | `-RecoveryExpr 0x124827cd8 <col:27> '<dependent type>' contains-errors lvalue         | `-RecoveryExpr 0x124827d58 <col:43> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x124827d98 <line:20:13>         |-BreakStmt 0x124828078 <line:25:13>         |-CompoundStmt 0x1248286d8 <line:27:9, line:41:9>         | |-IfStmt 0x1248283a0 <line:28:13, line:32:13>         | | |-BinaryOperator 0x124828210 <line:28:17, col:55> 'int' contains-errors '<'         | | | |-CallExpr 0x1248281c0 <col:17, col:51> '<dependent type>' contains-errors         | | | | |-DeclRefExpr 0x124828160 <col:17> 'int ()' Function 0x1248280a8 'swoole_seria_check_eof' 'int ()'         | | | | |-DeclRefExpr 0x124828180 <col:40> 'void *' lvalue ParmVar 0x12480dcf0 'buffer' 'void *'         | | | | `-RecoveryExpr 0x1248281a0 <col:48> '<dependent type>' contains-errors lvalue         | | | `-IntegerLiteral 0x1248281f0 <col:55> 'int' 0         | | `-CompoundStmt 0x124828390 <line:29:13, line:32:13>         | |-IfStmt 0x1248286b0 <line:36:13, line:39:13>         | | |-RecoveryExpr 0x124828680 <line:36:17, col:72> '_Bool' contains-errors         | | `-CompoundStmt 0x1248286a0 <line:37:13, line:39:13>         | `-BreakStmt 0x1248286d0 <line:40:13>         |-IfStmt 0x124828830 <line:43:13, line:47:13>         | |-BinaryOperator 0x1248287b0 <line:43:17, col:55> 'int' contains-errors '<'         | | |-CallExpr 0x124828760 <col:17, col:51> '<dependent type>' contains-errors         | | | |-DeclRefExpr 0x124828700 <col:17> 'int ()' Function 0x1248280a8 'swoole_seria_check_eof' 'int ()'         | | | |-DeclRefExpr 0x124828720 <col:40> 'void *' lvalue ParmVar 0x12480dcf0 'buffer' 'void *'         | | | `-RecoveryExpr 0x124828740 <col:48> '<dependent type>' contains-errors lvalue         | | `-IntegerLiteral 0x124828790 <col:55> 'int' 0         | `-CompoundStmt 0x124828820 <line:44:13, line:47:13>         |-IfStmt 0x124828a20 <line:49:13, line:52:13>         | |-RecoveryExpr 0x1248289f0 <line:49:17, col:98> '_Bool' contains-errors         | `-CompoundStmt 0x124828a10 <line:50:13, line:52:13>         |-BreakStmt 0x124828a40 <line:53:13>         `-DefaultStmt 0x124828a90 <line:54:9, col:16>           `-NullStmt 0x124828a88 <col:16> ","19976":"`-FunctionDecl 0x15800ddf8  line:1:1 invalid dns_zone_getrequestexpire 'int (int *)'   |-ParmVarDecl 0x15800dd28 <col:27, col:39> col:39 invalid zone 'int *'   `-CompoundStmt 0x15800e228 <col:45, line:4:1>     |-CallExpr 0x15800e168 <line:2:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15800e000 <col:2> 'int ()' Function 0x15800df48 'REQUIRE' 'int ()'     | `-CallExpr 0x15800e140 <col:10, col:29> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15800e100 <col:10> 'int ()' Function 0x15800e048 'DNS_ZONE_VALID' 'int ()'     |   `-RecoveryExpr 0x15800e120 <col:25> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x15800e218 <line:3:2, col:29>       `-ParenExpr 0x15800e1f8 <col:9, col:29> '<dependent type>' contains-errors lvalue         `-CXXDependentScopeMemberExpr 0x15800e1b0 <col:10, col:16> '<dependent type>' contains-errors lvalue ->requestexpire           `-RecoveryExpr 0x15800e190 <col:10> '<dependent type>' contains-errors lvalue ","20014":"`-FunctionDecl 0x12b01f638  line:1:5 invalid vnc_zywrle_send_framebuffer_update 'int (int *, int, int, int, int)'   |-ParmVarDecl 0x12b01f328 <col:40, col:50> col:50 referenced invalid vs 'int *'   |-ParmVarDecl 0x12b01f3a8 <col:54, col:58> col:58 used x 'int'   |-ParmVarDecl 0x12b01f428 <col:61, col:65> col:65 used y 'int'   |-ParmVarDecl 0x12b01f4a8 <col:68, col:72> col:72 used w 'int'   |-ParmVarDecl 0x12b01f528 <col:75, col:79> col:79 used h 'int'   `-CompoundStmt 0x12b9052d8 <line:2:1, line:5:1>     |-BinaryOperator 0x12b01f838 <line:3:5, col:21> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12b01f798 <col:5, col:14> '<dependent type>' contains-errors lvalue .type     | | `-CXXDependentScopeMemberExpr 0x12b01f750 <col:5, col:9> '<dependent type>' contains-errors lvalue ->zrle     | |   `-RecoveryExpr 0x12b01f728 <col:5> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x12b01f708 <col:5> 'int *' lvalue ParmVar 0x12b01f328 'vs' 'int *'     | `-RecoveryExpr 0x12b01f818 <col:21> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12b9052c8 <line:4:5, col:55>       `-CallExpr 0x12b905280 <col:12, col:55> '<dependent type>' contains-errors         |-DeclRefExpr 0x12b01f9b0 <col:12> 'int ()' Function 0x12b01f8f8 'zrle_send_framebuffer_update' 'int ()'         |-RecoveryExpr 0x12b01f9d0 <col:41> '<dependent type>' contains-errors lvalue         |-DeclRefExpr 0x12b905200 <col:45> 'int' lvalue ParmVar 0x12b01f3a8 'x' 'int'         |-DeclRefExpr 0x12b905220 <col:48> 'int' lvalue ParmVar 0x12b01f428 'y' 'int'         |-DeclRefExpr 0x12b905240 <col:51> 'int' lvalue ParmVar 0x12b01f4a8 'w' 'int'         `-DeclRefExpr 0x12b905260 <col:54> 'int' lvalue ParmVar 0x12b01f528 'h' 'int' ","19787":"`-FunctionDecl 0x12b826808  line:1:1 parse_RESUBMIT 'int (char *, struct ofpbuf *, enum ofputil_protocol *)'   |-ParmVarDecl 0x12b80dcd8 <col:16, col:22> col:22 used arg 'char *'   |-ParmVarDecl 0x12b80e2c8 <col:27, col:42> col:42 used ofpacts 'struct ofpbuf *'   |-ParmVarDecl 0x12b8266c8 <line:2:16, col:39> col:39 usable_protocols 'enum ofputil_protocol *'   `-CompoundStmt 0x12b82a678 <line:3:1, line:37:1>     |-DeclStmt 0x12b826af8 <line:4:5, col:37>     | |-RecordDecl 0x12b826910 <col:5, col:12> col:12 struct ofpact_resubmit     | `-VarDecl 0x12b826a78 <col:5, col:29> col:29 used resubmit 'struct ofpact_resubmit *'     |-DeclStmt 0x12b826c28 <line:5:5, col:30>     | |-VarDecl 0x12b826b28 <col:5, col:11> col:11 used in_port_s 'char *'     | `-VarDecl 0x12b826ba8 <col:5, col:23> col:23 used table_s 'char *'     |-BinaryOperator 0x12b826e70 <line:7:5, col:43> 'struct ofpact_resubmit *' '='     | |-DeclRefExpr 0x12b826c40 <col:5> 'struct ofpact_resubmit *' lvalue Var 0x12b826a78 'resubmit' 'struct ofpact_resubmit *'     | `-ImplicitCastExpr 0x12b826e58 <col:16, col:43> 'struct ofpact_resubmit *' <IntegralToPointer>     |   `-CallExpr 0x12b826e18 <col:16, col:43> 'int'     |     |-ImplicitCastExpr 0x12b826e00 <col:16> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x12b826d90 <col:16> 'int ()' Function 0x12b826cd8 'ofpact_put_RESUBMIT' 'int ()'     |     `-ImplicitCastExpr 0x12b826e40 <col:36> 'struct ofpbuf *' <LValueToRValue>     |       `-DeclRefExpr 0x12b826db0 <col:36> 'struct ofpbuf *' lvalue ParmVar 0x12b80e2c8 'ofpacts' 'struct ofpbuf *'     |-BinaryOperator 0x12b8270f8 <line:9:5, col:35> 'char *' '='     | |-DeclRefExpr 0x12b826e90 <col:5> 'char *' lvalue Var 0x12b826b28 'in_port_s' 'char *'     | `-ImplicitCastExpr 0x12b8270e0 <col:17, col:35> 'char *' <IntegralToPointer>     |   `-CallExpr 0x12b827098 <col:17, col:35> 'int'     |     |-ImplicitCastExpr 0x12b827080 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x12b826f90 <col:17> 'int ()' Function 0x12b826ed8 'strsep' 'int ()'     |     |-UnaryOperator 0x12b827000 <col:24, col:25> 'char **' prefix '&' cannot overflow     |     | `-DeclRefExpr 0x12b826fb0 <col:25> 'char *' lvalue ParmVar 0x12b80dcd8 'arg' 'char *'     |     `-ImplicitCastExpr 0x12b8270c8 <col:30> 'char *' <ArrayToPointerDecay>     |       `-StringLiteral 0x12b827060 <col:30> 'char[4]' lvalue \"STR\"     |-IfStmt 0x12b829b08 <line:10:5, line:16:5> has_else     | |-BinaryOperator 0x12b8271f8 <line:10:9, col:33> 'int' '&&'     | | |-ImplicitCastExpr 0x12b8271b0 <col:9> 'char *' <LValueToRValue>     | | | `-DeclRefExpr 0x12b827118 <col:9> 'char *' lvalue Var 0x12b826b28 'in_port_s' 'char *'     | | `-ImplicitCastExpr 0x12b8271e0 <col:22, col:33> 'int' <IntegralCast>     | |   `-ImplicitCastExpr 0x12b8271c8 <col:22, col:33> 'char' <LValueToRValue>     | |     `-ArraySubscriptExpr 0x12b827190 <col:22, col:33> 'char' lvalue     | |       |-ImplicitCastExpr 0x12b827178 <col:22> 'char *' <LValueToRValue>     | |       | `-DeclRefExpr 0x12b827138 <col:22> 'char *' lvalue Var 0x12b826b28 'in_port_s' 'char *'     | |       `-IntegerLiteral 0x12b827158 <col:32> 'int' 0     | |-CompoundStmt 0x12b829a00 <col:36, line:14:5>     | | `-IfStmt 0x12b8275d8 <line:11:9, line:13:9>     | |   |-UnaryOperator 0x12b8273e0 <line:11:13, col:68> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   | `-CallExpr 0x12b8273b0 <col:14, col:68> '<dependent type>' contains-errors     | |   |   |-DeclRefExpr 0x12b8272f8 <col:14> 'int ()' Function 0x12b827240 'ofputil_port_from_string' 'int ()'     | |   |   |-DeclRefExpr 0x12b827318 <col:39> 'char *' lvalue Var 0x12b826b28 'in_port_s' 'char *'     | |   |   `-UnaryOperator 0x12b827398 <col:50, col:61> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   |     `-RecoveryExpr 0x12b827370 <col:51, col:61> '<dependent type>' contains-errors lvalue     | |   |       `-DeclRefExpr 0x12b827338 <col:51> 'struct ofpact_resubmit *' lvalue Var 0x12b826a78 'resubmit' 'struct ofpact_resubmit *'     | |   `-CompoundStmt 0x12b8275c0 <col:71, line:13:9>     | |     `-ReturnStmt 0x12b8275b0 <line:12:13, col:46>     | |       `-CallExpr 0x12b827550 <col:20, col:46> 'int'     | |         |-ImplicitCastExpr 0x12b827538 <col:20> 'int (*)()' <FunctionToPointerDecay>     | |         | `-DeclRefExpr 0x12b8274d8 <col:20> 'int ()' Function 0x12b827420 'xasprintf' 'int ()'     | |         |-ImplicitCastExpr 0x12b827580 <col:30> 'char *' <ArrayToPointerDecay>     | |         | `-StringLiteral 0x12b8274f8 <col:30> 'char[4]' lvalue \"STR\"     | |         `-ImplicitCastExpr 0x12b827598 <col:37> 'char *' <LValueToRValue>     | |           `-DeclRefExpr 0x12b827518 <col:37> 'char *' lvalue Var 0x12b826b28 'in_port_s' 'char *'     | `-CompoundStmt 0x12b829af0 <line:14:12, line:16:5>     |   `-BinaryOperator 0x12b829ad0 <line:15:9, col:29> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x12b829a50 <col:9, col:19> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x12b829a18 <col:9> 'struct ofpact_resubmit *' lvalue Var 0x12b826a78 'resubmit' 'struct ofpact_resubmit *'     |     `-RecoveryExpr 0x12b829ab0 <col:29> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12b829c48 <line:18:5, col:33> 'char *' '='     | |-DeclRefExpr 0x12b829b38 <col:5> 'char *' lvalue Var 0x12b826ba8 'table_s' 'char *'     | `-ImplicitCastExpr 0x12b829c30 <col:15, col:33> 'char *' <IntegralToPointer>     |   `-CallExpr 0x12b829be8 <col:15, col:33> 'int'     |     |-ImplicitCastExpr 0x12b829bd0 <col:15> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x12b829b58 <col:15> 'int ()' Function 0x12b826ed8 'strsep' 'int ()'     |     |-UnaryOperator 0x12b829b98 <col:22, col:23> 'char **' prefix '&' cannot overflow     |     | `-DeclRefExpr 0x12b829b78 <col:23> 'char *' lvalue ParmVar 0x12b80dcd8 'arg' 'char *'     |     `-ImplicitCastExpr 0x12b829c18 <col:28> 'char *' <ArrayToPointerDecay>     |       `-StringLiteral 0x12b829bb0 <col:28> 'char[4]' lvalue \"STR\"     |-IfStmt 0x12b82a320 <line:19:5, line:30:5> has_else     | |-BinaryOperator 0x12b829d48 <line:19:9, col:29> 'int' '&&'     | | |-ImplicitCastExpr 0x12b829d00 <col:9> 'char *' <LValueToRValue>     | | | `-DeclRefExpr 0x12b829c68 <col:9> 'char *' lvalue Var 0x12b826ba8 'table_s' 'char *'     | | `-ImplicitCastExpr 0x12b829d30 <col:20, col:29> 'int' <IntegralCast>     | |   `-ImplicitCastExpr 0x12b829d18 <col:20, col:29> 'char' <LValueToRValue>     | |     `-ArraySubscriptExpr 0x12b829ce0 <col:20, col:29> 'char' lvalue     | |       |-ImplicitCastExpr 0x12b829cc8 <col:20> 'char *' <LValueToRValue>     | |       | `-DeclRefExpr 0x12b829c88 <col:20> 'char *' lvalue Var 0x12b826ba8 'table_s' 'char *'     | |       `-IntegerLiteral 0x12b829ca8 <col:28> 'int' 0     | |-CompoundStmt 0x12b82a238 <col:32, line:28:5>     | | |-DeclStmt 0x12b829de8 <line:21:9, col:20>     | | | `-VarDecl 0x12b829d80 <col:9, col:15> col:15 used error 'char *'     | | |-BinaryOperator 0x12b82a070 <line:23:9, col:46> 'char *' '='     | | | |-DeclRefExpr 0x12b829e00 <col:9> 'char *' lvalue Var 0x12b829d80 'error' 'char *'     | | | `-ImplicitCastExpr 0x12b82a058 <col:17, col:46> 'char *' <IntegralToPointer>     | | |   `-CallExpr 0x12b82a010 <col:17, col:46> 'int'     | | |     |-ImplicitCastExpr 0x12b829ff8 <col:17> 'int (*)()' <FunctionToPointerDecay>     | | |     | `-DeclRefExpr 0x12b829f00 <col:17> 'int ()' Function 0x12b829e48 'str_to_u32' 'int ()'     | | |     |-ImplicitCastExpr 0x12b82a040 <col:28> 'char *' <LValueToRValue>     | | |     | `-DeclRefExpr 0x12b829f20 <col:28> 'char *' lvalue Var 0x12b826ba8 'table_s' 'char *'     | | |     `-UnaryOperator 0x12b829fe0 <col:37, col:38> 'char **' prefix '&' cannot overflow     | | |       `-DeclRefExpr 0x12b829fc0 <col:38> 'char *' lvalue Var 0x12b826ba8 'table_s' 'char *'     | | |-IfStmt 0x12b82a140 <line:24:9, line:26:9>     | | | |-ImplicitCastExpr 0x12b82a0b0 <line:24:13> 'char *' <LValueToRValue>     | | | | `-DeclRefExpr 0x12b82a090 <col:13> 'char *' lvalue Var 0x12b829d80 'error' 'char *'     | | | `-CompoundStmt 0x12b82a128 <col:20, line:26:9>     | | |   `-ReturnStmt 0x12b82a118 <line:25:13, col:20>     | | |     `-ImplicitCastExpr 0x12b82a100 <col:20> 'int' <PointerToIntegral>     | | |       `-ImplicitCastExpr 0x12b82a0e8 <col:20> 'char *' <LValueToRValue>     | | |         `-DeclRefExpr 0x12b82a0c8 <col:20> 'char *' lvalue Var 0x12b829d80 'error' 'char *'     | | `-BinaryOperator 0x12b82a218 <line:27:9, col:30> '<dependent type>' contains-errors '='     | |   |-RecoveryExpr 0x12b82a198 <col:9, col:19> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x12b82a160 <col:9> 'struct ofpact_resubmit *' lvalue Var 0x12b826a78 'resubmit' 'struct ofpact_resubmit *'     | |   `-DeclRefExpr 0x12b82a1f8 <col:30> 'char *' lvalue Var 0x12b826ba8 'table_s' 'char *'     | `-CompoundStmt 0x12b82a308 <line:28:12, line:30:5>     |   `-BinaryOperator 0x12b82a2e8 <line:29:9, col:30> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x12b82a2a0 <col:9, col:19> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x12b82a268 <col:9> 'struct ofpact_resubmit *' lvalue Var 0x12b826a78 'resubmit' 'struct ofpact_resubmit *'     |     `-IntegerLiteral 0x12b82a2c8 <col:30> 'int' 255     `-IfStmt 0x12b82a658 <line:32:5, line:35:5>       |-RecoveryExpr 0x12b82a450 <line:32:9, col:68> '_Bool' contains-errors       `-CompoundStmt 0x12b82a640 <col:73, line:35:5>         `-ReturnStmt 0x12b82a630 <line:33:9, line:34:29>           `-CallExpr 0x12b82a5f0 <line:33:16, line:34:29> 'int'             |-ImplicitCastExpr 0x12b82a5d8 <line:33:16> 'int (*)()' <FunctionToPointerDecay>             | `-DeclRefExpr 0x12b82a550 <col:16> 'int ()' Function 0x12b82a498 'xstrdup' 'int ()'             `-ImplicitCastExpr 0x12b82a618 <col:24, line:34:24> 'char *' <ArrayToPointerDecay>               `-StringLiteral 0x12b82a5b0 <line:33:24, line:34:24> 'char[7]' lvalue \"STRSTR\" ","19357":"`-FunctionDecl 0x16080b728  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x16080b828 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x16080b890 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x16080b8f8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x16080b7d0 <<invalid sloc>> Implicit 882 ","19979":"`-FunctionDecl 0x14d128750  line:1:13 io_req_task_submit 'void (struct callback_head *)' static   |-ParmVarDecl 0x14d128648 <col:32, col:54> col:54 used cb 'struct callback_head *'   `-CompoundStmt 0x14d140f88 <line:2:1, line:6:1>     |-DeclStmt 0x14d140dc0 <line:3:2, col:69>     | |-RecordDecl 0x14d140a48 <col:2, col:9> col:9 struct io_kiocb     | `-VarDecl 0x14d140bb8 <col:2, col:19> col:19 used req 'struct io_kiocb *'     `-CallExpr 0x14d140f48 <line:5:2, col:26> 'int'       |-ImplicitCastExpr 0x14d140f30 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x14d140eb8 <col:2> 'int ()' Function 0x14d140e00 '__io_req_task_submit' 'int ()'       `-ImplicitCastExpr 0x14d140f70 <col:23> 'struct io_kiocb *' <LValueToRValue>         `-DeclRefExpr 0x14d140ed8 <col:23> 'struct io_kiocb *' lvalue Var 0x14d140bb8 'req' 'struct io_kiocb *' ","19905":"`-FunctionDecl 0x13d128758  line:1:12 m88rs2000_frontend_attach 'int (struct dvb_usb_adapter *)' static   |-ParmVarDecl 0x13d128648 <col:38, col:62> col:62 used d 'struct dvb_usb_adapter *'   `-CompoundStmt 0x13d143638 <line:2:1, line:24:1>     |-IfStmt 0x13d140fb8 <line:6:2, line:7:12>     | |-BinaryOperator 0x13d140db0 <line:6:6, col:56> 'int' contains-errors '<'     | | |-CallExpr 0x13d140d60 <col:6, col:52> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x13d140b80 <col:6> 'int ()' Function 0x13d140ac8 'dvb_usb_generic_rw' 'int ()'     | | | |-RecoveryExpr 0x13d140bd8 <col:25, col:28> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x13d140ba0 <col:25> 'struct dvb_usb_adapter *' lvalue ParmVar 0x13d128648 'd' 'struct dvb_usb_adapter *'     | | | |-RecoveryExpr 0x13d140d20 <col:33> '<dependent type>' contains-errors lvalue     | | | |-IntegerLiteral 0x13d140c18 <col:39> 'int' 1     | | | |-RecoveryExpr 0x13d140d40 <col:42> '<dependent type>' contains-errors lvalue     | | | |-IntegerLiteral 0x13d140c50 <col:48> 'int' 1     | | | `-IntegerLiteral 0x13d140c70 <col:51> 'int' 0     | | `-IntegerLiteral 0x13d140ce0 <col:56> 'int' 0     | `-CallExpr 0x13d140f78 <line:7:3, col:12> 'int'     |   |-ImplicitCastExpr 0x13d140f60 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x13d140eb0 <col:3> 'int ()' Function 0x13d140df8 'err' 'int ()'     |   `-ImplicitCastExpr 0x13d140fa0 <col:7> 'char *' <ArrayToPointerDecay>     |     `-StringLiteral 0x13d140f10 <col:7> 'char[4]' lvalue \"STR\"     |-BinaryOperator 0x13d1414c8 <line:9:2, line:10:23> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13d1413f0 <line:9:2, col:16> '<dependent type>' contains-errors lvalue .fe     | | `-ArraySubscriptExpr 0x13d1413d0 <col:2, col:14> '<dependent type>' contains-errors lvalue     | |   |-ImplicitCastExpr 0x13d1413b8 <col:2, col:5> '<dependent type>' contains-errors <LValueToRValue>     | |   | `-RecoveryExpr 0x13d141010 <col:2, col:5> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x13d140fd8 <col:2> 'struct dvb_usb_adapter *' lvalue ParmVar 0x13d128648 'd' 'struct dvb_usb_adapter *'     | |   `-IntegerLiteral 0x13d141038 <col:13> 'int' 0     | `-CallExpr 0x13d141490 <col:21, line:10:23> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13d1411b8 <line:9:21> 'int ()' Function 0x13d141100 'dvb_attach' 'int ()'     |   |-RecoveryExpr 0x13d141438 <col:32> '<dependent type>' contains-errors lvalue     |   |-UnaryOperator 0x13d141478 <col:50, col:51> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x13d141458 <col:51> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x13d1412c8 <line:10:6, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-CXXDependentScopeMemberExpr 0x13d141280 <col:7, col:15> '<dependent type>' contains-errors lvalue ->i2c_adap     |       `-RecoveryExpr 0x13d141258 <col:7, col:10> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x13d141220 <col:7> 'struct dvb_usb_adapter *' lvalue ParmVar 0x13d128648 'd' 'struct dvb_usb_adapter *'     |-IfStmt 0x13d141808 <line:12:2, line:13:11>     | |-BinaryOperator 0x13d141740 <line:12:6, col:26> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x13d1416d8 <col:6, col:20> '<dependent type>' contains-errors lvalue .fe     | | | `-ArraySubscriptExpr 0x13d1416b8 <col:6, col:18> '<dependent type>' contains-errors lvalue     | | |   |-ImplicitCastExpr 0x13d1416a0 <col:6, col:9> '<dependent type>' contains-errors <LValueToRValue>     | | |   | `-RecoveryExpr 0x13d141520 <col:6, col:9> '<dependent type>' contains-errors lvalue     | | |   |   `-DeclRefExpr 0x13d1414e8 <col:6> 'struct dvb_usb_adapter *' lvalue ParmVar 0x13d128648 'd' 'struct dvb_usb_adapter *'     | | |   `-IntegerLiteral 0x13d141548 <col:17> 'int' 0     | | `-RecoveryExpr 0x13d141720 <col:26> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13d1417f8 <line:13:3, col:11>     |   `-UnaryOperator 0x13d1417e0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x13d1417c8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13d1417a8 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13d143580 <line:15:2, line:20:2>     | |-CallExpr 0x13d143378 <line:15:6, line:17:22> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x13d141828 <line:15:6> 'int ()' Function 0x13d141100 'dvb_attach' 'int ()'     | | |-RecoveryExpr 0x13d1432a0 <col:17> '<dependent type>' contains-errors lvalue     | | |-CXXDependentScopeMemberExpr 0x13d1432f8 <col:32, col:46> '<dependent type>' contains-errors lvalue .fe     | | | `-ArraySubscriptExpr 0x13d1432d8 <col:32, col:44> '<dependent type>' contains-errors lvalue     | | |   |-ImplicitCastExpr 0x13d1432c0 <col:32, col:35> '<dependent type>' contains-errors <LValueToRValue>     | | |   | `-RecoveryExpr 0x13d141898 <col:32, col:35> '<dependent type>' contains-errors lvalue     | | |   |   `-DeclRefExpr 0x13d141860 <col:32> 'struct dvb_usb_adapter *' lvalue ParmVar 0x13d128648 'd' 'struct dvb_usb_adapter *'     | | |   `-IntegerLiteral 0x13d1418c0 <col:43> 'int' 0     | | |-UnaryOperator 0x13d143360 <line:16:5, col:6> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | `-RecoveryExpr 0x13d143340 <col:6> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x13d143248 <line:17:5, col:14> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-CXXDependentScopeMemberExpr 0x13d143200 <col:6, col:14> '<dependent type>' contains-errors lvalue ->i2c_adap     | |     `-RecoveryExpr 0x13d1419c8 <col:6, col:9> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x13d141990 <col:6> 'struct dvb_usb_adapter *' lvalue ParmVar 0x13d128648 'd' 'struct dvb_usb_adapter *'     | `-CompoundStmt 0x13d143560 <col:25, line:20:2>     |   |-CallExpr 0x13d1434f0 <line:18:3, col:13> 'int'     |   | |-ImplicitCastExpr 0x13d1434d8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x13d143498 <col:3> 'int ()' Function 0x13d1433e0 'info' 'int ()'     |   | `-ImplicitCastExpr 0x13d143518 <col:8> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x13d1434b8 <col:8> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x13d143550 <line:19:3, col:10>     |     `-IntegerLiteral 0x13d143530 <col:10> 'int' 0     `-CallExpr 0x13d1435f8 <line:22:2, col:12> 'int'       |-ImplicitCastExpr 0x13d1435e0 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x13d1435a0 <col:2> 'int ()' Function 0x13d1433e0 'info' 'int ()'       `-ImplicitCastExpr 0x13d143620 <col:7> 'char *' <ArrayToPointerDecay>         `-StringLiteral 0x13d1435c0 <col:7> 'char[4]' lvalue \"STR\" ","19376":"`-FunctionDecl 0x12c02be20  col:7 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x12c02bf20 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x12c02bf88 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x12c02bff0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x12c02bec8 <<invalid sloc>> Implicit 882 ","19870":"`-FunctionDecl 0x154928438  line:1:1 invalid do_query_info_on_read 'int (int *, int *, int, int *, int *)'   |-ParmVarDecl 0x154928128 <col:24, col:37> col:37 invalid backend 'int *'   |-ParmVarDecl 0x1549281a8 <line:2:24, col:46> col:46 invalid query_info_job 'int *'   |-ParmVarDecl 0x154928228 <line:3:24, col:42> col:42 invalid handle 'int'   |-ParmVarDecl 0x1549282a8 <line:4:24, col:35> col:35 invalid info 'int *'   |-ParmVarDecl 0x154928328 <line:5:24, col:47> col:47 invalid matcher 'int *'   `-CompoundStmt 0x154941f18 <line:6:1, line:23:1>     |-IfStmt 0x154941ab0 <line:14:3, line:15:10>     | |-RecoveryExpr 0x154941a28 <line:14:7, col:16> '_Bool' contains-errors     | `-GotoStmt 0x154941a98 <line:15:5, col:10> 'out' 0x154941a48     `-LabelStmt 0x154941ef8 <line:21:2, col:5> 'out'       `-NullStmt 0x154941ef0 <col:5> ","19758":"`-FunctionDecl 0x13b80df10  line:1:28 invalid tw5864_from_v4l2_std 'enum tw5864_vid_std (int)' static   |-ParmVarDecl 0x13b80ddb0 <col:49, col:61> col:61 invalid v4l2_std 'int'   `-CompoundStmt 0x13b827710 <line:2:1, line:19:1>     |-IfStmt 0x13b80e0a0 <line:3:2, line:4:10>     | |-BinaryOperator 0x13b80e038 <line:3:6, col:17> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x13b80dfc0 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13b80e018 <col:17> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13b80e090 <line:4:3, col:10>     |   `-RecoveryExpr 0x13b80e070 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13b80e1a0 <line:5:2, line:6:10>     | |-BinaryOperator 0x13b80e138 <line:5:6, col:17> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x13b80e0c0 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13b80e118 <col:17> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13b80e190 <line:6:3, col:10>     |   `-RecoveryExpr 0x13b80e170 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13b80e2a0 <line:7:2, line:8:10>     | |-BinaryOperator 0x13b80e238 <line:7:6, col:17> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x13b80e1c0 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13b80e218 <col:17> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13b80e290 <line:8:3, col:10>     |   `-RecoveryExpr 0x13b80e270 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13b80e3a0 <line:9:2, line:10:10>     | |-BinaryOperator 0x13b80e338 <line:9:6, col:17> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x13b80e2c0 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13b80e318 <col:17> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13b80e390 <line:10:3, col:10>     |   `-RecoveryExpr 0x13b80e370 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13b8274a8 <line:11:2, line:12:10>     | |-BinaryOperator 0x13b827440 <line:11:6, col:17> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x13b80e3c0 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13b827420 <col:17> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13b827498 <line:12:3, col:10>     |   `-RecoveryExpr 0x13b827478 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13b8275a8 <line:13:2, line:14:10>     | |-BinaryOperator 0x13b827540 <line:13:6, col:17> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x13b8274c8 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13b827520 <col:17> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13b827598 <line:14:3, col:10>     |   `-RecoveryExpr 0x13b827578 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13b8276a8 <line:15:2, line:16:10>     | |-BinaryOperator 0x13b827640 <line:15:6, col:17> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x13b8275c8 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13b827620 <col:17> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13b827698 <line:16:3, col:10>     |   `-RecoveryExpr 0x13b827678 <col:10> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x13b827700 <line:18:2, col:9>       `-RecoveryExpr 0x13b8276e0 <col:9> '<dependent type>' contains-errors lvalue ","19599":"`-FunctionDecl 0x146928318  line:1:1 invalid p11_rpc_message_alloc_extra_array 'int (int *, int, int)'   |-ParmVarDecl 0x146928128 <col:36, col:53> col:53 invalid msg 'int *'   |-ParmVarDecl 0x1469281a8 <line:2:8, col:15> col:15 invalid nmemb 'int'   |-ParmVarDecl 0x146928228 <line:3:8, col:15> col:15 invalid size 'int'   `-CompoundStmt 0x146928780 <line:4:1, line:10:1>     |-IfStmt 0x146928520 <line:5:2, line:8:2>     | |-RecoveryExpr 0x146928488 <line:5:6, col:45> '_Bool' contains-errors     | `-CompoundStmt 0x146928508 <col:51, line:8:2>     |   `-ReturnStmt 0x1469284f8 <line:7:3, col:10>     |     `-RecoveryExpr 0x1469284d8 <col:10> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x146928770 <line:9:2, col:55>       `-CallExpr 0x146928740 <col:9, col:55> '<dependent type>' contains-errors         |-DeclRefExpr 0x1469286a0 <col:9> 'int ()' Function 0x1469285e8 'p11_rpc_message_alloc_extra' 'int ()'         |-RecoveryExpr 0x1469286c0 <col:38> '<dependent type>' contains-errors lvalue         `-BinaryOperator 0x146928720 <col:43, col:51> '<dependent type>' contains-errors '*'           |-RecoveryExpr 0x1469286e0 <col:43> '<dependent type>' contains-errors lvalue           `-RecoveryExpr 0x146928700 <col:51> '<dependent type>' contains-errors lvalue ","19796":"`-FunctionDecl 0x12f80de88  line:1:8 invalid grptype_dump 'int (int *, int *)'   |-ParmVarDecl 0x12f80dd28 <col:21, col:29> col:29 referenced invalid a 'int *'   |-ParmVarDecl 0x12f80dda8 <col:32, col:39> col:39 invalid trace 'int *'   `-CompoundStmt 0x12f124320 <line:2:1, line:18:1>     |-BinaryOperator 0x12f80e0e8 <line:5:2, col:17> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12f80dfb8 <col:2, col:5> '<dependent type>' contains-errors lvalue ->type     | | `-RecoveryExpr 0x12f80df90 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12f80df70 <col:2> 'int *' lvalue ParmVar 0x12f80dd28 'a' 'int *'     | `-CXXDependentScopeMemberExpr 0x12f80e0a0 <col:12, col:17> '<dependent type>' contains-errors lvalue ->grouping_type     |   `-RecoveryExpr 0x12f80e080 <col:12> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12f80e320 <line:6:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f80e260 <col:2> 'int ()' Function 0x12f80e1a8 'gf_isom_box_dump_start' 'int ()'     | |-RecoveryExpr 0x12f80e280 <col:25> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x12f80e2e0 <col:28> 'char[4]' lvalue \"STR\"     | `-RecoveryExpr 0x12f80e300 <col:35> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12f123a40 <line:7:2, col:12> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12f80e3a0 <col:2, col:5> '<dependent type>' contains-errors lvalue ->type     | | `-RecoveryExpr 0x12f80e378 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12f80e358 <col:2> 'int *' lvalue ParmVar 0x12f80dd28 'a' 'int *'     | `-RecoveryExpr 0x12f123a20 <col:12> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12f123ca0 <line:8:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f123b40 <col:2> 'int ()' Function 0x12f123a88 'fprintf' 'int ()'     | |-RecoveryExpr 0x12f123b60 <col:10> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x12f123b80 <col:17> 'char[4]' lvalue \"STR\"     | `-CXXDependentScopeMemberExpr 0x12f123c58 <col:24, col:29> '<dependent type>' contains-errors lvalue ->group_id     |   `-RecoveryExpr 0x12f123c38 <col:24> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12f124168 <line:13:2, line:14:23>     | |-UnaryOperator 0x12f1240c0 <line:13:6, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12f1240a8 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x12f124060 <col:7, col:12> '<dependent type>' contains-errors lvalue ->size     | |     `-RecoveryExpr 0x12f124040 <col:7> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x12f124138 <line:14:3, col:23> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12f1240d8 <col:3> 'int ()' Function 0x12f123a88 'fprintf' 'int ()'     |   |-RecoveryExpr 0x12f1240f8 <col:11> '<dependent type>' contains-errors lvalue     |   `-StringLiteral 0x12f124118 <col:18> 'char[4]' lvalue \"STR\"     `-CallExpr 0x12f1242e8 <line:16:2, col:39> '<dependent type>' contains-errors       |-DeclRefExpr 0x12f124268 <col:2> 'int ()' Function 0x12f1241b0 'gf_isom_box_dump_done' 'int ()'       |-StringLiteral 0x12f124288 <col:24> 'char[4]' lvalue \"STR\"       |-RecoveryExpr 0x12f1242a8 <col:31> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x12f1242c8 <col:34> '<dependent type>' contains-errors lvalue ","19485":"`-FunctionDecl 0x1461284e8  line:1:1 invalid fifo_open 'int (int *, int (*)(int *), const char *)'   |-ParmVarDecl 0x146128128 <col:11, col:26> col:26 referenced invalid fifo 'int *'   |-ParmVarDecl 0x146128320 <col:32, col:61> col:38 used script_exit 'int (*)(int *)'   |-ParmVarDecl 0x1461283a0 <col:64, col:76> col:76 used type 'const char *'   `-CompoundStmt 0x14680b148 <line:2:1, line:38:1>     |-DeclStmt 0x146128628 <line:3:2, col:9>     | `-VarDecl 0x1461285c0 <col:2, col:6> col:6 used ret 'int'     |-DeclStmt 0x1461286c0 <line:4:2, col:15>     | `-VarDecl 0x146128658 <col:2, col:6> col:6 used sav_errno 'int'     `-IfStmt 0x14680b128 <line:6:2, line:37:2>       |-CXXDependentScopeMemberExpr 0x1461286f8 <line:6:6, col:12> '<dependent type>' contains-errors lvalue ->name       | `-RecoveryExpr 0x1461286d8 <col:6> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x14680b0f8 <col:18, line:37:2>         |-BinaryOperator 0x146128780 <line:7:3, col:15> 'int' '='         | |-DeclRefExpr 0x146128740 <col:3> 'int' lvalue Var 0x146128658 'sav_errno' 'int'         | `-IntegerLiteral 0x146128760 <col:15> 'int' 0         |-IfStmt 0x146141238 <line:9:3, line:16:3> has_else         | |-RecoveryExpr 0x146140cf8 <line:9:7, col:72> '_Bool' contains-errors         | |-BinaryOperator 0x146140e00 <line:10:4, col:25> '<dependent type>' contains-errors '='         | | |-CXXDependentScopeMemberExpr 0x146140d60 <col:4, col:10> '<dependent type>' contains-errors lvalue ->created_fifo         | | | `-RecoveryExpr 0x146140d38 <col:4> '<dependent type>' contains-errors lvalue         | | |   `-DeclRefExpr 0x146140d18 <col:4> 'int *' lvalue ParmVar 0x146128128 'fifo' 'int *'         | | `-DeclRefExpr 0x146140de0 <col:25> 'const char *' lvalue ParmVar 0x1461283a0 'type' 'const char *'         | `-CompoundStmt 0x146141218 <line:11:8, line:16:3>         |   |-BinaryOperator 0x146140e98 <line:12:4, col:16> 'int' contains-errors '='         |   | |-DeclRefExpr 0x146140e20 <col:4> 'int' lvalue Var 0x146128658 'sav_errno' 'int'         |   | `-RecoveryExpr 0x146140e78 <col:16> '<dependent type>' contains-errors lvalue         |   `-IfStmt 0x1461411f8 <line:14:4, line:15:50>         |     |-BinaryOperator 0x146140f30 <line:14:8, col:21> 'int' contains-errors '!='         |     | |-DeclRefExpr 0x146140eb8 <col:8> 'int' lvalue Var 0x146128658 'sav_errno' 'int'         |     | `-RecoveryExpr 0x146140f10 <col:21> '<dependent type>' contains-errors lvalue         |     `-CallExpr 0x1461411b8 <line:15:5, col:50> '<dependent type>' contains-errors         |       |-DeclRefExpr 0x146141030 <col:5> 'int ()' Function 0x146140f78 'log_message' 'int ()'         |       |-RecoveryExpr 0x146141198 <col:17> '<dependent type>' contains-errors lvalue         |       |-StringLiteral 0x1461410b0 <col:27> 'char[4]' lvalue \"STR\"         |       |-DeclRefExpr 0x1461410d0 <col:34> 'const char *' lvalue ParmVar 0x1461283a0 'type' 'const char *'         |       `-CXXDependentScopeMemberExpr 0x146141110 <col:40, col:46> '<dependent type>' contains-errors lvalue ->name         |         `-RecoveryExpr 0x1461410f0 <col:40> '<dependent type>' contains-errors lvalue         |-IfStmt 0x14680adc0 <line:18:3, line:31:3>         | |-BinaryOperator 0x1461413d0 <line:18:7, col:34> 'int' contains-errors '||'         | | |-UnaryOperator 0x146141378 <col:7, col:8> 'int' prefix '!' cannot overflow         | | | `-ImplicitCastExpr 0x146141360 <col:8> 'int' <LValueToRValue>         | | |   `-DeclRefExpr 0x146141268 <col:8> 'int' lvalue Var 0x146128658 'sav_errno' 'int'         | | `-BinaryOperator 0x1461413b0 <col:21, col:34> 'int' contains-errors '=='         | |   |-DeclRefExpr 0x1461412b8 <col:21> 'int' lvalue Var 0x146128658 'sav_errno' 'int'         | |   `-RecoveryExpr 0x146141390 <col:34> '<dependent type>' contains-errors lvalue         | `-CompoundStmt 0x14680ada0 <col:42, line:31:3>         |   |-IfStmt 0x1461416b8 <line:20:4, line:21:61>         |   | |-CXXDependentScopeMemberExpr 0x146141410 <line:20:8, col:14> '<dependent type>' contains-errors lvalue ->script         |   | | `-RecoveryExpr 0x1461413f0 <col:8> '<dependent type>' contains-errors lvalue         |   | `-CallExpr 0x146141678 <line:21:5, col:61> '<dependent type>' contains-errors         |   |   |-DeclRefExpr 0x146141538 <col:5> 'int ()' Function 0x146141480 'notify_fifo_exec' 'int ()'         |   |   |-RecoveryExpr 0x146141658 <col:22> '<dependent type>' contains-errors lvalue         |   |   |-DeclRefExpr 0x146141570 <col:30> 'int (*)(int *)' lvalue ParmVar 0x146128320 'script_exit' 'int (*)(int *)'         |   |   |-RecoveryExpr 0x146141590 <col:43> '<dependent type>' contains-errors lvalue         |   |   `-CXXDependentScopeMemberExpr 0x1461415d0 <col:49, col:55> '<dependent type>' contains-errors lvalue ->script         |   |     `-RecoveryExpr 0x1461415b0 <col:49> '<dependent type>' contains-errors lvalue         |   `-IfStmt 0x14680ad80 <line:24:4, line:30:4>         |     |-RecoveryExpr 0x1461419b8 <line:24:8, col:75> '_Bool' contains-errors         |     `-CompoundStmt 0x14680ad68 <col:78, line:30:4>         |       `-IfStmt 0x14680ad48 <line:26:5, line:29:5>         |         |-CXXDependentScopeMemberExpr 0x14680aac8 <line:26:9, col:15> '<dependent type>' contains-errors lvalue ->created_fifo         |         | `-RecoveryExpr 0x14680aaa8 <col:9> '<dependent type>' contains-errors lvalue         |         `-CompoundStmt 0x14680ad30 <col:29, line:29:5>         |           `-CallExpr 0x14680ac78 <line:27:6, col:23> '<dependent type>' contains-errors         |             |-DeclRefExpr 0x14680abf0 <col:6> 'int ()' Function 0x14680ab38 'unlink' 'int ()'         |             `-CXXDependentScopeMemberExpr 0x14680ac30 <col:13, col:19> '<dependent type>' contains-errors lvalue ->name         |               `-RecoveryExpr 0x14680ac10 <col:13> '<dependent type>' contains-errors lvalue         `-IfStmt 0x14680b0d8 <line:33:3, line:36:3>           |-BinaryOperator 0x14680ae80 <line:33:7, col:20> 'int' contains-errors '=='           | |-CXXDependentScopeMemberExpr 0x14680ae00 <col:7, col:13> '<dependent type>' contains-errors lvalue ->fd           | | `-RecoveryExpr 0x14680ade0 <col:7> '<dependent type>' contains-errors lvalue           | `-UnaryOperator 0x14680ae68 <col:19, col:20> 'int' prefix '-'           |   `-IntegerLiteral 0x14680ae48 <col:20> 'int' 1           `-CompoundStmt 0x14680b0c0 <col:23, line:36:3>             `-CallExpr 0x14680b008 <line:34:4, col:19> '<dependent type>' contains-errors               |-DeclRefExpr 0x14680af80 <col:4> 'int ()' Function 0x14680aec8 'FREE' 'int ()'               `-CXXDependentScopeMemberExpr 0x14680afc0 <col:9, col:15> '<dependent type>' contains-errors lvalue ->name                 `-RecoveryExpr 0x14680afa0 <col:9> '<dependent type>' contains-errors lvalue ","19810":"`-FunctionDecl 0x15000b400  col:18 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern   |-ParmVarDecl 0x15000b500 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x15000b568 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x15000b5d0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x15000b4a8 <<invalid sloc>> Implicit 888 ","19395":"`-FunctionDecl 0x156922980  col:3 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern   |-ParmVarDecl 0x156922a80 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x156922ae8 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-ParmVarDecl 0x156922b50 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x156922a28 <<invalid sloc>> Implicit 905   `-FormatAttr 0x156922bd0 <col:3> Implicit printf 3 4 ","19684":"`-FunctionDecl 0x1319281c8  line:1:1 invalid relpTcpVerifyCertificateCallback 'int (int)'   |-ParmVarDecl 0x1319280f0 <col:34, col:51> col:51 invalid session 'int'   `-CompoundStmt 0x132009f48 <line:2:1, line:43:1>     |-DeclStmt 0x131928318 <line:3:2, col:11>     | `-VarDecl 0x131928290 <col:2, col:10> col:6 used r 'int' cinit     |   `-IntegerLiteral 0x1319282f8 <col:10> 'int' 0     |-DeclStmt 0x1319283c8 <line:5:2, col:33>     | `-VarDecl 0x131928360 <col:2, col:24> col:24 referenced invalid cert_list 'const int *'     |-DeclStmt 0x131928498 <line:6:2, col:28>     | `-VarDecl 0x1319283f8 <col:2, col:27> col:15 used list_size 'unsigned int' cinit     |   `-ImplicitCastExpr 0x131928480 <col:27> 'unsigned int' <IntegralCast>     |     `-IntegerLiteral 0x131928460 <col:27> 'int' 0     |-DeclStmt 0x131928550 <line:8:2, col:25>     | `-VarDecl 0x1319284c8 <col:2, col:24> col:6 used bMustDeinitCert 'int' cinit     |   `-IntegerLiteral 0x131928530 <col:24> 'int' 0     |-IfStmt 0x1319418e8 <line:13:2, line:15:2>     | |-BinaryOperator 0x1319287a0 <line:13:5, col:45> 'int' contains-errors '!='     | | |-CallExpr 0x131928720 <col:5, col:40> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x1319286e0 <col:5> 'int ()' Function 0x131928628 'gnutls_certificate_type_get' 'int ()'     | | | `-RecoveryExpr 0x131928700 <col:33> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x131928780 <col:45> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1319418c8 <col:62, line:15:2>     |   |-BinaryOperator 0x131941840 <line:14:3, col:7> 'int' contains-errors '='     |   | |-DeclRefExpr 0x1319287c0 <col:3> 'int' lvalue Var 0x131928290 'r' 'int'     |   | `-RecoveryExpr 0x131941820 <col:7> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x1319418b0 <col:35, col:40> 'done' 0x131941860     |-BinaryOperator 0x131941c00 <line:17:2, col:69> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x131941928 <col:2> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x131941908 <col:2> 'const int *' lvalue Var 0x131928360 'cert_list' 'const int *'     | `-CallExpr 0x131941bd0 <col:14, col:69> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x131941a30 <col:14> 'int ()' Function 0x131941978 'gnutls_certificate_get_peers' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x131941b88 <col:43, col:50> '<dependent type>' contains-errors lvalue ->session     |   | `-RecoveryExpr 0x131941b68 <col:43> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x131941b00 <col:59, col:60> 'unsigned int *' prefix '&' cannot overflow     |     `-DeclRefExpr 0x131941ab0 <col:60> 'unsigned int' lvalue Var 0x1319283f8 'list_size' 'unsigned int'     |-IfStmt 0x131941fd0 <line:19:2, line:23:2>     | |-BinaryOperator 0x131941c90 <line:19:5, col:17> 'int' '<'     | | |-ImplicitCastExpr 0x131941c60 <col:5> 'unsigned int' <LValueToRValue>     | | | `-DeclRefExpr 0x131941c20 <col:5> 'unsigned int' lvalue Var 0x1319283f8 'list_size' 'unsigned int'     | | `-ImplicitCastExpr 0x131941c78 <col:17> 'unsigned int' <IntegralCast>     | |   `-IntegerLiteral 0x131941c40 <col:17> 'int' 1     | `-CompoundStmt 0x131941fa8 <col:20, line:23:2>     |   |-CallExpr 0x131941ec0 <line:20:3, line:21:31> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x131941d90 <line:20:3> 'int ()' Function 0x131941cd8 'callOnAuthErr' 'int ()'     |   | |-RecoveryExpr 0x131941e80 <col:17> '<dependent type>' contains-errors lvalue     |   | |-StringLiteral 0x131941e10 <col:24> 'char[4]' lvalue \"STR\"     |   | `-RecoveryExpr 0x131941ea0 <line:21:10> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x131941f70 <line:22:3, col:7> 'int' contains-errors '='     |   | |-DeclRefExpr 0x131941ef8 <col:3> 'int' lvalue Var 0x131928290 'r' 'int'     |   | `-RecoveryExpr 0x131941f50 <col:7> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x131941f90 <col:35, col:40> 'done' 0x131941860     |-CallExpr 0x131942180 <line:26:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1319420d0 <col:2> 'int ()' Function 0x131942018 'gnutls_x509_crt_init' 'int ()'     | `-UnaryOperator 0x131942168 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x131942148 <col:24> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1319421e8 <line:27:2, col:20> 'int' '='     | |-DeclRefExpr 0x1319421a8 <col:2> 'int' lvalue Var 0x1319284c8 'bMustDeinitCert' 'int'     | `-IntegerLiteral 0x1319421c8 <col:20> 'int' 1     |-IfStmt 0x131942618 <line:29:2, line:33:2> has_else     | |-RecoveryExpr 0x131942398 <line:29:5, col:24> '_Bool' contains-errors     | |-CompoundStmt 0x1319424d8 <col:51, line:31:2>     | `-CompoundStmt 0x131942608 <col:9, line:33:2>     |-IfStmt 0x1319426d8 <line:34:2, col:18>     | |-BinaryOperator 0x1319426a0 <col:5, col:10> 'int' '!='     | | |-ImplicitCastExpr 0x131942688 <col:5> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x131942648 <col:5> 'int' lvalue Var 0x131928290 'r' 'int'     | | `-IntegerLiteral 0x131942668 <col:10> 'int' 0     | `-GotoStmt 0x1319426c0 <col:13, col:18> 'done' 0x131941860     |-BinaryOperator 0x131942738 <line:37:2, col:6> 'int' '='     | |-DeclRefExpr 0x1319426f8 <col:2> 'int' lvalue Var 0x131928290 'r' 'int'     | `-IntegerLiteral 0x131942718 <col:6> 'int' 0     |-LabelStmt 0x132009ee0 <line:39:1, col:5> 'done'     | `-NullStmt 0x132009ed8 <col:5>     `-ReturnStmt 0x132009f38 <line:42:2, col:9>       `-ImplicitCastExpr 0x132009f20 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x132009f00 <col:9> 'int' lvalue Var 0x131928290 'r' 'int' ","20087":"`-FunctionDecl 0x12280ddc8  line:1:23 invalid GetPixelGreen 'int (const int *)' static inline   |-ParmVarDecl 0x12280dcf0 <col:37, col:50> col:50 invalid magick_restrict 'const int *'   `-CompoundStmt 0x12280df08 <line:3:1, line:5:1> ","20063":"`-FunctionDecl 0x13780dee0  line:1:13 invalid mux_chr_read 'void (void *, const int *, int)' static   |-ParmVarDecl 0x13780dcd8 <col:26, col:32> col:32 used opaque 'void *'   |-ParmVarDecl 0x13780dd70 <col:40, col:55> col:55 invalid buf 'const int *'   |-ParmVarDecl 0x13780ddf0 <col:60, col:64> col:64 used size 'int'   `-CompoundStmt 0x1378281f0 <line:2:1, line:20:1>     |-DeclStmt 0x13780e198 <line:5:5, col:21>     | `-VarDecl 0x13780e068 <col:5, col:16> col:9 used m 'int' cinit     |   `-CXXDependentScopeMemberExpr 0x13780e150 <col:13, col:16> '<dependent type>' contains-errors lvalue ->focus     |     `-RecoveryExpr 0x13780e130 <col:13> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x13780e2c8 <line:7:5, col:10>     | `-VarDecl 0x13780e260 <col:5, col:9> col:9 used i 'int'     |-CallExpr 0x137827948 <line:9:5, col:32> 'int'     | |-ImplicitCastExpr 0x137827930 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1378278b8 <col:5> 'int ()' Function 0x137827800 'mux_chr_accept_input' 'int ()'     | `-ImplicitCastExpr 0x137827970 <col:26> 'void *' <LValueToRValue>     |   `-DeclRefExpr 0x1378278d8 <col:26> 'void *' lvalue ParmVar 0x13780dcd8 'opaque' 'void *'     `-ForStmt 0x1378281b8 <line:11:5, line:19:9>       |-BinaryOperator 0x1378279c8 <line:11:10, col:14> 'int' '='       | |-DeclRefExpr 0x137827988 <col:10> 'int' lvalue Var 0x13780e260 'i' 'int'       | `-IntegerLiteral 0x1378279a8 <col:14> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x137827a58 <col:17, col:21> 'int' '<'       | |-ImplicitCastExpr 0x137827a28 <col:17> 'int' <LValueToRValue>       | | `-DeclRefExpr 0x1378279e8 <col:17> 'int' lvalue Var 0x13780e260 'i' 'int'       | `-ImplicitCastExpr 0x137827a40 <col:21> 'int' <LValueToRValue>       |   `-DeclRefExpr 0x137827a08 <col:21> 'int' lvalue ParmVar 0x13780ddf0 'size' 'int'       |-UnaryOperator 0x137827a98 <col:27, col:28> 'int' postfix '++'       | `-DeclRefExpr 0x137827a78 <col:27> 'int' lvalue Var 0x13780e260 'i' 'int'       `-IfStmt 0x137828198 <line:12:9, line:19:9>         |-CallExpr 0x137827d38 <line:12:13, col:41> '<dependent type>' contains-errors         | |-DeclRefExpr 0x137827b90 <col:13> 'int ()' Function 0x137827ad8 'mux_proc_byte' 'int ()'         | |-RecoveryExpr 0x137827ca8 <col:27> '<dependent type>' contains-errors lvalue         | |-RecoveryExpr 0x137827cc8 <col:32> '<dependent type>' contains-errors lvalue         | `-ArraySubscriptExpr 0x137827d18 <col:35, col:40> '<dependent type>' contains-errors lvalue         |   |-ImplicitCastExpr 0x137827ce8 <col:35> '<dependent type>' contains-errors <LValueToRValue>         |   | `-RecoveryExpr 0x137827be0 <col:35> '<dependent type>' contains-errors lvalue         |   `-ImplicitCastExpr 0x137827d00 <col:39> 'int' <LValueToRValue>         |     `-DeclRefExpr 0x137827c00 <col:39> 'int' lvalue Var 0x13780e260 'i' 'int'         `-CompoundStmt 0x137828188 <col:44, line:19:9> ","19331":"`-FunctionDecl 0x137928758  line:1:12 ndp_sock_open 'int (struct ndp *)' static   |-ParmVarDecl 0x137928648 <col:26, col:38> col:38 used ndp 'struct ndp *'   `-CompoundStmt 0x1400094e0 <line:2:1, line:38:1>     |-DeclStmt 0x137944cd0 <line:3:2, col:10>     | `-VarDecl 0x137944c68 <col:2, col:6> col:6 used sock 'int'     |-DeclStmt 0x137944d68 <line:5:2, col:9>     | `-VarDecl 0x137944d00 <col:2, col:6> col:6 used ret 'int'     |-DeclStmt 0x137944e00 <line:6:2, col:9>     | `-VarDecl 0x137944d98 <col:2, col:6> col:6 used err 'int'     |-DeclStmt 0x137944e98 <line:7:2, col:9>     | `-VarDecl 0x137944e30 <col:2, col:6> col:6 used val 'int'     |-BinaryOperator 0x137945158 <line:9:2, col:50> 'int' contains-errors '='     | |-DeclRefExpr 0x137944eb0 <col:2> 'int' lvalue Var 0x137944c68 'sock' 'int'     | `-CallExpr 0x137945120 <col:9, col:50> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x137945000 <col:9> 'int ()' Function 0x137944f48 'socket' 'int ()'     |   |-RecoveryExpr 0x1379450c0 <col:16> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x1379450e0 <col:26> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x137945100 <col:36> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1379453e0 <line:10:2, line:13:2>     | |-BinaryOperator 0x1379451e8 <line:10:6, col:15> 'int' '=='     | | |-ImplicitCastExpr 0x1379451d0 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x137945178 <col:6> 'int' lvalue Var 0x137944c68 'sock' 'int'     | | `-UnaryOperator 0x1379451b8 <col:14, col:15> 'int' prefix '-'     | |   `-IntegerLiteral 0x137945198 <col:15> 'int' 1     | `-CompoundStmt 0x1379453c0 <col:18, line:13:2>     |   |-ImplicitCastExpr 0x137945300 <line:11:3, col:17> '<dependent type>' contains-errors <LValueToRValue>     |   | `-RecoveryExpr 0x1379452c8 <col:3, col:17> '<dependent type>' contains-errors lvalue     |   |   |-DeclRefExpr 0x137945208 <col:3> 'int' lvalue Var 0x137944d98 'err' 'int'     |   |   |-DeclRefExpr 0x137945228 <col:7> 'struct ndp *' lvalue ParmVar 0x137928648 'ndp' 'struct ndp *'     |   |   `-StringLiteral 0x137945290 <col:12> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x1379453b0 <line:12:3, col:11>     |     `-UnaryOperator 0x137945398 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x137945380 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x137945360 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x137945440 <line:15:2, col:8> 'int' '='     | |-DeclRefExpr 0x137945400 <col:2> 'int' lvalue Var 0x137944e30 'val' 'int'     | `-IntegerLiteral 0x137945420 <col:8> 'int' 1     |-BinaryOperator 0x137945788 <line:16:2, line:17:22> 'int' contains-errors '='     | |-DeclRefExpr 0x137945460 <line:16:2> 'int' lvalue Var 0x137944d00 'ret' 'int'     | `-CallExpr 0x137945740 <col:8, line:17:22> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x137945560 <line:16:8> 'int ()' Function 0x1379454a8 'setsockopt' 'int ()'     |   |-DeclRefExpr 0x137945580 <col:19> 'int' lvalue Var 0x137944c68 'sock' 'int'     |   |-RecoveryExpr 0x137945700 <col:25> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x137945720 <col:39> '<dependent type>' contains-errors lvalue     |   |-UnaryOperator 0x137945620 <line:17:5, col:6> 'int *' prefix '&' cannot overflow     |   | `-DeclRefExpr 0x1379455d0 <col:6> 'int' lvalue Var 0x137944e30 'val' 'int'     |   `-UnaryExprOrTypeTraitExpr 0x137945678 <col:11, col:21> 'unsigned long' sizeof     |     `-ParenExpr 0x137945658 <col:17, col:21> 'int' lvalue     |       `-DeclRefExpr 0x137945638 <col:18> 'int' lvalue Var 0x137944e30 'val' 'int' non_odr_use_unevaluated     |-IfStmt 0x137945a88 <line:18:2, line:22:2>     | |-BinaryOperator 0x137945818 <line:18:6, col:14> 'int' '=='     | | |-ImplicitCastExpr 0x137945800 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x1379457a8 <col:6> 'int' lvalue Var 0x137944d00 'ret' 'int'     | | `-UnaryOperator 0x1379457e8 <col:13, col:14> 'int' prefix '-'     | |   `-IntegerLiteral 0x1379457c8 <col:14> 'int' 1     | `-CompoundStmt 0x137945a60 <col:17, line:22:2>     |   |-ImplicitCastExpr 0x1379458e8 <line:19:3, col:17> '<dependent type>' contains-errors <LValueToRValue>     |   | `-RecoveryExpr 0x1379458b0 <col:3, col:17> '<dependent type>' contains-errors lvalue     |   |   |-DeclRefExpr 0x137945838 <col:3> 'int' lvalue Var 0x137944d98 'err' 'int'     |   |   |-DeclRefExpr 0x137945858 <col:7> 'struct ndp *' lvalue ParmVar 0x137928648 'ndp' 'struct ndp *'     |   |   `-StringLiteral 0x137945878 <col:12> 'char[4]' lvalue \"STR\"     |   |-BinaryOperator 0x1379459d8 <line:20:3, col:10> 'int' contains-errors '='     |   | |-DeclRefExpr 0x137945900 <col:3> 'int' lvalue Var 0x137944d98 'err' 'int'     |   | `-UnaryOperator 0x1379459c0 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x1379459a8 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x137945988 <col:10> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x137945a48 <line:21:3, col:8> 'close_sock' 0x1379459f8     |-BinaryOperator 0x137945ae8 <line:24:2, col:8> 'int' '='     | |-DeclRefExpr 0x137945aa8 <col:2> 'int' lvalue Var 0x137944e30 'val' 'int'     | `-IntegerLiteral 0x137945ac8 <col:8> 'int' 255     |-BinaryOperator 0x140008f30 <line:25:2, line:26:22> 'int' contains-errors '='     | |-DeclRefExpr 0x137945b08 <line:25:2> 'int' lvalue Var 0x137944d00 'ret' 'int'     | `-CallExpr 0x140008ee8 <col:8, line:26:22> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x137945b28 <line:25:8> 'int ()' Function 0x1379454a8 'setsockopt' 'int ()'     |   |-DeclRefExpr 0x137945b48 <col:19> 'int' lvalue Var 0x137944c68 'sock' 'int'     |   |-RecoveryExpr 0x140008ea8 <col:25> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x140008ec8 <col:39> '<dependent type>' contains-errors lvalue     |   |-UnaryOperator 0x137945bb8 <line:26:5, col:6> 'int *' prefix '&' cannot overflow     |   | `-DeclRefExpr 0x137945b98 <col:6> 'int' lvalue Var 0x137944e30 'val' 'int'     |   `-UnaryExprOrTypeTraitExpr 0x140008e20 <col:11, col:21> 'unsigned long' sizeof     |     `-ParenExpr 0x140008e00 <col:17, col:21> 'int' lvalue     |       `-DeclRefExpr 0x137945bd0 <col:18> 'int' lvalue Var 0x137944e30 'val' 'int' non_odr_use_unevaluated     |-IfStmt 0x1400091e0 <line:27:2, line:31:2>     | |-BinaryOperator 0x140008fc0 <line:27:6, col:14> 'int' '=='     | | |-ImplicitCastExpr 0x140008fa8 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x140008f50 <col:6> 'int' lvalue Var 0x137944d00 'ret' 'int'     | | `-UnaryOperator 0x140008f90 <col:13, col:14> 'int' prefix '-'     | |   `-IntegerLiteral 0x140008f70 <col:14> 'int' 1     | `-CompoundStmt 0x1400091b8 <col:17, line:31:2>     |   |-ImplicitCastExpr 0x140009090 <line:28:3, col:17> '<dependent type>' contains-errors <LValueToRValue>     |   | `-RecoveryExpr 0x140009058 <col:3, col:17> '<dependent type>' contains-errors lvalue     |   |   |-DeclRefExpr 0x140008fe0 <col:3> 'int' lvalue Var 0x137944d98 'err' 'int'     |   |   |-DeclRefExpr 0x140009000 <col:7> 'struct ndp *' lvalue ParmVar 0x137928648 'ndp' 'struct ndp *'     |   |   `-StringLiteral 0x140009020 <col:12> 'char[4]' lvalue \"STR\"     |   |-BinaryOperator 0x140009180 <line:29:3, col:10> 'int' contains-errors '='     |   | |-DeclRefExpr 0x1400090a8 <col:3> 'int' lvalue Var 0x137944d98 'err' 'int'     |   | `-UnaryOperator 0x140009168 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x140009150 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x140009130 <col:10> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x1400091a0 <line:30:3, col:8> 'close_sock' 0x1379459f8     |-BinaryOperator 0x140009280 <line:33:2, col:14> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x140009238 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x140009200 <col:2> 'struct ndp *' lvalue ParmVar 0x137928648 'ndp' 'struct ndp *'     | `-DeclRefExpr 0x140009260 <col:14> 'int' lvalue Var 0x137944c68 'sock' 'int'     |-ReturnStmt 0x1400092c0 <line:34:2, col:9>     | `-IntegerLiteral 0x1400092a0 <col:9> 'int' 0     |-LabelStmt 0x140009478 <line:35:1, line:36:12> 'close_sock'     | `-CallExpr 0x140009438 <col:2, col:12> 'int'     |   |-ImplicitCastExpr 0x140009420 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1400093b0 <col:2> 'int ()' Function 0x1400092f8 'close' 'int ()'     |   `-ImplicitCastExpr 0x140009460 <col:8> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x1400093d0 <col:8> 'int' lvalue Var 0x137944c68 'sock' 'int'     `-ReturnStmt 0x1400094d0 <line:37:2, col:9>       `-ImplicitCastExpr 0x1400094b8 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x140009498 <col:9> 'int' lvalue Var 0x137944d98 'err' 'int' ","19786":"`-FunctionDecl 0x128128360  line:1:20 invalid SetPixelGreen 'void (const int *restrict, const int, int *restrict)' static inline   |-ParmVarDecl 0x1281280f0 <col:34, col:56> col:56 invalid image 'const int *restrict'   |-ParmVarDecl 0x128128170 <line:2:3, col:17> col:17 invalid green 'const int'   |-ParmVarDecl 0x128128228 <col:23, col:41> col:41 referenced invalid pixel 'int *restrict'   `-CompoundStmt 0x128128508 <line:3:1, line:5:1> ","20051":"`-FunctionDecl 0x14c830a88  line:1:14 invalid Prepare 'int (int *, int *)'   |-ParmVarDecl 0x14c830928 <col:22, col:37> col:37 invalid context 'int *'   |-ParmVarDecl 0x14c8309a8 <col:46, col:58> col:58 invalid node 'int *'   `-CompoundStmt 0x14c854640 <col:64, line:19:1>     |-CallExpr 0x14c830e48 <line:2:3, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c830ca0 <col:3> 'int ()' Function 0x14c830be8 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x14c830cc0 <col:21> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x14c830e00 <col:30, col:44> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14c830dc0 <col:30> 'int ()' Function 0x14c830d08 'NumInputs' 'int ()'     | | `-RecoveryExpr 0x14c830de0 <col:40> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x14c830e28 <col:47> 'int' 2     |-CallExpr 0x14c853e48 <line:10:3, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c830e80 <col:3> 'int ()' Function 0x14c830be8 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x14c830ea0 <col:21> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x14c853e00 <col:30, col:45> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14c830fa0 <col:30> 'int ()' Function 0x14c830ee8 'NumOutputs' 'int ()'     | | `-RecoveryExpr 0x14c830fc0 <col:41> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x14c853e28 <col:48> 'int' 0     |-DeclStmt 0x14c853f00 <line:12:3, col:47>     | `-VarDecl 0x14c853e98 <col:3, col:23> col:23 invalid input_resource_id_tensor 'const int *'     |-CallExpr 0x14c854298 <line:13:3, line:14:69> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c853ff8 <line:13:3> 'int ()' Function 0x14c853f40 'TF_LITE_ENSURE_OK' 'int ()'     | |-RecoveryExpr 0x14c854018 <col:21> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x14c854258 <col:30, line:14:68> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14c854118 <line:13:30> 'int ()' Function 0x14c854060 'GetInputSafe' 'int ()'     |   |-RecoveryExpr 0x14c854138 <col:43> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x14c854158 <col:52> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x14c854238 <col:58> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x14c8541b0 <line:14:43, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x14c854190 <col:44> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14c8543e0 <line:15:3, col:74> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c8542c8 <col:3> 'int ()' Function 0x14c830be8 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x14c8542e8 <col:21> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x14c854328 <col:30, col:56> '<dependent type>' contains-errors lvalue ->type     | | `-RecoveryExpr 0x14c854308 <col:30> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14c8543c0 <col:62> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14c8545c0 <line:16:3, col:70> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c854418 <col:3> 'int ()' Function 0x14c830be8 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x14c854438 <col:21> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x14c854578 <col:30, col:66> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14c854538 <col:30> 'int ()' Function 0x14c854480 'NumElements' 'int ()'     | | `-RecoveryExpr 0x14c854558 <col:42> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x14c8545a0 <col:69> 'int' 1     `-ReturnStmt 0x14c854630 <line:18:3, col:10>       `-RecoveryExpr 0x14c854610 <col:10> '<dependent type>' contains-errors lvalue ","19503":"`-FunctionDecl 0x148945ad8  line:1:1 invalid compat_do_replace 'int (struct net *, int, unsigned int)'   |-ParmVarDecl 0x148928648 <col:19, col:31> col:31 used net 'struct net *'   |-ParmVarDecl 0x1489286e0 <col:36, col:46> col:46 invalid arg 'int'   |-ParmVarDecl 0x148928760 <col:51, col:64> col:64 len 'unsigned int'   `-CompoundStmt 0x14900aa88 <line:2:1, line:47:1>     |-DeclStmt 0x148945c18 <line:3:2, col:9>     | `-VarDecl 0x148945bb0 <col:2, col:6> col:6 used ret 'int'     |-DeclStmt 0x148945da8 <line:4:2, col:32>     | |-RecordDecl 0x148945c30 <col:2, col:9> col:9 struct compat_ip6t_replace     | `-VarDecl 0x148945d28 <col:2, col:29> col:29 referenced invalid tmp 'struct compat_ip6t_replace'     |-DeclStmt 0x148945fa8 <line:5:2, col:31>     | |-RecordDecl 0x148945dc0 <col:2, col:9> col:9 struct xt_table_info     | `-VarDecl 0x148945f28 <col:2, col:24> col:24 used newinfo 'struct xt_table_info *'     |-DeclStmt 0x148946040 <line:6:2, col:21>     | `-VarDecl 0x148945fd8 <col:2, col:8> col:8 used loc_cpu_entry 'void *'     |-DeclStmt 0x148946248 <line:7:2, col:25>     | |-RecordDecl 0x148946058 <col:2, col:9> col:9 struct ip6t_entry     | `-VarDecl 0x1489461c8 <col:2, col:21> col:21 used iter 'struct ip6t_entry *'     |-IfStmt 0x1489465b8 <line:9:2, line:10:11>     | |-BinaryOperator 0x1489464f0 <line:9:6, col:51> 'int' contains-errors '!='     | | |-CallExpr 0x148946498 <col:6, col:46> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x1489463c0 <col:6> 'int ()' Function 0x148946308 'copy_from_sockptr' 'int ()'     | | | |-UnaryOperator 0x148946400 <col:24, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | | `-RecoveryExpr 0x1489463e0 <col:25> '<dependent type>' contains-errors lvalue     | | | |-RecoveryExpr 0x148946418 <col:30> '<dependent type>' contains-errors lvalue     | | | `-UnaryExprOrTypeTraitExpr 0x148946478 <col:35, col:45> 'unsigned long' contains-errors sizeof     | | |   `-ParenExpr 0x148946458 <col:41, col:45> '<dependent type>' contains-errors lvalue     | | |     `-RecoveryExpr 0x148946438 <col:42> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x1489464d0 <col:51> 'int' 0     | `-ReturnStmt 0x1489465a8 <line:10:3, col:11>     |   `-UnaryOperator 0x148946590 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x148946578 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x148946558 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x148946820 <line:13:2, line:14:11>     | |-RecoveryExpr 0x148946758 <line:13:6, col:61> '_Bool' contains-errors     | `-ReturnStmt 0x148946810 <line:14:3, col:11>     |   `-UnaryOperator 0x1489467f8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x1489467e0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x1489467c0 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x148946990 <line:15:2, line:16:11>     | |-BinaryOperator 0x1489468c8 <line:15:6, col:26> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x148946860 <col:6, col:10> '<dependent type>' contains-errors lvalue .num_counters     | | | `-RecoveryExpr 0x148946840 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x1489468a8 <col:26> 'int' 0     | `-ReturnStmt 0x148946980 <line:16:3, col:11>     |   `-UnaryOperator 0x148946968 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x148946950 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x148946930 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1490089a0 <line:18:2, col:33> '<dependent type>' contains-errors '='     | |-ArraySubscriptExpr 0x149008960 <col:2, col:29> '<dependent type>' contains-errors lvalue     | | |-ImplicitCastExpr 0x149008948 <col:2, col:6> '<dependent type>' contains-errors <LValueToRValue>     | | | `-CXXDependentScopeMemberExpr 0x149008800 <col:2, col:6> '<dependent type>' contains-errors lvalue .name     | | |   `-RecoveryExpr 0x1489469d0 <col:2> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x1489469b0 <col:2> 'struct compat_ip6t_replace' lvalue Var 0x148945d28 'tmp' 'struct compat_ip6t_replace'     | | `-BinaryOperator 0x149008928 <col:11, col:28> 'unsigned long' contains-errors '-'     | |   |-UnaryExprOrTypeTraitExpr 0x1490088d0 <col:11, col:26> 'unsigned long' contains-errors sizeof     | |   | `-ParenExpr 0x1490088b0 <col:17, col:26> '<dependent type>' contains-errors lvalue     | |   |   `-CXXDependentScopeMemberExpr 0x149008868 <col:18, col:22> '<dependent type>' contains-errors lvalue .name     | |   |     `-RecoveryExpr 0x149008848 <col:18> '<dependent type>' contains-errors lvalue     | |   `-ImplicitCastExpr 0x149008910 <col:28> 'unsigned long' <IntegralCast>     | |     `-IntegerLiteral 0x1490088f0 <col:28> 'int' 1     | `-IntegerLiteral 0x149008980 <col:33> 'int' 0     |-BinaryOperator 0x149008b70 <line:20:2, col:40> 'struct xt_table_info *' contains-errors '='     | |-DeclRefExpr 0x1490089c0 <col:2> 'struct xt_table_info *' lvalue Var 0x148945f28 'newinfo' 'struct xt_table_info *'     | `-CallExpr 0x149008b48 <col:12, col:40> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x149008ac0 <col:12> 'int ()' Function 0x149008a08 'xt_alloc_table_info' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x149008b00 <col:32, col:36> '<dependent type>' contains-errors lvalue .size     |     `-RecoveryExpr 0x149008ae0 <col:32> '<dependent type>' contains-errors lvalue     |-IfStmt 0x149008c88 <line:21:2, line:22:11>     | |-UnaryOperator 0x149008bc8 <line:21:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x149008bb0 <col:7> 'struct xt_table_info *' <LValueToRValue>     | |   `-DeclRefExpr 0x149008b90 <col:7> 'struct xt_table_info *' lvalue Var 0x148945f28 'newinfo' 'struct xt_table_info *'     | `-ReturnStmt 0x149008c78 <line:22:3, col:11>     |   `-UnaryOperator 0x149008c60 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x149008c48 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x149008c28 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x149008d28 <line:24:2, col:27> 'void *' contains-errors '='     | |-DeclRefExpr 0x149008ca8 <col:2> 'void *' lvalue Var 0x148945fd8 'loc_cpu_entry' 'void *'     | `-RecoveryExpr 0x149008d00 <col:18, col:27> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x149008cc8 <col:18> 'struct xt_table_info *' lvalue Var 0x148945f28 'newinfo' 'struct xt_table_info *'     |-IfStmt 0x149009150 <line:25:2, line:29:2>     | |-BinaryOperator 0x149008fb0 <line:25:6, line:26:17> 'int' contains-errors '!='     | | |-CallExpr 0x149008f50 <line:25:6, line:26:12> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x149008e28 <line:25:6> 'int ()' Function 0x149008d70 'copy_from_sockptr_offset' 'int ()'     | | | |-DeclRefExpr 0x149008e48 <col:31> 'void *' lvalue Var 0x148945fd8 'loc_cpu_entry' 'void *'     | | | |-RecoveryExpr 0x149008e68 <col:46> '<dependent type>' contains-errors lvalue     | | | |-UnaryExprOrTypeTraitExpr 0x149008ec8 <col:51, col:61> 'unsigned long' contains-errors sizeof     | | | | `-ParenExpr 0x149008ea8 <col:57, col:61> '<dependent type>' contains-errors lvalue     | | | |   `-RecoveryExpr 0x149008e88 <col:58> '<dependent type>' contains-errors lvalue     | | | `-CXXDependentScopeMemberExpr 0x149008f08 <line:26:4, col:8> '<dependent type>' contains-errors lvalue .size     | | |   `-RecoveryExpr 0x149008ee8 <col:4> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x149008f90 <col:17> 'int' 0     | `-CompoundStmt 0x149009130 <col:20, line:29:2>     |   |-BinaryOperator 0x1490090a8 <line:27:3, col:10> 'int' contains-errors '='     |   | |-DeclRefExpr 0x149008fd0 <col:3> 'int' lvalue Var 0x148945bb0 'ret' 'int'     |   | `-UnaryOperator 0x149009090 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x149009078 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x149009058 <col:10> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x149009118 <line:28:3, col:8> 'free_newinfo' 0x1490090c8     |-BinaryOperator 0x149009430 <line:31:2, col:66> 'int' contains-errors '='     | |-DeclRefExpr 0x149009170 <col:2> 'int' lvalue Var 0x148945bb0 'ret' 'int'     | `-CallExpr 0x1490093f0 <col:8, col:66> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x149009270 <col:8> 'int ()' Function 0x1490091b8 'translate_compat_table' 'int ()'     |   |-DeclRefExpr 0x149009290 <col:31> 'struct net *' lvalue ParmVar 0x148928648 'net' 'struct net *'     |   |-UnaryOperator 0x149009330 <col:36, col:37> 'struct xt_table_info **' prefix '&' cannot overflow     |   | `-DeclRefExpr 0x1490092b0 <col:37> 'struct xt_table_info *' lvalue Var 0x148945f28 'newinfo' 'struct xt_table_info *'     |   |-UnaryOperator 0x1490093a0 <col:46, col:47> 'void **' prefix '&' cannot overflow     |   | `-DeclRefExpr 0x149009348 <col:47> 'void *' lvalue Var 0x148945fd8 'loc_cpu_entry' 'void *'     |   `-UnaryOperator 0x1490093d8 <col:62, col:63> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x1490093b8 <col:63> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1490094e0 <line:32:2, line:33:8>     | |-BinaryOperator 0x1490094a8 <line:32:6, col:13> 'int' '!='     | | |-ImplicitCastExpr 0x149009490 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x149009450 <col:6> 'int' lvalue Var 0x148945bb0 'ret' 'int'     | | `-IntegerLiteral 0x149009470 <col:13> 'int' 0     | `-GotoStmt 0x1490094c8 <line:33:3, col:8> 'free_newinfo' 0x1490090c8     |-BinaryOperator 0x14900a3b8 <line:35:2, line:36:49> 'int' contains-errors '='     | |-DeclRefExpr 0x149009500 <line:35:2> 'int' lvalue Var 0x148945bb0 'ret' 'int'     | `-CallExpr 0x14900a368 <col:8, line:36:49> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x149009600 <line:35:8> 'int ()' Function 0x149009548 '__do_replace' 'int ()'     |   |-DeclRefExpr 0x149009620 <col:21> 'struct net *' lvalue ParmVar 0x148928648 'net' 'struct net *'     |   |-CXXDependentScopeMemberExpr 0x149009660 <col:26, col:30> '<dependent type>' contains-errors lvalue .name     |   | `-RecoveryExpr 0x149009640 <col:26> '<dependent type>' contains-errors lvalue     |   |-CXXDependentScopeMemberExpr 0x1490096c8 <col:36, col:40> '<dependent type>' contains-errors lvalue .valid_hooks     |   | `-RecoveryExpr 0x1490096a8 <col:36> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x149009710 <col:53> 'struct xt_table_info *' lvalue Var 0x148945f28 'newinfo' 'struct xt_table_info *'     |   |-CXXDependentScopeMemberExpr 0x149009750 <line:36:7, col:11> '<dependent type>' contains-errors lvalue .num_counters     |   | `-RecoveryExpr 0x149009730 <col:7> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x14900a340 <col:25, col:48> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14900a2b8 <col:25> 'int ()' Function 0x14900a200 'compat_ptr' 'int ()'     |     `-CXXDependentScopeMemberExpr 0x14900a2f8 <col:36, col:40> '<dependent type>' contains-errors lvalue .counters     |       `-RecoveryExpr 0x14900a2d8 <col:36> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14900a478 <line:37:2, line:38:8>     | |-ImplicitCastExpr 0x14900a3f8 <line:37:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x14900a3d8 <col:6> 'int' lvalue Var 0x148945bb0 'ret' 'int'     | `-GotoStmt 0x14900a460 <line:38:3, col:8> 'free_newinfo_untrans' 0x14900a410     |-ReturnStmt 0x14900a4b8 <line:39:2, col:9>     | `-IntegerLiteral 0x14900a498 <col:9> 'int' 0     |-LabelStmt 0x14900a6a0 <line:41:2, line:42:53> 'free_newinfo_untrans'     | `-CallExpr 0x14900a668 <col:2, col:53> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14900a5a8 <col:2> 'int ()' Function 0x14900a4f0 'xt_entry_foreach' 'int ()'     |   |-DeclRefExpr 0x14900a5c8 <col:19> 'struct ip6t_entry *' lvalue Var 0x1489461c8 'iter' 'struct ip6t_entry *'     |   |-DeclRefExpr 0x14900a5e8 <col:25> 'void *' lvalue Var 0x148945fd8 'loc_cpu_entry' 'void *'     |   `-RecoveryExpr 0x14900a640 <col:40, col:49> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14900a608 <col:40> 'struct xt_table_info *' lvalue Var 0x148945f28 'newinfo' 'struct xt_table_info *'     |-CallExpr 0x14900a848 <line:43:3, col:26> 'int'     | |-ImplicitCastExpr 0x14900a830 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14900a7a0 <col:3> 'int ()' Function 0x14900a6e8 'cleanup_entry' 'int ()'     | |-ImplicitCastExpr 0x14900a878 <col:17> 'struct ip6t_entry *' <LValueToRValue>     | | `-DeclRefExpr 0x14900a7c0 <col:17> 'struct ip6t_entry *' lvalue Var 0x1489461c8 'iter' 'struct ip6t_entry *'     | `-ImplicitCastExpr 0x14900a890 <col:23> 'struct net *' <LValueToRValue>     |   `-DeclRefExpr 0x14900a7e0 <col:23> 'struct net *' lvalue ParmVar 0x148928648 'net' 'struct net *'     |-LabelStmt 0x14900aa20 <line:44:2, line:45:28> 'free_newinfo'     | `-CallExpr 0x14900a9e0 <col:2, col:28> 'int'     |   |-ImplicitCastExpr 0x14900a9c8 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14900a988 <col:2> 'int ()' Function 0x14900a8d0 'xt_free_table_info' 'int ()'     |   `-ImplicitCastExpr 0x14900aa08 <col:21> 'struct xt_table_info *' <LValueToRValue>     |     `-DeclRefExpr 0x14900a9a8 <col:21> 'struct xt_table_info *' lvalue Var 0x148945f28 'newinfo' 'struct xt_table_info *'     `-ReturnStmt 0x14900aa78 <line:46:2, col:9>       `-ImplicitCastExpr 0x14900aa60 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x14900aa40 <col:9> 'int' lvalue Var 0x148945bb0 'ret' 'int' ","19583":"`-FunctionDecl 0x156928288  line:1:1 invalid proto_find_undecoded_data 'int (int *, int)'   |-ParmVarDecl 0x156928128 <col:27, col:39> col:39 invalid tree 'int *'   |-ParmVarDecl 0x1569281a8 <col:45, col:51> col:51 invalid length 'int'   `-CompoundStmt 0x1569286f8 <line:2:1, line:9:1>     |-CallExpr 0x1569285e8 <line:7:2, col:67> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1569284d0 <col:2> 'int ()' Function 0x156928418 'proto_tree_traverse_pre_order' 'int ()'     | |-RecoveryExpr 0x1569284f0 <col:32> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x156928590 <col:38> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x1569285d0 <col:59, col:60> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1569285b0 <col:60> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1569286e8 <line:8:2, col:17>       `-CXXDependentScopeMemberExpr 0x1569286a0 <col:9, col:17> '<dependent type>' contains-errors lvalue .buf         `-RecoveryExpr 0x156928680 <col:9> '<dependent type>' contains-errors lvalue ","20027":"`-FunctionDecl 0x127944a88  col:27 implicit used abs 'int (int)' extern   |-ParmVarDecl 0x127944b88 <<invalid sloc>> <invalid sloc> 'int'   |-BuiltinAttr 0x127944b30 <<invalid sloc>> Implicit 998   |-NoThrowAttr 0x127944bf8 <col:27> Implicit   `-ConstAttr 0x127944c20 <col:27> Implicit ","19484":"`-FunctionDecl 0x1259281c0  line:1:6 invalid determinization 'void (int)'   |-ParmVarDecl 0x1259280f0 <col:22, <invalid sloc>> col:28 invalid 'int'   `-CompoundStmt 0x125942010 <line:2:1, line:26:1>     |-DeclStmt 0x1259284b0 <line:3:5, col:57>     | `-VarDecl 0x125928288 <col:5, col:20> col:20 invalid INITIAL_TAGS 'const int'     |-DeclStmt 0x125928678 <line:6:5, col:65>     | `-FunctionDecl 0x1259285b8 parent 0x125855608 <col:5, col:64> col:18 invalid c0 'const int (int)'     |   `-ParmVarDecl 0x1259284e0 <col:21, <invalid sloc>> col:24 invalid 'int'     |-CallExpr 0x125941820 <line:8:5, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x125928790 <col:5> 'int ()' Function 0x1259286d8 'tagged_epsilon_closure' 'int ()'     | `-RecoveryExpr 0x125941800 <col:28> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1259419a8 <line:9:5, col:19> '<dependent type>' contains-errors     | |-DeclRefExpr 0x125941928 <col:5> 'int ()' Function 0x125941870 'find_state' 'int ()'     | `-RecoveryExpr 0x125941988 <col:16> '<dependent type>' contains-errors lvalue     `-ForStmt 0x125941ed8 <line:14:5, line:23:5>       |-<<<NULL>>>       |-<<<NULL>>>       |-BinaryOperator 0x125941bd8 <line:14:26, col:50> 'int' contains-errors '<'       | |-RecoveryExpr 0x125941ae8 <col:26> '<dependent type>' contains-errors lvalue       | `-CallExpr 0x125941bb8 <col:30, col:50> '<dependent type>' contains-errors       |   `-CXXDependentScopeMemberExpr 0x125941b70 <col:30, col:45> '<dependent type>' contains-errors lvalue .size       |     `-CXXDependentScopeMemberExpr 0x125941b28 <col:30, col:34> '<dependent type>' contains-errors lvalue .dc_kernels       |       `-RecoveryExpr 0x125941b08 <col:30> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x125941c48 <col:53, col:55> '<dependent type>' contains-errors prefix '++' cannot overflow       | `-RecoveryExpr 0x125941c28 <col:55> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x125941ec8 <col:58, line:23:5> ","19557":"`-FunctionDecl 0x126008e78  col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x126008f78 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x126008fe0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x126009048 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x126008f20 <<invalid sloc>> Implicit 882 ","19305":"`-FunctionDecl 0x14a00ddc8  line:1:1 invalid write_vector_vector 'int (int)'   |-ParmVarDecl 0x14a00dcf0 <col:21, <invalid sloc>> col:30 invalid 'int'   `-CompoundStmt 0x14a00e320 <line:4:1, line:15:1>     `-ForStmt 0x14a00e2e8 <line:7:5, line:13:5>       |-DeclStmt 0x14a00df18 <line:7:10, col:20>       | `-VarDecl 0x14a00de90 <col:10, col:19> col:14 used i1 'int' cinit       |   `-IntegerLiteral 0x14a00def8 <col:19> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x14a00dfa8 <col:22, col:27> 'int' contains-errors '<'       | |-DeclRefExpr 0x14a00df30 <col:22> 'int' lvalue Var 0x14a00de90 'i1' 'int'       | `-RecoveryExpr 0x14a00df88 <col:27> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x14a00dfe8 <col:36, col:38> 'int' prefix '++'       | `-DeclRefExpr 0x14a00dfc8 <col:38> 'int' lvalue Var 0x14a00de90 'i1' 'int'       `-CompoundStmt 0x14a00e2d8 <line:8:5, line:13:5> ","19346":"`-FunctionDecl 0x13c00e038  line:1:20 invalid gic_thiscpu_read 'int (void *, int, int *, unsigned int, int)' static   |-ParmVarDecl 0x13c00dcf0 <col:37, col:43> col:43 opaque 'void *'   |-ParmVarDecl 0x13c00dd70 <col:51, col:58> col:58 invalid addr 'int'   |-ParmVarDecl 0x13c00de28 <col:64, col:74> col:74 invalid data 'int *'   |-ParmVarDecl 0x13c00dea8 <line:2:37, col:46> col:46 size 'unsigned int'   |-ParmVarDecl 0x13c00df28 <col:52, col:63> col:63 invalid attrs 'int'   `-CompoundStmt 0x13c027590 <line:3:1, line:6:1>     `-ReturnStmt 0x13c027580 <line:5:5, col:69>       `-CallExpr 0x13c027538 <col:12, col:69> '<dependent type>' contains-errors         |-DeclRefExpr 0x13c00e290 <col:12> 'int ()' Function 0x13c00e1d8 'gic_cpu_read' 'int ()'         |-RecoveryExpr 0x13c0274d0 <col:25> '<dependent type>' contains-errors lvalue         |-CallExpr 0x13c027510 <col:28, col:49> '<dependent type>' contains-errors         | |-DeclRefExpr 0x13c00e3a8 <col:28> 'int ()' Function 0x13c00e2f0 'gic_get_current_cpu' 'int ()'         | `-RecoveryExpr 0x13c0274f0 <col:48> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x13c027428 <col:52> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x13c027448 <col:58> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x13c027468 <col:64> '<dependent type>' contains-errors lvalue ","19359":"`-FunctionDecl 0x140027748  line:1:5 invalid cli_hm_scan 'int (const unsigned char *, int, const char **, const struct cli_matcher *, enum CLI_HASH_TYPE)'   |-ParmVarDecl 0x14000dd08 <col:17, col:38> col:38 used digest 'const unsigned char *'   |-ParmVarDecl 0x14000dda0 <col:46, col:55> col:55 invalid size 'int'   |-ParmVarDecl 0x14000de58 <col:61, col:74> col:74 used virname 'const char **'   |-ParmVarDecl 0x140027458 <col:83, col:109> col:109 used root 'const struct cli_matcher *'   |-ParmVarDecl 0x1400275d8 <col:115, col:134> col:134 invalid type 'enum CLI_HASH_TYPE'   `-CompoundStmt 0x14002a5f0 <col:140, line:36:1>     |-DeclStmt 0x140027a08 <line:2:5, col:41>     | |-RecordDecl 0x140027818 <col:11, col:18> col:18 struct cli_htu32_element     | `-VarDecl 0x140027988 <col:5, col:37> col:37 used item 'const struct cli_htu32_element *'     |-DeclStmt 0x140027aa0 <line:3:5, col:24>     | `-VarDecl 0x140027a38 <col:5, col:18> col:18 used keylen 'unsigned int'     |-DeclStmt 0x140027ca8 <line:4:5, col:28>     | |-RecordDecl 0x140027ab8 <col:5, col:12> col:12 struct cli_sz_hash     | `-VarDecl 0x140027c28 <col:5, col:25> col:25 used szh 'struct cli_sz_hash *'     |-BinaryOperator 0x140027da8 <line:5:5, col:15> '<dependent type>' contains-errors ','     | |-UnaryExprOrTypeTraitExpr 0x140027d68 <col:5, col:12> 'unsigned long' contains-errors sizeof     | | `-RecoveryExpr 0x140027d48 <col:12> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x140027d88 <col:15> '<dependent type>' contains-errors lvalue     |-IfStmt 0x140028348 <line:7:5, line:8:9>     | |-BinaryOperator 0x1400282e0 <line:7:8, col:86> 'int' contains-errors '||'     | | |-BinaryOperator 0x1400281f8 <col:8, col:51> 'int' contains-errors '||'     | | | |-BinaryOperator 0x1400281a8 <col:8, col:36> 'int' contains-errors '||'     | | | | |-BinaryOperator 0x140028188 <col:8, col:20> 'int' contains-errors '||'     | | | | | |-UnaryOperator 0x140028140 <col:8, col:9> 'int' prefix '!' cannot overflow     | | | | | | `-ImplicitCastExpr 0x140028128 <col:9> 'const unsigned char *' <LValueToRValue>     | | | | | |   `-DeclRefExpr 0x140027dc8 <col:9> 'const unsigned char *' lvalue ParmVar 0x14000dd08 'digest' 'const unsigned char *'     | | | | | `-UnaryOperator 0x140028170 <col:19, col:20> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | |   `-ImplicitCastExpr 0x140028158 <col:20> '<dependent type>' contains-errors <LValueToRValue>     | | | | |     `-RecoveryExpr 0x140027e18 <col:20> '<dependent type>' contains-errors lvalue     | | | | `-BinaryOperator 0x140027ec8 <col:28, col:36> 'int' contains-errors '=='     | | | |   |-RecoveryExpr 0x140027e88 <col:28> '<dependent type>' contains-errors lvalue     | | | |   `-IntegerLiteral 0x140027ea8 <col:36> 'unsigned int' 4294967295     | | | `-UnaryOperator 0x1400281e0 <col:50, col:51> 'int' prefix '!' cannot overflow     | | |   `-ImplicitCastExpr 0x1400281c8 <col:51> 'const struct cli_matcher *' <LValueToRValue>     | | |     `-DeclRefExpr 0x140027f08 <col:51> 'const struct cli_matcher *' lvalue ParmVar 0x140027458 'root' 'const struct cli_matcher *'     | | `-UnaryOperator 0x1400282c8 <col:59, col:86> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x1400282b0 <col:60, col:86> '<dependent type>' contains-errors <LValueToRValue>     | |     `-CXXDependentScopeMemberExpr 0x140028268 <col:60, col:86> '<dependent type>' contains-errors lvalue .capacity     | |       `-ArraySubscriptExpr 0x140028248 <col:60, col:84> '<dependent type>' contains-errors lvalue     | |         |-ImplicitCastExpr 0x140028218 <col:60, col:69> '<dependent type>' contains-errors <LValueToRValue>     | |         | `-CXXDependentScopeMemberExpr 0x140027fd8 <col:60, col:69> '<dependent type>' contains-errors lvalue .sizehashes     | |         |   `-RecoveryExpr 0x140027fb0 <col:60, col:66> '<dependent type>' contains-errors lvalue     | |         |     `-DeclRefExpr 0x140027f78 <col:60> 'const struct cli_matcher *' lvalue ParmVar 0x140027458 'root' 'const struct cli_matcher *'     | |         `-ImplicitCastExpr 0x140028230 <col:80> '<dependent type>' contains-errors <LValueToRValue>     | |           `-RecoveryExpr 0x140028020 <col:80> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x140028338 <line:8:2, col:9>     |   `-RecoveryExpr 0x140028318 <col:9> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x140029b38 <line:10:5, col:59> 'const struct cli_htu32_element *' contains-errors '='     | |-DeclRefExpr 0x140028368 <col:5> 'const struct cli_htu32_element *' lvalue Var 0x140027988 'item' 'const struct cli_htu32_element *'     | `-CallExpr 0x140029b08 <col:12, col:59> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1400298e0 <col:12> 'int ()' Function 0x140029828 'cli_htu32_find' 'int ()'     |   |-UnaryOperator 0x140029af0 <col:27, col:52> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-ArraySubscriptExpr 0x140029ad0 <col:28, col:52> '<dependent type>' contains-errors lvalue     |   |   |-ImplicitCastExpr 0x140029aa0 <col:28, col:37> '<dependent type>' contains-errors <LValueToRValue>     |   |   | `-CXXDependentScopeMemberExpr 0x140029960 <col:28, col:37> '<dependent type>' contains-errors lvalue .sizehashes     |   |   |   `-RecoveryExpr 0x140029938 <col:28, col:34> '<dependent type>' contains-errors lvalue     |   |   |     `-DeclRefExpr 0x140029900 <col:28> 'const struct cli_matcher *' lvalue ParmVar 0x140027458 'root' 'const struct cli_matcher *'     |   |   `-ImplicitCastExpr 0x140029ab8 <col:48> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x1400299a8 <col:48> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x140029a30 <col:55> '<dependent type>' contains-errors lvalue     |-IfStmt 0x140029bf0 <line:11:5, line:12:9>     | |-UnaryOperator 0x140029b90 <line:11:8, col:9> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x140029b78 <col:9> 'const struct cli_htu32_element *' <LValueToRValue>     | |   `-DeclRefExpr 0x140029b58 <col:9> 'const struct cli_htu32_element *' lvalue Var 0x140027988 'item' 'const struct cli_htu32_element *'     | `-ReturnStmt 0x140029be0 <line:12:2, col:9>     |   `-RecoveryExpr 0x140029bc0 <col:9> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x140029e00 <line:14:5, col:44> 'struct cli_sz_hash *' contains-errors '='     | |-DeclRefExpr 0x140029c10 <col:5> 'struct cli_sz_hash *' lvalue Var 0x140027c28 'szh' 'struct cli_sz_hash *'     | `-CStyleCastExpr 0x140029dd8 <col:11, col:44> 'struct cli_sz_hash *' contains-errors <Dependent>     |   `-CXXDependentScopeMemberExpr 0x140029c90 <col:33, col:44> '<dependent type>' contains-errors lvalue .as_ptr     |     `-RecoveryExpr 0x140029c68 <col:33, col:39> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x140029c30 <col:33> 'const struct cli_htu32_element *' lvalue Var 0x140027988 'item' 'const struct cli_htu32_element *'     `-WhileStmt 0x14002a5d0 <line:19:5, line:34:5>       |-BinaryOperator 0x140029f88 <line:19:11, col:16> 'int' contains-errors '<='       | |-RecoveryExpr 0x140029f48 <col:11> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x140029f68 <col:16> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x14002a5b0 <col:19, line:34:5>         |-DeclStmt 0x14002a2a8 <line:21:2, col:64>         | `-VarDecl 0x14002a080 <col:2, col:6> col:6 used res 'int'         `-IfStmt 0x14002a580 <line:23:2, line:33:2> has_else           |-BinaryOperator 0x14002a318 <line:23:5, col:11> 'int' '<'           | |-ImplicitCastExpr 0x14002a300 <col:5> 'int' <LValueToRValue>           | | `-DeclRefExpr 0x14002a2c0 <col:5> 'int' lvalue Var 0x14002a080 'res' 'int'           | `-IntegerLiteral 0x14002a2e0 <col:11> 'int' 0           |-CompoundStmt 0x14002a3a0 <col:14, line:27:2>           | `-IfStmt 0x14002a360 <line:24:6, line:25:3>           |   |-RecoveryExpr 0x14002a338 <line:24:9, col:10> '_Bool' contains-errors           |   `-BreakStmt 0x14002a358 <line:25:3>           `-IfStmt 0x14002a550 <line:27:9, line:33:2> has_else             |-BinaryOperator 0x14002a410 <line:27:12, col:18> 'int' '>'             | |-ImplicitCastExpr 0x14002a3f8 <col:12> 'int' <LValueToRValue>             | | `-DeclRefExpr 0x14002a3b8 <col:12> 'int' lvalue Var 0x14002a080 'res' 'int'             | `-IntegerLiteral 0x14002a3d8 <col:18> 'int' 0             |-NullStmt 0x14002a548 <line:28:6>             `-CompoundStmt 0x14002a538 <line:29:7, line:33:2> ","20142":"`-FunctionDecl 0x13e140d90  col:2 implicit used printf 'int (const char *, ...)' extern   |-ParmVarDecl 0x13e140e90 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x13e140e38 <<invalid sloc>> Implicit 903   `-FormatAttr 0x13e140f00 <col:2> Implicit printf 1 2 ","19364":"`-FunctionDecl 0x13811c888  line:1:12 slice_area_is_free 'int (struct mm_struct *, unsigned long, unsigned long)' static   |-ParmVarDecl 0x138104448 <col:31, col:49> col:49 used mm 'struct mm_struct *'   |-ParmVarDecl 0x1381044c8 <col:53, col:67> col:67 used addr 'unsigned long'   |-ParmVarDecl 0x138104548 <line:2:10, col:24> col:24 used len 'unsigned long'   `-CompoundStmt 0x13811d140 <line:3:1, line:10:1>     |-DeclStmt 0x13811cb78 <line:4:2, col:28>     | |-RecordDecl 0x13811c990 <col:2, col:9> col:9 struct vm_area_struct     | `-VarDecl 0x13811caf8 <col:2, col:25> col:25 used vma 'struct vm_area_struct *'     |-IfStmt 0x13811ccc0 <line:6:2, line:7:10>     | |-BinaryOperator 0x13811cc70 <line:6:6, col:30> 'int' contains-errors '<'     | | |-ParenExpr 0x13811cc30 <col:6, col:26> '<dependent type>' contains-errors     | | | `-BinaryOperator 0x13811cc10 <col:7, col:23> '<dependent type>' contains-errors '-'     | | |   |-RecoveryExpr 0x13811cbc8 <col:7, col:11> '<dependent type>' contains-errors lvalue     | | |   | `-DeclRefExpr 0x13811cb90 <col:7> 'struct mm_struct *' lvalue ParmVar 0x138104448 'mm' 'struct mm_struct *'     | | |   `-DeclRefExpr 0x13811cbf0 <col:23> 'unsigned long' lvalue ParmVar 0x138104548 'len' 'unsigned long'     | | `-DeclRefExpr 0x13811cc50 <col:30> 'unsigned long' lvalue ParmVar 0x1381044c8 'addr' 'unsigned long'     | `-ReturnStmt 0x13811ccb0 <line:7:3, col:10>     |   `-IntegerLiteral 0x13811cc90 <col:10> 'int' 0     |-BinaryOperator 0x13811cf50 <line:8:2, col:25> 'struct vm_area_struct *' '='     | |-DeclRefExpr 0x13811cce0 <col:2> 'struct vm_area_struct *' lvalue Var 0x13811caf8 'vma' 'struct vm_area_struct *'     | `-ImplicitCastExpr 0x13811cf38 <col:8, col:25> 'struct vm_area_struct *' <IntegralToPointer>     |   `-CallExpr 0x13811ced8 <col:8, col:25> 'int'     |     |-ImplicitCastExpr 0x13811cec0 <col:8> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x13811ce30 <col:8> 'int ()' Function 0x13811cd78 'find_vma' 'int ()'     |     |-ImplicitCastExpr 0x13811cf08 <col:17> 'struct mm_struct *' <LValueToRValue>     |     | `-DeclRefExpr 0x13811ce50 <col:17> 'struct mm_struct *' lvalue ParmVar 0x138104448 'mm' 'struct mm_struct *'     |     `-ImplicitCastExpr 0x13811cf20 <col:21> 'unsigned long' <LValueToRValue>     |       `-DeclRefExpr 0x13811ce70 <col:21> 'unsigned long' lvalue ParmVar 0x1381044c8 'addr' 'unsigned long'     `-ReturnStmt 0x13811d130 <line:9:2, col:47>       `-ParenExpr 0x13811d110 <col:9, col:47> 'int' contains-errors         `-BinaryOperator 0x13811d0f0 <col:10, col:39> 'int' contains-errors '||'           |-UnaryOperator 0x13811cfa8 <col:10, col:11> 'int' prefix '!' cannot overflow           | `-ImplicitCastExpr 0x13811cf90 <col:11> 'struct vm_area_struct *' <LValueToRValue>           |   `-DeclRefExpr 0x13811cf70 <col:11> 'struct vm_area_struct *' lvalue Var 0x13811caf8 'vma' 'struct vm_area_struct *'           `-BinaryOperator 0x13811d0d0 <col:18, col:39> 'int' contains-errors '<='             |-ParenExpr 0x13811d050 <col:18, col:29> 'unsigned long'             | `-BinaryOperator 0x13811d030 <col:19, col:26> 'unsigned long' '+'             |   |-ImplicitCastExpr 0x13811d000 <col:19> 'unsigned long' <LValueToRValue>             |   | `-DeclRefExpr 0x13811cfc0 <col:19> 'unsigned long' lvalue ParmVar 0x1381044c8 'addr' 'unsigned long'             |   `-ImplicitCastExpr 0x13811d018 <col:26> 'unsigned long' <LValueToRValue>             |     `-DeclRefExpr 0x13811cfe0 <col:26> 'unsigned long' lvalue ParmVar 0x138104548 'len' 'unsigned long'             `-RecoveryExpr 0x13811d0a8 <col:34, col:39> '<dependent type>' contains-errors lvalue               `-DeclRefExpr 0x13811d070 <col:34> 'struct vm_area_struct *' lvalue Var 0x13811caf8 'vma' 'struct vm_area_struct *' ","20003":"`-FunctionDecl 0x15c80dda8  line:1:1 referenced goto_tabpage 'int (int)'   |-ParmVarDecl 0x15c80dcd8 <col:14, col:18> col:18 used n 'int'   `-CompoundStmt 0x15c123100 <line:2:1, line:66:1>     |-DeclStmt 0x15c80df80 <line:5:5, col:11>     | `-VarDecl 0x15c80df18 <col:5, col:10> col:10 used i 'int'     |-IfStmt 0x15c80e2a0 <line:7:5, line:12:5>     | |-CallExpr 0x15c80e118 <line:7:9, col:21> 'int'     | | `-ImplicitCastExpr 0x15c80e100 <col:9> 'int (*)()' <FunctionToPointerDecay>     | |   `-DeclRefExpr 0x15c80e0b0 <col:9> 'int ()' Function 0x15c80dff8 'text_locked' 'int ()'     | `-CompoundStmt 0x15c80e280 <line:8:5, line:12:5>     |   |-CallExpr 0x15c80e250 <line:10:2, col:18> 'int'     |   | `-ImplicitCastExpr 0x15c80e238 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x15c80e218 <col:2> 'int ()' Function 0x15c80e160 'text_locked_msg' 'int ()'     |   `-ReturnStmt 0x15c80e270 <line:11:2>     |-IfStmt 0x15c122800 <line:15:5, line:20:5>     | |-BinaryOperator 0x15c80e3e0 <line:15:9, col:35> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x15c80e378 <col:9, col:24> '<dependent type>' contains-errors lvalue ->tp_next     | | | `-RecoveryExpr 0x15c80e358 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x15c80e3c0 <col:35> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x15c1227e0 <line:16:5, line:20:5>     |   |-IfStmt 0x15c1227b0 <line:17:2, line:18:17>     |   | |-BinaryOperator 0x15c122658 <line:17:6, col:10> 'int' '>'     |   | | |-ImplicitCastExpr 0x15c122640 <col:6> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x15c122600 <col:6> 'int' lvalue ParmVar 0x15c80dcd8 'n' 'int'     |   | | `-IntegerLiteral 0x15c122620 <col:10> 'int' 1     |   | `-CallExpr 0x15c122790 <line:18:6, col:17> 'int'     |   |   `-ImplicitCastExpr 0x15c122778 <col:6> 'int (*)()' <FunctionToPointerDecay>     |   |     `-DeclRefExpr 0x15c122758 <col:6> 'int ()' Function 0x15c1226a0 'beep_flush' 'int ()'     |   `-ReturnStmt 0x15c1227d0 <line:19:2>     `-IfStmt 0x15c122fd0 <line:22:5, line:58:5> has_else       |-BinaryOperator 0x15c122878 <line:22:9, col:14> 'int' '=='       | |-ImplicitCastExpr 0x15c122860 <col:9> 'int' <LValueToRValue>       | | `-DeclRefExpr 0x15c122820 <col:9> 'int' lvalue ParmVar 0x15c80dcd8 'n' 'int'       | `-IntegerLiteral 0x15c122840 <col:14> 'int' 0       |-CompoundStmt 0x15c122a70 <line:23:5, line:29:5>       `-IfStmt 0x15c122fa0 <line:30:10, line:58:5> has_else         |-BinaryOperator 0x15c122ad8 <line:30:14, col:18> 'int' '<'         | |-ImplicitCastExpr 0x15c122ac0 <col:14> 'int' <LValueToRValue>         | | `-DeclRefExpr 0x15c122a80 <col:14> 'int' lvalue ParmVar 0x15c80dcd8 'n' 'int'         | `-IntegerLiteral 0x15c122aa0 <col:18> 'int' 0         |-CompoundStmt 0x15c122c70 <line:31:5, line:42:5>         | `-ForStmt 0x15c122c38 <line:35:2, line:41:2>         |   |-BinaryOperator 0x15c122b50 <line:35:7, col:11> 'int' '='         |   | |-DeclRefExpr 0x15c122af8 <col:7> 'int' lvalue Var 0x15c80df18 'i' 'int'         |   | `-ImplicitCastExpr 0x15c122b38 <col:11> 'int' <LValueToRValue>         |   |   `-DeclRefExpr 0x15c122b18 <col:11> 'int' lvalue ParmVar 0x15c80dcd8 'n' 'int'         |   |-<<<NULL>>>         |   |-BinaryOperator 0x15c122bc8 <col:14, col:18> 'int' '<'         |   | |-ImplicitCastExpr 0x15c122bb0 <col:14> 'int' <LValueToRValue>         |   | | `-DeclRefExpr 0x15c122b70 <col:14> 'int' lvalue Var 0x15c80df18 'i' 'int'         |   | `-IntegerLiteral 0x15c122b90 <col:18> 'int' 0         |   |-UnaryOperator 0x15c122c08 <col:21, col:23> 'int' prefix '++'         |   | `-DeclRefExpr 0x15c122be8 <col:23> 'int' lvalue Var 0x15c80df18 'i' 'int'         |   `-CompoundStmt 0x15c122c28 <line:36:2, line:41:2>         `-IfStmt 0x15c122f70 <line:43:10, line:58:5> has_else           |-BinaryOperator 0x15c122ce0 <line:43:14, col:19> 'int' '=='           | |-ImplicitCastExpr 0x15c122cc8 <col:14> 'int' <LValueToRValue>           | | `-DeclRefExpr 0x15c122c88 <col:14> 'int' lvalue ParmVar 0x15c80dcd8 'n' 'int'           | `-IntegerLiteral 0x15c122ca8 <col:19> 'int' 9999           |-CompoundStmt 0x15c122d08 <line:44:5, line:48:5>           `-CompoundStmt 0x15c122f58 <line:50:5, line:58:5>             `-IfStmt 0x15c122f38 <line:53:2, line:57:2>               |-RecoveryExpr 0x15c122e90 <line:53:6, col:12> '_Bool' contains-errors               `-CompoundStmt 0x15c122f18 <line:54:2, line:57:2>                 |-CallExpr 0x15c122ee8 <line:55:6, col:17> 'int'                 | `-ImplicitCastExpr 0x15c122ed0 <col:6> 'int (*)()' <FunctionToPointerDecay>                 |   `-DeclRefExpr 0x15c122eb0 <col:6> 'int ()' Function 0x15c1226a0 'beep_flush' 'int ()'                 `-ReturnStmt 0x15c122f08 <line:56:6> ","20110":"`-FunctionDecl 0x13e116e38  line:1:6 invalid __blk_end_request_cur 'int (struct request *, int)'   |-ParmVarDecl 0x13f80e268 <col:28, col:44> col:44 used rq 'struct request *'   |-ParmVarDecl 0x13f80e2e8 <col:48, col:61> col:61 invalid error 'int'   `-CompoundStmt 0x13e1172a0 <line:2:1, line:4:1>     `-ReturnStmt 0x13e117290 <line:3:2, col:58>       `-CallExpr 0x13e117258 <col:9, col:58> '<dependent type>' contains-errors         |-DeclRefExpr 0x13e117050 <col:9> 'int ()' Function 0x13e116f98 '__blk_end_request' 'int ()'         |-DeclRefExpr 0x13e117070 <col:27> 'struct request *' lvalue ParmVar 0x13f80e268 'rq' 'struct request *'         |-RecoveryExpr 0x13e117090 <col:31> '<dependent type>' contains-errors lvalue         `-CallExpr 0x13e117218 <col:38, col:57> 'int'           |-ImplicitCastExpr 0x13e117200 <col:38> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x13e117190 <col:38> 'int ()' Function 0x13e1170d8 'blk_rq_cur_bytes' 'int ()'           `-ImplicitCastExpr 0x13e117240 <col:55> 'struct request *' <LValueToRValue>             `-DeclRefExpr 0x13e1171b0 <col:55> 'struct request *' lvalue ParmVar 0x13f80e268 'rq' 'struct request *' ","19462":"`-FunctionDecl 0x12280dec0  line:1:13 server 'void (int, unsigned int, const char *)' static   |-ParmVarDecl 0x12280dcd8 <col:20, col:24> col:24 used fd 'int'   |-ParmVarDecl 0x12280dd58 <col:28, col:37> col:37 used rounds 'unsigned int'   |-ParmVarDecl 0x12280ddd8 <col:45, col:57> col:57 used prio 'const char *'   `-CompoundStmt 0x12380a5c8 <line:2:1, line:68:1>     |-DeclStmt 0x12280e048 <line:3:2, col:12>     | `-VarDecl 0x12280dfe0 <col:2, col:6> col:6 used retval 'int'     |-CallExpr 0x12280e1f8 <line:8:2, col:17> 'int'     | `-ImplicitCastExpr 0x12280e1e0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x12280e190 <col:2> 'int ()' Function 0x12280e0d8 'virt_time_init' 'int ()'     |-IfStmt 0x122827620 <line:10:2, line:12:2>     | |-BinaryOperator 0x122827428 <line:10:6, col:64> 'int' contains-errors '<'     | | |-CallExpr 0x122827400 <col:6, col:60> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x12280e2f8 <col:6> 'int ()' Function 0x12280e240 'gnutls_session_ticket_key_generate' 'int ()'     | | | `-UnaryOperator 0x12280e3d0 <col:41, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-RecoveryExpr 0x12280e3b0 <col:42> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x12280e370 <col:64> 'int' 0     | `-CompoundStmt 0x122827608 <col:67, line:12:2>     |   `-CallExpr 0x1228275c8 <line:11:3, col:13> 'int'     |     |-ImplicitCastExpr 0x1228275b0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x122827528 <col:3> 'int ()' Function 0x122827470 'fail' 'int ()'     |     `-ImplicitCastExpr 0x1228275f0 <col:8> 'char *' <ArrayToPointerDecay>     |       `-StringLiteral 0x122827590 <col:8> 'char[4]' lvalue \"STR\"     `-ForStmt 0x12380a3d0 <line:14:2, line:60:2>       |-DeclStmt 0x1228276f8 <line:14:7, col:21>       | `-VarDecl 0x122827658 <col:7, col:20> col:16 used i 'unsigned int' cinit       |   `-ImplicitCastExpr 0x1228276e0 <col:20> 'unsigned int' <IntegralCast>       |     `-IntegerLiteral 0x1228276c0 <col:20> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x122827780 <col:23, col:27> 'int' '<'       | |-ImplicitCastExpr 0x122827750 <col:23> 'unsigned int' <LValueToRValue>       | | `-DeclRefExpr 0x122827710 <col:23> 'unsigned int' lvalue Var 0x122827658 'i' 'unsigned int'       | `-ImplicitCastExpr 0x122827768 <col:27> 'unsigned int' <LValueToRValue>       |   `-DeclRefExpr 0x122827730 <col:27> 'unsigned int' lvalue ParmVar 0x12280dd58 'rounds' 'unsigned int'       |-UnaryOperator 0x1228277c0 <col:35, col:36> 'unsigned int' postfix '++'       | `-DeclRefExpr 0x1228277a0 <col:35> 'unsigned int' lvalue Var 0x122827658 'i' 'unsigned int'       `-CompoundStmt 0x12380a380 <col:40, line:60:2>         |-CallExpr 0x122827b60 <line:15:3, col:49> '<dependent type>' contains-errors         | |-DeclRefExpr 0x1228278b8 <col:3> 'int ()' Function 0x122827800 'assert' 'int ()'         | `-BinaryOperator 0x122827b40 <col:10, col:48> 'int' contains-errors '>='         |   |-CallExpr 0x122827b10 <col:10, col:45> '<dependent type>' contains-errors         |   | |-DeclRefExpr 0x1228279b8 <col:10> 'int ()' Function 0x122827900 'gnutls_init' 'int ()'         |   | |-UnaryOperator 0x122827ad8 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow         |   | | `-RecoveryExpr 0x122827ab8 <col:23> '<dependent type>' contains-errors lvalue         |   | `-RecoveryExpr 0x122827af0 <col:32> '<dependent type>' contains-errors lvalue         |   `-IntegerLiteral 0x122827a50 <col:48> 'int' 0         |-CallExpr 0x122827de8 <line:17:3, col:69> '<dependent type>' contains-errors         | |-DeclRefExpr 0x122827b88 <col:3> 'int ()' Function 0x122827800 'assert' 'int ()'         | `-BinaryOperator 0x122827dc8 <col:10, col:68> 'int' contains-errors '>='         |   |-CallExpr 0x122827da0 <col:10, col:65> '<dependent type>' contains-errors         |   | |-DeclRefExpr 0x122827c88 <col:10> 'int ()' Function 0x122827bd0 'gnutls_certificate_allocate_credentials' 'int ()'         |   | `-UnaryOperator 0x122827d88 <col:50, col:51> '<dependent type>' contains-errors prefix '&' cannot overflow         |   |   `-RecoveryExpr 0x122827d68 <col:51> '<dependent type>' contains-errors lvalue         |   `-IntegerLiteral 0x122827d00 <col:68> 'int' 0         |-BinaryOperator 0x122828110 <line:18:3, line:20:26> 'int' contains-errors '='         | |-DeclRefExpr 0x122827e10 <line:18:3> 'int' lvalue Var 0x12280dfe0 'retval' 'int'         | `-CallExpr 0x1228280d0 <col:12, line:20:26> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x122827f10 <line:18:12> 'int ()' Function 0x122827e58 'gnutls_certificate_set_x509_key_mem' 'int ()'         |   |-RecoveryExpr 0x122828020 <col:48> '<dependent type>' contains-errors lvalue         |   |-UnaryOperator 0x122828060 <line:19:7, col:8> '<dependent type>' contains-errors prefix '&' cannot overflow         |   | `-RecoveryExpr 0x122828040 <col:8> '<dependent type>' contains-errors lvalue         |   |-UnaryOperator 0x122828098 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow         |   | `-RecoveryExpr 0x122828078 <col:22> '<dependent type>' contains-errors lvalue         |   `-RecoveryExpr 0x1228280b0 <line:20:7> '<dependent type>' contains-errors lvalue         |-IfStmt 0x1228283c0 <line:21:3, line:22:39>         | |-BinaryOperator 0x122828188 <line:21:7, col:16> 'int' '<'         | | |-ImplicitCastExpr 0x122828170 <col:7> 'int' <LValueToRValue>         | | | `-DeclRefExpr 0x122828130 <col:7> 'int' lvalue Var 0x12280dfe0 'retval' 'int'         | | `-IntegerLiteral 0x122828150 <col:16> 'int' 0         | `-CallExpr 0x122828378 <line:22:4, col:39> 'int'         |   |-ImplicitCastExpr 0x122828360 <col:4> 'int (*)()' <FunctionToPointerDecay>         |   | `-DeclRefExpr 0x1228281a8 <col:4> 'int ()' Function 0x122827470 'fail' 'int ()'         |   |-ImplicitCastExpr 0x1228283a8 <col:9> 'char *' <ArrayToPointerDecay>         |   | `-StringLiteral 0x1228281c8 <col:9> 'char[4]' lvalue \"STR\"         |   `-CallExpr 0x122828320 <col:16, col:38> 'int'         |     |-ImplicitCastExpr 0x122828308 <col:16> 'int (*)()' <FunctionToPointerDecay>         |     | `-DeclRefExpr 0x1228282c8 <col:16> 'int ()' Function 0x122828210 'gnutls_strerror' 'int ()'         |     `-ImplicitCastExpr 0x122828348 <col:32> 'int' <LValueToRValue>         |       `-DeclRefExpr 0x1228282e8 <col:32> 'int' lvalue Var 0x12280dfe0 'retval' 'int'         |-IfStmt 0x123808ef0 <line:32:3, line:34:3>         | |-RecoveryExpr 0x123808d80 <line:32:7, col:17> '_Bool' contains-errors         | `-CompoundStmt 0x123808ed8 <col:35, line:34:3>         |   `-CallExpr 0x123808e90 <line:33:4, col:39> 'int'         |     |-ImplicitCastExpr 0x123808e78 <col:4> 'int (*)()' <FunctionToPointerDecay>         |     | `-DeclRefExpr 0x123808da0 <col:4> 'int ()' Function 0x122827470 'fail' 'int ()'         |     |-ImplicitCastExpr 0x123808ec0 <col:9> 'char *' <ArrayToPointerDecay>         |     | `-StringLiteral 0x123808dc0 <col:9> 'char[4]' lvalue \"STR\"         |     `-CallExpr 0x123808e38 <col:16, col:38> 'int'         |       |-ImplicitCastExpr 0x123808e20 <col:16> 'int (*)()' <FunctionToPointerDecay>         |       | `-DeclRefExpr 0x123808de0 <col:16> 'int ()' Function 0x122828210 'gnutls_strerror' 'int ()'         |       `-ImplicitCastExpr 0x123808e60 <col:32> 'int' <LValueToRValue>         |         `-DeclRefExpr 0x123808e00 <col:32> 'int' lvalue Var 0x12280dfe0 'retval' 'int'         |-DoStmt 0x123809440 <line:41:3, line:43:70>         | |-CompoundStmt 0x1238093d0 <line:41:6, line:43:3>         | `-RecoveryExpr 0x123809420 <col:12, col:50> '_Bool' contains-errors         |-IfStmt 0x1238097b8 <line:45:3, line:49:3> has_else         | |-BinaryOperator 0x1238094b8 <line:45:7, col:16> 'int' '<'         | | |-ImplicitCastExpr 0x1238094a0 <col:7> 'int' <LValueToRValue>         | | | `-DeclRefExpr 0x123809460 <col:7> 'int' lvalue Var 0x12280dfe0 'retval' 'int'         | | `-IntegerLiteral 0x123809480 <col:16> 'int' 0         | |-CompoundStmt 0x123809610 <col:19, line:47:3>         | | `-CallExpr 0x1238095c8 <line:46:4, col:39> 'int'         | |   |-ImplicitCastExpr 0x1238095b0 <col:4> 'int (*)()' <FunctionToPointerDecay>         | |   | `-DeclRefExpr 0x1238094d8 <col:4> 'int ()' Function 0x122827470 'fail' 'int ()'         | |   |-ImplicitCastExpr 0x1238095f8 <col:9> 'char *' <ArrayToPointerDecay>         | |   | `-StringLiteral 0x1238094f8 <col:9> 'char[4]' lvalue \"STR\"         | |   `-CallExpr 0x123809570 <col:16, col:38> 'int'         | |     |-ImplicitCastExpr 0x123809558 <col:16> 'int (*)()' <FunctionToPointerDecay>         | |     | `-DeclRefExpr 0x123809518 <col:16> 'int ()' Function 0x122828210 'gnutls_strerror' 'int ()'         | |     `-ImplicitCastExpr 0x123809598 <col:32> 'int' <LValueToRValue>         | |       `-DeclRefExpr 0x123809538 <col:32> 'int' lvalue Var 0x12280dfe0 'retval' 'int'         | `-CompoundStmt 0x1238097a0 <line:47:10, line:49:3>         |   `-CallExpr 0x123809760 <line:48:4, col:17> 'int'         |     |-ImplicitCastExpr 0x123809748 <col:4> 'int (*)()' <FunctionToPointerDecay>         |     | `-DeclRefExpr 0x123809708 <col:4> 'int ()' Function 0x123809650 'success' 'int ()'         |     `-ImplicitCastExpr 0x123809788 <col:12> 'char *' <ArrayToPointerDecay>         |       `-StringLiteral 0x123809728 <col:12> 'char[4]' lvalue \"STR\"         `-IfStmt 0x12380a050 <line:51:3, line:54:17> has_else           |-RecoveryExpr 0x123809f00 <line:51:7, col:40> '_Bool' contains-errors           |-CallExpr 0x123809f78 <line:52:4, col:14> 'int'           | |-ImplicitCastExpr 0x123809f60 <col:4> 'int (*)()' <FunctionToPointerDecay>           | | `-DeclRefExpr 0x123809f20 <col:4> 'int ()' Function 0x122827470 'fail' 'int ()'           | `-ImplicitCastExpr 0x123809fa0 <col:9> 'char *' <ArrayToPointerDecay>           |   `-StringLiteral 0x123809f40 <col:9> 'char[4]' lvalue \"STR\"           `-CallExpr 0x12380a010 <line:54:4, col:17> 'int'             |-ImplicitCastExpr 0x123809ff8 <col:4> 'int (*)()' <FunctionToPointerDecay>             | `-DeclRefExpr 0x123809fb8 <col:4> 'int ()' Function 0x123809650 'success' 'int ()'             `-ImplicitCastExpr 0x12380a038 <col:12> 'char *' <ArrayToPointerDecay>               `-StringLiteral 0x123809fd8 <col:12> 'char[4]' lvalue \"STR\" ","19090":"`-FunctionDecl 0x14280dec8  line:1:1 spa_base64_to_bits 'int (char *, int, const char *)'   |-ParmVarDecl 0x14280dcd8 <col:21, col:27> col:27 used out 'char *'   |-ParmVarDecl 0x14280dd58 <col:32, col:36> col:36 used outlength 'int'   |-ParmVarDecl 0x14280ddd8 <col:47, col:59> col:59 used in 'const char *'   `-CompoundStmt 0x14282abc8 <line:3:1, line:50:1>     |-DeclStmt 0x14280e070 <line:4:3, col:14>     | `-VarDecl 0x14280dfe8 <col:3, col:13> col:7 used len 'int' cinit     |   `-IntegerLiteral 0x14280e050 <col:13> 'int' 0     |-DeclStmt 0x14280e2a8 <line:5:3, col:49>     | |-VarDecl 0x14280e0b0 <col:3, col:19> col:19 used digit1 'char' register     | |-VarDecl 0x14280e128 <col:3, col:27> col:27 used digit2 'char' register     | |-VarDecl 0x14280e1a0 <col:3, col:35> col:35 used digit3 'char' register     | `-VarDecl 0x14280e218 <col:3, col:43> col:43 used digit4 'char' register     |-IfStmt 0x142826718 <line:7:3, line:8:11>     | |-BinaryOperator 0x142826688 <line:7:7, col:32> 'int' '&&'     | | |-BinaryOperator 0x14280e380 <col:7, col:16> 'int' '=='     | | | |-ImplicitCastExpr 0x14280e368 <col:7, col:11> 'int' <IntegralCast>     | | | | `-ImplicitCastExpr 0x14280e350 <col:7, col:11> 'char' <LValueToRValue>     | | | |   `-ArraySubscriptExpr 0x14280e318 <col:7, col:11> 'const char' lvalue     | | | |     |-ImplicitCastExpr 0x14280e300 <col:7> 'const char *' <LValueToRValue>     | | | |     | `-DeclRefExpr 0x14280e2c0 <col:7> 'const char *' lvalue ParmVar 0x14280ddd8 'in' 'const char *'     | | | |     `-IntegerLiteral 0x14280e2e0 <col:10> 'int' 0     | | | `-CharacterLiteral 0x14280e338 <col:16> 'int' 43     | | `-BinaryOperator 0x142826668 <col:23, col:32> 'int' '=='     | |   |-ImplicitCastExpr 0x142826650 <col:23, col:27> 'int' <IntegralCast>     | |   | `-ImplicitCastExpr 0x142826638 <col:23, col:27> 'char' <LValueToRValue>     | |   |   `-ArraySubscriptExpr 0x142826600 <col:23, col:27> 'const char' lvalue     | |   |     |-ImplicitCastExpr 0x14280e3e0 <col:23> 'const char *' <LValueToRValue>     | |   |     | `-DeclRefExpr 0x14280e3a0 <col:23> 'const char *' lvalue ParmVar 0x14280ddd8 'in' 'const char *'     | |   |     `-IntegerLiteral 0x14280e3c0 <col:26> 'int' 1     | |   `-CharacterLiteral 0x142826620 <col:32> 'int' 32     | `-CompoundAssignOperator 0x1428266e8 <line:8:5, col:11> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'     |   |-DeclRefExpr 0x1428266a8 <col:5> 'const char *' lvalue ParmVar 0x14280ddd8 'in' 'const char *'     |   `-IntegerLiteral 0x1428266c8 <col:11> 'int' 2     |-IfStmt 0x142826840 <line:9:3, line:10:14>     | |-BinaryOperator 0x1428267d0 <line:9:7, col:14> 'int' '=='     | | |-ImplicitCastExpr 0x1428267b8 <col:7, col:8> 'int' <IntegralCast>     | | | `-ImplicitCastExpr 0x1428267a0 <col:7, col:8> 'char' <LValueToRValue>     | | |   `-UnaryOperator 0x142826770 <col:7, col:8> 'const char' lvalue prefix '*' cannot overflow     | | |     `-ImplicitCastExpr 0x142826758 <col:8> 'const char *' <LValueToRValue>     | | |       `-DeclRefExpr 0x142826738 <col:8> 'const char *' lvalue ParmVar 0x14280ddd8 'in' 'const char *'     | | `-CharacterLiteral 0x142826788 <col:14> 'int' 13     | `-ReturnStmt 0x142826830 <line:10:5, col:14>     |   `-ParenExpr 0x142826810 <col:12, col:14> 'int'     |     `-IntegerLiteral 0x1428267f0 <col:13> 'int' 0     |-DoStmt 0x14282ab40 <line:12:3, line:47:45>     | |-CompoundStmt 0x14282a8c8 <line:13:5, line:46:5>     | | |-IfStmt 0x142826958 <line:14:7, line:15:19>     | | | |-BinaryOperator 0x1428268d0 <line:14:11, col:18> 'int' '>='     | | | | |-ImplicitCastExpr 0x1428268a0 <col:11> 'int' <LValueToRValue>     | | | | | `-DeclRefExpr 0x142826860 <col:11> 'int' lvalue Var 0x14280dfe8 'len' 'int'     | | | | `-ImplicitCastExpr 0x1428268b8 <col:18> 'int' <LValueToRValue>     | | | |   `-DeclRefExpr 0x142826880 <col:18> 'int' lvalue ParmVar 0x14280dd58 'outlength' 'int'     | | | `-ReturnStmt 0x142826948 <line:15:9, col:19>     | | |   `-ParenExpr 0x142826928 <col:16, col:19> 'int'     | | |     `-UnaryOperator 0x142826910 <col:17, col:18> 'int' prefix '-'     | | |       `-IntegerLiteral 0x1428268f0 <col:18> 'int' 1     | | |-BinaryOperator 0x142826a28 <line:16:7, col:20> 'char' '='     | | | |-DeclRefExpr 0x142826978 <col:7> 'char' lvalue Var 0x14280e0b0 'digit1' 'char'     | | | `-ImplicitCastExpr 0x142826a10 <col:16, col:20> 'char' <LValueToRValue>     | | |   `-ArraySubscriptExpr 0x1428269f0 <col:16, col:20> 'const char' lvalue     | | |     |-ImplicitCastExpr 0x1428269d8 <col:16> 'const char *' <LValueToRValue>     | | |     | `-DeclRefExpr 0x142826998 <col:16> 'const char *' lvalue ParmVar 0x14280ddd8 'in' 'const char *'     | | |     `-IntegerLiteral 0x1428269b8 <col:19> 'int' 0     | | |-IfStmt 0x142826e00 <line:17:7, line:18:18>     | | | |-BinaryOperator 0x142826d78 <line:17:11, col:32> 'int' contains-errors '=='     | | | | |-CallExpr 0x142826d00 <col:11, col:27> 'int'     | | | | | |-ImplicitCastExpr 0x142826ce8 <col:11> 'int (*)()' <FunctionToPointerDecay>     | | | | | | `-DeclRefExpr 0x142826b60 <col:11> 'int ()' Function 0x142826aa8 'DECODE64' 'int ()'     | | | | | `-ImplicitCastExpr 0x142826d40 <col:21> 'int' <IntegralCast>     | | | | |   `-ImplicitCastExpr 0x142826d28 <col:21> 'char' <LValueToRValue>     | | | | |     `-DeclRefExpr 0x142826b80 <col:21> 'char' lvalue Var 0x14280e0b0 'digit1' 'char'     | | | | `-RecoveryExpr 0x142826d58 <col:32> '<dependent type>' contains-errors lvalue     | | | `-ReturnStmt 0x142826df0 <line:18:8, col:18>     | | |   `-ParenExpr 0x142826dd0 <col:15, col:18> 'int'     | | |     `-UnaryOperator 0x142826db8 <col:16, col:17> 'int' prefix '-'     | | |       `-IntegerLiteral 0x142826d98 <col:17> 'int' 1     | | |-BinaryOperator 0x142826ed0 <line:19:7, col:20> 'char' '='     | | | |-DeclRefExpr 0x142826e20 <col:7> 'char' lvalue Var 0x14280e128 'digit2' 'char'     | | | `-ImplicitCastExpr 0x142826eb8 <col:16, col:20> 'char' <LValueToRValue>     | | |   `-ArraySubscriptExpr 0x142826e98 <col:16, col:20> 'const char' lvalue     | | |     |-ImplicitCastExpr 0x142826e80 <col:16> 'const char *' <LValueToRValue>     | | |     | `-DeclRefExpr 0x142826e40 <col:16> 'const char *' lvalue ParmVar 0x14280ddd8 'in' 'const char *'     | | |     `-IntegerLiteral 0x142826e60 <col:19> 'int' 1     | | |-IfStmt 0x142827160 <line:20:7, line:21:18>     | | | |-BinaryOperator 0x1428270d8 <line:20:11, col:32> 'int' contains-errors '=='     | | | | |-CallExpr 0x142827060 <col:11, col:27> 'int'     | | | | | |-ImplicitCastExpr 0x142827048 <col:11> 'int (*)()' <FunctionToPointerDecay>     | | | | | | `-DeclRefExpr 0x142826ef0 <col:11> 'int ()' Function 0x142826aa8 'DECODE64' 'int ()'     | | | | | `-ImplicitCastExpr 0x1428270a0 <col:21> 'int' <IntegralCast>     | | | | |   `-ImplicitCastExpr 0x142827088 <col:21> 'char' <LValueToRValue>     | | | | |     `-DeclRefExpr 0x142826f10 <col:21> 'char' lvalue Var 0x14280e128 'digit2' 'char'     | | | | `-RecoveryExpr 0x1428270b8 <col:32> '<dependent type>' contains-errors lvalue     | | | `-ReturnStmt 0x142827150 <line:21:8, col:18>     | | |   `-ParenExpr 0x142827130 <col:15, col:18> 'int'     | | |     `-UnaryOperator 0x142827118 <col:16, col:17> 'int' prefix '-'     | | |       `-IntegerLiteral 0x1428270f8 <col:17> 'int' 1     | | |-BinaryOperator 0x142827230 <line:22:7, col:20> 'char' '='     | | | |-DeclRefExpr 0x142827180 <col:7> 'char' lvalue Var 0x14280e1a0 'digit3' 'char'     | | | `-ImplicitCastExpr 0x142827218 <col:16, col:20> 'char' <LValueToRValue>     | | |   `-ArraySubscriptExpr 0x1428271f8 <col:16, col:20> 'const char' lvalue     | | |     |-ImplicitCastExpr 0x1428271e0 <col:16> 'const char *' <LValueToRValue>     | | |     | `-DeclRefExpr 0x1428271a0 <col:16> 'const char *' lvalue ParmVar 0x14280ddd8 'in' 'const char *'     | | |     `-IntegerLiteral 0x1428271c0 <col:19> 'int' 2     | | |-IfStmt 0x142828e30 <line:23:7, line:24:18>     | | | |-BinaryOperator 0x1428275a0 <line:23:11, col:49> 'int' contains-errors '&&'     | | | | |-BinaryOperator 0x1428274d0 <col:11, col:21> 'int' '!='     | | | | | |-ImplicitCastExpr 0x1428274b8 <col:11> 'int' <IntegralCast>     | | | | | | `-ImplicitCastExpr 0x1428274a0 <col:11> 'char' <LValueToRValue>     | | | | | |   `-DeclRefExpr 0x142827250 <col:11> 'char' lvalue Var 0x14280e1a0 'digit3' 'char'     | | | | | `-CharacterLiteral 0x142827270 <col:21> 'int' 61     | | | | `-BinaryOperator 0x142827580 <col:28, col:49> 'int' contains-errors '=='     | | | |   |-CallExpr 0x142827508 <col:28, col:44> 'int'     | | | |   | |-ImplicitCastExpr 0x1428274f0 <col:28> 'int (*)()' <FunctionToPointerDecay>     | | | |   | | `-DeclRefExpr 0x1428272d8 <col:28> 'int ()' Function 0x142826aa8 'DECODE64' 'int ()'     | | | |   | `-ImplicitCastExpr 0x142827548 <col:38> 'int' <IntegralCast>     | | | |   |   `-ImplicitCastExpr 0x142827530 <col:38> 'char' <LValueToRValue>     | | | |   |     `-DeclRefExpr 0x1428272f8 <col:38> 'char' lvalue Var 0x14280e1a0 'digit3' 'char'     | | | |   `-RecoveryExpr 0x142827560 <col:49> '<dependent type>' contains-errors lvalue     | | | `-ReturnStmt 0x142828e20 <line:24:8, col:18>     | | |   `-ParenExpr 0x142828e00 <col:15, col:18> 'int'     | | |     `-UnaryOperator 0x1428275e0 <col:16, col:17> 'int' prefix '-'     | | |       `-IntegerLiteral 0x1428275c0 <col:17> 'int' 1     | | |-BinaryOperator 0x142828f00 <line:25:7, col:20> 'char' '='     | | | |-DeclRefExpr 0x142828e50 <col:7> 'char' lvalue Var 0x14280e218 'digit4' 'char'     | | | `-ImplicitCastExpr 0x142828ee8 <col:16, col:20> 'char' <LValueToRValue>     | | |   `-ArraySubscriptExpr 0x142828ec8 <col:16, col:20> 'const char' lvalue     | | |     |-ImplicitCastExpr 0x142828eb0 <col:16> 'const char *' <LValueToRValue>     | | |     | `-DeclRefExpr 0x142828e70 <col:16> 'const char *' lvalue ParmVar 0x14280ddd8 'in' 'const char *'     | | |     `-IntegerLiteral 0x142828e90 <col:19> 'int' 3     | | |-IfStmt 0x1428292f8 <line:26:7, line:27:18>     | | | |-BinaryOperator 0x142829270 <line:26:11, col:49> 'int' contains-errors '&&'     | | | | |-BinaryOperator 0x1428291a0 <col:11, col:21> 'int' '!='     | | | | | |-ImplicitCastExpr 0x142829188 <col:11> 'int' <IntegralCast>     | | | | | | `-ImplicitCastExpr 0x142829170 <col:11> 'char' <LValueToRValue>     | | | | | |   `-DeclRefExpr 0x142828f20 <col:11> 'char' lvalue Var 0x14280e218 'digit4' 'char'     | | | | | `-CharacterLiteral 0x142828f40 <col:21> 'int' 61     | | | | `-BinaryOperator 0x142829250 <col:28, col:49> 'int' contains-errors '=='     | | | |   |-CallExpr 0x1428291d8 <col:28, col:44> 'int'     | | | |   | |-ImplicitCastExpr 0x1428291c0 <col:28> 'int (*)()' <FunctionToPointerDecay>     | | | |   | | `-DeclRefExpr 0x142828fa8 <col:28> 'int ()' Function 0x142826aa8 'DECODE64' 'int ()'     | | | |   | `-ImplicitCastExpr 0x142829218 <col:38> 'int' <IntegralCast>     | | | |   |   `-ImplicitCastExpr 0x142829200 <col:38> 'char' <LValueToRValue>     | | | |   |     `-DeclRefExpr 0x142828fc8 <col:38> 'char' lvalue Var 0x14280e218 'digit4' 'char'     | | | |   `-RecoveryExpr 0x142829230 <col:49> '<dependent type>' contains-errors lvalue     | | | `-ReturnStmt 0x1428292e8 <line:27:8, col:18>     | | |   `-ParenExpr 0x1428292c8 <col:15, col:18> 'int'     | | |     `-UnaryOperator 0x1428292b0 <col:16, col:17> 'int' prefix '-'     | | |       `-IntegerLiteral 0x142829290 <col:17> 'int' 1     | | |-CompoundAssignOperator 0x142829358 <line:28:7, col:13> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'     | | | |-DeclRefExpr 0x142829318 <col:7> 'const char *' lvalue ParmVar 0x14280ddd8 'in' 'const char *'     | | | `-IntegerLiteral 0x142829338 <col:13> 'int' 4     | | |-BinaryOperator 0x142829630 <line:29:7, col:66> 'char' '='     | | | |-UnaryOperator 0x1428293c0 <col:7, col:11> 'char' lvalue prefix '*' cannot overflow     | | | | `-UnaryOperator 0x1428293a8 <col:8, col:11> 'char *' postfix '++'     | | | |   `-DeclRefExpr 0x142829388 <col:8> 'char *' lvalue ParmVar 0x14280dcd8 'out' 'char *'     | | | `-ImplicitCastExpr 0x142829618 <col:16, col:66> 'char' <IntegralCast>     | | |   `-BinaryOperator 0x1428295f8 <col:16, col:66> 'int' '|'     | | |     |-ParenExpr 0x1428294c8 <col:16, col:39> 'int'     | | |     | `-BinaryOperator 0x1428294a8 <col:17, col:38> 'int' '<<'     | | |     |   |-CallExpr 0x142829430 <col:17, col:33> 'int'     | | |     |   | |-ImplicitCastExpr 0x142829418 <col:17> 'int (*)()' <FunctionToPointerDecay>     | | |     |   | | `-DeclRefExpr 0x1428293d8 <col:17> 'int ()' Function 0x142826aa8 'DECODE64' 'int ()'     | | |     |   | `-ImplicitCastExpr 0x142829470 <col:27> 'int' <IntegralCast>     | | |     |   |   `-ImplicitCastExpr 0x142829458 <col:27> 'char' <LValueToRValue>     | | |     |   |     `-DeclRefExpr 0x1428293f8 <col:27> 'char' lvalue Var 0x14280e0b0 'digit1' 'char'     | | |     |   `-IntegerLiteral 0x142829488 <col:38> 'int' 2     | | |     `-ParenExpr 0x1428295d8 <col:43, col:66> 'int'     | | |       `-BinaryOperator 0x1428295b8 <col:44, col:65> 'int' '>>'     | | |         |-CallExpr 0x142829540 <col:44, col:60> 'int'     | | |         | |-ImplicitCastExpr 0x142829528 <col:44> 'int (*)()' <FunctionToPointerDecay>     | | |         | | `-DeclRefExpr 0x1428294e8 <col:44> 'int ()' Function 0x142826aa8 'DECODE64' 'int ()'     | | |         | `-ImplicitCastExpr 0x142829580 <col:54> 'int' <IntegralCast>     | | |         |   `-ImplicitCastExpr 0x142829568 <col:54> 'char' <LValueToRValue>     | | |         |     `-DeclRefExpr 0x142829508 <col:54> 'char' lvalue Var 0x14280e128 'digit2' 'char'     | | |         `-IntegerLiteral 0x142829598 <col:65> 'int' 4     | | |-UnaryOperator 0x142829670 <line:30:7, col:9> 'int' prefix '++'     | | | `-DeclRefExpr 0x142829650 <col:9> 'int' lvalue Var 0x14280dfe8 'len' 'int'     | | `-IfStmt 0x14282a8a8 <line:31:7, line:45:8>     | |   |-BinaryOperator 0x1428296f0 <line:31:11, col:21> 'int' '!='     | |   | |-ImplicitCastExpr 0x1428296d8 <col:11> 'int' <IntegralCast>     | |   | | `-ImplicitCastExpr 0x1428296c0 <col:11> 'char' <LValueToRValue>     | |   | |   `-DeclRefExpr 0x142829688 <col:11> 'char' lvalue Var 0x14280e1a0 'digit3' 'char'     | |   | `-CharacterLiteral 0x1428296a8 <col:21> 'int' 61     | |   `-CompoundStmt 0x14282a878 <line:32:8, line:45:8>     | |     |-IfStmt 0x142829808 <line:33:10, line:34:22>     | |     | |-BinaryOperator 0x142829780 <line:33:14, col:21> 'int' '>='     | |     | | |-ImplicitCastExpr 0x142829750 <col:14> 'int' <LValueToRValue>     | |     | | | `-DeclRefExpr 0x142829710 <col:14> 'int' lvalue Var 0x14280dfe8 'len' 'int'     | |     | | `-ImplicitCastExpr 0x142829768 <col:21> 'int' <LValueToRValue>     | |     | |   `-DeclRefExpr 0x142829730 <col:21> 'int' lvalue ParmVar 0x14280dd58 'outlength' 'int'     | |     | `-ReturnStmt 0x1428297f8 <line:34:12, col:22>     | |     |   `-ParenExpr 0x1428297d8 <col:19, col:22> 'int'     | |     |     `-UnaryOperator 0x1428297c0 <col:20, col:21> 'int' prefix '-'     | |     |       `-IntegerLiteral 0x1428297a0 <col:21> 'int' 1     | |     |-BinaryOperator 0x142829b30 <line:35:10, line:36:71> 'char' '='     | |     | |-UnaryOperator 0x142829860 <line:35:10, col:14> 'char' lvalue prefix '*' cannot overflow     | |     | | `-UnaryOperator 0x142829848 <col:11, col:14> 'char *' postfix '++'     | |     | |   `-DeclRefExpr 0x142829828 <col:11> 'char *' lvalue ParmVar 0x14280dcd8 'out' 'char *'     | |     | `-ImplicitCastExpr 0x142829b18 <line:36:12, col:71> 'char' <IntegralCast>     | |     |   `-BinaryOperator 0x142829af8 <col:12, col:71> 'int' '|'     | |     |     |-ParenExpr 0x1428299c8 <col:12, col:44> 'int'     | |     |     | `-BinaryOperator 0x1428299a8 <col:13, col:40> 'int' '&'     | |     |     |   |-ParenExpr 0x142829968 <col:13, col:36> 'int'     | |     |     |   | `-BinaryOperator 0x142829948 <col:14, col:35> 'int' '<<'     | |     |     |   |   |-CallExpr 0x1428298d0 <col:14, col:30> 'int'     | |     |     |   |   | |-ImplicitCastExpr 0x1428298b8 <col:14> 'int (*)()' <FunctionToPointerDecay>     | |     |     |   |   | | `-DeclRefExpr 0x142829878 <col:14> 'int ()' Function 0x142826aa8 'DECODE64' 'int ()'     | |     |     |   |   | `-ImplicitCastExpr 0x142829910 <col:24> 'int' <IntegralCast>     | |     |     |   |   |   `-ImplicitCastExpr 0x1428298f8 <col:24> 'char' <LValueToRValue>     | |     |     |   |   |     `-DeclRefExpr 0x142829898 <col:24> 'char' lvalue Var 0x14280e128 'digit2' 'char'     | |     |     |   |   `-IntegerLiteral 0x142829928 <col:35> 'int' 4     | |     |     |   `-IntegerLiteral 0x142829988 <col:40> 'int' 240     | |     |     `-ParenExpr 0x142829ad8 <col:48, col:71> 'int'     | |     |       `-BinaryOperator 0x142829ab8 <col:49, col:70> 'int' '>>'     | |     |         |-CallExpr 0x142829a40 <col:49, col:65> 'int'     | |     |         | |-ImplicitCastExpr 0x142829a28 <col:49> 'int (*)()' <FunctionToPointerDecay>     | |     |         | | `-DeclRefExpr 0x1428299e8 <col:49> 'int ()' Function 0x142826aa8 'DECODE64' 'int ()'     | |     |         | `-ImplicitCastExpr 0x142829a80 <col:59> 'int' <IntegralCast>     | |     |         |   `-ImplicitCastExpr 0x142829a68 <col:59> 'char' <LValueToRValue>     | |     |         |     `-DeclRefExpr 0x142829a08 <col:59> 'char' lvalue Var 0x14280e1a0 'digit3' 'char'     | |     |         `-IntegerLiteral 0x142829a98 <col:70> 'int' 2     | |     |-UnaryOperator 0x142829b70 <line:37:10, col:12> 'int' prefix '++'     | |     | `-DeclRefExpr 0x142829b50 <col:12> 'int' lvalue Var 0x14280dfe8 'len' 'int'     | |     `-IfStmt 0x14282a858 <line:38:10, line:44:12>     | |       |-BinaryOperator 0x142829bf0 <line:38:14, col:24> 'int' '!='     | |       | |-ImplicitCastExpr 0x142829bd8 <col:14> 'int' <IntegralCast>     | |       | | `-ImplicitCastExpr 0x142829bc0 <col:14> 'char' <LValueToRValue>     | |       | |   `-DeclRefExpr 0x142829b88 <col:14> 'char' lvalue Var 0x14280e218 'digit4' 'char'     | |       | `-CharacterLiteral 0x142829ba8 <col:24> 'int' 61     | |       `-CompoundStmt 0x14282a830 <line:39:12, line:44:12>     | |         |-IfStmt 0x142829d08 <line:40:14, line:41:26>     | |         | |-BinaryOperator 0x142829c80 <line:40:18, col:25> 'int' '>='     | |         | | |-ImplicitCastExpr 0x142829c50 <col:18> 'int' <LValueToRValue>     | |         | | | `-DeclRefExpr 0x142829c10 <col:18> 'int' lvalue Var 0x14280dfe8 'len' 'int'     | |         | | `-ImplicitCastExpr 0x142829c68 <col:25> 'int' <LValueToRValue>     | |         | |   `-DeclRefExpr 0x142829c30 <col:25> 'int' lvalue ParmVar 0x14280dd58 'outlength' 'int'     | |         | `-ReturnStmt 0x142829cf8 <line:41:16, col:26>     | |         |   `-ParenExpr 0x142829cd8 <col:23, col:26> 'int'     | |         |     `-UnaryOperator 0x142829cc0 <col:24, col:25> 'int' prefix '-'     | |         |       `-IntegerLiteral 0x142829ca0 <col:25> 'int' 1     | |         |-BinaryOperator 0x14282a7d8 <line:42:14, col:75> 'char' '='     | |         | |-UnaryOperator 0x142829d60 <col:14, col:18> 'char' lvalue prefix '*' cannot overflow     | |         | | `-UnaryOperator 0x142829d48 <col:15, col:18> 'char *' postfix '++'     | |         | |   `-DeclRefExpr 0x142829d28 <col:15> 'char *' lvalue ParmVar 0x14280dcd8 'out' 'char *'     | |         | `-ImplicitCastExpr 0x14282a7c0 <col:23, col:75> 'char' <IntegralCast>     | |         |   `-BinaryOperator 0x14282a7a0 <col:23, col:75> 'int' '|'     | |         |     |-ParenExpr 0x14282a6d0 <col:23, col:55> 'int'     | |         |     | `-BinaryOperator 0x14282a6b0 <col:24, col:51> 'int' '&'     | |         |     |   |-ParenExpr 0x14282a670 <col:24, col:47> 'int'     | |         |     |   | `-BinaryOperator 0x14282a650 <col:25, col:46> 'int' '<<'     | |         |     |   |   |-CallExpr 0x142829dd0 <col:25, col:41> 'int'     | |         |     |   |   | |-ImplicitCastExpr 0x142829db8 <col:25> 'int (*)()' <FunctionToPointerDecay>     | |         |     |   |   | | `-DeclRefExpr 0x142829d78 <col:25> 'int ()' Function 0x142826aa8 'DECODE64' 'int ()'     | |         |     |   |   | `-ImplicitCastExpr 0x14282a618 <col:35> 'int' <IntegralCast>     | |         |     |   |   |   `-ImplicitCastExpr 0x14282a600 <col:35> 'char' <LValueToRValue>     | |         |     |   |   |     `-DeclRefExpr 0x142829d98 <col:35> 'char' lvalue Var 0x14280e1a0 'digit3' 'char'     | |         |     |   |   `-IntegerLiteral 0x14282a630 <col:46> 'int' 6     | |         |     |   `-IntegerLiteral 0x14282a690 <col:51> 'int' 192     | |         |     `-CallExpr 0x14282a748 <col:59, col:75> 'int'     | |         |       |-ImplicitCastExpr 0x14282a730 <col:59> 'int (*)()' <FunctionToPointerDecay>     | |         |       | `-DeclRefExpr 0x14282a6f0 <col:59> 'int ()' Function 0x142826aa8 'DECODE64' 'int ()'     | |         |       `-ImplicitCastExpr 0x14282a788 <col:69> 'int' <IntegralCast>     | |         |         `-ImplicitCastExpr 0x14282a770 <col:69> 'char' <LValueToRValue>     | |         |           `-DeclRefExpr 0x14282a710 <col:69> 'char' lvalue Var 0x14280e218 'digit4' 'char'     | |         `-UnaryOperator 0x14282a818 <line:43:14, col:16> 'int' prefix '++'     | |           `-DeclRefExpr 0x14282a7f8 <col:16> 'int' lvalue Var 0x14280dfe8 'len' 'int'     | `-BinaryOperator 0x14282ab20 <line:47:10, col:42> 'int' '&&'     |   |-BinaryOperator 0x14282aa78 <col:10, col:24> 'int' '&&'     |   | |-ImplicitCastExpr 0x14282aa60 <col:10, col:11> 'int' <IntegralCast>     |   | | `-ImplicitCastExpr 0x14282aa48 <col:10, col:11> 'char' <LValueToRValue>     |   | |   `-UnaryOperator 0x14282a978 <col:10, col:11> 'const char' lvalue prefix '*' cannot overflow     |   | |     `-ImplicitCastExpr 0x14282a960 <col:11> 'const char *' <LValueToRValue>     |   | |       `-DeclRefExpr 0x14282a940 <col:11> 'const char *' lvalue ParmVar 0x14280ddd8 'in' 'const char *'     |   | `-BinaryOperator 0x14282aa28 <col:17, col:24> 'int' '!='     |   |   |-ImplicitCastExpr 0x14282aa10 <col:17, col:18> 'int' <IntegralCast>     |   |   | `-ImplicitCastExpr 0x14282a9f8 <col:17, col:18> 'char' <LValueToRValue>     |   |   |   `-UnaryOperator 0x14282a9c8 <col:17, col:18> 'const char' lvalue prefix '*' cannot overflow     |   |   |     `-ImplicitCastExpr 0x14282a9b0 <col:18> 'const char *' <LValueToRValue>     |   |   |       `-DeclRefExpr 0x14282a990 <col:18> 'const char *' lvalue ParmVar 0x14280ddd8 'in' 'const char *'     |   |   `-CharacterLiteral 0x14282a9e0 <col:24> 'int' 13     |   `-BinaryOperator 0x14282ab00 <col:32, col:42> 'int' '!='     |     |-ImplicitCastExpr 0x14282aae8 <col:32> 'int' <IntegralCast>     |     | `-ImplicitCastExpr 0x14282aad0 <col:32> 'char' <LValueToRValue>     |     |   `-DeclRefExpr 0x14282aa98 <col:32> 'char' lvalue Var 0x14280e218 'digit4' 'char'     |     `-CharacterLiteral 0x14282aab8 <col:42> 'int' 61     `-ReturnStmt 0x14282abb8 <line:49:3, col:14>       `-ImplicitCastExpr 0x14282aba0 <col:10, col:14> 'int' <LValueToRValue>         `-ParenExpr 0x14282ab80 <col:10, col:14> 'int' lvalue           `-DeclRefExpr 0x14282ab60 <col:11> 'int' lvalue Var 0x14280dfe8 'len' 'int' ","19547":"`-FunctionDecl 0x12d905ff8  line:1:12 invalid avr_custom_spm_page_erase 'int (int *)' static   |-ParmVarDecl 0x12d905f28 <col:38, col:49> col:49 invalid esil 'int *'   `-CompoundStmt 0x12d91fe80 <col:55, line:32:1>     |-IfStmt 0x12d9062f0 <line:7:2, line:9:2>     | |-BinaryOperator 0x12d9062a8 <line:7:6, col:43> 'int' contains-errors '||'     | | |-BinaryOperator 0x12d9061a8 <col:6, col:22> 'int' contains-errors '||'     | | | |-UnaryOperator 0x12d9060f8 <col:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | `-ImplicitCastExpr 0x12d9060e0 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | | | |   `-RecoveryExpr 0x12d9060c0 <col:7> '<dependent type>' contains-errors lvalue     | | | `-UnaryOperator 0x12d906190 <col:15, col:22> '<dependent type>' contains-errors prefix '!' cannot overflow     | | |   `-ImplicitCastExpr 0x12d906178 <col:16, col:22> '<dependent type>' contains-errors <LValueToRValue>     | | |     `-CXXDependentScopeMemberExpr 0x12d906130 <col:16, col:22> '<dependent type>' contains-errors lvalue ->anal     | | |       `-RecoveryExpr 0x12d906110 <col:16> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x12d906290 <col:30, col:43> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x12d906278 <col:31, col:43> '<dependent type>' contains-errors <LValueToRValue>     | |     `-CXXDependentScopeMemberExpr 0x12d906230 <col:31, col:43> '<dependent type>' contains-errors lvalue ->reg     | |       `-CXXDependentScopeMemberExpr 0x12d9061e8 <col:31, col:37> '<dependent type>' contains-errors lvalue ->anal     | |         `-RecoveryExpr 0x12d9061c8 <col:31> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12d9062e0 <col:48, line:9:2>     `-IfStmt 0x12d9065d0 <line:12:2, line:14:2>       |-UnaryOperator 0x12d906590 <line:12:6, col:38> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-CallExpr 0x12d906560 <col:7, col:38> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x12d906470 <col:7> 'int ()' Function 0x12d9063b8 '__esil_pop_argument' 'int ()'       |   |-RecoveryExpr 0x12d906490 <col:27> '<dependent type>' contains-errors lvalue       |   `-UnaryOperator 0x12d906548 <col:33, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow       |     `-RecoveryExpr 0x12d906528 <col:34> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x12d9065c0 <col:41, line:14:2> ","19803":"`-FunctionDecl 0x14b00dee8  line:1:1 invalid print_values 'int (long long, int, int)'   |-ParmVarDecl 0x14b00dcd8 <col:14, col:24> col:24 byte_offset 'long long'   |-ParmVarDecl 0x14b00dd70 <col:37, col:44> col:44 invalid bit_offset 'int'   |-ParmVarDecl 0x14b00ddf0 <line:2:7, col:14> col:14 invalid bits_available 'int'   `-CompoundStmt 0x14b00dff8 <line:3:1, line:7:1>     `-RecoveryExpr 0x14b00dfd8 <line:4:5> '<dependent type>' contains-errors lvalue ","19440":"`-FunctionDecl 0x15a1281c8  line:1:17 invalid typeName 'const char *(int)'   |-ParmVarDecl 0x15a1280f0 <col:27, col:36> col:36 invalid type 'int'   `-CompoundStmt 0x15a141de8 <col:42, line:27:5>     `-SwitchStmt 0x15a1282b0 <line:2:9, line:26:9>       |-ImplicitCastExpr 0x15a128298 <line:2:17> '<dependent type>' contains-errors <LValueToRValue>       | `-RecoveryExpr 0x15a128278 <col:17> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x15a141d28 <col:23, line:26:9>         |-ReturnStmt 0x15a128380 <line:3:26, col:33>         | `-ImplicitCastExpr 0x15a128368 <col:33> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x15a128350 <col:33> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x15a128330 <col:33> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x15a1283f8 <line:4:23, col:30>         | `-ImplicitCastExpr 0x15a1283e0 <col:30> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x15a1283c8 <col:30> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x15a1283a8 <col:30> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x15a128470 <line:5:32, col:39>         | `-ImplicitCastExpr 0x15a128458 <col:39> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x15a128440 <col:39> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x15a128420 <col:39> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x15a1284e8 <line:6:26, col:33>         | `-ImplicitCastExpr 0x15a1284d0 <col:33> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x15a1284b8 <col:33> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x15a128498 <col:33> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x15a128560 <line:7:26, col:33>         | `-ImplicitCastExpr 0x15a128548 <col:33> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x15a128530 <col:33> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x15a128510 <col:33> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x15a1285d8 <line:8:25, col:32>         | `-ImplicitCastExpr 0x15a1285c0 <col:32> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x15a1285a8 <col:32> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x15a128588 <col:32> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x15a128650 <line:9:27, col:34>         | `-ImplicitCastExpr 0x15a128638 <col:34> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x15a128620 <col:34> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x15a128600 <col:34> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x15a1286c8 <line:10:29, col:36>         | `-ImplicitCastExpr 0x15a1286b0 <col:36> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x15a128698 <col:36> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x15a128678 <col:36> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x15a128740 <line:11:26, col:33>         | `-ImplicitCastExpr 0x15a128728 <col:33> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x15a128710 <col:33> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x15a1286f0 <col:33> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x15a1287b8 <line:12:24, col:31>         | `-ImplicitCastExpr 0x15a1287a0 <col:31> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x15a128788 <col:31> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x15a128768 <col:31> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x15a141830 <line:13:24, col:31>         | `-ImplicitCastExpr 0x15a141818 <col:31> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x15a141800 <col:31> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x15a1287e0 <col:31> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x15a1418a8 <line:14:27, col:34>         | `-ImplicitCastExpr 0x15a141890 <col:34> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x15a141878 <col:34> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x15a141858 <col:34> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x15a141920 <line:15:25, col:32>         | `-ImplicitCastExpr 0x15a141908 <col:32> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x15a1418f0 <col:32> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x15a1418d0 <col:32> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x15a141998 <line:16:25, col:32>         | `-ImplicitCastExpr 0x15a141980 <col:32> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x15a141968 <col:32> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x15a141948 <col:32> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x15a141a10 <line:17:24, col:31>         | `-ImplicitCastExpr 0x15a1419f8 <col:31> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x15a1419e0 <col:31> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x15a1419c0 <col:31> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x15a141a88 <line:18:26, col:33>         | `-ImplicitCastExpr 0x15a141a70 <col:33> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x15a141a58 <col:33> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x15a141a38 <col:33> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x15a141b00 <line:19:30, col:37>         | `-ImplicitCastExpr 0x15a141ae8 <col:37> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x15a141ad0 <col:37> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x15a141ab0 <col:37> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x15a141b78 <line:20:29, col:36>         | `-ImplicitCastExpr 0x15a141b60 <col:36> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x15a141b48 <col:36> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x15a141b28 <col:36> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x15a141bd8 <line:21:29, col:36>         | `-ImplicitCastExpr 0x15a141bc0 <col:36> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x15a141ba8 <col:36> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x15a141b88 <col:36> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x15a141c38 <line:22:30, col:37>         | `-ImplicitCastExpr 0x15a141c20 <col:37> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x15a141c08 <col:37> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x15a141be8 <col:37> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x15a141c98 <line:24:26, col:33>         | `-ImplicitCastExpr 0x15a141c80 <col:33> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x15a141c68 <col:33> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x15a141c48 <col:33> 'char[4]' lvalue \"STR\"         `-DefaultStmt 0x15a141d08 <line:25:13, col:29>           `-ReturnStmt 0x15a141cf8 <col:22, col:29>             `-ImplicitCastExpr 0x15a141ce0 <col:29> 'const char *' <NoOp>               `-ImplicitCastExpr 0x15a141cc8 <col:29> 'char *' <ArrayToPointerDecay>                 `-StringLiteral 0x15a141ca8 <col:29> 'char[4]' lvalue \"STR\" ","19225":"`-FunctionDecl 0x13c928118  line:1:1 ins_s_right 'int ()'   `-CompoundStmt 0x13c941410 <line:2:1, line:21:1>     |-DeclStmt 0x13c928350 <line:3:5, col:45>     | `-VarDecl 0x13c928220 <col:5, col:40> col:9 used end_change 'int' cinit     |   `-BinaryOperator 0x13c928330 <col:22, col:40> 'int' contains-errors '=='     |     |-RecoveryExpr 0x13c9282f0 <col:22> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x13c928310 <col:40> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13c9284b8 <line:8:5, col:22> 'int'     | `-ImplicitCastExpr 0x13c9284a0 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x13c928448 <col:5> 'int ()' Function 0x13c928390 'undisplay_dollar' 'int ()'     `-IfStmt 0x13c9413c8 <line:9:5, line:19:18> has_else       |-BinaryOperator 0x13c940bd8 <line:9:9, line:10:27> 'int' contains-errors '||'       | |-BinaryOperator 0x13c940b40 <line:9:9, col:46> 'int' contains-errors '<'       | | |-CXXDependentScopeMemberExpr 0x13c940a48 <col:9, col:26> '<dependent type>' contains-errors lvalue .lnum       | | | `-CXXDependentScopeMemberExpr 0x13c940a00 <col:9, col:17> '<dependent type>' contains-errors lvalue ->w_cursor       | | |   `-RecoveryExpr 0x13c9287d8 <col:9> '<dependent type>' contains-errors lvalue       | | `-CXXDependentScopeMemberExpr 0x13c940af8 <col:33, col:46> '<dependent type>' contains-errors lvalue .ml_line_count       | |   `-CXXDependentScopeMemberExpr 0x13c940ab0 <col:33, col:41> '<dependent type>' contains-errors lvalue ->b_ml       | |     `-RecoveryExpr 0x13c940a90 <col:33> '<dependent type>' contains-errors lvalue       | `-BinaryOperator 0x13c940bb8 <line:10:9, col:27> 'int' contains-errors '!='       |   |-CallExpr 0x13c940b78 <col:9, col:22> 'int'       |   | `-ImplicitCastExpr 0x13c940b60 <col:9> 'int (*)()' <FunctionToPointerDecay>       |   |   `-DeclRefExpr 0x13c928728 <col:9> 'int ()' Function 0x13c928670 'gchar_cursor' 'int ()'       |   `-RecoveryExpr 0x13c940b98 <col:27> '<dependent type>' contains-errors lvalue       |-CompoundStmt 0x13c941220 <line:11:5, line:17:5>       | |-CallExpr 0x13c940e40 <line:12:2, col:55> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x13c940cd8 <col:2> 'int ()' Function 0x13c940c20 'start_arrow_with_change' 'int ()'       | | |-UnaryOperator 0x13c940e28 <col:26, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow       | | | `-CXXDependentScopeMemberExpr 0x13c940de0 <col:27, col:35> '<dependent type>' contains-errors lvalue ->w_cursor       | | |   `-RecoveryExpr 0x13c940dc0 <col:27> '<dependent type>' contains-errors lvalue       | | `-DeclRefExpr 0x13c940d70 <col:45> 'int' contains-errors lvalue Var 0x13c928220 'end_change' 'int'       | `-IfStmt 0x13c941048 <line:13:2, line:14:36>       |   |-UnaryOperator 0x13c940ea8 <line:13:6, col:7> 'int' contains-errors prefix '!' cannot overflow       |   | `-ImplicitCastExpr 0x13c940e90 <col:7> 'int' contains-errors <LValueToRValue>       |   |   `-DeclRefExpr 0x13c940e70 <col:7> 'int' contains-errors lvalue Var 0x13c928220 'end_change' 'int'       |   `-CallExpr 0x13c941020 <line:14:6, col:36> '<dependent type>' contains-errors       |     |-DeclRefExpr 0x13c940fa0 <col:6> 'int ()' Function 0x13c940ee8 'AppendCharToRedobuff' 'int ()'       |     `-RecoveryExpr 0x13c941000 <col:27> '<dependent type>' contains-errors lvalue       `-CallExpr 0x13c9413a0 <line:19:2, col:18> '<dependent type>' contains-errors         |-DeclRefExpr 0x13c941320 <col:2> 'int ()' Function 0x13c941268 'vim_beep' 'int ()'         `-RecoveryExpr 0x13c941380 <col:11> '<dependent type>' contains-errors lvalue ","19487":"`-FunctionDecl 0x1441283e8  line:1:1 referenced invalid AcpiNsGetNodeUnlocked 'int (int *, const char *, int, int **)'   |-ParmVarDecl 0x144128128 <line:2:5, col:30> col:30 invalid PrefixNode 'int *'   |-ParmVarDecl 0x1441281a8 <line:3:5, col:30> col:30 used Pathname 'const char *'   |-ParmVarDecl 0x144128228 <line:4:5, col:29> col:29 invalid Flags 'int'   |-ParmVarDecl 0x1441282e0 <line:5:5, col:31> col:31 invalid ReturnNode 'int **'   `-CompoundStmt 0x145808b08 <line:6:1, line:61:1>     |-DeclStmt 0x144128530 <line:9:5, col:42>     | `-VarDecl 0x1441284c8 <col:5, col:30> col:30 used InternalPath 'char *'     |-IfStmt 0x144808a60 <line:17:5, line:26:5>     | |-UnaryOperator 0x144808658 <line:17:9, col:10> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x144808640 <col:10> 'const char *' <LValueToRValue>     | |   `-DeclRefExpr 0x144808620 <col:10> 'const char *' lvalue ParmVar 0x1441281a8 'Pathname' 'const char *'     | `-CompoundStmt 0x144808a38 <line:18:5, line:26:5>     |   |-BinaryOperator 0x1448086e0 <line:19:9, col:23> '<dependent type>' contains-errors '='     |   | |-UnaryOperator 0x1448086a8 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow     |   | | `-ImplicitCastExpr 0x144808690 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |   | |   `-RecoveryExpr 0x144808670 <col:10> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x1448086c0 <col:23> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x144808890 <line:20:9, line:23:9>     |   | |-UnaryOperator 0x144808738 <line:20:13, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | | `-ImplicitCastExpr 0x144808720 <col:14> '<dependent type>' contains-errors <LValueToRValue>     |   | |   `-RecoveryExpr 0x144808700 <col:14> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x144808878 <line:21:9, line:23:9>     |   |   `-BinaryOperator 0x144808858 <line:22:13, col:27> '<dependent type>' contains-errors '='     |   |     |-UnaryOperator 0x144808820 <col:13, col:14> '<dependent type>' contains-errors prefix '*' cannot overflow     |   |     | `-ImplicitCastExpr 0x144808808 <col:14> '<dependent type>' contains-errors <LValueToRValue>     |   |     |   `-RecoveryExpr 0x144808750 <col:14> '<dependent type>' contains-errors lvalue     |   |     `-RecoveryExpr 0x144808838 <col:27> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x144808a10 <line:25:9, col:34> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x144808990 <col:9> 'int ()' Function 0x1448088d8 'return_ACPI_STATUS' 'int ()'     |     `-RecoveryExpr 0x1448089f0 <col:29> '<dependent type>' contains-errors lvalue     |-IfStmt 0x144808f78 <line:30:5, line:34:5>     | |-BinaryOperator 0x144808d68 <line:30:9, col:59> 'int' '&&'     | | |-CallExpr 0x144808c48 <col:9, col:41> 'int'     | | | |-ImplicitCastExpr 0x144808c30 <col:9> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x144808b60 <col:9> 'int ()' Function 0x144808aa8 'ACPI_IS_ROOT_PREFIX' 'int ()'     | | | `-ImplicitCastExpr 0x144808c88 <col:30, col:40> 'int' <IntegralCast>     | | |   `-ImplicitCastExpr 0x144808c70 <col:30, col:40> 'char' <LValueToRValue>     | | |     `-ArraySubscriptExpr 0x144808bd8 <col:30, col:40> 'const char' lvalue     | | |       |-ImplicitCastExpr 0x144808bc0 <col:30> 'const char *' <LValueToRValue>     | | |       | `-DeclRefExpr 0x144808b80 <col:30> 'const char *' lvalue ParmVar 0x1441281a8 'Pathname' 'const char *'     | | |       `-IntegerLiteral 0x144808ba0 <col:39> 'int' 0     | | `-ParenExpr 0x144808d48 <col:46, col:59> 'int'     | |   `-UnaryOperator 0x144808d30 <col:47, col:58> 'int' prefix '!' cannot overflow     | |     `-ImplicitCastExpr 0x144808d18 <col:48, col:58> 'char' <LValueToRValue>     | |       `-ArraySubscriptExpr 0x144808cf8 <col:48, col:58> 'const char' lvalue     | |         |-ImplicitCastExpr 0x144808ce0 <col:48> 'const char *' <LValueToRValue>     | |         | `-DeclRefExpr 0x144808ca0 <col:48> 'const char *' lvalue ParmVar 0x1441281a8 'Pathname' 'const char *'     | |         `-IntegerLiteral 0x144808cc0 <col:57> 'int' 1     | `-CompoundStmt 0x144808f58 <line:31:5, line:34:5>     |   |-BinaryOperator 0x144808e90 <line:32:9, col:23> '<dependent type>' contains-errors '='     |   | |-UnaryOperator 0x144808e58 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow     |   | | `-ImplicitCastExpr 0x144808e40 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |   | |   `-RecoveryExpr 0x144808d88 <col:10> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x144808e70 <col:23> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x144808f30 <line:33:9, col:34> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x144808eb0 <col:9> 'int ()' Function 0x1448088d8 'return_ACPI_STATUS' 'int ()'     |     `-RecoveryExpr 0x144808f10 <col:29> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1448092d8 <line:39:5, line:42:5>     | |-RecoveryExpr 0x144809288 <line:39:9, col:29> '_Bool' contains-errors     | `-CompoundStmt 0x1448092c8 <line:40:5, line:42:5>     |-IfStmt 0x145808950 <line:53:5, line:57:5>     | |-RecoveryExpr 0x144809498 <line:53:9, col:29> '_Bool' contains-errors     | `-CompoundStmt 0x145808940 <line:54:5, line:57:5>     `-CallExpr 0x145808aa8 <line:59:5, col:28> 'int'       |-ImplicitCastExpr 0x145808a90 <col:5> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x145808a50 <col:5> 'int ()' Function 0x145808998 'ACPI_FREE' 'int ()'       `-ImplicitCastExpr 0x145808ad0 <col:16> 'char *' <LValueToRValue>         `-DeclRefExpr 0x145808a70 <col:16> 'char *' lvalue Var 0x1441284c8 'InternalPath' 'char *' ","19641":"`-FunctionDecl 0x14f9281c8  line:1:1 invalid pq_getstring 'int (int)'   |-ParmVarDecl 0x14f9280f0 <col:14, col:25> col:25 invalid s 'int'   `-CompoundStmt 0x14f942020 <line:2:1, line:33:1>     |-DeclStmt 0x14f9282f8 <line:3:2, col:9>     | `-VarDecl 0x14f928290 <col:2, col:8> col:8 used i 'int'     |-CallExpr 0x14f9284b0 <line:5:2, col:19> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14f928470 <col:2> 'int ()' Function 0x14f9283b8 'resetStringInfo' 'int ()'     | `-RecoveryExpr 0x14f928490 <col:18> '<dependent type>' contains-errors lvalue     `-ForStmt 0x14f941fe8 <line:8:2, line:32:2>       |-<<<NULL>>>       |-<<<NULL>>>       |-<<<NULL>>>       |-<<<NULL>>>       `-CompoundStmt 0x14f941fc0 <line:9:2, line:32:2>         |-WhileStmt 0x14f928778 <line:10:3, line:14:3>         | |-BinaryOperator 0x14f928568 <line:10:10, col:27> 'int' contains-errors '>='         | | |-RecoveryExpr 0x14f928528 <col:10> '<dependent type>' contains-errors lvalue         | | `-RecoveryExpr 0x14f928548 <col:27> '<dependent type>' contains-errors lvalue         | `-CompoundStmt 0x14f928760 <line:11:3, line:14:3>         |   `-IfStmt 0x14f928740 <line:12:4, line:13:12>         |     |-CallExpr 0x14f9286d8 <line:12:8, col:19> 'int'         |     | `-ImplicitCastExpr 0x14f9286c0 <col:8> 'int (*)()' <FunctionToPointerDecay>         |     |   `-DeclRefExpr 0x14f928668 <col:8> 'int ()' Function 0x14f9285b0 'pq_recvbuf' 'int ()'         |     `-ReturnStmt 0x14f928730 <line:13:5, col:12>         |       `-RecoveryExpr 0x14f928710 <col:12> '<dependent type>' contains-errors lvalue         |-ForStmt 0x14f941d78 <line:16:3, line:26:3>         | |-<<<NULL>>>         | |-<<<NULL>>>         | |-BinaryOperator 0x14f941878 <line:16:27, col:31> 'int' contains-errors '<'         | | |-DeclRefExpr 0x14f941800 <col:27> 'int' lvalue Var 0x14f928290 'i' 'int'         | | `-RecoveryExpr 0x14f941858 <col:31> '<dependent type>' contains-errors lvalue         | |-UnaryOperator 0x14f9418b8 <col:45, col:46> 'int' postfix '++'         | | `-DeclRefExpr 0x14f941898 <col:45> 'int' lvalue Var 0x14f928290 'i' 'int'         | `-CompoundStmt 0x14f941d60 <line:17:3, line:26:3>         |   `-IfStmt 0x14f941d40 <line:18:4, line:25:4>         |     |-RecoveryExpr 0x14f941920 <line:18:8, col:27> '_Bool' contains-errors         |     `-CompoundStmt 0x14f941d20 <line:19:4, line:25:4>         |       |-CallExpr 0x14f941c40 <line:21:5, line:22:34> '<dependent type>' contains-errors         |       | |-DeclRefExpr 0x14f941a20 <line:21:5> 'int ()' Function 0x14f941968 'appendBinaryStringInfo' 'int ()'         |       | |-RecoveryExpr 0x14f941a40 <col:28> '<dependent type>' contains-errors lvalue         |       | |-BinaryOperator 0x14f941bc0 <col:31, col:46> '<dependent type>' contains-errors '+'         |       | | |-RecoveryExpr 0x14f941b80 <col:31> '<dependent type>' contains-errors lvalue         |       | | `-RecoveryExpr 0x14f941ba0 <col:46> '<dependent type>' contains-errors lvalue         |       | `-BinaryOperator 0x14f941c20 <line:22:13, col:33> '<dependent type>' contains-errors '+'         |       |   |-BinaryOperator 0x14f941c00 <col:13, col:17> '<dependent type>' contains-errors '-'         |       |   | |-DeclRefExpr 0x14f941ab0 <col:13> 'int' lvalue Var 0x14f928290 'i' 'int'         |       |   | `-RecoveryExpr 0x14f941be0 <col:17> '<dependent type>' contains-errors lvalue         |       |   `-IntegerLiteral 0x14f941b08 <col:33> 'int' 1         |       `-ReturnStmt 0x14f941d10 <line:24:5, col:12>         |         `-IntegerLiteral 0x14f941cf0 <col:12> 'int' 0         `-CallExpr 0x14f941f88 <line:29:3, line:30:39> '<dependent type>' contains-errors           |-DeclRefExpr 0x14f941db0 <line:29:3> 'int ()' Function 0x14f941968 'appendBinaryStringInfo' 'int ()'           |-RecoveryExpr 0x14f941dd0 <col:26> '<dependent type>' contains-errors lvalue           |-BinaryOperator 0x14f941f08 <col:29, col:44> '<dependent type>' contains-errors '+'           | |-RecoveryExpr 0x14f941ec8 <col:29> '<dependent type>' contains-errors lvalue           | `-RecoveryExpr 0x14f941ee8 <col:44> '<dependent type>' contains-errors lvalue           `-BinaryOperator 0x14f941f68 <line:30:11, col:26> '<dependent type>' contains-errors '-'             |-RecoveryExpr 0x14f941f28 <col:11> '<dependent type>' contains-errors lvalue             `-RecoveryExpr 0x14f941f48 <col:26> '<dependent type>' contains-errors lvalue ","19743":"`-FunctionDecl 0x13600dd68  line:1:9 invalid schm_box_new 'int *()'   `-CompoundStmt 0x13600e078 <line:2:1, line:5:1>     `-CallExpr 0x13600e030 <line:3:2, col:61> '<dependent type>' contains-errors       |-DeclRefExpr 0x13600df70 <col:2> 'int ()' Function 0x13600deb8 'ISOM_DECL_BOX_ALLOC' 'int ()'       |-RecoveryExpr 0x13600dff0 <col:22> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x13600e010 <col:40> '<dependent type>' contains-errors lvalue ","19782":"`-FunctionDecl 0x12c027438  line:1:1 invalid zzip_disk_entry_strdup_comment 'int (int *, struct zzip_disk_entry *)'   |-ParmVarDecl 0x12c00dd28 <col:32, col:43> col:43 invalid disk 'int *'   |-ParmVarDecl 0x12c00e318 <col:49, col:73> col:73 used entry 'struct zzip_disk_entry *'   `-CompoundStmt 0x12c027f00 <line:2:1, line:15:1>     |-IfStmt 0x12c0275e0 <line:3:5, col:35>     | |-BinaryOperator 0x12c027590 <col:9, col:21> 'int' contains-errors '||'     | | |-UnaryOperator 0x12c027528 <col:9, col:11> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x12c027510 <col:11> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-RecoveryExpr 0x12c0274f0 <col:11> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x12c027578 <col:19, col:21> 'int' prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x12c027560 <col:21> 'struct zzip_disk_entry *' <LValueToRValue>     | |     `-DeclRefExpr 0x12c027540 <col:21> 'struct zzip_disk_entry *' lvalue ParmVar 0x12c00e318 'entry' 'struct zzip_disk_entry *'     | `-ReturnStmt 0x12c0275d0 <col:28, col:35>     |   `-IntegerLiteral 0x12c0275b0 <col:35> 'int' 0     |-IfStmt 0x12c027a28 <line:6:5, line:9:9> has_else     | |-RecoveryExpr 0x12c027858 <line:6:9, col:47> '_Bool' contains-errors     | |-NullStmt 0x12c027a20 <line:7:2>     | `-ReturnStmt 0x12c027a10 <line:9:2, col:9>     |   `-IntegerLiteral 0x12c0279f0 <col:9> 'int' 0     |-IfStmt 0x12c027d00 <line:11:5, line:12:9>     | |-BinaryOperator 0x12c027cb0 <line:11:9, col:49> 'int' contains-errors '||'     | | |-BinaryOperator 0x12c027c10 <col:9, col:24> 'int' contains-errors '>'     | | | |-CXXDependentScopeMemberExpr 0x12c027a78 <col:9, col:15> '<dependent type>' contains-errors lvalue ->buffer     | | | | `-RecoveryExpr 0x12c027a58 <col:9> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x12c027bf0 <col:24> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x12c027c90 <col:32, col:49> 'int' contains-errors '>'     | |   |-BinaryOperator 0x12c027c70 <col:32, col:37> '<dependent type>' contains-errors '+'     | |   | |-RecoveryExpr 0x12c027c30 <col:32> '<dependent type>' contains-errors lvalue     | |   | `-RecoveryExpr 0x12c027c50 <col:37> '<dependent type>' contains-errors lvalue     | |   `-CXXDependentScopeMemberExpr 0x12c027b68 <col:43, col:49> '<dependent type>' contains-errors lvalue ->endbuf     | |     `-RecoveryExpr 0x12c027b48 <col:43> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12c027cf0 <line:12:2, col:9>     |   `-IntegerLiteral 0x12c027cd0 <col:9> 'int' 0     `-ReturnStmt 0x12c027ef0 <line:14:5, col:37>       `-CallExpr 0x12c027ec0 <col:13, col:37> '<dependent type>' contains-errors         |-DeclRefExpr 0x12c027e00 <col:13> 'int ()' Function 0x12c027d48 '_zzip_strndup' 'int ()'         |-RecoveryExpr 0x12c027e80 <col:28> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x12c027ea0 <col:34> '<dependent type>' contains-errors lvalue ","19874":"`-FunctionDecl 0x1289281c8  line:1:22 invalid dtls1_max_handshake_message_len 'unsigned long (const int *)' static   |-ParmVarDecl 0x1289280f0 <col:54, col:65> col:65 invalid s 'const int *'   `-CompoundStmt 0x1289285a0 <line:2:1, line:8:1>     |-DeclStmt 0x1289283a8 <line:3:5, line:4:62>     | `-VarDecl 0x128928290 <line:3:5, line:4:34> line:3:19 used max_len 'unsigned long' cinit     |   `-BinaryOperator 0x128928388 <line:4:9, col:34> '<dependent type>' contains-errors '+'     |     |-RecoveryExpr 0x128928348 <col:9> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x128928368 <col:34> '<dependent type>' contains-errors lvalue     |-IfStmt 0x128928538 <line:5:5, line:6:19>     | |-BinaryOperator 0x1289284a0 <line:5:9, col:37> 'int' contains-errors '<'     | | |-ImplicitCastExpr 0x128928488 <col:9> 'unsigned long' contains-errors <LValueToRValue>     | | | `-DeclRefExpr 0x1289283c0 <col:9> 'unsigned long' contains-errors lvalue Var 0x128928290 'max_len' 'unsigned long'     | | `-CStyleCastExpr 0x128928460 <col:19, col:37> 'unsigned long' contains-errors <Dependent>     | |   `-CXXDependentScopeMemberExpr 0x128928400 <col:34, col:37> '<dependent type>' contains-errors lvalue ->max_cert_list     | |     `-RecoveryExpr 0x1289283e0 <col:34> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x128928528 <line:6:9, col:19>     |   `-CXXDependentScopeMemberExpr 0x1289284e0 <col:16, col:19> '<dependent type>' contains-errors lvalue ->max_cert_list     |     `-RecoveryExpr 0x1289284c0 <col:16> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x128928590 <line:7:5, col:12>       `-ImplicitCastExpr 0x128928578 <col:12> 'unsigned long' contains-errors <LValueToRValue>         `-DeclRefExpr 0x128928558 <col:12> 'unsigned long' contains-errors lvalue Var 0x128928290 'max_len' 'unsigned long' ","19232":"`-FunctionDecl 0x11e027fb0  col:9 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x11e0280b0 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x11e028118 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x11e028180 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x11e028058 <<invalid sloc>> Implicit 882 ","19895":"`-FunctionDecl 0x105008888  line:1:6 invalid interleaved_compress 'int (int *, int *, int *, int, int, const int *, int, int, int, int, const int *, int)'   |-ParmVarDecl 0x12701f328 <col:27, col:55> col:55 invalid interleaved 'int *'   |-ParmVarDecl 0x12701f3a8 <col:68, col:74> col:74 invalid pDstData 'int *'   |-ParmVarDecl 0x12701f428 <col:84, col:92> col:92 invalid pDstSize 'int *'   |-ParmVarDecl 0x12701f4a8 <line:2:27, col:34> col:34 invalid nWidth 'int'   |-ParmVarDecl 0x12701f528 <col:42, col:49> col:49 invalid nHeight 'int'   |-ParmVarDecl 0x12701f5a8 <col:58, col:70> col:70 invalid pSrcData 'const int *'   |-ParmVarDecl 0x12701f628 <col:80, col:87> col:87 invalid SrcFormat 'int'   |-ParmVarDecl 0x12701f6a8 <line:3:27, col:34> col:34 invalid nSrcStep 'int'   |-ParmVarDecl 0x12701f728 <col:44, col:51> col:51 invalid nXSrc 'int'   |-ParmVarDecl 0x12701f7a8 <col:58, col:65> col:65 invalid nYSrc 'int'   |-ParmVarDecl 0x12701f828 <col:72, col:90> col:90 invalid palette 'const int *'   |-ParmVarDecl 0x12701f8a8 <line:4:27, col:34> col:34 invalid bpp 'int'   `-CompoundStmt 0x12703ab98 <line:5:1, line:71:1>     |-DeclStmt 0x105008ac8 <line:9:2, col:36>     | `-VarDecl 0x1050089c0 <col:2, col:15> col:15 invalid maxSize 'const int'     |-IfStmt 0x105008c58 <line:11:2, line:12:10>     | |-BinaryOperator 0x105008bf0 <line:11:6, col:36> 'int' contains-errors '||'     | | |-BinaryOperator 0x105008b80 <col:6, col:23> 'int' contains-errors '||'     | | | |-UnaryOperator 0x105008b18 <col:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | `-ImplicitCastExpr 0x105008b00 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | | | |   `-RecoveryExpr 0x105008ae0 <col:7> '<dependent type>' contains-errors lvalue     | | | `-UnaryOperator 0x105008b68 <col:22, col:23> '<dependent type>' contains-errors prefix '!' cannot overflow     | | |   `-ImplicitCastExpr 0x105008b50 <col:23> '<dependent type>' contains-errors <LValueToRValue>     | | |     `-RecoveryExpr 0x105008b30 <col:23> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x105008bd8 <col:35, col:36> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x105008bc0 <col:36> '<dependent type>' contains-errors <LValueToRValue>     | |     `-RecoveryExpr 0x105008ba0 <col:36> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x105008c48 <line:12:3, col:10>     |   `-RecoveryExpr 0x105008c28 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x105008de0 <line:14:2, line:15:10>     | |-BinaryOperator 0x105008d78 <line:14:6, col:36> 'int' contains-errors '||'     | | |-ParenExpr 0x105008cd8 <col:6, col:18> 'int' contains-errors     | | | `-BinaryOperator 0x105008cb8 <col:7, col:17> 'int' contains-errors '=='     | | |   |-RecoveryExpr 0x105008c78 <col:7> '<dependent type>' contains-errors lvalue     | | |   `-IntegerLiteral 0x105008c98 <col:17> 'int' 0     | | `-ParenExpr 0x105008d58 <col:23, col:36> 'int' contains-errors     | |   `-BinaryOperator 0x105008d38 <col:24, col:35> 'int' contains-errors '=='     | |     |-RecoveryExpr 0x105008cf8 <col:24> '<dependent type>' contains-errors lvalue     | |     `-IntegerLiteral 0x105008d18 <col:35> 'int' 0     | `-ReturnStmt 0x105008dd0 <line:15:3, col:10>     |   `-RecoveryExpr 0x105008db0 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x105009050 <line:17:2, line:21:2>     | |-BinaryOperator 0x105008e40 <line:17:6, col:15> '<dependent type>' contains-errors '%'     | | |-RecoveryExpr 0x105008e00 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x105008e20 <col:15> 'int' 4     | `-CompoundStmt 0x105009040 <line:18:2, line:21:2>     |-IfStmt 0x1050091e0 <line:23:2, line:30:2>     | |-BinaryOperator 0x105009170 <line:23:6, col:36> 'int' contains-errors '||'     | | |-ParenExpr 0x1050090d0 <col:6, col:18> 'int' contains-errors     | | | `-BinaryOperator 0x1050090b0 <col:7, col:16> 'int' contains-errors '>'     | | |   |-RecoveryExpr 0x105009070 <col:7> '<dependent type>' contains-errors lvalue     | | |   `-IntegerLiteral 0x105009090 <col:16> 'int' 64     | | `-ParenExpr 0x105009150 <col:23, col:36> 'int' contains-errors     | |   `-BinaryOperator 0x105009130 <col:24, col:34> 'int' contains-errors '>'     | |     |-RecoveryExpr 0x1050090f0 <col:24> '<dependent type>' contains-errors lvalue     | |     `-IntegerLiteral 0x105009110 <col:34> 'int' 64     | `-CompoundStmt 0x1050091d0 <line:24:2, line:30:2>     |-SwitchStmt 0x105009238 <line:32:2, line:48:2>     | |-ImplicitCastExpr 0x105009220 <line:32:10> '<dependent type>' contains-errors <LValueToRValue>     | | `-RecoveryExpr 0x105009200 <col:10> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x105009390 <line:33:2, line:48:2>     |   |-CaseStmt 0x105009280 <line:34:3, <invalid sloc>>     |   | |-IntegerLiteral 0x105009260 <col:8> 'int' 24     |   | `-NullStmt 0x1050092a8 <<invalid sloc>>     |   |-BreakStmt 0x1050092b0 <line:36:4>     |   |-CaseStmt 0x1050092d8 <line:38:3, <invalid sloc>>     |   | |-IntegerLiteral 0x1050092b8 <col:8> 'int' 16     |   | `-NullStmt 0x105009300 <<invalid sloc>>     |   |-BreakStmt 0x105009308 <line:40:4>     |   |-CaseStmt 0x105009330 <line:42:3, <invalid sloc>>     |   | |-IntegerLiteral 0x105009310 <col:8> 'int' 15     |   | `-NullStmt 0x105009358 <<invalid sloc>>     |   |-BreakStmt 0x105009360 <line:44:4>     |   `-DefaultStmt 0x105009370 <line:46:3, col:10>     |     `-NullStmt 0x105009368 <col:10>     `-CallExpr 0x12703a608 <line:59:2, col:40> '<dependent type>' contains-errors       |-DeclRefExpr 0x12703a560 <col:2> 'int ()' Function 0x12703a4a8 'Stream_SetPosition' 'int ()'       |-CXXDependentScopeMemberExpr 0x12703a5a0 <col:21, col:34> '<dependent type>' contains-errors lvalue ->bts       | `-RecoveryExpr 0x12703a580 <col:21> '<dependent type>' contains-errors lvalue       `-IntegerLiteral 0x12703a5e8 <col:39> 'int' 0 ","19453":"`-FunctionDecl 0x14c941838  line:1:14 invalid __bpf_ringbuf_reserve 'void *(struct bpf_ringbuf *, int)' static   |-ParmVarDecl 0x14c928648 <col:36, col:56> col:56 used rb 'struct bpf_ringbuf *'   |-ParmVarDecl 0x14c9286e0 <col:60, col:64> col:64 invalid size 'int'   `-CompoundStmt 0x14d809610 <line:2:1, line:40:1>     |-DeclStmt 0x14c941b18 <line:3:2, col:55>     | |-VarDecl 0x14c941908 <col:2, col:16> col:16 used cons_pos 'unsigned long'     | |-VarDecl 0x14c941988 <col:2, col:26> col:26 used prod_pos 'unsigned long'     | |-VarDecl 0x14c941a08 <col:2, col:36> col:36 used new_prod_pos 'unsigned long'     | `-VarDecl 0x14c941a88 <col:2, col:50> col:50 used flags 'unsigned long'     |-DeclStmt 0x14c941d18 <line:5:2, col:29>     | |-RecordDecl 0x14c941b30 <col:2, col:9> col:9 struct bpf_ringbuf_hdr     | `-VarDecl 0x14c941c98 <col:2, col:26> col:26 used hdr 'struct bpf_ringbuf_hdr *'     |-IfStmt 0x14c941fe0 <line:7:2, line:8:10>     | |-CallExpr 0x14c941f70 <line:7:6, col:43> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14c941e90 <col:6> 'int ()' Function 0x14c941dd8 'unlikely' 'int ()'     | | `-BinaryOperator 0x14c941f50 <col:15, col:22> 'int' contains-errors '>'     | |   |-RecoveryExpr 0x14c941eb0 <col:15> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x14c941f30 <col:22> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14c941fd0 <line:8:3, col:10>     |   `-RecoveryExpr 0x14c941fb0 <col:10> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14c942368 <line:11:2, col:47> 'unsigned long' contains-errors '='     | |-DeclRefExpr 0x14c9421a8 <col:2> 'unsigned long' lvalue Var 0x14c941908 'cons_pos' 'unsigned long'     | `-CallExpr 0x14c942340 <col:13, col:47> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14c9422a8 <col:13> 'int ()' Function 0x14c9421f0 'smp_load_acquire' 'int ()'     |   `-UnaryOperator 0x14c942328 <col:30, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x14c942300 <col:31, col:35> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14c9422c8 <col:31> 'struct bpf_ringbuf *' lvalue ParmVar 0x14c928648 'rb' 'struct bpf_ringbuf *'     |-IfStmt 0x14d8089b8 <line:13:2, line:18:2> has_else     | |-CallExpr 0x14c9424d8 <line:13:6, col:13> 'int'     | | `-ImplicitCastExpr 0x14c9424c0 <col:6> 'int (*)()' <FunctionToPointerDecay>     | |   `-DeclRefExpr 0x14c942468 <col:6> 'int ()' Function 0x14c9423b0 'in_nmi' 'int ()'     | |-CompoundStmt 0x14c942740 <col:16, line:16:2>     | | `-IfStmt 0x14c942720 <line:14:3, line:15:11>     | |   |-UnaryOperator 0x14c9426c0 <line:14:7, col:49> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   | `-CallExpr 0x14c942690 <col:8, col:49> '<dependent type>' contains-errors     | |   |   |-DeclRefExpr 0x14c9425d8 <col:8> 'int ()' Function 0x14c942520 'spin_trylock_irqsave' 'int ()'     | |   |   |-UnaryOperator 0x14c942658 <col:29, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   |   | `-RecoveryExpr 0x14c942630 <col:30, col:34> '<dependent type>' contains-errors lvalue     | |   |   |   `-DeclRefExpr 0x14c9425f8 <col:30> 'struct bpf_ringbuf *' lvalue ParmVar 0x14c928648 'rb' 'struct bpf_ringbuf *'     | |   |   `-DeclRefExpr 0x14c942670 <col:44> 'unsigned long' lvalue Var 0x14c941a88 'flags' 'unsigned long'     | |   `-ReturnStmt 0x14c942710 <line:15:4, col:11>     | |     `-RecoveryExpr 0x14c9426f0 <col:11> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14d8089a0 <line:16:9, line:18:2>     |   `-CallExpr 0x14d808970 <line:17:3, col:41> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14d8088b8 <col:3> 'int ()' Function 0x14d808800 'spin_lock_irqsave' 'int ()'     |     |-UnaryOperator 0x14d808938 <col:21, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | `-RecoveryExpr 0x14d808910 <col:22, col:26> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x14d8088d8 <col:22> 'struct bpf_ringbuf *' lvalue ParmVar 0x14c928648 'rb' 'struct bpf_ringbuf *'     |     `-DeclRefExpr 0x14d808950 <col:36> 'unsigned long' lvalue Var 0x14c941a88 'flags' 'unsigned long'     |-BinaryOperator 0x14d808a68 <line:20:2, col:17> 'unsigned long' contains-errors '='     | |-DeclRefExpr 0x14d8089e8 <col:2> 'unsigned long' lvalue Var 0x14c941988 'prod_pos' 'unsigned long'     | `-RecoveryExpr 0x14d808a40 <col:13, col:17> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14d808a08 <col:13> 'struct bpf_ringbuf *' lvalue ParmVar 0x14c928648 'rb' 'struct bpf_ringbuf *'     |-BinaryOperator 0x14d808b60 <line:21:2, col:28> 'unsigned long' contains-errors '='     | |-DeclRefExpr 0x14d808a88 <col:2> 'unsigned long' lvalue Var 0x14c941a08 'new_prod_pos' 'unsigned long'     | `-BinaryOperator 0x14d808b40 <col:17, col:28> '<dependent type>' contains-errors '+'     |   |-DeclRefExpr 0x14d808aa8 <col:17> 'unsigned long' lvalue Var 0x14c941988 'prod_pos' 'unsigned long'     |   `-RecoveryExpr 0x14d808b20 <col:28> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14d808e70 <line:24:2, line:27:2>     | |-BinaryOperator 0x14d808c70 <line:24:6, col:36> 'int' contains-errors '>'     | | |-BinaryOperator 0x14d808bf0 <col:6, col:21> 'unsigned long' '-'     | | | |-ImplicitCastExpr 0x14d808bc0 <col:6> 'unsigned long' <LValueToRValue>     | | | | `-DeclRefExpr 0x14d808b80 <col:6> 'unsigned long' lvalue Var 0x14c941a08 'new_prod_pos' 'unsigned long'     | | | `-ImplicitCastExpr 0x14d808bd8 <col:21> 'unsigned long' <LValueToRValue>     | | |   `-DeclRefExpr 0x14d808ba0 <col:21> 'unsigned long' lvalue Var 0x14c941908 'cons_pos' 'unsigned long'     | | `-RecoveryExpr 0x14d808c48 <col:32, col:36> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14d808c10 <col:32> 'struct bpf_ringbuf *' lvalue ParmVar 0x14c928648 'rb' 'struct bpf_ringbuf *'     | `-CompoundStmt 0x14d808e58 <col:42, line:27:2>     |   `-CallExpr 0x14d808e28 <line:25:3, col:46> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14d808d70 <col:3> 'int ()' Function 0x14d808cb8 'spin_unlock_irqrestore' 'int ()'     |     |-UnaryOperator 0x14d808df0 <col:26, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | `-RecoveryExpr 0x14d808dc8 <col:27, col:31> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x14d808d90 <col:27> 'struct bpf_ringbuf *' lvalue ParmVar 0x14c928648 'rb' 'struct bpf_ringbuf *'     |     `-DeclRefExpr 0x14d808e08 <col:41> 'unsigned long' lvalue Var 0x14c941a88 'flags' 'unsigned long'     |-BinaryOperator 0x14d809030 <line:29:2, col:47> 'struct bpf_ringbuf_hdr *' contains-errors '='     | |-DeclRefExpr 0x14d808e90 <col:2> 'struct bpf_ringbuf_hdr *' lvalue Var 0x14c941c98 'hdr' 'struct bpf_ringbuf_hdr *'     | `-BinaryOperator 0x14d809010 <col:8, col:47> '<dependent type>' contains-errors '+'     |   |-CStyleCastExpr 0x14d808f28 <col:8, col:20> 'void *' contains-errors <Dependent>     |   | `-RecoveryExpr 0x14d808ee8 <col:16, col:20> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14d808eb0 <col:16> 'struct bpf_ringbuf *' lvalue ParmVar 0x14c928648 'rb' 'struct bpf_ringbuf *'     |   `-ParenExpr 0x14d808ff0 <col:27, col:47> '<dependent type>' contains-errors     |     `-BinaryOperator 0x14d808fd0 <col:28, col:43> '<dependent type>' contains-errors '&'     |       |-DeclRefExpr 0x14d808f50 <col:28> 'unsigned long' lvalue Var 0x14c941988 'prod_pos' 'unsigned long'     |       `-RecoveryExpr 0x14d808fa8 <col:39, col:43> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x14d808f70 <col:39> 'struct bpf_ringbuf *' lvalue ParmVar 0x14c928648 'rb' 'struct bpf_ringbuf *'     |-CallExpr 0x14d809480 <line:35:2, col:51> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14d8093c8 <col:2> 'int ()' Function 0x14d809310 'smp_store_release' 'int ()'     | |-UnaryOperator 0x14d809448 <col:20, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x14d809420 <col:21, col:25> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14d8093e8 <col:21> 'struct bpf_ringbuf *' lvalue ParmVar 0x14c928648 'rb' 'struct bpf_ringbuf *'     | `-DeclRefExpr 0x14d809460 <col:39> 'unsigned long' lvalue Var 0x14c941a08 'new_prod_pos' 'unsigned long'     `-CallExpr 0x14d809568 <line:37:2, col:45> '<dependent type>' contains-errors       |-DeclRefExpr 0x14d8094b0 <col:2> 'int ()' Function 0x14d808cb8 'spin_unlock_irqrestore' 'int ()'       |-UnaryOperator 0x14d809530 <col:25, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow       | `-RecoveryExpr 0x14d809508 <col:26, col:30> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x14d8094d0 <col:26> 'struct bpf_ringbuf *' lvalue ParmVar 0x14c928648 'rb' 'struct bpf_ringbuf *'       `-DeclRefExpr 0x14d809548 <col:40> 'unsigned long' lvalue Var 0x14c941a88 'flags' 'unsigned long' ","19419":"`-FunctionDecl 0x158128318  line:1:1 invalid zone_unchanged 'int (int *, int *, int *)'   |-ParmVarDecl 0x158128128 <col:16, col:26> col:26 invalid db1 'int *'   |-ParmVarDecl 0x1581281a8 <col:31, col:41> col:41 invalid db2 'int *'   |-ParmVarDecl 0x158128228 <col:46, col:57> col:57 invalid mctx 'int *'   `-CompoundStmt 0x15000a858 <col:63, line:12:1>     `-CallExpr 0x158128608 <line:6:2, col:27> '<dependent type>' contains-errors       |-DeclRefExpr 0x158128530 <col:2> 'int ()' Function 0x158128478 'dns_diff_init' 'int ()'       |-RecoveryExpr 0x158128550 <col:16> '<dependent type>' contains-errors lvalue       `-UnaryOperator 0x1581285f0 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x1581285d0 <col:23> '<dependent type>' contains-errors lvalue ","19439":"`-FunctionDecl 0x14c8346b8  col:5 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x14c835400 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x14c834760 <<invalid sloc>> Implicit 873 ","20150":"`-FunctionDecl 0x13c0e9f58  line:1:1 resolve_iffeature 'int (struct lys_iffeature *)'   |-ParmVarDecl 0x13c0e9e48 <col:19, col:41> col:41 used expr 'struct lys_iffeature *'   `-CompoundStmt 0x13c102740 <line:2:1, line:9:1>     |-DeclStmt 0x13c1023a8 <line:3:5, col:33>     | |-VarDecl 0x13c102268 <col:5, col:19> col:9 used index_e 'int' cinit     | | `-IntegerLiteral 0x13c1022d0 <col:19> 'int' 0     | `-VarDecl 0x13c102308 <col:5, col:32> col:22 used index_f 'int' cinit     |   `-IntegerLiteral 0x13c102370 <col:32> 'int' 0     |-IfStmt 0x13c1026f0 <line:5:5, line:7:5>     | |-RecoveryExpr 0x13c1023f8 <line:5:9, col:15> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13c1023c0 <col:9> 'struct lys_iffeature *' lvalue ParmVar 0x13c0e9e48 'expr' 'struct lys_iffeature *'     | `-CompoundStmt 0x13c1026d8 <col:21, line:7:5>     |   `-ReturnStmt 0x13c1026c8 <line:6:9, col:68>     |     `-CallExpr 0x13c102678 <col:16, col:68> 'int'     |       |-ImplicitCastExpr 0x13c102660 <col:16> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x13c102550 <col:16> 'int ()' Function 0x13c102498 'resolve_iffeature_recursive' 'int ()'     |       |-ImplicitCastExpr 0x13c1026b0 <col:44> 'struct lys_iffeature *' <LValueToRValue>     |       | `-DeclRefExpr 0x13c102570 <col:44> 'struct lys_iffeature *' lvalue ParmVar 0x13c0e9e48 'expr' 'struct lys_iffeature *'     |       |-UnaryOperator 0x13c1025e0 <col:50, col:51> 'int *' prefix '&' cannot overflow     |       | `-DeclRefExpr 0x13c102590 <col:51> 'int' lvalue Var 0x13c102268 'index_e' 'int'     |       `-UnaryOperator 0x13c102618 <col:60, col:61> 'int *' prefix '&' cannot overflow     |         `-DeclRefExpr 0x13c1025f8 <col:61> 'int' lvalue Var 0x13c102308 'index_f' 'int'     `-ReturnStmt 0x13c102730 <line:8:5, col:12>       `-IntegerLiteral 0x13c102710 <col:12> 'int' 0 ","19724":"`-FunctionDecl 0x14b128318  line:1:1 invalid load_contents_close_callback 'int (int *, int *, int)'   |-ParmVarDecl 0x14b128128 <col:31, col:45> col:45 invalid obj 'int *'   |-ParmVarDecl 0x14b1281a8 <line:2:31, col:45> col:45 invalid close_res 'int *'   |-ParmVarDecl 0x14b128228 <line:3:31, col:45> col:45 invalid user_data 'int'   `-CompoundStmt 0x14b809720 <line:4:1, line:14:1>     |-CallExpr 0x14b1287b8 <line:9:3, col:55> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b1286d0 <col:3> 'int ()' Function 0x14b128618 'g_input_stream_close_finish' 'int ()'     | |-RecoveryExpr 0x14b128778 <col:32> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x14b128708 <col:40> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14b128798 <col:51> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14b809360 <line:10:3, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b8092e0 <col:3> 'int ()' Function 0x14b809228 'g_object_unref' 'int ()'     | `-RecoveryExpr 0x14b809340 <col:19> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14b8095b8 <line:12:3, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b809468 <col:3> 'int ()' Function 0x14b8093b0 'g_task_return_boolean' 'int ()'     | |-CXXDependentScopeMemberExpr 0x14b809550 <col:26, col:32> '<dependent type>' contains-errors lvalue ->task     | | `-RecoveryExpr 0x14b809530 <col:26> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14b809598 <col:38> '<dependent type>' contains-errors lvalue     `-CallExpr 0x14b8096f8 <line:13:3, col:29> '<dependent type>' contains-errors       |-DeclRefExpr 0x14b8095e8 <col:3> 'int ()' Function 0x14b809228 'g_object_unref' 'int ()'       `-CXXDependentScopeMemberExpr 0x14b8096b0 <col:19, col:25> '<dependent type>' contains-errors lvalue ->task         `-RecoveryExpr 0x14b809690 <col:19> '<dependent type>' contains-errors lvalue ","19146":"`-FunctionDecl 0x1379281d8  line:1:15 lh_char_hash 'unsigned long (const void *)'   |-ParmVarDecl 0x137928108 <col:28, col:40> col:40 used k 'const void *'   `-CompoundStmt 0x137941c08 <line:2:1, line:9:1>     |-DeclStmt 0x137928388 <line:3:2, col:20>     | `-VarDecl 0x1379282e8 <col:2, col:19> col:15 used h 'unsigned int' cinit     |   `-ImplicitCastExpr 0x137928370 <col:19> 'unsigned int' <IntegralCast>     |     `-IntegerLiteral 0x137928350 <col:19> 'int' 0     |-DeclStmt 0x137928498 <line:4:2, col:35>     | `-VarDecl 0x1379283b8 <col:2, col:34> col:14 used data 'const char *' cinit     |   `-CStyleCastExpr 0x137928470 <col:21, col:34> 'const char *' <BitCast>     |     `-ImplicitCastExpr 0x137928458 <col:34> 'const void *' <LValueToRValue> part_of_explicit_cast     |       `-DeclRefExpr 0x137928420 <col:34> 'const void *' lvalue ParmVar 0x137928108 'k' 'const void *'     |-WhileStmt 0x137941b88 <line:6:2, col:58>     | |-BinaryOperator 0x137928550 <col:9, col:16> 'int' '!='     | | |-ImplicitCastExpr 0x137928538 <col:9, col:10> 'int' <IntegralCast>     | | | `-ImplicitCastExpr 0x137928520 <col:9, col:10> 'char' <LValueToRValue>     | | |   `-UnaryOperator 0x1379284e8 <col:9, col:10> 'const char' lvalue prefix '*' cannot overflow     | | |     `-ImplicitCastExpr 0x1379284d0 <col:10> 'const char *' <LValueToRValue>     | | |       `-DeclRefExpr 0x1379284b0 <col:10> 'const char *' lvalue Var 0x1379283b8 'data' 'const char *'     | | `-IntegerLiteral 0x137928500 <col:16> 'int' 0     | `-BinaryOperator 0x137941b68 <col:20, col:58> 'unsigned int' contains-errors '='     |   |-DeclRefExpr 0x137928570 <col:20> 'unsigned int' lvalue Var 0x1379282e8 'h' 'unsigned int'     |   `-BinaryOperator 0x137941b48 <col:24, col:58> '<dependent type>' contains-errors '+'     |     |-BinaryOperator 0x137941b08 <col:24, col:54> 'unsigned int' '+'     |     | |-BinaryOperator 0x137941a90 <col:24, col:26> 'unsigned int' '*'     |     | | |-ImplicitCastExpr 0x137941a60 <col:24> 'unsigned int' <LValueToRValue>     |     | | | `-DeclRefExpr 0x137928590 <col:24> 'unsigned int' lvalue Var 0x1379282e8 'h' 'unsigned int'     |     | | `-ImplicitCastExpr 0x137941a78 <col:26> 'unsigned int' <IntegralCast>     |     | |   `-IntegerLiteral 0x1379285b0 <col:26> 'int' 129     |     | `-CStyleCastExpr 0x137941ae0 <col:32, col:54> 'unsigned int' <IntegralCast>     |     |   `-ImplicitCastExpr 0x137941ac8 <col:46, col:54> 'char' <LValueToRValue> part_of_explicit_cast     |     |     `-ParenExpr 0x1379286a8 <col:46, col:54> 'const char' lvalue     |     |       `-UnaryOperator 0x137928658 <col:47, col:52> 'const char' lvalue prefix '*' cannot overflow     |     |         `-UnaryOperator 0x137928640 <col:48, col:52> 'const char *' postfix '++'     |     |           `-DeclRefExpr 0x137928620 <col:48> 'const char *' lvalue Var 0x1379283b8 'data' 'const char *'     |     `-RecoveryExpr 0x137941b28 <col:58> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x137941bf8 <line:8:2, col:9>       `-ImplicitCastExpr 0x137941be0 <col:9> 'unsigned long' <IntegralCast>         `-ImplicitCastExpr 0x137941bc8 <col:9> 'unsigned int' <LValueToRValue>           `-DeclRefExpr 0x137941ba8 <col:9> 'unsigned int' lvalue Var 0x1379282e8 'h' 'unsigned int' ","19200":"`-FunctionDecl 0x13b142648  col:15 implicit used strdup 'char *(const char *)' extern   |-ParmVarDecl 0x13b142748 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x13b1426f0 <<invalid sloc>> Implicit 950 ","19631":"`-FunctionDecl 0x143128238  line:1:1 TEST_P 'int (int, int)'   |-ParmVarDecl 0x143128158 <col:8> col:8 TcpTunnelingIntegrationTest 'int'   |-ParmVarDecl 0x1431280d8 <col:37> col:37 TcpProxyDownstreamFlush 'int'   `-CompoundStmt 0x143141460 <col:62, line:34:1>     |-DeclStmt 0x143128470 <line:3:3, col:41>     | `-VarDecl 0x143128368 <col:3, col:18> col:18 invalid size 'const int'     |-CallExpr 0x1431286c8 <line:5:3, col:14> 'int'     | `-ImplicitCastExpr 0x1431286b0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x143128660 <col:3> 'int ()' Function 0x1431285a8 'initialize' 'int ()'     |-CallExpr 0x143140a48 <line:7:3, col:44> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1431287c8 <col:3> 'int ()' Function 0x143128710 'setUpConnection' 'int ()'     | `-RecoveryExpr 0x143140a28 <col:19> '<dependent type>' contains-errors lvalue     |-RecoveryExpr 0x143140ab8 <line:10:3> '<dependent type>' contains-errors lvalue     |-IfStmt 0x143141348 <line:11:3, line:25:3> has_else     | |-BinaryOperator 0x143140cd8 <line:11:7, col:29> 'int' contains-errors '=='     | | |-CallExpr 0x143140c98 <col:7, col:24> 'int'     | | | `-ImplicitCastExpr 0x143140c80 <col:7> 'int (*)()' <FunctionToPointerDecay>     | | |   `-DeclRefExpr 0x143140bb8 <col:7> 'int ()' Function 0x143140b00 'upstreamProtocol' 'int ()'     | | `-RecoveryExpr 0x143140cb8 <col:29> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x143141280 <col:53, line:17:3>     | | |-CallExpr 0x143140fe8 <line:12:5, col:49> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x143140dd8 <col:5> 'int ()' Function 0x143140d20 'ASSERT_TRUE' 'int ()'     | | | `-CallExpr 0x143140fb8 <col:17, col:48> '<dependent type>' contains-errors     | | |   |-CXXDependentScopeMemberExpr 0x143140f50 <col:17, col:30> '<dependent type>' contains-errors lvalue ->write     | | |   | `-RecoveryExpr 0x143140f30 <col:17> '<dependent type>' contains-errors lvalue     | | |   |-StringLiteral 0x143140ea0 <col:36> 'char[4]' lvalue \"STR\"     | | |   `-RecoveryExpr 0x143140f98 <col:43> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x143141238 <line:13:5, col:64> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x143141010 <col:5> 'int ()' Function 0x143140d20 'ASSERT_TRUE' 'int ()'     | |   `-CallExpr 0x143141208 <col:17, col:63> '<dependent type>' contains-errors     | |     |-CXXDependentScopeMemberExpr 0x143141170 <col:17, col:36> '<dependent type>' contains-errors lvalue ->waitForData     | |     | `-RecoveryExpr 0x143141150 <col:17> '<dependent type>' contains-errors lvalue     | |     |-UnaryOperator 0x1431411f0 <col:48, col:49> '<dependent type>' contains-errors prefix '*' cannot overflow     | |     | `-ImplicitCastExpr 0x1431411d8 <col:49> '<dependent type>' contains-errors <LValueToRValue>     | |     |   `-RecoveryExpr 0x1431411b8 <col:49> '<dependent type>' contains-errors lvalue     | |     `-IntegerLiteral 0x1431410d8 <col:62> 'int' 5     | `-CompoundStmt 0x143141338 <line:17:10, line:25:3>     `-IfStmt 0x143141440 <line:31:3, line:33:3>       |-RecoveryExpr 0x143141410 <line:31:7, col:46> '_Bool' contains-errors       `-CompoundStmt 0x143141430 <col:53, line:33:3> ","19849":"`-FunctionDecl 0x150928198  line:1:1 _gcry_rngcsprng_enable_quick_gen 'int (void)'   `-CompoundStmt 0x1509282c0 <line:2:1, line:4:1> ","19326":"`-FunctionDecl 0x122928118  line:1:1 command 'int ()'   `-CompoundStmt 0x122941ae0 <line:2:1, line:16:1>     |-DeclStmt 0x122928288 <line:3:5, col:10>     | `-VarDecl 0x122928220 <col:5, col:9> col:9 used i 'int'     |-IfStmt 0x122941aa0 <line:8:5, line:13:2> has_else     | |-CallExpr 0x1229285a0 <line:8:9, col:30> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x122928520 <col:9> 'int ()' Function 0x122928468 'is_definition' 'int ()'     | | `-RecoveryExpr 0x122928580 <col:23> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x122928718 <line:9:2, col:9> 'int'     | | `-ImplicitCastExpr 0x122928700 <col:2> 'int (*)()' <FunctionToPointerDecay>     | |   `-DeclRefExpr 0x1229286a8 <col:2> 'int ()' Function 0x1229285f0 'define' 'int ()'     | `-IfStmt 0x122941a70 <line:10:10, line:13:2> has_else     |   |-CallExpr 0x1229418f0 <line:10:14, col:34> 'int'     |   | `-ImplicitCastExpr 0x1229418d8 <col:14> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x1229418b8 <col:14> 'int ()' Function 0x122941800 'is_array_assignment' 'int ()'     |   |-NullStmt 0x122941910 <line:11:2>     |   `-NullStmt 0x122941a68 <line:13:2>     `-ReturnStmt 0x122941ad0 <line:15:5> ","20034":"`-FunctionDecl 0x134144d48  line:1:1 bgp_capability_mp 'int (struct peer *, struct capability *)'   |-ParmVarDecl 0x134128648 <col:20, col:33> col:33 used peer 'struct peer *'   |-ParmVarDecl 0x134144c28 <col:39, col:58> col:58 used cap 'struct capability *'   `-CompoundStmt 0x13480a0a0 <line:2:1, line:67:1>     |-IfStmt 0x13480a040 <line:3:3, line:64:5> has_else     | |-BinaryOperator 0x1341450b8 <line:3:7, col:31> 'int' contains-errors '=='     | | |-CallExpr 0x134145038 <col:7, col:26> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x134144f70 <col:7> 'int ()' Function 0x134144eb8 'ntohs' 'int ()'     | | | `-CXXDependentScopeMemberExpr 0x134144ff0 <col:14, col:23> '<dependent type>' contains-errors lvalue .afi     | | |   `-RecoveryExpr 0x134144fc8 <col:14, col:19> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x134144f90 <col:14> 'struct capability *' lvalue ParmVar 0x134144c28 'cap' 'struct capability *'     | | `-RecoveryExpr 0x134145098 <col:31> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x134145bc0 <line:4:5, line:34:5>     | | `-IfStmt 0x134145b90 <line:5:7, line:33:10> has_else     | |   |-BinaryOperator 0x1341451d8 <line:5:11, col:28> 'int' contains-errors '=='     | |   | |-CXXDependentScopeMemberExpr 0x134145138 <col:11, col:20> '<dependent type>' contains-errors lvalue .safi     | |   | | `-RecoveryExpr 0x134145110 <col:11, col:16> '<dependent type>' contains-errors lvalue     | |   | |   `-DeclRefExpr 0x1341450d8 <col:11> 'struct capability *' lvalue ParmVar 0x134144c28 'cap' 'struct capability *'     | |   | `-RecoveryExpr 0x1341451b8 <col:28> '<dependent type>' contains-errors lvalue     | |   |-CompoundStmt 0x134145488 <line:6:2, line:13:2>     | |   | `-IfStmt 0x134145458 <line:9:4, line:12:14> has_else     | |   |   |-RecoveryExpr 0x134145338 <line:9:8, col:38> '_Bool' contains-errors     | |   |   |-NullStmt 0x134145450 <line:10:6>     | |   |   `-ReturnStmt 0x134145440 <line:12:6, col:14>     | |   |     `-UnaryOperator 0x134145428 <col:13, col:14> 'int' prefix '-'     | |   |       `-IntegerLiteral 0x134145408 <col:14> 'int' 1     | |   `-IfStmt 0x134145b60 <line:14:12, line:33:10> has_else     | |     |-BinaryOperator 0x1341455a0 <line:14:16, col:33> 'int' contains-errors '=='     | |     | |-CXXDependentScopeMemberExpr 0x134145500 <col:16, col:25> '<dependent type>' contains-errors lvalue .safi     | |     | | `-RecoveryExpr 0x1341454d8 <col:16, col:21> '<dependent type>' contains-errors lvalue     | |     | |   `-DeclRefExpr 0x1341454a0 <col:16> 'struct capability *' lvalue ParmVar 0x134144c28 'cap' 'struct capability *'     | |     | `-RecoveryExpr 0x134145580 <col:33> '<dependent type>' contains-errors lvalue     | |     |-CompoundStmt 0x1341457f0 <line:15:2, line:22:2>     | |     | `-IfStmt 0x1341457c0 <line:18:4, line:21:14> has_else     | |     |   |-RecoveryExpr 0x1341456d0 <line:18:8, col:40> '_Bool' contains-errors     | |     |   |-NullStmt 0x1341457b8 <line:19:6>     | |     |   `-ReturnStmt 0x1341457a8 <line:21:6, col:14>     | |     |     `-UnaryOperator 0x134145790 <col:13, col:14> 'int' prefix '-'     | |     |       `-IntegerLiteral 0x134145770 <col:14> 'int' 1     | |     `-IfStmt 0x134145b30 <line:23:12, line:33:10> has_else     | |       |-RecoveryExpr 0x1341458b0 <line:23:16, col:33> '_Bool' contains-errors     | |       |-CompoundStmt 0x134145ad0 <line:24:2, line:31:2>     | |       | `-IfStmt 0x134145aa0 <line:27:4, line:30:14> has_else     | |       |   |-RecoveryExpr 0x1341459b0 <line:27:8, col:39> '_Bool' contains-errors     | |       |   |-NullStmt 0x134145a98 <line:28:6>     | |       |   `-ReturnStmt 0x134145a88 <line:30:6, col:14>     | |       |     `-UnaryOperator 0x134145a70 <col:13, col:14> 'int' prefix '-'     | |       |       `-IntegerLiteral 0x134145a50 <col:14> 'int' 1     | |       `-ReturnStmt 0x134145b20 <line:33:2, col:10>     | |         `-UnaryOperator 0x134145b08 <col:9, col:10> 'int' prefix '-'     | |           `-IntegerLiteral 0x134145ae8 <col:10> 'int' 1     | `-CompoundStmt 0x13480a028 <line:61:5, line:64:5>     |   `-ReturnStmt 0x13480a018 <line:63:7, col:15>     |     `-UnaryOperator 0x13480a000 <col:14, col:15> 'int' prefix '-'     |       `-IntegerLiteral 0x134145bd8 <col:15> 'int' 1     `-ReturnStmt 0x13480a090 <line:66:3, col:10>       `-IntegerLiteral 0x13480a070 <col:10> 'int' 0 ","20155":"`-FunctionDecl 0x160008818  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x160008918 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x160008980 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x1600089e8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1600088c0 <<invalid sloc>> Implicit 900 ","19781":"`-FunctionDecl 0x14d940ea8  line:1:1 check_entry_size_and_hooks 'int (struct ipt_entry *, struct xt_table_info *, const unsigned char *, const unsigned char *, const unsigned int *, const unsigned int *, unsigned int)'   |-ParmVarDecl 0x14d928648 <col:28, col:46> col:46 used e 'struct ipt_entry *'   |-ParmVarDecl 0x14d940a28 <line:2:7, col:29> col:29 used newinfo 'struct xt_table_info *'   |-ParmVarDecl 0x14d940ad8 <line:3:7, col:28> col:28 used base 'const unsigned char *'   |-ParmVarDecl 0x14d940b58 <line:4:7, col:28> col:28 used limit 'const unsigned char *'   |-ParmVarDecl 0x14d940c08 <line:5:7, col:27> col:27 used hook_entries 'const unsigned int *'   |-ParmVarDecl 0x14d940c88 <line:6:7, col:27> col:27 used underflows 'const unsigned int *'   |-ParmVarDecl 0x14d940d08 <line:7:7, col:20> col:20 used valid_hooks 'unsigned int'   `-CompoundStmt 0x14d945e58 <line:8:1, line:51:1>     |-DeclStmt 0x14d941050 <line:9:2, col:16>     | `-VarDecl 0x14d940fe8 <col:2, col:15> col:15 used h 'unsigned int'     |-DeclStmt 0x14d9410e8 <line:10:2, col:9>     | `-VarDecl 0x14d941080 <col:2, col:6> col:6 used err 'int'     |-IfStmt 0x14d941770 <line:12:2, line:17:2>     | |-RecoveryExpr 0x14d941410 <line:12:6, line:14:44> '_Bool' contains-errors     | `-CompoundStmt 0x14d941750 <col:51, line:17:2>     |   |-CallExpr 0x14d941648 <line:15:3, col:20> 'int'     |   | |-ImplicitCastExpr 0x14d941630 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14d941560 <col:3> 'int ()' Function 0x14d9414a8 'duprintf' 'int ()'     |   | |-ImplicitCastExpr 0x14d941678 <col:12> 'char *' <ArrayToPointerDecay>     |   | | `-StringLiteral 0x14d9415c0 <col:12> 'char[4]' lvalue \"STR\"     |   | `-ImplicitCastExpr 0x14d941690 <col:19> 'struct ipt_entry *' <LValueToRValue>     |   |   `-DeclRefExpr 0x14d9415e0 <col:19> 'struct ipt_entry *' lvalue ParmVar 0x14d928648 'e' 'struct ipt_entry *'     |   `-ReturnStmt 0x14d941740 <line:16:3, col:11>     |     `-UnaryOperator 0x14d941728 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x14d941710 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x14d9416f0 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14d944500 <line:19:2, line:24:2>     | |-RecoveryExpr 0x14d941908 <line:19:6, line:20:64> '_Bool' contains-errors     | `-CompoundStmt 0x14d9444e0 <col:67, line:24:2>     |   |-CallExpr 0x14d944400 <line:21:3, line:22:22> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14d941928 <line:21:3> 'int ()' Function 0x14d9414a8 'duprintf' 'int ()'     |   | |-StringLiteral 0x14d941948 <col:12> 'char[4]' lvalue \"STR\"     |   | |-DeclRefExpr 0x14d941968 <line:22:5> 'struct ipt_entry *' lvalue ParmVar 0x14d928648 'e' 'struct ipt_entry *'     |   | `-RecoveryExpr 0x14d9419c0 <col:8, col:11> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14d941988 <col:8> 'struct ipt_entry *' lvalue ParmVar 0x14d928648 'e' 'struct ipt_entry *'     |   `-ReturnStmt 0x14d9444d0 <line:23:3, col:11>     |     `-UnaryOperator 0x14d9444b8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x14d9444a0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x14d944480 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14d9446b8 <line:26:2, col:21> 'int' '='     | |-DeclRefExpr 0x14d944520 <col:2> 'int' lvalue Var 0x14d941080 'err' 'int'     | `-CallExpr 0x14d944678 <col:8, col:21> 'int'     |   |-ImplicitCastExpr 0x14d944660 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14d944620 <col:8> 'int ()' Function 0x14d944568 'check_entry' 'int ()'     |   `-ImplicitCastExpr 0x14d9446a0 <col:20> 'struct ipt_entry *' <LValueToRValue>     |     `-DeclRefExpr 0x14d944640 <col:20> 'struct ipt_entry *' lvalue ParmVar 0x14d928648 'e' 'struct ipt_entry *'     |-IfStmt 0x14d944758 <line:27:2, line:28:10>     | |-ImplicitCastExpr 0x14d9446f8 <line:27:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x14d9446d8 <col:6> 'int' lvalue Var 0x14d941080 'err' 'int'     | `-ReturnStmt 0x14d944748 <line:28:3, col:10>     |   `-ImplicitCastExpr 0x14d944730 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x14d944710 <col:10> 'int' lvalue Var 0x14d941080 'err' 'int'     |-ForStmt 0x14d945b68 <line:31:2, line:45:2>     | |-BinaryOperator 0x14d9447d0 <line:31:7, col:11> 'unsigned int' '='     | | |-DeclRefExpr 0x14d944778 <col:7> 'unsigned int' lvalue Var 0x14d940fe8 'h' 'unsigned int'     | | `-ImplicitCastExpr 0x14d9447b8 <col:11> 'unsigned int' <IntegralCast>     | |   `-IntegerLiteral 0x14d944798 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x14d944868 <col:14, col:18> 'int' contains-errors '<'     | | |-DeclRefExpr 0x14d9447f0 <col:14> 'unsigned int' lvalue Var 0x14d940fe8 'h' 'unsigned int'     | | `-RecoveryExpr 0x14d944848 <col:18> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x14d9448a8 <col:36, col:37> 'unsigned int' postfix '++'     | | `-DeclRefExpr 0x14d944888 <col:36> 'unsigned int' lvalue Var 0x14d940fe8 'h' 'unsigned int'     | `-CompoundStmt 0x14d945b40 <col:41, line:45:2>     |   |-IfStmt 0x14d944a08 <line:32:3, line:33:4>     |   | |-UnaryOperator 0x14d9449e8 <line:32:7, col:31> 'int' prefix '!' cannot overflow     |   | | `-ParenExpr 0x14d9449c8 <col:8, col:31> 'unsigned int'     |   | |   `-BinaryOperator 0x14d9449a8 <col:9, col:30> 'unsigned int' '&'     |   | |     |-ImplicitCastExpr 0x14d944978 <col:9> 'unsigned int' <LValueToRValue>     |   | |     | `-DeclRefExpr 0x14d9448c0 <col:9> 'unsigned int' lvalue ParmVar 0x14d940d08 'valid_hooks' 'unsigned int'     |   | |     `-ImplicitCastExpr 0x14d944990 <col:23, col:30> 'unsigned int' <IntegralCast>     |   | |       `-ParenExpr 0x14d944958 <col:23, col:30> 'int'     |   | |         `-BinaryOperator 0x14d944938 <col:24, col:29> 'int' '<<'     |   | |           |-IntegerLiteral 0x14d9448e0 <col:24> 'int' 1     |   | |           `-ImplicitCastExpr 0x14d944920 <col:29> 'unsigned int' <LValueToRValue>     |   | |             `-DeclRefExpr 0x14d944900 <col:29> 'unsigned int' lvalue Var 0x14d940fe8 'h' 'unsigned int'     |   | `-ContinueStmt 0x14d944a00 <line:33:4>     |   |-IfStmt 0x14d944d58 <line:34:3, line:35:43>     |   | |-BinaryOperator 0x14d944bb8 <line:34:7, col:50> 'int' '=='     |   | | |-BinaryOperator 0x14d944ad8 <col:7, col:28> 'long' '-'     |   | | | |-CStyleCastExpr 0x14d944a78 <col:7, col:24> 'unsigned char *' <BitCast>     |   | | | | `-ImplicitCastExpr 0x14d944a60 <col:24> 'struct ipt_entry *' <LValueToRValue> part_of_explicit_cast     |   | | | |   `-DeclRefExpr 0x14d944a28 <col:24> 'struct ipt_entry *' lvalue ParmVar 0x14d928648 'e' 'struct ipt_entry *'     |   | | | `-ImplicitCastExpr 0x14d944ac0 <col:28> 'const unsigned char *' <LValueToRValue>     |   | | |   `-DeclRefExpr 0x14d944aa0 <col:28> 'const unsigned char *' lvalue ParmVar 0x14d940ad8 'base' 'const unsigned char *'     |   | | `-ImplicitCastExpr 0x14d944ba0 <col:36, col:50> 'long' <IntegralCast>     |   | |   `-ImplicitCastExpr 0x14d944b88 <col:36, col:50> 'unsigned int' <LValueToRValue>     |   | |     `-ArraySubscriptExpr 0x14d944b68 <col:36, col:50> 'const unsigned int' lvalue     |   | |       |-ImplicitCastExpr 0x14d944b38 <col:36> 'const unsigned int *' <LValueToRValue>     |   | |       | `-DeclRefExpr 0x14d944af8 <col:36> 'const unsigned int *' lvalue ParmVar 0x14d940c08 'hook_entries' 'const unsigned int *'     |   | |       `-ImplicitCastExpr 0x14d944b50 <col:49> 'unsigned int' <LValueToRValue>     |   | |         `-DeclRefExpr 0x14d944b18 <col:49> 'unsigned int' lvalue Var 0x14d940fe8 'h' 'unsigned int'     |   | `-BinaryOperator 0x14d944d38 <line:35:4, col:43> '<dependent type>' contains-errors '='     |   |   |-ArraySubscriptExpr 0x14d944c88 <col:4, col:25> '<dependent type>' contains-errors lvalue     |   |   | |-ImplicitCastExpr 0x14d944c58 <col:4, col:13> '<dependent type>' contains-errors <LValueToRValue>     |   |   | | `-RecoveryExpr 0x14d944c10 <col:4, col:13> '<dependent type>' contains-errors lvalue     |   |   | |   `-DeclRefExpr 0x14d944bd8 <col:4> 'struct xt_table_info *' lvalue ParmVar 0x14d940a28 'newinfo' 'struct xt_table_info *'     |   |   | `-ImplicitCastExpr 0x14d944c70 <col:24> 'unsigned int' <LValueToRValue>     |   |   |   `-DeclRefExpr 0x14d944c38 <col:24> 'unsigned int' lvalue Var 0x14d940fe8 'h' 'unsigned int'     |   |   `-ArraySubscriptExpr 0x14d944d18 <col:29, col:43> 'const unsigned int' lvalue     |   |     |-ImplicitCastExpr 0x14d944ce8 <col:29> 'const unsigned int *' <LValueToRValue>     |   |     | `-DeclRefExpr 0x14d944ca8 <col:29> 'const unsigned int *' lvalue ParmVar 0x14d940c08 'hook_entries' 'const unsigned int *'     |   |     `-ImplicitCastExpr 0x14d944d00 <col:42> 'unsigned int' <LValueToRValue>     |   |       `-DeclRefExpr 0x14d944cc8 <col:42> 'unsigned int' lvalue Var 0x14d940fe8 'h' 'unsigned int'     |   `-IfStmt 0x14d945b20 <line:36:3, line:44:3>     |     |-BinaryOperator 0x14d944f08 <line:36:7, col:48> 'int' '=='     |     | |-BinaryOperator 0x14d944e28 <col:7, col:28> 'long' '-'     |     | | |-CStyleCastExpr 0x14d944dc8 <col:7, col:24> 'unsigned char *' <BitCast>     |     | | | `-ImplicitCastExpr 0x14d944db0 <col:24> 'struct ipt_entry *' <LValueToRValue> part_of_explicit_cast     |     | | |   `-DeclRefExpr 0x14d944d78 <col:24> 'struct ipt_entry *' lvalue ParmVar 0x14d928648 'e' 'struct ipt_entry *'     |     | | `-ImplicitCastExpr 0x14d944e10 <col:28> 'const unsigned char *' <LValueToRValue>     |     | |   `-DeclRefExpr 0x14d944df0 <col:28> 'const unsigned char *' lvalue ParmVar 0x14d940ad8 'base' 'const unsigned char *'     |     | `-ImplicitCastExpr 0x14d944ef0 <col:36, col:48> 'long' <IntegralCast>     |     |   `-ImplicitCastExpr 0x14d944ed8 <col:36, col:48> 'unsigned int' <LValueToRValue>     |     |     `-ArraySubscriptExpr 0x14d944eb8 <col:36, col:48> 'const unsigned int' lvalue     |     |       |-ImplicitCastExpr 0x14d944e88 <col:36> 'const unsigned int *' <LValueToRValue>     |     |       | `-DeclRefExpr 0x14d944e48 <col:36> 'const unsigned int *' lvalue ParmVar 0x14d940c88 'underflows' 'const unsigned int *'     |     |       `-ImplicitCastExpr 0x14d944ea0 <col:47> 'unsigned int' <LValueToRValue>     |     |         `-DeclRefExpr 0x14d944e68 <col:47> 'unsigned int' lvalue Var 0x14d940fe8 'h' 'unsigned int'     |     `-CompoundStmt 0x14d945b00 <col:51, line:44:3>     |       |-IfStmt 0x14d945350 <line:37:4, line:42:4>     |       | |-UnaryOperator 0x14d9450a0 <line:37:8, col:26> 'int' prefix '!' cannot overflow     |       | | `-CallExpr 0x14d945060 <col:9, col:26> 'int'     |       | |   |-ImplicitCastExpr 0x14d945048 <col:9> 'int (*)()' <FunctionToPointerDecay>     |       | |   | `-DeclRefExpr 0x14d945008 <col:9> 'int ()' Function 0x14d944f50 'check_underflow' 'int ()'     |       | |   `-ImplicitCastExpr 0x14d945088 <col:25> 'struct ipt_entry *' <LValueToRValue>     |       | |     `-DeclRefExpr 0x14d945028 <col:25> 'struct ipt_entry *' lvalue ParmVar 0x14d928648 'e' 'struct ipt_entry *'     |       | `-CompoundStmt 0x14d945330 <col:29, line:42:4>     |       |   |-CallExpr 0x14d945248 <line:38:5, line:40:17> 'int'     |       |   | |-ImplicitCastExpr 0x14d945230 <line:38:5> 'int (*)()' <FunctionToPointerDecay>     |       |   | | `-DeclRefExpr 0x14d945198 <col:5> 'int ()' Function 0x14d9450e0 'pr_err' 'int ()'     |       |   | `-ImplicitCastExpr 0x14d945270 <col:12, line:40:12> 'char *' <ArrayToPointerDecay>     |       |   |   `-StringLiteral 0x14d945200 <line:38:12, line:40:12> 'char[10]' lvalue \"STRSTRSTR\"     |       |   `-ReturnStmt 0x14d945320 <line:41:5, col:13>     |       |     `-UnaryOperator 0x14d945308 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow     |       |       `-ImplicitCastExpr 0x14d9452f0 <col:13> '<dependent type>' contains-errors <LValueToRValue>     |       |         `-RecoveryExpr 0x14d9452d0 <col:13> '<dependent type>' contains-errors lvalue     |       `-BinaryOperator 0x14d945ae0 <line:43:4, col:40> '<dependent type>' contains-errors '='     |         |-ArraySubscriptExpr 0x14d945a30 <col:4, col:24> '<dependent type>' contains-errors lvalue     |         | |-ImplicitCastExpr 0x14d945a00 <col:4, col:13> '<dependent type>' contains-errors <LValueToRValue>     |         | | `-RecoveryExpr 0x14d9453a8 <col:4, col:13> '<dependent type>' contains-errors lvalue     |         | |   `-DeclRefExpr 0x14d945370 <col:4> 'struct xt_table_info *' lvalue ParmVar 0x14d940a28 'newinfo' 'struct xt_table_info *'     |         | `-ImplicitCastExpr 0x14d945a18 <col:23> 'unsigned int' <LValueToRValue>     |         |   `-DeclRefExpr 0x14d9453d0 <col:23> 'unsigned int' lvalue Var 0x14d940fe8 'h' 'unsigned int'     |         `-ArraySubscriptExpr 0x14d945ac0 <col:28, col:40> 'const unsigned int' lvalue     |           |-ImplicitCastExpr 0x14d945a90 <col:28> 'const unsigned int *' <LValueToRValue>     |           | `-DeclRefExpr 0x14d945a50 <col:28> 'const unsigned int *' lvalue ParmVar 0x14d940c88 'underflows' 'const unsigned int *'     |           `-ImplicitCastExpr 0x14d945aa8 <col:39> 'unsigned int' <LValueToRValue>     |             `-DeclRefExpr 0x14d945a70 <col:39> 'unsigned int' lvalue Var 0x14d940fe8 'h' 'unsigned int'     |-BinaryOperator 0x14d945e08 <line:49:2, col:16> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14d945dc0 <col:2, col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14d945d88 <col:2> 'struct ipt_entry *' lvalue ParmVar 0x14d928648 'e' 'struct ipt_entry *'     | `-IntegerLiteral 0x14d945de8 <col:16> 'int' 0     `-ReturnStmt 0x14d945e48 <line:50:2, col:9>       `-IntegerLiteral 0x14d945e28 <col:9> 'int' 0 ","19871":"`-FunctionDecl 0x149028348  line:1:12 tvaudio_set_ctrl 'int (struct CHIPSTATE *, struct v4l2_control *)' static   |-ParmVarDecl 0x14900fe48 <col:29, col:47> col:47 used chip 'struct CHIPSTATE *'   |-ParmVarDecl 0x149028228 <line:2:8, col:29> col:29 used ctrl 'struct v4l2_control *'   `-CompoundStmt 0x14902b868 <line:3:1, line:70:1>     |-DeclStmt 0x149028698 <line:4:2, col:36>     | |-RecordDecl 0x149028448 <col:2, col:9> col:9 struct CHIPDESC     | `-VarDecl 0x1490285b8 <col:2, col:32> col:19 used desc 'struct CHIPDESC *' cinit     |   `-RecoveryExpr 0x149028658 <col:26, col:32> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x149028620 <col:26> 'struct CHIPSTATE *' lvalue ParmVar 0x14900fe48 'chip' 'struct CHIPSTATE *'     `-SwitchStmt 0x149028728 <line:6:2, line:68:2>       |-ImplicitCastExpr 0x149028710 <line:6:10, col:16> '<dependent type>' contains-errors <LValueToRValue>       | `-RecoveryExpr 0x1490286e8 <col:10, col:16> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x1490286b0 <col:10> 'struct v4l2_control *' lvalue ParmVar 0x149028228 'ctrl' 'struct v4l2_control *'       `-CompoundStmt 0x14902b7f0 <col:20, line:68:2>         |-IfStmt 0x149028988 <line:8:3, line:9:12>         | |-BinaryOperator 0x1490288c0 <line:8:7, col:41> 'int' contains-errors '||'         | | |-BinaryOperator 0x149028800 <col:7, col:21> 'int' contains-errors '<'         | | | |-RecoveryExpr 0x1490287b8 <col:7, col:13> '<dependent type>' contains-errors lvalue         | | | | `-DeclRefExpr 0x149028780 <col:7> 'struct v4l2_control *' lvalue ParmVar 0x149028228 'ctrl' 'struct v4l2_control *'         | | | `-IntegerLiteral 0x1490287e0 <col:21> 'int' 0         | | `-BinaryOperator 0x1490288a0 <col:26, col:41> 'int' contains-errors '>='         | |   |-RecoveryExpr 0x149028858 <col:26, col:32> '<dependent type>' contains-errors lvalue         | |   | `-DeclRefExpr 0x149028820 <col:26> 'struct v4l2_control *' lvalue ParmVar 0x149028228 'ctrl' 'struct v4l2_control *'         | |   `-IntegerLiteral 0x149028880 <col:41> 'int' 2         | `-ReturnStmt 0x149028978 <line:9:4, col:12>         |   `-UnaryOperator 0x149028960 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow         |     `-ImplicitCastExpr 0x149028948 <col:12> '<dependent type>' contains-errors <LValueToRValue>         |       `-RecoveryExpr 0x149028928 <col:12> '<dependent type>' contains-errors lvalue         |-BinaryOperator 0x149028a68 <line:10:3, col:23> '<dependent type>' contains-errors '='         | |-RecoveryExpr 0x1490289e0 <col:3, col:9> '<dependent type>' contains-errors lvalue         | | `-DeclRefExpr 0x1490289a8 <col:3> 'struct CHIPSTATE *' lvalue ParmVar 0x14900fe48 'chip' 'struct CHIPSTATE *'         | `-RecoveryExpr 0x149028a40 <col:17, col:23> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x149028a08 <col:17> 'struct v4l2_control *' lvalue ParmVar 0x149028228 'ctrl' 'struct v4l2_control *'         |-IfStmt 0x149028ff0 <line:11:3, line:15:49> has_else         | |-RecoveryExpr 0x149028ac0 <line:11:7, col:13> '<dependent type>' contains-errors lvalue         | | `-DeclRefExpr 0x149028a88 <col:7> 'struct CHIPSTATE *' lvalue ParmVar 0x14900fe48 'chip' 'struct CHIPSTATE *'         | |-CallExpr 0x149028d60 <line:12:4, col:73> '<dependent type>' contains-errors         | | |-DeclRefExpr 0x149028c00 <col:4> 'int ()' Function 0x149028b48 'chip_write_masked' 'int ()'         | | |-DeclRefExpr 0x149028c20 <col:22> 'struct CHIPSTATE *' lvalue ParmVar 0x14900fe48 'chip' 'struct CHIPSTATE *'         | | |-RecoveryExpr 0x149028c78 <col:27, col:33> '<dependent type>' contains-errors lvalue         | | | `-DeclRefExpr 0x149028c40 <col:27> 'struct CHIPDESC *' contains-errors lvalue Var 0x1490285b8 'desc' 'struct CHIPDESC *'         | | |-RecoveryExpr 0x149028cd8 <col:42, col:48> '<dependent type>' contains-errors lvalue         | | | `-DeclRefExpr 0x149028ca0 <col:42> 'struct CHIPDESC *' contains-errors lvalue Var 0x1490285b8 'desc' 'struct CHIPDESC *'         | | `-RecoveryExpr 0x149028d38 <col:58, col:64> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x149028d00 <col:58> 'struct CHIPDESC *' contains-errors lvalue Var 0x1490285b8 'desc' 'struct CHIPDESC *'         | `-CallExpr 0x149028fb0 <line:14:4, line:15:49> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x149028da0 <line:14:4> 'int ()' Function 0x149028b48 'chip_write_masked' 'int ()'         |   |-DeclRefExpr 0x149028dc0 <col:22> 'struct CHIPSTATE *' lvalue ParmVar 0x14900fe48 'chip' 'struct CHIPSTATE *'         |   |-RecoveryExpr 0x149028e18 <col:27, col:33> '<dependent type>' contains-errors lvalue         |   | `-DeclRefExpr 0x149028de0 <col:27> 'struct CHIPDESC *' contains-errors lvalue Var 0x1490285b8 'desc' 'struct CHIPDESC *'         |   |-ArraySubscriptExpr 0x149028f30 <line:15:6, col:32> '<dependent type>' contains-errors lvalue         |   | |-ImplicitCastExpr 0x149028f00 <col:6, col:12> '<dependent type>' contains-errors <LValueToRValue>         |   | | `-RecoveryExpr 0x149028e78 <col:6, col:12> '<dependent type>' contains-errors lvalue         |   | |   `-DeclRefExpr 0x149028e40 <col:6> 'struct CHIPDESC *' contains-errors lvalue Var 0x1490285b8 'desc' 'struct CHIPDESC *'         |   | `-ImplicitCastExpr 0x149028f18 <col:21, col:27> '<dependent type>' contains-errors <LValueToRValue>         |   |   `-RecoveryExpr 0x149028ed8 <col:21, col:27> '<dependent type>' contains-errors lvalue         |   |     `-DeclRefExpr 0x149028ea0 <col:21> 'struct CHIPSTATE *' lvalue ParmVar 0x14900fe48 'chip' 'struct CHIPSTATE *'         |   `-RecoveryExpr 0x149028f88 <col:34, col:40> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x149028f50 <col:34> 'struct CHIPDESC *' contains-errors lvalue Var 0x1490285b8 'desc' 'struct CHIPDESC *'         |-ReturnStmt 0x149029040 <line:16:3, col:10>         | `-IntegerLiteral 0x149029020 <col:10> 'int' 0         |-CompoundStmt 0x14902a4c0 <line:18:2, line:38:2>         | |-DeclStmt 0x149029180 <line:19:3, col:21>         | | |-VarDecl 0x149029080 <col:3, col:7> col:7 used volume 'int'         | | `-VarDecl 0x149029100 <col:3, col:14> col:14 used balance 'int'         | |-IfStmt 0x149029660 <line:21:3, line:22:4>         | | |-RecoveryExpr 0x149029638 <line:21:7, col:38> '_Bool' contains-errors         | | `-BreakStmt 0x149029658 <line:22:4>         | |-BinaryOperator 0x149029890 <line:24:3, col:38> 'int' contains-errors '='         | | |-DeclRefExpr 0x149029680 <col:3> 'int' lvalue Var 0x149029080 'volume' 'int'         | | `-CallExpr 0x149029860 <col:12, col:38> '<dependent type>' contains-errors         | |   |-DeclRefExpr 0x149029780 <col:12> 'int ()' Function 0x1490296c8 'max' 'int ()'         | |   |-RecoveryExpr 0x1490297d8 <col:16, col:22> '<dependent type>' contains-errors lvalue         | |   | `-DeclRefExpr 0x1490297a0 <col:16> 'struct CHIPSTATE *' lvalue ParmVar 0x14900fe48 'chip' 'struct CHIPSTATE *'         | |   `-RecoveryExpr 0x149029838 <col:27, col:33> '<dependent type>' contains-errors lvalue         | |     `-DeclRefExpr 0x149029800 <col:27> 'struct CHIPSTATE *' lvalue ParmVar 0x14900fe48 'chip' 'struct CHIPSTATE *'         | |-IfStmt 0x149029c18 <line:25:3, line:28:12> has_else         | | |-ImplicitCastExpr 0x1490298d0 <line:25:7> 'int' <LValueToRValue>         | | | `-DeclRefExpr 0x1490298b0 <col:7> 'int' lvalue Var 0x149029080 'volume' 'int'         | | |-BinaryOperator 0x149029b98 <line:26:4, col:48> 'int' contains-errors '='         | | | |-DeclRefExpr 0x1490298e8 <col:4> 'int' lvalue Var 0x149029100 'balance' 'int'         | | | `-BinaryOperator 0x149029b78 <col:12, col:48> '<dependent type>' contains-errors '\/'         | | |   |-ParenExpr 0x149029b38 <col:12, col:46> '<dependent type>' contains-errors         | | |   | `-BinaryOperator 0x149029b18 <col:13, col:45> '<dependent type>' contains-errors '*'         | | |   |   |-IntegerLiteral 0x149029908 <col:13> 'int' 32768         | | |   |   `-CallExpr 0x149029ae8 <col:19, col:45> '<dependent type>' contains-errors         | | |   |     |-DeclRefExpr 0x149029a08 <col:19> 'int ()' Function 0x149029950 'min' 'int ()'         | | |   |     |-RecoveryExpr 0x149029a60 <col:23, col:29> '<dependent type>' contains-errors lvalue         | | |   |     | `-DeclRefExpr 0x149029a28 <col:23> 'struct CHIPSTATE *' lvalue ParmVar 0x14900fe48 'chip' 'struct CHIPSTATE *'         | | |   |     `-RecoveryExpr 0x149029ac0 <col:34, col:40> '<dependent type>' contains-errors lvalue         | | |   |       `-DeclRefExpr 0x149029a88 <col:34> 'struct CHIPSTATE *' lvalue ParmVar 0x14900fe48 'chip' 'struct CHIPSTATE *'         | | |   `-DeclRefExpr 0x149029b58 <col:48> 'int' lvalue Var 0x149029080 'volume' 'int'         | | `-BinaryOperator 0x149029bf8 <line:28:4, col:12> 'int' '='         | |   |-DeclRefExpr 0x149029bb8 <col:4> 'int' lvalue Var 0x149029100 'balance' 'int'         | |   `-IntegerLiteral 0x149029bd8 <col:12> 'int' 32768         | |-BinaryOperator 0x149029cc8 <line:30:3, col:16> 'int' contains-errors '='         | | |-DeclRefExpr 0x149029c48 <col:3> 'int' lvalue Var 0x149029080 'volume' 'int'         | | `-RecoveryExpr 0x149029ca0 <col:10, col:16> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x149029c68 <col:10> 'struct v4l2_control *' lvalue ParmVar 0x149028228 'ctrl' 'struct v4l2_control *'         | |-BinaryOperator 0x149029f30 <line:31:3, col:56> '<dependent type>' contains-errors '='         | | |-RecoveryExpr 0x149029d20 <col:3, col:9> '<dependent type>' contains-errors lvalue         | | | `-DeclRefExpr 0x149029ce8 <col:3> 'struct CHIPSTATE *' lvalue ParmVar 0x14900fe48 'chip' 'struct CHIPSTATE *'         | | `-BinaryOperator 0x149029f10 <col:16, col:56> 'int' '\/'         | |   |-ParenExpr 0x149029ed0 <col:16, col:52> 'int'         | |   | `-BinaryOperator 0x149029eb0 <col:17, col:46> 'int' '*'         | |   |   |-CallExpr 0x149029e48 <col:17, col:42> 'int'         | |   |   | |-ImplicitCastExpr 0x149029e30 <col:17> 'int (*)()' <FunctionToPointerDecay>         | |   |   | | `-DeclRefExpr 0x149029d48 <col:17> 'int ()' Function 0x149029950 'min' 'int ()'         | |   |   | |-BinaryOperator 0x149029dc0 <col:21, col:29> 'int' '-'         | |   |   | | |-IntegerLiteral 0x149029d68 <col:21> 'int' 65536         | |   |   | | `-ImplicitCastExpr 0x149029da8 <col:29> 'int' <LValueToRValue>         | |   |   | |   `-DeclRefExpr 0x149029d88 <col:29> 'int' lvalue Var 0x149029100 'balance' 'int'         | |   |   | `-IntegerLiteral 0x149029de0 <col:37> 'int' 32768         | |   |   `-ImplicitCastExpr 0x149029e98 <col:46> 'int' <LValueToRValue>         | |   |     `-DeclRefExpr 0x149029e78 <col:46> 'int' lvalue Var 0x149029080 'volume' 'int'         | |   `-IntegerLiteral 0x149029ef0 <col:56> 'int' 32768         | |-CallExpr 0x14902a298 <line:34:3, col:58> '<dependent type>' contains-errors         | | |-DeclRefExpr 0x14902a110 <col:3> 'int ()' Function 0x14902a058 'chip_write' 'int ()'         | | |-DeclRefExpr 0x14902a130 <col:14> 'struct CHIPSTATE *' lvalue ParmVar 0x14900fe48 'chip' 'struct CHIPSTATE *'         | | |-RecoveryExpr 0x14902a188 <col:19, col:25> '<dependent type>' contains-errors lvalue         | | | `-DeclRefExpr 0x14902a150 <col:19> 'struct CHIPDESC *' contains-errors lvalue Var 0x1490285b8 'desc' 'struct CHIPDESC *'         | | `-CallExpr 0x14902a270 <col:33, col:57> '<dependent type>' contains-errors         | |   |-RecoveryExpr 0x14902a1e8 <col:33, col:39> '<dependent type>' contains-errors lvalue         | |   | `-DeclRefExpr 0x14902a1b0 <col:33> 'struct CHIPDESC *' contains-errors lvalue Var 0x1490285b8 'desc' 'struct CHIPDESC *'         | |   `-RecoveryExpr 0x14902a248 <col:47, col:53> '<dependent type>' contains-errors lvalue         | |     `-DeclRefExpr 0x14902a210 <col:47> 'struct CHIPSTATE *' lvalue ParmVar 0x14900fe48 'chip' 'struct CHIPSTATE *'         | |-CallExpr 0x14902a458 <line:35:3, col:60> '<dependent type>' contains-errors         | | |-DeclRefExpr 0x14902a2d0 <col:3> 'int ()' Function 0x14902a058 'chip_write' 'int ()'         | | |-DeclRefExpr 0x14902a2f0 <col:14> 'struct CHIPSTATE *' lvalue ParmVar 0x14900fe48 'chip' 'struct CHIPSTATE *'         | | |-RecoveryExpr 0x14902a348 <col:19, col:25> '<dependent type>' contains-errors lvalue         | | | `-DeclRefExpr 0x14902a310 <col:19> 'struct CHIPDESC *' contains-errors lvalue Var 0x1490285b8 'desc' 'struct CHIPDESC *'         | | `-CallExpr 0x14902a430 <col:34, col:59> '<dependent type>' contains-errors         | |   |-RecoveryExpr 0x14902a3a8 <col:34, col:40> '<dependent type>' contains-errors lvalue         | |   | `-DeclRefExpr 0x14902a370 <col:34> 'struct CHIPDESC *' contains-errors lvalue Var 0x1490285b8 'desc' 'struct CHIPDESC *'         | |   `-RecoveryExpr 0x14902a408 <col:48, col:54> '<dependent type>' contains-errors lvalue         | |     `-DeclRefExpr 0x14902a3d0 <col:48> 'struct CHIPSTATE *' lvalue ParmVar 0x14900fe48 'chip' 'struct CHIPSTATE *'         | `-ReturnStmt 0x14902a4b0 <line:37:3, col:10>         |   `-IntegerLiteral 0x14902a490 <col:10> 'int' 0         |-CompoundStmt 0x14902b0e0 <line:40:2, line:52:2>         | |-DeclStmt 0x14902aa80 <line:41:3, col:22>         | | |-VarDecl 0x14902a530 <col:3, col:7> col:7 used volume 'int'         | | `-VarDecl 0x14902aa00 <col:3, col:15> col:15 used balance 'int'         | |-IfStmt 0x14902ab20 <line:42:3, line:43:4>         | | |-RecoveryExpr 0x14902aaf8 <line:42:7, col:38> '_Bool' contains-errors         | | `-BreakStmt 0x14902ab18 <line:43:4>         | |-BinaryOperator 0x14902ac70 <line:45:3, col:38> 'int' contains-errors '='         | | |-DeclRefExpr 0x14902ab40 <col:3> 'int' lvalue Var 0x14902a530 'volume' 'int'         | | `-CallExpr 0x14902ac40 <col:12, col:38> '<dependent type>' contains-errors         | |   |-DeclRefExpr 0x14902ab60 <col:12> 'int ()' Function 0x1490296c8 'max' 'int ()'         | |   |-RecoveryExpr 0x14902abb8 <col:16, col:22> '<dependent type>' contains-errors lvalue         | |   | `-DeclRefExpr 0x14902ab80 <col:16> 'struct CHIPSTATE *' lvalue ParmVar 0x14900fe48 'chip' 'struct CHIPSTATE *'         | |   `-RecoveryExpr 0x14902ac18 <col:27, col:33> '<dependent type>' contains-errors lvalue         | |     `-DeclRefExpr 0x14902abe0 <col:27> 'struct CHIPSTATE *' lvalue ParmVar 0x14900fe48 'chip' 'struct CHIPSTATE *'         | |-BinaryOperator 0x14902ad10 <line:46:3, col:19> 'int' contains-errors '='         | | |-DeclRefExpr 0x14902ac90 <col:3> 'int' lvalue Var 0x14902aa00 'balance' 'int'         | | `-RecoveryExpr 0x14902ace8 <col:13, col:19> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x14902acb0 <col:13> 'struct v4l2_control *' lvalue ParmVar 0x149028228 'ctrl' 'struct v4l2_control *'         | |-CallExpr 0x14902aeb8 <line:48:3, col:58> '<dependent type>' contains-errors         | | |-DeclRefExpr 0x14902ad30 <col:3> 'int ()' Function 0x14902a058 'chip_write' 'int ()'         | | |-DeclRefExpr 0x14902ad50 <col:14> 'struct CHIPSTATE *' lvalue ParmVar 0x14900fe48 'chip' 'struct CHIPSTATE *'         | | |-RecoveryExpr 0x14902ada8 <col:19, col:25> '<dependent type>' contains-errors lvalue         | | | `-DeclRefExpr 0x14902ad70 <col:19> 'struct CHIPDESC *' contains-errors lvalue Var 0x1490285b8 'desc' 'struct CHIPDESC *'         | | `-CallExpr 0x14902ae90 <col:33, col:57> '<dependent type>' contains-errors         | |   |-RecoveryExpr 0x14902ae08 <col:33, col:39> '<dependent type>' contains-errors lvalue         | |   | `-DeclRefExpr 0x14902add0 <col:33> 'struct CHIPDESC *' contains-errors lvalue Var 0x1490285b8 'desc' 'struct CHIPDESC *'         | |   `-RecoveryExpr 0x14902ae68 <col:47, col:53> '<dependent type>' contains-errors lvalue         | |     `-DeclRefExpr 0x14902ae30 <col:47> 'struct CHIPSTATE *' lvalue ParmVar 0x14900fe48 'chip' 'struct CHIPSTATE *'         | |-CallExpr 0x14902b078 <line:49:3, col:60> '<dependent type>' contains-errors         | | |-DeclRefExpr 0x14902aef0 <col:3> 'int ()' Function 0x14902a058 'chip_write' 'int ()'         | | |-DeclRefExpr 0x14902af10 <col:14> 'struct CHIPSTATE *' lvalue ParmVar 0x14900fe48 'chip' 'struct CHIPSTATE *'         | | |-RecoveryExpr 0x14902af68 <col:19, col:25> '<dependent type>' contains-errors lvalue         | | | `-DeclRefExpr 0x14902af30 <col:19> 'struct CHIPDESC *' contains-errors lvalue Var 0x1490285b8 'desc' 'struct CHIPDESC *'         | | `-CallExpr 0x14902b050 <col:34, col:59> '<dependent type>' contains-errors         | |   |-RecoveryExpr 0x14902afc8 <col:34, col:40> '<dependent type>' contains-errors lvalue         | |   | `-DeclRefExpr 0x14902af90 <col:34> 'struct CHIPDESC *' contains-errors lvalue Var 0x1490285b8 'desc' 'struct CHIPDESC *'         | |   `-RecoveryExpr 0x14902b028 <col:48, col:54> '<dependent type>' contains-errors lvalue         | |     `-DeclRefExpr 0x14902aff0 <col:48> 'struct CHIPSTATE *' lvalue ParmVar 0x14900fe48 'chip' 'struct CHIPSTATE *'         | `-ReturnStmt 0x14902b0d0 <line:51:3, col:10>         |   `-IntegerLiteral 0x14902b0b0 <col:10> 'int' 0         |-IfStmt 0x14902b1b0 <line:54:3, line:55:4>         | |-RecoveryExpr 0x14902b188 <line:54:7, col:21> '_Bool' contains-errors         | `-BreakStmt 0x14902b1a8 <line:55:4>         |-BinaryOperator 0x14902b290 <line:56:3, col:22> '<dependent type>' contains-errors '='         | |-RecoveryExpr 0x14902b208 <col:3, col:9> '<dependent type>' contains-errors lvalue         | | `-DeclRefExpr 0x14902b1d0 <col:3> 'struct CHIPSTATE *' lvalue ParmVar 0x14900fe48 'chip' 'struct CHIPSTATE *'         | `-RecoveryExpr 0x14902b268 <col:16, col:22> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x14902b230 <col:16> 'struct v4l2_control *' lvalue ParmVar 0x149028228 'ctrl' 'struct v4l2_control *'         |-CallExpr 0x14902b438 <line:57:3, col:59> '<dependent type>' contains-errors         | |-DeclRefExpr 0x14902b2b0 <col:3> 'int ()' Function 0x14902a058 'chip_write' 'int ()'         | |-DeclRefExpr 0x14902b2d0 <col:14> 'struct CHIPSTATE *' lvalue ParmVar 0x14900fe48 'chip' 'struct CHIPSTATE *'         | |-RecoveryExpr 0x14902b328 <col:19, col:25> '<dependent type>' contains-errors lvalue         | | `-DeclRefExpr 0x14902b2f0 <col:19> 'struct CHIPDESC *' contains-errors lvalue Var 0x1490285b8 'desc' 'struct CHIPDESC *'         | `-CallExpr 0x14902b410 <col:33, col:58> '<dependent type>' contains-errors         |   |-RecoveryExpr 0x14902b388 <col:33, col:39> '<dependent type>' contains-errors lvalue         |   | `-DeclRefExpr 0x14902b350 <col:33> 'struct CHIPDESC *' contains-errors lvalue Var 0x1490285b8 'desc' 'struct CHIPDESC *'         |   `-RecoveryExpr 0x14902b3e8 <col:48, col:54> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x14902b3b0 <col:48> 'struct CHIPSTATE *' lvalue ParmVar 0x14900fe48 'chip' 'struct CHIPSTATE *'         |-ReturnStmt 0x14902b490 <line:59:3, col:10>         | `-IntegerLiteral 0x14902b470 <col:10> 'int' 0         |-BinaryOperator 0x14902b5e0 <line:64:3, col:24> '<dependent type>' contains-errors '='         | |-RecoveryExpr 0x14902b558 <col:3, col:9> '<dependent type>' contains-errors lvalue         | | `-DeclRefExpr 0x14902b520 <col:3> 'struct CHIPSTATE *' lvalue ParmVar 0x14900fe48 'chip' 'struct CHIPSTATE *'         | `-RecoveryExpr 0x14902b5b8 <col:18, col:24> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x14902b580 <col:18> 'struct v4l2_control *' lvalue ParmVar 0x149028228 'ctrl' 'struct v4l2_control *'         |-CallExpr 0x14902b788 <line:65:3, col:65> '<dependent type>' contains-errors         | |-DeclRefExpr 0x14902b600 <col:3> 'int ()' Function 0x14902a058 'chip_write' 'int ()'         | |-DeclRefExpr 0x14902b620 <col:14> 'struct CHIPSTATE *' lvalue ParmVar 0x14900fe48 'chip' 'struct CHIPSTATE *'         | |-RecoveryExpr 0x14902b678 <col:19, col:25> '<dependent type>' contains-errors lvalue         | | `-DeclRefExpr 0x14902b640 <col:19> 'struct CHIPDESC *' contains-errors lvalue Var 0x1490285b8 'desc' 'struct CHIPDESC *'         | `-CallExpr 0x14902b760 <col:35, col:64> '<dependent type>' contains-errors         |   |-RecoveryExpr 0x14902b6d8 <col:35, col:41> '<dependent type>' contains-errors lvalue         |   | `-DeclRefExpr 0x14902b6a0 <col:35> 'struct CHIPDESC *' contains-errors lvalue Var 0x1490285b8 'desc' 'struct CHIPDESC *'         |   `-RecoveryExpr 0x14902b738 <col:52, col:58> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x14902b700 <col:52> 'struct CHIPSTATE *' lvalue ParmVar 0x14900fe48 'chip' 'struct CHIPSTATE *'         `-ReturnStmt 0x14902b7e0 <line:67:3, col:10>           `-IntegerLiteral 0x14902b7c0 <col:10> 'int' 0 ","19879":"`-FunctionDecl 0x14e941878  line:1:13 invalid check_dax_vmas 'int (struct vm_area_struct **, long)' static   |-ParmVarDecl 0x14e9286c8 <col:28, col:52> col:52 used vmas 'struct vm_area_struct **'   |-ParmVarDecl 0x14e928748 <col:58, col:63> col:63 used nr_pages 'long'   `-CompoundStmt 0x14e9421e0 <line:2:1, line:18:1>     |-DeclStmt 0x14e9419b0 <line:3:2, col:8>     | `-VarDecl 0x14e941948 <col:2, col:7> col:7 used i 'long'     |-DeclStmt 0x14e941af8 <line:4:2, col:40>     | `-VarDecl 0x14e941a58 <col:2, col:36> col:25 used vma_prev 'struct vm_area_struct *' cinit     |   `-RecoveryExpr 0x14e941ad8 <col:36> '<dependent type>' contains-errors lvalue     `-ForStmt 0x14e942190 <line:6:2, line:16:2>       |-BinaryOperator 0x14e941b68 <line:6:7, col:11> 'long' '='       | |-DeclRefExpr 0x14e941b10 <col:7> 'long' lvalue Var 0x14e941948 'i' 'long'       | `-ImplicitCastExpr 0x14e941b50 <col:11> 'long' <IntegralCast>       |   `-IntegerLiteral 0x14e941b30 <col:11> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x14e941bf8 <col:14, col:18> 'int' '<'       | |-ImplicitCastExpr 0x14e941bc8 <col:14> 'long' <LValueToRValue>       | | `-DeclRefExpr 0x14e941b88 <col:14> 'long' lvalue Var 0x14e941948 'i' 'long'       | `-ImplicitCastExpr 0x14e941be0 <col:18> 'long' <LValueToRValue>       |   `-DeclRefExpr 0x14e941ba8 <col:18> 'long' lvalue ParmVar 0x14e928748 'nr_pages' 'long'       |-UnaryOperator 0x14e941c38 <col:28, col:29> 'long' postfix '++'       | `-DeclRefExpr 0x14e941c18 <col:28> 'long' lvalue Var 0x14e941948 'i' 'long'       `-CompoundStmt 0x14e942160 <col:33, line:16:2>         |-DeclStmt 0x14e941d88 <line:7:3, col:39>         | `-VarDecl 0x14e941c78 <col:3, col:38> col:26 used vma 'struct vm_area_struct *' cinit         |   `-ImplicitCastExpr 0x14e941d70 <col:32, col:38> 'struct vm_area_struct *' <LValueToRValue>         |     `-ArraySubscriptExpr 0x14e941d50 <col:32, col:38> 'struct vm_area_struct *' lvalue         |       |-ImplicitCastExpr 0x14e941d20 <col:32> 'struct vm_area_struct **' <LValueToRValue>         |       | `-DeclRefExpr 0x14e941ce0 <col:32> 'struct vm_area_struct **' lvalue ParmVar 0x14e9286c8 'vmas' 'struct vm_area_struct **'         |       `-ImplicitCastExpr 0x14e941d38 <col:37> 'long' <LValueToRValue>         |         `-DeclRefExpr 0x14e941d00 <col:37> 'long' lvalue Var 0x14e941948 'i' 'long'         |-IfStmt 0x14e941e38 <line:9:3, line:10:4>         | |-BinaryOperator 0x14e941e10 <line:9:7, col:14> 'int' contains-errors '=='         | | |-ImplicitCastExpr 0x14e941de0 <col:7> 'struct vm_area_struct *' <LValueToRValue>         | | | `-DeclRefExpr 0x14e941da0 <col:7> 'struct vm_area_struct *' lvalue Var 0x14e941c78 'vma' 'struct vm_area_struct *'         | | `-ImplicitCastExpr 0x14e941df8 <col:14> 'struct vm_area_struct *' contains-errors <LValueToRValue>         | |   `-DeclRefExpr 0x14e941dc0 <col:14> 'struct vm_area_struct *' contains-errors lvalue Var 0x14e941a58 'vma_prev' 'struct vm_area_struct *'         | `-ContinueStmt 0x14e941e30 <line:10:4>         |-BinaryOperator 0x14e941eb0 <line:12:3, col:14> 'struct vm_area_struct *' contains-errors '='         | |-DeclRefExpr 0x14e941e58 <col:3> 'struct vm_area_struct *' contains-errors lvalue Var 0x14e941a58 'vma_prev' 'struct vm_area_struct *'         | `-ImplicitCastExpr 0x14e941e98 <col:14> 'struct vm_area_struct *' <LValueToRValue>         |   `-DeclRefExpr 0x14e941e78 <col:14> 'struct vm_area_struct *' lvalue Var 0x14e941c78 'vma' 'struct vm_area_struct *'         `-IfStmt 0x14e942140 <line:14:3, line:15:11>           |-CallExpr 0x14e9420b8 <line:14:7, col:23> 'int'           | |-ImplicitCastExpr 0x14e9420a0 <col:7> 'int (*)()' <FunctionToPointerDecay>           | | `-DeclRefExpr 0x14e942030 <col:7> 'int ()' Function 0x14e941f78 'vma_is_fsdax' 'int ()'           | `-ImplicitCastExpr 0x14e9420e0 <col:20> 'struct vm_area_struct *' <LValueToRValue>           |   `-DeclRefExpr 0x14e942050 <col:20> 'struct vm_area_struct *' lvalue Var 0x14e941c78 'vma' 'struct vm_area_struct *'           `-ReturnStmt 0x14e942130 <line:15:4, col:11>             `-RecoveryExpr 0x14e942110 <col:11> '<dependent type>' contains-errors lvalue ","19595":"`-FunctionDecl 0x13081f4c8  line:1:12 find_voice 'int (int, int, int)' static   |-ParmVarDecl 0x13081f2d8 <col:23, col:27> col:27 used dev 'int'   |-ParmVarDecl 0x13081f358 <col:32, col:36> col:36 used chn 'int'   |-ParmVarDecl 0x13081f3d8 <col:41, col:45> col:45 used note 'int'   `-CompoundStmt 0x13083e510 <line:2:1, line:11:1>     |-DeclStmt 0x13081f650 <line:3:2, col:20>     | `-VarDecl 0x13081f5e8 <col:2, col:17> col:17 used key 'unsigned short'     |-DeclStmt 0x13081f6e8 <line:4:2, col:7>     | `-VarDecl 0x13081f680 <col:2, col:6> col:6 used i 'int'     |-BinaryOperator 0x13081f888 <line:6:2, col:30> 'unsigned short' '='     | |-DeclRefExpr 0x13081f700 <col:2> 'unsigned short' lvalue Var 0x13081f5e8 'key' 'unsigned short'     | `-ImplicitCastExpr 0x13081f870 <col:8, col:30> 'unsigned short' <IntegralCast>     |   `-BinaryOperator 0x13081f850 <col:8, col:30> 'int' '|'     |     |-ParenExpr 0x13081f798 <col:8, col:17> 'int'     |     | `-BinaryOperator 0x13081f778 <col:9, col:16> 'int' '<<'     |     |   |-ImplicitCastExpr 0x13081f760 <col:9> 'int' <LValueToRValue>     |     |   | `-DeclRefExpr 0x13081f720 <col:9> 'int' lvalue ParmVar 0x13081f358 'chn' 'int'     |     |   `-IntegerLiteral 0x13081f740 <col:16> 'int' 8     |     `-ParenExpr 0x13081f830 <col:21, col:30> 'int'     |       `-BinaryOperator 0x13081f810 <col:22, col:29> 'int' '+'     |         |-ImplicitCastExpr 0x13081f7f8 <col:22> 'int' <LValueToRValue>     |         | `-DeclRefExpr 0x13081f7b8 <col:22> 'int' lvalue ParmVar 0x13081f3d8 'note' 'int'     |         `-IntegerLiteral 0x13081f7d8 <col:29> 'int' 1     `-ReturnStmt 0x13083e500 <line:10:2, col:10>       `-UnaryOperator 0x13083e4e8 <col:9, col:10> 'int' prefix '-'         `-IntegerLiteral 0x13083e4c8 <col:10> 'int' 1 ","19324":"`-FunctionDecl 0x14b8656c8  line:1:21 rgb_to_pixel15_dup 'unsigned int (unsigned int, unsigned int, unsigned int)' static   |-ParmVarDecl 0x14b8654d8 <col:40, col:53> col:53 used r 'unsigned int'   |-ParmVarDecl 0x14b865558 <col:56, col:69> col:69 used g 'unsigned int'   |-ParmVarDecl 0x14b8655d8 <col:72, col:81> col:81 used b 'unsigned int'   `-CompoundStmt 0x14d008248 <line:2:1, line:7:1>     |-DeclStmt 0x14b865850 <line:3:5, col:21>     | `-VarDecl 0x14b8657e8 <col:5, col:18> col:18 used col 'unsigned int'     |-BinaryOperator 0x14b865b10 <line:4:5, col:33> 'unsigned int' '='     | |-DeclRefExpr 0x14b865868 <col:5> 'unsigned int' lvalue Var 0x14b8657e8 'col' 'unsigned int'     | `-ImplicitCastExpr 0x14b865af8 <col:11, col:33> 'unsigned int' <IntegralCast>     |   `-CallExpr 0x14b865a78 <col:11, col:33> 'int'     |     |-ImplicitCastExpr 0x14b865a60 <col:11> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14b8659b0 <col:11> 'int ()' Function 0x14b8658f8 'rgb_to_pixel15' 'int ()'     |     |-ImplicitCastExpr 0x14b865ab0 <col:26> 'unsigned int' <LValueToRValue>     |     | `-DeclRefExpr 0x14b8659d0 <col:26> 'unsigned int' lvalue ParmVar 0x14b8654d8 'r' 'unsigned int'     |     |-ImplicitCastExpr 0x14b865ac8 <col:29> 'unsigned int' <LValueToRValue>     |     | `-DeclRefExpr 0x14b8659f0 <col:29> 'unsigned int' lvalue ParmVar 0x14b865558 'g' 'unsigned int'     |     `-ImplicitCastExpr 0x14b865ae0 <col:32> 'unsigned int' <LValueToRValue>     |       `-DeclRefExpr 0x14b865a10 <col:32> 'unsigned int' lvalue ParmVar 0x14b8655d8 'b' 'unsigned int'     |-CompoundAssignOperator 0x14b865bc8 <line:5:5, col:19> 'unsigned int' '|=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'     | |-DeclRefExpr 0x14b865b30 <col:5> 'unsigned int' lvalue Var 0x14b8657e8 'col' 'unsigned int'     | `-BinaryOperator 0x14b865ba8 <col:12, col:19> 'unsigned int' '<<'     |   |-ImplicitCastExpr 0x14b865b90 <col:12> 'unsigned int' <LValueToRValue>     |   | `-DeclRefExpr 0x14b865b50 <col:12> 'unsigned int' lvalue Var 0x14b8657e8 'col' 'unsigned int'     |   `-IntegerLiteral 0x14b865b70 <col:19> 'int' 16     `-ReturnStmt 0x14d008238 <line:6:5, col:12>       `-ImplicitCastExpr 0x14d008220 <col:12> 'unsigned int' <LValueToRValue>         `-DeclRefExpr 0x14d008200 <col:12> 'unsigned int' lvalue Var 0x14b8657e8 'col' 'unsigned int' ","20157":"`-FunctionDecl 0x12b027df0  col:2 implicit used printf 'int (const char *, ...)' extern   |-ParmVarDecl 0x12b027ef0 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x12b027e98 <<invalid sloc>> Implicit 903   `-FormatAttr 0x12b027f60 <col:2> Implicit printf 1 2 ","19839":"`-FunctionDecl 0x1590085f0  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x1590086f0 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x159008758 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x1590087c0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x159008698 <<invalid sloc>> Implicit 900 ","19315":"`-FunctionDecl 0x14f80e958  line:1:12 parse_check_truncation 'int (struct jv_parser *)' static   |-ParmVarDecl 0x14f80e848 <col:35, col:53> col:53 used p 'struct jv_parser *'   `-CompoundStmt 0x14f827100 <col:56, line:3:1> ","19297":"`-FunctionDecl 0x14d928638  line:1:1 TEST_F 'int (int, int)'   |-ParmVarDecl 0x14d928558 <col:8> col:8 HttpConnectionManagerImplTest 'int'   |-ParmVarDecl 0x14d9284d8 <col:39> col:39 RequestTimeoutIsDisarmedOnCompleteRequestWithHeader 'int'   `-CompoundStmt 0x14d941258 <col:92, line:25:1>     |-RecoveryExpr 0x14d940f78 <line:18:3> '<dependent type>' contains-errors lvalue     `-CallExpr 0x14d941238 <line:23:3, col:19> 'int'       `-ImplicitCastExpr 0x14d941220 <col:3> 'int (*)()' <FunctionToPointerDecay>         `-DeclRefExpr 0x14d9411c8 <col:3> 'int ()' Function 0x14d941110 'expectOnDestroy' 'int ()' ","19785":"`-FunctionDecl 0x13800df78  line:1:5 invalid walk_items_for_table_list 'int (int, int, void *, int)'   |-ParmVarDecl 0x13800dcf0 <col:31, col:46> col:46 invalid processor 'int'   |-ParmVarDecl 0x13800dd70 <line:2:31, col:36> col:36 invalid walk_subquery 'int'   |-ParmVarDecl 0x13800ddf0 <col:51, col:57> col:57 used argument 'void *'   |-ParmVarDecl 0x13800de70 <line:3:31, <invalid sloc>> col:35 invalid 'int'   `-CompoundStmt 0x138809d00 <line:4:1, line:22:1>     |-DeclStmt 0x13800e290 <line:6:3, col:10>     | `-VarDecl 0x13800e228 <col:3, col:7> col:7 used res 'int'     |-WhileStmt 0x138809cb0 <line:7:3, line:20:3>     | |-BinaryOperator 0x138809638 <line:7:10, col:31> '<dependent type>' contains-errors '='     | | |-BinaryOperator 0x138809618 <col:10, col:22> '<dependent type>' contains-errors '*'     | | | |-RecoveryExpr 0x1388095d8 <col:10> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x1388095f8 <col:22> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x138809590 <col:29, col:31> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13800e2f8 <col:29> 'int ()' Function 0x13800e0f8 'li' 'int ()'     | `-CompoundStmt 0x138809c90 <line:8:3, line:20:3>     |   |-IfStmt 0x138809940 <line:9:5, line:13:5>     |   | |-CXXDependentScopeMemberExpr 0x1388096d8 <line:9:9, col:16> '<dependent type>' contains-errors lvalue ->on_expr     |   | | `-RecoveryExpr 0x1388096b8 <col:9> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x138809928 <line:10:5, line:13:5>     |   |   `-IfStmt 0x138809908 <line:11:7, line:12:16>     |   |     |-RecoveryExpr 0x1388098a0 <line:11:11, col:73> '_Bool' contains-errors     |   |     `-ReturnStmt 0x1388098f8 <line:12:9, col:16>     |   |       `-ImplicitCastExpr 0x1388098e0 <col:16> 'int' <LValueToRValue>     |   |         `-DeclRefExpr 0x1388098c0 <col:16> 'int' lvalue Var 0x13800e228 'res' 'int'     |   `-IfStmt 0x138809c70 <line:14:5, line:19:5>     |     |-CXXDependentScopeMemberExpr 0x1388099e0 <line:14:9, col:16> '<dependent type>' contains-errors lvalue ->nested_join     |     | `-RecoveryExpr 0x1388099c0 <col:9> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x138809c58 <line:15:5, line:19:5>     |       `-IfStmt 0x138809c38 <line:16:7, line:18:16>     |         |-RecoveryExpr 0x138809bd0 <line:16:11, line:17:73> '_Bool' contains-errors     |         `-ReturnStmt 0x138809c28 <line:18:9, col:16>     |           `-ImplicitCastExpr 0x138809c10 <col:16> 'int' <LValueToRValue>     |             `-DeclRefExpr 0x138809bf0 <col:16> 'int' lvalue Var 0x13800e228 'res' 'int'     `-ReturnStmt 0x138809cf0 <line:21:3, col:10>       `-IntegerLiteral 0x138809cd0 <col:10> 'int' 0 ","20190":"`-FunctionDecl 0x14f9281a8  line:1:5 dbg_remove_sw_break 'int (unsigned long)'   |-ParmVarDecl 0x14f9280d8 <col:25, col:39> col:39 used addr 'unsigned long'   `-CompoundStmt 0x14f9286e0 <line:2:1, line:13:1>     |-DeclStmt 0x14f928320 <line:3:2, col:7>     | `-VarDecl 0x14f9282b8 <col:2, col:6> col:6 used i 'int'     |-ForStmt 0x14f928600 <line:5:2, line:11:2>     | |-BinaryOperator 0x14f928378 <line:5:7, col:11> 'int' '='     | | |-DeclRefExpr 0x14f928338 <col:7> 'int' lvalue Var 0x14f9282b8 'i' 'int'     | | `-IntegerLiteral 0x14f928358 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x14f928428 <col:14, col:18> 'int' contains-errors '<'     | | |-DeclRefExpr 0x14f928398 <col:14> 'int' lvalue Var 0x14f9282b8 'i' 'int'     | | `-RecoveryExpr 0x14f928408 <col:18> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x14f928468 <col:40, col:41> 'int' postfix '++'     | | `-DeclRefExpr 0x14f928448 <col:40> 'int' lvalue Var 0x14f9282b8 'i' 'int'     | `-CompoundStmt 0x14f9285e8 <col:45, line:11:2>     |   `-IfStmt 0x14f9285c8 <line:6:3, line:10:3>     |     |-RecoveryExpr 0x14f928528 <line:6:7, line:7:36> '_Bool' contains-errors     |     `-CompoundStmt 0x14f9285b0 <col:39, line:10:3>     |       `-ReturnStmt 0x14f9285a0 <line:9:4, col:11>     |         `-IntegerLiteral 0x14f928580 <col:11> 'int' 0     `-ReturnStmt 0x14f9286d0 <line:12:2, col:10>       `-UnaryOperator 0x14f9286b8 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow         `-ImplicitCastExpr 0x14f9286a0 <col:10> '<dependent type>' contains-errors <LValueToRValue>           `-RecoveryExpr 0x14f928680 <col:10> '<dependent type>' contains-errors lvalue ","19953":"`-FunctionDecl 0x13100ddf8  line:1:1 invalid rb_str_check_dummy_enc 'int (int *)'   |-ParmVarDecl 0x13100dd28 <col:24, col:37> col:37 invalid enc 'int *'   `-CompoundStmt 0x127921400 <line:2:1, line:7:1>     `-IfStmt 0x13100e3d0 <line:3:5, line:6:5>       |-CallExpr 0x13100e040 <line:3:9, col:27> '<dependent type>' contains-errors       | |-DeclRefExpr 0x13100e000 <col:9> 'int ()' Function 0x13100df48 'rb_enc_dummy_p' 'int ()'       | `-RecoveryExpr 0x13100e020 <col:24> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x13100e3b8 <col:30, line:6:5>         `-CallExpr 0x13100e380 <line:4:2, line:5:20> '<dependent type>' contains-errors           |-DeclRefExpr 0x13100e148 <line:4:2> 'int ()' Function 0x13100e090 'rb_raise' 'int ()'           |-RecoveryExpr 0x13100e360 <col:11> '<dependent type>' contains-errors lvalue           |-StringLiteral 0x13100e1c0 <col:31> 'char[4]' lvalue \"STR\"           `-CallExpr 0x13100e300 <line:5:4, col:19> '<dependent type>' contains-errors             |-DeclRefExpr 0x13100e2c0 <col:4> 'int ()' Function 0x13100e208 'rb_enc_name' 'int ()'             `-RecoveryExpr 0x13100e2e0 <col:16> '<dependent type>' contains-errors lvalue ","19406":"`-FunctionDecl 0x12c140c08  line:1:12 nfs4_proc_setlk 'int (struct nfs4_state *, int, struct file_lock *)' static   |-ParmVarDecl 0x12c128648 <col:28, col:47> col:47 used state 'struct nfs4_state *'   |-ParmVarDecl 0x12c1286c8 <col:54, col:58> col:58 used cmd 'int'   |-ParmVarDecl 0x12c140ac8 <col:63, col:81> col:81 used request 'struct file_lock *'   `-CompoundStmt 0x12c1419a8 <line:2:1, line:18:1>     |-DeclStmt 0x12c140ff8 <line:3:2, line:7:3>     | |-RecordDecl 0x12c140d10 <line:3:2, col:9> col:9 struct nfs4_exception     | `-VarDecl 0x12c140e08 <col:2, col:24> col:24 invalid exception 'struct nfs4_exception'     |-DeclStmt 0x12c141090 <line:8:2, col:9>     | `-VarDecl 0x12c141028 <col:2, col:6> col:6 used err 'int'     |-DoStmt 0x12c141940 <line:10:2, line:16:26>     | |-CompoundStmt 0x12c1418b0 <line:10:5, line:16:2>     | | |-BinaryOperator 0x12c141328 <line:11:3, col:45> 'int' '='     | | | |-DeclRefExpr 0x12c1410a8 <col:3> 'int' lvalue Var 0x12c141028 'err' 'int'     | | | `-CallExpr 0x12c1412a8 <col:9, col:45> 'int'     | | |   |-ImplicitCastExpr 0x12c141290 <col:9> 'int (*)()' <FunctionToPointerDecay>     | | |   | `-DeclRefExpr 0x12c1411e0 <col:9> 'int ()' Function 0x12c141128 '_nfs4_proc_setlk' 'int ()'     | | |   |-ImplicitCastExpr 0x12c1412e0 <col:26> 'struct nfs4_state *' <LValueToRValue>     | | |   | `-DeclRefExpr 0x12c141200 <col:26> 'struct nfs4_state *' lvalue ParmVar 0x12c128648 'state' 'struct nfs4_state *'     | | |   |-ImplicitCastExpr 0x12c1412f8 <col:33> 'int' <LValueToRValue>     | | |   | `-DeclRefExpr 0x12c141220 <col:33> 'int' lvalue ParmVar 0x12c1286c8 'cmd' 'int'     | | |   `-ImplicitCastExpr 0x12c141310 <col:38> 'struct file_lock *' <LValueToRValue>     | | |     `-DeclRefExpr 0x12c141240 <col:38> 'struct file_lock *' lvalue ParmVar 0x12c140ac8 'request' 'struct file_lock *'     | | |-IfStmt 0x12c141538 <line:12:3, line:13:11>     | | | |-BinaryOperator 0x12c141420 <line:12:7, col:15> 'int' contains-errors '=='     | | | | |-DeclRefExpr 0x12c141348 <col:7> 'int' lvalue Var 0x12c141028 'err' 'int'     | | | | `-UnaryOperator 0x12c141408 <col:14, col:15> '<dependent type>' contains-errors prefix '-' cannot overflow     | | | |   `-ImplicitCastExpr 0x12c1413f0 <col:15> '<dependent type>' contains-errors <LValueToRValue>     | | | |     `-RecoveryExpr 0x12c1413d0 <col:15> '<dependent type>' contains-errors lvalue     | | | `-BinaryOperator 0x12c141518 <line:13:4, col:11> 'int' contains-errors '='     | | |   |-DeclRefExpr 0x12c141440 <col:4> 'int' lvalue Var 0x12c141028 'err' 'int'     | | |   `-UnaryOperator 0x12c141500 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     | | |     `-ImplicitCastExpr 0x12c1414e8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     | | |       `-RecoveryExpr 0x12c1414c8 <col:11> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x12c141890 <line:14:3, line:15:20> 'int' contains-errors '='     | |   |-DeclRefExpr 0x12c141558 <line:14:3> 'int' lvalue Var 0x12c141028 'err' 'int'     | |   `-CallExpr 0x12c141858 <col:9, line:15:20> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x12c141658 <line:14:9> 'int ()' Function 0x12c1415a0 'nfs4_handle_exception' 'int ()'     | |     |-CallExpr 0x12c1417d8 <col:31, col:54> '<dependent type>' contains-errors     | |     | |-DeclRefExpr 0x12c141758 <col:31> 'int ()' Function 0x12c1416a0 'NFS_SERVER' 'int ()'     | |     | `-RecoveryExpr 0x12c1417b0 <col:42, col:49> '<dependent type>' contains-errors lvalue     | |     |   `-DeclRefExpr 0x12c141778 <col:42> 'struct nfs4_state *' lvalue ParmVar 0x12c128648 'state' 'struct nfs4_state *'     | |     |-DeclRefExpr 0x12c141800 <line:15:5> 'int' lvalue Var 0x12c141028 'err' 'int'     | |     `-UnaryOperator 0x12c141840 <col:10, col:11> '<dependent type>' contains-errors prefix '&' cannot overflow     | |       `-RecoveryExpr 0x12c141820 <col:11> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x12c1418f8 <line:16:11, col:21> '<dependent type>' contains-errors lvalue .retry     |   `-RecoveryExpr 0x12c1418d8 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12c141998 <line:17:2, col:9>       `-ImplicitCastExpr 0x12c141980 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x12c141960 <col:9> 'int' lvalue Var 0x12c141028 'err' 'int' ","19244":"`-FunctionDecl 0x159128280  line:1:6 invalid jp2_box_dump 'void (int *, int *)'   |-ParmVarDecl 0x159128128 <col:19, col:30> col:30 invalid box 'int *'   |-ParmVarDecl 0x1591281a8 <col:35, col:41> col:41 invalid out 'int *'   `-CompoundStmt 0x159141b68 <line:2:1, line:13:1>     |-CallExpr 0x1591286c0 <line:5:2, col:16> '<dependent type>' contains-errors     | |-DeclRefExpr 0x159128640 <col:2> 'int ()' Function 0x159128588 'assert' 'int ()'     | `-RecoveryExpr 0x1591286a0 <col:9> '<dependent type>' contains-errors lvalue     |-CallExpr 0x159141880 <line:7:2, col:20> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1591287c8 <col:2> 'int ()' Function 0x159128710 'fprintf' 'int ()'     | |-RecoveryExpr 0x159141800 <col:10> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x159141860 <col:15> 'char[4]' lvalue \"STR\"     `-IfStmt 0x159141b48 <line:10:2, line:12:2>       |-CXXDependentScopeMemberExpr 0x159141978 <line:10:6, col:16> '<dependent type>' contains-errors lvalue ->dumpdata       | `-CXXDependentScopeMemberExpr 0x159141930 <col:6, col:11> '<dependent type>' contains-errors lvalue ->ops       |   `-RecoveryExpr 0x159141910 <col:6> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x159141b30 <col:26, line:12:2>         `-CallExpr 0x159141b00 <line:11:3, col:33> '<dependent type>' contains-errors           |-ParenExpr 0x159141aa0 <col:3, col:23> '<dependent type>' contains-errors           | `-UnaryOperator 0x159141a88 <col:4, col:15> '<dependent type>' contains-errors prefix '*' cannot overflow           |   `-ImplicitCastExpr 0x159141a70 <col:5, col:15> '<dependent type>' contains-errors <LValueToRValue>           |     `-CXXDependentScopeMemberExpr 0x159141a28 <col:5, col:15> '<dependent type>' contains-errors lvalue ->dumpdata           |       `-CXXDependentScopeMemberExpr 0x1591419e0 <col:5, col:10> '<dependent type>' contains-errors lvalue ->ops           |         `-RecoveryExpr 0x1591419c0 <col:5> '<dependent type>' contains-errors lvalue           |-RecoveryExpr 0x159141ac0 <col:25> '<dependent type>' contains-errors lvalue           `-RecoveryExpr 0x159141ae0 <col:30> '<dependent type>' contains-errors lvalue ","19586":"`-FunctionDecl 0x123128258  line:1:1 invalid distance_multiply 'int (int, int)'   |-ParmVarDecl 0x1231280f0 <col:19, col:32> col:32 invalid d 'int'   |-ParmVarDecl 0x123128170 <col:35, col:39> col:39 used m 'int'   `-CompoundStmt 0x1231285b8 <line:2:1, line:9:1>     |-IfStmt 0x1231283b8 <line:3:3, col:22>     | |-BinaryOperator 0x123128368 <col:7, col:12> 'int' '=='     | | |-ImplicitCastExpr 0x123128350 <col:7> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x123128310 <col:7> 'int' lvalue ParmVar 0x123128170 'm' 'int'     | | `-IntegerLiteral 0x123128330 <col:12> 'int' 0     | `-ReturnStmt 0x1231283a8 <col:15, col:22>     |   `-IntegerLiteral 0x123128388 <col:22> 'int' 0     `-IfStmt 0x123128588 <line:5:3, line:8:12> has_else       |-BinaryOperator 0x1231284b0 <line:5:7, col:36> 'int' contains-errors '<'       | |-RecoveryExpr 0x1231283d8 <col:7> '<dependent type>' contains-errors lvalue       | `-BinaryOperator 0x123128490 <col:11, col:36> '<dependent type>' contains-errors '\/'       |   |-RecoveryExpr 0x123128470 <col:11> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x123128410 <col:36> 'int' lvalue ParmVar 0x123128170 'm' 'int'       |-ReturnStmt 0x123128530 <line:6:5, col:16>       | `-BinaryOperator 0x123128510 <col:12, col:16> '<dependent type>' contains-errors '*'       |   |-RecoveryExpr 0x1231284d0 <col:12> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x1231284f0 <col:16> 'int' lvalue ParmVar 0x123128170 'm' 'int'       `-ReturnStmt 0x123128578 <line:8:5, col:12>         `-RecoveryExpr 0x123128558 <col:12> '<dependent type>' contains-errors lvalue ","19892":"`-FunctionDecl 0x14c8082d8  line:1:16 invalid aio_setup_single_vector 'int (struct kiocb *, int, char)' static   |-ParmVarDecl 0x14b80e268 <col:40, col:54> col:54 kiocb 'struct kiocb *'   |-ParmVarDecl 0x14b80e2e8 <line:2:12, col:16> col:16 used rw 'int'   |-ParmVarDecl 0x14b80e360 <col:20, col:25> col:25 __user 'char'   `-CompoundStmt 0x14c808a40 <line:6:1, line:14:1>     |-IfStmt 0x14c8088c8 <line:7:2, line:8:11>     | |-CallExpr 0x14c8087f8 <line:7:6, col:40> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14c8084f0 <col:6> 'int ()' Function 0x14c808438 'unlikely' 'int ()'     | | `-UnaryOperator 0x14c8087e0 <col:15, col:39> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-CallExpr 0x14c8087a8 <col:16, col:39> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x14c8085f0 <col:16> 'int ()' Function 0x14c808538 'access_ok' 'int ()'     | |     |-UnaryOperator 0x14c808750 <col:26, col:27> 'int' prefix '!' cannot overflow     | |     | `-ImplicitCastExpr 0x14c808738 <col:27> 'int' <LValueToRValue>     | |     |   `-DeclRefExpr 0x14c808610 <col:27> 'int' lvalue ParmVar 0x14b80e2e8 'rw' 'int'     | |     |-RecoveryExpr 0x14c808768 <col:31> '<dependent type>' contains-errors lvalue     | |     `-RecoveryExpr 0x14c808788 <col:36> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14c8088b8 <line:8:3, col:11>     |   `-UnaryOperator 0x14c8088a0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14c808888 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14c808868 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14c8089f0 <line:12:2, col:13> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x14c8089d8 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x14c8089c0 <col:3> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x14c8089a0 <col:3> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x14c808960 <col:13> 'int' 1     `-ReturnStmt 0x14c808a30 <line:13:2, col:9>       `-IntegerLiteral 0x14c808a10 <col:9> 'int' 0 ","20123":"`-FunctionDecl 0x1261281a8  line:1:1 compileFile 'int (const char *)'   |-ParmVarDecl 0x1261280d8 <col:14, col:26> col:26 used fileName 'const char *'   `-CompoundStmt 0x1261411d8 <line:2:1, line:24:1>     |-IfStmt 0x126141178 <line:10:3, line:22:5> has_else     | |-RecoveryExpr 0x126128588 <line:10:7, col:40> '_Bool' contains-errors     | |-CompoundStmt 0x126140dc8 <line:11:5, line:15:5>     | | |-WhileStmt 0x126140b90 <line:12:7, line:13:22>     | | | |-CallExpr 0x126128738 <line:12:14, col:31> '<dependent type>' contains-errors     | | | | |-DeclRefExpr 0x126128688 <col:14> 'int ()' Function 0x1261285d0 'getALine' 'int ()'     | | | | `-UnaryOperator 0x126128720 <col:24, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | |   `-RecoveryExpr 0x126128700 <col:25> '<dependent type>' contains-errors lvalue     | | | `-CallExpr 0x126140b68 <line:13:2, col:22> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x126140ab8 <col:2> 'int ()' Function 0x126140a00 'compileRule' 'int ()'     | | |   `-UnaryOperator 0x126140b50 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |     `-RecoveryExpr 0x126140b30 <col:16> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x126140da0 <line:14:7, col:24> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x126140c90 <col:7> 'int ()' Function 0x126140bd8 'fclose' 'int ()'     | |   `-CXXDependentScopeMemberExpr 0x126140d58 <col:15, col:22> '<dependent type>' contains-errors lvalue .in     | |     `-RecoveryExpr 0x126140d38 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x126141158 <line:17:5, line:22:5>     |   |-IfStmt 0x126141108 <line:18:7, line:19:38>     |   | |-BinaryOperator 0x126140e60 <line:18:11, col:23> 'int' contains-errors '>'     |   | | |-RecoveryExpr 0x126140e40 <col:11> '<dependent type>' contains-errors lvalue     |   | | `-IntegerLiteral 0x126140e00 <col:23> 'int' 1     |   | `-CallExpr 0x1261410d8 <line:19:2, col:38> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x126140f60 <col:2> 'int ()' Function 0x126140ea8 'lou_logPrint' 'int ()'     |   |   |-StringLiteral 0x126140fc0 <col:16> 'char[4]' lvalue \"STR\"     |   |   `-CXXDependentScopeMemberExpr 0x126141090 <col:23, col:30> '<dependent type>' contains-errors lvalue .fileName     |   |     `-RecoveryExpr 0x126141070 <col:23> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x126141148 <line:21:7, col:14>     |     `-IntegerLiteral 0x126141128 <col:14> 'int' 0     `-ReturnStmt 0x1261411c8 <line:23:3, col:10>       `-IntegerLiteral 0x1261411a8 <col:10> 'int' 1 ","19208":"`-FunctionDecl 0x15611b348  col:5 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x15611b448 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x15611b4b0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x15611b518 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x15611b3f0 <<invalid sloc>> Implicit 882 ","19772":"`-FunctionDecl 0x131827dd0  col:14 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x131827ed0 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x131827f38 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x131827e78 <<invalid sloc>> Implicit 887 ","20056":"`-FunctionDecl 0x15d8fabc0  line:1:6 invalid BindElectronBrowser 'void (int)'   |-ParmVarDecl 0x15d8faaf0 <line:2:5, <invalid sloc>> col:12 invalid 'int'   `-CompoundStmt 0x15d8facc0 <line:3:71, line:5:1>     `-RecoveryExpr 0x15d8faca0 <line:4:3> '<dependent type>' contains-errors lvalue ","19390":"`-FunctionDecl 0x1238281a0  col:43 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x1238282a0 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x123828248 <<invalid sloc>> Implicit 902 ","19971":"`-FunctionDecl 0x132128278  line:1:6 strncpy_from_user 'long (char *, const char)'   |-ParmVarDecl 0x1321280d8 <col:24, col:30> col:30 used dst 'char *'   |-ParmVarDecl 0x132128150 <col:35, col:46> col:46 __user 'const char'   `-CompoundStmt 0x132142778 <line:2:1, line:22:1>     |-DeclStmt 0x132128490 <line:3:2, col:34>     | |-VarDecl 0x132128390 <col:2, col:16> col:16 used max_addr 'unsigned long'     | `-VarDecl 0x132128410 <col:2, col:26> col:26 used src_addr 'unsigned long'     |-IfStmt 0x132128720 <line:5:2, line:6:10>     | |-CallExpr 0x1321286b0 <line:5:6, col:25> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1321285d0 <col:6> 'int ()' Function 0x132128518 'unlikely' 'int ()'     | | `-BinaryOperator 0x132128690 <col:15, col:24> 'int' contains-errors '<='     | |   |-RecoveryExpr 0x132128670 <col:15> '<dependent type>' contains-errors lvalue     | |   `-IntegerLiteral 0x132128608 <col:24> 'int' 0     | `-ReturnStmt 0x132128710 <line:6:3, col:10>     |   `-ImplicitCastExpr 0x1321286f8 <col:10> 'long' <IntegralCast>     |     `-IntegerLiteral 0x1321286d8 <col:10> 'int' 0     |-BinaryOperator 0x132141960 <line:8:2, col:27> 'unsigned long' '='     | |-DeclRefExpr 0x132128740 <col:2> 'unsigned long' lvalue Var 0x132128390 'max_addr' 'unsigned long'     | `-ImplicitCastExpr 0x132141948 <col:13, col:27> 'unsigned long' <IntegralCast>     |   `-CallExpr 0x132141928 <col:13, col:27> 'int'     |     `-ImplicitCastExpr 0x132141910 <col:13> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x1321418b8 <col:13> 'int ()' Function 0x132141800 'user_addr_max' 'int ()'     |-IfStmt 0x1321426b0 <line:10:2, line:20:2>     | |-CallExpr 0x132141b78 <line:10:6, col:32> 'int'     | | |-ImplicitCastExpr 0x132141b60 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x132141ab0 <col:6> 'int ()' Function 0x1321419f8 'likely' 'int ()'     | | `-BinaryOperator 0x132141b40 <col:13, col:24> 'int' '<'     | |   |-ImplicitCastExpr 0x132141b10 <col:13> 'unsigned long' <LValueToRValue>     | |   | `-DeclRefExpr 0x132141ad0 <col:13> 'unsigned long' lvalue Var 0x132128410 'src_addr' 'unsigned long'     | |   `-ImplicitCastExpr 0x132141b28 <col:24> 'unsigned long' <LValueToRValue>     | |     `-DeclRefExpr 0x132141af0 <col:24> 'unsigned long' lvalue Var 0x132128390 'max_addr' 'unsigned long'     | `-CompoundStmt 0x132142660 <col:35, line:20:2>     |   |-DeclStmt 0x132141cb0 <line:11:3, col:42>     |   | `-VarDecl 0x132141bb8 <col:3, col:34> col:17 used max 'unsigned long' cinit     |   |   `-BinaryOperator 0x132141c90 <col:23, col:34> 'unsigned long' '-'     |   |     |-ImplicitCastExpr 0x132141c60 <col:23> 'unsigned long' <LValueToRValue>     |   |     | `-DeclRefExpr 0x132141c20 <col:23> 'unsigned long' lvalue Var 0x132128390 'max_addr' 'unsigned long'     |   |     `-ImplicitCastExpr 0x132141c78 <col:34> 'unsigned long' <LValueToRValue>     |   |       `-DeclRefExpr 0x132141c40 <col:34> 'unsigned long' lvalue Var 0x132128410 'src_addr' 'unsigned long'     |   |-DeclStmt 0x132141d48 <line:12:3, col:14>     |   | `-VarDecl 0x132141ce0 <col:3, col:8> col:8 used retval 'long'     |   |-CallExpr 0x132141ee8 <line:14:3, col:31> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x132141e40 <col:3> 'int ()' Function 0x132141d88 'kasan_check_write' 'int ()'     |   | |-DeclRefExpr 0x132141e60 <col:21> 'char *' lvalue ParmVar 0x1321280d8 'dst' 'char *'     |   | `-RecoveryExpr 0x132141ec8 <col:26> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x1321420e0 <line:15:3, col:38> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x132141ff8 <col:3> 'int ()' Function 0x132141f40 'check_object_size' 'int ()'     |   | |-DeclRefExpr 0x132142018 <col:21> 'char *' lvalue ParmVar 0x1321280d8 'dst' 'char *'     |   | |-RecoveryExpr 0x1321420a0 <col:26> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x1321420c0 <col:33> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x132142230 <line:16:3, col:21> 'int'     |   | `-ImplicitCastExpr 0x132142218 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x1321421f8 <col:3> 'int ()' Function 0x132142140 'user_access_begin' 'int ()'     |   |-BinaryOperator 0x1321424c0 <line:17:3, col:53> 'long' contains-errors '='     |   | |-DeclRefExpr 0x132142250 <col:3> 'long' lvalue Var 0x132141ce0 'retval' 'long'     |   | `-CallExpr 0x132142480 <col:12, col:53> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x132142350 <col:12> 'int ()' Function 0x132142298 'do_strncpy_from_user' 'int ()'     |   |   |-DeclRefExpr 0x132142370 <col:33> 'char *' lvalue ParmVar 0x1321280d8 'dst' 'char *'     |   |   |-RecoveryExpr 0x132142440 <col:38> '<dependent type>' contains-errors lvalue     |   |   |-RecoveryExpr 0x132142460 <col:43> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x1321423c0 <col:50> 'unsigned long' lvalue Var 0x132141bb8 'max' 'unsigned long'     |   |-CallExpr 0x1321425f8 <line:18:3, col:19> 'int'     |   | `-ImplicitCastExpr 0x1321425e0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x1321425c0 <col:3> 'int ()' Function 0x132142508 'user_access_end' 'int ()'     |   `-ReturnStmt 0x132142650 <line:19:3, col:10>     |     `-ImplicitCastExpr 0x132142638 <col:10> 'long' <LValueToRValue>     |       `-DeclRefExpr 0x132142618 <col:10> 'long' lvalue Var 0x132141ce0 'retval' 'long'     `-ReturnStmt 0x132142768 <line:21:2, col:10>       `-UnaryOperator 0x132142750 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow         `-ImplicitCastExpr 0x132142738 <col:10> '<dependent type>' contains-errors <LValueToRValue>           `-RecoveryExpr 0x132142718 <col:10> '<dependent type>' contains-errors lvalue ","20016":"`-FunctionDecl 0x15b144d58  line:1:12 do_remount 'int (struct path *, int, int, void *)' static   |-ParmVarDecl 0x15b128648 <col:23, col:36> col:36 used path 'struct path *'   |-ParmVarDecl 0x15b1286c8 <col:42, col:46> col:46 used flags 'int'   |-ParmVarDecl 0x15b128748 <col:53, col:57> col:57 used mnt_flags 'int'   |-ParmVarDecl 0x15b144c00 <line:2:9, col:15> col:15 used data 'void *'   `-CompoundStmt 0x15b146dd8 <line:3:1, line:39:1>     |-DeclStmt 0x15b144ee8 <line:4:2, col:9>     | `-VarDecl 0x15b144e80 <col:2, col:6> col:6 used err 'int'     |-DeclStmt 0x15b145190 <line:5:2, col:44>     | |-RecordDecl 0x15b144f00 <col:2, col:9> col:9 struct super_block     | `-VarDecl 0x15b145068 <col:2, col:38> col:22 used sb 'struct super_block *' cinit     |   `-CXXDependentScopeMemberExpr 0x15b145130 <col:27, col:38> '<dependent type>' contains-errors lvalue ->mnt_sb     |     `-RecoveryExpr 0x15b145108 <col:27, col:33> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x15b1450d0 <col:27> 'struct path *' lvalue ParmVar 0x15b128648 'path' 'struct path *'     |-DeclStmt 0x15b145570 <line:6:2, col:43>     | |-RecordDecl 0x15b1451a8 <col:2, col:9> col:9 struct mount     | `-VarDecl 0x15b145318 <col:2, col:42> col:16 used mnt 'struct mount *' cinit     |   `-CallExpr 0x15b145530 <col:22, col:42> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x15b1454b0 <col:22> 'int ()' Function 0x15b1453f8 'real_mount' 'int ()'     |     `-RecoveryExpr 0x15b145508 <col:33, col:39> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x15b1454d0 <col:33> 'struct path *' lvalue ParmVar 0x15b128648 'path' 'struct path *'     |-IfStmt 0x15b1457f8 <line:8:2, line:9:11>     | |-UnaryOperator 0x15b145738 <line:8:6, col:20> 'int' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x15b1456f8 <col:7, col:20> 'int' contains-errors     | |   |-ImplicitCastExpr 0x15b1456e0 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x15b145668 <col:7> 'int ()' Function 0x15b1455b0 'check_mnt' 'int ()'     | |   `-ImplicitCastExpr 0x15b145720 <col:17> 'struct mount *' contains-errors <LValueToRValue>     | |     `-DeclRefExpr 0x15b145688 <col:17> 'struct mount *' contains-errors lvalue Var 0x15b145318 'mnt' 'struct mount *'     | `-ReturnStmt 0x15b1457e8 <line:9:3, col:11>     |   `-UnaryOperator 0x15b1457d0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x15b1457b8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x15b145798 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15b1459e8 <line:11:2, line:12:11>     | |-BinaryOperator 0x15b145920 <line:11:6, col:33> 'int' contains-errors '!='     | | |-RecoveryExpr 0x15b145850 <col:6, col:12> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x15b145818 <col:6> 'struct path *' lvalue ParmVar 0x15b128648 'path' 'struct path *'     | | `-CXXDependentScopeMemberExpr 0x15b1458d8 <col:22, col:33> '<dependent type>' contains-errors lvalue ->mnt_root     | |   `-RecoveryExpr 0x15b1458b0 <col:22, col:28> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x15b145878 <col:22> 'struct path *' lvalue ParmVar 0x15b128648 'path' 'struct path *'     | `-ReturnStmt 0x15b1459d8 <line:12:3, col:11>     |   `-UnaryOperator 0x15b1459c0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x15b1459a8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x15b145988 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14b008c28 <line:15:2, line:18:2>     | |-RecoveryExpr 0x15b145b40 <line:15:6, line:16:32> '_Bool' contains-errors     | `-CompoundStmt 0x14b008c10 <col:35, line:18:2>     |   `-ReturnStmt 0x14b008c00 <line:17:3, col:11>     |     `-UnaryOperator 0x15b145be0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x15b145bc8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x15b145ba8 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14b008e20 <line:19:2, col:36> 'int' contains-errors '='     | |-DeclRefExpr 0x14b008c48 <col:2> 'int' lvalue Var 0x15b144e80 'err' 'int'     | `-CallExpr 0x14b008dc0 <col:8, col:36> 'int' contains-errors     |   |-ImplicitCastExpr 0x14b008da8 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14b008d48 <col:8> 'int ()' Function 0x14b008c90 'security_sb_remount' 'int ()'     |   |-ImplicitCastExpr 0x14b008df0 <col:28> 'struct super_block *' contains-errors <LValueToRValue>     |   | `-DeclRefExpr 0x14b008d68 <col:28> 'struct super_block *' contains-errors lvalue Var 0x15b145068 'sb' 'struct super_block *'     |   `-ImplicitCastExpr 0x14b008e08 <col:32> 'void *' <LValueToRValue>     |     `-DeclRefExpr 0x14b008d88 <col:32> 'void *' lvalue ParmVar 0x15b144c00 'data' 'void *'     |-IfStmt 0x14b008ec0 <line:20:2, line:21:10>     | |-ImplicitCastExpr 0x14b008e60 <line:20:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x14b008e40 <col:6> 'int' lvalue Var 0x15b144e80 'err' 'int'     | `-ReturnStmt 0x14b008eb0 <line:21:3, col:10>     |   `-ImplicitCastExpr 0x14b008e98 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x14b008e78 <col:10> 'int' lvalue Var 0x15b144e80 'err' 'int'     |-CallExpr 0x14b009058 <line:23:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b008fc0 <col:2> 'int ()' Function 0x14b008f08 'down_write' 'int ()'     | `-UnaryOperator 0x14b009040 <col:13, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14b009018 <col:14, col:18> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14b008fe0 <col:14> 'struct super_block *' contains-errors lvalue Var 0x15b145068 'sb' 'struct super_block *'     |-IfStmt 0x14b009778 <line:24:2, line:29:41> has_else     | |-BinaryOperator 0x14b0090f8 <line:24:6, col:14> '<dependent type>' contains-errors '&'     | | |-DeclRefExpr 0x14b009080 <col:6> 'int' lvalue ParmVar 0x15b1286c8 'flags' 'int'     | | `-RecoveryExpr 0x14b0090d8 <col:14> '<dependent type>' contains-errors lvalue     | |-BinaryOperator 0x14b0092e8 <line:25:3, col:44> 'int' contains-errors '='     | | |-DeclRefExpr 0x14b009118 <col:3> 'int' lvalue Var 0x15b144e80 'err' 'int'     | | `-CallExpr 0x14b0092b8 <col:9, col:44> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x14b009218 <col:9> 'int ()' Function 0x14b009160 'change_mount_flags' 'int ()'     | |   |-RecoveryExpr 0x14b009270 <col:28, col:34> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x14b009238 <col:28> 'struct path *' lvalue ParmVar 0x15b128648 'path' 'struct path *'     | |   `-DeclRefExpr 0x14b009298 <col:39> 'int' lvalue ParmVar 0x15b1286c8 'flags' 'int'     | `-IfStmt 0x14b009748 <line:26:7, line:29:41> has_else     |   |-UnaryOperator 0x14b0094a8 <line:26:11, col:33> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | `-CallExpr 0x14b009480 <col:12, col:33> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x14b0093e8 <col:12> 'int ()' Function 0x14b009330 'capable' 'int ()'     |   |   `-RecoveryExpr 0x14b009460 <col:20> '<dependent type>' contains-errors lvalue     |   |-NullStmt 0x14b009740 <line:27:3>     |   `-BinaryOperator 0x14b009720 <line:29:3, col:41> 'int' contains-errors '='     |     |-DeclRefExpr 0x14b0094e0 <col:3> 'int' lvalue Var 0x15b144e80 'err' 'int'     |     `-CallExpr 0x14b009698 <col:9, col:41> 'int' contains-errors     |       |-ImplicitCastExpr 0x14b009680 <col:9> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14b0095e0 <col:9> 'int ()' Function 0x14b009528 'do_remount_sb' 'int ()'     |       |-ImplicitCastExpr 0x14b0096d8 <col:23> 'struct super_block *' contains-errors <LValueToRValue>     |       | `-DeclRefExpr 0x14b009600 <col:23> 'struct super_block *' contains-errors lvalue Var 0x15b145068 'sb' 'struct super_block *'     |       |-ImplicitCastExpr 0x14b0096f0 <col:27> 'int' <LValueToRValue>     |       | `-DeclRefExpr 0x14b009620 <col:27> 'int' lvalue ParmVar 0x15b1286c8 'flags' 'int'     |       |-ImplicitCastExpr 0x14b009708 <col:34> 'void *' <LValueToRValue>     |       | `-DeclRefExpr 0x14b009640 <col:34> 'void *' lvalue ParmVar 0x15b144c00 'data' 'void *'     |       `-IntegerLiteral 0x14b009660 <col:40> 'int' 0     |-IfStmt 0x15b146bd0 <line:30:2, line:36:2>     | |-UnaryOperator 0x14b0097e0 <line:30:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14b0097c8 <col:7> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x14b0097a8 <col:7> 'int' lvalue Var 0x15b144e80 'err' 'int'     | `-CompoundStmt 0x15b146ba0 <col:12, line:36:2>     |   |-CallExpr 0x14b009910 <line:31:3, col:19> 'int'     |   | `-ImplicitCastExpr 0x14b0098f8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x14b0098d8 <col:3> 'int ()' Function 0x14b009820 'lock_mount_hash' 'int ()'     |   |-BinaryOperator 0x14b009ac0 <line:33:3, col:24> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x14b009a58 <col:3, col:12> '<dependent type>' contains-errors lvalue .mnt_flags     |   | | `-RecoveryExpr 0x14b009a30 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x14b0099f8 <col:3> 'struct mount *' contains-errors lvalue Var 0x15b145318 'mnt' 'struct mount *'     |   | `-DeclRefExpr 0x14b009aa0 <col:24> 'int' lvalue ParmVar 0x15b128748 'mnt_flags' 'int'     |   |-CallExpr 0x15b146a40 <line:34:3, col:34> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14b009bc0 <col:3> 'int ()' Function 0x14b009b08 'touch_mnt_namespace' 'int ()'     |   | `-RecoveryExpr 0x15b146a18 <col:23, col:28> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14b009be0 <col:23> 'struct mount *' contains-errors lvalue Var 0x15b145318 'mnt' 'struct mount *'     |   `-CallExpr 0x15b146b80 <line:35:3, col:21> 'int'     |     `-ImplicitCastExpr 0x15b146b68 <col:3> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x15b146b48 <col:3> 'int ()' Function 0x15b146a90 'unlock_mount_hash' 'int ()'     |-CallExpr 0x15b146d68 <line:37:2, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15b146cd0 <col:2> 'int ()' Function 0x15b146c18 'up_write' 'int ()'     | `-UnaryOperator 0x15b146d50 <col:11, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x15b146d28 <col:12, col:16> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x15b146cf0 <col:12> 'struct super_block *' contains-errors lvalue Var 0x15b145068 'sb' 'struct super_block *'     `-ReturnStmt 0x15b146dc8 <line:38:2, col:9>       `-ImplicitCastExpr 0x15b146db0 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x15b146d90 <col:9> 'int' lvalue Var 0x15b144e80 'err' 'int' ","19474":"`-FunctionDecl 0x11d808dc0  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x11d808ec0 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x11d808f28 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x11d808f90 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x11d808e68 <<invalid sloc>> Implicit 900 ","19945":"`-FunctionDecl 0x14a00dd18  line:1:2 __must_hold 'int ()'   `-CompoundStmt 0x14a02a688 <line:2:1, line:13:1>     |-DeclStmt 0x14a00e0d8 <line:3:2, col:46>     | |-RecordDecl 0x14a00de08 <col:2, col:9> col:9 struct io_timeout_data     | `-VarDecl 0x14a00df78 <col:2, col:36> col:26 used io 'struct io_timeout_data *' cinit     |   `-CXXDependentScopeMemberExpr 0x14a00e078 <col:31, col:36> '<dependent type>' contains-errors lvalue ->async_data     |     `-RecoveryExpr 0x14a00e058 <col:31> '<dependent type>' contains-errors lvalue     `-IfStmt 0x14a02a668 <line:5:2, line:12:2>       |-BinaryOperator 0x14a027b10 <line:5:6, col:44> 'int' contains-errors '!='       | |-CallExpr 0x14a027ab0 <col:6, col:38> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x14a00e1d0 <col:6> 'int ()' Function 0x14a00e118 'hrtimer_try_to_cancel' 'int ()'       | | `-UnaryOperator 0x14a027a98 <col:28, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow       | |   `-RecoveryExpr 0x14a027a70 <col:29, col:33> '<dependent type>' contains-errors lvalue       | |     `-DeclRefExpr 0x14a00e1f0 <col:29> 'struct io_timeout_data *' contains-errors lvalue Var 0x14a00df78 'io' 'struct io_timeout_data *'       | `-UnaryOperator 0x14a027af8 <col:43, col:44> 'int' prefix '-'       |   `-IntegerLiteral 0x14a027ad8 <col:44> 'int' 1       `-CompoundStmt 0x14a02a638 <col:47, line:12:2>         |-IfStmt 0x14a027cf0 <line:6:3, line:7:20>         | |-RecoveryExpr 0x14a027b48 <line:6:7> '<dependent type>' contains-errors lvalue         | `-CallExpr 0x14a027cc8 <line:7:4, col:20> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x14a027c48 <col:4> 'int ()' Function 0x14a027b90 'req_set_fail' 'int ()'         |   `-RecoveryExpr 0x14a027ca8 <col:17> '<dependent type>' contains-errors lvalue         |-CallExpr 0x14a028300 <line:8:3, line:9:43> '<dependent type>' contains-errors         | |-DeclRefExpr 0x14a027df0 <line:8:3> 'int ()' Function 0x14a027d38 'atomic_set' 'int ()'         | |-UnaryOperator 0x14a0281d8 <col:14, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow         | | `-CXXDependentScopeMemberExpr 0x14a028190 <col:15, col:25> '<dependent type>' contains-errors lvalue ->cq_timeouts         | |   `-CXXDependentScopeMemberExpr 0x14a028148 <col:15, col:20> '<dependent type>' contains-errors lvalue ->ctx         | |     `-RecoveryExpr 0x14a028128 <col:15> '<dependent type>' contains-errors lvalue         | `-BinaryOperator 0x14a0282e0 <line:9:4, col:42> '<dependent type>' contains-errors '+'         |   |-CallExpr 0x14a0282b8 <col:4, col:38> '<dependent type>' contains-errors         |   | |-DeclRefExpr 0x14a027fb0 <col:4> 'int ()' Function 0x14a027ef8 'atomic_read' 'int ()'         |   | `-UnaryOperator 0x14a0282a0 <col:16, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow         |   |   `-CXXDependentScopeMemberExpr 0x14a028258 <col:17, col:27> '<dependent type>' contains-errors lvalue ->cq_timeouts         |   |     `-CXXDependentScopeMemberExpr 0x14a028210 <col:17, col:22> '<dependent type>' contains-errors lvalue ->ctx         |   |       `-RecoveryExpr 0x14a0281f0 <col:17> '<dependent type>' contains-errors lvalue         |   `-IntegerLiteral 0x14a0280b8 <col:42> 'int' 1         |-CallExpr 0x14a0285e0 <line:10:3, col:35> '<dependent type>' contains-errors         | |-DeclRefExpr 0x14a028410 <col:3> 'int ()' Function 0x14a028358 'list_del_init' 'int ()'         | `-UnaryOperator 0x14a0285c8 <col:17, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow         |   `-CXXDependentScopeMemberExpr 0x14a028580 <col:18, col:31> '<dependent type>' contains-errors lvalue .list         |     `-CXXDependentScopeMemberExpr 0x14a028538 <col:18, col:23> '<dependent type>' contains-errors lvalue ->timeout         |       `-RecoveryExpr 0x14a028518 <col:18> '<dependent type>' contains-errors lvalue         `-CallExpr 0x14a02a600 <line:11:3, col:38> '<dependent type>' contains-errors           |-DeclRefExpr 0x14a0286e8 <col:3> 'int ()' Function 0x14a028630 'io_req_tw_post_queue' 'int ()'           |-RecoveryExpr 0x14a028790 <col:24> '<dependent type>' contains-errors lvalue           |-RecoveryExpr 0x14a0287b0 <col:29> '<dependent type>' contains-errors lvalue           `-IntegerLiteral 0x14a028738 <col:37> 'int' 0 ","19527":"`-FunctionDecl 0x12a0083f8  line:1:1 arch_get_unmapped_area_topdown 'int (struct file *, const unsigned long, const unsigned long, const unsigned long, const unsigned long)'   |-ParmVarDecl 0x12980e248 <col:32, col:45> col:45 used filp 'struct file *'   |-ParmVarDecl 0x12980e2c8 <col:51, col:71> col:71 used addr0 'const unsigned long'   |-ParmVarDecl 0x12980e348 <line:2:6, col:26> col:26 used len 'const unsigned long'   |-ParmVarDecl 0x12a008200 <col:31, col:51> col:51 used pgoff 'const unsigned long'   |-ParmVarDecl 0x12a008280 <line:3:6, col:26> col:26 used flags 'const unsigned long'   `-CompoundStmt 0x12b00ad98 <line:4:1, line:61:1>     |-DeclStmt 0x12a0086f8 <line:5:2, col:28>     | |-RecordDecl 0x12a008510 <col:2, col:9> col:9 struct vm_area_struct     | `-VarDecl 0x12a008678 <col:2, col:25> col:25 used vma 'struct vm_area_struct *'     |-DeclStmt 0x12a0089d8 <line:6:2, col:36>     | |-RecordDecl 0x12a008710 <col:2, col:9> col:9 struct mm_struct     | `-VarDecl 0x12a008878 <col:2, col:34> col:20 used mm 'struct mm_struct *' cinit     |   `-CXXDependentScopeMemberExpr 0x12a008978 <col:25, col:34> '<dependent type>' contains-errors lvalue ->mm     |     `-RecoveryExpr 0x12a008958 <col:25> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x12a008aa8 <line:7:2, col:39>     | `-VarDecl 0x12a008a08 <col:2, col:28> col:16 used task_size 'unsigned long' cinit     |   `-RecoveryExpr 0x12a008a88 <col:28> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x12a008b78 <line:8:2, col:28>     | `-VarDecl 0x12a008ad8 <col:2, col:23> col:16 used addr 'unsigned long' cinit     |   `-ImplicitCastExpr 0x12a008b60 <col:23> 'unsigned long' <LValueToRValue>     |     `-DeclRefExpr 0x12a008b40 <col:23> 'const unsigned long' lvalue ParmVar 0x12980e2c8 'addr0' 'const unsigned long'     |-DeclStmt 0x12a008c10 <line:9:2, col:20>     | `-VarDecl 0x12a008ba8 <col:2, col:6> col:6 used do_color_align 'int'     |-DeclStmt 0x12a008da8 <line:10:2, col:35>     | |-RecordDecl 0x12a008c28 <col:2, col:9> col:9 struct vm_unmapped_area_info     | `-VarDecl 0x12a008d28 <col:2, col:31> col:31 referenced invalid info 'struct vm_unmapped_area_info'     |-CallExpr 0x12a0090d0 <line:13:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12a008ed0 <col:2> 'int ()' Function 0x12a008e18 'BUG_ON' 'int ()'     | `-UnaryOperator 0x12a0090b8 <col:9, col:36> '<dependent type>' contains-errors prefix '!' cannot overflow     |   `-CallExpr 0x12a009090 <col:10, col:36> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12a008fd0 <col:10> 'int ()' Function 0x12a008f18 'test_thread_flag' 'int ()'     |     `-RecoveryExpr 0x12a009070 <col:27> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12b008a38 <line:15:2, line:21:2>     | |-BinaryOperator 0x12a009170 <line:15:6, col:14> '<dependent type>' contains-errors '&'     | | |-DeclRefExpr 0x12a0090f8 <col:6> 'const unsigned long' lvalue ParmVar 0x12a008280 'flags' 'const unsigned long'     | | `-RecoveryExpr 0x12a009150 <col:14> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12b008a18 <col:25, line:21:2>     |   |-IfStmt 0x12b008998 <line:17:3, line:19:12>     |   | |-RecoveryExpr 0x12b0088d0 <line:17:7, line:18:53> '_Bool' contains-errors     |   | `-ReturnStmt 0x12b008988 <line:19:4, col:12>     |   |   `-UnaryOperator 0x12b008970 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |     `-ImplicitCastExpr 0x12b008958 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |   |       `-RecoveryExpr 0x12b008938 <col:12> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x12b008a08 <line:20:3, col:10>     |     `-ImplicitCastExpr 0x12b0089f0 <col:10> 'int' <IntegralCast>     |       `-ImplicitCastExpr 0x12b0089d8 <col:10> 'unsigned long' <LValueToRValue>     |         `-DeclRefExpr 0x12b0089b8 <col:10> 'unsigned long' lvalue Var 0x12a008ad8 'addr' 'unsigned long'     |-IfStmt 0x12b008d08 <line:23:2, line:24:11>     | |-CallExpr 0x12b008c38 <line:23:6, col:30> 'int' contains-errors     | | |-ImplicitCastExpr 0x12b008c20 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x12b008b38 <col:6> 'int ()' Function 0x12b008a80 'unlikely' 'int ()'     | | `-BinaryOperator 0x12b008bc8 <col:15, col:21> 'int' contains-errors '>'     | |   |-ImplicitCastExpr 0x12b008b98 <col:15> 'unsigned long' <LValueToRValue>     | |   | `-DeclRefExpr 0x12b008b58 <col:15> 'const unsigned long' lvalue ParmVar 0x12980e348 'len' 'const unsigned long'     | |   `-ImplicitCastExpr 0x12b008bb0 <col:21> 'unsigned long' contains-errors <LValueToRValue>     | |     `-DeclRefExpr 0x12b008b78 <col:21> 'unsigned long' contains-errors lvalue Var 0x12a008a08 'task_size' 'unsigned long'     | `-ReturnStmt 0x12b008cf8 <line:24:3, col:11>     |   `-UnaryOperator 0x12b008ce0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12b008cc8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12b008ca8 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12b008d68 <line:26:2, col:19> 'int' '='     | |-DeclRefExpr 0x12b008d28 <col:2> 'int' lvalue Var 0x12a008ba8 'do_color_align' 'int'     | `-IntegerLiteral 0x12b008d48 <col:19> 'int' 0     |-IfStmt 0x12b008e80 <line:27:2, line:28:20>     | |-RecoveryExpr 0x12b008e00 <line:27:6, col:33> '_Bool' contains-errors     | `-BinaryOperator 0x12b008e60 <line:28:3, col:20> 'int' '='     |   |-DeclRefExpr 0x12b008e20 <col:3> 'int' lvalue Var 0x12a008ba8 'do_color_align' 'int'     |   `-IntegerLiteral 0x12b008e40 <col:20> 'int' 1     |-IfStmt 0x12b00a288 <line:31:2, line:41:2>     | |-ImplicitCastExpr 0x12b008ec0 <line:31:6> 'unsigned long' <LValueToRValue>     | | `-DeclRefExpr 0x12b008ea0 <col:6> 'unsigned long' lvalue Var 0x12a008ad8 'addr' 'unsigned long'     | `-CompoundStmt 0x12b00a260 <col:12, line:41:2>     |   |-IfStmt 0x12b0092f0 <line:32:3, line:35:26> has_else     |   | |-ImplicitCastExpr 0x12b008ef8 <line:32:7> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x12b008ed8 <col:7> 'int' lvalue Var 0x12a008ba8 'do_color_align' 'int'     |   | |-BinaryOperator 0x12b009100 <line:33:4, col:34> 'unsigned long' '='     |   | | |-DeclRefExpr 0x12b008f10 <col:4> 'unsigned long' lvalue Var 0x12a008ad8 'addr' 'unsigned long'     |   | | `-ImplicitCastExpr 0x12b0090e8 <col:11, col:34> 'unsigned long' <IntegralCast>     |   | |   `-CallExpr 0x12b009088 <col:11, col:34> 'int'     |   | |     |-ImplicitCastExpr 0x12b009070 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   | |     | `-DeclRefExpr 0x12b009010 <col:11> 'int ()' Function 0x12b008f58 'COLOR_ALIGN' 'int ()'     |   | |     |-ImplicitCastExpr 0x12b0090b8 <col:23> 'unsigned long' <LValueToRValue>     |   | |     | `-DeclRefExpr 0x12b009030 <col:23> 'unsigned long' lvalue Var 0x12a008ad8 'addr' 'unsigned long'     |   | |     `-ImplicitCastExpr 0x12b0090d0 <col:29> 'unsigned long' <LValueToRValue>     |   | |       `-DeclRefExpr 0x12b009050 <col:29> 'const unsigned long' lvalue ParmVar 0x12a008200 'pgoff' 'const unsigned long'     |   | `-BinaryOperator 0x12b0092d0 <line:35:4, col:26> 'unsigned long' '='     |   |   |-DeclRefExpr 0x12b009120 <col:4> 'unsigned long' lvalue Var 0x12a008ad8 'addr' 'unsigned long'     |   |   `-ImplicitCastExpr 0x12b0092b8 <col:11, col:26> 'unsigned long' <IntegralCast>     |   |     `-CallExpr 0x12b009278 <col:11, col:26> 'int'     |   |       |-ImplicitCastExpr 0x12b009260 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   |       | `-DeclRefExpr 0x12b009220 <col:11> 'int ()' Function 0x12b009168 'PAGE_ALIGN' 'int ()'     |   |       `-ImplicitCastExpr 0x12b0092a0 <col:22> 'unsigned long' <LValueToRValue>     |   |         `-DeclRefExpr 0x12b009240 <col:22> 'unsigned long' lvalue Var 0x12a008ad8 'addr' 'unsigned long'     |   |-BinaryOperator 0x12b009510 <line:37:3, col:26> 'struct vm_area_struct *' contains-errors '='     |   | |-DeclRefExpr 0x12b009320 <col:3> 'struct vm_area_struct *' lvalue Var 0x12a008678 'vma' 'struct vm_area_struct *'     |   | `-ImplicitCastExpr 0x12b0094f8 <col:9, col:26> 'struct vm_area_struct *' contains-errors <IntegralToPointer>     |   |   `-CallExpr 0x12b009498 <col:9, col:26> 'int' contains-errors     |   |     |-ImplicitCastExpr 0x12b009480 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x12b009420 <col:9> 'int ()' Function 0x12b009368 'find_vma' 'int ()'     |   |     |-ImplicitCastExpr 0x12b0094c8 <col:18> 'struct mm_struct *' contains-errors <LValueToRValue>     |   |     | `-DeclRefExpr 0x12b009440 <col:18> 'struct mm_struct *' contains-errors lvalue Var 0x12a008878 'mm' 'struct mm_struct *'     |   |     `-ImplicitCastExpr 0x12b0094e0 <col:22> 'unsigned long' <LValueToRValue>     |   |       `-DeclRefExpr 0x12b009460 <col:22> 'unsigned long' lvalue Var 0x12a008ad8 'addr' 'unsigned long'     |   `-IfStmt 0x12b00a240 <line:38:3, line:40:11>     |     |-BinaryOperator 0x12b0097b8 <line:38:7, line:39:43> 'int' contains-errors '&&'     |     | |-BinaryOperator 0x12b0095f8 <line:38:7, col:26> 'int' contains-errors '>='     |     | | |-BinaryOperator 0x12b0095a0 <col:7, col:19> 'unsigned long' contains-errors '-'     |     | | | |-ImplicitCastExpr 0x12b009570 <col:7> 'unsigned long' contains-errors <LValueToRValue>     |     | | | | `-DeclRefExpr 0x12b009530 <col:7> 'unsigned long' contains-errors lvalue Var 0x12a008a08 'task_size' 'unsigned long'     |     | | | `-ImplicitCastExpr 0x12b009588 <col:19> 'unsigned long' <LValueToRValue>     |     | | |   `-DeclRefExpr 0x12b009550 <col:19> 'const unsigned long' lvalue ParmVar 0x12980e348 'len' 'const unsigned long'     |     | | `-ImplicitCastExpr 0x12b0095e0 <col:26> 'unsigned long' <LValueToRValue>     |     | |   `-DeclRefExpr 0x12b0095c0 <col:26> 'unsigned long' lvalue Var 0x12a008ad8 'addr' 'unsigned long'     |     | `-ParenExpr 0x12b009798 <line:39:7, col:43> 'int' contains-errors     |     |   `-BinaryOperator 0x12b009778 <col:8, col:35> 'int' contains-errors '||'     |     |     |-UnaryOperator 0x12b009650 <col:8, col:9> 'int' prefix '!' cannot overflow     |     |     | `-ImplicitCastExpr 0x12b009638 <col:9> 'struct vm_area_struct *' <LValueToRValue>     |     |     |   `-DeclRefExpr 0x12b009618 <col:9> 'struct vm_area_struct *' lvalue Var 0x12a008678 'vma' 'struct vm_area_struct *'     |     |     `-BinaryOperator 0x12b009758 <col:16, col:35> 'int' contains-errors '<='     |     |       |-BinaryOperator 0x12b0096d8 <col:16, col:23> 'unsigned long' '+'     |     |       | |-ImplicitCastExpr 0x12b0096a8 <col:16> 'unsigned long' <LValueToRValue>     |     |       | | `-DeclRefExpr 0x12b009668 <col:16> 'unsigned long' lvalue Var 0x12a008ad8 'addr' 'unsigned long'     |     |       | `-ImplicitCastExpr 0x12b0096c0 <col:23> 'unsigned long' <LValueToRValue>     |     |       |   `-DeclRefExpr 0x12b009688 <col:23> 'const unsigned long' lvalue ParmVar 0x12980e348 'len' 'const unsigned long'     |     |       `-RecoveryExpr 0x12b009730 <col:30, col:35> '<dependent type>' contains-errors lvalue     |     |         `-DeclRefExpr 0x12b0096f8 <col:30> 'struct vm_area_struct *' lvalue Var 0x12a008678 'vma' 'struct vm_area_struct *'     |     `-ReturnStmt 0x12b00a230 <line:40:4, col:11>     |       `-ImplicitCastExpr 0x12b00a218 <col:11> 'int' <IntegralCast>     |         `-ImplicitCastExpr 0x12b00a200 <col:11> 'unsigned long' <LValueToRValue>     |           `-DeclRefExpr 0x12b0097d8 <col:11> 'unsigned long' lvalue Var 0x12a008ad8 'addr' 'unsigned long'     |-BinaryOperator 0x12b00a3e8 <line:44:2, col:16> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12b00a380 <col:2, col:7> '<dependent type>' contains-errors lvalue .length     | | `-RecoveryExpr 0x12b00a358 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12b00a338 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x12a008d28 'info' 'struct vm_unmapped_area_info'     | `-DeclRefExpr 0x12b00a3c8 <col:16> 'const unsigned long' lvalue ParmVar 0x12980e348 'len' 'const unsigned long'     |-BinaryOperator 0x12b00a588 <line:46:2, col:24> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12b00a4e0 <col:2, col:7> '<dependent type>' contains-errors lvalue .high_limit     | | `-RecoveryExpr 0x12b00a4b8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12b00a498 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x12a008d28 'info' 'struct vm_unmapped_area_info'     | `-RecoveryExpr 0x12b00a560 <col:20, col:24> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12b00a528 <col:20> 'struct mm_struct *' contains-errors lvalue Var 0x12a008878 'mm' 'struct mm_struct *'     |-BinaryOperator 0x12b00a8c8 <line:49:2, col:31> 'unsigned long' contains-errors '='     | |-DeclRefExpr 0x12b00a748 <col:2> 'unsigned long' lvalue Var 0x12a008ad8 'addr' 'unsigned long'     | `-CallExpr 0x12b00a8a0 <col:9, col:31> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12b00a848 <col:9> 'int ()' Function 0x12b00a790 'vm_unmapped_area' 'int ()'     |   `-UnaryOperator 0x12b00a888 <col:26, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x12b00a868 <col:27> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12b00ad18 <line:52:2, line:58:2>     | |-RecoveryExpr 0x12b00a908 <line:52:6, col:14> '_Bool' contains-errors     | `-CompoundStmt 0x12b00acf8 <col:25, line:58:2>     |   |-BinaryOperator 0x12b00aaf8 <line:54:3, col:16> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x12b00aa90 <col:3, col:8> '<dependent type>' contains-errors lvalue .flags     |   | | `-RecoveryExpr 0x12b00aa68 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x12b00aa48 <col:3> 'struct vm_unmapped_area_info' lvalue Var 0x12a008d28 'info' 'struct vm_unmapped_area_info'     |   | `-IntegerLiteral 0x12b00aad8 <col:16> 'int' 0     |   `-BinaryOperator 0x12b00acd8 <line:57:3, col:32> 'unsigned long' contains-errors '='     |     |-DeclRefExpr 0x12b00ac38 <col:3> 'unsigned long' lvalue Var 0x12a008ad8 'addr' 'unsigned long'     |     `-CallExpr 0x12b00acb0 <col:10, col:32> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x12b00ac58 <col:10> 'int ()' Function 0x12b00a790 'vm_unmapped_area' 'int ()'     |       `-UnaryOperator 0x12b00ac98 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |         `-RecoveryExpr 0x12b00ac78 <col:28> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12b00ad88 <line:60:2, col:9>       `-ImplicitCastExpr 0x12b00ad70 <col:9> 'int' <IntegralCast>         `-ImplicitCastExpr 0x12b00ad58 <col:9> 'unsigned long' <LValueToRValue>           `-DeclRefExpr 0x12b00ad38 <col:9> 'unsigned long' lvalue Var 0x12a008ad8 'addr' 'unsigned long' ","20120":"`-FunctionDecl 0x12f124768  line:1:9 invalid krok_box_new 'int *()'   `-CompoundStmt 0x12f124a78 <line:2:1, line:5:1>     `-CallExpr 0x12f124a30 <line:3:2, col:62> '<dependent type>' contains-errors       |-DeclRefExpr 0x12f124970 <col:2> 'int ()' Function 0x12f1248b8 'ISOM_DECL_BOX_ALLOC' 'int ()'       |-RecoveryExpr 0x12f1249f0 <col:22> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x12f124a10 <col:41> '<dependent type>' contains-errors lvalue ","19544":"`-FunctionDecl 0x12d80e358  line:1:12 xfrm6_tunnel_rcv 'int (struct sk_buff *)' static   |-ParmVarDecl 0x12d80e248 <col:29, col:45> col:45 used skb 'struct sk_buff *'   `-CompoundStmt 0x12d122da0 <line:2:1, line:8:1>     |-DeclStmt 0x12d122a48 <line:3:2, col:37>     | |-RecordDecl 0x12d122650 <col:2, col:9> col:9 struct ipv6hdr     | `-VarDecl 0x12d1227b8 <col:2, col:36> col:18 used iph 'struct ipv6hdr *' cinit     |   `-ImplicitCastExpr 0x12d122a18 <col:24, col:36> 'struct ipv6hdr *' <IntegralToPointer>     |     `-CallExpr 0x12d1229d8 <col:24, col:36> 'int'     |       |-ImplicitCastExpr 0x12d1229c0 <col:24> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x12d122950 <col:24> 'int ()' Function 0x12d122898 'ipv6_hdr' 'int ()'     |       `-ImplicitCastExpr 0x12d122a00 <col:33> 'struct sk_buff *' <LValueToRValue>     |         `-DeclRefExpr 0x12d122970 <col:33> 'struct sk_buff *' lvalue ParmVar 0x12d80e248 'skb' 'struct sk_buff *'     `-ReturnStmt 0x12d122d90 <line:7:2, col:31>       `-CallExpr 0x12d122d60 <col:9, col:31> '<dependent type>' contains-errors         |-DeclRefExpr 0x12d122cb8 <col:9> 'int ()' Function 0x12d122c00 'xfrm6_rcv_spi' 'int ()'         |-DeclRefExpr 0x12d122cd8 <col:23> 'struct sk_buff *' lvalue ParmVar 0x12d80e248 'skb' 'struct sk_buff *'         `-RecoveryExpr 0x12d122d40 <col:28> '<dependent type>' contains-errors lvalue ","19477":"`-FunctionDecl 0x14a02b368  col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x14a02b468 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x14a02b4d0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x14a02b538 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14a02b410 <<invalid sloc>> Implicit 882 ","19645":"`-FunctionDecl 0x144928268  line:1:12 IntensityCompare 'int (const void *, const void *)' static   |-ParmVarDecl 0x144928108 <col:29, col:41> col:41 x 'const void *'   |-ParmVarDecl 0x144928188 <col:43, col:55> col:55 y 'const void *'   `-CompoundStmt 0x1449286f8 <line:2:1, line:15:1>     |-DeclStmt 0x1449283e8 <line:3:3, line:4:14>     | `-VarDecl 0x144928380 <line:3:3, line:4:5> col:5 used intensity 'double'     `-ReturnStmt 0x1449286e8 <line:14:3, col:25>       `-ParenExpr 0x1449286c8 <col:9, col:25> 'int'         `-CStyleCastExpr 0x1449286a0 <col:10, col:16> 'int' <FloatingToIntegral>           `-ImplicitCastExpr 0x144928688 <col:16> 'double' <LValueToRValue> part_of_explicit_cast             `-DeclRefExpr 0x144928650 <col:16> 'double' lvalue Var 0x144928380 'intensity' 'double' ","19468":"`-FunctionDecl 0x1478499d0  col:6 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x147849ad0 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x147849b38 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x147849a78 <<invalid sloc>> Implicit 887 ","19914":"`-FunctionDecl 0x138140d38  line:1:12 rtnl_dellink 'int (struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *)' static   |-ParmVarDecl 0x138128648 <col:25, col:41> col:41 used skb 'struct sk_buff *'   |-ParmVarDecl 0x138140a28 <col:46, col:63> col:63 used nlh 'struct nlmsghdr *'   |-ParmVarDecl 0x138140bf8 <line:2:4, col:28> col:28 used extack 'struct netlink_ext_ack *'   `-CompoundStmt 0x130009360 <line:3:1, line:35:1>     |-DeclStmt 0x138141200 <line:4:2, col:37>     | |-RecordDecl 0x138140e40 <col:2, col:9> col:9 struct net     | `-VarDecl 0x138140fa8 <col:2, col:36> col:14 used net 'struct net *' cinit     |   `-CallExpr 0x1381411c0 <col:20, col:36> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x138141140 <col:20> 'int ()' Function 0x138141088 'sock_net' 'int ()'     |     `-RecoveryExpr 0x138141198 <col:29, col:34> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x138141160 <col:29> 'struct sk_buff *' lvalue ParmVar 0x138128648 'skb' 'struct sk_buff *'     |-DeclStmt 0x138141408 <line:5:2, col:24>     | |-RecordDecl 0x138141218 <col:2, col:9> col:9 struct net_device     | `-VarDecl 0x138141388 <col:2, col:21> col:21 used dev 'struct net_device *'     |-DeclStmt 0x138141608 <line:6:2, col:23>     | |-RecordDecl 0x138141420 <col:2, col:9> col:9 struct ifinfomsg     | `-VarDecl 0x138141588 <col:2, col:20> col:20 used ifm 'struct ifinfomsg *'     |-DeclStmt 0x1381416b0 <line:7:2, col:23>     | `-VarDecl 0x138141648 <col:2, col:7> col:7 invalid ifname 'char'     |-DeclStmt 0x138141918 <line:8:2, col:31>     | |-RecordDecl 0x1381416c8 <col:2, col:9> col:9 struct nlattr     | `-VarDecl 0x138141898 <col:2, col:17> col:17 invalid tb 'struct nlattr *'     |-DeclStmt 0x1381419b0 <line:9:2, col:9>     | `-VarDecl 0x138141948 <col:2, col:6> col:6 used err 'int'     |-IfStmt 0x138146cc0 <line:12:2, line:13:10>     | |-BinaryOperator 0x138146c58 <line:12:6, col:12> 'int' '<'     | | |-ImplicitCastExpr 0x138146c40 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x138146c00 <col:6> 'int' lvalue Var 0x138141948 'err' 'int'     | | `-IntegerLiteral 0x138146c20 <col:12> 'int' 0     | `-ReturnStmt 0x138146cb0 <line:13:3, col:10>     |   `-ImplicitCastExpr 0x138146c98 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x138146c78 <col:10> 'int' lvalue Var 0x138141948 'err' 'int'     |-IfStmt 0x138146de0 <line:15:2, line:16:11>     | |-RecoveryExpr 0x138146d18 <line:15:6, col:24> '_Bool' contains-errors     | `-ReturnStmt 0x138146dd0 <line:16:3, col:11>     |   `-UnaryOperator 0x138146db8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x138146da0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x138146d80 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1381471b0 <line:21:2, col:22> 'struct ifinfomsg *' '='     | |-DeclRefExpr 0x138146fc8 <col:2> 'struct ifinfomsg *' lvalue Var 0x138141588 'ifm' 'struct ifinfomsg *'     | `-ImplicitCastExpr 0x138147198 <col:8, col:22> 'struct ifinfomsg *' <IntegralToPointer>     |   `-CallExpr 0x138147158 <col:8, col:22> 'int'     |     |-ImplicitCastExpr 0x138147140 <col:8> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1381470c8 <col:8> 'int ()' Function 0x138147010 'nlmsg_data' 'int ()'     |     `-ImplicitCastExpr 0x138147180 <col:19> 'struct nlmsghdr *' <LValueToRValue>     |       `-DeclRefExpr 0x1381470e8 <col:19> 'struct nlmsghdr *' lvalue ParmVar 0x138140a28 'nlh' 'struct nlmsghdr *'     |-IfStmt 0x138147920 <line:22:2, line:26:7> has_else     | |-BinaryOperator 0x138147250 <line:22:6, col:23> 'int' contains-errors '>'     | | |-RecoveryExpr 0x138147208 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x1381471d0 <col:6> 'struct ifinfomsg *' lvalue Var 0x138141588 'ifm' 'struct ifinfomsg *'     | | `-IntegerLiteral 0x138147230 <col:23> 'int' 0     | |-BinaryOperator 0x138147440 <line:23:3, col:47> 'struct net_device *' contains-errors '='     | | |-DeclRefExpr 0x138147270 <col:3> 'struct net_device *' lvalue Var 0x138141388 'dev' 'struct net_device *'     | | `-CallExpr 0x138147410 <col:9, col:47> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x138147370 <col:9> 'int ()' Function 0x1381472b8 '__dev_get_by_index' 'int ()'     | |   |-DeclRefExpr 0x138147390 <col:28> 'struct net *' contains-errors lvalue Var 0x138140fa8 'net' 'struct net *'     | |   `-RecoveryExpr 0x1381473e8 <col:33, col:38> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x1381473b0 <col:33> 'struct ifinfomsg *' lvalue Var 0x138141588 'ifm' 'struct ifinfomsg *'     | `-IfStmt 0x1381478f0 <line:24:7, line:26:7> has_else     |   |-RecoveryExpr 0x138147498 <line:24:11, col:25> '_Bool' contains-errors     |   |-BinaryOperator 0x138147648 <line:25:3, col:38> 'struct net_device *' contains-errors '='     |   | |-DeclRefExpr 0x1381474b8 <col:3> 'struct net_device *' lvalue Var 0x138141388 'dev' 'struct net_device *'     |   | `-CallExpr 0x138147618 <col:9, col:38> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x1381475b8 <col:9> 'int ()' Function 0x138147500 '__dev_get_by_name' 'int ()'     |   |   |-DeclRefExpr 0x1381475d8 <col:27> 'struct net *' contains-errors lvalue Var 0x138140fa8 'net' 'struct net *'     |   |   `-RecoveryExpr 0x1381475f8 <col:32> '<dependent type>' contains-errors lvalue     |   `-NullStmt 0x1381478e8 <line:26:7>     `-ReturnStmt 0x130009350 <line:34:2, col:29>       `-CallExpr 0x130009310 <col:9, col:29> 'int'         |-ImplicitCastExpr 0x1300092f8 <col:9> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x1300092b8 <col:9> 'int ()' Function 0x130009200 'rtnl_delete_link' 'int ()'         `-ImplicitCastExpr 0x130009338 <col:26> 'struct net_device *' <LValueToRValue>           `-DeclRefExpr 0x1300092d8 <col:26> 'struct net_device *' lvalue Var 0x138141388 'dev' 'struct net_device *' ","19539":"`-FunctionDecl 0x159128750  line:1:13 edge_close 'void (struct usb_serial_port *)' static   |-ParmVarDecl 0x159128648 <col:24, col:48> col:48 used port 'struct usb_serial_port *'   `-CompoundStmt 0x1591447d8 <line:2:1, line:38:1>     |-DeclStmt 0x159140c38 <line:3:2, col:37>     | |-RecordDecl 0x159140a48 <col:2, col:9> col:9 struct edgeport_serial     | `-VarDecl 0x159140bb8 <col:2, col:26> col:26 used edge_serial 'struct edgeport_serial *'     |-DeclStmt 0x159140e38 <line:4:2, col:33>     | |-RecordDecl 0x159140c50 <col:2, col:9> col:9 struct edgeport_port     | `-VarDecl 0x159140db8 <col:2, col:24> col:24 used edge_port 'struct edgeport_port *'     |-DeclStmt 0x159141098 <line:5:2, col:42>     | |-RecordDecl 0x159140e50 <col:2, col:9> col:9 struct usb_serial     | `-VarDecl 0x159140fb8 <col:2, col:36> col:21 used serial 'struct usb_serial *' cinit     |   `-RecoveryExpr 0x159141058 <col:30, col:36> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x159141020 <col:30> 'struct usb_serial_port *' lvalue ParmVar 0x159128648 'port' 'struct usb_serial_port *'     |-DeclStmt 0x159141130 <line:6:2, col:21>     | `-VarDecl 0x1591410c8 <col:2, col:16> col:16 used flags 'unsigned long'     |-DeclStmt 0x1591411c8 <line:7:2, col:17>     | `-VarDecl 0x159141160 <col:2, col:6> col:6 used port_number 'int'     |-BinaryOperator 0x1591413d8 <line:9:2, col:48> 'struct edgeport_serial *' contains-errors '='     | |-DeclRefExpr 0x1591411e0 <col:2> 'struct edgeport_serial *' lvalue Var 0x159140bb8 'edge_serial' 'struct edgeport_serial *'     | `-CallExpr 0x1591413b0 <col:16, col:48> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x159141330 <col:16> 'int ()' Function 0x159141278 'usb_get_serial_data' 'int ()'     |   `-RecoveryExpr 0x159141388 <col:36, col:42> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x159141350 <col:36> 'struct usb_serial_port *' lvalue ParmVar 0x159128648 'port' 'struct usb_serial_port *'     |-BinaryOperator 0x1591415e0 <line:10:2, col:43> 'struct edgeport_port *' '='     | |-DeclRefExpr 0x1591413f8 <col:2> 'struct edgeport_port *' lvalue Var 0x159140db8 'edge_port' 'struct edgeport_port *'     | `-ImplicitCastExpr 0x1591415c8 <col:14, col:43> 'struct edgeport_port *' <IntegralToPointer>     |   `-CallExpr 0x159141588 <col:14, col:43> 'int'     |     |-ImplicitCastExpr 0x159141570 <col:14> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1591414f8 <col:14> 'int ()' Function 0x159141440 'usb_get_serial_port_data' 'int ()'     |     `-ImplicitCastExpr 0x1591415b0 <col:39> 'struct usb_serial_port *' <LValueToRValue>     |       `-DeclRefExpr 0x159141518 <col:39> 'struct usb_serial_port *' lvalue ParmVar 0x159128648 'port' 'struct usb_serial_port *'     |-IfStmt 0x159141780 <line:11:2, line:12:3>     | |-BinaryOperator 0x159141750 <line:11:6, col:42> 'int' contains-errors '||'     | | |-BinaryOperator 0x1591416f0 <col:6, col:21> 'int' contains-errors '=='     | | | |-DeclRefExpr 0x159141600 <col:6> 'struct edgeport_serial *' lvalue Var 0x159140bb8 'edge_serial' 'struct edgeport_serial *'     | | | `-RecoveryExpr 0x1591416d0 <col:21> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x159141730 <col:29, col:42> 'int' contains-errors '=='     | |   |-DeclRefExpr 0x159141658 <col:29> 'struct edgeport_port *' lvalue Var 0x159140db8 'edge_port' 'struct edgeport_port *'     | |   `-RecoveryExpr 0x159141710 <col:42> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x159141770 <line:12:3>     |-BinaryOperator 0x159141820 <line:15:2, col:29> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1591417d8 <col:2, col:13> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1591417a0 <col:2> 'struct edgeport_port *' lvalue Var 0x159140db8 'edge_port' 'struct edgeport_port *'     | `-IntegerLiteral 0x159141800 <col:29> 'int' 1     |-CallExpr 0x1591419a0 <line:17:2, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x159141920 <col:2> 'int ()' Function 0x159141868 'usb_kill_urb' 'int ()'     | `-RecoveryExpr 0x159141978 <col:15, col:21> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x159141940 <col:15> 'struct usb_serial_port *' lvalue ParmVar 0x159128648 'port' 'struct usb_serial_port *'     |-CallExpr 0x159143460 <line:18:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1591419c8 <col:2> 'int ()' Function 0x159141868 'usb_kill_urb' 'int ()'     | `-RecoveryExpr 0x159143438 <col:15, col:21> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x159143400 <col:15> 'struct usb_serial_port *' lvalue ParmVar 0x159128648 'port' 'struct usb_serial_port *'     |-BinaryOperator 0x159143508 <line:19:2, col:35> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1591434c0 <col:2, col:13> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x159143488 <col:2> 'struct edgeport_port *' lvalue Var 0x159140db8 'edge_port' 'struct edgeport_port *'     | `-IntegerLiteral 0x1591434e8 <col:35> 'int' 0     |-CallExpr 0x1591436c0 <line:20:2, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x159143608 <col:2> 'int ()' Function 0x159143550 'spin_lock_irqsave' 'int ()'     | |-UnaryOperator 0x159143688 <col:20, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x159143660 <col:21, col:32> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x159143628 <col:21> 'struct edgeport_port *' lvalue Var 0x159140db8 'edge_port' 'struct edgeport_port *'     | `-DeclRefExpr 0x1591436a0 <col:41> 'unsigned long' lvalue Var 0x1591410c8 'flags' 'unsigned long'     |-CallExpr 0x159143868 <line:21:2, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1591437d0 <col:2> 'int ()' Function 0x159143718 'kfifo_reset_out' 'int ()'     | `-UnaryOperator 0x159143850 <col:18, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x159143828 <col:19, col:25> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1591437f0 <col:19> 'struct usb_serial_port *' lvalue ParmVar 0x159128648 'port' 'struct usb_serial_port *'     |-CallExpr 0x159143a28 <line:22:2, col:51> '<dependent type>' contains-errors     | |-DeclRefExpr 0x159143970 <col:2> 'int ()' Function 0x1591438b8 'spin_unlock_irqrestore' 'int ()'     | |-UnaryOperator 0x1591439f0 <col:25, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x1591439c8 <col:26, col:37> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x159143990 <col:26> 'struct edgeport_port *' lvalue Var 0x159140db8 'edge_port' 'struct edgeport_port *'     | `-DeclRefExpr 0x159143a08 <col:46> 'unsigned long' lvalue Var 0x1591410c8 'flags' 'unsigned long'     |-CallExpr 0x159143cf0 <line:24:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x159143b38 <col:2> 'int ()' Function 0x159143a80 'dev_dbg' 'int ()'     | |-UnaryOperator 0x159143bb8 <col:10, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x159143b90 <col:11, col:17> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x159143b58 <col:11> 'struct usb_serial_port *' lvalue ParmVar 0x159128648 'port' 'struct usb_serial_port *'     | |-StringLiteral 0x159143c10 <col:22> 'char[4]' lvalue \"STR\"     | `-PredefinedExpr 0x159143cd8 <col:29> 'const char[11]' lvalue __func__     |   `-StringLiteral 0x159143cb0 <col:29> 'const char[11]' lvalue \"edge_close\"     |-BinaryOperator 0x159143da8 <line:25:2, col:22> 'int' contains-errors '='     | |-DeclRefExpr 0x159143d28 <col:2> 'int' lvalue Var 0x159141160 'port_number' 'int'     | `-RecoveryExpr 0x159143d80 <col:16, col:22> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x159143d48 <col:16> 'struct usb_serial_port *' lvalue ParmVar 0x159128648 'port' 'struct usb_serial_port *'     |-CallExpr 0x159144100 <line:29:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x159144068 <col:2> 'int ()' Function 0x159143fb0 'mutex_lock' 'int ()'     | `-UnaryOperator 0x1591440e8 <col:13, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1591440c0 <col:14, col:27> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x159144088 <col:14> 'struct edgeport_serial *' lvalue Var 0x159140bb8 'edge_serial' 'struct edgeport_serial *'     |-UnaryOperator 0x1591441d0 <line:30:2, col:28> '<dependent type>' contains-errors prefix '--' cannot overflow     | `-CXXDependentScopeMemberExpr 0x159144188 <col:4, col:28> '<dependent type>' contains-errors lvalue ->num_ports_open     |   `-RecoveryExpr 0x159144160 <col:4, col:15> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x159144128 <col:4> 'struct edgeport_port *' lvalue Var 0x159140db8 'edge_port' 'struct edgeport_port *'     |-IfStmt 0x159144578 <line:31:2, line:35:2>     | |-BinaryOperator 0x1591442b0 <line:31:6, col:48> 'int' contains-errors '<='     | | |-CXXDependentScopeMemberExpr 0x159144248 <col:6, col:30> '<dependent type>' contains-errors lvalue ->num_ports_open     | | | `-RecoveryExpr 0x159144220 <col:6, col:17> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x1591441e8 <col:6> 'struct edgeport_port *' lvalue Var 0x159140db8 'edge_port' 'struct edgeport_port *'     | | `-IntegerLiteral 0x159144290 <col:48> 'int' 0     | `-CompoundStmt 0x159144558 <col:51, line:35:2>     |   |-CallExpr 0x159144448 <line:33:3, col:55> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1591442d0 <col:3> 'int ()' Function 0x159141868 'usb_kill_urb' 'int ()'     |   | `-CXXDependentScopeMemberExpr 0x159144400 <col:16, col:39> '<dependent type>' contains-errors lvalue ->interrupt_in_urb     |   |   `-ArraySubscriptExpr 0x1591443d0 <col:16, col:36> '<dependent type>' contains-errors lvalue     |   |     |-ImplicitCastExpr 0x1591443b8 <col:16, col:30> '<dependent type>' contains-errors <LValueToRValue>     |   |     | `-CXXDependentScopeMemberExpr 0x159144350 <col:16, col:30> '<dependent type>' contains-errors lvalue ->port     |   |     |   `-RecoveryExpr 0x159144328 <col:16, col:22> '<dependent type>' contains-errors lvalue     |   |     |     `-DeclRefExpr 0x1591442f0 <col:16> 'struct usb_serial_port *' lvalue ParmVar 0x159128648 'port' 'struct usb_serial_port *'     |   |     `-IntegerLiteral 0x159144398 <col:35> 'int' 0     |   `-BinaryOperator 0x159144538 <line:34:3, col:44> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x1591444d0 <col:3, col:27> '<dependent type>' contains-errors lvalue ->num_ports_open     |     | `-RecoveryExpr 0x1591444a8 <col:3, col:14> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x159144470 <col:3> 'struct edgeport_port *' lvalue Var 0x159140db8 'edge_port' 'struct edgeport_port *'     |     `-IntegerLiteral 0x159144518 <col:44> 'int' 0     |-CallExpr 0x159144710 <line:36:2, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x159144678 <col:2> 'int ()' Function 0x1591445c0 'mutex_unlock' 'int ()'     | `-UnaryOperator 0x1591446f8 <col:15, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1591446d0 <col:16, col:29> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x159144698 <col:16> 'struct edgeport_serial *' lvalue Var 0x159140bb8 'edge_serial' 'struct edgeport_serial *'     `-BinaryOperator 0x1591447b8 <line:37:2, col:29> '<dependent type>' contains-errors '='       |-RecoveryExpr 0x159144770 <col:2, col:13> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x159144738 <col:2> 'struct edgeport_port *' lvalue Var 0x159140db8 'edge_port' 'struct edgeport_port *'       `-IntegerLiteral 0x159144798 <col:29> 'int' 0 ","19067":"`-FunctionDecl 0x12f9283a8  line:1:12 invalid expandrow 'int (int *, int *, int, int)' static   |-ParmVarDecl 0x12f928128 <col:22, col:29> col:29 referenced invalid dest 'int *'   |-ParmVarDecl 0x12f9281a8 <col:35, col:42> col:42 invalid src 'int *'   |-ParmVarDecl 0x12f928228 <col:47, col:51> col:51 used n 'int'   |-ParmVarDecl 0x12f9282a8 <col:54, col:58> col:58 used z 'int'   `-CompoundStmt 0x13800ad40 <line:2:1, line:30:1>     |-ForStmt 0x13800acd8 <line:5:5, line:28:5>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-BinaryOperator 0x12f9284c8 <line:5:11, col:15> 'int' '>'     | | |-ImplicitCastExpr 0x12f9284b0 <col:11> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x12f928470 <col:11> 'int' lvalue ParmVar 0x12f928228 'n' 'int'     | | `-IntegerLiteral 0x12f928490 <col:15> 'int' 0     | |-UnaryOperator 0x12f928508 <col:18, col:19> 'int' postfix '--'     | | `-DeclRefExpr 0x12f9284e8 <col:18> 'int' lvalue ParmVar 0x12f928228 'n' 'int'     | `-CompoundStmt 0x13800acb0 <line:6:5, line:28:5>     |   |-IfStmt 0x12f928778 <line:8:9, line:9:20>     |   | |-BinaryOperator 0x12f928710 <line:8:13, col:32> 'int' contains-errors '&&'     |   | | |-BinaryOperator 0x12f9286b0 <col:13, col:18> 'int' '=='     |   | | | |-ImplicitCastExpr 0x12f928698 <col:13> 'int' <LValueToRValue>     |   | | | | `-DeclRefExpr 0x12f928570 <col:13> 'int' lvalue ParmVar 0x12f928228 'n' 'int'     |   | | | `-IntegerLiteral 0x12f928590 <col:18> 'int' 1     |   | | `-BinaryOperator 0x12f9286f0 <col:23, col:32> 'int' contains-errors '!='     |   | |   |-RecoveryExpr 0x12f9286d0 <col:23> '<dependent type>' contains-errors lvalue     |   | |   `-IntegerLiteral 0x12f928600 <col:32> 'int' 0     |   | `-ReturnStmt 0x12f928768 <line:9:13, col:20>     |   |   `-ImplicitCastExpr 0x12f928750 <col:20> 'int' <LValueToRValue>     |   |     `-DeclRefExpr 0x12f928730 <col:20> 'int' lvalue ParmVar 0x12f928228 'n' 'int'     |   |-IfStmt 0x13800a6c8 <line:11:9, line:12:20>     |   | |-UnaryOperator 0x13800a668 <line:11:13, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | | `-ImplicitCastExpr 0x13800a650 <col:14> '<dependent type>' contains-errors <LValueToRValue>     |   | |   `-RecoveryExpr 0x13800a630 <col:14> '<dependent type>' contains-errors lvalue     |   | `-ReturnStmt 0x13800a6b8 <line:12:13, col:20>     |   |   `-RecoveryExpr 0x13800a698 <col:20> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x13800ac80 <line:13:9, line:26:9> has_else     |     |-BinaryOperator 0x13800a778 <line:13:13, col:21> '<dependent type>' contains-errors '&'     |     | |-RecoveryExpr 0x13800a738 <col:13> '<dependent type>' contains-errors lvalue     |     | `-RecoveryExpr 0x13800a758 <col:21> '<dependent type>' contains-errors lvalue     |     |-CompoundStmt 0x13800a998 <col:36, line:19:9>     |     | `-WhileStmt 0x13800a978 <line:14:13, line:17:13>     |     |   |-UnaryOperator 0x13800a7e8 <line:14:19, col:24> '<dependent type>' contains-errors postfix '--' cannot overflow     |     |   | `-RecoveryExpr 0x13800a7c8 <col:19> '<dependent type>' contains-errors lvalue     |     |   `-CompoundStmt 0x13800a958 <col:28, line:17:13>     |     |     |-BinaryOperator 0x13800a8a0 <line:15:17, col:29> '<dependent type>' contains-errors '='     |     |     | |-UnaryOperator 0x13800a838 <col:17, col:18> '<dependent type>' contains-errors prefix '*' cannot overflow     |     |     | | `-ImplicitCastExpr 0x13800a820 <col:18> '<dependent type>' contains-errors <LValueToRValue>     |     |     | |   `-RecoveryExpr 0x13800a800 <col:18> '<dependent type>' contains-errors lvalue     |     |     | `-UnaryOperator 0x13800a888 <col:25, col:29> '<dependent type>' contains-errors prefix '*' cannot overflow     |     |     |   `-UnaryOperator 0x13800a870 <col:26, col:29> '<dependent type>' contains-errors postfix '++' cannot overflow     |     |     |     `-RecoveryExpr 0x13800a850 <col:26> '<dependent type>' contains-errors lvalue     |     |     `-CompoundAssignOperator 0x13800a928 <line:16:17, col:25> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |     |       |-RecoveryExpr 0x13800a8e0 <col:17> '<dependent type>' contains-errors lvalue     |     |       | `-DeclRefExpr 0x13800a8c0 <col:17> 'int *' lvalue ParmVar 0x12f928128 'dest' 'int *'     |     |       `-DeclRefExpr 0x13800a908 <col:25> 'int' lvalue ParmVar 0x12f9282a8 'z' 'int'     |     `-CompoundStmt 0x13800ac68 <line:20:14, line:26:9>     |       `-WhileStmt 0x13800ac48 <line:22:13, line:25:13>     |         |-UnaryOperator 0x13800aa50 <line:22:20, col:25> '<dependent type>' contains-errors postfix '--' cannot overflow     |         | `-RecoveryExpr 0x13800aa30 <col:20> '<dependent type>' contains-errors lvalue     |         `-CompoundStmt 0x13800ac28 <col:29, line:25:13>     |           |-BinaryOperator 0x13800ab70 <line:23:17, col:25> '<dependent type>' contains-errors '='     |           | |-UnaryOperator 0x13800ab38 <col:17, col:18> '<dependent type>' contains-errors prefix '*' cannot overflow     |           | | `-ImplicitCastExpr 0x13800ab20 <col:18> '<dependent type>' contains-errors <LValueToRValue>     |           | |   `-RecoveryExpr 0x13800aa68 <col:18> '<dependent type>' contains-errors lvalue     |           | `-RecoveryExpr 0x13800ab50 <col:25> '<dependent type>' contains-errors lvalue     |           `-CompoundAssignOperator 0x13800abf8 <line:24:17, col:25> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |             |-RecoveryExpr 0x13800abb0 <col:17> '<dependent type>' contains-errors lvalue     |             | `-DeclRefExpr 0x13800ab90 <col:17> 'int *' lvalue ParmVar 0x12f928128 'dest' 'int *'     |             `-DeclRefExpr 0x13800abd8 <col:25> 'int' lvalue ParmVar 0x12f9282a8 'z' 'int'     `-ReturnStmt 0x13800ad30 <line:29:5, col:12>       `-IntegerLiteral 0x13800ad10 <col:12> 'int' 0 ","19321":"`-FunctionDecl 0x11f141838  line:1:19 invalid __sctp_state 'int (const struct sctp_association *, int)' static inline   |-ParmVarDecl 0x11f128648 <col:32, col:63> col:63 used asoc 'const struct sctp_association *'   |-ParmVarDecl 0x11f1286e0 <line:2:11, col:24> col:24 invalid state 'int'   `-CompoundStmt 0x11f1419a0 <line:3:1, line:5:1>     `-ReturnStmt 0x11f141990 <line:4:2, col:24>       `-BinaryOperator 0x11f141970 <col:9, col:24> 'int' contains-errors '=='         |-RecoveryExpr 0x11f141928 <col:9, col:15> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x11f1418f0 <col:9> 'const struct sctp_association *' lvalue ParmVar 0x11f128648 'asoc' 'const struct sctp_association *'         `-RecoveryExpr 0x11f141950 <col:24> '<dependent type>' contains-errors lvalue ","20108":"`-FunctionDecl 0x13a13f008  line:1:5 invalid ext4_group_desc_csum_verify 'int (struct super_block *, int, struct ext4_group_desc *)'   |-ParmVarDecl 0x13a125c48 <col:33, col:53> col:53 used sb 'struct super_block *'   |-ParmVarDecl 0x13a125ce0 <col:57, col:63> col:63 invalid block_group 'int'   |-ParmVarDecl 0x13a13eec8 <line:2:5, col:29> col:29 used gdp 'struct ext4_group_desc *'   `-CompoundStmt 0x13a13f5c0 <line:3:1, line:9:1>     |-IfStmt 0x13a13f570 <line:4:2, line:6:10>     | |-BinaryOperator 0x13a13f520 <line:4:6, line:5:69> 'int' contains-errors '&&'     | | |-CallExpr 0x13a13f2a8 <line:4:6, col:33> 'int'     | | | |-ImplicitCastExpr 0x13a13f290 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x13a13f220 <col:6> 'int ()' Function 0x13a13f168 'ext4_has_group_desc_csum' 'int ()'     | | | `-ImplicitCastExpr 0x13a13f2d0 <col:31> 'struct super_block *' <LValueToRValue>     | | |   `-DeclRefExpr 0x13a13f240 <col:31> 'struct super_block *' lvalue ParmVar 0x13a125c48 'sb' 'struct super_block *'     | | `-ParenExpr 0x13a13f500 <line:5:6, col:69> 'int' contains-errors     | |   `-BinaryOperator 0x13a13f4e0 <col:7, col:68> 'int' contains-errors '!='     | |     |-RecoveryExpr 0x13a13f320 <col:7, col:12> '<dependent type>' contains-errors lvalue     | |     | `-DeclRefExpr 0x13a13f2e8 <col:7> 'struct ext4_group_desc *' lvalue ParmVar 0x13a13eec8 'gdp' 'struct ext4_group_desc *'     | |     `-CallExpr 0x13a13f4a8 <col:27, col:68> '<dependent type>' contains-errors     | |       |-DeclRefExpr 0x13a13f428 <col:27> 'int ()' Function 0x13a13f370 'ext4_group_desc_csum' 'int ()'     | |       |-DeclRefExpr 0x13a13f448 <col:48> 'struct super_block *' lvalue ParmVar 0x13a125c48 'sb' 'struct super_block *'     | |       |-RecoveryExpr 0x13a13f468 <col:52> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x13a13f488 <col:65> 'struct ext4_group_desc *' lvalue ParmVar 0x13a13eec8 'gdp' 'struct ext4_group_desc *'     | `-ReturnStmt 0x13a13f560 <line:6:3, col:10>     |   `-IntegerLiteral 0x13a13f540 <col:10> 'int' 0     `-ReturnStmt 0x13a13f5b0 <line:8:2, col:9>       `-IntegerLiteral 0x13a13f590 <col:9> 'int' 1 ","20177":"`-FunctionDecl 0x145128758  line:1:19 ext4_should_writeback_data 'int (struct inode *)' static inline   |-ParmVarDecl 0x145128648 <col:46, col:60> col:60 used inode 'struct inode *'   `-CompoundStmt 0x1451457e0 <line:2:1, line:12:1>     |-IfStmt 0x145144e70 <line:3:2, line:4:10>     | |-UnaryOperator 0x145144e28 <line:3:6, col:28> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x145144e00 <col:7, col:28> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x145144d80 <col:7> 'int ()' Function 0x145144cc8 'S_ISREG' 'int ()'     | |   `-RecoveryExpr 0x145144dd8 <col:15, col:22> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x145144da0 <col:15> 'struct inode *' lvalue ParmVar 0x145128648 'inode' 'struct inode *'     | `-ReturnStmt 0x145144e60 <line:4:3, col:10>     |   `-IntegerLiteral 0x145144e40 <col:10> 'int' 0     |-IfStmt 0x145145190 <line:5:2, line:6:10>     | |-BinaryOperator 0x145145140 <line:5:6, col:29> 'int' contains-errors '=='     | | |-CallExpr 0x1451450e0 <col:6, col:24> 'int'     | | | |-ImplicitCastExpr 0x1451450c8 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x145144f70 <col:6> 'int ()' Function 0x145144eb8 'EXT4_JOURNAL' 'int ()'     | | | `-ImplicitCastExpr 0x145145108 <col:19> 'struct inode *' <LValueToRValue>     | | |   `-DeclRefExpr 0x145144f90 <col:19> 'struct inode *' lvalue ParmVar 0x145128648 'inode' 'struct inode *'     | | `-RecoveryExpr 0x145145120 <col:29> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x145145180 <line:6:3, col:10>     |   `-IntegerLiteral 0x145145160 <col:10> 'int' 1     |-IfStmt 0x1451454d0 <line:7:2, line:8:10>     | |-BinaryOperator 0x145145480 <line:7:6, col:31> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x145145438 <col:6, col:21> '<dependent type>' contains-errors lvalue     | | | `-CallExpr 0x1451453f8 <col:6, col:18> 'int'     | | |   |-ImplicitCastExpr 0x1451453e0 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | |   | `-DeclRefExpr 0x145145290 <col:6> 'int ()' Function 0x1451451d8 'EXT4_I' 'int ()'     | | |   `-ImplicitCastExpr 0x145145420 <col:13> 'struct inode *' <LValueToRValue>     | | |     `-DeclRefExpr 0x1451452b0 <col:13> 'struct inode *' lvalue ParmVar 0x145128648 'inode' 'struct inode *'     | | `-RecoveryExpr 0x145145460 <col:31> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1451454c0 <line:8:3, col:10>     |   `-IntegerLiteral 0x1451454a0 <col:10> 'int' 0     |-IfStmt 0x145145790 <line:9:2, line:10:10>     | |-BinaryOperator 0x145145740 <line:9:6, col:43> 'int' contains-errors '=='     | | |-CallExpr 0x1451456f0 <col:6, col:38> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x1451455d0 <col:6> 'int ()' Function 0x145145518 'test_opt' 'int ()'     | | | |-RecoveryExpr 0x145145628 <col:15, col:22> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x1451455f0 <col:15> 'struct inode *' lvalue ParmVar 0x145128648 'inode' 'struct inode *'     | | | `-RecoveryExpr 0x1451456d0 <col:28> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x145145720 <col:43> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x145145780 <line:10:3, col:10>     |   `-IntegerLiteral 0x145145760 <col:10> 'int' 1     `-ReturnStmt 0x1451457d0 <line:11:2, col:9>       `-IntegerLiteral 0x1451457b0 <col:9> 'int' 0 ","19375":"`-FunctionDecl 0x12611d9a0  col:19 implicit used strdup 'char *(const char *)' extern   |-ParmVarDecl 0x12611daa0 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x12611da48 <<invalid sloc>> Implicit 950 ","19333":"`-FunctionDecl 0x14c029b20  col:12 implicit used strcspn 'unsigned long (const char *, const char *)' extern   |-ParmVarDecl 0x14c029c20 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x14c029c88 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x14c029bc8 <<invalid sloc>> Implicit 894 ","20018":"`-FunctionDecl 0x14e809558  line:1:12 stv06xx_isoc_init 'int (struct gspca_dev *)' static   |-ParmVarDecl 0x14e809448 <col:30, col:48> col:48 used gspca_dev 'struct gspca_dev *'   `-CompoundStmt 0x14d93f5e0 <line:2:1, line:12:1>     |-DeclStmt 0x14d93ec38 <line:3:2, col:32>     | |-RecordDecl 0x14d93ea50 <col:2, col:9> col:9 struct usb_host_interface     | `-VarDecl 0x14d93ebb8 <col:2, col:29> col:29 used alt 'struct usb_host_interface *'     |-DeclStmt 0x14d93ef20 <line:4:2, col:41>     | |-RecordDecl 0x14d93ec50 <col:2, col:9> col:9 struct sd     | `-VarDecl 0x14d93edb8 <col:2, col:32> col:13 used sd 'struct sd *' cinit     |   `-CStyleCastExpr 0x14d93eee0 <col:18, col:32> 'struct sd *' <BitCast>     |     `-ImplicitCastExpr 0x14d93eec8 <col:32> 'struct gspca_dev *' <LValueToRValue> part_of_explicit_cast     |       `-DeclRefExpr 0x14d93ee20 <col:32> 'struct gspca_dev *' lvalue ParmVar 0x14e809448 'gspca_dev' 'struct gspca_dev *'     |-BinaryOperator 0x14d93f158 <line:7:2, col:63> 'struct usb_host_interface *' contains-errors '='     | |-DeclRefExpr 0x14d93ef38 <col:2> 'struct usb_host_interface *' lvalue Var 0x14d93ebb8 'alt' 'struct usb_host_interface *'     | `-UnaryOperator 0x14d93f140 <col:8, col:63> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-ArraySubscriptExpr 0x14d93f120 <col:9, col:63> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x14d93f108 <col:9, col:51> '<dependent type>' contains-errors <LValueToRValue>     |     | `-CXXDependentScopeMemberExpr 0x14d93f0a0 <col:9, col:51> '<dependent type>' contains-errors lvalue ->altsetting     |     |   `-ArraySubscriptExpr 0x14d93f080 <col:9, col:48> '<dependent type>' contains-errors lvalue     |     |     |-ImplicitCastExpr 0x14d93f068 <col:9, col:36> '<dependent type>' contains-errors <LValueToRValue>     |     |     | `-CXXDependentScopeMemberExpr 0x14d93f000 <col:9, col:36> '<dependent type>' contains-errors lvalue ->intf_cache     |     |     |   `-CXXDependentScopeMemberExpr 0x14d93efb8 <col:9, col:25> '<dependent type>' contains-errors lvalue ->actconfig     |     |     |     `-RecoveryExpr 0x14d93ef90 <col:9, col:20> '<dependent type>' contains-errors lvalue     |     |     |       `-DeclRefExpr 0x14d93ef58 <col:9> 'struct gspca_dev *' lvalue ParmVar 0x14e809448 'gspca_dev' 'struct gspca_dev *'     |     |     `-IntegerLiteral 0x14d93f048 <col:47> 'int' 0     |     `-IntegerLiteral 0x14d93f0e8 <col:62> 'int' 1     |-BinaryOperator 0x14d93f590 <line:8:2, line:9:64> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14d93f278 <line:8:2, col:24> '<dependent type>' contains-errors lvalue .wMaxPacketSize     | | `-CXXDependentScopeMemberExpr 0x14d93f230 <col:2, col:19> '<dependent type>' contains-errors lvalue .desc     | |   `-ArraySubscriptExpr 0x14d93f210 <col:2, col:17> '<dependent type>' contains-errors lvalue     | |     |-ImplicitCastExpr 0x14d93f1f8 <col:2, col:7> '<dependent type>' contains-errors <LValueToRValue>     | |     | `-RecoveryExpr 0x14d93f1b0 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |     |   `-DeclRefExpr 0x14d93f178 <col:2> 'struct usb_host_interface *' lvalue Var 0x14d93ebb8 'alt' 'struct usb_host_interface *'     | |     `-IntegerLiteral 0x14d93f1d8 <col:16> 'int' 0     | `-CallExpr 0x14d93f568 <line:9:3, col:64> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14d93f3f0 <col:3> 'int ()' Function 0x14d93f338 'cpu_to_le16' 'int ()'     |   `-ArraySubscriptExpr 0x14d93f548 <col:15, col:63> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x14d93f518 <col:15, col:27> '<dependent type>' contains-errors <LValueToRValue>     |     | `-CXXDependentScopeMemberExpr 0x14d93f470 <col:15, col:27> '<dependent type>' contains-errors lvalue ->max_packet_size     |     |   `-RecoveryExpr 0x14d93f448 <col:15, col:19> '<dependent type>' contains-errors lvalue     |     |     `-DeclRefExpr 0x14d93f410 <col:15> 'struct sd *' lvalue Var 0x14d93edb8 'sd' 'struct sd *'     |     `-ImplicitCastExpr 0x14d93f530 <col:43, col:54> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14d93f4f0 <col:43, col:54> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x14d93f4b8 <col:43> 'struct gspca_dev *' lvalue ParmVar 0x14e809448 'gspca_dev' 'struct gspca_dev *'     `-ReturnStmt 0x14d93f5d0 <line:11:2, col:9>       `-IntegerLiteral 0x14d93f5b0 <col:9> 'int' 0 ","19655":"`-FunctionDecl 0x138029c58  col:7 implicit used strncasecmp 'int (const char *, const char *, unsigned long)' extern   |-ParmVarDecl 0x138029d58 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x138029dc0 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x138029e28 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x138029d00 <<invalid sloc>> Implicit 958 ","19194":"`-FunctionDecl 0x14d8f8f68  col:7 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x14d8f9068 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x14d8f9010 <<invalid sloc>> Implicit 873 ","19894":"`-FunctionDecl 0x12d00ddf8  line:1:5 invalid unit_stop 'int (int *)'   |-ParmVarDecl 0x12d00dd28 <col:15, col:21> col:21 invalid u 'int *'   `-CompoundStmt 0x12c0f61b8 <col:24, line:26:1>     |-CallExpr 0x12d00e060 <line:5:9, col:17> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d00e020 <col:9> 'int ()' Function 0x12d00df68 'assert' 'int ()'     | `-RecoveryExpr 0x12d00e040 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12c0f5400 <line:8:9, line:9:25>     | |-CallExpr 0x12d00e330 <line:8:13, col:45> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x12d00e2b0 <col:13> 'int ()' Function 0x12d00e1f8 'UNIT_IS_INACTIVE_OR_FAILED' 'int ()'     | | `-RecoveryExpr 0x12d00e310 <col:40> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12d00e3f0 <line:9:17, col:25>     |   `-UnaryOperator 0x12d00e3d8 <col:24, col:25> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12d00e3c0 <col:25> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12d00e3a0 <col:25> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12c0f5a18 <line:11:9, line:15:9>     | |-RecoveryExpr 0x12c0f55a0 <line:11:13, col:43> '_Bool' contains-errors     | `-CompoundStmt 0x12c0f59f8 <col:46, line:15:9>     |   |-CallExpr 0x12c0f5900 <line:12:17, line:13:52> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12c0f56a0 <line:12:17> 'int ()' Function 0x12c0f55e8 'log_debug_unit' 'int ()'     |   | |-CXXDependentScopeMemberExpr 0x12c0f56e0 <col:32, col:35> '<dependent type>' contains-errors lvalue ->id     |   | | `-RecoveryExpr 0x12c0f56c0 <col:32> '<dependent type>' contains-errors lvalue     |   | |-StringLiteral 0x12c0f5770 <col:39> 'char[4]' lvalue \"STR\"     |   | |-CXXDependentScopeMemberExpr 0x12c0f57b0 <line:13:32, col:35> '<dependent type>' contains-errors lvalue ->id     |   | | `-RecoveryExpr 0x12c0f5790 <col:32> '<dependent type>' contains-errors lvalue     |   | `-CXXDependentScopeMemberExpr 0x12c0f58b8 <col:39, col:50> '<dependent type>' contains-errors lvalue ->id     |   |   `-RecoveryExpr 0x12c0f5898 <col:39> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x12c0f59e8 <line:14:17, col:43>     |     `-CallExpr 0x12c0f59c0 <col:24, col:43> '<dependent type>' contains-errors     |       |-RecoveryExpr 0x12c0f5940 <col:24> '<dependent type>' contains-errors lvalue     |       `-RecoveryExpr 0x12c0f59a0 <col:34> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12c0f5bc0 <line:17:9, col:64> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12c0f5b18 <col:9> 'int ()' Function 0x12c0f5a60 'unit_status_log_starting_stopping_reloading' 'int ()'     | |-RecoveryExpr 0x12c0f5b38 <col:53> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x12c0f5ba0 <col:56> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12c0f5d78 <line:18:9, col:56> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12c0f5cd0 <col:9> 'int ()' Function 0x12c0f5c18 'unit_status_print_starting_stopping' 'int ()'     | |-RecoveryExpr 0x12c0f5cf0 <col:45> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x12c0f5d58 <col:48> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12c0f6088 <line:23:9, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12c0f6048 <col:9> 'int ()' Function 0x12c0f5f90 'unit_add_to_dbus_queue' 'int ()'     | `-RecoveryExpr 0x12c0f6068 <col:32> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12c0f61a8 <line:25:9, col:38>       `-CallExpr 0x12c0f6180 <col:16, col:38> '<dependent type>' contains-errors         |-CXXDependentScopeMemberExpr 0x12c0f6118 <col:16, col:32> '<dependent type>' contains-errors lvalue ->stop         | `-CallExpr 0x12c0f60f0 <col:16, col:29> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x12c0f60b0 <col:16> 'int ()' Function 0x12c0f5dd0 'UNIT_VTABLE' 'int ()'         |   `-RecoveryExpr 0x12c0f60d0 <col:28> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x12c0f6160 <col:37> '<dependent type>' contains-errors lvalue ","19085":"`-FunctionDecl 0x1458c0a88  line:1:14 invalid Prepare 'int (int *, int *)'   |-ParmVarDecl 0x1458c0928 <col:22, col:37> col:37 referenced invalid context 'int *'   |-ParmVarDecl 0x1458c09a8 <col:46, col:58> col:58 invalid node 'int *'   `-CompoundStmt 0x1458dc570 <col:64, line:30:1>     |-CallExpr 0x1458c0e48 <line:2:3, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1458c0ca0 <col:3> 'int ()' Function 0x1458c0be8 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x1458c0cc0 <col:21> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x1458c0e00 <col:30, col:44> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1458c0dc0 <col:30> 'int ()' Function 0x1458c0d08 'NumInputs' 'int ()'     | | `-RecoveryExpr 0x1458c0de0 <col:40> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x1458c0e28 <col:47> 'int' 2     |-CallExpr 0x1458da048 <line:3:3, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1458c0e80 <col:3> 'int ()' Function 0x1458c0be8 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x1458c0ea0 <col:21> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x1458da000 <col:30, col:45> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1458c0fa0 <col:30> 'int ()' Function 0x1458c0ee8 'NumOutputs' 'int ()'     | | `-RecoveryExpr 0x1458c0fc0 <col:41> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x1458da028 <col:48> 'int' 1     |-DeclStmt 0x1458da290 <line:5:3, col:68>     | `-VarDecl 0x1458da098 <col:3, col:23> col:23 invalid input 'const int *'     |-DeclStmt 0x1458da3d8 <line:6:3, col:79>     | `-VarDecl 0x1458da2c0 <col:3, col:23> col:23 invalid seq_lengths 'const int *'     |-CallExpr 0x1458da598 <line:7:3, col:59> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1458da3f0 <col:3> 'int ()' Function 0x1458c0be8 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x1458da410 <col:21> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x1458da550 <col:30, col:55> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1458da510 <col:30> 'int ()' Function 0x1458da458 'NumDimensions' 'int ()'     | | `-RecoveryExpr 0x1458da530 <col:44> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x1458da578 <col:58> 'int' 1     |-IfStmt 0x1458dae70 <line:9:3, line:16:3>     | |-BinaryOperator 0x1458dab10 <line:9:7, line:11:22> 'int' contains-errors '&&'     | | |-BinaryOperator 0x1458daab0 <line:9:7, line:10:53> 'int' contains-errors '&&'     | | | |-BinaryOperator 0x1458daa50 <line:9:7, line:10:22> 'int' contains-errors '&&'     | | | | |-BinaryOperator 0x1458da9f0 <line:9:7, col:53> 'int' contains-errors '&&'     | | | | | |-BinaryOperator 0x1458da990 <col:7, col:22> 'int' contains-errors '!='     | | | | | | |-CXXDependentScopeMemberExpr 0x1458da5f0 <col:7, col:14> '<dependent type>' contains-errors lvalue ->type     | | | | | | | `-RecoveryExpr 0x1458da5d0 <col:7> '<dependent type>' contains-errors lvalue     | | | | | | `-RecoveryExpr 0x1458da970 <col:22> '<dependent type>' contains-errors lvalue     | | | | | `-BinaryOperator 0x1458da9d0 <col:38, col:53> 'int' contains-errors '!='     | | | | |   |-CXXDependentScopeMemberExpr 0x1458da690 <col:38, col:45> '<dependent type>' contains-errors lvalue ->type     | | | | |   | `-RecoveryExpr 0x1458da670 <col:38> '<dependent type>' contains-errors lvalue     | | | | |   `-RecoveryExpr 0x1458da9b0 <col:53> '<dependent type>' contains-errors lvalue     | | | | `-BinaryOperator 0x1458daa30 <line:10:7, col:22> 'int' contains-errors '!='     | | | |   |-CXXDependentScopeMemberExpr 0x1458da750 <col:7, col:14> '<dependent type>' contains-errors lvalue ->type     | | | |   | `-RecoveryExpr 0x1458da730 <col:7> '<dependent type>' contains-errors lvalue     | | | |   `-RecoveryExpr 0x1458daa10 <col:22> '<dependent type>' contains-errors lvalue     | | | `-BinaryOperator 0x1458daa90 <col:38, col:53> 'int' contains-errors '!='     | | |   |-CXXDependentScopeMemberExpr 0x1458da810 <col:38, col:45> '<dependent type>' contains-errors lvalue ->type     | | |   | `-RecoveryExpr 0x1458da7f0 <col:38> '<dependent type>' contains-errors lvalue     | | |   `-RecoveryExpr 0x1458daa70 <col:53> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x1458daaf0 <line:11:7, col:22> 'int' contains-errors '!='     | |   |-CXXDependentScopeMemberExpr 0x1458da8d0 <col:7, col:14> '<dependent type>' contains-errors lvalue ->type     | |   | `-RecoveryExpr 0x1458da8b0 <col:7> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x1458daad0 <col:22> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1458dae50 <col:36, line:16:3>     |   |-CallExpr 0x1458dadd0 <line:12:5, line:14:56> '<dependent type>' contains-errors     |   | |-CXXDependentScopeMemberExpr 0x1458dab78 <line:12:5, col:14> '<dependent type>' contains-errors lvalue ->ReportError     |   | | `-RecoveryExpr 0x1458dab50 <col:5> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x1458dab30 <col:5> 'int *' lvalue ParmVar 0x1458c0928 'context' 'int *'     |   | |-RecoveryExpr 0x1458dabc0 <col:26> '<dependent type>' contains-errors lvalue     |   | |-StringLiteral 0x1458dac20 <line:13:26> 'char[4]' lvalue \"STR\"     |   | `-CallExpr 0x1458dada8 <line:14:26, col:55> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x1458dad20 <col:26> 'int ()' Function 0x1458dac68 'TfLiteTypeGetName' 'int ()'     |   |   `-CXXDependentScopeMemberExpr 0x1458dad60 <col:44, col:51> '<dependent type>' contains-errors lvalue ->type     |   |     `-RecoveryExpr 0x1458dad40 <col:44> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x1458dae40 <line:15:5, col:12>     |     `-RecoveryExpr 0x1458dae20 <col:12> '<dependent type>' contains-errors lvalue     `-IfStmt 0x1458dc070 <line:18:3, line:23:3>       |-BinaryOperator 0x1458dbe80 <line:18:7, col:65> 'int' contains-errors '&&'       | |-BinaryOperator 0x1458dbe20 <col:7, col:28> 'int' contains-errors '!='       | | |-CXXDependentScopeMemberExpr 0x1458daeb0 <col:7, col:20> '<dependent type>' contains-errors lvalue ->type       | | | `-RecoveryExpr 0x1458dae90 <col:7> '<dependent type>' contains-errors lvalue       | | `-RecoveryExpr 0x1458dbe00 <col:28> '<dependent type>' contains-errors lvalue       | `-BinaryOperator 0x1458dbe60 <col:44, col:65> 'int' contains-errors '!='       |   |-CXXDependentScopeMemberExpr 0x1458daf50 <col:44, col:57> '<dependent type>' contains-errors lvalue ->type       |   | `-RecoveryExpr 0x1458daf30 <col:44> '<dependent type>' contains-errors lvalue       |   `-RecoveryExpr 0x1458dbe40 <col:65> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x1458dc058 <col:79, line:23:3>         `-CallExpr 0x1458dc020 <line:19:5, line:21:45> '<dependent type>' contains-errors           |-CXXDependentScopeMemberExpr 0x1458dbee8 <line:19:5, col:14> '<dependent type>' contains-errors lvalue ->ReportError           | `-RecoveryExpr 0x1458dbec0 <col:5> '<dependent type>' contains-errors lvalue           |   `-DeclRefExpr 0x1458dbea0 <col:5> 'int *' lvalue ParmVar 0x1458c0928 'context' 'int *'           |-RecoveryExpr 0x1458dbf30 <line:20:9> '<dependent type>' contains-errors lvalue           |-StringLiteral 0x1458dbf50 <col:18> 'char[4]' lvalue \"STR\"           `-CallExpr 0x1458dbff8 <line:21:9, col:44> '<dependent type>' contains-errors             |-DeclRefExpr 0x1458dbf70 <col:9> 'int ()' Function 0x1458dac68 'TfLiteTypeGetName' 'int ()'             `-CXXDependentScopeMemberExpr 0x1458dbfb0 <col:27, col:40> '<dependent type>' contains-errors lvalue ->type               `-RecoveryExpr 0x1458dbf90 <col:27> '<dependent type>' contains-errors lvalue ","19966":"`-FunctionDecl 0x14a80de80  line:1:13 referenced invalid h2_push_diary_append 'void (int *, int *)' static   |-ParmVarDecl 0x14a80dd28 <col:34, col:49> col:49 invalid diary 'int *'   |-ParmVarDecl 0x14a80dda8 <col:56, col:77> col:77 invalid e 'int *'   `-CompoundStmt 0x14a827d10 <line:2:1, line:18:1>     |-BinaryOperator 0x14a80dfd8 <line:3:5, col:26> '<dependent type>' contains-errors '*'     | |-RecoveryExpr 0x14a80df58 <col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a80df38 <col:5> 'void (int *, int *)' Function 0x14a80de80 'h2_push_diary_append' 'void (int *, int *)'     | `-RecoveryExpr 0x14a80dfb8 <col:26> '<dependent type>' contains-errors lvalue     `-IfStmt 0x14a827a78 <line:5:5, line:14:5> has_else       |-BinaryOperator 0x14a80e110 <line:5:9, col:40> 'int' contains-errors '<'       | |-CXXDependentScopeMemberExpr 0x14a80e060 <col:9, col:25> '<dependent type>' contains-errors lvalue ->nelts       | | `-CXXDependentScopeMemberExpr 0x14a80e018 <col:9, col:16> '<dependent type>' contains-errors lvalue ->entries       | |   `-RecoveryExpr 0x14a80dff8 <col:9> '<dependent type>' contains-errors lvalue       | `-CXXDependentScopeMemberExpr 0x14a80e0c8 <col:33, col:40> '<dependent type>' contains-errors lvalue ->N       |   `-RecoveryExpr 0x14a80e0a8 <col:33> '<dependent type>' contains-errors lvalue       |-CompoundStmt 0x14a827780 <col:43, line:9:5>       | `-BinaryOperator 0x14a827480 <line:7:9, col:64> '<dependent type>' contains-errors '='       |   |-CallExpr 0x14a827420 <col:9, col:59> '<dependent type>' contains-errors       |   | |-DeclRefExpr 0x14a80e290 <col:9> 'int ()' Function 0x14a80e1d8 'APR_ARRAY_PUSH' 'int ()'       |   | |-CXXDependentScopeMemberExpr 0x14a80e2d0 <col:24, col:31> '<dependent type>' contains-errors lvalue ->entries       |   | | `-RecoveryExpr 0x14a80e2b0 <col:24> '<dependent type>' contains-errors lvalue       |   | `-RecoveryExpr 0x14a827400 <col:40> '<dependent type>' contains-errors lvalue       |   `-UnaryOperator 0x14a827468 <col:63, col:64> '<dependent type>' contains-errors prefix '*' cannot overflow       |     `-ImplicitCastExpr 0x14a827450 <col:64> '<dependent type>' contains-errors <LValueToRValue>       |       `-RecoveryExpr 0x14a80e360 <col:64> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x14a827a60 <line:10:10, line:14:5>         `-BinaryOperator 0x14a827a40 <line:13:9, col:16> '<dependent type>' contains-errors '='           |-UnaryOperator 0x14a8279f8 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow           | `-ImplicitCastExpr 0x14a8279e0 <col:10> '<dependent type>' contains-errors <LValueToRValue>           |   `-RecoveryExpr 0x14a8279c0 <col:10> '<dependent type>' contains-errors lvalue           `-UnaryOperator 0x14a827a28 <col:15, col:16> '<dependent type>' contains-errors prefix '*' cannot overflow             `-ImplicitCastExpr 0x14a827a10 <col:16> '<dependent type>' contains-errors <LValueToRValue>               `-RecoveryExpr 0x14a827950 <col:16> '<dependent type>' contains-errors lvalue ","19086":"`-FunctionDecl 0x12d1282c8  line:1:5 invalid read_super_2 'int (int **, void *)'   |-ParmVarDecl 0x12d128160 <col:18, col:40> col:40 invalid s_ops 'int **'   |-ParmVarDecl 0x12d1281e0 <col:47, col:53> col:53 used s 'void *'   `-CompoundStmt 0x12d140f28 <line:2:1, line:35:1>     `-IfStmt 0x12d140a10 <line:5:2, line:7:11>       |-BinaryOperator 0x12d1287a8 <line:5:5, line:6:26> 'int' contains-errors '||'       | |-BinaryOperator 0x12d128700 <line:5:5, col:61> 'int' contains-errors '||'       | | |-BinaryOperator 0x12d128658 <col:5, col:24> 'int' contains-errors '!='       | | | |-CXXDependentScopeMemberExpr 0x12d1285f0 <col:5, col:13> '<dependent type>' contains-errors lvalue ->s_magic       | | | | `-RecoveryExpr 0x12d1285d0 <col:5> '<dependent type>' contains-errors lvalue       | | | `-RecoveryExpr 0x12d128638 <col:24> '<dependent type>' contains-errors lvalue       | | `-BinaryOperator 0x12d1286e0 <col:42, col:61> 'int' contains-errors '!='       | |   |-CXXDependentScopeMemberExpr 0x12d128698 <col:42, col:50> '<dependent type>' contains-errors lvalue ->s_major       | |   | `-RecoveryExpr 0x12d128678 <col:42> '<dependent type>' contains-errors lvalue       | |   `-IntegerLiteral 0x12d1284b0 <col:61> 'int' 2       | `-BinaryOperator 0x12d128788 <line:6:8, col:26> 'int' contains-errors '>'       |   |-CXXDependentScopeMemberExpr 0x12d128740 <col:8, col:16> '<dependent type>' contains-errors lvalue ->s_minor       |   | `-RecoveryExpr 0x12d128720 <col:8> '<dependent type>' contains-errors lvalue       |   `-IntegerLiteral 0x12d128570 <col:26> 'int' 1       `-ReturnStmt 0x12d140a00 <line:7:3, col:11>         `-UnaryOperator 0x12d1287e8 <col:10, col:11> 'int' prefix '-'           `-IntegerLiteral 0x12d1287c8 <col:11> 'int' 1 ","19491":"`-FunctionDecl 0x12d02b010  line:1:13 btrfs_clear_bit_hook 'void (struct inode *, struct extent_state *, unsigned int *)' static   |-ParmVarDecl 0x12d00e848 <col:34, col:48> col:48 used inode 'struct inode *'   |-ParmVarDecl 0x12d02ae28 <line:2:6, col:27> col:27 used state 'struct extent_state *'   |-ParmVarDecl 0x12d02aed8 <line:3:6, col:16> col:16 used bits 'unsigned int *'   `-CompoundStmt 0x12d02f2a0 <line:4:1, line:50:1>     |-CallExpr 0x12d02b448 <line:9:2, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d02b240 <col:2> 'int ()' Function 0x12d02b188 'spin_lock' 'int ()'     | `-UnaryOperator 0x12d02b430 <col:12, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12d02b408 <col:13, col:29> '<dependent type>' contains-errors lvalue     |     `-CallExpr 0x12d02b3c8 <col:13, col:26> 'int'     |       |-ImplicitCastExpr 0x12d02b3b0 <col:13> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x12d02b340 <col:13> 'int ()' Function 0x12d02b288 'BTRFS_I' 'int ()'     |       `-ImplicitCastExpr 0x12d02b3f0 <col:21> 'struct inode *' <LValueToRValue>     |         `-DeclRefExpr 0x12d02b360 <col:21> 'struct inode *' lvalue ParmVar 0x12d00e848 'inode' 'struct inode *'     |-IfStmt 0x12d02b810 <line:10:2, line:11:35>     | |-RecoveryExpr 0x12d02b5c0 <line:10:6, col:62> '_Bool' contains-errors     | `-CompoundAssignOperator 0x12d02b7e0 <line:11:3, col:35> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |-RecoveryExpr 0x12d02b798 <col:3, col:19> '<dependent type>' contains-errors lvalue     |   | `-CallExpr 0x12d02b758 <col:3, col:16> 'int'     |   |   |-ImplicitCastExpr 0x12d02b740 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x12d02b5e0 <col:3> 'int ()' Function 0x12d02b288 'BTRFS_I' 'int ()'     |   |   `-ImplicitCastExpr 0x12d02b780 <col:11> 'struct inode *' <LValueToRValue>     |   |     `-DeclRefExpr 0x12d02b600 <col:11> 'struct inode *' lvalue ParmVar 0x12d00e848 'inode' 'struct inode *'     |   `-RecoveryExpr 0x12d02b7c0 <col:35> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12d02ba08 <line:12:2, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d02b910 <col:2> 'int ()' Function 0x12d02b858 'spin_unlock' 'int ()'     | `-UnaryOperator 0x12d02b9f0 <col:14, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12d02b9c8 <col:15, col:31> '<dependent type>' contains-errors lvalue     |     `-CallExpr 0x12d02b988 <col:15, col:28> 'int'     |       |-ImplicitCastExpr 0x12d02b970 <col:15> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x12d02b930 <col:15> 'int ()' Function 0x12d02b288 'BTRFS_I' 'int ()'     |       `-ImplicitCastExpr 0x12d02b9b0 <col:23> 'struct inode *' <LValueToRValue>     |         `-DeclRefExpr 0x12d02b950 <col:23> 'struct inode *' lvalue ParmVar 0x12d00e848 'inode' 'struct inode *'     `-IfStmt 0x12d02f280 <line:15:2, line:49:2>       |-RecoveryExpr 0x12d02bb80 <line:15:6, col:66> '_Bool' contains-errors       `-CompoundStmt 0x12d02f240 <col:69, line:49:2>         |-DeclStmt 0x12d02da58 <line:16:3, col:49>         | |-RecordDecl 0x12d02bba0 <col:3, col:10> col:10 struct btrfs_root         | `-VarDecl 0x12d02bd08 <col:3, col:45> col:22 used root 'struct btrfs_root *' cinit         |   `-RecoveryExpr 0x12d02da18 <col:29, col:45> '<dependent type>' contains-errors lvalue         |     `-CallExpr 0x12d02bdc8 <col:29, col:42> 'int'         |       |-ImplicitCastExpr 0x12d02bdb0 <col:29> 'int (*)()' <FunctionToPointerDecay>         |       | `-DeclRefExpr 0x12d02bd70 <col:29> 'int ()' Function 0x12d02b288 'BTRFS_I' 'int ()'         |       `-ImplicitCastExpr 0x12d02da00 <col:37> 'struct inode *' <LValueToRValue>         |         `-DeclRefExpr 0x12d02bd90 <col:37> 'struct inode *' lvalue ParmVar 0x12d00e848 'inode' 'struct inode *'         |-IfStmt 0x12d02e170 <line:19:3, line:25:3> has_else         | |-BinaryOperator 0x12d02db78 <line:19:7, col:15> '<dependent type>' contains-errors '&'         | | |-UnaryOperator 0x12d02db40 <col:7, col:8> 'unsigned int' lvalue prefix '*' cannot overflow         | | | `-ImplicitCastExpr 0x12d02db28 <col:8> 'unsigned int *' <LValueToRValue>         | | |   `-DeclRefExpr 0x12d02da70 <col:8> 'unsigned int *' lvalue ParmVar 0x12d02aed8 'bits' 'unsigned int *'         | | `-RecoveryExpr 0x12d02db58 <col:15> '<dependent type>' contains-errors lvalue         | |-CompoundStmt 0x12d02dd40 <col:38, line:21:3>         | | `-CompoundAssignOperator 0x12d02dd10 <line:20:4, col:14> 'unsigned int' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'         | |   |-UnaryOperator 0x12d02dca8 <col:4, col:5> 'unsigned int' lvalue prefix '*' cannot overflow         | |   | `-ImplicitCastExpr 0x12d02dc90 <col:5> 'unsigned int *' <LValueToRValue>         | |   |   `-DeclRefExpr 0x12d02db98 <col:5> 'unsigned int *' lvalue ParmVar 0x12d02aed8 'bits' 'unsigned int *'         | |   `-UnaryOperator 0x12d02dcf8 <col:13, col:14> '<dependent type>' contains-errors prefix '~' cannot overflow         | |     `-ImplicitCastExpr 0x12d02dce0 <col:14> '<dependent type>' contains-errors <LValueToRValue>         | |       `-RecoveryExpr 0x12d02dcc0 <col:14> '<dependent type>' contains-errors lvalue         | `-IfStmt 0x12d02e150 <line:21:10, line:25:3>         |   |-RecoveryExpr 0x12d02de10 <line:21:14, col:44> '_Bool' contains-errors         |   `-CompoundStmt 0x12d02e130 <col:47, line:25:3>         |     |-CallExpr 0x12d02df28 <line:22:4, col:35> '<dependent type>' contains-errors         |     | |-DeclRefExpr 0x12d02de30 <col:4> 'int ()' Function 0x12d02b188 'spin_lock' 'int ()'         |     | `-UnaryOperator 0x12d02df10 <col:14, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow         |     |   `-RecoveryExpr 0x12d02dee8 <col:15, col:31> '<dependent type>' contains-errors lvalue         |     |     `-CallExpr 0x12d02dea8 <col:15, col:28> 'int'         |     |       |-ImplicitCastExpr 0x12d02de90 <col:15> 'int (*)()' <FunctionToPointerDecay>         |     |       | `-DeclRefExpr 0x12d02de50 <col:15> 'int ()' Function 0x12d02b288 'BTRFS_I' 'int ()'         |     |       `-ImplicitCastExpr 0x12d02ded0 <col:23> 'struct inode *' <LValueToRValue>         |     |         `-DeclRefExpr 0x12d02de70 <col:23> 'struct inode *' lvalue ParmVar 0x12d00e848 'inode' 'struct inode *'         |     `-CallExpr 0x12d02e108 <line:24:4, col:37> '<dependent type>' contains-errors         |       |-DeclRefExpr 0x12d02e010 <col:4> 'int ()' Function 0x12d02b858 'spin_unlock' 'int ()'         |       `-UnaryOperator 0x12d02e0f0 <col:16, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow         |         `-RecoveryExpr 0x12d02e0c8 <col:17, col:33> '<dependent type>' contains-errors lvalue         |           `-CallExpr 0x12d02e088 <col:17, col:30> 'int'         |             |-ImplicitCastExpr 0x12d02e070 <col:17> 'int (*)()' <FunctionToPointerDecay>         |             | `-DeclRefExpr 0x12d02e030 <col:17> 'int ()' Function 0x12d02b288 'BTRFS_I' 'int ()'         |             `-ImplicitCastExpr 0x12d02e0b0 <col:25> 'struct inode *' <LValueToRValue>         |               `-DeclRefExpr 0x12d02e050 <col:25> 'struct inode *' lvalue ParmVar 0x12d00e848 'inode' 'struct inode *'         |-IfStmt 0x12d02e5a0 <line:33:3, line:34:4>         | |-CallExpr 0x12d02e550 <line:33:7, col:36> 'int' contains-errors         | | |-ImplicitCastExpr 0x12d02e538 <col:7> 'int (*)()' <FunctionToPointerDecay>         | | | `-DeclRefExpr 0x12d02e4f8 <col:7> 'int ()' Function 0x12d02e440 'btrfs_test_is_dummy_root' 'int ()'         | | `-ImplicitCastExpr 0x12d02e578 <col:32> 'struct btrfs_root *' contains-errors <LValueToRValue>         | |   `-DeclRefExpr 0x12d02e518 <col:32> 'struct btrfs_root *' contains-errors lvalue Var 0x12d02bd08 'root' 'struct btrfs_root *'         | `-ReturnStmt 0x12d02e590 <line:34:4>         |-CallExpr 0x12d02eb68 <line:42:3, col:34> '<dependent type>' contains-errors         | |-DeclRefExpr 0x12d02ea70 <col:3> 'int ()' Function 0x12d02b188 'spin_lock' 'int ()'         | `-UnaryOperator 0x12d02eb50 <col:13, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow         |   `-RecoveryExpr 0x12d02eb28 <col:14, col:30> '<dependent type>' contains-errors lvalue         |     `-CallExpr 0x12d02eae8 <col:14, col:27> 'int'         |       |-ImplicitCastExpr 0x12d02ead0 <col:14> 'int (*)()' <FunctionToPointerDecay>         |       | `-DeclRefExpr 0x12d02ea90 <col:14> 'int ()' Function 0x12d02b288 'BTRFS_I' 'int ()'         |       `-ImplicitCastExpr 0x12d02eb10 <col:22> 'struct inode *' <LValueToRValue>         |         `-DeclRefExpr 0x12d02eab0 <col:22> 'struct inode *' lvalue ParmVar 0x12d00e848 'inode' 'struct inode *'         |-IfStmt 0x12d02f100 <line:44:3, line:47:40>         | |-RecoveryExpr 0x12d02ef28 <line:44:7, line:46:39> '_Bool' contains-errors         | `-CallExpr 0x12d02f0a0 <line:47:4, col:40> 'int' contains-errors         |   |-ImplicitCastExpr 0x12d02f088 <col:4> 'int (*)()' <FunctionToPointerDecay>         |   | `-DeclRefExpr 0x12d02f028 <col:4> 'int ()' Function 0x12d02ef70 'btrfs_del_delalloc_inode' 'int ()'         |   |-ImplicitCastExpr 0x12d02f0d0 <col:29> 'struct btrfs_root *' contains-errors <LValueToRValue>         |   | `-DeclRefExpr 0x12d02f048 <col:29> 'struct btrfs_root *' contains-errors lvalue Var 0x12d02bd08 'root' 'struct btrfs_root *'         |   `-ImplicitCastExpr 0x12d02f0e8 <col:35> 'struct inode *' <LValueToRValue>         |     `-DeclRefExpr 0x12d02f068 <col:35> 'struct inode *' lvalue ParmVar 0x12d00e848 'inode' 'struct inode *'         `-CallExpr 0x12d02f218 <line:48:3, col:36> '<dependent type>' contains-errors           |-DeclRefExpr 0x12d02f120 <col:3> 'int ()' Function 0x12d02b858 'spin_unlock' 'int ()'           `-UnaryOperator 0x12d02f200 <col:15, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow             `-RecoveryExpr 0x12d02f1d8 <col:16, col:32> '<dependent type>' contains-errors lvalue               `-CallExpr 0x12d02f198 <col:16, col:29> 'int'                 |-ImplicitCastExpr 0x12d02f180 <col:16> 'int (*)()' <FunctionToPointerDecay>                 | `-DeclRefExpr 0x12d02f140 <col:16> 'int ()' Function 0x12d02b288 'BTRFS_I' 'int ()'                 `-ImplicitCastExpr 0x12d02f1c0 <col:24> 'struct inode *' <LValueToRValue>                   `-DeclRefExpr 0x12d02f160 <col:24> 'struct inode *' lvalue ParmVar 0x12d00e848 'inode' 'struct inode *' ","19348":"`-FunctionDecl 0x148143730  col:21 implicit used index 'char *(const char *, int)' extern   |-ParmVarDecl 0x148143830 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x148143898 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x1481437d8 <<invalid sloc>> Implicit 952 ","19525":"`-FunctionDecl 0x13d141eb0  col:16 implicit used strchr 'char *(const char *, int)' extern   |-ParmVarDecl 0x13d141fb0 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x13d142018 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x13d141f58 <<invalid sloc>> Implicit 893 ","19318":"`-FunctionDecl 0x12d942210  col:25 implicit used fabs 'double (double)' extern   |-ParmVarDecl 0x12d942310 <<invalid sloc>> <invalid sloc> 'double'   |-BuiltinAttr 0x12d9422b8 <<invalid sloc>> Implicit 1004   |-NoThrowAttr 0x12d942380 <col:25> Implicit   `-ConstAttr 0x12d9423a8 <col:25> Implicit ","19240":"`-FunctionDecl 0x1279289f8  line:1:10 invalid DoCompute 'int (int *)'   |-ParmVarDecl 0x127928928 <col:20, col:37> col:37 invalid ctx 'int *'   `-CompoundStmt 0x1279426e8 <col:42, line:49:3>     |-RecoveryExpr 0x127928ad8 <line:2:5> '<dependent type>' contains-errors lvalue     |-RecoveryExpr 0x127928f00 <line:10:5> '<dependent type>' contains-errors lvalue     |-CallExpr 0x127942170 <line:11:5, col:68> '<dependent type>' contains-errors     | |-DeclRefExpr 0x127928f20 <col:5> 'int ()' Function 0x127928b98 'TF_RETURN_IF_ERROR' 'int ()'     | `-CallExpr 0x127942140 <col:24, col:67> '<dependent type>' contains-errors     |   |-CXXDependentScopeMemberExpr 0x127942000 <col:24, col:36> '<dependent type>' contains-errors lvalue ->NewWritableFile     |   | `-CallExpr 0x127928fa8 <col:24, col:33> '<dependent type>' contains-errors     |   |   `-CXXDependentScopeMemberExpr 0x127928f60 <col:24, col:29> '<dependent type>' contains-errors lvalue ->env     |   |     `-RecoveryExpr 0x127928f40 <col:24> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x1279420e8 <col:52> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x127942128 <col:62, col:63> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x127942108 <col:63> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x127942218 <line:12:5, line:14:78>     | `-VarDecl 0x1279421b0 <line:12:5, col:10> col:10 used writer 'int' auto     `-DoStmt 0x1279426c8 <line:38:5, line:47:30>       |-CompoundStmt 0x127942690 <line:38:8, line:47:5>       | `-IfStmt 0x127942670 <line:42:7, line:45:7>       |   |-RecoveryExpr 0x1279425a0 <line:42:11, col:12> '_Bool' contains-errors       |   `-CompoundStmt 0x127942660 <col:29, line:45:7>       `-RecoveryExpr 0x1279426a8 <line:47:14, col:15> '_Bool' contains-errors ","19949":"`-FunctionDecl 0x12181ce38  line:1:13 invalid ipv6_raw_deliver 'int (struct sk_buff *, int)' static   |-ParmVarDecl 0x12100e268 <col:30, col:46> col:46 used skb 'struct sk_buff *'   |-ParmVarDecl 0x12100e2e8 <col:51, col:55> col:55 used nexthdr 'int'   `-CompoundStmt 0x121014d60 <line:2:1, line:66:1>     |-DeclStmt 0x12181d0d8 <line:3:2, col:30>     | |-RecordDecl 0x12181cef0 <col:8, col:15> col:15 struct in6_addr     | `-VarDecl 0x12181d058 <col:2, col:25> col:25 used saddr 'const struct in6_addr *'     |-DeclStmt 0x12181d1e0 <line:4:2, col:30>     | `-VarDecl 0x12181d178 <col:2, col:25> col:25 used daddr 'const struct in6_addr *'     |-DeclStmt 0x12181d3e8 <line:5:2, col:17>     | |-RecordDecl 0x12181d1f8 <col:2, col:9> col:9 struct sock     | `-VarDecl 0x12181d368 <col:2, col:15> col:15 used sk 'struct sock *'     |-DeclStmt 0x12181d5e8 <line:8:2, col:17>     | |-RecordDecl 0x12181d400 <col:2, col:9> col:9 struct net     | `-VarDecl 0x12181d568 <col:2, col:14> col:14 used net 'struct net *'     |-BinaryOperator 0x12181d888 <line:10:2, col:26> 'const struct in6_addr *' contains-errors '='     | |-DeclRefExpr 0x12181d600 <col:2> 'const struct in6_addr *' lvalue Var 0x12181d058 'saddr' 'const struct in6_addr *'     | `-UnaryOperator 0x12181d870 <col:10, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12181d848 <col:11, col:26> '<dependent type>' contains-errors lvalue     |     `-CallExpr 0x12181d808 <col:11, col:23> 'int'     |       |-ImplicitCastExpr 0x12181d7f0 <col:11> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x12181d780 <col:11> 'int ()' Function 0x12181d6c8 'ipv6_hdr' 'int ()'     |       `-ImplicitCastExpr 0x12181d830 <col:20> 'struct sk_buff *' <LValueToRValue>     |         `-DeclRefExpr 0x12181d7a0 <col:20> 'struct sk_buff *' lvalue ParmVar 0x12100e268 'skb' 'struct sk_buff *'     |-BinaryOperator 0x12181d950 <line:11:2, col:18> 'const struct in6_addr *' contains-errors '='     | |-DeclRefExpr 0x12181d8a8 <col:2> 'const struct in6_addr *' lvalue Var 0x12181d178 'daddr' 'const struct in6_addr *'     | `-RecoveryExpr 0x12181d920 <col:10, col:18> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x12181d8c8 <col:10> 'const struct in6_addr *' lvalue Var 0x12181d058 'saddr' 'const struct in6_addr *'     |   `-IntegerLiteral 0x12181d8e8 <col:18> 'int' 1     |-CallExpr 0x12181dc08 <line:15:2, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12181dac8 <col:2> 'int ()' Function 0x12181da10 'read_lock' 'int ()'     | `-UnaryOperator 0x12181dbf0 <col:12, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x12181dba8 <col:13, col:29> '<dependent type>' contains-errors lvalue .lock     |     `-RecoveryExpr 0x12181db88 <col:13> '<dependent type>' contains-errors lvalue     |-IfStmt 0x121013680 <line:18:2, line:19:8>     | |-UnaryOperator 0x121013600 <line:18:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12181dde8 <col:7> 'struct sock *' <LValueToRValue>     | |   `-DeclRefExpr 0x12181ddc8 <col:7> 'struct sock *' lvalue Var 0x12181d368 'sk' 'struct sock *'     | `-GotoStmt 0x121013668 <line:19:3, col:8> 'out' 0x121013618     |-BinaryOperator 0x121013848 <line:21:2, col:24> 'struct net *' contains-errors '='     | |-DeclRefExpr 0x1210136a0 <col:2> 'struct net *' lvalue Var 0x12181d568 'net' 'struct net *'     | `-CallExpr 0x121013820 <col:8, col:24> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1210137a0 <col:8> 'int ()' Function 0x1210136e8 'dev_net' 'int ()'     |   `-RecoveryExpr 0x1210137f8 <col:16, col:21> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1210137c0 <col:16> 'struct sk_buff *' lvalue ParmVar 0x12100e268 'skb' 'struct sk_buff *'     |-BinaryOperator 0x121013c98 <line:22:2, col:69> 'struct sock *' '='     | |-DeclRefExpr 0x121013868 <col:2> 'struct sock *' lvalue Var 0x12181d368 'sk' 'struct sock *'     | `-ImplicitCastExpr 0x121013c80 <col:7, col:69> 'struct sock *' <IntegralToPointer>     |   `-CallExpr 0x121013bb8 <col:7, col:69> 'int'     |     |-ImplicitCastExpr 0x121013ba0 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x121013968 <col:7> 'int ()' Function 0x1210138b0 '__raw_v6_lookup' 'int ()'     |     |-ImplicitCastExpr 0x121013c08 <col:23> 'struct net *' <LValueToRValue>     |     | `-DeclRefExpr 0x121013988 <col:23> 'struct net *' lvalue Var 0x12181d568 'net' 'struct net *'     |     |-ImplicitCastExpr 0x121013c20 <col:28> 'struct sock *' <LValueToRValue>     |     | `-DeclRefExpr 0x1210139a8 <col:28> 'struct sock *' lvalue Var 0x12181d368 'sk' 'struct sock *'     |     |-ImplicitCastExpr 0x121013c38 <col:32> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x1210139c8 <col:32> 'int' lvalue ParmVar 0x12100e2e8 'nexthdr' 'int'     |     |-ImplicitCastExpr 0x121013c50 <col:41> 'const struct in6_addr *' <LValueToRValue>     |     | `-DeclRefExpr 0x1210139e8 <col:41> 'const struct in6_addr *' lvalue Var 0x12181d178 'daddr' 'const struct in6_addr *'     |     |-ImplicitCastExpr 0x121013c68 <col:48> 'const struct in6_addr *' <LValueToRValue>     |     | `-DeclRefExpr 0x121013a08 <col:48> 'const struct in6_addr *' lvalue Var 0x12181d058 'saddr' 'const struct in6_addr *'     |     `-CallExpr 0x121013b60 <col:55, col:68> 'int'     |       |-ImplicitCastExpr 0x121013b48 <col:55> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x121013b08 <col:55> 'int ()' Function 0x121013a50 'inet6_iif' 'int ()'     |       `-ImplicitCastExpr 0x121013b88 <col:65> 'struct sk_buff *' <LValueToRValue>     |         `-DeclRefExpr 0x121013b28 <col:65> 'struct sk_buff *' lvalue ParmVar 0x12100e268 'skb' 'struct sk_buff *'     |-WhileStmt 0x121014c18 <line:24:2, line:62:2>     | |-ImplicitCastExpr 0x121013cd8 <line:24:9> 'struct sock *' <LValueToRValue>     | | `-DeclRefExpr 0x121013cb8 <col:9> 'struct sock *' lvalue Var 0x12181d368 'sk' 'struct sock *'     | `-CompoundStmt 0x121014be0 <col:13, line:62:2>     |   |-DeclStmt 0x121013d70 <line:25:3, col:15>     |   | `-VarDecl 0x121013d08 <col:3, col:7> col:7 used filtered 'int'     |   |-SwitchStmt 0x121013dd8 <line:28:3, line:47:3>     |   | |-ImplicitCastExpr 0x121013dc0 <line:28:11> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x121013da0 <col:11> 'int' lvalue ParmVar 0x12100e2e8 'nexthdr' 'int'     |   | `-CompoundStmt 0x121014088 <col:20, line:47:3>     |   |   |-BinaryOperator 0x121013fd8 <line:30:4, col:36> 'int' '='     |   |   | |-DeclRefExpr 0x121013e00 <col:4> 'int' lvalue Var 0x121013d08 'filtered' 'int'     |   |   | `-CallExpr 0x121013f78 <col:15, col:36> 'int'     |   |   |   |-ImplicitCastExpr 0x121013f60 <col:15> 'int (*)()' <FunctionToPointerDecay>     |   |   |   | `-DeclRefExpr 0x121013f00 <col:15> 'int ()' Function 0x121013e48 'icmpv6_filter' 'int ()'     |   |   |   |-ImplicitCastExpr 0x121013fa8 <col:29> 'struct sock *' <LValueToRValue>     |   |   |   | `-DeclRefExpr 0x121013f20 <col:29> 'struct sock *' lvalue Var 0x12181d368 'sk' 'struct sock *'     |   |   |   `-ImplicitCastExpr 0x121013fc0 <col:33> 'struct sk_buff *' <LValueToRValue>     |   |   |     `-DeclRefExpr 0x121013f40 <col:33> 'struct sk_buff *' lvalue ParmVar 0x12100e268 'skb' 'struct sk_buff *'     |   |   |-BreakStmt 0x121013ff8 <line:31:4>     |   |   |-DefaultStmt 0x121014060 <line:44:3, line:45:15>     |   |   | `-BinaryOperator 0x121014040 <col:4, col:15> 'int' '='     |   |   |   |-DeclRefExpr 0x121014000 <col:4> 'int' lvalue Var 0x121013d08 'filtered' 'int'     |   |   |   `-IntegerLiteral 0x121014020 <col:15> 'int' 0     |   |   `-BreakStmt 0x121014080 <line:46:4>     |   |-IfStmt 0x121014138 <line:49:3, line:50:4>     |   | |-BinaryOperator 0x121014110 <line:49:7, col:18> 'int' '<'     |   | | |-ImplicitCastExpr 0x1210140f8 <col:7> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x1210140b8 <col:7> 'int' lvalue Var 0x121013d08 'filtered' 'int'     |   | | `-IntegerLiteral 0x1210140d8 <col:18> 'int' 0     |   | `-BreakStmt 0x121014130 <line:50:4>     |   |-IfStmt 0x1210147f0 <line:51:3, line:59:3>     |   | |-BinaryOperator 0x1210141b0 <line:51:7, col:19> 'int' '=='     |   | | |-ImplicitCastExpr 0x121014198 <col:7> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x121014158 <col:7> 'int' lvalue Var 0x121013d08 'filtered' 'int'     |   | | `-IntegerLiteral 0x121014178 <col:19> 'int' 0     |   | `-CompoundStmt 0x1210147d0 <col:22, line:59:3>     |   |   |-DeclStmt 0x1210143e0 <line:52:4, col:54>     |   |   | `-VarDecl 0x121014258 <col:4, col:20> col:20 used clone 'struct sk_buff *'     |   |   `-IfStmt 0x1210147b0 <line:55:4, line:58:4>     |   |     |-ImplicitCastExpr 0x121014418 <line:55:8> 'struct sk_buff *' <LValueToRValue>     |   |     | `-DeclRefExpr 0x1210143f8 <col:8> 'struct sk_buff *' lvalue Var 0x121014258 'clone' 'struct sk_buff *'     |   |     `-CompoundStmt 0x121014790 <col:15, line:58:4>     |   |       |-CallExpr 0x121014568 <line:56:5, col:19> 'int'     |   |       | |-ImplicitCastExpr 0x121014550 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   |       | | `-DeclRefExpr 0x121014510 <col:5> 'int ()' Function 0x121014458 'nf_reset' 'int ()'     |   |       | `-ImplicitCastExpr 0x121014590 <col:14> 'struct sk_buff *' <LValueToRValue>     |   |       |   `-DeclRefExpr 0x121014530 <col:14> 'struct sk_buff *' lvalue Var 0x121014258 'clone' 'struct sk_buff *'     |   |       `-CallExpr 0x121014730 <line:57:5, col:24> 'int'     |   |         |-ImplicitCastExpr 0x121014718 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   |         | `-DeclRefExpr 0x1210146b8 <col:5> 'int ()' Function 0x121014600 'rawv6_rcv' 'int ()'     |   |         |-ImplicitCastExpr 0x121014760 <col:15> 'struct sock *' <LValueToRValue>     |   |         | `-DeclRefExpr 0x1210146d8 <col:15> 'struct sock *' lvalue Var 0x12181d368 'sk' 'struct sock *'     |   |         `-ImplicitCastExpr 0x121014778 <col:19> 'struct sk_buff *' <LValueToRValue>     |   |           `-DeclRefExpr 0x1210146f8 <col:19> 'struct sk_buff *' lvalue Var 0x121014258 'clone' 'struct sk_buff *'     |   `-BinaryOperator 0x121014bc0 <line:60:3, line:61:24> 'struct sock *' '='     |     |-DeclRefExpr 0x121014810 <line:60:3> 'struct sock *' lvalue Var 0x12181d368 'sk' 'struct sock *'     |     `-ImplicitCastExpr 0x121014ba8 <col:8, line:61:24> 'struct sock *' <IntegralToPointer>     |       `-CallExpr 0x121014af8 <line:60:8, line:61:24> 'int'     |         |-ImplicitCastExpr 0x121014ae0 <line:60:8> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x121014830 <col:8> 'int ()' Function 0x1210138b0 '__raw_v6_lookup' 'int ()'     |         |-ImplicitCastExpr 0x121014b48 <col:24> 'struct net *' <LValueToRValue>     |         | `-DeclRefExpr 0x121014850 <col:24> 'struct net *' lvalue Var 0x12181d568 'net' 'struct net *'     |         |-CallExpr 0x1210149a8 <col:29, col:39> 'int'     |         | |-ImplicitCastExpr 0x121014990 <col:29> 'int (*)()' <FunctionToPointerDecay>     |         | | `-DeclRefExpr 0x121014950 <col:29> 'int ()' Function 0x121014898 'sk_next' 'int ()'     |         | `-ImplicitCastExpr 0x1210149d0 <col:37> 'struct sock *' <LValueToRValue>     |         |   `-DeclRefExpr 0x121014970 <col:37> 'struct sock *' lvalue Var 0x12181d368 'sk' 'struct sock *'     |         |-ImplicitCastExpr 0x121014b60 <col:42> 'int' <LValueToRValue>     |         | `-DeclRefExpr 0x1210149e8 <col:42> 'int' lvalue ParmVar 0x12100e2e8 'nexthdr' 'int'     |         |-ImplicitCastExpr 0x121014b78 <col:51> 'const struct in6_addr *' <LValueToRValue>     |         | `-DeclRefExpr 0x121014a08 <col:51> 'const struct in6_addr *' lvalue Var 0x12181d178 'daddr' 'const struct in6_addr *'     |         |-ImplicitCastExpr 0x121014b90 <col:58> 'const struct in6_addr *' <LValueToRValue>     |         | `-DeclRefExpr 0x121014a28 <col:58> 'const struct in6_addr *' lvalue Var 0x12181d058 'saddr' 'const struct in6_addr *'     |         `-CallExpr 0x121014aa0 <line:61:10, col:23> 'int'     |           |-ImplicitCastExpr 0x121014a88 <col:10> 'int (*)()' <FunctionToPointerDecay>     |           | `-DeclRefExpr 0x121014a48 <col:10> 'int ()' Function 0x121013a50 'inet6_iif' 'int ()'     |           `-ImplicitCastExpr 0x121014ac8 <col:20> 'struct sk_buff *' <LValueToRValue>     |             `-DeclRefExpr 0x121014a68 <col:20> 'struct sk_buff *' lvalue ParmVar 0x12100e268 'skb' 'struct sk_buff *'     `-LabelStmt 0x121014d40 <line:63:1, col:4> 'out'       `-NullStmt 0x121014d38 <col:4> ","19214":"`-FunctionDecl 0x11f928198  line:1:19 ip_rt_proc_init 'int (void)' static inline   `-CompoundStmt 0x11f9282b8 <line:2:1, line:4:1>     `-ReturnStmt 0x11f9282a8 <line:3:2, col:9>       `-IntegerLiteral 0x11f928288 <col:9> 'int' 0 ","19496":"`-FunctionDecl 0x14a00dfc8  line:1:7 invalid d2i_X509_AUX 'int *(int **, const unsigned char **, long)'   |-ParmVarDecl 0x14a00dd60 <col:20, col:27> col:27 invalid a 'int **'   |-ParmVarDecl 0x14a00de50 <col:30, col:52> col:52 used pp 'const unsigned char **'   |-ParmVarDecl 0x14a00ded0 <col:56, col:61> col:61 used length 'long'   `-CompoundStmt 0x14a028060 <line:2:1, line:21:1>     |-DeclStmt 0x14a00e108 <line:3:5, col:27>     | `-VarDecl 0x14a00e0a0 <col:5, col:26> col:26 used q 'const unsigned char *'     |-BinaryOperator 0x14a00e1c0 <line:6:5, col:10> 'const unsigned char *' '='     | |-DeclRefExpr 0x14a00e138 <col:5> 'const unsigned char *' lvalue Var 0x14a00e0a0 'q' 'const unsigned char *'     | `-ImplicitCastExpr 0x14a00e1a8 <col:9, col:10> 'const unsigned char *' <LValueToRValue>     |   `-UnaryOperator 0x14a00e190 <col:9, col:10> 'const unsigned char *' lvalue prefix '*' cannot overflow     |     `-ImplicitCastExpr 0x14a00e178 <col:10> 'const unsigned char **' <LValueToRValue>     |       `-DeclRefExpr 0x14a00e158 <col:10> 'const unsigned char **' lvalue ParmVar 0x14a00de50 'pp' 'const unsigned char **'     |-IfStmt 0x14a0278e0 <line:9:5, line:10:16>     | |-UnaryOperator 0x14a027880 <line:9:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14a027868 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x14a027848 <col:10> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14a0278d0 <line:10:9, col:16>     |   `-RecoveryExpr 0x14a0278b0 <col:16> '<dependent type>' contains-errors lvalue     |-CompoundAssignOperator 0x14a0279e0 <line:12:5, col:21> 'long' '-=' ComputeLHSTy='long' ComputeResultTy='long'     | |-DeclRefExpr 0x14a027900 <col:5> 'long' lvalue ParmVar 0x14a00ded0 'length' 'long'     | `-BinaryOperator 0x14a0279c0 <col:15, col:21> 'long' '-'     |   |-ImplicitCastExpr 0x14a027990 <col:15, col:16> 'const unsigned char *' <LValueToRValue>     |   | `-UnaryOperator 0x14a027958 <col:15, col:16> 'const unsigned char *' lvalue prefix '*' cannot overflow     |   |   `-ImplicitCastExpr 0x14a027940 <col:16> 'const unsigned char **' <LValueToRValue>     |   |     `-DeclRefExpr 0x14a027920 <col:16> 'const unsigned char **' lvalue ParmVar 0x14a00de50 'pp' 'const unsigned char **'     |   `-ImplicitCastExpr 0x14a0279a8 <col:21> 'const unsigned char *' <LValueToRValue>     |     `-DeclRefExpr 0x14a027970 <col:21> 'const unsigned char *' lvalue Var 0x14a00e0a0 'q' 'const unsigned char *'     |-IfStmt 0x14a027aa8 <line:13:5, line:14:16>     | |-UnaryOperator 0x14a027a48 <line:13:9, col:10> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14a027a30 <col:10> 'long' <LValueToRValue>     | |   `-DeclRefExpr 0x14a027a10 <col:10> 'long' lvalue ParmVar 0x14a00ded0 'length' 'long'     | `-ReturnStmt 0x14a027a98 <line:14:9, col:16>     |   `-RecoveryExpr 0x14a027a78 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14a027e08 <line:15:5, line:16:14>     | |-UnaryOperator 0x14a027d88 <line:15:9, col:49> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x14a027d50 <col:10, col:49> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x14a027ba8 <col:10> 'int ()' Function 0x14a027af0 'd2i_X509_CERT_AUX' 'int ()'     | |   |-UnaryOperator 0x14a027d38 <col:28, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   | `-CXXDependentScopeMemberExpr 0x14a027cf0 <col:29, col:34> '<dependent type>' contains-errors lvalue ->aux     | |   |   `-RecoveryExpr 0x14a027cd0 <col:29> '<dependent type>' contains-errors lvalue     | |   |-DeclRefExpr 0x14a027c40 <col:39> 'const unsigned char **' lvalue ParmVar 0x14a00de50 'pp' 'const unsigned char **'     | |   `-DeclRefExpr 0x14a027c60 <col:43> 'long' lvalue ParmVar 0x14a00ded0 'length' 'long'     | `-GotoStmt 0x14a027df0 <line:16:9, col:14> 'err' 0x14a027da0     |-ReturnStmt 0x14a027e60 <line:17:5, col:12>     | `-RecoveryExpr 0x14a027e40 <col:12> '<dependent type>' contains-errors lvalue     |-LabelStmt 0x14a027ff8 <line:18:2, line:19:18> 'err'     | `-CallExpr 0x14a027fd0 <col:5, col:18> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14a027f50 <col:5> 'int ()' Function 0x14a027e98 'X509_free' 'int ()'     |   `-RecoveryExpr 0x14a027fb0 <col:15> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14a028050 <line:20:5, col:12>       `-RecoveryExpr 0x14a028030 <col:12> '<dependent type>' contains-errors lvalue ","19610":"`-FunctionDecl 0x156943078  col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x156943178 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x1569431e0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x156943248 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x156943120 <<invalid sloc>> Implicit 882 ","19465":"`-FunctionDecl 0x137128750  line:1:13 esp_destroy 'void (struct xfrm_state *)' static   |-ParmVarDecl 0x137128648 <col:25, col:44> col:44 used x 'struct xfrm_state *'   `-CompoundStmt 0x137140f28 <line:2:1, line:9:1>     |-DeclStmt 0x137140c98 <line:3:2, col:36>     | |-RecordDecl 0x137140a48 <col:2, col:9> col:9 struct crypto_aead     | `-VarDecl 0x137140bb8 <col:2, col:32> col:22 used aead 'struct crypto_aead *' cinit     |   `-RecoveryExpr 0x137140c58 <col:29, col:32> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x137140c20 <col:29> 'struct xfrm_state *' lvalue ParmVar 0x137128648 'x' 'struct xfrm_state *'     |-IfStmt 0x137140d10 <line:5:2, line:6:3>     | |-UnaryOperator 0x137140ce8 <line:5:6, col:7> 'int' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x137140cd0 <col:7> 'struct crypto_aead *' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x137140cb0 <col:7> 'struct crypto_aead *' contains-errors lvalue Var 0x137140bb8 'aead' 'struct crypto_aead *'     | `-ReturnStmt 0x137140d00 <line:6:3>     `-CallExpr 0x137140ee8 <line:8:2, col:23> 'int' contains-errors       |-ImplicitCastExpr 0x137140ed0 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x137140e60 <col:2> 'int ()' Function 0x137140da8 'crypto_free_aead' 'int ()'       `-ImplicitCastExpr 0x137140f10 <col:19> 'struct crypto_aead *' contains-errors <LValueToRValue>         `-DeclRefExpr 0x137140e80 <col:19> 'struct crypto_aead *' contains-errors lvalue Var 0x137140bb8 'aead' 'struct crypto_aead *' ","20112":"`-FunctionDecl 0x12c128288  line:1:1 invalid mapping_seek 'int (int *, int *)'   |-ParmVarDecl 0x12c128128 <col:14, col:35> col:35 referenced invalid mapper 'int *'   |-ParmVarDecl 0x12c1281a8 <col:43, col:53> col:53 invalid args 'int *'   `-CompoundStmt 0x12c141ea8 <line:2:1, line:25:1>     |-DeclStmt 0x12c1283c0 <line:3:5, col:15>     | `-VarDecl 0x12c128358 <col:5, col:9> col:9 used offset 'int'     |-DeclStmt 0x12c128478 <line:4:5, col:19>     | `-VarDecl 0x12c1283f0 <col:5, col:18> col:9 used whence 'int' cinit     |   `-IntegerLiteral 0x12c128458 <col:18> 'int' 0     |-IfStmt 0x12c1287a0 <line:5:5, line:6:16>     | |-UnaryOperator 0x12c128740 <line:5:9, col:56> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x12c128700 <col:10, col:56> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12c1285f0 <col:10> 'int ()' Function 0x12c128538 'PyArg_ParseTuple' 'int ()'     | |   |-RecoveryExpr 0x12c128610 <col:27> '<dependent type>' contains-errors lvalue     | |   |-StringLiteral 0x12c128670 <col:33> 'char[4]' lvalue \"STR\"     | |   |-UnaryOperator 0x12c1286b0 <col:40, col:41> 'int *' prefix '&' cannot overflow     | |   | `-DeclRefExpr 0x12c128690 <col:41> 'int' lvalue Var 0x12c128358 'offset' 'int'     | |   `-UnaryOperator 0x12c1286e8 <col:49, col:50> 'int *' prefix '&' cannot overflow     | |     `-DeclRefExpr 0x12c1286c8 <col:50> 'int' lvalue Var 0x12c1283f0 'whence' 'int'     | `-ReturnStmt 0x12c128790 <line:6:9, col:16>     |   `-RecoveryExpr 0x12c128770 <col:16> '<dependent type>' contains-errors lvalue     |-SwitchStmt 0x12c141800 <line:8:5, line:21:5>     | |-ImplicitCastExpr 0x12c1287e0 <line:8:13> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x12c1287c0 <col:13> 'int' lvalue Var 0x12c1283f0 'whence' 'int'     | `-CompoundStmt 0x12c141c90 <col:21, line:21:5>     |   |-CaseStmt 0x12c141860 <line:9:9, line:10:30>     |   | |-ConstantExpr 0x12c141848 <line:9:14> 'int'     |   | | `-IntegerLiteral 0x12c141828 <col:14> 'int' 0     |   | `-BinaryOperator 0x12c141938 <line:10:13, col:30> '<dependent type>' contains-errors '='     |   |   |-CXXDependentScopeMemberExpr 0x12c1418d0 <col:13, col:21> '<dependent type>' contains-errors lvalue ->offset     |   |   | `-RecoveryExpr 0x12c1418a8 <col:13> '<dependent type>' contains-errors lvalue     |   |   |   `-DeclRefExpr 0x12c141888 <col:13> 'int *' lvalue ParmVar 0x12c128128 'mapper' 'int *'     |   |   `-DeclRefExpr 0x12c141918 <col:30> 'int' lvalue Var 0x12c128358 'offset' 'int'     |   |-BreakStmt 0x12c141958 <line:11:13>     |   |-CaseStmt 0x12c141998 <line:12:9, line:13:31>     |   | |-ConstantExpr 0x12c141980 <line:12:14> 'int'     |   | | `-IntegerLiteral 0x12c141960 <col:14> 'int' 1     |   | `-CompoundAssignOperator 0x12c141a70 <line:13:13, col:31> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |   |-CXXDependentScopeMemberExpr 0x12c141a08 <col:13, col:21> '<dependent type>' contains-errors lvalue ->offset     |   |   | `-RecoveryExpr 0x12c1419e0 <col:13> '<dependent type>' contains-errors lvalue     |   |   |   `-DeclRefExpr 0x12c1419c0 <col:13> 'int *' lvalue ParmVar 0x12c128128 'mapper' 'int *'     |   |   `-DeclRefExpr 0x12c141a50 <col:31> 'int' lvalue Var 0x12c128358 'offset' 'int'     |   |-BreakStmt 0x12c141aa0 <line:14:13>     |   |-CaseStmt 0x12c141ae0 <line:15:9, line:16:45>     |   | |-ConstantExpr 0x12c141ac8 <line:15:14> 'int'     |   | | `-IntegerLiteral 0x12c141aa8 <col:14> 'int' 2     |   | `-BinaryOperator 0x12c141c40 <line:16:13, col:45> '<dependent type>' contains-errors '='     |   |   |-CXXDependentScopeMemberExpr 0x12c141b50 <col:13, col:21> '<dependent type>' contains-errors lvalue ->offset     |   |   | `-RecoveryExpr 0x12c141b28 <col:13> '<dependent type>' contains-errors lvalue     |   |   |   `-DeclRefExpr 0x12c141b08 <col:13> 'int *' lvalue ParmVar 0x12c128128 'mapper' 'int *'     |   |   `-BinaryOperator 0x12c141c20 <col:30, col:45> '<dependent type>' contains-errors '+'     |   |     |-CXXDependentScopeMemberExpr 0x12c141bb8 <col:30, col:38> '<dependent type>' contains-errors lvalue ->size     |   |     | `-RecoveryExpr 0x12c141b98 <col:30> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x12c141c00 <col:45> 'int' lvalue Var 0x12c128358 'offset' 'int'     |   |-BreakStmt 0x12c141c60 <line:17:13>     |   `-DefaultStmt 0x12c141c70 <line:18:9, line:20:13>     |     `-BreakStmt 0x12c141c68 <col:13>     |-CallExpr 0x12c141e38 <line:23:5, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12c141db8 <col:5> 'int ()' Function 0x12c141d00 'Py_INCREF' 'int ()'     | `-RecoveryExpr 0x12c141e18 <col:15> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12c141e98 <line:24:5, col:12>       `-RecoveryExpr 0x12c141e78 <col:12> '<dependent type>' contains-errors lvalue ","19261":"`-FunctionDecl 0x15b028848  col:5 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x15b028948 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x15b0288f0 <<invalid sloc>> Implicit 873 ","19907":"`-FunctionDecl 0x126008e98  col:17 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x126008f98 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x126008f40 <<invalid sloc>> Implicit 902 ","20061":"`-FunctionDecl 0x14e80df58  line:1:1 invalid TPM_CLOCK_ADJUST_Unmarshal 'int (int *, int **, int *)'   |-ParmVarDecl 0x14e80dd28 <col:28, col:46> col:46 invalid target 'int *'   |-ParmVarDecl 0x14e80dde0 <col:54, col:61> col:61 invalid buffer 'int **'   |-ParmVarDecl 0x14e80de60 <col:69, col:76> col:76 invalid size 'int *'   `-CompoundStmt 0x14e827f88 <line:2:1, line:23:1>     |-IfStmt 0x14e80e2e8 <line:5:5, line:7:5>     | |-BinaryOperator 0x14e80e0a8 <line:5:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x14e80e068 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14e80e088 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14e80e2d8 <col:31, line:7:5>     `-IfStmt 0x14e827f68 <line:8:5, line:21:5>       |-BinaryOperator 0x14e80e398 <line:8:9, col:15> 'int' contains-errors '=='       | |-RecoveryExpr 0x14e80e358 <col:9> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x14e80e378 <col:15> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x14e827f50 <col:31, line:21:5>         `-SwitchStmt 0x14e827e18 <line:9:2, line:20:2>           |-UnaryOperator 0x14e827e00 <line:9:10, col:11> '<dependent type>' contains-errors prefix '*' cannot overflow           | `-ImplicitCastExpr 0x14e80e3d8 <col:11> '<dependent type>' contains-errors <LValueToRValue>           |   `-RecoveryExpr 0x14e80e3b8 <col:11> '<dependent type>' contains-errors lvalue           `-CompoundStmt 0x14e827f30 <col:19, line:20:2>             |-BreakStmt 0x14e827ee8 <line:17:6>             `-DefaultStmt 0x14e827f10 <line:18:4, col:11>               `-NullStmt 0x14e827f08 <col:11> ","19920":"`-FunctionDecl 0x14001f488  line:1:13 invalid getnum 'int (int *, const char *)' static   |-ParmVarDecl 0x14001f328 <col:20, col:26> col:26 invalid a 'int *'   |-ParmVarDecl 0x14001f3a8 <col:29, col:41> col:41 used s 'const char *'   `-CompoundStmt 0x14001f968 <col:44, line:9:1>     |-IfStmt 0x14001f5d8 <line:2:2, line:4:2>     | |-UnaryOperator 0x14001f578 <line:2:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14001f560 <col:7> 'const char *' <LValueToRValue>     | |   `-DeclRefExpr 0x14001f540 <col:7> 'const char *' lvalue ParmVar 0x14001f3a8 's' 'const char *'     | `-CompoundStmt 0x14001f5c0 <col:10, line:4:2>     |   `-ReturnStmt 0x14001f5b0 <line:3:3, col:10>     |     `-IntegerLiteral 0x14001f590 <col:10> 'int' 0     |-IfStmt 0x14001f700 <line:5:2, line:7:2>     | |-BinaryOperator 0x14001f690 <line:5:6, col:12> 'int' '=='     | | |-ImplicitCastExpr 0x14001f678 <col:6, col:7> 'int' <IntegralCast>     | | | `-ImplicitCastExpr 0x14001f660 <col:6, col:7> 'char' <LValueToRValue>     | | |   `-UnaryOperator 0x14001f630 <col:6, col:7> 'const char' lvalue prefix '*' cannot overflow     | | |     `-ImplicitCastExpr 0x14001f618 <col:7> 'const char *' <LValueToRValue>     | | |       `-DeclRefExpr 0x14001f5f8 <col:7> 'const char *' lvalue ParmVar 0x14001f3a8 's' 'const char *'     | | `-CharacterLiteral 0x14001f648 <col:12> 'int' 36     | `-CompoundStmt 0x14001f6e8 <col:17, line:7:2>     |   `-UnaryOperator 0x14001f6d0 <line:6:3, col:4> 'const char *' postfix '++'     |     `-DeclRefExpr 0x14001f6b0 <col:3> 'const char *' lvalue ParmVar 0x14001f3a8 's' 'const char *'     `-ReturnStmt 0x14001f958 <line:8:2, col:30>       `-CallExpr 0x14001f928 <col:9, col:30> '<dependent type>' contains-errors         |-DeclRefExpr 0x14001f880 <col:9> 'int ()' Function 0x14001f7c8 'r_num_math' 'int ()'         |-CXXDependentScopeMemberExpr 0x14001f8c0 <col:21, col:24> '<dependent type>' contains-errors lvalue ->num         | `-RecoveryExpr 0x14001f8a0 <col:21> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x14001f908 <col:29> 'const char *' lvalue ParmVar 0x14001f3a8 's' 'const char *' ","19361":"`-FunctionDecl 0x151828728  col:6 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x15182b430 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x1518287d0 <<invalid sloc>> Implicit 873 ","19405":"`-FunctionDecl 0x12d808348  line:1:12 _nfs4_do_open_reclaim 'int (struct nfs_open_context *, struct nfs4_state *)' static   |-ParmVarDecl 0x12d128048 <col:34, col:59> col:59 used ctx 'struct nfs_open_context *'   |-ParmVarDecl 0x12d808228 <col:64, col:83> col:83 used state 'struct nfs4_state *'   `-CompoundStmt 0x12d80c760 <line:2:1, line:22:1>     |-DeclStmt 0x12d808638 <line:3:2, col:35>     | |-RecordDecl 0x12d808448 <col:2, col:9> col:9 struct nfs_delegation     | `-VarDecl 0x12d8085b8 <col:2, col:25> col:25 used delegation 'struct nfs_delegation *'     |-DeclStmt 0x12d808838 <line:4:2, col:32>     | |-RecordDecl 0x12d808650 <col:2, col:9> col:9 struct nfs4_opendata     | `-VarDecl 0x12d8087b8 <col:2, col:24> col:24 used opendata 'struct nfs4_opendata *'     |-DeclStmt 0x12d8088f0 <line:5:2, col:25>     | `-VarDecl 0x12d808868 <col:2, col:24> col:6 used delegation_type 'int' cinit     |   `-IntegerLiteral 0x12d8088d0 <col:24> 'int' 0     |-DeclStmt 0x12d808988 <line:6:2, col:12>     | `-VarDecl 0x12d808920 <col:2, col:6> col:6 used status 'int'     |-BinaryOperator 0x12d808c10 <line:8:2, col:51> 'struct nfs4_opendata *' '='     | |-DeclRefExpr 0x12d8089a0 <col:2> 'struct nfs4_opendata *' lvalue Var 0x12d8087b8 'opendata' 'struct nfs4_opendata *'     | `-ImplicitCastExpr 0x12d808bf8 <col:13, col:51> 'struct nfs4_opendata *' <IntegralToPointer>     |   `-CallExpr 0x12d808b98 <col:13, col:51> 'int'     |     |-ImplicitCastExpr 0x12d808b80 <col:13> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x12d808af0 <col:13> 'int ()' Function 0x12d808a38 'nfs4_open_recoverdata_alloc' 'int ()'     |     |-ImplicitCastExpr 0x12d808bc8 <col:41> 'struct nfs_open_context *' <LValueToRValue>     |     | `-DeclRefExpr 0x12d808b10 <col:41> 'struct nfs_open_context *' lvalue ParmVar 0x12d128048 'ctx' 'struct nfs_open_context *'     |     `-ImplicitCastExpr 0x12d808be0 <col:46> 'struct nfs4_state *' <LValueToRValue>     |       `-DeclRefExpr 0x12d808b30 <col:46> 'struct nfs4_state *' lvalue ParmVar 0x12d808228 'state' 'struct nfs4_state *'     |-IfStmt 0x12d808f30 <line:9:2, line:10:26>     | |-CallExpr 0x12d808d68 <line:9:6, col:21> 'int'     | | |-ImplicitCastExpr 0x12d808d50 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x12d808d10 <col:6> 'int ()' Function 0x12d808c58 'IS_ERR' 'int ()'     | | `-ImplicitCastExpr 0x12d808d90 <col:13> 'struct nfs4_opendata *' <LValueToRValue>     | |   `-DeclRefExpr 0x12d808d30 <col:13> 'struct nfs4_opendata *' lvalue Var 0x12d8087b8 'opendata' 'struct nfs4_opendata *'     | `-ReturnStmt 0x12d808f20 <line:10:3, col:26>     |   `-CallExpr 0x12d808ee0 <col:10, col:26> 'int'     |     |-ImplicitCastExpr 0x12d808ec8 <col:10> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x12d808e88 <col:10> 'int ()' Function 0x12d808dd0 'PTR_ERR' 'int ()'     |     `-ImplicitCastExpr 0x12d808f08 <col:18> 'struct nfs4_opendata *' <LValueToRValue>     |       `-DeclRefExpr 0x12d808ea8 <col:18> 'struct nfs4_opendata *' lvalue Var 0x12d8087b8 'opendata' 'struct nfs4_opendata *'     |-BinaryOperator 0x12d809050 <line:11:2, col:26> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12d808fb0 <col:2, col:18> '<dependent type>' contains-errors lvalue .claim     | | `-RecoveryExpr 0x12d808f88 <col:2, col:12> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12d808f50 <col:2> 'struct nfs4_opendata *' lvalue Var 0x12d8087b8 'opendata' 'struct nfs4_opendata *'     | `-RecoveryExpr 0x12d809030 <col:26> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12d80b8a8 <line:12:2, col:42> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12d8090d0 <col:2, col:18> '<dependent type>' contains-errors lvalue .fh     | | `-RecoveryExpr 0x12d8090a8 <col:2, col:12> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12d809070 <col:2> 'struct nfs4_opendata *' lvalue Var 0x12d8087b8 'opendata' 'struct nfs4_opendata *'     | `-CallExpr 0x12d80b880 <col:23, col:42> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12d80b800 <col:23> 'int ()' Function 0x12d809140 'NFS_FH' 'int ()'     |   `-RecoveryExpr 0x12d80b858 <col:30, col:37> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12d80b820 <col:30> 'struct nfs4_state *' lvalue ParmVar 0x12d808228 'state' 'struct nfs4_state *'     |-CallExpr 0x12d80b9e0 <line:13:2, col:16> 'int'     | `-ImplicitCastExpr 0x12d80b9c8 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x12d80b9a8 <col:2> 'int ()' Function 0x12d80b8f0 'rcu_read_lock' 'int ()'     |-BinaryOperator 0x12d80bd18 <line:14:2, col:62> 'struct nfs_delegation *' contains-errors '='     | |-DeclRefExpr 0x12d80ba00 <col:2> 'struct nfs_delegation *' lvalue Var 0x12d8085b8 'delegation' 'struct nfs_delegation *'     | `-CallExpr 0x12d80bcf0 <col:15, col:62> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12d80bb00 <col:15> 'int ()' Function 0x12d80ba48 'rcu_dereference' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x12d80bca8 <col:31, col:52> '<dependent type>' contains-errors lvalue ->delegation     |     `-CallExpr 0x12d80bc80 <col:31, col:49> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x12d80bc00 <col:31> 'int ()' Function 0x12d80bb48 'NFS_I' 'int ()'     |       `-RecoveryExpr 0x12d80bc58 <col:37, col:44> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x12d80bc20 <col:37> 'struct nfs4_state *' lvalue ParmVar 0x12d808228 'state' 'struct nfs4_state *'     |-IfStmt 0x12d80c120 <line:15:2, line:16:33>     | |-BinaryOperator 0x12d80c060 <line:15:6, col:89> 'int' contains-errors '&&'     | | |-BinaryOperator 0x12d80bfd0 <col:6, col:20> 'int' contains-errors '!='     | | | |-DeclRefExpr 0x12d80bd38 <col:6> 'struct nfs_delegation *' lvalue Var 0x12d8085b8 'delegation' 'struct nfs_delegation *'     | | | `-RecoveryExpr 0x12d80bfb0 <col:20> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x12d80c040 <col:28, col:89> 'int' contains-errors '!='     | |   |-CallExpr 0x12d80c010 <col:28, col:84> '<dependent type>' contains-errors     | |   | |-DeclRefExpr 0x12d80be70 <col:28> 'int ()' Function 0x12d80bdb8 'test_bit' 'int ()'     | |   | |-RecoveryExpr 0x12d80bff0 <col:37> '<dependent type>' contains-errors lvalue     | |   | `-UnaryOperator 0x12d80bf08 <col:66, col:79> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   |   `-RecoveryExpr 0x12d80bee0 <col:67, col:79> '<dependent type>' contains-errors lvalue     | |   |     `-DeclRefExpr 0x12d80bea8 <col:67> 'struct nfs_delegation *' lvalue Var 0x12d8085b8 'delegation' 'struct nfs_delegation *'     | |   `-IntegerLiteral 0x12d80bf50 <col:89> 'int' 0     | `-BinaryOperator 0x12d80c100 <line:16:3, col:33> 'int' contains-errors '='     |   |-DeclRefExpr 0x12d80c080 <col:3> 'int' lvalue Var 0x12d808868 'delegation_type' 'int'     |   `-RecoveryExpr 0x12d80c0d8 <col:21, col:33> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12d80c0a0 <col:21> 'struct nfs_delegation *' lvalue Var 0x12d8085b8 'delegation' 'struct nfs_delegation *'     |-CallExpr 0x12d80c258 <line:17:2, col:18> 'int'     | `-ImplicitCastExpr 0x12d80c240 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x12d80c220 <col:2> 'int ()' Function 0x12d80c168 'rcu_read_unlock' 'int ()'     |-BinaryOperator 0x12d80c388 <line:18:2, col:38> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12d80c320 <col:2, col:20> '<dependent type>' contains-errors lvalue .delegation_type     | | `-CXXDependentScopeMemberExpr 0x12d80c2d8 <col:2, col:18> '<dependent type>' contains-errors lvalue .u     | |   `-RecoveryExpr 0x12d80c2b0 <col:2, col:12> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x12d80c278 <col:2> 'struct nfs4_opendata *' lvalue Var 0x12d8087b8 'opendata' 'struct nfs4_opendata *'     | `-DeclRefExpr 0x12d80c368 <col:38> 'int' lvalue Var 0x12d808868 'delegation_type' 'int'     |-BinaryOperator 0x12d80c580 <line:19:2, col:44> 'int' '='     | |-DeclRefExpr 0x12d80c3a8 <col:2> 'int' lvalue Var 0x12d808920 'status' 'int'     | `-CallExpr 0x12d80c520 <col:11, col:44> 'int'     |   |-ImplicitCastExpr 0x12d80c508 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12d80c4a8 <col:11> 'int ()' Function 0x12d80c3f0 'nfs4_open_recover' 'int ()'     |   |-ImplicitCastExpr 0x12d80c550 <col:29> 'struct nfs4_opendata *' <LValueToRValue>     |   | `-DeclRefExpr 0x12d80c4c8 <col:29> 'struct nfs4_opendata *' lvalue Var 0x12d8087b8 'opendata' 'struct nfs4_opendata *'     |   `-ImplicitCastExpr 0x12d80c568 <col:39> 'struct nfs4_state *' <LValueToRValue>     |     `-DeclRefExpr 0x12d80c4e8 <col:39> 'struct nfs4_state *' lvalue ParmVar 0x12d808228 'state' 'struct nfs4_state *'     |-CallExpr 0x12d80c6d8 <line:20:2, col:28> 'int'     | |-ImplicitCastExpr 0x12d80c6c0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12d80c680 <col:2> 'int ()' Function 0x12d80c5c8 'nfs4_opendata_put' 'int ()'     | `-ImplicitCastExpr 0x12d80c700 <col:20> 'struct nfs4_opendata *' <LValueToRValue>     |   `-DeclRefExpr 0x12d80c6a0 <col:20> 'struct nfs4_opendata *' lvalue Var 0x12d8087b8 'opendata' 'struct nfs4_opendata *'     `-ReturnStmt 0x12d80c750 <line:21:2, col:9>       `-ImplicitCastExpr 0x12d80c738 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x12d80c718 <col:9> 'int' lvalue Var 0x12d808920 'status' 'int' ","19632":"`-FunctionDecl 0x1230274d8  line:1:1 invalid archive_string_append_from_wcs 'int (struct archive_string *, const int *, int)'   |-ParmVarDecl 0x12300e248 <col:32, col:55> col:55 used as 'struct archive_string *'   |-ParmVarDecl 0x12300e2e0 <line:2:5, col:20> col:20 invalid w 'const int *'   |-ParmVarDecl 0x12300e360 <col:23, col:30> col:30 invalid len 'int'   `-CompoundStmt 0x123027838 <line:3:1, line:5:1>     `-ReturnStmt 0x123027828 <line:4:2, col:68>       `-CallExpr 0x1230277e8 <col:9, col:68> '<dependent type>' contains-errors         |-DeclRefExpr 0x1230276f0 <col:9> 'int ()' Function 0x123027638 'archive_string_append_from_wcs_in_codepage' 'int ()'         |-DeclRefExpr 0x123027710 <col:52> 'struct archive_string *' lvalue ParmVar 0x12300e248 'as' 'struct archive_string *'         |-RecoveryExpr 0x123027730 <col:56> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x123027750 <col:59> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x1230277c8 <col:64> '<dependent type>' contains-errors lvalue ","20098":"`-FunctionDecl 0x10580dda8  line:1:1 onig_set_retry_limit_in_match 'int (unsigned long)'   |-ParmVarDecl 0x10580dcd8 <col:31, col:45> col:45 size 'unsigned long'   `-CompoundStmt 0x10580df00 <line:2:1, line:9:1>     `-ReturnStmt 0x10580def0 <line:7:3, col:10>       `-RecoveryExpr 0x10580ded0 <col:10> '<dependent type>' contains-errors lvalue ","19513":"`-FunctionDecl 0x12c940ca0  line:1:20 switch_mm 'void (struct mm_struct *, struct mm_struct *, struct task_struct *)' static inline   |-ParmVarDecl 0x12c928648 <col:30, col:48> col:48 used prev 'struct mm_struct *'   |-ParmVarDecl 0x12c928738 <col:54, col:72> col:72 used next 'struct mm_struct *'   |-ParmVarDecl 0x12c940b68 <line:2:9, col:29> col:29 tsk 'struct task_struct *'   `-CompoundStmt 0x12c944418 <line:3:1, line:45:1>     |-DeclStmt 0x12c940ff0 <line:4:2, col:35>     | `-VarDecl 0x12c940dc0 <col:2, col:34> col:11 used cpu 'unsigned int' cinit     |   `-ImplicitCastExpr 0x12c940fd8 <col:17, col:34> 'unsigned int' <IntegralCast>     |     `-CallExpr 0x12c940fb8 <col:17, col:34> 'int'     |       `-ImplicitCastExpr 0x12c940fa0 <col:17> 'int (*)()' <FunctionToPointerDecay>     |         `-DeclRefExpr 0x12c940f50 <col:17> 'int ()' Function 0x12c940e98 'smp_processor_id' 'int ()'     `-IfStmt 0x12c9443f8 <line:6:2, line:28:2>       |-CallExpr 0x12c9411b0 <line:6:6, col:25> 'int'       | |-ImplicitCastExpr 0x12c941198 <col:6> 'int (*)()' <FunctionToPointerDecay>       | | `-DeclRefExpr 0x12c9410e8 <col:6> 'int ()' Function 0x12c941030 'likely' 'int ()'       | `-BinaryOperator 0x12c941178 <col:13, col:21> 'int' '!='       |   |-ImplicitCastExpr 0x12c941148 <col:13> 'struct mm_struct *' <LValueToRValue>       |   | `-DeclRefExpr 0x12c941108 <col:13> 'struct mm_struct *' lvalue ParmVar 0x12c928648 'prev' 'struct mm_struct *'       |   `-ImplicitCastExpr 0x12c941160 <col:21> 'struct mm_struct *' <LValueToRValue>       |     `-DeclRefExpr 0x12c941128 <col:21> 'struct mm_struct *' lvalue ParmVar 0x12c928738 'next' 'struct mm_struct *'       `-CompoundStmt 0x12c9443c0 <col:28, line:28:2>         |-CallExpr 0x12c941488 <line:11:3, col:40> 'int'         | |-ImplicitCastExpr 0x12c941470 <col:3> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x12c9412b8 <col:3> 'int ()' Function 0x12c941200 'cpumask_set_cpu' 'int ()'         | |-ImplicitCastExpr 0x12c9414b8 <col:19> 'unsigned int' <LValueToRValue>         | | `-DeclRefExpr 0x12c9412d8 <col:19> 'unsigned int' lvalue Var 0x12c940dc0 'cpu' 'unsigned int'         | `-CallExpr 0x12c941430 <col:24, col:39> 'int'         |   |-ImplicitCastExpr 0x12c941418 <col:24> 'int (*)()' <FunctionToPointerDecay>         |   | `-DeclRefExpr 0x12c9413d8 <col:24> 'int ()' Function 0x12c941320 'mm_cpumask' 'int ()'         |   `-ImplicitCastExpr 0x12c941458 <col:35> 'struct mm_struct *' <LValueToRValue>         |     `-DeclRefExpr 0x12c9413f8 <col:35> 'struct mm_struct *' lvalue ParmVar 0x12c928738 'next' 'struct mm_struct *'         |-CallExpr 0x12c941630 <line:14:3, col:21> '<dependent type>' contains-errors         | |-DeclRefExpr 0x12c9415b0 <col:3> 'int ()' Function 0x12c9414f8 'load_cr3' 'int ()'         | `-RecoveryExpr 0x12c941608 <col:12, col:18> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x12c9415d0 <col:12> 'struct mm_struct *' lvalue ParmVar 0x12c928738 'next' 'struct mm_struct *'         |-CallExpr 0x12c9417f8 <line:15:3, col:58> '<dependent type>' contains-errors         | |-DeclRefExpr 0x12c941738 <col:3> 'int ()' Function 0x12c941680 'trace_tlb_flush' 'int ()'         | |-RecoveryExpr 0x12c9417b8 <col:19> '<dependent type>' contains-errors lvalue         | `-RecoveryExpr 0x12c9417d8 <col:45> '<dependent type>' contains-errors lvalue         |-CallExpr 0x12c944200 <line:18:3, col:42> 'int'         | |-ImplicitCastExpr 0x12c9419e0 <col:3> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x12c941908 <col:3> 'int ()' Function 0x12c941850 'cpumask_clear_cpu' 'int ()'         | |-ImplicitCastExpr 0x12c944230 <col:21> 'unsigned int' <LValueToRValue>         | | `-DeclRefExpr 0x12c941928 <col:21> 'unsigned int' lvalue Var 0x12c940dc0 'cpu' 'unsigned int'         | `-CallExpr 0x12c9419a0 <col:26, col:41> 'int'         |   |-ImplicitCastExpr 0x12c941988 <col:26> 'int (*)()' <FunctionToPointerDecay>         |   | `-DeclRefExpr 0x12c941948 <col:26> 'int ()' Function 0x12c941320 'mm_cpumask' 'int ()'         |   `-ImplicitCastExpr 0x12c9419c8 <col:37> 'struct mm_struct *' <LValueToRValue>         |     `-DeclRefExpr 0x12c941968 <col:37> 'struct mm_struct *' lvalue ParmVar 0x12c928648 'prev' 'struct mm_struct *'         `-CallExpr 0x12c944380 <line:21:3, col:19> 'int'           |-ImplicitCastExpr 0x12c944368 <col:3> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x12c944328 <col:3> 'int ()' Function 0x12c944270 'load_mm_cr4' 'int ()'           `-ImplicitCastExpr 0x12c9443a8 <col:15> 'struct mm_struct *' <LValueToRValue>             `-DeclRefExpr 0x12c944348 <col:15> 'struct mm_struct *' lvalue ParmVar 0x12c928738 'next' 'struct mm_struct *' ","19365":"`-FunctionDecl 0x14e9423a0  col:27 implicit used strdup 'char *(const char *)' extern   |-ParmVarDecl 0x14e9424a0 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x14e942448 <<invalid sloc>> Implicit 950 ","19529":"`-FunctionDecl 0x136949200  col:2 implicit used strlcpy 'unsigned long (char *, const char *, unsigned long)' extern   |-ParmVarDecl 0x136949300 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x136949368 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x1369493d0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1369492a8 <<invalid sloc>> Implicit 969 ","19765":"`-FunctionDecl 0x12f008348  line:1:1 invalid m4_define 'int (struct obstack *, int, int **)'   |-ParmVarDecl 0x12e928648 <col:12, col:28> col:28 obs 'struct obstack *'   |-ParmVarDecl 0x12e9286c8 <col:33, col:37> col:37 used argc 'int'   |-ParmVarDecl 0x12f008200 <col:43, col:56> col:56 invalid argv 'int **'   `-CompoundStmt 0x12f008668 <line:2:1, line:4:1>     `-CallExpr 0x12f008630 <line:3:3, col:42> '<dependent type>' contains-errors       |-DeclRefExpr 0x12f008560 <col:3> 'int ()' Function 0x12f0084a8 'define_macro' 'int ()'       |-DeclRefExpr 0x12f008580 <col:17> 'int' lvalue ParmVar 0x12e9286c8 'argc' 'int'       |-RecoveryExpr 0x12f0085a0 <col:23> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x12f008610 <col:29> '<dependent type>' contains-errors lvalue ","19624":"`-FunctionDecl 0x154928238  line:1:1 TEST 'int (int, int)'   |-ParmVarDecl 0x154928158 <col:6> col:6 Context 'int'   |-ParmVarDecl 0x1549280d8 <col:15> col:15 RequestFallbackAttributes 'int'   `-CompoundStmt 0x154943130 <col:42, line:25:1>     |-RecoveryExpr 0x154928398 <line:3:3> '<dependent type>' contains-errors lvalue     |-CallExpr 0x154940b98 <line:10:3, col:63> '<dependent type>' contains-errors     | |-CXXDependentScopeMemberExpr 0x154940b10 <col:3, col:38> '<dependent type>' contains-errors lvalue .WillRepeatedly     | | `-CallExpr 0x154940ae0 <col:3, col:36> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x1549284d0 <col:3> 'int ()' Function 0x154928418 'EXPECT_CALL' 'int ()'     | |   |-RecoveryExpr 0x154940a88 <col:15> '<dependent type>' contains-errors lvalue     | |   `-CallExpr 0x154940ac0 <col:21, col:35> 'int'     | |     `-ImplicitCastExpr 0x154940aa8 <col:21> 'int (*)()' <FunctionToPointerDecay>     | |       `-DeclRefExpr 0x1549285e8 <col:21> 'int ()' Function 0x154928530 'bytesReceived' 'int ()'     | `-CallExpr 0x154940b70 <col:53, col:62> 'int'     |   |-ImplicitCastExpr 0x154940b58 <col:53> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1549287d0 <col:53> 'int ()' Function 0x154928718 'Return' 'int ()'     |   `-IntegerLiteral 0x154940a00 <col:60> 'int' 10     |-CompoundStmt 0x154941658 <line:12:3, line:17:3>     | |-DeclStmt 0x154940c70 <line:13:5, col:59>     | | `-VarDecl 0x154940bd8 <col:5, col:10> col:10 used value 'int' auto     | |-CallExpr 0x154941218 <line:14:5, col:34> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x154940d68 <col:5> 'int ()' Function 0x154940cb0 'EXPECT_TRUE' 'int ()'     | | `-CallExpr 0x1549411f8 <col:17, col:33> '<dependent type>' contains-errors     | |   `-RecoveryExpr 0x1549411d0 <col:17, col:23> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x154940d88 <col:17> 'int' lvalue Var 0x154940bd8 'value' 'int'     | |-CallExpr 0x154941410 <line:15:5, col:40> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x154941320 <col:5> 'int ()' Function 0x154941268 'ASSERT_TRUE' 'int ()'     | | `-CallExpr 0x1549413f0 <col:17, col:39> '<dependent type>' contains-errors     | |   `-CXXDependentScopeMemberExpr 0x1549413a8 <col:17, col:31> '<dependent type>' contains-errors lvalue .IsInt64     | |     `-CallExpr 0x154941388 <col:17, col:29> '<dependent type>' contains-errors     | |       `-RecoveryExpr 0x154941360 <col:17, col:23> '<dependent type>' contains-errors lvalue     | |         `-DeclRefExpr 0x154941340 <col:17> 'int' lvalue Var 0x154940bd8 'value' 'int'     | `-CallExpr 0x154941628 <line:16:5, col:45> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x154941518 <col:5> 'int ()' Function 0x154941460 'EXPECT_EQ' 'int ()'     |   |-IntegerLiteral 0x154941538 <col:15> 'int' 10     |   `-CallExpr 0x154941608 <col:19, col:44> '<dependent type>' contains-errors     |     `-CXXDependentScopeMemberExpr 0x1549415c0 <col:19, col:33> '<dependent type>' contains-errors lvalue .Int64OrDie     |       `-CallExpr 0x1549415a0 <col:19, col:31> '<dependent type>' contains-errors     |         `-RecoveryExpr 0x154941578 <col:19, col:25> '<dependent type>' contains-errors lvalue     |           `-DeclRefExpr 0x154941558 <col:19> 'int' lvalue Var 0x154940bd8 'value' 'int'     `-CompoundStmt 0x154943100 <line:19:3, line:24:3>       |-DeclStmt 0x154941708 <line:20:5, col:62>       | `-VarDecl 0x1549416a0 <col:5, col:10> col:10 used value 'int' auto       |-CallExpr 0x1549417a8 <line:21:5, col:34> '<dependent type>' contains-errors       | |-DeclRefExpr 0x154941720 <col:5> 'int ()' Function 0x154940cb0 'EXPECT_TRUE' 'int ()'       | `-CallExpr 0x154941788 <col:17, col:33> '<dependent type>' contains-errors       |   `-RecoveryExpr 0x154941760 <col:17, col:23> '<dependent type>' contains-errors lvalue       |     `-DeclRefExpr 0x154941740 <col:17> 'int' lvalue Var 0x1549416a0 'value' 'int'       |-CallExpr 0x1549418c0 <line:22:5, col:41> '<dependent type>' contains-errors       | |-DeclRefExpr 0x1549417d0 <col:5> 'int ()' Function 0x154941268 'ASSERT_TRUE' 'int ()'       | `-CallExpr 0x1549418a0 <col:17, col:40> '<dependent type>' contains-errors       |   `-CXXDependentScopeMemberExpr 0x154941858 <col:17, col:31> '<dependent type>' contains-errors lvalue .IsString       |     `-CallExpr 0x154941838 <col:17, col:29> '<dependent type>' contains-errors       |       `-RecoveryExpr 0x154941810 <col:17, col:23> '<dependent type>' contains-errors lvalue       |         `-DeclRefExpr 0x1549417f0 <col:17> 'int' lvalue Var 0x1549416a0 'value' 'int'       `-CallExpr 0x1549430d0 <line:23:5, col:57> '<dependent type>' contains-errors         |-DeclRefExpr 0x1549418e8 <col:5> 'int ()' Function 0x154941460 'EXPECT_EQ' 'int ()'         |-StringLiteral 0x154941950 <col:15> 'char[4]' lvalue \"STR\"         `-CallExpr 0x1549430b0 <col:22, col:56> '<dependent type>' contains-errors           `-CXXDependentScopeMemberExpr 0x154943068 <col:22, col:50> '<dependent type>' contains-errors lvalue .value             `-CallExpr 0x154943048 <col:22, col:48> '<dependent type>' contains-errors               `-CXXDependentScopeMemberExpr 0x154943000 <col:22, col:36> '<dependent type>' contains-errors lvalue .StringOrDie                 `-CallExpr 0x1549419b8 <col:22, col:34> '<dependent type>' contains-errors                   `-RecoveryExpr 0x154941990 <col:22, col:28> '<dependent type>' contains-errors lvalue                     `-DeclRefExpr 0x154941970 <col:22> 'int' lvalue Var 0x1549416a0 'value' 'int' ","19088":"`-FunctionDecl 0x13400b370  col:12 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x13400b470 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x13400b4d8 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x13400b418 <<invalid sloc>> Implicit 887 ","20133":"`-FunctionDecl 0x12d008528  col:9 implicit used sprintf 'int (char *, const char *, ...)' extern   |-ParmVarDecl 0x12d008628 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x12d008690 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x12d0085d0 <<invalid sloc>> Implicit 906   `-FormatAttr 0x12d008708 <col:9> Implicit printf 2 3 ","19970":"`-FunctionDecl 0x1359281a8  line:1:1 INST_HANDLER 'int (int)'   |-ParmVarDecl 0x1359280d8 <col:15> col:15 des 'int'   `-CompoundStmt 0x135941820 <col:20, line:7:1>     `-IfStmt 0x135941800 <line:2:2, line:6:2>       |-BinaryOperator 0x1359283c0 <line:2:6, col:21> 'int' contains-errors '<'       | |-CXXDependentScopeMemberExpr 0x135928378 <col:6, col:13> '<dependent type>' contains-errors lvalue .round       | | `-RecoveryExpr 0x135928358 <col:6> '<dependent type>' contains-errors lvalue       | `-IntegerLiteral 0x135928318 <col:21> 'int' 16       `-CompoundStmt 0x1359287e8 <col:25, line:6:2>         `-CallExpr 0x1359287b0 <line:5:3, col:48> '<dependent type>' contains-errors           |-DeclRefExpr 0x135928530 <col:3> 'int ()' Function 0x135928478 'r_strbuf_setf' 'int ()'           |-UnaryOperator 0x135928730 <col:18, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow           | `-CXXDependentScopeMemberExpr 0x1359286e8 <col:19, col:23> '<dependent type>' contains-errors lvalue ->esil           |   `-RecoveryExpr 0x1359286c8 <col:19> '<dependent type>' contains-errors lvalue           |-StringLiteral 0x135928610 <col:29> 'char[4]' lvalue \"STR\"           `-CXXDependentScopeMemberExpr 0x135928768 <col:36, col:43> '<dependent type>' contains-errors lvalue .round             `-RecoveryExpr 0x135928748 <col:36> '<dependent type>' contains-errors lvalue ","19703":"`-FunctionDecl 0x1368282f8  col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x1368283f8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x136828460 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x1368284c8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1368283a0 <<invalid sloc>> Implicit 882 ","19463":"`-FunctionDecl 0x15280de58  line:1:14 invalid read_memory 'int (int, int)' static   |-ParmVarDecl 0x15280dcf0 <col:26, col:32> col:32 invalid klass 'int'   |-ParmVarDecl 0x15280dd70 <col:39, col:45> col:45 invalid content 'int'   `-CompoundStmt 0x152826c70 <line:2:1, line:39:1>     |-CallExpr 0x15280e2d8 <line:22:3, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15280e218 <col:3> 'int ()' Function 0x15280dfb8 'xmlSetStructuredErrorFunc' 'int ()'     | |-RecoveryExpr 0x15280e298 <col:29> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x15280e2b8 <col:35> '<dependent type>' contains-errors lvalue     |-CallExpr 0x152826680 <line:23:3, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x152826600 <col:3> 'int ()' Function 0x15280e330 'xmlSchemaFreeParserCtxt' 'int ()'     | `-RecoveryExpr 0x152826660 <col:27> '<dependent type>' contains-errors lvalue     `-IfStmt 0x1528269f0 <line:25:3, line:33:3>       |-BinaryOperator 0x152826738 <line:25:6, col:14> 'int' contains-errors '=='       | |-RecoveryExpr 0x1528266f8 <col:6> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x152826718 <col:14> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x1528269e0 <col:22, line:33:3> ","19940":"`-FunctionDecl 0x1449281a8  line:1:1 PrintChar 'int (int)'   |-ParmVarDecl 0x1449280d8 <line:2:1, col:5> col:5 used c 'int'   `-CompoundStmt 0x144928750 <line:3:1, line:7:1>     `-IfStmt 0x1449286f8 <line:4:3, line:5:16>       |-BinaryOperator 0x144928540 <line:4:7, col:52> 'int' contains-errors '>='       | |-CXXDependentScopeMemberExpr 0x144928430 <col:7, col:13> '<dependent type>' contains-errors lvalue ->w_stringp       | | `-RecoveryExpr 0x144928410 <col:7> '<dependent type>' contains-errors lvalue       | `-BinaryOperator 0x144928520 <col:26, col:52> '<dependent type>' contains-errors '-'       |   |-BinaryOperator 0x144928500 <col:26, col:43> '<dependent type>' contains-errors '+'       |   | |-CXXDependentScopeMemberExpr 0x144928498 <col:26, col:32> '<dependent type>' contains-errors lvalue ->w_string       |   | | `-RecoveryExpr 0x144928478 <col:26> '<dependent type>' contains-errors lvalue       |   | `-RecoveryExpr 0x1449284e0 <col:43> '<dependent type>' contains-errors lvalue       |   `-IntegerLiteral 0x1449283b0 <col:52> 'int' 1       `-CallExpr 0x1449286d8 <line:5:5, col:16> 'int'         `-ImplicitCastExpr 0x1449286c0 <col:5> 'int (*)()' <FunctionToPointerDecay>           `-DeclRefExpr 0x144928670 <col:5> 'int ()' Function 0x1449285b8 'PrintFlush' 'int ()' ","19746":"`-FunctionDecl 0x13002f140  line:1:20 account_numa_enqueue 'void (struct rq *, struct task_struct *)' static inline   |-ParmVarDecl 0x130012a48 <col:41, col:52> col:52 rq 'struct rq *'   |-ParmVarDecl 0x13002f028 <col:56, col:76> col:76 p 'struct task_struct *'   `-CompoundStmt 0x13002f240 <line:2:1, line:3:1> ","19964":"`-FunctionDecl 0x12700e350  line:1:13 i40e_fdir_filter_exit 'void (struct i40e_pf *)' static   |-ParmVarDecl 0x12700e248 <col:35, col:51> col:51 used pf 'struct i40e_pf *'   `-CompoundStmt 0x127029ed8 <line:2:1, line:52:1>     |-DeclStmt 0x127026838 <line:3:2, col:33>     | |-RecordDecl 0x127026648 <col:2, col:9> col:9 struct i40e_fdir_filter     | `-VarDecl 0x1270267b8 <col:2, col:27> col:27 used filter 'struct i40e_fdir_filter *'     |-DeclStmt 0x127026ad0 <line:4:2, col:39>     | |-RecordDecl 0x127026850 <col:2, col:9> col:9 struct i40e_flex_pit     | |-VarDecl 0x1270269b8 <col:2, col:24> col:24 used pit_entry 'struct i40e_flex_pit *'     | `-VarDecl 0x127026a48 <col:2, col:36> col:36 used tmp 'struct i40e_flex_pit *'     |-DeclStmt 0x127026cd8 <line:5:2, col:26>     | |-RecordDecl 0x127026ae8 <col:2, col:9> col:9 struct hlist_node     | `-VarDecl 0x127026c58 <col:2, col:21> col:21 used node2 'struct hlist_node *'     |-CallExpr 0x127026f70 <line:7:2, line:8:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x127026e20 <line:7:2> 'int ()' Function 0x127026d68 'hlist_for_each_entry_safe' 'int ()'     | |-DeclRefExpr 0x127026e40 <col:28> 'struct i40e_fdir_filter *' lvalue Var 0x1270267b8 'filter' 'struct i40e_fdir_filter *'     | |-DeclRefExpr 0x127026e60 <col:36> 'struct hlist_node *' lvalue Var 0x127026c58 'node2' 'struct hlist_node *'     | |-UnaryOperator 0x127026ee0 <line:8:7, col:12> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x127026eb8 <col:8, col:12> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x127026e80 <col:8> 'struct i40e_pf *' lvalue ParmVar 0x12700e248 'pf' 'struct i40e_pf *'     | `-RecoveryExpr 0x127026f50 <col:30> '<dependent type>' contains-errors lvalue     |-CompoundStmt 0x1270272f8 <col:41, line:11:2>     | |-CallExpr 0x127027128 <line:9:3, col:31> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x127027090 <col:3> 'int ()' Function 0x127026fd8 'hlist_del' 'int ()'     | | `-UnaryOperator 0x127027110 <col:13, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x1270270e8 <col:14, col:22> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x1270270b0 <col:14> 'struct i40e_fdir_filter *' lvalue Var 0x1270267b8 'filter' 'struct i40e_fdir_filter *'     | `-CallExpr 0x1270272b8 <line:10:3, col:15> 'int'     |   |-ImplicitCastExpr 0x1270272a0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x127027230 <col:3> 'int ()' Function 0x127027178 'kfree' 'int ()'     |   `-ImplicitCastExpr 0x1270272e0 <col:9> 'struct i40e_fdir_filter *' <LValueToRValue>     |     `-DeclRefExpr 0x127027250 <col:9> 'struct i40e_fdir_filter *' lvalue Var 0x1270267b8 'filter' 'struct i40e_fdir_filter *'     |-CallExpr 0x127027548 <line:13:2, col:70> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1270273f8 <col:2> 'int ()' Function 0x127027340 'list_for_each_entry_safe' 'int ()'     | |-DeclRefExpr 0x127027418 <col:27> 'struct i40e_flex_pit *' lvalue Var 0x1270269b8 'pit_entry' 'struct i40e_flex_pit *'     | |-DeclRefExpr 0x127027438 <col:38> 'struct i40e_flex_pit *' lvalue Var 0x127026a48 'tmp' 'struct i40e_flex_pit *'     | |-UnaryOperator 0x1270274b8 <col:43, col:48> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x127027490 <col:44, col:48> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x127027458 <col:44> 'struct i40e_pf *' lvalue ParmVar 0x12700e248 'pf' 'struct i40e_pf *'     | `-RecoveryExpr 0x127027528 <col:66> '<dependent type>' contains-errors lvalue     |-CompoundStmt 0x127029410 <col:72, line:16:2>     | |-CallExpr 0x127029350 <line:14:3, col:28> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1270292b8 <col:3> 'int ()' Function 0x127029200 'list_del' 'int ()'     | | `-UnaryOperator 0x127029338 <col:12, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x127029310 <col:13, col:24> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x1270292d8 <col:13> 'struct i40e_flex_pit *' lvalue Var 0x1270269b8 'pit_entry' 'struct i40e_flex_pit *'     | `-CallExpr 0x1270293d0 <line:15:3, col:18> 'int'     |   |-ImplicitCastExpr 0x1270293b8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x127029378 <col:3> 'int ()' Function 0x127027178 'kfree' 'int ()'     |   `-ImplicitCastExpr 0x1270293f8 <col:9> 'struct i40e_flex_pit *' <LValueToRValue>     |     `-DeclRefExpr 0x127029398 <col:9> 'struct i40e_flex_pit *' lvalue Var 0x1270269b8 'pit_entry' 'struct i40e_flex_pit *'     |-CallExpr 0x1270295a8 <line:17:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x127029510 <col:2> 'int ()' Function 0x127029458 'INIT_LIST_HEAD' 'int ()'     | `-UnaryOperator 0x127029590 <col:17, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x127029568 <col:18, col:22> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x127029530 <col:18> 'struct i40e_pf *' lvalue ParmVar 0x12700e248 'pf' 'struct i40e_pf *'     |-CallExpr 0x127029720 <line:19:2, col:70> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1270295d0 <col:2> 'int ()' Function 0x127027340 'list_for_each_entry_safe' 'int ()'     | |-DeclRefExpr 0x1270295f0 <col:27> 'struct i40e_flex_pit *' lvalue Var 0x1270269b8 'pit_entry' 'struct i40e_flex_pit *'     | |-DeclRefExpr 0x127029610 <col:38> 'struct i40e_flex_pit *' lvalue Var 0x127026a48 'tmp' 'struct i40e_flex_pit *'     | |-UnaryOperator 0x127029690 <col:43, col:48> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x127029668 <col:44, col:48> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x127029630 <col:44> 'struct i40e_pf *' lvalue ParmVar 0x12700e248 'pf' 'struct i40e_pf *'     | `-RecoveryExpr 0x127029700 <col:66> '<dependent type>' contains-errors lvalue     |-CompoundStmt 0x1270298b8 <col:72, line:22:2>     | |-CallExpr 0x1270297f8 <line:20:3, col:28> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x127029760 <col:3> 'int ()' Function 0x127029200 'list_del' 'int ()'     | | `-UnaryOperator 0x1270297e0 <col:12, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x1270297b8 <col:13, col:24> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x127029780 <col:13> 'struct i40e_flex_pit *' lvalue Var 0x1270269b8 'pit_entry' 'struct i40e_flex_pit *'     | `-CallExpr 0x127029878 <line:21:3, col:18> 'int'     |   |-ImplicitCastExpr 0x127029860 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x127029820 <col:3> 'int ()' Function 0x127027178 'kfree' 'int ()'     |   `-ImplicitCastExpr 0x1270298a0 <col:9> 'struct i40e_flex_pit *' <LValueToRValue>     |     `-DeclRefExpr 0x127029840 <col:9> 'struct i40e_flex_pit *' lvalue Var 0x1270269b8 'pit_entry' 'struct i40e_flex_pit *'     |-CallExpr 0x127029970 <line:23:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1270298d8 <col:2> 'int ()' Function 0x127029458 'INIT_LIST_HEAD' 'int ()'     | `-UnaryOperator 0x127029958 <col:17, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x127029930 <col:18, col:22> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1270298f8 <col:18> 'struct i40e_pf *' lvalue ParmVar 0x12700e248 'pf' 'struct i40e_pf *'     |-BinaryOperator 0x127029a18 <line:25:2, col:31> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1270299d0 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x127029998 <col:2> 'struct i40e_pf *' lvalue ParmVar 0x12700e248 'pf' 'struct i40e_pf *'     | `-IntegerLiteral 0x1270299f8 <col:31> 'int' 0     |-BinaryOperator 0x127029ab8 <line:26:2, col:27> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x127029a70 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x127029a38 <col:2> 'struct i40e_pf *' lvalue ParmVar 0x12700e248 'pf' 'struct i40e_pf *'     | `-IntegerLiteral 0x127029a98 <col:27> 'int' 0     |-BinaryOperator 0x127029b58 <line:27:2, col:27> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x127029b10 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x127029ad8 <col:2> 'struct i40e_pf *' lvalue ParmVar 0x12700e248 'pf' 'struct i40e_pf *'     | `-IntegerLiteral 0x127029b38 <col:27> 'int' 0     |-BinaryOperator 0x127029bf8 <line:28:2, col:28> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x127029bb0 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x127029b78 <col:2> 'struct i40e_pf *' lvalue ParmVar 0x12700e248 'pf' 'struct i40e_pf *'     | `-IntegerLiteral 0x127029bd8 <col:28> 'int' 0     `-BinaryOperator 0x127029c98 <line:29:2, col:26> '<dependent type>' contains-errors '='       |-RecoveryExpr 0x127029c50 <col:2, col:6> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x127029c18 <col:2> 'struct i40e_pf *' lvalue ParmVar 0x12700e248 'pf' 'struct i40e_pf *'       `-IntegerLiteral 0x127029c78 <col:26> 'int' 0 ","19903":"`-FunctionDecl 0x1298503c8  line:1:5 invalid options_parse 'int (int)'   |-ParmVarDecl 0x1298502f0 <col:19, col:29> col:29 invalid type 'int'   `-CompoundStmt 0x129869d90 <col:35, line:13:1>     |-CallExpr 0x129850658 <line:4:5, col:22> 'int'     | `-ImplicitCastExpr 0x129850640 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x1298505f0 <col:5> 'int ()' Function 0x129850538 'options_defaults' 'int ()'     |-IfStmt 0x129850908 <line:6:5, line:7:16>     | |-CallExpr 0x1298508a0 <line:6:8, col:55> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x129850788 <col:8> 'int ()' Function 0x1298506d0 'options_file' 'int ()'     | | |-RecoveryExpr 0x129850848 <col:21> '<dependent type>' contains-errors lvalue     | | |-RecoveryExpr 0x1298507c0 <col:41> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x129850888 <col:47, col:48> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x129850868 <col:48> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1298508f8 <line:7:9, col:16>     |   `-IntegerLiteral 0x1298508d8 <col:16> 'int' 1     |-IfStmt 0x129869b48 <line:8:5, line:9:16>     | |-CallExpr 0x129869ae8 <line:8:8, col:32> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x129869a10 <col:8> 'int ()' Function 0x129850950 'init_section' 'int ()'     | | |-IntegerLiteral 0x129869a30 <col:21> 'int' 1     | | `-UnaryOperator 0x129869ad0 <col:24, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x129869ab0 <col:25> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x129869b38 <line:9:9, col:16>     |   `-IntegerLiteral 0x129869b18 <col:16> 'int' 1     |-CallExpr 0x129869d30 <line:11:5, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x129869c48 <col:5> 'int ()' Function 0x129869b90 's_log' 'int ()'     | |-RecoveryExpr 0x129869d10 <col:11> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x129869cc0 <col:23> 'char[4]' lvalue \"STR\"     `-ReturnStmt 0x129869d80 <line:12:5, col:12>       `-IntegerLiteral 0x129869d60 <col:12> 'int' 0 ","19163":"`-FunctionDecl 0x12f90ea80  line:1:6 invalid pjsua_init_tpselector 'void (int, int *)'   |-ParmVarDecl 0x12f90e8f0 <col:28, col:47> col:47 invalid tp_id 'int'   |-ParmVarDecl 0x12f90e9a8 <line:2:7, col:25> col:25 referenced invalid sel 'int *'   `-CompoundStmt 0x12f928d30 <line:3:1, line:23:1>     |-DeclStmt 0x12f90ebd0 <line:5:5, col:18>     | `-VarDecl 0x12f90eb68 <col:5, col:14> col:14 used flag 'unsigned int'     |-CallExpr 0x12f90ee10 <line:7:5, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f90ed40 <col:5> 'int ()' Function 0x12f90ec88 'pj_bzero' 'int ()'     | |-RecoveryExpr 0x12f90ed60 <col:14> '<dependent type>' contains-errors lvalue     | `-UnaryExprOrTypeTraitExpr 0x12f90edf0 <col:19, col:30> 'unsigned long' contains-errors sizeof     |   `-ParenExpr 0x12f90edd0 <col:25, col:30> '<dependent type>' contains-errors     |     `-UnaryOperator 0x12f90edb8 <col:26, col:27> '<dependent type>' contains-errors prefix '*' cannot overflow     |       `-ImplicitCastExpr 0x12f90eda0 <col:27> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x12f90ed80 <col:27> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12f90eee8 <line:8:5, line:9:2>     | |-BinaryOperator 0x12f90eeb8 <line:8:9, col:18> 'int' contains-errors '=='     | | |-RecoveryExpr 0x12f90ee40 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12f90ee98 <col:18> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12f90eed8 <line:9:2>     |-BinaryOperator 0x12f928518 <line:14:5, col:59> 'unsigned int' contains-errors '='     | |-DeclRefExpr 0x12f9282c0 <col:5> 'unsigned int' lvalue Var 0x12f90eb68 'flag' 'unsigned int'     | `-CallExpr 0x12f9284f0 <col:12, col:59> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12f9283c0 <col:12> 'int ()' Function 0x12f928308 'pjsip_transport_get_flag_from_type' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x12f9284a8 <col:47, col:55> '<dependent type>' contains-errors lvalue ->type     |     `-RecoveryExpr 0x12f928488 <col:47> '<dependent type>' contains-errors lvalue     `-IfStmt 0x12f928d00 <line:16:5, line:22:5> has_else       |-BinaryOperator 0x12f9285b0 <line:16:9, col:16> '<dependent type>' contains-errors '&'       | |-DeclRefExpr 0x12f928538 <col:9> 'unsigned int' lvalue Var 0x12f90eb68 'flag' 'unsigned int'       | `-RecoveryExpr 0x12f928590 <col:16> '<dependent type>' contains-errors lvalue       |-CompoundStmt 0x12f928948 <col:42, line:19:5>       | |-BinaryOperator 0x12f9286b8 <line:17:2, col:14> '<dependent type>' contains-errors '='       | | |-CXXDependentScopeMemberExpr 0x12f928618 <col:2, col:7> '<dependent type>' contains-errors lvalue ->type       | | | `-RecoveryExpr 0x12f9285f0 <col:2> '<dependent type>' contains-errors lvalue       | | |   `-DeclRefExpr 0x12f9285d0 <col:2> 'int *' lvalue ParmVar 0x12f90e9a8 'sel' 'int *'       | | `-RecoveryExpr 0x12f928698 <col:14> '<dependent type>' contains-errors lvalue       | `-BinaryOperator 0x12f928928 <line:18:2, col:34> '<dependent type>' contains-errors '='       |   |-CXXDependentScopeMemberExpr 0x12f928768 <col:2, col:9> '<dependent type>' contains-errors lvalue .transport       |   | `-CXXDependentScopeMemberExpr 0x12f928720 <col:2, col:7> '<dependent type>' contains-errors lvalue ->u       |   |   `-RecoveryExpr 0x12f9286f8 <col:2> '<dependent type>' contains-errors lvalue       |   |     `-DeclRefExpr 0x12f9286d8 <col:2> 'int *' lvalue ParmVar 0x12f90e9a8 'sel' 'int *'       |   `-CXXDependentScopeMemberExpr 0x12f9288e0 <col:21, col:34> '<dependent type>' contains-errors lvalue .tp       |     `-CXXDependentScopeMemberExpr 0x12f928898 <col:21, col:29> '<dependent type>' contains-errors lvalue ->data       |       `-RecoveryExpr 0x12f928878 <col:21> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x12f928ce0 <line:19:12, line:22:5>         |-BinaryOperator 0x12f928a50 <line:20:2, col:14> '<dependent type>' contains-errors '='         | |-CXXDependentScopeMemberExpr 0x12f9289b0 <col:2, col:7> '<dependent type>' contains-errors lvalue ->type         | | `-RecoveryExpr 0x12f928988 <col:2> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x12f928968 <col:2> 'int *' lvalue ParmVar 0x12f90e9a8 'sel' 'int *'         | `-RecoveryExpr 0x12f928a30 <col:14> '<dependent type>' contains-errors lvalue         `-BinaryOperator 0x12f928cc0 <line:21:2, col:33> '<dependent type>' contains-errors '='           |-CXXDependentScopeMemberExpr 0x12f928b00 <col:2, col:9> '<dependent type>' contains-errors lvalue .listener           | `-CXXDependentScopeMemberExpr 0x12f928ab8 <col:2, col:7> '<dependent type>' contains-errors lvalue ->u           |   `-RecoveryExpr 0x12f928a90 <col:2> '<dependent type>' contains-errors lvalue           |     `-DeclRefExpr 0x12f928a70 <col:2> 'int *' lvalue ParmVar 0x12f90e9a8 'sel' 'int *'           `-CXXDependentScopeMemberExpr 0x12f928c78 <col:20, col:33> '<dependent type>' contains-errors lvalue .factory             `-CXXDependentScopeMemberExpr 0x12f928c30 <col:20, col:28> '<dependent type>' contains-errors lvalue ->data               `-RecoveryExpr 0x12f928c10 <col:20> '<dependent type>' contains-errors lvalue ","19509":"`-FunctionDecl 0x1329281a8  line:1:1 get_callout_arg_num_by_name_id 'int (int)'   |-ParmVarDecl 0x1329280d8 <col:32, col:36> col:36 used name_id 'int'   `-CompoundStmt 0x132928338 <line:2:1, line:4:1> ","19248":"`-FunctionDecl 0x1488475f0  line:1:6 invalid IncDelta 'void (int *)'   |-ParmVarDecl 0x148847528 <col:15, col:33> col:33 invalid Val 'int *'   `-CompoundStmt 0x148847a28 <line:2:1, line:10:1>     `-IfStmt 0x1488479f8 <line:3:5, line:8:17> has_else       |-RecoveryExpr 0x148847748 <line:3:9, col:39> '_Bool' contains-errors       |-CompoundAssignOperator 0x148847880 <line:5:9, col:17> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'       | |-UnaryOperator 0x148847848 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow       | | `-ImplicitCastExpr 0x148847830 <col:10> '<dependent type>' contains-errors <LValueToRValue>       | |   `-RecoveryExpr 0x148847768 <col:10> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x148847860 <col:17> '<dependent type>' contains-errors lvalue       `-CompoundAssignOperator 0x1488479c8 <line:8:9, col:17> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'         |-UnaryOperator 0x148847990 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow         | `-ImplicitCastExpr 0x148847978 <col:10> '<dependent type>' contains-errors <LValueToRValue>         |   `-RecoveryExpr 0x1488478b0 <col:10> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x1488479a8 <col:17> '<dependent type>' contains-errors lvalue ","19378":"`-FunctionDecl 0x13d8cf998  line:1:12 csnmp_init 'int (void)' static   `-CompoundStmt 0x13d8cfc88 <col:29, line:5:1>     |-CallExpr 0x13d8cfc18 <line:2:3, col:23> 'int'     | `-ImplicitCastExpr 0x13d8cfc00 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x13d8cfbb0 <col:3> 'int ()' Function 0x13d8cfaf8 'call_snmp_init_once' 'int ()'     `-ReturnStmt 0x13d8cfc78 <line:4:3, col:12>       `-ParenExpr 0x13d8cfc58 <col:10, col:12> 'int'         `-IntegerLiteral 0x13d8cfc38 <col:11> 'int' 0 ","19160":"`-FunctionDecl 0x13480dd90  line:1:6 ERR_load_crypto_strings 'void (void)'   `-CompoundStmt 0x134828518 <line:2:2, line:49:2>     |-DeclStmt 0x13480df20 <line:3:2, col:19>     | `-VarDecl 0x13480de98 <col:2, col:18> col:13 used done 'int' static cinit     |   `-IntegerLiteral 0x13480df00 <col:18> 'int' 0     |-IfStmt 0x13480df80 <line:5:2, col:12>     | |-ImplicitCastExpr 0x13480df58 <col:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x13480df38 <col:6> 'int' lvalue Var 0x13480de98 'done' 'int'     | `-ReturnStmt 0x13480df70 <col:12>     |-BinaryOperator 0x13480dfe0 <line:6:2, col:7> 'int' '='     | |-DeclRefExpr 0x13480dfa0 <col:2> 'int' lvalue Var 0x13480de98 'done' 'int'     | `-IntegerLiteral 0x13480dfc0 <col:7> 'int' 1     |-CallExpr 0x13480e198 <line:8:2, col:23> 'int'     | `-ImplicitCastExpr 0x13480e180 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x13480e130 <col:2> 'int ()' Function 0x13480e078 'ERR_load_ERR_strings' 'int ()'     |-CallExpr 0x13480e2d0 <line:9:2, col:22> 'int'     | `-ImplicitCastExpr 0x13480e2b8 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x13480e298 <col:2> 'int ()' Function 0x13480e1e0 'ERR_load_BN_strings' 'int ()'     |-CallExpr 0x134826a18 <line:11:2, col:23> 'int'     | `-ImplicitCastExpr 0x134826a00 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x13480e3d0 <col:2> 'int ()' Function 0x13480e318 'ERR_load_RSA_strings' 'int ()'     |-CallExpr 0x134826b50 <line:14:2, col:22> 'int'     | `-ImplicitCastExpr 0x134826b38 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x134826b18 <col:2> 'int ()' Function 0x134826a60 'ERR_load_DH_strings' 'int ()'     |-CallExpr 0x134826c88 <line:16:2, col:23> 'int'     | `-ImplicitCastExpr 0x134826c70 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x134826c50 <col:2> 'int ()' Function 0x134826b98 'ERR_load_EVP_strings' 'int ()'     |-CallExpr 0x134826dc0 <line:17:2, col:23> 'int'     | `-ImplicitCastExpr 0x134826da8 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x134826d88 <col:2> 'int ()' Function 0x134826cd0 'ERR_load_BUF_strings' 'int ()'     |-CallExpr 0x134826ef8 <line:18:2, col:23> 'int'     | `-ImplicitCastExpr 0x134826ee0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x134826ec0 <col:2> 'int ()' Function 0x134826e08 'ERR_load_OBJ_strings' 'int ()'     |-CallExpr 0x134827030 <line:19:2, col:23> 'int'     | `-ImplicitCastExpr 0x134827018 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x134826ff8 <col:2> 'int ()' Function 0x134826f40 'ERR_load_PEM_strings' 'int ()'     |-CallExpr 0x134827168 <line:21:2, col:23> 'int'     | `-ImplicitCastExpr 0x134827150 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x134827130 <col:2> 'int ()' Function 0x134827078 'ERR_load_DSA_strings' 'int ()'     |-CallExpr 0x1348272a0 <line:23:2, col:24> 'int'     | `-ImplicitCastExpr 0x134827288 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x134827268 <col:2> 'int ()' Function 0x1348271b0 'ERR_load_X509_strings' 'int ()'     |-CallExpr 0x1348273d8 <line:24:2, col:24> 'int'     | `-ImplicitCastExpr 0x1348273c0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x1348273a0 <col:2> 'int ()' Function 0x1348272e8 'ERR_load_ASN1_strings' 'int ()'     |-CallExpr 0x134827510 <line:25:2, col:24> 'int'     | `-ImplicitCastExpr 0x1348274f8 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x1348274d8 <col:2> 'int ()' Function 0x134827420 'ERR_load_CONF_strings' 'int ()'     |-CallExpr 0x134827648 <line:26:2, col:26> 'int'     | `-ImplicitCastExpr 0x134827630 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x134827610 <col:2> 'int ()' Function 0x134827558 'ERR_load_CRYPTO_strings' 'int ()'     |-CallExpr 0x134827780 <line:28:2, col:22> 'int'     | `-ImplicitCastExpr 0x134827768 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x134827748 <col:2> 'int ()' Function 0x134827690 'ERR_load_EC_strings' 'int ()'     |-CallExpr 0x1348278b8 <line:31:2, col:25> 'int'     | `-ImplicitCastExpr 0x1348278a0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x134827880 <col:2> 'int ()' Function 0x1348277c8 'ERR_load_ECDSA_strings' 'int ()'     |-CallExpr 0x134827a00 <line:34:2, col:24> 'int'     | `-ImplicitCastExpr 0x1348279d8 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x1348279b8 <col:2> 'int ()' Function 0x134827900 'ERR_load_ECDH_strings' 'int ()'     |-CallExpr 0x134827b38 <line:37:2, col:23> 'int'     | `-ImplicitCastExpr 0x134827b20 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x134827b00 <col:2> 'int ()' Function 0x134827a48 'ERR_load_BIO_strings' 'int ()'     |-CallExpr 0x134827c70 <line:38:2, col:25> 'int'     | `-ImplicitCastExpr 0x134827c58 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x134827c38 <col:2> 'int ()' Function 0x134827b80 'ERR_load_PKCS7_strings' 'int ()'     |-CallExpr 0x134827da8 <line:39:2, col:26> 'int'     | `-ImplicitCastExpr 0x134827d90 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x134827d70 <col:2> 'int ()' Function 0x134827cb8 'ERR_load_X509V3_strings' 'int ()'     |-CallExpr 0x134827ee0 <line:40:2, col:26> 'int'     | `-ImplicitCastExpr 0x134827ec8 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x134827ea8 <col:2> 'int ()' Function 0x134827df0 'ERR_load_PKCS12_strings' 'int ()'     |-CallExpr 0x134828018 <line:41:2, col:24> 'int'     | `-ImplicitCastExpr 0x134828000 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x134827fe0 <col:2> 'int ()' Function 0x134827f28 'ERR_load_RAND_strings' 'int ()'     |-CallExpr 0x134828150 <line:42:2, col:23> 'int'     | `-ImplicitCastExpr 0x134828138 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x134828118 <col:2> 'int ()' Function 0x134828060 'ERR_load_DSO_strings' 'int ()'     |-CallExpr 0x134828288 <line:44:2, col:26> 'int'     | `-ImplicitCastExpr 0x134828270 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x134828250 <col:2> 'int ()' Function 0x134828198 'ERR_load_ENGINE_strings' 'int ()'     |-CallExpr 0x1348283c0 <line:46:2, col:24> 'int'     | `-ImplicitCastExpr 0x1348283a8 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x134828388 <col:2> 'int ()' Function 0x1348282d0 'ERR_load_OCSP_strings' 'int ()'     `-CallExpr 0x1348284f8 <line:47:2, col:22> 'int'       `-ImplicitCastExpr 0x1348284e0 <col:2> 'int (*)()' <FunctionToPointerDecay>         `-DeclRefExpr 0x1348284c0 <col:2> 'int ()' Function 0x134828408 'ERR_load_UI_strings' 'int ()' ","19571":"`-FunctionDecl 0x1271281f0  line:1:13 invalid jas_icctxtdesc_destroy 'void (int *)' static   |-ParmVarDecl 0x127128128 <col:36, col:54> col:54 invalid attrval 'int *'   `-CompoundStmt 0x127141920 <line:2:1, line:8:1>     |-IfStmt 0x1271286d8 <line:4:2, line:5:28>     | |-CXXDependentScopeMemberExpr 0x127128400 <line:4:6, col:15> '<dependent type>' contains-errors lvalue ->ascdata     | | `-RecoveryExpr 0x1271283e0 <col:6> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x1271286b0 <line:5:3, col:28> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1271285a0 <col:3> 'int ()' Function 0x1271284e8 'jas_free' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x127128668 <col:12, col:21> '<dependent type>' contains-errors lvalue ->ascdata     |     `-RecoveryExpr 0x127128648 <col:12> '<dependent type>' contains-errors lvalue     `-IfStmt 0x127141900 <line:6:2, line:7:27>       |-CXXDependentScopeMemberExpr 0x127128778 <line:6:6, col:15> '<dependent type>' contains-errors lvalue ->ucdata       | `-RecoveryExpr 0x127128758 <col:6> '<dependent type>' contains-errors lvalue       `-CallExpr 0x1271418d8 <line:7:3, col:27> '<dependent type>' contains-errors         |-DeclRefExpr 0x1271287c0 <col:3> 'int ()' Function 0x1271284e8 'jas_free' 'int ()'         `-CXXDependentScopeMemberExpr 0x127141890 <col:12, col:21> '<dependent type>' contains-errors lvalue ->ucdata           `-RecoveryExpr 0x127141870 <col:12> '<dependent type>' contains-errors lvalue ","19865":"`-FunctionDecl 0x15580ddf0  line:1:6 invalid tr_variantFree 'void (int *)'   |-ParmVarDecl 0x15580dd28 <col:21, col:33> col:33 invalid v 'int *'   `-CompoundStmt 0x15580e318 <line:2:1, line:7:1>     `-IfStmt 0x15580e2f8 <line:3:5, line:6:5>       |-CallExpr 0x15580e040 <line:3:9, col:32> '<dependent type>' contains-errors       | |-DeclRefExpr 0x15580e000 <col:9> 'int ()' Function 0x15580df48 'tr_variantIsSomething' 'int ()'       | `-RecoveryExpr 0x15580e020 <col:31> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x15580e2e0 <line:4:5, line:6:5>         `-CallExpr 0x15580e2a0 <line:5:9, col:54> '<dependent type>' contains-errors           |-DeclRefExpr 0x15580e148 <col:9> 'int ()' Function 0x15580e090 'tr_variantWalk' 'int ()'           |-RecoveryExpr 0x15580e168 <col:24> '<dependent type>' contains-errors lvalue           |-UnaryOperator 0x15580e248 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow           | `-RecoveryExpr 0x15580e228 <col:28> '<dependent type>' contains-errors lvalue           |-RecoveryExpr 0x15580e260 <col:43> '<dependent type>' contains-errors lvalue           `-RecoveryExpr 0x15580e280 <col:49> '<dependent type>' contains-errors lvalue ","19091":"`-FunctionDecl 0x138940a88  line:1:5 perf_cpu_time_max_percent_handler 'int (struct ctl_table *, int, int)'   |-ParmVarDecl 0x138928648 <col:39, col:57> col:57 used table 'struct ctl_table *'   |-ParmVarDecl 0x1389286c8 <col:64, col:68> col:68 used write 'int'   |-ParmVarDecl 0x138928740 <line:2:5, col:10> col:10 __user 'int'   `-CompoundStmt 0x138941640 <line:4:1, line:20:1>     |-DeclStmt 0x138940ed8 <line:5:2, col:59>     | `-VarDecl 0x138940ba8 <col:2, col:58> col:6 used ret 'int' cinit     |   `-CallExpr 0x138940e90 <col:12, col:58> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x138940d40 <col:12> 'int ()' Function 0x138940c88 'proc_dointvec' 'int ()'     |     |-DeclRefExpr 0x138940d60 <col:26> 'struct ctl_table *' lvalue ParmVar 0x138928648 'table' 'struct ctl_table *'     |     |-DeclRefExpr 0x138940d80 <col:33> 'int' lvalue ParmVar 0x1389286c8 'write' 'int'     |     |-RecoveryExpr 0x138940e30 <col:40> '<dependent type>' contains-errors lvalue     |     |-RecoveryExpr 0x138940e50 <col:48> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x138940e70 <col:54> '<dependent type>' contains-errors lvalue     |-IfStmt 0x138940fe0 <line:7:2, line:8:10>     | |-BinaryOperator 0x138940f78 <line:7:6, col:14> 'int' contains-errors '||'     | | |-ImplicitCastExpr 0x138940f60 <col:6> 'int' contains-errors <LValueToRValue>     | | | `-DeclRefExpr 0x138940ef0 <col:6> 'int' contains-errors lvalue Var 0x138940ba8 'ret' 'int'     | | `-UnaryOperator 0x138940f48 <col:13, col:14> 'int' prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x138940f30 <col:14> 'int' <LValueToRValue>     | |     `-DeclRefExpr 0x138940f10 <col:14> 'int' lvalue ParmVar 0x1389286c8 'write' 'int'     | `-ReturnStmt 0x138940fd0 <line:8:3, col:10>     |   `-ImplicitCastExpr 0x138940fb8 <col:10> 'int' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x138940f98 <col:10> 'int' contains-errors lvalue Var 0x138940ba8 'ret' 'int'     |-IfStmt 0x1389415e0 <line:10:2, line:17:2> has_else     | |-BinaryOperator 0x138941150 <line:10:6, line:11:42> 'int' contains-errors '||'     | | |-BinaryOperator 0x1389410f0 <line:10:6, col:42> 'int' contains-errors '=='     | | | |-RecoveryExpr 0x1389410d0 <col:6> '<dependent type>' contains-errors lvalue     | | | `-IntegerLiteral 0x138941018 <col:42> 'int' 100     | | `-BinaryOperator 0x138941130 <line:11:6, col:42> 'int' contains-errors '=='     | |   |-RecoveryExpr 0x138941110 <col:6> '<dependent type>' contains-errors lvalue     | |   `-IntegerLiteral 0x138941070 <col:42> 'int' 0     | |-CompoundStmt 0x138941440 <col:45, line:15:2>     | | `-CallExpr 0x138941410 <line:14:3, col:39> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x138941368 <col:3> 'int ()' Function 0x1389412b0 'WRITE_ONCE' 'int ()'     | |   |-RecoveryExpr 0x1389413f0 <col:14> '<dependent type>' contains-errors lvalue     | |   `-IntegerLiteral 0x1389413a0 <col:38> 'int' 0     | `-CompoundStmt 0x1389415c8 <line:15:9, line:17:2>     |   `-CallExpr 0x1389415a8 <line:16:3, col:26> 'int'     |     `-ImplicitCastExpr 0x138941590 <col:3> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x138941538 <col:3> 'int ()' Function 0x138941480 'update_perf_cpu_limits' 'int ()'     `-ReturnStmt 0x138941630 <line:19:2, col:9>       `-IntegerLiteral 0x138941610 <col:9> 'int' 0 ","19399":"`-FunctionDecl 0x15700de38  line:1:1 SPL_METHOD 'int (int, int)'   |-ParmVarDecl 0x15700dd58 <col:12> col:12 SplFileObject 'int'   |-ParmVarDecl 0x15700dcd8 <col:27> col:27 ftruncate 'int'   `-CompoundStmt 0x157026fc0 <line:2:1, line:16:1>     |-DeclStmt 0x15700e000 <line:4:2, col:11>     | `-VarDecl 0x15700df98 <col:2, col:7> col:7 used size 'long'     |-IfStmt 0x15700e318 <line:6:2, line:8:2>     | |-RecoveryExpr 0x15700e2d0 <line:6:6, col:72> '_Bool' contains-errors     | `-CompoundStmt 0x15700e300 <col:81, line:8:2>     |   `-ReturnStmt 0x15700e2f0 <line:7:3>     |-IfStmt 0x157026a88 <line:10:2, line:13:2>     | |-UnaryOperator 0x157026928 <line:10:6, col:58> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x157026900 <col:7, col:58> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x1570266b8 <col:7> 'int ()' Function 0x157026600 'php_stream_truncate_supported' 'int ()'     | |   `-CXXDependentScopeMemberExpr 0x1570268b8 <col:37, col:52> '<dependent type>' contains-errors lvalue .stream     | |     `-CXXDependentScopeMemberExpr 0x157026870 <col:37, col:47> '<dependent type>' contains-errors lvalue .file     | |       `-CXXDependentScopeMemberExpr 0x157026828 <col:37, col:45> '<dependent type>' contains-errors lvalue ->u     | |         `-RecoveryExpr 0x157026808 <col:37> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x157026a78 <col:61, line:13:2>     `-CallExpr 0x157026f98 <line:15:2, col:76> '<dependent type>' contains-errors       |-DeclRefExpr 0x157026b88 <col:2> 'int ()' Function 0x157026ad0 'RETURN_BOOL' 'int ()'       `-BinaryOperator 0x157026f78 <col:14, col:75> 'int' contains-errors '=='         |-IntegerLiteral 0x157026ba8 <col:14> 'int' 0         `-CallExpr 0x157026f48 <col:19, col:75> '<dependent type>' contains-errors           |-DeclRefExpr 0x157026ca8 <col:19> 'int ()' Function 0x157026bf0 'php_stream_truncate_set_size' 'int ()'           |-CXXDependentScopeMemberExpr 0x157026f00 <col:48, col:63> '<dependent type>' contains-errors lvalue .stream           | `-CXXDependentScopeMemberExpr 0x157026eb8 <col:48, col:58> '<dependent type>' contains-errors lvalue .file           |   `-CXXDependentScopeMemberExpr 0x157026e70 <col:48, col:56> '<dependent type>' contains-errors lvalue ->u           |     `-RecoveryExpr 0x157026e50 <col:48> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x157026db8 <col:71> 'long' lvalue Var 0x15700df98 'size' 'long' ","19293":"`-FunctionDecl 0x134946238  line:1:5 invalid ext4_orphan_del 'int (int *, struct inode *)'   |-ParmVarDecl 0x134928928 <col:21, col:31> col:31 invalid handle 'int *'   |-ParmVarDecl 0x134928f18 <col:39, col:53> col:53 used inode 'struct inode *'   `-CompoundStmt 0x13500a3a8 <line:2:1, line:69:1>     |-DeclStmt 0x1349464d8 <line:3:2, col:24>     | |-RecordDecl 0x1349462f0 <col:2, col:9> col:9 struct list_head     | `-VarDecl 0x134946458 <col:2, col:20> col:20 used prev 'struct list_head *'     |-DeclStmt 0x134946918 <line:4:2, col:44>     | |-RecordDecl 0x1349464f0 <col:2, col:9> col:9 struct ext4_inode_info     | `-VarDecl 0x134946658 <col:2, col:43> col:26 used ei 'struct ext4_inode_info *' cinit     |   `-ImplicitCastExpr 0x1349468e8 <col:31, col:43> 'struct ext4_inode_info *' <IntegralToPointer>     |     `-CallExpr 0x1349468a8 <col:31, col:43> 'int'     |       |-ImplicitCastExpr 0x134946890 <col:31> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x134946820 <col:31> 'int ()' Function 0x134946768 'EXT4_I' 'int ()'     |       `-ImplicitCastExpr 0x1349468d0 <col:38> 'struct inode *' <LValueToRValue>     |         `-DeclRefExpr 0x134946840 <col:38> 'struct inode *' lvalue ParmVar 0x134928f18 'inode' 'struct inode *'     |-DeclStmt 0x134946b18 <line:5:2, col:26>     | |-RecordDecl 0x134946930 <col:2, col:9> col:9 struct ext4_sb_info     | `-VarDecl 0x134946a98 <col:2, col:23> col:23 used sbi 'struct ext4_sb_info *'     |-DeclStmt 0x134946ca8 <line:7:2, col:23>     | |-RecordDecl 0x134946b30 <col:2, col:9> col:9 struct ext4_iloc     | `-VarDecl 0x134946c28 <col:2, col:19> col:19 invalid iloc 'struct ext4_iloc'     |-DeclStmt 0x134946d60 <line:8:2, col:13>     | `-VarDecl 0x134946cd8 <col:2, col:12> col:6 used err 'int' cinit     |   `-IntegerLiteral 0x134946d40 <col:12> 'int' 0     |-IfStmt 0x134946f48 <line:11:2, line:12:10>     | |-BinaryOperator 0x134946ef8 <line:11:6, col:41> 'int' contains-errors '&&'     | | |-RecoveryExpr 0x134946d78 <col:6> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x134946ee0 <col:16, col:41> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-CallExpr 0x134946eb8 <col:17, col:41> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x134946e78 <col:17> 'int ()' Function 0x134946dc0 'ext4_handle_valid' 'int ()'     | |     `-RecoveryExpr 0x134946e98 <col:35> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x134946f38 <line:12:3, col:10>     |   `-IntegerLiteral 0x134946f18 <col:10> 'int' 0     |-CallExpr 0x134947260 <line:14:2, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x134947048 <col:2> 'int ()' Function 0x134946f90 'mutex_lock' 'int ()'     | `-UnaryOperator 0x134947248 <col:13, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x134947200 <col:14, col:36> '<dependent type>' contains-errors lvalue ->s_orphan_lock     |     `-CallExpr 0x1349471c8 <col:14, col:33> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x134947148 <col:14> 'int ()' Function 0x134947090 'EXT4_SB' 'int ()'     |       `-RecoveryExpr 0x1349471a0 <col:22, col:29> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x134947168 <col:22> 'struct inode *' lvalue ParmVar 0x134928f18 'inode' 'struct inode *'     |-IfStmt 0x134947490 <line:15:2, line:16:8>     | |-CallExpr 0x134947400 <line:15:6, col:30> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x134947368 <col:6> 'int ()' Function 0x1349472b0 'list_empty' 'int ()'     | | `-UnaryOperator 0x1349473e8 <col:17, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x1349473c0 <col:18, col:22> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x134947388 <col:18> 'struct ext4_inode_info *' lvalue Var 0x134946658 'ei' 'struct ext4_inode_info *'     | `-GotoStmt 0x134947478 <line:16:3, col:8> 'out' 0x134947428     |-BinaryOperator 0x1349476f0 <line:19:2, col:22> 'struct list_head *' contains-errors '='     | |-DeclRefExpr 0x134947628 <col:2> 'struct list_head *' lvalue Var 0x134946458 'prev' 'struct list_head *'     | `-CXXDependentScopeMemberExpr 0x1349476a8 <col:9, col:22> '<dependent type>' contains-errors lvalue .prev     |   `-RecoveryExpr 0x134947680 <col:9, col:13> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x134947648 <col:9> 'struct ext4_inode_info *' lvalue Var 0x134946658 'ei' 'struct ext4_inode_info *'     |-BinaryOperator 0x1349477d8 <line:20:2, col:27> 'struct ext4_sb_info *' contains-errors '='     | |-DeclRefExpr 0x134947710 <col:2> 'struct ext4_sb_info *' lvalue Var 0x134946a98 'sbi' 'struct ext4_sb_info *'     | `-CallExpr 0x1349477b0 <col:8, col:27> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x134947730 <col:8> 'int ()' Function 0x134947090 'EXT4_SB' 'int ()'     |   `-RecoveryExpr 0x134947788 <col:16, col:23> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x134947750 <col:16> 'struct inode *' lvalue ParmVar 0x134928f18 'inode' 'struct inode *'     |-CallExpr 0x1349479e0 <line:22:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1349478d8 <col:2> 'int ()' Function 0x134947820 'jbd_debug' 'int ()'     | |-IntegerLiteral 0x1349478f8 <col:12> 'int' 4     | |-StringLiteral 0x134947960 <col:15> 'char[4]' lvalue \"STR\"     | `-RecoveryExpr 0x1349479b8 <col:22, col:29> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x134947980 <col:22> 'struct inode *' lvalue ParmVar 0x134928f18 'inode' 'struct inode *'     |-CallExpr 0x134947b90 <line:24:2, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x134947af8 <col:2> 'int ()' Function 0x134947a40 'list_del_init' 'int ()'     | `-UnaryOperator 0x134947b78 <col:16, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x134947b50 <col:17, col:21> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x134947b18 <col:17> 'struct ext4_inode_info *' lvalue Var 0x134946658 'ei' 'struct ext4_inode_info *'     |-IfStmt 0x134947ca0 <line:27:2, line:28:8>     | |-BinaryOperator 0x134947c68 <line:27:6, col:25> 'int' contains-errors '&&'     | | |-RecoveryExpr 0x134947bf0 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x134947bb8 <col:6> 'struct ext4_sb_info *' lvalue Var 0x134946a98 'sbi' 'struct ext4_sb_info *'     | | `-UnaryOperator 0x134947c50 <col:24, col:25> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x134947c38 <col:25> '<dependent type>' contains-errors <LValueToRValue>     | |     `-RecoveryExpr 0x134947c18 <col:25> '<dependent type>' contains-errors lvalue     | `-GotoStmt 0x134947c88 <line:28:3, col:8> 'out' 0x134947428     |-BinaryOperator 0x134947e90 <line:30:2, col:53> 'int' contains-errors '='     | |-DeclRefExpr 0x134947cc0 <col:2> 'int' lvalue Var 0x134946cd8 'err' 'int'     | `-CallExpr 0x134947e58 <col:8, col:53> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x134947dc0 <col:8> 'int ()' Function 0x134947d08 'ext4_reserve_inode_write' 'int ()'     |   |-RecoveryExpr 0x134947de0 <col:33> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x134947e00 <col:41> 'struct inode *' lvalue ParmVar 0x134928f18 'inode' 'struct inode *'     |   `-UnaryOperator 0x134947e40 <col:48, col:49> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x134947e20 <col:49> '<dependent type>' contains-errors lvalue     |-IfStmt 0x134947f50 <line:31:2, line:32:8>     | |-ImplicitCastExpr 0x134947ed0 <line:31:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x134947eb0 <col:6> 'int' lvalue Var 0x134946cd8 'err' 'int'     | `-GotoStmt 0x134947f38 <line:32:3, col:8> 'out_err' 0x134947ee8     |-IfStmt 0x135009ac8 <line:34:2, line:54:2> has_else     | |-BinaryOperator 0x134948008 <line:34:6, col:20> 'int' contains-errors '=='     | | |-DeclRefExpr 0x134947f70 <col:6> 'struct list_head *' lvalue Var 0x134946458 'prev' 'struct list_head *'     | | `-UnaryOperator 0x134947ff0 <col:14, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x134947fc8 <col:15, col:20> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x134947f90 <col:15> 'struct ext4_sb_info *' lvalue Var 0x134946a98 'sbi' 'struct ext4_sb_info *'     | |-CompoundStmt 0x135009298 <col:30, line:42:2>     | | |-CallExpr 0x135008c20 <line:36:3, col:33> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x134948168 <col:3> 'int ()' Function 0x1349480b0 'BUFFER_TRACE' 'int ()'     | | | |-RecoveryExpr 0x1349481c0 <col:16, col:21> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x134948188 <col:16> 'struct ext4_sb_info *' lvalue Var 0x134946a98 'sbi' 'struct ext4_sb_info *'     | | | `-StringLiteral 0x135008c00 <col:28> 'char[4]' lvalue \"STR\"     | | |-BinaryOperator 0x135008e20 <line:37:3, col:57> 'int' contains-errors '='     | | | |-DeclRefExpr 0x135008c50 <col:3> 'int' lvalue Var 0x134946cd8 'err' 'int'     | | | `-CallExpr 0x135008df0 <col:9, col:57> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x135008d50 <col:9> 'int ()' Function 0x135008c98 'ext4_journal_get_write_access' 'int ()'     | | |   |-RecoveryExpr 0x135008d70 <col:39> '<dependent type>' contains-errors lvalue     | | |   `-RecoveryExpr 0x135008dc8 <col:47, col:52> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x135008d90 <col:47> 'struct ext4_sb_info *' lvalue Var 0x134946a98 'sbi' 'struct ext4_sb_info *'     | | |-IfStmt 0x135008ee0 <line:38:3, line:39:9>     | | | |-ImplicitCastExpr 0x135008e60 <line:38:7> 'int' <LValueToRValue>     | | | | `-DeclRefExpr 0x135008e40 <col:7> 'int' lvalue Var 0x134946cd8 'err' 'int'     | | | `-GotoStmt 0x135008ec8 <line:39:4, col:9> 'out_brelse' 0x135008e78     | | `-BinaryOperator 0x135009278 <line:41:3, col:52> 'int' contains-errors '='     | |   |-DeclRefExpr 0x1350090a8 <col:3> 'int' lvalue Var 0x134946cd8 'err' 'int'     | |   `-CallExpr 0x135009248 <col:9, col:52> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x1350091a8 <col:9> 'int ()' Function 0x1350090f0 'ext4_handle_dirty_super' 'int ()'     | |     |-RecoveryExpr 0x1350091c8 <col:33> '<dependent type>' contains-errors lvalue     | |     `-RecoveryExpr 0x135009220 <col:41, col:48> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x1350091e8 <col:41> 'struct inode *' lvalue ParmVar 0x134928f18 'inode' 'struct inode *'     | `-CompoundStmt 0x135009a90 <line:42:9, line:54:2>     |   |-DeclStmt 0x135009388 <line:43:3, col:25>     |   | `-VarDecl 0x135009320 <col:3, col:20> col:20 invalid iloc2 'struct ext4_iloc'     |   |-DeclStmt 0x1350095b0 <line:44:3, line:45:66>     |   | `-VarDecl 0x135009428 <line:44:3, col:17> col:17 used i_prev 'struct inode *'     |   |-BinaryOperator 0x135009778 <line:49:3, col:56> 'int' contains-errors '='     |   | |-DeclRefExpr 0x135009688 <col:3> 'int' lvalue Var 0x134946cd8 'err' 'int'     |   | `-CallExpr 0x135009740 <col:9, col:56> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x1350096a8 <col:9> 'int ()' Function 0x134947d08 'ext4_reserve_inode_write' 'int ()'     |   |   |-RecoveryExpr 0x1350096c8 <col:34> '<dependent type>' contains-errors lvalue     |   |   |-DeclRefExpr 0x1350096e8 <col:42> 'struct inode *' lvalue Var 0x135009428 'i_prev' 'struct inode *'     |   |   `-UnaryOperator 0x135009728 <col:50, col:51> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |     `-RecoveryExpr 0x135009708 <col:51> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x1350097e8 <line:50:3, line:51:9>     |   | |-ImplicitCastExpr 0x1350097b8 <line:50:7> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x135009798 <col:7> 'int' lvalue Var 0x134946cd8 'err' 'int'     |   | `-GotoStmt 0x1350097d0 <line:51:4, col:9> 'out_brelse' 0x135008e78     |   `-BinaryOperator 0x135009a70 <line:53:3, col:52> 'int' contains-errors '='     |     |-DeclRefExpr 0x1350098a0 <col:3> 'int' lvalue Var 0x134946cd8 'err' 'int'     |     `-CallExpr 0x135009a38 <col:9, col:52> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x1350099a0 <col:9> 'int ()' Function 0x1350098e8 'ext4_mark_iloc_dirty' 'int ()'     |       |-RecoveryExpr 0x1350099c0 <col:30> '<dependent type>' contains-errors lvalue     |       |-DeclRefExpr 0x1350099e0 <col:38> 'struct inode *' lvalue Var 0x135009428 'i_prev' 'struct inode *'     |       `-UnaryOperator 0x135009a20 <col:46, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow     |         `-RecoveryExpr 0x135009a00 <col:47> '<dependent type>' contains-errors lvalue     |-IfStmt 0x135009b48 <line:55:2, line:56:8>     | |-ImplicitCastExpr 0x135009b18 <line:55:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x135009af8 <col:6> 'int' lvalue Var 0x134946cd8 'err' 'int'     | `-GotoStmt 0x135009b30 <line:56:3, col:8> 'out_brelse' 0x135008e78     |-ImplicitCastExpr 0x135009c50 <line:57:2, col:23> '<dependent type>' contains-errors <LValueToRValue>     | `-RecoveryExpr 0x135009c20 <col:2, col:23> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x135009bc0 <col:2, col:19> 'int'     |   | |-ImplicitCastExpr 0x135009ba8 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x135009b68 <col:2> 'int ()' Function 0x1349474d8 'NEXT_ORPHAN' 'int ()'     |   | `-ImplicitCastExpr 0x135009be8 <col:14> 'struct inode *' <LValueToRValue>     |   |   `-DeclRefExpr 0x135009b88 <col:14> 'struct inode *' lvalue ParmVar 0x134928f18 'inode' 'struct inode *'     |   `-IntegerLiteral 0x135009c00 <col:23> 'int' 0     |-BinaryOperator 0x135009d58 <line:58:2, col:49> 'int' contains-errors '='     | |-DeclRefExpr 0x135009c68 <col:2> 'int' lvalue Var 0x134946cd8 'err' 'int'     | `-CallExpr 0x135009d20 <col:8, col:49> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x135009c88 <col:8> 'int ()' Function 0x1350098e8 'ext4_mark_iloc_dirty' 'int ()'     |   |-RecoveryExpr 0x135009ca8 <col:29> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x135009cc8 <col:37> 'struct inode *' lvalue ParmVar 0x134928f18 'inode' 'struct inode *'     |   `-UnaryOperator 0x135009d08 <col:44, col:45> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x135009ce8 <col:45> '<dependent type>' contains-errors lvalue     |-LabelStmt 0x135009f28 <line:60:1, line:61:33> 'out_err'     | `-CallExpr 0x135009ef8 <col:2, col:33> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x135009e58 <col:2> 'int ()' Function 0x135009da0 'ext4_std_error' 'int ()'     |   |-RecoveryExpr 0x135009eb0 <col:17, col:24> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x135009e78 <col:17> 'struct inode *' lvalue ParmVar 0x134928f18 'inode' 'struct inode *'     |   `-DeclRefExpr 0x135009ed8 <col:30> 'int' lvalue Var 0x134946cd8 'err' 'int'     |-LabelStmt 0x13500a178 <line:62:1, line:63:51> 'out'     | `-CallExpr 0x13500a150 <col:2, col:51> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13500a028 <col:2> 'int ()' Function 0x135009f70 'mutex_unlock' 'int ()'     |   `-UnaryOperator 0x13500a138 <col:15, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-CXXDependentScopeMemberExpr 0x13500a0f0 <col:16, col:38> '<dependent type>' contains-errors lvalue ->s_orphan_lock     |       `-CallExpr 0x13500a0c8 <col:16, col:35> '<dependent type>' contains-errors     |         |-DeclRefExpr 0x13500a048 <col:16> 'int ()' Function 0x134947090 'EXT4_SB' 'int ()'     |         `-RecoveryExpr 0x13500a0a0 <col:24, col:31> '<dependent type>' contains-errors lvalue     |           `-DeclRefExpr 0x13500a068 <col:24> 'struct inode *' lvalue ParmVar 0x134928f18 'inode' 'struct inode *'     |-ReturnStmt 0x13500a1d0 <line:64:2, col:9>     | `-ImplicitCastExpr 0x13500a1b8 <col:9> 'int' <LValueToRValue>     |   `-DeclRefExpr 0x13500a198 <col:9> 'int' lvalue Var 0x134946cd8 'err' 'int'     |-LabelStmt 0x13500a370 <line:66:1, line:67:16> 'out_brelse'     | `-CallExpr 0x13500a348 <col:2, col:16> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13500a2c0 <col:2> 'int ()' Function 0x13500a208 'brelse' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x13500a300 <col:9, col:14> '<dependent type>' contains-errors lvalue .bh     |     `-RecoveryExpr 0x13500a2e0 <col:9> '<dependent type>' contains-errors lvalue     `-GotoStmt 0x13500a390 <line:68:2, col:7> 'out_err' 0x134947ee8 ","20029":"`-FunctionDecl 0x12b00de58  line:1:13 invalid IsCharOfType 'int (unsigned char, int)' inline   |-ParmVarDecl 0x12b00dcf0 <col:26, col:40> col:40 used c 'unsigned char'   |-ParmVarDecl 0x12b00dd70 <col:43, col:59> col:59 invalid type 'int'   `-CompoundStmt 0x12b00df68 <col:65, line:3:1> ","19834":"`-FunctionDecl 0x1201282b8  line:1:1 invalid set_vterm_palette 'int (int *, long *)'   |-ParmVarDecl 0x120128128 <col:19, col:26> col:26 invalid vterm 'int *'   |-ParmVarDecl 0x1201281d8 <col:33, col:41> col:41 used rgb 'long *'   `-CompoundStmt 0x120142da8 <line:2:1, line:13:1>     |-DeclStmt 0x120128410 <line:3:5, col:19>     | `-VarDecl 0x120128388 <col:5, col:18> col:10 used index 'int' cinit     |   `-IntegerLiteral 0x1201283f0 <col:18> 'int' 0     `-ForStmt 0x120142d70 <line:5:5, line:12:5>       |-<<<NULL>>>       |-<<<NULL>>>       |-BinaryOperator 0x120128660 <line:5:12, col:20> 'int' '<'       | |-ImplicitCastExpr 0x120128648 <col:12> 'int' <LValueToRValue>       | | `-DeclRefExpr 0x120128608 <col:12> 'int' lvalue Var 0x120128388 'index' 'int'       | `-IntegerLiteral 0x120128628 <col:20> 'int' 16       |-UnaryOperator 0x1201286a0 <col:24, col:29> 'int' postfix '++'       | `-DeclRefExpr 0x120128680 <col:24> 'int' lvalue Var 0x120128388 'index' 'int'       `-CompoundStmt 0x120142d58 <line:6:5, line:12:5>         `-CallExpr 0x120142d20 <line:11:2, col:52> '<dependent type>' contains-errors           |-DeclRefExpr 0x120142c08 <col:2> 'int ()' Function 0x120142b50 'vterm_state_set_palette_color' 'int ()'           |-RecoveryExpr 0x120142cc8 <col:32> '<dependent type>' contains-errors lvalue           |-DeclRefExpr 0x120142c40 <col:39> 'int' lvalue Var 0x120128388 'index' 'int'           `-UnaryOperator 0x120142d08 <col:46, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow             `-RecoveryExpr 0x120142ce8 <col:47> '<dependent type>' contains-errors lvalue ","19134":"`-FunctionDecl 0x13c128758  line:1:5 fixup_exception 'int (struct pt_regs *)'   |-ParmVarDecl 0x13c128648 <col:21, col:37> col:37 used regs 'struct pt_regs *'   `-CompoundStmt 0x13c141648 <line:2:1, line:34:1>     |-DeclStmt 0x13c140c38 <line:3:2, col:43>     | |-RecordDecl 0x13c140a50 <col:8, col:15> col:15 struct exception_table_entry     | `-VarDecl 0x13c140bb8 <col:2, col:38> col:38 used fixup 'const struct exception_table_entry *'     |-DeclStmt 0x13c140cd0 <line:4:2, col:22>     | `-VarDecl 0x13c140c68 <col:2, col:16> col:16 used new_ip 'unsigned long'     |-BinaryOperator 0x13c140ed8 <line:20:2, col:42> 'const struct exception_table_entry *' contains-errors '='     | |-DeclRefExpr 0x13c140ce8 <col:2> 'const struct exception_table_entry *' lvalue Var 0x13c140bb8 'fixup' 'const struct exception_table_entry *'     | `-CallExpr 0x13c140eb0 <col:10, col:42> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13c140e30 <col:10> 'int ()' Function 0x13c140d78 'search_exception_tables' 'int ()'     |   `-RecoveryExpr 0x13c140e88 <col:34, col:40> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13c140e50 <col:34> 'struct pt_regs *' lvalue ParmVar 0x13c128648 'regs' 'struct pt_regs *'     |-IfStmt 0x13c1415f8 <line:21:2, line:31:2>     | |-ImplicitCastExpr 0x13c140f18 <line:21:6> 'const struct exception_table_entry *' <LValueToRValue>     | | `-DeclRefExpr 0x13c140ef8 <col:6> 'const struct exception_table_entry *' lvalue Var 0x13c140bb8 'fixup' 'const struct exception_table_entry *'     | `-CompoundStmt 0x13c1415c8 <col:13, line:31:2>     |   |-BinaryOperator 0x13c141110 <line:22:3, col:31> 'unsigned long' '='     |   | |-DeclRefExpr 0x13c140f30 <col:3> 'unsigned long' lvalue Var 0x13c140c68 'new_ip' 'unsigned long'     |   | `-ImplicitCastExpr 0x13c1410f8 <col:12, col:31> 'unsigned long' <IntegralCast>     |   |   `-CallExpr 0x13c1410b8 <col:12, col:31> 'int'     |   |     |-ImplicitCastExpr 0x13c1410a0 <col:12> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x13c141030 <col:12> 'int ()' Function 0x13c140f78 'ex_fixup_addr' 'int ()'     |   |     `-ImplicitCastExpr 0x13c1410e0 <col:26> 'const struct exception_table_entry *' <LValueToRValue>     |   |       `-DeclRefExpr 0x13c141050 <col:26> 'const struct exception_table_entry *' lvalue Var 0x13c140bb8 'fixup' 'const struct exception_table_entry *'     |   |-IfStmt 0x13c1414d8 <line:24:3, line:28:3>     |   | |-BinaryOperator 0x13c141270 <line:24:7, col:50> 'int' contains-errors '>='     |   | | |-BinaryOperator 0x13c1411f0 <col:7, col:29> '<dependent type>' contains-errors '-'     |   | | | |-RecoveryExpr 0x13c141168 <col:7, col:14> '<dependent type>' contains-errors lvalue     |   | | | | `-DeclRefExpr 0x13c141130 <col:7> 'const struct exception_table_entry *' lvalue Var 0x13c140bb8 'fixup' 'const struct exception_table_entry *'     |   | | | `-RecoveryExpr 0x13c1411c8 <col:22, col:29> '<dependent type>' contains-errors lvalue     |   | | |   `-DeclRefExpr 0x13c141190 <col:22> 'const struct exception_table_entry *' lvalue Var 0x13c140bb8 'fixup' 'const struct exception_table_entry *'     |   | | `-BinaryOperator 0x13c141250 <col:37, col:50> 'int' '-'     |   | |   |-IntegerLiteral 0x13c141210 <col:37> 'int' 2147483632     |   | |   `-IntegerLiteral 0x13c141230 <col:50> 'int' 4     |   | `-CompoundStmt 0x13c1414b8 <col:53, line:28:3>     |   |   |-BinaryOperator 0x13c141410 <line:26:4, col:41> '<dependent type>' contains-errors '='     |   |   | |-RecoveryExpr 0x13c1413c8 <col:4, col:27> '<dependent type>' contains-errors lvalue     |   |   | | `-CallExpr 0x13c1413a8 <col:4, col:24> 'int'     |   |   | |   `-ImplicitCastExpr 0x13c141390 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | |     `-DeclRefExpr 0x13c141370 <col:4> 'int ()' Function 0x13c1412b8 'current_thread_info' 'int ()'     |   |   | `-IntegerLiteral 0x13c1413f0 <col:41> 'int' 1     |   |   `-CompoundAssignOperator 0x13c141488 <line:27:4, col:14> 'unsigned long' '-=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'     |   |     |-DeclRefExpr 0x13c141430 <col:4> 'unsigned long' lvalue Var 0x13c140c68 'new_ip' 'unsigned long'     |   |     `-ImplicitCastExpr 0x13c141470 <col:14> 'unsigned long' <IntegralCast>     |   |       `-IntegerLiteral 0x13c141450 <col:14> 'int' 2147483632     |   |-BinaryOperator 0x13c141578 <line:29:3, col:14> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x13c141530 <col:3, col:9> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x13c1414f8 <col:3> 'struct pt_regs *' lvalue ParmVar 0x13c128648 'regs' 'struct pt_regs *'     |   | `-DeclRefExpr 0x13c141558 <col:14> 'unsigned long' lvalue Var 0x13c140c68 'new_ip' 'unsigned long'     |   `-ReturnStmt 0x13c1415b8 <line:30:3, col:10>     |     `-IntegerLiteral 0x13c141598 <col:10> 'int' 1     `-ReturnStmt 0x13c141638 <line:33:2, col:9>       `-IntegerLiteral 0x13c141618 <col:9> 'int' 0 ","19747":"`-FunctionDecl 0x13f00e038  line:1:12 invalid jpc_cox_getcompparms 'int (int *, int *, int *, int, int *)' static   |-ParmVarDecl 0x13f00dd28 <col:33, col:43> col:43 referenced invalid ms 'int *'   |-ParmVarDecl 0x13f00dda8 <col:47, col:61> col:61 referenced invalid cstate 'int *'   |-ParmVarDecl 0x13f00de28 <line:2:3, col:17> col:17 invalid in 'int *'   |-ParmVarDecl 0x13f00dea8 <col:21, col:25> col:25 used prtflag 'int'   |-ParmVarDecl 0x13f00df28 <col:34, col:47> col:47 referenced invalid compparms 'int *'   `-CompoundStmt 0x13f028f08 <line:3:1, line:45:1>     |-DeclStmt 0x13f00e188 <line:5:2, col:7>     | `-VarDecl 0x13f00e120 <col:2, col:6> col:6 used i 'int'     |-BinaryOperator 0x13f00e208 <line:8:2, col:7> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13f00e1c0 <col:2> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13f00e1a0 <col:2> 'int *' lvalue ParmVar 0x13f00dd28 'ms' 'int *'     | `-IntegerLiteral 0x13f00e1e8 <col:7> 'int' 0     |-BinaryOperator 0x13f00e290 <line:9:2, col:11> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13f00e248 <col:2> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13f00e228 <col:2> 'int *' lvalue ParmVar 0x13f00dda8 'cstate' 'int *'     | `-IntegerLiteral 0x13f00e270 <col:11> 'int' 0     |-IfStmt 0x13f0279a0 <line:11:2, line:17:2>     | |-BinaryOperator 0x13f027920 <line:11:6, line:15:39> 'int' contains-errors '||'     | | |-BinaryOperator 0x13f027810 <line:11:6, line:14:40> 'int' contains-errors '||'     | | | |-BinaryOperator 0x13f027700 <line:11:6, line:13:46> 'int' contains-errors '||'     | | | | |-BinaryOperator 0x13f0275f0 <line:11:6, line:12:45> 'int' contains-errors '||'     | | | | | |-CallExpr 0x13f0274d0 <line:11:6, col:43> '<dependent type>' contains-errors     | | | | | | |-DeclRefExpr 0x13f027410 <col:6> 'int ()' Function 0x13f00e358 'jpc_getuint8' 'int ()'     | | | | | | |-RecoveryExpr 0x13f027430 <col:19> '<dependent type>' contains-errors lvalue     | | | | | | `-UnaryOperator 0x13f0274b8 <col:23, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | | | |   `-CXXDependentScopeMemberExpr 0x13f027470 <col:24, col:35> '<dependent type>' contains-errors lvalue ->numdlvls     | | | | | |     `-RecoveryExpr 0x13f027450 <col:24> '<dependent type>' contains-errors lvalue     | | | | | `-CallExpr 0x13f0275c0 <line:12:4, col:45> '<dependent type>' contains-errors     | | | | |   |-DeclRefExpr 0x13f027500 <col:4> 'int ()' Function 0x13f00e358 'jpc_getuint8' 'int ()'     | | | | |   |-RecoveryExpr 0x13f027520 <col:17> '<dependent type>' contains-errors lvalue     | | | | |   `-UnaryOperator 0x13f0275a8 <col:21, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | | |     `-CXXDependentScopeMemberExpr 0x13f027560 <col:22, col:33> '<dependent type>' contains-errors lvalue ->cblkwidthval     | | | | |       `-RecoveryExpr 0x13f027540 <col:22> '<dependent type>' contains-errors lvalue     | | | | `-CallExpr 0x13f0276d0 <line:13:4, col:46> '<dependent type>' contains-errors     | | | |   |-DeclRefExpr 0x13f027610 <col:4> 'int ()' Function 0x13f00e358 'jpc_getuint8' 'int ()'     | | | |   |-RecoveryExpr 0x13f027630 <col:17> '<dependent type>' contains-errors lvalue     | | | |   `-UnaryOperator 0x13f0276b8 <col:21, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | |     `-CXXDependentScopeMemberExpr 0x13f027670 <col:22, col:33> '<dependent type>' contains-errors lvalue ->cblkheightval     | | | |       `-RecoveryExpr 0x13f027650 <col:22> '<dependent type>' contains-errors lvalue     | | | `-CallExpr 0x13f0277e0 <line:14:4, col:40> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x13f027720 <col:4> 'int ()' Function 0x13f00e358 'jpc_getuint8' 'int ()'     | | |   |-RecoveryExpr 0x13f027740 <col:17> '<dependent type>' contains-errors lvalue     | | |   `-UnaryOperator 0x13f0277c8 <col:21, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |     `-CXXDependentScopeMemberExpr 0x13f027780 <col:22, col:33> '<dependent type>' contains-errors lvalue ->cblksty     | | |       `-RecoveryExpr 0x13f027760 <col:22> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x13f0278f0 <line:15:4, col:39> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x13f027830 <col:4> 'int ()' Function 0x13f00e358 'jpc_getuint8' 'int ()'     | |   |-RecoveryExpr 0x13f027850 <col:17> '<dependent type>' contains-errors lvalue     | |   `-UnaryOperator 0x13f0278d8 <col:21, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-CXXDependentScopeMemberExpr 0x13f027890 <col:22, col:33> '<dependent type>' contains-errors lvalue ->qmfbid     | |       `-RecoveryExpr 0x13f027870 <col:22> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13f027988 <col:42, line:17:2>     |   `-ReturnStmt 0x13f027978 <line:16:3, col:11>     |     `-UnaryOperator 0x13f027960 <col:10, col:11> 'int' prefix '-'     |       `-IntegerLiteral 0x13f027940 <col:11> 'int' 1     |-IfStmt 0x13f027ae8 <line:18:2, line:20:2>     | |-BinaryOperator 0x13f027a48 <line:18:6, col:28> 'int' contains-errors '>'     | | |-CXXDependentScopeMemberExpr 0x13f0279e0 <col:6, col:17> '<dependent type>' contains-errors lvalue ->numdlvls     | | | `-RecoveryExpr 0x13f0279c0 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x13f027a28 <col:28> 'int' 32     | `-CompoundStmt 0x13f027ad0 <col:32, line:20:2>     |   `-GotoStmt 0x13f027ab8 <line:19:3, col:8> 'error' 0x13f027a68     |-BinaryOperator 0x13f027c40 <line:21:2, col:46> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13f027b50 <col:2, col:13> '<dependent type>' contains-errors lvalue ->numrlvls     | | `-RecoveryExpr 0x13f027b28 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13f027b08 <col:2> 'int *' lvalue ParmVar 0x13f00df28 'compparms' 'int *'     | `-BinaryOperator 0x13f027c20 <col:24, col:46> '<dependent type>' contains-errors '+'     |   |-CXXDependentScopeMemberExpr 0x13f027bb8 <col:24, col:35> '<dependent type>' contains-errors lvalue ->numdlvls     |   | `-RecoveryExpr 0x13f027b98 <col:24> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x13f027c00 <col:46> 'int' 1     |-IfStmt 0x13f027d70 <line:22:2, line:24:2>     | |-BinaryOperator 0x13f027d20 <line:22:6, col:28> 'int' contains-errors '>'     | | |-CXXDependentScopeMemberExpr 0x13f027c80 <col:6, col:17> '<dependent type>' contains-errors lvalue ->numrlvls     | | | `-RecoveryExpr 0x13f027c60 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13f027d00 <col:28> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13f027d58 <col:42, line:24:2>     |   `-GotoStmt 0x13f027d40 <line:23:3, col:8> 'error' 0x13f027a68     |-IfStmt 0x13f028b18 <line:25:2, line:35:2>     | |-ImplicitCastExpr 0x13f027db0 <line:25:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x13f027d90 <col:6> 'int' lvalue ParmVar 0x13f00dea8 'prtflag' 'int'     | `-CompoundStmt 0x13f028af8 <col:15, line:35:2>     |   |-ForStmt 0x13f028998 <line:26:3, line:32:3>     |   | |-BinaryOperator 0x13f027e08 <line:26:8, col:12> 'int' '='     |   | | |-DeclRefExpr 0x13f027dc8 <col:8> 'int' lvalue Var 0x13f00e120 'i' 'int'     |   | | `-IntegerLiteral 0x13f027de8 <col:12> 'int' 0     |   | |-<<<NULL>>>     |   | |-BinaryOperator 0x13f027eb0 <col:15, col:30> 'int' contains-errors '<'     |   | | |-DeclRefExpr 0x13f027e28 <col:15> 'int' lvalue Var 0x13f00e120 'i' 'int'     |   | | `-CXXDependentScopeMemberExpr 0x13f027e68 <col:19, col:30> '<dependent type>' contains-errors lvalue ->numrlvls     |   | |   `-RecoveryExpr 0x13f027e48 <col:19> '<dependent type>' contains-errors lvalue     |   | |-UnaryOperator 0x13f027ef0 <col:40, col:42> 'int' prefix '++'     |   | | `-DeclRefExpr 0x13f027ed0 <col:42> 'int' lvalue Var 0x13f00e120 'i' 'int'     |   | `-CompoundStmt 0x13f028978 <col:45, line:32:3>     |   |   |-IfStmt 0x13f028040 <line:27:4, line:29:4>     |   |   | |-CallExpr 0x13f027fe0 <line:27:8, col:29> '<dependent type>' contains-errors     |   |   | | |-DeclRefExpr 0x13f027f08 <col:8> 'int ()' Function 0x13f00e358 'jpc_getuint8' 'int ()'     |   |   | | |-RecoveryExpr 0x13f027f28 <col:21> '<dependent type>' contains-errors lvalue     |   |   | | `-UnaryOperator 0x13f027fc8 <col:25, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   | |   `-RecoveryExpr 0x13f027fa8 <col:26> '<dependent type>' contains-errors lvalue     |   |   | `-CompoundStmt 0x13f028028 <col:32, line:29:4>     |   |   |   `-GotoStmt 0x13f028010 <line:28:5, col:10> 'error' 0x13f027a68     |   |   `-BinaryOperator 0x13f028390 <line:30:4, col:44> '<dependent type>' contains-errors '='     |   |     |-CXXDependentScopeMemberExpr 0x13f028308 <col:4, col:24> '<dependent type>' contains-errors lvalue .parwidthval     |   |     | `-ArraySubscriptExpr 0x13f0282e8 <col:4, col:22> '<dependent type>' contains-errors lvalue     |   |     |   |-ImplicitCastExpr 0x13f0282b8 <col:4, col:15> '<dependent type>' contains-errors <LValueToRValue>     |   |     |   | `-CXXDependentScopeMemberExpr 0x13f0280a8 <col:4, col:15> '<dependent type>' contains-errors lvalue ->rlvls     |   |     |   |   `-RecoveryExpr 0x13f028080 <col:4> '<dependent type>' contains-errors lvalue     |   |     |   |     `-DeclRefExpr 0x13f028060 <col:4> 'int *' lvalue ParmVar 0x13f00df28 'compparms' 'int *'     |   |     |   `-ImplicitCastExpr 0x13f0282d0 <col:21> 'int' <LValueToRValue>     |   |     |     `-DeclRefExpr 0x13f0280f0 <col:21> 'int' lvalue Var 0x13f00e120 'i' 'int'     |   |     `-BinaryOperator 0x13f028370 <col:38, col:44> '<dependent type>' contains-errors '&'     |   |       |-RecoveryExpr 0x13f028350 <col:38> '<dependent type>' contains-errors lvalue     |   |       `-IntegerLiteral 0x13f0281c0 <col:44> 'int' 15     |   `-CompoundAssignOperator 0x13f028ac8 <line:34:3, col:22> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |     |-CXXDependentScopeMemberExpr 0x13f028a18 <col:3, col:14> '<dependent type>' contains-errors lvalue ->csty     |     | `-RecoveryExpr 0x13f0289f0 <col:3> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x13f0289d0 <col:3> 'int *' lvalue ParmVar 0x13f00df28 'compparms' 'int *'     |     `-RecoveryExpr 0x13f028aa8 <col:22> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13f028cb0 <line:36:2, line:38:2>     | |-CallExpr 0x13f028c58 <line:36:6, col:23> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x13f028c18 <col:6> 'int ()' Function 0x13f028b60 'jas_stream_eof' 'int ()'     | | `-RecoveryExpr 0x13f028c38 <col:21> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13f028c98 <col:26, line:38:2>     |   `-GotoStmt 0x13f028c80 <line:37:3, col:8> 'error' 0x13f027a68     |-ReturnStmt 0x13f028cf0 <line:39:2, col:9>     | `-IntegerLiteral 0x13f028cd0 <col:9> 'int' 0     |-LabelStmt 0x13f028ea0 <line:40:1, line:43:2> 'error'     | `-IfStmt 0x13f028e80 <line:41:2, line:43:2>     |   |-RecoveryExpr 0x13f028d00 <line:41:6> '<dependent type>' contains-errors lvalue     |   `-CompoundStmt 0x13f028e68 <col:17, line:43:2>     |     `-CallExpr 0x13f028e40 <line:42:3, col:37> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x13f028e00 <col:3> 'int ()' Function 0x13f028d48 'jpc_cox_destroycompparms' 'int ()'     |       `-RecoveryExpr 0x13f028e20 <col:28> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x13f028ef8 <line:44:2, col:10>       `-UnaryOperator 0x13f028ee0 <col:9, col:10> 'int' prefix '-'         `-IntegerLiteral 0x13f028ec0 <col:10> 'int' 1 ","19493":"`-FunctionDecl 0x11d00dfa8  line:1:14 invalid ComputeDepthMultiplier 'int (int *, const int *, const int *, int *)'   |-ParmVarDecl 0x11d00dd28 <col:37, col:52> col:52 invalid context 'int *'   |-ParmVarDecl 0x11d00dda8 <line:2:37, col:57> col:57 invalid input 'const int *'   |-ParmVarDecl 0x11d00de28 <line:3:37, col:57> col:57 invalid filter 'const int *'   |-ParmVarDecl 0x11d00dea8 <line:4:37, col:44> col:44 invalid depth_multiplier 'int *'   `-CompoundStmt 0x11d027798 <col:62, line:11:1>     |-DeclStmt 0x11d00e2e0 <line:5:3, col:55>     | `-VarDecl 0x11d00e088 <col:3, col:54> col:7 used num_filter_channels 'int' cinit     |   `-CallExpr 0x11d00e2b0 <col:29, col:54> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x11d00e250 <col:29> 'int ()' Function 0x11d00e198 'SizeOfDimension' 'int ()'     |     |-RecoveryExpr 0x11d00e270 <col:45> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x11d00e290 <col:53> 'int' 3     |-DeclStmt 0x11d027430 <line:6:3, col:53>     | `-VarDecl 0x11d00e310 <col:3, col:52> col:7 used num_input_channels 'int' cinit     |   `-CallExpr 0x11d027400 <col:28, col:52> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x11d00e378 <col:28> 'int ()' Function 0x11d00e198 'SizeOfDimension' 'int ()'     |     |-RecoveryExpr 0x11d00e398 <col:44> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x11d00e3b8 <col:51> 'int' 3     |-CallExpr 0x11d027618 <line:7:3, col:73> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11d027528 <col:3> 'int ()' Function 0x11d027470 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x11d027548 <col:21> '<dependent type>' contains-errors lvalue     | |-BinaryOperator 0x11d0275d8 <col:30, col:52> 'int' contains-errors '%'     | | |-ImplicitCastExpr 0x11d0275a8 <col:30> 'int' contains-errors <LValueToRValue>     | | | `-DeclRefExpr 0x11d027568 <col:30> 'int' contains-errors lvalue Var 0x11d00e088 'num_filter_channels' 'int'     | | `-ImplicitCastExpr 0x11d0275c0 <col:52> 'int' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x11d027588 <col:52> 'int' contains-errors lvalue Var 0x11d00e310 'num_input_channels' 'int'     | `-IntegerLiteral 0x11d0275f8 <col:72> 'int' 0     |-BinaryOperator 0x11d027730 <line:9:3, col:45> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x11d027688 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x11d027670 <col:4> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x11d027650 <col:4> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x11d027710 <col:23, col:45> 'int' contains-errors '\/'     |   |-ImplicitCastExpr 0x11d0276e0 <col:23> 'int' contains-errors <LValueToRValue>     |   | `-DeclRefExpr 0x11d0276a0 <col:23> 'int' contains-errors lvalue Var 0x11d00e088 'num_filter_channels' 'int'     |   `-ImplicitCastExpr 0x11d0276f8 <col:45> 'int' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x11d0276c0 <col:45> 'int' contains-errors lvalue Var 0x11d00e310 'num_input_channels' 'int'     `-ReturnStmt 0x11d027788 <line:10:3, col:10>       `-RecoveryExpr 0x11d027768 <col:10> '<dependent type>' contains-errors lvalue ","19428":"`-FunctionDecl 0x13d928750  line:1:13 emulate_single_step 'void (struct pt_regs *)' static   |-ParmVarDecl 0x13d928648 <col:33, col:49> col:49 used regs 'struct pt_regs *'   `-CompoundStmt 0x13d940dd0 <line:2:1, line:5:1>     `-IfStmt 0x13d940db0 <line:3:2, line:4:29>       |-CallExpr 0x13d940bf8 <line:3:6, col:26> 'int'       | |-ImplicitCastExpr 0x13d940be0 <col:6> 'int (*)()' <FunctionToPointerDecay>       | | `-DeclRefExpr 0x13d940b70 <col:6> 'int ()' Function 0x13d940ab8 'single_stepping' 'int ()'       | `-ImplicitCastExpr 0x13d940c20 <col:22> 'struct pt_regs *' <LValueToRValue>       |   `-DeclRefExpr 0x13d940b90 <col:22> 'struct pt_regs *' lvalue ParmVar 0x13d928648 'regs' 'struct pt_regs *'       `-CallExpr 0x13d940d70 <line:4:3, col:29> 'int'         |-ImplicitCastExpr 0x13d940d58 <col:3> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x13d940d18 <col:3> 'int ()' Function 0x13d940c60 'single_step_exception' 'int ()'         `-ImplicitCastExpr 0x13d940d98 <col:25> 'struct pt_regs *' <LValueToRValue>           `-DeclRefExpr 0x13d940d38 <col:25> 'struct pt_regs *' lvalue ParmVar 0x13d928648 'regs' 'struct pt_regs *' ","19990":"`-FunctionDecl 0x1469065a8  line:1:1 INST_HANDLER 'int (int)'   |-ParmVarDecl 0x1469064d8 <col:15> col:15 lds 'int'   `-CompoundStmt 0x14691feb8 <col:20, line:9:1>     |-DeclStmt 0x146906828 <line:2:2, col:55>     | `-VarDecl 0x1469066b8 <col:2, col:6> col:6 used d 'int'     |-DeclStmt 0x146906950 <line:3:2, col:32>     | `-VarDecl 0x146906858 <col:2, col:6> col:6 used k 'int'     |-CallExpr 0x14691fc78 <line:7:2, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x146906aa0 <col:2> 'int ()' Function 0x1469069e8 '__generic_ld_st' 'int ()'     | |-RecoveryExpr 0x14691fc58 <col:19> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x146906b20 <col:23> 'char[4]' lvalue \"STR\"     | |-IntegerLiteral 0x146906b40 <col:30> 'int' 0     | |-IntegerLiteral 0x146906b60 <col:33> 'int' 1     | |-IntegerLiteral 0x146906b80 <col:36> 'int' 0     | |-DeclRefExpr 0x146906ba0 <col:39> 'int' lvalue Var 0x146906858 'k' 'int'     | `-IntegerLiteral 0x146906bc0 <col:42> 'int' 0     `-CallExpr 0x14691fe58 <line:8:2, col:18> 'int'       |-ImplicitCastExpr 0x14691fe40 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x14691fdb0 <col:2> 'int ()' Function 0x14691fcf8 'ESIL_A' 'int ()'       |-ImplicitCastExpr 0x14691fe88 <col:10> 'char *' <ArrayToPointerDecay>       | `-StringLiteral 0x14691fdd0 <col:10> 'char[4]' lvalue \"STR\"       `-ImplicitCastExpr 0x14691fea0 <col:17> 'int' <LValueToRValue>         `-DeclRefExpr 0x14691fdf0 <col:17> 'int' lvalue Var 0x1469066b8 'd' 'int' ","19204":"`-FunctionDecl 0x1281452e8  col:2 implicit used memmove 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x1281453e8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x128145450 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x1281454b8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x128145390 <<invalid sloc>> Implicit 884 ","19752":"`-FunctionDecl 0x139026808  line:1:5 invalid ttm_sg_tt_init 'int (struct ttm_dma_tt *, struct ttm_buffer_object *, int)'   |-ParmVarDecl 0x13900e248 <col:20, col:39> col:39 used ttm_dma 'struct ttm_dma_tt *'   |-ParmVarDecl 0x139026628 <col:48, col:74> col:74 used bo 'struct ttm_buffer_object *'   |-ParmVarDecl 0x1390266c0 <line:2:6, col:15> col:15 invalid page_flags 'int'   `-CompoundStmt 0x1390294b8 <line:3:1, line:20:1>     |-DeclStmt 0x139026b30 <line:4:2, col:36>     | |-RecordDecl 0x1390268c8 <col:2, col:9> col:9 struct ttm_tt     | `-VarDecl 0x139026a38 <col:2, col:33> col:17 used ttm 'struct ttm_tt *' cinit     |   `-UnaryOperator 0x139026b00 <col:23, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x139026ad8 <col:24, col:33> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x139026aa0 <col:24> 'struct ttm_dma_tt *' lvalue ParmVar 0x13900e248 'ttm_dma' 'struct ttm_dma_tt *'     |-DeclStmt 0x139026bc8 <line:5:2, col:9>     | `-VarDecl 0x139026b60 <col:2, col:6> col:6 used ret 'int'     |-CallExpr 0x139026dc0 <line:7:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x139026d40 <col:2> 'int ()' Function 0x139026c88 'ttm_tt_init_fields' 'int ()'     | |-DeclRefExpr 0x139026d60 <col:21> 'struct ttm_tt *' contains-errors lvalue Var 0x139026a38 'ttm' 'struct ttm_tt *'     | |-DeclRefExpr 0x139026d80 <col:26> 'struct ttm_buffer_object *' lvalue ParmVar 0x139026628 'bo' 'struct ttm_buffer_object *'     | `-RecoveryExpr 0x139026da0 <col:30> '<dependent type>' contains-errors lvalue     |-CallExpr 0x139026f70 <line:9:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x139026ed8 <col:2> 'int ()' Function 0x139026e20 'INIT_LIST_HEAD' 'int ()'     | `-UnaryOperator 0x139026f58 <col:17, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x139026f30 <col:18, col:27> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x139026ef8 <col:18> 'struct ttm_dma_tt *' lvalue ParmVar 0x13900e248 'ttm_dma' 'struct ttm_dma_tt *'     |-IfStmt 0x1390273d0 <line:10:2, line:13:48> has_else     | |-BinaryOperator 0x139027010 <line:10:6, col:19> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x139026f98 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x139026ff0 <col:19> '<dependent type>' contains-errors lvalue     | |-BinaryOperator 0x1390271f8 <line:11:3, col:47> 'int' '='     | | |-DeclRefExpr 0x139027030 <col:3> 'int' lvalue Var 0x139026b60 'ret' 'int'     | | `-CallExpr 0x1390271b8 <col:9, col:47> 'int'     | |   |-ImplicitCastExpr 0x1390271a0 <col:9> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x139027130 <col:9> 'int ()' Function 0x139027078 'ttm_sg_tt_alloc_page_directory' 'int ()'     | |   `-ImplicitCastExpr 0x1390271e0 <col:40> 'struct ttm_dma_tt *' <LValueToRValue>     | |     `-DeclRefExpr 0x139027150 <col:40> 'struct ttm_dma_tt *' lvalue ParmVar 0x13900e248 'ttm_dma' 'struct ttm_dma_tt *'     | `-BinaryOperator 0x1390273b0 <line:13:3, col:48> 'int' '='     |   |-DeclRefExpr 0x139027218 <col:3> 'int' lvalue Var 0x139026b60 'ret' 'int'     |   `-CallExpr 0x139027370 <col:9, col:48> 'int'     |     |-ImplicitCastExpr 0x139027358 <col:9> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x139027318 <col:9> 'int ()' Function 0x139027260 'ttm_dma_tt_alloc_page_directory' 'int ()'     |     `-ImplicitCastExpr 0x139027398 <col:41> 'struct ttm_dma_tt *' <LValueToRValue>     |       `-DeclRefExpr 0x139027338 <col:41> 'struct ttm_dma_tt *' lvalue ParmVar 0x13900e248 'ttm_dma' 'struct ttm_dma_tt *'     |-IfStmt 0x139029468 <line:14:2, line:18:2>     | |-ImplicitCastExpr 0x139027420 <line:14:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x139027400 <col:6> 'int' lvalue Var 0x139026b60 'ret' 'int'     | `-CompoundStmt 0x139029440 <col:11, line:18:2>     |   |-CallExpr 0x139027570 <line:15:3, col:21> 'int' contains-errors     |   | |-ImplicitCastExpr 0x139027558 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x139027518 <col:3> 'int ()' Function 0x139027460 'ttm_tt_destroy' 'int ()'     |   | `-ImplicitCastExpr 0x139027598 <col:18> 'struct ttm_tt *' contains-errors <LValueToRValue>     |   |   `-DeclRefExpr 0x139027538 <col:18> 'struct ttm_tt *' contains-errors lvalue Var 0x139026a38 'ttm' 'struct ttm_tt *'     |   |-CallExpr 0x139029358 <line:16:3, col:15> 'int'     |   | |-ImplicitCastExpr 0x139029340 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x1390292b8 <col:3> 'int ()' Function 0x139029200 'pr_err' 'int ()'     |   | `-ImplicitCastExpr 0x139029380 <col:10> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x139029320 <col:10> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x139029430 <line:17:3, col:11>     |     `-UnaryOperator 0x139029418 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x139029400 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x1390293e0 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1390294a8 <line:19:2, col:9>       `-IntegerLiteral 0x139029488 <col:9> 'int' 0 ","19708":"`-FunctionDecl 0x129140b10  col:3 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern   |-ParmVarDecl 0x129140c10 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x129140c78 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-ParmVarDecl 0x129140ce0 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x129140bb8 <<invalid sloc>> Implicit 905   `-FormatAttr 0x129140d60 <col:3> Implicit printf 3 4 ","19307":"`-FunctionDecl 0x12f928238  line:1:5 RAND_DRBG_set_defaults 'int (int, unsigned int)'   |-ParmVarDecl 0x12f9280d8 <col:28, col:32> col:32 used type 'int'   |-ParmVarDecl 0x12f928158 <col:38, col:51> col:51 used flags 'unsigned int'   `-CompoundStmt 0x12f941de8 <line:2:1, line:24:1>     |-DeclStmt 0x12f9283d8 <line:3:5, col:16>     | `-VarDecl 0x12f928350 <col:5, col:15> col:9 used ret 'int' cinit     |   `-IntegerLiteral 0x12f9283b8 <col:15> 'int' 1     |-SwitchStmt 0x12f928428 <line:5:5, line:13:5>     | |-ImplicitCastExpr 0x12f928410 <line:5:13> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x12f9283f0 <col:13> 'int' lvalue ParmVar 0x12f9280d8 'type' 'int'     | `-CompoundStmt 0x12f928710 <col:19, line:13:5>     |   |-DefaultStmt 0x12f928670 <line:6:5, line:7:76>     |   | `-CallExpr 0x12f928640 <col:9, col:76> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x12f928580 <col:9> 'int ()' Function 0x12f9284c8 'RANDerr' 'int ()'     |   |   |-RecoveryExpr 0x12f928600 <col:17> '<dependent type>' contains-errors lvalue     |   |   `-RecoveryExpr 0x12f928620 <col:48> '<dependent type>' contains-errors lvalue     |   |-ReturnStmt 0x12f9286b0 <line:8:9, col:16>     |   | `-IntegerLiteral 0x12f928690 <col:16> 'int' 0     |   `-BreakStmt 0x12f928708 <line:12:9>     |-IfStmt 0x12f941d40 <line:15:5, line:18:5>     | |-RecoveryExpr 0x12f9287e0 <line:15:9, col:44> '_Bool' contains-errors     | `-CompoundStmt 0x12f941d20 <col:47, line:18:5>     |   |-CallExpr 0x12f941cc0 <line:16:9, col:77> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12f941c00 <col:9> 'int ()' Function 0x12f9284c8 'RANDerr' 'int ()'     |   | |-RecoveryExpr 0x12f941c80 <col:17> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x12f941ca0 <col:48> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x12f941d10 <line:17:9, col:16>     |     `-IntegerLiteral 0x12f941cf0 <col:16> 'int' 0     `-ReturnStmt 0x12f941dd8 <line:23:5, col:12>       `-ImplicitCastExpr 0x12f941dc0 <col:12> 'int' <LValueToRValue>         `-DeclRefExpr 0x12f941da0 <col:12> 'int' lvalue Var 0x12f928350 'ret' 'int' ","19231":"`-FunctionDecl 0x120143b00  col:9 implicit used strchr 'char *(const char *, int)' extern   |-ParmVarDecl 0x120143c00 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x120143c68 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x120143ba8 <<invalid sloc>> Implicit 893 ","19426":"`-FunctionDecl 0x1420089d8  col:4 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x142008ad8 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x142008a80 <<invalid sloc>> Implicit 873 ","19884":"`-FunctionDecl 0x138140a00  line:1:12 sl_alloc_bufs 'int (struct slip *, int)' static   |-ParmVarDecl 0x138128648 <col:26, col:39> col:39 used sl 'struct slip *'   |-ParmVarDecl 0x1381286c8 <col:43, col:47> col:47 used mtu 'int'   `-CompoundStmt 0x138144188 <line:2:1, line:64:1>     |-DeclStmt 0x138140c30 <line:3:2, col:20>     | `-VarDecl 0x138140b18 <col:2, col:13> col:6 used err 'int' cinit     |   `-UnaryOperator 0x138140c18 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x138140c00 <col:13> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x138140be0 <col:13> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x138140cc8 <line:4:2, col:19>     | `-VarDecl 0x138140c60 <col:2, col:16> col:16 used len 'unsigned long'     |-DeclStmt 0x138140d98 <line:5:2, col:20>     | `-VarDecl 0x138140cf8 <col:2, col:16> col:8 used rbuff 'char *' cinit     |   `-RecoveryExpr 0x138140d78 <col:16> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x138140e68 <line:6:2, col:20>     | `-VarDecl 0x138140dc8 <col:2, col:16> col:8 used xbuff 'char *' cinit     |   `-RecoveryExpr 0x138140e48 <col:16> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x138140f30 <line:13:2, col:14> 'unsigned long' '='     | |-DeclRefExpr 0x138140e80 <col:2> 'unsigned long' lvalue Var 0x138140c60 'len' 'unsigned long'     | `-ImplicitCastExpr 0x138140f18 <col:8, col:14> 'unsigned long' <IntegralCast>     |   `-BinaryOperator 0x138140ef8 <col:8, col:14> 'int' '*'     |     |-ImplicitCastExpr 0x138140ee0 <col:8> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x138140ea0 <col:8> 'int' lvalue ParmVar 0x1381286c8 'mtu' 'int'     |     `-IntegerLiteral 0x138140ec0 <col:14> 'int' 2     |-IfStmt 0x1381410d8 <line:16:2, line:17:15>     | |-BinaryOperator 0x138141000 <line:16:6, col:18> 'int' '<'     | | |-ImplicitCastExpr 0x138140fd0 <col:6> 'unsigned long' <LValueToRValue>     | | | `-DeclRefExpr 0x138140f50 <col:6> 'unsigned long' lvalue Var 0x138140c60 'len' 'unsigned long'     | | `-ImplicitCastExpr 0x138140fe8 <col:12, col:18> 'unsigned long' <IntegralCast>     | |   `-BinaryOperator 0x138140fb0 <col:12, col:18> 'int' '*'     | |     |-IntegerLiteral 0x138140f70 <col:12> 'int' 576     | |     `-IntegerLiteral 0x138140f90 <col:18> 'int' 2     | `-BinaryOperator 0x1381410b8 <line:17:3, col:15> 'unsigned long' '='     |   |-DeclRefExpr 0x138141020 <col:3> 'unsigned long' lvalue Var 0x138140c60 'len' 'unsigned long'     |   `-ImplicitCastExpr 0x1381410a0 <col:9, col:15> 'unsigned long' <IntegralCast>     |     `-BinaryOperator 0x138141080 <col:9, col:15> 'int' '*'     |       |-IntegerLiteral 0x138141040 <col:9> 'int' 576     |       `-IntegerLiteral 0x138141060 <col:15> 'int' 2     |-BinaryOperator 0x138141438 <line:18:2, col:37> 'char *' contains-errors '='     | |-DeclRefExpr 0x1381410f8 <col:2> 'char *' contains-errors lvalue Var 0x138140cf8 'rbuff' 'char *'     | `-CallExpr 0x138141408 <col:10, col:37> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x138141230 <col:10> 'int ()' Function 0x138141178 'kmalloc' 'int ()'     |   |-BinaryOperator 0x1381413c8 <col:18, col:24> 'unsigned long' '+'     |   | |-ImplicitCastExpr 0x138141398 <col:18> 'unsigned long' <LValueToRValue>     |   | | `-DeclRefExpr 0x138141250 <col:18> 'unsigned long' lvalue Var 0x138140c60 'len' 'unsigned long'     |   | `-ImplicitCastExpr 0x1381413b0 <col:24> 'unsigned long' <IntegralCast>     |   |   `-IntegerLiteral 0x138141270 <col:24> 'int' 4     |   `-RecoveryExpr 0x1381413e8 <col:27> '<dependent type>' contains-errors lvalue     |-IfStmt 0x138141558 <line:19:2, line:20:8>     | |-BinaryOperator 0x1381414d0 <line:19:6, col:15> 'int' contains-errors '=='     | | |-DeclRefExpr 0x138141458 <col:6> 'char *' contains-errors lvalue Var 0x138140cf8 'rbuff' 'char *'     | | `-RecoveryExpr 0x1381414b0 <col:15> '<dependent type>' contains-errors lvalue     | `-GotoStmt 0x138141540 <line:20:3, col:8> 'err_exit' 0x1381414f0     |-BinaryOperator 0x1381417a0 <line:21:2, col:37> 'char *' contains-errors '='     | |-DeclRefExpr 0x138141578 <col:2> 'char *' contains-errors lvalue Var 0x138140dc8 'xbuff' 'char *'     | `-CallExpr 0x138141770 <col:10, col:37> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x138141598 <col:10> 'int ()' Function 0x138141178 'kmalloc' 'int ()'     |   |-BinaryOperator 0x138141730 <col:18, col:24> 'unsigned long' '+'     |   | |-ImplicitCastExpr 0x138141700 <col:18> 'unsigned long' <LValueToRValue>     |   | | `-DeclRefExpr 0x1381415b8 <col:18> 'unsigned long' lvalue Var 0x138140c60 'len' 'unsigned long'     |   | `-ImplicitCastExpr 0x138141718 <col:24> 'unsigned long' <IntegralCast>     |   |   `-IntegerLiteral 0x1381415d8 <col:24> 'int' 4     |   `-RecoveryExpr 0x138141750 <col:27> '<dependent type>' contains-errors lvalue     |-IfStmt 0x138141870 <line:22:2, line:23:8>     | |-BinaryOperator 0x138141838 <line:22:6, col:15> 'int' contains-errors '=='     | | |-DeclRefExpr 0x1381417c0 <col:6> 'char *' contains-errors lvalue Var 0x138140dc8 'xbuff' 'char *'     | | `-RecoveryExpr 0x138141818 <col:15> '<dependent type>' contains-errors lvalue     | `-GotoStmt 0x138141858 <line:23:3, col:8> 'err_exit' 0x1381414f0     |-CallExpr 0x138143418 <line:32:2, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x138141970 <col:2> 'int ()' Function 0x1381418b8 'spin_lock_bh' 'int ()'     | `-UnaryOperator 0x138143400 <col:15, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1381419c8 <col:16, col:20> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x138141990 <col:16> 'struct slip *' lvalue ParmVar 0x138128648 'sl' 'struct slip *'     |-IfStmt 0x1381437f0 <line:33:2, line:37:2>     | |-BinaryOperator 0x1381434f8 <line:33:6, col:17> 'int' contains-errors '=='     | | |-RecoveryExpr 0x138143478 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x138143440 <col:6> 'struct slip *' lvalue ParmVar 0x138128648 'sl' 'struct slip *'     | | `-RecoveryExpr 0x1381434d8 <col:17> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1381437c8 <col:23, line:37:2>     |   |-CallExpr 0x138143690 <line:34:3, col:27> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1381435f8 <col:3> 'int ()' Function 0x138143540 'spin_unlock_bh' 'int ()'     |   | `-UnaryOperator 0x138143678 <col:18, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x138143650 <col:19, col:23> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x138143618 <col:19> 'struct slip *' lvalue ParmVar 0x138128648 'sl' 'struct slip *'     |   |-BinaryOperator 0x138143790 <line:35:3, col:10> 'int' contains-errors '='     |   | |-DeclRefExpr 0x1381436b8 <col:3> 'int' contains-errors lvalue Var 0x138140b18 'err' 'int'     |   | `-UnaryOperator 0x138143778 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x138143760 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x138143740 <col:10> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x1381437b0 <line:36:3, col:8> 'err_exit' 0x1381414f0     |-BinaryOperator 0x138143890 <line:38:2, col:17> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x138143848 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x138143810 <col:2> 'struct slip *' lvalue ParmVar 0x138128648 'sl' 'struct slip *'     | `-DeclRefExpr 0x138143870 <col:17> 'int' lvalue ParmVar 0x1381286c8 'mtu' 'int'     |-BinaryOperator 0x138143930 <line:39:2, col:17> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1381438e8 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1381438b0 <col:2> 'struct slip *' lvalue ParmVar 0x138128648 'sl' 'struct slip *'     | `-DeclRefExpr 0x138143910 <col:17> 'unsigned long' lvalue Var 0x138140c60 'len' 'unsigned long'     |-BinaryOperator 0x1381439d0 <line:40:2, col:17> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x138143988 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x138143950 <col:2> 'struct slip *' lvalue ParmVar 0x138128648 'sl' 'struct slip *'     | `-IntegerLiteral 0x1381439b0 <col:17> 'int' 0     |-BinaryOperator 0x138143a70 <line:41:2, col:17> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x138143a28 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1381439f0 <col:2> 'struct slip *' lvalue ParmVar 0x138128648 'sl' 'struct slip *'     | `-IntegerLiteral 0x138143a50 <col:17> 'int' 0     |-BinaryOperator 0x138143c78 <line:42:2, col:32> 'char *' contains-errors '='     | |-DeclRefExpr 0x138143a90 <col:2> 'char *' contains-errors lvalue Var 0x138140cf8 'rbuff' 'char *'     | `-CallExpr 0x138143c48 <col:10, col:32> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x138143b90 <col:10> 'int ()' Function 0x138143ad8 'xchg' 'int ()'     |   |-UnaryOperator 0x138143c10 <col:15, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x138143be8 <col:16, col:20> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x138143bb0 <col:16> 'struct slip *' lvalue ParmVar 0x138128648 'sl' 'struct slip *'     |   `-DeclRefExpr 0x138143c28 <col:27> 'char *' contains-errors lvalue Var 0x138140cf8 'rbuff' 'char *'     |-BinaryOperator 0x138143da0 <line:43:2, col:32> 'char *' contains-errors '='     | |-DeclRefExpr 0x138143c98 <col:2> 'char *' contains-errors lvalue Var 0x138140dc8 'xbuff' 'char *'     | `-CallExpr 0x138143d70 <col:10, col:32> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x138143cb8 <col:10> 'int ()' Function 0x138143ad8 'xchg' 'int ()'     |   |-UnaryOperator 0x138143d38 <col:15, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x138143d10 <col:16, col:20> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x138143cd8 <col:16> 'struct slip *' lvalue ParmVar 0x138128648 'sl' 'struct slip *'     |   `-DeclRefExpr 0x138143d50 <col:27> 'char *' contains-errors lvalue Var 0x138140dc8 'xbuff' 'char *'     |-CallExpr 0x138143e58 <line:52:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x138143dc0 <col:2> 'int ()' Function 0x138143540 'spin_unlock_bh' 'int ()'     | `-UnaryOperator 0x138143e40 <col:17, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x138143e18 <col:18, col:22> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x138143de0 <col:18> 'struct slip *' lvalue ParmVar 0x138128648 'sl' 'struct slip *'     |-BinaryOperator 0x138143ec0 <line:53:2, col:8> 'int' contains-errors '='     | |-DeclRefExpr 0x138143e80 <col:2> 'int' contains-errors lvalue Var 0x138140b18 'err' 'int'     | `-IntegerLiteral 0x138143ea0 <col:8> 'int' 0     |-LabelStmt 0x138144088 <line:56:1, line:61:13> 'err_exit'     | `-CallExpr 0x138144048 <col:2, col:13> 'int' contains-errors     |   |-ImplicitCastExpr 0x138144030 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x138143fc0 <col:2> 'int ()' Function 0x138143f08 'kfree' 'int ()'     |   `-ImplicitCastExpr 0x138144070 <col:8> 'char *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x138143fe0 <col:8> 'char *' contains-errors lvalue Var 0x138140dc8 'xbuff' 'char *'     |-CallExpr 0x138144100 <line:62:2, col:13> 'int' contains-errors     | |-ImplicitCastExpr 0x1381440e8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1381440a8 <col:2> 'int ()' Function 0x138143f08 'kfree' 'int ()'     | `-ImplicitCastExpr 0x138144128 <col:8> 'char *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x1381440c8 <col:8> 'char *' contains-errors lvalue Var 0x138140cf8 'rbuff' 'char *'     `-ReturnStmt 0x138144178 <line:63:2, col:9>       `-ImplicitCastExpr 0x138144160 <col:9> 'int' contains-errors <LValueToRValue>         `-DeclRefExpr 0x138144140 <col:9> 'int' contains-errors lvalue Var 0x138140b18 'err' 'int' ","19908":"`-FunctionDecl 0x144128758  line:1:12 snd_timer_start_slave 'int (struct snd_timer_instance *)' static   |-ParmVarDecl 0x144128648 <col:34, col:61> col:61 used timeri 'struct snd_timer_instance *'   `-CompoundStmt 0x144141310 <line:2:1, line:12:1>     |-DeclStmt 0x144140ad0 <line:3:2, col:21>     | `-VarDecl 0x144140a68 <col:2, col:16> col:16 used flags 'unsigned long'     |-CallExpr 0x144140ce8 <line:5:2, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x144140c10 <col:2> 'int ()' Function 0x144140b58 'spin_lock_irqsave' 'int ()'     | |-UnaryOperator 0x144140cd0 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x144140cb0 <col:21> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x144140c60 <col:40> 'unsigned long' lvalue Var 0x144140a68 'flags' 'unsigned long'     |-CompoundAssignOperator 0x144140de0 <line:6:2, col:19> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-RecoveryExpr 0x144140d50 <col:2, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x144140d18 <col:2> 'struct snd_timer_instance *' lvalue ParmVar 0x144128648 'timeri' 'struct snd_timer_instance *'     | `-RecoveryExpr 0x144140dc0 <col:19> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1441410d8 <line:7:2, line:9:44>     | |-RecoveryExpr 0x144140e48 <line:7:6, col:14> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x144140e10 <col:6> 'struct snd_timer_instance *' lvalue ParmVar 0x144128648 'timeri' 'struct snd_timer_instance *'     | `-CallExpr 0x1441410a8 <line:8:3, line:9:44> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x144140f50 <line:8:3> 'int ()' Function 0x144140e98 'list_add_tail' 'int ()'     |   |-UnaryOperator 0x144140fd0 <col:17, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x144140fa8 <col:18, col:26> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x144140f70 <col:18> 'struct snd_timer_instance *' lvalue ParmVar 0x144128648 'timeri' 'struct snd_timer_instance *'     |   `-UnaryOperator 0x144141090 <line:9:10, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-CXXDependentScopeMemberExpr 0x144141048 <col:11, col:27> '<dependent type>' contains-errors lvalue ->slave_active_head     |       `-RecoveryExpr 0x144141020 <col:11, col:19> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x144140fe8 <col:11> 'struct snd_timer_instance *' lvalue ParmVar 0x144128648 'timeri' 'struct snd_timer_instance *'     |-CallExpr 0x1441412b0 <line:10:2, col:50> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1441411d8 <col:2> 'int ()' Function 0x144141120 'spin_unlock_irqrestore' 'int ()'     | |-UnaryOperator 0x144141298 <col:25, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x144141278 <col:26> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x144141228 <col:45> 'unsigned long' lvalue Var 0x144140a68 'flags' 'unsigned long'     `-ReturnStmt 0x144141300 <line:11:2, col:9>       `-IntegerLiteral 0x1441412e0 <col:9> 'int' 1 ","20144":"`-FunctionDecl 0x1541281c8  line:1:1 invalid pkinit_init_dh_params 'int (int)'   |-ParmVarDecl 0x1541280f0 <col:23, col:49> col:49 referenced invalid plgctx 'int'   `-CompoundStmt 0x154809640 <line:2:1, line:24:1>     |-IfStmt 0x1541285f8 <line:6:5, line:7:14>     | |-BinaryOperator 0x154128570 <line:6:9, col:28> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x1541284d0 <col:9, col:17> '<dependent type>' contains-errors lvalue ->dh_1024     | | | `-RecoveryExpr 0x1541284b0 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x154128550 <col:28> '<dependent type>' contains-errors lvalue     | `-GotoStmt 0x1541285e0 <line:7:9, col:14> 'cleanup' 0x154128590     |-IfStmt 0x154809200 <line:10:5, line:11:14>     | |-BinaryOperator 0x1541287b8 <line:10:9, col:28> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x154128718 <col:9, col:17> '<dependent type>' contains-errors lvalue ->dh_2048     | | | `-RecoveryExpr 0x1541286f8 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x154128798 <col:28> '<dependent type>' contains-errors lvalue     | `-GotoStmt 0x1541287d8 <line:11:9, col:14> 'cleanup' 0x154128590     |-IfStmt 0x1548093f8 <line:14:5, line:15:14>     | |-BinaryOperator 0x1548093c0 <line:14:9, col:28> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x154809320 <col:9, col:17> '<dependent type>' contains-errors lvalue ->dh_4096     | | | `-RecoveryExpr 0x154809300 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1548093a0 <col:28> '<dependent type>' contains-errors lvalue     | `-GotoStmt 0x1548093e0 <line:15:9, col:14> 'cleanup' 0x154128590     |-LabelStmt 0x1548095d8 <line:19:1, line:21:37> 'cleanup'     | `-IfStmt 0x1548095b8 <line:20:5, line:21:37>     |   |-RecoveryExpr 0x154809450 <line:20:9> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x154809590 <line:21:9, col:37> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x154809550 <col:9> 'int ()' Function 0x154809498 'pkinit_fini_dh_params' 'int ()'     |     `-RecoveryExpr 0x154809570 <col:31> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x154809630 <line:23:5, col:12>       `-RecoveryExpr 0x154809610 <col:12> '<dependent type>' contains-errors lvalue ","19455":"`-FunctionDecl 0x12200e350  line:1:13 ifb_setup 'void (struct net_device *)' static   |-ParmVarDecl 0x12200e248 <col:23, col:42> col:42 used dev 'struct net_device *'   `-CompoundStmt 0x123008e10 <line:2:1, line:18:1>     |-BinaryOperator 0x123008318 <line:4:2, col:20> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x123008280 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x123008248 <col:2> 'struct net_device *' lvalue ParmVar 0x12200e248 'dev' 'struct net_device *'     | `-RecoveryExpr 0x1230082f8 <col:20> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x123008420 <line:5:2, col:21> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x123008370 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x123008338 <col:2> 'struct net_device *' lvalue ParmVar 0x12200e248 'dev' 'struct net_device *'     | `-UnaryOperator 0x123008408 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1230083e8 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1230085d8 <line:8:2, col:17> 'int'     | |-ImplicitCastExpr 0x1230085c0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x123008550 <col:2> 'int ()' Function 0x123008498 'ether_setup' 'int ()'     | `-ImplicitCastExpr 0x123008600 <col:14> 'struct net_device *' <LValueToRValue>     |   `-DeclRefExpr 0x123008570 <col:14> 'struct net_device *' lvalue ParmVar 0x12200e248 'dev' 'struct net_device *'     |-BinaryOperator 0x1230086d0 <line:9:2, col:22> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x123008650 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x123008618 <col:2> 'struct net_device *' lvalue ParmVar 0x12200e248 'dev' 'struct net_device *'     | `-RecoveryExpr 0x1230086b0 <col:22> '<dependent type>' contains-errors lvalue     |-CompoundAssignOperator 0x1230087b8 <line:11:2, col:19> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-RecoveryExpr 0x123008728 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1230086f0 <col:2> 'struct net_device *' lvalue ParmVar 0x12200e248 'dev' 'struct net_device *'     | `-RecoveryExpr 0x123008798 <col:19> '<dependent type>' contains-errors lvalue     |-CompoundAssignOperator 0x1230088b0 <line:12:2, col:24> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-RecoveryExpr 0x123008820 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1230087e8 <col:2> 'struct net_device *' lvalue ParmVar 0x12200e248 'dev' 'struct net_device *'     | `-RecoveryExpr 0x123008890 <col:24> '<dependent type>' contains-errors lvalue     |-CompoundAssignOperator 0x1230089a8 <line:14:2, col:16> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-RecoveryExpr 0x123008918 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1230088e0 <col:2> 'struct net_device *' lvalue ParmVar 0x12200e248 'dev' 'struct net_device *'     | `-RecoveryExpr 0x123008988 <col:16> '<dependent type>' contains-errors lvalue     |-CompoundAssignOperator 0x123008b00 <line:15:2, col:17> '<dependent type>' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-RecoveryExpr 0x123008a10 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1230089d8 <col:2> 'struct net_device *' lvalue ParmVar 0x12200e248 'dev' 'struct net_device *'     | `-UnaryOperator 0x123008ae8 <col:16, col:17> '<dependent type>' contains-errors prefix '~' cannot overflow     |   `-ImplicitCastExpr 0x123008ad0 <col:17> '<dependent type>' contains-errors <LValueToRValue>     |     `-RecoveryExpr 0x123008ab0 <col:17> '<dependent type>' contains-errors lvalue     |-CompoundAssignOperator 0x123008c58 <line:16:2, col:22> '<dependent type>' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-RecoveryExpr 0x123008b68 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x123008b30 <col:2> 'struct net_device *' lvalue ParmVar 0x12200e248 'dev' 'struct net_device *'     | `-UnaryOperator 0x123008c40 <col:21, col:22> '<dependent type>' contains-errors prefix '~' cannot overflow     |   `-ImplicitCastExpr 0x123008c28 <col:22> '<dependent type>' contains-errors <LValueToRValue>     |     `-RecoveryExpr 0x123008c08 <col:22> '<dependent type>' contains-errors lvalue     `-CallExpr 0x123008de8 <line:17:2, col:33> '<dependent type>' contains-errors       |-DeclRefExpr 0x123008d68 <col:2> 'int ()' Function 0x123008cb0 'random_ether_addr' 'int ()'       `-RecoveryExpr 0x123008dc0 <col:20, col:25> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x123008d88 <col:20> 'struct net_device *' lvalue ParmVar 0x12200e248 'dev' 'struct net_device *' ","20046":"`-FunctionDecl 0x1571418d8  line:1:19 invalid __pmd_alloc 'int (struct mm_struct *, int *, unsigned long)' static inline   |-ParmVarDecl 0x157128648 <col:31, col:49> col:49 mm 'struct mm_struct *'   |-ParmVarDecl 0x157128718 <col:53, col:60> col:60 invalid pud 'int *'   |-ParmVarDecl 0x157128798 <line:2:7, col:21> col:21 address 'unsigned long'   `-CompoundStmt 0x1571419c8 <line:3:1, line:5:1>     `-ReturnStmt 0x1571419b8 <line:4:2, col:9>       `-IntegerLiteral 0x157141998 <col:9> 'int' 0 ","20035":"`-FunctionDecl 0x15100dda8  line:1:1 PHP_FUNCTION 'int (int)'   |-ParmVarDecl 0x15100dcd8 <col:14> col:14 wddx_serialize_value 'int'   `-CompoundStmt 0x150922e80 <line:2:1, line:21:1>     |-DeclStmt 0x15100df88 <line:4:2, col:22>     | `-VarDecl 0x15100dee8 <col:2, col:18> col:8 used comment 'char *' cinit     |   `-RecoveryExpr 0x15100df68 <col:18> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x15100e040 <line:5:2, col:21>     | `-VarDecl 0x15100dfb8 <col:2, col:20> col:6 used comment_len 'int' cinit     |   `-IntegerLiteral 0x15100e020 <col:20> 'int' 0     |-IfStmt 0x15100e368 <line:8:2, line:10:2>     | |-RecoveryExpr 0x15100e320 <line:8:6, col:95> '_Bool' contains-errors     | `-CompoundStmt 0x15100e350 <col:104, line:10:2>     |   `-ReturnStmt 0x15100e340 <line:9:3>     `-CallExpr 0x1509228c0 <line:14:2, col:52> '<dependent type>' contains-errors       |-DeclRefExpr 0x1509227f0 <col:2> 'int ()' Function 0x150922738 'php_wddx_packet_start' 'int ()'       |-RecoveryExpr 0x1509228a0 <col:24> '<dependent type>' contains-errors lvalue       |-DeclRefExpr 0x150922828 <col:32> 'char *' contains-errors lvalue Var 0x15100dee8 'comment' 'char *'       `-DeclRefExpr 0x150922848 <col:41> 'int' lvalue Var 0x15100dfb8 'comment_len' 'int' ","19926":"`-FunctionDecl 0x1329281c8  line:1:3 invalid FilterManager 'int (int)'   |-ParmVarDecl 0x1329280f0 <col:17, <invalid sloc>> col:39 invalid 'int'   `-CompoundStmt 0x132928278 <line:13:67, col:68> ","19767":"`-FunctionDecl 0x13c9273f8  line:1:21 invalid spl_filesystem_object_new 'int *(int *)' static   |-ParmVarDecl 0x13c927328 <col:47, col:65> col:65 invalid class_type 'int *'   `-CompoundStmt 0x13c927678 <line:2:1, line:4:1>     `-ReturnStmt 0x13c927668 <line:3:2, col:48>       `-CallExpr 0x13c927640 <col:9, col:48> '<dependent type>' contains-errors         |-DeclRefExpr 0x13c927600 <col:9> 'int ()' Function 0x13c927548 'spl_filesystem_object_new_ex' 'int ()'         `-RecoveryExpr 0x13c927620 <col:38> '<dependent type>' contains-errors lvalue ","19320":"`-FunctionDecl 0x15a00de80  line:1:13 invalid rewrite_pts_dts 'void (unsigned char *, int)' static   |-ParmVarDecl 0x15a00dd08 <col:29, col:44> col:44 used ptr 'unsigned char *'   |-ParmVarDecl 0x15a00dda0 <col:49, col:53> col:53 invalid TS 'int'   `-CompoundStmt 0x15a0290b8 <line:2:1, line:13:1>     |-CompoundAssignOperator 0x15a00dfd0 <line:3:2, col:12> 'unsigned char' '&=' ComputeLHSTy='int' ComputeResultTy='int'     | |-ArraySubscriptExpr 0x15a00df90 <col:2, col:7> 'unsigned char' lvalue     | | |-ImplicitCastExpr 0x15a00df78 <col:2> 'unsigned char *' <LValueToRValue>     | | | `-DeclRefExpr 0x15a00df38 <col:2> 'unsigned char *' lvalue ParmVar 0x15a00dd08 'ptr' 'unsigned char *'     | | `-IntegerLiteral 0x15a00df58 <col:6> 'int' 0     | `-IntegerLiteral 0x15a00dfb0 <col:12> 'int' 241     |-CompoundAssignOperator 0x15a00e1d0 <line:4:2, col:51> 'unsigned char' contains-errors '|=' ComputeLHSTy='int' ComputeResultTy='int'     | |-ArraySubscriptExpr 0x15a00e058 <col:2, col:7> 'unsigned char' lvalue     | | |-ImplicitCastExpr 0x15a00e040 <col:2> 'unsigned char *' <LValueToRValue>     | | | `-DeclRefExpr 0x15a00e000 <col:2> 'unsigned char *' lvalue ParmVar 0x15a00dd08 'ptr' 'unsigned char *'     | | `-IntegerLiteral 0x15a00e020 <col:6> 'int' 0     | `-ImplicitCastExpr 0x15a00e1b8 <col:12, col:51> 'int' contains-errors <IntegralCast>     |   `-CStyleCastExpr 0x15a00e190 <col:12, col:51> 'unsigned char' contains-errors <Dependent>     |     `-ParenExpr 0x15a00e170 <col:27, col:51> '<dependent type>' contains-errors     |       `-BinaryOperator 0x15a00e118 <col:28, col:49> '<dependent type>' contains-errors '>>'     |         |-ParenExpr 0x15a00e0d8 <col:28, col:46> '<dependent type>' contains-errors     |         | `-BinaryOperator 0x15a00e0b8 <col:29, col:32> '<dependent type>' contains-errors '&'     |         |   |-RecoveryExpr 0x15a00e078 <col:29> '<dependent type>' contains-errors lvalue     |         |   `-IntegerLiteral 0x15a00e098 <col:32> 'unsigned long long' 7516192768     |         `-IntegerLiteral 0x15a00e0f8 <col:49> 'int' 29     |-BinaryOperator 0x15a00e3b8 <line:5:2, col:51> 'unsigned char' contains-errors '='     | |-ArraySubscriptExpr 0x15a00e258 <col:2, col:7> 'unsigned char' lvalue     | | |-ImplicitCastExpr 0x15a00e240 <col:2> 'unsigned char *' <LValueToRValue>     | | | `-DeclRefExpr 0x15a00e200 <col:2> 'unsigned char *' lvalue ParmVar 0x15a00dd08 'ptr' 'unsigned char *'     | | `-IntegerLiteral 0x15a00e220 <col:6> 'int' 1     | `-CStyleCastExpr 0x15a00e390 <col:12, col:51> 'unsigned char' contains-errors <Dependent>     |   `-ParenExpr 0x15a00e370 <col:27, col:51> '<dependent type>' contains-errors     |     `-BinaryOperator 0x15a00e318 <col:28, col:49> '<dependent type>' contains-errors '>>'     |       |-ParenExpr 0x15a00e2d8 <col:28, col:46> '<dependent type>' contains-errors     |       | `-BinaryOperator 0x15a00e2b8 <col:29, col:32> '<dependent type>' contains-errors '&'     |       |   |-RecoveryExpr 0x15a00e278 <col:29> '<dependent type>' contains-errors lvalue     |       |   `-IntegerLiteral 0x15a00e298 <col:32> 'unsigned long long' 1069547520     |       `-IntegerLiteral 0x15a00e2f8 <col:49> 'int' 22     |-CompoundAssignOperator 0x15a028478 <line:6:2, col:12> 'unsigned char' '&=' ComputeLHSTy='int' ComputeResultTy='int'     | |-ArraySubscriptExpr 0x15a028438 <col:2, col:7> 'unsigned char' lvalue     | | |-ImplicitCastExpr 0x15a028420 <col:2> 'unsigned char *' <LValueToRValue>     | | | `-DeclRefExpr 0x15a00e3d8 <col:2> 'unsigned char *' lvalue ParmVar 0x15a00dd08 'ptr' 'unsigned char *'     | | `-IntegerLiteral 0x15a028400 <col:6> 'int' 2     | `-IntegerLiteral 0x15a028458 <col:12> 'int' 1     |-CompoundAssignOperator 0x15a028678 <line:7:2, col:51> 'unsigned char' contains-errors '|=' ComputeLHSTy='int' ComputeResultTy='int'     | |-ArraySubscriptExpr 0x15a028500 <col:2, col:7> 'unsigned char' lvalue     | | |-ImplicitCastExpr 0x15a0284e8 <col:2> 'unsigned char *' <LValueToRValue>     | | | `-DeclRefExpr 0x15a0284a8 <col:2> 'unsigned char *' lvalue ParmVar 0x15a00dd08 'ptr' 'unsigned char *'     | | `-IntegerLiteral 0x15a0284c8 <col:6> 'int' 2     | `-ImplicitCastExpr 0x15a028660 <col:12, col:51> 'int' contains-errors <IntegralCast>     |   `-CStyleCastExpr 0x15a028638 <col:12, col:51> 'unsigned char' contains-errors <Dependent>     |     `-ParenExpr 0x15a028618 <col:27, col:51> '<dependent type>' contains-errors     |       `-BinaryOperator 0x15a0285c0 <col:28, col:49> '<dependent type>' contains-errors '>>'     |         |-ParenExpr 0x15a028580 <col:28, col:46> '<dependent type>' contains-errors     |         | `-BinaryOperator 0x15a028560 <col:29, col:32> '<dependent type>' contains-errors '&'     |         |   |-RecoveryExpr 0x15a028520 <col:29> '<dependent type>' contains-errors lvalue     |         |   `-IntegerLiteral 0x15a028540 <col:32> 'unsigned long long' 4161536     |         `-IntegerLiteral 0x15a0285a0 <col:49> 'int' 14     |-BinaryOperator 0x15a028860 <line:8:2, col:50> 'unsigned char' contains-errors '='     | |-ArraySubscriptExpr 0x15a028700 <col:2, col:7> 'unsigned char' lvalue     | | |-ImplicitCastExpr 0x15a0286e8 <col:2> 'unsigned char *' <LValueToRValue>     | | | `-DeclRefExpr 0x15a0286a8 <col:2> 'unsigned char *' lvalue ParmVar 0x15a00dd08 'ptr' 'unsigned char *'     | | `-IntegerLiteral 0x15a0286c8 <col:6> 'int' 3     | `-CStyleCastExpr 0x15a028838 <col:12, col:50> 'unsigned char' contains-errors <Dependent>     |   `-ParenExpr 0x15a028818 <col:27, col:50> '<dependent type>' contains-errors     |     `-BinaryOperator 0x15a0287c0 <col:28, col:49> '<dependent type>' contains-errors '>>'     |       |-ParenExpr 0x15a028780 <col:28, col:46> '<dependent type>' contains-errors     |       | `-BinaryOperator 0x15a028760 <col:29, col:32> '<dependent type>' contains-errors '&'     |       |   |-RecoveryExpr 0x15a028720 <col:29> '<dependent type>' contains-errors lvalue     |       |   `-IntegerLiteral 0x15a028740 <col:32> 'unsigned long long' 32640     |       `-IntegerLiteral 0x15a0287a0 <col:49> 'int' 7     |-CompoundAssignOperator 0x15a028918 <line:9:2, col:12> 'unsigned char' '&=' ComputeLHSTy='int' ComputeResultTy='int'     | |-ArraySubscriptExpr 0x15a0288d8 <col:2, col:7> 'unsigned char' lvalue     | | |-ImplicitCastExpr 0x15a0288c0 <col:2> 'unsigned char *' <LValueToRValue>     | | | `-DeclRefExpr 0x15a028880 <col:2> 'unsigned char *' lvalue ParmVar 0x15a00dd08 'ptr' 'unsigned char *'     | | `-IntegerLiteral 0x15a0288a0 <col:6> 'int' 4     | `-IntegerLiteral 0x15a0288f8 <col:12> 'int' 1     `-CompoundAssignOperator 0x15a028b18 <line:10:2, col:50> 'unsigned char' contains-errors '|=' ComputeLHSTy='int' ComputeResultTy='int'       |-ArraySubscriptExpr 0x15a0289a0 <col:2, col:7> 'unsigned char' lvalue       | |-ImplicitCastExpr 0x15a028988 <col:2> 'unsigned char *' <LValueToRValue>       | | `-DeclRefExpr 0x15a028948 <col:2> 'unsigned char *' lvalue ParmVar 0x15a00dd08 'ptr' 'unsigned char *'       | `-IntegerLiteral 0x15a028968 <col:6> 'int' 4       `-ImplicitCastExpr 0x15a028b00 <col:12, col:50> 'int' contains-errors <IntegralCast>         `-CStyleCastExpr 0x15a028ad8 <col:12, col:50> 'unsigned char' contains-errors <Dependent>           `-ParenExpr 0x15a028ab8 <col:27, col:50> '<dependent type>' contains-errors             `-BinaryOperator 0x15a028a60 <col:28, col:49> '<dependent type>' contains-errors '<<'               |-ParenExpr 0x15a028a20 <col:28, col:46> '<dependent type>' contains-errors               | `-BinaryOperator 0x15a028a00 <col:29, col:32> '<dependent type>' contains-errors '&'               |   |-RecoveryExpr 0x15a0289c0 <col:29> '<dependent type>' contains-errors lvalue               |   `-IntegerLiteral 0x15a0289e0 <col:32> 'unsigned long long' 127               `-IntegerLiteral 0x15a028a40 <col:49> 'int' 1 ","19497":"`-FunctionDecl 0x12d944cb8  line:1:18 collect_mounts 'struct vfsmount *(struct path *)'   |-ParmVarDecl 0x12d9286e8 <col:33, col:46> col:46 used path 'struct path *'   `-CompoundStmt 0x12d945ac8 <line:2:1, line:11:1>     |-DeclStmt 0x12d944f98 <line:3:2, col:20>     | |-RecordDecl 0x12d944db0 <col:2, col:9> col:9 struct mount     | `-VarDecl 0x12d944f18 <col:2, col:16> col:16 used tree 'struct mount *'     |-CallExpr 0x12d945148 <line:4:2, col:17> 'int'     | `-ImplicitCastExpr 0x12d945130 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x12d9450e0 <col:2> 'int ()' Function 0x12d945028 'namespace_lock' 'int ()'     |-BinaryOperator 0x12d9455b0 <line:5:2, line:6:29> 'struct mount *' contains-errors '='     | |-DeclRefExpr 0x12d945168 <line:5:2> 'struct mount *' lvalue Var 0x12d944f18 'tree' 'struct mount *'     | `-CallExpr 0x12d945578 <col:9, line:6:29> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12d945268 <line:5:9> 'int ()' Function 0x12d9451b0 'copy_tree' 'int ()'     |   |-CallExpr 0x12d9453e8 <col:19, col:39> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12d945368 <col:19> 'int ()' Function 0x12d9452b0 'real_mount' 'int ()'     |   | `-RecoveryExpr 0x12d9453c0 <col:30, col:36> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x12d945388 <col:30> 'struct path *' lvalue ParmVar 0x12d9286e8 'path' 'struct path *'     |   |-RecoveryExpr 0x12d945448 <col:42, col:48> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x12d945410 <col:42> 'struct path *' lvalue ParmVar 0x12d9286e8 'path' 'struct path *'     |   `-BinaryOperator 0x12d945558 <line:6:5, col:19> '<dependent type>' contains-errors '|'     |     |-RecoveryExpr 0x12d945518 <col:5> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x12d945538 <col:19> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12d9456e8 <line:7:2, col:19> 'int'     | `-ImplicitCastExpr 0x12d9456d0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x12d9456b0 <col:2> 'int ()' Function 0x12d9455f8 'namespace_unlock' 'int ()'     |-IfStmt 0x12d945a20 <line:8:2, line:9:23>     | |-CallExpr 0x12d945840 <line:8:6, col:17> 'int'     | | |-ImplicitCastExpr 0x12d945828 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x12d9457e8 <col:6> 'int ()' Function 0x12d945730 'IS_ERR' 'int ()'     | | `-ImplicitCastExpr 0x12d945868 <col:13> 'struct mount *' <LValueToRValue>     | |   `-DeclRefExpr 0x12d945808 <col:13> 'struct mount *' lvalue Var 0x12d944f18 'tree' 'struct mount *'     | `-ReturnStmt 0x12d945a10 <line:9:3, col:23>     |   `-ImplicitCastExpr 0x12d9459f8 <col:10, col:23> 'struct vfsmount *' <IntegralToPointer>     |     `-CallExpr 0x12d9459b8 <col:10, col:23> 'int'     |       |-ImplicitCastExpr 0x12d9459a0 <col:10> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x12d945960 <col:10> 'int ()' Function 0x12d9458a8 'ERR_CAST' 'int ()'     |       `-ImplicitCastExpr 0x12d9459e0 <col:19> 'struct mount *' <LValueToRValue>     |         `-DeclRefExpr 0x12d945980 <col:19> 'struct mount *' lvalue Var 0x12d944f18 'tree' 'struct mount *'     `-ReturnStmt 0x12d945ab8 <line:10:2, col:16>       `-UnaryOperator 0x12d945aa0 <col:9, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x12d945a78 <col:10, col:16> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x12d945a40 <col:10> 'struct mount *' lvalue Var 0x12d944f18 'tree' 'struct mount *' ","19939":"`-FunctionDecl 0x15c126750  line:1:20 preempt_conditional_sti 'void (struct pt_regs *)' static inline   |-ParmVarDecl 0x15c126648 <col:44, col:60> col:60 used regs 'struct pt_regs *'   `-CompoundStmt 0x15c13ee28 <line:2:1, line:6:1>     |-CallExpr 0x15c13ebd8 <line:3:2, col:20> 'int'     | `-ImplicitCastExpr 0x15c13ebc0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x15c13eb70 <col:2> 'int ()' Function 0x15c13eab8 'inc_preempt_count' 'int ()'     `-IfStmt 0x15c13ee08 <line:4:2, line:5:20>       |-BinaryOperator 0x15c13ecb0 <line:4:6, col:20> '<dependent type>' contains-errors '&'       | |-RecoveryExpr 0x15c13ec30 <col:6, col:12> '<dependent type>' contains-errors lvalue       | | `-DeclRefExpr 0x15c13ebf8 <col:6> 'struct pt_regs *' lvalue ParmVar 0x15c126648 'regs' 'struct pt_regs *'       | `-RecoveryExpr 0x15c13ec90 <col:20> '<dependent type>' contains-errors lvalue       `-CallExpr 0x15c13ede8 <line:5:3, col:20> 'int'         `-ImplicitCastExpr 0x15c13edd0 <col:3> 'int (*)()' <FunctionToPointerDecay>           `-DeclRefExpr 0x15c13edb0 <col:3> 'int ()' Function 0x15c13ecf8 'local_irq_enable' 'int ()' ","19812":"`-FunctionDecl 0x141828b88  col:9 implicit used memmove 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x141828c88 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x141828cf0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x141828d58 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x141828c30 <<invalid sloc>> Implicit 884 ","20085":"`-FunctionDecl 0x14a12bc00  line:1:12 macsec_change_mtu 'int (struct net_device *, int)' static   |-ParmVarDecl 0x14a113848 <col:30, col:49> col:49 used dev 'struct net_device *'   |-ParmVarDecl 0x14a1138c8 <col:54, col:58> col:58 used new_mtu 'int'   `-CompoundStmt 0x14a12c6d8 <line:2:1, line:12:1>     |-DeclStmt 0x14a12c0f8 <line:3:2, col:46>     | |-RecordDecl 0x14a12bd00 <col:2, col:9> col:9 struct macsec_dev     | `-VarDecl 0x14a12be68 <col:2, col:45> col:21 used macsec 'struct macsec_dev *' cinit     |   `-ImplicitCastExpr 0x14a12c0c8 <col:30, col:45> 'struct macsec_dev *' <IntegralToPointer>     |     `-CallExpr 0x14a12c088 <col:30, col:45> 'int'     |       |-ImplicitCastExpr 0x14a12c070 <col:30> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14a12c000 <col:30> 'int ()' Function 0x14a12bf48 'macsec_priv' 'int ()'     |       `-ImplicitCastExpr 0x14a12c0b0 <col:42> 'struct net_device *' <LValueToRValue>     |         `-DeclRefExpr 0x14a12c020 <col:42> 'struct net_device *' lvalue ParmVar 0x14a113848 'dev' 'struct net_device *'     |-DeclStmt 0x14a12c400 <line:4:2, col:68>     | `-VarDecl 0x14a12c128 <col:2, col:67> col:15 used extra 'unsigned int' cinit     |   `-BinaryOperator 0x14a12c3e0 <col:23, col:67> '<dependent type>' contains-errors '+'     |     |-CXXDependentScopeMemberExpr 0x14a12c1f0 <col:23, col:36> '<dependent type>' contains-errors lvalue .icv_len     |     | `-RecoveryExpr 0x14a12c1c8 <col:23, col:31> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x14a12c190 <col:23> 'struct macsec_dev *' lvalue Var 0x14a12be68 'macsec' 'struct macsec_dev *'     |     `-CallExpr 0x14a12c3b8 <col:46, col:67> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x14a12c318 <col:46> 'int ()' Function 0x14a12c260 'macsec_extra_len' 'int ()'     |       `-RecoveryExpr 0x14a12c398 <col:63> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14a12c5e8 <line:6:2, line:7:11>     | |-BinaryOperator 0x14a12c520 <line:6:6, col:38> 'int' contains-errors '<'     | | |-BinaryOperator 0x14a12c4e0 <col:6, col:30> '<dependent type>' contains-errors '-'     | | | |-CXXDependentScopeMemberExpr 0x14a12c478 <col:6, col:24> '<dependent type>' contains-errors lvalue ->mtu     | | | | `-RecoveryExpr 0x14a12c450 <col:6, col:14> '<dependent type>' contains-errors lvalue     | | | |   `-DeclRefExpr 0x14a12c418 <col:6> 'struct macsec_dev *' lvalue Var 0x14a12be68 'macsec' 'struct macsec_dev *'     | | | `-DeclRefExpr 0x14a12c4c0 <col:30> 'unsigned int' contains-errors lvalue Var 0x14a12c128 'extra' 'unsigned int'     | | `-DeclRefExpr 0x14a12c500 <col:38> 'int' lvalue ParmVar 0x14a1138c8 'new_mtu' 'int'     | `-ReturnStmt 0x14a12c5d8 <line:7:3, col:11>     |   `-UnaryOperator 0x14a12c5c0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14a12c5a8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14a12c588 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14a12c688 <line:9:2, col:13> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14a12c640 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a12c608 <col:2> 'struct net_device *' lvalue ParmVar 0x14a113848 'dev' 'struct net_device *'     | `-DeclRefExpr 0x14a12c668 <col:13> 'int' lvalue ParmVar 0x14a1138c8 'new_mtu' 'int'     `-ReturnStmt 0x14a12c6c8 <line:11:2, col:9>       `-IntegerLiteral 0x14a12c6a8 <col:9> 'int' 0 ","19483":"`-FunctionDecl 0x13d0274d8  line:1:1 invalid wb_prep 'int (int *, const struct pkt_prep *, int)'   |-ParmVarDecl 0x13d00dd28 <col:9, col:29> col:29 invalid ndo 'int *'   |-ParmVarDecl 0x13d00e318 <line:2:9, col:32> col:32 used prep 'const struct pkt_prep *'   |-ParmVarDecl 0x13d00e398 <col:38, col:44> col:44 invalid len 'int'   `-CompoundStmt 0x13e008508 <line:3:1, line:32:1>     |-DeclStmt 0x13d027618 <line:4:2, col:7>     | `-VarDecl 0x13d0275b0 <col:2, col:6> col:6 used n 'int'     |-DeclStmt 0x13d027818 <line:5:2, col:26>     | |-RecordDecl 0x13d027630 <col:8, col:15> col:15 struct pgstate     | `-VarDecl 0x13d027798 <col:2, col:24> col:24 used ps 'const struct pgstate *'     |-DeclStmt 0x13d027918 <line:6:2, col:37>     | `-VarDecl 0x13d027848 <col:2, col:26> col:16 ep 'const char *' cinit     |   `-CXXDependentScopeMemberExpr 0x13d0278d0 <col:21, col:26> '<dependent type>' contains-errors lvalue ->ndo_snapend     |     `-RecoveryExpr 0x13d0278b0 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13d027b70 <line:8:2, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d027a90 <col:2> 'int ()' Function 0x13d0279d8 'ND_PRINT' 'int ()'     | `-ParenExpr 0x13d027b50 <col:11, col:22> 'char[4]' contains-errors     |   `-BinaryOperator 0x13d027b30 <col:12, col:17> 'char[4]' contains-errors ','     |     |-RecoveryExpr 0x13d027ab0 <col:12> '<dependent type>' contains-errors lvalue     |     `-StringLiteral 0x13d027b10 <col:17> 'char[4]' lvalue \"STR\"     |-IfStmt 0x13d027cc8 <line:9:2, line:11:2>     | |-RecoveryExpr 0x13d027c28 <line:9:6, col:24> '_Bool' contains-errors     | `-CompoundStmt 0x13d027cb0 <col:27, line:11:2>     |   `-ReturnStmt 0x13d027ca0 <line:10:3, col:13>     |     `-ParenExpr 0x13d027c80 <col:10, col:13> 'int'     |       `-UnaryOperator 0x13d027c68 <col:11, col:12> 'int' prefix '-'     |         `-IntegerLiteral 0x13d027c48 <col:12> 'int' 1     |-BinaryOperator 0x13d027ea8 <line:12:2, col:32> 'int' contains-errors '='     | |-DeclRefExpr 0x13d027ce8 <col:2> 'int' lvalue Var 0x13d0275b0 'n' 'int'     | `-CallExpr 0x13d027e80 <col:6, col:32> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13d027de8 <col:6> 'int ()' Function 0x13d027d30 'EXTRACT_32BITS' 'int ()'     |   `-UnaryOperator 0x13d027e68 <col:21, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x13d027e40 <col:22, col:28> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13d027e08 <col:22> 'const struct pkt_prep *' lvalue ParmVar 0x13d00e318 'prep' 'const struct pkt_prep *'     |-BinaryOperator 0x13d028060 <line:13:2, col:40> 'const struct pgstate *' contains-errors '='     | |-DeclRefExpr 0x13d027ec8 <col:2> 'const struct pgstate *' lvalue Var 0x13d027798 'ps' 'const struct pgstate *'     | `-CStyleCastExpr 0x13d028038 <col:7, col:40> 'const struct pgstate *' contains-errors <Dependent>     |   `-ParenExpr 0x13d028018 <col:31, col:40> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x13d027f40 <col:32, col:39> '<dependent type>' contains-errors lvalue     |       |-DeclRefExpr 0x13d027ee8 <col:32> 'const struct pkt_prep *' lvalue ParmVar 0x13d00e318 'prep' 'const struct pkt_prep *'     |       `-IntegerLiteral 0x13d027f08 <col:39> 'int' 1     `-WhileStmt 0x13e0084e8 <line:14:2, line:30:2>       |-BinaryOperator 0x13d028338 <line:14:9, col:34> 'int' contains-errors '&&'       | |-BinaryOperator 0x13d0280d8 <col:9, col:16> 'int' '>='       | | |-UnaryOperator 0x13d0280a0 <col:9, col:11> 'int' prefix '--'       | | | `-DeclRefExpr 0x13d028080 <col:11> 'int' lvalue Var 0x13d0275b0 'n' 'int'       | | `-IntegerLiteral 0x13d0280b8 <col:16> 'int' 0       | `-UnaryOperator 0x13d028320 <col:21, col:34> '<dependent type>' contains-errors prefix '!' cannot overflow       |   `-ImplicitCastExpr 0x13d028308 <col:22, col:34> '<dependent type>' contains-errors <LValueToRValue>       |     `-RecoveryExpr 0x13d0282d8 <col:22, col:34> '<dependent type>' contains-errors lvalue       |       |-DeclRefExpr 0x13d0281d8 <col:22> 'int ()' Function 0x13d028120 'ND_TTEST' 'int ()'       |       `-UnaryOperator 0x13d028230 <col:31, col:32> 'const struct pgstate' lvalue prefix '*' cannot overflow       |         `-ImplicitCastExpr 0x13d028218 <col:32> 'const struct pgstate *' <LValueToRValue>       |           `-DeclRefExpr 0x13d0281f8 <col:32> 'const struct pgstate *' lvalue Var 0x13d027798 'ps' 'const struct pgstate *'       `-CompoundStmt 0x13e0084a0 <col:37, line:30:2>         |-DeclStmt 0x13d02a3e0 <line:15:3, col:31>         | |-RecordDecl 0x13d028358 <col:9, col:16> col:16 struct id_off         | |-VarDecl 0x13d02a2c8 <col:3, col:24> col:24 used io 'const struct id_off *'         | `-VarDecl 0x13d02a358 <col:3, col:29> col:29 used ie 'const struct id_off *'         |-DeclStmt 0x13d02a4a0 <line:16:3, col:15>         | `-VarDecl 0x13d02a408 <col:3, col:12> col:8 used c 'char' cinit         |   `-ImplicitCastExpr 0x13d02a488 <col:12> 'char' <IntegralCast>         |     `-CharacterLiteral 0x13d02a470 <col:12> 'int' 60         |-CallExpr 0x13d02a990 <line:18:3, line:21:39> '<dependent type>' contains-errors         | |-DeclRefExpr 0x13d02a4b8 <line:18:3> 'int ()' Function 0x13d0279d8 'ND_PRINT' 'int ()'         | `-ParenExpr 0x13d02a970 <col:12, line:21:38> '<dependent type>' contains-errors         |   `-BinaryOperator 0x13d02a950 <line:18:13, line:21:37> '<dependent type>' contains-errors ','         |     |-BinaryOperator 0x13d02a828 <line:18:13, line:20:41> '<dependent type>' contains-errors ','         |     | |-BinaryOperator 0x13d02a5f8 <line:18:13, line:19:31> '<dependent type>' contains-errors ','         |     | | |-BinaryOperator 0x13d02a518 <line:18:13, col:18> 'char[4]' contains-errors ','         |     | | | |-RecoveryExpr 0x13d02a4d8 <col:13> '<dependent type>' contains-errors lvalue         |     | | | `-StringLiteral 0x13d02a4f8 <col:18> 'char[4]' lvalue \"STR\"         |     | | `-CallExpr 0x13d02a5d0 <line:19:7, col:31> '<dependent type>' contains-errors         |     | |   |-DeclRefExpr 0x13d02a538 <col:7> 'int ()' Function 0x13d027d30 'EXTRACT_32BITS' 'int ()'         |     | |   `-UnaryOperator 0x13d02a5b8 <col:22, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow         |     | |     `-RecoveryExpr 0x13d02a590 <col:23, col:27> '<dependent type>' contains-errors lvalue         |     | |       `-DeclRefExpr 0x13d02a558 <col:23> 'const struct pgstate *' lvalue Var 0x13d027798 'ps' 'const struct pgstate *'         |     | `-CallExpr 0x13d02a7f8 <line:20:7, col:41> '<dependent type>' contains-errors         |     |   |-DeclRefExpr 0x13d02a6f8 <col:7> 'int ()' Function 0x13d02a640 'ipaddr_string' 'int ()'         |     |   |-RecoveryExpr 0x13d02a718 <col:21> '<dependent type>' contains-errors lvalue         |     |   `-UnaryOperator 0x13d02a7e0 <col:26, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow         |     |     `-CXXDependentScopeMemberExpr 0x13d02a798 <col:27, col:36> '<dependent type>' contains-errors lvalue .p_sid         |     |       `-RecoveryExpr 0x13d02a770 <col:27, col:31> '<dependent type>' contains-errors lvalue         |     |         `-DeclRefExpr 0x13d02a738 <col:27> 'const struct pgstate *' lvalue Var 0x13d027798 'ps' 'const struct pgstate *'         |     `-CallExpr 0x13d02a928 <line:21:7, col:37> '<dependent type>' contains-errors         |       |-DeclRefExpr 0x13d02a848 <col:7> 'int ()' Function 0x13d027d30 'EXTRACT_32BITS' 'int ()'         |       `-UnaryOperator 0x13d02a910 <col:22, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow         |         `-CXXDependentScopeMemberExpr 0x13d02a8c8 <col:23, col:32> '<dependent type>' contains-errors lvalue .p_uid         |           `-RecoveryExpr 0x13d02a8a0 <col:23, col:27> '<dependent type>' contains-errors lvalue         |             `-DeclRefExpr 0x13d02a868 <col:23> 'const struct pgstate *' lvalue Var 0x13d027798 'ps' 'const struct pgstate *'         |-BinaryOperator 0x13d02ab98 <line:22:3, col:32> 'const struct id_off *' contains-errors '='         | |-DeclRefExpr 0x13d02a9b8 <col:3> 'const struct id_off *' lvalue Var 0x13d02a2c8 'io' 'const struct id_off *'         | `-ImplicitCastExpr 0x13d02ab80 <col:8, col:32> 'const struct id_off *' contains-errors <NoOp>         |   `-CStyleCastExpr 0x13d02ab58 <col:8, col:32> 'struct id_off *' contains-errors <Dependent>         |     `-ParenExpr 0x13d02ab38 <col:25, col:32> '<dependent type>' contains-errors lvalue         |       `-RecoveryExpr 0x13d02aa30 <col:26, col:31> '<dependent type>' contains-errors lvalue         |         |-DeclRefExpr 0x13d02a9d8 <col:26> 'const struct pgstate *' lvalue Var 0x13d027798 'ps' 'const struct pgstate *'         |         `-IntegerLiteral 0x13d02a9f8 <col:31> 'int' 1         |-ForStmt 0x13e008258 <line:23:3, line:27:3>         | |-BinaryOperator 0x13d02ac78 <line:23:8, col:22> 'const struct id_off *' contains-errors '='         | | |-DeclRefExpr 0x13d02abb8 <col:8> 'const struct id_off *' lvalue Var 0x13d02a358 'ie' 'const struct id_off *'         | | `-BinaryOperator 0x13d02ac58 <col:13, col:22> '<dependent type>' contains-errors '+'         | |   |-DeclRefExpr 0x13d02abd8 <col:13> 'const struct id_off *' lvalue Var 0x13d02a2c8 'io' 'const struct id_off *'         | |   `-RecoveryExpr 0x13d02ac30 <col:18, col:22> '<dependent type>' contains-errors lvalue         | |     `-DeclRefExpr 0x13d02abf8 <col:18> 'const struct pgstate *' lvalue Var 0x13d027798 'ps' 'const struct pgstate *'         | |-<<<NULL>>>         | |-BinaryOperator 0x13d02ae50 <col:27, col:51> 'int' contains-errors '&&'         | | |-BinaryOperator 0x13d02ad08 <col:27, col:32> 'int' '<'         | | | |-ImplicitCastExpr 0x13d02acd8 <col:27> 'const struct id_off *' <LValueToRValue>         | | | | `-DeclRefExpr 0x13d02ac98 <col:27> 'const struct id_off *' lvalue Var 0x13d02a2c8 'io' 'const struct id_off *'         | | | `-ImplicitCastExpr 0x13d02acf0 <col:32> 'const struct id_off *' <LValueToRValue>         | | |   `-DeclRefExpr 0x13d02acb8 <col:32> 'const struct id_off *' lvalue Var 0x13d02a358 'ie' 'const struct id_off *'         | | `-UnaryOperator 0x13d02ae38 <col:38, col:51> '<dependent type>' contains-errors prefix '!' cannot overflow         | |   `-ImplicitCastExpr 0x13d02ae20 <col:39, col:51> '<dependent type>' contains-errors <LValueToRValue>         | |     `-RecoveryExpr 0x13d02adf0 <col:39, col:51> '<dependent type>' contains-errors lvalue         | |       |-DeclRefExpr 0x13d02ad28 <col:39> 'int ()' Function 0x13d028120 'ND_TTEST' 'int ()'         | |       `-UnaryOperator 0x13d02ad80 <col:48, col:49> 'const struct id_off' lvalue prefix '*' cannot overflow         | |         `-ImplicitCastExpr 0x13d02ad68 <col:49> 'const struct id_off *' <LValueToRValue>         | |           `-DeclRefExpr 0x13d02ad48 <col:49> 'const struct id_off *' lvalue Var 0x13d02a2c8 'io' 'const struct id_off *'         | |-ImplicitCastExpr 0x13d02aeb8 <col:54, col:56> '<dependent type>' contains-errors <LValueToRValue>         | | `-RecoveryExpr 0x13d02ae90 <col:54, col:56> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x13d02ae70 <col:56> 'const struct id_off *' lvalue Var 0x13d02a2c8 'io' 'const struct id_off *'         | `-CompoundStmt 0x13e008238 <col:60, line:27:3>         |   |-CallExpr 0x13d02b198 <line:24:4, line:25:33> '<dependent type>' contains-errors         |   | |-DeclRefExpr 0x13d02aed0 <line:24:4> 'int ()' Function 0x13d0279d8 'ND_PRINT' 'int ()'         |   | `-ParenExpr 0x13d02b178 <col:13, line:25:32> '<dependent type>' contains-errors         |   |   `-BinaryOperator 0x13d02b158 <line:24:14, line:25:31> '<dependent type>' contains-errors ','         |   |     |-BinaryOperator 0x13d02b078 <line:24:14, col:55> '<dependent type>' contains-errors ','         |   |     | |-BinaryOperator 0x13d02af70 <col:14, col:26> 'char' contains-errors ','         |   |     | | |-BinaryOperator 0x13d02af30 <col:14, col:19> 'char[4]' contains-errors ','         |   |     | | | |-RecoveryExpr 0x13d02aef0 <col:14> '<dependent type>' contains-errors lvalue         |   |     | | | `-StringLiteral 0x13d02af10 <col:19> 'char[4]' lvalue \"STR\"         |   |     | | `-DeclRefExpr 0x13d02af50 <col:26> 'char' lvalue Var 0x13d02a408 'c' 'char'         |   |     | `-CallExpr 0x13d02b048 <col:29, col:55> '<dependent type>' contains-errors         |   |     |   |-DeclRefExpr 0x13d02af90 <col:29> 'int ()' Function 0x13d02a640 'ipaddr_string' 'int ()'         |   |     |   |-RecoveryExpr 0x13d02afb0 <col:43> '<dependent type>' contains-errors lvalue         |   |     |   `-UnaryOperator 0x13d02b030 <col:48, col:53> '<dependent type>' contains-errors prefix '&' cannot overflow         |   |     |     `-RecoveryExpr 0x13d02b008 <col:49, col:53> '<dependent type>' contains-errors lvalue         |   |     |       `-DeclRefExpr 0x13d02afd0 <col:49> 'const struct id_off *' lvalue Var 0x13d02a2c8 'io' 'const struct id_off *'         |   |     `-CallExpr 0x13d02b130 <line:25:8, col:31> '<dependent type>' contains-errors         |   |       |-DeclRefExpr 0x13d02b098 <col:8> 'int ()' Function 0x13d027d30 'EXTRACT_32BITS' 'int ()'         |   |       `-UnaryOperator 0x13d02b118 <col:23, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow         |   |         `-RecoveryExpr 0x13d02b0f0 <col:24, col:28> '<dependent type>' contains-errors lvalue         |   |           `-DeclRefExpr 0x13d02b0b8 <col:24> 'const struct id_off *' lvalue Var 0x13d02a2c8 'io' 'const struct id_off *'         |   `-BinaryOperator 0x13e008218 <line:26:4, col:8> 'char' '='         |     |-DeclRefExpr 0x13d02b1c0 <col:4> 'char' lvalue Var 0x13d02a408 'c' 'char'         |     `-ImplicitCastExpr 0x13e008200 <col:8> 'char' <IntegralCast>         |       `-CharacterLiteral 0x13d02b1e0 <col:8> 'int' 44         |-CallExpr 0x13e008330 <line:28:3, col:24> '<dependent type>' contains-errors         | |-DeclRefExpr 0x13e008290 <col:3> 'int ()' Function 0x13d0279d8 'ND_PRINT' 'int ()'         | `-ParenExpr 0x13e008310 <col:12, col:23> 'char[4]' contains-errors         |   `-BinaryOperator 0x13e0082f0 <col:13, col:18> 'char[4]' contains-errors ','         |     |-RecoveryExpr 0x13e0082b0 <col:13> '<dependent type>' contains-errors lvalue         |     `-StringLiteral 0x13e0082d0 <col:18> 'char[4]' lvalue \"STR\"         `-BinaryOperator 0x13e008480 <line:29:3, col:26> 'const struct pgstate *' '='           |-DeclRefExpr 0x13e008358 <col:3> 'const struct pgstate *' lvalue Var 0x13d027798 'ps' 'const struct pgstate *'           `-ImplicitCastExpr 0x13e008468 <col:8, col:26> 'const struct pgstate *' <NoOp>             `-CStyleCastExpr 0x13e008440 <col:8, col:26> 'struct pgstate *' <BitCast>               `-ImplicitCastExpr 0x13e008428 <col:26> 'const struct id_off *' <LValueToRValue> part_of_explicit_cast                 `-DeclRefExpr 0x13e008378 <col:26> 'const struct id_off *' lvalue Var 0x13d02a2c8 'io' 'const struct id_off *' ","19381":"`-FunctionDecl 0x1218dfff8  line:1:1 invalid add_emit_deactivated_idle 'int (int *)'   |-ParmVarDecl 0x1218dff28 <col:28, col:38> col:38 invalid window 'int *'   `-CompoundStmt 0x1218e0258 <line:2:1, line:4:1> ","19777":"`-FunctionDecl 0x150101348  line:1:12 hw_rule_channels 'int (struct snd_pcm_hw_params *, struct snd_pcm_hw_rule *)' static   |-ParmVarDecl 0x1500e8e48 <col:29, col:55> col:55 used params 'struct snd_pcm_hw_params *'   |-ParmVarDecl 0x150101228 <line:2:8, col:32> col:32 used rule 'struct snd_pcm_hw_rule *'   `-CompoundStmt 0x158049f20 <line:3:1, line:50:1>     |-DeclStmt 0x150101698 <line:4:2, col:48>     | |-RecordDecl 0x150101448 <col:2, col:9> col:9 struct snd_usb_substream     | `-VarDecl 0x1501015b8 <col:2, col:41> col:28 used subs 'struct snd_usb_substream *' cinit     |   `-RecoveryExpr 0x150101658 <col:35, col:41> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x150101620 <col:35> 'struct snd_pcm_hw_rule *' lvalue ParmVar 0x150101228 'rule' 'struct snd_pcm_hw_rule *'     |-DeclStmt 0x150101898 <line:5:2, col:24>     | |-RecordDecl 0x1501016b0 <col:2, col:9> col:9 struct audioformat     | `-VarDecl 0x150101818 <col:2, col:22> col:22 used fp 'struct audioformat *'     |-DeclStmt 0x150101ca0 <line:6:2, col:82>     | |-RecordDecl 0x1501018b0 <col:2, col:9> col:9 struct snd_interval     | `-VarDecl 0x150101a18 <col:2, col:81> col:23 used it 'struct snd_interval *' cinit     |   `-CallExpr 0x150101c58 <col:28, col:81> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x150101bb0 <col:28> 'int ()' Function 0x150101af8 'hw_param_interval' 'int ()'     |     |-DeclRefExpr 0x150101bd0 <col:46> 'struct snd_pcm_hw_params *' lvalue ParmVar 0x1500e8e48 'params' 'struct snd_pcm_hw_params *'     |     `-RecoveryExpr 0x150101c38 <col:54> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x150101dd0 <line:7:2, col:25>     | |-VarDecl 0x150101cd0 <col:2, col:15> col:15 used rmin 'unsigned int'     | `-VarDecl 0x150101d50 <col:2, col:21> col:21 used rmax 'unsigned int'     |-DeclStmt 0x150101e68 <line:8:2, col:13>     | `-VarDecl 0x150101e00 <col:2, col:6> col:6 used changed 'int'     |-CallExpr 0x1501020a0 <line:10:2, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x150101f60 <col:2> 'int ()' Function 0x150101ea8 'hwc_debug' 'int ()'     | |-StringLiteral 0x150101fc0 <col:12> 'char[4]' lvalue \"STR\"     | |-RecoveryExpr 0x150102018 <col:19, col:23> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x150101fe0 <col:19> 'struct snd_interval *' contains-errors lvalue Var 0x150101a18 'it' 'struct snd_interval *'     | `-RecoveryExpr 0x150102078 <col:28, col:32> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x150102040 <col:28> 'struct snd_interval *' contains-errors lvalue Var 0x150101a18 'it' 'struct snd_interval *'     |-BinaryOperator 0x150102118 <line:11:2, col:12> 'int' '='     | |-DeclRefExpr 0x1501020d8 <col:2> 'int' lvalue Var 0x150101e00 'changed' 'int'     | `-IntegerLiteral 0x1501020f8 <col:12> 'int' 0     |-BinaryOperator 0x1501021d0 <line:12:2, col:16> 'unsigned int' '='     | |-DeclRefExpr 0x150102138 <col:2> 'unsigned int' lvalue Var 0x150101cd0 'rmin' 'unsigned int'     | `-BinaryOperator 0x1501021b0 <col:9, col:16> 'unsigned int' '='     |   |-DeclRefExpr 0x150102158 <col:9> 'unsigned int' lvalue Var 0x150101d50 'rmax' 'unsigned int'     |   `-ImplicitCastExpr 0x150102198 <col:16> 'unsigned int' <IntegralCast>     |     `-IntegerLiteral 0x150102178 <col:16> 'int' 0     |-CallExpr 0x158042808 <line:13:2, col:47> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1580426e0 <col:2> 'int ()' Function 0x158042628 'list_for_each_entry' 'int ()'     | |-DeclRefExpr 0x158042700 <col:22> 'struct audioformat *' lvalue Var 0x150101818 'fp' 'struct audioformat *'     | |-UnaryOperator 0x158042780 <col:26, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x158042758 <col:27, col:33> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x158042720 <col:27> 'struct snd_usb_substream *' contains-errors lvalue Var 0x1501015b8 'subs' 'struct snd_usb_substream *'     | `-RecoveryExpr 0x1580427e8 <col:43> '<dependent type>' contains-errors lvalue     |-CompoundStmt 0x158042f28 <col:49, line:25:2>     | `-IfStmt 0x158042ef8 <line:16:3, line:24:3> has_else     |   |-UnaryOperator 0x158042aa0 <line:16:7, col:14> 'int' postfix '++'     |   | `-DeclRefExpr 0x158042a80 <col:7> 'int' lvalue Var 0x150101e00 'changed' 'int'     |   |-CompoundStmt 0x158042d78 <col:18, line:21:3>     |   | |-IfStmt 0x158042bf8 <line:17:4, line:18:16>     |   | | |-BinaryOperator 0x158042b38 <line:17:8, col:19> 'int' contains-errors '>'     |   | | | |-DeclRefExpr 0x158042ab8 <col:8> 'unsigned int' lvalue Var 0x150101cd0 'rmin' 'unsigned int'     |   | | | `-RecoveryExpr 0x158042b10 <col:15, col:19> '<dependent type>' contains-errors lvalue     |   | | |   `-DeclRefExpr 0x158042ad8 <col:15> 'struct audioformat *' lvalue Var 0x150101818 'fp' 'struct audioformat *'     |   | | `-BinaryOperator 0x158042bd8 <line:18:5, col:16> 'unsigned int' contains-errors '='     |   | |   |-DeclRefExpr 0x158042b58 <col:5> 'unsigned int' lvalue Var 0x150101cd0 'rmin' 'unsigned int'     |   | |   `-RecoveryExpr 0x158042bb0 <col:12, col:16> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x158042b78 <col:12> 'struct audioformat *' lvalue Var 0x150101818 'fp' 'struct audioformat *'     |   | `-IfStmt 0x158042d58 <line:19:4, line:20:16>     |   |   |-BinaryOperator 0x158042c98 <line:19:8, col:19> 'int' contains-errors '<'     |   |   | |-DeclRefExpr 0x158042c18 <col:8> 'unsigned int' lvalue Var 0x150101d50 'rmax' 'unsigned int'     |   |   | `-RecoveryExpr 0x158042c70 <col:15, col:19> '<dependent type>' contains-errors lvalue     |   |   |   `-DeclRefExpr 0x158042c38 <col:15> 'struct audioformat *' lvalue Var 0x150101818 'fp' 'struct audioformat *'     |   |   `-BinaryOperator 0x158042d38 <line:20:5, col:16> 'unsigned int' contains-errors '='     |   |     |-DeclRefExpr 0x158042cb8 <col:5> 'unsigned int' lvalue Var 0x150101d50 'rmax' 'unsigned int'     |   |     `-RecoveryExpr 0x158042d10 <col:12, col:16> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x158042cd8 <col:12> 'struct audioformat *' lvalue Var 0x150101818 'fp' 'struct audioformat *'     |   `-CompoundStmt 0x158042ed8 <line:21:10, line:24:3>     |     |-BinaryOperator 0x158042e18 <line:22:4, col:15> 'unsigned int' contains-errors '='     |     | |-DeclRefExpr 0x158042d98 <col:4> 'unsigned int' lvalue Var 0x150101cd0 'rmin' 'unsigned int'     |     | `-RecoveryExpr 0x158042df0 <col:11, col:15> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x158042db8 <col:11> 'struct audioformat *' lvalue Var 0x150101818 'fp' 'struct audioformat *'     |     `-BinaryOperator 0x158042eb8 <line:23:4, col:15> 'unsigned int' contains-errors '='     |       |-DeclRefExpr 0x158042e38 <col:4> 'unsigned int' lvalue Var 0x150101d50 'rmax' 'unsigned int'     |       `-RecoveryExpr 0x158042e90 <col:11, col:15> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x158042e58 <col:11> 'struct audioformat *' lvalue Var 0x150101818 'fp' 'struct audioformat *'     |-IfStmt 0x158043198 <line:27:2, line:31:2>     | |-UnaryOperator 0x158042f78 <line:27:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x158042f60 <col:7> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x158042f40 <col:7> 'int' lvalue Var 0x150101e00 'changed' 'int'     | `-CompoundStmt 0x158043170 <col:16, line:31:2>     |   |-CallExpr 0x158042fe8 <line:28:3, col:18> 'int'     |   | |-ImplicitCastExpr 0x158042fd0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x158042f90 <col:3> 'int ()' Function 0x150101ea8 'hwc_debug' 'int ()'     |   | `-ImplicitCastExpr 0x158043010 <col:13> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x158042fb0 <col:13> 'char[4]' lvalue \"STR\"     |   |-BinaryOperator 0x1580430a8 <line:29:3, col:15> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x158043060 <col:3, col:7> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x158043028 <col:3> 'struct snd_interval *' contains-errors lvalue Var 0x150101a18 'it' 'struct snd_interval *'     |   | `-IntegerLiteral 0x158043088 <col:15> 'int' 1     |   `-ReturnStmt 0x158043160 <line:30:3, col:11>     |     `-UnaryOperator 0x158043148 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x158043130 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x158043110 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1580431f8 <line:33:2, col:12> 'int' '='     | |-DeclRefExpr 0x1580431b8 <col:2> 'int' lvalue Var 0x150101e00 'changed' 'int'     | `-IntegerLiteral 0x1580431d8 <col:12> 'int' 0     |-IfStmt 0x158043480 <line:34:2, line:38:2>     | |-BinaryOperator 0x158043298 <line:34:6, col:16> 'int' contains-errors '<'     | | |-RecoveryExpr 0x158043250 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x158043218 <col:6> 'struct snd_interval *' contains-errors lvalue Var 0x150101a18 'it' 'struct snd_interval *'     | | `-DeclRefExpr 0x158043278 <col:16> 'unsigned int' lvalue Var 0x150101cd0 'rmin' 'unsigned int'     | `-CompoundStmt 0x158043458 <col:22, line:38:2>     |   |-BinaryOperator 0x158043338 <line:35:3, col:13> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x1580432f0 <col:3, col:7> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x1580432b8 <col:3> 'struct snd_interval *' contains-errors lvalue Var 0x150101a18 'it' 'struct snd_interval *'     |   | `-DeclRefExpr 0x158043318 <col:13> 'unsigned int' lvalue Var 0x150101cd0 'rmin' 'unsigned int'     |   |-BinaryOperator 0x1580433d8 <line:36:3, col:17> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x158043390 <col:3, col:7> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x158043358 <col:3> 'struct snd_interval *' contains-errors lvalue Var 0x150101a18 'it' 'struct snd_interval *'     |   | `-IntegerLiteral 0x1580433b8 <col:17> 'int' 0     |   `-BinaryOperator 0x158043438 <line:37:3, col:13> 'int' '='     |     |-DeclRefExpr 0x1580433f8 <col:3> 'int' lvalue Var 0x150101e00 'changed' 'int'     |     `-IntegerLiteral 0x158043418 <col:13> 'int' 1     |-IfStmt 0x158049b08 <line:39:2, line:43:2>     | |-BinaryOperator 0x158043520 <line:39:6, col:16> 'int' contains-errors '>'     | | |-RecoveryExpr 0x1580434d8 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x1580434a0 <col:6> 'struct snd_interval *' contains-errors lvalue Var 0x150101a18 'it' 'struct snd_interval *'     | | `-DeclRefExpr 0x158043500 <col:16> 'unsigned int' lvalue Var 0x150101d50 'rmax' 'unsigned int'     | `-CompoundStmt 0x158049ae0 <col:22, line:43:2>     |   |-BinaryOperator 0x1580435c0 <line:40:3, col:13> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x158043578 <col:3, col:7> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x158043540 <col:3> 'struct snd_interval *' contains-errors lvalue Var 0x150101a18 'it' 'struct snd_interval *'     |   | `-DeclRefExpr 0x1580435a0 <col:13> 'unsigned int' lvalue Var 0x150101d50 'rmax' 'unsigned int'     |   |-BinaryOperator 0x158049a60 <line:41:3, col:17> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x158049a18 <col:3, col:7> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x1580435e0 <col:3> 'struct snd_interval *' contains-errors lvalue Var 0x150101a18 'it' 'struct snd_interval *'     |   | `-IntegerLiteral 0x158049a40 <col:17> 'int' 0     |   `-BinaryOperator 0x158049ac0 <line:42:3, col:13> 'int' '='     |     |-DeclRefExpr 0x158049a80 <col:3> 'int' lvalue Var 0x150101e00 'changed' 'int'     |     `-IntegerLiteral 0x158049aa0 <col:13> 'int' 1     |-IfStmt 0x158049d58 <line:44:2, line:47:2>     | |-CallExpr 0x158049c60 <line:44:6, col:32> 'int' contains-errors     | | |-ImplicitCastExpr 0x158049c48 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x158049c08 <col:6> 'int ()' Function 0x158049b50 'snd_interval_checkempty' 'int ()'     | | `-ImplicitCastExpr 0x158049c88 <col:30> 'struct snd_interval *' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x158049c28 <col:30> 'struct snd_interval *' contains-errors lvalue Var 0x150101a18 'it' 'struct snd_interval *'     | `-CompoundStmt 0x158049d40 <col:35, line:47:2>     |   `-BinaryOperator 0x158049d20 <line:45:3, col:15> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x158049cd8 <col:3, col:7> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x158049ca0 <col:3> 'struct snd_interval *' contains-errors lvalue Var 0x150101a18 'it' 'struct snd_interval *'     |     `-IntegerLiteral 0x158049d00 <col:15> 'int' 1     |-CallExpr 0x158049e98 <line:48:2, col:44> '<dependent type>' contains-errors     | |-DeclRefExpr 0x158049d78 <col:2> 'int ()' Function 0x150101ea8 'hwc_debug' 'int ()'     | |-StringLiteral 0x158049d98 <col:12> 'char[4]' lvalue \"STR\"     | |-RecoveryExpr 0x158049df0 <col:19, col:23> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x158049db8 <col:19> 'struct snd_interval *' contains-errors lvalue Var 0x150101a18 'it' 'struct snd_interval *'     | |-RecoveryExpr 0x158049e50 <col:28, col:32> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x158049e18 <col:28> 'struct snd_interval *' contains-errors lvalue Var 0x150101a18 'it' 'struct snd_interval *'     | `-DeclRefExpr 0x158049e78 <col:37> 'int' lvalue Var 0x150101e00 'changed' 'int'     `-ReturnStmt 0x158049f10 <line:49:2, col:9>       `-ImplicitCastExpr 0x158049ef8 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x158049ed8 <col:9> 'int' lvalue Var 0x150101e00 'changed' 'int' ","19584":"`-FunctionDecl 0x131142318  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x131142418 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x131142480 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x1311424e8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1311423c0 <<invalid sloc>> Implicit 882 ","20036":"`-FunctionDecl 0x13f107208  line:1:21 invalid GatherNd 'int (const int)' inline   |-ParmVarDecl 0x13f1070f0 <col:30, <invalid sloc>> col:48 invalid 'const int'   `-CompoundStmt 0x13d81ad10 <line:6:52, line:22:1>     |-RecoveryExpr 0x13f1072e8 <line:7:3> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x13f107560 <line:9:3, col:79>     | `-VarDecl 0x13f107320 <col:3, col:30> col:30 invalid res 'const int'     `-ForStmt 0x13d81acd8 <line:10:3, line:20:3>       |-DeclStmt 0x13f107618 <line:10:8, col:17>       | `-VarDecl 0x13f107590 <col:8, col:16> col:12 used i 'int' cinit       |   `-IntegerLiteral 0x13f1075f8 <col:16> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x13f1076b8 <col:19, col:27> 'int' contains-errors '<'       | |-DeclRefExpr 0x13f107630 <col:19> 'int' lvalue Var 0x13f107590 'i' 'int'       | `-CXXDependentScopeMemberExpr 0x13f107670 <col:23, col:27> '<dependent type>' contains-errors lvalue .n_slices       |   `-RecoveryExpr 0x13f107650 <col:23> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x13f1076f8 <col:37, col:39> 'int' prefix '++'       | `-DeclRefExpr 0x13f1076d8 <col:39> 'int' lvalue Var 0x13f107590 'i' 'int'       `-CompoundStmt 0x13d81acb0 <col:42, line:20:3>         |-ForStmt 0x13d81a8a8 <line:12:5, line:14:5>         | |-DeclStmt 0x13f1077b0 <line:12:10, col:19>         | | `-VarDecl 0x13f107728 <col:10, col:18> col:14 used j 'int' cinit         | |   `-IntegerLiteral 0x13f107790 <col:18> 'int' 0         | |-<<<NULL>>>         | |-BinaryOperator 0x13d81a668 <col:21, col:29> 'int' contains-errors '<'         | | |-DeclRefExpr 0x13f1077c8 <col:21> 'int' lvalue Var 0x13f107728 'j' 'int'         | | `-CXXDependentScopeMemberExpr 0x13d81a620 <col:25, col:29> '<dependent type>' contains-errors lvalue .indices_nd         | |   `-RecoveryExpr 0x13d81a600 <col:25> '<dependent type>' contains-errors lvalue         | |-UnaryOperator 0x13d81a6a8 <col:41, col:43> 'int' prefix '++'         | | `-DeclRefExpr 0x13d81a688 <col:43> 'int' lvalue Var 0x13f107728 'j' 'int'         | `-CompoundStmt 0x13d81a898 <col:46, line:14:5>         |-IfStmt 0x13d81ac40 <line:15:5, line:17:5>         | |-BinaryOperator 0x13d81abc0 <line:15:9, col:75> 'int' contains-errors '||'         | | |-BinaryOperator 0x13d81aab8 <col:9, col:20> 'int' contains-errors '<'         | | | |-RecoveryExpr 0x13d81aa98 <col:9> '<dependent type>' contains-errors lvalue         | | | `-IntegerLiteral 0x13d81a8f8 <col:20> 'int' 0         | | `-BinaryOperator 0x13d81aba0 <col:25, col:75> 'int' contains-errors '>'         | |   |-BinaryOperator 0x13d81aaf8 <col:25, col:40> '<dependent type>' contains-errors '+'         | |   | |-RecoveryExpr 0x13d81aad8 <col:25> '<dependent type>' contains-errors lvalue         | |   | `-CXXDependentScopeMemberExpr 0x13d81a970 <col:36, col:40> '<dependent type>' contains-errors lvalue .slice_size         | |   |   `-RecoveryExpr 0x13d81a950 <col:36> '<dependent type>' contains-errors lvalue         | |   `-CallExpr 0x13d81ab80 <col:53, col:75> '<dependent type>' contains-errors         | |     `-CXXDependentScopeMemberExpr 0x13d81ab38 <col:53, col:66> '<dependent type>' contains-errors lvalue .FlatSize         | |       `-RecoveryExpr 0x13d81ab18 <col:53> '<dependent type>' contains-errors lvalue         | `-CompoundStmt 0x13d81ac28 <col:78, line:17:5>         |   `-ReturnStmt 0x13d81ac18 <line:16:7, col:14>         |     `-RecoveryExpr 0x13d81abf8 <col:14> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x13d81ac90 <line:18:5> '<dependent type>' contains-errors lvalue ","20126":"`-FunctionDecl 0x13582e808  line:1:12 tipc_nl_retrieve_key 'int (struct nlattr **, struct tipc_aead_key **)' static   |-ParmVarDecl 0x1358162a8 <col:33, col:49> col:49 used attrs 'struct nlattr **'   |-ParmVarDecl 0x13582e6e8 <line:2:5, col:28> col:28 used key 'struct tipc_aead_key **'   `-CompoundStmt 0x13582f2b8 <line:3:1, line:14:1>     |-DeclStmt 0x13582ea50 <line:4:2, col:48>     | `-VarDecl 0x13582e998 <col:2, col:17> col:17 used attr 'struct nlattr *'     |-IfStmt 0x13582eb60 <line:6:2, line:7:11>     | |-UnaryOperator 0x13582eaa0 <line:6:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13582ea88 <col:7> 'struct nlattr *' <LValueToRValue>     | |   `-DeclRefExpr 0x13582ea68 <col:7> 'struct nlattr *' lvalue Var 0x13582e998 'attr' 'struct nlattr *'     | `-ReturnStmt 0x13582eb50 <line:7:3, col:11>     |   `-UnaryOperator 0x13582eb38 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x13582eb20 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13582eb00 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13582ee60 <line:9:2, col:46> 'struct tipc_aead_key *' '='     | |-UnaryOperator 0x13582ebb8 <col:2, col:3> 'struct tipc_aead_key *' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x13582eba0 <col:3> 'struct tipc_aead_key **' <LValueToRValue>     | |   `-DeclRefExpr 0x13582eb80 <col:3> 'struct tipc_aead_key **' lvalue ParmVar 0x13582e6e8 'key' 'struct tipc_aead_key **'     | `-CStyleCastExpr 0x13582ee38 <col:9, col:46> 'struct tipc_aead_key *' <IntegralToPointer>     |   `-CallExpr 0x13582ed68 <col:33, col:46> 'int'     |     |-ImplicitCastExpr 0x13582ed50 <col:33> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x13582ece0 <col:33> 'int ()' Function 0x13582ec28 'nla_data' 'int ()'     |     `-ImplicitCastExpr 0x13582ed90 <col:42> 'struct nlattr *' <LValueToRValue>     |       `-DeclRefExpr 0x13582ed00 <col:42> 'struct nlattr *' lvalue Var 0x13582e998 'attr' 'struct nlattr *'     |-IfStmt 0x13582f268 <line:10:2, line:11:11>     | |-BinaryOperator 0x13582f1a0 <line:10:6, col:45> 'int' '<'     | | |-CallExpr 0x13582efb8 <col:6, col:18> 'int'     | | | |-ImplicitCastExpr 0x13582efa0 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x13582ef60 <col:6> 'int ()' Function 0x13582eea8 'nla_len' 'int ()'     | | | `-ImplicitCastExpr 0x13582efe0 <col:14> 'struct nlattr *' <LValueToRValue>     | | |   `-DeclRefExpr 0x13582ef80 <col:14> 'struct nlattr *' lvalue Var 0x13582e998 'attr' 'struct nlattr *'     | | `-CallExpr 0x13582f160 <col:22, col:45> 'int'     | |   |-ImplicitCastExpr 0x13582f148 <col:22> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x13582f0d8 <col:22> 'int ()' Function 0x13582f020 'tipc_aead_key_size' 'int ()'     | |   `-ImplicitCastExpr 0x13582f188 <col:41, col:42> 'struct tipc_aead_key *' <LValueToRValue>     | |     `-UnaryOperator 0x13582f130 <col:41, col:42> 'struct tipc_aead_key *' lvalue prefix '*' cannot overflow     | |       `-ImplicitCastExpr 0x13582f118 <col:42> 'struct tipc_aead_key **' <LValueToRValue>     | |         `-DeclRefExpr 0x13582f0f8 <col:42> 'struct tipc_aead_key **' lvalue ParmVar 0x13582e6e8 'key' 'struct tipc_aead_key **'     | `-ReturnStmt 0x13582f258 <line:11:3, col:11>     |   `-UnaryOperator 0x13582f240 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x13582f228 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13582f208 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x13582f2a8 <line:13:2, col:9>       `-IntegerLiteral 0x13582f288 <col:9> 'int' 0 ","19801":"`-FunctionDecl 0x151126158  line:1:1 nfs_readdir_inode_mapping_valid 'int (struct nfs_inode *)'   |-ParmVarDecl 0x151126048 <col:33, col:51> col:51 used nfsi 'struct nfs_inode *'   `-CompoundStmt 0x15113e938 <line:2:1, line:8:1>     |-CallExpr 0x15113e6c8 <line:6:2, col:10> 'int'     | `-ImplicitCastExpr 0x15113e6b0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x15113e660 <col:2> 'int ()' Function 0x15113e5a8 'smp_rmb' 'int ()'     `-ReturnStmt 0x15113e928 <line:7:2, col:53>       `-UnaryOperator 0x15113e910 <col:9, col:53> '<dependent type>' contains-errors prefix '!' cannot overflow         `-CallExpr 0x15113e8e0 <col:10, col:53> '<dependent type>' contains-errors           |-DeclRefExpr 0x15113e7c8 <col:10> 'int ()' Function 0x15113e710 'test_bit' 'int ()'           |-RecoveryExpr 0x15113e8c0 <col:19> '<dependent type>' contains-errors lvalue           `-UnaryOperator 0x15113e860 <col:41, col:48> '<dependent type>' contains-errors prefix '&' cannot overflow             `-RecoveryExpr 0x15113e838 <col:42, col:48> '<dependent type>' contains-errors lvalue               `-DeclRefExpr 0x15113e800 <col:42> 'struct nfs_inode *' lvalue ParmVar 0x151126048 'nfsi' 'struct nfs_inode *' ","19246":"`-FunctionDecl 0x15500dee8  line:1:9 invalid load_image_size 'int (const char *, void *, int)'   |-ParmVarDecl 0x15500dcf0 <col:25, col:37> col:37 used filename 'const char *'   |-ParmVarDecl 0x15500dd70 <col:47, col:53> col:53 used addr 'void *'   |-ParmVarDecl 0x15500ddf0 <col:59, col:66> col:66 invalid size 'int'   `-CompoundStmt 0x153813a30 <line:2:1, line:18:1>     |-DeclStmt 0x15500e028 <line:3:5, col:11>     | `-VarDecl 0x15500dfc0 <col:5, col:9> col:9 used fd 'int'     |-BinaryOperator 0x15500e330 <line:6:5, col:44> 'int' contains-errors '='     | |-DeclRefExpr 0x15500e040 <col:5> 'int' lvalue Var 0x15500dfc0 'fd' 'int'     | `-CallExpr 0x15500e300 <col:10, col:44> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15500e1c0 <col:10> 'int ()' Function 0x15500e108 'open' 'int ()'     |   |-DeclRefExpr 0x15500e1e0 <col:15> 'const char *' lvalue ParmVar 0x15500dcf0 'filename' 'const char *'     |   `-BinaryOperator 0x15500e2e0 <col:25, col:36> '<dependent type>' contains-errors '|'     |     |-RecoveryExpr 0x15500e2a0 <col:25> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x15500e2c0 <col:36> '<dependent type>' contains-errors lvalue     |-IfStmt 0x153813428 <line:7:5, line:9:5>     | |-BinaryOperator 0x15500e3a8 <line:7:9, col:14> 'int' '<'     | | |-ImplicitCastExpr 0x15500e390 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x15500e350 <col:9> 'int' lvalue Var 0x15500dfc0 'fd' 'int'     | | `-IntegerLiteral 0x15500e370 <col:14> 'int' 0     | `-CompoundStmt 0x153813410 <col:17, line:9:5>     |   `-ReturnStmt 0x153813400 <line:8:9, col:17>     |     `-UnaryOperator 0x15500e3e8 <col:16, col:17> 'int' prefix '-'     |       `-IntegerLiteral 0x15500e3c8 <col:17> 'int' 1     |-WhileStmt 0x1538136f0 <line:11:5, line:13:5>     | |-RecoveryExpr 0x1538136a8 <line:11:12, col:55> '_Bool' contains-errors     | `-CompoundStmt 0x1538136e0 <col:58, line:13:5>     |-CallExpr 0x153813878 <line:15:5, col:13> 'int'     | |-ImplicitCastExpr 0x153813860 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1538137f0 <col:5> 'int ()' Function 0x153813738 'close' 'int ()'     | `-ImplicitCastExpr 0x1538138a0 <col:11> 'int' <LValueToRValue>     |   `-DeclRefExpr 0x153813810 <col:11> 'int' lvalue Var 0x15500dfc0 'fd' 'int'     `-ReturnStmt 0x153813a20 <line:17:5, col:31>       `-ConditionalOperator 0x1538139f0 <col:12, col:31> '<dependent type>' contains-errors         |-BinaryOperator 0x1538139b0 <col:12, col:22> 'int' contains-errors '<'         | |-RecoveryExpr 0x153813990 <col:12> '<dependent type>' contains-errors lvalue         | `-IntegerLiteral 0x1538138d0 <col:22> 'int' 0         |-UnaryOperator 0x153813930 <col:26, col:27> 'int' prefix '-'         | `-IntegerLiteral 0x153813910 <col:27> 'int' 1         `-RecoveryExpr 0x1538139d0 <col:31> '<dependent type>' contains-errors lvalue ","19862":"`-FunctionDecl 0x12c9418d0  line:2:1 invalid __skb_set_sw_hash 'void (struct sk_buff *, int, int)' static inline   |-ParmVarDecl 0x12c928648 <col:19, col:35> col:35 used skb 'struct sk_buff *'   |-ParmVarDecl 0x12c9286e0 <col:40, col:46> col:46 invalid hash 'int'   |-ParmVarDecl 0x12c928760 <col:52, col:57> col:57 invalid is_l4 'int'   `-CompoundStmt 0x12c941c28 <line:3:1, line:4:41>     `-CallExpr 0x12c941be8 <col:2, col:39> '<dependent type>' contains-errors       |-DeclRefExpr 0x12c941af0 <col:2> 'int ()' Function 0x12c941a38 '__skb_set_hash' 'int ()'       |-DeclRefExpr 0x12c941b10 <col:17> 'struct sk_buff *' lvalue ParmVar 0x12c928648 'skb' 'struct sk_buff *'       |-RecoveryExpr 0x12c941b30 <col:22> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x12c941bc8 <col:28> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x12c941b68 <col:34> '<dependent type>' contains-errors lvalue ","19999":"`-FunctionDecl 0x152103da8  line:1:1 SYSCALL_DEFINE0 'int (int)'   |-ParmVarDecl 0x152103cd8 <col:17> col:17 restart_syscall 'int'   `-CompoundStmt 0x15211c890 <line:2:1, line:5:1>     |-DeclStmt 0x152104198 <line:3:2, col:57>     | |-RecordDecl 0x152103ea0 <col:2, col:9> col:9 struct restart_block     | `-VarDecl 0x152104008 <col:2, col:44> col:24 used restart 'struct restart_block *' cinit     |   `-UnaryOperator 0x152104168 <col:34, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-CXXDependentScopeMemberExpr 0x152104120 <col:35, col:44> '<dependent type>' contains-errors lvalue ->restart_block     |       `-RecoveryExpr 0x152104100 <col:35> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x15211c880 <line:4:2, col:28>       `-CallExpr 0x15211c858 <col:9, col:28> '<dependent type>' contains-errors         |-RecoveryExpr 0x15211c810 <col:9, col:18> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x1521041b0 <col:9> 'struct restart_block *' contains-errors lvalue Var 0x152104008 'restart' 'struct restart_block *'         `-DeclRefExpr 0x15211c838 <col:21> 'struct restart_block *' contains-errors lvalue Var 0x152104008 'restart' 'struct restart_block *' ","19382":"`-FunctionDecl 0x13d01f638  line:1:1 invalid address_space_translate_internal 'int (int *, int, int *, int *, int)'   |-ParmVarDecl 0x13d01f328 <col:34, col:56> col:56 invalid d 'int *'   |-ParmVarDecl 0x13d01f3a8 <col:59, col:66> col:66 referenced invalid addr 'int'   |-ParmVarDecl 0x13d01f428 <col:72, col:80> col:80 invalid xlat 'int *'   |-ParmVarDecl 0x13d01f4a8 <line:2:34, col:42> col:42 invalid plen 'int *'   |-ParmVarDecl 0x13d01f528 <col:48, col:53> col:53 invalid resolve_subpage 'int'   `-CompoundStmt 0x13d80f028 <line:3:1, line:21:1>     |-CompoundAssignOperator 0x13d80e698 <line:10:5, col:22> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-RecoveryExpr 0x13d01f968 <col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13d01f948 <col:5> 'int' lvalue ParmVar 0x13d01f3a8 'addr' 'int'     | `-CXXDependentScopeMemberExpr 0x13d80e650 <col:13, col:22> '<dependent type>' contains-errors lvalue ->offset_within_address_space     |   `-RecoveryExpr 0x13d80e630 <col:13> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13d80e8c0 <line:13:5, col:29> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x13d80e820 <col:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x13d80e808 <col:6> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x13d80e6c8 <col:6> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x13d80e8a0 <col:13, col:29> '<dependent type>' contains-errors '+'     |   |-RecoveryExpr 0x13d80e718 <col:13> '<dependent type>' contains-errors lvalue     |   `-CXXDependentScopeMemberExpr 0x13d80e858 <col:20, col:29> '<dependent type>' contains-errors lvalue ->offset_within_region     |     `-RecoveryExpr 0x13d80e838 <col:20> '<dependent type>' contains-errors lvalue     `-IfStmt 0x13d80f008 <line:16:5, line:19:5>       |-CallExpr 0x13d80eaa0 <line:16:9, col:32> '<dependent type>' contains-errors       | |-DeclRefExpr 0x13d80ea20 <col:9> 'int ()' Function 0x13d80e968 'memory_region_is_ram' 'int ()'       | `-RecoveryExpr 0x13d80ea80 <col:30> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x13d80eff8 <col:35, line:19:5> ","19476":"`-FunctionDecl 0x14b027fc8  col:5 implicit used log 'double (double)' extern   |-ParmVarDecl 0x14b0280c8 <<invalid sloc>> <invalid sloc> 'double'   |-BuiltinAttr 0x14b028070 <<invalid sloc>> Implicit 1106   |-ConstAttr 0x14b028138 <col:5> Implicit   `-NoThrowAttr 0x14b028160 <col:5> Implicit ","20213":"`-FunctionDecl 0x15c00de58  line:1:12 invalid memory_try_enable_merging 'int (void *, int)' static   |-ParmVarDecl 0x15c00dcd8 <col:38, col:44> col:44 used addr 'void *'   |-ParmVarDecl 0x15c00dd70 <col:50, col:57> col:57 invalid len 'int'   `-CompoundStmt 0x15c00e3a8 <line:2:1, line:9:1>     |-IfStmt 0x15c00e190 <line:3:5, line:6:5>     | |-UnaryOperator 0x15c00e130 <line:3:9, col:43> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x15c00e108 <col:10, col:43> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x15c00e070 <col:10> 'int ()' Function 0x15c00dfb8 'machine_mem_merge' 'int ()'     | |   `-RecoveryExpr 0x15c00e0e8 <col:28> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x15c00e178 <col:46, line:6:5>     |   `-ReturnStmt 0x15c00e168 <line:5:9, col:16>     |     `-IntegerLiteral 0x15c00e148 <col:16> 'int' 0     `-ReturnStmt 0x15c00e398 <line:8:5, col:55>       `-CallExpr 0x15c00e360 <col:12, col:55> '<dependent type>' contains-errors         |-DeclRefExpr 0x15c00e290 <col:12> 'int ()' Function 0x15c00e1d8 'qemu_madvise' 'int ()'         |-DeclRefExpr 0x15c00e2b0 <col:25> 'void *' lvalue ParmVar 0x15c00dcd8 'addr' 'void *'         |-RecoveryExpr 0x15c00e2d0 <col:31> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x15c00e340 <col:36> '<dependent type>' contains-errors lvalue ","19659":"`-FunctionDecl 0x15a80ddf8  line:1:1 invalid drv_screen_init 'int (int *)'   |-ParmVarDecl 0x15a80dd28 <col:17, col:25> col:25 referenced invalid sp 'int *'   `-CompoundStmt 0x15a827f20 <line:2:1, line:25:1>     |-CallExpr 0x15a80e1d8 <line:5:5, col:15> 'int'     | `-ImplicitCastExpr 0x15a80e1c0 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x15a80e168 <col:5> 'int ()' Function 0x15a80e0b0 'AssertTCB' 'int ()'     |-BinaryOperator 0x15a827848 <line:8:5, col:49> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15a80e240 <col:5, col:9> '<dependent type>' contains-errors lvalue ->_use_rmso     | | `-RecoveryExpr 0x15a80e218 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15a80e1f8 <col:5> 'int *' lvalue ParmVar 0x15a80dd28 'sp' 'int *'     | `-CallExpr 0x15a827820 <col:21, col:49> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15a80e368 <col:21> 'int ()' Function 0x15a80e2b0 'SGR0_TEST' 'int ()'     |   `-RecoveryExpr 0x15a827800 <col:31> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x15a8279c0 <line:9:5, col:50> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15a8278b0 <col:5, col:9> '<dependent type>' contains-errors lvalue ->_use_rmul     | | `-RecoveryExpr 0x15a827888 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15a827868 <col:5> 'int *' lvalue ParmVar 0x15a80dd28 'sp' 'int *'     | `-CallExpr 0x15a827998 <col:21, col:50> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15a8278f8 <col:21> 'int ()' Function 0x15a80e2b0 'SGR0_TEST' 'int ()'     |   `-RecoveryExpr 0x15a827978 <col:31> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15a827da0 <line:20:5, col:34> '<dependent type>' contains-errors     | |-CallExpr 0x15a827d78 <col:5, col:29> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x15a827cb0 <col:5> 'int ()' Function 0x15a827bf8 'NCURSES_SP_NAME' 'int ()'     | | `-RecoveryExpr 0x15a827d58 <col:21> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x15a827d10 <col:32> '<dependent type>' contains-errors lvalue     `-CallExpr 0x15a827eb8 <line:22:5, col:40> '<dependent type>' contains-errors       |-CallExpr 0x15a827e90 <col:5, col:35> '<dependent type>' contains-errors       | |-DeclRefExpr 0x15a827dc8 <col:5> 'int ()' Function 0x15a827bf8 'NCURSES_SP_NAME' 'int ()'       | `-RecoveryExpr 0x15a827e70 <col:21> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x15a827e28 <col:38> '<dependent type>' contains-errors lvalue ","19615":"`-FunctionDecl 0x13300dfa8  line:1:15 invalid db_connect 'int *(char *, char *, char *, char *)' static   |-ParmVarDecl 0x13300dcf0 <col:26, col:32> col:32 used host 'char *'   |-ParmVarDecl 0x13300dd70 <col:38, col:44> col:44 used database 'char *'   |-ParmVarDecl 0x13300ddf0 <line:2:26, col:32> col:32 used user 'char *'   |-ParmVarDecl 0x13300de70 <col:38, col:44> col:44 used passwd 'char *'   `-CompoundStmt 0x134809b70 <line:3:1, line:60:1>     |-IfStmt 0x13300e340 <line:5:3, line:6:26>     | |-RecoveryExpr 0x13300e0a0 <line:5:7> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x13300e310 <line:6:5, col:26> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13300e220 <col:5> 'int ()' Function 0x13300e168 'fprintf' 'int ()'     |   |-RecoveryExpr 0x13300e2f0 <col:13> '<dependent type>' contains-errors lvalue     |   `-StringLiteral 0x13300e2a0 <col:21> 'char[4]' lvalue \"STR\"     |-IfStmt 0x134808fa0 <line:7:3, line:8:12>     | |-RecoveryExpr 0x134808f38 <line:7:7, col:32> '_Bool' contains-errors     | `-ReturnStmt 0x134808f90 <line:8:5, col:12>     |   `-ImplicitCastExpr 0x134808f78 <col:12> 'int *' <NullToPointer>     |     `-IntegerLiteral 0x134808f58 <col:12> 'int' 0     |-IfStmt 0x134809210 <line:9:3, line:10:49>     | |-RecoveryExpr 0x134808fd8 <line:9:7> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x1348091d8 <line:10:5, col:49> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1348090d8 <col:5> 'int ()' Function 0x134809020 'mysql_options' 'int ()'     |   |-RecoveryExpr 0x134809178 <col:19> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x134809198 <col:25> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x1348091b8 <col:44> '<dependent type>' contains-errors lvalue     |-IfStmt 0x134809900 <line:44:3, line:50:3>     | |-RecoveryExpr 0x1348097b0 <line:44:7, line:46:30> '_Bool' contains-errors     | `-CompoundStmt 0x1348098f0 <line:47:3, line:50:3>     `-IfStmt 0x134809b50 <line:54:3, line:58:3>       |-RecoveryExpr 0x134809ae0 <line:54:7, col:38> '_Bool' contains-errors       `-CompoundStmt 0x134809b40 <line:55:3, line:58:3> ","19998":"`-FunctionDecl 0x149928710  col:5 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x149941830 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x149941898 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x149941900 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1499287b8 <<invalid sloc>> Implicit 900 ","19771":"`-FunctionDecl 0x13d80e288  col:10 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x13d80e388 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x13d827400 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x13d827468 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x13d80e330 <<invalid sloc>> Implicit 900 ","19701":"`-FunctionDecl 0x126126df8  line:1:1 invalid imapx_disconnect 'int (int *)'   |-ParmVarDecl 0x126126d28 <col:19, col:37> col:37 referenced invalid is 'int *'   `-CompoundStmt 0x126142218 <line:2:1, line:38:1>     |-CallExpr 0x1261270d0 <line:3:2, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x126127000 <col:2> 'int ()' Function 0x126126f48 'g_cancellable_cancel' 'int ()'     | `-CXXDependentScopeMemberExpr 0x126127088 <col:24, col:34> '<dependent type>' contains-errors lvalue ->cancellable     |   `-CXXDependentScopeMemberExpr 0x126127040 <col:24, col:28> '<dependent type>' contains-errors lvalue ->priv     |     `-RecoveryExpr 0x126127020 <col:24> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1261272c0 <line:5:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1261271d8 <col:2> 'int ()' Function 0x126127120 'g_mutex_lock' 'int ()'     | `-UnaryOperator 0x1261272a8 <col:16, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x126127260 <col:17, col:27> '<dependent type>' contains-errors lvalue ->stream_lock     |     `-CXXDependentScopeMemberExpr 0x126127218 <col:17, col:21> '<dependent type>' contains-errors lvalue ->priv     |       `-RecoveryExpr 0x1261271f8 <col:17> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1261405f0 <line:7:2, line:10:2>     | |-CXXDependentScopeMemberExpr 0x126127350 <line:7:6, col:16> '<dependent type>' contains-errors lvalue ->connection     | | `-CXXDependentScopeMemberExpr 0x126127308 <col:6, col:10> '<dependent type>' contains-errors lvalue ->priv     | |   `-RecoveryExpr 0x1261272e8 <col:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1261405d8 <col:28, line:10:2>     |   `-CallExpr 0x1261405a8 <line:9:3, col:63> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1261404b8 <col:3> 'int ()' Function 0x126140400 'imapx_server_set_connection_timeout' 'int ()'     |     |-CXXDependentScopeMemberExpr 0x126140540 <col:40, col:50> '<dependent type>' contains-errors lvalue ->connection     |     | `-CXXDependentScopeMemberExpr 0x1261404f8 <col:40, col:44> '<dependent type>' contains-errors lvalue ->priv     |     |   `-RecoveryExpr 0x1261404d8 <col:40> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x126140588 <col:62> 'int' 3     |-CallExpr 0x1261407d8 <line:12:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1261406f0 <col:2> 'int ()' Function 0x126140638 'g_clear_object' 'int ()'     | `-UnaryOperator 0x1261407c0 <col:18, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x126140778 <col:19, col:29> '<dependent type>' contains-errors lvalue ->input_stream     |     `-CXXDependentScopeMemberExpr 0x126140730 <col:19, col:23> '<dependent type>' contains-errors lvalue ->priv     |       `-RecoveryExpr 0x126140710 <col:19> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1261408e8 <line:13:2, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x126140800 <col:2> 'int ()' Function 0x126140638 'g_clear_object' 'int ()'     | `-UnaryOperator 0x1261408d0 <col:18, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x126140888 <col:19, col:29> '<dependent type>' contains-errors lvalue ->output_stream     |     `-CXXDependentScopeMemberExpr 0x126140840 <col:19, col:23> '<dependent type>' contains-errors lvalue ->priv     |       `-RecoveryExpr 0x126140820 <col:19> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1261409f8 <line:14:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x126140910 <col:2> 'int ()' Function 0x126140638 'g_clear_object' 'int ()'     | `-UnaryOperator 0x1261409e0 <col:18, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x126140998 <col:19, col:29> '<dependent type>' contains-errors lvalue ->connection     |     `-CXXDependentScopeMemberExpr 0x126140950 <col:19, col:23> '<dependent type>' contains-errors lvalue ->priv     |       `-RecoveryExpr 0x126140930 <col:19> '<dependent type>' contains-errors lvalue     |-CallExpr 0x126140b08 <line:15:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x126140a20 <col:2> 'int ()' Function 0x126140638 'g_clear_object' 'int ()'     | `-UnaryOperator 0x126140af0 <col:18, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x126140aa8 <col:19, col:29> '<dependent type>' contains-errors lvalue ->subprocess     |     `-CXXDependentScopeMemberExpr 0x126140a60 <col:19, col:23> '<dependent type>' contains-errors lvalue ->priv     |       `-RecoveryExpr 0x126140a40 <col:19> '<dependent type>' contains-errors lvalue     |-IfStmt 0x126140f28 <line:17:2, line:20:2>     | |-CXXDependentScopeMemberExpr 0x126140b98 <line:17:6, col:16> '<dependent type>' contains-errors lvalue ->cinfo     | | `-CXXDependentScopeMemberExpr 0x126140b50 <col:6, col:10> '<dependent type>' contains-errors lvalue ->priv     | |   `-RecoveryExpr 0x126140b30 <col:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x126140f08 <col:23, line:20:2>     |   |-CallExpr 0x126140d90 <line:18:3, col:41> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x126140cc0 <col:3> 'int ()' Function 0x126140c08 'imapx_free_capability' 'int ()'     |   | `-CXXDependentScopeMemberExpr 0x126140d48 <col:26, col:36> '<dependent type>' contains-errors lvalue ->cinfo     |   |   `-CXXDependentScopeMemberExpr 0x126140d00 <col:26, col:30> '<dependent type>' contains-errors lvalue ->priv     |   |     `-RecoveryExpr 0x126140ce0 <col:26> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x126140ee8 <line:19:3, col:21> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x126140e48 <col:3, col:13> '<dependent type>' contains-errors lvalue ->cinfo     |     | `-CXXDependentScopeMemberExpr 0x126140e00 <col:3, col:7> '<dependent type>' contains-errors lvalue ->priv     |     |   `-RecoveryExpr 0x126140dd8 <col:3> '<dependent type>' contains-errors lvalue     |     |     `-DeclRefExpr 0x126140db8 <col:3> 'int *' lvalue ParmVar 0x126126d28 'is' 'int *'     |     `-RecoveryExpr 0x126140ec8 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x126141110 <line:22:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x126141028 <col:2> 'int ()' Function 0x126140f70 'g_mutex_unlock' 'int ()'     | `-UnaryOperator 0x1261410f8 <col:18, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x1261410b0 <col:19, col:29> '<dependent type>' contains-errors lvalue ->stream_lock     |     `-CXXDependentScopeMemberExpr 0x126141068 <col:19, col:23> '<dependent type>' contains-errors lvalue ->priv     |       `-RecoveryExpr 0x126141048 <col:19> '<dependent type>' contains-errors lvalue     |-CallExpr 0x126141220 <line:24:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x126141138 <col:2> 'int ()' Function 0x126127120 'g_mutex_lock' 'int ()'     | `-UnaryOperator 0x126141208 <col:16, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x1261411c0 <col:17, col:27> '<dependent type>' contains-errors lvalue ->select_lock     |     `-CXXDependentScopeMemberExpr 0x126141178 <col:17, col:21> '<dependent type>' contains-errors lvalue ->priv     |       `-RecoveryExpr 0x126141158 <col:17> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x126141340 <line:25:2, col:49> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1261412d8 <col:2, col:12> '<dependent type>' contains-errors lvalue ->last_selected_mailbox_change_stamp     | | `-CXXDependentScopeMemberExpr 0x126141290 <col:2, col:6> '<dependent type>' contains-errors lvalue ->priv     | |   `-RecoveryExpr 0x126141268 <col:2> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x126141248 <col:2> 'int *' lvalue ParmVar 0x126126d28 'is' 'int *'     | `-IntegerLiteral 0x126141320 <col:49> 'int' 0     |-CallExpr 0x126141608 <line:26:2, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1261414b8 <col:2> 'int ()' Function 0x126141400 'g_weak_ref_set' 'int ()'     | |-UnaryOperator 0x126141588 <col:18, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x126141540 <col:19, col:29> '<dependent type>' contains-errors lvalue ->select_mailbox     | |   `-CXXDependentScopeMemberExpr 0x1261414f8 <col:19, col:23> '<dependent type>' contains-errors lvalue ->priv     | |     `-RecoveryExpr 0x1261414d8 <col:19> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1261415e8 <col:45> '<dependent type>' contains-errors lvalue     |-CallExpr 0x126141788 <line:27:2, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x126141638 <col:2> 'int ()' Function 0x126141400 'g_weak_ref_set' 'int ()'     | |-UnaryOperator 0x126141708 <col:18, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x1261416c0 <col:19, col:29> '<dependent type>' contains-errors lvalue ->select_pending     | |   `-CXXDependentScopeMemberExpr 0x126141678 <col:19, col:23> '<dependent type>' contains-errors lvalue ->priv     | |     `-RecoveryExpr 0x126141658 <col:19> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x126141768 <col:45> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1261418a0 <line:28:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1261417b8 <col:2> 'int ()' Function 0x126140f70 'g_mutex_unlock' 'int ()'     | `-UnaryOperator 0x126141888 <col:18, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x126141840 <col:19, col:29> '<dependent type>' contains-errors lvalue ->select_lock     |     `-CXXDependentScopeMemberExpr 0x1261417f8 <col:19, col:23> '<dependent type>' contains-errors lvalue ->priv     |       `-RecoveryExpr 0x1261417d8 <col:19> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1261419f8 <line:30:2, col:23> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x126141958 <col:2, col:12> '<dependent type>' contains-errors lvalue ->is_cyrus     | | `-CXXDependentScopeMemberExpr 0x126141910 <col:2, col:6> '<dependent type>' contains-errors lvalue ->priv     | |   `-RecoveryExpr 0x1261418e8 <col:2> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x1261418c8 <col:2> 'int *' lvalue ParmVar 0x126126d28 'is' 'int *'     | `-RecoveryExpr 0x1261419d8 <col:23> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x126141b48 <line:31:2, col:30> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x126141aa8 <col:2, col:12> '<dependent type>' contains-errors lvalue ->is_broken_cyrus     | | `-CXXDependentScopeMemberExpr 0x126141a60 <col:2, col:6> '<dependent type>' contains-errors lvalue ->priv     | |   `-RecoveryExpr 0x126141a38 <col:2> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x126141a18 <col:2> 'int *' lvalue ParmVar 0x126126d28 'is' 'int *'     | `-RecoveryExpr 0x126141b28 <col:30> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x126141c98 <line:32:2, col:20> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x126141bf8 <col:2, col:12> '<dependent type>' contains-errors lvalue ->state     | | `-CXXDependentScopeMemberExpr 0x126141bb0 <col:2, col:6> '<dependent type>' contains-errors lvalue ->priv     | |   `-RecoveryExpr 0x126141b88 <col:2> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x126141b68 <col:2> 'int *' lvalue ParmVar 0x126126d28 'is' 'int *'     | `-RecoveryExpr 0x126141c78 <col:20> '<dependent type>' contains-errors lvalue     |-CallExpr 0x126141da0 <line:34:2, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x126141cb8 <col:2> 'int ()' Function 0x126127120 'g_mutex_lock' 'int ()'     | `-UnaryOperator 0x126141d88 <col:16, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x126141d40 <col:17, col:27> '<dependent type>' contains-errors lvalue ->idle_lock     |     `-CXXDependentScopeMemberExpr 0x126141cf8 <col:17, col:21> '<dependent type>' contains-errors lvalue ->priv     |       `-RecoveryExpr 0x126141cd8 <col:17> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x126141ef8 <line:35:2, col:25> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x126141e58 <col:2, col:12> '<dependent type>' contains-errors lvalue ->idle_state     | | `-CXXDependentScopeMemberExpr 0x126141e10 <col:2, col:6> '<dependent type>' contains-errors lvalue ->priv     | |   `-RecoveryExpr 0x126141de8 <col:2> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x126141dc8 <col:2> 'int *' lvalue ParmVar 0x126126d28 'is' 'int *'     | `-RecoveryExpr 0x126141ed8 <col:25> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1261420e0 <line:36:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x126141ff8 <col:2> 'int ()' Function 0x126141f40 'g_cond_broadcast' 'int ()'     | `-UnaryOperator 0x1261420c8 <col:20, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x126142080 <col:21, col:31> '<dependent type>' contains-errors lvalue ->idle_cond     |     `-CXXDependentScopeMemberExpr 0x126142038 <col:21, col:25> '<dependent type>' contains-errors lvalue ->priv     |       `-RecoveryExpr 0x126142018 <col:21> '<dependent type>' contains-errors lvalue     `-CallExpr 0x1261421f0 <line:37:2, col:38> '<dependent type>' contains-errors       |-DeclRefExpr 0x126142108 <col:2> 'int ()' Function 0x126140f70 'g_mutex_unlock' 'int ()'       `-UnaryOperator 0x1261421d8 <col:18, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow         `-CXXDependentScopeMemberExpr 0x126142190 <col:19, col:29> '<dependent type>' contains-errors lvalue ->idle_lock           `-CXXDependentScopeMemberExpr 0x126142148 <col:19, col:23> '<dependent type>' contains-errors lvalue ->priv             `-RecoveryExpr 0x126142128 <col:19> '<dependent type>' contains-errors lvalue ","19704":"`-FunctionDecl 0x13f123950  line:1:13 set_children 'void (struct rev_info *)' static   |-ParmVarDecl 0x13f123848 <col:26, col:43> col:43 used revs 'struct rev_info *'   `-CompoundStmt 0x13f13c770 <line:2:1, line:11:1>     |-DeclStmt 0x13f13be38 <line:3:2, col:23>     | |-RecordDecl 0x13f13bc48 <col:2, col:9> col:9 struct commit_list     | `-VarDecl 0x13f13bdb8 <col:2, col:22> col:22 used l 'struct commit_list *'     `-ForStmt 0x13f13c738 <line:4:2, line:10:2>       |-BinaryOperator 0x13f13bed0 <line:4:7, col:17> 'struct commit_list *' contains-errors '='       | |-DeclRefExpr 0x13f13be50 <col:7> 'struct commit_list *' lvalue Var 0x13f13bdb8 'l' 'struct commit_list *'       | `-RecoveryExpr 0x13f13bea8 <col:11, col:17> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x13f13be70 <col:11> 'struct rev_info *' lvalue ParmVar 0x13f123848 'revs' 'struct rev_info *'       |-<<<NULL>>>       |-ImplicitCastExpr 0x13f13bf10 <col:26> 'struct commit_list *' <LValueToRValue>       | `-DeclRefExpr 0x13f13bef0 <col:26> 'struct commit_list *' lvalue Var 0x13f13bdb8 'l' 'struct commit_list *'       |-BinaryOperator 0x13f13bfa8 <col:29, col:36> 'struct commit_list *' contains-errors '='       | |-DeclRefExpr 0x13f13bf28 <col:29> 'struct commit_list *' lvalue Var 0x13f13bdb8 'l' 'struct commit_list *'       | `-RecoveryExpr 0x13f13bf80 <col:33, col:36> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x13f13bf48 <col:33> 'struct commit_list *' lvalue Var 0x13f13bdb8 'l' 'struct commit_list *'       `-CompoundStmt 0x13f13c710 <col:42, line:10:2>         |-DeclStmt 0x13f13c218 <line:5:3, col:34>         | |-RecordDecl 0x13f13bfc8 <col:3, col:10> col:10 struct commit         | `-VarDecl 0x13f13c138 <col:3, col:30> col:18 used commit 'struct commit *' cinit         |   `-RecoveryExpr 0x13f13c1d8 <col:27, col:30> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x13f13c1a0 <col:27> 'struct commit_list *' lvalue Var 0x13f13bdb8 'l' 'struct commit_list *'         |-DeclStmt 0x13f13c320 <line:6:3, col:24>         | `-VarDecl 0x13f13c2b8 <col:3, col:23> col:23 used p 'struct commit_list *'         `-ForStmt 0x13f13c6d8 <line:8:3, line:9:35>           |-BinaryOperator 0x13f13c3b8 <line:8:8, col:20> 'struct commit_list *' contains-errors '='           | |-DeclRefExpr 0x13f13c338 <col:8> 'struct commit_list *' lvalue Var 0x13f13c2b8 'p' 'struct commit_list *'           | `-RecoveryExpr 0x13f13c390 <col:12, col:20> '<dependent type>' contains-errors lvalue           |   `-DeclRefExpr 0x13f13c358 <col:12> 'struct commit *' contains-errors lvalue Var 0x13f13c138 'commit' 'struct commit *'           |-<<<NULL>>>           |-ImplicitCastExpr 0x13f13c3f8 <col:29> 'struct commit_list *' <LValueToRValue>           | `-DeclRefExpr 0x13f13c3d8 <col:29> 'struct commit_list *' lvalue Var 0x13f13c2b8 'p' 'struct commit_list *'           |-BinaryOperator 0x13f13c490 <col:32, col:39> 'struct commit_list *' contains-errors '='           | |-DeclRefExpr 0x13f13c410 <col:32> 'struct commit_list *' lvalue Var 0x13f13c2b8 'p' 'struct commit_list *'           | `-RecoveryExpr 0x13f13c468 <col:36, col:39> '<dependent type>' contains-errors lvalue           |   `-DeclRefExpr 0x13f13c430 <col:36> 'struct commit_list *' lvalue Var 0x13f13c2b8 'p' 'struct commit_list *'           `-CallExpr 0x13f13c6a0 <line:9:4, col:35> '<dependent type>' contains-errors             |-DeclRefExpr 0x13f13c5e0 <col:4> 'int ()' Function 0x13f13c528 'add_child' 'int ()'             |-DeclRefExpr 0x13f13c600 <col:14> 'struct rev_info *' lvalue ParmVar 0x13f123848 'revs' 'struct rev_info *'             |-RecoveryExpr 0x13f13c658 <col:20, col:23> '<dependent type>' contains-errors lvalue             | `-DeclRefExpr 0x13f13c620 <col:20> 'struct commit_list *' lvalue Var 0x13f13c2b8 'p' 'struct commit_list *'             `-DeclRefExpr 0x13f13c680 <col:29> 'struct commit *' contains-errors lvalue Var 0x13f13c138 'commit' 'struct commit *' ","19741":"`-FunctionDecl 0x152141960  line:1:13 invalid touch_pud 'void (struct vm_area_struct *, unsigned long, int *, int)' static   |-ParmVarDecl 0x152128648 <col:23, col:46> col:46 used vma 'struct vm_area_struct *'   |-ParmVarDecl 0x1521286c8 <col:51, col:65> col:65 used addr 'unsigned long'   |-ParmVarDecl 0x152128798 <line:2:3, col:10> col:10 referenced invalid pud 'int *'   |-ParmVarDecl 0x152141818 <col:15, col:19> col:19 used flags 'int'   `-CompoundStmt 0x152142460 <line:3:1, line:12:1>     |-BinaryOperator 0x152141c68 <line:6:2, col:25> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x152141a48 <col:2> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x152141a28 <col:2> 'int *' lvalue ParmVar 0x152128798 'pud' 'int *'     | `-CallExpr 0x152141c40 <col:9, col:25> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x152141bd0 <col:9> 'int ()' Function 0x152141b18 'pud_mkyoung' 'int ()'     |   `-UnaryOperator 0x152141c28 <col:21, col:22> '<dependent type>' contains-errors prefix '*' cannot overflow     |     `-ImplicitCastExpr 0x152141c10 <col:22> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x152141bf0 <col:22> '<dependent type>' contains-errors lvalue     |-IfStmt 0x152141f50 <line:7:2, line:8:26>     | |-BinaryOperator 0x152141d00 <line:7:6, col:14> '<dependent type>' contains-errors '&'     | | |-DeclRefExpr 0x152141c88 <col:6> 'int' lvalue ParmVar 0x152141818 'flags' 'int'     | | `-RecoveryExpr 0x152141ce0 <col:14> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x152141f30 <line:8:3, col:26> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x152141d40 <col:3> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x152141d20 <col:3> 'int *' lvalue ParmVar 0x152128798 'pud' 'int *'     |   `-CallExpr 0x152141f08 <col:10, col:26> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x152141e48 <col:10> 'int ()' Function 0x152141d90 'pud_mkdirty' 'int ()'     |     `-RecoveryExpr 0x152141ee8 <col:22> '<dependent type>' contains-errors lvalue     `-IfStmt 0x152142440 <line:9:2, line:11:38>       |-CallExpr 0x152142260 <line:9:6, line:10:34> '<dependent type>' contains-errors       | |-DeclRefExpr 0x152142050 <line:9:6> 'int ()' Function 0x152141f98 'pudp_set_access_flags' 'int ()'       | |-DeclRefExpr 0x152142070 <col:28> 'struct vm_area_struct *' lvalue ParmVar 0x152128648 'vma' 'struct vm_area_struct *'       | |-BinaryOperator 0x1521421e0 <col:33, col:40> '<dependent type>' contains-errors '&'       | | |-DeclRefExpr 0x152142090 <col:33> 'unsigned long' lvalue ParmVar 0x1521286c8 'addr' 'unsigned long'       | | `-RecoveryExpr 0x1521421c0 <col:40> '<dependent type>' contains-errors lvalue       | |-RecoveryExpr 0x1521420e8 <line:10:5> '<dependent type>' contains-errors lvalue       | |-RecoveryExpr 0x152142200 <col:10> '<dependent type>' contains-errors lvalue       | `-BinaryOperator 0x152142240 <col:16, col:24> '<dependent type>' contains-errors '&'       |   |-DeclRefExpr 0x152142120 <col:16> 'int' lvalue ParmVar 0x152141818 'flags' 'int'       |   `-RecoveryExpr 0x152142220 <col:24> '<dependent type>' contains-errors lvalue       `-CallExpr 0x152142408 <line:11:3, col:38> '<dependent type>' contains-errors         |-DeclRefExpr 0x152142388 <col:3> 'int ()' Function 0x1521422d0 'update_mmu_cache_pud' 'int ()'         |-DeclRefExpr 0x1521423a8 <col:24> 'struct vm_area_struct *' lvalue ParmVar 0x152128648 'vma' 'struct vm_area_struct *'         |-DeclRefExpr 0x1521423c8 <col:29> 'unsigned long' lvalue ParmVar 0x1521286c8 'addr' 'unsigned long'         `-RecoveryExpr 0x1521423e8 <col:35> '<dependent type>' contains-errors lvalue ","20163":"`-FunctionDecl 0x14b140b40  line:1:20 vmsvga_cursor_define 'void (struct vmsvga_state_s *, struct vmsvga_cursor_definition_s *)' static inline   |-ParmVarDecl 0x14b128648 <col:41, col:64> col:64 used s 'struct vmsvga_state_s *'   |-ParmVarDecl 0x14b140a28 <line:2:17, col:52> col:52 used c 'struct vmsvga_cursor_definition_s *'   `-CompoundStmt 0x14b809bd8 <line:3:1, line:40:1>     |-DeclStmt 0x14b140d88 <line:5:5, col:18>     | |-VarDecl 0x14b140c88 <col:5, col:9> col:9 used i 'int'     | `-VarDecl 0x14b140d08 <col:5, col:12> col:12 used pixels 'int'     `-SwitchStmt 0x14b1410f8 <line:10:5, line:36:5>       |-ImplicitCastExpr 0x14b1410e0 <line:10:13, col:16> '<dependent type>' contains-errors <LValueToRValue>       | `-RecoveryExpr 0x14b1410b8 <col:13, col:16> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x14b141080 <col:13> 'struct vmsvga_cursor_definition_s *' lvalue ParmVar 0x14b140a28 'c' 'struct vmsvga_cursor_definition_s *'       `-CompoundStmt 0x14b8099c8 <col:21, line:36:5>         |-CaseStmt 0x14b141140 <line:11:5, line:13:43>         | |-IntegerLiteral 0x14b141120 <line:11:10> 'int' 1         | `-CallExpr 0x14b141510 <line:12:9, line:13:43> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x14b141248 <line:12:9> 'int ()' Function 0x14b141190 'cursor_set_mono' 'int ()'         |   |-RecoveryExpr 0x14b141470 <col:25> '<dependent type>' contains-errors lvalue         |   |-IntegerLiteral 0x14b141280 <col:29> 'int' 16777215         |   |-IntegerLiteral 0x14b1412a0 <col:39> 'int' 0         |   |-CStyleCastExpr 0x14b1414a8 <col:49, col:60> 'void *' contains-errors <Dependent>         |   | `-RecoveryExpr 0x14b1412f8 <col:57, col:60> '<dependent type>' contains-errors lvalue         |   |   `-DeclRefExpr 0x14b1412c0 <col:57> 'struct vmsvga_cursor_definition_s *' lvalue ParmVar 0x14b140a28 'c' 'struct vmsvga_cursor_definition_s *'         |   |-IntegerLiteral 0x14b141360 <line:13:25> 'int' 1         |   `-CStyleCastExpr 0x14b1414e8 <col:28, col:39> 'void *' contains-errors <Dependent>         |     `-RecoveryExpr 0x14b1413b8 <col:36, col:39> '<dependent type>' contains-errors lvalue         |       `-DeclRefExpr 0x14b141380 <col:36> 'struct vmsvga_cursor_definition_s *' lvalue ParmVar 0x14b140a28 'c' 'struct vmsvga_cursor_definition_s *'         |-BreakStmt 0x14b141560 <line:17:9>         |-CaseStmt 0x14b141588 <line:18:5, line:21:43>         | |-IntegerLiteral 0x14b141568 <line:18:10> 'int' 32         | `-CallExpr 0x14b141878 <line:20:9, line:21:43> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x14b1415b0 <line:20:9> 'int ()' Function 0x14b141190 'cursor_set_mono' 'int ()'         |   |-RecoveryExpr 0x14b1417d8 <col:25> '<dependent type>' contains-errors lvalue         |   |-IntegerLiteral 0x14b1415e8 <col:29> 'int' 0         |   |-IntegerLiteral 0x14b141608 <col:39> 'int' 0         |   |-CStyleCastExpr 0x14b141810 <col:49, col:60> 'void *' contains-errors <Dependent>         |   | `-RecoveryExpr 0x14b141660 <col:57, col:60> '<dependent type>' contains-errors lvalue         |   |   `-DeclRefExpr 0x14b141628 <col:57> 'struct vmsvga_cursor_definition_s *' lvalue ParmVar 0x14b140a28 'c' 'struct vmsvga_cursor_definition_s *'         |   |-IntegerLiteral 0x14b1416c8 <line:21:25> 'int' 1         |   `-CStyleCastExpr 0x14b141850 <col:28, col:39> 'void *' contains-errors <Dependent>         |     `-RecoveryExpr 0x14b141720 <col:36, col:39> '<dependent type>' contains-errors lvalue         |       `-DeclRefExpr 0x14b1416e8 <col:36> 'struct vmsvga_cursor_definition_s *' lvalue ParmVar 0x14b140a28 'c' 'struct vmsvga_cursor_definition_s *'         |-BinaryOperator 0x14b1419c8 <line:23:9, col:32> 'int' contains-errors '='         | |-DeclRefExpr 0x14b1418c8 <col:9> 'int' lvalue Var 0x14b140d08 'pixels' 'int'         | `-BinaryOperator 0x14b1419a8 <col:18, col:32> '<dependent type>' contains-errors '*'         |   |-RecoveryExpr 0x14b141920 <col:18, col:21> '<dependent type>' contains-errors lvalue         |   | `-DeclRefExpr 0x14b1418e8 <col:18> 'struct vmsvga_cursor_definition_s *' lvalue ParmVar 0x14b140a28 'c' 'struct vmsvga_cursor_definition_s *'         |   `-RecoveryExpr 0x14b141980 <col:29, col:32> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x14b141948 <col:29> 'struct vmsvga_cursor_definition_s *' lvalue ParmVar 0x14b140a28 'c' 'struct vmsvga_cursor_definition_s *'         |-ForStmt 0x14b809468 <line:24:9, line:26:9>         | |-BinaryOperator 0x14b809240 <line:24:14, col:18> 'int' '='         | | |-DeclRefExpr 0x14b809200 <col:14> 'int' lvalue Var 0x14b140c88 'i' 'int'         | | `-IntegerLiteral 0x14b809220 <col:18> 'int' 0         | |-<<<NULL>>>         | |-BinaryOperator 0x14b8092d0 <col:21, col:25> 'int' '<'         | | |-ImplicitCastExpr 0x14b8092a0 <col:21> 'int' <LValueToRValue>         | | | `-DeclRefExpr 0x14b809260 <col:21> 'int' lvalue Var 0x14b140c88 'i' 'int'         | | `-ImplicitCastExpr 0x14b8092b8 <col:25> 'int' <LValueToRValue>         | |   `-DeclRefExpr 0x14b809280 <col:25> 'int' lvalue Var 0x14b140d08 'pixels' 'int'         | |-UnaryOperator 0x14b809310 <col:33, col:34> 'int' postfix '++'         | | `-DeclRefExpr 0x14b8092f0 <col:33> 'int' lvalue Var 0x14b140c88 'i' 'int'         | `-CompoundStmt 0x14b809458 <col:38, line:26:9>         |-BreakStmt 0x14b8094a0 <line:30:9>         `-DefaultStmt 0x14b809740 <line:31:5, col:12>           `-NullStmt 0x14b809738 <col:12> ","20088":"`-FunctionDecl 0x152940a70  line:1:13 nfs4_swap_callback_idents 'void (struct nfs_client *, struct nfs_client *)' static   |-ParmVarDecl 0x152928648 <col:39, col:58> col:58 used keep 'struct nfs_client *'   |-ParmVarDecl 0x152928738 <line:2:11, col:30> col:30 used drop 'struct nfs_client *'   `-CompoundStmt 0x152942af8 <line:3:1, line:22:1>     |-DeclStmt 0x152940fa0 <line:4:2, col:60>     | |-RecordDecl 0x152940b70 <col:2, col:9> col:9 struct nfs_net     | `-VarDecl 0x152940cd8 <col:2, col:59> col:18 used nn 'struct nfs_net *' cinit     |   `-CallExpr 0x152940f58 <col:23, col:59> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x152940e70 <col:23> 'int ()' Function 0x152940db8 'net_generic' 'int ()'     |     |-RecoveryExpr 0x152940ec8 <col:35, col:41> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x152940e90 <col:35> 'struct nfs_client *' lvalue ParmVar 0x152928648 'keep' 'struct nfs_client *'     |     `-RecoveryExpr 0x152940f38 <col:49> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x152941098 <line:5:2, col:39>     | `-VarDecl 0x152940fd0 <col:2, col:28> col:15 used save 'unsigned int' cinit     |   `-RecoveryExpr 0x152941070 <col:22, col:28> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x152941038 <col:22> 'struct nfs_client *' lvalue ParmVar 0x152928648 'keep' 'struct nfs_client *'     |-IfStmt 0x1529411a0 <line:7:2, line:8:3>     | |-BinaryOperator 0x152941170 <line:7:6, col:33> 'int' contains-errors '=='     | | |-RecoveryExpr 0x1529410e8 <col:6, col:12> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x1529410b0 <col:6> 'struct nfs_client *' lvalue ParmVar 0x152928648 'keep' 'struct nfs_client *'     | | `-RecoveryExpr 0x152941148 <col:27, col:33> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x152941110 <col:27> 'struct nfs_client *' lvalue ParmVar 0x152928738 'drop' 'struct nfs_client *'     | `-ReturnStmt 0x152941190 <line:8:3>     |-CallExpr 0x1529414b0 <line:10:2, line:11:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1529412a0 <line:10:2> 'int ()' Function 0x1529411e8 'dprintk' 'int ()'     | |-StringLiteral 0x152941300 <col:10> 'char[4]' lvalue \"STR\"     | |-PredefinedExpr 0x1529413d8 <line:11:3> 'const char[26]' lvalue __func__     | | `-StringLiteral 0x1529413a0 <col:3> 'const char[26]' lvalue \"nfs4_swap_callback_idents\"     | |-RecoveryExpr 0x152941428 <col:13, col:19> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1529413f0 <col:13> 'struct nfs_client *' lvalue ParmVar 0x152928648 'keep' 'struct nfs_client *'     | `-RecoveryExpr 0x152941488 <col:32, col:38> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x152941450 <col:32> 'struct nfs_client *' lvalue ParmVar 0x152928738 'drop' 'struct nfs_client *'     |-CallExpr 0x152941668 <line:13:2, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1529415d0 <col:2> 'int ()' Function 0x152941518 'spin_lock' 'int ()'     | `-UnaryOperator 0x152941650 <col:12, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x152941628 <col:13, col:17> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1529415f0 <col:13> 'struct nfs_net *' contains-errors lvalue Var 0x152940cd8 'nn' 'struct nfs_net *'     |-CallExpr 0x152941888 <line:15:2, col:56> '<dependent type>' contains-errors     | |-DeclRefExpr 0x152941770 <col:2> 'int ()' Function 0x1529416b8 'idr_replace' 'int ()'     | |-UnaryOperator 0x1529417f0 <col:14, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x1529417c8 <col:15, col:19> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x152941790 <col:15> 'struct nfs_net *' contains-errors lvalue Var 0x152940cd8 'nn' 'struct nfs_net *'     | |-DeclRefExpr 0x152941808 <col:33> 'struct nfs_client *' lvalue ParmVar 0x152928648 'keep' 'struct nfs_client *'     | `-RecoveryExpr 0x152941860 <col:39, col:45> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x152941828 <col:39> 'struct nfs_client *' lvalue ParmVar 0x152928738 'drop' 'struct nfs_client *'     |-BinaryOperator 0x152941980 <line:16:2, col:28> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1529418f8 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1529418c0 <col:2> 'struct nfs_client *' lvalue ParmVar 0x152928648 'keep' 'struct nfs_client *'     | `-RecoveryExpr 0x152941958 <col:22, col:28> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x152941920 <col:22> 'struct nfs_client *' lvalue ParmVar 0x152928738 'drop' 'struct nfs_client *'     |-CallExpr 0x152942880 <line:18:2, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1529419a0 <col:2> 'int ()' Function 0x1529416b8 'idr_replace' 'int ()'     | |-UnaryOperator 0x152942828 <col:14, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x152942800 <col:15, col:19> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1529419c0 <col:15> 'struct nfs_net *' contains-errors lvalue Var 0x152940cd8 'nn' 'struct nfs_net *'     | |-DeclRefExpr 0x152942840 <col:33> 'struct nfs_client *' lvalue ParmVar 0x152928738 'drop' 'struct nfs_client *'     | `-DeclRefExpr 0x152942860 <col:39> 'unsigned int' contains-errors lvalue Var 0x152940fd0 'save' 'unsigned int'     |-BinaryOperator 0x152942938 <line:19:2, col:22> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1529428f0 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1529428b8 <col:2> 'struct nfs_client *' lvalue ParmVar 0x152928738 'drop' 'struct nfs_client *'     | `-DeclRefExpr 0x152942918 <col:22> 'unsigned int' contains-errors lvalue Var 0x152940fd0 'save' 'unsigned int'     `-CallExpr 0x152942ad0 <line:21:2, col:34> '<dependent type>' contains-errors       |-DeclRefExpr 0x152942a38 <col:2> 'int ()' Function 0x152942980 'spin_unlock' 'int ()'       `-UnaryOperator 0x152942ab8 <col:14, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x152942a90 <col:15, col:19> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x152942a58 <col:15> 'struct nfs_net *' contains-errors lvalue Var 0x152940cd8 'nn' 'struct nfs_net *' ","19186":"`-FunctionDecl 0x131092310  line:1:20 CheckEventLogging 'void ()' static inline   `-CompoundStmt 0x131092968 <line:2:1, line:15:1>     `-IfStmt 0x131092938 <line:4:3, line:14:5> has_else       |-BinaryOperator 0x131092630 <line:4:7, col:39> 'int' contains-errors '!='       | |-CallExpr 0x1310925e8 <col:7, col:34> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x131092530 <col:7> 'int ()' Function 0x131092478 'IsLinkedListEmpty' 'int ()'       | | `-RecoveryExpr 0x1310925c8 <col:25> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x131092610 <col:39> '<dependent type>' contains-errors lvalue       |-NullStmt 0x131092930 <line:5:5>       `-CompoundStmt 0x131092918 <line:7:5, line:14:5>         `-CallExpr 0x1310927e0 <line:11:7, col:40> '<dependent type>' contains-errors           |-DeclRefExpr 0x131092760 <col:7> 'int ()' Function 0x1310926a8 'ResetLinkedListIterator' 'int ()'           `-RecoveryExpr 0x1310927c0 <col:31> '<dependent type>' contains-errors lvalue ","19683":"`-FunctionDecl 0x143008838  line:1:6 invalid asn1_write_enumerated 'int (struct asn1_data *, int)'   |-ParmVarDecl 0x142928668 <col:28, col:46> col:46 used data 'struct asn1_data *'   |-ParmVarDecl 0x1429286e8 <col:52, col:60> col:60 invalid v 'int'   `-CompoundStmt 0x143008f88 <line:2:1, line:7:1>     |-CallExpr 0x143008cb0 <line:4:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x143008c50 <col:2> 'int ()' Function 0x143008b98 'asn1_write_uint8' 'int ()'     | |-DeclRefExpr 0x143008c70 <col:19> 'struct asn1_data *' lvalue ParmVar 0x142928668 'data' 'struct asn1_data *'     | `-RecoveryExpr 0x143008c90 <col:25> '<dependent type>' contains-errors lvalue     |-CallExpr 0x143008e48 <line:5:2, col:19> 'int'     | |-ImplicitCastExpr 0x143008e30 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x143008dc0 <col:2> 'int ()' Function 0x143008d08 'asn1_pop_tag' 'int ()'     | `-ImplicitCastExpr 0x143008e70 <col:15> 'struct asn1_data *' <LValueToRValue>     |   `-DeclRefExpr 0x143008de0 <col:15> 'struct asn1_data *' lvalue ParmVar 0x142928668 'data' 'struct asn1_data *'     `-ReturnStmt 0x143008f78 <line:6:2, col:16>       `-UnaryOperator 0x143008f60 <col:9, col:16> '<dependent type>' contains-errors prefix '!' cannot overflow         `-ImplicitCastExpr 0x143008f48 <col:10, col:16> '<dependent type>' contains-errors <LValueToRValue>           `-RecoveryExpr 0x143008ec0 <col:10, col:16> '<dependent type>' contains-errors lvalue             `-DeclRefExpr 0x143008e88 <col:10> 'struct asn1_data *' lvalue ParmVar 0x142928668 'data' 'struct asn1_data *' ","19899":"`-FunctionDecl 0x139928da0  line:1:6 invalid parseInclusion 'void (int *, int, int *, int)'   |-ParmVarDecl 0x139928b28 <col:21, col:35> col:35 referenced invalid ctx 'int *'   |-ParmVarDecl 0x139928ba8 <line:2:21, col:33> col:33 invalid elem 'int'   |-ParmVarDecl 0x139928c28 <line:3:21, col:44> col:44 invalid parent 'int *'   |-ParmVarDecl 0x139928ca8 <line:4:21, <invalid sloc>> col:26 invalid 'int'   `-CompoundStmt 0x13b009460 <col:66, line:59:1>     |-DeclStmt 0x139929098 <line:7:5, col:96>     | `-VarDecl 0x139928e80 <col:5, col:16> col:16 invalid isTopLevelIdProjection 'const int'     |-DeclStmt 0x13a008988 <line:9:5, col:81>     | `-VarDecl 0x1399290c8 <col:5, col:16> col:16 invalid hasPositional 'const int'     |-IfStmt 0x13a0097a0 <line:11:5, line:50:5> has_else     | |-UnaryOperator 0x13a0089d8 <line:11:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13a0089c0 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x13a0089a0 <col:10> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x13a008ca0 <col:25, line:18:5>     | | `-IfStmt 0x13a008c80 <line:15:9, line:17:9>     | |   |-RecoveryExpr 0x13a008b40 <line:15:13> '<dependent type>' contains-errors lvalue     | |   `-CompoundStmt 0x13a008c68 <col:37, line:17:9>     | |     `-BinaryOperator 0x13a008c48 <line:16:13, col:39> '<dependent type>' contains-errors '='     | |       |-CXXDependentScopeMemberExpr 0x13a008ba8 <col:13, col:18> '<dependent type>' contains-errors lvalue ->idIncludedEntirely     | |       | `-RecoveryExpr 0x13a008b80 <col:13> '<dependent type>' contains-errors lvalue     | |       |   `-DeclRefExpr 0x13a008b60 <col:13> 'int *' lvalue ParmVar 0x139928b28 'ctx' 'int *'     | |       `-RecoveryExpr 0x13a008c28 <col:39> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13a009758 <line:18:12, line:50:5>     |   |-CallExpr 0x13a008e20 <line:19:9, col:50> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13a008d98 <col:9> 'int ()' Function 0x13a008ce0 'verifyComputedFieldsAllowed' 'int ()'     |   | `-CXXDependentScopeMemberExpr 0x13a008dd8 <col:37, col:42> '<dependent type>' contains-errors lvalue ->policies     |   |   `-RecoveryExpr 0x13a008db8 <col:37> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x13a009020 <line:21:9, line:23:36> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13a008f28 <line:21:9> 'int ()' Function 0x13a008e70 'uassert' 'int ()'     |   | |-IntegerLiteral 0x13a008f48 <col:17> 'int' 31276     |   | |-StringLiteral 0x13a008f68 <line:22:17> 'char[4]' lvalue \"STR\"     |   | `-UnaryOperator 0x13a009008 <line:23:17, col:23> '<dependent type>' contains-errors prefix '!' cannot overflow     |   |   `-ImplicitCastExpr 0x13a008ff0 <col:18, col:23> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-CXXDependentScopeMemberExpr 0x13a008fa8 <col:18, col:23> '<dependent type>' contains-errors lvalue ->hasPositional     |   |       `-RecoveryExpr 0x13a008f88 <col:18> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x13a009150 <line:25:9, col:49> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13a009058 <col:9> 'int ()' Function 0x13a008e70 'uassert' 'int ()'     |   | |-IntegerLiteral 0x13a009078 <col:17> 'int' 31256     |   | |-StringLiteral 0x13a009098 <col:24> 'char[4]' lvalue \"STR\"     |   | `-UnaryOperator 0x13a009138 <col:31, col:37> '<dependent type>' contains-errors prefix '!' cannot overflow     |   |   `-ImplicitCastExpr 0x13a009120 <col:32, col:37> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-CXXDependentScopeMemberExpr 0x13a0090d8 <col:32, col:37> '<dependent type>' contains-errors lvalue ->hasElemMatch     |   |       `-RecoveryExpr 0x13a0090b8 <col:32> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x13a009250 <line:26:9, col:41> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13a009188 <col:9> 'int ()' Function 0x13a008e70 'uassert' 'int ()'     |   | |-IntegerLiteral 0x13a0091a8 <col:17> 'int' 51050     |   | |-StringLiteral 0x13a0091c8 <col:24> 'char[4]' lvalue \"STR\"     |   | `-CXXDependentScopeMemberExpr 0x13a009208 <col:31, col:36> '<dependent type>' contains-errors lvalue ->query     |   |   `-RecoveryExpr 0x13a0091e8 <col:31> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x13a009518 <line:31:9, col:43> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13a009368 <col:9> 'int ()' Function 0x13a0092b0 'invariant' 'int ()'     |   | `-BinaryOperator 0x13a0094f8 <col:19, col:42> 'int' contains-errors '>'     |   |   |-CallExpr 0x13a0094d8 <col:19, col:38> '<dependent type>' contains-errors     |   |   | `-CXXDependentScopeMemberExpr 0x13a009490 <col:19, col:33> '<dependent type>' contains-errors lvalue .size     |   |   |   `-RecoveryExpr 0x13a009470 <col:19> '<dependent type>' contains-errors lvalue     |   |   `-IntegerLiteral 0x13a009408 <col:42> 'int' 2     |   |-DeclStmt 0x13a0095c0 <line:37:9, line:41:54>     |   | `-VarDecl 0x13a009558 <line:37:9, col:14> col:14 matcher 'int' auto     |   `-CallExpr 0x13a009660 <line:43:9, col:29> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x13a0095d8 <col:9> 'int ()' Function 0x13a0092b0 'invariant' 'int ()'     |     `-CXXDependentScopeMemberExpr 0x13a009618 <col:19, col:24> '<dependent type>' contains-errors lvalue ->query     |       `-RecoveryExpr 0x13a0095f8 <col:19> '<dependent type>' contains-errors lvalue     `-IfStmt 0x13b009440 <line:52:5, line:58:5>       |-UnaryOperator 0x13b009218 <line:52:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-ImplicitCastExpr 0x13b009200 <col:10> '<dependent type>' contains-errors <LValueToRValue>       |   `-RecoveryExpr 0x13a0097d0 <col:10> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x13b009430 <col:34, line:58:5> ","19644":"`-FunctionDecl 0x13200a1d8  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x13200a2d8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x13200a340 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x13200a3a8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x13200a280 <<invalid sloc>> Implicit 882 ","19802":"`-FunctionDecl 0x14d128288  line:1:1 invalid notification_closed_cb 'int (int *, int)'   |-ParmVarDecl 0x14d128128 <col:26, col:46> col:46 invalid notification 'int *'   |-ParmVarDecl 0x14d1281a8 <line:2:5, col:25> col:25 invalid user_data 'int'   `-CompoundStmt 0x14d141b40 <line:3:1, line:11:1>     |-IfStmt 0x14d141998 <line:7:2, line:8:65>     | |-UnaryOperator 0x14d128500 <line:7:6, col:21> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14d1284e8 <col:8, col:21> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x14d1284a0 <col:8, col:21> '<dependent type>' contains-errors lvalue ->window_closed     | |     `-RecoveryExpr 0x14d128480 <col:8> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x14d141970 <line:8:3, col:65> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14d128670 <col:3> 'int ()' Function 0x14d1285b8 'gtk_window_present' 'int ()'     |   `-CallExpr 0x14d141948 <col:23, col:64> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14d128770 <col:23> 'int ()' Function 0x14d1286b8 'GTK_WINDOW' 'int ()'     |     `-CXXDependentScopeMemberExpr 0x14d141900 <col:35, col:49> '<dependent type>' contains-errors lvalue ->progress_dialog     |       `-CXXDependentScopeMemberExpr 0x14d1418b8 <col:35, col:43> '<dependent type>' contains-errors lvalue ->priv     |         `-RecoveryExpr 0x14d141898 <col:35> '<dependent type>' contains-errors lvalue     `-CallExpr 0x14d141b18 <line:10:2, col:21> '<dependent type>' contains-errors       |-DeclRefExpr 0x14d141a98 <col:2> 'int ()' Function 0x14d1419e0 'g_free' 'int ()'       `-RecoveryExpr 0x14d141af8 <col:10> '<dependent type>' contains-errors lvalue ","19403":"`-FunctionDecl 0x13e008378  col:10 implicit used strerror 'char *(int)' extern   |-ParmVarDecl 0x13e008478 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x13e008420 <<invalid sloc>> Implicit 901 ","19578":"`-FunctionDecl 0x141812b58  line:1:12 map_modify_do_local 'int (struct map_context *)' static   |-ParmVarDecl 0x141812a48 <col:32, col:52> col:52 used ac 'struct map_context *'   `-CompoundStmt 0x14182e970 <line:2:1, line:49:1>     |-DeclStmt 0x14182b038 <line:3:2, col:31>     | |-RecordDecl 0x14182ae50 <col:2, col:9> col:9 struct ldb_request     | `-VarDecl 0x14182afb8 <col:2, col:22> col:22 used local_req 'struct ldb_request *'     |-DeclStmt 0x14182b238 <line:4:2, col:25>     | |-RecordDecl 0x14182b050 <col:2, col:9> col:9 struct ldb_context     | `-VarDecl 0x14182b1b8 <col:2, col:22> col:22 used ldb 'struct ldb_context *'     |-DeclStmt 0x14182b2d0 <line:5:2, col:9>     | `-VarDecl 0x14182b268 <col:2, col:6> col:6 used ret 'int'     |-BinaryOperator 0x14182b4d8 <line:7:2, col:37> 'struct ldb_context *' contains-errors '='     | |-DeclRefExpr 0x14182b2e8 <col:2> 'struct ldb_context *' lvalue Var 0x14182b1b8 'ldb' 'struct ldb_context *'     | `-CallExpr 0x14182b4b0 <col:8, col:37> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14182b430 <col:8> 'int ()' Function 0x14182b378 'ldb_module_get_ctx' 'int ()'     |   `-RecoveryExpr 0x14182b488 <col:27, col:31> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14182b450 <col:27> 'struct map_context *' lvalue ParmVar 0x141812a48 'ac' 'struct map_context *'     |-IfStmt 0x14182e780 <line:9:2, line:46:2> has_else     | |-BinaryOperator 0x14182b5b0 <line:9:6, col:22> 'int' contains-errors '=='     | | |-RecoveryExpr 0x14182b530 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x14182b4f8 <col:6> 'struct map_context *' lvalue ParmVar 0x141812a48 'ac' 'struct map_context *'     | | `-RecoveryExpr 0x14182b590 <col:22> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x14182e2f8 <col:28, line:34:2>     | | |-IfStmt 0x14182b918 <line:13:3, line:16:3>     | | | |-BinaryOperator 0x14182b898 <line:13:7, line:14:33> 'int' contains-errors '!='     | | | | |-CallExpr 0x14182b858 <line:13:7, line:14:28> '<dependent type>' contains-errors     | | | | | |-DeclRefExpr 0x14182b6b0 <line:13:7> 'int ()' Function 0x14182b5f8 'ldb_msg_add_empty' 'int ()'     | | | | | |-RecoveryExpr 0x14182b708 <col:25, col:29> '<dependent type>' contains-errors lvalue     | | | | | | `-DeclRefExpr 0x14182b6d0 <col:25> 'struct map_context *' lvalue ParmVar 0x141812a48 'ac' 'struct map_context *'     | | | | | |-RecoveryExpr 0x14182b7f8 <col:40> '<dependent type>' contains-errors lvalue     | | | | | |-RecoveryExpr 0x14182b818 <line:14:6> '<dependent type>' contains-errors lvalue     | | | | | `-RecoveryExpr 0x14182b838 <col:24> '<dependent type>' contains-errors lvalue     | | | | `-IntegerLiteral 0x14182b7b8 <col:33> 'int' 0     | | | `-CompoundStmt 0x14182b900 <col:36, line:16:3>     | | |   `-ReturnStmt 0x14182b8f0 <line:15:4, col:11>     | | |     `-RecoveryExpr 0x14182b8d0 <col:11> '<dependent type>' contains-errors lvalue     | | |-BinaryOperator 0x14182bd00 <line:17:3, line:18:41> 'int' contains-errors '='     | | | |-DeclRefExpr 0x14182b938 <line:17:3> 'int' lvalue Var 0x14182b268 'ret' 'int'     | | | `-CallExpr 0x14182bcc8 <col:9, line:18:41> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x14182ba38 <line:17:9> 'int ()' Function 0x14182b980 'ldb_msg_add_linearized_dn' 'int ()'     | | |   |-RecoveryExpr 0x14182ba90 <col:35, col:39> '<dependent type>' contains-errors lvalue     | | |   | `-DeclRefExpr 0x14182ba58 <col:35> 'struct map_context *' lvalue ParmVar 0x141812a48 'ac' 'struct map_context *'     | | |   |-RecoveryExpr 0x14182bca8 <col:50> '<dependent type>' contains-errors lvalue     | | |   `-CXXDependentScopeMemberExpr 0x14182bc08 <line:18:7, col:39> '<dependent type>' contains-errors lvalue ->dn     | | |     `-CXXDependentScopeMemberExpr 0x14182bbc0 <col:7, col:30> '<dependent type>' contains-errors lvalue .message     | | |       `-CXXDependentScopeMemberExpr 0x14182bb78 <col:7, col:26> '<dependent type>' contains-errors lvalue .mod     | | |         `-CXXDependentScopeMemberExpr 0x14182bb30 <col:7, col:23> '<dependent type>' contains-errors lvalue ->op     | | |           `-RecoveryExpr 0x14182bb08 <col:7, col:11> '<dependent type>' contains-errors lvalue     | | |             `-DeclRefExpr 0x14182bad0 <col:7> 'struct map_context *' lvalue ParmVar 0x141812a48 'ac' 'struct map_context *'     | | |-IfStmt 0x14182dc00 <line:19:3, line:21:3>     | | | |-BinaryOperator 0x14182bd78 <line:19:7, col:14> 'int' '!='     | | | | |-ImplicitCastExpr 0x14182bd60 <col:7> 'int' <LValueToRValue>     | | | | | `-DeclRefExpr 0x14182bd20 <col:7> 'int' lvalue Var 0x14182b268 'ret' 'int'     | | | | `-IntegerLiteral 0x14182bd40 <col:14> 'int' 0     | | | `-CompoundStmt 0x14182bde0 <col:17, line:21:3>     | | |   `-ReturnStmt 0x14182bdd0 <line:20:4, col:11>     | | |     `-RecoveryExpr 0x14182bdb0 <col:11> '<dependent type>' contains-errors lvalue     | | |-BinaryOperator 0x14182e0b8 <line:24:3, line:29:13> 'int' contains-errors '='     | | | |-DeclRefExpr 0x14182dc20 <line:24:3> 'int' lvalue Var 0x14182b268 'ret' 'int'     | | | `-CallExpr 0x14182e058 <col:9, line:29:13> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x14182dd20 <line:24:9> 'int ()' Function 0x14182dc68 'ldb_build_add_req' 'int ()'     | | |   |-UnaryOperator 0x14182ddc0 <col:27, col:28> 'struct ldb_request **' prefix '&' cannot overflow     | | |   | `-DeclRefExpr 0x14182dd40 <col:28> 'struct ldb_request *' lvalue Var 0x14182afb8 'local_req' 'struct ldb_request *'     | | |   |-DeclRefExpr 0x14182ddd8 <col:39> 'struct ldb_context *' lvalue Var 0x14182b1b8 'ldb' 'struct ldb_context *'     | | |   |-DeclRefExpr 0x14182ddf8 <col:44> 'struct map_context *' lvalue ParmVar 0x141812a48 'ac' 'struct map_context *'     | | |   |-RecoveryExpr 0x14182de50 <line:25:6, col:10> '<dependent type>' contains-errors lvalue     | | |   | `-DeclRefExpr 0x14182de18 <col:6> 'struct map_context *' lvalue ParmVar 0x141812a48 'ac' 'struct map_context *'     | | |   |-CXXDependentScopeMemberExpr 0x14182ded8 <line:26:6, col:15> '<dependent type>' contains-errors lvalue ->controls     | | |   | `-RecoveryExpr 0x14182deb0 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | |   |   `-DeclRefExpr 0x14182de78 <col:6> 'struct map_context *' lvalue ParmVar 0x141812a48 'ac' 'struct map_context *'     | | |   |-DeclRefExpr 0x14182df20 <line:27:6> 'struct map_context *' lvalue ParmVar 0x141812a48 'ac' 'struct map_context *'     | | |   |-RecoveryExpr 0x14182e038 <line:28:6> '<dependent type>' contains-errors lvalue     | | |   `-RecoveryExpr 0x14182df90 <line:29:6, col:10> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x14182df58 <col:6> 'struct map_context *' lvalue ParmVar 0x141812a48 'ac' 'struct map_context *'     | | |-CallExpr 0x14182e248 <line:30:3, col:33> 'int'     | | | |-ImplicitCastExpr 0x14182e230 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x14182e1b8 <col:3> 'int ()' Function 0x14182e100 'LDB_REQ_SET_LOCATION' 'int ()'     | | | `-ImplicitCastExpr 0x14182e270 <col:24> 'struct ldb_request *' <LValueToRValue>     | | |   `-DeclRefExpr 0x14182e1d8 <col:24> 'struct ldb_request *' lvalue Var 0x14182afb8 'local_req' 'struct ldb_request *'     | | `-IfStmt 0x14182e2d8 <line:31:3, line:33:3>     | |   |-RecoveryExpr 0x14182e2a8 <line:31:7, col:14> '_Bool' contains-errors     | |   `-CompoundStmt 0x14182e2c8 <col:27, line:33:3>     | `-CompoundStmt 0x14182e760 <line:34:9, line:46:2>     |   |-CallExpr 0x14182e6b0 <line:42:3, col:33> 'int'     |   | |-ImplicitCastExpr 0x14182e698 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14182e658 <col:3> 'int ()' Function 0x14182e100 'LDB_REQ_SET_LOCATION' 'int ()'     |   | `-ImplicitCastExpr 0x14182e6d8 <col:24> 'struct ldb_request *' <LValueToRValue>     |   |   `-DeclRefExpr 0x14182e678 <col:24> 'struct ldb_request *' lvalue Var 0x14182afb8 'local_req' 'struct ldb_request *'     |   `-IfStmt 0x14182e740 <line:43:3, line:45:3>     |     |-RecoveryExpr 0x14182e710 <line:43:7, col:14> '_Bool' contains-errors     |     `-CompoundStmt 0x14182e730 <col:27, line:45:3>     `-ReturnStmt 0x14182e960 <line:48:2, col:47>       `-CallExpr 0x14182e930 <col:9, col:47> '<dependent type>' contains-errors         |-DeclRefExpr 0x14182e890 <col:9> 'int ()' Function 0x14182e7d8 'ldb_next_request' 'int ()'         |-RecoveryExpr 0x14182e8e8 <col:26, col:30> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x14182e8b0 <col:26> 'struct map_context *' lvalue ParmVar 0x141812a48 'ac' 'struct map_context *'         `-DeclRefExpr 0x14182e910 <col:38> 'struct ldb_request *' lvalue Var 0x14182afb8 'local_req' 'struct ldb_request *' ","19233":"`-FunctionDecl 0x137934c28  line:1:1 invalid query_get 'int (struct query *, int *, struct taia *)'   |-ParmVarDecl 0x13791b848 <col:12, col:26> col:26 used z 'struct query *'   |-ParmVarDecl 0x13791b918 <col:29, col:41> col:41 invalid x 'int *'   |-ParmVarDecl 0x137934ae8 <col:44, col:57> col:57 used stamp 'struct taia *'   `-CompoundStmt 0x137935338 <line:2:1, line:12:1>     |-SwitchStmt 0x137934f50 <line:3:5, line:9:5>     | |-CallExpr 0x137934f18 <line:3:13, col:41> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x137934e40 <col:13> 'int ()' Function 0x137934d88 'qmerge_get' 'int ()'     | | |-UnaryOperator 0x137934ec0 <col:25, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | `-RecoveryExpr 0x137934e98 <col:26, col:29> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x137934e60 <col:26> 'struct query *' lvalue ParmVar 0x13791b848 'z' 'struct query *'     | | |-RecoveryExpr 0x137934ed8 <col:33> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x137934ef8 <col:36> 'struct taia *' lvalue ParmVar 0x137934ae8 'stamp' 'struct taia *'     | `-CompoundStmt 0x1379352e8 <line:4:5, line:9:5>     |   |-CaseStmt 0x137934f98 <line:5:5, line:6:26>     |   | |-IntegerLiteral 0x137934f78 <line:5:10> 'int' 1     |   | `-ReturnStmt 0x137935190 <line:6:9, col:26>     |   |   `-CallExpr 0x137935148 <col:16, col:26> 'int'     |   |     |-ImplicitCastExpr 0x137935130 <col:16> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x1379350a0 <col:16> 'int ()' Function 0x137934fe8 'doit' 'int ()'     |   |     |-ImplicitCastExpr 0x137935178 <col:22> 'struct query *' <LValueToRValue>     |   |     | `-DeclRefExpr 0x1379350c0 <col:22> 'struct query *' lvalue ParmVar 0x13791b848 'z' 'struct query *'     |   |     `-IntegerLiteral 0x1379350e0 <col:25> 'int' 1     |   `-CaseStmt 0x1379351d8 <line:7:5, line:8:27>     |     |-UnaryOperator 0x1379351c0 <line:7:10, col:11> 'int' prefix '-'     |     | `-IntegerLiteral 0x1379351a0 <col:11> 'int' 1     |     `-ReturnStmt 0x1379352d8 <line:8:9, col:27>     |       `-CallExpr 0x137935290 <col:16, col:27> 'int'     |         |-ImplicitCastExpr 0x137935278 <col:16> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x137935200 <col:16> 'int ()' Function 0x137934fe8 'doit' 'int ()'     |         |-ImplicitCastExpr 0x1379352c0 <col:22> 'struct query *' <LValueToRValue>     |         | `-DeclRefExpr 0x137935220 <col:22> 'struct query *' lvalue ParmVar 0x13791b848 'z' 'struct query *'     |         `-UnaryOperator 0x137935260 <col:25, col:26> 'int' prefix '-'     |           `-IntegerLiteral 0x137935240 <col:26> 'int' 1     `-ReturnStmt 0x137935328 <line:11:5, col:12>       `-IntegerLiteral 0x137935308 <col:12> 'int' 0 ","20023":"`-FunctionDecl 0x14a940a00  line:1:1 hns_nic_alloc_rx_buffers 'int (struct hns_nic_ring_data *, int)'   |-ParmVarDecl 0x14a928648 <col:26, col:52> col:52 used ring_data 'struct hns_nic_ring_data *'   |-ParmVarDecl 0x14a9286c8 <col:63, col:67> col:67 used cleand_count 'int'   `-CompoundStmt 0x14b80a230 <line:2:1, line:29:1>     |-DeclStmt 0x14a940c18 <line:3:2, col:12>     | |-VarDecl 0x14a940b18 <col:2, col:6> col:6 used i 'int'     | `-VarDecl 0x14a940b98 <col:2, col:9> col:9 used ret 'int'     |-DeclStmt 0x14a940da8 <line:4:2, col:29>     | |-RecordDecl 0x14a940c30 <col:2, col:9> col:9 struct hnae_desc_cb     | `-VarDecl 0x14a940d28 <col:2, col:22> col:22 invalid res_cbs 'struct hnae_desc_cb'     |-DeclStmt 0x14a940ee0 <line:5:2, col:30>     | `-VarDecl 0x14a940e78 <col:2, col:23> col:23 used desc_cb 'struct hnae_desc_cb *'     |-DeclStmt 0x14a941148 <line:6:2, col:42>     | |-RecordDecl 0x14a940ef8 <col:2, col:9> col:9 struct hnae_ring     | `-VarDecl 0x14a941068 <col:2, col:38> col:20 used ring 'struct hnae_ring *' cinit     |   `-RecoveryExpr 0x14a941108 <col:27, col:38> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14a9410d0 <col:27> 'struct hns_nic_ring_data *' lvalue ParmVar 0x14a928648 'ring_data' 'struct hns_nic_ring_data *'     |-DeclStmt 0x14a9413f0 <line:7:2, col:47>     | |-RecordDecl 0x14a941160 <col:2, col:9> col:9 struct net_device     | `-VarDecl 0x14a9412c8 <col:2, col:44> col:21 used ndev 'struct net_device *' cinit     |   `-CXXDependentScopeMemberExpr 0x14a941390 <col:28, col:44> '<dependent type>' contains-errors lvalue .dev     |     `-RecoveryExpr 0x14a941368 <col:28, col:39> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14a941330 <col:28> 'struct hns_nic_ring_data *' lvalue ParmVar 0x14a928648 'ring_data' 'struct hns_nic_ring_data *'     |-ForStmt 0x14b809f40 <line:9:2, line:25:2>     | |-BinaryOperator 0x14a941448 <line:9:7, col:11> 'int' '='     | | |-DeclRefExpr 0x14a941408 <col:7> 'int' lvalue Var 0x14a940b18 'i' 'int'     | | `-IntegerLiteral 0x14a941428 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x14a9414d8 <col:14, col:18> 'int' '<'     | | |-ImplicitCastExpr 0x14a9414a8 <col:14> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x14a941468 <col:14> 'int' lvalue Var 0x14a940b18 'i' 'int'     | | `-ImplicitCastExpr 0x14a9414c0 <col:18> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x14a941488 <col:18> 'int' lvalue ParmVar 0x14a9286c8 'cleand_count' 'int'     | |-UnaryOperator 0x14a941518 <col:32, col:33> 'int' postfix '++'     | | `-DeclRefExpr 0x14a9414f8 <col:32> 'int' lvalue Var 0x14a940b18 'i' 'int'     | `-CompoundStmt 0x14b809f18 <col:37, line:25:2>     |   |-BinaryOperator 0x14a941678 <line:10:3, col:45> 'struct hnae_desc_cb *' contains-errors '='     |   | |-DeclRefExpr 0x14a941530 <col:3> 'struct hnae_desc_cb *' lvalue Var 0x14a940e78 'desc_cb' 'struct hnae_desc_cb *'     |   | `-UnaryOperator 0x14a941660 <col:13, col:45> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-ArraySubscriptExpr 0x14a941640 <col:14, col:45> '<dependent type>' contains-errors lvalue     |   |     |-ImplicitCastExpr 0x14a941610 <col:14, col:20> '<dependent type>' contains-errors <LValueToRValue>     |   |     | `-RecoveryExpr 0x14a941588 <col:14, col:20> '<dependent type>' contains-errors lvalue     |   |     |   `-DeclRefExpr 0x14a941550 <col:14> 'struct hnae_ring *' contains-errors lvalue Var 0x14a941068 'ring' 'struct hnae_ring *'     |   |     `-ImplicitCastExpr 0x14a941628 <col:28, col:34> '<dependent type>' contains-errors <LValueToRValue>     |   |       `-RecoveryExpr 0x14a9415e8 <col:28, col:34> '<dependent type>' contains-errors lvalue     |   |         `-DeclRefExpr 0x14a9415b0 <col:28> 'struct hnae_ring *' contains-errors lvalue Var 0x14a941068 'ring' 'struct hnae_ring *'     |   |-IfStmt 0x14b809d30 <line:11:3, line:22:3> has_else     |   | |-RecoveryExpr 0x14a9416d0 <line:11:7, col:16> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x14a941698 <col:7> 'struct hnae_desc_cb *' lvalue Var 0x14a940e78 'desc_cb' 'struct hnae_desc_cb *'     |   | |-CompoundStmt 0x14a9419b0 <col:28, line:14:3>     |   | | |-UnaryOperator 0x14a9417a0 <line:12:4, col:28> '<dependent type>' contains-errors postfix '++' cannot overflow     |   | | | `-CXXDependentScopeMemberExpr 0x14a941758 <col:4, col:16> '<dependent type>' contains-errors lvalue .reuse_pg_cnt     |   | | |   `-RecoveryExpr 0x14a941730 <col:4, col:10> '<dependent type>' contains-errors lvalue     |   | | |     `-DeclRefExpr 0x14a9416f8 <col:4> 'struct hnae_ring *' contains-errors lvalue Var 0x14a941068 'ring' 'struct hnae_ring *'     |   | | `-CallExpr 0x14a941980 <line:13:4, col:45> '<dependent type>' contains-errors     |   | |   |-DeclRefExpr 0x14a9418e0 <col:4> 'int ()' Function 0x14a941828 'hnae_reuse_buffer' 'int ()'     |   | |   |-DeclRefExpr 0x14a941900 <col:22> 'struct hnae_ring *' contains-errors lvalue Var 0x14a941068 'ring' 'struct hnae_ring *'     |   | |   `-RecoveryExpr 0x14a941958 <col:28, col:34> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x14a941920 <col:28> 'struct hnae_ring *' contains-errors lvalue Var 0x14a941068 'ring' 'struct hnae_ring *'     |   | `-CompoundStmt 0x14b809d08 <line:14:10, line:22:3>     |   |   |-BinaryOperator 0x14b809788 <line:15:4, col:48> 'int' contains-errors '='     |   |   | |-DeclRefExpr 0x14a9419d0 <col:4> 'int' lvalue Var 0x14a940b98 'ret' 'int'     |   |   | `-CallExpr 0x14b809758 <col:10, col:48> '<dependent type>' contains-errors     |   |   |   |-DeclRefExpr 0x14b8096e0 <col:10> 'int ()' Function 0x14b809628 'hnae_reserve_buffer_map' 'int ()'     |   |   |   |-DeclRefExpr 0x14b809700 <col:34> 'struct hnae_ring *' contains-errors lvalue Var 0x14a941068 'ring' 'struct hnae_ring *'     |   |   |   `-UnaryOperator 0x14b809740 <col:40, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   |     `-RecoveryExpr 0x14b809720 <col:41> '<dependent type>' contains-errors lvalue     |   |   |-IfStmt 0x14b809af8 <line:16:4, line:20:4>     |   |   | |-ImplicitCastExpr 0x14b8097c8 <line:16:8> 'int' <LValueToRValue>     |   |   | | `-DeclRefExpr 0x14b8097a8 <col:8> 'int' lvalue Var 0x14a940b98 'ret' 'int'     |   |   | `-CompoundStmt 0x14b809ad0 <col:13, line:20:4>     |   |   |   |-UnaryOperator 0x14b809888 <line:17:5, col:27> '<dependent type>' contains-errors postfix '++' cannot overflow     |   |   |   | `-CXXDependentScopeMemberExpr 0x14b809840 <col:5, col:17> '<dependent type>' contains-errors lvalue .sw_err_cnt     |   |   |   |   `-RecoveryExpr 0x14b809818 <col:5, col:11> '<dependent type>' contains-errors lvalue     |   |   |   |     `-DeclRefExpr 0x14b8097e0 <col:5> 'struct hnae_ring *' contains-errors lvalue Var 0x14a941068 'ring' 'struct hnae_ring *'     |   |   |   |-CallExpr 0x14b809a68 <line:18:5, col:27> 'int' contains-errors     |   |   |   | |-ImplicitCastExpr 0x14b809a50 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   |   |   | | `-DeclRefExpr 0x14b809980 <col:5> 'int ()' Function 0x14b8098c8 'netdev_err' 'int ()'     |   |   |   | |-ImplicitCastExpr 0x14b809a98 <col:16> 'struct net_device *' contains-errors <LValueToRValue>     |   |   |   | | `-DeclRefExpr 0x14b8099a0 <col:16> 'struct net_device *' contains-errors lvalue Var 0x14a9412c8 'ndev' 'struct net_device *'     |   |   |   | `-ImplicitCastExpr 0x14b809ab0 <col:22> 'char *' <ArrayToPointerDecay>     |   |   |   |   `-StringLiteral 0x14b809a00 <col:22> 'char[4]' lvalue \"STR\"     |   |   |   `-BreakStmt 0x14b809ac8 <line:19:5>     |   |   `-CallExpr 0x14b809cd0 <line:21:4, col:57> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x14b809bf8 <col:4> 'int ()' Function 0x14b809b40 'hnae_replace_buffer' 'int ()'     |   |     |-DeclRefExpr 0x14b809c18 <col:24> 'struct hnae_ring *' contains-errors lvalue Var 0x14a941068 'ring' 'struct hnae_ring *'     |   |     |-RecoveryExpr 0x14b809c70 <col:30, col:36> '<dependent type>' contains-errors lvalue     |   |     | `-DeclRefExpr 0x14b809c38 <col:30> 'struct hnae_ring *' contains-errors lvalue Var 0x14a941068 'ring' 'struct hnae_ring *'     |   |     `-UnaryOperator 0x14b809cb8 <col:49, col:50> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |       `-RecoveryExpr 0x14b809c98 <col:50> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x14b809ee8 <line:24:3, col:37> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14b809e40 <col:3> 'int ()' Function 0x14b809d88 'ring_ptr_move_fw' 'int ()'     |     |-DeclRefExpr 0x14b809e60 <col:20> 'struct hnae_ring *' contains-errors lvalue Var 0x14a941068 'ring' 'struct hnae_ring *'     |     `-RecoveryExpr 0x14b809ec8 <col:26> '<dependent type>' contains-errors lvalue     `-CallExpr 0x14b80a090 <line:27:2, col:6> 'int'       `-ImplicitCastExpr 0x14b80a078 <col:2> 'int (*)()' <FunctionToPointerDecay>         `-DeclRefExpr 0x14b80a058 <col:2> 'int ()' Function 0x14b809fa0 'wmb' 'int ()' ","19317":"`-FunctionDecl 0x14f00ddf8  line:1:1 invalid gcab_folder_get_comptype 'int (int *)'   |-ParmVarDecl 0x14f00dd28 <col:27, col:39> col:39 invalid self 'int *'   `-CompoundStmt 0x14f00df20 <line:2:1, line:4:1>     `-ReturnStmt 0x14f00df10 <line:3:5, col:18>       `-CXXDependentScopeMemberExpr 0x14f00dec8 <col:12, col:18> '<dependent type>' contains-errors lvalue ->comptype         `-RecoveryExpr 0x14f00dea8 <col:12> '<dependent type>' contains-errors lvalue ","19779":"`-FunctionDecl 0x15c1281f8  line:1:19 invalid is_varchar 'int (const char)' static   |-ParmVarDecl 0x15c1280e8 <col:30, col:41> col:41 used c 'const char'   `-CompoundStmt 0x15c128790 <col:44, line:3:7>     `-ReturnStmt 0x15c128780 <line:2:9, col:85>       `-BinaryOperator 0x15c128760 <col:16, col:85> 'int' '||'         |-BinaryOperator 0x15c1286b8 <col:16, col:77> 'int' '||'         | |-BinaryOperator 0x15c128548 <col:16, col:55> 'int' '||'         | | |-ParenExpr 0x15c1283d8 <col:16, col:33> 'int'         | | | `-BinaryOperator 0x15c1283b8 <col:17, col:30> 'int' '&&'         | | |   |-BinaryOperator 0x15c128310 <col:17, col:20> 'int' '>='         | | |   | |-ImplicitCastExpr 0x15c1282f8 <col:17> 'int' <IntegralCast>         | | |   | | `-ImplicitCastExpr 0x15c1282e0 <col:17> 'char' <LValueToRValue>         | | |   | |   `-DeclRefExpr 0x15c1282a8 <col:17> 'const char' lvalue ParmVar 0x15c1280e8 'c' 'const char'         | | |   | `-CharacterLiteral 0x15c1282c8 <col:20> 'int' 97         | | |   `-BinaryOperator 0x15c128398 <col:27, col:30> 'int' '<='         | | |     |-ImplicitCastExpr 0x15c128380 <col:27> 'int' <IntegralCast>         | | |     | `-ImplicitCastExpr 0x15c128368 <col:27> 'char' <LValueToRValue>         | | |     |   `-DeclRefExpr 0x15c128330 <col:27> 'const char' lvalue ParmVar 0x15c1280e8 'c' 'const char'         | | |     `-CharacterLiteral 0x15c128350 <col:30> 'int' 122         | | `-ParenExpr 0x15c128528 <col:38, col:55> 'int'         | |   `-BinaryOperator 0x15c128508 <col:39, col:52> 'int' '&&'         | |     |-BinaryOperator 0x15c128460 <col:39, col:42> 'int' '>='         | |     | |-ImplicitCastExpr 0x15c128448 <col:39> 'int' <IntegralCast>         | |     | | `-ImplicitCastExpr 0x15c128430 <col:39> 'char' <LValueToRValue>         | |     | |   `-DeclRefExpr 0x15c1283f8 <col:39> 'const char' lvalue ParmVar 0x15c1280e8 'c' 'const char'         | |     | `-CharacterLiteral 0x15c128418 <col:42> 'int' 65         | |     `-BinaryOperator 0x15c1284e8 <col:49, col:52> 'int' '<='         | |       |-ImplicitCastExpr 0x15c1284d0 <col:49> 'int' <IntegralCast>         | |       | `-ImplicitCastExpr 0x15c1284b8 <col:49> 'char' <LValueToRValue>         | |       |   `-DeclRefExpr 0x15c128480 <col:49> 'const char' lvalue ParmVar 0x15c1280e8 'c' 'const char'         | |       `-CharacterLiteral 0x15c1284a0 <col:52> 'int' 90         | `-ParenExpr 0x15c128698 <col:60, col:77> 'int'         |   `-BinaryOperator 0x15c128678 <col:61, col:74> 'int' '&&'         |     |-BinaryOperator 0x15c1285d0 <col:61, col:64> 'int' '>='         |     | |-ImplicitCastExpr 0x15c1285b8 <col:61> 'int' <IntegralCast>         |     | | `-ImplicitCastExpr 0x15c1285a0 <col:61> 'char' <LValueToRValue>         |     | |   `-DeclRefExpr 0x15c128568 <col:61> 'const char' lvalue ParmVar 0x15c1280e8 'c' 'const char'         |     | `-CharacterLiteral 0x15c128588 <col:64> 'int' 48         |     `-BinaryOperator 0x15c128658 <col:71, col:74> 'int' '<='         |       |-ImplicitCastExpr 0x15c128640 <col:71> 'int' <IntegralCast>         |       | `-ImplicitCastExpr 0x15c128628 <col:71> 'char' <LValueToRValue>         |       |   `-DeclRefExpr 0x15c1285f0 <col:71> 'const char' lvalue ParmVar 0x15c1280e8 'c' 'const char'         |       `-CharacterLiteral 0x15c128610 <col:74> 'int' 57         `-BinaryOperator 0x15c128740 <col:82, col:85> 'int' '=='           |-ImplicitCastExpr 0x15c128728 <col:82> 'int' <IntegralCast>           | `-ImplicitCastExpr 0x15c128710 <col:82> 'char' <LValueToRValue>           |   `-DeclRefExpr 0x15c1286d8 <col:82> 'const char' lvalue ParmVar 0x15c1280e8 'c' 'const char'           `-CharacterLiteral 0x15c1286f8 <col:85> 'int' 95 ","20090":"`-FunctionDecl 0x145941b78  line:1:20 invalid sctp_sf_eat_fwd_tsn_fast 'int (const struct sctp_endpoint *, const struct sctp_association *, const int, void *, int *)'   |-ParmVarDecl 0x145928668 <line:2:2, col:30> col:30 used ep 'const struct sctp_endpoint *'   |-ParmVarDecl 0x145941858 <line:3:2, col:33> col:33 used asoc 'const struct sctp_association *'   |-ParmVarDecl 0x1459418d8 <line:4:2, col:23> col:23 invalid type 'const int'   |-ParmVarDecl 0x145941958 <line:5:2, col:8> col:8 used arg 'void *'   |-ParmVarDecl 0x145941a08 <line:6:2, col:18> col:18 invalid commands 'int *'   `-CompoundStmt 0x146009110 <line:7:1, line:51:1>     |-DeclStmt 0x145941e88 <line:8:2, col:32>     | |-RecordDecl 0x145941c48 <col:2, col:9> col:9 struct sctp_chunk     | `-VarDecl 0x145941db8 <col:2, col:29> col:21 used chunk 'struct sctp_chunk *' cinit     |   `-ImplicitCastExpr 0x145941e58 <col:29> 'struct sctp_chunk *' <BitCast>     |     `-ImplicitCastExpr 0x145941e40 <col:29> 'void *' <LValueToRValue>     |       `-DeclRefExpr 0x145941e20 <col:29> 'void *' lvalue ParmVar 0x145941958 'arg' 'void *'     |-DeclStmt 0x145942088 <line:9:2, col:36>     | |-RecordDecl 0x145941ea0 <col:2, col:9> col:9 struct sctp_fwdtsn_hdr     | `-VarDecl 0x145942008 <col:2, col:26> col:26 used fwdtsn_hdr 'struct sctp_fwdtsn_hdr *'     |-IfStmt 0x145943878 <line:13:2, line:17:2>     | |-UnaryOperator 0x145942308 <line:13:6, col:35> 'int' prefix '!' cannot overflow     | | `-CallExpr 0x1459422a8 <col:7, col:35> 'int'     | |   |-ImplicitCastExpr 0x145942290 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x145942200 <col:7> 'int ()' Function 0x145942148 'sctp_vtag_verify' 'int ()'     | |   |-ImplicitCastExpr 0x1459422d8 <col:24> 'struct sctp_chunk *' <LValueToRValue>     | |   | `-DeclRefExpr 0x145942220 <col:24> 'struct sctp_chunk *' lvalue Var 0x145941db8 'chunk' 'struct sctp_chunk *'     | |   `-ImplicitCastExpr 0x1459422f0 <col:31> 'const struct sctp_association *' <LValueToRValue>     | |     `-DeclRefExpr 0x145942240 <col:31> 'const struct sctp_association *' lvalue ParmVar 0x145941858 'asoc' 'const struct sctp_association *'     | `-CompoundStmt 0x145943858 <col:38, line:17:2>     |   |-CallExpr 0x145942620 <line:14:3, line:15:16> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x145942400 <line:14:3> 'int ()' Function 0x145942348 'sctp_add_cmd_sf' 'int ()'     |   | |-RecoveryExpr 0x145942420 <col:19> '<dependent type>' contains-errors lvalue     |   | |-RecoveryExpr 0x1459425c8 <col:29> '<dependent type>' contains-errors lvalue     |   | `-CallExpr 0x145942600 <line:15:5, col:15> 'int'     |   |   `-ImplicitCastExpr 0x1459425e8 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   |     `-DeclRefExpr 0x145942538 <col:5> 'int ()' Function 0x145942480 'SCTP_NULL' 'int ()'     |   `-ReturnStmt 0x145943848 <line:16:3, col:56>     |     `-CallExpr 0x145943800 <col:10, col:56> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x145942738 <col:10> 'int ()' Function 0x145942680 'sctp_sf_pdiscard' 'int ()'     |       |-DeclRefExpr 0x145942758 <col:27> 'const struct sctp_endpoint *' lvalue ParmVar 0x145928668 'ep' 'const struct sctp_endpoint *'     |       |-DeclRefExpr 0x145942778 <col:31> 'const struct sctp_association *' lvalue ParmVar 0x145941858 'asoc' 'const struct sctp_association *'     |       |-RecoveryExpr 0x145942798 <col:37> '<dependent type>' contains-errors lvalue     |       |-DeclRefExpr 0x1459427b8 <col:43> 'void *' lvalue ParmVar 0x145941958 'arg' 'void *'     |       `-RecoveryExpr 0x1459427d8 <col:48> '<dependent type>' contains-errors lvalue     |-IfStmt 0x145943cd0 <line:20:2, line:22:17>     | |-RecoveryExpr 0x145943ab8 <line:20:6, col:70> '_Bool' contains-errors     | `-ReturnStmt 0x145943cc0 <line:21:3, line:22:17>     |   `-CallExpr 0x145943c78 <line:21:10, line:22:17> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x145943bb8 <line:21:10> 'int ()' Function 0x145943b00 'sctp_sf_violation_chunklen' 'int ()'     |     |-DeclRefExpr 0x145943bd8 <col:37> 'const struct sctp_endpoint *' lvalue ParmVar 0x145928668 'ep' 'const struct sctp_endpoint *'     |     |-DeclRefExpr 0x145943bf8 <col:41> 'const struct sctp_association *' lvalue ParmVar 0x145941858 'asoc' 'const struct sctp_association *'     |     |-RecoveryExpr 0x145943c18 <col:47> '<dependent type>' contains-errors lvalue     |     |-DeclRefExpr 0x145943c38 <col:53> 'void *' lvalue ParmVar 0x145941958 'arg' 'void *'     |     `-RecoveryExpr 0x145943c58 <line:22:9> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x145943e70 <line:24:2, col:53> 'struct sctp_fwdtsn_hdr *' contains-errors '='     | |-DeclRefExpr 0x145943cf0 <col:2> 'struct sctp_fwdtsn_hdr *' lvalue Var 0x145942008 'fwdtsn_hdr' 'struct sctp_fwdtsn_hdr *'     | `-CStyleCastExpr 0x145943e48 <col:15, col:53> 'struct sctp_fwdtsn_hdr *' contains-errors <Dependent>     |   `-CXXDependentScopeMemberExpr 0x145943d70 <col:41, col:53> '<dependent type>' contains-errors lvalue ->data     |     `-RecoveryExpr 0x145943d48 <col:41, col:48> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x145943d10 <col:41> 'struct sctp_chunk *' lvalue Var 0x145941db8 'chunk' 'struct sctp_chunk *'     |-BinaryOperator 0x145943f58 <line:25:2, col:27> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x145943ef0 <col:2, col:14> '<dependent type>' contains-errors lvalue .fwdtsn_hdr     | | `-RecoveryExpr 0x145943ec8 <col:2, col:9> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x145943e90 <col:2> 'struct sctp_chunk *' lvalue Var 0x145941db8 'chunk' 'struct sctp_chunk *'     | `-DeclRefExpr 0x145943f38 <col:27> 'struct sctp_fwdtsn_hdr *' lvalue Var 0x145942008 'fwdtsn_hdr' 'struct sctp_fwdtsn_hdr *'     |-IfStmt 0x146008a40 <line:34:2, line:35:8>     | |-RecoveryExpr 0x1460089b8 <line:34:6, col:52> '_Bool' contains-errors     | `-GotoStmt 0x146008a28 <line:35:3, col:8> 'gen_shutdown' 0x1460089d8     `-LabelStmt 0x146008e38 <line:43:1, col:13> 'gen_shutdown'       `-NullStmt 0x146008e30 <col:13> ","19343":"`-FunctionDecl 0x127141a98  line:1:13 invalid gfar_add_rx_frag 'int (struct gfar_rx_buff *, int, struct sk_buff *, int)' static   |-ParmVarDecl 0x127128668 <col:30, col:51> col:51 used rxb 'struct gfar_rx_buff *'   |-ParmVarDecl 0x1271286e8 <col:56, col:60> col:60 invalid lstatus 'int'   |-ParmVarDecl 0x1271418c8 <line:2:9, col:25> col:25 used skb 'struct sk_buff *'   |-ParmVarDecl 0x127141948 <col:30, col:35> col:35 invalid first 'int'   `-CompoundStmt 0x1278095d8 <line:3:1, line:29:1>     |-DeclStmt 0x127141c78 <line:4:2, col:37>     | `-VarDecl 0x127141b78 <col:2, col:23> col:6 used size 'int' cinit     |   `-BinaryOperator 0x127141c58 <col:13, col:23> '<dependent type>' contains-errors '&'     |     |-RecoveryExpr 0x127141be0 <col:13> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x127141c38 <col:23> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x127141ed8 <line:5:2, col:31>     | |-RecordDecl 0x127141c90 <col:2, col:9> col:9 struct page     | `-VarDecl 0x127141df8 <col:2, col:27> col:15 used page 'struct page *' cinit     |   `-RecoveryExpr 0x127141e98 <col:22, col:27> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x127141e60 <col:22> 'struct gfar_rx_buff *' lvalue ParmVar 0x127128668 'rxb' 'struct gfar_rx_buff *'     |-IfStmt 0x127808f28 <line:7:2, line:17:2> has_else     | |-CallExpr 0x127142090 <line:7:6, col:18> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x127142050 <col:6> 'int ()' Function 0x127141f98 'likely' 'int ()'     | | `-RecoveryExpr 0x127142070 <col:13> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x1271422a8 <col:21, line:9:2>     | | `-CallExpr 0x127142248 <line:8:3, col:20> 'int' contains-errors     | |   |-ImplicitCastExpr 0x127142230 <col:3> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x127142198 <col:3> 'int ()' Function 0x1271420e0 'skb_put' 'int ()'     | |   |-ImplicitCastExpr 0x127142278 <col:11> 'struct sk_buff *' <LValueToRValue>     | |   | `-DeclRefExpr 0x1271421b8 <col:11> 'struct sk_buff *' lvalue ParmVar 0x1271418c8 'skb' 'struct sk_buff *'     | |   `-ImplicitCastExpr 0x127142290 <col:16> 'int' contains-errors <LValueToRValue>     | |     `-DeclRefExpr 0x1271421d8 <col:16> 'int' contains-errors lvalue Var 0x127141b78 'size' 'int'     | `-CompoundStmt 0x127808f08 <line:9:9, line:17:2>     |   |-IfStmt 0x127142558 <line:11:3, line:12:17>     |   | |-BinaryOperator 0x127142488 <line:11:7, col:35> '<dependent type>' contains-errors '&'     |   | | |-RecoveryExpr 0x1271422c0 <col:7> '<dependent type>' contains-errors lvalue     |   | | `-CallExpr 0x127142460 <col:17, col:35> '<dependent type>' contains-errors     |   | |   |-DeclRefExpr 0x1271423c0 <col:17> 'int ()' Function 0x127142308 'BD_LFLAG' 'int ()'     |   | |   `-RecoveryExpr 0x127142440 <col:26> '<dependent type>' contains-errors lvalue     |   | `-CompoundAssignOperator 0x127142528 <line:12:4, col:17> 'int' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |   |-DeclRefExpr 0x1271424a8 <col:4> 'int' contains-errors lvalue Var 0x127141b78 'size' 'int'     |   |   `-RecoveryExpr 0x127142500 <col:12, col:17> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x1271424c8 <col:12> 'struct sk_buff *' lvalue ParmVar 0x1271418c8 'skb' 'struct sk_buff *'     |   `-CallExpr 0x127808eb8 <line:14:3, line:16:28> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x127142658 <line:14:3> 'int ()' Function 0x1271425a0 'skb_add_rx_frag' 'int ()'     |     |-DeclRefExpr 0x127142678 <col:19> 'struct sk_buff *' lvalue ParmVar 0x1271418c8 'skb' 'struct sk_buff *'     |     |-RecoveryExpr 0x127808e30 <col:24, col:41> '<dependent type>' contains-errors lvalue     |     | `-CallExpr 0x127808df0 <col:24, col:38> 'int'     |     |   |-ImplicitCastExpr 0x127808dd8 <col:24> 'int (*)()' <FunctionToPointerDecay>     |     |   | `-DeclRefExpr 0x127142778 <col:24> 'int ()' Function 0x1271426c0 'skb_shinfo' 'int ()'     |     |   `-ImplicitCastExpr 0x127808e18 <col:35> 'struct sk_buff *' <LValueToRValue>     |     |     `-DeclRefExpr 0x127142798 <col:35> 'struct sk_buff *' lvalue ParmVar 0x1271418c8 'skb' 'struct sk_buff *'     |     |-DeclRefExpr 0x127808c40 <col:51> 'struct page *' contains-errors lvalue Var 0x127141df8 'page' 'struct page *'     |     |-BinaryOperator 0x127808e78 <line:15:5, col:24> '<dependent type>' contains-errors '+'     |     | |-RecoveryExpr 0x127808c98 <col:5, col:10> '<dependent type>' contains-errors lvalue     |     | | `-DeclRefExpr 0x127808c60 <col:5> 'struct gfar_rx_buff *' lvalue ParmVar 0x127128668 'rxb' 'struct gfar_rx_buff *'     |     | `-RecoveryExpr 0x127808e58 <col:24> '<dependent type>' contains-errors lvalue     |     |-DeclRefExpr 0x127808cf8 <line:16:5> 'int' contains-errors lvalue Var 0x127141b78 'size' 'int'     |     `-RecoveryExpr 0x127808e98 <col:11> '<dependent type>' contains-errors lvalue     `-CallExpr 0x127809598 <line:26:2, col:19> 'int' contains-errors       |-ImplicitCastExpr 0x127809580 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x127809540 <col:2> 'int ()' Function 0x127809488 'page_ref_inc' 'int ()'       `-ImplicitCastExpr 0x1278095c0 <col:15> 'struct page *' contains-errors <LValueToRValue>         `-DeclRefExpr 0x127809560 <col:15> 'struct page *' contains-errors lvalue Var 0x127141df8 'page' 'struct page *' ","19450":"`-FunctionDecl 0x143027698  line:1:9 invalid WriteOneMLUC 'int (struct _cms_typehandler_struct *, int *, int *, int, const int *, int)'   |-ParmVarDecl 0x14300e268 <col:22, col:54> col:54 used self 'struct _cms_typehandler_struct *'   |-ParmVarDecl 0x14300e318 <col:60, col:74> col:74 invalid io 'int *'   |-ParmVarDecl 0x14300e398 <col:79, col:92> col:92 referenced invalid e 'int *'   |-ParmVarDecl 0x143027418 <col:95, col:111> col:111 invalid i 'int'   |-ParmVarDecl 0x143027498 <col:114, col:128> col:128 invalid mlu 'const int *'   |-ParmVarDecl 0x143027518 <col:133, col:149> col:149 invalid BaseOffset 'int'   `-CompoundStmt 0x14302a2a8 <line:2:1, line:20:1>     |-IfStmt 0x143027af8 <line:7:6, line:11:5>     | |-BinaryOperator 0x1430277e8 <line:7:10, col:17> 'int' contains-errors '=='     | | |-RecoveryExpr 0x143027770 <col:10> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1430277c8 <col:17> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x143027ad0 <col:23, line:11:5>     |   |-BinaryOperator 0x143027928 <line:8:9, col:24> '<dependent type>' contains-errors '='     |   | |-ArraySubscriptExpr 0x1430278e8 <col:9, col:20> '<dependent type>' contains-errors lvalue     |   | | |-ImplicitCastExpr 0x1430278b8 <col:9, col:13> '<dependent type>' contains-errors <LValueToRValue>     |   | | | `-CXXDependentScopeMemberExpr 0x143027850 <col:9, col:13> '<dependent type>' contains-errors lvalue ->Sizes     |   | | |   `-RecoveryExpr 0x143027828 <col:9> '<dependent type>' contains-errors lvalue     |   | | |     `-DeclRefExpr 0x143027808 <col:9> 'int *' lvalue ParmVar 0x14300e398 'e' 'int *'     |   | | `-ImplicitCastExpr 0x1430278d0 <col:19> '<dependent type>' contains-errors <LValueToRValue>     |   | |   `-RecoveryExpr 0x143027898 <col:19> '<dependent type>' contains-errors lvalue     |   | `-IntegerLiteral 0x143027908 <col:24> 'int' 0     |   |-BinaryOperator 0x143027a68 <line:9:9, col:26> '<dependent type>' contains-errors '='     |   | |-ArraySubscriptExpr 0x143027a28 <col:9, col:22> '<dependent type>' contains-errors lvalue     |   | | |-ImplicitCastExpr 0x1430279f8 <col:9, col:13> '<dependent type>' contains-errors <LValueToRValue>     |   | | | `-CXXDependentScopeMemberExpr 0x143027990 <col:9, col:13> '<dependent type>' contains-errors lvalue ->Offsets     |   | | |   `-RecoveryExpr 0x143027968 <col:9> '<dependent type>' contains-errors lvalue     |   | | |     `-DeclRefExpr 0x143027948 <col:9> 'int *' lvalue ParmVar 0x14300e398 'e' 'int *'     |   | | `-ImplicitCastExpr 0x143027a10 <col:21> '<dependent type>' contains-errors <LValueToRValue>     |   | |   `-RecoveryExpr 0x1430279d8 <col:21> '<dependent type>' contains-errors lvalue     |   | `-IntegerLiteral 0x143027a48 <col:26> 'int' 0     |   `-ReturnStmt 0x143027ac0 <line:10:9, col:16>     |     `-RecoveryExpr 0x143027aa0 <col:16> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x143027e20 <line:14:5, col:31> '<dependent type>' contains-errors '='     | |-ArraySubscriptExpr 0x143027dc0 <col:5, col:18> '<dependent type>' contains-errors lvalue     | | |-ImplicitCastExpr 0x143027d90 <col:5, col:9> '<dependent type>' contains-errors <LValueToRValue>     | | | `-CXXDependentScopeMemberExpr 0x143027c10 <col:5, col:9> '<dependent type>' contains-errors lvalue ->Offsets     | | |   `-RecoveryExpr 0x143027be8 <col:5> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x143027bc8 <col:5> 'int *' lvalue ParmVar 0x14300e398 'e' 'int *'     | | `-ImplicitCastExpr 0x143027da8 <col:17> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x143027c58 <col:17> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x143027e00 <col:22, col:31> '<dependent type>' contains-errors '-'     |   |-RecoveryExpr 0x143027de0 <col:22> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x143027ce0 <col:31> '<dependent type>' contains-errors lvalue     |-IfStmt 0x143028120 <line:16:5, col:59>     | |-UnaryOperator 0x1430280c0 <col:9, col:49> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x143028080 <col:10, col:49> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x143027fa0 <col:10> 'int ()' Function 0x143027ee8 'Type_MLU_Write' 'int ()'     | |   |-DeclRefExpr 0x143027fc0 <col:25> 'struct _cms_typehandler_struct *' lvalue ParmVar 0x14300e268 'self' 'struct _cms_typehandler_struct *'     | |   |-RecoveryExpr 0x143027fe0 <col:31> '<dependent type>' contains-errors lvalue     | |   |-CStyleCastExpr 0x143028038 <col:35, col:43> 'void *' contains-errors <Dependent>     | |   | `-RecoveryExpr 0x143028000 <col:43> '<dependent type>' contains-errors lvalue     | |   `-IntegerLiteral 0x143028060 <col:48> 'int' 1     | `-ReturnStmt 0x143028110 <col:52, col:59>     |   `-RecoveryExpr 0x1430280f0 <col:59> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14302a240 <line:18:5, col:36> '<dependent type>' contains-errors '='     | |-ArraySubscriptExpr 0x1430283c8 <col:5, col:16> '<dependent type>' contains-errors lvalue     | | |-ImplicitCastExpr 0x143028398 <col:5, col:9> '<dependent type>' contains-errors <LValueToRValue>     | | | `-CXXDependentScopeMemberExpr 0x143028188 <col:5, col:9> '<dependent type>' contains-errors lvalue ->Sizes     | | |   `-RecoveryExpr 0x143028160 <col:5> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x143028140 <col:5> 'int *' lvalue ParmVar 0x14300e398 'e' 'int *'     | | `-ImplicitCastExpr 0x1430283b0 <col:15> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x1430281d0 <col:15> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x14302a220 <col:20, col:36> '<dependent type>' contains-errors '-'     |   |-CallExpr 0x1430282c8 <col:20, col:32> '<dependent type>' contains-errors     |   | |-CXXDependentScopeMemberExpr 0x143028260 <col:20, col:25> '<dependent type>' contains-errors lvalue ->Tell     |   | | `-RecoveryExpr 0x143028240 <col:20> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x1430282a8 <col:30> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x14302a200 <col:36> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14302a298 <line:19:5, col:12>       `-RecoveryExpr 0x14302a278 <col:12> '<dependent type>' contains-errors lvalue ","19245":"`-FunctionDecl 0x129128758  line:1:12 build_dirty_segmap 'int (struct f2fs_sb_info *)' static   |-ParmVarDecl 0x129128648 <col:31, col:52> col:52 used sbi 'struct f2fs_sb_info *'   `-CompoundStmt 0x129144590 <line:2:1, line:24:1>     |-DeclStmt 0x129140c38 <line:3:2, col:36>     | |-RecordDecl 0x129140a50 <col:2, col:9> col:9 struct dirty_seglist_info     | `-VarDecl 0x129140bb8 <col:2, col:29> col:29 used dirty_i 'struct dirty_seglist_info *'     |-DeclStmt 0x129140d68 <line:4:2, col:29>     | |-VarDecl 0x129140c68 <col:2, col:15> col:15 used bitmap_size 'unsigned int'     | `-VarDecl 0x129140ce8 <col:2, col:28> col:28 used i 'unsigned int'     |-IfStmt 0x129141050 <line:8:2, line:9:11>     | |-UnaryOperator 0x129140f90 <line:8:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x129140f78 <col:7> 'struct dirty_seglist_info *' <LValueToRValue>     | |   `-DeclRefExpr 0x129140f58 <col:7> 'struct dirty_seglist_info *' lvalue Var 0x129140bb8 'dirty_i' 'struct dirty_seglist_info *'     | `-ReturnStmt 0x129141040 <line:9:3, col:11>     |   `-UnaryOperator 0x129141028 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x129141010 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x129140ff0 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x129141260 <line:11:2, col:26> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x129141218 <col:2, col:13> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x1291411d8 <col:2, col:10> 'int'     | |   |-ImplicitCastExpr 0x1291411c0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x129141150 <col:2> 'int ()' Function 0x129141098 'SM_I' 'int ()'     | |   `-ImplicitCastExpr 0x129141200 <col:7> 'struct f2fs_sb_info *' <LValueToRValue>     | |     `-DeclRefExpr 0x129141170 <col:7> 'struct f2fs_sb_info *' lvalue ParmVar 0x129128648 'sbi' 'struct f2fs_sb_info *'     | `-DeclRefExpr 0x129141240 <col:26> 'struct dirty_seglist_info *' lvalue Var 0x129140bb8 'dirty_i' 'struct dirty_seglist_info *'     |-CallExpr 0x1291413f8 <line:12:2, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x129141360 <col:2> 'int ()' Function 0x1291412a8 'mutex_init' 'int ()'     | `-UnaryOperator 0x1291413e0 <col:13, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1291413b8 <col:14, col:23> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x129141380 <col:14> 'struct dirty_seglist_info *' lvalue Var 0x129140bb8 'dirty_i' 'struct dirty_seglist_info *'     |-BinaryOperator 0x129141710 <line:14:2, col:47> 'unsigned int' '='     | |-DeclRefExpr 0x129141420 <col:2> 'unsigned int' lvalue Var 0x129140c68 'bitmap_size' 'unsigned int'     | `-ImplicitCastExpr 0x1291416f8 <col:16, col:47> 'unsigned int' <IntegralCast>     |   `-CallExpr 0x1291416d0 <col:16, col:47> 'int'     |     |-ImplicitCastExpr 0x1291416b8 <col:16> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x129141520 <col:16> 'int ()' Function 0x129141468 'f2fs_bitmap_size' 'int ()'     |     `-CallExpr 0x129141678 <col:33, col:46> 'int'     |       |-ImplicitCastExpr 0x129141660 <col:33> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x129141620 <col:33> 'int ()' Function 0x129141568 'MAIN_SEGS' 'int ()'     |       `-ImplicitCastExpr 0x1291416a0 <col:43> 'struct f2fs_sb_info *' <LValueToRValue>     |         `-DeclRefExpr 0x129141640 <col:43> 'struct f2fs_sb_info *' lvalue ParmVar 0x129128648 'sbi' 'struct f2fs_sb_info *'     |-ForStmt 0x129144258 <line:16:2, line:20:2>     | |-BinaryOperator 0x129141788 <line:16:7, col:11> 'unsigned int' '='     | | |-DeclRefExpr 0x129141730 <col:7> 'unsigned int' lvalue Var 0x129140ce8 'i' 'unsigned int'     | | `-ImplicitCastExpr 0x129141770 <col:11> 'unsigned int' <IntegralCast>     | |   `-IntegerLiteral 0x129141750 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x129141820 <col:14, col:18> 'int' contains-errors '<'     | | |-DeclRefExpr 0x1291417a8 <col:14> 'unsigned int' lvalue Var 0x129140ce8 'i' 'unsigned int'     | | `-RecoveryExpr 0x129141800 <col:18> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x129141860 <col:33, col:34> 'unsigned int' postfix '++'     | | `-DeclRefExpr 0x129141840 <col:33> 'unsigned int' lvalue Var 0x129140ce8 'i' 'unsigned int'     | `-CompoundStmt 0x129144238 <col:38, line:20:2>     |   |-BinaryOperator 0x129144050 <line:17:3, col:62> '<dependent type>' contains-errors '='     |   | |-ArraySubscriptExpr 0x129143fe0 <col:3, col:26> '<dependent type>' contains-errors lvalue     |   | | |-ImplicitCastExpr 0x129143fb0 <col:3, col:12> '<dependent type>' contains-errors <LValueToRValue>     |   | | | `-RecoveryExpr 0x1291418b0 <col:3, col:12> '<dependent type>' contains-errors lvalue     |   | | |   `-DeclRefExpr 0x129141878 <col:3> 'struct dirty_seglist_info *' lvalue Var 0x129140bb8 'dirty_i' 'struct dirty_seglist_info *'     |   | | `-ImplicitCastExpr 0x129143fc8 <col:25> 'unsigned int' <LValueToRValue>     |   | |   `-DeclRefExpr 0x1291418d8 <col:25> 'unsigned int' lvalue Var 0x129140ce8 'i' 'unsigned int'     |   | `-CallExpr 0x129144020 <col:30, col:62> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x129143eb8 <col:30> 'int ()' Function 0x129143e00 'kvzalloc' 'int ()'     |   |   |-DeclRefExpr 0x129143ed8 <col:39> 'unsigned int' lvalue Var 0x129140c68 'bitmap_size' 'unsigned int'     |   |   `-RecoveryExpr 0x129144000 <col:52> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x129144218 <line:18:3, line:19:12>     |     |-UnaryOperator 0x129144158 <line:18:7, col:31> '<dependent type>' contains-errors prefix '!' cannot overflow     |     | `-ImplicitCastExpr 0x129144140 <col:8, col:31> '<dependent type>' contains-errors <LValueToRValue>     |     |   `-ArraySubscriptExpr 0x129144120 <col:8, col:31> '<dependent type>' contains-errors lvalue     |     |     |-ImplicitCastExpr 0x1291440f0 <col:8, col:17> '<dependent type>' contains-errors <LValueToRValue>     |     |     | `-RecoveryExpr 0x1291440a8 <col:8, col:17> '<dependent type>' contains-errors lvalue     |     |     |   `-DeclRefExpr 0x129144070 <col:8> 'struct dirty_seglist_info *' lvalue Var 0x129140bb8 'dirty_i' 'struct dirty_seglist_info *'     |     |     `-ImplicitCastExpr 0x129144108 <col:30> 'unsigned int' <LValueToRValue>     |     |       `-DeclRefExpr 0x1291440d0 <col:30> 'unsigned int' lvalue Var 0x129140ce8 'i' 'unsigned int'     |     `-ReturnStmt 0x129144208 <line:19:4, col:12>     |       `-UnaryOperator 0x1291441f0 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |         `-ImplicitCastExpr 0x1291441d8 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |           `-RecoveryExpr 0x1291441b8 <col:12> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1291443c8 <line:22:2, col:23> 'int'     | |-ImplicitCastExpr 0x1291443b0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x129144370 <col:2> 'int ()' Function 0x1291442b8 'init_dirty_segmap' 'int ()'     | `-ImplicitCastExpr 0x1291443f0 <col:20> 'struct f2fs_sb_info *' <LValueToRValue>     |   `-DeclRefExpr 0x129144390 <col:20> 'struct f2fs_sb_info *' lvalue ParmVar 0x129128648 'sbi' 'struct f2fs_sb_info *'     `-ReturnStmt 0x129144580 <line:23:2, col:31>       `-CallExpr 0x129144540 <col:9, col:31> 'int'         |-ImplicitCastExpr 0x129144528 <col:9> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x1291444e8 <col:9> 'int ()' Function 0x129144430 'init_victim_secmap' 'int ()'         `-ImplicitCastExpr 0x129144568 <col:28> 'struct f2fs_sb_info *' <LValueToRValue>           `-DeclRefExpr 0x129144508 <col:28> 'struct f2fs_sb_info *' lvalue ParmVar 0x129128648 'sbi' 'struct f2fs_sb_info *' ","19510":"`-FunctionDecl 0x1299282c8  line:1:1 invalid gdk_pixbuf__tiff_image_load 'int (int *, int **)'   |-ParmVarDecl 0x129928128 <col:30, col:36> col:36 invalid f 'int *'   |-ParmVarDecl 0x1299281e0 <col:39, col:48> col:48 invalid error 'int **'   `-CompoundStmt 0x1299285f8 <line:2:1, line:4:1>     `-ReturnStmt 0x1299285e8 <line:3:2, col:57>       `-CallExpr 0x1299285b0 <col:9, col:57> '<dependent type>' contains-errors         |-DeclRefExpr 0x1299284e0 <col:9> 'int ()' Function 0x129928428 'gdk_pixbuf__tiff_image_load_real' 'int ()'         |-RecoveryExpr 0x129928500 <col:43> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x129928590 <col:46> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x129928538 <col:52> '<dependent type>' contains-errors lvalue ","19251":"`-FunctionDecl 0x14a826748  line:1:12 crypto_givcipher_report 'int (struct sk_buff *, struct crypto_alg *)' static   |-ParmVarDecl 0x14a80e248 <col:36, col:52> col:52 skb 'struct sk_buff *'   |-ParmVarDecl 0x14a826628 <col:57, col:76> col:76 alg 'struct crypto_alg *'   `-CompoundStmt 0x14a826908 <line:2:1, line:4:1>     `-ReturnStmt 0x14a8268f8 <line:3:2, col:10>       `-UnaryOperator 0x14a8268e0 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow         `-ImplicitCastExpr 0x14a8268c8 <col:10> '<dependent type>' contains-errors <LValueToRValue>           `-RecoveryExpr 0x14a8268a8 <col:10> '<dependent type>' contains-errors lvalue ","19593":"`-FunctionDecl 0x15c00e128  line:1:1 invalid gss_pseudo_random 'int (int *, int, int, const int, int, int)'   |-ParmVarDecl 0x15c00dd28 <col:20, col:31> col:31 invalid minor_status 'int *'   |-ParmVarDecl 0x15c00dda8 <line:2:13, col:26> col:26 invalid context_handle 'int'   |-ParmVarDecl 0x15c00de28 <line:3:13, col:17> col:17 used prf_key 'int'   |-ParmVarDecl 0x15c00dea8 <line:4:13, col:32> col:32 invalid prf_in 'const int'   |-ParmVarDecl 0x15c00df28 <line:5:13, col:21> col:21 invalid desired_output_len 'int'   |-ParmVarDecl 0x15c00dfa8 <line:6:13, col:26> col:26 referenced invalid prf_out 'int'   `-CompoundStmt 0x15d008f00 <line:7:1, line:49:1>     |-IfStmt 0x15c00e2e0 <line:12:5, line:13:9>     | |-BinaryOperator 0x15c00e278 <line:12:9, col:25> 'int' contains-errors '=='     | | |-RecoveryExpr 0x15c00e200 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x15c00e258 <col:25> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x15c00e2d0 <line:13:2, col:9>     |   `-RecoveryExpr 0x15c00e2b0 <col:9> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15d008670 <line:15:5, line:16:40>     | |-BinaryOperator 0x15c00e378 <line:15:9, col:27> 'int' contains-errors '=='     | | |-RecoveryExpr 0x15c00e300 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x15c00e358 <col:27> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x15d008660 <line:16:2, col:40>     |   `-BinaryOperator 0x15d008640 <col:9, col:40> '<dependent type>' contains-errors '|'     |     |-RecoveryExpr 0x15d008600 <col:9> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x15d008620 <col:40> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15d0087e8 <line:18:5, line:19:40>     | |-BinaryOperator 0x15d008708 <line:18:9, col:19> 'int' contains-errors '=='     | | |-RecoveryExpr 0x15d008690 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x15d0086e8 <col:19> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x15d0087d8 <line:19:2, col:40>     |   `-BinaryOperator 0x15d0087b8 <col:9, col:40> '<dependent type>' contains-errors '|'     |     |-RecoveryExpr 0x15d008778 <col:9> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x15d008798 <col:40> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15d008960 <line:21:5, line:22:41>     | |-BinaryOperator 0x15d008880 <line:21:9, col:20> 'int' contains-errors '=='     | | |-RecoveryExpr 0x15d008808 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x15d008860 <col:20> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x15d008950 <line:22:2, col:41>     |   `-BinaryOperator 0x15d008930 <col:9, col:41> '<dependent type>' contains-errors '|'     |     |-RecoveryExpr 0x15d0088f0 <col:9> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x15d008910 <col:41> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x15d008a30 <line:24:5, col:23> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15d0089c8 <col:5, col:14> '<dependent type>' contains-errors lvalue ->length     | | `-RecoveryExpr 0x15d0089a0 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15d008980 <col:5> 'int' lvalue ParmVar 0x15c00dfa8 'prf_out' 'int'     | `-IntegerLiteral 0x15d008a10 <col:23> 'int' 0     `-IfStmt 0x15d008ee0 <line:32:5, line:46:5>       |-RecoveryExpr 0x15d008c60 <line:32:9, col:17> '_Bool' contains-errors       `-CompoundStmt 0x15d008ec8 <col:23, line:46:5>         `-IfStmt 0x15d008e98 <line:33:2, line:43:6> has_else           |-RecoveryExpr 0x15d008c80 <line:33:6, col:33> '_Bool' contains-errors           |-CompoundStmt 0x15d008e80 <col:39, line:42:2>           `-NullStmt 0x15d008e90 <line:43:6> ","20187":"`-FunctionDecl 0x15c826748  line:1:5 lh_table_delete_entry 'int (struct lh_table *, struct lh_entry *)'   |-ParmVarDecl 0x15c80e248 <col:27, col:44> col:44 used t 'struct lh_table *'   |-ParmVarDecl 0x15c826628 <col:47, col:64> col:64 used e 'struct lh_entry *'   `-CompoundStmt 0x15c8291b8 <line:2:1, line:27:1>     |-IfStmt 0x15c826958 <line:6:2, col:25>     | |-BinaryOperator 0x15c8268d8 <col:5, col:9> 'int' contains-errors '<'     | | |-RecoveryExpr 0x15c8268b8 <col:5> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x15c826878 <col:9> 'int' 0     | `-CompoundStmt 0x15c826940 <col:12, col:25>     |   `-ReturnStmt 0x15c826930 <col:14, col:22>     |     `-UnaryOperator 0x15c826918 <col:21, col:22> 'int' prefix '-'     |       `-IntegerLiteral 0x15c8268f8 <col:22> 'int' 2     |-IfStmt 0x15c826b00 <line:8:2, col:69>     | |-RecoveryExpr 0x15c826a98 <col:5, col:51> '_Bool' contains-errors     | `-ReturnStmt 0x15c826af0 <col:61, col:69>     |   `-UnaryOperator 0x15c826ad8 <col:68, col:69> 'int' prefix '-'     |     `-IntegerLiteral 0x15c826ab8 <col:69> 'int' 1     |-UnaryOperator 0x15c826b80 <line:9:2, col:10> '<dependent type>' contains-errors postfix '--' cannot overflow     | `-RecoveryExpr 0x15c826b58 <col:2, col:5> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x15c826b20 <col:2> 'struct lh_table *' lvalue ParmVar 0x15c80e248 't' 'struct lh_table *'     |-IfStmt 0x15c826ca0 <line:10:2, col:29>     | |-RecoveryExpr 0x15c826bd0 <col:5, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15c826b98 <col:5> 'struct lh_table *' lvalue ParmVar 0x15c80e248 't' 'struct lh_table *'     | `-CallExpr 0x15c826c78 <col:17, col:29> '<dependent type>' contains-errors     |   |-RecoveryExpr 0x15c826c30 <col:17, col:20> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x15c826bf8 <col:17> 'struct lh_table *' lvalue ParmVar 0x15c80e248 't' 'struct lh_table *'     |   `-DeclRefExpr 0x15c826c58 <col:28> 'struct lh_entry *' lvalue ParmVar 0x15c826628 'e' 'struct lh_entry *'     |-IfStmt 0x15c829098 <line:13:2, line:24:2> has_else     | |-RecoveryExpr 0x15c826f78 <line:13:5, col:54> '_Bool' contains-errors     | |-CompoundStmt 0x15c827058 <col:57, line:15:2>     | `-IfStmt 0x15c829068 <col:9, line:24:2> has_else     |   |-RecoveryExpr 0x15c827128 <line:15:13, col:35> '_Bool' contains-errors     |   |-CompoundStmt 0x15c827360 <col:38, line:18:2>     |   | `-BinaryOperator 0x15c827340 <line:17:3, col:22> '<dependent type>' contains-errors '='     |   |   |-RecoveryExpr 0x15c827270 <col:3, col:6> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x15c827238 <col:3> 'struct lh_table *' lvalue ParmVar 0x15c80e248 't' 'struct lh_table *'     |   |   `-CXXDependentScopeMemberExpr 0x15c8272f8 <col:13, col:22> '<dependent type>' contains-errors lvalue ->next     |   |     `-RecoveryExpr 0x15c8272d0 <col:13, col:16> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x15c827298 <col:13> 'struct lh_table *' lvalue ParmVar 0x15c80e248 't' 'struct lh_table *'     |   `-IfStmt 0x15c829038 <line:18:9, line:24:2> has_else     |     |-RecoveryExpr 0x15c827438 <line:18:13, col:35> '_Bool' contains-errors     |     |-CompoundStmt 0x15c828e90 <col:38, line:21:2>     |     | `-BinaryOperator 0x15c828e70 <line:20:3, col:22> '<dependent type>' contains-errors '='     |     |   |-RecoveryExpr 0x15c827580 <col:3, col:6> '<dependent type>' contains-errors lvalue     |     |   | `-DeclRefExpr 0x15c827548 <col:3> 'struct lh_table *' lvalue ParmVar 0x15c80e248 't' 'struct lh_table *'     |     |   `-CXXDependentScopeMemberExpr 0x15c828e28 <col:13, col:22> '<dependent type>' contains-errors lvalue ->prev     |     |     `-RecoveryExpr 0x15c828e00 <col:13, col:16> '<dependent type>' contains-errors lvalue     |     |       `-DeclRefExpr 0x15c8275a8 <col:13> 'struct lh_table *' lvalue ParmVar 0x15c80e248 't' 'struct lh_table *'     |     `-CompoundStmt 0x15c829028 <line:21:9, line:24:2>     `-ReturnStmt 0x15c8291a8 <line:26:2, col:9>       `-IntegerLiteral 0x15c829188 <col:9> 'int' 0 ","19572":"`-FunctionDecl 0x142944158  col:9 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x142944258 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x1429442c0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x142944328 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x142944200 <<invalid sloc>> Implicit 883 ","19734":"`-FunctionDecl 0x12209c5f8  line:1:1 invalid drv_wrap 'int (int *)'   |-ParmVarDecl 0x12209c528 <col:10, col:18> col:18 referenced invalid sp 'int *'   `-CompoundStmt 0x12209cb78 <line:2:1, line:8:1>     `-IfStmt 0x12209cb58 <line:3:5, line:7:5>       |-RecoveryExpr 0x12209c6a8 <line:3:9> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x12209cb30 <col:13, line:7:5>         |-CallExpr 0x12209c778 <line:4:2, col:20> '<dependent type>' contains-errors         | |-CXXDependentScopeMemberExpr 0x12209c710 <col:2, col:6> '<dependent type>' contains-errors lvalue ->_mouse_wrap         | | `-RecoveryExpr 0x12209c6e8 <col:2> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x12209c6c8 <col:2> 'int *' lvalue ParmVar 0x12209c528 'sp' 'int *'         | `-RecoveryExpr 0x12209c758 <col:18> '<dependent type>' contains-errors lvalue         |-CallExpr 0x12209c9f0 <line:5:2, col:38> '<dependent type>' contains-errors         | |-CallExpr 0x12209c9c8 <col:2, col:33> '<dependent type>' contains-errors         | | |-DeclRefExpr 0x12209c900 <col:2> 'int ()' Function 0x12209c848 'NCURSES_SP_NAME' 'int ()'         | | `-RecoveryExpr 0x12209c9a8 <col:18> '<dependent type>' contains-errors lvalue         | `-RecoveryExpr 0x12209c960 <col:36> '<dependent type>' contains-errors lvalue         `-CallExpr 0x12209cb08 <line:6:2, col:37> '<dependent type>' contains-errors           |-CallExpr 0x12209cae0 <col:2, col:32> '<dependent type>' contains-errors           | |-DeclRefExpr 0x12209ca18 <col:2> 'int ()' Function 0x12209c848 'NCURSES_SP_NAME' 'int ()'           | `-RecoveryExpr 0x12209cac0 <col:18> '<dependent type>' contains-errors lvalue           `-RecoveryExpr 0x12209ca78 <col:35> '<dependent type>' contains-errors lvalue ","19538":"`-FunctionDecl 0x1309413e8  col:22 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x1309414e8 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x130941490 <<invalid sloc>> Implicit 902 ","20146":"`-FunctionDecl 0x124044398  line:1:1 tok_new 'int (void)'   `-CompoundStmt 0x12383fcc0 <line:2:1, line:34:1>     |-DeclStmt 0x1230b7a88 <line:3:5, line:4:70>     | |-RecordDecl 0x124044488 <line:3:5, col:12> col:12 struct tok_state     | `-VarDecl 0x1240445f8 <col:5, col:23> col:23 used tok 'struct tok_state *'     |-IfStmt 0x1230b7b80 <line:5:5, line:6:16>     | |-BinaryOperator 0x1230b7b18 <line:5:9, col:16> 'int' contains-errors '=='     | | |-DeclRefExpr 0x1230b7aa0 <col:9> 'struct tok_state *' lvalue Var 0x1240445f8 'tok' 'struct tok_state *'     | | `-RecoveryExpr 0x1230b7af8 <col:16> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1230b7b70 <line:6:9, col:16>     |   `-RecoveryExpr 0x1230b7b50 <col:16> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1230b7ed8 <line:7:5, col:62> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1230b7bd8 <col:5, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1230b7ba0 <col:5> 'struct tok_state *' lvalue Var 0x1240445f8 'tok' 'struct tok_state *'     | `-BinaryOperator 0x1230b7eb8 <col:16, col:62> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x1230b7c38 <col:16, col:21> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x1230b7c00 <col:16> 'struct tok_state *' lvalue Var 0x1240445f8 'tok' 'struct tok_state *'     |   `-BinaryOperator 0x1230b7e98 <col:27, col:62> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x1230b7c98 <col:27, col:32> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x1230b7c60 <col:27> 'struct tok_state *' lvalue Var 0x1240445f8 'tok' 'struct tok_state *'     |     `-BinaryOperator 0x1230b7e78 <col:38, col:62> '<dependent type>' contains-errors '='     |       |-RecoveryExpr 0x1230b7cf8 <col:38, col:43> '<dependent type>' contains-errors lvalue     |       | `-DeclRefExpr 0x1230b7cc0 <col:38> 'struct tok_state *' lvalue Var 0x1240445f8 'tok' 'struct tok_state *'     |       `-BinaryOperator 0x1230b7e58 <col:49, col:62> '<dependent type>' contains-errors '='     |         |-RecoveryExpr 0x1230b7d58 <col:49, col:54> '<dependent type>' contains-errors lvalue     |         | `-DeclRefExpr 0x1230b7d20 <col:49> 'struct tok_state *' lvalue Var 0x1240445f8 'tok' 'struct tok_state *'     |         `-RecoveryExpr 0x1230b7e38 <col:62> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1230b7fb0 <line:8:5, col:17> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1230b7f30 <col:5, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1230b7ef8 <col:5> 'struct tok_state *' lvalue Var 0x1240445f8 'tok' 'struct tok_state *'     | `-RecoveryExpr 0x1230b7f90 <col:17> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1230b8088 <line:9:5, col:15> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1230b8008 <col:5, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1230b7fd0 <col:5> 'struct tok_state *' lvalue Var 0x1240445f8 'tok' 'struct tok_state *'     | `-RecoveryExpr 0x1230b8068 <col:15> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1230b8160 <line:10:5, col:18> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1230b80e0 <col:5, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1230b80a8 <col:5> 'struct tok_state *' lvalue Var 0x1240445f8 'tok' 'struct tok_state *'     | `-RecoveryExpr 0x1230b8140 <col:18> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1230b8238 <line:11:5, col:20> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1230b81b8 <col:5, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1230b8180 <col:5> 'struct tok_state *' lvalue Var 0x1240445f8 'tok' 'struct tok_state *'     | `-RecoveryExpr 0x1230b8218 <col:20> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1230b82d8 <line:12:5, col:19> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1230b8290 <col:5, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1230b8258 <col:5> 'struct tok_state *' lvalue Var 0x1240445f8 'tok' 'struct tok_state *'     | `-IntegerLiteral 0x1230b82b8 <col:19> 'int' 0     |-BinaryOperator 0x1230b83d0 <line:13:5, col:24> '<dependent type>' contains-errors '='     | |-ArraySubscriptExpr 0x1230b8390 <col:5, col:20> '<dependent type>' contains-errors lvalue     | | |-ImplicitCastExpr 0x1230b8378 <col:5, col:10> '<dependent type>' contains-errors <LValueToRValue>     | | | `-RecoveryExpr 0x1230b8330 <col:5, col:10> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x1230b82f8 <col:5> 'struct tok_state *' lvalue Var 0x1240445f8 'tok' 'struct tok_state *'     | | `-IntegerLiteral 0x1230b8358 <col:19> 'int' 0     | `-IntegerLiteral 0x1230b83b0 <col:24> 'int' 0     |-BinaryOperator 0x1230b8470 <line:15:5, col:18> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1230b8428 <col:5, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1230b83f0 <col:5> 'struct tok_state *' lvalue Var 0x1240445f8 'tok' 'struct tok_state *'     | `-IntegerLiteral 0x1230b8450 <col:18> 'int' 1     |-BinaryOperator 0x1230b8510 <line:16:5, col:19> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1230b84c8 <col:5, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1230b8490 <col:5> 'struct tok_state *' lvalue Var 0x1240445f8 'tok' 'struct tok_state *'     | `-IntegerLiteral 0x1230b84f0 <col:19> 'int' 0     |-BinaryOperator 0x1230b8670 <line:18:5, col:19> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1230b8628 <col:5, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1230b85f0 <col:5> 'struct tok_state *' lvalue Var 0x1240445f8 'tok' 'struct tok_state *'     | `-IntegerLiteral 0x1230b8650 <col:19> 'int' 0     |-BinaryOperator 0x1230b8710 <line:19:5, col:18> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1230b86c8 <col:5, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1230b8690 <col:5> 'struct tok_state *' lvalue Var 0x1240445f8 'tok' 'struct tok_state *'     | `-IntegerLiteral 0x1230b86f0 <col:18> 'int' 0     |-BinaryOperator 0x12383f820 <line:20:5, col:27> '<dependent type>' contains-errors '='     | |-ArraySubscriptExpr 0x1230b87c8 <col:5, col:23> '<dependent type>' contains-errors lvalue     | | |-ImplicitCastExpr 0x1230b87b0 <col:5, col:10> '<dependent type>' contains-errors <LValueToRValue>     | | | `-RecoveryExpr 0x1230b8768 <col:5, col:10> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x1230b8730 <col:5> 'struct tok_state *' lvalue Var 0x1240445f8 'tok' 'struct tok_state *'     | | `-IntegerLiteral 0x1230b8790 <col:22> 'int' 0     | `-IntegerLiteral 0x12383f800 <col:27> 'int' 0     |-BinaryOperator 0x12383f920 <line:22:5, col:27> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12383f8d8 <col:5, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12383f8a0 <col:5> 'struct tok_state *' lvalue Var 0x1240445f8 'tok' 'struct tok_state *'     | `-IntegerLiteral 0x12383f900 <col:27> 'int' 0     |-BinaryOperator 0x12383f9c0 <line:23:5, col:29> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12383f978 <col:5, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12383f940 <col:5> 'struct tok_state *' lvalue Var 0x1240445f8 'tok' 'struct tok_state *'     | `-IntegerLiteral 0x12383f9a0 <col:29> 'int' 0     |-BinaryOperator 0x12383fb20 <line:26:5, col:22> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12383fad8 <col:5, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12383faa0 <col:5> 'struct tok_state *' lvalue Var 0x1240445f8 'tok' 'struct tok_state *'     | `-IntegerLiteral 0x12383fb00 <col:22> 'int' 0     `-ReturnStmt 0x12383fcb0 <line:33:5, col:12>       `-ImplicitCastExpr 0x12383fc98 <col:12> 'int' <PointerToIntegral>         `-ImplicitCastExpr 0x12383fc80 <col:12> 'struct tok_state *' <LValueToRValue>           `-DeclRefExpr 0x12383fc60 <col:12> 'struct tok_state *' lvalue Var 0x1240445f8 'tok' 'struct tok_state *' ","19660":"`-FunctionDecl 0x120141d00  col:9 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x120141e00 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x120141e68 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x120141da8 <<invalid sloc>> Implicit 887 ","19929":"`-FunctionDecl 0x135928700  line:1:13 daemon_usage 'void (enum logcode)' static   |-ParmVarDecl 0x1359285f8 <col:26, col:39> col:39 invalid F 'enum logcode'   `-CompoundStmt 0x1359416e0 <line:2:1, line:24:1>     |-CallExpr 0x135940b70 <line:3:3, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x135940b30 <col:3> 'int ()' Function 0x135940a78 'print_rsync_version' 'int ()'     | `-RecoveryExpr 0x135940b50 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x135940d20 <line:5:3, col:18> '<dependent type>' contains-errors     | |-DeclRefExpr 0x135940c78 <col:3> 'int ()' Function 0x135940bc0 'rprintf' 'int ()'     | |-RecoveryExpr 0x135940c98 <col:11> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x135940d00 <col:13> 'char[4]' lvalue \"STR\"     |-CallExpr 0x135940db0 <line:6:3, col:18> '<dependent type>' contains-errors     | |-DeclRefExpr 0x135940d50 <col:3> 'int ()' Function 0x135940bc0 'rprintf' 'int ()'     | |-RecoveryExpr 0x135940d70 <col:11> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x135940d90 <col:13> 'char[4]' lvalue \"STR\"     |-CallExpr 0x135940e40 <line:7:3, col:18> '<dependent type>' contains-errors     | |-DeclRefExpr 0x135940de0 <col:3> 'int ()' Function 0x135940bc0 'rprintf' 'int ()'     | |-RecoveryExpr 0x135940e00 <col:11> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x135940e20 <col:13> 'char[4]' lvalue \"STR\"     |-CallExpr 0x135940ed0 <line:8:3, col:18> '<dependent type>' contains-errors     | |-DeclRefExpr 0x135940e70 <col:3> 'int ()' Function 0x135940bc0 'rprintf' 'int ()'     | |-RecoveryExpr 0x135940e90 <col:11> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x135940eb0 <col:13> 'char[4]' lvalue \"STR\"     |-CallExpr 0x135940f60 <line:9:3, col:18> '<dependent type>' contains-errors     | |-DeclRefExpr 0x135940f00 <col:3> 'int ()' Function 0x135940bc0 'rprintf' 'int ()'     | |-RecoveryExpr 0x135940f20 <col:11> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x135940f40 <col:13> 'char[4]' lvalue \"STR\"     |-CallExpr 0x135940ff0 <line:10:3, col:18> '<dependent type>' contains-errors     | |-DeclRefExpr 0x135940f90 <col:3> 'int ()' Function 0x135940bc0 'rprintf' 'int ()'     | |-RecoveryExpr 0x135940fb0 <col:11> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x135940fd0 <col:13> 'char[4]' lvalue \"STR\"     |-CallExpr 0x135941080 <line:11:3, col:18> '<dependent type>' contains-errors     | |-DeclRefExpr 0x135941020 <col:3> 'int ()' Function 0x135940bc0 'rprintf' 'int ()'     | |-RecoveryExpr 0x135941040 <col:11> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x135941060 <col:13> 'char[4]' lvalue \"STR\"     |-CallExpr 0x135941110 <line:12:3, col:18> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1359410b0 <col:3> 'int ()' Function 0x135940bc0 'rprintf' 'int ()'     | |-RecoveryExpr 0x1359410d0 <col:11> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x1359410f0 <col:13> 'char[4]' lvalue \"STR\"     |-CallExpr 0x1359411a0 <line:13:3, col:18> '<dependent type>' contains-errors     | |-DeclRefExpr 0x135941140 <col:3> 'int ()' Function 0x135940bc0 'rprintf' 'int ()'     | |-RecoveryExpr 0x135941160 <col:11> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x135941180 <col:13> 'char[4]' lvalue \"STR\"     |-CallExpr 0x135941230 <line:14:3, col:18> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1359411d0 <col:3> 'int ()' Function 0x135940bc0 'rprintf' 'int ()'     | |-RecoveryExpr 0x1359411f0 <col:11> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x135941210 <col:13> 'char[4]' lvalue \"STR\"     |-CallExpr 0x1359412c0 <line:15:3, col:18> '<dependent type>' contains-errors     | |-DeclRefExpr 0x135941260 <col:3> 'int ()' Function 0x135940bc0 'rprintf' 'int ()'     | |-RecoveryExpr 0x135941280 <col:11> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x1359412a0 <col:13> 'char[4]' lvalue \"STR\"     |-CallExpr 0x135941350 <line:16:3, col:18> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1359412f0 <col:3> 'int ()' Function 0x135940bc0 'rprintf' 'int ()'     | |-RecoveryExpr 0x135941310 <col:11> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x135941330 <col:13> 'char[4]' lvalue \"STR\"     |-CallExpr 0x1359413e0 <line:17:3, col:18> '<dependent type>' contains-errors     | |-DeclRefExpr 0x135941380 <col:3> 'int ()' Function 0x135940bc0 'rprintf' 'int ()'     | |-RecoveryExpr 0x1359413a0 <col:11> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x1359413c0 <col:13> 'char[4]' lvalue \"STR\"     |-CallExpr 0x135941470 <line:18:3, col:18> '<dependent type>' contains-errors     | |-DeclRefExpr 0x135941410 <col:3> 'int ()' Function 0x135940bc0 'rprintf' 'int ()'     | |-RecoveryExpr 0x135941430 <col:11> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x135941450 <col:13> 'char[4]' lvalue \"STR\"     |-CallExpr 0x135941500 <line:19:3, col:18> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1359414a0 <col:3> 'int ()' Function 0x135940bc0 'rprintf' 'int ()'     | |-RecoveryExpr 0x1359414c0 <col:11> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x1359414e0 <col:13> 'char[4]' lvalue \"STR\"     |-CallExpr 0x135941590 <line:21:3, col:18> '<dependent type>' contains-errors     | |-DeclRefExpr 0x135941530 <col:3> 'int ()' Function 0x135940bc0 'rprintf' 'int ()'     | |-RecoveryExpr 0x135941550 <col:11> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x135941570 <col:13> 'char[4]' lvalue \"STR\"     |-CallExpr 0x135941620 <line:22:3, col:18> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1359415c0 <col:3> 'int ()' Function 0x135940bc0 'rprintf' 'int ()'     | |-RecoveryExpr 0x1359415e0 <col:11> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x135941600 <col:13> 'char[4]' lvalue \"STR\"     `-CallExpr 0x1359416b0 <line:23:3, col:18> '<dependent type>' contains-errors       |-DeclRefExpr 0x135941650 <col:3> 'int ()' Function 0x135940bc0 'rprintf' 'int ()'       |-RecoveryExpr 0x135941670 <col:11> '<dependent type>' contains-errors lvalue       `-StringLiteral 0x135941690 <col:13> 'char[4]' lvalue \"STR\" ","19824":"`-FunctionDecl 0x12e80de88  line:1:13 invalid bitset_get 'int (const unsigned long *, unsigned int)' static   |-ParmVarDecl 0x12e80dd28 <col:24, col:45> col:45 used bits 'const unsigned long *'   |-ParmVarDecl 0x12e80dda8 <col:51, col:60> col:60 used i 'unsigned int'   `-CompoundStmt 0x12e80e030 <col:63, line:3:1> ","19961":"`-FunctionDecl 0x122115df0  col:34 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x122115ef0 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x122115e98 <<invalid sloc>> Implicit 902 ","19372":"`-FunctionDecl 0x1479281c8  line:1:6 invalid do_find_state 'int (int)'   |-ParmVarDecl 0x1479280f0 <col:20, <invalid sloc>> col:26 invalid 'int'   `-CompoundStmt 0x150009220 <line:2:1, line:40:1>     |-IfStmt 0x1479284b0 <line:7:5, line:11:5>     | |-BinaryOperator 0x147928438 <line:7:9, col:27> 'int' contains-errors '=='     | | |-CallExpr 0x147928418 <col:9, col:22> '<dependent type>' contains-errors     | | | `-CXXDependentScopeMemberExpr 0x1479283d0 <col:9, col:17> '<dependent type>' contains-errors lvalue .size     | | |   `-RecoveryExpr 0x1479283b0 <col:9> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x147928370 <col:27> 'int' 0     | `-CompoundStmt 0x1479284a0 <col:30, line:11:5>     |-DeclStmt 0x147928710 <line:21:5, col:41>     | `-VarDecl 0x147928530 <col:5, col:20> col:20 invalid hash 'const int'     `-IfStmt 0x1479287d8 <line:30:5, line:34:5>       |-RecoveryExpr 0x147928768 <line:30:9, col:10> '_Bool' contains-errors       `-CompoundStmt 0x1479287c8 <col:18, line:34:5> ","19083":"`-FunctionDecl 0x13e142748  col:9 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x13e143058 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x13e1430c0 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x13e143128 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x13e143000 <<invalid sloc>> Implicit 900 ","19745":"`-FunctionDecl 0x15000e228  line:1:8 invalid gf_isom_enum_sample_group 'int (int *, int, int, int *, int *, int *, const int **, int *)'   |-ParmVarDecl 0x15000dd28 <col:34, col:46> col:46 invalid the_file 'int *'   |-ParmVarDecl 0x15000dda8 <col:56, col:60> col:60 invalid trackNumber 'int'   |-ParmVarDecl 0x15000de28 <col:73, col:77> col:77 referenced invalid sample_number 'int'   |-ParmVarDecl 0x15000dea8 <col:92, col:97> col:97 invalid sgrp_idx 'int *'   |-ParmVarDecl 0x15000df28 <col:107, col:112> col:112 invalid sgrp_type 'int *'   |-ParmVarDecl 0x15000dfa8 <col:123, col:128> col:128 invalid sgrp_parameter 'int *'   |-ParmVarDecl 0x15000e060 <col:144, col:155> col:155 invalid sgrp_data 'const int **'   |-ParmVarDecl 0x15000e0e0 <col:166, col:171> col:171 invalid sgrp_size 'int *'   `-CompoundStmt 0x147924520 <line:2:1, line:79:1>     |-IfStmt 0x147923230 <line:6:2, col:38>     | |-BinaryOperator 0x15000e3c8 <col:6, col:20> 'int' contains-errors '||'     | | |-UnaryOperator 0x15000e360 <col:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x15000e348 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-RecoveryExpr 0x15000e328 <col:7> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x15000e3b0 <col:19, col:20> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x15000e398 <col:20> '<dependent type>' contains-errors <LValueToRValue>     | |     `-RecoveryExpr 0x15000e378 <col:20> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x147923220 <col:31, col:38>     |   `-RecoveryExpr 0x147923200 <col:38> '<dependent type>' contains-errors lvalue     |-IfStmt 0x147923300 <line:7:2, col:40>     | |-RecoveryExpr 0x147923250 <col:6> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x1479232e0 <col:22, col:40> '<dependent type>' contains-errors '='     |   |-UnaryOperator 0x1479232a8 <col:22, col:23> '<dependent type>' contains-errors prefix '*' cannot overflow     |   | `-ImplicitCastExpr 0x147923290 <col:23> '<dependent type>' contains-errors <LValueToRValue>     |   |   `-RecoveryExpr 0x147923270 <col:23> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x1479232c0 <col:40> 'int' 0     |-IfStmt 0x147923468 <line:8:2, col:30>     | |-RecoveryExpr 0x147923320 <col:6> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x147923448 <col:17, col:30> '<dependent type>' contains-errors '='     |   |-UnaryOperator 0x147923410 <col:17, col:18> '<dependent type>' contains-errors prefix '*' cannot overflow     |   | `-ImplicitCastExpr 0x1479233f8 <col:18> '<dependent type>' contains-errors <LValueToRValue>     |   |   `-RecoveryExpr 0x147923340 <col:18> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x147923428 <col:30> '<dependent type>' contains-errors lvalue     |-IfStmt 0x147923538 <line:9:2, col:30>     | |-RecoveryExpr 0x147923488 <col:6> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x147923518 <col:17, col:30> '<dependent type>' contains-errors '='     |   |-UnaryOperator 0x1479234e0 <col:17, col:18> '<dependent type>' contains-errors prefix '*' cannot overflow     |   | `-ImplicitCastExpr 0x1479234c8 <col:18> '<dependent type>' contains-errors <LValueToRValue>     |   |   `-RecoveryExpr 0x1479234a8 <col:18> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x1479234f8 <col:30> 'int' 0     |-BinaryOperator 0x1479235c8 <line:10:2, col:15> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x147923590 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x147923578 <col:3> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x147923558 <col:3> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x1479235a8 <col:15> 'int' 0     |-IfStmt 0x1479238b0 <line:13:2, col:20>     | |-UnaryOperator 0x147923850 <col:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x147923838 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x147923818 <col:7> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1479238a0 <col:13, col:20>     |   `-RecoveryExpr 0x147923880 <col:20> '<dependent type>' contains-errors lvalue     `-IfStmt 0x147923bf0 <line:14:2, col:67>       |-UnaryOperator 0x147923b90 <col:6, col:46> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-ImplicitCastExpr 0x147923b78 <col:7, col:46> '<dependent type>' contains-errors <LValueToRValue>       |   `-CXXDependentScopeMemberExpr 0x147923b30 <col:7, col:46> '<dependent type>' contains-errors lvalue ->sampleGroups       |     `-CXXDependentScopeMemberExpr 0x147923ae8 <col:7, col:33> '<dependent type>' contains-errors lvalue ->sampleTable       |       `-CXXDependentScopeMemberExpr 0x147923aa0 <col:7, col:20> '<dependent type>' contains-errors lvalue ->information       |         `-CXXDependentScopeMemberExpr 0x147923a58 <col:7, col:13> '<dependent type>' contains-errors lvalue ->Media       |           `-RecoveryExpr 0x147923a38 <col:7> '<dependent type>' contains-errors lvalue       `-ReturnStmt 0x147923be0 <col:60, col:67>         `-RecoveryExpr 0x147923bc0 <col:67> '<dependent type>' contains-errors lvalue ","19881":"`-FunctionDecl 0x147861878  line:1:13 invalid fb_do_apertures_overlap 'int (struct apertures_struct *, struct apertures_struct *)' static   |-ParmVarDecl 0x1578aca68 <col:37, col:62> col:62 used gena 'struct apertures_struct *'   |-ParmVarDecl 0x1578acb58 <line:2:9, col:34> col:34 used hwa 'struct apertures_struct *'   `-CompoundStmt 0x1478632e8 <line:3:1, line:23:1>     |-DeclStmt 0x147861a48 <line:4:2, col:10>     | |-VarDecl 0x147861948 <col:2, col:6> col:6 used i 'int'     | `-VarDecl 0x1478619c8 <col:2, col:9> col:9 used j 'int'     `-ForStmt 0x147863298 <line:8:2, line:20:2>       |-BinaryOperator 0x147861b78 <line:8:7, col:11> 'int' '='       | |-DeclRefExpr 0x147861b38 <col:7> 'int' lvalue Var 0x147861948 'i' 'int'       | `-IntegerLiteral 0x147861b58 <col:11> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x147861c18 <col:14, col:23> 'int' contains-errors '<'       | |-DeclRefExpr 0x147861b98 <col:14> 'int' lvalue Var 0x147861948 'i' 'int'       | `-RecoveryExpr 0x147861bf0 <col:18, col:23> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x147861bb8 <col:18> 'struct apertures_struct *' lvalue ParmVar 0x1578acb58 'hwa' 'struct apertures_struct *'       |-UnaryOperator 0x147861c58 <col:30, col:32> 'int' prefix '++'       | `-DeclRefExpr 0x147861c38 <col:32> 'int' lvalue Var 0x147861948 'i' 'int'       `-CompoundStmt 0x147863278 <col:35, line:20:2>         |-DeclStmt 0x147862010 <line:9:3, col:39>         | |-RecordDecl 0x147861c70 <col:3, col:10> col:10 struct aperture         | `-VarDecl 0x147861dd8 <col:3, col:38> col:20 used h 'struct aperture *' cinit         |   `-UnaryOperator 0x147861fe0 <col:24, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow         |     `-ArraySubscriptExpr 0x147861fc0 <col:25, col:38> '<dependent type>' contains-errors lvalue         |       |-ImplicitCastExpr 0x147861f90 <col:25, col:30> '<dependent type>' contains-errors <LValueToRValue>         |       | `-RecoveryExpr 0x147861e78 <col:25, col:30> '<dependent type>' contains-errors lvalue         |       |   `-DeclRefExpr 0x147861e40 <col:25> 'struct apertures_struct *' lvalue ParmVar 0x1578acb58 'hwa' 'struct apertures_struct *'         |       `-ImplicitCastExpr 0x147861fa8 <col:37> 'int' <LValueToRValue>         |         `-DeclRefExpr 0x147861ea0 <col:37> 'int' lvalue Var 0x147861948 'i' 'int'         `-ForStmt 0x147863240 <line:10:3, line:19:3>           |-BinaryOperator 0x147862068 <line:10:8, col:12> 'int' '='           | |-DeclRefExpr 0x147862028 <col:8> 'int' lvalue Var 0x1478619c8 'j' 'int'           | `-IntegerLiteral 0x147862048 <col:12> 'int' 0           |-<<<NULL>>>           |-BinaryOperator 0x147862108 <col:15, col:25> 'int' contains-errors '<'           | |-DeclRefExpr 0x147862088 <col:15> 'int' lvalue Var 0x1478619c8 'j' 'int'           | `-RecoveryExpr 0x1478620e0 <col:19, col:25> '<dependent type>' contains-errors lvalue           |   `-DeclRefExpr 0x1478620a8 <col:19> 'struct apertures_struct *' lvalue ParmVar 0x1578aca68 'gena' 'struct apertures_struct *'           |-UnaryOperator 0x147862148 <col:32, col:34> 'int' prefix '++'           | `-DeclRefExpr 0x147862128 <col:34> 'int' lvalue Var 0x1478619c8 'j' 'int'           `-CompoundStmt 0x147863220 <col:37, line:19:3>             |-DeclStmt 0x147862408 <line:11:4, col:41>             | `-VarDecl 0x1478621e8 <col:4, col:40> col:21 used g 'struct aperture *' cinit             |   `-UnaryOperator 0x1478623f0 <col:25, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow             |     `-ArraySubscriptExpr 0x1478623d0 <col:26, col:40> '<dependent type>' contains-errors lvalue             |       |-ImplicitCastExpr 0x1478623a0 <col:26, col:32> '<dependent type>' contains-errors <LValueToRValue>             |       | `-RecoveryExpr 0x147862288 <col:26, col:32> '<dependent type>' contains-errors lvalue             |       |   `-DeclRefExpr 0x147862250 <col:26> 'struct apertures_struct *' lvalue ParmVar 0x1578aca68 'gena' 'struct apertures_struct *'             |       `-ImplicitCastExpr 0x1478623b8 <col:39> 'int' <LValueToRValue>             |         `-DeclRefExpr 0x1478622b0 <col:39> 'int' lvalue Var 0x1478619c8 'j' 'int'             `-IfStmt 0x147863200 <line:17:4, line:18:12>               |-CallExpr 0x147862748 <line:17:8, col:30> 'int' contains-errors               | |-ImplicitCastExpr 0x147862730 <col:8> 'int (*)()' <FunctionToPointerDecay>               | | `-DeclRefExpr 0x147862698 <col:8> 'int ()' Function 0x1478625e0 'apertures_overlap' 'int ()'               | |-ImplicitCastExpr 0x147862778 <col:26> 'struct aperture *' contains-errors <LValueToRValue>               | | `-DeclRefExpr 0x1478626b8 <col:26> 'struct aperture *' contains-errors lvalue Var 0x1478621e8 'g' 'struct aperture *'               | `-ImplicitCastExpr 0x147862790 <col:29> 'struct aperture *' contains-errors <LValueToRValue>               |   `-DeclRefExpr 0x1478626d8 <col:29> 'struct aperture *' contains-errors lvalue Var 0x147861dd8 'h' 'struct aperture *'               `-ReturnStmt 0x1478627e0 <line:18:5, col:12>                 `-RecoveryExpr 0x1478627c0 <col:12> '<dependent type>' contains-errors lvalue ","19954":"`-FunctionDecl 0x154945ac0  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x154945bc0 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x154945c28 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x154945c90 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x154945b68 <<invalid sloc>> Implicit 900 ","19104":"`-FunctionDecl 0x145128758  line:1:12 treo_attach 'int (struct usb_serial *)' static   |-ParmVarDecl 0x145128648 <col:24, col:43> col:43 used serial 'struct usb_serial *'   `-CompoundStmt 0x145143538 <line:2:1, line:43:1>     |-DeclStmt 0x145140c38 <line:3:2, col:35>     | |-RecordDecl 0x145140a50 <col:2, col:9> col:9 struct usb_serial_port     | `-VarDecl 0x145140bb8 <col:2, col:26> col:26 used swap_port 'struct usb_serial_port *'     |-IfStmt 0x145141170 <line:6:2, line:11:10>     | |-RecoveryExpr 0x145141120 <line:6:6, line:10:33> '_Bool' contains-errors     | `-ReturnStmt 0x145141160 <line:11:3, col:10>     |   `-IntegerLiteral 0x145141140 <col:10> 'int' 0     |-DoStmt 0x145141858 <line:15:2, line:32:12>     | |-CompoundStmt 0x145141818 <line:15:5, line:32:2>     | | |-DeclStmt 0x145141210 <line:16:3, col:8>     | | | `-VarDecl 0x1451411a8 <col:3, col:7> col:7 used i 'int'     | | `-ForStmt 0x1451416c0 <line:18:3, line:22:3>     | |   |-BinaryOperator 0x145141268 <line:18:8, col:12> 'int' '='     | |   | |-DeclRefExpr 0x145141228 <col:8> 'int' lvalue Var 0x1451411a8 'i' 'int'     | |   | `-IntegerLiteral 0x145141248 <col:12> 'int' 0     | |   |-<<<NULL>>>     | |   |-BinaryOperator 0x1451414e0 <col:15, col:44> 'int' contains-errors '<'     | |   | |-DeclRefExpr 0x145141288 <col:15> 'int' lvalue Var 0x1451411a8 'i' 'int'     | |   | `-CallExpr 0x1451414b8 <col:19, col:44> '<dependent type>' contains-errors     | |   |   |-DeclRefExpr 0x145141388 <col:19> 'int ()' Function 0x1451412d0 'ARRAY_SIZE' 'int ()'     | |   |   `-CXXDependentScopeMemberExpr 0x145141470 <col:30, col:35> '<dependent type>' contains-errors lvalue ->read_urbs     | |   |     `-RecoveryExpr 0x145141450 <col:30> '<dependent type>' contains-errors lvalue     | |   |-UnaryOperator 0x145141520 <col:47, col:49> 'int' prefix '++'     | |   | `-DeclRefExpr 0x145141500 <col:49> 'int' lvalue Var 0x1451411a8 'i' 'int'     | |   `-CompoundStmt 0x1451416b0 <col:52, line:22:3>     | `-IntegerLiteral 0x145141838 <line:32:11> 'int' 0     |-CallExpr 0x145143048 <line:37:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x145142f50 <col:2> 'int ()' Function 0x145142e98 'COPY_PORT' 'int ()'     | |-DeclRefExpr 0x145142f70 <col:12> 'struct usb_serial_port *' lvalue Var 0x145140bb8 'swap_port' 'struct usb_serial_port *'     | `-ArraySubscriptExpr 0x145143028 <col:23, col:37> '<dependent type>' contains-errors lvalue     |   |-ImplicitCastExpr 0x145143010 <col:23, col:31> '<dependent type>' contains-errors <LValueToRValue>     |   | `-RecoveryExpr 0x145142fc8 <col:23, col:31> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x145142f90 <col:23> 'struct usb_serial *' lvalue ParmVar 0x145128648 'serial' 'struct usb_serial *'     |   `-IntegerLiteral 0x145142ff0 <col:36> 'int' 0     |-CallExpr 0x145143208 <line:38:2, col:44> '<dependent type>' contains-errors     | |-DeclRefExpr 0x145143078 <col:2> 'int ()' Function 0x145142e98 'COPY_PORT' 'int ()'     | |-ArraySubscriptExpr 0x145143130 <col:12, col:26> '<dependent type>' contains-errors lvalue     | | |-ImplicitCastExpr 0x145143118 <col:12, col:20> '<dependent type>' contains-errors <LValueToRValue>     | | | `-RecoveryExpr 0x1451430d0 <col:12, col:20> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x145143098 <col:12> 'struct usb_serial *' lvalue ParmVar 0x145128648 'serial' 'struct usb_serial *'     | | `-IntegerLiteral 0x1451430f8 <col:25> 'int' 0     | `-ArraySubscriptExpr 0x1451431e8 <col:29, col:43> '<dependent type>' contains-errors lvalue     |   |-ImplicitCastExpr 0x1451431d0 <col:29, col:37> '<dependent type>' contains-errors <LValueToRValue>     |   | `-RecoveryExpr 0x145143188 <col:29, col:37> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x145143150 <col:29> 'struct usb_serial *' lvalue ParmVar 0x145128648 'serial' 'struct usb_serial *'     |   `-IntegerLiteral 0x1451431b0 <col:42> 'int' 1     |-CallExpr 0x145143330 <line:39:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x145143238 <col:2> 'int ()' Function 0x145142e98 'COPY_PORT' 'int ()'     | |-ArraySubscriptExpr 0x1451432f0 <col:12, col:26> '<dependent type>' contains-errors lvalue     | | |-ImplicitCastExpr 0x1451432d8 <col:12, col:20> '<dependent type>' contains-errors <LValueToRValue>     | | | `-RecoveryExpr 0x145143290 <col:12, col:20> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x145143258 <col:12> 'struct usb_serial *' lvalue ParmVar 0x145128648 'serial' 'struct usb_serial *'     | | `-IntegerLiteral 0x1451432b8 <col:25> 'int' 1     | `-DeclRefExpr 0x145143310 <col:29> 'struct usb_serial_port *' lvalue Var 0x145140bb8 'swap_port' 'struct usb_serial_port *'     |-CallExpr 0x1451434c8 <line:40:2, col:17> 'int'     | |-ImplicitCastExpr 0x1451434b0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x145143440 <col:2> 'int ()' Function 0x145143388 'kfree' 'int ()'     | `-ImplicitCastExpr 0x1451434f0 <col:8> 'struct usb_serial_port *' <LValueToRValue>     |   `-DeclRefExpr 0x145143460 <col:8> 'struct usb_serial_port *' lvalue Var 0x145140bb8 'swap_port' 'struct usb_serial_port *'     `-ReturnStmt 0x145143528 <line:42:2, col:9>       `-IntegerLiteral 0x145143508 <col:9> 'int' 0 ","20044":"`-FunctionDecl 0x154942568  col:5 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x154942668 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x1549426d0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x154942738 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x154942610 <<invalid sloc>> Implicit 882 ","19818":"`-FunctionDecl 0x144104500  col:5 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x14411c800 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x14411c868 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x14411c8d0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1441045a8 <<invalid sloc>> Implicit 900 ","19804":"`-FunctionDecl 0x1511283a8  line:2:16 invalid js_file_getc 'int (int *, int, int, int *)' static   |-ParmVarDecl 0x151128128 <col:29, col:40> col:40 invalid ctx 'int *'   |-ParmVarDecl 0x1511281a8 <col:45, col:58> col:58 invalid this_val 'int'   |-ParmVarDecl 0x151128228 <col:68, col:72> col:72 argc 'int'   |-ParmVarDecl 0x1511282a8 <col:78, col:92> col:92 invalid argv 'int *'   `-CompoundStmt 0x151809ea8 <line:3:1, line:10:32>     |-DeclStmt 0x151128578 <line:4:2, col:13>     | `-VarDecl 0x151128510 <col:2, col:12> col:7 used res 'char[2]'     |-IfStmt 0x151809988 <line:6:2, col:36>     | |-UnaryOperator 0x151809818 <col:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x151809800 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x1511287d0 <col:7> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x151809978 <col:10, col:36>     |   `-CallExpr 0x151809950 <col:17, col:36> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x151809910 <col:17> 'int ()' Function 0x151809858 'GF_JS_EXCEPTION' 'int ()'     |     `-RecoveryExpr 0x151809930 <col:33> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x151809c38 <line:8:2, col:21> 'char' contains-errors '='     | |-ArraySubscriptExpr 0x151809bd0 <col:2, col:7> 'char' lvalue     | | |-ImplicitCastExpr 0x151809bb8 <col:2> 'char *' <ArrayToPointerDecay>     | | | `-DeclRefExpr 0x1518099a8 <col:2> 'char[2]' lvalue Var 0x151128510 'res' 'char[2]'     | | `-IntegerLiteral 0x1518099c8 <col:6> 'int' 0     | `-CallExpr 0x151809c10 <col:11, col:21> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x151809b00 <col:11> 'int ()' Function 0x151809a48 'gf_fgetc' 'int ()'     |   `-RecoveryExpr 0x151809bf0 <col:20> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x151809d08 <line:9:2, col:11> 'char' '='     | |-ArraySubscriptExpr 0x151809cb0 <col:2, col:7> 'char' lvalue     | | |-ImplicitCastExpr 0x151809c98 <col:2> 'char *' <ArrayToPointerDecay>     | | | `-DeclRefExpr 0x151809c58 <col:2> 'char[2]' lvalue Var 0x151128510 'res' 'char[2]'     | | `-IntegerLiteral 0x151809c78 <col:6> 'int' 1     | `-ImplicitCastExpr 0x151809cf0 <col:11> 'char' <IntegralCast>     |   `-IntegerLiteral 0x151809cd0 <col:11> 'int' 0     `-ReturnStmt 0x151809e98 <line:10:2, col:30>       `-CallExpr 0x151809e68 <col:9, col:30> '<dependent type>' contains-errors         |-DeclRefExpr 0x151809e08 <col:9> 'int ()' Function 0x151809d50 'JS_NewString' 'int ()'         |-RecoveryExpr 0x151809e28 <col:22> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x151809e48 <col:27> 'char[2]' lvalue Var 0x151128510 'res' 'char[2]' ","19215":"`-FunctionDecl 0x13480de88  line:1:12 invalid write_entries 'int (int *, int *)' static   |-ParmVarDecl 0x13480dd28 <col:26, col:37> col:37 invalid index 'int *'   |-ParmVarDecl 0x13480dda8 <col:44, col:57> col:57 invalid file 'int *'   `-CompoundStmt 0x134123798 <line:2:1, line:32:1>     |-DeclStmt 0x13480dfe0 <line:3:2, col:15>     | `-VarDecl 0x13480df58 <col:2, col:14> col:6 used error 'int' cinit     |   `-IntegerLiteral 0x13480dfc0 <col:14> 'int' 0     |-UnaryExprOrTypeTraitExpr 0x13480e050 <line:4:2, col:9> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x13480e030 <col:9> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x13480e140 <line:7:2, col:25>     | `-VarDecl 0x13480e0a0 <col:2, col:21> col:14 used last 'const char *' cinit     |   `-RecoveryExpr 0x13480e120 <col:21> '<dependent type>' contains-errors lvalue     |-IfStmt 0x134122f78 <line:10:2, line:16:2> has_else     | |-CXXDependentScopeMemberExpr 0x13480e178 <line:10:6, col:13> '<dependent type>' contains-errors lvalue ->ignore_case     | | `-RecoveryExpr 0x13480e158 <col:6> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x134122ec8 <col:26, line:14:2>     | | |-CallExpr 0x134122ca8 <line:11:3, col:68> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x13480e320 <col:3> 'int ()' Function 0x13480e268 'git_vector_dup' 'int ()'     | | | |-UnaryOperator 0x134122c70 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | | `-RecoveryExpr 0x134122c50 <col:19> '<dependent type>' contains-errors lvalue     | | | |-UnaryOperator 0x13480e3d8 <col:32, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | | `-CXXDependentScopeMemberExpr 0x13480e390 <col:33, col:40> '<dependent type>' contains-errors lvalue ->entries     | | | |   `-RecoveryExpr 0x13480e370 <col:33> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x134122c88 <col:49> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x134122e70 <line:12:3, col:31> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x134122dc0 <col:3> 'int ()' Function 0x134122d08 'git_vector_sort' 'int ()'     | |   `-UnaryOperator 0x134122e58 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-RecoveryExpr 0x134122e38 <col:20> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x134122f68 <line:14:9, line:16:2>     |-IfStmt 0x134123158 <line:18:2, line:19:10>     | |-BinaryOperator 0x134123068 <line:18:6, col:24> 'int' contains-errors '>='     | | |-CXXDependentScopeMemberExpr 0x134122fc8 <col:6, col:13> '<dependent type>' contains-errors lvalue ->version     | | | `-RecoveryExpr 0x134122fa8 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x134123048 <col:24> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x134123138 <line:19:3, col:10> 'const char *' contains-errors '='     |   |-DeclRefExpr 0x134123088 <col:3> 'const char *' contains-errors lvalue Var 0x13480e0a0 'last' 'const char *'     |   `-ImplicitCastExpr 0x134123120 <col:10> 'const char *' <NoOp>     |     `-ImplicitCastExpr 0x134123108 <col:10> 'char *' <ArrayToPointerDecay>     |       `-StringLiteral 0x1341230f0 <col:10> 'char[1]' lvalue \"\"     |-CallExpr 0x134123358 <line:21:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x134123258 <col:2> 'int ()' Function 0x1341231a0 'git_vector_foreach' 'int ()'     | |-RecoveryExpr 0x1341232f8 <col:21> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x134123318 <col:30> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x134123338 <col:33> '<dependent type>' contains-errors lvalue     |-CompoundStmt 0x1341235d8 <col:40, line:26:2>     `-ReturnStmt 0x134123788 <line:31:2, col:9>       `-ImplicitCastExpr 0x134123770 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x134123750 <col:9> 'int' lvalue Var 0x13480df58 'error' 'int' ","19688":"`-FunctionDecl 0x13f928258  line:1:1 helptags_cb 'int (char *, void *)'   |-ParmVarDecl 0x13f9280f0 <col:13, col:21> col:21 used fname 'char *'   |-ParmVarDecl 0x13f928170 <col:28, col:34> col:34 used cookie 'void *'   `-CompoundStmt 0x13f928618 <line:2:1, line:4:1>     `-CallExpr 0x13f9285b8 <line:3:5, col:38> 'int'       |-ImplicitCastExpr 0x13f9285a0 <col:5> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x13f928470 <col:5> 'int ()' Function 0x13f9283b8 'do_helptags' 'int ()'       |-ImplicitCastExpr 0x13f9285e8 <col:17> 'char *' <LValueToRValue>       | `-DeclRefExpr 0x13f928490 <col:17> 'char *' lvalue ParmVar 0x13f9280f0 'fname' 'char *'       `-ImplicitCastExpr 0x13f928600 <col:24, col:32> 'int' <LValueToRValue>         `-UnaryOperator 0x13f928558 <col:24, col:32> 'int' lvalue prefix '*' cannot overflow           `-CStyleCastExpr 0x13f928530 <col:25, col:32> 'int *' <BitCast>             `-ImplicitCastExpr 0x13f928518 <col:32> 'void *' <LValueToRValue> part_of_explicit_cast               `-DeclRefExpr 0x13f9284b0 <col:32> 'void *' lvalue ParmVar 0x13f928170 'cookie' 'void *' ","19838":"`-FunctionDecl 0x136941688  line:1:12 invalid skcipher_recvmsg 'int (struct kiocb *, struct socket *, struct msghdr *, int, int)' static   |-ParmVarDecl 0x136928e48 <col:29, col:43> col:43 unused 'struct kiocb *'   |-ParmVarDecl 0x136941228 <col:51, col:66> col:66 used sock 'struct socket *'   |-ParmVarDecl 0x1369413f8 <line:2:8, col:23> col:23 used msg 'struct msghdr *'   |-ParmVarDecl 0x136941490 <col:28, col:35> col:35 invalid ignored 'int'   |-ParmVarDecl 0x136941510 <col:44, col:48> col:48 used flags 'int'   `-CompoundStmt 0x13694b018 <line:3:1, line:83:1>     |-DeclStmt 0x1369419a8 <line:4:2, col:28>     | |-RecordDecl 0x136941758 <col:2, col:9> col:9 struct sock     | `-VarDecl 0x1369418c8 <col:2, col:26> col:15 used sk 'struct sock *' cinit     |   `-RecoveryExpr 0x136941968 <col:20, col:26> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x136941930 <col:20> 'struct socket *' lvalue ParmVar 0x136941228 'sock' 'struct socket *'     |-DeclStmt 0x136941de8 <line:5:2, col:35>     | |-RecordDecl 0x1369419c0 <col:2, col:9> col:9 struct alg_sock     | `-VarDecl 0x136941b28 <col:2, col:34> col:19 used ask 'struct alg_sock *' cinit     |   `-ImplicitCastExpr 0x136941db8 <col:25, col:34> 'struct alg_sock *' contains-errors <IntegralToPointer>     |     `-CallExpr 0x136941d78 <col:25, col:34> 'int' contains-errors     |       |-ImplicitCastExpr 0x136941d60 <col:25> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x136941cf0 <col:25> 'int ()' Function 0x136941c38 'alg_sk' 'int ()'     |       `-ImplicitCastExpr 0x136941da0 <col:32> 'struct sock *' contains-errors <LValueToRValue>     |         `-DeclRefExpr 0x136941d10 <col:32> 'struct sock *' contains-errors lvalue Var 0x1369418c8 'sk' 'struct sock *'     |-DeclStmt 0x136942048 <line:6:2, col:41>     | |-RecordDecl 0x136941e00 <col:2, col:9> col:9 struct skcipher_ctx     | `-VarDecl 0x136941f68 <col:2, col:34> col:23 used ctx 'struct skcipher_ctx *' cinit     |   `-RecoveryExpr 0x136942008 <col:29, col:34> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x136941fd0 <col:29> 'struct alg_sock *' contains-errors lvalue Var 0x136941b28 'ask' 'struct alg_sock *'     |-DeclStmt 0x1369473c8 <line:7:2, line:8:14>     | `-VarDecl 0x136942078 <line:7:2, line:8:13> line:7:11 used bs 'unsigned int' cinit     |   `-CallExpr 0x1369473a0 <col:16, line:8:13> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1369421c0 <line:7:16> 'int ()' Function 0x136942108 'crypto_ablkcipher_blocksize' 'int ()'     |     `-CallExpr 0x136947378 <col:44, line:8:12> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x1369472e0 <line:7:44> 'int ()' Function 0x136947228 'crypto_ablkcipher_reqtfm' 'int ()'     |       `-UnaryOperator 0x136947360 <line:8:3, col:9> '<dependent type>' contains-errors prefix '&' cannot overflow     |         `-RecoveryExpr 0x136947338 <col:4, col:9> '<dependent type>' contains-errors lvalue     |           `-DeclRefExpr 0x136947300 <col:4> 'struct skcipher_ctx *' contains-errors lvalue Var 0x136941f68 'ctx' 'struct skcipher_ctx *'     |-DeclStmt 0x1369475c8 <line:9:2, col:30>     | |-RecordDecl 0x1369473e0 <col:2, col:9> col:9 struct skcipher_sg_list     | `-VarDecl 0x136947548 <col:2, col:27> col:27 used sgl 'struct skcipher_sg_list *'     |-DeclStmt 0x1369477c8 <line:10:2, col:24>     | |-RecordDecl 0x1369475e0 <col:2, col:9> col:9 struct scatterlist     | `-VarDecl 0x136947748 <col:2, col:22> col:22 used sg 'struct scatterlist *'     |-DeclStmt 0x136947860 <line:11:2, col:22>     | `-VarDecl 0x1369477f8 <col:2, col:16> col:16 used iovlen 'unsigned long'     |-DeclStmt 0x136947a68 <line:12:2, col:19>     | |-RecordDecl 0x136947878 <col:2, col:9> col:9 struct iovec     | `-VarDecl 0x1369479e8 <col:2, col:16> col:16 used iov 'struct iovec *'     |-DeclStmt 0x136947b98 <line:13:2, col:19>     | `-VarDecl 0x136947a98 <col:2, col:13> col:6 used err 'int' cinit     |   `-UnaryOperator 0x136947b80 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x136947b68 <col:13> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x136947b48 <col:13> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x136947c30 <line:14:2, col:10>     | `-VarDecl 0x136947bc8 <col:2, col:6> col:6 used used 'int'     |-DeclStmt 0x136947d00 <line:15:2, col:17>     | `-VarDecl 0x136947c60 <col:2, col:16> col:7 used copied 'long' cinit     |   `-ImplicitCastExpr 0x136947ce8 <col:16> 'long' <IntegralCast>     |     `-IntegerLiteral 0x136947cc8 <col:16> 'int' 0     |-CallExpr 0x136947e50 <line:17:2, col:14> 'int' contains-errors     | |-ImplicitCastExpr 0x136947e38 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x136947df8 <col:2> 'int ()' Function 0x136947d40 'lock_sock' 'int ()'     | `-ImplicitCastExpr 0x136947e78 <col:12> 'struct sock *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x136947e18 <col:12> 'struct sock *' contains-errors lvalue Var 0x1369418c8 'sk' 'struct sock *'     |-BinaryOperator 0x136947f10 <line:18:2, col:21> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x136947ec8 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x136947e90 <col:2> 'struct msghdr *' lvalue ParmVar 0x1369413f8 'msg' 'struct msghdr *'     | `-IntegerLiteral 0x136947ef0 <col:21> 'int' 0     |-ForStmt 0x13694ab60 <line:19:2, line:74:2>     | |-BinaryOperator 0x136948070 <line:19:7, col:41> 'unsigned long' contains-errors ','     | | |-BinaryOperator 0x136947fb0 <col:7, col:18> 'struct iovec *' contains-errors '='     | | | |-DeclRefExpr 0x136947f30 <col:7> 'struct iovec *' lvalue Var 0x1369479e8 'iov' 'struct iovec *'     | | | `-RecoveryExpr 0x136947f88 <col:13, col:18> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x136947f50 <col:13> 'struct msghdr *' lvalue ParmVar 0x1369413f8 'msg' 'struct msghdr *'     | | `-BinaryOperator 0x136948050 <col:27, col:41> 'unsigned long' contains-errors '='     | |   |-DeclRefExpr 0x136947fd0 <col:27> 'unsigned long' lvalue Var 0x1369477f8 'iovlen' 'unsigned long'     | |   `-RecoveryExpr 0x136948028 <col:36, col:41> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x136947ff0 <col:36> 'struct msghdr *' lvalue ParmVar 0x1369413f8 'msg' 'struct msghdr *'     | |-<<<NULL>>>     | |-BinaryOperator 0x136948100 <col:53, col:62> 'int' '>'     | | |-ImplicitCastExpr 0x1369480d0 <col:53> 'unsigned long' <LValueToRValue>     | | | `-DeclRefExpr 0x136948090 <col:53> 'unsigned long' lvalue Var 0x1369477f8 'iovlen' 'unsigned long'     | | `-ImplicitCastExpr 0x1369480e8 <col:62> 'unsigned long' <IntegralCast>     | |   `-IntegerLiteral 0x1369480b0 <col:62> 'int' 0     | |-BinaryOperator 0x1369481a0 <line:20:7, col:20> '<dependent type>' contains-errors ','     | | |-UnaryOperator 0x136948140 <col:7, col:13> 'unsigned long' postfix '--'     | | | `-DeclRefExpr 0x136948120 <col:7> 'unsigned long' lvalue Var 0x1369477f8 'iovlen' 'unsigned long'     | | `-RecoveryExpr 0x136948178 <col:17, col:20> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x136948158 <col:17> 'struct iovec *' lvalue Var 0x1369479e8 'iov' 'struct iovec *'     | `-CompoundStmt 0x13694ab38 <col:24, line:74:2>     |   |-DeclStmt 0x136948cc8 <line:21:3, col:38>     |   | `-VarDecl 0x136948c00 <col:3, col:31> col:17 used seglen 'unsigned long' cinit     |   |   `-RecoveryExpr 0x136948ca0 <col:26, col:31> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x136948c68 <col:26> 'struct iovec *' lvalue Var 0x1369479e8 'iov' 'struct iovec *'     |   |-DeclStmt 0x136948d58 <line:22:3, col:15>     |   | `-VarDecl 0x136948cf0 <col:3, col:8> col:8 __user 'char'     |   `-WhileStmt 0x13694ab18 <line:24:3, line:73:3>     |     |-ImplicitCastExpr 0x136948d90 <line:24:10> 'unsigned long' contains-errors <LValueToRValue>     |     | `-DeclRefExpr 0x136948d70 <col:10> 'unsigned long' contains-errors lvalue Var 0x136948c00 'seglen' 'unsigned long'     |     `-CompoundStmt 0x13694aa90 <col:18, line:73:3>     |       |-BinaryOperator 0x136948fd8 <line:27:4, col:14> 'struct scatterlist *' contains-errors '='     |       | |-DeclRefExpr 0x136948f58 <col:4> 'struct scatterlist *' lvalue Var 0x136947748 'sg' 'struct scatterlist *'     |       | `-RecoveryExpr 0x136948fb0 <col:9, col:14> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x136948f78 <col:9> 'struct skcipher_sg_list *' lvalue Var 0x136947548 'sgl' 'struct skcipher_sg_list *'     |       |-WhileStmt 0x1369490e8 <line:29:4, line:30:7>     |       | |-UnaryOperator 0x136949070 <line:29:11, col:16> '<dependent type>' contains-errors prefix '!' cannot overflow     |       | | `-ImplicitCastExpr 0x136949058 <col:12, col:16> '<dependent type>' contains-errors <LValueToRValue>     |       | |   `-RecoveryExpr 0x136949030 <col:12, col:16> '<dependent type>' contains-errors lvalue     |       | |     `-DeclRefExpr 0x136948ff8 <col:12> 'struct scatterlist *' lvalue Var 0x136947748 'sg' 'struct scatterlist *'     |       | `-ImplicitCastExpr 0x1369490d0 <line:30:5, col:7> '<dependent type>' contains-errors <LValueToRValue>     |       |   `-RecoveryExpr 0x1369490a8 <col:5, col:7> '<dependent type>' contains-errors lvalue     |       |     `-DeclRefExpr 0x136949088 <col:5> 'struct scatterlist *' lvalue Var 0x136947748 'sg' 'struct scatterlist *'     |       |-BinaryOperator 0x136949188 <line:32:4, col:16> 'int' contains-errors '='     |       | |-DeclRefExpr 0x136949108 <col:4> 'int' lvalue Var 0x136947bc8 'used' 'int'     |       | `-RecoveryExpr 0x136949160 <col:11, col:16> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x136949128 <col:11> 'struct skcipher_ctx *' contains-errors lvalue Var 0x136941f68 'ctx' 'struct skcipher_ctx *'     |       |-IfStmt 0x1369494d0 <line:33:4, line:37:4>     |       | |-UnaryOperator 0x1369491e0 <line:33:8, col:9> 'int' prefix '!' cannot overflow     |       | | `-ImplicitCastExpr 0x1369491c8 <col:9> 'int' <LValueToRValue>     |       | |   `-DeclRefExpr 0x1369491a8 <col:9> 'int' lvalue Var 0x136947bc8 'used' 'int'     |       | `-CompoundStmt 0x1369494b0 <col:15, line:37:4>     |       |   |-BinaryOperator 0x1369493d0 <line:34:5, col:43> 'int' contains-errors '='     |       |   | |-DeclRefExpr 0x1369491f8 <col:5> 'int' contains-errors lvalue Var 0x136947a98 'err' 'int'     |       |   | `-CallExpr 0x136949370 <col:11, col:43> 'int' contains-errors     |       |   |   |-ImplicitCastExpr 0x136949358 <col:11> 'int (*)()' <FunctionToPointerDecay>     |       |   |   | `-DeclRefExpr 0x1369492f8 <col:11> 'int ()' Function 0x136949240 'skcipher_wait_for_data' 'int ()'     |       |   |   |-ImplicitCastExpr 0x1369493a0 <col:34> 'struct sock *' contains-errors <LValueToRValue>     |       |   |   | `-DeclRefExpr 0x136949318 <col:34> 'struct sock *' contains-errors lvalue Var 0x1369418c8 'sk' 'struct sock *'     |       |   |   `-ImplicitCastExpr 0x1369493b8 <col:38> 'int' <LValueToRValue>     |       |   |     `-DeclRefExpr 0x136949338 <col:38> 'int' lvalue ParmVar 0x136941510 'flags' 'int'     |       |   `-IfStmt 0x136949490 <line:35:5, line:36:11>     |       |     |-ImplicitCastExpr 0x136949410 <line:35:9> 'int' contains-errors <LValueToRValue>     |       |     | `-DeclRefExpr 0x1369493f0 <col:9> 'int' contains-errors lvalue Var 0x136947a98 'err' 'int'     |       |     `-GotoStmt 0x136949478 <line:36:6, col:11> 'unlock' 0x136949428     |       |-BinaryOperator 0x136949880 <line:42:4, col:10> 'int' contains-errors '='     |       | |-DeclRefExpr 0x136949828 <col:4> 'int' contains-errors lvalue Var 0x136947a98 'err' 'int'     |       | `-ImplicitCastExpr 0x136949868 <col:10> 'int' <LValueToRValue>     |       |   `-DeclRefExpr 0x136949848 <col:10> 'int' lvalue Var 0x136947bc8 'used' 'int'     |       |-IfStmt 0x136949930 <line:43:4, line:44:10>     |       | |-BinaryOperator 0x1369498f8 <line:43:8, col:14> 'int' contains-errors '<'     |       | | |-ImplicitCastExpr 0x1369498e0 <col:8> 'int' contains-errors <LValueToRValue>     |       | | | `-DeclRefExpr 0x1369498a0 <col:8> 'int' contains-errors lvalue Var 0x136947a98 'err' 'int'     |       | | `-IntegerLiteral 0x1369498c0 <col:14> 'int' 0     |       | `-GotoStmt 0x136949918 <line:44:5, col:10> 'unlock' 0x136949428     |       |-IfStmt 0x136949b68 <line:46:4, line:47:20>     |       | |-BinaryOperator 0x136949a50 <line:46:8, col:33> 'int' contains-errors '||'     |       | | |-RecoveryExpr 0x136949988 <col:8, col:13> '<dependent type>' contains-errors lvalue     |       | | | `-DeclRefExpr 0x136949950 <col:8> 'struct skcipher_ctx *' contains-errors lvalue Var 0x136941f68 'ctx' 'struct skcipher_ctx *'     |       | | `-BinaryOperator 0x136949a30 <col:21, col:33> 'int' contains-errors '<'     |       | |   |-DeclRefExpr 0x1369499b0 <col:21> 'int' lvalue Var 0x136947bc8 'used' 'int'     |       | |   `-RecoveryExpr 0x136949a08 <col:28, col:33> '<dependent type>' contains-errors lvalue     |       | |     `-DeclRefExpr 0x1369499d0 <col:28> 'struct skcipher_ctx *' contains-errors lvalue Var 0x136941f68 'ctx' 'struct skcipher_ctx *'     |       | `-CompoundAssignOperator 0x136949b38 <line:47:5, col:20> 'int' contains-errors '-=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'     |       |   |-DeclRefExpr 0x136949a70 <col:5> 'int' lvalue Var 0x136947bc8 'used' 'int'     |       |   `-BinaryOperator 0x136949b18 <col:13, col:20> 'unsigned int' contains-errors '%'     |       |     |-ImplicitCastExpr 0x136949b00 <col:13> 'unsigned int' <IntegralCast>     |       |     | `-ImplicitCastExpr 0x136949ad0 <col:13> 'int' <LValueToRValue>     |       |     |   `-DeclRefExpr 0x136949a90 <col:13> 'int' lvalue Var 0x136947bc8 'used' 'int'     |       |     `-ImplicitCastExpr 0x136949ae8 <col:20> 'unsigned int' contains-errors <LValueToRValue>     |       |       `-DeclRefExpr 0x136949ab0 <col:20> 'unsigned int' contains-errors lvalue Var 0x136942078 'bs' 'unsigned int'     |       |-IfStmt 0x136949c68 <line:50:4, line:51:10>     |       | |-UnaryOperator 0x136949be0 <line:50:8, col:9> 'int' prefix '!' cannot overflow     |       | | `-ImplicitCastExpr 0x136949bc8 <col:9> 'int' <LValueToRValue>     |       | |   `-DeclRefExpr 0x136949ba8 <col:9> 'int' lvalue Var 0x136947bc8 'used' 'int'     |       | `-GotoStmt 0x136949c50 <line:51:5, col:10> 'free' 0x136949c00     |       |-CallExpr 0x136949f48 <line:53:4, line:55:19> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x136949d68 <line:53:4> 'int ()' Function 0x136949cb0 'ablkcipher_request_set_crypt' 'int ()'     |       | |-UnaryOperator 0x136949de8 <col:33, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     |       | | `-RecoveryExpr 0x136949dc0 <col:34, col:39> '<dependent type>' contains-errors lvalue     |       | |   `-DeclRefExpr 0x136949d88 <col:34> 'struct skcipher_ctx *' contains-errors lvalue Var 0x136941f68 'ctx' 'struct skcipher_ctx *'     |       | |-DeclRefExpr 0x136949e00 <col:44> 'struct scatterlist *' lvalue Var 0x136947748 'sg' 'struct scatterlist *'     |       | |-CXXDependentScopeMemberExpr 0x136949e80 <line:54:12, col:22> '<dependent type>' contains-errors lvalue .sg     |       | | `-RecoveryExpr 0x136949e58 <col:12, col:17> '<dependent type>' contains-errors lvalue     |       | |   `-DeclRefExpr 0x136949e20 <col:12> 'struct skcipher_ctx *' contains-errors lvalue Var 0x136941f68 'ctx' 'struct skcipher_ctx *'     |       | |-DeclRefExpr 0x136949ec8 <col:26> 'int' lvalue Var 0x136947bc8 'used' 'int'     |       | `-RecoveryExpr 0x136949f20 <line:55:12, col:17> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x136949ee8 <col:12> 'struct skcipher_ctx *' contains-errors lvalue Var 0x136941f68 'ctx' 'struct skcipher_ctx *'     |       |-BinaryOperator 0x13694a528 <line:57:4, line:61:21> 'int' contains-errors '='     |       | |-DeclRefExpr 0x136949f90 <line:57:4> 'int' contains-errors lvalue Var 0x136947a98 'err' 'int'     |       | `-CallExpr 0x13694a4f8 <col:10, line:61:21> '<dependent type>' contains-errors     |       |   |-DeclRefExpr 0x13694a090 <line:57:10> 'int ()' Function 0x136949fd8 'af_alg_wait_for_completion' 'int ()'     |       |   |-ConditionalOperator 0x13694a450 <line:58:5, line:60:41> '<dependent type>' contains-errors     |       |   | |-RecoveryExpr 0x13694a0e8 <line:58:5, col:10> '<dependent type>' contains-errors lvalue     |       |   | | `-DeclRefExpr 0x13694a0b0 <col:5> 'struct skcipher_ctx *' contains-errors lvalue Var 0x136941f68 'ctx' 'struct skcipher_ctx *'     |       |   | |-CallExpr 0x13694a288 <line:59:6, col:41> '<dependent type>' contains-errors     |       |   | | |-DeclRefExpr 0x13694a1f0 <col:6> 'int ()' Function 0x13694a138 'crypto_ablkcipher_encrypt' 'int ()'     |       |   | | `-UnaryOperator 0x13694a270 <col:32, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     |       |   | |   `-RecoveryExpr 0x13694a248 <col:33, col:38> '<dependent type>' contains-errors lvalue     |       |   | |     `-DeclRefExpr 0x13694a210 <col:33> 'struct skcipher_ctx *' contains-errors lvalue Var 0x136941f68 'ctx' 'struct skcipher_ctx *'     |       |   | `-CallExpr 0x13694a428 <line:60:6, col:41> '<dependent type>' contains-errors     |       |   |   |-DeclRefExpr 0x13694a390 <col:6> 'int ()' Function 0x13694a2d8 'crypto_ablkcipher_decrypt' 'int ()'     |       |   |   `-UnaryOperator 0x13694a410 <col:32, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     |       |   |     `-RecoveryExpr 0x13694a3e8 <col:33, col:38> '<dependent type>' contains-errors lvalue     |       |   |       `-DeclRefExpr 0x13694a3b0 <col:33> 'struct skcipher_ctx *' contains-errors lvalue Var 0x136941f68 'ctx' 'struct skcipher_ctx *'     |       |   `-UnaryOperator 0x13694a4e0 <line:61:5, col:11> '<dependent type>' contains-errors prefix '&' cannot overflow     |       |     `-RecoveryExpr 0x13694a4b8 <col:6, col:11> '<dependent type>' contains-errors lvalue     |       |       `-DeclRefExpr 0x13694a480 <col:6> 'struct skcipher_ctx *' contains-errors lvalue Var 0x136941f68 'ctx' 'struct skcipher_ctx *'     |       |-LabelStmt 0x13694a6e8 <line:63:1, line:64:29> 'free'     |       | `-CallExpr 0x13694a6c0 <col:4, col:29> '<dependent type>' contains-errors     |       |   |-DeclRefExpr 0x13694a628 <col:4> 'int ()' Function 0x13694a570 'af_alg_free_sg' 'int ()'     |       |   `-UnaryOperator 0x13694a6a8 <col:19, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |       |     `-RecoveryExpr 0x13694a680 <col:20, col:25> '<dependent type>' contains-errors lvalue     |       |       `-DeclRefExpr 0x13694a648 <col:20> 'struct skcipher_ctx *' contains-errors lvalue Var 0x136941f68 'ctx' 'struct skcipher_ctx *'     |       |-IfStmt 0x13694a758 <line:66:4, line:67:10>     |       | |-ImplicitCastExpr 0x13694a728 <line:66:8> 'int' contains-errors <LValueToRValue>     |       | | `-DeclRefExpr 0x13694a708 <col:8> 'int' contains-errors lvalue Var 0x136947a98 'err' 'int'     |       | `-GotoStmt 0x13694a740 <line:67:5, col:10> 'unlock' 0x136949428     |       |-CompoundAssignOperator 0x13694a7e8 <line:69:4, col:14> 'long' '+=' ComputeLHSTy='long' ComputeResultTy='long'     |       | |-DeclRefExpr 0x13694a778 <col:4> 'long' lvalue Var 0x136947c60 'copied' 'long'     |       | `-ImplicitCastExpr 0x13694a7d0 <col:14> 'long' <IntegralCast>     |       |   `-ImplicitCastExpr 0x13694a7b8 <col:14> 'int' <LValueToRValue>     |       |     `-DeclRefExpr 0x13694a798 <col:14> 'int' lvalue Var 0x136947bc8 'used' 'int'     |       |-CompoundAssignOperator 0x13694a8a8 <line:71:4, col:14> 'unsigned long' contains-errors '-=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'     |       | |-DeclRefExpr 0x13694a838 <col:4> 'unsigned long' contains-errors lvalue Var 0x136948c00 'seglen' 'unsigned long'     |       | `-ImplicitCastExpr 0x13694a890 <col:14> 'unsigned long' <IntegralCast>     |       |   `-ImplicitCastExpr 0x13694a878 <col:14> 'int' <LValueToRValue>     |       |     `-DeclRefExpr 0x13694a858 <col:14> 'int' lvalue Var 0x136947bc8 'used' 'int'     |       `-CallExpr 0x13694aa30 <line:72:4, col:30> 'int' contains-errors     |         |-ImplicitCastExpr 0x13694aa18 <col:4> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x13694a9b8 <col:4> 'int ()' Function 0x13694a900 'skcipher_pull_sgl' 'int ()'     |         |-ImplicitCastExpr 0x13694aa60 <col:22> 'struct sock *' contains-errors <LValueToRValue>     |         | `-DeclRefExpr 0x13694a9d8 <col:22> 'struct sock *' contains-errors lvalue Var 0x1369418c8 'sk' 'struct sock *'     |         `-ImplicitCastExpr 0x13694aa78 <col:26> 'int' <LValueToRValue>     |           `-DeclRefExpr 0x13694a9f8 <col:26> 'int' lvalue Var 0x136947bc8 'used' 'int'     |-BinaryOperator 0x13694abd8 <line:76:2, col:8> 'int' contains-errors '='     | |-DeclRefExpr 0x13694ab98 <col:2> 'int' contains-errors lvalue Var 0x136947a98 'err' 'int'     | `-IntegerLiteral 0x13694abb8 <col:8> 'int' 0     |-LabelStmt 0x13694ad78 <line:78:1, line:79:25> 'unlock'     | `-CallExpr 0x13694ad38 <col:2, col:25> 'int' contains-errors     |   |-ImplicitCastExpr 0x13694ad20 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x13694ace0 <col:2> 'int ()' Function 0x13694ac28 'skcipher_wmem_wakeup' 'int ()'     |   `-ImplicitCastExpr 0x13694ad60 <col:23> 'struct sock *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x13694ad00 <col:23> 'struct sock *' contains-errors lvalue Var 0x1369418c8 'sk' 'struct sock *'     |-CallExpr 0x13694aed0 <line:80:2, col:17> 'int' contains-errors     | |-ImplicitCastExpr 0x13694aeb8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13694ae78 <col:2> 'int ()' Function 0x13694adc0 'release_sock' 'int ()'     | `-ImplicitCastExpr 0x13694aef8 <col:15> 'struct sock *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x13694ae98 <col:15> 'struct sock *' contains-errors lvalue Var 0x1369418c8 'sk' 'struct sock *'     `-ReturnStmt 0x13694b008 <line:82:2, col:19>       `-ImplicitCastExpr 0x13694aff0 <col:9, col:19> 'int' contains-errors <IntegralCast>         `-BinaryConditionalOperator 0x13694afb0 <col:9, col:19> 'long' contains-errors           |-ImplicitCastExpr 0x13694af50 <col:9> 'long' <LValueToRValue>           | `-DeclRefExpr 0x13694af10 <col:9> 'long' lvalue Var 0x136947c60 'copied' 'long'           |-OpaqueValueExpr 0x13694af68 <col:9> 'long'           | `-ImplicitCastExpr 0x13694af50 <col:9> 'long' <LValueToRValue>           |   `-DeclRefExpr 0x13694af10 <col:9> 'long' lvalue Var 0x136947c60 'copied' 'long'           |-OpaqueValueExpr 0x13694af68 <col:9> 'long'           | `-ImplicitCastExpr 0x13694af50 <col:9> 'long' <LValueToRValue>           |   `-DeclRefExpr 0x13694af10 <col:9> 'long' lvalue Var 0x136947c60 'copied' 'long'           `-ImplicitCastExpr 0x13694af98 <col:19> 'long' contains-errors <IntegralCast>             `-ImplicitCastExpr 0x13694af80 <col:19> 'int' contains-errors <LValueToRValue>               `-DeclRefExpr 0x13694af30 <col:19> 'int' contains-errors lvalue Var 0x136947a98 'err' 'int' ","19714":"`-FunctionDecl 0x15500de58  line:1:1 invalid date_s__rfc2822 'int (int, int)'   |-ParmVarDecl 0x15500dcf0 <col:17, col:23> col:23 invalid klass 'int'   |-ParmVarDecl 0x15500dd70 <col:30, col:36> col:36 invalid str 'int'   `-CompoundStmt 0x15500e0e8 <line:2:1, line:4:1>     `-ReturnStmt 0x15500e0d8 <line:3:5, col:29>       `-CallExpr 0x15500e0b0 <col:12, col:29> '<dependent type>' contains-errors         |-DeclRefExpr 0x15500e070 <col:12> 'int ()' Function 0x15500dfb8 'date__rfc2822' 'int ()'         `-RecoveryExpr 0x15500e090 <col:26> '<dependent type>' contains-errors lvalue ","19668":"`-FunctionDecl 0x148026f20  col:6 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x148027020 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x148027088 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x148026fc8 <<invalid sloc>> Implicit 887 ","19826":"`-FunctionDecl 0x14b826a78  line:1:12 check_ctx_access 'int (struct bpf_verifier_env *, int, int, enum bpf_access_type, enum bpf_reg_type *)' static   |-ParmVarDecl 0x14b80e248 <col:29, col:54> col:54 used env 'struct bpf_verifier_env *'   |-ParmVarDecl 0x14b80e2c8 <col:59, col:63> col:63 used off 'int'   |-ParmVarDecl 0x14b80e348 <col:68, col:72> col:72 used size 'int'   |-ParmVarDecl 0x14b826718 <line:2:8, col:29> col:29 invalid t 'enum bpf_access_type'   |-ParmVarDecl 0x14b826908 <col:32, col:51> col:51 used reg_type 'enum bpf_reg_type *'   `-CompoundStmt 0x14b828ac0 <line:3:1, line:18:1>     |-IfStmt 0x14b826c20 <line:5:2, line:6:10>     | |-RecoveryExpr 0x14b826bc8 <line:5:6, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14b826b90 <col:6> 'struct bpf_verifier_env *' lvalue ParmVar 0x14b80e248 'env' 'struct bpf_verifier_env *'     | `-ReturnStmt 0x14b826c10 <line:6:3, col:10>     |   `-IntegerLiteral 0x14b826bf0 <col:10> 'int' 0     |-IfStmt 0x14b827340 <line:8:2, line:14:2>     | |-BinaryOperator 0x14b826f70 <line:8:6, line:9:65> 'int' contains-errors '&&'     | | |-CXXDependentScopeMemberExpr 0x14b826d30 <line:8:6, col:27> '<dependent type>' contains-errors lvalue ->is_valid_access     | | | `-CXXDependentScopeMemberExpr 0x14b826ce8 <col:6, col:22> '<dependent type>' contains-errors lvalue ->ops     | | |   `-CXXDependentScopeMemberExpr 0x14b826ca0 <col:6, col:17> '<dependent type>' contains-errors lvalue ->aux     | | |     `-RecoveryExpr 0x14b826c78 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | |       `-DeclRefExpr 0x14b826c40 <col:6> 'struct bpf_verifier_env *' lvalue ParmVar 0x14b80e248 'env' 'struct bpf_verifier_env *'     | | `-CallExpr 0x14b826f30 <line:9:6, col:65> '<dependent type>' contains-errors     | |   |-CXXDependentScopeMemberExpr 0x14b826e68 <col:6, col:27> '<dependent type>' contains-errors lvalue ->is_valid_access     | |   | `-CXXDependentScopeMemberExpr 0x14b826e20 <col:6, col:22> '<dependent type>' contains-errors lvalue ->ops     | |   |   `-CXXDependentScopeMemberExpr 0x14b826dd8 <col:6, col:17> '<dependent type>' contains-errors lvalue ->aux     | |   |     `-RecoveryExpr 0x14b826db0 <col:6, col:11> '<dependent type>' contains-errors lvalue     | |   |       `-DeclRefExpr 0x14b826d78 <col:6> 'struct bpf_verifier_env *' lvalue ParmVar 0x14b80e248 'env' 'struct bpf_verifier_env *'     | |   |-DeclRefExpr 0x14b826eb0 <col:43> 'int' lvalue ParmVar 0x14b80e2c8 'off' 'int'     | |   |-DeclRefExpr 0x14b826ed0 <col:48> 'int' lvalue ParmVar 0x14b80e348 'size' 'int'     | |   |-RecoveryExpr 0x14b826ef0 <col:54> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14b826f10 <col:57> 'enum bpf_reg_type *' lvalue ParmVar 0x14b826908 'reg_type' 'enum bpf_reg_type *'     | `-CompoundStmt 0x14b827320 <col:68, line:14:2>     |   |-IfStmt 0x14b8272d0 <line:11:3, line:12:43>     |   | |-BinaryOperator 0x14b827110 <line:11:7, col:46> 'int' contains-errors '<'     |   | | |-CXXDependentScopeMemberExpr 0x14b827038 <col:7, col:23> '<dependent type>' contains-errors lvalue ->max_ctx_offset     |   | | | `-CXXDependentScopeMemberExpr 0x14b826ff0 <col:7, col:18> '<dependent type>' contains-errors lvalue ->aux     |   | | |   `-RecoveryExpr 0x14b826fc8 <col:7, col:12> '<dependent type>' contains-errors lvalue     |   | | |     `-DeclRefExpr 0x14b826f90 <col:7> 'struct bpf_verifier_env *' lvalue ParmVar 0x14b80e248 'env' 'struct bpf_verifier_env *'     |   | | `-BinaryOperator 0x14b8270f0 <col:40, col:46> 'int' '+'     |   | |   |-ImplicitCastExpr 0x14b8270c0 <col:40> 'int' <LValueToRValue>     |   | |   | `-DeclRefExpr 0x14b827080 <col:40> 'int' lvalue ParmVar 0x14b80e2c8 'off' 'int'     |   | |   `-ImplicitCastExpr 0x14b8270d8 <col:46> 'int' <LValueToRValue>     |   | |     `-DeclRefExpr 0x14b8270a0 <col:46> 'int' lvalue ParmVar 0x14b80e348 'size' 'int'     |   | `-BinaryOperator 0x14b8272b0 <line:12:4, col:43> '<dependent type>' contains-errors '='     |   |   |-CXXDependentScopeMemberExpr 0x14b8271d8 <col:4, col:20> '<dependent type>' contains-errors lvalue ->max_ctx_offset     |   |   | `-CXXDependentScopeMemberExpr 0x14b827190 <col:4, col:15> '<dependent type>' contains-errors lvalue ->aux     |   |   |   `-RecoveryExpr 0x14b827168 <col:4, col:9> '<dependent type>' contains-errors lvalue     |   |   |     `-DeclRefExpr 0x14b827130 <col:4> 'struct bpf_verifier_env *' lvalue ParmVar 0x14b80e248 'env' 'struct bpf_verifier_env *'     |   |   `-BinaryOperator 0x14b827290 <col:37, col:43> 'int' '+'     |   |     |-ImplicitCastExpr 0x14b827260 <col:37> 'int' <LValueToRValue>     |   |     | `-DeclRefExpr 0x14b827220 <col:37> 'int' lvalue ParmVar 0x14b80e2c8 'off' 'int'     |   |     `-ImplicitCastExpr 0x14b827278 <col:43> 'int' <LValueToRValue>     |   |       `-DeclRefExpr 0x14b827240 <col:43> 'int' lvalue ParmVar 0x14b80e348 'size' 'int'     |   `-ReturnStmt 0x14b827310 <line:13:3, col:10>     |     `-IntegerLiteral 0x14b8272f0 <col:10> 'int' 0     |-CallExpr 0x14b827598 <line:16:2, col:26> 'int'     | |-ImplicitCastExpr 0x14b827580 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14b827490 <col:2> 'int ()' Function 0x14b8273d8 'verbose' 'int ()'     | |-ImplicitCastExpr 0x14b8275d0 <col:10> 'char *' <ArrayToPointerDecay>     | | `-StringLiteral 0x14b8274f0 <col:10> 'char[4]' lvalue \"STR\"     | |-ImplicitCastExpr 0x14b8275e8 <col:17> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x14b827510 <col:17> 'int' lvalue ParmVar 0x14b80e2c8 'off' 'int'     | `-ImplicitCastExpr 0x14b828a00 <col:22> 'int' <LValueToRValue>     |   `-DeclRefExpr 0x14b827530 <col:22> 'int' lvalue ParmVar 0x14b80e348 'size' 'int'     `-ReturnStmt 0x14b828ab0 <line:17:2, col:10>       `-UnaryOperator 0x14b828a98 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow         `-ImplicitCastExpr 0x14b828a80 <col:10> '<dependent type>' contains-errors <LValueToRValue>           `-RecoveryExpr 0x14b828a60 <col:10> '<dependent type>' contains-errors lvalue ","19992":"`-FunctionDecl 0x14e1413e8  line:1:12 peer_close 'int (struct t3cdev *, struct sk_buff *, void *)' static   |-ParmVarDecl 0x14e128e48 <col:23, col:38> col:38 tdev 'struct t3cdev *'   |-ParmVarDecl 0x14e141228 <col:44, col:60> col:60 skb 'struct sk_buff *'   |-ParmVarDecl 0x14e1412a8 <col:65, col:71> col:71 used ctx 'void *'   `-CompoundStmt 0x14e145948 <line:2:1, line:76:1>     |-DeclStmt 0x14e141728 <line:3:2, col:26>     | |-RecordDecl 0x14e1414f0 <col:2, col:9> col:9 struct iwch_ep     | `-VarDecl 0x14e141658 <col:2, col:23> col:18 used ep 'struct iwch_ep *' cinit     |   `-ImplicitCastExpr 0x14e1416f8 <col:23> 'struct iwch_ep *' <BitCast>     |     `-ImplicitCastExpr 0x14e1416e0 <col:23> 'void *' <LValueToRValue>     |       `-DeclRefExpr 0x14e1416c0 <col:23> 'void *' lvalue ParmVar 0x14e1412a8 'ctx' 'void *'     |-DeclStmt 0x14e1418b8 <line:4:2, col:33>     | |-RecordDecl 0x14e141740 <col:2, col:9> col:9 struct iwch_qp_attributes     | `-VarDecl 0x14e141838 <col:2, col:28> col:28 referenced invalid attrs 'struct iwch_qp_attributes'     |-DeclStmt 0x14e141950 <line:5:2, col:21>     | `-VarDecl 0x14e1418e8 <col:2, col:16> col:16 used flags 'unsigned long'     |-DeclStmt 0x14e141a08 <line:6:2, col:20>     | `-VarDecl 0x14e141980 <col:2, col:19> col:6 used disconnect 'int' cinit     |   `-IntegerLiteral 0x14e1419e8 <col:19> 'int' 1     |-DeclStmt 0x14e141ac0 <line:7:2, col:17>     | `-VarDecl 0x14e141a38 <col:2, col:16> col:6 used release 'int' cinit     |   `-IntegerLiteral 0x14e141aa0 <col:16> 'int' 0     |-CallExpr 0x14e141da8 <line:9:2, col:26> 'int'     | |-ImplicitCastExpr 0x14e141d90 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14e141c00 <col:2> 'int ()' Function 0x14e141b48 'PDBG' 'int ()'     | |-ImplicitCastExpr 0x14e141de0 <col:7> 'char *' <ArrayToPointerDecay>     | | `-StringLiteral 0x14e141c60 <col:7> 'char[4]' lvalue \"STR\"     | |-ImplicitCastExpr 0x14e141df8 <col:14> 'const char *' <ArrayToPointerDecay>     | | `-PredefinedExpr 0x14e141d28 <col:14> 'const char[11]' lvalue __func__     | |   `-StringLiteral 0x14e141d00 <col:14> 'const char[11]' lvalue \"peer_close\"     | `-ImplicitCastExpr 0x14e141e10 <col:24> 'struct iwch_ep *' <LValueToRValue>     |   `-DeclRefExpr 0x14e141d40 <col:24> 'struct iwch_ep *' lvalue Var 0x14e141658 'ep' 'struct iwch_ep *'     |-CallExpr 0x14e141f88 <line:10:2, col:21> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14e141f08 <col:2> 'int ()' Function 0x14e141e50 'dst_confirm' 'int ()'     | `-RecoveryExpr 0x14e141f60 <col:14, col:18> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14e141f28 <col:14> 'struct iwch_ep *' lvalue Var 0x14e141658 'ep' 'struct iwch_ep *'     |-CallExpr 0x14e142190 <line:12:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14e142090 <col:2> 'int ()' Function 0x14e141fd8 'spin_lock_irqsave' 'int ()'     | |-UnaryOperator 0x14e142158 <col:20, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x14e142110 <col:21, col:29> '<dependent type>' contains-errors lvalue .lock     | |   `-RecoveryExpr 0x14e1420e8 <col:21, col:25> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x14e1420b0 <col:21> 'struct iwch_ep *' lvalue Var 0x14e141658 'ep' 'struct iwch_ep *'     | `-DeclRefExpr 0x14e142170 <col:35> 'unsigned long' lvalue Var 0x14e1418e8 'flags' 'unsigned long'     |-SwitchStmt 0x14e143088 <line:13:2, line:69:2>     | |-ImplicitCastExpr 0x14e143070 <line:13:10, col:18> '<dependent type>' contains-errors <LValueToRValue>     | | `-CXXDependentScopeMemberExpr 0x14e143028 <col:10, col:18> '<dependent type>' contains-errors lvalue .state     | |   `-RecoveryExpr 0x14e143000 <col:10, col:14> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x14e1421c0 <col:10> 'struct iwch_ep *' lvalue Var 0x14e141658 'ep' 'struct iwch_ep *'     | `-CompoundStmt 0x14e1452f0 <col:25, line:69:2>     |   |-CallExpr 0x14e1432a8 <line:15:3, col:32> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14e1431a8 <col:3> 'int ()' Function 0x14e1430f0 '__state_set' 'int ()'     |   | |-UnaryOperator 0x14e143228 <col:15, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-RecoveryExpr 0x14e143200 <col:16, col:20> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x14e1431c8 <col:16> 'struct iwch_ep *' lvalue Var 0x14e141658 'ep' 'struct iwch_ep *'     |   | `-RecoveryExpr 0x14e143288 <col:25> '<dependent type>' contains-errors lvalue     |   |-BreakStmt 0x14e1432d8 <line:16:3>     |   |-CallExpr 0x14e1433f8 <line:18:3, col:32> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14e1432f8 <col:3> 'int ()' Function 0x14e1430f0 '__state_set' 'int ()'     |   | |-UnaryOperator 0x14e143378 <col:15, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-RecoveryExpr 0x14e143350 <col:16, col:20> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x14e143318 <col:16> 'struct iwch_ep *' lvalue Var 0x14e141658 'ep' 'struct iwch_ep *'     |   | `-RecoveryExpr 0x14e1433d8 <col:25> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x14e143610 <line:19:3, col:39> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14e143508 <col:3> 'int ()' Function 0x14e143450 'connect_reply_upcall' 'int ()'     |   | |-DeclRefExpr 0x14e143528 <col:24> 'struct iwch_ep *' lvalue Var 0x14e141658 'ep' 'struct iwch_ep *'     |   | `-UnaryOperator 0x14e1435f8 <col:28, col:29> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x14e1435e0 <col:29> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x14e1435c0 <col:29> '<dependent type>' contains-errors lvalue     |   |-BreakStmt 0x14e143640 <line:20:3>     |   |-CallExpr 0x14e143760 <line:24:3, col:32> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14e143660 <col:3> 'int ()' Function 0x14e1430f0 '__state_set' 'int ()'     |   | |-UnaryOperator 0x14e1436e0 <col:15, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-RecoveryExpr 0x14e1436b8 <col:16, col:20> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x14e143680 <col:16> 'struct iwch_ep *' lvalue Var 0x14e141658 'ep' 'struct iwch_ep *'     |   | `-RecoveryExpr 0x14e143740 <col:25> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x14e143858 <line:25:3, col:22> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x14e1437f0 <col:3, col:11> '<dependent type>' contains-errors lvalue .rpl_done     |   | | `-RecoveryExpr 0x14e1437c8 <col:3, col:7> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x14e143790 <col:3> 'struct iwch_ep *' lvalue Var 0x14e141658 'ep' 'struct iwch_ep *'     |   | `-IntegerLiteral 0x14e143838 <col:22> 'int' 1     |   |-CallExpr 0x14e143998 <line:27:3, col:17> 'int'     |   | |-ImplicitCastExpr 0x14e143980 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14e143920 <col:3> 'int ()' Function 0x14e141b48 'PDBG' 'int ()'     |   | |-ImplicitCastExpr 0x14e1439c8 <col:8> 'char *' <ArrayToPointerDecay>     |   | | `-StringLiteral 0x14e143940 <col:8> 'char[4]' lvalue \"STR\"     |   | `-ImplicitCastExpr 0x14e1439e0 <col:15> 'struct iwch_ep *' <LValueToRValue>     |   |   `-DeclRefExpr 0x14e143960 <col:15> 'struct iwch_ep *' lvalue Var 0x14e141658 'ep' 'struct iwch_ep *'     |   |-CallExpr 0x14e143bb8 <line:28:3, col:25> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14e143ad8 <col:3> 'int ()' Function 0x14e143a20 'wake_up' 'int ()'     |   | `-UnaryOperator 0x14e143ba0 <col:11, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-CXXDependentScopeMemberExpr 0x14e143b58 <col:12, col:20> '<dependent type>' contains-errors lvalue .waitq     |   |     `-RecoveryExpr 0x14e143b30 <col:12, col:16> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x14e143af8 <col:12> 'struct iwch_ep *' lvalue Var 0x14e141658 'ep' 'struct iwch_ep *'     |   |-BreakStmt 0x14e143be0 <line:29:3>     |   |-BinaryOperator 0x14e143d48 <line:32:3, col:22> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x14e143ce0 <col:3, col:11> '<dependent type>' contains-errors lvalue .rpl_done     |   | | `-RecoveryExpr 0x14e143cb8 <col:3, col:7> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x14e143c80 <col:3> 'struct iwch_ep *' lvalue Var 0x14e141658 'ep' 'struct iwch_ep *'     |   | `-IntegerLiteral 0x14e143d28 <col:22> 'int' 1     |   |-CallExpr 0x14e143e88 <line:34:3, col:17> 'int'     |   | |-ImplicitCastExpr 0x14e143e70 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14e143e10 <col:3> 'int ()' Function 0x14e141b48 'PDBG' 'int ()'     |   | |-ImplicitCastExpr 0x14e143eb8 <col:8> 'char *' <ArrayToPointerDecay>     |   | | `-StringLiteral 0x14e143e30 <col:8> 'char[4]' lvalue \"STR\"     |   | `-ImplicitCastExpr 0x14e143ed0 <col:15> 'struct iwch_ep *' <LValueToRValue>     |   |   `-DeclRefExpr 0x14e143e50 <col:15> 'struct iwch_ep *' lvalue Var 0x14e141658 'ep' 'struct iwch_ep *'     |   |-CallExpr 0x14e143fc8 <line:35:3, col:25> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14e143ee8 <col:3> 'int ()' Function 0x14e143a20 'wake_up' 'int ()'     |   | `-UnaryOperator 0x14e143fb0 <col:11, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-CXXDependentScopeMemberExpr 0x14e143f68 <col:12, col:20> '<dependent type>' contains-errors lvalue .waitq     |   |     `-RecoveryExpr 0x14e143f40 <col:12, col:16> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x14e143f08 <col:12> 'struct iwch_ep *' lvalue Var 0x14e141658 'ep' 'struct iwch_ep *'     |   |-BreakStmt 0x14e143ff0 <line:36:3>     |   |-CallExpr 0x14e144138 <line:38:3, col:20> 'int'     |   | |-ImplicitCastExpr 0x14e144120 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14e1440e0 <col:3> 'int ()' Function 0x14e144028 'start_ep_timer' 'int ()'     |   | `-ImplicitCastExpr 0x14e144160 <col:18> 'struct iwch_ep *' <LValueToRValue>     |   |   `-DeclRefExpr 0x14e144100 <col:18> 'struct iwch_ep *' lvalue Var 0x14e141658 'ep' 'struct iwch_ep *'     |   |-CallExpr 0x14e1446c8 <line:43:3, col:23> 'int'     |   | |-ImplicitCastExpr 0x14e1446b0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14e144670 <col:3> 'int ()' Function 0x14e1445b8 'peer_close_upcall' 'int ()'     |   | `-ImplicitCastExpr 0x14e1446f0 <col:21> 'struct iwch_ep *' <LValueToRValue>     |   |   `-DeclRefExpr 0x14e144690 <col:21> 'struct iwch_ep *' lvalue Var 0x14e141658 'ep' 'struct iwch_ep *'     |   |-BreakStmt 0x14e144708 <line:44:3>     |   |-BinaryOperator 0x14e144750 <line:46:3, col:16> 'int' '='     |   | |-DeclRefExpr 0x14e144710 <col:3> 'int' lvalue Var 0x14e141980 'disconnect' 'int'     |   | `-IntegerLiteral 0x14e144730 <col:16> 'int' 0     |   |-BreakStmt 0x14e144770 <line:47:3>     |   |-BinaryOperator 0x14e144850 <line:50:3, col:16> 'int' '='     |   | |-DeclRefExpr 0x14e144810 <col:3> 'int' lvalue Var 0x14e141980 'disconnect' 'int'     |   | `-IntegerLiteral 0x14e144830 <col:16> 'int' 0     |   |-BreakStmt 0x14e144870 <line:51:3>     |   |-CallExpr 0x14e1449b0 <line:53:3, col:19> 'int'     |   | |-ImplicitCastExpr 0x14e144998 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14e144958 <col:3> 'int ()' Function 0x14e1448a0 'stop_ep_timer' 'int ()'     |   | `-ImplicitCastExpr 0x14e1449d8 <col:17> 'struct iwch_ep *' <LValueToRValue>     |   |   `-DeclRefExpr 0x14e144978 <col:17> 'struct iwch_ep *' lvalue Var 0x14e141658 'ep' 'struct iwch_ep *'     |   |-IfStmt 0x14e144e10 <line:54:3, line:58:3>     |   | |-BinaryOperator 0x14e144b40 <line:54:7, col:32> 'int' contains-errors '&&'     |   | | |-CXXDependentScopeMemberExpr 0x14e144a50 <col:7, col:15> '<dependent type>' contains-errors lvalue .cm_id     |   | | | `-RecoveryExpr 0x14e144a28 <col:7, col:11> '<dependent type>' contains-errors lvalue     |   | | |   `-DeclRefExpr 0x14e1449f0 <col:7> 'struct iwch_ep *' lvalue Var 0x14e141658 'ep' 'struct iwch_ep *'     |   | | `-CXXDependentScopeMemberExpr 0x14e144af8 <col:24, col:32> '<dependent type>' contains-errors lvalue .qp     |   | |   `-RecoveryExpr 0x14e144ad0 <col:24, col:28> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x14e144a98 <col:24> 'struct iwch_ep *' lvalue Var 0x14e141658 'ep' 'struct iwch_ep *'     |   | `-CompoundStmt 0x14e144e00 <col:36, line:58:3>     |   |-CallExpr 0x14e144f68 <line:59:3, col:27> 'int'     |   | |-ImplicitCastExpr 0x14e144f50 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14e144f10 <col:3> 'int ()' Function 0x14e144e58 'close_complete_upcall' 'int ()'     |   | `-ImplicitCastExpr 0x14e144f90 <col:25> 'struct iwch_ep *' <LValueToRValue>     |   |   `-DeclRefExpr 0x14e144f30 <col:25> 'struct iwch_ep *' lvalue Var 0x14e141658 'ep' 'struct iwch_ep *'     |   |-BinaryOperator 0x14e145080 <line:61:3, col:13> 'int' '='     |   | |-DeclRefExpr 0x14e145040 <col:3> 'int' lvalue Var 0x14e141a38 'release' 'int'     |   | `-IntegerLiteral 0x14e145060 <col:13> 'int' 1     |   |-BinaryOperator 0x14e1450e0 <line:62:3, col:16> 'int' '='     |   | |-DeclRefExpr 0x14e1450a0 <col:3> 'int' lvalue Var 0x14e141980 'disconnect' 'int'     |   | `-IntegerLiteral 0x14e1450c0 <col:16> 'int' 0     |   |-BreakStmt 0x14e145100 <line:63:3>     |   |-BinaryOperator 0x14e145148 <line:65:3, col:16> 'int' '='     |   | |-DeclRefExpr 0x14e145108 <col:3> 'int' lvalue Var 0x14e141980 'disconnect' 'int'     |   | `-IntegerLiteral 0x14e145128 <col:16> 'int' 0     |   |-BreakStmt 0x14e145168 <line:66:3>     |   `-DefaultStmt 0x14e1452d0 <line:67:2, line:68:11>     |     `-CallExpr 0x14e1452a8 <col:3, col:11> 'int'     |       |-ImplicitCastExpr 0x14e145290 <col:3> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14e145250 <col:3> 'int ()' Function 0x14e145198 'BUG_ON' 'int ()'     |       `-IntegerLiteral 0x14e145270 <col:10> 'int' 1     |-CallExpr 0x14e1455d0 <line:70:2, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14e1454d0 <col:2> 'int ()' Function 0x14e145418 'spin_unlock_irqrestore' 'int ()'     | |-UnaryOperator 0x14e145598 <col:25, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x14e145550 <col:26, col:34> '<dependent type>' contains-errors lvalue .lock     | |   `-RecoveryExpr 0x14e145528 <col:26, col:30> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x14e1454f0 <col:26> 'struct iwch_ep *' lvalue Var 0x14e141658 'ep' 'struct iwch_ep *'     | `-DeclRefExpr 0x14e1455b0 <col:40> 'unsigned long' lvalue Var 0x14e1418e8 'flags' 'unsigned long'     `-IfStmt 0x14e145928 <line:73:2, line:74:26>       |-ImplicitCastExpr 0x14e145798 <line:73:6> 'int' <LValueToRValue>       | `-DeclRefExpr 0x14e145778 <col:6> 'int' lvalue Var 0x14e141a38 'release' 'int'       `-CallExpr 0x14e1458e8 <line:74:3, col:26> 'int'         |-ImplicitCastExpr 0x14e1458d0 <col:3> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x14e145890 <col:3> 'int ()' Function 0x14e1457d8 'release_ep_resources' 'int ()'         `-ImplicitCastExpr 0x14e145910 <col:24> 'struct iwch_ep *' <LValueToRValue>           `-DeclRefExpr 0x14e1458b0 <col:24> 'struct iwch_ep *' lvalue Var 0x14e141658 'ep' 'struct iwch_ep *' ","19258":"`-FunctionDecl 0x12e941c98  line:1:14 invalid nonpaging_gva_to_gpa 'int (struct kvm_vcpu *, struct kvm_mmu *, int, int, struct x86_exception *)' static   |-ParmVarDecl 0x12e928668 <col:35, col:52> col:52 used vcpu 'struct kvm_vcpu *'   |-ParmVarDecl 0x12e941858 <col:58, col:74> col:74 used mmu 'struct kvm_mmu *'   |-ParmVarDecl 0x12e9418d8 <line:2:7, col:13> col:13 invalid vaddr 'int'   |-ParmVarDecl 0x12e941958 <col:20, col:24> col:24 invalid access 'int'   |-ParmVarDecl 0x12e941b28 <line:3:7, col:29> col:29 used exception 'struct x86_exception *'   `-CompoundStmt 0x12e9420d8 <line:4:1, line:8:1>     |-IfStmt 0x12e941e40 <line:5:2, line:6:27>     | |-ImplicitCastExpr 0x12e941d88 <line:5:6> 'struct x86_exception *' <LValueToRValue>     | | `-DeclRefExpr 0x12e941d68 <col:6> 'struct x86_exception *' lvalue ParmVar 0x12e941b28 'exception' 'struct x86_exception *'     | `-BinaryOperator 0x12e941e20 <line:6:3, col:27> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x12e941dd8 <col:3, col:14> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x12e941da0 <col:3> 'struct x86_exception *' lvalue ParmVar 0x12e941b28 'exception' 'struct x86_exception *'     |   `-IntegerLiteral 0x12e941e00 <col:27> 'int' 0     `-ReturnStmt 0x12e9420c8 <line:7:2, col:62>       `-CallExpr 0x12e942080 <col:9, col:62> '<dependent type>' contains-errors         |-DeclRefExpr 0x12e941fc0 <col:9> 'int ()' Function 0x12e941f08 'kvm_translate_gpa' 'int ()'         |-DeclRefExpr 0x12e941fe0 <col:27> 'struct kvm_vcpu *' lvalue ParmVar 0x12e928668 'vcpu' 'struct kvm_vcpu *'         |-DeclRefExpr 0x12e942000 <col:33> 'struct kvm_mmu *' lvalue ParmVar 0x12e941858 'mmu' 'struct kvm_mmu *'         |-RecoveryExpr 0x12e942020 <col:38> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x12e942040 <col:45> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x12e942060 <col:53> 'struct x86_exception *' lvalue ParmVar 0x12e941b28 'exception' 'struct x86_exception *' ","19576":"`-FunctionDecl 0x14b00de88  col:8 invalid cJSON_DetachItemFromObject 'int *(int *, const char *)'   |-ParmVarDecl 0x14b00dd28 <col:35, col:42> col:42 invalid object 'int *'   |-ParmVarDecl 0x14b00dda8 <col:49, col:61> col:61 used string 'const char *'   `-CompoundStmt 0x14a9241c0 <col:69, col:222>     |-DeclStmt 0x14b00dfe0 <col:70, col:77>     | `-VarDecl 0x14b00df58 <col:70, col:76> col:74 used i 'int' cinit     |   `-IntegerLiteral 0x14b00dfc0 <col:76> 'int' 0     |-WhileStmt 0x14a923f80 <col:101, col:158>     | |-BinaryOperator 0x14b00e398 <col:108, col:146> 'int' contains-errors '&&'     | | |-RecoveryExpr 0x14b00e2e0 <col:108> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x14b00e368 <col:113, col:146> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x14b00e1f0 <col:113> 'int ()' Function 0x14b00e138 'cJSON_strcasecmp' 'int ()'     | |   |-CXXDependentScopeMemberExpr 0x14b00e320 <col:130, col:133> '<dependent type>' contains-errors lvalue ->string     | |   | `-RecoveryExpr 0x14b00e300 <col:130> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14b00e270 <col:140> 'const char *' lvalue ParmVar 0x14b00dda8 'string' 'const char *'     | `-BinaryOperator 0x14a923f60 <col:149, col:158> '<dependent type>' contains-errors ','     |   |-UnaryOperator 0x14b00e3d8 <col:149, col:150> 'int' postfix '++'     |   | `-DeclRefExpr 0x14b00e3b8 <col:149> 'int' lvalue Var 0x14b00df58 'i' 'int'     |   `-BinaryOperator 0x14a923f40 <col:153, col:158> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x14a923eb8 <col:153> '<dependent type>' contains-errors lvalue     |     `-CXXDependentScopeMemberExpr 0x14a923ef8 <col:155, col:158> '<dependent type>' contains-errors lvalue ->next     |       `-RecoveryExpr 0x14a923ed8 <col:155> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14a924158 <col:163, col:211>     | |-RecoveryExpr 0x14a923fb8 <col:167> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14a924148 <col:170, col:211>     |   `-CallExpr 0x14a924118 <col:177, col:211> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14a9240b8 <col:177> 'int ()' Function 0x14a924000 'cJSON_DetachItemFromArray' 'int ()'     |     |-RecoveryExpr 0x14a9240d8 <col:203> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14a9240f8 <col:210> 'int' lvalue Var 0x14b00df58 'i' 'int'     `-ReturnStmt 0x14a9241b0 <col:213, col:220>       `-ImplicitCastExpr 0x14a924198 <col:220> 'int *' <NullToPointer>         `-IntegerLiteral 0x14a924178 <col:220> 'int' 0 ","19635":"`-FunctionDecl 0x149941800  line:1:12 invalid brcmf_inform_bss 'int (struct brcmf_cfg80211_info *)' static   |-ParmVarDecl 0x149928668 <col:29, col:57> col:57 used cfg 'struct brcmf_cfg80211_info *'   `-CompoundStmt 0x14a008cb8 <line:2:1, line:23:1>     |-DeclStmt 0x149941a98 <line:3:2, col:37>     | |-RecordDecl 0x1499418b0 <col:2, col:9> col:9 struct brcmf_scan_results     | `-VarDecl 0x149941a18 <col:2, col:29> col:29 used bss_list 'struct brcmf_scan_results *'     |-DeclStmt 0x149941cd0 <line:4:2, col:37>     | |-RecordDecl 0x149941ab0 <col:2, col:9> col:9 struct brcmf_bss_info_le     | `-VarDecl 0x149941c18 <col:2, col:33> col:28 used bi 'struct brcmf_bss_info_le *' cinit     |   `-RecoveryExpr 0x149941c98 <col:33> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x149941d68 <line:6:2, col:7>     | `-VarDecl 0x149941d00 <col:2, col:6> col:6 used i 'int'     |-BinaryOperator 0x149941f00 <line:8:2, col:58> 'struct brcmf_scan_results *' contains-errors '='     | |-DeclRefExpr 0x149941d80 <col:2> 'struct brcmf_scan_results *' lvalue Var 0x149941a18 'bss_list' 'struct brcmf_scan_results *'     | `-CStyleCastExpr 0x149941ed8 <col:13, col:58> 'struct brcmf_scan_results *' contains-errors <Dependent>     |   `-CXXDependentScopeMemberExpr 0x149941e00 <col:42, col:58> '<dependent type>' contains-errors lvalue .escan_buf     |     `-RecoveryExpr 0x149941dd8 <col:42, col:47> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x149941da0 <col:42> 'struct brcmf_cfg80211_info *' lvalue ParmVar 0x149928668 'cfg' 'struct brcmf_cfg80211_info *'     |-IfStmt 0x149942408 <line:9:2, line:14:2>     | |-BinaryOperator 0x1499420b8 <line:9:6, line:10:27> 'int' contains-errors '&&'     | | |-BinaryOperator 0x149941fa0 <line:9:6, col:25> 'int' contains-errors '!='     | | | |-RecoveryExpr 0x149941f58 <col:6, col:16> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x149941f20 <col:6> 'struct brcmf_scan_results *' lvalue Var 0x149941a18 'bss_list' 'struct brcmf_scan_results *'     | | | `-IntegerLiteral 0x149941f80 <col:25> 'int' 0     | | `-BinaryOperator 0x149942098 <line:10:6, col:27> 'int' contains-errors '!='     | |   |-RecoveryExpr 0x149941ff8 <col:6, col:16> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x149941fc0 <col:6> 'struct brcmf_scan_results *' lvalue Var 0x149941a18 'bss_list' 'struct brcmf_scan_results *'     | |   `-RecoveryExpr 0x149942078 <col:27> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1499423e8 <col:51, line:14:2>     |   |-CallExpr 0x149942310 <line:11:3, line:12:23> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x149942230 <line:11:3> 'int ()' Function 0x149942178 'brcmf_err' 'int ()'     |   | |-StringLiteral 0x149942290 <col:13> 'char[4]' lvalue \"STR\"     |   | `-RecoveryExpr 0x1499422e8 <line:12:6, col:16> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x1499422b0 <col:6> 'struct brcmf_scan_results *' lvalue Var 0x149941a18 'bss_list' 'struct brcmf_scan_results *'     |   `-ReturnStmt 0x1499423d8 <line:13:3, col:11>     |     `-UnaryOperator 0x1499423c0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x1499423a8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x149942388 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x149942618 <line:15:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x149942508 <col:2> 'int ()' Function 0x149942450 'brcmf_dbg' 'int ()'     | |-RecoveryExpr 0x1499425f8 <col:12> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x149942540 <col:18> 'char[4]' lvalue \"STR\"     | `-RecoveryExpr 0x149942598 <col:25, col:35> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x149942560 <col:25> 'struct brcmf_scan_results *' lvalue Var 0x149941a18 'bss_list' 'struct brcmf_scan_results *'     |-ForStmt 0x14a008c38 <line:16:2, line:21:2>     | |-BinaryOperator 0x149942690 <line:16:7, col:11> 'int' '='     | | |-DeclRefExpr 0x149942650 <col:7> 'int' lvalue Var 0x149941d00 'i' 'int'     | | `-IntegerLiteral 0x149942670 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x149942730 <col:14, col:28> 'int' contains-errors '<'     | | |-DeclRefExpr 0x1499426b0 <col:14> 'int' lvalue Var 0x149941d00 'i' 'int'     | | `-RecoveryExpr 0x149942708 <col:18, col:28> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1499426d0 <col:18> 'struct brcmf_scan_results *' lvalue Var 0x149941a18 'bss_list' 'struct brcmf_scan_results *'     | |-UnaryOperator 0x149942770 <col:35, col:36> 'int' postfix '++'     | | `-DeclRefExpr 0x149942750 <col:35> 'int' lvalue Var 0x149941d00 'i' 'int'     | `-CompoundStmt 0x14a008c18 <col:40, line:21:2>     |   |-BinaryOperator 0x14a0089e0 <line:17:3, col:32> 'struct brcmf_bss_info_le *' contains-errors '='     |   | |-DeclRefExpr 0x149942788 <col:3> 'struct brcmf_bss_info_le *' contains-errors lvalue Var 0x149941c18 'bi' 'struct brcmf_bss_info_le *'     |   | `-ImplicitCastExpr 0x14a0089c8 <col:8, col:32> 'struct brcmf_bss_info_le *' contains-errors <IntegralToPointer>     |   |   `-CallExpr 0x14a008968 <col:8, col:32> 'int' contains-errors     |   |     |-ImplicitCastExpr 0x14a008950 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x14a0088b8 <col:8> 'int ()' Function 0x14a008800 'next_bss_le' 'int ()'     |   |     |-ImplicitCastExpr 0x14a008998 <col:20> 'struct brcmf_scan_results *' <LValueToRValue>     |   |     | `-DeclRefExpr 0x14a0088d8 <col:20> 'struct brcmf_scan_results *' lvalue Var 0x149941a18 'bss_list' 'struct brcmf_scan_results *'     |   |     `-ImplicitCastExpr 0x14a0089b0 <col:30> 'struct brcmf_bss_info_le *' contains-errors <LValueToRValue>     |   |       `-DeclRefExpr 0x14a0088f8 <col:30> 'struct brcmf_bss_info_le *' contains-errors lvalue Var 0x149941c18 'bi' 'struct brcmf_bss_info_le *'     |   `-IfStmt 0x14a008bf8 <line:19:3, line:20:4>     |     |-RecoveryExpr 0x14a008bd0 <line:19:7> '<dependent type>' contains-errors lvalue     |     `-BreakStmt 0x14a008bf0 <line:20:4>     `-ReturnStmt 0x14a008ca8 <line:22:2, col:9>       `-RecoveryExpr 0x14a008c88 <col:9> '<dependent type>' contains-errors lvalue ","19168":"`-FunctionDecl 0x125028460  col:9 implicit used strchr 'char *(const char *, int)' extern   |-ParmVarDecl 0x125028560 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x1250285c8 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x125028508 <<invalid sloc>> Implicit 893 ","19105":"`-FunctionDecl 0x127829168  col:7 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x127829268 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x1278292d0 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x127829338 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x127829210 <<invalid sloc>> Implicit 900 ","20022":"`-FunctionDecl 0x1219283a8  line:1:1 invalid e_ews_connection_get_oal_list 'int (int *, int *, int, int)'   |-ParmVarDecl 0x121928128 <col:32, col:48> col:48 invalid cnc 'int *'   |-ParmVarDecl 0x1219281a8 <line:2:32, col:46> col:46 invalid cancellable 'int *'   |-ParmVarDecl 0x121928228 <line:3:32, col:52> col:52 invalid callback 'int'   |-ParmVarDecl 0x1219282a8 <line:4:32, col:41> col:41 invalid user_data 'int'   `-CompoundStmt 0x12200a158 <line:5:1, line:41:1>     |-DeclStmt 0x121928688 <line:8:2, col:28>     | |-RecordDecl 0x1219284a0 <col:2, col:9> col:9 struct _oal_req_data     | `-VarDecl 0x121928608 <col:2, col:24> col:24 used data 'struct _oal_req_data *'     |-CallExpr 0x122008420 <line:11:2, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1220082b8 <col:2> 'int ()' Function 0x122008200 'g_return_if_fail' 'int ()'     | `-CallExpr 0x1220083f8 <col:20, col:44> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1220083b8 <col:20> 'int ()' Function 0x122008300 'E_IS_EWS_CONNECTION' 'int ()'     |   `-RecoveryExpr 0x1220083d8 <col:41> '<dependent type>' contains-errors lvalue     |-IfStmt 0x122008c60 <line:19:2, line:23:2>     | |-RecoveryExpr 0x122008a18 <line:19:6, col:7> '_Bool' contains-errors     | `-CompoundStmt 0x122008c48 <col:21, line:23:2>     |   `-ReturnStmt 0x122008c38 <line:22:3>     |-BinaryOperator 0x122008f48 <line:26:2, col:31> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x122008dd8 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x122008da0 <col:2> 'struct _oal_req_data *' lvalue Var 0x121928608 'data' 'struct _oal_req_data *'     | `-CallExpr 0x122008f20 <col:14, col:31> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x122008ee0 <col:14> 'int ()' Function 0x122008e28 'g_object_ref' 'int ()'     |   `-RecoveryExpr 0x122008f00 <col:28> '<dependent type>' contains-errors lvalue     `-IfStmt 0x122009ef8 <line:29:2, line:35:2>       |-CallExpr 0x1220090e8 <line:29:6, col:35> '<dependent type>' contains-errors       | |-DeclRefExpr 0x1220090a8 <col:6> 'int ()' Function 0x122008ff0 'G_IS_CANCELLABLE' 'int ()'       | `-RecoveryExpr 0x1220090c8 <col:24> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x122009ee0 <col:38, line:35:2>         `-BinaryOperator 0x1220091d8 <line:30:3, col:48> '<dependent type>' contains-errors '='           |-RecoveryExpr 0x122009148 <col:3, col:9> '<dependent type>' contains-errors lvalue           | `-DeclRefExpr 0x122009110 <col:3> 'struct _oal_req_data *' lvalue Var 0x121928608 'data' 'struct _oal_req_data *'           `-CallExpr 0x1220091b0 <col:23, col:48> '<dependent type>' contains-errors             |-DeclRefExpr 0x122009170 <col:23> 'int ()' Function 0x122008e28 'g_object_ref' 'int ()'             `-RecoveryExpr 0x122009190 <col:37> '<dependent type>' contains-errors lvalue ","19330":"`-FunctionDecl 0x151128b10  line:1:13 invalid gf_dump_vrml_simple_field 'void (int *, int, int *)' static   |-ParmVarDecl 0x151128928 <col:39, col:55> col:55 referenced invalid sdump 'int *'   |-ParmVarDecl 0x1511289a8 <col:62, col:75> col:75 invalid field 'int'   |-ParmVarDecl 0x151128a28 <col:82, col:91> col:91 invalid parent 'int *'   `-CompoundStmt 0x151143c58 <line:2:1, line:53:1>     |-DeclStmt 0x151128c68 <line:5:2, col:16>     | `-VarDecl 0x151128c00 <col:2, col:8> col:8 used slot_ptr 'void *'     |-SwitchStmt 0x151128d00 <line:7:2, line:23:2>     | |-ImplicitCastExpr 0x151128ce8 <line:7:10, col:16> '<dependent type>' contains-errors <LValueToRValue>     | | `-CXXDependentScopeMemberExpr 0x151128ca0 <col:10, col:16> '<dependent type>' contains-errors lvalue .fieldType     | |   `-RecoveryExpr 0x151128c80 <col:10> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x151142588 <col:27, line:23:2>     |   |-ReturnStmt 0x151142000 <line:10:3>     |   |-CallExpr 0x1511421a0 <line:13:3, col:16> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x151142120 <col:3> 'int ()' Function 0x151142068 'assert' 'int ()'     |   | `-RecoveryExpr 0x151142180 <col:11> '<dependent type>' contains-errors lvalue     |   |-UnaryOperator 0x151142258 <line:14:3, col:16> '<dependent type>' contains-errors postfix '++' cannot overflow     |   | `-CXXDependentScopeMemberExpr 0x151142210 <col:3, col:10> '<dependent type>' contains-errors lvalue ->indent     |   |   `-RecoveryExpr 0x1511421e8 <col:3> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x1511421c8 <col:3> 'int *' lvalue ParmVar 0x151128928 'sdump' 'int *'     |   |-WhileStmt 0x1511424a0 <line:15:3, line:18:3>     |   | |-RecoveryExpr 0x151142288 <line:15:10> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x151142488 <col:16, line:18:3>     |   |   `-CallExpr 0x151142448 <line:16:4, col:48> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x1511422a8 <col:4> 'int ()' Function 0x151128de8 'gf_dump_vrml_node' 'int ()'     |   |     |-RecoveryExpr 0x1511422c8 <col:22> '<dependent type>' contains-errors lvalue     |   |     |-CXXDependentScopeMemberExpr 0x1511423e0 <col:29, col:35> '<dependent type>' contains-errors lvalue ->node     |   |     | `-RecoveryExpr 0x1511423c0 <col:29> '<dependent type>' contains-errors lvalue     |   |     |-IntegerLiteral 0x151142348 <col:41> 'int' 1     |   |     `-RecoveryExpr 0x151142428 <col:44> '<dependent type>' contains-errors lvalue     |   |-UnaryOperator 0x151142550 <line:19:3, col:16> '<dependent type>' contains-errors postfix '--' cannot overflow     |   | `-CXXDependentScopeMemberExpr 0x151142508 <col:3, col:10> '<dependent type>' contains-errors lvalue ->indent     |   |   `-RecoveryExpr 0x1511424e0 <col:3> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x1511424c0 <col:3> 'int *' lvalue ParmVar 0x151128928 'sdump' 'int *'     |   |-ReturnStmt 0x151142568 <line:20:3>     |   `-ReturnStmt 0x151142578 <line:22:3>     `-IfStmt 0x151143c28 <line:24:2, line:52:2> has_else       |-CallExpr 0x151142738 <line:24:6, col:44> '<dependent type>' contains-errors       | |-DeclRefExpr 0x1511426b0 <col:6> 'int ()' Function 0x1511425f8 'gf_sg_vrml_is_sf_field' 'int ()'       | `-CXXDependentScopeMemberExpr 0x1511426f0 <col:29, col:35> '<dependent type>' contains-errors lvalue .fieldType       |   `-RecoveryExpr 0x1511426d0 <col:29> '<dependent type>' contains-errors lvalue       |-CompoundStmt 0x151142de8 <col:47, line:28:2>       | |-IfStmt 0x151142980 <line:25:3, col:50>       | | |-CXXDependentScopeMemberExpr 0x151142780 <col:7, col:14> '<dependent type>' contains-errors lvalue ->XMLDump       | | | `-RecoveryExpr 0x151142760 <col:7> '<dependent type>' contains-errors lvalue       | | `-CallExpr 0x151142950 <col:23, col:50> '<dependent type>' contains-errors       | |   |-DeclRefExpr 0x1511428a8 <col:23> 'int ()' Function 0x1511427f0 'StartAttribute' 'int ()'       | |   |-RecoveryExpr 0x1511428c8 <col:38> '<dependent type>' contains-errors lvalue       | |   `-StringLiteral 0x151142930 <col:45> 'char[4]' lvalue \"STR\"       | |-CallExpr 0x151142bd0 <line:26:3, col:72> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x151142a80 <col:3> 'int ()' Function 0x1511429c8 'gf_dump_vrml_sffield' 'int ()'       | | |-RecoveryExpr 0x151142aa0 <col:24> '<dependent type>' contains-errors lvalue       | | |-CXXDependentScopeMemberExpr 0x151142ae0 <col:31, col:37> '<dependent type>' contains-errors lvalue .fieldType       | | | `-RecoveryExpr 0x151142ac0 <col:31> '<dependent type>' contains-errors lvalue       | | |-CXXDependentScopeMemberExpr 0x151142b48 <col:48, col:54> '<dependent type>' contains-errors lvalue .far_ptr       | | | `-RecoveryExpr 0x151142b28 <col:48> '<dependent type>' contains-errors lvalue       | | |-IntegerLiteral 0x151142b90 <col:63> 'int' 0       | | `-RecoveryExpr 0x151142bb0 <col:66> '<dependent type>' contains-errors lvalue       | `-IfStmt 0x151142dc8 <line:27:3, col:41>       |   |-CXXDependentScopeMemberExpr 0x151142c38 <col:7, col:14> '<dependent type>' contains-errors lvalue ->XMLDump       |   | `-RecoveryExpr 0x151142c18 <col:7> '<dependent type>' contains-errors lvalue       |   `-CallExpr 0x151142da0 <col:23, col:41> '<dependent type>' contains-errors       |     |-DeclRefExpr 0x151142d60 <col:23> 'int ()' Function 0x151142ca8 'EndAttribute' 'int ()'       |     `-RecoveryExpr 0x151142d80 <col:36> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x151143c08 <line:28:9, line:52:2>         |-IfStmt 0x151143430 <line:32:3, line:38:3> has_else         | |-UnaryOperator 0x151143060 <line:32:7, col:15> '<dependent type>' contains-errors prefix '!' cannot overflow         | | `-ImplicitCastExpr 0x151143048 <col:8, col:15> '<dependent type>' contains-errors <LValueToRValue>         | |   `-CXXDependentScopeMemberExpr 0x151143000 <col:8, col:15> '<dependent type>' contains-errors lvalue ->XMLDump         | |     `-RecoveryExpr 0x151142fa0 <col:8> '<dependent type>' contains-errors lvalue         | |-CompoundStmt 0x151143230 <col:24, line:34:3>         | | `-CallExpr 0x151143200 <line:33:4, col:34> '<dependent type>' contains-errors         | |   |-DeclRefExpr 0x151143158 <col:4> 'int ()' Function 0x1511430a0 'gf_fprintf' 'int ()'         | |   |-CXXDependentScopeMemberExpr 0x151143198 <col:15, col:22> '<dependent type>' contains-errors lvalue ->trace         | |   | `-RecoveryExpr 0x151143178 <col:15> '<dependent type>' contains-errors lvalue         | |   `-StringLiteral 0x1511431e0 <col:29> 'char[4]' lvalue \"STR\"         | `-IfStmt 0x151143400 <line:34:10, line:38:3> has_else         |   |-RecoveryExpr 0x151143248 <line:34:14, col:23> '_Bool' contains-errors         |   |-CompoundStmt 0x151143340 <col:44, line:36:3>         |   | `-CallExpr 0x151143310 <line:35:4, col:34> '<dependent type>' contains-errors         |   |   |-DeclRefExpr 0x151143268 <col:4> 'int ()' Function 0x1511430a0 'gf_fprintf' 'int ()'         |   |   |-CXXDependentScopeMemberExpr 0x1511432a8 <col:15, col:22> '<dependent type>' contains-errors lvalue ->trace         |   |   | `-RecoveryExpr 0x151143288 <col:15> '<dependent type>' contains-errors lvalue         |   |   `-StringLiteral 0x1511432f0 <col:29> 'char[4]' lvalue \"STR\"         |   `-CompoundStmt 0x1511433e8 <line:36:10, line:38:3>         |     `-CallExpr 0x1511433b8 <line:37:4, col:31> '<dependent type>' contains-errors         |       |-DeclRefExpr 0x151143358 <col:4> 'int ()' Function 0x1511427f0 'StartAttribute' 'int ()'         |       |-RecoveryExpr 0x151143378 <col:19> '<dependent type>' contains-errors lvalue         |       `-StringLiteral 0x151143398 <col:26> 'char[4]' lvalue \"STR\"         `-IfStmt 0x151143bd8 <line:45:3, line:51:3> has_else           |-UnaryOperator 0x151143910 <line:45:7, col:15> '<dependent type>' contains-errors prefix '!' cannot overflow           | `-ImplicitCastExpr 0x1511438f8 <col:8, col:15> '<dependent type>' contains-errors <LValueToRValue>           |   `-CXXDependentScopeMemberExpr 0x1511438b0 <col:8, col:15> '<dependent type>' contains-errors lvalue ->XMLDump           |     `-RecoveryExpr 0x151143890 <col:8> '<dependent type>' contains-errors lvalue           |-CompoundStmt 0x151143a00 <col:24, line:47:3>           | `-CallExpr 0x1511439d0 <line:46:4, col:34> '<dependent type>' contains-errors           |   |-DeclRefExpr 0x151143928 <col:4> 'int ()' Function 0x1511430a0 'gf_fprintf' 'int ()'           |   |-CXXDependentScopeMemberExpr 0x151143968 <col:15, col:22> '<dependent type>' contains-errors lvalue ->trace           |   | `-RecoveryExpr 0x151143948 <col:15> '<dependent type>' contains-errors lvalue           |   `-StringLiteral 0x1511439b0 <col:29> 'char[4]' lvalue \"STR\"           `-IfStmt 0x151143ba8 <line:47:10, line:51:3> has_else             |-RecoveryExpr 0x151143a18 <line:47:14, col:23> '_Bool' contains-errors             |-CompoundStmt 0x151143b10 <col:44, line:49:3>             | `-CallExpr 0x151143ae0 <line:48:4, col:34> '<dependent type>' contains-errors             |   |-DeclRefExpr 0x151143a38 <col:4> 'int ()' Function 0x1511430a0 'gf_fprintf' 'int ()'             |   |-CXXDependentScopeMemberExpr 0x151143a78 <col:15, col:22> '<dependent type>' contains-errors lvalue ->trace             |   | `-RecoveryExpr 0x151143a58 <col:15> '<dependent type>' contains-errors lvalue             |   `-StringLiteral 0x151143ac0 <col:29> 'char[4]' lvalue \"STR\"             `-CompoundStmt 0x151143b90 <line:49:10, line:51:3>               `-CallExpr 0x151143b68 <line:50:4, col:22> '<dependent type>' contains-errors                 |-DeclRefExpr 0x151143b28 <col:4> 'int ()' Function 0x151142ca8 'EndAttribute' 'int ()'                 `-RecoveryExpr 0x151143b48 <col:17> '<dependent type>' contains-errors lvalue ","19322":"`-FunctionDecl 0x138128758  line:1:12 poll_transfer 'int (struct dw_spi *)' static   |-ParmVarDecl 0x138128648 <col:26, col:41> col:41 used dws 'struct dw_spi *'   `-CompoundStmt 0x138141050 <line:2:1, line:10:1>     |-DoStmt 0x138141000 <line:3:2, line:7:32>     | |-CompoundStmt 0x138140ef8 <line:3:5, line:7:2>     | | |-CallExpr 0x138140c08 <line:4:3, col:16> 'int'     | | | |-ImplicitCastExpr 0x138140bf0 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x138140b80 <col:3> 'int ()' Function 0x138140ac8 'dw_writer' 'int ()'     | | | `-ImplicitCastExpr 0x138140c30 <col:13> 'struct dw_spi *' <LValueToRValue>     | | |   `-DeclRefExpr 0x138140ba0 <col:13> 'struct dw_spi *' lvalue ParmVar 0x138128648 'dws' 'struct dw_spi *'     | | |-CallExpr 0x138140d80 <line:5:3, col:16> 'int'     | | | |-ImplicitCastExpr 0x138140d68 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x138140d28 <col:3> 'int ()' Function 0x138140c70 'dw_reader' 'int ()'     | | | `-ImplicitCastExpr 0x138140da8 <col:13> 'struct dw_spi *' <LValueToRValue>     | | |   `-DeclRefExpr 0x138140d48 <col:13> 'struct dw_spi *' lvalue ParmVar 0x138128648 'dws' 'struct dw_spi *'     | | `-CallExpr 0x138140ed8 <line:6:3, col:13> 'int'     | |   `-ImplicitCastExpr 0x138140ec0 <col:3> 'int (*)()' <FunctionToPointerDecay>     | |     `-DeclRefExpr 0x138140ea0 <col:3> 'int ()' Function 0x138140de8 'cpu_relax' 'int ()'     | `-BinaryOperator 0x138140fe0 <line:7:11, col:30> 'int' contains-errors '>'     |   |-RecoveryExpr 0x138140f58 <col:11, col:16> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x138140f20 <col:11> 'struct dw_spi *' lvalue ParmVar 0x138128648 'dws' 'struct dw_spi *'     |   `-RecoveryExpr 0x138140fb8 <col:25, col:30> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x138140f80 <col:25> 'struct dw_spi *' lvalue ParmVar 0x138128648 'dws' 'struct dw_spi *'     `-ReturnStmt 0x138141040 <line:9:2, col:9>       `-IntegerLiteral 0x138141020 <col:9> 'int' 0 ","19568":"`-FunctionDecl 0x14d128378  line:1:1 invalid rb_str_update 'int (int, long, long, int)'   |-ParmVarDecl 0x14d1280f0 <col:15, col:21> col:21 invalid str 'int'   |-ParmVarDecl 0x14d128170 <col:26, col:31> col:31 used beg 'long'   |-ParmVarDecl 0x14d1281f0 <col:36, col:41> col:41 used len 'long'   |-ParmVarDecl 0x14d128270 <col:46, col:52> col:52 invalid val 'int'   `-CompoundStmt 0x14d128680 <line:2:1, line:4:1>     `-CallExpr 0x14d128640 <line:3:5, col:37> '<dependent type>' contains-errors       |-DeclRefExpr 0x14d1285a0 <col:5> 'int ()' Function 0x14d1284e8 'rb_str_splice' 'int ()'       |-RecoveryExpr 0x14d1285c0 <col:19> '<dependent type>' contains-errors lvalue       |-DeclRefExpr 0x14d1285e0 <col:24> 'long' lvalue ParmVar 0x14d128170 'beg' 'long'       |-DeclRefExpr 0x14d128600 <col:29> 'long' lvalue ParmVar 0x14d1281f0 'len' 'long'       `-RecoveryExpr 0x14d128620 <col:34> '<dependent type>' contains-errors lvalue ","19480":"`-FunctionDecl 0x14b027138  col:3 implicit used strncpy 'char *(char *, const char *, unsigned long)' extern   |-ParmVarDecl 0x14b027238 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x14b0272a0 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x14b027308 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14b0271e0 <<invalid sloc>> Implicit 886 ","20002":"`-FunctionDecl 0x14580de88  line:1:1 invalid psutil_disk_partitions 'int (int *, int *)'   |-ParmVarDecl 0x14580dd28 <col:24, col:34> col:34 invalid self 'int *'   |-ParmVarDecl 0x14580dda8 <col:40, col:50> col:50 invalid args 'int *'   `-CompoundStmt 0x145827b70 <col:56, line:60:1>     |-DeclStmt 0x14580e148 <line:3:5, col:25>     | |-RecordDecl 0x14580df58 <col:5, col:12> col:12 struct mntent     | `-VarDecl 0x14580e0c8 <col:5, col:20> col:20 entry 'struct mntent *'     |-DeclStmt 0x14580e1e0 <line:4:5, col:26>     | `-VarDecl 0x14580e178 <col:5, col:17> col:17 used mtab_path 'const char *'     `-LabelStmt 0x145827910 <line:52:1, col:6> 'error'       `-NullStmt 0x1458278b8 <col:6> ","19508":"`-FunctionDecl 0x13100ddc8  line:1:17 invalid calculate_logical_dest_mask 'int (int)' static   |-ParmVarDecl 0x13100dcf0 <col:45, col:54> col:54 invalid pdmask 'int'   `-CompoundStmt 0x131027f28 <line:2:1, line:14:1>     |-WhileStmt 0x131027ec0 <line:8:2, line:12:2>     | |-BinaryOperator 0x13100e0c0 <line:8:9, col:19> 'int' contains-errors '<'     | | |-RecoveryExpr 0x13100e080 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13100e0a0 <col:19> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x131027ea8 <col:33, line:12:2>     |   `-CallExpr 0x13100e2b0 <line:9:3, col:42> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x13100e1c0 <col:3> 'int ()' Function 0x13100e108 'bitmap_clear_nolock' 'int ()'     |     |-RecoveryExpr 0x13100e258 <col:23> '<dependent type>' contains-errors lvalue     |     `-UnaryOperator 0x13100e298 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x13100e278 <col:33> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x131027f18 <line:13:2, col:9>       `-RecoveryExpr 0x131027ef8 <col:9> '<dependent type>' contains-errors lvalue ","19749":"`-FunctionDecl 0x155826918  line:1:1 wake_affine_weight 'int (struct sched_domain *, struct task_struct *, int, int, int)'   |-ParmVarDecl 0x15580e248 <col:20, col:41> col:41 used sd 'struct sched_domain *'   |-ParmVarDecl 0x155826628 <col:45, col:65> col:65 used p 'struct task_struct *'   |-ParmVarDecl 0x1558266a8 <line:2:6, col:10> col:10 used this_cpu 'int'   |-ParmVarDecl 0x155826728 <col:20, col:24> col:24 used prev_cpu 'int'   |-ParmVarDecl 0x1558267a8 <col:34, col:38> col:38 used sync 'int'   `-CompoundStmt 0x155829df0 <line:3:1, line:36:1>     |-DeclStmt 0x155826ac8 <line:5:2, col:25>     | `-VarDecl 0x155826a60 <col:2, col:16> col:16 used task_load 'unsigned long'     |-IfStmt 0x155827190 <line:9:2, line:16:2>     | |-ImplicitCastExpr 0x155826e18 <line:9:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x155826df8 <col:6> 'int' lvalue ParmVar 0x1558267a8 'sync' 'int'     | `-CompoundStmt 0x155827170 <col:12, line:16:2>     |   |-DeclStmt 0x155827038 <line:10:3, col:52>     |   | `-VarDecl 0x155826e48 <col:3, col:51> col:17 used current_load 'unsigned long' cinit     |   |   `-CallExpr 0x155827010 <col:32, col:51> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x155826f90 <col:32> 'int ()' Function 0x155826ed8 'task_h_load' 'int ()'     |   |     `-RecoveryExpr 0x155826ff0 <col:44> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x155827130 <line:12:3, line:13:11>     |     |-BinaryOperator 0x1558270c8 <line:12:7, col:22> 'int' contains-errors '>'     |     | |-DeclRefExpr 0x155827050 <col:7> 'unsigned long' contains-errors lvalue Var 0x155826e48 'current_load' 'unsigned long'     |     | `-RecoveryExpr 0x1558270a8 <col:22> '<dependent type>' contains-errors lvalue     |     `-ReturnStmt 0x155827120 <line:13:4, col:11>     |       `-ImplicitCastExpr 0x155827108 <col:11> 'int' <LValueToRValue>     |         `-DeclRefExpr 0x1558270e8 <col:11> 'int' lvalue ParmVar 0x1558266a8 'this_cpu' 'int'     `-BinaryOperator 0x155827280 <line:18:2, col:27> 'unsigned long' '='       |-DeclRefExpr 0x1558271b0 <col:2> 'unsigned long' lvalue Var 0x155826a60 'task_load' 'unsigned long'       `-ImplicitCastExpr 0x155827268 <col:14, col:27> 'unsigned long' <IntegralCast>         `-CallExpr 0x155827228 <col:14, col:27> 'int'           |-ImplicitCastExpr 0x155827210 <col:14> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x1558271d0 <col:14> 'int ()' Function 0x155826ed8 'task_h_load' 'int ()'           `-ImplicitCastExpr 0x155827250 <col:26> 'struct task_struct *' <LValueToRValue>             `-DeclRefExpr 0x1558271f0 <col:26> 'struct task_struct *' lvalue ParmVar 0x155826628 'p' 'struct task_struct *' ","19686":"`-FunctionDecl 0x14d1289f8  line:1:12 invalid http_connect 'int (int *)' static   |-ParmVarDecl 0x14d128928 <col:25, col:44> col:44 referenced invalid t 'int *'   `-CompoundStmt 0x14e009bc0 <line:2:1, line:70:1>     |-DeclStmt 0x14d128b28 <line:3:2, col:11>     | `-VarDecl 0x14d128ac0 <col:2, col:6> col:6 used error 'int'     |-DeclStmt 0x14d128bc0 <line:4:2, col:17>     | `-VarDecl 0x14d128b58 <col:2, col:8> col:8 used proxy_url 'char *'     |-IfStmt 0x14d128f40 <line:6:2, line:9:10>     | |-BinaryOperator 0x14d128ef0 <line:6:6, line:8:6> 'int' contains-errors '&&'     | | |-BinaryOperator 0x14d128e68 <line:6:6, line:7:36> 'int' contains-errors '&&'     | | | |-CXXDependentScopeMemberExpr 0x14d128bf8 <line:6:6, col:9> '<dependent type>' contains-errors lvalue ->connected     | | | | `-RecoveryExpr 0x14d128bd8 <col:6> '<dependent type>' contains-errors lvalue     | | | `-CallExpr 0x14d128e40 <line:7:3, col:36> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x14d128da0 <col:3> 'int ()' Function 0x14d128ce8 'http_should_keep_alive' 'int ()'     | | |   `-UnaryOperator 0x14d128e28 <col:26, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |     `-CXXDependentScopeMemberExpr 0x14d128de0 <col:27, col:30> '<dependent type>' contains-errors lvalue ->parser     | | |       `-RecoveryExpr 0x14d128dc0 <col:27> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x14d128ea8 <line:8:3, col:6> '<dependent type>' contains-errors lvalue ->parse_finished     | |   `-RecoveryExpr 0x14d128e88 <col:3> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14d128f30 <line:9:3, col:10>     |   `-IntegerLiteral 0x14d128f10 <col:10> 'int' 0     |-IfStmt 0x14d142500 <line:11:2, line:16:2>     | |-CXXDependentScopeMemberExpr 0x14d128f80 <line:11:6, col:9> '<dependent type>' contains-errors lvalue ->io     | | `-RecoveryExpr 0x14d128f60 <col:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14d1424d0 <col:13, line:16:2>     |   |-CallExpr 0x14d142140 <line:12:3, col:25> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14d1420b8 <col:3> 'int ()' Function 0x14d142000 'git_stream_close' 'int ()'     |   | `-CXXDependentScopeMemberExpr 0x14d1420f8 <col:20, col:23> '<dependent type>' contains-errors lvalue ->io     |   |   `-RecoveryExpr 0x14d1420d8 <col:20> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x14d1422d0 <line:13:3, col:24> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14d142248 <col:3> 'int ()' Function 0x14d142190 'git_stream_free' 'int ()'     |   | `-CXXDependentScopeMemberExpr 0x14d142288 <col:19, col:22> '<dependent type>' contains-errors lvalue ->io     |   |   `-RecoveryExpr 0x14d142268 <col:19> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x14d1423e0 <line:14:3, col:11> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x14d142340 <col:3, col:6> '<dependent type>' contains-errors lvalue ->io     |   | | `-RecoveryExpr 0x14d142318 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x14d1422f8 <col:3> 'int *' lvalue ParmVar 0x14d128928 't' 'int *'     |   | `-RecoveryExpr 0x14d1423c0 <col:11> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x14d1424b0 <line:15:3, col:18> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x14d142448 <col:3, col:6> '<dependent type>' contains-errors lvalue ->connected     |     | `-RecoveryExpr 0x14d142420 <col:3> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x14d142400 <col:3> 'int *' lvalue ParmVar 0x14d128928 't' 'int *'     |     `-IntegerLiteral 0x14d142490 <col:18> 'int' 0     |-IfStmt 0x14d142cb0 <line:18:2, line:26:2> has_else     | |-CXXDependentScopeMemberExpr 0x14d142588 <line:18:6, col:25> '<dependent type>' contains-errors lvalue .use_ssl     | | `-CXXDependentScopeMemberExpr 0x14d142540 <col:6, col:9> '<dependent type>' contains-errors lvalue ->connection_data     | |   `-RecoveryExpr 0x14d142520 <col:6> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x14d142928 <col:34, line:20:2>     | | `-BinaryOperator 0x14d142908 <line:19:3, col:86> 'int' contains-errors '='     | |   |-DeclRefExpr 0x14d1425d0 <col:3> 'int' lvalue Var 0x14d128ac0 'error' 'int'     | |   `-CallExpr 0x14d1428d0 <col:11, col:86> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x14d1426d0 <col:11> 'int ()' Function 0x14d142618 'git_tls_stream_new' 'int ()'     | |     |-UnaryOperator 0x14d142758 <col:30, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     | `-CXXDependentScopeMemberExpr 0x14d142710 <col:31, col:34> '<dependent type>' contains-errors lvalue ->io     | |     |   `-RecoveryExpr 0x14d1426f0 <col:31> '<dependent type>' contains-errors lvalue     | |     |-CXXDependentScopeMemberExpr 0x14d1427d8 <col:38, col:57> '<dependent type>' contains-errors lvalue .host     | |     | `-CXXDependentScopeMemberExpr 0x14d142790 <col:38, col:41> '<dependent type>' contains-errors lvalue ->connection_data     | |     |   `-RecoveryExpr 0x14d142770 <col:38> '<dependent type>' contains-errors lvalue     | |     `-CXXDependentScopeMemberExpr 0x14d142888 <col:63, col:82> '<dependent type>' contains-errors lvalue .port     | |       `-CXXDependentScopeMemberExpr 0x14d142840 <col:63, col:66> '<dependent type>' contains-errors lvalue ->connection_data     | |         `-RecoveryExpr 0x14d142820 <col:63> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14d142c98 <line:20:9, line:26:2>     |   `-BinaryOperator 0x14d142c78 <line:24:3, col:90> 'int' contains-errors '='     |     |-DeclRefExpr 0x14d142940 <col:3> 'int' lvalue Var 0x14d128ac0 'error' 'int'     |     `-CallExpr 0x14d142c40 <col:11, col:90> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x14d142a40 <col:11> 'int ()' Function 0x14d142988 'git_socket_stream_new' 'int ()'     |       |-UnaryOperator 0x14d142ac8 <col:33, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow     |       | `-CXXDependentScopeMemberExpr 0x14d142a80 <col:34, col:37> '<dependent type>' contains-errors lvalue ->io     |       |   `-RecoveryExpr 0x14d142a60 <col:34> '<dependent type>' contains-errors lvalue     |       |-CXXDependentScopeMemberExpr 0x14d142b48 <col:42, col:61> '<dependent type>' contains-errors lvalue .host     |       | `-CXXDependentScopeMemberExpr 0x14d142b00 <col:42, col:45> '<dependent type>' contains-errors lvalue ->connection_data     |       |   `-RecoveryExpr 0x14d142ae0 <col:42> '<dependent type>' contains-errors lvalue     |       `-CXXDependentScopeMemberExpr 0x14d142bf8 <col:67, col:86> '<dependent type>' contains-errors lvalue .port     |         `-CXXDependentScopeMemberExpr 0x14d142bb0 <col:67, col:70> '<dependent type>' contains-errors lvalue ->connection_data     |           `-RecoveryExpr 0x14d142b90 <col:67> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14d142da0 <line:28:2, line:29:10>     | |-BinaryOperator 0x14d142d38 <line:28:6, col:14> 'int' '<'     | | |-ImplicitCastExpr 0x14d142d20 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x14d142ce0 <col:6> 'int' lvalue Var 0x14d128ac0 'error' 'int'     | | `-IntegerLiteral 0x14d142d00 <col:14> 'int' 0     | `-ReturnStmt 0x14d142d90 <line:29:3, col:10>     |   `-ImplicitCastExpr 0x14d142d78 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x14d142d58 <col:10> 'int' lvalue Var 0x14d128ac0 'error' 'int'     |-CallExpr 0x14e008e00 <line:31:2, col:55> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14d142ea0 <col:2> 'int ()' Function 0x14d142de8 'GITERR_CHECK_VERSION' 'int ()'     | |-CXXDependentScopeMemberExpr 0x14d142ee0 <col:23, col:26> '<dependent type>' contains-errors lvalue ->io     | | `-RecoveryExpr 0x14d142ec0 <col:23> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x14d142fd8 <col:30> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x14d142f80 <col:50> 'char[4]' lvalue \"STR\"     |-IfStmt 0x14e0097f0 <line:33:2, line:40:2>     | |-BinaryOperator 0x14e009328 <line:33:6, line:34:91> 'int' contains-errors '&&'     | | |-CallExpr 0x14e008fa0 <line:33:6, col:37> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x14e008f18 <col:6> 'int ()' Function 0x14e008e60 'git_stream_supports_proxy' 'int ()'     | | | `-CXXDependentScopeMemberExpr 0x14e008f58 <col:32, col:35> '<dependent type>' contains-errors lvalue ->io     | | |   `-RecoveryExpr 0x14e008f38 <col:32> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x14e009310 <line:34:6, col:91> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-CallExpr 0x14e0092d8 <col:7, col:91> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x14e0090a8 <col:7> 'int ()' Function 0x14e008ff0 'git_remote__get_http_proxy' 'int ()'     | |     |-CXXDependentScopeMemberExpr 0x14e009130 <col:34, col:44> '<dependent type>' contains-errors lvalue ->owner     | |     | `-CXXDependentScopeMemberExpr 0x14e0090e8 <col:34, col:37> '<dependent type>' contains-errors lvalue ->owner     | |     |   `-RecoveryExpr 0x14e0090c8 <col:34> '<dependent type>' contains-errors lvalue     | |     |-UnaryOperator 0x14e009258 <col:51, col:72> '<dependent type>' contains-errors prefix '!' cannot overflow     | |     | `-UnaryOperator 0x14e009240 <col:52, col:72> '<dependent type>' contains-errors prefix '!' cannot overflow     | |     |   `-ImplicitCastExpr 0x14e009228 <col:53, col:72> '<dependent type>' contains-errors <LValueToRValue>     | |     |     `-CXXDependentScopeMemberExpr 0x14e0091e0 <col:53, col:72> '<dependent type>' contains-errors lvalue .use_ssl     | |     |       `-CXXDependentScopeMemberExpr 0x14e009198 <col:53, col:56> '<dependent type>' contains-errors lvalue ->connection_data     | |     |         `-RecoveryExpr 0x14e009178 <col:53> '<dependent type>' contains-errors lvalue     | |     `-UnaryOperator 0x14e0092c0 <col:81, col:82> 'char **' prefix '&' cannot overflow     | |       `-DeclRefExpr 0x14e009270 <col:82> 'char *' lvalue Var 0x14d128b58 'proxy_url' 'char *'     | `-CompoundStmt 0x14e0097c8 <col:94, line:40:2>     |   |-BinaryOperator 0x14e009520 <line:35:3, col:48> 'int' contains-errors '='     |   | |-DeclRefExpr 0x14e009348 <col:3> 'int' lvalue Var 0x14d128ac0 'error' 'int'     |   | `-CallExpr 0x14e0094f0 <col:11, col:48> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x14e009448 <col:11> 'int ()' Function 0x14e009390 'git_stream_set_proxy' 'int ()'     |   |   |-CXXDependentScopeMemberExpr 0x14e009488 <col:32, col:35> '<dependent type>' contains-errors lvalue ->io     |   |   | `-RecoveryExpr 0x14e009468 <col:32> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14e0094d0 <col:39> 'char *' lvalue Var 0x14d128b58 'proxy_url' 'char *'     |   |-CallExpr 0x14e0096a8 <line:36:3, col:22> 'int'     |   | |-ImplicitCastExpr 0x14e009690 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14e009620 <col:3> 'int ()' Function 0x14e009568 'git__free' 'int ()'     |   | `-ImplicitCastExpr 0x14e0096d0 <col:13> 'char *' <LValueToRValue>     |   |   `-DeclRefExpr 0x14e009640 <col:13> 'char *' lvalue Var 0x14d128b58 'proxy_url' 'char *'     |   `-IfStmt 0x14e0097a8 <line:38:3, line:39:11>     |     |-BinaryOperator 0x14e009740 <line:38:7, col:15> 'int' '<'     |     | |-ImplicitCastExpr 0x14e009728 <col:7> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x14e0096e8 <col:7> 'int' lvalue Var 0x14d128ac0 'error' 'int'     |     | `-IntegerLiteral 0x14e009708 <col:15> 'int' 0     |     `-ReturnStmt 0x14e009798 <line:39:4, col:11>     |       `-ImplicitCastExpr 0x14e009780 <col:11> 'int' <LValueToRValue>     |         `-DeclRefExpr 0x14e009760 <col:11> 'int' lvalue Var 0x14d128ac0 'error' 'int'     |-BinaryOperator 0x14e0099c0 <line:42:2, col:34> 'int' contains-errors '='     | |-DeclRefExpr 0x14e009810 <col:2> 'int' lvalue Var 0x14d128ac0 'error' 'int'     | `-CallExpr 0x14e009998 <col:10, col:34> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14e009910 <col:10> 'int ()' Function 0x14e009858 'git_stream_connect' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x14e009950 <col:29, col:32> '<dependent type>' contains-errors lvalue ->io     |     `-RecoveryExpr 0x14e009930 <col:29> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14e009aa0 <line:65:2, line:66:10>     | |-BinaryOperator 0x14e009a38 <line:65:6, col:14> 'int' '<'     | | |-ImplicitCastExpr 0x14e009a20 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x14e0099e0 <col:6> 'int' lvalue Var 0x14d128ac0 'error' 'int'     | | `-IntegerLiteral 0x14e009a00 <col:14> 'int' 0     | `-ReturnStmt 0x14e009a90 <line:66:3, col:10>     |   `-ImplicitCastExpr 0x14e009a78 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x14e009a58 <col:10> 'int' lvalue Var 0x14d128ac0 'error' 'int'     |-BinaryOperator 0x14e009b70 <line:68:2, col:17> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14e009b08 <col:2, col:5> '<dependent type>' contains-errors lvalue ->connected     | | `-RecoveryExpr 0x14e009ae0 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14e009ac0 <col:2> 'int *' lvalue ParmVar 0x14d128928 't' 'int *'     | `-IntegerLiteral 0x14e009b50 <col:17> 'int' 1     `-ReturnStmt 0x14e009bb0 <line:69:2, col:9>       `-IntegerLiteral 0x14e009b90 <col:9> 'int' 0 ","19416":"`-FunctionDecl 0x1600fa950  line:1:13 cleanup_async_copy 'void (struct nfsd4_copy *)' static   |-ParmVarDecl 0x1600fa848 <col:32, col:51> col:51 used copy 'struct nfsd4_copy *'   `-CompoundStmt 0x160113750 <line:2:1, line:10:1>     |-CallExpr 0x160112df8 <line:3:2, col:25> 'int'     | |-ImplicitCastExpr 0x160112de0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x160112d70 <col:2> 'int ()' Function 0x160112cb8 'nfs4_free_cp_state' 'int ()'     | `-ImplicitCastExpr 0x160112e20 <col:21> 'struct nfsd4_copy *' <LValueToRValue>     |   `-DeclRefExpr 0x160112d90 <col:21> 'struct nfsd4_copy *' lvalue ParmVar 0x1600fa848 'copy' 'struct nfsd4_copy *'     |-CallExpr 0x160112f98 <line:4:2, col:21> '<dependent type>' contains-errors     | |-DeclRefExpr 0x160112f18 <col:2> 'int ()' Function 0x160112e60 'fput' 'int ()'     | `-RecoveryExpr 0x160112f70 <col:7, col:13> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x160112f38 <col:7> 'struct nfsd4_copy *' lvalue ParmVar 0x1600fa848 'copy' 'struct nfsd4_copy *'     |-CallExpr 0x160113040 <line:5:2, col:21> '<dependent type>' contains-errors     | |-DeclRefExpr 0x160112fc0 <col:2> 'int ()' Function 0x160112e60 'fput' 'int ()'     | `-RecoveryExpr 0x160113018 <col:7, col:13> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x160112fe0 <col:7> 'struct nfsd4_copy *' lvalue ParmVar 0x1600fa848 'copy' 'struct nfsd4_copy *'     |-CallExpr 0x160113228 <line:6:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x160113148 <col:2> 'int ()' Function 0x160113090 'spin_lock' 'int ()'     | `-UnaryOperator 0x160113210 <col:12, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x1601131c8 <col:13, col:27> '<dependent type>' contains-errors lvalue ->async_lock     |     `-RecoveryExpr 0x1601131a0 <col:13, col:19> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x160113168 <col:13> 'struct nfsd4_copy *' lvalue ParmVar 0x1600fa848 'copy' 'struct nfsd4_copy *'     |-CallExpr 0x1601133c8 <line:7:2, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x160113330 <col:2> 'int ()' Function 0x160113278 'list_del' 'int ()'     | `-UnaryOperator 0x1601133b0 <col:11, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x160113388 <col:12, col:18> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x160113350 <col:12> 'struct nfsd4_copy *' lvalue ParmVar 0x1600fa848 'copy' 'struct nfsd4_copy *'     |-CallExpr 0x1601135b0 <line:8:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1601134d0 <col:2> 'int ()' Function 0x160113418 'spin_unlock' 'int ()'     | `-UnaryOperator 0x160113598 <col:14, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x160113550 <col:15, col:29> '<dependent type>' contains-errors lvalue ->async_lock     |     `-RecoveryExpr 0x160113528 <col:15, col:21> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x1601134f0 <col:15> 'struct nfsd4_copy *' lvalue ParmVar 0x1600fa848 'copy' 'struct nfsd4_copy *'     `-CallExpr 0x160113710 <line:9:2, col:20> 'int'       |-ImplicitCastExpr 0x1601136f8 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x1601136b8 <col:2> 'int ()' Function 0x160113600 'nfs4_put_copy' 'int ()'       `-ImplicitCastExpr 0x160113738 <col:16> 'struct nfsd4_copy *' <LValueToRValue>         `-DeclRefExpr 0x1601136d8 <col:16> 'struct nfsd4_copy *' lvalue ParmVar 0x1600fa848 'copy' 'struct nfsd4_copy *' ","19756":"`-FunctionDecl 0x1349282c0  line:1:13 invalid nvme_realize 'void (int *, int **)' static   |-ParmVarDecl 0x134928128 <col:26, col:37> col:37 invalid pci_dev 'int *'   |-ParmVarDecl 0x1349281e0 <col:46, col:54> col:54 invalid errp 'int **'   `-CompoundStmt 0x134942588 <line:2:1, line:38:1>     |-CallExpr 0x134928770 <line:7:5, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x134928680 <col:5> 'int ()' Function 0x1349285c8 'nvme_check_constraints' 'int ()'     | |-RecoveryExpr 0x134928718 <col:28> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x134928758 <col:31, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x134928738 <col:32> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1349419c0 <line:8:5, line:11:5>     | |-RecoveryExpr 0x1349287b8 <line:8:9> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1349419a0 <col:20, line:11:5>     |   |-CallExpr 0x134941960 <line:9:9, col:40> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1349418b8 <col:9> 'int ()' Function 0x134941800 'error_propagate' 'int ()'     |   | |-RecoveryExpr 0x1349418d8 <col:25> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x134941940 <col:31> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x134941990 <line:10:9>     |-IfStmt 0x134941f80 <line:17:5, line:19:5>     | |-RecoveryExpr 0x134941f38 <line:17:9, col:39> '_Bool' contains-errors     | `-CompoundStmt 0x134941f68 <col:42, line:19:5>     |   `-ReturnStmt 0x134941f58 <line:18:9>     |-IfStmt 0x134942148 <line:21:5, line:24:5>     | |-RecoveryExpr 0x1349420c0 <line:21:9, col:33> '_Bool' contains-errors     | `-CompoundStmt 0x134942130 <col:36, line:24:5>     |   `-ReturnStmt 0x134942120 <line:23:9>     `-IfStmt 0x134942568 <line:28:5, line:37:5>       |-RecoveryExpr 0x134942288 <line:28:9, col:30> '_Bool' contains-errors       `-CompoundStmt 0x134942550 <col:35, line:37:5>         `-IfStmt 0x134942430 <line:32:9, line:34:9>           |-RecoveryExpr 0x1349423e8 <line:32:13, col:35> '_Bool' contains-errors           `-CompoundStmt 0x134942418 <col:38, line:34:9>             `-ReturnStmt 0x134942408 <line:33:13> ","20037":"`-FunctionDecl 0x130128288  line:1:1 invalid pcl_set_readback_loc_type 'int (int *, int *)'   |-ParmVarDecl 0x130128128 <col:27, col:40> col:40 invalid pargs 'int *'   |-ParmVarDecl 0x1301281a8 <col:47, col:61> col:61 referenced invalid pcs 'int *'   `-CompoundStmt 0x1301285e8 <line:2:1, line:5:1>     |-BinaryOperator 0x130128598 <line:3:5, col:40> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x130128388 <col:5, col:10> '<dependent type>' contains-errors lvalue ->location_type     | | `-RecoveryExpr 0x130128360 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x130128340 <col:5> 'int *' lvalue ParmVar 0x1301281a8 'pcs' 'int *'     | `-CallExpr 0x130128570 <col:26, col:40> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x130128530 <col:26> 'int ()' Function 0x130128478 'uint_arg' 'int ()'     |   `-RecoveryExpr 0x130128550 <col:35> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1301285d8 <line:4:5, col:12>       `-IntegerLiteral 0x1301285b8 <col:12> 'int' 0 ","20114":"`-FunctionDecl 0x105026740  line:1:6 dma_async_tx_descriptor_init 'void (struct dma_async_tx_descriptor *, struct dma_chan *)'   |-ParmVarDecl 0x10500e248 <col:35, col:67> col:67 used tx 'struct dma_async_tx_descriptor *'   |-ParmVarDecl 0x105026628 <line:2:2, col:19> col:19 used chan 'struct dma_chan *'   `-CompoundStmt 0x1050268e0 <line:3:1, line:8:1>     `-BinaryOperator 0x1050268c0 <line:4:2, col:13> '<dependent type>' contains-errors '='       |-RecoveryExpr 0x105026878 <col:2, col:6> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x105026840 <col:2> 'struct dma_async_tx_descriptor *' lvalue ParmVar 0x10500e248 'tx' 'struct dma_async_tx_descriptor *'       `-DeclRefExpr 0x1050268a0 <col:13> 'struct dma_chan *' lvalue ParmVar 0x105026628 'chan' 'struct dma_chan *' ","19345":"`-FunctionDecl 0x127826710  col:9 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x127826810 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x1278267b8 <<invalid sloc>> Implicit 902 ","19118":"`-FunctionDecl 0x132940a80  line:1:6 base64_encode_xmlrpc 'void (struct buffer_st *, const char *, int)'   |-ParmVarDecl 0x132928648 <col:27, col:45> col:45 used b 'struct buffer_st *'   |-ParmVarDecl 0x1329286c8 <col:48, col:60> col:60 used source 'const char *'   |-ParmVarDecl 0x132928748 <col:68, col:72> col:72 used length 'int'   `-CompoundStmt 0x132945c98 <line:2:1, line:59:1>     |-DeclStmt 0x132940cc0 <line:3:3, col:20>     | |-VarDecl 0x132940ba0 <col:3, col:7> col:7 used i 'int'     | `-VarDecl 0x132940c20 <col:3, col:19> col:10 used hiteof 'int' cinit     |   `-IntegerLiteral 0x132940c88 <col:19> 'int' 0     |-DeclStmt 0x132940d78 <line:4:3, col:17>     | `-VarDecl 0x132940cf0 <col:3, col:16> col:7 used offset 'int' cinit     |   `-IntegerLiteral 0x132940d58 <col:16> 'int' 0     |-CallExpr 0x132940f48 <line:6:3, col:15> 'int'     | |-ImplicitCastExpr 0x132940f30 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x132940ec0 <col:3> 'int ()' Function 0x132940e08 'buffer_new' 'int ()'     | `-ImplicitCastExpr 0x132940f70 <col:14> 'struct buffer_st *' <LValueToRValue>     |   `-DeclRefExpr 0x132940ee0 <col:14> 'struct buffer_st *' lvalue ParmVar 0x132928648 'b' 'struct buffer_st *'     |-ForStmt 0x132941140 <line:10:3, line:13:3>     | |-BinaryOperator 0x132940fc8 <line:10:8, col:12> 'int' '='     | | |-DeclRefExpr 0x132940f88 <col:8> 'int' lvalue Var 0x132940ba0 'i' 'int'     | | `-IntegerLiteral 0x132940fa8 <col:12> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x132941040 <col:15, col:19> 'int' '<'     | | |-ImplicitCastExpr 0x132941028 <col:15> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x132940fe8 <col:15> 'int' lvalue Var 0x132940ba0 'i' 'int'     | | `-IntegerLiteral 0x132941008 <col:19> 'int' 26     | |-UnaryOperator 0x132941080 <col:23, col:24> 'int' postfix '++'     | | `-DeclRefExpr 0x132941060 <col:23> 'int' lvalue Var 0x132940ba0 'i' 'int'     | `-CompoundStmt 0x132941130 <col:28, line:13:3>     |-ForStmt 0x132941310 <line:14:3, line:16:3>     | |-BinaryOperator 0x1329411b8 <line:14:8, col:12> 'int' '='     | | |-DeclRefExpr 0x132941178 <col:8> 'int' lvalue Var 0x132940ba0 'i' 'int'     | | `-IntegerLiteral 0x132941198 <col:12> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x132941230 <col:15, col:19> 'int' '<'     | | |-ImplicitCastExpr 0x132941218 <col:15> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x1329411d8 <col:15> 'int' lvalue Var 0x132940ba0 'i' 'int'     | | `-IntegerLiteral 0x1329411f8 <col:19> 'int' 10     | |-UnaryOperator 0x132941270 <col:23, col:24> 'int' postfix '++'     | | `-DeclRefExpr 0x132941250 <col:23> 'int' lvalue Var 0x132940ba0 'i' 'int'     | `-CompoundStmt 0x132941300 <col:28, line:16:3>     |-WhileStmt 0x132945bc0 <line:20:3, line:56:3>     | |-UnaryOperator 0x1329413c0 <line:20:10, col:11> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1329413a8 <col:11> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x132941388 <col:11> 'int' lvalue Var 0x132940c20 'hiteof' 'int'     | `-CompoundStmt 0x132945b88 <col:19, line:56:3>     |   |-DeclStmt 0x132941618 <line:21:5, col:39>     |   | |-VarDecl 0x132941488 <col:5, col:27> col:19 used igroup 'unsigned char[3]'     |   | `-VarDecl 0x132941598 <col:5, col:38> col:30 used ogroup 'unsigned char[4]'     |   |-DeclStmt 0x132941748 <line:22:5, col:13>     |   | |-VarDecl 0x132941648 <col:5, col:9> col:9 used c 'int'     |   | `-VarDecl 0x1329416c8 <col:5, col:12> col:12 used n 'int'     |   |-BinaryOperator 0x132941970 <line:24:5, col:41> 'unsigned char' '='     |   | |-ArraySubscriptExpr 0x1329417e8 <col:5, col:13> 'unsigned char' lvalue     |   | | |-ImplicitCastExpr 0x1329417d0 <col:5> 'unsigned char *' <ArrayToPointerDecay>     |   | | | `-DeclRefExpr 0x132941760 <col:5> 'unsigned char[3]' lvalue Var 0x132941488 'igroup' 'unsigned char[3]'     |   | | `-IntegerLiteral 0x132941780 <col:12> 'int' 0     |   | `-BinaryOperator 0x132941950 <col:17, col:41> 'unsigned char' '='     |   |   |-ArraySubscriptExpr 0x132941860 <col:17, col:25> 'unsigned char' lvalue     |   |   | |-ImplicitCastExpr 0x132941848 <col:17> 'unsigned char *' <ArrayToPointerDecay>     |   |   | | `-DeclRefExpr 0x132941808 <col:17> 'unsigned char[3]' lvalue Var 0x132941488 'igroup' 'unsigned char[3]'     |   |   | `-IntegerLiteral 0x132941828 <col:24> 'int' 1     |   |   `-BinaryOperator 0x132941930 <col:29, col:41> 'unsigned char' '='     |   |     |-ArraySubscriptExpr 0x1329418d8 <col:29, col:37> 'unsigned char' lvalue     |   |     | |-ImplicitCastExpr 0x1329418c0 <col:29> 'unsigned char *' <ArrayToPointerDecay>     |   |     | | `-DeclRefExpr 0x132941880 <col:29> 'unsigned char[3]' lvalue Var 0x132941488 'igroup' 'unsigned char[3]'     |   |     | `-IntegerLiteral 0x1329418a0 <col:36> 'int' 2     |   |     `-ImplicitCastExpr 0x132941918 <col:41> 'unsigned char' <IntegralCast>     |   |       `-IntegerLiteral 0x1329418f8 <col:41> 'int' 0     |   |-ForStmt 0x1329438f0 <line:25:5, line:33:5>     |   | |-BinaryOperator 0x1329419d0 <line:25:10, col:14> 'int' '='     |   | | |-DeclRefExpr 0x132941990 <col:10> 'int' lvalue Var 0x1329416c8 'n' 'int'     |   | | `-IntegerLiteral 0x1329419b0 <col:14> 'int' 0     |   | |-<<<NULL>>>     |   | |-BinaryOperator 0x132943458 <col:17, col:21> 'int' '<'     |   | | |-ImplicitCastExpr 0x132943440 <col:17> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x132943400 <col:17> 'int' lvalue Var 0x1329416c8 'n' 'int'     |   | | `-IntegerLiteral 0x132943420 <col:21> 'int' 3     |   | |-UnaryOperator 0x132943498 <col:24, col:25> 'int' postfix '++'     |   | | `-DeclRefExpr 0x132943478 <col:24> 'int' lvalue Var 0x1329416c8 'n' 'int'     |   | `-CompoundStmt 0x1329438c0 <col:29, line:33:5>     |   |   |-BinaryOperator 0x132943570 <line:26:7, col:21> 'int' '='     |   |   | |-DeclRefExpr 0x1329434b0 <col:7> 'int' lvalue Var 0x132941648 'c' 'int'     |   |   | `-ImplicitCastExpr 0x132943558 <col:11, col:21> 'int' <IntegralCast>     |   |   |   `-ImplicitCastExpr 0x132943540 <col:11, col:21> 'char' <LValueToRValue>     |   |   |     `-UnaryOperator 0x132943528 <col:11, col:21> 'const char' lvalue prefix '*' cannot overflow     |   |   |       `-ParenExpr 0x132943508 <col:12, col:21> 'const char *'     |   |   |         `-UnaryOperator 0x1329434f0 <col:13, col:19> 'const char *' postfix '++'     |   |   |           `-DeclRefExpr 0x1329434d0 <col:13> 'const char *' lvalue ParmVar 0x1329286c8 'source' 'const char *'     |   |   |-UnaryOperator 0x1329435b0 <line:27:7, col:13> 'int' postfix '++'     |   |   | `-DeclRefExpr 0x132943590 <col:7> 'int' lvalue Var 0x132940cf0 'offset' 'int'     |   |   |-IfStmt 0x132943778 <line:28:7, line:31:7>     |   |   | |-BinaryOperator 0x1329436d0 <line:28:11, col:40> 'int' '||'     |   |   | | |-BinaryOperator 0x132943638 <col:11, col:20> 'int' '>'     |   |   | | | |-ImplicitCastExpr 0x132943608 <col:11> 'int' <LValueToRValue>     |   |   | | | | `-DeclRefExpr 0x1329435c8 <col:11> 'int' lvalue Var 0x132940cf0 'offset' 'int'     |   |   | | | `-ImplicitCastExpr 0x132943620 <col:20> 'int' <LValueToRValue>     |   |   | | |   `-DeclRefExpr 0x1329435e8 <col:20> 'int' lvalue ParmVar 0x132928748 'length' 'int'     |   |   | | `-BinaryOperator 0x1329436b0 <col:30, col:40> 'int' '<='     |   |   | |   |-ImplicitCastExpr 0x132943698 <col:30> 'int' <LValueToRValue>     |   |   | |   | `-DeclRefExpr 0x132943658 <col:30> 'int' lvalue Var 0x132940cf0 'offset' 'int'     |   |   | |   `-IntegerLiteral 0x132943678 <col:40> 'int' 0     |   |   | `-CompoundStmt 0x132943758 <col:43, line:31:7>     |   |   |   |-BinaryOperator 0x132943730 <line:29:2, col:11> 'int' '='     |   |   |   | |-DeclRefExpr 0x1329436f0 <col:2> 'int' lvalue Var 0x132940c20 'hiteof' 'int'     |   |   |   | `-IntegerLiteral 0x132943710 <col:11> 'int' 1     |   |   |   `-BreakStmt 0x132943750 <line:30:2>     |   |   `-BinaryOperator 0x1329438a0 <line:32:7, col:35> 'unsigned char' '='     |   |     |-ArraySubscriptExpr 0x132943808 <col:7, col:15> 'unsigned char' lvalue     |   |     | |-ImplicitCastExpr 0x1329437d8 <col:7> 'unsigned char *' <ArrayToPointerDecay>     |   |     | | `-DeclRefExpr 0x132943798 <col:7> 'unsigned char[3]' lvalue Var 0x132941488 'igroup' 'unsigned char[3]'     |   |     | `-ImplicitCastExpr 0x1329437f0 <col:14> 'int' <LValueToRValue>     |   |     |   `-DeclRefExpr 0x1329437b8 <col:14> 'int' lvalue Var 0x1329416c8 'n' 'int'     |   |     `-CStyleCastExpr 0x132943878 <col:19, col:35> 'unsigned char' <IntegralCast>     |   |       `-ImplicitCastExpr 0x132943860 <col:35> 'int' <LValueToRValue> part_of_explicit_cast     |   |         `-DeclRefExpr 0x132943828 <col:35> 'int' lvalue Var 0x132941648 'c' 'int'     |   `-IfStmt 0x132945b68 <line:34:5, line:55:5>     |     |-BinaryOperator 0x132943980 <line:34:9, col:13> 'int' '>'     |     | |-ImplicitCastExpr 0x132943968 <col:9> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x132943928 <col:9> 'int' lvalue Var 0x1329416c8 'n' 'int'     |     | `-IntegerLiteral 0x132943948 <col:13> 'int' 0     |     `-CompoundStmt 0x132945b48 <col:16, line:55:5>     |       |-IfStmt 0x1329455b8 <line:42:7, line:47:7>     |       | |-BinaryOperator 0x132944328 <line:42:11, col:15> 'int' '<'     |       | | |-ImplicitCastExpr 0x132944310 <col:11> 'int' <LValueToRValue>     |       | | | `-DeclRefExpr 0x1329442d0 <col:11> 'int' lvalue Var 0x1329416c8 'n' 'int'     |       | | `-IntegerLiteral 0x1329442f0 <col:15> 'int' 3     |       | `-CompoundStmt 0x132945598 <col:18, line:47:7>     |       |   |-BinaryOperator 0x132945400 <line:43:2, col:14> 'unsigned char' '='     |       |   | |-ArraySubscriptExpr 0x1329443a0 <col:2, col:10> 'unsigned char' lvalue     |       |   | | |-ImplicitCastExpr 0x132944388 <col:2> 'unsigned char *' <ArrayToPointerDecay>     |       |   | | | `-DeclRefExpr 0x132944348 <col:2> 'unsigned char[4]' lvalue Var 0x132941598 'ogroup' 'unsigned char[4]'     |       |   | | `-IntegerLiteral 0x132944368 <col:9> 'int' 3     |       |   | `-ImplicitCastExpr 0x1329443d8 <col:14> 'unsigned char' <IntegralCast>     |       |   |   `-CharacterLiteral 0x1329443c0 <col:14> 'int' 61     |       |   `-IfStmt 0x132945578 <line:44:2, line:46:2>     |       |     |-BinaryOperator 0x132945478 <line:44:6, col:10> 'int' '<'     |       |     | |-ImplicitCastExpr 0x132945460 <col:6> 'int' <LValueToRValue>     |       |     | | `-DeclRefExpr 0x132945420 <col:6> 'int' lvalue Var 0x1329416c8 'n' 'int'     |       |     | `-IntegerLiteral 0x132945440 <col:10> 'int' 2     |       |     `-CompoundStmt 0x132945560 <col:13, line:46:2>     |       |       `-BinaryOperator 0x132945540 <line:45:4, col:16> 'unsigned char' '='     |       |         |-ArraySubscriptExpr 0x1329454f0 <col:4, col:12> 'unsigned char' lvalue     |       |         | |-ImplicitCastExpr 0x1329454d8 <col:4> 'unsigned char *' <ArrayToPointerDecay>     |       |         | | `-DeclRefExpr 0x132945498 <col:4> 'unsigned char[4]' lvalue Var 0x132941598 'ogroup' 'unsigned char[4]'     |       |         | `-IntegerLiteral 0x1329454b8 <col:11> 'int' 2     |       |         `-ImplicitCastExpr 0x132945528 <col:16> 'unsigned char' <IntegralCast>     |       |           `-CharacterLiteral 0x132945510 <col:16> 'int' 61     |       `-ForStmt 0x132945b10 <line:48:7, line:54:7>     |         |-BinaryOperator 0x132945618 <line:48:12, col:16> 'int' '='     |         | |-DeclRefExpr 0x1329455d8 <col:12> 'int' lvalue Var 0x132940ba0 'i' 'int'     |         | `-IntegerLiteral 0x1329455f8 <col:16> 'int' 0     |         |-<<<NULL>>>     |         |-BinaryOperator 0x132945690 <col:19, col:23> 'int' '<'     |         | |-ImplicitCastExpr 0x132945678 <col:19> 'int' <LValueToRValue>     |         | | `-DeclRefExpr 0x132945638 <col:19> 'int' lvalue Var 0x132940ba0 'i' 'int'     |         | `-IntegerLiteral 0x132945658 <col:23> 'int' 4     |         |-UnaryOperator 0x1329456d0 <col:26, col:27> 'int' postfix '++'     |         | `-DeclRefExpr 0x1329456b0 <col:26> 'int' lvalue Var 0x132940ba0 'i' 'int'     |         `-CompoundStmt 0x132945af0 <col:31, line:54:7>     |           |-CallExpr 0x1329458b0 <line:49:2, col:25> 'int'     |           | |-ImplicitCastExpr 0x132945898 <col:2> 'int (*)()' <FunctionToPointerDecay>     |           | | `-DeclRefExpr 0x1329457c8 <col:2> 'int ()' Function 0x132945710 'buffer_add' 'int ()'     |           | |-ImplicitCastExpr 0x1329458e0 <col:13> 'struct buffer_st *' <LValueToRValue>     |           | | `-DeclRefExpr 0x1329457e8 <col:13> 'struct buffer_st *' lvalue ParmVar 0x132928648 'b' 'struct buffer_st *'     |           | `-ImplicitCastExpr 0x132945910 <col:16, col:24> 'int' <IntegralCast>     |           |   `-ImplicitCastExpr 0x1329458f8 <col:16, col:24> 'unsigned char' <LValueToRValue>     |           |     `-ArraySubscriptExpr 0x132945878 <col:16, col:24> 'unsigned char' lvalue     |           |       |-ImplicitCastExpr 0x132945848 <col:16> 'unsigned char *' <ArrayToPointerDecay>     |           |       | `-DeclRefExpr 0x132945808 <col:16> 'unsigned char[4]' lvalue Var 0x132941598 'ogroup' 'unsigned char[4]'     |           |       `-ImplicitCastExpr 0x132945860 <col:23> 'int' <LValueToRValue>     |           |         `-DeclRefExpr 0x132945828 <col:23> 'int' lvalue Var 0x132940ba0 'i' 'int'     |           `-IfStmt 0x132945ad0 <line:50:2, line:53:2>     |             |-UnaryOperator 0x1329459e8 <line:50:6, col:22> '<dependent type>' contains-errors prefix '!' cannot overflow     |             | `-ParenExpr 0x1329459c8 <col:7, col:22> '<dependent type>' contains-errors     |             |   `-BinaryOperator 0x1329459a8 <col:8, col:20> '<dependent type>' contains-errors '%'     |             |     |-RecoveryExpr 0x132945960 <col:8, col:11> '<dependent type>' contains-errors lvalue     |             |     | `-DeclRefExpr 0x132945928 <col:8> 'struct buffer_st *' lvalue ParmVar 0x132928648 'b' 'struct buffer_st *'     |             |     `-IntegerLiteral 0x132945988 <col:20> 'int' 72     |             `-CompoundStmt 0x132945ab8 <col:25, line:53:2>     |               `-CallExpr 0x132945a70 <line:52:4, col:22> 'int'     |                 |-ImplicitCastExpr 0x132945a58 <col:4> 'int (*)()' <FunctionToPointerDecay>     |                 | `-DeclRefExpr 0x132945a00 <col:4> 'int ()' Function 0x132945710 'buffer_add' 'int ()'     |                 |-ImplicitCastExpr 0x132945aa0 <col:15> 'struct buffer_st *' <LValueToRValue>     |                 | `-DeclRefExpr 0x132945a20 <col:15> 'struct buffer_st *' lvalue ParmVar 0x132928648 'b' 'struct buffer_st *'     |                 `-CharacterLiteral 0x132945a40 <col:18> 'int' 10     `-CallExpr 0x132945c50 <line:58:3, col:21> 'int'       |-ImplicitCastExpr 0x132945c38 <col:3> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x132945be0 <col:3> 'int ()' Function 0x132945710 'buffer_add' 'int ()'       |-ImplicitCastExpr 0x132945c80 <col:14> 'struct buffer_st *' <LValueToRValue>       | `-DeclRefExpr 0x132945c00 <col:14> 'struct buffer_st *' lvalue ParmVar 0x132928648 'b' 'struct buffer_st *'       `-CharacterLiteral 0x132945c20 <col:17> 'int' 10 ","19716":"`-FunctionDecl 0x15a922958  line:1:24 invalid nft_set_lookup_byid 'struct nft_set *(const struct net *, const struct nlattr *, int)' static   |-ParmVarDecl 0x14a80e2e8 <col:44, col:62> col:62 used net 'const struct net *'   |-ParmVarDecl 0x15a9226c8 <line:2:9, col:30> col:30 nla 'const struct nlattr *'   |-ParmVarDecl 0x15a922760 <col:35, col:38> col:38 invalid genmask 'int'   `-CompoundStmt 0x14a82aec8 <line:3:1, line:18:1>     |-DeclStmt 0x15a922e48 <line:4:2, col:51>     | |-RecordDecl 0x15a922a18 <col:2, col:9> col:9 struct nftables_pernet     | `-VarDecl 0x15a922b88 <col:2, col:50> col:26 used nft_net 'struct nftables_pernet *' cinit     |   `-ImplicitCastExpr 0x15a922e18 <col:36, col:50> 'struct nftables_pernet *' <IntegralToPointer>     |     `-CallExpr 0x15a922dd8 <col:36, col:50> 'int'     |       |-ImplicitCastExpr 0x15a922dc0 <col:36> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x15a922d50 <col:36> 'int ()' Function 0x15a922c98 'nft_pernet' 'int ()'     |       `-ImplicitCastExpr 0x15a922e00 <col:47> 'const struct net *' <LValueToRValue>     |         `-DeclRefExpr 0x15a922d70 <col:47> 'const struct net *' lvalue ParmVar 0x14a80e2e8 'net' 'const struct net *'     |-DeclStmt 0x15a923048 <line:6:2, col:25>     | |-RecordDecl 0x15a922e60 <col:2, col:9> col:9 struct nft_trans     | `-VarDecl 0x15a922fc8 <col:2, col:20> col:20 used trans 'struct nft_trans *'     |-CallExpr 0x15a923268 <line:8:2, col:56> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15a923140 <col:2> 'int ()' Function 0x15a923088 'list_for_each_entry' 'int ()'     | |-DeclRefExpr 0x15a923160 <col:22> 'struct nft_trans *' lvalue Var 0x15a922fc8 'trans' 'struct nft_trans *'     | |-UnaryOperator 0x15a9231e0 <col:29, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x15a9231b8 <col:30, col:39> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15a923180 <col:30> 'struct nftables_pernet *' lvalue Var 0x15a922b88 'nft_net' 'struct nftables_pernet *'     | `-RecoveryExpr 0x15a923248 <col:52> '<dependent type>' contains-errors lvalue     |-CompoundStmt 0x14a82acb8 <col:58, line:16:2>     | `-IfStmt 0x14a82ac98 <line:9:3, line:15:3>     |   |-BinaryOperator 0x15a923358 <line:9:7, col:26> 'int' contains-errors '=='     |   | |-RecoveryExpr 0x15a9232d8 <col:7, col:14> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x15a9232a0 <col:7> 'struct nft_trans *' lvalue Var 0x15a922fc8 'trans' 'struct nft_trans *'     |   | `-RecoveryExpr 0x15a923338 <col:26> '<dependent type>' contains-errors lvalue     |   `-CompoundStmt 0x14a82ac78 <col:42, line:15:3>     |     |-DeclStmt 0x14a82a800 <line:10:4, col:46>     |     | `-VarDecl 0x15a923408 <col:4, col:45> col:20 used set 'struct nft_set *' cinit     |     |   `-ImplicitCastExpr 0x15a9235e8 <col:26, col:45> 'struct nft_set *' <IntegralToPointer>     |     |     `-CallExpr 0x15a9235a8 <col:26, col:45> 'int'     |     |       |-ImplicitCastExpr 0x15a923590 <col:26> 'int (*)()' <FunctionToPointerDecay>     |     |       | `-DeclRefExpr 0x15a923550 <col:26> 'int ()' Function 0x15a923498 'nft_trans_set' 'int ()'     |     |       `-ImplicitCastExpr 0x15a9235d0 <col:40> 'struct nft_trans *' <LValueToRValue>     |     |         `-DeclRefExpr 0x15a923570 <col:40> 'struct nft_trans *' lvalue Var 0x15a922fc8 'trans' 'struct nft_trans *'     |     `-IfStmt 0x14a82ac58 <line:12:4, line:14:12>     |       |-BinaryOperator 0x14a82abf0 <line:12:8, line:13:39> 'int' contains-errors '&&'     |       | |-BinaryOperator 0x14a82abd0 <line:12:8, col:36> 'int' contains-errors '=='     |       | | |-RecoveryExpr 0x14a82ab58 <col:8> '<dependent type>' contains-errors lvalue     |       | | `-CallExpr 0x14a82ab90 <col:14, col:36> 'int'     |       | |   |-ImplicitCastExpr 0x14a82ab78 <col:14> 'int (*)()' <FunctionToPointerDecay>     |       | |   | `-DeclRefExpr 0x14a82a910 <col:14> 'int ()' Function 0x14a82a858 'nft_trans_set_id' 'int ()'     |       | |   `-ImplicitCastExpr 0x14a82abb8 <col:31> 'struct nft_trans *' <LValueToRValue>     |       | |     `-DeclRefExpr 0x14a82a930 <col:31> 'struct nft_trans *' lvalue Var 0x15a922fc8 'trans' 'struct nft_trans *'     |       | `-CallExpr 0x14a82ab08 <line:13:8, col:39> '<dependent type>' contains-errors     |       |   |-DeclRefExpr 0x14a82aaa8 <col:8> 'int ()' Function 0x14a82a9f0 'nft_active_genmask' 'int ()'     |       |   |-DeclRefExpr 0x14a82aac8 <col:27> 'struct nft_set *' lvalue Var 0x15a923408 'set' 'struct nft_set *'     |       |   `-RecoveryExpr 0x14a82aae8 <col:32> '<dependent type>' contains-errors lvalue     |       `-ReturnStmt 0x14a82ac48 <line:14:5, col:12>     |         `-ImplicitCastExpr 0x14a82ac30 <col:12> 'struct nft_set *' <LValueToRValue>     |           `-DeclRefExpr 0x14a82ac10 <col:12> 'struct nft_set *' lvalue Var 0x15a923408 'set' 'struct nft_set *'     `-ReturnStmt 0x14a82aeb8 <line:17:2, col:24>       `-CallExpr 0x14a82ae90 <col:9, col:24> '<dependent type>' contains-errors         |-DeclRefExpr 0x14a82adb0 <col:9> 'int ()' Function 0x14a82acf8 'ERR_PTR' 'int ()'         `-UnaryOperator 0x14a82ae78 <col:17, col:18> '<dependent type>' contains-errors prefix '-' cannot overflow           `-ImplicitCastExpr 0x14a82ae60 <col:18> '<dependent type>' contains-errors <LValueToRValue>             `-RecoveryExpr 0x14a82ae40 <col:18> '<dependent type>' contains-errors lvalue ","19968":"`-FunctionDecl 0x14c00e358  line:1:5 nfc_llcp_send_symm 'int (struct nfc_dev *)'   |-ParmVarDecl 0x14c00e248 <col:24, col:40> col:40 used dev 'struct nfc_dev *'   `-CompoundStmt 0x14c029ed0 <line:2:1, line:30:1>     |-DeclStmt 0x14c026838 <line:3:2, col:21>     | |-RecordDecl 0x14c026650 <col:2, col:9> col:9 struct sk_buff     | `-VarDecl 0x14c0267b8 <col:2, col:18> col:18 used skb 'struct sk_buff *'     |-DeclStmt 0x14c026a38 <line:4:2, col:30>     | |-RecordDecl 0x14c026850 <col:2, col:9> col:9 struct nfc_llcp_local     | `-VarDecl 0x14c0269b8 <col:2, col:25> col:25 used local 'struct nfc_llcp_local *'     |-CallExpr 0x14c026c48 <line:7:2, col:16> 'int'     | |-ImplicitCastExpr 0x14c026c30 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14c026b80 <col:2> 'int ()' Function 0x14c026ac8 'pr_debug' 'int ()'     | `-ImplicitCastExpr 0x14c026c70 <col:11> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x14c026be0 <col:11> 'char[4]' lvalue \"STR\"     |-BinaryOperator 0x14c026e38 <line:9:2, col:33> 'struct nfc_llcp_local *' '='     | |-DeclRefExpr 0x14c026c88 <col:2> 'struct nfc_llcp_local *' lvalue Var 0x14c0269b8 'local' 'struct nfc_llcp_local *'     | `-ImplicitCastExpr 0x14c026e20 <col:10, col:33> 'struct nfc_llcp_local *' <IntegralToPointer>     |   `-CallExpr 0x14c026de0 <col:10, col:33> 'int'     |     |-ImplicitCastExpr 0x14c026dc8 <col:10> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14c026d88 <col:10> 'int ()' Function 0x14c026cd0 'nfc_llcp_find_local' 'int ()'     |     `-ImplicitCastExpr 0x14c026e08 <col:30> 'struct nfc_dev *' <LValueToRValue>     |       `-DeclRefExpr 0x14c026da8 <col:30> 'struct nfc_dev *' lvalue ParmVar 0x14c00e248 'dev' 'struct nfc_dev *'     |-IfStmt 0x14c026f98 <line:10:2, line:11:11>     | |-BinaryOperator 0x14c026ed0 <line:10:6, col:15> 'int' contains-errors '=='     | | |-DeclRefExpr 0x14c026e58 <col:6> 'struct nfc_llcp_local *' lvalue Var 0x14c0269b8 'local' 'struct nfc_llcp_local *'     | | `-RecoveryExpr 0x14c026eb0 <col:15> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14c026f88 <line:11:3, col:11>     |   `-UnaryOperator 0x14c026f70 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14c026f58 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14c026f38 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14c0272f8 <line:16:2, col:34> 'struct sk_buff *' contains-errors '='     | |-DeclRefExpr 0x14c0270e8 <col:2> 'struct sk_buff *' lvalue Var 0x14c0267b8 'skb' 'struct sk_buff *'     | `-CallExpr 0x14c0272c8 <col:8, col:34> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14c0271e8 <col:8> 'int ()' Function 0x14c027130 'alloc_skb' 'int ()'     |   |-RecoveryExpr 0x14c027288 <col:18> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x14c0272a8 <col:24> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14c027458 <line:17:2, line:18:11>     | |-BinaryOperator 0x14c027390 <line:17:6, col:13> 'int' contains-errors '=='     | | |-DeclRefExpr 0x14c027318 <col:6> 'struct sk_buff *' lvalue Var 0x14c0267b8 'skb' 'struct sk_buff *'     | | `-RecoveryExpr 0x14c027370 <col:13> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14c027448 <line:18:3, col:11>     |   `-UnaryOperator 0x14c027430 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14c027418 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14c0273f8 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14c0298a8 <line:20:2, col:53> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c027558 <col:2> 'int ()' Function 0x14c0274a0 'skb_reserve' 'int ()'     | |-DeclRefExpr 0x14c027578 <col:14> 'struct sk_buff *' lvalue Var 0x14c0267b8 'skb' 'struct sk_buff *'     | `-BinaryOperator 0x14c029888 <col:19, col:38> '<dependent type>' contains-errors '+'     |   |-RecoveryExpr 0x14c0275d0 <col:19, col:24> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14c027598 <col:19> 'struct nfc_dev *' lvalue ParmVar 0x14c00e248 'dev' 'struct nfc_dev *'     |   `-RecoveryExpr 0x14c029868 <col:38> '<dependent type>' contains-errors lvalue     `-CallExpr 0x14c029b90 <line:24:2, col:21> 'int'       |-ImplicitCastExpr 0x14c029b78 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x14c029b38 <col:2> 'int ()' Function 0x14c029a80 '__net_timestamp' 'int ()'       `-ImplicitCastExpr 0x14c029bb8 <col:18> 'struct sk_buff *' <LValueToRValue>         `-DeclRefExpr 0x14c029b58 <col:18> 'struct sk_buff *' lvalue Var 0x14c0267b8 'skb' 'struct sk_buff *' ","20096":"`-FunctionDecl 0x14e80de38  line:1:1 TEST 'int (int, int)'   |-ParmVarDecl 0x14e80dd58 <col:6> col:6 BasicFlatBufferModel 'int'   |-ParmVarDecl 0x14e80dcd8 <col:28> col:28 TestUnsupportedRecursion 'int'   `-CompoundStmt 0x14e826bf0 <col:54, line:15:1>     |-DeclStmt 0x14e826690 <line:2:3, line:3:12>     | `-VarDecl 0x14e80df50 <line:2:3, line:3:7> line:2:14 model_path 'const int' auto cinit     |   `-ImplicitCastExpr 0x14e80e038 <line:3:7> 'int' <PointerToIntegral>     |     `-ImplicitCastExpr 0x14e80e020 <col:7> 'char *' <ArrayToPointerDecay>     |       `-StringLiteral 0x14e80e000 <col:7> 'char[4]' lvalue \"STR\"     |-RecoveryExpr 0x14e8266f0 <line:5:3> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14e8268e0 <line:7:3, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14e826820 <col:3> 'int ()' Function 0x14e826768 'ASSERT_NE' 'int ()'     | |-RecoveryExpr 0x14e8268a0 <col:13> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14e8268c0 <col:20> '<dependent type>' contains-errors lvalue     |-RecoveryExpr 0x14e826940 <line:9:3> '<dependent type>' contains-errors lvalue     `-RecoveryExpr 0x14e826990 <line:11:3> '<dependent type>' contains-errors lvalue ","19935":"`-FunctionDecl 0x13e82a800  col:2 implicit used strncpy 'char *(char *, const char *, unsigned long)' extern   |-ParmVarDecl 0x13e82a900 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x13e82a968 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x13e82a9d0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x13e82a8a8 <<invalid sloc>> Implicit 886 ","19325":"`-FunctionDecl 0x152128588  line:1:12 invalid drbg_ec_instantiate 'int (int *, const unsigned char *, int, const unsigned char *, int, const unsigned char *, int)' static   |-ParmVarDecl 0x152128128 <col:32, col:42> col:42 referenced invalid dctx 'int *'   |-ParmVarDecl 0x1521281d8 <line:2:5, col:26> col:26 used ent 'const unsigned char *'   |-ParmVarDecl 0x152128258 <col:31, col:38> col:38 invalid ent_len 'int'   |-ParmVarDecl 0x1521282d8 <line:3:5, col:26> col:26 used nonce 'const unsigned char *'   |-ParmVarDecl 0x152128358 <col:33, col:40> col:40 invalid nonce_len 'int'   |-ParmVarDecl 0x1521283d8 <line:4:5, col:26> col:26 used pstr 'const unsigned char *'   |-ParmVarDecl 0x152128458 <col:32, col:39> col:39 invalid pstr_len 'int'   `-CompoundStmt 0x152142068 <line:5:2, line:13:2>     |-IfStmt 0x152141c20 <line:7:2, line:9:10>     | |-UnaryOperator 0x152141bd8 <line:7:6, line:8:50> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x152141b78 <line:7:7, line:8:50> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x1521418e0 <line:7:7> 'int ()' Function 0x152141828 'hash_df' 'int ()'     | |   |-RecoveryExpr 0x152141900 <col:15> '<dependent type>' contains-errors lvalue     | |   |-CXXDependentScopeMemberExpr 0x152141b30 <col:21, col:27> '<dependent type>' contains-errors lvalue ->sbuf     | |   | `-RecoveryExpr 0x152141b10 <col:21> '<dependent type>' contains-errors lvalue     | |   |-DeclRefExpr 0x152141980 <line:8:4> 'const unsigned char *' lvalue ParmVar 0x1521281d8 'ent' 'const unsigned char *'     | |   |-RecoveryExpr 0x1521419a0 <col:9> '<dependent type>' contains-errors lvalue     | |   |-DeclRefExpr 0x1521419c0 <col:18> 'const unsigned char *' lvalue ParmVar 0x1521282d8 'nonce' 'const unsigned char *'     | |   |-RecoveryExpr 0x1521419e0 <col:25> '<dependent type>' contains-errors lvalue     | |   |-DeclRefExpr 0x152141a00 <col:36> 'const unsigned char *' lvalue ParmVar 0x1521283d8 'pstr' 'const unsigned char *'     | |   `-RecoveryExpr 0x152141a20 <col:42> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x152141c10 <line:9:3, col:10>     |   `-IntegerLiteral 0x152141bf0 <col:10> 'int' 0     |-IfStmt 0x152142018 <line:10:2, line:11:10>     | |-UnaryOperator 0x152141fd0 <line:10:6, col:43> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x152141f98 <col:7, col:43> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x152141d20 <col:7> 'int ()' Function 0x152141c68 'bin2bnbits' 'int ()'     | |   |-RecoveryExpr 0x152141d40 <col:18> '<dependent type>' contains-errors lvalue     | |   |-CXXDependentScopeMemberExpr 0x152141ee8 <col:24, col:30> '<dependent type>' contains-errors lvalue ->s     | |   | `-RecoveryExpr 0x152141ec8 <col:24> '<dependent type>' contains-errors lvalue     | |   `-CXXDependentScopeMemberExpr 0x152141f50 <col:33, col:39> '<dependent type>' contains-errors lvalue ->sbuf     | |     `-RecoveryExpr 0x152141f30 <col:33> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x152142008 <line:11:3, col:10>     |   `-IntegerLiteral 0x152141fe8 <col:10> 'int' 0     `-ReturnStmt 0x152142058 <line:12:2, col:9>       `-IntegerLiteral 0x152142038 <col:9> 'int' 1 ","19823":"`-FunctionDecl 0x14e928478  line:1:1 invalid read_one_cert 'int (int *, const char *, const char *, int, int **)'   |-ParmVarDecl 0x14e928128 <col:16, col:35> col:35 invalid info 'int *'   |-ParmVarDecl 0x14e9281a8 <line:2:16, col:28> col:28 used setting_name 'const char *'   |-ParmVarDecl 0x14e928228 <line:3:16, col:28> col:28 used key 'const char *'   |-ParmVarDecl 0x14e9282a8 <line:4:16, col:25> col:25 invalid fail_if_missing 'int'   |-ParmVarDecl 0x14e928360 <line:5:16, col:25> col:25 invalid error 'int **'   `-CompoundStmt 0x14e942350 <line:6:1, line:18:1>     |-DeclStmt 0x14e928600 <line:7:2, col:20>     | `-VarDecl 0x14e928560 <col:2, col:16> col:8 used value 'char *' cinit     |   `-RecoveryExpr 0x14e9285e0 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14e9422e8 <line:9:2, line:16:2>     | |-CallExpr 0x14e941918 <line:9:6, col:84> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14e928770 <col:6> 'int ()' Function 0x14e9286b8 'nm_gconf_get_string_helper' 'int ()'     | | |-CXXDependentScopeMemberExpr 0x14e9287b0 <col:34, col:40> '<dependent type>' contains-errors lvalue ->client     | | | `-RecoveryExpr 0x14e928790 <col:34> '<dependent type>' contains-errors lvalue     | | |-CXXDependentScopeMemberExpr 0x14e941820 <col:48, col:54> '<dependent type>' contains-errors lvalue ->dir     | | | `-RecoveryExpr 0x14e941800 <col:48> '<dependent type>' contains-errors lvalue     | | |-DeclRefExpr 0x14e941868 <col:59> 'const char *' lvalue ParmVar 0x14e928228 'key' 'const char *'     | | |-DeclRefExpr 0x14e941888 <col:64> 'const char *' lvalue ParmVar 0x14e9281a8 'setting_name' 'const char *'     | | `-UnaryOperator 0x14e941900 <col:78, col:79> 'char **' contains-errors prefix '&' cannot overflow     | |   `-DeclRefExpr 0x14e9418a8 <col:79> 'char *' contains-errors lvalue Var 0x14e928560 'value' 'char *'     | `-CompoundStmt 0x14e9422d0 <col:87, line:16:2>     |   `-IfStmt 0x14e941fc8 <line:10:3, line:13:3>     |     |-BinaryOperator 0x14e941b88 <line:10:7, col:65> 'int' contains-errors '&&'     |     | |-RecoveryExpr 0x14e941960 <col:7> '<dependent type>' contains-errors lvalue     |     | `-UnaryOperator 0x14e941b70 <col:26, col:65> '<dependent type>' contains-errors prefix '!' cannot overflow     |     |   `-CallExpr 0x14e941b40 <col:27, col:65> '<dependent type>' contains-errors     |     |     |-DeclRefExpr 0x14e941a60 <col:27> 'int ()' Function 0x14e9419a8 'g_file_test' 'int ()'     |     |     |-DeclRefExpr 0x14e941a80 <col:40> 'char *' contains-errors lvalue Var 0x14e928560 'value' 'char *'     |     |     `-RecoveryExpr 0x14e941b20 <col:47> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x14e941fa8 <col:68, line:13:3>     |       |-CallExpr 0x14e941f18 <line:11:4, col:45> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x14e941c88 <col:4> 'int ()' Function 0x14e941bd0 'g_set_error' 'int ()'     |       | |-RecoveryExpr 0x14e941ca8 <col:17> '<dependent type>' contains-errors lvalue     |       | |-IntegerLiteral 0x14e941cc8 <col:24> 'int' 0     |       | |-IntegerLiteral 0x14e941ce8 <col:27> 'int' 0     |       | |-CallExpr 0x14e941eb8 <col:30, col:37> 'int'     |       | | |-ImplicitCastExpr 0x14e941ea0 <col:30> 'int (*)()' <FunctionToPointerDecay>     |       | | | `-DeclRefExpr 0x14e941de8 <col:30> 'int ()' Function 0x14e941d30 '_' 'int ()'     |       | | `-ImplicitCastExpr 0x14e941ee0 <col:32> 'char *' <ArrayToPointerDecay>     |       | |   `-StringLiteral 0x14e941e50 <col:32> 'char[4]' lvalue \"STR\"     |       | `-DeclRefExpr 0x14e941ef8 <col:40> 'char *' contains-errors lvalue Var 0x14e928560 'value' 'char *'     |       `-ReturnStmt 0x14e941f98 <line:12:4, col:11>     |         `-RecoveryExpr 0x14e941f78 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14e942340 <line:17:2, col:9>       `-RecoveryExpr 0x14e942320 <col:9> '<dependent type>' contains-errors lvalue ","19087":"`-FunctionDecl 0x127140b58  line:1:5 do_remount_sb 'int (struct super_block *, int, void *, int)'   |-ParmVarDecl 0x127128648 <col:19, col:39> col:39 used sb 'struct super_block *'   |-ParmVarDecl 0x1271286c8 <col:43, col:47> col:47 used flags 'int'   |-ParmVarDecl 0x127128748 <col:54, col:60> col:60 used data 'void *'   |-ParmVarDecl 0x127140a00 <col:66, col:70> col:70 used force 'int'   `-CompoundStmt 0x127144070 <line:2:1, line:55:1>     |-DeclStmt 0x127140ce8 <line:3:2, col:12>     | `-VarDecl 0x127140c80 <col:2, col:6> col:6 used retval 'int'     |-DeclStmt 0x127140d80 <line:4:2, col:16>     | `-VarDecl 0x127140d18 <col:2, col:6> col:6 used remount_ro 'int'     |-IfStmt 0x127140f78 <line:6:2, line:7:11>     | |-BinaryOperator 0x127140eb0 <line:6:6, col:30> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x127140df8 <col:6, col:20> '<dependent type>' contains-errors lvalue .frozen     | | | `-RecoveryExpr 0x127140dd0 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x127140d98 <col:6> 'struct super_block *' lvalue ParmVar 0x127128648 'sb' 'struct super_block *'     | | `-RecoveryExpr 0x127140e90 <col:30> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x127140f68 <line:7:3, col:11>     |   `-UnaryOperator 0x127140f50 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x127140f38 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x127140f18 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x127141208 <line:14:2, line:15:21>     | |-BinaryOperator 0x127141010 <line:14:6, col:14> '<dependent type>' contains-errors '&'     | | |-DeclRefExpr 0x127140f98 <col:6> 'int' lvalue ParmVar 0x1271286c8 'flags' 'int'     | | `-RecoveryExpr 0x127140ff0 <col:14> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x1271411c8 <line:15:3, col:21> 'int'     |   |-ImplicitCastExpr 0x1271411b0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x127141140 <col:3> 'int ()' Function 0x127141088 'acct_auto_close' 'int ()'     |   `-ImplicitCastExpr 0x1271411f0 <col:19> 'struct super_block *' <LValueToRValue>     |     `-DeclRefExpr 0x127141160 <col:19> 'struct super_block *' lvalue ParmVar 0x127128648 'sb' 'struct super_block *'     |-CallExpr 0x127141360 <line:16:2, col:21> 'int'     | |-ImplicitCastExpr 0x127141348 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x127141308 <col:2> 'int ()' Function 0x127141250 'shrink_dcache_sb' 'int ()'     | `-ImplicitCastExpr 0x127141388 <col:19> 'struct super_block *' <LValueToRValue>     |   `-DeclRefExpr 0x127141328 <col:19> 'struct super_block *' lvalue ParmVar 0x127128648 'sb' 'struct super_block *'     |-CallExpr 0x1271414d8 <line:17:2, col:20> 'int'     | |-ImplicitCastExpr 0x1271414c0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x127141480 <col:2> 'int ()' Function 0x1271413c8 'sync_filesystem' 'int ()'     | `-ImplicitCastExpr 0x127141500 <col:18> 'struct super_block *' <LValueToRValue>     |   `-DeclRefExpr 0x1271414a0 <col:18> 'struct super_block *' lvalue ParmVar 0x127128648 'sb' 'struct super_block *'     |-IfStmt 0x1271432e8 <line:22:2, line:30:2>     | |-ImplicitCastExpr 0x127141648 <line:22:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x127141628 <col:6> 'int' lvalue Var 0x127140d18 'remount_ro' 'int'     | `-CompoundStmt 0x1271432d0 <col:18, line:30:2>     |   `-IfStmt 0x1271432a0 <line:23:3, line:29:3> has_else     |     |-ImplicitCastExpr 0x127141680 <line:23:7> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x127141660 <col:7> 'int' lvalue ParmVar 0x127140a00 'force' 'int'     |     |-CompoundStmt 0x127141810 <col:14, line:25:3>     |     | `-CallExpr 0x1271417d0 <line:24:4, col:20> 'int'     |     |   |-ImplicitCastExpr 0x1271417b8 <col:4> 'int (*)()' <FunctionToPointerDecay>     |     |   | `-DeclRefExpr 0x127141778 <col:4> 'int ()' Function 0x1271416c0 'mark_files_ro' 'int ()'     |     |   `-ImplicitCastExpr 0x1271417f8 <col:18> 'struct super_block *' <LValueToRValue>     |     |     `-DeclRefExpr 0x127141798 <col:18> 'struct super_block *' lvalue ParmVar 0x127128648 'sb' 'struct super_block *'     |     `-CompoundStmt 0x127143280 <line:25:10, line:29:3>     |       |-BinaryOperator 0x1271419c0 <line:26:4, col:43> 'int' '='     |       | |-DeclRefExpr 0x127141828 <col:4> 'int' lvalue Var 0x127140c80 'retval' 'int'     |       | `-CallExpr 0x127141980 <col:13, col:43> 'int'     |       |   |-ImplicitCastExpr 0x127141968 <col:13> 'int (*)()' <FunctionToPointerDecay>     |       |   | `-DeclRefExpr 0x127141928 <col:13> 'int ()' Function 0x127141870 'sb_prepare_remount_readonly' 'int ()'     |       |   `-ImplicitCastExpr 0x1271419a8 <col:41> 'struct super_block *' <LValueToRValue>     |       |     `-DeclRefExpr 0x127141948 <col:41> 'struct super_block *' lvalue ParmVar 0x127128648 'sb' 'struct super_block *'     |       `-IfStmt 0x127143260 <line:27:4, line:28:12>     |         |-ImplicitCastExpr 0x127143200 <line:27:8> 'int' <LValueToRValue>     |         | `-DeclRefExpr 0x1271419e0 <col:8> 'int' lvalue Var 0x127140c80 'retval' 'int'     |         `-ReturnStmt 0x127143250 <line:28:5, col:12>     |           `-ImplicitCastExpr 0x127143238 <col:12> 'int' <LValueToRValue>     |             `-DeclRefExpr 0x127143218 <col:12> 'int' lvalue Var 0x127140c80 'retval' 'int'     |-IfStmt 0x127143978 <line:32:2, line:41:2>     | |-CXXDependentScopeMemberExpr 0x127143368 <line:32:6, col:16> '<dependent type>' contains-errors lvalue ->remount_fs     | | `-RecoveryExpr 0x127143340 <col:6, col:10> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x127143308 <col:6> 'struct super_block *' lvalue ParmVar 0x127128648 'sb' 'struct super_block *'     | `-CompoundStmt 0x127143958 <col:28, line:41:2>     |   |-BinaryOperator 0x127143560 <line:33:3, col:49> 'int' contains-errors '='     |   | |-DeclRefExpr 0x1271433b0 <col:3> 'int' lvalue Var 0x127140c80 'retval' 'int'     |   | `-CallExpr 0x127143528 <col:12, col:49> '<dependent type>' contains-errors     |   |   |-CXXDependentScopeMemberExpr 0x127143430 <col:12, col:22> '<dependent type>' contains-errors lvalue ->remount_fs     |   |   | `-RecoveryExpr 0x127143408 <col:12, col:16> '<dependent type>' contains-errors lvalue     |   |   |   `-DeclRefExpr 0x1271433d0 <col:12> 'struct super_block *' lvalue ParmVar 0x127128648 'sb' 'struct super_block *'     |   |   |-DeclRefExpr 0x127143478 <col:33> 'struct super_block *' lvalue ParmVar 0x127128648 'sb' 'struct super_block *'     |   |   |-UnaryOperator 0x1271434f0 <col:37, col:38> 'int *' prefix '&' cannot overflow     |   |   | `-DeclRefExpr 0x127143498 <col:38> 'int' lvalue ParmVar 0x1271286c8 'flags' 'int'     |   |   `-DeclRefExpr 0x127143508 <col:45> 'void *' lvalue ParmVar 0x127128748 'data' 'void *'     |   `-IfStmt 0x127143938 <line:34:3, line:40:3>     |     |-ImplicitCastExpr 0x1271435a0 <line:34:7> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x127143580 <col:7> 'int' lvalue Var 0x127140c80 'retval' 'int'     |     `-CompoundStmt 0x127143918 <col:15, line:40:3>     |       |-IfStmt 0x127143670 <line:35:4, line:36:10>     |       | |-UnaryOperator 0x1271435f0 <line:35:8, col:9> 'int' prefix '!' cannot overflow     |       | | `-ImplicitCastExpr 0x1271435d8 <col:9> 'int' <LValueToRValue>     |       | |   `-DeclRefExpr 0x1271435b8 <col:9> 'int' lvalue ParmVar 0x127140a00 'force' 'int'     |       | `-GotoStmt 0x127143658 <line:36:5, col:10> 'cancel_readonly' 0x127143608     |       `-CallExpr 0x1271438d8 <line:38:4, line:39:33> '<dependent type>' contains-errors     |         |-DeclRefExpr 0x127143770 <line:38:4> 'int ()' Function 0x1271436b8 'WARN' 'int ()'     |         |-IntegerLiteral 0x127143790 <col:9> 'int' 1     |         |-StringLiteral 0x1271437f0 <col:12> 'char[4]' lvalue \"STR\"     |         |-CXXDependentScopeMemberExpr 0x127143870 <line:39:9, col:21> '<dependent type>' contains-errors lvalue ->name     |         | `-RecoveryExpr 0x127143848 <col:9, col:13> '<dependent type>' contains-errors lvalue     |         |   `-DeclRefExpr 0x127143810 <col:9> 'struct super_block *' lvalue ParmVar 0x127128648 'sb' 'struct super_block *'     |         `-DeclRefExpr 0x1271438b8 <col:27> 'int' lvalue Var 0x127140c80 'retval' 'int'     |-CallExpr 0x127143c30 <line:44:2, col:10> 'int'     | `-ImplicitCastExpr 0x127143c18 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x127143bf8 <col:2> 'int ()' Function 0x127143b40 'smp_wmb' 'int ()'     |-BinaryOperator 0x127143cd0 <line:45:2, col:27> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x127143c88 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x127143c50 <col:2> 'struct super_block *' lvalue ParmVar 0x127128648 'sb' 'struct super_block *'     | `-IntegerLiteral 0x127143cb0 <col:27> 'int' 0     |-IfStmt 0x127143f18 <line:48:2, line:49:29>     | |-BinaryOperator 0x127143d70 <line:48:6, col:24> 'int' contains-errors '&&'     | | |-DeclRefExpr 0x127143cf0 <col:6> 'int' lvalue Var 0x127140d18 'remount_ro' 'int'     | | `-RecoveryExpr 0x127143d48 <col:20, col:24> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x127143d10 <col:20> 'struct super_block *' lvalue ParmVar 0x127128648 'sb' 'struct super_block *'     | `-CallExpr 0x127143ef0 <line:49:3, col:29> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x127143e70 <col:3> 'int ()' Function 0x127143db8 'invalidate_bdev' 'int ()'     |   `-RecoveryExpr 0x127143ec8 <col:19, col:23> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x127143e90 <col:19> 'struct super_block *' lvalue ParmVar 0x127128648 'sb' 'struct super_block *'     |-ReturnStmt 0x127143f58 <line:50:2, col:9>     | `-IntegerLiteral 0x127143f38 <col:9> 'int' 0     |-LabelStmt 0x127144008 <line:52:1, line:53:27> 'cancel_readonly'     | `-BinaryOperator 0x127143fe8 <col:2, col:27> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x127143fa0 <col:2, col:6> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x127143f68 <col:2> 'struct super_block *' lvalue ParmVar 0x127128648 'sb' 'struct super_block *'     |   `-IntegerLiteral 0x127143fc8 <col:27> 'int' 0     `-ReturnStmt 0x127144060 <line:54:2, col:9>       `-ImplicitCastExpr 0x127144048 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x127144028 <col:9> 'int' lvalue Var 0x127140c80 'retval' 'int' ","20028":"`-FunctionDecl 0x127008c08  col:18 implicit used strdup 'char *(const char *)' extern   |-ParmVarDecl 0x127008d08 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x127008cb0 <<invalid sloc>> Implicit 950 ","19713":"`-FunctionDecl 0x15200de38  line:1:1 TEST 'int (int, int)'   |-ParmVarDecl 0x15200dd58 <col:6> col:6 HttpUtility 'int'   |-ParmVarDecl 0x15200dcd8 <col:19> col:19 ValidateStreamErrors 'int'   `-CompoundStmt 0x15200e2b8 <col:41, line:27:1>     `-RecoveryExpr 0x15200df80 <line:3:3> '<dependent type>' contains-errors lvalue ","19638":"`-FunctionDecl 0x12880de88  line:1:13 invalid rz_core_analysis_coderefs 'int (int *, int)'   |-ParmVarDecl 0x12880dd28 <col:39, col:47> col:47 invalid core 'int *'   |-ParmVarDecl 0x12880dda8 <col:53, col:58> col:58 invalid addr 'int'   `-CompoundStmt 0x128828188 <col:64, line:19:1>     `-IfStmt 0x128828158 <line:3:2, line:18:2> has_else       |-RecoveryExpr 0x12880e1e0 <line:3:6> '<dependent type>' contains-errors lvalue       |-CompoundStmt 0x128827f98 <col:11, line:16:2>       | |-DeclStmt 0x12880e348 <line:4:3, col:29>       | | `-VarDecl 0x12880e218 <col:3, col:25> col:15 used me 'const char *' cinit       | |   `-CXXDependentScopeMemberExpr 0x12880e300 <col:20, col:25> '<dependent type>' contains-errors lvalue ->name       | |     `-RecoveryExpr 0x12880e2e0 <col:20> '<dependent type>' contains-errors lvalue       | |-CallExpr 0x1288276e8 <line:8:3, col:27> 'int' contains-errors       | | |-ImplicitCastExpr 0x1288276d0 <col:3> 'int (*)()' <FunctionToPointerDecay>       | | | `-DeclRefExpr 0x1288275f8 <col:3> 'int ()' Function 0x128827540 'rz_cons_printf' 'int ()'       | | |-ImplicitCastExpr 0x128827718 <col:18> 'char *' <ArrayToPointerDecay>       | | | `-StringLiteral 0x128827660 <col:18> 'char[4]' lvalue \"STR\"       | | `-ImplicitCastExpr 0x128827730 <col:25> 'const char *' contains-errors <LValueToRValue>       | |   `-DeclRefExpr 0x128827680 <col:25> 'const char *' contains-errors lvalue Var 0x12880e218 'me' 'const char *'       | |-CallExpr 0x128827928 <line:9:3, col:37> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x128827828 <col:3> 'int ()' Function 0x128827770 'rz_list_foreach' 'int ()'       | | |-RecoveryExpr 0x1288278c8 <col:20> '<dependent type>' contains-errors lvalue       | | |-RecoveryExpr 0x1288278e8 <col:27> '<dependent type>' contains-errors lvalue       | | `-RecoveryExpr 0x128827908 <col:33> '<dependent type>' contains-errors lvalue       | `-CompoundStmt 0x128827e70 <col:39, line:14:3>       |   |-DeclStmt 0x128827c68 <line:11:4, col:76>       |   | `-VarDecl 0x128827ae0 <col:4, col:16> col:16 used dst 'const char *'       |   |-CallExpr 0x128827cf8 <line:12:4, col:29> 'int'       |   | |-ImplicitCastExpr 0x128827ce0 <col:4> 'int (*)()' <FunctionToPointerDecay>       |   | | `-DeclRefExpr 0x128827c80 <col:4> 'int ()' Function 0x128827540 'rz_cons_printf' 'int ()'       |   | |-ImplicitCastExpr 0x128827d28 <col:19> 'char *' <ArrayToPointerDecay>       |   | | `-StringLiteral 0x128827ca0 <col:19> 'char[4]' lvalue \"STR\"       |   | `-ImplicitCastExpr 0x128827d40 <col:26> 'const char *' <LValueToRValue>       |   |   `-DeclRefExpr 0x128827cc0 <col:26> 'const char *' lvalue Var 0x128827ae0 'dst' 'const char *'       |   `-CallExpr 0x128827df0 <line:13:4, col:33> 'int' contains-errors       |     |-ImplicitCastExpr 0x128827dd8 <col:4> 'int (*)()' <FunctionToPointerDecay>       |     | `-DeclRefExpr 0x128827d58 <col:4> 'int ()' Function 0x128827540 'rz_cons_printf' 'int ()'       |     |-ImplicitCastExpr 0x128827e28 <col:19> 'char *' <ArrayToPointerDecay>       |     | `-StringLiteral 0x128827d78 <col:19> 'char[4]' lvalue \"STR\"       |     |-ImplicitCastExpr 0x128827e40 <col:26> 'const char *' contains-errors <LValueToRValue>       |     | `-DeclRefExpr 0x128827d98 <col:26> 'const char *' contains-errors lvalue Var 0x12880e218 'me' 'const char *'       |     `-ImplicitCastExpr 0x128827e58 <col:30> 'const char *' <LValueToRValue>       |       `-DeclRefExpr 0x128827db8 <col:30> 'const char *' lvalue Var 0x128827ae0 'dst' 'const char *'       `-CompoundStmt 0x128828140 <line:16:9, line:18:2>         `-CallExpr 0x128828100 <line:17:3, col:16> 'int'           |-ImplicitCastExpr 0x1288280e8 <col:3> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x1288280a8 <col:3> 'int ()' Function 0x128827ff0 'eprintf' 'int ()'           `-ImplicitCastExpr 0x128828128 <col:11> 'char *' <ArrayToPointerDecay>             `-StringLiteral 0x1288280c8 <col:11> 'char[4]' lvalue \"STR\" ","19312":"`-FunctionDecl 0x14f946c28  col:16 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x14f946d28 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x14f946d90 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x14f946df8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14f946cd0 <<invalid sloc>> Implicit 882 ","19963":"`-FunctionDecl 0x138922638  line:1:1 invalid __i915_gem_userptr_set_active 'int (struct drm_i915_gem_object *, int)'   |-ParmVarDecl 0x13900e248 <col:31, col:59> col:59 used obj 'struct drm_i915_gem_object *'   |-ParmVarDecl 0x13900e2e0 <col:64, col:69> col:69 invalid value 'int'   `-CompoundStmt 0x1389231d8 <line:2:1, line:15:1>     |-DeclStmt 0x138922980 <line:3:2, col:54>     | |-RecordDecl 0x1389226f0 <col:2, col:9> col:9 struct i915_mmu_object     | `-VarDecl 0x138922858 <col:2, col:44> col:26 used mo 'struct i915_mmu_object *' cinit     |   `-CXXDependentScopeMemberExpr 0x138922920 <col:31, col:44> '<dependent type>' contains-errors lvalue .mmu_object     |     `-RecoveryExpr 0x1389228f8 <col:31, col:36> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x1389228c0 <col:31> 'struct drm_i915_gem_object *' lvalue ParmVar 0x13900e248 'obj' 'struct drm_i915_gem_object *'     |-IfStmt 0x1389229f8 <line:6:2, line:7:3>     | |-UnaryOperator 0x1389229d0 <line:6:6, col:7> 'int' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1389229b8 <col:7> 'struct i915_mmu_object *' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x138922998 <col:7> 'struct i915_mmu_object *' contains-errors lvalue Var 0x138922858 'mo' 'struct i915_mmu_object *'     | `-ReturnStmt 0x1389229e8 <line:7:3>     |-CallExpr 0x138922c50 <line:9:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x138922b70 <col:2> 'int ()' Function 0x138922ab8 'spin_lock' 'int ()'     | `-UnaryOperator 0x138922c38 <col:12, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x138922bf0 <col:13, col:21> '<dependent type>' contains-errors lvalue ->lock     |     `-RecoveryExpr 0x138922bc8 <col:13, col:17> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x138922b90 <col:13> 'struct i915_mmu_object *' contains-errors lvalue Var 0x138922858 'mo' 'struct i915_mmu_object *'     |-IfStmt 0x138922fc0 <line:10:2, line:13:16> has_else     | |-RecoveryExpr 0x138922c78 <line:10:6> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x138922e08 <line:11:3, col:16> 'int' contains-errors     | | |-ImplicitCastExpr 0x138922df0 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x138922d78 <col:3> 'int ()' Function 0x138922cc0 'add_object' 'int ()'     | | `-ImplicitCastExpr 0x138922e30 <col:14> 'struct i915_mmu_object *' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x138922d98 <col:14> 'struct i915_mmu_object *' contains-errors lvalue Var 0x138922858 'mo' 'struct i915_mmu_object *'     | `-CallExpr 0x138922f80 <line:13:3, col:16> 'int' contains-errors     |   |-ImplicitCastExpr 0x138922f68 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x138922f28 <col:3> 'int ()' Function 0x138922e70 'del_object' 'int ()'     |   `-ImplicitCastExpr 0x138922fa8 <col:14> 'struct i915_mmu_object *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x138922f48 <col:14> 'struct i915_mmu_object *' contains-errors lvalue Var 0x138922858 'mo' 'struct i915_mmu_object *'     `-CallExpr 0x1389231b0 <line:14:2, col:27> '<dependent type>' contains-errors       |-DeclRefExpr 0x1389230d0 <col:2> 'int ()' Function 0x138923018 'spin_unlock' 'int ()'       `-UnaryOperator 0x138923198 <col:14, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow         `-CXXDependentScopeMemberExpr 0x138923150 <col:15, col:23> '<dependent type>' contains-errors lvalue ->lock           `-RecoveryExpr 0x138923128 <col:15, col:19> '<dependent type>' contains-errors lvalue             `-DeclRefExpr 0x1389230f0 <col:15> 'struct i915_mmu_object *' contains-errors lvalue Var 0x138922858 'mo' 'struct i915_mmu_object *' ","19969":"`-FunctionDecl 0x15791c718  line:1:25 alloc_pipe_info 'struct pipe_inode_info *(void)'   `-CompoundStmt 0x157937930 <line:2:1, line:19:1>     |-DeclStmt 0x15791c900 <line:3:2, col:30>     | `-VarDecl 0x15791c898 <col:2, col:26> col:26 used pipe 'struct pipe_inode_info *'     |-IfStmt 0x1579378c8 <line:6:2, line:16:2>     | |-ImplicitCastExpr 0x157936f08 <line:6:6> 'struct pipe_inode_info *' <LValueToRValue>     | | `-DeclRefExpr 0x157936ee8 <col:6> 'struct pipe_inode_info *' lvalue Var 0x15791c898 'pipe' 'struct pipe_inode_info *'     | `-CompoundStmt 0x1579378a8 <col:12, line:16:2>     |   |-IfStmt 0x1579376e0 <line:8:3, line:14:3>     |   | |-RecoveryExpr 0x157937100 <line:8:7, col:13> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x1579370c8 <col:7> 'struct pipe_inode_info *' lvalue Var 0x15791c898 'pipe' 'struct pipe_inode_info *'     |   | `-CompoundStmt 0x1579376a8 <col:19, line:14:3>     |   |   |-CallExpr 0x1579372a0 <line:9:4, col:35> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x157937208 <col:4> 'int ()' Function 0x157937150 'init_waitqueue_head' 'int ()'     |   |   | `-UnaryOperator 0x157937288 <col:24, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   |   `-RecoveryExpr 0x157937260 <col:25, col:31> '<dependent type>' contains-errors lvalue     |   |   |     `-DeclRefExpr 0x157937228 <col:25> 'struct pipe_inode_info *' lvalue Var 0x15791c898 'pipe' 'struct pipe_inode_info *'     |   |   |-BinaryOperator 0x1579373c8 <line:10:4, col:40> '<dependent type>' contains-errors '='     |   |   | |-RecoveryExpr 0x157937300 <col:4, col:10> '<dependent type>' contains-errors lvalue     |   |   | | `-DeclRefExpr 0x1579372c8 <col:4> 'struct pipe_inode_info *' lvalue Var 0x15791c898 'pipe' 'struct pipe_inode_info *'     |   |   | `-BinaryOperator 0x1579373a8 <col:22, col:40> '<dependent type>' contains-errors '='     |   |   |   |-RecoveryExpr 0x157937360 <col:22, col:28> '<dependent type>' contains-errors lvalue     |   |   |   | `-DeclRefExpr 0x157937328 <col:22> 'struct pipe_inode_info *' lvalue Var 0x15791c898 'pipe' 'struct pipe_inode_info *'     |   |   |   `-IntegerLiteral 0x157937388 <col:40> 'int' 1     |   |   |-BinaryOperator 0x1579374a0 <line:11:4, col:20> '<dependent type>' contains-errors '='     |   |   | |-RecoveryExpr 0x157937420 <col:4, col:10> '<dependent type>' contains-errors lvalue     |   |   | | `-DeclRefExpr 0x1579373e8 <col:4> 'struct pipe_inode_info *' lvalue Var 0x15791c898 'pipe' 'struct pipe_inode_info *'     |   |   | `-RecoveryExpr 0x157937480 <col:20> '<dependent type>' contains-errors lvalue     |   |   |-CallExpr 0x157937638 <line:12:4, col:27> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x1579375a0 <col:4> 'int ()' Function 0x1579374e8 'mutex_init' 'int ()'     |   |   | `-UnaryOperator 0x157937620 <col:15, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   |   `-RecoveryExpr 0x1579375f8 <col:16, col:22> '<dependent type>' contains-errors lvalue     |   |   |     `-DeclRefExpr 0x1579375c0 <col:16> 'struct pipe_inode_info *' lvalue Var 0x15791c898 'pipe' 'struct pipe_inode_info *'     |   |   `-ReturnStmt 0x157937698 <line:13:4, col:11>     |   |     `-ImplicitCastExpr 0x157937680 <col:11> 'struct pipe_inode_info *' <LValueToRValue>     |   |       `-DeclRefExpr 0x157937660 <col:11> 'struct pipe_inode_info *' lvalue Var 0x15791c898 'pipe' 'struct pipe_inode_info *'     |   `-CallExpr 0x157937868 <line:15:3, col:13> 'int'     |     |-ImplicitCastExpr 0x157937850 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1579377e0 <col:3> 'int ()' Function 0x157937728 'kfree' 'int ()'     |     `-ImplicitCastExpr 0x157937890 <col:9> 'struct pipe_inode_info *' <LValueToRValue>     |       `-DeclRefExpr 0x157937800 <col:9> 'struct pipe_inode_info *' lvalue Var 0x15791c898 'pipe' 'struct pipe_inode_info *'     `-ReturnStmt 0x157937920 <line:18:2, col:9>       `-RecoveryExpr 0x157937900 <col:9> '<dependent type>' contains-errors lvalue ","19962":"`-FunctionDecl 0x135026a78  col:4 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x135026b78 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x135026b20 <<invalid sloc>> Implicit 873 ","19809":"`-FunctionDecl 0x12e808200  line:1:1 isdn_ppp_open 'int (int, struct file *)'   |-ParmVarDecl 0x12e00dcd8 <col:15, col:19> col:19 used min 'int'   |-ParmVarDecl 0x12e00e2c8 <col:24, col:37> col:37 used file 'struct file *'   `-CompoundStmt 0x12e80c700 <line:2:1, line:51:1>     |-DeclStmt 0x12e808380 <line:3:2, col:10>     | `-VarDecl 0x12e808318 <col:2, col:6> col:6 used slot 'int'     |-DeclStmt 0x12e808588 <line:4:2, col:24>     | |-RecordDecl 0x12e808398 <col:2, col:9> col:9 struct ippp_struct     | `-VarDecl 0x12e808508 <col:2, col:22> col:22 used is 'struct ippp_struct *'     |-IfStmt 0x12e808820 <line:6:2, line:7:11>     | |-BinaryOperator 0x12e808758 <line:6:6, col:24> 'int' contains-errors '||'     | | |-BinaryOperator 0x12e8086f8 <col:6, col:12> 'int' '<'     | | | |-ImplicitCastExpr 0x12e8086e0 <col:6> 'int' <LValueToRValue>     | | | | `-DeclRefExpr 0x12e8085a0 <col:6> 'int' lvalue ParmVar 0x12e00dcd8 'min' 'int'     | | | `-IntegerLiteral 0x12e8085c0 <col:12> 'int' 0     | | `-BinaryOperator 0x12e808738 <col:17, col:24> 'int' contains-errors '>='     | |   |-DeclRefExpr 0x12e808618 <col:17> 'int' lvalue ParmVar 0x12e00dcd8 'min' 'int'     | |   `-RecoveryExpr 0x12e808718 <col:24> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12e808810 <line:7:3, col:11>     |   `-UnaryOperator 0x12e8087f8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12e8087e0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12e8087c0 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12e8089f8 <line:9:2, col:27> 'int' '='     | |-DeclRefExpr 0x12e808840 <col:2> 'int' lvalue Var 0x12e808318 'slot' 'int'     | `-CallExpr 0x12e8089d8 <col:9, col:27> 'int'     |   `-ImplicitCastExpr 0x12e8089c0 <col:9> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x12e808970 <col:9> 'int ()' Function 0x12e8088b8 'isdn_ppp_get_slot' 'int ()'     |-IfStmt 0x12e808b50 <line:10:2, line:12:2>     | |-BinaryOperator 0x12e808a70 <line:10:6, col:13> 'int' '<'     | | |-ImplicitCastExpr 0x12e808a58 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x12e808a18 <col:6> 'int' lvalue Var 0x12e808318 'slot' 'int'     | | `-IntegerLiteral 0x12e808a38 <col:13> 'int' 0     | `-CompoundStmt 0x12e808b38 <col:16, line:12:2>     |   `-ReturnStmt 0x12e808b28 <line:11:3, col:11>     |     `-UnaryOperator 0x12e808b10 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x12e808af8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x12e808ad8 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12e808e98 <line:19:2, col:43> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12e808d78 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12e808d40 <col:2> 'struct ippp_struct *' lvalue Var 0x12e808508 'is' 'struct ippp_struct *'     | `-BinaryOperator 0x12e808e78 <col:26, col:43> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x12e808dd8 <col:26, col:30> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x12e808da0 <col:26> 'struct ippp_struct *' lvalue Var 0x12e808508 'is' 'struct ippp_struct *'     |   `-RecoveryExpr 0x12e808e58 <col:43> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12e809010 <line:20:2, col:45> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12e808ef0 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12e808eb8 <col:2> 'struct ippp_struct *' lvalue Var 0x12e808508 'is' 'struct ippp_struct *'     | `-BinaryOperator 0x12e808ff0 <col:26, col:45> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x12e808f50 <col:26, col:30> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x12e808f18 <col:26> 'struct ippp_struct *' lvalue Var 0x12e808508 'is' 'struct ippp_struct *'     |   `-RecoveryExpr 0x12e808fd0 <col:45> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12e809188 <line:21:2, col:42> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12e809068 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12e809030 <col:2> 'struct ippp_struct *' lvalue Var 0x12e808508 'is' 'struct ippp_struct *'     | `-BinaryOperator 0x12e809168 <col:26, col:42> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x12e8090c8 <col:26, col:30> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x12e809090 <col:26> 'struct ippp_struct *' lvalue Var 0x12e808508 'is' 'struct ippp_struct *'     |   `-RecoveryExpr 0x12e809148 <col:42> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12e80bb08 <line:23:2, col:18> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12e80bac0 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12e80ba88 <col:2> 'struct ippp_struct *' lvalue Var 0x12e808508 'is' 'struct ippp_struct *'     | `-IntegerLiteral 0x12e80bae8 <col:18> 'int' 0     |-BinaryOperator 0x12e80bd00 <line:25:2, col:41> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12e80bb60 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12e80bb28 <col:2> 'struct ippp_struct *' lvalue Var 0x12e808508 'is' 'struct ippp_struct *'     | `-CallExpr 0x12e80bcc0 <col:14, col:41> 'int'     |   |-ImplicitCastExpr 0x12e80bca8 <col:14> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12e80bc68 <col:14> 'int ()' Function 0x12e80bbb0 'isdn_ppp_ccp_reset_alloc' 'int ()'     |   `-ImplicitCastExpr 0x12e80bce8 <col:39> 'struct ippp_struct *' <LValueToRValue>     |     `-DeclRefExpr 0x12e80bc88 <col:39> 'struct ippp_struct *' lvalue Var 0x12e808508 'is' 'struct ippp_struct *'     |-BinaryOperator 0x12e80be00 <line:28:2, col:17> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12e80bdb8 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12e80bd80 <col:2> 'struct ippp_struct *' lvalue Var 0x12e808508 'is' 'struct ippp_struct *'     | `-IntegerLiteral 0x12e80bde0 <col:17> 'int' 0     |-BinaryOperator 0x12e80bea0 <line:29:2, col:15> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12e80be58 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12e80be20 <col:2> 'struct ippp_struct *' lvalue Var 0x12e808508 'is' 'struct ippp_struct *'     | `-IntegerLiteral 0x12e80be80 <col:15> 'int' 0     |-BinaryOperator 0x12e80bf40 <line:30:2, col:16> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12e80bef8 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12e80bec0 <col:2> 'struct ippp_struct *' lvalue Var 0x12e808508 'is' 'struct ippp_struct *'     | `-IntegerLiteral 0x12e80bf20 <col:16> 'int' 0     |-BinaryOperator 0x12e80bff8 <line:31:2, col:25> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12e80bf98 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12e80bf60 <col:2> 'struct ippp_struct *' lvalue Var 0x12e808508 'is' 'struct ippp_struct *'     | `-UnaryOperator 0x12e80bfe0 <col:24, col:25> 'int' prefix '-'     |   `-IntegerLiteral 0x12e80bfc0 <col:25> 'int' 1     |-BinaryOperator 0x12e80c0b0 <line:32:2, col:14> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12e80c050 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12e80c018 <col:2> 'struct ippp_struct *' lvalue Var 0x12e808508 'is' 'struct ippp_struct *'     | `-UnaryOperator 0x12e80c098 <col:13, col:14> 'int' prefix '-'     |   `-IntegerLiteral 0x12e80c078 <col:14> 'int' 1     |-BinaryOperator 0x12e80c150 <line:33:2, col:12> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12e80c108 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12e80c0d0 <col:2> 'struct ippp_struct *' lvalue Var 0x12e808508 'is' 'struct ippp_struct *'     | `-IntegerLiteral 0x12e80c130 <col:12> 'int' 1524     |-BinaryOperator 0x12e80c1f0 <line:34:2, col:15> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12e80c1a8 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12e80c170 <col:2> 'struct ippp_struct *' lvalue Var 0x12e808508 'is' 'struct ippp_struct *'     | `-IntegerLiteral 0x12e80c1d0 <col:15> 'int' 16     |-CallExpr 0x12e80c3e8 <line:36:2, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12e80c350 <col:2> 'int ()' Function 0x12e80c298 'init_waitqueue_head' 'int ()'     | `-UnaryOperator 0x12e80c3d0 <col:22, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12e80c3a8 <col:23, col:27> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12e80c370 <col:23> 'struct ippp_struct *' lvalue Var 0x12e808508 'is' 'struct ippp_struct *'     |-BinaryOperator 0x12e80c5b0 <line:38:2, col:17> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12e80c528 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12e80c4f0 <col:2> 'struct ippp_struct *' lvalue Var 0x12e808508 'is' 'struct ippp_struct *'     | `-RecoveryExpr 0x12e80c588 <col:13, col:17> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12e80c550 <col:13> 'struct ippp_struct *' lvalue Var 0x12e808508 'is' 'struct ippp_struct *'     |-BinaryOperator 0x12e80c650 <line:39:2, col:14> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12e80c608 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12e80c5d0 <col:2> 'struct ippp_struct *' lvalue Var 0x12e808508 'is' 'struct ippp_struct *'     | `-DeclRefExpr 0x12e80c630 <col:14> 'int' lvalue ParmVar 0x12e00dcd8 'min' 'int'     `-ReturnStmt 0x12e80c6f0 <line:50:2, col:9>       `-IntegerLiteral 0x12e80c6d0 <col:9> 'int' 0 ","19827":"`-FunctionDecl 0x132140c18  line:1:12 input_default_setkeycode 'int (struct input_dev *, const struct input_keymap_entry *, unsigned int *)' static   |-ParmVarDecl 0x132128648 <col:37, col:55> col:55 used dev 'struct input_dev *'   |-ParmVarDecl 0x132140a28 <line:2:9, col:42> col:42 used ke 'const struct input_keymap_entry *'   |-ParmVarDecl 0x132140ad8 <line:3:9, col:23> col:23 used old_keycode 'unsigned int *'   `-CompoundStmt 0x132142e38 <line:4:1, line:59:1>     |-DeclStmt 0x132140da0 <line:5:2, col:20>     | `-VarDecl 0x132140d38 <col:2, col:15> col:15 used index 'unsigned int'     |-DeclStmt 0x132140e38 <line:6:2, col:11>     | `-VarDecl 0x132140dd0 <col:2, col:6> col:6 used error 'int'     |-DeclStmt 0x132140ed0 <line:7:2, col:7>     | `-VarDecl 0x132140e68 <col:2, col:6> col:6 used i 'int'     |-IfStmt 0x132141038 <line:9:2, line:10:11>     | |-UnaryOperator 0x132140f60 <line:9:6, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x132140f48 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x132140f20 <col:7, col:12> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x132140ee8 <col:7> 'struct input_dev *' lvalue ParmVar 0x132128648 'dev' 'struct input_dev *'     | `-ReturnStmt 0x132141028 <line:10:3, col:11>     |   `-UnaryOperator 0x132141010 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x132140ff8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x132140fd8 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x132141510 <line:12:2, line:18:2> has_else     | |-BinaryOperator 0x132141110 <line:12:6, col:18> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x132141090 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x132141058 <col:6> 'const struct input_keymap_entry *' lvalue ParmVar 0x132140a28 'ke' 'const struct input_keymap_entry *'     | | `-RecoveryExpr 0x1321410f0 <col:18> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x1321411d0 <col:41, line:14:2>     | | `-BinaryOperator 0x1321411b0 <line:13:3, col:15> 'unsigned int' contains-errors '='     | |   |-DeclRefExpr 0x132141130 <col:3> 'unsigned int' lvalue Var 0x132140d38 'index' 'unsigned int'     | |   `-RecoveryExpr 0x132141188 <col:11, col:15> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x132141150 <col:11> 'const struct input_keymap_entry *' lvalue ParmVar 0x132140a28 'ke' 'const struct input_keymap_entry *'     | `-CompoundStmt 0x1321414f0 <line:14:9, line:18:2>     |   |-BinaryOperator 0x132141430 <line:15:3, col:46> 'int' '='     |   | |-DeclRefExpr 0x1321411e8 <col:3> 'int' lvalue Var 0x132140dd0 'error' 'int'     |   | `-CallExpr 0x1321413e8 <col:11, col:46> 'int'     |   |   |-ImplicitCastExpr 0x1321413d0 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x132141320 <col:11> 'int ()' Function 0x132141268 'input_scancode_to_scalar' 'int ()'     |   |   |-ImplicitCastExpr 0x132141418 <col:36> 'const struct input_keymap_entry *' <LValueToRValue>     |   |   | `-DeclRefExpr 0x132141340 <col:36> 'const struct input_keymap_entry *' lvalue ParmVar 0x132140a28 'ke' 'const struct input_keymap_entry *'     |   |   `-UnaryOperator 0x132141380 <col:40, col:41> 'unsigned int *' prefix '&' cannot overflow     |   |     `-DeclRefExpr 0x132141360 <col:41> 'unsigned int' lvalue Var 0x132140d38 'index' 'unsigned int'     |   `-IfStmt 0x1321414d0 <line:16:3, line:17:11>     |     |-ImplicitCastExpr 0x132141470 <line:16:7> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x132141450 <col:7> 'int' lvalue Var 0x132140dd0 'error' 'int'     |     `-ReturnStmt 0x1321414c0 <line:17:4, col:11>     |       `-ImplicitCastExpr 0x1321414a8 <col:11> 'int' <LValueToRValue>     |         `-DeclRefExpr 0x132141488 <col:11> 'int' lvalue Var 0x132140dd0 'error' 'int'     |-IfStmt 0x132141688 <line:20:2, line:21:11>     | |-BinaryOperator 0x1321415c0 <line:20:6, col:20> 'int' contains-errors '>='     | | |-DeclRefExpr 0x132141540 <col:6> 'unsigned int' lvalue Var 0x132140d38 'index' 'unsigned int'     | | `-RecoveryExpr 0x132141598 <col:15, col:20> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x132141560 <col:15> 'struct input_dev *' lvalue ParmVar 0x132128648 'dev' 'struct input_dev *'     | `-ReturnStmt 0x132141678 <line:21:3, col:11>     |   `-UnaryOperator 0x132141660 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x132141648 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x132141628 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x132142000 <line:23:2, line:25:11>     | |-BinaryOperator 0x132141928 <line:23:6, line:24:42> 'int' contains-errors '&&'     | | |-BinaryOperator 0x1321417a8 <line:23:6, col:43> 'int' contains-errors '<'     | | | |-RecoveryExpr 0x1321416e0 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x1321416a8 <col:6> 'struct input_dev *' lvalue ParmVar 0x132128648 'dev' 'struct input_dev *'     | | | `-UnaryExprOrTypeTraitExpr 0x132141788 <col:25, col:43> 'unsigned long' contains-errors sizeof     | | |   `-ParenExpr 0x132141768 <col:31, col:43> '<dependent type>' contains-errors lvalue     | | |     `-RecoveryExpr 0x132141740 <col:32, col:36> '<dependent type>' contains-errors lvalue     | | |       `-DeclRefExpr 0x132141708 <col:32> 'const struct input_keymap_entry *' lvalue ParmVar 0x132140a28 'ke' 'const struct input_keymap_entry *' non_odr_use_unevaluated     | | `-ParenExpr 0x132141908 <line:24:4, col:42> '<dependent type>' contains-errors     | |   `-BinaryOperator 0x1321418e8 <col:5, col:41> '<dependent type>' contains-errors '>>'     | |     |-RecoveryExpr 0x132141800 <col:5, col:9> '<dependent type>' contains-errors lvalue     | |     | `-DeclRefExpr 0x1321417c8 <col:5> 'const struct input_keymap_entry *' lvalue ParmVar 0x132140a28 'ke' 'const struct input_keymap_entry *'     | |     `-ParenExpr 0x1321418c8 <col:20, col:41> '<dependent type>' contains-errors     | |       `-BinaryOperator 0x1321418a8 <col:21, col:40> '<dependent type>' contains-errors '*'     | |         |-RecoveryExpr 0x132141860 <col:21, col:26> '<dependent type>' contains-errors lvalue     | |         | `-DeclRefExpr 0x132141828 <col:21> 'struct input_dev *' lvalue ParmVar 0x132128648 'dev' 'struct input_dev *'     | |         `-IntegerLiteral 0x132141888 <col:40> 'int' 8     | `-ReturnStmt 0x1321419e0 <line:25:3, col:11>     |   `-UnaryOperator 0x1321419c8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x1321419b0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x132141990 <col:11> '<dependent type>' contains-errors lvalue     |-SwitchStmt 0x132142098 <line:27:2, line:46:2>     | |-ImplicitCastExpr 0x132142080 <line:27:10, col:15> '<dependent type>' contains-errors <LValueToRValue>     | | `-RecoveryExpr 0x132142058 <col:10, col:15> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x132142020 <col:10> 'struct input_dev *' lvalue ParmVar 0x132128648 'dev' 'struct input_dev *'     | `-CompoundStmt 0x1321424e8 <col:28, line:46:2>     |   |-CaseStmt 0x1321420e0 <line:28:3, line:33:3>     |   | |-IntegerLiteral 0x1321420c0 <line:28:8> 'int' 1     |   | `-CompoundStmt 0x132142248 <col:11, line:33:3>     |   |   `-BreakStmt 0x132142240 <line:32:4>     |   |-CaseStmt 0x132142280 <line:34:3, line:39:3>     |   | |-IntegerLiteral 0x132142260 <line:34:8> 'int' 2     |   | `-CompoundStmt 0x1321423a0 <col:11, line:39:3>     |   |   `-BreakStmt 0x132142398 <line:38:4>     |   `-DefaultStmt 0x1321424c8 <line:40:3, line:45:3>     |     `-CompoundStmt 0x1321424b0 <line:40:12, line:45:3>     |       `-BreakStmt 0x1321424a8 <line:44:4>     |-CallExpr 0x1321426c0 <line:48:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1321425f0 <col:2> 'int ()' Function 0x132142538 '__clear_bit' 'int ()'     | |-UnaryOperator 0x132142648 <col:14, col:15> 'unsigned int' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x132142630 <col:15> 'unsigned int *' <LValueToRValue>     | |   `-DeclRefExpr 0x132142610 <col:15> 'unsigned int *' lvalue ParmVar 0x132140ad8 'old_keycode' 'unsigned int *'     | `-RecoveryExpr 0x132142698 <col:28, col:33> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x132142660 <col:28> 'struct input_dev *' lvalue ParmVar 0x132128648 'dev' 'struct input_dev *'     |-CallExpr 0x1321428b0 <line:49:2, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1321427d0 <col:2> 'int ()' Function 0x132142718 '__set_bit' 'int ()'     | |-RecoveryExpr 0x132142828 <col:12, col:16> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1321427f0 <col:12> 'const struct input_keymap_entry *' lvalue ParmVar 0x132140a28 'ke' 'const struct input_keymap_entry *'     | `-RecoveryExpr 0x132142888 <col:25, col:30> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x132142850 <col:25> 'struct input_dev *' lvalue ParmVar 0x132128648 'dev' 'struct input_dev *'     |-ForStmt 0x132142dd0 <line:51:2, line:56:2>     | |-BinaryOperator 0x132142920 <line:51:7, col:11> 'int' '='     | | |-DeclRefExpr 0x1321428e0 <col:7> 'int' lvalue Var 0x132140e68 'i' 'int'     | | `-IntegerLiteral 0x132142900 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x1321429c0 <col:14, col:23> 'int' contains-errors '<'     | | |-DeclRefExpr 0x132142940 <col:14> 'int' lvalue Var 0x132140e68 'i' 'int'     | | `-RecoveryExpr 0x132142998 <col:18, col:23> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x132142960 <col:18> 'struct input_dev *' lvalue ParmVar 0x132128648 'dev' 'struct input_dev *'     | |-UnaryOperator 0x132142a00 <col:35, col:36> 'int' postfix '++'     | | `-DeclRefExpr 0x1321429e0 <col:35> 'int' lvalue Var 0x132140e68 'i' 'int'     | `-CompoundStmt 0x132142db8 <col:40, line:56:2>     |   `-IfStmt 0x132142d98 <line:52:3, line:55:3>     |     |-BinaryOperator 0x132142c50 <line:52:7, col:39> 'int' '=='     |     | |-ImplicitCastExpr 0x132142c38 <col:7, col:33> 'unsigned int' <IntegralCast>     |     | | `-CallExpr 0x132142b70 <col:7, col:33> 'int'     |     | |   |-ImplicitCastExpr 0x132142b58 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     | |   | `-DeclRefExpr 0x132142af8 <col:7> 'int ()' Function 0x132142a40 'input_fetch_keycode' 'int ()'     |     | |   |-ImplicitCastExpr 0x132142ba0 <col:27> 'struct input_dev *' <LValueToRValue>     |     | |   | `-DeclRefExpr 0x132142b18 <col:27> 'struct input_dev *' lvalue ParmVar 0x132128648 'dev' 'struct input_dev *'     |     | |   `-ImplicitCastExpr 0x132142bb8 <col:32> 'int' <LValueToRValue>     |     | |     `-DeclRefExpr 0x132142b38 <col:32> 'int' lvalue Var 0x132140e68 'i' 'int'     |     | `-ImplicitCastExpr 0x132142c20 <col:38, col:39> 'unsigned int' <LValueToRValue>     |     |   `-UnaryOperator 0x132142c08 <col:38, col:39> 'unsigned int' lvalue prefix '*' cannot overflow     |     |     `-ImplicitCastExpr 0x132142bf0 <col:39> 'unsigned int *' <LValueToRValue>     |     |       `-DeclRefExpr 0x132142bd0 <col:39> 'unsigned int *' lvalue ParmVar 0x132140ad8 'old_keycode' 'unsigned int *'     |     `-CompoundStmt 0x132142d78 <col:52, line:55:3>     |       |-CallExpr 0x132142d40 <line:53:4, col:39> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x132142c70 <col:4> 'int ()' Function 0x132142718 '__set_bit' 'int ()'     |       | |-UnaryOperator 0x132142cc8 <col:14, col:15> 'unsigned int' lvalue prefix '*' cannot overflow     |       | | `-ImplicitCastExpr 0x132142cb0 <col:15> 'unsigned int *' <LValueToRValue>     |       | |   `-DeclRefExpr 0x132142c90 <col:15> 'unsigned int *' lvalue ParmVar 0x132140ad8 'old_keycode' 'unsigned int *'     |       | `-RecoveryExpr 0x132142d18 <col:28, col:33> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x132142ce0 <col:28> 'struct input_dev *' lvalue ParmVar 0x132128648 'dev' 'struct input_dev *'     |       `-BreakStmt 0x132142d70 <line:54:4>     `-ReturnStmt 0x132142e28 <line:58:2, col:9>       `-IntegerLiteral 0x132142e08 <col:9> 'int' 0 ","19335":"`-FunctionDecl 0x14b903fc8  col:8 invalid memcpy_field_possible 'int (const int *)'   `-ParmVarDecl 0x14b903ef0 <col:30, col:43> col:43 invalid from 'const int *' ","19377":"`-FunctionDecl 0x12c128190  line:1:13 recovery_abort 'void (void)' static   `-CompoundStmt 0x12c128698 <col:34, line:9:1>     `-IfStmt 0x12c1284e0 <line:2:5, line:4:5>       |-UnaryOperator 0x12c128318 <line:2:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-ImplicitCastExpr 0x12c128300 <col:10> '<dependent type>' contains-errors <LValueToRValue>       |   `-RecoveryExpr 0x12c1282e0 <col:10> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x12c1284c8 <col:19, line:4:5>         `-CallExpr 0x12c1284a8 <line:3:9, col:23> 'int'           `-ImplicitCastExpr 0x12c128490 <col:9> 'int (*)()' <FunctionToPointerDecay>             `-DeclRefExpr 0x12c128440 <col:9> 'int ()' Function 0x12c128388 'storage_reset' 'int ()' ","20135":"`-FunctionDecl 0x125124c88  line:1:5 invalid state_putwc 'int (int, int *)'   |-ParmVarDecl 0x125124af0 <col:18, col:26> col:26 invalid wc 'int'   |-ParmVarDecl 0x125124ba8 <col:30, col:37> col:37 invalid s 'int *'   `-CompoundStmt 0x1258084a0 <line:2:1, line:11:1>     |-DeclStmt 0x125124e28 <line:3:3, col:27>     | `-VarDecl 0x125124d68 <col:3, col:8> col:8 invalid mb 'char'     |-DeclStmt 0x125124ec0 <line:4:3, col:9>     | `-VarDecl 0x125124e58 <col:3, col:7> col:7 used rc 'int'     |-IfStmt 0x1251251a8 <line:6:3, line:7:12>     | |-RecoveryExpr 0x125125140 <line:6:7, col:39> '_Bool' contains-errors     | `-ReturnStmt 0x125125198 <line:7:5, col:12>     |   `-ImplicitCastExpr 0x125125180 <col:12> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x125125160 <col:12> 'int' lvalue Var 0x125124e58 'rc' 'int'     |-IfStmt 0x125808450 <line:8:3, line:9:13>     | |-BinaryOperator 0x1258083e8 <line:8:7, col:31> 'int' contains-errors '=='     | | |-CallExpr 0x125808360 <col:7, col:26> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x1258082b8 <col:7> 'int ()' Function 0x125808200 'fputs' 'int ()'     | | | |-RecoveryExpr 0x1258082d8 <col:14> '<dependent type>' contains-errors lvalue     | | | `-CXXDependentScopeMemberExpr 0x125808318 <col:18, col:21> '<dependent type>' contains-errors lvalue ->fpout     | | |   `-RecoveryExpr 0x1258082f8 <col:18> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1258083c8 <col:31> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x125808440 <line:9:5, col:13>     |   `-UnaryOperator 0x125808428 <col:12, col:13> 'int' prefix '-'     |     `-IntegerLiteral 0x125808408 <col:13> 'int' 1     `-ReturnStmt 0x125808490 <line:10:3, col:10>       `-IntegerLiteral 0x125808470 <col:10> 'int' 0 ","19298":"`-FunctionDecl 0x1351281f8  line:1:1 invalid zzstop 'int (int *)'   |-ParmVarDecl 0x135128128 <col:8, col:17> col:17 invalid i_ctx_p 'int *'   `-CompoundStmt 0x135808c40 <line:2:1, line:23:1>     |-DeclStmt 0x135128328 <line:4:5, col:15>     | `-VarDecl 0x1351282c0 <col:5, col:10> col:10 used count 'int'     |-CallExpr 0x1351285c0 <line:6:5, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1351284a0 <col:5> 'int ()' Function 0x1351283e8 'check_type' 'int ()'     | |-UnaryOperator 0x135128588 <col:16, col:17> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x135128570 <col:17> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x135128550 <col:17> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1351285a0 <col:21> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x135808330 <line:7:5, col:55> 'int' contains-errors '='     | |-DeclRefExpr 0x1351285f0 <col:5> 'int' lvalue Var 0x1351282c0 'count' 'int'     | `-CallExpr 0x135808300 <col:13, col:55> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1351286f0 <col:13> 'int ()' Function 0x135128638 'count_to_stopped' 'int ()'     |   |-RecoveryExpr 0x135128710 <col:30> '<dependent type>' contains-errors lvalue     |   `-CXXDependentScopeMemberExpr 0x1358082b8 <col:39, col:49> '<dependent type>' contains-errors lvalue .intval     |     `-CXXDependentScopeMemberExpr 0x135808270 <col:39, col:43> '<dependent type>' contains-errors lvalue ->value     |       `-RecoveryExpr 0x135808250 <col:39> '<dependent type>' contains-errors lvalue     `-IfStmt 0x135808b00 <line:8:5, line:20:5>       |-ImplicitCastExpr 0x135808370 <line:8:9> 'int' <LValueToRValue>       | `-DeclRefExpr 0x135808350 <col:9> 'int' lvalue Var 0x1351282c0 'count' 'int'       `-CompoundStmt 0x135808ac8 <col:16, line:20:5>         |-CallExpr 0x1358084f8 <line:12:9, col:19> 'int'         | |-ImplicitCastExpr 0x1358084e0 <col:9> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x135808468 <col:9> 'int ()' Function 0x1358083b0 'check_op' 'int ()'         | `-IntegerLiteral 0x135808488 <col:18> 'int' 2         |-CallExpr 0x1358086a8 <line:14:9, col:14> 'int'         | |-ImplicitCastExpr 0x135808690 <col:9> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x135808650 <col:9> 'int ()' Function 0x135808598 'pop' 'int ()'         | `-IntegerLiteral 0x135808670 <col:13> 'int' 2         |-CallExpr 0x135808810 <line:15:9, col:34> '<dependent type>' contains-errors         | |-DeclRefExpr 0x1358087b0 <col:9> 'int ()' Function 0x1358086f8 'pop_estack' 'int ()'         | |-RecoveryExpr 0x1358087d0 <col:20> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x1358087f0 <col:29> 'int' lvalue Var 0x1351282c0 'count' 'int'         |-CallExpr 0x135808990 <line:17:9, col:15> 'int'         | |-ImplicitCastExpr 0x135808978 <col:9> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x135808938 <col:9> 'int ()' Function 0x135808880 'push' 'int ()'         | `-IntegerLiteral 0x135808958 <col:14> 'int' 1         `-BinaryOperator 0x135808aa8 <line:18:9, col:15> '<dependent type>' contains-errors '='           |-UnaryOperator 0x135808a70 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow           | `-ImplicitCastExpr 0x135808a58 <col:10> '<dependent type>' contains-errors <LValueToRValue>           |   `-RecoveryExpr 0x135808a38 <col:10> '<dependent type>' contains-errors lvalue           `-RecoveryExpr 0x135808a88 <col:15> '<dependent type>' contains-errors lvalue ","19079":"`-FunctionDecl 0x12b80ddc8  line:1:7 invalid zmalloc_no_tcache 'void *(int)'   |-ParmVarDecl 0x12b80dcf0 <col:25, col:32> col:32 invalid size 'int'   `-CompoundStmt 0x12b828110 <col:38, line:6:1>     |-DeclStmt 0x12b80e1a0 <line:2:5, col:63>     | `-VarDecl 0x12b80de90 <col:5, col:62> col:11 used ptr 'void *' cinit     |   `-CallExpr 0x12b80e170 <col:17, col:62> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12b80e050 <col:17> 'int ()' Function 0x12b80df98 'mallocx' 'int ()'     |     |-BinaryOperator 0x12b80e130 <col:25, col:30> '<dependent type>' contains-errors '+'     |     | |-RecoveryExpr 0x12b80e070 <col:25> '<dependent type>' contains-errors lvalue     |     | `-RecoveryExpr 0x12b80e110 <col:30> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x12b80e150 <col:43> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12b80e350 <line:3:5, col:39>     | |-UnaryOperator 0x12b80e1f0 <col:9, col:10> 'int' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12b80e1d8 <col:10> 'void *' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x12b80e1b8 <col:10> 'void *' contains-errors lvalue Var 0x12b80de90 'ptr' 'void *'     | `-CallExpr 0x12b80e328 <col:15, col:39> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12b80e2e8 <col:15> 'int ()' Function 0x12b80e230 'zmalloc_oom_handler' 'int ()'     |   `-RecoveryExpr 0x12b80e308 <col:35> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12b8280a0 <line:4:5, col:48> 'int' contains-errors     | |-ImplicitCastExpr 0x12b828088 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12b827eb8 <col:5> 'int ()' Function 0x12b827e00 'update_zmalloc_stat_alloc' 'int ()'     | `-CallExpr 0x12b828048 <col:31, col:47> 'int' contains-errors     |   |-ImplicitCastExpr 0x12b828030 <col:31> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12b827fb8 <col:31> 'int ()' Function 0x12b827f00 'zmalloc_size' 'int ()'     |   `-ImplicitCastExpr 0x12b828070 <col:44> 'void *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x12b827fd8 <col:44> 'void *' contains-errors lvalue Var 0x12b80de90 'ptr' 'void *'     `-ReturnStmt 0x12b828100 <line:5:5, col:12>       `-ImplicitCastExpr 0x12b8280e8 <col:12> 'void *' contains-errors <LValueToRValue>         `-DeclRefExpr 0x12b8280c8 <col:12> 'void *' contains-errors lvalue Var 0x12b80de90 'ptr' 'void *' ","19585":"`-FunctionDecl 0x13c0082b8  line:1:12 reenc_keyslot_wipe 'int (struct crypt_device *, int)' static   |-ParmVarDecl 0x13b928648 <col:31, col:52> col:52 cd 'struct crypt_device *'   | `-UnusedAttr 0x13b9286b0 <col:70> unused   |-ParmVarDecl 0x13b928720 <line:2:2, col:6> col:6 keyslot 'int'   | `-UnusedAttr 0x13b928788 <col:29> unused   `-CompoundStmt 0x13c0083e8 <line:3:1, line:5:1>     `-ReturnStmt 0x13c0083d8 <line:4:2, col:9>       `-IntegerLiteral 0x13c0083b8 <col:9> 'int' 0 ","20136":"`-FunctionDecl 0x14200ddf8  line:1:12 invalid r_bin_java_print_local_variable_type_attr_summary 'int (int *)'   |-ParmVarDecl 0x14200dd28 <col:62, col:98> col:98 invalid lvattr 'int *'   `-CompoundStmt 0x142027868 <col:106, line:14:1>     |-IfStmt 0x14200e188 <line:2:2, line:5:2>     | |-UnaryOperator 0x14200dee0 <line:2:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14200dec8 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x14200dea8 <col:7> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14200e168 <col:15, line:5:2>     |   |-CallExpr 0x14200e118 <line:3:3, col:17> 'int'     |   | |-ImplicitCastExpr 0x14200e100 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14200e050 <col:3> 'int ()' Function 0x14200df98 'eprintf' 'int ()'     |   | `-ImplicitCastExpr 0x14200e140 <col:12> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x14200e0b0 <col:12> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x14200e158 <line:4:3>     |-CallExpr 0x14200e250 <line:6:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14200e1a8 <col:2> 'int ()' Function 0x14200df98 'eprintf' 'int ()'     | |-StringLiteral 0x14200e1c8 <col:11> 'char[4]' lvalue \"STR\"     | `-CXXDependentScopeMemberExpr 0x14200e208 <col:18, col:26> '<dependent type>' contains-errors lvalue ->file_offset     |   `-RecoveryExpr 0x14200e1e8 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14200e328 <line:7:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14200e280 <col:2> 'int ()' Function 0x14200df98 'eprintf' 'int ()'     | |-StringLiteral 0x14200e2a0 <col:11> 'char[4]' lvalue \"STR\"     | `-CXXDependentScopeMemberExpr 0x14200e2e0 <col:18, col:26> '<dependent type>' contains-errors lvalue ->start_pc     |   `-RecoveryExpr 0x14200e2c0 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x142027400 <line:8:2, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14200e358 <col:2> 'int ()' Function 0x14200df98 'eprintf' 'int ()'     | |-StringLiteral 0x14200e378 <col:11> 'char[4]' lvalue \"STR\"     | `-CXXDependentScopeMemberExpr 0x14200e3b8 <col:18, col:26> '<dependent type>' contains-errors lvalue ->length     |   `-RecoveryExpr 0x14200e398 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1420274d8 <line:9:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142027430 <col:2> 'int ()' Function 0x14200df98 'eprintf' 'int ()'     | |-StringLiteral 0x142027450 <col:11> 'char[4]' lvalue \"STR\"     | `-CXXDependentScopeMemberExpr 0x142027490 <col:18, col:26> '<dependent type>' contains-errors lvalue ->name_idx     |   `-RecoveryExpr 0x142027470 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1420275b0 <line:10:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142027508 <col:2> 'int ()' Function 0x14200df98 'eprintf' 'int ()'     | |-StringLiteral 0x142027528 <col:11> 'char[4]' lvalue \"STR\"     | `-CXXDependentScopeMemberExpr 0x142027568 <col:18, col:26> '<dependent type>' contains-errors lvalue ->name     |   `-RecoveryExpr 0x142027548 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x142027688 <line:11:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1420275e0 <col:2> 'int ()' Function 0x14200df98 'eprintf' 'int ()'     | |-StringLiteral 0x142027600 <col:11> 'char[4]' lvalue \"STR\"     | `-CXXDependentScopeMemberExpr 0x142027640 <col:18, col:26> '<dependent type>' contains-errors lvalue ->signature_idx     |   `-RecoveryExpr 0x142027620 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x142027760 <line:12:2, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1420276b8 <col:2> 'int ()' Function 0x14200df98 'eprintf' 'int ()'     | |-StringLiteral 0x1420276d8 <col:11> 'char[4]' lvalue \"STR\"     | `-CXXDependentScopeMemberExpr 0x142027718 <col:18, col:26> '<dependent type>' contains-errors lvalue ->signature     |   `-RecoveryExpr 0x1420276f8 <col:18> '<dependent type>' contains-errors lvalue     `-CallExpr 0x142027838 <line:13:2, col:31> '<dependent type>' contains-errors       |-DeclRefExpr 0x142027790 <col:2> 'int ()' Function 0x14200df98 'eprintf' 'int ()'       |-StringLiteral 0x1420277b0 <col:11> 'char[4]' lvalue \"STR\"       `-CXXDependentScopeMemberExpr 0x1420277f0 <col:18, col:26> '<dependent type>' contains-errors lvalue ->index         `-RecoveryExpr 0x1420277d0 <col:18> '<dependent type>' contains-errors lvalue ","20091":"`-FunctionDecl 0x11d928758  line:1:12 sta_info_insert_check 'int (struct sta_info *)' static   |-ParmVarDecl 0x11d928648 <col:34, col:51> col:51 used sta 'struct sta_info *'   `-CompoundStmt 0x11e008fe0 <line:2:1, line:24:1>     |-DeclStmt 0x11d940c98 <line:3:2, col:50>     | |-RecordDecl 0x11d940a50 <col:2, col:9> col:9 struct ieee80211_sub_if_data     | `-VarDecl 0x11d940bb8 <col:2, col:45> col:32 used sdata 'struct ieee80211_sub_if_data *' cinit     |   `-RecoveryExpr 0x11d940c58 <col:40, col:45> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x11d940c20 <col:40> 'struct sta_info *' lvalue ParmVar 0x11d928648 'sta' 'struct sta_info *'     |-IfStmt 0x11d9410a8 <line:6:2, line:7:11>     | |-CallExpr 0x11d940fd8 <line:6:6, col:46> 'int' contains-errors     | | |-ImplicitCastExpr 0x11d940fc0 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x11d940de0 <col:6> 'int ()' Function 0x11d940d28 'unlikely' 'int ()'     | | `-UnaryOperator 0x11d940fa8 <col:15, col:45> 'int' contains-errors prefix '!' cannot overflow     | |   `-CallExpr 0x11d940f68 <col:16, col:45> 'int' contains-errors     | |     |-ImplicitCastExpr 0x11d940f50 <col:16> 'int (*)()' <FunctionToPointerDecay>     | |     | `-DeclRefExpr 0x11d940ee0 <col:16> 'int ()' Function 0x11d940e28 'ieee80211_sdata_running' 'int ()'     | |     `-ImplicitCastExpr 0x11d940f90 <col:40> 'struct ieee80211_sub_if_data *' contains-errors <LValueToRValue>     | |       `-DeclRefExpr 0x11d940f00 <col:40> 'struct ieee80211_sub_if_data *' contains-errors lvalue Var 0x11d940bb8 'sdata' 'struct ieee80211_sub_if_data *'     | `-ReturnStmt 0x11d941098 <line:7:3, col:11>     |   `-UnaryOperator 0x11d941080 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x11d941068 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x11d941048 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x11d941708 <line:9:2, line:11:11>     | |-CallExpr 0x11d941638 <line:9:6, line:10:45> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x11d9411a8 <line:9:6> 'int ()' Function 0x11d9410f0 'WARN_ON' 'int ()'     | | `-BinaryOperator 0x11d941618 <col:14, line:10:44> 'int' contains-errors '||'     | |   |-CallExpr 0x11d941418 <line:9:14, col:61> '<dependent type>' contains-errors     | |   | |-DeclRefExpr 0x11d9412a8 <col:14> 'int ()' Function 0x11d9411f0 'ether_addr_equal' 'int ()'     | |   | |-CXXDependentScopeMemberExpr 0x11d941328 <col:31, col:40> '<dependent type>' contains-errors lvalue .addr     | |   | | `-RecoveryExpr 0x11d941300 <col:31, col:36> '<dependent type>' contains-errors lvalue     | |   | |   `-DeclRefExpr 0x11d9412c8 <col:31> 'struct sta_info *' lvalue ParmVar 0x11d928648 'sta' 'struct sta_info *'     | |   | `-CXXDependentScopeMemberExpr 0x11d9413d0 <col:46, col:57> '<dependent type>' contains-errors lvalue .addr     | |   |   `-RecoveryExpr 0x11d9413a8 <col:46, col:53> '<dependent type>' contains-errors lvalue     | |   |     `-DeclRefExpr 0x11d941370 <col:46> 'struct ieee80211_sub_if_data *' contains-errors lvalue Var 0x11d940bb8 'sdata' 'struct ieee80211_sub_if_data *'     | |   `-CallExpr 0x11d9415f0 <line:10:7, col:44> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x11d941528 <col:7> 'int ()' Function 0x11d941470 'is_multicast_ether_addr' 'int ()'     | |     `-CXXDependentScopeMemberExpr 0x11d9415a8 <col:31, col:40> '<dependent type>' contains-errors lvalue .addr     | |       `-RecoveryExpr 0x11d941580 <col:31, col:36> '<dependent type>' contains-errors lvalue     | |         `-DeclRefExpr 0x11d941548 <col:31> 'struct sta_info *' lvalue ParmVar 0x11d928648 'sta' 'struct sta_info *'     | `-ReturnStmt 0x11d9416f8 <line:11:3, col:11>     |   `-UnaryOperator 0x11d9416e0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x11d9416c8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x11d9416a8 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x11d941840 <line:14:2, col:16> 'int'     | `-ImplicitCastExpr 0x11d941828 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x11d941808 <col:2> 'int ()' Function 0x11d941750 'rcu_read_lock' 'int ()'     |-CallExpr 0x11e008860 <line:15:2, col:44> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11d941940 <col:2> 'int ()' Function 0x11d941888 'lockdep_assert_held' 'int ()'     | `-UnaryOperator 0x11e008848 <col:22, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x11e008800 <col:23, col:37> '<dependent type>' contains-errors lvalue ->sta_mtx     |     `-RecoveryExpr 0x11d941998 <col:23, col:30> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x11d941960 <col:23> 'struct ieee80211_sub_if_data *' contains-errors lvalue Var 0x11d940bb8 'sdata' 'struct ieee80211_sub_if_data *'     |-IfStmt 0x11e008f38 <line:16:2, line:20:2>     | |-BinaryOperator 0x11e008dc8 <line:16:6, line:17:69> 'int' contains-errors '&&'     | | |-CallExpr 0x11e008d40 <line:16:6, col:65> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x11e008968 <col:6> 'int ()' Function 0x11e0088b0 'ieee80211_hw_check' 'int ()'     | | | |-UnaryOperator 0x11e008a30 <col:25, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | | `-CXXDependentScopeMemberExpr 0x11e0089e8 <col:26, col:40> '<dependent type>' contains-errors lvalue ->hw     | | | |   `-RecoveryExpr 0x11e0089c0 <col:26, col:33> '<dependent type>' contains-errors lvalue     | | | |     `-DeclRefExpr 0x11e008988 <col:26> 'struct ieee80211_sub_if_data *' contains-errors lvalue Var 0x11d940bb8 'sdata' 'struct ieee80211_sub_if_data *'     | | | `-RecoveryExpr 0x11e008d20 <col:44> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x11e008d90 <line:17:6, col:69> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x11e008b70 <col:6> 'int ()' Function 0x11e008ab8 'ieee80211_find_sta_by_ifaddr' 'int ()'     | |   |-UnaryOperator 0x11e008c38 <col:35, col:50> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   | `-CXXDependentScopeMemberExpr 0x11e008bf0 <col:36, col:50> '<dependent type>' contains-errors lvalue ->hw     | |   |   `-RecoveryExpr 0x11e008bc8 <col:36, col:43> '<dependent type>' contains-errors lvalue     | |   |     `-DeclRefExpr 0x11e008b90 <col:36> 'struct ieee80211_sub_if_data *' contains-errors lvalue Var 0x11d940bb8 'sdata' 'struct ieee80211_sub_if_data *'     | |   |-RecoveryExpr 0x11e008c88 <col:54, col:59> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x11e008c50 <col:54> 'struct sta_info *' lvalue ParmVar 0x11d928648 'sta' 'struct sta_info *'     | |   `-RecoveryExpr 0x11e008d70 <col:65> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x11e008f20 <col:72, line:20:2>     |   `-CallExpr 0x11e008f00 <line:18:3, col:19> 'int'     |     `-ImplicitCastExpr 0x11e008ee8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x11e008ec8 <col:3> 'int ()' Function 0x11e008e10 'rcu_read_unlock' 'int ()'     |-CallExpr 0x11e008f90 <line:21:2, col:18> 'int'     | `-ImplicitCastExpr 0x11e008f78 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x11e008f58 <col:2> 'int ()' Function 0x11e008e10 'rcu_read_unlock' 'int ()'     `-ReturnStmt 0x11e008fd0 <line:23:2, col:9>       `-IntegerLiteral 0x11e008fb0 <col:9> 'int' 0 ","19774":"`-FunctionDecl 0x13900e350  line:1:13 vmx_complete_atomic_exit 'void (struct vcpu_vmx *)' static   |-ParmVarDecl 0x13900e248 <col:38, col:55> col:55 used vmx 'struct vcpu_vmx *'   `-CompoundStmt 0x1390272e0 <line:2:1, line:23:1>     |-IfStmt 0x1390267e0 <line:5:2, line:7:3>     | |-RecoveryExpr 0x1390267b0 <line:5:6, line:6:56> '_Bool' contains-errors     | `-ReturnStmt 0x1390267d0 <line:7:3>     |-BinaryOperator 0x139026a38 <line:9:2, col:53> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x139026838 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x139026800 <col:2> 'struct vcpu_vmx *' lvalue ParmVar 0x13900e248 'vmx' 'struct vcpu_vmx *'     | `-CallExpr 0x139026a10 <col:24, col:53> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x139026970 <col:24> 'int ()' Function 0x1390268b8 'vmcs_read32' 'int ()'     |   `-RecoveryExpr 0x1390269f0 <col:36> '<dependent type>' contains-errors lvalue     |-IfStmt 0x139026da8 <line:13:2, line:14:21>     | |-CallExpr 0x139026c18 <line:13:6, col:37> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x139026b98 <col:6> 'int ()' Function 0x139026ae0 'is_machine_check' 'int ()'     | | `-RecoveryExpr 0x139026bf8 <col:23> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x139026d88 <line:14:3, col:21> 'int'     |   `-ImplicitCastExpr 0x139026d70 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x139026d20 <col:3> 'int ()' Function 0x139026c68 'kvm_machine_check' 'int ()'     `-IfStmt 0x1390272c0 <line:17:2, line:22:2>       |-RecoveryExpr 0x139026e80 <line:17:6, line:18:44> '_Bool' contains-errors       `-CompoundStmt 0x139027298 <col:47, line:22:2>         |-CallExpr 0x139027018 <line:19:3, col:35> '<dependent type>' contains-errors         | |-DeclRefExpr 0x139026f80 <col:3> 'int ()' Function 0x139026ec8 'kvm_before_handle_nmi' 'int ()'         | `-UnaryOperator 0x139027000 <col:25, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow         |   `-RecoveryExpr 0x139026fd8 <col:26, col:31> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x139026fa0 <col:26> 'struct vcpu_vmx *' lvalue ParmVar 0x13900e248 'vmx' 'struct vcpu_vmx *'         |-GCCAsmStmt 0x1390270a0 <line:20:3, col:12>         `-CallExpr 0x139027270 <line:21:3, col:34> '<dependent type>' contains-errors           |-DeclRefExpr 0x1390271d8 <col:3> 'int ()' Function 0x139027120 'kvm_after_handle_nmi' 'int ()'           `-UnaryOperator 0x139027258 <col:24, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow             `-RecoveryExpr 0x139027230 <col:25, col:30> '<dependent type>' contains-errors lvalue               `-DeclRefExpr 0x1390271f8 <col:25> 'struct vcpu_vmx *' lvalue ParmVar 0x13900e248 'vmx' 'struct vcpu_vmx *' ","20115":"`-FunctionDecl 0x15b922898  line:1:36 cgroup_e_css_by_mask 'struct cgroup_subsys_state *(struct cgroup *, struct cgroup_subsys *)' static   |-ParmVarDecl 0x14b80e2e8 <col:57, col:72> col:72 used cgrp 'struct cgroup *'   |-ParmVarDecl 0x15b9226c8 <line:2:8, col:30> col:30 used ss 'struct cgroup_subsys *'   `-CompoundStmt 0x15b9233f8 <line:3:1, line:17:1>     |-CallExpr 0x15b922b70 <line:4:2, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15b922ac0 <col:2> 'int ()' Function 0x15b922a08 'lockdep_assert_held' 'int ()'     | `-UnaryOperator 0x15b922b58 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x15b922b38 <col:23> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15b922c70 <line:6:2, line:7:17>     | |-UnaryOperator 0x15b922bd0 <line:6:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x15b922bb8 <col:7> 'struct cgroup_subsys *' <LValueToRValue>     | |   `-DeclRefExpr 0x15b922b98 <col:7> 'struct cgroup_subsys *' lvalue ParmVar 0x15b9226c8 'ss' 'struct cgroup_subsys *'     | `-ReturnStmt 0x15b922c60 <line:7:3, col:17>     |   `-UnaryOperator 0x15b922c48 <col:10, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x15b922c20 <col:11, col:17> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x15b922be8 <col:11> 'struct cgroup *' lvalue ParmVar 0x14b80e2e8 'cgrp' 'struct cgroup *'     |-WhileStmt 0x15b9231f8 <line:10:2, line:14:2>     | |-UnaryOperator 0x15b922f38 <line:10:9, col:47> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ParenExpr 0x15b922f18 <col:10, col:47> '<dependent type>' contains-errors     | |   `-BinaryOperator 0x15b922ef8 <col:11, col:46> '<dependent type>' contains-errors '&'     | |     |-CallExpr 0x15b922df8 <col:11, col:30> 'int'     | |     | |-ImplicitCastExpr 0x15b922de0 <col:11> 'int (*)()' <FunctionToPointerDecay>     | |     | | `-DeclRefExpr 0x15b922d70 <col:11> 'int ()' Function 0x15b922cb8 'cgroup_ss_mask' 'int ()'     | |     | `-ImplicitCastExpr 0x15b922e20 <col:26> 'struct cgroup *' <LValueToRValue>     | |     |   `-DeclRefExpr 0x15b922d90 <col:26> 'struct cgroup *' lvalue ParmVar 0x14b80e2e8 'cgrp' 'struct cgroup *'     | |     `-ParenExpr 0x15b922ed8 <col:34, col:46> '<dependent type>' contains-errors     | |       `-BinaryOperator 0x15b922eb8 <col:35, col:44> '<dependent type>' contains-errors '<<'     | |         |-IntegerLiteral 0x15b922e38 <col:35> 'int' 1     | |         `-RecoveryExpr 0x15b922e90 <col:40, col:44> '<dependent type>' contains-errors lvalue     | |           `-DeclRefExpr 0x15b922e58 <col:40> 'struct cgroup_subsys *' lvalue ParmVar 0x15b9226c8 'ss' 'struct cgroup_subsys *'     | `-CompoundStmt 0x15b9231d8 <col:50, line:14:2>     |   |-BinaryOperator 0x15b923100 <line:11:3, col:28> 'struct cgroup *' '='     |   | |-DeclRefExpr 0x15b922f50 <col:3> 'struct cgroup *' lvalue ParmVar 0x14b80e2e8 'cgrp' 'struct cgroup *'     |   | `-ImplicitCastExpr 0x15b9230e8 <col:10, col:28> 'struct cgroup *' <IntegralToPointer>     |   |   `-CallExpr 0x15b9230a8 <col:10, col:28> 'int'     |   |     |-ImplicitCastExpr 0x15b923090 <col:10> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x15b923050 <col:10> 'int ()' Function 0x15b922f98 'cgroup_parent' 'int ()'     |   |     `-ImplicitCastExpr 0x15b9230d0 <col:24> 'struct cgroup *' <LValueToRValue>     |   |       `-DeclRefExpr 0x15b923070 <col:24> 'struct cgroup *' lvalue ParmVar 0x14b80e2e8 'cgrp' 'struct cgroup *'     |   `-IfStmt 0x15b9231b8 <line:12:3, line:13:11>     |     |-UnaryOperator 0x15b923158 <line:12:7, col:8> 'int' prefix '!' cannot overflow     |     | `-ImplicitCastExpr 0x15b923140 <col:8> 'struct cgroup *' <LValueToRValue>     |     |   `-DeclRefExpr 0x15b923120 <col:8> 'struct cgroup *' lvalue ParmVar 0x14b80e2e8 'cgrp' 'struct cgroup *'     |     `-ReturnStmt 0x15b9231a8 <line:13:4, col:11>     |       `-RecoveryExpr 0x15b923188 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x15b9233e8 <line:16:2, col:28>       `-ImplicitCastExpr 0x15b9233d0 <col:9, col:28> 'struct cgroup_subsys_state *' <IntegralToPointer>         `-CallExpr 0x15b923370 <col:9, col:28> 'int'           |-ImplicitCastExpr 0x15b923358 <col:9> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x15b9232f8 <col:9> 'int ()' Function 0x15b923240 'cgroup_css' 'int ()'           |-ImplicitCastExpr 0x15b9233a0 <col:20> 'struct cgroup *' <LValueToRValue>           | `-DeclRefExpr 0x15b923318 <col:20> 'struct cgroup *' lvalue ParmVar 0x14b80e2e8 'cgrp' 'struct cgroup *'           `-ImplicitCastExpr 0x15b9233b8 <col:26> 'struct cgroup_subsys *' <LValueToRValue>             `-DeclRefExpr 0x15b923338 <col:26> 'struct cgroup_subsys *' lvalue ParmVar 0x15b9226c8 'ss' 'struct cgroup_subsys *' ","19991":"`-FunctionDecl 0x13700de00  line:1:13 invalid AveragePool 'void (const int)' inline   |-ParmVarDecl 0x13700dcf0 <col:25, <invalid sloc>> col:41 invalid 'const int'   `-CompoundStmt 0x13780c890 <line:4:79, line:52:1>     |-CallExpr 0x13700e188 <line:5:3, col:52> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13700e010 <col:3> 'int ()' Function 0x13700df58 'TFLITE_DCHECK_EQ' 'int ()'     | |-CallExpr 0x13700e168 <col:20, col:48> '<dependent type>' contains-errors     | | `-CXXDependentScopeMemberExpr 0x13700e120 <col:20, col:32> '<dependent type>' contains-errors lvalue .DimensionsCount     | |   `-RecoveryExpr 0x13700e100 <col:20> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x13700e0b0 <col:51> 'int' 4     |-CallExpr 0x13700e330 <line:6:3, col:53> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13700e1b8 <col:3> 'int ()' Function 0x13700df58 'TFLITE_DCHECK_EQ' 'int ()'     | |-CallExpr 0x13700e310 <col:20, col:49> '<dependent type>' contains-errors     | | `-CXXDependentScopeMemberExpr 0x13700e2c8 <col:20, col:33> '<dependent type>' contains-errors lvalue .DimensionsCount     | |   `-RecoveryExpr 0x13700e2a8 <col:20> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x13700e258 <col:52> 'int' 4     |-DeclStmt 0x137809430 <line:7:3, col:67>     | `-VarDecl 0x13700e378 <col:3, col:66> col:13 used batches 'const int' cinit     |   `-CallExpr 0x1378093f0 <col:23, col:66> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1378092e0 <col:23> 'int ()' Function 0x137809228 'MatchingDim' 'int ()'     |     |-RecoveryExpr 0x1378093b0 <col:35> '<dependent type>' contains-errors lvalue     |     |-IntegerLiteral 0x137809318 <col:48> 'int' 0     |     |-RecoveryExpr 0x1378093d0 <col:51> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x137809350 <col:65> 'int' 0     |-DeclStmt 0x137809618 <line:8:3, col:65>     | `-VarDecl 0x137809460 <col:3, col:64> col:13 used depth 'const int' cinit     |   `-CallExpr 0x1378095d8 <col:21, col:64> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1378094c8 <col:21> 'int ()' Function 0x137809228 'MatchingDim' 'int ()'     |     |-RecoveryExpr 0x137809598 <col:33> '<dependent type>' contains-errors lvalue     |     |-IntegerLiteral 0x137809500 <col:46> 'int' 3     |     |-RecoveryExpr 0x1378095b8 <col:49> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x137809538 <col:63> 'int' 3     |-DeclStmt 0x1378097e8 <line:9:3, col:47>     | `-VarDecl 0x137809648 <col:3, col:46> col:13 input_height 'const int' cinit     |   `-CallExpr 0x1378097c0 <col:28, col:46> '<dependent type>' contains-errors     |     |-CXXDependentScopeMemberExpr 0x137809778 <col:28, col:40> '<dependent type>' contains-errors lvalue .Dims     |     | `-RecoveryExpr 0x137809758 <col:28> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x137809710 <col:45> 'int' 1     |-DeclStmt 0x1378099b8 <line:10:3, col:46>     | `-VarDecl 0x137809818 <col:3, col:45> col:13 input_width 'const int' cinit     |   `-CallExpr 0x137809990 <col:27, col:45> '<dependent type>' contains-errors     |     |-CXXDependentScopeMemberExpr 0x137809948 <col:27, col:39> '<dependent type>' contains-errors lvalue .Dims     |     | `-RecoveryExpr 0x137809928 <col:27> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x1378098e0 <col:44> 'int' 2     |-DeclStmt 0x137809b88 <line:11:3, col:49>     | `-VarDecl 0x1378099e8 <col:3, col:48> col:13 used output_height 'const int' cinit     |   `-CallExpr 0x137809b60 <col:29, col:48> '<dependent type>' contains-errors     |     |-CXXDependentScopeMemberExpr 0x137809b18 <col:29, col:42> '<dependent type>' contains-errors lvalue .Dims     |     | `-RecoveryExpr 0x137809af8 <col:29> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x137809ab0 <col:47> 'int' 1     |-DeclStmt 0x137809d58 <line:12:3, col:48>     | `-VarDecl 0x137809bb8 <col:3, col:47> col:13 used output_width 'const int' cinit     |   `-CallExpr 0x137809d30 <col:28, col:47> '<dependent type>' contains-errors     |     |-CXXDependentScopeMemberExpr 0x137809ce8 <col:28, col:41> '<dependent type>' contains-errors lvalue .Dims     |     | `-RecoveryExpr 0x137809cc8 <col:28> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x137809c80 <col:46> 'int' 2     |-DeclStmt 0x137809eb8 <line:13:3, col:49>     | `-VarDecl 0x137809d88 <col:3, col:36> col:13 used stride_height 'const int' cinit     |   `-CXXDependentScopeMemberExpr 0x137809e70 <col:29, col:36> '<dependent type>' contains-errors lvalue .stride_height     |     `-RecoveryExpr 0x137809e50 <col:29> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x13780a018 <line:14:3, col:47>     | `-VarDecl 0x137809ee8 <col:3, col:35> col:13 used stride_width 'const int' cinit     |   `-CXXDependentScopeMemberExpr 0x137809fd0 <col:28, col:35> '<dependent type>' contains-errors lvalue .stride_width     |     `-RecoveryExpr 0x137809fb0 <col:28> '<dependent type>' contains-errors lvalue     `-ForStmt 0x13780c858 <line:15:3, line:51:3>       |-DeclStmt 0x13780a0d0 <line:15:8, col:21>       | `-VarDecl 0x13780a048 <col:8, col:20> col:12 used batch 'int' cinit       |   `-IntegerLiteral 0x13780a0b0 <col:20> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x13780a158 <col:23, col:31> 'int' contains-errors '<'       | |-ImplicitCastExpr 0x13780a128 <col:23> 'int' <LValueToRValue>       | | `-DeclRefExpr 0x13780a0e8 <col:23> 'int' lvalue Var 0x13780a048 'batch' 'int'       | `-ImplicitCastExpr 0x13780a140 <col:31> 'int' contains-errors <LValueToRValue>       |   `-DeclRefExpr 0x13780a108 <col:31> 'const int' contains-errors lvalue Var 0x13700e378 'batches' 'const int'       |-UnaryOperator 0x13780a198 <col:40, col:42> 'int' prefix '++'       | `-DeclRefExpr 0x13780a178 <col:42> 'int' lvalue Var 0x13780a048 'batch' 'int'       `-CompoundStmt 0x13780c840 <col:49, line:51:3>         `-ForStmt 0x13780c808 <line:16:5, line:50:5>           |-DeclStmt 0x13780ac88 <line:16:10, col:23>           | `-VarDecl 0x13780ac00 <col:10, col:22> col:14 used out_y 'int' cinit           |   `-IntegerLiteral 0x13780ac68 <col:22> 'int' 0           |-<<<NULL>>>           |-BinaryOperator 0x13780ad10 <col:25, col:33> 'int' contains-errors '<'           | |-ImplicitCastExpr 0x13780ace0 <col:25> 'int' <LValueToRValue>           | | `-DeclRefExpr 0x13780aca0 <col:25> 'int' lvalue Var 0x13780ac00 'out_y' 'int'           | `-ImplicitCastExpr 0x13780acf8 <col:33> 'int' contains-errors <LValueToRValue>           |   `-DeclRefExpr 0x13780acc0 <col:33> 'const int' contains-errors lvalue Var 0x1378099e8 'output_height' 'const int'           |-UnaryOperator 0x13780ad50 <col:48, col:50> 'int' prefix '++'           | `-DeclRefExpr 0x13780ad30 <col:50> 'int' lvalue Var 0x13780ac00 'out_y' 'int'           `-CompoundStmt 0x13780c7f0 <col:57, line:50:5>             `-ForStmt 0x13780c7b8 <line:17:7, line:49:7>               |-DeclStmt 0x13780ae08 <line:17:12, col:25>               | `-VarDecl 0x13780ad80 <col:12, col:24> col:16 used out_x 'int' cinit               |   `-IntegerLiteral 0x13780ade8 <col:24> 'int' 0               |-<<<NULL>>>               |-BinaryOperator 0x13780ae90 <col:27, col:35> 'int' contains-errors '<'               | |-ImplicitCastExpr 0x13780ae60 <col:27> 'int' <LValueToRValue>               | | `-DeclRefExpr 0x13780ae20 <col:27> 'int' lvalue Var 0x13780ad80 'out_x' 'int'               | `-ImplicitCastExpr 0x13780ae78 <col:35> 'int' contains-errors <LValueToRValue>               |   `-DeclRefExpr 0x13780ae40 <col:35> 'const int' contains-errors lvalue Var 0x137809bb8 'output_width' 'const int'               |-UnaryOperator 0x13780aed0 <col:49, col:51> 'int' prefix '++'               | `-DeclRefExpr 0x13780aeb0 <col:51> 'int' lvalue Var 0x13780ad80 'out_x' 'int'               `-CompoundStmt 0x13780c7a0 <col:58, line:49:7>                 `-ForStmt 0x13780c768 <line:18:9, line:48:9>                   |-DeclStmt 0x13780af88 <line:18:14, col:29>                   | `-VarDecl 0x13780af00 <col:14, col:28> col:18 used channel 'int' cinit                   |   `-IntegerLiteral 0x13780af68 <col:28> 'int' 0                   |-<<<NULL>>>                   |-BinaryOperator 0x13780b010 <col:31, col:41> 'int' contains-errors '<'                   | |-ImplicitCastExpr 0x13780afe0 <col:31> 'int' <LValueToRValue>                   | | `-DeclRefExpr 0x13780afa0 <col:31> 'int' lvalue Var 0x13780af00 'channel' 'int'                   | `-ImplicitCastExpr 0x13780aff8 <col:41> 'int' contains-errors <LValueToRValue>                   |   `-DeclRefExpr 0x13780afc0 <col:41> 'const int' contains-errors lvalue Var 0x137809460 'depth' 'const int'                   |-UnaryOperator 0x13780b050 <col:48, col:50> 'int' prefix '++'                   | `-DeclRefExpr 0x13780b030 <col:50> 'int' lvalue Var 0x13780af00 'channel' 'int'                   `-CompoundStmt 0x13780c708 <col:59, line:48:9>                     |-DeclStmt 0x13780b410 <line:19:11, line:20:67>                     | `-VarDecl 0x13780b080 <line:19:11, line:20:62> line:19:21 used in_x_origin 'const int' cinit                     |   `-BinaryOperator 0x13780b3f0 <line:20:15, col:62> '<dependent type>' contains-errors '-'                     |     |-ParenExpr 0x13780b320 <col:15, col:36> 'int' contains-errors                     |     | `-BinaryOperator 0x13780b300 <col:16, col:24> 'int' contains-errors '*'                     |     |   |-ImplicitCastExpr 0x13780b2d0 <col:16> 'int' <LValueToRValue>                     |     |   | `-DeclRefExpr 0x13780b0e8 <col:16> 'int' lvalue Var 0x13780ad80 'out_x' 'int'                     |     |   `-ImplicitCastExpr 0x13780b2e8 <col:24> 'int' contains-errors <LValueToRValue>                     |     |     `-DeclRefExpr 0x13780b108 <col:24> 'const int' contains-errors lvalue Var 0x137809ee8 'stride_width' 'const int'                     |     `-CXXDependentScopeMemberExpr 0x13780b3a8 <col:40, col:62> '<dependent type>' contains-errors lvalue .width                     |       `-CXXDependentScopeMemberExpr 0x13780b360 <col:40, col:47> '<dependent type>' contains-errors lvalue .padding_values                     |         `-RecoveryExpr 0x13780b340 <col:40> '<dependent type>' contains-errors lvalue                     |-DeclStmt 0x13780b7d0 <line:21:11, line:22:69>                     | `-VarDecl 0x13780b440 <line:21:11, line:22:63> line:21:21 used in_y_origin 'const int' cinit                     |   `-BinaryOperator 0x13780b7b0 <line:22:15, col:63> '<dependent type>' contains-errors '-'                     |     |-ParenExpr 0x13780b6e0 <col:15, col:37> 'int' contains-errors                     |     | `-BinaryOperator 0x13780b6c0 <col:16, col:24> 'int' contains-errors '*'                     |     |   |-ImplicitCastExpr 0x13780b690 <col:16> 'int' <LValueToRValue>                     |     |   | `-DeclRefExpr 0x13780b4a8 <col:16> 'int' lvalue Var 0x13780ac00 'out_y' 'int'                     |     |   `-ImplicitCastExpr 0x13780b6a8 <col:24> 'int' contains-errors <LValueToRValue>                     |     |     `-DeclRefExpr 0x13780b4c8 <col:24> 'const int' contains-errors lvalue Var 0x137809d88 'stride_height' 'const int'                     |     `-CXXDependentScopeMemberExpr 0x13780b768 <col:41, col:63> '<dependent type>' contains-errors lvalue .height                     |       `-CXXDependentScopeMemberExpr 0x13780b720 <col:41, col:48> '<dependent type>' contains-errors lvalue .padding_values                     |         `-RecoveryExpr 0x13780b700 <col:41> '<dependent type>' contains-errors lvalue                     |-DeclStmt 0x13780b8a0 <line:25:11, col:41>                     | `-VarDecl 0x13780b800 <col:11, col:38> col:21 used filter_x_start 'const int' cinit                     |   `-RecoveryExpr 0x13780b880 <col:38> '<dependent type>' contains-errors lvalue                     |-DeclStmt 0x13780b938 <line:26:11, line:27:71>                     | `-VarDecl 0x13780b8d0 <line:26:11, col:21> col:21 used filter_x_end 'const int'                     |-DeclStmt 0x13780b9d0 <line:28:11, col:63>                     | `-VarDecl 0x13780b968 <col:11, col:21> col:21 used filter_y_start 'const int'                     |-DeclStmt 0x13780ba68 <line:29:11, line:30:73>                     | `-VarDecl 0x13780ba00 <line:29:11, col:21> col:21 used filter_y_end 'const int'                     |-DeclStmt 0x13780bb20 <line:31:11, col:28>                     | `-VarDecl 0x13780ba98 <col:11, col:25> col:17 used total 'float' cinit                     |   `-FloatingLiteral 0x13780bb00 <col:25> 'float' 0.000000e+00                     |-DeclStmt 0x13780bc00 <line:32:11, col:33>                     | `-VarDecl 0x13780bb50 <col:11, col:32> col:17 used filter_count 'float' cinit                     |   `-ImplicitCastExpr 0x13780bbd8 <col:32> 'float' <IntegralToFloating>                     |     `-IntegerLiteral 0x13780bbb8 <col:32> 'int' 0                     |-ForStmt 0x13780c3e8 <line:33:11, line:43:11>                     | |-DeclStmt 0x13780bcd0 <line:33:16, col:45>                     | | `-VarDecl 0x13780bc30 <col:16, col:31> col:20 used filter_y 'int' cinit                     | |   `-ImplicitCastExpr 0x13780bcb8 <col:31> 'int' <LValueToRValue>                     | |     `-DeclRefExpr 0x13780bc98 <col:31> 'const int' lvalue Var 0x13780b968 'filter_y_start' 'const int'                     | |-<<<NULL>>>                     | |-BinaryOperator 0x13780bd58 <col:47, col:58> 'int' '<'                     | | |-ImplicitCastExpr 0x13780bd28 <col:47> 'int' <LValueToRValue>                     | | | `-DeclRefExpr 0x13780bce8 <col:47> 'int' lvalue Var 0x13780bc30 'filter_y' 'int'                     | | `-ImplicitCastExpr 0x13780bd40 <col:58> 'int' <LValueToRValue>                     | |   `-DeclRefExpr 0x13780bd08 <col:58> 'const int' lvalue Var 0x13780ba00 'filter_y_end' 'const int'                     | |-UnaryOperator 0x13780bd98 <line:34:16, col:18> 'int' prefix '++'                     | | `-DeclRefExpr 0x13780bd78 <col:18> 'int' lvalue Var 0x13780bc30 'filter_y' 'int'                     | `-CompoundStmt 0x13780c3d0 <col:28, line:43:11>                     |   `-ForStmt 0x13780c398 <line:35:13, line:42:13>                     |     |-DeclStmt 0x13780be68 <line:35:18, col:47>                     |     | `-VarDecl 0x13780bdc8 <col:18, col:33> col:22 used filter_x 'int' cinit                     |     |   `-ImplicitCastExpr 0x13780be50 <col:33> 'int' contains-errors <LValueToRValue>                     |     |     `-DeclRefExpr 0x13780be30 <col:33> 'const int' contains-errors lvalue Var 0x13780b800 'filter_x_start' 'const int'                     |     |-<<<NULL>>>                     |     |-BinaryOperator 0x13780bef0 <col:49, col:60> 'int' contains-errors '<'                     |     | |-ImplicitCastExpr 0x13780bec0 <col:49> 'int' contains-errors <LValueToRValue>                     |     | | `-DeclRefExpr 0x13780be80 <col:49> 'int' contains-errors lvalue Var 0x13780bdc8 'filter_x' 'int'                     |     | `-ImplicitCastExpr 0x13780bed8 <col:60> 'int' <LValueToRValue>                     |     |   `-DeclRefExpr 0x13780bea0 <col:60> 'const int' lvalue Var 0x13780b8d0 'filter_x_end' 'const int'                     |     |-UnaryOperator 0x13780bf30 <line:36:18, col:20> 'int' contains-errors prefix '++'                     |     | `-DeclRefExpr 0x13780bf10 <col:20> 'int' contains-errors lvalue Var 0x13780bdc8 'filter_x' 'int'                     |     `-CompoundStmt 0x13780c370 <col:30, line:42:13>                     |       |-DeclStmt 0x13780c058 <line:37:15, col:54>                     |       | `-VarDecl 0x13780bf60 <col:15, col:46> col:25 used in_x 'const int' cinit                     |       |   `-BinaryOperator 0x13780c038 <col:32, col:46> 'int' contains-errors '+'                     |       |     |-ImplicitCastExpr 0x13780c008 <col:32> 'int' contains-errors <LValueToRValue>                     |       |     | `-DeclRefExpr 0x13780bfc8 <col:32> 'const int' contains-errors lvalue Var 0x13780b080 'in_x_origin' 'const int'                     |       |     `-ImplicitCastExpr 0x13780c020 <col:46> 'int' contains-errors <LValueToRValue>                     |       |       `-DeclRefExpr 0x13780bfe8 <col:46> 'int' contains-errors lvalue Var 0x13780bdc8 'filter_x' 'int'                     |       |-DeclStmt 0x13780c180 <line:38:15, col:54>                     |       | `-VarDecl 0x13780c088 <col:15, col:46> col:25 used in_y 'const int' cinit                     |       |   `-BinaryOperator 0x13780c160 <col:32, col:46> 'int' contains-errors '+'                     |       |     |-ImplicitCastExpr 0x13780c130 <col:32> 'int' contains-errors <LValueToRValue>                     |       |     | `-DeclRefExpr 0x13780c0f0 <col:32> 'const int' contains-errors lvalue Var 0x13780b440 'in_y_origin' 'const int'                     |       |     `-ImplicitCastExpr 0x13780c148 <col:46> 'int' <LValueToRValue>                     |       |       `-DeclRefExpr 0x13780c110 <col:46> 'int' lvalue Var 0x13780bc30 'filter_y' 'int'                     |       `-UnaryOperator 0x13780c358 <line:41:15, col:27> 'float' postfix '++'                     |         `-DeclRefExpr 0x13780c338 <col:15> 'float' lvalue Var 0x13780bb50 'filter_count' 'float'                     `-DeclStmt 0x13780c530 <line:44:11, col:53>                       `-VarDecl 0x13780c438 <col:11, col:41> col:23 used average 'const float' cinit                         `-BinaryOperator 0x13780c510 <col:33, col:41> 'float' '\/'                           |-ImplicitCastExpr 0x13780c4e0 <col:33> 'float' <LValueToRValue>                           | `-DeclRefExpr 0x13780c4a0 <col:33> 'float' lvalue Var 0x13780ba98 'total' 'float'                           `-ImplicitCastExpr 0x13780c4f8 <col:41> 'float' <LValueToRValue>                             `-DeclRefExpr 0x13780c4c0 <col:41> 'float' lvalue Var 0x13780bb50 'filter_count' 'float' ","19656":"`-FunctionDecl 0x1351283d8  line:1:12 invalid ssl_scan_clienthello_custom_tlsext 'int (int *, const unsigned char *, const unsigned char *, int *)' static   |-ParmVarDecl 0x135128128 <col:47, col:52> col:52 invalid s 'int *'   |-ParmVarDecl 0x1351281d8 <line:2:47, col:68> col:68 used data 'const unsigned char *'   |-ParmVarDecl 0x135128258 <line:3:47, col:68> col:68 used limit 'const unsigned char *'   |-ParmVarDecl 0x1351282d8 <line:4:47, col:52> col:52 used al 'int *'   `-CompoundStmt 0x135142528 <line:5:1, line:31:1>     |-DeclStmt 0x135128640 <line:6:5, col:35>     | |-VarDecl 0x1351284b8 <col:5, col:20> col:20 used type 'unsigned short'     | |-VarDecl 0x135128538 <col:5, col:26> col:26 used size 'unsigned short'     | `-VarDecl 0x1351285b8 <col:5, col:32> col:32 used len 'unsigned short'     |-IfStmt 0x135141850 <line:8:5, line:9:16>     | |-BinaryOperator 0x135141800 <line:8:9, col:51> 'int' contains-errors '||'     | | |-CXXDependentScopeMemberExpr 0x135128678 <col:9, col:12> '<dependent type>' contains-errors lvalue ->hit     | | | `-RecoveryExpr 0x135128658 <col:9> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x1351287d8 <col:19, col:51> 'int' contains-errors '=='     | |   |-CXXDependentScopeMemberExpr 0x135128770 <col:19, col:36> '<dependent type>' contains-errors lvalue .meths_count     | |   | `-CXXDependentScopeMemberExpr 0x135128728 <col:19, col:28> '<dependent type>' contains-errors lvalue ->srv_ext     | |   |   `-CXXDependentScopeMemberExpr 0x1351286e0 <col:19, col:22> '<dependent type>' contains-errors lvalue ->cert     | |   |     `-RecoveryExpr 0x1351286c0 <col:19> '<dependent type>' contains-errors lvalue     | |   `-IntegerLiteral 0x1351287b8 <col:51> 'int' 0     | `-ReturnStmt 0x135141840 <line:9:9, col:16>     |   `-IntegerLiteral 0x135141820 <col:16> 'int' 1     |-IfStmt 0x135141970 <line:11:5, line:12:16>     | |-BinaryOperator 0x135141920 <line:11:9, col:25> 'int' '>='     | | |-ImplicitCastExpr 0x135141908 <col:9> 'const unsigned char *' <LValueToRValue>     | | | `-DeclRefExpr 0x135141870 <col:9> 'const unsigned char *' lvalue ParmVar 0x1351281d8 'data' 'const unsigned char *'     | | `-BinaryOperator 0x1351418e8 <col:17, col:25> 'const unsigned char *' '-'     | |   |-ImplicitCastExpr 0x1351418d0 <col:17> 'const unsigned char *' <LValueToRValue>     | |   | `-DeclRefExpr 0x135141890 <col:17> 'const unsigned char *' lvalue ParmVar 0x135128258 'limit' 'const unsigned char *'     | |   `-IntegerLiteral 0x1351418b0 <col:25> 'int' 2     | `-ReturnStmt 0x135141960 <line:12:9, col:16>     |   `-IntegerLiteral 0x135141940 <col:16> 'int' 1     |-CallExpr 0x135141b98 <line:13:5, col:18> 'int'     | |-ImplicitCastExpr 0x135141b80 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x135141af0 <col:5> 'int ()' Function 0x135141a38 'n2s' 'int ()'     | |-ImplicitCastExpr 0x135141bc8 <col:9> 'const unsigned char *' <LValueToRValue>     | | `-DeclRefExpr 0x135141b10 <col:9> 'const unsigned char *' lvalue ParmVar 0x1351281d8 'data' 'const unsigned char *'     | `-ImplicitCastExpr 0x135141bf8 <col:15> 'int' <IntegralCast>     |   `-ImplicitCastExpr 0x135141be0 <col:15> 'unsigned short' <LValueToRValue>     |     `-DeclRefExpr 0x135141b30 <col:15> 'unsigned short' lvalue Var 0x1351285b8 'len' 'unsigned short'     |-IfStmt 0x135141d40 <line:15:5, line:16:16>     | |-BinaryOperator 0x135141cf0 <line:15:9, col:24> 'int' '>'     | | |-ImplicitCastExpr 0x135141cd8 <col:9> 'const unsigned char *' <LValueToRValue>     | | | `-DeclRefExpr 0x135141c10 <col:9> 'const unsigned char *' lvalue ParmVar 0x1351281d8 'data' 'const unsigned char *'     | | `-BinaryOperator 0x135141cb8 <col:16, col:24> 'const unsigned char *' '-'     | |   |-ImplicitCastExpr 0x135141c70 <col:16> 'const unsigned char *' <LValueToRValue>     | |   | `-DeclRefExpr 0x135141c30 <col:16> 'const unsigned char *' lvalue ParmVar 0x135128258 'limit' 'const unsigned char *'     | |   `-ImplicitCastExpr 0x135141ca0 <col:24> 'int' <IntegralCast>     | |     `-ImplicitCastExpr 0x135141c88 <col:24> 'unsigned short' <LValueToRValue>     | |       `-DeclRefExpr 0x135141c50 <col:24> 'unsigned short' lvalue Var 0x1351285b8 'len' 'unsigned short'     | `-ReturnStmt 0x135141d30 <line:16:9, col:16>     |   `-IntegerLiteral 0x135141d10 <col:16> 'int' 1     |-WhileStmt 0x1351424d8 <line:18:5, line:28:5>     | |-BinaryOperator 0x135141e10 <line:18:12, col:28> 'int' '<='     | | |-ImplicitCastExpr 0x135141df8 <col:12> 'const unsigned char *' <LValueToRValue>     | | | `-DeclRefExpr 0x135141d60 <col:12> 'const unsigned char *' lvalue ParmVar 0x1351281d8 'data' 'const unsigned char *'     | | `-BinaryOperator 0x135141dd8 <col:20, col:28> 'const unsigned char *' '-'     | |   |-ImplicitCastExpr 0x135141dc0 <col:20> 'const unsigned char *' <LValueToRValue>     | |   | `-DeclRefExpr 0x135141d80 <col:20> 'const unsigned char *' lvalue ParmVar 0x135128258 'limit' 'const unsigned char *'     | |   `-IntegerLiteral 0x135141da0 <col:28> 'int' 4     | `-CompoundStmt 0x1351424a0 <col:31, line:28:5>     |   |-CallExpr 0x135141ea8 <line:19:9, col:23> 'int'     |   | |-ImplicitCastExpr 0x135141e90 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x135141e30 <col:9> 'int ()' Function 0x135141a38 'n2s' 'int ()'     |   | |-ImplicitCastExpr 0x135141ed8 <col:13> 'const unsigned char *' <LValueToRValue>     |   | | `-DeclRefExpr 0x135141e50 <col:13> 'const unsigned char *' lvalue ParmVar 0x1351281d8 'data' 'const unsigned char *'     |   | `-ImplicitCastExpr 0x135141f08 <col:19> 'int' <IntegralCast>     |   |   `-ImplicitCastExpr 0x135141ef0 <col:19> 'unsigned short' <LValueToRValue>     |   |     `-DeclRefExpr 0x135141e70 <col:19> 'unsigned short' lvalue Var 0x1351284b8 'type' 'unsigned short'     |   |-CallExpr 0x135141f98 <line:20:9, col:23> 'int'     |   | |-ImplicitCastExpr 0x135141f80 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x135141f20 <col:9> 'int ()' Function 0x135141a38 'n2s' 'int ()'     |   | |-ImplicitCastExpr 0x135141fc8 <col:13> 'const unsigned char *' <LValueToRValue>     |   | | `-DeclRefExpr 0x135141f40 <col:13> 'const unsigned char *' lvalue ParmVar 0x1351281d8 'data' 'const unsigned char *'     |   | `-ImplicitCastExpr 0x135141ff8 <col:19> 'int' <IntegralCast>     |   |   `-ImplicitCastExpr 0x135141fe0 <col:19> 'unsigned short' <LValueToRValue>     |   |     `-DeclRefExpr 0x135141f60 <col:19> 'unsigned short' lvalue Var 0x135128538 'size' 'unsigned short'     |   |-IfStmt 0x135142140 <line:22:9, line:23:20>     |   | |-BinaryOperator 0x1351420f0 <line:22:13, col:27> 'int' '>'     |   | | |-BinaryOperator 0x135142098 <col:13, col:20> 'const unsigned char *' '+'     |   | | | |-ImplicitCastExpr 0x135142050 <col:13> 'const unsigned char *' <LValueToRValue>     |   | | | | `-DeclRefExpr 0x135142010 <col:13> 'const unsigned char *' lvalue ParmVar 0x1351281d8 'data' 'const unsigned char *'     |   | | | `-ImplicitCastExpr 0x135142080 <col:20> 'int' <IntegralCast>     |   | | |   `-ImplicitCastExpr 0x135142068 <col:20> 'unsigned short' <LValueToRValue>     |   | | |     `-DeclRefExpr 0x135142030 <col:20> 'unsigned short' lvalue Var 0x135128538 'size' 'unsigned short'     |   | | `-ImplicitCastExpr 0x1351420d8 <col:27> 'const unsigned char *' <LValueToRValue>     |   | |   `-DeclRefExpr 0x1351420b8 <col:27> 'const unsigned char *' lvalue ParmVar 0x135128258 'limit' 'const unsigned char *'     |   | `-ReturnStmt 0x135142130 <line:23:13, col:20>     |   |   `-IntegerLiteral 0x135142110 <col:20> 'int' 1     |   |-IfStmt 0x1351423e0 <line:24:9, line:25:20>     |   | |-BinaryOperator 0x135142390 <line:24:13, col:63> 'int' contains-errors '<='     |   | | |-CallExpr 0x135142320 <col:13, col:58> '<dependent type>' contains-errors     |   | | | |-DeclRefExpr 0x135142240 <col:13> 'int ()' Function 0x135142188 'custom_ext_parse' 'int ()'     |   | | | |-RecoveryExpr 0x135142260 <col:30> '<dependent type>' contains-errors lvalue     |   | | | |-IntegerLiteral 0x135142280 <col:33> 'int' 1     |   | | | |-DeclRefExpr 0x1351422a0 <col:38> 'unsigned short' lvalue Var 0x1351284b8 'type' 'unsigned short'     |   | | | |-DeclRefExpr 0x1351422c0 <col:44> 'const unsigned char *' lvalue ParmVar 0x1351281d8 'data' 'const unsigned char *'     |   | | | |-DeclRefExpr 0x1351422e0 <col:50> 'unsigned short' lvalue Var 0x135128538 'size' 'unsigned short'     |   | | | `-DeclRefExpr 0x135142300 <col:56> 'int *' lvalue ParmVar 0x1351282d8 'al' 'int *'     |   | | `-IntegerLiteral 0x135142370 <col:63> 'int' 0     |   | `-ReturnStmt 0x1351423d0 <line:25:13, col:20>     |   |   `-IntegerLiteral 0x1351423b0 <col:20> 'int' 0     |   `-CompoundAssignOperator 0x135142470 <line:27:9, col:17> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'     |     |-DeclRefExpr 0x135142400 <col:9> 'const unsigned char *' lvalue ParmVar 0x1351281d8 'data' 'const unsigned char *'     |     `-ImplicitCastExpr 0x135142458 <col:17> 'int' <IntegralCast>     |       `-ImplicitCastExpr 0x135142440 <col:17> 'unsigned short' <LValueToRValue>     |         `-DeclRefExpr 0x135142420 <col:17> 'unsigned short' lvalue Var 0x135128538 'size' 'unsigned short'     `-ReturnStmt 0x135142518 <line:30:5, col:12>       `-IntegerLiteral 0x1351424f8 <col:12> 'int' 1 ","19238":"`-FunctionDecl 0x1541143e8  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x1541144e8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x154114550 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x154114600 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x154114490 <<invalid sloc>> Implicit 900 ","20086":"`-FunctionDecl 0x13a1289a8  line:1:1 NAN_METHOD 'int (int)'   |-ParmVarDecl 0x13a1288d8 <col:12> col:12 DetectCharacterEncoding 'int'   `-CompoundStmt 0x13a142820 <col:37, line:66:1>     |-RecoveryExpr 0x13a128ae8 <line:2:2> '<dependent type>' contains-errors lvalue     |-RecoveryExpr 0x13a128b38 <line:4:2> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x13a128bf0 <line:7:2, col:35>     | `-VarDecl 0x13a128b88 <col:2, col:23> col:23 referenced invalid charsetMatch 'const int *'     |-IfStmt 0x13a128fa0 <line:12:2, line:15:2>     | |-CallExpr 0x13a128ef8 <line:12:5, col:24> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x13a128e78 <col:5> 'int ()' Function 0x13a128dc0 'U_FAILURE' 'int ()'     | | `-RecoveryExpr 0x13a128ed8 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13a128f80 <col:27, line:15:2>     |   |-RecoveryExpr 0x13a128f50 <line:13:3> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x13a128f70 <line:14:3>     |-IfStmt 0x13a142240 <line:24:2, line:28:2>     | |-RecoveryExpr 0x13a1420f8 <line:24:5, col:24> '_Bool' contains-errors     | `-CompoundStmt 0x13a142228 <col:27, line:28:2>     |   `-ReturnStmt 0x13a142218 <line:27:3>     |-IfStmt 0x13a142430 <line:32:2, line:36:2>     | |-RecoveryExpr 0x13a1423c8 <line:32:5, col:24> '_Bool' contains-errors     | `-CompoundStmt 0x13a142418 <col:27, line:36:2>     |   `-ReturnStmt 0x13a142408 <line:35:3>     |-IfStmt 0x13a1424d8 <line:38:2, line:42:2>     | |-RecoveryExpr 0x13a142470 <line:38:5, col:21> '_Bool' contains-errors     | `-CompoundStmt 0x13a1424c0 <col:27, line:42:2>     |   `-ReturnStmt 0x13a1424b0 <line:41:3>     |-DeclStmt 0x13a142698 <line:44:2, col:68>     | `-VarDecl 0x13a142510 <col:2, col:14> col:14 charsetName 'const char *'     |-IfStmt 0x13a142738 <line:46:2, line:50:2>     | |-RecoveryExpr 0x13a1426d0 <line:46:5, col:24> '_Bool' contains-errors     | `-CompoundStmt 0x13a142720 <col:27, line:50:2>     |   `-ReturnStmt 0x13a142710 <line:49:3>     `-IfStmt 0x13a1427e0 <line:54:2, line:58:2>       |-RecoveryExpr 0x13a142778 <line:54:5, col:24> '_Bool' contains-errors       `-CompoundStmt 0x13a1427c8 <col:27, line:58:2>         `-ReturnStmt 0x13a1427b8 <line:57:3> ","19606":"`-FunctionDecl 0x14b80ddf8  line:1:1 invalid CotpConnection_getPayload 'int (int *)'   |-ParmVarDecl 0x14b80dd28 <col:27, col:43> col:43 invalid self 'int *'   `-CompoundStmt 0x14b80df20 <line:2:1, line:4:1>     `-ReturnStmt 0x14b80df10 <line:3:5, col:18>       `-CXXDependentScopeMemberExpr 0x14b80dec8 <col:12, col:18> '<dependent type>' contains-errors lvalue ->payload         `-RecoveryExpr 0x14b80dea8 <col:12> '<dependent type>' contains-errors lvalue ","20174":"`-FunctionDecl 0x14780dd98  line:1:1 httpHdrContRangeCreate 'int (void)'   `-CompoundStmt 0x14780e010 <line:2:1, line:7:1>     `-ReturnStmt 0x14780e000 <line:6:5, col:12>       `-RecoveryExpr 0x14780dfe0 <col:12> '<dependent type>' contains-errors lvalue ","19678":"`-FunctionDecl 0x14c027608  line:1:1 invalid file_softmagic 'int (struct magic_set *, const unsigned char *, int, int, int)'   |-ParmVarDecl 0x14c00e248 <col:16, col:34> col:34 used ms 'struct magic_set *'   |-ParmVarDecl 0x14c00e2f8 <col:38, col:59> col:59 used buf 'const unsigned char *'   |-ParmVarDecl 0x14c00e390 <col:64, col:71> col:71 invalid nbytes 'int'   |-ParmVarDecl 0x14c027418 <line:2:5, col:9> col:9 used mode 'int'   |-ParmVarDecl 0x14c027498 <col:15, col:19> col:19 used text 'int'   `-CompoundStmt 0x14c028148 <line:3:1, line:12:1>     |-DeclStmt 0x14c0278c8 <line:4:2, col:18>     | |-RecordDecl 0x14c0276d8 <col:2, col:9> col:9 struct mlist     | `-VarDecl 0x14c027848 <col:2, col:16> col:16 used ml 'struct mlist *'     |-DeclStmt 0x14c027960 <line:5:2, col:8>     | `-VarDecl 0x14c0278f8 <col:2, col:6> col:6 used rv 'int'     |-ForStmt 0x14c0280e0 <line:6:2, line:9:11>     | |-BinaryOperator 0x14c027a98 <line:6:7, col:26> 'struct mlist *' contains-errors '='     | | |-DeclRefExpr 0x14c027978 <col:7> 'struct mlist *' lvalue Var 0x14c027848 'ml' 'struct mlist *'     | | `-CXXDependentScopeMemberExpr 0x14c027a50 <col:12, col:26> '<dependent type>' contains-errors lvalue ->next     | |   `-ArraySubscriptExpr 0x14c027a30 <col:12, col:23> '<dependent type>' contains-errors lvalue     | |     |-ImplicitCastExpr 0x14c027a18 <col:12, col:16> '<dependent type>' contains-errors <LValueToRValue>     | |     | `-RecoveryExpr 0x14c0279d0 <col:12, col:16> '<dependent type>' contains-errors lvalue     | |     |   `-DeclRefExpr 0x14c027998 <col:12> 'struct magic_set *' lvalue ParmVar 0x14c00e248 'ms' 'struct magic_set *'     | |     `-IntegerLiteral 0x14c0279f8 <col:22> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x14c027b90 <col:32, col:49> 'int' contains-errors '!='     | | |-DeclRefExpr 0x14c027ab8 <col:32> 'struct mlist *' lvalue Var 0x14c027848 'ml' 'struct mlist *'     | | `-ArraySubscriptExpr 0x14c027b70 <col:38, col:49> '<dependent type>' contains-errors lvalue     | |   |-ImplicitCastExpr 0x14c027b58 <col:38, col:42> '<dependent type>' contains-errors <LValueToRValue>     | |   | `-RecoveryExpr 0x14c027b10 <col:38, col:42> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x14c027ad8 <col:38> 'struct magic_set *' lvalue ParmVar 0x14c00e248 'ms' 'struct magic_set *'     | |   `-IntegerLiteral 0x14c027b38 <col:48> 'int' 0     | |-BinaryOperator 0x14c027c30 <col:52, col:61> 'struct mlist *' contains-errors '='     | | |-DeclRefExpr 0x14c027bb0 <col:52> 'struct mlist *' lvalue Var 0x14c027848 'ml' 'struct mlist *'     | | `-RecoveryExpr 0x14c027c08 <col:57, col:61> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14c027bd0 <col:57> 'struct mlist *' lvalue Var 0x14c027848 'ml' 'struct mlist *'     | `-IfStmt 0x14c0280c0 <line:7:3, line:9:11>     |   |-RecoveryExpr 0x14c028058 <line:7:7, line:8:26> '_Bool' contains-errors     |   `-ReturnStmt 0x14c0280b0 <line:9:4, col:11>     |     `-ImplicitCastExpr 0x14c028098 <col:11> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x14c028078 <col:11> 'int' lvalue Var 0x14c0278f8 'rv' 'int'     `-ReturnStmt 0x14c028138 <line:11:2, col:9>       `-IntegerLiteral 0x14c028118 <col:9> 'int' 0 ","20105":"`-FunctionDecl 0x146928238  line:1:12 invalid php_array_element_export 'int (int **)' static   |-ParmVarDecl 0x146928160 <col:37, col:44> col:44 invalid zv 'int **'   `-CompoundStmt 0x146942068 <line:2:1, line:35:1>     |-DeclStmt 0x146928368 <line:3:2, col:11>     | `-VarDecl 0x146928300 <col:2, col:6> col:6 used level 'int'     |-IfStmt 0x146941e00 <line:9:2, line:28:2> has_else     | |-BinaryOperator 0x1469286a0 <line:9:6, col:30> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x146928658 <col:6, col:16> '<dependent type>' contains-errors lvalue ->nKeyLength     | | | `-RecoveryExpr 0x146928638 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x1469285f8 <col:30> 'int' 0     | |-CompoundStmt 0x150808cd0 <col:33, line:14:2>     | | |-CallExpr 0x1508088e0 <line:10:3, col:36> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x1469287a0 <col:3> 'int ()' Function 0x1469286e8 'buffer_append_spaces' 'int ()'     | | | |-RecoveryExpr 0x150808888 <col:24> '<dependent type>' contains-errors lvalue     | | | `-BinaryOperator 0x1508088c0 <col:29, col:35> 'int' '+'     | | |   |-ImplicitCastExpr 0x1508088a8 <col:29> 'int' <LValueToRValue>     | | |   | `-DeclRefExpr 0x1469287d8 <col:29> 'int' lvalue Var 0x146928300 'level' 'int'     | | |   `-IntegerLiteral 0x150808800 <col:35> 'int' 1     | | `-CallExpr 0x150808c98 <line:12:3, col:34> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x150808b80 <col:3> 'int ()' Function 0x150808ac8 'smart_str_appendl' 'int ()'     | |   |-RecoveryExpr 0x150808c78 <col:21> '<dependent type>' contains-errors lvalue     | |   |-StringLiteral 0x150808c00 <col:26> 'char[4]' lvalue \"STR\"     | |   `-IntegerLiteral 0x150808c20 <col:33> 'int' 4     | `-CompoundStmt 0x1508097d0 <line:14:9, line:28:2>     |   |-DeclStmt 0x150808e08 <line:15:3, col:22>     |   | |-VarDecl 0x150808d08 <col:3, col:9> col:9 used key 'char *'     |   | `-VarDecl 0x150808d88 <col:3, col:15> col:15 used tmp_str 'char *'     |   |-DeclStmt 0x150808f38 <line:16:3, col:23>     |   | |-VarDecl 0x150808e38 <col:3, col:7> col:7 used key_len 'int'     |   | `-VarDecl 0x150808eb8 <col:3, col:16> col:16 used tmp_len 'int'     |   |-CallExpr 0x1508096f8 <line:26:3, col:12> 'int'     |   | |-ImplicitCastExpr 0x1508096e0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x150809670 <col:3> 'int ()' Function 0x1508095b8 'efree' 'int ()'     |   | `-ImplicitCastExpr 0x150809720 <col:9> 'char *' <LValueToRValue>     |   |   `-DeclRefExpr 0x150809690 <col:9> 'char *' lvalue Var 0x150808d08 'key' 'char *'     |   `-CallExpr 0x150809790 <line:27:3, col:16> 'int'     |     |-ImplicitCastExpr 0x150809778 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x150809738 <col:3> 'int ()' Function 0x1508095b8 'efree' 'int ()'     |     `-ImplicitCastExpr 0x1508097b8 <col:9> 'char *' <LValueToRValue>     |       `-DeclRefExpr 0x150809758 <col:9> 'char *' lvalue Var 0x150808d88 'tmp_str' 'char *'     `-ReturnStmt 0x146942058 <line:34:2, col:9>       `-IntegerLiteral 0x146942038 <col:9> 'int' 0 ","19856":"`-FunctionDecl 0x154027438  line:1:1 invalid atusb_txpower 'int (struct ieee802154_hw *, int)'   |-ParmVarDecl 0x15400e248 <col:15, col:37> col:37 used hw 'struct ieee802154_hw *'   |-ParmVarDecl 0x15400e2e0 <col:41, col:45> col:45 invalid mbm 'int'   `-CompoundStmt 0x1540279b0 <line:2:1, line:9:1>     |-DeclStmt 0x154027738 <line:3:2, col:32>     | |-RecordDecl 0x1540274f0 <col:2, col:9> col:9 struct atusb     | `-VarDecl 0x154027658 <col:2, col:28> col:16 used atusb 'struct atusb *' cinit     |   `-RecoveryExpr 0x1540276f8 <col:24, col:28> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1540276c0 <col:24> 'struct ieee802154_hw *' lvalue ParmVar 0x15400e248 'hw' 'struct ieee802154_hw *'     `-IfStmt 0x154027980 <line:5:2, line:8:11> has_else       |-RecoveryExpr 0x154027788 <line:5:6, col:13> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x154027750 <col:6> 'struct atusb *' contains-errors lvalue Var 0x154027658 'atusb' 'struct atusb *'       |-ReturnStmt 0x1540278c8 <line:6:3, col:42>       | `-CallExpr 0x154027898 <col:10, col:42> '<dependent type>' contains-errors       |   |-CXXDependentScopeMemberExpr 0x154027810 <col:10, col:23> '<dependent type>' contains-errors lvalue ->set_txpower       |   | `-RecoveryExpr 0x1540277e8 <col:10, col:17> '<dependent type>' contains-errors lvalue       |   |   `-DeclRefExpr 0x1540277b0 <col:10> 'struct atusb *' contains-errors lvalue Var 0x154027658 'atusb' 'struct atusb *'       |   |-DeclRefExpr 0x154027858 <col:35> 'struct ieee802154_hw *' lvalue ParmVar 0x15400e248 'hw' 'struct ieee802154_hw *'       |   `-RecoveryExpr 0x154027878 <col:39> '<dependent type>' contains-errors lvalue       `-ReturnStmt 0x154027970 <line:8:3, col:11>         `-UnaryOperator 0x154027958 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow           `-ImplicitCastExpr 0x154027940 <col:11> '<dependent type>' contains-errors <LValueToRValue>             `-RecoveryExpr 0x154027920 <col:11> '<dependent type>' contains-errors lvalue ","19649":"`-FunctionDecl 0x105029530  col:21 implicit used index 'char *(const char *, int)' extern   |-ParmVarDecl 0x105029630 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x105029698 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x1050295d8 <<invalid sloc>> Implicit 952 ","19829":"`-FunctionDecl 0x12f80de58  line:1:12 invalid add_quoted_string 'int (int, const char *)' static   |-ParmVarDecl 0x12f80dcf0 <col:30, col:35> col:35 invalid fptr 'int'   |-ParmVarDecl 0x12f80dd70 <col:41, col:53> col:53 quotestr 'const char *'   `-CompoundStmt 0x12f8285a0 <line:2:1, line:9:1>     |-DeclStmt 0x12f80e1c0 <line:5:3, col:35>     | `-VarDecl 0x12f80df28 <col:3, col:34> col:7 used err 'int' cinit     |   `-CallExpr 0x12f80e190 <col:12, col:34> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12f80e0f0 <col:12> 'int ()' Function 0x12f80e038 'add_string' 'int ()'     |     |-RecoveryExpr 0x12f80e110 <col:23> '<dependent type>' contains-errors lvalue     |     `-StringLiteral 0x12f80e170 <col:29> 'char[4]' lvalue \"STR\"     |-CompoundAssignOperator 0x12f828268 <line:6:3, col:44> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-DeclRefExpr 0x12f80e1d8 <col:3> 'int' contains-errors lvalue Var 0x12f80df28 'err' 'int'     | `-CallExpr 0x12f828238 <col:9, col:44> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12f80e2d8 <col:9> 'int ()' Function 0x12f80e220 'append_escaped' 'int ()'     |   |-UnaryOperator 0x12f80e3d8 <col:24, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x12f80e3b8 <col:25> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x12f828220 <col:37, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x12f828200 <col:38> '<dependent type>' contains-errors lvalue     |-CompoundAssignOperator 0x12f828490 <line:7:3, col:49> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-DeclRefExpr 0x12f828298 <col:3> 'int' contains-errors lvalue Var 0x12f80df28 'err' 'int'     | `-CallExpr 0x12f828460 <col:9, col:49> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12f8282b8 <col:9> 'int ()' Function 0x12f80e038 'add_string' 'int ()'     |   |-RecoveryExpr 0x12f8282d8 <col:20> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x12f828440 <col:26, col:48> '<dependent type>' contains-errors     |     `-CXXDependentScopeMemberExpr 0x12f8283f8 <col:26, col:37> '<dependent type>' contains-errors lvalue .c_ptr_safe     |       `-RecoveryExpr 0x12f8283d8 <col:26> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12f828590 <line:8:3, col:38>       `-BinaryOperator 0x12f828570 <col:10, col:38> '<dependent type>' contains-errors '+'         |-DeclRefExpr 0x12f8284c0 <col:10> 'int' contains-errors lvalue Var 0x12f80df28 'err' 'int'         `-CallExpr 0x12f828540 <col:16, col:38> '<dependent type>' contains-errors           |-DeclRefExpr 0x12f8284e0 <col:16> 'int ()' Function 0x12f80e038 'add_string' 'int ()'           |-RecoveryExpr 0x12f828500 <col:27> '<dependent type>' contains-errors lvalue           `-StringLiteral 0x12f828520 <col:33> 'char[4]' lvalue \"STR\" ","19301":"`-FunctionDecl 0x1299424d0  col:4 implicit used abort 'void (void) __attribute__((noreturn))' extern   `-BuiltinAttr 0x129942578 <<invalid sloc>> Implicit 867 ","19535":"`-FunctionDecl 0x12f8268e8  line:1:1 oauth2_validate_signature 'int (const struct oauth2_settings *, const char *, const char *, const char *, const char *const *, const char **)'   |-ParmVarDecl 0x12f80e248 <col:27, col:57> col:57 used set 'const struct oauth2_settings *'   |-ParmVarDecl 0x12f80e2c8 <col:62, col:74> col:74 used azp 'const char *'   |-ParmVarDecl 0x12f80e348 <line:2:6, col:18> col:18 used alg 'const char *'   |-ParmVarDecl 0x12f826600 <col:23, col:35> col:35 used key_id 'const char *'   |-ParmVarDecl 0x12f8266b8 <line:3:6, col:25> col:25 used blobs 'const char *const *'   |-ParmVarDecl 0x12f826768 <col:32, col:45> col:45 used error_r 'const char **'   `-CompoundStmt 0x12f829ae0 <line:4:1, line:16:1>     |-IfStmt 0x12f827428 <line:5:2, line:12:2> has_else     | |-CallExpr 0x12f826c18 <line:5:6, col:27> 'int'     | | |-ImplicitCastExpr 0x12f826c00 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x12f826b30 <col:6> 'int ()' Function 0x12f826a78 'str_begins' 'int ()'     | | |-ImplicitCastExpr 0x12f826c48 <col:17> 'const char *' <LValueToRValue>     | | | `-DeclRefExpr 0x12f826b50 <col:17> 'const char *' lvalue ParmVar 0x12f80e348 'alg' 'const char *'     | | `-ImplicitCastExpr 0x12f826c60 <col:22> 'char *' <ArrayToPointerDecay>     | |   `-StringLiteral 0x12f826bb0 <col:22> 'char[4]' lvalue \"STR\"     | |-CompoundStmt 0x12f826f40 <col:30, line:8:2>     | | `-ReturnStmt 0x12f826f30 <line:6:3, line:7:17>     | |   `-CallExpr 0x12f826e50 <line:6:10, line:7:17> 'int'     | |     |-ImplicitCastExpr 0x12f826e38 <line:6:10> 'int (*)()' <FunctionToPointerDecay>     | |     | `-DeclRefExpr 0x12f826d58 <col:10> 'int ()' Function 0x12f826ca0 'oauth2_validate_hmac' 'int ()'     | |     |-ImplicitCastExpr 0x12f826ea0 <col:31> 'const struct oauth2_settings *' <LValueToRValue>     | |     | `-DeclRefExpr 0x12f826d78 <col:31> 'const struct oauth2_settings *' lvalue ParmVar 0x12f80e248 'set' 'const struct oauth2_settings *'     | |     |-ImplicitCastExpr 0x12f826eb8 <col:36> 'const char *' <LValueToRValue>     | |     | `-DeclRefExpr 0x12f826d98 <col:36> 'const char *' lvalue ParmVar 0x12f80e2c8 'azp' 'const char *'     | |     |-ImplicitCastExpr 0x12f826ed0 <col:41> 'const char *' <LValueToRValue>     | |     | `-DeclRefExpr 0x12f826db8 <col:41> 'const char *' lvalue ParmVar 0x12f80e348 'alg' 'const char *'     | |     |-ImplicitCastExpr 0x12f826ee8 <col:46> 'const char *' <LValueToRValue>     | |     | `-DeclRefExpr 0x12f826dd8 <col:46> 'const char *' lvalue ParmVar 0x12f826600 'key_id' 'const char *'     | |     |-ImplicitCastExpr 0x12f826f00 <col:54> 'const char *const *' <LValueToRValue>     | |     | `-DeclRefExpr 0x12f826df8 <col:54> 'const char *const *' lvalue ParmVar 0x12f8266b8 'blobs' 'const char *const *'     | |     `-ImplicitCastExpr 0x12f826f18 <line:7:10> 'const char **' <LValueToRValue>     | |       `-DeclRefExpr 0x12f826e18 <col:10> 'const char **' lvalue ParmVar 0x12f826768 'error_r' 'const char **'     | `-IfStmt 0x12f827408 <line:8:9, line:12:2>     |   |-BinaryOperator 0x12f827108 <line:8:13, line:9:27> 'int' '||'     |   | |-CallExpr 0x12f826fd0 <line:8:13, col:34> 'int'     |   | | |-ImplicitCastExpr 0x12f826fb8 <col:13> 'int (*)()' <FunctionToPointerDecay>     |   | | | `-DeclRefExpr 0x12f826f58 <col:13> 'int ()' Function 0x12f826a78 'str_begins' 'int ()'     |   | | |-ImplicitCastExpr 0x12f827000 <col:24> 'const char *' <LValueToRValue>     |   | | | `-DeclRefExpr 0x12f826f78 <col:24> 'const char *' lvalue ParmVar 0x12f80e348 'alg' 'const char *'     |   | | `-ImplicitCastExpr 0x12f827018 <col:29> 'char *' <ArrayToPointerDecay>     |   | |   `-StringLiteral 0x12f826f98 <col:29> 'char[4]' lvalue \"STR\"     |   | `-CallExpr 0x12f8270a8 <line:9:6, col:27> 'int'     |   |   |-ImplicitCastExpr 0x12f827090 <col:6> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x12f827030 <col:6> 'int ()' Function 0x12f826a78 'str_begins' 'int ()'     |   |   |-ImplicitCastExpr 0x12f8270d8 <col:17> 'const char *' <LValueToRValue>     |   |   | `-DeclRefExpr 0x12f827050 <col:17> 'const char *' lvalue ParmVar 0x12f80e348 'alg' 'const char *'     |   |   `-ImplicitCastExpr 0x12f8270f0 <col:22> 'char *' <ArrayToPointerDecay>     |   |     `-StringLiteral 0x12f827070 <col:22> 'char[4]' lvalue \"STR\"     |   `-CompoundStmt 0x12f8273f0 <col:30, line:12:2>     |     `-ReturnStmt 0x12f8273e0 <line:10:3, line:11:15>     |       `-CallExpr 0x12f827300 <line:10:10, line:11:15> 'int'     |         |-ImplicitCastExpr 0x12f8272e8 <line:10:10> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x12f827208 <col:10> 'int ()' Function 0x12f827150 'oauth2_validate_rsa_ecdsa' 'int ()'     |         |-ImplicitCastExpr 0x12f827350 <col:36> 'const struct oauth2_settings *' <LValueToRValue>     |         | `-DeclRefExpr 0x12f827228 <col:36> 'const struct oauth2_settings *' lvalue ParmVar 0x12f80e248 'set' 'const struct oauth2_settings *'     |         |-ImplicitCastExpr 0x12f827368 <col:41> 'const char *' <LValueToRValue>     |         | `-DeclRefExpr 0x12f827248 <col:41> 'const char *' lvalue ParmVar 0x12f80e2c8 'azp' 'const char *'     |         |-ImplicitCastExpr 0x12f827380 <col:46> 'const char *' <LValueToRValue>     |         | `-DeclRefExpr 0x12f827268 <col:46> 'const char *' lvalue ParmVar 0x12f80e348 'alg' 'const char *'     |         |-ImplicitCastExpr 0x12f827398 <col:51> 'const char *' <LValueToRValue>     |         | `-DeclRefExpr 0x12f827288 <col:51> 'const char *' lvalue ParmVar 0x12f826600 'key_id' 'const char *'     |         |-ImplicitCastExpr 0x12f8273b0 <col:59> 'const char *const *' <LValueToRValue>     |         | `-DeclRefExpr 0x12f8272a8 <col:59> 'const char *const *' lvalue ParmVar 0x12f8266b8 'blobs' 'const char *const *'     |         `-ImplicitCastExpr 0x12f8273c8 <line:11:8> 'const char **' <LValueToRValue>     |           `-DeclRefExpr 0x12f8272c8 <col:8> 'const char **' lvalue ParmVar 0x12f826768 'error_r' 'const char **'     |-BinaryOperator 0x12f829a78 <line:14:2, col:39> 'const char *' '='     | |-UnaryOperator 0x12f827490 <col:2, col:3> 'const char *' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x12f827478 <col:3> 'const char **' <LValueToRValue>     | |   `-DeclRefExpr 0x12f827458 <col:3> 'const char **' lvalue ParmVar 0x12f826768 'error_r' 'const char **'     | `-ImplicitCastExpr 0x12f829a60 <col:13, col:39> 'const char *' <IntegralToPointer>     |   `-CallExpr 0x12f829a00 <col:13, col:39> 'int'     |     |-ImplicitCastExpr 0x12f8275e8 <col:13> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x12f827588 <col:13> 'int ()' Function 0x12f8274d0 't_strdup_printf' 'int ()'     |     |-ImplicitCastExpr 0x12f829a30 <col:29> 'char *' <ArrayToPointerDecay>     |     | `-StringLiteral 0x12f8275a8 <col:29> 'char[4]' lvalue \"STR\"     |     `-ImplicitCastExpr 0x12f829a48 <col:36> 'const char *' <LValueToRValue>     |       `-DeclRefExpr 0x12f8275c8 <col:36> 'const char *' lvalue ParmVar 0x12f80e348 'alg' 'const char *'     `-ReturnStmt 0x12f829ad0 <line:15:2, col:10>       `-UnaryOperator 0x12f829ab8 <col:9, col:10> 'int' prefix '-'         `-IntegerLiteral 0x12f829a98 <col:10> 'int' 1 ","19530":"`-FunctionDecl 0x12b826ed0  col:13 implicit used abs 'int (int)' extern   |-ParmVarDecl 0x12b826fd0 <<invalid sloc>> <invalid sloc> 'int'   |-BuiltinAttr 0x12b826f78 <<invalid sloc>> Implicit 998   |-NoThrowAttr 0x12b827040 <col:13> Implicit   `-ConstAttr 0x12b827068 <col:13> Implicit ","19457":"`-FunctionDecl 0x12402b938  line:1:1 invalid bgp_attr_originator_id 'int (struct peer *, int, struct attr *, char, char *)'   |-ParmVarDecl 0x12400e248 <col:25, col:38> col:38 used peer 'struct peer *'   |-ParmVarDecl 0x12400e2e0 <col:44, col:55> col:55 invalid length 'int'   |-ParmVarDecl 0x12402b6c8 <line:2:4, col:17> col:17 used attr 'struct attr *'   |-ParmVarDecl 0x12402b740 <col:23, col:30> col:30 used flag 'char'   |-ParmVarDecl 0x12402b7c0 <col:36, col:44> col:44 used startp 'char *'   `-CompoundStmt 0x12402d390 <line:3:1, line:28:1>     |-IfStmt 0x12402c118 <line:8:3, line:11:45>     | |-CallExpr 0x12402be28 <line:8:7, col:64> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x12402bd58 <col:7> 'int ()' Function 0x12402bca0 'bgp_attr_flag_invalid' 'int ()'     | | |-DeclRefExpr 0x12402bd78 <col:30> 'struct peer *' lvalue ParmVar 0x12400e248 'peer' 'struct peer *'     | | |-RecoveryExpr 0x12402be08 <col:36> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12402bdb0 <col:60> 'char' lvalue ParmVar 0x12402b740 'flag' 'char'     | `-ReturnStmt 0x12402c108 <line:9:5, line:11:45>     |   `-CallExpr 0x12402c0b8 <line:9:12, line:11:45> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12402bf40 <line:9:12> 'int ()' Function 0x12402be88 'bgp_attr_malformed' 'int ()'     |     |-DeclRefExpr 0x12402bf60 <col:32> 'struct peer *' lvalue ParmVar 0x12400e248 'peer' 'struct peer *'     |     |-RecoveryExpr 0x12402c058 <col:38> '<dependent type>' contains-errors lvalue     |     |-DeclRefExpr 0x12402bf98 <col:62> 'char' lvalue ParmVar 0x12402b740 'flag' 'char'     |     |-RecoveryExpr 0x12402c078 <line:10:32> '<dependent type>' contains-errors lvalue     |     |-DeclRefExpr 0x12402bfd0 <line:11:32> 'char *' lvalue ParmVar 0x12402b7c0 'startp' 'char *'     |     `-RecoveryExpr 0x12402c098 <col:40> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12402ce30 <line:13:3, line:20:5>     | |-BinaryOperator 0x12402c178 <line:13:7, col:17> 'int' contains-errors '!='     | | |-RecoveryExpr 0x12402c138 <col:7> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x12402c158 <col:17> 'int' 4     | `-CompoundStmt 0x12402ce10 <line:14:5, line:20:5>     |   |-CallExpr 0x12402c3f0 <line:15:7, col:46> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12402c278 <col:7> 'int ()' Function 0x12402c1c0 'zlog' 'int ()'     |   | |-RecoveryExpr 0x12402c2d0 <col:13, col:19> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x12402c298 <col:13> 'struct peer *' lvalue ParmVar 0x12400e248 'peer' 'struct peer *'     |   | |-RecoveryExpr 0x12402c3d0 <col:24> '<dependent type>' contains-errors lvalue     |   | |-StringLiteral 0x12402c350 <col:33> 'char[4]' lvalue \"STR\"     |   | `-RecoveryExpr 0x12402c370 <col:40> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x12402ce00 <line:17:7, line:19:47>     |     `-CallExpr 0x12402c5a8 <line:17:14, line:19:47> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x12402c430 <line:17:14> 'int ()' Function 0x12402be88 'bgp_attr_malformed' 'int ()'     |       |-DeclRefExpr 0x12402c450 <col:34> 'struct peer *' lvalue ParmVar 0x12400e248 'peer' 'struct peer *'     |       |-RecoveryExpr 0x12402c548 <col:40> '<dependent type>' contains-errors lvalue     |       |-DeclRefExpr 0x12402c488 <col:64> 'char' lvalue ParmVar 0x12402b740 'flag' 'char'     |       |-RecoveryExpr 0x12402c568 <line:18:34> '<dependent type>' contains-errors lvalue     |       |-DeclRefExpr 0x12402c4c0 <line:19:34> 'char *' lvalue ParmVar 0x12402b7c0 'startp' 'char *'     |       `-RecoveryExpr 0x12402c588 <col:42> '<dependent type>' contains-errors lvalue     `-BinaryOperator 0x12402d210 <line:22:3, line:23:34> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x12402d040 <line:22:3, col:46> '<dependent type>' contains-errors lvalue .s_addr       | `-RecoveryExpr 0x12402d018 <col:3, col:32> '<dependent type>' contains-errors lvalue       |   `-ParenExpr 0x12402cff8 <col:3, col:29> 'int'       |     `-CallExpr 0x12402cfb8 <col:4, col:28> 'int'       |       |-ImplicitCastExpr 0x12402cfa0 <col:4> 'int (*)()' <FunctionToPointerDecay>       |       | `-DeclRefExpr 0x12402cf30 <col:4> 'int ()' Function 0x12402ce78 'bgp_attr_extra_get' 'int ()'       |       `-ImplicitCastExpr 0x12402cfe0 <col:24> 'struct attr *' <LValueToRValue>       |         `-DeclRefExpr 0x12402cf50 <col:24> 'struct attr *' lvalue ParmVar 0x12402b6c8 'attr' 'struct attr *'       `-CallExpr 0x12402d1e8 <line:23:7, col:34> '<dependent type>' contains-errors         |-DeclRefExpr 0x12402d168 <col:7> 'int ()' Function 0x12402d0b0 'stream_get_ipv4' 'int ()'         `-RecoveryExpr 0x12402d1c0 <col:24, col:30> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x12402d188 <col:24> 'struct peer *' lvalue ParmVar 0x12400e248 'peer' 'struct peer *' ","19612":"`-FunctionDecl 0x154128288  line:1:12 invalid mov_realloc_extradata 'int (int *, int)' static   |-ParmVarDecl 0x154128128 <col:34, col:53> col:53 referenced invalid par 'int *'   |-ParmVarDecl 0x1541281a8 <col:58, col:66> col:66 invalid atom 'int'   `-CompoundStmt 0x155808ec0 <line:2:1, line:13:1>     |-DeclStmt 0x1541283e0 <line:3:5, col:16>     | `-VarDecl 0x154128358 <col:5, col:15> col:9 used err 'int' cinit     |   `-IntegerLiteral 0x1541283c0 <col:15> 'int' 0     |-IfStmt 0x1541284c8 <line:5:5, line:6:16>     | |-RecoveryExpr 0x154128460 <line:5:9, col:49> '_Bool' contains-errors     | `-ReturnStmt 0x1541284b8 <line:6:9, col:16>     |   `-RecoveryExpr 0x154128498 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x155808cf0 <line:7:5, line:10:5>     | |-RecoveryExpr 0x154128788 <line:7:9, col:54> '_Bool' contains-errors     | `-CompoundStmt 0x155808cd0 <col:57, line:10:5>     |   |-BinaryOperator 0x155808c68 <line:8:9, col:31> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x155808c00 <col:9, col:14> '<dependent type>' contains-errors lvalue ->extradata_size     |   | | `-RecoveryExpr 0x1541287c8 <col:9> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x1541287a8 <col:9> 'int *' lvalue ParmVar 0x154128128 'par' 'int *'     |   | `-IntegerLiteral 0x155808c48 <col:31> 'int' 0     |   `-ReturnStmt 0x155808cc0 <line:9:9, col:16>     |     `-ImplicitCastExpr 0x155808ca8 <col:16> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x155808c88 <col:16> 'int' lvalue Var 0x154128358 'err' 'int'     |-BinaryOperator 0x155808e70 <line:11:5, col:34> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x155808d58 <col:5, col:10> '<dependent type>' contains-errors lvalue ->extradata_size     | | `-RecoveryExpr 0x155808d30 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x155808d10 <col:5> 'int *' lvalue ParmVar 0x154128128 'par' 'int *'     | `-BinaryOperator 0x155808e50 <col:27, col:34> '<dependent type>' contains-errors '-'     |   |-RecoveryExpr 0x155808e10 <col:27> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x155808e30 <col:34> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x155808eb0 <line:12:5, col:12>       `-IntegerLiteral 0x155808e90 <col:12> 'int' 0 ","19207":"`-FunctionDecl 0x121928318  line:1:17 invalid _consolefs_lseek 'int (int *, int, int)' static   |-ParmVarDecl 0x121928128 <col:34, col:43> col:43 invalid file_ 'int *'   |-ParmVarDecl 0x1219281a8 <col:50, col:59> col:59 invalid offset 'int'   |-ParmVarDecl 0x121928228 <col:67, col:71> col:71 used whence 'int'   `-CompoundStmt 0x121941928 <line:2:1, line:12:1>     |-CallExpr 0x121928570 <line:5:5, col:20> '<dependent type>' contains-errors     | |-DeclRefExpr 0x121928530 <col:5> 'int ()' Function 0x121928478 'OE_UNUSED' 'int ()'     | `-RecoveryExpr 0x121928550 <col:15> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1219285d8 <line:6:5, col:21> '<dependent type>' contains-errors     | |-DeclRefExpr 0x121928598 <col:5> 'int ()' Function 0x121928478 'OE_UNUSED' 'int ()'     | `-RecoveryExpr 0x1219285b8 <col:15> '<dependent type>' contains-errors lvalue     |-CallExpr 0x121928688 <line:7:5, col:21> 'int'     | |-ImplicitCastExpr 0x121928670 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x121928600 <col:5> 'int ()' Function 0x121928478 'OE_UNUSED' 'int ()'     | `-ImplicitCastExpr 0x1219286b0 <col:15> 'int' <LValueToRValue>     |   `-DeclRefExpr 0x121928620 <col:15> 'int' lvalue ParmVar 0x121928228 'whence' 'int'     |-CallExpr 0x121941848 <line:8:5, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1219287a8 <col:5> 'int ()' Function 0x1219286f0 'OE_RAISE_ERRNO' 'int ()'     | `-RecoveryExpr 0x121941828 <col:20> '<dependent type>' contains-errors lvalue     `-LabelStmt 0x121941908 <line:10:1, line:11:12> 'done'       `-ReturnStmt 0x1219418a8 <col:5, col:12>         `-RecoveryExpr 0x121941888 <col:12> '<dependent type>' contains-errors lvalue ","19226":"`-FunctionDecl 0x15600ddc8  line:1:5 invalid gdImageEdgeDetectQuick 'int (int)'   |-ParmVarDecl 0x15600dcf0 <col:28, col:39> col:39 invalid src 'int'   `-CompoundStmt 0x1560277f0 <line:2:1, line:8:1>     |-DeclStmt 0x156027590 <line:3:2, line:5:22>     | `-VarDecl 0x15600dfb8 <line:3:2, line:5:21> line:3:8 used filter 'float[3][3]' cinit     |   `-InitListExpr 0x15600e318 <col:23, line:5:21> 'float[3][3]'     |     |-InitListExpr 0x15600e380 <line:3:24, col:36> 'float[3]'     |     | |-ImplicitCastExpr 0x15600e3d8 <col:25> 'float' <FloatingCast>     |     | | `-FloatingLiteral 0x15600e020 <col:25> 'double' 1.000000e+00     |     | |-ImplicitCastExpr 0x156027400 <col:29> 'float' <FloatingCast>     |     | | `-FloatingLiteral 0x15600e040 <col:29> 'double' 1.000000e+00     |     | `-ImplicitCastExpr 0x156027418 <col:33> 'float' <FloatingCast>     |     |   `-FloatingLiteral 0x15600e060 <col:33> 'double' 1.000000e+00     |     |-InitListExpr 0x156027440 <line:4:5, col:17> 'float[3]'     |     | |-ImplicitCastExpr 0x156027498 <col:6> 'float' <FloatingCast>     |     | | `-FloatingLiteral 0x15600e0d8 <col:6> 'double' 0.000000e+00     |     | |-ImplicitCastExpr 0x1560274b0 <col:10> 'float' <FloatingCast>     |     | | `-FloatingLiteral 0x15600e0f8 <col:10> 'double' 0.000000e+00     |     | `-ImplicitCastExpr 0x1560274c8 <col:14> 'float' <FloatingCast>     |     |   `-FloatingLiteral 0x15600e118 <col:14> 'double' 0.000000e+00     |     `-InitListExpr 0x1560274f0 <line:5:5, col:20> 'float[3]'     |       |-ImplicitCastExpr 0x156027548 <col:6, col:7> 'float' <FloatingCast>     |       | `-UnaryOperator 0x15600e1b0 <col:6, col:7> 'double' prefix '-'     |       |   `-FloatingLiteral 0x15600e190 <col:7> 'double' 1.000000e+00     |       |-ImplicitCastExpr 0x156027560 <col:11, col:12> 'float' <FloatingCast>     |       | `-UnaryOperator 0x15600e1e8 <col:11, col:12> 'double' prefix '-'     |       |   `-FloatingLiteral 0x15600e1c8 <col:12> 'double' 1.000000e+00     |       `-ImplicitCastExpr 0x156027578 <col:16, col:17> 'float' <FloatingCast>     |         `-UnaryOperator 0x15600e220 <col:16, col:17> 'double' prefix '-'     |           `-FloatingLiteral 0x15600e200 <col:17> 'double' 1.000000e+00     `-ReturnStmt 0x1560277e0 <line:7:2, col:47>       `-CallExpr 0x1560277a0 <col:9, col:47> '<dependent type>' contains-errors         |-DeclRefExpr 0x156027700 <col:9> 'int ()' Function 0x156027648 'gdImageConvolution' 'int ()'         |-RecoveryExpr 0x156027720 <col:28> '<dependent type>' contains-errors lvalue         |-DeclRefExpr 0x156027740 <col:33> 'float[3][3]' lvalue Var 0x15600dfb8 'filter' 'float[3][3]'         |-IntegerLiteral 0x156027760 <col:41> 'int' 1         `-IntegerLiteral 0x156027780 <col:44> 'int' 127 ","19264":"`-FunctionDecl 0x14902ab38  line:1:12 get_exporter 'int (struct transport *, struct child_process *, struct string_list *)' static   |-ParmVarDecl 0x14900e248 <col:25, col:43> col:43 used transport 'struct transport *'   |-ParmVarDecl 0x14902a828 <line:2:4, col:26> col:26 used fastexport 'struct child_process *'   |-ParmVarDecl 0x14902a9f8 <line:3:4, col:24> col:24 used revlist_args 'struct string_list *'   `-CompoundStmt 0x14a008dd8 <line:4:1, line:27:1>     |-DeclStmt 0x14902ae88 <line:5:2, col:44>     | |-RecordDecl 0x14902ac40 <col:2, col:9> col:9 struct helper_data     | `-VarDecl 0x14902ada8 <col:2, col:40> col:22 used data 'struct helper_data *' cinit     |   `-RecoveryExpr 0x14902ae48 <col:29, col:40> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14902ae10 <col:29> 'struct transport *' lvalue ParmVar 0x14900e248 'transport' 'struct transport *'     |-DeclStmt 0x14902b1a0 <line:6:2, col:54>     | `-VarDecl 0x14902af28 <col:2, col:53> col:24 used helper 'struct child_process *' cinit     |   `-ImplicitCastExpr 0x14902b188 <col:33, col:53> 'struct child_process *' <IntegralToPointer>     |     `-CallExpr 0x14902b148 <col:33, col:53> 'int'     |       |-ImplicitCastExpr 0x14902b130 <col:33> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14902b0c0 <col:33> 'int ()' Function 0x14902b008 'get_helper' 'int ()'     |       `-ImplicitCastExpr 0x14902b170 <col:44> 'struct transport *' <LValueToRValue>     |         `-DeclRefExpr 0x14902b0e0 <col:44> 'struct transport *' lvalue ParmVar 0x14900e248 'transport' 'struct transport *'     |-DeclStmt 0x14902b238 <line:7:2, col:7>     | `-VarDecl 0x14902b1d0 <col:2, col:6> col:6 used i 'int'     |-CallExpr 0x14902b388 <line:9:2, col:31> 'int'     | |-ImplicitCastExpr 0x14902b370 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14902b330 <col:2> 'int ()' Function 0x14902b278 'child_process_init' 'int ()'     | `-ImplicitCastExpr 0x14902b3b0 <col:21> 'struct child_process *' <LValueToRValue>     |   `-DeclRefExpr 0x14902b350 <col:21> 'struct child_process *' lvalue ParmVar 0x14902a828 'fastexport' 'struct child_process *'     |-BinaryOperator 0x14902b5b0 <line:12:2, col:34> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14902b400 <col:2, col:14> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14902b3c8 <col:2> 'struct child_process *' lvalue ParmVar 0x14902a828 'fastexport' 'struct child_process *'     | `-CallExpr 0x14902b588 <col:20, col:34> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14902b508 <col:20> 'int ()' Function 0x14902b450 'dup' 'int ()'     |   `-RecoveryExpr 0x14902b560 <col:24, col:32> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14902b528 <col:24> 'struct child_process *' lvalue Var 0x14902af28 'helper' 'struct child_process *'     |-CallExpr 0x14902b7b0 <line:13:2, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14902b6b0 <col:2> 'int ()' Function 0x14902b5f8 'argv_array_push' 'int ()'     | |-UnaryOperator 0x14902b730 <col:18, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x14902b708 <col:19, col:31> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14902b6d0 <col:19> 'struct child_process *' lvalue ParmVar 0x14902a828 'fastexport' 'struct child_process *'     | `-StringLiteral 0x14902b790 <col:37> 'char[4]' lvalue \"STR\"     |-CallExpr 0x14a008298 <line:14:2, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14902b7e0 <col:2> 'int ()' Function 0x14902b5f8 'argv_array_push' 'int ()'     | |-UnaryOperator 0x14a008260 <col:18, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x14a008238 <col:19, col:31> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14a008200 <col:19> 'struct child_process *' lvalue ParmVar 0x14902a828 'fastexport' 'struct child_process *'     | `-StringLiteral 0x14a008278 <col:37> 'char[4]' lvalue \"STR\"     |-IfStmt 0x14a008670 <line:17:2, line:18:64>     | |-RecoveryExpr 0x14a008418 <line:17:6, col:12> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a0083e0 <col:6> 'struct helper_data *' contains-errors lvalue Var 0x14902ada8 'data' 'struct helper_data *'     | `-CallExpr 0x14a008638 <line:18:3, col:64> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14a008520 <col:3> 'int ()' Function 0x14a008468 'argv_array_pushf' 'int ()'     |   |-UnaryOperator 0x14a0085a0 <col:20, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x14a008578 <col:21, col:33> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14a008540 <col:21> 'struct child_process *' lvalue ParmVar 0x14902a828 'fastexport' 'struct child_process *'     |   |-StringLiteral 0x14a0085b8 <col:39> 'char[4]' lvalue \"STR\"     |   `-RecoveryExpr 0x14a008610 <col:46, col:52> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14a0085d8 <col:46> 'struct helper_data *' contains-errors lvalue Var 0x14902ada8 'data' 'struct helper_data *'     |-IfStmt 0x14a008840 <line:19:2, line:20:64>     | |-RecoveryExpr 0x14a0086c8 <line:19:6, col:12> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a008690 <col:6> 'struct helper_data *' contains-errors lvalue Var 0x14902ada8 'data' 'struct helper_data *'     | `-CallExpr 0x14a008808 <line:20:3, col:64> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14a0086f0 <col:3> 'int ()' Function 0x14a008468 'argv_array_pushf' 'int ()'     |   |-UnaryOperator 0x14a008770 <col:20, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x14a008748 <col:21, col:33> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14a008710 <col:21> 'struct child_process *' lvalue ParmVar 0x14902a828 'fastexport' 'struct child_process *'     |   |-StringLiteral 0x14a008788 <col:39> 'char[4]' lvalue \"STR\"     |   `-RecoveryExpr 0x14a0087e0 <col:46, col:52> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14a0087a8 <col:46> 'struct helper_data *' contains-errors lvalue Var 0x14902ada8 'data' 'struct helper_data *'     |-ForStmt 0x14a008b78 <line:22:2, line:23:67>     | |-BinaryOperator 0x14a0088a0 <line:22:7, col:11> 'int' '='     | | |-DeclRefExpr 0x14a008860 <col:7> 'int' lvalue Var 0x14902b1d0 'i' 'int'     | | `-IntegerLiteral 0x14a008880 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x14a008940 <col:14, col:32> 'int' contains-errors '<'     | | |-DeclRefExpr 0x14a0088c0 <col:14> 'int' lvalue Var 0x14902b1d0 'i' 'int'     | | `-RecoveryExpr 0x14a008918 <col:18, col:32> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14a0088e0 <col:18> 'struct string_list *' lvalue ParmVar 0x14902a9f8 'revlist_args' 'struct string_list *'     | |-UnaryOperator 0x14a008980 <col:36, col:37> 'int' postfix '++'     | | `-DeclRefExpr 0x14a008960 <col:36> 'int' lvalue Var 0x14902b1d0 'i' 'int'     | `-CallExpr 0x14a008b48 <line:23:3, col:67> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14a008998 <col:3> 'int ()' Function 0x14902b5f8 'argv_array_push' 'int ()'     |   |-UnaryOperator 0x14a008a18 <col:19, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x14a0089f0 <col:20, col:32> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14a0089b8 <col:20> 'struct child_process *' lvalue ParmVar 0x14902a828 'fastexport' 'struct child_process *'     |   `-CXXDependentScopeMemberExpr 0x14a008b00 <col:38, col:61> '<dependent type>' contains-errors lvalue .string     |     `-ArraySubscriptExpr 0x14a008ae0 <col:38, col:59> '<dependent type>' contains-errors lvalue     |       |-ImplicitCastExpr 0x14a008ab0 <col:38, col:52> '<dependent type>' contains-errors <LValueToRValue>     |       | `-RecoveryExpr 0x14a008a68 <col:38, col:52> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x14a008a30 <col:38> 'struct string_list *' lvalue ParmVar 0x14902a9f8 'revlist_args' 'struct string_list *'     |       `-ImplicitCastExpr 0x14a008ac8 <col:58> 'int' <LValueToRValue>     |         `-DeclRefExpr 0x14a008a90 <col:58> 'int' lvalue Var 0x14902b1d0 'i' 'int'     |-BinaryOperator 0x14a008c30 <line:25:2, col:24> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14a008be8 <col:2, col:14> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a008bb0 <col:2> 'struct child_process *' lvalue ParmVar 0x14902a828 'fastexport' 'struct child_process *'     | `-IntegerLiteral 0x14a008c10 <col:24> 'int' 1     `-ReturnStmt 0x14a008dc8 <line:26:2, col:33>       `-CallExpr 0x14a008d88 <col:9, col:33> 'int'         |-ImplicitCastExpr 0x14a008d70 <col:9> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x14a008d30 <col:9> 'int ()' Function 0x14a008c78 'start_command' 'int ()'         `-ImplicitCastExpr 0x14a008db0 <col:23> 'struct child_process *' <LValueToRValue>           `-DeclRefExpr 0x14a008d50 <col:23> 'struct child_process *' lvalue ParmVar 0x14902a828 'fastexport' 'struct child_process *' ","19828":"`-FunctionDecl 0x138144c08  col:4 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x138144d08 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x138144d70 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x138146000 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x138144cb0 <<invalid sloc>> Implicit 882 ","19794":"`-FunctionDecl 0x13380e358  line:1:12 referenced ati_remote2_open 'int (struct input_dev *)' static   |-ParmVarDecl 0x13380e248 <col:29, col:47> col:47 used idev 'struct input_dev *'   `-CompoundStmt 0x133123148 <line:2:1, line:36:1>     |-DeclStmt 0x133826a48 <line:3:2, col:51>     | |-RecordDecl 0x133826650 <col:2, col:9> col:9 struct ati_remote2     | `-VarDecl 0x1338267b8 <col:2, col:50> col:22 used ar2 'struct ati_remote2 *' cinit     |   `-ImplicitCastExpr 0x133826a18 <col:28, col:50> 'struct ati_remote2 *' <IntegralToPointer>     |     `-CallExpr 0x1338269d8 <col:28, col:50> 'int'     |       |-ImplicitCastExpr 0x1338269c0 <col:28> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x133826950 <col:28> 'int ()' Function 0x133826898 'input_get_drvdata' 'int ()'     |       `-ImplicitCastExpr 0x133826a00 <col:46> 'struct input_dev *' <LValueToRValue>     |         `-DeclRefExpr 0x133826970 <col:46> 'struct input_dev *' lvalue ParmVar 0x13380e248 'idev' 'struct input_dev *'     |-DeclStmt 0x133826ae0 <line:4:2, col:7>     | `-VarDecl 0x133826a78 <col:2, col:6> col:6 used r 'int'     |-CallExpr 0x133826e30 <line:6:2, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x133826bd8 <col:2> 'int ()' Function 0x133826b20 'dev_dbg' 'int ()'     | |-UnaryOperator 0x133826cf8 <col:10, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x133826cb0 <col:11, col:25> '<dependent type>' contains-errors lvalue ->dev     | |   `-ArraySubscriptExpr 0x133826c90 <col:11, col:22> '<dependent type>' contains-errors lvalue     | |     |-ImplicitCastExpr 0x133826c78 <col:11, col:16> '<dependent type>' contains-errors <LValueToRValue>     | |     | `-RecoveryExpr 0x133826c30 <col:11, col:16> '<dependent type>' contains-errors lvalue     | |     |   `-DeclRefExpr 0x133826bf8 <col:11> 'struct ati_remote2 *' lvalue Var 0x1338267b8 'ar2' 'struct ati_remote2 *'     | |     `-IntegerLiteral 0x133826c58 <col:21> 'int' 0     | |-StringLiteral 0x133826d50 <col:30> 'char[4]' lvalue \"STR\"     | `-PredefinedExpr 0x133826e18 <col:37> 'const char[17]' lvalue __func__     |   `-StringLiteral 0x133826df0 <col:37> 'const char[17]' lvalue \"ati_remote2_open\"     |-BinaryOperator 0x133827068 <line:8:2, col:43> 'int' contains-errors '='     | |-DeclRefExpr 0x133826e68 <col:2> 'int' lvalue Var 0x133826a78 'r' 'int'     | `-CallExpr 0x133827040 <col:6, col:43> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x133826f68 <col:6> 'int ()' Function 0x133826eb0 'usb_autopm_get_interface' 'int ()'     |   `-ArraySubscriptExpr 0x133827020 <col:31, col:42> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x133827008 <col:31, col:36> '<dependent type>' contains-errors <LValueToRValue>     |     | `-RecoveryExpr 0x133826fc0 <col:31, col:36> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x133826f88 <col:31> 'struct ati_remote2 *' lvalue Var 0x1338267b8 'ar2' 'struct ati_remote2 *'     |     `-IntegerLiteral 0x133826fe8 <col:41> 'int' 0     |-IfStmt 0x133827420 <line:9:2, line:13:2>     | |-ImplicitCastExpr 0x1338270a8 <line:9:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x133827088 <col:6> 'int' lvalue Var 0x133826a78 'r' 'int'     | `-CompoundStmt 0x133827400 <col:9, line:13:2>     |   |-CallExpr 0x133827358 <line:10:3, line:11:22> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1338271a0 <line:10:3> 'int ()' Function 0x1338270e8 'dev_err' 'int ()'     |   | |-UnaryOperator 0x1338272c0 <col:11, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-CXXDependentScopeMemberExpr 0x133827278 <col:12, col:26> '<dependent type>' contains-errors lvalue ->dev     |   | |   `-ArraySubscriptExpr 0x133827258 <col:12, col:23> '<dependent type>' contains-errors lvalue     |   | |     |-ImplicitCastExpr 0x133827240 <col:12, col:17> '<dependent type>' contains-errors <LValueToRValue>     |   | |     | `-RecoveryExpr 0x1338271f8 <col:12, col:17> '<dependent type>' contains-errors lvalue     |   | |     |   `-DeclRefExpr 0x1338271c0 <col:12> 'struct ati_remote2 *' lvalue Var 0x1338267b8 'ar2' 'struct ati_remote2 *'     |   | |     `-IntegerLiteral 0x133827220 <col:22> 'int' 0     |   | |-StringLiteral 0x1338272d8 <line:11:4> 'char[4]' lvalue \"STR\"     |   | |-PredefinedExpr 0x133827320 <col:11> 'const char[17]' lvalue __func__     |   | | `-StringLiteral 0x1338272f8 <col:11> 'const char[17]' lvalue \"ati_remote2_open\"     |   | `-DeclRefExpr 0x133827338 <col:21> 'int' lvalue Var 0x133826a78 'r' 'int'     |   `-GotoStmt 0x1338273e8 <line:12:3, col:8> 'fail1' 0x133827398     |-CallExpr 0x133122660 <line:15:2, col:31> 'int'     | |-ImplicitCastExpr 0x133122648 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x133827520 <col:2> 'int ()' Function 0x133827468 'mutex_lock' 'int ()'     | `-UnaryOperator 0x133122630 <col:13, col:14> 'int (*)(struct input_dev *)' prefix '&' cannot overflow     |   `-DeclRefExpr 0x133827598 <col:14> 'int (struct input_dev *)' Function 0x13380e358 'ati_remote2_open' 'int (struct input_dev *)'     |-IfStmt 0x1331229d8 <line:17:2, line:21:2>     | |-RecoveryExpr 0x133122720 <line:17:6, col:42> '_Bool' contains-errors     | `-CompoundStmt 0x1331229b8 <col:45, line:21:2>     |   |-BinaryOperator 0x1331228d8 <line:18:3, col:34> 'int' '='     |   | |-DeclRefExpr 0x133122740 <col:3> 'int' lvalue Var 0x133826a78 'r' 'int'     |   | `-CallExpr 0x133122898 <col:7, col:34> 'int'     |   |   |-ImplicitCastExpr 0x133122880 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x133122840 <col:7> 'int ()' Function 0x133122788 'ati_remote2_submit_urbs' 'int ()'     |   |   `-ImplicitCastExpr 0x1331228c0 <col:31> 'struct ati_remote2 *' <LValueToRValue>     |   |     `-DeclRefExpr 0x133122860 <col:31> 'struct ati_remote2 *' lvalue Var 0x1338267b8 'ar2' 'struct ati_remote2 *'     |   `-IfStmt 0x133122998 <line:19:3, line:20:9>     |     |-ImplicitCastExpr 0x133122918 <line:19:7> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x1331228f8 <col:7> 'int' lvalue Var 0x133826a78 'r' 'int'     |     `-GotoStmt 0x133122980 <line:20:4, col:9> 'fail2' 0x133122930     |-CompoundAssignOperator 0x133122ac0 <line:23:2, col:16> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-RecoveryExpr 0x133122a30 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1331229f8 <col:2> 'struct ati_remote2 *' lvalue Var 0x1338267b8 'ar2' 'struct ati_remote2 *'     | `-RecoveryExpr 0x133122aa0 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x133122c98 <line:25:2, col:33> 'int'     | |-ImplicitCastExpr 0x133122c80 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x133122bd0 <col:2> 'int ()' Function 0x133122b18 'mutex_unlock' 'int ()'     | `-UnaryOperator 0x133122c68 <col:15, col:16> 'int (*)(struct input_dev *)' prefix '&' cannot overflow     |   `-DeclRefExpr 0x133122c48 <col:16> 'int (struct input_dev *)' Function 0x13380e358 'ati_remote2_open' 'int (struct input_dev *)'     |-CallExpr 0x133122e78 <line:27:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x133122da0 <col:2> 'int ()' Function 0x133122ce8 'usb_autopm_put_interface' 'int ()'     | `-ArraySubscriptExpr 0x133122e58 <col:27, col:38> '<dependent type>' contains-errors lvalue     |   |-ImplicitCastExpr 0x133122e40 <col:27, col:32> '<dependent type>' contains-errors <LValueToRValue>     |   | `-RecoveryExpr 0x133122df8 <col:27, col:32> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x133122dc0 <col:27> 'struct ati_remote2 *' lvalue Var 0x1338267b8 'ar2' 'struct ati_remote2 *'     |   `-IntegerLiteral 0x133122e20 <col:37> 'int' 0     |-ReturnStmt 0x133122ec0 <line:29:2, col:9>     | `-IntegerLiteral 0x133122ea0 <col:9> 'int' 0     |-LabelStmt 0x133122fc0 <line:31:2, line:32:33> 'fail2'     | `-CallExpr 0x133122f98 <col:2, col:33> 'int'     |   |-ImplicitCastExpr 0x133122f80 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x133122ed0 <col:2> 'int ()' Function 0x133122b18 'mutex_unlock' 'int ()'     |   `-UnaryOperator 0x133122f68 <col:15, col:16> 'int (*)(struct input_dev *)' prefix '&' cannot overflow     |     `-DeclRefExpr 0x133122f48 <col:16> 'int (struct input_dev *)' Function 0x13380e358 'ati_remote2_open' 'int (struct input_dev *)'     |-CallExpr 0x1331230b8 <line:33:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x133122fe0 <col:2> 'int ()' Function 0x133122ce8 'usb_autopm_put_interface' 'int ()'     | `-ArraySubscriptExpr 0x133123098 <col:27, col:38> '<dependent type>' contains-errors lvalue     |   |-ImplicitCastExpr 0x133123080 <col:27, col:32> '<dependent type>' contains-errors <LValueToRValue>     |   | `-RecoveryExpr 0x133123038 <col:27, col:32> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x133123000 <col:27> 'struct ati_remote2 *' lvalue Var 0x1338267b8 'ar2' 'struct ati_remote2 *'     |   `-IntegerLiteral 0x133123060 <col:37> 'int' 0     `-LabelStmt 0x133123128 <line:34:2, line:35:9> 'fail1'       `-ReturnStmt 0x133123118 <col:2, col:9>         `-ImplicitCastExpr 0x133123100 <col:9> 'int' <LValueToRValue>           `-DeclRefExpr 0x1331230e0 <col:9> 'int' lvalue Var 0x133826a78 'r' 'int' ","20039":"`-FunctionDecl 0x13d1281d8  line:1:1 testBackingParse 'int (const void *)'   |-ParmVarDecl 0x13d128108 <col:18, col:30> col:30 used args 'const void *'   `-CompoundStmt 0x13d1438a0 <line:2:1, line:43:1>     |-DeclStmt 0x13d128508 <line:3:5, col:51>     | |-RecordDecl 0x13d1282d0 <col:11, col:18> col:18 struct testBackingParseData     | `-VarDecl 0x13d128438 <col:5, col:47> col:40 used data 'const struct testBackingParseData *' cinit     |   `-ImplicitCastExpr 0x13d1284d8 <col:47> 'const struct testBackingParseData *' <BitCast>     |     `-ImplicitCastExpr 0x13d1284c0 <col:47> 'const void *' <LValueToRValue>     |       `-DeclRefExpr 0x13d1284a0 <col:47> 'const void *' lvalue ParmVar 0x13d128108 'args' 'const void *'     |-CallExpr 0x13d1286d0 <line:4:5, col:21> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d128650 <col:5> 'int ()' Function 0x13d128598 'g_auto' 'int ()'     | `-RecoveryExpr 0x13d1286b0 <col:12> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13d140a80 <line:6:5, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d140a00 <col:5> 'int ()' Function 0x13d128738 'g_autoptr' 'int ()'     | `-RecoveryExpr 0x13d140a60 <col:15> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x13d140b40 <line:7:5, col:11>     | `-VarDecl 0x13d140ad8 <col:5, col:9> col:9 used rc 'int'     |-DeclStmt 0x13d141058 <line:8:5, col:23>     | `-VarDecl 0x13d140b70 <col:5, col:21> col:9 used erc 'int' cinit     |   `-RecoveryExpr 0x13d141030 <col:15, col:21> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13d140bd8 <col:15> 'const struct testBackingParseData *' lvalue Var 0x13d128438 'data' 'const struct testBackingParseData *'     |-IfStmt 0x13d141178 <line:11:5, line:12:16>     | |-UnaryOperator 0x13d1410e8 <line:11:9, col:16> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13d1410d0 <col:10, col:16> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x13d1410a8 <col:10, col:16> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x13d141070 <col:10> 'const struct testBackingParseData *' lvalue Var 0x13d128438 'data' 'const struct testBackingParseData *'     | `-BinaryOperator 0x13d141158 <line:12:9, col:16> 'int' contains-errors '='     |   |-DeclRefExpr 0x13d141100 <col:9> 'int' contains-errors lvalue Var 0x13d140b70 'erc' 'int'     |   `-UnaryOperator 0x13d141140 <col:15, col:16> 'int' prefix '-'     |     `-IntegerLiteral 0x13d141120 <col:16> 'int' 1     |-IfStmt 0x13d1417e8 <line:14:5, line:17:5>     | |-RecoveryExpr 0x13d141500 <line:14:9, col:79> '_Bool' contains-errors     | `-CompoundStmt 0x13d1417c8 <col:84, line:17:5>     |   |-CallExpr 0x13d141740 <line:15:9, col:39> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13d141600 <col:9> 'int ()' Function 0x13d141548 'fprintf' 'int ()'     |   | |-RecoveryExpr 0x13d141720 <col:17> '<dependent type>' contains-errors lvalue     |   | |-StringLiteral 0x13d141680 <col:25> 'char[4]' lvalue \"STR\"     |   | |-DeclRefExpr 0x13d1416a0 <col:32> 'int' contains-errors lvalue Var 0x13d140b70 'erc' 'int'     |   | `-DeclRefExpr 0x13d1416c0 <col:37> 'int' lvalue Var 0x13d140ad8 'rc' 'int'     |   `-ReturnStmt 0x13d1417b8 <line:16:9, col:17>     |     `-UnaryOperator 0x13d1417a0 <col:16, col:17> 'int' prefix '-'     |       `-IntegerLiteral 0x13d141780 <col:17> 'int' 1     |-IfStmt 0x13d141970 <line:19:5, line:20:16>     | |-UnaryOperator 0x13d141928 <line:19:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13d141910 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x13d1418f0 <col:10> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13d141960 <line:20:9, col:16>     |   `-IntegerLiteral 0x13d141940 <col:16> 'int' 0     |-IfStmt 0x13d143198 <line:22:5, line:26:5>     | |-RecoveryExpr 0x13d143030 <line:22:9, col:23> '_Bool' contains-errors     | `-CompoundStmt 0x13d143180 <col:31, line:26:5>     |   `-ReturnStmt 0x13d143170 <line:25:9, col:17>     |     `-UnaryOperator 0x13d143158 <col:16, col:17> 'int' prefix '-'     |       `-IntegerLiteral 0x13d143138 <col:17> 'int' 1     |-IfStmt 0x13d1434f8 <line:28:5, line:32:5>     | |-RecoveryExpr 0x13d143438 <line:28:9, line:29:47> '_Bool' contains-errors     | `-CompoundStmt 0x13d1434e0 <col:50, line:32:5>     |   `-ReturnStmt 0x13d1434d0 <line:31:9, col:17>     |     `-UnaryOperator 0x13d1434b8 <col:16, col:17> 'int' prefix '-'     |       `-IntegerLiteral 0x13d143498 <col:17> 'int' 1     |-IfStmt 0x13d143850 <line:34:5, line:40:5>     | |-RecoveryExpr 0x13d143678 <line:34:9, col:33> '_Bool' contains-errors     | `-CompoundStmt 0x13d143838 <col:36, line:40:5>     |   `-ReturnStmt 0x13d143828 <line:39:9, col:17>     |     `-UnaryOperator 0x13d143810 <col:16, col:17> 'int' prefix '-'     |       `-IntegerLiteral 0x13d1437f0 <col:17> 'int' 1     `-ReturnStmt 0x13d143890 <line:42:5, col:12>       `-IntegerLiteral 0x13d143870 <col:12> 'int' 0 ","19840":"`-FunctionDecl 0x12b80de88  line:1:1 invalid ldns_rdf_set_data 'int (int *, void *)'   |-ParmVarDecl 0x12b80dd28 <col:19, col:29> col:29 referenced invalid rd 'int *'   |-ParmVarDecl 0x12b80dda8 <col:33, col:39> col:39 used data 'void *'   `-CompoundStmt 0x12b80e278 <line:2:1, line:6:1>     |-CallExpr 0x12b80e180 <line:4:2, col:19> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12b80e0a0 <col:2> 'int ()' Function 0x12b80dfe8 'assert' 'int ()'     | `-BinaryOperator 0x12b80e160 <col:9, col:15> 'int' contains-errors '!='     |   |-RecoveryExpr 0x12b80e0c0 <col:9> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x12b80e140 <col:15> '<dependent type>' contains-errors lvalue     `-BinaryOperator 0x12b80e258 <line:5:2, col:14> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x12b80e1f0 <col:2, col:6> '<dependent type>' contains-errors lvalue ->_data       | `-RecoveryExpr 0x12b80e1c8 <col:2> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x12b80e1a8 <col:2> 'int *' lvalue ParmVar 0x12b80dd28 'rd' 'int *'       `-DeclRefExpr 0x12b80e238 <col:14> 'void *' lvalue ParmVar 0x12b80dda8 'data' 'void *' ","19199":"`-FunctionDecl 0x123128750  line:1:6 referenced snd_info_free_entry 'void (struct snd_info_entry *)'   |-ParmVarDecl 0x123128648 <col:26, col:50> col:50 used entry 'struct snd_info_entry *'   `-CompoundStmt 0x123141b00 <line:2:1, line:22:1>     |-DeclStmt 0x123140be8 <line:3:2, col:30>     | |-VarDecl 0x123140ad8 <col:2, col:25> col:25 used p 'struct snd_info_entry *'     | `-VarDecl 0x123140b68 <col:2, col:29> col:29 used n 'struct snd_info_entry *'     |-IfStmt 0x123140c60 <line:5:2, line:6:3>     | |-UnaryOperator 0x123140c38 <line:5:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x123140c20 <col:7> 'struct snd_info_entry *' <LValueToRValue>     | |   `-DeclRefExpr 0x123140c00 <col:7> 'struct snd_info_entry *' lvalue ParmVar 0x123128648 'entry' 'struct snd_info_entry *'     | `-ReturnStmt 0x123140c50 <line:6:3>     |-IfStmt 0x123141278 <line:7:2, line:11:2>     | |-RecoveryExpr 0x123140cb8 <line:7:6, col:13> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x123140c80 <col:6> 'struct snd_info_entry *' lvalue ParmVar 0x123128648 'entry' 'struct snd_info_entry *'     | `-CompoundStmt 0x123141250 <col:16, line:11:2>     |   |-CallExpr 0x123140ec0 <line:8:3, col:25> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x123140e10 <col:3> 'int ()' Function 0x123140d58 'mutex_lock' 'int ()'     |   | `-UnaryOperator 0x123140ea8 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x123140e88 <col:15> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x123141058 <line:9:3, col:28> 'int'     |   | |-ImplicitCastExpr 0x123141040 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x123140fc8 <col:3> 'int ()' Function 0x123140f10 'snd_info_disconnect' 'int ()'     |   | `-ImplicitCastExpr 0x123141080 <col:23> 'struct snd_info_entry *' <LValueToRValue>     |   |   `-DeclRefExpr 0x123140fe8 <col:23> 'struct snd_info_entry *' lvalue ParmVar 0x123128648 'entry' 'struct snd_info_entry *'     |   `-CallExpr 0x123141228 <line:10:3, col:27> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x123141178 <col:3> 'int ()' Function 0x1231410c0 'mutex_unlock' 'int ()'     |     `-UnaryOperator 0x123141210 <col:16, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x1231411f0 <col:17> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1231414c8 <line:14:2, col:55> '<dependent type>' contains-errors     | |-DeclRefExpr 0x123141378 <col:2> 'int ()' Function 0x1231412c0 'list_for_each_entry_safe' 'int ()'     | |-DeclRefExpr 0x123141398 <col:27> 'struct snd_info_entry *' lvalue Var 0x123140ad8 'p' 'struct snd_info_entry *'     | |-DeclRefExpr 0x1231413b8 <col:30> 'struct snd_info_entry *' lvalue Var 0x123140b68 'n' 'struct snd_info_entry *'     | |-UnaryOperator 0x123141438 <col:33, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x123141410 <col:34, col:41> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1231413d8 <col:34> 'struct snd_info_entry *' lvalue ParmVar 0x123128648 'entry' 'struct snd_info_entry *'     | `-RecoveryExpr 0x1231414a8 <col:51> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1231415c8 <line:15:3, col:24> 'void'     | |-ImplicitCastExpr 0x1231415b0 <col:3> 'void (*)(struct snd_info_entry *)' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x123141508 <col:3> 'void (struct snd_info_entry *)' Function 0x123128750 'snd_info_free_entry' 'void (struct snd_info_entry *)'     | `-ImplicitCastExpr 0x1231415f0 <col:23> 'struct snd_info_entry *' <LValueToRValue>     |   `-DeclRefExpr 0x123141528 <col:23> 'struct snd_info_entry *' lvalue Var 0x123140ad8 'p' 'struct snd_info_entry *'     |-CallExpr 0x123141780 <line:17:2, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1231416e8 <col:2> 'int ()' Function 0x123141630 'list_del' 'int ()'     | `-UnaryOperator 0x123141768 <col:11, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x123141740 <col:12, col:19> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x123141708 <col:12> 'struct snd_info_entry *' lvalue ParmVar 0x123128648 'entry' 'struct snd_info_entry *'     |-CallExpr 0x123141908 <line:18:2, col:19> '<dependent type>' contains-errors     | |-DeclRefExpr 0x123141888 <col:2> 'int ()' Function 0x1231417d0 'kfree' 'int ()'     | `-RecoveryExpr 0x1231418e0 <col:8, col:15> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1231418a8 <col:8> 'struct snd_info_entry *' lvalue ParmVar 0x123128648 'entry' 'struct snd_info_entry *'     |-IfStmt 0x123141a48 <line:19:2, line:20:28>     | |-RecoveryExpr 0x123141968 <line:19:6, col:13> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x123141930 <col:6> 'struct snd_info_entry *' lvalue ParmVar 0x123128648 'entry' 'struct snd_info_entry *'     | `-CallExpr 0x123141a20 <line:20:3, col:28> '<dependent type>' contains-errors     |   |-RecoveryExpr 0x1231419c8 <col:3, col:10> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x123141990 <col:3> 'struct snd_info_entry *' lvalue ParmVar 0x123128648 'entry' 'struct snd_info_entry *'     |   `-DeclRefExpr 0x123141a00 <col:23> 'struct snd_info_entry *' lvalue ParmVar 0x123128648 'entry' 'struct snd_info_entry *'     `-CallExpr 0x123141ac0 <line:21:2, col:13> 'int'       |-ImplicitCastExpr 0x123141aa8 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x123141a68 <col:2> 'int ()' Function 0x1231417d0 'kfree' 'int ()'       `-ImplicitCastExpr 0x123141ae8 <col:8> 'struct snd_info_entry *' <LValueToRValue>         `-DeclRefExpr 0x123141a88 <col:8> 'struct snd_info_entry *' lvalue ParmVar 0x123128648 'entry' 'struct snd_info_entry *' ","19869":"`-FunctionDecl 0x12a928750  line:1:13 ax25_kill_by_device 'void (struct net_device *)' static   |-ParmVarDecl 0x12a928648 <col:33, col:52> col:52 used dev 'struct net_device *'   `-CompoundStmt 0x12a943768 <line:2:1, line:39:1>     |-DeclStmt 0x12a940c78 <line:5:2, col:17>     | |-RecordDecl 0x12a940a90 <col:2, col:9> col:9 struct sock     | `-VarDecl 0x12a940bf8 <col:2, col:15> col:15 used sk 'struct sock *'     |-IfStmt 0x12a940ef0 <line:7:2, line:8:3>     | |-RecoveryExpr 0x12a940ec0 <line:7:6, col:44> '_Bool' contains-errors     | `-ReturnStmt 0x12a940ee0 <line:8:3>     |-CallExpr 0x12a9410a0 <line:10:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12a940ff0 <col:2> 'int ()' Function 0x12a940f38 'spin_lock_bh' 'int ()'     | `-UnaryOperator 0x12a941088 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12a941068 <col:16> '<dependent type>' contains-errors lvalue     |-LabelStmt 0x12a941318 <line:11:1, line:12:29> 'again'     | `-CallExpr 0x12a941298 <col:2, col:29> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12a9411a8 <col:2> 'int ()' Function 0x12a9410f0 'ax25_for_each' 'int ()'     |   |-RecoveryExpr 0x12a941240 <col:16> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x12a941280 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x12a941260 <col:20> '<dependent type>' contains-errors lvalue     `-CompoundStmt 0x12a943730 <col:31, line:37:2>       `-IfStmt 0x12a943710 <line:13:3, line:36:3>         |-BinaryOperator 0x12a941458 <line:13:7, col:22> 'int' contains-errors '=='         | |-CXXDependentScopeMemberExpr 0x12a9413f0 <col:7, col:10> '<dependent type>' contains-errors lvalue ->ax25_dev         | | `-RecoveryExpr 0x12a9413d0 <col:7> '<dependent type>' contains-errors lvalue         | `-RecoveryExpr 0x12a941438 <col:22> '<dependent type>' contains-errors lvalue         `-CompoundStmt 0x12a9436c0 <col:32, line:36:3>           |-BinaryOperator 0x12a941580 <line:14:4, col:12> 'struct sock *' contains-errors '='           | |-DeclRefExpr 0x12a941478 <col:4> 'struct sock *' lvalue Var 0x12a940bf8 'sk' 'struct sock *'           | `-CXXDependentScopeMemberExpr 0x12a941538 <col:9, col:12> '<dependent type>' contains-errors lvalue ->sk           |   `-RecoveryExpr 0x12a941518 <col:9> '<dependent type>' contains-errors lvalue           |-IfStmt 0x12a941918 <line:15:4, line:21:4>           | |-UnaryOperator 0x12a9415d8 <line:15:8, col:9> 'int' prefix '!' cannot overflow           | | `-ImplicitCastExpr 0x12a9415c0 <col:9> 'struct sock *' <LValueToRValue>           | |   `-DeclRefExpr 0x12a9415a0 <col:9> 'struct sock *' lvalue Var 0x12a940bf8 'sk' 'struct sock *'           | `-CompoundStmt 0x12a9418f8 <col:13, line:21:4>           |   |-CallExpr 0x12a941780 <line:16:5, col:35> '<dependent type>' contains-errors           |   | |-DeclRefExpr 0x12a9416d0 <col:5> 'int ()' Function 0x12a941618 'spin_unlock_bh' 'int ()'           |   | `-UnaryOperator 0x12a941768 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow           |   |   `-RecoveryExpr 0x12a941748 <col:21> '<dependent type>' contains-errors lvalue           |   `-GotoStmt 0x12a9418e0 <line:20:5, col:10> 'again' 0x12a9412c8           |-CallExpr 0x12a942f10 <line:22:4, col:16> 'int'           | |-ImplicitCastExpr 0x12a942ef8 <col:4> 'int (*)()' <FunctionToPointerDecay>           | | `-DeclRefExpr 0x12a942eb8 <col:4> 'int ()' Function 0x12a942e00 'sock_hold' 'int ()'           | `-ImplicitCastExpr 0x12a942f38 <col:14> 'struct sock *' <LValueToRValue>           |   `-DeclRefExpr 0x12a942ed8 <col:14> 'struct sock *' lvalue Var 0x12a940bf8 'sk' 'struct sock *'           |-CallExpr 0x12a9430a8 <line:24:4, col:16> 'int'           | |-ImplicitCastExpr 0x12a943090 <col:4> 'int (*)()' <FunctionToPointerDecay>           | | `-DeclRefExpr 0x12a943050 <col:4> 'int ()' Function 0x12a942f98 'lock_sock' 'int ()'           | `-ImplicitCastExpr 0x12a9430d0 <col:14> 'struct sock *' <LValueToRValue>           |   `-DeclRefExpr 0x12a943070 <col:14> 'struct sock *' lvalue Var 0x12a940bf8 'sk' 'struct sock *'           |-IfStmt 0x12a943358 <line:26:4, line:29:4>           | |-RecoveryExpr 0x12a943120 <line:26:8, col:12> '<dependent type>' contains-errors lvalue           | | `-DeclRefExpr 0x12a9430e8 <col:8> 'struct sock *' lvalue Var 0x12a940bf8 'sk' 'struct sock *'           | `-CompoundStmt 0x12a943348 <col:23, line:29:4>           |-CallExpr 0x12a9434d0 <line:31:4, col:19> 'int'           | |-ImplicitCastExpr 0x12a9434b8 <col:4> 'int (*)()' <FunctionToPointerDecay>           | | `-DeclRefExpr 0x12a943478 <col:4> 'int ()' Function 0x12a9433c0 'release_sock' 'int ()'           | `-ImplicitCastExpr 0x12a9434f8 <col:17> 'struct sock *' <LValueToRValue>           |   `-DeclRefExpr 0x12a943498 <col:17> 'struct sock *' lvalue Var 0x12a940bf8 'sk' 'struct sock *'           |-CallExpr 0x12a943668 <line:33:4, col:15> 'int'           | |-ImplicitCastExpr 0x12a943650 <col:4> 'int (*)()' <FunctionToPointerDecay>           | | `-DeclRefExpr 0x12a943610 <col:4> 'int ()' Function 0x12a943558 'sock_put' 'int ()'           | `-ImplicitCastExpr 0x12a943690 <col:13> 'struct sock *' <LValueToRValue>           |   `-DeclRefExpr 0x12a943630 <col:13> 'struct sock *' lvalue Var 0x12a940bf8 'sk' 'struct sock *'           `-GotoStmt 0x12a9436a8 <line:35:4, col:9> 'again' 0x12a9412c8 ","20153":"`-FunctionDecl 0x12400dd98  line:1:1 _PG_init 'int (void)'   `-CompoundStmt 0x123923568 <line:2:1, line:38:1>     |-DeclStmt 0x12400df38 <line:4:2, col:28>     | `-VarDecl 0x12400deb8 <col:2, col:14> col:14 referenced invalid inited 'int' static     |-IfStmt 0x12400df80 <line:6:2, line:7:3>     | |-RecoveryExpr 0x12400df50 <line:6:6> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12400df70 <line:7:3>     |-CallExpr 0x12400e130 <line:9:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12400e0b0 <col:2> 'int ()' Function 0x12400dff8 'pg_bindtextdomain' 'int ()'     | `-RecoveryExpr 0x12400e110 <col:20> '<dependent type>' contains-errors lvalue     |-CallExpr 0x123922dc0 <line:11:2, line:18:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12400e238 <line:11:2> 'int ()' Function 0x12400e180 'DefineCustomEnumVariable' 'int ()'     | |-StringLiteral 0x12400e2a0 <col:27> 'char[4]' lvalue \"STR\"     | |-CallExpr 0x123922c68 <line:12:9, col:27> 'int'     | | |-ImplicitCastExpr 0x123922c50 <col:9> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x12400e3a0 <col:9> 'int ()' Function 0x12400e2e8 'gettext_noop' 'int ()'     | | `-ImplicitCastExpr 0x123922c90 <col:22> 'char *' <ArrayToPointerDecay>     | |   `-StringLiteral 0x12400e3c0 <col:22> 'char[4]' lvalue \"STR\"     | |-RecoveryExpr 0x123922ca8 <line:13:9> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x123922ce8 <line:14:9, col:10> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x123922cc8 <col:10> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x123922d00 <line:15:9> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x123922d20 <line:16:9> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x123922d40 <line:17:9> '<dependent type>' contains-errors lvalue     | |-IntegerLiteral 0x123922b18 <col:20> 'int' 0     | |-RecoveryExpr 0x123922d60 <line:18:9> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x123922d80 <col:15> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x123922da0 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1239231a8 <line:28:2, col:34> 'int'     | |-ImplicitCastExpr 0x123923190 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x123923150 <col:2> 'int ()' Function 0x123923098 'EmitWarningsOnPlaceholders' 'int ()'     | `-ImplicitCastExpr 0x1239231d0 <col:29> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x123923170 <col:29> 'char[4]' lvalue \"STR\"     `-CallExpr 0x123923300 <line:30:2, col:24> 'int'       `-ImplicitCastExpr 0x1239232e8 <col:2> 'int (*)()' <FunctionToPointerDecay>         `-DeclRefExpr 0x1239232c8 <col:2> 'int ()' Function 0x123923210 'plpgsql_HashTableInit' 'int ()' ","19901":"`-FunctionDecl 0x1539281f0  line:1:6 invalid vnc_client_error 'void (int *)'   |-ParmVarDecl 0x153928128 <col:23, col:33> col:33 invalid vs 'int *'   `-CompoundStmt 0x153928650 <line:2:1, line:5:1>     |-CallExpr 0x1539284c8 <line:3:5, col:20> 'int'     | |-ImplicitCastExpr 0x1539284b0 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x153928400 <col:5> 'int ()' Function 0x153928348 'VNC_DEBUG' 'int ()'     | `-ImplicitCastExpr 0x1539284f0 <col:15> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x153928460 <col:15> 'char[4]' lvalue \"STR\"     `-CallExpr 0x153928628 <line:4:5, col:28> '<dependent type>' contains-errors       |-DeclRefExpr 0x1539285e8 <col:5> 'int ()' Function 0x153928530 'vnc_disconnect_start' 'int ()'       `-RecoveryExpr 0x153928608 <col:26> '<dependent type>' contains-errors lvalue ","19958":"`-FunctionDecl 0x11e9281c8  line:1:18 invalid base_compilestring 'int (int)' static   |-ParmVarDecl 0x11e9280f0 <col:37, col:49> col:49 invalid v 'int'   `-CompoundStmt 0x11e941d50 <line:2:1, line:15:1>     |-DeclStmt 0x11e928310 <line:4:5, col:33>     | `-VarDecl 0x11e928290 <col:5, col:19> col:19 invalid src 'const int *'     |-CallExpr 0x11e928518 <line:6:5, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11e928480 <col:5> 'int ()' Function 0x11e9283c8 'sq_getstring' 'int ()'     | |-RecoveryExpr 0x11e9284a0 <col:18> '<dependent type>' contains-errors lvalue     | |-IntegerLiteral 0x11e9284c0 <col:20> 'int' 2     | `-UnaryOperator 0x11e928500 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x11e9284e0 <col:23> '<dependent type>' contains-errors lvalue     |-IfStmt 0x11e9418c0 <line:8:5, line:10:5>     | |-BinaryOperator 0x11e928738 <line:8:8, col:14> 'int' contains-errors '>'     | | |-RecoveryExpr 0x11e928718 <col:8> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x11e9286d8 <col:14> 'int' 2     | `-CompoundStmt 0x11e9418a8 <col:16, line:10:5>     |   `-CallExpr 0x11e941870 <line:9:9, col:31> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x11e928758 <col:9> 'int ()' Function 0x11e9283c8 'sq_getstring' 'int ()'     |     |-RecoveryExpr 0x11e928778 <col:22> '<dependent type>' contains-errors lvalue     |     |-IntegerLiteral 0x11e928798 <col:24> 'int' 3     |     `-UnaryOperator 0x11e941858 <col:26, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x11e941838 <col:27> '<dependent type>' contains-errors lvalue     `-IfStmt 0x11e941d20 <line:11:5, line:14:16> has_else       |-CallExpr 0x11e941c80 <line:11:8, col:62> '<dependent type>' contains-errors       | |-DeclRefExpr 0x11e9419c0 <col:8> 'int ()' Function 0x11e941908 'SQ_SUCCEEDED' 'int ()'       | `-CallExpr 0x11e941c38 <col:21, col:61> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x11e941ac0 <col:21> 'int ()' Function 0x11e941a08 'sq_compilebuffer' 'int ()'       |   |-RecoveryExpr 0x11e941ae0 <col:38> '<dependent type>' contains-errors lvalue       |   |-RecoveryExpr 0x11e941b00 <col:40> '<dependent type>' contains-errors lvalue       |   |-RecoveryExpr 0x11e941bd8 <col:44> '<dependent type>' contains-errors lvalue       |   |-RecoveryExpr 0x11e941bf8 <col:49> '<dependent type>' contains-errors lvalue       |   `-RecoveryExpr 0x11e941c18 <col:54> '<dependent type>' contains-errors lvalue       |-ReturnStmt 0x11e941cc8 <line:12:9, col:16>       | `-IntegerLiteral 0x11e941ca8 <col:16> 'int' 1       `-ReturnStmt 0x11e941d10 <line:14:9, col:16>         `-RecoveryExpr 0x11e941cf0 <col:16> '<dependent type>' contains-errors lvalue ","19918":"`-FunctionDecl 0x13d80df18  line:1:17 invalid nbd_negotiate_continue 'int (int *, int, void *)' static   |-ParmVarDecl 0x13d80dd28 <col:40, col:52> col:52 invalid ioc 'int *'   |-ParmVarDecl 0x13d80dda8 <line:2:40, col:53> col:53 invalid condition 'int'   |-ParmVarDecl 0x13d80de28 <line:3:40, col:46> col:46 used opaque 'void *'   `-CompoundStmt 0x13d80e240 <line:4:1, line:7:1>     |-CallExpr 0x13d80e1b8 <line:5:5, col:32> 'int'     | |-ImplicitCastExpr 0x13d80e1a0 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13d80e130 <col:5> 'int ()' Function 0x13d80e078 'qemu_coroutine_enter' 'int ()'     | `-ImplicitCastExpr 0x13d80e1e0 <col:26> 'void *' <LValueToRValue>     |   `-DeclRefExpr 0x13d80e150 <col:26> 'void *' lvalue ParmVar 0x13d80de28 'opaque' 'void *'     `-ReturnStmt 0x13d80e230 <line:6:5, col:12>       `-RecoveryExpr 0x13d80e210 <col:12> '<dependent type>' contains-errors lvalue ","19400":"`-FunctionDecl 0x14a1287d0  line:1:25 invalid URI_FUNC 'const int *((int))(int (*)())' static   |-ParmVarDecl 0x14a128620 <col:34> col:34 used ParseQueryFrag 'int'   `-CompoundStmt 0x14a142ca0 <line:3:30, line:45:1>     |-IfStmt 0x14a128990 <line:4:2, line:6:2>     | |-BinaryOperator 0x14a128910 <line:4:6, col:15> 'int' contains-errors '>='     | | |-RecoveryExpr 0x14a1288d0 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14a1288f0 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14a128978 <col:26, line:6:2>     |   `-ReturnStmt 0x14a128968 <line:5:3, col:10>     |     `-RecoveryExpr 0x14a128948 <col:10> '<dependent type>' contains-errors lvalue     `-SwitchStmt 0x14a128a48 <line:8:2, line:44:2>       |-UnaryOperator 0x14a128a30 <line:8:10, col:11> '<dependent type>' contains-errors prefix '*' cannot overflow       | `-ImplicitCastExpr 0x14a128a18 <col:11> '<dependent type>' contains-errors <LValueToRValue>       |   `-RecoveryExpr 0x14a1289f8 <col:11> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x14a142c78 <col:18, line:44:2>         |-CaseStmt 0x14a141c28 <line:9:2, line:36:3>         | |-CallExpr 0x14a141c00 <line:9:7, col:14> 'int'         | | |-ImplicitCastExpr 0x14a128bd0 <col:7> 'int (*)()' <FunctionToPointerDecay>         | | | `-DeclRefExpr 0x14a128b98 <col:7> 'int ()' Function 0x14a128ae0 '_UT' 'int ()'         | | `-CharacterLiteral 0x14a128bb8 <col:11> 'int' 33         | `-CaseStmt 0x14a141cc8 <line:10:2, line:36:3>         |   |-CallExpr 0x14a141ca0 <line:10:7, col:14> 'int'         |   | |-ImplicitCastExpr 0x14a141c88 <col:7> 'int (*)()' <FunctionToPointerDecay>         |   | | `-DeclRefExpr 0x14a141c50 <col:7> 'int ()' Function 0x14a128ae0 '_UT' 'int ()'         |   | `-CharacterLiteral 0x14a141c70 <col:11> 'int' 36         |   `-CaseStmt 0x14a141d68 <line:11:2, line:36:3>         |     |-CallExpr 0x14a141d40 <line:11:7, col:14> 'int'         |     | |-ImplicitCastExpr 0x14a141d28 <col:7> 'int (*)()' <FunctionToPointerDecay>         |     | | `-DeclRefExpr 0x14a141cf0 <col:7> 'int ()' Function 0x14a128ae0 '_UT' 'int ()'         |     | `-CharacterLiteral 0x14a141d10 <col:11> 'int' 37         |     `-CaseStmt 0x14a141e08 <line:12:2, line:36:3>         |       |-CallExpr 0x14a141de0 <line:12:7, col:14> 'int'         |       | |-ImplicitCastExpr 0x14a141dc8 <col:7> 'int (*)()' <FunctionToPointerDecay>         |       | | `-DeclRefExpr 0x14a141d90 <col:7> 'int ()' Function 0x14a128ae0 '_UT' 'int ()'         |       | `-CharacterLiteral 0x14a141db0 <col:11> 'int' 38         |       `-CaseStmt 0x14a141ea8 <line:13:2, line:36:3>         |         |-CallExpr 0x14a141e80 <line:13:7, col:14> 'int'         |         | |-ImplicitCastExpr 0x14a141e68 <col:7> 'int (*)()' <FunctionToPointerDecay>         |         | | `-DeclRefExpr 0x14a141e30 <col:7> 'int ()' Function 0x14a128ae0 '_UT' 'int ()'         |         | `-CharacterLiteral 0x14a141e50 <col:11> 'int' 40         |         `-CaseStmt 0x14a141f48 <line:14:2, line:36:3>         |           |-CallExpr 0x14a141f20 <line:14:7, col:14> 'int'         |           | |-ImplicitCastExpr 0x14a141f08 <col:7> 'int (*)()' <FunctionToPointerDecay>         |           | | `-DeclRefExpr 0x14a141ed0 <col:7> 'int ()' Function 0x14a128ae0 '_UT' 'int ()'         |           | `-CharacterLiteral 0x14a141ef0 <col:11> 'int' 41         |           `-CaseStmt 0x14a141fe8 <line:15:2, line:36:3>         |             |-CallExpr 0x14a141fc0 <line:15:7, col:14> 'int'         |             | |-ImplicitCastExpr 0x14a141fa8 <col:7> 'int (*)()' <FunctionToPointerDecay>         |             | | `-DeclRefExpr 0x14a141f70 <col:7> 'int ()' Function 0x14a128ae0 '_UT' 'int ()'         |             | `-CharacterLiteral 0x14a141f90 <col:11> 'int' 45         |             `-CaseStmt 0x14a142088 <line:16:2, line:36:3>         |               |-CallExpr 0x14a142060 <line:16:7, col:14> 'int'         |               | |-ImplicitCastExpr 0x14a142048 <col:7> 'int (*)()' <FunctionToPointerDecay>         |               | | `-DeclRefExpr 0x14a142010 <col:7> 'int ()' Function 0x14a128ae0 '_UT' 'int ()'         |               | `-CharacterLiteral 0x14a142030 <col:11> 'int' 42         |               `-CaseStmt 0x14a142128 <line:17:2, line:36:3>         |                 |-CallExpr 0x14a142100 <line:17:7, col:14> 'int'         |                 | |-ImplicitCastExpr 0x14a1420e8 <col:7> 'int (*)()' <FunctionToPointerDecay>         |                 | | `-DeclRefExpr 0x14a1420b0 <col:7> 'int ()' Function 0x14a128ae0 '_UT' 'int ()'         |                 | `-CharacterLiteral 0x14a1420d0 <col:11> 'int' 44         |                 `-CaseStmt 0x14a1421c8 <line:18:2, line:36:3>         |                   |-CallExpr 0x14a1421a0 <line:18:7, col:14> 'int'         |                   | |-ImplicitCastExpr 0x14a142188 <col:7> 'int (*)()' <FunctionToPointerDecay>         |                   | | `-DeclRefExpr 0x14a142150 <col:7> 'int ()' Function 0x14a128ae0 '_UT' 'int ()'         |                   | `-CharacterLiteral 0x14a142170 <col:11> 'int' 46         |                   `-CaseStmt 0x14a142268 <line:19:2, line:36:3>         |                     |-CallExpr 0x14a142240 <line:19:7, col:14> 'int'         |                     | |-ImplicitCastExpr 0x14a142228 <col:7> 'int (*)()' <FunctionToPointerDecay>         |                     | | `-DeclRefExpr 0x14a1421f0 <col:7> 'int ()' Function 0x14a128ae0 '_UT' 'int ()'         |                     | `-CharacterLiteral 0x14a142210 <col:11> 'int' 58         |                     `-CaseStmt 0x14a142308 <line:20:2, line:36:3>         |                       |-CallExpr 0x14a1422e0 <line:20:7, col:14> 'int'         |                       | |-ImplicitCastExpr 0x14a1422c8 <col:7> 'int (*)()' <FunctionToPointerDecay>         |                       | | `-DeclRefExpr 0x14a142290 <col:7> 'int ()' Function 0x14a128ae0 '_UT' 'int ()'         |                       | `-CharacterLiteral 0x14a1422b0 <col:11> 'int' 59         |                       `-CaseStmt 0x14a1423a8 <line:21:2, line:36:3>         |                         |-CallExpr 0x14a142380 <line:21:7, col:14> 'int'         |                         | |-ImplicitCastExpr 0x14a142368 <col:7> 'int (*)()' <FunctionToPointerDecay>         |                         | | `-DeclRefExpr 0x14a142330 <col:7> 'int ()' Function 0x14a128ae0 '_UT' 'int ()'         |                         | `-CharacterLiteral 0x14a142350 <col:11> 'int' 64         |                         `-CaseStmt 0x14a142448 <line:22:2, line:36:3>         |                           |-CallExpr 0x14a142420 <line:22:7, col:15> 'int'         |                           | |-ImplicitCastExpr 0x14a142408 <col:7> 'int (*)()' <FunctionToPointerDecay>         |                           | | `-DeclRefExpr 0x14a1423d0 <col:7> 'int ()' Function 0x14a128ae0 '_UT' 'int ()'         |                           | `-CharacterLiteral 0x14a1423f0 <col:11> 'int' 39         |                           `-CaseStmt 0x14a1424e8 <line:23:2, line:36:3>         |                             |-CallExpr 0x14a1424c0 <line:23:7, col:14> 'int'         |                             | |-ImplicitCastExpr 0x14a1424a8 <col:7> 'int (*)()' <FunctionToPointerDecay>         |                             | | `-DeclRefExpr 0x14a142470 <col:7> 'int ()' Function 0x14a128ae0 '_UT' 'int ()'         |                             | `-CharacterLiteral 0x14a142490 <col:11> 'int' 95         |                             `-CaseStmt 0x14a142588 <line:24:2, line:36:3>         |                               |-CallExpr 0x14a142560 <line:24:7, col:14> 'int'         |                               | |-ImplicitCastExpr 0x14a142548 <col:7> 'int (*)()' <FunctionToPointerDecay>         |                               | | `-DeclRefExpr 0x14a142510 <col:7> 'int ()' Function 0x14a128ae0 '_UT' 'int ()'         |                               | `-CharacterLiteral 0x14a142530 <col:11> 'int' 126         |                               `-CaseStmt 0x14a142628 <line:25:2, line:36:3>         |                                 |-CallExpr 0x14a142600 <line:25:7, col:14> 'int'         |                                 | |-ImplicitCastExpr 0x14a1425e8 <col:7> 'int (*)()' <FunctionToPointerDecay>         |                                 | | `-DeclRefExpr 0x14a1425b0 <col:7> 'int ()' Function 0x14a128ae0 '_UT' 'int ()'         |                                 | `-CharacterLiteral 0x14a1425d0 <col:11> 'int' 43         |                                 `-CaseStmt 0x14a1426c8 <line:26:2, line:36:3>         |                                   |-CallExpr 0x14a1426a0 <line:26:7, col:14> 'int'         |                                   | |-ImplicitCastExpr 0x14a142688 <col:7> 'int (*)()' <FunctionToPointerDecay>         |                                   | | `-DeclRefExpr 0x14a142650 <col:7> 'int ()' Function 0x14a128ae0 '_UT' 'int ()'         |                                   | `-CharacterLiteral 0x14a142670 <col:11> 'int' 61         |                                   `-CompoundStmt 0x14a142a58 <line:29:3, line:36:3>         |                                     |-DeclStmt 0x14a1428a0 <line:30:4, line:31:61>         |                                     | `-VarDecl 0x14a142738 <line:30:4, col:27> col:27 invalid afterPchar 'const int *const'         |                                     `-IfStmt 0x14a1429b0 <line:32:4, line:34:4>         |                                       |-BinaryOperator 0x14a142930 <line:32:8, col:22> 'int' contains-errors '=='         |                                       | |-RecoveryExpr 0x14a1428b8 <col:8> '<dependent type>' contains-errors lvalue         |                                       | `-RecoveryExpr 0x14a142910 <col:22> '<dependent type>' contains-errors lvalue         |                                       `-CompoundStmt 0x14a142998 <col:28, line:34:4>         |                                         `-ReturnStmt 0x14a142988 <line:33:5, col:12>         |                                           `-RecoveryExpr 0x14a142968 <col:12> '<dependent type>' contains-errors lvalue         |-CaseStmt 0x14a142af0 <line:38:2, <invalid sloc>>         | |-CallExpr 0x14a142ac8 <col:7, col:14> 'int'         | | |-ImplicitCastExpr 0x14a142ab0 <col:7> 'int (*)()' <FunctionToPointerDecay>         | | | `-DeclRefExpr 0x14a142a78 <col:7> 'int ()' Function 0x14a128ae0 '_UT' 'int ()'         | | `-CharacterLiteral 0x14a142a98 <col:11> 'int' 47         | `-CaseStmt 0x14a142b90 <line:39:2, <invalid sloc>>         |   |-CallExpr 0x14a142b68 <col:7, col:14> 'int'         |   | |-ImplicitCastExpr 0x14a142b50 <col:7> 'int (*)()' <FunctionToPointerDecay>         |   | | `-DeclRefExpr 0x14a142b18 <col:7> 'int ()' Function 0x14a128ae0 '_UT' 'int ()'         |   | `-CharacterLiteral 0x14a142b38 <col:11> 'int' 63         |   `-NullStmt 0x14a142c48 <<invalid sloc>>         `-DefaultStmt 0x14a142c58 <line:42:2, col:9>           `-NullStmt 0x14a142c50 <col:9> ","20099":"`-FunctionDecl 0x156809a78  col:3 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x156809b78 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x156809be0 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x156809c48 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x156809b20 <<invalid sloc>> Implicit 900 ","19337":"`-FunctionDecl 0x145009140  col:30 implicit used index 'char *(const char *, int)' extern   |-ParmVarDecl 0x144026658 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x1440266c0 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x144026600 <<invalid sloc>> Implicit 952 ","20193":"`-FunctionDecl 0x140928110  line:1:8 createVerifier 'void ()'   `-CompoundStmt 0x140928698 <col:25, line:9:3> ","19690":"`-FunctionDecl 0x13d911ae0  line:1:6 invalid mbedtls_strerror 'void (int, char *, int)'   |-ParmVarDecl 0x13d9118d8 <col:24, col:28> col:28 used ret 'int'   |-ParmVarDecl 0x13d911958 <col:33, col:39> col:39 used buf 'char *'   |-ParmVarDecl 0x13d9119f0 <col:44, col:51> col:51 invalid buflen 'int'   `-CompoundStmt 0x13d911d78 <line:2:1, line:7:1>     |-ParenExpr 0x13d911c10 <line:3:5, col:16> 'void'     | `-CStyleCastExpr 0x13d911be8 <col:6, col:13> 'void' <ToVoid>     |   `-ImplicitCastExpr 0x13d911bd0 <col:13> 'int' <LValueToRValue> part_of_explicit_cast     |     `-DeclRefExpr 0x13d911ba0 <col:13> 'int' lvalue ParmVar 0x13d9118d8 'ret' 'int'     `-IfStmt 0x13d911d58 <line:5:5, line:6:18>       |-BinaryOperator 0x13d911c70 <line:5:9, col:18> 'int' contains-errors '>'       | |-RecoveryExpr 0x13d911c30 <col:9> '<dependent type>' contains-errors lvalue       | `-IntegerLiteral 0x13d911c50 <col:18> 'int' 0       `-BinaryOperator 0x13d911d38 <line:6:9, col:18> 'char' '='         |-ArraySubscriptExpr 0x13d911ce8 <col:9, col:14> 'char' lvalue         | |-ImplicitCastExpr 0x13d911cd0 <col:9> 'char *' <LValueToRValue>         | | `-DeclRefExpr 0x13d911c90 <col:9> 'char *' lvalue ParmVar 0x13d911958 'buf' 'char *'         | `-IntegerLiteral 0x13d911cb0 <col:13> 'int' 0         `-ImplicitCastExpr 0x13d911d20 <col:18> 'char' <IntegralCast>           `-CharacterLiteral 0x13d911d08 <col:18> 'int' 0 ","19288":"`-FunctionDecl 0x13b00de88  line:1:1 invalid gs_manager_create_windows_for_screen 'int (int *, int *)'   |-ParmVarDecl 0x13b00dd28 <col:39, col:50> col:50 referenced invalid manager 'int *'   |-ParmVarDecl 0x13b00dda8 <line:2:39, col:50> col:50 invalid screen 'int *'   `-CompoundStmt 0x13a923c70 <line:3:1, line:37:1>     |-DeclStmt 0x13b00dfd8 <line:5:9, col:29>     | `-VarDecl 0x13b00df70 <col:9, col:19> col:19 used n_monitors 'int'     |-DeclStmt 0x13b00e070 <line:6:9, col:20>     | `-VarDecl 0x13b00e008 <col:9, col:19> col:19 used i 'int'     |-CallExpr 0x13b00e2c0 <line:8:9, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13b00e1e0 <col:9> 'int ()' Function 0x13b00e128 'g_return_if_fail' 'int ()'     | `-BinaryOperator 0x13b00e2a0 <col:27, col:38> 'int' contains-errors '!='     |   |-RecoveryExpr 0x13b00e200 <col:27> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x13b00e280 <col:38> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13b027468 <line:9:9, col:50> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13b00e2e8 <col:9> 'int ()' Function 0x13b00e128 'g_return_if_fail' 'int ()'     | `-CallExpr 0x13b027440 <col:27, col:49> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13b027400 <col:27> 'int ()' Function 0x13b00e330 'GS_IS_MANAGER' 'int ()'     |   `-RecoveryExpr 0x13b027420 <col:42> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13b0275f8 <line:10:9, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13b027490 <col:9> 'int ()' Function 0x13b00e128 'g_return_if_fail' 'int ()'     | `-CallExpr 0x13b0275d0 <col:27, col:48> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13b027590 <col:27> 'int ()' Function 0x13b0274d8 'GDK_IS_SCREEN' 'int ()'     |   `-RecoveryExpr 0x13b0275b0 <col:42> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13b027740 <line:12:9, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13b027700 <col:9> 'int ()' Function 0x13b027648 'g_object_ref' 'int ()'     | `-RecoveryExpr 0x13b027720 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13b0277a8 <line:13:9, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13b027768 <col:9> 'int ()' Function 0x13b027648 'g_object_ref' 'int ()'     | `-RecoveryExpr 0x13b027788 <col:23> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13b027938 <line:15:9, col:55> 'int' contains-errors '='     | |-DeclRefExpr 0x13b0277d0 <col:9> 'int' lvalue Var 0x13b00df70 'n_monitors' 'int'     | `-CallExpr 0x13b027910 <col:22, col:55> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13b0278d0 <col:22> 'int ()' Function 0x13b027818 'gdk_screen_get_n_monitors' 'int ()'     |   `-RecoveryExpr 0x13b0278f0 <col:49> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13b027c28 <line:17:9, col:68> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13b027a38 <col:9> 'int ()' Function 0x13b027980 'gs_debug' 'int ()'     | |-StringLiteral 0x13b027aa0 <col:19> 'char[4]' lvalue \"STR\"     | |-DeclRefExpr 0x13b027ac0 <col:26> 'int' lvalue Var 0x13b00df70 'n_monitors' 'int'     | `-CallExpr 0x13b027c00 <col:38, col:67> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13b027bc0 <col:38> 'int ()' Function 0x13b027b08 'gdk_screen_get_number' 'int ()'     |   `-RecoveryExpr 0x13b027be0 <col:61> '<dependent type>' contains-errors lvalue     |-ForStmt 0x13a923a88 <line:19:9, line:33:9>     | |-BinaryOperator 0x13b027ca0 <line:19:14, col:18> 'int' '='     | | |-DeclRefExpr 0x13b027c60 <col:14> 'int' lvalue Var 0x13b00e008 'i' 'int'     | | `-IntegerLiteral 0x13b027c80 <col:18> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x13b027d30 <col:21, col:25> 'int' '<'     | | |-ImplicitCastExpr 0x13b027d00 <col:21> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x13b027cc0 <col:21> 'int' lvalue Var 0x13b00e008 'i' 'int'     | | `-ImplicitCastExpr 0x13b027d18 <col:25> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x13b027ce0 <col:25> 'int' lvalue Var 0x13b00df70 'n_monitors' 'int'     | |-UnaryOperator 0x13b027d70 <col:37, col:38> 'int' postfix '++'     | | `-DeclRefExpr 0x13b027d50 <col:37> 'int' lvalue Var 0x13b00e008 'i' 'int'     | `-CompoundStmt 0x13a923a68 <col:42, line:33:9>     |   |-CallExpr 0x13b0281c8 <line:22:17, col:94> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13b028090 <col:17> 'int ()' Function 0x13b027fd8 'gs_window_set_user_switch_enabled' 'int ()'     |   | |-RecoveryExpr 0x13b0281a8 <col:52> '<dependent type>' contains-errors lvalue     |   | `-CXXDependentScopeMemberExpr 0x13b028130 <col:60, col:75> '<dependent type>' contains-errors lvalue ->user_switch_enabled     |   |   `-CXXDependentScopeMemberExpr 0x13b0280e8 <col:60, col:69> '<dependent type>' contains-errors lvalue ->priv     |   |     `-RecoveryExpr 0x13b0280c8 <col:60> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x13a922e20 <line:23:17, col:84> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x13b0282d8 <col:17> 'int ()' Function 0x13b028220 'gs_window_set_logout_enabled' 'int ()'     |     |-RecoveryExpr 0x13a922e00 <col:47> '<dependent type>' contains-errors lvalue     |     `-CXXDependentScopeMemberExpr 0x13b028378 <col:55, col:70> '<dependent type>' contains-errors lvalue ->logout_enabled     |       `-CXXDependentScopeMemberExpr 0x13b028330 <col:55, col:64> '<dependent type>' contains-errors lvalue ->priv     |         `-RecoveryExpr 0x13b028310 <col:55> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13a923be0 <line:35:9, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13a923ba0 <col:9> 'int ()' Function 0x13a923ae8 'g_object_unref' 'int ()'     | `-RecoveryExpr 0x13a923bc0 <col:25> '<dependent type>' contains-errors lvalue     `-CallExpr 0x13a923c48 <line:36:9, col:32> '<dependent type>' contains-errors       |-DeclRefExpr 0x13a923c08 <col:9> 'int ()' Function 0x13a923ae8 'g_object_unref' 'int ()'       `-RecoveryExpr 0x13a923c28 <col:25> '<dependent type>' contains-errors lvalue ","19975":"`-FunctionDecl 0x12200dff0  line:1:6 invalid pointZZ_pMul 'void (int *, const int *, const int, const int *)'   |-ParmVarDecl 0x12200dd28 <col:19, col:31> col:31 invalid rop 'int *'   |-ParmVarDecl 0x12200dda8 <col:36, col:54> col:54 invalid point 'const int *'   |-ParmVarDecl 0x12200de28 <col:61, col:73> col:73 invalid scalar 'const int'   |-ParmVarDecl 0x12200dea8 <col:81, col:99> col:99 invalid curve 'const int *'   `-CompoundStmt 0x12202a2a8 <col:106, line:32:1>     |-CallExpr 0x122028e08 <line:3:5, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12200e210 <col:5> 'int ()' Function 0x12200e158 'mpz_inits' 'int ()'     | |-CXXDependentScopeMemberExpr 0x122028c68 <col:15, col:18> '<dependent type>' contains-errors lvalue .x     | | `-RecoveryExpr 0x122028c48 <col:15> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x122028cd0 <col:21, col:24> '<dependent type>' contains-errors lvalue .y     | | `-RecoveryExpr 0x122028cb0 <col:21> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x122028d38 <col:27, col:31> '<dependent type>' contains-errors lvalue .x     | | `-RecoveryExpr 0x122028d18 <col:27> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x122028da0 <col:34, col:38> '<dependent type>' contains-errors lvalue .y     | | `-RecoveryExpr 0x122028d80 <col:34> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x122028de8 <col:41> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1220290b0 <line:4:5, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x122028f30 <col:5> 'int ()' Function 0x122028e78 'mpz_init_set' 'int ()'     | |-CXXDependentScopeMemberExpr 0x122029068 <col:18, col:21> '<dependent type>' contains-errors lvalue .x     | | `-RecoveryExpr 0x122029048 <col:18> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x122028fd0 <col:24, col:31> '<dependent type>' contains-errors lvalue ->x     |   `-RecoveryExpr 0x122028fb0 <col:24> '<dependent type>' contains-errors lvalue     |-CallExpr 0x122029260 <line:5:5, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1220290e0 <col:5> 'int ()' Function 0x122028e78 'mpz_init_set' 'int ()'     | |-CXXDependentScopeMemberExpr 0x122029218 <col:18, col:21> '<dependent type>' contains-errors lvalue .y     | | `-RecoveryExpr 0x1220291f8 <col:18> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x122029180 <col:24, col:31> '<dependent type>' contains-errors lvalue ->y     |   `-RecoveryExpr 0x122029160 <col:24> '<dependent type>' contains-errors lvalue     |-CallExpr 0x122029470 <line:6:5, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x122029370 <col:5> 'int ()' Function 0x1220292b8 'pointZZ_pDouble' 'int ()'     | |-UnaryOperator 0x122029458 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x122029438 <col:22> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x1220293c0 <col:26> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1220293e0 <col:33> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x122029730 <line:8:5, col:45>     | |-VarDecl 0x1220294c0 <col:5, col:41> col:9 used dbits 'int' cinit     | | `-CallExpr 0x122029668 <col:17, col:41> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x122029608 <col:17> 'int ()' Function 0x122029550 'mpz_sizeinbase' 'int ()'     | |   |-RecoveryExpr 0x122029628 <col:32> '<dependent type>' contains-errors lvalue     | |   `-IntegerLiteral 0x122029648 <col:40> 'int' 2     | `-VarDecl 0x1220296b0 <col:5, col:44> col:44 used i 'int'     `-ForStmt 0x12202a060 <line:10:5, line:27:5>       |-BinaryOperator 0x1220297e0 <line:10:9, col:21> 'int' contains-errors '='       | |-DeclRefExpr 0x122029748 <col:9> 'int' lvalue Var 0x1220296b0 'i' 'int'       | `-BinaryOperator 0x1220297c0 <col:13, col:21> 'int' contains-errors '-'       |   |-ImplicitCastExpr 0x1220297a8 <col:13> 'int' contains-errors <LValueToRValue>       |   | `-DeclRefExpr 0x122029768 <col:13> 'int' contains-errors lvalue Var 0x1220294c0 'dbits' 'int'       |   `-IntegerLiteral 0x122029788 <col:21> 'int' 2       |-<<<NULL>>>       |-BinaryOperator 0x122029858 <col:24, col:29> 'int' '>='       | |-ImplicitCastExpr 0x122029840 <col:24> 'int' <LValueToRValue>       | | `-DeclRefExpr 0x122029800 <col:24> 'int' lvalue Var 0x1220296b0 'i' 'int'       | `-IntegerLiteral 0x122029820 <col:29> 'int' 0       |-UnaryOperator 0x122029898 <col:32, col:33> 'int' postfix '--'       | `-DeclRefExpr 0x122029878 <col:32> 'int' lvalue Var 0x1220296b0 'i' 'int'       `-CompoundStmt 0x12202a048 <col:37, line:27:5>         `-IfStmt 0x12202a018 <line:11:9, line:26:9> has_else           |-CallExpr 0x1220299f0 <line:11:12, col:32> '<dependent type>' contains-errors           | |-DeclRefExpr 0x122029990 <col:12> 'int ()' Function 0x1220298d8 'mpz_tstbit' 'int ()'           | |-RecoveryExpr 0x1220299b0 <col:23> '<dependent type>' contains-errors lvalue           | `-DeclRefExpr 0x1220299d0 <col:31> 'int' lvalue Var 0x1220296b0 'i' 'int'           |-CompoundStmt 0x122029ef0 <col:35, line:18:9>           | `-CallExpr 0x122029d00 <line:12:13, col:32> '<dependent type>' contains-errors           |   |-DeclRefExpr 0x122029b00 <col:13> 'int ()' Function 0x122029a48 'mpz_set' 'int ()'           |   |-CXXDependentScopeMemberExpr 0x122029c50 <col:21, col:25> '<dependent type>' contains-errors lvalue .x           |   | `-RecoveryExpr 0x122029c30 <col:21> '<dependent type>' contains-errors lvalue           |   `-CXXDependentScopeMemberExpr 0x122029cb8 <col:28, col:31> '<dependent type>' contains-errors lvalue .x           |     `-RecoveryExpr 0x122029c98 <col:28> '<dependent type>' contains-errors lvalue           `-CompoundStmt 0x12202a008 <line:19:14, line:26:9> ","19580":"`-FunctionDecl 0x1569281c8  line:1:11 invalid hci_to_mgmt_reason 'int (int)' static   |-ParmVarDecl 0x1569280f0 <col:30, col:33> col:33 invalid err 'int'   `-CompoundStmt 0x1569284c0 <line:2:1, line:15:1>     `-SwitchStmt 0x1569282b0 <line:3:2, line:14:2>       |-ImplicitCastExpr 0x156928298 <line:3:10> '<dependent type>' contains-errors <LValueToRValue>       | `-RecoveryExpr 0x156928278 <col:10> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x156928490 <col:15, line:14:2>         |-ReturnStmt 0x156928328 <line:5:3, col:10>         | `-RecoveryExpr 0x156928308 <col:10> '<dependent type>' contains-errors lvalue         |-ReturnStmt 0x1569283b8 <line:9:3, col:10>         | `-RecoveryExpr 0x156928398 <col:10> '<dependent type>' contains-errors lvalue         |-ReturnStmt 0x156928418 <line:11:3, col:10>         | `-RecoveryExpr 0x1569283f8 <col:10> '<dependent type>' contains-errors lvalue         `-DefaultStmt 0x156928470 <line:12:2, line:13:10>           `-ReturnStmt 0x156928460 <col:3, col:10>             `-RecoveryExpr 0x156928440 <col:10> '<dependent type>' contains-errors lvalue ","19820":"`-FunctionDecl 0x15580ddf8  line:1:1 invalid networkstatus_get_detached_signatures 'int (int *)'   |-ParmVarDecl 0x15580dd28 <col:39, col:52> col:52 referenced invalid consensuses 'int *'   `-CompoundStmt 0x155829000 <line:2:1, line:83:1>     |-DeclStmt 0x15580e048 <line:4:3, col:36>     | |-VarDecl 0x15580ded8 <col:3, col:18> col:9 used result 'char *' cinit     | | `-RecoveryExpr 0x15580df58 <col:18> '<dependent type>' contains-errors lvalue     | `-VarDecl 0x15580df90 <col:3, col:32> col:25 used sigs 'char *' cinit     |   `-RecoveryExpr 0x15580e010 <col:32> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15580e250 <line:6:3, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15580e210 <col:3> 'int ()' Function 0x15580e158 'tor_assert' 'int ()'     | `-RecoveryExpr 0x15580e230 <col:14> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1558276e8 <line:14:3, line:17:3>     | |-UnaryOperator 0x155827470 <line:14:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x155827458 <col:8> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x155827438 <col:8> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1558276c8 <col:22, line:17:3>     |   |-CallExpr 0x155827650 <line:15:5, col:27> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x155827568 <col:5> 'int ()' Function 0x1558274b0 'log_warn' 'int ()'     |   | |-RecoveryExpr 0x155827630 <col:14> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x1558275e0 <col:22> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x1558276b8 <line:16:5, col:12>     |     `-RecoveryExpr 0x155827698 <col:12> '<dependent type>' contains-errors lvalue     |-CompoundStmt 0x155827eb0 <line:21:3, line:37:3>     | |-DeclStmt 0x155827950 <line:22:5, line:23:29>     | | `-VarDecl 0x1558278a8 <line:22:5, col:10> col:10 invalid va_buf 'char'     | `-DeclStmt 0x155827a00 <line:24:5, col:29>     |   `-VarDecl 0x155827998 <col:5, col:10> col:10 invalid d 'char'     |-IfStmt 0x155828228 <line:74:3, line:75:10>     | |-UnaryOperator 0x1558281a8 <line:74:7, col:8> 'int' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x155828190 <col:8> 'char *' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x155828170 <col:8> 'char *' contains-errors lvalue Var 0x15580df90 'sigs' 'char *'     | `-GotoStmt 0x155828210 <line:75:5, col:10> 'err' 0x1558281c0     |-LabelStmt 0x155828e80 <line:79:2, col:5> 'err'     | `-NullStmt 0x155828e78 <col:5>     `-ReturnStmt 0x155828ff0 <line:82:3, col:10>       `-ImplicitCastExpr 0x155828fd8 <col:10> 'int' contains-errors <PointerToIntegral>         `-ImplicitCastExpr 0x155828fc0 <col:10> 'char *' contains-errors <LValueToRValue>           `-DeclRefExpr 0x155828fa0 <col:10> 'char *' contains-errors lvalue Var 0x15580ded8 'result' 'char *' ","19270":"`-FunctionDecl 0x1410429f8  line:1:21 invalid new_slab 'struct page *(struct kmem_cache *, int, int)' static   |-ParmVarDecl 0x1418aeee8 <col:30, col:49> col:49 used s 'struct kmem_cache *'   |-ParmVarDecl 0x1418aef80 <col:52, col:58> col:58 referenced invalid flags 'int'   |-ParmVarDecl 0x141042800 <col:65, col:69> col:69 used node 'int'   `-CompoundStmt 0x1410434b0 <line:2:1, line:13:1>     `-IfStmt 0x1410432e0 <line:3:2, line:9:2>       |-CallExpr 0x141042cf0 <line:3:6, col:40> '<dependent type>' contains-errors       | |-DeclRefExpr 0x141042c10 <col:6> 'int ()' Function 0x141042b58 'unlikely' 'int ()'       | `-BinaryOperator 0x141042cd0 <col:15, col:23> '<dependent type>' contains-errors '&'       |   |-RecoveryExpr 0x141042c30 <col:15> '<dependent type>' contains-errors lvalue       |   `-RecoveryExpr 0x141042cb0 <col:23> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x1410432b8 <col:43, line:9:2>         |-CompoundAssignOperator 0x141042e28 <line:5:3, col:13> '<dependent type>' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'         | |-RecoveryExpr 0x141042d38 <col:3> '<dependent type>' contains-errors lvalue         | | `-DeclRefExpr 0x141042d18 <col:3> 'int' lvalue ParmVar 0x1418aef80 'flags' 'int'         | `-UnaryOperator 0x141042e10 <col:12, col:13> '<dependent type>' contains-errors prefix '~' cannot overflow         |   `-ImplicitCastExpr 0x141042df8 <col:13> '<dependent type>' contains-errors <LValueToRValue>         |     `-RecoveryExpr 0x141042dd8 <col:13> '<dependent type>' contains-errors lvalue         |-CallExpr 0x141043100 <line:6:3, line:7:47> '<dependent type>' contains-errors         | |-DeclRefExpr 0x141042f38 <line:6:3> 'int ()' Function 0x141042e80 'pr_warn' 'int ()'         | |-StringLiteral 0x141042fa0 <col:11> 'char[4]' lvalue \"STR\"         | |-RecoveryExpr 0x1410430a8 <line:7:5> '<dependent type>' contains-errors lvalue         | |-UnaryOperator 0x1410430e8 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow         | | `-RecoveryExpr 0x1410430c8 <col:20> '<dependent type>' contains-errors lvalue         | |-RecoveryExpr 0x141043008 <col:34> '<dependent type>' contains-errors lvalue         | `-UnaryOperator 0x141043048 <col:41, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow         |   `-RecoveryExpr 0x141043028 <col:42> '<dependent type>' contains-errors lvalue         `-CallExpr 0x141043298 <line:8:3, col:14> 'int'           `-ImplicitCastExpr 0x141043280 <col:3> 'int (*)()' <FunctionToPointerDecay>             `-DeclRefExpr 0x141043228 <col:3> 'int ()' Function 0x141043170 'dump_stack' 'int ()' ","19973":"`-FunctionDecl 0x143941838  line:1:1 invalid dequeue_mid 'int (struct mid_q_entry *, int)'   |-ParmVarDecl 0x143928648 <col:13, col:33> col:33 used mid 'struct mid_q_entry *'   |-ParmVarDecl 0x1439286e0 <col:38, col:43> col:43 invalid malformed 'int'   `-CompoundStmt 0x1439420b0 <line:2:1, line:13:1>     |-CallExpr 0x143941b00 <line:6:2, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x143941a50 <col:2> 'int ()' Function 0x143941998 'spin_lock' 'int ()'     | `-UnaryOperator 0x143941ae8 <col:12, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x143941ac8 <col:13> '<dependent type>' contains-errors lvalue     |-IfStmt 0x143941d28 <line:7:2, line:10:20> has_else     | |-UnaryOperator 0x143941b60 <line:7:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x143941b48 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x143941b28 <col:7> '<dependent type>' contains-errors lvalue     | |-BinaryOperator 0x143941c30 <line:8:3, col:20> '<dependent type>' contains-errors '='     | | |-RecoveryExpr 0x143941bb0 <col:3, col:8> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x143941b78 <col:3> 'struct mid_q_entry *' lvalue ParmVar 0x143928648 'mid' 'struct mid_q_entry *'     | | `-RecoveryExpr 0x143941c10 <col:20> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x143941d08 <line:10:3, col:20> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x143941c88 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x143941c50 <col:3> 'struct mid_q_entry *' lvalue ParmVar 0x143928648 'mid' 'struct mid_q_entry *'     |   `-RecoveryExpr 0x143941ce8 <col:20> '<dependent type>' contains-errors lvalue     |-CallExpr 0x143941ed0 <line:11:2, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x143941e38 <col:2> 'int ()' Function 0x143941d80 'list_del_init' 'int ()'     | `-UnaryOperator 0x143941eb8 <col:16, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x143941e90 <col:17, col:22> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x143941e58 <col:17> 'struct mid_q_entry *' lvalue ParmVar 0x143928648 'mid' 'struct mid_q_entry *'     `-CallExpr 0x143942088 <line:12:2, col:29> '<dependent type>' contains-errors       |-DeclRefExpr 0x143941fd8 <col:2> 'int ()' Function 0x143941f20 'spin_unlock' 'int ()'       `-UnaryOperator 0x143942070 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x143942050 <col:15> '<dependent type>' contains-errors lvalue ","19563":"`-FunctionDecl 0x159141628  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x159141728 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x159141790 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x1591417f8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1591416d0 <<invalid sloc>> Implicit 882 ","19370":"`-FunctionDecl 0x15d009738  col:8 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x15b940a58 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x15b940a00 <<invalid sloc>> Implicit 873 ","19763":"`-FunctionDecl 0x147928238  line:1:1 g_tcp_select 'int (int, int)'   |-ParmVarDecl 0x1479280d8 <col:14, col:18> col:18 used sck1 'int'   |-ParmVarDecl 0x147928158 <col:24, col:28> col:28 used sck2 'int'   `-CompoundStmt 0x147945888 <line:2:1, line:45:1>     |-DeclStmt 0x147940b28 <line:4:3, col:22>     | |-RecordDecl 0x147928350 <col:3, col:10> col:10 struct timeval     | `-VarDecl 0x147928448 <col:3, col:18> col:18 referenced invalid time 'struct timeval'     |-DeclStmt 0x147940be0 <line:5:3, col:14>     | `-VarDecl 0x147940b58 <col:3, col:13> col:7 used max 'int' cinit     |   `-IntegerLiteral 0x147940bc0 <col:13> 'int' 0     |-DeclStmt 0x147940c98 <line:6:3, col:13>     | `-VarDecl 0x147940c10 <col:3, col:12> col:7 used rv 'int' cinit     |   `-IntegerLiteral 0x147940c78 <col:12> 'int' 0     |-BinaryOperator 0x147940fc0 <line:11:3, col:17> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x147940f58 <col:3, col:8> '<dependent type>' contains-errors lvalue .tv_sec     | | `-RecoveryExpr 0x147940f30 <col:3> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x147940f10 <col:3> 'struct timeval' lvalue Var 0x147928448 'time' 'struct timeval'     | `-IntegerLiteral 0x147940fa0 <col:17> 'int' 0     |-BinaryOperator 0x147941090 <line:12:3, col:18> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x147941028 <col:3, col:8> '<dependent type>' contains-errors lvalue .tv_usec     | | `-RecoveryExpr 0x147941000 <col:3> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x147940fe0 <col:3> 'struct timeval' lvalue Var 0x147928448 'time' 'struct timeval'     | `-IntegerLiteral 0x147941070 <col:18> 'int' 0     |-CallExpr 0x147941240 <line:13:3, col:16> '<dependent type>' contains-errors     | |-DeclRefExpr 0x147941190 <col:3> 'int ()' Function 0x1479410d8 'FD_ZERO' 'int ()'     | `-UnaryOperator 0x147941228 <col:11, col:12> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x147941208 <col:12> '<dependent type>' contains-errors lvalue     |-IfStmt 0x147941648 <line:14:3, line:17:3>     | |-BinaryOperator 0x1479412c0 <line:14:7, col:14> 'int' '>'     | | |-ImplicitCastExpr 0x1479412a8 <col:7> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x147941268 <col:7> 'int' lvalue ParmVar 0x1479280d8 'sck1' 'int'     | | `-IntegerLiteral 0x147941288 <col:14> 'int' 0     | `-CompoundStmt 0x147941630 <line:15:3, line:17:3>     |   `-CallExpr 0x147941600 <line:16:5, col:39> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1479413c0 <col:5> 'int ()' Function 0x147941308 'FD_SET' 'int ()'     |     |-ParenExpr 0x1479415a8 <col:12, col:31> 'unsigned int'     |     | `-CStyleCastExpr 0x147941580 <col:13, col:27> 'unsigned int' <IntegralCast>     |     |   `-ImplicitCastExpr 0x147941568 <col:27> 'int' <LValueToRValue> part_of_explicit_cast     |     |     `-DeclRefExpr 0x1479413e0 <col:27> 'int' lvalue ParmVar 0x1479280d8 'sck1' 'int'     |     `-UnaryOperator 0x1479415e8 <col:34, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x1479415c8 <col:35> '<dependent type>' contains-errors lvalue     |-IfStmt 0x147941968 <line:18:3, line:21:3>     | |-BinaryOperator 0x1479416c0 <line:18:7, col:14> 'int' '>'     | | |-ImplicitCastExpr 0x1479416a8 <col:7> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x147941668 <col:7> 'int' lvalue ParmVar 0x147928158 'sck2' 'int'     | | `-IntegerLiteral 0x147941688 <col:14> 'int' 0     | `-CompoundStmt 0x147941950 <line:19:3, line:21:3>     |   `-CallExpr 0x147941920 <line:20:5, col:39> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1479416e0 <col:5> 'int ()' Function 0x147941308 'FD_SET' 'int ()'     |     |-ParenExpr 0x1479418c8 <col:12, col:31> 'unsigned int'     |     | `-CStyleCastExpr 0x1479418a0 <col:13, col:27> 'unsigned int' <IntegralCast>     |     |   `-ImplicitCastExpr 0x147941888 <col:27> 'int' <LValueToRValue> part_of_explicit_cast     |     |     `-DeclRefExpr 0x147941700 <col:27> 'int' lvalue ParmVar 0x147928158 'sck2' 'int'     |     `-UnaryOperator 0x147941908 <col:34, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x1479418e8 <col:35> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1479419e0 <line:22:3, col:9> 'int' '='     | |-DeclRefExpr 0x147941988 <col:3> 'int' lvalue Var 0x147940b58 'max' 'int'     | `-ImplicitCastExpr 0x1479419c8 <col:9> 'int' <LValueToRValue>     |   `-DeclRefExpr 0x1479419a8 <col:9> 'int' lvalue ParmVar 0x1479280d8 'sck1' 'int'     |-IfStmt 0x147944b20 <line:23:3, line:26:3>     | |-BinaryOperator 0x147944a70 <line:23:7, col:14> 'int' '>'     | | |-ImplicitCastExpr 0x147944a40 <col:7> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x147944a00 <col:7> 'int' lvalue ParmVar 0x147928158 'sck2' 'int'     | | `-ImplicitCastExpr 0x147944a58 <col:14> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x147944a20 <col:14> 'int' lvalue Var 0x147940b58 'max' 'int'     | `-CompoundStmt 0x147944b08 <line:24:3, line:26:3>     |   `-BinaryOperator 0x147944ae8 <line:25:5, col:11> 'int' '='     |     |-DeclRefExpr 0x147944a90 <col:5> 'int' lvalue Var 0x147940b58 'max' 'int'     |     `-ImplicitCastExpr 0x147944ad0 <col:11> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x147944ab0 <col:11> 'int' lvalue ParmVar 0x147928158 'sck2' 'int'     |-BinaryOperator 0x147944ed8 <line:27:3, col:42> 'int' contains-errors '='     | |-DeclRefExpr 0x147944b40 <col:3> 'int' lvalue Var 0x147940c10 'rv' 'int'     | `-CallExpr 0x147944e90 <col:8, col:42> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x147944c40 <col:8> 'int ()' Function 0x147944b88 'select' 'int ()'     |   |-BinaryOperator 0x147944e38 <col:15, col:21> 'int' '+'     |   | |-ImplicitCastExpr 0x147944e20 <col:15> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x147944c60 <col:15> 'int' lvalue Var 0x147940b58 'max' 'int'     |   | `-IntegerLiteral 0x147944c80 <col:21> 'int' 1     |   |-UnaryOperator 0x147944e78 <col:24, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x147944e58 <col:25> '<dependent type>' contains-errors lvalue     |   |-IntegerLiteral 0x147944d08 <col:31> 'int' 0     |   |-IntegerLiteral 0x147944d28 <col:34> 'int' 0     |   `-UnaryOperator 0x147944d68 <col:37, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x147944d48 <col:38> '<dependent type>' contains-errors lvalue     |-IfStmt 0x147945810 <line:28:3, line:43:3> has_else     | |-BinaryOperator 0x147944f50 <line:28:7, col:12> 'int' '>'     | | |-ImplicitCastExpr 0x147944f38 <col:7> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x147944ef8 <col:7> 'int' lvalue Var 0x147940c10 'rv' 'int'     | | `-IntegerLiteral 0x147944f18 <col:12> 'int' 0     | |-CompoundStmt 0x147945770 <line:29:3, line:39:3>     | | |-BinaryOperator 0x147944fb0 <line:30:5, col:10> 'int' '='     | | | |-DeclRefExpr 0x147944f70 <col:5> 'int' lvalue Var 0x147940c10 'rv' 'int'     | | | `-IntegerLiteral 0x147944f90 <col:10> 'int' 0     | | |-IfStmt 0x1479453f0 <line:31:5, line:34:5>     | | | |-CallExpr 0x1479452f0 <line:31:9, col:45> '<dependent type>' contains-errors     | | | | |-DeclRefExpr 0x1479450b0 <col:9> 'int ()' Function 0x147944ff8 'FD_ISSET' 'int ()'     | | | | |-ParenExpr 0x147945298 <col:18, col:37> 'unsigned int'     | | | | | `-CStyleCastExpr 0x147945270 <col:19, col:33> 'unsigned int' <IntegralCast>     | | | | |   `-ImplicitCastExpr 0x147945258 <col:33> 'int' <LValueToRValue> part_of_explicit_cast     | | | | |     `-DeclRefExpr 0x1479450d0 <col:33> 'int' lvalue ParmVar 0x1479280d8 'sck1' 'int'     | | | | `-UnaryOperator 0x1479452d8 <col:40, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | |   `-RecoveryExpr 0x1479452b8 <col:41> '<dependent type>' contains-errors lvalue     | | | `-CompoundStmt 0x1479453d8 <line:32:5, line:34:5>     | | |   `-BinaryOperator 0x1479453b8 <line:33:7, col:17> 'int' '='     | | |     |-DeclRefExpr 0x147945320 <col:7> 'int' lvalue Var 0x147940c10 'rv' 'int'     | | |     `-BinaryOperator 0x147945398 <col:12, col:17> 'int' '|'     | | |       |-ImplicitCastExpr 0x147945380 <col:12> 'int' <LValueToRValue>     | | |       | `-DeclRefExpr 0x147945340 <col:12> 'int' lvalue Var 0x147940c10 'rv' 'int'     | | |       `-IntegerLiteral 0x147945360 <col:17> 'int' 1     | | `-IfStmt 0x147945750 <line:35:5, line:38:5>     | |   |-CallExpr 0x147945650 <line:35:9, col:45> '<dependent type>' contains-errors     | |   | |-DeclRefExpr 0x147945410 <col:9> 'int ()' Function 0x147944ff8 'FD_ISSET' 'int ()'     | |   | |-ParenExpr 0x1479455f8 <col:18, col:37> 'unsigned int'     | |   | | `-CStyleCastExpr 0x1479455d0 <col:19, col:33> 'unsigned int' <IntegralCast>     | |   | |   `-ImplicitCastExpr 0x1479455b8 <col:33> 'int' <LValueToRValue> part_of_explicit_cast     | |   | |     `-DeclRefExpr 0x147945430 <col:33> 'int' lvalue ParmVar 0x147928158 'sck2' 'int'     | |   | `-UnaryOperator 0x147945638 <col:40, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   |   `-RecoveryExpr 0x147945618 <col:41> '<dependent type>' contains-errors lvalue     | |   `-CompoundStmt 0x147945738 <line:36:5, line:38:5>     | |     `-BinaryOperator 0x147945718 <line:37:7, col:17> 'int' '='     | |       |-DeclRefExpr 0x147945680 <col:7> 'int' lvalue Var 0x147940c10 'rv' 'int'     | |       `-BinaryOperator 0x1479456f8 <col:12, col:17> 'int' '|'     | |         |-ImplicitCastExpr 0x1479456e0 <col:12> 'int' <LValueToRValue>     | |         | `-DeclRefExpr 0x1479456a0 <col:12> 'int' lvalue Var 0x147940c10 'rv' 'int'     | |         `-IntegerLiteral 0x1479456c0 <col:17> 'int' 2     | `-CompoundStmt 0x1479457f8 <line:41:3, line:43:3>     |   `-BinaryOperator 0x1479457d8 <line:42:5, col:10> 'int' '='     |     |-DeclRefExpr 0x147945798 <col:5> 'int' lvalue Var 0x147940c10 'rv' 'int'     |     `-IntegerLiteral 0x1479457b8 <col:10> 'int' 0     `-ReturnStmt 0x147945878 <line:44:3, col:10>       `-ImplicitCastExpr 0x147945860 <col:10> 'int' <LValueToRValue>         `-DeclRefExpr 0x147945840 <col:10> 'int' lvalue Var 0x147940c10 'rv' 'int' ","20094":"`-FunctionDecl 0x14f128498  col:12 invalid linear_atX_p 'float (const float, const int, const int, const int)'   |-ParmVarDecl 0x14f1280f0 <col:25, col:37> col:37 fx 'const float'   |-ParmVarDecl 0x14f128170 <col:41, col:53> col:51 invalid y 'const int' cinit   | `-RecoveryExpr 0x14f1281f8 <col:52, col:53> 'const int' contains-errors   |   `-IntegerLiteral 0x14f1281d8 <col:53> 'int' 0   |-ParmVarDecl 0x14f128238 <col:56, col:68> col:66 invalid z 'const int' cinit   | `-RecoveryExpr 0x14f1282c0 <col:67, col:68> 'const int' contains-errors   |   `-IntegerLiteral 0x14f1282a0 <col:68> 'int' 0   `-ParmVarDecl 0x14f128300 <col:71, col:83> col:81 invalid c 'const int' cinit     `-RecoveryExpr 0x14f128388 <col:82, col:83> 'const int' contains-errors       `-IntegerLiteral 0x14f128368 <col:83> 'int' 0 ","19650":"`-FunctionDecl 0x123008fe8  line:1:12 invalid fuse_xattr_set 'int (const struct xattr_handler *, struct dentry *, struct inode *, const char *, const void *, int, int)' static   |-ParmVarDecl 0x122928648 <col:27, col:55> col:55 handler 'const struct xattr_handler *'   |-ParmVarDecl 0x123008a28 <line:2:6, col:21> col:21 dentry 'struct dentry *'   |-ParmVarDecl 0x123008bf8 <col:29, col:43> col:43 used inode 'struct inode *'   |-ParmVarDecl 0x123008c78 <line:3:6, col:18> col:18 used name 'const char *'   |-ParmVarDecl 0x123008d28 <col:24, col:36> col:36 used value 'const void *'   |-ParmVarDecl 0x123008dc0 <col:43, col:50> col:50 invalid size 'int'   |-ParmVarDecl 0x123008e40 <line:4:6, col:10> col:10 used flags 'int'   `-CompoundStmt 0x1230095a0 <line:5:1, line:10:1>     |-IfStmt 0x123009388 <line:6:2, line:7:38>     | |-UnaryOperator 0x123009100 <line:6:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1230090e8 <col:7> 'const void *' <LValueToRValue>     | |   `-DeclRefExpr 0x1230090c8 <col:7> 'const void *' lvalue ParmVar 0x123008d28 'value' 'const void *'     | `-ReturnStmt 0x123009378 <line:7:3, col:38>     |   `-CallExpr 0x123009318 <col:10, col:38> 'int'     |     |-ImplicitCastExpr 0x123009300 <col:10> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x123009270 <col:10> 'int ()' Function 0x1230091b8 'fuse_removexattr' 'int ()'     |     |-ImplicitCastExpr 0x123009348 <col:27> 'struct inode *' <LValueToRValue>     |     | `-DeclRefExpr 0x123009290 <col:27> 'struct inode *' lvalue ParmVar 0x123008bf8 'inode' 'struct inode *'     |     `-ImplicitCastExpr 0x123009360 <col:34> 'const char *' <LValueToRValue>     |       `-DeclRefExpr 0x1230092b0 <col:34> 'const char *' lvalue ParmVar 0x123008c78 'name' 'const char *'     `-ReturnStmt 0x123009590 <line:9:2, col:54>       `-CallExpr 0x123009548 <col:9, col:54> '<dependent type>' contains-errors         |-DeclRefExpr 0x123009488 <col:9> 'int ()' Function 0x1230093d0 'fuse_setxattr' 'int ()'         |-DeclRefExpr 0x1230094a8 <col:23> 'struct inode *' lvalue ParmVar 0x123008bf8 'inode' 'struct inode *'         |-DeclRefExpr 0x1230094c8 <col:30> 'const char *' lvalue ParmVar 0x123008c78 'name' 'const char *'         |-DeclRefExpr 0x1230094e8 <col:36> 'const void *' lvalue ParmVar 0x123008d28 'value' 'const void *'         |-RecoveryExpr 0x123009508 <col:43> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x123009528 <col:49> 'int' lvalue ParmVar 0x123008e40 'flags' 'int' ","19154":"`-FunctionDecl 0x1559099b0  col:2 implicit used vsnprintf 'int (char *, unsigned long, const char *, __builtin_va_list)' extern   |-ParmVarDecl 0x155909ab0 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x155909b18 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-ParmVarDecl 0x155909b80 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x155909be8 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'   |-BuiltinAttr 0x155909a58 <<invalid sloc>> Implicit 909   `-FormatAttr 0x155909c70 <col:2> Implicit printf 3 0 ","19790":"`-FunctionDecl 0x14280c770  col:2 implicit used strcpy 'char *(char *, const char *)' extern   |-ParmVarDecl 0x14280c870 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x14280c8d8 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x14280c818 <<invalid sloc>> Implicit 885 ","19942":"`-FunctionDecl 0x127140e98  line:1:1 invalid rsa_sec_decrypt 'int (const struct rsa_public_key *, const struct rsa_private_key *, void *, int *, int, int *, const int)'   |-ParmVarDecl 0x127128648 <col:17, col:46> col:46 used pub 'const struct rsa_public_key *'   |-ParmVarDecl 0x127140a28 <line:2:10, col:40> col:40 used key 'const struct rsa_private_key *'   |-ParmVarDecl 0x127140aa8 <line:3:10, col:16> col:16 used random_ctx 'void *'   |-ParmVarDecl 0x127140b78 <col:28, col:48> col:48 invalid random 'int *'   |-ParmVarDecl 0x127140bf8 <line:4:10, col:17> col:17 invalid length 'int'   |-ParmVarDecl 0x127140c78 <col:25, col:34> col:34 invalid message 'int *'   |-ParmVarDecl 0x127140cf8 <line:5:10, col:22> col:22 invalid gibberish 'const int'   `-CompoundStmt 0x1271435c8 <line:6:1, line:25:1>     |-CallExpr 0x127141190 <line:7:3, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1271410d0 <col:3> 'int ()' Function 0x127141018 'TMP_GMP_DECL' 'int ()'     | |-RecoveryExpr 0x127141150 <col:17> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x127141170 <col:20> '<dependent type>' contains-errors lvalue     |-CallExpr 0x127141280 <line:8:3, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1271411c0 <col:3> 'int ()' Function 0x127141018 'TMP_GMP_DECL' 'int ()'     | |-RecoveryExpr 0x127141240 <col:17> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x127141260 <col:21> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x127141330 <line:9:3, col:10>     | `-VarDecl 0x1271412c8 <col:3, col:7> col:7 used res 'int'     |-CallExpr 0x127141638 <line:11:3, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x127141428 <col:3> 'int ()' Function 0x127141370 'TMP_GMP_ALLOC' 'int ()'     | |-RecoveryExpr 0x127141618 <col:18> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x1271415c0 <col:21, col:36> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x127141540 <col:21> 'int ()' Function 0x127141488 'mpz_size' 'int ()'     |   `-RecoveryExpr 0x127141598 <col:30, col:35> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x127141560 <col:30> 'const struct rsa_public_key *' lvalue ParmVar 0x127128648 'pub' 'const struct rsa_public_key *'     |-CallExpr 0x127141750 <line:12:3, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x127141668 <col:3> 'int ()' Function 0x127141370 'TMP_GMP_ALLOC' 'int ()'     | |-RecoveryExpr 0x127141730 <col:18> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1271416d8 <col:22, col:27> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1271416a0 <col:22> 'const struct rsa_private_key *' lvalue ParmVar 0x127140a28 'key' 'const struct rsa_private_key *'     |-BinaryOperator 0x127143078 <line:14:3, line:16:26> 'int' contains-errors '='     | |-DeclRefExpr 0x127141780 <line:14:3> 'int' lvalue Var 0x1271412c8 'res' 'int'     | `-CallExpr 0x127143020 <col:9, line:16:26> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x127141880 <line:14:9> 'int ()' Function 0x1271417c8 '_rsa_sec_compute_root_tr' 'int ()'     |   |-DeclRefExpr 0x1271418a0 <col:35> 'const struct rsa_public_key *' lvalue ParmVar 0x127128648 'pub' 'const struct rsa_public_key *'     |   |-DeclRefExpr 0x1271418c0 <col:40> 'const struct rsa_private_key *' lvalue ParmVar 0x127140a28 'key' 'const struct rsa_private_key *'     |   |-DeclRefExpr 0x1271418e0 <col:45> 'void *' lvalue ParmVar 0x127140aa8 'random_ctx' 'void *'     |   |-RecoveryExpr 0x127141900 <col:57> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x127143000 <col:65> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x127142ef8 <line:15:7, col:31> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x127142eb8 <col:7> 'int ()' Function 0x127142e00 'mpz_limbs_read' 'int ()'     |   | `-RecoveryExpr 0x127142ed8 <col:22> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x127142f60 <line:16:7, col:25> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x127142f20 <col:7> 'int ()' Function 0x127141488 'mpz_size' 'int ()'     |     `-RecoveryExpr 0x127142f40 <col:16> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1271435b8 <line:24:3, col:10>       `-ImplicitCastExpr 0x1271435a0 <col:10> 'int' <LValueToRValue>         `-DeclRefExpr 0x127143580 <col:10> 'int' lvalue Var 0x1271412c8 'res' 'int' ","19861":"`-FunctionDecl 0x12600ddf8  line:1:1 invalid ex_doautoall 'int (int *)'   |-ParmVarDecl 0x12600dd28 <col:14, col:23> col:23 invalid eap 'int *'   `-CompoundStmt 0x127809600 <line:2:1, line:49:1>     |-DeclStmt 0x12600df60 <line:3:5, col:21>     | `-VarDecl 0x12600dec0 <col:5, col:19> col:10 used retval 'int' cinit     |   `-RecoveryExpr 0x12600df40 <col:19> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x12600e078 <line:7:5, col:27>     | `-VarDecl 0x12600dfa8 <col:5, col:24> col:13 used arg 'char *' cinit     |   `-CXXDependentScopeMemberExpr 0x12600e030 <col:19, col:24> '<dependent type>' contains-errors lvalue ->arg     |     `-RecoveryExpr 0x12600e010 <col:19> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x12600e370 <line:8:5, col:52>     | `-VarDecl 0x12600e0a8 <col:5, col:51> col:10 used call_do_modelines 'int' cinit     |   `-CallExpr 0x12600e348 <col:30, col:51> 'int' contains-errors     |     |-ImplicitCastExpr 0x12600e330 <col:30> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x12600e270 <col:30> 'int ()' Function 0x12600e1b8 'check_nomodeline' 'int ()'     |     `-UnaryOperator 0x12600e2e0 <col:47, col:48> 'char **' contains-errors prefix '&' cannot overflow     |       `-DeclRefExpr 0x12600e290 <col:48> 'char *' contains-errors lvalue Var 0x12600dfa8 'arg' 'char *'     |-DeclStmt 0x126027868 <line:9:5, col:19>     | `-VarDecl 0x126027800 <col:5, col:10> col:10 used did_aucmd 'int'     |-CallExpr 0x1260279e0 <line:12:5, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x126027960 <col:5> 'int ()' Function 0x1260278a8 'FOR_ALL_BUFFERS' 'int ()'     | `-RecoveryExpr 0x1260279c0 <col:21> '<dependent type>' contains-errors lvalue     |-CompoundStmt 0x1260285c0 <line:13:5, line:40:5>     | `-IfStmt 0x1260285a0 <line:15:2, line:39:2>     |   |-BinaryOperator 0x126027ca8 <line:15:6, col:41> 'int' contains-errors '&&'     |   | |-BinaryOperator 0x126027c28 <col:6, col:26> 'int' contains-errors '!='     |   | | |-CXXDependentScopeMemberExpr 0x126027bc0 <col:6, col:16> '<dependent type>' contains-errors lvalue .ml_mfp     |   | | | `-CXXDependentScopeMemberExpr 0x126027b78 <col:6, col:11> '<dependent type>' contains-errors lvalue ->b_ml     |   | | |   `-RecoveryExpr 0x126027b58 <col:6> '<dependent type>' contains-errors lvalue     |   | | `-RecoveryExpr 0x126027c08 <col:26> '<dependent type>' contains-errors lvalue     |   | `-BinaryOperator 0x126027c88 <col:34, col:41> 'int' contains-errors '!='     |   |   |-RecoveryExpr 0x126027c48 <col:34> '<dependent type>' contains-errors lvalue     |   |   `-RecoveryExpr 0x126027c68 <col:41> '<dependent type>' contains-errors lvalue     |   `-CompoundStmt 0x126028580 <line:16:2, line:39:2>     |     |-CallExpr 0x126027e98 <line:18:6, col:29> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x126027da8 <col:6> 'int ()' Function 0x126027cf0 'aucmd_prepbuf' 'int ()'     |     | |-UnaryOperator 0x126027e60 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | | `-RecoveryExpr 0x126027e40 <col:21> '<dependent type>' contains-errors lvalue     |     | `-RecoveryExpr 0x126027e78 <col:26> '<dependent type>' contains-errors lvalue     |     `-IfStmt 0x126028560 <line:34:6, line:38:6>     |       |-RecoveryExpr 0x126028510 <line:34:10, col:49> '_Bool' contains-errors     |       `-CompoundStmt 0x126028550 <line:35:6, line:38:6>     `-IfStmt 0x1260287d8 <line:43:5, line:48:5>       |-RecoveryExpr 0x1260285f8 <line:43:9, col:19> '_Bool' contains-errors       `-CompoundStmt 0x1260287c0 <line:44:5, line:48:5>         `-IfStmt 0x1260287a0 <line:46:2, line:47:20>           |-BinaryOperator 0x126028700 <line:46:6, col:27> 'int' contains-errors '&&'           | |-ImplicitCastExpr 0x1260286d0 <col:6> 'int' contains-errors <LValueToRValue>           | | `-DeclRefExpr 0x126028690 <col:6> 'int' contains-errors lvalue Var 0x12600e0a8 'call_do_modelines' 'int'           | `-ImplicitCastExpr 0x1260286e8 <col:27> 'int' <LValueToRValue>           |   `-DeclRefExpr 0x1260286b0 <col:27> 'int' lvalue Var 0x126027800 'did_aucmd' 'int'           `-CallExpr 0x126028778 <line:47:6, col:20> 'int'             |-ImplicitCastExpr 0x126028760 <col:6> 'int (*)()' <FunctionToPointerDecay>             | `-DeclRefExpr 0x126028720 <col:6> 'int ()' Function 0x1260281f8 'do_modelines' 'int ()'             `-IntegerLiteral 0x126028740 <col:19> 'int' 0 ","19876":"`-FunctionDecl 0x130928118  line:1:1 RefreshXtermOSC 'int ()'   `-CompoundStmt 0x130941140 <line:2:1, line:9:1>     |-DeclStmt 0x130928288 <line:3:3, col:8>     | `-VarDecl 0x130928220 <col:3, col:7> col:7 used i 'int'     |-DeclStmt 0x130928488 <line:4:3, col:16>     | |-RecordDecl 0x1309282a0 <col:3, col:10> col:10 struct win     | `-VarDecl 0x130928408 <col:3, col:15> col:15 used p 'struct win *'     |-BinaryOperator 0x130928710 <line:6:3, col:37> 'struct win *' contains-errors '='     | |-DeclRefExpr 0x1309284a0 <col:3> 'struct win *' lvalue Var 0x130928408 'p' 'struct win *'     | `-CallExpr 0x1309286e8 <col:7, col:37> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1309285b8 <col:7> 'int ()' Function 0x130928500 'Layer2Window' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x1309286a0 <col:20, col:30> '<dependent type>' contains-errors lvalue ->c_layer     |     `-RecoveryExpr 0x130928680 <col:20> '<dependent type>' contains-errors lvalue     `-ForStmt 0x130941108 <line:7:3, line:8:44>       |-BinaryOperator 0x130928770 <line:7:8, col:12> 'int' '='       | |-DeclRefExpr 0x130928730 <col:8> 'int' lvalue Var 0x130928220 'i' 'int'       | `-IntegerLiteral 0x130928750 <col:12> 'int' 3       |-<<<NULL>>>       |-BinaryOperator 0x130940a00 <col:15, col:19> 'int' '>='       | |-ImplicitCastExpr 0x1309287d0 <col:15> 'int' <LValueToRValue>       | | `-DeclRefExpr 0x130928790 <col:15> 'int' lvalue Var 0x130928220 'i' 'int'       | `-IntegerLiteral 0x1309287b0 <col:19> 'int' 0       |-UnaryOperator 0x130940a40 <col:22, col:23> 'int' postfix '--'       | `-DeclRefExpr 0x130940a20 <col:22> 'int' lvalue Var 0x130928220 'i' 'int'       `-CallExpr 0x1309410d8 <line:8:5, col:44> '<dependent type>' contains-errors         |-DeclRefExpr 0x130940b38 <col:5> 'int ()' Function 0x130940a80 'SetXtermOSC' 'int ()'         |-DeclRefExpr 0x130940b58 <col:17> 'int' lvalue Var 0x130928220 'i' 'int'         `-ConditionalOperator 0x1309410a8 <col:20, col:43> '<dependent type>' contains-errors           |-DeclRefExpr 0x130940b78 <col:20> 'struct win *' lvalue Var 0x130928408 'p' 'struct win *'           |-ArraySubscriptExpr 0x130941068 <col:24, col:39> '<dependent type>' contains-errors lvalue           | |-ImplicitCastExpr 0x130941038 <col:24, col:27> '<dependent type>' contains-errors <LValueToRValue>           | | `-RecoveryExpr 0x130940ff0 <col:24, col:27> '<dependent type>' contains-errors lvalue           | |   `-DeclRefExpr 0x130940b98 <col:24> 'struct win *' lvalue Var 0x130928408 'p' 'struct win *'           | `-ImplicitCastExpr 0x130941050 <col:38> 'int' <LValueToRValue>           |   `-DeclRefExpr 0x130941018 <col:38> 'int' lvalue Var 0x130928220 'i' 'int'           `-IntegerLiteral 0x130941088 <col:43> 'int' 0 ","20058":"`-FunctionDecl 0x14e940b48  line:1:12 netlbl_cipsov4_add_local 'int (struct genl_info *, struct netlbl_audit *)' static   |-ParmVarDecl 0x14e928648 <col:37, col:55> col:55 used info 'struct genl_info *'   |-ParmVarDecl 0x14e940a28 <line:2:9, col:30> col:30 used audit_info 'struct netlbl_audit *'   `-CompoundStmt 0x14e942a80 <line:3:1, line:27:1>     |-DeclStmt 0x14e940cc8 <line:4:2, col:13>     | `-VarDecl 0x14e940c60 <col:2, col:6> col:6 used ret_val 'int'     |-DeclStmt 0x14e940f18 <line:5:2, col:37>     | |-RecordDecl 0x14e940ce0 <col:2, col:9> col:9 struct cipso_v4_doi     | `-VarDecl 0x14e940e48 <col:2, col:33> col:23 used doi_def 'struct cipso_v4_doi *' cinit     |   `-RecoveryExpr 0x14e940ee0 <col:33> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14e941070 <line:7:2, line:8:11>     | |-RecoveryExpr 0x14e940fa8 <line:7:6, col:40> '_Bool' contains-errors     | `-ReturnStmt 0x14e941060 <line:8:3, col:11>     |   `-UnaryOperator 0x14e941048 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14e941030 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14e941010 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14e9413a8 <line:11:2, line:12:11>     | |-BinaryOperator 0x14e9412e0 <line:11:6, col:17> 'int' contains-errors '=='     | | |-DeclRefExpr 0x14e941268 <col:6> 'struct cipso_v4_doi *' contains-errors lvalue Var 0x14e940e48 'doi_def' 'struct cipso_v4_doi *'     | | `-RecoveryExpr 0x14e9412c0 <col:17> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14e941398 <line:12:3, col:11>     |   `-UnaryOperator 0x14e941380 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14e941368 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14e941348 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14e941480 <line:13:2, col:18> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14e941400 <col:2, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14e9413c8 <col:2> 'struct cipso_v4_doi *' contains-errors lvalue Var 0x14e940e48 'doi_def' 'struct cipso_v4_doi *'     | `-RecoveryExpr 0x14e941460 <col:18> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14e9416a8 <line:15:2, col:51> 'int' contains-errors '='     | |-DeclRefExpr 0x14e9414a0 <col:2> 'int' lvalue Var 0x14e940c60 'ret_val' 'int'     | `-CallExpr 0x14e941648 <col:12, col:51> 'int' contains-errors     |   |-ImplicitCastExpr 0x14e941630 <col:12> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14e9415a0 <col:12> 'int ()' Function 0x14e9414e8 'netlbl_cipsov4_add_common' 'int ()'     |   |-ImplicitCastExpr 0x14e941678 <col:38> 'struct genl_info *' <LValueToRValue>     |   | `-DeclRefExpr 0x14e9415c0 <col:38> 'struct genl_info *' lvalue ParmVar 0x14e928648 'info' 'struct genl_info *'     |   `-ImplicitCastExpr 0x14e941690 <col:44> 'struct cipso_v4_doi *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x14e9415e0 <col:44> 'struct cipso_v4_doi *' contains-errors lvalue Var 0x14e940e48 'doi_def' 'struct cipso_v4_doi *'     |-IfStmt 0x14e9417a8 <line:16:2, line:17:8>     | |-BinaryOperator 0x14e941720 <line:16:6, col:17> 'int' '!='     | | |-ImplicitCastExpr 0x14e941708 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x14e9416c8 <col:6> 'int' lvalue Var 0x14e940c60 'ret_val' 'int'     | | `-IntegerLiteral 0x14e9416e8 <col:17> 'int' 0     | `-GotoStmt 0x14e941790 <line:17:3, col:8> 'add_local_failure' 0x14e941740     |-BinaryOperator 0x14e9419a0 <line:19:2, col:48> 'int' contains-errors '='     | |-DeclRefExpr 0x14e9417c8 <col:2> 'int' lvalue Var 0x14e940c60 'ret_val' 'int'     | `-CallExpr 0x14e941940 <col:12, col:48> 'int' contains-errors     |   |-ImplicitCastExpr 0x14e941928 <col:12> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14e9418c8 <col:12> 'int ()' Function 0x14e941810 'cipso_v4_doi_add' 'int ()'     |   |-ImplicitCastExpr 0x14e941970 <col:29> 'struct cipso_v4_doi *' contains-errors <LValueToRValue>     |   | `-DeclRefExpr 0x14e9418e8 <col:29> 'struct cipso_v4_doi *' contains-errors lvalue Var 0x14e940e48 'doi_def' 'struct cipso_v4_doi *'     |   `-ImplicitCastExpr 0x14e941988 <col:38> 'struct netlbl_audit *' <LValueToRValue>     |     `-DeclRefExpr 0x14e941908 <col:38> 'struct netlbl_audit *' lvalue ParmVar 0x14e940a28 'audit_info' 'struct netlbl_audit *'     |-IfStmt 0x14e942850 <line:20:2, line:21:8>     | |-BinaryOperator 0x14e942818 <line:20:6, col:17> 'int' '!='     | | |-ImplicitCastExpr 0x14e942800 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x14e9419c0 <col:6> 'int' lvalue Var 0x14e940c60 'ret_val' 'int'     | | `-IntegerLiteral 0x14e9419e0 <col:17> 'int' 0     | `-GotoStmt 0x14e942838 <line:21:3, col:8> 'add_local_failure' 0x14e941740     |-ReturnStmt 0x14e942890 <line:22:2, col:9>     | `-IntegerLiteral 0x14e942870 <col:9> 'int' 0     |-LabelStmt 0x14e942a18 <line:24:1, line:25:27> 'add_local_failure'     | `-CallExpr 0x14e9429d8 <col:2, col:27> 'int' contains-errors     |   |-ImplicitCastExpr 0x14e9429c0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14e942980 <col:2> 'int ()' Function 0x14e9428c8 'cipso_v4_doi_free' 'int ()'     |   `-ImplicitCastExpr 0x14e942a00 <col:20> 'struct cipso_v4_doi *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x14e9429a0 <col:20> 'struct cipso_v4_doi *' contains-errors lvalue Var 0x14e940e48 'doi_def' 'struct cipso_v4_doi *'     `-ReturnStmt 0x14e942a70 <line:26:2, col:9>       `-ImplicitCastExpr 0x14e942a58 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x14e942a38 <col:9> 'int' lvalue Var 0x14e940c60 'ret_val' 'int' ","19867":"`-FunctionDecl 0x13a128c38  line:1:20 invalid gic_hyp_read 'int (void *, int, int, int *, int)' static   |-ParmVarDecl 0x13a1288f0 <col:33, col:39> col:39 used opaque 'void *'   |-ParmVarDecl 0x13a128970 <col:47, col:51> col:51 used cpu 'int'   |-ParmVarDecl 0x13a1289f0 <col:56, col:63> col:63 invalid addr 'int'   |-ParmVarDecl 0x13a128aa8 <line:2:33, col:43> col:43 invalid data 'int *'   |-ParmVarDecl 0x13a128b28 <col:49, col:60> col:60 invalid attrs 'int'   `-CompoundStmt 0x13a80a2d0 <line:3:1, line:67:1>     |-DeclStmt 0x13a142060 <line:5:5, col:30>     | `-VarDecl 0x13a128f60 <col:5, col:22> col:9 used vcpu 'int' cinit     |   `-BinaryOperator 0x13a142040 <col:16, col:22> '<dependent type>' contains-errors '+'     |     |-DeclRefExpr 0x13a128fc8 <col:16> 'int' lvalue ParmVar 0x13a128970 'cpu' 'int'     |     `-RecoveryExpr 0x13a142020 <col:22> '<dependent type>' contains-errors lvalue     |-SwitchStmt 0x13a1420b0 <line:7:5, line:63:5>     | |-ImplicitCastExpr 0x13a142098 <line:7:13> '<dependent type>' contains-errors <LValueToRValue>     | | `-RecoveryExpr 0x13a142078 <col:13> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13a80a0c8 <col:19, line:63:5>     |   |-BreakStmt 0x13a1421c0 <line:10:9>     |   |-BinaryOperator 0x13a1425e8 <line:13:9, col:65> '<dependent type>' contains-errors '='     |   | |-UnaryOperator 0x13a1424c8 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow     |   | | `-ImplicitCastExpr 0x13a1424b0 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |   | |   `-RecoveryExpr 0x13a1421e0 <col:10> '<dependent type>' contains-errors lvalue     |   | `-CallExpr 0x13a1425a8 <col:17, col:65> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x13a142310 <col:17> 'int ()' Function 0x13a142258 'FIELD_DP32' 'int ()'     |   |   |-IntegerLiteral 0x13a142330 <col:28> 'int' 0     |   |   |-RecoveryExpr 0x13a1424e0 <col:31> '<dependent type>' contains-errors lvalue     |   |   |-RecoveryExpr 0x13a142500 <col:41> '<dependent type>' contains-errors lvalue     |   |   `-BinaryOperator 0x13a142588 <col:51, col:64> '<dependent type>' contains-errors '-'     |   |     |-CXXDependentScopeMemberExpr 0x13a142540 <col:51, col:54> '<dependent type>' contains-errors lvalue ->num_lrs     |   |     | `-RecoveryExpr 0x13a142520 <col:51> '<dependent type>' contains-errors lvalue     |   |     `-IntegerLiteral 0x13a1423e0 <col:64> 'int' 1     |   |-BinaryOperator 0x13a142930 <line:14:9, line:15:60> '<dependent type>' contains-errors '='     |   | |-UnaryOperator 0x13a142828 <line:14:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow     |   | | `-ImplicitCastExpr 0x13a142810 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |   | |   `-RecoveryExpr 0x13a142608 <col:10> '<dependent type>' contains-errors lvalue     |   | `-CallExpr 0x13a1428f0 <col:17, line:15:60> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x13a142658 <line:14:17> 'int ()' Function 0x13a142258 'FIELD_DP32' 'int ()'     |   |   |-UnaryOperator 0x13a142858 <col:28, col:29> '<dependent type>' contains-errors prefix '*' cannot overflow     |   |   | `-ImplicitCastExpr 0x13a142840 <col:29> '<dependent type>' contains-errors <LValueToRValue>     |   |   |   `-RecoveryExpr 0x13a142678 <col:29> '<dependent type>' contains-errors lvalue     |   |   |-RecoveryExpr 0x13a142870 <col:35> '<dependent type>' contains-errors lvalue     |   |   |-RecoveryExpr 0x13a142890 <col:45> '<dependent type>' contains-errors lvalue     |   |   `-BinaryOperator 0x13a1428d0 <line:15:28, col:59> '<dependent type>' contains-errors '-'     |   |     |-RecoveryExpr 0x13a1428b0 <col:28> '<dependent type>' contains-errors lvalue     |   |     `-IntegerLiteral 0x13a142710 <col:59> 'int' 1     |   |-BreakStmt 0x13a142ae8 <line:18:9>     |   |-BreakStmt 0x13a142fe0 <line:27:9>     |   |-BreakStmt 0x13a809870 <line:31:9>     |   |-BreakStmt 0x13a809a28 <line:36:9>     |   |-BreakStmt 0x13a809be0 <line:41:9>     |   |-BreakStmt 0x13a809c58 <line:45:9>     |   |-CompoundStmt 0x13a809ef8 <line:48:5, line:57:5>     |   | |-DeclStmt 0x13a809d20 <line:49:9, col:45>     |   | | `-VarDecl 0x13a809c78 <col:9, col:13> col:13 used lr_idx 'int'     |   | |-IfStmt 0x13a809ec0 <line:51:9, line:55:9> has_else     |   | | |-RecoveryExpr 0x13a809d58 <line:51:13, col:25> '_Bool' contains-errors     |   | | |-CompoundStmt 0x13a809e08 <col:34, line:53:9>     |   | | | `-BinaryOperator 0x13a809de8 <line:52:13, col:21> '<dependent type>' contains-errors '='     |   | | |   |-UnaryOperator 0x13a809db0 <col:13, col:14> '<dependent type>' contains-errors prefix '*' cannot overflow     |   | | |   | `-ImplicitCastExpr 0x13a809d98 <col:14> '<dependent type>' contains-errors <LValueToRValue>     |   | | |   |   `-RecoveryExpr 0x13a809d78 <col:14> '<dependent type>' contains-errors lvalue     |   | | |   `-IntegerLiteral 0x13a809dc8 <col:21> 'int' 0     |   | | `-CompoundStmt 0x13a809eb0 <line:53:16, line:55:9>     |   | `-BreakStmt 0x13a809ef0 <line:56:9>     |   `-DefaultStmt 0x13a80a0a8 <line:59:5, col:12>     |     `-NullStmt 0x13a80a0a0 <col:12>     `-CallExpr 0x13a80a2a0 <line:65:5, col:35> '<dependent type>' contains-errors       |-DeclRefExpr 0x13a80a210 <col:5> 'int ()' Function 0x13a80a158 'trace_gic_hyp_read' 'int ()'       |-RecoveryExpr 0x13a80a230 <col:24> '<dependent type>' contains-errors lvalue       `-UnaryOperator 0x13a80a288 <col:30, col:31> '<dependent type>' contains-errors prefix '*' cannot overflow         `-ImplicitCastExpr 0x13a80a270 <col:31> '<dependent type>' contains-errors <LValueToRValue>           `-RecoveryExpr 0x13a80a250 <col:31> '<dependent type>' contains-errors lvalue ","19460":"`-FunctionDecl 0x130140a00  line:1:12 io_fadvise 'int (struct io_kiocb *, unsigned int)' static   |-ParmVarDecl 0x130128648 <col:23, col:40> col:40 used req 'struct io_kiocb *'   |-ParmVarDecl 0x1301286c8 <col:45, col:58> col:58 used issue_flags 'unsigned int'   `-CompoundStmt 0x130141898 <line:2:1, line:22:1>     |-DeclStmt 0x130140d60 <line:3:2, col:39>     | |-RecordDecl 0x130140b00 <col:2, col:9> col:9 struct io_fadvise     | `-VarDecl 0x130140c68 <col:2, col:32> col:21 used fa 'struct io_fadvise *' cinit     |   `-UnaryOperator 0x130140d30 <col:26, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x130140d08 <col:27, col:32> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x130140cd0 <col:27> 'struct io_kiocb *' lvalue ParmVar 0x130128648 'req' 'struct io_kiocb *'     |-DeclStmt 0x130140df8 <line:4:2, col:9>     | `-VarDecl 0x130140d90 <col:2, col:6> col:6 used ret 'int'     |-IfStmt 0x1301410b0 <line:6:2, line:15:2>     | |-BinaryOperator 0x130140ea0 <line:6:6, col:20> '<dependent type>' contains-errors '&'     | | |-DeclRefExpr 0x130140e10 <col:6> 'unsigned int' lvalue ParmVar 0x1301286c8 'issue_flags' 'unsigned int'     | | `-RecoveryExpr 0x130140e80 <col:20> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x130141098 <col:41, line:15:2>     |   `-SwitchStmt 0x130140f38 <line:7:3, line:14:3>     |     |-ImplicitCastExpr 0x130140f20 <line:7:11, col:15> '<dependent type>' contains-errors <LValueToRValue>     |     | `-RecoveryExpr 0x130140ef8 <col:11, col:15> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x130140ec0 <col:11> 'struct io_fadvise *' contains-errors lvalue Var 0x130140c68 'fa' 'struct io_fadvise *'     |     `-CompoundStmt 0x130141078 <col:23, line:14:3>     |       |-BreakStmt 0x130140fa8 <line:11:4>     |       `-DefaultStmt 0x130141058 <line:12:3, line:13:12>     |         `-ReturnStmt 0x130141048 <col:4, col:12>     |           `-UnaryOperator 0x130141030 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |             `-ImplicitCastExpr 0x130141018 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |               `-RecoveryExpr 0x130140ff8 <col:12> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1301413e0 <line:17:2, col:62> 'int' contains-errors '='     | |-DeclRefExpr 0x1301410d0 <col:2> 'int' lvalue Var 0x130140d90 'ret' 'int'     | `-CallExpr 0x1301413a0 <col:8, col:62> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x130141200 <col:8> 'int ()' Function 0x130141148 'vfs_fadvise' 'int ()'     |   |-RecoveryExpr 0x130141258 <col:20, col:25> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x130141220 <col:20> 'struct io_kiocb *' lvalue ParmVar 0x130128648 'req' 'struct io_kiocb *'     |   |-RecoveryExpr 0x1301412b8 <col:31, col:35> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x130141280 <col:31> 'struct io_fadvise *' contains-errors lvalue Var 0x130140c68 'fa' 'struct io_fadvise *'     |   |-RecoveryExpr 0x130141318 <col:43, col:47> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x1301412e0 <col:43> 'struct io_fadvise *' contains-errors lvalue Var 0x130140c68 'fa' 'struct io_fadvise *'     |   `-RecoveryExpr 0x130141378 <col:52, col:56> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x130141340 <col:52> 'struct io_fadvise *' contains-errors lvalue Var 0x130140c68 'fa' 'struct io_fadvise *'     |-IfStmt 0x130141628 <line:18:2, line:19:19>     | |-BinaryOperator 0x130141458 <line:18:6, col:12> 'int' '<'     | | |-ImplicitCastExpr 0x130141440 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x130141400 <col:6> 'int' lvalue Var 0x130140d90 'ret' 'int'     | | `-IntegerLiteral 0x130141420 <col:12> 'int' 0     | `-CallExpr 0x1301415e8 <line:19:3, col:19> 'int'     |   |-ImplicitCastExpr 0x1301415d0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x130141558 <col:3> 'int ()' Function 0x1301414a0 'req_set_fail' 'int ()'     |   `-ImplicitCastExpr 0x130141610 <col:16> 'struct io_kiocb *' <LValueToRValue>     |     `-DeclRefExpr 0x130141578 <col:16> 'struct io_kiocb *' lvalue ParmVar 0x130128648 'req' 'struct io_kiocb *'     |-CallExpr 0x1301417e0 <line:20:2, col:44> 'int'     | |-ImplicitCastExpr 0x1301417c8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x130141728 <col:2> 'int ()' Function 0x130141670 '__io_req_complete' 'int ()'     | |-ImplicitCastExpr 0x130141820 <col:20> 'struct io_kiocb *' <LValueToRValue>     | | `-DeclRefExpr 0x130141748 <col:20> 'struct io_kiocb *' lvalue ParmVar 0x130128648 'req' 'struct io_kiocb *'     | |-ImplicitCastExpr 0x130141838 <col:25> 'unsigned int' <LValueToRValue>     | | `-DeclRefExpr 0x130141768 <col:25> 'unsigned int' lvalue ParmVar 0x1301286c8 'issue_flags' 'unsigned int'     | |-ImplicitCastExpr 0x130141850 <col:38> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x130141788 <col:38> 'int' lvalue Var 0x130140d90 'ret' 'int'     | `-IntegerLiteral 0x1301417a8 <col:43> 'int' 0     `-ReturnStmt 0x130141888 <line:21:2, col:9>       `-IntegerLiteral 0x130141868 <col:9> 'int' 0 ","19994":"`-FunctionDecl 0x156140c70  line:1:13 trace 'void (struct kmem_cache *, struct page *, void *, int)' static   |-ParmVarDecl 0x156128648 <col:19, col:38> col:38 used s 'struct kmem_cache *'   |-ParmVarDecl 0x156140a28 <col:41, col:54> col:54 page 'struct page *'   |-ParmVarDecl 0x156140aa8 <col:60, col:66> col:66 used object 'void *'   |-ParmVarDecl 0x156140b28 <col:74, col:78> col:78 used alloc 'int'   `-CompoundStmt 0x156141448 <line:2:1, line:15:1>     `-IfStmt 0x156141428 <line:3:2, line:14:2>       |-BinaryOperator 0x156140e50 <line:3:6, col:17> '<dependent type>' contains-errors '&'       | |-RecoveryExpr 0x156140db8 <col:6, col:9> '<dependent type>' contains-errors lvalue       | | `-DeclRefExpr 0x156140d80 <col:6> 'struct kmem_cache *' lvalue ParmVar 0x156128648 's' 'struct kmem_cache *'       | `-RecoveryExpr 0x156140e30 <col:17> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x156141408 <col:29, line:14:2>         |-IfStmt 0x156141280 <line:10:3, line:11:51>         | |-UnaryOperator 0x156140ff0 <line:10:7, col:8> 'int' prefix '!' cannot overflow         | | `-ImplicitCastExpr 0x156140fd8 <col:8> 'int' <LValueToRValue>         | |   `-DeclRefExpr 0x156140fb8 <col:8> 'int' lvalue ParmVar 0x156140b28 'alloc' 'int'         | `-CallExpr 0x156141248 <line:11:4, col:51> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x1561410e8 <col:4> 'int ()' Function 0x156141030 'print_section' 'int ()'         |   |-StringLiteral 0x156141150 <col:18> 'char[4]' lvalue \"STR\"         |   |-CStyleCastExpr 0x1561411c0 <col:25, col:33> 'void *' <NoOp>         |   | `-ImplicitCastExpr 0x1561411a8 <col:33> 'void *' <LValueToRValue> part_of_explicit_cast         |   |   `-DeclRefExpr 0x156141170 <col:33> 'void *' lvalue ParmVar 0x156140aa8 'object' 'void *'         |   `-RecoveryExpr 0x156141220 <col:41, col:44> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x1561411e8 <col:41> 'struct kmem_cache *' lvalue ParmVar 0x156128648 's' 'struct kmem_cache *'         `-CallExpr 0x1561413e8 <line:13:3, col:14> 'int'           `-ImplicitCastExpr 0x1561413d0 <col:3> 'int (*)()' <FunctionToPointerDecay>             `-DeclRefExpr 0x156141380 <col:3> 'int ()' Function 0x1561412c8 'dump_stack' 'int ()' ","19089":"`-FunctionDecl 0x1538095f0  col:16 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x1538096f0 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x153809758 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x153809698 <<invalid sloc>> Implicit 887 ","20071":"`-FunctionDecl 0x16004f450  line:1:13 invalid check_image 'void (int, int)' static   |-ParmVarDecl 0x16004f2d8 <col:25, col:29> col:29 pageno 'int'   |-ParmVarDecl 0x16004f370 <col:37, col:54> col:54 invalid page 'int'   `-CompoundStmt 0x16004f570 <line:2:1, line:7:1> ","19410":"`-FunctionDecl 0x13700ddc8  line:2:1 invalid do_set_mallopt_check 'int (int)'   |-ParmVarDecl 0x13700dcf0 <col:23, col:31> col:31 invalid value 'int'   `-CompoundStmt 0x13700dea8 <line:3:1, line:4:12>     `-ReturnStmt 0x13700de98 <col:3, col:10>       `-IntegerLiteral 0x13700de78 <col:10> 'int' 1 ","19960":"`-FunctionDecl 0x151940a88  line:1:1 ext4_xattr_check_entries 'int (struct ext4_xattr_entry *, void *, void *)'   |-ParmVarDecl 0x151928648 <col:26, col:51> col:51 used entry 'struct ext4_xattr_entry *'   |-ParmVarDecl 0x1519286c8 <col:58, col:64> col:64 used end 'void *'   |-ParmVarDecl 0x151928748 <line:2:5, col:11> col:11 used value_start 'void *'   `-CompoundStmt 0x151943ee0 <line:3:1, line:38:1>     |-DeclStmt 0x151940cb8 <line:4:2, col:36>     | `-VarDecl 0x151940c18 <col:2, col:31> col:27 used e 'struct ext4_xattr_entry *' cinit     |   `-ImplicitCastExpr 0x151940ca0 <col:31> 'struct ext4_xattr_entry *' <LValueToRValue>     |     `-DeclRefExpr 0x151940c80 <col:31> 'struct ext4_xattr_entry *' lvalue ParmVar 0x151928648 'entry' 'struct ext4_xattr_entry *'     |-WhileStmt 0x151941350 <line:7:2, line:12:2>     | |-UnaryOperator 0x151940ec8 <line:7:9, col:25> 'int' prefix '!' cannot overflow     | | `-CallExpr 0x151940e88 <col:10, col:25> 'int'     | |   |-ImplicitCastExpr 0x151940e70 <col:10> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x151940e00 <col:10> 'int ()' Function 0x151940d48 'IS_LAST_ENTRY' 'int ()'     | |   `-ImplicitCastExpr 0x151940eb0 <col:24> 'struct ext4_xattr_entry *' <LValueToRValue>     | |     `-DeclRefExpr 0x151940e20 <col:24> 'struct ext4_xattr_entry *' lvalue Var 0x151940c18 'e' 'struct ext4_xattr_entry *'     | `-CompoundStmt 0x151941328 <col:28, line:12:2>     |   |-DeclStmt 0x151941100 <line:8:3, col:53>     |   | `-VarDecl 0x151940f08 <col:3, col:52> col:28 used next 'struct ext4_xattr_entry *' cinit     |   |   `-ImplicitCastExpr 0x1519410e8 <col:35, col:52> 'struct ext4_xattr_entry *' <IntegralToPointer>     |   |     `-CallExpr 0x1519410a8 <col:35, col:52> 'int'     |   |       |-ImplicitCastExpr 0x151941090 <col:35> 'int (*)()' <FunctionToPointerDecay>     |   |       | `-DeclRefExpr 0x151941050 <col:35> 'int ()' Function 0x151940f98 'EXT4_XATTR_NEXT' 'int ()'     |   |       `-ImplicitCastExpr 0x1519410d0 <col:51> 'struct ext4_xattr_entry *' <LValueToRValue>     |   |         `-DeclRefExpr 0x151941070 <col:51> 'struct ext4_xattr_entry *' lvalue Var 0x151940c18 'e' 'struct ext4_xattr_entry *'     |   |-IfStmt 0x151941290 <line:9:3, line:10:12>     |   | |-BinaryOperator 0x1519411c8 <line:9:7, col:23> 'int' '>='     |   | | |-CStyleCastExpr 0x151941168 <col:7, col:15> 'void *' <BitCast>     |   | | | `-ImplicitCastExpr 0x151941150 <col:15> 'struct ext4_xattr_entry *' <LValueToRValue> part_of_explicit_cast     |   | | |   `-DeclRefExpr 0x151941118 <col:15> 'struct ext4_xattr_entry *' lvalue Var 0x151940f08 'next' 'struct ext4_xattr_entry *'     |   | | `-ImplicitCastExpr 0x1519411b0 <col:23> 'void *' <LValueToRValue>     |   | |   `-DeclRefExpr 0x151941190 <col:23> 'void *' lvalue ParmVar 0x1519286c8 'end' 'void *'     |   | `-ReturnStmt 0x151941280 <line:10:4, col:12>     |   |   `-UnaryOperator 0x151941268 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |     `-ImplicitCastExpr 0x151941250 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |   |       `-RecoveryExpr 0x151941230 <col:12> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x151941308 <line:11:3, col:7> 'struct ext4_xattr_entry *' '='     |     |-DeclRefExpr 0x1519412b0 <col:3> 'struct ext4_xattr_entry *' lvalue Var 0x151940c18 'e' 'struct ext4_xattr_entry *'     |     `-ImplicitCastExpr 0x1519412f0 <col:7> 'struct ext4_xattr_entry *' <LValueToRValue>     |       `-DeclRefExpr 0x1519412d0 <col:7> 'struct ext4_xattr_entry *' lvalue Var 0x151940f08 'next' 'struct ext4_xattr_entry *'     |-WhileStmt 0x151943e90 <line:15:2, line:35:2>     | |-UnaryOperator 0x151941408 <line:15:9, col:29> 'int' prefix '!' cannot overflow     | | `-CallExpr 0x1519413c8 <col:10, col:29> 'int'     | |   |-ImplicitCastExpr 0x1519413b0 <col:10> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x151941370 <col:10> 'int ()' Function 0x151940d48 'IS_LAST_ENTRY' 'int ()'     | |   `-ImplicitCastExpr 0x1519413f0 <col:24> 'struct ext4_xattr_entry *' <LValueToRValue>     | |     `-DeclRefExpr 0x151941390 <col:24> 'struct ext4_xattr_entry *' lvalue ParmVar 0x151928648 'entry' 'struct ext4_xattr_entry *'     | `-CompoundStmt 0x151943e68 <col:32, line:35:2>     |   |-IfStmt 0x151941578 <line:18:3, line:19:12>     |   | |-BinaryOperator 0x1519414b0 <line:18:7, col:14> 'int' contains-errors '>'     |   | | |-RecoveryExpr 0x151941470 <col:7> '<dependent type>' contains-errors lvalue     |   | | `-RecoveryExpr 0x151941490 <col:14> '<dependent type>' contains-errors lvalue     |   | `-ReturnStmt 0x151941568 <line:19:4, col:12>     |   |   `-UnaryOperator 0x151941550 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |     `-ImplicitCastExpr 0x151941538 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |   |       `-RecoveryExpr 0x151941518 <col:12> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x151943d58 <line:21:3, line:33:3>     |   | |-BinaryOperator 0x1519416f0 <line:21:7, col:43> 'int' contains-errors '&&'     |   | | |-BinaryOperator 0x1519416d0 <col:7, col:15> 'int' contains-errors '!='     |   | | | |-RecoveryExpr 0x1519416b0 <col:7> '<dependent type>' contains-errors lvalue     |   | | | `-IntegerLiteral 0x1519415b0 <col:15> 'int' 0     |   | | `-BinaryOperator 0x151941670 <col:20, col:43> 'int' contains-errors '=='     |   | |   |-RecoveryExpr 0x151941628 <col:20, col:27> '<dependent type>' contains-errors lvalue     |   | |   | `-DeclRefExpr 0x1519415f0 <col:20> 'struct ext4_xattr_entry *' lvalue ParmVar 0x151928648 'entry' 'struct ext4_xattr_entry *'     |   | |   `-IntegerLiteral 0x151941650 <col:43> 'int' 0     |   | `-CompoundStmt 0x151943d28 <col:46, line:33:3>     |   |   |-DeclStmt 0x151941790 <line:23:4, col:15>     |   |   | `-VarDecl 0x151941728 <col:4, col:10> col:10 used value 'void *'     |   |   |-IfStmt 0x1519419a8 <line:26:4, line:27:13>     |   |   | |-BinaryOperator 0x1519418e0 <line:26:8, col:21> 'int' contains-errors '>'     |   |   | | |-RecoveryExpr 0x151941870 <col:8> '<dependent type>' contains-errors lvalue     |   |   | | `-BinaryOperator 0x1519418c0 <col:15, col:21> 'long' '-'     |   |   | |   |-ImplicitCastExpr 0x151941890 <col:15> 'void *' <LValueToRValue>     |   |   | |   | `-DeclRefExpr 0x1519417c0 <col:15> 'void *' lvalue ParmVar 0x1519286c8 'end' 'void *'     |   |   | |   `-ImplicitCastExpr 0x1519418a8 <col:21> 'void *' <LValueToRValue>     |   |   | |     `-DeclRefExpr 0x1519417e0 <col:21> 'void *' lvalue ParmVar 0x151928748 'value_start' 'void *'     |   |   | `-ReturnStmt 0x151941998 <line:27:5, col:13>     |   |   |   `-UnaryOperator 0x151941980 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   |     `-ImplicitCastExpr 0x151941968 <col:13> '<dependent type>' contains-errors <LValueToRValue>     |   |   |       `-RecoveryExpr 0x151941948 <col:13> '<dependent type>' contains-errors lvalue     |   |   |-BinaryOperator 0x1519438b8 <line:28:4, col:26> 'void *' contains-errors '='     |   |   | |-DeclRefExpr 0x1519419c8 <col:4> 'void *' lvalue Var 0x151941728 'value' 'void *'     |   |   | `-BinaryOperator 0x151943898 <col:12, col:26> '<dependent type>' contains-errors '+'     |   |   |   |-DeclRefExpr 0x151943800 <col:12> 'void *' lvalue ParmVar 0x151928748 'value_start' 'void *'     |   |   |   `-RecoveryExpr 0x151943878 <col:26> '<dependent type>' contains-errors lvalue     |   |   `-IfStmt 0x151943d08 <line:29:4, line:32:13>     |   |     |-RecoveryExpr 0x151943c40 <line:29:8, line:31:38> '_Bool' contains-errors     |   |     `-ReturnStmt 0x151943cf8 <line:32:5, col:13>     |   |       `-UnaryOperator 0x151943ce0 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |         `-ImplicitCastExpr 0x151943cc8 <col:13> '<dependent type>' contains-errors <LValueToRValue>     |   |           `-RecoveryExpr 0x151943ca8 <col:13> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x151943e48 <line:34:3, col:32> 'struct ext4_xattr_entry *' '='     |     |-DeclRefExpr 0x151943d78 <col:3> 'struct ext4_xattr_entry *' lvalue ParmVar 0x151928648 'entry' 'struct ext4_xattr_entry *'     |     `-ImplicitCastExpr 0x151943e30 <col:11, col:32> 'struct ext4_xattr_entry *' <IntegralToPointer>     |       `-CallExpr 0x151943df0 <col:11, col:32> 'int'     |         |-ImplicitCastExpr 0x151943dd8 <col:11> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x151943d98 <col:11> 'int ()' Function 0x151940f98 'EXT4_XATTR_NEXT' 'int ()'     |         `-ImplicitCastExpr 0x151943e18 <col:27> 'struct ext4_xattr_entry *' <LValueToRValue>     |           `-DeclRefExpr 0x151943db8 <col:27> 'struct ext4_xattr_entry *' lvalue ParmVar 0x151928648 'entry' 'struct ext4_xattr_entry *'     `-ReturnStmt 0x151943ed0 <line:37:2, col:9>       `-IntegerLiteral 0x151943eb0 <col:9> 'int' 0 ","19863":"`-FunctionDecl 0x12d00df58  line:1:1 invalid TPMI_RH_ACT_Unmarshal 'int (int *, int **, int *)'   |-ParmVarDecl 0x12d00dd28 <col:24, col:37> col:37 invalid target 'int *'   |-ParmVarDecl 0x12d00dde0 <col:45, col:52> col:52 invalid buffer 'int **'   |-ParmVarDecl 0x12d00de60 <col:60, col:67> col:67 invalid size 'int *'   `-CompoundStmt 0x12d0275f8 <line:2:1, line:17:1>     |-IfStmt 0x12d00e2e8 <line:6:5, line:8:5>     | |-BinaryOperator 0x12d00e0a8 <line:6:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x12d00e068 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12d00e088 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12d00e2d8 <col:31, line:8:5>     |-IfStmt 0x12d027590 <line:9:5, line:15:5>     | |-BinaryOperator 0x12d00e398 <line:9:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x12d00e358 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12d00e378 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12d027578 <col:31, line:15:5>     |   `-IfStmt 0x12d027558 <line:11:2, line:14:2>     |     |-RecoveryExpr 0x12d00e3d0 <line:11:6> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x12d027540 <col:16, line:14:2>     |       `-BinaryOperator 0x12d027520 <line:13:6, col:16> '<dependent type>' contains-errors '='     |         |-UnaryOperator 0x12d0274e8 <col:6, col:7> '<dependent type>' contains-errors prefix '*' cannot overflow     |         | `-ImplicitCastExpr 0x12d0274d0 <col:7> '<dependent type>' contains-errors <LValueToRValue>     |         |   `-RecoveryExpr 0x12d027418 <col:7> '<dependent type>' contains-errors lvalue     |         `-RecoveryExpr 0x12d027500 <col:16> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12d0275e8 <line:16:5, col:12>       `-RecoveryExpr 0x12d0275c8 <col:12> '<dependent type>' contains-errors lvalue ","20078":"`-FunctionDecl 0x15000de88  line:1:1 invalid f_readblob 'int (int *, int *)'   |-ParmVarDecl 0x15000dd28 <col:12, col:22> col:22 invalid argvars 'int *'   |-ParmVarDecl 0x15000dda8 <col:31, col:41> col:41 invalid rettv 'int *'   `-CompoundStmt 0x1479227e8 <line:2:1, line:7:1>     |-IfStmt 0x15000e3d0 <line:3:5, line:4:2>     | |-BinaryOperator 0x15000e3a0 <line:3:9, col:64> 'int' contains-errors '&&'     | | |-CallExpr 0x15000e340 <col:9, col:23> 'int'     | | | `-ImplicitCastExpr 0x15000e328 <col:9> 'int (*)()' <FunctionToPointerDecay>     | | |   `-DeclRefExpr 0x15000e0a0 <col:9> 'int ()' Function 0x15000dfe8 'in_vim9script' 'int ()'     | | `-BinaryOperator 0x15000e380 <col:28, col:64> 'int' contains-errors '=='     | |   |-CallExpr 0x15000e268 <col:28, col:59> '<dependent type>' contains-errors     | |   | |-DeclRefExpr 0x15000e208 <col:28> 'int ()' Function 0x15000e150 'check_for_string_arg' 'int ()'     | |   | |-RecoveryExpr 0x15000e228 <col:49> '<dependent type>' contains-errors lvalue     | |   | `-IntegerLiteral 0x15000e248 <col:58> 'int' 0     | |   `-RecoveryExpr 0x15000e360 <col:64> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x15000e3c0 <line:4:2>     `-CallExpr 0x1479227b0 <line:6:5, col:43> '<dependent type>' contains-errors       |-DeclRefExpr 0x1479226e0 <col:5> 'int ()' Function 0x147922628 'read_file_or_blob' 'int ()'       |-RecoveryExpr 0x147922700 <col:23> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x147922720 <col:32> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x147922790 <col:39> '<dependent type>' contains-errors lvalue ","19461":"`-FunctionDecl 0x1279441d8  col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x1279442d8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x127944340 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x1279443a8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x127944280 <<invalid sloc>> Implicit 882 ","19309":"`-FunctionDecl 0x122128280  line:1:13 referenced invalid serialize_plist 'void (int *, void *)' static   |-ParmVarDecl 0x122128128 <col:29, col:37> col:37 invalid node 'int *'   |-ParmVarDecl 0x1221281a8 <col:43, col:49> col:49 used data 'void *'   `-CompoundStmt 0x1221441a8 <line:2:1, line:32:1>     |-DeclStmt 0x122128640 <line:4:5, col:58>     | |-RecordDecl 0x122128368 <col:5, col:12> col:12 struct serialize_s     | `-VarDecl 0x1221284d8 <col:5, col:54> col:25 used ser 'struct serialize_s *' cinit     |   `-CStyleCastExpr 0x122128600 <col:31, col:54> 'struct serialize_s *' <BitCast>     |     `-ImplicitCastExpr 0x1221285e8 <col:54> 'void *' <LValueToRValue> part_of_explicit_cast     |       `-DeclRefExpr 0x122128540 <col:54> 'void *' lvalue ParmVar 0x1221281a8 'data' 'void *'     |-DeclStmt 0x122142da8 <line:8:5, col:56>     | `-VarDecl 0x122128670 <col:5, col:55> col:11 used val 'void *' cinit     |   `-CallExpr 0x122142d78 <col:17, col:55> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1221428b8 <col:17> 'int ()' Function 0x122142800 'hash_table_lookup' 'int ()'     |     |-RecoveryExpr 0x122142d30 <col:35, col:40> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x1221428d8 <col:35> 'struct serialize_s *' lvalue Var 0x1221284d8 'ser' 'struct serialize_s *'     |     `-RecoveryExpr 0x122142d58 <col:51> '<dependent type>' contains-errors lvalue     |-IfStmt 0x122142e20 <line:9:5, line:13:5>     | |-ImplicitCastExpr 0x122142de0 <line:9:9> 'void *' contains-errors <LValueToRValue>     | | `-DeclRefExpr 0x122142dc0 <col:9> 'void *' contains-errors lvalue Var 0x122128670 'val' 'void *'     | `-CompoundStmt 0x122142e08 <line:10:5, line:13:5>     |   `-ReturnStmt 0x122142df8 <line:12:9>     |-CallExpr 0x122143030 <line:16:5, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x122142f38 <col:5> 'int ()' Function 0x122142e80 'assert' 'int ()'     | `-BinaryOperator 0x122143010 <col:12, col:25> 'int' contains-errors '!='     |   |-RecoveryExpr 0x122142fd0 <col:12> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x122142ff0 <col:25> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x122143148 <line:17:5, col:18> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x122143110 <col:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x1221430f8 <col:6> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x1221430d8 <col:6> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x122143128 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x122143358 <line:18:5, col:54> '<dependent type>' contains-errors     | |-DeclRefExpr 0x122143248 <col:5> 'int ()' Function 0x122143190 'hash_table_insert' 'int ()'     | |-RecoveryExpr 0x1221432a0 <col:23, col:28> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x122143268 <col:23> 'struct serialize_s *' lvalue Var 0x1221284d8 'ser' 'struct serialize_s *'     | |-RecoveryExpr 0x1221432c8 <col:39> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x122143338 <col:45> '<dependent type>' contains-errors lvalue     |-CallExpr 0x122143510 <line:21:5, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x122143470 <col:5> 'int ()' Function 0x1221433b8 'ptr_array_add' 'int ()'     | |-RecoveryExpr 0x1221434c8 <col:19, col:24> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x122143490 <col:19> 'struct serialize_s *' lvalue Var 0x1221284d8 'ser' 'struct serialize_s *'     | `-RecoveryExpr 0x1221434f0 <col:33> '<dependent type>' contains-errors lvalue     |-WhileStmt 0x122144078 <line:26:5, line:28:5>     | |-RecoveryExpr 0x1221437d0 <line:26:12, col:40> '_Bool' contains-errors     | `-CompoundStmt 0x122144068 <col:43, line:28:5>     `-ReturnStmt 0x122144198 <line:31:5> ","20082":"`-FunctionDecl 0x11f9284c8  line:1:1 invalid proxy_C_SignEncryptUpdate 'int (int *, int, int, int, int, int)'   |-ParmVarDecl 0x11f928128 <col:28, col:48> col:48 invalid self 'int *'   |-ParmVarDecl 0x11f9281a8 <line:2:28, col:46> col:46 invalid handle 'int'   |-ParmVarDecl 0x11f928228 <line:3:28, col:40> col:40 invalid part 'int'   |-ParmVarDecl 0x11f9282a8 <line:4:28, col:37> col:37 invalid part_len 'int'   |-ParmVarDecl 0x11f928328 <line:5:28, col:40> col:40 invalid enc_part 'int'   |-ParmVarDecl 0x11f9283a8 <line:6:28, col:41> col:41 invalid enc_part_len 'int'   `-CompoundStmt 0x11f9419c0 <line:7:1, line:16:1> ","20065":"`-FunctionDecl 0x13d128bc8  line:1:1 invalid ProcXkbLatchLockState 'int (int)'   |-ParmVarDecl 0x13d128af0 <col:23, col:33> col:33 invalid client 'int'   `-CompoundStmt 0x13d143610 <line:2:1, line:66:1>     |-DeclStmt 0x13d128cf8 <line:3:5, col:15>     | `-VarDecl 0x13d128c90 <col:5, col:9> col:9 used status 'int'     |-CallExpr 0x13d128ef0 <line:10:5, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d128e70 <col:5> 'int ()' Function 0x13d128db8 'REQUEST' 'int ()'     | `-RecoveryExpr 0x13d128ed0 <col:13> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13d129078 <line:11:5, col:44> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d128ff8 <col:5> 'int ()' Function 0x13d128f40 'REQUEST_SIZE_MATCH' 'int ()'     | `-RecoveryExpr 0x13d129058 <col:24> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13d1291a8 <line:13:5, line:14:16>     | |-RecoveryExpr 0x13d129140 <line:13:9, col:57> '_Bool' contains-errors     | `-ReturnStmt 0x13d129198 <line:14:9, col:16>     |   `-RecoveryExpr 0x13d129178 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13d142470 <line:16:5, col:68> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d1422b8 <col:5> 'int ()' Function 0x13d142200 'CHK_KBD_DEVICE' 'int ()'     | |-RecoveryExpr 0x13d1423c8 <col:20> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x13d142408 <col:25, col:32> '<dependent type>' contains-errors lvalue ->deviceSpec     | | `-RecoveryExpr 0x13d1423e8 <col:25> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x13d142350 <col:44> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x13d142450 <col:52> '<dependent type>' contains-errors lvalue     `-CallExpr 0x13d142798 <line:17:5, col:64> '<dependent type>' contains-errors       |-DeclRefExpr 0x13d142590 <col:5> 'int ()' Function 0x13d1424d8 'CHK_MASK_MATCH' 'int ()'       |-IntegerLiteral 0x13d1425b0 <col:20> 'int' 1       |-CXXDependentScopeMemberExpr 0x13d1426e8 <col:26, col:33> '<dependent type>' contains-errors lvalue ->affectModLocks       | `-RecoveryExpr 0x13d1426c8 <col:26> '<dependent type>' contains-errors lvalue       `-CXXDependentScopeMemberExpr 0x13d142750 <col:49, col:56> '<dependent type>' contains-errors lvalue ->modLocks         `-RecoveryExpr 0x13d142730 <col:49> '<dependent type>' contains-errors lvalue ","19608":"`-FunctionDecl 0x14c008348  line:1:5 kvm_arch_vcpu_ioctl_run 'int (struct kvm_vcpu *, struct kvm_run *)'   |-ParmVarDecl 0x14b928648 <col:29, col:46> col:46 used vcpu 'struct kvm_vcpu *'   |-ParmVarDecl 0x14c008228 <col:52, col:68> col:68 used run 'struct kvm_run *'   `-CompoundStmt 0x14b942398 <line:2:1, line:77:1>     |-DeclStmt 0x14c0084c8 <line:3:2, col:9>     | `-VarDecl 0x14c008460 <col:2, col:6> col:6 used ret 'int'     |-IfStmt 0x14c0087e8 <line:7:2, line:8:11>     | |-CallExpr 0x14c008718 <line:7:6, col:36> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14c008610 <col:6> 'int ()' Function 0x14c008558 'unlikely' 'int ()'     | | `-BinaryOperator 0x14c0086f8 <col:15, col:35> 'int' contains-errors '<'     | |   |-CXXDependentScopeMemberExpr 0x14c008690 <col:15, col:26> '<dependent type>' contains-errors lvalue .target     | |   | `-RecoveryExpr 0x14c008668 <col:15, col:21> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x14c008630 <col:15> 'struct kvm_vcpu *' lvalue ParmVar 0x14b928648 'vcpu' 'struct kvm_vcpu *'     | |   `-IntegerLiteral 0x14c0086d8 <col:35> 'int' 0     | `-ReturnStmt 0x14c0087d8 <line:8:3, col:11>     |   `-UnaryOperator 0x14c0087c0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14c0087a8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14c008788 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14c0089d8 <line:10:2, col:36> 'int' '='     | |-DeclRefExpr 0x14c008808 <col:2> 'int' lvalue Var 0x14c008460 'ret' 'int'     | `-CallExpr 0x14c008998 <col:8, col:36> 'int'     |   |-ImplicitCastExpr 0x14c008980 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14c008908 <col:8> 'int ()' Function 0x14c008850 'kvm_vcpu_first_run_init' 'int ()'     |   `-ImplicitCastExpr 0x14c0089c0 <col:32> 'struct kvm_vcpu *' <LValueToRValue>     |     `-DeclRefExpr 0x14c008928 <col:32> 'struct kvm_vcpu *' lvalue ParmVar 0x14b928648 'vcpu' 'struct kvm_vcpu *'     |-IfStmt 0x14c008a78 <line:11:2, line:12:10>     | |-ImplicitCastExpr 0x14c008a18 <line:11:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x14c0089f8 <col:6> 'int' lvalue Var 0x14c008460 'ret' 'int'     | `-ReturnStmt 0x14c008a68 <line:12:3, col:10>     |   `-ImplicitCastExpr 0x14c008a50 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x14c008a30 <col:10> 'int' lvalue Var 0x14c008460 'ret' 'int'     |-IfStmt 0x14c008e20 <line:14:2, line:18:2>     | |-BinaryOperator 0x14c008b50 <line:14:6, col:26> 'int' contains-errors '=='     | | |-RecoveryExpr 0x14c008ad0 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x14c008a98 <col:6> 'struct kvm_run *' lvalue ParmVar 0x14c008228 'run' 'struct kvm_run *'     | | `-RecoveryExpr 0x14c008b30 <col:26> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14c008e00 <col:41, line:18:2>     |   |-BinaryOperator 0x14c008d40 <line:15:3, col:47> 'int' contains-errors '='     |   | |-DeclRefExpr 0x14c008b70 <col:3> 'int' lvalue Var 0x14c008460 'ret' 'int'     |   | `-CallExpr 0x14c008d10 <col:9, col:47> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x14c008c70 <col:9> 'int ()' Function 0x14c008bb8 'kvm_handle_mmio_return' 'int ()'     |   |   |-DeclRefExpr 0x14c008c90 <col:32> 'struct kvm_vcpu *' lvalue ParmVar 0x14b928648 'vcpu' 'struct kvm_vcpu *'     |   |   `-RecoveryExpr 0x14c008ce8 <col:38, col:44> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x14c008cb0 <col:38> 'struct kvm_vcpu *' lvalue ParmVar 0x14b928648 'vcpu' 'struct kvm_vcpu *'     |   `-IfStmt 0x14c008de0 <line:16:3, line:17:11>     |     |-ImplicitCastExpr 0x14c008d80 <line:16:7> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x14c008d60 <col:7> 'int' lvalue Var 0x14c008460 'ret' 'int'     |     `-ReturnStmt 0x14c008dd0 <line:17:4, col:11>     |       `-ImplicitCastExpr 0x14c008db8 <col:11> 'int' <LValueToRValue>     |         `-DeclRefExpr 0x14c008d98 <col:11> 'int' lvalue Var 0x14c008460 'ret' 'int'     |-IfStmt 0x14c009128 <line:20:2, line:21:52>     | |-RecoveryExpr 0x14c008e78 <line:20:6, col:12> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14c008e40 <col:6> 'struct kvm_vcpu *' lvalue ParmVar 0x14b928648 'vcpu' 'struct kvm_vcpu *'     | `-CallExpr 0x14c0090f0 <line:21:3, col:52> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14c008f80 <col:3> 'int ()' Function 0x14c008ec8 'sigprocmask' 'int ()'     |   |-RecoveryExpr 0x14c009098 <col:15> '<dependent type>' contains-errors lvalue     |   |-UnaryOperator 0x14c009018 <col:28, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x14c008ff0 <col:29, col:35> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14c008fb8 <col:29> 'struct kvm_vcpu *' lvalue ParmVar 0x14b928648 'vcpu' 'struct kvm_vcpu *'     |   `-UnaryOperator 0x14c0090d8 <col:43, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x14c0090b8 <col:44> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14c009188 <line:23:2, col:8> 'int' '='     | |-DeclRefExpr 0x14c009148 <col:2> 'int' lvalue Var 0x14c008460 'ret' 'int'     | `-IntegerLiteral 0x14c009168 <col:8> 'int' 1     |-BinaryOperator 0x14c808280 <line:24:2, col:21> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14c808200 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14c0091a8 <col:2> 'struct kvm_run *' lvalue ParmVar 0x14c008228 'run' 'struct kvm_run *'     | `-RecoveryExpr 0x14c808260 <col:21> '<dependent type>' contains-errors lvalue     |-WhileStmt 0x14b9422b0 <line:25:2, line:72:2>     | |-BinaryOperator 0x14c8082f8 <line:25:9, col:15> 'int' '>'     | | |-ImplicitCastExpr 0x14c8082e0 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x14c8082a0 <col:9> 'int' lvalue Var 0x14c008460 'ret' 'int'     | | `-IntegerLiteral 0x14c8082c0 <col:15> 'int' 0     | `-CompoundStmt 0x14b942218 <col:18, line:72:2>     |   |-CallExpr 0x14c808430 <line:27:3, col:16> 'int'     |   | `-ImplicitCastExpr 0x14c808418 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x14c8083f8 <col:3> 'int ()' Function 0x14c808340 'cond_resched' 'int ()'     |   |-CallExpr 0x14c8085b0 <line:29:3, col:25> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14c808530 <col:3> 'int ()' Function 0x14c808478 'update_vttbr' 'int ()'     |   | `-RecoveryExpr 0x14c808588 <col:16, col:22> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14c808550 <col:16> 'struct kvm_vcpu *' lvalue ParmVar 0x14b928648 'vcpu' 'struct kvm_vcpu *'     |   |-IfStmt 0x14c8087f8 <line:31:3, line:32:19>     |   | |-CXXDependentScopeMemberExpr 0x14c808638 <line:31:7, col:18> '<dependent type>' contains-errors lvalue .pause     |   | | `-RecoveryExpr 0x14c808610 <col:7, col:13> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x14c8085d8 <col:7> 'struct kvm_vcpu *' lvalue ParmVar 0x14b928648 'vcpu' 'struct kvm_vcpu *'     |   | `-CallExpr 0x14c8087b8 <line:32:4, col:19> 'int'     |   |   |-ImplicitCastExpr 0x14c8087a0 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x14c808760 <col:4> 'int ()' Function 0x14c8086a8 'vcpu_pause' 'int ()'     |   |   `-ImplicitCastExpr 0x14c8087e0 <col:15> 'struct kvm_vcpu *' <LValueToRValue>     |   |     `-DeclRefExpr 0x14c808780 <col:15> 'struct kvm_vcpu *' lvalue ParmVar 0x14b928648 'vcpu' 'struct kvm_vcpu *'     |   |-CallExpr 0x14c808950 <line:34:3, col:30> 'int'     |   | |-ImplicitCastExpr 0x14c808938 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14c8088f8 <col:3> 'int ()' Function 0x14c808840 'kvm_vgic_flush_hwstate' 'int ()'     |   | `-ImplicitCastExpr 0x14c808978 <col:26> 'struct kvm_vcpu *' <LValueToRValue>     |   |   `-DeclRefExpr 0x14c808918 <col:26> 'struct kvm_vcpu *' lvalue ParmVar 0x14b928648 'vcpu' 'struct kvm_vcpu *'     |   |-CallExpr 0x14c808ac8 <line:35:3, col:31> 'int'     |   | |-ImplicitCastExpr 0x14c808ab0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14c808a70 <col:3> 'int ()' Function 0x14c8089b8 'kvm_timer_flush_hwstate' 'int ()'     |   | `-ImplicitCastExpr 0x14c808af0 <col:27> 'struct kvm_vcpu *' <LValueToRValue>     |   |   `-DeclRefExpr 0x14c808a90 <col:27> 'struct kvm_vcpu *' lvalue ParmVar 0x14b928648 'vcpu' 'struct kvm_vcpu *'     |   |-CallExpr 0x14c808c20 <line:37:3, col:21> 'int'     |   | `-ImplicitCastExpr 0x14c808c08 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x14c808be8 <col:3> 'int ()' Function 0x14c808b30 'local_irq_disable' 'int ()'     |   |-IfStmt 0x14c808df0 <line:40:3, line:43:3>     |   | |-RecoveryExpr 0x14c808d40 <line:40:7, col:29> '_Bool' contains-errors     |   | `-CompoundStmt 0x14c808de0 <col:32, line:43:3>     |   |-IfStmt 0x14b941300 <line:45:3, line:50:3>     |   | |-BinaryOperator 0x14c809010 <line:45:7, col:46> 'int' contains-errors '||'     |   | | |-BinaryOperator 0x14c808e68 <col:7, col:14> 'int' '<='     |   | | | |-ImplicitCastExpr 0x14c808e50 <col:7> 'int' <LValueToRValue>     |   | | | | `-DeclRefExpr 0x14c808e10 <col:7> 'int' lvalue Var 0x14c008460 'ret' 'int'     |   | | | `-IntegerLiteral 0x14c808e30 <col:14> 'int' 0     |   | | `-CallExpr 0x14c808fe8 <col:19, col:46> '<dependent type>' contains-errors     |   | |   |-DeclRefExpr 0x14c808f68 <col:19> 'int ()' Function 0x14c808eb0 'need_new_vmid_gen' 'int ()'     |   | |   `-RecoveryExpr 0x14c808fc0 <col:37, col:43> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x14c808f88 <col:37> 'struct kvm_vcpu *' lvalue ParmVar 0x14b928648 'vcpu' 'struct kvm_vcpu *'     |   | `-CompoundStmt 0x14b9412d0 <col:49, line:50:3>     |   |   |-CallExpr 0x14c809148 <line:46:4, col:21> 'int'     |   |   | `-ImplicitCastExpr 0x14c809130 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   |   `-DeclRefExpr 0x14c809110 <col:4> 'int ()' Function 0x14c809058 'local_irq_enable' 'int ()'     |   |   |-CallExpr 0x14b941110 <line:47:4, col:31> 'int'     |   |   | |-ImplicitCastExpr 0x14b9410f8 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x14b9410b8 <col:4> 'int ()' Function 0x14b941000 'kvm_timer_sync_hwstate' 'int ()'     |   |   | `-ImplicitCastExpr 0x14b941138 <col:27> 'struct kvm_vcpu *' <LValueToRValue>     |   |   |   `-DeclRefExpr 0x14b9410d8 <col:27> 'struct kvm_vcpu *' lvalue ParmVar 0x14b928648 'vcpu' 'struct kvm_vcpu *'     |   |   |-CallExpr 0x14b941288 <line:48:4, col:30> 'int'     |   |   | |-ImplicitCastExpr 0x14b941270 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x14b941230 <col:4> 'int ()' Function 0x14b941178 'kvm_vgic_sync_hwstate' 'int ()'     |   |   | `-ImplicitCastExpr 0x14b9412b0 <col:26> 'struct kvm_vcpu *' <LValueToRValue>     |   |   |   `-DeclRefExpr 0x14b941250 <col:26> 'struct kvm_vcpu *' lvalue ParmVar 0x14b928648 'vcpu' 'struct kvm_vcpu *'     |   |   `-ContinueStmt 0x14b9412c8 <line:49:4>     |   |-CallExpr 0x14b9415c0 <line:53:3, col:33> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14b941400 <col:3> 'int ()' Function 0x14b941348 'trace_kvm_entry' 'int ()'     |   | `-RecoveryExpr 0x14b941598 <col:19, col:32> '<dependent type>' contains-errors lvalue     |   |   `-CallExpr 0x14b941558 <col:20, col:32> 'int'     |   |     |-ImplicitCastExpr 0x14b941540 <col:20> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x14b941500 <col:20> 'int ()' Function 0x14b941448 'vcpu_pc' 'int ()'     |   |     `-ImplicitCastExpr 0x14b941580 <col:28> 'struct kvm_vcpu *' <LValueToRValue>     |   |       `-DeclRefExpr 0x14b941520 <col:28> 'struct kvm_vcpu *' lvalue ParmVar 0x14b928648 'vcpu' 'struct kvm_vcpu *'     |   |-CallExpr 0x14b941700 <line:54:3, col:19> 'int'     |   | `-ImplicitCastExpr 0x14b9416e8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x14b9416c8 <col:3> 'int ()' Function 0x14b941610 'kvm_guest_enter' 'int ()'     |   |-BinaryOperator 0x14b941b00 <line:60:3, col:43> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x14b941980 <col:3, col:14> '<dependent type>' contains-errors lvalue .last_pcpu     |   | | `-RecoveryExpr 0x14b941958 <col:3, col:9> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x14b941920 <col:3> 'struct kvm_vcpu *' lvalue ParmVar 0x14b928648 'vcpu' 'struct kvm_vcpu *'     |   | `-CallExpr 0x14b941ae0 <col:26, col:43> 'int'     |   |   `-ImplicitCastExpr 0x14b941ac8 <col:26> 'int (*)()' <FunctionToPointerDecay>     |   |     `-DeclRefExpr 0x14b941aa8 <col:26> 'int ()' Function 0x14b9419f0 'smp_processor_id' 'int ()'     |   |-CallExpr 0x14b941c38 <line:61:3, col:18> 'int'     |   | `-ImplicitCastExpr 0x14b941c20 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x14b941c00 <col:3> 'int ()' Function 0x14b941b48 'kvm_guest_exit' 'int ()'     |   |-CallExpr 0x14b941e18 <line:62:3, col:32> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14b941d38 <col:3> 'int ()' Function 0x14b941c80 'trace_kvm_exit' 'int ()'     |   | `-RecoveryExpr 0x14b941df0 <col:18, col:31> '<dependent type>' contains-errors lvalue     |   |   `-CallExpr 0x14b941db0 <col:19, col:31> 'int'     |   |     |-ImplicitCastExpr 0x14b941d98 <col:19> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x14b941d58 <col:19> 'int ()' Function 0x14b941448 'vcpu_pc' 'int ()'     |   |     `-ImplicitCastExpr 0x14b941dd8 <col:27> 'struct kvm_vcpu *' <LValueToRValue>     |   |       `-DeclRefExpr 0x14b941d78 <col:27> 'struct kvm_vcpu *' lvalue ParmVar 0x14b928648 'vcpu' 'struct kvm_vcpu *'     |   |-CallExpr 0x14b941e78 <line:64:3, col:20> 'int'     |   | `-ImplicitCastExpr 0x14b941e60 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x14b941e40 <col:3> 'int ()' Function 0x14c809058 'local_irq_enable' 'int ()'     |   |-CallExpr 0x14b941ef0 <line:68:3, col:30> 'int'     |   | |-ImplicitCastExpr 0x14b941ed8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14b941e98 <col:3> 'int ()' Function 0x14b941000 'kvm_timer_sync_hwstate' 'int ()'     |   | `-ImplicitCastExpr 0x14b941f18 <col:26> 'struct kvm_vcpu *' <LValueToRValue>     |   |   `-DeclRefExpr 0x14b941eb8 <col:26> 'struct kvm_vcpu *' lvalue ParmVar 0x14b928648 'vcpu' 'struct kvm_vcpu *'     |   |-CallExpr 0x14b941f88 <line:69:3, col:29> 'int'     |   | |-ImplicitCastExpr 0x14b941f70 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14b941f30 <col:3> 'int ()' Function 0x14b941178 'kvm_vgic_sync_hwstate' 'int ()'     |   | `-ImplicitCastExpr 0x14b941fb0 <col:25> 'struct kvm_vcpu *' <LValueToRValue>     |   |   `-DeclRefExpr 0x14b941f50 <col:25> 'struct kvm_vcpu *' lvalue ParmVar 0x14b928648 'vcpu' 'struct kvm_vcpu *'     |   `-BinaryOperator 0x14b9421f8 <line:71:3, col:35> 'int' '='     |     |-DeclRefExpr 0x14b941fc8 <col:3> 'int' lvalue Var 0x14c008460 'ret' 'int'     |     `-CallExpr 0x14b942178 <col:9, col:35> 'int'     |       |-ImplicitCastExpr 0x14b942160 <col:9> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14b9420e0 <col:9> 'int ()' Function 0x14b942028 'handle_exit' 'int ()'     |       |-ImplicitCastExpr 0x14b9421b0 <col:21> 'struct kvm_vcpu *' <LValueToRValue>     |       | `-DeclRefExpr 0x14b942100 <col:21> 'struct kvm_vcpu *' lvalue ParmVar 0x14b928648 'vcpu' 'struct kvm_vcpu *'     |       |-ImplicitCastExpr 0x14b9421c8 <col:27> 'struct kvm_run *' <LValueToRValue>     |       | `-DeclRefExpr 0x14b942120 <col:27> 'struct kvm_run *' lvalue ParmVar 0x14c008228 'run' 'struct kvm_run *'     |       `-ImplicitCastExpr 0x14b9421e0 <col:32> 'int' <LValueToRValue>     |         `-DeclRefExpr 0x14b942140 <col:32> 'int' lvalue Var 0x14c008460 'ret' 'int'     `-ReturnStmt 0x14b942388 <line:76:2, col:9>       `-ImplicitCastExpr 0x14b942370 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x14b942350 <col:9> 'int' lvalue Var 0x14c008460 'ret' 'int' ","19458":"`-FunctionDecl 0x150922d28  col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x150922e28 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x150922e90 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x150922ef8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x150922dd0 <<invalid sloc>> Implicit 882 ","19386":"`-FunctionDecl 0x135808b78  line:1:20 invalid hctx_may_queue 'int (struct blk_mq_hw_ctx *, struct blk_mq_bitmap_tags *)' static inline   |-ParmVarDecl 0x135128668 <col:35, col:57> col:57 used hctx 'struct blk_mq_hw_ctx *'   |-ParmVarDecl 0x135808a58 <line:2:7, col:34> col:34 used bt 'struct blk_mq_bitmap_tags *'   `-CompoundStmt 0x13580b200 <line:3:1, line:22:1>     |-DeclStmt 0x135808d48 <line:4:2, col:27>     | |-VarDecl 0x135808c48 <col:2, col:15> col:15 used depth 'unsigned int'     | `-VarDecl 0x135808cc8 <col:2, col:22> col:22 used users 'unsigned int'     |-IfStmt 0x135808eb0 <line:6:2, line:7:10>     | |-RecoveryExpr 0x135808e48 <line:6:6, col:50> '_Bool' contains-errors     | `-ReturnStmt 0x135808ea0 <line:7:3, col:10>     |   `-RecoveryExpr 0x135808e80 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1358091d8 <line:8:2, line:9:10>     | |-UnaryOperator 0x135809178 <line:8:6, col:49> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x135809148 <col:7, col:49> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x135809030 <col:7> 'int ()' Function 0x135808f78 'test_bit' 'int ()'     | |   |-RecoveryExpr 0x135809128 <col:16> '<dependent type>' contains-errors lvalue     | |   `-UnaryOperator 0x1358090c8 <col:37, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-RecoveryExpr 0x1358090a0 <col:38, col:44> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x135809068 <col:38> 'struct blk_mq_hw_ctx *' lvalue ParmVar 0x135128668 'hctx' 'struct blk_mq_hw_ctx *'     | `-ReturnStmt 0x1358091c8 <line:9:3, col:10>     |   `-RecoveryExpr 0x1358091a8 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1358092e0 <line:12:2, line:13:10>     | |-BinaryOperator 0x135809278 <line:12:6, col:19> 'int' contains-errors '=='     | | |-RecoveryExpr 0x135809230 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x1358091f8 <col:6> 'struct blk_mq_bitmap_tags *' lvalue ParmVar 0x135808a58 'bt' 'struct blk_mq_bitmap_tags *'     | | `-IntegerLiteral 0x135809258 <col:19> 'int' 1     | `-ReturnStmt 0x1358092d0 <line:13:3, col:10>     |   `-RecoveryExpr 0x1358092b0 <col:10> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x135809508 <line:15:2, col:48> 'unsigned int' contains-errors '='     | |-DeclRefExpr 0x135809300 <col:2> 'unsigned int' lvalue Var 0x135808cc8 'users' 'unsigned int'     | `-CallExpr 0x1358094e0 <col:10, col:48> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x135809400 <col:10> 'int ()' Function 0x135809348 'atomic_read' 'int ()'     |   `-UnaryOperator 0x1358094c8 <col:22, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-CXXDependentScopeMemberExpr 0x135809480 <col:23, col:35> '<dependent type>' contains-errors lvalue ->active_queues     |       `-RecoveryExpr 0x135809458 <col:23, col:29> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x135809420 <col:23> 'struct blk_mq_hw_ctx *' lvalue ParmVar 0x135128668 'hctx' 'struct blk_mq_hw_ctx *'     |-IfStmt 0x1358095c0 <line:16:2, line:17:10>     | |-UnaryOperator 0x135809560 <line:16:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x135809548 <col:7> 'unsigned int' <LValueToRValue>     | |   `-DeclRefExpr 0x135809528 <col:7> 'unsigned int' lvalue Var 0x135808cc8 'users' 'unsigned int'     | `-ReturnStmt 0x1358095b0 <line:17:3, col:10>     |   `-RecoveryExpr 0x135809590 <col:10> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x135809890 <line:20:2, col:49> 'unsigned int' contains-errors '='     | |-DeclRefExpr 0x1358095e0 <col:2> 'unsigned int' lvalue Var 0x135808c48 'depth' 'unsigned int'     | `-CallExpr 0x135809860 <col:10, col:49> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1358096e0 <col:10> 'int ()' Function 0x135809628 'max' 'int ()'     |   |-BinaryOperator 0x135809820 <col:14, col:40> '<dependent type>' contains-errors '\/'     |   | |-ParenExpr 0x1358097e0 <col:14, col:36> '<dependent type>' contains-errors     |   | | `-BinaryOperator 0x1358097c0 <col:15, col:35> '<dependent type>' contains-errors '-'     |   | |   |-BinaryOperator 0x135809780 <col:15, col:27> '<dependent type>' contains-errors '+'     |   | |   | |-RecoveryExpr 0x135809738 <col:15, col:19> '<dependent type>' contains-errors lvalue     |   | |   | | `-DeclRefExpr 0x135809700 <col:15> 'struct blk_mq_bitmap_tags *' lvalue ParmVar 0x135808a58 'bt' 'struct blk_mq_bitmap_tags *'     |   | |   | `-DeclRefExpr 0x135809760 <col:27> 'unsigned int' lvalue Var 0x135808cc8 'users' 'unsigned int'     |   | |   `-IntegerLiteral 0x1358097a0 <col:35> 'int' 1     |   | `-DeclRefExpr 0x135809800 <col:40> 'unsigned int' lvalue Var 0x135808cc8 'users' 'unsigned int'     |   `-IntegerLiteral 0x135809840 <col:47> 'unsigned int' 4     `-ReturnStmt 0x1358099b0 <line:21:2, col:41>       `-BinaryOperator 0x135809990 <col:9, col:41> 'int' contains-errors '<'         |-CallExpr 0x135809948 <col:9, col:37> '<dependent type>' contains-errors         | |-DeclRefExpr 0x1358098b0 <col:9> 'int ()' Function 0x135809348 'atomic_read' 'int ()'         | `-UnaryOperator 0x135809930 <col:21, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow         |   `-RecoveryExpr 0x135809908 <col:22, col:28> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x1358098d0 <col:22> 'struct blk_mq_hw_ctx *' lvalue ParmVar 0x135128668 'hctx' 'struct blk_mq_hw_ctx *'         `-DeclRefExpr 0x135809970 <col:41> 'unsigned int' lvalue Var 0x135808c48 'depth' 'unsigned int' ","19355":"`-FunctionDecl 0x1341415b0  col:6 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x1341416b0 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x134141718 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x134141658 <<invalid sloc>> Implicit 887 ","19692":"`-FunctionDecl 0x158128758  line:1:1 protocol_handshake 'int (struct connection *)'   |-ParmVarDecl 0x158128648 <col:21, col:40> col:40 used conn 'struct connection *'   `-CompoundStmt 0x1581412d0 <line:2:1, line:13:1>     |-DeclStmt 0x158140ad0 <line:3:3, col:8>     | `-VarDecl 0x158140a68 <col:3, col:7> col:7 used r 'int'     |-CallExpr 0x158140c98 <line:5:3, col:21> 'int'     | |-ImplicitCastExpr 0x158140c80 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x158140c10 <col:3> 'int ()' Function 0x158140b58 'lock_request' 'int ()'     | `-ImplicitCastExpr 0x158140cc0 <col:17> 'struct connection *' <LValueToRValue>     |   `-DeclRefExpr 0x158140c30 <col:17> 'struct connection *' lvalue ParmVar 0x158128648 'conn' 'struct connection *'     |-IfStmt 0x1581410e0 <line:6:3, line:9:42> has_else     | |-UnaryOperator 0x158140d58 <line:6:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x158140d40 <col:8> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x158140d20 <col:8> '<dependent type>' contains-errors lvalue     | |-BinaryOperator 0x158140f08 <line:7:5, col:42> 'int' '='     | | |-DeclRefExpr 0x158140d70 <col:5> 'int' lvalue Var 0x158140a68 'r' 'int'     | | `-CallExpr 0x158140ec8 <col:9, col:42> 'int'     | |   |-ImplicitCastExpr 0x158140eb0 <col:9> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x158140e70 <col:9> 'int ()' Function 0x158140db8 'protocol_handshake_oldstyle' 'int ()'     | |   `-ImplicitCastExpr 0x158140ef0 <col:38> 'struct connection *' <LValueToRValue>     | |     `-DeclRefExpr 0x158140e90 <col:38> 'struct connection *' lvalue ParmVar 0x158128648 'conn' 'struct connection *'     | `-BinaryOperator 0x1581410c0 <line:9:5, col:42> 'int' '='     |   |-DeclRefExpr 0x158140f28 <col:5> 'int' lvalue Var 0x158140a68 'r' 'int'     |   `-CallExpr 0x158141080 <col:9, col:42> 'int'     |     |-ImplicitCastExpr 0x158141068 <col:9> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x158141028 <col:9> 'int ()' Function 0x158140f70 'protocol_handshake_newstyle' 'int ()'     |     `-ImplicitCastExpr 0x1581410a8 <col:38> 'struct connection *' <LValueToRValue>     |       `-DeclRefExpr 0x158141048 <col:38> 'struct connection *' lvalue ParmVar 0x158128648 'conn' 'struct connection *'     |-CallExpr 0x158141248 <line:10:3, col:23> 'int'     | |-ImplicitCastExpr 0x158141230 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1581411f0 <col:3> 'int ()' Function 0x158141138 'unlock_request' 'int ()'     | `-ImplicitCastExpr 0x158141270 <col:19> 'struct connection *' <LValueToRValue>     |   `-DeclRefExpr 0x158141210 <col:19> 'struct connection *' lvalue ParmVar 0x158128648 'conn' 'struct connection *'     `-ReturnStmt 0x1581412c0 <line:12:3, col:10>       `-ImplicitCastExpr 0x1581412a8 <col:10> 'int' <LValueToRValue>         `-DeclRefExpr 0x158141288 <col:10> 'int' lvalue Var 0x158140a68 'r' 'int' ","20151":"`-FunctionDecl 0x15300ed18  line:1:1 invalid mail_parser_run 'int (int *, int *, int *)'   |-ParmVarDecl 0x15300eb28 <col:18, col:31> col:31 referenced invalid parser 'int *'   |-ParmVarDecl 0x15300eba8 <line:2:18, col:33> col:33 referenced invalid part_list 'int *'   |-ParmVarDecl 0x15300ec28 <line:3:18, col:32> col:32 referenced invalid cancellable 'int *'   `-CompoundStmt 0x15302a0b0 <line:4:1, line:74:1>     |-IfStmt 0x153028258 <line:13:2, line:16:36> has_else     | |-RecoveryExpr 0x15300eea8 <line:13:6> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x15300f060 <line:14:3, col:28> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x15300f020 <col:3> 'int ()' Function 0x15300ef68 'g_object_ref' 'int ()'     | | `-RecoveryExpr 0x15300f040 <col:17> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x153028238 <line:16:3, col:36> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x15300f0a8 <col:3> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x15300f088 <col:3> 'int *' lvalue ParmVar 0x15300ec28 'cancellable' 'int *'     |   `-CallExpr 0x153028218 <col:17, col:36> 'int'     |     `-ImplicitCastExpr 0x153028200 <col:17> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x15300f1b0 <col:17> 'int ()' Function 0x15300f0f8 'g_cancellable_new' 'int ()'     |-CallExpr 0x153028450 <line:18:2, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x153028368 <col:2> 'int ()' Function 0x1530282b0 'g_mutex_lock' 'int ()'     | `-UnaryOperator 0x153028438 <col:16, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x1530283f0 <col:17, col:31> '<dependent type>' contains-errors lvalue ->mutex     |     `-CXXDependentScopeMemberExpr 0x1530283a8 <col:17, col:25> '<dependent type>' contains-errors lvalue ->priv     |       `-RecoveryExpr 0x153028388 <col:17> '<dependent type>' contains-errors lvalue     |-CallExpr 0x153028668 <line:19:2, col:79> '<dependent type>' contains-errors     | |-DeclRefExpr 0x153028558 <col:2> 'int ()' Function 0x1530284a0 'g_hash_table_insert' 'int ()'     | |-CXXDependentScopeMemberExpr 0x1530285e0 <col:23, col:37> '<dependent type>' contains-errors lvalue ->ongoing_part_lists     | | `-CXXDependentScopeMemberExpr 0x153028598 <col:23, col:31> '<dependent type>' contains-errors lvalue ->priv     | |   `-RecoveryExpr 0x153028578 <col:23> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x153028628 <col:57> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x153028648 <col:70> '<dependent type>' contains-errors lvalue     |-CallExpr 0x153028868 <line:20:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x153028780 <col:2> 'int ()' Function 0x1530286c8 'g_mutex_unlock' 'int ()'     | `-UnaryOperator 0x153028850 <col:18, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x153028808 <col:19, col:33> '<dependent type>' contains-errors lvalue ->mutex     |     `-CXXDependentScopeMemberExpr 0x1530287c0 <col:19, col:27> '<dependent type>' contains-errors lvalue ->priv     |       `-RecoveryExpr 0x1530287a0 <col:19> '<dependent type>' contains-errors lvalue     |-WhileStmt 0x153029a10 <line:62:2, line:66:2>     | |-RecoveryExpr 0x153029880 <line:62:9, col:44> '_Bool' contains-errors     | `-CompoundStmt 0x153029a00 <col:47, line:66:2>     |-CallExpr 0x153029b18 <line:68:2, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x153029a30 <col:2> 'int ()' Function 0x1530282b0 'g_mutex_lock' 'int ()'     | `-UnaryOperator 0x153029b00 <col:16, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x153029ab8 <col:17, col:31> '<dependent type>' contains-errors lvalue ->mutex     |     `-CXXDependentScopeMemberExpr 0x153029a70 <col:17, col:25> '<dependent type>' contains-errors lvalue ->priv     |       `-RecoveryExpr 0x153029a50 <col:17> '<dependent type>' contains-errors lvalue     |-CallExpr 0x153029d10 <line:69:2, col:68> '<dependent type>' contains-errors     | |-DeclRefExpr 0x153029c20 <col:2> 'int ()' Function 0x153029b68 'g_hash_table_remove' 'int ()'     | |-CXXDependentScopeMemberExpr 0x153029ca8 <col:23, col:37> '<dependent type>' contains-errors lvalue ->ongoing_part_lists     | | `-CXXDependentScopeMemberExpr 0x153029c60 <col:23, col:31> '<dependent type>' contains-errors lvalue ->priv     | |   `-RecoveryExpr 0x153029c40 <col:23> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x153029cf0 <col:57> '<dependent type>' contains-errors lvalue     |-CallExpr 0x153029e28 <line:70:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x153029d40 <col:2> 'int ()' Function 0x1530286c8 'g_mutex_unlock' 'int ()'     | `-UnaryOperator 0x153029e10 <col:18, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x153029dc8 <col:19, col:33> '<dependent type>' contains-errors lvalue ->mutex     |     `-CXXDependentScopeMemberExpr 0x153029d80 <col:19, col:27> '<dependent type>' contains-errors lvalue ->priv     |       `-RecoveryExpr 0x153029d60 <col:19> '<dependent type>' contains-errors lvalue     `-CallExpr 0x153029f88 <line:72:2, col:30> '<dependent type>' contains-errors       |-DeclRefExpr 0x153029f30 <col:2> 'int ()' Function 0x153029e78 'g_clear_object' 'int ()'       `-UnaryOperator 0x153029f70 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x153029f50 <col:19> '<dependent type>' contains-errors lvalue ","20017":"`-FunctionDecl 0x14200dfa8  line:1:10 invalid malloc 'void *(int)'   |-ParmVarDecl 0x14200dcf0 <col:17, col:24> col:24 invalid lb 'int'   `-CompoundStmt 0x14200e268 <line:2:3, line:14:3>     `-ReturnStmt 0x14200e258 <line:13:5, col:38>       `-CStyleCastExpr 0x14200e230 <col:12, col:38> 'void *' contains-errors <Dependent>         `-CallExpr 0x14200e1f0 <col:20, col:38> '<dependent type>' contains-errors           |-DeclRefExpr 0x14200e1b0 <col:20> 'int ()' Function 0x14200e0f8 'REDIRECT_MALLOC' 'int ()'           `-RecoveryExpr 0x14200e1d0 <col:36> '<dependent type>' contains-errors lvalue ","19129":"`-FunctionDecl 0x139141e98  col:5 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x139141f98 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x139142000 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x139142068 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x139141f40 <<invalid sloc>> Implicit 900 ","19705":"`-FunctionDecl 0x12702cf78  line:1:12 invalid sched_slice 'int (struct cfs_rq *, struct sched_entity *)' static   |-ParmVarDecl 0x127010268 <col:24, col:39> col:39 used cfs_rq 'struct cfs_rq *'   |-ParmVarDecl 0x12702ce58 <col:47, col:68> col:68 used se 'struct sched_entity *'   `-CompoundStmt 0x12702d4a0 <line:2:1, line:5:1>     `-ReturnStmt 0x12702d490 <line:3:2, line:4:41>       `-CallExpr 0x12702d458 <line:3:9, line:4:41> '<dependent type>' contains-errors         |-DeclRefExpr 0x12702d190 <line:3:9> 'int ()' Function 0x12702d0d8 'calc_delta_mine' 'int ()'         |-CallExpr 0x12702d310 <col:25, col:58> '<dependent type>' contains-errors         | |-DeclRefExpr 0x12702d290 <col:25> 'int ()' Function 0x12702d1d8 '__sched_period' 'int ()'         | `-RecoveryExpr 0x12702d2e8 <col:40, col:48> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x12702d2b0 <col:40> 'struct cfs_rq *' lvalue ParmVar 0x127010268 'cfs_rq' 'struct cfs_rq *'         |-CXXDependentScopeMemberExpr 0x12702d398 <line:4:11, col:20> '<dependent type>' contains-errors lvalue .weight         | `-RecoveryExpr 0x12702d370 <col:11, col:15> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x12702d338 <col:11> 'struct sched_entity *' lvalue ParmVar 0x12702ce58 'se' 'struct sched_entity *'         `-UnaryOperator 0x12702d440 <col:28, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow           `-RecoveryExpr 0x12702d418 <col:29, col:37> '<dependent type>' contains-errors lvalue             `-DeclRefExpr 0x12702d3e0 <col:29> 'struct cfs_rq *' lvalue ParmVar 0x127010268 'cfs_rq' 'struct cfs_rq *' ","19366":"`-FunctionDecl 0x127143358  col:9 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x127143458 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x1271434c0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x127143528 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x127143400 <<invalid sloc>> Implicit 882 ","19433":"`-FunctionDecl 0x12f827268  col:13 implicit used strdup 'char *(const char *)' extern   |-ParmVarDecl 0x12f827368 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x12f827310 <<invalid sloc>> Implicit 950 ","19218":"`-FunctionDecl 0x129145a38  line:1:21 invalid tun_chr_poll 'unsigned int (struct file *, int *)' static   |-ParmVarDecl 0x129128648 <col:34, col:47> col:47 used file 'struct file *'   |-ParmVarDecl 0x129128718 <col:53, col:66> col:66 invalid wait 'int *'   `-CompoundStmt 0x129147a38 <line:2:1, line:28:1>     |-DeclStmt 0x129145d38 <line:3:2, col:45>     | |-RecordDecl 0x129145af0 <col:2, col:9> col:9 struct tun_file     | `-VarDecl 0x129145c58 <col:2, col:33> col:19 used tfile 'struct tun_file *' cinit     |   `-RecoveryExpr 0x129145cf8 <col:27, col:33> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x129145cc0 <col:27> 'struct file *' lvalue ParmVar 0x129128648 'file' 'struct file *'     |-DeclStmt 0x129146178 <line:4:2, col:43>     | |-RecordDecl 0x129145d50 <col:2, col:9> col:9 struct tun_struct     | `-VarDecl 0x129145eb8 <col:2, col:42> col:21 used tun 'struct tun_struct *' cinit     |   `-ImplicitCastExpr 0x129146148 <col:27, col:42> 'struct tun_struct *' contains-errors <IntegralToPointer>     |     `-CallExpr 0x129146108 <col:27, col:42> 'int' contains-errors     |       |-ImplicitCastExpr 0x1291460f0 <col:27> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x129146080 <col:27> 'int ()' Function 0x129145fc8 '__tun_get' 'int ()'     |       `-ImplicitCastExpr 0x129146130 <col:37> 'struct tun_file *' contains-errors <LValueToRValue>     |         `-DeclRefExpr 0x1291460a0 <col:37> 'struct tun_file *' contains-errors lvalue Var 0x129145c58 'tfile' 'struct tun_file *'     |-DeclStmt 0x1291463d8 <line:5:2, col:27>     | |-RecordDecl 0x129146190 <col:2, col:9> col:9 struct sock     | `-VarDecl 0x1291462f8 <col:2, col:25> col:15 used sk 'struct sock *' cinit     |   `-RecoveryExpr 0x129146398 <col:20, col:25> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x129146360 <col:20> 'struct tun_struct *' contains-errors lvalue Var 0x129145eb8 'tun' 'struct tun_struct *'     |-DeclStmt 0x1291464a8 <line:6:2, col:23>     | `-VarDecl 0x129146408 <col:2, col:22> col:15 used mask 'unsigned int' cinit     |   `-ImplicitCastExpr 0x129146490 <col:22> 'unsigned int' <IntegralCast>     |     `-IntegerLiteral 0x129146470 <col:22> 'int' 0     |-IfStmt 0x129146558 <line:8:2, line:9:10>     | |-UnaryOperator 0x1291464f8 <line:8:6, col:7> 'int' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1291464e0 <col:7> 'struct tun_struct *' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x1291464c0 <col:7> 'struct tun_struct *' contains-errors lvalue Var 0x129145eb8 'tun' 'struct tun_struct *'     | `-ReturnStmt 0x129146548 <line:9:3, col:10>     |   `-RecoveryExpr 0x129146528 <col:10> '<dependent type>' contains-errors lvalue     |-CallExpr 0x129146890 <line:13:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x129146770 <col:2> 'int ()' Function 0x1291466b8 'poll_wait' 'int ()'     | |-DeclRefExpr 0x129146790 <col:12> 'struct file *' lvalue ParmVar 0x129128648 'file' 'struct file *'     | |-UnaryOperator 0x129146858 <col:18, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x129146810 <col:19, col:31> '<dependent type>' contains-errors lvalue .wait     | |   `-RecoveryExpr 0x1291467e8 <col:19, col:24> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x1291467b0 <col:19> 'struct tun_struct *' contains-errors lvalue Var 0x129145eb8 'tun' 'struct tun_struct *'     | `-RecoveryExpr 0x129146870 <col:37> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1291471b0 <line:15:2, line:16:20>     | |-UnaryOperator 0x129147068 <line:15:6, col:34> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x129147040 <col:7, col:34> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x1291469a8 <col:7> 'int ()' Function 0x1291468f0 'skb_queue_empty' 'int ()'     | |   `-UnaryOperator 0x129147028 <col:23, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-RecoveryExpr 0x129147000 <col:24, col:29> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x1291469c8 <col:24> 'struct tun_struct *' contains-errors lvalue Var 0x129145eb8 'tun' 'struct tun_struct *'     | `-CompoundAssignOperator 0x129147180 <line:16:3, col:20> 'unsigned int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |-DeclRefExpr 0x129147080 <col:3> 'unsigned int' lvalue Var 0x129146408 'mask' 'unsigned int'     |   `-BinaryOperator 0x129147160 <col:11, col:20> '<dependent type>' contains-errors '|'     |     |-RecoveryExpr 0x129147120 <col:11> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x129147140 <col:20> '<dependent type>' contains-errors lvalue     |-IfStmt 0x129147770 <line:18:2, line:21:21>     | |-RecoveryExpr 0x129147620 <line:18:6, line:20:25> '_Bool' contains-errors     | `-CompoundAssignOperator 0x129147740 <line:21:3, col:21> 'unsigned int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |-DeclRefExpr 0x129147640 <col:3> 'unsigned int' lvalue Var 0x129146408 'mask' 'unsigned int'     |   `-BinaryOperator 0x129147720 <col:11, col:21> '<dependent type>' contains-errors '|'     |     |-RecoveryExpr 0x1291476e0 <col:11> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x129147700 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1291479b0 <line:26:2, col:13> 'int' contains-errors     | |-ImplicitCastExpr 0x129147998 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x129147958 <col:2> 'int ()' Function 0x1291478a0 'tun_put' 'int ()'     | `-ImplicitCastExpr 0x1291479d8 <col:10> 'struct tun_struct *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x129147978 <col:10> 'struct tun_struct *' contains-errors lvalue Var 0x129145eb8 'tun' 'struct tun_struct *'     `-ReturnStmt 0x129147a28 <line:27:2, col:9>       `-ImplicitCastExpr 0x129147a10 <col:9> 'unsigned int' <LValueToRValue>         `-DeclRefExpr 0x1291479f0 <col:9> 'unsigned int' lvalue Var 0x129146408 'mask' 'unsigned int' ","19738":"`-FunctionDecl 0x12d941800  line:1:13 invalid hub_power_on 'void (struct usb_hub *, int)' static   |-ParmVarDecl 0x12d928648 <col:26, col:42> col:42 used hub 'struct usb_hub *'   |-ParmVarDecl 0x12d9286e0 <col:47, col:52> col:52 invalid do_delay 'int'   `-CompoundStmt 0x12e008db0 <line:2:1, line:19:1>     |-DeclStmt 0x12d941938 <line:3:2, col:11>     | `-VarDecl 0x12d9418d0 <col:2, col:6> col:6 used port1 'int'     |-IfStmt 0x12d941e88 <line:6:2, line:10:10> has_else     | |-CallExpr 0x12d941b38 <line:6:6, col:38> 'int'     | | |-ImplicitCastExpr 0x12d941b20 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x12d941ab0 <col:6> 'int ()' Function 0x12d9419f8 'hub_is_port_power_switchable' 'int ()'     | | `-ImplicitCastExpr 0x12d941b60 <col:35> 'struct usb_hub *' <LValueToRValue>     | |   `-DeclRefExpr 0x12d941ad0 <col:35> 'struct usb_hub *' lvalue ParmVar 0x12d928648 'hub' 'struct usb_hub *'     | |-CallExpr 0x12d941d40 <line:7:3, col:30> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x12d941c58 <col:3> 'int ()' Function 0x12d941ba0 'dev_dbg' 'int ()'     | | |-RecoveryExpr 0x12d941cb0 <col:11, col:16> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x12d941c78 <col:11> 'struct usb_hub *' lvalue ParmVar 0x12d928648 'hub' 'struct usb_hub *'     | | `-StringLiteral 0x12d941d20 <col:25> 'char[4]' lvalue \"STR\"     | `-CallExpr 0x12d941e58 <line:9:3, line:10:10> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12d941d70 <line:9:3> 'int ()' Function 0x12d941ba0 'dev_dbg' 'int ()'     |   |-RecoveryExpr 0x12d941dc8 <col:11, col:16> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x12d941d90 <col:11> 'struct usb_hub *' lvalue ParmVar 0x12d928648 'hub' 'struct usb_hub *'     |   `-StringLiteral 0x12d941e30 <col:25, line:10:5> 'char[7]' lvalue \"STRSTR\"     |-ForStmt 0x12d942668 <line:11:2, line:16:26>     | |-BinaryOperator 0x12d941ef8 <line:11:7, col:15> 'int' '='     | | |-DeclRefExpr 0x12d941eb8 <col:7> 'int' lvalue Var 0x12d9418d0 'port1' 'int'     | | `-IntegerLiteral 0x12d941ed8 <col:15> 'int' 1     | |-<<<NULL>>>     | |-BinaryOperator 0x12d941fe0 <col:18, col:38> 'int' contains-errors '<='     | | |-DeclRefExpr 0x12d941f18 <col:18> 'int' lvalue Var 0x12d9418d0 'port1' 'int'     | | `-CXXDependentScopeMemberExpr 0x12d941f98 <col:27, col:38> '<dependent type>' contains-errors lvalue ->maxchild     | |   `-RecoveryExpr 0x12d941f70 <col:27, col:32> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x12d941f38 <col:27> 'struct usb_hub *' lvalue ParmVar 0x12d928648 'hub' 'struct usb_hub *'     | |-UnaryOperator 0x12d942020 <col:48, col:53> 'int' postfix '++'     | | `-DeclRefExpr 0x12d942000 <col:48> 'int' lvalue Var 0x12d9418d0 'port1' 'int'     | `-IfStmt 0x12d942638 <line:12:3, line:16:26> has_else     |   |-CallExpr 0x12d9421b8 <line:12:7, col:38> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12d942118 <col:7> 'int ()' Function 0x12d942060 'test_bit' 'int ()'     |   | |-DeclRefExpr 0x12d942138 <col:16> 'int' lvalue Var 0x12d9418d0 'port1' 'int'     |   | `-RecoveryExpr 0x12d942190 <col:23, col:28> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x12d942158 <col:23> 'struct usb_hub *' lvalue ParmVar 0x12d928648 'hub' 'struct usb_hub *'     |   |-CallExpr 0x12d9423d8 <line:13:4, col:58> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12d9422c8 <col:4> 'int ()' Function 0x12d942210 'set_port_feature' 'int ()'     |   | |-RecoveryExpr 0x12d942320 <col:21, col:26> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x12d9422e8 <col:21> 'struct usb_hub *' lvalue ParmVar 0x12d928648 'hub' 'struct usb_hub *'     |   | |-DeclRefExpr 0x12d942348 <col:32> 'int' lvalue Var 0x12d9418d0 'port1' 'int'     |   | `-RecoveryExpr 0x12d9423b8 <col:39> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x12d942600 <line:15:4, line:16:26> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12d9424f0 <line:15:4> 'int ()' Function 0x12d942438 'usb_clear_port_feature' 'int ()'     |     |-RecoveryExpr 0x12d942548 <col:27, col:32> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x12d942510 <col:27> 'struct usb_hub *' lvalue ParmVar 0x12d928648 'hub' 'struct usb_hub *'     |     |-DeclRefExpr 0x12d942570 <col:38> 'int' lvalue Var 0x12d9418d0 'port1' 'int'     |     `-RecoveryExpr 0x12d9425e0 <line:16:7> '<dependent type>' contains-errors lvalue     `-IfStmt 0x12e008d90 <line:17:2, line:18:38>       |-RecoveryExpr 0x12d9426a0 <line:17:6> '<dependent type>' contains-errors lvalue       `-CallExpr 0x12e008d68 <line:18:3, col:38> 'int'         |-ImplicitCastExpr 0x12e008d50 <col:3> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x12d9427a0 <col:3> 'int ()' Function 0x12d9426e8 'msleep' 'int ()'         `-CallExpr 0x12e008d10 <col:10, col:37> 'int'           |-ImplicitCastExpr 0x12e008cf8 <col:10> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x12e008cb8 <col:10> 'int ()' Function 0x12e008c00 'hub_power_on_good_delay' 'int ()'           `-ImplicitCastExpr 0x12e008d38 <col:34> 'struct usb_hub *' <LValueToRValue>             `-DeclRefExpr 0x12e008cd8 <col:34> 'struct usb_hub *' lvalue ParmVar 0x12d928648 'hub' 'struct usb_hub *' ","20015":"`-FunctionDecl 0x11e128ba8  line:1:5 invalid wc_ecc_shared_secret_ex 'int (int *, int *, int *, int *)'   |-ParmVarDecl 0x11e128928 <col:29, col:38> col:38 referenced invalid private_key 'int *'   |-ParmVarDecl 0x11e1289a8 <col:51, col:62> col:62 invalid point 'int *'   |-ParmVarDecl 0x11e128a28 <line:2:29, col:35> col:35 invalid out 'int *'   |-ParmVarDecl 0x11e128aa8 <col:40, col:48> col:48 invalid outlen 'int *'   `-CompoundStmt 0x11e143a70 <line:3:1, line:66:1>     |-DeclStmt 0x11e128cf0 <line:4:5, col:12>     | `-VarDecl 0x11e128c88 <col:5, col:9> col:9 used err 'int'     |-IfStmt 0x11e142ca0 <line:6:5, line:9:5>     | |-BinaryOperator 0x11e142c20 <line:6:9, line:7:71> 'int' contains-errors '||'     | | |-BinaryOperator 0x11e128fa8 <line:6:9, col:56> 'int' contains-errors '||'     | | | |-BinaryOperator 0x11e128f48 <col:9, col:41> 'int' contains-errors '||'     | | | | |-BinaryOperator 0x11e128ee8 <col:9, col:24> 'int' contains-errors '=='     | | | | | |-RecoveryExpr 0x11e128d08 <col:9> '<dependent type>' contains-errors lvalue     | | | | | `-RecoveryExpr 0x11e128ec8 <col:24> '<dependent type>' contains-errors lvalue     | | | | `-BinaryOperator 0x11e128f28 <col:32, col:41> 'int' contains-errors '=='     | | | |   |-RecoveryExpr 0x11e128d60 <col:32> '<dependent type>' contains-errors lvalue     | | | |   `-RecoveryExpr 0x11e128f08 <col:41> '<dependent type>' contains-errors lvalue     | | | `-BinaryOperator 0x11e128f88 <col:49, col:56> 'int' contains-errors '=='     | | |   |-RecoveryExpr 0x11e128dd8 <col:49> '<dependent type>' contains-errors lvalue     | | |   `-RecoveryExpr 0x11e128f68 <col:56> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x11e142c00 <line:7:61, col:71> 'int' contains-errors '=='     | |   |-RecoveryExpr 0x11e128e50 <col:61> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x11e128fc8 <col:71> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x11e142c88 <col:77, line:9:5>     |   `-ReturnStmt 0x11e142c78 <line:8:9, col:16>     |     `-RecoveryExpr 0x11e142c58 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x11e142f20 <line:12:5, line:15:5>     | |-BinaryOperator 0x11e142ea0 <line:12:9, line:13:34> 'int' contains-errors '&&'     | | |-BinaryOperator 0x11e142e40 <line:12:9, col:30> 'int' contains-errors '!='     | | | |-CXXDependentScopeMemberExpr 0x11e142ce0 <col:9, col:22> '<dependent type>' contains-errors lvalue ->type     | | | | `-RecoveryExpr 0x11e142cc0 <col:9> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x11e142e20 <col:30> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x11e142e80 <line:13:13, col:34> 'int' contains-errors '!='     | |   |-CXXDependentScopeMemberExpr 0x11e142d80 <col:13, col:26> '<dependent type>' contains-errors lvalue ->type     | |   | `-RecoveryExpr 0x11e142d60 <col:13> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x11e142e60 <col:34> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x11e142f08 <col:55, line:15:5>     |   `-ReturnStmt 0x11e142ef8 <line:14:9, col:16>     |     `-RecoveryExpr 0x11e142ed8 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x11e1431d8 <line:18:5, line:19:16>     | |-BinaryOperator 0x11e143170 <line:18:9, col:50> 'int' contains-errors '=='     | | |-CallExpr 0x11e143128 <col:9, col:45> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x11e1430a0 <col:9> 'int ()' Function 0x11e142fe8 'wc_ecc_is_valid_idx' 'int ()'     | | | `-CXXDependentScopeMemberExpr 0x11e1430e0 <col:29, col:42> '<dependent type>' contains-errors lvalue ->idx     | | |   `-RecoveryExpr 0x11e1430c0 <col:29> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x11e143150 <col:50> 'int' 0     | `-ReturnStmt 0x11e1431c8 <line:19:9, col:16>     |   `-RecoveryExpr 0x11e1431a8 <col:16> '<dependent type>' contains-errors lvalue     |-SwitchStmt 0x11e143278 <line:21:5, line:51:5>     | |-ImplicitCastExpr 0x11e143260 <line:21:12, col:25> '<dependent type>' contains-errors <LValueToRValue>     | | `-CXXDependentScopeMemberExpr 0x11e143218 <col:12, col:25> '<dependent type>' contains-errors lvalue ->state     | |   `-RecoveryExpr 0x11e1431f8 <col:12> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x11e1437e8 <col:32, line:51:5>     |   |-BinaryOperator 0x11e1433b8 <line:24:13, col:34> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x11e143318 <col:13, col:26> '<dependent type>' contains-errors lvalue ->state     |   | | `-RecoveryExpr 0x11e1432f0 <col:13> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x11e1432d0 <col:13> 'int *' lvalue ParmVar 0x11e128928 'private_key' 'int *'     |   | `-RecoveryExpr 0x11e143398 <col:34> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x11e1435b8 <line:26:13, col:75> 'int' contains-errors '='     |   | |-DeclRefExpr 0x11e1433d8 <col:13> 'int' lvalue Var 0x11e128c88 'err' 'int'     |   | `-CallExpr 0x11e143578 <col:19, col:75> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x11e1434d8 <col:19> 'int ()' Function 0x11e143420 'wc_ecc_shared_secret_gen' 'int ()'     |   |   |-RecoveryExpr 0x11e1434f8 <col:44> '<dependent type>' contains-errors lvalue     |   |   |-RecoveryExpr 0x11e143518 <col:57> '<dependent type>' contains-errors lvalue     |   |   |-RecoveryExpr 0x11e143538 <col:64> '<dependent type>' contains-errors lvalue     |   |   `-RecoveryExpr 0x11e143558 <col:69> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x11e143670 <line:27:13, line:29:13>     |   | |-BinaryOperator 0x11e143630 <line:27:17, col:23> 'int' '<'     |   | | |-ImplicitCastExpr 0x11e143618 <col:17> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x11e1435d8 <col:17> 'int' lvalue Var 0x11e128c88 'err' 'int'     |   | | `-IntegerLiteral 0x11e1435f8 <col:23> 'int' 0     |   | `-CompoundStmt 0x11e143658 <col:26, line:29:13>     |   |   `-BreakStmt 0x11e143650 <line:28:17>     |   |-BinaryOperator 0x11e143778 <line:46:13, col:19> 'int' '='     |   | |-DeclRefExpr 0x11e143738 <col:13> 'int' lvalue Var 0x11e128c88 'err' 'int'     |   | `-IntegerLiteral 0x11e143758 <col:19> 'int' 0     |   |-BreakStmt 0x11e143798 <line:47:13>     |   `-DefaultStmt 0x11e1437c8 <line:49:9, col:16>     |     `-NullStmt 0x11e1437c0 <col:16>     |-IfStmt 0x11e143978 <line:54:5, line:57:5>     | |-RecoveryExpr 0x11e143848 <line:54:9, col:16> '_Bool' contains-errors     | `-CompoundStmt 0x11e143958 <col:30, line:57:5>     |   |-UnaryOperator 0x11e1438f8 <line:55:9, col:27> '<dependent type>' contains-errors postfix '++' cannot overflow     |   | `-CXXDependentScopeMemberExpr 0x11e1438b0 <col:9, col:22> '<dependent type>' contains-errors lvalue ->state     |   |   `-RecoveryExpr 0x11e143888 <col:9> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x11e143868 <col:9> 'int *' lvalue ParmVar 0x11e128928 'private_key' 'int *'     |   `-ReturnStmt 0x11e143948 <line:56:9, col:16>     |     `-ImplicitCastExpr 0x11e143930 <col:16> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x11e143910 <col:16> 'int' lvalue Var 0x11e128c88 'err' 'int'     `-ReturnStmt 0x11e143a60 <line:65:5, col:12>       `-ImplicitCastExpr 0x11e143a48 <col:12> 'int' <LValueToRValue>         `-DeclRefExpr 0x11e143a28 <col:12> 'int' lvalue Var 0x11e128c88 'err' 'int' ","19629":"`-FunctionDecl 0x1420266d0  line:1:20 hns_nic_reclaim_one_desc 'void (struct hnae_ring *, int *, int *)' static inline   |-ParmVarDecl 0x14200e248 <col:45, col:63> col:63 used ring 'struct hnae_ring *'   |-ParmVarDecl 0x14200e2f8 <line:2:10, col:15> col:15 used bytes 'int *'   |-ParmVarDecl 0x14200e378 <col:22, col:27> col:27 used pkts 'int *'   `-CompoundStmt 0x1420270c8 <line:3:1, line:12:1>     |-DeclStmt 0x142026af0 <line:4:2, col:68>     | |-RecordDecl 0x1420267d8 <col:2, col:9> col:9 struct hnae_desc_cb     | `-VarDecl 0x142026948 <col:2, col:67> col:23 used desc_cb 'struct hnae_desc_cb *' cinit     |   `-UnaryOperator 0x142026ac0 <col:33, col:67> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-ArraySubscriptExpr 0x142026aa0 <col:34, col:67> '<dependent type>' contains-errors lvalue     |       |-ImplicitCastExpr 0x142026a70 <col:34, col:40> '<dependent type>' contains-errors <LValueToRValue>     |       | `-RecoveryExpr 0x1420269e8 <col:34, col:40> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x1420269b0 <col:34> 'struct hnae_ring *' lvalue ParmVar 0x14200e248 'ring' 'struct hnae_ring *'     |       `-ImplicitCastExpr 0x142026a88 <col:48, col:54> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x142026a48 <col:48, col:54> '<dependent type>' contains-errors lvalue     |           `-DeclRefExpr 0x142026a10 <col:48> 'struct hnae_ring *' lvalue ParmVar 0x14200e248 'ring' 'struct hnae_ring *'     |-CompoundAssignOperator 0x142026cf8 <line:7:2, col:23> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-ParenExpr 0x142026c78 <col:2, col:9> 'int' lvalue     | | `-UnaryOperator 0x142026c60 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow     | |   `-ImplicitCastExpr 0x142026c48 <col:4> 'int *' <LValueToRValue>     | |     `-DeclRefExpr 0x142026c28 <col:4> 'int *' lvalue ParmVar 0x14200e2f8 'bytes' 'int *'     | `-RecoveryExpr 0x142026cd0 <col:14, col:23> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x142026c98 <col:14> 'struct hnae_desc_cb *' contains-errors lvalue Var 0x142026948 'desc_cb' 'struct hnae_desc_cb *'     |-CallExpr 0x142026ee0 <line:9:2, col:51> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142026e40 <col:2> 'int ()' Function 0x142026d88 'hnae_free_buffer_detach' 'int ()'     | |-DeclRefExpr 0x142026e60 <col:26> 'struct hnae_ring *' lvalue ParmVar 0x14200e248 'ring' 'struct hnae_ring *'     | `-RecoveryExpr 0x142026eb8 <col:32, col:38> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x142026e80 <col:32> 'struct hnae_ring *' lvalue ParmVar 0x14200e248 'ring' 'struct hnae_ring *'     `-CallExpr 0x142027098 <line:11:2, col:38> '<dependent type>' contains-errors       |-DeclRefExpr 0x142026ff0 <col:2> 'int ()' Function 0x142026f38 'ring_ptr_move_fw' 'int ()'       |-DeclRefExpr 0x142027010 <col:19> 'struct hnae_ring *' lvalue ParmVar 0x14200e248 'ring' 'struct hnae_ring *'       `-RecoveryExpr 0x142027078 <col:25> '<dependent type>' contains-errors lvalue ","19924":"`-FunctionDecl 0x15b9418d8  line:1:5 invalid smb_vfs_call_sys_acl_create_entry 'int (struct vfs_handle_struct *, int *, int *)'   |-ParmVarDecl 0x15b928648 <col:39, col:65> col:65 used handle 'struct vfs_handle_struct *'   |-ParmVarDecl 0x15b928718 <line:2:11, col:22> col:22 invalid pacl 'int *'   |-ParmVarDecl 0x15b928798 <col:28, col:45> col:45 invalid pentry 'int *'   `-CompoundStmt 0x15b941ce8 <line:3:1, line:6:1>     |-CallExpr 0x15b941b70 <line:4:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15b941af0 <col:2> 'int ()' Function 0x15b941a38 'VFS_FIND' 'int ()'     | `-RecoveryExpr 0x15b941b50 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x15b941cd8 <line:5:2, col:63>       `-CallExpr 0x15b941ca0 <col:9, col:63> '<dependent type>' contains-errors         |-CXXDependentScopeMemberExpr 0x15b941bf8 <col:9, col:22> '<dependent type>' contains-errors lvalue ->sys_acl_create_entry         | `-RecoveryExpr 0x15b941bd0 <col:9, col:17> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x15b941b98 <col:9> 'struct vfs_handle_struct *' lvalue ParmVar 0x15b928648 'handle' 'struct vfs_handle_struct *'         |-DeclRefExpr 0x15b941c40 <col:43> 'struct vfs_handle_struct *' lvalue ParmVar 0x15b928648 'handle' 'struct vfs_handle_struct *'         |-RecoveryExpr 0x15b941c60 <col:51> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x15b941c80 <col:57> '<dependent type>' contains-errors lvalue ","19388":"`-FunctionDecl 0x1360276e8  line:1:1 invalid glue 'int (int, int)'   |-ParmVarDecl 0x13600e128 <col:6> col:6 cirrus_bitblt_rop_fwd_ 'int'   |-ParmVarDecl 0x13600e0a8 <col:30> col:30 ROP_NAME 'int'   `-CompoundStmt 0x136027f80 <line:5:1, line:23:1>     |-DeclStmt 0x1360278b8 <line:6:5, col:12>     | |-VarDecl 0x1360277b8 <col:5, col:9> col:9 used x 'int'     | `-VarDecl 0x136027838 <col:5, col:11> col:11 used y 'int'     |-IfStmt 0x1360279b8 <line:10:5, line:12:5>     | |-RecoveryExpr 0x136027970 <line:10:9, col:55> '_Bool' contains-errors     | `-CompoundStmt 0x1360279a0 <col:58, line:12:5>     |   `-ReturnStmt 0x136027990 <line:11:9>     `-ForStmt 0x136027f48 <line:14:5, line:22:5>       |-BinaryOperator 0x136027a18 <line:14:10, col:14> 'int' '='       | |-DeclRefExpr 0x1360279d8 <col:10> 'int' lvalue Var 0x136027838 'y' 'int'       | `-IntegerLiteral 0x1360279f8 <col:14> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x136027ab0 <col:17, col:21> 'int' contains-errors '<'       | |-DeclRefExpr 0x136027a38 <col:17> 'int' lvalue Var 0x136027838 'y' 'int'       | `-RecoveryExpr 0x136027a90 <col:21> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x136027af0 <col:32, col:33> 'int' postfix '++'       | `-DeclRefExpr 0x136027ad0 <col:32> 'int' lvalue Var 0x136027838 'y' 'int'       `-CompoundStmt 0x136027f30 <col:37, line:22:5>         `-ForStmt 0x136027ef8 <line:15:9, line:19:9>           |-BinaryOperator 0x136027b48 <line:15:14, col:18> 'int' '='           | |-DeclRefExpr 0x136027b08 <col:14> 'int' lvalue Var 0x1360277b8 'x' 'int'           | `-IntegerLiteral 0x136027b28 <col:18> 'int' 0           |-<<<NULL>>>           |-BinaryOperator 0x136027be0 <col:21, col:25> 'int' contains-errors '<'           | |-DeclRefExpr 0x136027b68 <col:21> 'int' lvalue Var 0x1360277b8 'x' 'int'           | `-RecoveryExpr 0x136027bc0 <col:25> '<dependent type>' contains-errors lvalue           |-UnaryOperator 0x136027c20 <col:35, col:36> 'int' postfix '++'           | `-DeclRefExpr 0x136027c00 <col:35> 'int' lvalue Var 0x1360277b8 'x' 'int'           `-CompoundStmt 0x136027ee0 <col:40, line:19:9>             `-CallExpr 0x136027eb0 <line:16:13, col:29> '<dependent type>' contains-errors               |-DeclRefExpr 0x136027d90 <col:13> 'int ()' Function 0x136027cd8 'ROP_OP' 'int ()'               |-RecoveryExpr 0x136027e40 <col:20> '<dependent type>' contains-errors lvalue               `-UnaryOperator 0x136027e98 <col:25, col:26> '<dependent type>' contains-errors prefix '*' cannot overflow                 `-ImplicitCastExpr 0x136027e80 <col:26> '<dependent type>' contains-errors <LValueToRValue>                   `-RecoveryExpr 0x136027e60 <col:26> '<dependent type>' contains-errors lvalue ","19407":"`-FunctionDecl 0x13c9281f8  line:1:1 invalid gsm_xsmp_server_start 'int (int *)'   |-ParmVarDecl 0x13c928128 <col:24, col:39> col:39 invalid server 'int *'   `-CompoundStmt 0x13c941ed8 <line:2:1, line:22:1>     |-DeclStmt 0x13c928340 <line:4:9, col:22>     | `-VarDecl 0x13c9282d8 <col:9, col:21> col:21 used i 'int'     `-ForStmt 0x13c941ea0 <line:6:9, line:21:9>       |-BinaryOperator 0x13c928398 <line:6:14, col:18> 'int' '='       | |-DeclRefExpr 0x13c928358 <col:14> 'int' lvalue Var 0x13c9282d8 'i' 'int'       | `-IntegerLiteral 0x13c928378 <col:18> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x13c928488 <col:21, col:39> 'int' contains-errors '<'       | |-DeclRefExpr 0x13c9283b8 <col:21> 'int' lvalue Var 0x13c9282d8 'i' 'int'       | `-CXXDependentScopeMemberExpr 0x13c928440 <col:25, col:39> '<dependent type>' contains-errors lvalue ->num_local_xsmp_sockets       |   `-CXXDependentScopeMemberExpr 0x13c9283f8 <col:25, col:33> '<dependent type>' contains-errors lvalue ->priv       |     `-RecoveryExpr 0x13c9283d8 <col:25> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x13c9284c8 <col:63, col:64> 'int' postfix '++'       | `-DeclRefExpr 0x13c9284a8 <col:63> 'int' lvalue Var 0x13c9282d8 'i' 'int'       `-CompoundStmt 0x13c941e90 <col:68, line:21:9> ","20132":"`-FunctionDecl 0x149128288  line:1:1 invalid add_opt_anc_info 'int (int *, int)'   |-ParmVarDecl 0x149128128 <col:18, col:30> col:30 referenced invalid to 'int *'   |-ParmVarDecl 0x1491281a8 <col:34, col:38> col:38 used anc 'int'   `-CompoundStmt 0x149128758 <line:2:1, line:7:1>     `-IfStmt 0x149128728 <line:3:3, line:6:25> has_else       |-CallExpr 0x149128528 <line:3:7, col:25> 'int'       | |-ImplicitCastExpr 0x149128510 <col:7> 'int (*)()' <FunctionToPointerDecay>       | | `-DeclRefExpr 0x1491284a0 <col:7> 'int ()' Function 0x1491283e8 'is_left_anchor' 'int ()'       | `-ImplicitCastExpr 0x149128550 <col:22> 'int' <LValueToRValue>       |   `-DeclRefExpr 0x1491284c0 <col:22> 'int' lvalue ParmVar 0x1491281a8 'anc' 'int'       |-CompoundAssignOperator 0x149128618 <line:4:5, col:24> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'       | |-CXXDependentScopeMemberExpr 0x1491285b0 <col:5, col:9> '<dependent type>' contains-errors lvalue ->left_anchor       | | `-RecoveryExpr 0x149128588 <col:5> '<dependent type>' contains-errors lvalue       | |   `-DeclRefExpr 0x149128568 <col:5> 'int *' lvalue ParmVar 0x149128128 'to' 'int *'       | `-DeclRefExpr 0x1491285f8 <col:24> 'int' lvalue ParmVar 0x1491281a8 'anc' 'int'       `-CompoundAssignOperator 0x1491286f8 <line:6:5, col:25> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'         |-CXXDependentScopeMemberExpr 0x149128690 <col:5, col:9> '<dependent type>' contains-errors lvalue ->right_anchor         | `-RecoveryExpr 0x149128668 <col:5> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x149128648 <col:5> 'int *' lvalue ParmVar 0x149128128 'to' 'int *'         `-DeclRefExpr 0x1491286d8 <col:25> 'int' lvalue ParmVar 0x1491281a8 'anc' 'int' ","20165":"`-FunctionDecl 0x1480fae88  line:1:1 invalid gdm_session_accredit 'int (int *, const char *)'   |-ParmVarDecl 0x1480fad28 <col:23, col:35> col:35 invalid self 'int *'   |-ParmVarDecl 0x1480fada8 <line:2:23, col:35> col:35 used service_name 'const char *'   `-CompoundStmt 0x148114638 <line:3:1, line:16:1>     |-CallExpr 0x1480fb218 <line:6:9, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1480fb0b0 <col:9> 'int ()' Function 0x1480faff8 'g_return_if_fail' 'int ()'     | `-CallExpr 0x1480fb1f0 <col:27, col:47> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1480fb1b0 <col:27> 'int ()' Function 0x1480fb0f8 'GDM_IS_SESSION' 'int ()'     |   `-RecoveryExpr 0x1480fb1d0 <col:43> '<dependent type>' contains-errors lvalue     `-IfStmt 0x148114618 <line:9:9, line:14:9>       |-BinaryOperator 0x148114440 <line:9:13, col:29> 'int' contains-errors '!='       | |-RecoveryExpr 0x148114400 <col:13> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x148114420 <col:29> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x148114608 <col:35, line:14:9> ","19259":"`-FunctionDecl 0x145141800  line:1:20 invalid tcp_packet_delayed 'int (const struct tcp_sock *)' static inline   |-ParmVarDecl 0x145128668 <col:39, col:62> col:62 used tp 'const struct tcp_sock *'   `-CompoundStmt 0x145141dd8 <line:2:1, line:6:1>     `-ReturnStmt 0x145141dc8 <line:3:2, line:5:51>       `-BinaryOperator 0x145141da8 <line:3:9, line:5:51> 'int' contains-errors '||'         |-UnaryOperator 0x145141928 <line:3:9, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow         | `-ImplicitCastExpr 0x145141910 <col:10, col:14> '<dependent type>' contains-errors <LValueToRValue>         |   `-RecoveryExpr 0x1451418e8 <col:10, col:14> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x1451418b0 <col:10> 'const struct tcp_sock *' lvalue ParmVar 0x145128668 'tp' 'const struct tcp_sock *'         `-ParenExpr 0x145141d88 <line:4:3, line:5:51> 'int' contains-errors           `-BinaryOperator 0x145141d68 <line:4:4, line:5:50> 'int' contains-errors '&&'             |-BinaryOperator 0x145141a90 <line:4:4, col:40> 'int' contains-errors '&&'             | |-CXXDependentScopeMemberExpr 0x1451419a0 <col:4, col:15> '<dependent type>' contains-errors lvalue .saw_tstamp             | | `-RecoveryExpr 0x145141978 <col:4, col:8> '<dependent type>' contains-errors lvalue             | |   `-DeclRefExpr 0x145141940 <col:4> 'const struct tcp_sock *' lvalue ParmVar 0x145128668 'tp' 'const struct tcp_sock *'             | `-CXXDependentScopeMemberExpr 0x145141a48 <col:29, col:40> '<dependent type>' contains-errors lvalue .rcv_tsecr             |   `-RecoveryExpr 0x145141a20 <col:29, col:33> '<dependent type>' contains-errors lvalue             |     `-DeclRefExpr 0x1451419e8 <col:29> 'const struct tcp_sock *' lvalue ParmVar 0x145128668 'tp' 'const struct tcp_sock *'             `-CallExpr 0x145141d38 <line:5:4, col:50> '<dependent type>' contains-errors               |-DeclRefExpr 0x145141c10 <col:4> 'int ()' Function 0x145141b58 'before' 'int ()'               |-CXXDependentScopeMemberExpr 0x145141c90 <col:11, col:22> '<dependent type>' contains-errors lvalue .rcv_tsecr               | `-RecoveryExpr 0x145141c68 <col:11, col:15> '<dependent type>' contains-errors lvalue               |   `-DeclRefExpr 0x145141c30 <col:11> 'const struct tcp_sock *' lvalue ParmVar 0x145128668 'tp' 'const struct tcp_sock *'               `-RecoveryExpr 0x145141d10 <col:33, col:37> '<dependent type>' contains-errors lvalue                 `-DeclRefExpr 0x145141cd8 <col:33> 'const struct tcp_sock *' lvalue ParmVar 0x145128668 'tp' 'const struct tcp_sock *' ","19717":"`-FunctionDecl 0x1571281a8  line:1:1 add_send_receive_history 'int (char *)'   |-ParmVarDecl 0x1571280d8 <col:27, col:33> col:33 used fname 'char *'   `-CompoundStmt 0x157128678 <line:2:1, line:6:1>     |-CallExpr 0x157128458 <line:3:2, col:27> 'int'     | |-ImplicitCastExpr 0x157128440 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1571283d0 <col:2> 'int ()' Function 0x157128318 'linenoiseHistoryAdd' 'int ()'     | `-ImplicitCastExpr 0x157128480 <col:22> 'char *' <LValueToRValue>     |   `-DeclRefExpr 0x1571283f0 <col:22> 'char *' lvalue ParmVar 0x1571280d8 'fname' 'char *'     `-IfStmt 0x157128658 <line:4:2, line:5:54>       |-RecoveryExpr 0x1571284b0 <line:4:6> '<dependent type>' contains-errors lvalue       `-CallExpr 0x157128630 <line:5:3, col:54> '<dependent type>' contains-errors         |-DeclRefExpr 0x1571285b0 <col:3> 'int ()' Function 0x1571284f8 'linenoiseHistorySave' 'int ()'         `-RecoveryExpr 0x157128610 <col:24> '<dependent type>' contains-errors lvalue ","19995":"`-FunctionDecl 0x11d9281f8  line:1:31 invalid get_transport_internal 'int *(int *)' static inline   |-ParmVarDecl 0x11d928128 <col:54, col:64> col:64 invalid ssl 'int *'   `-CompoundStmt 0x11d9282c0 <line:2:1, line:5:1> ","19793":"`-FunctionDecl 0x13e00ddc8  line:1:22 invalid decode_digit 'int (int)' static   |-ParmVarDecl 0x13e00dcf0 <col:35, col:49> col:49 invalid cp 'int'   `-CompoundStmt 0x13e00e190 <line:2:1, line:5:1> ","19844":"`-FunctionDecl 0x12b026600  line:1:1 parse_CLONE 'int (char *, const struct ofpact_parse_params *)'   |-ParmVarDecl 0x12b00dcd8 <col:13, col:19> col:19 used arg 'char *'   |-ParmVarDecl 0x12b00e2c8 <col:24, col:58> col:58 used pp 'const struct ofpact_parse_params *'   `-CompoundStmt 0x12b029768 <line:2:1, line:20:1>     |-DeclStmt 0x12b026958 <line:3:5, col:58>     | `-VarDecl 0x12b026730 <col:5, col:18> col:18 invalid clone_offset 'const int'     |-DeclStmt 0x12b026ce0 <line:4:5, col:62>     | |-RecordDecl 0x12b026970 <col:5, col:12> col:12 struct ofpact_nest     | `-VarDecl 0x12b026ad8 <col:5, col:61> col:25 used clone 'struct ofpact_nest *' cinit     |   `-CallExpr 0x12b026ca0 <col:33, col:61> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12b026c20 <col:33> 'int ()' Function 0x12b026b68 'ofpact_put_CLONE' 'int ()'     |     `-RecoveryExpr 0x12b026c78 <col:50, col:54> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x12b026c40 <col:50> 'const struct ofpact_parse_params *' lvalue ParmVar 0x12b00e2c8 'pp' 'const struct ofpact_parse_params *'     |-DeclStmt 0x12b026d78 <line:5:5, col:16>     | `-VarDecl 0x12b026d10 <col:5, col:11> col:11 used error 'char *'     |-BinaryOperator 0x12b0273f0 <line:11:5, col:26> 'struct ofpact_nest *' contains-errors '='     | |-DeclRefExpr 0x12b027328 <col:5> 'struct ofpact_nest *' contains-errors lvalue Var 0x12b026ad8 'clone' 'struct ofpact_nest *'     | `-CXXDependentScopeMemberExpr 0x12b0273a8 <col:13, col:26> '<dependent type>' contains-errors lvalue ->header     |   `-RecoveryExpr 0x12b027380 <col:13, col:17> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12b027348 <col:13> 'const struct ofpact_parse_params *' lvalue ParmVar 0x12b00e2c8 'pp' 'const struct ofpact_parse_params *'     |-IfStmt 0x12b0293f0 <line:13:5, line:15:5>     | |-CallExpr 0x12b027570 <line:13:9, col:37> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x12b0274f0 <col:9> 'int ()' Function 0x12b027438 'ofpbuf_oversized' 'int ()'     | | `-RecoveryExpr 0x12b027548 <col:26, col:30> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12b027510 <col:26> 'const struct ofpact_parse_params *' lvalue ParmVar 0x12b00e2c8 'pp' 'const struct ofpact_parse_params *'     | `-CompoundStmt 0x12b0293d8 <col:40, line:15:5>     |   `-ReturnStmt 0x12b0293c8 <line:14:9, col:31>     |     `-CallExpr 0x12b029388 <col:16, col:31> 'int'     |       |-ImplicitCastExpr 0x12b029370 <col:16> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x12b0292b8 <col:16> 'int ()' Function 0x12b029200 'xasprintf' 'int ()'     |       `-ImplicitCastExpr 0x12b0293b0 <col:26> 'char *' <ArrayToPointerDecay>     |         `-StringLiteral 0x12b029320 <col:26> 'char[4]' lvalue \"STR\"     |-CallExpr 0x12b029608 <line:17:5, col:44> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12b0294f0 <col:5> 'int ()' Function 0x12b029438 'ofpact_finish_CLONE' 'int ()'     | |-RecoveryExpr 0x12b029548 <col:25, col:29> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12b029510 <col:25> 'const struct ofpact_parse_params *' lvalue ParmVar 0x12b00e2c8 'pp' 'const struct ofpact_parse_params *'     | `-UnaryOperator 0x12b0295f0 <col:38, col:39> 'struct ofpact_nest **' contains-errors prefix '&' cannot overflow     |   `-DeclRefExpr 0x12b029570 <col:39> 'struct ofpact_nest *' contains-errors lvalue Var 0x12b026ad8 'clone' 'struct ofpact_nest *'     |-CallExpr 0x12b0296d8 <line:18:5, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12b029638 <col:5> 'int ()' Function 0x12b0271a0 'ofpbuf_push_uninit' 'int ()'     | |-RecoveryExpr 0x12b029690 <col:24, col:28> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12b029658 <col:24> 'const struct ofpact_parse_params *' lvalue ParmVar 0x12b00e2c8 'pp' 'const struct ofpact_parse_params *'     | `-RecoveryExpr 0x12b0296b8 <col:37> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12b029758 <line:19:5, col:12>       `-ImplicitCastExpr 0x12b029740 <col:12> 'int' <PointerToIntegral>         `-ImplicitCastExpr 0x12b029728 <col:12> 'char *' <LValueToRValue>           `-DeclRefExpr 0x12b029708 <col:12> 'char *' lvalue Var 0x12b026d10 'error' 'char *' ","19209":"`-FunctionDecl 0x14a940a00  line:2:20 skb_probe_transport_header 'void (struct sk_buff *, const int)' static inline   |-ParmVarDecl 0x14a928648 <col:47, col:63> col:63 used skb 'struct sk_buff *'   |-ParmVarDecl 0x14a9286c8 <line:3:12, col:22> col:22 used offset_hint 'const int'   `-CompoundStmt 0x14a941380 <line:4:1, line:12:46>     |-DeclStmt 0x14a940c78 <line:5:2, col:23>     | |-RecordDecl 0x14a940b00 <col:2, col:9> col:9 struct flow_keys     | `-VarDecl 0x14a940bf8 <col:2, col:19> col:19 invalid keys 'struct flow_keys'     `-IfStmt 0x14a941350 <line:7:2, line:12:44> has_else       |-CallExpr 0x14a940e48 <line:7:6, col:38> 'int'       | |-ImplicitCastExpr 0x14a940e30 <col:6> 'int (*)()' <FunctionToPointerDecay>       | | `-DeclRefExpr 0x14a940dc0 <col:6> 'int ()' Function 0x14a940d08 'skb_transport_header_was_set' 'int ()'       | `-ImplicitCastExpr 0x14a940e70 <col:35> 'struct sk_buff *' <LValueToRValue>       |   `-DeclRefExpr 0x14a940de0 <col:35> 'struct sk_buff *' lvalue ParmVar 0x14a928648 'skb' 'struct sk_buff *'       |-ReturnStmt 0x14a940e88 <line:8:3>       `-IfStmt 0x14a941320 <line:9:7, line:12:44> has_else         |-CallExpr 0x14a941010 <line:9:11, col:51> '<dependent type>' contains-errors         | |-DeclRefExpr 0x14a940f78 <col:11> 'int ()' Function 0x14a940ec0 'skb_flow_dissect_flow_keys' 'int ()'         | |-DeclRefExpr 0x14a940f98 <col:38> 'struct sk_buff *' lvalue ParmVar 0x14a928648 'skb' 'struct sk_buff *'         | |-UnaryOperator 0x14a940fd8 <col:43, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow         | | `-RecoveryExpr 0x14a940fb8 <col:44> '<dependent type>' contains-errors lvalue         | `-IntegerLiteral 0x14a940ff0 <col:50> 'int' 0         |-CallExpr 0x14a941218 <line:10:3, col:51> '<dependent type>' contains-errors         | |-DeclRefExpr 0x14a941128 <col:3> 'int ()' Function 0x14a941070 'skb_set_transport_header' 'int ()'         | |-DeclRefExpr 0x14a941148 <col:28> 'struct sk_buff *' lvalue ParmVar 0x14a928648 'skb' 'struct sk_buff *'         | `-CXXDependentScopeMemberExpr 0x14a9411d0 <col:33, col:46> '<dependent type>' contains-errors lvalue .thoff         |   `-CXXDependentScopeMemberExpr 0x14a941188 <col:33, col:38> '<dependent type>' contains-errors lvalue .control         |     `-RecoveryExpr 0x14a941168 <col:33> '<dependent type>' contains-errors lvalue         `-CallExpr 0x14a9412c0 <line:12:3, col:44> 'int'           |-ImplicitCastExpr 0x14a9412a8 <col:3> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x14a941248 <col:3> 'int ()' Function 0x14a941070 'skb_set_transport_header' 'int ()'           |-ImplicitCastExpr 0x14a9412f0 <col:28> 'struct sk_buff *' <LValueToRValue>           | `-DeclRefExpr 0x14a941268 <col:28> 'struct sk_buff *' lvalue ParmVar 0x14a928648 'skb' 'struct sk_buff *'           `-ImplicitCastExpr 0x14a941308 <col:33> 'int' <LValueToRValue>             `-DeclRefExpr 0x14a941288 <col:33> 'const int' lvalue ParmVar 0x14a9286c8 'offset_hint' 'const int' ","19277":"`-FunctionDecl 0x14180df18  line:1:5 invalid rand_pool_add_end 'int (int *, int, int)'   |-ParmVarDecl 0x14180dd28 <col:23, col:34> col:34 referenced invalid pool 'int *'   |-ParmVarDecl 0x14180dda8 <col:40, col:47> col:47 invalid len 'int'   |-ParmVarDecl 0x14180de28 <col:52, col:59> col:59 invalid entropy 'int'   `-CompoundStmt 0x141828050 <line:2:1, line:14:1>     |-IfStmt 0x14180e3a0 <line:3:5, line:6:5>     | |-BinaryOperator 0x14180e0e8 <line:3:9, col:37> 'int' contains-errors '>'     | | |-RecoveryExpr 0x14180dfd8 <col:9> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x14180e0c8 <col:15, col:37> '<dependent type>' contains-errors '-'     | |   |-CXXDependentScopeMemberExpr 0x14180e018 <col:15, col:21> '<dependent type>' contains-errors lvalue ->max_len     | |   | `-RecoveryExpr 0x14180dff8 <col:15> '<dependent type>' contains-errors lvalue     | |   `-CXXDependentScopeMemberExpr 0x14180e080 <col:31, col:37> '<dependent type>' contains-errors lvalue ->len     | |     `-RecoveryExpr 0x14180e060 <col:31> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14180e380 <col:42, line:6:5>     |   |-CallExpr 0x14180e320 <line:4:9, col:70> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14180e260 <col:9> 'int ()' Function 0x14180e1a8 'RANDerr' 'int ()'     |   | |-RecoveryExpr 0x14180e2e0 <col:17> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x14180e300 <col:43> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x14180e370 <line:5:9, col:16>     |     `-IntegerLiteral 0x14180e350 <col:16> 'int' 0     |-IfStmt 0x141828000 <line:8:5, line:11:5>     | |-BinaryOperator 0x141827e00 <line:8:9, col:15> 'int' contains-errors '>'     | | |-RecoveryExpr 0x14180e3c0 <col:9> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x14180e3e0 <col:15> 'int' 0     | `-CompoundStmt 0x141827fe0 <col:18, line:11:5>     |   |-CompoundAssignOperator 0x141827ed0 <line:9:9, col:22> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   | |-CXXDependentScopeMemberExpr 0x141827e68 <col:9, col:15> '<dependent type>' contains-errors lvalue ->len     |   | | `-RecoveryExpr 0x141827e40 <col:9> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x141827e20 <col:9> 'int *' lvalue ParmVar 0x14180dd28 'pool' 'int *'     |   | `-RecoveryExpr 0x141827eb0 <col:22> '<dependent type>' contains-errors lvalue     |   `-CompoundAssignOperator 0x141827fb0 <line:10:9, col:26> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |     |-CXXDependentScopeMemberExpr 0x141827f48 <col:9, col:15> '<dependent type>' contains-errors lvalue ->entropy     |     | `-RecoveryExpr 0x141827f20 <col:9> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x141827f00 <col:9> 'int *' lvalue ParmVar 0x14180dd28 'pool' 'int *'     |     `-RecoveryExpr 0x141827f90 <col:26> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x141828040 <line:13:5, col:12>       `-IntegerLiteral 0x141828020 <col:12> 'int' 1 ","19518":"`-FunctionDecl 0x13900ddc8  line:1:1 invalid request_init 'int (int)'   |-ParmVarDecl 0x13900dcf0 <col:14, col:20> col:20 invalid mod 'int'   `-CompoundStmt 0x13980b378 <col:25, line:72:1>     |-CallExpr 0x13900e2b0 <line:4:5, col:47> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13900e1a0 <col:5> 'int ()' Function 0x13900e0e8 'rb_define_method' 'int ()'     | |-RecoveryExpr 0x13900e270 <col:22> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x13900e1d8 <col:33> 'char[4]' lvalue \"STR\"     | |-RecoveryExpr 0x13900e290 <col:40> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x13900e210 <col:46> 'int' 0     |-CallExpr 0x139027e00 <line:5:5, col:47> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13900e2f0 <col:5> 'int ()' Function 0x13900e0e8 'rb_define_method' 'int ()'     | |-RecoveryExpr 0x13900e3c0 <col:22> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x13900e328 <col:33> 'char[4]' lvalue \"STR\"     | |-RecoveryExpr 0x13900e3e0 <col:40> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x13900e360 <col:46> 'int' 0     |-CallExpr 0x139027f50 <line:6:5, col:47> '<dependent type>' contains-errors     | |-DeclRefExpr 0x139027e40 <col:5> 'int ()' Function 0x13900e0e8 'rb_define_method' 'int ()'     | |-RecoveryExpr 0x139027f10 <col:22> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x139027e78 <col:33> 'char[4]' lvalue \"STR\"     | |-RecoveryExpr 0x139027f30 <col:40> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x139027eb0 <col:46> 'int' 0     |-CallExpr 0x1390280a0 <line:7:5, col:47> '<dependent type>' contains-errors     | |-DeclRefExpr 0x139027f90 <col:5> 'int ()' Function 0x13900e0e8 'rb_define_method' 'int ()'     | |-RecoveryExpr 0x139028060 <col:22> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x139027fc8 <col:33> 'char[4]' lvalue \"STR\"     | |-RecoveryExpr 0x139028080 <col:40> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x139028000 <col:46> 'int' 0     |-CallExpr 0x1390281f0 <line:8:5, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1390280e0 <col:5> 'int ()' Function 0x13900e0e8 'rb_define_method' 'int ()'     | |-RecoveryExpr 0x1390281b0 <col:22> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x139028118 <col:33> 'char[4]' lvalue \"STR\"     | |-RecoveryExpr 0x1390281d0 <col:40> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x139028150 <col:48> 'int' 0     |-CallExpr 0x139028340 <line:9:5, col:54> '<dependent type>' contains-errors     | |-DeclRefExpr 0x139028230 <col:5> 'int ()' Function 0x13900e0e8 'rb_define_method' 'int ()'     | |-RecoveryExpr 0x139028300 <col:22> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x139028268 <col:33> 'char[4]' lvalue \"STR\"     | |-RecoveryExpr 0x139028320 <col:40> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x1390282a0 <col:53> 'int' 0     `-CallExpr 0x139028490 <line:10:5, col:52> '<dependent type>' contains-errors       |-DeclRefExpr 0x139028380 <col:5> 'int ()' Function 0x13900e0e8 'rb_define_method' 'int ()'       |-RecoveryExpr 0x139028450 <col:22> '<dependent type>' contains-errors lvalue       |-StringLiteral 0x1390283b8 <col:33> 'char[4]' lvalue \"STR\"       |-RecoveryExpr 0x139028470 <col:40> '<dependent type>' contains-errors lvalue       `-IntegerLiteral 0x1390283f0 <col:51> 'int' 0 ","19182":"`-FunctionDecl 0x14c929088  line:1:15 invalid ReadGROUP4Image 'int *(const int *, int *)' static   |-ParmVarDecl 0x14c928ef0 <col:31, col:48> col:48 referenced invalid image_info 'const int *'   |-ParmVarDecl 0x14c928fa8 <line:2:3, col:18> col:18 invalid exception 'int *'   `-CompoundStmt 0x14c945170 <line:3:1, line:101:1>     |-DeclStmt 0x14c9291d0 <line:4:3, line:5:31>     | `-VarDecl 0x14c929168 <line:4:3, line:5:5> col:5 invalid filename 'char'     |-BinaryOperator 0x14c9292b8 <line:13:3, line:14:6> '<dependent type>' contains-errors '*'     | |-RecoveryExpr 0x14c929238 <line:13:3> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14c929218 <col:3> 'const int *' lvalue ParmVar 0x14c928ef0 'image_info' 'const int *'     | `-RecoveryExpr 0x14c929298 <line:14:6> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x14c9293f0 <line:16:3, line:18:16>     | |-VarDecl 0x14c9292f0 <line:16:3, line:17:5> col:5 used c 'int'     | `-VarDecl 0x14c929370 <line:16:3, line:18:5> col:5 used unique_file 'int'     |-UnaryExprOrTypeTraitExpr 0x14c929460 <line:23:3, line:24:5> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x14c929440 <col:5> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14c942748 <line:32:3, col:54> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c942620 <col:3> 'int ()' Function 0x14c929528 'assert' 'int ()'     | `-BinaryOperator 0x14c942728 <col:10, col:35> 'int' contains-errors '=='     |   |-CXXDependentScopeMemberExpr 0x14c942660 <col:10, col:22> '<dependent type>' contains-errors lvalue ->signature     |   | `-RecoveryExpr 0x14c942640 <col:10> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x14c942708 <col:35> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14c943030 <line:40:3, line:44:5>     | |-RecoveryExpr 0x14c942f00 <line:40:7, col:17> '_Bool' contains-errors     | `-CompoundStmt 0x14c943020 <line:41:5, line:44:5>     |-BinaryOperator 0x14c9431b8 <line:47:3, col:49> 'int' contains-errors '='     | |-DeclRefExpr 0x14c943050 <col:3> 'int' lvalue Var 0x14c929370 'unique_file' 'int'     | `-CallExpr 0x14c943190 <col:15, col:49> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14c943150 <col:15> 'int ()' Function 0x14c943098 'AcquireUniqueFileResource' 'int ()'     |   `-RecoveryExpr 0x14c943170 <col:41> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14c944f98 <line:91:3, line:98:5>     | |-RecoveryExpr 0x14c944d38 <line:91:7, col:26> '_Bool' contains-errors     | `-CompoundStmt 0x14c944f88 <line:92:5, line:98:5>     `-CStyleCastExpr 0x14c945148 <line:99:3, col:47> 'void' contains-errors <ToVoid>       `-CallExpr 0x14c9450d8 <col:10, col:47> '<dependent type>' contains-errors         |-DeclRefExpr 0x14c945098 <col:10> 'int ()' Function 0x14c944fe0 'RelinquishUniqueFileResource' 'int ()'         `-RecoveryExpr 0x14c9450b8 <col:39> '<dependent type>' contains-errors lvalue ","19864":"`-FunctionDecl 0x12893ec78  line:1:5 __cil_build_ast_first_child_helper 'int (struct cil_tree_node *, void *)'   |-ParmVarDecl 0x128925848 <col:40, col:86> col:86 parse_current 'struct cil_tree_node *'   | `-UnusedAttr 0x1289258b0 <col:55> unused   |-ParmVarDecl 0x128925920 <col:101, col:107> col:107 used extra_args 'void *'   `-CompoundStmt 0x12893fa08 <line:2:1, line:27:1>     |-DeclStmt 0x12893efb8 <line:3:2, col:42>     | |-RecordDecl 0x12893ed78 <col:2, col:9> col:9 struct cil_args_build     | `-VarDecl 0x12893eee8 <col:2, col:32> col:25 used args 'struct cil_args_build *' cinit     |   `-ImplicitCastExpr 0x12893ef88 <col:32> 'struct cil_args_build *' <BitCast>     |     `-ImplicitCastExpr 0x12893ef70 <col:32> 'void *' <LValueToRValue>     |       `-DeclRefExpr 0x12893ef50 <col:32> 'void *' lvalue ParmVar 0x128925920 'extra_args' 'void *'     |-DeclStmt 0x12893f120 <line:4:2, col:39>     | `-VarDecl 0x12893f058 <col:2, col:36> col:24 used ast 'struct cil_tree_node *' cinit     |   `-RecoveryExpr 0x12893f0f8 <col:30, col:36> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12893f0c0 <col:30> 'struct cil_args_build *' lvalue Var 0x12893eee8 'args' 'struct cil_args_build *'     |-IfStmt 0x12893f2e0 <line:6:2, line:8:2>     | |-BinaryOperator 0x12893f208 <line:6:6, col:21> 'int' contains-errors '=='     | | |-RecoveryExpr 0x12893f170 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x12893f138 <col:6> 'struct cil_tree_node *' contains-errors lvalue Var 0x12893f058 'ast' 'struct cil_tree_node *'     | | `-RecoveryExpr 0x12893f1e8 <col:21> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12893f2c8 <col:36, line:8:2>     |   `-BinaryOperator 0x12893f2a8 <line:7:3, col:17> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x12893f260 <col:3, col:9> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x12893f228 <col:3> 'struct cil_args_build *' lvalue Var 0x12893eee8 'args' 'struct cil_args_build *'     |     `-DeclRefExpr 0x12893f288 <col:17> 'struct cil_tree_node *' contains-errors lvalue Var 0x12893f058 'ast' 'struct cil_tree_node *'     |-IfStmt 0x12893f490 <line:10:2, line:12:2>     | |-BinaryOperator 0x12893f3b8 <line:10:6, col:21> 'int' contains-errors '=='     | | |-RecoveryExpr 0x12893f338 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x12893f300 <col:6> 'struct cil_tree_node *' contains-errors lvalue Var 0x12893f058 'ast' 'struct cil_tree_node *'     | | `-RecoveryExpr 0x12893f398 <col:21> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12893f478 <col:29, line:12:2>     |   `-BinaryOperator 0x12893f458 <line:11:3, col:14> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x12893f410 <col:3, col:9> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x12893f3d8 <col:3> 'struct cil_args_build *' lvalue Var 0x12893eee8 'args' 'struct cil_args_build *'     |     `-DeclRefExpr 0x12893f438 <col:14> 'struct cil_tree_node *' contains-errors lvalue Var 0x12893f058 'ast' 'struct cil_tree_node *'     |-IfStmt 0x12893f640 <line:14:2, line:16:2>     | |-BinaryOperator 0x12893f568 <line:14:6, col:21> 'int' contains-errors '=='     | | |-RecoveryExpr 0x12893f4e8 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x12893f4b0 <col:6> 'struct cil_tree_node *' contains-errors lvalue Var 0x12893f058 'ast' 'struct cil_tree_node *'     | | `-RecoveryExpr 0x12893f548 <col:21> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12893f628 <col:32, line:16:2>     |   `-BinaryOperator 0x12893f608 <line:15:3, col:17> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x12893f5c0 <col:3, col:9> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x12893f588 <col:3> 'struct cil_args_build *' lvalue Var 0x12893eee8 'args' 'struct cil_args_build *'     |     `-DeclRefExpr 0x12893f5e8 <col:17> 'struct cil_tree_node *' contains-errors lvalue Var 0x12893f058 'ast' 'struct cil_tree_node *'     |-IfStmt 0x12893f7f0 <line:18:2, line:20:2>     | |-BinaryOperator 0x12893f718 <line:18:6, col:21> 'int' contains-errors '=='     | | |-RecoveryExpr 0x12893f698 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x12893f660 <col:6> 'struct cil_tree_node *' contains-errors lvalue Var 0x12893f058 'ast' 'struct cil_tree_node *'     | | `-RecoveryExpr 0x12893f6f8 <col:21> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12893f7d8 <col:35, line:20:2>     |   `-BinaryOperator 0x12893f7b8 <line:19:3, col:20> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x12893f770 <col:3, col:9> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x12893f738 <col:3> 'struct cil_args_build *' lvalue Var 0x12893eee8 'args' 'struct cil_args_build *'     |     `-DeclRefExpr 0x12893f798 <col:20> 'struct cil_tree_node *' contains-errors lvalue Var 0x12893f058 'ast' 'struct cil_tree_node *'     |-IfStmt 0x12893f9a0 <line:22:2, line:24:2>     | |-BinaryOperator 0x12893f8c8 <line:22:6, col:21> 'int' contains-errors '=='     | | |-RecoveryExpr 0x12893f848 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x12893f810 <col:6> 'struct cil_tree_node *' contains-errors lvalue Var 0x12893f058 'ast' 'struct cil_tree_node *'     | | `-RecoveryExpr 0x12893f8a8 <col:21> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12893f988 <col:36, line:24:2>     |   `-BinaryOperator 0x12893f968 <line:23:3, col:18> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x12893f920 <col:3, col:9> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x12893f8e8 <col:3> 'struct cil_args_build *' lvalue Var 0x12893eee8 'args' 'struct cil_args_build *'     |     `-DeclRefExpr 0x12893f948 <col:18> 'struct cil_tree_node *' contains-errors lvalue Var 0x12893f058 'ast' 'struct cil_tree_node *'     `-ReturnStmt 0x12893f9f8 <line:26:2, col:9>       `-RecoveryExpr 0x12893f9d8 <col:9> '<dependent type>' contains-errors lvalue ","19989":"`-FunctionDecl 0x159940b40  line:1:6 tftp_input 'void (struct sockaddr_storage *, struct mbuf *)'   |-ParmVarDecl 0x159928648 <col:17, col:42> col:42 used srcsas 'struct sockaddr_storage *'   |-ParmVarDecl 0x159940a28 <col:50, col:63> col:63 used m 'struct mbuf *'   `-CompoundStmt 0x15a008908 <line:2:1, line:22:1>     |-DeclStmt 0x1599410f8 <line:3:5, col:73>     | |-RecordDecl 0x159940c40 <col:5, col:12> col:12 struct tftp_t     | `-VarDecl 0x159940da8 <col:5, col:20> col:20 used tp 'struct tftp_t *'     |-IfStmt 0x1599411d0 <line:5:5, line:7:5>     | |-BinaryOperator 0x159941188 <line:5:9, col:15> 'int' contains-errors '=='     | | |-DeclRefExpr 0x159941110 <col:9> 'struct tftp_t *' lvalue Var 0x159940da8 'tp' 'struct tftp_t *'     | | `-RecoveryExpr 0x159941168 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1599411b8 <col:21, line:7:5>     |   `-ReturnStmt 0x1599411a8 <line:6:9>     `-SwitchStmt 0x159941378 <line:9:5, line:21:5>       |-CallExpr 0x159941350 <line:9:13, col:28> '<dependent type>' contains-errors       | |-DeclRefExpr 0x1599412d0 <col:13> 'int ()' Function 0x159941218 'ntohs' 'int ()'       | `-RecoveryExpr 0x159941328 <col:19, col:23> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x1599412f0 <col:19> 'struct tftp_t *' lvalue Var 0x159940da8 'tp' 'struct tftp_t *'       `-CompoundStmt 0x15a0088c8 <col:31, line:21:5>         |-CallExpr 0x1599415b8 <line:11:9, col:55> '<dependent type>' contains-errors         | |-DeclRefExpr 0x159941498 <col:9> 'int ()' Function 0x1599413e0 'tftp_handle_rrq' 'int ()'         | |-RecoveryExpr 0x1599414f0 <col:25, col:28> '<dependent type>' contains-errors lvalue         | | `-DeclRefExpr 0x1599414b8 <col:25> 'struct mbuf *' lvalue ParmVar 0x159940a28 'm' 'struct mbuf *'         | |-DeclRefExpr 0x159941518 <col:35> 'struct sockaddr_storage *' lvalue ParmVar 0x159928648 'srcsas' 'struct sockaddr_storage *'         | |-DeclRefExpr 0x159941538 <col:43> 'struct tftp_t *' lvalue Var 0x159940da8 'tp' 'struct tftp_t *'         | `-RecoveryExpr 0x159941590 <col:47, col:50> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x159941558 <col:47> 'struct mbuf *' lvalue ParmVar 0x159940a28 'm' 'struct mbuf *'         |-BreakStmt 0x1599415f8 <line:12:9>         |-CallExpr 0x159941818 <line:15:9, col:55> '<dependent type>' contains-errors         | |-DeclRefExpr 0x1599416f8 <col:9> 'int ()' Function 0x159941640 'tftp_handle_ack' 'int ()'         | |-RecoveryExpr 0x159941750 <col:25, col:28> '<dependent type>' contains-errors lvalue         | | `-DeclRefExpr 0x159941718 <col:25> 'struct mbuf *' lvalue ParmVar 0x159940a28 'm' 'struct mbuf *'         | |-DeclRefExpr 0x159941778 <col:35> 'struct sockaddr_storage *' lvalue ParmVar 0x159928648 'srcsas' 'struct sockaddr_storage *'         | |-DeclRefExpr 0x159941798 <col:43> 'struct tftp_t *' lvalue Var 0x159940da8 'tp' 'struct tftp_t *'         | `-RecoveryExpr 0x1599417f0 <col:47, col:50> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x1599417b8 <col:47> 'struct mbuf *' lvalue ParmVar 0x159940a28 'm' 'struct mbuf *'         |-BreakStmt 0x159941858 <line:16:9>         |-CallExpr 0x15a008880 <line:19:9, col:57> '<dependent type>' contains-errors         | |-DeclRefExpr 0x159941958 <col:9> 'int ()' Function 0x1599418a0 'tftp_handle_error' 'int ()'         | |-RecoveryExpr 0x1599419b0 <col:27, col:30> '<dependent type>' contains-errors lvalue         | | `-DeclRefExpr 0x159941978 <col:27> 'struct mbuf *' lvalue ParmVar 0x159940a28 'm' 'struct mbuf *'         | |-DeclRefExpr 0x1599419d8 <col:37> 'struct sockaddr_storage *' lvalue ParmVar 0x159928648 'srcsas' 'struct sockaddr_storage *'         | |-DeclRefExpr 0x15a008800 <col:45> 'struct tftp_t *' lvalue Var 0x159940da8 'tp' 'struct tftp_t *'         | `-RecoveryExpr 0x15a008858 <col:49, col:52> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x15a008820 <col:49> 'struct mbuf *' lvalue ParmVar 0x159940a28 'm' 'struct mbuf *'         `-BreakStmt 0x15a0088c0 <line:20:9> ","19594":"`-FunctionDecl 0x13b008200  line:1:1 do_add_counters 'int (struct net *, int)'   |-ParmVarDecl 0x13a80e248 <col:17, col:29> col:29 used net 'struct net *'   |-ParmVarDecl 0x13a80e2c0 <col:34, col:45> col:45 __user 'int'   `-CompoundStmt 0x13a82fab0 <line:3:1, line:86:1>     |-DeclStmt 0x13b008380 <line:4:2, col:16>     | `-VarDecl 0x13b008318 <col:2, col:15> col:15 used i 'unsigned int'     |-DeclStmt 0x13b008518 <line:5:2, col:29>     | |-RecordDecl 0x13b008398 <col:2, col:9> col:9 struct xt_counters_info     | `-VarDecl 0x13b008498 <col:2, col:26> col:26 invalid tmp 'struct xt_counters_info'     |-DeclStmt 0x13b008718 <line:6:2, col:27>     | |-RecordDecl 0x13b008530 <col:2, col:9> col:9 struct xt_counters     | `-VarDecl 0x13b008698 <col:2, col:22> col:22 used paddc 'struct xt_counters *'     |-DeclStmt 0x13b0087b0 <line:7:2, col:27>     | `-VarDecl 0x13b008748 <col:2, col:15> col:15 used num_counters 'unsigned int'     |-DeclStmt 0x13b008848 <line:8:2, col:18>     | `-VarDecl 0x13b0087e0 <col:2, col:14> col:14 used name 'const char *'     |-DeclStmt 0x13b0088e0 <line:9:2, col:10>     | `-VarDecl 0x13b008878 <col:2, col:6> col:6 used size 'int'     |-DeclStmt 0x13b008978 <line:10:2, col:12>     | `-VarDecl 0x13b008910 <col:2, col:8> col:8 used ptmp 'void *'     |-DeclStmt 0x13b008b78 <line:11:2, col:20>     | |-RecordDecl 0x13b008990 <col:2, col:9> col:9 struct xt_table     | `-VarDecl 0x13b008af8 <col:2, col:19> col:19 used t 'struct xt_table *'     |-DeclStmt 0x13b008d78 <line:12:2, col:37>     | |-RecordDecl 0x13b008b90 <col:8, col:15> col:15 struct xt_table_info     | `-VarDecl 0x13b008cf8 <col:2, col:30> col:30 used private 'const struct xt_table_info *'     |-DeclStmt 0x13b008e30 <line:13:2, col:13>     | `-VarDecl 0x13b008da8 <col:2, col:12> col:6 used ret 'int' cinit     |   `-IntegerLiteral 0x13b008e10 <col:12> 'int' 0     |-DeclStmt 0x13b009038 <line:14:2, col:24>     | |-RecordDecl 0x13b008e48 <col:2, col:9> col:9 struct ipt_entry     | `-VarDecl 0x13b008fb8 <col:2, col:20> col:20 used iter 'struct ipt_entry *'     |-DeclStmt 0x13b0090d0 <line:15:2, col:21>     | `-VarDecl 0x13b009068 <col:2, col:15> col:15 used addend 'unsigned int'     |-CompoundStmt 0x13b0091d0 <line:24:2, line:27:2>     | `-BinaryOperator 0x13b009140 <line:25:3, col:11> 'void *' contains-errors '='     |   |-DeclRefExpr 0x13b0090e8 <col:3> 'void *' lvalue Var 0x13b008910 'ptmp' 'void *'     |   `-UnaryOperator 0x13b009128 <col:10, col:11> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x13b009108 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13a82bfb0 <line:29:2, line:30:11>     | |-BinaryOperator 0x13a82bee8 <line:29:6, col:42> 'int' '!='     | | |-CallExpr 0x13a82be68 <col:6, col:37> 'int'     | | | |-ImplicitCastExpr 0x13a82be50 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x13a82bd10 <col:6> 'int ()' Function 0x13a82bc58 'copy_from_user' 'int ()'     | | | |-ImplicitCastExpr 0x13a82bea0 <col:21> 'void *' <LValueToRValue>     | | | | `-DeclRefExpr 0x13a82bd30 <col:21> 'void *' lvalue Var 0x13b008910 'ptmp' 'void *'     | | | |-ImplicitCastExpr 0x13a82beb8 <col:27> 'struct ipt_entry *' <LValueToRValue>     | | | | `-DeclRefExpr 0x13a82be00 <col:27> 'struct ipt_entry *' lvalue Var 0x13b008fb8 'iter' 'struct ipt_entry *'     | | | `-ImplicitCastExpr 0x13a82bed0 <col:33> 'int' <LValueToRValue>     | | |   `-DeclRefExpr 0x13a82bd68 <col:33> 'int' lvalue Var 0x13b008878 'size' 'int'     | | `-IntegerLiteral 0x13a82bdc0 <col:42> 'int' 0     | `-ReturnStmt 0x13a82bfa0 <line:30:3, col:11>     |   `-UnaryOperator 0x13a82bf88 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x13a82bf70 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13a82bf50 <col:11> '<dependent type>' contains-errors lvalue     |-CompoundStmt 0x13a82c120 <line:38:2, line:41:2>     | |-BinaryOperator 0x13a82c058 <line:39:3, col:22> 'unsigned int' contains-errors '='     | | |-DeclRefExpr 0x13a82bfd0 <col:3> 'unsigned int' lvalue Var 0x13b008748 'num_counters' 'unsigned int'     | | `-CXXDependentScopeMemberExpr 0x13a82c010 <col:18, col:22> '<dependent type>' contains-errors lvalue .num_counters     | |   `-RecoveryExpr 0x13a82bff0 <col:18> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x13a82c100 <line:40:3, col:14> 'const char *' contains-errors '='     |   |-DeclRefExpr 0x13a82c078 <col:3> 'const char *' lvalue Var 0x13b0087e0 'name' 'const char *'     |   `-CXXDependentScopeMemberExpr 0x13a82c0b8 <col:10, col:14> '<dependent type>' contains-errors lvalue .name     |     `-RecoveryExpr 0x13a82c098 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13a82c2b8 <line:43:2, line:44:11>     | |-RecoveryExpr 0x13a82c1f0 <line:43:6, col:60> '_Bool' contains-errors     | `-ReturnStmt 0x13a82c2a8 <line:44:3, col:11>     |   `-UnaryOperator 0x13a82c290 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x13a82c278 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13a82c258 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13a82c500 <line:46:2, col:28> 'struct xt_counters *' contains-errors '='     | |-DeclRefExpr 0x13a82c2d8 <col:2> 'struct xt_counters *' lvalue Var 0x13b008698 'paddc' 'struct xt_counters *'     | `-CallExpr 0x13a82c4d8 <col:10, col:28> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13a82c3d8 <col:10> 'int ()' Function 0x13a82c320 'vmalloc' 'int ()'     |   `-BinaryOperator 0x13a82c4b8 <col:18, col:24> '<dependent type>' contains-errors '-'     |     |-RecoveryExpr 0x13a82c498 <col:18> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13a82c410 <col:24> 'int' lvalue Var 0x13b008878 'size' 'int'     |-IfStmt 0x13a82c618 <line:47:2, line:48:11>     | |-UnaryOperator 0x13a82c558 <line:47:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13a82c540 <col:7> 'struct xt_counters *' <LValueToRValue>     | |   `-DeclRefExpr 0x13a82c520 <col:7> 'struct xt_counters *' lvalue Var 0x13b008698 'paddc' 'struct xt_counters *'     | `-ReturnStmt 0x13a82c608 <line:48:3, col:11>     |   `-UnaryOperator 0x13a82c5f0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x13a82c5d8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13a82c5b8 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13a82ca48 <line:50:2, line:53:2>     | |-BinaryOperator 0x13a82c8a8 <line:50:6, col:56> 'int' contains-errors '!='     | | |-CallExpr 0x13a82c870 <col:6, col:51> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x13a82c638 <col:6> 'int ()' Function 0x13a82bc58 'copy_from_user' 'int ()'     | | | |-DeclRefExpr 0x13a82c658 <col:21> 'struct xt_counters *' lvalue Var 0x13b008698 'paddc' 'struct xt_counters *'     | | | |-BinaryOperator 0x13a82c810 <col:28, col:35> '<dependent type>' contains-errors '+'     | | | | |-RecoveryExpr 0x13a82c7f0 <col:28> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x13a82c690 <col:35> 'int' lvalue Var 0x13b008878 'size' 'int'     | | | `-BinaryOperator 0x13a82c850 <col:41, col:47> '<dependent type>' contains-errors '-'     | | |   |-RecoveryExpr 0x13a82c830 <col:41> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x13a82c6e8 <col:47> 'int' lvalue Var 0x13b008878 'size' 'int'     | | `-IntegerLiteral 0x13a82c760 <col:56> 'int' 0     | `-CompoundStmt 0x13a82ca28 <col:59, line:53:2>     |   |-BinaryOperator 0x13a82c9a0 <line:51:3, col:10> 'int' contains-errors '='     |   | |-DeclRefExpr 0x13a82c8c8 <col:3> 'int' lvalue Var 0x13b008da8 'ret' 'int'     |   | `-UnaryOperator 0x13a82c988 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x13a82c970 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x13a82c950 <col:10> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x13a82ca10 <line:52:3, col:8> 'free' 0x13a82c9c0     |-BinaryOperator 0x13a82e2b0 <line:55:2, col:43> 'struct xt_table *' contains-errors '='     | |-DeclRefExpr 0x13a82ca68 <col:2> 'struct xt_table *' lvalue Var 0x13b008af8 't' 'struct xt_table *'     | `-CallExpr 0x13a82e278 <col:6, col:43> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13a82cb68 <col:6> 'int ()' Function 0x13a82cab0 'xt_find_table_lock' 'int ()'     |   |-DeclRefExpr 0x13a82cb88 <col:25> 'struct net *' lvalue ParmVar 0x13a80e248 'net' 'struct net *'     |   |-RecoveryExpr 0x13a82e258 <col:30> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x13a82cbc0 <col:39> 'const char *' lvalue Var 0x13b0087e0 'name' 'const char *'     |-IfStmt 0x13a82e630 <line:56:2, line:59:2>     | |-CallExpr 0x13a82e408 <line:56:6, col:22> 'int'     | | |-ImplicitCastExpr 0x13a82e3f0 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x13a82e3b0 <col:6> 'int ()' Function 0x13a82e2f8 'IS_ERR_OR_NULL' 'int ()'     | | `-ImplicitCastExpr 0x13a82e430 <col:21> 'struct xt_table *' <LValueToRValue>     | |   `-DeclRefExpr 0x13a82e3d0 <col:21> 'struct xt_table *' lvalue Var 0x13b008af8 't' 'struct xt_table *'     | `-CompoundStmt 0x13a82e618 <col:25, line:59:2>     |   `-GotoStmt 0x13a82e600 <line:58:3, col:8> 'free' 0x13a82c9c0     |-CallExpr 0x13a82e768 <line:61:2, col:19> 'int'     | `-ImplicitCastExpr 0x13a82e750 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x13a82e730 <col:2> 'int ()' Function 0x13a82e678 'local_bh_disable' 'int ()'     |-BinaryOperator 0x13a82e808 <line:62:2, col:15> 'const struct xt_table_info *' contains-errors '='     | |-DeclRefExpr 0x13a82e788 <col:2> 'const struct xt_table_info *' lvalue Var 0x13b008cf8 'private' 'const struct xt_table_info *'     | `-RecoveryExpr 0x13a82e7e0 <col:12, col:15> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x13a82e7a8 <col:12> 'struct xt_table *' lvalue Var 0x13b008af8 't' 'struct xt_table *'     |-IfStmt 0x13a82e968 <line:63:2, line:66:2>     | |-BinaryOperator 0x13a82e8a8 <line:63:6, col:25> 'int' contains-errors '!='     | | |-RecoveryExpr 0x13a82e860 <col:6, col:15> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x13a82e828 <col:6> 'const struct xt_table_info *' lvalue Var 0x13b008cf8 'private' 'const struct xt_table_info *'     | | `-DeclRefExpr 0x13a82e888 <col:25> 'unsigned int' lvalue Var 0x13b008748 'num_counters' 'unsigned int'     | `-CompoundStmt 0x13a82e950 <col:39, line:66:2>     |   `-GotoStmt 0x13a82e938 <line:65:3, col:8> 'unlock_up_free' 0x13a82e8e8     |-BinaryOperator 0x13a82e9e0 <line:68:2, col:6> 'unsigned int' '='     | |-DeclRefExpr 0x13a82e988 <col:2> 'unsigned int' lvalue Var 0x13b008318 'i' 'unsigned int'     | `-ImplicitCastExpr 0x13a82e9c8 <col:6> 'unsigned int' <IntegralCast>     |   `-IntegerLiteral 0x13a82e9a8 <col:6> 'int' 0     |-BinaryOperator 0x13a82eb70 <line:69:2, col:33> 'unsigned int' '='     | |-DeclRefExpr 0x13a82ea00 <col:2> 'unsigned int' lvalue Var 0x13b009068 'addend' 'unsigned int'     | `-ImplicitCastExpr 0x13a82eb58 <col:11, col:33> 'unsigned int' <IntegralCast>     |   `-CallExpr 0x13a82eb38 <col:11, col:33> 'int'     |     `-ImplicitCastExpr 0x13a82eb20 <col:11> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x13a82eb00 <col:11> 'int ()' Function 0x13a82ea48 'xt_write_recseq_begin' 'int ()'     |-CallExpr 0x13a82ed70 <line:70:2, col:56> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13a82ec70 <col:2> 'int ()' Function 0x13a82ebb8 'xt_entry_foreach' 'int ()'     | |-DeclRefExpr 0x13a82ec90 <col:19> 'struct ipt_entry *' lvalue Var 0x13b008fb8 'iter' 'struct ipt_entry *'     | |-RecoveryExpr 0x13a82ece8 <col:25, col:34> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13a82ecb0 <col:25> 'const struct xt_table_info *' lvalue Var 0x13b008cf8 'private' 'const struct xt_table_info *'     | `-RecoveryExpr 0x13a82ed48 <col:43, col:52> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x13a82ed10 <col:43> 'const struct xt_table_info *' lvalue Var 0x13b008cf8 'private' 'const struct xt_table_info *'     |-CompoundStmt 0x13a82f2d8 <col:58, line:76:2>     | |-DeclStmt 0x13a82ee70 <line:71:3, col:26>     | | `-VarDecl 0x13a82ee08 <col:3, col:23> col:23 used tmp 'struct xt_counters *'     | |-BinaryOperator 0x13a82f048 <line:73:3, col:48> 'struct xt_counters *' contains-errors '='     | | |-DeclRefExpr 0x13a82ee88 <col:3> 'struct xt_counters *' lvalue Var 0x13a82ee08 'tmp' 'struct xt_counters *'     | | `-CallExpr 0x13a82f020 <col:9, col:48> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x13a82ef88 <col:9> 'int ()' Function 0x13a82eed0 'xt_get_this_cpu_counter' 'int ()'     | |   `-UnaryOperator 0x13a82f008 <col:33, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-RecoveryExpr 0x13a82efe0 <col:34, col:40> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x13a82efa8 <col:34> 'struct ipt_entry *' lvalue Var 0x13b008fb8 'iter' 'struct ipt_entry *'     | `-UnaryOperator 0x13a82f2c0 <line:75:3, col:5> 'unsigned int' prefix '++'     |   `-DeclRefExpr 0x13a82f2a0 <col:5> 'unsigned int' lvalue Var 0x13b008318 'i' 'unsigned int'     |-CallExpr 0x13a82f438 <line:77:2, col:28> 'int'     | |-ImplicitCastExpr 0x13a82f420 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13a82f3e0 <col:2> 'int ()' Function 0x13a82f328 'xt_write_recseq_end' 'int ()'     | `-ImplicitCastExpr 0x13a82f460 <col:22> 'unsigned int' <LValueToRValue>     |   `-DeclRefExpr 0x13a82f400 <col:22> 'unsigned int' lvalue Var 0x13b009068 'addend' 'unsigned int'     |-LabelStmt 0x13a82f5b0 <line:78:2, line:79:18> 'unlock_up_free'     | `-CallExpr 0x13a82f590 <col:2, col:18> 'int'     |   `-ImplicitCastExpr 0x13a82f578 <col:2> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x13a82f558 <col:2> 'int ()' Function 0x13a82f4a0 'local_bh_enable' 'int ()'     |-CallExpr 0x13a82f708 <line:80:2, col:19> 'int'     | |-ImplicitCastExpr 0x13a82f6f0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13a82f6b0 <col:2> 'int ()' Function 0x13a82f5f8 'xt_table_unlock' 'int ()'     | `-ImplicitCastExpr 0x13a82f730 <col:18> 'struct xt_table *' <LValueToRValue>     |   `-DeclRefExpr 0x13a82f6d0 <col:18> 'struct xt_table *' lvalue Var 0x13b008af8 't' 'struct xt_table *'     |-CallExpr 0x13a82f8a8 <line:81:2, col:18> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13a82f828 <col:2> 'int ()' Function 0x13a82f770 'module_put' 'int ()'     | `-RecoveryExpr 0x13a82f880 <col:13, col:16> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x13a82f848 <col:13> 'struct xt_table *' lvalue Var 0x13b008af8 't' 'struct xt_table *'     |-LabelStmt 0x13a82fa48 <line:82:2, line:83:13> 'free'     | `-CallExpr 0x13a82fa08 <col:2, col:13> 'int'     |   |-ImplicitCastExpr 0x13a82f9f0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x13a82f9b0 <col:2> 'int ()' Function 0x13a82f8f8 'vfree' 'int ()'     |   `-ImplicitCastExpr 0x13a82fa30 <col:8> 'struct xt_counters *' <LValueToRValue>     |     `-DeclRefExpr 0x13a82f9d0 <col:8> 'struct xt_counters *' lvalue Var 0x13b008698 'paddc' 'struct xt_counters *'     `-ReturnStmt 0x13a82faa0 <line:85:2, col:9>       `-ImplicitCastExpr 0x13a82fa88 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x13a82fa68 <col:9> 'int' lvalue Var 0x13b008da8 'ret' 'int' ","19579":"`-FunctionDecl 0x12b1420c0  col:19 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x12b1421c0 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x12b142228 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x12b142168 <<invalid sloc>> Implicit 887 ","19673":"`-FunctionDecl 0x157128258  line:1:5 invalid dane_state_set_dlv_file 'int (int, const char *)'   |-ParmVarDecl 0x1571280f0 <col:29, col:42> col:42 invalid s 'int'   |-ParmVarDecl 0x157128170 <col:45, col:57> col:57 used file 'const char *'   `-CompoundStmt 0x1571429c0 <line:2:1, line:10:1>     |-DeclStmt 0x157128390 <line:3:1, col:8>     | `-VarDecl 0x157128328 <col:1, col:5> col:5 used ret 'int'     |-BinaryOperator 0x157128718 <line:5:3, col:60> 'int' contains-errors '='     | |-DeclRefExpr 0x1571283a8 <col:3> 'int' lvalue Var 0x157128328 'ret' 'int'     | `-CallExpr 0x1571286e0 <col:9, col:60> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x157128520 <col:9> 'int ()' Function 0x157128468 'ub_ctx_set_option' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x157128560 <col:27, col:30> '<dependent type>' contains-errors lvalue ->ctx     |   | `-RecoveryExpr 0x157128540 <col:27> '<dependent type>' contains-errors lvalue     |   |-CStyleCastExpr 0x157128640 <col:35, col:42> 'char *' <NoOp>     |   | `-ImplicitCastExpr 0x157128628 <col:42> 'char *' <ArrayToPointerDecay> part_of_explicit_cast     |   |   `-StringLiteral 0x1571285f0 <col:42> 'char[4]' lvalue \"STR\"     |   `-CStyleCastExpr 0x1571286b8 <col:49, col:56> 'void *' <BitCast>     |     `-ImplicitCastExpr 0x1571286a0 <col:56> 'const char *' <LValueToRValue> part_of_explicit_cast     |       `-DeclRefExpr 0x157128668 <col:56> 'const char *' lvalue ParmVar 0x157128170 'file' 'const char *'     |-IfStmt 0x157142970 <line:6:3, line:7:47>     | |-BinaryOperator 0x157128790 <line:6:7, col:14> 'int' '!='     | | |-ImplicitCastExpr 0x157128778 <col:7> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x157128738 <col:7> 'int' lvalue Var 0x157128328 'ret' 'int'     | | `-IntegerLiteral 0x157128758 <col:14> 'int' 0     | `-ReturnStmt 0x157142960 <line:7:5, col:47>     |   `-CallExpr 0x157142938 <col:12, col:47> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1571428b8 <col:12> 'int ()' Function 0x157142800 'gnutls_assert_val' 'int ()'     |     `-RecoveryExpr 0x157142918 <col:30> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1571429b0 <line:9:3, col:10>       `-IntegerLiteral 0x157142990 <col:10> 'int' 0 ","19473":"`-FunctionDecl 0x1300266b8  line:1:1 referenced list_restrict6 'int (int *, struct info_restrict **)'   |-ParmVarDecl 0x13000e148 <line:2:2, col:16> col:16 used res 'int *'   |-ParmVarDecl 0x13000e378 <line:3:2, col:26> col:26 used ppir 'struct info_restrict **'   `-CompoundStmt 0x130808c70 <line:5:1, line:19:1>     |-DeclStmt 0x1300268b0 <line:6:2, col:28>     | `-VarDecl 0x130026848 <col:2, col:25> col:25 used pir 'struct info_restrict *'     |-IfStmt 0x130026a70 <line:8:2, line:9:33>     | |-BinaryOperator 0x130026980 <line:8:6, col:19> 'int' contains-errors '!='     | | |-RecoveryExpr 0x130026900 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x1300268c8 <col:6> 'int *' lvalue ParmVar 0x13000e148 'res' 'int *'     | | `-RecoveryExpr 0x130026960 <col:19> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x130026a40 <line:9:3, col:33> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1300269a0 <col:3> 'int (int *, struct info_restrict **)' Function 0x1300266b8 'list_restrict6' 'int (int *, struct info_restrict **)'     |   |-RecoveryExpr 0x1300269f8 <col:18, col:23> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x1300269c0 <col:18> 'int *' lvalue ParmVar 0x13000e148 'res' 'int *'     |   `-DeclRefExpr 0x130026a20 <col:29> 'struct info_restrict **' lvalue ParmVar 0x13000e378 'ppir' 'struct info_restrict **'     |-BinaryOperator 0x130026b18 <line:11:2, col:9> 'struct info_restrict *' '='     | |-DeclRefExpr 0x130026a90 <col:2> 'struct info_restrict *' lvalue Var 0x130026848 'pir' 'struct info_restrict *'     | `-ImplicitCastExpr 0x130026b00 <col:8, col:9> 'struct info_restrict *' <LValueToRValue>     |   `-UnaryOperator 0x130026ae8 <col:8, col:9> 'struct info_restrict *' lvalue prefix '*' cannot overflow     |     `-ImplicitCastExpr 0x130026ad0 <col:9> 'struct info_restrict **' <LValueToRValue>     |       `-DeclRefExpr 0x130026ab0 <col:9> 'struct info_restrict **' lvalue ParmVar 0x13000e378 'ppir' 'struct info_restrict **'     |-BinaryOperator 0x130026c88 <line:12:2, col:25> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x130026b70 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x130026b38 <col:2> 'struct info_restrict *' lvalue Var 0x130026848 'pir' 'struct info_restrict *'     | `-CXXDependentScopeMemberExpr 0x130026c40 <col:15, col:25> '<dependent type>' contains-errors lvalue .addr     |   `-CXXDependentScopeMemberExpr 0x130026bf8 <col:15, col:22> '<dependent type>' contains-errors lvalue .v6     |     `-RecoveryExpr 0x130026bd0 <col:15, col:20> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x130026b98 <col:15> 'int *' lvalue ParmVar 0x13000e148 'res' 'int *'     |-BinaryOperator 0x130026df8 <line:13:2, col:25> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x130026ce0 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x130026ca8 <col:2> 'struct info_restrict *' lvalue Var 0x130026848 'pir' 'struct info_restrict *'     | `-CXXDependentScopeMemberExpr 0x130026db0 <col:15, col:25> '<dependent type>' contains-errors lvalue .mask     |   `-CXXDependentScopeMemberExpr 0x130026d68 <col:15, col:22> '<dependent type>' contains-errors lvalue .v6     |     `-RecoveryExpr 0x130026d40 <col:15, col:20> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x130026d08 <col:15> 'int *' lvalue ParmVar 0x13000e148 'res' 'int *'     |-BinaryOperator 0x130026e98 <line:14:2, col:17> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x130026e50 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x130026e18 <col:2> 'struct info_restrict *' lvalue Var 0x130026848 'pir' 'struct info_restrict *'     | `-IntegerLiteral 0x130026e78 <col:17> 'int' 1     |-BinaryOperator 0x1300270d8 <line:15:2, col:31> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x130026ef0 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x130026eb8 <col:2> 'struct info_restrict *' lvalue Var 0x130026848 'pir' 'struct info_restrict *'     | `-CallExpr 0x1300270b0 <col:15, col:31> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x130027030 <col:15> 'int ()' Function 0x130026f78 'htonl' 'int ()'     |   `-RecoveryExpr 0x130027088 <col:21, col:26> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x130027050 <col:21> 'int *' lvalue ParmVar 0x13000e148 'res' 'int *'     |-BinaryOperator 0x1300272e0 <line:16:2, col:31> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x130027130 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1300270f8 <col:2> 'struct info_restrict *' lvalue Var 0x130026848 'pir' 'struct info_restrict *'     | `-CallExpr 0x1300272b8 <col:15, col:31> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x130027238 <col:15> 'int ()' Function 0x130027180 'htons' 'int ()'     |   `-RecoveryExpr 0x130027290 <col:21, col:26> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x130027258 <col:21> 'int *' lvalue ParmVar 0x13000e148 'res' 'int *'     |-BinaryOperator 0x130027408 <line:17:2, col:33> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x130027338 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x130027300 <col:2> 'struct info_restrict *' lvalue Var 0x130026848 'pir' 'struct info_restrict *'     | `-CallExpr 0x1300273e0 <col:16, col:33> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x130027360 <col:16> 'int ()' Function 0x130027180 'htons' 'int ()'     |   `-RecoveryExpr 0x1300273b8 <col:22, col:27> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x130027380 <col:22> 'int *' lvalue ParmVar 0x13000e148 'res' 'int *'     `-BinaryOperator 0x130808c50 <line:18:2, col:43> 'struct info_restrict *' '='       |-UnaryOperator 0x130027460 <col:2, col:3> 'struct info_restrict *' lvalue prefix '*' cannot overflow       | `-ImplicitCastExpr 0x130027448 <col:3> 'struct info_restrict **' <LValueToRValue>       |   `-DeclRefExpr 0x130027428 <col:3> 'struct info_restrict **' lvalue ParmVar 0x13000e378 'ppir' 'struct info_restrict **'       `-CStyleCastExpr 0x130808c28 <col:10, col:43> 'struct info_restrict *' <IntegralToPointer>         `-CallExpr 0x1300275c8 <col:34, col:43> 'int'           `-ImplicitCastExpr 0x1300275b0 <col:34> 'int (*)()' <FunctionToPointerDecay>             `-DeclRefExpr 0x130027558 <col:34> 'int ()' Function 0x1300274a0 'more_pkt' 'int ()' ","19769":"`-FunctionDecl 0x155026748  line:1:12 io_close_prep 'int (struct io_kiocb *, const struct io_uring_sqe *)' static   |-ParmVarDecl 0x15500e248 <col:26, col:43> col:43 used req 'struct io_kiocb *'   |-ParmVarDecl 0x155026628 <col:48, col:75> col:75 used sqe 'const struct io_uring_sqe *'   `-CompoundStmt 0x155029b70 <line:2:1, line:22:1>     |-CallExpr 0x1550269f8 <line:4:2, col:23> 'int'     | |-ImplicitCastExpr 0x1550269e0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x155026970 <col:2> 'int ()' Function 0x1550268b8 'io_req_init_async' 'int ()'     | `-ImplicitCastExpr 0x155026a20 <col:20> 'struct io_kiocb *' <LValueToRValue>     |   `-DeclRefExpr 0x155026990 <col:20> 'struct io_kiocb *' lvalue ParmVar 0x15500e248 'req' 'struct io_kiocb *'     |-CompoundAssignOperator 0x155026b48 <line:5:2, col:21> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-CXXDependentScopeMemberExpr 0x155026a98 <col:2, col:12> '<dependent type>' contains-errors lvalue .flags     | | `-RecoveryExpr 0x155026a70 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x155026a38 <col:2> 'struct io_kiocb *' lvalue ParmVar 0x15500e248 'req' 'struct io_kiocb *'     | `-RecoveryExpr 0x155026b28 <col:21> '<dependent type>' contains-errors lvalue     |-IfStmt 0x155026e38 <line:7:2, line:8:11>     | |-RecoveryExpr 0x155026d70 <line:7:6, col:74> '_Bool' contains-errors     | `-ReturnStmt 0x155026e28 <line:8:3, col:11>     |   `-UnaryOperator 0x155026e10 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x155026df8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x155026dd8 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1550271e0 <line:9:2, line:11:11>     | |-BinaryOperator 0x155027118 <line:9:6, line:10:28> 'int' contains-errors '||'     | | |-BinaryOperator 0x155027098 <line:9:6, line:10:11> 'int' contains-errors '||'     | | | |-BinaryOperator 0x155027018 <line:9:6, col:51> 'int' contains-errors '||'     | | | | |-BinaryOperator 0x155026f98 <col:6, col:38> 'int' contains-errors '||'     | | | | | |-BinaryOperator 0x155026f18 <col:6, col:26> 'int' contains-errors '||'     | | | | | | |-RecoveryExpr 0x155026e90 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | | | | | `-DeclRefExpr 0x155026e58 <col:6> 'const struct io_uring_sqe *' lvalue ParmVar 0x155026628 'sqe' 'const struct io_uring_sqe *'     | | | | | | `-RecoveryExpr 0x155026ef0 <col:21, col:26> '<dependent type>' contains-errors lvalue     | | | | | |   `-DeclRefExpr 0x155026eb8 <col:21> 'const struct io_uring_sqe *' lvalue ParmVar 0x155026628 'sqe' 'const struct io_uring_sqe *'     | | | | | `-RecoveryExpr 0x155026f70 <col:33, col:38> '<dependent type>' contains-errors lvalue     | | | | |   `-DeclRefExpr 0x155026f38 <col:33> 'const struct io_uring_sqe *' lvalue ParmVar 0x155026628 'sqe' 'const struct io_uring_sqe *'     | | | | `-RecoveryExpr 0x155026ff0 <col:46, col:51> '<dependent type>' contains-errors lvalue     | | | |   `-DeclRefExpr 0x155026fb8 <col:46> 'const struct io_uring_sqe *' lvalue ParmVar 0x155026628 'sqe' 'const struct io_uring_sqe *'     | | | `-RecoveryExpr 0x155027070 <line:10:6, col:11> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x155027038 <col:6> 'const struct io_uring_sqe *' lvalue ParmVar 0x155026628 'sqe' 'const struct io_uring_sqe *'     | | `-RecoveryExpr 0x1550270f0 <col:23, col:28> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1550270b8 <col:23> 'const struct io_uring_sqe *' lvalue ParmVar 0x155026628 'sqe' 'const struct io_uring_sqe *'     | `-ReturnStmt 0x1550271d0 <line:11:3, col:11>     |   `-UnaryOperator 0x1550271b8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x1550271a0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x155027180 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x155027380 <line:12:2, line:13:11>     | |-BinaryOperator 0x1550272b8 <line:12:6, col:19> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x155027238 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x155027200 <col:6> 'struct io_kiocb *' lvalue ParmVar 0x15500e248 'req' 'struct io_kiocb *'     | | `-RecoveryExpr 0x155027298 <col:19> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x155027370 <line:13:3, col:11>     |   `-UnaryOperator 0x155027358 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x155027340 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x155027320 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1550275d0 <line:15:2, col:35> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x155027400 <col:2, col:13> '<dependent type>' contains-errors lvalue .fd     | | `-RecoveryExpr 0x1550273d8 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1550273a0 <col:2> 'struct io_kiocb *' lvalue ParmVar 0x15500e248 'req' 'struct io_kiocb *'     | `-CallExpr 0x1550275a8 <col:18, col:35> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x155027528 <col:18> 'int ()' Function 0x155027470 'READ_ONCE' 'int ()'     |   `-RecoveryExpr 0x155027580 <col:28, col:33> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x155027548 <col:28> 'const struct io_uring_sqe *' lvalue ParmVar 0x155026628 'sqe' 'const struct io_uring_sqe *'     `-ReturnStmt 0x155029b60 <line:21:2, col:9>       `-IntegerLiteral 0x155029b40 <col:9> 'int' 0 ","19560":"`-FunctionDecl 0x125928190  line:1:13 referenced io_mem_init 'void (void)' static   `-CompoundStmt 0x125941de8 <line:2:1, line:10:1>     |-CallExpr 0x125928638 <line:3:5, col:89> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1259283b0 <col:5> 'int ()' Function 0x1259282f8 'memory_region_init_io' 'int ()'     | |-UnaryOperator 0x125928568 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x125928548 <col:28> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x125928580 <col:40> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x1259285c0 <col:46, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x1259285a0 <col:47> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x1259285d8 <col:67> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x1259285f8 <col:73> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x125928618 <col:79> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1259418b8 <line:4:5, line:5:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x125928688 <line:4:5> 'int ()' Function 0x1259282f8 'memory_region_init_io' 'int ()'     | |-UnaryOperator 0x1259287d8 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x1259287b8 <col:28> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x125941800 <col:47> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x125941840 <col:53, col:54> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x125941820 <col:54> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x125941858 <col:74> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x125941878 <line:5:27> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x125941898 <col:33> '<dependent type>' contains-errors lvalue     |-CallExpr 0x125941b28 <line:6:5, line:7:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x125941908 <line:6:5> 'int ()' Function 0x1259282f8 'memory_region_init_io' 'int ()'     | |-UnaryOperator 0x125941a58 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x125941a38 <col:28> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x125941a70 <col:45> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x125941ab0 <col:51, col:52> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x125941a90 <col:52> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x125941ac8 <col:70> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x125941ae8 <line:7:27> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x125941b08 <col:33> '<dependent type>' contains-errors lvalue     `-CallExpr 0x125941d98 <line:8:5, line:9:43> '<dependent type>' contains-errors       |-DeclRefExpr 0x125941b78 <line:8:5> 'int ()' Function 0x1259282f8 'memory_region_init_io' 'int ()'       |-UnaryOperator 0x125941cc8 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow       | `-RecoveryExpr 0x125941ca8 <col:28> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x125941ce0 <col:42> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x125941d20 <col:48, col:49> '<dependent type>' contains-errors prefix '&' cannot overflow       | `-RecoveryExpr 0x125941d00 <col:49> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x125941d38 <col:64> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x125941d58 <line:9:27> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x125941d78 <col:33> '<dependent type>' contains-errors lvalue ","20041":"`-FunctionDecl 0x15b00dfe8  line:1:12 UTF8ToISO8859_2 'int (unsigned char *, int *, const unsigned char *, int *)' static   |-ParmVarDecl 0x15b00dd08 <col:29, col:44> col:44 used out 'unsigned char *'   |-ParmVarDecl 0x15b00ddb8 <col:49, col:54> col:54 used outlen 'int *'   |-ParmVarDecl 0x15b00de68 <line:2:5, col:26> col:26 used in 'const unsigned char *'   |-ParmVarDecl 0x15b00dee8 <col:30, col:35> col:35 used inlen 'int *'   `-CompoundStmt 0x15b00e398 <col:42, line:4:1>     `-ReturnStmt 0x15b00e388 <line:3:5, col:79>       `-CallExpr 0x15b00e340 <col:12, col:79> '<dependent type>' contains-errors         |-DeclRefExpr 0x15b00e220 <col:12> 'int ()' Function 0x15b00e168 'UTF8ToISO8859x' 'int ()'         |-DeclRefExpr 0x15b00e240 <col:28> 'unsigned char *' lvalue ParmVar 0x15b00dd08 'out' 'unsigned char *'         |-DeclRefExpr 0x15b00e260 <col:33> 'int *' lvalue ParmVar 0x15b00ddb8 'outlen' 'int *'         |-DeclRefExpr 0x15b00e280 <col:41> 'const unsigned char *' lvalue ParmVar 0x15b00de68 'in' 'const unsigned char *'         |-DeclRefExpr 0x15b00e2a0 <col:45> 'int *' lvalue ParmVar 0x15b00dee8 'inlen' 'int *'         `-RecoveryExpr 0x15b00e320 <col:52> '<dependent type>' contains-errors lvalue ","19814":"`-FunctionDecl 0x1430f4918  line:1:12 invalid ima_adpcm_decode_block 'int (int *, int *, int *)' static   |-ParmVarDecl 0x1430f4728 <col:36, col:52> col:52 invalid ima 'int *'   |-ParmVarDecl 0x1430f47a8 <col:57, col:66> col:66 referenced invalid encoded 'int *'   |-ParmVarDecl 0x1430f4828 <line:2:2, col:11> col:11 invalid decoded 'int *'   `-CompoundStmt 0x14310eb68 <line:3:1, line:24:1>     |-DeclStmt 0x1430f4a58 <line:4:2, col:18>     | `-VarDecl 0x1430f49f0 <col:2, col:6> col:6 used outputLength 'int'     |-DeclStmt 0x14310e028 <line:6:2, col:26>     | |-RecordDecl 0x1430f4a70 <col:2, col:9> col:9 struct adpcm_state     | `-VarDecl 0x1430f4b68 <col:2, col:21> col:21 referenced invalid state 'struct adpcm_state'     |-BinaryOperator 0x14310e3d8 <line:11:2, col:45> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14310e220 <col:2, col:8> '<dependent type>' contains-errors lvalue .valprev     | | `-RecoveryExpr 0x14310e1f8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14310e1d8 <col:2> 'struct adpcm_state' lvalue Var 0x1430f4b68 'state' 'struct adpcm_state'     | `-BinaryOperator 0x14310e3b8 <col:18, col:45> '<dependent type>' contains-errors '|'     |   |-ParenExpr 0x14310e320 <col:18, col:32> '<dependent type>' contains-errors     |   | `-BinaryOperator 0x14310e300 <col:19, col:31> '<dependent type>' contains-errors '<<'     |   |   |-ArraySubscriptExpr 0x14310e2c0 <col:19, col:28> '<dependent type>' contains-errors lvalue     |   |   | |-ImplicitCastExpr 0x14310e2a8 <col:19> '<dependent type>' contains-errors <LValueToRValue>     |   |   | | `-RecoveryExpr 0x14310e268 <col:19> '<dependent type>' contains-errors lvalue     |   |   | `-IntegerLiteral 0x14310e288 <col:27> 'int' 1     |   |   `-IntegerLiteral 0x14310e2e0 <col:31> 'int' 8     |   `-ArraySubscriptExpr 0x14310e398 <col:36, col:45> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x14310e380 <col:36> '<dependent type>' contains-errors <LValueToRValue>     |     | `-RecoveryExpr 0x14310e340 <col:36> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x14310e360 <col:44> 'int' 0     |-IfStmt 0x14310e590 <line:12:2, line:13:20>     | |-BinaryOperator 0x14310e490 <line:12:6, col:19> '<dependent type>' contains-errors '&'     | | |-ArraySubscriptExpr 0x14310e450 <col:6, col:15> '<dependent type>' contains-errors lvalue     | | | |-ImplicitCastExpr 0x14310e438 <col:6> '<dependent type>' contains-errors <LValueToRValue>     | | | | `-RecoveryExpr 0x14310e3f8 <col:6> '<dependent type>' contains-errors lvalue     | | | `-IntegerLiteral 0x14310e418 <col:14> 'int' 1     | | `-IntegerLiteral 0x14310e470 <col:19> 'int' 128     | `-CompoundAssignOperator 0x14310e560 <line:13:3, col:20> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |-CXXDependentScopeMemberExpr 0x14310e4f8 <col:3, col:9> '<dependent type>' contains-errors lvalue .valprev     |   | `-RecoveryExpr 0x14310e4d0 <col:3> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14310e4b0 <col:3> 'struct adpcm_state' lvalue Var 0x1430f4b68 'state' 'struct adpcm_state'     |   `-IntegerLiteral 0x14310e540 <col:20> 'int' 65536     |-BinaryOperator 0x14310e6b8 <line:15:2, col:25> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14310e5f8 <col:2, col:8> '<dependent type>' contains-errors lvalue .index     | | `-RecoveryExpr 0x14310e5d0 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14310e5b0 <col:2> 'struct adpcm_state' lvalue Var 0x1430f4b68 'state' 'struct adpcm_state'     | `-ArraySubscriptExpr 0x14310e698 <col:16, col:25> '<dependent type>' contains-errors lvalue     |   |-ImplicitCastExpr 0x14310e680 <col:16> '<dependent type>' contains-errors <LValueToRValue>     |   | `-RecoveryExpr 0x14310e640 <col:16> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x14310e660 <col:24> 'int' 2     |-BinaryOperator 0x14310e790 <line:17:2, col:21> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x14310e710 <col:2, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-UnaryOperator 0x14310e6f8 <col:3, col:10> '<dependent type>' contains-errors postfix '++' cannot overflow     | |   `-RecoveryExpr 0x14310e6d8 <col:3> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x14310e748 <col:15, col:21> '<dependent type>' contains-errors lvalue .valprev     |   `-RecoveryExpr 0x14310e728 <col:15> '<dependent type>' contains-errors lvalue     |-CompoundAssignOperator 0x14310e818 <line:19:2, col:13> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-RecoveryExpr 0x14310e7d0 <col:2> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14310e7b0 <col:2> 'int *' lvalue ParmVar 0x1430f47a8 'encoded' 'int *'     | `-IntegerLiteral 0x14310e7f8 <col:13> 'int' 4     |-CallExpr 0x14310eae0 <line:21:2, col:70> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14310e9a0 <col:2> 'int ()' Function 0x14310e8e8 '_af_adpcm_decoder' 'int ()'     | |-RecoveryExpr 0x14310e9c0 <col:20> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x14310e9e0 <col:29> '<dependent type>' contains-errors lvalue     | |-BinaryOperator 0x14310ea88 <col:38, col:61> '<dependent type>' contains-errors '-'     | | |-CXXDependentScopeMemberExpr 0x14310ea20 <col:38, col:43> '<dependent type>' contains-errors lvalue ->samplesPerBlock     | | | `-RecoveryExpr 0x14310ea00 <col:38> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x14310ea68 <col:61> 'int' 1     | `-UnaryOperator 0x14310eac8 <col:64, col:65> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14310eaa8 <col:65> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14310eb58 <line:23:2, col:9>       `-ImplicitCastExpr 0x14310eb40 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x14310eb20 <col:9> 'int' lvalue Var 0x1430f49f0 'outputLength' 'int' ","19813":"`-FunctionDecl 0x14a80e350  line:1:13 init_peercred 'void (struct sock *)' static   |-ParmVarDecl 0x14a80e248 <col:27, col:40> col:40 used sk 'struct sock *'   `-CompoundStmt 0x14a826f88 <line:2:1, line:8:1>     |-CallExpr 0x14a8267f0 <line:3:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a826770 <col:2> 'int ()' Function 0x14a8266b8 'put_pid' 'int ()'     | `-RecoveryExpr 0x14a8267c8 <col:10, col:14> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14a826790 <col:10> 'struct sock *' lvalue ParmVar 0x14a80e248 'sk' 'struct sock *'     |-IfStmt 0x14a826a00 <line:4:2, line:5:28>     | |-RecoveryExpr 0x14a826850 <line:4:6, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a826818 <col:6> 'struct sock *' lvalue ParmVar 0x14a80e248 'sk' 'struct sock *'     | `-CallExpr 0x14a8269d8 <line:5:3, col:28> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14a826958 <col:3> 'int ()' Function 0x14a8268a0 'put_cred' 'int ()'     |   `-RecoveryExpr 0x14a8269b0 <col:12, col:16> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14a826978 <col:12> 'struct sock *' lvalue ParmVar 0x14a80e248 'sk' 'struct sock *'     |-BinaryOperator 0x14a826d78 <line:6:2, col:47> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14a826a58 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a826a20 <col:2> 'struct sock *' lvalue ParmVar 0x14a80e248 'sk' 'struct sock *'     | `-CallExpr 0x14a826d50 <col:21, col:47> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14a826b60 <col:21> 'int ()' Function 0x14a826aa8 'get_pid' 'int ()'     |   `-CallExpr 0x14a826d28 <col:29, col:46> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14a826c60 <col:29> 'int ()' Function 0x14a826ba8 'task_tgid' 'int ()'     |     `-RecoveryExpr 0x14a826d08 <col:39> '<dependent type>' contains-errors lvalue     `-BinaryOperator 0x14a826f68 <line:7:2, col:38> '<dependent type>' contains-errors '='       |-RecoveryExpr 0x14a826dd0 <col:2, col:6> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x14a826d98 <col:2> 'struct sock *' lvalue ParmVar 0x14a80e248 'sk' 'struct sock *'       `-CallExpr 0x14a826f48 <col:21, col:38> 'int'         `-ImplicitCastExpr 0x14a826f30 <col:21> 'int (*)()' <FunctionToPointerDecay>           `-DeclRefExpr 0x14a826ed8 <col:21> 'int ()' Function 0x14a826e20 'get_current_cred' 'int ()' ","19164":"`-FunctionDecl 0x15500dfa8  line:1:28 dup_task_struct 'struct task_struct *(struct task_struct *)' static   |-ParmVarDecl 0x15500de18 <col:44, col:64> col:64 used orig 'struct task_struct *'   `-CompoundStmt 0x15502b240 <line:2:1, line:56:1>     |-DeclStmt 0x15500e130 <line:3:2, col:25>     | `-VarDecl 0x15500e0c8 <col:2, col:22> col:22 used tsk 'struct task_struct *'     |-DeclStmt 0x15500e338 <line:4:2, col:24>     | |-RecordDecl 0x15500e148 <col:2, col:9> col:9 struct thread_info     | `-VarDecl 0x15500e2b8 <col:2, col:22> col:22 used ti 'struct thread_info *'     |-DeclStmt 0x155026600 <line:5:2, col:25>     | `-VarDecl 0x15500e398 <col:2, col:17> col:17 used stackend 'unsigned long *'     |-DeclStmt 0x155026698 <line:7:2, col:9>     | `-VarDecl 0x155026630 <col:2, col:6> col:6 used err 'int'     |-CallExpr 0x155026868 <line:9:2, col:22> 'int'     | |-ImplicitCastExpr 0x155026850 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1550267e0 <col:2> 'int ()' Function 0x155026728 'prepare_to_copy' 'int ()'     | `-ImplicitCastExpr 0x155026890 <col:18> 'struct task_struct *' <LValueToRValue>     |   `-DeclRefExpr 0x155026800 <col:18> 'struct task_struct *' lvalue ParmVar 0x15500de18 'orig' 'struct task_struct *'     |-BinaryOperator 0x155026e40 <line:11:2, col:26> 'struct task_struct *' '='     | |-DeclRefExpr 0x1550268a8 <col:2> 'struct task_struct *' lvalue Var 0x15500e0c8 'tsk' 'struct task_struct *'     | `-ImplicitCastExpr 0x155026a00 <col:8, col:26> 'struct task_struct *' <IntegralToPointer>     |   `-CallExpr 0x1550269e0 <col:8, col:26> 'int'     |     `-ImplicitCastExpr 0x1550269c8 <col:8> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x1550269a8 <col:8> 'int ()' Function 0x1550268f0 'alloc_task_struct' 'int ()'     |-IfStmt 0x155026ef8 <line:12:2, line:13:10>     | |-UnaryOperator 0x155026e98 <line:12:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x155026e80 <col:7> 'struct task_struct *' <LValueToRValue>     | |   `-DeclRefExpr 0x155026e60 <col:7> 'struct task_struct *' lvalue Var 0x15500e0c8 'tsk' 'struct task_struct *'     | `-ReturnStmt 0x155026ee8 <line:13:3, col:10>     |   `-RecoveryExpr 0x155026ec8 <col:10> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1550270c8 <line:15:2, col:28> 'struct thread_info *' '='     | |-DeclRefExpr 0x155026f18 <col:2> 'struct thread_info *' lvalue Var 0x15500e2b8 'ti' 'struct thread_info *'     | `-ImplicitCastExpr 0x1550270b0 <col:7, col:28> 'struct thread_info *' <IntegralToPointer>     |   `-CallExpr 0x155027070 <col:7, col:28> 'int'     |     |-ImplicitCastExpr 0x155027058 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x155027018 <col:7> 'int ()' Function 0x155026f60 'alloc_thread_info' 'int ()'     |     `-ImplicitCastExpr 0x155027098 <col:25> 'struct task_struct *' <LValueToRValue>     |       `-DeclRefExpr 0x155027038 <col:25> 'struct task_struct *' lvalue Var 0x15500e0c8 'tsk' 'struct task_struct *'     |-IfStmt 0x155027318 <line:16:2, line:19:2>     | |-UnaryOperator 0x155027120 <line:16:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x155027108 <col:7> 'struct thread_info *' <LValueToRValue>     | |   `-DeclRefExpr 0x1550270e8 <col:7> 'struct thread_info *' lvalue Var 0x15500e2b8 'ti' 'struct thread_info *'     | `-CompoundStmt 0x1550272f8 <col:11, line:19:2>     |   |-CallExpr 0x155027270 <line:17:3, col:23> 'int'     |   | |-ImplicitCastExpr 0x155027258 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x155027218 <col:3> 'int ()' Function 0x155027160 'free_task_struct' 'int ()'     |   | `-ImplicitCastExpr 0x155027298 <col:20> 'struct task_struct *' <LValueToRValue>     |   |   `-DeclRefExpr 0x155027238 <col:20> 'struct task_struct *' lvalue Var 0x15500e0c8 'tsk' 'struct task_struct *'     |   `-ReturnStmt 0x1550272e8 <line:18:3, col:10>     |     `-RecoveryExpr 0x1550272c8 <col:10> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x155027510 <line:21:3, col:39> 'int' '='     | |-DeclRefExpr 0x155027338 <col:3> 'int' lvalue Var 0x155026630 'err' 'int'     | `-CallExpr 0x1550274b0 <col:9, col:39> 'int'     |   |-ImplicitCastExpr 0x155027498 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x155027438 <col:9> 'int ()' Function 0x155027380 'arch_dup_task_struct' 'int ()'     |   |-ImplicitCastExpr 0x1550274e0 <col:30> 'struct task_struct *' <LValueToRValue>     |   | `-DeclRefExpr 0x155027458 <col:30> 'struct task_struct *' lvalue Var 0x15500e0c8 'tsk' 'struct task_struct *'     |   `-ImplicitCastExpr 0x1550274f8 <col:35> 'struct task_struct *' <LValueToRValue>     |     `-DeclRefExpr 0x155027478 <col:35> 'struct task_struct *' lvalue ParmVar 0x15500de18 'orig' 'struct task_struct *'     |-IfStmt 0x1550275d0 <line:22:2, line:23:8>     | |-ImplicitCastExpr 0x155027550 <line:22:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x155027530 <col:6> 'int' lvalue Var 0x155026630 'err' 'int'     | `-GotoStmt 0x1550275b8 <line:23:3, col:8> 'out' 0x155027568     |-BinaryOperator 0x15502a280 <line:25:2, col:15> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x15502a238 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15502a200 <col:2> 'struct task_struct *' lvalue Var 0x15500e0c8 'tsk' 'struct task_struct *'     | `-DeclRefExpr 0x15502a260 <col:15> 'struct thread_info *' lvalue Var 0x15500e2b8 'ti' 'struct thread_info *'     |-BinaryOperator 0x15502a460 <line:27:2, col:44> 'int' contains-errors '='     | |-DeclRefExpr 0x15502a2a0 <col:2> 'int' lvalue Var 0x155026630 'err' 'int'     | `-CallExpr 0x15502a438 <col:8, col:44> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15502a3a0 <col:8> 'int ()' Function 0x15502a2e8 'prop_local_init_single' 'int ()'     |   `-UnaryOperator 0x15502a420 <col:31, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x15502a3f8 <col:32, col:37> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x15502a3c0 <col:32> 'struct task_struct *' lvalue Var 0x15500e0c8 'tsk' 'struct task_struct *'     |-IfStmt 0x15502a4d0 <line:28:2, line:29:8>     | |-ImplicitCastExpr 0x15502a4a0 <line:28:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x15502a480 <col:6> 'int' lvalue Var 0x155026630 'err' 'int'     | `-GotoStmt 0x15502a4b8 <line:29:3, col:8> 'out' 0x155027568     |-CallExpr 0x15502a648 <line:31:2, col:30> 'int'     | |-ImplicitCastExpr 0x15502a630 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x15502a5d0 <col:2> 'int ()' Function 0x15502a518 'setup_thread_stack' 'int ()'     | |-ImplicitCastExpr 0x15502a678 <col:21> 'struct task_struct *' <LValueToRValue>     | | `-DeclRefExpr 0x15502a5f0 <col:21> 'struct task_struct *' lvalue Var 0x15500e0c8 'tsk' 'struct task_struct *'     | `-ImplicitCastExpr 0x15502a690 <col:26> 'struct task_struct *' <LValueToRValue>     |   `-DeclRefExpr 0x15502a610 <col:26> 'struct task_struct *' lvalue ParmVar 0x15500de18 'orig' 'struct task_struct *'     |-CallExpr 0x15502a7e0 <line:32:2, col:32> 'int'     | |-ImplicitCastExpr 0x15502a7c8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x15502a788 <col:2> 'int ()' Function 0x15502a6d0 'clear_user_return_notifier' 'int ()'     | `-ImplicitCastExpr 0x15502a808 <col:29> 'struct task_struct *' <LValueToRValue>     |   `-DeclRefExpr 0x15502a7a8 <col:29> 'struct task_struct *' lvalue Var 0x15500e0c8 'tsk' 'struct task_struct *'     |-BinaryOperator 0x15502a9d0 <line:33:2, col:29> 'unsigned long *' '='     | |-DeclRefExpr 0x15502a820 <col:2> 'unsigned long *' lvalue Var 0x15500e398 'stackend' 'unsigned long *'     | `-ImplicitCastExpr 0x15502a9b8 <col:13, col:29> 'unsigned long *' <IntegralToPointer>     |   `-CallExpr 0x15502a978 <col:13, col:29> 'int'     |     |-ImplicitCastExpr 0x15502a960 <col:13> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x15502a920 <col:13> 'int ()' Function 0x15502a868 'end_of_stack' 'int ()'     |     `-ImplicitCastExpr 0x15502a9a0 <col:26> 'struct task_struct *' <LValueToRValue>     |       `-DeclRefExpr 0x15502a940 <col:26> 'struct task_struct *' lvalue Var 0x15500e0c8 'tsk' 'struct task_struct *'     |-BinaryOperator 0x15502aaf8 <line:34:2, col:14> 'unsigned long' contains-errors '='     | |-UnaryOperator 0x15502aac0 <col:2, col:3> 'unsigned long' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x15502aaa8 <col:3> 'unsigned long *' <LValueToRValue>     | |   `-DeclRefExpr 0x15502a9f0 <col:3> 'unsigned long *' lvalue Var 0x15500e398 'stackend' 'unsigned long *'     | `-RecoveryExpr 0x15502aad8 <col:14> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15502acb0 <line:41:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15502abf8 <col:2> 'int ()' Function 0x15502ab40 'atomic_set' 'int ()'     | |-UnaryOperator 0x15502ac78 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x15502ac50 <col:14, col:19> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15502ac18 <col:14> 'struct task_struct *' lvalue Var 0x15500e0c8 'tsk' 'struct task_struct *'     | `-IntegerLiteral 0x15502ac90 <col:25> 'int' 2     |-CallExpr 0x15502ad98 <line:42:2, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15502ace0 <col:2> 'int ()' Function 0x15502ab40 'atomic_set' 'int ()'     | |-UnaryOperator 0x15502ad60 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x15502ad38 <col:14, col:19> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15502ad00 <col:14> 'struct task_struct *' lvalue Var 0x15500e0c8 'tsk' 'struct task_struct *'     | `-IntegerLiteral 0x15502ad78 <col:28> 'int' 0     |-CallExpr 0x15502af80 <line:48:2, col:28> 'int'     | |-ImplicitCastExpr 0x15502af68 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x15502af08 <col:2> 'int ()' Function 0x15502ae50 'account_kernel_stack' 'int ()'     | |-ImplicitCastExpr 0x15502afb0 <col:23> 'struct thread_info *' <LValueToRValue>     | | `-DeclRefExpr 0x15502af28 <col:23> 'struct thread_info *' lvalue Var 0x15500e2b8 'ti' 'struct thread_info *'     | `-IntegerLiteral 0x15502af48 <col:27> 'int' 1     |-ReturnStmt 0x15502b000 <line:50:2, col:9>     | `-ImplicitCastExpr 0x15502afe8 <col:9> 'struct task_struct *' <LValueToRValue>     |   `-DeclRefExpr 0x15502afc8 <col:9> 'struct task_struct *' lvalue Var 0x15500e0c8 'tsk' 'struct task_struct *'     |-LabelStmt 0x15502b188 <line:52:1, line:53:21> 'out'     | `-CallExpr 0x15502b148 <col:2, col:21> 'int'     |   |-ImplicitCastExpr 0x15502b130 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x15502b0f0 <col:2> 'int ()' Function 0x15502b038 'free_thread_info' 'int ()'     |   `-ImplicitCastExpr 0x15502b170 <col:19> 'struct thread_info *' <LValueToRValue>     |     `-DeclRefExpr 0x15502b110 <col:19> 'struct thread_info *' lvalue Var 0x15500e2b8 'ti' 'struct thread_info *'     `-CallExpr 0x15502b200 <line:54:2, col:22> 'int'       |-ImplicitCastExpr 0x15502b1e8 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x15502b1a8 <col:2> 'int ()' Function 0x155027160 'free_task_struct' 'int ()'       `-ImplicitCastExpr 0x15502b228 <col:19> 'struct task_struct *' <LValueToRValue>         `-DeclRefExpr 0x15502b1c8 <col:19> 'struct task_struct *' lvalue Var 0x15500e0c8 'tsk' 'struct task_struct *' ","19341":"`-FunctionDecl 0x14f144dc8  line:1:1 filter_check_src_table 'int (struct filter *, enum table_service, const char *)'   |-ParmVarDecl 0x14f128648 <col:24, col:39> col:39 used filter 'struct filter *'   |-ParmVarDecl 0x14f144c00 <col:47, col:66> col:66 invalid kind 'enum table_service'   |-ParmVarDecl 0x14f144c80 <col:72, col:84> col:84 used key 'const char *'   `-CompoundStmt 0x14f1455b8 <line:2:1, line:11:1>     |-DeclStmt 0x14f144f70 <line:3:2, col:13>     | `-VarDecl 0x14f144ee8 <col:2, col:12> col:6 used ret 'int' cinit     |   `-IntegerLiteral 0x14f144f50 <col:12> 'int' 0     |-IfStmt 0x14f1450f0 <line:5:2, line:6:10>     | |-BinaryOperator 0x14f1450a0 <line:5:6, col:35> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x14f144fe8 <col:6, col:22> '<dependent type>' contains-errors lvalue ->src_table     | | | `-RecoveryExpr 0x14f144fc0 <col:6, col:14> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x14f144f88 <col:6> 'struct filter *' lvalue ParmVar 0x14f128648 'filter' 'struct filter *'     | | `-RecoveryExpr 0x14f145080 <col:35> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14f1450e0 <line:6:3, col:10>     |   `-IntegerLiteral 0x14f1450c0 <col:10> 'int' 0     |-IfStmt 0x14f145400 <line:8:2, line:9:9>     | |-BinaryOperator 0x14f145380 <line:8:6, col:58> 'int' contains-errors '>'     | | |-CallExpr 0x14f145328 <col:6, col:54> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x14f145220 <col:6> 'int ()' Function 0x14f145168 'table_match' 'int ()'     | | | |-CXXDependentScopeMemberExpr 0x14f1452a0 <col:18, col:34> '<dependent type>' contains-errors lvalue ->src_table     | | | | `-RecoveryExpr 0x14f145278 <col:18, col:26> '<dependent type>' contains-errors lvalue     | | | |   `-DeclRefExpr 0x14f145240 <col:18> 'struct filter *' lvalue ParmVar 0x14f128648 'filter' 'struct filter *'     | | | |-RecoveryExpr 0x14f1452e8 <col:45> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x14f145308 <col:51> 'const char *' lvalue ParmVar 0x14f144c80 'key' 'const char *'     | | `-IntegerLiteral 0x14f145360 <col:58> 'int' 0     | `-BinaryOperator 0x14f1453e0 <line:9:3, col:9> 'int' '='     |   |-DeclRefExpr 0x14f1453a0 <col:3> 'int' lvalue Var 0x14f144ee8 'ret' 'int'     |   `-IntegerLiteral 0x14f1453c0 <col:9> 'int' 1     `-ReturnStmt 0x14f1455a8 <line:10:2, col:52>       `-ConditionalOperator 0x14f145578 <col:9, col:52> '<dependent type>' contains-errors         |-BinaryOperator 0x14f1454e8 <col:9, col:41> 'int' contains-errors '<'         | |-CXXDependentScopeMemberExpr 0x14f145480 <col:9, col:25> '<dependent type>' contains-errors lvalue ->not_src_table         | | `-RecoveryExpr 0x14f145458 <col:9, col:17> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x14f145420 <col:9> 'struct filter *' lvalue ParmVar 0x14f128648 'filter' 'struct filter *'         | `-IntegerLiteral 0x14f1454c8 <col:41> 'int' 0         |-UnaryOperator 0x14f145540 <col:45, col:46> 'int' prefix '!' cannot overflow         | `-ImplicitCastExpr 0x14f145528 <col:46> 'int' <LValueToRValue>         |   `-DeclRefExpr 0x14f145508 <col:46> 'int' lvalue Var 0x14f144ee8 'ret' 'int'         `-DeclRefExpr 0x14f145558 <col:52> 'int' lvalue Var 0x14f144ee8 'ret' 'int' ","19360":"`-FunctionDecl 0x138826600  line:1:1 pci_get_cfgdata16 'int (struct pci_vdev *, int)'   |-ParmVarDecl 0x13880e248 <col:19, col:36> col:36 used dev 'struct pci_vdev *'   |-ParmVarDecl 0x13880e2c8 <col:41, col:45> col:45 used offset 'int'   `-CompoundStmt 0x138826a58 <line:2:1, line:5:1> ","20070":"`-FunctionDecl 0x15680dec8  line:1:8 invalid insertRoleDocument 'int (int *, const int)'   |-ParmVarDecl 0x15680dd28 <col:27, col:45> col:45 invalid opCtx 'int *'   |-ParmVarDecl 0x15680dda8 <col:52, <invalid sloc>> col:65 invalid 'const int'   `-CompoundStmt 0x157009b00 <col:76, line:17:1>     |-IfStmt 0x15680e0e8 <line:4:5, line:6:5>     | |-CallExpr 0x15680e068 <line:4:9, col:21> '<dependent type>' contains-errors     | | `-CXXDependentScopeMemberExpr 0x15680e020 <col:9, col:16> '<dependent type>' contains-errors lvalue .isOK     | |   `-RecoveryExpr 0x15680e000 <col:9> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x15680e0d0 <col:24, line:6:5>     |   `-ReturnStmt 0x15680e0c0 <line:5:9, col:16>     |     `-RecoveryExpr 0x15680e0a0 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x157009910 <line:7:5, line:12:5>     | |-BinaryOperator 0x15680e268 <line:7:9, col:26> 'int' contains-errors '=='     | | |-CallExpr 0x15680e228 <col:9, col:21> '<dependent type>' contains-errors     | | | `-CXXDependentScopeMemberExpr 0x15680e1e0 <col:9, col:16> '<dependent type>' contains-errors lvalue .code     | | |   `-RecoveryExpr 0x15680e1c0 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x15680e248 <col:26> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1570098f0 <col:52, line:12:5>     |   |-RecoveryExpr 0x15680e2b8 <line:8:9> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x15680e308 <line:9:9> '<dependent type>' contains-errors lvalue     `-IfStmt 0x157009ae0 <line:13:5, line:15:5>       |-BinaryOperator 0x157009a90 <line:13:9, col:26> 'int' contains-errors '=='       | |-CallExpr 0x157009a50 <col:9, col:21> '<dependent type>' contains-errors       | | `-CXXDependentScopeMemberExpr 0x157009a08 <col:9, col:16> '<dependent type>' contains-errors lvalue .code       | |   `-RecoveryExpr 0x1570099e8 <col:9> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x157009a70 <col:26> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x157009ad0 <col:52, line:15:5> ","19626":"`-FunctionDecl 0x14f02a918  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x14f02aa18 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x14f02aa80 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x14f02aae8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14f02a9c0 <<invalid sloc>> Implicit 882 ","19319":"`-FunctionDecl 0x159128688  line:1:1 invalid add_metadata_to_deploy_data 'int (int *, int *)'   |-ParmVarDecl 0x159128528 <col:30, col:44> col:44 invalid metadata_dict 'int *'   |-ParmVarDecl 0x1591285a8 <line:2:30, col:44> col:44 invalid keyfile 'int *'   `-CompoundStmt 0x159141fe8 <line:3:1, line:20:1>     |-IfStmt 0x159141df8 <line:14:3, line:16:76>     | |-RecoveryExpr 0x159128a48 <line:14:7> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x159141dc0 <line:15:5, line:16:76> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x159128b48 <line:15:5> 'int ()' Function 0x159128a90 'g_variant_dict_insert_value' 'int ()'     |   |-RecoveryExpr 0x159128b68 <col:34> '<dependent type>' contains-errors lvalue     |   |-StringLiteral 0x159128bd0 <col:49> 'char[4]' lvalue \"STR\"     |   `-CallExpr 0x159141d98 <line:16:34, col:75> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x159141ce0 <col:34> 'int ()' Function 0x159141c28 'g_variant_new_string' 'int ()'     |     `-RecoveryExpr 0x159141d78 <col:56> '<dependent type>' contains-errors lvalue     `-IfStmt 0x159141fc8 <line:17:3, line:19:69>       |-RecoveryExpr 0x159141e30 <line:17:7> '<dependent type>' contains-errors lvalue       `-CallExpr 0x159141f90 <line:18:5, line:19:69> '<dependent type>' contains-errors         |-DeclRefExpr 0x159141e50 <line:18:5> 'int ()' Function 0x159128a90 'g_variant_dict_insert_value' 'int ()'         |-RecoveryExpr 0x159141e70 <col:34> '<dependent type>' contains-errors lvalue         |-StringLiteral 0x159141e90 <col:49> 'char[4]' lvalue \"STR\"         `-CallExpr 0x159141f68 <line:19:34, col:68> '<dependent type>' contains-errors           |-DeclRefExpr 0x159141eb0 <col:34> 'int ()' Function 0x159141c28 'g_variant_new_string' 'int ()'           `-RecoveryExpr 0x159141f48 <col:56> '<dependent type>' contains-errors lvalue ","19308":"`-FunctionDecl 0x11d9281f8  line:1:12 invalid wddx_stack_destroy 'int (int *)' static   |-ParmVarDecl 0x11d928128 <col:31, col:43> col:43 invalid stack 'int *'   `-CompoundStmt 0x11d941b20 <line:2:1, line:18:1>     |-DeclStmt 0x11d928328 <line:3:2, col:16>     | `-VarDecl 0x11d9282c0 <col:2, col:15> col:15 used i 'int' register     |-IfStmt 0x11d941ab8 <line:5:2, line:16:2>     | |-CXXDependentScopeMemberExpr 0x11d928360 <line:5:6, col:13> '<dependent type>' contains-errors lvalue ->elements     | | `-RecoveryExpr 0x11d928340 <col:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x11d941a98 <col:23, line:16:2>     |   |-ForStmt 0x11d9419b0 <line:6:3, line:14:3>     |   | |-BinaryOperator 0x11d9283e8 <line:6:8, col:12> 'int' '='     |   | | |-DeclRefExpr 0x11d9283a8 <col:8> 'int' lvalue Var 0x11d9282c0 'i' 'int'     |   | | `-IntegerLiteral 0x11d9283c8 <col:12> 'int' 0     |   | |-<<<NULL>>>     |   | |-BinaryOperator 0x11d928490 <col:15, col:26> 'int' contains-errors '<'     |   | | |-DeclRefExpr 0x11d928408 <col:15> 'int' lvalue Var 0x11d9282c0 'i' 'int'     |   | | `-CXXDependentScopeMemberExpr 0x11d928448 <col:19, col:26> '<dependent type>' contains-errors lvalue ->top     |   | |   `-RecoveryExpr 0x11d928428 <col:19> '<dependent type>' contains-errors lvalue     |   | |-UnaryOperator 0x11d9284d0 <col:31, col:32> 'int' postfix '++'     |   | | `-DeclRefExpr 0x11d9284b0 <col:31> 'int' lvalue Var 0x11d9282c0 'i' 'int'     |   | `-CompoundStmt 0x11d941988 <col:36, line:14:3>     |   |   |-IfStmt 0x11d9286c8 <line:7:4, line:9:4>     |   |   | |-RecoveryExpr 0x11d928500 <line:7:8, col:42> '_Bool' contains-errors     |   |   | `-CompoundStmt 0x11d9286b8 <col:48, line:9:4>     |   |   |-IfStmt 0x11d941848 <line:10:4, line:12:4>     |   |   | |-RecoveryExpr 0x11d928700 <line:10:8, col:42> '_Bool' contains-errors     |   |   | `-CompoundStmt 0x11d941838 <col:51, line:12:4>     |   |   `-CallExpr 0x11d941960 <line:13:4, col:28> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x11d941868 <col:4> 'int ()' Function 0x11d928748 'efree' 'int ()'     |   |     `-ArraySubscriptExpr 0x11d941940 <col:10, col:27> '<dependent type>' contains-errors lvalue     |   |       |-ImplicitCastExpr 0x11d941910 <col:10, col:17> '<dependent type>' contains-errors <LValueToRValue>     |   |       | `-CXXDependentScopeMemberExpr 0x11d9418a8 <col:10, col:17> '<dependent type>' contains-errors lvalue ->elements     |   |       |   `-RecoveryExpr 0x11d941888 <col:10> '<dependent type>' contains-errors lvalue     |   |       `-ImplicitCastExpr 0x11d941928 <col:26> 'int' <LValueToRValue>     |   |         `-DeclRefExpr 0x11d9418f0 <col:26> 'int' lvalue Var 0x11d9282c0 'i' 'int'     |   `-CallExpr 0x11d941a70 <line:15:3, col:24> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x11d9419e8 <col:3> 'int ()' Function 0x11d928748 'efree' 'int ()'     |     `-CXXDependentScopeMemberExpr 0x11d941a28 <col:9, col:16> '<dependent type>' contains-errors lvalue ->elements     |       `-RecoveryExpr 0x11d941a08 <col:9> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x11d941b10 <line:17:2, col:9>       `-RecoveryExpr 0x11d941af0 <col:9> '<dependent type>' contains-errors lvalue ","19817":"`-FunctionDecl 0x15983f520  line:1:6 netif_napi_add 'void (struct net_device *, struct napi_struct *, int (*)(struct napi_struct *, int), int)'   |-ParmVarDecl 0x15981f848 <col:21, col:40> col:40 used dev 'struct net_device *'   |-ParmVarDecl 0x15983f028 <col:45, col:65> col:65 used napi 'struct napi_struct *'   |-ParmVarDecl 0x15983f358 <line:2:7, col:44> col:13 used poll 'int (*)(struct napi_struct *, int)'   |-ParmVarDecl 0x15983f3d8 <col:47, col:51> col:51 used weight 'int'   `-CompoundStmt 0x15b009080 <line:3:1, line:17:1>     |-CallExpr 0x15983f7f8 <line:4:2, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15983f760 <col:2> 'int ()' Function 0x15983f6a8 'INIT_LIST_HEAD' 'int ()'     | `-UnaryOperator 0x15983f7e0 <col:17, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x15983f7b8 <col:18, col:24> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x15983f780 <col:18> 'struct napi_struct *' lvalue ParmVar 0x15983f028 'napi' 'struct napi_struct *'     |-BinaryOperator 0x15983f8a0 <line:5:2, col:20> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x15983f858 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15983f820 <col:2> 'struct napi_struct *' lvalue ParmVar 0x15983f028 'napi' 'struct napi_struct *'     | `-IntegerLiteral 0x15983f880 <col:20> 'int' 0     |-BinaryOperator 0x15983f978 <line:6:2, col:19> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x15983f8f8 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15983f8c0 <col:2> 'struct napi_struct *' lvalue ParmVar 0x15983f028 'napi' 'struct napi_struct *'     | `-RecoveryExpr 0x15983f958 <col:19> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x15983fa50 <line:7:2, col:14> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x15983f9d0 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15983f998 <col:2> 'struct napi_struct *' lvalue ParmVar 0x15983f028 'napi' 'struct napi_struct *'     | `-RecoveryExpr 0x15983fa30 <col:14> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x15983faf0 <line:8:2, col:15> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x15983faa8 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15983fa70 <col:2> 'struct napi_struct *' lvalue ParmVar 0x15983f028 'napi' 'struct napi_struct *'     | `-DeclRefExpr 0x15983fad0 <col:15> 'int (*)(struct napi_struct *, int)' lvalue ParmVar 0x15983f358 'poll' 'int (*)(struct napi_struct *, int)'     |-BinaryOperator 0x15983fb90 <line:9:2, col:17> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x15983fb48 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15983fb10 <col:2> 'struct napi_struct *' lvalue ParmVar 0x15983f028 'napi' 'struct napi_struct *'     | `-DeclRefExpr 0x15983fb70 <col:17> 'int' lvalue ParmVar 0x15983f3d8 'weight' 'int'     |-CallExpr 0x15983fda0 <line:10:2, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15983fc90 <col:2> 'int ()' Function 0x15983fbd8 'list_add' 'int ()'     | |-UnaryOperator 0x15983fd10 <col:11, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x15983fce8 <col:12, col:18> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15983fcb0 <col:12> 'struct napi_struct *' lvalue ParmVar 0x15983f028 'napi' 'struct napi_struct *'     | `-UnaryOperator 0x15983fd88 <col:28, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x15983fd60 <col:29, col:34> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x15983fd28 <col:29> 'struct net_device *' lvalue ParmVar 0x15981f848 'dev' 'struct net_device *'     |-BinaryOperator 0x15983fe50 <line:11:2, col:14> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x15983fe08 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15983fdd0 <col:2> 'struct napi_struct *' lvalue ParmVar 0x15983f028 'napi' 'struct napi_struct *'     | `-DeclRefExpr 0x15983fe30 <col:14> 'struct net_device *' lvalue ParmVar 0x15981f848 'dev' 'struct net_device *'     `-CallExpr 0x15b009050 <line:16:2, col:40> '<dependent type>' contains-errors       |-DeclRefExpr 0x15983ff50 <col:2> 'int ()' Function 0x15983fe98 'set_bit' 'int ()'       |-RecoveryExpr 0x15b009030 <col:10> '<dependent type>' contains-errors lvalue       `-UnaryOperator 0x15983ffe8 <col:28, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x15983ffc0 <col:29, col:35> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x15983ff88 <col:29> 'struct napi_struct *' lvalue ParmVar 0x15983f028 'napi' 'struct napi_struct *' ","19175":"`-FunctionDecl 0x13e9281a8  line:1:1 PHP_FUNCTION 'int (int)'   |-ParmVarDecl 0x13e9280d8 <col:14> col:14 wddx_deserialize 'int'   `-CompoundStmt 0x13f00ae00 <line:2:1, line:34:1>     |-DeclStmt 0x13e928350 <line:4:2, col:15>     | `-VarDecl 0x13e9282e8 <col:2, col:8> col:8 used payload 'char *'     |-DeclStmt 0x13e9283e8 <line:5:2, col:17>     | `-VarDecl 0x13e928380 <col:2, col:6> col:6 used payload_len 'int'     |-IfStmt 0x13e928728 <line:8:2, line:10:2>     | |-RecoveryExpr 0x13e9286e0 <line:8:6, col:74> '_Bool' contains-errors     | `-CompoundStmt 0x13e928710 <col:83, line:10:2>     |   `-ReturnStmt 0x13e928700 <line:9:3>     |-IfStmt 0x13f0097b8 <line:12:2, line:23:2> has_else     | |-BinaryOperator 0x13f008db8 <line:12:6, col:26> 'int' contains-errors '=='     | | |-CallExpr 0x13f008d70 <col:6, col:21> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x13f008cb8 <col:6> 'int ()' Function 0x13f008c00 'Z_TYPE_P' 'int ()'     | | | `-RecoveryExpr 0x13f008d50 <col:15> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13f008d98 <col:26> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x13f0091a8 <col:37, line:15:2>     | | |-BinaryOperator 0x13f008fa0 <line:13:3, col:31> 'char *' contains-errors '='     | | | |-DeclRefExpr 0x13f008dd8 <col:3> 'char *' lvalue Var 0x13e9282e8 'payload' 'char *'     | | | `-CallExpr 0x13f008f78 <col:14, col:31> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x13f008ed8 <col:14> 'int ()' Function 0x13f008e20 'Z_STRVAL_P' 'int ()'     | | |   `-RecoveryExpr 0x13f008f58 <col:25> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x13f009188 <line:14:3, col:34> 'int' contains-errors '='     | |   |-DeclRefExpr 0x13f008fc0 <col:3> 'int' lvalue Var 0x13e928380 'payload_len' 'int'     | |   `-CallExpr 0x13f009160 <col:17, col:34> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x13f0090c0 <col:17> 'int ()' Function 0x13f009008 'Z_STRLEN_P' 'int ()'     | |     `-RecoveryExpr 0x13f009140 <col:28> '<dependent type>' contains-errors lvalue     | `-IfStmt 0x13f009788 <line:15:9, line:23:2> has_else     |   |-BinaryOperator 0x13f0092c8 <line:15:13, col:33> 'int' contains-errors '=='     |   | |-CallExpr 0x13f009280 <col:13, col:28> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x13f0091c8 <col:13> 'int ()' Function 0x13f008c00 'Z_TYPE_P' 'int ()'     |   | | `-RecoveryExpr 0x13f009260 <col:22> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x13f0092a8 <col:33> '<dependent type>' contains-errors lvalue     |   |-CompoundStmt 0x13f0095e8 <col:46, line:20:2>     |   | `-IfStmt 0x13f0095c8 <line:17:3, line:19:3>     |   |   |-RecoveryExpr 0x13f0093e8 <line:17:7> '_Bool' contains-errors     |   |   `-CompoundStmt 0x13f0095b8 <col:15, line:19:3>     |   `-CompoundStmt 0x13f009770 <line:20:9, line:23:2>     |     `-ReturnStmt 0x13f009760 <line:22:3>     |-IfStmt 0x13f009888 <line:25:2, line:27:2>     | |-BinaryOperator 0x13f009840 <line:25:6, col:21> 'int' '=='     | | |-ImplicitCastExpr 0x13f009828 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x13f0097e8 <col:6> 'int' lvalue Var 0x13e928380 'payload_len' 'int'     | | `-IntegerLiteral 0x13f009808 <col:21> 'int' 0     | `-CompoundStmt 0x13f009870 <col:24, line:27:2>     |   `-ReturnStmt 0x13f009860 <line:26:3>     `-IfStmt 0x13f009bc0 <line:31:2, line:33:2>       |-RecoveryExpr 0x13f0099e8 <line:31:6> '_Bool' contains-errors       `-CompoundStmt 0x13f009ba8 <col:14, line:33:2>         `-CallExpr 0x13f009b60 <line:32:3, col:20> 'int'           |-ImplicitCastExpr 0x13f009b48 <col:3> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x13f009ae8 <col:3> 'int ()' Function 0x13f009a30 'pefree' 'int ()'           |-ImplicitCastExpr 0x13f009b90 <col:10> 'char *' <LValueToRValue>           | `-DeclRefExpr 0x13f009b08 <col:10> 'char *' lvalue Var 0x13e9282e8 'payload' 'char *'           `-IntegerLiteral 0x13f009b28 <col:19> 'int' 0 ","20019":"`-FunctionDecl 0x153829020  col:7 implicit used printf 'int (const char *, ...)' extern   |-ParmVarDecl 0x153829120 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x1538290c8 <<invalid sloc>> Implicit 903   `-FormatAttr 0x153829190 <col:7> Implicit printf 1 2 ","19630":"`-FunctionDecl 0x13d8d71f0  col:5 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x13d8d72f0 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x13d8d7298 <<invalid sloc>> Implicit 873 ","19548":"`-FunctionDecl 0x12f8109c8  line:1:1 invalid PeiSwitchBSP 'int (int)'   |-ParmVarDecl 0x12f8108f0 <line:2:3, col:7> col:7 invalid CONST 'int'   `-CompoundStmt 0x12f810cd0 <line:7:1, line:9:1>     `-ReturnStmt 0x12f810cc0 <line:8:3, col:59>       `-CallExpr 0x12f810c90 <col:10, col:59> '<dependent type>' contains-errors         |-DeclRefExpr 0x12f810bd0 <col:10> 'int ()' Function 0x12f810b18 'MpInitLibSwitchBSP' 'int ()'         |-RecoveryExpr 0x12f810c50 <col:30> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x12f810c70 <col:47> '<dependent type>' contains-errors lvalue ","20182":"`-FunctionDecl 0x1331282f8  line:1:12 ipv6_hex 'int (unsigned char *, const char *, int)' static   |-ParmVarDecl 0x133128108 <col:21, col:36> col:36 used out 'unsigned char *'   |-ParmVarDecl 0x133128188 <col:41, col:53> col:53 used in 'const char *'   |-ParmVarDecl 0x133128208 <col:57, col:61> col:61 used inlen 'int'   `-CompoundStmt 0x1331414f0 <line:2:2, line:23:2>     |-DeclStmt 0x133128480 <line:3:2, col:17>     | `-VarDecl 0x133128418 <col:2, col:16> col:16 used c 'unsigned char'     |-DeclStmt 0x133128550 <line:4:2, col:22>     | `-VarDecl 0x1331284b0 <col:2, col:21> col:15 used num 'unsigned int' cinit     |   `-ImplicitCastExpr 0x133128538 <col:21> 'unsigned int' <IntegralCast>     |     `-IntegerLiteral 0x133128518 <col:21> 'int' 0     |-IfStmt 0x133128610 <line:5:2, line:6:10>     | |-BinaryOperator 0x1331285c0 <line:5:6, col:14> 'int' '>'     | | |-ImplicitCastExpr 0x1331285a8 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x133128568 <col:6> 'int' lvalue ParmVar 0x133128208 'inlen' 'int'     | | `-IntegerLiteral 0x133128588 <col:14> 'int' 4     | `-ReturnStmt 0x133128600 <line:6:3, col:10>     |   `-IntegerLiteral 0x1331285e0 <col:10> 'int' 0     |-WhileStmt 0x133141238 <line:7:2, line:19:3>     | |-UnaryOperator 0x133128650 <line:7:8, col:13> 'int' postfix '--'     | | `-DeclRefExpr 0x133128630 <col:8> 'int' lvalue ParmVar 0x133128208 'inlen' 'int'     | `-CompoundStmt 0x133141210 <line:8:3, line:19:3>     |   |-BinaryOperator 0x133128708 <line:9:3, col:10> 'unsigned char' '='     |   | |-DeclRefExpr 0x133128668 <col:3> 'unsigned char' lvalue Var 0x133128418 'c' 'unsigned char'     |   | `-ImplicitCastExpr 0x1331286f0 <col:7, col:10> 'unsigned char' <IntegralCast>     |   |   `-ImplicitCastExpr 0x1331286d8 <col:7, col:10> 'char' <LValueToRValue>     |   |     `-UnaryOperator 0x1331286c0 <col:7, col:10> 'const char' lvalue prefix '*' cannot overflow     |   |       `-UnaryOperator 0x1331286a8 <col:8, col:10> 'const char *' postfix '++'     |   |         `-DeclRefExpr 0x133128688 <col:8> 'const char *' lvalue ParmVar 0x133128188 'in' 'const char *'     |   |-CompoundAssignOperator 0x133128780 <line:10:3, col:11> 'unsigned int' '<<=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'     |   | |-DeclRefExpr 0x133128728 <col:3> 'unsigned int' lvalue Var 0x1331284b0 'num' 'unsigned int'     |   | `-IntegerLiteral 0x133128748 <col:11> 'int' 4     |   `-IfStmt 0x1331411e0 <line:11:3, line:18:11> has_else     |     |-BinaryOperator 0x133140b00 <line:11:7, col:30> 'int' '&&'     |     | |-ParenExpr 0x133140a38 <col:7, col:16> 'int'     |     | | `-BinaryOperator 0x133140a18 <col:8, col:13> 'int' '>='     |     | |   |-ImplicitCastExpr 0x133140a00 <col:8> 'int' <IntegralCast>     |     | |   | `-ImplicitCastExpr 0x1331287e8 <col:8> 'unsigned char' <LValueToRValue>     |     | |   |   `-DeclRefExpr 0x1331287b0 <col:8> 'unsigned char' lvalue Var 0x133128418 'c' 'unsigned char'     |     | |   `-CharacterLiteral 0x1331287d0 <col:13> 'int' 48     |     | `-ParenExpr 0x133140ae0 <col:21, col:30> 'int'     |     |   `-BinaryOperator 0x133140ac0 <col:22, col:27> 'int' '<='     |     |     |-ImplicitCastExpr 0x133140aa8 <col:22> 'int' <IntegralCast>     |     |     | `-ImplicitCastExpr 0x133140a90 <col:22> 'unsigned char' <LValueToRValue>     |     |     |   `-DeclRefExpr 0x133140a58 <col:22> 'unsigned char' lvalue Var 0x133128418 'c' 'unsigned char'     |     |     `-CharacterLiteral 0x133140a78 <col:27> 'int' 57     |     |-CompoundAssignOperator 0x133140be0 <line:12:4, col:15> 'unsigned int' '|=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'     |     | |-DeclRefExpr 0x133140b20 <col:4> 'unsigned int' lvalue Var 0x1331284b0 'num' 'unsigned int'     |     | `-ImplicitCastExpr 0x133140bc8 <col:11, col:15> 'unsigned int' <IntegralCast>     |     |   `-BinaryOperator 0x133140ba8 <col:11, col:15> 'int' '-'     |     |     |-ImplicitCastExpr 0x133140b90 <col:11> 'int' <IntegralCast>     |     |     | `-ImplicitCastExpr 0x133140b78 <col:11> 'unsigned char' <LValueToRValue>     |     |     |   `-DeclRefExpr 0x133140b40 <col:11> 'unsigned char' lvalue Var 0x133128418 'c' 'unsigned char'     |     |     `-CharacterLiteral 0x133140b60 <col:15> 'int' 48     |     `-IfStmt 0x1331411b0 <line:13:8, line:18:11> has_else     |       |-BinaryOperator 0x133140d60 <line:13:12, col:35> 'int' '&&'     |       | |-ParenExpr 0x133140c98 <col:12, col:21> 'int'     |       | | `-BinaryOperator 0x133140c78 <col:13, col:18> 'int' '>='     |       | |   |-ImplicitCastExpr 0x133140c60 <col:13> 'int' <IntegralCast>     |       | |   | `-ImplicitCastExpr 0x133140c48 <col:13> 'unsigned char' <LValueToRValue>     |       | |   |   `-DeclRefExpr 0x133140c10 <col:13> 'unsigned char' lvalue Var 0x133128418 'c' 'unsigned char'     |       | |   `-CharacterLiteral 0x133140c30 <col:18> 'int' 65     |       | `-ParenExpr 0x133140d40 <col:26, col:35> 'int'     |       |   `-BinaryOperator 0x133140d20 <col:27, col:32> 'int' '<='     |       |     |-ImplicitCastExpr 0x133140d08 <col:27> 'int' <IntegralCast>     |       |     | `-ImplicitCastExpr 0x133140cf0 <col:27> 'unsigned char' <LValueToRValue>     |       |     |   `-DeclRefExpr 0x133140cb8 <col:27> 'unsigned char' lvalue Var 0x133128418 'c' 'unsigned char'     |       |     `-CharacterLiteral 0x133140cd8 <col:32> 'int' 70     |       |-CompoundAssignOperator 0x133140e80 <line:14:4, col:21> 'unsigned int' '|=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'     |       | |-DeclRefExpr 0x133140d80 <col:4> 'unsigned int' lvalue Var 0x1331284b0 'num' 'unsigned int'     |       | `-ImplicitCastExpr 0x133140e68 <col:11, col:21> 'unsigned int' <IntegralCast>     |       |   `-BinaryOperator 0x133140e48 <col:11, col:21> 'int' '+'     |       |     |-BinaryOperator 0x133140e08 <col:11, col:15> 'int' '-'     |       |     | |-ImplicitCastExpr 0x133140df0 <col:11> 'int' <IntegralCast>     |       |     | | `-ImplicitCastExpr 0x133140dd8 <col:11> 'unsigned char' <LValueToRValue>     |       |     | |   `-DeclRefExpr 0x133140da0 <col:11> 'unsigned char' lvalue Var 0x133128418 'c' 'unsigned char'     |       |     | `-CharacterLiteral 0x133140dc0 <col:15> 'int' 65     |       |     `-IntegerLiteral 0x133140e28 <col:21> 'int' 10     |       `-IfStmt 0x133141180 <line:15:8, line:18:11> has_else     |         |-BinaryOperator 0x133141000 <line:15:12, col:35> 'int' '&&'     |         | |-ParenExpr 0x133140f38 <col:12, col:21> 'int'     |         | | `-BinaryOperator 0x133140f18 <col:13, col:18> 'int' '>='     |         | |   |-ImplicitCastExpr 0x133140f00 <col:13> 'int' <IntegralCast>     |         | |   | `-ImplicitCastExpr 0x133140ee8 <col:13> 'unsigned char' <LValueToRValue>     |         | |   |   `-DeclRefExpr 0x133140eb0 <col:13> 'unsigned char' lvalue Var 0x133128418 'c' 'unsigned char'     |         | |   `-CharacterLiteral 0x133140ed0 <col:18> 'int' 97     |         | `-ParenExpr 0x133140fe0 <col:26, col:35> 'int'     |         |   `-BinaryOperator 0x133140fc0 <col:27, col:32> 'int' '<='     |         |     |-ImplicitCastExpr 0x133140fa8 <col:27> 'int' <IntegralCast>     |         |     | `-ImplicitCastExpr 0x133140f90 <col:27> 'unsigned char' <LValueToRValue>     |         |     |   `-DeclRefExpr 0x133140f58 <col:27> 'unsigned char' lvalue Var 0x133128418 'c' 'unsigned char'     |         |     `-CharacterLiteral 0x133140f78 <col:32> 'int' 102     |         |-CompoundAssignOperator 0x133141120 <line:16:4, col:22> 'unsigned int' '|=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'     |         | |-DeclRefExpr 0x133141020 <col:4> 'unsigned int' lvalue Var 0x1331284b0 'num' 'unsigned int'     |         | `-ImplicitCastExpr 0x133141108 <col:12, col:22> 'unsigned int' <IntegralCast>     |         |   `-BinaryOperator 0x1331410e8 <col:12, col:22> 'int' '+'     |         |     |-BinaryOperator 0x1331410a8 <col:12, col:16> 'int' '-'     |         |     | |-ImplicitCastExpr 0x133141090 <col:12> 'int' <IntegralCast>     |         |     | | `-ImplicitCastExpr 0x133141078 <col:12> 'unsigned char' <LValueToRValue>     |         |     | |   `-DeclRefExpr 0x133141040 <col:12> 'unsigned char' lvalue Var 0x133128418 'c' 'unsigned char'     |         |     | `-CharacterLiteral 0x133141060 <col:16> 'int' 97     |         |     `-IntegerLiteral 0x1331410c8 <col:22> 'int' 10     |         `-ReturnStmt 0x133141170 <line:18:4, col:11>     |           `-IntegerLiteral 0x133141150 <col:11> 'int' 0     |-BinaryOperator 0x133141360 <line:20:2, col:18> 'unsigned char' '='     | |-ArraySubscriptExpr 0x1331412b0 <col:2, col:7> 'unsigned char' lvalue     | | |-ImplicitCastExpr 0x133141298 <col:2> 'unsigned char *' <LValueToRValue>     | | | `-DeclRefExpr 0x133141258 <col:2> 'unsigned char *' lvalue ParmVar 0x133128108 'out' 'unsigned char *'     | | `-IntegerLiteral 0x133141278 <col:6> 'int' 0     | `-ImplicitCastExpr 0x133141348 <col:11, col:18> 'unsigned char' <IntegralCast>     |   `-BinaryOperator 0x133141328 <col:11, col:18> 'unsigned int' '>>'     |     |-ImplicitCastExpr 0x133141310 <col:11> 'unsigned int' <LValueToRValue>     |     | `-DeclRefExpr 0x1331412d0 <col:11> 'unsigned int' lvalue Var 0x1331284b0 'num' 'unsigned int'     |     `-IntegerLiteral 0x1331412f0 <col:18> 'int' 8     |-BinaryOperator 0x1331414a0 <line:21:2, col:17> 'unsigned char' '='     | |-ArraySubscriptExpr 0x1331413d8 <col:2, col:7> 'unsigned char' lvalue     | | |-ImplicitCastExpr 0x1331413c0 <col:2> 'unsigned char *' <LValueToRValue>     | | | `-DeclRefExpr 0x133141380 <col:2> 'unsigned char *' lvalue ParmVar 0x133128108 'out' 'unsigned char *'     | | `-IntegerLiteral 0x1331413a0 <col:6> 'int' 1     | `-ImplicitCastExpr 0x133141488 <col:11, col:17> 'unsigned char' <IntegralCast>     |   `-BinaryOperator 0x133141468 <col:11, col:17> 'unsigned int' '&'     |     |-ImplicitCastExpr 0x133141438 <col:11> 'unsigned int' <LValueToRValue>     |     | `-DeclRefExpr 0x1331413f8 <col:11> 'unsigned int' lvalue Var 0x1331284b0 'num' 'unsigned int'     |     `-ImplicitCastExpr 0x133141450 <col:17> 'unsigned int' <IntegralCast>     |       `-IntegerLiteral 0x133141418 <col:17> 'int' 255     `-ReturnStmt 0x1331414e0 <line:22:2, col:9>       `-IntegerLiteral 0x1331414c0 <col:9> 'int' 1 ","19754":"`-FunctionDecl 0x131033438  line:1:12 invalid php_object_property_dump 'int (int **)' static   |-ParmVarDecl 0x131033360 <col:37, col:44> col:44 invalid zv 'int **'   `-CompoundStmt 0x131058280 <line:2:1, line:29:1>     |-DeclStmt 0x131033568 <line:3:2, col:11>     | `-VarDecl 0x131033500 <col:2, col:6> col:6 used level 'int'     |-DeclStmt 0x131033698 <line:4:2, col:36>     | |-VarDecl 0x131033598 <col:2, col:14> col:14 used prop_name 'const char *'     | `-VarDecl 0x131033618 <col:2, col:26> col:26 used class_name 'const char *'     |-IfStmt 0x131058088 <line:8:2, line:26:2> has_else     | |-BinaryOperator 0x131033970 <line:8:6, col:30> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x131033928 <col:6, col:16> '<dependent type>' contains-errors lvalue ->nKeyLength     | | | `-RecoveryExpr 0x131033908 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x1310338c8 <col:30> 'int' 0     | |-CompoundStmt 0x1318f3788 <col:33, line:10:2>     | | `-CallExpr 0x1318f3748 <line:9:3, col:48> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x1318f34b8 <col:3> 'int ()' Function 0x1318f3400 'php_printf' 'int ()'     | |   |-StringLiteral 0x1318f3520 <col:14> 'char[4]' lvalue \"STR\"     | |   |-BinaryOperator 0x1318f36c0 <col:21, col:29> 'int' '+'     | |   | |-ImplicitCastExpr 0x1318f36a8 <col:21> 'int' <LValueToRValue>     | |   | | `-DeclRefExpr 0x1318f3540 <col:21> 'int' lvalue Var 0x131033500 'level' 'int'     | |   | `-IntegerLiteral 0x1318f3560 <col:29> 'int' 1     | |   |-CharacterLiteral 0x1318f35b8 <col:32> 'int' 32     | |   `-CXXDependentScopeMemberExpr 0x1318f3700 <col:37, col:47> '<dependent type>' contains-errors lvalue ->h     | |     `-RecoveryExpr 0x1318f36e0 <col:37> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x131058058 <line:10:9, line:26:2>     |   |-DeclStmt 0x1318f3c30 <line:11:3, col:113>     |   | `-VarDecl 0x1318f37b8 <col:3, col:112> col:7 used unmangle 'int' cinit     |   |   `-CallExpr 0x1318f3bf0 <col:18, col:112> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x1318f3900 <col:18> 'int ()' Function 0x1318f3848 'zend_unmangle_property_name' 'int ()'     |   |     |-CXXDependentScopeMemberExpr 0x1318f3b20 <col:46, col:56> '<dependent type>' contains-errors lvalue ->arKey     |   |     | `-RecoveryExpr 0x1318f3b00 <col:46> '<dependent type>' contains-errors lvalue     |   |     |-BinaryOperator 0x1318f3bd0 <col:63, col:86> '<dependent type>' contains-errors '-'     |   |     | |-CXXDependentScopeMemberExpr 0x1318f3b88 <col:63, col:73> '<dependent type>' contains-errors lvalue ->nKeyLength     |   |     | | `-RecoveryExpr 0x1318f3b68 <col:63> '<dependent type>' contains-errors lvalue     |   |     | `-IntegerLiteral 0x1318f39e0 <col:86> 'int' 1     |   |     |-UnaryOperator 0x1318f3a70 <col:89, col:90> 'const char **' prefix '&' cannot overflow     |   |     | `-DeclRefExpr 0x1318f3a20 <col:90> 'const char *' lvalue Var 0x131033618 'class_name' 'const char *'     |   |     `-UnaryOperator 0x1318f3aa8 <col:102, col:103> 'const char **' prefix '&' cannot overflow     |   |       `-DeclRefExpr 0x1318f3a88 <col:103> 'const char *' lvalue Var 0x131033598 'prop_name' 'const char *'     |   |-CallExpr 0x1318f3d68 <line:12:3, col:35> 'int'     |   | |-ImplicitCastExpr 0x1318f3d50 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x1318f3c48 <col:3> 'int ()' Function 0x1318f3400 'php_printf' 'int ()'     |   | |-ImplicitCastExpr 0x1318f3da0 <col:14> 'char *' <ArrayToPointerDecay>     |   | | `-StringLiteral 0x1318f3c68 <col:14> 'char[4]' lvalue \"STR\"     |   | |-BinaryOperator 0x1318f3ce0 <col:21, col:29> 'int' '+'     |   | | |-ImplicitCastExpr 0x1318f3cc8 <col:21> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x1318f3c88 <col:21> 'int' lvalue Var 0x131033500 'level' 'int'     |   | | `-IntegerLiteral 0x1318f3ca8 <col:29> 'int' 1     |   | `-CharacterLiteral 0x1318f3d00 <col:32> 'int' 32     |   |-IfStmt 0x131057eb0 <line:14:3, line:24:3> has_else     |   | |-BinaryOperator 0x1318f3e90 <line:14:7, col:33> 'int' contains-errors '&&'     |   | | |-DeclRefExpr 0x1318f3db8 <col:7> 'const char *' lvalue Var 0x131033618 'class_name' 'const char *'     |   | | `-BinaryOperator 0x1318f3e70 <col:21, col:33> 'int' contains-errors '=='     |   | |   |-DeclRefExpr 0x1318f3dd8 <col:21> 'int' contains-errors lvalue Var 0x1318f37b8 'unmangle' 'int'     |   | |   `-RecoveryExpr 0x1318f3e50 <col:33> '<dependent type>' contains-errors lvalue     |   | |-CompoundStmt 0x1318f41e0 <col:42, line:20:3>     |   | | `-IfStmt 0x1318f41b0 <line:15:4, line:19:4> has_else     |   | |   |-BinaryOperator 0x1318f3f70 <line:15:8, col:25> 'int' '=='     |   | |   | |-ImplicitCastExpr 0x1318f3f58 <col:8, col:20> 'int' <IntegralCast>     |   | |   | | `-ImplicitCastExpr 0x1318f3f40 <col:8, col:20> 'char' <LValueToRValue>     |   | |   | |   `-ArraySubscriptExpr 0x1318f3f08 <col:8, col:20> 'const char' lvalue     |   | |   | |     |-ImplicitCastExpr 0x1318f3ef0 <col:8> 'const char *' <LValueToRValue>     |   | |   | |     | `-DeclRefExpr 0x1318f3eb0 <col:8> 'const char *' lvalue Var 0x131033618 'class_name' 'const char *'     |   | |   | |     `-IntegerLiteral 0x1318f3ed0 <col:19> 'int' 0     |   | |   | `-CharacterLiteral 0x1318f3f28 <col:25> 'int' 42     |   | |   |-CompoundStmt 0x1318f4068 <col:30, line:17:4>     |   | |   | `-CallExpr 0x1318f4008 <line:16:5, col:32> 'int'     |   | |   |   |-ImplicitCastExpr 0x1318f3ff0 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   | |   |   | `-DeclRefExpr 0x1318f3f90 <col:5> 'int ()' Function 0x1318f3400 'php_printf' 'int ()'     |   | |   |   |-ImplicitCastExpr 0x1318f4038 <col:16> 'char *' <ArrayToPointerDecay>     |   | |   |   | `-StringLiteral 0x1318f3fb0 <col:16> 'char[4]' lvalue \"STR\"     |   | |   |   `-ImplicitCastExpr 0x1318f4050 <col:23> 'const char *' <LValueToRValue>     |   | |   |     `-DeclRefExpr 0x1318f3fd0 <col:23> 'const char *' lvalue Var 0x131033598 'prop_name' 'const char *'     |   | |   `-CompoundStmt 0x1318f4198 <line:17:11, line:19:4>     |   | |     `-CallExpr 0x1318f4118 <line:18:5, col:44> 'int'     |   | |       |-ImplicitCastExpr 0x1318f4100 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   | |       | `-DeclRefExpr 0x1318f4080 <col:5> 'int ()' Function 0x1318f3400 'php_printf' 'int ()'     |   | |       |-ImplicitCastExpr 0x1318f4150 <col:16> 'char *' <ArrayToPointerDecay>     |   | |       | `-StringLiteral 0x1318f40a0 <col:16> 'char[4]' lvalue \"STR\"     |   | |       |-ImplicitCastExpr 0x1318f4168 <col:23> 'const char *' <LValueToRValue>     |   | |       | `-DeclRefExpr 0x1318f40c0 <col:23> 'const char *' lvalue Var 0x131033598 'prop_name' 'const char *'     |   | |       `-ImplicitCastExpr 0x1318f4180 <col:34> 'const char *' <LValueToRValue>     |   | |         `-DeclRefExpr 0x1318f40e0 <col:34> 'const char *' lvalue Var 0x131033618 'class_name' 'const char *'     |   | `-CompoundStmt 0x131057e88 <line:20:10, line:24:3>     |   |   |-CallExpr 0x1318f4250 <line:21:4, col:20> 'int'     |   |   | |-ImplicitCastExpr 0x1318f4238 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x1318f41f8 <col:4> 'int ()' Function 0x1318f3400 'php_printf' 'int ()'     |   |   | `-ImplicitCastExpr 0x1318f4278 <col:15> 'char *' <ArrayToPointerDecay>     |   |   |   `-StringLiteral 0x1318f4218 <col:15> 'char[4]' lvalue \"STR\"     |   |   |-CallExpr 0x131057dc0 <line:22:4, col:54> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x1318f4370 <col:4> 'int ()' Function 0x1318f42b8 'PHPWRITE' 'int ()'     |   |   | |-CXXDependentScopeMemberExpr 0x131057cf0 <col:13, col:23> '<dependent type>' contains-errors lvalue ->arKey     |   |   | | `-RecoveryExpr 0x131057cd0 <col:13> '<dependent type>' contains-errors lvalue     |   |   | `-BinaryOperator 0x131057da0 <col:30, col:53> '<dependent type>' contains-errors '-'     |   |   |   |-CXXDependentScopeMemberExpr 0x131057d58 <col:30, col:40> '<dependent type>' contains-errors lvalue ->nKeyLength     |   |   |   | `-RecoveryExpr 0x131057d38 <col:30> '<dependent type>' contains-errors lvalue     |   |   |   `-IntegerLiteral 0x131057c60 <col:53> 'int' 1     |   |   `-CallExpr 0x131057e48 <line:23:4, col:20> 'int'     |   |     |-ImplicitCastExpr 0x131057e30 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x131057df0 <col:4> 'int ()' Function 0x1318f3400 'php_printf' 'int ()'     |   |     `-ImplicitCastExpr 0x131057e70 <col:15> 'char *' <ArrayToPointerDecay>     |   |       `-StringLiteral 0x131057e10 <col:15> 'char[4]' lvalue \"STR\"     |   `-CallExpr 0x131058018 <line:25:3, col:18> 'int'     |     |-ImplicitCastExpr 0x131058000 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x131057fc0 <col:3> 'int ()' Function 0x131057f08 'ZEND_PUTS' 'int ()'     |     `-ImplicitCastExpr 0x131058040 <col:13> 'char *' <ArrayToPointerDecay>     |       `-StringLiteral 0x131057fe0 <col:13> 'char[4]' lvalue \"STR\"     `-ReturnStmt 0x131058270 <line:28:2, col:9>       `-IntegerLiteral 0x131058250 <col:9> 'int' 0 ","19671":"`-FunctionDecl 0x14a00ddf8  line:1:12 invalid do_show_master_status 'int (int *)' static   |-ParmVarDecl 0x14a00dd28 <col:34, col:41> col:41 invalid mysql_con 'int *'   `-CompoundStmt 0x149923260 <line:2:1, line:37:1>     |-DeclStmt 0x14a00dff0 <line:5:3, line:6:69>     | `-VarDecl 0x14a00ded8 <line:5:3, col:15> col:15 used comment_prefix 'const char *'     |-IfStmt 0x149923200 <line:7:3, line:35:3> has_else     | |-CallExpr 0x14a00e260 <line:7:7, col:62> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14a00e160 <col:7> 'int ()' Function 0x14a00e0a8 'mysql_query_with_error_report' 'int ()'     | | |-RecoveryExpr 0x14a00e180 <col:37> '<dependent type>' contains-errors lvalue     | | |-UnaryOperator 0x14a00e248 <col:48, col:49> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | `-RecoveryExpr 0x14a00e228 <col:49> '<dependent type>' contains-errors lvalue     | | `-StringLiteral 0x14a00e1d0 <col:57> 'char[4]' lvalue \"STR\"     | |-CompoundStmt 0x14a00e2c8 <line:8:3, line:10:3>     | | `-ReturnStmt 0x14a00e2b8 <line:9:5, col:12>     | |   `-IntegerLiteral 0x14a00e298 <col:12> 'int' 1     | `-CompoundStmt 0x1499231e8 <line:12:3, line:35:3>     |   `-IfStmt 0x149923198 <line:14:5, line:33:5> has_else     |     |-RecoveryExpr 0x1499226b0 <line:14:9, col:31> '_Bool' contains-errors     |     |-CompoundStmt 0x149922bb8 <line:15:5, line:24:5>     |     | `-CallExpr 0x1499228d0 <line:17:7, line:19:26> '<dependent type>' contains-errors     |     |   |-DeclRefExpr 0x1499227b0 <line:17:7> 'int ()' Function 0x1499226f8 'print_comment' 'int ()'     |     |   |-RecoveryExpr 0x1499228b0 <col:21> '<dependent type>' contains-errors lvalue     |     |   |-IntegerLiteral 0x1499227e8 <col:37> 'int' 0     |     |   `-StringLiteral 0x149922850 <line:18:21, line:19:21> 'char[7]' lvalue \"STRSTR\"     |     `-IfStmt 0x149923178 <line:25:10, line:33:5>     |       |-RecoveryExpr 0x149922bd0 <line:25:14, col:15> '_Bool' contains-errors     |       `-CompoundStmt 0x149923158 <line:26:5, line:33:5>     |         |-CallExpr 0x149922ed8 <line:28:7, line:29:29> 'int'     |         | |-ImplicitCastExpr 0x149922ec0 <line:28:7> 'int (*)()' <FunctionToPointerDecay>     |         | | `-DeclRefExpr 0x149922cd0 <col:7> 'int ()' Function 0x149922c18 'my_printf_error' 'int ()'     |         | |-IntegerLiteral 0x149922cf0 <col:23> 'int' 0     |         | |-ImplicitCastExpr 0x149922f10 <col:26> 'char *' <ArrayToPointerDecay>     |         | | `-StringLiteral 0x149922d10 <col:26> 'char[4]' lvalue \"STR\"     |         | `-CallExpr 0x149922e98 <line:29:23, col:28> 'int'     |         |   |-ImplicitCastExpr 0x149922e80 <col:23> 'int (*)()' <FunctionToPointerDecay>     |         |   | `-DeclRefExpr 0x149922e10 <col:23> 'int ()' Function 0x149922d58 'MYF' 'int ()'     |         |   `-IntegerLiteral 0x149922e30 <col:27> 'int' 0     |         `-ReturnStmt 0x149923148 <line:32:7, col:14>     |           `-IntegerLiteral 0x149923128 <col:14> 'int' 1     `-ReturnStmt 0x149923250 <line:36:3, col:10>       `-IntegerLiteral 0x149923230 <col:10> 'int' 0 ","19144":"`-FunctionDecl 0x15500de38  line:1:7 bson_realloc 'void *(void *, int)'   |-ParmVarDecl 0x15500dcd8 <col:21, col:27> col:27 used ptr 'void *'   |-ParmVarDecl 0x15500dd58 <col:32, col:36> col:36 used size 'int'   `-CompoundStmt 0x155026b08 <col:43, line:6:1>     |-DeclStmt 0x15500dfb8 <line:2:5, col:12>     | `-VarDecl 0x15500df50 <col:5, col:11> col:11 used p 'void *'     |-BinaryOperator 0x155026870 <line:3:5, col:38> 'void *' '='     | |-DeclRefExpr 0x15500dfd0 <col:5> 'void *' lvalue Var 0x15500df50 'p' 'void *'     | `-ImplicitCastExpr 0x15500e228 <col:9, col:38> 'void *' <IntegralToPointer>     |   `-CallExpr 0x15500e1c8 <col:9, col:38> 'int'     |     |-ImplicitCastExpr 0x15500e1b0 <col:9> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x15500e120 <col:9> 'int ()' Function 0x15500e068 'bson_realloc_func' 'int ()'     |     |-ImplicitCastExpr 0x15500e1f8 <col:28> 'void *' <LValueToRValue>     |     | `-DeclRefExpr 0x15500e140 <col:28> 'void *' lvalue ParmVar 0x15500dcd8 'ptr' 'void *'     |     `-ImplicitCastExpr 0x15500e210 <col:33> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x15500e160 <col:33> 'int' lvalue ParmVar 0x15500dd58 'size' 'int'     |-CallExpr 0x155026a78 <line:4:5, col:32> 'int'     | |-ImplicitCastExpr 0x155026a60 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x155026970 <col:5> 'int ()' Function 0x1550268b8 'bson_fatal_msg' 'int ()'     | |-UnaryOperator 0x1550269e0 <col:21, col:23> 'int' prefix '!' cannot overflow     | | `-UnaryOperator 0x1550269c8 <col:22, col:23> 'int' prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x1550269b0 <col:23> 'void *' <LValueToRValue>     | |     `-DeclRefExpr 0x155026990 <col:23> 'void *' lvalue Var 0x15500df50 'p' 'void *'     | `-ImplicitCastExpr 0x155026aa8 <col:26> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x155026a40 <col:26> 'char[4]' lvalue \"STR\"     `-ReturnStmt 0x155026af8 <line:5:5, col:12>       `-ImplicitCastExpr 0x155026ae0 <col:12> 'void *' <LValueToRValue>         `-DeclRefExpr 0x155026ac0 <col:12> 'void *' lvalue Var 0x15500df50 'p' 'void *' ","19196":"`-FunctionDecl 0x15500df18  line:1:1 invalid datetime_s_httpdate 'int (int, int *, int)'   |-ParmVarDecl 0x15500dcd8 <col:21, col:25> col:25 used argc 'int'   |-ParmVarDecl 0x15500dda8 <col:31, col:38> col:38 invalid argv 'int *'   |-ParmVarDecl 0x15500de28 <col:44, col:50> col:50 invalid klass 'int'   `-CompoundStmt 0x15410b9d0 <line:2:1, line:18:1>     |-CallExpr 0x15500e308 <line:5:5, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15500e130 <col:5> 'int ()' Function 0x15500e078 'rb_scan_args' 'int ()'     | |-DeclRefExpr 0x15500e150 <col:18> 'int' lvalue ParmVar 0x15500dcd8 'argc' 'int'     | |-RecoveryExpr 0x15500e170 <col:24> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x15500e1d0 <col:30> 'char[4]' lvalue \"STR\"     | |-UnaryOperator 0x15500e2b8 <col:37, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x15500e298 <col:38> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x15500e2f0 <col:43, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x15500e2d0 <col:44> '<dependent type>' contains-errors lvalue     |-SwitchStmt 0x15500e388 <line:7:5, line:12:5>     | |-ImplicitCastExpr 0x15500e370 <line:7:13> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x15500e350 <col:13> 'int' lvalue ParmVar 0x15500dcd8 'argc' 'int'     | `-CompoundStmt 0x15410b788 <col:19, line:12:5>     |   |-CaseStmt 0x15410b400 <line:8:7, <invalid sloc>>     |   | |-ConstantExpr 0x15500e3d0 <col:12> 'int'     |   | | `-IntegerLiteral 0x15500e3b0 <col:12> 'int' 0     |   | `-NullStmt 0x15410b5d8 <<invalid sloc>>     |   `-CaseStmt 0x15410b618 <line:10:7, <invalid sloc>>     |     |-ConstantExpr 0x15410b600 <col:12> 'int'     |     | `-IntegerLiteral 0x15410b5e0 <col:12> 'int' 1     |     `-NullStmt 0x15410b780 <<invalid sloc>>     `-CompoundStmt 0x15410b9b8 <line:14:5, line:17:5>       `-ReturnStmt 0x15410b9a8 <line:16:2, col:40>         `-CallExpr 0x15410b970 <col:9, col:40> '<dependent type>' contains-errors           |-DeclRefExpr 0x15410b888 <col:9> 'int ()' Function 0x15410b7d0 'dt_new_by_frags' 'int ()'           |-RecoveryExpr 0x15410b8a8 <col:25> '<dependent type>' contains-errors lvalue           |-RecoveryExpr 0x15410b930 <col:32> '<dependent type>' contains-errors lvalue           `-RecoveryExpr 0x15410b950 <col:38> '<dependent type>' contains-errors lvalue ","19888":"`-FunctionDecl 0x132808340  line:1:13 hci_cc_le_add_to_resolv_list 'void (struct hci_dev *, struct sk_buff *)' static   |-ParmVarDecl 0x13180e248 <col:42, col:58> col:58 used hdev 'struct hci_dev *'   |-ParmVarDecl 0x132808228 <line:2:7, col:23> col:23 skb 'struct sk_buff *'   `-CompoundStmt 0x132808f50 <line:3:1, line:19:1>     |-DeclStmt 0x132808628 <line:4:2, col:43>     | |-RecordDecl 0x132808440 <col:2, col:9> col:9 struct hci_cp_le_add_to_resolv_list     | `-VarDecl 0x1328085a8 <col:2, col:39> col:39 used sent 'struct hci_cp_le_add_to_resolv_list *'     |-CallExpr 0x1328088c0 <line:7:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x132808770 <col:2> 'int ()' Function 0x1328086b8 'BT_DBG' 'int ()'     | |-StringLiteral 0x1328087d0 <col:9> 'char[4]' lvalue \"STR\"     | |-RecoveryExpr 0x132808828 <col:16, col:22> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1328087f0 <col:16> 'struct hci_dev *' lvalue ParmVar 0x13180e248 'hdev' 'struct hci_dev *'     | `-RecoveryExpr 0x1328088a0 <col:28> '<dependent type>' contains-errors lvalue     |-IfStmt 0x132808940 <line:9:2, line:10:3>     | |-RecoveryExpr 0x132808910 <line:9:6> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x132808930 <line:10:3>     |-BinaryOperator 0x132808b58 <line:12:2, col:61> 'struct hci_cp_le_add_to_resolv_list *' contains-errors '='     | |-DeclRefExpr 0x132808960 <col:2> 'struct hci_cp_le_add_to_resolv_list *' lvalue Var 0x1328085a8 'sent' 'struct hci_cp_le_add_to_resolv_list *'     | `-CallExpr 0x132808b28 <col:9, col:61> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x132808a60 <col:9> 'int ()' Function 0x1328089a8 'hci_sent_cmd_data' 'int ()'     |   |-DeclRefExpr 0x132808a80 <col:27> 'struct hci_dev *' lvalue ParmVar 0x13180e248 'hdev' 'struct hci_dev *'     |   `-RecoveryExpr 0x132808b08 <col:33> '<dependent type>' contains-errors lvalue     |-IfStmt 0x132808bd8 <line:13:2, line:14:3>     | |-UnaryOperator 0x132808bb0 <line:13:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x132808b98 <col:7> 'struct hci_cp_le_add_to_resolv_list *' <LValueToRValue>     | |   `-DeclRefExpr 0x132808b78 <col:7> 'struct hci_cp_le_add_to_resolv_list *' lvalue Var 0x1328085a8 'sent' 'struct hci_cp_le_add_to_resolv_list *'     | `-ReturnStmt 0x132808bc8 <line:14:3>     `-CallExpr 0x132808f08 <line:16:2, line:18:20> '<dependent type>' contains-errors       |-DeclRefExpr 0x132808cd8 <line:16:2> 'int ()' Function 0x132808c20 'hci_bdaddr_list_add_with_irk' 'int ()'       |-UnaryOperator 0x132808d58 <col:31, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow       | `-RecoveryExpr 0x132808d30 <col:32, col:38> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x132808cf8 <col:32> 'struct hci_dev *' lvalue ParmVar 0x13180e248 'hdev' 'struct hci_dev *'       |-UnaryOperator 0x132808dd0 <col:54, col:61> '<dependent type>' contains-errors prefix '&' cannot overflow       | `-RecoveryExpr 0x132808da8 <col:55, col:61> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x132808d70 <col:55> 'struct hci_cp_le_add_to_resolv_list *' lvalue Var 0x1328085a8 'sent' 'struct hci_cp_le_add_to_resolv_list *'       |-RecoveryExpr 0x132808e20 <line:17:5, col:11> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x132808de8 <col:5> 'struct hci_cp_le_add_to_resolv_list *' lvalue Var 0x1328085a8 'sent' 'struct hci_cp_le_add_to_resolv_list *'       |-RecoveryExpr 0x132808e80 <col:24, col:30> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x132808e48 <col:24> 'struct hci_cp_le_add_to_resolv_list *' lvalue Var 0x1328085a8 'sent' 'struct hci_cp_le_add_to_resolv_list *'       `-RecoveryExpr 0x132808ee0 <line:18:5, col:11> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x132808ea8 <col:5> 'struct hci_cp_le_add_to_resolv_list *' lvalue Var 0x1328085a8 'sent' 'struct hci_cp_le_add_to_resolv_list *' ","19640":"`-FunctionDecl 0x13880de88  line:1:5 invalid am_check_url 'int (int *, const char *)'   |-ParmVarDecl 0x13880dd28 <col:18, col:31> col:31 invalid r 'int *'   |-ParmVarDecl 0x13880dda8 <col:34, col:46> col:46 used url 'const char *'   `-CompoundStmt 0x138827ce0 <line:2:1, line:15:1>     |-DeclStmt 0x13880dfc0 <line:3:5, col:18>     | `-VarDecl 0x13880df58 <col:5, col:17> col:17 used i 'const char *'     |-ForStmt 0x138827c60 <line:5:5, line:12:5>     | |-BinaryOperator 0x13880e030 <line:5:10, col:14> 'const char *' '='     | | |-DeclRefExpr 0x13880dfd8 <col:10> 'const char *' lvalue Var 0x13880df58 'i' 'const char *'     | | `-ImplicitCastExpr 0x13880e018 <col:14> 'const char *' <LValueToRValue>     | |   `-DeclRefExpr 0x13880dff8 <col:14> 'const char *' lvalue ParmVar 0x13880dda8 'url' 'const char *'     | |-<<<NULL>>>     | |-ImplicitCastExpr 0x13880e0a0 <col:19, col:20> 'char' <LValueToRValue>     | | `-UnaryOperator 0x13880e088 <col:19, col:20> 'const char' lvalue prefix '*' cannot overflow     | |   `-ImplicitCastExpr 0x13880e070 <col:20> 'const char *' <LValueToRValue>     | |     `-DeclRefExpr 0x13880e050 <col:20> 'const char *' lvalue Var 0x13880df58 'i' 'const char *'     | |-UnaryOperator 0x13880e0d8 <col:23, col:24> 'const char *' postfix '++'     | | `-DeclRefExpr 0x13880e0b8 <col:23> 'const char *' lvalue Var 0x13880df58 'i' 'const char *'     | `-CompoundStmt 0x138827c48 <col:28, line:12:5>     |   `-IfStmt 0x138827c28 <line:6:9, line:11:9>     |     |-BinaryOperator 0x13880e268 <line:6:13, col:29> 'int' '&&'     |     | |-BinaryOperator 0x13880e190 <col:13, col:19> 'int' '>='     |     | | |-ImplicitCastExpr 0x13880e178 <col:13, col:14> 'int' <IntegralCast>     |     | | | `-ImplicitCastExpr 0x13880e160 <col:13, col:14> 'char' <LValueToRValue>     |     | | |   `-UnaryOperator 0x13880e128 <col:13, col:14> 'const char' lvalue prefix '*' cannot overflow     |     | | |     `-ImplicitCastExpr 0x13880e110 <col:14> 'const char *' <LValueToRValue>     |     | | |       `-DeclRefExpr 0x13880e0f0 <col:14> 'const char *' lvalue Var 0x13880df58 'i' 'const char *'     |     | | `-IntegerLiteral 0x13880e140 <col:19> 'int' 0     |     | `-BinaryOperator 0x13880e248 <col:24, col:29> 'int' '<'     |     |   |-ImplicitCastExpr 0x13880e230 <col:24, col:25> 'int' <IntegralCast>     |     |   | `-ImplicitCastExpr 0x13880e218 <col:24, col:25> 'char' <LValueToRValue>     |     |   |   `-UnaryOperator 0x13880e1e8 <col:24, col:25> 'const char' lvalue prefix '*' cannot overflow     |     |   |     `-ImplicitCastExpr 0x13880e1d0 <col:25> 'const char *' <LValueToRValue>     |     |   |       `-DeclRefExpr 0x13880e1b0 <col:25> 'const char *' lvalue Var 0x13880df58 'i' 'const char *'     |     |   `-CharacterLiteral 0x13880e200 <col:29> 'int' 32     |     `-CompoundStmt 0x138827c08 <col:34, line:11:9>     |       |-CallExpr 0x138827b78 <line:8:13, line:9:32> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x13880e3e0 <line:8:13> 'int ()' Function 0x13880e328 'AM_LOG_RERROR' 'int ()'     |       | |-RecoveryExpr 0x138827b18 <col:27> '<dependent type>' contains-errors lvalue     |       | |-RecoveryExpr 0x138827b38 <col:39> '<dependent type>' contains-errors lvalue     |       | |-RecoveryExpr 0x138827b58 <col:50> '<dependent type>' contains-errors lvalue     |       | |-RecoveryExpr 0x138827a48 <col:68> '<dependent type>' contains-errors lvalue     |       | `-StringLiteral 0x138827ab0 <line:9:27> 'char[4]' lvalue \"STR\"     |       `-ReturnStmt 0x138827bf8 <line:10:13, col:20>     |         `-RecoveryExpr 0x138827bd8 <col:20> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x138827cd0 <line:14:5, col:12>       `-RecoveryExpr 0x138827cb0 <col:12> '<dependent type>' contains-errors lvalue ","19172":"`-FunctionDecl 0x156122988  line:1:1 invalid glue 'int (int (*)(), int)'   |-ParmVarDecl 0x15680dd80 <col:6, <invalid sloc>> col:6 invalid glue 'int (*)()'   |-ParmVarDecl 0x15680de00 <col:52> col:52 _8 'int'   `-CompoundStmt 0x1561231d0 <line:5:1, line:21:1>     |-DeclStmt 0x156122b58 <line:6:5, col:12>     | |-VarDecl 0x156122a58 <col:5, col:9> col:9 used x 'int'     | `-VarDecl 0x156122ad8 <col:5, col:11> col:11 used y 'int'     `-ForStmt 0x156123198 <line:10:5, line:20:5>       |-BinaryOperator 0x156122be0 <line:10:10, col:14> 'int' '='       | |-DeclRefExpr 0x156122ba0 <col:10> 'int' lvalue Var 0x156122ad8 'y' 'int'       | `-IntegerLiteral 0x156122bc0 <col:14> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x156122c78 <col:17, col:21> 'int' contains-errors '<'       | |-DeclRefExpr 0x156122c00 <col:17> 'int' lvalue Var 0x156122ad8 'y' 'int'       | `-RecoveryExpr 0x156122c58 <col:21> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x156122cb8 <col:32, col:33> 'int' postfix '++'       | `-DeclRefExpr 0x156122c98 <col:32> 'int' lvalue Var 0x156122ad8 'y' 'int'       `-CompoundStmt 0x156123180 <col:37, line:20:5>         `-ForStmt 0x156123148 <line:11:9, line:17:9>           |-BinaryOperator 0x156122d10 <line:11:14, col:18> 'int' '='           | |-DeclRefExpr 0x156122cd0 <col:14> 'int' lvalue Var 0x156122a58 'x' 'int'           | `-IntegerLiteral 0x156122cf0 <col:18> 'int' 0           |-<<<NULL>>>           |-BinaryOperator 0x156122da8 <col:21, col:25> 'int' contains-errors '<'           | |-DeclRefExpr 0x156122d30 <col:21> 'int' lvalue Var 0x156122a58 'x' 'int'           | `-RecoveryExpr 0x156122d88 <col:25> '<dependent type>' contains-errors lvalue           |-UnaryOperator 0x156122de8 <col:35, col:36> 'int' postfix '++'           | `-DeclRefExpr 0x156122dc8 <col:35> 'int' lvalue Var 0x156122a58 'x' 'int'           `-CompoundStmt 0x156123130 <col:40, line:17:9>             `-CallExpr 0x1561230c0 <line:13:13, col:28> '<dependent type>' contains-errors               |-DeclRefExpr 0x156122f70 <col:13> 'int ()' Function 0x156122eb8 'ROP_OP' 'int ()'               |-UnaryOperator 0x156123058 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow               | `-RecoveryExpr 0x156123038 <col:21> '<dependent type>' contains-errors lvalue               `-UnaryOperator 0x1561230a8 <col:24, col:25> '<dependent type>' contains-errors prefix '*' cannot overflow                 `-ImplicitCastExpr 0x156123090 <col:25> '<dependent type>' contains-errors <LValueToRValue>                   `-RecoveryExpr 0x156123070 <col:25> '<dependent type>' contains-errors lvalue ","19213":"`-FunctionDecl 0x129827730  col:23 implicit used index 'char *(const char *, int)' extern   |-ParmVarDecl 0x129827830 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x129827898 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x1298277d8 <<invalid sloc>> Implicit 952 ","19155":"`-FunctionDecl 0x1359281c8  line:1:1 invalid rdpsnd_process_training 'int (int)'   |-ParmVarDecl 0x1359280f0 <col:25, col:32> col:32 invalid in 'int'   `-CompoundStmt 0x135941e00 <line:2:1, line:17:1>     |-CallExpr 0x135928478 <line:7:2, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1359283d0 <col:2> 'int ()' Function 0x135928318 'in_uint16_le' 'int ()'     | |-RecoveryExpr 0x1359283f0 <col:15> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x135928458 <col:19> '<dependent type>' contains-errors lvalue     |-CallExpr 0x135928550 <line:8:2, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1359284a8 <col:2> 'int ()' Function 0x135928318 'in_uint16_le' 'int ()'     | |-RecoveryExpr 0x1359284c8 <col:15> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x135928530 <col:19> '<dependent type>' contains-errors lvalue     |-CallExpr 0x135941ae0 <line:13:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x135941a20 <col:2> 'int ()' Function 0x135941968 'out_uint16_le' 'int ()'     | |-RecoveryExpr 0x135941aa0 <col:16> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x135941ac0 <col:21> '<dependent type>' contains-errors lvalue     `-CallExpr 0x135941bd0 <line:14:2, col:29> '<dependent type>' contains-errors       |-DeclRefExpr 0x135941b10 <col:2> 'int ()' Function 0x135941968 'out_uint16_le' 'int ()'       |-RecoveryExpr 0x135941b90 <col:16> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x135941bb0 <col:21> '<dependent type>' contains-errors lvalue ","19670":"`-FunctionDecl 0x124928318  line:1:12 invalid zipfileScanExtra 'int (int *, int, int *)' static   |-ParmVarDecl 0x124928128 <col:29, col:33> col:33 invalid aExtra 'int *'   |-ParmVarDecl 0x1249281a8 <col:41, col:45> col:45 used nExtra 'int'   |-ParmVarDecl 0x124928228 <col:53, col:58> col:58 invalid pmTime 'int *'   `-CompoundStmt 0x124941ed8 <col:65, line:24:1>     |-DeclStmt 0x124928478 <line:2:3, col:14>     | `-VarDecl 0x1249283f0 <col:3, col:13> col:7 used ret 'int' cinit     |   `-IntegerLiteral 0x124928458 <col:13> 'int' 0     |-WhileStmt 0x124941e70 <line:6:3, line:22:3>     | |-BinaryOperator 0x124928618 <line:6:10, col:12> 'int' contains-errors '<'     | | |-RecoveryExpr 0x1249285d8 <col:10> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1249285f8 <col:12> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x124941e58 <col:18, line:22:3>     |   `-SwitchStmt 0x124928688 <line:10:5, line:19:5>     |     |-RecoveryExpr 0x124928668 <line:10:13> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x124941e28 <col:17, line:19:5>     |       `-CompoundStmt 0x124941e08 <line:11:37, line:18:7>     |         |-IfStmt 0x124941de0 <line:13:9, line:16:9>     |         | |-BinaryOperator 0x124928740 <line:13:13, col:17> '<dependent type>' contains-errors '&'     |         | | |-RecoveryExpr 0x124928720 <col:13> '<dependent type>' contains-errors lvalue     |         | | `-IntegerLiteral 0x1249286e0 <col:17> 'int' 1     |         | `-CompoundStmt 0x124941dc8 <col:23, line:16:9>     |         |   `-BinaryOperator 0x124941da8 <line:15:11, col:17> 'int' '='     |         |     |-DeclRefExpr 0x124941d68 <col:11> 'int' lvalue Var 0x1249283f0 'ret' 'int'     |         |     `-IntegerLiteral 0x124941d88 <col:17> 'int' 1     |         `-BreakStmt 0x124941e00 <line:17:9>     `-ReturnStmt 0x124941ec8 <line:23:3, col:10>       `-ImplicitCastExpr 0x124941eb0 <col:10> 'int' <LValueToRValue>         `-DeclRefExpr 0x124941e90 <col:10> 'int' lvalue Var 0x1249283f0 'ret' 'int' ","20101":"`-FunctionDecl 0x14f02a568  line:1:1 invalid generic_file_splice_write_nolock 'int (struct pipe_inode_info *, struct file *, int *, int, unsigned int)'   |-ParmVarDecl 0x14f012648 <col:34, col:58> col:58 used pipe 'struct pipe_inode_info *'   |-ParmVarDecl 0x14f02a228 <col:64, col:77> col:77 used out 'struct file *'   |-ParmVarDecl 0x14f02a2f8 <line:2:6, col:14> col:14 invalid ppos 'int *'   |-ParmVarDecl 0x14f02a378 <col:20, col:27> col:27 invalid len 'int'   |-ParmVarDecl 0x14f02a3f8 <col:32, col:45> col:45 used flags 'unsigned int'   `-CompoundStmt 0x14f02d5c0 <line:3:1, line:28:1>     |-DeclStmt 0x14f02a888 <line:4:2, col:48>     | |-RecordDecl 0x14f02a638 <col:2, col:9> col:9 struct address_space     | `-VarDecl 0x14f02a7a8 <col:2, col:39> col:24 used mapping 'struct address_space *' cinit     |   `-RecoveryExpr 0x14f02a848 <col:34, col:39> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14f02a810 <col:34> 'struct file *' lvalue ParmVar 0x14f02a228 'out' 'struct file *'     |-DeclStmt 0x14f02aae8 <line:5:2, col:37>     | |-RecordDecl 0x14f02a8a0 <col:2, col:9> col:9 struct inode     | `-VarDecl 0x14f02aa08 <col:2, col:33> col:16 used inode 'struct inode *' cinit     |   `-RecoveryExpr 0x14f02aaa8 <col:24, col:33> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14f02aa70 <col:24> 'struct address_space *' contains-errors lvalue Var 0x14f02a7a8 'mapping' 'struct address_space *'     |-DeclStmt 0x14f02ab80 <line:7:2, col:9>     | `-VarDecl 0x14f02ab18 <col:2, col:6> col:6 used err 'int'     |-BinaryOperator 0x14f02adb8 <line:9:2, col:33> 'int' contains-errors '='     | |-DeclRefExpr 0x14f02ab98 <col:2> 'int' lvalue Var 0x14f02ab18 'err' 'int'     | `-CallExpr 0x14f02ad90 <col:8, col:33> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14f02ad10 <col:8> 'int ()' Function 0x14f02ac58 'remove_suid' 'int ()'     |   `-RecoveryExpr 0x14f02ad68 <col:20, col:25> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14f02ad30 <col:20> 'struct file *' lvalue ParmVar 0x14f02a228 'out' 'struct file *'     |-IfStmt 0x14f02afd0 <line:10:2, line:11:10>     | |-CallExpr 0x14f02af48 <line:10:6, col:18> 'int'     | | |-ImplicitCastExpr 0x14f02af30 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x14f02aeb8 <col:6> 'int ()' Function 0x14f02ae00 'unlikely' 'int ()'     | | `-ImplicitCastExpr 0x14f02af70 <col:15> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x14f02aed8 <col:15> 'int' lvalue Var 0x14f02ab18 'err' 'int'     | `-ReturnStmt 0x14f02afc0 <line:11:3, col:10>     |   `-ImplicitCastExpr 0x14f02afa8 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x14f02af88 <col:10> 'int' lvalue Var 0x14f02ab18 'err' 'int'     `-IfStmt 0x14f02d5a0 <line:14:2, line:25:2>       |-BinaryOperator 0x14f02ce78 <line:14:6, col:12> 'int' contains-errors '>'       | |-RecoveryExpr 0x14f02ce58 <col:6> '<dependent type>' contains-errors lvalue       | `-IntegerLiteral 0x14f02ce18 <col:12> 'int' 0       `-CompoundStmt 0x14f02d580 <col:15, line:25:2>         |-CompoundAssignOperator 0x14f02cfb0 <line:15:3, col:12> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'         | |-UnaryOperator 0x14f02cf78 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow         | | `-ImplicitCastExpr 0x14f02cf60 <col:4> '<dependent type>' contains-errors <LValueToRValue>         | |   `-RecoveryExpr 0x14f02ce98 <col:4> '<dependent type>' contains-errors lvalue         | `-RecoveryExpr 0x14f02cf90 <col:12> '<dependent type>' contains-errors lvalue         `-IfStmt 0x14f02d560 <line:18:3, line:24:3>           |-RecoveryExpr 0x14f02d210 <line:18:7, col:57> '_Bool' contains-errors           `-CompoundStmt 0x14f02d548 <col:60, line:24:3>             `-BinaryOperator 0x14f02d4d0 <line:19:4, line:20:34> 'int' contains-errors '='               |-DeclRefExpr 0x14f02d230 <line:19:4> 'int' lvalue Var 0x14f02ab18 'err' 'int'               `-CallExpr 0x14f02d498 <col:10, line:20:34> '<dependent type>' contains-errors                 |-DeclRefExpr 0x14f02d330 <line:19:10> 'int ()' Function 0x14f02d278 'generic_osync_inode' 'int ()'                 |-DeclRefExpr 0x14f02d350 <col:30> 'struct inode *' contains-errors lvalue Var 0x14f02aa08 'inode' 'struct inode *'                 |-DeclRefExpr 0x14f02d370 <col:37> 'struct address_space *' contains-errors lvalue Var 0x14f02a7a8 'mapping' 'struct address_space *'                 `-BinaryOperator 0x14f02d478 <line:20:9, col:24> '<dependent type>' contains-errors '|'                   |-RecoveryExpr 0x14f02d438 <col:9> '<dependent type>' contains-errors lvalue                   `-RecoveryExpr 0x14f02d458 <col:24> '<dependent type>' contains-errors lvalue ","19757":"`-FunctionDecl 0x11d026748  line:1:12 usb_raremono_probe 'int (struct usb_interface *, const struct usb_device_id *)' static   |-ParmVarDecl 0x11d00e248 <col:31, col:53> col:53 used intf 'struct usb_interface *'   |-ParmVarDecl 0x11d026628 <line:2:5, col:33> col:33 used id 'const struct usb_device_id *'   `-CompoundStmt 0x11d02df20 <line:3:1, line:66:1>     |-DeclStmt 0x11d026a38 <line:4:2, col:31>     | |-RecordDecl 0x11d026848 <col:2, col:9> col:9 struct raremono_device     | `-VarDecl 0x11d0269b8 <col:2, col:26> col:26 used radio 'struct raremono_device *'     |-DeclStmt 0x11d026af0 <line:5:2, col:16>     | `-VarDecl 0x11d026a68 <col:2, col:15> col:6 used retval 'int' cinit     |   `-IntegerLiteral 0x11d026ad0 <col:15> 'int' 0     |-IfStmt 0x11d027088 <line:8:2, line:9:69>     | |-ImplicitCastExpr 0x11d026d78 <line:8:6> 'struct raremono_device *' <LValueToRValue>     | | `-DeclRefExpr 0x11d026d58 <col:6> 'struct raremono_device *' lvalue Var 0x11d0269b8 'radio' 'struct raremono_device *'     | `-BinaryOperator 0x11d027068 <line:9:3, col:69> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x11d026dc8 <col:3, col:10> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x11d026d90 <col:3> 'struct raremono_device *' lvalue Var 0x11d0269b8 'radio' 'struct raremono_device *'     |   `-CallExpr 0x11d027030 <col:19, col:69> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x11d026ed0 <col:19> 'int ()' Function 0x11d026e18 'devm_kmalloc' 'int ()'     |     |-UnaryOperator 0x11d026f50 <col:32, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | `-RecoveryExpr 0x11d026f28 <col:33, col:39> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x11d026ef0 <col:33> 'struct usb_interface *' lvalue ParmVar 0x11d00e248 'intf' 'struct usb_interface *'     |     |-RecoveryExpr 0x11d026ff0 <col:44> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x11d027010 <col:59> '<dependent type>' contains-errors lvalue     |-IfStmt 0x11d027250 <line:11:2, line:12:11>     | |-BinaryOperator 0x11d027188 <line:11:6, col:24> 'int' contains-errors '||'     | | |-UnaryOperator 0x11d0270e0 <col:6, col:7> 'int' prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x11d0270c8 <col:7> 'struct raremono_device *' <LValueToRValue>     | | |   `-DeclRefExpr 0x11d0270a8 <col:7> 'struct raremono_device *' lvalue Var 0x11d0269b8 'radio' 'struct raremono_device *'     | | `-UnaryOperator 0x11d027170 <col:16, col:24> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x11d027158 <col:17, col:24> '<dependent type>' contains-errors <LValueToRValue>     | |     `-RecoveryExpr 0x11d027130 <col:17, col:24> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x11d0270f8 <col:17> 'struct raremono_device *' lvalue Var 0x11d0269b8 'radio' 'struct raremono_device *'     | `-ReturnStmt 0x11d027240 <line:12:3, col:11>     |   `-UnaryOperator 0x11d027228 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x11d027210 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x11d0271f0 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x11d027478 <line:14:2, col:42> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x11d0272a8 <col:2, col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x11d027270 <col:2> 'struct raremono_device *' lvalue Var 0x11d0269b8 'radio' 'struct raremono_device *'     | `-CallExpr 0x11d027438 <col:18, col:42> 'int'     |   |-ImplicitCastExpr 0x11d027420 <col:18> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x11d0273b0 <col:18> 'int ()' Function 0x11d0272f8 'interface_to_usbdev' 'int ()'     |   `-ImplicitCastExpr 0x11d027460 <col:38> 'struct usb_interface *' <LValueToRValue>     |     `-DeclRefExpr 0x11d0273d0 <col:38> 'struct usb_interface *' lvalue ParmVar 0x11d00e248 'intf' 'struct usb_interface *'     |-BinaryOperator 0x11d027518 <line:15:2, col:16> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x11d0274d0 <col:2, col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x11d027498 <col:2> 'struct raremono_device *' lvalue Var 0x11d0269b8 'radio' 'struct raremono_device *'     | `-DeclRefExpr 0x11d0274f8 <col:16> 'struct usb_interface *' lvalue ParmVar 0x11d00e248 'intf' 'struct usb_interface *'     |-CallExpr 0x11d02a510 <line:18:2, col:11> 'int'     | |-ImplicitCastExpr 0x11d02a4f8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x11d02a4b8 <col:2> 'int ()' Function 0x11d02a400 'msleep' 'int ()'     | `-IntegerLiteral 0x11d02a4d8 <col:9> 'int' 20     |-BinaryOperator 0x11d02ab98 <line:19:2, line:24:24> 'int' contains-errors '='     | |-DeclRefExpr 0x11d02a538 <line:19:2> 'int' lvalue Var 0x11d026a68 'retval' 'int'     | `-CallExpr 0x11d02ab30 <col:11, line:24:24> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x11d02a638 <line:19:11> 'int ()' Function 0x11d02a580 'usb_control_msg' 'int ()'     |   |-RecoveryExpr 0x11d02a690 <col:27, col:34> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x11d02a658 <col:27> 'struct raremono_device *' lvalue Var 0x11d0269b8 'radio' 'struct raremono_device *'     |   |-CallExpr 0x11d02a838 <line:20:3, col:35> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x11d02a798 <col:3> 'int ()' Function 0x11d02a6e0 'usb_rcvctrlpipe' 'int ()'     |   | |-RecoveryExpr 0x11d02a7f0 <col:19, col:26> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x11d02a7b8 <col:19> 'struct raremono_device *' lvalue Var 0x11d0269b8 'radio' 'struct raremono_device *'     |   | `-IntegerLiteral 0x11d02a818 <col:34> 'int' 0     |   |-RecoveryExpr 0x11d02aa70 <line:21:3> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x11d02ab10 <line:22:3, col:42> '<dependent type>' contains-errors '|'     |   | |-BinaryOperator 0x11d02aad0 <col:3, col:20> '<dependent type>' contains-errors '|'     |   | | |-RecoveryExpr 0x11d02aa90 <col:3> '<dependent type>' contains-errors lvalue     |   | | `-RecoveryExpr 0x11d02aab0 <col:20> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x11d02aaf0 <col:42> '<dependent type>' contains-errors lvalue     |   |-IntegerLiteral 0x11d02a908 <line:23:3> 'int' 1     |   |-IntegerLiteral 0x11d02a928 <col:6> 'int' 2     |   |-RecoveryExpr 0x11d02a980 <line:24:3, col:10> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x11d02a948 <col:3> 'struct raremono_device *' lvalue Var 0x11d0269b8 'radio' 'struct raremono_device *'     |   |-IntegerLiteral 0x11d02a9a8 <col:18> 'int' 3     |   `-IntegerLiteral 0x11d02a9c8 <col:21> 'int' 500     |-IfStmt 0x11d02b108 <line:25:2, line:29:2>     | |-BinaryOperator 0x11d02aec8 <line:25:6, line:26:57> 'int' contains-errors '||'     | | |-BinaryOperator 0x11d02ac10 <line:25:6, col:16> 'int' '!='     | | | |-ImplicitCastExpr 0x11d02abf8 <col:6> 'int' <LValueToRValue>     | | | | `-DeclRefExpr 0x11d02abb8 <col:6> 'int' lvalue Var 0x11d026a68 'retval' 'int'     | | | `-IntegerLiteral 0x11d02abd8 <col:16> 'int' 3     | | `-BinaryOperator 0x11d02aea8 <line:26:6, col:57> 'int' contains-errors '=='     | |   |-ParenExpr 0x11d02ae68 <col:6, col:52> '<dependent type>' contains-errors     | |   | `-BinaryOperator 0x11d02ae48 <col:7, col:47> '<dependent type>' contains-errors '&'     | |   |   |-CallExpr 0x11d02ae00 <col:7, col:43> '<dependent type>' contains-errors     | |   |   | |-DeclRefExpr 0x11d02ad10 <col:7> 'int ()' Function 0x11d02ac58 'get_unaligned_be16' 'int ()'     | |   |   | `-UnaryOperator 0x11d02ade8 <col:26, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   |   |   `-ArraySubscriptExpr 0x11d02adc8 <col:27, col:42> '<dependent type>' contains-errors lvalue     | |   |   |     |-ImplicitCastExpr 0x11d02adb0 <col:27, col:34> '<dependent type>' contains-errors <LValueToRValue>     | |   |   |     | `-RecoveryExpr 0x11d02ad68 <col:27, col:34> '<dependent type>' contains-errors lvalue     | |   |   |     |   `-DeclRefExpr 0x11d02ad30 <col:27> 'struct raremono_device *' lvalue Var 0x11d0269b8 'radio' 'struct raremono_device *'     | |   |   |     `-IntegerLiteral 0x11d02ad90 <col:41> 'int' 1     | |   |   `-IntegerLiteral 0x11d02ae28 <col:47> 'int' 4095     | |   `-IntegerLiteral 0x11d02ae88 <col:57> 'int' 578     | `-CompoundStmt 0x11d02b0f0 <col:65, line:29:2>     |   `-CallExpr 0x11d02b0c0 <line:27:3, col:29> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x11d02afc8 <col:3> 'int ()' Function 0x11d02af10 'dev_info' 'int ()'     |     |-UnaryOperator 0x11d02b048 <col:12, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | `-RecoveryExpr 0x11d02b020 <col:13, col:19> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x11d02afe8 <col:13> 'struct usb_interface *' lvalue ParmVar 0x11d00e248 'intf' 'struct usb_interface *'     |     `-StringLiteral 0x11d02b0a0 <col:24> 'char[4]' lvalue \"STR\"     |-CallExpr 0x11d02b2a0 <line:31:2, line:32:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11d02b128 <line:31:2> 'int ()' Function 0x11d02af10 'dev_info' 'int ()'     | |-UnaryOperator 0x11d02b1a8 <col:11, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x11d02b180 <col:12, col:18> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x11d02b148 <col:12> 'struct usb_interface *' lvalue ParmVar 0x11d00e248 'intf' 'struct usb_interface *'     | |-StringLiteral 0x11d02b1c0 <col:23> 'char[4]' lvalue \"STR\"     | |-RecoveryExpr 0x11d02b218 <line:32:4, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x11d02b1e0 <col:4> 'const struct usb_device_id *' lvalue ParmVar 0x11d026628 'id' 'const struct usb_device_id *'     | `-RecoveryExpr 0x11d02b278 <col:18, col:22> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x11d02b240 <col:18> 'const struct usb_device_id *' lvalue ParmVar 0x11d026628 'id' 'const struct usb_device_id *'     |-BinaryOperator 0x11d02c520 <line:34:2, col:60> 'int' contains-errors '='     | |-DeclRefExpr 0x11d02b2e0 <col:2> 'int' lvalue Var 0x11d026a68 'retval' 'int'     | `-CallExpr 0x11d02c4f0 <col:11, col:60> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x11d02b3e0 <col:11> 'int ()' Function 0x11d02b328 'v4l2_device_register' 'int ()'     |   |-UnaryOperator 0x11d02c460 <col:32, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x11d02c438 <col:33, col:39> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x11d02c400 <col:33> 'struct usb_interface *' lvalue ParmVar 0x11d00e248 'intf' 'struct usb_interface *'     |   `-UnaryOperator 0x11d02c4d8 <col:44, col:52> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x11d02c4b0 <col:45, col:52> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x11d02c478 <col:45> 'struct raremono_device *' lvalue Var 0x11d0269b8 'radio' 'struct raremono_device *'     |-IfStmt 0x11d02c7e8 <line:35:2, line:38:2>     | |-BinaryOperator 0x11d02c598 <line:35:6, col:15> 'int' '<'     | | |-ImplicitCastExpr 0x11d02c580 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x11d02c540 <col:6> 'int' lvalue Var 0x11d026a68 'retval' 'int'     | | `-IntegerLiteral 0x11d02c560 <col:15> 'int' 0     | `-CompoundStmt 0x11d02c7c8 <col:18, line:38:2>     |   |-CallExpr 0x11d02c750 <line:36:3, col:28> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x11d02c698 <col:3> 'int ()' Function 0x11d02c5e0 'dev_err' 'int ()'     |   | |-UnaryOperator 0x11d02c718 <col:11, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-RecoveryExpr 0x11d02c6f0 <col:12, col:18> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x11d02c6b8 <col:12> 'struct usb_interface *' lvalue ParmVar 0x11d00e248 'intf' 'struct usb_interface *'     |   | `-StringLiteral 0x11d02c730 <col:23> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x11d02c7b8 <line:37:3, col:10>     |     `-ImplicitCastExpr 0x11d02c7a0 <col:10> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x11d02c780 <col:10> 'int' lvalue Var 0x11d026a68 'retval' 'int'     |-CallExpr 0x11d02c980 <line:40:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11d02c8e8 <col:2> 'int ()' Function 0x11d02c830 'mutex_init' 'int ()'     | `-UnaryOperator 0x11d02c968 <col:13, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x11d02c940 <col:14, col:21> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x11d02c908 <col:14> 'struct raremono_device *' lvalue Var 0x11d0269b8 'radio' 'struct raremono_device *'     |-CallExpr 0x11d02cce0 <line:42:2, line:43:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11d02ca88 <line:42:2> 'int ()' Function 0x11d02c9d0 'strscpy' 'int ()'     | |-CXXDependentScopeMemberExpr 0x11d02cb08 <col:10, col:22> '<dependent type>' contains-errors lvalue .name     | | `-RecoveryExpr 0x11d02cae0 <col:10, col:17> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x11d02caa8 <col:10> 'struct raremono_device *' lvalue Var 0x11d0269b8 'radio' 'struct raremono_device *'     | |-CXXDependentScopeMemberExpr 0x11d02cbb0 <col:28, col:44> '<dependent type>' contains-errors lvalue .name     | | `-RecoveryExpr 0x11d02cb88 <col:28, col:35> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x11d02cb50 <col:28> 'struct raremono_device *' lvalue Var 0x11d0269b8 'radio' 'struct raremono_device *'     | `-UnaryExprOrTypeTraitExpr 0x11d02ccc0 <line:43:3, col:26> 'unsigned long' contains-errors sizeof     |   `-ParenExpr 0x11d02cca0 <col:9, col:26> '<dependent type>' contains-errors lvalue     |     `-CXXDependentScopeMemberExpr 0x11d02cc58 <col:10, col:22> '<dependent type>' contains-errors lvalue .name     |       `-RecoveryExpr 0x11d02cc30 <col:10, col:17> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x11d02cbf8 <col:10> 'struct raremono_device *' lvalue Var 0x11d0269b8 'radio' 'struct raremono_device *' non_odr_use_unevaluated     |-BinaryOperator 0x11d02ce38 <line:44:2, col:33> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x11d02cd78 <col:2, col:14> '<dependent type>' contains-errors lvalue .v4l2_dev     | | `-RecoveryExpr 0x11d02cd50 <col:2, col:9> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x11d02cd18 <col:2> 'struct raremono_device *' lvalue Var 0x11d0269b8 'radio' 'struct raremono_device *'     | `-UnaryOperator 0x11d02ce20 <col:25, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x11d02cdf8 <col:26, col:33> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x11d02cdc0 <col:26> 'struct raremono_device *' lvalue Var 0x11d0269b8 'radio' 'struct raremono_device *'     |-BinaryOperator 0x11d02d0c8 <line:47:2, col:29> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x11d02d008 <col:2, col:14> '<dependent type>' contains-errors lvalue .lock     | | `-RecoveryExpr 0x11d02cfe0 <col:2, col:9> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x11d02cfa8 <col:2> 'struct raremono_device *' lvalue Var 0x11d0269b8 'radio' 'struct raremono_device *'     | `-UnaryOperator 0x11d02d0b0 <col:21, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x11d02d088 <col:22, col:29> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x11d02d050 <col:22> 'struct raremono_device *' lvalue Var 0x11d0269b8 'radio' 'struct raremono_device *'     |-CallExpr 0x11d02d3d0 <line:51:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11d02d318 <col:2> 'int ()' Function 0x11d02d260 'usb_set_intfdata' 'int ()'     | |-DeclRefExpr 0x11d02d338 <col:19> 'struct usb_interface *' lvalue ParmVar 0x11d00e248 'intf' 'struct usb_interface *'     | `-UnaryOperator 0x11d02d3b8 <col:25, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x11d02d390 <col:26, col:33> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x11d02d358 <col:26> 'struct raremono_device *' lvalue Var 0x11d0269b8 'radio' 'struct raremono_device *'     |-CallExpr 0x11d02d598 <line:53:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11d02d4e0 <col:2> 'int ()' Function 0x11d02d428 'video_set_drvdata' 'int ()'     | |-UnaryOperator 0x11d02d560 <col:20, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x11d02d538 <col:21, col:28> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x11d02d500 <col:21> 'struct raremono_device *' lvalue Var 0x11d0269b8 'radio' 'struct raremono_device *'     | `-DeclRefExpr 0x11d02d578 <col:34> 'struct raremono_device *' lvalue Var 0x11d0269b8 'radio' 'struct raremono_device *'     |-IfStmt 0x11d02dc30 <line:58:2, line:62:2>     | |-BinaryOperator 0x11d02d930 <line:58:6, col:16> 'int' '=='     | | |-ImplicitCastExpr 0x11d02d918 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x11d02d8d8 <col:6> 'int' lvalue Var 0x11d026a68 'retval' 'int'     | | `-IntegerLiteral 0x11d02d8f8 <col:16> 'int' 0     | `-CompoundStmt 0x11d02dc10 <col:19, line:62:2>     |   |-CallExpr 0x11d02dba8 <line:59:3, line:60:41> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x11d02d950 <line:59:3> 'int ()' Function 0x11d02af10 'dev_info' 'int ()'     |   | |-UnaryOperator 0x11d02d9d0 <col:12, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-RecoveryExpr 0x11d02d9a8 <col:13, col:19> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x11d02d970 <col:13> 'struct usb_interface *' lvalue ParmVar 0x11d00e248 'intf' 'struct usb_interface *'     |   | |-StringLiteral 0x11d02d9e8 <col:24> 'char[4]' lvalue \"STR\"     |   | `-CallExpr 0x11d02db80 <line:60:5, col:40> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x11d02dae8 <col:5> 'int ()' Function 0x11d02da30 'video_device_node_name' 'int ()'     |   |   `-UnaryOperator 0x11d02db68 <col:28, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |     `-RecoveryExpr 0x11d02db40 <col:29, col:36> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x11d02db08 <col:29> 'struct raremono_device *' lvalue Var 0x11d0269b8 'radio' 'struct raremono_device *'     |   `-ReturnStmt 0x11d02dc00 <line:61:3, col:10>     |     `-IntegerLiteral 0x11d02dbe0 <col:10> 'int' 0     |-CallExpr 0x11d02dd08 <line:63:2, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11d02dc50 <col:2> 'int ()' Function 0x11d02c5e0 'dev_err' 'int ()'     | |-UnaryOperator 0x11d02dcd0 <col:10, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x11d02dca8 <col:11, col:17> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x11d02dc70 <col:11> 'struct usb_interface *' lvalue ParmVar 0x11d00e248 'intf' 'struct usb_interface *'     | `-StringLiteral 0x11d02dce8 <col:22> 'char[4]' lvalue \"STR\"     |-CallExpr 0x11d02deb0 <line:64:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11d02de18 <col:2> 'int ()' Function 0x11d02dd60 'v4l2_device_unregister' 'int ()'     | `-UnaryOperator 0x11d02de98 <col:25, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x11d02de70 <col:26, col:33> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x11d02de38 <col:26> 'struct raremono_device *' lvalue Var 0x11d0269b8 'radio' 'struct raremono_device *'     `-ReturnStmt 0x11d02df10 <line:65:2, col:9>       `-ImplicitCastExpr 0x11d02def8 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x11d02ded8 <col:9> 'int' lvalue Var 0x11d026a68 'retval' 'int' ","20059":"`-FunctionDecl 0x12c9281f8  line:1:1 invalid box_wd 'int (int *)'   |-ParmVarDecl 0x12c928128 <col:8, col:13> col:13 invalid box 'int *'   `-CompoundStmt 0x12c928438 <line:2:1, line:4:1>     `-ReturnStmt 0x12c928428 <line:3:2, col:32>       `-BinaryOperator 0x12c928408 <col:9, col:32> '<dependent type>' contains-errors '-'         |-CXXDependentScopeMemberExpr 0x12c928310 <col:9, col:19> '<dependent type>' contains-errors lvalue .x         | `-CXXDependentScopeMemberExpr 0x12c9282c8 <col:9, col:14> '<dependent type>' contains-errors lvalue ->high         |   `-RecoveryExpr 0x12c9282a8 <col:9> '<dependent type>' contains-errors lvalue         `-CXXDependentScopeMemberExpr 0x12c9283c0 <col:23, col:32> '<dependent type>' contains-errors lvalue .x           `-CXXDependentScopeMemberExpr 0x12c928378 <col:23, col:28> '<dependent type>' contains-errors lvalue ->low             `-RecoveryExpr 0x12c928358 <col:23> '<dependent type>' contains-errors lvalue ","19648":"`-FunctionDecl 0x13a928b18  line:1:14 invalid NonMaxSuppressionMultiClass 'int (int *, int *, int *)'   |-ParmVarDecl 0x13a928928 <col:42, col:57> col:57 invalid context 'int *'   |-ParmVarDecl 0x13a9289a8 <line:2:42, col:54> col:54 invalid node 'int *'   |-ParmVarDecl 0x13a928a28 <col:60, col:68> col:68 invalid op_data 'int *'   `-CompoundStmt 0x13a943770 <col:77, line:42:1>     |-DeclStmt 0x13a928e60 <line:4:3, line:5:56>     | `-VarDecl 0x13a928bf0 <line:4:3, col:23> col:23 invalid input_box_encodings 'const int *'     |-DeclStmt 0x13a928fa8 <line:6:3, line:7:60>     | `-VarDecl 0x13a928e90 <line:6:3, col:23> col:23 invalid input_class_predictions 'const int *'     |-DeclStmt 0x13a942170 <line:8:3, col:59>     | `-VarDecl 0x13a942000 <col:3, col:58> col:13 used num_boxes 'const int' cinit     |   `-ArraySubscriptExpr 0x13a942150 <col:25, col:58> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x13a942138 <col:25, col:52> '<dependent type>' contains-errors <LValueToRValue>     |     | `-CXXDependentScopeMemberExpr 0x13a9420d0 <col:25, col:52> '<dependent type>' contains-errors lvalue ->data     |     |   `-CXXDependentScopeMemberExpr 0x13a942088 <col:25, col:46> '<dependent type>' contains-errors lvalue ->dims     |     |     `-RecoveryExpr 0x13a942068 <col:25> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x13a942118 <col:57> 'int' 1     |-DeclStmt 0x13a942270 <line:9:3, col:47>     | `-VarDecl 0x13a9421a0 <col:3, col:36> col:13 used num_classes 'const int' cinit     |   `-CXXDependentScopeMemberExpr 0x13a942228 <col:27, col:36> '<dependent type>' contains-errors lvalue ->num_classes     |     `-RecoveryExpr 0x13a942208 <col:27> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13a942590 <line:10:3, line:11:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13a942368 <line:10:3> 'int ()' Function 0x13a9422b0 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x13a942388 <col:21> '<dependent type>' contains-errors lvalue     | |-ArraySubscriptExpr 0x13a942550 <col:30, col:67> '<dependent type>' contains-errors lvalue     | | |-ImplicitCastExpr 0x13a942538 <col:30, col:61> '<dependent type>' contains-errors <LValueToRValue>     | | | `-CXXDependentScopeMemberExpr 0x13a942410 <col:30, col:61> '<dependent type>' contains-errors lvalue ->data     | | |   `-CXXDependentScopeMemberExpr 0x13a9423c8 <col:30, col:55> '<dependent type>' contains-errors lvalue ->dims     | | |     `-RecoveryExpr 0x13a9423a8 <col:30> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x13a942458 <col:66> 'int' 0     | `-RecoveryExpr 0x13a942570 <line:11:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13a942730 <line:12:3, col:79> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13a9425c8 <col:3> 'int ()' Function 0x13a9422b0 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x13a9425e8 <col:21> '<dependent type>' contains-errors lvalue     | |-ArraySubscriptExpr 0x13a9426f0 <col:30, col:67> '<dependent type>' contains-errors lvalue     | | |-ImplicitCastExpr 0x13a9426d8 <col:30, col:61> '<dependent type>' contains-errors <LValueToRValue>     | | | `-CXXDependentScopeMemberExpr 0x13a942670 <col:30, col:61> '<dependent type>' contains-errors lvalue ->data     | | |   `-CXXDependentScopeMemberExpr 0x13a942628 <col:30, col:55> '<dependent type>' contains-errors lvalue ->dims     | | |     `-RecoveryExpr 0x13a942608 <col:30> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x13a9426b8 <col:66> 'int' 1     | `-DeclRefExpr 0x13a942710 <col:70> 'const int' contains-errors lvalue Var 0x13a942000 'num_boxes' 'const int'     |-DeclStmt 0x13a9428f0 <line:13:3, line:14:45>     | `-VarDecl 0x13a942780 <line:13:3, line:14:44> line:13:13 used num_classes_with_background 'const int' cinit     |   `-ArraySubscriptExpr 0x13a9428d0 <line:14:7, col:44> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x13a9428b8 <col:7, col:38> '<dependent type>' contains-errors <LValueToRValue>     |     | `-CXXDependentScopeMemberExpr 0x13a942850 <col:7, col:38> '<dependent type>' contains-errors lvalue ->data     |     |   `-CXXDependentScopeMemberExpr 0x13a942808 <col:7, col:32> '<dependent type>' contains-errors lvalue ->dims     |     |     `-RecoveryExpr 0x13a9427e8 <col:7> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x13a942898 <col:43> 'int' 2     |-CallExpr 0x13a942b18 <line:16:3, col:75> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13a9429e8 <col:3> 'int ()' Function 0x13a942930 'TF_LITE_ENSURE' 'int ()'     | |-RecoveryExpr 0x13a942a08 <col:18> '<dependent type>' contains-errors lvalue     | `-ParenExpr 0x13a942af8 <col:27, col:74> 'int' contains-errors     |   `-BinaryOperator 0x13a942ad8 <col:28, col:73> 'int' contains-errors '<='     |     |-BinaryOperator 0x13a942a98 <col:28, col:58> 'int' contains-errors '-'     |     | |-ImplicitCastExpr 0x13a942a68 <col:28> 'int' contains-errors <LValueToRValue>     |     | | `-DeclRefExpr 0x13a942a28 <col:28> 'const int' contains-errors lvalue Var 0x13a942780 'num_classes_with_background' 'const int'     |     | `-ImplicitCastExpr 0x13a942a80 <col:58> 'int' contains-errors <LValueToRValue>     |     |   `-DeclRefExpr 0x13a942a48 <col:58> 'const int' contains-errors lvalue Var 0x13a9421a0 'num_classes' 'const int'     |     `-IntegerLiteral 0x13a942ab8 <col:73> 'int' 1     |-CallExpr 0x13a942c38 <line:17:3, col:71> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13a942b48 <col:3> 'int ()' Function 0x13a942930 'TF_LITE_ENSURE' 'int ()'     | |-RecoveryExpr 0x13a942b68 <col:18> '<dependent type>' contains-errors lvalue     | `-ParenExpr 0x13a942c18 <col:27, col:70> 'int' contains-errors     |   `-BinaryOperator 0x13a942bf8 <col:28, col:59> 'int' contains-errors '>='     |     |-ImplicitCastExpr 0x13a942bc8 <col:28> 'int' contains-errors <LValueToRValue>     |     | `-DeclRefExpr 0x13a942b88 <col:28> 'const int' contains-errors lvalue Var 0x13a942780 'num_classes_with_background' 'const int'     |     `-ImplicitCastExpr 0x13a942be0 <col:59> 'int' contains-errors <LValueToRValue>     |       `-DeclRefExpr 0x13a942ba8 <col:59> 'const int' contains-errors lvalue Var 0x13a9421a0 'num_classes' 'const int'     |-DeclStmt 0x13a942ce8 <line:19:3, col:29>     | `-VarDecl 0x13a942c80 <col:3, col:23> col:23 referenced invalid scores 'const int *'     `-SwitchStmt 0x13a942d80 <line:20:3, line:33:3>       |-ImplicitCastExpr 0x13a942d68 <line:20:11, col:36> '<dependent type>' contains-errors <LValueToRValue>       | `-CXXDependentScopeMemberExpr 0x13a942d20 <col:11, col:36> '<dependent type>' contains-errors lvalue ->type       |   `-RecoveryExpr 0x13a942d00 <col:11> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x13a9432f0 <col:42, line:33:3>         |-CompoundStmt 0x13a9431f8 <line:21:24, line:26:5>         | |-CallExpr 0x13a9430f8 <line:23:7, line:24:79> '<dependent type>' contains-errors         | | |-DeclRefExpr 0x13a943000 <line:23:7> 'int ()' Function 0x13a942f38 'DequantizeClassPredictions' 'int ()'         | | |-RecoveryExpr 0x13a943020 <col:34> '<dependent type>' contains-errors lvalue         | | |-DeclRefExpr 0x13a943040 <col:59> 'const int' contains-errors lvalue Var 0x13a942000 'num_boxes' 'const int'         | | |-DeclRefExpr 0x13a943060 <line:24:34> 'const int' contains-errors lvalue Var 0x13a942780 'num_classes_with_background' 'const int'         | | `-RecoveryExpr 0x13a9430d8 <col:63> '<dependent type>' contains-errors lvalue         | `-BinaryOperator 0x13a9431d8 <line:25:7, col:16> '<dependent type>' contains-errors '='         |   |-RecoveryExpr 0x13a943158 <col:7> '<dependent type>' contains-errors lvalue         |   | `-DeclRefExpr 0x13a943138 <col:7> 'const int *' lvalue Var 0x13a942c80 'scores' 'const int *'         |   `-RecoveryExpr 0x13a9431b8 <col:16> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x13a943218 <line:26:7>         |-BinaryOperator 0x13a9432a0 <line:28:7, col:16> '<dependent type>' contains-errors '='         | |-RecoveryExpr 0x13a943258 <col:7> '<dependent type>' contains-errors lvalue         | | `-DeclRefExpr 0x13a943238 <col:7> 'const int *' lvalue Var 0x13a942c80 'scores' 'const int *'         | `-RecoveryExpr 0x13a943280 <col:16> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x13a9432c0 <line:29:7>         `-DefaultStmt 0x13a9432d0 <line:30:5, col:12>           `-NullStmt 0x13a9432c8 <col:12> ","20176":"`-FunctionDecl 0x15600dfe8  line:1:5 invalid bus_deserialize_and_dump_unit_file_changes 'int (int *, int, int **, int *)'   |-ParmVarDecl 0x15600dd28 <col:48, col:64> col:64 invalid m 'int *'   |-ParmVarDecl 0x15600dda8 <col:67, col:72> col:72 invalid quiet 'int'   |-ParmVarDecl 0x15600de60 <col:79, col:96> col:96 invalid changes 'int **'   |-ParmVarDecl 0x15600dee0 <col:105, col:113> col:113 invalid n_changes 'int *'   `-CompoundStmt 0x156029960 <col:124, line:35:1>     |-DeclStmt 0x15600e250 <line:2:9, col:41>     | |-VarDecl 0x15600e0c8 <col:9, col:21> col:21 used type 'const char *'     | |-VarDecl 0x15600e148 <col:9, col:28> col:28 used path 'const char *'     | `-VarDecl 0x15600e1c8 <col:9, col:35> col:35 used source 'const char *'     |-DeclStmt 0x15600e2e8 <line:3:9, col:14>     | `-VarDecl 0x15600e280 <col:9, col:13> col:13 used r 'int'     |-CallExpr 0x1560274f8 <line:6:9, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1560274b8 <col:9> 'int ()' Function 0x156027400 'assert' 'int ()'     | `-RecoveryExpr 0x1560274d8 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x156027560 <line:7:9, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x156027520 <col:9> 'int ()' Function 0x156027400 'assert' 'int ()'     | `-RecoveryExpr 0x156027540 <col:16> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1560277f0 <line:9:9, col:71> 'int' contains-errors '='     | |-DeclRefExpr 0x156027588 <col:9> 'int' lvalue Var 0x15600e280 'r' 'int'     | `-CallExpr 0x1560277b8 <col:13, col:71> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x156027688 <col:13> 'int ()' Function 0x1560275d0 'sd_bus_message_enter_container' 'int ()'     |   |-RecoveryExpr 0x1560276a8 <col:44> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x156027798 <col:47> '<dependent type>' contains-errors lvalue     |   `-StringLiteral 0x156027720 <col:66> 'char[4]' lvalue \"STR\"     |-IfStmt 0x156027a48 <line:10:9, line:11:45>     | |-BinaryOperator 0x156027868 <line:10:13, col:17> 'int' '<'     | | |-ImplicitCastExpr 0x156027850 <col:13> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x156027810 <col:13> 'int' lvalue Var 0x15600e280 'r' 'int'     | | `-IntegerLiteral 0x156027830 <col:17> 'int' 0     | `-ReturnStmt 0x156027a38 <line:11:17, col:45>     |   `-CallExpr 0x1560279f8 <col:24, col:45> 'int'     |     |-ImplicitCastExpr 0x1560279e0 <col:24> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x156027968 <col:24> 'int ()' Function 0x1560278b0 'bus_log_parse_error' 'int ()'     |     `-ImplicitCastExpr 0x156027a20 <col:44> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x156027988 <col:44> 'int' lvalue Var 0x15600e280 'r' 'int'     |-WhileStmt 0x156029200 <line:13:9, line:25:9>     | |-BinaryOperator 0x156027d50 <line:13:16, col:77> 'int' contains-errors '>'     | | |-ParenExpr 0x156027d10 <col:16, col:73> 'int' contains-errors     | | | `-BinaryOperator 0x156027cf0 <col:17, col:72> 'int' contains-errors '='     | | |   |-DeclRefExpr 0x156027a68 <col:17> 'int' lvalue Var 0x15600e280 'r' 'int'     | | |   `-CallExpr 0x156027ca8 <col:21, col:72> '<dependent type>' contains-errors     | | |     |-DeclRefExpr 0x156027b68 <col:21> 'int ()' Function 0x156027ab0 'sd_bus_message_read' 'int ()'     | | |     |-RecoveryExpr 0x156027b88 <col:41> '<dependent type>' contains-errors lvalue     | | |     |-StringLiteral 0x156027ba8 <col:44> 'char[4]' lvalue \"STR\"     | | |     |-UnaryOperator 0x156027c20 <col:51, col:52> 'const char **' prefix '&' cannot overflow     | | |     | `-DeclRefExpr 0x156027bc8 <col:52> 'const char *' lvalue Var 0x15600e0c8 'type' 'const char *'     | | |     |-UnaryOperator 0x156027c58 <col:58, col:59> 'const char **' prefix '&' cannot overflow     | | |     | `-DeclRefExpr 0x156027c38 <col:59> 'const char *' lvalue Var 0x15600e148 'path' 'const char *'     | | |     `-UnaryOperator 0x156027c90 <col:65, col:66> 'const char **' prefix '&' cannot overflow     | | |       `-DeclRefExpr 0x156027c70 <col:66> 'const char *' lvalue Var 0x15600e1c8 'source' 'const char *'     | | `-IntegerLiteral 0x156027d30 <col:77> 'int' 0     | `-CompoundStmt 0x1560283d0 <col:80, line:25:9>     |   |-IfStmt 0x156028028 <line:17:17, line:20:17>     |   | |-BinaryOperator 0x156027de8 <line:17:21, col:26> 'int' contains-errors '<'     |   | | |-RecoveryExpr 0x156027dc8 <col:21> '<dependent type>' contains-errors lvalue     |   | | `-IntegerLiteral 0x156027d88 <col:26> 'int' 0     |   | `-CompoundStmt 0x156028008 <col:29, line:20:17>     |   |   |-CallExpr 0x156027f80 <line:18:25, col:53> 'int'     |   |   | |-ImplicitCastExpr 0x156027f68 <col:25> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x156027ee8 <col:25> 'int ()' Function 0x156027e30 'log_notice' 'int ()'     |   |   | |-ImplicitCastExpr 0x156027fb8 <col:36> 'char *' <ArrayToPointerDecay>     |   |   | | `-StringLiteral 0x156027f08 <col:36> 'char[4]' lvalue \"STR\"     |   |   | |-ImplicitCastExpr 0x156027fd0 <col:43> 'const char *' <LValueToRValue>     |   |   | | `-DeclRefExpr 0x156027f28 <col:43> 'const char *' lvalue Var 0x15600e0c8 'type' 'const char *'     |   |   | `-ImplicitCastExpr 0x156027fe8 <col:49> 'const char *' <LValueToRValue>     |   |   |   `-DeclRefExpr 0x156027f48 <col:49> 'const char *' lvalue Var 0x15600e148 'path' 'const char *'     |   |   `-ContinueStmt 0x156028000 <line:19:25>     |   |-BinaryOperator 0x1560282d0 <line:22:17, col:79> 'int' contains-errors '='     |   | |-DeclRefExpr 0x156028048 <col:17> 'int' lvalue Var 0x15600e280 'r' 'int'     |   | `-CallExpr 0x156028288 <col:21, col:79> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x156028148 <col:21> 'int ()' Function 0x156028090 'unit_file_changes_add' 'int ()'     |   |   |-RecoveryExpr 0x156028168 <col:43> '<dependent type>' contains-errors lvalue     |   |   |-RecoveryExpr 0x156028188 <col:52> '<dependent type>' contains-errors lvalue     |   |   |-RecoveryExpr 0x156028268 <col:63> '<dependent type>' contains-errors lvalue     |   |   |-DeclRefExpr 0x1560281c0 <col:67> 'const char *' lvalue Var 0x15600e148 'path' 'const char *'     |   |   `-DeclRefExpr 0x1560281e0 <col:73> 'const char *' lvalue Var 0x15600e1c8 'source' 'const char *'     |   `-IfStmt 0x1560283b0 <line:23:17, line:24:32>     |     |-BinaryOperator 0x156028348 <line:23:21, col:25> 'int' '<'     |     | |-ImplicitCastExpr 0x156028330 <col:21> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x1560282f0 <col:21> 'int' lvalue Var 0x15600e280 'r' 'int'     |     | `-IntegerLiteral 0x156028310 <col:25> 'int' 0     |     `-ReturnStmt 0x1560283a0 <line:24:25, col:32>     |       `-ImplicitCastExpr 0x156028388 <col:32> 'int' <LValueToRValue>     |         `-DeclRefExpr 0x156028368 <col:32> 'int' lvalue Var 0x15600e280 'r' 'int'     |-IfStmt 0x156029340 <line:26:9, line:27:45>     | |-BinaryOperator 0x156029278 <line:26:13, col:17> 'int' '<'     | | |-ImplicitCastExpr 0x156029260 <col:13> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x156029220 <col:13> 'int' lvalue Var 0x15600e280 'r' 'int'     | | `-IntegerLiteral 0x156029240 <col:17> 'int' 0     | `-ReturnStmt 0x156029330 <line:27:17, col:45>     |   `-CallExpr 0x1560292f0 <col:24, col:45> 'int'     |     |-ImplicitCastExpr 0x1560292d8 <col:24> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x156029298 <col:24> 'int ()' Function 0x1560278b0 'bus_log_parse_error' 'int ()'     |     `-ImplicitCastExpr 0x156029318 <col:44> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x1560292b8 <col:44> 'int' lvalue Var 0x15600e280 'r' 'int'     |-BinaryOperator 0x1560294c8 <line:29:9, col:44> 'int' contains-errors '='     | |-DeclRefExpr 0x156029360 <col:9> 'int' lvalue Var 0x15600e280 'r' 'int'     | `-CallExpr 0x1560294a0 <col:13, col:44> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x156029460 <col:13> 'int ()' Function 0x1560293a8 'sd_bus_message_exit_container' 'int ()'     |   `-RecoveryExpr 0x156029480 <col:43> '<dependent type>' contains-errors lvalue     |-IfStmt 0x156029608 <line:30:9, line:31:45>     | |-BinaryOperator 0x156029540 <line:30:13, col:17> 'int' '<'     | | |-ImplicitCastExpr 0x156029528 <col:13> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x1560294e8 <col:13> 'int' lvalue Var 0x15600e280 'r' 'int'     | | `-IntegerLiteral 0x156029508 <col:17> 'int' 0     | `-ReturnStmt 0x1560295f8 <line:31:17, col:45>     |   `-CallExpr 0x1560295b8 <col:24, col:45> 'int'     |     |-ImplicitCastExpr 0x1560295a0 <col:24> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x156029560 <col:24> 'int ()' Function 0x1560278b0 'bus_log_parse_error' 'int ()'     |     `-ImplicitCastExpr 0x1560295e0 <col:44> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x156029580 <col:44> 'int' lvalue Var 0x15600e280 'r' 'int'     |-CallExpr 0x1560298e8 <line:33:9, col:68> '<dependent type>' contains-errors     | |-DeclRefExpr 0x156029708 <col:9> 'int ()' Function 0x156029650 'unit_file_dump_changes' 'int ()'     | |-IntegerLiteral 0x156029728 <col:32> 'int' 0     | |-RecoveryExpr 0x156029868 <col:35> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x1560298a0 <col:41, col:42> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x156029888 <col:42> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x156029760 <col:42> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x1560298d0 <col:51, col:52> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x1560298b8 <col:52> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x1560297b0 <col:52> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x156029800 <col:63> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x156029950 <line:34:9, col:16>       `-IntegerLiteral 0x156029930 <col:16> 'int' 0 ","19873":"`-FunctionDecl 0x1299282c8  line:1:26 invalid ReadProfileLong 'int (const int, unsigned char *)' static inline   |-ParmVarDecl 0x1299280f0 <col:42, col:59> col:59 invalid endian 'const int'   |-ParmVarDecl 0x1299281a8 <line:2:3, col:18> col:18 used buffer 'unsigned char *'   `-CompoundStmt 0x1299424e0 <line:3:1, line:27:1>     |-DeclStmt 0x1299285c8 <line:4:3, line:11:12>     | |-RecordDecl 0x129928380 <line:4:3, line:11:3> line:4:3 union definition     | | |-FieldDecl 0x129928438 <line:6:5, line:7:7> col:7 referenced unsigned_value 'unsigned int'     | | `-FieldDecl 0x1299284a0 <line:9:5, line:10:7> col:7 referenced signed_value 'int'     | `-VarDecl 0x129928548 <line:4:3, line:11:5> col:5 used quantum 'union (unnamed union at dataset_diviso_filec\/func19016_vuln.c:4:3)':'union (unnamed at dataset_diviso_filec\/func19016_vuln.c:4:3)'     |-DeclStmt 0x129928660 <line:13:3, line:14:10>     | `-VarDecl 0x1299285f8 <line:13:3, line:14:5> col:5 used value 'unsigned int'     |-IfStmt 0x129941e40 <line:16:3, line:22:5>     | |-BinaryOperator 0x1299286f0 <line:16:7, col:17> 'int' contains-errors '=='     | | |-RecoveryExpr 0x129928678 <col:7> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1299286d0 <col:17> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x129941e18 <line:17:5, line:22:5>     |   |-BinaryOperator 0x129941bf8 <line:18:7, line:19:40> 'unsigned int' '='     |   | |-DeclRefExpr 0x129928710 <line:18:7> 'unsigned int' lvalue Var 0x1299285f8 'value' 'unsigned int'     |   | `-CStyleCastExpr 0x129941bd0 <col:13, line:19:40> 'unsigned int' <IntegralCast>     |   |   `-ParenExpr 0x129941bb0 <line:18:28, line:19:40> 'int'     |   |     `-BinaryOperator 0x129941b58 <line:18:29, line:19:39> 'int' '|'     |   |       |-BinaryOperator 0x129941a70 <line:18:29, line:19:25> 'int' '|'     |   |       | |-BinaryOperator 0x129941948 <line:18:29, col:65> 'int' '|'     |   |       | | |-ParenExpr 0x129941820 <col:29, col:45> 'int'     |   |       | | | `-BinaryOperator 0x129941800 <col:30, col:43> 'int' '<<'     |   |       | | |   |-ImplicitCastExpr 0x1299287e0 <col:30, col:38> 'int' <IntegralCast>     |   |       | | |   | `-ImplicitCastExpr 0x1299287c8 <col:30, col:38> 'unsigned char' <LValueToRValue>     |   |       | | |   |   `-ArraySubscriptExpr 0x129928788 <col:30, col:38> 'unsigned char' lvalue     |   |       | | |   |     |-ImplicitCastExpr 0x129928770 <col:30> 'unsigned char *' <LValueToRValue>     |   |       | | |   |     | `-DeclRefExpr 0x129928730 <col:30> 'unsigned char *' lvalue ParmVar 0x1299281a8 'buffer' 'unsigned char *'     |   |       | | |   |     `-IntegerLiteral 0x129928750 <col:37> 'int' 3     |   |       | | |   `-IntegerLiteral 0x1299287a8 <col:43> 'int' 24     |   |       | | `-ParenExpr 0x129941928 <col:49, col:65> 'int'     |   |       | |   `-BinaryOperator 0x129941908 <col:50, col:63> 'int' '<<'     |   |       | |     |-ImplicitCastExpr 0x1299418f0 <col:50, col:58> 'int' <IntegralCast>     |   |       | |     | `-ImplicitCastExpr 0x1299418d8 <col:50, col:58> 'unsigned char' <LValueToRValue>     |   |       | |     |   `-ArraySubscriptExpr 0x129941898 <col:50, col:58> 'unsigned char' lvalue     |   |       | |     |     |-ImplicitCastExpr 0x129941880 <col:50> 'unsigned char *' <LValueToRValue>     |   |       | |     |     | `-DeclRefExpr 0x129941840 <col:50> 'unsigned char *' lvalue ParmVar 0x1299281a8 'buffer' 'unsigned char *'     |   |       | |     |     `-IntegerLiteral 0x129941860 <col:57> 'int' 2     |   |       | |     `-IntegerLiteral 0x1299418b8 <col:63> 'int' 16     |   |       | `-ParenExpr 0x129941a50 <line:19:9, col:25> 'int'     |   |       |   `-BinaryOperator 0x129941a30 <col:10, col:23> 'int' '<<'     |   |       |     |-ImplicitCastExpr 0x129941a18 <col:10, col:18> 'int' <IntegralCast>     |   |       |     | `-ImplicitCastExpr 0x129941a00 <col:10, col:18> 'unsigned char' <LValueToRValue>     |   |       |     |   `-ArraySubscriptExpr 0x1299419c0 <col:10, col:18> 'unsigned char' lvalue     |   |       |     |     |-ImplicitCastExpr 0x1299419a8 <col:10> 'unsigned char *' <LValueToRValue>     |   |       |     |     | `-DeclRefExpr 0x129941968 <col:10> 'unsigned char *' lvalue ParmVar 0x1299281a8 'buffer' 'unsigned char *'     |   |       |     |     `-IntegerLiteral 0x129941988 <col:17> 'int' 1     |   |       |     `-IntegerLiteral 0x1299419e0 <col:23> 'int' 8     |   |       `-ImplicitCastExpr 0x129941b40 <col:29, col:39> 'int' <IntegralCast>     |   |         `-ImplicitCastExpr 0x129941b28 <col:29, col:39> 'unsigned char' <LValueToRValue>     |   |           `-ParenExpr 0x129941b08 <col:29, col:39> 'unsigned char' lvalue     |   |             `-ArraySubscriptExpr 0x129941ae8 <col:30, col:38> 'unsigned char' lvalue     |   |               |-ImplicitCastExpr 0x129941ad0 <col:30> 'unsigned char *' <LValueToRValue>     |   |               | `-DeclRefExpr 0x129941a90 <col:30> 'unsigned char *' lvalue ParmVar 0x1299281a8 'buffer' 'unsigned char *'     |   |               `-IntegerLiteral 0x129941ab0 <col:37> 'int' 0     |   |-BinaryOperator 0x129941d00 <line:20:7, col:49> 'unsigned int' '='     |   | |-MemberExpr 0x129941c38 <col:7, col:15> 'unsigned int' lvalue .unsigned_value 0x129928438     |   | | `-DeclRefExpr 0x129941c18 <col:7> 'union (unnamed union at dataset_diviso_filec\/func19016_vuln.c:4:3)':'union (unnamed at dataset_diviso_filec\/func19016_vuln.c:4:3)' lvalue Var 0x129928548 'quantum' 'union (unnamed union at dataset_diviso_filec\/func19016_vuln.c:4:3)':'union (unnamed at dataset_diviso_filec\/func19016_vuln.c:4:3)'     |   | `-ParenExpr 0x129941ce0 <col:30, col:49> 'unsigned int'     |   |   `-BinaryOperator 0x129941cc0 <col:31, col:39> 'unsigned int' '&'     |   |     |-ImplicitCastExpr 0x129941ca8 <col:31> 'unsigned int' <LValueToRValue>     |   |     | `-DeclRefExpr 0x129941c68 <col:31> 'unsigned int' lvalue Var 0x1299285f8 'value' 'unsigned int'     |   |     `-IntegerLiteral 0x129941c88 <col:39> 'unsigned int' 4294967295     |   `-ReturnStmt 0x129941e08 <line:21:7, col:34>     |     `-ImplicitCastExpr 0x129941df0 <col:13, col:34> 'int' <LValueToRValue>     |       `-ParenExpr 0x129941dd0 <col:13, col:34> 'int' lvalue     |         `-MemberExpr 0x129941da0 <col:14, col:22> 'int' lvalue .signed_value 0x1299284a0     |           `-DeclRefExpr 0x129941d80 <col:14> 'union (unnamed union at dataset_diviso_filec\/func19016_vuln.c:4:3)':'union (unnamed at dataset_diviso_filec\/func19016_vuln.c:4:3)' lvalue Var 0x129928548 'quantum' 'union (unnamed union at dataset_diviso_filec\/func19016_vuln.c:4:3)':'union (unnamed at dataset_diviso_filec\/func19016_vuln.c:4:3)'     |-BinaryOperator 0x129942320 <line:23:3, line:24:33> 'unsigned int' '='     | |-DeclRefExpr 0x129941e60 <line:23:3> 'unsigned int' lvalue Var 0x1299285f8 'value' 'unsigned int'     | `-CStyleCastExpr 0x1299422f8 <col:9, line:24:33> 'unsigned int' <IntegralCast>     |   `-ParenExpr 0x1299422d8 <line:23:24, line:24:33> 'int'     |     `-BinaryOperator 0x129942280 <line:23:25, line:24:32> 'int' '|'     |       |-BinaryOperator 0x1299421b8 <line:23:25, line:24:20> 'int' '|'     |       | |-BinaryOperator 0x129942090 <line:23:25, col:61> 'int' '|'     |       | | |-ParenExpr 0x129941f68 <col:25, col:41> 'int'     |       | | | `-BinaryOperator 0x129941f48 <col:26, col:39> 'int' '<<'     |       | | |   |-ImplicitCastExpr 0x129941f30 <col:26, col:34> 'int' <IntegralCast>     |       | | |   | `-ImplicitCastExpr 0x129941f18 <col:26, col:34> 'unsigned char' <LValueToRValue>     |       | | |   |   `-ArraySubscriptExpr 0x129941ed8 <col:26, col:34> 'unsigned char' lvalue     |       | | |   |     |-ImplicitCastExpr 0x129941ec0 <col:26> 'unsigned char *' <LValueToRValue>     |       | | |   |     | `-DeclRefExpr 0x129941e80 <col:26> 'unsigned char *' lvalue ParmVar 0x1299281a8 'buffer' 'unsigned char *'     |       | | |   |     `-IntegerLiteral 0x129941ea0 <col:33> 'int' 0     |       | | |   `-IntegerLiteral 0x129941ef8 <col:39> 'int' 24     |       | | `-ParenExpr 0x129942070 <col:45, col:61> 'int'     |       | |   `-BinaryOperator 0x129942050 <col:46, col:59> 'int' '<<'     |       | |     |-ImplicitCastExpr 0x129942038 <col:46, col:54> 'int' <IntegralCast>     |       | |     | `-ImplicitCastExpr 0x129942020 <col:46, col:54> 'unsigned char' <LValueToRValue>     |       | |     |   `-ArraySubscriptExpr 0x129941fe0 <col:46, col:54> 'unsigned char' lvalue     |       | |     |     |-ImplicitCastExpr 0x129941fc8 <col:46> 'unsigned char *' <LValueToRValue>     |       | |     |     | `-DeclRefExpr 0x129941f88 <col:46> 'unsigned char *' lvalue ParmVar 0x1299281a8 'buffer' 'unsigned char *'     |       | |     |     `-IntegerLiteral 0x129941fa8 <col:53> 'int' 1     |       | |     `-IntegerLiteral 0x129942000 <col:59> 'int' 16     |       | `-ParenExpr 0x129942198 <line:24:5, col:20> 'int'     |       |   `-BinaryOperator 0x129942178 <col:6, col:19> 'int' '<<'     |       |     |-ImplicitCastExpr 0x129942160 <col:6, col:14> 'int' <IntegralCast>     |       |     | `-ImplicitCastExpr 0x129942148 <col:6, col:14> 'unsigned char' <LValueToRValue>     |       |     |   `-ArraySubscriptExpr 0x129942108 <col:6, col:14> 'unsigned char' lvalue     |       |     |     |-ImplicitCastExpr 0x1299420f0 <col:6> 'unsigned char *' <LValueToRValue>     |       |     |     | `-DeclRefExpr 0x1299420b0 <col:6> 'unsigned char *' lvalue ParmVar 0x1299281a8 'buffer' 'unsigned char *'     |       |     |     `-IntegerLiteral 0x1299420d0 <col:13> 'int' 2     |       |     `-IntegerLiteral 0x129942128 <col:19> 'int' 8     |       `-ImplicitCastExpr 0x129942268 <col:24, col:32> 'int' <IntegralCast>     |         `-ImplicitCastExpr 0x129942250 <col:24, col:32> 'unsigned char' <LValueToRValue>     |           `-ArraySubscriptExpr 0x129942230 <col:24, col:32> 'unsigned char' lvalue     |             |-ImplicitCastExpr 0x129942218 <col:24> 'unsigned char *' <LValueToRValue>     |             | `-DeclRefExpr 0x1299421d8 <col:24> 'unsigned char *' lvalue ParmVar 0x1299281a8 'buffer' 'unsigned char *'     |             `-IntegerLiteral 0x1299421f8 <col:31> 'int' 3     |-BinaryOperator 0x129942428 <line:25:3, col:45> 'unsigned int' '='     | |-MemberExpr 0x129942360 <col:3, col:11> 'unsigned int' lvalue .unsigned_value 0x129928438     | | `-DeclRefExpr 0x129942340 <col:3> 'union (unnamed union at dataset_diviso_filec\/func19016_vuln.c:4:3)':'union (unnamed at dataset_diviso_filec\/func19016_vuln.c:4:3)' lvalue Var 0x129928548 'quantum' 'union (unnamed union at dataset_diviso_filec\/func19016_vuln.c:4:3)':'union (unnamed at dataset_diviso_filec\/func19016_vuln.c:4:3)'     | `-ParenExpr 0x129942408 <col:26, col:45> 'unsigned int'     |   `-BinaryOperator 0x1299423e8 <col:27, col:35> 'unsigned int' '&'     |     |-ImplicitCastExpr 0x1299423d0 <col:27> 'unsigned int' <LValueToRValue>     |     | `-DeclRefExpr 0x129942390 <col:27> 'unsigned int' lvalue Var 0x1299285f8 'value' 'unsigned int'     |     `-IntegerLiteral 0x1299423b0 <col:35> 'unsigned int' 4294967295     `-ReturnStmt 0x1299424d0 <line:26:3, col:30>       `-ImplicitCastExpr 0x1299424b8 <col:9, col:30> 'int' <LValueToRValue>         `-ParenExpr 0x129942498 <col:9, col:30> 'int' lvalue           `-MemberExpr 0x129942468 <col:10, col:18> 'int' lvalue .signed_value 0x1299284a0             `-DeclRefExpr 0x129942448 <col:10> 'union (unnamed union at dataset_diviso_filec\/func19016_vuln.c:4:3)':'union (unnamed at dataset_diviso_filec\/func19016_vuln.c:4:3)' lvalue Var 0x129928548 'quantum' 'union (unnamed union at dataset_diviso_filec\/func19016_vuln.c:4:3)':'union (unnamed at dataset_diviso_filec\/func19016_vuln.c:4:3)' ","19651":"`-FunctionDecl 0x1571281f8  line:1:1 invalid ex_function 'int (int *)'   |-ParmVarDecl 0x157128128 <col:13, col:22> col:22 invalid eap 'int *'   `-CompoundStmt 0x157128788 <line:2:1, line:7:1>     |-DeclStmt 0x157128360 <line:3:5, col:32>     | `-VarDecl 0x1571282c0 <col:5, col:28> col:13 used line_to_free 'char *' cinit     |   `-RecoveryExpr 0x157128340 <col:28> '<dependent type>' contains-errors lvalue     `-CallExpr 0x157128748 <line:6:5, col:26> 'int' contains-errors       |-ImplicitCastExpr 0x157128730 <col:5> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x1571286c0 <col:5> 'int ()' Function 0x157128608 'vim_free' 'int ()'       `-ImplicitCastExpr 0x157128770 <col:14> 'char *' contains-errors <LValueToRValue>         `-DeclRefExpr 0x1571286e0 <col:14> 'char *' contains-errors lvalue Var 0x1571282c0 'line_to_free' 'char *' ","19570":"`-FunctionDecl 0x12d90bc38  line:1:1 TEST_F 'int (int, int)'   |-ParmVarDecl 0x12d90bb58 <col:8> col:8 RouterTest 'int'   |-ParmVarDecl 0x12d90bad8 <col:20> col:20 Redirect 'int'   `-CompoundStmt 0x12d9278e8 <col:30, line:23:1>     |-RecoveryExpr 0x12d90bd80 <line:3:3> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12d9263e8 <line:4:3, col:66> '<dependent type>' contains-errors     | |-CXXDependentScopeMemberExpr 0x12d926348 <col:3, col:44> '<dependent type>' contains-errors lvalue .WillOnce     | | `-CallExpr 0x12d926318 <col:3, col:42> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12d90beb0 <col:3> 'int ()' Function 0x12d90bdf8 'EXPECT_CALL' 'int ()'     | |   |-RecoveryExpr 0x12d9262b0 <col:15> '<dependent type>' contains-errors lvalue     | |   `-CallExpr 0x12d9262f0 <col:32, col:41> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x12d90bfc8 <col:32> 'int ()' Function 0x12d90bf10 'newPath' 'int ()'     | |     `-RecoveryExpr 0x12d9262d0 <col:40> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x12d9263a8 <col:53, col:65> 'int'     |   |-ImplicitCastExpr 0x12d926390 <col:53> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12d90c180 <col:53> 'int ()' Function 0x12d90c0c8 'Return' 'int ()'     |   `-ImplicitCastExpr 0x12d9263d0 <col:60> 'char *' <ArrayToPointerDecay>     |     `-StringLiteral 0x12d90c1e0 <col:60> 'char[4]' lvalue \"STR\"     |-CallExpr 0x12d926878 <line:5:3, col:75> '<dependent type>' contains-errors     | |-CXXDependentScopeMemberExpr 0x12d9267e8 <col:3, col:45> '<dependent type>' contains-errors lvalue .WillOnce     | | `-CallExpr 0x12d9267b8 <col:3, col:43> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12d926410 <col:3> 'int ()' Function 0x12d90bdf8 'EXPECT_CALL' 'int ()'     | |   |-RecoveryExpr 0x12d926760 <col:15> '<dependent type>' contains-errors lvalue     | |   `-CallExpr 0x12d926798 <col:32, col:42> 'int'     | |     `-ImplicitCastExpr 0x12d926780 <col:32> 'int (*)()' <FunctionToPointerDecay>     | |       `-DeclRefExpr 0x12d926528 <col:32> 'int ()' Function 0x12d926470 'routeName' 'int ()'     | `-CallExpr 0x12d926850 <col:54, col:74> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12d9266d8 <col:54> 'int ()' Function 0x12d926620 'ReturnRef' 'int ()'     |   `-RecoveryExpr 0x12d926830 <col:64> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12d926af8 <line:6:3, col:55> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d9268a0 <col:3> 'int ()' Function 0x12d90bdf8 'EXPECT_CALL' 'int ()'     | |-RecoveryExpr 0x12d926a68 <col:15> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x12d926ac8 <col:32, col:54> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12d9269b8 <col:32> 'int ()' Function 0x12d926900 'rewritePathHeader' 'int ()'     |   |-RecoveryExpr 0x12d926a88 <col:50> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x12d926aa8 <col:53> '<dependent type>' contains-errors lvalue     `-CallExpr 0x12d9278c0 <line:22:3, col:44> 'int'       |-ImplicitCastExpr 0x12d9278a8 <col:3> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x12d927700 <col:3> 'int ()' Function 0x12d927648 'EXPECT_TRUE' 'int ()'       `-CallExpr 0x12d927878 <col:15, col:43> 'int'         |-ImplicitCastExpr 0x12d927860 <col:15> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x12d927800 <col:15> 'int ()' Function 0x12d927748 'verifyHostUpstreamStats' 'int ()'         |-IntegerLiteral 0x12d927820 <col:39> 'int' 0         `-IntegerLiteral 0x12d927840 <col:42> 'int' 0 ","19098":"`-FunctionDecl 0x12d928a38  line:1:1 TEST_F 'int (int, int)'   |-ParmVarDecl 0x12d928958 <col:8> col:8 ConnectionHandlerTest 'int'   |-ParmVarDecl 0x12d9288d8 <col:31> col:31 ListenerFilterTimeoutResetOnSuccess 'int'   `-CompoundStmt 0x12e00a070 <col:68, line:41:1>     |-RecoveryExpr 0x12d928d80 <line:5:3> '<dependent type>' contains-errors lvalue     `-RecoveryExpr 0x12d928dd0 <line:6:3> '<dependent type>' contains-errors lvalue ","19845":"`-FunctionDecl 0x12f142c78  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x12f142d78 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x12f142de0 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x12f142e48 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x12f142d20 <<invalid sloc>> Implicit 900 ","20198":"`-FunctionDecl 0x14d80ddc8  line:1:13 invalid oidc_util_hdr_in_x_forwarded_port_get 'const char *(const int *)'   |-ParmVarDecl 0x14d80dcf0 <col:51, col:70> col:70 invalid r 'const int *'   `-CompoundStmt 0x14d80e040 <col:73, line:4:1> ","19339":"`-FunctionDecl 0x15a928208  line:1:1 invalid DEFINE_PROTO_FUZZER 'int (const int)'   |-ParmVarDecl 0x15a9280f0 <col:21, <invalid sloc>> col:31 invalid 'const int'   `-CompoundStmt 0x15a9284a8 <col:94, line:32:1>     |-RecoveryExpr 0x15a9282e8 <line:4:3> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x15a9283c0 <line:17:3, line:18:11>     | `-VarDecl 0x15a928320 <line:17:3, line:18:7> line:17:8 response_headers 'int' auto cinit     |   `-RecoveryExpr 0x15a9283a0 <line:18:7> '<dependent type>' contains-errors lvalue     `-DeclStmt 0x15a928490 <line:19:3, col:32>       `-VarDecl 0x15a9283f0 <col:3, col:28> col:8 response_trailers 'int' auto cinit         `-RecoveryExpr 0x15a928470 <col:28> '<dependent type>' contains-errors lvalue ","19789":"`-FunctionDecl 0x12f02cb78  line:1:12 invalid mem_cgroup_count_precharge_pte_range 'int (int *, unsigned long, unsigned long, struct mm_walk *)' static   |-ParmVarDecl 0x12f013b28 <col:49, col:56> col:56 invalid pmd 'int *'   |-ParmVarDecl 0x12f013ba8 <line:2:6, col:20> col:20 used addr 'unsigned long'   |-ParmVarDecl 0x12f013c28 <col:26, col:40> col:40 used end 'unsigned long'   |-ParmVarDecl 0x12f02ca28 <line:3:6, col:22> col:22 used walk 'struct mm_walk *'   `-CompoundStmt 0x12f02f778 <line:4:1, line:19:1>     |-DeclStmt 0x12f02ce88 <line:5:2, col:44>     | |-RecordDecl 0x12f02cc40 <col:2, col:9> col:9 struct vm_area_struct     | `-VarDecl 0x12f02cda8 <col:2, col:37> col:25 used vma 'struct vm_area_struct *' cinit     |   `-RecoveryExpr 0x12f02ce48 <col:31, col:37> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12f02ce10 <col:31> 'struct mm_walk *' lvalue ParmVar 0x12f02ca28 'walk' 'struct mm_walk *'     |-CallExpr 0x12f02d0d0 <line:9:2, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f02d030 <col:2> 'int ()' Function 0x12f02cf78 'split_huge_page_pmd' 'int ()'     | |-RecoveryExpr 0x12f02d088 <col:22, col:28> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12f02d050 <col:22> 'struct mm_walk *' lvalue ParmVar 0x12f02ca28 'walk' 'struct mm_walk *'     | `-RecoveryExpr 0x12f02d0b0 <col:32> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12f02d990 <line:15:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f02d870 <col:2> 'int ()' Function 0x12f02d7b8 'pte_unmap_unlock' 'int ()'     | |-BinaryOperator 0x12f02d950 <col:19, col:25> '<dependent type>' contains-errors '-'     | | |-RecoveryExpr 0x12f02d930 <col:19> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x12f02d8a8 <col:25> 'int' 1     | `-RecoveryExpr 0x12f02d970 <col:28> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12f02f728 <line:16:2, col:15> 'int'     | `-ImplicitCastExpr 0x12f02f710 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x12f02f6b8 <col:2> 'int ()' Function 0x12f02f600 'cond_resched' 'int ()'     `-ReturnStmt 0x12f02f768 <line:18:2, col:9>       `-IntegerLiteral 0x12f02f748 <col:9> 'int' 0 ","19916":"`-FunctionDecl 0x14400de58  line:1:14 invalid createArrayObject 'void *(const int *, int)' static   |-ParmVarDecl 0x14400dcf0 <col:32, col:53> col:53 invalid task 'const int *'   |-ParmVarDecl 0x14400dd70 <col:59, col:66> col:66 invalid elements 'int'   `-CompoundStmt 0x144027a90 <col:76, line:27:1>     |-IfStmt 0x14400e278 <line:5:5, line:6:16>     | |-BinaryOperator 0x14400e210 <line:5:9, col:14> 'int' contains-errors '=='     | | |-RecoveryExpr 0x14400e1d0 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14400e1f0 <col:14> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14400e268 <line:6:9, col:16>     |   `-RecoveryExpr 0x14400e248 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1440277a0 <line:8:5, line:14:5>     | |-BinaryOperator 0x14400e2d8 <line:8:9, col:20> 'int' contains-errors '>'     | | |-RecoveryExpr 0x14400e298 <col:9> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x14400e2b8 <col:20> 'int' 0     | `-CompoundStmt 0x144027788 <col:23, line:14:5>     |   `-IfStmt 0x144027768 <line:10:9, line:13:9>     |     |-BinaryOperator 0x144027558 <line:10:13, col:27> 'int' contains-errors '=='     |     | |-CXXDependentScopeMemberExpr 0x1440274f0 <col:13, col:16> '<dependent type>' contains-errors lvalue ->element     |     | | `-RecoveryExpr 0x1440274d0 <col:13> '<dependent type>' contains-errors lvalue     |     | `-RecoveryExpr 0x144027538 <col:27> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x144027748 <col:33, line:13:9>     |       |-CallExpr 0x1440276d8 <line:11:13, col:30> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x144027658 <col:13> 'int ()' Function 0x1440275a0 'freeReplyObject' 'int ()'     |       | `-RecoveryExpr 0x1440276b8 <col:29> '<dependent type>' contains-errors lvalue     |       `-ReturnStmt 0x144027738 <line:12:13, col:20>     |         `-RecoveryExpr 0x144027718 <col:20> '<dependent type>' contains-errors lvalue     `-IfStmt 0x144027a70 <line:18:5, line:25:5>       |-CXXDependentScopeMemberExpr 0x144027800 <line:18:9, col:15> '<dependent type>' contains-errors lvalue ->parent       | `-RecoveryExpr 0x1440277e0 <col:9> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x144027a60 <col:23, line:25:5> ","19269":"`-FunctionDecl 0x14a80de88  line:1:14 invalid PreluEval 'int (int *, int *)'   |-ParmVarDecl 0x14a80dd28 <col:24, col:39> col:39 invalid context 'int *'   |-ParmVarDecl 0x14a80dda8 <col:48, col:60> col:60 invalid node 'int *'   `-CompoundStmt 0x14a828fc0 <col:66, line:94:1>     |-DeclStmt 0x14a80e1d8 <line:2:3, col:57>     | `-VarDecl 0x14a80df58 <col:3, col:23> col:23 invalid input 'const int *'     |-DeclStmt 0x14a80e328 <line:3:3, col:57>     | `-VarDecl 0x14a80e208 <col:3, col:23> col:23 invalid alpha 'const int *'     |-DeclStmt 0x14a8276a8 <line:5:3, col:76>     | `-VarDecl 0x14a827588 <col:3, col:22> col:22 invalid data 'const int *'     `-SwitchStmt 0x14a827740 <line:6:3, line:93:3>       |-ImplicitCastExpr 0x14a827728 <line:6:11, col:18> '<dependent type>' contains-errors <LValueToRValue>       | `-CXXDependentScopeMemberExpr 0x14a8276e0 <col:11, col:18> '<dependent type>' contains-errors lvalue ->type       |   `-RecoveryExpr 0x14a8276c0 <col:11> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x14a828f78 <col:24, line:93:3>         |-CompoundStmt 0x14a827d80 <line:7:26, line:42:5>         | `-IfStmt 0x14a827d50 <line:8:7, line:40:7> has_else         |   |-BinaryOperator 0x14a827810 <line:8:11, col:26> 'int' contains-errors '=='         |   | |-RecoveryExpr 0x14a8277d0 <col:11> '<dependent type>' contains-errors lvalue         |   | `-RecoveryExpr 0x14a8277f0 <col:26> '<dependent type>' contains-errors lvalue         |   |-CompoundStmt 0x14a827c60 <col:45, line:26:7>         |   | |-RecoveryExpr 0x14a827860 <line:9:9> '<dependent type>' contains-errors lvalue         |   | `-IfStmt 0x14a827c30 <line:12:9, line:25:9> has_else         |   |   |-RecoveryExpr 0x14a827880 <line:12:13> '_Bool' contains-errors         |   |   |-CompoundStmt 0x14a8278a0 <col:29, line:18:9>         |   |   `-CompoundStmt 0x14a827c18 <col:16, line:25:9>         |   |     `-DeclStmt 0x14a827c00 <line:19:11, line:21:59>         |   |       `-VarDecl 0x14a8278c8 <line:19:11, col:21> col:21 flat_size 'const int'         |   `-CompoundStmt 0x14a827d38 <line:26:14, line:40:7>         |     `-IfStmt 0x14a827d08 <line:27:9, line:39:9> has_else         |       |-CXXDependentScopeMemberExpr 0x14a827ca0 <line:27:13, col:19> '<dependent type>' contains-errors lvalue ->requires_broadcast         |       | `-RecoveryExpr 0x14a827c80 <col:13> '<dependent type>' contains-errors lvalue         |       |-CompoundStmt 0x14a827ce8 <col:39, line:33:9>         |       `-CompoundStmt 0x14a827cf8 <col:16, line:39:9>         |-BreakStmt 0x14a827d98 <line:42:7>         |-CompoundStmt 0x14a8281b8 <line:43:24, line:64:5>         | `-IfStmt 0x14a828188 <line:52:7, line:62:7> has_else         |   |-CXXDependentScopeMemberExpr 0x14a828120 <line:52:11, col:17> '<dependent type>' contains-errors lvalue ->requires_broadcast         |   | `-RecoveryExpr 0x14a828100 <col:11> '<dependent type>' contains-errors lvalue         |   |-CompoundStmt 0x14a828168 <col:37, line:57:7>         |   `-CompoundStmt 0x14a828178 <col:14, line:62:7>         |-BreakStmt 0x14a8281d0 <line:64:7>         |-CompoundStmt 0x14a828bf0 <line:65:23, line:86:5>         | `-IfStmt 0x14a828bc0 <line:74:7, line:84:7> has_else         |   |-CXXDependentScopeMemberExpr 0x14a828b58 <line:74:11, col:17> '<dependent type>' contains-errors lvalue ->requires_broadcast         |   | `-RecoveryExpr 0x14a828b38 <col:11> '<dependent type>' contains-errors lvalue         |   |-CompoundStmt 0x14a828ba0 <col:37, line:79:7>         |   `-CompoundStmt 0x14a828bb0 <col:14, line:84:7>         |-BreakStmt 0x14a828c08 <line:86:7>         `-DefaultStmt 0x14a828f58 <line:87:5, line:91:41>           `-CallExpr 0x14a828f20 <line:88:7, line:91:41> '<dependent type>' contains-errors             |-DeclRefExpr 0x14a828cf0 <line:88:7> 'int ()' Function 0x14a828c38 'TF_LITE_KERNEL_LOG' 'int ()'             |-RecoveryExpr 0x14a828d10 <line:89:11> '<dependent type>' contains-errors lvalue             |-StringLiteral 0x14a828d70 <line:90:11> 'char[4]' lvalue \"STR\"             `-CallExpr 0x14a828ef8 <line:91:11, col:40> '<dependent type>' contains-errors               |-DeclRefExpr 0x14a828e70 <col:11> 'int ()' Function 0x14a828db8 'TfLiteTypeGetName' 'int ()'               `-CXXDependentScopeMemberExpr 0x14a828eb0 <col:29, col:36> '<dependent type>' contains-errors lvalue ->type                 `-RecoveryExpr 0x14a828e90 <col:29> '<dependent type>' contains-errors lvalue ","19846":"`-FunctionDecl 0x14a00df18  line:2:23 referenced invalid pdo_stmt_iter_get 'int *(int *, int *, int)'   |-ParmVarDecl 0x14a00dd28 <col:41, col:59> col:59 invalid ce 'int *'   |-ParmVarDecl 0x14a00dda8 <col:63, col:69> col:69 invalid object 'int *'   |-ParmVarDecl 0x14a00de28 <col:77, col:81> col:81 used by_ref 'int'   `-CompoundStmt 0x149922888 <line:3:1, line:26:18>     |-DeclStmt 0x14a00e1f8 <line:5:2, col:28>     | |-RecordDecl 0x14a00e008 <col:2, col:9> col:9 struct php_pdo_iterator     | `-VarDecl 0x14a00e178 <col:2, col:27> col:27 used I 'struct php_pdo_iterator *'     |-IfStmt 0x14a0278f8 <line:7:2, line:9:2>     | |-ImplicitCastExpr 0x14a00e230 <line:7:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x14a00e210 <col:6> 'int' lvalue ParmVar 0x14a00de28 'by_ref' 'int'     | `-CompoundStmt 0x14a0278e0 <col:14, line:9:2>     |   `-CallExpr 0x14a0278b0 <line:8:3, col:28> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14a00e3a0 <col:3> 'int ()' Function 0x14a00e2e8 'zend_error' 'int ()'     |     |-RecoveryExpr 0x14a027890 <col:14> '<dependent type>' contains-errors lvalue     |     `-StringLiteral 0x14a027840 <col:23> 'char[4]' lvalue \"STR\"     |-BinaryOperator 0x14a028040 <line:12:2, col:19> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14a027f50 <col:2, col:10> '<dependent type>' contains-errors lvalue .funcs     | | `-RecoveryExpr 0x14a027f28 <col:2, col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14a027ef0 <col:2> 'struct php_pdo_iterator *' lvalue Var 0x14a00e178 'I' 'struct php_pdo_iterator *'     | `-UnaryOperator 0x14a028028 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14a028008 <col:19> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14a028128 <line:13:2, col:17> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14a0280c0 <col:2, col:10> '<dependent type>' contains-errors lvalue .data     | | `-RecoveryExpr 0x14a028098 <col:2, col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14a028060 <col:2> 'struct php_pdo_iterator *' lvalue Var 0x14a00e178 'I' 'struct php_pdo_iterator *'     | `-DeclRefExpr 0x14a028108 <col:17> 'struct php_pdo_iterator *' lvalue Var 0x14a00e178 'I' 'struct php_pdo_iterator *'     |-BinaryOperator 0x14a028200 <line:14:2, col:12> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14a028180 <col:2, col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a028148 <col:2> 'struct php_pdo_iterator *' lvalue Var 0x14a00e178 'I' 'struct php_pdo_iterator *'     | `-RecoveryExpr 0x14a0281e0 <col:12> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14a028380 <line:17:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a028300 <col:2> 'int ()' Function 0x14a028248 'MAKE_STD_ZVAL' 'int ()'     | `-RecoveryExpr 0x14a028358 <col:16, col:19> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14a028320 <col:16> 'struct php_pdo_iterator *' lvalue Var 0x14a00e178 'I' 'struct php_pdo_iterator *'     |-IfStmt 0x1499227e0 <line:18:2, line:24:2>     | |-RecoveryExpr 0x14a0285a8 <line:18:6, line:19:38> '_Bool' contains-errors     | `-CompoundStmt 0x1499227c0 <col:41, line:24:2>     |   |-CallExpr 0x14a028718 <line:20:3, col:23> 'int'     |   | `-ImplicitCastExpr 0x14a028700 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x14a0286a8 <col:3> 'int ()' Function 0x14a0285f0 'PDO_HANDLE_STMT_ERR' 'int ()'     |   `-CallExpr 0x149922738 <line:22:3, col:27> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1499226b8 <col:3> 'int ()' Function 0x149922600 'FREE_ZVAL' 'int ()'     |     `-RecoveryExpr 0x149922710 <col:13, col:16> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x1499226d8 <col:13> 'struct php_pdo_iterator *' lvalue Var 0x14a00e178 'I' 'struct php_pdo_iterator *'     `-ReturnStmt 0x149922878 <line:26:2, col:13>       `-UnaryOperator 0x149922860 <col:9, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x149922838 <col:10, col:13> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x149922800 <col:10> 'struct php_pdo_iterator *' lvalue Var 0x14a00e178 'I' 'struct php_pdo_iterator *' ","19667":"`-FunctionDecl 0x12500ddf0  line:1:6 invalid close_connection 'void (int *)'   |-ParmVarDecl 0x12500dd28 <col:23, col:41> col:41 referenced invalid conn 'int *'   `-CompoundStmt 0x125027b68 <line:2:1, line:10:1>     |-BinaryOperator 0x12500df88 <line:3:5, col:19> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12500dee8 <col:5, col:11> '<dependent type>' contains-errors lvalue ->state     | | `-RecoveryExpr 0x12500dec0 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12500dea0 <col:5> 'int *' lvalue ParmVar 0x12500dd28 'conn' 'int *'     | `-RecoveryExpr 0x12500df68 <col:19> '<dependent type>' contains-errors lvalue     `-IfStmt 0x125027b38 <line:5:5, line:9:5> has_else       |-BinaryOperator 0x12500e360 <line:5:9, col:96> 'int' contains-errors '||'       | |-BinaryOperator 0x12500e340 <col:9, col:39> 'int' contains-errors '!='       | | |-CXXDependentScopeMemberExpr 0x12500e010 <col:9, col:22> '<dependent type>' contains-errors lvalue .buf_in_flight       | | | `-CXXDependentScopeMemberExpr 0x12500dfc8 <col:9, col:15> '<dependent type>' contains-errors lvalue ->_write       | | |   `-RecoveryExpr 0x12500dfa8 <col:9> '<dependent type>' contains-errors lvalue       | | `-RecoveryExpr 0x12500e320 <col:39> '<dependent type>' contains-errors lvalue       | `-CallExpr 0x12500e2d8 <col:47, col:96> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x12500e1f0 <col:47> 'int ()' Function 0x12500e138 'h2o_timeout_is_linked' 'int ()'       |   `-UnaryOperator 0x12500e2c0 <col:69, col:83> '<dependent type>' contains-errors prefix '&' cannot overflow       |     `-CXXDependentScopeMemberExpr 0x12500e278 <col:70, col:83> '<dependent type>' contains-errors lvalue .timeout_entry       |       `-CXXDependentScopeMemberExpr 0x12500e230 <col:70, col:76> '<dependent type>' contains-errors lvalue ->_write       |         `-RecoveryExpr 0x12500e210 <col:70> '<dependent type>' contains-errors lvalue       |-CompoundStmt 0x12500e380 <col:99, line:7:5>       `-CompoundStmt 0x125027b20 <col:12, line:9:5>         `-CallExpr 0x125027af8 <line:8:9, col:34> '<dependent type>' contains-errors           |-DeclRefExpr 0x125027ab8 <col:9> 'int ()' Function 0x125027a00 'close_connection_now' 'int ()'           `-RecoveryExpr 0x125027ad8 <col:30> '<dependent type>' contains-errors lvalue ","19076":"`-FunctionDecl 0x148128750  line:1:6 x25_kill_by_neigh 'void (struct x25_neigh *)'   |-ParmVarDecl 0x148128648 <col:24, col:42> col:42 used nb 'struct x25_neigh *'   `-CompoundStmt 0x1481417c8 <line:2:1, line:15:1>     |-DeclStmt 0x148140c38 <line:3:2, col:16>     | |-RecordDecl 0x148140a48 <col:2, col:9> col:9 struct sock     | `-VarDecl 0x148140bb8 <col:2, col:15> col:15 used s 'struct sock *'     |-CallExpr 0x148140e30 <line:5:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x148140d80 <col:2> 'int ()' Function 0x148140cc8 'write_lock_bh' 'int ()'     | `-UnaryOperator 0x148140e18 <col:16, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x148140df8 <col:17> '<dependent type>' contains-errors lvalue     |-CallExpr 0x148141010 <line:7:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x148140f38 <col:2> 'int ()' Function 0x148140e80 'sk_for_each' 'int ()'     | |-DeclRefExpr 0x148140f58 <col:14> 'struct sock *' lvalue Var 0x148140bb8 's' 'struct sock *'     | `-UnaryOperator 0x148140ff8 <col:17, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x148140fd8 <col:18> '<dependent type>' contains-errors lvalue     |-IfStmt 0x148141468 <line:8:3, line:9:39>     | |-BinaryOperator 0x148141230 <line:8:7, col:31> 'int' contains-errors '=='     | | |-RecoveryExpr 0x1481411e8 <col:7, col:18> '<dependent type>' contains-errors lvalue     | | | `-CallExpr 0x1481411a8 <col:7, col:15> 'int'     | | |   |-ImplicitCastExpr 0x148141190 <col:7> 'int (*)()' <FunctionToPointerDecay>     | | |   | `-DeclRefExpr 0x148141120 <col:7> 'int ()' Function 0x148141068 'x25_sk' 'int ()'     | | |   `-ImplicitCastExpr 0x1481411d0 <col:14> 'struct sock *' <LValueToRValue>     | | |     `-DeclRefExpr 0x148141140 <col:14> 'struct sock *' lvalue Var 0x148140bb8 's' 'struct sock *'     | | `-DeclRefExpr 0x148141210 <col:31> 'struct x25_neigh *' lvalue ParmVar 0x148128648 'nb' 'struct x25_neigh *'     | `-CallExpr 0x148141428 <line:9:4, col:39> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x148141330 <col:4> 'int ()' Function 0x148141278 'x25_disconnect' 'int ()'     |   |-DeclRefExpr 0x148141350 <col:19> 'struct sock *' lvalue Var 0x148140bb8 's' 'struct sock *'     |   |-RecoveryExpr 0x148141408 <col:22> '<dependent type>' contains-errors lvalue     |   |-IntegerLiteral 0x148141388 <col:35> 'int' 0     |   `-IntegerLiteral 0x1481413a8 <col:38> 'int' 0     |-CallExpr 0x148141618 <line:11:2, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x148141568 <col:2> 'int ()' Function 0x1481414b0 'write_unlock_bh' 'int ()'     | `-UnaryOperator 0x148141600 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1481415e0 <col:19> '<dependent type>' contains-errors lvalue     `-CallExpr 0x1481417a0 <line:14:2, col:34> '<dependent type>' contains-errors       |-DeclRefExpr 0x148141720 <col:2> 'int ()' Function 0x148141668 'x25_clear_forward_by_dev' 'int ()'       `-RecoveryExpr 0x148141778 <col:27, col:31> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x148141740 <col:27> 'struct x25_neigh *' lvalue ParmVar 0x148128648 'nb' 'struct x25_neigh *' ","19495":"`-FunctionDecl 0x12100df50  line:1:13 invalid virtser_port_device_plug 'void (int *, int *, int **)' static   |-ParmVarDecl 0x12100dd28 <col:38, col:54> col:54 invalid hotplug_dev 'int *'   |-ParmVarDecl 0x12100dda8 <line:2:38, col:51> col:51 invalid dev 'int *'   |-ParmVarDecl 0x12100de60 <col:56, col:64> col:64 invalid errp 'int **'   `-CompoundStmt 0x1209227a0 <line:3:1, line:14:1>     `-CallExpr 0x120922778 <line:13:5, col:52> '<dependent type>' contains-errors       |-DeclRefExpr 0x120922610 <col:5> 'int ()' Function 0x12100e358 'virtio_notify_config' 'int ()'       `-CallExpr 0x120922750 <col:26, col:51> '<dependent type>' contains-errors         |-DeclRefExpr 0x120922710 <col:26> 'int ()' Function 0x120922658 'VIRTIO_DEVICE' 'int ()'         `-RecoveryExpr 0x120922730 <col:40> '<dependent type>' contains-errors lvalue ","19702":"`-FunctionDecl 0x141826728  line:1:12 put_v4l2_event32 'int (struct v4l2_event *, struct v4l2_event32)' static   |-ParmVarDecl 0x14180e248 <col:29, col:48> col:48 used kp 'struct v4l2_event *'   |-ParmVarDecl 0x141826600 <col:52, col:72> col:72 invalid __user 'struct v4l2_event32'   `-CompoundStmt 0x141827578 <line:2:1, line:14:1>     `-ReturnStmt 0x141827568 <line:13:2, col:9>       `-IntegerLiteral 0x141827548 <col:9> 'int' 0 ","20137":"`-FunctionDecl 0x12d128750  line:1:13 atl2_init_flash_opcode 'void (struct atl2_hw *)' static   |-ParmVarDecl 0x12d128648 <col:36, col:52> col:52 used hw 'struct atl2_hw *'   `-CompoundStmt 0x12d141448 <line:2:1, line:23:1>     `-IfStmt 0x12d140d58 <line:3:2, line:4:22>       |-BinaryOperator 0x12d140c98 <line:3:6, col:48> 'int' contains-errors '>='       | |-RecoveryExpr 0x12d140a80 <col:6, col:10> '<dependent type>' contains-errors lvalue       | | `-DeclRefExpr 0x12d140a48 <col:6> 'struct atl2_hw *' lvalue ParmVar 0x12d128648 'hw' 'struct atl2_hw *'       | `-CallExpr 0x12d140c70 <col:26, col:48> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x12d140bd0 <col:26> 'int ()' Function 0x12d140b18 'ARRAY_SIZE' 'int ()'       |   `-RecoveryExpr 0x12d140c50 <col:37> '<dependent type>' contains-errors lvalue       `-BinaryOperator 0x12d140d38 <line:4:3, col:22> '<dependent type>' contains-errors '='         |-RecoveryExpr 0x12d140cf0 <col:3, col:7> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x12d140cb8 <col:3> 'struct atl2_hw *' lvalue ParmVar 0x12d128648 'hw' 'struct atl2_hw *'         `-IntegerLiteral 0x12d140d18 <col:22> 'int' 0 ","19698":"`-FunctionDecl 0x1381281c8  line:1:1 rename_buffer 'int (char *)'   |-ParmVarDecl 0x1381280f0 <col:15, col:23> col:23 used new_fname 'char *'   `-CompoundStmt 0x138141470 <line:2:1, line:41:1>     |-DeclStmt 0x138128460 <line:3:5, col:36>     | |-VarDecl 0x1381282d8 <col:5, col:13> col:13 used fname 'char *'     | |-VarDecl 0x138128358 <col:5, col:21> col:21 used sfname 'char *'     | `-VarDecl 0x1381283d8 <col:5, col:30> col:30 used xfname 'char *'     |-CallExpr 0x138128740 <line:7:5, col:63> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1381285c0 <col:5> 'int ()' Function 0x138128508 'apply_autocmds' 'int ()'     | |-RecoveryExpr 0x1381286a0 <col:20> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x1381286c0 <col:38> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x1381286e0 <col:44> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x138128700 <col:50> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x138128720 <col:57> '<dependent type>' contains-errors lvalue     |-IfStmt 0x138140a88 <line:9:5, line:10:9>     | |-BinaryOperator 0x138140a20 <line:9:9, col:16> 'int' contains-errors '!='     | | |-RecoveryExpr 0x1381287d8 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x138140a00 <col:16> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x138140a78 <line:10:2, col:9>     |   `-RecoveryExpr 0x138140a58 <col:9> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x138140bb0 <line:16:5, col:21> 'char *' contains-errors '='     | |-DeclRefExpr 0x138140aa8 <col:5> 'char *' lvalue Var 0x1381282d8 'fname' 'char *'     | `-CXXDependentScopeMemberExpr 0x138140b68 <col:13, col:21> '<dependent type>' contains-errors lvalue ->b_ffname     |   `-RecoveryExpr 0x138140b48 <col:13> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x138140cd8 <line:17:5, col:22> 'char *' contains-errors '='     | |-DeclRefExpr 0x138140bd0 <col:5> 'char *' lvalue Var 0x138128358 'sfname' 'char *'     | `-CXXDependentScopeMemberExpr 0x138140c90 <col:14, col:22> '<dependent type>' contains-errors lvalue ->b_sfname     |   `-RecoveryExpr 0x138140c70 <col:14> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x138140e00 <line:18:5, col:22> 'char *' contains-errors '='     | |-DeclRefExpr 0x138140cf8 <col:5> 'char *' lvalue Var 0x1381283d8 'xfname' 'char *'     | `-CXXDependentScopeMemberExpr 0x138140db8 <col:14, col:22> '<dependent type>' contains-errors lvalue ->b_fname     |   `-RecoveryExpr 0x138140d98 <col:14> '<dependent type>' contains-errors lvalue     |-IfStmt 0x138140fb0 <line:21:5, line:26:5>     | |-RecoveryExpr 0x138140f40 <line:21:9, col:52> '_Bool' contains-errors     | `-CompoundStmt 0x138140fa0 <line:22:5, line:26:5>     |-IfStmt 0x1381411f0 <line:28:5, line:33:5>     | |-RecoveryExpr 0x138141040 <line:28:9, col:38> '_Bool' contains-errors     | `-CompoundStmt 0x1381411e0 <line:29:5, line:33:5>     |-CallExpr 0x138141378 <line:34:5, col:19> 'int'     | |-ImplicitCastExpr 0x138141360 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1381412f0 <col:5> 'int ()' Function 0x138141238 'vim_free' 'int ()'     | `-ImplicitCastExpr 0x1381413a0 <col:14> 'char *' <LValueToRValue>     |   `-DeclRefExpr 0x138141310 <col:14> 'char *' lvalue Var 0x1381282d8 'fname' 'char *'     `-CallExpr 0x138141410 <line:35:5, col:20> 'int'       |-ImplicitCastExpr 0x1381413f8 <col:5> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x1381413b8 <col:5> 'int ()' Function 0x138141238 'vim_free' 'int ()'       `-ImplicitCastExpr 0x138141438 <col:14> 'char *' <LValueToRValue>         `-DeclRefExpr 0x1381413d8 <col:14> 'char *' lvalue Var 0x138128358 'sfname' 'char *' ","19401":"`-FunctionDecl 0x12480df50  line:1:13 test_syslog_parse_identifier 'void (const char *, const char *, const char *, int)' static   |-ParmVarDecl 0x12480dcd8 <col:42, col:54> col:54 used str 'const char *'   |-ParmVarDecl 0x12480dd58 <line:2:42, col:54> col:54 used ident 'const char *'   |-ParmVarDecl 0x12480ddd8 <col:61, col:72> col:72 used pid 'const char *'   |-ParmVarDecl 0x12480de58 <col:77, col:81> col:81 used ret 'int'   `-CompoundStmt 0x124123580 <col:86, line:12:1>     |-DeclStmt 0x12480e118 <line:3:9, col:30>     | `-VarDecl 0x12480e078 <col:9, col:27> col:21 used buf 'const char *' cinit     |   `-ImplicitCastExpr 0x12480e100 <col:27> 'const char *' <LValueToRValue>     |     `-DeclRefExpr 0x12480e0e0 <col:27> 'const char *' lvalue ParmVar 0x12480dcd8 'str' 'const char *'     |-DeclStmt 0x12480e1c8 <line:5:9, col:17>     | `-VarDecl 0x12480e160 <col:9, col:13> col:13 used ret2 'int'     |-BinaryOperator 0x124122d50 <line:7:9, col:60> 'int' '='     | |-DeclRefExpr 0x12480e1e0 <col:9> 'int' lvalue Var 0x12480e160 'ret2' 'int'     | `-CallExpr 0x124122d18 <col:16, col:60> 'int'     |   |-ImplicitCastExpr 0x124122d00 <col:16> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12480e310 <col:16> 'int ()' Function 0x12480e258 'syslog_parse_identifier' 'int ()'     |   |-UnaryOperator 0x12480e380 <col:40, col:41> 'const char **' prefix '&' cannot overflow     |   | `-DeclRefExpr 0x12480e330 <col:41> 'const char *' lvalue Var 0x12480e078 'buf' 'const char *'     |   |-UnaryOperator 0x124122c78 <col:46, col:47> 'const char **' prefix '&' cannot overflow     |   | `-DeclRefExpr 0x124122c58 <col:47> 'const char *' lvalue ParmVar 0x12480dd58 'ident' 'const char *'     |   `-UnaryOperator 0x124122cb0 <col:55, col:56> 'const char **' prefix '&' cannot overflow     |     `-DeclRefExpr 0x124122c90 <col:56> 'const char *' lvalue ParmVar 0x12480ddd8 'pid' 'const char *'     |-CallExpr 0x124122f18 <line:9:9, col:30> 'int'     | |-ImplicitCastExpr 0x124122f00 <col:9> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x124122e50 <col:9> 'int ()' Function 0x124122d98 'assert_se' 'int ()'     | `-BinaryOperator 0x124122ee0 <col:19, col:26> 'int' '=='     |   |-ImplicitCastExpr 0x124122eb0 <col:19> 'int' <LValueToRValue>     |   | `-DeclRefExpr 0x124122e70 <col:19> 'int' lvalue ParmVar 0x12480de58 'ret' 'int'     |   `-ImplicitCastExpr 0x124122ec8 <col:26> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x124122e90 <col:26> 'int' lvalue Var 0x12480e160 'ret2' 'int'     |-CallExpr 0x1241232a8 <line:10:9, col:62> 'int'     | |-ImplicitCastExpr 0x124123290 <col:9> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x124122f40 <col:9> 'int ()' Function 0x124122d98 'assert_se' 'int ()'     | `-BinaryOperator 0x124123270 <col:19, col:61> 'int' '||'     |   |-BinaryOperator 0x1241231b8 <col:19, col:28> 'int' '=='     |   | |-ImplicitCastExpr 0x124123188 <col:19> 'const char *' <LValueToRValue>     |   | | `-DeclRefExpr 0x124122f60 <col:19> 'const char *' lvalue ParmVar 0x12480dd58 'ident' 'const char *'     |   | `-ImplicitCastExpr 0x1241231a0 <col:28> 'const char *' <LValueToRValue>     |   |   `-DeclRefExpr 0x124123168 <col:28> 'const char *' lvalue ParmVar 0x12480dd58 'ident' 'const char *'     |   `-CallExpr 0x124123210 <col:38, col:61> 'int'     |     |-ImplicitCastExpr 0x1241231f8 <col:38> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x124123098 <col:38> 'int ()' Function 0x124122fe0 'streq_ptr' 'int ()'     |     |-ImplicitCastExpr 0x124123240 <col:48> 'const char *' <LValueToRValue>     |     | `-DeclRefExpr 0x1241230b8 <col:48> 'const char *' lvalue ParmVar 0x12480dd58 'ident' 'const char *'     |     `-ImplicitCastExpr 0x124123258 <col:55> 'const char *' <LValueToRValue>     |       `-DeclRefExpr 0x1241231d8 <col:55> 'const char *' lvalue ParmVar 0x12480dd58 'ident' 'const char *'     `-CallExpr 0x124123558 <line:11:9, col:54> 'int'       |-ImplicitCastExpr 0x124123540 <col:9> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x1241232d0 <col:9> 'int ()' Function 0x124122d98 'assert_se' 'int ()'       `-BinaryOperator 0x124123520 <col:19, col:53> 'int' '||'         |-BinaryOperator 0x124123468 <col:19, col:26> 'int' '=='         | |-ImplicitCastExpr 0x124123438 <col:19> 'const char *' <LValueToRValue>         | | `-DeclRefExpr 0x1241232f0 <col:19> 'const char *' lvalue ParmVar 0x12480ddd8 'pid' 'const char *'         | `-ImplicitCastExpr 0x124123450 <col:26> 'const char *' <LValueToRValue>         |   `-DeclRefExpr 0x124123418 <col:26> 'const char *' lvalue ParmVar 0x12480ddd8 'pid' 'const char *'         `-CallExpr 0x1241234c0 <col:34, col:53> 'int'           |-ImplicitCastExpr 0x1241234a8 <col:34> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x124123348 <col:34> 'int ()' Function 0x124122fe0 'streq_ptr' 'int ()'           |-ImplicitCastExpr 0x1241234f0 <col:44> 'const char *' <LValueToRValue>           | `-DeclRefExpr 0x124123368 <col:44> 'const char *' lvalue ParmVar 0x12480ddd8 'pid' 'const char *'           `-ImplicitCastExpr 0x124123508 <col:49> 'const char *' <LValueToRValue>             `-DeclRefExpr 0x124123488 <col:49> 'const char *' lvalue ParmVar 0x12480ddd8 'pid' 'const char *' ","19340":"`-FunctionDecl 0x1211283a8  line:1:1 invalid create_tree 'int (int *, int *, int *, int)'   |-ParmVarDecl 0x121128128 <col:14, col:24> col:24 invalid dfa 'int *'   |-ParmVarDecl 0x1211281a8 <col:29, col:41> col:41 invalid left 'int *'   |-ParmVarDecl 0x121128228 <col:47, col:59> col:59 invalid right 'int *'   |-ParmVarDecl 0x1211282a8 <line:2:7, col:23> col:23 invalid type 'int'   `-CompoundStmt 0x121128768 <line:3:1, line:7:1>     `-ReturnStmt 0x121128758 <line:6:3, col:49>       `-CallExpr 0x121128718 <col:10, col:49> '<dependent type>' contains-errors         |-DeclRefExpr 0x1211285f0 <col:10> 'int ()' Function 0x121128538 'create_token_tree' 'int ()'         |-RecoveryExpr 0x121128610 <col:29> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x121128630 <col:34> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x121128650 <col:40> '<dependent type>' contains-errors lvalue         `-UnaryOperator 0x121128700 <col:47, col:48> '<dependent type>' contains-errors prefix '&' cannot overflow           `-RecoveryExpr 0x1211286e0 <col:48> '<dependent type>' contains-errors lvalue ","19193":"`-FunctionDecl 0x12a00bb98  col:2 implicit used memmove 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x12a00bc98 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x12a00bd00 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x12a00bd68 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x12a00bc40 <<invalid sloc>> Implicit 884 ","20075":"`-FunctionDecl 0x14a1281c0  line:1:13 invalid SerializeSpotLight 'void (int)' static   |-ParmVarDecl 0x14a1280f0 <col:32, <invalid sloc>> col:42 invalid 'int'   `-CompoundStmt 0x14a141f10 <col:58, line:8:1>     |-CallExpr 0x14a128588 <line:2:3, col:56> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a1283d0 <col:3> 'int ()' Function 0x14a128318 'SerializeNumberProperty' 'int ()'     | |-StringLiteral 0x14a128430 <col:27> 'char[4]' lvalue \"STR\"     | |-CXXDependentScopeMemberExpr 0x14a128520 <col:34, col:39> '<dependent type>' contains-errors lvalue .innerConeAngle     | | `-RecoveryExpr 0x14a128500 <col:34> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14a128568 <col:55> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14a128738 <line:3:3, col:56> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a1285c0 <col:3> 'int ()' Function 0x14a128318 'SerializeNumberProperty' 'int ()'     | |-StringLiteral 0x14a1285e0 <col:27> 'char[4]' lvalue \"STR\"     | |-CXXDependentScopeMemberExpr 0x14a1286d0 <col:34, col:39> '<dependent type>' contains-errors lvalue .outerConeAngle     | | `-RecoveryExpr 0x14a1286b0 <col:34> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14a128718 <col:55> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14a141a08 <line:4:3, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a1418b8 <col:3> 'int ()' Function 0x14a141800 'SerializeExtensionMap' 'int ()'     | |-CXXDependentScopeMemberExpr 0x14a1419a0 <col:25, col:30> '<dependent type>' contains-errors lvalue .extensions     | | `-RecoveryExpr 0x14a141980 <col:25> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14a1419e8 <col:42> '<dependent type>' contains-errors lvalue     `-IfStmt 0x14a141ef0 <line:5:3, line:7:3>       |-BinaryOperator 0x14a141c28 <line:5:7, col:29> 'int' contains-errors '!='       | |-CallExpr 0x14a141be8 <col:7, col:24> '<dependent type>' contains-errors       | | `-CXXDependentScopeMemberExpr 0x14a141ba0 <col:7, col:19> '<dependent type>' contains-errors lvalue .Type       | |   `-CXXDependentScopeMemberExpr 0x14a141b58 <col:7, col:12> '<dependent type>' contains-errors lvalue .extras       | |     `-RecoveryExpr 0x14a141b38 <col:7> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x14a141c08 <col:29> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x14a141ed8 <col:40, line:7:3>         `-CallExpr 0x14a141ea0 <line:6:5, col:41> '<dependent type>' contains-errors           |-DeclRefExpr 0x14a141d28 <col:5> 'int ()' Function 0x14a141c70 'SerializeValue' 'int ()'           |-StringLiteral 0x14a141d48 <col:20> 'char[4]' lvalue \"STR\"           |-CXXDependentScopeMemberExpr 0x14a141e38 <col:27, col:32> '<dependent type>' contains-errors lvalue .extras           | `-RecoveryExpr 0x14a141e18 <col:27> '<dependent type>' contains-errors lvalue           `-RecoveryExpr 0x14a141e80 <col:40> '<dependent type>' contains-errors lvalue ","20186":"`-FunctionDecl 0x1419282e8  line:1:1 aff_check_string 'int (char *, char *, char *)'   |-ParmVarDecl 0x1419280f0 <col:18, col:26> col:26 used spinval 'char *'   |-ParmVarDecl 0x141928170 <col:35, col:43> col:43 used affval 'char *'   |-ParmVarDecl 0x1419281f0 <col:51, col:57> col:57 used name 'char *'   `-CompoundStmt 0x142008538 <line:2:1, line:5:1>     `-IfStmt 0x142008518 <line:3:5, line:4:21>       |-BinaryOperator 0x1419287a0 <line:3:9, col:55> 'int' contains-errors '&&'       | |-BinaryOperator 0x1419286e8 <col:9, col:20> 'int' contains-errors '!='       | | |-DeclRefExpr 0x1419283f0 <col:9> 'char *' lvalue ParmVar 0x1419280f0 'spinval' 'char *'       | | `-RecoveryExpr 0x1419286c8 <col:20> '<dependent type>' contains-errors lvalue       | `-BinaryOperator 0x141928780 <col:28, col:55> 'int' '!='       |   |-CallExpr 0x141928720 <col:28, col:50> 'int'       |   | |-ImplicitCastExpr 0x141928708 <col:28> 'int (*)()' <FunctionToPointerDecay>       |   | | `-DeclRefExpr 0x141928560 <col:28> 'int ()' Function 0x1419284a8 'STRCMP' 'int ()'       |   | |-ImplicitCastExpr 0x141928750 <col:35> 'char *' <LValueToRValue>       |   | | `-DeclRefExpr 0x141928580 <col:35> 'char *' lvalue ParmVar 0x1419280f0 'spinval' 'char *'       |   | `-ImplicitCastExpr 0x141928768 <col:44> 'char *' <LValueToRValue>       |   |   `-DeclRefExpr 0x1419285a0 <col:44> 'char *' lvalue ParmVar 0x141928170 'affval' 'char *'       |   `-IntegerLiteral 0x141928668 <col:55> 'int' 0       `-CallExpr 0x1420084d0 <line:4:2, col:21> 'int'         |-ImplicitCastExpr 0x1420084b8 <col:2> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x1420082b8 <col:2> 'int ()' Function 0x142008200 'smsg' 'int ()'         |-CallExpr 0x142008458 <col:7, col:14> 'int'         | |-ImplicitCastExpr 0x142008440 <col:7> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x1420083b8 <col:7> 'int ()' Function 0x142008300 '_' 'int ()'         | `-ImplicitCastExpr 0x142008480 <col:9> 'char *' <ArrayToPointerDecay>         |   `-StringLiteral 0x142008420 <col:9> 'char[4]' lvalue \"STR\"         `-ImplicitCastExpr 0x142008500 <col:17> 'char *' <LValueToRValue>           `-DeclRefExpr 0x142008498 <col:17> 'char *' lvalue ParmVar 0x1419281f0 'name' 'char *' ","20209":"`-FunctionDecl 0x12b03d1d8  line:1:12 tm_cvsx_set 'int (struct task_struct *, const struct user_regset *, unsigned int, unsigned int, const void *, int)' static   |-ParmVarDecl 0x12b01f848 <col:24, col:44> col:44 used target 'struct task_struct *'   |-ParmVarDecl 0x12b03ce28 <line:2:4, col:30> col:30 regset 'const struct user_regset *'   |-ParmVarDecl 0x12b03cea8 <line:3:4, col:17> col:17 used pos 'unsigned int'   |-ParmVarDecl 0x12b03cf28 <col:22, col:35> col:35 used count 'unsigned int'   |-ParmVarDecl 0x12b03cfd8 <line:4:4, col:16> col:16 used kbuf 'const void *'   |-ParmVarDecl 0x12b03d050 <col:22, col:33> col:33 __user 'int'   `-CompoundStmt 0x12b0403b0 <line:5:1, line:31:1>     |-DeclStmt 0x12b03d428 <line:7:2, col:12>     | |-VarDecl 0x12b03d328 <col:2, col:6> col:6 used ret 'int'     | `-VarDecl 0x12b03d3a8 <col:2, col:11> col:11 used i 'int'     |-IfStmt 0x12b03d6d0 <line:9:2, line:10:11>     | |-UnaryOperator 0x12b03d610 <line:9:6, col:33> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x12b03d5e8 <col:7, col:33> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12b03d550 <col:7> 'int ()' Function 0x12b03d498 'cpu_has_feature' 'int ()'     | |   `-RecoveryExpr 0x12b03d5c8 <col:23> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12b03d6c0 <line:10:3, col:11>     |   `-UnaryOperator 0x12b03d6a8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12b03d690 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12b03d670 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12b03d9c8 <line:12:2, line:13:11>     | |-UnaryOperator 0x12b03d908 <line:12:6, col:45> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x12b03d8e0 <col:7, col:45> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12b03d7d0 <col:7> 'int ()' Function 0x12b03d718 'MSR_TM_ACTIVE' 'int ()'     | |   `-CXXDependentScopeMemberExpr 0x12b03d898 <col:21, col:42> '<dependent type>' contains-errors lvalue ->msr     | |     `-CXXDependentScopeMemberExpr 0x12b03d850 <col:21, col:36> '<dependent type>' contains-errors lvalue .regs     | |       `-RecoveryExpr 0x12b03d828 <col:21, col:29> '<dependent type>' contains-errors lvalue     | |         `-DeclRefExpr 0x12b03d7f0 <col:21> 'struct task_struct *' lvalue ParmVar 0x12b01f848 'target' 'struct task_struct *'     | `-ReturnStmt 0x12b03d9b8 <line:13:3, col:11>     |   `-UnaryOperator 0x12b03d9a0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12b03d988 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12b03d968 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12b03db58 <line:16:2, col:31> 'int'     | |-ImplicitCastExpr 0x12b03db40 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12b03dac8 <col:2> 'int ()' Function 0x12b03da10 'flush_tmregs_to_thread' 'int ()'     | `-ImplicitCastExpr 0x12b03db80 <col:25> 'struct task_struct *' <LValueToRValue>     |   `-DeclRefExpr 0x12b03dae8 <col:25> 'struct task_struct *' lvalue ParmVar 0x12b01f848 'target' 'struct task_struct *'     |-CallExpr 0x12b03dcd0 <line:17:2, col:27> 'int'     | |-ImplicitCastExpr 0x12b03dcb8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12b03dc78 <col:2> 'int ()' Function 0x12b03dbc0 'flush_fp_to_thread' 'int ()'     | `-ImplicitCastExpr 0x12b03dcf8 <col:21> 'struct task_struct *' <LValueToRValue>     |   `-DeclRefExpr 0x12b03dc98 <col:21> 'struct task_struct *' lvalue ParmVar 0x12b01f848 'target' 'struct task_struct *'     |-CallExpr 0x12b03f658 <line:18:2, col:32> 'int'     | |-ImplicitCastExpr 0x12b03f640 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12b03f600 <col:2> 'int ()' Function 0x12b03dd38 'flush_altivec_to_thread' 'int ()'     | `-ImplicitCastExpr 0x12b03f680 <col:26> 'struct task_struct *' <LValueToRValue>     |   `-DeclRefExpr 0x12b03f620 <col:26> 'struct task_struct *' lvalue ParmVar 0x12b01f848 'target' 'struct task_struct *'     |-CallExpr 0x12b03f7d0 <line:19:2, col:28> 'int'     | |-ImplicitCastExpr 0x12b03f7b8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12b03f778 <col:2> 'int ()' Function 0x12b03f6c0 'flush_vsx_to_thread' 'int ()'     | `-ImplicitCastExpr 0x12b03f7f8 <col:22> 'struct task_struct *' <LValueToRValue>     |   `-DeclRefExpr 0x12b03f798 <col:22> 'struct task_struct *' lvalue ParmVar 0x12b01f848 'target' 'struct task_struct *'     |-BinaryOperator 0x12b040068 <line:24:2, line:25:33> 'int' '='     | |-DeclRefExpr 0x12b03fb78 <line:24:2> 'int' lvalue Var 0x12b03d328 'ret' 'int'     | `-CallExpr 0x12b03fff8 <col:8, line:25:33> 'int'     |   |-ImplicitCastExpr 0x12b03ffe0 <line:24:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12b03fc78 <col:8> 'int ()' Function 0x12b03fbc0 'user_regset_copyin' 'int ()'     |   |-UnaryOperator 0x12b03fcf0 <col:27, col:28> 'unsigned int *' prefix '&' cannot overflow     |   | `-DeclRefExpr 0x12b03fc98 <col:28> 'unsigned int' lvalue ParmVar 0x12b03cea8 'pos' 'unsigned int'     |   |-UnaryOperator 0x12b03fd28 <col:33, col:34> 'unsigned int *' prefix '&' cannot overflow     |   | `-DeclRefExpr 0x12b03fd08 <col:34> 'unsigned int' lvalue ParmVar 0x12b03cf28 'count' 'unsigned int'     |   |-UnaryOperator 0x12b03fd90 <col:41, col:42> 'const void **' prefix '&' cannot overflow     |   | `-DeclRefExpr 0x12b03fd40 <col:42> 'const void *' lvalue ParmVar 0x12b03cfd8 'kbuf' 'const void *'     |   |-UnaryOperator 0x12b03ff38 <col:48, col:49> 'const void **' prefix '&' cannot overflow     |   | `-DeclRefExpr 0x12b03ff18 <col:49> 'const void *' lvalue ParmVar 0x12b03cfd8 'kbuf' 'const void *'     |   |-ImplicitCastExpr 0x12b040050 <line:25:6> 'const void *' <LValueToRValue>     |   | `-DeclRefExpr 0x12b03ff50 <col:6> 'const void *' lvalue ParmVar 0x12b03cfd8 'kbuf' 'const void *'     |   |-IntegerLiteral 0x12b03fdf0 <col:11> 'int' 0     |   `-BinaryOperator 0x12b03ffc0 <col:14, col:32> 'unsigned long' '*'     |     |-ImplicitCastExpr 0x12b03ffa8 <col:14> 'unsigned long' <IntegralCast>     |     | `-IntegerLiteral 0x12b03fe10 <col:14> 'int' 32     |     `-UnaryExprOrTypeTraitExpr 0x12b03ff88 <col:19, col:32> 'unsigned long' sizeof 'double'     `-ReturnStmt 0x12b0403a0 <line:30:2, col:9>       `-ImplicitCastExpr 0x12b040388 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x12b040368 <col:9> 'int' lvalue Var 0x12b03d328 'ret' 'int' ","19329":"`-FunctionDecl 0x155009f48  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x15500a048 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x15500a0b0 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x15500a118 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x155009ff0 <<invalid sloc>> Implicit 900 ","19498":"`-FunctionDecl 0x1229281a8  line:1:28 get32 'unsigned int (char *)' static inline   |-ParmVarDecl 0x1229280d8 <col:34, col:40> col:40 used ptr 'char *'   `-CompoundStmt 0x122941a28 <line:2:1, line:6:1>     |-DeclStmt 0x1229283c8 <line:3:2, col:43>     | `-VarDecl 0x1229282e8 <col:2, col:40> col:17 used tmp 'unsigned char *' cinit     |   `-CStyleCastExpr 0x1229283a0 <col:23, col:40> 'unsigned char *' <BitCast>     |     `-ImplicitCastExpr 0x122928388 <col:40> 'char *' <LValueToRValue> part_of_explicit_cast     |       `-DeclRefExpr 0x122928350 <col:40> 'char *' lvalue ParmVar 0x1229280d8 'ptr' 'char *'     `-ReturnStmt 0x122941a18 <line:5:2, col:64>       `-ImplicitCastExpr 0x122941a00 <col:9, col:64> 'unsigned int' <IntegralCast>         `-BinaryOperator 0x1229287e0 <col:9, col:64> 'int' '|'           |-BinaryOperator 0x1229286b8 <col:9, col:47> 'int' '|'           | |-BinaryOperator 0x122928590 <col:9, col:30> 'int' '|'           | | |-ImplicitCastExpr 0x122928578 <col:9, col:14> 'int' <IntegralCast>           | | | `-ImplicitCastExpr 0x122928560 <col:9, col:14> 'unsigned char' <LValueToRValue>           | | |   `-ArraySubscriptExpr 0x122928438 <col:9, col:14> 'unsigned char' lvalue           | | |     |-ImplicitCastExpr 0x122928420 <col:9> 'unsigned char *' <LValueToRValue>           | | |     | `-DeclRefExpr 0x1229283e0 <col:9> 'unsigned char *' lvalue Var 0x1229282e8 'tmp' 'unsigned char *'           | | |     `-IntegerLiteral 0x122928400 <col:13> 'int' 0           | | `-ParenExpr 0x122928540 <col:18, col:30> 'int'           | |   `-BinaryOperator 0x122928520 <col:19, col:29> 'int' '<<'           | |     |-ImplicitCastExpr 0x122928508 <col:19, col:24> 'int' <IntegralCast>           | |     | `-ImplicitCastExpr 0x1229284f0 <col:19, col:24> 'unsigned char' <LValueToRValue>           | |     |   `-ArraySubscriptExpr 0x1229284b0 <col:19, col:24> 'unsigned char' lvalue           | |     |     |-ImplicitCastExpr 0x122928498 <col:19> 'unsigned char *' <LValueToRValue>           | |     |     | `-DeclRefExpr 0x122928458 <col:19> 'unsigned char *' lvalue Var 0x1229282e8 'tmp' 'unsigned char *'           | |     |     `-IntegerLiteral 0x122928478 <col:23> 'int' 1           | |     `-IntegerLiteral 0x1229284d0 <col:29> 'int' 8           | `-ParenExpr 0x122928698 <col:34, col:47> 'int'           |   `-BinaryOperator 0x122928678 <col:35, col:45> 'int' '<<'           |     |-ImplicitCastExpr 0x122928660 <col:35, col:40> 'int' <IntegralCast>           |     | `-ImplicitCastExpr 0x122928648 <col:35, col:40> 'unsigned char' <LValueToRValue>           |     |   `-ArraySubscriptExpr 0x122928608 <col:35, col:40> 'unsigned char' lvalue           |     |     |-ImplicitCastExpr 0x1229285f0 <col:35> 'unsigned char *' <LValueToRValue>           |     |     | `-DeclRefExpr 0x1229285b0 <col:35> 'unsigned char *' lvalue Var 0x1229282e8 'tmp' 'unsigned char *'           |     |     `-IntegerLiteral 0x1229285d0 <col:39> 'int' 2           |     `-IntegerLiteral 0x122928628 <col:45> 'int' 16           `-ParenExpr 0x1229287c0 <col:51, col:64> 'int'             `-BinaryOperator 0x1229287a0 <col:52, col:62> 'int' '<<'               |-ImplicitCastExpr 0x122928788 <col:52, col:57> 'int' <IntegralCast>               | `-ImplicitCastExpr 0x122928770 <col:52, col:57> 'unsigned char' <LValueToRValue>               |   `-ArraySubscriptExpr 0x122928730 <col:52, col:57> 'unsigned char' lvalue               |     |-ImplicitCastExpr 0x122928718 <col:52> 'unsigned char *' <LValueToRValue>               |     | `-DeclRefExpr 0x1229286d8 <col:52> 'unsigned char *' lvalue Var 0x1229282e8 'tmp' 'unsigned char *'               |     `-IntegerLiteral 0x1229286f8 <col:56> 'int' 3               `-IntegerLiteral 0x122928750 <col:62> 'int' 24 ","20072":"`-FunctionDecl 0x120904118  line:1:16 invalid trace_exit_cp 'int *(int *, int, void *)' static   |-ParmVarDecl 0x120903f28 <col:30, col:41> col:41 invalid L 'int *'   |-ParmVarDecl 0x120903fa8 <col:44, col:58> col:58 invalid dummy 'int'   |-ParmVarDecl 0x120904028 <col:65, col:71> col:71 ud 'void *'   `-CompoundStmt 0x12091da08 <line:2:1, line:10:1>     |-BinaryOperator 0x120904448 <line:4:3, col:32> '<dependent type>' contains-errors '='     | |-CallExpr 0x1209043e8 <col:3, col:27> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x120904360 <col:3> 'int ()' Function 0x1209042a8 'cframe_errfunc' 'int ()'     | | `-CXXDependentScopeMemberExpr 0x1209043a0 <col:18, col:21> '<dependent type>' contains-errors lvalue ->cframe     | |   `-RecoveryExpr 0x120904380 <col:18> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x120904430 <col:31, col:32> 'int' prefix '-'     |   `-IntegerLiteral 0x120904410 <col:32> 'int' 1     |-CallExpr 0x12091d998 <line:8:3, col:15> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12091d958 <col:3> 'int ()' Function 0x12091d8a0 'UNUSED' 'int ()'     | `-RecoveryExpr 0x12091d978 <col:10> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12091d9f8 <line:9:3, col:10>       `-RecoveryExpr 0x12091d9d8 <col:10> '<dependent type>' contains-errors lvalue ","19556":"`-FunctionDecl 0x12b928758  line:1:5 kvm_arch_vcpu_setup 'int (struct kvm_vcpu *)'   |-ParmVarDecl 0x12b928648 <col:25, col:42> col:42 used vcpu 'struct kvm_vcpu *'   `-CompoundStmt 0x12b9414b0 <line:2:1, line:15:1>     |-DeclStmt 0x12b940ad0 <line:3:2, col:7>     | `-VarDecl 0x12b940a68 <col:2, col:6> col:6 used r 'int'     |-BinaryOperator 0x12b940bf8 <line:5:2, col:37> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12b940b90 <col:2, col:24> '<dependent type>' contains-errors lvalue .have_fixed     | | `-CXXDependentScopeMemberExpr 0x12b940b48 <col:2, col:13> '<dependent type>' contains-errors lvalue .mtrr_state     | |   `-RecoveryExpr 0x12b940b20 <col:2, col:8> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x12b940ae8 <col:2> 'struct kvm_vcpu *' lvalue ParmVar 0x12b928648 'vcpu' 'struct kvm_vcpu *'     | `-IntegerLiteral 0x12b940bd8 <col:37> 'int' 1     |-BinaryOperator 0x12b940e28 <line:6:2, col:20> 'int' '='     | |-DeclRefExpr 0x12b940c18 <col:2> 'int' lvalue Var 0x12b940a68 'r' 'int'     | `-CallExpr 0x12b940de8 <col:6, col:20> 'int'     |   |-ImplicitCastExpr 0x12b940dd0 <col:6> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12b940d60 <col:6> 'int ()' Function 0x12b940ca8 'vcpu_load' 'int ()'     |   `-ImplicitCastExpr 0x12b940e10 <col:16> 'struct kvm_vcpu *' <LValueToRValue>     |     `-DeclRefExpr 0x12b940d80 <col:16> 'struct kvm_vcpu *' lvalue ParmVar 0x12b928648 'vcpu' 'struct kvm_vcpu *'     |-IfStmt 0x12b940ec8 <line:7:2, line:8:10>     | |-ImplicitCastExpr 0x12b940e68 <line:7:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x12b940e48 <col:6> 'int' lvalue Var 0x12b940a68 'r' 'int'     | `-ReturnStmt 0x12b940eb8 <line:8:3, col:10>     |   `-ImplicitCastExpr 0x12b940ea0 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x12b940e80 <col:10> 'int' lvalue Var 0x12b940a68 'r' 'int'     |-BinaryOperator 0x12b941080 <line:9:2, col:30> 'int' '='     | |-DeclRefExpr 0x12b940ee8 <col:2> 'int' lvalue Var 0x12b940a68 'r' 'int'     | `-CallExpr 0x12b941040 <col:6, col:30> 'int'     |   |-ImplicitCastExpr 0x12b941028 <col:6> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12b940fe8 <col:6> 'int ()' Function 0x12b940f30 'kvm_arch_vcpu_reset' 'int ()'     |   `-ImplicitCastExpr 0x12b941068 <col:26> 'struct kvm_vcpu *' <LValueToRValue>     |     `-DeclRefExpr 0x12b941008 <col:26> 'struct kvm_vcpu *' lvalue ParmVar 0x12b928648 'vcpu' 'struct kvm_vcpu *'     |-IfStmt 0x12b9412d0 <line:10:2, line:11:25>     | |-BinaryOperator 0x12b9410f8 <line:10:6, col:11> 'int' '=='     | | |-ImplicitCastExpr 0x12b9410e0 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x12b9410a0 <col:6> 'int' lvalue Var 0x12b940a68 'r' 'int'     | | `-IntegerLiteral 0x12b9410c0 <col:11> 'int' 0     | `-BinaryOperator 0x12b9412b0 <line:11:3, col:25> 'int' '='     |   |-DeclRefExpr 0x12b941118 <col:3> 'int' lvalue Var 0x12b940a68 'r' 'int'     |   `-CallExpr 0x12b941270 <col:7, col:25> 'int'     |     |-ImplicitCastExpr 0x12b941258 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x12b941218 <col:7> 'int ()' Function 0x12b941160 'kvm_mmu_setup' 'int ()'     |     `-ImplicitCastExpr 0x12b941298 <col:21> 'struct kvm_vcpu *' <LValueToRValue>     |       `-DeclRefExpr 0x12b941238 <col:21> 'struct kvm_vcpu *' lvalue ParmVar 0x12b928648 'vcpu' 'struct kvm_vcpu *'     |-CallExpr 0x12b941428 <line:12:2, col:15> 'int'     | |-ImplicitCastExpr 0x12b941410 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12b9413d0 <col:2> 'int ()' Function 0x12b941318 'vcpu_put' 'int ()'     | `-ImplicitCastExpr 0x12b941450 <col:11> 'struct kvm_vcpu *' <LValueToRValue>     |   `-DeclRefExpr 0x12b9413f0 <col:11> 'struct kvm_vcpu *' lvalue ParmVar 0x12b928648 'vcpu' 'struct kvm_vcpu *'     `-ReturnStmt 0x12b9414a0 <line:14:2, col:9>       `-ImplicitCastExpr 0x12b941488 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x12b941468 <col:9> 'int' lvalue Var 0x12b940a68 'r' 'int' ","20212":"`-FunctionDecl 0x138128310  line:1:13 invalid ehci_set_fetch_addr 'void (int *, int, int)' static   |-ParmVarDecl 0x138128128 <col:33, col:44> col:44 referenced invalid s 'int *'   |-ParmVarDecl 0x1381281a8 <col:47, col:51> col:51 used async 'int'   |-ParmVarDecl 0x138128228 <col:58, col:67> col:67 invalid addr 'int'   `-CompoundStmt 0x138128608 <line:2:1, line:8:1>     `-IfStmt 0x1381285d8 <line:3:5, line:7:5> has_else       |-ImplicitCastExpr 0x1381283f0 <line:3:9> 'int' <LValueToRValue>       | `-DeclRefExpr 0x1381283d0 <col:9> 'int' lvalue ParmVar 0x1381281a8 'async' 'int'       |-CompoundStmt 0x1381284d8 <col:16, line:5:5>       | `-BinaryOperator 0x1381284b8 <line:4:9, col:27> '<dependent type>' contains-errors '='       |   |-CXXDependentScopeMemberExpr 0x138128450 <col:9, col:12> '<dependent type>' contains-errors lvalue ->a_fetch_addr       |   | `-RecoveryExpr 0x138128428 <col:9> '<dependent type>' contains-errors lvalue       |   |   `-DeclRefExpr 0x138128408 <col:9> 'int *' lvalue ParmVar 0x138128128 's' 'int *'       |   `-RecoveryExpr 0x138128498 <col:27> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x1381285c0 <line:5:12, line:7:5>         `-BinaryOperator 0x1381285a0 <line:6:9, col:27> '<dependent type>' contains-errors '='           |-CXXDependentScopeMemberExpr 0x138128538 <col:9, col:12> '<dependent type>' contains-errors lvalue ->p_fetch_addr           | `-RecoveryExpr 0x138128510 <col:9> '<dependent type>' contains-errors lvalue           |   `-DeclRefExpr 0x1381284f0 <col:9> 'int *' lvalue ParmVar 0x138128128 's' 'int *'           `-RecoveryExpr 0x138128580 <col:27> '<dependent type>' contains-errors lvalue ","19253":"`-FunctionDecl 0x124009988  line:1:1 invalid glue 'int (int (*)(), int)'   |-ParmVarDecl 0x122928180 <col:6, <invalid sloc>> col:6 invalid glue 'int (*)()'   |-ParmVarDecl 0x122928200 <col:53> col:53 _16 'int'   `-CompoundStmt 0x12400a1f0 <line:5:1, line:26:1>     |-DeclStmt 0x124009b58 <line:6:5, col:12>     | |-VarDecl 0x124009a58 <col:5, col:9> col:9 used x 'int'     | `-VarDecl 0x124009ad8 <col:5, col:11> col:11 used y 'int'     `-ForStmt 0x12400a1b8 <line:10:5, line:25:5>       |-BinaryOperator 0x124009be0 <line:10:10, col:14> 'int' '='       | |-DeclRefExpr 0x124009ba0 <col:10> 'int' lvalue Var 0x124009ad8 'y' 'int'       | `-IntegerLiteral 0x124009bc0 <col:14> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x124009c78 <col:17, col:21> 'int' contains-errors '<'       | |-DeclRefExpr 0x124009c00 <col:17> 'int' lvalue Var 0x124009ad8 'y' 'int'       | `-RecoveryExpr 0x124009c58 <col:21> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x124009cb8 <col:32, col:33> 'int' postfix '++'       | `-DeclRefExpr 0x124009c98 <col:32> 'int' lvalue Var 0x124009ad8 'y' 'int'       `-CompoundStmt 0x12400a1a0 <col:37, line:25:5>         `-ForStmt 0x12400a168 <line:11:9, line:22:9>           |-BinaryOperator 0x124009d10 <line:11:14, col:18> 'int' '='           | |-DeclRefExpr 0x124009cd0 <col:14> 'int' lvalue Var 0x124009a58 'x' 'int'           | `-IntegerLiteral 0x124009cf0 <col:18> 'int' 0           |-<<<NULL>>>           |-BinaryOperator 0x124009da8 <col:21, col:25> 'int' contains-errors '<'           | |-DeclRefExpr 0x124009d30 <col:21> 'int' lvalue Var 0x124009a58 'x' 'int'           | `-RecoveryExpr 0x124009d88 <col:25> '<dependent type>' contains-errors lvalue           |-CompoundAssignOperator 0x124009e08 <col:35, col:38> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'           | |-DeclRefExpr 0x124009dc8 <col:35> 'int' lvalue Var 0x124009a58 'x' 'int'           | `-IntegerLiteral 0x124009de8 <col:38> 'int' 2           `-CompoundStmt 0x12400a150 <col:41, line:22:9>             `-IfStmt 0x12400a0f0 <line:16:6, line:19:6>               |-RecoveryExpr 0x12400a0a0 <line:16:10, col:59> '_Bool' contains-errors               `-CompoundStmt 0x12400a0e0 <col:62, line:19:6> ","19761":"`-FunctionDecl 0x11f129598  col:15 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x11f129698 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x11f129640 <<invalid sloc>> Implicit 902 ","19997":"`-FunctionDecl 0x12e142690  col:5 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x12e142790 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x12f008200 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x12f008268 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x12e142738 <<invalid sloc>> Implicit 882 ","19855":"`-FunctionDecl 0x14b9418d0  line:1:13 invalid ch345_broken_sysex_input 'void (struct snd_usb_midi_in_endpoint *, int *, int)' static   |-ParmVarDecl 0x14b928648 <col:38, col:71> col:71 used ep 'struct snd_usb_midi_in_endpoint *'   |-ParmVarDecl 0x14b928718 <line:2:10, col:19> col:19 invalid buffer 'int *'   |-ParmVarDecl 0x14b928798 <col:27, col:31> col:31 used buffer_length 'int'   `-CompoundStmt 0x14b9430a0 <line:3:1, line:25:1>     |-DeclStmt 0x14b941b30 <line:4:2, col:29>     | |-VarDecl 0x14b9419a8 <col:2, col:15> col:15 used i 'unsigned int'     | |-VarDecl 0x14b941a28 <col:2, col:18> col:18 used cin 'unsigned int'     | `-VarDecl 0x14b941aa8 <col:2, col:23> col:23 used length 'unsigned int'     `-ForStmt 0x14b943068 <line:6:2, line:24:2>       |-BinaryOperator 0x14b941ba0 <line:6:7, col:11> 'unsigned int' '='       | |-DeclRefExpr 0x14b941b48 <col:7> 'unsigned int' lvalue Var 0x14b9419a8 'i' 'unsigned int'       | `-ImplicitCastExpr 0x14b941b88 <col:11> 'unsigned int' <IntegralCast>       |   `-IntegerLiteral 0x14b941b68 <col:11> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x14b941ca0 <col:14, col:22> 'int' '<'       | |-BinaryOperator 0x14b941c30 <col:14, col:18> 'unsigned int' '+'       | | |-ImplicitCastExpr 0x14b941c00 <col:14> 'unsigned int' <LValueToRValue>       | | | `-DeclRefExpr 0x14b941bc0 <col:14> 'unsigned int' lvalue Var 0x14b9419a8 'i' 'unsigned int'       | | `-ImplicitCastExpr 0x14b941c18 <col:18> 'unsigned int' <IntegralCast>       | |   `-IntegerLiteral 0x14b941be0 <col:18> 'int' 3       | `-ImplicitCastExpr 0x14b941c88 <col:22> 'unsigned int' <IntegralCast>       |   `-ImplicitCastExpr 0x14b941c70 <col:22> 'int' <LValueToRValue>       |     `-DeclRefExpr 0x14b941c50 <col:22> 'int' lvalue ParmVar 0x14b928798 'buffer_length' 'int'       |-CompoundAssignOperator 0x14b941d18 <col:37, col:42> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'       | |-DeclRefExpr 0x14b941cc0 <col:37> 'unsigned int' lvalue Var 0x14b9419a8 'i' 'unsigned int'       | `-ImplicitCastExpr 0x14b941d00 <col:42> 'unsigned int' <IntegralCast>       |   `-IntegerLiteral 0x14b941ce0 <col:42> 'int' 4       `-CompoundStmt 0x14b943028 <col:45, line:24:2>         |-IfStmt 0x14b941ed0 <line:7:3, line:8:4>         | |-BinaryOperator 0x14b941ea8 <line:7:7, col:29> 'int' contains-errors '&&'         | | |-BinaryOperator 0x14b941df8 <col:7, col:20> 'int' contains-errors '=='         | | | |-ArraySubscriptExpr 0x14b941db8 <col:7, col:15> '<dependent type>' contains-errors lvalue         | | | | |-ImplicitCastExpr 0x14b941d88 <col:7> '<dependent type>' contains-errors <LValueToRValue>         | | | | | `-RecoveryExpr 0x14b941d48 <col:7> '<dependent type>' contains-errors lvalue         | | | | `-ImplicitCastExpr 0x14b941da0 <col:14> 'unsigned int' <LValueToRValue>         | | | |   `-DeclRefExpr 0x14b941d68 <col:14> 'unsigned int' lvalue Var 0x14b9419a8 'i' 'unsigned int'         | | | `-IntegerLiteral 0x14b941dd8 <col:20> 'int' 0         | | `-BinaryOperator 0x14b941e88 <col:25, col:29> 'int' '>'         | |   |-ImplicitCastExpr 0x14b941e58 <col:25> 'unsigned int' <LValueToRValue>         | |   | `-DeclRefExpr 0x14b941e18 <col:25> 'unsigned int' lvalue Var 0x14b9419a8 'i' 'unsigned int'         | |   `-ImplicitCastExpr 0x14b941e70 <col:29> 'unsigned int' <IntegralCast>         | |     `-IntegerLiteral 0x14b941e38 <col:29> 'int' 0         | `-BreakStmt 0x14b941ec8 <line:8:4>         |-BinaryOperator 0x14b941fe0 <line:9:3, col:21> 'unsigned int' contains-errors '='         | |-DeclRefExpr 0x14b941ef0 <col:3> 'unsigned int' lvalue Var 0x14b941a28 'cin' 'unsigned int'         | `-BinaryOperator 0x14b941fc0 <col:9, col:21> '<dependent type>' contains-errors '&'         |   |-ArraySubscriptExpr 0x14b941f80 <col:9, col:17> '<dependent type>' contains-errors lvalue         |   | |-ImplicitCastExpr 0x14b941f50 <col:9> '<dependent type>' contains-errors <LValueToRValue>         |   | | `-RecoveryExpr 0x14b941f10 <col:9> '<dependent type>' contains-errors lvalue         |   | `-ImplicitCastExpr 0x14b941f68 <col:16> 'unsigned int' <LValueToRValue>         |   |   `-DeclRefExpr 0x14b941f30 <col:16> 'unsigned int' lvalue Var 0x14b9419a8 'i' 'unsigned int'         |   `-IntegerLiteral 0x14b941fa0 <col:21> 'int' 15         |-IfStmt 0x14b942428 <line:10:3, line:13:10>         | |-BinaryOperator 0x14b942390 <line:10:7, line:12:48> 'int' contains-errors '&&'         | | |-BinaryOperator 0x14b942100 <line:10:7, line:11:18> 'int' contains-errors '&&'         | | | |-RecoveryExpr 0x14b942038 <line:10:7, col:11> '<dependent type>' contains-errors lvalue         | | | | `-DeclRefExpr 0x14b942000 <col:7> 'struct snd_usb_midi_in_endpoint *' lvalue ParmVar 0x14b928648 'ep' 'struct snd_usb_midi_in_endpoint *'         | | | `-BinaryOperator 0x14b9420e0 <line:11:7, col:18> 'int' contains-errors '=='         | | |   |-DeclRefExpr 0x14b942060 <col:7> 'unsigned int' lvalue Var 0x14b941a28 'cin' 'unsigned int'         | | |   `-RecoveryExpr 0x14b9420b8 <col:14, col:18> '<dependent type>' contains-errors lvalue         | | |     `-DeclRefExpr 0x14b942080 <col:14> 'struct snd_usb_midi_in_endpoint *' lvalue ParmVar 0x14b928648 'ep' 'struct snd_usb_midi_in_endpoint *'         | | `-BinaryOperator 0x14b942370 <line:12:7, col:48> 'int' contains-errors '=='         | |   |-ParenExpr 0x14b942330 <col:7, col:43> '<dependent type>' contains-errors         | |   | `-BinaryOperator 0x14b942310 <col:8, col:39> '<dependent type>' contains-errors '&'         | |   |   |-ArraySubscriptExpr 0x14b9422d0 <col:8, col:35> '<dependent type>' contains-errors lvalue         | |   |   | |-ImplicitCastExpr 0x14b9422b8 <col:8> '<dependent type>' contains-errors <LValueToRValue>         | |   |   | | `-RecoveryExpr 0x14b942120 <col:8> '<dependent type>' contains-errors lvalue         | |   |   | `-BinaryOperator 0x14b942298 <col:15, col:34> 'unsigned int' '+'         | |   |   |   |-BinaryOperator 0x14b9421b0 <col:15, col:19> 'unsigned int' '+'         | |   |   |   | |-ImplicitCastExpr 0x14b942180 <col:15> 'unsigned int' <LValueToRValue>         | |   |   |   | | `-DeclRefExpr 0x14b942140 <col:15> 'unsigned int' lvalue Var 0x14b9419a8 'i' 'unsigned int'         | |   |   |   | `-ImplicitCastExpr 0x14b942198 <col:19> 'unsigned int' <IntegralCast>         | |   |   |   |   `-IntegerLiteral 0x14b942160 <col:19> 'int' 1         | |   |   |   `-ImplicitCastExpr 0x14b942280 <col:23, col:34> 'unsigned int' <IntegralCast>         | |   |   |     `-ParenExpr 0x14b942260 <col:23, col:34> 'int'         | |   |   |       `-BinaryOperator 0x14b942240 <col:24, col:31> 'int' '=='         | |   |   |         |-ImplicitCastExpr 0x14b942210 <col:24> 'unsigned int' <LValueToRValue>         | |   |   |         | `-DeclRefExpr 0x14b9421d0 <col:24> 'unsigned int' lvalue Var 0x14b941a28 'cin' 'unsigned int'         | |   |   |         `-ImplicitCastExpr 0x14b942228 <col:31> 'unsigned int' <IntegralCast>         | |   |   |           `-IntegerLiteral 0x14b9421f0 <col:31> 'int' 6         | |   |   `-IntegerLiteral 0x14b9422f0 <col:39> 'int' 128         | |   `-IntegerLiteral 0x14b942350 <col:48> 'int' 0         | `-BinaryOperator 0x14b942408 <line:13:4, col:10> 'unsigned int' '='         |   |-DeclRefExpr 0x14b9423b0 <col:4> 'unsigned int' lvalue Var 0x14b941a28 'cin' 'unsigned int'         |   `-ImplicitCastExpr 0x14b9423f0 <col:10> 'unsigned int' <IntegralCast>         |     `-IntegerLiteral 0x14b9423d0 <col:10> 'int' 4         |-CallExpr 0x14b942780 <line:20:3, col:55> '<dependent type>' contains-errors         | |-DeclRefExpr 0x14b942600 <col:3> 'int ()' Function 0x14b942548 'snd_usbmidi_input_data' 'int ()'         | |-DeclRefExpr 0x14b942620 <col:26> 'struct snd_usb_midi_in_endpoint *' lvalue ParmVar 0x14b928648 'ep' 'struct snd_usb_midi_in_endpoint *'         | |-IntegerLiteral 0x14b942640 <col:30> 'int' 0         | |-UnaryOperator 0x14b942748 <col:33, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow         | | `-ArraySubscriptExpr 0x14b942728 <col:34, col:46> '<dependent type>' contains-errors lvalue         | |   |-ImplicitCastExpr 0x14b942710 <col:34> '<dependent type>' contains-errors <LValueToRValue>         | |   | `-RecoveryExpr 0x14b942660 <col:34> '<dependent type>' contains-errors lvalue         | |   `-BinaryOperator 0x14b9426f0 <col:41, col:45> 'unsigned int' '+'         | |     |-ImplicitCastExpr 0x14b9426c0 <col:41> 'unsigned int' <LValueToRValue>         | |     | `-DeclRefExpr 0x14b942680 <col:41> 'unsigned int' lvalue Var 0x14b9419a8 'i' 'unsigned int'         | |     `-ImplicitCastExpr 0x14b9426d8 <col:45> 'unsigned int' <IntegralCast>         | |       `-IntegerLiteral 0x14b9426a0 <col:45> 'int' 1         | `-DeclRefExpr 0x14b942760 <col:49> 'unsigned int' lvalue Var 0x14b941aa8 'length' 'unsigned int'         |-BinaryOperator 0x14b942eb8 <line:21:3, col:25> '<dependent type>' contains-errors '='         | |-RecoveryExpr 0x14b942e00 <col:3, col:7> '<dependent type>' contains-errors lvalue         | | `-DeclRefExpr 0x14b9427c0 <col:3> 'struct snd_usb_midi_in_endpoint *' lvalue ParmVar 0x14b928648 'ep' 'struct snd_usb_midi_in_endpoint *'         | `-BinaryOperator 0x14b942e98 <col:18, col:25> 'int' '=='         |   |-ImplicitCastExpr 0x14b942e68 <col:18> 'unsigned int' <LValueToRValue>         |   | `-DeclRefExpr 0x14b942e28 <col:18> 'unsigned int' lvalue Var 0x14b941a28 'cin' 'unsigned int'         |   `-ImplicitCastExpr 0x14b942e80 <col:25> 'unsigned int' <IntegralCast>         |     `-IntegerLiteral 0x14b942e48 <col:25> 'int' 4         `-IfStmt 0x14b943008 <line:22:3, line:23:19>           |-UnaryOperator 0x14b942f50 <line:22:7, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow           | `-ImplicitCastExpr 0x14b942f38 <col:8, col:12> '<dependent type>' contains-errors <LValueToRValue>           |   `-RecoveryExpr 0x14b942f10 <col:8, col:12> '<dependent type>' contains-errors lvalue           |     `-DeclRefExpr 0x14b942ed8 <col:8> 'struct snd_usb_midi_in_endpoint *' lvalue ParmVar 0x14b928648 'ep' 'struct snd_usb_midi_in_endpoint *'           `-BinaryOperator 0x14b942fe8 <line:23:4, col:19> '<dependent type>' contains-errors '='             |-RecoveryExpr 0x14b942fa0 <col:4, col:8> '<dependent type>' contains-errors lvalue             | `-DeclRefExpr 0x14b942f68 <col:4> 'struct snd_usb_midi_in_endpoint *' lvalue ParmVar 0x14b928648 'ep' 'struct snd_usb_midi_in_endpoint *'             `-DeclRefExpr 0x14b942fc8 <col:19> 'unsigned int' lvalue Var 0x14b941a28 'cin' 'unsigned int' ","19542":"`-FunctionDecl 0x14c80e350  line:1:13 __vmx_load_host_state 'void (struct vcpu_vmx *)' static   |-ParmVarDecl 0x14c80e248 <col:35, col:52> col:52 used vmx 'struct vcpu_vmx *'   `-CompoundStmt 0x14c8289a0 <line:2:1, line:32:1>     |-DeclStmt 0x14c8266c8 <line:3:2, col:21>     | `-VarDecl 0x14c826660 <col:2, col:16> col:16 used flags 'unsigned long'     |-IfStmt 0x14c8267c8 <line:5:2, line:6:3>     | |-UnaryOperator 0x14c8267a0 <line:5:6, col:23> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14c826788 <col:7, col:23> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x14c826740 <col:7, col:23> '<dependent type>' contains-errors lvalue .loaded     | |     `-RecoveryExpr 0x14c826718 <col:7, col:12> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x14c8266e0 <col:7> 'struct vcpu_vmx *' lvalue ParmVar 0x14c80e248 'vmx' 'struct vcpu_vmx *'     | `-ReturnStmt 0x14c8267b8 <line:6:3>     |-UnaryOperator 0x14c8268d8 <line:8:2, col:19> '<dependent type>' contains-errors prefix '++' cannot overflow     | `-CXXDependentScopeMemberExpr 0x14c826890 <col:4, col:19> '<dependent type>' contains-errors lvalue .host_state_reload     |   `-CXXDependentScopeMemberExpr 0x14c826848 <col:4, col:14> '<dependent type>' contains-errors lvalue .stat     |     `-RecoveryExpr 0x14c826820 <col:4, col:9> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14c8267e8 <col:4> 'struct vcpu_vmx *' lvalue ParmVar 0x14c80e248 'vmx' 'struct vcpu_vmx *'     |-BinaryOperator 0x14c8269b8 <line:9:2, col:27> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14c826950 <col:2, col:18> '<dependent type>' contains-errors lvalue .loaded     | | `-RecoveryExpr 0x14c826928 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14c8268f0 <col:2> 'struct vcpu_vmx *' lvalue ParmVar 0x14c80e248 'vmx' 'struct vcpu_vmx *'     | `-IntegerLiteral 0x14c826998 <col:27> 'int' 0     |-IfStmt 0x14c826ca0 <line:10:2, line:11:37>     | |-CXXDependentScopeMemberExpr 0x14c826a38 <line:10:6, col:22> '<dependent type>' contains-errors lvalue .fs_reload_needed     | | `-RecoveryExpr 0x14c826a10 <col:6, col:11> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14c8269d8 <col:6> 'struct vcpu_vmx *' lvalue ParmVar 0x14c80e248 'vmx' 'struct vcpu_vmx *'     | `-CallExpr 0x14c826c78 <line:11:3, col:37> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14c826bb0 <col:3> 'int ()' Function 0x14c826af8 'kvm_load_fs' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x14c826c30 <col:15, col:31> '<dependent type>' contains-errors lvalue .fs_sel     |     `-RecoveryExpr 0x14c826c08 <col:15, col:20> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14c826bd0 <col:15> 'struct vcpu_vmx *' lvalue ParmVar 0x14c80e248 'vmx' 'struct vcpu_vmx *'     |-IfStmt 0x14c827460 <line:12:2, line:21:2>     | |-CXXDependentScopeMemberExpr 0x14c826d20 <line:12:6, col:22> '<dependent type>' contains-errors lvalue .gs_ldt_reload_needed     | | `-RecoveryExpr 0x14c826cf8 <col:6, col:11> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14c826cc0 <col:6> 'struct vcpu_vmx *' lvalue ParmVar 0x14c80e248 'vmx' 'struct vcpu_vmx *'     | `-CompoundStmt 0x14c827430 <col:44, line:21:2>     |   |-CallExpr 0x14c826f10 <line:13:3, col:39> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14c826e48 <col:3> 'int ()' Function 0x14c826d90 'kvm_load_ldt' 'int ()'     |   | `-CXXDependentScopeMemberExpr 0x14c826ec8 <col:16, col:32> '<dependent type>' contains-errors lvalue .ldt_sel     |   |   `-RecoveryExpr 0x14c826ea0 <col:16, col:21> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x14c826e68 <col:16> 'struct vcpu_vmx *' lvalue ParmVar 0x14c80e248 'vmx' 'struct vcpu_vmx *'     |   |-CallExpr 0x14c8270a8 <line:15:3, col:23> 'int'     |   | |-ImplicitCastExpr 0x14c827090 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14c827018 <col:3> 'int ()' Function 0x14c826f60 'local_irq_save' 'int ()'     |   | `-ImplicitCastExpr 0x14c8270d0 <col:18> 'unsigned long' <LValueToRValue>     |   |   `-DeclRefExpr 0x14c827038 <col:18> 'unsigned long' lvalue Var 0x14c826660 'flags' 'unsigned long'     |   |-CallExpr 0x14c827290 <line:16:3, col:37> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14c8271c8 <col:3> 'int ()' Function 0x14c827110 'kvm_load_gs' 'int ()'     |   | `-CXXDependentScopeMemberExpr 0x14c827248 <col:15, col:31> '<dependent type>' contains-errors lvalue .gs_sel     |   |   `-RecoveryExpr 0x14c827220 <col:15, col:20> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x14c8271e8 <col:15> 'struct vcpu_vmx *' lvalue ParmVar 0x14c80e248 'vmx' 'struct vcpu_vmx *'     |   `-CallExpr 0x14c8273f0 <line:20:3, col:26> 'int'     |     |-ImplicitCastExpr 0x14c8273d8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14c827398 <col:3> 'int ()' Function 0x14c8272e0 'local_irq_restore' 'int ()'     |     `-ImplicitCastExpr 0x14c827418 <col:21> 'unsigned long' <LValueToRValue>     |       `-DeclRefExpr 0x14c8273b8 <col:21> 'unsigned long' lvalue Var 0x14c826660 'flags' 'unsigned long'     |-CallExpr 0x14c827598 <line:22:2, col:13> 'int'     | `-ImplicitCastExpr 0x14c827580 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x14c827560 <col:2> 'int ()' Function 0x14c8274a8 'reload_tss' 'int ()'     `-IfStmt 0x14c828780 <line:29:2, line:30:8>       |-BinaryOperator 0x14c828628 <line:29:6, col:38> '<dependent type>' contains-errors '&'       | |-RecoveryExpr 0x14c8285e0 <col:6, col:29> '<dependent type>' contains-errors lvalue       | | `-CallExpr 0x14c8285c0 <col:6, col:26> 'int'       | |   `-ImplicitCastExpr 0x14c8285a8 <col:6> 'int (*)()' <FunctionToPointerDecay>       | |     `-DeclRefExpr 0x14c8284b8 <col:6> 'int ()' Function 0x14c828400 'current_thread_info' 'int ()'       | `-RecoveryExpr 0x14c828608 <col:38> '<dependent type>' contains-errors lvalue       `-CallExpr 0x14c828760 <line:30:3, col:8> 'int'         `-ImplicitCastExpr 0x14c828748 <col:3> 'int (*)()' <FunctionToPointerDecay>           `-DeclRefExpr 0x14c828728 <col:3> 'int ()' Function 0x14c828670 'clts' 'int ()' ","19980":"`-FunctionDecl 0x131026a88  line:1:12 invalid nr_recvmsg 'int (struct kiocb *, struct socket *, struct msghdr *, int, int)' static   |-ParmVarDecl 0x13100e248 <col:23, col:37> col:37 iocb 'struct kiocb *'   |-ParmVarDecl 0x131026628 <col:43, col:58> col:58 used sock 'struct socket *'   |-ParmVarDecl 0x1310267f8 <line:2:9, col:24> col:24 used msg 'struct msghdr *'   |-ParmVarDecl 0x131026890 <col:29, col:36> col:36 invalid size 'int'   |-ParmVarDecl 0x131026910 <col:42, col:46> col:46 used flags 'int'   `-CompoundStmt 0x13102f4f8 <line:3:1, line:51:1>     |-DeclStmt 0x131026da8 <line:4:2, col:28>     | |-RecordDecl 0x131026b58 <col:2, col:9> col:9 struct sock     | `-VarDecl 0x131026cc8 <col:2, col:26> col:15 used sk 'struct sock *' cinit     |   `-RecoveryExpr 0x131026d68 <col:20, col:26> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x131026d30 <col:20> 'struct socket *' lvalue ParmVar 0x131026628 'sock' 'struct socket *'     |-DeclStmt 0x1310270b8 <line:5:2, col:67>     | |-RecordDecl 0x131026dc0 <col:2, col:9> col:9 struct sockaddr_ax25     | `-VarDecl 0x131026f28 <col:2, col:59> col:24 used sax 'struct sockaddr_ax25 *' cinit     |   `-CStyleCastExpr 0x131027078 <col:30, col:59> 'struct sockaddr_ax25 *' contains-errors <Dependent>     |     `-RecoveryExpr 0x131026fc8 <col:54, col:59> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x131026f90 <col:54> 'struct msghdr *' lvalue ParmVar 0x1310267f8 'msg' 'struct msghdr *'     |-UnaryExprOrTypeTraitExpr 0x131027140 <line:6:2, col:9> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x131027120 <col:9> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x131027348 <line:7:2, col:21>     | |-RecordDecl 0x131027160 <col:2, col:9> col:9 struct sk_buff     | `-VarDecl 0x1310272c8 <col:2, col:18> col:18 used skb 'struct sk_buff *'     |-DeclStmt 0x1310273e0 <line:8:2, col:8>     | `-VarDecl 0x131027378 <col:2, col:6> col:6 used er 'int'     |-CallExpr 0x1310275d8 <line:12:2, col:14> 'int' contains-errors     | |-ImplicitCastExpr 0x1310275c0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x131027550 <col:2> 'int ()' Function 0x131027498 'lock_sock' 'int ()'     | `-ImplicitCastExpr 0x13102e000 <col:12> 'struct sock *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x131027570 <col:12> 'struct sock *' contains-errors lvalue Var 0x131026cc8 'sk' 'struct sock *'     |-IfStmt 0x13102e360 <line:13:2, line:16:2>     | |-BinaryOperator 0x13102e0d0 <line:13:6, col:22> 'int' contains-errors '!='     | | |-RecoveryExpr 0x13102e050 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x13102e018 <col:6> 'struct sock *' contains-errors lvalue Var 0x131026cc8 'sk' 'struct sock *'     | | `-RecoveryExpr 0x13102e0b0 <col:22> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13102e340 <col:39, line:16:2>     |   |-CallExpr 0x13102e228 <line:14:3, col:18> 'int' contains-errors     |   | |-ImplicitCastExpr 0x13102e210 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x13102e1d0 <col:3> 'int ()' Function 0x13102e118 'release_sock' 'int ()'     |   | `-ImplicitCastExpr 0x13102e250 <col:16> 'struct sock *' contains-errors <LValueToRValue>     |   |   `-DeclRefExpr 0x13102e1f0 <col:16> 'struct sock *' contains-errors lvalue Var 0x131026cc8 'sk' 'struct sock *'     |   `-ReturnStmt 0x13102e330 <line:15:3, col:11>     |     `-UnaryOperator 0x13102e318 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x13102e300 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x13102e2b0 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13102e7a0 <line:19:2, line:22:2>     | |-RecoveryExpr 0x13102e680 <line:19:6, col:89> '_Bool' contains-errors     | `-CompoundStmt 0x13102e780 <col:95, line:22:2>     |   |-CallExpr 0x13102e6f8 <line:20:3, col:18> 'int' contains-errors     |   | |-ImplicitCastExpr 0x13102e6e0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x13102e6a0 <col:3> 'int ()' Function 0x13102e118 'release_sock' 'int ()'     |   | `-ImplicitCastExpr 0x13102e720 <col:16> 'struct sock *' contains-errors <LValueToRValue>     |   |   `-DeclRefExpr 0x13102e6c0 <col:16> 'struct sock *' contains-errors lvalue Var 0x131026cc8 'sk' 'struct sock *'     |   `-ReturnStmt 0x13102e770 <line:21:3, col:10>     |     `-ImplicitCastExpr 0x13102e758 <col:10> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x13102e738 <col:10> 'int' lvalue Var 0x131027378 'er' 'int'     |-CallExpr 0x13102e8f8 <line:24:2, col:32> 'int'     | |-ImplicitCastExpr 0x13102e8e0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13102e8a0 <col:2> 'int ()' Function 0x13102e7e8 'skb_reset_transport_header' 'int ()'     | `-ImplicitCastExpr 0x13102e920 <col:29> 'struct sk_buff *' <LValueToRValue>     |   `-DeclRefExpr 0x13102e8c0 <col:29> 'struct sk_buff *' lvalue Var 0x1310272c8 'skb' 'struct sk_buff *'     |-IfStmt 0x13102eac0 <line:27:2, line:30:2>     | |-BinaryOperator 0x13102ea10 <line:27:6, col:15> 'int' contains-errors '>'     | | |-RecoveryExpr 0x13102e9f0 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13102e9b0 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13102eab0 <col:21, line:30:2>     |-IfStmt 0x13102efd8 <line:33:2, line:37:2>     | |-BinaryOperator 0x13102ecf8 <line:33:6, col:11> 'int' '<'     | | |-ImplicitCastExpr 0x13102ece0 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x13102eca0 <col:6> 'int' lvalue Var 0x131027378 'er' 'int'     | | `-IntegerLiteral 0x13102ecc0 <col:11> 'int' 0     | `-CompoundStmt 0x13102efb0 <col:14, line:37:2>     |   |-CallExpr 0x13102ee70 <line:34:3, col:28> 'int' contains-errors     |   | |-ImplicitCastExpr 0x13102ee58 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x13102edf8 <col:3> 'int ()' Function 0x13102ed40 'skb_free_datagram' 'int ()'     |   | |-ImplicitCastExpr 0x13102eea0 <col:21> 'struct sock *' contains-errors <LValueToRValue>     |   | | `-DeclRefExpr 0x13102ee18 <col:21> 'struct sock *' contains-errors lvalue Var 0x131026cc8 'sk' 'struct sock *'     |   | `-ImplicitCastExpr 0x13102eeb8 <col:25> 'struct sk_buff *' <LValueToRValue>     |   |   `-DeclRefExpr 0x13102ee38 <col:25> 'struct sk_buff *' lvalue Var 0x1310272c8 'skb' 'struct sk_buff *'     |   |-CallExpr 0x13102ef28 <line:35:3, col:18> 'int' contains-errors     |   | |-ImplicitCastExpr 0x13102ef10 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x13102eed0 <col:3> 'int ()' Function 0x13102e118 'release_sock' 'int ()'     |   | `-ImplicitCastExpr 0x13102ef50 <col:16> 'struct sock *' contains-errors <LValueToRValue>     |   |   `-DeclRefExpr 0x13102eef0 <col:16> 'struct sock *' contains-errors lvalue Var 0x131026cc8 'sk' 'struct sock *'     |   `-ReturnStmt 0x13102efa0 <line:36:3, col:10>     |     `-ImplicitCastExpr 0x13102ef88 <col:10> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x13102ef68 <col:10> 'int' lvalue Var 0x131027378 'er' 'int'     |-IfStmt 0x13102f298 <line:39:2, line:43:2>     | |-RecoveryExpr 0x13102f020 <line:39:6, col:13> '_Bool' contains-errors     | `-CompoundStmt 0x13102f288 <col:19, line:43:2>     |-CallExpr 0x13102f400 <line:47:2, col:27> 'int' contains-errors     | |-ImplicitCastExpr 0x13102f3e8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13102f388 <col:2> 'int ()' Function 0x13102ed40 'skb_free_datagram' 'int ()'     | |-ImplicitCastExpr 0x13102f430 <col:20> 'struct sock *' contains-errors <LValueToRValue>     | | `-DeclRefExpr 0x13102f3a8 <col:20> 'struct sock *' contains-errors lvalue Var 0x131026cc8 'sk' 'struct sock *'     | `-ImplicitCastExpr 0x13102f448 <col:24> 'struct sk_buff *' <LValueToRValue>     |   `-DeclRefExpr 0x13102f3c8 <col:24> 'struct sk_buff *' lvalue Var 0x1310272c8 'skb' 'struct sk_buff *'     `-CallExpr 0x13102f4b8 <line:49:2, col:17> 'int' contains-errors       |-ImplicitCastExpr 0x13102f4a0 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x13102f460 <col:2> 'int ()' Function 0x13102e118 'release_sock' 'int ()'       `-ImplicitCastExpr 0x13102f4e0 <col:15> 'struct sock *' contains-errors <LValueToRValue>         `-DeclRefExpr 0x13102f480 <col:15> 'struct sock *' contains-errors lvalue Var 0x131026cc8 'sk' 'struct sock *' ","19247":"`-FunctionDecl 0x157940e38  line:1:12 adis_update_scan_mode_burst 'int (struct iio_dev *, const unsigned long *)' static   |-ParmVarDecl 0x157928a48 <col:40, col:56> col:56 used indio_dev 'struct iio_dev *'   |-ParmVarDecl 0x157928af8 <line:2:2, col:23> col:23 scan_mask 'const unsigned long *'   `-CompoundStmt 0x157947eb8 <line:3:1, line:36:1>     |-DeclStmt 0x157941338 <line:4:2, col:55>     | |-RecordDecl 0x157940f38 <col:2, col:9> col:9 struct adis     | `-VarDecl 0x1579410a8 <col:2, col:54> col:15 used adis 'struct adis *' cinit     |   `-ImplicitCastExpr 0x157941308 <col:22, col:54> 'struct adis *' <IntegralToPointer>     |     `-CallExpr 0x1579412c8 <col:22, col:54> 'int'     |       |-ImplicitCastExpr 0x1579412b0 <col:22> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x157941240 <col:22> 'int ()' Function 0x157941188 'iio_device_get_drvdata' 'int ()'     |       `-ImplicitCastExpr 0x1579412f0 <col:45> 'struct iio_dev *' <LValueToRValue>     |         `-DeclRefExpr 0x157941260 <col:45> 'struct iio_dev *' lvalue ParmVar 0x157928a48 'indio_dev' 'struct iio_dev *'     |-DeclStmt 0x1579413d0 <line:5:2, col:27>     | `-VarDecl 0x157941368 <col:2, col:15> col:15 used burst_length 'unsigned int'     |-CompoundAssignOperator 0x1579415c0 <line:10:2, col:31> 'unsigned int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-DeclRefExpr 0x1579414f8 <col:2> 'unsigned int' lvalue Var 0x157941368 'burst_length' 'unsigned int'     | `-CXXDependentScopeMemberExpr 0x157941578 <col:18, col:31> '<dependent type>' contains-errors lvalue ->extra_len     |   `-RecoveryExpr 0x157941550 <col:18, col:24> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x157941518 <col:18> 'struct adis *' lvalue Var 0x1579410a8 'adis' 'struct adis *'     |-BinaryOperator 0x1579419e8 <line:12:2, col:57> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x157941628 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1579415f0 <col:2> 'struct adis *' lvalue Var 0x1579410a8 'adis' 'struct adis *'     | `-CallExpr 0x1579419b0 <col:15, col:57> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x157941730 <col:15> 'int ()' Function 0x157941678 'kcalloc' 'int ()'     |   |-IntegerLiteral 0x157941750 <col:23> 'int' 2     |   |-UnaryExprOrTypeTraitExpr 0x157941970 <col:26, col:44> 'unsigned long' contains-errors sizeof     |   | `-ParenExpr 0x157941950 <col:32, col:44> '<dependent type>' contains-errors     |   |   `-UnaryOperator 0x157941938 <col:33, col:40> '<dependent type>' contains-errors prefix '*' cannot overflow     |   |     `-ImplicitCastExpr 0x157941920 <col:34, col:40> '<dependent type>' contains-errors <LValueToRValue>     |   |       `-RecoveryExpr 0x1579417a8 <col:34, col:40> '<dependent type>' contains-errors lvalue     |   |         `-DeclRefExpr 0x157941770 <col:34> 'struct adis *' lvalue Var 0x1579410a8 'adis' 'struct adis *' non_odr_use_unevaluated     |   `-RecoveryExpr 0x157941990 <col:47> '<dependent type>' contains-errors lvalue     |-IfStmt 0x157941b40 <line:13:2, line:14:11>     | |-UnaryOperator 0x157941a80 <line:13:6, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x157941a68 <col:7, col:13> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x157941a40 <col:7, col:13> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x157941a08 <col:7> 'struct adis *' lvalue Var 0x1579410a8 'adis' 'struct adis *'     | `-ReturnStmt 0x157941b30 <line:14:3, col:11>     |   `-UnaryOperator 0x157941b18 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x157941b00 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x157941ae0 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x157946e60 <line:17:2, line:18:11>     | |-UnaryOperator 0x157941d88 <line:17:6, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x157941d70 <col:7, col:13> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x157941d48 <col:7, col:13> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x157941d10 <col:7> 'struct adis *' lvalue Var 0x1579410a8 'adis' 'struct adis *'     | `-ReturnStmt 0x157946e50 <line:18:3, col:11>     |   `-UnaryOperator 0x157946e38 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x157946e20 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x157946e00 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x157947370 <line:25:2, col:32> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x157947308 <col:2, col:16> '<dependent type>' contains-errors lvalue .bits_per_word     | | `-ArraySubscriptExpr 0x1579472e8 <col:2, col:14> '<dependent type>' contains-errors lvalue     | |   |-ImplicitCastExpr 0x1579472d0 <col:2, col:8> '<dependent type>' contains-errors <LValueToRValue>     | |   | `-RecoveryExpr 0x157947288 <col:2, col:8> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x157947250 <col:2> 'struct adis *' lvalue Var 0x1579410a8 'adis' 'struct adis *'     | |   `-IntegerLiteral 0x1579472b0 <col:13> 'int' 0     | `-IntegerLiteral 0x157947350 <col:32> 'int' 8     |-BinaryOperator 0x1579474b0 <line:26:2, col:22> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x157947448 <col:2, col:16> '<dependent type>' contains-errors lvalue .len     | | `-ArraySubscriptExpr 0x157947428 <col:2, col:14> '<dependent type>' contains-errors lvalue     | |   |-ImplicitCastExpr 0x157947410 <col:2, col:8> '<dependent type>' contains-errors <LValueToRValue>     | |   | `-RecoveryExpr 0x1579473c8 <col:2, col:8> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x157947390 <col:2> 'struct adis *' lvalue Var 0x1579410a8 'adis' 'struct adis *'     | |   `-IntegerLiteral 0x1579473f0 <col:13> 'int' 0     | `-IntegerLiteral 0x157947490 <col:22> 'int' 2     |-BinaryOperator 0x157947630 <line:27:2, col:31> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x157947588 <col:2, col:16> '<dependent type>' contains-errors lvalue .rx_buf     | | `-ArraySubscriptExpr 0x157947568 <col:2, col:14> '<dependent type>' contains-errors lvalue     | |   |-ImplicitCastExpr 0x157947550 <col:2, col:8> '<dependent type>' contains-errors <LValueToRValue>     | |   | `-RecoveryExpr 0x157947508 <col:2, col:8> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x1579474d0 <col:2> 'struct adis *' lvalue Var 0x1579410a8 'adis' 'struct adis *'     | |   `-IntegerLiteral 0x157947530 <col:13> 'int' 1     | `-RecoveryExpr 0x157947608 <col:25, col:31> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1579475d0 <col:25> 'struct adis *' lvalue Var 0x1579410a8 'adis' 'struct adis *'     |-BinaryOperator 0x157947770 <line:28:2, col:32> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x157947708 <col:2, col:16> '<dependent type>' contains-errors lvalue .bits_per_word     | | `-ArraySubscriptExpr 0x1579476e8 <col:2, col:14> '<dependent type>' contains-errors lvalue     | |   |-ImplicitCastExpr 0x1579476d0 <col:2, col:8> '<dependent type>' contains-errors <LValueToRValue>     | |   | `-RecoveryExpr 0x157947688 <col:2, col:8> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x157947650 <col:2> 'struct adis *' lvalue Var 0x1579410a8 'adis' 'struct adis *'     | |   `-IntegerLiteral 0x1579476b0 <col:13> 'int' 1     | `-IntegerLiteral 0x157947750 <col:32> 'int' 8     |-BinaryOperator 0x1579478b0 <line:29:2, col:22> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x157947848 <col:2, col:16> '<dependent type>' contains-errors lvalue .len     | | `-ArraySubscriptExpr 0x157947828 <col:2, col:14> '<dependent type>' contains-errors lvalue     | |   |-ImplicitCastExpr 0x157947810 <col:2, col:8> '<dependent type>' contains-errors <LValueToRValue>     | |   | `-RecoveryExpr 0x1579477c8 <col:2, col:8> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x157947790 <col:2> 'struct adis *' lvalue Var 0x1579410a8 'adis' 'struct adis *'     | |   `-IntegerLiteral 0x1579477f0 <col:13> 'int' 1     | `-DeclRefExpr 0x157947890 <col:22> 'unsigned int' lvalue Var 0x157941368 'burst_length' 'unsigned int'     |-CallExpr 0x157947a48 <line:31:2, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1579479b0 <col:2> 'int ()' Function 0x1579478f8 'spi_message_init' 'int ()'     | `-UnaryOperator 0x157947a30 <col:19, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x157947a08 <col:20, col:26> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1579479d0 <col:20> 'struct adis *' lvalue Var 0x1579410a8 'adis' 'struct adis *'     |-CallExpr 0x157947cb8 <line:32:2, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x157947b50 <col:2> 'int ()' Function 0x157947a98 'spi_message_add_tail' 'int ()'     | |-UnaryOperator 0x157947c28 <col:23, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-ArraySubscriptExpr 0x157947c08 <col:24, col:36> '<dependent type>' contains-errors lvalue     | |   |-ImplicitCastExpr 0x157947bf0 <col:24, col:30> '<dependent type>' contains-errors <LValueToRValue>     | |   | `-RecoveryExpr 0x157947ba8 <col:24, col:30> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x157947b70 <col:24> 'struct adis *' lvalue Var 0x1579410a8 'adis' 'struct adis *'     | |   `-IntegerLiteral 0x157947bd0 <col:35> 'int' 0     | `-UnaryOperator 0x157947ca0 <col:39, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x157947c78 <col:40, col:46> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x157947c40 <col:40> 'struct adis *' lvalue Var 0x1579410a8 'adis' 'struct adis *'     |-CallExpr 0x157947e58 <line:33:2, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x157947ce8 <col:2> 'int ()' Function 0x157947a98 'spi_message_add_tail' 'int ()'     | |-UnaryOperator 0x157947dc0 <col:23, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-ArraySubscriptExpr 0x157947da0 <col:24, col:36> '<dependent type>' contains-errors lvalue     | |   |-ImplicitCastExpr 0x157947d88 <col:24, col:30> '<dependent type>' contains-errors <LValueToRValue>     | |   | `-RecoveryExpr 0x157947d40 <col:24, col:30> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x157947d08 <col:24> 'struct adis *' lvalue Var 0x1579410a8 'adis' 'struct adis *'     | |   `-IntegerLiteral 0x157947d68 <col:35> 'int' 1     | `-UnaryOperator 0x157947e40 <col:39, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x157947e18 <col:40, col:46> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x157947dd8 <col:40> 'struct adis *' lvalue Var 0x1579410a8 'adis' 'struct adis *'     `-ReturnStmt 0x157947ea8 <line:35:2, col:9>       `-IntegerLiteral 0x157947e88 <col:9> 'int' 0 ","19944":"`-FunctionDecl 0x13600ddc8  line:1:16 invalid last_seg 'int (int)' static   |-ParmVarDecl 0x13600dcf0 <col:25, col:33> col:33 referenced invalid len 'int'   `-CompoundStmt 0x13600e0d0 <line:2:1, line:10:1>     |-IfStmt 0x13600df58 <line:3:2, line:5:2>     | |-BinaryOperator 0x13600def0 <line:3:6, col:13> 'int' contains-errors '<='     | | |-RecoveryExpr 0x13600de78 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13600ded0 <col:13> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13600df40 <col:32, line:5:2>     |   `-ReturnStmt 0x13600df30 <line:4:3, col:10>     |     `-IntegerLiteral 0x13600df10 <col:10> 'int' 0     `-CompoundAssignOperator 0x13600e028 <line:7:2, col:9> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'       |-RecoveryExpr 0x13600df98 <col:2> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x13600df78 <col:2> 'int' lvalue ParmVar 0x13600dcf0 'len' 'int'       `-RecoveryExpr 0x13600e008 <col:9> '<dependent type>' contains-errors lvalue ","19567":"`-FunctionDecl 0x13d106118  line:1:12 invalid pxa2xx_ssp_load 'int (int *, void *, int)' static   |-ParmVarDecl 0x13d105f28 <col:28, col:38> col:38 invalid f 'int *'   |-ParmVarDecl 0x13d105fa8 <col:41, col:47> col:47 opaque 'void *'   |-ParmVarDecl 0x13d106028 <col:55, col:59> col:59 version_id 'int'   `-CompoundStmt 0x13e008c00 <line:2:1, line:24:1>     |-DeclStmt 0x13d106288 <line:4:5, col:10>     | `-VarDecl 0x13d106220 <col:5, col:9> col:9 used i 'int'     |-CallExpr 0x13d808a48 <line:10:5, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d8088e0 <col:5> 'int ()' Function 0x13d106490 'qemu_get_be32s' 'int ()'     | |-RecoveryExpr 0x13d808900 <col:20> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x13d808a30 <col:23, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x13d8089e8 <col:24, col:27> '<dependent type>' contains-errors lvalue ->sspsp     |     `-RecoveryExpr 0x13d8089c8 <col:24> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13d808be0 <line:11:5, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d808a78 <col:5> 'int ()' Function 0x13d106490 'qemu_get_be32s' 'int ()'     | |-RecoveryExpr 0x13d808a98 <col:20> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x13d808bc8 <col:23, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x13d808b80 <col:24, col:27> '<dependent type>' contains-errors lvalue ->ssto     |     `-RecoveryExpr 0x13d808b60 <col:24> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13d808d78 <line:12:5, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d808c10 <col:5> 'int ()' Function 0x13d106490 'qemu_get_be32s' 'int ()'     | |-RecoveryExpr 0x13d808c30 <col:20> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x13d808d60 <col:23, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x13d808d18 <col:24, col:27> '<dependent type>' contains-errors lvalue ->ssitr     |     `-RecoveryExpr 0x13d808cf8 <col:24> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13d808f10 <line:13:5, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d808da8 <col:5> 'int ()' Function 0x13d106490 'qemu_get_be32s' 'int ()'     | |-RecoveryExpr 0x13d808dc8 <col:20> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x13d808ef8 <col:23, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x13d808eb0 <col:24, col:27> '<dependent type>' contains-errors lvalue ->sssr     |     `-RecoveryExpr 0x13d808e90 <col:24> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13d809188 <line:14:5, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d809020 <col:5> 'int ()' Function 0x13d808f68 'qemu_get_8s' 'int ()'     | |-RecoveryExpr 0x13d809040 <col:17> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x13d809170 <col:20, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x13d809128 <col:21, col:24> '<dependent type>' contains-errors lvalue ->sstsa     |     `-RecoveryExpr 0x13d809108 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13d809320 <line:15:5, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d8091b8 <col:5> 'int ()' Function 0x13d808f68 'qemu_get_8s' 'int ()'     | |-RecoveryExpr 0x13d8091d8 <col:17> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x13d809308 <col:20, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x13d8092c0 <col:21, col:24> '<dependent type>' contains-errors lvalue ->ssrsa     |     `-RecoveryExpr 0x13d8092a0 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13d8094b8 <line:16:5, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d809350 <col:5> 'int ()' Function 0x13d808f68 'qemu_get_8s' 'int ()'     | |-RecoveryExpr 0x13d809370 <col:17> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x13d8094a0 <col:20, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x13d809458 <col:21, col:24> '<dependent type>' contains-errors lvalue ->ssacd     |     `-RecoveryExpr 0x13d809438 <col:21> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x13d8097b0 <line:23:5, col:12>       `-IntegerLiteral 0x13d809790 <col:12> 'int' 0 ","19282":"`-FunctionDecl 0x124128298  line:1:29 ares__malloc_addrinfo_cname 'struct ares_addrinfo_cname *()'   `-CompoundStmt 0x124142c50 <line:2:1, line:9:1>     |-DeclStmt 0x124142a10 <line:3:3, col:86>     | `-VarDecl 0x124128418 <col:3, col:31> col:31 used cname 'struct ares_addrinfo_cname *'     |-IfStmt 0x124142ac0 <line:4:3, line:5:12>     | |-UnaryOperator 0x124142a60 <line:4:7, col:8> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x124142a48 <col:8> 'struct ares_addrinfo_cname *' <LValueToRValue>     | |   `-DeclRefExpr 0x124142a28 <col:8> 'struct ares_addrinfo_cname *' lvalue Var 0x124128418 'cname' 'struct ares_addrinfo_cname *'     | `-ReturnStmt 0x124142ab0 <line:5:5, col:12>     |   `-RecoveryExpr 0x124142a90 <col:12> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x124142be8 <line:7:3, col:12> 'struct ares_addrinfo_cname' contains-errors '='     | |-UnaryOperator 0x124142bb0 <col:3, col:4> 'struct ares_addrinfo_cname' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x124142b98 <col:4> 'struct ares_addrinfo_cname *' <LValueToRValue>     | |   `-DeclRefExpr 0x124142ae0 <col:4> 'struct ares_addrinfo_cname *' lvalue Var 0x124128418 'cname' 'struct ares_addrinfo_cname *'     | `-RecoveryExpr 0x124142bc8 <col:12> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x124142c40 <line:8:3, col:10>       `-ImplicitCastExpr 0x124142c28 <col:10> 'struct ares_addrinfo_cname *' <LValueToRValue>         `-DeclRefExpr 0x124142c08 <col:10> 'struct ares_addrinfo_cname *' lvalue Var 0x124128418 'cname' 'struct ares_addrinfo_cname *' ","19420":"`-FunctionDecl 0x13b928338  line:1:31 inotify_new_group 'struct fsnotify_group *(unsigned int)' static   |-ParmVarDecl 0x13b928178 <col:49, col:62> col:62 used max_events 'unsigned int'   `-CompoundStmt 0x13b9458a0 <line:2:1, line:37:1>     |-DeclStmt 0x13b928520 <line:3:2, col:30>     | `-VarDecl 0x13b9284b8 <col:2, col:25> col:25 used group 'struct fsnotify_group *'     |-DeclStmt 0x13b928728 <line:4:2, col:35>     | |-RecordDecl 0x13b928538 <col:2, col:9> col:9 struct inotify_event_info     | `-VarDecl 0x13b9286a8 <col:2, col:29> col:29 used oevent 'struct inotify_event_info *'     |-BinaryOperator 0x13b941fb0 <line:6:2, col:52> 'struct fsnotify_group *' contains-errors '='     | |-DeclRefExpr 0x13b928740 <col:2> 'struct fsnotify_group *' lvalue Var 0x13b9284b8 'group' 'struct fsnotify_group *'     | `-CallExpr 0x13b941f88 <col:10, col:52> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13b941eb8 <col:10> 'int ()' Function 0x13b941e00 'fsnotify_alloc_group' 'int ()'     |   `-UnaryOperator 0x13b941f70 <col:31, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x13b941f50 <col:32> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13b9421c0 <line:7:2, line:8:10>     | |-CallExpr 0x13b942138 <line:7:6, col:18> 'int'     | | |-ImplicitCastExpr 0x13b942120 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x13b9420b0 <col:6> 'int ()' Function 0x13b941ff8 'IS_ERR' 'int ()'     | | `-ImplicitCastExpr 0x13b942160 <col:13> 'struct fsnotify_group *' <LValueToRValue>     | |   `-DeclRefExpr 0x13b9420d0 <col:13> 'struct fsnotify_group *' lvalue Var 0x13b9284b8 'group' 'struct fsnotify_group *'     | `-ReturnStmt 0x13b9421b0 <line:8:3, col:10>     |   `-ImplicitCastExpr 0x13b942198 <col:10> 'struct fsnotify_group *' <LValueToRValue>     |     `-DeclRefExpr 0x13b942178 <col:10> 'struct fsnotify_group *' lvalue Var 0x13b9284b8 'group' 'struct fsnotify_group *'     |-IfStmt 0x13b942ca8 <line:11:2, line:14:2>     | |-CallExpr 0x13b9428f0 <line:11:6, col:22> 'int'     | | |-ImplicitCastExpr 0x13b9428d8 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x13b942868 <col:6> 'int ()' Function 0x13b9427b0 'unlikely' 'int ()'     | | `-UnaryOperator 0x13b9428c0 <col:15, col:16> 'int' prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x13b9428a8 <col:16> 'struct inotify_event_info *' <LValueToRValue>     | |     `-DeclRefExpr 0x13b942888 <col:16> 'struct inotify_event_info *' lvalue Var 0x13b9286a8 'oevent' 'struct inotify_event_info *'     | `-CompoundStmt 0x13b942c88 <col:25, line:14:2>     |   |-CallExpr 0x13b942a50 <line:12:3, col:31> 'int'     |   | |-ImplicitCastExpr 0x13b942a38 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x13b9429f8 <col:3> 'int ()' Function 0x13b942940 'fsnotify_destroy_group' 'int ()'     |   | `-ImplicitCastExpr 0x13b942a78 <col:26> 'struct fsnotify_group *' <LValueToRValue>     |   |   `-DeclRefExpr 0x13b942a18 <col:26> 'struct fsnotify_group *' lvalue Var 0x13b9284b8 'group' 'struct fsnotify_group *'     |   `-ReturnStmt 0x13b942c78 <line:13:3, col:25>     |     `-CallExpr 0x13b942c50 <col:10, col:25> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x13b942b70 <col:10> 'int ()' Function 0x13b942ab8 'ERR_PTR' 'int ()'     |       `-UnaryOperator 0x13b942c38 <col:18, col:19> '<dependent type>' contains-errors prefix '-' cannot overflow     |         `-ImplicitCastExpr 0x13b942c20 <col:19> '<dependent type>' contains-errors <LValueToRValue>     |           `-RecoveryExpr 0x13b942c00 <col:19> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13b942da0 <line:15:2, col:35> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13b942d00 <col:2, col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13b942cc8 <col:2> 'struct fsnotify_group *' lvalue Var 0x13b9284b8 'group' 'struct fsnotify_group *'     | `-UnaryOperator 0x13b942d88 <col:26, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13b942d60 <col:27, col:35> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13b942d28 <col:27> 'struct inotify_event_info *' lvalue Var 0x13b9286a8 'oevent' 'struct inotify_event_info *'     |-CallExpr 0x13b9449a0 <line:16:2, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13b9448b8 <col:2> 'int ()' Function 0x13b944800 'fsnotify_init_event' 'int ()'     | |-RecoveryExpr 0x13b944910 <col:22, col:29> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13b9448d8 <col:22> 'struct fsnotify_group *' lvalue Var 0x13b9284b8 'group' 'struct fsnotify_group *'     | `-RecoveryExpr 0x13b944980 <col:45> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13b944a88 <line:17:2, col:17> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13b944a08 <col:2, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13b9449d0 <col:2> 'struct inotify_event_info *' lvalue Var 0x13b9286a8 'oevent' 'struct inotify_event_info *'     | `-RecoveryExpr 0x13b944a68 <col:17> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13b944b40 <line:18:2, col:16> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13b944ae0 <col:2, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13b944aa8 <col:2> 'struct inotify_event_info *' lvalue Var 0x13b9286a8 'oevent' 'struct inotify_event_info *'     | `-UnaryOperator 0x13b944b28 <col:15, col:16> 'int' prefix '-'     |   `-IntegerLiteral 0x13b944b08 <col:16> 'int' 1     |-BinaryOperator 0x13b944be0 <line:19:2, col:24> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13b944b98 <col:2, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13b944b60 <col:2> 'struct inotify_event_info *' lvalue Var 0x13b9286a8 'oevent' 'struct inotify_event_info *'     | `-IntegerLiteral 0x13b944bc0 <col:24> 'int' 0     |-BinaryOperator 0x13b944c80 <line:20:2, col:21> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13b944c38 <col:2, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13b944c00 <col:2> 'struct inotify_event_info *' lvalue Var 0x13b9286a8 'oevent' 'struct inotify_event_info *'     | `-IntegerLiteral 0x13b944c60 <col:21> 'int' 0     |-BinaryOperator 0x13b944d20 <line:22:2, col:22> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13b944cd8 <col:2, col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13b944ca0 <col:2> 'struct fsnotify_group *' lvalue Var 0x13b9284b8 'group' 'struct fsnotify_group *'     | `-DeclRefExpr 0x13b944d00 <col:22> 'unsigned int' lvalue ParmVar 0x13b928178 'max_events' 'unsigned int'     |-CallExpr 0x13b945060 <line:25:2, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13b944f80 <col:2> 'int ()' Function 0x13b944ec8 'spin_lock_init' 'int ()'     | `-UnaryOperator 0x13b945048 <col:17, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x13b945000 <col:18, col:38> '<dependent type>' contains-errors lvalue .idr_lock     |     `-RecoveryExpr 0x13b944fd8 <col:18, col:25> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13b944fa0 <col:18> 'struct fsnotify_group *' lvalue Var 0x13b9284b8 'group' 'struct fsnotify_group *'     |-CallExpr 0x13b945248 <line:26:2, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13b945168 <col:2> 'int ()' Function 0x13b9450b0 'idr_init' 'int ()'     | `-UnaryOperator 0x13b945230 <col:11, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x13b9451e8 <col:12, col:32> '<dependent type>' contains-errors lvalue .idr     |     `-RecoveryExpr 0x13b9451c0 <col:12, col:19> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13b945188 <col:12> 'struct fsnotify_group *' lvalue Var 0x13b9284b8 'group' 'struct fsnotify_group *'     |-IfStmt 0x13b945838 <line:31:2, line:34:2>     | |-UnaryOperator 0x13b945748 <line:31:6, col:27> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13b945730 <col:7, col:27> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x13b9456e8 <col:7, col:27> '<dependent type>' contains-errors lvalue .ucounts     | |     `-RecoveryExpr 0x13b9456c0 <col:7, col:14> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x13b945688 <col:7> 'struct fsnotify_group *' lvalue Var 0x13b9284b8 'group' 'struct fsnotify_group *'     | `-CompoundStmt 0x13b945820 <col:36, line:34:2>     |   `-CallExpr 0x13b9457b8 <line:32:3, col:31> 'int'     |     |-ImplicitCastExpr 0x13b9457a0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x13b945760 <col:3> 'int ()' Function 0x13b942940 'fsnotify_destroy_group' 'int ()'     |     `-ImplicitCastExpr 0x13b9457e0 <col:26> 'struct fsnotify_group *' <LValueToRValue>     |       `-DeclRefExpr 0x13b945780 <col:26> 'struct fsnotify_group *' lvalue Var 0x13b9284b8 'group' 'struct fsnotify_group *'     `-ReturnStmt 0x13b945890 <line:36:2, col:9>       `-ImplicitCastExpr 0x13b945878 <col:9> 'struct fsnotify_group *' <LValueToRValue>         `-DeclRefExpr 0x13b945858 <col:9> 'struct fsnotify_group *' lvalue Var 0x13b9284b8 'group' 'struct fsnotify_group *' ","19618":"`-FunctionDecl 0x14a8fac88  line:1:12 invalid bmp_read_header 'int (int *, int *)' static   |-ParmVarDecl 0x14a8fab28 <col:28, col:37> col:37 invalid infile 'int *'   |-ParmVarDecl 0x14a8faba8 <col:45, col:56> col:56 invalid hdr 'int *'   `-CompoundStmt 0x14a01f1d0 <line:2:1, line:13:1>     |-IfStmt 0x14a01f180 <line:3:2, line:11:2>     | |-BinaryOperator 0x14a01f118 <line:4:6, line:8:37> 'int' contains-errors '||'     | | |-BinaryOperator 0x14a01eff0 <line:4:6, line:7:44> 'int' contains-errors '||'     | | | |-BinaryOperator 0x14a01eec8 <line:4:6, line:6:43> 'int' contains-errors '||'     | | | | |-BinaryOperator 0x14a8fb190 <line:4:6, line:5:37> 'int' contains-errors '||'     | | | | | |-UnaryOperator 0x14a8faf90 <line:4:6, col:39> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | | | `-CallExpr 0x14a8faf60 <col:7, col:39> '<dependent type>' contains-errors     | | | | | |   |-DeclRefExpr 0x14a8faea0 <col:7> 'int ()' Function 0x14a8fade8 'gdGetWordLSB' 'int ()'     | | | | | |   |-UnaryOperator 0x14a8faf28 <col:20, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | | | |   | `-CXXDependentScopeMemberExpr 0x14a8faee0 <col:21, col:26> '<dependent type>' contains-errors lvalue ->magic     | | | | | |   |   `-RecoveryExpr 0x14a8faec0 <col:21> '<dependent type>' contains-errors lvalue     | | | | | |   `-RecoveryExpr 0x14a8faf40 <col:33> '<dependent type>' contains-errors lvalue     | | | | | `-UnaryOperator 0x14a8fb178 <line:5:6, col:37> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | |   `-CallExpr 0x14a8fb148 <col:7, col:37> '<dependent type>' contains-errors     | | | | |     |-DeclRefExpr 0x14a8fb088 <col:7> 'int ()' Function 0x14a8fafd0 'gdGetIntLSB' 'int ()'     | | | | |     |-UnaryOperator 0x14a8fb110 <col:19, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | | |     | `-CXXDependentScopeMemberExpr 0x14a8fb0c8 <col:20, col:25> '<dependent type>' contains-errors lvalue ->size     | | | | |     |   `-RecoveryExpr 0x14a8fb0a8 <col:20> '<dependent type>' contains-errors lvalue     | | | | |     `-RecoveryExpr 0x14a8fb128 <col:31> '<dependent type>' contains-errors lvalue     | | | | `-UnaryOperator 0x14a01eeb0 <line:6:6, col:43> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | |   `-CallExpr 0x14a01ee80 <col:7, col:43> '<dependent type>' contains-errors     | | | |     |-DeclRefExpr 0x14a8fb1b0 <col:7> 'int ()' Function 0x14a8fade8 'gdGetWordLSB' 'int ()'     | | | |     |-UnaryOperator 0x14a01ee48 <col:20, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | |     | `-CXXDependentScopeMemberExpr 0x14a01ee00 <col:21, col:26> '<dependent type>' contains-errors lvalue ->reserved1     | | | |     |   `-RecoveryExpr 0x14a8fb1d0 <col:21> '<dependent type>' contains-errors lvalue     | | | |     `-RecoveryExpr 0x14a01ee60 <col:37> '<dependent type>' contains-errors lvalue     | | | `-UnaryOperator 0x14a01efd8 <line:7:6, col:44> '<dependent type>' contains-errors prefix '!' cannot overflow     | | |   `-CallExpr 0x14a01efa8 <col:7, col:44> '<dependent type>' contains-errors     | | |     |-DeclRefExpr 0x14a01eee8 <col:7> 'int ()' Function 0x14a8fade8 'gdGetWordLSB' 'int ()'     | | |     |-UnaryOperator 0x14a01ef70 <col:20, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |     | `-CXXDependentScopeMemberExpr 0x14a01ef28 <col:21, col:26> '<dependent type>' contains-errors lvalue ->reserved2     | | |     |   `-RecoveryExpr 0x14a01ef08 <col:21> '<dependent type>' contains-errors lvalue     | | |     `-RecoveryExpr 0x14a01ef88 <col:38> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x14a01f100 <line:8:6, col:37> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-CallExpr 0x14a01f0d0 <col:7, col:37> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x14a01f010 <col:7> 'int ()' Function 0x14a8fafd0 'gdGetIntLSB' 'int ()'     | |     |-UnaryOperator 0x14a01f098 <col:19, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     | `-CXXDependentScopeMemberExpr 0x14a01f050 <col:20, col:25> '<dependent type>' contains-errors lvalue ->off     | |     |   `-RecoveryExpr 0x14a01f030 <col:20> '<dependent type>' contains-errors lvalue     | |     `-RecoveryExpr 0x14a01f0b0 <col:31> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14a01f168 <line:9:4, line:11:2>     |   `-ReturnStmt 0x14a01f158 <line:10:3, col:10>     |     `-IntegerLiteral 0x14a01f138 <col:10> 'int' 1     `-ReturnStmt 0x14a01f1c0 <line:12:2, col:9>       `-IntegerLiteral 0x14a01f1a0 <col:9> 'int' 0 ","20107":"`-FunctionDecl 0x1201281f8  line:1:1 invalid dtls1_process_buffered_records 'int (int *)'   |-ParmVarDecl 0x120128128 <col:32, col:37> col:37 referenced invalid s 'int *'   `-CompoundStmt 0x120142468 <line:2:5, line:28:5>     |-IfStmt 0x120141fd8 <line:6:5, line:21:9>     | |-RecoveryExpr 0x120128578 <line:6:9> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x120141fb8 <line:7:9, line:21:9>     |   |-IfStmt 0x1201287b0 <line:9:9, line:10:21>     |   | |-BinaryOperator 0x120128740 <line:9:13, col:53> 'int' contains-errors '!='     |   | | |-CXXDependentScopeMemberExpr 0x120128648 <col:13, col:37> '<dependent type>' contains-errors lvalue .epoch     |   | | | `-CXXDependentScopeMemberExpr 0x120128600 <col:13, col:20> '<dependent type>' contains-errors lvalue ->unprocessed_rcds     |   | | |   `-CXXDependentScopeMemberExpr 0x1201285b8 <col:13, col:16> '<dependent type>' contains-errors lvalue ->d1     |   | | |     `-RecoveryExpr 0x120128598 <col:13> '<dependent type>' contains-errors lvalue     |   | | `-CXXDependentScopeMemberExpr 0x1201286f8 <col:46, col:53> '<dependent type>' contains-errors lvalue ->r_epoch     |   | |   `-CXXDependentScopeMemberExpr 0x1201286b0 <col:46, col:49> '<dependent type>' contains-errors lvalue ->d1     |   | |     `-RecoveryExpr 0x120128690 <col:46> '<dependent type>' contains-errors lvalue     |   | `-ReturnStmt 0x1201287a0 <line:10:13, col:21>     |   |   `-ParenExpr 0x120128780 <col:19, col:21> 'int'     |   |     `-IntegerLiteral 0x120128760 <col:20> 'int' 1     |   `-WhileStmt 0x120141f98 <line:13:9, line:20:13>     |     |-CallExpr 0x1201418f8 <line:13:16, col:53> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x1201287d0 <col:16> 'int ()' Function 0x120128368 'pqueue_peek' 'int ()'     |     | `-CXXDependentScopeMemberExpr 0x1201418b0 <col:28, col:52> '<dependent type>' contains-errors lvalue .q     |     |   `-CXXDependentScopeMemberExpr 0x120141868 <col:28, col:35> '<dependent type>' contains-errors lvalue ->unprocessed_rcds     |     |     `-CXXDependentScopeMemberExpr 0x120141820 <col:28, col:31> '<dependent type>' contains-errors lvalue ->d1     |     |       `-RecoveryExpr 0x120141800 <col:28> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x120141f70 <line:14:13, line:20:13>     |       |-CallExpr 0x120141a40 <line:15:13, col:43> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x120141a00 <col:13> 'int ()' Function 0x120141948 'dtls1_get_unprocessed_record' 'int ()'     |       | `-RecoveryExpr 0x120141a20 <col:42> '<dependent type>' contains-errors lvalue     |       |-IfStmt 0x120141c18 <line:16:13, line:17:25>     |       | |-UnaryOperator 0x120141bb0 <line:16:18, col:42> '<dependent type>' contains-errors prefix '!' cannot overflow     |       | | `-CallExpr 0x120141b88 <col:20, col:42> '<dependent type>' contains-errors     |       | |   |-DeclRefExpr 0x120141b48 <col:20> 'int ()' Function 0x120141a90 'dtls1_process_record' 'int ()'     |       | |   `-RecoveryExpr 0x120141b68 <col:41> '<dependent type>' contains-errors lvalue     |       | `-ReturnStmt 0x120141c08 <line:17:17, col:25>     |       |   `-ParenExpr 0x120141be8 <col:23, col:25> 'int'     |       |     `-IntegerLiteral 0x120141bc8 <col:24> 'int' 0     |       `-CallExpr 0x120141f38 <line:18:13, line:19:36> '<dependent type>' contains-errors     |         |-DeclRefExpr 0x120141d18 <line:18:13> 'int ()' Function 0x120141c60 'dtls1_buffer_record' 'int ()'     |         |-RecoveryExpr 0x120141d38 <col:33> '<dependent type>' contains-errors lvalue     |         |-UnaryOperator 0x120141e28 <col:36, col:59> '<dependent type>' contains-errors prefix '&' cannot overflow     |         | `-ParenExpr 0x120141e08 <col:37, col:59> '<dependent type>' contains-errors lvalue     |         |   `-CXXDependentScopeMemberExpr 0x120141dc0 <col:38, col:45> '<dependent type>' contains-errors lvalue ->processed_rcds     |         |     `-CXXDependentScopeMemberExpr 0x120141d78 <col:38, col:41> '<dependent type>' contains-errors lvalue ->d1     |         |       `-RecoveryExpr 0x120141d58 <col:38> '<dependent type>' contains-errors lvalue     |         `-CXXDependentScopeMemberExpr 0x120141ef0 <line:19:17, col:29> '<dependent type>' contains-errors lvalue .seq_num     |           `-CXXDependentScopeMemberExpr 0x120141ea8 <col:17, col:24> '<dependent type>' contains-errors lvalue ->rrec     |             `-CXXDependentScopeMemberExpr 0x120141e60 <col:17, col:20> '<dependent type>' contains-errors lvalue ->s3     |               `-RecoveryExpr 0x120141e40 <col:17> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1201421c8 <line:24:5, col:42> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1201420d0 <col:5, col:27> '<dependent type>' contains-errors lvalue .epoch     | | `-CXXDependentScopeMemberExpr 0x120142088 <col:5, col:12> '<dependent type>' contains-errors lvalue ->processed_rcds     | |   `-CXXDependentScopeMemberExpr 0x120142040 <col:5, col:8> '<dependent type>' contains-errors lvalue ->d1     | |     `-RecoveryExpr 0x120142018 <col:5> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x120141ff8 <col:5> 'int *' lvalue ParmVar 0x120128128 's' 'int *'     | `-CXXDependentScopeMemberExpr 0x120142180 <col:35, col:42> '<dependent type>' contains-errors lvalue ->r_epoch     |   `-CXXDependentScopeMemberExpr 0x120142138 <col:35, col:38> '<dependent type>' contains-errors lvalue ->d1     |     `-RecoveryExpr 0x120142118 <col:35> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1201423f8 <line:25:5, col:54> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1201422c0 <col:5, col:29> '<dependent type>' contains-errors lvalue .epoch     | | `-CXXDependentScopeMemberExpr 0x120142278 <col:5, col:12> '<dependent type>' contains-errors lvalue ->unprocessed_rcds     | |   `-CXXDependentScopeMemberExpr 0x120142230 <col:5, col:8> '<dependent type>' contains-errors lvalue ->d1     | |     `-RecoveryExpr 0x120142208 <col:5> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x1201421e8 <col:5> 'int *' lvalue ParmVar 0x120128128 's' 'int *'     | `-BinaryOperator 0x1201423d8 <col:37, col:54> '<dependent type>' contains-errors '+'     |   |-CXXDependentScopeMemberExpr 0x120142370 <col:37, col:44> '<dependent type>' contains-errors lvalue ->r_epoch     |   | `-CXXDependentScopeMemberExpr 0x120142328 <col:37, col:40> '<dependent type>' contains-errors lvalue ->d1     |   |   `-RecoveryExpr 0x120142308 <col:37> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x1201423b8 <col:54> 'int' 1     `-ReturnStmt 0x120142458 <line:27:5, col:13>       `-ParenExpr 0x120142438 <col:11, col:13> 'int'         `-IntegerLiteral 0x120142418 <col:12> 'int' 1 ","19605":"`-FunctionDecl 0x136128358  line:1:1 invalid _rsvg_handle_allow_load 'int (int *, const char *, int **)'   |-ParmVarDecl 0x136128128 <col:26, col:38> col:38 invalid handle 'int *'   |-ParmVarDecl 0x1361281a8 <line:2:26, col:38> col:38 uri 'const char *'   |-ParmVarDecl 0x136128260 <line:3:26, col:35> col:35 invalid error 'int **'   `-CompoundStmt 0x136128578 <line:4:1, line:11:1>     |-IfStmt 0x136128510 <line:7:5, line:8:16>     | |-BinaryOperator 0x1361284a8 <line:7:9, col:19> 'int' contains-errors '=='     | | |-RecoveryExpr 0x136128468 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x136128488 <col:19> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x136128500 <line:8:9, col:16>     |   `-RecoveryExpr 0x1361284e0 <col:16> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x136128568 <line:10:5, col:12>       `-RecoveryExpr 0x136128548 <col:12> '<dependent type>' contains-errors lvalue ","20005":"`-FunctionDecl 0x148940b48  line:1:1 validate_event 'int (struct pmu_hw_events *, struct perf_event *)'   |-ParmVarDecl 0x148928648 <col:16, col:38> col:38 used hw_events 'struct pmu_hw_events *'   |-ParmVarDecl 0x148940a28 <line:2:9, col:28> col:28 used event 'struct perf_event *'   `-CompoundStmt 0x148941cb0 <line:3:1, line:18:1>     |-DeclStmt 0x148941010 <line:4:2, col:49>     | |-RecordDecl 0x148940c48 <col:2, col:9> col:9 struct arm_pmu     | `-VarDecl 0x148940db8 <col:2, col:48> col:18 used armpmu 'struct arm_pmu *' cinit     |   `-CallExpr 0x148940fd0 <col:27, col:48> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x148940f50 <col:27> 'int ()' Function 0x148940e98 'to_arm_pmu' 'int ()'     |     `-RecoveryExpr 0x148940fa8 <col:38, col:45> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x148940f70 <col:38> 'struct perf_event *' lvalue ParmVar 0x148940a28 'event' 'struct perf_event *'     |-DeclStmt 0x148941208 <line:5:2, col:45>     | |-RecordDecl 0x148941028 <col:2, col:9> col:9 struct hw_perf_event     | `-VarDecl 0x148941128 <col:2, col:23> col:23 invalid fake_event 'struct hw_perf_event'     |-DeclStmt 0x1489414b0 <line:6:2, col:51>     | |-RecordDecl 0x148941220 <col:2, col:9> col:9 struct pmu     | `-VarDecl 0x148941388 <col:2, col:48> col:14 used leader_pmu 'struct pmu *' cinit     |   `-CXXDependentScopeMemberExpr 0x148941450 <col:27, col:48> '<dependent type>' contains-errors lvalue ->pmu     |     `-RecoveryExpr 0x148941428 <col:27, col:34> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x1489413f0 <col:27> 'struct perf_event *' lvalue ParmVar 0x148940a28 'event' 'struct perf_event *'     |-IfStmt 0x1489416a8 <line:8:2, line:9:10>     | |-CallExpr 0x148941638 <line:8:6, col:29> 'int'     | | |-ImplicitCastExpr 0x148941620 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x1489415a8 <col:6> 'int ()' Function 0x1489414f0 'is_software_event' 'int ()'     | | `-ImplicitCastExpr 0x148941660 <col:24> 'struct perf_event *' <LValueToRValue>     | |   `-DeclRefExpr 0x1489415c8 <col:24> 'struct perf_event *' lvalue ParmVar 0x148940a28 'event' 'struct perf_event *'     | `-ReturnStmt 0x148941698 <line:9:3, col:10>     |   `-IntegerLiteral 0x148941678 <col:10> 'int' 1     |-IfStmt 0x1489418b0 <line:11:2, line:12:10>     | |-BinaryOperator 0x148941860 <line:11:6, col:49> 'int' contains-errors '||'     | | |-BinaryOperator 0x148941748 <col:6, col:20> 'int' contains-errors '!='     | | | |-RecoveryExpr 0x148941700 <col:6, col:13> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x1489416c8 <col:6> 'struct perf_event *' lvalue ParmVar 0x148940a28 'event' 'struct perf_event *'     | | | `-DeclRefExpr 0x148941728 <col:20> 'struct pmu *' contains-errors lvalue Var 0x148941388 'leader_pmu' 'struct pmu *'     | | `-BinaryOperator 0x148941840 <col:34, col:49> 'int' contains-errors '<'     | |   |-RecoveryExpr 0x1489417a0 <col:34, col:41> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x148941768 <col:34> 'struct perf_event *' lvalue ParmVar 0x148940a28 'event' 'struct perf_event *'     | |   `-RecoveryExpr 0x148941820 <col:49> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1489418a0 <line:12:3, col:10>     |   `-IntegerLiteral 0x148941880 <col:10> 'int' 1     |-IfStmt 0x148941b58 <line:14:2, line:15:10>     | |-BinaryOperator 0x148941b08 <line:14:6, col:59> 'int' contains-errors '&&'     | | |-BinaryOperator 0x148941ab8 <col:6, col:22> 'int' contains-errors '=='     | | | |-RecoveryExpr 0x148941908 <col:6, col:13> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x1489418d0 <col:6> 'struct perf_event *' lvalue ParmVar 0x148940a28 'event' 'struct perf_event *'     | | | `-RecoveryExpr 0x148941a98 <col:22> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x148941af0 <col:46, col:59> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x148941ad8 <col:47, col:59> '<dependent type>' contains-errors <LValueToRValue>     | |     `-CXXDependentScopeMemberExpr 0x148941a00 <col:47, col:59> '<dependent type>' contains-errors lvalue .enable_on_exec     | |       `-RecoveryExpr 0x1489419a0 <col:47, col:54> '<dependent type>' contains-errors lvalue     | |         `-DeclRefExpr 0x148941968 <col:47> 'struct perf_event *' lvalue ParmVar 0x148940a28 'event' 'struct perf_event *'     | `-ReturnStmt 0x148941b48 <line:15:3, col:10>     |   `-IntegerLiteral 0x148941b28 <col:10> 'int' 1     `-ReturnStmt 0x148941ca0 <line:17:2, col:58>       `-BinaryOperator 0x148941c80 <col:9, col:58> 'int' contains-errors '>='         |-CallExpr 0x148941c30 <col:9, col:53> '<dependent type>' contains-errors         | |-RecoveryExpr 0x148941bb0 <col:9, col:17> '<dependent type>' contains-errors lvalue         | | `-DeclRefExpr 0x148941b78 <col:9> 'struct arm_pmu *' contains-errors lvalue Var 0x148940db8 'armpmu' 'struct arm_pmu *'         | |-DeclRefExpr 0x148941bd8 <col:31> 'struct pmu_hw_events *' lvalue ParmVar 0x148928648 'hw_events' 'struct pmu_hw_events *'         | `-UnaryOperator 0x148941c18 <col:42, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow         |   `-RecoveryExpr 0x148941bf8 <col:43> '<dependent type>' contains-errors lvalue         `-IntegerLiteral 0x148941c60 <col:58> 'int' 0 ","19217":"`-FunctionDecl 0x121827e90  col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x121827f90 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x121827ff8 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x121828060 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x121827f38 <<invalid sloc>> Implicit 882 ","19674":"`-FunctionDecl 0x149826740  line:1:6 ion_unmap_kernel 'void (struct ion_client *, struct ion_handle *)'   |-ParmVarDecl 0x14980e248 <col:23, col:42> col:42 used client 'struct ion_client *'   |-ParmVarDecl 0x149826628 <col:50, col:69> col:69 used handle 'struct ion_handle *'   `-CompoundStmt 0x149827198 <line:2:1, line:11:1>     |-DeclStmt 0x149826a28 <line:3:2, col:27>     | |-RecordDecl 0x149826840 <col:2, col:9> col:9 struct ion_buffer     | `-VarDecl 0x1498269a8 <col:2, col:21> col:21 used buffer 'struct ion_buffer *'     |-CallExpr 0x149826c08 <line:5:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x149826b70 <col:2> 'int ()' Function 0x149826ab8 'mutex_lock' 'int ()'     | `-UnaryOperator 0x149826bf0 <col:13, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x149826bc8 <col:14, col:22> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x149826b90 <col:14> 'struct ion_client *' lvalue ParmVar 0x14980e248 'client' 'struct ion_client *'     |-BinaryOperator 0x149826cb0 <line:6:2, col:19> 'struct ion_buffer *' contains-errors '='     | |-DeclRefExpr 0x149826c30 <col:2> 'struct ion_buffer *' lvalue Var 0x1498269a8 'buffer' 'struct ion_buffer *'     | `-RecoveryExpr 0x149826c88 <col:11, col:19> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x149826c50 <col:11> 'struct ion_handle *' lvalue ParmVar 0x149826628 'handle' 'struct ion_handle *'     |-CallExpr 0x149826d68 <line:7:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x149826cd0 <col:2> 'int ()' Function 0x149826ab8 'mutex_lock' 'int ()'     | `-UnaryOperator 0x149826d50 <col:13, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x149826d28 <col:14, col:22> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x149826cf0 <col:14> 'struct ion_buffer *' lvalue Var 0x1498269a8 'buffer' 'struct ion_buffer *'     |-CallExpr 0x149826ef8 <line:8:2, col:28> 'int'     | |-ImplicitCastExpr 0x149826ee0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x149826e70 <col:2> 'int ()' Function 0x149826db8 'ion_handle_kmap_put' 'int ()'     | `-ImplicitCastExpr 0x149826f20 <col:22> 'struct ion_handle *' <LValueToRValue>     |   `-DeclRefExpr 0x149826e90 <col:22> 'struct ion_handle *' lvalue ParmVar 0x149826628 'handle' 'struct ion_handle *'     |-CallExpr 0x1498270b0 <line:9:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x149827018 <col:2> 'int ()' Function 0x149826f60 'mutex_unlock' 'int ()'     | `-UnaryOperator 0x149827098 <col:15, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x149827070 <col:16, col:24> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x149827038 <col:16> 'struct ion_buffer *' lvalue Var 0x1498269a8 'buffer' 'struct ion_buffer *'     `-CallExpr 0x149827170 <line:10:2, col:28> '<dependent type>' contains-errors       |-DeclRefExpr 0x1498270d8 <col:2> 'int ()' Function 0x149826f60 'mutex_unlock' 'int ()'       `-UnaryOperator 0x149827158 <col:15, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x149827130 <col:16, col:24> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x1498270f8 <col:16> 'struct ion_client *' lvalue ParmVar 0x14980e248 'client' 'struct ion_client *' ","19751":"`-FunctionDecl 0x15881a688  line:1:15 referenced invalid jas_stream_memopen 'int *(char *, int)'   |-ParmVarDecl 0x15881a4f0 <col:34, col:40> col:40 used buf 'char *'   |-ParmVarDecl 0x15881a570 <col:45, col:49> col:49 used bufsize 'int'   `-CompoundStmt 0x158834088 <line:2:1, line:60:1>     |-BinaryOperator 0x15881a7f8 <line:4:2, col:23> '<dependent type>' contains-errors '*'     | |-RecoveryExpr 0x15881a778 <col:2> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15881a758 <col:2> 'int *(char *, int)' Function 0x15881a688 'jas_stream_memopen' 'int *(char *, int)'     | `-RecoveryExpr 0x15881a7d8 <col:23> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15881aab8 <line:6:2, line:8:2>     | |-RecoveryExpr 0x15881aa38 <line:6:6, col:36> '_Bool' contains-errors     | `-CompoundStmt 0x15881aaa0 <col:39, line:8:2>     |   `-ReturnStmt 0x15881aa90 <line:7:3, col:10>     |     `-ImplicitCastExpr 0x15881aa78 <col:10> 'int *' <NullToPointer>     |       `-IntegerLiteral 0x15881aa58 <col:10> 'int' 0     |-CallExpr 0x1588335c8 <line:15:2, col:53> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1588334b8 <col:2> 'int ()' Function 0x158833400 'jas_stream_initbuf' 'int ()'     | |-RecoveryExpr 0x158833588 <col:21> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x1588335a8 <col:29> '<dependent type>' contains-errors lvalue     | |-IntegerLiteral 0x158833508 <col:49> 'int' 0     | `-IntegerLiteral 0x158833528 <col:52> 'int' 0     |-IfStmt 0x158833a20 <line:21:2, line:24:2>     | |-RecoveryExpr 0x1588338a0 <line:21:6, col:53> '_Bool' contains-errors     | `-CompoundStmt 0x158833a08 <col:56, line:24:2>     |   `-ReturnStmt 0x1588339f8 <line:23:3, col:10>     |     `-ImplicitCastExpr 0x1588339e0 <col:10> 'int *' <NullToPointer>     |       `-IntegerLiteral 0x1588339c0 <col:10> 'int' 0     |-IfStmt 0x158833b98 <line:32:2, line:38:2> has_else     | |-BinaryOperator 0x158833ad8 <line:32:6, col:17> 'int' '<='     | | |-ImplicitCastExpr 0x158833ac0 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x158833a80 <col:6> 'int' lvalue ParmVar 0x15881a570 'bufsize' 'int'     | | `-IntegerLiteral 0x158833aa0 <col:17> 'int' 0     | |-CompoundStmt 0x158833b38 <col:20, line:35:2>     | `-CompoundStmt 0x158833b88 <col:9, line:38:2>     |-IfStmt 0x158833d38 <line:39:2, line:44:2> has_else     | |-ImplicitCastExpr 0x158833be8 <line:39:6> 'char *' <LValueToRValue>     | | `-DeclRefExpr 0x158833bc8 <col:6> 'char *' lvalue ParmVar 0x15881a4f0 'buf' 'char *'     | |-CompoundStmt 0x158833ca8 <col:11, line:41:2>     | `-CompoundStmt 0x158833d28 <col:9, line:44:2>     |-IfStmt 0x158833ee8 <line:45:2, line:48:2>     | |-RecoveryExpr 0x158833d68 <line:45:6, col:12> '_Bool' contains-errors     | `-CompoundStmt 0x158833ed0 <col:18, line:48:2>     |   `-ReturnStmt 0x158833ec0 <line:47:3, col:10>     |     `-ImplicitCastExpr 0x158833ea8 <col:10> 'int *' <NullToPointer>     |       `-IntegerLiteral 0x158833e88 <col:10> 'int' 0     `-IfStmt 0x158834038 <line:50:2, line:56:2> has_else       |-BinaryOperator 0x158833fb8 <line:50:6, col:21> 'int' '&&'       | |-BinaryOperator 0x158833f60 <col:6, col:16> 'int' '>'       | | |-ImplicitCastExpr 0x158833f48 <col:6> 'int' <LValueToRValue>       | | | `-DeclRefExpr 0x158833f08 <col:6> 'int' lvalue ParmVar 0x15881a570 'bufsize' 'int'       | | `-IntegerLiteral 0x158833f28 <col:16> 'int' 0       | `-ImplicitCastExpr 0x158833fa0 <col:21> 'char *' <LValueToRValue>       |   `-DeclRefExpr 0x158833f80 <col:21> 'char *' lvalue ParmVar 0x15881a4f0 'buf' 'char *'       |-CompoundStmt 0x158833ff8 <col:26, line:53:2>       `-CompoundStmt 0x158834028 <col:9, line:56:2> ","19533":"`-FunctionDecl 0x15c128238  line:1:1 SPL_METHOD 'int (int, int)'   |-ParmVarDecl 0x15c128158 <col:12> col:12 SplDoublyLinkedList 'int'   |-ParmVarDecl 0x15c1280d8 <col:33> col:33 valid 'int'   `-CompoundStmt 0x15c140af8 <line:2:1, line:10:1>     |-IfStmt 0x15c128628 <line:5:2, line:7:2>     | |-BinaryOperator 0x15c1285e0 <line:5:6, col:38> 'int' contains-errors '=='     | | |-CallExpr 0x15c1285a0 <col:6, col:33> 'int'     | | | `-ImplicitCastExpr 0x15c128588 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | |   `-DeclRefExpr 0x15c128490 <col:6> 'int ()' Function 0x15c1283d8 'zend_parse_parameters_none' 'int ()'     | | `-RecoveryExpr 0x15c1285c0 <col:38> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x15c128610 <col:47, line:7:2>     |   `-ReturnStmt 0x15c128600 <line:6:3>     `-CallExpr 0x15c140ad0 <line:9:2, col:46> '<dependent type>' contains-errors       |-DeclRefExpr 0x15c128728 <col:2> 'int ()' Function 0x15c128670 'RETURN_BOOL' 'int ()'       `-BinaryOperator 0x15c140ab0 <col:14, col:42> 'int' contains-errors '!='         |-CXXDependentScopeMemberExpr 0x15c140a48 <col:14, col:22> '<dependent type>' contains-errors lvalue ->traverse_pointer         | `-RecoveryExpr 0x15c140a28 <col:14> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x15c140a90 <col:42> '<dependent type>' contains-errors lvalue ","19811":"`-FunctionDecl 0x1310fcba8  line:1:1 run_sigchld_trap 'int (int)'   |-ParmVarDecl 0x1310fcad8 <line:2:6, col:10> col:10 used nchild 'int'   `-CompoundStmt 0x13082ee98 <line:3:1, line:41:1>     |-DeclStmt 0x1310fcd20 <line:4:3, col:21>     | `-VarDecl 0x1310fccb8 <col:3, col:9> col:9 used trap_command 'char *'     |-DeclStmt 0x1310fcdb8 <line:5:3, col:8>     | `-VarDecl 0x1310fcd50 <col:3, col:7> col:7 used i 'int'     |-CallExpr 0x1310fd118 <line:10:3, col:28> 'int'     | |-ImplicitCastExpr 0x1310fd100 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1310fd050 <col:3> 'int ()' Function 0x1310fcf98 'begin_unwind_frame' 'int ()'     | `-ImplicitCastExpr 0x1310fd140 <col:23> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x1310fd0b0 <col:23> 'char[4]' lvalue \"STR\"     |-CallExpr 0x131115538 <line:11:3, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1311154b8 <col:3> 'int ()' Function 0x131115400 'unwind_protect_int' 'int ()'     | `-RecoveryExpr 0x131115518 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1311155e0 <line:12:3, col:47> '<dependent type>' contains-errors     | |-DeclRefExpr 0x131115560 <col:3> 'int ()' Function 0x131115400 'unwind_protect_int' 'int ()'     | `-RecoveryExpr 0x1311155c0 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x131115768 <line:13:3, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1311156e8 <col:3> 'int ()' Function 0x131115630 'unwind_protect_var' 'int ()'     | `-RecoveryExpr 0x131115748 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x131115810 <line:14:3, col:44> '<dependent type>' contains-errors     | |-DeclRefExpr 0x131115790 <col:3> 'int ()' Function 0x131115400 'unwind_protect_int' 'int ()'     | `-RecoveryExpr 0x1311157f0 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1311158b8 <line:15:3, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x131115838 <col:3> 'int ()' Function 0x131115400 'unwind_protect_int' 'int ()'     | `-RecoveryExpr 0x131115898 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x131115a40 <line:16:3, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1311159c0 <col:3> 'int ()' Function 0x131115908 'unwind_protect_pointer' 'int ()'     | `-RecoveryExpr 0x131115a20 <col:27> '<dependent type>' contains-errors lvalue     |-CallExpr 0x131115ae8 <line:17:3, col:47> '<dependent type>' contains-errors     | |-DeclRefExpr 0x131115a68 <col:3> 'int ()' Function 0x131115908 'unwind_protect_pointer' 'int ()'     | `-RecoveryExpr 0x131115ac8 <col:27> '<dependent type>' contains-errors lvalue     |-CallExpr 0x131115b90 <line:18:3, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x131115b10 <col:3> 'int ()' Function 0x131115908 'unwind_protect_pointer' 'int ()'     | `-RecoveryExpr 0x131115b70 <col:27> '<dependent type>' contains-errors lvalue     |-CallExpr 0x131115d40 <line:21:3, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x131115c98 <col:3> 'int ()' Function 0x131115be0 'add_unwind_protect' 'int ()'     | |-RecoveryExpr 0x131115d20 <col:23> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x131115cd0 <col:30> 'char *' lvalue Var 0x1310fccb8 'trap_command' 'char *'     |-CallExpr 0x131115e18 <line:22:3, col:59> '<dependent type>' contains-errors     | |-DeclRefExpr 0x131115d70 <col:3> 'int ()' Function 0x131115be0 'add_unwind_protect' 'int ()'     | |-RecoveryExpr 0x131115df8 <col:23> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x131115da8 <col:47> 'char *' lvalue Var 0x1310fccb8 'trap_command' 'char *'     |-CallExpr 0x131115f80 <line:29:3, col:32> 'int'     | `-ImplicitCastExpr 0x131115f68 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x131115f48 <col:3> 'int ()' Function 0x131115e90 'set_impossible_sigchld_trap' 'int ()'     |-ForStmt 0x1311162b0 <line:31:3, line:37:5>     | |-BinaryOperator 0x131116000 <line:31:8, col:12> 'int' '='     | | |-DeclRefExpr 0x131115fc0 <col:8> 'int' lvalue Var 0x1310fcd50 'i' 'int'     | | `-IntegerLiteral 0x131115fe0 <col:12> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x131116090 <col:15, col:19> 'int' '<'     | | |-ImplicitCastExpr 0x131116060 <col:15> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x131116020 <col:15> 'int' lvalue Var 0x1310fcd50 'i' 'int'     | | `-ImplicitCastExpr 0x131116078 <col:19> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x131116040 <col:19> 'int' lvalue ParmVar 0x1310fcad8 'nchild' 'int'     | |-UnaryOperator 0x1311160d0 <col:27, col:28> 'int' postfix '++'     | | `-DeclRefExpr 0x1311160b0 <col:27> 'int' lvalue Var 0x1310fcd50 'i' 'int'     | `-CompoundStmt 0x1311162a0 <line:32:5, line:37:5>     `-CallExpr 0x13082ee38 <line:39:3, col:26> 'int'       |-ImplicitCastExpr 0x13082ee20 <col:3> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x1311163c8 <col:3> 'int ()' Function 0x131116310 'run_unwind_frame' 'int ()'       `-ImplicitCastExpr 0x13082ee60 <col:21> 'char *' <ArrayToPointerDecay>         `-StringLiteral 0x13082ee00 <col:21> 'char[4]' lvalue \"STR\" ","19854":"`-FunctionDecl 0x133941108  line:1:21 selinux_ipv4_output 'unsigned int (const struct nf_hook_ops *, struct sk_buff *, const struct net_device *, const struct net_device *, int (*)(struct sk_buff *))' static   |-ParmVarDecl 0x133928648 <col:41, col:67> col:67 ops 'const struct nf_hook_ops *'   |-ParmVarDecl 0x133940a28 <line:2:6, col:22> col:22 used skb 'struct sk_buff *'   |-ParmVarDecl 0x133940bf8 <line:3:6, col:31> col:31 in 'const struct net_device *'   |-ParmVarDecl 0x133940ce8 <line:4:6, col:31> col:31 out 'const struct net_device *'   |-ParmVarDecl 0x133940f90 <line:5:6, col:34> col:12 okfn 'int (*)(struct sk_buff *)'   `-CompoundStmt 0x133941438 <line:6:1, line:8:1>     `-ReturnStmt 0x133941428 <line:7:2, col:39>       `-CallExpr 0x1339413f8 <col:9, col:39> '<dependent type>' contains-errors         |-DeclRefExpr 0x133941350 <col:9> 'int ()' Function 0x133941298 'selinux_ip_output' 'int ()'         |-DeclRefExpr 0x133941370 <col:27> 'struct sk_buff *' lvalue ParmVar 0x133940a28 'skb' 'struct sk_buff *'         `-RecoveryExpr 0x1339413d8 <col:32> '<dependent type>' contains-errors lvalue ","20089":"`-FunctionDecl 0x12b00aa08  col:7 implicit used exit 'void (int) __attribute__((noreturn))' extern   |-ParmVarDecl 0x12b00ab08 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x12b00aab0 <<invalid sloc>> Implicit 869 ","19499":"`-FunctionDecl 0x135928258  line:1:11 invalid parseKey 'char *(char *, int)'   |-ParmVarDecl 0x1359280d8 <col:21, col:27> col:27 used ptr 'char *'   |-ParmVarDecl 0x135928170 <col:32, <invalid sloc>> col:40 invalid 'int'   `-CompoundStmt 0x1359421c0 <line:2:5, line:27:5>     |-DeclStmt 0x135928388 <line:3:9, col:15>     | `-VarDecl 0x135928320 <col:9, col:14> col:14 used c 'char'     |-DeclStmt 0x135928530 <line:4:9, col:41>     | |-VarDecl 0x1359283b8 <col:9, col:30> col:15 used endptr 'char *' cinit     | | `-BinaryOperator 0x135928478 <col:24, col:30> 'char *' '-'     | |   |-ImplicitCastExpr 0x135928460 <col:24> 'char *' <LValueToRValue>     | |   | `-DeclRefExpr 0x135928420 <col:24> 'char *' lvalue ParmVar 0x1359280d8 'ptr' 'char *'     | |   `-IntegerLiteral 0x135928440 <col:30> 'int' 1     | `-VarDecl 0x1359284b0 <col:9, col:34> col:34 used saveptr 'char *'     |-IfStmt 0x135941888 <line:6:9, line:7:39>     | |-BinaryOperator 0x1359285e0 <line:6:13, col:21> 'int' '=='     | | |-ImplicitCastExpr 0x1359285c8 <col:13, col:14> 'int' <IntegralCast>     | | | `-ImplicitCastExpr 0x1359285b0 <col:13, col:14> 'char' <LValueToRValue>     | | |   `-UnaryOperator 0x135928580 <col:13, col:14> 'char' lvalue prefix '*' cannot overflow     | | |     `-ImplicitCastExpr 0x135928568 <col:14> 'char *' <LValueToRValue>     | | |       `-DeclRefExpr 0x135928548 <col:14> 'char *' lvalue ParmVar 0x1359280d8 'ptr' 'char *'     | | `-CharacterLiteral 0x135928598 <col:21> 'int' 45     | `-CallExpr 0x135941848 <line:7:13, col:39> 'int'     |   |-ImplicitCastExpr 0x135941830 <col:13> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x135928760 <col:13> 'int ()' Function 0x1359286a8 'CV_PARSE_ERROR_CPP' 'int ()'     |   `-ImplicitCastExpr 0x135941870 <col:33> 'char *' <ArrayToPointerDecay>     |     `-StringLiteral 0x1359287c0 <col:33> 'char[4]' lvalue \"STR\"     |-DoStmt 0x135941b88 <line:9:9, line:10:42>     | |-BinaryOperator 0x135941930 <line:9:12, col:19> 'char' '='     | | |-DeclRefExpr 0x1359418a8 <col:12> 'char' lvalue Var 0x135928320 'c' 'char'     | | `-ImplicitCastExpr 0x135941918 <col:16, col:19> 'char' <LValueToRValue>     | |   `-UnaryOperator 0x135941900 <col:16, col:19> 'char' lvalue prefix '*' cannot overflow     | |     `-UnaryOperator 0x1359418e8 <col:17, col:19> 'char *' prefix '++'     | |       `-DeclRefExpr 0x1359418c8 <col:19> 'char *' lvalue Var 0x1359283b8 'endptr' 'char *'     | `-BinaryOperator 0x135941b68 <line:10:16, col:38> 'int' '&&'     |   |-CallExpr 0x135941a88 <col:16, col:28> 'int'     |   | |-ImplicitCastExpr 0x135941a70 <col:16> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x135941a30 <col:16> 'int ()' Function 0x135941978 'cv_isprint' 'int ()'     |   | `-ImplicitCastExpr 0x135941ac8 <col:27> 'int' <IntegralCast>     |   |   `-ImplicitCastExpr 0x135941ab0 <col:27> 'char' <LValueToRValue>     |   |     `-DeclRefExpr 0x135941a50 <col:27> 'char' lvalue Var 0x135928320 'c' 'char'     |   `-BinaryOperator 0x135941b48 <col:33, col:38> 'int' '!='     |     |-ImplicitCastExpr 0x135941b30 <col:33> 'int' <IntegralCast>     |     | `-ImplicitCastExpr 0x135941b18 <col:33> 'char' <LValueToRValue>     |     |   `-DeclRefExpr 0x135941ae0 <col:33> 'char' lvalue Var 0x135928320 'c' 'char'     |     `-CharacterLiteral 0x135941b00 <col:38> 'int' 58     |-IfStmt 0x135941cc8 <line:12:9, line:13:39>     | |-BinaryOperator 0x135941c10 <line:12:13, col:18> 'int' '!='     | | |-ImplicitCastExpr 0x135941bf8 <col:13> 'int' <IntegralCast>     | | | `-ImplicitCastExpr 0x135941be0 <col:13> 'char' <LValueToRValue>     | | |   `-DeclRefExpr 0x135941ba8 <col:13> 'char' lvalue Var 0x135928320 'c' 'char'     | | `-CharacterLiteral 0x135941bc8 <col:18> 'int' 58     | `-CallExpr 0x135941c88 <line:13:13, col:39> 'int'     |   |-ImplicitCastExpr 0x135941c70 <col:13> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x135941c30 <col:13> 'int ()' Function 0x1359286a8 'CV_PARSE_ERROR_CPP' 'int ()'     |   `-ImplicitCastExpr 0x135941cb0 <col:33> 'char *' <ArrayToPointerDecay>     |     `-StringLiteral 0x135941c50 <col:33> 'char[4]' lvalue \"STR\"     |-BinaryOperator 0x135941d80 <line:15:9, col:28> 'char *' '='     | |-DeclRefExpr 0x135941ce8 <col:9> 'char *' lvalue Var 0x1359284b0 'saveptr' 'char *'     | `-BinaryOperator 0x135941d60 <col:19, col:28> 'char *' '+'     |   |-ImplicitCastExpr 0x135941d48 <col:19> 'char *' <LValueToRValue>     |   | `-DeclRefExpr 0x135941d08 <col:19> 'char *' lvalue Var 0x1359283b8 'endptr' 'char *'     |   `-IntegerLiteral 0x135941d28 <col:28> 'int' 1     |-DoStmt 0x135941ed0 <line:16:9, line:17:25>     | |-BinaryOperator 0x135941e28 <line:16:12, col:19> 'char' '='     | | |-DeclRefExpr 0x135941da0 <col:12> 'char' lvalue Var 0x135928320 'c' 'char'     | | `-ImplicitCastExpr 0x135941e10 <col:16, col:19> 'char' <LValueToRValue>     | |   `-UnaryOperator 0x135941df8 <col:16, col:19> 'char' lvalue prefix '*' cannot overflow     | |     `-UnaryOperator 0x135941de0 <col:17, col:19> 'char *' prefix '--'     | |       `-DeclRefExpr 0x135941dc0 <col:19> 'char *' lvalue Var 0x1359283b8 'endptr' 'char *'     | `-BinaryOperator 0x135941eb0 <line:17:16, col:21> 'int' '=='     |   |-ImplicitCastExpr 0x135941e98 <col:16> 'int' <IntegralCast>     |   | `-ImplicitCastExpr 0x135941e80 <col:16> 'char' <LValueToRValue>     |   |   `-DeclRefExpr 0x135941e48 <col:16> 'char' lvalue Var 0x135928320 'c' 'char'     |   `-CharacterLiteral 0x135941e68 <col:21> 'int' 32     |-UnaryOperator 0x135941f10 <line:19:9, col:11> 'char *' prefix '++'     | `-DeclRefExpr 0x135941ef0 <col:11> 'char *' lvalue Var 0x1359283b8 'endptr' 'char *'     |-IfStmt 0x135942050 <line:20:9, line:21:39>     | |-BinaryOperator 0x135941f98 <line:20:13, col:23> 'int' '=='     | | |-ImplicitCastExpr 0x135941f68 <col:13> 'char *' <LValueToRValue>     | | | `-DeclRefExpr 0x135941f28 <col:13> 'char *' lvalue Var 0x1359283b8 'endptr' 'char *'     | | `-ImplicitCastExpr 0x135941f80 <col:23> 'char *' <LValueToRValue>     | |   `-DeclRefExpr 0x135941f48 <col:23> 'char *' lvalue ParmVar 0x1359280d8 'ptr' 'char *'     | `-CallExpr 0x135942010 <line:21:13, col:39> 'int'     |   |-ImplicitCastExpr 0x135941ff8 <col:13> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x135941fb8 <col:13> 'int ()' Function 0x1359286a8 'CV_PARSE_ERROR_CPP' 'int ()'     |   `-ImplicitCastExpr 0x135942038 <col:33> 'char *' <ArrayToPointerDecay>     |     `-StringLiteral 0x135941fd8 <col:33> 'char[4]' lvalue \"STR\"     |-BinaryOperator 0x135942158 <line:24:9, col:15> 'char *' '='     | |-DeclRefExpr 0x135942100 <col:9> 'char *' lvalue ParmVar 0x1359280d8 'ptr' 'char *'     | `-ImplicitCastExpr 0x135942140 <col:15> 'char *' <LValueToRValue>     |   `-DeclRefExpr 0x135942120 <col:15> 'char *' lvalue Var 0x1359284b0 'saveptr' 'char *'     `-ReturnStmt 0x1359421b0 <line:26:9, col:16>       `-ImplicitCastExpr 0x135942198 <col:16> 'char *' <LValueToRValue>         `-DeclRefExpr 0x135942178 <col:16> 'char *' lvalue ParmVar 0x1359280d8 'ptr' 'char *' ","20079":"`-FunctionDecl 0x13780dfa8  line:1:5 invalid gf_base64_encode 'int (const int *, int, int *, int)'   |-ParmVarDecl 0x13780dcf0 <col:22, col:32> col:32 invalid _in 'const int *'   |-ParmVarDecl 0x13780dd70 <col:37, col:41> col:41 invalid inSize 'int'   |-ParmVarDecl 0x13780de28 <col:49, col:53> col:53 invalid _out 'int *'   |-ParmVarDecl 0x13780dea8 <col:59, col:63> col:63 invalid outSize 'int'   `-CompoundStmt 0x137828ff8 <line:2:1, line:32:1>     |-DeclStmt 0x13780e180 <line:5:2, col:42>     | `-VarDecl 0x13780e0b8 <col:2, col:39> col:17 used in 'unsigned char *' cinit     |   `-CStyleCastExpr 0x13780e158 <col:22, col:39> 'unsigned char *' contains-errors <Dependent>     |     `-RecoveryExpr 0x13780e120 <col:39> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x13780e278 <line:6:2, col:44>     | `-VarDecl 0x13780e1b0 <col:2, col:40> col:17 used out 'unsigned char *' cinit     |   `-CStyleCastExpr 0x13780e250 <col:23, col:40> 'unsigned char *' contains-errors <Dependent>     |     `-RecoveryExpr 0x13780e218 <col:40> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13780e3c0 <line:8:2, col:41>     | |-BinaryOperator 0x13780e370 <col:6, col:31> 'int' contains-errors '<'     | | |-RecoveryExpr 0x13780e290 <col:6> '<dependent type>' contains-errors lvalue     | | `-ParenExpr 0x13780e350 <col:16, col:31> '<dependent type>' contains-errors     | |   `-BinaryOperator 0x13780e330 <col:17, col:30> '<dependent type>' contains-errors '\/'     | |     |-BinaryOperator 0x13780e2f0 <col:17, col:26> '<dependent type>' contains-errors '*'     | |     | |-RecoveryExpr 0x13780e2b0 <col:17> '<dependent type>' contains-errors lvalue     | |     | `-IntegerLiteral 0x13780e2d0 <col:26> 'int' 4     | |     `-IntegerLiteral 0x13780e310 <col:30> 'int' 3     | `-ReturnStmt 0x13780e3b0 <col:34, col:41>     |   `-IntegerLiteral 0x13780e390 <col:41> 'int' 0     `-WhileStmt 0x137828fd8 <line:10:2, line:30:2>       |-BinaryOperator 0x137828460 <line:10:9, col:13> 'int' contains-errors '<'       | |-RecoveryExpr 0x137828440 <col:9> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x137828400 <col:13> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x137828fc0 <col:21, line:30:2>         `-IfStmt 0x137828f50 <line:12:3, line:27:3> has_else           |-BinaryOperator 0x137828570 <line:12:7, col:18> 'int' contains-errors '=='           | |-RecoveryExpr 0x137828550 <col:7> '<dependent type>' contains-errors lvalue           | `-IntegerLiteral 0x137828510 <col:18> 'int' 2           |-CompoundStmt 0x137828860 <col:21, line:17:3>           `-IfStmt 0x137828f20 <col:10, line:27:3> has_else             |-BinaryOperator 0x1378288e8 <line:17:14, col:25> 'int' contains-errors '=='             | |-RecoveryExpr 0x1378288c8 <col:14> '<dependent type>' contains-errors lvalue             | `-IntegerLiteral 0x137828888 <col:25> 'int' 1             |-CompoundStmt 0x137828ba0 <col:28, line:22:3>             `-CompoundStmt 0x137828f10 <col:10, line:27:3> ","19514":"`-FunctionDecl 0x13c128288  line:1:12 invalid imap_save_to_header_cache 'int (int *, int *)' static   |-ParmVarDecl 0x13c128128 <col:39, col:48> col:48 invalid ctx 'int *'   |-ParmVarDecl 0x13c1281a8 <col:53, col:61> col:61 invalid h 'int *'   `-CompoundStmt 0x13c128440 <line:2:1, line:18:1>     |-DeclStmt 0x13c1283e0 <line:3:3, col:13>     | `-VarDecl 0x13c128358 <col:3, col:12> col:7 used rc 'int' cinit     |   `-IntegerLiteral 0x13c1283c0 <col:12> 'int' 0     `-ReturnStmt 0x13c128430 <line:17:3, col:10>       `-ImplicitCastExpr 0x13c128418 <col:10> 'int' <LValueToRValue>         `-DeclRefExpr 0x13c1283f8 <col:10> 'int' lvalue Var 0x13c128358 'rc' 'int' ","19866":"`-FunctionDecl 0x142141830  line:1:13 invalid sctp_cmd_hb_timers_start 'void (int *, struct sctp_association *)' static   |-ParmVarDecl 0x142128128 <col:38, col:54> col:54 invalid cmds 'int *'   |-ParmVarDecl 0x142128718 <line:2:10, col:35> col:35 used asoc 'struct sctp_association *'   `-CompoundStmt 0x142142310 <line:3:1, line:12:1>     |-DeclStmt 0x142141ad8 <line:4:2, col:26>     | |-RecordDecl 0x1421418e8 <col:2, col:9> col:9 struct sctp_transport     | `-VarDecl 0x142141a58 <col:2, col:25> col:25 used t 'struct sctp_transport *'     |-CallExpr 0x142141dc0 <line:7:2, col:68> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142141c50 <col:2> 'int ()' Function 0x142141b98 'list_for_each_entry' 'int ()'     | |-DeclRefExpr 0x142141c70 <col:22> 'struct sctp_transport *' lvalue Var 0x142141a58 't' 'struct sctp_transport *'     | |-UnaryOperator 0x142141d38 <col:25, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x142141cf0 <col:26, col:37> '<dependent type>' contains-errors lvalue .transport_addr_list     | |   `-RecoveryExpr 0x142141cc8 <col:26, col:32> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x142141c90 <col:26> 'struct sctp_association *' lvalue ParmVar 0x142128718 'asoc' 'struct sctp_association *'     | `-RecoveryExpr 0x142141da0 <col:58> '<dependent type>' contains-errors lvalue     `-CompoundStmt 0x1421422f8 <col:70, line:11:2>       `-IfStmt 0x1421422d8 <line:9:3, line:10:25>         |-UnaryOperator 0x142142148 <line:9:7, col:57> '<dependent type>' contains-errors prefix '!' cannot overflow         | `-CallExpr 0x142142118 <col:8, col:57> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x142141ed8 <col:8> 'int ()' Function 0x142141e20 'mod_timer' 'int ()'         |   |-UnaryOperator 0x142141f58 <col:18, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow         |   | `-RecoveryExpr 0x142141f30 <col:19, col:22> '<dependent type>' contains-errors lvalue         |   |   `-DeclRefExpr 0x142141ef8 <col:19> 'struct sctp_transport *' lvalue Var 0x142141a58 't' 'struct sctp_transport *'         |   `-CallExpr 0x1421420d8 <col:32, col:56> 'int'         |     |-ImplicitCastExpr 0x1421420c0 <col:32> 'int (*)()' <FunctionToPointerDecay>         |     | `-DeclRefExpr 0x142142050 <col:32> 'int ()' Function 0x142141f98 'sctp_transport_timeout' 'int ()'         |     `-ImplicitCastExpr 0x142142100 <col:55> 'struct sctp_transport *' <LValueToRValue>         |       `-DeclRefExpr 0x142142070 <col:55> 'struct sctp_transport *' lvalue Var 0x142141a58 't' 'struct sctp_transport *'         `-CallExpr 0x142142298 <line:10:4, col:25> 'int'           |-ImplicitCastExpr 0x142142280 <col:4> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x142142240 <col:4> 'int ()' Function 0x142142188 'sctp_transport_hold' 'int ()'           `-ImplicitCastExpr 0x1421422c0 <col:24> 'struct sctp_transport *' <LValueToRValue>             `-DeclRefExpr 0x142142260 <col:24> 'struct sctp_transport *' lvalue Var 0x142141a58 't' 'struct sctp_transport *' ","19543":"`-FunctionDecl 0x12b916ff8  col:3 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x12b9170f8 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x12b9170a0 <<invalid sloc>> Implicit 873 ","19611":"`-FunctionDecl 0x1531281f8  line:1:24 invalid pn_ssl_resume_status 'int (int *)'   |-ParmVarDecl 0x153128128 <col:45, col:55> col:55 referenced invalid ssl0 'int *'   `-CompoundStmt 0x153141b48 <line:2:1, line:11:1>     |-IfStmt 0x153128710 <line:4:3, col:33>     | |-BinaryOperator 0x1531286a8 <col:7, col:21> 'int' contains-errors '||'     | | |-UnaryOperator 0x1531285f8 <col:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x1531285e0 <col:8> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-RecoveryExpr 0x1531285c0 <col:8> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x153128690 <col:15, col:21> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x153128678 <col:16, col:21> '<dependent type>' contains-errors <LValueToRValue>     | |     `-CXXDependentScopeMemberExpr 0x153128630 <col:16, col:21> '<dependent type>' contains-errors lvalue ->ssl     | |       `-RecoveryExpr 0x153128610 <col:16> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x153128700 <col:26, col:33>     |   `-RecoveryExpr 0x1531286e0 <col:33> '<dependent type>' contains-errors lvalue     |-SwitchStmt 0x153141968 <line:5:3, line:9:3>     | |-CallExpr 0x153141940 <line:5:11, col:40> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x153141810 <col:11> 'int ()' Function 0x153128758 'SSL_session_reused' 'int ()'     | | `-CXXDependentScopeMemberExpr 0x1531418f8 <col:31, col:36> '<dependent type>' contains-errors lvalue ->ssl     | |   `-RecoveryExpr 0x1531418d8 <col:31> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x153141ad8 <col:43, line:9:3>     |   |-CaseStmt 0x1531419b0 <line:6:4, col:19>     |   | |-IntegerLiteral 0x153141990 <col:9> 'int' 0     |   | `-ReturnStmt 0x153141a10 <col:12, col:19>     |   |   `-RecoveryExpr 0x1531419f0 <col:19> '<dependent type>' contains-errors lvalue     |   |-CaseStmt 0x153141a40 <line:7:4, col:19>     |   | |-IntegerLiteral 0x153141a20 <col:9> 'int' 1     |   | `-ReturnStmt 0x153141aa0 <col:12, col:19>     |   |   `-RecoveryExpr 0x153141a80 <col:19> '<dependent type>' contains-errors lvalue     |   `-DefaultStmt 0x153141ab8 <line:8:4, col:13>     |     `-BreakStmt 0x153141ab0 <col:13>     `-ReturnStmt 0x153141b38 <line:10:3, col:10>       `-RecoveryExpr 0x153141b18 <col:10> '<dependent type>' contains-errors lvalue ","19643":"`-FunctionDecl 0x124945178  col:2 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x124945278 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x124945220 <<invalid sloc>> Implicit 873 ","19243":"`-FunctionDecl 0x1468274d8  line:1:1 invalid setint_n 'int (struct tbl *, int, int)'   |-ParmVarDecl 0x14680e248 <col:10, col:22> col:22 used vq 'struct tbl *'   |-ParmVarDecl 0x14680e2e0 <col:26, col:37> col:37 invalid num 'int'   |-ParmVarDecl 0x14680e360 <col:42, col:46> col:46 used newbase 'int'   `-CompoundStmt 0x146828218 <line:2:1, line:14:1>     |-IfStmt 0x146827bc0 <line:3:2, line:7:2>     | |-RecoveryExpr 0x1468276c8 <line:3:6, col:48> '_Bool' contains-errors     | `-CompoundStmt 0x146827b98 <col:51, line:7:2>     |   |-CompoundAssignOperator 0x146827810 <line:4:3, col:16> '<dependent type>' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   | |-RecoveryExpr 0x146827720 <col:3, col:7> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x1468276e8 <col:3> 'struct tbl *' lvalue ParmVar 0x14680e248 'vq' 'struct tbl *'     |   | `-UnaryOperator 0x1468277f8 <col:15, col:16> '<dependent type>' contains-errors prefix '~' cannot overflow     |   |   `-ImplicitCastExpr 0x1468277e0 <col:16> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x1468277c0 <col:16> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x1468278c0 <line:5:3, col:14> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x146827878 <col:3, col:7> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x146827840 <col:3> 'struct tbl *' lvalue ParmVar 0x14680e248 'vq' 'struct tbl *'     |   | `-IntegerLiteral 0x1468278a0 <col:14> 'int' 0     |   `-CallExpr 0x146827b68 <line:6:3, col:29> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x146827a40 <col:3> 'int ()' Function 0x146827988 'afree' 'int ()'     |     |-CXXDependentScopeMemberExpr 0x146827ac0 <col:9, col:17> '<dependent type>' contains-errors lvalue .s     |     | `-RecoveryExpr 0x146827a98 <col:9, col:13> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x146827a60 <col:9> 'struct tbl *' lvalue ParmVar 0x14680e248 'vq' 'struct tbl *'     |     `-RecoveryExpr 0x146827b40 <col:20, col:24> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x146827b08 <col:20> 'struct tbl *' lvalue ParmVar 0x14680e248 'vq' 'struct tbl *'     |-BinaryOperator 0x146827ca8 <line:8:2, col:14> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x146827c40 <col:2, col:10> '<dependent type>' contains-errors lvalue .i     | | `-RecoveryExpr 0x146827c18 <col:2, col:6> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x146827be0 <col:2> 'struct tbl *' lvalue ParmVar 0x14680e248 'vq' 'struct tbl *'     | `-RecoveryExpr 0x146827c88 <col:14> '<dependent type>' contains-errors lvalue     |-IfStmt 0x146827de0 <line:9:2, line:10:14>     | |-BinaryOperator 0x146827d20 <line:9:6, col:17> 'int' '!='     | | |-ImplicitCastExpr 0x146827d08 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x146827cc8 <col:6> 'int' lvalue ParmVar 0x14680e360 'newbase' 'int'     | | `-IntegerLiteral 0x146827ce8 <col:17> 'int' 0     | `-BinaryOperator 0x146827dc0 <line:10:3, col:14> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x146827d78 <col:3, col:7> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x146827d40 <col:3> 'struct tbl *' lvalue ParmVar 0x14680e248 'vq' 'struct tbl *'     |   `-DeclRefExpr 0x146827da0 <col:14> 'int' lvalue ParmVar 0x14680e360 'newbase' 'int'     |-CompoundAssignOperator 0x146827f40 <line:11:2, col:20> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-RecoveryExpr 0x146827e38 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x146827e00 <col:2> 'struct tbl *' lvalue ParmVar 0x14680e248 'vq' 'struct tbl *'     | `-BinaryOperator 0x146827f20 <col:14, col:20> '<dependent type>' contains-errors '|'     |   |-RecoveryExpr 0x146827ee0 <col:14> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x146827f00 <col:20> '<dependent type>' contains-errors lvalue     `-IfStmt 0x1468281f8 <line:12:2, line:13:13>       |-BinaryOperator 0x146828028 <line:12:6, col:15> '<dependent type>' contains-errors '&'       | |-RecoveryExpr 0x146827fa8 <col:6, col:10> '<dependent type>' contains-errors lvalue       | | `-DeclRefExpr 0x146827f70 <col:6> 'struct tbl *' lvalue ParmVar 0x14680e248 'vq' 'struct tbl *'       | `-RecoveryExpr 0x146828008 <col:15> '<dependent type>' contains-errors lvalue       `-CallExpr 0x1468281b8 <line:13:3, col:13> 'int'         |-ImplicitCastExpr 0x1468281a0 <col:3> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x146828128 <col:3> 'int ()' Function 0x146828070 'setspec' 'int ()'         `-ImplicitCastExpr 0x1468281e0 <col:11> 'struct tbl *' <LValueToRValue>           `-DeclRefExpr 0x146828148 <col:11> 'struct tbl *' lvalue ParmVar 0x14680e248 'vq' 'struct tbl *' ","19423":"`-FunctionDecl 0x1509281c8  line:1:1 invalid iterate_md5_digest 'int (int)'   |-ParmVarDecl 0x1509280f0 <col:20, <invalid sloc>> col:23 invalid 'int'   `-CompoundStmt 0x1509284a8 <line:2:1, line:12:1>     `-ForStmt 0x150928470 <line:5:5, line:11:5>       |-DeclStmt 0x150928330 <line:5:10, col:19>       | `-VarDecl 0x1509282a8 <col:10, col:18> col:14 used i 'int' cinit       |   `-IntegerLiteral 0x150928310 <col:18> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x1509283c0 <col:21, col:25> 'int' contains-errors '<'       | |-DeclRefExpr 0x150928348 <col:21> 'int' lvalue Var 0x1509282a8 'i' 'int'       | `-RecoveryExpr 0x1509283a0 <col:25> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x150928400 <col:37, col:39> 'int' prefix '++'       | `-DeclRefExpr 0x1509283e0 <col:39> 'int' lvalue Var 0x1509282a8 'i' 'int'       `-CompoundStmt 0x150928460 <line:6:5, line:11:5> ","19592":"`-FunctionDecl 0x123928758  line:1:12 htc_setup_complete 'int (struct htc_target *)' static   |-ParmVarDecl 0x123928648 <col:31, col:50> col:50 used target 'struct htc_target *'   `-CompoundStmt 0x123944238 <line:2:1, line:35:1>     |-DeclStmt 0x123940c38 <line:3:2, col:21>     | |-RecordDecl 0x123940a50 <col:2, col:9> col:9 struct sk_buff     | `-VarDecl 0x123940bb8 <col:2, col:18> col:18 used skb 'struct sk_buff *'     |-DeclStmt 0x123940e38 <line:4:2, col:31>     | |-RecordDecl 0x123940c50 <col:2, col:9> col:9 struct htc_comp_msg     | `-VarDecl 0x123940db8 <col:2, col:23> col:23 used comp_msg 'struct htc_comp_msg *'     |-DeclStmt 0x123940ef0 <line:5:2, col:13>     | `-VarDecl 0x123940e68 <col:2, col:12> col:6 used ret 'int' cinit     |   `-IntegerLiteral 0x123940ed0 <col:12> 'int' 0     |-DeclStmt 0x123940f88 <line:6:2, col:25>     | `-VarDecl 0x123940f20 <col:2, col:16> col:16 used time_left 'unsigned long'     |-IfStmt 0x123941548 <line:9:2, line:12:2>     | |-UnaryOperator 0x123941278 <line:9:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x123941260 <col:7> 'struct sk_buff *' <LValueToRValue>     | |   `-DeclRefExpr 0x123941240 <col:7> 'struct sk_buff *' lvalue Var 0x123940bb8 'skb' 'struct sk_buff *'     | `-CompoundStmt 0x123941528 <col:12, line:12:2>     |   |-CallExpr 0x123941450 <line:10:3, col:29> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x123941370 <col:3> 'int ()' Function 0x1239412b8 'dev_err' 'int ()'     |   | |-RecoveryExpr 0x1239413c8 <col:11, col:19> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x123941390 <col:11> 'struct htc_target *' lvalue ParmVar 0x123928648 'target' 'struct htc_target *'     |   | `-StringLiteral 0x123941430 <col:24> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x123941518 <line:11:3, col:11>     |     `-UnaryOperator 0x123941500 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x1239414e8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x1239414c8 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x123943890 <line:16:2, col:58> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1239418a8 <col:2, col:12> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x123941870 <col:2> 'struct htc_comp_msg *' lvalue Var 0x123940db8 'comp_msg' 'struct htc_comp_msg *'     | `-CallExpr 0x123943868 <col:21, col:58> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1239419b0 <col:21> 'int ()' Function 0x1239418f8 'cpu_to_be16' 'int ()'     |   `-RecoveryExpr 0x123943848 <col:33> '<dependent type>' contains-errors lvalue     |-CompoundAssignOperator 0x123943978 <line:18:2, col:23> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-RecoveryExpr 0x1239438e8 <col:2, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1239438b0 <col:2> 'struct htc_target *' lvalue ParmVar 0x123928648 'target' 'struct htc_target *'     | `-RecoveryExpr 0x123943958 <col:23> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x123943c70 <line:20:2, col:58> 'int' contains-errors '='     | |-DeclRefExpr 0x1239439a8 <col:2> 'int' lvalue Var 0x123940e68 'ret' 'int'     | `-CallExpr 0x123943c28 <col:8, col:58> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x123943aa8 <col:8> 'int ()' Function 0x1239439f0 'htc_issue_send' 'int ()'     |   |-DeclRefExpr 0x123943ac8 <col:23> 'struct htc_target *' lvalue ParmVar 0x123928648 'target' 'struct htc_target *'     |   |-DeclRefExpr 0x123943ae8 <col:31> 'struct sk_buff *' lvalue Var 0x123940bb8 'skb' 'struct sk_buff *'     |   |-RecoveryExpr 0x123943b40 <col:36, col:41> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x123943b08 <col:36> 'struct sk_buff *' lvalue Var 0x123940bb8 'skb' 'struct sk_buff *'     |   |-IntegerLiteral 0x123943b68 <col:46> 'int' 0     |   `-RecoveryExpr 0x123943c08 <col:49> '<dependent type>' contains-errors lvalue     |-IfStmt 0x123943d30 <line:21:2, line:22:8>     | |-ImplicitCastExpr 0x123943cb0 <line:21:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x123943c90 <col:6> 'int' lvalue Var 0x123940e68 'ret' 'int'     | `-GotoStmt 0x123943d18 <line:22:3, col:8> 'err' 0x123943cc8     |-IfStmt 0x123944020 <line:25:2, line:28:2>     | |-UnaryOperator 0x123943f20 <line:25:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x123943f08 <col:7> 'unsigned long' <LValueToRValue>     | |   `-DeclRefExpr 0x123943ee8 <col:7> 'unsigned long' lvalue Var 0x123940f20 'time_left' 'unsigned long'     | `-CompoundStmt 0x123944008 <col:18, line:28:2>     |   `-CallExpr 0x123943fd8 <line:26:3, col:29> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x123943f38 <col:3> 'int ()' Function 0x1239412b8 'dev_err' 'int ()'     |     |-RecoveryExpr 0x123943f90 <col:11, col:19> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x123943f58 <col:11> 'struct htc_target *' lvalue ParmVar 0x123928648 'target' 'struct htc_target *'     |     `-StringLiteral 0x123943fb8 <col:24> 'char[4]' lvalue \"STR\"     |-ReturnStmt 0x123944060 <line:30:2, col:9>     | `-IntegerLiteral 0x123944040 <col:9> 'int' 0     `-LabelStmt 0x123944218 <line:32:1, line:33:15> 'err'       `-CallExpr 0x1239441d8 <col:2, col:15> 'int'         |-ImplicitCastExpr 0x1239441c0 <col:2> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x123944150 <col:2> 'int ()' Function 0x123944098 'kfree_skb' 'int ()'         `-ImplicitCastExpr 0x123944200 <col:12> 'struct sk_buff *' <LValueToRValue>           `-DeclRefExpr 0x123944170 <col:12> 'struct sk_buff *' lvalue Var 0x123940bb8 'skb' 'struct sk_buff *' ","19541":"`-FunctionDecl 0x12e013638  col:9 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x12e013738 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x12e0136e0 <<invalid sloc>> Implicit 873 ","19077":"`-FunctionDecl 0x14a00ddf8  line:1:12 invalid find_metadata_ 'int (int *)'   |-ParmVarDecl 0x14a00dd28 <col:27, col:48> col:48 referenced invalid decoder 'int *'   `-CompoundStmt 0x14a029878 <line:2:1, line:60:1>     |-DeclStmt 0x14a00dfc0 <line:4:2, col:16>     | |-VarDecl 0x14a00dec0 <col:2, col:11> col:11 used i 'unsigned int'     | `-VarDecl 0x14a00df40 <col:2, col:14> col:14 used id 'unsigned int'     |-CallExpr 0x14a00e328 <line:7:2, col:81> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a00e130 <col:2> 'int ()' Function 0x14a00e078 'FLAC__ASSERT' 'int ()'     | `-CallExpr 0x14a00e300 <col:15, col:80> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14a00e230 <col:15> 'int ()' Function 0x14a00e178 'FLAC__bitreader_is_consumed_byte_aligned' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x14a00e2b8 <col:56, col:75> '<dependent type>' contains-errors lvalue ->input     |     `-CXXDependentScopeMemberExpr 0x14a00e270 <col:56, col:65> '<dependent type>' contains-errors lvalue ->private_     |       `-RecoveryExpr 0x14a00e250 <col:56> '<dependent type>' contains-errors lvalue     `-ForStmt 0x14a029768 <line:9:2, line:56:2>       |-BinaryOperator 0x14a027400 <line:9:6, col:15> 'unsigned int' '='       | |-DeclRefExpr 0x14a00e350 <col:6> 'unsigned int' lvalue Var 0x14a00dec0 'i' 'unsigned int'       | `-BinaryOperator 0x14a00e3c8 <col:10, col:15> 'unsigned int' '='       |   |-DeclRefExpr 0x14a00e370 <col:10> 'unsigned int' lvalue Var 0x14a00df40 'id' 'unsigned int'       |   `-ImplicitCastExpr 0x14a00e3b0 <col:15> 'unsigned int' <IntegralCast>       |     `-IntegerLiteral 0x14a00e390 <col:15> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x14a027490 <col:18, col:22> 'int' '<'       | |-ImplicitCastExpr 0x14a027460 <col:18> 'unsigned int' <LValueToRValue>       | | `-DeclRefExpr 0x14a027420 <col:18> 'unsigned int' lvalue Var 0x14a00dec0 'i' 'unsigned int'       | `-ImplicitCastExpr 0x14a027478 <col:22> 'unsigned int' <IntegralCast>       |   `-IntegerLiteral 0x14a027440 <col:22> 'int' 4       |-<<<NULL>>>       `-CompoundStmt 0x14a029720 <col:27, line:56:2>         |-IfStmt 0x14a027978 <line:10:3, line:17:3> has_else         | |-CXXDependentScopeMemberExpr 0x14a027518 <line:10:6, col:25> '<dependent type>' contains-errors lvalue ->cached         | | `-CXXDependentScopeMemberExpr 0x14a0274d0 <col:6, col:15> '<dependent type>' contains-errors lvalue ->private_         | |   `-RecoveryExpr 0x14a0274b0 <col:6> '<dependent type>' contains-errors lvalue         | |-CompoundStmt 0x14a027668 <col:33, line:13:3>         | `-CompoundStmt 0x14a027968 <line:14:8, line:17:3>         |-IfStmt 0x14a027b10 <line:18:3, line:23:3>         | |-RecoveryExpr 0x14a0279f8 <line:18:6, col:37> '_Bool' contains-errors         | `-CompoundStmt 0x14a027ae8 <col:40, line:23:3>         |   |-UnaryOperator 0x14a027a50 <line:20:4, col:5> 'unsigned int' postfix '++'         |   | `-DeclRefExpr 0x14a027a30 <col:4> 'unsigned int' lvalue Var 0x14a00dec0 'i' 'unsigned int'         |   |-BinaryOperator 0x14a027ac0 <line:21:4, col:9> 'unsigned int' '='         |   | |-DeclRefExpr 0x14a027a68 <col:4> 'unsigned int' lvalue Var 0x14a00df40 'id' 'unsigned int'         |   | `-ImplicitCastExpr 0x14a027aa8 <col:9> 'unsigned int' <IntegralCast>         |   |   `-IntegerLiteral 0x14a027a88 <col:9> 'int' 0         |   `-ContinueStmt 0x14a027ae0 <line:22:4>         |-IfStmt 0x14a027ea8 <line:24:3, line:32:3>         | |-RecoveryExpr 0x14a027b80 <line:24:6, col:24> '_Bool' contains-errors         | `-CompoundStmt 0x14a027e78 <col:27, line:32:3>         |   |-UnaryOperator 0x14a027bc0 <line:25:4, col:6> 'unsigned int' postfix '++'         |   | `-DeclRefExpr 0x14a027ba0 <col:4> 'unsigned int' lvalue Var 0x14a00df40 'id' 'unsigned int'         |   |-BinaryOperator 0x14a027c30 <line:26:4, col:8> 'unsigned int' '='         |   | |-DeclRefExpr 0x14a027bd8 <col:4> 'unsigned int' lvalue Var 0x14a00dec0 'i' 'unsigned int'         |   | `-ImplicitCastExpr 0x14a027c18 <col:8> 'unsigned int' <IntegralCast>         |   |   `-IntegerLiteral 0x14a027bf8 <col:8> 'int' 0         |   |-IfStmt 0x14a027e50 <line:27:4, line:30:4>         |   | |-BinaryOperator 0x14a027cc0 <line:27:7, col:13> 'int' '=='         |   | | |-ImplicitCastExpr 0x14a027c90 <col:7> 'unsigned int' <LValueToRValue>         |   | | | `-DeclRefExpr 0x14a027c50 <col:7> 'unsigned int' lvalue Var 0x14a00df40 'id' 'unsigned int'         |   | | `-ImplicitCastExpr 0x14a027ca8 <col:13> 'unsigned int' <IntegralCast>         |   | |   `-IntegerLiteral 0x14a027c70 <col:13> 'int' 3         |   | `-CompoundStmt 0x14a027e40 <col:16, line:30:4>         |   `-ContinueStmt 0x14a027e70 <line:31:4>         |-BinaryOperator 0x14a027f20 <line:33:3, col:8> 'unsigned int' '='         | |-DeclRefExpr 0x14a027ec8 <col:3> 'unsigned int' lvalue Var 0x14a00df40 'id' 'unsigned int'         | `-ImplicitCastExpr 0x14a027f08 <col:8> 'unsigned int' <IntegralCast>         |   `-IntegerLiteral 0x14a027ee8 <col:8> 'int' 0         |-IfStmt 0x14a029518 <line:34:3, line:50:3>         | |-RecoveryExpr 0x14a027f60 <line:34:6, col:11> '_Bool' contains-errors         | `-CompoundStmt 0x14a029500 <col:17, line:50:3>         |   `-IfStmt 0x14a0294d0 <line:41:4, line:49:4> has_else         |     |-RecoveryExpr 0x14a028218 <line:41:7, col:12> '_Bool' contains-errors         |     |-CompoundStmt 0x14a0283e8 <col:18, line:44:4>         |     `-IfStmt 0x14a0294b0 <line:45:9, line:49:4>         |       |-RecoveryExpr 0x14a029240 <line:45:12, col:22> '_Bool' contains-errors         |       `-CompoundStmt 0x14a0294a0 <col:28, line:49:4>         |-BinaryOperator 0x14a029590 <line:51:3, col:7> 'unsigned int' '='         | |-DeclRefExpr 0x14a029538 <col:3> 'unsigned int' lvalue Var 0x14a00dec0 'i' 'unsigned int'         | `-ImplicitCastExpr 0x14a029578 <col:7> 'unsigned int' <IntegralCast>         |   `-IntegerLiteral 0x14a029558 <col:7> 'int' 0         `-IfStmt 0x14a029700 <line:52:3, line:55:3>           |-RecoveryExpr 0x14a0295b0 <line:52:6> '_Bool' contains-errors           `-CompoundStmt 0x14a0296f0 <col:13, line:55:3> ","19534":"`-FunctionDecl 0x10500df18  line:1:1 invalid header_seek 'int (int *, int, int)'   |-ParmVarDecl 0x10500dd28 <col:14, col:26> col:26 referenced invalid psf 'int *'   |-ParmVarDecl 0x10500dda8 <col:31, col:42> col:42 invalid position 'int'   |-ParmVarDecl 0x10500de28 <col:52, col:56> col:56 used whence 'int'   `-CompoundStmt 0x105029348 <line:2:1, line:47:1>     |-SwitchStmt 0x10500e010 <line:3:2, line:44:3>     | |-ImplicitCastExpr 0x10500dff8 <line:3:10> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x10500dfd8 <col:10> 'int' lvalue ParmVar 0x10500de28 'whence' 'int'     | `-CompoundStmt 0x105029298 <line:4:2, line:44:3>     |   |-IfStmt 0x105027468 <line:5:4, line:9:5>     |   | |-BinaryOperator 0x10500e280 <line:5:8, col:45> 'int' contains-errors '>'     |   | | |-RecoveryExpr 0x10500e050 <col:8> '<dependent type>' contains-errors lvalue     |   | | `-CallExpr 0x10500e258 <col:19, col:45> '<dependent type>' contains-errors     |   | |   |-DeclRefExpr 0x10500e1d0 <col:19> 'int ()' Function 0x10500e118 'SIGNED_SIZEOF' 'int ()'     |   | |   `-CXXDependentScopeMemberExpr 0x10500e210 <col:34, col:39> '<dependent type>' contains-errors lvalue ->header     |   | |     `-RecoveryExpr 0x10500e1f0 <col:34> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x105027448 <line:6:4, line:9:5>     |   |   |-CallExpr 0x105027400 <line:7:5, col:37> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x10500e380 <col:5> 'int ()' Function 0x10500e2c8 'psf_fseek' 'int ()'     |   |   | |-RecoveryExpr 0x10500e3a0 <col:16> '<dependent type>' contains-errors lvalue     |   |   | |-RecoveryExpr 0x10500e3c0 <col:21> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x10500e3e0 <col:31> 'int' lvalue ParmVar 0x10500de28 'whence' 'int'     |   |   `-ReturnStmt 0x105027438 <line:8:5>     |   |-NullStmt 0x105027488 <line:9:7>     |   |-IfStmt 0x105027910 <line:10:4, line:11:91>     |   | |-BinaryOperator 0x105027518 <line:10:8, col:24> 'int' contains-errors '>'     |   | | |-RecoveryExpr 0x105027490 <col:8> '<dependent type>' contains-errors lvalue     |   | | `-CXXDependentScopeMemberExpr 0x1050274d0 <col:19, col:24> '<dependent type>' contains-errors lvalue ->headend     |   | |   `-RecoveryExpr 0x1050274b0 <col:19> '<dependent type>' contains-errors lvalue     |   | `-CompoundAssignOperator 0x1050278e0 <line:11:5, col:91> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |   |-CXXDependentScopeMemberExpr 0x105027580 <col:5, col:10> '<dependent type>' contains-errors lvalue ->headend     |   |   | `-RecoveryExpr 0x105027558 <col:5> '<dependent type>' contains-errors lvalue     |   |   |   `-DeclRefExpr 0x105027538 <col:5> 'int *' lvalue ParmVar 0x10500dd28 'psf' 'int *'     |   |   `-CallExpr 0x1050278a0 <col:21, col:91> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x1050276a8 <col:21> 'int ()' Function 0x1050275f0 'psf_fread' 'int ()'     |   |     |-BinaryOperator 0x105027798 <col:32, col:51> '<dependent type>' contains-errors '+'     |   |     | |-CXXDependentScopeMemberExpr 0x1050276e8 <col:32, col:37> '<dependent type>' contains-errors lvalue ->header     |   |     | | `-RecoveryExpr 0x1050276c8 <col:32> '<dependent type>' contains-errors lvalue     |   |     | `-CXXDependentScopeMemberExpr 0x105027750 <col:46, col:51> '<dependent type>' contains-errors lvalue ->headend     |   |     |   `-RecoveryExpr 0x105027730 <col:46> '<dependent type>' contains-errors lvalue     |   |     |-IntegerLiteral 0x1050277b8 <col:60> 'int' 1     |   |     |-BinaryOperator 0x105027860 <col:63, col:79> '<dependent type>' contains-errors '-'     |   |     | |-RecoveryExpr 0x1050277d8 <col:63> '<dependent type>' contains-errors lvalue     |   |     | `-CXXDependentScopeMemberExpr 0x105027818 <col:74, col:79> '<dependent type>' contains-errors lvalue ->headend     |   |     |   `-RecoveryExpr 0x1050277f8 <col:74> '<dependent type>' contains-errors lvalue     |   |     `-RecoveryExpr 0x105027880 <col:88> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x1050279e0 <line:12:4, col:21> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x105027978 <col:4, col:9> '<dependent type>' contains-errors lvalue ->headindex     |   | | `-RecoveryExpr 0x105027950 <col:4> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x105027930 <col:4> 'int *' lvalue ParmVar 0x10500dd28 'psf' 'int *'     |   | `-RecoveryExpr 0x1050279c0 <col:21> '<dependent type>' contains-errors lvalue     |   |-BreakStmt 0x105027a00 <line:13:4>     |   |-IfStmt 0x105027b10 <line:16:4, line:17:5>     |   | |-BinaryOperator 0x105027ae8 <line:16:8, col:36> 'int' contains-errors '<'     |   | | |-BinaryOperator 0x105027aa8 <col:8, col:25> '<dependent type>' contains-errors '+'     |   | | | |-CXXDependentScopeMemberExpr 0x105027a40 <col:8, col:13> '<dependent type>' contains-errors lvalue ->headindex     |   | | | | `-RecoveryExpr 0x105027a20 <col:8> '<dependent type>' contains-errors lvalue     |   | | | `-RecoveryExpr 0x105027a88 <col:25> '<dependent type>' contains-errors lvalue     |   | | `-IntegerLiteral 0x105027ac8 <col:36> 'int' 0     |   | `-BreakStmt 0x105027b08 <line:17:5>     |   |-IfStmt 0x105027d50 <line:19:4, line:22:5>     |   | |-BinaryOperator 0x105027c48 <line:19:8, col:52> 'int' contains-errors '>='     |   | | |-CXXDependentScopeMemberExpr 0x105027b50 <col:8, col:13> '<dependent type>' contains-errors lvalue ->headindex     |   | | | `-RecoveryExpr 0x105027b30 <col:8> '<dependent type>' contains-errors lvalue     |   | | `-CallExpr 0x105027c20 <col:26, col:52> '<dependent type>' contains-errors     |   | |   |-DeclRefExpr 0x105027b98 <col:26> 'int ()' Function 0x10500e118 'SIGNED_SIZEOF' 'int ()'     |   | |   `-CXXDependentScopeMemberExpr 0x105027bd8 <col:41, col:46> '<dependent type>' contains-errors lvalue ->header     |   | |     `-RecoveryExpr 0x105027bb8 <col:41> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x105027d30 <line:20:4, line:22:5>     |   |   |-CallExpr 0x105027ce8 <line:20:6, col:38> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x105027c68 <col:6> 'int ()' Function 0x10500e2c8 'psf_fseek' 'int ()'     |   |   | |-RecoveryExpr 0x105027c88 <col:17> '<dependent type>' contains-errors lvalue     |   |   | |-RecoveryExpr 0x105027ca8 <col:22> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x105027cc8 <col:32> 'int' lvalue ParmVar 0x10500de28 'whence' 'int'     |   |   `-ReturnStmt 0x105027d20 <line:21:5>     |   |-NullStmt 0x105027d70 <line:22:7>     |   |-IfStmt 0x105027fb0 <line:24:4, line:27:5>     |   | |-BinaryOperator 0x105027e88 <line:24:8, col:42> 'int' contains-errors '<='     |   | | |-BinaryOperator 0x105027e00 <col:8, col:25> '<dependent type>' contains-errors '+'     |   | | | |-CXXDependentScopeMemberExpr 0x105027d98 <col:8, col:13> '<dependent type>' contains-errors lvalue ->headindex     |   | | | | `-RecoveryExpr 0x105027d78 <col:8> '<dependent type>' contains-errors lvalue     |   | | | `-RecoveryExpr 0x105027de0 <col:25> '<dependent type>' contains-errors lvalue     |   | | `-CXXDependentScopeMemberExpr 0x105027e40 <col:37, col:42> '<dependent type>' contains-errors lvalue ->headend     |   | |   `-RecoveryExpr 0x105027e20 <col:37> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x105027f90 <line:25:4, line:27:5>     |   |   |-CompoundAssignOperator 0x105027f58 <line:25:6, col:24> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |   | |-CXXDependentScopeMemberExpr 0x105027ef0 <col:6, col:11> '<dependent type>' contains-errors lvalue ->headindex     |   |   | | `-RecoveryExpr 0x105027ec8 <col:6> '<dependent type>' contains-errors lvalue     |   |   | |   `-DeclRefExpr 0x105027ea8 <col:6> 'int *' lvalue ParmVar 0x10500dd28 'psf' 'int *'     |   |   | `-RecoveryExpr 0x105027f38 <col:24> '<dependent type>' contains-errors lvalue     |   |   `-BreakStmt 0x105027f88 <line:26:5>     |   |-NullStmt 0x105027fd0 <line:27:7>     |   |-IfStmt 0x1050283a0 <line:29:4, line:34:5>     |   | |-BinaryOperator 0x105028130 <line:29:8, col:62> 'int' contains-errors '>'     |   | | |-BinaryOperator 0x105028060 <col:8, col:25> '<dependent type>' contains-errors '+'     |   | | | |-CXXDependentScopeMemberExpr 0x105027ff8 <col:8, col:13> '<dependent type>' contains-errors lvalue ->headindex     |   | | | | `-RecoveryExpr 0x105027fd8 <col:8> '<dependent type>' contains-errors lvalue     |   | | | `-RecoveryExpr 0x105028040 <col:25> '<dependent type>' contains-errors lvalue     |   | | `-CallExpr 0x105028108 <col:36, col:62> '<dependent type>' contains-errors     |   | |   |-DeclRefExpr 0x105028080 <col:36> 'int ()' Function 0x10500e118 'SIGNED_SIZEOF' 'int ()'     |   | |   `-CXXDependentScopeMemberExpr 0x1050280c0 <col:51, col:56> '<dependent type>' contains-errors lvalue ->header     |   | |     `-RecoveryExpr 0x1050280a0 <col:51> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x105028378 <line:30:4, line:34:5>     |   |   |-BinaryOperator 0x105028248 <line:31:5, col:27> '<dependent type>' contains-errors '='     |   |   | |-CXXDependentScopeMemberExpr 0x105028198 <col:5, col:10> '<dependent type>' contains-errors lvalue ->headindex     |   |   | | `-RecoveryExpr 0x105028170 <col:5> '<dependent type>' contains-errors lvalue     |   |   | |   `-DeclRefExpr 0x105028150 <col:5> 'int *' lvalue ParmVar 0x10500dd28 'psf' 'int *'     |   |   | `-CXXDependentScopeMemberExpr 0x105028200 <col:22, col:27> '<dependent type>' contains-errors lvalue ->headend     |   |   |   `-RecoveryExpr 0x1050281e0 <col:22> '<dependent type>' contains-errors lvalue     |   |   |-CallExpr 0x105028338 <line:32:5, col:39> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x105028268 <col:5> 'int ()' Function 0x10500e2c8 'psf_fseek' 'int ()'     |   |   | |-RecoveryExpr 0x105028288 <col:16> '<dependent type>' contains-errors lvalue     |   |   | |-RecoveryExpr 0x1050282a8 <col:21> '<dependent type>' contains-errors lvalue     |   |   | `-RecoveryExpr 0x105028318 <col:31> '<dependent type>' contains-errors lvalue     |   |   `-BreakStmt 0x105028370 <line:33:5>     |   |-NullStmt 0x1050283c0 <line:34:7>     |   |-CompoundAssignOperator 0x105028f50 <line:36:4, col:109> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   | |-CXXDependentScopeMemberExpr 0x105028c28 <col:4, col:9> '<dependent type>' contains-errors lvalue ->headend     |   | | `-RecoveryExpr 0x105028c00 <col:4> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x1050283c8 <col:4> 'int *' lvalue ParmVar 0x10500dd28 'psf' 'int *'     |   | `-CallExpr 0x105028f10 <col:20, col:109> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x105028c70 <col:20> 'int ()' Function 0x1050275f0 'psf_fread' 'int ()'     |   |   |-BinaryOperator 0x105028d60 <col:31, col:50> '<dependent type>' contains-errors '+'     |   |   | |-CXXDependentScopeMemberExpr 0x105028cb0 <col:31, col:36> '<dependent type>' contains-errors lvalue ->header     |   |   | | `-RecoveryExpr 0x105028c90 <col:31> '<dependent type>' contains-errors lvalue     |   |   | `-CXXDependentScopeMemberExpr 0x105028d18 <col:45, col:50> '<dependent type>' contains-errors lvalue ->headend     |   |   |   `-RecoveryExpr 0x105028cf8 <col:45> '<dependent type>' contains-errors lvalue     |   |   |-IntegerLiteral 0x105028d80 <col:59> 'int' 1     |   |   |-BinaryOperator 0x105028ed0 <col:62, col:103> '<dependent type>' contains-errors '-'     |   |   | |-RecoveryExpr 0x105028da0 <col:62> '<dependent type>' contains-errors lvalue     |   |   | `-ParenExpr 0x105028eb0 <col:73, col:103> '<dependent type>' contains-errors     |   |   |   `-BinaryOperator 0x105028e90 <col:74, col:94> '<dependent type>' contains-errors '-'     |   |   |     |-CXXDependentScopeMemberExpr 0x105028de0 <col:74, col:79> '<dependent type>' contains-errors lvalue ->headend     |   |   |     | `-RecoveryExpr 0x105028dc0 <col:74> '<dependent type>' contains-errors lvalue     |   |   |     `-CXXDependentScopeMemberExpr 0x105028e48 <col:89, col:94> '<dependent type>' contains-errors lvalue ->headindex     |   |   |       `-RecoveryExpr 0x105028e28 <col:89> '<dependent type>' contains-errors lvalue     |   |   `-RecoveryExpr 0x105028ef0 <col:106> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x105029078 <line:37:4, col:26> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x105028fc8 <col:4, col:9> '<dependent type>' contains-errors lvalue ->headindex     |   | | `-RecoveryExpr 0x105028fa0 <col:4> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x105028f80 <col:4> 'int *' lvalue ParmVar 0x10500dd28 'psf' 'int *'     |   | `-CXXDependentScopeMemberExpr 0x105029030 <col:21, col:26> '<dependent type>' contains-errors lvalue ->headend     |   |   `-RecoveryExpr 0x105029010 <col:21> '<dependent type>' contains-errors lvalue     |   |-BreakStmt 0x105029098 <line:38:4>     |   |-DefaultStmt 0x105029270 <line:41:3, line:42:30>     |   | `-CallExpr 0x105029240 <col:4, col:30> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x105029198 <col:4> 'int ()' Function 0x1050290e0 'psf_log_printf' 'int ()'     |   |   |-RecoveryExpr 0x1050291b8 <col:20> '<dependent type>' contains-errors lvalue     |   |   `-StringLiteral 0x105029220 <col:25> 'char[4]' lvalue \"STR\"     |   `-BreakStmt 0x105029290 <line:43:4>     |-NullStmt 0x105029330 <line:44:5>     `-ReturnStmt 0x105029338 <line:46:2> ","19552":"`-FunctionDecl 0x159941a10  col:3 implicit used printf 'int (const char *, ...)' extern   |-ParmVarDecl 0x159941b10 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x159941ab8 <<invalid sloc>> Implicit 903   `-FormatAttr 0x159941b80 <col:3> Implicit printf 1 2 ","20008":"`-FunctionDecl 0x12e9286e8  line:1:19 argtoi 'int (struct arg)' static inline   |-ParmVarDecl 0x12e9285d8 <col:26, col:37> col:37 invalid arg 'struct arg'   `-CompoundStmt 0x12e944f30 <line:2:1, line:6:1>     |-DeclStmt 0x12e944c68 <line:3:5, col:14>     | `-VarDecl 0x12e944c00 <col:5, col:9> col:9 used value 'int'     |-CallExpr 0x12e944eb8 <line:4:5, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12e944db0 <col:5> 'int ()' Function 0x12e944cf8 'mystrtoi' 'int ()'     | |-UnaryOperator 0x12e944e38 <col:14, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x12e944df0 <col:15, col:19> '<dependent type>' contains-errors lvalue .start     | |   `-RecoveryExpr 0x12e944dd0 <col:15> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x12e944ea0 <col:26, col:27> 'int *' prefix '&' cannot overflow     |   `-DeclRefExpr 0x12e944e50 <col:27> 'int' lvalue Var 0x12e944c00 'value' 'int'     `-ReturnStmt 0x12e944f20 <line:5:5, col:12>       `-ImplicitCastExpr 0x12e944f08 <col:12> 'int' <LValueToRValue>         `-DeclRefExpr 0x12e944ee8 <col:12> 'int' lvalue Var 0x12e944c00 'value' 'int' ","19978":"`-FunctionDecl 0x12e928350  line:1:13 invalid first_valueStepFunc 'void (int *, int, int **)' static   |-ParmVarDecl 0x12e928128 <line:2:3, col:20> col:20 invalid pCtx 'int *'   |-ParmVarDecl 0x12e9281a8 <line:3:3, col:7> col:7 used nArg 'int'   |-ParmVarDecl 0x12e928260 <line:4:3, col:19> col:19 invalid apArg 'int **'   `-CompoundStmt 0x12e9423d0 <line:5:2, line:16:1>     |-DeclStmt 0x12e9285f8 <line:6:3, col:24>     | |-RecordDecl 0x12e928410 <col:3, col:10> col:10 struct NthValueCtx     | `-VarDecl 0x12e928578 <col:3, col:23> col:23 used p 'struct NthValueCtx *'     |-IfStmt 0x12e9421a0 <line:8:3, line:13:3>     | |-BinaryOperator 0x12e941d30 <line:8:7, col:23> 'int' contains-errors '&&'     | | |-DeclRefExpr 0x12e941c70 <col:7> 'struct NthValueCtx *' lvalue Var 0x12e928578 'p' 'struct NthValueCtx *'     | | `-BinaryOperator 0x12e941d10 <col:12, col:23> 'int' contains-errors '=='     | |   |-RecoveryExpr 0x12e941cc8 <col:12, col:15> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x12e941c90 <col:12> 'struct NthValueCtx *' lvalue Var 0x12e928578 'p' 'struct NthValueCtx *'     | |   `-IntegerLiteral 0x12e941cf0 <col:23> 'int' 0     | `-CompoundStmt 0x12e942180 <col:26, line:13:3>     |   |-BinaryOperator 0x12e941f50 <line:9:5, col:43> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x12e941d88 <col:5, col:8> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x12e941d50 <col:5> 'struct NthValueCtx *' lvalue Var 0x12e928578 'p' 'struct NthValueCtx *'     |   | `-CallExpr 0x12e941f28 <col:17, col:43> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x12e941e90 <col:17> 'int ()' Function 0x12e941dd8 'sqlite3_value_dup' 'int ()'     |   |   `-ArraySubscriptExpr 0x12e941f08 <col:35, col:42> '<dependent type>' contains-errors lvalue     |   |     |-ImplicitCastExpr 0x12e941ef0 <col:35> '<dependent type>' contains-errors <LValueToRValue>     |   |     | `-RecoveryExpr 0x12e941eb0 <col:35> '<dependent type>' contains-errors lvalue     |   |     `-IntegerLiteral 0x12e941ed0 <col:41> 'int' 0     |   `-IfStmt 0x12e942160 <line:10:5, line:12:5>     |     |-UnaryOperator 0x12e941fe8 <line:10:9, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow     |     | `-ImplicitCastExpr 0x12e941fd0 <col:10, col:13> '<dependent type>' contains-errors <LValueToRValue>     |     |   `-RecoveryExpr 0x12e941fa8 <col:10, col:13> '<dependent type>' contains-errors lvalue     |     |     `-DeclRefExpr 0x12e941f70 <col:10> 'struct NthValueCtx *' lvalue Var 0x12e928578 'p' 'struct NthValueCtx *'     |     `-CompoundStmt 0x12e942148 <col:21, line:12:5>     |       `-CallExpr 0x12e942120 <line:11:7, col:38> '<dependent type>' contains-errors     |         |-DeclRefExpr 0x12e9420e0 <col:7> 'int ()' Function 0x12e942028 'sqlite3_result_error_nomem' 'int ()'     |         `-RecoveryExpr 0x12e942100 <col:34> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12e942328 <line:14:3, col:24> 'int'     | |-ImplicitCastExpr 0x12e942310 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12e9422a0 <col:3> 'int ()' Function 0x12e9421e8 'UNUSED_PARAMETER' 'int ()'     | `-ImplicitCastExpr 0x12e942350 <col:20> 'int' <LValueToRValue>     |   `-DeclRefExpr 0x12e9422c0 <col:20> 'int' lvalue ParmVar 0x12e9281a8 'nArg' 'int'     `-CallExpr 0x12e9423a8 <line:15:3, col:25> '<dependent type>' contains-errors       |-DeclRefExpr 0x12e942368 <col:3> 'int ()' Function 0x12e9421e8 'UNUSED_PARAMETER' 'int ()'       `-RecoveryExpr 0x12e942388 <col:20> '<dependent type>' contains-errors lvalue ","19613":"`-FunctionDecl 0x11c928750  line:1:13 nf_conntrack_standalone_fini_sysctl 'void (struct net *)' static   |-ParmVarDecl 0x11c928648 <col:49, col:61> col:61 net 'struct net *'   `-CompoundStmt 0x11c944c48 <line:2:1, line:3:1> ","20095":"`-FunctionDecl 0x126142d00  col:17 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x126143600 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x126143668 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x1261436d0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x126142da8 <<invalid sloc>> Implicit 882 ","19972":"`-FunctionDecl 0x159128750  line:1:6 bpf_prog_put 'void (struct bpf_prog *)'   |-ParmVarDecl 0x159128648 <col:19, col:36> col:36 used prog 'struct bpf_prog *'   `-CompoundStmt 0x159140e80 <line:2:1, line:5:1>     `-IfStmt 0x159140e60 <line:3:2, line:4:36>       |-CallExpr 0x159140c50 <line:3:6, col:44> '<dependent type>' contains-errors       | |-DeclRefExpr 0x159140b70 <col:6> 'int ()' Function 0x159140ab8 'atomic_dec_and_test' 'int ()'       | `-UnaryOperator 0x159140c38 <col:26, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow       |   `-CXXDependentScopeMemberExpr 0x159140bf0 <col:27, col:38> '<dependent type>' contains-errors lvalue ->refcnt       |     `-RecoveryExpr 0x159140bc8 <col:27, col:33> '<dependent type>' contains-errors lvalue       |       `-DeclRefExpr 0x159140b90 <col:27> 'struct bpf_prog *' lvalue ParmVar 0x159128648 'prog' 'struct bpf_prog *'       `-CallExpr 0x159140e38 <line:4:3, col:36> '<dependent type>' contains-errors         |-DeclRefExpr 0x159140d58 <col:3> 'int ()' Function 0x159140ca0 '__prog_put_common' 'int ()'         `-UnaryOperator 0x159140e20 <col:21, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow           `-CXXDependentScopeMemberExpr 0x159140dd8 <col:22, col:33> '<dependent type>' contains-errors lvalue ->rcu             `-RecoveryExpr 0x159140db0 <col:22, col:28> '<dependent type>' contains-errors lvalue               `-DeclRefExpr 0x159140d78 <col:22> 'struct bpf_prog *' lvalue ParmVar 0x159128648 'prog' 'struct bpf_prog *' ","19967":"`-FunctionDecl 0x1209281a8  line:1:1 rend_service_dump_stats 'int (int)'   |-ParmVarDecl 0x1209280d8 <col:25, col:29> col:29 used severity 'int'   `-CompoundStmt 0x120941770 <line:2:1, line:27:1>     |-DeclStmt 0x1209283b8 <line:3:3, col:10>     | |-VarDecl 0x1209282b8 <col:3, col:7> col:7 used i 'int'     | `-VarDecl 0x120928338 <col:3, col:9> col:9 used j 'int'     |-DeclStmt 0x120928498 <line:6:3, col:24>     | `-VarDecl 0x120928430 <col:3, col:15> col:15 used safe_name 'const char *'     `-ForStmt 0x120941738 <line:9:3, line:26:3>       |-BinaryOperator 0x120928508 <line:9:8, col:10> 'int' '='       | |-DeclRefExpr 0x1209284c8 <col:8> 'int' lvalue Var 0x1209282b8 'i' 'int'       | `-IntegerLiteral 0x1209284e8 <col:10> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x120928728 <col:13, col:48> 'int' contains-errors '<'       | |-DeclRefExpr 0x120928528 <col:13> 'int' lvalue Var 0x1209282b8 'i' 'int'       | `-CallExpr 0x120928700 <col:17, col:48> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x120928660 <col:17> 'int ()' Function 0x1209285a8 'smartlist_len' 'int ()'       |   `-RecoveryExpr 0x1209286e0 <col:31> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x120928768 <col:51, col:53> 'int' prefix '++'       | `-DeclRefExpr 0x120928748 <col:53> 'int' lvalue Var 0x1209282b8 'i' 'int'       `-CompoundStmt 0x120941718 <col:56, line:26:3>         |-CallExpr 0x120940ec8 <line:11:5, line:12:46> '<dependent type>' contains-errors         | |-DeclRefExpr 0x120940c20 <line:11:5> 'int ()' Function 0x120940b68 'tor_log' 'int ()'         | |-DeclRefExpr 0x120940c40 <col:13> 'int' lvalue ParmVar 0x1209280d8 'severity' 'int'         | |-RecoveryExpr 0x120940e60 <col:23> '<dependent type>' contains-errors lvalue         | |-StringLiteral 0x120940cc0 <col:35> 'char[4]' lvalue \"STR\"         | `-CallExpr 0x120940ea0 <line:12:13, col:45> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x120940dc0 <col:13> 'int ()' Function 0x120940d08 'rend_service_escaped_dir' 'int ()'         |   `-RecoveryExpr 0x120940e80 <col:38> '<dependent type>' contains-errors lvalue         `-ForStmt 0x1209416e0 <line:13:5, line:25:5>           |-BinaryOperator 0x120940f48 <line:13:10, col:12> 'int' '='           | |-DeclRefExpr 0x120940f08 <col:10> 'int' lvalue Var 0x120928338 'j' 'int'           | `-IntegerLiteral 0x120940f28 <col:12> 'int' 0           |-<<<NULL>>>           |-BinaryOperator 0x1209410e0 <col:15, col:53> 'int' contains-errors '<'           | |-DeclRefExpr 0x120940f68 <col:15> 'int' lvalue Var 0x120928338 'j' 'int'           | `-CallExpr 0x1209410b8 <col:19, col:53> '<dependent type>' contains-errors           |   |-DeclRefExpr 0x120940f88 <col:19> 'int ()' Function 0x1209285a8 'smartlist_len' 'int ()'           |   `-CXXDependentScopeMemberExpr 0x120941070 <col:33, col:42> '<dependent type>' contains-errors lvalue ->intro_nodes           |     `-RecoveryExpr 0x120941050 <col:33> '<dependent type>' contains-errors lvalue           |-UnaryOperator 0x120941120 <col:56, col:58> 'int' prefix '++'           | `-DeclRefExpr 0x120941100 <col:58> 'int' lvalue Var 0x120928338 'j' 'int'           `-CompoundStmt 0x1209416c8 <col:61, line:25:5>             `-IfStmt 0x120941508 <line:18:7, line:22:7>               |-RecoveryExpr 0x120941428 <line:18:11, col:12> '_Bool' contains-errors               `-CompoundStmt 0x1209414f0 <col:18, line:22:7>                 `-ContinueStmt 0x1209414e8 <line:21:9> ","19672":"`-FunctionDecl 0x151942e00  col:4 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x151942f00 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x151942f68 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x151942fd0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x151942ea8 <<invalid sloc>> Implicit 882 ","20025":"`-FunctionDecl 0x13f128758  line:1:1 sess_establish_session 'int (struct sess_data *)'   |-ParmVarDecl 0x13f128648 <col:24, col:42> col:42 used sess_data 'struct sess_data *'   `-CompoundStmt 0x13f147260 <line:2:1, line:30:1>     |-DeclStmt 0x13f144e98 <line:3:2, col:39>     | |-RecordDecl 0x13f144c50 <col:2, col:9> col:9 struct cifs_ses     | `-VarDecl 0x13f144db8 <col:2, col:36> col:19 used ses 'struct cifs_ses *' cinit     |   `-RecoveryExpr 0x13f144e58 <col:25, col:36> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13f144e20 <col:25> 'struct sess_data *' lvalue ParmVar 0x13f128648 'sess_data' 'struct sess_data *'     |-CallExpr 0x13f1450c0 <line:5:2, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13f144fe0 <col:2> 'int ()' Function 0x13f144f28 'mutex_lock' 'int ()'     | `-UnaryOperator 0x13f1450a8 <col:13, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x13f145060 <col:14, col:27> '<dependent type>' contains-errors lvalue ->srv_mutex     |     `-RecoveryExpr 0x13f145038 <col:14, col:19> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13f145000 <col:14> 'struct cifs_ses *' contains-errors lvalue Var 0x13f144db8 'ses' 'struct cifs_ses *'     |-IfStmt 0x13f146ce0 <line:6:2, line:20:2>     | |-UnaryOperator 0x13f1451a8 <line:6:6, col:20> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13f145190 <col:7, col:20> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x13f145148 <col:7, col:20> '<dependent type>' contains-errors lvalue ->session_estab     | |     `-RecoveryExpr 0x13f145120 <col:7, col:12> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x13f1450e8 <col:7> 'struct cifs_ses *' contains-errors lvalue Var 0x13f144db8 'ses' 'struct cifs_ses *'     | `-CompoundStmt 0x13f146cb8 <col:35, line:20:2>     |   |-IfStmt 0x13f146a90 <line:7:3, line:17:3>     |   | |-CXXDependentScopeMemberExpr 0x13f145220 <line:7:7, col:20> '<dependent type>' contains-errors lvalue ->sign     |   | | `-RecoveryExpr 0x13f1451f8 <col:7, col:12> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x13f1451c0 <col:7> 'struct cifs_ses *' contains-errors lvalue Var 0x13f144db8 'ses' 'struct cifs_ses *'     |   | `-CompoundStmt 0x13f146a68 <col:26, line:17:3>     |   |   |-BinaryOperator 0x13f145670 <line:8:4, line:10:34> '<dependent type>' contains-errors '='     |   |   | |-CXXDependentScopeMemberExpr 0x13f145310 <line:8:4, col:29> '<dependent type>' contains-errors lvalue .response     |   |   | | `-CXXDependentScopeMemberExpr 0x13f1452c8 <col:4, col:17> '<dependent type>' contains-errors lvalue ->session_key     |   |   | |   `-RecoveryExpr 0x13f1452a0 <col:4, col:9> '<dependent type>' contains-errors lvalue     |   |   | |     `-DeclRefExpr 0x13f145268 <col:4> 'struct cifs_ses *' contains-errors lvalue Var 0x13f144db8 'ses' 'struct cifs_ses *'     |   |   | `-CallExpr 0x13f145638 <line:9:5, line:10:34> '<dependent type>' contains-errors     |   |   |   |-DeclRefExpr 0x13f145438 <line:9:5> 'int ()' Function 0x13f145380 'kmemdup' 'int ()'     |   |   |   |-CXXDependentScopeMemberExpr 0x13f1454b8 <col:13, col:27> '<dependent type>' contains-errors lvalue .response     |   |   |   | `-RecoveryExpr 0x13f145490 <col:13, col:18> '<dependent type>' contains-errors lvalue     |   |   |   |   `-DeclRefExpr 0x13f145458 <col:13> 'struct cifs_ses *' contains-errors lvalue Var 0x13f144db8 'ses' 'struct cifs_ses *'     |   |   |   |-CXXDependentScopeMemberExpr 0x13f145560 <line:10:5, col:19> '<dependent type>' contains-errors lvalue .len     |   |   |   | `-RecoveryExpr 0x13f145538 <col:5, col:10> '<dependent type>' contains-errors lvalue     |   |   |   |   `-DeclRefExpr 0x13f145500 <col:5> 'struct cifs_ses *' contains-errors lvalue Var 0x13f144db8 'ses' 'struct cifs_ses *'     |   |   |   `-RecoveryExpr 0x13f145618 <col:24> '<dependent type>' contains-errors lvalue     |   |   |-IfStmt 0x13f145a60 <line:11:4, line:14:4>     |   |   | |-UnaryOperator 0x13f145798 <line:11:8, col:34> '<dependent type>' contains-errors prefix '!' cannot overflow     |   |   | | `-ImplicitCastExpr 0x13f145780 <col:9, col:34> '<dependent type>' contains-errors <LValueToRValue>     |   |   | |   `-CXXDependentScopeMemberExpr 0x13f145738 <col:9, col:34> '<dependent type>' contains-errors lvalue .response     |   |   | |     `-CXXDependentScopeMemberExpr 0x13f1456f0 <col:9, col:22> '<dependent type>' contains-errors lvalue ->session_key     |   |   | |       `-RecoveryExpr 0x13f1456c8 <col:9, col:14> '<dependent type>' contains-errors lvalue     |   |   | |         `-DeclRefExpr 0x13f145690 <col:9> 'struct cifs_ses *' contains-errors lvalue Var 0x13f144db8 'ses' 'struct cifs_ses *'     |   |   | `-CompoundStmt 0x13f145a40 <col:44, line:14:4>     |   |   |   |-CallExpr 0x13f145970 <line:12:5, col:41> '<dependent type>' contains-errors     |   |   |   | |-DeclRefExpr 0x13f145890 <col:5> 'int ()' Function 0x13f1457d8 'mutex_unlock' 'int ()'     |   |   |   | `-UnaryOperator 0x13f145958 <col:18, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   |   |   `-CXXDependentScopeMemberExpr 0x13f145910 <col:19, col:32> '<dependent type>' contains-errors lvalue ->srv_mutex     |   |   |   |     `-RecoveryExpr 0x13f1458e8 <col:19, col:24> '<dependent type>' contains-errors lvalue     |   |   |   |       `-DeclRefExpr 0x13f1458b0 <col:19> 'struct cifs_ses *' contains-errors lvalue Var 0x13f144db8 'ses' 'struct cifs_ses *'     |   |   |   `-ReturnStmt 0x13f145a30 <line:13:5, col:13>     |   |   |     `-UnaryOperator 0x13f145a18 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   |       `-ImplicitCastExpr 0x13f145a00 <col:13> '<dependent type>' contains-errors <LValueToRValue>     |   |   |         `-RecoveryExpr 0x13f1459e0 <col:13> '<dependent type>' contains-errors lvalue     |   |   `-BinaryOperator 0x13f146a48 <line:15:4, line:16:21> '<dependent type>' contains-errors '='     |   |     |-CXXDependentScopeMemberExpr 0x13f145b28 <line:15:4, col:29> '<dependent type>' contains-errors lvalue .len     |   |     | `-CXXDependentScopeMemberExpr 0x13f145ae0 <col:4, col:17> '<dependent type>' contains-errors lvalue ->session_key     |   |     |   `-RecoveryExpr 0x13f145ab8 <col:4, col:9> '<dependent type>' contains-errors lvalue     |   |     |     `-DeclRefExpr 0x13f145a80 <col:4> 'struct cifs_ses *' contains-errors lvalue Var 0x13f144db8 'ses' 'struct cifs_ses *'     |   |     `-CXXDependentScopeMemberExpr 0x13f146a00 <line:16:7, col:21> '<dependent type>' contains-errors lvalue .len     |   |       `-RecoveryExpr 0x13f145ba8 <col:7, col:12> '<dependent type>' contains-errors lvalue     |   |         `-DeclRefExpr 0x13f145b70 <col:7> 'struct cifs_ses *' contains-errors lvalue Var 0x13f144db8 'ses' 'struct cifs_ses *'     |   |-BinaryOperator 0x13f146b78 <line:18:3, col:34> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x13f146b10 <col:3, col:16> '<dependent type>' contains-errors lvalue ->sequence_number     |   | | `-RecoveryExpr 0x13f146ae8 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x13f146ab0 <col:3> 'struct cifs_ses *' contains-errors lvalue Var 0x13f144db8 'ses' 'struct cifs_ses *'     |   | `-IntegerLiteral 0x13f146b58 <col:34> 'int' 2     |   `-BinaryOperator 0x13f146c98 <line:19:3, col:32> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x13f146bf8 <col:3, col:16> '<dependent type>' contains-errors lvalue ->session_estab     |     | `-RecoveryExpr 0x13f146bd0 <col:3, col:8> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x13f146b98 <col:3> 'struct cifs_ses *' contains-errors lvalue Var 0x13f144db8 'ses' 'struct cifs_ses *'     |     `-RecoveryExpr 0x13f146c78 <col:32> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13f146de0 <line:21:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13f146d00 <col:2> 'int ()' Function 0x13f1457d8 'mutex_unlock' 'int ()'     | `-UnaryOperator 0x13f146dc8 <col:15, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x13f146d80 <col:16, col:29> '<dependent type>' contains-errors lvalue ->srv_mutex     |     `-RecoveryExpr 0x13f146d58 <col:16, col:21> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13f146d20 <col:16> 'struct cifs_ses *' contains-errors lvalue Var 0x13f144db8 'ses' 'struct cifs_ses *'     `-ReturnStmt 0x13f147250 <line:29:2, col:9>       `-IntegerLiteral 0x13f147230 <col:9> 'int' 0 ","19494":"`-FunctionDecl 0x151943a38  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x151943b38 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x151943ba0 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x151943c08 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x151943ae0 <<invalid sloc>> Implicit 900 ","20077":"`-FunctionDecl 0x12f80e018  line:1:12 invalid pkcs7_decrypt_rinfo 'int (unsigned char **, int *, int *, int *)' static   |-ParmVarDecl 0x12f80dd40 <col:32, col:48> col:48 used pek 'unsigned char **'   |-ParmVarDecl 0x12f80ddf8 <col:53, col:58> col:58 used peklen 'int *'   |-ParmVarDecl 0x12f80de90 <line:2:32, col:50> col:50 invalid ri 'int *'   |-ParmVarDecl 0x12f80df10 <col:54, col:64> col:64 invalid pkey 'int *'   `-CompoundStmt 0x12f82a048 <line:3:1, line:58:1>     |-DeclStmt 0x12f80e1c8 <line:5:5, col:29>     | `-VarDecl 0x12f80e128 <col:5, col:25> col:20 used ek 'unsigned char *' cinit     |   `-RecoveryExpr 0x12f80e1a8 <col:25> '<dependent type>' contains-errors lvalue     |-UnaryExprOrTypeTraitExpr 0x12f80e238 <line:6:5, col:12> 'unsigned long' sizeof     | `-DeclRefExpr 0x12f80e218 <col:12> 'int *' lvalue ParmVar 0x12f80ddf8 'peklen' 'int *' non_odr_use_unevaluated     |-DeclStmt 0x12f80e310 <line:8:5, col:17>     | `-VarDecl 0x12f80e270 <col:5, col:16> col:9 used ret 'int' cinit     |   `-UnaryOperator 0x12f80e2f8 <col:15, col:16> 'int' prefix '-'     |     `-IntegerLiteral 0x12f80e2d8 <col:16> 'int' 1     |-IfStmt 0x12f827620 <line:11:5, line:12:17>     | |-UnaryOperator 0x12f8275c0 <line:11:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12f8275a8 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x12f827588 <col:10> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12f827610 <line:12:9, col:17>     |   `-UnaryOperator 0x12f8275f8 <col:16, col:17> 'int' prefix '-'     |     `-IntegerLiteral 0x12f8275d8 <col:17> 'int' 1     |-IfStmt 0x12f827890 <line:14:5, line:15:14>     | |-BinaryOperator 0x12f827808 <line:14:9, col:40> 'int' contains-errors '<='     | | |-CallExpr 0x12f8277e0 <col:9, col:35> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x12f827720 <col:9> 'int ()' Function 0x12f827668 'EVP_PKEY_decrypt_init' 'int ()'     | | | `-RecoveryExpr 0x12f8277c0 <col:31> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x12f827780 <col:40> 'int' 0     | `-GotoStmt 0x12f827878 <line:15:9, col:14> 'err' 0x12f827828     |-IfStmt 0x12f827dd8 <line:17:5, line:21:5>     | |-BinaryOperator 0x12f827bb0 <line:17:9, line:18:66> 'int' contains-errors '<='     | | |-CallExpr 0x12f827b60 <line:17:9, line:18:61> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x12f827990 <line:17:9> 'int ()' Function 0x12f8278d8 'EVP_PKEY_CTX_ctrl' 'int ()'     | | | |-RecoveryExpr 0x12f827b00 <col:27> '<dependent type>' contains-errors lvalue     | | | |-UnaryOperator 0x12f8279e8 <col:33, col:34> 'int' prefix '-'     | | | | `-IntegerLiteral 0x12f8279c8 <col:34> 'int' 1     | | | |-RecoveryExpr 0x12f827b20 <col:37> '<dependent type>' contains-errors lvalue     | | | |-RecoveryExpr 0x12f827b40 <line:18:27> '<dependent type>' contains-errors lvalue     | | | |-IntegerLiteral 0x12f827a30 <col:56> 'int' 0     | | | `-RecoveryExpr 0x12f827a50 <col:59> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x12f827ac0 <col:66> 'int' 0     | `-CompoundStmt 0x12f827db8 <col:69, line:21:5>     |   |-CallExpr 0x12f827d70 <line:19:9, col:65> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12f827cb0 <col:9> 'int ()' Function 0x12f827bf8 'PKCS7err' 'int ()'     |   | |-RecoveryExpr 0x12f827d30 <col:18> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x12f827d50 <col:47> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x12f827da0 <line:20:9, col:14> 'err' 0x12f827828     |-IfStmt 0x12f8280b0 <line:23:5, line:25:14>     | |-RecoveryExpr 0x12f828078 <line:23:9, line:24:69> '_Bool' contains-errors     | `-GotoStmt 0x12f828098 <line:25:9, col:14> 'err' 0x12f827828     |-IfStmt 0x12f828280 <line:29:5, line:32:5>     | |-RecoveryExpr 0x12f828210 <line:29:9, col:15> '_Bool' contains-errors     | `-CompoundStmt 0x12f828268 <col:21, line:32:5>     |   `-GotoStmt 0x12f828250 <line:31:9, col:14> 'err' 0x12f827828     |-IfStmt 0x12f829740 <line:34:5, line:39:5>     | |-RecoveryExpr 0x12f829668 <line:34:9, line:35:69> '_Bool' contains-errors     | `-CompoundStmt 0x12f829720 <col:72, line:39:5>     |   |-BinaryOperator 0x12f8296c8 <line:36:9, col:15> 'int' '='     |   | |-DeclRefExpr 0x12f829688 <col:9> 'int' lvalue Var 0x12f80e270 'ret' 'int'     |   | `-IntegerLiteral 0x12f8296a8 <col:15> 'int' 0     |   `-GotoStmt 0x12f829708 <line:38:9, col:14> 'err' 0x12f827828     |-BinaryOperator 0x12f8297a0 <line:41:5, col:11> 'int' '='     | |-DeclRefExpr 0x12f829760 <col:5> 'int' lvalue Var 0x12f80e270 'ret' 'int'     | `-IntegerLiteral 0x12f829780 <col:11> 'int' 1     |-IfStmt 0x12f829c40 <line:43:5, line:46:5>     | |-ImplicitCastExpr 0x12f829810 <line:43:9, col:10> 'unsigned char *' <LValueToRValue>     | | `-UnaryOperator 0x12f8297f8 <col:9, col:10> 'unsigned char *' lvalue prefix '*' cannot overflow     | |   `-ImplicitCastExpr 0x12f8297e0 <col:10> 'unsigned char **' <LValueToRValue>     | |     `-DeclRefExpr 0x12f8297c0 <col:10> 'unsigned char **' lvalue ParmVar 0x12f80dd40 'pek' 'unsigned char **'     | `-CompoundStmt 0x12f829c20 <col:15, line:46:5>     |   |-CallExpr 0x12f829a18 <line:44:9, col:38> 'int'     |   | |-ImplicitCastExpr 0x12f829a00 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x12f829908 <col:9> 'int ()' Function 0x12f829850 'OPENSSL_cleanse' 'int ()'     |   | |-ImplicitCastExpr 0x12f829a48 <col:25, col:26> 'unsigned char *' <LValueToRValue>     |   | | `-UnaryOperator 0x12f829960 <col:25, col:26> 'unsigned char *' lvalue prefix '*' cannot overflow     |   | |   `-ImplicitCastExpr 0x12f829948 <col:26> 'unsigned char **' <LValueToRValue>     |   | |     `-DeclRefExpr 0x12f829928 <col:26> 'unsigned char **' lvalue ParmVar 0x12f80dd40 'pek' 'unsigned char **'     |   | `-ImplicitCastExpr 0x12f829a60 <col:31, col:32> 'int' <LValueToRValue>     |   |   `-UnaryOperator 0x12f8299b0 <col:31, col:32> 'int' lvalue prefix '*' cannot overflow     |   |     `-ImplicitCastExpr 0x12f829998 <col:32> 'int *' <LValueToRValue>     |   |       `-DeclRefExpr 0x12f829978 <col:32> 'int *' lvalue ParmVar 0x12f80ddf8 'peklen' 'int *'     |   `-CallExpr 0x12f829be0 <line:45:9, col:26> 'int'     |     |-ImplicitCastExpr 0x12f829bc8 <col:9> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x12f829b58 <col:9> 'int ()' Function 0x12f829aa0 'OPENSSL_free' 'int ()'     |     `-ImplicitCastExpr 0x12f829c08 <col:22, col:23> 'unsigned char *' <LValueToRValue>     |       `-UnaryOperator 0x12f829bb0 <col:22, col:23> 'unsigned char *' lvalue prefix '*' cannot overflow     |         `-ImplicitCastExpr 0x12f829b98 <col:23> 'unsigned char **' <LValueToRValue>     |           `-DeclRefExpr 0x12f829b78 <col:23> 'unsigned char **' lvalue ParmVar 0x12f80dd40 'pek' 'unsigned char **'     |-BinaryOperator 0x12f829ce8 <line:48:5, col:12> 'unsigned char *' contains-errors '='     | |-UnaryOperator 0x12f829c98 <col:5, col:6> 'unsigned char *' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x12f829c80 <col:6> 'unsigned char **' <LValueToRValue>     | |   `-DeclRefExpr 0x12f829c60 <col:6> 'unsigned char **' lvalue ParmVar 0x12f80dd40 'pek' 'unsigned char **'     | `-ImplicitCastExpr 0x12f829cd0 <col:12> 'unsigned char *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x12f829cb0 <col:12> 'unsigned char *' contains-errors lvalue Var 0x12f80e128 'ek' 'unsigned char *'     |-LabelStmt 0x12f829e80 <line:51:2, col:5> 'err'     | `-NullStmt 0x12f829e78 <col:5>     |-IfStmt 0x12f829fe0 <line:54:5, line:55:24>     | |-BinaryOperator 0x12f829f28 <line:54:9, col:17> 'int' contains-errors '&&'     | | |-UnaryOperator 0x12f829ed8 <col:9, col:10> 'int' prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x12f829ec0 <col:10> 'int' <LValueToRValue>     | | |   `-DeclRefExpr 0x12f829ea0 <col:10> 'int' lvalue Var 0x12f80e270 'ret' 'int'     | | `-ImplicitCastExpr 0x12f829f10 <col:17> 'unsigned char *' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x12f829ef0 <col:17> 'unsigned char *' contains-errors lvalue Var 0x12f80e128 'ek' 'unsigned char *'     | `-CallExpr 0x12f829fa0 <line:55:9, col:24> 'int' contains-errors     |   |-ImplicitCastExpr 0x12f829f88 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12f829f48 <col:9> 'int ()' Function 0x12f829aa0 'OPENSSL_free' 'int ()'     |   `-ImplicitCastExpr 0x12f829fc8 <col:22> 'unsigned char *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x12f829f68 <col:22> 'unsigned char *' contains-errors lvalue Var 0x12f80e128 'ek' 'unsigned char *'     `-ReturnStmt 0x12f82a038 <line:57:5, col:12>       `-ImplicitCastExpr 0x12f82a020 <col:12> 'int' <LValueToRValue>         `-DeclRefExpr 0x12f82a000 <col:12> 'int' lvalue Var 0x12f80e270 'ret' 'int' ","20149":"`-FunctionDecl 0x14c00dd90  line:1:13 smm_disable 'void (void)' static   `-CompoundStmt 0x14c00deb8 <line:2:1, line:4:1> ","20007":"`-FunctionDecl 0x12f940a00  line:1:12 rb_allocate_pages 'int (struct ring_buffer_per_cpu *, unsigned long)' static   |-ParmVarDecl 0x12f928648 <col:30, col:58> col:58 used cpu_buffer 'struct ring_buffer_per_cpu *'   |-ParmVarDecl 0x12f9286c8 <line:2:9, col:23> col:23 used nr_pages 'unsigned long'   `-CompoundStmt 0x12f9416e8 <line:3:1, line:20:1>     |-CallExpr 0x12f940cb0 <line:4:2, col:17> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f940c30 <col:2> 'int ()' Function 0x12f940b78 'LIST_HEAD' 'int ()'     | `-RecoveryExpr 0x12f940c90 <col:12> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12f940e78 <line:6:2, col:19> 'int'     | |-ImplicitCastExpr 0x12f940e60 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12f940db8 <col:2> 'int ()' Function 0x12f940d00 'WARN_ON' 'int ()'     | `-UnaryOperator 0x12f940e10 <col:10, col:11> 'int' prefix '!' cannot overflow     |   `-ImplicitCastExpr 0x12f940df8 <col:11> 'unsigned long' <LValueToRValue>     |     `-DeclRefExpr 0x12f940dd8 <col:11> 'unsigned long' lvalue ParmVar 0x12f9286c8 'nr_pages' 'unsigned long'     |-IfStmt 0x12f941160 <line:8:2, line:9:11>     | |-CallExpr 0x12f941080 <line:8:6, col:54> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x12f940f80 <col:6> 'int ()' Function 0x12f940ec8 '__rb_allocate_pages' 'int ()'     | | |-DeclRefExpr 0x12f940fa0 <col:26> 'struct ring_buffer_per_cpu *' lvalue ParmVar 0x12f928648 'cpu_buffer' 'struct ring_buffer_per_cpu *'     | | |-DeclRefExpr 0x12f940fc0 <col:38> 'unsigned long' lvalue ParmVar 0x12f9286c8 'nr_pages' 'unsigned long'     | | `-UnaryOperator 0x12f941068 <col:48, col:49> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x12f941048 <col:49> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12f941150 <line:9:3, col:11>     |   `-UnaryOperator 0x12f941138 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12f941120 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12f941100 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12f9412c8 <line:12:2, col:28> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12f9411b8 <col:2, col:14> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12f941180 <col:2> 'struct ring_buffer_per_cpu *' lvalue ParmVar 0x12f928648 'cpu_buffer' 'struct ring_buffer_per_cpu *'     | `-CXXDependentScopeMemberExpr 0x12f941280 <col:22, col:28> '<dependent type>' contains-errors lvalue .next     |   `-RecoveryExpr 0x12f941260 <col:22> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12f941478 <line:13:2, col:17> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f9413c8 <col:2> 'int ()' Function 0x12f941310 'list_del' 'int ()'     | `-UnaryOperator 0x12f941460 <col:11, col:12> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12f941440 <col:12> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12f941520 <line:15:2, col:25> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12f9414d8 <col:2, col:14> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12f9414a0 <col:2> 'struct ring_buffer_per_cpu *' lvalue ParmVar 0x12f928648 'cpu_buffer' 'struct ring_buffer_per_cpu *'     | `-DeclRefExpr 0x12f941500 <col:25> 'unsigned long' lvalue ParmVar 0x12f9286c8 'nr_pages' 'unsigned long'     |-CallExpr 0x12f941678 <line:17:2, col:27> 'int'     | |-ImplicitCastExpr 0x12f941660 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12f941620 <col:2> 'int ()' Function 0x12f941568 'rb_check_pages' 'int ()'     | `-ImplicitCastExpr 0x12f9416a0 <col:17> 'struct ring_buffer_per_cpu *' <LValueToRValue>     |   `-DeclRefExpr 0x12f941640 <col:17> 'struct ring_buffer_per_cpu *' lvalue ParmVar 0x12f928648 'cpu_buffer' 'struct ring_buffer_per_cpu *'     `-ReturnStmt 0x12f9416d8 <line:19:2, col:9>       `-IntegerLiteral 0x12f9416b8 <col:9> 'int' 0 ","19664":"`-FunctionDecl 0x1581422f8  col:3 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x1581423f8 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x1581423a0 <<invalid sloc>> Implicit 873 ","19831":"`-FunctionDecl 0x150941108  line:1:22 referenced v9fs_qid_iget_dotl 'struct inode *(struct super_block *, struct p9_qid *, struct p9_fid *, struct p9_stat_dotl *, int)' static   |-ParmVarDecl 0x1509286e8 <col:41, col:61> col:61 used sb 'struct super_block *'   |-ParmVarDecl 0x150940ac8 <line:2:6, col:21> col:21 used qid 'struct p9_qid *'   |-ParmVarDecl 0x150940c98 <line:3:6, col:21> col:21 used fid 'struct p9_fid *'   |-ParmVarDecl 0x150940e68 <line:4:6, col:27> col:27 used st 'struct p9_stat_dotl *'   |-ParmVarDecl 0x150940ee8 <line:5:6, col:10> col:10 used new 'int'   `-CompoundStmt 0x150948f88 <line:6:1, line:43:1>     |-DeclStmt 0x1509412a0 <line:7:2, col:12>     | `-VarDecl 0x150941238 <col:2, col:6> col:6 used retval 'int'     |-DeclStmt 0x150941338 <line:8:2, col:21>     | `-VarDecl 0x1509412d0 <col:2, col:16> col:16 used i_ino 'unsigned long'     |-DeclStmt 0x150941440 <line:9:2, col:21>     | `-VarDecl 0x1509413d8 <col:2, col:16> col:16 used inode 'struct inode *'     |-DeclStmt 0x1509416a8 <line:10:2, col:49>     | |-RecordDecl 0x150941458 <col:2, col:9> col:9 struct v9fs_session_info     | `-VarDecl 0x1509415c8 <col:2, col:40> col:28 used v9ses 'struct v9fs_session_info *' cinit     |   `-RecoveryExpr 0x150941668 <col:36, col:40> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x150941630 <col:36> 'struct super_block *' lvalue ParmVar 0x1509286e8 'sb' 'struct super_block *'     |-DeclStmt 0x150941990 <line:11:2, col:37>     | `-VarDecl 0x150941928 <col:2, col:36> col:8 used test 'int (*)(struct inode *, void *)'     |-IfStmt 0x150946328 <line:13:2, line:16:10> has_else     | |-ImplicitCastExpr 0x1509419c8 <line:13:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x1509419a8 <col:6> 'int' lvalue ParmVar 0x150940ee8 'new' 'int'     | |-BinaryOperator 0x150946270 <line:14:3, col:10> 'int (*)(struct inode *, void *)' contains-errors '='     | | |-DeclRefExpr 0x1509419e0 <col:3> 'int (*)(struct inode *, void *)' lvalue Var 0x150941928 'test' 'int (*)(struct inode *, void *)'     | | `-RecoveryExpr 0x150946250 <col:10> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x150946308 <line:16:3, col:10> 'int (*)(struct inode *, void *)' contains-errors '='     |   |-DeclRefExpr 0x150946290 <col:3> 'int (*)(struct inode *, void *)' lvalue Var 0x150941928 'test' 'int (*)(struct inode *, void *)'     |   `-RecoveryExpr 0x1509462e8 <col:10> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x150946570 <line:18:2, col:26> 'unsigned long' '='     | |-DeclRefExpr 0x150946358 <col:2> 'unsigned long' lvalue Var 0x1509412d0 'i_ino' 'unsigned long'     | `-ImplicitCastExpr 0x150946558 <col:10, col:26> 'unsigned long' <IntegralCast>     |   `-CallExpr 0x150946518 <col:10, col:26> 'int'     |     |-ImplicitCastExpr 0x150946500 <col:10> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x150946490 <col:10> 'int ()' Function 0x1509463d8 'v9fs_qid2ino' 'int ()'     |     `-ImplicitCastExpr 0x150946540 <col:23> 'struct p9_qid *' <LValueToRValue>     |       `-DeclRefExpr 0x1509464b0 <col:23> 'struct p9_qid *' lvalue ParmVar 0x150940ac8 'qid' 'struct p9_qid *'     |-BinaryOperator 0x150946928 <line:19:2, col:63> 'struct inode *' '='     | |-DeclRefExpr 0x150946590 <col:2> 'struct inode *' lvalue Var 0x1509413d8 'inode' 'struct inode *'     | `-ImplicitCastExpr 0x150946910 <col:10, col:63> 'struct inode *' <IntegralToPointer>     |   `-CallExpr 0x1509467e8 <col:10, col:63> 'int'     |     |-ImplicitCastExpr 0x1509467d0 <col:10> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x150946690 <col:10> 'int ()' Function 0x1509465d8 'iget5_locked' 'int ()'     |     |-ImplicitCastExpr 0x150946830 <col:23> 'struct super_block *' <LValueToRValue>     |     | `-DeclRefExpr 0x1509466b0 <col:23> 'struct super_block *' lvalue ParmVar 0x1509286e8 'sb' 'struct super_block *'     |     |-ImplicitCastExpr 0x150946848 <col:27> 'unsigned long' <LValueToRValue>     |     | `-DeclRefExpr 0x1509466d0 <col:27> 'unsigned long' lvalue Var 0x1509412d0 'i_ino' 'unsigned long'     |     |-ImplicitCastExpr 0x150946860 <col:34> 'int (*)(struct inode *, void *)' <LValueToRValue>     |     | `-DeclRefExpr 0x1509466f0 <col:34> 'int (*)(struct inode *, void *)' lvalue Var 0x150941928 'test' 'int (*)(struct inode *, void *)'     |     |-ImplicitCastExpr 0x1509468e0 <col:40> 'struct inode *(*)(struct super_block *, struct p9_qid *, struct p9_fid *, struct p9_stat_dotl *, int)' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1509467b0 <col:40> 'struct inode *(struct super_block *, struct p9_qid *, struct p9_fid *, struct p9_stat_dotl *, int)' Function 0x150941108 'v9fs_qid_iget_dotl' 'struct inode *(struct super_block *, struct p9_qid *, struct p9_fid *, struct p9_stat_dotl *, int)'     |     `-ImplicitCastExpr 0x1509468f8 <col:61> 'struct p9_stat_dotl *' <LValueToRValue>     |       `-DeclRefExpr 0x150946728 <col:61> 'struct p9_stat_dotl *' lvalue ParmVar 0x150940e68 'st' 'struct p9_stat_dotl *'     |-IfStmt 0x150946b90 <line:20:2, line:21:25>     | |-UnaryOperator 0x150946980 <line:20:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x150946968 <col:7> 'struct inode *' <LValueToRValue>     | |   `-DeclRefExpr 0x150946948 <col:7> 'struct inode *' lvalue Var 0x1509413d8 'inode' 'struct inode *'     | `-ReturnStmt 0x150946b80 <line:21:3, col:25>     |   `-CallExpr 0x150946b58 <col:10, col:25> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x150946a78 <col:10> 'int ()' Function 0x1509469c0 'ERR_PTR' 'int ()'     |     `-UnaryOperator 0x150946b40 <col:18, col:19> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x150946b28 <col:19> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x150946b08 <col:19> '<dependent type>' contains-errors lvalue     |-IfStmt 0x150946cb0 <line:22:2, line:23:10>     | |-RecoveryExpr 0x150946c48 <line:22:6, col:30> '_Bool' contains-errors     | `-ReturnStmt 0x150946ca0 <line:23:3, col:10>     |   `-ImplicitCastExpr 0x150946c88 <col:10> 'struct inode *' <LValueToRValue>     |     `-DeclRefExpr 0x150946c68 <col:10> 'struct inode *' lvalue Var 0x1509413d8 'inode' 'struct inode *'     |-BinaryOperator 0x150946d50 <line:25:2, col:17> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x150946d08 <col:2, col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x150946cd0 <col:2> 'struct inode *' lvalue Var 0x1509413d8 'inode' 'struct inode *'     | `-DeclRefExpr 0x150946d30 <col:17> 'unsigned long' lvalue Var 0x1509412d0 'i_ino' 'unsigned long'     |-BinaryOperator 0x1509470f8 <line:26:2, line:27:46> 'int' contains-errors '='     | |-DeclRefExpr 0x150946d70 <line:26:2> 'int' lvalue Var 0x150941238 'retval' 'int'     | `-CallExpr 0x1509470b8 <col:11, line:27:46> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x150946e70 <line:26:11> 'int ()' Function 0x150946db8 'v9fs_init_inode' 'int ()'     |   |-DeclRefExpr 0x150946e90 <col:27> 'struct v9fs_session_info *' contains-errors lvalue Var 0x1509415c8 'v9ses' 'struct v9fs_session_info *'     |   |-DeclRefExpr 0x150946eb0 <col:34> 'struct inode *' lvalue Var 0x1509413d8 'inode' 'struct inode *'     |   |-RecoveryExpr 0x150946f08 <line:27:6, col:10> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x150946ed0 <col:6> 'struct p9_stat_dotl *' lvalue ParmVar 0x150940e68 'st' 'struct p9_stat_dotl *'     |   `-CallExpr 0x150947090 <col:19, col:45> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x150947010 <col:19> 'int ()' Function 0x150946f58 'new_decode_dev' 'int ()'     |     `-RecoveryExpr 0x150947068 <col:34, col:38> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x150947030 <col:34> 'struct p9_stat_dotl *' lvalue ParmVar 0x150940e68 'st' 'struct p9_stat_dotl *'     |-IfStmt 0x1509471b8 <line:28:2, line:29:8>     | |-ImplicitCastExpr 0x150947138 <line:28:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x150947118 <col:6> 'int' lvalue Var 0x150941238 'retval' 'int'     | `-GotoStmt 0x1509471a0 <line:29:3, col:8> 'error' 0x150947150     |-CallExpr 0x150948730 <line:31:2, col:32> 'int'     | |-ImplicitCastExpr 0x150948718 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1509486b8 <col:2> 'int ()' Function 0x150948600 'v9fs_stat2inode_dotl' 'int ()'     | |-ImplicitCastExpr 0x150948760 <col:23> 'struct p9_stat_dotl *' <LValueToRValue>     | | `-DeclRefExpr 0x1509486d8 <col:23> 'struct p9_stat_dotl *' lvalue ParmVar 0x150940e68 'st' 'struct p9_stat_dotl *'     | `-ImplicitCastExpr 0x150948778 <col:27> 'struct inode *' <LValueToRValue>     |   `-DeclRefExpr 0x1509486f8 <col:27> 'struct inode *' lvalue Var 0x1509413d8 'inode' 'struct inode *'     |-CallExpr 0x1509488c8 <line:32:2, col:35> 'int'     | |-ImplicitCastExpr 0x1509488b0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x150948870 <col:2> 'int ()' Function 0x1509487b8 'v9fs_cache_inode_get_cookie' 'int ()'     | `-ImplicitCastExpr 0x1509488f0 <col:30> 'struct inode *' <LValueToRValue>     |   `-DeclRefExpr 0x150948890 <col:30> 'struct inode *' lvalue Var 0x1509413d8 'inode' 'struct inode *'     |-BinaryOperator 0x150948ae0 <line:33:2, col:34> 'int' '='     | |-DeclRefExpr 0x150948908 <col:2> 'int' lvalue Var 0x150941238 'retval' 'int'     | `-CallExpr 0x150948a80 <col:11, col:34> 'int'     |   |-ImplicitCastExpr 0x150948a68 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x150948a08 <col:11> 'int ()' Function 0x150948950 'v9fs_get_acl' 'int ()'     |   |-ImplicitCastExpr 0x150948ab0 <col:24> 'struct inode *' <LValueToRValue>     |   | `-DeclRefExpr 0x150948a28 <col:24> 'struct inode *' lvalue Var 0x1509413d8 'inode' 'struct inode *'     |   `-ImplicitCastExpr 0x150948ac8 <col:31> 'struct p9_fid *' <LValueToRValue>     |     `-DeclRefExpr 0x150948a48 <col:31> 'struct p9_fid *' lvalue ParmVar 0x150940c98 'fid' 'struct p9_fid *'     |-IfStmt 0x150948b50 <line:34:2, line:35:8>     | |-ImplicitCastExpr 0x150948b20 <line:34:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x150948b00 <col:6> 'int' lvalue Var 0x150941238 'retval' 'int'     | `-GotoStmt 0x150948b38 <line:35:3, col:8> 'error' 0x150947150     |-CallExpr 0x150948ca8 <line:37:2, col:24> 'int'     | |-ImplicitCastExpr 0x150948c90 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x150948c50 <col:2> 'int ()' Function 0x150948b98 'unlock_new_inode' 'int ()'     | `-ImplicitCastExpr 0x150948cd0 <col:19> 'struct inode *' <LValueToRValue>     |   `-DeclRefExpr 0x150948c70 <col:19> 'struct inode *' lvalue Var 0x1509413d8 'inode' 'struct inode *'     |-ReturnStmt 0x150948d20 <line:38:2, col:9>     | `-ImplicitCastExpr 0x150948d08 <col:9> 'struct inode *' <LValueToRValue>     |   `-DeclRefExpr 0x150948ce8 <col:9> 'struct inode *' lvalue Var 0x1509413d8 'inode' 'struct inode *'     |-LabelStmt 0x150948ea8 <line:39:1, line:40:19> 'error'     | `-CallExpr 0x150948e68 <col:2, col:19> 'int'     |   |-ImplicitCastExpr 0x150948e50 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x150948e10 <col:2> 'int ()' Function 0x150948d58 'iget_failed' 'int ()'     |   `-ImplicitCastExpr 0x150948e90 <col:14> 'struct inode *' <LValueToRValue>     |     `-DeclRefExpr 0x150948e30 <col:14> 'struct inode *' lvalue Var 0x1509413d8 'inode' 'struct inode *'     `-ReturnStmt 0x150948f78 <line:41:2, col:23>       `-ImplicitCastExpr 0x150948f60 <col:9, col:23> 'struct inode *' <IntegralToPointer>         `-CallExpr 0x150948f20 <col:9, col:23> 'int'           |-ImplicitCastExpr 0x150948f08 <col:9> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x150948ec8 <col:9> 'int ()' Function 0x1509469c0 'ERR_PTR' 'int ()'           `-ImplicitCastExpr 0x150948f48 <col:17> 'int' <LValueToRValue>             `-DeclRefExpr 0x150948ee8 <col:17> 'int' lvalue Var 0x150941238 'retval' 'int' ","19206":"`-FunctionDecl 0x12d128b68  line:1:5 invalid MMDB_open 'int (const char *const, int, int *const)'   |-ParmVarDecl 0x12d1288d8 <col:15, col:33> col:33 used filename 'const char *const'   |-ParmVarDecl 0x12d128970 <col:43, col:52> col:52 referenced invalid flags 'int'   |-ParmVarDecl 0x12d128a28 <col:59, col:73> col:73 referenced invalid mmdb 'int *const'   `-CompoundStmt 0x12d144298 <line:2:1, line:68:1>     |-DeclStmt 0x12d128ce0 <line:3:5, col:30>     | `-VarDecl 0x12d128c40 <col:5, col:18> col:9 used status 'int' cinit     |   `-RecoveryExpr 0x12d128cc0 <col:18> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12d128de0 <line:5:5, col:26> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12d128d40 <col:5, col:11> '<dependent type>' contains-errors lvalue ->file_content     | | `-RecoveryExpr 0x12d128d18 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12d128cf8 <col:5> 'int *const' lvalue ParmVar 0x12d128a28 'mmdb' 'int *const'     | `-RecoveryExpr 0x12d128dc0 <col:26> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12d128ee8 <line:6:5, col:26> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12d128e48 <col:5, col:11> '<dependent type>' contains-errors lvalue ->data_section     | | `-RecoveryExpr 0x12d128e20 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12d128e00 <col:5> 'int *const' lvalue ParmVar 0x12d128a28 'mmdb' 'int *const'     | `-RecoveryExpr 0x12d128ec8 <col:26> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12d142040 <line:7:5, col:36> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12d128f98 <col:5, col:20> '<dependent type>' contains-errors lvalue .database_type     | | `-CXXDependentScopeMemberExpr 0x12d128f50 <col:5, col:11> '<dependent type>' contains-errors lvalue ->metadata     | |   `-RecoveryExpr 0x12d128f28 <col:5> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x12d128f08 <col:5> 'int *const' lvalue ParmVar 0x12d128a28 'mmdb' 'int *const'     | `-RecoveryExpr 0x12d142020 <col:36> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12d1421a0 <line:8:5, col:38> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12d142138 <col:5, col:30> '<dependent type>' contains-errors lvalue .count     | | `-CXXDependentScopeMemberExpr 0x12d1420f0 <col:5, col:20> '<dependent type>' contains-errors lvalue .languages     | |   `-CXXDependentScopeMemberExpr 0x12d1420a8 <col:5, col:11> '<dependent type>' contains-errors lvalue ->metadata     | |     `-RecoveryExpr 0x12d142080 <col:5> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x12d142060 <col:5> 'int *const' lvalue ParmVar 0x12d128a28 'mmdb' 'int *const'     | `-IntegerLiteral 0x12d142180 <col:38> 'int' 0     |-BinaryOperator 0x12d142300 <line:9:5, col:40> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12d142298 <col:5, col:32> '<dependent type>' contains-errors lvalue .count     | | `-CXXDependentScopeMemberExpr 0x12d142250 <col:5, col:20> '<dependent type>' contains-errors lvalue .description     | |   `-CXXDependentScopeMemberExpr 0x12d142208 <col:5, col:11> '<dependent type>' contains-errors lvalue ->metadata     | |     `-RecoveryExpr 0x12d1421e0 <col:5> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x12d1421c0 <col:5> 'int *const' lvalue ParmVar 0x12d128a28 'mmdb' 'int *const'     | `-IntegerLiteral 0x12d1422e0 <col:40> 'int' 0     |-BinaryOperator 0x12d1425d8 <line:11:5, col:42> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12d142368 <col:5, col:11> '<dependent type>' contains-errors lvalue ->filename     | | `-RecoveryExpr 0x12d142340 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12d142320 <col:5> 'int *const' lvalue ParmVar 0x12d128a28 'mmdb' 'int *const'     | `-CallExpr 0x12d142598 <col:22, col:42> 'int'     |   |-ImplicitCastExpr 0x12d142580 <col:22> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12d142510 <col:22> 'int ()' Function 0x12d142458 'mmdb_strdup' 'int ()'     |   `-ImplicitCastExpr 0x12d1425c0 <col:34> 'const char *' <LValueToRValue>     |     `-DeclRefExpr 0x12d142530 <col:34> 'const char *const' lvalue ParmVar 0x12d1288d8 'filename' 'const char *const'     |-IfStmt 0x12d1427f8 <line:12:5, line:15:5>     | |-BinaryOperator 0x12d1426b8 <line:12:9, col:23> 'int' contains-errors '=='     | | |-RecoveryExpr 0x12d142698 <col:9> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x12d142630 <col:17, col:23> '<dependent type>' contains-errors lvalue ->filename     | |   `-RecoveryExpr 0x12d142610 <col:17> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12d1427d8 <col:33, line:15:5>     |   |-BinaryOperator 0x12d142750 <line:13:9, col:18> 'int' contains-errors '='     |   | |-DeclRefExpr 0x12d1426d8 <col:9> 'int' contains-errors lvalue Var 0x12d128c40 'status' 'int'     |   | `-RecoveryExpr 0x12d142730 <col:18> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x12d1427c0 <line:14:9, col:14> 'cleanup' 0x12d142770     |-IfStmt 0x12d1429a8 <line:17:5, line:19:5>     | |-RecoveryExpr 0x12d142890 <line:17:9, col:37> '_Bool' contains-errors     | `-CompoundStmt 0x12d142990 <col:40, line:19:5>     |   `-CompoundAssignOperator 0x12d142960 <line:18:9, col:18> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |     |-RecoveryExpr 0x12d1428d0 <col:9> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x12d1428b0 <col:9> 'int' lvalue ParmVar 0x12d128970 'flags' 'int'     |     `-RecoveryExpr 0x12d142940 <col:18> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12d142a78 <line:20:5, col:19> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12d142a10 <col:5, col:11> '<dependent type>' contains-errors lvalue ->flags     | | `-RecoveryExpr 0x12d1429e8 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12d1429c8 <col:5> 'int *const' lvalue ParmVar 0x12d128a28 'mmdb' 'int *const'     | `-RecoveryExpr 0x12d142a58 <col:19> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12d142ce8 <line:22:5, line:24:5>     | |-BinaryOperator 0x12d142c98 <line:22:9, col:49> 'int' contains-errors '!='     | | |-RecoveryExpr 0x12d142c78 <col:9> '<dependent type>' contains-errors lvalue     | | `-ParenExpr 0x12d142c38 <col:25, col:49> 'int' contains-errors     | |   `-BinaryOperator 0x12d142c18 <col:26, col:48> 'int' contains-errors '='     | |     |-DeclRefExpr 0x12d142ab0 <col:26> 'int' contains-errors lvalue Var 0x12d128c40 'status' 'int'     | |     `-CallExpr 0x12d142bf0 <col:35, col:48> '<dependent type>' contains-errors     | |       |-DeclRefExpr 0x12d142bb0 <col:35> 'int ()' Function 0x12d142af8 'map_file' 'int ()'     | |       `-RecoveryExpr 0x12d142bd0 <col:44> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12d142cd0 <col:53, line:24:5>     |   `-GotoStmt 0x12d142cb8 <line:23:9, col:14> 'cleanup' 0x12d142770     |-DeclStmt 0x12d142fc0 <line:32:5, line:33:60>     | `-VarDecl 0x12d142d20 <line:32:5, col:20> col:20 invalid metadata 'const int *'     |-IfStmt 0x12d143550 <line:34:5, line:37:5>     | |-BinaryOperator 0x12d143460 <line:34:9, col:17> 'int' contains-errors '=='     | | |-RecoveryExpr 0x12d143440 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12d143400 <col:17> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12d143530 <col:27, line:37:5>     |   |-BinaryOperator 0x12d1434f8 <line:35:9, col:18> 'int' contains-errors '='     |   | |-DeclRefExpr 0x12d143480 <col:9> 'int' contains-errors lvalue Var 0x12d128c40 'status' 'int'     |   | `-RecoveryExpr 0x12d1434d8 <col:18> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x12d143518 <line:36:9, col:14> 'cleanup' 0x12d142770     |-BinaryOperator 0x12d143620 <line:39:5, col:30> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12d1435b8 <col:5, col:11> '<dependent type>' contains-errors lvalue ->metadata_section     | | `-RecoveryExpr 0x12d143590 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12d143570 <col:5> 'int *const' lvalue ParmVar 0x12d128a28 'mmdb' 'int *const'     | `-RecoveryExpr 0x12d143600 <col:30> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12d143728 <line:40:5, col:35> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12d143688 <col:5, col:11> '<dependent type>' contains-errors lvalue ->metadata_section_size     | | `-RecoveryExpr 0x12d143660 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12d143640 <col:5> 'int *const' lvalue ParmVar 0x12d128a28 'mmdb' 'int *const'     | `-RecoveryExpr 0x12d143708 <col:35> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12d1438b0 <line:42:5, col:32> 'int' contains-errors '='     | |-DeclRefExpr 0x12d143748 <col:5> 'int' contains-errors lvalue Var 0x12d128c40 'status' 'int'     | `-CallExpr 0x12d143888 <col:14, col:32> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12d143848 <col:14> 'int ()' Function 0x12d143790 'read_metadata' 'int ()'     |   `-RecoveryExpr 0x12d143868 <col:28> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12d143940 <line:43:5, line:45:5>     | |-RecoveryExpr 0x12d1438f0 <line:43:9, col:25> '_Bool' contains-errors     | `-CompoundStmt 0x12d143928 <col:33, line:45:5>     |   `-GotoStmt 0x12d143910 <line:44:9, col:14> 'cleanup' 0x12d142770     |-IfStmt 0x12d143aa0 <line:47:5, line:50:5>     | |-BinaryOperator 0x12d143a30 <line:47:9, col:55> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x12d1439c8 <col:9, col:24> '<dependent type>' contains-errors lvalue .binary_format_major_version     | | | `-CXXDependentScopeMemberExpr 0x12d143980 <col:9, col:15> '<dependent type>' contains-errors lvalue ->metadata     | | |   `-RecoveryExpr 0x12d143960 <col:9> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x12d143a10 <col:55> 'int' 2     | `-CompoundStmt 0x12d143a88 <col:58, line:50:5>     |   `-GotoStmt 0x12d143a70 <line:49:9, col:14> 'cleanup' 0x12d142770     |-BinaryOperator 0x12d143d60 <line:57:5, col:30> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12d143cf8 <col:5, col:11> '<dependent type>' contains-errors lvalue ->metadata_section     | | `-RecoveryExpr 0x12d143cd0 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12d143cb0 <col:5> 'int *const' lvalue ParmVar 0x12d128a28 'mmdb' 'int *const'     | `-RecoveryExpr 0x12d143d40 <col:30> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12d143e78 <line:58:5, col:40> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12d143e10 <col:5, col:27> '<dependent type>' contains-errors lvalue .node_value     | | `-CXXDependentScopeMemberExpr 0x12d143dc8 <col:5, col:11> '<dependent type>' contains-errors lvalue ->ipv4_start_node     | |   `-RecoveryExpr 0x12d143da0 <col:5> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x12d143d80 <col:5> 'int *const' lvalue ParmVar 0x12d128a28 'mmdb' 'int *const'     | `-IntegerLiteral 0x12d143e58 <col:40> 'int' 0     |-BinaryOperator 0x12d143f90 <line:59:5, col:37> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12d143f28 <col:5, col:27> '<dependent type>' contains-errors lvalue .netmask     | | `-CXXDependentScopeMemberExpr 0x12d143ee0 <col:5, col:11> '<dependent type>' contains-errors lvalue ->ipv4_start_node     | |   `-RecoveryExpr 0x12d143eb8 <col:5> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x12d143e98 <col:5> 'int *const' lvalue ParmVar 0x12d128a28 'mmdb' 'int *const'     | `-IntegerLiteral 0x12d143f70 <col:37> 'int' 0     |-LabelStmt 0x12d144230 <line:61:2, line:66:5> 'cleanup'     | `-IfStmt 0x12d144210 <line:62:5, line:66:5>     |   |-RecoveryExpr 0x12d143fd0 <line:62:9, col:25> '_Bool' contains-errors     |   `-CompoundStmt 0x12d1441f0 <col:33, line:66:5>     |     |-DeclStmt 0x12d144070 <line:63:9, col:32>     |     | `-VarDecl 0x12d144008 <col:9, col:13> col:13 used saved_errno 'int'     |     `-CallExpr 0x12d1441a8 <line:64:9, col:30> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x12d144168 <col:9> 'int ()' Function 0x12d1440b0 'free_mmdb_struct' 'int ()'     |       `-RecoveryExpr 0x12d144188 <col:26> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12d144288 <line:67:5, col:12>       `-ImplicitCastExpr 0x12d144270 <col:12> 'int' contains-errors <LValueToRValue>         `-DeclRefExpr 0x12d144250 <col:12> 'int' contains-errors lvalue Var 0x12d128c40 'status' 'int' ","19587":"`-FunctionDecl 0x12b143da8  col:4 implicit used sprintf 'int (char *, const char *, ...)' extern   |-ParmVarDecl 0x12b143ea8 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x12b143f10 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x12b143e50 <<invalid sloc>> Implicit 906   `-FormatAttr 0x12b143f88 <col:4> Implicit printf 2 3 ","19693":"`-FunctionDecl 0x131013c38  line:1:1 TEST_P 'int (int, int)'   |-ParmVarDecl 0x131013b58 <col:8> col:8 RemoteJwksIntegrationTest 'int'   |-ParmVarDecl 0x131013ad8 <col:35> col:35 WithGoodTokenAsyncFetchFast 'int'   `-CompoundStmt 0x13102ef28 <col:64, line:40:1>     |-CallExpr 0x131013ee0 <line:3:3, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x131013e60 <col:3> 'int ()' Function 0x131013da8 'initializeAsyncFetchFilter' 'int ()'     | `-RecoveryExpr 0x131013ec0 <col:30> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x13102e378 <line:16:3, line:22:5>     | `-VarDecl 0x13102e298 <line:16:3, col:8> col:8 used response 'int' auto     |-CallExpr 0x13102e4a8 <line:24:3, col:30> 'int'     | `-ImplicitCastExpr 0x13102e490 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x13102e470 <col:3> 'int ()' Function 0x13102e3b8 'waitForNextUpstreamRequest' 'int ()'     |-DeclStmt 0x13102e628 <line:26:3, line:27:69>     | `-VarDecl 0x13102e4e0 <line:26:3, col:14> col:14 used payload_entry 'const int' auto     |-CallExpr 0x13102e7a8 <line:28:3, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13102e720 <col:3> 'int ()' Function 0x13102e668 'EXPECT_FALSE' 'int ()'     | `-CallExpr 0x13102e788 <col:16, col:36> '<dependent type>' contains-errors     |   `-RecoveryExpr 0x13102e760 <col:16, col:30> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13102e740 <col:16> 'const int' lvalue Var 0x13102e4e0 'payload_entry' 'const int'     |-CallExpr 0x13102eba8 <line:35:3, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13102eb08 <col:3> 'int ()' Function 0x13102ea50 'ASSERT_TRUE' 'int ()'     | `-CallExpr 0x13102eb88 <col:15, col:42> '<dependent type>' contains-errors     |   `-RecoveryExpr 0x13102eb60 <col:15, col:25> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13102eb28 <col:15> 'int' lvalue Var 0x13102e298 'response' 'int'     |-CallExpr 0x13102ec70 <line:36:3, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13102ebd0 <col:3> 'int ()' Function 0x13102ea50 'ASSERT_TRUE' 'int ()'     | `-CallExpr 0x13102ec50 <col:15, col:34> '<dependent type>' contains-errors     |   `-RecoveryExpr 0x13102ec28 <col:15, col:25> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13102ebf0 <col:15> 'int' lvalue Var 0x13102e298 'response' 'int'     |-CallExpr 0x13102edc0 <line:37:3, col:56> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13102ec98 <col:3> 'int ()' Function 0x13102e7f8 'EXPECT_EQ' 'int ()'     | |-StringLiteral 0x13102ecb8 <col:13> 'char[4]' lvalue \"STR\"     | `-CallExpr 0x13102eda0 <col:20, col:55> '<dependent type>' contains-errors     |   `-CXXDependentScopeMemberExpr 0x13102ed58 <col:20, col:40> '<dependent type>' contains-errors lvalue .getStatusValue     |     `-CallExpr 0x13102ed38 <col:20, col:38> '<dependent type>' contains-errors     |       `-RecoveryExpr 0x13102ed10 <col:20, col:30> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x13102ecd8 <col:20> 'int' lvalue Var 0x13102e298 'response' 'int'     `-CallExpr 0x13102ef08 <line:39:3, col:11> 'int'       `-ImplicitCastExpr 0x13102eef0 <col:3> 'int (*)()' <FunctionToPointerDecay>         `-DeclRefExpr 0x13102eed0 <col:3> 'int ()' Function 0x13102ee18 'cleanup' 'int ()' ","19653":"`-FunctionDecl 0x1500fc638  line:1:17 invalid opj_jp2_read_boxhdr_char 'int (int *, int *, int *, int, int *)' static   |-ParmVarDecl 0x1500fc328 <col:42, col:57> col:57 referenced invalid box 'int *'   |-ParmVarDecl 0x1500fc3a8 <line:2:9, col:20> col:20 referenced invalid p_data 'int *'   |-ParmVarDecl 0x1500fc428 <line:3:9, col:22> col:22 invalid p_number_bytes_read 'int *'   |-ParmVarDecl 0x1500fc4a8 <line:4:9, col:20> col:20 invalid p_box_max_size 'int'   |-ParmVarDecl 0x1500fc528 <line:5:9, col:27> col:27 invalid p_manager 'int *'   `-CompoundStmt 0x150116e90 <line:7:1, line:70:1>     |-CallExpr 0x1500fc8e0 <line:11:5, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1500fc860 <col:5> 'int ()' Function 0x1500fc7a8 'assert' 'int ()'     | `-BinaryOperator 0x1500fc8c0 <col:12, col:22> 'int' contains-errors '!='     |   |-RecoveryExpr 0x1500fc880 <col:12> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x1500fc8a0 <col:22> 'int' 0     |-CallExpr 0x1500fc988 <line:12:5, col:21> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1500fc908 <col:5> 'int ()' Function 0x1500fc7a8 'assert' 'int ()'     | `-BinaryOperator 0x1500fc968 <col:12, col:19> 'int' contains-errors '!='     |   |-RecoveryExpr 0x1500fc928 <col:12> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x1500fc948 <col:19> 'int' 0     |-CallExpr 0x150115a40 <line:13:5, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1500fc9b0 <col:5> 'int ()' Function 0x1500fc7a8 'assert' 'int ()'     | `-BinaryOperator 0x150115a20 <col:12, col:35> 'int' contains-errors '!='     |   |-RecoveryExpr 0x1500fc9d0 <col:12> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x150115a00 <col:35> 'int' 0     |-CallExpr 0x150115ae8 <line:14:5, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x150115a68 <col:5> 'int ()' Function 0x1500fc7a8 'assert' 'int ()'     | `-BinaryOperator 0x150115ac8 <col:12, col:25> 'int' contains-errors '!='     |   |-RecoveryExpr 0x150115a88 <col:12> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x150115aa8 <col:25> 'int' 0     |-IfStmt 0x150115e08 <line:16:5, line:19:5>     | |-BinaryOperator 0x150115b50 <line:16:9, col:26> 'int' contains-errors '<'     | | |-RecoveryExpr 0x150115b10 <col:9> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x150115b30 <col:26> 'int' 8     | `-CompoundStmt 0x150115de8 <col:29, line:19:5>     |   |-CallExpr 0x150115d68 <line:17:9, col:50> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x150115c50 <col:9> 'int ()' Function 0x150115b98 'opj_event_msg' 'int ()'     |   | |-RecoveryExpr 0x150115c70 <col:23> '<dependent type>' contains-errors lvalue     |   | |-RecoveryExpr 0x150115d48 <col:34> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x150115cf0 <col:45> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x150115dd8 <line:18:9, col:16>     |     `-RecoveryExpr 0x150115db8 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x150116008 <line:22:5, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x150115f08 <col:5> 'int ()' Function 0x150115e50 'opj_read_bytes' 'int ()'     | |-RecoveryExpr 0x150115f28 <col:20> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x150115ff0 <col:28, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x150115fd0 <col:29> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x150115f78 <col:38> 'int' 4     |-CompoundAssignOperator 0x1501160a8 <line:23:5, col:15> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-RecoveryExpr 0x150116060 <col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x150116040 <col:5> 'int *' lvalue ParmVar 0x1500fc3a8 'p_data' 'int *'     | `-IntegerLiteral 0x150116088 <col:15> 'int' 4     |-CallExpr 0x150116298 <line:26:5, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x150116198 <col:5> 'int ()' Function 0x150115e50 'opj_read_bytes' 'int ()'     | |-RecoveryExpr 0x1501161b8 <col:20> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x150116280 <col:28, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x150116260 <col:29> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x150116208 <col:38> 'int' 4     |-CompoundAssignOperator 0x150116338 <line:27:5, col:15> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-RecoveryExpr 0x1501162f0 <col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1501162d0 <col:5> 'int *' lvalue ParmVar 0x1500fc3a8 'p_data' 'int *'     | `-IntegerLiteral 0x150116318 <col:15> 'int' 4     |-BinaryOperator 0x150116498 <line:30:5, col:28> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x150116460 <col:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x150116448 <col:6> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x150116428 <col:6> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x150116478 <col:28> 'int' 8     |-IfStmt 0x150116cf8 <line:34:5, line:64:5> has_else     | |-BinaryOperator 0x150116540 <line:34:9, col:24> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x1501164d8 <col:9, col:14> '<dependent type>' contains-errors lvalue ->length     | | | `-RecoveryExpr 0x1501164b8 <col:9> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x150116520 <col:24> 'int' 1     | |-CompoundStmt 0x150116b80 <col:27, line:61:5>     | | |-IfStmt 0x150116630 <line:37:9, line:41:9>     | | | |-BinaryOperator 0x1501165a0 <line:37:13, col:30> 'int' contains-errors '<'     | | | | |-RecoveryExpr 0x150116560 <col:13> '<dependent type>' contains-errors lvalue     | | | | `-IntegerLiteral 0x150116580 <col:30> 'int' 16     | | | `-CompoundStmt 0x150116620 <col:34, line:41:9>     | | |-CompoundAssignOperator 0x150116718 <line:44:9, col:19> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | | | |-RecoveryExpr 0x1501166d0 <col:9> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x1501166b0 <col:9> 'int *' lvalue ParmVar 0x1500fc3a8 'p_data' 'int *'     | | | `-IntegerLiteral 0x1501166f8 <col:19> 'int' 4     | | |-CompoundAssignOperator 0x1501167b8 <line:45:9, col:33> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | | | |-UnaryOperator 0x150116780 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow     | | | | `-ImplicitCastExpr 0x150116768 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | | | |   `-RecoveryExpr 0x150116748 <col:10> '<dependent type>' contains-errors lvalue     | | | `-IntegerLiteral 0x150116798 <col:33> 'int' 4     | | |-IfStmt 0x150116898 <line:47:9, line:51:9>     | | | |-RecoveryExpr 0x150116808 <line:47:13, col:31> '_Bool' contains-errors     | | | `-CompoundStmt 0x150116888 <col:34, line:51:9>     | | |-CompoundAssignOperator 0x150116988 <line:54:9, col:33> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | | | |-UnaryOperator 0x150116950 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow     | | | | `-ImplicitCastExpr 0x150116938 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | | | |   `-RecoveryExpr 0x150116918 <col:10> '<dependent type>' contains-errors lvalue     | | | `-IntegerLiteral 0x150116968 <col:33> 'int' 4     | | `-IfStmt 0x150116b60 <line:57:9, line:60:9>     | |   |-BinaryOperator 0x150116ad0 <line:57:13, col:28> 'int' contains-errors '=='     | |   | |-CXXDependentScopeMemberExpr 0x150116a68 <col:13, col:18> '<dependent type>' contains-errors lvalue ->length     | |   | | `-RecoveryExpr 0x150116a48 <col:13> '<dependent type>' contains-errors lvalue     | |   | `-IntegerLiteral 0x150116ab0 <col:28> 'int' 0     | |   `-CompoundStmt 0x150116b50 <col:31, line:60:9>     | `-IfStmt 0x150116cd8 <line:61:12, line:64:5>     |   |-BinaryOperator 0x150116c48 <line:61:16, col:31> 'int' contains-errors '=='     |   | |-CXXDependentScopeMemberExpr 0x150116be0 <col:16, col:21> '<dependent type>' contains-errors lvalue ->length     |   | | `-RecoveryExpr 0x150116bc0 <col:16> '<dependent type>' contains-errors lvalue     |   | `-IntegerLiteral 0x150116c28 <col:31> 'int' 0     |   `-CompoundStmt 0x150116cc8 <col:34, line:64:5>     `-IfStmt 0x150116e70 <line:65:5, line:68:5>       |-BinaryOperator 0x150116de0 <line:65:9, col:24> 'int' contains-errors '<'       | |-CXXDependentScopeMemberExpr 0x150116d48 <col:9, col:14> '<dependent type>' contains-errors lvalue ->length       | | `-RecoveryExpr 0x150116d28 <col:9> '<dependent type>' contains-errors lvalue       | `-UnaryOperator 0x150116dc8 <col:23, col:24> '<dependent type>' contains-errors prefix '*' cannot overflow       |   `-ImplicitCastExpr 0x150116db0 <col:24> '<dependent type>' contains-errors <LValueToRValue>       |     `-RecoveryExpr 0x150116d90 <col:24> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x150116e60 <col:45, line:68:5> ","20102":"`-FunctionDecl 0x12a00dd18  line:1:1 BPF_CALL_1 'int ()'   `-CompoundStmt 0x12a0285a8 <line:2:1, line:11:1>     |-DeclStmt 0x12a00de88 <line:3:2, col:9>     | `-VarDecl 0x12a00de20 <col:2, col:6> col:6 used ret 'int'     |-CallExpr 0x12a00e018 <line:5:2, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12a00df98 <col:2> 'int ()' Function 0x12a00dee0 'bpf_push_mac_rcsum' 'int ()'     | `-RecoveryExpr 0x12a00dff8 <col:21> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12a00e208 <line:6:2, col:24> 'int' contains-errors '='     | |-DeclRefExpr 0x12a00e040 <col:2> 'int' lvalue Var 0x12a00de20 'ret' 'int'     | `-CallExpr 0x12a00e1e0 <col:8, col:24> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12a00e140 <col:8> 'int ()' Function 0x12a00e088 'skb_vlan_pop' 'int ()'     |   `-RecoveryExpr 0x12a00e1c0 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12a00e388 <line:7:2, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12a00e308 <col:2> 'int ()' Function 0x12a00e250 'bpf_pull_mac_rcsum' 'int ()'     | `-RecoveryExpr 0x12a00e368 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12a028538 <line:9:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12a0284b8 <col:2> 'int ()' Function 0x12a028400 'bpf_compute_data_pointers' 'int ()'     | `-RecoveryExpr 0x12a028518 <col:28> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12a028598 <line:10:2, col:9>       `-ImplicitCastExpr 0x12a028580 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x12a028560 <col:9> 'int' lvalue Var 0x12a00de20 'ret' 'int' ","19798":"`-FunctionDecl 0x152128758  line:1:19 sctp_wspace 'int (struct sctp_association *)' static inline   |-ParmVarDecl 0x152128648 <col:31, col:56> col:56 used asoc 'struct sctp_association *'   `-CompoundStmt 0x152141728 <line:2:1, line:22:1>     |-DeclStmt 0x152140ad0 <line:3:2, col:9>     | `-VarDecl 0x152140a68 <col:2, col:6> col:6 used amt 'int'     |-IfStmt 0x152140e90 <line:5:2, line:8:40> has_else     | |-CXXDependentScopeMemberExpr 0x152140b48 <line:5:6, col:16> '<dependent type>' contains-errors lvalue ->sndbuf_policy     | | `-RecoveryExpr 0x152140b20 <col:6, col:12> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x152140ae8 <col:6> 'struct sctp_association *' lvalue ParmVar 0x152128648 'asoc' 'struct sctp_association *'     | |-BinaryOperator 0x152140c10 <line:6:3, col:15> 'int' contains-errors '='     | | |-DeclRefExpr 0x152140b90 <col:3> 'int' lvalue Var 0x152140a68 'amt' 'int'     | | `-RecoveryExpr 0x152140be8 <col:9, col:15> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x152140bb0 <col:9> 'struct sctp_association *' lvalue ParmVar 0x152128648 'asoc' 'struct sctp_association *'     | `-BinaryOperator 0x152140e70 <line:8:3, col:40> 'int' contains-errors '='     |   |-DeclRefExpr 0x152140c30 <col:3> 'int' lvalue Var 0x152140a68 'amt' 'int'     |   `-CallExpr 0x152140e48 <col:9, col:40> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x152140d80 <col:9> 'int ()' Function 0x152140cc8 'sk_wmem_alloc_get' 'int ()'     |     `-CXXDependentScopeMemberExpr 0x152140e00 <col:27, col:38> '<dependent type>' contains-errors lvalue .sk     |       `-RecoveryExpr 0x152140dd8 <col:27, col:33> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x152140da0 <col:27> 'struct sctp_association *' lvalue ParmVar 0x152128648 'asoc' 'struct sctp_association *'     |-IfStmt 0x1521416b0 <line:10:2, line:20:2> has_else     | |-BinaryOperator 0x152140fd0 <line:10:6, col:28> 'int' contains-errors '>='     | | |-DeclRefExpr 0x152140ec0 <col:6> 'int' lvalue Var 0x152140a68 'amt' 'int'     | | `-CXXDependentScopeMemberExpr 0x152140f88 <col:13, col:28> '<dependent type>' contains-errors lvalue ->sk_sndbuf     | |   `-CXXDependentScopeMemberExpr 0x152140f40 <col:13, col:24> '<dependent type>' contains-errors lvalue .sk     | |     `-RecoveryExpr 0x152140f18 <col:13, col:19> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x152140ee0 <col:13> 'struct sctp_association *' lvalue ParmVar 0x152128648 'asoc' 'struct sctp_association *'     | |-CompoundStmt 0x152141510 <col:39, line:18:2>     | | `-IfStmt 0x1521414e0 <line:11:3, line:17:3> has_else     | |   |-BinaryOperator 0x152141138 <line:11:7, col:37> '<dependent type>' contains-errors '&'     | |   | |-CXXDependentScopeMemberExpr 0x152141098 <col:7, col:22> '<dependent type>' contains-errors lvalue ->sk_userlocks     | |   | | `-CXXDependentScopeMemberExpr 0x152141050 <col:7, col:18> '<dependent type>' contains-errors lvalue .sk     | |   | |   `-RecoveryExpr 0x152141028 <col:7, col:13> '<dependent type>' contains-errors lvalue     | |   | |     `-DeclRefExpr 0x152140ff0 <col:7> 'struct sctp_association *' lvalue ParmVar 0x152128648 'asoc' 'struct sctp_association *'     | |   | `-RecoveryExpr 0x152141118 <col:37> '<dependent type>' contains-errors lvalue     | |   |-BinaryOperator 0x152141198 <line:12:4, col:10> 'int' '='     | |   | |-DeclRefExpr 0x152141158 <col:4> 'int' lvalue Var 0x152140a68 'amt' 'int'     | |   | `-IntegerLiteral 0x152141178 <col:10> 'int' 0     | |   `-CompoundStmt 0x1521414c0 <line:13:8, line:17:3>     | |     |-BinaryOperator 0x1521413a8 <line:14:4, col:40> 'int' contains-errors '='     | |     | |-DeclRefExpr 0x1521411b8 <col:4> 'int' lvalue Var 0x152140a68 'amt' 'int'     | |     | `-CallExpr 0x152141380 <col:10, col:40> '<dependent type>' contains-errors     | |     |   |-DeclRefExpr 0x1521412b8 <col:10> 'int ()' Function 0x152141200 'sk_stream_wspace' 'int ()'     | |     |   `-CXXDependentScopeMemberExpr 0x152141338 <col:27, col:38> '<dependent type>' contains-errors lvalue .sk     | |     |     `-RecoveryExpr 0x152141310 <col:27, col:33> '<dependent type>' contains-errors lvalue     | |     |       `-DeclRefExpr 0x1521412d8 <col:27> 'struct sctp_association *' lvalue ParmVar 0x152128648 'asoc' 'struct sctp_association *'     | |     `-IfStmt 0x1521414a0 <line:15:4, line:16:11>     | |       |-BinaryOperator 0x152141420 <line:15:8, col:14> 'int' '<'     | |       | |-ImplicitCastExpr 0x152141408 <col:8> 'int' <LValueToRValue>     | |       | | `-DeclRefExpr 0x1521413c8 <col:8> 'int' lvalue Var 0x152140a68 'amt' 'int'     | |       | `-IntegerLiteral 0x1521413e8 <col:14> 'int' 0     | |       `-BinaryOperator 0x152141480 <line:16:5, col:11> 'int' '='     | |         |-DeclRefExpr 0x152141440 <col:5> 'int' lvalue Var 0x152140a68 'amt' 'int'     | |         `-IntegerLiteral 0x152141460 <col:11> 'int' 0     | `-CompoundStmt 0x152141698 <line:18:9, line:20:2>     |   `-BinaryOperator 0x152141678 <line:19:3, col:36> 'int' contains-errors '='     |     |-DeclRefExpr 0x152141528 <col:3> 'int' lvalue Var 0x152140a68 'amt' 'int'     |     `-BinaryOperator 0x152141658 <col:9, col:36> '<dependent type>' contains-errors '-'     |       |-CXXDependentScopeMemberExpr 0x1521415f0 <col:9, col:24> '<dependent type>' contains-errors lvalue ->sk_sndbuf     |       | `-CXXDependentScopeMemberExpr 0x1521415a8 <col:9, col:20> '<dependent type>' contains-errors lvalue .sk     |       |   `-RecoveryExpr 0x152141580 <col:9, col:15> '<dependent type>' contains-errors lvalue     |       |     `-DeclRefExpr 0x152141548 <col:9> 'struct sctp_association *' lvalue ParmVar 0x152128648 'asoc' 'struct sctp_association *'     |       `-DeclRefExpr 0x152141638 <col:36> 'int' lvalue Var 0x152140a68 'amt' 'int'     `-ReturnStmt 0x152141718 <line:21:2, col:9>       `-ImplicitCastExpr 0x152141700 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x1521416e0 <col:9> 'int' lvalue Var 0x152140a68 'amt' 'int' ","19367":"`-FunctionDecl 0x1350cdb38  col:23 invalid get_vcol_type 'int ()' ","19332":"`-FunctionDecl 0x1398274d0  line:1:6 invalid fpm_scoreboard_child_use 'void (struct fpm_scoreboard_s *, int, int)'   |-ParmVarDecl 0x13980e248 <col:31, col:56> col:56 used scoreboard 'struct fpm_scoreboard_s *'   |-ParmVarDecl 0x13980e2c8 <col:68, col:72> col:72 used child_index 'int'   |-ParmVarDecl 0x13980e360 <col:85, col:91> col:91 invalid pid 'int'   `-CompoundStmt 0x139827e40 <line:2:1, line:12:1>     |-DeclStmt 0x139827778 <line:3:2, col:36>     | |-RecordDecl 0x139827590 <col:2, col:9> col:9 struct fpm_scoreboard_proc_s     | `-VarDecl 0x1398276f8 <col:2, col:32> col:32 used proc 'struct fpm_scoreboard_proc_s *'     |-BinaryOperator 0x1398277e8 <line:4:2, col:19> 'struct fpm_scoreboard_s *' '='     | |-DeclRefExpr 0x139827790 <col:2> 'struct fpm_scoreboard_s *' lvalue ParmVar 0x13980e248 'scoreboard' 'struct fpm_scoreboard_s *'     | `-ImplicitCastExpr 0x1398277d0 <col:19> 'struct fpm_scoreboard_s *' <LValueToRValue>     |   `-DeclRefExpr 0x1398277b0 <col:19> 'struct fpm_scoreboard_s *' lvalue ParmVar 0x13980e248 'scoreboard' 'struct fpm_scoreboard_s *'     |-BinaryOperator 0x139827ac0 <line:6:2, col:56> 'struct fpm_scoreboard_proc_s *' '='     | |-DeclRefExpr 0x139827828 <col:2> 'struct fpm_scoreboard_proc_s *' lvalue Var 0x1398276f8 'proc' 'struct fpm_scoreboard_proc_s *'     | `-ImplicitCastExpr 0x139827aa8 <col:9, col:56> 'struct fpm_scoreboard_proc_s *' <IntegralToPointer>     |   `-CallExpr 0x139827a48 <col:9, col:56> 'int'     |     |-ImplicitCastExpr 0x139827a30 <col:9> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1398279a0 <col:9> 'int ()' Function 0x1398278e8 'fpm_scoreboard_proc_get' 'int ()'     |     |-ImplicitCastExpr 0x139827a78 <col:33> 'struct fpm_scoreboard_s *' <LValueToRValue>     |     | `-DeclRefExpr 0x1398279c0 <col:33> 'struct fpm_scoreboard_s *' lvalue ParmVar 0x13980e248 'scoreboard' 'struct fpm_scoreboard_s *'     |     `-ImplicitCastExpr 0x139827a90 <col:45> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x1398279e0 <col:45> 'int' lvalue ParmVar 0x13980e2c8 'child_index' 'int'     |-IfStmt 0x139827b58 <line:7:2, line:9:2>     | |-UnaryOperator 0x139827b18 <line:7:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x139827b00 <col:7> 'struct fpm_scoreboard_proc_s *' <LValueToRValue>     | |   `-DeclRefExpr 0x139827ae0 <col:7> 'struct fpm_scoreboard_proc_s *' lvalue Var 0x1398276f8 'proc' 'struct fpm_scoreboard_proc_s *'     | `-CompoundStmt 0x139827b40 <col:13, line:9:2>     |   `-ReturnStmt 0x139827b30 <line:8:3>     |-BinaryOperator 0x139827bf8 <line:10:2, col:14> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x139827bb0 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x139827b78 <col:2> 'struct fpm_scoreboard_proc_s *' lvalue Var 0x1398276f8 'proc' 'struct fpm_scoreboard_proc_s *'     | `-RecoveryExpr 0x139827bd8 <col:14> '<dependent type>' contains-errors lvalue     `-BinaryOperator 0x139827e20 <line:11:2, col:31> '<dependent type>' contains-errors '='       |-RecoveryExpr 0x139827c50 <col:2, col:8> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x139827c18 <col:2> 'struct fpm_scoreboard_proc_s *' lvalue Var 0x1398276f8 'proc' 'struct fpm_scoreboard_proc_s *'       `-CallExpr 0x139827df8 <col:22, col:31> '<dependent type>' contains-errors         |-DeclRefExpr 0x139827d58 <col:22> 'int ()' Function 0x139827ca0 'time' 'int ()'         `-RecoveryExpr 0x139827dd8 <col:27> '<dependent type>' contains-errors lvalue ","19921":"`-FunctionDecl 0x1289233c8  col:4 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x1289234c8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x128923530 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x128923598 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x128923470 <<invalid sloc>> Implicit 882 ","19565":"`-FunctionDecl 0x14c026758  line:1:1 invalid xfs_file_fsync 'int (struct file *, int, int, int)'   |-ParmVarDecl 0x14c00e248 <line:2:2, col:16> col:16 used file 'struct file *'   |-ParmVarDecl 0x14c00e2e0 <line:3:2, col:11> col:11 invalid start 'int'   |-ParmVarDecl 0x14c00e360 <line:4:2, col:11> col:11 invalid end 'int'   |-ParmVarDecl 0x14c026600 <line:5:2, col:8> col:8 used datasync 'int'   `-CompoundStmt 0x14c029238 <line:6:1, line:53:1>     |-DeclStmt 0x14c026ab0 <line:7:2, col:46>     | |-RecordDecl 0x14c026820 <col:2, col:9> col:9 struct inode     | `-VarDecl 0x14c026988 <col:2, col:42> col:17 used inode 'struct inode *' cinit     |   `-CXXDependentScopeMemberExpr 0x14c026a50 <col:25, col:42> '<dependent type>' contains-errors lvalue ->host     |     `-RecoveryExpr 0x14c026a28 <col:25, col:31> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14c0269f0 <col:25> 'struct file *' lvalue ParmVar 0x14c00e248 'file' 'struct file *'     |-DeclStmt 0x14c026ef8 <line:8:2, col:37>     | |-RecordDecl 0x14c026ac8 <col:2, col:9> col:9 struct xfs_inode     | `-VarDecl 0x14c026c38 <col:2, col:36> col:20 used ip 'struct xfs_inode *' cinit     |   `-ImplicitCastExpr 0x14c026ec8 <col:25, col:36> 'struct xfs_inode *' contains-errors <IntegralToPointer>     |     `-CallExpr 0x14c026e88 <col:25, col:36> 'int' contains-errors     |       |-ImplicitCastExpr 0x14c026e70 <col:25> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14c026e00 <col:25> 'int ()' Function 0x14c026d48 'XFS_I' 'int ()'     |       `-ImplicitCastExpr 0x14c026eb0 <col:31> 'struct inode *' contains-errors <LValueToRValue>     |         `-DeclRefExpr 0x14c026e20 <col:31> 'struct inode *' contains-errors lvalue Var 0x14c026988 'inode' 'struct inode *'     |-DeclStmt 0x14c027158 <line:9:2, col:36>     | |-RecordDecl 0x14c026f10 <col:2, col:9> col:9 struct xfs_mount     | `-VarDecl 0x14c027078 <col:2, col:29> col:20 used mp 'struct xfs_mount *' cinit     |   `-RecoveryExpr 0x14c027118 <col:25, col:29> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14c0270e0 <col:25> 'struct xfs_inode *' contains-errors lvalue Var 0x14c026c38 'ip' 'struct xfs_inode *'     |-DeclStmt 0x14c027210 <line:10:2, col:17>     | `-VarDecl 0x14c027188 <col:2, col:16> col:8 used error 'int' cinit     |   `-IntegerLiteral 0x14c0271f0 <col:16> 'int' 0     |-DeclStmt 0x14c0272c8 <line:11:2, col:23>     | `-VarDecl 0x14c027240 <col:2, col:22> col:8 used log_flushed 'int' cinit     |   `-IntegerLiteral 0x14c0272a8 <col:22> 'int' 0     |-CallExpr 0x14c027418 <line:14:2, col:25> 'int' contains-errors     | |-ImplicitCastExpr 0x14c027400 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14c0273c0 <col:2> 'int ()' Function 0x14c027308 'trace_xfs_file_fsync' 'int ()'     | `-ImplicitCastExpr 0x14c027440 <col:23> 'struct xfs_inode *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x14c0273e0 <col:23> 'struct xfs_inode *' contains-errors lvalue Var 0x14c026c38 'ip' 'struct xfs_inode *'     |-BinaryOperator 0x14c80ce58 <line:16:2, col:67> 'int' contains-errors '='     | |-DeclRefExpr 0x14c027458 <col:2> 'int' lvalue Var 0x14c027188 'error' 'int'     | `-CallExpr 0x14c80ce20 <col:10, col:67> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14c027558 <col:10> 'int ()' Function 0x14c0274a0 'filemap_write_and_wait_range' 'int ()'     |   |-RecoveryExpr 0x14c0275b0 <col:39, col:46> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14c027578 <col:39> 'struct inode *' contains-errors lvalue Var 0x14c026988 'inode' 'struct inode *'     |   |-RecoveryExpr 0x14c0275d8 <col:57> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x14c80ce00 <col:64> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14c80cef8 <line:17:2, line:18:10>     | |-ImplicitCastExpr 0x14c80ce98 <line:17:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x14c80ce78 <col:6> 'int' lvalue Var 0x14c027188 'error' 'int'     | `-ReturnStmt 0x14c80cee8 <line:18:3, col:10>     |   `-ImplicitCastExpr 0x14c80ced0 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x14c80ceb0 <col:10> 'int' lvalue Var 0x14c027188 'error' 'int'     |-IfStmt 0x14c80d138 <line:20:2, line:21:11>     | |-CallExpr 0x14c80d050 <line:20:6, col:28> 'int' contains-errors     | | |-ImplicitCastExpr 0x14c80d038 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x14c80cff8 <col:6> 'int ()' Function 0x14c80cf40 'XFS_FORCED_SHUTDOWN' 'int ()'     | | `-ImplicitCastExpr 0x14c80d078 <col:26> 'struct xfs_mount *' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x14c80d018 <col:26> 'struct xfs_mount *' contains-errors lvalue Var 0x14c027078 'mp' 'struct xfs_mount *'     | `-ReturnStmt 0x14c80d128 <line:21:3, col:11>     |   `-UnaryOperator 0x14c80d110 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14c80d0f8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14c80d0d8 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14c80d2e0 <line:23:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c80d238 <col:2> 'int ()' Function 0x14c80d180 'xfs_iflags_clear' 'int ()'     | |-DeclRefExpr 0x14c80d258 <col:19> 'struct xfs_inode *' contains-errors lvalue Var 0x14c026c38 'ip' 'struct xfs_inode *'     | `-RecoveryExpr 0x14c80d2c0 <col:23> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14c80d8d8 <line:25:2, line:31:2>     | |-BinaryOperator 0x14c80d3c8 <line:25:6, col:20> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x14c80d348 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x14c80d310 <col:6> 'struct xfs_mount *' contains-errors lvalue Var 0x14c027078 'mp' 'struct xfs_mount *'     | | `-RecoveryExpr 0x14c80d3a8 <col:20> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14c80d8c0 <col:39, line:31:2>     |   `-IfStmt 0x14c80d890 <line:27:3, line:30:43> has_else     |     |-CallExpr 0x14c80d520 <line:27:7, col:31> 'int' contains-errors     |     | |-ImplicitCastExpr 0x14c80d508 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     | | `-DeclRefExpr 0x14c80d4c8 <col:7> 'int ()' Function 0x14c80d410 'XFS_IS_REALTIME_INODE' 'int ()'     |     | `-ImplicitCastExpr 0x14c80d548 <col:29> 'struct xfs_inode *' contains-errors <LValueToRValue>     |     |   `-DeclRefExpr 0x14c80d4e8 <col:29> 'struct xfs_inode *' contains-errors lvalue Var 0x14c026c38 'ip' 'struct xfs_inode *'     |     |-CallExpr 0x14c80d6c0 <line:28:4, col:44> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x14c80d640 <col:4> 'int ()' Function 0x14c80d588 'xfs_blkdev_issue_flush' 'int ()'     |     | `-RecoveryExpr 0x14c80d698 <col:27, col:31> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x14c80d660 <col:27> 'struct xfs_mount *' contains-errors lvalue Var 0x14c027078 'mp' 'struct xfs_mount *'     |     `-IfStmt 0x14c80d870 <line:29:8, line:30:43>     |       |-BinaryOperator 0x14c80d7a8 <line:29:12, col:38> 'int' contains-errors '!='     |       | |-RecoveryExpr 0x14c80d720 <col:12, col:16> '<dependent type>' contains-errors lvalue     |       | | `-DeclRefExpr 0x14c80d6e8 <col:12> 'struct xfs_mount *' contains-errors lvalue Var 0x14c027078 'mp' 'struct xfs_mount *'     |       | `-RecoveryExpr 0x14c80d780 <col:34, col:38> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x14c80d748 <col:34> 'struct xfs_mount *' contains-errors lvalue Var 0x14c027078 'mp' 'struct xfs_mount *'     |       `-CallExpr 0x14c80d848 <line:30:4, col:43> '<dependent type>' contains-errors     |         |-DeclRefExpr 0x14c80d7c8 <col:4> 'int ()' Function 0x14c80d588 'xfs_blkdev_issue_flush' 'int ()'     |         `-RecoveryExpr 0x14c80d820 <col:27, col:31> '<dependent type>' contains-errors lvalue     |           `-DeclRefExpr 0x14c80d7e8 <col:27> 'struct xfs_mount *' contains-errors lvalue Var 0x14c027078 'mp' 'struct xfs_mount *'     |-IfStmt 0x14c80dd60 <line:35:2, line:39:2>     | |-CallExpr 0x14c80db50 <line:35:6, col:22> 'int' contains-errors     | | |-ImplicitCastExpr 0x14c80db38 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x14c80daf8 <col:6> 'int ()' Function 0x14c80da40 'xfs_ipincount' 'int ()'     | | `-ImplicitCastExpr 0x14c80db78 <col:20> 'struct xfs_inode *' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x14c80db18 <col:20> 'struct xfs_inode *' contains-errors lvalue Var 0x14c026c38 'ip' 'struct xfs_inode *'     | `-CompoundStmt 0x14c80dd50 <col:25, line:39:2>     |-IfStmt 0x14c0291d0 <line:46:2, line:50:42>     | |-RecoveryExpr 0x14c029108 <line:46:6, line:49:7> '_Bool' contains-errors     | `-CallExpr 0x14c0291a8 <line:50:3, col:42> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14c029128 <col:3> 'int ()' Function 0x14c80d588 'xfs_blkdev_issue_flush' 'int ()'     |   `-RecoveryExpr 0x14c029180 <col:26, col:30> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14c029148 <col:26> 'struct xfs_mount *' contains-errors lvalue Var 0x14c027078 'mp' 'struct xfs_mount *'     `-ReturnStmt 0x14c029228 <line:52:2, col:9>       `-ImplicitCastExpr 0x14c029210 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x14c0291f0 <col:9> 'int' lvalue Var 0x14c027188 'error' 'int' ","19478":"`-FunctionDecl 0x13a128750  line:1:13 srpt_release_cmd 'void (struct se_cmd *)' static   |-ParmVarDecl 0x13a128648 <col:30, col:45> col:45 used se_cmd 'struct se_cmd *'   `-CompoundStmt 0x13b808bc0 <line:2:1, line:20:1>     |-DeclStmt 0x13a144fc0 <line:3:2, line:4:33>     | |-RecordDecl 0x13a144c48 <line:3:2, col:9> col:9 struct srpt_send_ioctx     | `-VarDecl 0x13a144db8 <col:2, col:26> col:26 used ioctx 'struct srpt_send_ioctx *'     |-DeclStmt 0x13a145228 <line:5:2, col:37>     | |-RecordDecl 0x13a144fd8 <col:2, col:9> col:9 struct srpt_rdma_ch     | `-VarDecl 0x13a145148 <col:2, col:35> col:23 used ch 'struct srpt_rdma_ch *' cinit     |   `-RecoveryExpr 0x13a1451e8 <col:28, col:35> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13a1451b0 <col:28> 'struct srpt_send_ioctx *' lvalue Var 0x13a144db8 'ioctx' 'struct srpt_send_ioctx *'     |-DeclStmt 0x13a1452c0 <line:6:2, col:21>     | `-VarDecl 0x13a145258 <col:2, col:16> col:16 used flags 'unsigned long'     |-CallExpr 0x13a1454d8 <line:8:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13a1453b8 <col:2> 'int ()' Function 0x13a145300 'WARN_ON' 'int ()'     | `-BinaryOperator 0x13a1454b8 <col:10, col:26> 'int' contains-errors '!='     |   |-RecoveryExpr 0x13a145410 <col:10, col:17> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x13a1453d8 <col:10> 'struct srpt_send_ioctx *' lvalue Var 0x13a144db8 'ioctx' 'struct srpt_send_ioctx *'     |   `-RecoveryExpr 0x13a145498 <col:26> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13a1455c0 <line:9:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13a145500 <col:2> 'int ()' Function 0x13a145300 'WARN_ON' 'int ()'     | `-BinaryOperator 0x13a1455a0 <col:10, col:36> 'int' contains-errors '!='     |   |-RecoveryExpr 0x13a145558 <col:10, col:17> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x13a145520 <col:10> 'struct srpt_send_ioctx *' lvalue Var 0x13a144db8 'ioctx' 'struct srpt_send_ioctx *'     |   `-IntegerLiteral 0x13a145580 <col:36> 'int' 0     |-IfStmt 0x13a1459b0 <line:11:2, line:15:2>     | |-BinaryOperator 0x13a145668 <line:11:6, col:22> 'int' contains-errors '>'     | | |-RecoveryExpr 0x13a145620 <col:6, col:13> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x13a1455e8 <col:6> 'struct srpt_send_ioctx *' lvalue Var 0x13a144db8 'ioctx' 'struct srpt_send_ioctx *'     | | `-IntegerLiteral 0x13a145648 <col:22> 'int' 1     | `-CompoundStmt 0x13a145988 <col:25, line:15:2>     |   |-CallExpr 0x13a1457e8 <line:12:3, col:21> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13a145768 <col:3> 'int ()' Function 0x13a1456b0 'kfree' 'int ()'     |   | `-RecoveryExpr 0x13a1457c0 <col:9, col:16> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x13a145788 <col:9> 'struct srpt_send_ioctx *' lvalue Var 0x13a144db8 'ioctx' 'struct srpt_send_ioctx *'     |   |-BinaryOperator 0x13a1458c8 <line:13:3, col:18> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x13a145848 <col:3, col:10> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x13a145810 <col:3> 'struct srpt_send_ioctx *' lvalue Var 0x13a144db8 'ioctx' 'struct srpt_send_ioctx *'     |   | `-RecoveryExpr 0x13a1458a8 <col:18> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x13a145968 <line:14:3, col:19> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x13a145920 <col:3, col:10> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x13a1458e8 <col:3> 'struct srpt_send_ioctx *' lvalue Var 0x13a144db8 'ioctx' 'struct srpt_send_ioctx *'     |     `-IntegerLiteral 0x13a145948 <col:19> 'int' 0     |-CallExpr 0x13a145b68 <line:17:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13a145ab0 <col:2> 'int ()' Function 0x13a1459f8 'spin_lock_irqsave' 'int ()'     | |-UnaryOperator 0x13a145b30 <col:20, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x13a145b08 <col:21, col:25> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13a145ad0 <col:21> 'struct srpt_rdma_ch *' contains-errors lvalue Var 0x13a145148 'ch' 'struct srpt_rdma_ch *'     | `-DeclRefExpr 0x13a145b48 <col:35> 'unsigned long' lvalue Var 0x13a145258 'flags' 'unsigned long'     |-CallExpr 0x13b8089c8 <line:18:2, col:44> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13b8088b8 <col:2> 'int ()' Function 0x13b808800 'list_add' 'int ()'     | |-UnaryOperator 0x13b808938 <col:11, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x13b808910 <col:12, col:19> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13b8088d8 <col:12> 'struct srpt_send_ioctx *' lvalue Var 0x13a144db8 'ioctx' 'struct srpt_send_ioctx *'     | `-UnaryOperator 0x13b8089b0 <col:30, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13b808988 <col:31, col:35> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13b808950 <col:31> 'struct srpt_rdma_ch *' contains-errors lvalue Var 0x13a145148 'ch' 'struct srpt_rdma_ch *'     `-CallExpr 0x13b808b90 <line:19:2, col:45> '<dependent type>' contains-errors       |-DeclRefExpr 0x13b808ad8 <col:2> 'int ()' Function 0x13b808a20 'spin_unlock_irqrestore' 'int ()'       |-UnaryOperator 0x13b808b58 <col:25, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow       | `-RecoveryExpr 0x13b808b30 <col:26, col:30> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x13b808af8 <col:26> 'struct srpt_rdma_ch *' contains-errors lvalue Var 0x13a145148 'ch' 'struct srpt_rdma_ch *'       `-DeclRefExpr 0x13b808b70 <col:40> 'unsigned long' lvalue Var 0x13a145258 'flags' 'unsigned long' ","19737":"`-FunctionDecl 0x155827cf8  col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x155827df8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x155827e60 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x155827ec8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x155827da0 <<invalid sloc>> Implicit 882 ","20076":"`-FunctionDecl 0x14e140bd8  line:1:24 get_device_parent 'struct kobject *(struct device *, struct device *)' static   |-ParmVarDecl 0x14e1286e8 <col:42, col:57> col:57 used dev 'struct device *'   |-ParmVarDecl 0x14e140a00 <line:2:7, col:22> col:22 used parent 'struct device *'   `-CompoundStmt 0x14e144e70 <line:3:1, line:55:1>     |-IfStmt 0x14e144a90 <line:4:2, line:46:2>     | |-RecoveryExpr 0x14e140d10 <line:4:6, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14e140cd8 <col:6> 'struct device *' lvalue ParmVar 0x14e1286e8 'dev' 'struct device *'     | `-CompoundStmt 0x14e144a20 <col:18, line:46:2>     |   |-DeclStmt 0x14e140e80 <line:5:3, col:30>     |   | `-VarDecl 0x14e140dc8 <col:3, col:26> col:19 used kobj 'struct kobject *' cinit     |   |   `-RecoveryExpr 0x14e140e60 <col:26> '<dependent type>' contains-errors lvalue     |   |-DeclStmt 0x14e140f28 <line:6:3, col:30>     |   | `-VarDecl 0x14e140ec0 <col:3, col:19> col:19 used parent_kobj 'struct kobject *'     |   |-DeclStmt 0x14e140fd0 <line:7:3, col:20>     |   | `-VarDecl 0x14e140f68 <col:3, col:19> col:19 used k 'struct kobject *'     |   |-IfStmt 0x14e141578 <line:19:3, line:24:27> has_else     |   | |-BinaryOperator 0x14e141060 <line:19:7, col:17> 'int' contains-errors '=='     |   | | |-DeclRefExpr 0x14e140fe8 <col:7> 'struct device *' lvalue ParmVar 0x14e140a00 'parent' 'struct device *'     |   | | `-RecoveryExpr 0x14e141040 <col:17> '<dependent type>' contains-errors lvalue     |   | |-BinaryOperator 0x14e141290 <line:20:4, col:43> 'struct kobject *' '='     |   | | |-DeclRefExpr 0x14e141080 <col:4> 'struct kobject *' lvalue Var 0x14e140ec0 'parent_kobj' 'struct kobject *'     |   | | `-ImplicitCastExpr 0x14e141278 <col:18, col:43> 'struct kobject *' <IntegralToPointer>     |   | |   `-CallExpr 0x14e141238 <col:18, col:43> 'int'     |   | |     |-ImplicitCastExpr 0x14e141220 <col:18> 'int (*)()' <FunctionToPointerDecay>     |   | |     | `-DeclRefExpr 0x14e1411b0 <col:18> 'int ()' Function 0x14e1410f8 'virtual_device_parent' 'int ()'     |   | |     `-ImplicitCastExpr 0x14e141260 <col:40> 'struct device *' <LValueToRValue>     |   | |       `-DeclRefExpr 0x14e1411d0 <col:40> 'struct device *' lvalue ParmVar 0x14e1286e8 'dev' 'struct device *'     |   | `-IfStmt 0x14e141548 <line:21:8, line:24:27> has_else     |   |   |-BinaryOperator 0x14e1413e8 <line:21:12, col:42> 'int' contains-errors '&&'     |   |   | |-RecoveryExpr 0x14e1412e8 <col:12, col:20> '<dependent type>' contains-errors lvalue     |   |   | | `-DeclRefExpr 0x14e1412b0 <col:12> 'struct device *' lvalue ParmVar 0x14e140a00 'parent' 'struct device *'     |   |   | `-UnaryOperator 0x14e1413d0 <col:29, col:42> '<dependent type>' contains-errors prefix '!' cannot overflow     |   |   |   `-ImplicitCastExpr 0x14e1413b8 <col:30, col:42> '<dependent type>' contains-errors <LValueToRValue>     |   |   |     `-CXXDependentScopeMemberExpr 0x14e141370 <col:30, col:42> '<dependent type>' contains-errors lvalue ->ns_type     |   |   |       `-RecoveryExpr 0x14e141348 <col:30, col:35> '<dependent type>' contains-errors lvalue     |   |   |         `-DeclRefExpr 0x14e141310 <col:30> 'struct device *' lvalue ParmVar 0x14e1286e8 'dev' 'struct device *'     |   |   |-ReturnStmt 0x14e141480 <line:22:4, col:20>     |   |   | `-UnaryOperator 0x14e141468 <col:11, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   |   `-RecoveryExpr 0x14e141440 <col:12, col:20> '<dependent type>' contains-errors lvalue     |   |   |     `-DeclRefExpr 0x14e141408 <col:12> 'struct device *' lvalue ParmVar 0x14e140a00 'parent' 'struct device *'     |   |   `-BinaryOperator 0x14e141528 <line:24:4, col:27> 'struct kobject *' contains-errors '='     |   |     |-DeclRefExpr 0x14e141490 <col:4> 'struct kobject *' lvalue Var 0x14e140ec0 'parent_kobj' 'struct kobject *'     |   |     `-UnaryOperator 0x14e141510 <col:18, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |       `-RecoveryExpr 0x14e1414e8 <col:19, col:27> '<dependent type>' contains-errors lvalue     |   |         `-DeclRefExpr 0x14e1414b0 <col:19> 'struct device *' lvalue ParmVar 0x14e140a00 'parent' 'struct device *'     |   |-CallExpr 0x14e141738 <line:26:3, col:24> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14e141688 <col:3> 'int ()' Function 0x14e1415d0 'mutex_lock' 'int ()'     |   | `-UnaryOperator 0x14e141720 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x14e141700 <col:15> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x14e1419b0 <line:29:3, col:48> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14e141840 <col:3> 'int ()' Function 0x14e141788 'spin_lock' 'int ()'     |   | `-UnaryOperator 0x14e141998 <col:13, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-CXXDependentScopeMemberExpr 0x14e141950 <col:14, col:39> '<dependent type>' contains-errors lvalue .list_lock     |   |     `-CXXDependentScopeMemberExpr 0x14e141908 <col:14, col:29> '<dependent type>' contains-errors lvalue ->glue_dirs     |   |       `-CXXDependentScopeMemberExpr 0x14e1418c0 <col:14, col:26> '<dependent type>' contains-errors lvalue ->p     |   |         `-RecoveryExpr 0x14e141898 <col:14, col:19> '<dependent type>' contains-errors lvalue     |   |           `-DeclRefExpr 0x14e141860 <col:14> 'struct device *' lvalue ParmVar 0x14e1286e8 'dev' 'struct device *'     |   |-CallExpr 0x14e1440b8 <line:30:3, col:63> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14e143eb8 <col:3> 'int ()' Function 0x14e143e00 'list_for_each_entry' 'int ()'     |   | |-DeclRefExpr 0x14e143ed8 <col:23> 'struct kobject *' lvalue Var 0x14e140f68 'k' 'struct kobject *'     |   | |-UnaryOperator 0x14e144030 <col:26, col:52> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-CXXDependentScopeMemberExpr 0x14e143fe8 <col:27, col:52> '<dependent type>' contains-errors lvalue .list     |   | |   `-CXXDependentScopeMemberExpr 0x14e143fa0 <col:27, col:42> '<dependent type>' contains-errors lvalue ->glue_dirs     |   | |     `-CXXDependentScopeMemberExpr 0x14e143f58 <col:27, col:39> '<dependent type>' contains-errors lvalue ->p     |   | |       `-RecoveryExpr 0x14e143f30 <col:27, col:32> '<dependent type>' contains-errors lvalue     |   | |         `-DeclRefExpr 0x14e143ef8 <col:27> 'struct device *' lvalue ParmVar 0x14e1286e8 'dev' 'struct device *'     |   | `-RecoveryExpr 0x14e144098 <col:58> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x14e144378 <line:31:4, line:34:4>     |   | |-BinaryOperator 0x14e144170 <line:31:8, col:21> 'int' contains-errors '=='     |   | | |-RecoveryExpr 0x14e144128 <col:8, col:11> '<dependent type>' contains-errors lvalue     |   | | | `-DeclRefExpr 0x14e1440f0 <col:8> 'struct kobject *' lvalue Var 0x14e140f68 'k' 'struct kobject *'     |   | | `-DeclRefExpr 0x14e144150 <col:21> 'struct kobject *' lvalue Var 0x14e140ec0 'parent_kobj' 'struct kobject *'     |   | `-CompoundStmt 0x14e144360 <col:34, line:34:4>     |   |   `-BinaryOperator 0x14e144340 <line:32:5, col:25> 'struct kobject *' contains-errors '='     |   |     |-DeclRefExpr 0x14e144190 <col:5> 'struct kobject *' contains-errors lvalue Var 0x14e140dc8 'kobj' 'struct kobject *'     |   |     `-ImplicitCastExpr 0x14e144328 <col:12, col:25> 'struct kobject *' <IntegralToPointer>     |   |       `-CallExpr 0x14e1442e8 <col:12, col:25> 'int'     |   |         |-ImplicitCastExpr 0x14e1442d0 <col:12> 'int (*)()' <FunctionToPointerDecay>     |   |         | `-DeclRefExpr 0x14e144290 <col:12> 'int ()' Function 0x14e1441d8 'kobject_get' 'int ()'     |   |         `-ImplicitCastExpr 0x14e144310 <col:24> 'struct kobject *' <LValueToRValue>     |   |           `-DeclRefExpr 0x14e1442b0 <col:24> 'struct kobject *' lvalue Var 0x14e140f68 'k' 'struct kobject *'     |   |-CallExpr 0x14e1445e8 <line:35:3, col:50> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14e144478 <col:3> 'int ()' Function 0x14e1443c0 'spin_unlock' 'int ()'     |   | `-UnaryOperator 0x14e1445d0 <col:15, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-CXXDependentScopeMemberExpr 0x14e144588 <col:16, col:41> '<dependent type>' contains-errors lvalue .list_lock     |   |     `-CXXDependentScopeMemberExpr 0x14e144540 <col:16, col:31> '<dependent type>' contains-errors lvalue ->glue_dirs     |   |       `-CXXDependentScopeMemberExpr 0x14e1444f8 <col:16, col:28> '<dependent type>' contains-errors lvalue ->p     |   |         `-RecoveryExpr 0x14e1444d0 <col:16, col:21> '<dependent type>' contains-errors lvalue     |   |           `-DeclRefExpr 0x14e144498 <col:16> 'struct device *' lvalue ParmVar 0x14e1286e8 'dev' 'struct device *'     |   |-IfStmt 0x14e1447a8 <line:36:3, line:39:3>     |   | |-ImplicitCastExpr 0x14e144630 <line:36:7> 'struct kobject *' contains-errors <LValueToRValue>     |   | | `-DeclRefExpr 0x14e144610 <col:7> 'struct kobject *' contains-errors lvalue Var 0x14e140dc8 'kobj' 'struct kobject *'     |   | `-CompoundStmt 0x14e144790 <col:13, line:39:3>     |   |   `-ReturnStmt 0x14e144780 <line:38:4, col:11>     |   |     `-ImplicitCastExpr 0x14e144768 <col:11> 'struct kobject *' contains-errors <LValueToRValue>     |   |       `-DeclRefExpr 0x14e144748 <col:11> 'struct kobject *' contains-errors lvalue Var 0x14e140dc8 'kobj' 'struct kobject *'     |   |-BinaryOperator 0x14e144998 <line:42:3, col:55> 'struct kobject *' contains-errors '='     |   | |-DeclRefExpr 0x14e1447c8 <col:3> 'struct kobject *' lvalue Var 0x14e140f68 'k' 'struct kobject *'     |   | `-CallExpr 0x14e144968 <col:7, col:55> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x14e1448c8 <col:7> 'int ()' Function 0x14e144810 'class_dir_create_and_add' 'int ()'     |   |   |-RecoveryExpr 0x14e144920 <col:32, col:37> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x14e1448e8 <col:32> 'struct device *' lvalue ParmVar 0x14e1286e8 'dev' 'struct device *'     |   |   `-DeclRefExpr 0x14e144948 <col:44> 'struct kobject *' lvalue Var 0x14e140ec0 'parent_kobj' 'struct kobject *'     |   `-ReturnStmt 0x14e144a10 <line:45:3, col:10>     |     `-ImplicitCastExpr 0x14e1449f8 <col:10> 'struct kobject *' <LValueToRValue>     |       `-DeclRefExpr 0x14e1449d8 <col:10> 'struct kobject *' lvalue Var 0x14e140f68 'k' 'struct kobject *'     |-IfStmt 0x14e144d60 <line:49:2, line:50:31>     | |-BinaryOperator 0x14e144c28 <line:49:6, col:39> 'int' contains-errors '&&'     | | |-BinaryOperator 0x14e144b60 <col:6, col:22> 'int' contains-errors '&&'     | | | |-UnaryOperator 0x14e144ae8 <col:6, col:7> 'int' prefix '!' cannot overflow     | | | | `-ImplicitCastExpr 0x14e144ad0 <col:7> 'struct device *' <LValueToRValue>     | | | |   `-DeclRefExpr 0x14e144ab0 <col:7> 'struct device *' lvalue ParmVar 0x14e140a00 'parent' 'struct device *'     | | | `-RecoveryExpr 0x14e144b38 <col:17, col:22> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x14e144b00 <col:17> 'struct device *' lvalue ParmVar 0x14e1286e8 'dev' 'struct device *'     | | `-CXXDependentScopeMemberExpr 0x14e144be0 <col:29, col:39> '<dependent type>' contains-errors lvalue ->dev_root     | |   `-RecoveryExpr 0x14e144bb8 <col:29, col:34> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x14e144b80 <col:29> 'struct device *' lvalue ParmVar 0x14e1286e8 'dev' 'struct device *'     | `-ReturnStmt 0x14e144d50 <line:50:3, col:31>     |   `-UnaryOperator 0x14e144d38 <col:10, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-CXXDependentScopeMemberExpr 0x14e144cf0 <col:11, col:31> '<dependent type>' contains-errors lvalue ->kobj     |       `-CXXDependentScopeMemberExpr 0x14e144ca8 <col:11, col:21> '<dependent type>' contains-errors lvalue ->dev_root     |         `-RecoveryExpr 0x14e144c80 <col:11, col:16> '<dependent type>' contains-errors lvalue     |           `-DeclRefExpr 0x14e144c48 <col:11> 'struct device *' lvalue ParmVar 0x14e1286e8 'dev' 'struct device *'     `-IfStmt 0x14e144e50 <line:52:2, line:53:19>       |-ImplicitCastExpr 0x14e144da0 <line:52:6> 'struct device *' <LValueToRValue>       | `-DeclRefExpr 0x14e144d80 <col:6> 'struct device *' lvalue ParmVar 0x14e140a00 'parent' 'struct device *'       `-ReturnStmt 0x14e144e40 <line:53:3, col:19>         `-UnaryOperator 0x14e144e28 <col:10, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow           `-RecoveryExpr 0x14e144e00 <col:11, col:19> '<dependent type>' contains-errors lvalue             `-DeclRefExpr 0x14e144db8 <col:11> 'struct device *' lvalue ParmVar 0x14e140a00 'parent' 'struct device *' ","19950":"`-FunctionDecl 0x147009d28  col:17 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x147009e28 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x147009e90 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x147009ef8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x147009dd0 <<invalid sloc>> Implicit 882 ","19699":"`-FunctionDecl 0x120128758  line:1:5 ping_init_sock 'int (struct sock *)'   |-ParmVarDecl 0x120128648 <col:20, col:33> col:33 used sk 'struct sock *'   `-CompoundStmt 0x120148598 <line:2:1, line:25:1>     |-DeclStmt 0x120140e48 <line:3:2, col:32>     | |-RecordDecl 0x120140a50 <col:2, col:9> col:9 struct net     | `-VarDecl 0x120140bb8 <col:2, col:31> col:14 used net 'struct net *' cinit     |   `-ImplicitCastExpr 0x120140e18 <col:20, col:31> 'struct net *' <IntegralToPointer>     |     `-CallExpr 0x120140dd8 <col:20, col:31> 'int'     |       |-ImplicitCastExpr 0x120140dc0 <col:20> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x120140d50 <col:20> 'int ()' Function 0x120140c98 'sock_net' 'int ()'     |       `-ImplicitCastExpr 0x120140e00 <col:29> 'struct sock *' <LValueToRValue>     |         `-DeclRefExpr 0x120140d70 <col:29> 'struct sock *' lvalue ParmVar 0x120128648 'sk' 'struct sock *'     |-DeclStmt 0x120141198 <line:5:2, col:54>     | |-RecordDecl 0x120140e60 <col:2, col:9> col:9 struct group_info     | `-VarDecl 0x120140fc8 <col:2, col:53> col:21 used group_info 'struct group_info *' cinit     |   `-ImplicitCastExpr 0x120141168 <col:34, col:53> 'struct group_info *' <IntegralToPointer>     |     `-CallExpr 0x120141148 <col:34, col:53> 'int'     |       `-ImplicitCastExpr 0x120141130 <col:34> 'int (*)()' <FunctionToPointerDecay>     |         `-DeclRefExpr 0x120141110 <col:34> 'int ()' Function 0x120141058 'get_current_groups' 'int ()'     |-DeclStmt 0x1201413b0 <line:6:2, col:39>     | |-VarDecl 0x1201411c8 <col:2, col:6> col:6 used i 'int'     | |-VarDecl 0x120141248 <col:2, col:9> col:9 used j 'int'     | `-VarDecl 0x1201412c8 <col:2, col:32> col:12 used count 'int' cinit     |   `-RecoveryExpr 0x120141368 <col:20, col:32> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x120141330 <col:20> 'struct group_info *' lvalue Var 0x120140fc8 'group_info' 'struct group_info *'     |-CallExpr 0x1201415f0 <line:9:2, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1201414a8 <col:2> 'int ()' Function 0x1201413f0 'inet_get_ping_group_range_net' 'int ()'     | |-DeclRefExpr 0x1201414c8 <col:32> 'struct net *' lvalue Var 0x120140bb8 'net' 'struct net *'     | |-UnaryOperator 0x1201415a0 <col:37, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x120141580 <col:38> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x1201415d8 <col:43, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1201415b8 <col:44> '<dependent type>' contains-errors lvalue     |-IfStmt 0x120141958 <line:10:2, line:11:10>     | |-BinaryOperator 0x120141908 <line:10:6, col:48> 'int' contains-errors '&&'     | | |-CallExpr 0x120141868 <col:6, col:24> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x120141708 <col:6> 'int ()' Function 0x120141650 'gid_lte' 'int ()'     | | | |-RecoveryExpr 0x120141828 <col:14> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x120141848 <col:19> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x1201418d8 <col:29, col:48> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x120141788 <col:29> 'int ()' Function 0x120141650 'gid_lte' 'int ()'     | |   |-RecoveryExpr 0x120141898 <col:37> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x1201418b8 <col:44> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x120141948 <line:11:3, col:10>     |   `-IntegerLiteral 0x120141928 <col:10> 'int' 0     `-ForStmt 0x120148560 <line:13:2, line:22:2>       |-BinaryOperator 0x1201419b8 <line:13:7, col:11> 'int' '='       | |-DeclRefExpr 0x120141978 <col:7> 'int' lvalue Var 0x1201411c8 'i' 'int'       | `-IntegerLiteral 0x120141998 <col:11> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x120148060 <col:14, col:30> 'int' contains-errors '<'       | |-DeclRefExpr 0x1201419d8 <col:14> 'int' lvalue Var 0x1201411c8 'i' 'int'       | `-RecoveryExpr 0x120148038 <col:18, col:30> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x120148000 <col:18> 'struct group_info *' lvalue Var 0x120140fc8 'group_info' 'struct group_info *'       |-UnaryOperator 0x1201480a0 <col:39, col:40> 'int' postfix '++'       | `-DeclRefExpr 0x120148080 <col:39> 'int' lvalue Var 0x1201411c8 'i' 'int'       `-CompoundStmt 0x120148538 <col:44, line:22:2>         |-DeclStmt 0x120148270 <line:14:3, col:54>         | `-VarDecl 0x1201480d0 <col:3, col:7> col:7 used cp_count 'int'         |-ForStmt 0x120148478 <line:15:3, line:19:3>         | |-BinaryOperator 0x1201482c8 <line:15:8, col:12> 'int' '='         | | |-DeclRefExpr 0x120148288 <col:8> 'int' lvalue Var 0x120141248 'j' 'int'         | | `-IntegerLiteral 0x1201482a8 <col:12> 'int' 0         | |-<<<NULL>>>         | |-BinaryOperator 0x120148358 <col:15, col:19> 'int' '<'         | | |-ImplicitCastExpr 0x120148328 <col:15> 'int' <LValueToRValue>         | | | `-DeclRefExpr 0x1201482e8 <col:15> 'int' lvalue Var 0x120141248 'j' 'int'         | | `-ImplicitCastExpr 0x120148340 <col:19> 'int' <LValueToRValue>         | |   `-DeclRefExpr 0x120148308 <col:19> 'int' lvalue Var 0x1201480d0 'cp_count' 'int'         | |-UnaryOperator 0x120148398 <col:29, col:30> 'int' postfix '++'         | | `-DeclRefExpr 0x120148378 <col:29> 'int' lvalue Var 0x120141248 'j' 'int'         | `-CompoundStmt 0x120148460 <col:34, line:19:3>         |   `-IfStmt 0x120148440 <line:17:4, line:18:12>         |     |-RecoveryExpr 0x1201483f0 <line:17:8, col:46> '_Bool' contains-errors         |     `-ReturnStmt 0x120148430 <line:18:5, col:12>         |       `-IntegerLiteral 0x120148410 <col:12> 'int' 0         `-CompoundAssignOperator 0x120148508 <line:21:3, col:12> 'int' contains-errors '-=' ComputeLHSTy='int' ComputeResultTy='int'           |-DeclRefExpr 0x1201484b0 <col:3> 'int' contains-errors lvalue Var 0x1201412c8 'count' 'int'           `-ImplicitCastExpr 0x1201484f0 <col:12> 'int' <LValueToRValue>             `-DeclRefExpr 0x1201484d0 <col:12> 'int' lvalue Var 0x1201480d0 'cp_count' 'int' ","19917":"`-FunctionDecl 0x14600de88  line:1:14 invalid Prepare 'int (int *, int *)'   |-ParmVarDecl 0x14600dd28 <col:22, col:37> col:37 referenced invalid context 'int *'   |-ParmVarDecl 0x14600dda8 <col:46, col:58> col:58 invalid node 'int *'   `-CompoundStmt 0x14700bcb0 <col:64, line:66:1>     |-CallExpr 0x14600e248 <line:2:3, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14600e0a0 <col:3> 'int ()' Function 0x14600dfe8 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x14600e0c0 <col:21> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x14600e200 <col:30, col:44> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14600e1c0 <col:30> 'int ()' Function 0x14600e108 'NumInputs' 'int ()'     | | `-RecoveryExpr 0x14600e1e0 <col:40> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x14600e228 <col:47> 'int' 2     |-CallExpr 0x147009248 <line:3:3, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14600e280 <col:3> 'int ()' Function 0x14600dfe8 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x14600e2a0 <col:21> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x147009200 <col:30, col:45> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14600e3a0 <col:30> 'int ()' Function 0x14600e2e8 'NumOutputs' 'int ()'     | | `-RecoveryExpr 0x14600e3c0 <col:41> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x147009228 <col:48> 'int' 1     |-DeclStmt 0x147009490 <line:5:3, col:64>     | `-VarDecl 0x147009298 <col:3, col:23> col:23 invalid params 'const int *'     |-DeclStmt 0x1470095d8 <line:6:3, col:66>     | `-VarDecl 0x1470094c0 <col:3, col:23> col:23 invalid indices 'const int *'     |-SwitchStmt 0x147009818 <line:9:3, line:22:3>     | |-ImplicitCastExpr 0x147009800 <line:9:11, col:19> '<dependent type>' contains-errors <LValueToRValue>     | | `-CXXDependentScopeMemberExpr 0x1470097b8 <col:11, col:19> '<dependent type>' contains-errors lvalue ->type     | |   `-RecoveryExpr 0x147009798 <col:11> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x147009bb8 <col:25, line:22:3>     |   |-BreakStmt 0x1470098b8 <line:16:7>     |   `-DefaultStmt 0x147009b98 <line:17:5, line:20:42>     |     `-CallExpr 0x147009b60 <line:18:7, line:20:42> '<dependent type>' contains-errors     |       |-CXXDependentScopeMemberExpr 0x147009908 <line:18:7, col:16> '<dependent type>' contains-errors lvalue ->ReportError     |       | `-RecoveryExpr 0x1470098e0 <col:7> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x1470098c0 <col:7> 'int *' lvalue ParmVar 0x14600dd28 'context' 'int *'     |       |-RecoveryExpr 0x147009950 <line:19:11> '<dependent type>' contains-errors lvalue     |       |-StringLiteral 0x1470099b0 <col:20> 'char[4]' lvalue \"STR\"     |       `-CallExpr 0x147009b38 <line:20:11, col:41> '<dependent type>' contains-errors     |         |-DeclRefExpr 0x147009ab0 <col:11> 'int ()' Function 0x1470099f8 'TfLiteTypeGetName' 'int ()'     |         `-CXXDependentScopeMemberExpr 0x147009af0 <col:29, col:37> '<dependent type>' contains-errors lvalue ->type     |           `-RecoveryExpr 0x147009ad0 <col:29> '<dependent type>' contains-errors lvalue     |-SwitchStmt 0x147009c58 <line:23:3, line:32:3>     | |-ImplicitCastExpr 0x147009c40 <line:23:11, col:20> '<dependent type>' contains-errors <LValueToRValue>     | | `-CXXDependentScopeMemberExpr 0x147009bf8 <col:11, col:20> '<dependent type>' contains-errors lvalue ->type     | |   `-RecoveryExpr 0x147009bd8 <col:11> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x147009e60 <col:26, line:32:3>     |   |-BreakStmt 0x147009c80 <line:26:7>     |   `-DefaultStmt 0x147009e40 <line:27:5, line:30:43>     |     `-CallExpr 0x147009e08 <line:28:7, line:30:43> '<dependent type>' contains-errors     |       |-CXXDependentScopeMemberExpr 0x147009cd0 <line:28:7, col:16> '<dependent type>' contains-errors lvalue ->ReportError     |       | `-RecoveryExpr 0x147009ca8 <col:7> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x147009c88 <col:7> 'int *' lvalue ParmVar 0x14600dd28 'context' 'int *'     |       |-RecoveryExpr 0x147009d18 <line:29:11> '<dependent type>' contains-errors lvalue     |       |-StringLiteral 0x147009d38 <col:20> 'char[4]' lvalue \"STR\"     |       `-CallExpr 0x147009de0 <line:30:11, col:42> '<dependent type>' contains-errors     |         |-DeclRefExpr 0x147009d58 <col:11> 'int ()' Function 0x1470099f8 'TfLiteTypeGetName' 'int ()'     |         `-CXXDependentScopeMemberExpr 0x147009d98 <col:29, col:38> '<dependent type>' contains-errors lvalue ->type     |           `-RecoveryExpr 0x147009d78 <col:29> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x14700a048 <line:34:3, col:48>     | `-VarDecl 0x147009e98 <col:3, col:47> col:13 used params_rank 'const int' cinit     |   `-CallExpr 0x14700a020 <col:27, col:47> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x147009fe0 <col:27> 'int ()' Function 0x147009f28 'NumDimensions' 'int ()'     |     `-RecoveryExpr 0x14700a000 <col:41> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x14700a148 <line:35:3, col:50>     | `-VarDecl 0x14700a078 <col:3, col:49> col:13 used indices_rank 'const int' cinit     |   `-CallExpr 0x14700a120 <col:28, col:49> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14700a0e0 <col:28> 'int ()' Function 0x147009f28 'NumDimensions' 'int ()'     |     `-RecoveryExpr 0x14700a100 <col:42> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x14700a7c8 <line:36:3, col:68>     | `-VarDecl 0x14700a178 <col:3, col:67> col:13 used indices_nd 'const int' cinit     |   `-CallExpr 0x14700a798 <col:26, col:67> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14700a6e0 <col:26> 'int ()' Function 0x14700a628 'SizeOfDimension' 'int ()'     |     |-RecoveryExpr 0x14700a700 <col:42> '<dependent type>' contains-errors lvalue     |     `-BinaryOperator 0x14700a778 <col:51, col:66> 'int' contains-errors '-'     |       |-ImplicitCastExpr 0x14700a760 <col:51> 'int' contains-errors <LValueToRValue>     |       | `-DeclRefExpr 0x14700a720 <col:51> 'const int' contains-errors lvalue Var 0x14700a078 'indices_rank' 'const int'     |       `-IntegerLiteral 0x14700a740 <col:66> 'int' 1     |-IfStmt 0x14700a970 <line:37:3, line:40:3>     | |-BinaryOperator 0x14700a838 <line:37:7, col:21> 'int' contains-errors '<'     | | |-ImplicitCastExpr 0x14700a820 <col:7> 'int' contains-errors <LValueToRValue>     | | | `-DeclRefExpr 0x14700a7e0 <col:7> 'const int' contains-errors lvalue Var 0x147009e98 'params_rank' 'const int'     | | `-IntegerLiteral 0x14700a800 <col:21> 'int' 1     | `-CompoundStmt 0x14700a958 <col:24, line:40:3>     |   `-CallExpr 0x14700a928 <line:38:5, col:40> '<dependent type>' contains-errors     |     |-CXXDependentScopeMemberExpr 0x14700a8a0 <col:5, col:14> '<dependent type>' contains-errors lvalue ->ReportError     |     | `-RecoveryExpr 0x14700a878 <col:5> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x14700a858 <col:5> 'int *' lvalue ParmVar 0x14600dd28 'context' 'int *'     |     |-RecoveryExpr 0x14700a8e8 <col:26> '<dependent type>' contains-errors lvalue     |     `-StringLiteral 0x14700a908 <col:35> 'char[4]' lvalue \"STR\"     |-IfStmt 0x14700ab20 <line:41:3, line:44:3>     | |-BinaryOperator 0x14700a9e8 <line:41:7, col:22> 'int' contains-errors '<'     | | |-ImplicitCastExpr 0x14700a9d0 <col:7> 'int' contains-errors <LValueToRValue>     | | | `-DeclRefExpr 0x14700a990 <col:7> 'const int' contains-errors lvalue Var 0x14700a078 'indices_rank' 'const int'     | | `-IntegerLiteral 0x14700a9b0 <col:22> 'int' 1     | `-CompoundStmt 0x14700ab08 <col:25, line:44:3>     |   `-CallExpr 0x14700aad8 <line:42:5, col:40> '<dependent type>' contains-errors     |     |-CXXDependentScopeMemberExpr 0x14700aa50 <col:5, col:14> '<dependent type>' contains-errors lvalue ->ReportError     |     | `-RecoveryExpr 0x14700aa28 <col:5> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x14700aa08 <col:5> 'int *' lvalue ParmVar 0x14600dd28 'context' 'int *'     |     |-RecoveryExpr 0x14700aa98 <col:26> '<dependent type>' contains-errors lvalue     |     `-StringLiteral 0x14700aab8 <col:35> 'char[4]' lvalue \"STR\"     |-IfStmt 0x14700ace8 <line:45:3, line:49:3>     | |-BinaryOperator 0x14700abb0 <line:45:7, col:20> 'int' contains-errors '>'     | | |-ImplicitCastExpr 0x14700ab80 <col:7> 'int' contains-errors <LValueToRValue>     | | | `-DeclRefExpr 0x14700ab40 <col:7> 'const int' contains-errors lvalue Var 0x14700a178 'indices_nd' 'const int'     | | `-ImplicitCastExpr 0x14700ab98 <col:20> 'int' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x14700ab60 <col:20> 'const int' contains-errors lvalue Var 0x147009e98 'params_rank' 'const int'     | `-CompoundStmt 0x14700acd0 <col:33, line:49:3>     |   `-CallExpr 0x14700aca0 <line:46:5, line:47:23> '<dependent type>' contains-errors     |     |-CXXDependentScopeMemberExpr 0x14700ac18 <line:46:5, col:14> '<dependent type>' contains-errors lvalue ->ReportError     |     | `-RecoveryExpr 0x14700abf0 <col:5> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x14700abd0 <col:5> 'int *' lvalue ParmVar 0x14600dd28 'context' 'int *'     |     |-RecoveryExpr 0x14700ac60 <line:47:9> '<dependent type>' contains-errors lvalue     |     `-StringLiteral 0x14700ac80 <col:18> 'char[4]' lvalue \"STR\"     |-DeclStmt 0x14700af18 <line:56:3, col:70>     | `-VarDecl 0x14700ad88 <col:3, col:69> col:13 used output_rank 'const int' cinit     |   `-BinaryOperator 0x14700aef8 <col:27, col:69> 'int' contains-errors '-'     |     |-BinaryOperator 0x14700aeb8 <col:27, col:56> 'int' contains-errors '-'     |     | |-BinaryOperator 0x14700ae60 <col:27, col:42> 'int' contains-errors '+'     |     | | |-ImplicitCastExpr 0x14700ae30 <col:27> 'int' contains-errors <LValueToRValue>     |     | | | `-DeclRefExpr 0x14700adf0 <col:27> 'const int' contains-errors lvalue Var 0x14700a078 'indices_rank' 'const int'     |     | | `-ImplicitCastExpr 0x14700ae48 <col:42> 'int' contains-errors <LValueToRValue>     |     | |   `-DeclRefExpr 0x14700ae10 <col:42> 'const int' contains-errors lvalue Var 0x147009e98 'params_rank' 'const int'     |     | `-ImplicitCastExpr 0x14700aea0 <col:56> 'int' contains-errors <LValueToRValue>     |     |   `-DeclRefExpr 0x14700ae80 <col:56> 'const int' contains-errors lvalue Var 0x14700a178 'indices_nd' 'const int'     |     `-IntegerLiteral 0x14700aed8 <col:69> 'int' 1     |-DeclStmt 0x14700b178 <line:58:3, col:23>     | `-VarDecl 0x14700b0f0 <col:3, col:22> col:7 used output_index 'int' cinit     |   `-IntegerLiteral 0x14700b158 <col:22> 'int' 0     |-ForStmt 0x14700b4b8 <line:59:3, line:61:3>     | |-DeclStmt 0x14700b230 <line:59:8, col:17>     | | `-VarDecl 0x14700b1a8 <col:8, col:16> col:12 used i 'int' cinit     | |   `-IntegerLiteral 0x14700b210 <col:16> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x14700b2f8 <col:19, col:38> 'int' contains-errors '<'     | | |-ImplicitCastExpr 0x14700b2e0 <col:19> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x14700b248 <col:19> 'int' lvalue Var 0x14700b1a8 'i' 'int'     | | `-BinaryOperator 0x14700b2c0 <col:23, col:38> 'int' contains-errors '-'     | |   |-ImplicitCastExpr 0x14700b2a8 <col:23> 'int' contains-errors <LValueToRValue>     | |   | `-DeclRefExpr 0x14700b268 <col:23> 'const int' contains-errors lvalue Var 0x14700a078 'indices_rank' 'const int'     | |   `-IntegerLiteral 0x14700b288 <col:38> 'int' 1     | |-UnaryOperator 0x14700b338 <col:41, col:43> 'int' prefix '++'     | | `-DeclRefExpr 0x14700b318 <col:43> 'int' lvalue Var 0x14700b1a8 'i' 'int'     | `-CompoundStmt 0x14700b4a8 <col:46, line:61:3>     `-ForStmt 0x14700bbf0 <line:62:3, line:64:3>       |-DeclStmt 0x14700b5a8 <line:62:8, col:26>       | `-VarDecl 0x14700b508 <col:8, col:16> col:12 used i 'int' cinit       |   `-ImplicitCastExpr 0x14700b590 <col:16> 'int' contains-errors <LValueToRValue>       |     `-DeclRefExpr 0x14700b570 <col:16> 'const int' contains-errors lvalue Var 0x14700a178 'indices_nd' 'const int'       |-<<<NULL>>>       |-BinaryOperator 0x14700ba30 <col:28, col:32> 'int' contains-errors '<'       | |-ImplicitCastExpr 0x14700ba00 <col:28> 'int' contains-errors <LValueToRValue>       | | `-DeclRefExpr 0x14700b5c0 <col:28> 'int' contains-errors lvalue Var 0x14700b508 'i' 'int'       | `-ImplicitCastExpr 0x14700ba18 <col:32> 'int' contains-errors <LValueToRValue>       |   `-DeclRefExpr 0x14700b5e0 <col:32> 'const int' contains-errors lvalue Var 0x147009e98 'params_rank' 'const int'       |-UnaryOperator 0x14700ba70 <col:45, col:47> 'int' contains-errors prefix '++'       | `-DeclRefExpr 0x14700ba50 <col:47> 'int' contains-errors lvalue Var 0x14700b508 'i' 'int'       `-CompoundStmt 0x14700bbe0 <col:50, line:64:3> ","19280":"`-FunctionDecl 0x147928758  line:1:1 bfad_im_get_starget_port_name 'int (struct scsi_target *)'   |-ParmVarDecl 0x147928648 <col:31, col:51> col:51 used starget 'struct scsi_target *'   `-CompoundStmt 0x147944168 <line:2:1, line:21:1>     |-DeclStmt 0x147940c38 <line:3:2, col:25>     | |-RecordDecl 0x147940a50 <col:2, col:9> col:9 struct Scsi_Host     | `-VarDecl 0x147940bb8 <col:2, col:20> col:20 used shost 'struct Scsi_Host *'     |-DeclStmt 0x147940e38 <line:4:2, col:32>     | |-RecordDecl 0x147940c50 <col:2, col:9> col:9 struct bfad_im_port_s     | `-VarDecl 0x147940db8 <col:2, col:25> col:25 used im_port 'struct bfad_im_port_s *'     |-DeclStmt 0x147941038 <line:5:2, col:29>     | |-RecordDecl 0x147940e50 <col:2, col:9> col:9 struct bfad_s     | `-VarDecl 0x147940fb8 <col:2, col:25> col:25 used bfad 'struct bfad_s *'     |-DeclStmt 0x147941288 <line:6:2, col:37>     | |-RecordDecl 0x147941050 <col:2, col:9> col:9 struct bfad_itnim_s     | `-VarDecl 0x1479411b8 <col:2, col:33> col:25 used itnim 'struct bfad_itnim_s *' cinit     |   `-RecoveryExpr 0x147941250 <col:33> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x147941320 <line:8:2, col:23>     | `-VarDecl 0x1479412b8 <col:2, col:18> col:18 used flags 'unsigned long'     |-BinaryOperator 0x147941560 <line:10:2, col:42> 'struct Scsi_Host *' contains-errors '='     | |-DeclRefExpr 0x147941338 <col:2> 'struct Scsi_Host *' lvalue Var 0x147940bb8 'shost' 'struct Scsi_Host *'     | `-CallExpr 0x147941538 <col:10, col:42> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x147941470 <col:10> 'int ()' Function 0x1479413b8 'dev_to_shost' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x1479414f0 <col:23, col:36> '<dependent type>' contains-errors lvalue .parent     |     `-RecoveryExpr 0x1479414c8 <col:23, col:32> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x147941490 <col:23> 'struct scsi_target *' lvalue ParmVar 0x147928648 'starget' 'struct scsi_target *'     |-BinaryOperator 0x147941710 <line:11:2, col:55> 'struct bfad_im_port_s *' contains-errors '='     | |-DeclRefExpr 0x147941580 <col:2> 'struct bfad_im_port_s *' lvalue Var 0x147940db8 'im_port' 'struct bfad_im_port_s *'     | `-CStyleCastExpr 0x1479416e8 <col:12, col:55> 'struct bfad_im_port_s *' contains-errors <Dependent>     |   `-ArraySubscriptExpr 0x147941638 <col:38, col:55> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x147941620 <col:38, col:45> '<dependent type>' contains-errors <LValueToRValue>     |     | `-RecoveryExpr 0x1479415d8 <col:38, col:45> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x1479415a0 <col:38> 'struct Scsi_Host *' lvalue Var 0x147940bb8 'shost' 'struct Scsi_Host *'     |     `-IntegerLiteral 0x147941600 <col:54> 'int' 0     |-BinaryOperator 0x1479417b0 <line:12:2, col:18> 'struct bfad_s *' contains-errors '='     | |-DeclRefExpr 0x147941730 <col:2> 'struct bfad_s *' lvalue Var 0x147940fb8 'bfad' 'struct bfad_s *'     | `-RecoveryExpr 0x147941788 <col:9, col:18> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x147941750 <col:9> 'struct bfad_im_port_s *' lvalue Var 0x147940db8 'im_port' 'struct bfad_im_port_s *'     |-CallExpr 0x147941968 <line:13:2, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1479418b0 <col:2> 'int ()' Function 0x1479417f8 'spin_lock_irqsave' 'int ()'     | |-UnaryOperator 0x147941930 <col:20, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x147941908 <col:21, col:27> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1479418d0 <col:21> 'struct bfad_s *' lvalue Var 0x147940fb8 'bfad' 'struct bfad_s *'     | `-DeclRefExpr 0x147941948 <col:38> 'unsigned long' lvalue Var 0x1479412b8 'flags' 'unsigned long'     |-BinaryOperator 0x147943988 <line:15:2, col:45> 'struct bfad_itnim_s *' contains-errors '='     | |-DeclRefExpr 0x147941998 <col:2> 'struct bfad_itnim_s *' contains-errors lvalue Var 0x1479411b8 'itnim' 'struct bfad_itnim_s *'     | `-CallExpr 0x147943958 <col:10, col:45> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1479438b8 <col:10> 'int ()' Function 0x147943800 'bfad_get_itnim' 'int ()'     |   |-DeclRefExpr 0x1479438d8 <col:25> 'struct bfad_im_port_s *' lvalue Var 0x147940db8 'im_port' 'struct bfad_im_port_s *'     |   `-RecoveryExpr 0x147943930 <col:34, col:43> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1479438f8 <col:34> 'struct scsi_target *' lvalue ParmVar 0x147928648 'starget' 'struct scsi_target *'     |-BinaryOperator 0x147943f80 <line:19:2, col:55> 'int' contains-errors '='     | |-CallExpr 0x147943ef8 <col:2, col:30> 'int'     | | |-ImplicitCastExpr 0x147943ee0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x147943c60 <col:2> 'int ()' Function 0x147943ba8 'fc_starget_port_name' 'int ()'     | | `-ImplicitCastExpr 0x147943f20 <col:23> 'struct scsi_target *' <LValueToRValue>     | |   `-DeclRefExpr 0x147943c80 <col:23> 'struct scsi_target *' lvalue ParmVar 0x147928648 'starget' 'struct scsi_target *'     | `-CallExpr 0x147943f58 <col:34, col:55> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x147943e08 <col:34> 'int ()' Function 0x147943d50 'cpu_to_be64' 'int ()'     |   `-RecoveryExpr 0x147943f38 <col:46> '<dependent type>' contains-errors lvalue     `-CallExpr 0x147944138 <line:20:2, col:48> '<dependent type>' contains-errors       |-DeclRefExpr 0x147944080 <col:2> 'int ()' Function 0x147943fc8 'spin_unlock_irqrestore' 'int ()'       |-UnaryOperator 0x147944100 <col:25, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow       | `-RecoveryExpr 0x1479440d8 <col:26, col:32> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x1479440a0 <col:26> 'struct bfad_s *' lvalue Var 0x147940fb8 'bfad' 'struct bfad_s *'       `-DeclRefExpr 0x147944118 <col:43> 'unsigned long' lvalue Var 0x1479412b8 'flags' 'unsigned long' ","19482":"`-FunctionDecl 0x12700de80  line:1:13 invalid esp_cmdfifo_push 'void (int *, int)' static   |-ParmVarDecl 0x12700dd28 <col:30, col:40> col:40 invalid s 'int *'   |-ParmVarDecl 0x12700dda8 <col:43, col:51> col:51 invalid val 'int'   `-CompoundStmt 0x1269227a8 <line:2:1, line:9:1>     |-IfStmt 0x12700e368 <line:3:5, line:6:5>     | |-BinaryOperator 0x12700e1b0 <line:3:9, col:40> 'int' contains-errors '=='     | | |-CallExpr 0x12700e130 <col:9, col:35> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x12700e090 <col:9> 'int ()' Function 0x12700dfd8 'fifo8_num_used' 'int ()'     | | | `-UnaryOperator 0x12700e118 <col:24, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-CXXDependentScopeMemberExpr 0x12700e0d0 <col:25, col:28> '<dependent type>' contains-errors lvalue ->cmdfifo     | | |     `-RecoveryExpr 0x12700e0b0 <col:25> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12700e190 <col:40> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12700e348 <col:56, line:6:5>     |   |-CallExpr 0x12700e318 <line:4:9, col:38> 'int'     |   | `-ImplicitCastExpr 0x12700e300 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x12700e2b0 <col:9> 'int ()' Function 0x12700e1f8 'trace_esp_error_fifo_overrun' 'int ()'     |   `-ReturnStmt 0x12700e338 <line:5:9>     `-CallExpr 0x126922778 <line:8:5, col:32> '<dependent type>' contains-errors       |-DeclRefExpr 0x1269226b8 <col:5> 'int ()' Function 0x126922600 'fifo8_push' 'int ()'       |-UnaryOperator 0x126922740 <col:16, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow       | `-CXXDependentScopeMemberExpr 0x1269226f8 <col:17, col:20> '<dependent type>' contains-errors lvalue ->cmdfifo       |   `-RecoveryExpr 0x1269226d8 <col:17> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x126922758 <col:29> '<dependent type>' contains-errors lvalue ","19356":"`-FunctionDecl 0x16000dfa8  line:1:1 invalid njs_string_prototype_iterator_obj 'int (int *, int *, int, int)'   |-ParmVarDecl 0x16000dd28 <col:35, col:45> col:45 invalid vm 'int *'   |-ParmVarDecl 0x16000dda8 <col:49, col:62> col:62 invalid args 'int *'   |-ParmVarDecl 0x16000de28 <line:2:5, col:16> col:16 invalid nargs 'int'   |-ParmVarDecl 0x16000dea8 <col:23, col:35> col:35 invalid kind 'int'   `-CompoundStmt 0x1600278e0 <line:3:1, line:15:1>     |-IfStmt 0x160027638 <line:10:5, line:12:5>     | |-CallExpr 0x1600275b0 <line:10:9, col:36> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1600274b8 <col:9> 'int ()' Function 0x160027400 'njs_slow_path' 'int ()'     | | `-BinaryOperator 0x160027590 <col:23, col:30> 'int' contains-errors '!='     | |   |-RecoveryExpr 0x160027550 <col:23> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x160027570 <col:30> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x160027620 <col:39, line:12:5>     |   `-ReturnStmt 0x160027610 <line:11:9, col:16>     |     `-RecoveryExpr 0x1600275f0 <col:16> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1600278d0 <line:14:5, col:65>       `-CallExpr 0x160027890 <col:12, col:65> '<dependent type>' contains-errors         |-DeclRefExpr 0x160027738 <col:12> 'int ()' Function 0x160027680 'njs_array_iterator_create' 'int ()'         |-RecoveryExpr 0x160027758 <col:38> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x160027870 <col:42> '<dependent type>' contains-errors lvalue         |-UnaryOperator 0x1600277f8 <col:48, col:53> '<dependent type>' contains-errors prefix '&' cannot overflow         | `-CXXDependentScopeMemberExpr 0x1600277b0 <col:49, col:53> '<dependent type>' contains-errors lvalue ->retval         |   `-RecoveryExpr 0x160027790 <col:49> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x160027810 <col:61> '<dependent type>' contains-errors lvalue ","19633":"`-FunctionDecl 0x12b944038  col:4 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x12b944138 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x12b9441a0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x12b944208 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x12b9440e0 <<invalid sloc>> Implicit 882 ","19806":"`-FunctionDecl 0x1429282c8  line:1:17 invalid _getCollectionNssFromUUID 'int (int *, const int)'   |-ParmVarDecl 0x142928128 <col:43, col:61> col:61 invalid opCtx 'int *'   |-ParmVarDecl 0x1429281a8 <col:68, <invalid sloc>> col:78 invalid 'const int'   `-CompoundStmt 0x142928778 <col:86, line:4:1>     `-ReturnStmt 0x142928768 <line:3:5, col:52>       `-ConditionalOperator 0x142928738 <col:12, col:52> '<dependent type>' contains-errors         |-RecoveryExpr 0x142928658 <col:12> '<dependent type>' contains-errors lvalue         |-CallExpr 0x1429286e0 <col:21, col:32> '<dependent type>' contains-errors         | `-CXXDependentScopeMemberExpr 0x142928698 <col:21, col:29> '<dependent type>' contains-errors lvalue ->ns         |   `-RecoveryExpr 0x142928678 <col:21> '<dependent type>' contains-errors lvalue         `-CallExpr 0x142928718 <col:36, col:52> 'int'           `-ImplicitCastExpr 0x142928700 <col:36> 'int (*)()' <FunctionToPointerDecay>             `-DeclRefExpr 0x1429285a0 <col:36> 'int ()' Function 0x1429284e8 'NamespaceString' 'int ()' ","19254":"`-FunctionDecl 0x12600e3f0  line:1:6 invalid BrotliDecoderDestroyInstance 'void (int *)'   |-ParmVarDecl 0x12600e328 <col:35, col:55> col:55 invalid state 'int *'   `-CompoundStmt 0x12600e9a0 <col:62, line:10:1>     `-IfStmt 0x12600e970 <line:2:3, line:9:3> has_else       |-UnaryOperator 0x12600e4d8 <line:2:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-ImplicitCastExpr 0x12600e4c0 <col:8> '<dependent type>' contains-errors <LValueToRValue>       |   `-RecoveryExpr 0x12600e4a0 <col:8> '<dependent type>' contains-errors lvalue       |-CompoundStmt 0x12600e500 <col:15, line:4:3>       | `-ReturnStmt 0x12600e4f0 <line:3:5>       `-CompoundStmt 0x12600e948 <line:4:10, line:9:3>         |-DeclStmt 0x12600e600 <line:6:5, col:48>         | `-VarDecl 0x12600e530 <col:5, col:27> col:11 used opaque 'void *' cinit         |   `-CXXDependentScopeMemberExpr 0x12600e5b8 <col:20, col:27> '<dependent type>' contains-errors lvalue ->memory_manager_opaque         |     `-RecoveryExpr 0x12600e598 <col:20> '<dependent type>' contains-errors lvalue         |-CallExpr 0x12600e7b0 <line:7:5, col:36> '<dependent type>' contains-errors         | |-DeclRefExpr 0x12600e770 <col:5> 'int ()' Function 0x12600e6b8 'BrotliDecoderStateCleanup' 'int ()'         | `-RecoveryExpr 0x12600e790 <col:31> '<dependent type>' contains-errors lvalue         `-CallExpr 0x12600e918 <line:8:5, col:28> '<dependent type>' contains-errors           |-DeclRefExpr 0x12600e8b8 <col:5> 'int ()' Function 0x12600e800 'free_func' 'int ()'           |-DeclRefExpr 0x12600e8d8 <col:15> 'void *' contains-errors lvalue Var 0x12600e530 'opaque' 'void *'           `-RecoveryExpr 0x12600e8f8 <col:23> '<dependent type>' contains-errors lvalue ","19454":"`-FunctionDecl 0x15b859f38  col:8 implicit used strlcpy 'unsigned long (char *, const char *, unsigned long)' extern   |-ParmVarDecl 0x15b85a038 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x15b85a0a0 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x15b85a108 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x15b859fe0 <<invalid sloc>> Implicit 969 ","20103":"`-FunctionDecl 0x14b123e00  col:3 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x14b123f00 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x14b123f68 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x14b123fd0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14b123ea8 <<invalid sloc>> Implicit 900 ","19735":"`-FunctionDecl 0x14700ddc8  line:1:17 invalid sys_unshare 'int (unsigned long)'   |-ParmVarDecl 0x14700dcf0 <col:29, col:43> col:43 used unshare_flags 'unsigned long'   `-CompoundStmt 0x14702ae10 <line:2:1, line:98:1>     |-DeclStmt 0x14700df18 <line:3:2, col:13>     | `-VarDecl 0x14700de90 <col:2, col:12> col:6 used err 'int' cinit     |   `-IntegerLiteral 0x14700def8 <col:12> 'int' 0     |-DeclStmt 0x14700e1e8 <line:4:2, col:38>     | |-RecordDecl 0x14700df30 <col:2, col:9> col:9 struct fs_struct     | |-VarDecl 0x14700e098 <col:2, col:20> col:20 used fs 'struct fs_struct *'     | `-VarDecl 0x14700e128 <col:2, col:34> col:25 used new_fs 'struct fs_struct *' cinit     |   `-RecoveryExpr 0x14700e1a8 <col:34> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x147027438 <line:5:2, col:40>     | |-RecordDecl 0x14700e200 <col:2, col:9> col:9 struct sighand_struct     | `-VarDecl 0x14700e368 <col:2, col:36> col:25 used new_sigh 'struct sighand_struct *' cinit     |   `-RecoveryExpr 0x147027400 <col:36> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x1470277d8 <line:6:2, col:57>     | |-RecordDecl 0x147027450 <col:2, col:9> col:9 struct mm_struct     | |-VarDecl 0x1470275b8 <col:2, col:20> col:20 used mm 'struct mm_struct *'     | |-VarDecl 0x147027648 <col:2, col:34> col:25 used new_mm 'struct mm_struct *' cinit     | | `-RecoveryExpr 0x1470276c8 <col:34> '<dependent type>' contains-errors lvalue     | `-VarDecl 0x147027710 <col:2, col:53> col:41 used active_mm 'struct mm_struct *' cinit     |   `-RecoveryExpr 0x147027790 <col:53> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x147027aa8 <line:7:2, col:41>     | |-RecordDecl 0x1470277f0 <col:2, col:9> col:9 struct files_struct     | |-VarDecl 0x147027958 <col:2, col:23> col:23 used fd 'struct files_struct *'     | `-VarDecl 0x1470279e8 <col:2, col:37> col:28 used new_fd 'struct files_struct *' cinit     |   `-RecoveryExpr 0x147027a68 <col:37> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x147027ce0 <line:8:2, col:36>     | |-RecordDecl 0x147027ac0 <col:2, col:9> col:9 struct nsproxy     | `-VarDecl 0x147027c28 <col:2, col:32> col:18 used new_nsproxy 'struct nsproxy *' cinit     |   `-RecoveryExpr 0x147027ca8 <col:32> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x147027d98 <line:9:2, col:20>     | `-VarDecl 0x147027d10 <col:2, col:19> col:6 used do_sysvsem 'int' cinit     |   `-IntegerLiteral 0x147027d78 <col:19> 'int' 0     |-CallExpr 0x147027fe8 <line:11:2, col:36> 'int'     | |-ImplicitCastExpr 0x147027fd0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x147027f10 <col:2> 'int ()' Function 0x147027e58 'check_unshare_flags' 'int ()'     | `-UnaryOperator 0x147027f80 <col:22, col:23> 'unsigned long *' prefix '&' cannot overflow     |   `-DeclRefExpr 0x147027f30 <col:23> 'unsigned long' lvalue ParmVar 0x14700dcf0 'unshare_flags' 'unsigned long'     |-BinaryOperator 0x1470280e8 <line:14:2, col:9> 'int' contains-errors '='     | |-DeclRefExpr 0x147028010 <col:2> 'int' lvalue Var 0x14700de90 'err' 'int'     | `-UnaryOperator 0x1470280d0 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow     |   `-ImplicitCastExpr 0x1470280b8 <col:9> '<dependent type>' contains-errors <LValueToRValue>     |     `-RecoveryExpr 0x147028098 <col:9> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14702c400 <line:15:2, line:19:8>     | |-RecoveryExpr 0x147028370 <line:15:6, line:18:17> '_Bool' contains-errors     | `-GotoStmt 0x1470283e0 <line:19:3, col:8> 'bad_unshare_out' 0x147028390     |-IfStmt 0x14702c4c0 <line:22:2, line:23:16>     | |-RecoveryExpr 0x14702c440 <line:22:6, col:49> '_Bool' contains-errors     | `-BinaryOperator 0x14702c4a0 <line:23:3, col:16> 'int' '='     |   |-DeclRefExpr 0x14702c460 <col:3> 'int' lvalue Var 0x147027d10 'do_sysvsem' 'int'     |   `-IntegerLiteral 0x14702c480 <col:16> 'int' 1     |-IfStmt 0x14702c6d0 <line:24:2, line:25:8>     | |-ParenExpr 0x14702c698 <line:24:6, col:42> 'int'     | | `-BinaryOperator 0x14702c678 <col:7, col:41> 'int' '='     | |   |-DeclRefExpr 0x14702c4e0 <col:7> 'int' lvalue Var 0x14700de90 'err' 'int'     | |   `-CallExpr 0x14702c638 <col:13, col:41> 'int'     | |     |-ImplicitCastExpr 0x14702c620 <col:13> 'int (*)()' <FunctionToPointerDecay>     | |     | `-DeclRefExpr 0x14702c5e0 <col:13> 'int ()' Function 0x14702c528 'unshare_thread' 'int ()'     | |     `-ImplicitCastExpr 0x14702c660 <col:28> 'unsigned long' <LValueToRValue>     | |       `-DeclRefExpr 0x14702c600 <col:28> 'unsigned long' lvalue ParmVar 0x14700dcf0 'unshare_flags' 'unsigned long'     | `-GotoStmt 0x14702c6b8 <line:25:3, col:8> 'bad_unshare_out' 0x147028390     |-IfStmt 0x14702c9d0 <line:26:2, line:27:8>     | |-ParenExpr 0x14702c948 <line:26:6, col:47> 'int' contains-errors     | | `-BinaryOperator 0x14702c928 <col:7, col:46> 'int' contains-errors '='     | |   |-DeclRefExpr 0x14702c6f0 <col:7> 'int' lvalue Var 0x14700de90 'err' 'int'     | |   `-CallExpr 0x14702c8e0 <col:13, col:46> 'int' contains-errors     | |     |-ImplicitCastExpr 0x14702c8c8 <col:13> 'int (*)()' <FunctionToPointerDecay>     | |     | `-DeclRefExpr 0x14702c7f0 <col:13> 'int ()' Function 0x14702c738 'unshare_fs' 'int ()'     | |     |-ImplicitCastExpr 0x14702c910 <col:24> 'unsigned long' <LValueToRValue>     | |     | `-DeclRefExpr 0x14702c810 <col:24> 'unsigned long' lvalue ParmVar 0x14700dcf0 'unshare_flags' 'unsigned long'     | |     `-UnaryOperator 0x14702c8b0 <col:39, col:40> 'struct fs_struct **' contains-errors prefix '&' cannot overflow     | |       `-DeclRefExpr 0x14702c830 <col:40> 'struct fs_struct *' contains-errors lvalue Var 0x14700e128 'new_fs' 'struct fs_struct *'     | `-GotoStmt 0x14702c9b8 <line:27:3, col:8> 'bad_unshare_cleanup_thread' 0x14702c968     |-IfStmt 0x14702ccd0 <line:28:2, line:29:8>     | |-ParenExpr 0x14702cc48 <line:28:6, col:54> 'int' contains-errors     | | `-BinaryOperator 0x14702cc28 <col:7, col:53> 'int' contains-errors '='     | |   |-DeclRefExpr 0x14702c9f0 <col:7> 'int' lvalue Var 0x14700de90 'err' 'int'     | |   `-CallExpr 0x14702cbe0 <col:13, col:53> 'int' contains-errors     | |     |-ImplicitCastExpr 0x14702cbc8 <col:13> 'int (*)()' <FunctionToPointerDecay>     | |     | `-DeclRefExpr 0x14702caf0 <col:13> 'int ()' Function 0x14702ca38 'unshare_sighand' 'int ()'     | |     |-ImplicitCastExpr 0x14702cc10 <col:29> 'unsigned long' <LValueToRValue>     | |     | `-DeclRefExpr 0x14702cb10 <col:29> 'unsigned long' lvalue ParmVar 0x14700dcf0 'unshare_flags' 'unsigned long'     | |     `-UnaryOperator 0x14702cbb0 <col:44, col:45> 'struct sighand_struct **' contains-errors prefix '&' cannot overflow     | |       `-DeclRefExpr 0x14702cb30 <col:45> 'struct sighand_struct *' contains-errors lvalue Var 0x14700e368 'new_sigh' 'struct sighand_struct *'     | `-GotoStmt 0x14702ccb8 <line:29:3, col:8> 'bad_unshare_cleanup_fs' 0x14702cc68     |-IfStmt 0x14702cfd0 <line:30:2, line:31:8>     | |-ParenExpr 0x14702cf48 <line:30:6, col:47> 'int' contains-errors     | | `-BinaryOperator 0x14702cf28 <col:7, col:46> 'int' contains-errors '='     | |   |-DeclRefExpr 0x14702ccf0 <col:7> 'int' lvalue Var 0x14700de90 'err' 'int'     | |   `-CallExpr 0x14702cee0 <col:13, col:46> 'int' contains-errors     | |     |-ImplicitCastExpr 0x14702cec8 <col:13> 'int (*)()' <FunctionToPointerDecay>     | |     | `-DeclRefExpr 0x14702cdf0 <col:13> 'int ()' Function 0x14702cd38 'unshare_vm' 'int ()'     | |     |-ImplicitCastExpr 0x14702cf10 <col:24> 'unsigned long' <LValueToRValue>     | |     | `-DeclRefExpr 0x14702ce10 <col:24> 'unsigned long' lvalue ParmVar 0x14700dcf0 'unshare_flags' 'unsigned long'     | |     `-UnaryOperator 0x14702ceb0 <col:39, col:40> 'struct mm_struct **' contains-errors prefix '&' cannot overflow     | |       `-DeclRefExpr 0x14702ce30 <col:40> 'struct mm_struct *' contains-errors lvalue Var 0x147027648 'new_mm' 'struct mm_struct *'     | `-GotoStmt 0x14702cfb8 <line:31:3, col:8> 'bad_unshare_cleanup_sigh' 0x14702cf68     |-IfStmt 0x14702d2d0 <line:32:2, line:33:8>     | |-ParenExpr 0x14702d248 <line:32:6, col:47> 'int' contains-errors     | | `-BinaryOperator 0x14702d228 <col:7, col:46> 'int' contains-errors '='     | |   |-DeclRefExpr 0x14702cff0 <col:7> 'int' lvalue Var 0x14700de90 'err' 'int'     | |   `-CallExpr 0x14702d1e0 <col:13, col:46> 'int' contains-errors     | |     |-ImplicitCastExpr 0x14702d1c8 <col:13> 'int (*)()' <FunctionToPointerDecay>     | |     | `-DeclRefExpr 0x14702d0f0 <col:13> 'int ()' Function 0x14702d038 'unshare_fd' 'int ()'     | |     |-ImplicitCastExpr 0x14702d210 <col:24> 'unsigned long' <LValueToRValue>     | |     | `-DeclRefExpr 0x14702d110 <col:24> 'unsigned long' lvalue ParmVar 0x14700dcf0 'unshare_flags' 'unsigned long'     | |     `-UnaryOperator 0x14702d1b0 <col:39, col:40> 'struct files_struct **' contains-errors prefix '&' cannot overflow     | |       `-DeclRefExpr 0x14702d130 <col:40> 'struct files_struct *' contains-errors lvalue Var 0x1470279e8 'new_fd' 'struct files_struct *'     | `-GotoStmt 0x14702d2b8 <line:33:3, col:8> 'bad_unshare_cleanup_vm' 0x14702d268     |-IfStmt 0x147029620 <line:34:2, line:36:8>     | |-ParenExpr 0x147029598 <line:34:6, line:35:11> 'int' contains-errors     | | `-BinaryOperator 0x147029578 <line:34:7, line:35:10> 'int' contains-errors '='     | |   |-DeclRefExpr 0x14702d2f0 <line:34:7> 'int' lvalue Var 0x14700de90 'err' 'int'     | |   `-CallExpr 0x147029510 <col:13, line:35:10> 'int' contains-errors     | |     |-ImplicitCastExpr 0x1470294f8 <line:34:13> 'int (*)()' <FunctionToPointerDecay>     | |     | `-DeclRefExpr 0x147029400 <col:13> 'int ()' Function 0x14702d338 'unshare_nsproxy_namespaces' 'int ()'     | |     |-ImplicitCastExpr 0x147029548 <col:40> 'unsigned long' <LValueToRValue>     | |     | `-DeclRefExpr 0x147029420 <col:40> 'unsigned long' lvalue ParmVar 0x14700dcf0 'unshare_flags' 'unsigned long'     | |     |-UnaryOperator 0x1470294c0 <col:55, col:56> 'struct nsproxy **' contains-errors prefix '&' cannot overflow     | |     | `-DeclRefExpr 0x147029440 <col:56> 'struct nsproxy *' contains-errors lvalue Var 0x147027c28 'new_nsproxy' 'struct nsproxy *'     | |     `-ImplicitCastExpr 0x147029560 <line:35:4> 'struct fs_struct *' contains-errors <LValueToRValue>     | |       `-DeclRefExpr 0x1470294d8 <col:4> 'struct fs_struct *' contains-errors lvalue Var 0x14700e128 'new_fs' 'struct fs_struct *'     | `-GotoStmt 0x147029608 <line:36:3, col:8> 'bad_unshare_cleanup_fd' 0x1470295b8     |-IfStmt 0x14702a298 <line:38:2, line:73:2>     | |-BinaryOperator 0x1470297b8 <line:38:6, col:51> 'int' contains-errors '||'     | | |-BinaryOperator 0x147029760 <col:6, col:37> 'int' contains-errors '||'     | | | |-BinaryOperator 0x147029708 <col:6, col:27> 'int' contains-errors '||'     | | | | |-BinaryOperator 0x1470296b0 <col:6, col:17> 'int' contains-errors '||'     | | | | | |-ImplicitCastExpr 0x147029680 <col:6> 'struct fs_struct *' contains-errors <LValueToRValue>     | | | | | | `-DeclRefExpr 0x147029640 <col:6> 'struct fs_struct *' contains-errors lvalue Var 0x14700e128 'new_fs' 'struct fs_struct *'     | | | | | `-ImplicitCastExpr 0x147029698 <col:17> 'struct mm_struct *' contains-errors <LValueToRValue>     | | | | |   `-DeclRefExpr 0x147029660 <col:17> 'struct mm_struct *' contains-errors lvalue Var 0x147027648 'new_mm' 'struct mm_struct *'     | | | | `-ImplicitCastExpr 0x1470296f0 <col:27> 'struct files_struct *' contains-errors <LValueToRValue>     | | | |   `-DeclRefExpr 0x1470296d0 <col:27> 'struct files_struct *' contains-errors lvalue Var 0x1470279e8 'new_fd' 'struct files_struct *'     | | | `-ImplicitCastExpr 0x147029748 <col:37> 'int' <LValueToRValue>     | | |   `-DeclRefExpr 0x147029728 <col:37> 'int' lvalue Var 0x147027d10 'do_sysvsem' 'int'     | | `-ImplicitCastExpr 0x1470297a0 <col:51> 'struct nsproxy *' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x147029780 <col:51> 'struct nsproxy *' contains-errors lvalue Var 0x147027c28 'new_nsproxy' 'struct nsproxy *'     | `-CompoundStmt 0x14702a260 <col:64, line:73:2>     |   |-IfStmt 0x147029920 <line:39:3, line:42:3>     |   | |-ImplicitCastExpr 0x1470297f8 <line:39:7> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x1470297d8 <col:7> 'int' lvalue Var 0x147027d10 'do_sysvsem' 'int'     |   | `-CompoundStmt 0x147029910 <col:19, line:42:3>     |   |-IfStmt 0x147029ac8 <line:44:3, line:47:3>     |   | |-ImplicitCastExpr 0x147029960 <line:44:7> 'struct nsproxy *' contains-errors <LValueToRValue>     |   | | `-DeclRefExpr 0x147029940 <col:7> 'struct nsproxy *' contains-errors lvalue Var 0x147027c28 'new_nsproxy' 'struct nsproxy *'     |   | `-CompoundStmt 0x147029ab8 <col:20, line:47:3>     |   |-IfStmt 0x147029cf0 <line:51:3, line:55:3>     |   | |-ImplicitCastExpr 0x147029c08 <line:51:7> 'struct fs_struct *' contains-errors <LValueToRValue>     |   | | `-DeclRefExpr 0x147029be8 <col:7> 'struct fs_struct *' contains-errors lvalue Var 0x14700e128 'new_fs' 'struct fs_struct *'     |   | `-CompoundStmt 0x147029cd8 <col:15, line:55:3>     |   |   `-BinaryOperator 0x147029cb8 <line:54:4, col:13> 'struct fs_struct *' contains-errors '='     |   |     |-DeclRefExpr 0x147029c60 <col:4> 'struct fs_struct *' contains-errors lvalue Var 0x14700e128 'new_fs' 'struct fs_struct *'     |   |     `-ImplicitCastExpr 0x147029ca0 <col:13> 'struct fs_struct *' <LValueToRValue>     |   |       `-DeclRefExpr 0x147029c80 <col:13> 'struct fs_struct *' lvalue Var 0x14700e098 'fs' 'struct fs_struct *'     |   |-IfStmt 0x14702a018 <line:57:3, line:64:3>     |   | |-ImplicitCastExpr 0x147029d30 <line:57:7> 'struct mm_struct *' contains-errors <LValueToRValue>     |   | | `-DeclRefExpr 0x147029d10 <col:7> 'struct mm_struct *' contains-errors lvalue Var 0x147027648 'new_mm' 'struct mm_struct *'     |   | `-CompoundStmt 0x147029ff8 <col:15, line:64:3>     |   |   |-CallExpr 0x147029f20 <line:62:4, col:33> 'int' contains-errors     |   |   | |-ImplicitCastExpr 0x147029f08 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x147029ea8 <col:4> 'int ()' Function 0x147029df0 'activate_mm' 'int ()'     |   |   | |-ImplicitCastExpr 0x147029f50 <col:16> 'struct mm_struct *' contains-errors <LValueToRValue>     |   |   | | `-DeclRefExpr 0x147029ec8 <col:16> 'struct mm_struct *' contains-errors lvalue Var 0x147027710 'active_mm' 'struct mm_struct *'     |   |   | `-ImplicitCastExpr 0x147029f68 <col:27> 'struct mm_struct *' contains-errors <LValueToRValue>     |   |   |   `-DeclRefExpr 0x147029ee8 <col:27> 'struct mm_struct *' contains-errors lvalue Var 0x147027648 'new_mm' 'struct mm_struct *'     |   |   `-BinaryOperator 0x147029fd8 <line:63:4, col:13> 'struct mm_struct *' contains-errors '='     |   |     |-DeclRefExpr 0x147029f80 <col:4> 'struct mm_struct *' contains-errors lvalue Var 0x147027648 'new_mm' 'struct mm_struct *'     |   |     `-ImplicitCastExpr 0x147029fc0 <col:13> 'struct mm_struct *' <LValueToRValue>     |   |       `-DeclRefExpr 0x147029fa0 <col:13> 'struct mm_struct *' lvalue Var 0x1470275b8 'mm' 'struct mm_struct *'     |   `-IfStmt 0x14702a140 <line:66:3, line:70:3>     |     |-ImplicitCastExpr 0x14702a058 <line:66:7> 'struct files_struct *' contains-errors <LValueToRValue>     |     | `-DeclRefExpr 0x14702a038 <col:7> 'struct files_struct *' contains-errors lvalue Var 0x1470279e8 'new_fd' 'struct files_struct *'     |     `-CompoundStmt 0x14702a128 <col:15, line:70:3>     |       `-BinaryOperator 0x14702a108 <line:69:4, col:13> 'struct files_struct *' contains-errors '='     |         |-DeclRefExpr 0x14702a0b0 <col:4> 'struct files_struct *' contains-errors lvalue Var 0x1470279e8 'new_fd' 'struct files_struct *'     |         `-ImplicitCastExpr 0x14702a0f0 <col:13> 'struct files_struct *' <LValueToRValue>     |           `-DeclRefExpr 0x14702a0d0 <col:13> 'struct files_struct *' lvalue Var 0x147027958 'fd' 'struct files_struct *'     |-IfStmt 0x14702a478 <line:75:2, line:76:26>     | |-ImplicitCastExpr 0x14702a2d8 <line:75:6> 'struct nsproxy *' contains-errors <LValueToRValue>     | | `-DeclRefExpr 0x14702a2b8 <col:6> 'struct nsproxy *' contains-errors lvalue Var 0x147027c28 'new_nsproxy' 'struct nsproxy *'     | `-CallExpr 0x14702a438 <line:76:3, col:26> 'int' contains-errors     |   |-ImplicitCastExpr 0x14702a420 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14702a3d0 <col:3> 'int ()' Function 0x14702a318 'put_nsproxy' 'int ()'     |   `-ImplicitCastExpr 0x14702a460 <col:15> 'struct nsproxy *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x14702a400 <col:15> 'struct nsproxy *' contains-errors lvalue Var 0x147027c28 'new_nsproxy' 'struct nsproxy *'     |-LabelStmt 0x14702a668 <line:78:1, line:80:26> 'bad_unshare_cleanup_fd'     | `-IfStmt 0x14702a648 <line:79:2, line:80:26>     |   |-ImplicitCastExpr 0x14702a4b8 <line:79:6> 'struct files_struct *' contains-errors <LValueToRValue>     |   | `-DeclRefExpr 0x14702a498 <col:6> 'struct files_struct *' contains-errors lvalue Var 0x1470279e8 'new_fd' 'struct files_struct *'     |   `-CallExpr 0x14702a608 <line:80:3, col:26> 'int' contains-errors     |     |-ImplicitCastExpr 0x14702a5f0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14702a5b0 <col:3> 'int ()' Function 0x14702a4f8 'put_files_struct' 'int ()'     |     `-ImplicitCastExpr 0x14702a630 <col:20> 'struct files_struct *' contains-errors <LValueToRValue>     |       `-DeclRefExpr 0x14702a5d0 <col:20> 'struct files_struct *' contains-errors lvalue Var 0x1470279e8 'new_fd' 'struct files_struct *'     |-LabelStmt 0x14702a858 <line:82:1, line:84:15> 'bad_unshare_cleanup_vm'     | `-IfStmt 0x14702a838 <line:83:2, line:84:15>     |   |-ImplicitCastExpr 0x14702a6a8 <line:83:6> 'struct mm_struct *' contains-errors <LValueToRValue>     |   | `-DeclRefExpr 0x14702a688 <col:6> 'struct mm_struct *' contains-errors lvalue Var 0x147027648 'new_mm' 'struct mm_struct *'     |   `-CallExpr 0x14702a7f8 <line:84:3, col:15> 'int' contains-errors     |     |-ImplicitCastExpr 0x14702a7e0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14702a7a0 <col:3> 'int ()' Function 0x14702a6e8 'mmput' 'int ()'     |     `-ImplicitCastExpr 0x14702a820 <col:9> 'struct mm_struct *' contains-errors <LValueToRValue>     |       `-DeclRefExpr 0x14702a7c0 <col:9> 'struct mm_struct *' contains-errors lvalue Var 0x147027648 'new_mm' 'struct mm_struct *'     |-LabelStmt 0x14702ab78 <line:86:1, col:25> 'bad_unshare_cleanup_sigh'     | `-NullStmt 0x14702ab70 <col:25>     |-LabelStmt 0x14702ad68 <line:91:1, line:93:23> 'bad_unshare_cleanup_fs'     | `-IfStmt 0x14702ad48 <line:92:2, line:93:23>     |   |-ImplicitCastExpr 0x14702abb8 <line:92:6> 'struct fs_struct *' contains-errors <LValueToRValue>     |   | `-DeclRefExpr 0x14702ab98 <col:6> 'struct fs_struct *' contains-errors lvalue Var 0x14700e128 'new_fs' 'struct fs_struct *'     |   `-CallExpr 0x14702ad08 <line:93:3, col:23> 'int' contains-errors     |     |-ImplicitCastExpr 0x14702acf0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14702acb0 <col:3> 'int ()' Function 0x14702abf8 'put_fs_struct' 'int ()'     |     `-ImplicitCastExpr 0x14702ad30 <col:17> 'struct fs_struct *' contains-errors <LValueToRValue>     |       `-DeclRefExpr 0x14702acd0 <col:17> 'struct fs_struct *' contains-errors lvalue Var 0x14700e128 'new_fs' 'struct fs_struct *'     `-LabelStmt 0x14702adf0 <line:95:1, line:97:9> 'bad_unshare_cleanup_thread'       `-LabelStmt 0x14702add0 <line:96:1, line:97:9> 'bad_unshare_out'         `-ReturnStmt 0x14702adc0 <col:2, col:9>           `-ImplicitCastExpr 0x14702ada8 <col:9> 'int' <LValueToRValue>             `-DeclRefExpr 0x14702ad88 <col:9> 'int' lvalue Var 0x14700de90 'err' 'int' ","19911":"`-FunctionDecl 0x1411407c8  line:1:1 __mem_cgroup_insert_exceeded 'int (struct mem_cgroup *, struct mem_cgroup_per_zone *, struct mem_cgroup_tree_per_zone *, unsigned long long)'   |-ParmVarDecl 0x141128048 <col:30, col:49> col:49 memcg 'struct mem_cgroup *'   |-ParmVarDecl 0x141140428 <line:2:5, col:33> col:33 used mz 'struct mem_cgroup_per_zone *'   |-ParmVarDecl 0x1411405f8 <line:3:5, col:38> col:38 used mctz 'struct mem_cgroup_tree_per_zone *'   |-ParmVarDecl 0x141140678 <line:4:5, col:24> col:24 used new_usage_in_excess 'unsigned long long'   `-CompoundStmt 0x141141bd0 <line:5:1, line:29:1>     |-DeclStmt 0x141140be8 <line:6:2, col:45>     | |-RecordDecl 0x1411408d8 <col:2, col:9> col:9 struct rb_node     | `-VarDecl 0x141140aa8 <col:2, col:38> col:19 used p 'struct rb_node **' cinit     |   `-UnaryOperator 0x141140bb8 <col:23, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-CXXDependentScopeMemberExpr 0x141140b70 <col:24, col:38> '<dependent type>' contains-errors lvalue .rb_node     |       `-RecoveryExpr 0x141140b48 <col:24, col:30> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x141140b10 <col:24> 'struct mem_cgroup_tree_per_zone *' lvalue ParmVar 0x1411405f8 'mctz' 'struct mem_cgroup_tree_per_zone *'     |-DeclStmt 0x141140d40 <line:7:2, col:31>     | `-VarDecl 0x141140c88 <col:2, col:27> col:18 used parent 'struct rb_node *' cinit     |   `-RecoveryExpr 0x141140d20 <col:27> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x141140e50 <line:8:2, col:37>     | `-VarDecl 0x141140de8 <col:2, col:30> col:30 used mz_node 'struct mem_cgroup_per_zone *'     |-IfStmt 0x141140ed8 <line:10:2, line:11:3>     | |-RecoveryExpr 0x141140ea0 <line:10:6, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x141140e68 <col:6> 'struct mem_cgroup_per_zone *' lvalue ParmVar 0x141140428 'mz' 'struct mem_cgroup_per_zone *'     | `-ReturnStmt 0x141140ec8 <line:11:3>     |-BinaryOperator 0x141140f78 <line:13:2, col:24> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x141140f30 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x141140ef8 <col:2> 'struct mem_cgroup_per_zone *' lvalue ParmVar 0x141140428 'mz' 'struct mem_cgroup_per_zone *'     | `-DeclRefExpr 0x141140f58 <col:24> 'unsigned long long' lvalue ParmVar 0x141140678 'new_usage_in_excess' 'unsigned long long'     |-IfStmt 0x141141038 <line:14:2, line:15:3>     | |-UnaryOperator 0x141141010 <line:14:6, col:11> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x141140ff8 <col:7, col:11> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x141140fd0 <col:7, col:11> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x141140f98 <col:7> 'struct mem_cgroup_per_zone *' lvalue ParmVar 0x141140428 'mz' 'struct mem_cgroup_per_zone *'     | `-ReturnStmt 0x141141028 <line:15:3>     |-WhileStmt 0x141141740 <line:16:2, line:25:2>     | |-ImplicitCastExpr 0x1411410a8 <line:16:9, col:10> 'struct rb_node *' contains-errors <LValueToRValue>     | | `-UnaryOperator 0x141141090 <col:9, col:10> 'struct rb_node *' contains-errors lvalue prefix '*' cannot overflow     | |   `-ImplicitCastExpr 0x141141078 <col:10> 'struct rb_node **' contains-errors <LValueToRValue>     | |     `-DeclRefExpr 0x141141058 <col:10> 'struct rb_node **' contains-errors lvalue Var 0x141140aa8 'p' 'struct rb_node **'     | `-CompoundStmt 0x141141720 <col:13, line:25:2>     |   |-BinaryOperator 0x141141148 <line:17:3, col:13> 'struct rb_node *' contains-errors '='     |   | |-DeclRefExpr 0x1411410c0 <col:3> 'struct rb_node *' contains-errors lvalue Var 0x141140c88 'parent' 'struct rb_node *'     |   | `-ImplicitCastExpr 0x141141130 <col:12, col:13> 'struct rb_node *' contains-errors <LValueToRValue>     |   |   `-UnaryOperator 0x141141118 <col:12, col:13> 'struct rb_node *' contains-errors lvalue prefix '*' cannot overflow     |   |     `-ImplicitCastExpr 0x141141100 <col:13> 'struct rb_node **' contains-errors <LValueToRValue>     |   |       `-DeclRefExpr 0x1411410e0 <col:13> 'struct rb_node **' contains-errors lvalue Var 0x141140aa8 'p' 'struct rb_node **'     |   `-IfStmt 0x1411416f0 <line:20:3, line:24:15> has_else     |     |-BinaryOperator 0x1411413b8 <line:20:7, col:38> 'int' contains-errors '<'     |     | |-RecoveryExpr 0x141141330 <col:7, col:11> '<dependent type>' contains-errors lvalue     |     | | `-DeclRefExpr 0x1411412f8 <col:7> 'struct mem_cgroup_per_zone *' lvalue ParmVar 0x141140428 'mz' 'struct mem_cgroup_per_zone *'     |     | `-RecoveryExpr 0x141141390 <col:29, col:38> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x141141358 <col:29> 'struct mem_cgroup_per_zone *' lvalue Var 0x141140de8 'mz_node' 'struct mem_cgroup_per_zone *'     |     |-BinaryOperator 0x1411414c8 <line:21:4, col:15> 'struct rb_node **' contains-errors '='     |     | |-DeclRefExpr 0x1411413d8 <col:4> 'struct rb_node **' contains-errors lvalue Var 0x141140aa8 'p' 'struct rb_node **'     |     | `-UnaryOperator 0x1411414b0 <col:8, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow     |     |   `-RecoveryExpr 0x141141488 <col:9, col:15> '<dependent type>' contains-errors lvalue     |     |     `-ParenExpr 0x141141450 <col:9, col:12> 'struct rb_node *' contains-errors lvalue     |     |       `-UnaryOperator 0x141141438 <col:10, col:11> 'struct rb_node *' contains-errors lvalue prefix '*' cannot overflow     |     |         `-ImplicitCastExpr 0x141141420 <col:11> 'struct rb_node **' contains-errors <LValueToRValue>     |     |           `-DeclRefExpr 0x141141400 <col:11> 'struct rb_node **' contains-errors lvalue Var 0x141140aa8 'p' 'struct rb_node **'     |     `-IfStmt 0x1411416d0 <line:23:8, line:24:15>     |       |-BinaryOperator 0x1411415a8 <line:23:12, col:44> 'int' contains-errors '>='     |       | |-RecoveryExpr 0x141141520 <col:12, col:16> '<dependent type>' contains-errors lvalue     |       | | `-DeclRefExpr 0x1411414e8 <col:12> 'struct mem_cgroup_per_zone *' lvalue ParmVar 0x141140428 'mz' 'struct mem_cgroup_per_zone *'     |       | `-RecoveryExpr 0x141141580 <col:35, col:44> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x141141548 <col:35> 'struct mem_cgroup_per_zone *' lvalue Var 0x141140de8 'mz_node' 'struct mem_cgroup_per_zone *'     |       `-BinaryOperator 0x1411416b0 <line:24:4, col:15> 'struct rb_node **' contains-errors '='     |         |-DeclRefExpr 0x1411415c8 <col:4> 'struct rb_node **' contains-errors lvalue Var 0x141140aa8 'p' 'struct rb_node **'     |         `-UnaryOperator 0x141141698 <col:8, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow     |           `-RecoveryExpr 0x141141670 <col:9, col:15> '<dependent type>' contains-errors lvalue     |             `-ParenExpr 0x141141638 <col:9, col:12> 'struct rb_node *' contains-errors lvalue     |               `-UnaryOperator 0x141141620 <col:10, col:11> 'struct rb_node *' contains-errors lvalue prefix '*' cannot overflow     |                 `-ImplicitCastExpr 0x141141608 <col:11> 'struct rb_node **' contains-errors <LValueToRValue>     |                   `-DeclRefExpr 0x1411415e8 <col:11> 'struct rb_node **' contains-errors lvalue Var 0x141140aa8 'p' 'struct rb_node **'     |-CallExpr 0x141141918 <line:26:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x141141840 <col:2> 'int ()' Function 0x141141788 'rb_link_node' 'int ()'     | |-UnaryOperator 0x1411418c0 <col:15, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x141141898 <col:16, col:20> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x141141860 <col:16> 'struct mem_cgroup_per_zone *' lvalue ParmVar 0x141140428 'mz' 'struct mem_cgroup_per_zone *'     | |-DeclRefExpr 0x1411418d8 <col:31> 'struct rb_node *' contains-errors lvalue Var 0x141140c88 'parent' 'struct rb_node *'     | `-DeclRefExpr 0x1411418f8 <col:39> 'struct rb_node **' contains-errors lvalue Var 0x141140aa8 'p' 'struct rb_node **'     `-CallExpr 0x141141b40 <line:27:2, col:48> '<dependent type>' contains-errors       |-DeclRefExpr 0x141141a30 <col:2> 'int ()' Function 0x141141978 'rb_insert_color' 'int ()'       |-UnaryOperator 0x141141ab0 <col:18, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow       | `-RecoveryExpr 0x141141a88 <col:19, col:23> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x141141a50 <col:19> 'struct mem_cgroup_per_zone *' lvalue ParmVar 0x141140428 'mz' 'struct mem_cgroup_per_zone *'       `-UnaryOperator 0x141141b28 <col:34, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x141141b00 <col:35, col:41> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x141141ac8 <col:35> 'struct mem_cgroup_tree_per_zone *' lvalue ParmVar 0x1411405f8 'mctz' 'struct mem_cgroup_tree_per_zone *' ","19137":"`-FunctionDecl 0x11d9432c8  col:9 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x11d9433c8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x11d943430 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x11d943498 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x11d943370 <<invalid sloc>> Implicit 882 ","19927":"`-FunctionDecl 0x1450a6100  col:17 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x1450a6200 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x1450a61a8 <<invalid sloc>> Implicit 873 ","19228":"`-FunctionDecl 0x136946758  col:7 implicit used sprintf 'int (char *, const char *, ...)' extern   |-ParmVarDecl 0x136946858 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x1369468c0 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x136946800 <<invalid sloc>> Implicit 906   `-FormatAttr 0x136946938 <col:7> Implicit printf 2 3 ","20011":"`-FunctionDecl 0x14f00dfa8  line:1:12 invalid rm_read_multi 'int (int *, int *, int *, char *)' static   |-ParmVarDecl 0x14f00dd28 <col:26, col:43> col:43 invalid s 'int *'   |-ParmVarDecl 0x14f00dda8 <col:46, col:59> col:59 invalid pb 'int *'   |-ParmVarDecl 0x14f00de28 <line:2:26, col:36> col:36 referenced invalid st 'int *'   |-ParmVarDecl 0x14f00dea8 <col:40, col:46> col:46 used mime 'char *'   `-CompoundStmt 0x14e923880 <line:3:1, line:40:1>     |-DeclStmt 0x14f00e2b8 <line:4:5, col:42>     | `-VarDecl 0x14f00e088 <col:5, col:41> col:9 used number_of_streams 'int' cinit     |   `-CallExpr 0x14f00e290 <col:29, col:41> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14f00e250 <col:29> 'int ()' Function 0x14f00e198 'avio_rb16' 'int ()'     |     `-RecoveryExpr 0x14f00e270 <col:39> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x14f00e350 <line:5:5, col:23>     | `-VarDecl 0x14f00e2e8 <col:5, col:9> col:9 used number_of_mdpr 'int'     |-DeclStmt 0x14f027480 <line:6:5, col:15>     | |-VarDecl 0x14f00e380 <col:5, col:9> col:9 used i 'int'     | `-VarDecl 0x14f027400 <col:5, col:12> col:12 used ret 'int'     |-DeclStmt 0x14f027518 <line:7:5, col:19>     | `-VarDecl 0x14f0274b0 <col:5, col:14> col:14 used size2 'unsigned int'     |-ForStmt 0x14f0276c0 <line:8:5, line:9:21>     | |-BinaryOperator 0x14f027570 <line:8:10, col:14> 'int' '='     | | |-DeclRefExpr 0x14f027530 <col:10> 'int' lvalue Var 0x14f00e380 'i' 'int'     | | `-IntegerLiteral 0x14f027550 <col:14> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x14f027600 <col:17, col:19> 'int' contains-errors '<'     | | |-ImplicitCastExpr 0x14f0275d0 <col:17> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x14f027590 <col:17> 'int' lvalue Var 0x14f00e380 'i' 'int'     | | `-ImplicitCastExpr 0x14f0275e8 <col:19> 'int' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x14f0275b0 <col:19> 'int' contains-errors lvalue Var 0x14f00e088 'number_of_streams' 'int'     | |-UnaryOperator 0x14f027640 <col:38, col:39> 'int' postfix '++'     | | `-DeclRefExpr 0x14f027620 <col:38> 'int' lvalue Var 0x14f00e380 'i' 'int'     | `-CallExpr 0x14f027698 <line:9:9, col:21> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14f027658 <col:9> 'int ()' Function 0x14f00e198 'avio_rb16' 'int ()'     |   `-RecoveryExpr 0x14f027678 <col:19> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14f027780 <line:10:5, col:34> 'int' contains-errors '='     | |-DeclRefExpr 0x14f0276f8 <col:5> 'int' lvalue Var 0x14f00e2e8 'number_of_mdpr' 'int'     | `-CallExpr 0x14f027758 <col:22, col:34> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14f027718 <col:22> 'int ()' Function 0x14f00e198 'avio_rb16' 'int ()'     |   `-RecoveryExpr 0x14f027738 <col:32> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14f027a10 <line:11:5, line:13:5>     | |-BinaryOperator 0x14f0277f8 <line:11:9, col:27> 'int' '!='     | | |-ImplicitCastExpr 0x14f0277e0 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x14f0277a0 <col:9> 'int' lvalue Var 0x14f00e2e8 'number_of_mdpr' 'int'     | | `-IntegerLiteral 0x14f0277c0 <col:27> 'int' 1     | `-CompoundStmt 0x14f0279f8 <col:30, line:13:5>     |   `-CallExpr 0x14f0279c0 <line:12:9, col:55> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14f0278f8 <col:9> 'int ()' Function 0x14f027840 'avpriv_request_sample' 'int ()'     |     |-RecoveryExpr 0x14f027918 <col:31> '<dependent type>' contains-errors lvalue     |     |-StringLiteral 0x14f027980 <col:34> 'char[4]' lvalue \"STR\"     |     `-DeclRefExpr 0x14f0279a0 <col:41> 'int' lvalue Var 0x14f00e2e8 'number_of_mdpr' 'int'     |-ForStmt 0x14e923818 <line:14:5, line:38:5>     | |-BinaryOperator 0x14f027a70 <line:14:10, col:14> 'int' '='     | | |-DeclRefExpr 0x14f027a30 <col:10> 'int' lvalue Var 0x14f00e380 'i' 'int'     | | `-IntegerLiteral 0x14f027a50 <col:14> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x14f027b00 <col:17, col:21> 'int' '<'     | | |-ImplicitCastExpr 0x14f027ad0 <col:17> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x14f027a90 <col:17> 'int' lvalue Var 0x14f00e380 'i' 'int'     | | `-ImplicitCastExpr 0x14f027ae8 <col:21> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x14f027ab0 <col:21> 'int' lvalue Var 0x14f00e2e8 'number_of_mdpr' 'int'     | |-UnaryOperator 0x14f027b40 <col:37, col:38> 'int' postfix '++'     | | `-DeclRefExpr 0x14f027b20 <col:37> 'int' lvalue Var 0x14f00e380 'i' 'int'     | `-CompoundStmt 0x14e9237f0 <col:42, line:38:5>     |   |-IfStmt 0x14e923370 <line:16:9, line:31:13> has_else     |   | |-BinaryOperator 0x14f027be8 <line:16:13, col:17> 'int' '>'     |   | | |-ImplicitCastExpr 0x14f027bd0 <col:13> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x14f027b90 <col:13> 'int' lvalue Var 0x14f00e380 'i' 'int'     |   | | `-IntegerLiteral 0x14f027bb0 <col:17> 'int' 0     |   | |-CompoundStmt 0x14e9232f8 <col:20, line:30:9>     |   | | |-BinaryOperator 0x14f027e28 <line:17:13, col:46> '<dependent type>' contains-errors '='     |   | | | |-RecoveryExpr 0x14f027c28 <col:13> '<dependent type>' contains-errors lvalue     |   | | | | `-DeclRefExpr 0x14f027c08 <col:13> 'int *' lvalue ParmVar 0x14f00de28 'st' 'int *'     |   | | | `-CallExpr 0x14f027df8 <col:19, col:46> '<dependent type>' contains-errors     |   | | |   |-DeclRefExpr 0x14f027d30 <col:19> 'int ()' Function 0x14f027c78 'avformat_new_stream' 'int ()'     |   | | |   |-RecoveryExpr 0x14f027d50 <col:39> '<dependent type>' contains-errors lvalue     |   | | |   `-RecoveryExpr 0x14f027dd8 <col:42> '<dependent type>' contains-errors lvalue     |   | | |-IfStmt 0x14f028150 <line:18:13, line:21:13>     |   | | | |-UnaryOperator 0x14f027ee8 <line:18:17, col:18> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | | | | `-ImplicitCastExpr 0x14f027ed0 <col:18> '<dependent type>' contains-errors <LValueToRValue>     |   | | | |   `-RecoveryExpr 0x14f027eb0 <col:18> '<dependent type>' contains-errors lvalue     |   | | | `-CompoundStmt 0x14f028130 <col:23, line:21:13>     |   | | |   |-BinaryOperator 0x14f0280c8 <line:19:17, col:37> 'int' contains-errors '='     |   | | |   | |-DeclRefExpr 0x14f027f00 <col:17> 'int' lvalue Var 0x14f027400 'ret' 'int'     |   | | |   | `-CallExpr 0x14f0280a0 <col:23, col:37> '<dependent type>' contains-errors     |   | | |   |   |-DeclRefExpr 0x14f028000 <col:23> 'int ()' Function 0x14f027f48 'AVERROR' 'int ()'     |   | | |   |   `-RecoveryExpr 0x14f028080 <col:31> '<dependent type>' contains-errors lvalue     |   | | |   `-ReturnStmt 0x14f028120 <line:20:17, col:24>     |   | | |     `-ImplicitCastExpr 0x14f028108 <col:24> 'int' <LValueToRValue>     |   | | |       `-DeclRefExpr 0x14f0280e8 <col:24> 'int' lvalue Var 0x14f027400 'ret' 'int'     |   | | |-BinaryOperator 0x14f028320 <line:22:13, col:38> '<dependent type>' contains-errors '='     |   | | | |-CXXDependentScopeMemberExpr 0x14f0281b8 <col:13, col:18> '<dependent type>' contains-errors lvalue ->id     |   | | | | `-RecoveryExpr 0x14f028190 <col:13> '<dependent type>' contains-errors lvalue     |   | | | |   `-DeclRefExpr 0x14f028170 <col:13> 'int *' lvalue ParmVar 0x14f00de28 'st' 'int *'     |   | | | `-BinaryOperator 0x14f028300 <col:23, col:38> '<dependent type>' contains-errors '+'     |   | | |   |-CXXDependentScopeMemberExpr 0x14f028220 <col:23, col:27> '<dependent type>' contains-errors lvalue ->id     |   | | |   | `-RecoveryExpr 0x14f028200 <col:23> '<dependent type>' contains-errors lvalue     |   | | |   `-ParenExpr 0x14f0282e0 <col:32, col:38> 'int'     |   | | |     `-BinaryOperator 0x14f0282c0 <col:33, col:36> 'int' '<<'     |   | | |       |-ImplicitCastExpr 0x14f0282a8 <col:33> 'int' <LValueToRValue>     |   | | |       | `-DeclRefExpr 0x14f028268 <col:33> 'int' lvalue Var 0x14f00e380 'i' 'int'     |   | | |       `-IntegerLiteral 0x14f028288 <col:36> 'int' 16     |   | | |-BinaryOperator 0x14e922cf8 <line:23:13, col:53> '<dependent type>' contains-errors '='     |   | | | |-CXXDependentScopeMemberExpr 0x14e922c00 <col:13, col:28> '<dependent type>' contains-errors lvalue ->bit_rate     |   | | | | `-CXXDependentScopeMemberExpr 0x14f028388 <col:13, col:18> '<dependent type>' contains-errors lvalue ->codecpar     |   | | | |   `-RecoveryExpr 0x14f028360 <col:13> '<dependent type>' contains-errors lvalue     |   | | | |     `-DeclRefExpr 0x14f028340 <col:13> 'int *' lvalue ParmVar 0x14f00de28 'st' 'int *'     |   | | | `-CXXDependentScopeMemberExpr 0x14e922cb0 <col:39, col:53> '<dependent type>' contains-errors lvalue ->bit_rate     |   | | |   `-CXXDependentScopeMemberExpr 0x14e922c68 <col:39, col:43> '<dependent type>' contains-errors lvalue ->codecpar     |   | | |     `-RecoveryExpr 0x14e922c48 <col:39> '<dependent type>' contains-errors lvalue     |   | | |-BinaryOperator 0x14e922e10 <line:24:13, col:35> '<dependent type>' contains-errors '='     |   | | | |-CXXDependentScopeMemberExpr 0x14e922d60 <col:13, col:18> '<dependent type>' contains-errors lvalue ->start_time     |   | | | | `-RecoveryExpr 0x14e922d38 <col:13> '<dependent type>' contains-errors lvalue     |   | | | |   `-DeclRefExpr 0x14e922d18 <col:13> 'int *' lvalue ParmVar 0x14f00de28 'st' 'int *'     |   | | | `-CXXDependentScopeMemberExpr 0x14e922dc8 <col:31, col:35> '<dependent type>' contains-errors lvalue ->start_time     |   | | |   `-RecoveryExpr 0x14e922da8 <col:31> '<dependent type>' contains-errors lvalue     |   | | |-BinaryOperator 0x14e922f28 <line:25:13, col:35> '<dependent type>' contains-errors '='     |   | | | |-CXXDependentScopeMemberExpr 0x14e922e78 <col:13, col:18> '<dependent type>' contains-errors lvalue ->duration     |   | | | | `-RecoveryExpr 0x14e922e50 <col:13> '<dependent type>' contains-errors lvalue     |   | | | |   `-DeclRefExpr 0x14e922e30 <col:13> 'int *' lvalue ParmVar 0x14f00de28 'st' 'int *'     |   | | | `-CXXDependentScopeMemberExpr 0x14e922ee0 <col:31, col:35> '<dependent type>' contains-errors lvalue ->duration     |   | | |   `-RecoveryExpr 0x14e922ec0 <col:31> '<dependent type>' contains-errors lvalue     |   | | |-BinaryOperator 0x14e923078 <line:26:13, col:41> '<dependent type>' contains-errors '='     |   | | | |-CXXDependentScopeMemberExpr 0x14e922fd8 <col:13, col:28> '<dependent type>' contains-errors lvalue ->codec_type     |   | | | | `-CXXDependentScopeMemberExpr 0x14e922f90 <col:13, col:18> '<dependent type>' contains-errors lvalue ->codecpar     |   | | | |   `-RecoveryExpr 0x14e922f68 <col:13> '<dependent type>' contains-errors lvalue     |   | | | |     `-DeclRefExpr 0x14e922f48 <col:13> 'int *' lvalue ParmVar 0x14f00de28 'st' 'int *'     |   | | | `-RecoveryExpr 0x14e923058 <col:41> '<dependent type>' contains-errors lvalue     |   | | `-BinaryOperator 0x14e923298 <line:27:13, col:51> '<dependent type>' contains-errors '='     |   | |   |-CXXDependentScopeMemberExpr 0x14e9230e0 <col:13, col:18> '<dependent type>' contains-errors lvalue ->priv_data     |   | |   | `-RecoveryExpr 0x14e9230b8 <col:13> '<dependent type>' contains-errors lvalue     |   | |   |   `-DeclRefExpr 0x14e923098 <col:13> 'int *' lvalue ParmVar 0x14f00de28 'st' 'int *'     |   | |   `-CallExpr 0x14e923278 <col:30, col:51> 'int'     |   | |     `-ImplicitCastExpr 0x14e923260 <col:30> 'int (*)()' <FunctionToPointerDecay>     |   | |       `-DeclRefExpr 0x14e923208 <col:30> 'int ()' Function 0x14e923150 'ff_rm_alloc_rmstream' 'int ()'     |   | `-NullStmt 0x14e923368 <line:31:13>     |   |-BinaryOperator 0x14e923508 <line:33:9, col:29> 'unsigned int' contains-errors '='     |   | |-DeclRefExpr 0x14e9233a0 <col:9> 'unsigned int' lvalue Var 0x14f0274b0 'size2' 'unsigned int'     |   | `-CallExpr 0x14e9234e0 <col:17, col:29> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x14e9234a0 <col:17> 'int ()' Function 0x14e9233e8 'avio_rb32' 'int ()'     |   |   `-RecoveryExpr 0x14e9234c0 <col:27> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x14e9237d0 <line:36:9, line:37:20>     |     |-BinaryOperator 0x14e923768 <line:36:13, col:19> 'int' '<'     |     | |-ImplicitCastExpr 0x14e923750 <col:13> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x14e923710 <col:13> 'int' lvalue Var 0x14f027400 'ret' 'int'     |     | `-IntegerLiteral 0x14e923730 <col:19> 'int' 0     |     `-ReturnStmt 0x14e9237c0 <line:37:13, col:20>     |       `-ImplicitCastExpr 0x14e9237a8 <col:20> 'int' <LValueToRValue>     |         `-DeclRefExpr 0x14e923788 <col:20> 'int' lvalue Var 0x14f027400 'ret' 'int'     `-ReturnStmt 0x14e923870 <line:39:5, col:12>       `-IntegerLiteral 0x14e923850 <col:12> 'int' 0 ","19383":"`-FunctionDecl 0x152140d38  line:1:5 tcf_exts_dump 'int (struct sk_buff *, struct tcf_exts *, const struct tcf_ext_map *)'   |-ParmVarDecl 0x152128648 <col:19, col:35> col:35 skb 'struct sk_buff *'   |-ParmVarDecl 0x152140a28 <col:40, col:57> col:57 exts 'struct tcf_exts *'   |-ParmVarDecl 0x152140bf8 <line:2:5, col:31> col:31 map 'const struct tcf_ext_map *'   `-CompoundStmt 0x152140f80 <line:3:1, line:29:1>     |-ReturnStmt 0x152140e60 <line:26:2, col:9>     | `-IntegerLiteral 0x152140e40 <col:9> 'int' 0     `-LabelStmt 0x152140f60 <line:27:1, line:28:10> 'nla_put_failure'       `-ReturnStmt 0x152140ea8 <col:2, col:10>         `-UnaryOperator 0x152140e90 <col:9, col:10> 'int' prefix '-'           `-IntegerLiteral 0x152140e70 <col:10> 'int' 1 ","19292":"`-FunctionDecl 0x14b00dd38  col:13 invalid align 'int ()' ","19733":"`-FunctionDecl 0x13b1429f8  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x13b142af8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x13b142b60 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x13b142bc8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x13b142aa0 <<invalid sloc>> Implicit 882 ","19930":"`-FunctionDecl 0x1201419d8  line:1:1 invalid _warc_read 'int (struct archive_read *, const void **, int *, int *)'   |-ParmVarDecl 0x120128648 <col:12, col:33> col:33 used a 'struct archive_read *'   |-ParmVarDecl 0x120128728 <col:36, col:49> col:49 used buf 'const void **'   |-ParmVarDecl 0x120141800 <col:54, col:62> col:62 invalid bsz 'int *'   |-ParmVarDecl 0x120141880 <col:67, col:76> col:76 invalid off 'int *'   `-CompoundStmt 0x120142ce0 <line:2:1, line:35:1>     |-DeclStmt 0x120141d30 <line:3:2, col:36>     | |-RecordDecl 0x120141aa0 <col:2, col:9> col:9 struct warc_s     | `-VarDecl 0x120141c08 <col:2, col:32> col:17 used w 'struct warc_s *' cinit     |   `-CXXDependentScopeMemberExpr 0x120141cd0 <col:21, col:32> '<dependent type>' contains-errors lvalue ->data     |     `-RecoveryExpr 0x120141ca8 <col:21, col:24> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x120141c70 <col:21> 'struct archive_read *' lvalue ParmVar 0x120128648 'a' 'struct archive_read *'     |-DeclStmt 0x120141dc8 <line:4:2, col:17>     | `-VarDecl 0x120141d60 <col:2, col:14> col:14 used rab 'const char *'     |-IfStmt 0x1201422e0 <line:7:2, line:15:2>     | |-BinaryOperator 0x120141ea0 <line:7:6, col:22> 'int' contains-errors '>='     | | |-RecoveryExpr 0x120141e18 <col:6, col:9> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x120141de0 <col:6> 'struct warc_s *' contains-errors lvalue Var 0x120141c08 'w' 'struct warc_s *'     | | `-RecoveryExpr 0x120141e78 <col:19, col:22> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x120141e40 <col:19> 'struct warc_s *' contains-errors lvalue Var 0x120141c08 'w' 'struct warc_s *'     | `-CompoundStmt 0x1201422b0 <col:30, line:15:2>     |   |-LabelStmt 0x120142038 <line:8:2, line:10:10> 'eof'     |   | `-BinaryOperator 0x120141fc8 <col:3, col:10> 'const void *' contains-errors '='     |   |   |-UnaryOperator 0x120141f90 <col:3, col:4> 'const void *' lvalue prefix '*' cannot overflow     |   |   | `-ImplicitCastExpr 0x120141f78 <col:4> 'const void **' <LValueToRValue>     |   |   |   `-DeclRefExpr 0x120141ec0 <col:4> 'const void **' lvalue ParmVar 0x120128728 'buf' 'const void **'     |   |   `-RecoveryExpr 0x120141fa8 <col:10> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x1201420c8 <line:11:3, col:10> '<dependent type>' contains-errors '='     |   | |-UnaryOperator 0x120142090 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow     |   | | `-ImplicitCastExpr 0x120142078 <col:4> '<dependent type>' contains-errors <LValueToRValue>     |   | |   `-RecoveryExpr 0x120142058 <col:4> '<dependent type>' contains-errors lvalue     |   | `-IntegerLiteral 0x1201420a8 <col:10> 'unsigned int' 0     |   |-BinaryOperator 0x1201421d8 <line:12:3, col:22> '<dependent type>' contains-errors '='     |   | |-UnaryOperator 0x120142120 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow     |   | | `-ImplicitCastExpr 0x120142108 <col:4> '<dependent type>' contains-errors <LValueToRValue>     |   | |   `-RecoveryExpr 0x1201420e8 <col:4> '<dependent type>' contains-errors lvalue     |   | `-BinaryOperator 0x1201421b8 <col:10, col:22> '<dependent type>' contains-errors '+'     |   |   |-RecoveryExpr 0x120142170 <col:10, col:13> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x120142138 <col:10> 'struct warc_s *' contains-errors lvalue Var 0x120141c08 'w' 'struct warc_s *'     |   |   `-IntegerLiteral 0x120142198 <col:22> 'unsigned int' 4     |   `-BinaryOperator 0x120142278 <line:13:3, col:19> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x120142230 <col:3, col:6> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x1201421f8 <col:3> 'struct warc_s *' contains-errors lvalue Var 0x120141c08 'w' 'struct warc_s *'     |     `-IntegerLiteral 0x120142258 <col:19> 'unsigned int' 0     |-BinaryOperator 0x1201425d8 <line:17:2, col:40> 'const char *' contains-errors '='     | |-DeclRefExpr 0x120142300 <col:2> 'const char *' lvalue Var 0x120141d60 'rab' 'const char *'     | `-CallExpr 0x1201425a0 <col:8, col:40> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x120142480 <col:8> 'int ()' Function 0x1201423c8 '__archive_read_ahead' 'int ()'     |   |-DeclRefExpr 0x1201424a0 <col:29> 'struct archive_read *' lvalue ParmVar 0x120128648 'a' 'struct archive_read *'     |   |-IntegerLiteral 0x1201424c0 <col:32> 'unsigned int' 1     |   `-UnaryOperator 0x120142588 <col:36, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x120142568 <col:37> '<dependent type>' contains-errors lvalue     |-IfStmt 0x120142a10 <line:18:2, line:27:2> has_else     | |-BinaryOperator 0x120142670 <line:18:6, col:12> 'int' contains-errors '<'     | | |-RecoveryExpr 0x120142650 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x120142610 <col:12> 'int' 0     | |-CompoundStmt 0x120142750 <col:15, line:22:2>     | | `-BinaryOperator 0x120142700 <line:19:3, col:10> '<dependent type>' contains-errors '='     | |   |-UnaryOperator 0x1201426c8 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow     | |   | `-ImplicitCastExpr 0x1201426b0 <col:4> '<dependent type>' contains-errors <LValueToRValue>     | |   |   `-RecoveryExpr 0x120142690 <col:4> '<dependent type>' contains-errors lvalue     | |   `-IntegerLiteral 0x1201426e0 <col:10> 'unsigned int' 0     | `-IfStmt 0x1201429e0 <line:22:9, line:27:2> has_else     |   |-BinaryOperator 0x1201427e0 <line:22:13, col:20> 'int' contains-errors '=='     |   | |-RecoveryExpr 0x1201427c0 <col:13> '<dependent type>' contains-errors lvalue     |   | `-IntegerLiteral 0x120142780 <col:20> 'int' 0     |   |-CompoundStmt 0x120142818 <col:23, line:24:2>     |   | `-GotoStmt 0x120142800 <line:23:3, col:8> 'eof' 0x120141fe8     |   `-IfStmt 0x1201429c0 <line:24:9, line:27:2>     |     |-RecoveryExpr 0x1201428a8 <line:24:13, col:20> '_Bool' contains-errors     |     | `-ParenExpr 0x120142888 <col:13, col:20> '<overloaded function type>' lvalue     |     |   `-UnresolvedLookupExpr 0x120142848 <col:14> '<overloaded function type>' lvalue (no ADL) = 'ssize_t' empty     |     `-CompoundStmt 0x1201429b0 <col:50, line:27:2>     |-BinaryOperator 0x120142af0 <line:28:2, col:12> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x120142a78 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x120142a60 <col:3> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x120142a40 <col:3> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x120142ac8 <col:9, col:12> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x120142a90 <col:9> 'struct warc_s *' contains-errors lvalue Var 0x120141c08 'w' 'struct warc_s *'     `-BinaryOperator 0x120142c00 <line:30:2, col:9> 'const void *' '='       |-UnaryOperator 0x120142b98 <col:2, col:3> 'const void *' lvalue prefix '*' cannot overflow       | `-ImplicitCastExpr 0x120142b80 <col:3> 'const void **' <LValueToRValue>       |   `-DeclRefExpr 0x120142b60 <col:3> 'const void **' lvalue ParmVar 0x120128728 'buf' 'const void **'       `-ImplicitCastExpr 0x120142be8 <col:9> 'const void *' <BitCast>         `-ImplicitCastExpr 0x120142bd0 <col:9> 'const char *' <LValueToRValue>           `-DeclRefExpr 0x120142bb0 <col:9> 'const char *' lvalue Var 0x120141d60 'rab' 'const char *' ","19138":"`-FunctionDecl 0x12480de58  line:1:31 invalid process_nested_data 'int (int, int)' static   |-ParmVarDecl 0x12480dd70 <col:51> col:51 UNSERIALIZE_PARAMETER 'int'   |-ParmVarDecl 0x12480dcf0 <col:74> col:74 HashTable 'int'   `-CompoundStmt 0x124125e00 <line:2:1, line:78:1>     |-WhileStmt 0x124125d98 <line:3:2, line:75:2>     | |-BinaryOperator 0x12480dfb8 <line:3:9, col:22> 'int' contains-errors '>'     | | |-UnaryOperator 0x12480dfa0 <col:9, col:17> '<dependent type>' contains-errors postfix '--' cannot overflow     | | | `-RecoveryExpr 0x12480df80 <col:9> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x12480df40 <col:22> 'int' 0     | `-CompoundStmt 0x124125d58 <col:25, line:75:2>     |   |-CallExpr 0x12480e1e0 <line:7:3, col:18> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12480e130 <col:3> 'int ()' Function 0x12480e078 'ZVAL_UNDEF' 'int ()'     |   | `-UnaryOperator 0x12480e1c8 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x12480e1a8 <col:15> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x124124120 <line:9:3, line:12:3>     |   | |-UnaryOperator 0x124123f00 <line:9:7, col:58> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | | `-CallExpr 0x124123eb8 <col:8, col:58> '<dependent type>' contains-errors     |   | |   |-DeclRefExpr 0x12480e2e8 <col:8> 'int ()' Function 0x12480e230 'php_var_unserialize_ex' 'int ()'     |   | |   |-UnaryOperator 0x124123e20 <col:31, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | |   | `-RecoveryExpr 0x124123e00 <col:32> '<dependent type>' contains-errors lvalue     |   | |   |-RecoveryExpr 0x124123e38 <col:37> '<dependent type>' contains-errors lvalue     |   | |   |-RecoveryExpr 0x124123e58 <col:40> '<dependent type>' contains-errors lvalue     |   | |   |-RecoveryExpr 0x124123e78 <col:45> '<dependent type>' contains-errors lvalue     |   | |   `-RecoveryExpr 0x124123e98 <col:51> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x124124100 <col:61, line:12:3>     |   |   |-CallExpr 0x1241240a8 <line:10:4, col:18> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x124123ff8 <col:4> 'int ()' Function 0x124123f40 'zval_dtor' 'int ()'     |   |   | `-UnaryOperator 0x124124090 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   |   `-RecoveryExpr 0x124124070 <col:15> '<dependent type>' contains-errors lvalue     |   |   `-ReturnStmt 0x1241240f0 <line:11:4, col:11>     |   |     `-IntegerLiteral 0x1241240d0 <col:11> 'int' 0     |   |-CallExpr 0x124124208 <line:15:3, col:16> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x124124158 <col:3> 'int ()' Function 0x12480e078 'ZVAL_UNDEF' 'int ()'     |   | `-UnaryOperator 0x1241241f0 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x1241241d0 <col:15> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x124125b68 <line:17:3, line:63:3> has_else     |   | |-RecoveryExpr 0x124124230 <line:17:7, col:8> '_Bool' contains-errors     |   | |-CompoundStmt 0x1241252b0 <col:18, line:43:3>     |   | | `-IfStmt 0x124125280 <line:18:4, line:42:4> has_else     |   | |   |-RecoveryExpr 0x124124350 <line:18:8, col:23> '_Bool' contains-errors     |   | |   |-CompoundStmt 0x124124a50 <col:32, line:28:4>     |   | |   | `-LabelStmt 0x124124a30 <line:20:1, line:27:5> 'numeric_key'     |   | |   |   `-IfStmt 0x1241249b0 <line:21:5, line:27:5> has_else     |   | |   |     |-RecoveryExpr 0x124124670 <line:21:9, col:70> '_Bool' contains-errors     |   | |   |     |-CompoundStmt 0x124124890 <col:73, line:25:5>     |   | |   |     `-CompoundStmt 0x1241249a0 <col:12, line:27:5>     |   | |   `-IfStmt 0x124125250 <line:28:11, line:42:4> has_else     |   | |     |-RecoveryExpr 0x124124a88 <line:28:15, col:30> '_Bool' contains-errors     |   | |     |-CompoundStmt 0x1241251c8 <col:41, line:39:4>     |   | |     | |-IfStmt 0x124124d18 <line:29:5, line:31:5>     |   | |     | | |-RecoveryExpr 0x124124cc8 <line:29:9, col:56> '_Bool' contains-errors     |   | |     | | `-CompoundStmt 0x124124d00 <col:59, line:31:5>     |   | |     | |   `-GotoStmt 0x124124ce8 <line:30:6, col:11> 'numeric_key' 0x1241249e0     |   | |     | `-IfStmt 0x124125198 <line:32:5, line:38:5> has_else     |   | |     |   |-RecoveryExpr 0x124124ef8 <line:32:9, col:71> '_Bool' contains-errors     |   | |     |   |-CompoundStmt 0x124125058 <col:74, line:36:5>     |   | |     |   `-CompoundStmt 0x124125188 <col:12, line:38:5>     |   | |     `-CompoundStmt 0x124125238 <line:39:11, line:42:4>     |   | |       `-ReturnStmt 0x124125228 <line:41:5, col:12>     |   | |         `-IntegerLiteral 0x124125208 <col:12> 'int' 0     |   | `-CompoundStmt 0x124125b50 <line:43:10, line:63:3>     |   |   `-IfStmt 0x124125b20 <line:44:4, line:62:4> has_else     |   |     |-RecoveryExpr 0x1241253e8 <line:44:8, col:41> '_Bool' contains-errors     |   |     |-CompoundStmt 0x124125900 <col:44, line:55:4>     |   |     | `-LabelStmt 0x1241258e0 <line:45:1, line:54:5> 'string_key'     |   |     |   `-IfStmt 0x124125860 <line:46:5, line:54:5> has_else     |   |     |     |-RecoveryExpr 0x124125448 <line:46:9, col:56> '_Bool' contains-errors     |   |     |     |-CompoundStmt 0x1241257f8 <col:62, line:52:5>     |   |     |     | `-IfStmt 0x124125698 <line:47:6, line:49:6>     |   |     |     |   |-RecoveryExpr 0x124125568 <line:47:10, col:32> '_Bool' contains-errors     |   |     |     |   `-CompoundStmt 0x124125688 <col:45, line:49:6>     |   |     |     `-CompoundStmt 0x124125850 <line:52:12, line:54:5>     |   |     `-IfStmt 0x124125af0 <line:55:11, line:62:4> has_else     |   |       |-RecoveryExpr 0x124125938 <line:55:15, col:30> '_Bool' contains-errors     |   |       |-CompoundStmt 0x124125a70 <col:39, line:59:4>     |   |       | `-GotoStmt 0x124125a58 <line:58:5, col:10> 'string_key' 0x124125890     |   |       `-CompoundStmt 0x124125ad8 <line:59:11, line:62:4>     |   |         `-ReturnStmt 0x124125ac8 <line:61:5, col:12>     |   |           `-IntegerLiteral 0x124125aa8 <col:12> 'int' 0     |   |-IfStmt 0x124125c40 <line:67:3, line:69:3>     |   | |-RecoveryExpr 0x124125bd8 <line:67:7, col:62> '_Bool' contains-errors     |   | `-CompoundStmt 0x124125c28 <col:65, line:69:3>     |   |   `-ReturnStmt 0x124125c18 <line:68:4, col:11>     |   |     `-IntegerLiteral 0x124125bf8 <col:11> 'int' 0     |   `-IfStmt 0x124125d38 <line:71:3, line:74:3>     |     |-RecoveryExpr 0x124125cd0 <line:71:7, col:48> '_Bool' contains-errors     |     `-CompoundStmt 0x124125d20 <col:53, line:74:3>     |       `-ReturnStmt 0x124125d10 <line:73:4, col:11>     |         `-IntegerLiteral 0x124125cf0 <col:11> 'int' 0     `-ReturnStmt 0x124125dd8 <line:77:2, col:9>       `-IntegerLiteral 0x124125db8 <col:9> 'int' 1 "},"target":{"19657":0,"19411":0,"19389":1,"19295":0,"20048":1,"19447":1,"19536":1,"19511":1,"19776":0,"19922":0,"19323":1,"19521":1,"19242":1,"19409":0,"19304":1,"19223":1,"20038":0,"19601":1,"19581":1,"19609":1,"19897":0,"19414":0,"19294":0,"19116":1,"19887":1,"19925":0,"19658":0,"19338":0,"19723":0,"19235":0,"19435":0,"19250":1,"19515":1,"20073":0,"19600":1,"19363":1,"19115":1,"20127":0,"19955":1,"20206":0,"19910":0,"19358":0,"19222":0,"20169":0,"19946":1,"19573":1,"19679":0,"19878":1,"19190":1,"19951":0,"19362":0,"19431":0,"19434":1,"19350":1,"19472":1,"19373":0,"19687":1,"19300":0,"19948":1,"19616":0,"19422":0,"19445":0,"19619":1,"20031":0,"20064":1,"19988":1,"19646":1,"19775":0,"19691":1,"19451":1,"19744":1,"19819":1,"19145":1,"19791":0,"19837":0,"19180":1,"19391":1,"19523":0,"19071":1,"19597":1,"19891":0,"19697":0,"19694":0,"20055":0,"19877":1,"20156":0,"19313":0,"19369":0,"19883":1,"19682":1,"19937":0,"19564":0,"19715":1,"19620":1,"20054":0,"19778":1,"19392":1,"19281":0,"20140":1,"19284":0,"20062":1,"19276":1,"19464":1,"19452":1,"19590":1,"19750":1,"19387":0,"19847":1,"19748":1,"20068":1,"19639":1,"20093":0,"19689":0,"20000":1,"19712":1,"19669":1,"19211":0,"19623":1,"19628":0,"19931":1,"19923":1,"19795":0,"19169":1,"19725":0,"19311":1,"19835":0,"19941":0,"19627":1,"19553":0,"19500":0,"20167":0,"19516":1,"20045":1,"19913":1,"19993":0,"19073":1,"20208":0,"19286":1,"20154":0,"19943":1,"19368":1,"20106":1,"19404":1,"19198":1,"20183":0,"20067":1,"19492":0,"19755":1,"20024":0,"19171":1,"20196":0,"19706":1,"19546":0,"20012":1,"19379":1,"19736":0,"20097":0,"19676":0,"19517":1,"19900":0,"19906":0,"19316":0,"19857":1,"19119":1,"19805":0,"19385":1,"20117":0,"19290":1,"19314":1,"20141":0,"19821":1,"19825":1,"19621":0,"19347":0,"19224":0,"19872":1,"19718":0,"19111":1,"19068":1,"19519":0,"19212":0,"19768":1,"19436":0,"19467":0,"19760":0,"19561":0,"19984":1,"19577":0,"19607":1,"19302":0,"19882":0,"19353":1,"19219":0,"19696":1,"20047":0,"19555":1,"19393":0,"20162":1,"19149":1,"19589":1,"19652":0,"19554":1,"19986":1,"19545":0,"19475":1,"19336":1,"20131":0,"19427":0,"19507":0,"19466":0,"19162":1,"20113":1,"19371":1,"19417":0,"19267":0,"19987":1,"19822":1,"19603":0,"19093":1,"19909":0,"19185":1,"19402":1,"19354":0,"19740":0,"19575":0,"20020":1,"19069":1,"19279":1,"20116":0,"19201":1,"19448":0,"19438":0,"20074":1,"19425":0,"20083":1,"19938":0,"19531":0,"19441":1,"19965":1,"19890":0,"19351":0,"19666":0,"19722":0,"19303":1,"20192":0,"19753":0,"20030":0,"19665":1,"20168":0,"19520":1,"19486":0,"19424":1,"19310":1,"19843":0,"19663":0,"20009":1,"20195":0,"20138":0,"19125":1,"19287":0,"19443":0,"19327":1,"20111":0,"19141":1,"19720":1,"19711":1,"19272":0,"19636":1,"19932":0,"19342":1,"20053":0,"19762":0,"19569":0,"19252":0,"19505":1,"19174":1,"20032":0,"19614":1,"19936":0,"19832":1,"19249":0,"19273":0,"19853":1,"20026":1,"19721":1,"19719":1,"19898":1,"19868":0,"20172":0,"19289":0,"19506":0,"19239":1,"19394":1,"19504":1,"20010":1,"19147":1,"20109":0,"19637":1,"19275":1,"19210":1,"19156":1,"19107":1,"19559":1,"19413":0,"19912":0,"19860":0,"19234":1,"20040":1,"19558":1,"19799":1,"19532":0,"20092":0,"19469":0,"19328":0,"19241":0,"19256":1,"19591":0,"20057":0,"19442":1,"20125":0,"19271":0,"19654":0,"19344":1,"19602":1,"19285":1,"19904":1,"19551":1,"20001":1,"19981":0,"19540":0,"19537":1,"20033":1,"19412":0,"19229":0,"19237":0,"19707":0,"19306":0,"19889":1,"19524":0,"20130":1,"19265":1,"19622":1,"19728":1,"19429":0,"19449":1,"19952":0,"20069":0,"19783":0,"20160":0,"20147":1,"19985":0,"19830":1,"20121":1,"19893":1,"19732":1,"20043":0,"19880":0,"19550":0,"19266":1,"19928":1,"19661":1,"19841":0,"19604":0,"19398":0,"19220":0,"19278":0,"20004":1,"20128":1,"20013":1,"19113":1,"20145":0,"19996":1,"20104":0,"19764":1,"19902":0,"20210":0,"19727":1,"19807":0,"19117":1,"19430":0,"19352":0,"20148":1,"19268":0,"19852":0,"19842":0,"20049":1,"19257":1,"20166":1,"20052":0,"19816":1,"19933":1,"19432":0,"19227":1,"19836":1,"19850":1,"19780":0,"19742":1,"19512":1,"19415":1,"19296":1,"19729":1,"19886":0,"19681":0,"19896":1,"20201":0,"19236":0,"20152":0,"19566":1,"19408":1,"20199":0,"19588":0,"20080":0,"20134":1,"19800":1,"19815":0,"19885":0,"19549":0,"19957":0,"19617":1,"20119":1,"20143":0,"19094":1,"19230":1,"19456":1,"19380":0,"19221":0,"19959":1,"19677":1,"19625":1,"19574":0,"20207":0,"19919":0,"19662":0,"19528":1,"20006":0,"19788":1,"19490":1,"19283":0,"19851":1,"20081":1,"19374":0,"19459":0,"19808":0,"19773":1,"19792":0,"19709":1,"19481":1,"19974":0,"19334":1,"19833":1,"19675":0,"19255":0,"20021":0,"19582":0,"20122":0,"19695":0,"19189":1,"19730":1,"19092":1,"19642":0,"19875":0,"19766":0,"19848":0,"19470":1,"20066":0,"20158":0,"19488":1,"20124":1,"19596":1,"19784":0,"19444":0,"19299":1,"20060":1,"19977":1,"20118":0,"19179":1,"20184":0,"19858":0,"19274":0,"19489":0,"19136":1,"20084":1,"20159":1,"20170":1,"19770":0,"19598":0,"19522":1,"19397":1,"19501":0,"19726":0,"19947":0,"19479":0,"20100":1,"19859":0,"19526":0,"19562":0,"19739":1,"19291":0,"19437":1,"19349":1,"19647":0,"19502":0,"20129":1,"20161":1,"20139":0,"19797":0,"19934":0,"19216":1,"19915":0,"19418":1,"19983":0,"19731":1,"19956":0,"19982":0,"19471":1,"19710":1,"19680":0,"20164":1,"19384":0,"20050":0,"20178":0,"19446":0,"20042":0,"19396":0,"19260":0,"19700":1,"19759":0,"19263":0,"19177":1,"19197":1,"19634":0,"19685":1,"19421":1,"19262":1,"19976":0,"20014":1,"19787":0,"19357":1,"19979":1,"19905":1,"19376":1,"19870":1,"19758":0,"19599":1,"19796":0,"19485":1,"19810":1,"19395":0,"19684":0,"20087":0,"20063":0,"19331":1,"19786":0,"20051":0,"19503":0,"19583":0,"20027":1,"19484":1,"19557":0,"19305":1,"19346":0,"19359":1,"20142":1,"19364":1,"20003":1,"20110":0,"19462":1,"19090":1,"19547":0,"19803":0,"19440":0,"19225":0,"19487":0,"19641":1,"19743":0,"19782":0,"19874":1,"19232":1,"19895":0,"19453":1,"19419":0,"19439":0,"20150":1,"19724":0,"19146":1,"19200":1,"19631":0,"19849":0,"19326":0,"20034":1,"20155":0,"19781":1,"19871":1,"19879":0,"19595":0,"19324":0,"20157":1,"19839":1,"19315":0,"19297":0,"19785":0,"20190":0,"19953":0,"19406":0,"19244":1,"19586":0,"19892":1,"20123":1,"19208":0,"19772":1,"20056":1,"19390":1,"19971":1,"20016":1,"19474":1,"19945":1,"19527":1,"20120":0,"19544":1,"19477":1,"19645":1,"19468":1,"19914":0,"19539":0,"19067":1,"19321":0,"20108":0,"20177":0,"19375":0,"19333":0,"20018":1,"19655":0,"19194":1,"19894":0,"19085":1,"19966":1,"19086":1,"19491":0,"19348":1,"19525":1,"19318":1,"19240":1,"19949":0,"19214":0,"19496":1,"19610":1,"19465":0,"20112":0,"19261":1,"19907":1,"20061":1,"19920":0,"19361":1,"19405":1,"19632":1,"20098":0,"19513":1,"19365":1,"19529":1,"19765":0,"19624":1,"19088":1,"20133":1,"19970":0,"19703":0,"19463":1,"19940":0,"19746":0,"19964":0,"19903":1,"19163":1,"19509":0,"19248":0,"19378":0,"19160":1,"19571":1,"19865":0,"19091":1,"19399":1,"19293":1,"20029":0,"19834":1,"19134":1,"19747":1,"19493":1,"19428":0,"19990":1,"19204":1,"19752":1,"19708":1,"19307":0,"19231":1,"19426":1,"19884":1,"19908":1,"20144":0,"19455":1,"20046":0,"20035":1,"19926":0,"19767":0,"19320":0,"19497":1,"19939":1,"19812":1,"20085":0,"19483":1,"19381":0,"19777":0,"19584":0,"20036":0,"20126":1,"19801":0,"19246":0,"19862":0,"19999":0,"19382":1,"19476":1,"20213":0,"19659":0,"19615":1,"19998":0,"19771":1,"19701":0,"19704":0,"19741":0,"20163":1,"20088":0,"19186":1,"19683":1,"19899":1,"19644":1,"19802":0,"19403":0,"19578":1,"19233":0,"20023":0,"19317":0,"19779":0,"20090":1,"19343":1,"19450":0,"19245":0,"19510":1,"19251":1,"19593":1,"20187":0,"19572":1,"19734":0,"19538":0,"20146":1,"19660":1,"19929":0,"19824":0,"19961":1,"19372":1,"19083":1,"19745":0,"19881":0,"19954":1,"19104":1,"20044":0,"19818":0,"19804":0,"19215":0,"19688":0,"19838":1,"19714":1,"19668":1,"19826":0,"19992":0,"19258":0,"19576":0,"19635":0,"19168":1,"19105":1,"20022":1,"19330":1,"19322":0,"19568":0,"19480":1,"20002":1,"19508":0,"19749":0,"19686":1,"19416":0,"19756":0,"20037":0,"20114":0,"19345":1,"19118":1,"19716":0,"19968":0,"20096":0,"19935":1,"19325":1,"19823":0,"19087":1,"20028":0,"19713":0,"19638":0,"19312":0,"19963":0,"19969":1,"19962":0,"19809":1,"19827":1,"19335":0,"19377":1,"20135":0,"19298":0,"19079":1,"19585":1,"20136":0,"20091":0,"19774":1,"20115":0,"19991":1,"19656":1,"19238":1,"20086":0,"19606":0,"20174":0,"19678":1,"20105":1,"19856":0,"19649":1,"19829":0,"19301":1,"19535":0,"19530":0,"19457":1,"19612":0,"19207":0,"19226":0,"19264":0,"19828":1,"19794":0,"20039":1,"19840":0,"19199":1,"19869":1,"20153":0,"19901":0,"19958":0,"19918":1,"19400":0,"20099":1,"19337":1,"20193":0,"19690":1,"19288":1,"19975":1,"19580":0,"19820":0,"19270":0,"19973":0,"19563":1,"19370":0,"19763":0,"20094":0,"19650":1,"19154":1,"19790":1,"19942":1,"19861":0,"19876":1,"20058":0,"19867":0,"19460":0,"19994":0,"19089":1,"20071":1,"19410":0,"19960":1,"19863":0,"20078":0,"19461":0,"19309":0,"20082":0,"20065":0,"19608":1,"19458":0,"19386":0,"19355":0,"19692":1,"20151":1,"20017":0,"19129":1,"19705":1,"19366":0,"19433":1,"19218":1,"19738":0,"20015":0,"19629":0,"19924":0,"19388":1,"19407":0,"20132":0,"20165":1,"19259":0,"19717":0,"19995":0,"19793":1,"19844":0,"19209":0,"19277":0,"19518":1,"19182":1,"19864":0,"19989":1,"19594":1,"19579":1,"19673":1,"19473":1,"19769":1,"19560":0,"20041":0,"19814":1,"19813":1,"19164":1,"19341":0,"19360":1,"20070":0,"19626":1,"19319":0,"19308":1,"19817":0,"19175":1,"20019":1,"19630":0,"19548":0,"20182":0,"19754":0,"19671":0,"19144":1,"19196":1,"19888":0,"19640":1,"19172":1,"19213":1,"19155":1,"19670":0,"20101":0,"19757":1,"20059":0,"19648":1,"20176":0,"19873":1,"19651":1,"19570":0,"19098":1,"19845":1,"20198":0,"19339":1,"19789":1,"19916":1,"19269":1,"19846":0,"19667":1,"19076":1,"19495":0,"19702":1,"20137":0,"19698":0,"19401":1,"19340":0,"19193":1,"20075":0,"20186":0,"20209":0,"19329":1,"19498":0,"20072":1,"19556":0,"20212":0,"19253":1,"19761":1,"19997":1,"19855":0,"19542":1,"19980":1,"19247":1,"19944":1,"19567":1,"19282":0,"19420":0,"19618":0,"20107":1,"19605":1,"20005":1,"19217":1,"19674":0,"19751":1,"19533":1,"19811":1,"19854":0,"20089":0,"19499":1,"20079":1,"19514":0,"19866":0,"19543":1,"19611":0,"19643":1,"19243":0,"19423":1,"19592":1,"19541":0,"19077":1,"19534":1,"19552":1,"20008":0,"19978":0,"19613":0,"20095":1,"19972":0,"19967":0,"19672":1,"20025":0,"19494":0,"20077":1,"20149":0,"20007":0,"19664":1,"19831":1,"19206":1,"19587":1,"19693":0,"19653":0,"20102":0,"19798":0,"19367":0,"19332":1,"19921":0,"19565":1,"19478":0,"19737":0,"20076":0,"19950":0,"19699":1,"19917":1,"19280":0,"19482":1,"19356":0,"19633":1,"19806":0,"19254":0,"19454":1,"20103":1,"19735":0,"19911":0,"19137":1,"19927":1,"19228":1,"20011":1,"19383":0,"19292":0,"19733":1,"19930":1,"19138":1}}