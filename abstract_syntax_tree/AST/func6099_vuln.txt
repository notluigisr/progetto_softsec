TranslationUnitDecl 0x140055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1400564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x140055bd0 '__int128'
|-TypedefDecl 0x140056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x140055bf0 'unsigned __int128'
|-TypedefDecl 0x140126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x140126000 'struct __NSConstantString_tag'
|   `-Record 0x140056580 '__NSConstantString_tag'
|-TypedefDecl 0x140126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x140055d90 '__SVInt8_t'
|-TypedefDecl 0x140126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x140055db0 '__SVInt16_t'
|-TypedefDecl 0x140126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x140055dd0 '__SVInt32_t'
|-TypedefDecl 0x1401263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x140055df0 '__SVInt64_t'
|-TypedefDecl 0x140126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x140055e10 '__SVUint8_t'
|-TypedefDecl 0x1401264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x140055e30 '__SVUint16_t'
|-TypedefDecl 0x140126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x140055e50 '__SVUint32_t'
|-TypedefDecl 0x140126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x140055e70 '__SVUint64_t'
|-TypedefDecl 0x1401265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x140055e90 '__SVFloat16_t'
|-TypedefDecl 0x140126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x140055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1401266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x140055ed0 '__SVFloat64_t'
|-TypedefDecl 0x140126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x140055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x140126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x140055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1401267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x140055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x140126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x140055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1401268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x140055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x140126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x140055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x140126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x140055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1401269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x140055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x140126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x140055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x140126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x140056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x140126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x140056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x140126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x140056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x140126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x140056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x140126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x140056090 '__clang_svint8x3_t'
|-TypedefDecl 0x140126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1400560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x140126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1400560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x140126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1400560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x140126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x140056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x140126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x140056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x140126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x140056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x140126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x140056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x140126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x140056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x140127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1400561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x140127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1400561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1401278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1400561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x140127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x140056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1401279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x140056230 '__clang_svint16x4_t'
|-TypedefDecl 0x140127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x140056250 '__clang_svint32x4_t'
|-TypedefDecl 0x140127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x140056270 '__clang_svint64x4_t'
|-TypedefDecl 0x140127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x140056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x140127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1400562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x140127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1400562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x140127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1400562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x140127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x140056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x140127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x140056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x140127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x140056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x140127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x140056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x140127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x140056390 '__SVBool_t'
|-TypedefDecl 0x140127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1400563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x140127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1400563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x140127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1400563f0 '__SVCount_t'
|-TypedefDecl 0x140127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x140127fb0 'char *'
|   `-BuiltinType 0x1400556b0 'char'
|-TypedefDecl 0x140128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x140127fb0 'char *'
|   `-BuiltinType 0x1400556b0 'char'
|-FunctionDecl 0x140128448 <dataset_diviso_filec/func6099_vuln.c:1:1, line:16:1> line:1:1 _asn1_get_time_der 'int (const unsigned char *, int, int *, char *, int)'
| |-ParmVarDecl 0x140128108 <col:21, col:42> col:42 used der 'const unsigned char *'
| |-ParmVarDecl 0x140128188 <col:47, col:51> col:51 used der_len 'int'
| |-ParmVarDecl 0x140128238 <col:60, col:65> col:65 used ret_len 'int *'
| |-ParmVarDecl 0x1401282b8 <line:2:7, col:13> col:13 used str 'char *'
| |-ParmVarDecl 0x140128338 <col:18, col:22> col:22 used str_size 'int'
| `-CompoundStmt 0x140143068 <line:3:1, line:16:1>
|   |-DeclStmt 0x140128678 <line:4:3, col:23>
|   | |-VarDecl 0x140128578 <col:3, col:7> col:7 used len_len 'int'
|   | `-VarDecl 0x1401285f8 <col:3, col:16> col:16 used str_len 'int'
|   |-IfStmt 0x140140ac8 <line:6:3, line:7:12>
|   | |-BinaryOperator 0x140140a60 <line:6:7, col:30> 'int' contains-errors '||'
|   | | |-BinaryOperator 0x140140a00 <col:7, col:18> 'int' '<='
|   | | | |-ImplicitCastExpr 0x1401287d0 <col:7> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x140128690 <col:7> 'int' lvalue ParmVar 0x140128188 'der_len' 'int'
|   | | | `-IntegerLiteral 0x1401286b0 <col:18> 'int' 0
|   | | `-BinaryOperator 0x140140a40 <col:23, col:30> 'int' contains-errors '=='
|   | |   |-DeclRefExpr 0x140128708 <col:23> 'char *' lvalue ParmVar 0x1401282b8 'str' 'char *'
|   | |   `-RecoveryExpr 0x140140a20 <col:30> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x140140ab8 <line:7:5, col:12>
|   |   `-RecoveryExpr 0x140140a98 <col:12> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x140140d70 <line:8:3, col:56> 'int' '='
|   | |-DeclRefExpr 0x140140ae8 <col:3> 'int' lvalue Var 0x1401285f8 'str_len' 'int'
|   | `-CallExpr 0x140140d08 <col:13, col:56> 'int'
|   |   |-ImplicitCastExpr 0x140140cf0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x140140c20 <col:13> 'int ()' Function 0x140140b68 'asn1_get_length_der' 'int ()'
|   |   |-ImplicitCastExpr 0x140140d40 <col:34> 'const unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x140140c40 <col:34> 'const unsigned char *' lvalue ParmVar 0x140128108 'der' 'const unsigned char *'
|   |   |-ImplicitCastExpr 0x140140d58 <col:39> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x140140c60 <col:39> 'int' lvalue ParmVar 0x140128188 'der_len' 'int'
|   |   `-UnaryOperator 0x140140ca0 <col:48, col:49> 'int *' prefix '&' cannot overflow
|   |     `-DeclRefExpr 0x140140c80 <col:49> 'int' lvalue Var 0x140128578 'len_len' 'int'
|   |-IfStmt 0x140140f00 <line:9:3, line:10:12>
|   | |-BinaryOperator 0x140140e98 <line:9:7, col:33> 'int' '||'
|   | | |-BinaryOperator 0x140140de8 <col:7, col:17> 'int' '<'
|   | | | |-ImplicitCastExpr 0x140140dd0 <col:7> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x140140d90 <col:7> 'int' lvalue Var 0x1401285f8 'str_len' 'int'
|   | | | `-IntegerLiteral 0x140140db0 <col:17> 'int' 0
|   | | `-BinaryOperator 0x140140e78 <col:22, col:33> 'int' '<'
|   | |   |-ImplicitCastExpr 0x140140e48 <col:22> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x140140e08 <col:22> 'int' lvalue ParmVar 0x140128338 'str_size' 'int'
|   | |   `-ImplicitCastExpr 0x140140e60 <col:33> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x140140e28 <col:33> 'int' lvalue Var 0x1401285f8 'str_len' 'int'
|   | `-ReturnStmt 0x140140ef0 <line:10:5, col:12>
|   |   `-RecoveryExpr 0x140140ed0 <col:12> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x140141778 <line:11:3, col:38> 'void *'
|   | |-ImplicitCastExpr 0x140141760 <col:3> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x140141610 <col:3> 'void *(void *, const void *, unsigned long)' Function 0x1401413c0 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | |-ImplicitCastExpr 0x1401417c8 <col:11> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x1401417b0 <col:11> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x140141630 <col:11> 'char *' lvalue ParmVar 0x1401282b8 'str' 'char *'
|   | |-ImplicitCastExpr 0x1401417e0 <col:16, col:22> 'const void *' <BitCast>
|   | | `-BinaryOperator 0x1401416c0 <col:16, col:22> 'const unsigned char *' '+'
|   | |   |-ImplicitCastExpr 0x140141690 <col:16> 'const unsigned char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x140141650 <col:16> 'const unsigned char *' lvalue ParmVar 0x140128108 'der' 'const unsigned char *'
|   | |   `-ImplicitCastExpr 0x1401416a8 <col:22> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x140141670 <col:22> 'int' lvalue Var 0x140128578 'len_len' 'int'
|   | `-ImplicitCastExpr 0x140141810 <col:31> 'unsigned long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x1401417f8 <col:31> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1401416e0 <col:31> 'int' lvalue Var 0x1401285f8 'str_len' 'int'
|   |-BinaryOperator 0x1401418f0 <line:12:3, col:18> 'char' '='
|   | |-ArraySubscriptExpr 0x140141898 <col:3, col:14> 'char' lvalue
|   | | |-ImplicitCastExpr 0x140141868 <col:3> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x140141828 <col:3> 'char *' lvalue ParmVar 0x1401282b8 'str' 'char *'
|   | | `-ImplicitCastExpr 0x140141880 <col:7> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x140141848 <col:7> 'int' lvalue Var 0x1401285f8 'str_len' 'int'
|   | `-ImplicitCastExpr 0x1401418d8 <col:18> 'char' <IntegralCast>
|   |   `-IntegerLiteral 0x1401418b8 <col:18> 'int' 0
|   |-BinaryOperator 0x140143000 <line:13:3, col:24> 'int' '='
|   | |-UnaryOperator 0x140141948 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x140141930 <col:4> 'int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x140141910 <col:4> 'int *' lvalue ParmVar 0x140128238 'ret_len' 'int *'
|   | `-BinaryOperator 0x1401419d0 <col:14, col:24> 'int' '+'
|   |   |-ImplicitCastExpr 0x1401419a0 <col:14> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x140141960 <col:14> 'int' lvalue Var 0x1401285f8 'str_len' 'int'
|   |   `-ImplicitCastExpr 0x1401419b8 <col:24> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x140141980 <col:24> 'int' lvalue Var 0x140128578 'len_len' 'int'
|   `-ReturnStmt 0x140143058 <line:15:3, col:10>
|     `-RecoveryExpr 0x140143038 <col:10> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x1401413c0 <line:11:3> col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x1401414c0 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x140141528 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x140141590 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x140141468 <<invalid sloc>> Implicit 882
