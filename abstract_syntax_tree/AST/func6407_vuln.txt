TranslationUnitDecl 0x13d055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13d0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13d055bd0 '__int128'
|-TypedefDecl 0x13d056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13d055bf0 'unsigned __int128'
|-TypedefDecl 0x13d126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13d126000 'struct __NSConstantString_tag'
|   `-Record 0x13d056580 '__NSConstantString_tag'
|-TypedefDecl 0x13d126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13d055d90 '__SVInt8_t'
|-TypedefDecl 0x13d126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13d055db0 '__SVInt16_t'
|-TypedefDecl 0x13d126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13d055dd0 '__SVInt32_t'
|-TypedefDecl 0x13d1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13d055df0 '__SVInt64_t'
|-TypedefDecl 0x13d126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13d055e10 '__SVUint8_t'
|-TypedefDecl 0x13d1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13d055e30 '__SVUint16_t'
|-TypedefDecl 0x13d126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13d055e50 '__SVUint32_t'
|-TypedefDecl 0x13d126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13d055e70 '__SVUint64_t'
|-TypedefDecl 0x13d1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13d055e90 '__SVFloat16_t'
|-TypedefDecl 0x13d126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13d055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13d1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13d055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13d126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13d055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13d126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13d055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13d1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13d055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13d126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13d055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13d1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13d055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13d126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13d055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13d126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13d055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13d1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13d055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13d126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13d055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13d126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13d056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13d126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13d056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13d126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13d056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13d126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13d056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13d126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13d056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13d126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13d0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13d126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13d0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13d126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13d0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13d126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13d056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13d126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13d056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13d126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13d056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13d126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13d056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13d126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13d056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13d127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13d0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13d127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13d0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13d1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13d0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13d127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13d056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13d1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13d056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13d127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13d056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13d127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13d056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13d127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13d056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13d127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13d0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13d127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13d0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13d127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13d0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13d127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13d056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13d127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13d056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13d127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13d056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13d127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13d056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13d127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13d056390 '__SVBool_t'
|-TypedefDecl 0x13d127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13d0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13d127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13d0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13d127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13d0563f0 '__SVCount_t'
|-TypedefDecl 0x13d127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13d127fb0 'char *'
|   `-BuiltinType 0x13d0556b0 'char'
|-TypedefDecl 0x13d128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13d127fb0 'char *'
|   `-BuiltinType 0x13d0556b0 'char'
|-FunctionDecl 0x13d128238 <dataset_diviso_filec/func6407_vuln.c:1:1, line:40:1> line:1:1 pg_open_tzfile 'int (const char *, char *)'
| |-ParmVarDecl 0x13d1280d8 <col:16, col:28> col:28 used name 'const char *'
| |-ParmVarDecl 0x13d128158 <col:34, col:40> col:40 used canonname 'char *'
| `-CompoundStmt 0x13d80ce90 <line:2:1, line:40:1>
|   |-DeclStmt 0x13d1283b8 <line:3:2, col:19>
|   | `-VarDecl 0x13d128350 <col:2, col:14> col:14 used fname 'const char *'
|   |-DeclStmt 0x13d128478 <line:4:2, col:27>
|   | `-VarDecl 0x13d128410 <col:2, col:8> col:8 referenced invalid fullname 'char'
|   |-DeclStmt 0x13d128510 <line:5:2, col:19>
|   | `-VarDecl 0x13d1284a8 <col:2, col:8> col:8 used fullnamelen 'int'
|   |-DeclStmt 0x13d1285a8 <line:6:2, col:19>
|   | `-VarDecl 0x13d128540 <col:2, col:8> col:8 used orignamelen 'int'
|   |-CallExpr 0x13d808c40 <line:9:2, col:29> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x13d808a50 <col:2> 'char *(char *, const char *)' Function 0x13d808870 'strcpy' 'char *(char *, const char *)'
|   | |-RecoveryExpr 0x13d808a70 <col:9> '<dependent type>' contains-errors lvalue
|   | `-CallExpr 0x13d808c08 <col:19, col:28> 'int'
|   |   `-ImplicitCastExpr 0x13d808bf0 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x13d808ba0 <col:19> 'int ()' Function 0x13d808ae8 'pg_TZDIR' 'int ()'
|   |-BinaryOperator 0x13d808ef8 <line:10:2, col:45> 'int' contains-errors '='
|   | |-DeclRefExpr 0x13d808c70 <col:2> 'int' lvalue Var 0x13d128540 'orignamelen' 'int'
|   | `-BinaryOperator 0x13d808ed8 <col:16, col:45> 'int' contains-errors '='
|   |   |-DeclRefExpr 0x13d808c90 <col:16> 'int' lvalue Var 0x13d1284a8 'fullnamelen' 'int'
|   |   `-CallExpr 0x13d808eb0 <col:30, col:45> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x13d808e58 <col:30> 'unsigned long (const char *)' Function 0x13d808ce8 'strlen' 'unsigned long (const char *)'
|   |     `-RecoveryExpr 0x13d808e78 <col:37> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x13d808f70 <line:11:2, col:10> 'const char *' '='
|   | |-DeclRefExpr 0x13d808f18 <col:2> 'const char *' lvalue Var 0x13d128350 'fname' 'const char *'
|   | `-ImplicitCastExpr 0x13d808f58 <col:10> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x13d808f38 <col:10> 'const char *' lvalue ParmVar 0x13d1280d8 'name' 'const char *'
|   |-ForStmt 0x13d80c0d8 <line:12:2, line:34:2>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | `-CompoundStmt 0x13d80c080 <line:13:2, line:34:2>
|   |   |-DeclStmt 0x13d809010 <line:14:3, col:23>
|   |   | `-VarDecl 0x13d808fa8 <col:3, col:15> col:15 used slashptr 'const char *'
|   |   |-DeclStmt 0x13d8090a8 <line:15:3, col:17>
|   |   | `-VarDecl 0x13d809040 <col:3, col:9> col:9 used fnamelen 'int'
|   |   |-BinaryOperator 0x13d809418 <line:17:3, col:31> 'const char *' '='
|   |   | |-DeclRefExpr 0x13d8090c0 <col:3> 'const char *' lvalue Var 0x13d808fa8 'slashptr' 'const char *'
|   |   | `-ImplicitCastExpr 0x13d809400 <col:14, col:31> 'const char *' <NoOp>
|   |   |   `-CallExpr 0x13d8093b8 <col:14, col:31> 'char *'
|   |   |     |-ImplicitCastExpr 0x13d8093a0 <col:14> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x13d809300 <col:14> 'char *(const char *, int)' Function 0x13d809120 'strchr' 'char *(const char *, int)'
|   |   |     |-ImplicitCastExpr 0x13d8093e8 <col:21> 'const char *' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x13d809320 <col:21> 'const char *' lvalue Var 0x13d128350 'fname' 'const char *'
|   |   |     `-CharacterLiteral 0x13d809340 <col:28> 'int' 47
|   |   |-IfStmt 0x13d80b690 <line:18:3, line:21:27> has_else
|   |   | |-ImplicitCastExpr 0x13d809458 <line:18:7> 'const char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x13d809438 <col:7> 'const char *' lvalue Var 0x13d808fa8 'slashptr' 'const char *'
|   |   | |-BinaryOperator 0x13d809538 <line:19:4, col:26> 'int' '='
|   |   | | |-DeclRefExpr 0x13d809470 <col:4> 'int' lvalue Var 0x13d809040 'fnamelen' 'int'
|   |   | | `-ImplicitCastExpr 0x13d809520 <col:15, col:26> 'int' <IntegralCast>
|   |   | |   `-BinaryOperator 0x13d809500 <col:15, col:26> 'long' '-'
|   |   | |     |-ImplicitCastExpr 0x13d8094d0 <col:15> 'const char *' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x13d809490 <col:15> 'const char *' lvalue Var 0x13d808fa8 'slashptr' 'const char *'
|   |   | |     `-ImplicitCastExpr 0x13d8094e8 <col:26> 'const char *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x13d8094b0 <col:26> 'const char *' lvalue Var 0x13d128350 'fname' 'const char *'
|   |   | `-BinaryOperator 0x13d80b670 <line:21:4, col:27> 'int' '='
|   |   |   |-DeclRefExpr 0x13d809558 <col:4> 'int' lvalue Var 0x13d809040 'fnamelen' 'int'
|   |   |   `-ImplicitCastExpr 0x13d80b658 <col:15, col:27> 'int' <IntegralCast>
|   |   |     `-CallExpr 0x13d80b618 <col:15, col:27> 'unsigned long'
|   |   |       |-ImplicitCastExpr 0x13d80b600 <col:15> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x13d809578 <col:15> 'unsigned long (const char *)' Function 0x13d808ce8 'strlen' 'unsigned long (const char *)'
|   |   |       `-ImplicitCastExpr 0x13d80b640 <col:22> 'const char *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x13d809598 <col:22> 'const char *' lvalue Var 0x13d128350 'fname' 'const char *'
|   |   |-IfStmt 0x13d80b930 <line:22:3, line:23:12>
|   |   | |-BinaryOperator 0x13d80b8c8 <line:22:7, col:37> 'int' contains-errors '>='
|   |   | | |-BinaryOperator 0x13d80b888 <col:7, col:25> 'int' '+'
|   |   | | | |-BinaryOperator 0x13d80b850 <col:7, col:21> 'int' '+'
|   |   | | | | |-ImplicitCastExpr 0x13d80b838 <col:7> 'int' <LValueToRValue>
|   |   | | | | | `-DeclRefExpr 0x13d80b6c0 <col:7> 'int' lvalue Var 0x13d1284a8 'fullnamelen' 'int'
|   |   | | | | `-IntegerLiteral 0x13d80b6e0 <col:21> 'int' 1
|   |   | | | `-ImplicitCastExpr 0x13d80b870 <col:25> 'int' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x13d80b738 <col:25> 'int' lvalue Var 0x13d809040 'fnamelen' 'int'
|   |   | | `-RecoveryExpr 0x13d80b8a8 <col:37> '<dependent type>' contains-errors lvalue
|   |   | `-ReturnStmt 0x13d80b920 <line:23:4, col:12>
|   |   |   `-UnaryOperator 0x13d80b908 <col:11, col:12> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x13d80b8e8 <col:12> 'int' 1
|   |   |-IfStmt 0x13d80bd50 <line:24:3, line:27:12>
|   |   | |-UnaryOperator 0x13d80bcf0 <line:24:7, line:26:38> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |   | | `-CallExpr 0x13d80bca8 <line:24:8, line:26:38> '<dependent type>' contains-errors
|   |   | |   |-DeclRefExpr 0x13d80ba30 <line:24:8> 'int ()' Function 0x13d80b978 'scan_directory_ci' 'int ()'
|   |   | |   |-RecoveryExpr 0x13d80ba50 <col:26> '<dependent type>' contains-errors lvalue
|   |   | |   |-DeclRefExpr 0x13d80ba70 <col:36> 'const char *' lvalue Var 0x13d128350 'fname' 'const char *'
|   |   | |   |-DeclRefExpr 0x13d80ba90 <col:43> 'int' lvalue Var 0x13d809040 'fnamelen' 'int'
|   |   | |   |-BinaryOperator 0x13d80bb30 <line:25:11, col:36> '<dependent type>' contains-errors '+'
|   |   | |   | |-BinaryOperator 0x13d80baf0 <col:11, col:22> '<dependent type>' contains-errors '+'
|   |   | |   | | |-RecoveryExpr 0x13d80bab0 <col:11> '<dependent type>' contains-errors lvalue
|   |   | |   | | `-DeclRefExpr 0x13d80bad0 <col:22> 'int' lvalue Var 0x13d1284a8 'fullnamelen' 'int'
|   |   | |   | `-IntegerLiteral 0x13d80bb10 <col:36> 'int' 1
|   |   | |   `-BinaryOperator 0x13d80bc88 <line:26:11, col:37> '<dependent type>' contains-errors '-'
|   |   | |     |-BinaryOperator 0x13d80bc68 <col:11, col:23> '<dependent type>' contains-errors '-'
|   |   | |     | |-RecoveryExpr 0x13d80bc48 <col:11> '<dependent type>' contains-errors lvalue
|   |   | |     | `-DeclRefExpr 0x13d80bb68 <col:23> 'int' lvalue Var 0x13d1284a8 'fullnamelen' 'int'
|   |   | |     `-IntegerLiteral 0x13d80bba8 <col:37> 'int' 1
|   |   | `-ReturnStmt 0x13d80bd40 <line:27:4, col:12>
|   |   |   `-UnaryOperator 0x13d80bd28 <col:11, col:12> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x13d80bd08 <col:12> 'int' 1
|   |   |-BinaryOperator 0x13d80be40 <line:28:3, col:29> '<dependent type>' contains-errors '='
|   |   | |-ArraySubscriptExpr 0x13d80be08 <col:3, col:25> '<dependent type>' contains-errors lvalue
|   |   | | |-ImplicitCastExpr 0x13d80bdf0 <col:3> '<dependent type>' contains-errors <LValueToRValue>
|   |   | | | `-RecoveryExpr 0x13d80bd90 <col:3> '<dependent type>' contains-errors lvalue
|   |   | | |   `-DeclRefExpr 0x13d80bd70 <col:3> 'char' lvalue Var 0x13d128410 'fullname' 'char'
|   |   | | `-UnaryOperator 0x13d80bdd8 <col:12, col:23> 'int' postfix '++'
|   |   | |   `-DeclRefExpr 0x13d80bdb8 <col:12> 'int' lvalue Var 0x13d1284a8 'fullnamelen' 'int'
|   |   | `-CharacterLiteral 0x13d80be28 <col:29> 'int' 47
|   |   |-CompoundAssignOperator 0x13d80bf28 <line:29:3, col:47> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   | |-DeclRefExpr 0x13d80be60 <col:3> 'int' lvalue Var 0x13d1284a8 'fullnamelen' 'int'
|   |   | `-CallExpr 0x13d80bf00 <col:18, col:47> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x13d80be80 <col:18> 'unsigned long (const char *)' Function 0x13d808ce8 'strlen' 'unsigned long (const char *)'
|   |   |   `-BinaryOperator 0x13d80bee0 <col:25, col:36> '<dependent type>' contains-errors '+'
|   |   |     |-RecoveryExpr 0x13d80bea0 <col:25> '<dependent type>' contains-errors lvalue
|   |   |     `-DeclRefExpr 0x13d80bec0 <col:36> 'int' lvalue Var 0x13d1284a8 'fullnamelen' 'int'
|   |   `-IfStmt 0x13d80c050 <line:30:3, line:33:4> has_else
|   |     |-ImplicitCastExpr 0x13d80bf78 <line:30:7> 'const char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x13d80bf58 <col:7> 'const char *' lvalue Var 0x13d808fa8 'slashptr' 'const char *'
|   |     |-BinaryOperator 0x13d80c028 <line:31:4, col:23> 'const char *' '='
|   |     | |-DeclRefExpr 0x13d80bf90 <col:4> 'const char *' lvalue Var 0x13d128350 'fname' 'const char *'
|   |     | `-BinaryOperator 0x13d80c008 <col:12, col:23> 'const char *' '+'
|   |     |   |-ImplicitCastExpr 0x13d80bff0 <col:12> 'const char *' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x13d80bfb0 <col:12> 'const char *' lvalue Var 0x13d808fa8 'slashptr' 'const char *'
|   |     |   `-IntegerLiteral 0x13d80bfd0 <col:23> 'int' 1
|   |     `-BreakStmt 0x13d80c048 <line:33:4>
|   |-IfStmt 0x13d80cc00 <line:36:2, line:37:67>
|   | |-ImplicitCastExpr 0x13d80c130 <line:36:6> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x13d80c110 <col:6> 'char *' lvalue ParmVar 0x13d128158 'canonname' 'char *'
|   | `-CallExpr 0x13d80c5c8 <line:37:3, col:67> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x13d80c3e8 <col:3> 'unsigned long (char *, const char *, unsigned long)' Function 0x13d80c198 'strlcpy' 'unsigned long (char *, const char *, unsigned long)'
|   |   |-DeclRefExpr 0x13d80c408 <col:11> 'char *' lvalue ParmVar 0x13d128158 'canonname' 'char *'
|   |   |-BinaryOperator 0x13d80c4a8 <col:22, col:47> '<dependent type>' contains-errors '+'
|   |   | |-BinaryOperator 0x13d80c468 <col:22, col:33> '<dependent type>' contains-errors '+'
|   |   | | |-RecoveryExpr 0x13d80c428 <col:22> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x13d80c448 <col:33> 'int' lvalue Var 0x13d128540 'orignamelen' 'int'
|   |   | `-IntegerLiteral 0x13d80c488 <col:47> 'int' 1
|   |   `-BinaryOperator 0x13d80c590 <col:50, col:66> '<dependent type>' contains-errors '+'
|   |     |-RecoveryExpr 0x13d80c570 <col:50> '<dependent type>' contains-errors lvalue
|   |     `-IntegerLiteral 0x13d80c4e0 <col:66> 'int' 1
|   `-ReturnStmt 0x13d80ce80 <line:39:2, col:47>
|     `-CallExpr 0x13d80ce48 <col:9, col:47> '<dependent type>' contains-errors
|       |-DeclRefExpr 0x13d80cd00 <col:9> 'int ()' Function 0x13d80cc48 'open' 'int ()'
|       |-RecoveryExpr 0x13d80cd20 <col:14> '<dependent type>' contains-errors lvalue
|       |-BinaryOperator 0x13d80ce28 <col:24, col:35> '<dependent type>' contains-errors '|'
|       | |-RecoveryExpr 0x13d80cde8 <col:24> '<dependent type>' contains-errors lvalue
|       | `-RecoveryExpr 0x13d80ce08 <col:35> '<dependent type>' contains-errors lvalue
|       `-IntegerLiteral 0x13d80cd90 <col:46> 'int' 0
|-FunctionDecl 0x13d808870 <line:9:2> col:2 implicit used strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x13d808970 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x13d8089d8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x13d808918 <<invalid sloc>> Implicit 885
|-FunctionDecl 0x13d808ce8 <line:10:30> col:30 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x13d808de8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x13d808d90 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x13d809120 <line:17:14> col:14 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x13d809220 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x13d809288 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x13d8091c8 <<invalid sloc>> Implicit 893
`-FunctionDecl 0x13d80c198 <line:37:3> col:3 implicit used strlcpy 'unsigned long (char *, const char *, unsigned long)' extern
  |-ParmVarDecl 0x13d80c298 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x13d80c300 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x13d80c368 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x13d80c240 <<invalid sloc>> Implicit 969
