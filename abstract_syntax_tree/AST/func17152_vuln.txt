TranslationUnitDecl 0x13e055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13e0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13e055bd0 '__int128'
|-TypedefDecl 0x13e056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13e055bf0 'unsigned __int128'
|-TypedefDecl 0x13e126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13e126000 'struct __NSConstantString_tag'
|   `-Record 0x13e056580 '__NSConstantString_tag'
|-TypedefDecl 0x13e126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13e055d90 '__SVInt8_t'
|-TypedefDecl 0x13e126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13e055db0 '__SVInt16_t'
|-TypedefDecl 0x13e126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13e055dd0 '__SVInt32_t'
|-TypedefDecl 0x13e1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13e055df0 '__SVInt64_t'
|-TypedefDecl 0x13e126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13e055e10 '__SVUint8_t'
|-TypedefDecl 0x13e1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13e055e30 '__SVUint16_t'
|-TypedefDecl 0x13e126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13e055e50 '__SVUint32_t'
|-TypedefDecl 0x13e126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13e055e70 '__SVUint64_t'
|-TypedefDecl 0x13e1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13e055e90 '__SVFloat16_t'
|-TypedefDecl 0x13e126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13e055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13e1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13e055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13e126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13e055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13e126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13e055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13e1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13e055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13e126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13e055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13e1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13e055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13e126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13e055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13e126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13e055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13e1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13e055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13e126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13e055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13e126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13e056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13e126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13e056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13e126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13e056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13e126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13e056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13e126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13e056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13e126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13e0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13e126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13e0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13e126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13e0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13e126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13e056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13e126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13e056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13e126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13e056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13e126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13e056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13e126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13e056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13e127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13e0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13e127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13e0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13e1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13e0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13e127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13e056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13e1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13e056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13e127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13e056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13e127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13e056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13e127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13e056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13e127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13e0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13e127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13e0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13e127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13e0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13e127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13e056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13e127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13e056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13e127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13e056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13e127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13e056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13e127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13e056390 '__SVBool_t'
|-TypedefDecl 0x13e127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13e0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13e127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13e0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13e127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13e0563f0 '__SVCount_t'
|-TypedefDecl 0x13e127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13e127fb0 'char *'
|   `-BuiltinType 0x13e0556b0 'char'
|-TypedefDecl 0x13e128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13e127fb0 'char *'
|   `-BuiltinType 0x13e0556b0 'char'
|-FunctionDecl 0x13e128238 <dataset_diviso_filec/func17152_vuln.c:1:1, line:26:1> line:1:14 ask_new_shell 'char *(char *, char *)' static
| |-ParmVarDecl 0x13e1280d8 <col:28, col:34> col:34 used question 'char *'
| |-ParmVarDecl 0x13e128158 <col:44, col:50> col:50 used oldshell 'char *'
| `-CompoundStmt 0x13e144b08 <line:2:1, line:26:1>
|   |-DeclStmt 0x13e1283b8 <line:3:2, col:9>
|   | `-VarDecl 0x13e128350 <col:2, col:6> col:6 used len 'int'
|   |-DeclStmt 0x13e1284a0 <line:4:2, col:18>
|   | `-VarDecl 0x13e1283e8 <col:2, col:14> col:8 used ans 'char *' cinit
|   |   `-RecoveryExpr 0x13e128480 <col:14> '<dependent type>' contains-errors lvalue
|   |-RecoveryExpr 0x13e128598 <line:8:2, col:17> '<dependent type>' contains-errors lvalue
|   | |-UnaryExprOrTypeTraitExpr 0x13e128578 <col:2, col:9> 'unsigned long' contains-errors sizeof
|   | | `-RecoveryExpr 0x13e128558 <col:9> '<dependent type>' contains-errors lvalue
|   | `-IntegerLiteral 0x13e1284f0 <col:17> 'int' 0
|   |-IfStmt 0x13e1286d0 <line:10:2, line:11:14>
|   | |-UnaryOperator 0x13e128600 <line:10:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x13e1285e8 <col:7> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13e1285c8 <col:7> 'char *' lvalue ParmVar 0x13e128158 'oldshell' 'char *'
|   | `-BinaryOperator 0x13e1286b0 <line:11:3, col:14> 'char *' '='
|   |   |-DeclRefExpr 0x13e128618 <col:3> 'char *' lvalue ParmVar 0x13e128158 'oldshell' 'char *'
|   |   `-ImplicitCastExpr 0x13e128698 <col:14> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13e128680 <col:14> 'char[1]' lvalue ""
|   |-CallExpr 0x13e141068 <line:12:2, col:34> 'int'
|   | |-ImplicitCastExpr 0x13e141050 <col:2> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13e140f38 <col:2> 'int (const char *, ...)' Function 0x13e140d90 'printf' 'int (const char *, ...)'
|   | |-ImplicitCastExpr 0x13e1410b8 <col:9> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x13e1410a0 <col:9> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x13e140fa0 <col:9> 'char[4]' lvalue "STR"
|   | |-ImplicitCastExpr 0x13e1410d0 <col:16> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x13e140fc0 <col:16> 'char *' lvalue ParmVar 0x13e1280d8 'question' 'char *'
|   | `-ImplicitCastExpr 0x13e1410e8 <col:26> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x13e140fe0 <col:26> 'char *' lvalue ParmVar 0x13e128158 'oldshell' 'char *'
|   |-CallExpr 0x13e141298 <line:16:2, col:13> 'int'
|   | |-ImplicitCastExpr 0x13e141280 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13e141210 <col:2> 'int ()' Function 0x13e141158 'putchar' 'int ()'
|   | `-CharacterLiteral 0x13e141230 <col:10> 'int' 32
|   |-IfStmt 0x13e1415e0 <line:17:2, line:19:10>
|   | |-BinaryOperator 0x13e141578 <line:17:6, col:37> 'int' contains-errors '<'
|   | | |-CallExpr 0x13e141540 <col:6, col:33> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x13e1413a0 <col:6> 'int ()' Function 0x13e1412e8 'getline' 'int ()'
|   | | | |-UnaryOperator 0x13e141410 <col:14, col:15> 'char **' contains-errors prefix '&' cannot overflow
|   | | | | `-DeclRefExpr 0x13e1413c0 <col:15> 'char *' contains-errors lvalue Var 0x13e1283e8 'ans' 'char *'
|   | | | |-UnaryOperator 0x13e141508 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | | | `-RecoveryExpr 0x13e1414e8 <col:21> '<dependent type>' contains-errors lvalue
|   | | | `-RecoveryExpr 0x13e141520 <col:28> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x13e1414a8 <col:37> 'int' 0
|   | `-ReturnStmt 0x13e1415d0 <line:19:3, col:10>
|   |   `-RecoveryExpr 0x13e1415b0 <col:10> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x13e1417c0 <line:21:2, col:40> 'int' contains-errors
|   | |-ImplicitCastExpr 0x13e1417a8 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13e1416e0 <col:2> 'int ()' Function 0x13e141628 'ltrim_whitespace' 'int ()'
|   | `-CStyleCastExpr 0x13e141780 <col:19, col:37> 'unsigned char *' contains-errors <BitCast>
|   |   `-ImplicitCastExpr 0x13e141768 <col:37> 'char *' contains-errors <LValueToRValue> part_of_explicit_cast
|   |     `-DeclRefExpr 0x13e141700 <col:37> 'char *' contains-errors lvalue Var 0x13e1283e8 'ans' 'char *'
|   |-BinaryOperator 0x13e1419c0 <line:22:2, col:46> 'int' contains-errors '='
|   | |-DeclRefExpr 0x13e1417e8 <col:2> 'int' lvalue Var 0x13e128350 'len' 'int'
|   | `-CallExpr 0x13e141998 <col:8, col:46> 'int' contains-errors
|   |   |-ImplicitCastExpr 0x13e141980 <col:8> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x13e1418e8 <col:8> 'int ()' Function 0x13e141830 'rtrim_whitespace' 'int ()'
|   |   `-CStyleCastExpr 0x13e141958 <col:25, col:43> 'unsigned char *' contains-errors <BitCast>
|   |     `-ImplicitCastExpr 0x13e141940 <col:43> 'char *' contains-errors <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x13e141908 <col:43> 'char *' contains-errors lvalue Var 0x13e1283e8 'ans' 'char *'
|   |-IfStmt 0x13e144aa0 <line:23:2, line:24:10>
|   | |-BinaryOperator 0x13e144a38 <line:23:6, col:13> 'int' '=='
|   | | |-ImplicitCastExpr 0x13e144a20 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13e1419e0 <col:6> 'int' lvalue Var 0x13e128350 'len' 'int'
|   | | `-IntegerLiteral 0x13e144a00 <col:13> 'int' 0
|   | `-ReturnStmt 0x13e144a90 <line:24:3, col:10>
|   |   `-RecoveryExpr 0x13e144a70 <col:10> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x13e144af8 <line:25:2, col:9>
|     `-ImplicitCastExpr 0x13e144ae0 <col:9> 'char *' contains-errors <LValueToRValue>
|       `-DeclRefExpr 0x13e144ac0 <col:9> 'char *' contains-errors lvalue Var 0x13e1283e8 'ans' 'char *'
`-FunctionDecl 0x13e140d90 <line:12:2> col:2 implicit used printf 'int (const char *, ...)' extern
  |-ParmVarDecl 0x13e140e90 <<invalid sloc>> <invalid sloc> 'const char *'
  |-BuiltinAttr 0x13e140e38 <<invalid sloc>> Implicit 903
  `-FormatAttr 0x13e140f00 <col:2> Implicit printf 1 2
