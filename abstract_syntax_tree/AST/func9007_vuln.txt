TranslationUnitDecl 0x13a055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13a0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13a055bd0 '__int128'
|-TypedefDecl 0x13a056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13a055bf0 'unsigned __int128'
|-TypedefDecl 0x13a80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13a80bc00 'struct __NSConstantString_tag'
|   `-Record 0x13a056580 '__NSConstantString_tag'
|-TypedefDecl 0x13a80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13a055d90 '__SVInt8_t'
|-TypedefDecl 0x13a80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13a055db0 '__SVInt16_t'
|-TypedefDecl 0x13a80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13a055dd0 '__SVInt32_t'
|-TypedefDecl 0x13a80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13a055df0 '__SVInt64_t'
|-TypedefDecl 0x13a80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13a055e10 '__SVUint8_t'
|-TypedefDecl 0x13a80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13a055e30 '__SVUint16_t'
|-TypedefDecl 0x13a80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13a055e50 '__SVUint32_t'
|-TypedefDecl 0x13a80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13a055e70 '__SVUint64_t'
|-TypedefDecl 0x13a80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13a055e90 '__SVFloat16_t'
|-TypedefDecl 0x13a80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13a055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13a80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13a055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13a80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13a055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13a80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13a055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13a80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13a055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13a80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13a055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13a80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13a055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13a80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13a055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13a80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13a055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13a80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13a055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13a80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13a055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13a80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13a056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13a80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13a056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13a80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13a056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13a80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13a056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13a80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13a056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13a80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13a0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13a80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13a0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13a80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13a0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13a80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13a056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13a80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13a056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13a80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13a056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13a80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13a056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13a80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13a056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13a80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13a0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13a80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13a0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13a80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13a0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13a80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13a056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13a80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13a056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13a80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13a056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13a80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13a056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13a80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13a056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13a80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13a0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13a80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13a0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13a80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13a0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13a80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13a056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13a80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13a056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13a80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13a056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13a80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13a056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13a80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13a056390 '__SVBool_t'
|-TypedefDecl 0x13a80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13a0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13a80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13a0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13a80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13a0563f0 '__SVCount_t'
|-TypedefDecl 0x13a80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13a80dbb0 'char *'
|   `-BuiltinType 0x13a0556b0 'char'
|-TypedefDecl 0x13a80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13a80dbb0 'char *'
|   `-BuiltinType 0x13a0556b0 'char'
`-FunctionDecl 0x13a82a9e8 <dataset_diviso_filec/func9007_vuln.c:1:1, line:39:1> line:1:5 jffs2_set_acl 'int (struct inode *, struct posix_acl *, int)'
  |-ParmVarDecl 0x13a80e248 <col:19, col:33> col:33 used inode 'struct inode *'
  |-ParmVarDecl 0x13a82a828 <col:40, col:58> col:58 used acl 'struct posix_acl *'
  |-ParmVarDecl 0x13a82a8a8 <col:63, col:67> col:67 used type 'int'
  `-CompoundStmt 0x13a123400 <line:2:1, line:39:1>
    |-DeclStmt 0x13a82ac08 <line:3:2, col:17>
    | |-VarDecl 0x13a82ab08 <col:2, col:6> col:6 used rc 'int'
    | `-VarDecl 0x13a82ab88 <col:2, col:10> col:10 used xprefix 'int'
    |-SwitchStmt 0x13a82ac58 <line:5:2, line:34:2>
    | |-ImplicitCastExpr 0x13a82ac40 <line:5:10> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x13a82ac20 <col:10> 'int' lvalue ParmVar 0x13a82a8a8 'type' 'int'
    | `-CompoundStmt 0x13a122ed0 <col:16, line:34:2>
    |   |-BinaryOperator 0x13a82ad28 <line:7:3, col:13> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x13a82acb0 <col:3> 'int' lvalue Var 0x13a82ab88 'xprefix' 'int'
    |   | `-RecoveryExpr 0x13a82ad08 <col:13> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x13a122a20 <line:8:3, line:25:3>
    |   | |-ImplicitCastExpr 0x13a82ad68 <line:8:7> 'struct posix_acl *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x13a82ad48 <col:7> 'struct posix_acl *' lvalue ParmVar 0x13a82a828 'acl' 'struct posix_acl *'
    |   | `-CompoundStmt 0x13a1229f0 <col:12, line:25:3>
    |   |   |-BinaryOperator 0x13a82b0a0 <line:10:4, col:40> 'int' '='
    |   |   | |-DeclRefExpr 0x13a82ad80 <col:4> 'int' lvalue Var 0x13a82ab08 'rc' 'int'
    |   |   | `-CallExpr 0x13a82b058 <col:9, col:40> 'int'
    |   |   |   |-ImplicitCastExpr 0x13a82b040 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   |   |   | `-DeclRefExpr 0x13a82aeb0 <col:9> 'int ()' Function 0x13a82adf8 'posix_acl_equiv_mode' 'int ()'
    |   |   |   |-ImplicitCastExpr 0x13a82b088 <col:30> 'struct posix_acl *' <LValueToRValue>
    |   |   |   | `-DeclRefExpr 0x13a82aed0 <col:30> 'struct posix_acl *' lvalue ParmVar 0x13a82a828 'acl' 'struct posix_acl *'
    |   |   |   `-UnaryOperator 0x13a82aff0 <col:35, col:36> 'struct inode **' prefix '&' cannot overflow
    |   |   |     `-DeclRefExpr 0x13a82af70 <col:36> 'struct inode *' lvalue ParmVar 0x13a80e248 'inode' 'struct inode *'
    |   |   |-IfStmt 0x13a82b180 <line:11:4, line:12:12>
    |   |   | |-BinaryOperator 0x13a82b118 <line:11:8, col:13> 'int' '<'
    |   |   | | |-ImplicitCastExpr 0x13a82b100 <col:8> 'int' <LValueToRValue>
    |   |   | | | `-DeclRefExpr 0x13a82b0c0 <col:8> 'int' lvalue Var 0x13a82ab08 'rc' 'int'
    |   |   | | `-IntegerLiteral 0x13a82b0e0 <col:13> 'int' 0
    |   |   | `-ReturnStmt 0x13a82b170 <line:12:5, col:12>
    |   |   |   `-ImplicitCastExpr 0x13a82b158 <col:12> 'int' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x13a82b138 <col:12> 'int' lvalue Var 0x13a82ab08 'rc' 'int'
    |   |   |-IfStmt 0x13a1228a0 <line:13:4, line:22:4>
    |   |   | |-BinaryOperator 0x13a82b258 <line:13:8, col:25> 'int' contains-errors '!='
    |   |   | | |-RecoveryExpr 0x13a82b1d8 <col:8, col:15> '<dependent type>' contains-errors lvalue
    |   |   | | | `-DeclRefExpr 0x13a82b1a0 <col:8> 'struct inode *' lvalue ParmVar 0x13a80e248 'inode' 'struct inode *'
    |   |   | | `-DeclRefExpr 0x13a82b238 <col:25> 'struct inode *' lvalue ParmVar 0x13a80e248 'inode' 'struct inode *'
    |   |   | `-CompoundStmt 0x13a122860 <col:31, line:22:4>
    |   |   |   |-DeclStmt 0x13a82b3f8 <line:14:5, col:22>
    |   |   |   | |-RecordDecl 0x13a82b278 <col:5, col:12> col:12 struct iattr
    |   |   |   | `-VarDecl 0x13a82b378 <col:5, col:18> col:18 referenced invalid attr 'struct iattr'
    |   |   |   |-BinaryOperator 0x13a82b570 <line:16:5, col:33> '<dependent type>' contains-errors '='
    |   |   |   | |-CXXDependentScopeMemberExpr 0x13a82b458 <col:5, col:10> '<dependent type>' contains-errors lvalue .ia_valid
    |   |   |   | | `-RecoveryExpr 0x13a82b430 <col:5> '<dependent type>' contains-errors lvalue
    |   |   |   | |   `-DeclRefExpr 0x13a82b410 <col:5> 'struct iattr' lvalue Var 0x13a82b378 'attr' 'struct iattr'
    |   |   |   | `-BinaryOperator 0x13a82b550 <col:21, col:33> '<dependent type>' contains-errors '|'
    |   |   |   |   |-RecoveryExpr 0x13a82b510 <col:21> '<dependent type>' contains-errors lvalue
    |   |   |   |   `-RecoveryExpr 0x13a82b530 <col:33> '<dependent type>' contains-errors lvalue
    |   |   |   |-BinaryOperator 0x13a82b678 <line:17:5, col:20> '<dependent type>' contains-errors '='
    |   |   |   | |-CXXDependentScopeMemberExpr 0x13a82b5d8 <col:5, col:10> '<dependent type>' contains-errors lvalue .ia_mode
    |   |   |   | | `-RecoveryExpr 0x13a82b5b0 <col:5> '<dependent type>' contains-errors lvalue
    |   |   |   | |   `-DeclRefExpr 0x13a82b590 <col:5> 'struct iattr' lvalue Var 0x13a82b378 'attr' 'struct iattr'
    |   |   |   | `-DeclRefExpr 0x13a82b658 <col:20> 'struct inode *' lvalue ParmVar 0x13a80e248 'inode' 'struct inode *'
    |   |   |   |-BinaryOperator 0x13a82b780 <line:18:5, col:21> '<dependent type>' contains-errors '='
    |   |   |   | |-CXXDependentScopeMemberExpr 0x13a82b6e0 <col:5, col:10> '<dependent type>' contains-errors lvalue .ia_ctime
    |   |   |   | | `-RecoveryExpr 0x13a82b6b8 <col:5> '<dependent type>' contains-errors lvalue
    |   |   |   | |   `-DeclRefExpr 0x13a82b698 <col:5> 'struct iattr' lvalue Var 0x13a82b378 'attr' 'struct iattr'
    |   |   |   | `-RecoveryExpr 0x13a82b760 <col:21> '<dependent type>' contains-errors lvalue
    |   |   |   |-BinaryOperator 0x13a122760 <line:19:5, col:39> 'int' contains-errors '='
    |   |   |   | |-DeclRefExpr 0x13a82b7a0 <col:5> 'int' lvalue Var 0x13a82ab08 'rc' 'int'
    |   |   |   | `-CallExpr 0x13a122730 <col:10, col:39> '<dependent type>' contains-errors
    |   |   |   |   |-DeclRefExpr 0x13a1226b8 <col:10> 'int ()' Function 0x13a122600 'jffs2_do_setattr' 'int ()'
    |   |   |   |   |-DeclRefExpr 0x13a1226d8 <col:27> 'struct inode *' lvalue ParmVar 0x13a80e248 'inode' 'struct inode *'
    |   |   |   |   `-UnaryOperator 0x13a122718 <col:34, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   |   |     `-RecoveryExpr 0x13a1226f8 <col:35> '<dependent type>' contains-errors lvalue
    |   |   |   `-IfStmt 0x13a122840 <line:20:5, line:21:13>
    |   |   |     |-BinaryOperator 0x13a1227d8 <line:20:9, col:14> 'int' '<'
    |   |   |     | |-ImplicitCastExpr 0x13a1227c0 <col:9> 'int' <LValueToRValue>
    |   |   |     | | `-DeclRefExpr 0x13a122780 <col:9> 'int' lvalue Var 0x13a82ab08 'rc' 'int'
    |   |   |     | `-IntegerLiteral 0x13a1227a0 <col:14> 'int' 0
    |   |   |     `-ReturnStmt 0x13a122830 <line:21:6, col:13>
    |   |   |       `-ImplicitCastExpr 0x13a122818 <col:13> 'int' <LValueToRValue>
    |   |   |         `-DeclRefExpr 0x13a1227f8 <col:13> 'int' lvalue Var 0x13a82ab08 'rc' 'int'
    |   |   `-IfStmt 0x13a1229d0 <line:23:4, line:24:11>
    |   |     |-BinaryOperator 0x13a122918 <line:23:8, col:14> 'int' '=='
    |   |     | |-ImplicitCastExpr 0x13a122900 <col:8> 'int' <LValueToRValue>
    |   |     | | `-DeclRefExpr 0x13a1228c0 <col:8> 'int' lvalue Var 0x13a82ab08 'rc' 'int'
    |   |     | `-IntegerLiteral 0x13a1228e0 <col:14> 'int' 0
    |   |     `-BinaryOperator 0x13a1229b0 <line:24:5, col:11> 'struct posix_acl *' contains-errors '='
    |   |       |-DeclRefExpr 0x13a122938 <col:5> 'struct posix_acl *' lvalue ParmVar 0x13a82a828 'acl' 'struct posix_acl *'
    |   |       `-RecoveryExpr 0x13a122990 <col:11> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x13a122a40 <line:26:3>
    |   |-BinaryOperator 0x13a122ad8 <line:28:3, col:13> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x13a122a60 <col:3> 'int' lvalue Var 0x13a82ab88 'xprefix' 'int'
    |   | `-RecoveryExpr 0x13a122ab8 <col:13> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x13a122de0 <line:29:3, line:30:27>
    |   | |-UnaryOperator 0x13a122c80 <line:29:7, col:29> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   | | `-CallExpr 0x13a122c58 <col:8, col:29> '<dependent type>' contains-errors
    |   | |   |-DeclRefExpr 0x13a122bd8 <col:8> 'int ()' Function 0x13a122b20 'S_ISDIR' 'int ()'
    |   | |   `-RecoveryExpr 0x13a122c30 <col:16, col:23> '<dependent type>' contains-errors lvalue
    |   | |     `-DeclRefExpr 0x13a122bf8 <col:16> 'struct inode *' lvalue ParmVar 0x13a80e248 'inode' 'struct inode *'
    |   | `-ReturnStmt 0x13a122dd0 <line:30:4, col:27>
    |   |   `-ConditionalOperator 0x13a122da0 <col:11, col:27> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x13a122c98 <col:11> 'struct posix_acl *' lvalue ParmVar 0x13a82a828 'acl' 'struct posix_acl *'
    |   |     |-UnaryOperator 0x13a122d88 <col:17, col:18> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |     | `-ImplicitCastExpr 0x13a122d70 <col:18> '<dependent type>' contains-errors <LValueToRValue>
    |   |     |   `-RecoveryExpr 0x13a122d50 <col:18> '<dependent type>' contains-errors lvalue
    |   |     `-IntegerLiteral 0x13a122d00 <col:27> 'int' 0
    |   |-BreakStmt 0x13a122e00 <line:31:3>
    |   `-DefaultStmt 0x13a122eb0 <line:32:2, line:33:11>
    |     `-ReturnStmt 0x13a122ea0 <col:3, col:11>
    |       `-UnaryOperator 0x13a122e88 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |         `-ImplicitCastExpr 0x13a122e70 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |           `-RecoveryExpr 0x13a122e50 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x13a123130 <line:35:2, col:42> 'int' '='
    | |-DeclRefExpr 0x13a122f18 <col:2> 'int' lvalue Var 0x13a82ab08 'rc' 'int'
    | `-CallExpr 0x13a1230b0 <col:7, col:42> 'int'
    |   |-ImplicitCastExpr 0x13a123098 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x13a123018 <col:7> 'int ()' Function 0x13a122f60 '__jffs2_set_acl' 'int ()'
    |   |-ImplicitCastExpr 0x13a1230e8 <col:23> 'struct inode *' <LValueToRValue>
    |   | `-DeclRefExpr 0x13a123038 <col:23> 'struct inode *' lvalue ParmVar 0x13a80e248 'inode' 'struct inode *'
    |   |-ImplicitCastExpr 0x13a123100 <col:30> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x13a123058 <col:30> 'int' lvalue Var 0x13a82ab88 'xprefix' 'int'
    |   `-ImplicitCastExpr 0x13a123118 <col:39> 'struct posix_acl *' <LValueToRValue>
    |     `-DeclRefExpr 0x13a123078 <col:39> 'struct posix_acl *' lvalue ParmVar 0x13a82a828 'acl' 'struct posix_acl *'
    |-IfStmt 0x13a123398 <line:36:2, line:37:34>
    | |-UnaryOperator 0x13a123188 <line:36:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x13a123170 <col:7> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x13a123150 <col:7> 'int' lvalue Var 0x13a82ab08 'rc' 'int'
    | `-CallExpr 0x13a123318 <line:37:3, col:34> 'int'
    |   |-ImplicitCastExpr 0x13a123300 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x13a123280 <col:3> 'int ()' Function 0x13a1231c8 'set_cached_acl' 'int ()'
    |   |-ImplicitCastExpr 0x13a123350 <col:18> 'struct inode *' <LValueToRValue>
    |   | `-DeclRefExpr 0x13a1232a0 <col:18> 'struct inode *' lvalue ParmVar 0x13a80e248 'inode' 'struct inode *'
    |   |-ImplicitCastExpr 0x13a123368 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x13a1232c0 <col:25> 'int' lvalue ParmVar 0x13a82a8a8 'type' 'int'
    |   `-ImplicitCastExpr 0x13a123380 <col:31> 'struct posix_acl *' <LValueToRValue>
    |     `-DeclRefExpr 0x13a1232e0 <col:31> 'struct posix_acl *' lvalue ParmVar 0x13a82a828 'acl' 'struct posix_acl *'
    `-ReturnStmt 0x13a1233f0 <line:38:2, col:9>
      `-ImplicitCastExpr 0x13a1233d8 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x13a1233b8 <col:9> 'int' lvalue Var 0x13a82ab08 'rc' 'int'
