TranslationUnitDecl 0x127830208 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1278310b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1278307d0 '__int128'
|-TypedefDecl 0x127831128 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1278307f0 'unsigned __int128'
|-TypedefDecl 0x13080be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13080bc00 'struct __NSConstantString_tag'
|   `-Record 0x127831180 '__NSConstantString_tag'
|-TypedefDecl 0x13080be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x127830990 '__SVInt8_t'
|-TypedefDecl 0x13080bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1278309b0 '__SVInt16_t'
|-TypedefDecl 0x13080bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1278309d0 '__SVInt32_t'
|-TypedefDecl 0x13080bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1278309f0 '__SVInt64_t'
|-TypedefDecl 0x13080c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x127830a10 '__SVUint8_t'
|-TypedefDecl 0x13080c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x127830a30 '__SVUint16_t'
|-TypedefDecl 0x13080c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x127830a50 '__SVUint32_t'
|-TypedefDecl 0x13080c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x127830a70 '__SVUint64_t'
|-TypedefDecl 0x13080c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x127830a90 '__SVFloat16_t'
|-TypedefDecl 0x13080c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x127830ab0 '__SVFloat32_t'
|-TypedefDecl 0x13080c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x127830ad0 '__SVFloat64_t'
|-TypedefDecl 0x13080c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x127830af0 '__SVBfloat16_t'
|-TypedefDecl 0x13080c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x127830b10 '__clang_svint8x2_t'
|-TypedefDecl 0x13080c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x127830b30 '__clang_svint16x2_t'
|-TypedefDecl 0x13080c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x127830b50 '__clang_svint32x2_t'
|-TypedefDecl 0x13080c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x127830b70 '__clang_svint64x2_t'
|-TypedefDecl 0x13080c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x127830b90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13080c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x127830bb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13080c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x127830bd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13080c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x127830bf0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13080c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x127830c10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13080c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x127830c30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13080c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x127830c50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13080c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x127830c70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13080c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x127830c90 '__clang_svint8x3_t'
|-TypedefDecl 0x13080c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x127830cb0 '__clang_svint16x3_t'
|-TypedefDecl 0x13080c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x127830cd0 '__clang_svint32x3_t'
|-TypedefDecl 0x13080c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x127830cf0 '__clang_svint64x3_t'
|-TypedefDecl 0x13080c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x127830d10 '__clang_svuint8x3_t'
|-TypedefDecl 0x13080ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x127830d30 '__clang_svuint16x3_t'
|-TypedefDecl 0x13080cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x127830d50 '__clang_svuint32x3_t'
|-TypedefDecl 0x13080cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x127830d70 '__clang_svuint64x3_t'
|-TypedefDecl 0x13080cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x127830d90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13080d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x127830db0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13080d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x127830dd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13080d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x127830df0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13080d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x127830e10 '__clang_svint8x4_t'
|-TypedefDecl 0x13080d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x127830e30 '__clang_svint16x4_t'
|-TypedefDecl 0x13080d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x127830e50 '__clang_svint32x4_t'
|-TypedefDecl 0x13080d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x127830e70 '__clang_svint64x4_t'
|-TypedefDecl 0x13080d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x127830e90 '__clang_svuint8x4_t'
|-TypedefDecl 0x13080d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x127830eb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13080d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x127830ed0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13080d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x127830ef0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13080d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x127830f10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13080d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x127830f30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13080d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x127830f50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13080d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x127830f70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13080da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x127830f90 '__SVBool_t'
|-TypedefDecl 0x13080da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x127830fb0 '__clang_svboolx2_t'
|-TypedefDecl 0x13080dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x127830fd0 '__clang_svboolx4_t'
|-TypedefDecl 0x13080db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x127830ff0 '__SVCount_t'
|-TypedefDecl 0x13080dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13080dbb0 'char *'
|   `-BuiltinType 0x1278302b0 'char'
|-TypedefDecl 0x13080dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13080dbb0 'char *'
|   `-BuiltinType 0x1278302b0 'char'
|-FunctionDecl 0x131008200 <dataset_diviso_filec/func6376_vuln.c:1:1, line:88:1> line:1:1 logger_get_mask_expanded 'int (struct t_gui_buffer *, const char *)'
| |-ParmVarDecl 0x13080e248 <col:27, col:48> col:48 used buffer 'struct t_gui_buffer *'
| |-ParmVarDecl 0x13080e2c8 <col:56, col:68> col:68 used mask 'const char *'
| `-CompoundStmt 0x13100d050 <line:2:1, line:88:1>
|   |-DeclStmt 0x1310085b0 <line:3:5, col:79>
|   | |-VarDecl 0x131008318 <col:5, col:11> col:11 used mask2 'char *'
|   | |-VarDecl 0x131008398 <col:5, col:19> col:19 used mask_decoded 'char *'
|   | |-VarDecl 0x131008418 <col:5, col:34> col:34 used mask_decoded2 'char *'
|   | |-VarDecl 0x131008498 <col:5, col:50> col:50 used mask_decoded3 'char *'
|   | `-VarDecl 0x131008518 <col:5, col:66> col:66 used mask_decoded4 'char *'
|   |-DeclStmt 0x131008648 <line:4:5, col:24>
|   | `-VarDecl 0x1310085e0 <col:5, col:11> col:11 used mask_decoded5 'char *'
|   |-DeclStmt 0x1310086e0 <line:5:5, col:30>
|   | `-VarDecl 0x131008678 <col:5, col:17> col:17 used dir_separator 'const char *'
|   |-DeclStmt 0x131008778 <line:6:5, col:15>
|   | `-VarDecl 0x131008710 <col:5, col:9> col:9 used length 'int'
|   |-DeclStmt 0x131008998 <line:8:5, col:24>
|   | |-RecordDecl 0x1310087a8 <col:5, col:12> col:12 struct tm
|   | `-VarDecl 0x131008918 <col:5, col:16> col:16 used date_tmp 'struct tm *'
|   |-BinaryOperator 0x131008a28 <line:10:5, col:13> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x1310089b0 <col:5> 'char *' lvalue Var 0x131008318 'mask2' 'char *'
|   | `-RecoveryExpr 0x131008a08 <col:13> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x131008ac0 <line:11:5, col:20> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x131008a48 <col:5> 'char *' lvalue Var 0x131008398 'mask_decoded' 'char *'
|   | `-RecoveryExpr 0x131008aa0 <col:20> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x131008b58 <line:12:5, col:21> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x131008ae0 <col:5> 'char *' lvalue Var 0x131008418 'mask_decoded2' 'char *'
|   | `-RecoveryExpr 0x131008b38 <col:21> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x131008bf0 <line:13:5, col:21> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x131008b78 <col:5> 'char *' lvalue Var 0x131008498 'mask_decoded3' 'char *'
|   | `-RecoveryExpr 0x131008bd0 <col:21> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x131008c88 <line:14:5, col:21> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x131008c10 <col:5> 'char *' lvalue Var 0x131008518 'mask_decoded4' 'char *'
|   | `-RecoveryExpr 0x131008c68 <col:21> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x131008d20 <line:15:5, col:21> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x131008ca8 <col:5> 'char *' lvalue Var 0x1310085e0 'mask_decoded5' 'char *'
|   | `-RecoveryExpr 0x131008d00 <col:21> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x131008f90 <line:17:5, col:44> 'const char *' '='
|   | |-DeclRefExpr 0x131008d40 <col:5> 'const char *' lvalue Var 0x131008678 'dir_separator' 'const char *'
|   | `-ImplicitCastExpr 0x131008f78 <col:21, col:44> 'const char *' <IntegralToPointer>
|   |   `-CallExpr 0x131008f38 <col:21, col:44> 'int'
|   |     |-ImplicitCastExpr 0x131008f20 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x131008e70 <col:21> 'int ()' Function 0x131008db8 'weechat_info_get' 'int ()'
|   |     `-ImplicitCastExpr 0x131008f60 <col:39> 'char *' <ArrayToPointerDecay>
|   |       `-StringLiteral 0x131008ed0 <col:39> 'char[4]' lvalue "STR"
|   |-IfStmt 0x131009048 <line:18:5, line:19:16>
|   | |-UnaryOperator 0x131008fe8 <line:18:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x131008fd0 <col:10> 'const char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x131008fb0 <col:10> 'const char *' lvalue Var 0x131008678 'dir_separator' 'const char *'
|   | `-ReturnStmt 0x131009038 <line:19:9, col:16>
|   |   `-RecoveryExpr 0x131009018 <col:16> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x130826698 <line:22:5, col:63> 'char *' '='
|   | |-DeclRefExpr 0x131009068 <col:5> 'char *' lvalue Var 0x131008318 'mask2' 'char *'
|   | `-ImplicitCastExpr 0x130826680 <col:13, col:63> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x130826600 <col:13, col:63> 'int'
|   |     |-ImplicitCastExpr 0x1310091e8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x131009168 <col:13> 'int ()' Function 0x1310090b0 'weechat_string_replace' 'int ()'
|   |     |-ImplicitCastExpr 0x130826638 <col:37> 'const char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x131009188 <col:37> 'const char *' lvalue ParmVar 0x13080e2c8 'mask' 'const char *'
|   |     |-ImplicitCastExpr 0x130826650 <col:43> 'const char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1310091a8 <col:43> 'const char *' lvalue Var 0x131008678 'dir_separator' 'const char *'
|   |     `-ImplicitCastExpr 0x130826668 <col:58> 'char *' <ArrayToPointerDecay>
|   |       `-StringLiteral 0x1310091c8 <col:58> 'char[4]' lvalue "STR"
|   |-IfStmt 0x130826770 <line:23:5, line:24:14>
|   | |-UnaryOperator 0x1308266f0 <line:23:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1308266d8 <col:10> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1308266b8 <col:10> 'char *' lvalue Var 0x131008318 'mask2' 'char *'
|   | `-GotoStmt 0x130826758 <line:24:9, col:14> 'end' 0x130826708
|   |-BinaryOperator 0x130826980 <line:26:5, col:74> 'char *' '='
|   | |-DeclRefExpr 0x130826790 <col:5> 'char *' lvalue Var 0x131008398 'mask_decoded' 'char *'
|   | `-ImplicitCastExpr 0x130826968 <col:20, col:74> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x130826908 <col:20, col:74> 'int'
|   |     |-ImplicitCastExpr 0x1308268f0 <col:20> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x130826890 <col:20> 'int ()' Function 0x1308267d8 'weechat_buffer_string_replace_local_var' 'int ()'
|   |     |-ImplicitCastExpr 0x130826938 <col:61> 'struct t_gui_buffer *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1308268b0 <col:61> 'struct t_gui_buffer *' lvalue ParmVar 0x13080e248 'buffer' 'struct t_gui_buffer *'
|   |     `-ImplicitCastExpr 0x130826950 <col:69> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1308268d0 <col:69> 'char *' lvalue Var 0x131008318 'mask2' 'char *'
|   |-IfStmt 0x130826a08 <line:27:5, line:28:14>
|   | |-UnaryOperator 0x1308269d8 <line:27:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1308269c0 <col:10> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1308269a0 <col:10> 'char *' lvalue Var 0x131008398 'mask_decoded' 'char *'
|   | `-GotoStmt 0x1308269f0 <line:28:9, col:14> 'end' 0x130826708
|   |-BinaryOperator 0x130826cc0 <line:30:5, line:32:104> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x130826a28 <line:30:5> 'char *' lvalue Var 0x131008418 'mask_decoded2' 'char *'
|   | `-CallExpr 0x130826c88 <col:21, line:32:104> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x130826a48 <line:30:21> 'int ()' Function 0x1310090b0 'weechat_string_replace' 'int ()'
|   |   |-DeclRefExpr 0x130826a68 <col:45> 'char *' lvalue Var 0x131008398 'mask_decoded' 'char *'
|   |   |-DeclRefExpr 0x130826a88 <line:31:45> 'const char *' lvalue Var 0x131008678 'dir_separator' 'const char *'
|   |   `-CallExpr 0x130826c60 <line:32:45, col:103> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x130826b88 <col:45> 'int ()' Function 0x130826ad0 'weechat_config_string' 'int ()'
|   |     `-RecoveryExpr 0x130826c40 <col:68> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x130826d48 <line:33:5, line:34:14>
|   | |-UnaryOperator 0x130826d18 <line:33:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x130826d00 <col:10> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x130826ce0 <col:10> 'char *' lvalue Var 0x131008418 'mask_decoded2' 'char *'
|   | `-GotoStmt 0x130826d30 <line:34:9, col:14> 'end' 0x130826708
|   |-BinaryOperator 0x130827030 <line:40:5, col:42> 'char *' '='
|   | |-DeclRefExpr 0x130826d68 <col:5> 'char *' lvalue Var 0x131008498 'mask_decoded3' 'char *'
|   | `-CallExpr 0x130826fd8 <col:21, col:42> 'char *'
|   |   |-ImplicitCastExpr 0x130826fc0 <col:21> 'char *(*)(const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x130826f38 <col:21> 'char *(const char *)' Function 0x130826dc8 'strdup' 'char *(const char *)'
|   |   `-ImplicitCastExpr 0x130827018 <col:29> 'const char *' <NoOp>
|   |     `-ImplicitCastExpr 0x130827000 <col:29> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x130826f58 <col:29> 'char *' lvalue Var 0x131008418 'mask_decoded2' 'char *'
|   |-IfStmt 0x1308270b8 <line:42:5, line:43:14>
|   | |-UnaryOperator 0x130827088 <line:42:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x130827070 <col:10> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x130827050 <col:10> 'char *' lvalue Var 0x131008498 'mask_decoded3' 'char *'
|   | `-GotoStmt 0x1308270a0 <line:43:9, col:14> 'end' 0x130826708
|   |-BinaryOperator 0x130827228 <line:46:5, line:47:65> 'char *' '='
|   | |-DeclRefExpr 0x1308270d8 <line:46:5> 'char *' lvalue Var 0x131008518 'mask_decoded4' 'char *'
|   | `-ImplicitCastExpr 0x130827210 <col:21, line:47:65> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x130827190 <line:46:21, line:47:65> 'int'
|   |     |-ImplicitCastExpr 0x130827178 <line:46:21> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1308270f8 <col:21> 'int ()' Function 0x1310090b0 'weechat_string_replace' 'int ()'
|   |     |-ImplicitCastExpr 0x1308271c8 <col:45> 'char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x130827118 <col:45> 'char *' lvalue Var 0x131008498 'mask_decoded3' 'char *'
|   |     |-ImplicitCastExpr 0x1308271e0 <line:47:45> 'char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x130827138 <col:45> 'char[4]' lvalue "STR"
|   |     `-ImplicitCastExpr 0x1308271f8 <col:52> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x130827158 <col:52> 'const char *' lvalue Var 0x131008678 'dir_separator' 'const char *'
|   |-IfStmt 0x1308272b0 <line:48:5, line:49:14>
|   | |-UnaryOperator 0x130827280 <line:48:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x130827268 <col:10> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x130827248 <col:10> 'char *' lvalue Var 0x131008518 'mask_decoded4' 'char *'
|   | `-GotoStmt 0x130827298 <line:49:9, col:14> 'end' 0x130826708
|   |-BinaryOperator 0x13100b870 <line:52:5, col:45> 'int' '='
|   | |-DeclRefExpr 0x1308272d0 <col:5> 'int' lvalue Var 0x131008710 'length' 'int'
|   | `-ImplicitCastExpr 0x13100b858 <col:14, col:45> 'int' <IntegralCast>
|   |   `-BinaryOperator 0x13100b838 <col:14, col:45> 'unsigned long' '+'
|   |     |-BinaryOperator 0x1308275c8 <col:14, col:39> 'unsigned long' '+'
|   |     | |-CallExpr 0x130827538 <col:14, col:35> 'unsigned long'
|   |     | | |-ImplicitCastExpr 0x130827520 <col:14> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |     | | | `-DeclRefExpr 0x130827498 <col:14> 'unsigned long (const char *)' Function 0x130827328 'strlen' 'unsigned long (const char *)'
|   |     | | `-ImplicitCastExpr 0x130827578 <col:22> 'const char *' <NoOp>
|   |     | |   `-ImplicitCastExpr 0x130827560 <col:22> 'char *' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x1308274b8 <col:22> 'char *' lvalue Var 0x131008518 'mask_decoded4' 'char *'
|   |     | `-ImplicitCastExpr 0x1308275b0 <col:39> 'unsigned long' <IntegralCast>
|   |     |   `-IntegerLiteral 0x130827590 <col:39> 'int' 256
|   |     `-ImplicitCastExpr 0x13100b820 <col:45> 'unsigned long' <IntegralCast>
|   |       `-IntegerLiteral 0x13100b800 <col:45> 'int' 1
|   |-BinaryOperator 0x13100bb98 <line:53:5, col:35> 'char *' '='
|   | |-DeclRefExpr 0x13100b890 <col:5> 'char *' lvalue Var 0x1310085e0 'mask_decoded5' 'char *'
|   | `-ImplicitCastExpr 0x13100bb80 <col:21, col:35> 'char *' <BitCast>
|   |   `-CallExpr 0x13100bb28 <col:21, col:35> 'void *'
|   |     |-ImplicitCastExpr 0x13100bb10 <col:21> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13100ba88 <col:21> 'void *(unsigned long)' Function 0x13100b8e8 'malloc' 'void *(unsigned long)'
|   |     `-ImplicitCastExpr 0x13100bb68 <col:29> 'unsigned long' <IntegralCast>
|   |       `-ImplicitCastExpr 0x13100bb50 <col:29> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x13100baa8 <col:29> 'int' lvalue Var 0x131008710 'length' 'int'
|   |-IfStmt 0x13100bc20 <line:54:5, line:55:14>
|   | |-UnaryOperator 0x13100bbf0 <line:54:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x13100bbd8 <col:10> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13100bbb8 <col:10> 'char *' lvalue Var 0x1310085e0 'mask_decoded5' 'char *'
|   | `-GotoStmt 0x13100bc08 <line:55:9, col:14> 'end' 0x130826708
|   |-BinaryOperator 0x13100bf08 <line:58:5, col:24> 'char' '='
|   | |-ArraySubscriptExpr 0x13100beb8 <col:5, col:20> 'char' lvalue
|   | | |-ImplicitCastExpr 0x13100bea0 <col:5> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13100be60 <col:5> 'char *' lvalue Var 0x1310085e0 'mask_decoded5' 'char *'
|   | | `-IntegerLiteral 0x13100be80 <col:19> 'int' 0
|   | `-ImplicitCastExpr 0x13100bef0 <col:24> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x13100bed8 <col:24> 'int' 0
|   |-CallExpr 0x13100c118 <line:59:5, col:65> 'int'
|   | |-ImplicitCastExpr 0x13100c100 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13100c008 <col:5> 'int ()' Function 0x13100bf50 'strftime' 'int ()'
|   | |-ImplicitCastExpr 0x13100c158 <col:15> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x13100c028 <col:15> 'char *' lvalue Var 0x1310085e0 'mask_decoded5' 'char *'
|   | |-BinaryOperator 0x13100c0a0 <col:30, col:39> 'int' '-'
|   | | |-ImplicitCastExpr 0x13100c088 <col:30> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13100c048 <col:30> 'int' lvalue Var 0x131008710 'length' 'int'
|   | | `-IntegerLiteral 0x13100c068 <col:39> 'int' 1
|   | |-ImplicitCastExpr 0x13100c170 <col:42> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x13100c0c0 <col:42> 'char *' lvalue Var 0x131008518 'mask_decoded4' 'char *'
|   | `-ImplicitCastExpr 0x13100c188 <col:57> 'struct tm *' <LValueToRValue>
|   |   `-DeclRefExpr 0x13100c0e0 <col:57> 'struct tm *' lvalue Var 0x131008918 'date_tmp' 'struct tm *'
|   |-IfStmt 0x13100c438 <line:62:5, line:63:46>
|   | |-RecoveryExpr 0x13100c2a0 <line:62:9, col:67> '_Bool' contains-errors
|   | `-CallExpr 0x13100c3f8 <line:63:9, col:46> 'int'
|   |   |-ImplicitCastExpr 0x13100c3e0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x13100c3a0 <col:9> 'int ()' Function 0x13100c2e8 'weechat_string_tolower' 'int ()'
|   |   `-ImplicitCastExpr 0x13100c420 <col:33> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x13100c3c0 <col:33> 'char *' lvalue Var 0x1310085e0 'mask_decoded5' 'char *'
|   |-IfStmt 0x13100c830 <line:65:5, line:73:5>
|   | |-RecoveryExpr 0x13100c458 <line:65:9, col:32> '_Bool' contains-errors
|   | `-CompoundStmt 0x13100c820 <line:66:5, line:73:5>
|   |-LabelStmt 0x13100cb50 <line:75:1, line:77:20> 'end'
|   | `-IfStmt 0x13100cb30 <line:76:5, line:77:20>
|   |   |-ImplicitCastExpr 0x13100c870 <line:76:9> 'char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x13100c850 <col:9> 'char *' lvalue Var 0x131008318 'mask2' 'char *'
|   |   `-CallExpr 0x13100cad8 <line:77:9, col:20> 'void'
|   |     |-ImplicitCastExpr 0x13100cac0 <col:9> 'void (*)(void *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13100ca38 <col:9> 'void (void *)' Function 0x13100c8c8 'free' 'void (void *)'
|   |     `-ImplicitCastExpr 0x13100cb18 <col:15> 'void *' <BitCast>
|   |       `-ImplicitCastExpr 0x13100cb00 <col:15> 'char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x13100ca58 <col:15> 'char *' lvalue Var 0x131008318 'mask2' 'char *'
|   |-IfStmt 0x13100cc70 <line:78:5, line:79:27>
|   | |-ImplicitCastExpr 0x13100cb90 <line:78:9> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x13100cb70 <col:9> 'char *' lvalue Var 0x131008398 'mask_decoded' 'char *'
|   | `-CallExpr 0x13100cc18 <line:79:9, col:27> 'void'
|   |   |-ImplicitCastExpr 0x13100cc00 <col:9> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x13100cba8 <col:9> 'void (void *)' Function 0x13100c8c8 'free' 'void (void *)'
|   |   `-ImplicitCastExpr 0x13100cc58 <col:15> 'void *' <BitCast>
|   |     `-ImplicitCastExpr 0x13100cc40 <col:15> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x13100cbc8 <col:15> 'char *' lvalue Var 0x131008398 'mask_decoded' 'char *'
|   |-IfStmt 0x13100cd90 <line:80:5, line:81:28>
|   | |-ImplicitCastExpr 0x13100ccb0 <line:80:9> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x13100cc90 <col:9> 'char *' lvalue Var 0x131008418 'mask_decoded2' 'char *'
|   | `-CallExpr 0x13100cd38 <line:81:9, col:28> 'void'
|   |   |-ImplicitCastExpr 0x13100cd20 <col:9> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x13100ccc8 <col:9> 'void (void *)' Function 0x13100c8c8 'free' 'void (void *)'
|   |   `-ImplicitCastExpr 0x13100cd78 <col:15> 'void *' <BitCast>
|   |     `-ImplicitCastExpr 0x13100cd60 <col:15> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x13100cce8 <col:15> 'char *' lvalue Var 0x131008418 'mask_decoded2' 'char *'
|   |-IfStmt 0x13100ceb0 <line:82:5, line:83:28>
|   | |-ImplicitCastExpr 0x13100cdd0 <line:82:9> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x13100cdb0 <col:9> 'char *' lvalue Var 0x131008498 'mask_decoded3' 'char *'
|   | `-CallExpr 0x13100ce58 <line:83:9, col:28> 'void'
|   |   |-ImplicitCastExpr 0x13100ce40 <col:9> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x13100cde8 <col:9> 'void (void *)' Function 0x13100c8c8 'free' 'void (void *)'
|   |   `-ImplicitCastExpr 0x13100ce98 <col:15> 'void *' <BitCast>
|   |     `-ImplicitCastExpr 0x13100ce80 <col:15> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x13100ce08 <col:15> 'char *' lvalue Var 0x131008498 'mask_decoded3' 'char *'
|   |-IfStmt 0x13100cfd0 <line:84:5, line:85:28>
|   | |-ImplicitCastExpr 0x13100cef0 <line:84:9> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x13100ced0 <col:9> 'char *' lvalue Var 0x131008518 'mask_decoded4' 'char *'
|   | `-CallExpr 0x13100cf78 <line:85:9, col:28> 'void'
|   |   |-ImplicitCastExpr 0x13100cf60 <col:9> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x13100cf08 <col:9> 'void (void *)' Function 0x13100c8c8 'free' 'void (void *)'
|   |   `-ImplicitCastExpr 0x13100cfb8 <col:15> 'void *' <BitCast>
|   |     `-ImplicitCastExpr 0x13100cfa0 <col:15> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x13100cf28 <col:15> 'char *' lvalue Var 0x131008518 'mask_decoded4' 'char *'
|   `-ReturnStmt 0x13100d040 <line:87:5, col:12>
|     `-ImplicitCastExpr 0x13100d028 <col:12> 'int' <PointerToIntegral>
|       `-ImplicitCastExpr 0x13100d010 <col:12> 'char *' <LValueToRValue>
|         `-DeclRefExpr 0x13100cff0 <col:12> 'char *' lvalue Var 0x1310085e0 'mask_decoded5' 'char *'
|-FunctionDecl 0x130826dc8 <line:40:21> col:21 implicit used strdup 'char *(const char *)' extern
| |-ParmVarDecl 0x130826ec8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x130826e70 <<invalid sloc>> Implicit 950
|-FunctionDecl 0x130827328 <line:52:14> col:14 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x130827428 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x1308273d0 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x13100b8e8 <line:53:21> col:21 implicit used malloc 'void *(unsigned long)' extern
| |-ParmVarDecl 0x13100b9e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x13100b990 <<invalid sloc>> Implicit 871
| `-AllocSizeAttr 0x13100ba58 <col:21> Implicit 1
`-FunctionDecl 0x13100c8c8 <line:77:9> col:9 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x13100c9c8 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x13100c970 <<invalid sloc>> Implicit 873
