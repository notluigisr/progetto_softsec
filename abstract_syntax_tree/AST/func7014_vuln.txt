TranslationUnitDecl 0x12f827808 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12f8286b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12f827dd0 '__int128'
|-TypedefDecl 0x12f828728 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12f827df0 'unsigned __int128'
|-TypedefDecl 0x12f813e30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12f813c00 'struct __NSConstantString_tag'
|   `-Record 0x12f828780 '__NSConstantString_tag'
|-TypedefDecl 0x12f813e98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12f827f90 '__SVInt8_t'
|-TypedefDecl 0x12f813f00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12f827fb0 '__SVInt16_t'
|-TypedefDecl 0x12f813f68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12f827fd0 '__SVInt32_t'
|-TypedefDecl 0x12f813fd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12f827ff0 '__SVInt64_t'
|-TypedefDecl 0x12f814038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12f828010 '__SVUint8_t'
|-TypedefDecl 0x12f8140a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12f828030 '__SVUint16_t'
|-TypedefDecl 0x12f814108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12f828050 '__SVUint32_t'
|-TypedefDecl 0x12f814170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12f828070 '__SVUint64_t'
|-TypedefDecl 0x12f8141d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12f828090 '__SVFloat16_t'
|-TypedefDecl 0x12f814240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12f8280b0 '__SVFloat32_t'
|-TypedefDecl 0x12f8142a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12f8280d0 '__SVFloat64_t'
|-TypedefDecl 0x12f814310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12f8280f0 '__SVBfloat16_t'
|-TypedefDecl 0x12f814378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12f828110 '__clang_svint8x2_t'
|-TypedefDecl 0x12f8143e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12f828130 '__clang_svint16x2_t'
|-TypedefDecl 0x12f814448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12f828150 '__clang_svint32x2_t'
|-TypedefDecl 0x12f8144b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12f828170 '__clang_svint64x2_t'
|-TypedefDecl 0x12f814518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12f828190 '__clang_svuint8x2_t'
|-TypedefDecl 0x12f814580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12f8281b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12f8145e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12f8281d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12f814650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12f8281f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12f8146b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12f828210 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12f814720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12f828230 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12f814788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12f828250 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12f8147f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12f828270 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12f814858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12f828290 '__clang_svint8x3_t'
|-TypedefDecl 0x12f8148c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12f8282b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12f814928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12f8282d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12f814990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12f8282f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12f8149f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12f828310 '__clang_svuint8x3_t'
|-TypedefDecl 0x12f814a60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12f828330 '__clang_svuint16x3_t'
|-TypedefDecl 0x12f814ac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12f828350 '__clang_svuint32x3_t'
|-TypedefDecl 0x12f814b30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12f828370 '__clang_svuint64x3_t'
|-TypedefDecl 0x12f814b98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12f828390 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12f898c00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12f8283b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12f898c68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12f8283d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12f898cd0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12f8283f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12f898d38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12f828410 '__clang_svint8x4_t'
|-TypedefDecl 0x12f898da0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12f828430 '__clang_svint16x4_t'
|-TypedefDecl 0x12f898e08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12f828450 '__clang_svint32x4_t'
|-TypedefDecl 0x12f898e70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12f828470 '__clang_svint64x4_t'
|-TypedefDecl 0x12f898ed8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12f828490 '__clang_svuint8x4_t'
|-TypedefDecl 0x12f898f40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12f8284b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12f898fa8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12f8284d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12f899010 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12f8284f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12f899078 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12f828510 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12f8990e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12f828530 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12f899148 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12f828550 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12f8991b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12f828570 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12f899218 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12f828590 '__SVBool_t'
|-TypedefDecl 0x12f899280 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12f8285b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12f8992e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12f8285d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12f899350 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12f8285f0 '__SVCount_t'
|-TypedefDecl 0x12f8993f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12f8993b0 'char *'
|   `-BuiltinType 0x12f8278b0 'char'
|-TypedefDecl 0x12f899468 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12f8993b0 'char *'
|   `-BuiltinType 0x12f8278b0 'char'
`-FunctionDecl 0x12f8b2400 <dataset_diviso_filec/func7014_vuln.c:1:1, line:43:1> line:1:13 invalid set_pixel_format 'void (int *, int, int, int, int, int, int, int, int, int, int)' static
  |-ParmVarDecl 0x12f899528 <col:30, col:40> col:40 referenced invalid vs 'int *'
  |-ParmVarDecl 0x12f8995a8 <line:2:30, col:34> col:34 used bits_per_pixel 'int'
  |-ParmVarDecl 0x12f899628 <col:50, col:54> col:54 depth 'int'
  |-ParmVarDecl 0x12f8996a8 <line:3:30, col:34> col:34 used big_endian_flag 'int'
  |-ParmVarDecl 0x12f899728 <col:51, col:55> col:55 used true_color_flag 'int'
  |-ParmVarDecl 0x12f8997a8 <line:4:30, col:34> col:34 used red_max 'int'
  |-ParmVarDecl 0x12f899828 <col:43, col:47> col:47 used green_max 'int'
  |-ParmVarDecl 0x12f8998a8 <col:58, col:62> col:62 used blue_max 'int'
  |-ParmVarDecl 0x12f899928 <line:5:30, col:34> col:34 used red_shift 'int'
  |-ParmVarDecl 0x12f8999a8 <col:45, col:49> col:49 used green_shift 'int'
  |-ParmVarDecl 0x12f899a28 <col:62, col:66> col:66 used blue_shift 'int'
  `-CompoundStmt 0x13806a5f8 <line:6:1, line:43:1>
    |-IfStmt 0x12f8b2748 <line:7:5, line:10:5>
    | |-UnaryOperator 0x12f8b2538 <line:7:9, col:10> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12f8b2520 <col:10> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x12f8b2500 <col:10> 'int' lvalue ParmVar 0x12f899728 'true_color_flag' 'int'
    | `-CompoundStmt 0x12f8b2728 <col:27, line:10:5>
    |   |-CallExpr 0x12f8b26f0 <line:8:9, col:28> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x12f8b26b0 <col:9> 'int ()' Function 0x12f8b25f8 'vnc_client_error' 'int ()'
    |   | `-RecoveryExpr 0x12f8b26d0 <col:26> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x12f8b2718 <line:9:9>
    |-SwitchStmt 0x12f8b27a0 <line:12:5, line:20:5>
    | |-ImplicitCastExpr 0x12f8b2788 <line:12:13> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x12f8b2768 <col:13> 'int' lvalue ParmVar 0x12f8995a8 'bits_per_pixel' 'int'
    | `-CompoundStmt 0x12f8b2988 <col:29, line:20:5>
    |   |-CaseStmt 0x12f8b2800 <line:13:5, line:16:9>
    |   | |-ConstantExpr 0x12f8b27e8 <line:13:10> 'int'
    |   | | `-IntegerLiteral 0x12f8b27c8 <col:10> 'int' 8
    |   | `-CaseStmt 0x12f8b2860 <line:14:5, line:16:9>
    |   |   |-ConstantExpr 0x12f8b2848 <line:14:10> 'int'
    |   |   | `-IntegerLiteral 0x12f8b2828 <col:10> 'int' 16
    |   |   `-CaseStmt 0x12f8b28c0 <line:15:5, line:16:9>
    |   |     |-ConstantExpr 0x12f8b28a8 <line:15:10> 'int'
    |   |     | `-IntegerLiteral 0x12f8b2888 <col:10> 'int' 32
    |   |     `-BreakStmt 0x12f8b28e8 <line:16:9>
    |   |-DefaultStmt 0x12f8b2958 <line:17:5, line:18:28>
    |   | `-CallExpr 0x12f8b2930 <col:9, col:28> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x12f8b28f0 <col:9> 'int ()' Function 0x12f8b25f8 'vnc_client_error' 'int ()'
    |   |   `-RecoveryExpr 0x12f8b2910 <col:26> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x12f8b2978 <line:19:9>
    |-BinaryOperator 0x12f8b2aa8 <line:22:5, col:26> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12f8b2a40 <col:5, col:19> '<dependent type>' contains-errors lvalue .rmax
    | | `-CXXDependentScopeMemberExpr 0x12f8b29f8 <col:5, col:9> '<dependent type>' contains-errors lvalue ->client_pf
    | |   `-RecoveryExpr 0x12f8b29d0 <col:5> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x12f8b29b0 <col:5> 'int *' lvalue ParmVar 0x12f899528 'vs' 'int *'
    | `-DeclRefExpr 0x12f8b2a88 <col:26> 'int' lvalue ParmVar 0x12f8997a8 'red_max' 'int'
    |-BinaryOperator 0x12f8b2d48 <line:23:5, col:47> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12f8b2b58 <col:5, col:19> '<dependent type>' contains-errors lvalue .rbits
    | | `-CXXDependentScopeMemberExpr 0x12f8b2b10 <col:5, col:9> '<dependent type>' contains-errors lvalue ->client_pf
    | |   `-RecoveryExpr 0x12f8b2ae8 <col:5> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x12f8b2ac8 <col:5> 'int *' lvalue ParmVar 0x12f899528 'vs' 'int *'
    | `-CallExpr 0x12f8b2d08 <col:27, col:47> 'int'
    |   |-ImplicitCastExpr 0x12f8b2cf0 <col:27> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12f8b2c80 <col:27> 'int ()' Function 0x12f8b2bc8 'hweight_long' 'int ()'
    |   `-ImplicitCastExpr 0x12f8b2d30 <col:40> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x12f8b2ca0 <col:40> 'int' lvalue ParmVar 0x12f8997a8 'red_max' 'int'
    |-BinaryOperator 0x12f8b2e60 <line:24:5, col:28> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12f8b2df8 <col:5, col:19> '<dependent type>' contains-errors lvalue .rshift
    | | `-CXXDependentScopeMemberExpr 0x12f8b2db0 <col:5, col:9> '<dependent type>' contains-errors lvalue ->client_pf
    | |   `-RecoveryExpr 0x12f8b2d88 <col:5> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x12f8b2d68 <col:5> 'int *' lvalue ParmVar 0x12f899528 'vs' 'int *'
    | `-DeclRefExpr 0x12f8b2e40 <col:28> 'int' lvalue ParmVar 0x12f899928 'red_shift' 'int'
    |-BinaryOperator 0x12f8b2fe8 <line:25:5, col:38> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12f8b2f10 <col:5, col:19> '<dependent type>' contains-errors lvalue .rmask
    | | `-CXXDependentScopeMemberExpr 0x12f8b2ec8 <col:5, col:9> '<dependent type>' contains-errors lvalue ->client_pf
    | |   `-RecoveryExpr 0x12f8b2ea0 <col:5> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x12f8b2e80 <col:5> 'int *' lvalue ParmVar 0x12f899528 'vs' 'int *'
    | `-BinaryOperator 0x12f8b2fc8 <col:27, col:38> 'int' '<<'
    |   |-ImplicitCastExpr 0x12f8b2f98 <col:27> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x12f8b2f58 <col:27> 'int' lvalue ParmVar 0x12f8997a8 'red_max' 'int'
    |   `-ImplicitCastExpr 0x12f8b2fb0 <col:38> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x12f8b2f78 <col:38> 'int' lvalue ParmVar 0x12f899928 'red_shift' 'int'
    |-BinaryOperator 0x12f8b3100 <line:26:5, col:26> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12f8b3098 <col:5, col:19> '<dependent type>' contains-errors lvalue .gmax
    | | `-CXXDependentScopeMemberExpr 0x12f8b3050 <col:5, col:9> '<dependent type>' contains-errors lvalue ->client_pf
    | |   `-RecoveryExpr 0x12f8b3028 <col:5> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x12f8b3008 <col:5> 'int *' lvalue ParmVar 0x12f899528 'vs' 'int *'
    | `-DeclRefExpr 0x12f8b30e0 <col:26> 'int' lvalue ParmVar 0x12f899828 'green_max' 'int'
    |-BinaryOperator 0x12f8b3290 <line:27:5, col:49> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12f8b31b0 <col:5, col:19> '<dependent type>' contains-errors lvalue .gbits
    | | `-CXXDependentScopeMemberExpr 0x12f8b3168 <col:5, col:9> '<dependent type>' contains-errors lvalue ->client_pf
    | |   `-RecoveryExpr 0x12f8b3140 <col:5> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x12f8b3120 <col:5> 'int *' lvalue ParmVar 0x12f899528 'vs' 'int *'
    | `-CallExpr 0x12f8b3250 <col:27, col:49> 'int'
    |   |-ImplicitCastExpr 0x12f8b3238 <col:27> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12f8b31f8 <col:27> 'int ()' Function 0x12f8b2bc8 'hweight_long' 'int ()'
    |   `-ImplicitCastExpr 0x12f8b3278 <col:40> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x12f8b3218 <col:40> 'int' lvalue ParmVar 0x12f899828 'green_max' 'int'
    |-BinaryOperator 0x12f8b33a8 <line:28:5, col:28> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12f8b3340 <col:5, col:19> '<dependent type>' contains-errors lvalue .gshift
    | | `-CXXDependentScopeMemberExpr 0x12f8b32f8 <col:5, col:9> '<dependent type>' contains-errors lvalue ->client_pf
    | |   `-RecoveryExpr 0x12f8b32d0 <col:5> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x12f8b32b0 <col:5> 'int *' lvalue ParmVar 0x12f899528 'vs' 'int *'
    | `-DeclRefExpr 0x12f8b3388 <col:28> 'int' lvalue ParmVar 0x12f8999a8 'green_shift' 'int'
    |-BinaryOperator 0x12f8b3548 <line:29:5, col:40> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12f8b3470 <col:5, col:19> '<dependent type>' contains-errors lvalue .gmask
    | | `-CXXDependentScopeMemberExpr 0x12f8b3428 <col:5, col:9> '<dependent type>' contains-errors lvalue ->client_pf
    | |   `-RecoveryExpr 0x12f8b3400 <col:5> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x12f8b33c8 <col:5> 'int *' lvalue ParmVar 0x12f899528 'vs' 'int *'
    | `-BinaryOperator 0x12f8b3528 <col:27, col:40> 'int' '<<'
    |   |-ImplicitCastExpr 0x12f8b34f8 <col:27> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x12f8b34b8 <col:27> 'int' lvalue ParmVar 0x12f899828 'green_max' 'int'
    |   `-ImplicitCastExpr 0x12f8b3510 <col:40> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x12f8b34d8 <col:40> 'int' lvalue ParmVar 0x12f8999a8 'green_shift' 'int'
    |-BinaryOperator 0x12f8b3660 <line:30:5, col:26> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12f8b35f8 <col:5, col:19> '<dependent type>' contains-errors lvalue .bmax
    | | `-CXXDependentScopeMemberExpr 0x12f8b35b0 <col:5, col:9> '<dependent type>' contains-errors lvalue ->client_pf
    | |   `-RecoveryExpr 0x12f8b3588 <col:5> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x12f8b3568 <col:5> 'int *' lvalue ParmVar 0x12f899528 'vs' 'int *'
    | `-DeclRefExpr 0x12f8b3640 <col:26> 'int' lvalue ParmVar 0x12f8998a8 'blue_max' 'int'
    |-BinaryOperator 0x12f8b37f0 <line:31:5, col:48> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12f8b3710 <col:5, col:19> '<dependent type>' contains-errors lvalue .bbits
    | | `-CXXDependentScopeMemberExpr 0x12f8b36c8 <col:5, col:9> '<dependent type>' contains-errors lvalue ->client_pf
    | |   `-RecoveryExpr 0x12f8b36a0 <col:5> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x12f8b3680 <col:5> 'int *' lvalue ParmVar 0x12f899528 'vs' 'int *'
    | `-CallExpr 0x12f8b37b0 <col:27, col:48> 'int'
    |   |-ImplicitCastExpr 0x12f8b3798 <col:27> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12f8b3758 <col:27> 'int ()' Function 0x12f8b2bc8 'hweight_long' 'int ()'
    |   `-ImplicitCastExpr 0x12f8b37d8 <col:40> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x12f8b3778 <col:40> 'int' lvalue ParmVar 0x12f8998a8 'blue_max' 'int'
    |-BinaryOperator 0x12f8b3908 <line:32:5, col:28> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12f8b38a0 <col:5, col:19> '<dependent type>' contains-errors lvalue .bshift
    | | `-CXXDependentScopeMemberExpr 0x12f8b3858 <col:5, col:9> '<dependent type>' contains-errors lvalue ->client_pf
    | |   `-RecoveryExpr 0x12f8b3830 <col:5> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x12f8b3810 <col:5> 'int *' lvalue ParmVar 0x12f899528 'vs' 'int *'
    | `-DeclRefExpr 0x12f8b38e8 <col:28> 'int' lvalue ParmVar 0x12f899a28 'blue_shift' 'int'
    |-BinaryOperator 0x12f8b3a90 <line:33:5, col:39> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12f8b39b8 <col:5, col:19> '<dependent type>' contains-errors lvalue .bmask
    | | `-CXXDependentScopeMemberExpr 0x12f8b3970 <col:5, col:9> '<dependent type>' contains-errors lvalue ->client_pf
    | |   `-RecoveryExpr 0x12f8b3948 <col:5> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x12f8b3928 <col:5> 'int *' lvalue ParmVar 0x12f899528 'vs' 'int *'
    | `-BinaryOperator 0x12f8b3a70 <col:27, col:39> 'int' '<<'
    |   |-ImplicitCastExpr 0x12f8b3a40 <col:27> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x12f8b3a00 <col:27> 'int' lvalue ParmVar 0x12f8998a8 'blue_max' 'int'
    |   `-ImplicitCastExpr 0x12f8b3a58 <col:39> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x12f8b3a20 <col:39> 'int' lvalue ParmVar 0x12f899a28 'blue_shift' 'int'
    |-BinaryOperator 0x12f8b3ba8 <line:34:5, col:36> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12f8b3b40 <col:5, col:19> '<dependent type>' contains-errors lvalue .bits_per_pixel
    | | `-CXXDependentScopeMemberExpr 0x12f8b3af8 <col:5, col:9> '<dependent type>' contains-errors lvalue ->client_pf
    | |   `-RecoveryExpr 0x12f8b3ad0 <col:5> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x12f8b3ab0 <col:5> 'int *' lvalue ParmVar 0x12f899528 'vs' 'int *'
    | `-DeclRefExpr 0x12f8b3b88 <col:36> 'int' lvalue ParmVar 0x12f8995a8 'bits_per_pixel' 'int'
    |-BinaryOperator 0x12f8b3d18 <line:35:5, col:54> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12f8b3c58 <col:5, col:19> '<dependent type>' contains-errors lvalue .bytes_per_pixel
    | | `-CXXDependentScopeMemberExpr 0x12f8b3c10 <col:5, col:9> '<dependent type>' contains-errors lvalue ->client_pf
    | |   `-RecoveryExpr 0x12f8b3be8 <col:5> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x12f8b3bc8 <col:5> 'int *' lvalue ParmVar 0x12f899528 'vs' 'int *'
    | `-BinaryOperator 0x12f8b3cf8 <col:37, col:54> 'int' '/'
    |   |-ImplicitCastExpr 0x12f8b3ce0 <col:37> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x12f8b3ca0 <col:37> 'int' lvalue ParmVar 0x12f8995a8 'bits_per_pixel' 'int'
    |   `-IntegerLiteral 0x12f8b3cc0 <col:54> 'int' 8
    |-BinaryOperator 0x12f8b3f10 <line:36:5, col:55> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12f8b3dc8 <col:5, col:19> '<dependent type>' contains-errors lvalue .depth
    | | `-CXXDependentScopeMemberExpr 0x12f8b3d80 <col:5, col:9> '<dependent type>' contains-errors lvalue ->client_pf
    | |   `-RecoveryExpr 0x12f8b3d58 <col:5> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x12f8b3d38 <col:5> 'int *' lvalue ParmVar 0x12f899528 'vs' 'int *'
    | `-ConditionalOperator 0x12f8b3ee0 <col:27, col:55> 'int'
    |   |-BinaryOperator 0x12f8b3e68 <col:27, col:45> 'int' '=='
    |   | |-ImplicitCastExpr 0x12f8b3e50 <col:27> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x12f8b3e10 <col:27> 'int' lvalue ParmVar 0x12f8995a8 'bits_per_pixel' 'int'
    |   | `-IntegerLiteral 0x12f8b3e30 <col:45> 'int' 32
    |   |-IntegerLiteral 0x12f8b3e88 <col:50> 'int' 24
    |   `-ImplicitCastExpr 0x12f8b3ec8 <col:55> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x12f8b3ea8 <col:55> 'int' lvalue ParmVar 0x12f8995a8 'bits_per_pixel' 'int'
    |-BinaryOperator 0x12f8b3fe0 <line:37:5, col:21> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12f8b3f78 <col:5, col:9> '<dependent type>' contains-errors lvalue ->client_be
    | | `-RecoveryExpr 0x12f8b3f50 <col:5> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12f8b3f30 <col:5> 'int *' lvalue ParmVar 0x12f899528 'vs' 'int *'
    | `-DeclRefExpr 0x12f8b3fc0 <col:21> 'int' lvalue ParmVar 0x12f8996a8 'big_endian_flag' 'int'
    |-CallExpr 0x12f8b4120 <line:39:5, col:28> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12f8b40e0 <col:5> 'int ()' Function 0x12f8b4028 'set_pixel_conversion' 'int ()'
    | `-RecoveryExpr 0x12f8b4100 <col:26> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12f8b4340 <line:41:5, col:42> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12f8b4228 <col:5> 'int ()' Function 0x12f8b4170 'graphic_hw_invalidate' 'int ()'
    | `-CXXDependentScopeMemberExpr 0x12f8b42f8 <col:27, col:39> '<dependent type>' contains-errors lvalue .con
    |   `-CXXDependentScopeMemberExpr 0x12f8b42b0 <col:27, col:35> '<dependent type>' contains-errors lvalue ->dcl
    |     `-CXXDependentScopeMemberExpr 0x12f8b4268 <col:27, col:31> '<dependent type>' contains-errors lvalue ->vd
    |       `-RecoveryExpr 0x12f8b4248 <col:27> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x13806a5d0 <line:42:5, col:38> '<dependent type>' contains-errors
      |-DeclRefExpr 0x13806a4b8 <col:5> 'int ()' Function 0x13806a400 'graphic_hw_update' 'int ()'
      `-CXXDependentScopeMemberExpr 0x13806a588 <col:23, col:35> '<dependent type>' contains-errors lvalue .con
        `-CXXDependentScopeMemberExpr 0x13806a540 <col:23, col:31> '<dependent type>' contains-errors lvalue ->dcl
          `-CXXDependentScopeMemberExpr 0x13806a4f8 <col:23, col:27> '<dependent type>' contains-errors lvalue ->vd
            `-RecoveryExpr 0x13806a4d8 <col:23> '<dependent type>' contains-errors lvalue
