TranslationUnitDecl 0x122055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1220564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x122055bd0 '__int128'
|-TypedefDecl 0x122056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x122055bf0 'unsigned __int128'
|-TypedefDecl 0x122126630 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x122126400 'struct __NSConstantString_tag'
|   `-Record 0x122056580 '__NSConstantString_tag'
|-TypedefDecl 0x122126698 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x122055d90 '__SVInt8_t'
|-TypedefDecl 0x122126700 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x122055db0 '__SVInt16_t'
|-TypedefDecl 0x122126768 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x122055dd0 '__SVInt32_t'
|-TypedefDecl 0x1221267d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x122055df0 '__SVInt64_t'
|-TypedefDecl 0x122126838 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x122055e10 '__SVUint8_t'
|-TypedefDecl 0x1221268a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x122055e30 '__SVUint16_t'
|-TypedefDecl 0x122126908 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x122055e50 '__SVUint32_t'
|-TypedefDecl 0x122126970 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x122055e70 '__SVUint64_t'
|-TypedefDecl 0x1221269d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x122055e90 '__SVFloat16_t'
|-TypedefDecl 0x122126a40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x122055eb0 '__SVFloat32_t'
|-TypedefDecl 0x122126aa8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x122055ed0 '__SVFloat64_t'
|-TypedefDecl 0x122126b10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x122055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x122126b78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x122055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x122126be0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x122055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x122126c48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x122055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x122126cb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x122055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x122126d18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x122055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x122126d80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x122055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x122126de8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x122055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x122126e50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x122055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x122126eb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x122056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x122126f20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x122056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x122126f88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x122056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x122126ff0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x122056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x122127058 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x122056090 '__clang_svint8x3_t'
|-TypedefDecl 0x1221270c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1220560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x122127128 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1220560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x122127190 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1220560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1221271f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x122056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x122127260 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x122056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1221272c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x122056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x122127330 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x122056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x122127398 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x122056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x122127c00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1220561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x122127c68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1220561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x122127cd0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1220561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x122127d38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x122056210 '__clang_svint8x4_t'
|-TypedefDecl 0x122127da0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x122056230 '__clang_svint16x4_t'
|-TypedefDecl 0x122127e08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x122056250 '__clang_svint32x4_t'
|-TypedefDecl 0x122127e70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x122056270 '__clang_svint64x4_t'
|-TypedefDecl 0x122127ed8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x122056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x122127f40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1220562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x122127fa8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1220562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x122128010 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1220562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x122128078 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x122056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1221280e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x122056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x122128148 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x122056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1221281b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x122056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x122128218 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x122056390 '__SVBool_t'
|-TypedefDecl 0x122128280 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1220563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1221282e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1220563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x122128350 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1220563f0 '__SVCount_t'
|-TypedefDecl 0x1221283f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1221283b0 'char *'
|   `-BuiltinType 0x1220556b0 'char'
|-TypedefDecl 0x122128468 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1221283b0 'char *'
|   `-BuiltinType 0x1220556b0 'char'
`-FunctionDecl 0x1221285f8 <dataset_diviso_filec/func11011_vuln.c:1:1, line:32:1> line:1:1 invalid make_filter_table 'int (int *)'
  |-ParmVarDecl 0x122128528 <col:20, col:34> col:34 invalid filter 'int *'
  `-CompoundStmt 0x12280a650 <line:2:1, line:32:1>
    |-DeclStmt 0x1221287c0 <line:3:3, col:25>
    | |-VarDecl 0x1221286c0 <col:3, col:7> col:7 used i_offset 'int'
    | `-VarDecl 0x122128740 <col:3, col:17> col:17 used j_offset 'int'
    |-DeclStmt 0x122128908 <line:4:3, col:24>
    | `-VarDecl 0x1221287f0 <col:3, col:23> col:7 used n_x 'int' cinit
    |   `-CXXDependentScopeMemberExpr 0x1221288c0 <col:13, col:23> '<dependent type>' contains-errors lvalue .n
    |     `-CXXDependentScopeMemberExpr 0x122128878 <col:13, col:21> '<dependent type>' contains-errors lvalue ->x
    |       `-RecoveryExpr 0x122128858 <col:13> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x122128a50 <line:5:3, col:24>
    | `-VarDecl 0x122128938 <col:3, col:23> col:7 used n_y 'int' cinit
    |   `-CXXDependentScopeMemberExpr 0x122128a08 <col:13, col:23> '<dependent type>' contains-errors lvalue .n
    |     `-CXXDependentScopeMemberExpr 0x1221289c0 <col:13, col:21> '<dependent type>' contains-errors lvalue ->y
    |       `-RecoveryExpr 0x1221289a0 <col:13> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x122141da8 <line:6:3, col:64>
    | `-VarDecl 0x122128a80 <col:3, col:8> col:8 used weights 'int *'
    |-ForStmt 0x12280a198 <line:8:3, line:29:7>
    | |-BinaryOperator 0x122141e00 <line:8:8, col:17> 'int' '='
    | | |-DeclRefExpr 0x122141dc0 <col:8> 'int' lvalue Var 0x1221286c0 'i_offset' 'int'
    | | `-IntegerLiteral 0x122141de0 <col:17> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x122141e98 <col:20, col:31> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x122141e20 <col:20> 'int' lvalue Var 0x1221286c0 'i_offset' 'int'
    | | `-RecoveryExpr 0x122141e78 <col:31> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x122141ed8 <col:42, col:50> 'int' postfix '++'
    | | `-DeclRefExpr 0x122141eb8 <col:42> 'int' lvalue Var 0x1221286c0 'i_offset' 'int'
    | `-ForStmt 0x12280a160 <line:9:5, line:29:7>
    |   |-BinaryOperator 0x122141f30 <line:9:10, col:19> 'int' '='
    |   | |-DeclRefExpr 0x122141ef0 <col:10> 'int' lvalue Var 0x122128740 'j_offset' 'int'
    |   | `-IntegerLiteral 0x122141f10 <col:19> 'int' 0
    |   |-<<<NULL>>>
    |   |-BinaryOperator 0x122141fc8 <col:22, col:33> 'int' contains-errors '<'
    |   | |-DeclRefExpr 0x122141f50 <col:22> 'int' lvalue Var 0x122128740 'j_offset' 'int'
    |   | `-RecoveryExpr 0x122141fa8 <col:33> '<dependent type>' contains-errors lvalue
    |   |-UnaryOperator 0x122142008 <col:44, col:52> 'int' postfix '++'
    |   | `-DeclRefExpr 0x122141fe8 <col:44> 'int' lvalue Var 0x122128740 'j_offset' 'int'
    |   `-CompoundStmt 0x12280a120 <line:10:7, line:29:7>
    |     |-DeclStmt 0x1221420a0 <line:11:9, col:22>
    |     | `-VarDecl 0x122142038 <col:9, col:16> col:16 used weight 'double'
    |     |-DeclStmt 0x122142210 <line:12:9, col:85>
    |     | `-VarDecl 0x1221420d0 <col:9, col:14> col:14 used pixel_weights 'int *'
    |     |-DeclStmt 0x1221422c8 <line:13:9, col:22>
    |     | `-VarDecl 0x122142240 <col:9, col:21> col:13 used total 'int' cinit
    |     |   `-IntegerLiteral 0x1221422a8 <col:21> 'int' 0
    |     |-DeclStmt 0x1221423f8 <line:14:9, col:17>
    |     | |-VarDecl 0x1221422f8 <col:9, col:13> col:13 used i 'int'
    |     | `-VarDecl 0x122142378 <col:9, col:16> col:16 used j 'int'
    |     |-ForStmt 0x122809eb8 <line:16:9, line:26:13>
    |     | |-BinaryOperator 0x122142450 <line:16:14, col:16> 'int' '='
    |     | | |-DeclRefExpr 0x122142410 <col:14> 'int' lvalue Var 0x1221422f8 'i' 'int'
    |     | | `-IntegerLiteral 0x122142430 <col:16> 'int' 0
    |     | |-<<<NULL>>>
    |     | |-BinaryOperator 0x1221424e0 <col:19, col:23> 'int' contains-errors '<'
    |     | | |-ImplicitCastExpr 0x1221424b0 <col:19> 'int' <LValueToRValue>
    |     | | | `-DeclRefExpr 0x122142470 <col:19> 'int' lvalue Var 0x1221422f8 'i' 'int'
    |     | | `-ImplicitCastExpr 0x1221424c8 <col:23> 'int' contains-errors <LValueToRValue>
    |     | |   `-DeclRefExpr 0x122142490 <col:23> 'int' contains-errors lvalue Var 0x122128938 'n_y' 'int'
    |     | |-UnaryOperator 0x122142520 <col:28, col:29> 'int' postfix '++'
    |     | | `-DeclRefExpr 0x122142500 <col:28> 'int' lvalue Var 0x1221422f8 'i' 'int'
    |     | `-ForStmt 0x122809e80 <line:17:11, line:26:13>
    |     |   |-BinaryOperator 0x122142578 <line:17:16, col:18> 'int' '='
    |     |   | |-DeclRefExpr 0x122142538 <col:16> 'int' lvalue Var 0x122142378 'j' 'int'
    |     |   | `-IntegerLiteral 0x122142558 <col:18> 'int' 0
    |     |   |-<<<NULL>>>
    |     |   |-BinaryOperator 0x122142608 <col:21, col:25> 'int' contains-errors '<'
    |     |   | |-ImplicitCastExpr 0x1221425d8 <col:21> 'int' <LValueToRValue>
    |     |   | | `-DeclRefExpr 0x122142598 <col:21> 'int' lvalue Var 0x122142378 'j' 'int'
    |     |   | `-ImplicitCastExpr 0x1221425f0 <col:25> 'int' contains-errors <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x1221425b8 <col:25> 'int' contains-errors lvalue Var 0x1221287f0 'n_x' 'int'
    |     |   |-UnaryOperator 0x122142648 <col:30, col:31> 'int' postfix '++'
    |     |   | `-DeclRefExpr 0x122142628 <col:30> 'int' lvalue Var 0x122142378 'j' 'int'
    |     |   `-CompoundStmt 0x122809e58 <line:18:13, line:26:13>
    |     |     |-BinaryOperator 0x122142b88 <line:19:15, line:21:56> 'double' contains-errors '='
    |     |     | |-DeclRefExpr 0x122142660 <line:19:15> 'double' lvalue Var 0x122142038 'weight' 'double'
    |     |     | `-BinaryOperator 0x122142b68 <col:24, line:21:56> '<dependent type>' contains-errors '+'
    |     |     |   |-BinaryOperator 0x122142b28 <line:19:24, line:21:48> '<dependent type>' contains-errors '*'
    |     |     |   | |-BinaryOperator 0x122142ae8 <line:19:24, line:21:32> '<dependent type>' contains-errors '*'
    |     |     |   | | |-BinaryOperator 0x122142a60 <line:19:24, line:20:62> '<dependent type>' contains-errors '*'
    |     |     |   | | | |-ArraySubscriptExpr 0x122142850 <line:19:24, col:62> '<dependent type>' contains-errors lvalue
    |     |     |   | | | | |-ImplicitCastExpr 0x122142838 <col:24, col:34> '<dependent type>' contains-errors <LValueToRValue>
    |     |     |   | | | | | `-CXXDependentScopeMemberExpr 0x1221426e8 <col:24, col:34> '<dependent type>' contains-errors lvalue .weights
    |     |     |   | | | | |   `-CXXDependentScopeMemberExpr 0x1221426a0 <col:24, col:32> '<dependent type>' contains-errors lvalue ->x
    |     |     |   | | | | |     `-RecoveryExpr 0x122142680 <col:24> '<dependent type>' contains-errors lvalue
    |     |     |   | | | | `-BinaryOperator 0x122142818 <col:42, col:61> 'int' contains-errors '+'
    |     |     |   | | | |   |-ParenExpr 0x1221427c0 <col:42, col:57> 'int' contains-errors
    |     |     |   | | | |   | `-BinaryOperator 0x1221427a0 <col:43, col:54> 'int' contains-errors '*'
    |     |     |   | | | |   |   |-ImplicitCastExpr 0x122142770 <col:43> 'int' <LValueToRValue>
    |     |     |   | | | |   |   | `-DeclRefExpr 0x122142730 <col:43> 'int' lvalue Var 0x122128740 'j_offset' 'int'
    |     |     |   | | | |   |   `-ImplicitCastExpr 0x122142788 <col:54> 'int' contains-errors <LValueToRValue>
    |     |     |   | | | |   |     `-DeclRefExpr 0x122142750 <col:54> 'int' contains-errors lvalue Var 0x1221287f0 'n_x' 'int'
    |     |     |   | | | |   `-ImplicitCastExpr 0x122142800 <col:61> 'int' <LValueToRValue>
    |     |     |   | | | |     `-DeclRefExpr 0x1221427e0 <col:61> 'int' lvalue Var 0x122142378 'j' 'int'
    |     |     |   | | | `-ArraySubscriptExpr 0x122142a40 <line:20:24, col:62> '<dependent type>' contains-errors lvalue
    |     |     |   | | |   |-ImplicitCastExpr 0x122142a28 <col:24, col:34> '<dependent type>' contains-errors <LValueToRValue>
    |     |     |   | | |   | `-CXXDependentScopeMemberExpr 0x1221428d8 <col:24, col:34> '<dependent type>' contains-errors lvalue .weights
    |     |     |   | | |   |   `-CXXDependentScopeMemberExpr 0x122142890 <col:24, col:32> '<dependent type>' contains-errors lvalue ->y
    |     |     |   | | |   |     `-RecoveryExpr 0x122142870 <col:24> '<dependent type>' contains-errors lvalue
    |     |     |   | | |   `-BinaryOperator 0x122142a08 <col:42, col:61> 'int' contains-errors '+'
    |     |     |   | | |     |-ParenExpr 0x1221429b0 <col:42, col:57> 'int' contains-errors
    |     |     |   | | |     | `-BinaryOperator 0x122142990 <col:43, col:54> 'int' contains-errors '*'
    |     |     |   | | |     |   |-ImplicitCastExpr 0x122142960 <col:43> 'int' <LValueToRValue>
    |     |     |   | | |     |   | `-DeclRefExpr 0x122142920 <col:43> 'int' lvalue Var 0x1221286c0 'i_offset' 'int'
    |     |     |   | | |     |   `-ImplicitCastExpr 0x122142978 <col:54> 'int' contains-errors <LValueToRValue>
    |     |     |   | | |     |     `-DeclRefExpr 0x122142940 <col:54> 'int' contains-errors lvalue Var 0x122128938 'n_y' 'int'
    |     |     |   | | |     `-ImplicitCastExpr 0x1221429f0 <col:61> 'int' <LValueToRValue>
    |     |     |   | | |       `-DeclRefExpr 0x1221429d0 <col:61> 'int' lvalue Var 0x1221422f8 'i' 'int'
    |     |     |   | | `-CXXDependentScopeMemberExpr 0x122142aa0 <line:21:24, col:32> '<dependent type>' contains-errors lvalue ->overall_alpha
    |     |     |   | |   `-RecoveryExpr 0x122142a80 <col:24> '<dependent type>' contains-errors lvalue
    |     |     |   | `-IntegerLiteral 0x122142b08 <col:48> 'int' 65536
    |     |     |   `-FloatingLiteral 0x122142b48 <col:56> 'double' 5.000000e-01
    |     |     |-CompoundAssignOperator 0x122809c40 <line:23:15, col:29> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |     |     | |-DeclRefExpr 0x122142ba8 <col:15> 'int' lvalue Var 0x122142240 'total' 'int'
    |     |     | `-CStyleCastExpr 0x122809c18 <col:24, col:29> 'int' <FloatingToIntegral>
    |     |     |   `-ImplicitCastExpr 0x122809c00 <col:29> 'double' <LValueToRValue> part_of_explicit_cast
    |     |     |     `-DeclRefExpr 0x122142bc8 <col:29> 'double' lvalue Var 0x122142038 'weight' 'double'
    |     |     `-BinaryOperator 0x122809e38 <line:25:15, col:48> 'int' contains-errors '='
    |     |       |-UnaryOperator 0x122809dd0 <col:15, col:44> 'int' contains-errors lvalue prefix '*' cannot overflow
    |     |       | `-ParenExpr 0x122809db0 <col:16, col:44> 'int *' contains-errors
    |     |       |   `-BinaryOperator 0x122809d90 <col:17, col:43> 'int *' contains-errors '+'
    |     |       |     |-BinaryOperator 0x122809d38 <col:17, col:39> 'int *' contains-errors '+'
    |     |       |     | |-ImplicitCastExpr 0x122809d20 <col:17> 'int *' <LValueToRValue>
    |     |       |     | | `-DeclRefExpr 0x122809c70 <col:17> 'int *' lvalue Var 0x1221420d0 'pixel_weights' 'int *'
    |     |       |     | `-BinaryOperator 0x122809d00 <col:33, col:39> 'int' contains-errors '*'
    |     |       |     |   |-ImplicitCastExpr 0x122809cd0 <col:33> 'int' contains-errors <LValueToRValue>
    |     |       |     |   | `-DeclRefExpr 0x122809c90 <col:33> 'int' contains-errors lvalue Var 0x1221287f0 'n_x' 'int'
    |     |       |     |   `-ImplicitCastExpr 0x122809ce8 <col:39> 'int' <LValueToRValue>
    |     |       |     |     `-DeclRefExpr 0x122809cb0 <col:39> 'int' lvalue Var 0x1221422f8 'i' 'int'
    |     |       |     `-ImplicitCastExpr 0x122809d78 <col:43> 'int' <LValueToRValue>
    |     |       |       `-DeclRefExpr 0x122809d58 <col:43> 'int' lvalue Var 0x122142378 'j' 'int'
    |     |       `-ImplicitCastExpr 0x122809e20 <col:48> 'int' <FloatingToIntegral>
    |     |         `-ImplicitCastExpr 0x122809e08 <col:48> 'double' <LValueToRValue>
    |     |           `-DeclRefExpr 0x122809de8 <col:48> 'double' lvalue Var 0x122142038 'weight' 'double'
    |     `-CallExpr 0x12280a0d8 <line:28:9, col:77> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x122809fd0 <col:9> 'int ()' Function 0x122809f18 'correct_total' 'int ()'
    |       |-DeclRefExpr 0x122809ff0 <col:24> 'int *' lvalue Var 0x1221420d0 'pixel_weights' 'int *'
    |       |-DeclRefExpr 0x12280a010 <col:39> 'int' contains-errors lvalue Var 0x1221287f0 'n_x' 'int'
    |       |-DeclRefExpr 0x12280a030 <col:44> 'int' contains-errors lvalue Var 0x122128938 'n_y' 'int'
    |       |-DeclRefExpr 0x12280a050 <col:49> 'int' lvalue Var 0x122142240 'total' 'int'
    |       `-CXXDependentScopeMemberExpr 0x12280a090 <col:56, col:64> '<dependent type>' contains-errors lvalue ->overall_alpha
    |         `-RecoveryExpr 0x12280a070 <col:56> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x12280a640 <line:31:3, col:10>
      `-ImplicitCastExpr 0x12280a208 <col:10> 'int' <PointerToIntegral>
        `-ImplicitCastExpr 0x12280a1f0 <col:10> 'int *' <LValueToRValue>
          `-DeclRefExpr 0x12280a1d0 <col:10> 'int *' lvalue Var 0x122128a80 'weights' 'int *'
