TranslationUnitDecl 0x129855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1298564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x129855bd0 '__int128'
|-TypedefDecl 0x129856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x129855bf0 'unsigned __int128'
|-TypedefDecl 0x12a00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12a00bc00 'struct __NSConstantString_tag'
|   `-Record 0x129856580 '__NSConstantString_tag'
|-TypedefDecl 0x12a00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x129855d90 '__SVInt8_t'
|-TypedefDecl 0x12a00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x129855db0 '__SVInt16_t'
|-TypedefDecl 0x12a00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x129855dd0 '__SVInt32_t'
|-TypedefDecl 0x12a00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x129855df0 '__SVInt64_t'
|-TypedefDecl 0x12a00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x129855e10 '__SVUint8_t'
|-TypedefDecl 0x12a00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x129855e30 '__SVUint16_t'
|-TypedefDecl 0x12a00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x129855e50 '__SVUint32_t'
|-TypedefDecl 0x12a00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x129855e70 '__SVUint64_t'
|-TypedefDecl 0x12a00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x129855e90 '__SVFloat16_t'
|-TypedefDecl 0x12a00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x129855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12a00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x129855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12a00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x129855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12a00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x129855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12a00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x129855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12a00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x129855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12a00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x129855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12a00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x129855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12a00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x129855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12a00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x129855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12a00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x129855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12a00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x129856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12a00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x129856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12a00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x129856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12a00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x129856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12a00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x129856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12a00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1298560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12a00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1298560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12a00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1298560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12a00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x129856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12a00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x129856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12a00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x129856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12a00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x129856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12a00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x129856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12a00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1298561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12a00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1298561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12a00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1298561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12a00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x129856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12a00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x129856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12a00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x129856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12a00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x129856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12a00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x129856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12a00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1298562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12a00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1298562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12a00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1298562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12a00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x129856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12a00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x129856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12a00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x129856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12a00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x129856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12a00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x129856390 '__SVBool_t'
|-TypedefDecl 0x12a00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1298563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12a00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1298563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12a00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1298563f0 '__SVCount_t'
|-TypedefDecl 0x12a00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12a00dbb0 'char *'
|   `-BuiltinType 0x1298556b0 'char'
|-TypedefDecl 0x12a00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12a00dbb0 'char *'
|   `-BuiltinType 0x1298556b0 'char'
|-FunctionDecl 0x12a026688 <dataset_diviso_filec/func8575_nonvuln.c:1:1, line:26:1> line:1:1 archive_read_format_rar_options 'int (struct archive_read *, const char *, const char *)'
| |-ParmVarDecl 0x12a00e248 <col:33, col:54> col:54 used a 'struct archive_read *'
| |-ParmVarDecl 0x12a00e2c8 <line:2:5, col:17> col:17 used key 'const char *'
| |-ParmVarDecl 0x12a00e348 <col:22, col:34> col:34 used val 'const char *'
| `-CompoundStmt 0x12a02ed30 <line:3:1, line:26:1>
|   |-DeclStmt 0x12a026978 <line:4:3, col:18>
|   | |-RecordDecl 0x12a026790 <col:3, col:10> col:10 struct rar
|   | `-VarDecl 0x12a0268f8 <col:3, col:15> col:15 used rar 'struct rar *'
|   |-DeclStmt 0x12a026a60 <line:5:3, col:27>
|   | `-VarDecl 0x12a0269a8 <col:3, col:13> col:7 used ret 'int' cinit
|   |   `-RecoveryExpr 0x12a026a40 <col:13> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x12a026c30 <line:7:3, col:39> 'struct rar *' contains-errors '='
|   | |-DeclRefExpr 0x12a026a78 <col:3> 'struct rar *' lvalue Var 0x12a0268f8 'rar' 'struct rar *'
|   | `-CStyleCastExpr 0x12a026c08 <col:9, col:39> 'struct rar *' contains-errors <Dependent>
|   |   `-ParenExpr 0x12a026be8 <col:23, col:39> '<dependent type>' contains-errors lvalue
|   |     `-CXXDependentScopeMemberExpr 0x12a026af8 <col:24, col:35> '<dependent type>' contains-errors lvalue ->data
|   |       `-RecoveryExpr 0x12a026ad0 <col:24, col:27> '<dependent type>' contains-errors lvalue
|   |         `-DeclRefExpr 0x12a026a98 <col:24> 'struct archive_read *' lvalue ParmVar 0x12a00e248 'a' 'struct archive_read *'
|   `-IfStmt 0x12a02ecf8 <line:8:3, line:22:3>
|     |-BinaryOperator 0x12a027020 <line:8:7, col:30> 'int' '=='
|     | |-CallExpr 0x12a026f88 <col:7, col:24> 'int'
|     | | |-ImplicitCastExpr 0x12a026f70 <col:7> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|     | | | `-DeclRefExpr 0x12a026e70 <col:7> 'int (const char *, const char *)' Function 0x12a026c90 'strcmp' 'int (const char *, const char *)'
|     | | |-ImplicitCastExpr 0x12a026fb8 <col:14> 'const char *' <LValueToRValue>
|     | | | `-DeclRefExpr 0x12a026e90 <col:14> 'const char *' lvalue ParmVar 0x12a00e2c8 'key' 'const char *'
|     | | `-ImplicitCastExpr 0x12a026fe8 <col:19> 'const char *' <NoOp>
|     | |   `-ImplicitCastExpr 0x12a026fd0 <col:19> 'char *' <ArrayToPointerDecay>
|     | |     `-StringLiteral 0x12a026ef0 <col:19> 'char[4]' lvalue "STR"
|     | `-IntegerLiteral 0x12a027000 <col:30> 'int' 0
|     `-CompoundStmt 0x12a02ecd8 <col:33, line:22:3>
|       |-IfStmt 0x12a02ec40 <line:9:5, line:20:5> has_else
|       | |-BinaryOperator 0x12a027268 <line:9:9, col:34> 'int' contains-errors '||'
|       | | |-BinaryOperator 0x12a0271c0 <col:9, col:16> 'int' contains-errors '=='
|       | | | |-DeclRefExpr 0x12a027040 <col:9> 'const char *' lvalue ParmVar 0x12a00e348 'val' 'const char *'
|       | | | `-RecoveryExpr 0x12a0271a0 <col:16> '<dependent type>' contains-errors lvalue
|       | | `-BinaryOperator 0x12a027248 <col:24, col:34> 'int' '=='
|       | |   |-ImplicitCastExpr 0x12a027230 <col:24, col:29> 'int' <IntegralCast>
|       | |   | `-ImplicitCastExpr 0x12a027218 <col:24, col:29> 'char' <LValueToRValue>
|       | |   |   `-ArraySubscriptExpr 0x12a0271f8 <col:24, col:29> 'const char' lvalue
|       | |   |     |-ImplicitCastExpr 0x12a0271e0 <col:24> 'const char *' <LValueToRValue>
|       | |   |     | `-DeclRefExpr 0x12a027098 <col:24> 'const char *' lvalue ParmVar 0x12a00e348 'val' 'const char *'
|       | |   |     `-IntegerLiteral 0x12a0270b8 <col:28> 'int' 0
|       | |   `-IntegerLiteral 0x12a027110 <col:34> 'int' 0
|       | |-CallExpr 0x12a0274c8 <line:10:7, line:11:16> '<dependent type>' contains-errors
|       | | |-DeclRefExpr 0x12a0273a0 <line:10:7> 'int ()' Function 0x12a0272e8 'archive_set_error' 'int ()'
|       | | |-UnaryOperator 0x12a027420 <col:25, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow
|       | | | `-RecoveryExpr 0x12a0273f8 <col:26, col:29> '<dependent type>' contains-errors lvalue
|       | | |   `-DeclRefExpr 0x12a0273c0 <col:26> 'struct archive_read *' lvalue ParmVar 0x12a00e248 'a' 'struct archive_read *'
|       | | |-RecoveryExpr 0x12a0274a8 <col:38> '<dependent type>' contains-errors lvalue
|       | | `-StringLiteral 0x12a027450 <line:11:11> 'char[4]' lvalue "STR"
|       | `-CompoundStmt 0x12a02ec20 <line:12:10, line:20:5>
|       |   |-BinaryOperator 0x12a02e9c8 <line:13:7, line:15:34> '<dependent type>' contains-errors '='
|       |   | |-RecoveryExpr 0x12a027538 <line:13:7, col:12> '<dependent type>' contains-errors lvalue
|       |   | | `-DeclRefExpr 0x12a027500 <col:7> 'struct rar *' lvalue Var 0x12a0268f8 'rar' 'struct rar *'
|       |   | `-CallExpr 0x12a02e990 <line:14:11, line:15:34> '<dependent type>' contains-errors
|       |   |   |-DeclRefExpr 0x12a02e8b8 <line:14:11> 'int ()' Function 0x12a02e800 'archive_string_conversion_from_charset' 'int ()'
|       |   |   |-UnaryOperator 0x12a02e938 <line:15:15, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
|       |   |   | `-RecoveryExpr 0x12a02e910 <col:16, col:19> '<dependent type>' contains-errors lvalue
|       |   |   |   `-DeclRefExpr 0x12a02e8d8 <col:16> 'struct archive_read *' lvalue ParmVar 0x12a00e248 'a' 'struct archive_read *'
|       |   |   |-DeclRefExpr 0x12a02e950 <col:28> 'const char *' lvalue ParmVar 0x12a00e348 'val' 'const char *'
|       |   |   `-IntegerLiteral 0x12a02e970 <col:33> 'int' 0
|       |   `-IfStmt 0x12a02ebf0 <line:16:7, line:19:15> has_else
|       |     |-BinaryOperator 0x12a02eaa0 <line:16:11, col:29> 'int' contains-errors '!='
|       |     | |-RecoveryExpr 0x12a02ea20 <col:11, col:16> '<dependent type>' contains-errors lvalue
|       |     | | `-DeclRefExpr 0x12a02e9e8 <col:11> 'struct rar *' lvalue Var 0x12a0268f8 'rar' 'struct rar *'
|       |     | `-RecoveryExpr 0x12a02ea80 <col:29> '<dependent type>' contains-errors lvalue
|       |     |-BinaryOperator 0x12a02eb38 <line:17:9, col:15> 'int' contains-errors '='
|       |     | |-DeclRefExpr 0x12a02eac0 <col:9> 'int' contains-errors lvalue Var 0x12a0269a8 'ret' 'int'
|       |     | `-RecoveryExpr 0x12a02eb18 <col:15> '<dependent type>' contains-errors lvalue
|       |     `-BinaryOperator 0x12a02ebd0 <line:19:9, col:15> 'int' contains-errors '='
|       |       |-DeclRefExpr 0x12a02eb58 <col:9> 'int' contains-errors lvalue Var 0x12a0269a8 'ret' 'int'
|       |       `-RecoveryExpr 0x12a02ebb0 <col:15> '<dependent type>' contains-errors lvalue
|       `-ReturnStmt 0x12a02ecc8 <line:21:5, col:16>
|         `-ImplicitCastExpr 0x12a02ecb0 <col:12, col:16> 'int' contains-errors <LValueToRValue>
|           `-ParenExpr 0x12a02ec90 <col:12, col:16> 'int' contains-errors lvalue
|             `-DeclRefExpr 0x12a02ec70 <col:13> 'int' contains-errors lvalue Var 0x12a0269a8 'ret' 'int'
`-FunctionDecl 0x12a026c90 <line:8:7> col:7 implicit used strcmp 'int (const char *, const char *)' extern
  |-ParmVarDecl 0x12a026d90 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x12a026df8 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x12a026d38 <<invalid sloc>> Implicit 887
