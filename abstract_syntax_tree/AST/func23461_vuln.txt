TranslationUnitDecl 0x123055008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x123055eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1230555d0 '__int128'
|-TypedefDecl 0x123055f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1230555f0 'unsigned __int128'
|-TypedefDecl 0x12380c430 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12380c200 'struct __NSConstantString_tag'
|   `-Record 0x123055f80 '__NSConstantString_tag'
|-TypedefDecl 0x12380c498 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x123055790 '__SVInt8_t'
|-TypedefDecl 0x12380c500 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1230557b0 '__SVInt16_t'
|-TypedefDecl 0x12380c568 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1230557d0 '__SVInt32_t'
|-TypedefDecl 0x12380c5d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1230557f0 '__SVInt64_t'
|-TypedefDecl 0x12380c638 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x123055810 '__SVUint8_t'
|-TypedefDecl 0x12380c6a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x123055830 '__SVUint16_t'
|-TypedefDecl 0x12380c708 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x123055850 '__SVUint32_t'
|-TypedefDecl 0x12380c770 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x123055870 '__SVUint64_t'
|-TypedefDecl 0x12380c7d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x123055890 '__SVFloat16_t'
|-TypedefDecl 0x12380c840 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1230558b0 '__SVFloat32_t'
|-TypedefDecl 0x12380c8a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1230558d0 '__SVFloat64_t'
|-TypedefDecl 0x12380c910 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1230558f0 '__SVBfloat16_t'
|-TypedefDecl 0x12380c978 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x123055910 '__clang_svint8x2_t'
|-TypedefDecl 0x12380c9e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x123055930 '__clang_svint16x2_t'
|-TypedefDecl 0x12380ca48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x123055950 '__clang_svint32x2_t'
|-TypedefDecl 0x12380cab0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x123055970 '__clang_svint64x2_t'
|-TypedefDecl 0x12380cb18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x123055990 '__clang_svuint8x2_t'
|-TypedefDecl 0x12380cb80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1230559b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12380cbe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1230559d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12380cc50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1230559f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12380ccb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x123055a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12380cd20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x123055a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12380cd88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x123055a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12380cdf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x123055a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12380ce58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x123055a90 '__clang_svint8x3_t'
|-TypedefDecl 0x12380cec0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x123055ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x12380cf28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x123055ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x12380cf90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x123055af0 '__clang_svint64x3_t'
|-TypedefDecl 0x12380cff8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x123055b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x12380d060 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x123055b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x12380d0c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x123055b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x12380d130 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x123055b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x12380d198 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x123055b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12380da00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x123055bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12380da68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x123055bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12380dad0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x123055bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12380db38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x123055c10 '__clang_svint8x4_t'
|-TypedefDecl 0x12380dba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x123055c30 '__clang_svint16x4_t'
|-TypedefDecl 0x12380dc08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x123055c50 '__clang_svint32x4_t'
|-TypedefDecl 0x12380dc70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x123055c70 '__clang_svint64x4_t'
|-TypedefDecl 0x12380dcd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x123055c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x12380dd40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x123055cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12380dda8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x123055cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12380de10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x123055cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12380de78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x123055d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12380dee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x123055d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12380df48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x123055d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12380dfb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x123055d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12380e018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x123055d90 '__SVBool_t'
|-TypedefDecl 0x12380e080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x123055db0 '__clang_svboolx2_t'
|-TypedefDecl 0x12380e0e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x123055dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x12380e150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x123055df0 '__SVCount_t'
|-TypedefDecl 0x12380e1f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12380e1b0 'char *'
|   `-BuiltinType 0x1230550b0 'char'
|-TypedefDecl 0x12380e268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12380e1b0 'char *'
|   `-BuiltinType 0x1230550b0 'char'
|-FunctionDecl 0x12380e3f8 <dataset_diviso_filec/func23461_vuln.c:1:1, line:59:1> line:1:15 invalid asn1_time_to_time_t 'int (int *)' static
| |-ParmVarDecl 0x12380e328 <col:35, col:50> col:50 referenced invalid timestr 'int *'
| `-CompoundStmt 0x12382cbe8 <line:2:1, line:59:1>
|   |-ImplicitCastExpr 0x12380e4f0 <line:5:2> '<dependent type>' contains-errors <LValueToRValue>
|   | `-RecoveryExpr 0x12380e4c8 <col:2> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x12380e4a8 <col:2> 'int *' lvalue ParmVar 0x12380e328 'timestr' 'int *'
|   |-DeclStmt 0x1238282a8 <line:6:2, col:19>
|   | |-RecordDecl 0x12380e508 <col:2, col:9> col:9 struct tm
|   | `-VarDecl 0x12380e608 <col:2, col:12> col:12 referenced invalid thetime 'struct tm'
|   |-DeclStmt 0x123828340 <line:7:2, col:15>
|   | `-VarDecl 0x1238282d8 <col:2, col:9> col:9 used strbuf 'char *'
|   |-DeclStmt 0x1238283d8 <line:8:2, col:15>
|   | `-VarDecl 0x123828370 <col:2, col:9> col:9 used thestr 'char *'
|   |-DeclStmt 0x1238284a8 <line:9:2, col:19>
|   | `-VarDecl 0x123828408 <col:2, col:18> col:7 used gmadjust 'long' cinit
|   |   `-ImplicitCastExpr 0x123828490 <col:18> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x123828470 <col:18> 'int' 0
|   |-IfStmt 0x123828760 <line:11:2, line:14:2>
|   | |-BinaryOperator 0x123828548 <line:11:6, col:24> 'int' contains-errors '<'
|   | | |-CXXDependentScopeMemberExpr 0x1238284e0 <col:6, col:15> '<dependent type>' contains-errors lvalue ->length
|   | | | `-RecoveryExpr 0x1238284c0 <col:6> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x123828528 <col:24> 'int' 13
|   | `-CompoundStmt 0x123828750 <col:28, line:14:2>
|   |-BinaryOperator 0x1238289d8 <line:16:2, col:40> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x123828780 <col:2> 'char *' lvalue Var 0x1238282d8 'strbuf' 'char *'
|   | `-ImplicitCastExpr 0x1238289c0 <col:11, col:40> 'char *' contains-errors <IntegralToPointer>
|   |   `-CallExpr 0x123828998 <col:11, col:40> 'int' contains-errors
|   |     |-ImplicitCastExpr 0x123828980 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x123828880 <col:11> 'int ()' Function 0x1238287c8 'estrdup' 'int ()'
|   |     `-CStyleCastExpr 0x123828920 <col:19, col:36> 'char *' contains-errors <Dependent>
|   |       `-CXXDependentScopeMemberExpr 0x1238288c0 <col:27, col:36> '<dependent type>' contains-errors lvalue ->data
|   |         `-RecoveryExpr 0x1238288a0 <col:27> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x123828d70 <line:18:2, col:37> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x123828c98 <col:2> 'void *(void *, int, unsigned long)' Function 0x123828a48 'memset' 'void *(void *, int, unsigned long)'
|   | |-UnaryOperator 0x123828cd8 <col:9, col:10> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x123828cb8 <col:10> '<dependent type>' contains-errors lvalue
|   | |-IntegerLiteral 0x123828cf0 <col:19> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x123828d50 <col:22, col:36> 'unsigned long' contains-errors sizeof
|   |   `-ParenExpr 0x123828d30 <col:28, col:36> '<dependent type>' contains-errors lvalue
|   |     `-RecoveryExpr 0x123828d10 <col:29> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x123828eb0 <line:22:2, col:38> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x123828da8 <col:2> 'char *' lvalue Var 0x123828370 'thestr' 'char *'
|   | `-BinaryOperator 0x123828e90 <col:11, col:38> '<dependent type>' contains-errors '-'
|   |   |-BinaryOperator 0x123828e50 <col:11, col:29> '<dependent type>' contains-errors '+'
|   |   | |-DeclRefExpr 0x123828dc8 <col:11> 'char *' lvalue Var 0x1238282d8 'strbuf' 'char *'
|   |   | `-CXXDependentScopeMemberExpr 0x123828e08 <col:20, col:29> '<dependent type>' contains-errors lvalue ->length
|   |   |   `-RecoveryExpr 0x123828de8 <col:20> '<dependent type>' contains-errors lvalue
|   |   `-IntegerLiteral 0x123828e70 <col:38> 'int' 3
|   |-BinaryOperator 0x1238290d8 <line:24:2, col:30> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x123828f18 <col:2, col:10> '<dependent type>' contains-errors lvalue .tm_sec
|   | | `-RecoveryExpr 0x123828ef0 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x123828ed0 <col:2> 'struct tm' lvalue Var 0x12380e608 'thetime' 'struct tm'
|   | `-CallExpr 0x123829098 <col:19, col:30> 'int'
|   |   |-ImplicitCastExpr 0x123829080 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x123829040 <col:19> 'int ()' Function 0x123828f88 'atoi' 'int ()'
|   |   `-ImplicitCastExpr 0x1238290c0 <col:24> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x123829060 <col:24> 'char *' lvalue Var 0x123828370 'thestr' 'char *'
|   |-BinaryOperator 0x123829178 <line:25:2, col:12> 'char' '='
|   | |-UnaryOperator 0x123829130 <col:2, col:3> 'char' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x123829118 <col:3> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1238290f8 <col:3> 'char *' lvalue Var 0x123828370 'thestr' 'char *'
|   | `-ImplicitCastExpr 0x123829160 <col:12> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x123829148 <col:12> 'int' 0
|   |-CompoundAssignOperator 0x12382ba00 <line:26:2, col:12> 'char *' '-=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   | |-DeclRefExpr 0x123829198 <col:2> 'char *' lvalue Var 0x123828370 'thestr' 'char *'
|   | `-IntegerLiteral 0x1238291b8 <col:12> 'int' 2
|   |-BinaryOperator 0x12382bb58 <line:27:2, col:30> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x12382ba78 <col:2, col:10> '<dependent type>' contains-errors lvalue .tm_min
|   | | `-RecoveryExpr 0x12382ba50 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x12382ba30 <col:2> 'struct tm' lvalue Var 0x12380e608 'thetime' 'struct tm'
|   | `-CallExpr 0x12382bb18 <col:19, col:30> 'int'
|   |   |-ImplicitCastExpr 0x12382bb00 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x12382bac0 <col:19> 'int ()' Function 0x123828f88 'atoi' 'int ()'
|   |   `-ImplicitCastExpr 0x12382bb40 <col:24> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x12382bae0 <col:24> 'char *' lvalue Var 0x123828370 'thestr' 'char *'
|   |-BinaryOperator 0x12382bbf8 <line:28:2, col:12> 'char' '='
|   | |-UnaryOperator 0x12382bbb0 <col:2, col:3> 'char' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x12382bb98 <col:3> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12382bb78 <col:3> 'char *' lvalue Var 0x123828370 'thestr' 'char *'
|   | `-ImplicitCastExpr 0x12382bbe0 <col:12> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x12382bbc8 <col:12> 'int' 0
|   |-CompoundAssignOperator 0x12382bc58 <line:29:2, col:12> 'char *' '-=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   | |-DeclRefExpr 0x12382bc18 <col:2> 'char *' lvalue Var 0x123828370 'thestr' 'char *'
|   | `-IntegerLiteral 0x12382bc38 <col:12> 'int' 2
|   |-BinaryOperator 0x12382bdb0 <line:30:2, col:31> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x12382bcd0 <col:2, col:10> '<dependent type>' contains-errors lvalue .tm_hour
|   | | `-RecoveryExpr 0x12382bca8 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x12382bc88 <col:2> 'struct tm' lvalue Var 0x12380e608 'thetime' 'struct tm'
|   | `-CallExpr 0x12382bd70 <col:20, col:31> 'int'
|   |   |-ImplicitCastExpr 0x12382bd58 <col:20> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x12382bd18 <col:20> 'int ()' Function 0x123828f88 'atoi' 'int ()'
|   |   `-ImplicitCastExpr 0x12382bd98 <col:25> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x12382bd38 <col:25> 'char *' lvalue Var 0x123828370 'thestr' 'char *'
|   |-BinaryOperator 0x12382be50 <line:31:2, col:12> 'char' '='
|   | |-UnaryOperator 0x12382be08 <col:2, col:3> 'char' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x12382bdf0 <col:3> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12382bdd0 <col:3> 'char *' lvalue Var 0x123828370 'thestr' 'char *'
|   | `-ImplicitCastExpr 0x12382be38 <col:12> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x12382be20 <col:12> 'int' 0
|   |-CompoundAssignOperator 0x12382beb0 <line:32:2, col:12> 'char *' '-=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   | |-DeclRefExpr 0x12382be70 <col:2> 'char *' lvalue Var 0x123828370 'thestr' 'char *'
|   | `-IntegerLiteral 0x12382be90 <col:12> 'int' 2
|   |-BinaryOperator 0x12382c008 <line:33:2, col:31> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x12382bf28 <col:2, col:10> '<dependent type>' contains-errors lvalue .tm_mday
|   | | `-RecoveryExpr 0x12382bf00 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x12382bee0 <col:2> 'struct tm' lvalue Var 0x12380e608 'thetime' 'struct tm'
|   | `-CallExpr 0x12382bfc8 <col:20, col:31> 'int'
|   |   |-ImplicitCastExpr 0x12382bfb0 <col:20> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x12382bf70 <col:20> 'int ()' Function 0x123828f88 'atoi' 'int ()'
|   |   `-ImplicitCastExpr 0x12382bff0 <col:25> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x12382bf90 <col:25> 'char *' lvalue Var 0x123828370 'thestr' 'char *'
|   |-BinaryOperator 0x12382c0a8 <line:34:2, col:12> 'char' '='
|   | |-UnaryOperator 0x12382c060 <col:2, col:3> 'char' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x12382c048 <col:3> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12382c028 <col:3> 'char *' lvalue Var 0x123828370 'thestr' 'char *'
|   | `-ImplicitCastExpr 0x12382c090 <col:12> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x12382c078 <col:12> 'int' 0
|   |-CompoundAssignOperator 0x12382c108 <line:35:2, col:12> 'char *' '-=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   | |-DeclRefExpr 0x12382c0c8 <col:2> 'char *' lvalue Var 0x123828370 'thestr' 'char *'
|   | `-IntegerLiteral 0x12382c0e8 <col:12> 'int' 2
|   |-BinaryOperator 0x12382c2a0 <line:36:2, col:32> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x12382c180 <col:2, col:10> '<dependent type>' contains-errors lvalue .tm_mon
|   | | `-RecoveryExpr 0x12382c158 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x12382c138 <col:2> 'struct tm' lvalue Var 0x12380e608 'thetime' 'struct tm'
|   | `-BinaryOperator 0x12382c280 <col:19, col:32> 'int' '-'
|   |   |-CallExpr 0x12382c220 <col:19, col:30> 'int'
|   |   | |-ImplicitCastExpr 0x12382c208 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x12382c1c8 <col:19> 'int ()' Function 0x123828f88 'atoi' 'int ()'
|   |   | `-ImplicitCastExpr 0x12382c248 <col:24> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x12382c1e8 <col:24> 'char *' lvalue Var 0x123828370 'thestr' 'char *'
|   |   `-IntegerLiteral 0x12382c260 <col:32> 'int' 1
|   |-BinaryOperator 0x12382c340 <line:37:2, col:12> 'char' '='
|   | |-UnaryOperator 0x12382c2f8 <col:2, col:3> 'char' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x12382c2e0 <col:3> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12382c2c0 <col:3> 'char *' lvalue Var 0x123828370 'thestr' 'char *'
|   | `-ImplicitCastExpr 0x12382c328 <col:12> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x12382c310 <col:12> 'int' 0
|   |-CompoundAssignOperator 0x12382c3a0 <line:38:2, col:12> 'char *' '-=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   | |-DeclRefExpr 0x12382c360 <col:2> 'char *' lvalue Var 0x123828370 'thestr' 'char *'
|   | `-IntegerLiteral 0x12382c380 <col:12> 'int' 2
|   |-BinaryOperator 0x12382c4f8 <line:39:2, col:31> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x12382c418 <col:2, col:10> '<dependent type>' contains-errors lvalue .tm_year
|   | | `-RecoveryExpr 0x12382c3f0 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x12382c3d0 <col:2> 'struct tm' lvalue Var 0x12380e608 'thetime' 'struct tm'
|   | `-CallExpr 0x12382c4b8 <col:20, col:31> 'int'
|   |   |-ImplicitCastExpr 0x12382c4a0 <col:20> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x12382c460 <col:20> 'int ()' Function 0x123828f88 'atoi' 'int ()'
|   |   `-ImplicitCastExpr 0x12382c4e0 <col:25> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x12382c480 <col:25> 'char *' lvalue Var 0x123828370 'thestr' 'char *'
|   |-IfStmt 0x12382c6b8 <line:41:2, line:43:2>
|   | |-BinaryOperator 0x12382c5a0 <line:41:6, col:24> 'int' contains-errors '<'
|   | | |-CXXDependentScopeMemberExpr 0x12382c538 <col:6, col:14> '<dependent type>' contains-errors lvalue .tm_year
|   | | | `-RecoveryExpr 0x12382c518 <col:6> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x12382c580 <col:24> 'int' 68
|   | `-CompoundStmt 0x12382c6a0 <col:28, line:43:2>
|   |   `-CompoundAssignOperator 0x12382c670 <line:42:3, col:22> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |     |-CXXDependentScopeMemberExpr 0x12382c608 <col:3, col:11> '<dependent type>' contains-errors lvalue .tm_year
|   |     | `-RecoveryExpr 0x12382c5e0 <col:3> '<dependent type>' contains-errors lvalue
|   |     |   `-DeclRefExpr 0x12382c5c0 <col:3> 'struct tm' lvalue Var 0x12380e608 'thetime' 'struct tm'
|   |     `-IntegerLiteral 0x12382c650 <col:22> 'int' 100
|   |-BinaryOperator 0x12382c7a0 <line:45:2, col:22> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x12382c720 <col:2, col:10> '<dependent type>' contains-errors lvalue .tm_isdst
|   | | `-RecoveryExpr 0x12382c6f8 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x12382c6d8 <col:2> 'struct tm' lvalue Var 0x12380e608 'thetime' 'struct tm'
|   | `-UnaryOperator 0x12382c788 <col:21, col:22> 'int' prefix '-'
|   |   `-IntegerLiteral 0x12382c768 <col:22> 'int' 1
|   `-CallExpr 0x12382cba8 <line:56:2, col:14> 'int'
|     |-ImplicitCastExpr 0x12382cb90 <col:2> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x12382cb50 <col:2> 'int ()' Function 0x12382ca98 'efree' 'int ()'
|     `-ImplicitCastExpr 0x12382cbd0 <col:8> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x12382cb70 <col:8> 'char *' lvalue Var 0x1238282d8 'strbuf' 'char *'
`-FunctionDecl 0x123828a48 <line:18:2> col:2 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x123828b48 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x123828bb0 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x123828c18 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x123828af0 <<invalid sloc>> Implicit 900
