TranslationUnitDecl 0x130855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1308564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x130855bd0 '__int128'
|-TypedefDecl 0x130856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x130855bf0 'unsigned __int128'
|-TypedefDecl 0x13100be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13100bc00 'struct __NSConstantString_tag'
|   `-Record 0x130856580 '__NSConstantString_tag'
|-TypedefDecl 0x13100be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x130855d90 '__SVInt8_t'
|-TypedefDecl 0x13100bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x130855db0 '__SVInt16_t'
|-TypedefDecl 0x13100bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x130855dd0 '__SVInt32_t'
|-TypedefDecl 0x13100bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x130855df0 '__SVInt64_t'
|-TypedefDecl 0x13100c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x130855e10 '__SVUint8_t'
|-TypedefDecl 0x13100c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x130855e30 '__SVUint16_t'
|-TypedefDecl 0x13100c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x130855e50 '__SVUint32_t'
|-TypedefDecl 0x13100c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x130855e70 '__SVUint64_t'
|-TypedefDecl 0x13100c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x130855e90 '__SVFloat16_t'
|-TypedefDecl 0x13100c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x130855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13100c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x130855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13100c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x130855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13100c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x130855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13100c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x130855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13100c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x130855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13100c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x130855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13100c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x130855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13100c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x130855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13100c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x130855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13100c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x130855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13100c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x130856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13100c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x130856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13100c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x130856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13100c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x130856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13100c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x130856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13100c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1308560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13100c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1308560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13100c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1308560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13100c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x130856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13100ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x130856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13100cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x130856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13100cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x130856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13100cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x130856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13100d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1308561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13100d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1308561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13100d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1308561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13100d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x130856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13100d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x130856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13100d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x130856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13100d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x130856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13100d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x130856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13100d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1308562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13100d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1308562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13100d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1308562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13100d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x130856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13100d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x130856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13100d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x130856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13100d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x130856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13100da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x130856390 '__SVBool_t'
|-TypedefDecl 0x13100da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1308563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13100dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1308563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13100db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1308563f0 '__SVCount_t'
|-TypedefDecl 0x13100dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13100dbb0 'char *'
|   `-BuiltinType 0x1308556b0 'char'
|-TypedefDecl 0x13100dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13100dbb0 'char *'
|   `-BuiltinType 0x1308556b0 'char'
`-FunctionDecl 0x131026a88 <dataset_diviso_filec/func335_vuln.c:1:1, line:33:1> line:1:12 invalid hash_recvmsg 'int (struct kiocb *, struct socket *, struct msghdr *, int, int)' static
  |-ParmVarDecl 0x13100e248 <col:25, col:39> col:39 unused 'struct kiocb *'
  |-ParmVarDecl 0x131026628 <col:47, col:62> col:62 used sock 'struct socket *'
  |-ParmVarDecl 0x1310267f8 <line:2:4, col:19> col:19 used msg 'struct msghdr *'
  |-ParmVarDecl 0x131026890 <col:24, col:31> col:31 referenced invalid len 'int'
  |-ParmVarDecl 0x131026910 <col:36, col:40> col:40 flags 'int'
  `-CompoundStmt 0x132008c68 <line:3:1, line:33:1>
    |-DeclStmt 0x131026da8 <line:4:2, col:28>
    | |-RecordDecl 0x131026b58 <col:2, col:9> col:9 struct sock
    | `-VarDecl 0x131026cc8 <col:2, col:26> col:15 used sk 'struct sock *' cinit
    |   `-RecoveryExpr 0x131026d68 <col:20, col:26> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x131026d30 <col:20> 'struct socket *' lvalue ParmVar 0x131026628 'sock' 'struct socket *'
    |-DeclStmt 0x1310271e8 <line:5:2, col:35>
    | |-RecordDecl 0x131026dc0 <col:2, col:9> col:9 struct alg_sock
    | `-VarDecl 0x131026f28 <col:2, col:34> col:19 used ask 'struct alg_sock *' cinit
    |   `-ImplicitCastExpr 0x1310271b8 <col:25, col:34> 'struct alg_sock *' contains-errors <IntegralToPointer>
    |     `-CallExpr 0x131027178 <col:25, col:34> 'int' contains-errors
    |       |-ImplicitCastExpr 0x131027160 <col:25> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x1310270f0 <col:25> 'int ()' Function 0x131027038 'alg_sk' 'int ()'
    |       `-ImplicitCastExpr 0x1310271a0 <col:32> 'struct sock *' contains-errors <LValueToRValue>
    |         `-DeclRefExpr 0x131027110 <col:32> 'struct sock *' contains-errors lvalue Var 0x131026cc8 'sk' 'struct sock *'
    |-DeclStmt 0x131027448 <line:6:2, col:37>
    | |-RecordDecl 0x131027200 <col:2, col:9> col:9 struct hash_ctx
    | `-VarDecl 0x131027368 <col:2, col:30> col:19 used ctx 'struct hash_ctx *' cinit
    |   `-RecoveryExpr 0x131027408 <col:25, col:30> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x1310273d0 <col:25> 'struct alg_sock *' contains-errors lvalue Var 0x131026f28 'ask' 'struct alg_sock *'
    |-DeclStmt 0x13102cdc8 <line:7:2, col:71>
    | `-VarDecl 0x131027478 <col:2, col:70> col:11 used ds 'unsigned int' cinit
    |   `-CallExpr 0x13102cda0 <col:16, col:70> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x1310275c0 <col:16> 'int ()' Function 0x131027508 'crypto_ahash_digestsize' 'int ()'
    |     `-CallExpr 0x13102cd78 <col:40, col:69> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x13102cce0 <col:40> 'int ()' Function 0x13102cc28 'crypto_ahash_reqtfm' 'int ()'
    |       `-UnaryOperator 0x13102cd60 <col:60, col:66> '<dependent type>' contains-errors prefix '&' cannot overflow
    |         `-RecoveryExpr 0x13102cd38 <col:61, col:66> '<dependent type>' contains-errors lvalue
    |           `-DeclRefExpr 0x13102cd00 <col:61> 'struct hash_ctx *' contains-errors lvalue Var 0x131027368 'ctx' 'struct hash_ctx *'
    |-DeclStmt 0x13102ce60 <line:8:2, col:9>
    | `-VarDecl 0x13102cdf8 <col:2, col:6> col:6 used err 'int'
    |-IfStmt 0x13102d0d8 <line:10:2, line:13:21> has_else
    | |-BinaryOperator 0x13102ceb8 <line:10:6, col:12> 'int' contains-errors '>'
    | | |-RecoveryExpr 0x13102ce78 <col:6> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x13102ce98 <col:12> 'unsigned int' contains-errors lvalue Var 0x131027478 'ds' 'unsigned int'
    | |-BinaryOperator 0x13102cf40 <line:11:3, col:9> '<dependent type>' contains-errors '='
    | | |-RecoveryExpr 0x13102cef8 <col:3> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x13102ced8 <col:3> 'int' lvalue ParmVar 0x131026890 'len' 'int'
    | | `-DeclRefExpr 0x13102cf20 <col:9> 'unsigned int' contains-errors lvalue Var 0x131027478 'ds' 'unsigned int'
    | `-IfStmt 0x13102d0b8 <line:12:7, line:13:21>
    |   |-BinaryOperator 0x13102cfa0 <line:12:11, col:17> 'int' contains-errors '<'
    |   | |-RecoveryExpr 0x13102cf60 <col:11> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x13102cf80 <col:17> 'unsigned int' contains-errors lvalue Var 0x131027478 'ds' 'unsigned int'
    |   `-CompoundAssignOperator 0x13102d088 <line:13:3, col:21> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |     |-RecoveryExpr 0x13102cff8 <col:3, col:8> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x13102cfc0 <col:3> 'struct msghdr *' lvalue ParmVar 0x1310267f8 'msg' 'struct msghdr *'
    |     `-RecoveryExpr 0x13102d068 <col:21> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x13102d188 <line:15:2, col:21> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x13102d140 <col:2, col:7> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x13102d108 <col:2> 'struct msghdr *' lvalue ParmVar 0x1310267f8 'msg' 'struct msghdr *'
    | `-IntegerLiteral 0x13102d168 <col:21> 'int' 0
    |-CallExpr 0x13102d2e0 <line:17:2, col:14> 'int' contains-errors
    | |-ImplicitCastExpr 0x13102d2c8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x13102d288 <col:2> 'int ()' Function 0x13102d1d0 'lock_sock' 'int ()'
    | `-ImplicitCastExpr 0x13102d308 <col:12> 'struct sock *' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x13102d2a8 <col:12> 'struct sock *' contains-errors lvalue Var 0x131026cc8 'sk' 'struct sock *'
    |-IfStmt 0x13102db48 <line:18:2, line:25:2>
    | |-RecoveryExpr 0x13102d358 <line:18:6, col:11> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x13102d320 <col:6> 'struct hash_ctx *' contains-errors lvalue Var 0x131027368 'ctx' 'struct hash_ctx *'
    | `-CompoundStmt 0x13102db18 <col:17, line:25:2>
    |   |-BinaryOperator 0x13102d400 <line:19:3, col:15> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x13102d3b8 <col:3, col:8> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x13102d380 <col:3> 'struct hash_ctx *' contains-errors lvalue Var 0x131027368 'ctx' 'struct hash_ctx *'
    |   | `-IntegerLiteral 0x13102d3e0 <col:15> 'int' 0
    |   |-CallExpr 0x13102d690 <line:20:3, col:58> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x13102d500 <col:3> 'int ()' Function 0x13102d448 'ahash_request_set_crypt' 'int ()'
    |   | |-UnaryOperator 0x13102d580 <col:27, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | `-RecoveryExpr 0x13102d558 <col:28, col:33> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x13102d520 <col:28> 'struct hash_ctx *' contains-errors lvalue Var 0x131027368 'ctx' 'struct hash_ctx *'
    |   | |-RecoveryExpr 0x13102d670 <col:38> '<dependent type>' contains-errors lvalue
    |   | |-RecoveryExpr 0x13102d5e8 <col:44, col:49> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x13102d5b0 <col:44> 'struct hash_ctx *' contains-errors lvalue Var 0x131027368 'ctx' 'struct hash_ctx *'
    |   | `-IntegerLiteral 0x13102d610 <col:57> 'int' 0
    |   |-BinaryOperator 0x13102da38 <line:21:3, line:22:24> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x13102d6d0 <line:21:3> 'int' lvalue Var 0x13102cdf8 'err' 'int'
    |   | `-CallExpr 0x13102da08 <col:9, line:22:24> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x13102d7d0 <line:21:9> 'int ()' Function 0x13102d718 'af_alg_wait_for_completion' 'int ()'
    |   |   |-CallExpr 0x13102d968 <col:36, col:64> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x13102d8d0 <col:36> 'int ()' Function 0x13102d818 'crypto_ahash_final' 'int ()'
    |   |   | `-UnaryOperator 0x13102d950 <col:55, col:61> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   |   `-RecoveryExpr 0x13102d928 <col:56, col:61> '<dependent type>' contains-errors lvalue
    |   |   |     `-DeclRefExpr 0x13102d8f0 <col:56> 'struct hash_ctx *' contains-errors lvalue Var 0x131027368 'ctx' 'struct hash_ctx *'
    |   |   `-UnaryOperator 0x13102d9f0 <line:22:8, col:14> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |     `-RecoveryExpr 0x13102d9c8 <col:9, col:14> '<dependent type>' contains-errors lvalue
    |   |       `-DeclRefExpr 0x13102d990 <col:9> 'struct hash_ctx *' contains-errors lvalue Var 0x131027368 'ctx' 'struct hash_ctx *'
    |   `-IfStmt 0x13102daf8 <line:23:3, line:24:9>
    |     |-ImplicitCastExpr 0x13102da78 <line:23:7> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x13102da58 <col:7> 'int' lvalue Var 0x13102cdf8 'err' 'int'
    |     `-GotoStmt 0x13102dae0 <line:24:4, col:9> 'unlock' 0x13102da90
    |-BinaryOperator 0x1320089f0 <line:27:2, col:53> 'int' contains-errors '='
    | |-DeclRefExpr 0x13102db68 <col:2> 'int' lvalue Var 0x13102cdf8 'err' 'int'
    | `-CallExpr 0x1320089b8 <col:8, col:53> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1320088b8 <col:8> 'int ()' Function 0x132008800 'memcpy_toiovec' 'int ()'
    |   |-RecoveryExpr 0x132008910 <col:23, col:28> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x1320088d8 <col:23> 'struct msghdr *' lvalue ParmVar 0x1310267f8 'msg' 'struct msghdr *'
    |   |-RecoveryExpr 0x132008970 <col:37, col:42> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x132008938 <col:37> 'struct hash_ctx *' contains-errors lvalue Var 0x131027368 'ctx' 'struct hash_ctx *'
    |   `-RecoveryExpr 0x132008998 <col:50> '<dependent type>' contains-errors lvalue
    |-LabelStmt 0x132008b88 <line:29:1, line:30:17> 'unlock'
    | `-CallExpr 0x132008b48 <col:2, col:17> 'int' contains-errors
    |   |-ImplicitCastExpr 0x132008b30 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x132008af0 <col:2> 'int ()' Function 0x132008a38 'release_sock' 'int ()'
    |   `-ImplicitCastExpr 0x132008b70 <col:15> 'struct sock *' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x132008b10 <col:15> 'struct sock *' contains-errors lvalue Var 0x131026cc8 'sk' 'struct sock *'
    `-ReturnStmt 0x132008c58 <line:32:2, col:16>
      `-BinaryConditionalOperator 0x132008c18 <col:9, col:16> '<dependent type>' contains-errors
        |-ImplicitCastExpr 0x132008be8 <col:9> 'int' <LValueToRValue>
        | `-DeclRefExpr 0x132008ba8 <col:9> 'int' lvalue Var 0x13102cdf8 'err' 'int'
        |-OpaqueValueExpr 0x132008c00 <col:9> 'int'
        | `-ImplicitCastExpr 0x132008be8 <col:9> 'int' <LValueToRValue>
        |   `-DeclRefExpr 0x132008ba8 <col:9> 'int' lvalue Var 0x13102cdf8 'err' 'int'
        |-OpaqueValueExpr 0x132008c00 <col:9> 'int'
        | `-ImplicitCastExpr 0x132008be8 <col:9> 'int' <LValueToRValue>
        |   `-DeclRefExpr 0x132008ba8 <col:9> 'int' lvalue Var 0x13102cdf8 'err' 'int'
        `-RecoveryExpr 0x132008bc8 <col:16> '<dependent type>' contains-errors lvalue
