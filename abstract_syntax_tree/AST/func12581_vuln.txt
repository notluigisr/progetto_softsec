TranslationUnitDecl 0x12d855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12d8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12d855bd0 '__int128'
|-TypedefDecl 0x12d856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12d855bf0 'unsigned __int128'
|-TypedefDecl 0x12e00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12e00bc00 'struct __NSConstantString_tag'
|   `-Record 0x12d856580 '__NSConstantString_tag'
|-TypedefDecl 0x12e00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12d855d90 '__SVInt8_t'
|-TypedefDecl 0x12e00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12d855db0 '__SVInt16_t'
|-TypedefDecl 0x12e00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12d855dd0 '__SVInt32_t'
|-TypedefDecl 0x12e00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12d855df0 '__SVInt64_t'
|-TypedefDecl 0x12e00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12d855e10 '__SVUint8_t'
|-TypedefDecl 0x12e00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12d855e30 '__SVUint16_t'
|-TypedefDecl 0x12e00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12d855e50 '__SVUint32_t'
|-TypedefDecl 0x12e00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12d855e70 '__SVUint64_t'
|-TypedefDecl 0x12e00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12d855e90 '__SVFloat16_t'
|-TypedefDecl 0x12e00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12d855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12e00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12d855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12e00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12d855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12e00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12d855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12e00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12d855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12e00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12d855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12e00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12d855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12e00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12d855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12e00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12d855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12e00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12d855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12e00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12d855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12e00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12d856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12e00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12d856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12e00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12d856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12e00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12d856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12e00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12d856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12e00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12d8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12e00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12d8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12e00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12d8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12e00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12d856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12e00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12d856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12e00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12d856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12e00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12d856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12e00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12d856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12e00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12d8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12e00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12d8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12e00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12d8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12e00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12d856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12e00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12d856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12e00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12d856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12e00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12d856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12e00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12d856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12e00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12d8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12e00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12d8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12e00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12d8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12e00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12d856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12e00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12d856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12e00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12d856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12e00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12d856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12e00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12d856390 '__SVBool_t'
|-TypedefDecl 0x12e00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12d8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12e00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12d8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12e00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12d8563f0 '__SVCount_t'
|-TypedefDecl 0x12e00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12e00dbb0 'char *'
|   `-BuiltinType 0x12d8556b0 'char'
|-TypedefDecl 0x12e00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12e00dbb0 'char *'
|   `-BuiltinType 0x12d8556b0 'char'
|-FunctionDecl 0x12e00df68 <dataset_diviso_filec/func12581_vuln.c:1:1, line:42:1> line:1:1 invalid lookup_bytestring 'int (int *, const char *, const unsigned int)'
| |-ParmVarDecl 0x12e00dd28 <col:19, col:39> col:39 invalid ndo 'int *'
| |-ParmVarDecl 0x12e00dda8 <col:44, col:67> col:67 used bs 'const char *' register
| |-ParmVarDecl 0x12e00de28 <line:2:5, col:24> col:24 used nlen 'const unsigned int'
| `-CompoundStmt 0x12f00d8d8 <line:3:1, line:42:1>
|   |-DeclStmt 0x12e00e218 <line:4:2, col:21>
|   | |-RecordDecl 0x12e00e028 <col:2, col:9> col:9 struct enamemem
|   | `-VarDecl 0x12e00e198 <col:2, col:19> col:19 used tp 'struct enamemem *'
|   |-DeclStmt 0x12e00e2b0 <line:5:2, col:24>
|   | `-VarDecl 0x12e00e248 <col:2, col:17> col:17 referenced invalid i 'int' register
|   |-IfStmt 0x12f0093f0 <line:7:2, line:16:15> has_else
|   | |-BinaryOperator 0x12e00e338 <line:7:6, col:14> 'int' '>='
|   | | |-ImplicitCastExpr 0x12e00e308 <col:6> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12e00e2c8 <col:6> 'const unsigned int' lvalue ParmVar 0x12e00de28 'nlen' 'const unsigned int'
|   | | `-ImplicitCastExpr 0x12e00e320 <col:14> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x12e00e2e8 <col:14> 'int' 6
|   | |-CompoundStmt 0x12f008d40 <col:17, line:11:2>
|   | | `-BinaryOperator 0x12f008d20 <line:10:3, col:26> '<dependent type>' contains-errors '='
|   | |   |-RecoveryExpr 0x12f008b28 <col:3> '<dependent type>' contains-errors lvalue
|   | |   | `-DeclRefExpr 0x12f008b08 <col:3> 'int' lvalue Var 0x12e00e248 'i' 'int'
|   | |   `-BinaryOperator 0x12f008d00 <col:7, col:26> 'int' '|'
|   | |     |-ParenExpr 0x12f008c38 <col:7, col:18> 'int'
|   | |     | `-BinaryOperator 0x12f008c18 <col:8, col:17> 'int' '<<'
|   | |     |   |-ImplicitCastExpr 0x12f008c00 <col:8, col:12> 'int' <IntegralCast>
|   | |     |   | `-ImplicitCastExpr 0x12f008be8 <col:8, col:12> 'char' <LValueToRValue>
|   | |     |   |   `-ArraySubscriptExpr 0x12f008ba8 <col:8, col:12> 'const char' lvalue
|   | |     |   |     |-ImplicitCastExpr 0x12f008b90 <col:8> 'const char *' <LValueToRValue>
|   | |     |   |     | `-DeclRefExpr 0x12f008b50 <col:8> 'const char *' lvalue ParmVar 0x12e00dda8 'bs' 'const char *'
|   | |     |   |     `-IntegerLiteral 0x12f008b70 <col:11> 'int' 4
|   | |     |   `-IntegerLiteral 0x12f008bc8 <col:17> 'int' 8
|   | |     `-ImplicitCastExpr 0x12f008ce8 <col:22, col:26> 'int' <IntegralCast>
|   | |       `-ImplicitCastExpr 0x12f008cd0 <col:22, col:26> 'char' <LValueToRValue>
|   | |         `-ArraySubscriptExpr 0x12f008cb0 <col:22, col:26> 'const char' lvalue
|   | |           |-ImplicitCastExpr 0x12f008c98 <col:22> 'const char *' <LValueToRValue>
|   | |           | `-DeclRefExpr 0x12f008c58 <col:22> 'const char *' lvalue ParmVar 0x12e00dda8 'bs' 'const char *'
|   | |           `-IntegerLiteral 0x12f008c78 <col:25> 'int' 5
|   | `-IfStmt 0x12f0093c0 <line:11:9, line:16:15> has_else
|   |   |-BinaryOperator 0x12f008dc8 <line:11:13, col:21> 'int' '>='
|   |   | |-ImplicitCastExpr 0x12f008d98 <col:13> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x12f008d58 <col:13> 'const unsigned int' lvalue ParmVar 0x12e00de28 'nlen' 'const unsigned int'
|   |   | `-ImplicitCastExpr 0x12f008db0 <col:21> 'unsigned int' <IntegralCast>
|   |   |   `-IntegerLiteral 0x12f008d78 <col:21> 'int' 4
|   |   |-CompoundStmt 0x12f009210 <col:24, line:15:2>
|   |   | `-BinaryOperator 0x12f0091f0 <line:14:3, col:7> '<dependent type>' contains-errors '='
|   |   |   |-RecoveryExpr 0x12f0091a8 <col:3> '<dependent type>' contains-errors lvalue
|   |   |   | `-DeclRefExpr 0x12f009188 <col:3> 'int' lvalue Var 0x12e00e248 'i' 'int'
|   |   |   `-IntegerLiteral 0x12f0091d0 <col:7> 'int' 0
|   |   `-BinaryOperator 0x12f0093a0 <line:16:3, col:15> '<dependent type>' contains-errors '='
|   |     |-RecoveryExpr 0x12f009248 <col:3> '<dependent type>' contains-errors lvalue
|   |     | `-DeclRefExpr 0x12f009228 <col:3> 'int' lvalue Var 0x12e00e248 'i' 'int'
|   |     `-BinaryOperator 0x12f009380 <col:7, col:15> '<dependent type>' contains-errors '='
|   |       |-RecoveryExpr 0x12f009320 <col:7> '<dependent type>' contains-errors lvalue
|   |       `-BinaryOperator 0x12f009360 <col:11, col:15> '<dependent type>' contains-errors '='
|   |         |-RecoveryExpr 0x12f009340 <col:11> '<dependent type>' contains-errors lvalue
|   |         `-IntegerLiteral 0x12f0092a0 <col:15> 'int' 0
|   |-WhileStmt 0x12f00bb50 <line:19:2, line:26:13>
|   | |-RecoveryExpr 0x12f00afa0 <line:19:9, col:13> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x12f009508 <col:9> 'struct enamemem *' lvalue Var 0x12e00e198 'tp' 'struct enamemem *'
|   | `-IfStmt 0x12f00bb20 <line:20:3, line:26:13> has_else
|   |   |-BinaryOperator 0x12f00ba00 <line:20:7, line:23:67> 'int' contains-errors '&&'
|   |   | |-BinaryOperator 0x12f00b860 <line:20:7, line:22:22> 'int' contains-errors '&&'
|   |   | | |-BinaryOperator 0x12f00b800 <line:20:7, line:21:22> 'int' contains-errors '&&'
|   |   | | | |-BinaryOperator 0x12f00b048 <line:20:7, col:22> 'int' contains-errors '=='
|   |   | | | | |-RecoveryExpr 0x12f00b000 <col:7, col:11> '<dependent type>' contains-errors lvalue
|   |   | | | | | `-DeclRefExpr 0x12f00afc8 <col:7> 'struct enamemem *' lvalue Var 0x12e00e198 'tp' 'struct enamemem *'
|   |   | | | | `-RecoveryExpr 0x12f00b028 <col:22> '<dependent type>' contains-errors lvalue
|   |   | | | `-BinaryOperator 0x12f00b7e0 <line:21:7, col:22> 'int' contains-errors '=='
|   |   | | |   |-RecoveryExpr 0x12f00b0a0 <col:7, col:11> '<dependent type>' contains-errors lvalue
|   |   | | |   | `-DeclRefExpr 0x12f00b068 <col:7> 'struct enamemem *' lvalue Var 0x12e00e198 'tp' 'struct enamemem *'
|   |   | | |   `-RecoveryExpr 0x12f00b7c0 <col:22> '<dependent type>' contains-errors lvalue
|   |   | | `-BinaryOperator 0x12f00b840 <line:22:7, col:22> 'int' contains-errors '=='
|   |   | |   |-RecoveryExpr 0x12f00b158 <col:7, col:11> '<dependent type>' contains-errors lvalue
|   |   | |   | `-DeclRefExpr 0x12f00b120 <col:7> 'struct enamemem *' lvalue Var 0x12e00e198 'tp' 'struct enamemem *'
|   |   | |   `-RecoveryExpr 0x12f00b820 <col:22> '<dependent type>' contains-errors lvalue
|   |   | `-BinaryOperator 0x12f00b9e0 <line:23:7, col:67> 'int' contains-errors '=='
|   |   |   |-CallExpr 0x12f00b948 <col:7, col:62> 'int' contains-errors
|   |   |   | |-ImplicitCastExpr 0x12f00b930 <col:7> 'int (*)(const void *, const void *, unsigned long)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x12f00b4a8 <col:7> 'int (const void *, const void *, unsigned long)' Function 0x12f00b258 'memcmp' 'int (const void *, const void *, unsigned long)'
|   |   |   | |-ImplicitCastExpr 0x12f00b980 <col:14, col:28> 'const void *' <BitCast>
|   |   |   | | `-CStyleCastExpr 0x12f00b8b0 <col:14, col:28> 'const char *' <NoOp>
|   |   |   | |   `-ImplicitCastExpr 0x12f00b898 <col:28> 'const char *' <LValueToRValue> part_of_explicit_cast
|   |   |   | |     `-DeclRefExpr 0x12f00b4c8 <col:28> 'const char *' lvalue ParmVar 0x12e00dda8 'bs' 'const char *'
|   |   |   | |-ImplicitCastExpr 0x12f00b998 <col:32, col:55> 'const void *' contains-errors <BitCast>
|   |   |   | | `-CStyleCastExpr 0x12f00b8f0 <col:32, col:55> 'const char *' contains-errors <Dependent>
|   |   |   | |   `-ParenExpr 0x12f00b5f8 <col:46, col:55> '<dependent type>' contains-errors lvalue
|   |   |   | |     `-RecoveryExpr 0x12f00b578 <col:47, col:51> '<dependent type>' contains-errors lvalue
|   |   |   | |       `-DeclRefExpr 0x12f00b540 <col:47> 'struct enamemem *' lvalue Var 0x12e00e198 'tp' 'struct enamemem *'
|   |   |   | `-ImplicitCastExpr 0x12f00b9c8 <col:58> 'unsigned long' <IntegralCast>
|   |   |   |   `-ImplicitCastExpr 0x12f00b9b0 <col:58> 'unsigned int' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x12f00b640 <col:58> 'const unsigned int' lvalue ParmVar 0x12e00de28 'nlen' 'const unsigned int'
|   |   |   `-IntegerLiteral 0x12f00b760 <col:67> 'int' 0
|   |   |-ReturnStmt 0x12f00ba70 <line:24:4, col:11>
|   |   | `-ImplicitCastExpr 0x12f00ba58 <col:11> 'int' <PointerToIntegral>
|   |   |   `-ImplicitCastExpr 0x12f00ba40 <col:11> 'struct enamemem *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x12f00ba20 <col:11> 'struct enamemem *' lvalue Var 0x12e00e198 'tp' 'struct enamemem *'
|   |   `-BinaryOperator 0x12f00bb00 <line:26:4, col:13> 'struct enamemem *' contains-errors '='
|   |     |-DeclRefExpr 0x12f00ba80 <col:4> 'struct enamemem *' lvalue Var 0x12e00e198 'tp' 'struct enamemem *'
|   |     `-RecoveryExpr 0x12f00bad8 <col:9, col:13> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x12f00baa0 <col:9> 'struct enamemem *' lvalue Var 0x12e00e198 'tp' 'struct enamemem *'
|   |-BinaryOperator 0x12f00bbf0 <line:28:2, col:16> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x12f00bba8 <col:2, col:6> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x12f00bb70 <col:2> 'struct enamemem *' lvalue Var 0x12e00e198 'tp' 'struct enamemem *'
|   | `-RecoveryExpr 0x12f00bbd0 <col:16> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12f00cf50 <line:33:2, line:34:31>
|   | |-RecoveryExpr 0x12f00bd90 <line:33:6, col:18> '_Bool' contains-errors
|   | `-CallExpr 0x12f00cf20 <line:34:3, col:31> '<dependent type>' contains-errors
|   |   |-ParenExpr 0x12f00ce78 <col:3, col:19> '<dependent type>' contains-errors
|   |   | `-UnaryOperator 0x12f00ce60 <col:4, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   |   `-ImplicitCastExpr 0x12f00ce48 <col:5, col:10> '<dependent type>' contains-errors <LValueToRValue>
|   |   |     `-CXXDependentScopeMemberExpr 0x12f00ce00 <col:5, col:10> '<dependent type>' contains-errors lvalue ->ndo_error
|   |   |       `-RecoveryExpr 0x12f00bdb0 <col:5> '<dependent type>' contains-errors lvalue
|   |   |-RecoveryExpr 0x12f00ce98 <col:21> '<dependent type>' contains-errors lvalue
|   |   `-StringLiteral 0x12f00cf00 <col:26> 'char[4]' lvalue "STR"
|   |-CallExpr 0x12f00d310 <line:36:2, col:27> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12f00d208 <col:2> 'void *(void *, const void *, unsigned long)' Function 0x12f00cfb8 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | |-RecoveryExpr 0x12f00d260 <col:9, col:13> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x12f00d228 <col:9> 'struct enamemem *' lvalue Var 0x12e00e198 'tp' 'struct enamemem *'
|   | |-DeclRefExpr 0x12f00d288 <col:19> 'const char *' lvalue ParmVar 0x12e00dda8 'bs' 'const char *'
|   | `-DeclRefExpr 0x12f00d2a8 <col:23> 'const unsigned int' lvalue ParmVar 0x12e00de28 'nlen' 'const unsigned int'
|   |-IfStmt 0x12f00d858 <line:38:2, line:39:31>
|   | |-RecoveryExpr 0x12f00d710 <line:38:6, col:19> '_Bool' contains-errors
|   | `-CallExpr 0x12f00d828 <line:39:3, col:31> '<dependent type>' contains-errors
|   |   |-ParenExpr 0x12f00d7c8 <col:3, col:19> '<dependent type>' contains-errors
|   |   | `-UnaryOperator 0x12f00d7b0 <col:4, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   |   `-ImplicitCastExpr 0x12f00d798 <col:5, col:10> '<dependent type>' contains-errors <LValueToRValue>
|   |   |     `-CXXDependentScopeMemberExpr 0x12f00d750 <col:5, col:10> '<dependent type>' contains-errors lvalue ->ndo_error
|   |   |       `-RecoveryExpr 0x12f00d730 <col:5> '<dependent type>' contains-errors lvalue
|   |   |-RecoveryExpr 0x12f00d7e8 <col:21> '<dependent type>' contains-errors lvalue
|   |   `-StringLiteral 0x12f00d808 <col:26> 'char[4]' lvalue "STR"
|   `-ReturnStmt 0x12f00d8c8 <line:41:2, col:9>
|     `-ImplicitCastExpr 0x12f00d8b0 <col:9> 'int' <PointerToIntegral>
|       `-ImplicitCastExpr 0x12f00d898 <col:9> 'struct enamemem *' <LValueToRValue>
|         `-DeclRefExpr 0x12f00d878 <col:9> 'struct enamemem *' lvalue Var 0x12e00e198 'tp' 'struct enamemem *'
|-FunctionDecl 0x12f00b258 <line:23:7> col:7 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0x12f00b358 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x12f00b3c0 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x12f00b428 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x12f00b300 <<invalid sloc>> Implicit 883
|-FunctionDecl 0x12f00cfb8 <line:36:2> col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0x12f00d0b8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x12f00d120 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x12f00d188 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x12f00d060 <<invalid sloc>> Implicit 882
`-FunctionDecl 0x12f00d3f0 <line:37:33> col:33 implicit used calloc 'void *(unsigned long, unsigned long)' extern
  |-ParmVarDecl 0x12f00d4f0 <<invalid sloc>> <invalid sloc> 'unsigned long'
  |-ParmVarDecl 0x12f00d558 <<invalid sloc>> <invalid sloc> 'unsigned long'
  |-BuiltinAttr 0x12f00d498 <<invalid sloc>> Implicit 868
  `-AllocSizeAttr 0x12f00d5d0 <col:33> Implicit 1 2
