TranslationUnitDecl 0x11e055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11e0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11e055bd0 '__int128'
|-TypedefDecl 0x11e056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11e055bf0 'unsigned __int128'
|-TypedefDecl 0x11e126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x11e126000 'struct __NSConstantString_tag'
|   `-Record 0x11e056580 '__NSConstantString_tag'
|-TypedefDecl 0x11e126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11e055d90 '__SVInt8_t'
|-TypedefDecl 0x11e126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11e055db0 '__SVInt16_t'
|-TypedefDecl 0x11e126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11e055dd0 '__SVInt32_t'
|-TypedefDecl 0x11e1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11e055df0 '__SVInt64_t'
|-TypedefDecl 0x11e126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11e055e10 '__SVUint8_t'
|-TypedefDecl 0x11e1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11e055e30 '__SVUint16_t'
|-TypedefDecl 0x11e126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11e055e50 '__SVUint32_t'
|-TypedefDecl 0x11e126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11e055e70 '__SVUint64_t'
|-TypedefDecl 0x11e1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11e055e90 '__SVFloat16_t'
|-TypedefDecl 0x11e126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11e055eb0 '__SVFloat32_t'
|-TypedefDecl 0x11e1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11e055ed0 '__SVFloat64_t'
|-TypedefDecl 0x11e126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11e055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x11e126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11e055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x11e1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11e055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x11e126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11e055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x11e1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11e055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x11e126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11e055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x11e126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11e055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x11e1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11e055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x11e126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11e055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x11e126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11e056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x11e126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11e056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x11e126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11e056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x11e126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11e056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x11e126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11e056090 '__clang_svint8x3_t'
|-TypedefDecl 0x11e126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11e0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x11e126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11e0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x11e126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11e0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x11e126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11e056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x11e126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11e056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x11e126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11e056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x11e126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11e056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x11e126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11e056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x11e127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11e0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x11e127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11e0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x11e1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11e0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x11e127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11e056210 '__clang_svint8x4_t'
|-TypedefDecl 0x11e1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11e056230 '__clang_svint16x4_t'
|-TypedefDecl 0x11e127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11e056250 '__clang_svint32x4_t'
|-TypedefDecl 0x11e127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11e056270 '__clang_svint64x4_t'
|-TypedefDecl 0x11e127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11e056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x11e127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11e0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x11e127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11e0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x11e127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11e0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x11e127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11e056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x11e127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11e056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x11e127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11e056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x11e127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11e056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x11e127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11e056390 '__SVBool_t'
|-TypedefDecl 0x11e127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11e0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x11e127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11e0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x11e127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11e0563f0 '__SVCount_t'
|-TypedefDecl 0x11e127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x11e127fb0 'char *'
|   `-BuiltinType 0x11e0556b0 'char'
|-TypedefDecl 0x11e128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x11e127fb0 'char *'
|   `-BuiltinType 0x11e0556b0 'char'
`-FunctionDecl 0x11e141968 <dataset_diviso_filec/func16491_nonvuln.c:1:1, line:53:1> line:1:5 invalid mlx4_register_mac 'int (struct mlx4_dev *, int, int, int *)'
  |-ParmVarDecl 0x11e128648 <col:23, col:40> col:40 used dev 'struct mlx4_dev *'
  |-ParmVarDecl 0x11e1286e0 <col:45, col:48> col:48 invalid port 'int'
  |-ParmVarDecl 0x11e128760 <col:54, col:58> col:58 invalid mac 'int'
  |-ParmVarDecl 0x11e141818 <col:63, col:68> col:68 used index 'int *'
  `-CompoundStmt 0x11e145de0 <line:2:1, line:53:1>
    |-DeclStmt 0x11e141f38 <line:3:2, col:70>
    | |-RecordDecl 0x11e141a30 <col:2, col:9> col:9 struct mlx4_mac_table
    | `-VarDecl 0x11e141b98 <col:2, col:61> col:25 used table 'struct mlx4_mac_table *' cinit
    |   `-UnaryOperator 0x11e141f08 <col:33, col:61> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-CXXDependentScopeMemberExpr 0x11e141ec0 <col:34, col:61> '<dependent type>' contains-errors lvalue .mac_table
    |       `-ArraySubscriptExpr 0x11e141ea0 <col:34, col:59> '<dependent type>' contains-errors lvalue
    |         |-ImplicitCastExpr 0x11e141e70 <col:34, col:50> '<dependent type>' contains-errors <LValueToRValue>
    |         | `-RecoveryExpr 0x11e141e28 <col:34, col:50> '<dependent type>' contains-errors lvalue
    |         |   `-CallExpr 0x11e141de8 <col:34, col:47> 'int'
    |         |     |-ImplicitCastExpr 0x11e141dd0 <col:34> 'int (*)()' <FunctionToPointerDecay>
    |         |     | `-DeclRefExpr 0x11e141d60 <col:34> 'int ()' Function 0x11e141ca8 'mlx4_priv' 'int ()'
    |         |     `-ImplicitCastExpr 0x11e141e10 <col:44> 'struct mlx4_dev *' <LValueToRValue>
    |         |       `-DeclRefExpr 0x11e141d80 <col:44> 'struct mlx4_dev *' lvalue ParmVar 0x11e128648 'dev' 'struct mlx4_dev *'
    |         `-ImplicitCastExpr 0x11e141e88 <col:55> '<dependent type>' contains-errors <LValueToRValue>
    |           `-RecoveryExpr 0x11e141e50 <col:55> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x11e142088 <line:4:2, col:16>
    | |-VarDecl 0x11e141f68 <col:2, col:6> col:6 used i 'int'
    | `-VarDecl 0x11e141fe8 <col:2, col:15> col:9 used err 'int' cinit
    |   `-IntegerLiteral 0x11e142050 <col:15> 'int' 0
    |-DeclStmt 0x11e142158 <line:5:2, col:15>
    | `-VarDecl 0x11e1420b8 <col:2, col:14> col:6 used free 'int' cinit
    |   `-UnaryOperator 0x11e142140 <col:13, col:14> 'int' prefix '-'
    |     `-IntegerLiteral 0x11e142120 <col:14> 'int' 1
    |-CallExpr 0x11e142368 <line:7:2, col:47> 'int' contains-errors
    | |-ImplicitCastExpr 0x11e142350 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x11e142250 <col:2> 'int ()' Function 0x11e142198 'mlx4_dbg' 'int ()'
    | |-ImplicitCastExpr 0x11e1423a0 <col:11> 'struct mlx4_dev *' <LValueToRValue>
    | | `-DeclRefExpr 0x11e142270 <col:11> 'struct mlx4_dev *' lvalue ParmVar 0x11e128648 'dev' 'struct mlx4_dev *'
    | |-ImplicitCastExpr 0x11e1423b8 <col:16> 'char *' <ArrayToPointerDecay>
    | | `-StringLiteral 0x11e1422d0 <col:16> 'char[4]' lvalue "STR"
    | `-CStyleCastExpr 0x11e142328 <col:23, col:44> 'unsigned long long' contains-errors <Dependent>
    |   `-RecoveryExpr 0x11e1422f0 <col:44> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x11e142548 <line:8:2, col:26> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11e1424b0 <col:2> 'int ()' Function 0x11e1423f8 'mutex_lock' 'int ()'
    | `-UnaryOperator 0x11e142530 <col:13, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x11e142508 <col:14, col:21> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x11e1424d0 <col:14> 'struct mlx4_mac_table *' contains-errors lvalue Var 0x11e141b98 'table' 'struct mlx4_mac_table *'
    |-ForStmt 0x11e144430 <line:9:2, line:21:2>
    | |-BinaryOperator 0x11e1425b0 <line:9:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x11e142570 <col:7> 'int' lvalue Var 0x11e141f68 'i' 'int'
    | | `-IntegerLiteral 0x11e142590 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x11e1426a8 <col:14, col:37> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x11e1425d0 <col:14> 'int' lvalue Var 0x11e141f68 'i' 'int'
    | | `-BinaryOperator 0x11e142688 <col:18, col:37> '<dependent type>' contains-errors '-'
    | |   |-RecoveryExpr 0x11e142668 <col:18> '<dependent type>' contains-errors lvalue
    | |   `-IntegerLiteral 0x11e142608 <col:37> 'int' 1
    | |-UnaryOperator 0x11e1426e8 <col:40, col:41> 'int' postfix '++'
    | | `-DeclRefExpr 0x11e1426c8 <col:40> 'int' lvalue Var 0x11e141f68 'i' 'int'
    | `-CompoundStmt 0x11e144410 <col:45, line:21:2>
    |   |-IfStmt 0x11e143f40 <line:10:3, line:13:3>
    |   | |-BinaryOperator 0x11e143e80 <line:10:7, col:33> 'int' contains-errors '&&'
    |   | | |-BinaryOperator 0x11e142758 <col:7, col:14> 'int' '<'
    |   | | | |-ImplicitCastExpr 0x11e142740 <col:7> 'int' <LValueToRValue>
    |   | | | | `-DeclRefExpr 0x11e142700 <col:7> 'int' lvalue Var 0x11e1420b8 'free' 'int'
    |   | | | `-IntegerLiteral 0x11e142720 <col:14> 'int' 0
    |   | | `-UnaryOperator 0x11e143e68 <col:19, col:33> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   | |   `-ImplicitCastExpr 0x11e143e50 <col:20, col:33> '<dependent type>' contains-errors <LValueToRValue>
    |   | |     `-ArraySubscriptExpr 0x11e143e30 <col:20, col:33> '<dependent type>' contains-errors lvalue
    |   | |       |-ImplicitCastExpr 0x11e143e00 <col:20, col:27> '<dependent type>' contains-errors <LValueToRValue>
    |   | |       | `-RecoveryExpr 0x11e1427b0 <col:20, col:27> '<dependent type>' contains-errors lvalue
    |   | |       |   `-DeclRefExpr 0x11e142778 <col:20> 'struct mlx4_mac_table *' contains-errors lvalue Var 0x11e141b98 'table' 'struct mlx4_mac_table *'
    |   | |       `-ImplicitCastExpr 0x11e143e18 <col:32> 'int' <LValueToRValue>
    |   | |         `-DeclRefExpr 0x11e1427d8 <col:32> 'int' lvalue Var 0x11e141f68 'i' 'int'
    |   | `-CompoundStmt 0x11e143f20 <col:36, line:13:3>
    |   |   |-BinaryOperator 0x11e143ef8 <line:11:4, col:11> 'int' '='
    |   |   | |-DeclRefExpr 0x11e143ea0 <col:4> 'int' lvalue Var 0x11e1420b8 'free' 'int'
    |   |   | `-ImplicitCastExpr 0x11e143ee0 <col:11> 'int' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x11e143ec0 <col:11> 'int' lvalue Var 0x11e141f68 'i' 'int'
    |   |   `-ContinueStmt 0x11e143f18 <line:12:4>
    |   `-IfStmt 0x11e1443f0 <line:15:3, line:20:3>
    |     |-RecoveryExpr 0x11e1441b0 <line:15:7, col:61> '_Bool' contains-errors
    |     `-CompoundStmt 0x11e1443c8 <col:64, line:20:3>
    |       |-BinaryOperator 0x11e144258 <line:17:4, col:13> 'int' '='
    |       | |-UnaryOperator 0x11e144208 <col:4, col:5> 'int' lvalue prefix '*' cannot overflow
    |       | | `-ImplicitCastExpr 0x11e1441f0 <col:5> 'int *' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x11e1441d0 <col:5> 'int *' lvalue ParmVar 0x11e141818 'index' 'int *'
    |       | `-ImplicitCastExpr 0x11e144240 <col:13> 'int' <LValueToRValue>
    |       |   `-DeclRefExpr 0x11e144220 <col:13> 'int' lvalue Var 0x11e141f68 'i' 'int'
    |       |-UnaryOperator 0x11e144348 <line:18:4, col:19> '<dependent type>' contains-errors prefix '++' cannot overflow
    |       | `-ArraySubscriptExpr 0x11e144328 <col:6, col:19> '<dependent type>' contains-errors lvalue
    |       |   |-ImplicitCastExpr 0x11e1442f8 <col:6, col:13> '<dependent type>' contains-errors <LValueToRValue>
    |       |   | `-RecoveryExpr 0x11e1442b0 <col:6, col:13> '<dependent type>' contains-errors lvalue
    |       |   |   `-DeclRefExpr 0x11e144278 <col:6> 'struct mlx4_mac_table *' contains-errors lvalue Var 0x11e141b98 'table' 'struct mlx4_mac_table *'
    |       |   `-ImplicitCastExpr 0x11e144310 <col:18> 'int' <LValueToRValue>
    |       |     `-DeclRefExpr 0x11e1442d8 <col:18> 'int' lvalue Var 0x11e141f68 'i' 'int'
    |       `-GotoStmt 0x11e1443b0 <line:19:4, col:9> 'out' 0x11e144360
    |-IfStmt 0x11e144610 <line:23:2, line:26:2>
    | |-BinaryOperator 0x11e1444c0 <line:23:6, col:13> 'int' '<'
    | | |-ImplicitCastExpr 0x11e1444a8 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x11e144468 <col:6> 'int' lvalue Var 0x11e1420b8 'free' 'int'
    | | `-IntegerLiteral 0x11e144488 <col:13> 'int' 0
    | `-CompoundStmt 0x11e1445f0 <col:16, line:26:2>
    |   |-BinaryOperator 0x11e1445b8 <line:24:3, col:10> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x11e1444e0 <col:3> 'int' lvalue Var 0x11e141fe8 'err' 'int'
    |   | `-UnaryOperator 0x11e1445a0 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x11e144588 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x11e144568 <col:10> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x11e1445d8 <line:25:3, col:8> 'out' 0x11e144360
    |-CallExpr 0x11e1446c8 <line:28:2, col:27> 'int'
    | |-ImplicitCastExpr 0x11e1446b0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x11e144630 <col:2> 'int ()' Function 0x11e142198 'mlx4_dbg' 'int ()'
    | |-ImplicitCastExpr 0x11e144700 <col:11> 'struct mlx4_dev *' <LValueToRValue>
    | | `-DeclRefExpr 0x11e144650 <col:11> 'struct mlx4_dev *' lvalue ParmVar 0x11e128648 'dev' 'struct mlx4_dev *'
    | |-ImplicitCastExpr 0x11e144718 <col:16> 'char *' <ArrayToPointerDecay>
    | | `-StringLiteral 0x11e144670 <col:16> 'char[4]' lvalue "STR"
    | `-ImplicitCastExpr 0x11e144730 <col:23> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x11e144690 <col:23> 'int' lvalue Var 0x11e1420b8 'free' 'int'
    |-IfStmt 0x11e144958 <line:30:2, line:34:2>
    | |-BinaryOperator 0x11e144808 <line:30:6, col:29> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x11e144780 <col:6, col:13> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x11e144748 <col:6> 'struct mlx4_mac_table *' contains-errors lvalue Var 0x11e141b98 'table' 'struct mlx4_mac_table *'
    | | `-RecoveryExpr 0x11e1447e0 <col:22, col:29> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x11e1447a8 <col:22> 'struct mlx4_mac_table *' contains-errors lvalue Var 0x11e141b98 'table' 'struct mlx4_mac_table *'
    | `-CompoundStmt 0x11e144938 <col:34, line:34:2>
    |   |-BinaryOperator 0x11e144900 <line:32:3, col:10> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x11e144828 <col:3> 'int' lvalue Var 0x11e141fe8 'err' 'int'
    |   | `-UnaryOperator 0x11e1448e8 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x11e1448d0 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x11e1448b0 <col:10> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x11e144920 <line:33:3, col:8> 'out' 0x11e144360
    |-BinaryOperator 0x11e144a68 <line:37:2, col:22> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x11e144a28 <col:2, col:18> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x11e1449f8 <col:2, col:9> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-RecoveryExpr 0x11e1449b0 <col:2, col:9> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x11e144978 <col:2> 'struct mlx4_mac_table *' contains-errors lvalue Var 0x11e141b98 'table' 'struct mlx4_mac_table *'
    | | `-ImplicitCastExpr 0x11e144a10 <col:14> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x11e1449d8 <col:14> 'int' lvalue Var 0x11e1420b8 'free' 'int'
    | `-IntegerLiteral 0x11e144a48 <col:22> 'int' 1
    |-BinaryOperator 0x11e145478 <line:40:2, col:57> 'int' contains-errors '='
    | |-DeclRefExpr 0x11e144c78 <col:2> 'int' lvalue Var 0x11e141fe8 'err' 'int'
    | `-CallExpr 0x11e145440 <col:8, col:57> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11e144d78 <col:8> 'int ()' Function 0x11e144cc0 'mlx4_set_port_mac_table' 'int ()'
    |   |-DeclRefExpr 0x11e144d98 <col:32> 'struct mlx4_dev *' lvalue ParmVar 0x11e128648 'dev' 'struct mlx4_dev *'
    |   |-RecoveryExpr 0x11e144db8 <col:37> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x11e145418 <col:43, col:50> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x11e144dd8 <col:43> 'struct mlx4_mac_table *' contains-errors lvalue Var 0x11e141b98 'table' 'struct mlx4_mac_table *'
    |-IfStmt 0x11e145a98 <line:41:2, line:46:2>
    | |-CallExpr 0x11e1455d0 <line:41:6, col:18> 'int'
    | | |-ImplicitCastExpr 0x11e1455b8 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x11e145578 <col:6> 'int ()' Function 0x11e1454c0 'unlikely' 'int ()'
    | | `-ImplicitCastExpr 0x11e1455f8 <col:15> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x11e145598 <col:15> 'int' lvalue Var 0x11e141fe8 'err' 'int'
    | `-CompoundStmt 0x11e145a68 <col:21, line:46:2>
    |   |-CallExpr 0x11e1457c8 <line:42:3, col:48> 'int' contains-errors
    |   | |-ImplicitCastExpr 0x11e1457b0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x11e1456f0 <col:3> 'int ()' Function 0x11e145638 'mlx4_err' 'int ()'
    |   | |-ImplicitCastExpr 0x11e145800 <col:12> 'struct mlx4_dev *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x11e145710 <col:12> 'struct mlx4_dev *' lvalue ParmVar 0x11e128648 'dev' 'struct mlx4_dev *'
    |   | |-ImplicitCastExpr 0x11e145818 <col:17> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x11e145730 <col:17> 'char[4]' lvalue "STR"
    |   | `-CStyleCastExpr 0x11e145788 <col:24, col:45> 'unsigned long long' contains-errors <Dependent>
    |   |   `-RecoveryExpr 0x11e145750 <col:45> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x11e145920 <line:43:3, col:23> '<dependent type>' contains-errors '='
    |   | |-ArraySubscriptExpr 0x11e1458e0 <col:3, col:19> '<dependent type>' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x11e1458b0 <col:3, col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | `-RecoveryExpr 0x11e145868 <col:3, col:10> '<dependent type>' contains-errors lvalue
    |   | | |   `-DeclRefExpr 0x11e145830 <col:3> 'struct mlx4_mac_table *' contains-errors lvalue Var 0x11e141b98 'table' 'struct mlx4_mac_table *'
    |   | | `-ImplicitCastExpr 0x11e1458c8 <col:15> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x11e145890 <col:15> 'int' lvalue Var 0x11e1420b8 'free' 'int'
    |   | `-IntegerLiteral 0x11e145900 <col:23> 'int' 0
    |   |-BinaryOperator 0x11e145a30 <line:44:3, col:26> '<dependent type>' contains-errors '='
    |   | |-ArraySubscriptExpr 0x11e1459f0 <col:3, col:22> '<dependent type>' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x11e1459c0 <col:3, col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | `-RecoveryExpr 0x11e145978 <col:3, col:10> '<dependent type>' contains-errors lvalue
    |   | | |   `-DeclRefExpr 0x11e145940 <col:3> 'struct mlx4_mac_table *' contains-errors lvalue Var 0x11e141b98 'table' 'struct mlx4_mac_table *'
    |   | | `-ImplicitCastExpr 0x11e1459d8 <col:18> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x11e1459a0 <col:18> 'int' lvalue Var 0x11e1420b8 'free' 'int'
    |   | `-IntegerLiteral 0x11e145a10 <col:26> 'int' 0
    |   `-GotoStmt 0x11e145a50 <line:45:3, col:8> 'out' 0x11e144360
    |-BinaryOperator 0x11e145b40 <line:48:2, col:11> 'int' '='
    | |-UnaryOperator 0x11e145af0 <col:2, col:3> 'int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x11e145ad8 <col:3> 'int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x11e145ab8 <col:3> 'int *' lvalue ParmVar 0x11e141818 'index' 'int *'
    | `-ImplicitCastExpr 0x11e145b28 <col:11> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x11e145b08 <col:11> 'int' lvalue Var 0x11e1420b8 'free' 'int'
    |-UnaryOperator 0x11e145bc0 <line:49:2, col:11> '<dependent type>' contains-errors prefix '++' cannot overflow
    | `-RecoveryExpr 0x11e145b98 <col:4, col:11> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x11e145b60 <col:4> 'struct mlx4_mac_table *' contains-errors lvalue Var 0x11e141b98 'table' 'struct mlx4_mac_table *'
    |-LabelStmt 0x11e145d78 <line:50:1, line:51:28> 'out'
    | `-CallExpr 0x11e145d50 <col:2, col:28> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11e145cb8 <col:2> 'int ()' Function 0x11e145c00 'mutex_unlock' 'int ()'
    |   `-UnaryOperator 0x11e145d38 <col:15, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x11e145d10 <col:16, col:23> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x11e145cd8 <col:16> 'struct mlx4_mac_table *' contains-errors lvalue Var 0x11e141b98 'table' 'struct mlx4_mac_table *'
    `-ReturnStmt 0x11e145dd0 <line:52:2, col:9>
      `-ImplicitCastExpr 0x11e145db8 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x11e145d98 <col:9> 'int' lvalue Var 0x11e141fe8 'err' 'int'
