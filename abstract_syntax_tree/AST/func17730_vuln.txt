TranslationUnitDecl 0x12b855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12b8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12b855bd0 '__int128'
|-TypedefDecl 0x12b856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12b855bf0 'unsigned __int128'
|-TypedefDecl 0x12b926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12b926000 'struct __NSConstantString_tag'
|   `-Record 0x12b856580 '__NSConstantString_tag'
|-TypedefDecl 0x12b926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12b855d90 '__SVInt8_t'
|-TypedefDecl 0x12b926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12b855db0 '__SVInt16_t'
|-TypedefDecl 0x12b926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12b855dd0 '__SVInt32_t'
|-TypedefDecl 0x12b9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12b855df0 '__SVInt64_t'
|-TypedefDecl 0x12b926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12b855e10 '__SVUint8_t'
|-TypedefDecl 0x12b9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12b855e30 '__SVUint16_t'
|-TypedefDecl 0x12b926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12b855e50 '__SVUint32_t'
|-TypedefDecl 0x12b926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12b855e70 '__SVUint64_t'
|-TypedefDecl 0x12b9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12b855e90 '__SVFloat16_t'
|-TypedefDecl 0x12b926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12b855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12b9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12b855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12b926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12b855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12b926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12b855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12b9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12b855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12b926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12b855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12b9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12b855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12b926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12b855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12b926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12b855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12b9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12b855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12b926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12b855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12b926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12b856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12b926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12b856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12b926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12b856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12b926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12b856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12b926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12b856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12b926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12b8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12b926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12b8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12b926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12b8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12b926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12b856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12b926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12b856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12b926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12b856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12b926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12b856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12b926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12b856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12b927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12b8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12b927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12b8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12b9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12b8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12b927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12b856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12b9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12b856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12b927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12b856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12b927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12b856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12b927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12b856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12b927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12b8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12b927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12b8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12b927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12b8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12b927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12b856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12b927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12b856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12b927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12b856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12b927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12b856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12b927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12b856390 '__SVBool_t'
|-TypedefDecl 0x12b927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12b8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12b927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12b8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12b927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12b8563f0 '__SVCount_t'
|-TypedefDecl 0x12b927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12b927fb0 'char *'
|   `-BuiltinType 0x12b8556b0 'char'
|-TypedefDecl 0x12b928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12b927fb0 'char *'
|   `-BuiltinType 0x12b8556b0 'char'
`-FunctionDecl 0x12b9283d0 <dataset_diviso_filec/func17730_vuln.c:1:1, line:19:1> line:1:13 invalid controloptions 'void (int *, int, const char **, int *)' static
  |-ParmVarDecl 0x12b928128 <col:29, col:40> col:40 invalid L 'int *'
  |-ParmVarDecl 0x12b9281a8 <col:43, col:47> col:47 used opt 'int'
  |-ParmVarDecl 0x12b928258 <col:52, col:65> col:65 used fmt 'const char **'
  |-ParmVarDecl 0x12b9282d8 <line:2:29, col:37> col:37 referenced invalid h 'int *'
  `-CompoundStmt 0x12b9424b8 <col:40, line:19:1>
    `-SwitchStmt 0x12b9284d0 <line:3:3, line:18:3>
      |-ImplicitCastExpr 0x12b9284b8 <line:3:11> 'int' <LValueToRValue>
      | `-DeclRefExpr 0x12b928498 <col:11> 'int' lvalue ParmVar 0x12b9281a8 'opt' 'int'
      `-CompoundStmt 0x12b942470 <col:16, line:18:3>
        |-CaseStmt 0x12b928528 <line:4:5, col:16>
        | |-ConstantExpr 0x12b928510 <col:11> 'int'
        | | `-CharacterLiteral 0x12b9284f8 <col:11> 'int' 32
        | `-ReturnStmt 0x12b928550 <col:16>
        |-CaseStmt 0x12b928590 <line:5:5, col:27>
        | |-ConstantExpr 0x12b928578 <col:10> 'int'
        | | `-CharacterLiteral 0x12b928560 <col:10> 'int' 62
        | `-BinaryOperator 0x12b9286a0 <col:15, col:27> '<dependent type>' contains-errors '='
        |   |-CXXDependentScopeMemberExpr 0x12b928600 <col:15, col:18> '<dependent type>' contains-errors lvalue ->endian
        |   | `-RecoveryExpr 0x12b9285d8 <col:15> '<dependent type>' contains-errors lvalue
        |   |   `-DeclRefExpr 0x12b9285b8 <col:15> 'int *' lvalue ParmVar 0x12b9282d8 'h' 'int *'
        |   `-RecoveryExpr 0x12b928680 <col:27> '<dependent type>' contains-errors lvalue
        |-ReturnStmt 0x12b9286c0 <col:32>
        |-CaseStmt 0x12b928700 <line:6:5, col:27>
        | |-ConstantExpr 0x12b9286e8 <col:10> 'int'
        | | `-CharacterLiteral 0x12b9286d0 <col:10> 'int' 60
        | `-BinaryOperator 0x12b941820 <col:15, col:27> '<dependent type>' contains-errors '='
        |   |-CXXDependentScopeMemberExpr 0x12b928770 <col:15, col:18> '<dependent type>' contains-errors lvalue ->endian
        |   | `-RecoveryExpr 0x12b928748 <col:15> '<dependent type>' contains-errors lvalue
        |   |   `-DeclRefExpr 0x12b928728 <col:15> 'int *' lvalue ParmVar 0x12b9282d8 'h' 'int *'
        |   `-RecoveryExpr 0x12b941800 <col:27> '<dependent type>' contains-errors lvalue
        |-ReturnStmt 0x12b941840 <col:35>
        |-CaseStmt 0x12b941880 <line:7:5, line:13:5>
        | |-ConstantExpr 0x12b941868 <line:7:10> 'int'
        | | `-CharacterLiteral 0x12b941850 <col:10> 'int' 33
        | `-CompoundStmt 0x12b942038 <col:15, line:13:5>
        |   |-DeclStmt 0x12b941b88 <line:8:7, col:39>
        |   | `-VarDecl 0x12b9418c0 <col:7, col:38> col:11 used a 'int' cinit
        |   |   `-CallExpr 0x12b941b50 <col:15, col:38> '<dependent type>' contains-errors
        |   |     |-DeclRefExpr 0x12b941a80 <col:15> 'int ()' Function 0x12b9419c8 'getnum' 'int ()'
        |   |     |-RecoveryExpr 0x12b941aa0 <col:22> '<dependent type>' contains-errors lvalue
        |   |     |-DeclRefExpr 0x12b941ac0 <col:25> 'const char **' lvalue ParmVar 0x12b928258 'fmt' 'const char **'
        |   |     `-RecoveryExpr 0x12b941b30 <col:30> '<dependent type>' contains-errors lvalue
        |   |-IfStmt 0x12b941f38 <line:9:7, line:10:31>
        |   | |-UnaryOperator 0x12b941d48 <line:9:11, col:18> 'int' contains-errors prefix '!' cannot overflow
        |   | | `-CallExpr 0x12b941d08 <col:12, col:18> 'int' contains-errors
        |   | |   |-ImplicitCastExpr 0x12b941cf0 <col:12> 'int (*)()' <FunctionToPointerDecay>
        |   | |   | `-DeclRefExpr 0x12b941c80 <col:12> 'int ()' Function 0x12b941bc8 'isp2' 'int ()'
        |   | |   `-ImplicitCastExpr 0x12b941d30 <col:17> 'int' contains-errors <LValueToRValue>
        |   | |     `-DeclRefExpr 0x12b941ca0 <col:17> 'int' contains-errors lvalue Var 0x12b9418c0 'a' 'int'
        |   | `-CallExpr 0x12b941f00 <line:10:9, col:31> '<dependent type>' contains-errors
        |   |   |-DeclRefExpr 0x12b941e40 <col:9> 'int ()' Function 0x12b941d88 'luaL_error' 'int ()'
        |   |   |-RecoveryExpr 0x12b941e60 <col:20> '<dependent type>' contains-errors lvalue
        |   |   |-StringLiteral 0x12b941ec0 <col:23> 'char[4]' lvalue "STR"
        |   |   `-DeclRefExpr 0x12b941ee0 <col:30> 'int' contains-errors lvalue Var 0x12b9418c0 'a' 'int'
        |   |-BinaryOperator 0x12b942008 <line:11:7, col:18> '<dependent type>' contains-errors '='
        |   | |-CXXDependentScopeMemberExpr 0x12b941fa0 <col:7, col:10> '<dependent type>' contains-errors lvalue ->align
        |   | | `-RecoveryExpr 0x12b941f78 <col:7> '<dependent type>' contains-errors lvalue
        |   | |   `-DeclRefExpr 0x12b941f58 <col:7> 'int *' lvalue ParmVar 0x12b9282d8 'h' 'int *'
        |   | `-DeclRefExpr 0x12b941fe8 <col:18> 'int' contains-errors lvalue Var 0x12b9418c0 'a' 'int'
        |   `-ReturnStmt 0x12b942028 <line:12:7>
        `-DefaultStmt 0x12b942450 <line:14:5, line:17:5>
          `-CompoundStmt 0x12b942430 <line:14:14, line:17:5>
            |-DeclStmt 0x12b942280 <line:15:7, col:55>
            | `-VarDecl 0x12b942080 <col:7, col:54> col:19 used msg 'const char *' cinit
            |   `-CallExpr 0x12b942248 <col:25, col:54> '<dependent type>' contains-errors
            |     |-DeclRefExpr 0x12b9421c8 <col:25> 'int ()' Function 0x12b942110 'lua_pushfstring' 'int ()'
            |     |-RecoveryExpr 0x12b9421e8 <col:41> '<dependent type>' contains-errors lvalue
            |     |-StringLiteral 0x12b942208 <col:44> 'char[4]' lvalue "STR"
            |     `-DeclRefExpr 0x12b942228 <col:51> 'int' lvalue ParmVar 0x12b9281a8 'opt' 'int'
            `-CallExpr 0x12b9423f8 <line:16:7, col:30> '<dependent type>' contains-errors
              |-DeclRefExpr 0x12b942378 <col:7> 'int ()' Function 0x12b9422c0 'luaL_argerror' 'int ()'
              |-RecoveryExpr 0x12b942398 <col:21> '<dependent type>' contains-errors lvalue
              |-IntegerLiteral 0x12b9423b8 <col:24> 'int' 1
              `-DeclRefExpr 0x12b9423d8 <col:27> 'const char *' contains-errors lvalue Var 0x12b942080 'msg' 'const char *'
