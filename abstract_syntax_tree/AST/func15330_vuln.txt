TranslationUnitDecl 0x11d855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11d8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11d855bd0 '__int128'
|-TypedefDecl 0x11d856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11d855bf0 'unsigned __int128'
|-TypedefDecl 0x11e00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x11e00bc00 'struct __NSConstantString_tag'
|   `-Record 0x11d856580 '__NSConstantString_tag'
|-TypedefDecl 0x11e00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11d855d90 '__SVInt8_t'
|-TypedefDecl 0x11e00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11d855db0 '__SVInt16_t'
|-TypedefDecl 0x11e00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11d855dd0 '__SVInt32_t'
|-TypedefDecl 0x11e00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11d855df0 '__SVInt64_t'
|-TypedefDecl 0x11e00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11d855e10 '__SVUint8_t'
|-TypedefDecl 0x11e00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11d855e30 '__SVUint16_t'
|-TypedefDecl 0x11e00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11d855e50 '__SVUint32_t'
|-TypedefDecl 0x11e00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11d855e70 '__SVUint64_t'
|-TypedefDecl 0x11e00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11d855e90 '__SVFloat16_t'
|-TypedefDecl 0x11e00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11d855eb0 '__SVFloat32_t'
|-TypedefDecl 0x11e00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11d855ed0 '__SVFloat64_t'
|-TypedefDecl 0x11e00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11d855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x11e00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11d855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x11e00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11d855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x11e00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11d855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x11e00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11d855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x11e00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11d855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x11e00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11d855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x11e00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11d855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x11e00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11d855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x11e00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11d856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x11e00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11d856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x11e00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11d856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x11e00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11d856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x11e00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11d856090 '__clang_svint8x3_t'
|-TypedefDecl 0x11e00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11d8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x11e00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11d8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x11e00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11d8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x11e00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11d856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x11e00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11d856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x11e00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11d856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x11e00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11d856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x11e00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11d856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x11e00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11d8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x11e00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11d8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x11e00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11d8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x11e00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11d856210 '__clang_svint8x4_t'
|-TypedefDecl 0x11e00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11d856230 '__clang_svint16x4_t'
|-TypedefDecl 0x11e00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11d856250 '__clang_svint32x4_t'
|-TypedefDecl 0x11e00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11d856270 '__clang_svint64x4_t'
|-TypedefDecl 0x11e00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11d856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x11e00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11d8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x11e00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11d8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x11e00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11d8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x11e00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11d856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x11e00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11d856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x11e00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11d856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x11e00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11d856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x11e00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11d856390 '__SVBool_t'
|-TypedefDecl 0x11e00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11d8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x11e00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11d8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x11e00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11d8563f0 '__SVCount_t'
|-TypedefDecl 0x11e00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x11e00dbb0 'char *'
|   `-BuiltinType 0x11d8556b0 'char'
|-TypedefDecl 0x11e00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x11e00dbb0 'char *'
|   `-BuiltinType 0x11d8556b0 'char'
`-FunctionDecl 0x11d922860 <dataset_diviso_filec/func15330_vuln.c:1:1, line:38:1> line:1:6 invalid hrtimer_start_range_ns 'void (struct hrtimer *, int, int, const enum hrtimer_mode)'
  |-ParmVarDecl 0x11e00e248 <col:29, col:45> col:45 used timer 'struct hrtimer *'
  |-ParmVarDecl 0x11e00e2e0 <col:52, col:60> col:60 referenced invalid tim 'int'
  |-ParmVarDecl 0x11e00e360 <line:2:8, col:12> col:12 invalid delta_ns 'int'
  |-ParmVarDecl 0x11d922718 <col:22, col:46> col:46 invalid mode 'const enum hrtimer_mode'
  `-CompoundStmt 0x11e0275b0 <line:3:1, line:38:1>
    |-DeclStmt 0x11d922bb0 <line:4:2, col:44>
    | |-RecordDecl 0x11d922928 <col:2, col:9> col:9 struct hrtimer_clock_base
    | |-VarDecl 0x11d922a98 <col:2, col:29> col:29 used base 'struct hrtimer_clock_base *'
    | `-VarDecl 0x11d922b28 <col:2, col:36> col:36 used new_base 'struct hrtimer_clock_base *'
    |-DeclStmt 0x11d922c48 <line:5:2, col:21>
    | `-VarDecl 0x11d922be0 <col:2, col:16> col:16 used flags 'unsigned long'
    |-DeclStmt 0x11d922ce0 <line:6:2, col:14>
    | `-VarDecl 0x11d922c78 <col:2, col:6> col:6 used leftmost 'int'
    |-BinaryOperator 0x11d922fc8 <line:8:2, col:40> 'struct hrtimer_clock_base *' '='
    | |-DeclRefExpr 0x11d922cf8 <col:2> 'struct hrtimer_clock_base *' lvalue Var 0x11d922a98 'base' 'struct hrtimer_clock_base *'
    | `-ImplicitCastExpr 0x11d922fb0 <col:9, col:40> 'struct hrtimer_clock_base *' <IntegralToPointer>
    |   `-CallExpr 0x11d922f68 <col:9, col:40> 'int'
    |     |-ImplicitCastExpr 0x11d922f50 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x11d922e70 <col:9> 'int ()' Function 0x11d922db8 'lock_hrtimer_base' 'int ()'
    |     |-ImplicitCastExpr 0x11d922f98 <col:27> 'struct hrtimer *' <LValueToRValue>
    |     | `-DeclRefExpr 0x11d922e90 <col:27> 'struct hrtimer *' lvalue ParmVar 0x11e00e248 'timer' 'struct hrtimer *'
    |     `-UnaryOperator 0x11d922f00 <col:34, col:35> 'unsigned long *' prefix '&' cannot overflow
    |       `-DeclRefExpr 0x11d922eb0 <col:35> 'unsigned long' lvalue Var 0x11d922be0 'flags' 'unsigned long'
    |-CallExpr 0x11d923198 <line:11:2, col:34> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11d9230c8 <col:2> 'int ()' Function 0x11d923010 'remove_hrtimer' 'int ()'
    | |-DeclRefExpr 0x11d9230e8 <col:17> 'struct hrtimer *' lvalue ParmVar 0x11e00e248 'timer' 'struct hrtimer *'
    | |-DeclRefExpr 0x11d923108 <col:24> 'struct hrtimer_clock_base *' lvalue Var 0x11d922a98 'base' 'struct hrtimer_clock_base *'
    | `-RecoveryExpr 0x11d923178 <col:30> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x11d9234a0 <line:13:2, line:14:45>
    | |-BinaryOperator 0x11d923248 <line:13:6, col:13> '<dependent type>' contains-errors '&'
    | | |-RecoveryExpr 0x11d9231d0 <col:6> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x11d923228 <col:13> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x11d923480 <line:14:3, col:45> '<dependent type>' contains-errors '='
    |   |-RecoveryExpr 0x11d923288 <col:3> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x11d923268 <col:3> 'int' lvalue ParmVar 0x11e00e2e0 'tim' 'int'
    |   `-CallExpr 0x11d923450 <col:9, col:45> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x11d923390 <col:9> 'int ()' Function 0x11d9232d8 'ktime_add_safe' 'int ()'
    |     |-RecoveryExpr 0x11d9233b0 <col:24> '<dependent type>' contains-errors lvalue
    |     `-CallExpr 0x11d923430 <col:29, col:44> '<dependent type>' contains-errors
    |       `-RecoveryExpr 0x11d923408 <col:29, col:35> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x11d9233d0 <col:29> 'struct hrtimer_clock_base *' lvalue Var 0x11d922a98 'base' 'struct hrtimer_clock_base *'
    |-BinaryOperator 0x11d9240b8 <line:16:2, col:46> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x11d9234e0 <col:2> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x11d9234c0 <col:2> 'int' lvalue ParmVar 0x11e00e2e0 'tim' 'int'
    | `-CallExpr 0x11d924080 <col:8, col:46> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11d924000 <col:8> 'int ()' Function 0x11d923530 'hrtimer_update_lowres' 'int ()'
    |   |-DeclRefExpr 0x11d924020 <col:30> 'struct hrtimer *' lvalue ParmVar 0x11e00e248 'timer' 'struct hrtimer *'
    |   |-RecoveryExpr 0x11d924040 <col:37> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x11d924060 <col:42> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x11d924238 <line:18:2, col:51> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11d9241b8 <col:2> 'int ()' Function 0x11d924100 'hrtimer_set_expires_range_ns' 'int ()'
    | |-DeclRefExpr 0x11d9241d8 <col:31> 'struct hrtimer *' lvalue ParmVar 0x11e00e248 'timer' 'struct hrtimer *'
    | |-RecoveryExpr 0x11d9241f8 <col:38> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x11d924218 <col:43> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x11d9244f8 <line:21:2, col:72> 'struct hrtimer_clock_base *' contains-errors '='
    | |-DeclRefExpr 0x11d924270 <col:2> 'struct hrtimer_clock_base *' lvalue Var 0x11d922b28 'new_base' 'struct hrtimer_clock_base *'
    | `-CallExpr 0x11d9244c0 <col:13, col:72> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11d924370 <col:13> 'int ()' Function 0x11d9242b8 'switch_hrtimer_base' 'int ()'
    |   |-DeclRefExpr 0x11d924390 <col:33> 'struct hrtimer *' lvalue ParmVar 0x11e00e248 'timer' 'struct hrtimer *'
    |   |-DeclRefExpr 0x11d9243b0 <col:40> 'struct hrtimer_clock_base *' lvalue Var 0x11d922a98 'base' 'struct hrtimer_clock_base *'
    |   `-BinaryOperator 0x11d9244a0 <col:46, col:53> '<dependent type>' contains-errors '&'
    |     |-RecoveryExpr 0x11d9243d0 <col:46> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x11d924480 <col:53> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x11d924650 <line:23:2, col:42> 'int'
    | |-ImplicitCastExpr 0x11d924638 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x11d9245f8 <col:2> 'int ()' Function 0x11d924540 'timer_stats_hrtimer_set_start_info' 'int ()'
    | `-ImplicitCastExpr 0x11d924678 <col:37> 'struct hrtimer *' <LValueToRValue>
    |   `-DeclRefExpr 0x11d924618 <col:37> 'struct hrtimer *' lvalue ParmVar 0x11e00e248 'timer' 'struct hrtimer *'
    |-BinaryOperator 0x11d924868 <line:25:2, col:44> 'int' '='
    | |-DeclRefExpr 0x11d924690 <col:2> 'int' lvalue Var 0x11d922c78 'leftmost' 'int'
    | `-CallExpr 0x11d924808 <col:13, col:44> 'int'
    |   |-ImplicitCastExpr 0x11d9247f0 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x11d924790 <col:13> 'int ()' Function 0x11d9246d8 'enqueue_hrtimer' 'int ()'
    |   |-ImplicitCastExpr 0x11d924838 <col:29> 'struct hrtimer *' <LValueToRValue>
    |   | `-DeclRefExpr 0x11d9247b0 <col:29> 'struct hrtimer *' lvalue ParmVar 0x11e00e248 'timer' 'struct hrtimer *'
    |   `-ImplicitCastExpr 0x11d924850 <col:36> 'struct hrtimer_clock_base *' <LValueToRValue>
    |     `-DeclRefExpr 0x11d9247d0 <col:36> 'struct hrtimer_clock_base *' lvalue Var 0x11d922b28 'new_base' 'struct hrtimer_clock_base *'
    |-IfStmt 0x11d924940 <line:26:2, line:27:8>
    | |-UnaryOperator 0x11d9248c0 <line:26:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x11d9248a8 <col:7> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x11d924888 <col:7> 'int' lvalue Var 0x11d922c78 'leftmost' 'int'
    | `-GotoStmt 0x11d924928 <line:27:3, col:8> 'unlock' 0x11d9248d8
    |-IfStmt 0x11d924f70 <line:29:2, line:35:2> has_else
    | |-UnaryOperator 0x11d924ad8 <line:29:6, col:35> 'int' prefix '!' cannot overflow
    | | `-CallExpr 0x11d924a98 <col:7, col:35> 'int'
    | |   |-ImplicitCastExpr 0x11d924a80 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x11d924a40 <col:7> 'int ()' Function 0x11d924988 'hrtimer_is_hres_active' 'int ()'
    | |   `-ImplicitCastExpr 0x11d924ac0 <col:30> 'struct hrtimer *' <LValueToRValue>
    | |     `-DeclRefExpr 0x11d924a60 <col:30> 'struct hrtimer *' lvalue ParmVar 0x11e00e248 'timer' 'struct hrtimer *'
    | |-CompoundStmt 0x11d924d88 <col:38, line:33:2>
    | | `-IfStmt 0x11d924d68 <line:31:3, line:32:44>
    | |   |-CXXDependentScopeMemberExpr 0x11d924b50 <line:31:7, col:27> '<dependent type>' contains-errors lvalue ->nohz_active
    | |   | `-RecoveryExpr 0x11d924b28 <col:7, col:17> '<dependent type>' contains-errors lvalue
    | |   |   `-DeclRefExpr 0x11d924af0 <col:7> 'struct hrtimer_clock_base *' lvalue Var 0x11d922b28 'new_base' 'struct hrtimer_clock_base *'
    | |   `-CallExpr 0x11d924d40 <line:32:4, col:44> '<dependent type>' contains-errors
    | |     |-DeclRefExpr 0x11d924c78 <col:4> 'int ()' Function 0x11d924bc0 'wake_up_nohz_cpu' 'int ()'
    | |     `-CXXDependentScopeMemberExpr 0x11d924cf8 <col:21, col:41> '<dependent type>' contains-errors lvalue ->cpu
    | |       `-RecoveryExpr 0x11d924cd0 <col:21, col:31> '<dependent type>' contains-errors lvalue
    | |         `-DeclRefExpr 0x11d924c98 <col:21> 'struct hrtimer_clock_base *' lvalue Var 0x11d922b28 'new_base' 'struct hrtimer_clock_base *'
    | `-CompoundStmt 0x11d924f58 <line:33:9, line:35:2>
    |   `-CallExpr 0x11d924ef8 <line:34:3, col:36> 'int'
    |     |-ImplicitCastExpr 0x11d924ee0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x11d924e80 <col:3> 'int ()' Function 0x11d924dc8 'hrtimer_reprogram' 'int ()'
    |     |-ImplicitCastExpr 0x11d924f28 <col:21> 'struct hrtimer *' <LValueToRValue>
    |     | `-DeclRefExpr 0x11d924ea0 <col:21> 'struct hrtimer *' lvalue ParmVar 0x11e00e248 'timer' 'struct hrtimer *'
    |     `-ImplicitCastExpr 0x11d924f40 <col:28> 'struct hrtimer_clock_base *' <LValueToRValue>
    |       `-DeclRefExpr 0x11d924ec0 <col:28> 'struct hrtimer_clock_base *' lvalue Var 0x11d922b28 'new_base' 'struct hrtimer_clock_base *'
    `-LabelStmt 0x11e027590 <line:36:1, line:37:35> 'unlock'
      `-CallExpr 0x11e027548 <col:2, col:35> 'int'
        |-ImplicitCastExpr 0x11e027530 <col:2> 'int (*)()' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x11e0274b8 <col:2> 'int ()' Function 0x11e027400 'unlock_hrtimer_base' 'int ()'
        |-ImplicitCastExpr 0x11e027578 <col:22> 'struct hrtimer *' <LValueToRValue>
        | `-DeclRefExpr 0x11e0274d8 <col:22> 'struct hrtimer *' lvalue ParmVar 0x11e00e248 'timer' 'struct hrtimer *'
        `-UnaryOperator 0x11e027518 <col:29, col:30> 'unsigned long *' prefix '&' cannot overflow
          `-DeclRefExpr 0x11e0274f8 <col:30> 'unsigned long' lvalue Var 0x11d922be0 'flags' 'unsigned long'
