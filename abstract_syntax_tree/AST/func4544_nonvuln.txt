TranslationUnitDecl 0x144828208 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1448290b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1448287d0 '__int128'
|-TypedefDecl 0x144829128 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1448287f0 'unsigned __int128'
|-TypedefDecl 0x1448f8e30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1448f8c00 'struct __NSConstantString_tag'
|   `-Record 0x144829180 '__NSConstantString_tag'
|-TypedefDecl 0x1448f8e98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x144828990 '__SVInt8_t'
|-TypedefDecl 0x1448f8f00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1448289b0 '__SVInt16_t'
|-TypedefDecl 0x1448f8f68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1448289d0 '__SVInt32_t'
|-TypedefDecl 0x1448f8fd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1448289f0 '__SVInt64_t'
|-TypedefDecl 0x1448f9038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x144828a10 '__SVUint8_t'
|-TypedefDecl 0x1448f90a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x144828a30 '__SVUint16_t'
|-TypedefDecl 0x1448f9108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x144828a50 '__SVUint32_t'
|-TypedefDecl 0x1448f9170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x144828a70 '__SVUint64_t'
|-TypedefDecl 0x1448f91d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x144828a90 '__SVFloat16_t'
|-TypedefDecl 0x1448f9240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x144828ab0 '__SVFloat32_t'
|-TypedefDecl 0x1448f92a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x144828ad0 '__SVFloat64_t'
|-TypedefDecl 0x1448f9310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x144828af0 '__SVBfloat16_t'
|-TypedefDecl 0x1448f9378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x144828b10 '__clang_svint8x2_t'
|-TypedefDecl 0x1448f93e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x144828b30 '__clang_svint16x2_t'
|-TypedefDecl 0x1448f9448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x144828b50 '__clang_svint32x2_t'
|-TypedefDecl 0x1448f94b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x144828b70 '__clang_svint64x2_t'
|-TypedefDecl 0x1448f9518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x144828b90 '__clang_svuint8x2_t'
|-TypedefDecl 0x1448f9580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x144828bb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1448f95e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x144828bd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x1448f9650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x144828bf0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1448f96b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x144828c10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x1448f9720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x144828c30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x1448f9788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x144828c50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1448f97f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x144828c70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x1448f9858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x144828c90 '__clang_svint8x3_t'
|-TypedefDecl 0x1448f98c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x144828cb0 '__clang_svint16x3_t'
|-TypedefDecl 0x1448f9928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x144828cd0 '__clang_svint32x3_t'
|-TypedefDecl 0x1448f9990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x144828cf0 '__clang_svint64x3_t'
|-TypedefDecl 0x1448f99f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x144828d10 '__clang_svuint8x3_t'
|-TypedefDecl 0x1448f9a60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x144828d30 '__clang_svuint16x3_t'
|-TypedefDecl 0x1448f9ac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x144828d50 '__clang_svuint32x3_t'
|-TypedefDecl 0x1448f9b30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x144828d70 '__clang_svuint64x3_t'
|-TypedefDecl 0x1448f9b98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x144828d90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x1448fa400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x144828db0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x1448fa468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x144828dd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1448fa4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x144828df0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x1448fa538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x144828e10 '__clang_svint8x4_t'
|-TypedefDecl 0x1448fa5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x144828e30 '__clang_svint16x4_t'
|-TypedefDecl 0x1448fa608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x144828e50 '__clang_svint32x4_t'
|-TypedefDecl 0x1448fa670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x144828e70 '__clang_svint64x4_t'
|-TypedefDecl 0x1448fa6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x144828e90 '__clang_svuint8x4_t'
|-TypedefDecl 0x1448fa740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x144828eb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1448fa7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x144828ed0 '__clang_svuint32x4_t'
|-TypedefDecl 0x1448fa810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x144828ef0 '__clang_svuint64x4_t'
|-TypedefDecl 0x1448fa878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x144828f10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1448fa8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x144828f30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x1448fa948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x144828f50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1448fa9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x144828f70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x1448faa18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x144828f90 '__SVBool_t'
|-TypedefDecl 0x1448faa80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x144828fb0 '__clang_svboolx2_t'
|-TypedefDecl 0x1448faae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x144828fd0 '__clang_svboolx4_t'
|-TypedefDecl 0x1448fab50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x144828ff0 '__SVCount_t'
|-TypedefDecl 0x1448fabf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1448fabb0 'char *'
|   `-BuiltinType 0x1448282b0 'char'
|-TypedefDecl 0x1448fac68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1448fabb0 'char *'
|   `-BuiltinType 0x1448282b0 'char'
`-FunctionDecl 0x1448fae38 <dataset_diviso_filec/func4544_nonvuln.c:1:1, line:13:1> line:1:1 TEST 'int (int, int)'
  |-ParmVarDecl 0x1448fad58 <col:6> col:6 EqOp 'int'
  |-ParmVarDecl 0x1448facd8 <col:12> col:12 ElemMatchKey 'int'
  `-CompoundStmt 0x145009d68 <col:26, line:13:1>
    |-CallExpr 0x144913a80 <line:6:5, col:55> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1448fb060 <col:5> 'int ()' Function 0x1448fafa8 'ASSERT' 'int ()'
    | `-UnaryOperator 0x144913a68 <col:12, col:54> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   `-CallExpr 0x144913a38 <col:13, col:54> '<dependent type>' contains-errors
    |     |-CXXDependentScopeMemberExpr 0x1449139b8 <col:13, col:16> '<dependent type>' contains-errors lvalue .matchesBSON
    |     | `-RecoveryExpr 0x144913998 <col:13> '<dependent type>' contains-errors lvalue
    |     |-CallExpr 0x1449138d0 <col:28, col:43> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x1448fb1c0 <col:28> 'int ()' Function 0x1448fb108 'BSON' 'int ()'
    |     | `-RecoveryExpr 0x1449138a0 <col:33, col:42> '<dependent type>' contains-errors lvalue
    |     |   |-StringLiteral 0x1448fb220 <col:33> 'char[4]' lvalue "STR"
    |     |   `-IntegerLiteral 0x1448fb240 <col:42> 'int' 4
    |     `-UnaryOperator 0x144913a20 <col:46, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       `-RecoveryExpr 0x144913a00 <col:47> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x144913c28 <line:7:5, col:38> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x144913aa8 <col:5> 'int ()' Function 0x1448fafa8 'ASSERT' 'int ()'
    | `-UnaryOperator 0x144913c10 <col:12, col:37> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   `-CallExpr 0x144913bf0 <col:13, col:37> '<dependent type>' contains-errors
    |     `-CXXDependentScopeMemberExpr 0x144913ba8 <col:13, col:21> '<dependent type>' contains-errors lvalue .hasElemMatchKey
    |       `-RecoveryExpr 0x144913b88 <col:13> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x144913ef8 <line:8:5, col:54> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x144913c50 <col:5> 'int ()' Function 0x1448fafa8 'ASSERT' 'int ()'
    | `-CallExpr 0x144913ec8 <col:12, col:53> '<dependent type>' contains-errors
    |   |-CXXDependentScopeMemberExpr 0x144913e48 <col:12, col:15> '<dependent type>' contains-errors lvalue .matchesBSON
    |   | `-RecoveryExpr 0x144913e28 <col:12> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x144913d78 <col:27, col:42> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x144913cd0 <col:27> 'int ()' Function 0x1448fb108 'BSON' 'int ()'
    |   | `-RecoveryExpr 0x144913d48 <col:32, col:41> '<dependent type>' contains-errors lvalue
    |   |   |-StringLiteral 0x144913cf0 <col:32> 'char[4]' lvalue "STR"
    |   |   `-IntegerLiteral 0x144913d10 <col:41> 'int' 5
    |   `-UnaryOperator 0x144913eb0 <col:45, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x144913e90 <col:46> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x1449140a0 <line:9:5, col:38> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x144913f20 <col:5> 'int ()' Function 0x1448fafa8 'ASSERT' 'int ()'
    | `-UnaryOperator 0x144914088 <col:12, col:37> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   `-CallExpr 0x144914068 <col:13, col:37> '<dependent type>' contains-errors
    |     `-CXXDependentScopeMemberExpr 0x144914020 <col:13, col:21> '<dependent type>' contains-errors lvalue .hasElemMatchKey
    |       `-RecoveryExpr 0x144914000 <col:13> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x145009c00 <line:10:5, col:76> '<dependent type>' contains-errors
      |-DeclRefExpr 0x1449140c8 <col:5> 'int ()' Function 0x1448fafa8 'ASSERT' 'int ()'
      `-CallExpr 0x1449145d0 <col:12, col:75> '<dependent type>' contains-errors
        |-CXXDependentScopeMemberExpr 0x1449144b8 <col:12, col:15> '<dependent type>' contains-errors lvalue .matchesBSON
        | `-RecoveryExpr 0x144914498 <col:12> '<dependent type>' contains-errors lvalue
        |-CallExpr 0x144914570 <col:27, col:64> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x144914148 <col:27> 'int ()' Function 0x1448fb108 'BSON' 'int ()'
        | `-RecoveryExpr 0x144914540 <col:32, col:63> '<dependent type>' contains-errors lvalue
        |   |-StringLiteral 0x144914168 <col:32> 'char[4]' lvalue "STR"
        |   `-CallExpr 0x144914518 <col:41, col:63> 'int'
        |     |-ImplicitCastExpr 0x144914500 <col:41> 'int (*)()' <FunctionToPointerDecay>
        |     | `-DeclRefExpr 0x144914268 <col:41> 'int ()' Function 0x1449141b0 'BSON_ARRAY' 'int ()'
        |     `-BinaryOperator 0x144914308 <col:52, col:62> 'int' '<<'
        |       |-BinaryOperator 0x1449142c8 <col:52, col:57> 'int' '<<'
        |       | |-IntegerLiteral 0x144914288 <col:52> 'int' 1
        |       | `-IntegerLiteral 0x1449142a8 <col:57> 'int' 2
        |       `-IntegerLiteral 0x1449142e8 <col:62> 'int' 5
        `-UnaryOperator 0x1449145b8 <col:67, col:68> '<dependent type>' contains-errors prefix '&' cannot overflow
          `-RecoveryExpr 0x144914598 <col:68> '<dependent type>' contains-errors lvalue
