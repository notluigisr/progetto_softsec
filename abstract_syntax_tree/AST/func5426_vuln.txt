TranslationUnitDecl 0x11d055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11d0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11d055bd0 '__int128'
|-TypedefDecl 0x11d056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11d055bf0 'unsigned __int128'
|-TypedefDecl 0x11d80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x11d80bc00 'struct __NSConstantString_tag'
|   `-Record 0x11d056580 '__NSConstantString_tag'
|-TypedefDecl 0x11d80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11d055d90 '__SVInt8_t'
|-TypedefDecl 0x11d80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11d055db0 '__SVInt16_t'
|-TypedefDecl 0x11d80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11d055dd0 '__SVInt32_t'
|-TypedefDecl 0x11d80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11d055df0 '__SVInt64_t'
|-TypedefDecl 0x11d80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11d055e10 '__SVUint8_t'
|-TypedefDecl 0x11d80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11d055e30 '__SVUint16_t'
|-TypedefDecl 0x11d80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11d055e50 '__SVUint32_t'
|-TypedefDecl 0x11d80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11d055e70 '__SVUint64_t'
|-TypedefDecl 0x11d80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11d055e90 '__SVFloat16_t'
|-TypedefDecl 0x11d80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11d055eb0 '__SVFloat32_t'
|-TypedefDecl 0x11d80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11d055ed0 '__SVFloat64_t'
|-TypedefDecl 0x11d80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11d055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x11d80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11d055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x11d80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11d055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x11d80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11d055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x11d80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11d055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x11d80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11d055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x11d80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11d055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x11d80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11d055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x11d80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11d055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x11d80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11d056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x11d80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11d056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x11d80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11d056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x11d80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11d056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x11d80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11d056090 '__clang_svint8x3_t'
|-TypedefDecl 0x11d80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11d0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x11d80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11d0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x11d80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11d0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x11d80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11d056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x11d80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11d056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x11d80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11d056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x11d80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11d056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x11d80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11d056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x11d80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11d0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x11d80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11d0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x11d80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11d0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x11d80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11d056210 '__clang_svint8x4_t'
|-TypedefDecl 0x11d80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11d056230 '__clang_svint16x4_t'
|-TypedefDecl 0x11d80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11d056250 '__clang_svint32x4_t'
|-TypedefDecl 0x11d80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11d056270 '__clang_svint64x4_t'
|-TypedefDecl 0x11d80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11d056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x11d80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11d0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x11d80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11d0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x11d80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11d0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x11d80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11d056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x11d80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11d056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x11d80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11d056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x11d80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11d056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x11d80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11d056390 '__SVBool_t'
|-TypedefDecl 0x11d80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11d0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x11d80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11d0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x11d80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11d0563f0 '__SVCount_t'
|-TypedefDecl 0x11d80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x11d80dbb0 'char *'
|   `-BuiltinType 0x11d0556b0 'char'
|-TypedefDecl 0x11d80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x11d80dbb0 'char *'
|   `-BuiltinType 0x11d0556b0 'char'
`-FunctionDecl 0x11d82b758 <dataset_diviso_filec/func5426_vuln.c:1:1, line:19:1> line:1:5 invalid evm_update_evmxattr 'int (struct dentry *, const char *, const char *, int)'
  |-ParmVarDecl 0x11d80e248 <col:25, col:40> col:40 used dentry 'struct dentry *'
  |-ParmVarDecl 0x11d80e2c8 <col:48, col:60> col:60 used xattr_name 'const char *'
  |-ParmVarDecl 0x11d80e348 <line:2:4, col:16> col:16 used xattr_value 'const char *'
  |-ParmVarDecl 0x11d82b600 <col:29, col:36> col:36 invalid xattr_value_len 'int'
  `-CompoundStmt 0x11d82d7d8 <line:3:1, line:19:1>
    |-DeclStmt 0x11d82ba68 <line:4:2, col:39>
    | |-RecordDecl 0x11d82b820 <col:2, col:9> col:9 struct inode
    | `-VarDecl 0x11d82b988 <col:2, col:32> col:16 used inode 'struct inode *' cinit
    |   `-RecoveryExpr 0x11d82ba28 <col:24, col:32> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x11d82b9f0 <col:24> 'struct dentry *' lvalue ParmVar 0x11d80e248 'dentry' 'struct dentry *'
    |-DeclStmt 0x11d82bbf8 <line:5:2, col:38>
    | |-RecordDecl 0x11d82ba80 <col:2, col:9> col:9 struct evm_ima_xattr_data
    | `-VarDecl 0x11d82bb78 <col:2, col:28> col:28 referenced invalid xattr_data 'struct evm_ima_xattr_data'
    |-DeclStmt 0x11d82bcb0 <line:6:2, col:12>
    | `-VarDecl 0x11d82bc28 <col:2, col:11> col:6 used rc 'int' cinit
    |   `-IntegerLiteral 0x11d82bc90 <col:11> 'int' 0
    |-BinaryOperator 0x11d82bf90 <line:8:2, line:9:41> 'int' contains-errors '='
    | |-DeclRefExpr 0x11d82bcc8 <line:8:2> 'int' lvalue Var 0x11d82bc28 'rc' 'int'
    | `-CallExpr 0x11d82bf48 <col:7, line:9:41> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11d82be40 <line:8:7> 'int ()' Function 0x11d82bd88 'evm_calc_hmac' 'int ()'
    |   |-DeclRefExpr 0x11d82be60 <col:21> 'struct dentry *' lvalue ParmVar 0x11d80e248 'dentry' 'struct dentry *'
    |   |-DeclRefExpr 0x11d82be80 <col:29> 'const char *' lvalue ParmVar 0x11d80e2c8 'xattr_name' 'const char *'
    |   |-DeclRefExpr 0x11d82bea0 <col:41> 'const char *' lvalue ParmVar 0x11d80e348 'xattr_value' 'const char *'
    |   |-RecoveryExpr 0x11d82bec0 <line:9:7> '<dependent type>' contains-errors lvalue
    |   `-CXXDependentScopeMemberExpr 0x11d82bf00 <col:24, col:35> '<dependent type>' contains-errors lvalue .digest
    |     `-RecoveryExpr 0x11d82bee0 <col:24> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x11d82d760 <line:10:2, line:17:55> has_else
    | |-BinaryOperator 0x11d82c008 <line:10:6, col:12> 'int' '=='
    | | |-ImplicitCastExpr 0x11d82bff0 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x11d82bfb0 <col:6> 'int' lvalue Var 0x11d82bc28 'rc' 'int'
    | | `-IntegerLiteral 0x11d82bfd0 <col:12> 'int' 0
    | |-CompoundStmt 0x11d82c430 <col:15, line:15:2>
    | | |-BinaryOperator 0x11d82c110 <line:11:3, col:21> '<dependent type>' contains-errors '='
    | | | |-CXXDependentScopeMemberExpr 0x11d82c070 <col:3, col:14> '<dependent type>' contains-errors lvalue .type
    | | | | `-RecoveryExpr 0x11d82c048 <col:3> '<dependent type>' contains-errors lvalue
    | | | |   `-DeclRefExpr 0x11d82c028 <col:3> 'struct evm_ima_xattr_data' lvalue Var 0x11d82bb78 'xattr_data' 'struct evm_ima_xattr_data'
    | | | `-RecoveryExpr 0x11d82c0f0 <col:21> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x11d82c410 <line:12:3, line:14:30> 'int' contains-errors '='
    | |   |-DeclRefExpr 0x11d82c130 <line:12:3> 'int' lvalue Var 0x11d82bc28 'rc' 'int'
    | |   `-CallExpr 0x11d82c3c8 <col:8, line:14:30> '<dependent type>' contains-errors
    | |     |-DeclRefExpr 0x11d82c230 <line:12:8> 'int ()' Function 0x11d82c178 '__vfs_setxattr_noperm' 'int ()'
    | |     |-DeclRefExpr 0x11d82c250 <col:30> 'struct dentry *' lvalue ParmVar 0x11d80e248 'dentry' 'struct dentry *'
    | |     |-RecoveryExpr 0x11d82c3a8 <col:38> '<dependent type>' contains-errors lvalue
    | |     |-UnaryOperator 0x11d82c2a8 <line:13:9, col:10> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |     | `-RecoveryExpr 0x11d82c288 <col:10> '<dependent type>' contains-errors lvalue
    | |     |-UnaryExprOrTypeTraitExpr 0x11d82c300 <line:14:9, col:26> 'unsigned long' contains-errors sizeof
    | |     | `-ParenExpr 0x11d82c2e0 <col:15, col:26> '<dependent type>' contains-errors lvalue
    | |     |   `-RecoveryExpr 0x11d82c2c0 <col:16> '<dependent type>' contains-errors lvalue
    | |     `-IntegerLiteral 0x11d82c320 <col:29> 'int' 0
    | `-IfStmt 0x11d82d740 <line:16:7, line:17:55>
    |   |-BinaryOperator 0x11d82c528 <line:16:11, col:18> 'int' contains-errors '=='
    |   | |-DeclRefExpr 0x11d82c450 <col:11> 'int' lvalue Var 0x11d82bc28 'rc' 'int'
    |   | `-UnaryOperator 0x11d82c510 <col:17, col:18> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x11d82c4f8 <col:18> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x11d82c4d8 <col:18> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x11d82d720 <line:17:3, col:55> 'int' contains-errors '='
    |     |-DeclRefExpr 0x11d82c548 <col:3> 'int' lvalue Var 0x11d82bc28 'rc' 'int'
    |     `-CallExpr 0x11d82d6f0 <col:8, col:55> '<dependent type>' contains-errors
    |       |-CXXDependentScopeMemberExpr 0x11d82d600 <col:8, col:21> '<dependent type>' contains-errors lvalue ->removexattr
    |       | `-RecoveryExpr 0x11d82c5a0 <col:8, col:15> '<dependent type>' contains-errors lvalue
    |       |   `-DeclRefExpr 0x11d82c568 <col:8> 'struct inode *' contains-errors lvalue Var 0x11d82b988 'inode' 'struct inode *'
    |       |-DeclRefExpr 0x11d82d648 <col:33> 'struct dentry *' lvalue ParmVar 0x11d80e248 'dentry' 'struct dentry *'
    |       `-RecoveryExpr 0x11d82d6d0 <col:41> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x11d82d7c8 <line:18:2, col:9>
      `-ImplicitCastExpr 0x11d82d7b0 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x11d82d790 <col:9> 'int' lvalue Var 0x11d82bc28 'rc' 'int'
