TranslationUnitDecl 0x144827808 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1448286b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x144827dd0 '__int128'
|-TypedefDecl 0x144828728 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x144827df0 'unsigned __int128'
|-TypedefDecl 0x14381a830 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14381a600 'struct __NSConstantString_tag'
|   `-Record 0x144828780 '__NSConstantString_tag'
|-TypedefDecl 0x14381a898 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x144827f90 '__SVInt8_t'
|-TypedefDecl 0x14381a900 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x144827fb0 '__SVInt16_t'
|-TypedefDecl 0x14381a968 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x144827fd0 '__SVInt32_t'
|-TypedefDecl 0x14381a9d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x144827ff0 '__SVInt64_t'
|-TypedefDecl 0x14381aa38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x144828010 '__SVUint8_t'
|-TypedefDecl 0x14381aaa0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x144828030 '__SVUint16_t'
|-TypedefDecl 0x14381ab08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x144828050 '__SVUint32_t'
|-TypedefDecl 0x14381ab70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x144828070 '__SVUint64_t'
|-TypedefDecl 0x14381abd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x144828090 '__SVFloat16_t'
|-TypedefDecl 0x14381ac40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1448280b0 '__SVFloat32_t'
|-TypedefDecl 0x14381aca8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1448280d0 '__SVFloat64_t'
|-TypedefDecl 0x14381ad10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1448280f0 '__SVBfloat16_t'
|-TypedefDecl 0x14381ad78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x144828110 '__clang_svint8x2_t'
|-TypedefDecl 0x14381ade0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x144828130 '__clang_svint16x2_t'
|-TypedefDecl 0x14381ae48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x144828150 '__clang_svint32x2_t'
|-TypedefDecl 0x14381aeb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x144828170 '__clang_svint64x2_t'
|-TypedefDecl 0x14381af18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x144828190 '__clang_svuint8x2_t'
|-TypedefDecl 0x14381af80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1448281b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14381afe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1448281d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14381b050 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1448281f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14381b0b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x144828210 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14381b120 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x144828230 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14381b188 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x144828250 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14381b1f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x144828270 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14381b258 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x144828290 '__clang_svint8x3_t'
|-TypedefDecl 0x14381b2c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1448282b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14381b328 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1448282d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14381b390 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1448282f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14381b3f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x144828310 '__clang_svuint8x3_t'
|-TypedefDecl 0x14381b460 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x144828330 '__clang_svuint16x3_t'
|-TypedefDecl 0x14381b4c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x144828350 '__clang_svuint32x3_t'
|-TypedefDecl 0x14381b530 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x144828370 '__clang_svuint64x3_t'
|-TypedefDecl 0x14381b598 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x144828390 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14381ba00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1448283b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14381ba68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1448283d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14381bad0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1448283f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14381bb38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x144828410 '__clang_svint8x4_t'
|-TypedefDecl 0x14381bba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x144828430 '__clang_svint16x4_t'
|-TypedefDecl 0x14381bc08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x144828450 '__clang_svint32x4_t'
|-TypedefDecl 0x14381bc70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x144828470 '__clang_svint64x4_t'
|-TypedefDecl 0x14381bcd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x144828490 '__clang_svuint8x4_t'
|-TypedefDecl 0x14381bd40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1448284b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14381bda8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1448284d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14381be10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1448284f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14381be78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x144828510 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14381bee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x144828530 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14381bf48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x144828550 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14381bfb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x144828570 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14381c018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x144828590 '__SVBool_t'
|-TypedefDecl 0x14381c080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1448285b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14381c0e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1448285d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14381c150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1448285f0 '__SVCount_t'
|-TypedefDecl 0x14381c1f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14381c1b0 'char *'
|   `-BuiltinType 0x1448278b0 'char'
|-TypedefDecl 0x14381c268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14381c1b0 'char *'
|   `-BuiltinType 0x1448278b0 'char'
`-FunctionDecl 0x14381c5a8 <dataset_diviso_filec/func23044_vuln.c:1:1, line:68:1> line:1:1 invalid lmp_print_data_link_subobjs 'int (int *, const char *, int, int)'
  |-ParmVarDecl 0x14381c328 <col:29, col:49> col:49 invalid ndo 'int *'
  |-ParmVarDecl 0x14381c3a8 <col:54, col:68> col:68 used obj_tptr 'const char *'
  |-ParmVarDecl 0x14381c428 <line:2:29, col:33> col:33 used total_subobj_len 'int'
  |-ParmVarDecl 0x14381c4a8 <col:51, col:55> col:55 used offset 'int'
  `-CompoundStmt 0x1438453c0 <line:3:1, line:68:1>
    |-DeclStmt 0x14381c728 <line:4:5, col:24>
    | `-VarDecl 0x14381c688 <col:5, col:19> col:9 used hexdump 'int' cinit
    |   `-RecoveryExpr 0x14381c708 <col:19> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x14381c858 <line:5:5, col:32>
    | |-VarDecl 0x14381c758 <col:5, col:9> col:9 used subobj_type 'int'
    | `-VarDecl 0x14381c7d8 <col:5, col:22> col:22 used subobj_len 'int'
    |-DeclStmt 0x1440134d8 <line:7:5, line:10:9>
    | |-RecordDecl 0x14381c870 <line:7:5, line:10:5> line:7:5 invalid union definition
    | | |-FieldDecl 0x14381c928 <line:8:9, col:15> col:15 referenced f 'float'
    | | `-FieldDecl 0x14381c990 <line:9:9, col:18> col:18 invalid i 'int'
    | `-VarDecl 0x144013458 <line:7:5, line:10:7> col:7 used bw 'union (unnamed union at dataset_diviso_filec/func23044_vuln.c:7:5)':'union (unnamed at dataset_diviso_filec/func23044_vuln.c:7:5)'
    |-WhileStmt 0x143845280 <line:12:5, line:64:5>
    | |-BinaryOperator 0x144013690 <line:12:12, col:47> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x144013630 <col:12, col:31> 'int' '>'
    | | | |-ImplicitCastExpr 0x144013618 <col:12> 'int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x1440134f0 <col:12> 'int' lvalue ParmVar 0x14381c428 'total_subobj_len' 'int'
    | | | `-IntegerLiteral 0x144013510 <col:31> 'int' 0
    | | `-BinaryOperator 0x144013670 <col:36, col:47> 'int' contains-errors '=='
    | |   |-DeclRefExpr 0x144013568 <col:36> 'int' contains-errors lvalue Var 0x14381c688 'hexdump' 'int'
    | |   `-RecoveryExpr 0x144013650 <col:47> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x143845230 <col:55, line:64:5>
    |   |-BinaryOperator 0x144013950 <line:13:2, col:47> 'int' '='
    |   | |-DeclRefExpr 0x1440136b0 <col:2> 'int' lvalue Var 0x14381c758 'subobj_type' 'int'
    |   | `-CallExpr 0x144013928 <col:16, col:47> 'int'
    |   |   |-ImplicitCastExpr 0x144013910 <col:16> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x144013830 <col:16> 'int ()' Function 0x144013778 'EXTRACT_8BITS' 'int ()'
    |   |   `-BinaryOperator 0x1440138c0 <col:30, col:41> 'const char *' '+'
    |   |     |-ImplicitCastExpr 0x144013890 <col:30> 'const char *' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x144013850 <col:30> 'const char *' lvalue ParmVar 0x14381c3a8 'obj_tptr' 'const char *'
    |   |     `-ImplicitCastExpr 0x1440138a8 <col:41> 'int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x144013870 <col:41> 'int' lvalue ParmVar 0x14381c4a8 'offset' 'int'
    |   |-BinaryOperator 0x144013ac0 <line:14:2, col:51> 'int' '='
    |   | |-DeclRefExpr 0x144013970 <col:2> 'int' lvalue Var 0x14381c7d8 'subobj_len' 'int'
    |   | `-CallExpr 0x144013a98 <col:16, col:51> 'int'
    |   |   |-ImplicitCastExpr 0x144013a80 <col:16> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x144013990 <col:16> 'int ()' Function 0x144013778 'EXTRACT_8BITS' 'int ()'
    |   |   `-BinaryOperator 0x144013a60 <col:30, col:50> 'const char *' '+'
    |   |     |-BinaryOperator 0x144013a20 <col:30, col:41> 'const char *' '+'
    |   |     | |-ImplicitCastExpr 0x1440139f0 <col:30> 'const char *' <LValueToRValue>
    |   |     | | `-DeclRefExpr 0x1440139b0 <col:30> 'const char *' lvalue ParmVar 0x14381c3a8 'obj_tptr' 'const char *'
    |   |     | `-ImplicitCastExpr 0x144013a08 <col:41> 'int' <LValueToRValue>
    |   |     |   `-DeclRefExpr 0x1440139d0 <col:41> 'int' lvalue ParmVar 0x14381c4a8 'offset' 'int'
    |   |     `-IntegerLiteral 0x144013a40 <col:50> 'int' 1
    |   |-IfStmt 0x144014018 <line:21:2, line:24:2>
    |   | |-BinaryOperator 0x144013f08 <line:21:6, col:19> 'int' '<'
    |   | | |-ImplicitCastExpr 0x144013ef0 <col:6> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x144013eb0 <col:6> 'int' lvalue Var 0x14381c7d8 'subobj_len' 'int'
    |   | | `-IntegerLiteral 0x144013ed0 <col:19> 'int' 4
    |   | `-CompoundStmt 0x144013ff8 <col:22, line:24:2>
    |   |   |-CallExpr 0x144013fc8 <line:22:6, col:27> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x144013f28 <col:6> 'int ()' Function 0x144013b08 'ND_PRINT' 'int ()'
    |   |   | `-ParenExpr 0x144013fa8 <col:15, col:26> 'char[4]' contains-errors
    |   |   |   `-BinaryOperator 0x144013f88 <col:16, col:21> 'char[4]' contains-errors ','
    |   |   |     |-RecoveryExpr 0x144013f48 <col:16> '<dependent type>' contains-errors lvalue
    |   |   |     `-StringLiteral 0x144013f68 <col:21> 'char[4]' lvalue "STR"
    |   |   `-BreakStmt 0x144013ff0 <line:23:6>
    |   |-IfStmt 0x144014200 <line:25:2, line:28:2>
    |   | |-BinaryOperator 0x1440140f0 <line:25:6, col:26> 'int' '!='
    |   | | |-ParenExpr 0x1440140b0 <col:6, col:21> 'int'
    |   | | | `-BinaryOperator 0x144014090 <col:7, col:20> 'int' '%'
    |   | | |   |-ImplicitCastExpr 0x144014078 <col:7> 'int' <LValueToRValue>
    |   | | |   | `-DeclRefExpr 0x144014038 <col:7> 'int' lvalue Var 0x14381c7d8 'subobj_len' 'int'
    |   | | |   `-IntegerLiteral 0x144014058 <col:20> 'int' 4
    |   | | `-IntegerLiteral 0x1440140d0 <col:26> 'int' 0
    |   | `-CompoundStmt 0x1440141e0 <col:29, line:28:2>
    |   |   |-CallExpr 0x1440141b0 <line:26:6, col:27> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x144014110 <col:6> 'int ()' Function 0x144013b08 'ND_PRINT' 'int ()'
    |   |   | `-ParenExpr 0x144014190 <col:15, col:26> 'char[4]' contains-errors
    |   |   |   `-BinaryOperator 0x144014170 <col:16, col:21> 'char[4]' contains-errors ','
    |   |   |     |-RecoveryExpr 0x144014130 <col:16> '<dependent type>' contains-errors lvalue
    |   |   |     `-StringLiteral 0x144014150 <col:21> 'char[4]' lvalue "STR"
    |   |   `-BreakStmt 0x1440141d8 <line:27:6>
    |   |-IfStmt 0x1440143a0 <line:29:2, line:32:2>
    |   | |-BinaryOperator 0x144014290 <line:29:6, col:25> 'int' '<'
    |   | | |-ImplicitCastExpr 0x144014260 <col:6> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x144014220 <col:6> 'int' lvalue ParmVar 0x14381c428 'total_subobj_len' 'int'
    |   | | `-ImplicitCastExpr 0x144014278 <col:25> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x144014240 <col:25> 'int' lvalue Var 0x14381c7d8 'subobj_len' 'int'
    |   | `-CompoundStmt 0x144014380 <col:37, line:32:2>
    |   |   |-CallExpr 0x144014350 <line:30:6, col:27> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x1440142b0 <col:6> 'int ()' Function 0x144013b08 'ND_PRINT' 'int ()'
    |   |   | `-ParenExpr 0x144014330 <col:15, col:26> 'char[4]' contains-errors
    |   |   |   `-BinaryOperator 0x144014310 <col:16, col:21> 'char[4]' contains-errors ','
    |   |   |     |-RecoveryExpr 0x1440142d0 <col:16> '<dependent type>' contains-errors lvalue
    |   |   |     `-StringLiteral 0x1440142f0 <col:21> 'char[4]' lvalue "STR"
    |   |   `-BreakStmt 0x144014378 <line:31:6>
    |   |-SwitchStmt 0x143843c00 <line:33:2, line:61:2>
    |   | |-ImplicitCastExpr 0x1440143e0 <line:33:9> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1440143c0 <col:9> 'int' lvalue Var 0x14381c758 'subobj_type' 'int'
    |   | `-CompoundStmt 0x1438450c0 <col:22, line:61:2>
    |   |   |-CallExpr 0x143844588 <line:45:6, col:44> 'int'
    |   |   | |-ImplicitCastExpr 0x143844570 <col:6> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | `-DeclRefExpr 0x143844480 <col:6> 'int ()' Function 0x1438443c8 'ND_TCHECK_32BITS' 'int ()'
    |   |   | `-BinaryOperator 0x143844550 <col:23, col:43> 'const char *' '+'
    |   |   |   |-BinaryOperator 0x143844510 <col:23, col:34> 'const char *' '+'
    |   |   |   | |-ImplicitCastExpr 0x1438444e0 <col:23> 'const char *' <LValueToRValue>
    |   |   |   | | `-DeclRefExpr 0x1438444a0 <col:23> 'const char *' lvalue ParmVar 0x14381c3a8 'obj_tptr' 'const char *'
    |   |   |   | `-ImplicitCastExpr 0x1438444f8 <col:34> 'int' <LValueToRValue>
    |   |   |   |   `-DeclRefExpr 0x1438444c0 <col:34> 'int' lvalue ParmVar 0x14381c4a8 'offset' 'int'
    |   |   |   `-IntegerLiteral 0x143844530 <col:43> 'int' 4
    |   |   |-BinaryOperator 0x143844808 <line:46:6, col:45> '<dependent type>' contains-errors '='
    |   |   | |-RecoveryExpr 0x1438445d0 <col:6, col:9> '<dependent type>' contains-errors lvalue
    |   |   | | `-DeclRefExpr 0x1438445b0 <col:6> 'union (unnamed union at dataset_diviso_filec/func23044_vuln.c:7:5)':'union (unnamed at dataset_diviso_filec/func23044_vuln.c:7:5)' lvalue Var 0x144013458 'bw' 'union (unnamed union at dataset_diviso_filec/func23044_vuln.c:7:5)':'union (unnamed at dataset_diviso_filec/func23044_vuln.c:7:5)'
    |   |   | `-CallExpr 0x1438447e0 <col:13, col:45> 'int'
    |   |   |   |-ImplicitCastExpr 0x1438447c8 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   |   |   | `-DeclRefExpr 0x1438446d8 <col:13> 'int ()' Function 0x143844620 'EXTRACT_32BITS' 'int ()'
    |   |   |   `-BinaryOperator 0x1438447a8 <col:28, col:44> 'const char *' '+'
    |   |   |     |-BinaryOperator 0x143844768 <col:28, col:37> 'const char *' '+'
    |   |   |     | |-ImplicitCastExpr 0x143844738 <col:28> 'const char *' <LValueToRValue>
    |   |   |     | | `-DeclRefExpr 0x1438446f8 <col:28> 'const char *' lvalue ParmVar 0x14381c3a8 'obj_tptr' 'const char *'
    |   |   |     | `-ImplicitCastExpr 0x143844750 <col:37> 'int' <LValueToRValue>
    |   |   |     |   `-DeclRefExpr 0x143844718 <col:37> 'int' lvalue ParmVar 0x14381c4a8 'offset' 'int'
    |   |   |     `-IntegerLiteral 0x143844788 <col:44> 'int' 4
    |   |   |-CallExpr 0x143844a00 <line:47:6, line:48:32> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x143844828 <line:47:6> 'int ()' Function 0x144013b08 'ND_PRINT' 'int ()'
    |   |   | `-ParenExpr 0x1438449e0 <col:15, line:48:31> 'float' contains-errors
    |   |   |   `-BinaryOperator 0x1438449c0 <line:47:16, line:48:24> 'float' contains-errors ','
    |   |   |     |-BinaryOperator 0x143844888 <line:47:16, col:21> 'char[4]' contains-errors ','
    |   |   |     | |-RecoveryExpr 0x143844848 <col:16> '<dependent type>' contains-errors lvalue
    |   |   |     | `-StringLiteral 0x143844868 <col:21> 'char[4]' lvalue "STR"
    |   |   |     `-BinaryOperator 0x1438449a0 <line:48:17, col:24> 'float' '/'
    |   |   |       |-BinaryOperator 0x143844948 <col:17, col:22> 'float' '*'
    |   |   |       | |-ImplicitCastExpr 0x143844918 <col:17, col:20> 'float' <LValueToRValue>
    |   |   |       | | `-MemberExpr 0x1438448c8 <col:17, col:20> 'float' lvalue .f 0x14381c928
    |   |   |       | |   `-DeclRefExpr 0x1438448a8 <col:17> 'union (unnamed union at dataset_diviso_filec/func23044_vuln.c:7:5)':'union (unnamed at dataset_diviso_filec/func23044_vuln.c:7:5)' lvalue Var 0x144013458 'bw' 'union (unnamed union at dataset_diviso_filec/func23044_vuln.c:7:5)':'union (unnamed at dataset_diviso_filec/func23044_vuln.c:7:5)'
    |   |   |       | `-ImplicitCastExpr 0x143844930 <col:22> 'float' <IntegralToFloating>
    |   |   |       |   `-IntegerLiteral 0x1438448f8 <col:22> 'int' 8
    |   |   |       `-ImplicitCastExpr 0x143844988 <col:24> 'float' <IntegralToFloating>
    |   |   |         `-IntegerLiteral 0x143844968 <col:24> 'int' 1000000
    |   |   |-BinaryOperator 0x143844ba0 <line:49:6, col:45> '<dependent type>' contains-errors '='
    |   |   | |-RecoveryExpr 0x143844a48 <col:6, col:9> '<dependent type>' contains-errors lvalue
    |   |   | | `-DeclRefExpr 0x143844a28 <col:6> 'union (unnamed union at dataset_diviso_filec/func23044_vuln.c:7:5)':'union (unnamed at dataset_diviso_filec/func23044_vuln.c:7:5)' lvalue Var 0x144013458 'bw' 'union (unnamed union at dataset_diviso_filec/func23044_vuln.c:7:5)':'union (unnamed at dataset_diviso_filec/func23044_vuln.c:7:5)'
    |   |   | `-CallExpr 0x143844b78 <col:13, col:45> 'int'
    |   |   |   |-ImplicitCastExpr 0x143844b60 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   |   |   | `-DeclRefExpr 0x143844a70 <col:13> 'int ()' Function 0x143844620 'EXTRACT_32BITS' 'int ()'
    |   |   |   `-BinaryOperator 0x143844b40 <col:28, col:44> 'const char *' '+'
    |   |   |     |-BinaryOperator 0x143844b00 <col:28, col:37> 'const char *' '+'
    |   |   |     | |-ImplicitCastExpr 0x143844ad0 <col:28> 'const char *' <LValueToRValue>
    |   |   |     | | `-DeclRefExpr 0x143844a90 <col:28> 'const char *' lvalue ParmVar 0x14381c3a8 'obj_tptr' 'const char *'
    |   |   |     | `-ImplicitCastExpr 0x143844ae8 <col:37> 'int' <LValueToRValue>
    |   |   |     |   `-DeclRefExpr 0x143844ab0 <col:37> 'int' lvalue ParmVar 0x14381c4a8 'offset' 'int'
    |   |   |     `-IntegerLiteral 0x143844b20 <col:44> 'int' 8
    |   |   |-CallExpr 0x143844d98 <line:50:6, line:51:32> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x143844bc0 <line:50:6> 'int ()' Function 0x144013b08 'ND_PRINT' 'int ()'
    |   |   | `-ParenExpr 0x143844d78 <col:15, line:51:31> 'float' contains-errors
    |   |   |   `-BinaryOperator 0x143844d58 <line:50:16, line:51:24> 'float' contains-errors ','
    |   |   |     |-BinaryOperator 0x143844c20 <line:50:16, col:21> 'char[4]' contains-errors ','
    |   |   |     | |-RecoveryExpr 0x143844be0 <col:16> '<dependent type>' contains-errors lvalue
    |   |   |     | `-StringLiteral 0x143844c00 <col:21> 'char[4]' lvalue "STR"
    |   |   |     `-BinaryOperator 0x143844d38 <line:51:17, col:24> 'float' '/'
    |   |   |       |-BinaryOperator 0x143844ce0 <col:17, col:22> 'float' '*'
    |   |   |       | |-ImplicitCastExpr 0x143844cb0 <col:17, col:20> 'float' <LValueToRValue>
    |   |   |       | | `-MemberExpr 0x143844c60 <col:17, col:20> 'float' lvalue .f 0x14381c928
    |   |   |       | |   `-DeclRefExpr 0x143844c40 <col:17> 'union (unnamed union at dataset_diviso_filec/func23044_vuln.c:7:5)':'union (unnamed at dataset_diviso_filec/func23044_vuln.c:7:5)' lvalue Var 0x144013458 'bw' 'union (unnamed union at dataset_diviso_filec/func23044_vuln.c:7:5)':'union (unnamed at dataset_diviso_filec/func23044_vuln.c:7:5)'
    |   |   |       | `-ImplicitCastExpr 0x143844cc8 <col:22> 'float' <IntegralToFloating>
    |   |   |       |   `-IntegerLiteral 0x143844c90 <col:22> 'int' 8
    |   |   |       `-ImplicitCastExpr 0x143844d20 <col:24> 'float' <IntegralToFloating>
    |   |   |         `-IntegerLiteral 0x143844d00 <col:24> 'int' 1000000
    |   |   |-BreakStmt 0x143844dc0 <line:52:6>
    |   |   |-CallExpr 0x143844fd0 <line:54:6, line:55:37> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x143844de0 <line:54:6> 'int ()' Function 0x144013b08 'ND_PRINT' 'int ()'
    |   |   | `-ParenExpr 0x143844fb0 <col:15, line:55:36> 'int' contains-errors
    |   |   |   `-BinaryOperator 0x143844f90 <line:54:16, line:55:35> 'int' contains-errors ','
    |   |   |     |-BinaryOperator 0x143844e40 <line:54:16, col:21> 'char[4]' contains-errors ','
    |   |   |     | |-RecoveryExpr 0x143844e00 <col:16> '<dependent type>' contains-errors lvalue
    |   |   |     | `-StringLiteral 0x143844e20 <col:21> 'char[4]' lvalue "STR"
    |   |   |     `-CallExpr 0x143844f68 <line:55:3, col:35> 'int'
    |   |   |       |-ImplicitCastExpr 0x143844f50 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   |   |       | `-DeclRefExpr 0x143844e60 <col:3> 'int ()' Function 0x143844620 'EXTRACT_32BITS' 'int ()'
    |   |   |       `-BinaryOperator 0x143844f30 <col:18, col:34> 'const char *' '+'
    |   |   |         |-BinaryOperator 0x143844ef0 <col:18, col:27> 'const char *' '+'
    |   |   |         | |-ImplicitCastExpr 0x143844ec0 <col:18> 'const char *' <LValueToRValue>
    |   |   |         | | `-DeclRefExpr 0x143844e80 <col:18> 'const char *' lvalue ParmVar 0x14381c3a8 'obj_tptr' 'const char *'
    |   |   |         | `-ImplicitCastExpr 0x143844ed8 <col:27> 'int' <LValueToRValue>
    |   |   |         |   `-DeclRefExpr 0x143844ea0 <col:27> 'int' lvalue ParmVar 0x14381c4a8 'offset' 'int'
    |   |   |         `-IntegerLiteral 0x143844f10 <col:34> 'int' 4
    |   |   |-BreakStmt 0x143844ff8 <line:56:6>
    |   |   |-DefaultStmt 0x143845098 <line:57:2, line:59:14>
    |   |   | `-BinaryOperator 0x143845078 <col:6, col:14> 'int' contains-errors '='
    |   |   |   |-DeclRefExpr 0x143845000 <col:6> 'int' contains-errors lvalue Var 0x14381c688 'hexdump' 'int'
    |   |   |   `-RecoveryExpr 0x143845058 <col:14> '<dependent type>' contains-errors lvalue
    |   |   `-BreakStmt 0x1438450b8 <line:60:6>
    |   |-CompoundAssignOperator 0x143845178 <line:62:2, col:20> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
    |   | |-DeclRefExpr 0x143845120 <col:2> 'int' lvalue ParmVar 0x14381c428 'total_subobj_len' 'int'
    |   | `-ImplicitCastExpr 0x143845160 <col:20> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x143845140 <col:20> 'int' lvalue Var 0x14381c7d8 'subobj_len' 'int'
    |   `-CompoundAssignOperator 0x143845200 <line:63:2, col:10> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |     |-DeclRefExpr 0x1438451a8 <col:2> 'int' lvalue ParmVar 0x14381c4a8 'offset' 'int'
    |     `-ImplicitCastExpr 0x1438451e8 <col:10> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x1438451c8 <col:10> 'int' lvalue Var 0x14381c7d8 'subobj_len' 'int'
    |-ReturnStmt 0x1438452f8 <line:65:5, col:20>
    | `-ImplicitCastExpr 0x1438452e0 <col:12, col:20> 'int' contains-errors <LValueToRValue>
    |   `-ParenExpr 0x1438452c0 <col:12, col:20> 'int' contains-errors lvalue
    |     `-DeclRefExpr 0x1438452a0 <col:13> 'int' contains-errors lvalue Var 0x14381c688 'hexdump' 'int'
    `-LabelStmt 0x1438453a0 <line:66:1, line:67:13> 'trunc'
      `-ReturnStmt 0x143845340 <col:5, col:13>
        `-UnaryOperator 0x143845328 <col:12, col:13> 'int' prefix '-'
          `-IntegerLiteral 0x143845308 <col:13> 'int' 1
