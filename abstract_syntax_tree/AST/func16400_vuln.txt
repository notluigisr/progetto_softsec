TranslationUnitDecl 0x14a055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14a0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14a055bd0 '__int128'
|-TypedefDecl 0x14a056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14a055bf0 'unsigned __int128'
|-TypedefDecl 0x14a80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14a80bc00 'struct __NSConstantString_tag'
|   `-Record 0x14a056580 '__NSConstantString_tag'
|-TypedefDecl 0x14a80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14a055d90 '__SVInt8_t'
|-TypedefDecl 0x14a80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14a055db0 '__SVInt16_t'
|-TypedefDecl 0x14a80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14a055dd0 '__SVInt32_t'
|-TypedefDecl 0x14a80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14a055df0 '__SVInt64_t'
|-TypedefDecl 0x14a80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14a055e10 '__SVUint8_t'
|-TypedefDecl 0x14a80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14a055e30 '__SVUint16_t'
|-TypedefDecl 0x14a80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14a055e50 '__SVUint32_t'
|-TypedefDecl 0x14a80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14a055e70 '__SVUint64_t'
|-TypedefDecl 0x14a80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14a055e90 '__SVFloat16_t'
|-TypedefDecl 0x14a80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14a055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14a80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14a055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14a80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14a055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14a80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14a055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14a80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14a055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14a80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14a055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14a80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14a055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14a80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14a055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14a80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14a055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14a80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14a055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14a80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14a055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14a80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14a056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14a80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14a056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14a80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14a056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14a80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14a056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14a80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14a056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14a80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14a0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14a80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14a0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14a80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14a0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14a80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14a056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14a80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14a056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14a80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14a056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14a80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14a056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14a80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14a056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14a80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14a0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14a80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14a0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14a80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14a0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14a80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14a056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14a80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14a056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14a80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14a056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14a80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14a056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14a80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14a056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14a80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14a0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14a80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14a0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14a80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14a0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14a80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14a056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14a80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14a056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14a80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14a056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14a80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14a056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14a80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14a056390 '__SVBool_t'
|-TypedefDecl 0x14a80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14a0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14a80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14a0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14a80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14a0563f0 '__SVCount_t'
|-TypedefDecl 0x14a80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14a80dbb0 'char *'
|   `-BuiltinType 0x14a0556b0 'char'
|-TypedefDecl 0x14a80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14a80dbb0 'char *'
|   `-BuiltinType 0x14a0556b0 'char'
|-FunctionDecl 0x14a80deb8 <dataset_diviso_filec/func16400_vuln.c:1:1, line:35:1> line:1:19 invalid PHP_HAVAL224Final 'int (unsigned char *, int *)'
| |-ParmVarDecl 0x14a80dd28 <col:37, col:52> col:52 used digest 'unsigned char *'
| |-ParmVarDecl 0x14a80ddd8 <col:60, col:76> col:76 referenced invalid context 'int *'
| `-CompoundStmt 0x14a1252e8 <line:2:1, line:35:1>
|   |-DeclStmt 0x14a80e080 <line:3:2, col:24>
|   | `-VarDecl 0x14a80e018 <col:2, col:23> col:16 used bits 'unsigned char[10]'
|   |-DeclStmt 0x14a80e1b0 <line:4:2, col:28>
|   | |-VarDecl 0x14a80e0b0 <col:2, col:15> col:15 used index 'unsigned int'
|   | `-VarDecl 0x14a80e130 <col:2, col:22> col:22 used padLen 'unsigned int'
|   |-BinaryOperator 0x14a828048 <line:10:2, col:33> 'unsigned char' contains-errors '='
|   | |-ArraySubscriptExpr 0x14a827f60 <col:2, col:8> 'unsigned char' lvalue
|   | | |-ImplicitCastExpr 0x14a827f48 <col:2> 'unsigned char *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x14a827f08 <col:2> 'unsigned char[10]' lvalue Var 0x14a80e018 'bits' 'unsigned char[10]'
|   | | `-IntegerLiteral 0x14a827f28 <col:7> 'int' 1
|   | `-ParenExpr 0x14a828028 <col:12, col:33> '<dependent type>' contains-errors
|   |   `-BinaryOperator 0x14a828008 <col:13, col:32> '<dependent type>' contains-errors '>>'
|   |     |-CXXDependentScopeMemberExpr 0x14a827fa0 <col:13, col:22> '<dependent type>' contains-errors lvalue ->output
|   |     | `-RecoveryExpr 0x14a827f80 <col:13> '<dependent type>' contains-errors lvalue
|   |     `-IntegerLiteral 0x14a827fe8 <col:32> 'int' 2
|   |-CallExpr 0x14a8282e0 <line:13:2, col:36> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14a8281c0 <col:2> 'int ()' Function 0x14a828108 'Encode' 'int ()'
|   | |-BinaryOperator 0x14a828238 <col:9, col:16> 'unsigned char *' '+'
|   | | |-ImplicitCastExpr 0x14a828220 <col:9> 'unsigned char *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x14a8281e0 <col:9> 'unsigned char[10]' lvalue Var 0x14a80e018 'bits' 'unsigned char[10]'
|   | | `-IntegerLiteral 0x14a828200 <col:16> 'int' 2
|   | |-CXXDependentScopeMemberExpr 0x14a828278 <col:19, col:28> '<dependent type>' contains-errors lvalue ->count
|   | | `-RecoveryExpr 0x14a828258 <col:19> '<dependent type>' contains-errors lvalue
|   | `-IntegerLiteral 0x14a8282c0 <col:35> 'int' 8
|   |-BinaryOperator 0x14a828518 <line:16:2, col:57> 'unsigned int' contains-errors '='
|   | |-DeclRefExpr 0x14a828318 <col:2> 'unsigned int' lvalue Var 0x14a80e0b0 'index' 'unsigned int'
|   | `-CStyleCastExpr 0x14a8284f0 <col:10, col:57> 'unsigned int' contains-errors <Dependent>
|   |   `-ParenExpr 0x14a8284d0 <col:25, col:57> '<dependent type>' contains-errors
|   |     `-BinaryOperator 0x14a828478 <col:26, col:53> '<dependent type>' contains-errors '&'
|   |       |-ParenExpr 0x14a828438 <col:26, col:49> '<dependent type>' contains-errors
|   |       | `-BinaryOperator 0x14a828418 <col:27, col:48> '<dependent type>' contains-errors '>>'
|   |       |   |-ArraySubscriptExpr 0x14a8283d8 <col:27, col:43> '<dependent type>' contains-errors lvalue
|   |       |   | |-ImplicitCastExpr 0x14a8283c0 <col:27, col:36> '<dependent type>' contains-errors <LValueToRValue>
|   |       |   | | `-CXXDependentScopeMemberExpr 0x14a828358 <col:27, col:36> '<dependent type>' contains-errors lvalue ->count
|   |       |   | |   `-RecoveryExpr 0x14a828338 <col:27> '<dependent type>' contains-errors lvalue
|   |       |   | `-IntegerLiteral 0x14a8283a0 <col:42> 'int' 0
|   |       |   `-IntegerLiteral 0x14a8283f8 <col:48> 'int' 3
|   |       `-IntegerLiteral 0x14a828458 <col:53> 'int' 63
|   |-BinaryOperator 0x14a828798 <line:17:2, col:55> 'unsigned int' '='
|   | |-DeclRefExpr 0x14a828538 <col:2> 'unsigned int' lvalue Var 0x14a80e130 'padLen' 'unsigned int'
|   | `-ConditionalOperator 0x14a828768 <col:11, col:55> 'unsigned int'
|   |   |-ParenExpr 0x14a8285e8 <col:11, col:23> 'int'
|   |   | `-BinaryOperator 0x14a8285c8 <col:12, col:20> 'int' '<'
|   |   |   |-ImplicitCastExpr 0x14a828598 <col:12> 'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x14a828558 <col:12> 'unsigned int' lvalue Var 0x14a80e0b0 'index' 'unsigned int'
|   |   |   `-ImplicitCastExpr 0x14a8285b0 <col:20> 'unsigned int' <IntegralCast>
|   |   |     `-IntegerLiteral 0x14a828578 <col:20> 'int' 118
|   |   |-ParenExpr 0x14a828698 <col:27, col:39> 'unsigned int'
|   |   | `-BinaryOperator 0x14a828678 <col:28, col:34> 'unsigned int' '-'
|   |   |   |-ImplicitCastExpr 0x14a828660 <col:28> 'unsigned int' <IntegralCast>
|   |   |   | `-IntegerLiteral 0x14a828608 <col:28> 'int' 118
|   |   |   `-ImplicitCastExpr 0x14a828648 <col:34> 'unsigned int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x14a828628 <col:34> 'unsigned int' lvalue Var 0x14a80e0b0 'index' 'unsigned int'
|   |   `-ParenExpr 0x14a828748 <col:43, col:55> 'unsigned int'
|   |     `-BinaryOperator 0x14a828728 <col:44, col:50> 'unsigned int' '-'
|   |       |-ImplicitCastExpr 0x14a828710 <col:44> 'unsigned int' <IntegralCast>
|   |       | `-IntegerLiteral 0x14a8286b8 <col:44> 'int' 246
|   |       `-ImplicitCastExpr 0x14a8286f8 <col:50> 'unsigned int' <LValueToRValue>
|   |         `-DeclRefExpr 0x14a8286d8 <col:50> 'unsigned int' lvalue Var 0x14a80e0b0 'index' 'unsigned int'
|   |-CallExpr 0x14a828968 <line:18:2, col:42> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14a828898 <col:2> 'int ()' Function 0x14a8287e0 'PHP_HAVALUpdate' 'int ()'
|   | |-RecoveryExpr 0x14a8288b8 <col:18> '<dependent type>' contains-errors lvalue
|   | |-RecoveryExpr 0x14a828948 <col:27> '<dependent type>' contains-errors lvalue
|   | `-DeclRefExpr 0x14a8288f0 <col:36> 'unsigned int' lvalue Var 0x14a80e130 'padLen' 'unsigned int'
|   |-CallExpr 0x14a828a20 <line:21:2, col:35> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14a8289a0 <col:2> 'int ()' Function 0x14a8287e0 'PHP_HAVALUpdate' 'int ()'
|   | |-RecoveryExpr 0x14a8289c0 <col:18> '<dependent type>' contains-errors lvalue
|   | |-DeclRefExpr 0x14a8289e0 <col:27> 'unsigned char[10]' lvalue Var 0x14a80e018 'bits' 'unsigned char[10]'
|   | `-IntegerLiteral 0x14a828a00 <col:33> 'int' 10
|   |-CompoundAssignOperator 0x14a828c40 <line:24:2, col:51> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |-ArraySubscriptExpr 0x14a828b20 <col:2, col:18> '<dependent type>' contains-errors lvalue
|   | | |-ImplicitCastExpr 0x14a828b08 <col:2, col:11> '<dependent type>' contains-errors <LValueToRValue>
|   | | | `-CXXDependentScopeMemberExpr 0x14a828aa0 <col:2, col:11> '<dependent type>' contains-errors lvalue ->state
|   | | |   `-RecoveryExpr 0x14a828a78 <col:2> '<dependent type>' contains-errors lvalue
|   | | |     `-DeclRefExpr 0x14a828a58 <col:2> 'int *' lvalue ParmVar 0x14a80ddd8 'context' 'int *'
|   | | `-IntegerLiteral 0x14a828ae8 <col:17> 'int' 6
|   | `-BinaryOperator 0x14a828c20 <col:24, col:51> '<dependent type>' contains-errors '&'
|   |   |-ArraySubscriptExpr 0x14a828be0 <col:24, col:40> '<dependent type>' contains-errors lvalue
|   |   | |-ImplicitCastExpr 0x14a828bc8 <col:24, col:33> '<dependent type>' contains-errors <LValueToRValue>
|   |   | | `-CXXDependentScopeMemberExpr 0x14a828b60 <col:24, col:33> '<dependent type>' contains-errors lvalue ->state
|   |   | |   `-RecoveryExpr 0x14a828b40 <col:24> '<dependent type>' contains-errors lvalue
|   |   | `-IntegerLiteral 0x14a828ba8 <col:39> 'int' 7
|   |   `-IntegerLiteral 0x14a828c00 <col:51> 'int' 15
|   |-CompoundAssignOperator 0x14a123cc0 <line:25:2, col:51> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |-ArraySubscriptExpr 0x14a828d38 <col:2, col:18> '<dependent type>' contains-errors lvalue
|   | | |-ImplicitCastExpr 0x14a828d20 <col:2, col:11> '<dependent type>' contains-errors <LValueToRValue>
|   | | | `-CXXDependentScopeMemberExpr 0x14a828cb8 <col:2, col:11> '<dependent type>' contains-errors lvalue ->state
|   | | |   `-RecoveryExpr 0x14a828c90 <col:2> '<dependent type>' contains-errors lvalue
|   | | |     `-DeclRefExpr 0x14a828c70 <col:2> 'int *' lvalue ParmVar 0x14a80ddd8 'context' 'int *'
|   | | `-IntegerLiteral 0x14a828d00 <col:17> 'int' 5
|   | `-BinaryOperator 0x14a123ca0 <col:23, col:51> '<dependent type>' contains-errors '&'
|   |   |-ParenExpr 0x14a123c60 <col:23, col:47> '<dependent type>' contains-errors
|   |   | `-BinaryOperator 0x14a123c40 <col:24, col:46> '<dependent type>' contains-errors '>>'
|   |   |   |-ArraySubscriptExpr 0x14a123c00 <col:24, col:40> '<dependent type>' contains-errors lvalue
|   |   |   | |-ImplicitCastExpr 0x14a828de0 <col:24, col:33> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   | | `-CXXDependentScopeMemberExpr 0x14a828d78 <col:24, col:33> '<dependent type>' contains-errors lvalue ->state
|   |   |   | |   `-RecoveryExpr 0x14a828d58 <col:24> '<dependent type>' contains-errors lvalue
|   |   |   | `-IntegerLiteral 0x14a828dc0 <col:39> 'int' 7
|   |   |   `-IntegerLiteral 0x14a123c20 <col:46> 'int' 4
|   |   `-IntegerLiteral 0x14a123c80 <col:51> 'int' 31
|   |-CompoundAssignOperator 0x14a123f38 <line:26:2, col:51> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |-ArraySubscriptExpr 0x14a123db8 <col:2, col:18> '<dependent type>' contains-errors lvalue
|   | | |-ImplicitCastExpr 0x14a123da0 <col:2, col:11> '<dependent type>' contains-errors <LValueToRValue>
|   | | | `-CXXDependentScopeMemberExpr 0x14a123d38 <col:2, col:11> '<dependent type>' contains-errors lvalue ->state
|   | | |   `-RecoveryExpr 0x14a123d10 <col:2> '<dependent type>' contains-errors lvalue
|   | | |     `-DeclRefExpr 0x14a123cf0 <col:2> 'int *' lvalue ParmVar 0x14a80ddd8 'context' 'int *'
|   | | `-IntegerLiteral 0x14a123d80 <col:17> 'int' 4
|   | `-BinaryOperator 0x14a123f18 <col:23, col:51> '<dependent type>' contains-errors '&'
|   |   |-ParenExpr 0x14a123ed8 <col:23, col:47> '<dependent type>' contains-errors
|   |   | `-BinaryOperator 0x14a123eb8 <col:24, col:46> '<dependent type>' contains-errors '>>'
|   |   |   |-ArraySubscriptExpr 0x14a123e78 <col:24, col:40> '<dependent type>' contains-errors lvalue
|   |   |   | |-ImplicitCastExpr 0x14a123e60 <col:24, col:33> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   | | `-CXXDependentScopeMemberExpr 0x14a123df8 <col:24, col:33> '<dependent type>' contains-errors lvalue ->state
|   |   |   | |   `-RecoveryExpr 0x14a123dd8 <col:24> '<dependent type>' contains-errors lvalue
|   |   |   | `-IntegerLiteral 0x14a123e40 <col:39> 'int' 7
|   |   |   `-IntegerLiteral 0x14a123e98 <col:46> 'int' 9
|   |   `-IntegerLiteral 0x14a123ef8 <col:51> 'int' 15
|   |-CompoundAssignOperator 0x14a1241b0 <line:27:2, col:51> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |-ArraySubscriptExpr 0x14a124030 <col:2, col:18> '<dependent type>' contains-errors lvalue
|   | | |-ImplicitCastExpr 0x14a124018 <col:2, col:11> '<dependent type>' contains-errors <LValueToRValue>
|   | | | `-CXXDependentScopeMemberExpr 0x14a123fb0 <col:2, col:11> '<dependent type>' contains-errors lvalue ->state
|   | | |   `-RecoveryExpr 0x14a123f88 <col:2> '<dependent type>' contains-errors lvalue
|   | | |     `-DeclRefExpr 0x14a123f68 <col:2> 'int *' lvalue ParmVar 0x14a80ddd8 'context' 'int *'
|   | | `-IntegerLiteral 0x14a123ff8 <col:17> 'int' 3
|   | `-BinaryOperator 0x14a124190 <col:23, col:51> '<dependent type>' contains-errors '&'
|   |   |-ParenExpr 0x14a124150 <col:23, col:47> '<dependent type>' contains-errors
|   |   | `-BinaryOperator 0x14a124130 <col:24, col:45> '<dependent type>' contains-errors '>>'
|   |   |   |-ArraySubscriptExpr 0x14a1240f0 <col:24, col:40> '<dependent type>' contains-errors lvalue
|   |   |   | |-ImplicitCastExpr 0x14a1240d8 <col:24, col:33> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   | | `-CXXDependentScopeMemberExpr 0x14a124070 <col:24, col:33> '<dependent type>' contains-errors lvalue ->state
|   |   |   | |   `-RecoveryExpr 0x14a124050 <col:24> '<dependent type>' contains-errors lvalue
|   |   |   | `-IntegerLiteral 0x14a1240b8 <col:39> 'int' 7
|   |   |   `-IntegerLiteral 0x14a124110 <col:45> 'int' 13
|   |   `-IntegerLiteral 0x14a124170 <col:51> 'int' 31
|   |-CompoundAssignOperator 0x14a124428 <line:28:2, col:51> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |-ArraySubscriptExpr 0x14a1242a8 <col:2, col:18> '<dependent type>' contains-errors lvalue
|   | | |-ImplicitCastExpr 0x14a124290 <col:2, col:11> '<dependent type>' contains-errors <LValueToRValue>
|   | | | `-CXXDependentScopeMemberExpr 0x14a124228 <col:2, col:11> '<dependent type>' contains-errors lvalue ->state
|   | | |   `-RecoveryExpr 0x14a124200 <col:2> '<dependent type>' contains-errors lvalue
|   | | |     `-DeclRefExpr 0x14a1241e0 <col:2> 'int *' lvalue ParmVar 0x14a80ddd8 'context' 'int *'
|   | | `-IntegerLiteral 0x14a124270 <col:17> 'int' 2
|   | `-BinaryOperator 0x14a124408 <col:23, col:51> '<dependent type>' contains-errors '&'
|   |   |-ParenExpr 0x14a1243c8 <col:23, col:47> '<dependent type>' contains-errors
|   |   | `-BinaryOperator 0x14a1243a8 <col:24, col:45> '<dependent type>' contains-errors '>>'
|   |   |   |-ArraySubscriptExpr 0x14a124368 <col:24, col:40> '<dependent type>' contains-errors lvalue
|   |   |   | |-ImplicitCastExpr 0x14a124350 <col:24, col:33> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   | | `-CXXDependentScopeMemberExpr 0x14a1242e8 <col:24, col:33> '<dependent type>' contains-errors lvalue ->state
|   |   |   | |   `-RecoveryExpr 0x14a1242c8 <col:24> '<dependent type>' contains-errors lvalue
|   |   |   | `-IntegerLiteral 0x14a124330 <col:39> 'int' 7
|   |   |   `-IntegerLiteral 0x14a124388 <col:45> 'int' 18
|   |   `-IntegerLiteral 0x14a1243e8 <col:51> 'int' 15
|   |-CompoundAssignOperator 0x14a1246a0 <line:29:2, col:51> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |-ArraySubscriptExpr 0x14a124520 <col:2, col:18> '<dependent type>' contains-errors lvalue
|   | | |-ImplicitCastExpr 0x14a124508 <col:2, col:11> '<dependent type>' contains-errors <LValueToRValue>
|   | | | `-CXXDependentScopeMemberExpr 0x14a1244a0 <col:2, col:11> '<dependent type>' contains-errors lvalue ->state
|   | | |   `-RecoveryExpr 0x14a124478 <col:2> '<dependent type>' contains-errors lvalue
|   | | |     `-DeclRefExpr 0x14a124458 <col:2> 'int *' lvalue ParmVar 0x14a80ddd8 'context' 'int *'
|   | | `-IntegerLiteral 0x14a1244e8 <col:17> 'int' 1
|   | `-BinaryOperator 0x14a124680 <col:23, col:51> '<dependent type>' contains-errors '&'
|   |   |-ParenExpr 0x14a124640 <col:23, col:47> '<dependent type>' contains-errors
|   |   | `-BinaryOperator 0x14a124620 <col:24, col:45> '<dependent type>' contains-errors '>>'
|   |   |   |-ArraySubscriptExpr 0x14a1245e0 <col:24, col:40> '<dependent type>' contains-errors lvalue
|   |   |   | |-ImplicitCastExpr 0x14a1245c8 <col:24, col:33> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   | | `-CXXDependentScopeMemberExpr 0x14a124560 <col:24, col:33> '<dependent type>' contains-errors lvalue ->state
|   |   |   | |   `-RecoveryExpr 0x14a124540 <col:24> '<dependent type>' contains-errors lvalue
|   |   |   | `-IntegerLiteral 0x14a1245a8 <col:39> 'int' 7
|   |   |   `-IntegerLiteral 0x14a124600 <col:45> 'int' 22
|   |   `-IntegerLiteral 0x14a124660 <col:51> 'int' 31
|   |-CompoundAssignOperator 0x14a124918 <line:30:2, col:51> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |-ArraySubscriptExpr 0x14a124798 <col:2, col:18> '<dependent type>' contains-errors lvalue
|   | | |-ImplicitCastExpr 0x14a124780 <col:2, col:11> '<dependent type>' contains-errors <LValueToRValue>
|   | | | `-CXXDependentScopeMemberExpr 0x14a124718 <col:2, col:11> '<dependent type>' contains-errors lvalue ->state
|   | | |   `-RecoveryExpr 0x14a1246f0 <col:2> '<dependent type>' contains-errors lvalue
|   | | |     `-DeclRefExpr 0x14a1246d0 <col:2> 'int *' lvalue ParmVar 0x14a80ddd8 'context' 'int *'
|   | | `-IntegerLiteral 0x14a124760 <col:17> 'int' 0
|   | `-BinaryOperator 0x14a1248f8 <col:23, col:51> '<dependent type>' contains-errors '&'
|   |   |-ParenExpr 0x14a1248b8 <col:23, col:47> '<dependent type>' contains-errors
|   |   | `-BinaryOperator 0x14a124898 <col:24, col:45> '<dependent type>' contains-errors '>>'
|   |   |   |-ArraySubscriptExpr 0x14a124858 <col:24, col:40> '<dependent type>' contains-errors lvalue
|   |   |   | |-ImplicitCastExpr 0x14a124840 <col:24, col:33> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   | | `-CXXDependentScopeMemberExpr 0x14a1247d8 <col:24, col:33> '<dependent type>' contains-errors lvalue ->state
|   |   |   | |   `-RecoveryExpr 0x14a1247b8 <col:24> '<dependent type>' contains-errors lvalue
|   |   |   | `-IntegerLiteral 0x14a124820 <col:39> 'int' 7
|   |   |   `-IntegerLiteral 0x14a124878 <col:45> 'int' 27
|   |   `-IntegerLiteral 0x14a1248d8 <col:51> 'int' 31
|   |-CallExpr 0x14a124a10 <line:31:2, col:35> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14a124948 <col:2> 'int ()' Function 0x14a828108 'Encode' 'int ()'
|   | |-DeclRefExpr 0x14a124968 <col:9> 'unsigned char *' lvalue ParmVar 0x14a80dd28 'digest' 'unsigned char *'
|   | |-CXXDependentScopeMemberExpr 0x14a1249a8 <col:17, col:26> '<dependent type>' contains-errors lvalue ->state
|   | | `-RecoveryExpr 0x14a124988 <col:17> '<dependent type>' contains-errors lvalue
|   | `-IntegerLiteral 0x14a1249f0 <col:33> 'int' 28
|   `-CallExpr 0x14a125298 <line:34:2, col:54> 'void *' contains-errors
|     |-ImplicitCastExpr 0x14a125280 <col:2> 'void *(*)(void *, int, unsigned long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x14a125120 <col:2> 'void *(void *, int, unsigned long)' Function 0x14a124ed0 'memset' 'void *(void *, int, unsigned long)'
|     |-ImplicitCastExpr 0x14a1252d0 <col:9, col:26> 'void *' contains-errors <BitCast>
|     | `-CStyleCastExpr 0x14a125178 <col:9, col:26> 'unsigned char *' contains-errors <Dependent>
|     |   `-RecoveryExpr 0x14a125140 <col:26> '<dependent type>' contains-errors lvalue
|     |-IntegerLiteral 0x14a1251a0 <col:35> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x14a125230 <col:38, col:53> 'unsigned long' contains-errors sizeof
|       `-ParenExpr 0x14a125210 <col:44, col:53> '<dependent type>' contains-errors
|         `-UnaryOperator 0x14a1251f8 <col:45, col:46> '<dependent type>' contains-errors prefix '*' cannot overflow
|           `-ImplicitCastExpr 0x14a1251e0 <col:46> '<dependent type>' contains-errors <LValueToRValue>
|             `-RecoveryExpr 0x14a1251c0 <col:46> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x14a124ed0 <col:2> col:2 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x14a124fd0 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x14a125038 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x14a1250a0 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x14a124f78 <<invalid sloc>> Implicit 900
