TranslationUnitDecl 0x145055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1450564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x145055bd0 '__int128'
|-TypedefDecl 0x145056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x145055bf0 'unsigned __int128'
|-TypedefDecl 0x14580be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14580bc00 'struct __NSConstantString_tag'
|   `-Record 0x145056580 '__NSConstantString_tag'
|-TypedefDecl 0x14580be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x145055d90 '__SVInt8_t'
|-TypedefDecl 0x14580bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x145055db0 '__SVInt16_t'
|-TypedefDecl 0x14580bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x145055dd0 '__SVInt32_t'
|-TypedefDecl 0x14580bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x145055df0 '__SVInt64_t'
|-TypedefDecl 0x14580c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x145055e10 '__SVUint8_t'
|-TypedefDecl 0x14580c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x145055e30 '__SVUint16_t'
|-TypedefDecl 0x14580c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x145055e50 '__SVUint32_t'
|-TypedefDecl 0x14580c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x145055e70 '__SVUint64_t'
|-TypedefDecl 0x14580c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x145055e90 '__SVFloat16_t'
|-TypedefDecl 0x14580c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x145055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14580c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x145055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14580c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x145055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14580c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x145055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14580c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x145055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14580c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x145055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14580c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x145055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14580c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x145055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14580c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x145055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14580c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x145055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14580c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x145055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14580c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x145056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14580c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x145056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14580c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x145056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14580c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x145056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14580c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x145056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14580c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1450560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14580c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1450560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14580c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1450560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14580c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x145056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14580ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x145056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14580cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x145056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14580cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x145056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14580cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x145056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14580d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1450561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14580d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1450561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14580d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1450561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14580d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x145056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14580d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x145056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14580d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x145056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14580d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x145056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14580d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x145056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14580d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1450562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14580d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1450562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14580d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1450562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14580d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x145056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14580d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x145056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14580d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x145056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14580d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x145056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14580da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x145056390 '__SVBool_t'
|-TypedefDecl 0x14580da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1450563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14580dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1450563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14580db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1450563f0 '__SVCount_t'
|-TypedefDecl 0x14580dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14580dbb0 'char *'
|   `-BuiltinType 0x1450556b0 'char'
|-TypedefDecl 0x14580dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14580dbb0 'char *'
|   `-BuiltinType 0x1450556b0 'char'
`-FunctionDecl 0x14580df18 <dataset_diviso_filec/func17601_nonvuln.c:1:1, line:38:1> line:1:1 invalid gs_output_page 'int (int *, int, int)'
  |-ParmVarDecl 0x14580dd28 <col:16, col:28> col:28 invalid pgs 'int *'
  |-ParmVarDecl 0x14580dda8 <col:33, col:37> col:37 used num_copies 'int'
  |-ParmVarDecl 0x14580de28 <col:49, col:53> col:53 used flush 'int'
  `-CompoundStmt 0x145829ea8 <line:2:1, line:38:1>
    |-DeclStmt 0x14580e250 <line:5:5, col:13>
    | `-VarDecl 0x14580e1e8 <col:5, col:9> col:9 used code 'int'
    |-BinaryOperator 0x14580e3d0 <line:10:5, col:24> 'int' contains-errors '='
    | |-DeclRefExpr 0x14580e268 <col:5> 'int' lvalue Var 0x14580e1e8 'code' 'int'
    | `-CallExpr 0x14580e3a8 <col:12, col:24> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14580e368 <col:12> 'int ()' Function 0x14580e2b0 'gs_gsave' 'int ()'
    |   `-RecoveryExpr 0x14580e388 <col:21> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1458278c0 <line:11:5, line:12:16>
    | |-BinaryOperator 0x145827858 <line:11:9, col:16> 'int' '<'
    | | |-ImplicitCastExpr 0x145827840 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x145827800 <col:9> 'int' lvalue Var 0x14580e1e8 'code' 'int'
    | | `-IntegerLiteral 0x145827820 <col:16> 'int' 0
    | `-ReturnStmt 0x1458278b0 <line:12:9, col:16>
    |   `-ImplicitCastExpr 0x145827898 <col:16> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x145827878 <col:16> 'int' lvalue Var 0x14580e1e8 'code' 'int'
    |-IfStmt 0x145828388 <line:13:5, line:20:5>
    | |-BinaryOperator 0x1458281b8 <line:13:9, line:16:31> 'int' contains-errors '||'
    | | |-BinaryOperator 0x145827f90 <line:13:9, line:15:39> 'int' contains-errors '||'
    | | | |-BinaryOperator 0x145827d40 <line:13:9, line:14:47> 'int' contains-errors '||'
    | | | | |-ParenExpr 0x145827ac8 <line:13:9, col:38> 'int' contains-errors
    | | | | | `-BinaryOperator 0x145827aa8 <col:10, col:37> 'int' contains-errors '<'
    | | | | |   |-ParenExpr 0x145827a68 <col:10, col:33> 'int' contains-errors
    | | | | |   | `-BinaryOperator 0x145827a48 <col:11, col:32> 'int' contains-errors '='
    | | | | |   |   |-DeclRefExpr 0x1458278e0 <col:11> 'int' lvalue Var 0x14580e1e8 'code' 'int'
    | | | | |   |   `-CallExpr 0x145827a20 <col:18, col:32> '<dependent type>' contains-errors
    | | | | |   |     |-DeclRefExpr 0x1458279e0 <col:18> 'int ()' Function 0x145827928 'gs_newpath' 'int ()'
    | | | | |   |     `-RecoveryExpr 0x145827a00 <col:29> '<dependent type>' contains-errors lvalue
    | | | | |   `-IntegerLiteral 0x145827a88 <col:37> 'int' 0
    | | | | `-ParenExpr 0x145827d20 <line:14:9, col:47> 'int' contains-errors
    | | | |   `-BinaryOperator 0x145827d00 <col:10, col:46> 'int' contains-errors '<'
    | | | |     |-ParenExpr 0x145827cc0 <col:10, col:42> 'int' contains-errors
    | | | |     | `-BinaryOperator 0x145827ca0 <col:11, col:41> 'int' contains-errors '='
    | | | |     |   |-DeclRefExpr 0x145827ae8 <col:11> 'int' lvalue Var 0x14580e1e8 'code' 'int'
    | | | |     |   `-CallExpr 0x145827c68 <col:18, col:41> '<dependent type>' contains-errors
    | | | |     |     |-DeclRefExpr 0x145827be8 <col:18> 'int ()' Function 0x145827b30 'gs_moveto' 'int ()'
    | | | |     |     |-RecoveryExpr 0x145827c08 <col:28> '<dependent type>' contains-errors lvalue
    | | | |     |     |-FloatingLiteral 0x145827c28 <col:33> 'double' 0.000000e+00
    | | | |     |     `-FloatingLiteral 0x145827c48 <col:38> 'double' 0.000000e+00
    | | | |     `-IntegerLiteral 0x145827ce0 <col:46> 'int' 0
    | | | `-ParenExpr 0x145827f70 <line:15:5, col:39> 'int' contains-errors
    | | |   `-BinaryOperator 0x145827f50 <col:6, col:38> 'int' contains-errors '<'
    | | |     |-ParenExpr 0x145827f10 <col:6, col:34> 'int' contains-errors
    | | |     | `-BinaryOperator 0x145827ef0 <col:7, col:33> 'int' contains-errors '='
    | | |     |   |-DeclRefExpr 0x145827d60 <col:7> 'int' lvalue Var 0x14580e1e8 'code' 'int'
    | | |     |   `-CallExpr 0x145827ec0 <col:14, col:33> '<dependent type>' contains-errors
    | | |     |     |-DeclRefExpr 0x145827e60 <col:14> 'int ()' Function 0x145827da8 'gs_setgray' 'int ()'
    | | |     |     |-RecoveryExpr 0x145827e80 <col:25> '<dependent type>' contains-errors lvalue
    | | |     |     `-FloatingLiteral 0x145827ea0 <col:30> 'double' 0.000000e+00
    | | |     `-IntegerLiteral 0x145827f30 <col:38> 'int' 0
    | | `-ParenExpr 0x145828198 <line:16:5, col:31> 'int' contains-errors
    | |   `-BinaryOperator 0x145828178 <col:6, col:30> 'int' contains-errors '<'
    | |     |-ParenExpr 0x145828138 <col:6, col:26> 'int' contains-errors
    | |     | `-BinaryOperator 0x145828118 <col:7, col:25> 'int' contains-errors '='
    | |     |   |-DeclRefExpr 0x145827fb0 <col:7> 'int' lvalue Var 0x14580e1e8 'code' 'int'
    | |     |   `-CallExpr 0x1458280f0 <col:14, col:25> '<dependent type>' contains-errors
    | |     |     |-DeclRefExpr 0x1458280b0 <col:14> 'int ()' Function 0x145827ff8 'gs_fill' 'int ()'
    | |     |     `-RecoveryExpr 0x1458280d0 <col:22> '<dependent type>' contains-errors lvalue
    | |     `-IntegerLiteral 0x145828158 <col:30> 'int' 0
    | `-CompoundStmt 0x145828368 <line:17:5, line:20:5>
    |   |-CallExpr 0x1458282f8 <line:18:9, col:24> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1458282b8 <col:9> 'int ()' Function 0x145828200 'gs_grestore' 'int ()'
    |   | `-RecoveryExpr 0x1458282d8 <col:21> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x145828358 <line:19:2, col:9>
    |     `-ImplicitCastExpr 0x145828340 <col:9> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x145828320 <col:9> 'int' lvalue Var 0x14580e1e8 'code' 'int'
    |-BinaryOperator 0x145828430 <line:21:5, col:27> 'int' contains-errors '='
    | |-DeclRefExpr 0x1458283a8 <col:5> 'int' lvalue Var 0x14580e1e8 'code' 'int'
    | `-CallExpr 0x145828408 <col:12, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1458283c8 <col:12> 'int ()' Function 0x145828200 'gs_grestore' 'int ()'
    |   `-RecoveryExpr 0x1458283e8 <col:24> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x145828510 <line:22:5, line:23:16>
    | |-BinaryOperator 0x1458284a8 <line:22:9, col:16> 'int' '<'
    | | |-ImplicitCastExpr 0x145828490 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x145828450 <col:9> 'int' lvalue Var 0x14580e1e8 'code' 'int'
    | | `-IntegerLiteral 0x145828470 <col:16> 'int' 0
    | `-ReturnStmt 0x145828500 <line:23:9, col:16>
    |   `-ImplicitCastExpr 0x1458284e8 <col:16> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x1458284c8 <col:16> 'int' lvalue Var 0x14580e1e8 'code' 'int'
    |-IfStmt 0x145828658 <line:25:5, line:26:22>
    | |-CXXDependentScopeMemberExpr 0x1458285b0 <line:25:9, col:14> '<dependent type>' contains-errors lvalue ->IgnoreNumCopies
    | | `-RecoveryExpr 0x145828590 <col:9> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x145828638 <line:26:9, col:22> 'int' '='
    |   |-DeclRefExpr 0x1458285f8 <col:9> 'int' lvalue ParmVar 0x14580dda8 'num_copies' 'int'
    |   `-IntegerLiteral 0x145828618 <col:22> 'int' 1
    |-IfStmt 0x1458298f8 <line:27:5, line:28:16>
    | |-RecoveryExpr 0x145829890 <line:27:9, col:75> '_Bool' contains-errors
    | `-ReturnStmt 0x1458298e8 <line:28:9, col:16>
    |   `-ImplicitCastExpr 0x1458298d0 <col:16> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x1458298b0 <col:16> 'int' lvalue Var 0x14580e1e8 'code' 'int'
    |-BinaryOperator 0x145829b88 <line:30:5, col:58> 'int' contains-errors '='
    | |-DeclRefExpr 0x145829918 <col:5> 'int' lvalue Var 0x14580e1e8 'code' 'int'
    | `-CallExpr 0x145829b58 <col:12, col:58> '<dependent type>' contains-errors
    |   |-CallExpr 0x145829b08 <col:12, col:37> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x145829938 <col:12> 'int ()' Function 0x1458286c0 'dev_proc' 'int ()'
    |   | |-RecoveryExpr 0x145829ac8 <col:21> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x145829ae8 <col:26> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x145829b38 <col:39> '<dependent type>' contains-errors lvalue
    |   `-UnaryOperator 0x145829a60 <col:44, col:57> 'int (*)()' prefix '&' cannot overflow
    |     `-ParenExpr 0x145829a08 <col:45, col:57> 'int ()'
    |       `-DeclRefExpr 0x1458299e8 <col:46> 'int ()' Function 0x1458286c0 'dev_proc' 'int ()'
    |-IfStmt 0x145829c68 <line:31:5, line:32:16>
    | |-BinaryOperator 0x145829c00 <line:31:9, col:16> 'int' '<'
    | | |-ImplicitCastExpr 0x145829be8 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x145829ba8 <col:9> 'int' lvalue Var 0x14580e1e8 'code' 'int'
    | | `-IntegerLiteral 0x145829bc8 <col:16> 'int' 0
    | `-ReturnStmt 0x145829c58 <line:32:9, col:16>
    |   `-ImplicitCastExpr 0x145829c40 <col:16> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x145829c20 <col:16> 'int' lvalue Var 0x14580e1e8 'code' 'int'
    |-IfStmt 0x145829e40 <line:33:5, line:36:5>
    | |-RecoveryExpr 0x145829c88 <line:33:9, col:53> '_Bool' contains-errors
    | `-CompoundStmt 0x145829e30 <col:71, line:36:5>
    `-ReturnStmt 0x145829e98 <line:37:5, col:12>
      `-ImplicitCastExpr 0x145829e80 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x145829e60 <col:12> 'int' lvalue Var 0x14580e1e8 'code' 'int'
