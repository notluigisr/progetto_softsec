TranslationUnitDecl 0x149055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1490564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x149055bd0 '__int128'
|-TypedefDecl 0x149056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x149055bf0 'unsigned __int128'
|-TypedefDecl 0x14980be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14980bc00 'struct __NSConstantString_tag'
|   `-Record 0x149056580 '__NSConstantString_tag'
|-TypedefDecl 0x14980be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x149055d90 '__SVInt8_t'
|-TypedefDecl 0x14980bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x149055db0 '__SVInt16_t'
|-TypedefDecl 0x14980bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x149055dd0 '__SVInt32_t'
|-TypedefDecl 0x14980bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x149055df0 '__SVInt64_t'
|-TypedefDecl 0x14980c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x149055e10 '__SVUint8_t'
|-TypedefDecl 0x14980c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x149055e30 '__SVUint16_t'
|-TypedefDecl 0x14980c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x149055e50 '__SVUint32_t'
|-TypedefDecl 0x14980c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x149055e70 '__SVUint64_t'
|-TypedefDecl 0x14980c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x149055e90 '__SVFloat16_t'
|-TypedefDecl 0x14980c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x149055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14980c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x149055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14980c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x149055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14980c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x149055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14980c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x149055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14980c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x149055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14980c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x149055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14980c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x149055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14980c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x149055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14980c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x149055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14980c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x149055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14980c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x149056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14980c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x149056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14980c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x149056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14980c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x149056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14980c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x149056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14980c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1490560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14980c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1490560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14980c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1490560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14980c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x149056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14980ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x149056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14980cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x149056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14980cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x149056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14980cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x149056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14980d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1490561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14980d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1490561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14980d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1490561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14980d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x149056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14980d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x149056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14980d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x149056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14980d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x149056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14980d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x149056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14980d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1490562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14980d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1490562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14980d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1490562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14980d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x149056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14980d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x149056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14980d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x149056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14980d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x149056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14980da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x149056390 '__SVBool_t'
|-TypedefDecl 0x14980da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1490563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14980dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1490563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14980db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1490563f0 '__SVCount_t'
|-TypedefDecl 0x14980dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14980dbb0 'char *'
|   `-BuiltinType 0x1490556b0 'char'
|-TypedefDecl 0x14980dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14980dbb0 'char *'
|   `-BuiltinType 0x1490556b0 'char'
`-FunctionDecl 0x14980de88 <dataset_diviso_filec/func18483_vuln.c:1:1, line:43:1> line:1:14 invalid Prepare 'int (int *, int *)'
  |-ParmVarDecl 0x14980dd28 <col:22, col:37> col:37 invalid context 'int *'
  |-ParmVarDecl 0x14980dda8 <col:46, col:58> col:58 invalid node 'int *'
  `-CompoundStmt 0x14982a288 <col:64, line:43:1>
    |-DeclStmt 0x14980e078 <line:2:3, line:3:70>
    | `-VarDecl 0x14980df58 <line:2:3, col:9> col:9 used params 'int *' auto
    |-CallExpr 0x14980e398 <line:5:3, col:48> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14980e1f0 <col:3> 'int ()' Function 0x14980e138 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x14980e210 <col:21> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x14980e350 <col:30, col:44> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x14980e310 <col:30> 'int ()' Function 0x14980e258 'NumInputs' 'int ()'
    | | `-RecoveryExpr 0x14980e330 <col:40> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x14980e378 <col:47> 'int' 1
    |-CallExpr 0x149827588 <line:6:3, col:49> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14980e3d0 <col:3> 'int ()' Function 0x14980e138 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x149827400 <col:21> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x149827540 <col:30, col:45> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x149827500 <col:30> 'int ()' Function 0x149827448 'NumOutputs' 'int ()'
    | | `-RecoveryExpr 0x149827520 <col:41> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x149827568 <col:48> 'int' 1
    |-DeclStmt 0x149827640 <line:8:3, col:28>
    | `-VarDecl 0x1498275d8 <col:3, col:23> col:23 invalid input 'const int *'
    |-CallExpr 0x1498279d8 <line:9:3, col:79> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x149827738 <col:3> 'int ()' Function 0x149827680 'TF_LITE_ENSURE_OK' 'int ()'
    | |-RecoveryExpr 0x149827758 <col:21> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x149827998 <col:30, col:78> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x149827858 <col:30> 'int ()' Function 0x1498277a0 'GetInputSafe' 'int ()'
    |   |-RecoveryExpr 0x149827878 <col:43> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x149827898 <col:52> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x149827978 <col:58> '<dependent type>' contains-errors lvalue
    |   `-UnaryOperator 0x1498278f0 <col:72, col:73> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x1498278d0 <col:73> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x149827cf0 <line:11:3, line:12:73> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x149827a20 <line:11:3> 'int ()' Function 0x149827680 'TF_LITE_ENSURE_OK' 'int ()'
    | |-RecoveryExpr 0x149827a40 <col:21> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x149827cb0 <line:12:21, col:72> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x149827b40 <col:21> 'int ()' Function 0x149827a88 'GetOutputSafe' 'int ()'
    |   |-RecoveryExpr 0x149827b60 <col:35> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x149827b80 <col:44> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x149827c58 <col:50> '<dependent type>' contains-errors lvalue
    |   `-UnaryOperator 0x149827c98 <col:65, col:66> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x149827c78 <col:66> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x149827ec8 <line:14:3, col:53> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x149827d20 <col:3> 'int ()' Function 0x14980e138 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x149827d40 <col:21> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x149827e80 <col:30, col:49> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x149827e40 <col:30> 'int ()' Function 0x149827d88 'NumDimensions' 'int ()'
    | | `-RecoveryExpr 0x149827e60 <col:44> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x149827ea8 <col:52> 'int' 4
    |-DeclStmt 0x149827f80 <line:16:3, col:32>
    | `-VarDecl 0x149827f18 <col:3, col:8> col:8 used data_type 'int' auto
    |-DeclStmt 0x1498283c0 <line:23:3, col:44>
    | `-VarDecl 0x1498282f8 <col:3, col:34> col:13 used block_size 'const int' cinit
    |   `-RecoveryExpr 0x149828398 <col:26, col:34> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x149828360 <col:26> 'int *' lvalue Var 0x14980df58 'params' 'int *'
    |-DeclStmt 0x149828f70 <line:24:3, col:48>
    | `-VarDecl 0x149828e00 <col:3, col:47> col:13 used input_height 'const int' cinit
    |   `-ArraySubscriptExpr 0x149828f50 <col:28, col:47> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x149828f38 <col:28, col:41> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-CXXDependentScopeMemberExpr 0x149828ed0 <col:28, col:41> '<dependent type>' contains-errors lvalue ->data
    |     |   `-CXXDependentScopeMemberExpr 0x149828e88 <col:28, col:35> '<dependent type>' contains-errors lvalue ->dims
    |     |     `-RecoveryExpr 0x149828e68 <col:28> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x149828f18 <col:46> 'int' 1
    |-DeclStmt 0x149829110 <line:25:3, col:47>
    | `-VarDecl 0x149828fa0 <col:3, col:46> col:13 used input_width 'const int' cinit
    |   `-ArraySubscriptExpr 0x1498290f0 <col:27, col:46> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x1498290d8 <col:27, col:40> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-CXXDependentScopeMemberExpr 0x149829070 <col:27, col:40> '<dependent type>' contains-errors lvalue ->data
    |     |   `-CXXDependentScopeMemberExpr 0x149829028 <col:27, col:34> '<dependent type>' contains-errors lvalue ->dims
    |     |     `-RecoveryExpr 0x149829008 <col:27> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x1498290b8 <col:45> 'int' 2
    |-DeclStmt 0x1498292b0 <line:26:3, col:50>
    | `-VarDecl 0x149829140 <col:3, col:49> col:13 used input_channels 'const int' cinit
    |   `-ArraySubscriptExpr 0x149829290 <col:30, col:49> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x149829278 <col:30, col:43> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-CXXDependentScopeMemberExpr 0x149829210 <col:30, col:43> '<dependent type>' contains-errors lvalue ->data
    |     |   `-CXXDependentScopeMemberExpr 0x1498291c8 <col:30, col:37> '<dependent type>' contains-errors lvalue ->dims
    |     |     `-RecoveryExpr 0x1498291a8 <col:30> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x149829258 <col:48> 'int' 3
    |-DeclStmt 0x1498293d8 <line:27:3, col:48>
    | `-VarDecl 0x1498292e0 <col:3, col:38> col:7 used output_height 'int' cinit
    |   `-BinaryOperator 0x1498293b8 <col:23, col:38> 'int' contains-errors '*'
    |     |-ImplicitCastExpr 0x149829388 <col:23> 'int' contains-errors <LValueToRValue>
    |     | `-DeclRefExpr 0x149829348 <col:23> 'const int' contains-errors lvalue Var 0x149828e00 'input_height' 'const int'
    |     `-ImplicitCastExpr 0x1498293a0 <col:38> 'int' contains-errors <LValueToRValue>
    |       `-DeclRefExpr 0x149829368 <col:38> 'const int' contains-errors lvalue Var 0x1498282f8 'block_size' 'const int'
    |-DeclStmt 0x149829500 <line:28:3, col:46>
    | `-VarDecl 0x149829408 <col:3, col:36> col:7 used output_width 'int' cinit
    |   `-BinaryOperator 0x1498294e0 <col:22, col:36> 'int' contains-errors '*'
    |     |-ImplicitCastExpr 0x1498294b0 <col:22> 'int' contains-errors <LValueToRValue>
    |     | `-DeclRefExpr 0x149829470 <col:22> 'const int' contains-errors lvalue Var 0x149828fa0 'input_width' 'const int'
    |     `-ImplicitCastExpr 0x1498294c8 <col:36> 'int' contains-errors <LValueToRValue>
    |       `-DeclRefExpr 0x149829490 <col:36> 'const int' contains-errors lvalue Var 0x1498282f8 'block_size' 'const int'
    |-DeclStmt 0x149829680 <line:29:3, col:65>
    | `-VarDecl 0x149829530 <col:3, col:55> col:7 used output_channels 'int' cinit
    |   `-BinaryOperator 0x149829660 <col:25, col:55> 'int' contains-errors '/'
    |     |-BinaryOperator 0x149829608 <col:25, col:42> 'int' contains-errors '/'
    |     | |-ImplicitCastExpr 0x1498295d8 <col:25> 'int' contains-errors <LValueToRValue>
    |     | | `-DeclRefExpr 0x149829598 <col:25> 'const int' contains-errors lvalue Var 0x149829140 'input_channels' 'const int'
    |     | `-ImplicitCastExpr 0x1498295f0 <col:42> 'int' contains-errors <LValueToRValue>
    |     |   `-DeclRefExpr 0x1498295b8 <col:42> 'const int' contains-errors lvalue Var 0x1498282f8 'block_size' 'const int'
    |     `-ImplicitCastExpr 0x149829648 <col:55> 'int' contains-errors <LValueToRValue>
    |       `-DeclRefExpr 0x149829628 <col:55> 'const int' contains-errors lvalue Var 0x1498282f8 'block_size' 'const int'
    |-CallExpr 0x149829788 <line:31:3, col:70> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x149829698 <col:3> 'int ()' Function 0x14980e138 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x1498296b8 <col:21> '<dependent type>' contains-errors lvalue
    | |-DeclRefExpr 0x1498296d8 <col:30> 'const int' contains-errors lvalue Var 0x149828e00 'input_height' 'const int'
    | `-BinaryOperator 0x149829768 <col:44, col:60> 'int' contains-errors '/'
    |   |-ImplicitCastExpr 0x149829738 <col:44> 'int' contains-errors <LValueToRValue>
    |   | `-DeclRefExpr 0x1498296f8 <col:44> 'int' contains-errors lvalue Var 0x1498292e0 'output_height' 'int'
    |   `-ImplicitCastExpr 0x149829750 <col:60> 'int' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x149829718 <col:60> 'const int' contains-errors lvalue Var 0x1498282f8 'block_size' 'const int'
    |-CallExpr 0x1498298b0 <line:32:3, col:68> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1498297c0 <col:3> 'int ()' Function 0x14980e138 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x1498297e0 <col:21> '<dependent type>' contains-errors lvalue
    | |-DeclRefExpr 0x149829800 <col:30> 'const int' contains-errors lvalue Var 0x149828fa0 'input_width' 'const int'
    | `-BinaryOperator 0x149829890 <col:43, col:58> 'int' contains-errors '/'
    |   |-ImplicitCastExpr 0x149829860 <col:43> 'int' contains-errors <LValueToRValue>
    |   | `-DeclRefExpr 0x149829820 <col:43> 'int' contains-errors lvalue Var 0x149829408 'output_width' 'int'
    |   `-ImplicitCastExpr 0x149829878 <col:58> 'int' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x149829840 <col:58> 'const int' contains-errors lvalue Var 0x1498282f8 'block_size' 'const int'
    `-CallExpr 0x149829a30 <line:33:3, line:34:62> '<dependent type>' contains-errors
      |-DeclRefExpr 0x1498298e8 <line:33:3> 'int ()' Function 0x14980e138 'TF_LITE_ENSURE_EQ' 'int ()'
      |-RecoveryExpr 0x149829908 <col:21> '<dependent type>' contains-errors lvalue
      |-DeclRefExpr 0x149829928 <col:30> 'const int' contains-errors lvalue Var 0x149829140 'input_channels' 'const int'
      `-BinaryOperator 0x149829a10 <line:34:21, col:52> 'int' contains-errors '*'
        |-BinaryOperator 0x1498299b8 <col:21, col:39> 'int' contains-errors '*'
        | |-ImplicitCastExpr 0x149829988 <col:21> 'int' contains-errors <LValueToRValue>
        | | `-DeclRefExpr 0x149829948 <col:21> 'int' contains-errors lvalue Var 0x149829530 'output_channels' 'int'
        | `-ImplicitCastExpr 0x1498299a0 <col:39> 'int' contains-errors <LValueToRValue>
        |   `-DeclRefExpr 0x149829968 <col:39> 'const int' contains-errors lvalue Var 0x1498282f8 'block_size' 'const int'
        `-ImplicitCastExpr 0x1498299f8 <col:52> 'int' contains-errors <LValueToRValue>
          `-DeclRefExpr 0x1498299d8 <col:52> 'const int' contains-errors lvalue Var 0x1498282f8 'block_size' 'const int'
