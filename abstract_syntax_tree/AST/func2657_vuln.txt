TranslationUnitDecl 0x13f855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13f8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13f855bd0 '__int128'
|-TypedefDecl 0x13f856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13f855bf0 'unsigned __int128'
|-TypedefDecl 0x13f926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13f926000 'struct __NSConstantString_tag'
|   `-Record 0x13f856580 '__NSConstantString_tag'
|-TypedefDecl 0x13f926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13f855d90 '__SVInt8_t'
|-TypedefDecl 0x13f926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13f855db0 '__SVInt16_t'
|-TypedefDecl 0x13f926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13f855dd0 '__SVInt32_t'
|-TypedefDecl 0x13f9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13f855df0 '__SVInt64_t'
|-TypedefDecl 0x13f926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13f855e10 '__SVUint8_t'
|-TypedefDecl 0x13f9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13f855e30 '__SVUint16_t'
|-TypedefDecl 0x13f926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13f855e50 '__SVUint32_t'
|-TypedefDecl 0x13f926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13f855e70 '__SVUint64_t'
|-TypedefDecl 0x13f9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13f855e90 '__SVFloat16_t'
|-TypedefDecl 0x13f926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13f855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13f9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13f855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13f926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13f855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13f926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13f855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13f9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13f855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13f926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13f855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13f9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13f855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13f926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13f855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13f926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13f855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13f9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13f855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13f926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13f855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13f926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13f856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13f926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13f856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13f926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13f856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13f926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13f856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13f926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13f856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13f926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13f8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13f926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13f8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13f926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13f8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13f926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13f856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13f926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13f856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13f926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13f856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13f926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13f856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13f926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13f856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13f927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13f8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13f927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13f8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13f9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13f8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13f927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13f856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13f9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13f856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13f927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13f856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13f927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13f856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13f927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13f856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13f927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13f8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13f927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13f8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13f927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13f8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13f927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13f856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13f927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13f856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13f927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13f856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13f927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13f856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13f927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13f856390 '__SVBool_t'
|-TypedefDecl 0x13f927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13f8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13f927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13f8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13f927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13f8563f0 '__SVCount_t'
|-TypedefDecl 0x13f927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13f927fb0 'char *'
|   `-BuiltinType 0x13f8556b0 'char'
|-TypedefDecl 0x13f928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13f927fb0 'char *'
|   `-BuiltinType 0x13f8556b0 'char'
|-FunctionDecl 0x13f9283a8 <dataset_diviso_filec/func2657_vuln.c:1:1, line:60:1> line:1:8 invalid AutoResizeImage 'int *(const int *, const char *, int *, int *)'
| |-ParmVarDecl 0x13f9280f0 <col:24, col:37> col:37 referenced invalid image 'const int *'
| |-ParmVarDecl 0x13f928170 <col:43, col:55> col:55 used option 'const char *'
| |-ParmVarDecl 0x13f928228 <line:2:3, col:21> col:21 invalid count 'int *'
| |-ParmVarDecl 0x13f9282a8 <col:27, col:42> col:42 invalid exception 'int *'
| `-CompoundStmt 0x14800d890 <line:3:1, line:60:1>
|   |-DeclStmt 0x13f9284f0 <line:6:3, line:7:7>
|   | `-VarDecl 0x13f928488 <line:6:3, line:7:6> col:6 used q 'char *'
|   |-DeclStmt 0x13f928588 <line:9:3, line:10:7>
|   | `-VarDecl 0x13f928520 <line:9:3, line:10:6> col:6 used p 'const char *'
|   |-BinaryOperator 0x13f928718 <line:12:3, line:14:6> '<dependent type>' contains-errors ','
|   | |-BinaryOperator 0x13f9286a8 <line:12:3, line:13:6> '<dependent type>' contains-errors '*'
|   | | |-RecoveryExpr 0x13f9285c0 <line:12:3> '<dependent type>' contains-errors lvalue
|   | | | `-DeclRefExpr 0x13f9285a0 <col:3> 'const int *' lvalue ParmVar 0x13f9280f0 'image' 'const int *'
|   | | `-RecoveryExpr 0x13f928688 <line:13:6> '<dependent type>' contains-errors lvalue
|   | `-UnaryOperator 0x13f928700 <line:14:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   `-ImplicitCastExpr 0x13f9286e8 <col:6> '<dependent type>' contains-errors <LValueToRValue>
|   |     `-RecoveryExpr 0x13f9286c8 <col:6> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x13f9287b8 <line:16:3, line:17:6>
|   | `-VarDecl 0x13f928750 <line:16:3, line:17:5> col:5 referenced invalid i 'int' register
|   |-BinaryOperator 0x148008ea0 <line:22:3, col:10> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x148008e20 <col:3> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x148008e00 <col:3> 'const int *' lvalue ParmVar 0x13f9280f0 'image' 'const int *'
|   | `-RecoveryExpr 0x148008e80 <col:10> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x148008f80 <line:23:3, col:10> '<dependent type>' contains-errors '='
|   | |-UnaryOperator 0x148008f68 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x148008f50 <col:4> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x148008ec0 <col:4> '<dependent type>' contains-errors lvalue
|   | `-IntegerLiteral 0x148008f10 <col:10> 'int' 0
|   |-BinaryOperator 0x148009008 <line:24:3, col:5> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x148008fc0 <col:3> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x148008fa0 <col:3> 'int' lvalue Var 0x13f928750 'i' 'int'
|   | `-IntegerLiteral 0x148008fe8 <col:5> 'int' 0
|   |-BinaryOperator 0x148009080 <line:25:3, col:5> 'const char *' '='
|   | |-DeclRefExpr 0x148009028 <col:3> 'const char *' lvalue Var 0x13f928520 'p' 'const char *'
|   | `-ImplicitCastExpr 0x148009068 <col:5> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x148009048 <col:5> 'const char *' lvalue ParmVar 0x13f928170 'option' 'const char *'
|   |-WhileStmt 0x14800d020 <line:26:3, line:43:3>
|   | |-BinaryOperator 0x148009310 <line:26:10, col:28> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x1480092b0 <col:10, col:16> 'int' '!='
|   | | | |-ImplicitCastExpr 0x148009298 <col:10, col:11> 'int' <IntegralCast>
|   | | | | `-ImplicitCastExpr 0x148009280 <col:10, col:11> 'char' <LValueToRValue>
|   | | | |   `-UnaryOperator 0x148009268 <col:10, col:11> 'const char' lvalue prefix '*' cannot overflow
|   | | | |     `-ImplicitCastExpr 0x148009250 <col:11> 'const char *' <LValueToRValue>
|   | | | |       `-DeclRefExpr 0x1480090a0 <col:11> 'const char *' lvalue Var 0x13f928520 'p' 'const char *'
|   | | | `-CharacterLiteral 0x1480090f0 <col:16> 'int' 0
|   | | `-BinaryOperator 0x1480092f0 <col:24, col:28> 'int' contains-errors '<'
|   | |   |-RecoveryExpr 0x148009158 <col:24> '<dependent type>' contains-errors lvalue
|   | |   `-RecoveryExpr 0x1480092d0 <col:28> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x14800cff0 <line:27:3, line:43:3>
|   |   |-UnaryExprOrTypeTraitExpr 0x148009388 <line:28:5, line:29:7> 'unsigned long' contains-errors sizeof
|   |   | `-RecoveryExpr 0x148009368 <col:7> '<dependent type>' contains-errors lvalue
|   |   |-WhileStmt 0x148009c28 <line:31:5, line:32:8>
|   |   | |-ParenExpr 0x148009bd0 <line:31:12, col:53> 'int'
|   |   | | `-BinaryOperator 0x148009bb0 <col:13, col:52> 'int' '!='
|   |   | |   |-CallExpr 0x148009b68 <col:13, col:47> 'int'
|   |   | |   | |-ImplicitCastExpr 0x148009b50 <col:13> 'int (*)(int)' <FunctionToPointerDecay>
|   |   | |   | | `-DeclRefExpr 0x1480099d0 <col:13> 'int (int)' Function 0x148009810 'isspace' 'int (int)'
|   |   | |   | `-CStyleCastExpr 0x148009af0 <col:21, col:46> 'int' <IntegralCast>
|   |   | |   |   `-ParenExpr 0x148009ad0 <col:27, col:46> 'unsigned char'
|   |   | |   |     `-CStyleCastExpr 0x148009a70 <col:28, col:45> 'unsigned char' <IntegralCast>
|   |   | |   |       `-ImplicitCastExpr 0x148009a58 <col:44, col:45> 'char' <LValueToRValue> part_of_explicit_cast
|   |   | |   |         `-UnaryOperator 0x148009a28 <col:44, col:45> 'const char' lvalue prefix '*' cannot overflow
|   |   | |   |           `-ImplicitCastExpr 0x148009a10 <col:45> 'const char *' <LValueToRValue>
|   |   | |   |             `-DeclRefExpr 0x1480099f0 <col:45> 'const char *' lvalue Var 0x13f928520 'p' 'const char *'
|   |   | |   `-IntegerLiteral 0x148009b90 <col:52> 'int' 0
|   |   | `-UnaryOperator 0x148009c10 <line:32:7, col:8> 'const char *' postfix '++'
|   |   |   `-DeclRefExpr 0x148009bf0 <col:7> 'const char *' lvalue Var 0x13f928520 'p' 'const char *'
|   |   |-BinaryOperator 0x14800cc60 <line:38:5, col:7> 'const char *' '='
|   |   | |-DeclRefExpr 0x14800cbf0 <col:5> 'const char *' lvalue Var 0x13f928520 'p' 'const char *'
|   |   | `-ImplicitCastExpr 0x14800cc48 <col:7> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x14800cc30 <col:7> 'char *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x14800cc10 <col:7> 'char *' lvalue Var 0x13f928488 'q' 'char *'
|   |   `-WhileStmt 0x14800cfd0 <line:41:5, line:42:8>
|   |     |-BinaryOperator 0x14800cf78 <line:41:12, col:68> 'int' '||'
|   |     | |-ParenExpr 0x14800ce80 <col:12, col:53> 'int'
|   |     | | `-BinaryOperator 0x14800ce60 <col:13, col:52> 'int' '!='
|   |     | |   |-CallExpr 0x14800ce18 <col:13, col:47> 'int'
|   |     | |   | |-ImplicitCastExpr 0x14800ce00 <col:13> 'int (*)(int)' <FunctionToPointerDecay>
|   |     | |   | | `-DeclRefExpr 0x14800ccb8 <col:13> 'int (int)' Function 0x148009810 'isspace' 'int (int)'
|   |     | |   | `-CStyleCastExpr 0x14800cdd8 <col:21, col:46> 'int' <IntegralCast>
|   |     | |   |   `-ParenExpr 0x14800cdb8 <col:27, col:46> 'unsigned char'
|   |     | |   |     `-CStyleCastExpr 0x14800cd58 <col:28, col:45> 'unsigned char' <IntegralCast>
|   |     | |   |       `-ImplicitCastExpr 0x14800cd40 <col:44, col:45> 'char' <LValueToRValue> part_of_explicit_cast
|   |     | |   |         `-UnaryOperator 0x14800cd10 <col:44, col:45> 'const char' lvalue prefix '*' cannot overflow
|   |     | |   |           `-ImplicitCastExpr 0x14800ccf8 <col:45> 'const char *' <LValueToRValue>
|   |     | |   |             `-DeclRefExpr 0x14800ccd8 <col:45> 'const char *' lvalue Var 0x13f928520 'p' 'const char *'
|   |     | |   `-IntegerLiteral 0x14800ce40 <col:52> 'int' 0
|   |     | `-ParenExpr 0x14800cf58 <col:58, col:68> 'int'
|   |     |   `-BinaryOperator 0x14800cf38 <col:59, col:65> 'int' '=='
|   |     |     |-ImplicitCastExpr 0x14800cf20 <col:59, col:60> 'int' <IntegralCast>
|   |     |     | `-ImplicitCastExpr 0x14800cf08 <col:59, col:60> 'char' <LValueToRValue>
|   |     |     |   `-UnaryOperator 0x14800ced8 <col:59, col:60> 'const char' lvalue prefix '*' cannot overflow
|   |     |     |     `-ImplicitCastExpr 0x14800cec0 <col:60> 'const char *' <LValueToRValue>
|   |     |     |       `-DeclRefExpr 0x14800cea0 <col:60> 'const char *' lvalue Var 0x13f928520 'p' 'const char *'
|   |     |     `-CharacterLiteral 0x14800cef0 <col:65> 'int' 44
|   |     `-UnaryOperator 0x14800cfb8 <line:42:7, col:8> 'const char *' postfix '++'
|   |       `-DeclRefExpr 0x14800cf98 <col:7> 'const char *' lvalue Var 0x13f928520 'p' 'const char *'
|   |-IfStmt 0x14800d128 <line:45:3, line:46:7>
|   | |-BinaryOperator 0x14800d080 <line:45:7, col:10> 'int' contains-errors '=='
|   | | |-RecoveryExpr 0x14800d040 <col:7> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x14800d060 <col:10> 'int' 0
|   | `-BinaryOperator 0x14800d108 <line:46:5, col:7> '<dependent type>' contains-errors '='
|   |   |-RecoveryExpr 0x14800d0c0 <col:5> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x14800d0a0 <col:5> 'int' lvalue Var 0x13f928750 'i' 'int'
|   |   `-IntegerLiteral 0x14800d0e8 <col:7> 'int' 10
|   |-BinaryOperator 0x14800d208 <line:47:3, col:10> '<dependent type>' contains-errors '='
|   | |-UnaryOperator 0x14800d1f0 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x14800d1d8 <col:4> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x14800d148 <col:4> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x14800d198 <col:10> '<dependent type>' contains-errors lvalue
|   `-ForStmt 0x14800d858 <line:48:3, line:58:3>
|     |-BinaryOperator 0x14800d268 <line:48:8, col:10> '<dependent type>' contains-errors '='
|     | |-RecoveryExpr 0x14800d228 <col:8> '<dependent type>' contains-errors lvalue
|     | `-IntegerLiteral 0x14800d248 <col:10> 'int' 0
|     |-<<<NULL>>>
|     |-BinaryOperator 0x14800d348 <col:13, col:18> 'int' contains-errors '<'
|     | |-RecoveryExpr 0x14800d288 <col:13> '<dependent type>' contains-errors lvalue
|     | `-UnaryOperator 0x14800d330 <col:17, col:18> '<dependent type>' contains-errors prefix '*' cannot overflow
|     |   `-ImplicitCastExpr 0x14800d318 <col:18> '<dependent type>' contains-errors <LValueToRValue>
|     |     `-RecoveryExpr 0x14800d2a8 <col:18> '<dependent type>' contains-errors lvalue
|     |-UnaryOperator 0x14800d388 <col:25, col:26> '<dependent type>' contains-errors postfix '++' cannot overflow
|     | `-RecoveryExpr 0x14800d368 <col:25> '<dependent type>' contains-errors lvalue
|     `-CompoundStmt 0x14800d848 <line:49:3, line:58:3>
`-FunctionDecl 0x148009810 <line:31:13> col:13 implicit used isspace 'int (int)' extern
  |-ParmVarDecl 0x148009910 <<invalid sloc>> <invalid sloc> 'int'
  |-BuiltinAttr 0x1480098b8 <<invalid sloc>> Implicit 929
  |-NoThrowAttr 0x148009980 <col:13> Implicit
  `-PureAttr 0x1480099a8 <col:13> Implicit
