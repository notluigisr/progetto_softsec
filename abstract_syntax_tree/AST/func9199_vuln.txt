TranslationUnitDecl 0x136054e08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x136055cb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1360553d0 '__int128'
|-TypedefDecl 0x136055d28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1360553f0 'unsigned __int128'
|-TypedefDecl 0x136041430 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x136041200 'struct __NSConstantString_tag'
|   `-Record 0x136055d80 '__NSConstantString_tag'
|-TypedefDecl 0x136041498 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x136055590 '__SVInt8_t'
|-TypedefDecl 0x136041500 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1360555b0 '__SVInt16_t'
|-TypedefDecl 0x136041568 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1360555d0 '__SVInt32_t'
|-TypedefDecl 0x1360415d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1360555f0 '__SVInt64_t'
|-TypedefDecl 0x136041638 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x136055610 '__SVUint8_t'
|-TypedefDecl 0x1360416a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x136055630 '__SVUint16_t'
|-TypedefDecl 0x136041708 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x136055650 '__SVUint32_t'
|-TypedefDecl 0x136041770 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x136055670 '__SVUint64_t'
|-TypedefDecl 0x1360417d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x136055690 '__SVFloat16_t'
|-TypedefDecl 0x136041840 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1360556b0 '__SVFloat32_t'
|-TypedefDecl 0x1360418a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1360556d0 '__SVFloat64_t'
|-TypedefDecl 0x136041910 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1360556f0 '__SVBfloat16_t'
|-TypedefDecl 0x136041978 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x136055710 '__clang_svint8x2_t'
|-TypedefDecl 0x1360419e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x136055730 '__clang_svint16x2_t'
|-TypedefDecl 0x136041a48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x136055750 '__clang_svint32x2_t'
|-TypedefDecl 0x136041ab0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x136055770 '__clang_svint64x2_t'
|-TypedefDecl 0x136041b18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x136055790 '__clang_svuint8x2_t'
|-TypedefDecl 0x136041b80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1360557b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x136041be8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1360557d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x136041c50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1360557f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x136041cb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x136055810 '__clang_svfloat16x2_t'
|-TypedefDecl 0x136041d20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x136055830 '__clang_svfloat32x2_t'
|-TypedefDecl 0x136041d88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x136055850 '__clang_svfloat64x2_t'
|-TypedefDecl 0x136041df0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x136055870 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x136041e58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x136055890 '__clang_svint8x3_t'
|-TypedefDecl 0x136041ec0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1360558b0 '__clang_svint16x3_t'
|-TypedefDecl 0x136041f28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1360558d0 '__clang_svint32x3_t'
|-TypedefDecl 0x136041f90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1360558f0 '__clang_svint64x3_t'
|-TypedefDecl 0x136041ff8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x136055910 '__clang_svuint8x3_t'
|-TypedefDecl 0x136042060 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x136055930 '__clang_svuint16x3_t'
|-TypedefDecl 0x1360420c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x136055950 '__clang_svuint32x3_t'
|-TypedefDecl 0x136042130 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x136055970 '__clang_svuint64x3_t'
|-TypedefDecl 0x136042198 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x136055990 '__clang_svfloat16x3_t'
|-TypedefDecl 0x136094200 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1360559b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x136094268 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1360559d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1360942d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1360559f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x136094338 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x136055a10 '__clang_svint8x4_t'
|-TypedefDecl 0x1360943a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x136055a30 '__clang_svint16x4_t'
|-TypedefDecl 0x136094408 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x136055a50 '__clang_svint32x4_t'
|-TypedefDecl 0x136094470 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x136055a70 '__clang_svint64x4_t'
|-TypedefDecl 0x1360944d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x136055a90 '__clang_svuint8x4_t'
|-TypedefDecl 0x136094540 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x136055ab0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1360945a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x136055ad0 '__clang_svuint32x4_t'
|-TypedefDecl 0x136094610 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x136055af0 '__clang_svuint64x4_t'
|-TypedefDecl 0x136094678 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x136055b10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1360946e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x136055b30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x136094748 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x136055b50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1360947b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x136055b70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x136094818 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x136055b90 '__SVBool_t'
|-TypedefDecl 0x136094880 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x136055bb0 '__clang_svboolx2_t'
|-TypedefDecl 0x1360948e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x136055bd0 '__clang_svboolx4_t'
|-TypedefDecl 0x136094950 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x136055bf0 '__SVCount_t'
|-TypedefDecl 0x1360949f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1360949b0 'char *'
|   `-BuiltinType 0x136054eb0 'char'
|-TypedefDecl 0x136094a68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1360949b0 'char *'
|   `-BuiltinType 0x136054eb0 'char'
`-FunctionDecl 0x136094c88 <dataset_diviso_filec/func9199_vuln.c:1:1, line:44:1> line:1:13 invalid ParseSampler 'int (int *, int)' static
  |-ParmVarDecl 0x136094b28 <col:26, col:35> col:35 referenced invalid sampler 'int *'
  |-ParmVarDecl 0x136094ba8 <col:44, <invalid sloc>> col:47 invalid 'int'
  `-CompoundStmt 0x1360adfa8 <line:2:78, line:44:1>
    |-CallExpr 0x136095090 <line:3:3, col:59> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x136094ea0 <col:3> 'int ()' Function 0x136094de8 'ParseStringProperty' 'int ()'
    | |-UnaryOperator 0x136094f28 <col:23, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-CXXDependentScopeMemberExpr 0x136094ee0 <col:24, col:33> '<dependent type>' contains-errors lvalue ->name
    | |   `-RecoveryExpr 0x136094ec0 <col:24> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x136095030 <col:39> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x136095050 <col:44> '<dependent type>' contains-errors lvalue
    | |-StringLiteral 0x136094fb0 <col:47> 'char[4]' lvalue "STR"
    | `-RecoveryExpr 0x136095070 <col:54> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x136095190 <line:5:3, col:21>
    | `-VarDecl 0x1360950f0 <col:3, col:20> col:7 used minFilter 'int' cinit
    |   `-UnaryOperator 0x136095178 <col:19, col:20> 'int' prefix '-'
    |     `-IntegerLiteral 0x136095158 <col:20> 'int' 1
    |-DeclStmt 0x1368202a0 <line:6:3, col:21>
    | `-VarDecl 0x136820200 <col:3, col:20> col:7 used magFilter 'int' cinit
    |   `-UnaryOperator 0x136820288 <col:19, col:20> 'int' prefix '-'
    |     `-IntegerLiteral 0x136820268 <col:20> 'int' 1
    |-DeclStmt 0x136820370 <line:7:3, col:43>
    | `-VarDecl 0x1368202d0 <col:3, col:15> col:7 used wrapS 'int' cinit
    |   `-RecoveryExpr 0x136820350 <col:15> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x136820440 <line:8:3, col:43>
    | `-VarDecl 0x1368203a0 <col:3, col:15> col:7 used wrapT 'int' cinit
    |   `-RecoveryExpr 0x136820420 <col:15> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x1368206a0 <line:10:3, col:56> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x136820538 <col:3> 'int ()' Function 0x136820480 'ParseIntegerProperty' 'int ()'
    | |-UnaryOperator 0x136820578 <col:24, col:25> 'int *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x136820558 <col:25> 'int' lvalue Var 0x1360950f0 'minFilter' 'int'
    | |-RecoveryExpr 0x136820640 <col:36> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x136820660 <col:41> '<dependent type>' contains-errors lvalue
    | |-StringLiteral 0x1368205c0 <col:44> 'char[4]' lvalue "STR"
    | `-RecoveryExpr 0x136820680 <col:51> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x136820850 <line:11:3, col:56> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1368206e8 <col:3> 'int ()' Function 0x136820480 'ParseIntegerProperty' 'int ()'
    | |-UnaryOperator 0x136820728 <col:24, col:25> 'int *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x136820708 <col:25> 'int' lvalue Var 0x136820200 'magFilter' 'int'
    | |-RecoveryExpr 0x1368207f0 <col:36> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x136820810 <col:41> '<dependent type>' contains-errors lvalue
    | |-StringLiteral 0x136820770 <col:44> 'char[4]' lvalue "STR"
    | `-RecoveryExpr 0x136820830 <col:51> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x136820a00 <line:12:3, col:52> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x136820898 <col:3> 'int ()' Function 0x136820480 'ParseIntegerProperty' 'int ()'
    | |-UnaryOperator 0x1368208d8 <col:24, col:25> 'int *' contains-errors prefix '&' cannot overflow
    | | `-DeclRefExpr 0x1368208b8 <col:25> 'int' contains-errors lvalue Var 0x1368202d0 'wrapS' 'int'
    | |-RecoveryExpr 0x1368209a0 <col:32> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x1368209c0 <col:37> '<dependent type>' contains-errors lvalue
    | |-StringLiteral 0x136820920 <col:40> 'char[4]' lvalue "STR"
    | `-RecoveryExpr 0x1368209e0 <col:47> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x136820b70 <line:19:3, col:24> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x136820b08 <col:3, col:12> '<dependent type>' contains-errors lvalue ->minFilter
    | | `-RecoveryExpr 0x136820ae0 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x136820ac0 <col:3> 'int *' lvalue ParmVar 0x136094b28 'sampler' 'int *'
    | `-DeclRefExpr 0x136820b50 <col:24> 'int' lvalue Var 0x1360950f0 'minFilter' 'int'
    |-BinaryOperator 0x136820c40 <line:20:3, col:24> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x136820bd8 <col:3, col:12> '<dependent type>' contains-errors lvalue ->magFilter
    | | `-RecoveryExpr 0x136820bb0 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x136820b90 <col:3> 'int *' lvalue ParmVar 0x136094b28 'sampler' 'int *'
    | `-DeclRefExpr 0x136820c20 <col:24> 'int' lvalue Var 0x136820200 'magFilter' 'int'
    |-BinaryOperator 0x136820d10 <line:21:3, col:20> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x136820ca8 <col:3, col:12> '<dependent type>' contains-errors lvalue ->wrapS
    | | `-RecoveryExpr 0x136820c80 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x136820c60 <col:3> 'int *' lvalue ParmVar 0x136094b28 'sampler' 'int *'
    | `-DeclRefExpr 0x136820cf0 <col:20> 'int' contains-errors lvalue Var 0x1368202d0 'wrapS' 'int'
    |-BinaryOperator 0x136820de0 <line:22:3, col:20> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x136820d78 <col:3, col:12> '<dependent type>' contains-errors lvalue ->wrapT
    | | `-RecoveryExpr 0x136820d50 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x136820d30 <col:3> 'int *' lvalue ParmVar 0x136094b28 'sampler' 'int *'
    | `-DeclRefExpr 0x136820dc0 <col:20> 'int' contains-errors lvalue Var 0x1368203a0 'wrapT' 'int'
    `-IfStmt 0x1360adf88 <line:28:3, line:41:3>
      |-RecoveryExpr 0x136821140 <line:28:7> '_Bool' contains-errors
      `-CompoundStmt 0x1360adf68 <col:54, line:41:3>
        |-CompoundStmt 0x1360addd8 <line:29:5, line:34:5>
        | `-IfStmt 0x1360addb8 <line:31:7, line:33:7>
        |   |-RecoveryExpr 0x1360adaf8 <line:31:11, col:34> '_Bool' contains-errors
        |   `-CompoundStmt 0x1360adda8 <col:37, line:33:7>
        `-CompoundStmt 0x1360adf50 <line:35:5, line:40:5>
          `-IfStmt 0x1360adf30 <line:37:7, line:39:7>
            |-RecoveryExpr 0x1360ade30 <line:37:11, col:34> '_Bool' contains-errors
            `-CompoundStmt 0x1360adf20 <col:37, line:39:7>
