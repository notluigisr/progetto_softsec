TranslationUnitDecl 0x14b055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14b0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14b055bd0 '__int128'
|-TypedefDecl 0x14b056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14b055bf0 'unsigned __int128'
|-TypedefDecl 0x14b126a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14b126800 'struct __NSConstantString_tag'
|   `-Record 0x14b056580 '__NSConstantString_tag'
|-TypedefDecl 0x14b126a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14b055d90 '__SVInt8_t'
|-TypedefDecl 0x14b126b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14b055db0 '__SVInt16_t'
|-TypedefDecl 0x14b126b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14b055dd0 '__SVInt32_t'
|-TypedefDecl 0x14b126bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14b055df0 '__SVInt64_t'
|-TypedefDecl 0x14b126c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14b055e10 '__SVUint8_t'
|-TypedefDecl 0x14b126ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14b055e30 '__SVUint16_t'
|-TypedefDecl 0x14b126d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14b055e50 '__SVUint32_t'
|-TypedefDecl 0x14b126d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14b055e70 '__SVUint64_t'
|-TypedefDecl 0x14b126dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14b055e90 '__SVFloat16_t'
|-TypedefDecl 0x14b126e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14b055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14b126ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14b055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14b126f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14b055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14b126f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14b055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14b126fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14b055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14b127048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14b055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14b1270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14b055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14b127118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14b055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14b127180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14b055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14b1271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14b055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14b127250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14b055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14b1272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14b056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14b127320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14b056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14b127388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14b056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14b1273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14b056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14b127458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14b056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14b1274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14b0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14b127528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14b0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14b127590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14b0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14b1275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14b056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14b127660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14b056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14b1276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14b056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14b127730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14b056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14b127798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14b056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14b128000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14b0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14b128068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14b0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14b1280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14b0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14b128138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14b056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14b1281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14b056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14b128208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14b056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14b128270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14b056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14b1282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14b056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14b128340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14b0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14b1283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14b0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14b128410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14b0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14b128478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14b056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14b1284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14b056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14b128548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14b056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14b1285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14b056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14b128618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14b056390 '__SVBool_t'
|-TypedefDecl 0x14b128680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14b0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14b1286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14b0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14b128750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14b0563f0 '__SVCount_t'
|-TypedefDecl 0x14b1287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14b1287b0 'char *'
|   `-BuiltinType 0x14b0556b0 'char'
|-TypedefDecl 0x14b128868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14b1287b0 'char *'
|   `-BuiltinType 0x14b0556b0 'char'
|-FunctionDecl 0x14b128d58 <dataset_diviso_filec/func380_vuln.c:1:1, line:60:1> line:1:19 invalid r_bin_dwarf_parse_comp_unit 'const int *(int *, const int *, int *, const int *, int, const int *, int)' static
| |-ParmVarDecl 0x14b128928 <col:47, col:52> col:52 invalid s 'int *'
| |-ParmVarDecl 0x14b1289a8 <col:55, col:66> col:66 invalid obuf 'const int *'
| |-ParmVarDecl 0x14b128a28 <line:2:3, col:22> col:22 referenced invalid cu 'int *'
| |-ParmVarDecl 0x14b128aa8 <col:26, col:54> col:54 invalid da 'const int *'
| |-ParmVarDecl 0x14b128b28 <line:3:3, col:10> col:10 invalid offset 'int'
| |-ParmVarDecl 0x14b128ba8 <col:18, col:29> col:29 invalid debug_str 'const int *'
| |-ParmVarDecl 0x14b128c28 <col:40, col:47> col:47 invalid debug_str_len 'int'
| `-CompoundStmt 0x14b80b268 <col:62, line:60:1>
|   |-DeclStmt 0x14b128ed8 <line:4:2, col:34>
|   | `-VarDecl 0x14b128e50 <col:2, col:13> col:13 referenced invalid buf 'const int *'
|   |-UnaryExprOrTypeTraitExpr 0x14b128f48 <line:6:2, col:9> 'unsigned long' contains-errors sizeof
|   | `-RecoveryExpr 0x14b128f28 <col:9> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x14b1420e8 <line:8:2, line:11:2>
|   | |-BinaryOperator 0x14b142068 <line:8:6, col:23> 'int' contains-errors '>'
|   | | |-CXXDependentScopeMemberExpr 0x14b142000 <col:6, col:14> '<dependent type>' contains-errors lvalue .length
|   | | | `-CXXDependentScopeMemberExpr 0x14b128f88 <col:6, col:10> '<dependent type>' contains-errors lvalue ->hdr
|   | | |   `-RecoveryExpr 0x14b128f68 <col:6> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x14b142048 <col:23> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x14b1420d0 <col:38, line:11:2>
|   |   `-ReturnStmt 0x14b1420c0 <line:10:3, col:10>
|   |     `-RecoveryExpr 0x14b1420a0 <col:10> '<dependent type>' contains-errors lvalue
|   |-WhileStmt 0x14b80b218 <line:12:2, line:58:2>
|   | |-BinaryOperator 0x14b142280 <line:12:9, col:40> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x14b142260 <col:9, col:22> 'int' contains-errors '&&'
|   | | | |-RecoveryExpr 0x14b142108 <col:9> '<dependent type>' contains-errors lvalue
|   | | | `-BinaryOperator 0x14b142240 <col:16, col:22> 'int' contains-errors '<'
|   | | |   |-RecoveryExpr 0x14b142128 <col:16> '<dependent type>' contains-errors lvalue
|   | | |   `-RecoveryExpr 0x14b142220 <col:22> '<dependent type>' contains-errors lvalue
|   | | `-BinaryOperator 0x14b1421e0 <col:33, col:40> 'int' contains-errors '>='
|   | |   |-RecoveryExpr 0x14b1421a0 <col:33> '<dependent type>' contains-errors lvalue
|   | |   `-RecoveryExpr 0x14b1421c0 <col:40> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x14b80b1d0 <col:46, line:58:2>
|   |   |-IfStmt 0x14b1425f0 <line:13:3, line:15:3>
|   |   | |-BinaryOperator 0x14b1423f8 <line:13:7, col:41> 'int' contains-errors '&&'
|   |   | | |-CXXDependentScopeMemberExpr 0x14b1422c0 <col:7, col:11> '<dependent type>' contains-errors lvalue ->length
|   |   | | | `-RecoveryExpr 0x14b1422a0 <col:7> '<dependent type>' contains-errors lvalue
|   |   | | `-BinaryOperator 0x14b1423d8 <col:21, col:41> 'int' contains-errors '=='
|   |   | |   |-CXXDependentScopeMemberExpr 0x14b142328 <col:21, col:25> '<dependent type>' contains-errors lvalue ->capacity
|   |   | |   | `-RecoveryExpr 0x14b142308 <col:21> '<dependent type>' contains-errors lvalue
|   |   | |   `-CXXDependentScopeMemberExpr 0x14b142390 <col:37, col:41> '<dependent type>' contains-errors lvalue ->length
|   |   | |     `-RecoveryExpr 0x14b142370 <col:37> '<dependent type>' contains-errors lvalue
|   |   | `-CompoundStmt 0x14b1425d8 <col:49, line:15:3>
|   |   |   `-CallExpr 0x14b1425b0 <line:14:4, col:29> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x14b142570 <col:4> 'int ()' Function 0x14b1424b8 'r_bin_dwarf_expand_cu' 'int ()'
|   |   |     `-RecoveryExpr 0x14b142590 <col:27> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x14b142908 <line:16:3, col:50> '<dependent type>' contains-errors '='
|   |   | |-RecoveryExpr 0x14b142630 <col:3> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x14b142610 <col:3> 'const int *' lvalue Var 0x14b128e50 'buf' 'const int *'
|   |   | `-CallExpr 0x14b1428d0 <col:9, col:50> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x14b142738 <col:9> 'int ()' Function 0x14b142680 'r_uleb128' 'int ()'
|   |   |   |-RecoveryExpr 0x14b142758 <col:20> '<dependent type>' contains-errors lvalue
|   |   |   |-BinaryOperator 0x14b142878 <col:25, col:35> '<dependent type>' contains-errors '-'
|   |   |   | |-RecoveryExpr 0x14b142858 <col:25> '<dependent type>' contains-errors lvalue
|   |   |   | `-RecoveryExpr 0x14b142790 <col:35> '<dependent type>' contains-errors lvalue
|   |   |   `-UnaryOperator 0x14b1428b8 <col:40, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |     `-RecoveryExpr 0x14b142898 <col:41> '<dependent type>' contains-errors lvalue
|   |   |-IfStmt 0x14b142ad8 <line:17:3, line:19:3>
|   |   | |-BinaryOperator 0x14b142aa8 <line:17:7, col:34> 'int' contains-errors '||'
|   |   | | |-BinaryOperator 0x14b142a58 <col:7, col:23> 'int' contains-errors '>'
|   |   | | | |-RecoveryExpr 0x14b142a38 <col:7> '<dependent type>' contains-errors lvalue
|   |   | | | `-CXXDependentScopeMemberExpr 0x14b142960 <col:19, col:23> '<dependent type>' contains-errors lvalue ->length
|   |   | | |   `-RecoveryExpr 0x14b142940 <col:19> '<dependent type>' contains-errors lvalue
|   |   | | `-UnaryOperator 0x14b142a90 <col:33, col:34> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |   | |   `-ImplicitCastExpr 0x14b142a78 <col:34> '<dependent type>' contains-errors <LValueToRValue>
|   |   | |     `-RecoveryExpr 0x14b1429c8 <col:34> '<dependent type>' contains-errors lvalue
|   |   | `-CompoundStmt 0x14b142ac8 <col:39, line:19:3>
|   |   |-CallExpr 0x14b142d30 <line:21:3, col:46> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x14b142bd8 <col:3> 'int ()' Function 0x14b142b20 'r_bin_dwarf_init_die' 'int ()'
|   |   | `-UnaryOperator 0x14b142d18 <col:25, col:45> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |   `-ArraySubscriptExpr 0x14b142cf8 <col:26, col:45> '<dependent type>' contains-errors lvalue
|   |   |     |-ImplicitCastExpr 0x14b142cc8 <col:26, col:30> '<dependent type>' contains-errors <LValueToRValue>
|   |   |     | `-CXXDependentScopeMemberExpr 0x14b142c18 <col:26, col:30> '<dependent type>' contains-errors lvalue ->dies
|   |   |     |   `-RecoveryExpr 0x14b142bf8 <col:26> '<dependent type>' contains-errors lvalue
|   |   |     `-ImplicitCastExpr 0x14b142ce0 <col:35, col:39> '<dependent type>' contains-errors <LValueToRValue>
|   |   |       `-CXXDependentScopeMemberExpr 0x14b142c80 <col:35, col:39> '<dependent type>' contains-errors lvalue ->length
|   |   |         `-RecoveryExpr 0x14b142c60 <col:35> '<dependent type>' contains-errors lvalue
|   |   |-IfStmt 0x14b808c98 <line:22:3, line:27:3>
|   |   | |-RecoveryExpr 0x14b142d58 <line:22:7, col:8> '_Bool' contains-errors
|   |   | `-CompoundStmt 0x14b808c68 <col:19, line:27:3>
|   |   |   |-BinaryOperator 0x14b142f28 <line:23:4, col:39> '<dependent type>' contains-errors '='
|   |   |   | |-CXXDependentScopeMemberExpr 0x14b142ec0 <col:4, col:25> '<dependent type>' contains-errors lvalue .abbrev_code
|   |   |   | | `-ArraySubscriptExpr 0x14b142ea0 <col:4, col:23> '<dependent type>' contains-errors lvalue
|   |   |   | |   |-ImplicitCastExpr 0x14b142e70 <col:4, col:8> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   | |   | `-CXXDependentScopeMemberExpr 0x14b142dc0 <col:4, col:8> '<dependent type>' contains-errors lvalue ->dies
|   |   |   | |   |   `-RecoveryExpr 0x14b142d98 <col:4> '<dependent type>' contains-errors lvalue
|   |   |   | |   |     `-DeclRefExpr 0x14b142d78 <col:4> 'int *' lvalue ParmVar 0x14b128a28 'cu' 'int *'
|   |   |   | |   `-ImplicitCastExpr 0x14b142e88 <col:13, col:17> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   | |     `-CXXDependentScopeMemberExpr 0x14b142e28 <col:13, col:17> '<dependent type>' contains-errors lvalue ->length
|   |   |   | |       `-RecoveryExpr 0x14b142e08 <col:13> '<dependent type>' contains-errors lvalue
|   |   |   | `-IntegerLiteral 0x14b142f08 <col:39> 'int' 0
|   |   |   |-UnaryOperator 0x14b142fd8 <line:24:4, col:14> '<dependent type>' contains-errors postfix '++' cannot overflow
|   |   |   | `-CXXDependentScopeMemberExpr 0x14b142f90 <col:4, col:8> '<dependent type>' contains-errors lvalue ->length
|   |   |   |   `-RecoveryExpr 0x14b142f68 <col:4> '<dependent type>' contains-errors lvalue
|   |   |   |     `-DeclRefExpr 0x14b142f48 <col:4> 'int *' lvalue ParmVar 0x14b128a28 'cu' 'int *'
|   |   |   |-UnaryOperator 0x14b808c48 <line:25:4, col:7> '<dependent type>' contains-errors postfix '++' cannot overflow
|   |   |   | `-RecoveryExpr 0x14b808c20 <col:4> '<dependent type>' contains-errors lvalue
|   |   |   |   `-DeclRefExpr 0x14b808c00 <col:4> 'const int *' lvalue Var 0x14b128e50 'buf' 'const int *'
|   |   |   `-ContinueStmt 0x14b808c60 <line:26:4>
|   |   |-IfStmt 0x14b809118 <line:33:3, line:35:3>
|   |   | |-RecoveryExpr 0x14b8090e8 <line:33:7, col:22> '_Bool' contains-errors
|   |   | `-CompoundStmt 0x14b809108 <col:33, line:35:3>
|   |   `-UnaryOperator 0x14b80b1b8 <line:57:3, col:13> '<dependent type>' contains-errors postfix '++' cannot overflow
|   |     `-CXXDependentScopeMemberExpr 0x14b80b170 <col:3, col:7> '<dependent type>' contains-errors lvalue ->length
|   |       `-RecoveryExpr 0x14b80b148 <col:3> '<dependent type>' contains-errors lvalue
|   |         `-DeclRefExpr 0x14b80b128 <col:3> 'int *' lvalue ParmVar 0x14b128a28 'cu' 'int *'
|   `-ReturnStmt 0x14b80b258 <line:59:2, col:9>
|     `-RecoveryExpr 0x14b80b238 <col:9> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x14b809c00 <line:45:4> col:4 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x14b809d00 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x14b809d68 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x14b809dd0 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x14b809ca8 <<invalid sloc>> Implicit 900
