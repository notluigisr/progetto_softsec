TranslationUnitDecl 0x12803ca08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12803d8b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12803cfd0 '__int128'
|-TypedefDecl 0x12803d928 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12803cff0 'unsigned __int128'
|-TypedefDecl 0x12810d630 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12810d400 'struct __NSConstantString_tag'
|   `-Record 0x12803d980 '__NSConstantString_tag'
|-TypedefDecl 0x12810d698 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12803d190 '__SVInt8_t'
|-TypedefDecl 0x12810d700 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12803d1b0 '__SVInt16_t'
|-TypedefDecl 0x12810d768 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12803d1d0 '__SVInt32_t'
|-TypedefDecl 0x12810d7d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12803d1f0 '__SVInt64_t'
|-TypedefDecl 0x12810d838 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12803d210 '__SVUint8_t'
|-TypedefDecl 0x12810d8a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12803d230 '__SVUint16_t'
|-TypedefDecl 0x12810d908 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12803d250 '__SVUint32_t'
|-TypedefDecl 0x12810d970 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12803d270 '__SVUint64_t'
|-TypedefDecl 0x12810d9d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12803d290 '__SVFloat16_t'
|-TypedefDecl 0x12810da40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12803d2b0 '__SVFloat32_t'
|-TypedefDecl 0x12810daa8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12803d2d0 '__SVFloat64_t'
|-TypedefDecl 0x12810db10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12803d2f0 '__SVBfloat16_t'
|-TypedefDecl 0x12810db78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12803d310 '__clang_svint8x2_t'
|-TypedefDecl 0x12810dbe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12803d330 '__clang_svint16x2_t'
|-TypedefDecl 0x12810dc48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12803d350 '__clang_svint32x2_t'
|-TypedefDecl 0x12810dcb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12803d370 '__clang_svint64x2_t'
|-TypedefDecl 0x12810dd18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12803d390 '__clang_svuint8x2_t'
|-TypedefDecl 0x12810dd80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12803d3b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12810dde8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12803d3d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12810de50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12803d3f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12810deb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12803d410 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12810df20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12803d430 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12810df88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12803d450 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12810dff0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12803d470 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12810e058 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12803d490 '__clang_svint8x3_t'
|-TypedefDecl 0x12810e0c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12803d4b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12810e128 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12803d4d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12810e190 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12803d4f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12810e1f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12803d510 '__clang_svuint8x3_t'
|-TypedefDecl 0x12810e260 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12803d530 '__clang_svuint16x3_t'
|-TypedefDecl 0x12810e2c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12803d550 '__clang_svuint32x3_t'
|-TypedefDecl 0x12810e330 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12803d570 '__clang_svuint64x3_t'
|-TypedefDecl 0x12810e398 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12803d590 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12810ec00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12803d5b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12810ec68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12803d5d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12810ecd0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12803d5f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12810ed38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12803d610 '__clang_svint8x4_t'
|-TypedefDecl 0x12810eda0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12803d630 '__clang_svint16x4_t'
|-TypedefDecl 0x12810ee08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12803d650 '__clang_svint32x4_t'
|-TypedefDecl 0x12810ee70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12803d670 '__clang_svint64x4_t'
|-TypedefDecl 0x12810eed8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12803d690 '__clang_svuint8x4_t'
|-TypedefDecl 0x12810ef40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12803d6b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12810efa8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12803d6d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12810f010 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12803d6f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12810f078 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12803d710 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12810f0e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12803d730 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12810f148 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12803d750 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12810f1b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12803d770 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12810f218 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12803d790 '__SVBool_t'
|-TypedefDecl 0x12810f280 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12803d7b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12810f2e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12803d7d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12810f350 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12803d7f0 '__SVCount_t'
|-TypedefDecl 0x12810f3f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12810f3b0 'char *'
|   `-BuiltinType 0x12803cab0 'char'
|-TypedefDecl 0x12810f468 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12810f3b0 'char *'
|   `-BuiltinType 0x12803cab0 'char'
`-FunctionDecl 0x12810fb58 <dataset_diviso_filec/func22542_nonvuln.c:1:1, line:21:1> line:1:5 may_umount_tree 'int (struct vfsmount *)'
  |-ParmVarDecl 0x12810fa48 <col:21, col:38> col:38 used m 'struct vfsmount *'
  `-CompoundStmt 0x1281280a0 <line:2:1, line:21:1>
    |-DeclStmt 0x128808648 <line:3:2, col:35>
    | |-RecordDecl 0x128808250 <col:2, col:9> col:9 struct mount
    | `-VarDecl 0x1288083b8 <col:2, col:34> col:16 used mnt 'struct mount *' cinit
    |   `-ImplicitCastExpr 0x128808618 <col:22, col:34> 'struct mount *' <IntegralToPointer>
    |     `-CallExpr 0x1288085d8 <col:22, col:34> 'int'
    |       |-ImplicitCastExpr 0x1288085c0 <col:22> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x128808550 <col:22> 'int ()' Function 0x128808498 'real_mount' 'int ()'
    |       `-ImplicitCastExpr 0x128808600 <col:33> 'struct vfsmount *' <LValueToRValue>
    |         `-DeclRefExpr 0x128808570 <col:33> 'struct vfsmount *' lvalue ParmVar 0x12810fa48 'm' 'struct vfsmount *'
    |-DeclStmt 0x128808700 <line:4:2, col:21>
    | `-VarDecl 0x128808678 <col:2, col:20> col:6 used actual_refs 'int' cinit
    |   `-IntegerLiteral 0x1288086e0 <col:20> 'int' 0
    |-DeclStmt 0x1288087b8 <line:5:2, col:22>
    | `-VarDecl 0x128808730 <col:2, col:21> col:6 used minimum_refs 'int' cinit
    |   `-IntegerLiteral 0x128808798 <col:21> 'int' 0
    |-DeclStmt 0x1288088c0 <line:6:2, col:17>
    | `-VarDecl 0x128808858 <col:2, col:16> col:16 used p 'struct mount *'
    |-CallExpr 0x128808a40 <line:7:2, col:11> 'int'
    | |-ImplicitCastExpr 0x128808a28 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1288089b8 <col:2> 'int ()' Function 0x128808900 'BUG_ON' 'int ()'
    | `-UnaryOperator 0x128808a10 <col:9, col:10> 'int' prefix '!' cannot overflow
    |   `-ImplicitCastExpr 0x1288089f8 <col:10> 'struct vfsmount *' <LValueToRValue>
    |     `-DeclRefExpr 0x1288089d8 <col:10> 'struct vfsmount *' lvalue ParmVar 0x12810fa48 'm' 'struct vfsmount *'
    |-CallExpr 0x128808bf8 <line:10:2, col:30> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x128808b48 <col:2> 'int ()' Function 0x128808a90 'br_write_lock' 'int ()'
    | `-UnaryOperator 0x128808be0 <col:16, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x128808bc0 <col:17> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x128809138 <line:11:2, line:14:2>
    | |-BinaryOperator 0x128808c78 <line:11:7, col:11> 'struct mount *' '='
    | | |-DeclRefExpr 0x128808c20 <col:7> 'struct mount *' lvalue Var 0x128808858 'p' 'struct mount *'
    | | `-ImplicitCastExpr 0x128808c60 <col:11> 'struct mount *' <LValueToRValue>
    | |   `-DeclRefExpr 0x128808c40 <col:11> 'struct mount *' lvalue Var 0x1288083b8 'mnt' 'struct mount *'
    | |-<<<NULL>>>
    | |-ImplicitCastExpr 0x128808cb8 <col:16> 'struct mount *' <LValueToRValue>
    | | `-DeclRefExpr 0x128808c98 <col:16> 'struct mount *' lvalue Var 0x128808858 'p' 'struct mount *'
    | |-BinaryOperator 0x128808ec0 <col:19, col:38> 'struct mount *' '='
    | | |-DeclRefExpr 0x128808cd0 <col:19> 'struct mount *' lvalue Var 0x128808858 'p' 'struct mount *'
    | | `-ImplicitCastExpr 0x128808ea8 <col:23, col:38> 'struct mount *' <IntegralToPointer>
    | |   `-CallExpr 0x128808e48 <col:23, col:38> 'int'
    | |     |-ImplicitCastExpr 0x128808e30 <col:23> 'int (*)()' <FunctionToPointerDecay>
    | |     | `-DeclRefExpr 0x128808dd0 <col:23> 'int ()' Function 0x128808d18 'next_mnt' 'int ()'
    | |     |-ImplicitCastExpr 0x128808e78 <col:32> 'struct mount *' <LValueToRValue>
    | |     | `-DeclRefExpr 0x128808df0 <col:32> 'struct mount *' lvalue Var 0x128808858 'p' 'struct mount *'
    | |     `-ImplicitCastExpr 0x128808e90 <col:35> 'struct mount *' <LValueToRValue>
    | |       `-DeclRefExpr 0x128808e10 <col:35> 'struct mount *' lvalue Var 0x1288083b8 'mnt' 'struct mount *'
    | `-CompoundStmt 0x128809118 <col:41, line:14:2>
    |   |-CompoundAssignOperator 0x128809078 <line:12:3, col:33> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |   | |-DeclRefExpr 0x128808ee0 <col:3> 'int' lvalue Var 0x128808678 'actual_refs' 'int'
    |   | `-CallExpr 0x128809038 <col:18, col:33> 'int'
    |   |   |-ImplicitCastExpr 0x128809020 <col:18> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x128808fe0 <col:18> 'int ()' Function 0x128808f28 'mnt_get_count' 'int ()'
    |   |   `-ImplicitCastExpr 0x128809060 <col:32> 'struct mount *' <LValueToRValue>
    |   |     `-DeclRefExpr 0x128809000 <col:32> 'struct mount *' lvalue Var 0x128808858 'p' 'struct mount *'
    |   `-CompoundAssignOperator 0x1288090e8 <line:13:3, col:19> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |     |-DeclRefExpr 0x1288090a8 <col:3> 'int' lvalue Var 0x128808730 'minimum_refs' 'int'
    |     `-IntegerLiteral 0x1288090c8 <col:19> 'int' 2
    |-CallExpr 0x128127f68 <line:15:2, col:32> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x128127eb8 <col:2> 'int ()' Function 0x128127e00 'br_write_unlock' 'int ()'
    | `-UnaryOperator 0x128127f50 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x128127f30 <col:19> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x128128050 <line:17:2, line:18:10>
    | |-BinaryOperator 0x128128000 <line:17:6, col:20> 'int' '>'
    | | |-ImplicitCastExpr 0x128127fd0 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x128127f90 <col:6> 'int' lvalue Var 0x128808678 'actual_refs' 'int'
    | | `-ImplicitCastExpr 0x128127fe8 <col:20> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x128127fb0 <col:20> 'int' lvalue Var 0x128808730 'minimum_refs' 'int'
    | `-ReturnStmt 0x128128040 <line:18:3, col:10>
    |   `-IntegerLiteral 0x128128020 <col:10> 'int' 0
    `-ReturnStmt 0x128128090 <line:20:2, col:9>
      `-IntegerLiteral 0x128128070 <col:9> 'int' 1
