TranslationUnitDecl 0x126855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1268564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x126855bd0 '__int128'
|-TypedefDecl 0x126856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x126855bf0 'unsigned __int128'
|-TypedefDecl 0x12700be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12700bc00 'struct __NSConstantString_tag'
|   `-Record 0x126856580 '__NSConstantString_tag'
|-TypedefDecl 0x12700be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x126855d90 '__SVInt8_t'
|-TypedefDecl 0x12700bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x126855db0 '__SVInt16_t'
|-TypedefDecl 0x12700bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x126855dd0 '__SVInt32_t'
|-TypedefDecl 0x12700bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x126855df0 '__SVInt64_t'
|-TypedefDecl 0x12700c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x126855e10 '__SVUint8_t'
|-TypedefDecl 0x12700c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x126855e30 '__SVUint16_t'
|-TypedefDecl 0x12700c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x126855e50 '__SVUint32_t'
|-TypedefDecl 0x12700c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x126855e70 '__SVUint64_t'
|-TypedefDecl 0x12700c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x126855e90 '__SVFloat16_t'
|-TypedefDecl 0x12700c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x126855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12700c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x126855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12700c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x126855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12700c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x126855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12700c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x126855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12700c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x126855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12700c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x126855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12700c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x126855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12700c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x126855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12700c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x126855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12700c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x126855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12700c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x126856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12700c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x126856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12700c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x126856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12700c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x126856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12700c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x126856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12700c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1268560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12700c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1268560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12700c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1268560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12700c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x126856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12700ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x126856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12700cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x126856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12700cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x126856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12700cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x126856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12700d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1268561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12700d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1268561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12700d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1268561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12700d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x126856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12700d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x126856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12700d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x126856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12700d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x126856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12700d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x126856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12700d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1268562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12700d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1268562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12700d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1268562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12700d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x126856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12700d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x126856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12700d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x126856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12700d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x126856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12700da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x126856390 '__SVBool_t'
|-TypedefDecl 0x12700da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1268563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12700dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1268563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12700db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1268563f0 '__SVCount_t'
|-TypedefDecl 0x12700dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12700dbb0 'char *'
|   `-BuiltinType 0x1268556b0 'char'
|-TypedefDecl 0x12700dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12700dbb0 'char *'
|   `-BuiltinType 0x1268556b0 'char'
|-FunctionDecl 0x12700e038 <dataset_diviso_filec/func79_vuln.c:1:1, line:21:1> line:1:5 invalid sldns_str2wire_dname_buf_origin 'int (const char *, int *, int *, int *, int)'
| |-ParmVarDecl 0x12700dcd8 <col:37, col:49> col:49 used str 'const char *'
| |-ParmVarDecl 0x12700dda8 <col:54, col:63> col:63 invalid buf 'int *'
| |-ParmVarDecl 0x12700de28 <col:68, col:76> col:76 referenced invalid len 'int *'
| |-ParmVarDecl 0x12700dea8 <line:2:2, col:11> col:11 invalid origin 'int *'
| |-ParmVarDecl 0x12700df28 <col:19, col:26> col:26 invalid origin_len 'int'
| `-CompoundStmt 0x13000be78 <line:3:1, line:21:1>
|   |-BinaryOperator 0x12700e240 <line:4:2, col:17> 'unsigned long' contains-errors '='
|   | |-UnaryExprOrTypeTraitExpr 0x12700e1f0 <col:2, col:9> 'unsigned long' contains-errors sizeof
|   | | `-RecoveryExpr 0x12700e1d0 <col:9> '<dependent type>' contains-errors lvalue
|   | `-UnaryOperator 0x12700e228 <col:16, col:17> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   `-ImplicitCastExpr 0x12700e210 <col:17> '<dependent type>' contains-errors <LValueToRValue>
|   |     `-RecoveryExpr 0x12700e140 <col:17> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x12700e300 <line:5:2, col:13>
|   | `-VarDecl 0x12700e278 <col:2, col:12> col:6 used rel 'int' cinit
|   |   `-IntegerLiteral 0x12700e2e0 <col:12> 'int' 0
|   |-DeclStmt 0x1300090b0 <line:6:2, col:61>
|   | `-VarDecl 0x12700e330 <col:2, col:60> col:6 used s 'int' cinit
|   |   `-CallExpr 0x130009070 <col:10, col:60> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x130008f10 <col:10> 'int ()' Function 0x130008e58 'sldns_str2wire_dname_buf_rel' 'int ()'
|   |     |-DeclRefExpr 0x130008f30 <col:39> 'const char *' lvalue ParmVar 0x12700dcd8 'str' 'const char *'
|   |     |-RecoveryExpr 0x130008f50 <col:44> '<dependent type>' contains-errors lvalue
|   |     |-UnaryOperator 0x130009058 <col:49, col:50> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     | `-RecoveryExpr 0x130009038 <col:50> '<dependent type>' contains-errors lvalue
|   |     `-UnaryOperator 0x130008fc0 <col:56, col:57> 'int *' prefix '&' cannot overflow
|   |       `-DeclRefExpr 0x130008fa0 <col:57> 'int' lvalue Var 0x12700e278 'rel' 'int'
|   |-IfStmt 0x130009148 <line:7:2, col:15>
|   | |-ImplicitCastExpr 0x1300090e8 <col:5> 'int' contains-errors <LValueToRValue>
|   | | `-DeclRefExpr 0x1300090c8 <col:5> 'int' contains-errors lvalue Var 0x12700e330 's' 'int'
|   | `-ReturnStmt 0x130009138 <col:8, col:15>
|   |   `-ImplicitCastExpr 0x130009120 <col:15> 'int' contains-errors <LValueToRValue>
|   |     `-DeclRefExpr 0x130009100 <col:15> 'int' contains-errors lvalue Var 0x12700e330 's' 'int'
|   `-IfStmt 0x13000be48 <line:9:2, line:19:10> has_else
|     |-BinaryOperator 0x1300092a0 <line:9:5, col:29> 'int' contains-errors '&&'
|     | |-BinaryOperator 0x1300091a8 <col:5, col:12> 'int' contains-errors '&&'
|     | | |-DeclRefExpr 0x130009168 <col:5> 'int' lvalue Var 0x12700e278 'rel' 'int'
|     | | `-RecoveryExpr 0x130009188 <col:12> '<dependent type>' contains-errors lvalue
|     | `-BinaryOperator 0x130009280 <col:22, col:29> 'int' contains-errors '>'
|     |   |-RecoveryExpr 0x130009260 <col:22> '<dependent type>' contains-errors lvalue
|     |   `-IntegerLiteral 0x1300091e0 <col:29> 'int' 0
|     |-CompoundStmt 0x13000bcd0 <col:32, line:18:2>
|     | |-IfStmt 0x130009630 <line:10:3, line:12:23>
|     | | |-BinaryOperator 0x130009430 <line:10:6, col:30> 'int' contains-errors '>'
|     | | | |-BinaryOperator 0x1300093f0 <col:6, col:26> '<dependent type>' contains-errors '-'
|     | | | | |-BinaryOperator 0x1300093d0 <col:6, col:13> '<dependent type>' contains-errors '+'
|     | | | | | |-RecoveryExpr 0x1300093b0 <col:6> '<dependent type>' contains-errors lvalue
|     | | | | | `-RecoveryExpr 0x1300092d8 <col:13> '<dependent type>' contains-errors lvalue
|     | | | | `-IntegerLiteral 0x130009318 <col:26> 'int' 1
|     | | | `-RecoveryExpr 0x130009410 <col:30> '<dependent type>' contains-errors lvalue
|     | | `-ReturnStmt 0x130009620 <line:11:4, line:12:23>
|     | |   `-CallExpr 0x1300095f0 <line:11:11, line:12:23> '<dependent type>' contains-errors
|     | |     |-DeclRefExpr 0x130009530 <line:11:11> 'int ()' Function 0x130009478 'RET_ERR' 'int ()'
|     | |     |-RecoveryExpr 0x1300095b0 <col:19> '<dependent type>' contains-errors lvalue
|     | |     `-RecoveryExpr 0x1300095d0 <line:12:5> '<dependent type>' contains-errors lvalue
|     | |-IfStmt 0x130009970 <line:13:3, line:15:9>
|     | | |-BinaryOperator 0x130009808 <line:13:6, col:31> 'int' contains-errors '>'
|     | | | |-BinaryOperator 0x1300097b8 <col:6, col:26> '<dependent type>' contains-errors '-'
|     | | | | |-BinaryOperator 0x130009798 <col:6, col:13> '<dependent type>' contains-errors '+'
|     | | | | | |-RecoveryExpr 0x130009778 <col:6> '<dependent type>' contains-errors lvalue
|     | | | | | `-RecoveryExpr 0x130009668 <col:13> '<dependent type>' contains-errors lvalue
|     | | | | `-IntegerLiteral 0x1300096a8 <col:26> 'int' 1
|     | | | `-UnaryOperator 0x1300097f0 <col:30, col:31> '<dependent type>' contains-errors prefix '*' cannot overflow
|     | | |   `-ImplicitCastExpr 0x1300097d8 <col:31> '<dependent type>' contains-errors <LValueToRValue>
|     | | |     `-RecoveryExpr 0x1300096e8 <col:31> '<dependent type>' contains-errors lvalue
|     | | `-ReturnStmt 0x130009960 <line:14:4, line:15:9>
|     | |   `-CallExpr 0x130009930 <line:14:11, line:15:9> '<dependent type>' contains-errors
|     | |     |-DeclRefExpr 0x130009828 <line:14:11> 'int ()' Function 0x130009478 'RET_ERR' 'int ()'
|     | |     |-RecoveryExpr 0x1300098e0 <col:19> '<dependent type>' contains-errors lvalue
|     | |     `-UnaryOperator 0x130009918 <line:15:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow
|     | |       `-ImplicitCastExpr 0x130009900 <col:6> '<dependent type>' contains-errors <LValueToRValue>
|     | |         `-RecoveryExpr 0x130009860 <col:6> '<dependent type>' contains-errors lvalue
|     | |-CallExpr 0x13000ba90 <line:16:3, col:41> '<dependent type>' contains-errors
|     | | |-DeclRefExpr 0x13000b880 <col:3> 'void *(void *, const void *, unsigned long)' Function 0x13000b630 'memmove' 'void *(void *, const void *, unsigned long)'
|     | | |-BinaryOperator 0x13000ba40 <col:11, col:20> '<dependent type>' contains-errors '-'
|     | | | |-BinaryOperator 0x13000ba20 <col:11, col:15> '<dependent type>' contains-errors '+'
|     | | | | |-RecoveryExpr 0x13000b8a0 <col:11> '<dependent type>' contains-errors lvalue
|     | | | | `-RecoveryExpr 0x13000ba00 <col:15> '<dependent type>' contains-errors lvalue
|     | | | `-IntegerLiteral 0x13000b8f8 <col:20> 'int' 1
|     | | |-RecoveryExpr 0x13000b938 <col:23> '<dependent type>' contains-errors lvalue
|     | | `-RecoveryExpr 0x13000b958 <col:31> '<dependent type>' contains-errors lvalue
|     | `-BinaryOperator 0x13000bcb0 <line:17:3, col:30> '<dependent type>' contains-errors '='
|     |   |-UnaryOperator 0x13000bc38 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
|     |   | `-ImplicitCastExpr 0x13000bc20 <col:4> '<dependent type>' contains-errors <LValueToRValue>
|     |   |   `-RecoveryExpr 0x13000bac8 <col:4> '<dependent type>' contains-errors lvalue
|     |   `-BinaryOperator 0x13000bc90 <col:10, col:30> '<dependent type>' contains-errors '-'
|     |     |-BinaryOperator 0x13000bc70 <col:10, col:17> '<dependent type>' contains-errors '+'
|     |     | |-RecoveryExpr 0x13000bc50 <col:10> '<dependent type>' contains-errors lvalue
|     |     | `-RecoveryExpr 0x13000bb30 <col:17> '<dependent type>' contains-errors lvalue
|     |     `-IntegerLiteral 0x13000bb70 <col:30> 'int' 1
|     `-BinaryOperator 0x13000be28 <line:19:3, col:10> '<dependent type>' contains-errors '='
|       |-UnaryOperator 0x13000bdf0 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
|       | `-ImplicitCastExpr 0x13000bdd8 <col:4> '<dependent type>' contains-errors <LValueToRValue>
|       |   `-RecoveryExpr 0x13000bd00 <col:4> '<dependent type>' contains-errors lvalue
|       `-RecoveryExpr 0x13000be08 <col:10> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x13000b630 <line:16:3> col:3 implicit used memmove 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x13000b730 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x13000b798 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x13000b800 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x13000b6d8 <<invalid sloc>> Implicit 884
