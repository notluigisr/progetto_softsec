TranslationUnitDecl 0x14f055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14f0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14f055bd0 '__int128'
|-TypedefDecl 0x14f056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14f055bf0 'unsigned __int128'
|-TypedefDecl 0x14f80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14f80bc00 'struct __NSConstantString_tag'
|   `-Record 0x14f056580 '__NSConstantString_tag'
|-TypedefDecl 0x14f80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14f055d90 '__SVInt8_t'
|-TypedefDecl 0x14f80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14f055db0 '__SVInt16_t'
|-TypedefDecl 0x14f80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14f055dd0 '__SVInt32_t'
|-TypedefDecl 0x14f80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14f055df0 '__SVInt64_t'
|-TypedefDecl 0x14f80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14f055e10 '__SVUint8_t'
|-TypedefDecl 0x14f80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14f055e30 '__SVUint16_t'
|-TypedefDecl 0x14f80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14f055e50 '__SVUint32_t'
|-TypedefDecl 0x14f80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14f055e70 '__SVUint64_t'
|-TypedefDecl 0x14f80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14f055e90 '__SVFloat16_t'
|-TypedefDecl 0x14f80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14f055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14f80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14f055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14f80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14f055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14f80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14f055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14f80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14f055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14f80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14f055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14f80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14f055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14f80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14f055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14f80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14f055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14f80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14f055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14f80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14f055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14f80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14f056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14f80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14f056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14f80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14f056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14f80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14f056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14f80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14f056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14f80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14f0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14f80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14f0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14f80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14f0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14f80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14f056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14f80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14f056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14f80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14f056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14f80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14f056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14f80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14f056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14f80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14f0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14f80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14f0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14f80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14f0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14f80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14f056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14f80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14f056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14f80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14f056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14f80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14f056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14f80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14f056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14f80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14f0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14f80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14f0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14f80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14f0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14f80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14f056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14f80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14f056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14f80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14f056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14f80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14f056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14f80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14f056390 '__SVBool_t'
|-TypedefDecl 0x14f80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14f0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14f80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14f0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14f80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14f0563f0 '__SVCount_t'
|-TypedefDecl 0x14f80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14f80dbb0 'char *'
|   `-BuiltinType 0x14f0556b0 'char'
|-TypedefDecl 0x14f80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14f80dbb0 'char *'
|   `-BuiltinType 0x14f0556b0 'char'
`-FunctionDecl 0x14f82a9e8 <dataset_diviso_filec/func7736_vuln.c:1:1, line:69:1> line:1:5 ceph_set_acl 'int (struct inode *, struct posix_acl *, int)'
  |-ParmVarDecl 0x14f80e248 <col:18, col:32> col:32 used inode 'struct inode *'
  |-ParmVarDecl 0x14f82a828 <col:39, col:57> col:57 used acl 'struct posix_acl *'
  |-ParmVarDecl 0x14f82a8a8 <col:62, col:66> col:66 used type 'int'
  `-CompoundStmt 0x14f82f398 <line:2:1, line:69:1>
    |-DeclStmt 0x14f82ac48 <line:3:2, col:23>
    | |-VarDecl 0x14f82ab08 <col:2, col:12> col:6 used ret 'int' cinit
    | | `-IntegerLiteral 0x14f82ab70 <col:12> 'int' 0
    | `-VarDecl 0x14f82aba8 <col:2, col:22> col:15 used size 'int' cinit
    |   `-IntegerLiteral 0x14f82ac10 <col:22> 'int' 0
    |-DeclStmt 0x14f82ad30 <line:4:2, col:25>
    | `-VarDecl 0x14f82ac78 <col:2, col:21> col:14 used name 'const char *' cinit
    |   `-RecoveryExpr 0x14f82ad10 <col:21> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x14f82ae00 <line:5:2, col:20>
    | `-VarDecl 0x14f82ad60 <col:2, col:16> col:8 used value 'char *' cinit
    |   `-RecoveryExpr 0x14f82ade0 <col:16> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x14f82af98 <line:6:2, col:23>
    | |-RecordDecl 0x14f82ae18 <col:2, col:9> col:9 struct iattr
    | `-VarDecl 0x14f82af18 <col:2, col:15> col:15 referenced invalid newattrs 'struct iattr'
    |-SwitchStmt 0x14f82afe8 <line:9:2, line:30:2>
    | |-ImplicitCastExpr 0x14f82afd0 <line:9:10> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x14f82afb0 <col:10> 'int' lvalue ParmVar 0x14f82a8a8 'type' 'int'
    | `-CompoundStmt 0x14f82d980 <col:16, line:30:2>
    |   |-BinaryOperator 0x14f82b0a0 <line:11:3, col:10> 'const char *' contains-errors '='
    |   | |-DeclRefExpr 0x14f82b028 <col:3> 'const char *' contains-errors lvalue Var 0x14f82ac78 'name' 'const char *'
    |   | `-RecoveryExpr 0x14f82b080 <col:10> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x14f82b5d0 <line:12:3, line:18:3>
    |   | |-ImplicitCastExpr 0x14f82b0e0 <line:12:7> 'struct posix_acl *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x14f82b0c0 <col:7> 'struct posix_acl *' lvalue ParmVar 0x14f82a828 'acl' 'struct posix_acl *'
    |   | `-CompoundStmt 0x14f82b5a8 <col:12, line:18:3>
    |   |   |-BinaryOperator 0x14f82b358 <line:13:4, col:45> 'int' contains-errors '='
    |   |   | |-DeclRefExpr 0x14f82b0f8 <col:4> 'int' lvalue Var 0x14f82ab08 'ret' 'int'
    |   |   | `-CallExpr 0x14f82b328 <col:10, col:45> '<dependent type>' contains-errors
    |   |   |   |-DeclRefExpr 0x14f82b230 <col:10> 'int ()' Function 0x14f82b178 'posix_acl_equiv_mode' 'int ()'
    |   |   |   |-DeclRefExpr 0x14f82b250 <col:31> 'struct posix_acl *' lvalue ParmVar 0x14f82a828 'acl' 'struct posix_acl *'
    |   |   |   `-UnaryOperator 0x14f82b310 <col:36, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   |     `-RecoveryExpr 0x14f82b2f0 <col:37> '<dependent type>' contains-errors lvalue
    |   |   |-IfStmt 0x14f82b458 <line:14:4, line:15:10>
    |   |   | |-BinaryOperator 0x14f82b3d0 <line:14:8, col:14> 'int' '<'
    |   |   | | |-ImplicitCastExpr 0x14f82b3b8 <col:8> 'int' <LValueToRValue>
    |   |   | | | `-DeclRefExpr 0x14f82b378 <col:8> 'int' lvalue Var 0x14f82ab08 'ret' 'int'
    |   |   | | `-IntegerLiteral 0x14f82b398 <col:14> 'int' 0
    |   |   | `-GotoStmt 0x14f82b440 <line:15:5, col:10> 'out' 0x14f82b3f0
    |   |   `-IfStmt 0x14f82b588 <line:16:4, line:17:11>
    |   |     |-BinaryOperator 0x14f82b4d0 <line:16:8, col:15> 'int' '=='
    |   |     | |-ImplicitCastExpr 0x14f82b4b8 <col:8> 'int' <LValueToRValue>
    |   |     | | `-DeclRefExpr 0x14f82b478 <col:8> 'int' lvalue Var 0x14f82ab08 'ret' 'int'
    |   |     | `-IntegerLiteral 0x14f82b498 <col:15> 'int' 0
    |   |     `-BinaryOperator 0x14f82b568 <line:17:5, col:11> 'struct posix_acl *' contains-errors '='
    |   |       |-DeclRefExpr 0x14f82b4f0 <col:5> 'struct posix_acl *' lvalue ParmVar 0x14f82a828 'acl' 'struct posix_acl *'
    |   |       `-RecoveryExpr 0x14f82b548 <col:11> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x14f82b5f0 <line:19:3>
    |   |-IfStmt 0x14f82d790 <line:21:3, line:24:3>
    |   | |-UnaryOperator 0x14f82b798 <line:21:7, col:29> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   | | `-CallExpr 0x14f82b770 <col:8, col:29> '<dependent type>' contains-errors
    |   | |   |-DeclRefExpr 0x14f82b6f0 <col:8> 'int ()' Function 0x14f82b638 'S_ISDIR' 'int ()'
    |   | |   `-RecoveryExpr 0x14f82b748 <col:16, col:23> '<dependent type>' contains-errors lvalue
    |   | |     `-DeclRefExpr 0x14f82b710 <col:16> 'struct inode *' lvalue ParmVar 0x14f80e248 'inode' 'struct inode *'
    |   | `-CompoundStmt 0x14f82d770 <col:32, line:24:3>
    |   |   |-BinaryOperator 0x14f82d738 <line:22:4, col:26> 'int' contains-errors '='
    |   |   | |-DeclRefExpr 0x14f82b7b0 <col:4> 'int' lvalue Var 0x14f82ab08 'ret' 'int'
    |   |   | `-ConditionalOperator 0x14f82d708 <col:10, col:26> '<dependent type>' contains-errors
    |   |   |   |-DeclRefExpr 0x14f82b7d0 <col:10> 'struct posix_acl *' lvalue ParmVar 0x14f82a828 'acl' 'struct posix_acl *'
    |   |   |   |-UnaryOperator 0x14f82d6f0 <col:16, col:17> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   |   | `-ImplicitCastExpr 0x14f82d6d8 <col:17> '<dependent type>' contains-errors <LValueToRValue>
    |   |   |   |   `-RecoveryExpr 0x14f82d6b8 <col:17> '<dependent type>' contains-errors lvalue
    |   |   |   `-IntegerLiteral 0x14f82d648 <col:26> 'int' 0
    |   |   `-GotoStmt 0x14f82d758 <line:23:4, col:9> 'out' 0x14f82b3f0
    |   |-BinaryOperator 0x14f82d828 <line:25:3, col:10> 'const char *' contains-errors '='
    |   | |-DeclRefExpr 0x14f82d7b0 <col:3> 'const char *' contains-errors lvalue Var 0x14f82ac78 'name' 'const char *'
    |   | `-RecoveryExpr 0x14f82d808 <col:10> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x14f82d848 <line:26:3>
    |   |-DefaultStmt 0x14f82d948 <line:27:2, line:28:10>
    |   | `-BinaryOperator 0x14f82d928 <col:3, col:10> 'int' contains-errors '='
    |   |   |-DeclRefExpr 0x14f82d850 <col:3> 'int' lvalue Var 0x14f82ab08 'ret' 'int'
    |   |   `-UnaryOperator 0x14f82d910 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |     `-ImplicitCastExpr 0x14f82d8f8 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |       `-RecoveryExpr 0x14f82d8d8 <col:10> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x14f82d968 <line:29:3, col:8> 'out' 0x14f82b3f0
    |-IfStmt 0x14f82e238 <line:32:2, line:43:2>
    | |-ImplicitCastExpr 0x14f82d9f0 <line:32:6> 'struct posix_acl *' <LValueToRValue>
    | | `-DeclRefExpr 0x14f82d9d0 <col:6> 'struct posix_acl *' lvalue ParmVar 0x14f82a828 'acl' 'struct posix_acl *'
    | `-CompoundStmt 0x14f82e208 <col:11, line:43:2>
    |   |-BinaryOperator 0x14f82dbb0 <line:33:3, col:43> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x14f82da08 <col:3> 'int' lvalue Var 0x14f82aba8 'size' 'int'
    |   | `-CallExpr 0x14f82db88 <col:10, col:43> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x14f82db08 <col:10> 'int ()' Function 0x14f82da50 'posix_acl_xattr_size' 'int ()'
    |   |   `-RecoveryExpr 0x14f82db60 <col:31, col:36> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x14f82db28 <col:31> 'struct posix_acl *' lvalue ParmVar 0x14f82a828 'acl' 'struct posix_acl *'
    |   |-BinaryOperator 0x14f82ddc8 <line:34:3, col:33> 'char *' contains-errors '='
    |   | |-DeclRefExpr 0x14f82dbd0 <col:3> 'char *' contains-errors lvalue Var 0x14f82ad60 'value' 'char *'
    |   | `-CallExpr 0x14f82dd98 <col:11, col:33> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x14f82dcd0 <col:11> 'int ()' Function 0x14f82dc18 'kmalloc' 'int ()'
    |   |   |-DeclRefExpr 0x14f82dcf0 <col:19> 'int' lvalue Var 0x14f82aba8 'size' 'int'
    |   |   `-RecoveryExpr 0x14f82dd78 <col:25> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x14f82df68 <line:35:3, line:38:3>
    |   | |-UnaryOperator 0x14f82de20 <line:35:7, col:8> 'int' contains-errors prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x14f82de08 <col:8> 'char *' contains-errors <LValueToRValue>
    |   | |   `-DeclRefExpr 0x14f82dde8 <col:8> 'char *' contains-errors lvalue Var 0x14f82ad60 'value' 'char *'
    |   | `-CompoundStmt 0x14f82df48 <col:15, line:38:3>
    |   |   |-BinaryOperator 0x14f82df10 <line:36:4, col:11> 'int' contains-errors '='
    |   |   | |-DeclRefExpr 0x14f82de38 <col:4> 'int' lvalue Var 0x14f82ab08 'ret' 'int'
    |   |   | `-UnaryOperator 0x14f82def8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x14f82dee0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |   |   |     `-RecoveryExpr 0x14f82dec0 <col:11> '<dependent type>' contains-errors lvalue
    |   |   `-GotoStmt 0x14f82df30 <line:37:4, col:9> 'out' 0x14f82b3f0
    |   `-IfStmt 0x14f82e1e8 <line:41:3, line:42:9>
    |     |-BinaryOperator 0x14f82e160 <line:41:7, col:13> 'int' '<'
    |     | |-ImplicitCastExpr 0x14f82e148 <col:7> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x14f82e108 <col:7> 'int' lvalue Var 0x14f82ab08 'ret' 'int'
    |     | `-IntegerLiteral 0x14f82e128 <col:13> 'int' 0
    |     `-GotoStmt 0x14f82e1d0 <line:42:4, col:9> 'out_free' 0x14f82e180
    |-IfStmt 0x14f82ea00 <line:45:2, line:51:2>
    | |-RecoveryExpr 0x14f82e258 <line:45:6, col:18> '_Bool' contains-errors
    | `-CompoundStmt 0x14f82e5d0 <col:28, line:51:2>
    |   |-BinaryOperator 0x14f82e540 <line:48:3, col:40> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x14f82e398 <col:3> 'int' lvalue Var 0x14f82ab08 'ret' 'int'
    |   | `-CallExpr 0x14f82e510 <col:9, col:40> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x14f82e498 <col:9> 'int ()' Function 0x14f82e3e0 '__ceph_setattr' 'int ()'
    |   |   |-DeclRefExpr 0x14f82e4b8 <col:24> 'struct inode *' lvalue ParmVar 0x14f80e248 'inode' 'struct inode *'
    |   |   `-UnaryOperator 0x14f82e4f8 <col:31, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |     `-RecoveryExpr 0x14f82e4d8 <col:32> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x14f82e5b0 <line:49:3, line:50:9>
    |     |-ImplicitCastExpr 0x14f82e580 <line:49:7> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x14f82e560 <col:7> 'int' lvalue Var 0x14f82ab08 'ret' 'int'
    |     `-GotoStmt 0x14f82e598 <line:50:4, col:9> 'out_free' 0x14f82e180
    |-BinaryOperator 0x14f82ecd0 <line:53:2, col:51> 'int' contains-errors '='
    | |-DeclRefExpr 0x14f82ea20 <col:2> 'int' lvalue Var 0x14f82ab08 'ret' 'int'
    | `-CallExpr 0x14f82ec28 <col:8, col:51> 'int' contains-errors
    |   |-ImplicitCastExpr 0x14f82ec10 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x14f82eb20 <col:8> 'int ()' Function 0x14f82ea68 '__ceph_setxattr' 'int ()'
    |   |-ImplicitCastExpr 0x14f82ec70 <col:24> 'struct inode *' <LValueToRValue>
    |   | `-DeclRefExpr 0x14f82eb40 <col:24> 'struct inode *' lvalue ParmVar 0x14f80e248 'inode' 'struct inode *'
    |   |-ImplicitCastExpr 0x14f82ec88 <col:31> 'const char *' contains-errors <LValueToRValue>
    |   | `-DeclRefExpr 0x14f82eb60 <col:31> 'const char *' contains-errors lvalue Var 0x14f82ac78 'name' 'const char *'
    |   |-ImplicitCastExpr 0x14f82eca0 <col:37> 'char *' contains-errors <LValueToRValue>
    |   | `-DeclRefExpr 0x14f82eb80 <col:37> 'char *' contains-errors lvalue Var 0x14f82ad60 'value' 'char *'
    |   |-ImplicitCastExpr 0x14f82ecb8 <col:44> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x14f82eba0 <col:44> 'int' lvalue Var 0x14f82aba8 'size' 'int'
    |   `-IntegerLiteral 0x14f82ebc0 <col:50> 'int' 0
    |-IfStmt 0x14f82ef80 <line:54:2, line:61:2>
    | |-ImplicitCastExpr 0x14f82ed10 <line:54:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x14f82ecf0 <col:6> 'int' lvalue Var 0x14f82ab08 'ret' 'int'
    | `-CompoundStmt 0x14f82ef60 <col:11, line:61:2>
    |   |-IfStmt 0x14f82ef28 <line:55:3, line:59:3>
    |   | |-RecoveryExpr 0x14f82ed28 <line:55:7, col:19> '_Bool' contains-errors
    |   | `-CompoundStmt 0x14f82ef10 <col:29, line:59:3>
    |   |   `-CallExpr 0x14f82eee0 <line:58:4, col:35> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x14f82ee68 <col:4> 'int ()' Function 0x14f82e3e0 '__ceph_setattr' 'int ()'
    |   |     |-DeclRefExpr 0x14f82ee88 <col:19> 'struct inode *' lvalue ParmVar 0x14f80e248 'inode' 'struct inode *'
    |   |     `-UnaryOperator 0x14f82eec8 <col:26, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |       `-RecoveryExpr 0x14f82eea8 <col:27> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x14f82ef48 <line:60:3, col:8> 'out_free' 0x14f82e180
    |-CallExpr 0x14f82f118 <line:63:2, col:38> 'int'
    | |-ImplicitCastExpr 0x14f82f100 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x14f82f080 <col:2> 'int ()' Function 0x14f82efc8 'ceph_set_cached_acl' 'int ()'
    | |-ImplicitCastExpr 0x14f82f150 <col:22> 'struct inode *' <LValueToRValue>
    | | `-DeclRefExpr 0x14f82f0a0 <col:22> 'struct inode *' lvalue ParmVar 0x14f80e248 'inode' 'struct inode *'
    | |-ImplicitCastExpr 0x14f82f168 <col:29> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x14f82f0c0 <col:29> 'int' lvalue ParmVar 0x14f82a8a8 'type' 'int'
    | `-ImplicitCastExpr 0x14f82f180 <col:35> 'struct posix_acl *' <LValueToRValue>
    |   `-DeclRefExpr 0x14f82f0e0 <col:35> 'struct posix_acl *' lvalue ParmVar 0x14f82a828 'acl' 'struct posix_acl *'
    |-LabelStmt 0x14f82f310 <line:65:1, line:66:13> 'out_free'
    | `-CallExpr 0x14f82f2d0 <col:2, col:13> 'int' contains-errors
    |   |-ImplicitCastExpr 0x14f82f2b8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x14f82f278 <col:2> 'int ()' Function 0x14f82f1c0 'kfree' 'int ()'
    |   `-ImplicitCastExpr 0x14f82f2f8 <col:8> 'char *' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x14f82f298 <col:8> 'char *' contains-errors lvalue Var 0x14f82ad60 'value' 'char *'
    `-LabelStmt 0x14f82f378 <line:67:1, line:68:9> 'out'
      `-ReturnStmt 0x14f82f368 <col:2, col:9>
        `-ImplicitCastExpr 0x14f82f350 <col:9> 'int' <LValueToRValue>
          `-DeclRefExpr 0x14f82f330 <col:9> 'int' lvalue Var 0x14f82ab08 'ret' 'int'
