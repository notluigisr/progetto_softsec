TranslationUnitDecl 0x129055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1290564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x129055bd0 '__int128'
|-TypedefDecl 0x129056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x129055bf0 'unsigned __int128'
|-TypedefDecl 0x129126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x129126000 'struct __NSConstantString_tag'
|   `-Record 0x129056580 '__NSConstantString_tag'
|-TypedefDecl 0x129126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x129055d90 '__SVInt8_t'
|-TypedefDecl 0x129126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x129055db0 '__SVInt16_t'
|-TypedefDecl 0x129126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x129055dd0 '__SVInt32_t'
|-TypedefDecl 0x1291263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x129055df0 '__SVInt64_t'
|-TypedefDecl 0x129126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x129055e10 '__SVUint8_t'
|-TypedefDecl 0x1291264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x129055e30 '__SVUint16_t'
|-TypedefDecl 0x129126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x129055e50 '__SVUint32_t'
|-TypedefDecl 0x129126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x129055e70 '__SVUint64_t'
|-TypedefDecl 0x1291265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x129055e90 '__SVFloat16_t'
|-TypedefDecl 0x129126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x129055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1291266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x129055ed0 '__SVFloat64_t'
|-TypedefDecl 0x129126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x129055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x129126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x129055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1291267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x129055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x129126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x129055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1291268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x129055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x129126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x129055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x129126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x129055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1291269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x129055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x129126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x129055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x129126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x129056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x129126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x129056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x129126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x129056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x129126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x129056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x129126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x129056090 '__clang_svint8x3_t'
|-TypedefDecl 0x129126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1290560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x129126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1290560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x129126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1290560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x129126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x129056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x129126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x129056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x129126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x129056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x129126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x129056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x129126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x129056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x129127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1290561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x129127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1290561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1291278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1290561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x129127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x129056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1291279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x129056230 '__clang_svint16x4_t'
|-TypedefDecl 0x129127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x129056250 '__clang_svint32x4_t'
|-TypedefDecl 0x129127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x129056270 '__clang_svint64x4_t'
|-TypedefDecl 0x129127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x129056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x129127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1290562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x129127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1290562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x129127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1290562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x129127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x129056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x129127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x129056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x129127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x129056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x129127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x129056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x129127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x129056390 '__SVBool_t'
|-TypedefDecl 0x129127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1290563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x129127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1290563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x129127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1290563f0 '__SVCount_t'
|-TypedefDecl 0x129127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x129127fb0 'char *'
|   `-BuiltinType 0x1290556b0 'char'
|-TypedefDecl 0x129128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x129127fb0 'char *'
|   `-BuiltinType 0x1290556b0 'char'
`-FunctionDecl 0x129128750 <dataset_diviso_filec/func24706_nonvuln.c:1:1, line:34:1> line:1:13 rbd_acquire_lock 'void (struct work_struct *)' static
  |-ParmVarDecl 0x129128648 <col:30, col:50> col:50 used work 'struct work_struct *'
  `-CompoundStmt 0x129143e30 <line:2:1, line:34:1>
    |-DeclStmt 0x129140f48 <line:3:2, line:4:40>
    | |-RecordDecl 0x129140a48 <line:3:2, col:9> col:9 struct rbd_device
    | `-VarDecl 0x129140bb8 <col:2, col:21> col:21 used rbd_dev 'struct rbd_device *'
    |-DeclStmt 0x129140fe0 <line:5:2, col:9>
    | `-VarDecl 0x129140f78 <col:2, col:6> col:6 used ret 'int'
    |-CallExpr 0x129141258 <line:7:2, col:31> 'int'
    | |-ImplicitCastExpr 0x129141240 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1291410d8 <col:2> 'int ()' Function 0x129141020 'dout' 'int ()'
    | |-ImplicitCastExpr 0x129141290 <col:7> 'char *' <ArrayToPointerDecay>
    | | `-StringLiteral 0x129141140 <col:7> 'char[4]' lvalue "STR"
    | |-ImplicitCastExpr 0x1291412a8 <col:14> 'const char *' <ArrayToPointerDecay>
    | | `-PredefinedExpr 0x129141208 <col:14> 'const char[17]' lvalue __func__
    | |   `-StringLiteral 0x1291411e0 <col:14> 'const char[17]' lvalue "rbd_acquire_lock"
    | `-ImplicitCastExpr 0x1291412c0 <col:24> 'struct rbd_device *' <LValueToRValue>
    |   `-DeclRefExpr 0x129141220 <col:24> 'struct rbd_device *' lvalue Var 0x129140bb8 'rbd_dev' 'struct rbd_device *'
    |-LabelStmt 0x1291414e0 <line:8:1, line:9:36> 'again'
    | `-BinaryOperator 0x129141470 <col:2, col:36> 'int' '='
    |   |-DeclRefExpr 0x1291412d8 <col:2> 'int' lvalue Var 0x129140f78 'ret' 'int'
    |   `-CallExpr 0x129141430 <col:8, col:36> 'int'
    |     |-ImplicitCastExpr 0x129141418 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x1291413d8 <col:8> 'int ()' Function 0x129141320 'rbd_try_acquire_lock' 'int ()'
    |     `-ImplicitCastExpr 0x129141458 <col:29> 'struct rbd_device *' <LValueToRValue>
    |       `-DeclRefExpr 0x1291413f8 <col:29> 'struct rbd_device *' lvalue Var 0x129140bb8 'rbd_dev' 'struct rbd_device *'
    |-IfStmt 0x129141720 <line:10:2, line:13:2>
    | |-BinaryOperator 0x129141558 <line:10:6, col:13> 'int' '<='
    | | |-ImplicitCastExpr 0x129141540 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x129141500 <col:6> 'int' lvalue Var 0x129140f78 'ret' 'int'
    | | `-IntegerLiteral 0x129141520 <col:13> 'int' 0
    | `-CompoundStmt 0x129141700 <col:16, line:13:2>
    |   |-CallExpr 0x129141650 <line:11:3, col:37> 'int'
    |   | |-ImplicitCastExpr 0x129141638 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x129141578 <col:3> 'int ()' Function 0x129141020 'dout' 'int ()'
    |   | |-ImplicitCastExpr 0x129141690 <col:8> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x129141598 <col:8> 'char[4]' lvalue "STR"
    |   | |-ImplicitCastExpr 0x1291416a8 <col:15> 'const char *' <ArrayToPointerDecay>
    |   | | `-PredefinedExpr 0x1291415e0 <col:15> 'const char[17]' lvalue __func__
    |   | |   `-StringLiteral 0x1291415b8 <col:15> 'const char[17]' lvalue "rbd_acquire_lock"
    |   | |-ImplicitCastExpr 0x1291416c0 <col:25> 'struct rbd_device *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1291415f8 <col:25> 'struct rbd_device *' lvalue Var 0x129140bb8 'rbd_dev' 'struct rbd_device *'
    |   | `-ImplicitCastExpr 0x1291416d8 <col:34> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x129141618 <col:34> 'int' lvalue Var 0x129140f78 'ret' 'int'
    |   `-ReturnStmt 0x1291416f0 <line:12:3>
    |-BinaryOperator 0x1291418d8 <line:15:2, col:32> 'int' '='
    | |-DeclRefExpr 0x129141740 <col:2> 'int' lvalue Var 0x129140f78 'ret' 'int'
    | `-CallExpr 0x129141898 <col:8, col:32> 'int'
    |   |-ImplicitCastExpr 0x129141880 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x129141840 <col:8> 'int ()' Function 0x129141788 'rbd_request_lock' 'int ()'
    |   `-ImplicitCastExpr 0x1291418c0 <col:25> 'struct rbd_device *' <LValueToRValue>
    |     `-DeclRefExpr 0x129141860 <col:25> 'struct rbd_device *' lvalue Var 0x129140bb8 'rbd_dev' 'struct rbd_device *'
    `-IfStmt 0x129143e00 <line:16:2, line:33:2> has_else
      |-BinaryOperator 0x1291419d0 <line:16:6, col:14> 'int' contains-errors '=='
      | |-DeclRefExpr 0x1291418f8 <col:6> 'int' lvalue Var 0x129140f78 'ret' 'int'
      | `-UnaryOperator 0x1291419b8 <col:13, col:14> '<dependent type>' contains-errors prefix '-' cannot overflow
      |   `-ImplicitCastExpr 0x1291419a0 <col:14> '<dependent type>' contains-errors <LValueToRValue>
      |     `-RecoveryExpr 0x129141980 <col:14> '<dependent type>' contains-errors lvalue
      |-CompoundStmt 0x129142818 <col:25, line:18:2>
      | `-GotoStmt 0x129142800 <line:17:3, col:8> 'again' 0x129141490
      `-IfStmt 0x1291437d0 <line:18:9, line:33:2> has_else
        |-BinaryOperator 0x129142908 <line:18:13, col:21> 'int' contains-errors '=='
        | |-DeclRefExpr 0x129142830 <col:13> 'int' lvalue Var 0x129140f78 'ret' 'int'
        | `-UnaryOperator 0x1291428f0 <col:20, col:21> '<dependent type>' contains-errors prefix '-' cannot overflow
        |   `-ImplicitCastExpr 0x1291428d8 <col:21> '<dependent type>' contains-errors <LValueToRValue>
        |     `-RecoveryExpr 0x1291428b8 <col:21> '<dependent type>' contains-errors lvalue
        |-CompoundStmt 0x129142fd8 <col:28, line:23:2>
        | |-CallExpr 0x129142a80 <line:19:3, col:26> 'int'
        | | |-ImplicitCastExpr 0x129142a68 <col:3> 'int (*)()' <FunctionToPointerDecay>
        | | | `-DeclRefExpr 0x129142a08 <col:3> 'int ()' Function 0x129142950 'rbd_warn' 'int ()'
        | | |-ImplicitCastExpr 0x129142ab0 <col:12> 'struct rbd_device *' <LValueToRValue>
        | | | `-DeclRefExpr 0x129142a28 <col:12> 'struct rbd_device *' lvalue Var 0x129140bb8 'rbd_dev' 'struct rbd_device *'
        | | `-ImplicitCastExpr 0x129142ac8 <col:21> 'char *' <ArrayToPointerDecay>
        | |   `-StringLiteral 0x129142a48 <col:21> 'char[4]' lvalue "STR"
        | |-CallExpr 0x129142c58 <line:20:3, col:34> '<dependent type>' contains-errors
        | | |-DeclRefExpr 0x129142bc0 <col:3> 'int ()' Function 0x129142b08 'down_write' 'int ()'
        | | `-UnaryOperator 0x129142c40 <col:14, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
        | |   `-RecoveryExpr 0x129142c18 <col:15, col:24> '<dependent type>' contains-errors lvalue
        | |     `-DeclRefExpr 0x129142be0 <col:15> 'struct rbd_device *' lvalue Var 0x129140bb8 'rbd_dev' 'struct rbd_device *'
        | |-CallExpr 0x129142dd8 <line:21:3, col:33> 'int'
        | | |-ImplicitCastExpr 0x129142dc0 <col:3> 'int (*)()' <FunctionToPointerDecay>
        | | | `-DeclRefExpr 0x129142d60 <col:3> 'int ()' Function 0x129142ca8 'wake_lock_waiters' 'int ()'
        | | |-ImplicitCastExpr 0x129142e08 <col:21> 'struct rbd_device *' <LValueToRValue>
        | | | `-DeclRefExpr 0x129142d80 <col:21> 'struct rbd_device *' lvalue Var 0x129140bb8 'rbd_dev' 'struct rbd_device *'
        | | `-ImplicitCastExpr 0x129142e20 <col:30> 'int' <LValueToRValue>
        | |   `-DeclRefExpr 0x129142da0 <col:30> 'int' lvalue Var 0x129140f78 'ret' 'int'
        | `-CallExpr 0x129142fb0 <line:22:3, col:32> '<dependent type>' contains-errors
        |   |-DeclRefExpr 0x129142f18 <col:3> 'int ()' Function 0x129142e60 'up_write' 'int ()'
        |   `-UnaryOperator 0x129142f98 <col:12, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
        |     `-RecoveryExpr 0x129142f70 <col:13, col:22> '<dependent type>' contains-errors lvalue
        |       `-DeclRefExpr 0x129142f38 <col:13> 'struct rbd_device *' lvalue Var 0x129140bb8 'rbd_dev' 'struct rbd_device *'
        `-IfStmt 0x1291437a0 <line:23:9, line:33:2> has_else
          |-BinaryOperator 0x129143060 <line:23:13, col:19> 'int' '<'
          | |-ImplicitCastExpr 0x129143048 <col:13> 'int' <LValueToRValue>
          | | `-DeclRefExpr 0x129143008 <col:13> 'int' lvalue Var 0x129140f78 'ret' 'int'
          | `-IntegerLiteral 0x129143028 <col:19> 'int' 0
          |-CompoundStmt 0x129143418 <col:22, line:27:2>
          | |-CallExpr 0x129143118 <line:24:3, col:31> 'int'
          | | |-ImplicitCastExpr 0x129143100 <col:3> 'int (*)()' <FunctionToPointerDecay>
          | | | `-DeclRefExpr 0x129143080 <col:3> 'int ()' Function 0x129142950 'rbd_warn' 'int ()'
          | | |-ImplicitCastExpr 0x129143150 <col:12> 'struct rbd_device *' <LValueToRValue>
          | | | `-DeclRefExpr 0x1291430a0 <col:12> 'struct rbd_device *' lvalue Var 0x129140bb8 'rbd_dev' 'struct rbd_device *'
          | | |-ImplicitCastExpr 0x129143168 <col:21> 'char *' <ArrayToPointerDecay>
          | | | `-StringLiteral 0x1291430c0 <col:21> 'char[4]' lvalue "STR"
          | | `-ImplicitCastExpr 0x129143180 <col:28> 'int' <LValueToRValue>
          | |   `-DeclRefExpr 0x1291430e0 <col:28> 'int' lvalue Var 0x129140f78 'ret' 'int'
          | `-CallExpr 0x1291433e0 <line:25:3, line:26:21> '<dependent type>' contains-errors
          |   |-DeclRefExpr 0x129143278 <line:25:3> 'int ()' Function 0x1291431c0 'mod_delayed_work' 'int ()'
          |   |-RecoveryExpr 0x1291432d0 <col:20, col:29> '<dependent type>' contains-errors lvalue
          |   | `-DeclRefExpr 0x129143298 <col:20> 'struct rbd_device *' lvalue Var 0x129140bb8 'rbd_dev' 'struct rbd_device *'
          |   |-UnaryOperator 0x129143358 <col:38, col:48> '<dependent type>' contains-errors prefix '&' cannot overflow
          |   | `-RecoveryExpr 0x129143330 <col:39, col:48> '<dependent type>' contains-errors lvalue
          |   |   `-DeclRefExpr 0x1291432f8 <col:39> 'struct rbd_device *' lvalue Var 0x129140bb8 'rbd_dev' 'struct rbd_device *'
          |   `-RecoveryExpr 0x1291433c0 <line:26:6> '<dependent type>' contains-errors lvalue
          `-CompoundStmt 0x129143788 <line:27:9, line:33:2>
            `-CallExpr 0x1291434f0 <line:29:3, line:30:15> 'int'
              |-ImplicitCastExpr 0x1291434d8 <line:29:3> 'int (*)()' <FunctionToPointerDecay>
              | `-DeclRefExpr 0x129143438 <col:3> 'int ()' Function 0x129141020 'dout' 'int ()'
              |-ImplicitCastExpr 0x129143528 <col:8> 'char *' <ArrayToPointerDecay>
              | `-StringLiteral 0x129143458 <col:8> 'char[4]' lvalue "STR"
              |-ImplicitCastExpr 0x129143540 <col:15> 'const char *' <ArrayToPointerDecay>
              | `-PredefinedExpr 0x1291434a0 <col:15> 'const char[17]' lvalue __func__
              |   `-StringLiteral 0x129143478 <col:15> 'const char[17]' lvalue "rbd_acquire_lock"
              `-ImplicitCastExpr 0x129143558 <line:30:8> 'struct rbd_device *' <LValueToRValue>
                `-DeclRefExpr 0x1291434b8 <col:8> 'struct rbd_device *' lvalue Var 0x129140bb8 'rbd_dev' 'struct rbd_device *'
