TranslationUnitDecl 0x12e855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12e8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12e855bd0 '__int128'
|-TypedefDecl 0x12e856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12e855bf0 'unsigned __int128'
|-TypedefDecl 0x12e926a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12e926800 'struct __NSConstantString_tag'
|   `-Record 0x12e856580 '__NSConstantString_tag'
|-TypedefDecl 0x12e926a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12e855d90 '__SVInt8_t'
|-TypedefDecl 0x12e926b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12e855db0 '__SVInt16_t'
|-TypedefDecl 0x12e926b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12e855dd0 '__SVInt32_t'
|-TypedefDecl 0x12e926bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12e855df0 '__SVInt64_t'
|-TypedefDecl 0x12e926c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12e855e10 '__SVUint8_t'
|-TypedefDecl 0x12e926ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12e855e30 '__SVUint16_t'
|-TypedefDecl 0x12e926d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12e855e50 '__SVUint32_t'
|-TypedefDecl 0x12e926d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12e855e70 '__SVUint64_t'
|-TypedefDecl 0x12e926dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12e855e90 '__SVFloat16_t'
|-TypedefDecl 0x12e926e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12e855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12e926ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12e855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12e926f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12e855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12e926f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12e855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12e926fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12e855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12e927048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12e855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12e9270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12e855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12e927118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12e855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12e927180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12e855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12e9271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12e855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12e927250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12e855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12e9272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12e856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12e927320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12e856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12e927388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12e856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12e9273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12e856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12e927458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12e856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12e9274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12e8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12e927528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12e8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12e927590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12e8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12e9275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12e856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12e927660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12e856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12e9276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12e856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12e927730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12e856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12e927798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12e856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12e928000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12e8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12e928068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12e8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12e9280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12e8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12e928138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12e856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12e9281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12e856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12e928208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12e856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12e928270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12e856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12e9282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12e856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12e928340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12e8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12e9283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12e8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12e928410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12e8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12e928478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12e856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12e9284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12e856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12e928548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12e856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12e9285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12e856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12e928618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12e856390 '__SVBool_t'
|-TypedefDecl 0x12e928680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12e8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12e9286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12e8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12e928750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12e8563f0 '__SVCount_t'
|-TypedefDecl 0x12e9287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12e9287b0 'char *'
|   `-BuiltinType 0x12e8556b0 'char'
|-TypedefDecl 0x12e928868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12e9287b0 'char *'
|   `-BuiltinType 0x12e8556b0 'char'
`-FunctionDecl 0x12e9421d8 <dataset_diviso_filec/func17220_vuln.c:1:1, line:69:1> line:1:12 invalid mailimf_group_parse 'int (const char *, int, int *, struct mailimf_group **)' static
  |-ParmVarDecl 0x12e9288d8 <col:32, col:45> col:45 used message 'const char *'
  |-ParmVarDecl 0x12e928970 <col:54, col:61> col:61 invalid length 'int'
  |-ParmVarDecl 0x12e928a28 <line:2:11, col:20> col:20 invalid indx 'int *'
  |-ParmVarDecl 0x12e942088 <line:3:11, col:35> col:35 used result 'struct mailimf_group **'
  `-CompoundStmt 0x12f80a1b8 <line:4:1, line:69:1>
    |-UnaryExprOrTypeTraitExpr 0x12e9422f8 <line:5:3, col:10> 'unsigned long' contains-errors sizeof
    | `-RecoveryExpr 0x12e9422d8 <col:10> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x12e942398 <line:6:3, col:22>
    | `-VarDecl 0x12e942330 <col:3, col:10> col:10 used display_name 'char *'
    |-DeclStmt 0x12e942598 <line:7:3, col:45>
    | |-RecordDecl 0x12e9423b0 <col:3, col:10> col:10 struct mailimf_mailbox_list
    | `-VarDecl 0x12e942518 <col:3, col:33> col:33 used mailbox_list 'struct mailimf_mailbox_list *'
    |-DeclStmt 0x12e9426a0 <line:8:3, col:31>
    | `-VarDecl 0x12e942638 <col:3, col:26> col:26 used group 'struct mailimf_group *'
    |-DeclStmt 0x12e942738 <line:9:3, col:8>
    | `-VarDecl 0x12e9426d0 <col:3, col:7> col:7 used r 'int'
    |-DeclStmt 0x12e9427d0 <line:10:3, col:10>
    | `-VarDecl 0x12e942768 <col:3, col:7> col:7 used res 'int'
    |-BinaryOperator 0x12e9428b0 <line:14:3, col:18> 'struct mailimf_mailbox_list *' contains-errors '='
    | |-DeclRefExpr 0x12e942838 <col:3> 'struct mailimf_mailbox_list *' lvalue Var 0x12e942518 'mailbox_list' 'struct mailimf_mailbox_list *'
    | `-RecoveryExpr 0x12e942890 <col:18> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12e942c20 <line:16:3, col:76> 'int' contains-errors '='
    | |-DeclRefExpr 0x12e9428d0 <col:3> 'int' lvalue Var 0x12e9426d0 'r' 'int'
    | `-CallExpr 0x12e942be0 <col:7, col:76> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12e942a50 <col:7> 'int ()' Function 0x12e942998 'mailimf_display_name_parse' 'int ()'
    |   |-DeclRefExpr 0x12e942a70 <col:34> 'const char *' lvalue ParmVar 0x12e9288d8 'message' 'const char *'
    |   |-RecoveryExpr 0x12e942a90 <col:43> '<dependent type>' contains-errors lvalue
    |   |-UnaryOperator 0x12e942bc8 <col:51, col:52> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x12e942ba8 <col:52> '<dependent type>' contains-errors lvalue
    |   `-UnaryOperator 0x12e942b30 <col:63, col:64> 'char **' prefix '&' cannot overflow
    |     `-DeclRefExpr 0x12e942ae0 <col:64> 'char *' lvalue Var 0x12e942330 'display_name' 'char *'
    |-IfStmt 0x12e942dd8 <line:17:3, line:20:3>
    | |-BinaryOperator 0x12e942cb8 <line:17:7, col:12> 'int' contains-errors '!='
    | | |-DeclRefExpr 0x12e942c40 <col:7> 'int' lvalue Var 0x12e9426d0 'r' 'int'
    | | `-RecoveryExpr 0x12e942c98 <col:12> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12e942db8 <col:30, line:20:3>
    |   |-BinaryOperator 0x12e942d30 <line:18:5, col:11> 'int' '='
    |   | |-DeclRefExpr 0x12e942cd8 <col:5> 'int' lvalue Var 0x12e942768 'res' 'int'
    |   | `-ImplicitCastExpr 0x12e942d18 <col:11> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x12e942cf8 <col:11> 'int' lvalue Var 0x12e9426d0 'r' 'int'
    |   `-GotoStmt 0x12e942da0 <line:19:5, col:10> 'err' 0x12e942d50
    |-BinaryOperator 0x12f808850 <line:22:3, col:54> 'int' contains-errors '='
    | |-DeclRefExpr 0x12e942df8 <col:3> 'int' lvalue Var 0x12e9426d0 'r' 'int'
    | `-CallExpr 0x12f808818 <col:7, col:54> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12e942ef8 <col:7> 'int ()' Function 0x12e942e40 'mailimf_colon_parse' 'int ()'
    |   |-DeclRefExpr 0x12e942f18 <col:27> 'const char *' lvalue ParmVar 0x12e9288d8 'message' 'const char *'
    |   |-RecoveryExpr 0x12e942f38 <col:36> '<dependent type>' contains-errors lvalue
    |   `-UnaryOperator 0x12f808800 <col:44, col:45> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x12e942fe0 <col:45> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12f808a08 <line:23:3, line:26:3>
    | |-BinaryOperator 0x12f8088e8 <line:23:7, col:12> 'int' contains-errors '!='
    | | |-DeclRefExpr 0x12f808870 <col:7> 'int' lvalue Var 0x12e9426d0 'r' 'int'
    | | `-RecoveryExpr 0x12f8088c8 <col:12> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12f8089e8 <col:30, line:26:3>
    |   |-BinaryOperator 0x12f808960 <line:24:5, col:11> 'int' '='
    |   | |-DeclRefExpr 0x12f808908 <col:5> 'int' lvalue Var 0x12e942768 'res' 'int'
    |   | `-ImplicitCastExpr 0x12f808948 <col:11> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x12f808928 <col:11> 'int' lvalue Var 0x12e9426d0 'r' 'int'
    |   `-GotoStmt 0x12f8089d0 <line:25:5, col:10> 'free_display_name' 0x12f808980
    |-BinaryOperator 0x12f808d30 <line:28:3, col:76> 'int' contains-errors '='
    | |-DeclRefExpr 0x12f808a28 <col:3> 'int' lvalue Var 0x12e9426d0 'r' 'int'
    | `-CallExpr 0x12f808cf0 <col:7, col:76> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12f808b28 <col:7> 'int ()' Function 0x12f808a70 'mailimf_mailbox_list_parse' 'int ()'
    |   |-DeclRefExpr 0x12f808b48 <col:34> 'const char *' lvalue ParmVar 0x12e9288d8 'message' 'const char *'
    |   |-RecoveryExpr 0x12f808b68 <col:43> '<dependent type>' contains-errors lvalue
    |   |-UnaryOperator 0x12f808cd8 <col:51, col:52> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x12f808cb8 <col:52> '<dependent type>' contains-errors lvalue
    |   `-UnaryOperator 0x12f808c40 <col:63, col:64> 'struct mailimf_mailbox_list **' prefix '&' cannot overflow
    |     `-DeclRefExpr 0x12f808bb8 <col:64> 'struct mailimf_mailbox_list *' lvalue Var 0x12e942518 'mailbox_list' 'struct mailimf_mailbox_list *'
    |-SwitchStmt 0x12f808d88 <line:29:3, line:42:3>
    | |-ImplicitCastExpr 0x12f808d70 <line:29:11> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x12f808d50 <col:11> 'int' lvalue Var 0x12e9426d0 'r' 'int'
    | `-CompoundStmt 0x12f8092b8 <col:14, line:42:3>
    |   |-BreakStmt 0x12f808dc8 <line:31:5>
    |   |-BinaryOperator 0x12f809040 <line:33:5, col:55> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x12f808de8 <col:5> 'int' lvalue Var 0x12e9426d0 'r' 'int'
    |   | `-CallExpr 0x12f809008 <col:9, col:55> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x12f808ee8 <col:9> 'int ()' Function 0x12f808e30 'mailimf_cfws_parse' 'int ()'
    |   |   |-DeclRefExpr 0x12f808f08 <col:28> 'const char *' lvalue ParmVar 0x12e9288d8 'message' 'const char *'
    |   |   |-RecoveryExpr 0x12f808f28 <col:37> '<dependent type>' contains-errors lvalue
    |   |   `-UnaryOperator 0x12f808ff0 <col:45, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |     `-RecoveryExpr 0x12f808fd0 <col:46> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x12f8091e0 <line:34:5, line:37:5>
    |   | |-RecoveryExpr 0x12f809110 <line:34:9, col:61> '_Bool' contains-errors
    |   | `-CompoundStmt 0x12f8091c0 <col:64, line:37:5>
    |   |   |-BinaryOperator 0x12f809188 <line:35:7, col:13> 'int' '='
    |   |   | |-DeclRefExpr 0x12f809130 <col:7> 'int' lvalue Var 0x12e942768 'res' 'int'
    |   |   | `-ImplicitCastExpr 0x12f809170 <col:13> 'int' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x12f809150 <col:13> 'int' lvalue Var 0x12e9426d0 'r' 'int'
    |   |   `-GotoStmt 0x12f8091a8 <line:36:7, col:12> 'free_display_name' 0x12f808980
    |   |-BreakStmt 0x12f809200 <line:38:5>
    |   |-DefaultStmt 0x12f809280 <line:39:3, line:40:11>
    |   | `-BinaryOperator 0x12f809260 <col:5, col:11> 'int' '='
    |   |   |-DeclRefExpr 0x12f809208 <col:5> 'int' lvalue Var 0x12e942768 'res' 'int'
    |   |   `-ImplicitCastExpr 0x12f809248 <col:11> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x12f809228 <col:11> 'int' lvalue Var 0x12e9426d0 'r' 'int'
    |   `-GotoStmt 0x12f8092a0 <line:41:5, col:10> 'free_display_name' 0x12f808980
    |-IfStmt 0x12f809598 <line:45:3, line:48:3>
    | |-RecoveryExpr 0x12f809478 <line:45:7, col:12> '_Bool' contains-errors
    | `-CompoundStmt 0x12f809578 <col:30, line:48:3>
    |   |-BinaryOperator 0x12f8094f0 <line:46:5, col:11> 'int' '='
    |   | |-DeclRefExpr 0x12f809498 <col:5> 'int' lvalue Var 0x12e942768 'res' 'int'
    |   | `-ImplicitCastExpr 0x12f8094d8 <col:11> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x12f8094b8 <col:11> 'int' lvalue Var 0x12e9426d0 'r' 'int'
    |   `-GotoStmt 0x12f809560 <line:47:5, col:10> 'free_mailbox_list' 0x12f809510
    |-BinaryOperator 0x12f8097e0 <line:50:3, col:55> 'struct mailimf_group *' '='
    | |-DeclRefExpr 0x12f8095b8 <col:3> 'struct mailimf_group *' lvalue Var 0x12e942638 'group' 'struct mailimf_group *'
    | `-ImplicitCastExpr 0x12f8097c8 <col:11, col:55> 'struct mailimf_group *' <IntegralToPointer>
    |   `-CallExpr 0x12f809768 <col:11, col:55> 'int'
    |     |-ImplicitCastExpr 0x12f809750 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x12f8096b8 <col:11> 'int ()' Function 0x12f809600 'mailimf_group_new' 'int ()'
    |     |-ImplicitCastExpr 0x12f809798 <col:29> 'char *' <LValueToRValue>
    |     | `-DeclRefExpr 0x12f8096d8 <col:29> 'char *' lvalue Var 0x12e942330 'display_name' 'char *'
    |     `-ImplicitCastExpr 0x12f8097b0 <col:43> 'struct mailimf_mailbox_list *' <LValueToRValue>
    |       `-DeclRefExpr 0x12f8096f8 <col:43> 'struct mailimf_mailbox_list *' lvalue Var 0x12e942518 'mailbox_list' 'struct mailimf_mailbox_list *'
    |-IfStmt 0x12f809c90 <line:51:3, line:54:3>
    | |-RecoveryExpr 0x12f809c20 <line:51:7, col:16> '_Bool' contains-errors
    | `-CompoundStmt 0x12f809c78 <col:22, line:54:3>
    |   `-GotoStmt 0x12f809c60 <line:53:5, col:10> 'free_mailbox_list' 0x12f809510
    |-BinaryOperator 0x12f809d88 <line:57:3, col:14> 'struct mailimf_group *' '='
    | |-UnaryOperator 0x12f809d38 <col:3, col:5> 'struct mailimf_group *' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x12f809d20 <col:5> 'struct mailimf_group **' <LValueToRValue>
    | |   `-DeclRefExpr 0x12f809d00 <col:5> 'struct mailimf_group **' lvalue ParmVar 0x12e942088 'result' 'struct mailimf_group **'
    | `-ImplicitCastExpr 0x12f809d70 <col:14> 'struct mailimf_group *' <LValueToRValue>
    |   `-DeclRefExpr 0x12f809d50 <col:14> 'struct mailimf_group *' lvalue Var 0x12e942638 'group' 'struct mailimf_group *'
    |-LabelStmt 0x12f809f98 <line:61:2, line:64:3> 'free_mailbox_list'
    | `-IfStmt 0x12f809f78 <line:62:3, line:64:3>
    |   |-RecoveryExpr 0x12f809dc8 <line:62:7, col:23> '_Bool' contains-errors
    |   `-CompoundStmt 0x12f809f60 <col:29, line:64:3>
    |     `-CallExpr 0x12f809f20 <line:63:5, col:43> 'int'
    |       |-ImplicitCastExpr 0x12f809f08 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x12f809ec8 <col:5> 'int ()' Function 0x12f809e10 'mailimf_mailbox_list_free' 'int ()'
    |       `-ImplicitCastExpr 0x12f809f48 <col:31> 'struct mailimf_mailbox_list *' <LValueToRValue>
    |         `-DeclRefExpr 0x12f809ee8 <col:31> 'struct mailimf_mailbox_list *' lvalue Var 0x12e942518 'mailbox_list' 'struct mailimf_mailbox_list *'
    |-LabelStmt 0x12f80a130 <line:65:2, line:66:41> 'free_display_name'
    | `-CallExpr 0x12f80a0f0 <col:3, col:41> 'int'
    |   |-ImplicitCastExpr 0x12f80a0d8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12f80a098 <col:3> 'int ()' Function 0x12f809fe0 'mailimf_display_name_free' 'int ()'
    |   `-ImplicitCastExpr 0x12f80a118 <col:29> 'char *' <LValueToRValue>
    |     `-DeclRefExpr 0x12f80a0b8 <col:29> 'char *' lvalue Var 0x12e942330 'display_name' 'char *'
    `-LabelStmt 0x12f80a198 <line:67:2, line:68:10> 'err'
      `-ReturnStmt 0x12f80a188 <col:3, col:10>
        `-ImplicitCastExpr 0x12f80a170 <col:10> 'int' <LValueToRValue>
          `-DeclRefExpr 0x12f80a150 <col:10> 'int' lvalue Var 0x12e942768 'res' 'int'
