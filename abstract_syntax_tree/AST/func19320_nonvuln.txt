TranslationUnitDecl 0x151855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1518564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x151855bd0 '__int128'
|-TypedefDecl 0x151856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x151855bf0 'unsigned __int128'
|-TypedefDecl 0x151926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x151926000 'struct __NSConstantString_tag'
|   `-Record 0x151856580 '__NSConstantString_tag'
|-TypedefDecl 0x151926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x151855d90 '__SVInt8_t'
|-TypedefDecl 0x151926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x151855db0 '__SVInt16_t'
|-TypedefDecl 0x151926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x151855dd0 '__SVInt32_t'
|-TypedefDecl 0x1519263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x151855df0 '__SVInt64_t'
|-TypedefDecl 0x151926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x151855e10 '__SVUint8_t'
|-TypedefDecl 0x1519264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x151855e30 '__SVUint16_t'
|-TypedefDecl 0x151926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x151855e50 '__SVUint32_t'
|-TypedefDecl 0x151926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x151855e70 '__SVUint64_t'
|-TypedefDecl 0x1519265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x151855e90 '__SVFloat16_t'
|-TypedefDecl 0x151926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x151855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1519266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x151855ed0 '__SVFloat64_t'
|-TypedefDecl 0x151926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x151855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x151926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x151855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1519267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x151855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x151926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x151855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1519268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x151855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x151926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x151855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x151926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x151855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1519269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x151855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x151926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x151855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x151926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x151856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x151926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x151856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x151926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x151856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x151926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x151856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x151926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x151856090 '__clang_svint8x3_t'
|-TypedefDecl 0x151926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1518560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x151926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1518560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x151926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1518560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x151926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x151856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x151926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x151856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x151926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x151856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x151926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x151856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x151926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x151856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x151927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1518561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x151927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1518561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1519278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1518561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x151927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x151856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1519279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x151856230 '__clang_svint16x4_t'
|-TypedefDecl 0x151927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x151856250 '__clang_svint32x4_t'
|-TypedefDecl 0x151927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x151856270 '__clang_svint64x4_t'
|-TypedefDecl 0x151927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x151856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x151927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1518562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x151927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1518562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x151927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1518562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x151927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x151856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x151927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x151856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x151927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x151856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x151927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x151856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x151927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x151856390 '__SVBool_t'
|-TypedefDecl 0x151927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1518563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x151927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1518563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x151927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1518563f0 '__SVCount_t'
|-TypedefDecl 0x151927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x151927fb0 'char *'
|   `-BuiltinType 0x1518556b0 'char'
|-TypedefDecl 0x151928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x151927fb0 'char *'
|   `-BuiltinType 0x1518556b0 'char'
`-FunctionDecl 0x151928288 <dataset_diviso_filec/func19320_nonvuln.c:1:1, line:30:1> line:1:1 invalid f_stridx 'int (int *, int *)'
  |-ParmVarDecl 0x151928128 <col:10, col:20> col:20 invalid argvars 'int *'
  |-ParmVarDecl 0x1519281a8 <col:29, col:39> col:39 referenced invalid rettv 'int *'
  `-CompoundStmt 0x152009ed8 <line:2:1, line:30:1>
    |-DeclStmt 0x1519283d0 <line:3:5, col:26>
    | `-VarDecl 0x151928368 <col:5, col:12> col:12 invalid buf 'char'
    |-DeclStmt 0x151928468 <line:4:5, col:19>
    | `-VarDecl 0x151928400 <col:5, col:13> col:13 used needle 'char *'
    |-DeclStmt 0x151928500 <line:5:5, col:21>
    | `-VarDecl 0x151928498 <col:5, col:13> col:13 used haystack 'char *'
    |-DeclStmt 0x151928598 <line:6:5, col:26>
    | `-VarDecl 0x151928530 <col:5, col:13> col:13 used save_haystack 'char *'
    |-DeclStmt 0x151928630 <line:7:5, col:16>
    | `-VarDecl 0x1519285c8 <col:5, col:13> col:13 used pos 'char *'
    |-DeclStmt 0x1519286c8 <line:8:5, col:19>
    | `-VarDecl 0x151928660 <col:5, col:10> col:10 used start_idx 'int'
    |-BinaryOperator 0x151941990 <line:10:5, col:43> 'char *' contains-errors '='
    | |-DeclRefExpr 0x1519286e0 <col:5> 'char *' lvalue Var 0x151928400 'needle' 'char *'
    | `-CallExpr 0x151941968 <col:14, col:43> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1519418b8 <col:14> 'int ()' Function 0x151941800 'tv_get_string_chk' 'int ()'
    |   `-UnaryOperator 0x151941950 <col:32, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-ArraySubscriptExpr 0x151941930 <col:33, col:42> '<dependent type>' contains-errors lvalue
    |       |-ImplicitCastExpr 0x151941918 <col:33> '<dependent type>' contains-errors <LValueToRValue>
    |       | `-RecoveryExpr 0x1519418d8 <col:33> '<dependent type>' contains-errors lvalue
    |       `-IntegerLiteral 0x1519418f8 <col:41> 'int' 1
    |-BinaryOperator 0x151941bf0 <line:11:5, col:70> 'char *' contains-errors '='
    | |-DeclRefExpr 0x1519419b0 <col:5> 'char *' lvalue Var 0x151928530 'save_haystack' 'char *'
    | `-BinaryOperator 0x151941bd0 <col:21, col:70> 'char *' contains-errors '='
    |   |-DeclRefExpr 0x1519419d0 <col:21> 'char *' lvalue Var 0x151928498 'haystack' 'char *'
    |   `-CallExpr 0x151941ba0 <col:32, col:70> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x151941ad0 <col:32> 'int ()' Function 0x151941a18 'tv_get_string_buf_chk' 'int ()'
    |     |-UnaryOperator 0x151941b68 <col:54, col:64> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     | `-ArraySubscriptExpr 0x151941b48 <col:55, col:64> '<dependent type>' contains-errors lvalue
    |     |   |-ImplicitCastExpr 0x151941b30 <col:55> '<dependent type>' contains-errors <LValueToRValue>
    |     |   | `-RecoveryExpr 0x151941af0 <col:55> '<dependent type>' contains-errors lvalue
    |     |   `-IntegerLiteral 0x151941b10 <col:63> 'int' 0
    |     `-RecoveryExpr 0x151941b80 <col:67> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x151941d20 <line:12:5, col:29> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x151941ca0 <col:5, col:17> '<dependent type>' contains-errors lvalue .v_number
    | | `-CXXDependentScopeMemberExpr 0x151941c58 <col:5, col:12> '<dependent type>' contains-errors lvalue ->vval
    | |   `-RecoveryExpr 0x151941c30 <col:5> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x151941c10 <col:5> 'int *' lvalue ParmVar 0x1519281a8 'rettv' 'int *'
    | `-UnaryOperator 0x151941d08 <col:28, col:29> 'int' prefix '-'
    |   `-IntegerLiteral 0x151941ce8 <col:29> 'int' 1
    |-IfStmt 0x151941ec0 <line:13:5, line:14:2>
    | |-BinaryOperator 0x151941e90 <line:13:9, col:39> 'int' contains-errors '||'
    | | |-BinaryOperator 0x151941e30 <col:9, col:19> 'int' contains-errors '=='
    | | | |-DeclRefExpr 0x151941d40 <col:9> 'char *' lvalue Var 0x151928400 'needle' 'char *'
    | | | `-RecoveryExpr 0x151941e10 <col:19> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x151941e70 <col:27, col:39> 'int' contains-errors '=='
    | |   |-DeclRefExpr 0x151941d98 <col:27> 'char *' lvalue Var 0x151928498 'haystack' 'char *'
    | |   `-RecoveryExpr 0x151941e50 <col:39> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x151941eb0 <line:14:2>
    `-IfStmt 0x152009c80 <line:16:5, line:25:5>
      |-BinaryOperator 0x1519420f8 <line:16:9, col:30> 'int' contains-errors '!='
      | |-CXXDependentScopeMemberExpr 0x151942090 <col:9, col:20> '<dependent type>' contains-errors lvalue .v_type
      | | `-ArraySubscriptExpr 0x151942070 <col:9, col:18> '<dependent type>' contains-errors lvalue
      | |   |-ImplicitCastExpr 0x151942058 <col:9> '<dependent type>' contains-errors <LValueToRValue>
      | |   | `-RecoveryExpr 0x151941ee0 <col:9> '<dependent type>' contains-errors lvalue
      | |   `-IntegerLiteral 0x151941f00 <col:17> 'int' 2
      | `-RecoveryExpr 0x1519420d8 <col:30> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x152009c50 <line:17:5, line:25:5>
        |-DeclStmt 0x1519421d0 <line:18:2, col:23>
        | `-VarDecl 0x151942130 <col:2, col:18> col:10 used error 'int' cinit
        |   `-RecoveryExpr 0x1519421b0 <col:18> '<dependent type>' contains-errors lvalue
        |-BinaryOperator 0x151942440 <line:20:2, col:56> 'int' contains-errors '='
        | |-DeclRefExpr 0x1519421e8 <col:2> 'int' lvalue Var 0x151928660 'start_idx' 'int'
        | `-CStyleCastExpr 0x151942418 <col:14, col:56> 'int' contains-errors <Dependent>
        |   `-CallExpr 0x1519423d0 <col:19, col:56> '<dependent type>' contains-errors
        |     |-DeclRefExpr 0x1519422e8 <col:19> 'int ()' Function 0x151942230 'tv_get_number_chk' 'int ()'
        |     |-UnaryOperator 0x151942380 <col:37, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow
        |     | `-ArraySubscriptExpr 0x151942360 <col:38, col:47> '<dependent type>' contains-errors lvalue
        |     |   |-ImplicitCastExpr 0x151942348 <col:38> '<dependent type>' contains-errors <LValueToRValue>
        |     |   | `-RecoveryExpr 0x151942308 <col:38> '<dependent type>' contains-errors lvalue
        |     |   `-IntegerLiteral 0x151942328 <col:46> 'int' 2
        |     `-UnaryOperator 0x1519423b8 <col:50, col:51> 'int *' contains-errors prefix '&' cannot overflow
        |       `-DeclRefExpr 0x151942398 <col:51> 'int' contains-errors lvalue Var 0x151942130 'error' 'int'
        |-IfStmt 0x151942708 <line:21:2, line:22:6>
        | |-BinaryOperator 0x1519426d8 <line:21:6, col:48> 'int' contains-errors '||'
        | | |-ImplicitCastExpr 0x1519426c0 <col:6> 'int' contains-errors <LValueToRValue>
        | | | `-DeclRefExpr 0x151942460 <col:6> 'int' contains-errors lvalue Var 0x151942130 'error' 'int'
        | | `-BinaryOperator 0x1519426a0 <col:15, col:48> 'int' '>='
        | |   |-ImplicitCastExpr 0x151942688 <col:15> 'int' <LValueToRValue>
        | |   | `-DeclRefExpr 0x151942480 <col:15> 'int' lvalue Var 0x151928660 'start_idx' 'int'
        | |   `-CStyleCastExpr 0x151942660 <col:28, col:48> 'int' <NoOp>
        | |     `-CallExpr 0x151942608 <col:33, col:48> 'int'
        | |       |-ImplicitCastExpr 0x1519425f0 <col:33> 'int (*)()' <FunctionToPointerDecay>
        | |       | `-DeclRefExpr 0x151942580 <col:33> 'int ()' Function 0x1519424c8 'STRLEN' 'int ()'
        | |       `-ImplicitCastExpr 0x151942630 <col:40> 'char *' <LValueToRValue>
        | |         `-DeclRefExpr 0x1519425a0 <col:40> 'char *' lvalue Var 0x151928498 'haystack' 'char *'
        | `-ReturnStmt 0x1519426f8 <line:22:6>
        `-IfStmt 0x152009c30 <line:23:2, line:24:18>
          |-BinaryOperator 0x151942780 <line:23:6, col:19> 'int' '>='
          | |-ImplicitCastExpr 0x151942768 <col:6> 'int' <LValueToRValue>
          | | `-DeclRefExpr 0x151942728 <col:6> 'int' lvalue Var 0x151928660 'start_idx' 'int'
          | `-IntegerLiteral 0x151942748 <col:19> 'int' 0
          `-CompoundAssignOperator 0x152009c00 <line:24:6, col:18> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
            |-DeclRefExpr 0x1519427a0 <col:6> 'char *' lvalue Var 0x151928498 'haystack' 'char *'
            `-ImplicitCastExpr 0x1519427e0 <col:18> 'int' <LValueToRValue>
              `-DeclRefExpr 0x1519427c0 <col:18> 'int' lvalue Var 0x151928660 'start_idx' 'int'
