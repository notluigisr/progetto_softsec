TranslationUnitDecl 0x152055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1520564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x152055bd0 '__int128'
|-TypedefDecl 0x152056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x152055bf0 'unsigned __int128'
|-TypedefDecl 0x152126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x152126000 'struct __NSConstantString_tag'
|   `-Record 0x152056580 '__NSConstantString_tag'
|-TypedefDecl 0x152126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x152055d90 '__SVInt8_t'
|-TypedefDecl 0x152126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x152055db0 '__SVInt16_t'
|-TypedefDecl 0x152126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x152055dd0 '__SVInt32_t'
|-TypedefDecl 0x1521263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x152055df0 '__SVInt64_t'
|-TypedefDecl 0x152126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x152055e10 '__SVUint8_t'
|-TypedefDecl 0x1521264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x152055e30 '__SVUint16_t'
|-TypedefDecl 0x152126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x152055e50 '__SVUint32_t'
|-TypedefDecl 0x152126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x152055e70 '__SVUint64_t'
|-TypedefDecl 0x1521265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x152055e90 '__SVFloat16_t'
|-TypedefDecl 0x152126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x152055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1521266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x152055ed0 '__SVFloat64_t'
|-TypedefDecl 0x152126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x152055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x152126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x152055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1521267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x152055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x152126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x152055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1521268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x152055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x152126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x152055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x152126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x152055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1521269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x152055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x152126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x152055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x152126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x152056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x152126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x152056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x152126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x152056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x152126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x152056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x152126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x152056090 '__clang_svint8x3_t'
|-TypedefDecl 0x152126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1520560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x152126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1520560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x152126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1520560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x152126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x152056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x152126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x152056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x152126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x152056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x152126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x152056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x152126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x152056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x152127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1520561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x152127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1520561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1521278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1520561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x152127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x152056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1521279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x152056230 '__clang_svint16x4_t'
|-TypedefDecl 0x152127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x152056250 '__clang_svint32x4_t'
|-TypedefDecl 0x152127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x152056270 '__clang_svint64x4_t'
|-TypedefDecl 0x152127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x152056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x152127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1520562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x152127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1520562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x152127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1520562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x152127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x152056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x152127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x152056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x152127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x152056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x152127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x152056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x152127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x152056390 '__SVBool_t'
|-TypedefDecl 0x152127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1520563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x152127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1520563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x152127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1520563f0 '__SVCount_t'
|-TypedefDecl 0x152127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x152127fb0 'char *'
|   `-BuiltinType 0x1520556b0 'char'
|-TypedefDecl 0x152128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x152127fb0 'char *'
|   `-BuiltinType 0x1520556b0 'char'
|-FunctionDecl 0x152128288 <dataset_diviso_filec/func24479_vuln.c:1:1, line:46:1> line:1:1 invalid bit_catenate 'int (int *, int *)'
| |-ParmVarDecl 0x152128128 <col:14, col:22> col:22 invalid arg1 'int *'
| |-ParmVarDecl 0x1521281a8 <col:28, col:36> col:36 invalid arg2 'int *'
| `-CompoundStmt 0x152143f60 <line:2:1, line:46:1>
|   |-DeclStmt 0x152128608 <line:4:2, line:8:14>
|   | |-VarDecl 0x152128370 <line:4:2, col:8> col:8 used bitlen1 'int'
|   | |-VarDecl 0x1521283f0 <col:2, line:5:5> col:5 used bitlen2 'int'
|   | |-VarDecl 0x152128470 <line:4:2, line:6:5> col:5 used bytelen 'int'
|   | |-VarDecl 0x1521284f0 <line:4:2, line:7:5> col:5 used bit1pad 'int'
|   | `-VarDecl 0x152128570 <line:4:2, line:8:5> col:5 used bit2shift 'int'
|   |-BinaryOperator 0x152141868 <line:12:2, col:26> 'int' contains-errors '='
|   | |-DeclRefExpr 0x152128680 <col:2> 'int' lvalue Var 0x152128370 'bitlen1' 'int'
|   | `-CallExpr 0x152141840 <col:12, col:26> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x152141800 <col:12> 'int ()' Function 0x152128748 'VARBITLEN' 'int ()'
|   |   `-RecoveryExpr 0x152141820 <col:22> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x152141910 <line:13:2, col:26> 'int' contains-errors '='
|   | |-DeclRefExpr 0x152141888 <col:2> 'int' lvalue Var 0x1521283f0 'bitlen2' 'int'
|   | `-CallExpr 0x1521418e8 <col:12, col:26> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x1521418a8 <col:12> 'int ()' Function 0x152128748 'VARBITLEN' 'int ()'
|   |   `-RecoveryExpr 0x1521418c8 <col:22> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x152141b50 <line:15:2, col:44> 'int' '='
|   | |-DeclRefExpr 0x152141930 <col:2> 'int' lvalue Var 0x152128470 'bytelen' 'int'
|   | `-CallExpr 0x152141b28 <col:12, col:44> 'int'
|   |   |-ImplicitCastExpr 0x152141b10 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x152141a30 <col:12> 'int ()' Function 0x152141978 'VARBITTOTALLEN' 'int ()'
|   |   `-BinaryOperator 0x152141ac0 <col:27, col:37> 'int' '+'
|   |     |-ImplicitCastExpr 0x152141a90 <col:27> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x152141a50 <col:27> 'int' lvalue Var 0x152128370 'bitlen1' 'int'
|   |     `-ImplicitCastExpr 0x152141aa8 <col:37> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x152141a70 <col:37> 'int' lvalue Var 0x1521283f0 'bitlen2' 'int'
|   |-CallExpr 0x152141d10 <line:18:2, col:29> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x152141c68 <col:2> 'int ()' Function 0x152141bb0 'SET_VARSIZE' 'int ()'
|   | |-RecoveryExpr 0x152141cf0 <col:14> '<dependent type>' contains-errors lvalue
|   | `-DeclRefExpr 0x152141ca0 <col:22> 'int' lvalue Var 0x152128470 'bytelen' 'int'
|   |-BinaryOperator 0x152141ee8 <line:19:2, col:32> '<dependent type>' contains-errors '='
|   | |-CallExpr 0x152141e70 <col:2, col:18> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x152141d40 <col:2> 'int ()' Function 0x152128748 'VARBITLEN' 'int ()'
|   | | `-RecoveryExpr 0x152141e50 <col:12> '<dependent type>' contains-errors lvalue
|   | `-BinaryOperator 0x152141ec8 <col:22, col:32> 'int' '+'
|   |   |-ImplicitCastExpr 0x152141e98 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x152141da0 <col:22> 'int' lvalue Var 0x152128370 'bitlen1' 'int'
|   |   `-ImplicitCastExpr 0x152141eb0 <col:32> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x152141dc0 <col:32> 'int' lvalue Var 0x1521283f0 'bitlen2' 'int'
|   |-CallExpr 0x1521437a0 <line:22:2, col:58> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x152142600 <col:2> 'void *(void *, const void *, unsigned long)' Function 0x1521423b0 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | |-CallExpr 0x152143778 <col:9, col:23> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x152142700 <col:9> 'int ()' Function 0x152142648 'VARBITS' 'int ()'
|   | | `-RecoveryExpr 0x152143758 <col:17> '<dependent type>' contains-errors lvalue
|   | |-CallExpr 0x1521427a0 <col:26, col:38> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x152142760 <col:26> 'int ()' Function 0x152142648 'VARBITS' 'int ()'
|   | | `-RecoveryExpr 0x152142780 <col:34> '<dependent type>' contains-errors lvalue
|   | `-CallExpr 0x1521436f8 <col:41, col:57> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x1521436b8 <col:41> 'int ()' Function 0x152143600 'VARBITBYTES' 'int ()'
|   |   `-RecoveryExpr 0x1521436d8 <col:53> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x152143940 <line:25:2, col:26> 'int' contains-errors '='
|   | |-DeclRefExpr 0x1521437d8 <col:2> 'int' lvalue Var 0x1521284f0 'bit1pad' 'int'
|   | `-CallExpr 0x152143918 <col:12, col:26> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x1521438d8 <col:12> 'int ()' Function 0x152143820 'VARBITPAD' 'int ()'
|   |   `-RecoveryExpr 0x1521438f8 <col:22> '<dependent type>' contains-errors lvalue
|   `-IfStmt 0x152143f30 <line:26:2, line:43:2> has_else
|     |-BinaryOperator 0x1521439b8 <line:26:6, col:17> 'int' '=='
|     | |-ImplicitCastExpr 0x1521439a0 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x152143960 <col:6> 'int' lvalue Var 0x1521284f0 'bit1pad' 'int'
|     | `-IntegerLiteral 0x152143980 <col:17> 'int' 0
|     |-CompoundStmt 0x152143b50 <line:27:2, line:30:2>
|     `-IfStmt 0x152143f10 <line:31:7, line:43:2>
|       |-BinaryOperator 0x152143bb8 <line:31:11, col:21> 'int' '>'
|       | |-ImplicitCastExpr 0x152143ba0 <col:11> 'int' <LValueToRValue>
|       | | `-DeclRefExpr 0x152143b60 <col:11> 'int' lvalue Var 0x1521283f0 'bitlen2' 'int'
|       | `-IntegerLiteral 0x152143b80 <col:21> 'int' 0
|       `-CompoundStmt 0x152143f00 <line:32:2, line:43:2>
`-FunctionDecl 0x1521423b0 <line:22:2> col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x1521424b0 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x152142518 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x152142580 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x152142458 <<invalid sloc>> Implicit 882
