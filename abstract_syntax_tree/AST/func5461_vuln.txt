TranslationUnitDecl 0x141055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1410564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x141055bd0 '__int128'
|-TypedefDecl 0x141056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x141055bf0 'unsigned __int128'
|-TypedefDecl 0x14180be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14180bc00 'struct __NSConstantString_tag'
|   `-Record 0x141056580 '__NSConstantString_tag'
|-TypedefDecl 0x14180be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x141055d90 '__SVInt8_t'
|-TypedefDecl 0x14180bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x141055db0 '__SVInt16_t'
|-TypedefDecl 0x14180bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x141055dd0 '__SVInt32_t'
|-TypedefDecl 0x14180bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x141055df0 '__SVInt64_t'
|-TypedefDecl 0x14180c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x141055e10 '__SVUint8_t'
|-TypedefDecl 0x14180c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x141055e30 '__SVUint16_t'
|-TypedefDecl 0x14180c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x141055e50 '__SVUint32_t'
|-TypedefDecl 0x14180c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x141055e70 '__SVUint64_t'
|-TypedefDecl 0x14180c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x141055e90 '__SVFloat16_t'
|-TypedefDecl 0x14180c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x141055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14180c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x141055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14180c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x141055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14180c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x141055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14180c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x141055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14180c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x141055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14180c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x141055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14180c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x141055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14180c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x141055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14180c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x141055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14180c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x141055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14180c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x141056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14180c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x141056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14180c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x141056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14180c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x141056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14180c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x141056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14180c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1410560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14180c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1410560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14180c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1410560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14180c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x141056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14180ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x141056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14180cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x141056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14180cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x141056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14180cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x141056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14180d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1410561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14180d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1410561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14180d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1410561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14180d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x141056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14180d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x141056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14180d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x141056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14180d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x141056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14180d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x141056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14180d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1410562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14180d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1410562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14180d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1410562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14180d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x141056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14180d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x141056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14180d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x141056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14180d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x141056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14180da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x141056390 '__SVBool_t'
|-TypedefDecl 0x14180da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1410563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14180dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1410563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14180db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1410563f0 '__SVCount_t'
|-TypedefDecl 0x14180dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14180dbb0 'char *'
|   `-BuiltinType 0x1410556b0 'char'
|-TypedefDecl 0x14180dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14180dbb0 'char *'
|   `-BuiltinType 0x1410556b0 'char'
`-FunctionDecl 0x14180dfa8 <dataset_diviso_filec/func5461_vuln.c:1:1, line:54:1> line:1:1 invalid _asn1_extract_der_octet 'int (int, const unsigned char *, int, unsigned int)'
  |-ParmVarDecl 0x14180dcf0 <col:26, col:36> col:36 invalid node 'int'
  |-ParmVarDecl 0x14180dda8 <col:42, col:63> col:63 used der 'const unsigned char *'
  |-ParmVarDecl 0x14180de28 <line:2:5, col:9> col:9 used der_len 'int'
  |-ParmVarDecl 0x14180dea8 <col:18, col:27> col:27 used flags 'unsigned int'
  `-CompoundStmt 0x141829b78 <line:3:1, line:54:1>
    |-DeclStmt 0x14180e188 <line:4:3, col:17>
    | |-VarDecl 0x14180e088 <col:3, col:7> col:7 used len2 'int'
    | `-VarDecl 0x14180e108 <col:3, col:13> col:13 used len3 'int'
    |-DeclStmt 0x14180e2b8 <line:5:3, col:27>
    | |-VarDecl 0x14180e1b8 <col:3, col:7> col:7 used counter 'int'
    | `-VarDecl 0x14180e238 <col:3, col:16> col:16 used counter_end 'int'
    |-DeclStmt 0x14180e350 <line:6:3, col:13>
    | `-VarDecl 0x14180e2e8 <col:3, col:7> col:7 used result 'int'
    |-BinaryOperator 0x141827660 <line:8:3, col:50> 'int' '='
    | |-DeclRefExpr 0x14180e368 <col:3> 'int' lvalue Var 0x14180e088 'len2' 'int'
    | `-CallExpr 0x1418275f8 <col:10, col:50> 'int'
    |   |-ImplicitCastExpr 0x1418275e0 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x1418274e0 <col:10> 'int ()' Function 0x141827428 'asn1_get_length_der' 'int ()'
    |   |-ImplicitCastExpr 0x141827630 <col:31> 'const unsigned char *' <LValueToRValue>
    |   | `-DeclRefExpr 0x141827500 <col:31> 'const unsigned char *' lvalue ParmVar 0x14180dda8 'der' 'const unsigned char *'
    |   |-ImplicitCastExpr 0x141827648 <col:36> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x141827520 <col:36> 'int' lvalue ParmVar 0x14180de28 'der_len' 'int'
    |   `-UnaryOperator 0x141827590 <col:45, col:46> 'int *' prefix '&' cannot overflow
    |     `-DeclRefExpr 0x141827540 <col:46> 'int' lvalue Var 0x14180e108 'len3' 'int'
    |-IfStmt 0x141827758 <line:9:3, line:10:12>
    | |-BinaryOperator 0x1418276f0 <line:9:7, col:15> 'int' '<'
    | | |-ImplicitCastExpr 0x1418276d8 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x141827680 <col:7> 'int' lvalue Var 0x14180e088 'len2' 'int'
    | | `-UnaryOperator 0x1418276c0 <col:14, col:15> 'int' prefix '-'
    | |   `-IntegerLiteral 0x1418276a0 <col:15> 'int' 1
    | `-ReturnStmt 0x141827748 <line:10:5, col:12>
    |   `-RecoveryExpr 0x141827728 <col:12> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x141827810 <line:12:3, col:20> 'int' '='
    | |-DeclRefExpr 0x141827778 <col:3> 'int' lvalue Var 0x14180e1b8 'counter' 'int'
    | `-BinaryOperator 0x1418277f0 <col:13, col:20> 'int' '+'
    |   |-ImplicitCastExpr 0x1418277d8 <col:13> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x141827798 <col:13> 'int' lvalue Var 0x14180e108 'len3' 'int'
    |   `-IntegerLiteral 0x1418277b8 <col:20> 'int' 1
    |-CallExpr 0x141827988 <line:13:3, col:25> 'int'
    | |-ImplicitCastExpr 0x141827970 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x141827910 <col:3> 'int ()' Function 0x141827858 'DECR_LEN' 'int ()'
    | |-ImplicitCastExpr 0x1418279b8 <col:12> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x141827930 <col:12> 'int' lvalue ParmVar 0x14180de28 'der_len' 'int'
    | `-ImplicitCastExpr 0x1418279d0 <col:21> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x141827950 <col:21> 'int' lvalue Var 0x14180e108 'len3' 'int'
    |-IfStmt 0x141827ba8 <line:15:3, line:18:19> has_else
    | |-BinaryOperator 0x141827a58 <line:15:7, col:16> 'int' '=='
    | | |-ImplicitCastExpr 0x141827a40 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1418279e8 <col:7> 'int' lvalue Var 0x14180e088 'len2' 'int'
    | | `-UnaryOperator 0x141827a28 <col:15, col:16> 'int' prefix '-'
    | |   `-IntegerLiteral 0x141827a08 <col:16> 'int' 1
    | |-BinaryOperator 0x141827b10 <line:16:5, col:29> 'int' '='
    | | |-DeclRefExpr 0x141827a78 <col:5> 'int' lvalue Var 0x14180e238 'counter_end' 'int'
    | | `-BinaryOperator 0x141827af0 <col:19, col:29> 'int' '-'
    | |   |-ImplicitCastExpr 0x141827ad8 <col:19> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x141827a98 <col:19> 'int' lvalue ParmVar 0x14180de28 'der_len' 'int'
    | |   `-IntegerLiteral 0x141827ab8 <col:29> 'int' 2
    | `-BinaryOperator 0x141827b88 <line:18:5, col:19> 'int' '='
    |   |-DeclRefExpr 0x141827b30 <col:5> 'int' lvalue Var 0x14180e238 'counter_end' 'int'
    |   `-ImplicitCastExpr 0x141827b70 <col:19> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x141827b50 <col:19> 'int' lvalue ParmVar 0x14180de28 'der_len' 'int'
    |-WhileStmt 0x141829a58 <line:20:3, line:48:5>
    | |-BinaryOperator 0x141827c48 <line:20:10, col:20> 'int' '<'
    | | |-ImplicitCastExpr 0x141827c18 <col:10> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x141827bd8 <col:10> 'int' lvalue Var 0x14180e1b8 'counter' 'int'
    | | `-ImplicitCastExpr 0x141827c30 <col:20> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x141827bf8 <col:20> 'int' lvalue Var 0x14180e238 'counter_end' 'int'
    | `-CompoundStmt 0x141829a20 <line:21:5, line:48:5>
    |   |-CallExpr 0x141827ce0 <line:22:7, col:26> 'int'
    |   | |-ImplicitCastExpr 0x141827cc8 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x141827c68 <col:7> 'int ()' Function 0x141827858 'DECR_LEN' 'int ()'
    |   | |-ImplicitCastExpr 0x141827d10 <col:16> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x141827c88 <col:16> 'int' lvalue ParmVar 0x14180de28 'der_len' 'int'
    |   | `-IntegerLiteral 0x141827ca8 <col:25> 'int' 1
    |   |-BinaryOperator 0x141827eb8 <line:23:7, col:64> 'int' '='
    |   | |-DeclRefExpr 0x141827d28 <col:7> 'int' lvalue Var 0x14180e088 'len2' 'int'
    |   | `-CallExpr 0x141827e68 <col:14, col:64> 'int'
    |   |   |-ImplicitCastExpr 0x141827e50 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x141827d48 <col:14> 'int ()' Function 0x141827428 'asn1_get_length_der' 'int ()'
    |   |   |-BinaryOperator 0x141827dd8 <col:35, col:41> 'const unsigned char *' '+'
    |   |   | |-ImplicitCastExpr 0x141827da8 <col:35> 'const unsigned char *' <LValueToRValue>
    |   |   | | `-DeclRefExpr 0x141827d68 <col:35> 'const unsigned char *' lvalue ParmVar 0x14180dda8 'der' 'const unsigned char *'
    |   |   | `-ImplicitCastExpr 0x141827dc0 <col:41> 'int' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x141827d88 <col:41> 'int' lvalue Var 0x14180e1b8 'counter' 'int'
    |   |   |-ImplicitCastExpr 0x141827ea0 <col:50> 'int' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x141827df8 <col:50> 'int' lvalue ParmVar 0x14180de28 'der_len' 'int'
    |   |   `-UnaryOperator 0x141827e38 <col:59, col:60> 'int *' prefix '&' cannot overflow
    |   |     `-DeclRefExpr 0x141827e18 <col:60> 'int' lvalue Var 0x14180e108 'len3' 'int'
    |   |-IfStmt 0x141828230 <line:25:7, line:29:2>
    |   | |-CallExpr 0x141828030 <line:25:11, col:29> 'int'
    |   | | |-ImplicitCastExpr 0x141828018 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |   | | | `-DeclRefExpr 0x141827fb8 <col:11> 'int ()' Function 0x141827f00 'IS_ERR' 'int ()'
    |   | | |-ImplicitCastExpr 0x141828060 <col:18> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x141827fd8 <col:18> 'int' lvalue Var 0x14180e088 'len2' 'int'
    |   | | `-ImplicitCastExpr 0x141828078 <col:24> 'unsigned int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x141827ff8 <col:24> 'unsigned int' lvalue ParmVar 0x14180dea8 'flags' 'unsigned int'
    |   | `-CompoundStmt 0x141828210 <line:26:2, line:29:2>
    |   |   |-CallExpr 0x1418281a8 <line:27:4, col:9> 'int'
    |   |   | `-ImplicitCastExpr 0x141828190 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |   |   |   `-DeclRefExpr 0x141828170 <col:4> 'int ()' Function 0x1418280b8 'warn' 'int ()'
    |   |   `-ReturnStmt 0x141828200 <line:28:4, col:11>
    |   |     `-RecoveryExpr 0x1418281e0 <col:11> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x1418298d0 <line:31:7, line:45:2> has_else
    |   | |-BinaryOperator 0x1418282a8 <line:31:11, col:19> 'int' '>='
    |   | | |-ImplicitCastExpr 0x141828290 <col:11> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x141828250 <col:11> 'int' lvalue Var 0x14180e088 'len2' 'int'
    |   | | `-IntegerLiteral 0x141828270 <col:19> 'int' 0
    |   | |-CompoundStmt 0x141829460 <line:32:2, line:35:2>
    |   | | |-CallExpr 0x1418283b0 <line:33:4, col:31> 'int'
    |   | | | |-ImplicitCastExpr 0x141828398 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |   | | | | `-DeclRefExpr 0x1418282c8 <col:4> 'int ()' Function 0x141827858 'DECR_LEN' 'int ()'
    |   | | | |-ImplicitCastExpr 0x1418283e0 <col:13> 'int' <LValueToRValue>
    |   | | | | `-DeclRefExpr 0x1418282e8 <col:13> 'int' lvalue ParmVar 0x14180de28 'der_len' 'int'
    |   | | | `-BinaryOperator 0x141828378 <col:22, col:27> 'int' '+'
    |   | | |   |-ImplicitCastExpr 0x141828348 <col:22> 'int' <LValueToRValue>
    |   | | |   | `-DeclRefExpr 0x141828308 <col:22> 'int' lvalue Var 0x14180e088 'len2' 'int'
    |   | | |   `-ImplicitCastExpr 0x141828360 <col:27> 'int' <LValueToRValue>
    |   | | |     `-DeclRefExpr 0x141828328 <col:27> 'int' lvalue Var 0x14180e108 'len3' 'int'
    |   | | `-CallExpr 0x141829428 <line:34:4, col:56> '<dependent type>' contains-errors
    |   | |   |-DeclRefExpr 0x1418292e0 <col:4> 'int ()' Function 0x141829228 '_asn1_append_value' 'int ()'
    |   | |   |-RecoveryExpr 0x141829300 <col:24> '<dependent type>' contains-errors lvalue
    |   | |   |-BinaryOperator 0x1418293e8 <col:30, col:46> 'const unsigned char *' '+'
    |   | |   | |-BinaryOperator 0x141829390 <col:30, col:36> 'const unsigned char *' '+'
    |   | |   | | |-ImplicitCastExpr 0x141829360 <col:30> 'const unsigned char *' <LValueToRValue>
    |   | |   | | | `-DeclRefExpr 0x141829320 <col:30> 'const unsigned char *' lvalue ParmVar 0x14180dda8 'der' 'const unsigned char *'
    |   | |   | | `-ImplicitCastExpr 0x141829378 <col:36> 'int' <LValueToRValue>
    |   | |   | |   `-DeclRefExpr 0x141829340 <col:36> 'int' lvalue Var 0x14180e1b8 'counter' 'int'
    |   | |   | `-ImplicitCastExpr 0x1418293d0 <col:46> 'int' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x1418293b0 <col:46> 'int' lvalue Var 0x14180e108 'len3' 'int'
    |   | |   `-DeclRefExpr 0x141829408 <col:52> 'int' lvalue Var 0x14180e088 'len2' 'int'
    |   | `-CompoundStmt 0x1418298a0 <line:37:2, line:45:2>
    |   |   |-CallExpr 0x1418294f8 <line:38:4, col:26> 'int'
    |   |   | |-ImplicitCastExpr 0x1418294e0 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | `-DeclRefExpr 0x141829480 <col:4> 'int ()' Function 0x141827858 'DECR_LEN' 'int ()'
    |   |   | |-ImplicitCastExpr 0x141829528 <col:13> 'int' <LValueToRValue>
    |   |   | | `-DeclRefExpr 0x1418294a0 <col:13> 'int' lvalue ParmVar 0x14180de28 'der_len' 'int'
    |   |   | `-ImplicitCastExpr 0x141829540 <col:22> 'int' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x1418294c0 <col:22> 'int' lvalue Var 0x14180e108 'len3' 'int'
    |   |   |-BinaryOperator 0x141829720 <line:39:4, line:41:24> 'int' contains-errors '='
    |   |   | |-DeclRefExpr 0x141829558 <line:39:4> 'int' lvalue Var 0x14180e2e8 'result' 'int'
    |   |   | `-CallExpr 0x1418296e0 <line:40:6, line:41:24> '<dependent type>' contains-errors
    |   |   |   |-RecoveryExpr 0x141829578 <line:40:6> '<dependent type>' contains-errors lvalue
    |   |   |   |-RecoveryExpr 0x141829598 <col:31> '<dependent type>' contains-errors lvalue
    |   |   |   |-BinaryOperator 0x141829680 <col:37, col:53> 'const unsigned char *' '+'
    |   |   |   | |-BinaryOperator 0x141829628 <col:37, col:43> 'const unsigned char *' '+'
    |   |   |   | | |-ImplicitCastExpr 0x1418295f8 <col:37> 'const unsigned char *' <LValueToRValue>
    |   |   |   | | | `-DeclRefExpr 0x1418295b8 <col:37> 'const unsigned char *' lvalue ParmVar 0x14180dda8 'der' 'const unsigned char *'
    |   |   |   | | `-ImplicitCastExpr 0x141829610 <col:43> 'int' <LValueToRValue>
    |   |   |   | |   `-DeclRefExpr 0x1418295d8 <col:43> 'int' lvalue Var 0x14180e1b8 'counter' 'int'
    |   |   |   | `-ImplicitCastExpr 0x141829668 <col:53> 'int' <LValueToRValue>
    |   |   |   |   `-DeclRefExpr 0x141829648 <col:53> 'int' lvalue Var 0x14180e108 'len3' 'int'
    |   |   |   |-DeclRefExpr 0x1418296a0 <line:41:10> 'int' lvalue ParmVar 0x14180de28 'der_len' 'int'
    |   |   |   `-DeclRefExpr 0x1418296c0 <col:19> 'unsigned int' lvalue ParmVar 0x14180dea8 'flags' 'unsigned int'
    |   |   |-IfStmt 0x141829820 <line:42:4, line:43:13>
    |   |   | |-BinaryOperator 0x1418297b8 <line:42:8, col:18> 'int' contains-errors '!='
    |   |   | | |-DeclRefExpr 0x141829740 <col:8> 'int' lvalue Var 0x14180e2e8 'result' 'int'
    |   |   | | `-RecoveryExpr 0x141829798 <col:18> '<dependent type>' contains-errors lvalue
    |   |   | `-ReturnStmt 0x141829810 <line:43:6, col:13>
    |   |   |   `-ImplicitCastExpr 0x1418297f8 <col:13> 'int' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x1418297d8 <col:13> 'int' lvalue Var 0x14180e2e8 'result' 'int'
    |   |   `-BinaryOperator 0x141829880 <line:44:4, col:11> 'int' '='
    |   |     |-DeclRefExpr 0x141829840 <col:4> 'int' lvalue Var 0x14180e088 'len2' 'int'
    |   |     `-IntegerLiteral 0x141829860 <col:11> 'int' 0
    |   `-CompoundAssignOperator 0x1418299f0 <line:47:7, col:32> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |     |-DeclRefExpr 0x141829900 <col:7> 'int' lvalue Var 0x14180e1b8 'counter' 'int'
    |     `-BinaryOperator 0x1418299d0 <col:18, col:32> 'int' '+'
    |       |-BinaryOperator 0x141829990 <col:18, col:25> 'int' '+'
    |       | |-ImplicitCastExpr 0x141829960 <col:18> 'int' <LValueToRValue>
    |       | | `-DeclRefExpr 0x141829920 <col:18> 'int' lvalue Var 0x14180e088 'len2' 'int'
    |       | `-ImplicitCastExpr 0x141829978 <col:25> 'int' <LValueToRValue>
    |       |   `-DeclRefExpr 0x141829940 <col:25> 'int' lvalue Var 0x14180e108 'len3' 'int'
    |       `-IntegerLiteral 0x1418299b0 <col:32> 'int' 1
    |-ReturnStmt 0x141829ab0 <line:50:3, col:10>
    | `-RecoveryExpr 0x141829a90 <col:10> '<dependent type>' contains-errors lvalue
    `-LabelStmt 0x141829b58 <line:52:1, line:53:10> 'cleanup'
      `-ReturnStmt 0x141829af8 <col:3, col:10>
        `-ImplicitCastExpr 0x141829ae0 <col:10> 'int' <LValueToRValue>
          `-DeclRefExpr 0x141829ac0 <col:10> 'int' lvalue Var 0x14180e2e8 'result' 'int'
