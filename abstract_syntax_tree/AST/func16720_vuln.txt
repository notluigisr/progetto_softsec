TranslationUnitDecl 0x14c055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14c0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14c055bd0 '__int128'
|-TypedefDecl 0x14c056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14c055bf0 'unsigned __int128'
|-TypedefDecl 0x14c126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14c126000 'struct __NSConstantString_tag'
|   `-Record 0x14c056580 '__NSConstantString_tag'
|-TypedefDecl 0x14c126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14c055d90 '__SVInt8_t'
|-TypedefDecl 0x14c126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14c055db0 '__SVInt16_t'
|-TypedefDecl 0x14c126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14c055dd0 '__SVInt32_t'
|-TypedefDecl 0x14c1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14c055df0 '__SVInt64_t'
|-TypedefDecl 0x14c126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14c055e10 '__SVUint8_t'
|-TypedefDecl 0x14c1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14c055e30 '__SVUint16_t'
|-TypedefDecl 0x14c126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14c055e50 '__SVUint32_t'
|-TypedefDecl 0x14c126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14c055e70 '__SVUint64_t'
|-TypedefDecl 0x14c1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14c055e90 '__SVFloat16_t'
|-TypedefDecl 0x14c126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14c055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14c1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14c055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14c126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14c055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14c126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14c055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14c1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14c055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14c126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14c055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14c1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14c055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14c126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14c055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14c126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14c055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14c1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14c055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14c126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14c055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14c126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14c056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14c126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14c056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14c126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14c056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14c126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14c056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14c126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14c056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14c126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14c0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14c126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14c0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14c126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14c0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14c126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14c056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14c126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14c056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14c126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14c056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14c126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14c056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14c126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14c056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14c127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14c0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14c127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14c0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14c1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14c0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14c127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14c056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14c1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14c056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14c127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14c056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14c127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14c056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14c127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14c056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14c127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14c0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14c127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14c0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14c127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14c0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14c127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14c056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14c127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14c056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14c127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14c056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14c127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14c056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14c127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14c056390 '__SVBool_t'
|-TypedefDecl 0x14c127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14c0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14c127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14c0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14c127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14c0563f0 '__SVCount_t'
|-TypedefDecl 0x14c127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14c127fb0 'char *'
|   `-BuiltinType 0x14c0556b0 'char'
|-TypedefDecl 0x14c128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14c127fb0 'char *'
|   `-BuiltinType 0x14c0556b0 'char'
|-FunctionDecl 0x14c1281f0 <dataset_diviso_filec/func16720_vuln.c:1:1, line:39:1> line:1:13 invalid sycc444_to_rgb 'void (int *)' static
| |-ParmVarDecl 0x14c128128 <col:28, col:41> col:41 referenced invalid img 'int *'
| `-CompoundStmt 0x14c1450e8 <line:2:1, line:39:1>
|   |-DeclStmt 0x14c1285d8 <line:3:2, col:31>
|   | |-VarDecl 0x14c1282b8 <col:2, col:7> col:7 used d0 'int *'
|   | |-VarDecl 0x14c128338 <col:2, col:12> col:12 used d1 'int *'
|   | |-VarDecl 0x14c1283b8 <col:2, col:17> col:17 used d2 'int *'
|   | |-VarDecl 0x14c128438 <col:2, col:22> col:22 used r 'int *'
|   | |-VarDecl 0x14c1284b8 <col:2, col:26> col:26 used g 'int *'
|   | `-VarDecl 0x14c128538 <col:2, col:30> col:30 used b 'int *'
|   |-DeclStmt 0x14c128790 <line:4:2, col:24>
|   | |-VarDecl 0x14c128608 <col:2, col:13> col:13 used y 'const int *'
|   | |-VarDecl 0x14c128688 <col:2, col:17> col:17 used cb 'const int *'
|   | `-VarDecl 0x14c128708 <col:2, col:22> col:22 used cr 'const int *'
|   |-DeclStmt 0x14c141a10 <line:5:2, col:33>
|   | |-VarDecl 0x14c141800 <col:2, col:15> col:15 used maxw 'unsigned int'
|   | |-VarDecl 0x14c141880 <col:2, col:21> col:21 used maxh 'unsigned int'
|   | |-VarDecl 0x14c141900 <col:2, col:27> col:27 used max 'unsigned int'
|   | `-VarDecl 0x14c141980 <col:2, col:32> col:32 used i 'unsigned int'
|   |-DeclStmt 0x14c141b40 <line:6:2, col:17>
|   | |-VarDecl 0x14c141a40 <col:2, col:6> col:6 used offset 'int'
|   | `-VarDecl 0x14c141ac0 <col:2, col:14> col:14 used upb 'int'
|   |-BinaryOperator 0x14c141cc0 <line:8:2, col:27> 'int' contains-errors '='
|   | |-DeclRefExpr 0x14c141b58 <col:2> 'int' lvalue Var 0x14c141ac0 'upb' 'int'
|   | `-CStyleCastExpr 0x14c141c98 <col:8, col:27> 'int' contains-errors <Dependent>
|   |   `-CXXDependentScopeMemberExpr 0x14c141c38 <col:13, col:27> '<dependent type>' contains-errors lvalue .prec
|   |     `-ArraySubscriptExpr 0x14c141c18 <col:13, col:25> '<dependent type>' contains-errors lvalue
|   |       |-ImplicitCastExpr 0x14c141c00 <col:13, col:18> '<dependent type>' contains-errors <LValueToRValue>
|   |       | `-CXXDependentScopeMemberExpr 0x14c141b98 <col:13, col:18> '<dependent type>' contains-errors lvalue ->comps
|   |       |   `-RecoveryExpr 0x14c141b78 <col:13> '<dependent type>' contains-errors lvalue
|   |       `-IntegerLiteral 0x14c141be0 <col:24> 'int' 0
|   |-BinaryOperator 0x14c141dd8 <line:9:2, col:22> 'int' '='
|   | |-DeclRefExpr 0x14c141ce0 <col:2> 'int' lvalue Var 0x14c141a40 'offset' 'int'
|   | `-BinaryOperator 0x14c141db8 <col:11, col:22> 'int' '<<'
|   |   |-IntegerLiteral 0x14c141d00 <col:11> 'int' 1
|   |   `-ParenExpr 0x14c141d98 <col:14, col:22> 'int'
|   |     `-BinaryOperator 0x14c141d78 <col:15, col:21> 'int' '-'
|   |       |-ImplicitCastExpr 0x14c141d60 <col:15> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x14c141d20 <col:15> 'int' lvalue Var 0x14c141ac0 'upb' 'int'
|   |       `-IntegerLiteral 0x14c141d40 <col:21> 'int' 1
|   |-BinaryOperator 0x14c141ef0 <col:25, col:40> 'int' '='
|   | |-DeclRefExpr 0x14c141df8 <col:25> 'int' lvalue Var 0x14c141ac0 'upb' 'int'
|   | `-BinaryOperator 0x14c141ed0 <col:31, col:40> 'int' '-'
|   |   |-ParenExpr 0x14c141e90 <col:31, col:38> 'int'
|   |   | `-BinaryOperator 0x14c141e70 <col:32, col:35> 'int' '<<'
|   |   |   |-IntegerLiteral 0x14c141e18 <col:32> 'int' 1
|   |   |   `-ImplicitCastExpr 0x14c141e58 <col:35> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x14c141e38 <col:35> 'int' lvalue Var 0x14c141ac0 'upb' 'int'
|   |   `-IntegerLiteral 0x14c141eb0 <col:40> 'int' 1
|   |-BinaryOperator 0x14c142078 <line:11:2, col:37> 'unsigned int' contains-errors '='
|   | |-DeclRefExpr 0x14c141f10 <col:2> 'unsigned int' lvalue Var 0x14c141800 'maxw' 'unsigned int'
|   | `-CStyleCastExpr 0x14c142050 <col:9, col:37> 'unsigned int' contains-errors <Dependent>
|   |   `-CXXDependentScopeMemberExpr 0x14c141ff0 <col:23, col:37> '<dependent type>' contains-errors lvalue .w
|   |     `-ArraySubscriptExpr 0x14c141fd0 <col:23, col:35> '<dependent type>' contains-errors lvalue
|   |       |-ImplicitCastExpr 0x14c141fb8 <col:23, col:28> '<dependent type>' contains-errors <LValueToRValue>
|   |       | `-CXXDependentScopeMemberExpr 0x14c141f50 <col:23, col:28> '<dependent type>' contains-errors lvalue ->comps
|   |       |   `-RecoveryExpr 0x14c141f30 <col:23> '<dependent type>' contains-errors lvalue
|   |       `-IntegerLiteral 0x14c141f98 <col:34> 'int' 0
|   |-BinaryOperator 0x14c142200 <col:40, col:75> 'unsigned int' contains-errors '='
|   | |-DeclRefExpr 0x14c142098 <col:40> 'unsigned int' lvalue Var 0x14c141880 'maxh' 'unsigned int'
|   | `-CStyleCastExpr 0x14c1421d8 <col:47, col:75> 'unsigned int' contains-errors <Dependent>
|   |   `-CXXDependentScopeMemberExpr 0x14c142178 <col:61, col:75> '<dependent type>' contains-errors lvalue .h
|   |     `-ArraySubscriptExpr 0x14c142158 <col:61, col:73> '<dependent type>' contains-errors lvalue
|   |       |-ImplicitCastExpr 0x14c142140 <col:61, col:66> '<dependent type>' contains-errors <LValueToRValue>
|   |       | `-CXXDependentScopeMemberExpr 0x14c1420d8 <col:61, col:66> '<dependent type>' contains-errors lvalue ->comps
|   |       |   `-RecoveryExpr 0x14c1420b8 <col:61> '<dependent type>' contains-errors lvalue
|   |       `-IntegerLiteral 0x14c142120 <col:72> 'int' 0
|   |-BinaryOperator 0x14c1422d0 <line:12:2, col:15> 'unsigned int' '='
|   | |-DeclRefExpr 0x14c142220 <col:2> 'unsigned int' lvalue Var 0x14c141900 'max' 'unsigned int'
|   | `-BinaryOperator 0x14c1422b0 <col:8, col:15> 'unsigned int' '*'
|   |   |-ImplicitCastExpr 0x14c142280 <col:8> 'unsigned int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x14c142240 <col:8> 'unsigned int' lvalue Var 0x14c141800 'maxw' 'unsigned int'
|   |   `-ImplicitCastExpr 0x14c142298 <col:15> 'unsigned int' <LValueToRValue>
|   |     `-DeclRefExpr 0x14c142260 <col:15> 'unsigned int' lvalue Var 0x14c141880 'maxh' 'unsigned int'
|   |-BinaryOperator 0x14c142418 <line:14:2, col:20> 'const int *' contains-errors '='
|   | |-DeclRefExpr 0x14c1422f0 <col:2> 'const int *' lvalue Var 0x14c128608 'y' 'const int *'
|   | `-CXXDependentScopeMemberExpr 0x14c1423d0 <col:6, col:20> '<dependent type>' contains-errors lvalue .data
|   |   `-ArraySubscriptExpr 0x14c1423b0 <col:6, col:18> '<dependent type>' contains-errors lvalue
|   |     |-ImplicitCastExpr 0x14c142398 <col:6, col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |     | `-CXXDependentScopeMemberExpr 0x14c142330 <col:6, col:11> '<dependent type>' contains-errors lvalue ->comps
|   |     |   `-RecoveryExpr 0x14c142310 <col:6> '<dependent type>' contains-errors lvalue
|   |     `-IntegerLiteral 0x14c142378 <col:17> 'int' 0
|   |-BinaryOperator 0x14c142560 <line:15:2, col:21> 'const int *' contains-errors '='
|   | |-DeclRefExpr 0x14c142438 <col:2> 'const int *' lvalue Var 0x14c128688 'cb' 'const int *'
|   | `-CXXDependentScopeMemberExpr 0x14c142518 <col:7, col:21> '<dependent type>' contains-errors lvalue .data
|   |   `-ArraySubscriptExpr 0x14c1424f8 <col:7, col:19> '<dependent type>' contains-errors lvalue
|   |     |-ImplicitCastExpr 0x14c1424e0 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>
|   |     | `-CXXDependentScopeMemberExpr 0x14c142478 <col:7, col:12> '<dependent type>' contains-errors lvalue ->comps
|   |     |   `-RecoveryExpr 0x14c142458 <col:7> '<dependent type>' contains-errors lvalue
|   |     `-IntegerLiteral 0x14c1424c0 <col:18> 'int' 1
|   |-BinaryOperator 0x14c1426a8 <line:16:2, col:21> 'const int *' contains-errors '='
|   | |-DeclRefExpr 0x14c142580 <col:2> 'const int *' lvalue Var 0x14c128708 'cr' 'const int *'
|   | `-CXXDependentScopeMemberExpr 0x14c142660 <col:7, col:21> '<dependent type>' contains-errors lvalue .data
|   |   `-ArraySubscriptExpr 0x14c142640 <col:7, col:19> '<dependent type>' contains-errors lvalue
|   |     |-ImplicitCastExpr 0x14c142628 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>
|   |     | `-CXXDependentScopeMemberExpr 0x14c1425c0 <col:7, col:12> '<dependent type>' contains-errors lvalue ->comps
|   |     |   `-RecoveryExpr 0x14c1425a0 <col:7> '<dependent type>' contains-errors lvalue
|   |     `-IntegerLiteral 0x14c142608 <col:18> 'int' 2
|   |-IfStmt 0x14c144360 <line:22:2, col:47>
|   | |-BinaryOperator 0x14c1442d8 <col:5, col:36> 'int' contains-errors '||'
|   | | |-BinaryOperator 0x14c144278 <col:5, col:23> 'int' contains-errors '||'
|   | | | |-BinaryOperator 0x14c144218 <col:5, col:10> 'int' contains-errors '=='
|   | | | | |-DeclRefExpr 0x14c1440b0 <col:5> 'int *' lvalue Var 0x14c128438 'r' 'int *'
|   | | | | `-RecoveryExpr 0x14c1441f8 <col:10> '<dependent type>' contains-errors lvalue
|   | | | `-BinaryOperator 0x14c144258 <col:18, col:23> 'int' contains-errors '=='
|   | | |   |-DeclRefExpr 0x14c144108 <col:18> 'int *' lvalue Var 0x14c1284b8 'g' 'int *'
|   | | |   `-RecoveryExpr 0x14c144238 <col:23> '<dependent type>' contains-errors lvalue
|   | | `-BinaryOperator 0x14c1442b8 <col:31, col:36> 'int' contains-errors '=='
|   | |   |-DeclRefExpr 0x14c144180 <col:31> 'int *' lvalue Var 0x14c128538 'b' 'int *'
|   | |   `-RecoveryExpr 0x14c144298 <col:36> '<dependent type>' contains-errors lvalue
|   | `-GotoStmt 0x14c144348 <col:42, col:47> 'fails' 0x14c1442f8
|   |-ForStmt 0x14c1462b8 <line:24:2, line:28:2>
|   | |-BinaryOperator 0x14c1443c0 <line:24:6, col:10> 'unsigned int' '='
|   | | |-DeclRefExpr 0x14c144380 <col:6> 'unsigned int' lvalue Var 0x14c141980 'i' 'unsigned int'
|   | | `-IntegerLiteral 0x14c1443a0 <col:10> 'unsigned int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x14c144450 <col:14, col:18> 'int' '<'
|   | | |-ImplicitCastExpr 0x14c144420 <col:14> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x14c1443e0 <col:14> 'unsigned int' lvalue Var 0x14c141980 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x14c144438 <col:18> 'unsigned int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x14c144400 <col:18> 'unsigned int' lvalue Var 0x14c141900 'max' 'unsigned int'
|   | |-UnaryOperator 0x14c144490 <col:23, col:25> 'unsigned int' prefix '++'
|   | | `-DeclRefExpr 0x14c144470 <col:25> 'unsigned int' lvalue Var 0x14c141980 'i' 'unsigned int'
|   | `-CompoundStmt 0x14c146270 <line:25:2, line:28:2>
|   |   |-CallExpr 0x14c146000 <line:26:3, col:49> 'int'
|   |   | |-ImplicitCastExpr 0x14c1447e0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x14c144600 <col:3> 'int ()' Function 0x14c144548 'sycc_to_rgb' 'int ()'
|   |   | |-ImplicitCastExpr 0x14c146060 <col:15> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x14c144620 <col:15> 'int' lvalue Var 0x14c141a40 'offset' 'int'
|   |   | |-ImplicitCastExpr 0x14c146078 <col:23> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x14c144640 <col:23> 'int' lvalue Var 0x14c141ac0 'upb' 'int'
|   |   | |-ImplicitCastExpr 0x14c146090 <col:28, col:29> 'int' <LValueToRValue>
|   |   | | `-UnaryOperator 0x14c144698 <col:28, col:29> 'const int' lvalue prefix '*' cannot overflow
|   |   | |   `-ImplicitCastExpr 0x14c144680 <col:29> 'const int *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x14c144660 <col:29> 'const int *' lvalue Var 0x14c128608 'y' 'const int *'
|   |   | |-ImplicitCastExpr 0x14c1460a8 <col:32, col:33> 'int' <LValueToRValue>
|   |   | | `-UnaryOperator 0x14c1446e8 <col:32, col:33> 'const int' lvalue prefix '*' cannot overflow
|   |   | |   `-ImplicitCastExpr 0x14c1446d0 <col:33> 'const int *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x14c1446b0 <col:33> 'const int *' lvalue Var 0x14c128688 'cb' 'const int *'
|   |   | |-ImplicitCastExpr 0x14c1460c0 <col:37, col:38> 'int' <LValueToRValue>
|   |   | | `-UnaryOperator 0x14c144738 <col:37, col:38> 'const int' lvalue prefix '*' cannot overflow
|   |   | |   `-ImplicitCastExpr 0x14c144720 <col:38> 'const int *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x14c144700 <col:38> 'const int *' lvalue Var 0x14c128708 'cr' 'const int *'
|   |   | |-ImplicitCastExpr 0x14c1460d8 <col:42> 'int *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x14c144750 <col:42> 'int *' lvalue Var 0x14c128438 'r' 'int *'
|   |   | |-ImplicitCastExpr 0x14c1460f0 <col:45> 'int *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x14c144770 <col:45> 'int *' lvalue Var 0x14c1284b8 'g' 'int *'
|   |   | `-ImplicitCastExpr 0x14c146108 <col:48> 'int *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x14c144790 <col:48> 'int *' lvalue Var 0x14c128538 'b' 'int *'
|   |   |-UnaryOperator 0x14c146140 <line:27:3, col:5> 'const int *' prefix '++'
|   |   | `-DeclRefExpr 0x14c146120 <col:5> 'const int *' lvalue Var 0x14c128608 'y' 'const int *'
|   |   |-UnaryOperator 0x14c146178 <col:8, col:10> 'const int *' prefix '++'
|   |   | `-DeclRefExpr 0x14c146158 <col:10> 'const int *' lvalue Var 0x14c128688 'cb' 'const int *'
|   |   |-UnaryOperator 0x14c1461b0 <col:14, col:16> 'const int *' prefix '++'
|   |   | `-DeclRefExpr 0x14c146190 <col:16> 'const int *' lvalue Var 0x14c128708 'cr' 'const int *'
|   |   |-UnaryOperator 0x14c1461e8 <col:20, col:22> 'int *' prefix '++'
|   |   | `-DeclRefExpr 0x14c1461c8 <col:22> 'int *' lvalue Var 0x14c128438 'r' 'int *'
|   |   |-UnaryOperator 0x14c146220 <col:25, col:27> 'int *' prefix '++'
|   |   | `-DeclRefExpr 0x14c146200 <col:27> 'int *' lvalue Var 0x14c1284b8 'g' 'int *'
|   |   `-UnaryOperator 0x14c146258 <col:30, col:32> 'int *' prefix '++'
|   |     `-DeclRefExpr 0x14c146238 <col:32> 'int *' lvalue Var 0x14c128538 'b' 'int *'
|   |-CallExpr 0x14c1465d8 <line:29:2, col:25> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14c146498 <col:2> 'void (void *)' Function 0x14c146328 'free' 'void (void *)'
|   | `-CXXDependentScopeMemberExpr 0x14c146578 <col:7, col:21> '<dependent type>' contains-errors lvalue .data
|   |   `-ArraySubscriptExpr 0x14c146558 <col:7, col:19> '<dependent type>' contains-errors lvalue
|   |     |-ImplicitCastExpr 0x14c146540 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>
|   |     | `-CXXDependentScopeMemberExpr 0x14c1464d8 <col:7, col:12> '<dependent type>' contains-errors lvalue ->comps
|   |     |   `-RecoveryExpr 0x14c1464b8 <col:7> '<dependent type>' contains-errors lvalue
|   |     `-IntegerLiteral 0x14c146520 <col:18> 'int' 0
|   |-BinaryOperator 0x14c146750 <col:28, col:49> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x14c1466e8 <col:28, col:42> '<dependent type>' contains-errors lvalue .data
|   | | `-ArraySubscriptExpr 0x14c1466c8 <col:28, col:40> '<dependent type>' contains-errors lvalue
|   | |   |-ImplicitCastExpr 0x14c1466b0 <col:28, col:33> '<dependent type>' contains-errors <LValueToRValue>
|   | |   | `-CXXDependentScopeMemberExpr 0x14c146648 <col:28, col:33> '<dependent type>' contains-errors lvalue ->comps
|   | |   |   `-RecoveryExpr 0x14c146620 <col:28> '<dependent type>' contains-errors lvalue
|   | |   |     `-DeclRefExpr 0x14c146600 <col:28> 'int *' lvalue ParmVar 0x14c128128 'img' 'int *'
|   | |   `-IntegerLiteral 0x14c146690 <col:39> 'int' 0
|   | `-DeclRefExpr 0x14c146730 <col:49> 'int *' lvalue Var 0x14c1282b8 'd0' 'int *'
|   |-CallExpr 0x14c1468b0 <line:30:2, col:25> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14c146770 <col:2> 'void (void *)' Function 0x14c146328 'free' 'void (void *)'
|   | `-CXXDependentScopeMemberExpr 0x14c146850 <col:7, col:21> '<dependent type>' contains-errors lvalue .data
|   |   `-ArraySubscriptExpr 0x14c146830 <col:7, col:19> '<dependent type>' contains-errors lvalue
|   |     |-ImplicitCastExpr 0x14c146818 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>
|   |     | `-CXXDependentScopeMemberExpr 0x14c1467b0 <col:7, col:12> '<dependent type>' contains-errors lvalue ->comps
|   |     |   `-RecoveryExpr 0x14c146790 <col:7> '<dependent type>' contains-errors lvalue
|   |     `-IntegerLiteral 0x14c1467f8 <col:18> 'int' 1
|   |-BinaryOperator 0x14c146a28 <col:28, col:49> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x14c1469c0 <col:28, col:42> '<dependent type>' contains-errors lvalue .data
|   | | `-ArraySubscriptExpr 0x14c1469a0 <col:28, col:40> '<dependent type>' contains-errors lvalue
|   | |   |-ImplicitCastExpr 0x14c146988 <col:28, col:33> '<dependent type>' contains-errors <LValueToRValue>
|   | |   | `-CXXDependentScopeMemberExpr 0x14c146920 <col:28, col:33> '<dependent type>' contains-errors lvalue ->comps
|   | |   |   `-RecoveryExpr 0x14c1468f8 <col:28> '<dependent type>' contains-errors lvalue
|   | |   |     `-DeclRefExpr 0x14c1468d8 <col:28> 'int *' lvalue ParmVar 0x14c128128 'img' 'int *'
|   | |   `-IntegerLiteral 0x14c146968 <col:39> 'int' 1
|   | `-DeclRefExpr 0x14c146a08 <col:49> 'int *' lvalue Var 0x14c128338 'd1' 'int *'
|   |-CallExpr 0x14c146b88 <line:31:2, col:25> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14c146a48 <col:2> 'void (void *)' Function 0x14c146328 'free' 'void (void *)'
|   | `-CXXDependentScopeMemberExpr 0x14c146b28 <col:7, col:21> '<dependent type>' contains-errors lvalue .data
|   |   `-ArraySubscriptExpr 0x14c146b08 <col:7, col:19> '<dependent type>' contains-errors lvalue
|   |     |-ImplicitCastExpr 0x14c146af0 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>
|   |     | `-CXXDependentScopeMemberExpr 0x14c146a88 <col:7, col:12> '<dependent type>' contains-errors lvalue ->comps
|   |     |   `-RecoveryExpr 0x14c146a68 <col:7> '<dependent type>' contains-errors lvalue
|   |     `-IntegerLiteral 0x14c146ad0 <col:18> 'int' 2
|   |-BinaryOperator 0x14c146d00 <col:28, col:49> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x14c146c98 <col:28, col:42> '<dependent type>' contains-errors lvalue .data
|   | | `-ArraySubscriptExpr 0x14c146c78 <col:28, col:40> '<dependent type>' contains-errors lvalue
|   | |   |-ImplicitCastExpr 0x14c146c60 <col:28, col:33> '<dependent type>' contains-errors <LValueToRValue>
|   | |   | `-CXXDependentScopeMemberExpr 0x14c146bf8 <col:28, col:33> '<dependent type>' contains-errors lvalue ->comps
|   | |   |   `-RecoveryExpr 0x14c146bd0 <col:28> '<dependent type>' contains-errors lvalue
|   | |   |     `-DeclRefExpr 0x14c146bb0 <col:28> 'int *' lvalue ParmVar 0x14c128128 'img' 'int *'
|   | |   `-IntegerLiteral 0x14c146c40 <col:39> 'int' 2
|   | `-DeclRefExpr 0x14c146ce0 <col:49> 'int *' lvalue Var 0x14c1283b8 'd2' 'int *'
|   |-ReturnStmt 0x14c146d20 <line:32:2>
|   |-LabelStmt 0x14c146e80 <line:34:1, line:35:14> 'fails'
|   | `-IfStmt 0x14c146e60 <col:2, col:14>
|   |   |-ImplicitCastExpr 0x14c146d50 <col:5> 'int *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x14c146d30 <col:5> 'int *' lvalue Var 0x14c128438 'r' 'int *'
|   |   `-CallExpr 0x14c146e08 <col:8, col:14> 'void'
|   |     |-ImplicitCastExpr 0x14c146df0 <col:8> 'void (*)(void *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x14c146d68 <col:8> 'void (void *)' Function 0x14c146328 'free' 'void (void *)'
|   |     `-ImplicitCastExpr 0x14c146e48 <col:13> 'void *' <BitCast>
|   |       `-ImplicitCastExpr 0x14c146e30 <col:13> 'int *' <LValueToRValue>
|   |         `-DeclRefExpr 0x14c146d88 <col:13> 'int *' lvalue Var 0x14c128438 'r' 'int *'
|   |-IfStmt 0x14c146fa0 <line:36:2, col:14>
|   | |-ImplicitCastExpr 0x14c146ec0 <col:5> 'int *' <LValueToRValue>
|   | | `-DeclRefExpr 0x14c146ea0 <col:5> 'int *' lvalue Var 0x14c1284b8 'g' 'int *'
|   | `-CallExpr 0x14c146f48 <col:8, col:14> 'void'
|   |   |-ImplicitCastExpr 0x14c146f30 <col:8> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x14c146ed8 <col:8> 'void (void *)' Function 0x14c146328 'free' 'void (void *)'
|   |   `-ImplicitCastExpr 0x14c146f88 <col:13> 'void *' <BitCast>
|   |     `-ImplicitCastExpr 0x14c146f70 <col:13> 'int *' <LValueToRValue>
|   |       `-DeclRefExpr 0x14c146ef8 <col:13> 'int *' lvalue Var 0x14c1284b8 'g' 'int *'
|   `-IfStmt 0x14c1450c8 <line:37:2, col:14>
|     |-ImplicitCastExpr 0x14c146fe0 <col:5> 'int *' <LValueToRValue>
|     | `-DeclRefExpr 0x14c146fc0 <col:5> 'int *' lvalue Var 0x14c128538 'b' 'int *'
|     `-CallExpr 0x14c145070 <col:8, col:14> 'void'
|       |-ImplicitCastExpr 0x14c145058 <col:8> 'void (*)(void *)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x14c145000 <col:8> 'void (void *)' Function 0x14c146328 'free' 'void (void *)'
|       `-ImplicitCastExpr 0x14c1450b0 <col:13> 'void *' <BitCast>
|         `-ImplicitCastExpr 0x14c145098 <col:13> 'int *' <LValueToRValue>
|           `-DeclRefExpr 0x14c145020 <col:13> 'int *' lvalue Var 0x14c128538 'b' 'int *'
|-FunctionDecl 0x14c143b90 <line:18:17> col:17 implicit used malloc 'void *(unsigned long)' extern
| |-ParmVarDecl 0x14c143c90 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x14c143c38 <<invalid sloc>> Implicit 871
| `-AllocSizeAttr 0x14c143d00 <col:17> Implicit 1
`-FunctionDecl 0x14c146328 <line:29:2> col:2 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x14c146428 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x14c1463d0 <<invalid sloc>> Implicit 873
