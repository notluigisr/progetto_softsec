TranslationUnitDecl 0x126855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1268564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x126855bd0 '__int128'
|-TypedefDecl 0x126856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x126855bf0 'unsigned __int128'
|-TypedefDecl 0x126926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x126926000 'struct __NSConstantString_tag'
|   `-Record 0x126856580 '__NSConstantString_tag'
|-TypedefDecl 0x126926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x126855d90 '__SVInt8_t'
|-TypedefDecl 0x126926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x126855db0 '__SVInt16_t'
|-TypedefDecl 0x126926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x126855dd0 '__SVInt32_t'
|-TypedefDecl 0x1269263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x126855df0 '__SVInt64_t'
|-TypedefDecl 0x126926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x126855e10 '__SVUint8_t'
|-TypedefDecl 0x1269264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x126855e30 '__SVUint16_t'
|-TypedefDecl 0x126926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x126855e50 '__SVUint32_t'
|-TypedefDecl 0x126926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x126855e70 '__SVUint64_t'
|-TypedefDecl 0x1269265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x126855e90 '__SVFloat16_t'
|-TypedefDecl 0x126926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x126855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1269266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x126855ed0 '__SVFloat64_t'
|-TypedefDecl 0x126926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x126855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x126926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x126855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1269267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x126855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x126926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x126855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1269268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x126855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x126926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x126855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x126926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x126855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1269269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x126855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x126926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x126855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x126926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x126856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x126926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x126856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x126926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x126856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x126926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x126856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x126926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x126856090 '__clang_svint8x3_t'
|-TypedefDecl 0x126926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1268560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x126926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1268560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x126926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1268560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x126926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x126856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x126926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x126856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x126926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x126856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x126926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x126856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x126926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x126856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x126927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1268561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x126927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1268561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1269278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1268561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x126927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x126856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1269279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x126856230 '__clang_svint16x4_t'
|-TypedefDecl 0x126927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x126856250 '__clang_svint32x4_t'
|-TypedefDecl 0x126927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x126856270 '__clang_svint64x4_t'
|-TypedefDecl 0x126927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x126856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x126927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1268562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x126927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1268562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x126927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1268562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x126927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x126856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x126927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x126856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x126927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x126856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x126927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x126856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x126927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x126856390 '__SVBool_t'
|-TypedefDecl 0x126927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1268563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x126927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1268563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x126927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1268563f0 '__SVCount_t'
|-TypedefDecl 0x126927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x126927fb0 'char *'
|   `-BuiltinType 0x1268556b0 'char'
|-TypedefDecl 0x126928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x126927fb0 'char *'
|   `-BuiltinType 0x1268556b0 'char'
|-FunctionDecl 0x126940a00 <dataset_diviso_filec/func21845_nonvuln.c:1:1, line:53:1> line:1:1 sssctl_prompt 'int (const char *, enum sssctl_prompt_result)'
| |-ParmVarDecl 0x1269280d8 <col:15, col:27> col:27 used message 'const char *'
| |-ParmVarDecl 0x126928678 <line:2:15, col:41> col:41 invalid defval 'enum sssctl_prompt_result'
| `-CompoundStmt 0x126944ff8 <line:3:1, line:53:1>
|   |-DeclStmt 0x126940cf0 <line:4:5, col:27>
|   | `-VarDecl 0x126940ba0 <col:5, col:26> col:10 used answer 'char[255]' cinit
|   |   `-InitListExpr 0x126940c80 <col:24, col:26> 'char[255]'
|   |     |-array_filler: ImplicitValueInitExpr 0x126940ce0 <<invalid sloc>> 'char'
|   |     `-ImplicitCastExpr 0x126940cc0 <col:25> 'char' <IntegralCast>
|   |       `-IntegerLiteral 0x126940c08 <col:25> 'int' 0
|   |-DeclStmt 0x126940d88 <line:5:5, col:10>
|   | `-VarDecl 0x126940d20 <col:5, col:9> col:9 used c 'int'
|   |-DeclStmt 0x126940ff8 <line:6:5, col:59>
|   | `-VarDecl 0x126940db8 <col:5, col:58> col:17 used yes 'const char *' cinit
|   |   `-CallExpr 0x126940fd0 <col:23, col:58> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x126940f50 <col:23> 'int ()' Function 0x126940e98 'sssctl_prompt_str' 'int ()'
|   |     `-RecoveryExpr 0x126940fb0 <col:41> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x126941138 <line:7:5, col:57>
|   | `-VarDecl 0x126941028 <col:5, col:56> col:17 used no 'const char *' cinit
|   |   `-CallExpr 0x126941110 <col:22, col:56> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x126941090 <col:22> 'int ()' Function 0x126940e98 'sssctl_prompt_str' 'int ()'
|   |     `-RecoveryExpr 0x1269410f0 <col:40> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x1269411f0 <line:8:5, col:21>
|   | `-VarDecl 0x126941168 <col:5, col:20> col:9 used attempts 'int' cinit
|   |   `-IntegerLiteral 0x1269411d0 <col:20> 'int' 0
|   |-DeclStmt 0x126941288 <line:9:5, col:12>
|   | `-VarDecl 0x126941220 <col:5, col:9> col:9 used ret 'int'
|   |-DoStmt 0x126944f90 <line:11:5, line:50:26>
|   | |-CompoundStmt 0x126944ec8 <line:11:8, line:50:5>
|   | | |-IfStmt 0x1269437d8 <line:12:9, line:25:9> has_else
|   | | | |-BinaryOperator 0x126941318 <line:12:13, col:23> 'int' contains-errors '!='
|   | | | | |-RecoveryExpr 0x1269412a0 <col:13> '<dependent type>' contains-errors lvalue
|   | | | | `-RecoveryExpr 0x1269412f8 <col:23> '<dependent type>' contains-errors lvalue
|   | | | |-CompoundStmt 0x1269435d8 <col:44, line:23:9>
|   | | | | |-CallExpr 0x126941690 <line:13:13, line:14:65> '<dependent type>' contains-errors
|   | | | | | |-DeclRefExpr 0x126941528 <line:13:13> 'int (const char *, ...)' Function 0x126941380 'printf' 'int (const char *, ...)'
|   | | | | | |-StringLiteral 0x126941590 <col:20> 'char[4]' lvalue "STR"
|   | | | | | |-DeclRefExpr 0x1269415b0 <col:27> 'const char *' lvalue ParmVar 0x1269280d8 'message' 'const char *'
|   | | | | | |-DeclRefExpr 0x1269415d0 <col:36> 'const char *' contains-errors lvalue Var 0x126940db8 'yes' 'const char *'
|   | | | | | |-DeclRefExpr 0x1269415f0 <col:41> 'const char *' contains-errors lvalue Var 0x126941028 'no' 'const char *'
|   | | | | | `-CallExpr 0x126941650 <line:14:40, col:64> '<dependent type>' contains-errors
|   | | | | |   |-DeclRefExpr 0x126941610 <col:40> 'int ()' Function 0x126940e98 'sssctl_prompt_str' 'int ()'
|   | | | | |   `-RecoveryExpr 0x126941630 <col:58> '<dependent type>' contains-errors lvalue
|   | | | | |-BinaryOperator 0x126941868 <line:17:13, col:25> 'int' '='
|   | | | | | |-DeclRefExpr 0x1269416d8 <col:13> 'int' lvalue Var 0x126940d20 'c' 'int'
|   | | | | | `-CallExpr 0x126941848 <col:17, col:25> 'int'
|   | | | | |   `-ImplicitCastExpr 0x126941830 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   | | | | |     `-DeclRefExpr 0x1269417d8 <col:17> 'int ()' Function 0x126941720 'getchar' 'int ()'
|   | | | | `-IfStmt 0x1269435a8 <line:18:13, line:22:13> has_else
|   | | | |   |-BinaryOperator 0x1269418d8 <line:18:17, col:22> 'int' '=='
|   | | | |   | |-ImplicitCastExpr 0x1269418c0 <col:17> 'int' <LValueToRValue>
|   | | | |   | | `-DeclRefExpr 0x126941888 <col:17> 'int' lvalue Var 0x126940d20 'c' 'int'
|   | | | |   | `-CharacterLiteral 0x1269418a8 <col:22> 'int' 10
|   | | | |   |-CompoundStmt 0x126941928 <col:28, line:20:13>
|   | | | |   | `-ReturnStmt 0x126941918 <line:19:17, col:24>
|   | | | |   |   `-RecoveryExpr 0x1269418f8 <col:24> '<dependent type>' contains-errors lvalue
|   | | | |   `-CompoundStmt 0x126943590 <line:20:20, line:22:13>
|   | | | |     `-CallExpr 0x126943560 <line:21:17, col:32> '<dependent type>' contains-errors
|   | | | |       |-DeclRefExpr 0x1269434b8 <col:17> 'int ()' Function 0x126943400 'ungetc' 'int ()'
|   | | | |       |-DeclRefExpr 0x1269434d8 <col:24> 'int' lvalue Var 0x126940d20 'c' 'int'
|   | | | |       `-RecoveryExpr 0x126943540 <col:27> '<dependent type>' contains-errors lvalue
|   | | | `-CompoundStmt 0x1269437c0 <line:23:16, line:25:9>
|   | | |   `-CallExpr 0x126943708 <line:24:13, col:43> 'int' contains-errors
|   | | |     |-ImplicitCastExpr 0x1269436f0 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | | |     | `-DeclRefExpr 0x126943600 <col:13> 'int (const char *, ...)' Function 0x126941380 'printf' 'int (const char *, ...)'
|   | | |     |-ImplicitCastExpr 0x126943760 <col:20> 'const char *' <NoOp>
|   | | |     | `-ImplicitCastExpr 0x126943748 <col:20> 'char *' <ArrayToPointerDecay>
|   | | |     |   `-StringLiteral 0x126943620 <col:20> 'char[4]' lvalue "STR"
|   | | |     |-ImplicitCastExpr 0x126943778 <col:27> 'const char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x126943640 <col:27> 'const char *' lvalue ParmVar 0x1269280d8 'message' 'const char *'
|   | | |     |-ImplicitCastExpr 0x126943790 <col:36> 'const char *' contains-errors <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x126943660 <col:36> 'const char *' contains-errors lvalue Var 0x126940db8 'yes' 'const char *'
|   | | |     `-ImplicitCastExpr 0x1269437a8 <col:41> 'const char *' contains-errors <LValueToRValue>
|   | | |       `-DeclRefExpr 0x126943680 <col:41> 'const char *' contains-errors lvalue Var 0x126941028 'no' 'const char *'
|   | | |-BinaryOperator 0x126943b50 <line:27:9, col:34> 'int' '='
|   | | | |-DeclRefExpr 0x126943808 <col:9> 'int' lvalue Var 0x126941220 'ret' 'int'
|   | | | `-CallExpr 0x126943ad8 <col:15, col:34> 'int'
|   | | |   |-ImplicitCastExpr 0x126943ac0 <col:15> 'int (*)(const char *restrict, ...)' <FunctionToPointerDecay>
|   | | |   | `-DeclRefExpr 0x126943a18 <col:15> 'int (const char *restrict, ...)' Function 0x126943870 'scanf' 'int (const char *restrict, ...)'
|   | | |   |-ImplicitCastExpr 0x126943b20 <col:21> 'const char *' <NoOp>
|   | | |   | `-ImplicitCastExpr 0x126943b08 <col:21> 'char *' <ArrayToPointerDecay>
|   | | |   |   `-StringLiteral 0x126943a38 <col:21> 'char[4]' lvalue "STR"
|   | | |   `-ImplicitCastExpr 0x126943b38 <col:28> 'char *' <ArrayToPointerDecay>
|   | | |     `-DeclRefExpr 0x126943a58 <col:28> 'char[255]' lvalue Var 0x126940ba0 'answer' 'char[255]'
|   | | |-WhileStmt 0x126943e70 <line:30:9, col:52>
|   | | | |-BinaryOperator 0x126943e48 <col:16, col:48> 'int' contains-errors '&&'
|   | | | | |-BinaryOperator 0x126943de8 <col:16, col:35> 'int' '!='
|   | | | | | |-ParenExpr 0x126943dc8 <col:16, col:30> 'int'
|   | | | | | | `-BinaryOperator 0x126943da8 <col:17, col:29> 'int' '='
|   | | | | | |   |-DeclRefExpr 0x126943b70 <col:17> 'int' lvalue Var 0x126940d20 'c' 'int'
|   | | | | | |   `-CallExpr 0x126943d88 <col:21, col:29> 'int'
|   | | | | | |     `-ImplicitCastExpr 0x126943d70 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   | | | | | |       `-DeclRefExpr 0x126943b90 <col:21> 'int ()' Function 0x126941720 'getchar' 'int ()'
|   | | | | | `-CharacterLiteral 0x126943c28 <col:35> 'int' 10
|   | | | | `-BinaryOperator 0x126943e28 <col:43, col:48> 'int' contains-errors '!='
|   | | | |   |-DeclRefExpr 0x126943c60 <col:43> 'int' lvalue Var 0x126940d20 'c' 'int'
|   | | | |   `-RecoveryExpr 0x126943e08 <col:48> '<dependent type>' contains-errors lvalue
|   | | | `-NullStmt 0x126943e68 <col:52>
|   | | |-IfStmt 0x1269440e8 <line:32:9, line:35:9>
|   | | | |-BinaryOperator 0x126943ee8 <line:32:13, col:20> 'int' '!='
|   | | | | |-ImplicitCastExpr 0x126943ed0 <col:13> 'int' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x126943e90 <col:13> 'int' lvalue Var 0x126941220 'ret' 'int'
|   | | | | `-IntegerLiteral 0x126943eb0 <col:20> 'int' 1
|   | | | `-CompoundStmt 0x1269440c8 <col:23, line:35:9>
|   | | |   |-CallExpr 0x126944040 <line:33:13, col:24> 'int'
|   | | |   | |-ImplicitCastExpr 0x126944028 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | | |   | | `-DeclRefExpr 0x126943fe8 <col:13> 'int ()' Function 0x126943f30 'ERROR' 'int ()'
|   | | |   | `-ImplicitCastExpr 0x126944068 <col:19> 'char *' <ArrayToPointerDecay>
|   | | |   |   `-StringLiteral 0x126944008 <col:19> 'char[4]' lvalue "STR"
|   | | |   `-ReturnStmt 0x1269440b8 <line:34:13, col:20>
|   | | |     `-RecoveryExpr 0x126944098 <col:20> '<dependent type>' contains-errors lvalue
|   | | |-IfStmt 0x126944b30 <line:38:9, line:40:9>
|   | | | |-BinaryOperator 0x126944ab0 <line:38:13, col:40> 'int' contains-errors '=='
|   | | | | |-CallExpr 0x126944a18 <col:13, col:35> 'int' contains-errors
|   | | | | | |-ImplicitCastExpr 0x126944a00 <col:13> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | | | | `-DeclRefExpr 0x126944330 <col:13> 'int (const char *, const char *)' Function 0x126944150 'strcasecmp' 'int (const char *, const char *)'
|   | | | | | |-ImplicitCastExpr 0x126944a48 <col:24> 'const char *' contains-errors <LValueToRValue>
|   | | | | | | `-DeclRefExpr 0x126944350 <col:24> 'const char *' contains-errors lvalue Var 0x126940db8 'yes' 'const char *'
|   | | | | | `-ImplicitCastExpr 0x126944a78 <col:29> 'const char *' <NoOp>
|   | | | | |   `-ImplicitCastExpr 0x126944a60 <col:29> 'char *' <ArrayToPointerDecay>
|   | | | | |     `-DeclRefExpr 0x126944370 <col:29> 'char[255]' lvalue Var 0x126940ba0 'answer' 'char[255]'
|   | | | | `-IntegerLiteral 0x126944a90 <col:40> 'int' 0
|   | | | `-CompoundStmt 0x126944b18 <col:43, line:40:9>
|   | | |   `-ReturnStmt 0x126944b08 <line:39:13, col:20>
|   | | |     `-RecoveryExpr 0x126944ae8 <col:20> '<dependent type>' contains-errors lvalue
|   | | |-IfStmt 0x126944d10 <line:42:9, line:44:9>
|   | | | |-BinaryOperator 0x126944c90 <line:42:13, col:39> 'int' contains-errors '=='
|   | | | | |-CallExpr 0x126944bf8 <col:13, col:34> 'int' contains-errors
|   | | | | | |-ImplicitCastExpr 0x126944be0 <col:13> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | | | | `-DeclRefExpr 0x126944b50 <col:13> 'int (const char *, const char *)' Function 0x126944150 'strcasecmp' 'int (const char *, const char *)'
|   | | | | | |-ImplicitCastExpr 0x126944c28 <col:24> 'const char *' contains-errors <LValueToRValue>
|   | | | | | | `-DeclRefExpr 0x126944b70 <col:24> 'const char *' contains-errors lvalue Var 0x126941028 'no' 'const char *'
|   | | | | | `-ImplicitCastExpr 0x126944c58 <col:28> 'const char *' <NoOp>
|   | | | | |   `-ImplicitCastExpr 0x126944c40 <col:28> 'char *' <ArrayToPointerDecay>
|   | | | | |     `-DeclRefExpr 0x126944b90 <col:28> 'char[255]' lvalue Var 0x126940ba0 'answer' 'char[255]'
|   | | | | `-IntegerLiteral 0x126944c70 <col:39> 'int' 0
|   | | | `-CompoundStmt 0x126944cf8 <col:42, line:44:9>
|   | | |   `-ReturnStmt 0x126944ce8 <line:43:13, col:20>
|   | | |     `-RecoveryExpr 0x126944cc8 <col:20> '<dependent type>' contains-errors lvalue
|   | | |-CallExpr 0x126944e10 <line:46:9, line:47:29> 'int' contains-errors
|   | | | |-ImplicitCastExpr 0x126944df8 <line:46:9> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x126944d30 <col:9> 'int ()' Function 0x126943f30 'ERROR' 'int ()'
|   | | | |-ImplicitCastExpr 0x126944e48 <col:15, line:47:15> 'char *' <ArrayToPointerDecay>
|   | | | | `-StringLiteral 0x126944d90 <line:46:15, line:47:15> 'char[7]' lvalue "STRSTR"
|   | | | |-ImplicitCastExpr 0x126944e60 <col:22> 'const char *' contains-errors <LValueToRValue>
|   | | | | `-DeclRefExpr 0x126944db8 <col:22> 'const char *' contains-errors lvalue Var 0x126940db8 'yes' 'const char *'
|   | | | `-ImplicitCastExpr 0x126944e78 <col:27> 'const char *' contains-errors <LValueToRValue>
|   | | |   `-DeclRefExpr 0x126944dd8 <col:27> 'const char *' contains-errors lvalue Var 0x126941028 'no' 'const char *'
|   | | `-UnaryOperator 0x126944eb0 <line:49:9, col:17> 'int' postfix '++'
|   | |   `-DeclRefExpr 0x126944e90 <col:9> 'int' lvalue Var 0x126941168 'attempts' 'int'
|   | `-BinaryOperator 0x126944f70 <line:50:14, col:25> 'int' '<'
|   |   |-ImplicitCastExpr 0x126944f58 <col:14> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x126944f18 <col:14> 'int' lvalue Var 0x126941168 'attempts' 'int'
|   |   `-IntegerLiteral 0x126944f38 <col:25> 'int' 3
|   `-ReturnStmt 0x126944fe8 <line:52:5, col:12>
|     `-RecoveryExpr 0x126944fc8 <col:12> '<dependent type>' contains-errors lvalue
|-FunctionDecl 0x126941380 <line:13:13> col:13 implicit used printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x126941480 <<invalid sloc>> <invalid sloc> 'const char *'
| |-BuiltinAttr 0x126941428 <<invalid sloc>> Implicit 903
| `-FormatAttr 0x1269414f0 <col:13> Implicit printf 1 2
|-FunctionDecl 0x126943870 <line:27:15> col:15 implicit used scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x126943970 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-BuiltinAttr 0x126943918 <<invalid sloc>> Implicit 911
| `-FormatAttr 0x1269439e0 <col:15> Implicit scanf 1 2
`-FunctionDecl 0x126944150 <line:38:13> col:13 implicit used strcasecmp 'int (const char *, const char *)' extern
  |-ParmVarDecl 0x126944250 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x1269442b8 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x1269441f8 <<invalid sloc>> Implicit 957
