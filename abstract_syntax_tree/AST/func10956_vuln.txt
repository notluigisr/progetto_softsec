TranslationUnitDecl 0x14f055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14f0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14f055bd0 '__int128'
|-TypedefDecl 0x14f056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14f055bf0 'unsigned __int128'
|-TypedefDecl 0x14f80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14f80bc00 'struct __NSConstantString_tag'
|   `-Record 0x14f056580 '__NSConstantString_tag'
|-TypedefDecl 0x14f80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14f055d90 '__SVInt8_t'
|-TypedefDecl 0x14f80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14f055db0 '__SVInt16_t'
|-TypedefDecl 0x14f80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14f055dd0 '__SVInt32_t'
|-TypedefDecl 0x14f80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14f055df0 '__SVInt64_t'
|-TypedefDecl 0x14f80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14f055e10 '__SVUint8_t'
|-TypedefDecl 0x14f80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14f055e30 '__SVUint16_t'
|-TypedefDecl 0x14f80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14f055e50 '__SVUint32_t'
|-TypedefDecl 0x14f80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14f055e70 '__SVUint64_t'
|-TypedefDecl 0x14f80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14f055e90 '__SVFloat16_t'
|-TypedefDecl 0x14f80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14f055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14f80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14f055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14f80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14f055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14f80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14f055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14f80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14f055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14f80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14f055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14f80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14f055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14f80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14f055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14f80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14f055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14f80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14f055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14f80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14f055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14f80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14f056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14f80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14f056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14f80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14f056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14f80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14f056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14f80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14f056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14f80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14f0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14f80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14f0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14f80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14f0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14f80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14f056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14f80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14f056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14f80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14f056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14f80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14f056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14f80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14f056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14f80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14f0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14f80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14f0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14f80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14f0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14f80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14f056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14f80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14f056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14f80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14f056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14f80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14f056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14f80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14f056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14f80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14f0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14f80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14f0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14f80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14f0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14f80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14f056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14f80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14f056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14f80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14f056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14f80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14f056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14f80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14f056390 '__SVBool_t'
|-TypedefDecl 0x14f80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14f0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14f80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14f0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14f80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14f0563f0 '__SVCount_t'
|-TypedefDecl 0x14f80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14f80dbb0 'char *'
|   `-BuiltinType 0x14f0556b0 'char'
|-TypedefDecl 0x14f80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14f80dbb0 'char *'
|   `-BuiltinType 0x14f0556b0 'char'
`-FunctionDecl 0x14f80dfd8 <dataset_diviso_filec/func10956_vuln.c:1:1, line:22:1> line:1:1 invalid get_function_line 'int (int *, char **, int, int)'
  |-ParmVarDecl 0x14f80dd28 <line:2:2, col:12> col:12 invalid eap 'int *'
  |-ParmVarDecl 0x14f80ddd8 <line:3:2, col:12> col:12 used line_to_free 'char **'
  |-ParmVarDecl 0x14f80de58 <line:4:2, col:7> col:7 used indent 'int'
  |-ParmVarDecl 0x14f80ded8 <line:5:2, col:16> col:16 invalid getline_options 'int'
  `-CompoundStmt 0x15800aea8 <line:6:1, line:22:1>
    |-DeclStmt 0x14f80e120 <line:7:5, col:20>
    | `-VarDecl 0x14f80e0b8 <col:5, col:13> col:13 used theline 'char *'
    |-IfStmt 0x15800a8e8 <line:9:5, line:12:66> has_else
    | |-BinaryOperator 0x14f80e1f8 <line:9:9, col:25> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x14f80e158 <col:9, col:14> '<dependent type>' contains-errors lvalue ->getline
    | | | `-RecoveryExpr 0x14f80e138 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x14f80e1d8 <col:25> '<dependent type>' contains-errors lvalue
    | |-BinaryOperator 0x15800a720 <line:10:2, col:41> 'char *' '='
    | | |-DeclRefExpr 0x14f80e218 <col:2> 'char *' lvalue Var 0x14f80e0b8 'theline' 'char *'
    | | `-ImplicitCastExpr 0x15800a2e0 <col:12, col:41> 'char *' <IntegralToPointer>
    | |   `-CallExpr 0x15800a288 <col:12, col:41> 'int'
    | |     |-ImplicitCastExpr 0x15800a270 <col:12> 'int (*)()' <FunctionToPointerDecay>
    | |     | `-DeclRefExpr 0x14f80e390 <col:12> 'int ()' Function 0x14f80e2d8 'getcmdline' 'int ()'
    | |     |-CharacterLiteral 0x14f80e3b0 <col:23> 'int' 58
    | |     |-IntegerLiteral 0x14f80e3c8 <col:28> 'long' 0
    | |     |-ImplicitCastExpr 0x15800a2c8 <col:32> 'int' <LValueToRValue>
    | |     | `-DeclRefExpr 0x15800a200 <col:32> 'int' lvalue ParmVar 0x14f80de58 'indent' 'int'
    | |     `-IntegerLiteral 0x15800a220 <col:40> 'int' 0
    | `-BinaryOperator 0x15800a8c8 <line:12:2, col:66> 'char *' contains-errors '='
    |   |-DeclRefExpr 0x15800a740 <col:2> 'char *' lvalue Var 0x14f80e0b8 'theline' 'char *'
    |   `-CallExpr 0x15800a888 <col:12, col:66> '<dependent type>' contains-errors
    |     |-CXXDependentScopeMemberExpr 0x15800a780 <col:12, col:17> '<dependent type>' contains-errors lvalue ->getline
    |     | `-RecoveryExpr 0x15800a760 <col:12> '<dependent type>' contains-errors lvalue
    |     |-CharacterLiteral 0x15800a7c8 <col:25> 'int' 58
    |     |-CXXDependentScopeMemberExpr 0x15800a800 <col:30, col:35> '<dependent type>' contains-errors lvalue ->cookie
    |     | `-RecoveryExpr 0x15800a7e0 <col:30> '<dependent type>' contains-errors lvalue
    |     |-DeclRefExpr 0x15800a848 <col:43> 'int' lvalue ParmVar 0x14f80de58 'indent' 'int'
    |     `-RecoveryExpr 0x15800a868 <col:51> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x15800ae28 <line:13:5, line:19:5>
    | |-BinaryOperator 0x15800a990 <line:13:9, col:20> 'int' contains-errors '!='
    | | |-DeclRefExpr 0x15800a918 <col:9> 'char *' lvalue Var 0x14f80e0b8 'theline' 'char *'
    | | `-RecoveryExpr 0x15800a970 <col:20> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x15800ae00 <line:14:5, line:19:5>
    |   |-IfStmt 0x15800ab90 <line:15:2, line:16:23>
    |   | |-BinaryOperator 0x15800aa98 <line:15:6, col:25> 'int' contains-errors '=='
    |   | | |-UnaryOperator 0x15800aa30 <col:6, col:12> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | | | `-ImplicitCastExpr 0x15800aa18 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   | | |   `-CXXDependentScopeMemberExpr 0x15800a9d0 <col:7, col:12> '<dependent type>' contains-errors lvalue ->cmdlinep
    |   | | |     `-RecoveryExpr 0x15800a9b0 <col:7> '<dependent type>' contains-errors lvalue
    |   | | `-UnaryOperator 0x15800aa80 <col:24, col:25> 'char *' lvalue prefix '*' cannot overflow
    |   | |   `-ImplicitCastExpr 0x15800aa68 <col:25> 'char **' <LValueToRValue>
    |   | |     `-DeclRefExpr 0x15800aa48 <col:25> 'char **' lvalue ParmVar 0x14f80ddd8 'line_to_free' 'char **'
    |   | `-BinaryOperator 0x15800ab70 <line:16:6, col:23> '<dependent type>' contains-errors '='
    |   |   |-UnaryOperator 0x15800ab38 <col:6, col:12> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   |   | `-ImplicitCastExpr 0x15800ab20 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   |   |   `-CXXDependentScopeMemberExpr 0x15800aad8 <col:7, col:12> '<dependent type>' contains-errors lvalue ->cmdlinep
    |   |   |     `-RecoveryExpr 0x15800aab8 <col:7> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x15800ab50 <col:23> 'char *' lvalue Var 0x14f80e0b8 'theline' 'char *'
    |   |-CallExpr 0x15800ad18 <line:17:2, col:24> 'int'
    |   | |-ImplicitCastExpr 0x15800ad00 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x15800ac90 <col:2> 'int ()' Function 0x15800abd8 'vim_free' 'int ()'
    |   | `-ImplicitCastExpr 0x15800ad40 <col:11, col:12> 'char *' <LValueToRValue>
    |   |   `-UnaryOperator 0x15800ace8 <col:11, col:12> 'char *' lvalue prefix '*' cannot overflow
    |   |     `-ImplicitCastExpr 0x15800acd0 <col:12> 'char **' <LValueToRValue>
    |   |       `-DeclRefExpr 0x15800acb0 <col:12> 'char **' lvalue ParmVar 0x14f80ddd8 'line_to_free' 'char **'
    |   `-BinaryOperator 0x15800ade0 <line:18:2, col:18> 'char *' '='
    |     |-UnaryOperator 0x15800ad90 <col:2, col:3> 'char *' lvalue prefix '*' cannot overflow
    |     | `-ImplicitCastExpr 0x15800ad78 <col:3> 'char **' <LValueToRValue>
    |     |   `-DeclRefExpr 0x15800ad58 <col:3> 'char **' lvalue ParmVar 0x14f80ddd8 'line_to_free' 'char **'
    |     `-ImplicitCastExpr 0x15800adc8 <col:18> 'char *' <LValueToRValue>
    |       `-DeclRefExpr 0x15800ada8 <col:18> 'char *' lvalue Var 0x14f80e0b8 'theline' 'char *'
    `-ReturnStmt 0x15800ae98 <line:21:5, col:12>
      `-ImplicitCastExpr 0x15800ae80 <col:12> 'int' <PointerToIntegral>
        `-ImplicitCastExpr 0x15800ae68 <col:12> 'char *' <LValueToRValue>
          `-DeclRefExpr 0x15800ae48 <col:12> 'char *' lvalue Var 0x14f80e0b8 'theline' 'char *'
