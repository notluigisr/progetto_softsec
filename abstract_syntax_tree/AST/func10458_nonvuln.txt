TranslationUnitDecl 0x15b055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15b0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15b055bd0 '__int128'
|-TypedefDecl 0x15b056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15b055bf0 'unsigned __int128'
|-TypedefDecl 0x14b00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14b00bc00 'struct __NSConstantString_tag'
|   `-Record 0x15b056580 '__NSConstantString_tag'
|-TypedefDecl 0x14b00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x15b055d90 '__SVInt8_t'
|-TypedefDecl 0x14b00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x15b055db0 '__SVInt16_t'
|-TypedefDecl 0x14b00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x15b055dd0 '__SVInt32_t'
|-TypedefDecl 0x14b00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x15b055df0 '__SVInt64_t'
|-TypedefDecl 0x14b00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x15b055e10 '__SVUint8_t'
|-TypedefDecl 0x14b00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x15b055e30 '__SVUint16_t'
|-TypedefDecl 0x14b00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x15b055e50 '__SVUint32_t'
|-TypedefDecl 0x14b00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x15b055e70 '__SVUint64_t'
|-TypedefDecl 0x14b00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x15b055e90 '__SVFloat16_t'
|-TypedefDecl 0x14b00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x15b055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14b00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x15b055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14b00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x15b055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14b00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x15b055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14b00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x15b055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14b00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x15b055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14b00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x15b055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14b00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x15b055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14b00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x15b055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14b00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x15b055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14b00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x15b055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14b00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x15b056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14b00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x15b056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14b00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x15b056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14b00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x15b056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14b00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x15b056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14b00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x15b0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14b00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x15b0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14b00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x15b0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14b00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x15b056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14b00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x15b056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14b00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x15b056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14b00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x15b056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14b00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x15b056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14b00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x15b0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14b00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x15b0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14b00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x15b0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14b00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x15b056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14b00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x15b056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14b00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x15b056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14b00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x15b056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14b00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x15b056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14b00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x15b0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14b00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x15b0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14b00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x15b0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14b00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x15b056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14b00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x15b056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14b00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x15b056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14b00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x15b056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14b00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x15b056390 '__SVBool_t'
|-TypedefDecl 0x14b00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x15b0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14b00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x15b0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14b00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x15b0563f0 '__SVCount_t'
|-TypedefDecl 0x14b00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14b00dbb0 'char *'
|   `-BuiltinType 0x15b0556b0 'char'
|-TypedefDecl 0x14b00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14b00dbb0 'char *'
|   `-BuiltinType 0x15b0556b0 'char'
`-FunctionDecl 0x14b0267e8 <dataset_diviso_filec/func10458_nonvuln.c:1:1, line:49:1> line:1:14 json_target_address 'char *(const struct json_attr_t *, const struct json_array_t *, int)' static
  |-ParmVarDecl 0x14b00e248 <col:34, col:60> col:60 used cursor 'const struct json_attr_t *'
  |-ParmVarDecl 0x14b026628 <line:2:11, line:3:12> col:12 used parent 'const struct json_array_t *'
  |-ParmVarDecl 0x14b0266a8 <col:20, col:24> col:24 used offset 'int'
  `-CompoundStmt 0x15b1238a8 <line:4:1, line:49:1>
    |-DeclStmt 0x14b0269c0 <line:5:5, col:28>
    | `-VarDecl 0x14b026908 <col:5, col:24> col:11 used targetaddr 'char *' cinit
    |   `-RecoveryExpr 0x14b0269a0 <col:24> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x15b123500 <line:6:5, line:45:19> has_else
    | |-BinaryOperator 0x14b026b68 <line:6:9, col:51> 'int' contains-errors '||'
    | | |-BinaryOperator 0x14b026b08 <col:9, col:19> 'int' contains-errors '=='
    | | | |-DeclRefExpr 0x14b0269d8 <col:9> 'const struct json_array_t *' lvalue ParmVar 0x14b026628 'parent' 'const struct json_array_t *'
    | | | `-RecoveryExpr 0x14b026ae8 <col:19> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x14b026b48 <col:27, col:51> 'int' contains-errors '!='
    | |   |-RecoveryExpr 0x14b026a68 <col:27, col:35> '<dependent type>' contains-errors lvalue
    | |   | `-DeclRefExpr 0x14b026a30 <col:27> 'const struct json_array_t *' lvalue ParmVar 0x14b026628 'parent' 'const struct json_array_t *'
    | |   `-RecoveryExpr 0x14b026b28 <col:51> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x15b123180 <col:67, line:41:5>
    | | `-SwitchStmt 0x14b026c00 <line:8:2, line:40:2>
    | |   |-ImplicitCastExpr 0x14b026be8 <line:8:10, col:18> '<dependent type>' contains-errors <LValueToRValue>
    | |   | `-RecoveryExpr 0x14b026bc0 <col:10, col:18> '<dependent type>' contains-errors lvalue
    | |   |   `-DeclRefExpr 0x14b026b88 <col:10> 'const struct json_attr_t *' lvalue ParmVar 0x14b00e248 'cursor' 'const struct json_attr_t *'
    | |   `-CompoundStmt 0x15b1230d0 <col:24, line:40:2>
    | |     |-BinaryOperator 0x14b026cb8 <line:10:6, col:19> 'char *' contains-errors '='
    | |     | |-DeclRefExpr 0x14b026c40 <col:6> 'char *' contains-errors lvalue Var 0x14b026908 'targetaddr' 'char *'
    | |     | `-RecoveryExpr 0x14b026c98 <col:19> '<dependent type>' contains-errors lvalue
    | |     |-BreakStmt 0x14b026cd8 <line:11:6>
    | |     |-BinaryOperator 0x14b026e88 <line:13:6, col:55> 'char *' contains-errors '='
    | |     | |-DeclRefExpr 0x14b026cf8 <col:6> 'char *' contains-errors lvalue Var 0x14b026908 'targetaddr' 'char *'
    | |     | `-CStyleCastExpr 0x14b026e60 <col:19, col:55> 'char *' contains-errors <Dependent>
    | |     |   `-UnaryOperator 0x14b026e30 <col:27, col:55> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |     |     `-ArraySubscriptExpr 0x14b026e10 <col:28, col:55> '<dependent type>' contains-errors lvalue
    | |     |       |-ImplicitCastExpr 0x14b026de0 <col:28, col:41> '<dependent type>' contains-errors <LValueToRValue>
    | |     |       | `-CXXDependentScopeMemberExpr 0x14b026d78 <col:28, col:41> '<dependent type>' contains-errors lvalue .integer
    | |     |       |   `-RecoveryExpr 0x14b026d50 <col:28, col:36> '<dependent type>' contains-errors lvalue
    | |     |       |     `-DeclRefExpr 0x14b026d18 <col:28> 'const struct json_attr_t *' lvalue ParmVar 0x14b00e248 'cursor' 'const struct json_attr_t *'
    | |     |       `-ImplicitCastExpr 0x14b026df8 <col:49> 'int' <LValueToRValue>
    | |     |         `-DeclRefExpr 0x14b026dc0 <col:49> 'int' lvalue ParmVar 0x14b0266a8 'offset' 'int'
    | |     |-BreakStmt 0x14b026ea8 <line:14:6>
    | |     |-BinaryOperator 0x14b027058 <line:16:6, col:56> 'char *' contains-errors '='
    | |     | |-DeclRefExpr 0x14b026ec8 <col:6> 'char *' contains-errors lvalue Var 0x14b026908 'targetaddr' 'char *'
    | |     | `-CStyleCastExpr 0x14b027030 <col:19, col:56> 'char *' contains-errors <Dependent>
    | |     |   `-UnaryOperator 0x14b027000 <col:27, col:56> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |     |     `-ArraySubscriptExpr 0x14b026fe0 <col:28, col:56> '<dependent type>' contains-errors lvalue
    | |     |       |-ImplicitCastExpr 0x14b026fb0 <col:28, col:41> '<dependent type>' contains-errors <LValueToRValue>
    | |     |       | `-CXXDependentScopeMemberExpr 0x14b026f48 <col:28, col:41> '<dependent type>' contains-errors lvalue .uinteger
    | |     |       |   `-RecoveryExpr 0x14b026f20 <col:28, col:36> '<dependent type>' contains-errors lvalue
    | |     |       |     `-DeclRefExpr 0x14b026ee8 <col:28> 'const struct json_attr_t *' lvalue ParmVar 0x14b00e248 'cursor' 'const struct json_attr_t *'
    | |     |       `-ImplicitCastExpr 0x14b026fc8 <col:50> 'int' <LValueToRValue>
    | |     |         `-DeclRefExpr 0x14b026f90 <col:50> 'int' lvalue ParmVar 0x14b0266a8 'offset' 'int'
    | |     |-BreakStmt 0x14b027078 <line:17:6>
    | |     |-BinaryOperator 0x14b027228 <line:19:6, col:56> 'char *' contains-errors '='
    | |     | |-DeclRefExpr 0x14b027098 <col:6> 'char *' contains-errors lvalue Var 0x14b026908 'targetaddr' 'char *'
    | |     | `-CStyleCastExpr 0x14b027200 <col:19, col:56> 'char *' contains-errors <Dependent>
    | |     |   `-UnaryOperator 0x14b0271d0 <col:27, col:56> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |     |     `-ArraySubscriptExpr 0x14b0271b0 <col:28, col:56> '<dependent type>' contains-errors lvalue
    | |     |       |-ImplicitCastExpr 0x14b027180 <col:28, col:41> '<dependent type>' contains-errors <LValueToRValue>
    | |     |       | `-CXXDependentScopeMemberExpr 0x14b027118 <col:28, col:41> '<dependent type>' contains-errors lvalue .shortint
    | |     |       |   `-RecoveryExpr 0x14b0270f0 <col:28, col:36> '<dependent type>' contains-errors lvalue
    | |     |       |     `-DeclRefExpr 0x14b0270b8 <col:28> 'const struct json_attr_t *' lvalue ParmVar 0x14b00e248 'cursor' 'const struct json_attr_t *'
    | |     |       `-ImplicitCastExpr 0x14b027198 <col:50> 'int' <LValueToRValue>
    | |     |         `-DeclRefExpr 0x14b027160 <col:50> 'int' lvalue ParmVar 0x14b0266a8 'offset' 'int'
    | |     |-BreakStmt 0x14b027248 <line:20:6>
    | |     |-BinaryOperator 0x14b0273f8 <line:22:6, col:57> 'char *' contains-errors '='
    | |     | |-DeclRefExpr 0x14b027268 <col:6> 'char *' contains-errors lvalue Var 0x14b026908 'targetaddr' 'char *'
    | |     | `-CStyleCastExpr 0x14b0273d0 <col:19, col:57> 'char *' contains-errors <Dependent>
    | |     |   `-UnaryOperator 0x14b0273a0 <col:27, col:57> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |     |     `-ArraySubscriptExpr 0x14b027380 <col:28, col:57> '<dependent type>' contains-errors lvalue
    | |     |       |-ImplicitCastExpr 0x14b027350 <col:28, col:41> '<dependent type>' contains-errors <LValueToRValue>
    | |     |       | `-CXXDependentScopeMemberExpr 0x14b0272e8 <col:28, col:41> '<dependent type>' contains-errors lvalue .ushortint
    | |     |       |   `-RecoveryExpr 0x14b0272c0 <col:28, col:36> '<dependent type>' contains-errors lvalue
    | |     |       |     `-DeclRefExpr 0x14b027288 <col:28> 'const struct json_attr_t *' lvalue ParmVar 0x14b00e248 'cursor' 'const struct json_attr_t *'
    | |     |       `-ImplicitCastExpr 0x14b027368 <col:51> 'int' <LValueToRValue>
    | |     |         `-DeclRefExpr 0x14b027330 <col:51> 'int' lvalue ParmVar 0x14b0266a8 'offset' 'int'
    | |     |-BreakStmt 0x14b027418 <line:23:6>
    | |     |-BinaryOperator 0x14b0275e0 <line:26:6, col:52> 'char *' contains-errors '='
    | |     | |-DeclRefExpr 0x14b027450 <col:6> 'char *' contains-errors lvalue Var 0x14b026908 'targetaddr' 'char *'
    | |     | `-CStyleCastExpr 0x14b0275b8 <col:19, col:52> 'char *' contains-errors <Dependent>
    | |     |   `-UnaryOperator 0x14b027588 <col:27, col:52> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |     |     `-ArraySubscriptExpr 0x14b027568 <col:28, col:52> '<dependent type>' contains-errors lvalue
    | |     |       |-ImplicitCastExpr 0x14b027538 <col:28, col:41> '<dependent type>' contains-errors <LValueToRValue>
    | |     |       | `-CXXDependentScopeMemberExpr 0x14b0274d0 <col:28, col:41> '<dependent type>' contains-errors lvalue .real
    | |     |       |   `-RecoveryExpr 0x14b0274a8 <col:28, col:36> '<dependent type>' contains-errors lvalue
    | |     |       |     `-DeclRefExpr 0x14b027470 <col:28> 'const struct json_attr_t *' lvalue ParmVar 0x14b00e248 'cursor' 'const struct json_attr_t *'
    | |     |       `-ImplicitCastExpr 0x14b027550 <col:46> 'int' <LValueToRValue>
    | |     |         `-DeclRefExpr 0x14b027518 <col:46> 'int' lvalue ParmVar 0x14b0266a8 'offset' 'int'
    | |     |-BreakStmt 0x15b122c00 <line:27:6>
    | |     |-BinaryOperator 0x15b122ce8 <line:29:6, col:32> 'char *' contains-errors '='
    | |     | |-DeclRefExpr 0x15b122c20 <col:6> 'char *' contains-errors lvalue Var 0x14b026908 'targetaddr' 'char *'
    | |     | `-CXXDependentScopeMemberExpr 0x15b122ca0 <col:19, col:32> '<dependent type>' contains-errors lvalue .string
    | |     |   `-RecoveryExpr 0x15b122c78 <col:19, col:27> '<dependent type>' contains-errors lvalue
    | |     |     `-DeclRefExpr 0x15b122c40 <col:19> 'const struct json_attr_t *' lvalue ParmVar 0x14b00e248 'cursor' 'const struct json_attr_t *'
    | |     |-BreakStmt 0x15b122d08 <line:30:6>
    | |     |-BinaryOperator 0x15b122ea0 <line:32:6, col:55> 'char *' contains-errors '='
    | |     | |-DeclRefExpr 0x15b122d10 <col:6> 'char *' contains-errors lvalue Var 0x14b026908 'targetaddr' 'char *'
    | |     | `-CStyleCastExpr 0x15b122e78 <col:19, col:55> 'char *' contains-errors <Dependent>
    | |     |   `-UnaryOperator 0x15b122e48 <col:27, col:55> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |     |     `-ArraySubscriptExpr 0x15b122e28 <col:28, col:55> '<dependent type>' contains-errors lvalue
    | |     |       |-ImplicitCastExpr 0x15b122df8 <col:28, col:41> '<dependent type>' contains-errors <LValueToRValue>
    | |     |       | `-CXXDependentScopeMemberExpr 0x15b122d90 <col:28, col:41> '<dependent type>' contains-errors lvalue .boolean
    | |     |       |   `-RecoveryExpr 0x15b122d68 <col:28, col:36> '<dependent type>' contains-errors lvalue
    | |     |       |     `-DeclRefExpr 0x15b122d30 <col:28> 'const struct json_attr_t *' lvalue ParmVar 0x14b00e248 'cursor' 'const struct json_attr_t *'
    | |     |       `-ImplicitCastExpr 0x15b122e10 <col:49> 'int' <LValueToRValue>
    | |     |         `-DeclRefExpr 0x15b122dd8 <col:49> 'int' lvalue ParmVar 0x14b0266a8 'offset' 'int'
    | |     |-BreakStmt 0x15b122ec0 <line:33:6>
    | |     |-BinaryOperator 0x15b123058 <line:35:6, col:57> 'char *' contains-errors '='
    | |     | |-DeclRefExpr 0x15b122ec8 <col:6> 'char *' contains-errors lvalue Var 0x14b026908 'targetaddr' 'char *'
    | |     | `-CStyleCastExpr 0x15b123030 <col:19, col:57> 'char *' contains-errors <Dependent>
    | |     |   `-UnaryOperator 0x15b123000 <col:27, col:57> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |     |     `-ArraySubscriptExpr 0x15b122fe0 <col:28, col:57> '<dependent type>' contains-errors lvalue
    | |     |       |-ImplicitCastExpr 0x15b122fb0 <col:28, col:41> '<dependent type>' contains-errors <LValueToRValue>
    | |     |       | `-CXXDependentScopeMemberExpr 0x15b122f48 <col:28, col:41> '<dependent type>' contains-errors lvalue .character
    | |     |       |   `-RecoveryExpr 0x15b122f20 <col:28, col:36> '<dependent type>' contains-errors lvalue
    | |     |       |     `-DeclRefExpr 0x15b122ee8 <col:28> 'const struct json_attr_t *' lvalue ParmVar 0x14b00e248 'cursor' 'const struct json_attr_t *'
    | |     |       `-ImplicitCastExpr 0x15b122fc8 <col:51> 'int' <LValueToRValue>
    | |     |         `-DeclRefExpr 0x15b122f90 <col:51> 'int' lvalue ParmVar 0x14b0266a8 'offset' 'int'
    | |     |-BreakStmt 0x15b123078 <line:36:6>
    | |     |-DefaultStmt 0x15b1230a8 <line:37:2, col:9>
    | |     | `-NullStmt 0x15b1230a0 <col:9>
    | |     `-BreakStmt 0x15b1230c8 <line:39:6>
    | `-BinaryOperator 0x15b1234e0 <line:43:2, line:45:19> 'char *' contains-errors '='
    |   |-DeclRefExpr 0x15b123198 <line:43:2> 'char *' contains-errors lvalue Var 0x14b026908 'targetaddr' 'char *'
    |   `-BinaryOperator 0x15b1234c0 <line:44:6, line:45:19> '<dependent type>' contains-errors '+'
    |     |-BinaryOperator 0x15b1233f8 <line:44:6, col:69> '<dependent type>' contains-errors '+'
    |     | |-CXXDependentScopeMemberExpr 0x15b123260 <col:6, col:26> '<dependent type>' contains-errors lvalue .base
    |     | | `-CXXDependentScopeMemberExpr 0x15b123218 <col:6, col:18> '<dependent type>' contains-errors lvalue .objects
    |     | |   `-RecoveryExpr 0x15b1231f0 <col:6, col:14> '<dependent type>' contains-errors lvalue
    |     | |     `-DeclRefExpr 0x15b1231b8 <col:6> 'const struct json_array_t *' lvalue ParmVar 0x14b026628 'parent' 'const struct json_array_t *'
    |     | `-ParenExpr 0x15b1233d8 <col:33, col:69> '<dependent type>' contains-errors
    |     |   `-BinaryOperator 0x15b1233b8 <col:34, col:63> '<dependent type>' contains-errors '*'
    |     |     |-DeclRefExpr 0x15b1232a8 <col:34> 'int' lvalue ParmVar 0x14b0266a8 'offset' 'int'
    |     |     `-CXXDependentScopeMemberExpr 0x15b123370 <col:43, col:63> '<dependent type>' contains-errors lvalue .stride
    |     |       `-CXXDependentScopeMemberExpr 0x15b123328 <col:43, col:55> '<dependent type>' contains-errors lvalue .objects
    |     |         `-RecoveryExpr 0x15b123300 <col:43, col:51> '<dependent type>' contains-errors lvalue
    |     |           `-DeclRefExpr 0x15b1232c8 <col:43> 'const struct json_array_t *' lvalue ParmVar 0x14b026628 'parent' 'const struct json_array_t *'
    |     `-CXXDependentScopeMemberExpr 0x15b123478 <line:45:6, col:19> '<dependent type>' contains-errors lvalue .offset
    |       `-RecoveryExpr 0x15b123450 <col:6, col:14> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x15b123418 <col:6> 'const struct json_attr_t *' lvalue ParmVar 0x14b00e248 'cursor' 'const struct json_attr_t *'
    |-CallExpr 0x15b123838 <line:46:5, line:47:47> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x15b123640 <line:46:5> 'int ()' Function 0x15b123588 'json_debug_trace' 'int ()'
    | `-ParenExpr 0x15b123818 <col:22, line:47:46> 'char *' contains-errors
    |   `-BinaryOperator 0x15b1237f8 <line:46:23, line:47:36> 'char *' contains-errors ','
    |     |-BinaryOperator 0x15b1237b8 <line:46:23, line:47:28> 'int' contains-errors ','
    |     | |-BinaryOperator 0x15b123778 <line:46:23, line:47:17> '<dependent type>' contains-errors ','
    |     | | |-BinaryOperator 0x15b1236f8 <line:46:23, col:26> 'char *' ','
    |     | | | |-IntegerLiteral 0x15b123660 <col:23> 'int' 1
    |     | | | `-ImplicitCastExpr 0x15b1236e0 <col:26> 'char *' <ArrayToPointerDecay>
    |     | | |   `-StringLiteral 0x15b1236c0 <col:26> 'char[4]' lvalue "STR"
    |     | | `-RecoveryExpr 0x15b123750 <line:47:9, col:17> '<dependent type>' contains-errors lvalue
    |     | |   `-DeclRefExpr 0x15b123718 <col:9> 'const struct json_attr_t *' lvalue ParmVar 0x14b00e248 'cursor' 'const struct json_attr_t *'
    |     | `-DeclRefExpr 0x15b123798 <col:28> 'int' lvalue ParmVar 0x14b0266a8 'offset' 'int'
    |     `-DeclRefExpr 0x15b1237d8 <col:36> 'char *' contains-errors lvalue Var 0x14b026908 'targetaddr' 'char *'
    `-ReturnStmt 0x15b123898 <line:48:5, col:12>
      `-ImplicitCastExpr 0x15b123880 <col:12> 'char *' contains-errors <LValueToRValue>
        `-DeclRefExpr 0x15b123860 <col:12> 'char *' contains-errors lvalue Var 0x14b026908 'targetaddr' 'char *'
