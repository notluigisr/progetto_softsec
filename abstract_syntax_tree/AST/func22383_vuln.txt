TranslationUnitDecl 0x13f055008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13f055eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13f0555d0 '__int128'
|-TypedefDecl 0x13f055f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13f0555f0 'unsigned __int128'
|-TypedefDecl 0x13e00c430 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13e00c200 'struct __NSConstantString_tag'
|   `-Record 0x13f055f80 '__NSConstantString_tag'
|-TypedefDecl 0x13e00c498 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13f055790 '__SVInt8_t'
|-TypedefDecl 0x13e00c500 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13f0557b0 '__SVInt16_t'
|-TypedefDecl 0x13e00c568 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13f0557d0 '__SVInt32_t'
|-TypedefDecl 0x13e00c5d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13f0557f0 '__SVInt64_t'
|-TypedefDecl 0x13e00c638 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13f055810 '__SVUint8_t'
|-TypedefDecl 0x13e00c6a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13f055830 '__SVUint16_t'
|-TypedefDecl 0x13e00c708 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13f055850 '__SVUint32_t'
|-TypedefDecl 0x13e00c770 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13f055870 '__SVUint64_t'
|-TypedefDecl 0x13e00c7d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13f055890 '__SVFloat16_t'
|-TypedefDecl 0x13e00c840 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13f0558b0 '__SVFloat32_t'
|-TypedefDecl 0x13e00c8a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13f0558d0 '__SVFloat64_t'
|-TypedefDecl 0x13e00c910 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13f0558f0 '__SVBfloat16_t'
|-TypedefDecl 0x13e00c978 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13f055910 '__clang_svint8x2_t'
|-TypedefDecl 0x13e00c9e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13f055930 '__clang_svint16x2_t'
|-TypedefDecl 0x13e00ca48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13f055950 '__clang_svint32x2_t'
|-TypedefDecl 0x13e00cab0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13f055970 '__clang_svint64x2_t'
|-TypedefDecl 0x13e00cb18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13f055990 '__clang_svuint8x2_t'
|-TypedefDecl 0x13e00cb80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13f0559b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13e00cbe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13f0559d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13e00cc50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13f0559f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13e00ccb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13f055a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13e00cd20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13f055a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13e00cd88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13f055a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13e00cdf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13f055a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13e00ce58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13f055a90 '__clang_svint8x3_t'
|-TypedefDecl 0x13e00cec0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13f055ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x13e00cf28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13f055ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x13e00cf90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13f055af0 '__clang_svint64x3_t'
|-TypedefDecl 0x13e00cff8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13f055b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x13e00d060 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13f055b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x13e00d0c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13f055b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x13e00d130 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13f055b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x13e00d198 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13f055b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13e00da00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13f055bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13e00da68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13f055bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13e00dad0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13f055bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13e00db38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13f055c10 '__clang_svint8x4_t'
|-TypedefDecl 0x13e00dba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13f055c30 '__clang_svint16x4_t'
|-TypedefDecl 0x13e00dc08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13f055c50 '__clang_svint32x4_t'
|-TypedefDecl 0x13e00dc70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13f055c70 '__clang_svint64x4_t'
|-TypedefDecl 0x13e00dcd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13f055c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x13e00dd40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13f055cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13e00dda8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13f055cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13e00de10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13f055cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13e00de78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13f055d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13e00dee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13f055d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13e00df48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13f055d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13e00dfb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13f055d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13e00e018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13f055d90 '__SVBool_t'
|-TypedefDecl 0x13e00e080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13f055db0 '__clang_svboolx2_t'
|-TypedefDecl 0x13e00e0e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13f055dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x13e00e150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13f055df0 '__SVCount_t'
|-TypedefDecl 0x13e00e1f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13e00e1b0 'char *'
|   `-BuiltinType 0x13f0550b0 'char'
|-TypedefDecl 0x13e00e268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13e00e1b0 'char *'
|   `-BuiltinType 0x13f0550b0 'char'
|-FunctionDecl 0x13e00e3f8 <dataset_diviso_filec/func22383_vuln.c:1:1, line:52:1> line:1:12 invalid vnc_refresh_server_surface 'int (int *)' static
| |-ParmVarDecl 0x13e00e328 <col:39, col:51> col:51 invalid vd 'int *'
| `-CompoundStmt 0x14800a848 <line:2:1, line:52:1>
|   |-DeclStmt 0x13e00e528 <line:3:5, col:10>
|   | `-VarDecl 0x13e00e4c0 <col:5, col:9> col:9 used y 'int'
|   |-DeclStmt 0x13e00e5f0 <line:6:5, col:18>
|   | `-VarDecl 0x13e00e588 <col:5, col:9> col:9 used cmp_bytes 'int'
|   |-DeclStmt 0x13e00e6c0 <line:8:5, col:22>
|   | `-VarDecl 0x13e00e638 <col:5, col:21> col:9 used has_dirty 'int' cinit
|   |   `-IntegerLiteral 0x13e00e6a0 <col:21> 'int' 0
|   |-DeclStmt 0x148008518 <line:10:5, col:33>
|   | |-RecordDecl 0x13e00e6d8 <col:5, col:12> col:12 struct timeval
|   | `-VarDecl 0x13e00e7d8 <col:5, col:20> col:20 invalid tv 'struct timeval'
|   |-IfStmt 0x1480089f8 <line:12:5, line:15:5>
|   | |-UnaryOperator 0x1480085b0 <line:12:9, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x148008598 <col:10, col:14> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-CXXDependentScopeMemberExpr 0x148008550 <col:10, col:14> '<dependent type>' contains-errors lvalue ->non_adaptive
|   | |     `-RecoveryExpr 0x148008530 <col:10> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x1480089d8 <col:28, line:15:5>
|   |   |-CallExpr 0x1480087e0 <line:13:9, col:31> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x148008720 <col:9> 'int ()' Function 0x148008668 'gettimeofday' 'int ()'
|   |   | |-UnaryOperator 0x148008760 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | | `-RecoveryExpr 0x148008740 <col:23> '<dependent type>' contains-errors lvalue
|   |   | `-RecoveryExpr 0x1480087c0 <col:27> '<dependent type>' contains-errors lvalue
|   |   `-BinaryOperator 0x1480089b8 <line:14:9, col:45> 'int' contains-errors '='
|   |     |-DeclRefExpr 0x148008810 <col:9> 'int' lvalue Var 0x13e00e638 'has_dirty' 'int'
|   |     `-CallExpr 0x148008988 <col:21, col:45> '<dependent type>' contains-errors
|   |       |-DeclRefExpr 0x148008910 <col:21> 'int ()' Function 0x148008858 'vnc_update_stats' 'int ()'
|   |       |-RecoveryExpr 0x148008930 <col:38> '<dependent type>' contains-errors lvalue
|   |       `-UnaryOperator 0x148008970 <col:42, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |         `-RecoveryExpr 0x148008950 <col:43> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x148008c08 <line:18:5, col:51> 'int' contains-errors '='
|   | |-DeclRefExpr 0x148008a18 <col:5> 'int' lvalue Var 0x13e00e588 'cmp_bytes' 'int'
|   | `-BinaryOperator 0x148008be8 <col:17, col:51> '<dependent type>' contains-errors '*'
|   |   |-IntegerLiteral 0x148008a38 <col:17> 'int' 16
|   |   `-CallExpr 0x148008bc0 <col:22, col:51> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x148008b38 <col:22> 'int ()' Function 0x148008a80 'ds_get_bytes_per_pixel' 'int ()'
|   |     `-CXXDependentScopeMemberExpr 0x148008b78 <col:45, col:49> '<dependent type>' contains-errors lvalue ->ds
|   |       `-RecoveryExpr 0x148008b58 <col:45> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x148008eb0 <line:19:5, line:21:5>
|   | |-BinaryOperator 0x148008d40 <line:19:9, col:38> 'int' contains-errors '>'
|   | | |-DeclRefExpr 0x148008c28 <col:9> 'int' lvalue Var 0x13e00e588 'cmp_bytes' 'int'
|   | | `-CXXDependentScopeMemberExpr 0x148008cf8 <col:21, col:38> '<dependent type>' contains-errors lvalue ->linesize
|   | |   `-CXXDependentScopeMemberExpr 0x148008cb0 <col:21, col:29> '<dependent type>' contains-errors lvalue ->surface
|   | |     `-CXXDependentScopeMemberExpr 0x148008c68 <col:21, col:25> '<dependent type>' contains-errors lvalue ->ds
|   | |       `-RecoveryExpr 0x148008c48 <col:21> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x148008e98 <col:48, line:21:5>
|   |   `-BinaryOperator 0x148008e78 <line:20:9, col:38> 'int' contains-errors '='
|   |     |-DeclRefExpr 0x148008d60 <col:9> 'int' lvalue Var 0x13e00e588 'cmp_bytes' 'int'
|   |     `-CXXDependentScopeMemberExpr 0x148008e30 <col:21, col:38> '<dependent type>' contains-errors lvalue ->linesize
|   |       `-CXXDependentScopeMemberExpr 0x148008de8 <col:21, col:29> '<dependent type>' contains-errors lvalue ->surface
|   |         `-CXXDependentScopeMemberExpr 0x148008da0 <col:21, col:25> '<dependent type>' contains-errors lvalue ->ds
|   |           `-RecoveryExpr 0x148008d80 <col:21> '<dependent type>' contains-errors lvalue
|   |-ForStmt 0x14800a7c8 <line:24:5, line:50:5>
|   | |-BinaryOperator 0x1480090b8 <line:24:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x148009078 <col:10> 'int' lvalue Var 0x13e00e4c0 'y' 'int'
|   | | `-IntegerLiteral 0x148009098 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x13f122800 <col:17, col:35> 'int' contains-errors '<'
|   | | |-DeclRefExpr 0x1480090d8 <col:17> 'int' lvalue Var 0x13e00e4c0 'y' 'int'
|   | | `-CXXDependentScopeMemberExpr 0x1480091a8 <col:21, col:35> '<dependent type>' contains-errors lvalue ->height
|   | |   `-CXXDependentScopeMemberExpr 0x148009160 <col:21, col:31> '<dependent type>' contains-errors lvalue .ds
|   | |     `-CXXDependentScopeMemberExpr 0x148009118 <col:21, col:25> '<dependent type>' contains-errors lvalue ->guest
|   | |       `-RecoveryExpr 0x1480090f8 <col:21> '<dependent type>' contains-errors lvalue
|   | |-UnaryOperator 0x13f122840 <col:43, col:44> 'int' postfix '++'
|   | | `-DeclRefExpr 0x13f122820 <col:43> 'int' lvalue Var 0x13e00e4c0 'y' 'int'
|   | `-CompoundStmt 0x14800a7b0 <col:48, line:50:5>
|   |   `-IfStmt 0x14800a550 <line:25:9, line:47:9>
|   |     |-UnaryOperator 0x13f122bc8 <line:25:13, col:61> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |     | `-CallExpr 0x13f122b98 <col:14, col:61> '<dependent type>' contains-errors
|   |     |   |-DeclRefExpr 0x13f122938 <col:14> 'int ()' Function 0x13f122880 'bitmap_empty' 'int ()'
|   |     |   |-ArraySubscriptExpr 0x13f122b58 <col:27, col:44> '<dependent type>' contains-errors lvalue
|   |     |   | |-ImplicitCastExpr 0x13f122b28 <col:27, col:37> '<dependent type>' contains-errors <LValueToRValue>
|   |     |   | | `-CXXDependentScopeMemberExpr 0x13f1229c0 <col:27, col:37> '<dependent type>' contains-errors lvalue .dirty
|   |     |   | |   `-CXXDependentScopeMemberExpr 0x13f122978 <col:27, col:31> '<dependent type>' contains-errors lvalue ->guest
|   |     |   | |     `-RecoveryExpr 0x13f122958 <col:27> '<dependent type>' contains-errors lvalue
|   |     |   | `-ImplicitCastExpr 0x13f122b40 <col:43> 'int' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x13f122a08 <col:43> 'int' lvalue Var 0x13e00e4c0 'y' 'int'
|   |     |   `-RecoveryExpr 0x13f122b78 <col:47> '<dependent type>' contains-errors lvalue
|   |     `-CompoundStmt 0x14800a530 <col:64, line:47:9>
|   |       |-DeclStmt 0x13f122c60 <line:26:13, col:18>
|   |       | `-VarDecl 0x13f122bf8 <col:13, col:17> col:17 used x 'int'
|   |       `-ForStmt 0x14800a4f8 <line:33:13, line:46:13>
|   |         |-BinaryOperator 0x13f122ce8 <line:33:18, col:22> 'int' '='
|   |         | |-DeclRefExpr 0x13f122ca8 <col:18> 'int' lvalue Var 0x13f122bf8 'x' 'int'
|   |         | `-IntegerLiteral 0x13f122cc8 <col:22> 'int' 0
|   |         |-<<<NULL>>>
|   |         |-BinaryOperator 0x13f122e78 <col:25, col:48> 'int' contains-errors '<'
|   |         | |-BinaryOperator 0x13f122d60 <col:25, col:29> 'int' '+'
|   |         | | |-ImplicitCastExpr 0x13f122d48 <col:25> 'int' <LValueToRValue>
|   |         | | | `-DeclRefExpr 0x13f122d08 <col:25> 'int' lvalue Var 0x13f122bf8 'x' 'int'
|   |         | | `-IntegerLiteral 0x13f122d28 <col:29> 'int' 15
|   |         | `-CXXDependentScopeMemberExpr 0x13f122e30 <col:34, col:48> '<dependent type>' contains-errors lvalue ->width
|   |         |   `-CXXDependentScopeMemberExpr 0x13f122de8 <col:34, col:44> '<dependent type>' contains-errors lvalue .ds
|   |         |     `-CXXDependentScopeMemberExpr 0x13f122da0 <col:34, col:38> '<dependent type>' contains-errors lvalue ->guest
|   |         |       `-RecoveryExpr 0x13f122d80 <col:34> '<dependent type>' contains-errors lvalue
|   |         |-<<<NULL>>>
|   |         `-CompoundStmt 0x14800a4d0 <line:34:79, line:46:13>
|   |           |-IfStmt 0x13f123250 <line:35:17, line:36:21>
|   |           | |-UnaryOperator 0x13f123230 <line:35:21, col:69> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |           | | `-CallExpr 0x13f123200 <col:22, col:69> '<dependent type>' contains-errors
|   |           | |   |-DeclRefExpr 0x13f123028 <col:22> 'int ()' Function 0x13f122f70 'test_and_clear_bit' 'int ()'
|   |           | |   |-ParenExpr 0x13f1230c0 <col:41, col:48> 'int'
|   |           | |   | `-BinaryOperator 0x13f1230a0 <col:42, col:46> 'int' '/'
|   |           | |   |   |-ImplicitCastExpr 0x13f123088 <col:42> 'int' <LValueToRValue>
|   |           | |   |   | `-DeclRefExpr 0x13f123048 <col:42> 'int' lvalue Var 0x13f122bf8 'x' 'int'
|   |           | |   |   `-IntegerLiteral 0x13f123068 <col:46> 'int' 16
|   |           | |   `-ArraySubscriptExpr 0x13f1231e0 <col:51, col:68> '<dependent type>' contains-errors lvalue
|   |           | |     |-ImplicitCastExpr 0x13f1231b0 <col:51, col:61> '<dependent type>' contains-errors <LValueToRValue>
|   |           | |     | `-CXXDependentScopeMemberExpr 0x13f123148 <col:51, col:61> '<dependent type>' contains-errors lvalue .dirty
|   |           | |     |   `-CXXDependentScopeMemberExpr 0x13f123100 <col:51, col:55> '<dependent type>' contains-errors lvalue ->guest
|   |           | |     |     `-RecoveryExpr 0x13f1230e0 <col:51> '<dependent type>' contains-errors lvalue
|   |           | |     `-ImplicitCastExpr 0x13f1231c8 <col:67> 'int' <LValueToRValue>
|   |           | |       `-DeclRefExpr 0x13f123190 <col:67> 'int' lvalue Var 0x13e00e4c0 'y' 'int'
|   |           | `-ContinueStmt 0x13f123248 <line:36:21>
|   |           |-IfStmt 0x13f1235c0 <line:37:17, line:38:21>
|   |           | |-RecoveryExpr 0x13f123598 <line:37:21, col:65> '_Bool' contains-errors
|   |           | `-ContinueStmt 0x13f1235b8 <line:38:21>
|   |           `-IfStmt 0x14800a330 <line:40:17, line:41:51>
|   |             |-UnaryOperator 0x14800a140 <line:40:21, col:26> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |             | `-ImplicitCastExpr 0x14800a128 <col:22, col:26> '<dependent type>' contains-errors <LValueToRValue>
|   |             |   `-CXXDependentScopeMemberExpr 0x14800a0e0 <col:22, col:26> '<dependent type>' contains-errors lvalue ->non_adaptive
|   |             |     `-RecoveryExpr 0x14800a0c0 <col:22> '<dependent type>' contains-errors lvalue
|   |             `-CallExpr 0x14800a2f0 <line:41:21, col:51> '<dependent type>' contains-errors
|   |               |-DeclRefExpr 0x14800a238 <col:21> 'int ()' Function 0x14800a180 'vnc_rect_updated' 'int ()'
|   |               |-RecoveryExpr 0x14800a258 <col:38> '<dependent type>' contains-errors lvalue
|   |               |-DeclRefExpr 0x14800a278 <col:42> 'int' lvalue Var 0x13f122bf8 'x' 'int'
|   |               |-DeclRefExpr 0x14800a298 <col:45> 'int' lvalue Var 0x13e00e4c0 'y' 'int'
|   |               `-UnaryOperator 0x14800a2d8 <col:48, col:49> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |                 `-RecoveryExpr 0x14800a2b8 <col:49> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x14800a838 <line:51:5, col:12>
|     `-ImplicitCastExpr 0x14800a820 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x14800a800 <col:12> 'int' lvalue Var 0x13e00e638 'has_dirty' 'int'
|-FunctionDecl 0x13f1232e8 <line:37:21> col:21 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0x13f1233e8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x13f123450 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x13f1234b8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x13f123390 <<invalid sloc>> Implicit 883
`-FunctionDecl 0x13f123628 <line:39:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x13f123728 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x13f123790 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x14800a000 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x13f1236d0 <<invalid sloc>> Implicit 882
