TranslationUnitDecl 0x13c055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13c0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13c055bd0 '__int128'
|-TypedefDecl 0x13c056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13c055bf0 'unsigned __int128'
|-TypedefDecl 0x13c80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13c80bc00 'struct __NSConstantString_tag'
|   `-Record 0x13c056580 '__NSConstantString_tag'
|-TypedefDecl 0x13c80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13c055d90 '__SVInt8_t'
|-TypedefDecl 0x13c80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13c055db0 '__SVInt16_t'
|-TypedefDecl 0x13c80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13c055dd0 '__SVInt32_t'
|-TypedefDecl 0x13c80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13c055df0 '__SVInt64_t'
|-TypedefDecl 0x13c80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13c055e10 '__SVUint8_t'
|-TypedefDecl 0x13c80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13c055e30 '__SVUint16_t'
|-TypedefDecl 0x13c80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13c055e50 '__SVUint32_t'
|-TypedefDecl 0x13c80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13c055e70 '__SVUint64_t'
|-TypedefDecl 0x13c80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13c055e90 '__SVFloat16_t'
|-TypedefDecl 0x13c80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13c055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13c80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13c055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13c80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13c055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13c80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13c055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13c80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13c055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13c80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13c055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13c80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13c055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13c80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13c055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13c80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13c055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13c80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13c055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13c80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13c055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13c80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13c056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13c80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13c056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13c80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13c056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13c80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13c056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13c80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13c056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13c80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13c0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13c80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13c0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13c80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13c0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13c80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13c056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13c80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13c056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13c80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13c056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13c80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13c056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13c80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13c056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13c80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13c0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13c80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13c0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13c80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13c0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13c80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13c056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13c80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13c056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13c80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13c056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13c80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13c056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13c80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13c056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13c80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13c0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13c80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13c0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13c80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13c0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13c80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13c056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13c80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13c056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13c80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13c056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13c80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13c056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13c80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13c056390 '__SVBool_t'
|-TypedefDecl 0x13c80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13c0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13c80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13c0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13c80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13c0563f0 '__SVCount_t'
|-TypedefDecl 0x13c80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13c80dbb0 'char *'
|   `-BuiltinType 0x13c0556b0 'char'
|-TypedefDecl 0x13c80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13c80dbb0 'char *'
|   `-BuiltinType 0x13c0556b0 'char'
|-FunctionDecl 0x13c80dfa8 <dataset_diviso_filec/func15062_nonvuln.c:1:1, line:51:1> line:1:5 invalid get_stat_xattr 'int (const char *, int, int *, int *)'
| |-ParmVarDecl 0x13c80dcd8 <col:20, col:32> col:32 used fname 'const char *'
| |-ParmVarDecl 0x13c80dd58 <col:39, col:43> col:43 used fd 'int'
| |-ParmVarDecl 0x13c80de28 <col:47, col:60> col:60 invalid fst 'int *'
| |-ParmVarDecl 0x13c80dea8 <col:65, col:78> col:78 referenced invalid xst 'int *'
| `-CompoundStmt 0x13c82d7c8 <line:2:1, line:51:1>
|   |-DeclStmt 0x13c80e3a8 <line:3:2, col:49>
|   | |-VarDecl 0x13c80e088 <col:2, col:6> col:6 used mode 'int'
|   | |-VarDecl 0x13c80e108 <col:2, col:12> col:12 used rdev_major 'int'
|   | |-VarDecl 0x13c80e188 <col:2, col:24> col:24 used rdev_minor 'int'
|   | |-VarDecl 0x13c80e208 <col:2, col:36> col:36 used uid 'int'
|   | |-VarDecl 0x13c80e288 <col:2, col:41> col:41 used gid 'int'
|   | `-VarDecl 0x13c80e308 <col:2, col:46> col:46 used len 'int'
|   |-DeclStmt 0x13c8274c8 <line:4:2, col:15>
|   | `-VarDecl 0x13c827460 <col:2, col:14> col:7 used buf 'char[256]'
|   |-IfStmt 0x13c8279d8 <line:6:2, line:7:11>
|   | |-BinaryOperator 0x13c827970 <line:6:6, col:72> 'int' contains-errors '||'
|   | | |-BinaryOperator 0x13c827950 <col:6, col:44> 'int' contains-errors '||'
|   | | | |-BinaryOperator 0x13c827930 <col:6, col:17> 'int' contains-errors '>='
|   | | | | |-RecoveryExpr 0x13c827910 <col:6> '<dependent type>' contains-errors lvalue
|   | | | | `-IntegerLiteral 0x13c8274f8 <col:17> 'int' 0
|   | | | `-CallExpr 0x13c827718 <col:22, col:44> '<dependent type>' contains-errors
|   | | |   |-DeclRefExpr 0x13c827690 <col:22> 'int ()' Function 0x13c8275d8 'IS_DEVICE' 'int ()'
|   | | |   `-CXXDependentScopeMemberExpr 0x13c8276d0 <col:32, col:37> '<dependent type>' contains-errors lvalue ->st_mode
|   | | |     `-RecoveryExpr 0x13c8276b0 <col:32> '<dependent type>' contains-errors lvalue
|   | | `-CallExpr 0x13c8278c8 <col:49, col:72> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x13c827840 <col:49> 'int ()' Function 0x13c827788 'IS_SPECIAL' 'int ()'
|   | |   `-CXXDependentScopeMemberExpr 0x13c827880 <col:60, col:65> '<dependent type>' contains-errors lvalue ->st_mode
|   | |     `-RecoveryExpr 0x13c827860 <col:60> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x13c8279c8 <line:7:3, col:11>
|   |   `-UnaryOperator 0x13c8279b0 <col:10, col:11> 'int' prefix '-'
|   |     `-IntegerLiteral 0x13c827990 <col:11> 'int' 1
|   |-IfStmt 0x13c827b60 <line:9:2, line:12:9> has_else
|   | |-RecoveryExpr 0x13c8279f8 <line:9:6> '<dependent type>' contains-errors lvalue
|   | |-BinaryOperator 0x13c827ab8 <line:10:3, col:11> '<dependent type>' contains-errors '='
|   | | |-UnaryOperator 0x13c827a50 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | | `-ImplicitCastExpr 0x13c827a38 <col:4> '<dependent type>' contains-errors <LValueToRValue>
|   | | |   `-RecoveryExpr 0x13c827a18 <col:4> '<dependent type>' contains-errors lvalue
|   | | `-UnaryOperator 0x13c827aa0 <col:10, col:11> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | |   `-ImplicitCastExpr 0x13c827a88 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   | |     `-RecoveryExpr 0x13c827a68 <col:11> '<dependent type>' contains-errors lvalue
|   | `-BinaryOperator 0x13c827b40 <line:12:3, col:9> '<dependent type>' contains-errors '='
|   |   |-RecoveryExpr 0x13c827af8 <col:3> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x13c827ad8 <col:3> 'int *' lvalue ParmVar 0x13c80dea8 'xst' 'int *'
|   |   `-RecoveryExpr 0x13c827b20 <col:9> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x13c8283a8 <line:13:2, line:19:2> has_else
|   | |-ImplicitCastExpr 0x13c827bb0 <line:13:6> 'const char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x13c827b90 <col:6> 'const char *' lvalue ParmVar 0x13c80dcd8 'fname' 'const char *'
|   | |-CompoundStmt 0x13c827f68 <col:13, line:16:2>
|   | | |-BinaryOperator 0x13c827c20 <line:14:3, col:9> 'int' '='
|   | | | |-DeclRefExpr 0x13c827bc8 <col:3> 'int' lvalue ParmVar 0x13c80dd58 'fd' 'int'
|   | | | `-UnaryOperator 0x13c827c08 <col:8, col:9> 'int' prefix '-'
|   | | |   `-IntegerLiteral 0x13c827be8 <col:9> 'int' 1
|   | | `-BinaryOperator 0x13c827f48 <line:15:3, col:61> 'int' contains-errors '='
|   | |   |-DeclRefExpr 0x13c827c40 <col:3> 'int' lvalue Var 0x13c80e308 'len' 'int'
|   | |   `-CallExpr 0x13c827f08 <col:9, col:61> '<dependent type>' contains-errors
|   | |     |-DeclRefExpr 0x13c827d40 <col:9> 'int ()' Function 0x13c827c88 'sys_lgetxattr' 'int ()'
|   | |     |-DeclRefExpr 0x13c827d60 <col:23> 'const char *' lvalue ParmVar 0x13c80dcd8 'fname' 'const char *'
|   | |     |-RecoveryExpr 0x13c827eb0 <col:30> '<dependent type>' contains-errors lvalue
|   | |     |-DeclRefExpr 0x13c827d98 <col:42> 'char[256]' lvalue Var 0x13c827460 'buf' 'char[256]'
|   | |     `-BinaryOperator 0x13c827ee8 <col:47, col:60> 'unsigned long' '-'
|   | |       |-UnaryExprOrTypeTraitExpr 0x13c827dd8 <col:47, col:54> 'unsigned long' sizeof
|   | |       | `-DeclRefExpr 0x13c827db8 <col:54> 'char[256]' lvalue Var 0x13c827460 'buf' 'char[256]' non_odr_use_unevaluated
|   | |       `-ImplicitCastExpr 0x13c827ed0 <col:60> 'unsigned long' <IntegralCast>
|   | |         `-IntegerLiteral 0x13c827df8 <col:60> 'int' 1
|   | `-CompoundStmt 0x13c828388 <line:16:9, line:19:2>
|   |   |-BinaryOperator 0x13c828040 <line:17:3, col:11> 'const char *' '='
|   |   | |-DeclRefExpr 0x13c827f88 <col:3> 'const char *' lvalue ParmVar 0x13c80dcd8 'fname' 'const char *'
|   |   | `-ImplicitCastExpr 0x13c828028 <col:11> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x13c828010 <col:11> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x13c827ff0 <col:11> 'char[4]' lvalue "STR"
|   |   `-BinaryOperator 0x13c828368 <line:18:3, col:58> 'int' contains-errors '='
|   |     |-DeclRefExpr 0x13c828060 <col:3> 'int' lvalue Var 0x13c80e308 'len' 'int'
|   |     `-CallExpr 0x13c828328 <col:9, col:58> '<dependent type>' contains-errors
|   |       |-DeclRefExpr 0x13c828160 <col:9> 'int ()' Function 0x13c8280a8 'sys_fgetxattr' 'int ()'
|   |       |-DeclRefExpr 0x13c828180 <col:23> 'int' lvalue ParmVar 0x13c80dd58 'fd' 'int'
|   |       |-RecoveryExpr 0x13c8282d0 <col:27> '<dependent type>' contains-errors lvalue
|   |       |-DeclRefExpr 0x13c8281b8 <col:39> 'char[256]' lvalue Var 0x13c827460 'buf' 'char[256]'
|   |       `-BinaryOperator 0x13c828308 <col:44, col:57> 'unsigned long' '-'
|   |         |-UnaryExprOrTypeTraitExpr 0x13c8281f8 <col:44, col:51> 'unsigned long' sizeof
|   |         | `-DeclRefExpr 0x13c8281d8 <col:51> 'char[256]' lvalue Var 0x13c827460 'buf' 'char[256]' non_odr_use_unevaluated
|   |         `-ImplicitCastExpr 0x13c8282f0 <col:57> 'unsigned long' <IntegralCast>
|   |           `-IntegerLiteral 0x13c828218 <col:57> 'int' 1
|   |-IfStmt 0x13c829560 <line:20:2, line:23:2>
|   | |-BinaryOperator 0x13c829498 <line:20:6, col:25> 'int' '>='
|   | | |-ImplicitCastExpr 0x13c829480 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13c8283d8 <col:6> 'int' lvalue Var 0x13c80e308 'len' 'int'
|   | | `-CStyleCastExpr 0x13c829458 <col:13, col:25> 'int' <IntegralCast>
|   | |   `-UnaryExprOrTypeTraitExpr 0x13c829420 <col:18, col:25> 'unsigned long' sizeof
|   | |     `-DeclRefExpr 0x13c829400 <col:25> 'char[256]' lvalue Var 0x13c827460 'buf' 'char[256]' non_odr_use_unevaluated
|   | `-CompoundStmt 0x13c829548 <col:30, line:23:2>
|   |   `-BinaryOperator 0x13c829510 <line:21:3, col:10> 'int' '='
|   |     |-DeclRefExpr 0x13c8294b8 <col:3> 'int' lvalue Var 0x13c80e308 'len' 'int'
|   |     `-UnaryOperator 0x13c8294f8 <col:9, col:10> 'int' prefix '-'
|   |       `-IntegerLiteral 0x13c8294d8 <col:10> 'int' 1
|   |-IfStmt 0x13c82a168 <line:24:2, line:35:2>
|   | |-BinaryOperator 0x13c8295d8 <line:24:6, col:12> 'int' '<'
|   | | |-ImplicitCastExpr 0x13c8295c0 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13c829580 <col:6> 'int' lvalue Var 0x13c80e308 'len' 'int'
|   | | `-IntegerLiteral 0x13c8295a0 <col:12> 'int' 0
|   | `-CompoundStmt 0x13c82a138 <col:15, line:35:2>
|   |   |-IfStmt 0x13c8297e0 <line:25:3, line:26:12>
|   |   | |-BinaryOperator 0x13c829778 <line:25:7, col:36> 'int' contains-errors '||'
|   |   | | |-BinaryOperator 0x13c8296f8 <col:7, col:16> 'int' contains-errors '=='
|   |   | | | |-RecoveryExpr 0x13c8296b8 <col:7> '<dependent type>' contains-errors lvalue
|   |   | | | `-RecoveryExpr 0x13c8296d8 <col:16> '<dependent type>' contains-errors lvalue
|   |   | | `-BinaryOperator 0x13c829758 <col:27, col:36> 'int' contains-errors '=='
|   |   | |   |-RecoveryExpr 0x13c829718 <col:27> '<dependent type>' contains-errors lvalue
|   |   | |   `-RecoveryExpr 0x13c829738 <col:36> '<dependent type>' contains-errors lvalue
|   |   | `-ReturnStmt 0x13c8297d0 <line:26:4, col:12>
|   |   |   `-UnaryOperator 0x13c8297b8 <col:11, col:12> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x13c829798 <col:12> 'int' 1
|   |   |-IfStmt 0x13c829c78 <line:27:3, line:31:3>
|   |   | |-BinaryOperator 0x13c829a60 <line:27:7, col:45> 'int' contains-errors '&&'
|   |   | | |-BinaryOperator 0x13c829a40 <col:7, col:16> 'int' contains-errors '=='
|   |   | | | |-RecoveryExpr 0x13c829a00 <col:7> '<dependent type>' contains-errors lvalue
|   |   | | | `-RecoveryExpr 0x13c829a20 <col:16> '<dependent type>' contains-errors lvalue
|   |   | | `-CallExpr 0x13c8299b8 <col:25, col:45> '<dependent type>' contains-errors
|   |   | |   |-DeclRefExpr 0x13c829930 <col:25> 'int ()' Function 0x13c829878 'S_ISLNK' 'int ()'
|   |   | |   `-CXXDependentScopeMemberExpr 0x13c829970 <col:33, col:38> '<dependent type>' contains-errors lvalue ->st_mode
|   |   | |     `-RecoveryExpr 0x13c829950 <col:33> '<dependent type>' contains-errors lvalue
|   |   | `-CompoundStmt 0x13c829c50 <col:48, line:31:3>
|   |   |   |-BinaryOperator 0x13c829b30 <line:28:4, col:18> '<dependent type>' contains-errors '='
|   |   |   | |-CXXDependentScopeMemberExpr 0x13c829ac8 <col:4, col:9> '<dependent type>' contains-errors lvalue ->st_uid
|   |   |   | | `-RecoveryExpr 0x13c829aa0 <col:4> '<dependent type>' contains-errors lvalue
|   |   |   | |   `-DeclRefExpr 0x13c829a80 <col:4> 'int *' lvalue ParmVar 0x13c80dea8 'xst' 'int *'
|   |   |   | `-IntegerLiteral 0x13c829b10 <col:18> 'int' 0
|   |   |   |-BinaryOperator 0x13c829c00 <line:29:4, col:18> '<dependent type>' contains-errors '='
|   |   |   | |-CXXDependentScopeMemberExpr 0x13c829b98 <col:4, col:9> '<dependent type>' contains-errors lvalue ->st_gid
|   |   |   | | `-RecoveryExpr 0x13c829b70 <col:4> '<dependent type>' contains-errors lvalue
|   |   |   | |   `-DeclRefExpr 0x13c829b50 <col:4> 'int *' lvalue ParmVar 0x13c80dea8 'xst' 'int *'
|   |   |   | `-IntegerLiteral 0x13c829be0 <col:18> 'int' 0
|   |   |   `-ReturnStmt 0x13c829c40 <line:30:4, col:11>
|   |   |     `-IntegerLiteral 0x13c829c20 <col:11> 'int' 0
|   |   |-CallExpr 0x13c82a0a8 <line:32:3, line:33:33> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x13c829d78 <line:32:3> 'int ()' Function 0x13c829cc0 'rsyserr' 'int ()'
|   |   | |-RecoveryExpr 0x13c829ff0 <col:11> '<dependent type>' contains-errors lvalue
|   |   | |-RecoveryExpr 0x13c82a010 <col:24> '<dependent type>' contains-errors lvalue
|   |   | |-StringLiteral 0x13c829dc8 <col:31> 'char[4]' lvalue "STR"
|   |   | |-RecoveryExpr 0x13c82a030 <line:33:4> '<dependent type>' contains-errors lvalue
|   |   | `-CallExpr 0x13c82a068 <col:16, col:32> 'int'
|   |   |   |-ImplicitCastExpr 0x13c82a050 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x13c829ee0 <col:16> 'int ()' Function 0x13c829e28 'full_fname' 'int ()'
|   |   |   `-ImplicitCastExpr 0x13c82a090 <col:27> 'const char *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x13c829f00 <col:27> 'const char *' lvalue ParmVar 0x13c80dcd8 'fname' 'const char *'
|   |   `-ReturnStmt 0x13c82a128 <line:34:3, col:11>
|   |     `-UnaryOperator 0x13c82a110 <col:10, col:11> 'int' prefix '-'
|   |       `-IntegerLiteral 0x13c82a0f0 <col:11> 'int' 1
|   |-BinaryOperator 0x13c82a248 <line:36:2, col:13> 'char' '='
|   | |-ArraySubscriptExpr 0x13c82a1f8 <col:2, col:9> 'char' lvalue
|   | | |-ImplicitCastExpr 0x13c82a1c8 <col:2> 'char *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x13c82a188 <col:2> 'char[256]' lvalue Var 0x13c827460 'buf' 'char[256]'
|   | | `-ImplicitCastExpr 0x13c82a1e0 <col:6> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13c82a1a8 <col:6> 'int' lvalue Var 0x13c80e308 'len' 'int'
|   | `-ImplicitCastExpr 0x13c82a230 <col:13> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x13c82a218 <col:13> 'int' 0
|   |-IfStmt 0x13c82d148 <line:38:2, line:43:2>
|   | |-BinaryOperator 0x13c82ce40 <line:38:6, line:39:54> 'int' '!='
|   | | |-CallExpr 0x13c82cd68 <line:38:6, line:39:49> 'int'
|   | | | |-ImplicitCastExpr 0x13c82cd50 <line:38:6> 'int (*)(const char *restrict, const char *restrict, ...)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x13c82cb48 <col:6> 'int (const char *restrict, const char *restrict, ...)' Function 0x13c82a308 'sscanf' 'int (const char *restrict, const char *restrict, ...)'
|   | | | |-ImplicitCastExpr 0x13c82cdd8 <col:13> 'const char *' <NoOp>
|   | | | | `-ImplicitCastExpr 0x13c82cdc0 <col:13> 'char *' <ArrayToPointerDecay>
|   | | | |   `-DeclRefExpr 0x13c82cb68 <col:13> 'char[256]' lvalue Var 0x13c827460 'buf' 'char[256]'
|   | | | |-ImplicitCastExpr 0x13c82ce08 <col:18> 'const char *' <NoOp>
|   | | | | `-ImplicitCastExpr 0x13c82cdf0 <col:18> 'char *' <ArrayToPointerDecay>
|   | | | |   `-StringLiteral 0x13c82cb88 <col:18> 'char[4]' lvalue "STR"
|   | | | |-UnaryOperator 0x13c82cbc8 <line:39:6, col:7> 'int *' prefix '&' cannot overflow
|   | | | | `-DeclRefExpr 0x13c82cba8 <col:7> 'int' lvalue Var 0x13c80e088 'mode' 'int'
|   | | | |-UnaryOperator 0x13c82cc00 <col:13, col:14> 'int *' prefix '&' cannot overflow
|   | | | | `-DeclRefExpr 0x13c82cbe0 <col:14> 'int' lvalue Var 0x13c80e108 'rdev_major' 'int'
|   | | | |-UnaryOperator 0x13c82cc38 <col:26, col:27> 'int *' prefix '&' cannot overflow
|   | | | | `-DeclRefExpr 0x13c82cc18 <col:27> 'int' lvalue Var 0x13c80e188 'rdev_minor' 'int'
|   | | | |-UnaryOperator 0x13c82cc70 <col:39, col:40> 'int *' prefix '&' cannot overflow
|   | | | | `-DeclRefExpr 0x13c82cc50 <col:40> 'int' lvalue Var 0x13c80e208 'uid' 'int'
|   | | | `-UnaryOperator 0x13c82cca8 <col:45, col:46> 'int *' prefix '&' cannot overflow
|   | | |   `-DeclRefExpr 0x13c82cc88 <col:46> 'int' lvalue Var 0x13c80e288 'gid' 'int'
|   | | `-IntegerLiteral 0x13c82ce20 <col:54> 'int' 5
|   | `-CompoundStmt 0x13c82d138 <col:57, line:43:2>
|   |-BinaryOperator 0x13c82d370 <line:45:2, col:36> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x13c82d1b0 <col:2, col:7> '<dependent type>' contains-errors lvalue ->st_mode
|   | | `-RecoveryExpr 0x13c82d188 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x13c82d168 <col:2> 'int *' lvalue ParmVar 0x13c80dea8 'xst' 'int *'
|   | `-CallExpr 0x13c82d330 <col:17, col:36> 'int'
|   |   |-ImplicitCastExpr 0x13c82d318 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x13c82d2d8 <col:17> 'int ()' Function 0x13c82d220 'from_wire_mode' 'int ()'
|   |   `-ImplicitCastExpr 0x13c82d358 <col:32> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x13c82d2f8 <col:32> 'int' lvalue Var 0x13c80e088 'mode' 'int'
|   |-BinaryOperator 0x13c82d5d8 <line:46:2, col:47> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x13c82d3d8 <col:2, col:7> '<dependent type>' contains-errors lvalue ->st_rdev
|   | | `-RecoveryExpr 0x13c82d3b0 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x13c82d390 <col:2> 'int *' lvalue ParmVar 0x13c80dea8 'xst' 'int *'
|   | `-CallExpr 0x13c82d578 <col:17, col:47> 'int'
|   |   |-ImplicitCastExpr 0x13c82d560 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x13c82d500 <col:17> 'int ()' Function 0x13c82d448 'MAKEDEV' 'int ()'
|   |   |-ImplicitCastExpr 0x13c82d5a8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x13c82d520 <col:25> 'int' lvalue Var 0x13c80e108 'rdev_major' 'int'
|   |   `-ImplicitCastExpr 0x13c82d5c0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x13c82d540 <col:37> 'int' lvalue Var 0x13c80e188 'rdev_minor' 'int'
|   |-BinaryOperator 0x13c82d6a8 <line:47:2, col:16> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x13c82d640 <col:2, col:7> '<dependent type>' contains-errors lvalue ->st_uid
|   | | `-RecoveryExpr 0x13c82d618 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x13c82d5f8 <col:2> 'int *' lvalue ParmVar 0x13c80dea8 'xst' 'int *'
|   | `-DeclRefExpr 0x13c82d688 <col:16> 'int' lvalue Var 0x13c80e208 'uid' 'int'
|   |-BinaryOperator 0x13c82d778 <line:48:2, col:16> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x13c82d710 <col:2, col:7> '<dependent type>' contains-errors lvalue ->st_gid
|   | | `-RecoveryExpr 0x13c82d6e8 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x13c82d6c8 <col:2> 'int *' lvalue ParmVar 0x13c80dea8 'xst' 'int *'
|   | `-DeclRefExpr 0x13c82d758 <col:16> 'int' lvalue Var 0x13c80e288 'gid' 'int'
|   `-ReturnStmt 0x13c82d7b8 <line:50:2, col:9>
|     `-IntegerLiteral 0x13c82d798 <col:9> 'int' 0
`-FunctionDecl 0x13c82a308 <line:38:6> col:6 implicit used sscanf 'int (const char *restrict, const char *restrict, ...)' extern
  |-ParmVarDecl 0x13c82ca30 <<invalid sloc>> <invalid sloc> 'const char *restrict'
  |-ParmVarDecl 0x13c82ca98 <<invalid sloc>> <invalid sloc> 'const char *restrict'
  |-BuiltinAttr 0x13c82a3b0 <<invalid sloc>> Implicit 913
  `-FormatAttr 0x13c82cb10 <col:6> Implicit scanf 2 3
