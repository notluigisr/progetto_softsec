TranslationUnitDecl 0x13c855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13c8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13c855bd0 '__int128'
|-TypedefDecl 0x13c856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13c855bf0 'unsigned __int128'
|-TypedefDecl 0x13c926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13c926000 'struct __NSConstantString_tag'
|   `-Record 0x13c856580 '__NSConstantString_tag'
|-TypedefDecl 0x13c926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13c855d90 '__SVInt8_t'
|-TypedefDecl 0x13c926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13c855db0 '__SVInt16_t'
|-TypedefDecl 0x13c926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13c855dd0 '__SVInt32_t'
|-TypedefDecl 0x13c9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13c855df0 '__SVInt64_t'
|-TypedefDecl 0x13c926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13c855e10 '__SVUint8_t'
|-TypedefDecl 0x13c9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13c855e30 '__SVUint16_t'
|-TypedefDecl 0x13c926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13c855e50 '__SVUint32_t'
|-TypedefDecl 0x13c926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13c855e70 '__SVUint64_t'
|-TypedefDecl 0x13c9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13c855e90 '__SVFloat16_t'
|-TypedefDecl 0x13c926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13c855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13c9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13c855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13c926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13c855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13c926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13c855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13c9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13c855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13c926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13c855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13c9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13c855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13c926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13c855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13c926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13c855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13c9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13c855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13c926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13c855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13c926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13c856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13c926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13c856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13c926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13c856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13c926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13c856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13c926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13c856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13c926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13c8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13c926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13c8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13c926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13c8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13c926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13c856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13c926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13c856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13c926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13c856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13c926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13c856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13c926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13c856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13c927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13c8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13c927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13c8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13c9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13c8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13c927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13c856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13c9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13c856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13c927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13c856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13c927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13c856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13c927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13c856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13c927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13c8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13c927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13c8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13c927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13c8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13c927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13c856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13c927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13c856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13c927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13c856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13c927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13c856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13c927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13c856390 '__SVBool_t'
|-TypedefDecl 0x13c927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13c8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13c927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13c8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13c927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13c8563f0 '__SVCount_t'
|-TypedefDecl 0x13c927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13c927fb0 'char *'
|   `-BuiltinType 0x13c8556b0 'char'
|-TypedefDecl 0x13c928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13c927fb0 'char *'
|   `-BuiltinType 0x13c8556b0 'char'
|-FunctionDecl 0x13c928288 <dataset_diviso_filec/func8719_vuln.c:1:1, line:38:1> line:1:1 invalid cib_send_plaintext 'int (int, int *)'
| |-ParmVarDecl 0x13c9280d8 <col:20, col:24> col:24 used sock 'int'
| |-ParmVarDecl 0x13c9281a8 <col:30, col:40> col:40 invalid msg 'int *'
| `-CompoundStmt 0x13e809118 <line:2:1, line:38:1>
|   |-DeclStmt 0x13c928588 <line:3:5, col:47>
|   | `-VarDecl 0x13c928358 <col:5, col:46> col:11 used xml_text 'char *' cinit
|   |   `-CallExpr 0x13c928560 <col:22, col:46> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x13c928520 <col:22> 'int ()' Function 0x13c928468 'dump_xml_unformatted' 'int ()'
|   |     `-RecoveryExpr 0x13c928540 <col:43> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x13e808e08 <line:5:5, line:34:5>
|   | |-BinaryOperator 0x13c928618 <line:5:9, col:21> 'int' contains-errors '!='
|   | | |-DeclRefExpr 0x13c9285a0 <col:9> 'char *' contains-errors lvalue Var 0x13c928358 'xml_text' 'char *'
|   | | `-RecoveryExpr 0x13c9285f8 <col:21> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x13e808dc0 <col:27, line:34:5>
|   |   |-DeclStmt 0x13c9286d8 <line:6:9, col:19>
|   |   | `-VarDecl 0x13c928650 <col:9, col:18> col:13 used rc 'int' cinit
|   |   |   `-IntegerLiteral 0x13c9286b8 <col:18> 'int' 0
|   |   |-DeclStmt 0x13c9287a8 <line:7:9, col:32>
|   |   | `-VarDecl 0x13c928708 <col:9, col:24> col:15 used unsent 'char *' cinit
|   |   |   `-ImplicitCastExpr 0x13c928790 <col:24> 'char *' contains-errors <LValueToRValue>
|   |   |     `-DeclRefExpr 0x13c928770 <col:24> 'char *' contains-errors lvalue Var 0x13c928358 'xml_text' 'char *'
|   |   |-DeclStmt 0x13d009758 <line:8:9, col:35>
|   |   | `-VarDecl 0x13d009000 <col:9, col:34> col:13 used len 'int' cinit
|   |   |   `-ImplicitCastExpr 0x13d009740 <col:19, col:34> 'int' contains-errors <IntegralCast>
|   |   |     `-CallExpr 0x13d0096e8 <col:19, col:34> 'unsigned long' contains-errors
|   |   |       |-ImplicitCastExpr 0x13d0096d0 <col:19> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x13d009640 <col:19> 'unsigned long (const char *)' Function 0x13d0094d0 'strlen' 'unsigned long (const char *)'
|   |   |       `-ImplicitCastExpr 0x13d009728 <col:26> 'const char *' contains-errors <NoOp>
|   |   |         `-ImplicitCastExpr 0x13d009710 <col:26> 'char *' contains-errors <LValueToRValue>
|   |   |           `-DeclRefExpr 0x13d009660 <col:26> 'char *' contains-errors lvalue Var 0x13c928358 'xml_text' 'char *'
|   |   |-UnaryOperator 0x13d009790 <line:10:9, col:12> 'int' contains-errors postfix '++'
|   |   | `-DeclRefExpr 0x13d009770 <col:9> 'int' contains-errors lvalue Var 0x13d009000 'len' 'int'
|   |   |-CallExpr 0x13d009998 <line:11:9, col:35> 'int' contains-errors
|   |   | |-ImplicitCastExpr 0x13d009980 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13d009888 <col:9> 'int ()' Function 0x13d0097d0 'crm_trace' 'int ()'
|   |   | |-ImplicitCastExpr 0x13d0099d0 <col:19> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x13d0098f0 <col:19> 'char[4]' lvalue "STR"
|   |   | |-ImplicitCastExpr 0x13d0099e8 <col:26> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x13d009910 <col:26> 'int' lvalue ParmVar 0x13c9280d8 'sock' 'int'
|   |   | `-ImplicitCastExpr 0x13d009a00 <col:32> 'int' contains-errors <LValueToRValue>
|   |   |   `-DeclRefExpr 0x13d009930 <col:32> 'int' contains-errors lvalue Var 0x13d009000 'len' 'int'
|   |   |-LabelStmt 0x13d009ca0 <line:12:3, line:13:37> 'retry'
|   |   | `-BinaryOperator 0x13d009c30 <col:9, col:37> 'int' contains-errors '='
|   |   |   |-DeclRefExpr 0x13d009a18 <col:9> 'int' lvalue Var 0x13c928650 'rc' 'int'
|   |   |   `-CallExpr 0x13d009bb0 <col:14, col:37> 'int' contains-errors
|   |   |     |-ImplicitCastExpr 0x13d009b98 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x13d009b18 <col:14> 'int ()' Function 0x13d009a60 'write' 'int ()'
|   |   |     |-ImplicitCastExpr 0x13d009be8 <col:20> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x13d009b38 <col:20> 'int' lvalue ParmVar 0x13c9280d8 'sock' 'int'
|   |   |     |-ImplicitCastExpr 0x13d009c00 <col:26> 'char *' contains-errors <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x13d009b58 <col:26> 'char *' contains-errors lvalue Var 0x13c928708 'unsent' 'char *'
|   |   |     `-ImplicitCastExpr 0x13d009c18 <col:34> 'int' contains-errors <LValueToRValue>
|   |   |       `-DeclRefExpr 0x13d009b78 <col:34> 'int' contains-errors lvalue Var 0x13d009000 'len' 'int'
|   |   `-IfStmt 0x13e808d90 <line:14:9, line:33:9> has_else
|   |     |-BinaryOperator 0x13d009d18 <line:14:13, col:18> 'int' '<'
|   |     | |-ImplicitCastExpr 0x13d009d00 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x13d009cc0 <col:13> 'int' lvalue Var 0x13c928650 'rc' 'int'
|   |     | `-IntegerLiteral 0x13d009ce0 <col:18> 'int' 0
|   |     |-CompoundStmt 0x13e808918 <col:21, line:25:9>
|   |     | `-SwitchStmt 0x13d009d88 <line:15:13, line:23:13>
|   |     |   |-RecoveryExpr 0x13d009d68 <line:15:21> '<dependent type>' contains-errors lvalue
|   |     |   `-CompoundStmt 0x13e8088e8 <col:28, line:23:13>
|   |     |     |-CallExpr 0x13d009e38 <line:18:21, col:36> 'int'
|   |     |     | |-ImplicitCastExpr 0x13d009e20 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |     |     | | `-DeclRefExpr 0x13d009de0 <col:21> 'int ()' Function 0x13d0097d0 'crm_trace' 'int ()'
|   |     |     | `-ImplicitCastExpr 0x13d009e60 <col:31> 'char *' <ArrayToPointerDecay>
|   |     |     |   `-StringLiteral 0x13d009e00 <col:31> 'char[4]' lvalue "STR"
|   |     |     |-GotoStmt 0x13d009e78 <line:19:21, col:26> 'retry' 0x13d009c50
|   |     |     |-DefaultStmt 0x13e8088c0 <line:20:17, line:21:55>
|   |     |     | `-CallExpr 0x13e808880 <col:21, col:55> '<dependent type>' contains-errors
|   |     |     |   |-DeclRefExpr 0x13d009f70 <col:21> 'int ()' Function 0x13d009eb8 'crm_perror' 'int ()'
|   |     |     |   |-RecoveryExpr 0x13e808860 <col:32> '<dependent type>' contains-errors lvalue
|   |     |     |   |-StringLiteral 0x13d009fa8 <col:41> 'char[4]' lvalue "STR"
|   |     |     |   |-DeclRefExpr 0x13d009fc8 <col:48> 'int' lvalue Var 0x13c928650 'rc' 'int'
|   |     |     |   `-DeclRefExpr 0x13e808800 <col:52> 'int' contains-errors lvalue Var 0x13d009000 'len' 'int'
|   |     |     `-BreakStmt 0x13e8088e0 <line:22:21>
|   |     `-IfStmt 0x13e808d60 <line:25:16, line:33:9> has_else
|   |       |-BinaryOperator 0x13e8089a0 <line:25:20, col:25> 'int' contains-errors '<'
|   |       | |-ImplicitCastExpr 0x13e808970 <col:20> 'int' <LValueToRValue>
|   |       | | `-DeclRefExpr 0x13e808930 <col:20> 'int' lvalue Var 0x13c928650 'rc' 'int'
|   |       | `-ImplicitCastExpr 0x13e808988 <col:25> 'int' contains-errors <LValueToRValue>
|   |       |   `-DeclRefExpr 0x13e808950 <col:25> 'int' contains-errors lvalue Var 0x13d009000 'len' 'int'
|   |       |-CompoundStmt 0x13e808c00 <col:30, line:31:9>
|   |       | |-CallExpr 0x13e808a58 <line:26:13, col:37> 'int' contains-errors
|   |       | | |-ImplicitCastExpr 0x13e808a40 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |       | | | `-DeclRefExpr 0x13e8089c0 <col:13> 'int ()' Function 0x13d0097d0 'crm_trace' 'int ()'
|   |       | | |-ImplicitCastExpr 0x13e808a90 <col:23> 'char *' <ArrayToPointerDecay>
|   |       | | | `-StringLiteral 0x13e8089e0 <col:23> 'char[4]' lvalue "STR"
|   |       | | |-ImplicitCastExpr 0x13e808aa8 <col:30> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x13e808a00 <col:30> 'int' lvalue Var 0x13c928650 'rc' 'int'
|   |       | | `-ImplicitCastExpr 0x13e808ac0 <col:34> 'int' contains-errors <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x13e808a20 <col:34> 'int' contains-errors lvalue Var 0x13d009000 'len' 'int'
|   |       | |-CompoundAssignOperator 0x13e808b30 <line:27:13, col:20> 'int' contains-errors '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | | |-DeclRefExpr 0x13e808ad8 <col:13> 'int' contains-errors lvalue Var 0x13d009000 'len' 'int'
|   |       | | `-ImplicitCastExpr 0x13e808b18 <col:20> 'int' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x13e808af8 <col:20> 'int' lvalue Var 0x13c928650 'rc' 'int'
|   |       | |-CompoundAssignOperator 0x13e808bb8 <line:28:13, col:23> 'char *' contains-errors '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |       | | |-DeclRefExpr 0x13e808b60 <col:13> 'char *' contains-errors lvalue Var 0x13c928708 'unsent' 'char *'
|   |       | | `-ImplicitCastExpr 0x13e808ba0 <col:23> 'int' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x13e808b80 <col:23> 'int' lvalue Var 0x13c928650 'rc' 'int'
|   |       | `-GotoStmt 0x13e808be8 <line:29:13, col:18> 'retry' 0x13d009c50
|   |       `-CompoundStmt 0x13e808d48 <line:31:16, line:33:9>
|   |         `-CallExpr 0x13e808cc8 <line:32:13, col:42> 'int' contains-errors
|   |           |-ImplicitCastExpr 0x13e808cb0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |           | `-DeclRefExpr 0x13e808c30 <col:13> 'int ()' Function 0x13d0097d0 'crm_trace' 'int ()'
|   |           |-ImplicitCastExpr 0x13e808d00 <col:23> 'char *' <ArrayToPointerDecay>
|   |           | `-StringLiteral 0x13e808c50 <col:23> 'char[4]' lvalue "STR"
|   |           |-ImplicitCastExpr 0x13e808d18 <col:30> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x13e808c70 <col:30> 'int' lvalue Var 0x13c928650 'rc' 'int'
|   |           `-ImplicitCastExpr 0x13e808d30 <col:34> 'char *' contains-errors <LValueToRValue>
|   |             `-DeclRefExpr 0x13e808c90 <col:34> 'char *' contains-errors lvalue Var 0x13c928358 'xml_text' 'char *'
|   |-CallExpr 0x13e809078 <line:35:5, col:18> 'void' contains-errors
|   | |-ImplicitCastExpr 0x13e809060 <col:5> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13e808fd8 <col:5> 'void (void *)' Function 0x13e808e68 'free' 'void (void *)'
|   | `-ImplicitCastExpr 0x13e8090b8 <col:10> 'void *' contains-errors <BitCast>
|   |   `-ImplicitCastExpr 0x13e8090a0 <col:10> 'char *' contains-errors <LValueToRValue>
|   |     `-DeclRefExpr 0x13e808ff8 <col:10> 'char *' contains-errors lvalue Var 0x13c928358 'xml_text' 'char *'
|   `-ReturnStmt 0x13e809108 <line:36:5, col:12>
|     `-RecoveryExpr 0x13e8090e8 <col:12> '<dependent type>' contains-errors lvalue
|-FunctionDecl 0x13d0094d0 <line:8:19> col:19 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x13d0095d0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x13d009578 <<invalid sloc>> Implicit 902
`-FunctionDecl 0x13e808e68 <line:35:5> col:5 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x13e808f68 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x13e808f10 <<invalid sloc>> Implicit 873
