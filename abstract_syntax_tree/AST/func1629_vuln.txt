TranslationUnitDecl 0x107031208 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1070320b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1070317d0 '__int128'
|-TypedefDecl 0x107032128 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1070317f0 'unsigned __int128'
|-TypedefDecl 0x10780be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x10780bc00 'struct __NSConstantString_tag'
|   `-Record 0x107032180 '__NSConstantString_tag'
|-TypedefDecl 0x10780be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x107031990 '__SVInt8_t'
|-TypedefDecl 0x10780bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1070319b0 '__SVInt16_t'
|-TypedefDecl 0x10780bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1070319d0 '__SVInt32_t'
|-TypedefDecl 0x10780bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1070319f0 '__SVInt64_t'
|-TypedefDecl 0x10780c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x107031a10 '__SVUint8_t'
|-TypedefDecl 0x10780c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x107031a30 '__SVUint16_t'
|-TypedefDecl 0x10780c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x107031a50 '__SVUint32_t'
|-TypedefDecl 0x10780c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x107031a70 '__SVUint64_t'
|-TypedefDecl 0x10780c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x107031a90 '__SVFloat16_t'
|-TypedefDecl 0x10780c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x107031ab0 '__SVFloat32_t'
|-TypedefDecl 0x10780c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x107031ad0 '__SVFloat64_t'
|-TypedefDecl 0x10780c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x107031af0 '__SVBfloat16_t'
|-TypedefDecl 0x10780c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x107031b10 '__clang_svint8x2_t'
|-TypedefDecl 0x10780c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x107031b30 '__clang_svint16x2_t'
|-TypedefDecl 0x10780c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x107031b50 '__clang_svint32x2_t'
|-TypedefDecl 0x10780c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x107031b70 '__clang_svint64x2_t'
|-TypedefDecl 0x10780c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x107031b90 '__clang_svuint8x2_t'
|-TypedefDecl 0x10780c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x107031bb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x10780c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x107031bd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x10780c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x107031bf0 '__clang_svuint64x2_t'
|-TypedefDecl 0x10780c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x107031c10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x10780c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x107031c30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x10780c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x107031c50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x10780c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x107031c70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x10780c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x107031c90 '__clang_svint8x3_t'
|-TypedefDecl 0x10780c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x107031cb0 '__clang_svint16x3_t'
|-TypedefDecl 0x10780c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x107031cd0 '__clang_svint32x3_t'
|-TypedefDecl 0x10780c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x107031cf0 '__clang_svint64x3_t'
|-TypedefDecl 0x10780c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x107031d10 '__clang_svuint8x3_t'
|-TypedefDecl 0x10780ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x107031d30 '__clang_svuint16x3_t'
|-TypedefDecl 0x10780cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x107031d50 '__clang_svuint32x3_t'
|-TypedefDecl 0x10780cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x107031d70 '__clang_svuint64x3_t'
|-TypedefDecl 0x10780cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x107031d90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x10780d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x107031db0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x10780d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x107031dd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x10780d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x107031df0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x10780d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x107031e10 '__clang_svint8x4_t'
|-TypedefDecl 0x10780d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x107031e30 '__clang_svint16x4_t'
|-TypedefDecl 0x10780d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x107031e50 '__clang_svint32x4_t'
|-TypedefDecl 0x10780d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x107031e70 '__clang_svint64x4_t'
|-TypedefDecl 0x10780d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x107031e90 '__clang_svuint8x4_t'
|-TypedefDecl 0x10780d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x107031eb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x10780d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x107031ed0 '__clang_svuint32x4_t'
|-TypedefDecl 0x10780d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x107031ef0 '__clang_svuint64x4_t'
|-TypedefDecl 0x10780d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x107031f10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x10780d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x107031f30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x10780d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x107031f50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x10780d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x107031f70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x10780da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x107031f90 '__SVBool_t'
|-TypedefDecl 0x10780da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x107031fb0 '__clang_svboolx2_t'
|-TypedefDecl 0x10780dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x107031fd0 '__clang_svboolx4_t'
|-TypedefDecl 0x10780db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x107031ff0 '__SVCount_t'
|-TypedefDecl 0x10780dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x10780dbb0 'char *'
|   `-BuiltinType 0x1070312b0 'char'
|-TypedefDecl 0x10780dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x10780dbb0 'char *'
|   `-BuiltinType 0x1070312b0 'char'
|-FunctionDecl 0x10780df18 <dataset_diviso_filec/func1629_vuln.c:1:1, line:75:1> line:1:13 invalid r_socket_http_get 'int *(const char *, int *, int *)'
| |-ParmVarDecl 0x10780dcf0 <col:31, col:43> col:43 used url 'const char *'
| |-ParmVarDecl 0x10780dda8 <col:48, col:53> col:53 used code 'int *'
| |-ParmVarDecl 0x10780de28 <col:59, col:64> col:64 used rlen 'int *'
| `-CompoundStmt 0x10782c010 <col:70, line:75:1>
|   |-DeclStmt 0x107827700 <line:2:2, col:39>
|   | `-VarDecl 0x10780dff0 <col:2, col:38> col:8 used curl_env 'char *' cinit
|   |   `-ImplicitCastExpr 0x10780e2b8 <col:19, col:38> 'char *' <IntegralToPointer>
|   |     `-CallExpr 0x10780e278 <col:19, col:38> 'int'
|   |       |-ImplicitCastExpr 0x10780e260 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x10780e1b0 <col:19> 'int ()' Function 0x10780e0f8 'r_sys_getenv' 'int ()'
|   |       `-ImplicitCastExpr 0x10780e2a0 <col:33> 'char *' <ArrayToPointerDecay>
|   |         `-StringLiteral 0x10780e210 <col:33> 'char[4]' lvalue "STR"
|   |-IfStmt 0x1078293e0 <line:3:2, line:17:2>
|   | |-BinaryOperator 0x1078277d0 <line:3:6, col:19> 'int' '&&'
|   | | |-ImplicitCastExpr 0x107827788 <col:6> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x107827718 <col:6> 'char *' lvalue Var 0x10780dff0 'curl_env' 'char *'
|   | | `-ImplicitCastExpr 0x1078277b8 <col:18, col:19> 'int' <IntegralCast>
|   | |   `-ImplicitCastExpr 0x1078277a0 <col:18, col:19> 'char' <LValueToRValue>
|   | |     `-UnaryOperator 0x107827770 <col:18, col:19> 'char' lvalue prefix '*' cannot overflow
|   | |       `-ImplicitCastExpr 0x107827758 <col:19> 'char *' <LValueToRValue>
|   | |         `-DeclRefExpr 0x107827738 <col:19> 'char *' lvalue Var 0x10780dff0 'curl_env' 'char *'
|   | `-CompoundStmt 0x1078293a0 <col:29, line:17:2>
|   |   |-DeclStmt 0x107827a00 <line:4:3, col:41>
|   |   | `-VarDecl 0x107827808 <col:3, col:40> col:9 used encoded_url 'char *' cinit
|   |   |   `-ImplicitCastExpr 0x1078279e8 <col:23, col:40> 'char *' <IntegralToPointer>
|   |   |     `-CallExpr 0x1078279a8 <col:23, col:40> 'int'
|   |   |       |-ImplicitCastExpr 0x107827990 <col:23> 'int (*)()' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x107827950 <col:23> 'int ()' Function 0x107827898 'r_str_escape' 'int ()'
|   |   |       `-ImplicitCastExpr 0x1078279d0 <col:37> 'const char *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x107827970 <col:37> 'const char *' lvalue ParmVar 0x10780dcf0 'url' 'const char *'
|   |   |-DeclStmt 0x107827c68 <line:5:3, col:50>
|   |   | `-VarDecl 0x107827a30 <col:3, col:49> col:9 used res 'char *' cinit
|   |   |   `-ImplicitCastExpr 0x107827c50 <col:15, col:49> 'char *' <IntegralToPointer>
|   |   |     `-CallExpr 0x107827bf0 <col:15, col:49> 'int'
|   |   |       |-ImplicitCastExpr 0x107827bd8 <col:15> 'int (*)()' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x107827b78 <col:15> 'int ()' Function 0x107827ac0 'r_sys_cmd_strf' 'int ()'
|   |   |       |-ImplicitCastExpr 0x107827c20 <col:31> 'char *' <ArrayToPointerDecay>
|   |   |       | `-StringLiteral 0x107827b98 <col:31> 'char[4]' lvalue "STR"
|   |   |       `-ImplicitCastExpr 0x107827c38 <col:38> 'char *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x107827bb8 <col:38> 'char *' lvalue Var 0x107827808 'encoded_url' 'char *'
|   |   |-CallExpr 0x107827ec8 <line:6:3, col:20> 'void'
|   |   | |-ImplicitCastExpr 0x107827eb0 <col:3> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x107827e28 <col:3> 'void (void *)' Function 0x107827cb8 'free' 'void (void *)'
|   |   | `-ImplicitCastExpr 0x107827f08 <col:9> 'void *' <BitCast>
|   |   |   `-ImplicitCastExpr 0x107827ef0 <col:9> 'char *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x107827e48 <col:9> 'char *' lvalue Var 0x107827808 'encoded_url' 'char *'
|   |   |-IfStmt 0x107829220 <line:7:3, line:14:3>
|   |   | |-ImplicitCastExpr 0x107827f40 <line:7:7> 'char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x107827f20 <col:7> 'char *' lvalue Var 0x107827a30 'res' 'char *'
|   |   | `-CompoundStmt 0x107829200 <col:12, line:14:3>
|   |   |   |-IfStmt 0x107828038 <line:8:4, line:10:4>
|   |   |   | |-ImplicitCastExpr 0x107827f78 <line:8:8> 'int *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x107827f58 <col:8> 'int *' lvalue ParmVar 0x10780dda8 'code' 'int *'
|   |   |   | `-CompoundStmt 0x107828020 <col:14, line:10:4>
|   |   |   |   `-BinaryOperator 0x107828000 <line:9:5, col:13> 'int' '='
|   |   |   |     |-UnaryOperator 0x107827fc8 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
|   |   |   |     | `-ImplicitCastExpr 0x107827fb0 <col:6> 'int *' <LValueToRValue>
|   |   |   |     |   `-DeclRefExpr 0x107827f90 <col:6> 'int *' lvalue ParmVar 0x10780dda8 'code' 'int *'
|   |   |   |     `-IntegerLiteral 0x107827fe0 <col:13> 'int' 200
|   |   |   `-IfStmt 0x1078283d0 <line:11:4, line:13:4>
|   |   |     |-ImplicitCastExpr 0x107828078 <line:11:8> 'int *' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x107828058 <col:8> 'int *' lvalue ParmVar 0x10780de28 'rlen' 'int *'
|   |   |     `-CompoundStmt 0x1078283b8 <col:14, line:13:4>
|   |   |       `-BinaryOperator 0x107828398 <line:12:5, col:24> 'int' '='
|   |   |         |-UnaryOperator 0x1078280c8 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
|   |   |         | `-ImplicitCastExpr 0x1078280b0 <col:6> 'int *' <LValueToRValue>
|   |   |         |   `-DeclRefExpr 0x107828090 <col:6> 'int *' lvalue ParmVar 0x10780de28 'rlen' 'int *'
|   |   |         `-ImplicitCastExpr 0x107828380 <col:13, col:24> 'int' <IntegralCast>
|   |   |           `-CallExpr 0x107828328 <col:13, col:24> 'unsigned long'
|   |   |             |-ImplicitCastExpr 0x107828310 <col:13> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |   |             | `-DeclRefExpr 0x107828288 <col:13> 'unsigned long (const char *)' Function 0x107828118 'strlen' 'unsigned long (const char *)'
|   |   |             `-ImplicitCastExpr 0x107828368 <col:21> 'const char *' <NoOp>
|   |   |               `-ImplicitCastExpr 0x107828350 <col:21> 'char *' <LValueToRValue>
|   |   |                 `-DeclRefExpr 0x1078282a8 <col:21> 'char *' lvalue Var 0x107827a30 'res' 'char *'
|   |   |-CallExpr 0x1078292b0 <line:15:3, col:17> 'void'
|   |   | |-ImplicitCastExpr 0x107829298 <col:3> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x107829240 <col:3> 'void (void *)' Function 0x107827cb8 'free' 'void (void *)'
|   |   | `-ImplicitCastExpr 0x1078292f0 <col:9> 'void *' <BitCast>
|   |   |   `-ImplicitCastExpr 0x1078292d8 <col:9> 'char *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x107829260 <col:9> 'char *' lvalue Var 0x10780dff0 'curl_env' 'char *'
|   |   `-ReturnStmt 0x107829390 <line:16:3, col:10>
|   |     `-ImplicitCastExpr 0x107829340 <col:10> 'int *' <BitCast>
|   |       `-ImplicitCastExpr 0x107829328 <col:10> 'char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x107829308 <col:10> 'char *' lvalue Var 0x107827a30 'res' 'char *'
|   |-CallExpr 0x107829470 <line:18:2, col:16> 'void'
|   | |-ImplicitCastExpr 0x107829458 <col:2> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x107829400 <col:2> 'void (void *)' Function 0x107827cb8 'free' 'void (void *)'
|   | `-ImplicitCastExpr 0x1078294b0 <col:8> 'void *' <BitCast>
|   |   `-ImplicitCastExpr 0x107829498 <col:8> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x107829420 <col:8> 'char *' lvalue Var 0x10780dff0 'curl_env' 'char *'
|   |-DeclStmt 0x107829718 <line:20:2, col:41>
|   | `-VarDecl 0x1078294f8 <col:2, col:40> col:6 used ssl 'int' cinit
|   |   `-CallExpr 0x1078296b8 <col:12, col:40> 'int'
|   |     |-ImplicitCastExpr 0x1078296a0 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x107829640 <col:12> 'int ()' Function 0x107829588 'r_str_startswith' 'int ()'
|   |     |-ImplicitCastExpr 0x1078296e8 <col:30> 'const char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x107829660 <col:30> 'const char *' lvalue ParmVar 0x10780dcf0 'url' 'const char *'
|   |     `-ImplicitCastExpr 0x107829700 <col:35> 'char *' <ArrayToPointerDecay>
|   |       `-StringLiteral 0x107829680 <col:35> 'char[4]' lvalue "STR"
|   |-DeclStmt 0x107829990 <line:21:2, col:45>
|   | |-VarDecl 0x107829748 <col:2, col:8> col:8 used response 'char *'
|   | |-VarDecl 0x1078297c8 <col:2, col:19> col:19 used host 'char *'
|   | |-VarDecl 0x107829848 <col:2, col:26> col:26 used path 'char *'
|   | `-VarDecl 0x1078298c8 <col:2, col:40> col:33 used port 'char *' cinit
|   |   `-ImplicitCastExpr 0x107829950 <col:40> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x107829930 <col:40> 'char[4]' lvalue "STR"
|   |-DeclStmt 0x107829cb8 <line:22:2, col:26>
|   | `-VarDecl 0x1078299c0 <col:2, col:25> col:8 used uri 'char *' cinit
|   |   `-CallExpr 0x107829c78 <col:14, col:25> 'char *'
|   |     |-ImplicitCastExpr 0x107829c60 <col:14> 'char *(*)(const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x107829bd8 <col:14> 'char *(const char *)' Function 0x107829a68 'strdup' 'char *(const char *)'
|   |     `-ImplicitCastExpr 0x107829ca0 <col:22> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x107829bf8 <col:22> 'const char *' lvalue ParmVar 0x10780dcf0 'url' 'const char *'
|   |-IfStmt 0x107829d80 <line:23:2, line:25:2>
|   | |-UnaryOperator 0x107829d08 <line:23:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x107829cf0 <col:7> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x107829cd0 <col:7> 'char *' lvalue Var 0x1078299c0 'uri' 'char *'
|   | `-CompoundStmt 0x107829d68 <col:12, line:25:2>
|   |   `-ReturnStmt 0x107829d58 <line:24:3, col:10>
|   |     `-RecoveryExpr 0x107829d38 <col:10> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x107829e80 <line:27:2, line:29:2>
|   | |-ImplicitCastExpr 0x107829dc0 <line:27:6> 'int *' <LValueToRValue>
|   | | `-DeclRefExpr 0x107829da0 <col:6> 'int *' lvalue ParmVar 0x10780dda8 'code' 'int *'
|   | `-CompoundStmt 0x107829e68 <col:12, line:29:2>
|   |   `-BinaryOperator 0x107829e48 <line:28:3, col:11> 'int' '='
|   |     |-UnaryOperator 0x107829e10 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
|   |     | `-ImplicitCastExpr 0x107829df8 <col:4> 'int *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x107829dd8 <col:4> 'int *' lvalue ParmVar 0x10780dda8 'code' 'int *'
|   |     `-IntegerLiteral 0x107829e28 <col:11> 'int' 0
|   |-IfStmt 0x107829f80 <line:30:2, line:32:2>
|   | |-ImplicitCastExpr 0x107829ec0 <line:30:6> 'int *' <LValueToRValue>
|   | | `-DeclRefExpr 0x107829ea0 <col:6> 'int *' lvalue ParmVar 0x10780de28 'rlen' 'int *'
|   | `-CompoundStmt 0x107829f68 <col:12, line:32:2>
|   |   `-BinaryOperator 0x107829f48 <line:31:3, col:11> 'int' '='
|   |     |-UnaryOperator 0x107829f10 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
|   |     | `-ImplicitCastExpr 0x107829ef8 <col:4> 'int *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x107829ed8 <col:4> 'int *' lvalue ParmVar 0x10780de28 'rlen' 'int *'
|   |     `-IntegerLiteral 0x107829f28 <col:11> 'int' 0
|   |-BinaryOperator 0x10782a748 <line:33:2, col:27> 'char *' '='
|   | |-DeclRefExpr 0x107829fa0 <col:2> 'char *' lvalue Var 0x1078297c8 'host' 'char *'
|   | `-CallExpr 0x10782a6b8 <col:9, col:27> 'char *'
|   |   |-ImplicitCastExpr 0x10782a6a0 <col:9> 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x10782a1e0 <col:9> 'char *(const char *, const char *)' Function 0x10782a000 'strstr' 'char *(const char *, const char *)'
|   |   |-ImplicitCastExpr 0x10782a700 <col:17> 'const char *' <NoOp>
|   |   | `-ImplicitCastExpr 0x10782a6e8 <col:17> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x10782a600 <col:17> 'char *' lvalue Var 0x1078299c0 'uri' 'char *'
|   |   `-ImplicitCastExpr 0x10782a730 <col:22> 'const char *' <NoOp>
|   |     `-ImplicitCastExpr 0x10782a718 <col:22> 'char *' <ArrayToPointerDecay>
|   |       `-StringLiteral 0x10782a620 <col:22> 'char[4]' lvalue "STR"
|   |-IfStmt 0x10782aa68 <line:34:2, line:38:2>
|   | |-UnaryOperator 0x10782a7a0 <line:34:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x10782a788 <col:7> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x10782a768 <col:7> 'char *' lvalue Var 0x1078297c8 'host' 'char *'
|   | `-CompoundStmt 0x10782aa40 <col:13, line:38:2>
|   |   |-CallExpr 0x10782a828 <line:35:3, col:12> 'void'
|   |   | |-ImplicitCastExpr 0x10782a810 <col:3> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x10782a7b8 <col:3> 'void (void *)' Function 0x107827cb8 'free' 'void (void *)'
|   |   | `-ImplicitCastExpr 0x10782a868 <col:9> 'void *' <BitCast>
|   |   |   `-ImplicitCastExpr 0x10782a850 <col:9> 'char *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x10782a7d8 <col:9> 'char *' lvalue Var 0x1078299c0 'uri' 'char *'
|   |   |-CallExpr 0x10782a9b8 <line:36:3, col:17> 'int'
|   |   | |-ImplicitCastExpr 0x10782a9a0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x10782a960 <col:3> 'int ()' Function 0x10782a8a8 'eprintf' 'int ()'
|   |   | `-ImplicitCastExpr 0x10782a9e0 <col:12> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x10782a980 <col:12> 'char[4]' lvalue "STR"
|   |   `-ReturnStmt 0x10782aa30 <line:37:3, col:10>
|   |     `-RecoveryExpr 0x10782aa10 <col:10> '<dependent type>' contains-errors lvalue
|   |-CompoundAssignOperator 0x10782aac8 <line:39:2, col:10> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   | |-DeclRefExpr 0x10782aa88 <col:2> 'char *' lvalue Var 0x1078297c8 'host' 'char *'
|   | `-IntegerLiteral 0x10782aaa8 <col:10> 'int' 3
|   |-BinaryOperator 0x10782ae58 <line:40:2, col:26> 'char *' '='
|   | |-DeclRefExpr 0x10782aaf8 <col:2> 'char *' lvalue Var 0x1078298c8 'port' 'char *'
|   | `-CallExpr 0x10782adf8 <col:9, col:26> 'char *'
|   |   |-ImplicitCastExpr 0x10782ade0 <col:9> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x10782ad40 <col:9> 'char *(const char *, int)' Function 0x10782ab60 'strchr' 'char *(const char *, int)'
|   |   |-ImplicitCastExpr 0x10782ae40 <col:17> 'const char *' <NoOp>
|   |   | `-ImplicitCastExpr 0x10782ae28 <col:17> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x10782ad60 <col:17> 'char *' lvalue Var 0x1078297c8 'host' 'char *'
|   |   `-CharacterLiteral 0x10782ad80 <col:23> 'int' 58
|   |-IfStmt 0x10782b0f8 <line:41:2, line:47:2> has_else
|   | |-UnaryOperator 0x10782aeb0 <line:41:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x10782ae98 <col:7> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x10782ae78 <col:7> 'char *' lvalue Var 0x1078298c8 'port' 'char *'
|   | |-CompoundStmt 0x10782afa0 <col:13, line:44:2>
|   | | `-BinaryOperator 0x10782af80 <line:43:3, col:10> 'char *' '='
|   | |   |-DeclRefExpr 0x10782af28 <col:3> 'char *' lvalue Var 0x107829848 'path' 'char *'
|   | |   `-ImplicitCastExpr 0x10782af68 <col:10> 'char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x10782af48 <col:10> 'char *' lvalue Var 0x1078297c8 'host' 'char *'
|   | `-CompoundStmt 0x10782b0d8 <line:44:9, line:47:2>
|   |   |-BinaryOperator 0x10782b040 <line:45:3, col:13> 'char' '='
|   |   | |-UnaryOperator 0x10782aff0 <col:3, col:8> 'char' lvalue prefix '*' cannot overflow
|   |   | | `-UnaryOperator 0x10782afd8 <col:4, col:8> 'char *' postfix '++'
|   |   | |   `-DeclRefExpr 0x10782afb8 <col:4> 'char *' lvalue Var 0x1078298c8 'port' 'char *'
|   |   | `-ImplicitCastExpr 0x10782b028 <col:13> 'char' <IntegralCast>
|   |   |   `-IntegerLiteral 0x10782b008 <col:13> 'int' 0
|   |   `-BinaryOperator 0x10782b0b8 <line:46:3, col:10> 'char *' '='
|   |     |-DeclRefExpr 0x10782b060 <col:3> 'char *' lvalue Var 0x107829848 'path' 'char *'
|   |     `-ImplicitCastExpr 0x10782b0a0 <col:10> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x10782b080 <col:10> 'char *' lvalue Var 0x1078298c8 'port' 'char *'
|   |-BinaryOperator 0x10782b230 <line:48:2, col:26> 'char *' '='
|   | |-DeclRefExpr 0x10782b128 <col:2> 'char *' lvalue Var 0x107829848 'path' 'char *'
|   | `-CallExpr 0x10782b1d0 <col:9, col:26> 'char *'
|   |   |-ImplicitCastExpr 0x10782b1b8 <col:9> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x10782b148 <col:9> 'char *(const char *, int)' Function 0x10782ab60 'strchr' 'char *(const char *, int)'
|   |   |-ImplicitCastExpr 0x10782b218 <col:17> 'const char *' <NoOp>
|   |   | `-ImplicitCastExpr 0x10782b200 <col:17> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x10782b168 <col:17> 'char *' lvalue Var 0x107829848 'path' 'char *'
|   |   `-CharacterLiteral 0x10782b188 <col:23> 'int' 47
|   |-IfStmt 0x10782b428 <line:49:2, line:53:2> has_else
|   | |-UnaryOperator 0x10782b288 <line:49:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x10782b270 <col:7> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x10782b250 <col:7> 'char *' lvalue Var 0x107829848 'path' 'char *'
|   | |-CompoundStmt 0x10782b350 <col:13, line:51:2>
|   | | `-BinaryOperator 0x10782b330 <line:50:3, col:10> 'char *' '='
|   | |   |-DeclRefExpr 0x10782b2a0 <col:3> 'char *' lvalue Var 0x107829848 'path' 'char *'
|   | |   `-ImplicitCastExpr 0x10782b318 <col:10> 'char *' <ArrayToPointerDecay>
|   | |     `-StringLiteral 0x10782b300 <col:10> 'char[1]' lvalue ""
|   | `-CompoundStmt 0x10782b410 <line:51:9, line:53:2>
|   |   `-BinaryOperator 0x10782b3f0 <line:52:3, col:13> 'char' '='
|   |     |-UnaryOperator 0x10782b3a0 <col:3, col:8> 'char' lvalue prefix '*' cannot overflow
|   |     | `-UnaryOperator 0x10782b388 <col:4, col:8> 'char *' postfix '++'
|   |     |   `-DeclRefExpr 0x10782b368 <col:4> 'char *' lvalue Var 0x107829848 'path' 'char *'
|   |     `-ImplicitCastExpr 0x10782b3d8 <col:13> 'char' <IntegralCast>
|   |       `-IntegerLiteral 0x10782b3b8 <col:13> 'int' 0
|   |-IfStmt 0x10782b780 <line:55:2, line:59:2>
|   | |-RecoveryExpr 0x10782b5d0 <line:55:6, col:7> '_Bool' contains-errors
|   | `-CompoundStmt 0x10782b760 <col:10, line:59:2>
|   |   |-CallExpr 0x10782b658 <line:56:3, col:17> 'int'
|   |   | |-ImplicitCastExpr 0x10782b640 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x10782b600 <col:3> 'int ()' Function 0x10782a8a8 'eprintf' 'int ()'
|   |   | `-ImplicitCastExpr 0x10782b680 <col:12> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x10782b620 <col:12> 'char[4]' lvalue "STR"
|   |   `-CallExpr 0x10782b708 <line:57:3, col:12> 'void'
|   |     |-ImplicitCastExpr 0x10782b6f0 <col:3> 'void (*)(void *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x10782b698 <col:3> 'void (void *)' Function 0x107827cb8 'free' 'void (void *)'
|   |     `-ImplicitCastExpr 0x10782b748 <col:9> 'void *' <BitCast>
|   |       `-ImplicitCastExpr 0x10782b730 <col:9> 'char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x10782b6b8 <col:9> 'char *' lvalue Var 0x1078299c0 'uri' 'char *'
|   |-IfStmt 0x10782bdb8 <line:60:2, line:71:2> has_else
|   | |-RecoveryExpr 0x10782b900 <line:60:6, col:44> '_Bool' contains-errors
|   | |-CompoundStmt 0x10782bc58 <col:47, line:68:2>
|   | `-CompoundStmt 0x10782bda0 <col:9, line:71:2>
|   |   `-CallExpr 0x10782bd00 <line:69:3, col:29> 'int'
|   |     |-ImplicitCastExpr 0x10782bce8 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x10782bc68 <col:3> 'int ()' Function 0x10782a8a8 'eprintf' 'int ()'
|   |     |-ImplicitCastExpr 0x10782bd38 <col:12> 'char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x10782bc88 <col:12> 'char[4]' lvalue "STR"
|   |     |-ImplicitCastExpr 0x10782bd50 <col:19> 'char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x10782bca8 <col:19> 'char *' lvalue Var 0x1078297c8 'host' 'char *'
|   |     `-ImplicitCastExpr 0x10782bd68 <col:25> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x10782bcc8 <col:25> 'char *' lvalue Var 0x1078298c8 'port' 'char *'
|   |-CallExpr 0x10782be58 <line:72:2, col:11> 'void'
|   | |-ImplicitCastExpr 0x10782be40 <col:2> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x10782bde8 <col:2> 'void (void *)' Function 0x107827cb8 'free' 'void (void *)'
|   | `-ImplicitCastExpr 0x10782be98 <col:8> 'void *' <BitCast>
|   |   `-ImplicitCastExpr 0x10782be80 <col:8> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x10782be08 <col:8> 'char *' lvalue Var 0x1078299c0 'uri' 'char *'
|   `-ReturnStmt 0x10782c000 <line:74:2, col:9>
|     `-ImplicitCastExpr 0x10782bfe8 <col:9> 'int *' <BitCast>
|       `-ImplicitCastExpr 0x10782bfd0 <col:9> 'char *' <LValueToRValue>
|         `-DeclRefExpr 0x10782bfb0 <col:9> 'char *' lvalue Var 0x107829748 'response' 'char *'
|-FunctionDecl 0x107827cb8 <line:6:3> col:3 implicit used free 'void (void *)' extern
| |-ParmVarDecl 0x107827db8 <<invalid sloc>> <invalid sloc> 'void *'
| `-BuiltinAttr 0x107827d60 <<invalid sloc>> Implicit 873
|-FunctionDecl 0x107828118 <line:12:13> col:13 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x107828218 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x1078281c0 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x107829a68 <line:22:14> col:14 implicit used strdup 'char *(const char *)' extern
| |-ParmVarDecl 0x107829b68 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x107829b10 <<invalid sloc>> Implicit 950
|-FunctionDecl 0x10782a000 <line:33:9> col:9 implicit used strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x10782a100 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x10782a168 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x10782a0a8 <<invalid sloc>> Implicit 898
`-FunctionDecl 0x10782ab60 <line:40:9> col:9 implicit used strchr 'char *(const char *, int)' extern
  |-ParmVarDecl 0x10782ac60 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x10782acc8 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x10782ac08 <<invalid sloc>> Implicit 893
