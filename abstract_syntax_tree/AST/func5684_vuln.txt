TranslationUnitDecl 0x148841608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1488424b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x148841bd0 '__int128'
|-TypedefDecl 0x148842528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x148841bf0 'unsigned __int128'
|-TypedefDecl 0x149048c30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x149048a00 'struct __NSConstantString_tag'
|   `-Record 0x148842580 '__NSConstantString_tag'
|-TypedefDecl 0x149048c98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x148841d90 '__SVInt8_t'
|-TypedefDecl 0x149048d00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x148841db0 '__SVInt16_t'
|-TypedefDecl 0x149048d68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x148841dd0 '__SVInt32_t'
|-TypedefDecl 0x149048dd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x148841df0 '__SVInt64_t'
|-TypedefDecl 0x149048e38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x148841e10 '__SVUint8_t'
|-TypedefDecl 0x149048ea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x148841e30 '__SVUint16_t'
|-TypedefDecl 0x149048f08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x148841e50 '__SVUint32_t'
|-TypedefDecl 0x149048f70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x148841e70 '__SVUint64_t'
|-TypedefDecl 0x149048fd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x148841e90 '__SVFloat16_t'
|-TypedefDecl 0x149049040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x148841eb0 '__SVFloat32_t'
|-TypedefDecl 0x1490490a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x148841ed0 '__SVFloat64_t'
|-TypedefDecl 0x149049110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x148841ef0 '__SVBfloat16_t'
|-TypedefDecl 0x149049178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x148841f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1490491e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x148841f30 '__clang_svint16x2_t'
|-TypedefDecl 0x149049248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x148841f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1490492b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x148841f70 '__clang_svint64x2_t'
|-TypedefDecl 0x149049318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x148841f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x149049380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x148841fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1490493e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x148841fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x149049450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x148841ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1490494b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x148842010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x149049520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x148842030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x149049588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x148842050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1490495f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x148842070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x149049658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x148842090 '__clang_svint8x3_t'
|-TypedefDecl 0x1490496c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1488420b0 '__clang_svint16x3_t'
|-TypedefDecl 0x149049728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1488420d0 '__clang_svint32x3_t'
|-TypedefDecl 0x149049790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1488420f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1490497f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x148842110 '__clang_svuint8x3_t'
|-TypedefDecl 0x149049860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x148842130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1490498c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x148842150 '__clang_svuint32x3_t'
|-TypedefDecl 0x149049930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x148842170 '__clang_svuint64x3_t'
|-TypedefDecl 0x149049998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x148842190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14904a200 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1488421b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14904a268 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1488421d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14904a2d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1488421f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14904a338 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x148842210 '__clang_svint8x4_t'
|-TypedefDecl 0x14904a3a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x148842230 '__clang_svint16x4_t'
|-TypedefDecl 0x14904a408 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x148842250 '__clang_svint32x4_t'
|-TypedefDecl 0x14904a470 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x148842270 '__clang_svint64x4_t'
|-TypedefDecl 0x14904a4d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x148842290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14904a540 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1488422b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14904a5a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1488422d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14904a610 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1488422f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14904a678 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x148842310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14904a6e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x148842330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14904a748 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x148842350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14904a7b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x148842370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14904a818 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x148842390 '__SVBool_t'
|-TypedefDecl 0x14904a880 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1488423b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14904a8e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1488423d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14904a950 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1488423f0 '__SVCount_t'
|-TypedefDecl 0x14904a9f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14904a9b0 'char *'
|   `-BuiltinType 0x1488416b0 'char'
|-TypedefDecl 0x14904aa68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14904a9b0 'char *'
|   `-BuiltinType 0x1488416b0 'char'
|-FunctionDecl 0x14904af58 <dataset_diviso_filec/func5684_vuln.c:1:1, line:91:1> line:1:1 invalid builtin_compile_impl 'int (int *, int *, int *, const char *, int, int, int)'
| |-ParmVarDecl 0x14904ab28 <col:22, col:32> col:32 invalid module 'int *'
| |-ParmVarDecl 0x14904aba8 <col:40, col:50> col:50 invalid source 'int *'
| |-ParmVarDecl 0x14904ac28 <col:58, col:68> col:68 invalid filename 'int *'
| |-ParmVarDecl 0x14904aca8 <line:2:22, col:34> col:34 used mode 'const char *'
| |-ParmVarDecl 0x14904ad28 <col:40, col:44> col:44 used flags 'int'
| |-ParmVarDecl 0x14904ada8 <col:51, col:55> col:55 used dont_inherit 'int'
| |-ParmVarDecl 0x14904ae28 <line:3:22, col:26> col:26 used optimize 'int'
| `-CompoundStmt 0x149050070 <line:5:1, line:91:1>
|   |-DeclStmt 0x14904b0d0 <line:7:5, col:20>
|   | `-VarDecl 0x14904b068 <col:5, col:17> col:17 used str 'const char *'
|   |-DeclStmt 0x14904b1a0 <line:8:5, col:26>
|   | `-VarDecl 0x14904b100 <col:5, col:25> col:9 used compile_mode 'int' cinit
|   |   `-UnaryOperator 0x14904b188 <col:24, col:25> 'int' prefix '-'
|   |     `-IntegerLiteral 0x14904b168 <col:25> 'int' 1
|   |-DeclStmt 0x14a012868 <line:9:5, col:15>
|   | `-VarDecl 0x14a012800 <col:5, col:9> col:9 used is_ast 'int'
|   |-DeclStmt 0x14a012988 <line:11:5, col:66>
|   | `-VarDecl 0x14a0128d8 <col:5, col:15> col:9 used start 'int[]'
|   |-IfStmt 0x14a012e18 <line:16:5, line:22:5>
|   | |-RecoveryExpr 0x14a012af0 <line:16:9, line:17:82> '_Bool' contains-errors
|   | `-CompoundStmt 0x14a012df8 <line:18:5, line:22:5>
|   |   |-CallExpr 0x14a012d60 <line:19:9, line:20:30> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x14a012c70 <line:19:9> 'int ()' Function 0x14a012bb8 'PyErr_SetString' 'int ()'
|   |   | |-RecoveryExpr 0x14a012d40 <col:25> '<dependent type>' contains-errors lvalue
|   |   | `-StringLiteral 0x14a012cf0 <line:20:25> 'char[4]' lvalue "STR"
|   |   `-GotoStmt 0x14a012de0 <line:21:9, col:14> 'error' 0x14a012d90
|   |-IfStmt 0x14a012fd0 <line:25:5, line:29:5>
|   | |-BinaryOperator 0x14a012f40 <line:25:9, col:37> 'int' '||'
|   | | |-BinaryOperator 0x14a012ea8 <col:9, col:21> 'int' '<'
|   | | | |-ImplicitCastExpr 0x14a012e90 <col:9> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x14a012e38 <col:9> 'int' lvalue ParmVar 0x14904ae28 'optimize' 'int'
|   | | | `-UnaryOperator 0x14a012e78 <col:20, col:21> 'int' prefix '-'
|   | | |   `-IntegerLiteral 0x14a012e58 <col:21> 'int' 1
|   | | `-BinaryOperator 0x14a012f20 <col:26, col:37> 'int' '>'
|   | |   |-ImplicitCastExpr 0x14a012f08 <col:26> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x14a012ec8 <col:26> 'int' lvalue ParmVar 0x14904ae28 'optimize' 'int'
|   | |   `-IntegerLiteral 0x14a012ee8 <col:37> 'int' 2
|   | `-CompoundStmt 0x14a012fb8 <col:40, line:29:5>
|   |   `-GotoStmt 0x14a012fa0 <line:28:9, col:14> 'error' 0x14a012d90
|   |-IfStmt 0x14a013150 <line:31:5, line:33:5>
|   | |-UnaryOperator 0x14a013028 <line:31:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x14a013010 <col:10> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x14a012ff0 <col:10> 'int' lvalue ParmVar 0x14904ada8 'dont_inherit' 'int'
|   | `-CompoundStmt 0x14a013140 <col:24, line:33:5>
|   |-IfStmt 0x14904dde8 <line:35:5, line:45:5> has_else
|   | |-BinaryOperator 0x14a013500 <line:35:9, col:32> 'int' '=='
|   | | |-CallExpr 0x14a013468 <col:9, col:27> 'int'
|   | | | |-ImplicitCastExpr 0x14a013450 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x14a013390 <col:9> 'int (const char *, const char *)' Function 0x14a0131b0 'strcmp' 'int (const char *, const char *)'
|   | | | |-ImplicitCastExpr 0x14a013498 <col:16> 'const char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x14a0133b0 <col:16> 'const char *' lvalue ParmVar 0x14904aca8 'mode' 'const char *'
|   | | | `-ImplicitCastExpr 0x14a0134c8 <col:22> 'const char *' <NoOp>
|   | | |   `-ImplicitCastExpr 0x14a0134b0 <col:22> 'char *' <ArrayToPointerDecay>
|   | | |     `-StringLiteral 0x14a0133d0 <col:22> 'char[4]' lvalue "STR"
|   | | `-IntegerLiteral 0x14a0134e0 <col:32> 'int' 0
|   | |-BinaryOperator 0x14a013560 <line:36:9, col:24> 'int' '='
|   | | |-DeclRefExpr 0x14a013520 <col:9> 'int' lvalue Var 0x14904b100 'compile_mode' 'int'
|   | | `-IntegerLiteral 0x14a013540 <col:24> 'int' 0
|   | `-IfStmt 0x14904ddb8 <line:37:10, line:45:5> has_else
|   |   |-BinaryOperator 0x14a0136c0 <line:37:14, col:37> 'int' '=='
|   |   | |-CallExpr 0x14a013628 <col:14, col:32> 'int'
|   |   | | |-ImplicitCastExpr 0x14a013610 <col:14> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x14a013580 <col:14> 'int (const char *, const char *)' Function 0x14a0131b0 'strcmp' 'int (const char *, const char *)'
|   |   | | |-ImplicitCastExpr 0x14a013658 <col:21> 'const char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x14a0135a0 <col:21> 'const char *' lvalue ParmVar 0x14904aca8 'mode' 'const char *'
|   |   | | `-ImplicitCastExpr 0x14a013688 <col:27> 'const char *' <NoOp>
|   |   | |   `-ImplicitCastExpr 0x14a013670 <col:27> 'char *' <ArrayToPointerDecay>
|   |   | |     `-StringLiteral 0x14a0135c0 <col:27> 'char[4]' lvalue "STR"
|   |   | `-IntegerLiteral 0x14a0136a0 <col:37> 'int' 0
|   |   |-BinaryOperator 0x14a013720 <line:38:9, col:24> 'int' '='
|   |   | |-DeclRefExpr 0x14a0136e0 <col:9> 'int' lvalue Var 0x14904b100 'compile_mode' 'int'
|   |   | `-IntegerLiteral 0x14a013700 <col:24> 'int' 1
|   |   `-IfStmt 0x14904dd88 <line:39:10, line:45:5> has_else
|   |     |-BinaryOperator 0x14904dc98 <line:39:14, col:37> 'int' '=='
|   |     | |-CallExpr 0x14904dc00 <col:14, col:32> 'int'
|   |     | | |-ImplicitCastExpr 0x14a0137d0 <col:14> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |     | | | `-DeclRefExpr 0x14a013740 <col:14> 'int (const char *, const char *)' Function 0x14a0131b0 'strcmp' 'int (const char *, const char *)'
|   |     | | |-ImplicitCastExpr 0x14904dc30 <col:21> 'const char *' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x14a013760 <col:21> 'const char *' lvalue ParmVar 0x14904aca8 'mode' 'const char *'
|   |     | | `-ImplicitCastExpr 0x14904dc60 <col:27> 'const char *' <NoOp>
|   |     | |   `-ImplicitCastExpr 0x14904dc48 <col:27> 'char *' <ArrayToPointerDecay>
|   |     | |     `-StringLiteral 0x14a013780 <col:27> 'char[4]' lvalue "STR"
|   |     | `-IntegerLiteral 0x14904dc78 <col:37> 'int' 0
|   |     |-BinaryOperator 0x14904dcf8 <line:40:9, col:24> 'int' '='
|   |     | |-DeclRefExpr 0x14904dcb8 <col:9> 'int' lvalue Var 0x14904b100 'compile_mode' 'int'
|   |     | `-IntegerLiteral 0x14904dcd8 <col:24> 'int' 2
|   |     `-CompoundStmt 0x14904dd70 <line:41:10, line:45:5>
|   |       `-GotoStmt 0x14904dd58 <line:44:9, col:14> 'error' 0x14a012d90
|   |-BinaryOperator 0x14904df80 <line:47:5, col:32> 'int' contains-errors '='
|   | |-DeclRefExpr 0x14904de18 <col:5> 'int' lvalue Var 0x14a012800 'is_ast' 'int'
|   | `-CallExpr 0x14904df58 <col:14, col:32> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x14904df18 <col:14> 'int ()' Function 0x14904de60 'PyAST_Check' 'int ()'
|   |   `-RecoveryExpr 0x14904df38 <col:26> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x14904e048 <line:48:5, line:49:14>
|   | |-BinaryOperator 0x14904e010 <line:48:9, col:20> 'int' '=='
|   | | |-ImplicitCastExpr 0x14904dff8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x14904dfa0 <col:9> 'int' lvalue Var 0x14a012800 'is_ast' 'int'
|   | | `-UnaryOperator 0x14904dfe0 <col:19, col:20> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x14904dfc0 <col:20> 'int' 1
|   | `-GotoStmt 0x14904e030 <line:49:9, col:14> 'error' 0x14a012d90
|   |-IfStmt 0x14904e960 <line:50:5, line:76:5>
|   | |-ImplicitCastExpr 0x14904e088 <line:50:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x14904e068 <col:9> 'int' lvalue Var 0x14a012800 'is_ast' 'int'
|   | `-CompoundStmt 0x14904e940 <col:17, line:76:5>
|   |   |-IfStmt 0x14904e8a8 <line:51:9, line:74:9> has_else
|   |   | |-RecoveryExpr 0x14904e0c0 <line:51:13, col:21> '_Bool' contains-errors
|   |   | |-CompoundStmt 0x14904e248 <col:36, line:54:9>
|   |   | | `-CallExpr 0x14904e200 <line:52:13, col:29> '<dependent type>' contains-errors
|   |   | |   |-DeclRefExpr 0x14904e1c0 <col:13> 'int ()' Function 0x14904e108 'Py_INCREF' 'int ()'
|   |   | |   `-RecoveryExpr 0x14904e1e0 <col:23> '<dependent type>' contains-errors lvalue
|   |   | `-CompoundStmt 0x14904e880 <line:55:14, line:74:9>
|   |   |   |-IfStmt 0x14904e400 <line:60:13, line:61:22>
|   |   |   | |-RecoveryExpr 0x14904e3c8 <line:60:17, col:26> '_Bool' contains-errors
|   |   |   | `-GotoStmt 0x14904e3e8 <line:61:17, col:22> 'error' 0x14a012d90
|   |   |   |-IfStmt 0x14904e6b0 <line:63:13, line:66:13>
|   |   |   | |-RecoveryExpr 0x14904e560 <line:63:17, col:24> '_Bool' contains-errors
|   |   |   | `-CompoundStmt 0x14904e698 <col:30, line:66:13>
|   |   |   |   `-GotoStmt 0x14904e680 <line:65:17, col:22> 'error' 0x14a012d90
|   |   |   `-IfStmt 0x14904e840 <line:67:13, line:70:13>
|   |   |     |-RecoveryExpr 0x14904e7d0 <line:67:17, col:36> '_Bool' contains-errors
|   |   |     `-CompoundStmt 0x14904e828 <col:39, line:70:13>
|   |   |       `-GotoStmt 0x14904e810 <line:69:17, col:22> 'error' 0x14a012d90
|   |   `-GotoStmt 0x14904e928 <line:75:9, col:14> 'finally' 0x14904e8d8
|   |-IfStmt 0x14904eb38 <line:79:5, line:80:14>
|   | |-RecoveryExpr 0x14904eb00 <line:79:9, col:16> '_Bool' contains-errors
|   | `-GotoStmt 0x14904eb20 <line:80:9, col:14> 'error' 0x14a012d90
|   |-GotoStmt 0x14904fec8 <line:84:5, col:10> 'finally' 0x14904e8d8
|   |-LabelStmt 0x14904fee8 <line:86:1, col:6> 'error'
|   | `-NullStmt 0x14904fee0 <col:6>
|   `-LabelStmt 0x149050050 <line:88:1, line:89:23> 'finally'
|     `-CallExpr 0x149050028 <col:5, col:23> '<dependent type>' contains-errors
|       |-DeclRefExpr 0x14904ffe8 <col:5> 'int ()' Function 0x14904ff30 'Py_DECREF' 'int ()'
|       `-RecoveryExpr 0x149050008 <col:15> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x14a0131b0 <line:35:9> col:9 implicit used strcmp 'int (const char *, const char *)' extern
  |-ParmVarDecl 0x14a0132b0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x14a013318 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x14a013258 <<invalid sloc>> Implicit 887
