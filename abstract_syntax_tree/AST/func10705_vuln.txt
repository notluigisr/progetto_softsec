TranslationUnitDecl 0x127855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1278564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x127855bd0 '__int128'
|-TypedefDecl 0x127856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x127855bf0 'unsigned __int128'
|-TypedefDecl 0x13000be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13000bc00 'struct __NSConstantString_tag'
|   `-Record 0x127856580 '__NSConstantString_tag'
|-TypedefDecl 0x13000be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x127855d90 '__SVInt8_t'
|-TypedefDecl 0x13000bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x127855db0 '__SVInt16_t'
|-TypedefDecl 0x13000bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x127855dd0 '__SVInt32_t'
|-TypedefDecl 0x13000bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x127855df0 '__SVInt64_t'
|-TypedefDecl 0x13000c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x127855e10 '__SVUint8_t'
|-TypedefDecl 0x13000c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x127855e30 '__SVUint16_t'
|-TypedefDecl 0x13000c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x127855e50 '__SVUint32_t'
|-TypedefDecl 0x13000c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x127855e70 '__SVUint64_t'
|-TypedefDecl 0x13000c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x127855e90 '__SVFloat16_t'
|-TypedefDecl 0x13000c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x127855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13000c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x127855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13000c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x127855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13000c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x127855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13000c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x127855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13000c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x127855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13000c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x127855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13000c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x127855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13000c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x127855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13000c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x127855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13000c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x127855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13000c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x127856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13000c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x127856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13000c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x127856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13000c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x127856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13000c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x127856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13000c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1278560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13000c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1278560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13000c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1278560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13000c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x127856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13000ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x127856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13000cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x127856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13000cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x127856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13000cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x127856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13000d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1278561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13000d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1278561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13000d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1278561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13000d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x127856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13000d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x127856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13000d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x127856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13000d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x127856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13000d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x127856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13000d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1278562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13000d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1278562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13000d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1278562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13000d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x127856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13000d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x127856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13000d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x127856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13000d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x127856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13000da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x127856390 '__SVBool_t'
|-TypedefDecl 0x13000da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1278563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13000dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1278563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13000db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1278563f0 '__SVCount_t'
|-TypedefDecl 0x13000dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13000dbb0 'char *'
|   `-BuiltinType 0x1278556b0 'char'
|-TypedefDecl 0x13000dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13000dbb0 'char *'
|   `-BuiltinType 0x1278556b0 'char'
`-FunctionDecl 0x130027608 <dataset_diviso_filec/func10705_vuln.c:1:1, line:38:1> line:1:12 invalid rxrpc_krb5_decode_tagged_data 'int (struct krb5_tagged_data *, int, const int **, unsigned int *)' static
  |-ParmVarDecl 0x13000e248 <col:42, col:67> col:67 used td 'struct krb5_tagged_data *'
  |-ParmVarDecl 0x13000e2e0 <line:2:7, col:14> col:14 invalid max_data_size 'int'
  |-ParmVarDecl 0x130027400 <line:3:7, col:22> col:22 invalid _xdr 'const int **'
  |-ParmVarDecl 0x1300274b8 <line:4:7, col:21> col:21 used _toklen 'unsigned int *'
  `-CompoundStmt 0x130808eb8 <line:5:1, line:38:1>
    |-DeclStmt 0x1300277a0 <line:6:2, col:27>
    | `-VarDecl 0x1300276e8 <col:2, col:16> col:16 referenced invalid xdr 'const int *'
    |-DeclStmt 0x130027938 <line:7:2, col:37>
    | |-VarDecl 0x1300277d0 <col:2, col:25> col:15 used toklen 'unsigned int' cinit
    | | `-ImplicitCastExpr 0x130027888 <col:24, col:25> 'unsigned int' <LValueToRValue>
    | |   `-UnaryOperator 0x130027870 <col:24, col:25> 'unsigned int' lvalue prefix '*' cannot overflow
    | |     `-ImplicitCastExpr 0x130027858 <col:25> 'unsigned int *' <LValueToRValue>
    | |       `-DeclRefExpr 0x130027838 <col:25> 'unsigned int *' lvalue ParmVar 0x1300274b8 '_toklen' 'unsigned int *'
    | `-VarDecl 0x1300278b8 <col:2, col:34> col:34 used len 'unsigned int'
    |-IfStmt 0x130027a88 <line:10:2, line:11:11>
    | |-BinaryOperator 0x1300279c0 <line:10:6, col:16> 'int' '<='
    | | |-ImplicitCastExpr 0x130027990 <col:6> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x130027950 <col:6> 'unsigned int' lvalue Var 0x1300277d0 'toklen' 'unsigned int'
    | | `-ImplicitCastExpr 0x1300279a8 <col:16> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x130027970 <col:16> 'int' 8
    | `-ReturnStmt 0x130027a78 <line:11:3, col:11>
    |   `-UnaryOperator 0x130027a60 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x130027a48 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x130027a28 <col:11> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x130027f20 <line:13:2, line:14:60> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x130027c00 <line:13:2> 'int ()' Function 0x130027b48 '_enter' 'int ()'
    | |-StringLiteral 0x130027c60 <col:9> 'char[4]' lvalue "STR"
    | |-RecoveryExpr 0x130027c80 <line:14:9> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x130027e18 <col:24, col:36> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x130027d80 <col:24> 'int ()' Function 0x130027cc8 'ntohl' 'int ()'
    | | `-ArraySubscriptExpr 0x130027df8 <col:30, col:35> '<dependent type>' contains-errors lvalue
    | |   |-ImplicitCastExpr 0x130027de0 <col:30> '<dependent type>' contains-errors <LValueToRValue>
    | |   | `-RecoveryExpr 0x130027da0 <col:30> '<dependent type>' contains-errors lvalue
    | |   `-IntegerLiteral 0x130027dc0 <col:34> 'int' 0
    | |-CallExpr 0x130027ed8 <col:39, col:51> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x130027e40 <col:39> 'int ()' Function 0x130027cc8 'ntohl' 'int ()'
    | | `-ArraySubscriptExpr 0x130027eb8 <col:45, col:50> '<dependent type>' contains-errors lvalue
    | |   |-ImplicitCastExpr 0x130027ea0 <col:45> '<dependent type>' contains-errors <LValueToRValue>
    | |   | `-RecoveryExpr 0x130027e60 <col:45> '<dependent type>' contains-errors lvalue
    | |   `-IntegerLiteral 0x130027e80 <col:49> 'int' 1
    | `-DeclRefExpr 0x130027f00 <col:54> 'unsigned int' lvalue Var 0x1300277d0 'toklen' 'unsigned int'
    |-BinaryOperator 0x130028060 <line:16:2, col:24> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x130027fa0 <col:2, col:6> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x130027f68 <col:2> 'struct krb5_tagged_data *' lvalue ParmVar 0x13000e248 'td' 'struct krb5_tagged_data *'
    | `-CallExpr 0x130028038 <col:12, col:24> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x130027fc8 <col:12> 'int ()' Function 0x130027cc8 'ntohl' 'int ()'
    |   `-UnaryOperator 0x130028020 <col:18, col:22> '<dependent type>' contains-errors prefix '*' cannot overflow
    |     `-UnaryOperator 0x130028008 <col:19, col:22> '<dependent type>' contains-errors postfix '++' cannot overflow
    |       `-RecoveryExpr 0x130027fe8 <col:19> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x130028138 <line:17:2, col:20> 'unsigned int' contains-errors '='
    | |-DeclRefExpr 0x130028080 <col:2> 'unsigned int' lvalue Var 0x1300278b8 'len' 'unsigned int'
    | `-CallExpr 0x130028110 <col:8, col:20> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1300280a0 <col:8> 'int ()' Function 0x130027cc8 'ntohl' 'int ()'
    |   `-UnaryOperator 0x1300280f8 <col:14, col:18> '<dependent type>' contains-errors prefix '*' cannot overflow
    |     `-UnaryOperator 0x1300280e0 <col:15, col:18> '<dependent type>' contains-errors postfix '++' cannot overflow
    |       `-RecoveryExpr 0x1300280c0 <col:15> '<dependent type>' contains-errors lvalue
    |-CompoundAssignOperator 0x1300281b0 <line:18:2, col:12> 'unsigned int' '-=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    | |-DeclRefExpr 0x130028158 <col:2> 'unsigned int' lvalue Var 0x1300277d0 'toklen' 'unsigned int'
    | `-ImplicitCastExpr 0x130028198 <col:12> 'unsigned int' <IntegralCast>
    |   `-IntegerLiteral 0x130028178 <col:12> 'int' 8
    |-IfStmt 0x1300282e8 <line:19:2, line:20:11>
    | |-BinaryOperator 0x130028220 <line:19:6, col:12> 'int' contains-errors '>'
    | | |-DeclRefExpr 0x1300281e0 <col:6> 'unsigned int' lvalue Var 0x1300278b8 'len' 'unsigned int'
    | | `-RecoveryExpr 0x130028200 <col:12> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x1300282d8 <line:20:3, col:11>
    |   `-UnaryOperator 0x1300282c0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x1300282a8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x130028288 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x130028388 <line:21:2, col:17> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x130028340 <col:2, col:6> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x130028308 <col:2> 'struct krb5_tagged_data *' lvalue ParmVar 0x13000e248 'td' 'struct krb5_tagged_data *'
    | `-DeclRefExpr 0x130028368 <col:17> 'unsigned int' lvalue Var 0x1300278b8 'len' 'unsigned int'
    |-IfStmt 0x130808928 <line:23:2, line:30:2>
    | |-BinaryOperator 0x130808218 <line:23:6, col:12> 'int' '>'
    | | |-ImplicitCastExpr 0x1300283e8 <col:6> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1300283a8 <col:6> 'unsigned int' lvalue Var 0x1300278b8 'len' 'unsigned int'
    | | `-ImplicitCastExpr 0x130808200 <col:12> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x1300283c8 <col:12> 'int' 0
    | `-CompoundStmt 0x1308088f0 <col:15, line:30:2>
    |   |-BinaryOperator 0x1308084a0 <line:24:3, col:42> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x130808270 <col:3, col:7> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x130808238 <col:3> 'struct krb5_tagged_data *' lvalue ParmVar 0x13000e248 'td' 'struct krb5_tagged_data *'
    |   | `-CallExpr 0x130808468 <col:14, col:42> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x130808378 <col:14> 'int ()' Function 0x1308082c0 'kmemdup' 'int ()'
    |   |   |-RecoveryExpr 0x130808398 <col:22> '<dependent type>' contains-errors lvalue
    |   |   |-DeclRefExpr 0x1308083b8 <col:27> 'unsigned int' lvalue Var 0x1300278b8 'len' 'unsigned int'
    |   |   `-RecoveryExpr 0x130808448 <col:32> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x1308085f8 <line:25:3, line:26:12>
    |   | |-UnaryOperator 0x130808538 <line:25:7, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x130808520 <col:8, col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   `-RecoveryExpr 0x1308084f8 <col:8, col:12> '<dependent type>' contains-errors lvalue
    |   | |     `-DeclRefExpr 0x1308084c0 <col:8> 'struct krb5_tagged_data *' lvalue ParmVar 0x13000e248 'td' 'struct krb5_tagged_data *'
    |   | `-ReturnStmt 0x1308085e8 <line:26:4, col:12>
    |   |   `-UnaryOperator 0x1308085d0 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |     `-ImplicitCastExpr 0x1308085b8 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   |       `-RecoveryExpr 0x130808598 <col:12> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x130808758 <line:27:3, col:22> 'unsigned int' '='
    |   | |-DeclRefExpr 0x130808618 <col:3> 'unsigned int' lvalue Var 0x1300278b8 'len' 'unsigned int'
    |   | `-BinaryOperator 0x130808738 <col:9, col:22> 'unsigned int' '&'
    |   |   |-ParenExpr 0x1308086c8 <col:9, col:17> 'unsigned int'
    |   |   | `-BinaryOperator 0x1308086a8 <col:10, col:16> 'unsigned int' '+'
    |   |   |   |-ImplicitCastExpr 0x130808678 <col:10> 'unsigned int' <LValueToRValue>
    |   |   |   | `-DeclRefExpr 0x130808638 <col:10> 'unsigned int' lvalue Var 0x1300278b8 'len' 'unsigned int'
    |   |   |   `-ImplicitCastExpr 0x130808690 <col:16> 'unsigned int' <IntegralCast>
    |   |   |     `-IntegerLiteral 0x130808658 <col:16> 'int' 3
    |   |   `-ImplicitCastExpr 0x130808720 <col:21, col:22> 'unsigned int' <IntegralCast>
    |   |     `-UnaryOperator 0x130808708 <col:21, col:22> 'int' prefix '~' cannot overflow
    |   |       `-IntegerLiteral 0x1308086e8 <col:22> 'int' 3
    |   |-CompoundAssignOperator 0x1308087d0 <line:28:3, col:13> 'unsigned int' '-=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    |   | |-DeclRefExpr 0x130808778 <col:3> 'unsigned int' lvalue Var 0x1300277d0 'toklen' 'unsigned int'
    |   | `-ImplicitCastExpr 0x1308087b8 <col:13> 'unsigned int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x130808798 <col:13> 'unsigned int' lvalue Var 0x1300278b8 'len' 'unsigned int'
    |   `-CompoundAssignOperator 0x1308088c0 <line:29:3, col:17> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |     |-RecoveryExpr 0x130808820 <col:3> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x130808800 <col:3> 'const int *' lvalue Var 0x1300276e8 'xdr' 'const int *'
    |     `-BinaryOperator 0x1308088a0 <col:10, col:17> 'unsigned int' '>>'
    |       |-ImplicitCastExpr 0x130808888 <col:10> 'unsigned int' <LValueToRValue>
    |       | `-DeclRefExpr 0x130808848 <col:10> 'unsigned int' lvalue Var 0x1300278b8 'len' 'unsigned int'
    |       `-IntegerLiteral 0x130808868 <col:17> 'int' 2
    |-CallExpr 0x130808b28 <line:32:2, col:37> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x130808a28 <col:2> 'int ()' Function 0x130808970 '_debug' 'int ()'
    | |-StringLiteral 0x130808a48 <col:9> 'char[4]' lvalue "STR"
    | |-RecoveryExpr 0x130808aa0 <col:16, col:20> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x130808a68 <col:16> 'struct krb5_tagged_data *' lvalue ParmVar 0x13000e248 'td' 'struct krb5_tagged_data *'
    | `-RecoveryExpr 0x130808b00 <col:25, col:29> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x130808ac8 <col:25> 'struct krb5_tagged_data *' lvalue ParmVar 0x13000e248 'td' 'struct krb5_tagged_data *'
    |-BinaryOperator 0x130808bd0 <line:34:2, col:10> '<dependent type>' contains-errors '='
    | |-UnaryOperator 0x130808b98 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x130808b80 <col:3> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x130808b60 <col:3> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x130808bb0 <col:10> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x130808c78 <line:35:2, col:13> 'unsigned int' '='
    | |-UnaryOperator 0x130808c28 <col:2, col:3> 'unsigned int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x130808c10 <col:3> 'unsigned int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x130808bf0 <col:3> 'unsigned int *' lvalue ParmVar 0x1300274b8 '_toklen' 'unsigned int *'
    | `-ImplicitCastExpr 0x130808c60 <col:13> 'unsigned int' <LValueToRValue>
    |   `-DeclRefExpr 0x130808c40 <col:13> 'unsigned int' lvalue Var 0x1300277d0 'toklen' 'unsigned int'
    |-CallExpr 0x130808e28 <line:36:2, col:22> 'int'
    | |-ImplicitCastExpr 0x130808e10 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x130808d78 <col:2> 'int ()' Function 0x130808cc0 '_leave' 'int ()'
    | |-ImplicitCastExpr 0x130808e58 <col:9> 'char *' <ArrayToPointerDecay>
    | | `-StringLiteral 0x130808d98 <col:9> 'char[4]' lvalue "STR"
    | `-ImplicitCastExpr 0x130808e70 <col:16> 'unsigned int' <LValueToRValue>
    |   `-DeclRefExpr 0x130808db8 <col:16> 'unsigned int' lvalue Var 0x1300277d0 'toklen' 'unsigned int'
    `-ReturnStmt 0x130808ea8 <line:37:2, col:9>
      `-IntegerLiteral 0x130808e88 <col:9> 'int' 0
