TranslationUnitDecl 0x147855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1478564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x147855bd0 '__int128'
|-TypedefDecl 0x147856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x147855bf0 'unsigned __int128'
|-TypedefDecl 0x15000be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15000bc00 'struct __NSConstantString_tag'
|   `-Record 0x147856580 '__NSConstantString_tag'
|-TypedefDecl 0x15000be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x147855d90 '__SVInt8_t'
|-TypedefDecl 0x15000bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x147855db0 '__SVInt16_t'
|-TypedefDecl 0x15000bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x147855dd0 '__SVInt32_t'
|-TypedefDecl 0x15000bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x147855df0 '__SVInt64_t'
|-TypedefDecl 0x15000c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x147855e10 '__SVUint8_t'
|-TypedefDecl 0x15000c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x147855e30 '__SVUint16_t'
|-TypedefDecl 0x15000c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x147855e50 '__SVUint32_t'
|-TypedefDecl 0x15000c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x147855e70 '__SVUint64_t'
|-TypedefDecl 0x15000c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x147855e90 '__SVFloat16_t'
|-TypedefDecl 0x15000c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x147855eb0 '__SVFloat32_t'
|-TypedefDecl 0x15000c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x147855ed0 '__SVFloat64_t'
|-TypedefDecl 0x15000c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x147855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15000c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x147855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15000c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x147855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15000c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x147855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15000c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x147855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15000c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x147855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15000c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x147855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15000c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x147855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15000c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x147855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15000c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x147856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15000c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x147856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15000c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x147856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15000c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x147856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15000c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x147856090 '__clang_svint8x3_t'
|-TypedefDecl 0x15000c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1478560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15000c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1478560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15000c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1478560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15000c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x147856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15000ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x147856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15000cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x147856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15000cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x147856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15000cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x147856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15000d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1478561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15000d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1478561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15000d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1478561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15000d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x147856210 '__clang_svint8x4_t'
|-TypedefDecl 0x15000d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x147856230 '__clang_svint16x4_t'
|-TypedefDecl 0x15000d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x147856250 '__clang_svint32x4_t'
|-TypedefDecl 0x15000d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x147856270 '__clang_svint64x4_t'
|-TypedefDecl 0x15000d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x147856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15000d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1478562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15000d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1478562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15000d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1478562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15000d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x147856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15000d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x147856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15000d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x147856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15000d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x147856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15000da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x147856390 '__SVBool_t'
|-TypedefDecl 0x15000da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1478563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15000dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1478563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15000db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1478563f0 '__SVCount_t'
|-TypedefDecl 0x15000dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15000dbb0 'char *'
|   `-BuiltinType 0x1478556b0 'char'
|-TypedefDecl 0x15000dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15000dbb0 'char *'
|   `-BuiltinType 0x1478556b0 'char'
|-RecordDecl 0x15000dcc0 <dataset_diviso_filec/func23749_nonvuln.c:1:1, col:8> col:8 struct sk_buff
|-FunctionDecl 0x15000dfc8 <col:1, line:31:1> line:1:17 build_skb 'struct sk_buff *(void *, unsigned int)'
| |-ParmVarDecl 0x15000dd78 <col:27, col:33> col:33 used data 'void *'
| |-ParmVarDecl 0x15000ddf8 <col:39, col:52> col:52 used frag_size 'unsigned int'
| `-CompoundStmt 0x151008800 <line:2:1, line:31:1>
|   |-DeclStmt 0x15000e2b8 <line:3:2, col:32>
|   | |-RecordDecl 0x15000e0c8 <col:2, col:9> col:9 struct skb_shared_info
|   | `-VarDecl 0x15000e238 <col:2, col:26> col:26 used shinfo 'struct skb_shared_info *'
|   |-DeclStmt 0x15000e3c0 <line:4:2, col:21>
|   | `-VarDecl 0x15000e358 <col:2, col:18> col:18 used skb 'struct sk_buff *'
|   |-DeclStmt 0x150026900 <line:5:2, col:47>
|   | `-VarDecl 0x150026600 <col:2, col:46> col:15 used size 'unsigned int' cinit
|   |   `-BinaryConditionalOperator 0x1500268c0 <col:22, col:46> 'unsigned int'
|   |     |-ImplicitCastExpr 0x150026878 <col:22> 'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x150026668 <col:22> 'unsigned int' lvalue ParmVar 0x15000ddf8 'frag_size' 'unsigned int'
|   |     |-OpaqueValueExpr 0x150026890 <col:22> 'unsigned int'
|   |     | `-ImplicitCastExpr 0x150026878 <col:22> 'unsigned int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x150026668 <col:22> 'unsigned int' lvalue ParmVar 0x15000ddf8 'frag_size' 'unsigned int'
|   |     |-OpaqueValueExpr 0x150026890 <col:22> 'unsigned int'
|   |     | `-ImplicitCastExpr 0x150026878 <col:22> 'unsigned int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x150026668 <col:22> 'unsigned int' lvalue ParmVar 0x15000ddf8 'frag_size' 'unsigned int'
|   |     `-ImplicitCastExpr 0x1500268a8 <col:36, col:46> 'unsigned int' <IntegralCast>
|   |       `-CallExpr 0x150026838 <col:36, col:46> 'int'
|   |         |-ImplicitCastExpr 0x150026820 <col:36> 'int (*)()' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x1500267b0 <col:36> 'int ()' Function 0x1500266f8 'ksize' 'int ()'
|   |         `-ImplicitCastExpr 0x150026860 <col:42> 'void *' <LValueToRValue>
|   |           `-DeclRefExpr 0x1500267d0 <col:42> 'void *' lvalue ParmVar 0x15000dd78 'data' 'void *'
|   |-BinaryOperator 0x150026b28 <line:7:2, col:54> 'struct sk_buff *' contains-errors '='
|   | |-DeclRefExpr 0x150026918 <col:2> 'struct sk_buff *' lvalue Var 0x15000e358 'skb' 'struct sk_buff *'
|   | `-CallExpr 0x150026af8 <col:8, col:54> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x150026a18 <col:8> 'int ()' Function 0x150026960 'kmem_cache_alloc' 'int ()'
|   |   |-RecoveryExpr 0x150026ab8 <col:25> '<dependent type>' contains-errors lvalue
|   |   `-RecoveryExpr 0x150026ad8 <col:44> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x150026be0 <line:8:2, line:9:10>
|   | |-UnaryOperator 0x150026b80 <line:8:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x150026b68 <col:7> 'struct sk_buff *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x150026b48 <col:7> 'struct sk_buff *' lvalue Var 0x15000e358 'skb' 'struct sk_buff *'
|   | `-ReturnStmt 0x150026bd0 <line:9:3, col:10>
|   |   `-RecoveryExpr 0x150026bb0 <col:10> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x15002b378 <line:14:2, col:35> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x1500275d8 <col:2, col:7> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x1500275a0 <col:2> 'struct sk_buff *' lvalue Var 0x15000e358 'skb' 'struct sk_buff *'
|   | `-CallExpr 0x15002b338 <col:18, col:35> 'int'
|   |   |-ImplicitCastExpr 0x15002b320 <col:18> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x15002b2e0 <col:18> 'int ()' Function 0x15002b228 'SKB_TRUESIZE' 'int ()'
|   |   `-ImplicitCastExpr 0x15002b360 <col:31> 'unsigned int' <LValueToRValue>
|   |     `-DeclRefExpr 0x15002b300 <col:31> 'unsigned int' lvalue Var 0x150026600 'size' 'unsigned int'
|   |-BinaryOperator 0x15002b488 <line:15:2, col:32> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x15002b3d0 <col:2, col:7> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x15002b398 <col:2> 'struct sk_buff *' lvalue Var 0x15000e358 'skb' 'struct sk_buff *'
|   | `-BinaryOperator 0x15002b468 <col:19, col:32> 'int' '!='
|   |   |-ImplicitCastExpr 0x15002b438 <col:19> 'unsigned int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x15002b3f8 <col:19> 'unsigned int' lvalue ParmVar 0x15000ddf8 'frag_size' 'unsigned int'
|   |   `-ImplicitCastExpr 0x15002b450 <col:32> 'unsigned int' <IntegralCast>
|   |     `-IntegerLiteral 0x15002b418 <col:32> 'int' 0
|   |-CallExpr 0x15002b640 <line:16:2, col:27> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15002b588 <col:2> 'int ()' Function 0x15002b4d0 'atomic_set' 'int ()'
|   | |-UnaryOperator 0x15002b608 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x15002b5e0 <col:14, col:19> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x15002b5a8 <col:14> 'struct sk_buff *' lvalue Var 0x15000e358 'skb' 'struct sk_buff *'
|   | `-IntegerLiteral 0x15002b620 <col:26> 'int' 1
|   |-BinaryOperator 0x15002b6f0 <line:17:2, col:14> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x15002b6a8 <col:2, col:7> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x15002b670 <col:2> 'struct sk_buff *' lvalue Var 0x15000e358 'skb' 'struct sk_buff *'
|   | `-DeclRefExpr 0x15002b6d0 <col:14> 'void *' lvalue ParmVar 0x15000dd78 'data' 'void *'
|   |-BinaryOperator 0x15002b790 <line:18:2, col:14> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x15002b748 <col:2, col:7> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x15002b710 <col:2> 'struct sk_buff *' lvalue Var 0x15000e358 'skb' 'struct sk_buff *'
|   | `-DeclRefExpr 0x15002b770 <col:14> 'void *' lvalue ParmVar 0x15000dd78 'data' 'void *'
|   |-CallExpr 0x15002b8e8 <line:19:2, col:28> 'int'
|   | |-ImplicitCastExpr 0x15002b8d0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x15002b890 <col:2> 'int ()' Function 0x15002b7d8 'skb_reset_tail_pointer' 'int ()'
|   | `-ImplicitCastExpr 0x15002b910 <col:25> 'struct sk_buff *' <LValueToRValue>
|   |   `-DeclRefExpr 0x15002b8b0 <col:25> 'struct sk_buff *' lvalue Var 0x15000e358 'skb' 'struct sk_buff *'
|   |-BinaryOperator 0x15002ba28 <line:20:2, col:25> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x15002b960 <col:2, col:7> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x15002b928 <col:2> 'struct sk_buff *' lvalue Var 0x15000e358 'skb' 'struct sk_buff *'
|   | `-BinaryOperator 0x15002ba08 <col:13, col:25> '<dependent type>' contains-errors '+'
|   |   |-RecoveryExpr 0x15002b9c0 <col:13, col:18> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x15002b988 <col:13> 'struct sk_buff *' lvalue Var 0x15000e358 'skb' 'struct sk_buff *'
|   |   `-DeclRefExpr 0x15002b9e8 <col:25> 'unsigned int' lvalue Var 0x150026600 'size' 'unsigned int'
|   |-BinaryOperator 0x15002bea8 <line:25:2, col:25> 'struct skb_shared_info *' '='
|   | |-DeclRefExpr 0x15002bcf8 <col:2> 'struct skb_shared_info *' lvalue Var 0x15000e238 'shinfo' 'struct skb_shared_info *'
|   | `-ImplicitCastExpr 0x15002be90 <col:11, col:25> 'struct skb_shared_info *' <IntegralToPointer>
|   |   `-CallExpr 0x15002be50 <col:11, col:25> 'int'
|   |     |-ImplicitCastExpr 0x15002be38 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x15002bdf8 <col:11> 'int ()' Function 0x15002bd40 'skb_shinfo' 'int ()'
|   |     `-ImplicitCastExpr 0x15002be78 <col:22> 'struct sk_buff *' <LValueToRValue>
|   |       `-DeclRefExpr 0x15002be18 <col:22> 'struct sk_buff *' lvalue Var 0x15000e358 'skb' 'struct sk_buff *'
|   |-CallExpr 0x15002c000 <line:27:2, col:32> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15002bf48 <col:2> 'int ()' Function 0x15002b4d0 'atomic_set' 'int ()'
|   | |-UnaryOperator 0x15002bfc8 <col:13, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x15002bfa0 <col:14, col:22> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x15002bf68 <col:14> 'struct skb_shared_info *' lvalue Var 0x15000e238 'shinfo' 'struct skb_shared_info *'
|   | `-IntegerLiteral 0x15002bfe0 <col:31> 'int' 1
|   |-CallExpr 0x15002c190 <line:28:2, col:52> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15002c110 <col:2> 'int ()' Function 0x15002c058 'kmemcheck_annotate_variable' 'int ()'
|   | `-RecoveryExpr 0x15002c168 <col:30, col:38> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x15002c130 <col:30> 'struct skb_shared_info *' lvalue Var 0x15000e238 'shinfo' 'struct skb_shared_info *'
|   `-ReturnStmt 0x15002c1f0 <line:30:2, col:9>
|     `-ImplicitCastExpr 0x15002c1d8 <col:9> 'struct sk_buff *' <LValueToRValue>
|       `-DeclRefExpr 0x15002c1b8 <col:9> 'struct sk_buff *' lvalue Var 0x15000e358 'skb' 'struct sk_buff *'
`-FunctionDecl 0x1500271d8 <line:13:2> col:2 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x1500272d8 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x150027340 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x1500273a8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x150027280 <<invalid sloc>> Implicit 900
