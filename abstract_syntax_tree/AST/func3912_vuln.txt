TranslationUnitDecl 0x12a84e408 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12a84f2b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12a84e9d0 '__int128'
|-TypedefDecl 0x12a84f328 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12a84e9f0 'unsigned __int128'
|-TypedefDecl 0x12b80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12b80bc00 'struct __NSConstantString_tag'
|   `-Record 0x12a84f380 '__NSConstantString_tag'
|-TypedefDecl 0x12b80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12a84eb90 '__SVInt8_t'
|-TypedefDecl 0x12b80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12a84ebb0 '__SVInt16_t'
|-TypedefDecl 0x12b80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12a84ebd0 '__SVInt32_t'
|-TypedefDecl 0x12b80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12a84ebf0 '__SVInt64_t'
|-TypedefDecl 0x12b80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12a84ec10 '__SVUint8_t'
|-TypedefDecl 0x12b80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12a84ec30 '__SVUint16_t'
|-TypedefDecl 0x12b80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12a84ec50 '__SVUint32_t'
|-TypedefDecl 0x12b80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12a84ec70 '__SVUint64_t'
|-TypedefDecl 0x12b80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12a84ec90 '__SVFloat16_t'
|-TypedefDecl 0x12b80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12a84ecb0 '__SVFloat32_t'
|-TypedefDecl 0x12b80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12a84ecd0 '__SVFloat64_t'
|-TypedefDecl 0x12b80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12a84ecf0 '__SVBfloat16_t'
|-TypedefDecl 0x12b80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12a84ed10 '__clang_svint8x2_t'
|-TypedefDecl 0x12b80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12a84ed30 '__clang_svint16x2_t'
|-TypedefDecl 0x12b80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12a84ed50 '__clang_svint32x2_t'
|-TypedefDecl 0x12b80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12a84ed70 '__clang_svint64x2_t'
|-TypedefDecl 0x12b80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12a84ed90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12b80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12a84edb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12b80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12a84edd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12b80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12a84edf0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12b80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12a84ee10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12b80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12a84ee30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12b80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12a84ee50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12b80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12a84ee70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12b80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12a84ee90 '__clang_svint8x3_t'
|-TypedefDecl 0x12b80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12a84eeb0 '__clang_svint16x3_t'
|-TypedefDecl 0x12b80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12a84eed0 '__clang_svint32x3_t'
|-TypedefDecl 0x12b80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12a84eef0 '__clang_svint64x3_t'
|-TypedefDecl 0x12b80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12a84ef10 '__clang_svuint8x3_t'
|-TypedefDecl 0x12b80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12a84ef30 '__clang_svuint16x3_t'
|-TypedefDecl 0x12b80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12a84ef50 '__clang_svuint32x3_t'
|-TypedefDecl 0x12b80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12a84ef70 '__clang_svuint64x3_t'
|-TypedefDecl 0x12b80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12a84ef90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12b80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12a84efb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12b80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12a84efd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12b80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12a84eff0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12b80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12a84f010 '__clang_svint8x4_t'
|-TypedefDecl 0x12b80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12a84f030 '__clang_svint16x4_t'
|-TypedefDecl 0x12b80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12a84f050 '__clang_svint32x4_t'
|-TypedefDecl 0x12b80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12a84f070 '__clang_svint64x4_t'
|-TypedefDecl 0x12b80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12a84f090 '__clang_svuint8x4_t'
|-TypedefDecl 0x12b80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12a84f0b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12b80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12a84f0d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12b80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12a84f0f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12b80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12a84f110 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12b80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12a84f130 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12b80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12a84f150 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12b80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12a84f170 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12b80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12a84f190 '__SVBool_t'
|-TypedefDecl 0x12b80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12a84f1b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12b80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12a84f1d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12b80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12a84f1f0 '__SVCount_t'
|-TypedefDecl 0x12b80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12b80dbb0 'char *'
|   `-BuiltinType 0x12a84e4b0 'char'
|-TypedefDecl 0x12b80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12b80dbb0 'char *'
|   `-BuiltinType 0x12a84e4b0 'char'
|-FunctionDecl 0x12b80de68 <dataset_diviso_filec/func3912_vuln.c:1:1, line:37:1> line:1:16 split 'char **(const char *, const char *)' static
| |-ParmVarDecl 0x12b80dcd8 <col:22, col:34> col:34 used arg 'const char *'
| |-ParmVarDecl 0x12b80dd58 <col:39, col:51> col:51 used delim 'const char *'
| `-CompoundStmt 0x12a91b668 <col:58, line:37:1>
|   |-DeclStmt 0x12b827610 <line:2:3, col:27>
|   | `-VarDecl 0x12b80df80 <col:3, col:26> col:9 used copy 'char *' cinit
|   |   `-ImplicitCastExpr 0x12b80e1d8 <col:16, col:26> 'char *' <IntegralToPointer>
|   |     `-CallExpr 0x12b80e198 <col:16, col:26> 'int'
|   |       |-ImplicitCastExpr 0x12b80e180 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x12b80e110 <col:16> 'int ()' Function 0x12b80e058 'dupstr' 'int ()'
|   |       `-ImplicitCastExpr 0x12b80e1c0 <col:23> 'const char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x12b80e130 <col:23> 'const char *' lvalue ParmVar 0x12b80dcd8 'arg' 'const char *'
|   |-DeclStmt 0x12b8276e0 <line:3:3, col:23>
|   | `-VarDecl 0x12b827640 <col:3, col:19> col:10 used result 'char **' cinit
|   |   `-RecoveryExpr 0x12b8276c0 <col:19> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x12b827798 <line:4:3, col:12>
|   | `-VarDecl 0x12b827710 <col:3, col:11> col:7 used i 'int' cinit
|   |   `-IntegerLiteral 0x12b827778 <col:11> 'int' 0
|   |-ForStmt 0x12c008978 <line:6:3, line:18:3>
|   | |-DeclStmt 0x12b827b88 <line:6:8, col:40>
|   | | `-VarDecl 0x12b8277c8 <col:8, col:39> col:14 used cptr 'char *' cinit
|   | |   `-CallExpr 0x12b827b28 <col:21, col:39> 'char *'
|   | |     |-ImplicitCastExpr 0x12b827b10 <col:21> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   | |     | `-DeclRefExpr 0x12b827a50 <col:21> 'char *(char *, const char *)' Function 0x12b827870 'strtok' 'char *(char *, const char *)'
|   | |     |-ImplicitCastExpr 0x12b827b58 <col:28> 'char *' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x12b827a70 <col:28> 'char *' lvalue Var 0x12b80df80 'copy' 'char *'
|   | |     `-ImplicitCastExpr 0x12b827b70 <col:34> 'const char *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x12b827a90 <col:34> 'const char *' lvalue ParmVar 0x12b80dd58 'delim' 'const char *'
|   | |-<<<NULL>>>
|   | |-ImplicitCastExpr 0x12b827bc0 <col:42> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x12b827ba0 <col:42> 'char *' lvalue Var 0x12b8277c8 'cptr' 'char *'
|   | |-BinaryOperator 0x12b827d50 <col:48, col:73> 'char *' contains-errors '='
|   | | |-DeclRefExpr 0x12b827bd8 <col:48> 'char *' lvalue Var 0x12b8277c8 'cptr' 'char *'
|   | | `-CallExpr 0x12b827d20 <col:55, col:73> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x12b827bf8 <col:55> 'char *(char *, const char *)' Function 0x12b827870 'strtok' 'char *(char *, const char *)'
|   | |   |-RecoveryExpr 0x12b827cd0 <col:62> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x12b827c30 <col:68> 'const char *' lvalue ParmVar 0x12b80dd58 'delim' 'const char *'
|   | `-CompoundStmt 0x12c008948 <col:76, line:18:3>
|   |   |-DeclStmt 0x12b8282a0 <line:7:5, col:60>
|   |   | `-VarDecl 0x12b827d88 <col:5, col:59> col:12 used tmp 'char **' cinit
|   |   |   `-ImplicitCastExpr 0x12b828288 <col:18, col:59> 'char **' contains-errors <BitCast>
|   |   |     `-CallExpr 0x12b828228 <col:18, col:59> 'void *' contains-errors
|   |   |       |-ImplicitCastExpr 0x12b828210 <col:18> 'void *(*)(void *, unsigned long)' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x12b828040 <col:18> 'void *(void *, unsigned long)' Function 0x12b827e30 'realloc' 'void *(void *, unsigned long)'
|   |   |       |-ImplicitCastExpr 0x12b828270 <col:27> 'void *' contains-errors <BitCast>
|   |   |       | `-ImplicitCastExpr 0x12b828258 <col:27> 'char **' contains-errors <LValueToRValue>
|   |   |       |   `-DeclRefExpr 0x12b828060 <col:27> 'char **' contains-errors lvalue Var 0x12b827640 'result' 'char **'
|   |   |       `-BinaryOperator 0x12b8281a0 <col:35, col:58> 'unsigned long' contains-errors '*'
|   |   |         |-UnaryExprOrTypeTraitExpr 0x12b8280d0 <col:35, col:43> 'unsigned long' contains-errors sizeof
|   |   |         | `-UnaryOperator 0x12b8280b8 <col:42, col:43> 'char *' contains-errors lvalue prefix '*' cannot overflow
|   |   |         |   `-ImplicitCastExpr 0x12b8280a0 <col:43> 'char **' contains-errors <LValueToRValue>
|   |   |         |     `-DeclRefExpr 0x12b828080 <col:43> 'char **' contains-errors lvalue Var 0x12b827640 'result' 'char **' non_odr_use_unevaluated
|   |   |         `-ImplicitCastExpr 0x12b828188 <col:52, col:58> 'unsigned long' <IntegralCast>
|   |   |           `-ParenExpr 0x12b828168 <col:52, col:58> 'int'
|   |   |             `-BinaryOperator 0x12b828148 <col:53, col:57> 'int' '+'
|   |   |               |-ImplicitCastExpr 0x12b828130 <col:53> 'int' <LValueToRValue>
|   |   |               | `-DeclRefExpr 0x12b8280f0 <col:53> 'int' lvalue Var 0x12b827710 'i' 'int'
|   |   |               `-IntegerLiteral 0x12b828110 <col:57> 'int' 1
|   |   |-IfStmt 0x12c008750 <line:8:5, line:15:5>
|   |   | |-BinaryOperator 0x12b828340 <line:8:9, col:17> 'int' contains-errors '&&'
|   |   | | |-UnaryOperator 0x12b8282f0 <col:9, col:10> 'int' contains-errors prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x12b8282d8 <col:10> 'char **' contains-errors <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x12b8282b8 <col:10> 'char **' contains-errors lvalue Var 0x12b827d88 'tmp' 'char **'
|   |   | | `-ImplicitCastExpr 0x12b828328 <col:17> 'char **' contains-errors <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x12b828308 <col:17> 'char **' contains-errors lvalue Var 0x12b827640 'result' 'char **'
|   |   | `-CompoundStmt 0x12c008720 <col:25, line:15:5>
|   |   |   |-WhileStmt 0x12c008528 <line:9:7, line:11:7>
|   |   |   | |-BinaryOperator 0x12b8283b8 <line:9:14, col:18> 'int' '>'
|   |   |   | | |-ImplicitCastExpr 0x12b8283a0 <col:14> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x12b828360 <col:14> 'int' lvalue Var 0x12b827710 'i' 'int'
|   |   |   | | `-IntegerLiteral 0x12b828380 <col:18> 'int' 0
|   |   |   | `-CompoundStmt 0x12c008510 <col:21, line:11:7>
|   |   |   |   `-CallExpr 0x12c0084b8 <line:10:2, col:18> 'void' contains-errors
|   |   |   |     |-ImplicitCastExpr 0x12c0084a0 <col:2> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x12c0083a8 <col:2> 'void (void *)' Function 0x12c008238 'free' 'void (void *)'
|   |   |   |     `-ImplicitCastExpr 0x12c0084f8 <col:7, col:17> 'void *' contains-errors <BitCast>
|   |   |   |       `-ImplicitCastExpr 0x12c0084e0 <col:7, col:17> 'char *' contains-errors <LValueToRValue>
|   |   |   |         `-ArraySubscriptExpr 0x12c008438 <col:7, col:17> 'char *' contains-errors lvalue
|   |   |   |           |-ImplicitCastExpr 0x12c008420 <col:7> 'char **' contains-errors <LValueToRValue>
|   |   |   |           | `-DeclRefExpr 0x12c0083c8 <col:7> 'char **' contains-errors lvalue Var 0x12b827640 'result' 'char **'
|   |   |   |           `-UnaryOperator 0x12c008408 <col:14, col:16> 'int' prefix '--'
|   |   |   |             `-DeclRefExpr 0x12c0083e8 <col:16> 'int' lvalue Var 0x12b827710 'i' 'int'
|   |   |   |-CallExpr 0x12c0085b8 <line:12:7, col:18> 'void' contains-errors
|   |   |   | |-ImplicitCastExpr 0x12c0085a0 <col:7> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x12c008548 <col:7> 'void (void *)' Function 0x12c008238 'free' 'void (void *)'
|   |   |   | `-ImplicitCastExpr 0x12c0085f8 <col:12> 'void *' contains-errors <BitCast>
|   |   |   |   `-ImplicitCastExpr 0x12c0085e0 <col:12> 'char **' contains-errors <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x12c008568 <col:12> 'char **' contains-errors lvalue Var 0x12b827640 'result' 'char **'
|   |   |   |-CallExpr 0x12c008680 <line:13:7, col:16> 'void'
|   |   |   | |-ImplicitCastExpr 0x12c008668 <col:7> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x12c008610 <col:7> 'void (void *)' Function 0x12c008238 'free' 'void (void *)'
|   |   |   | `-ImplicitCastExpr 0x12c0086c0 <col:12> 'void *' <BitCast>
|   |   |   |   `-ImplicitCastExpr 0x12c0086a8 <col:12> 'char *' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x12c008630 <col:12> 'char *' lvalue Var 0x12b80df80 'copy' 'char *'
|   |   |   `-ReturnStmt 0x12c008710 <line:14:7, col:14>
|   |   |     `-RecoveryExpr 0x12c0086f0 <col:14> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x12c0087c8 <line:16:5, col:14> 'char **' contains-errors '='
|   |   | |-DeclRefExpr 0x12c008770 <col:5> 'char **' contains-errors lvalue Var 0x12b827640 'result' 'char **'
|   |   | `-ImplicitCastExpr 0x12c0087b0 <col:14> 'char **' contains-errors <LValueToRValue>
|   |   |   `-DeclRefExpr 0x12c008790 <col:14> 'char **' contains-errors lvalue Var 0x12b827d88 'tmp' 'char **'
|   |   `-BinaryOperator 0x12c008928 <line:17:5, col:30> 'char *' contains-errors '='
|   |     |-ArraySubscriptExpr 0x12c008858 <col:5, col:15> 'char *' contains-errors lvalue
|   |     | |-ImplicitCastExpr 0x12c008840 <col:5> 'char **' contains-errors <LValueToRValue>
|   |     | | `-DeclRefExpr 0x12c0087e8 <col:5> 'char **' contains-errors lvalue Var 0x12b827640 'result' 'char **'
|   |     | `-UnaryOperator 0x12c008828 <col:12, col:13> 'int' postfix '++'
|   |     |   `-DeclRefExpr 0x12c008808 <col:12> 'int' lvalue Var 0x12b827710 'i' 'int'
|   |     `-ImplicitCastExpr 0x12c008910 <col:19, col:30> 'char *' <IntegralToPointer>
|   |       `-CallExpr 0x12c0088d0 <col:19, col:30> 'int'
|   |         |-ImplicitCastExpr 0x12c0088b8 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x12c008878 <col:19> 'int ()' Function 0x12b80e058 'dupstr' 'int ()'
|   |         `-ImplicitCastExpr 0x12c0088f8 <col:26> 'char *' <LValueToRValue>
|   |           `-DeclRefExpr 0x12c008898 <col:26> 'char *' lvalue Var 0x12b8277c8 'cptr' 'char *'
|   |-CallExpr 0x12c008a20 <line:20:3, col:12> 'void'
|   | |-ImplicitCastExpr 0x12c008a08 <col:3> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x12c0089b0 <col:3> 'void (void *)' Function 0x12c008238 'free' 'void (void *)'
|   | `-ImplicitCastExpr 0x12c008a60 <col:8> 'void *' <BitCast>
|   |   `-ImplicitCastExpr 0x12c008a48 <col:8> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x12c0089d0 <col:8> 'char *' lvalue Var 0x12b80df80 'copy' 'char *'
|   |-IfStmt 0x12a91b600 <line:22:3, line:34:3>
|   | |-ImplicitCastExpr 0x12c008a98 <line:22:7> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x12c008a78 <col:7> 'int' lvalue Var 0x12b827710 'i' 'int'
|   | `-CompoundStmt 0x12a91b5d0 <col:10, line:34:3>
|   |   |-DeclStmt 0x12c008d58 <line:23:5, col:59>
|   |   | `-VarDecl 0x12c008ac8 <col:5, col:58> col:12 used tmp 'char **' cinit
|   |   |   `-ImplicitCastExpr 0x12c008d40 <col:18, col:58> 'char **' contains-errors <BitCast>
|   |   |     `-CallExpr 0x12c008ce0 <col:18, col:58> 'void *' contains-errors
|   |   |       |-ImplicitCastExpr 0x12c008cc8 <col:18> 'void *(*)(void *, unsigned long)' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x12c008b30 <col:18> 'void *(void *, unsigned long)' Function 0x12b827e30 'realloc' 'void *(void *, unsigned long)'
|   |   |       |-ImplicitCastExpr 0x12c008d28 <col:26> 'void *' contains-errors <BitCast>
|   |   |       | `-ImplicitCastExpr 0x12c008d10 <col:26> 'char **' contains-errors <LValueToRValue>
|   |   |       |   `-DeclRefExpr 0x12c008b50 <col:26> 'char **' contains-errors lvalue Var 0x12b827640 'result' 'char **'
|   |   |       `-BinaryOperator 0x12c008c90 <col:34, col:57> 'unsigned long' contains-errors '*'
|   |   |         |-UnaryExprOrTypeTraitExpr 0x12c008bc0 <col:34, col:42> 'unsigned long' contains-errors sizeof
|   |   |         | `-UnaryOperator 0x12c008ba8 <col:41, col:42> 'char *' contains-errors lvalue prefix '*' cannot overflow
|   |   |         |   `-ImplicitCastExpr 0x12c008b90 <col:42> 'char **' contains-errors <LValueToRValue>
|   |   |         |     `-DeclRefExpr 0x12c008b70 <col:42> 'char **' contains-errors lvalue Var 0x12b827640 'result' 'char **' non_odr_use_unevaluated
|   |   |         `-ImplicitCastExpr 0x12c008c78 <col:51, col:57> 'unsigned long' <IntegralCast>
|   |   |           `-ParenExpr 0x12c008c58 <col:51, col:57> 'int'
|   |   |             `-BinaryOperator 0x12c008c38 <col:52, col:56> 'int' '+'
|   |   |               |-ImplicitCastExpr 0x12c008c20 <col:52> 'int' <LValueToRValue>
|   |   |               | `-DeclRefExpr 0x12c008be0 <col:52> 'int' lvalue Var 0x12b827710 'i' 'int'
|   |   |               `-IntegerLiteral 0x12c008c00 <col:56> 'int' 1
|   |   |-IfStmt 0x12c0091b0 <line:24:5, line:31:5>
|   |   | |-UnaryOperator 0x12c008da8 <line:24:9, col:10> 'int' contains-errors prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x12c008d90 <col:10> 'char **' contains-errors <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x12c008d70 <col:10> 'char **' contains-errors lvalue Var 0x12c008ac8 'tmp' 'char **'
|   |   | `-CompoundStmt 0x12c009180 <col:15, line:31:5>
|   |   |   |-WhileStmt 0x12c008f88 <line:25:7, line:27:7>
|   |   |   | |-BinaryOperator 0x12c008e18 <line:25:14, col:18> 'int' '>'
|   |   |   | | |-ImplicitCastExpr 0x12c008e00 <col:14> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x12c008dc0 <col:14> 'int' lvalue Var 0x12b827710 'i' 'int'
|   |   |   | | `-IntegerLiteral 0x12c008de0 <col:18> 'int' 0
|   |   |   | `-CompoundStmt 0x12c008f70 <col:21, line:27:7>
|   |   |   |   `-CallExpr 0x12c008f18 <line:26:2, col:18> 'void' contains-errors
|   |   |   |     |-ImplicitCastExpr 0x12c008f00 <col:2> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x12c008e38 <col:2> 'void (void *)' Function 0x12c008238 'free' 'void (void *)'
|   |   |   |     `-ImplicitCastExpr 0x12c008f58 <col:7, col:17> 'void *' contains-errors <BitCast>
|   |   |   |       `-ImplicitCastExpr 0x12c008f40 <col:7, col:17> 'char *' contains-errors <LValueToRValue>
|   |   |   |         `-ArraySubscriptExpr 0x12c008ec8 <col:7, col:17> 'char *' contains-errors lvalue
|   |   |   |           |-ImplicitCastExpr 0x12c008eb0 <col:7> 'char **' contains-errors <LValueToRValue>
|   |   |   |           | `-DeclRefExpr 0x12c008e58 <col:7> 'char **' contains-errors lvalue Var 0x12b827640 'result' 'char **'
|   |   |   |           `-UnaryOperator 0x12c008e98 <col:14, col:16> 'int' prefix '--'
|   |   |   |             `-DeclRefExpr 0x12c008e78 <col:16> 'int' lvalue Var 0x12b827710 'i' 'int'
|   |   |   |-CallExpr 0x12c009018 <line:28:7, col:18> 'void' contains-errors
|   |   |   | |-ImplicitCastExpr 0x12c009000 <col:7> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x12c008fa8 <col:7> 'void (void *)' Function 0x12c008238 'free' 'void (void *)'
|   |   |   | `-ImplicitCastExpr 0x12c009058 <col:12> 'void *' contains-errors <BitCast>
|   |   |   |   `-ImplicitCastExpr 0x12c009040 <col:12> 'char **' contains-errors <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x12c008fc8 <col:12> 'char **' contains-errors lvalue Var 0x12b827640 'result' 'char **'
|   |   |   |-CallExpr 0x12c0090e0 <line:29:7, col:16> 'void'
|   |   |   | |-ImplicitCastExpr 0x12c0090c8 <col:7> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x12c009070 <col:7> 'void (void *)' Function 0x12c008238 'free' 'void (void *)'
|   |   |   | `-ImplicitCastExpr 0x12c009120 <col:12> 'void *' <BitCast>
|   |   |   |   `-ImplicitCastExpr 0x12c009108 <col:12> 'char *' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x12c009090 <col:12> 'char *' lvalue Var 0x12b80df80 'copy' 'char *'
|   |   |   `-ReturnStmt 0x12c009170 <line:30:7, col:14>
|   |   |     `-RecoveryExpr 0x12c009150 <col:14> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x12a91b438 <line:32:5, col:14> 'char **' contains-errors '='
|   |   | |-DeclRefExpr 0x12c0091d0 <col:5> 'char **' contains-errors lvalue Var 0x12b827640 'result' 'char **'
|   |   | `-ImplicitCastExpr 0x12a91b420 <col:14> 'char **' contains-errors <LValueToRValue>
|   |   |   `-DeclRefExpr 0x12a91b400 <col:14> 'char **' contains-errors lvalue Var 0x12c008ac8 'tmp' 'char **'
|   |   `-BinaryOperator 0x12a91b5b0 <line:33:5, col:19> 'char *' contains-errors '='
|   |     |-ArraySubscriptExpr 0x12a91b570 <col:5, col:15> 'char *' contains-errors lvalue
|   |     | |-ImplicitCastExpr 0x12a91b558 <col:5> 'char **' contains-errors <LValueToRValue>
|   |     | | `-DeclRefExpr 0x12a91b458 <col:5> 'char **' contains-errors lvalue Var 0x12b827640 'result' 'char **'
|   |     | `-UnaryOperator 0x12a91b498 <col:12, col:13> 'int' postfix '++'
|   |     |   `-DeclRefExpr 0x12a91b478 <col:12> 'int' lvalue Var 0x12b827710 'i' 'int'
|   |     `-RecoveryExpr 0x12a91b590 <col:19> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x12a91b658 <line:36:3, col:10>
|     `-ImplicitCastExpr 0x12a91b640 <col:10> 'char **' contains-errors <LValueToRValue>
|       `-DeclRefExpr 0x12a91b620 <col:10> 'char **' contains-errors lvalue Var 0x12b827640 'result' 'char **'
|-FunctionDecl 0x12b827870 <line:6:21> col:21 implicit used strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x12b827970 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x12b8279d8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x12b827918 <<invalid sloc>> Implicit 899
|-FunctionDecl 0x12b827e30 <line:7:18> col:18 implicit used realloc 'void *(void *, unsigned long)' extern
| |-ParmVarDecl 0x12b827f30 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x12b827f98 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x12b827ed8 <<invalid sloc>> Implicit 872
| `-AllocSizeAttr 0x12b828010 <col:18> Implicit 2
`-FunctionDecl 0x12c008238 <line:10:2> col:2 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x12c008338 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x12c0082e0 <<invalid sloc>> Implicit 873
