TranslationUnitDecl 0x148055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1480564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x148055bd0 '__int128'
|-TypedefDecl 0x148056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x148055bf0 'unsigned __int128'
|-TypedefDecl 0x148126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x148126000 'struct __NSConstantString_tag'
|   `-Record 0x148056580 '__NSConstantString_tag'
|-TypedefDecl 0x148126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x148055d90 '__SVInt8_t'
|-TypedefDecl 0x148126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x148055db0 '__SVInt16_t'
|-TypedefDecl 0x148126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x148055dd0 '__SVInt32_t'
|-TypedefDecl 0x1481263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x148055df0 '__SVInt64_t'
|-TypedefDecl 0x148126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x148055e10 '__SVUint8_t'
|-TypedefDecl 0x1481264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x148055e30 '__SVUint16_t'
|-TypedefDecl 0x148126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x148055e50 '__SVUint32_t'
|-TypedefDecl 0x148126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x148055e70 '__SVUint64_t'
|-TypedefDecl 0x1481265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x148055e90 '__SVFloat16_t'
|-TypedefDecl 0x148126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x148055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1481266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x148055ed0 '__SVFloat64_t'
|-TypedefDecl 0x148126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x148055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x148126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x148055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1481267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x148055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x148126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x148055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1481268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x148055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x148126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x148055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x148126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x148055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1481269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x148055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x148126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x148055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x148126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x148056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x148126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x148056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x148126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x148056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x148126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x148056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x148126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x148056090 '__clang_svint8x3_t'
|-TypedefDecl 0x148126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1480560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x148126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1480560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x148126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1480560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x148126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x148056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x148126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x148056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x148126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x148056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x148126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x148056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x148126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x148056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x148127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1480561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x148127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1480561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1481278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1480561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x148127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x148056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1481279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x148056230 '__clang_svint16x4_t'
|-TypedefDecl 0x148127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x148056250 '__clang_svint32x4_t'
|-TypedefDecl 0x148127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x148056270 '__clang_svint64x4_t'
|-TypedefDecl 0x148127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x148056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x148127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1480562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x148127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1480562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x148127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1480562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x148127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x148056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x148127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x148056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x148127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x148056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x148127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x148056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x148127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x148056390 '__SVBool_t'
|-TypedefDecl 0x148127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1480563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x148127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1480563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x148127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1480563f0 '__SVCount_t'
|-TypedefDecl 0x148127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x148127fb0 'char *'
|   `-BuiltinType 0x1480556b0 'char'
|-TypedefDecl 0x148128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x148127fb0 'char *'
|   `-BuiltinType 0x1480556b0 'char'
`-FunctionDecl 0x1481418d0 <dataset_diviso_filec/func8992_vuln.c:1:1, line:17:1> line:1:13 invalid tulip_desc_write 'void (int *, int, struct tulip_descriptor *)' static
  |-ParmVarDecl 0x148128128 <col:30, col:42> col:42 invalid s 'int *'
  |-ParmVarDecl 0x1481281a8 <col:45, col:52> col:52 invalid p 'int'
  |-ParmVarDecl 0x148128798 <line:2:9, col:34> col:34 used desc 'struct tulip_descriptor *'
  `-CompoundStmt 0x148142c40 <line:3:1, line:17:1>
    |-DeclStmt 0x148141a28 <line:4:5, col:52>
    | `-VarDecl 0x1481419a8 <col:5, col:22> col:22 invalid attrs 'const int'
    `-IfStmt 0x148142c10 <line:6:5, line:16:5> has_else
      |-BinaryOperator 0x148141bc8 <line:6:9, col:21> '<dependent type>' contains-errors '&'
      | |-ArraySubscriptExpr 0x148141b88 <col:9, col:17> '<dependent type>' contains-errors lvalue
      | | |-ImplicitCastExpr 0x148141b70 <col:9, col:12> '<dependent type>' contains-errors <LValueToRValue>
      | | | `-CXXDependentScopeMemberExpr 0x148141a60 <col:9, col:12> '<dependent type>' contains-errors lvalue ->csr
      | | |   `-RecoveryExpr 0x148141a40 <col:9> '<dependent type>' contains-errors lvalue
      | | `-IntegerLiteral 0x148141aa8 <col:16> 'int' 0
      | `-RecoveryExpr 0x148141ba8 <col:21> '<dependent type>' contains-errors lvalue
      |-CompoundStmt 0x148142400 <col:31, line:11:5>
      | |-CallExpr 0x148141e80 <line:7:9, col:55> '<dependent type>' contains-errors
      | | |-DeclRefExpr 0x148141d40 <col:9> 'int ()' Function 0x148141c88 'stl_be_pci_dma' 'int ()'
      | | |-UnaryOperator 0x148141dc8 <col:24, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
      | | | `-CXXDependentScopeMemberExpr 0x148141d80 <col:25, col:28> '<dependent type>' contains-errors lvalue ->dev
      | | |   `-RecoveryExpr 0x148141d60 <col:25> '<dependent type>' contains-errors lvalue
      | | |-RecoveryExpr 0x148141de0 <col:33> '<dependent type>' contains-errors lvalue
      | | |-RecoveryExpr 0x148141e38 <col:36, col:42> '<dependent type>' contains-errors lvalue
      | | | `-DeclRefExpr 0x148141e00 <col:36> 'struct tulip_descriptor *' lvalue ParmVar 0x148128798 'desc' 'struct tulip_descriptor *'
      | | `-RecoveryExpr 0x148141e60 <col:50> '<dependent type>' contains-errors lvalue
      | |-CallExpr 0x148142040 <line:8:9, col:60> '<dependent type>' contains-errors
      | | |-DeclRefExpr 0x148141ec0 <col:9> 'int ()' Function 0x148141c88 'stl_be_pci_dma' 'int ()'
      | | |-UnaryOperator 0x148141f48 <col:24, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
      | | | `-CXXDependentScopeMemberExpr 0x148141f00 <col:25, col:28> '<dependent type>' contains-errors lvalue ->dev
      | | |   `-RecoveryExpr 0x148141ee0 <col:25> '<dependent type>' contains-errors lvalue
      | | |-BinaryOperator 0x148141fa0 <col:33, col:37> '<dependent type>' contains-errors '+'
      | | | |-RecoveryExpr 0x148141f60 <col:33> '<dependent type>' contains-errors lvalue
      | | | `-IntegerLiteral 0x148141f80 <col:37> 'int' 4
      | | |-RecoveryExpr 0x148141ff8 <col:40, col:46> '<dependent type>' contains-errors lvalue
      | | | `-DeclRefExpr 0x148141fc0 <col:40> 'struct tulip_descriptor *' lvalue ParmVar 0x148128798 'desc' 'struct tulip_descriptor *'
      | | `-RecoveryExpr 0x148142020 <col:55> '<dependent type>' contains-errors lvalue
      | |-CallExpr 0x148142200 <line:9:9, col:62> '<dependent type>' contains-errors
      | | |-DeclRefExpr 0x148142080 <col:9> 'int ()' Function 0x148141c88 'stl_be_pci_dma' 'int ()'
      | | |-UnaryOperator 0x148142108 <col:24, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
      | | | `-CXXDependentScopeMemberExpr 0x1481420c0 <col:25, col:28> '<dependent type>' contains-errors lvalue ->dev
      | | |   `-RecoveryExpr 0x1481420a0 <col:25> '<dependent type>' contains-errors lvalue
      | | |-BinaryOperator 0x148142160 <col:33, col:37> '<dependent type>' contains-errors '+'
      | | | |-RecoveryExpr 0x148142120 <col:33> '<dependent type>' contains-errors lvalue
      | | | `-IntegerLiteral 0x148142140 <col:37> 'int' 8
      | | |-RecoveryExpr 0x1481421b8 <col:40, col:46> '<dependent type>' contains-errors lvalue
      | | | `-DeclRefExpr 0x148142180 <col:40> 'struct tulip_descriptor *' lvalue ParmVar 0x148128798 'desc' 'struct tulip_descriptor *'
      | | `-RecoveryExpr 0x1481421e0 <col:57> '<dependent type>' contains-errors lvalue
      | `-CallExpr 0x1481423c0 <line:10:9, col:63> '<dependent type>' contains-errors
      |   |-DeclRefExpr 0x148142240 <col:9> 'int ()' Function 0x148141c88 'stl_be_pci_dma' 'int ()'
      |   |-UnaryOperator 0x1481422c8 <col:24, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
      |   | `-CXXDependentScopeMemberExpr 0x148142280 <col:25, col:28> '<dependent type>' contains-errors lvalue ->dev
      |   |   `-RecoveryExpr 0x148142260 <col:25> '<dependent type>' contains-errors lvalue
      |   |-BinaryOperator 0x148142320 <col:33, col:37> '<dependent type>' contains-errors '+'
      |   | |-RecoveryExpr 0x1481422e0 <col:33> '<dependent type>' contains-errors lvalue
      |   | `-IntegerLiteral 0x148142300 <col:37> 'int' 12
      |   |-RecoveryExpr 0x148142378 <col:41, col:47> '<dependent type>' contains-errors lvalue
      |   | `-DeclRefExpr 0x148142340 <col:41> 'struct tulip_descriptor *' lvalue ParmVar 0x148128798 'desc' 'struct tulip_descriptor *'
      |   `-RecoveryExpr 0x1481423a0 <col:58> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x148142be0 <line:11:12, line:16:5>
        |-CallExpr 0x148142650 <line:12:9, col:55> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x148142510 <col:9> 'int ()' Function 0x148142458 'stl_le_pci_dma' 'int ()'
        | |-UnaryOperator 0x148142598 <col:24, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
        | | `-CXXDependentScopeMemberExpr 0x148142550 <col:25, col:28> '<dependent type>' contains-errors lvalue ->dev
        | |   `-RecoveryExpr 0x148142530 <col:25> '<dependent type>' contains-errors lvalue
        | |-RecoveryExpr 0x1481425b0 <col:33> '<dependent type>' contains-errors lvalue
        | |-RecoveryExpr 0x148142608 <col:36, col:42> '<dependent type>' contains-errors lvalue
        | | `-DeclRefExpr 0x1481425d0 <col:36> 'struct tulip_descriptor *' lvalue ParmVar 0x148128798 'desc' 'struct tulip_descriptor *'
        | `-RecoveryExpr 0x148142630 <col:50> '<dependent type>' contains-errors lvalue
        |-CallExpr 0x148142820 <line:13:9, col:60> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x148142690 <col:9> 'int ()' Function 0x148142458 'stl_le_pci_dma' 'int ()'
        | |-UnaryOperator 0x148142718 <col:24, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
        | | `-CXXDependentScopeMemberExpr 0x1481426d0 <col:25, col:28> '<dependent type>' contains-errors lvalue ->dev
        | |   `-RecoveryExpr 0x1481426b0 <col:25> '<dependent type>' contains-errors lvalue
        | |-BinaryOperator 0x148142770 <col:33, col:37> '<dependent type>' contains-errors '+'
        | | |-RecoveryExpr 0x148142730 <col:33> '<dependent type>' contains-errors lvalue
        | | `-IntegerLiteral 0x148142750 <col:37> 'int' 4
        | |-RecoveryExpr 0x1481427c8 <col:40, col:46> '<dependent type>' contains-errors lvalue
        | | `-DeclRefExpr 0x148142790 <col:40> 'struct tulip_descriptor *' lvalue ParmVar 0x148128798 'desc' 'struct tulip_descriptor *'
        | `-RecoveryExpr 0x148142800 <col:55> '<dependent type>' contains-errors lvalue
        |-CallExpr 0x1481429e0 <line:14:9, col:62> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x148142860 <col:9> 'int ()' Function 0x148142458 'stl_le_pci_dma' 'int ()'
        | |-UnaryOperator 0x1481428e8 <col:24, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
        | | `-CXXDependentScopeMemberExpr 0x1481428a0 <col:25, col:28> '<dependent type>' contains-errors lvalue ->dev
        | |   `-RecoveryExpr 0x148142880 <col:25> '<dependent type>' contains-errors lvalue
        | |-BinaryOperator 0x148142940 <col:33, col:37> '<dependent type>' contains-errors '+'
        | | |-RecoveryExpr 0x148142900 <col:33> '<dependent type>' contains-errors lvalue
        | | `-IntegerLiteral 0x148142920 <col:37> 'int' 8
        | |-RecoveryExpr 0x148142998 <col:40, col:46> '<dependent type>' contains-errors lvalue
        | | `-DeclRefExpr 0x148142960 <col:40> 'struct tulip_descriptor *' lvalue ParmVar 0x148128798 'desc' 'struct tulip_descriptor *'
        | `-RecoveryExpr 0x1481429c0 <col:57> '<dependent type>' contains-errors lvalue
        `-CallExpr 0x148142ba0 <line:15:9, col:63> '<dependent type>' contains-errors
          |-DeclRefExpr 0x148142a20 <col:9> 'int ()' Function 0x148142458 'stl_le_pci_dma' 'int ()'
          |-UnaryOperator 0x148142aa8 <col:24, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
          | `-CXXDependentScopeMemberExpr 0x148142a60 <col:25, col:28> '<dependent type>' contains-errors lvalue ->dev
          |   `-RecoveryExpr 0x148142a40 <col:25> '<dependent type>' contains-errors lvalue
          |-BinaryOperator 0x148142b00 <col:33, col:37> '<dependent type>' contains-errors '+'
          | |-RecoveryExpr 0x148142ac0 <col:33> '<dependent type>' contains-errors lvalue
          | `-IntegerLiteral 0x148142ae0 <col:37> 'int' 12
          |-RecoveryExpr 0x148142b58 <col:41, col:47> '<dependent type>' contains-errors lvalue
          | `-DeclRefExpr 0x148142b20 <col:41> 'struct tulip_descriptor *' lvalue ParmVar 0x148128798 'desc' 'struct tulip_descriptor *'
          `-RecoveryExpr 0x148142b80 <col:58> '<dependent type>' contains-errors lvalue
