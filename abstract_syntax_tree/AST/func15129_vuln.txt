TranslationUnitDecl 0x155855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1558564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x155855bd0 '__int128'
|-TypedefDecl 0x155856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x155855bf0 'unsigned __int128'
|-TypedefDecl 0x155926a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x155926800 'struct __NSConstantString_tag'
|   `-Record 0x155856580 '__NSConstantString_tag'
|-TypedefDecl 0x155926a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x155855d90 '__SVInt8_t'
|-TypedefDecl 0x155926b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x155855db0 '__SVInt16_t'
|-TypedefDecl 0x155926b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x155855dd0 '__SVInt32_t'
|-TypedefDecl 0x155926bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x155855df0 '__SVInt64_t'
|-TypedefDecl 0x155926c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x155855e10 '__SVUint8_t'
|-TypedefDecl 0x155926ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x155855e30 '__SVUint16_t'
|-TypedefDecl 0x155926d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x155855e50 '__SVUint32_t'
|-TypedefDecl 0x155926d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x155855e70 '__SVUint64_t'
|-TypedefDecl 0x155926dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x155855e90 '__SVFloat16_t'
|-TypedefDecl 0x155926e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x155855eb0 '__SVFloat32_t'
|-TypedefDecl 0x155926ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x155855ed0 '__SVFloat64_t'
|-TypedefDecl 0x155926f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x155855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x155926f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x155855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x155926fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x155855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x155927048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x155855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1559270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x155855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x155927118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x155855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x155927180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x155855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1559271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x155855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x155927250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x155855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1559272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x155856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x155927320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x155856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x155927388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x155856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1559273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x155856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x155927458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x155856090 '__clang_svint8x3_t'
|-TypedefDecl 0x1559274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1558560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x155927528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1558560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x155927590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1558560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1559275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x155856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x155927660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x155856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1559276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x155856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x155927730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x155856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x155927798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x155856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x155928000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1558561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x155928068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1558561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1559280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1558561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x155928138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x155856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1559281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x155856230 '__clang_svint16x4_t'
|-TypedefDecl 0x155928208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x155856250 '__clang_svint32x4_t'
|-TypedefDecl 0x155928270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x155856270 '__clang_svint64x4_t'
|-TypedefDecl 0x1559282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x155856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x155928340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1558562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1559283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1558562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x155928410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1558562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x155928478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x155856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1559284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x155856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x155928548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x155856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1559285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x155856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x155928618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x155856390 '__SVBool_t'
|-TypedefDecl 0x155928680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1558563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1559286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1558563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x155928750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1558563f0 '__SVCount_t'
|-TypedefDecl 0x1559287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1559287b0 'char *'
|   `-BuiltinType 0x1558556b0 'char'
|-TypedefDecl 0x155928868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1559287b0 'char *'
|   `-BuiltinType 0x1558556b0 'char'
|-FunctionDecl 0x155928a88 <dataset_diviso_filec/func15129_vuln.c:1:1, line:45:1> line:1:10 invalid mobi_parse_huff 'int (int *, const int *)'
| |-ParmVarDecl 0x155928928 <col:26, col:40> col:40 referenced invalid huffcdic 'int *'
| |-ParmVarDecl 0x1559289a8 <col:50, col:71> col:71 invalid record 'const int *'
| `-CompoundStmt 0x156009c88 <col:79, line:45:1>
|   |-IfStmt 0x1559420f0 <line:3:5, line:6:5>
|   | |-BinaryOperator 0x155928e60 <line:3:9, col:16> 'int' contains-errors '=='
|   | | |-RecoveryExpr 0x155928e20 <col:9> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x155928e40 <col:16> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x1559420d0 <col:22, line:6:5>
|   |   |-CallExpr 0x155942048 <line:4:9, col:26> 'int'
|   |   | |-ImplicitCastExpr 0x155942030 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x155928f60 <col:9> 'int ()' Function 0x155928ea8 'debug_print' 'int ()'
|   |   | `-ImplicitCastExpr 0x155942070 <col:21> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x155928fc0 <col:21> 'char[4]' lvalue "STR"
|   |   `-ReturnStmt 0x1559420c0 <line:5:9, col:16>
|   |     `-RecoveryExpr 0x1559420a0 <col:16> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x155942218 <line:7:5, col:23>
|   | `-VarDecl 0x1559421b0 <col:5, col:22> col:10 used huff_magic 'char[5]'
|   |-CallExpr 0x1559423e0 <line:8:5, col:45> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x155942310 <col:5> 'int ()' Function 0x155942258 'mobi_buffer_getstring' 'int ()'
|   | |-DeclRefExpr 0x155942330 <col:27> 'char[5]' lvalue Var 0x1559421b0 'huff_magic' 'char[5]'
|   | |-RecoveryExpr 0x1559423c0 <col:39> '<dependent type>' contains-errors lvalue
|   | `-IntegerLiteral 0x155942368 <col:44> 'int' 4
|   |-DeclStmt 0x1559425d8 <line:9:5, col:56>
|   | `-VarDecl 0x155942430 <col:5, col:18> col:18 invalid header_length 'const int'
|   |-IfStmt 0x156008348 <line:10:5, line:14:5>
|   | |-BinaryOperator 0x155942f30 <line:10:9, col:68> 'int' contains-errors '||'
|   | | |-BinaryOperator 0x155942ed0 <col:9, col:47> 'int' contains-errors '!='
|   | | | |-CallExpr 0x155942e98 <col:9, col:42> '<dependent type>' contains-errors
|   | | | | |-DeclRefExpr 0x155942cb0 <col:9> 'int (const char *, const char *, unsigned long)' Function 0x155942a60 'strncmp' 'int (const char *, const char *, unsigned long)'
|   | | | | |-DeclRefExpr 0x155942cd0 <col:17> 'char[5]' lvalue Var 0x1559421b0 'huff_magic' 'char[5]'
|   | | | | |-RecoveryExpr 0x155942e48 <col:29> '<dependent type>' contains-errors lvalue
|   | | | | `-IntegerLiteral 0x155942d08 <col:41> 'int' 4
|   | | | `-IntegerLiteral 0x155942d90 <col:47> 'int' 0
|   | | `-BinaryOperator 0x155942f10 <col:52, col:68> 'int' contains-errors '<'
|   | |   |-RecoveryExpr 0x155942dd0 <col:52> '<dependent type>' contains-errors lvalue
|   | |   `-RecoveryExpr 0x155942ef0 <col:68> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x156008330 <col:85, line:14:5>
|   |   `-CallExpr 0x155942fc8 <line:11:9, col:38> 'int'
|   |     |-ImplicitCastExpr 0x155942fb0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x155942f50 <col:9> 'int ()' Function 0x155928ea8 'debug_print' 'int ()'
|   |     |-ImplicitCastExpr 0x156008200 <col:21> 'char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x155942f70 <col:21> 'char[4]' lvalue "STR"
|   |     `-ImplicitCastExpr 0x156008218 <col:28> 'char *' <ArrayToPointerDecay>
|   |       `-DeclRefExpr 0x155942f90 <col:28> 'char[5]' lvalue Var 0x1559421b0 'huff_magic' 'char[5]'
|   |-DeclStmt 0x156008408 <line:15:5, col:55>
|   | `-VarDecl 0x156008380 <col:5, col:18> col:18 invalid data1_offset 'const int'
|   |-DeclStmt 0x1560084c0 <line:16:5, col:55>
|   | `-VarDecl 0x156008438 <col:5, col:18> col:18 invalid data2_offset 'const int'
|   |-IfStmt 0x156008768 <line:19:5, line:23:5>
|   | |-RecoveryExpr 0x156008678 <line:19:9, col:40> '_Bool' contains-errors
|   | `-CompoundStmt 0x156008750 <col:48, line:23:5>
|   |   `-CallExpr 0x1560086f0 <line:20:9, col:26> 'int'
|   |     |-ImplicitCastExpr 0x1560086d8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x156008698 <col:9> 'int ()' Function 0x155928ea8 'debug_print' 'int ()'
|   |     `-ImplicitCastExpr 0x156008718 <col:21> 'char *' <ArrayToPointerDecay>
|   |       `-StringLiteral 0x1560086b8 <col:21> 'char[4]' lvalue "STR"
|   |-ForStmt 0x156008a20 <line:25:5, line:27:5>
|   | |-DeclStmt 0x156008828 <line:25:10, col:19>
|   | | `-VarDecl 0x1560087a0 <col:10, col:18> col:14 used i 'int' cinit
|   | |   `-IntegerLiteral 0x156008808 <col:18> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x156008898 <col:21, col:25> 'int' '<'
|   | | |-ImplicitCastExpr 0x156008880 <col:21> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x156008840 <col:21> 'int' lvalue Var 0x1560087a0 'i' 'int'
|   | | `-IntegerLiteral 0x156008860 <col:25> 'int' 256
|   | |-UnaryOperator 0x1560088d8 <col:30, col:31> 'int' postfix '++'
|   | | `-DeclRefExpr 0x1560088b8 <col:30> 'int' lvalue Var 0x1560087a0 'i' 'int'
|   | `-CompoundStmt 0x156008a10 <col:35, line:27:5>
|   |-IfStmt 0x156008c08 <line:29:5, line:33:5>
|   | |-RecoveryExpr 0x156008b18 <line:29:9, col:39> '_Bool' contains-errors
|   | `-CompoundStmt 0x156008bf0 <col:47, line:33:5>
|   |   `-CallExpr 0x156008b90 <line:30:9, col:26> 'int'
|   |     |-ImplicitCastExpr 0x156008b78 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x156008b38 <col:9> 'int ()' Function 0x155928ea8 'debug_print' 'int ()'
|   |     `-ImplicitCastExpr 0x156008bb8 <col:21> 'char *' <ArrayToPointerDecay>
|   |       `-StringLiteral 0x156008b58 <col:21> 'char[4]' lvalue "STR"
|   |-BinaryOperator 0x156008d30 <line:35:5, col:34> '<dependent type>' contains-errors '='
|   | |-ArraySubscriptExpr 0x156008cf0 <col:5, col:30> '<dependent type>' contains-errors lvalue
|   | | |-ImplicitCastExpr 0x156008cd8 <col:5, col:15> '<dependent type>' contains-errors <LValueToRValue>
|   | | | `-CXXDependentScopeMemberExpr 0x156008c70 <col:5, col:15> '<dependent type>' contains-errors lvalue ->mincode_table
|   | | |   `-RecoveryExpr 0x156008c48 <col:5> '<dependent type>' contains-errors lvalue
|   | | |     `-DeclRefExpr 0x156008c28 <col:5> 'int *' lvalue ParmVar 0x155928928 'huffcdic' 'int *'
|   | | `-IntegerLiteral 0x156008cb8 <col:29> 'int' 0
|   | `-IntegerLiteral 0x156008d10 <col:34> 'int' 0
|   |-BinaryOperator 0x156008e58 <line:36:5, col:34> '<dependent type>' contains-errors '='
|   | |-ArraySubscriptExpr 0x156008e18 <col:5, col:30> '<dependent type>' contains-errors lvalue
|   | | |-ImplicitCastExpr 0x156008e00 <col:5, col:15> '<dependent type>' contains-errors <LValueToRValue>
|   | | | `-CXXDependentScopeMemberExpr 0x156008d98 <col:5, col:15> '<dependent type>' contains-errors lvalue ->maxcode_table
|   | | |   `-RecoveryExpr 0x156008d70 <col:5> '<dependent type>' contains-errors lvalue
|   | | |     `-DeclRefExpr 0x156008d50 <col:5> 'int *' lvalue ParmVar 0x155928928 'huffcdic' 'int *'
|   | | `-IntegerLiteral 0x156008de0 <col:29> 'int' 0
|   | `-IntegerLiteral 0x156008e38 <col:34> 'unsigned int' 4294967295
|   `-ForStmt 0x156009c30 <line:37:5, line:42:5>
|     |-DeclStmt 0x156008f18 <line:37:10, col:19>
|     | `-VarDecl 0x156008e90 <col:10, col:18> col:14 used i 'int' cinit
|     |   `-IntegerLiteral 0x156008ef8 <col:18> 'int' 1
|     |-<<<NULL>>>
|     |-BinaryOperator 0x156008f88 <col:21, col:25> 'int' '<'
|     | |-ImplicitCastExpr 0x156008f70 <col:21> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x156008f30 <col:21> 'int' lvalue Var 0x156008e90 'i' 'int'
|     | `-IntegerLiteral 0x156008f50 <col:25> 'int' 33
|     |-UnaryOperator 0x156008fc8 <col:29, col:30> 'int' postfix '++'
|     | `-DeclRefExpr 0x156008fa8 <col:29> 'int' lvalue Var 0x156008e90 'i' 'int'
|     `-CompoundStmt 0x156009c00 <col:34, line:42:5>
|       |-DeclStmt 0x156009080 <line:38:9, col:56>
|       | `-VarDecl 0x156008ff8 <col:9, col:24> col:24 invalid mincode 'const int'
|       |-DeclStmt 0x156009138 <line:39:9, col:56>
|       | `-VarDecl 0x1560090b0 <col:9, col:24> col:24 invalid maxcode 'const int'
|       |-BinaryOperator 0x156009928 <line:40:9, col:57> '<dependent type>' contains-errors '='
|       | |-ArraySubscriptExpr 0x156009830 <col:9, col:34> '<dependent type>' contains-errors lvalue
|       | | |-ImplicitCastExpr 0x156009800 <col:9, col:19> '<dependent type>' contains-errors <LValueToRValue>
|       | | | `-CXXDependentScopeMemberExpr 0x156009198 <col:9, col:19> '<dependent type>' contains-errors lvalue ->mincode_table
|       | | |   `-RecoveryExpr 0x156009170 <col:9> '<dependent type>' contains-errors lvalue
|       | | |     `-DeclRefExpr 0x156009150 <col:9> 'int *' lvalue ParmVar 0x155928928 'huffcdic' 'int *'
|       | | `-ImplicitCastExpr 0x156009818 <col:33> 'int' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1560091e0 <col:33> 'int' lvalue Var 0x156008e90 'i' 'int'
|       | `-BinaryOperator 0x156009908 <col:39, col:57> '<dependent type>' contains-errors '<<'
|       |   |-RecoveryExpr 0x156009850 <col:39> '<dependent type>' contains-errors lvalue
|       |   `-ParenExpr 0x1560098e8 <col:50, col:57> 'int'
|       |     `-BinaryOperator 0x1560098c8 <col:51, col:56> 'int' '-'
|       |       |-IntegerLiteral 0x156009870 <col:51> 'int' 32
|       |       `-ImplicitCastExpr 0x1560098b0 <col:56> 'int' <LValueToRValue>
|       |         `-DeclRefExpr 0x156009890 <col:56> 'int' lvalue Var 0x156008e90 'i' 'int'
|       `-BinaryOperator 0x156009be0 <line:41:9, col:69> '<dependent type>' contains-errors '='
|         |-ArraySubscriptExpr 0x156009a28 <col:9, col:34> '<dependent type>' contains-errors lvalue
|         | |-ImplicitCastExpr 0x1560099f8 <col:9, col:19> '<dependent type>' contains-errors <LValueToRValue>
|         | | `-CXXDependentScopeMemberExpr 0x156009990 <col:9, col:19> '<dependent type>' contains-errors lvalue ->maxcode_table
|         | |   `-RecoveryExpr 0x156009968 <col:9> '<dependent type>' contains-errors lvalue
|         | |     `-DeclRefExpr 0x156009948 <col:9> 'int *' lvalue ParmVar 0x155928928 'huffcdic' 'int *'
|         | `-ImplicitCastExpr 0x156009a10 <col:33> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x1560099d8 <col:33> 'int' lvalue Var 0x156008e90 'i' 'int'
|         `-BinaryOperator 0x156009bc0 <col:39, col:69> '<dependent type>' contains-errors '-'
|           |-ParenExpr 0x156009b80 <col:39, col:65> '<dependent type>' contains-errors
|           | `-BinaryOperator 0x156009b60 <col:40, col:64> '<dependent type>' contains-errors '<<'
|           |   |-ParenExpr 0x156009aa8 <col:40, col:52> '<dependent type>' contains-errors
|           |   | `-BinaryOperator 0x156009a88 <col:41, col:51> '<dependent type>' contains-errors '+'
|           |   |   |-RecoveryExpr 0x156009a48 <col:41> '<dependent type>' contains-errors lvalue
|           |   |   `-IntegerLiteral 0x156009a68 <col:51> 'int' 1
|           |   `-ParenExpr 0x156009b40 <col:57, col:64> 'int'
|           |     `-BinaryOperator 0x156009b20 <col:58, col:63> 'int' '-'
|           |       |-IntegerLiteral 0x156009ac8 <col:58> 'int' 32
|           |       `-ImplicitCastExpr 0x156009b08 <col:63> 'int' <LValueToRValue>
|           |         `-DeclRefExpr 0x156009ae8 <col:63> 'int' lvalue Var 0x156008e90 'i' 'int'
|           `-IntegerLiteral 0x156009ba0 <col:69> 'int' 1
`-FunctionDecl 0x155942a60 <line:10:9> col:9 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern
  |-ParmVarDecl 0x155942b60 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x155942bc8 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x155942c30 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x155942b08 <<invalid sloc>> Implicit 888
