TranslationUnitDecl 0x12e855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12e8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12e855bd0 '__int128'
|-TypedefDecl 0x12e856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12e855bf0 'unsigned __int128'
|-TypedefDecl 0x12e926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12e926000 'struct __NSConstantString_tag'
|   `-Record 0x12e856580 '__NSConstantString_tag'
|-TypedefDecl 0x12e926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12e855d90 '__SVInt8_t'
|-TypedefDecl 0x12e926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12e855db0 '__SVInt16_t'
|-TypedefDecl 0x12e926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12e855dd0 '__SVInt32_t'
|-TypedefDecl 0x12e9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12e855df0 '__SVInt64_t'
|-TypedefDecl 0x12e926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12e855e10 '__SVUint8_t'
|-TypedefDecl 0x12e9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12e855e30 '__SVUint16_t'
|-TypedefDecl 0x12e926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12e855e50 '__SVUint32_t'
|-TypedefDecl 0x12e926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12e855e70 '__SVUint64_t'
|-TypedefDecl 0x12e9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12e855e90 '__SVFloat16_t'
|-TypedefDecl 0x12e926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12e855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12e9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12e855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12e926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12e855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12e926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12e855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12e9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12e855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12e926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12e855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12e9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12e855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12e926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12e855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12e926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12e855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12e9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12e855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12e926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12e855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12e926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12e856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12e926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12e856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12e926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12e856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12e926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12e856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12e926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12e856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12e926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12e8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12e926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12e8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12e926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12e8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12e926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12e856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12e926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12e856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12e926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12e856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12e926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12e856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12e926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12e856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12e927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12e8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12e927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12e8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12e9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12e8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12e927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12e856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12e9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12e856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12e927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12e856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12e927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12e856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12e927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12e856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12e927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12e8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12e927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12e8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12e927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12e8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12e927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12e856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12e927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12e856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12e927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12e856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12e927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12e856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12e927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12e856390 '__SVBool_t'
|-TypedefDecl 0x12e927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12e8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12e927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12e8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12e927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12e8563f0 '__SVCount_t'
|-TypedefDecl 0x12e927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12e927fb0 'char *'
|   `-BuiltinType 0x12e8556b0 'char'
|-TypedefDecl 0x12e928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12e927fb0 'char *'
|   `-BuiltinType 0x12e8556b0 'char'
`-FunctionDecl 0x12e928608 <dataset_diviso_filec/func7802_vuln.c:1:1, line:19:1> line:1:13 invalid fix_log 'int (char **, const char *, const char *, int, void (*)(char *))' static
  |-ParmVarDecl 0x12e928128 <col:21, col:28> col:28 used logname 'char **'
  |-ParmVarDecl 0x12e9281a8 <col:37, col:49> col:49 used default_logname 'const char *'
  |-ParmVarDecl 0x12e928228 <line:2:21, col:32> col:32 used ext 'const char *'
  |-ParmVarDecl 0x12e9282a8 <col:37, col:42> col:42 invalid enabled 'int'
  |-ParmVarDecl 0x12e928498 <col:51, col:71> col:58 used reopen 'void (*)(char *)'
  `-CompoundStmt 0x12e942428 <line:3:1, line:19:1>
    |-IfStmt 0x12e941f78 <line:4:3, line:11:3>
    | |-UnaryOperator 0x12e928740 <line:4:7, col:9> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12e928728 <col:8, col:9> 'char *' <LValueToRValue>
    | |   `-UnaryOperator 0x12e928710 <col:8, col:9> 'char *' lvalue prefix '*' cannot overflow
    | |     `-ImplicitCastExpr 0x12e9286f8 <col:9> 'char **' <LValueToRValue>
    | |       `-DeclRefExpr 0x12e9286d8 <col:9> 'char **' lvalue ParmVar 0x12e928128 'logname' 'char **'
    | `-CompoundStmt 0x12e941f50 <line:5:3, line:11:3>
    |   |-DeclStmt 0x12e9287e8 <line:6:5, col:25>
    |   | `-VarDecl 0x12e928780 <col:5, col:10> col:10 invalid buff 'char'
    |   |-BinaryOperator 0x12e941e48 <line:7:5, line:8:43> 'char *' contains-errors '='
    |   | |-UnaryOperator 0x12e941d78 <line:7:5, col:6> 'char *' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x12e941d60 <col:6> 'char **' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x12e941800 <col:6> 'char **' lvalue ParmVar 0x12e928128 'logname' 'char **'
    |   | `-CallExpr 0x12e941e18 <col:15, line:8:43> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x12e9419b0 <line:7:15> 'int ()' Function 0x12e9418f8 'my_strdup' 'int ()'
    |   |   |-CallExpr 0x12e941b30 <col:25, col:65> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x12e941ab0 <col:25> 'int ()' Function 0x12e9419f8 'make_log_name' 'int ()'
    |   |   | |-RecoveryExpr 0x12e941ad0 <col:39> '<dependent type>' contains-errors lvalue
    |   |   | |-DeclRefExpr 0x12e941af0 <col:45> 'const char *' lvalue ParmVar 0x12e9281a8 'default_logname' 'const char *'
    |   |   | `-DeclRefExpr 0x12e941b10 <col:62> 'const char *' lvalue ParmVar 0x12e928228 'ext' 'const char *'
    |   |   `-CallExpr 0x12e941df0 <line:8:25, col:42> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x12e941c48 <col:25> 'int ()' Function 0x12e941b90 'MYF' 'int ()'
    |   |     `-BinaryOperator 0x12e941dd0 <col:29, col:36> '<dependent type>' contains-errors '+'
    |   |       |-RecoveryExpr 0x12e941d90 <col:29> '<dependent type>' contains-errors lvalue
    |   |       `-RecoveryExpr 0x12e941db0 <col:36> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x12e941f30 <line:9:5, line:10:14>
    |     |-UnaryOperator 0x12e941ed0 <line:9:9, col:11> 'int' prefix '!' cannot overflow
    |     | `-ImplicitCastExpr 0x12e941eb8 <col:10, col:11> 'char *' <LValueToRValue>
    |     |   `-UnaryOperator 0x12e941ea0 <col:10, col:11> 'char *' lvalue prefix '*' cannot overflow
    |     |     `-ImplicitCastExpr 0x12e941e88 <col:11> 'char **' <LValueToRValue>
    |     |       `-DeclRefExpr 0x12e941e68 <col:11> 'char **' lvalue ParmVar 0x12e928128 'logname' 'char **'
    |     `-ReturnStmt 0x12e941f20 <line:10:7, col:14>
    |       `-RecoveryExpr 0x12e941f00 <col:14> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12e942128 <line:13:3, col:51> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12e942078 <col:3> 'int ()' Function 0x12e941fc0 'mysql_mutex_unlock' 'int ()'
    | `-UnaryOperator 0x12e942110 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x12e9420f0 <col:23> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12e942238 <line:14:3, line:15:20>
    | |-RecoveryExpr 0x12e942150 <line:14:7> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x12e9421f8 <line:15:5, col:20> 'void'
    |   |-ImplicitCastExpr 0x12e9421e0 <col:5> 'void (*)(char *)' <LValueToRValue>
    |   | `-DeclRefExpr 0x12e942170 <col:5> 'void (*)(char *)' lvalue ParmVar 0x12e928498 'reopen' 'void (*)(char *)'
    |   `-ImplicitCastExpr 0x12e942220 <col:12, col:13> 'char *' <LValueToRValue>
    |     `-UnaryOperator 0x12e9421c8 <col:12, col:13> 'char *' lvalue prefix '*' cannot overflow
    |       `-ImplicitCastExpr 0x12e9421b0 <col:13> 'char **' <LValueToRValue>
    |         `-DeclRefExpr 0x12e942190 <col:13> 'char **' lvalue ParmVar 0x12e928128 'logname' 'char **'
    `-CallExpr 0x12e9423e8 <line:17:3, col:49> '<dependent type>' contains-errors
      |-DeclRefExpr 0x12e942338 <col:3> 'int ()' Function 0x12e942280 'mysql_mutex_lock' 'int ()'
      `-UnaryOperator 0x12e9423d0 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
        `-RecoveryExpr 0x12e9423b0 <col:21> '<dependent type>' contains-errors lvalue
