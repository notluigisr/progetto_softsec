TranslationUnitDecl 0x12b853008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12b853eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12b8535d0 '__int128'
|-TypedefDecl 0x12b853f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12b8535f0 'unsigned __int128'
|-TypedefDecl 0x12b923c30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12b923a00 'struct __NSConstantString_tag'
|   `-Record 0x12b853f80 '__NSConstantString_tag'
|-TypedefDecl 0x12b923c98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12b853790 '__SVInt8_t'
|-TypedefDecl 0x12b923d00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12b8537b0 '__SVInt16_t'
|-TypedefDecl 0x12b923d68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12b8537d0 '__SVInt32_t'
|-TypedefDecl 0x12b923dd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12b8537f0 '__SVInt64_t'
|-TypedefDecl 0x12b923e38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12b853810 '__SVUint8_t'
|-TypedefDecl 0x12b923ea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12b853830 '__SVUint16_t'
|-TypedefDecl 0x12b923f08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12b853850 '__SVUint32_t'
|-TypedefDecl 0x12b923f70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12b853870 '__SVUint64_t'
|-TypedefDecl 0x12b923fd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12b853890 '__SVFloat16_t'
|-TypedefDecl 0x12b924040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12b8538b0 '__SVFloat32_t'
|-TypedefDecl 0x12b9240a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12b8538d0 '__SVFloat64_t'
|-TypedefDecl 0x12b924110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12b8538f0 '__SVBfloat16_t'
|-TypedefDecl 0x12b924178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12b853910 '__clang_svint8x2_t'
|-TypedefDecl 0x12b9241e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12b853930 '__clang_svint16x2_t'
|-TypedefDecl 0x12b924248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12b853950 '__clang_svint32x2_t'
|-TypedefDecl 0x12b9242b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12b853970 '__clang_svint64x2_t'
|-TypedefDecl 0x12b924318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12b853990 '__clang_svuint8x2_t'
|-TypedefDecl 0x12b924380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12b8539b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12b9243e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12b8539d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12b924450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12b8539f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12b9244b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12b853a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12b924520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12b853a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12b924588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12b853a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12b9245f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12b853a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12b924658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12b853a90 '__clang_svint8x3_t'
|-TypedefDecl 0x12b9246c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12b853ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x12b924728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12b853ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x12b924790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12b853af0 '__clang_svint64x3_t'
|-TypedefDecl 0x12b9247f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12b853b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x12b924860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12b853b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x12b9248c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12b853b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x12b924930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12b853b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x12b924998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12b853b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12b925200 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12b853bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12b925268 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12b853bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12b9252d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12b853bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12b925338 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12b853c10 '__clang_svint8x4_t'
|-TypedefDecl 0x12b9253a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12b853c30 '__clang_svint16x4_t'
|-TypedefDecl 0x12b925408 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12b853c50 '__clang_svint32x4_t'
|-TypedefDecl 0x12b925470 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12b853c70 '__clang_svint64x4_t'
|-TypedefDecl 0x12b9254d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12b853c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x12b925540 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12b853cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12b9255a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12b853cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12b925610 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12b853cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12b925678 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12b853d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12b9256e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12b853d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12b925748 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12b853d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12b9257b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12b853d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12b925818 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12b853d90 '__SVBool_t'
|-TypedefDecl 0x12b925880 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12b853db0 '__clang_svboolx2_t'
|-TypedefDecl 0x12b9258e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12b853dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x12b925950 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12b853df0 '__SVCount_t'
|-TypedefDecl 0x12b9259f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12b9259b0 'char *'
|   `-BuiltinType 0x12b8530b0 'char'
|-TypedefDecl 0x12b925a68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12b9259b0 'char *'
|   `-BuiltinType 0x12b8530b0 'char'
`-FunctionDecl 0x12b925bc8 <dataset_diviso_filec/func12377_vuln.c:1:1, line:55:1> line:1:1 invalid xmlParseNCNameComplex 'int (int)'
  |-ParmVarDecl 0x12b925af0 <col:23, col:40> col:40 referenced invalid ctxt 'int'
  `-CompoundStmt 0x12d009d00 <col:46, line:55:1>
    |-DeclStmt 0x12b925db0 <line:2:5, col:19>
    | |-VarDecl 0x12b925c90 <col:5, col:15> col:9 used len 'int' cinit
    | | `-IntegerLiteral 0x12b925cf8 <col:15> 'int' 0
    | `-VarDecl 0x12b925d30 <col:5, col:18> col:18 used l 'int'
    |-DeclStmt 0x12b925e48 <line:3:5, col:10>
    | `-VarDecl 0x12b925de0 <col:5, col:9> col:9 used c 'int'
    |-DeclStmt 0x12b925f00 <line:4:5, col:18>
    | `-VarDecl 0x12b925e78 <col:5, col:17> col:9 used count 'int' cinit
    |   `-IntegerLiteral 0x12b925ee0 <col:17> 'int' 0
    |-DeclStmt 0x12b925f98 <line:5:5, col:23>
    | `-VarDecl 0x12b925f30 <col:5, col:20> col:20 referenced invalid end 'const int *'
    |-BinaryOperator 0x12b9260a8 <line:13:5, col:24> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x12b925fd0 <col:5> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12b925fb0 <col:5> 'const int *' lvalue Var 0x12b925f30 'end' 'const int *'
    | `-CXXDependentScopeMemberExpr 0x12b926060 <col:11, col:24> '<dependent type>' contains-errors lvalue ->cur
    |   `-CXXDependentScopeMemberExpr 0x12b926018 <col:11, col:17> '<dependent type>' contains-errors lvalue ->input
    |     `-RecoveryExpr 0x12b925ff8 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12b93e588 <line:14:5, col:19> 'int' '='
    | |-DeclRefExpr 0x12b9260c8 <col:5> 'int' lvalue Var 0x12b925de0 'c' 'int'
    | `-CallExpr 0x12b93e548 <col:9, col:19> 'int'
    |   |-ImplicitCastExpr 0x12b93e530 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12b93e4b8 <col:9> 'int ()' Function 0x12b93e400 'CUR_CHAR' 'int ()'
    |   `-ImplicitCastExpr 0x12b93e570 <col:18> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x12b93e4d8 <col:18> 'int' lvalue Var 0x12b925d30 'l' 'int'
    |-IfStmt 0x12b93ea38 <line:15:5, line:18:5>
    | |-BinaryOperator 0x12b93e9f0 <line:15:9, line:16:45> 'int' contains-errors '||'
    | | |-BinaryOperator 0x12b93e778 <line:15:9, col:46> 'int' '||'
    | | | |-BinaryOperator 0x12b93e6c8 <col:9, col:32> 'int' '||'
    | | | | |-ParenExpr 0x12b93e618 <col:9, col:18> 'int'
    | | | | | `-BinaryOperator 0x12b93e5f8 <col:10, col:15> 'int' '=='
    | | | | |   |-ImplicitCastExpr 0x12b93e5e0 <col:10> 'int' <LValueToRValue>
    | | | | |   | `-DeclRefExpr 0x12b93e5a8 <col:10> 'int' lvalue Var 0x12b925de0 'c' 'int'
    | | | | |   `-CharacterLiteral 0x12b93e5c8 <col:15> 'int' 32
    | | | | `-ParenExpr 0x12b93e6a8 <col:23, col:32> 'int'
    | | | |   `-BinaryOperator 0x12b93e688 <col:24, col:29> 'int' '=='
    | | | |     |-ImplicitCastExpr 0x12b93e670 <col:24> 'int' <LValueToRValue>
    | | | |     | `-DeclRefExpr 0x12b93e638 <col:24> 'int' lvalue Var 0x12b925de0 'c' 'int'
    | | | |     `-CharacterLiteral 0x12b93e658 <col:29> 'int' 62
    | | | `-ParenExpr 0x12b93e758 <col:37, col:46> 'int'
    | | |   `-BinaryOperator 0x12b93e738 <col:38, col:43> 'int' '=='
    | | |     |-ImplicitCastExpr 0x12b93e720 <col:38> 'int' <LValueToRValue>
    | | |     | `-DeclRefExpr 0x12b93e6e8 <col:38> 'int' lvalue Var 0x12b925de0 'c' 'int'
    | | |     `-CharacterLiteral 0x12b93e708 <col:43> 'int' 47
    | | `-ParenExpr 0x12b93e9d0 <line:16:2, col:45> 'int' contains-errors
    | |   `-BinaryOperator 0x12b93e9b0 <col:3, col:44> 'int' contains-errors '||'
    | |     |-UnaryOperator 0x12b93e908 <col:3, col:30> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |     | `-CallExpr 0x12b93e8d8 <col:4, col:30> '<dependent type>' contains-errors
    | |     |   |-DeclRefExpr 0x12b93e878 <col:4> 'int ()' Function 0x12b93e7c0 'xmlIsNameStartChar' 'int ()'
    | |     |   |-RecoveryExpr 0x12b93e898 <col:23> '<dependent type>' contains-errors lvalue
    | |     |   `-DeclRefExpr 0x12b93e8b8 <col:29> 'int' lvalue Var 0x12b925de0 'c' 'int'
    | |     `-ParenExpr 0x12b93e990 <col:35, col:44> 'int'
    | |       `-BinaryOperator 0x12b93e970 <col:36, col:41> 'int' '=='
    | |         |-ImplicitCastExpr 0x12b93e958 <col:36> 'int' <LValueToRValue>
    | |         | `-DeclRefExpr 0x12b93e920 <col:36> 'int' lvalue Var 0x12b925de0 'c' 'int'
    | |         `-CharacterLiteral 0x12b93e940 <col:41> 'int' 58
    | `-CompoundStmt 0x12b93ea28 <col:48, line:18:5>
    |-WhileStmt 0x12d009938 <line:20:5, line:48:5>
    | |-BinaryOperator 0x12b93ee88 <line:20:12, line:21:42> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x12b93ec28 <line:20:12, col:49> 'int' '&&'
    | | | |-BinaryOperator 0x12b93eb78 <col:12, col:35> 'int' '&&'
    | | | | |-ParenExpr 0x12b93eac8 <col:12, col:21> 'int'
    | | | | | `-BinaryOperator 0x12b93eaa8 <col:13, col:18> 'int' '!='
    | | | | |   |-ImplicitCastExpr 0x12b93ea90 <col:13> 'int' <LValueToRValue>
    | | | | |   | `-DeclRefExpr 0x12b93ea58 <col:13> 'int' lvalue Var 0x12b925de0 'c' 'int'
    | | | | |   `-CharacterLiteral 0x12b93ea78 <col:18> 'int' 32
    | | | | `-ParenExpr 0x12b93eb58 <col:26, col:35> 'int'
    | | | |   `-BinaryOperator 0x12b93eb38 <col:27, col:32> 'int' '!='
    | | | |     |-ImplicitCastExpr 0x12b93eb20 <col:27> 'int' <LValueToRValue>
    | | | |     | `-DeclRefExpr 0x12b93eae8 <col:27> 'int' lvalue Var 0x12b925de0 'c' 'int'
    | | | |     `-CharacterLiteral 0x12b93eb08 <col:32> 'int' 62
    | | | `-ParenExpr 0x12b93ec08 <col:40, col:49> 'int'
    | | |   `-BinaryOperator 0x12b93ebe8 <col:41, col:46> 'int' '!='
    | | |     |-ImplicitCastExpr 0x12b93ebd0 <col:41> 'int' <LValueToRValue>
    | | |     | `-DeclRefExpr 0x12b93eb98 <col:41> 'int' lvalue Var 0x12b925de0 'c' 'int'
    | | |     `-CharacterLiteral 0x12b93ebb8 <col:46> 'int' 47
    | | `-ParenExpr 0x12b93ee68 <line:21:5, col:42> 'int' contains-errors
    | |   `-BinaryOperator 0x12b93ee48 <col:6, col:41> 'int' contains-errors '&&'
    | |     |-CallExpr 0x12b93ed88 <col:6, col:27> '<dependent type>' contains-errors
    | |     | |-DeclRefExpr 0x12b93ed28 <col:6> 'int ()' Function 0x12b93ec70 'xmlIsNameChar' 'int ()'
    | |     | |-RecoveryExpr 0x12b93ed48 <col:20> '<dependent type>' contains-errors lvalue
    | |     | `-DeclRefExpr 0x12b93ed68 <col:26> 'int' lvalue Var 0x12b925de0 'c' 'int'
    | |     `-ParenExpr 0x12b93ee28 <col:32, col:41> 'int'
    | |       `-BinaryOperator 0x12b93ee08 <col:33, col:38> 'int' '!='
    | |         |-ImplicitCastExpr 0x12b93edf0 <col:33> 'int' <LValueToRValue>
    | |         | `-DeclRefExpr 0x12b93edb8 <col:33> 'int' lvalue Var 0x12b925de0 'c' 'int'
    | |         `-CharacterLiteral 0x12b93edd8 <col:38> 'int' 58
    | `-CompoundStmt 0x12d0098f8 <col:45, line:48:5>
    |   |-IfStmt 0x12d008e98 <line:22:2, line:32:2>
    |   | |-BinaryOperator 0x12b93ef38 <line:22:6, col:16> 'int' contains-errors '>'
    |   | | |-UnaryOperator 0x12b93eec8 <col:6, col:11> 'int' postfix '++'
    |   | | | `-DeclRefExpr 0x12b93eea8 <col:6> 'int' lvalue Var 0x12b925e78 'count' 'int'
    |   | | `-RecoveryExpr 0x12b93ef18 <col:16> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x12d008e78 <col:39, line:32:2>
    |   |   |-IfStmt 0x12b93f2f0 <line:23:13, line:27:13>
    |   |   | |-RecoveryExpr 0x12b93f070 <line:23:17, line:24:55> '_Bool' contains-errors
    |   |   | `-CompoundStmt 0x12b93f2d8 <col:58, line:27:13>
    |   |   |   `-CallExpr 0x12b93f288 <line:25:17, col:63> '<dependent type>' contains-errors
    |   |   |     |-DeclRefExpr 0x12b93f170 <col:17> 'int ()' Function 0x12b93f0b8 'xmlFatalErr' 'int ()'
    |   |   |     |-RecoveryExpr 0x12b93f190 <col:29> '<dependent type>' contains-errors lvalue
    |   |   |     |-RecoveryExpr 0x12b93f268 <col:35> '<dependent type>' contains-errors lvalue
    |   |   |     `-StringLiteral 0x12b93f210 <col:58> 'char[4]' lvalue "STR"
    |   |   `-BinaryOperator 0x12b93f350 <line:28:6, col:14> 'int' '='
    |   |     |-DeclRefExpr 0x12b93f310 <col:6> 'int' lvalue Var 0x12b925e78 'count' 'int'
    |   |     `-IntegerLiteral 0x12b93f330 <col:14> 'int' 0
    |   |-CompoundAssignOperator 0x12d008f10 <line:33:2, col:9> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |   | |-DeclRefExpr 0x12d008eb8 <col:2> 'int' lvalue Var 0x12b925c90 'len' 'int'
    |   | `-ImplicitCastExpr 0x12d008ef8 <col:9> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x12d008ed8 <col:9> 'int' lvalue Var 0x12b925d30 'l' 'int'
    |   |-CallExpr 0x12d009078 <line:34:2, col:9> 'int'
    |   | |-ImplicitCastExpr 0x12d009060 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x12d009020 <col:2> 'int ()' Function 0x12d008f68 'NEXTL' 'int ()'
    |   | `-ImplicitCastExpr 0x12d0090a0 <col:8> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x12d009040 <col:8> 'int' lvalue Var 0x12b925d30 'l' 'int'
    |   |-BinaryOperator 0x12d0091b0 <line:35:2, col:21> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x12d0090d8 <col:2> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x12d0090b8 <col:2> 'const int *' lvalue Var 0x12b925f30 'end' 'const int *'
    |   | `-CXXDependentScopeMemberExpr 0x12d009168 <col:8, col:21> '<dependent type>' contains-errors lvalue ->cur
    |   |   `-CXXDependentScopeMemberExpr 0x12d009120 <col:8, col:14> '<dependent type>' contains-errors lvalue ->input
    |   |     `-RecoveryExpr 0x12d009100 <col:8> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x12d009288 <line:36:2, col:16> 'int' '='
    |   | |-DeclRefExpr 0x12d0091d0 <col:2> 'int' lvalue Var 0x12b925de0 'c' 'int'
    |   | `-CallExpr 0x12d009248 <col:6, col:16> 'int'
    |   |   |-ImplicitCastExpr 0x12d009230 <col:6> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x12d0091f0 <col:6> 'int ()' Function 0x12b93e400 'CUR_CHAR' 'int ()'
    |   |   `-ImplicitCastExpr 0x12d009270 <col:15> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x12d009210 <col:15> 'int' lvalue Var 0x12b925d30 'l' 'int'
    |   `-IfStmt 0x12d0098d8 <line:37:2, line:47:2>
    |     |-BinaryOperator 0x12d009300 <line:37:6, col:11> 'int' '=='
    |     | |-ImplicitCastExpr 0x12d0092e8 <col:6> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x12d0092a8 <col:6> 'int' lvalue Var 0x12b925de0 'c' 'int'
    |     | `-IntegerLiteral 0x12d0092c8 <col:11> 'int' 0
    |     `-CompoundStmt 0x12d0098a0 <col:14, line:47:2>
    |       |-BinaryOperator 0x12d009360 <line:38:6, col:14> 'int' '='
    |       | |-DeclRefExpr 0x12d009320 <col:6> 'int' lvalue Var 0x12b925e78 'count' 'int'
    |       | `-IntegerLiteral 0x12d009340 <col:14> 'int' 0
    |       |-CompoundAssignOperator 0x12d009478 <line:40:6, col:26> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |       | |-CXXDependentScopeMemberExpr 0x12d009410 <col:6, col:19> '<dependent type>' contains-errors lvalue ->cur
    |       | | `-CXXDependentScopeMemberExpr 0x12d0093c8 <col:6, col:12> '<dependent type>' contains-errors lvalue ->input
    |       | |   `-RecoveryExpr 0x12d0093a0 <col:6> '<dependent type>' contains-errors lvalue
    |       | |     `-DeclRefExpr 0x12d009380 <col:6> 'int' lvalue ParmVar 0x12b925af0 'ctxt' 'int'
    |       | `-DeclRefExpr 0x12d009458 <col:26> 'int' lvalue Var 0x12b925d30 'l' 'int'
    |       |-CompoundAssignOperator 0x12d0095a0 <line:42:6, col:26> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |       | |-CXXDependentScopeMemberExpr 0x12d009538 <col:6, col:19> '<dependent type>' contains-errors lvalue ->cur
    |       | | `-CXXDependentScopeMemberExpr 0x12d0094f0 <col:6, col:12> '<dependent type>' contains-errors lvalue ->input
    |       | |   `-RecoveryExpr 0x12d0094c8 <col:6> '<dependent type>' contains-errors lvalue
    |       | |     `-DeclRefExpr 0x12d0094a8 <col:6> 'int' lvalue ParmVar 0x12b925af0 'ctxt' 'int'
    |       | `-DeclRefExpr 0x12d009580 <col:26> 'int' lvalue Var 0x12b925d30 'l' 'int'
    |       |-BinaryOperator 0x12d0097a8 <line:45:6, col:25> '<dependent type>' contains-errors '='
    |       | |-RecoveryExpr 0x12d0096d0 <col:6> '<dependent type>' contains-errors lvalue
    |       | | `-DeclRefExpr 0x12d0096b0 <col:6> 'const int *' lvalue Var 0x12b925f30 'end' 'const int *'
    |       | `-CXXDependentScopeMemberExpr 0x12d009760 <col:12, col:25> '<dependent type>' contains-errors lvalue ->cur
    |       |   `-CXXDependentScopeMemberExpr 0x12d009718 <col:12, col:18> '<dependent type>' contains-errors lvalue ->input
    |       |     `-RecoveryExpr 0x12d0096f8 <col:12> '<dependent type>' contains-errors lvalue
    |       `-BinaryOperator 0x12d009880 <line:46:6, col:20> 'int' '='
    |         |-DeclRefExpr 0x12d0097c8 <col:6> 'int' lvalue Var 0x12b925de0 'c' 'int'
    |         `-CallExpr 0x12d009840 <col:10, col:20> 'int'
    |           |-ImplicitCastExpr 0x12d009828 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |           | `-DeclRefExpr 0x12d0097e8 <col:10> 'int ()' Function 0x12b93e400 'CUR_CHAR' 'int ()'
    |           `-ImplicitCastExpr 0x12d009868 <col:19> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x12d009808 <col:19> 'int' lvalue Var 0x12b925d30 'l' 'int'
    |-IfStmt 0x12d009a90 <line:49:5, line:53:5>
    | |-RecoveryExpr 0x12d009a00 <line:49:9, line:50:47> '_Bool' contains-errors
    | `-CompoundStmt 0x12d009a80 <col:50, line:53:5>
    `-ReturnStmt 0x12d009cf0 <line:54:5, col:53>
      `-ParenExpr 0x12d009cd0 <col:11, col:53> '<dependent type>' contains-errors
        `-CallExpr 0x12d009c98 <col:12, col:52> '<dependent type>' contains-errors
          |-DeclRefExpr 0x12d009b90 <col:12> 'int ()' Function 0x12d009ad8 'xmlDictLookup' 'int ()'
          |-CXXDependentScopeMemberExpr 0x12d009bd0 <col:26, col:32> '<dependent type>' contains-errors lvalue ->dict
          | `-RecoveryExpr 0x12d009bb0 <col:26> '<dependent type>' contains-errors lvalue
          |-BinaryOperator 0x12d009c58 <col:38, col:44> '<dependent type>' contains-errors '-'
          | |-RecoveryExpr 0x12d009c18 <col:38> '<dependent type>' contains-errors lvalue
          | `-DeclRefExpr 0x12d009c38 <col:44> 'int' lvalue Var 0x12b925c90 'len' 'int'
          `-DeclRefExpr 0x12d009c78 <col:49> 'int' lvalue Var 0x12b925c90 'len' 'int'
