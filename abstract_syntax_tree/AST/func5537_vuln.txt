TranslationUnitDecl 0x153055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1530564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x153055bd0 '__int128'
|-TypedefDecl 0x153056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x153055bf0 'unsigned __int128'
|-TypedefDecl 0x153126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x153126000 'struct __NSConstantString_tag'
|   `-Record 0x153056580 '__NSConstantString_tag'
|-TypedefDecl 0x153126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x153055d90 '__SVInt8_t'
|-TypedefDecl 0x153126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x153055db0 '__SVInt16_t'
|-TypedefDecl 0x153126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x153055dd0 '__SVInt32_t'
|-TypedefDecl 0x1531263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x153055df0 '__SVInt64_t'
|-TypedefDecl 0x153126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x153055e10 '__SVUint8_t'
|-TypedefDecl 0x1531264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x153055e30 '__SVUint16_t'
|-TypedefDecl 0x153126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x153055e50 '__SVUint32_t'
|-TypedefDecl 0x153126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x153055e70 '__SVUint64_t'
|-TypedefDecl 0x1531265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x153055e90 '__SVFloat16_t'
|-TypedefDecl 0x153126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x153055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1531266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x153055ed0 '__SVFloat64_t'
|-TypedefDecl 0x153126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x153055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x153126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x153055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1531267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x153055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x153126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x153055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1531268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x153055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x153126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x153055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x153126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x153055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1531269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x153055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x153126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x153055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x153126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x153056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x153126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x153056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x153126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x153056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x153126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x153056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x153126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x153056090 '__clang_svint8x3_t'
|-TypedefDecl 0x153126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1530560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x153126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1530560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x153126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1530560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x153126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x153056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x153126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x153056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x153126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x153056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x153126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x153056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x153126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x153056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x153127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1530561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x153127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1530561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1531278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1530561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x153127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x153056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1531279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x153056230 '__clang_svint16x4_t'
|-TypedefDecl 0x153127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x153056250 '__clang_svint32x4_t'
|-TypedefDecl 0x153127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x153056270 '__clang_svint64x4_t'
|-TypedefDecl 0x153127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x153056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x153127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1530562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x153127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1530562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x153127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1530562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x153127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x153056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x153127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x153056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x153127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x153056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x153127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x153056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x153127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x153056390 '__SVBool_t'
|-TypedefDecl 0x153127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1530563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x153127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1530563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x153127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1530563f0 '__SVCount_t'
|-TypedefDecl 0x153127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x153127fb0 'char *'
|   `-BuiltinType 0x1530556b0 'char'
|-TypedefDecl 0x153128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x153127fb0 'char *'
|   `-BuiltinType 0x1530556b0 'char'
`-FunctionDecl 0x1531284c8 <dataset_diviso_filec/func5537_vuln.c:1:1, line:39:1> line:1:1 invalid store_word 'int (int *, char *, int, int, char *, int)'
  |-ParmVarDecl 0x153128128 <line:2:5, col:18> col:18 invalid spin 'int *'
  |-ParmVarDecl 0x1531281a8 <line:3:5, col:13> col:13 used word 'char *'
  |-ParmVarDecl 0x153128228 <line:4:5, col:10> col:10 used flags 'int'
  |-ParmVarDecl 0x1531282a8 <line:5:5, col:10> col:10 used region 'int'
  |-ParmVarDecl 0x153128328 <line:6:5, col:13> col:13 used pfxlist 'char *'
  |-ParmVarDecl 0x1531283a8 <line:7:5, col:10> col:10 used need_affix 'int'
  `-CompoundStmt 0x153144450 <line:8:1, line:39:1>
    |-DeclStmt 0x153141898 <line:9:5, col:33>
    | `-VarDecl 0x1531285b8 <col:5, col:32> col:10 used len 'int' cinit
    |   `-CStyleCastExpr 0x153141870 <col:16, col:32> 'int' <NoOp>
    |     `-CallExpr 0x153141818 <col:21, col:32> 'int'
    |       |-ImplicitCastExpr 0x153141800 <col:21> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x153128780 <col:21> 'int ()' Function 0x1531286c8 'STRLEN' 'int ()'
    |       `-ImplicitCastExpr 0x153141840 <col:28> 'char *' <LValueToRValue>
    |         `-DeclRefExpr 0x1531287a0 <col:28> 'char *' lvalue ParmVar 0x1531281a8 'word' 'char *'
    |-DeclStmt 0x153141b40 <line:10:5, col:40>
    | `-VarDecl 0x1531418c8 <col:5, col:39> col:10 used ct 'int' cinit
    |   `-CallExpr 0x153141af8 <col:15, col:39> 'int'
    |     |-ImplicitCastExpr 0x153141ae0 <col:15> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x153141a10 <col:15> 'int ()' Function 0x153141958 'captype' 'int ()'
    |     |-ImplicitCastExpr 0x153141b28 <col:23> 'char *' <LValueToRValue>
    |     | `-DeclRefExpr 0x153141a30 <col:23> 'char *' lvalue ParmVar 0x1531281a8 'word' 'char *'
    |     `-BinaryOperator 0x153141ac0 <col:29, col:36> 'char *' '+'
    |       |-ImplicitCastExpr 0x153141a90 <col:29> 'char *' <LValueToRValue>
    |       | `-DeclRefExpr 0x153141a50 <col:29> 'char *' lvalue ParmVar 0x1531281a8 'word' 'char *'
    |       `-ImplicitCastExpr 0x153141aa8 <col:36> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x153141a70 <col:36> 'int' lvalue Var 0x1531285b8 'len' 'int'
    |-DeclStmt 0x153141be8 <line:11:5, col:29>
    | `-VarDecl 0x153141b80 <col:5, col:12> col:12 invalid foldword 'char'
    |-DeclStmt 0x153141cb8 <line:12:5, col:18>
    | `-VarDecl 0x153141c18 <col:5, col:16> col:10 used res 'int' cinit
    |   `-RecoveryExpr 0x153141c98 <col:16> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x153141d50 <line:13:5, col:14>
    | `-VarDecl 0x153141ce8 <col:5, col:13> col:13 used p 'char *'
    |-ForStmt 0x153143de0 <line:16:5, line:23:5>
    | |-BinaryOperator 0x153141fa8 <line:16:10, col:14> 'char *' '='
    | | |-DeclRefExpr 0x153141f50 <col:10> 'char *' lvalue Var 0x153141ce8 'p' 'char *'
    | | `-ImplicitCastExpr 0x153141f90 <col:14> 'char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x153141f70 <col:14> 'char *' lvalue ParmVar 0x153128328 'pfxlist' 'char *'
    | |-<<<NULL>>>
    | |-BinaryOperator 0x153142040 <col:23, col:30> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x153141fc8 <col:23> 'int' contains-errors lvalue Var 0x153141c18 'res' 'int'
    | | `-RecoveryExpr 0x153142020 <col:30> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x153142080 <col:34, col:36> 'char *' prefix '++'
    | | `-DeclRefExpr 0x153142060 <col:36> 'char *' lvalue Var 0x153141ce8 'p' 'char *'
    | `-CompoundStmt 0x153143dc0 <line:17:5, line:23:5>
    |   |-IfStmt 0x153142798 <line:18:2, line:20:35>
    |   | |-RecoveryExpr 0x1531421e8 <line:18:6, col:44> '_Bool' contains-errors
    |   | `-BinaryOperator 0x153142778 <line:19:6, line:20:35> 'int' contains-errors '='
    |   |   |-DeclRefExpr 0x153142208 <line:19:6> 'int' contains-errors lvalue Var 0x153141c18 'res' 'int'
    |   |   `-CallExpr 0x153142728 <col:12, line:20:35> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x153142308 <line:19:12> 'int ()' Function 0x153142250 'tree_add_word' 'int ()'
    |   |     |-RecoveryExpr 0x153142328 <col:26> '<dependent type>' contains-errors lvalue
    |   |     |-RecoveryExpr 0x153142348 <col:32> '<dependent type>' contains-errors lvalue
    |   |     |-CXXDependentScopeMemberExpr 0x153142388 <col:42, col:48> '<dependent type>' contains-errors lvalue ->si_foldroot
    |   |     | `-RecoveryExpr 0x153142368 <col:42> '<dependent type>' contains-errors lvalue
    |   |     |-BinaryOperator 0x153142668 <col:61, col:66> 'int' '|'
    |   |     | |-ImplicitCastExpr 0x153142638 <col:61> 'int' <LValueToRValue>
    |   |     | | `-DeclRefExpr 0x1531423d0 <col:61> 'int' lvalue Var 0x1531418c8 'ct' 'int'
    |   |     | `-ImplicitCastExpr 0x153142650 <col:66> 'int' <LValueToRValue>
    |   |     |   `-DeclRefExpr 0x1531423f0 <col:66> 'int' lvalue ParmVar 0x153128228 'flags' 'int'
    |   |     |-DeclRefExpr 0x153142460 <line:20:9> 'int' lvalue ParmVar 0x1531282a8 'region' 'int'
    |   |     `-ConditionalOperator 0x1531426f8 <col:17, col:34> '<dependent type>' contains-errors
    |   |       |-BinaryOperator 0x1531426a8 <col:17, col:22> 'int' contains-errors '=='
    |   |       | |-DeclRefExpr 0x153142480 <col:17> 'char *' lvalue Var 0x153141ce8 'p' 'char *'
    |   |       | `-RecoveryExpr 0x153142688 <col:22> '<dependent type>' contains-errors lvalue
    |   |       |-IntegerLiteral 0x1531424d8 <col:29> 'int' 0
    |   |       `-UnaryOperator 0x1531426e0 <col:33, col:34> 'char' lvalue prefix '*' cannot overflow
    |   |         `-ImplicitCastExpr 0x1531426c8 <col:34> 'char *' <LValueToRValue>
    |   |           `-DeclRefExpr 0x1531424f8 <col:34> 'char *' lvalue Var 0x153141ce8 'p' 'char *'
    |   `-IfStmt 0x153143da0 <line:21:2, line:22:6>
    |     |-BinaryOperator 0x153143d78 <line:21:6, col:25> 'int' contains-errors '||'
    |     | |-BinaryOperator 0x153143ce8 <col:6, col:11> 'int' contains-errors '=='
    |     | | |-DeclRefExpr 0x1531427b8 <col:6> 'char *' lvalue Var 0x153141ce8 'p' 'char *'
    |     | | `-RecoveryExpr 0x153143cc8 <col:11> '<dependent type>' contains-errors lvalue
    |     | `-BinaryOperator 0x153143d58 <col:19, col:25> 'int' contains-errors '=='
    |     |   |-UnaryOperator 0x153143d20 <col:19, col:20> 'char' lvalue prefix '*' cannot overflow
    |     |   | `-ImplicitCastExpr 0x153143d08 <col:20> 'char *' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x153143c20 <col:20> 'char *' lvalue Var 0x153141ce8 'p' 'char *'
    |     |   `-RecoveryExpr 0x153143d38 <col:25> '<dependent type>' contains-errors lvalue
    |     `-BreakStmt 0x153143d98 <line:22:6>
    |-UnaryOperator 0x153143e80 <line:24:5, col:13> '<dependent type>' contains-errors prefix '++' cannot overflow
    | `-CXXDependentScopeMemberExpr 0x153143e38 <col:7, col:13> '<dependent type>' contains-errors lvalue ->si_foldwcount
    |   `-RecoveryExpr 0x153143e18 <col:7> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1531443e8 <line:26:5, line:37:5>
    | |-RecoveryExpr 0x153143ef8 <line:26:9, col:63> '_Bool' contains-errors
    | `-CompoundStmt 0x1531443d0 <line:27:5, line:37:5>
    |   `-UnaryOperator 0x1531443b8 <line:36:2, col:10> '<dependent type>' contains-errors prefix '++' cannot overflow
    |     `-CXXDependentScopeMemberExpr 0x153144370 <col:4, col:10> '<dependent type>' contains-errors lvalue ->si_keepwcount
    |       `-RecoveryExpr 0x153144350 <col:4> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x153144440 <line:38:5, col:12>
      `-ImplicitCastExpr 0x153144428 <col:12> 'int' contains-errors <LValueToRValue>
        `-DeclRefExpr 0x153144408 <col:12> 'int' contains-errors lvalue Var 0x153141c18 'res' 'int'
