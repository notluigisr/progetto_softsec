TranslationUnitDecl 0x12f855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12f8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12f855bd0 '__int128'
|-TypedefDecl 0x12f856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12f855bf0 'unsigned __int128'
|-TypedefDecl 0x12f926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12f926000 'struct __NSConstantString_tag'
|   `-Record 0x12f856580 '__NSConstantString_tag'
|-TypedefDecl 0x12f926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12f855d90 '__SVInt8_t'
|-TypedefDecl 0x12f926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12f855db0 '__SVInt16_t'
|-TypedefDecl 0x12f926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12f855dd0 '__SVInt32_t'
|-TypedefDecl 0x12f9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12f855df0 '__SVInt64_t'
|-TypedefDecl 0x12f926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12f855e10 '__SVUint8_t'
|-TypedefDecl 0x12f9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12f855e30 '__SVUint16_t'
|-TypedefDecl 0x12f926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12f855e50 '__SVUint32_t'
|-TypedefDecl 0x12f926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12f855e70 '__SVUint64_t'
|-TypedefDecl 0x12f9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12f855e90 '__SVFloat16_t'
|-TypedefDecl 0x12f926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12f855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12f9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12f855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12f926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12f855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12f926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12f855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12f9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12f855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12f926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12f855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12f9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12f855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12f926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12f855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12f926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12f855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12f9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12f855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12f926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12f855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12f926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12f856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12f926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12f856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12f926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12f856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12f926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12f856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12f926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12f856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12f926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12f8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12f926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12f8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12f926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12f8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12f926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12f856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12f926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12f856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12f926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12f856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12f926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12f856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12f926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12f856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12f927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12f8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12f927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12f8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12f9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12f8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12f927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12f856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12f9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12f856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12f927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12f856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12f927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12f856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12f927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12f856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12f927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12f8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12f927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12f8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12f927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12f8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12f927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12f856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12f927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12f856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12f927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12f856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12f927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12f856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12f927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12f856390 '__SVBool_t'
|-TypedefDecl 0x12f927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12f8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12f927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12f8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12f927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12f8563f0 '__SVCount_t'
|-TypedefDecl 0x12f927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12f927fb0 'char *'
|   `-BuiltinType 0x12f8556b0 'char'
|-TypedefDecl 0x12f928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12f927fb0 'char *'
|   `-BuiltinType 0x12f8556b0 'char'
|-FunctionDecl 0x12f928268 <dataset_diviso_filec/func16178_vuln.c:1:1, line:70:1> line:1:1 PGTYPEStimestamp_from_asc 'int (char *, char **)'
| |-ParmVarDecl 0x12f9280d8 <col:27, col:33> col:33 used str 'char *'
| |-ParmVarDecl 0x12f928188 <col:38, col:45> col:45 used endptr 'char **'
| `-CompoundStmt 0x138009568 <line:2:1, line:70:1>
|   |-DeclStmt 0x12f928420 <line:8:2, col:24>
|   | `-VarDecl 0x12f928398 <col:2, col:21> col:10 used noresult 'double' cinit
|   |   `-FloatingLiteral 0x12f928400 <col:21> 'double' 0.000000e+00
|   |-DeclStmt 0x12f940d28 <line:11:2, line:12:16>
|   | |-RecordDecl 0x12f928438 <line:11:2, col:9> col:9 struct tm
|   | |-VarDecl 0x12f928538 <col:2, col:12> col:12 invalid tt 'struct tm'
|   | `-VarDecl 0x12f940c68 <col:2, line:12:14> col:8 used tm 'struct tm *' cinit
|   |   `-UnaryOperator 0x12f940cf0 <col:13, col:14> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-RecoveryExpr 0x12f940cd0 <col:14> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x12f940dc0 <line:13:2, col:13>
|   | `-VarDecl 0x12f940d58 <col:2, col:8> col:8 used dtype 'int'
|   |-DeclStmt 0x12f940e58 <line:14:2, col:10>
|   | `-VarDecl 0x12f940df0 <col:2, col:8> col:8 used nf 'int'
|   |-DeclStmt 0x12f940f08 <line:15:2, col:31>
|   | `-VarDecl 0x12f940ea0 <col:2, col:11> col:11 invalid field 'char *'
|   |-DeclStmt 0x12f940fb8 <line:16:2, col:28>
|   | `-VarDecl 0x12f940f50 <col:2, col:8> col:8 invalid ftype 'int'
|   |-DeclStmt 0x12f941098 <line:17:2, col:42>
|   | `-VarDecl 0x12f941030 <col:2, col:8> col:8 invalid lowstr 'char'
|   |-DeclStmt 0x12f941130 <line:18:2, col:18>
|   | `-VarDecl 0x12f9410c8 <col:2, col:11> col:11 used realptr 'char *'
|   |-DeclStmt 0x12f941278 <line:19:2, col:53>
|   | `-VarDecl 0x12f941160 <col:2, col:11> col:11 used ptr 'char **'
|   |-IfStmt 0x12f941660 <line:21:2, line:25:2>
|   | |-BinaryOperator 0x12f941590 <line:21:6, col:34> 'int' contains-errors '>='
|   | | |-CallExpr 0x12f9414d8 <col:6, col:16> 'unsigned long'
|   | | | |-ImplicitCastExpr 0x12f9414c0 <col:6> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x12f941438 <col:6> 'unsigned long (const char *)' Function 0x12f9412c8 'strlen' 'unsigned long (const char *)'
|   | | | `-ImplicitCastExpr 0x12f941518 <col:13> 'const char *' <NoOp>
|   | | |   `-ImplicitCastExpr 0x12f941500 <col:13> 'char *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x12f941458 <col:13> 'char *' lvalue ParmVar 0x12f9280d8 'str' 'char *'
|   | | `-UnaryExprOrTypeTraitExpr 0x12f941570 <col:21, col:34> 'unsigned long' contains-errors sizeof
|   | |   `-ParenExpr 0x12f941550 <col:27, col:34> '<dependent type>' contains-errors lvalue
|   | |     `-RecoveryExpr 0x12f941530 <col:28> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x12f941648 <line:22:2, line:25:2>
|   |   `-ReturnStmt 0x12f941638 <line:24:3, col:19>
|   |     `-ImplicitCastExpr 0x12f941620 <col:10, col:19> 'int' <FloatingToIntegral>
|   |       `-ImplicitCastExpr 0x12f941608 <col:10, col:19> 'double' <LValueToRValue>
|   |         `-ParenExpr 0x12f9415e8 <col:10, col:19> 'double' lvalue
|   |           `-DeclRefExpr 0x12f9415c8 <col:11> 'double' lvalue Var 0x12f928398 'noresult' 'double'
|   |-IfStmt 0x138008c18 <line:27:2, line:32:2>
|   | |-BinaryOperator 0x138008b48 <line:27:6, line:28:61> 'int' contains-errors '||'
|   | | |-BinaryOperator 0x12f941928 <line:27:6, col:60> 'int' contains-errors '!='
|   | | | |-CallExpr 0x12f9418b8 <col:6, col:55> '<dependent type>' contains-errors
|   | | | | |-DeclRefExpr 0x12f941790 <col:6> 'int ()' Function 0x12f9416d8 'ParseDateTime' 'int ()'
|   | | | | |-DeclRefExpr 0x12f9417b0 <col:20> 'char *' lvalue ParmVar 0x12f9280d8 'str' 'char *'
|   | | | | |-RecoveryExpr 0x12f9417d0 <col:25> '<dependent type>' contains-errors lvalue
|   | | | | |-RecoveryExpr 0x12f9417f0 <col:33> '<dependent type>' contains-errors lvalue
|   | | | | |-RecoveryExpr 0x12f941810 <col:40> '<dependent type>' contains-errors lvalue
|   | | | | |-UnaryOperator 0x12f941880 <col:47, col:48> 'int *' prefix '&' cannot overflow
|   | | | | | `-DeclRefExpr 0x12f941830 <col:48> 'int' lvalue Var 0x12f940df0 'nf' 'int'
|   | | | | `-DeclRefExpr 0x12f941898 <col:52> 'char **' lvalue Var 0x12f941160 'ptr' 'char **'
|   | | | `-IntegerLiteral 0x12f941908 <col:60> 'int' 0
|   | | `-BinaryOperator 0x138008b28 <line:28:3, col:61> 'int' contains-errors '!='
|   | |   |-CallExpr 0x138008ad0 <col:3, col:56> '<dependent type>' contains-errors
|   | |   | |-DeclRefExpr 0x1380088b8 <col:3> 'int ()' Function 0x138008800 'DecodeDateTime' 'int ()'
|   | |   | |-RecoveryExpr 0x1380088d8 <col:18> '<dependent type>' contains-errors lvalue
|   | |   | |-RecoveryExpr 0x1380088f8 <col:25> '<dependent type>' contains-errors lvalue
|   | |   | |-DeclRefExpr 0x138008918 <col:32> 'int' lvalue Var 0x12f940df0 'nf' 'int'
|   | |   | |-UnaryOperator 0x138008958 <col:36, col:37> 'int *' prefix '&' cannot overflow
|   | |   | | `-DeclRefExpr 0x138008938 <col:37> 'int' lvalue Var 0x12f940d58 'dtype' 'int'
|   | |   | |-DeclRefExpr 0x138008970 <col:44> 'struct tm *' contains-errors lvalue Var 0x12f940c68 'tm' 'struct tm *'
|   | |   | |-UnaryOperator 0x138008ab8 <col:48, col:49> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |   | | `-RecoveryExpr 0x138008a98 <col:49> '<dependent type>' contains-errors lvalue
|   | |   | `-IntegerLiteral 0x1380089c0 <col:55> 'int' 0
|   | |   `-IntegerLiteral 0x138008a38 <col:61> 'int' 0
|   | `-CompoundStmt 0x138008c00 <line:29:2, line:32:2>
|   |   `-ReturnStmt 0x138008bf0 <line:31:3, col:19>
|   |     `-ImplicitCastExpr 0x138008bd8 <col:10, col:19> 'int' <FloatingToIntegral>
|   |       `-ImplicitCastExpr 0x138008bc0 <col:10, col:19> 'double' <LValueToRValue>
|   |         `-ParenExpr 0x138008ba0 <col:10, col:19> 'double' lvalue
|   |           `-DeclRefExpr 0x138008b80 <col:11> 'double' lvalue Var 0x12f928398 'noresult' 'double'
|   `-SwitchStmt 0x138008c70 <line:34:2, line:63:2>
|     |-ImplicitCastExpr 0x138008c58 <line:34:10> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x138008c38 <col:10> 'int' lvalue Var 0x12f940d58 'dtype' 'int'
|     `-CompoundStmt 0x1380094f8 <line:35:2, line:63:2>
|       |-IfStmt 0x138009020 <line:37:4, line:41:4>
|       | |-BinaryOperator 0x138008f68 <line:37:8, col:49> 'int' contains-errors '!='
|       | | |-CallExpr 0x138008f28 <col:8, col:44> '<dependent type>' contains-errors
|       | | | |-DeclRefExpr 0x138008d90 <col:8> 'int ()' Function 0x138008cd8 'tm2timestamp' 'int ()'
|       | | | |-DeclRefExpr 0x138008db0 <col:21> 'struct tm *' contains-errors lvalue Var 0x12f940c68 'tm' 'struct tm *'
|       | | | |-RecoveryExpr 0x138008eb0 <col:25> '<dependent type>' contains-errors lvalue
|       | | | |-RecoveryExpr 0x138008ed0 <col:31> '<dependent type>' contains-errors lvalue
|       | | | `-UnaryOperator 0x138008f10 <col:37, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow
|       | | |   `-RecoveryExpr 0x138008ef0 <col:38> '<dependent type>' contains-errors lvalue
|       | | `-IntegerLiteral 0x138008e70 <col:49> 'int' 0
|       | `-CompoundStmt 0x138009008 <line:38:4, line:41:4>
|       |   `-ReturnStmt 0x138008ff8 <line:40:5, col:21>
|       |     `-ImplicitCastExpr 0x138008fe0 <col:12, col:21> 'int' <FloatingToIntegral>
|       |       `-ImplicitCastExpr 0x138008fc8 <col:12, col:21> 'double' <LValueToRValue>
|       |         `-ParenExpr 0x138008fa8 <col:12, col:21> 'double' lvalue
|       |           `-DeclRefExpr 0x138008f88 <col:13> 'double' lvalue Var 0x12f928398 'noresult' 'double'
|       |-BreakStmt 0x138009040 <line:42:4>
|       |-BreakStmt 0x1380091b8 <line:46:4>
|       |-BreakStmt 0x1380092c0 <line:50:4>
|       |-BreakStmt 0x1380093c8 <line:54:4>
|       |-ReturnStmt 0x138009440 <line:58:4, col:20>
|       | `-ImplicitCastExpr 0x138009428 <col:11, col:20> 'int' <FloatingToIntegral>
|       |   `-ImplicitCastExpr 0x138009410 <col:11, col:20> 'double' <LValueToRValue>
|       |     `-ParenExpr 0x1380093f0 <col:11, col:20> 'double' lvalue
|       |       `-DeclRefExpr 0x1380093d0 <col:12> 'double' lvalue Var 0x12f928398 'noresult' 'double'
|       |-DefaultStmt 0x138009458 <line:60:3, col:10>
|       | `-NullStmt 0x138009450 <col:10>
|       `-ReturnStmt 0x1380094e8 <line:62:4, col:20>
|         `-ImplicitCastExpr 0x1380094d0 <col:11, col:20> 'int' <FloatingToIntegral>
|           `-ImplicitCastExpr 0x1380094b8 <col:11, col:20> 'double' <LValueToRValue>
|             `-ParenExpr 0x138009498 <col:11, col:20> 'double' lvalue
|               `-DeclRefExpr 0x138009478 <col:12> 'double' lvalue Var 0x12f928398 'noresult' 'double'
`-FunctionDecl 0x12f9412c8 <line:21:6> col:6 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x12f9413c8 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x12f941370 <<invalid sloc>> Implicit 902
