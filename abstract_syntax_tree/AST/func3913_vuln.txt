TranslationUnitDecl 0x128055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1280564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x128055bd0 '__int128'
|-TypedefDecl 0x128056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x128055bf0 'unsigned __int128'
|-TypedefDecl 0x128126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x128126000 'struct __NSConstantString_tag'
|   `-Record 0x128056580 '__NSConstantString_tag'
|-TypedefDecl 0x128126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x128055d90 '__SVInt8_t'
|-TypedefDecl 0x128126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x128055db0 '__SVInt16_t'
|-TypedefDecl 0x128126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x128055dd0 '__SVInt32_t'
|-TypedefDecl 0x1281263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x128055df0 '__SVInt64_t'
|-TypedefDecl 0x128126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x128055e10 '__SVUint8_t'
|-TypedefDecl 0x1281264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x128055e30 '__SVUint16_t'
|-TypedefDecl 0x128126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x128055e50 '__SVUint32_t'
|-TypedefDecl 0x128126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x128055e70 '__SVUint64_t'
|-TypedefDecl 0x1281265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x128055e90 '__SVFloat16_t'
|-TypedefDecl 0x128126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x128055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1281266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x128055ed0 '__SVFloat64_t'
|-TypedefDecl 0x128126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x128055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x128126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x128055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1281267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x128055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x128126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x128055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1281268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x128055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x128126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x128055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x128126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x128055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1281269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x128055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x128126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x128055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x128126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x128056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x128126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x128056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x128126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x128056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x128126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x128056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x128126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x128056090 '__clang_svint8x3_t'
|-TypedefDecl 0x128126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1280560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x128126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1280560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x128126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1280560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x128126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x128056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x128126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x128056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x128126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x128056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x128126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x128056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x128126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x128056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x128127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1280561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x128127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1280561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1281278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1280561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x128127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x128056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1281279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x128056230 '__clang_svint16x4_t'
|-TypedefDecl 0x128127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x128056250 '__clang_svint32x4_t'
|-TypedefDecl 0x128127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x128056270 '__clang_svint64x4_t'
|-TypedefDecl 0x128127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x128056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x128127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1280562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x128127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1280562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x128127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1280562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x128127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x128056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x128127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x128056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x128127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x128056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x128127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x128056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x128127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x128056390 '__SVBool_t'
|-TypedefDecl 0x128127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1280563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x128127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1280563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x128127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1280563f0 '__SVCount_t'
|-TypedefDecl 0x128127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x128127fb0 'char *'
|   `-BuiltinType 0x1280556b0 'char'
|-TypedefDecl 0x128128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x128127fb0 'char *'
|   `-BuiltinType 0x1280556b0 'char'
|-FunctionDecl 0x128128238 <dataset_diviso_filec/func3913_vuln.c:1:1, line:38:1> line:1:12 fetch_uidl 'int (char *, void *)' static
| |-ParmVarDecl 0x1281280d8 <col:23, col:29> col:29 used line 'char *'
| |-ParmVarDecl 0x128128158 <col:35, col:41> col:41 used data 'void *'
| `-CompoundStmt 0x128145858 <line:2:1, line:38:1>
|   |-DeclStmt 0x128128450 <line:3:3, col:15>
|   | |-VarDecl 0x128128350 <col:3, col:7> col:7 used i 'int'
|   | `-VarDecl 0x1281283d0 <col:3, col:10> col:10 used index 'int'
|   |-DeclStmt 0x128128740 <line:4:3, col:48>
|   | |-RecordDecl 0x128128468 <col:3, col:10> col:10 struct Context
|   | `-VarDecl 0x1281285d8 <col:3, col:44> col:19 used ctx 'struct Context *' cinit
|   |   `-CStyleCastExpr 0x128128700 <col:25, col:44> 'struct Context *' <BitCast>
|   |     `-ImplicitCastExpr 0x1281286e8 <col:44> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x128128640 <col:44> 'void *' lvalue ParmVar 0x128128158 'data' 'void *'
|   |-DeclStmt 0x128142088 <line:5:3, col:58>
|   | |-RecordDecl 0x128128758 <col:3, col:10> col:10 struct PopData
|   | `-VarDecl 0x128141ac8 <col:3, col:54> col:19 used pop_data 'struct PopData *' cinit
|   |   `-CStyleCastExpr 0x128142048 <col:30, col:54> 'struct PopData *' contains-errors <Dependent>
|   |     `-RecoveryExpr 0x128141f90 <col:49, col:54> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x128141b30 <col:49> 'struct Context *' lvalue Var 0x1281285d8 'ctx' 'struct Context *'
|   |-DeclStmt 0x128142170 <line:6:3, col:20>
|   | `-VarDecl 0x1281420b8 <col:3, col:16> col:9 used endp 'char *' cinit
|   |   `-RecoveryExpr 0x128142150 <col:16> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x128142618 <line:9:3, col:33> 'int' contains-errors '='
|   | |-DeclRefExpr 0x1281421a8 <col:3> 'int' lvalue Var 0x1281283d0 'index' 'int'
|   | `-ImplicitCastExpr 0x128142600 <col:11, col:33> 'int' contains-errors <IntegralCast>
|   |   `-CallExpr 0x128142598 <col:11, col:33> 'long' contains-errors
|   |     |-ImplicitCastExpr 0x128142580 <col:11> 'long (*)(const char *, char **, int)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x128142498 <col:11> 'long (const char *, char **, int)' Function 0x128142248 'strtol' 'long (const char *, char **, int)'
|   |     |-ImplicitCastExpr 0x1281425e8 <col:18> 'const char *' <NoOp>
|   |     | `-ImplicitCastExpr 0x1281425d0 <col:18> 'char *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1281424b8 <col:18> 'char *' lvalue ParmVar 0x1281280d8 'line' 'char *'
|   |     |-UnaryOperator 0x1281424f8 <col:24, col:25> 'char **' contains-errors prefix '&' cannot overflow
|   |     | `-DeclRefExpr 0x1281424d8 <col:25> 'char *' contains-errors lvalue Var 0x1281420b8 'endp' 'char *'
|   |     `-IntegerLiteral 0x128142510 <col:31> 'int' 10
|   |-IfStmt 0x1281426b8 <line:10:3, line:11:13>
|   | |-RecoveryExpr 0x128142650 <line:10:7> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x1281426a8 <line:11:5, col:13>
|   |   `-UnaryOperator 0x128142690 <col:12, col:13> 'int' prefix '-'
|   |     `-IntegerLiteral 0x128142670 <col:13> 'int' 1
|   |-WhileStmt 0x1281427c8 <line:12:3, line:13:9>
|   | |-BinaryOperator 0x128142770 <line:12:10, col:19> 'int' contains-errors '=='
|   | | |-ImplicitCastExpr 0x128142758 <col:10, col:11> 'int' contains-errors <IntegralCast>
|   | | | `-ImplicitCastExpr 0x128142740 <col:10, col:11> 'char' contains-errors <LValueToRValue>
|   | | |   `-UnaryOperator 0x128142710 <col:10, col:11> 'char' contains-errors lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x1281426f8 <col:11> 'char *' contains-errors <LValueToRValue>
|   | | |       `-DeclRefExpr 0x1281426d8 <col:11> 'char *' contains-errors lvalue Var 0x1281420b8 'endp' 'char *'
|   | | `-CharacterLiteral 0x128142728 <col:19> 'int' 32
|   | `-UnaryOperator 0x1281427b0 <line:13:5, col:9> 'char *' contains-errors postfix '++'
|   |   `-DeclRefExpr 0x128142790 <col:5> 'char *' contains-errors lvalue Var 0x1281420b8 'endp' 'char *'
|   |-CallExpr 0x1281442c8 <line:14:3, col:39> 'void *' contains-errors
|   | |-ImplicitCastExpr 0x1281442b0 <col:3> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x128143ee8 <col:3> 'void *(void *, const void *, unsigned long)' Function 0x128142868 'memmove' 'void *(void *, const void *, unsigned long)'
|   | |-ImplicitCastExpr 0x128144318 <col:11> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x128144300 <col:11> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x128143f08 <col:11> 'char *' lvalue ParmVar 0x1281280d8 'line' 'char *'
|   | |-ImplicitCastExpr 0x128144348 <col:17> 'const void *' contains-errors <BitCast>
|   | | `-ImplicitCastExpr 0x128144330 <col:17> 'char *' contains-errors <LValueToRValue>
|   | |   `-DeclRefExpr 0x128143f28 <col:17> 'char *' contains-errors lvalue Var 0x1281420b8 'endp' 'char *'
|   | `-BinaryOperator 0x128144228 <col:23, col:38> 'unsigned long' contains-errors '+'
|   |   |-CallExpr 0x128144198 <col:23, col:34> 'unsigned long' contains-errors
|   |   | |-ImplicitCastExpr 0x128144180 <col:23> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1281440f8 <col:23> 'unsigned long (const char *)' Function 0x128143f88 'strlen' 'unsigned long (const char *)'
|   |   | `-ImplicitCastExpr 0x1281441d8 <col:30> 'const char *' contains-errors <NoOp>
|   |   |   `-ImplicitCastExpr 0x1281441c0 <col:30> 'char *' contains-errors <LValueToRValue>
|   |   |     `-DeclRefExpr 0x128144118 <col:30> 'char *' contains-errors lvalue Var 0x1281420b8 'endp' 'char *'
|   |   `-ImplicitCastExpr 0x128144210 <col:38> 'unsigned long' <IntegralCast>
|   |     `-IntegerLiteral 0x1281441f0 <col:38> 'int' 1
|   |-ForStmt 0x1281447a0 <line:16:3, line:18:7>
|   | |-BinaryOperator 0x1281443a0 <line:16:8, col:12> 'int' '='
|   | | |-DeclRefExpr 0x128144360 <col:8> 'int' lvalue Var 0x128128350 'i' 'int'
|   | | `-IntegerLiteral 0x128144380 <col:12> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x128144440 <col:15, col:24> 'int' contains-errors '<'
|   | | |-DeclRefExpr 0x1281443c0 <col:15> 'int' lvalue Var 0x128128350 'i' 'int'
|   | | `-RecoveryExpr 0x128144418 <col:19, col:24> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x1281443e0 <col:19> 'struct Context *' lvalue Var 0x1281285d8 'ctx' 'struct Context *'
|   | |-UnaryOperator 0x128144480 <col:34, col:35> 'int' postfix '++'
|   | | `-DeclRefExpr 0x128144460 <col:34> 'int' lvalue Var 0x128128350 'i' 'int'
|   | `-IfStmt 0x128144780 <line:17:5, line:18:7>
|   |   |-BinaryOperator 0x128144758 <line:17:9, col:54> 'int' contains-errors '=='
|   |   | |-CallExpr 0x128144708 <col:9, col:49> '<dependent type>' contains-errors
|   |   | | |-DeclRefExpr 0x1281445b0 <col:9> 'int ()' Function 0x1281444f8 'mutt_str_strcmp' 'int ()'
|   |   | | |-DeclRefExpr 0x1281445d0 <col:25> 'char *' lvalue ParmVar 0x1281280d8 'line' 'char *'
|   |   | | `-CXXDependentScopeMemberExpr 0x1281446c0 <col:31, col:45> '<dependent type>' contains-errors lvalue ->data
|   |   | |   `-ArraySubscriptExpr 0x1281446a0 <col:31, col:42> '<dependent type>' contains-errors lvalue
|   |   | |     |-ImplicitCastExpr 0x128144670 <col:31, col:36> '<dependent type>' contains-errors <LValueToRValue>
|   |   | |     | `-RecoveryExpr 0x128144628 <col:31, col:36> '<dependent type>' contains-errors lvalue
|   |   | |     |   `-DeclRefExpr 0x1281445f0 <col:31> 'struct Context *' lvalue Var 0x1281285d8 'ctx' 'struct Context *'
|   |   | |     `-ImplicitCastExpr 0x128144688 <col:41> 'int' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x128144650 <col:41> 'int' lvalue Var 0x128128350 'i' 'int'
|   |   | `-IntegerLiteral 0x128144738 <col:54> 'int' 0
|   |   `-BreakStmt 0x128144778 <line:18:7>
|   |-IfStmt 0x1281454f0 <line:20:3, line:31:8> has_else
|   | |-BinaryOperator 0x128144858 <line:20:7, col:17> 'int' contains-errors '=='
|   | | |-DeclRefExpr 0x1281447d8 <col:7> 'int' lvalue Var 0x128128350 'i' 'int'
|   | | `-RecoveryExpr 0x128144830 <col:12, col:17> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x1281447f8 <col:12> 'struct Context *' lvalue Var 0x1281285d8 'ctx' 'struct Context *'
|   | |-CompoundStmt 0x1281452a0 <line:21:3, line:30:3>
|   | | |-CallExpr 0x128144a88 <line:22:5, col:37> 'int'
|   | | | |-ImplicitCastExpr 0x128144a70 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x128144958 <col:5> 'int ()' Function 0x1281448a0 'mutt_debug' 'int ()'
|   | | | |-IntegerLiteral 0x128144978 <col:16> 'int' 1
|   | | | |-ImplicitCastExpr 0x128144ac8 <col:19> 'char *' <ArrayToPointerDecay>
|   | | | | `-StringLiteral 0x1281449e0 <col:19> 'char[4]' lvalue "STR"
|   | | | |-ImplicitCastExpr 0x128144ae0 <col:26> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x128144a00 <col:26> 'int' lvalue Var 0x1281283d0 'index' 'int'
|   | | | `-ImplicitCastExpr 0x128144af8 <col:33> 'char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x128144a20 <col:33> 'char *' lvalue ParmVar 0x1281280d8 'line' 'char *'
|   | | |-IfStmt 0x128144d28 <line:24:5, line:25:26>
|   | | | |-BinaryOperator 0x128144b90 <line:24:9, col:19> 'int' contains-errors '>='
|   | | | | |-DeclRefExpr 0x128144b10 <col:9> 'int' lvalue Var 0x128128350 'i' 'int'
|   | | | | `-RecoveryExpr 0x128144b68 <col:14, col:19> '<dependent type>' contains-errors lvalue
|   | | | |   `-DeclRefExpr 0x128144b30 <col:14> 'struct Context *' lvalue Var 0x1281285d8 'ctx' 'struct Context *'
|   | | | `-CallExpr 0x128144ce8 <line:25:7, col:26> 'int'
|   | | |   |-ImplicitCastExpr 0x128144cd0 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   | | |   | `-DeclRefExpr 0x128144c90 <col:7> 'int ()' Function 0x128144bd8 'mx_alloc_memory' 'int ()'
|   | | |   `-ImplicitCastExpr 0x128144d10 <col:23> 'struct Context *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x128144cb0 <col:23> 'struct Context *' lvalue Var 0x1281285d8 'ctx' 'struct Context *'
|   | | |-UnaryOperator 0x128144da8 <line:27:5, col:18> '<dependent type>' contains-errors postfix '++' cannot overflow
|   | | | `-RecoveryExpr 0x128144d80 <col:5, col:10> '<dependent type>' contains-errors lvalue
|   | | |   `-DeclRefExpr 0x128144d48 <col:5> 'struct Context *' lvalue Var 0x1281285d8 'ctx' 'struct Context *'
|   | | |-BinaryOperator 0x128144fd0 <line:28:5, col:36> '<dependent type>' contains-errors '='
|   | | | |-ArraySubscriptExpr 0x128144e78 <col:5, col:16> '<dependent type>' contains-errors lvalue
|   | | | | |-ImplicitCastExpr 0x128144e48 <col:5, col:10> '<dependent type>' contains-errors <LValueToRValue>
|   | | | | | `-RecoveryExpr 0x128144e00 <col:5, col:10> '<dependent type>' contains-errors lvalue
|   | | | | |   `-DeclRefExpr 0x128144dc0 <col:5> 'struct Context *' lvalue Var 0x1281285d8 'ctx' 'struct Context *'
|   | | | | `-ImplicitCastExpr 0x128144e60 <col:15> 'int' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x128144e28 <col:15> 'int' lvalue Var 0x128128350 'i' 'int'
|   | | | `-CallExpr 0x128144fb0 <col:20, col:36> 'int'
|   | | |   `-ImplicitCastExpr 0x128144f98 <col:20> 'int (*)()' <FunctionToPointerDecay>
|   | | |     `-DeclRefExpr 0x128144f78 <col:20> 'int ()' Function 0x128144ec0 'mutt_header_new' 'int ()'
|   | | `-BinaryOperator 0x128145280 <line:29:5, col:46> '<dependent type>' contains-errors '='
|   | |   |-CXXDependentScopeMemberExpr 0x1281450c0 <col:5, col:19> '<dependent type>' contains-errors lvalue ->data
|   | |   | `-ArraySubscriptExpr 0x1281450a0 <col:5, col:16> '<dependent type>' contains-errors lvalue
|   | |   |   |-ImplicitCastExpr 0x128145070 <col:5, col:10> '<dependent type>' contains-errors <LValueToRValue>
|   | |   |   | `-RecoveryExpr 0x128145028 <col:5, col:10> '<dependent type>' contains-errors lvalue
|   | |   |   |   `-DeclRefExpr 0x128144ff0 <col:5> 'struct Context *' lvalue Var 0x1281285d8 'ctx' 'struct Context *'
|   | |   |   `-ImplicitCastExpr 0x128145088 <col:15> 'int' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x128145050 <col:15> 'int' lvalue Var 0x128128350 'i' 'int'
|   | |   `-CallExpr 0x128145240 <col:26, col:46> 'int'
|   | |     |-ImplicitCastExpr 0x128145228 <col:26> 'int (*)()' <FunctionToPointerDecay>
|   | |     | `-DeclRefExpr 0x1281451e8 <col:26> 'int ()' Function 0x128145130 'mutt_str_strdup' 'int ()'
|   | |     `-ImplicitCastExpr 0x128145268 <col:42> 'char *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x128145208 <col:42> 'char *' lvalue ParmVar 0x1281280d8 'line' 'char *'
|   | `-NullStmt 0x1281454e8 <line:31:8>
|   |-BinaryOperator 0x128145658 <line:34:3, col:25> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x1281455f0 <col:3, col:17> '<dependent type>' contains-errors lvalue ->refno
|   | | `-ArraySubscriptExpr 0x1281455d0 <col:3, col:14> '<dependent type>' contains-errors lvalue
|   | |   |-ImplicitCastExpr 0x1281455a0 <col:3, col:8> '<dependent type>' contains-errors <LValueToRValue>
|   | |   | `-RecoveryExpr 0x128145558 <col:3, col:8> '<dependent type>' contains-errors lvalue
|   | |   |   `-DeclRefExpr 0x128145520 <col:3> 'struct Context *' lvalue Var 0x1281285d8 'ctx' 'struct Context *'
|   | |   `-ImplicitCastExpr 0x1281455b8 <col:13> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x128145580 <col:13> 'int' lvalue Var 0x128128350 'i' 'int'
|   | `-DeclRefExpr 0x128145638 <col:25> 'int' lvalue Var 0x1281283d0 'index' 'int'
|   |-BinaryOperator 0x128145808 <line:35:3, col:33> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x128145748 <col:3, col:17> '<dependent type>' contains-errors lvalue ->index
|   | | `-ArraySubscriptExpr 0x128145728 <col:3, col:14> '<dependent type>' contains-errors lvalue
|   | |   |-ImplicitCastExpr 0x1281456f8 <col:3, col:8> '<dependent type>' contains-errors <LValueToRValue>
|   | |   | `-RecoveryExpr 0x1281456b0 <col:3, col:8> '<dependent type>' contains-errors lvalue
|   | |   |   `-DeclRefExpr 0x128145678 <col:3> 'struct Context *' lvalue Var 0x1281285d8 'ctx' 'struct Context *'
|   | |   `-ImplicitCastExpr 0x128145710 <col:13> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1281456d8 <col:13> 'int' lvalue Var 0x128128350 'i' 'int'
|   | `-BinaryOperator 0x1281457e8 <col:25, col:33> 'int' '-'
|   |   |-ImplicitCastExpr 0x1281457d0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x128145790 <col:25> 'int' lvalue Var 0x1281283d0 'index' 'int'
|   |   `-IntegerLiteral 0x1281457b0 <col:33> 'int' 1
|   `-ReturnStmt 0x128145848 <line:37:3, col:10>
|     `-IntegerLiteral 0x128145828 <col:10> 'int' 0
|-FunctionDecl 0x128142248 <line:9:11> col:11 implicit used strtol 'long (const char *, char **, int)' extern
| |-ParmVarDecl 0x128142348 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1281423b0 <<invalid sloc>> <invalid sloc> 'char **'
| |-ParmVarDecl 0x128142418 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x1281422f0 <<invalid sloc>> Implicit 877
|-FunctionDecl 0x128142868 <line:14:3> col:3 implicit used memmove 'void *(void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0x128142968 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x128143e00 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x128143e68 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x128142910 <<invalid sloc>> Implicit 884
`-FunctionDecl 0x128143f88 <col:23> col:23 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x128144088 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x128144030 <<invalid sloc>> Implicit 902
