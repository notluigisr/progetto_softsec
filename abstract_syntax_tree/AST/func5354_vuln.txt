TranslationUnitDecl 0x125028408 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1250292b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1250289d0 '__int128'
|-TypedefDecl 0x125029328 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1250289f0 'unsigned __int128'
|-TypedefDecl 0x12381e230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12381e000 'struct __NSConstantString_tag'
|   `-Record 0x125029380 '__NSConstantString_tag'
|-TypedefDecl 0x12381e298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x125028b90 '__SVInt8_t'
|-TypedefDecl 0x12381e300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x125028bb0 '__SVInt16_t'
|-TypedefDecl 0x12381e368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x125028bd0 '__SVInt32_t'
|-TypedefDecl 0x12381e3d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x125028bf0 '__SVInt64_t'
|-TypedefDecl 0x12381e438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x125028c10 '__SVUint8_t'
|-TypedefDecl 0x12381e4a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x125028c30 '__SVUint16_t'
|-TypedefDecl 0x12381e508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x125028c50 '__SVUint32_t'
|-TypedefDecl 0x12381e570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x125028c70 '__SVUint64_t'
|-TypedefDecl 0x12381e5d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x125028c90 '__SVFloat16_t'
|-TypedefDecl 0x12381e640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x125028cb0 '__SVFloat32_t'
|-TypedefDecl 0x12381e6a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x125028cd0 '__SVFloat64_t'
|-TypedefDecl 0x12381e710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x125028cf0 '__SVBfloat16_t'
|-TypedefDecl 0x12381e778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x125028d10 '__clang_svint8x2_t'
|-TypedefDecl 0x12381e7e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x125028d30 '__clang_svint16x2_t'
|-TypedefDecl 0x12381e848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x125028d50 '__clang_svint32x2_t'
|-TypedefDecl 0x12381e8b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x125028d70 '__clang_svint64x2_t'
|-TypedefDecl 0x12381e918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x125028d90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12381e980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x125028db0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12381e9e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x125028dd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12381ea50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x125028df0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12381eab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x125028e10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12381eb20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x125028e30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12381eb88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x125028e50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12381ebf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x125028e70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12381ec58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x125028e90 '__clang_svint8x3_t'
|-TypedefDecl 0x12381ecc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x125028eb0 '__clang_svint16x3_t'
|-TypedefDecl 0x12381ed28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x125028ed0 '__clang_svint32x3_t'
|-TypedefDecl 0x12381ed90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x125028ef0 '__clang_svint64x3_t'
|-TypedefDecl 0x12381edf8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x125028f10 '__clang_svuint8x3_t'
|-TypedefDecl 0x12381ee60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x125028f30 '__clang_svuint16x3_t'
|-TypedefDecl 0x12381eec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x125028f50 '__clang_svuint32x3_t'
|-TypedefDecl 0x12381ef30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x125028f70 '__clang_svuint64x3_t'
|-TypedefDecl 0x12381ef98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x125028f90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x123830000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x125028fb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x123830068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x125028fd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1238300d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x125028ff0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x123830138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x125029010 '__clang_svint8x4_t'
|-TypedefDecl 0x1238301a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x125029030 '__clang_svint16x4_t'
|-TypedefDecl 0x123830208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x125029050 '__clang_svint32x4_t'
|-TypedefDecl 0x123830270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x125029070 '__clang_svint64x4_t'
|-TypedefDecl 0x1238302d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x125029090 '__clang_svuint8x4_t'
|-TypedefDecl 0x123830340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1250290b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1238303a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1250290d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x123830410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1250290f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x123830478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x125029110 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1238304e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x125029130 '__clang_svfloat32x4_t'
|-TypedefDecl 0x123830548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x125029150 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1238305b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x125029170 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x123830618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x125029190 '__SVBool_t'
|-TypedefDecl 0x123830680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1250291b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1238306e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1250291d0 '__clang_svboolx4_t'
|-TypedefDecl 0x123830750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1250291f0 '__SVCount_t'
|-TypedefDecl 0x1238307f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1238307b0 'char *'
|   `-BuiltinType 0x1250284b0 'char'
|-TypedefDecl 0x123830868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1238307b0 'char *'
|   `-BuiltinType 0x1250284b0 'char'
`-FunctionDecl 0x123830ba8 <dataset_diviso_filec/func5354_vuln.c:1:1, line:22:1> line:1:1 invalid mp_capable_print 'int (int *, const char *, int, char)'
  |-ParmVarDecl 0x123830928 <col:18, col:38> col:38 invalid ndo 'int *'
  |-ParmVarDecl 0x1238309a8 <line:2:18, col:32> col:32 used opt 'const char *'
  |-ParmVarDecl 0x123830a28 <col:37, col:43> col:43 invalid opt_len 'int'
  |-ParmVarDecl 0x123830aa0 <col:52, col:59> col:59 used flags 'char'
  `-CompoundStmt 0x123854da8 <line:3:1, line:22:1>
    |-DeclStmt 0x123830f40 <line:4:9, col:71>
    | |-RecordDecl 0x123830c70 <col:15, col:22> col:22 struct mp_capable
    | `-VarDecl 0x123830dd8 <col:9, col:68> col:34 used mpc 'const struct mp_capable *' cinit
    |   `-CStyleCastExpr 0x123830f00 <col:40, col:68> 'const struct mp_capable *' <BitCast>
    |     `-ImplicitCastExpr 0x123830ee8 <col:68> 'const char *' <LValueToRValue> part_of_explicit_cast
    |       `-DeclRefExpr 0x123830e40 <col:68> 'const char *' lvalue ParmVar 0x1238309a8 'opt' 'const char *'
    |-IfStmt 0x123853f78 <line:6:9, line:8:24>
    | |-RecoveryExpr 0x123853f28 <line:6:13, line:7:69> '_Bool' contains-errors
    | `-ReturnStmt 0x123853f68 <line:8:17, col:24>
    |   `-IntegerLiteral 0x123853f48 <col:24> 'int' 0
    |-IfStmt 0x123854900 <line:10:9, line:13:9>
    | |-BinaryOperator 0x1238545e0 <line:10:13, col:53> 'int' contains-errors '!='
    | | |-CallExpr 0x123854598 <col:13, col:48> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x1238540f0 <col:13> 'int ()' Function 0x123854038 'MP_CAPABLE_OPT_VERSION' 'int ()'
    | | | `-RecoveryExpr 0x123854570 <col:36, col:41> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x123854110 <col:36> 'const struct mp_capable *' lvalue Var 0x123830dd8 'mpc' 'const struct mp_capable *'
    | | `-IntegerLiteral 0x1238545c0 <col:53> 'int' 0
    | `-CompoundStmt 0x1238548e0 <col:56, line:13:9>
    |   |-CallExpr 0x123854888 <line:11:17, col:76> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1238546e0 <col:17> 'int ()' Function 0x123854628 'ND_PRINT' 'int ()'
    |   | `-ParenExpr 0x123854868 <col:26, col:75> '<dependent type>' contains-errors
    |   |   `-BinaryOperator 0x123854848 <col:27, col:74> '<dependent type>' contains-errors ','
    |   |     |-BinaryOperator 0x123854780 <col:27, col:32> 'char[4]' contains-errors ','
    |   |     | |-RecoveryExpr 0x123854700 <col:27> '<dependent type>' contains-errors lvalue
    |   |     | `-StringLiteral 0x123854760 <col:32> 'char[4]' lvalue "STR"
    |   |     `-CallExpr 0x123854820 <col:39, col:74> '<dependent type>' contains-errors
    |   |       |-DeclRefExpr 0x1238547a0 <col:39> 'int ()' Function 0x123854038 'MP_CAPABLE_OPT_VERSION' 'int ()'
    |   |       `-RecoveryExpr 0x1238547f8 <col:62, col:67> '<dependent type>' contains-errors lvalue
    |   |         `-DeclRefExpr 0x1238547c0 <col:62> 'const struct mp_capable *' lvalue Var 0x123830dd8 'mpc' 'const struct mp_capable *'
    |   `-ReturnStmt 0x1238548d0 <line:12:17, col:24>
    |     `-IntegerLiteral 0x1238548b0 <col:24> 'int' 1
    |-IfStmt 0x123854ac0 <line:15:9, line:16:38>
    | |-BinaryOperator 0x1238549d8 <line:15:13, col:26> '<dependent type>' contains-errors '&'
    | | |-RecoveryExpr 0x123854958 <col:13, col:18> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x123854920 <col:13> 'const struct mp_capable *' lvalue Var 0x123830dd8 'mpc' 'const struct mp_capable *'
    | | `-RecoveryExpr 0x1238549b8 <col:26> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x123854a98 <line:16:17, col:38> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1238549f8 <col:17> 'int ()' Function 0x123854628 'ND_PRINT' 'int ()'
    |   `-ParenExpr 0x123854a78 <col:26, col:37> 'char[4]' contains-errors
    |     `-BinaryOperator 0x123854a58 <col:27, col:32> 'char[4]' contains-errors ','
    |       |-RecoveryExpr 0x123854a18 <col:27> '<dependent type>' contains-errors lvalue
    |       `-StringLiteral 0x123854a38 <col:32> 'char[4]' lvalue "STR"
    |-CallExpr 0x123854b60 <line:17:9, col:70> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x123854ae0 <col:9> 'int ()' Function 0x123854628 'ND_PRINT' 'int ()'
    | `-BinaryOperator 0x123854b40 <col:19, col:24> 'char[4]' contains-errors ','
    |   |-RecoveryExpr 0x123854b00 <col:19> '<dependent type>' contains-errors lvalue
    |   `-StringLiteral 0x123854b20 <col:24> 'char[4]' lvalue "STR"
    |-IfStmt 0x123854c90 <line:18:9, line:19:80>
    | |-BinaryOperator 0x123854bc8 <line:18:13, col:24> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x123854b88 <col:13> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x123854ba8 <col:24> 'int' 20
    | `-CallExpr 0x123854c68 <line:19:17, col:80> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x123854be8 <col:17> 'int ()' Function 0x123854628 'ND_PRINT' 'int ()'
    |   `-BinaryOperator 0x123854c48 <col:27, col:32> 'char[4]' contains-errors ','
    |     |-RecoveryExpr 0x123854c08 <col:27> '<dependent type>' contains-errors lvalue
    |     `-StringLiteral 0x123854c28 <col:32> 'char[4]' lvalue "STR"
    |-CallExpr 0x123854d50 <line:20:9, col:30> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x123854cb0 <col:9> 'int ()' Function 0x123854628 'ND_PRINT' 'int ()'
    | `-ParenExpr 0x123854d30 <col:18, col:29> 'char[4]' contains-errors
    |   `-BinaryOperator 0x123854d10 <col:19, col:24> 'char[4]' contains-errors ','
    |     |-RecoveryExpr 0x123854cd0 <col:19> '<dependent type>' contains-errors lvalue
    |     `-StringLiteral 0x123854cf0 <col:24> 'char[4]' lvalue "STR"
    `-ReturnStmt 0x123854d98 <line:21:9, col:16>
      `-IntegerLiteral 0x123854d78 <col:16> 'int' 1
