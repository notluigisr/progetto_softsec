TranslationUnitDecl 0x146831408 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1468322b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1468319d0 '__int128'
|-TypedefDecl 0x146832328 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1468319f0 'unsigned __int128'
|-TypedefDecl 0x1450c4830 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1450c4600 'struct __NSConstantString_tag'
|   `-Record 0x146832380 '__NSConstantString_tag'
|-TypedefDecl 0x1450c4898 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x146831b90 '__SVInt8_t'
|-TypedefDecl 0x1450c4900 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x146831bb0 '__SVInt16_t'
|-TypedefDecl 0x1450c4968 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x146831bd0 '__SVInt32_t'
|-TypedefDecl 0x1450c49d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x146831bf0 '__SVInt64_t'
|-TypedefDecl 0x1450c4a38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x146831c10 '__SVUint8_t'
|-TypedefDecl 0x1450c4aa0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x146831c30 '__SVUint16_t'
|-TypedefDecl 0x1450c4b08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x146831c50 '__SVUint32_t'
|-TypedefDecl 0x1450c4b70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x146831c70 '__SVUint64_t'
|-TypedefDecl 0x1450c4bd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x146831c90 '__SVFloat16_t'
|-TypedefDecl 0x1450c4c40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x146831cb0 '__SVFloat32_t'
|-TypedefDecl 0x1450c4ca8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x146831cd0 '__SVFloat64_t'
|-TypedefDecl 0x1450c4d10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x146831cf0 '__SVBfloat16_t'
|-TypedefDecl 0x1450c4d78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x146831d10 '__clang_svint8x2_t'
|-TypedefDecl 0x1450c4de0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x146831d30 '__clang_svint16x2_t'
|-TypedefDecl 0x1450c4e48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x146831d50 '__clang_svint32x2_t'
|-TypedefDecl 0x1450c4eb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x146831d70 '__clang_svint64x2_t'
|-TypedefDecl 0x1450c4f18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x146831d90 '__clang_svuint8x2_t'
|-TypedefDecl 0x1450c4f80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x146831db0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1450c4fe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x146831dd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x1450c5050 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x146831df0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1450c50b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x146831e10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x1450c5120 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x146831e30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x1450c5188 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x146831e50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1450c51f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x146831e70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x1450c5258 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x146831e90 '__clang_svint8x3_t'
|-TypedefDecl 0x1450c52c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x146831eb0 '__clang_svint16x3_t'
|-TypedefDecl 0x1450c5328 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x146831ed0 '__clang_svint32x3_t'
|-TypedefDecl 0x1450c5390 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x146831ef0 '__clang_svint64x3_t'
|-TypedefDecl 0x1450c53f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x146831f10 '__clang_svuint8x3_t'
|-TypedefDecl 0x1450c5460 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x146831f30 '__clang_svuint16x3_t'
|-TypedefDecl 0x1450c54c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x146831f50 '__clang_svuint32x3_t'
|-TypedefDecl 0x1450c5530 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x146831f70 '__clang_svuint64x3_t'
|-TypedefDecl 0x1450c5598 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x146831f90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x1450c5600 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x146831fb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x1450c5668 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x146831fd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1450c56d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x146831ff0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x1450c5738 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x146832010 '__clang_svint8x4_t'
|-TypedefDecl 0x1450c57a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x146832030 '__clang_svint16x4_t'
|-TypedefDecl 0x1450c5808 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x146832050 '__clang_svint32x4_t'
|-TypedefDecl 0x1450c5870 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x146832070 '__clang_svint64x4_t'
|-TypedefDecl 0x1450c58d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x146832090 '__clang_svuint8x4_t'
|-TypedefDecl 0x1450c5940 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1468320b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1450c59a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1468320d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x1450c5a10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1468320f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x1450c5a78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x146832110 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1450c5ae0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x146832130 '__clang_svfloat32x4_t'
|-TypedefDecl 0x1450c5b48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x146832150 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1450c5bb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x146832170 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x1450c5c18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x146832190 '__SVBool_t'
|-TypedefDecl 0x1450c5c80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1468321b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1450c5ce8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1468321d0 '__clang_svboolx4_t'
|-TypedefDecl 0x1450c5d50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1468321f0 '__SVCount_t'
|-TypedefDecl 0x1450c5df8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1450c5db0 'char *'
|   `-BuiltinType 0x1468314b0 'char'
|-TypedefDecl 0x1450c5e68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1450c5db0 'char *'
|   `-BuiltinType 0x1468314b0 'char'
|-FunctionDecl 0x1450deed8 <dataset_diviso_filec/func7027_nonvuln.c:1:1, line:44:1> line:1:12 invalid set_qf_name 'int (struct super_block *, int, int *)' static
| |-ParmVarDecl 0x1450c6448 <col:24, col:44> col:44 used sb 'struct super_block *'
| |-ParmVarDecl 0x1450c64c8 <col:48, col:52> col:52 used qtype 'int'
| |-ParmVarDecl 0x1450c6598 <col:59, col:72> col:72 invalid args 'int *'
| `-CompoundStmt 0x1450e22a8 <line:2:1, line:44:1>
|   |-DeclStmt 0x1450df3c8 <line:3:2, col:40>
|   | |-RecordDecl 0x1450def98 <col:2, col:9> col:9 struct ext4_sb_info
|   | `-VarDecl 0x1450df108 <col:2, col:39> col:23 used sbi 'struct ext4_sb_info *' cinit
|   |   `-ImplicitCastExpr 0x1450df398 <col:29, col:39> 'struct ext4_sb_info *' <IntegralToPointer>
|   |     `-CallExpr 0x1450df358 <col:29, col:39> 'int'
|   |       |-ImplicitCastExpr 0x1450df340 <col:29> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1450df2d0 <col:29> 'int ()' Function 0x1450df218 'EXT4_SB' 'int ()'
|   |       `-ImplicitCastExpr 0x1450df380 <col:37> 'struct super_block *' <LValueToRValue>
|   |         `-DeclRefExpr 0x1450df2f0 <col:37> 'struct super_block *' lvalue ParmVar 0x1450c6448 'sb' 'struct super_block *'
|   |-DeclStmt 0x1450df708 <line:4:2, col:55>
|   | |-VarDecl 0x1450df3f8 <col:2, col:8> col:8 used qname 'char *'
|   | `-VarDecl 0x1450df478 <col:2, col:54> col:16 used old_qname 'char *' cinit
|   |   `-ImplicitCastExpr 0x1450df6d8 <col:28, col:54> 'char *' <IntegralToPointer>
|   |     `-CallExpr 0x1450df658 <col:28, col:54> 'int'
|   |       |-ImplicitCastExpr 0x1450df640 <col:28> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1450df5c0 <col:28> 'int ()' Function 0x1450df508 'get_qf_name' 'int ()'
|   |       |-ImplicitCastExpr 0x1450df690 <col:40> 'struct super_block *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1450df5e0 <col:40> 'struct super_block *' lvalue ParmVar 0x1450c6448 'sb' 'struct super_block *'
|   |       |-ImplicitCastExpr 0x1450df6a8 <col:44> 'struct ext4_sb_info *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1450df600 <col:44> 'struct ext4_sb_info *' lvalue Var 0x1450df108 'sbi' 'struct ext4_sb_info *'
|   |       `-ImplicitCastExpr 0x1450df6c0 <col:49> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x1450df620 <col:49> 'int' lvalue ParmVar 0x1450c64c8 'qtype' 'int'
|   |-DeclStmt 0x1450df7d8 <line:5:2, col:14>
|   | `-VarDecl 0x1450df738 <col:2, col:13> col:6 used ret 'int' cinit
|   |   `-UnaryOperator 0x1450df7c0 <col:12, col:13> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1450df7a0 <col:13> 'int' 1
|   |-IfStmt 0x1450dfc70 <line:7:2, line:12:2>
|   | |-BinaryOperator 0x1450df9b8 <line:7:6, col:34> 'int' '&&'
|   | | |-CallExpr 0x1450df928 <col:6, col:28> 'int'
|   | | | |-ImplicitCastExpr 0x1450df910 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x1450df8d0 <col:6> 'int ()' Function 0x1450df818 'sb_any_quota_loaded' 'int ()'
|   | | | `-ImplicitCastExpr 0x1450df950 <col:26> 'struct super_block *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1450df8f0 <col:26> 'struct super_block *' lvalue ParmVar 0x1450c6448 'sb' 'struct super_block *'
|   | | `-UnaryOperator 0x1450df9a0 <col:33, col:34> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x1450df988 <col:34> 'char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1450df968 <col:34> 'char *' lvalue Var 0x1450df478 'old_qname' 'char *'
|   | `-CompoundStmt 0x1450dfc50 <col:45, line:12:2>
|   |   |-CallExpr 0x1450dfbd0 <line:8:3, line:10:9> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x1450dfab8 <line:8:3> 'int ()' Function 0x1450dfa00 'ext4_msg' 'int ()'
|   |   | |-DeclRefExpr 0x1450dfad8 <col:12> 'struct super_block *' lvalue ParmVar 0x1450c6448 'sb' 'struct super_block *'
|   |   | |-RecoveryExpr 0x1450dfbb0 <col:16> '<dependent type>' contains-errors lvalue
|   |   | `-StringLiteral 0x1450dfb50 <line:9:4, line:10:4> 'char[7]' lvalue "STRSTR"
|   |   `-ReturnStmt 0x1450dfc40 <line:11:3, col:11>
|   |     `-UnaryOperator 0x1450dfc28 <col:10, col:11> 'int' prefix '-'
|   |       `-IntegerLiteral 0x1450dfc08 <col:11> 'int' 1
|   |-IfStmt 0x1450e0778 <line:13:2, line:17:2>
|   | |-CallExpr 0x1450dfdc8 <line:13:6, col:31> 'int'
|   | | |-ImplicitCastExpr 0x1450dfdb0 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x1450dfd70 <col:6> 'int ()' Function 0x1450dfcb8 'ext4_has_feature_quota' 'int ()'
|   | | `-ImplicitCastExpr 0x1450e0600 <col:29> 'struct super_block *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1450dfd90 <col:29> 'struct super_block *' lvalue ParmVar 0x1450c6448 'sb' 'struct super_block *'
|   | `-CompoundStmt 0x1450e0758 <col:34, line:17:2>
|   |   |-CallExpr 0x1450e06f0 <line:14:3, line:15:10> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x1450e0618 <line:14:3> 'int ()' Function 0x1450dfa00 'ext4_msg' 'int ()'
|   |   | |-DeclRefExpr 0x1450e0638 <col:12> 'struct super_block *' lvalue ParmVar 0x1450c6448 'sb' 'struct super_block *'
|   |   | |-RecoveryExpr 0x1450e06d0 <col:16> '<dependent type>' contains-errors lvalue
|   |   | `-StringLiteral 0x1450e0670 <col:27, line:15:5> 'char[7]' lvalue "STRSTR"
|   |   `-ReturnStmt 0x1450e0748 <line:16:3, col:10>
|   |     `-IntegerLiteral 0x1450e0728 <col:10> 'int' 1
|   |-BinaryOperator 0x1450e0900 <line:18:2, col:27> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x1450e0798 <col:2> 'char *' lvalue Var 0x1450df3f8 'qname' 'char *'
|   | `-CallExpr 0x1450e08d8 <col:10, col:27> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x1450e0898 <col:10> 'int ()' Function 0x1450e07e0 'match_strdup' 'int ()'
|   |   `-RecoveryExpr 0x1450e08b8 <col:23> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1450e0b28 <line:19:2, line:23:2>
|   | |-UnaryOperator 0x1450e0958 <line:19:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1450e0940 <col:7> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1450e0920 <col:7> 'char *' lvalue Var 0x1450df3f8 'qname' 'char *'
|   | `-CompoundStmt 0x1450e0b08 <col:14, line:23:2>
|   |   |-CallExpr 0x1450e0a88 <line:20:3, line:21:9> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x1450e0970 <line:20:3> 'int ()' Function 0x1450dfa00 'ext4_msg' 'int ()'
|   |   | |-DeclRefExpr 0x1450e0990 <col:12> 'struct super_block *' lvalue ParmVar 0x1450c6448 'sb' 'struct super_block *'
|   |   | |-RecoveryExpr 0x1450e0a68 <col:16> '<dependent type>' contains-errors lvalue
|   |   | `-StringLiteral 0x1450e0a10 <line:21:4> 'char[4]' lvalue "STR"
|   |   `-ReturnStmt 0x1450e0af8 <line:22:3, col:11>
|   |     `-UnaryOperator 0x1450e0ae0 <col:10, col:11> 'int' prefix '-'
|   |       `-IntegerLiteral 0x1450e0ac0 <col:11> 'int' 1
|   |-IfStmt 0x1450e1348 <line:24:2, line:32:2>
|   | |-ImplicitCastExpr 0x1450e0b68 <line:24:6> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1450e0b48 <col:6> 'char *' lvalue Var 0x1450df478 'old_qname' 'char *'
|   | `-CompoundStmt 0x1450e1328 <col:17, line:32:2>
|   |   |-IfStmt 0x1450e1290 <line:25:3, line:30:23> has_else
|   |   | |-BinaryOperator 0x1450e0f28 <line:25:7, col:35> 'int' '=='
|   |   | | |-CallExpr 0x1450e0e78 <col:7, col:30> 'int'
|   |   | | | |-ImplicitCastExpr 0x1450e0e60 <col:7> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   | | | | `-DeclRefExpr 0x1450e0da0 <col:7> 'int (const char *, const char *)' Function 0x1450e0bc0 'strcmp' 'int (const char *, const char *)'
|   |   | | | |-ImplicitCastExpr 0x1450e0ec0 <col:14> 'const char *' <NoOp>
|   |   | | | | `-ImplicitCastExpr 0x1450e0ea8 <col:14> 'char *' <LValueToRValue>
|   |   | | | |   `-DeclRefExpr 0x1450e0dc0 <col:14> 'char *' lvalue Var 0x1450df478 'old_qname' 'char *'
|   |   | | | `-ImplicitCastExpr 0x1450e0ef0 <col:25> 'const char *' <NoOp>
|   |   | | |   `-ImplicitCastExpr 0x1450e0ed8 <col:25> 'char *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x1450e0de0 <col:25> 'char *' lvalue Var 0x1450df3f8 'qname' 'char *'
|   |   | | `-IntegerLiteral 0x1450e0f08 <col:35> 'int' 0
|   |   | |-BinaryOperator 0x1450e0f88 <line:26:4, col:10> 'int' '='
|   |   | | |-DeclRefExpr 0x1450e0f48 <col:4> 'int' lvalue Var 0x1450df738 'ret' 'int'
|   |   | | `-IntegerLiteral 0x1450e0f68 <col:10> 'int' 1
|   |   | `-CallExpr 0x1450e1250 <line:28:4, line:30:23> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x1450e0fa8 <line:28:4> 'int ()' Function 0x1450dfa00 'ext4_msg' 'int ()'
|   |   |   |-DeclRefExpr 0x1450e0fc8 <col:13> 'struct super_block *' lvalue ParmVar 0x1450c6448 'sb' 'struct super_block *'
|   |   |   |-RecoveryExpr 0x1450e11d8 <col:17> '<dependent type>' contains-errors lvalue
|   |   |   |-StringLiteral 0x1450e1000 <line:29:6> 'char[4]' lvalue "STR"
|   |   |   `-CallExpr 0x1450e1210 <line:30:6, col:22> 'int'
|   |   |     |-ImplicitCastExpr 0x1450e11f8 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x1450e1100 <col:6> 'int ()' Function 0x1450e1048 'QTYPE2NAME' 'int ()'
|   |   |     `-ImplicitCastExpr 0x1450e1238 <col:17> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1450e1120 <col:17> 'int' lvalue ParmVar 0x1450c64c8 'qtype' 'int'
|   |   `-GotoStmt 0x1450e1310 <line:31:3, col:8> 'errout' 0x1450e12c0
|   |-IfStmt 0x1450e1d38 <line:33:2, line:37:2>
|   | |-CallExpr 0x1450e1c48 <line:33:6, col:23> 'char *'
|   | | |-ImplicitCastExpr 0x1450e1c30 <col:6> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x1450e1590 <col:6> 'char *(const char *, int)' Function 0x1450e13b0 'strchr' 'char *(const char *, int)'
|   | | |-ImplicitCastExpr 0x1450e1c90 <col:13> 'const char *' <NoOp>
|   | | | `-ImplicitCastExpr 0x1450e1c78 <col:13> 'char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1450e15b0 <col:13> 'char *' lvalue Var 0x1450df3f8 'qname' 'char *'
|   | | `-CharacterLiteral 0x1450e15d0 <col:20> 'int' 47
|   | `-CompoundStmt 0x1450e1d20 <col:26, line:37:2>
|   |   `-GotoStmt 0x1450e1d08 <line:36:3, col:8> 'errout' 0x1450e12c0
|   |-CallExpr 0x1450e1f48 <line:38:2, col:50> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1450e1e38 <col:2> 'int ()' Function 0x1450e1d80 'rcu_assign_pointer' 'int ()'
|   | |-ArraySubscriptExpr 0x1450e1f08 <col:21, col:42> '<dependent type>' contains-errors lvalue
|   | | |-ImplicitCastExpr 0x1450e1ed8 <col:21, col:26> '<dependent type>' contains-errors <LValueToRValue>
|   | | | `-RecoveryExpr 0x1450e1e90 <col:21, col:26> '<dependent type>' contains-errors lvalue
|   | | |   `-DeclRefExpr 0x1450e1e58 <col:21> 'struct ext4_sb_info *' lvalue Var 0x1450df108 'sbi' 'struct ext4_sb_info *'
|   | | `-ImplicitCastExpr 0x1450e1ef0 <col:37> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1450e1eb8 <col:37> 'int' lvalue ParmVar 0x1450c64c8 'qtype' 'int'
|   | `-DeclRefExpr 0x1450e1f28 <col:45> 'char *' lvalue Var 0x1450df3f8 'qname' 'char *'
|   |-ReturnStmt 0x1450e20b8 <line:40:2, col:9>
|   | `-IntegerLiteral 0x1450e2098 <col:9> 'int' 1
|   |-LabelStmt 0x1450e2240 <line:41:1, line:42:13> 'errout'
|   | `-CallExpr 0x1450e2200 <col:2, col:13> 'int'
|   |   |-ImplicitCastExpr 0x1450e21e8 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1450e21a8 <col:2> 'int ()' Function 0x1450e20f0 'kfree' 'int ()'
|   |   `-ImplicitCastExpr 0x1450e2228 <col:8> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1450e21c8 <col:8> 'char *' lvalue Var 0x1450df3f8 'qname' 'char *'
|   `-ReturnStmt 0x1450e2298 <line:43:2, col:9>
|     `-ImplicitCastExpr 0x1450e2280 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1450e2260 <col:9> 'int' lvalue Var 0x1450df738 'ret' 'int'
|-FunctionDecl 0x1450e0bc0 <line:25:7> col:7 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x1450e0cc0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1450e0d28 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x1450e0c68 <<invalid sloc>> Implicit 887
`-FunctionDecl 0x1450e13b0 <line:33:6> col:6 implicit used strchr 'char *(const char *, int)' extern
  |-ParmVarDecl 0x1450e14b0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x1450e1518 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x1450e1458 <<invalid sloc>> Implicit 893
