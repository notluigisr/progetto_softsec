TranslationUnitDecl 0x148028008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x148028eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1480285d0 '__int128'
|-TypedefDecl 0x148028f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1480285f0 'unsigned __int128'
|-TypedefDecl 0x1480f9030 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1480f8e00 'struct __NSConstantString_tag'
|   `-Record 0x148028f80 '__NSConstantString_tag'
|-TypedefDecl 0x1480f9098 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x148028790 '__SVInt8_t'
|-TypedefDecl 0x1480f9100 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1480287b0 '__SVInt16_t'
|-TypedefDecl 0x1480f9168 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1480287d0 '__SVInt32_t'
|-TypedefDecl 0x1480f91d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1480287f0 '__SVInt64_t'
|-TypedefDecl 0x1480f9238 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x148028810 '__SVUint8_t'
|-TypedefDecl 0x1480f92a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x148028830 '__SVUint16_t'
|-TypedefDecl 0x1480f9308 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x148028850 '__SVUint32_t'
|-TypedefDecl 0x1480f9370 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x148028870 '__SVUint64_t'
|-TypedefDecl 0x1480f93d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x148028890 '__SVFloat16_t'
|-TypedefDecl 0x1480f9440 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1480288b0 '__SVFloat32_t'
|-TypedefDecl 0x1480f94a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1480288d0 '__SVFloat64_t'
|-TypedefDecl 0x1480f9510 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1480288f0 '__SVBfloat16_t'
|-TypedefDecl 0x1480f9578 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x148028910 '__clang_svint8x2_t'
|-TypedefDecl 0x1480f95e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x148028930 '__clang_svint16x2_t'
|-TypedefDecl 0x1480f9648 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x148028950 '__clang_svint32x2_t'
|-TypedefDecl 0x1480f96b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x148028970 '__clang_svint64x2_t'
|-TypedefDecl 0x1480f9718 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x148028990 '__clang_svuint8x2_t'
|-TypedefDecl 0x1480f9780 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1480289b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1480f97e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1480289d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x1480f9850 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1480289f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1480f98b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x148028a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x1480f9920 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x148028a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x1480f9988 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x148028a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1480f99f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x148028a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x1480f9a58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x148028a90 '__clang_svint8x3_t'
|-TypedefDecl 0x1480f9ac0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x148028ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x1480f9b28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x148028ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x1480f9b90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x148028af0 '__clang_svint64x3_t'
|-TypedefDecl 0x1480f9bf8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x148028b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x1480f9c60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x148028b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x1480f9cc8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x148028b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x1480f9d30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x148028b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x1480f9d98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x148028b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x1480fa600 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x148028bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x1480fa668 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x148028bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1480fa6d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x148028bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x1480fa738 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x148028c10 '__clang_svint8x4_t'
|-TypedefDecl 0x1480fa7a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x148028c30 '__clang_svint16x4_t'
|-TypedefDecl 0x1480fa808 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x148028c50 '__clang_svint32x4_t'
|-TypedefDecl 0x1480fa870 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x148028c70 '__clang_svint64x4_t'
|-TypedefDecl 0x1480fa8d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x148028c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x1480fa940 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x148028cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1480fa9a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x148028cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x1480faa10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x148028cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x1480faa78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x148028d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1480faae0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x148028d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x1480fab48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x148028d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1480fabb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x148028d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x1480fac18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x148028d90 '__SVBool_t'
|-TypedefDecl 0x1480fac80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x148028db0 '__clang_svboolx2_t'
|-TypedefDecl 0x1480face8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x148028dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x1480fad50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x148028df0 '__SVCount_t'
|-TypedefDecl 0x1480fadf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1480fadb0 'char *'
|   `-BuiltinType 0x1480280b0 'char'
|-TypedefDecl 0x1480fae68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1480fadb0 'char *'
|   `-BuiltinType 0x1480280b0 'char'
|-FunctionDecl 0x13f830338 <dataset_diviso_filec/func13928_vuln.c:1:1, line:47:1> line:1:7 invalid verify_signed_hash 'int (const struct RSA_public_key *, char *, unsigned int, char **, int, const char *, int)'
| |-ParmVarDecl 0x1480fb468 <col:26, col:55> col:55 used k 'const struct RSA_public_key *'
| |-ParmVarDecl 0x1480fb4e8 <line:2:28, col:36> col:36 used s 'char *'
| |-ParmVarDecl 0x1480fb568 <col:39, col:52> col:52 used s_max_octets 'unsigned int'
| |-ParmVarDecl 0x13f830018 <line:3:28, col:37> col:37 used psig 'char **'
| |-ParmVarDecl 0x13f830098 <line:4:28, col:35> col:35 invalid hash_len 'int'
| |-ParmVarDecl 0x13f830118 <line:5:28, col:42> col:42 used sig_val 'const char *'
| |-ParmVarDecl 0x13f830198 <col:51, col:58> col:58 invalid sig_len 'int'
| `-CompoundStmt 0x13f831c88 <line:6:1, line:47:1>
|   |-DeclStmt 0x13f830498 <line:7:5, col:24>
|   | `-VarDecl 0x13f830430 <col:5, col:18> col:18 used padlen 'unsigned int'
|   |-CompoundStmt 0x13f8310d8 <line:10:5, line:24:5>
|   | |-CallExpr 0x13f830710 <line:14:2, col:31> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x13f830610 <col:2> 'int ()' Function 0x13f830558 'n_to_mpz' 'int ()'
|   | | |-UnaryOperator 0x13f8306f8 <col:11, col:12> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | | `-RecoveryExpr 0x13f8306d8 <col:12> '<dependent type>' contains-errors lvalue
|   | | |-DeclRefExpr 0x13f830660 <col:15> 'const char *' lvalue ParmVar 0x13f830118 'sig_val' 'const char *'
|   | | `-RecoveryExpr 0x13f830680 <col:24> '<dependent type>' contains-errors lvalue
|   | `-IfStmt 0x13f830b38 <line:18:9, line:20:9>
|   |   |-BinaryOperator 0x13f830a58 <line:18:12, col:27> 'int' contains-errors '<'
|   |   | |-DeclRefExpr 0x13f830a18 <col:12> 'unsigned int' lvalue ParmVar 0x1480fb568 's_max_octets' 'unsigned int'
|   |   | `-RecoveryExpr 0x13f830a38 <col:27> '<dependent type>' contains-errors lvalue
|   |   `-CompoundStmt 0x13f830b20 <col:36, line:20:9>
|   |     `-ReturnStmt 0x13f830b10 <line:19:13, col:20>
|   |       `-ImplicitCastExpr 0x13f830af8 <col:20> 'int' <PointerToIntegral>
|   |         `-ImplicitCastExpr 0x13f830ae0 <col:20> 'char *' <ArrayToPointerDecay>
|   |           `-StringLiteral 0x13f830ac0 <col:20> 'char[4]' lvalue "STR"
|   |-BinaryOperator 0x13f8311b8 <line:28:5, col:28> 'unsigned int' contains-errors '='
|   | |-DeclRefExpr 0x13f8310f8 <col:5> 'unsigned int' lvalue Var 0x13f830430 'padlen' 'unsigned int'
|   | `-BinaryOperator 0x13f831198 <col:14, col:28> '<dependent type>' contains-errors '-'
|   |   |-BinaryOperator 0x13f831158 <col:14, col:24> '<dependent type>' contains-errors '-'
|   |   | |-RecoveryExpr 0x13f831118 <col:14> '<dependent type>' contains-errors lvalue
|   |   | `-IntegerLiteral 0x13f831138 <col:24> 'int' 3
|   |   `-RecoveryExpr 0x13f831178 <col:28> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x13f831ac0 <line:36:5, line:40:5>
|   | |-BinaryOperator 0x13f831a28 <line:36:8, line:38:26> 'int' '||'
|   | | |-BinaryOperator 0x13f8318b0 <line:36:8, line:37:19> 'int' '||'
|   | | | |-BinaryOperator 0x13f8317a8 <line:36:8, col:19> 'int' '!='
|   | | | | |-ImplicitCastExpr 0x13f831790 <col:8, col:11> 'int' <IntegralCast>
|   | | | | | `-ImplicitCastExpr 0x13f831778 <col:8, col:11> 'char' <LValueToRValue>
|   | | | | |   `-ArraySubscriptExpr 0x13f831738 <col:8, col:11> 'char' lvalue
|   | | | | |     |-ImplicitCastExpr 0x13f831720 <col:8> 'char *' <LValueToRValue>
|   | | | | |     | `-DeclRefExpr 0x13f8316e0 <col:8> 'char *' lvalue ParmVar 0x1480fb4e8 's' 'char *'
|   | | | | |     `-IntegerLiteral 0x13f831700 <col:10> 'int' 0
|   | | | | `-IntegerLiteral 0x13f831758 <col:19> 'int' 0
|   | | | `-BinaryOperator 0x13f831890 <line:37:11, col:19> 'int' '!='
|   | | |   |-ImplicitCastExpr 0x13f831878 <col:11, col:14> 'int' <IntegralCast>
|   | | |   | `-ImplicitCastExpr 0x13f831860 <col:11, col:14> 'char' <LValueToRValue>
|   | | |   |   `-ArraySubscriptExpr 0x13f831820 <col:11, col:14> 'char' lvalue
|   | | |   |     |-ImplicitCastExpr 0x13f831808 <col:11> 'char *' <LValueToRValue>
|   | | |   |     | `-DeclRefExpr 0x13f8317c8 <col:11> 'char *' lvalue ParmVar 0x1480fb4e8 's' 'char *'
|   | | |   |     `-IntegerLiteral 0x13f8317e8 <col:13> 'int' 1
|   | | |   `-IntegerLiteral 0x13f831840 <col:19> 'int' 1
|   | | `-BinaryOperator 0x13f831a08 <line:38:11, col:26> 'int' '!='
|   | |   |-ImplicitCastExpr 0x13f8319f0 <col:11, col:21> 'int' <IntegralCast>
|   | |   | `-ImplicitCastExpr 0x13f8319d8 <col:11, col:21> 'char' <LValueToRValue>
|   | |   |   `-ArraySubscriptExpr 0x13f831998 <col:11, col:21> 'char' lvalue
|   | |   |     |-ImplicitCastExpr 0x13f831980 <col:11> 'char *' <LValueToRValue>
|   | |   |     | `-DeclRefExpr 0x13f8318d0 <col:11> 'char *' lvalue ParmVar 0x1480fb4e8 's' 'char *'
|   | |   |     `-BinaryOperator 0x13f831960 <col:13, col:20> 'unsigned int' '+'
|   | |   |       |-ImplicitCastExpr 0x13f831930 <col:13> 'unsigned int' <LValueToRValue>
|   | |   |       | `-DeclRefExpr 0x13f8318f0 <col:13> 'unsigned int' lvalue Var 0x13f830430 'padlen' 'unsigned int'
|   | |   |       `-ImplicitCastExpr 0x13f831948 <col:20> 'unsigned int' <IntegralCast>
|   | |   |         `-IntegerLiteral 0x13f831910 <col:20> 'int' 2
|   | |   `-IntegerLiteral 0x13f8319b8 <col:26> 'int' 0
|   | `-CompoundStmt 0x13f831aa8 <col:32, line:40:5>
|   |   `-ReturnStmt 0x13f831a98 <line:39:2, col:9>
|   |     `-ImplicitCastExpr 0x13f831a80 <col:9> 'int' <PointerToIntegral>
|   |       `-ImplicitCastExpr 0x13f831a68 <col:9> 'char *' <ArrayToPointerDecay>
|   |         `-StringLiteral 0x13f831a48 <col:9> 'char[4]' lvalue "STR"
|   |-CompoundAssignOperator 0x13f831b90 <line:42:5, col:19> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   | |-DeclRefExpr 0x13f831ae0 <col:5> 'char *' lvalue ParmVar 0x1480fb4e8 's' 'char *'
|   | `-BinaryOperator 0x13f831b70 <col:10, col:19> 'unsigned int' '+'
|   |   |-ImplicitCastExpr 0x13f831b40 <col:10> 'unsigned int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x13f831b00 <col:10> 'unsigned int' lvalue Var 0x13f830430 'padlen' 'unsigned int'
|   |   `-ImplicitCastExpr 0x13f831b58 <col:19> 'unsigned int' <IntegralCast>
|   |     `-IntegerLiteral 0x13f831b20 <col:19> 'int' 3
|   `-BinaryOperator 0x13f831c68 <line:43:5, col:15> 'char *' '='
|     |-ParenExpr 0x13f831c10 <col:5, col:11> 'char *' lvalue
|     | `-UnaryOperator 0x13f831bf8 <col:6, col:7> 'char *' lvalue prefix '*' cannot overflow
|     |   `-ImplicitCastExpr 0x13f831be0 <col:7> 'char **' <LValueToRValue>
|     |     `-DeclRefExpr 0x13f831bc0 <col:7> 'char **' lvalue ParmVar 0x13f830018 'psig' 'char **'
|     `-ImplicitCastExpr 0x13f831c50 <col:15> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x13f831c30 <col:15> 'char *' lvalue ParmVar 0x1480fb4e8 's' 'char *'
`-FunctionDecl 0x13f830bd8 <line:21:2> col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x13f830cd8 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x13f830d40 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x13f830da8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x13f830c80 <<invalid sloc>> Implicit 882
