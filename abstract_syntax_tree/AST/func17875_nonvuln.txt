TranslationUnitDecl 0x13d855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13d8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13d855bd0 '__int128'
|-TypedefDecl 0x13d856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13d855bf0 'unsigned __int128'
|-TypedefDecl 0x13e00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13e00bc00 'struct __NSConstantString_tag'
|   `-Record 0x13d856580 '__NSConstantString_tag'
|-TypedefDecl 0x13e00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13d855d90 '__SVInt8_t'
|-TypedefDecl 0x13e00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13d855db0 '__SVInt16_t'
|-TypedefDecl 0x13e00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13d855dd0 '__SVInt32_t'
|-TypedefDecl 0x13e00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13d855df0 '__SVInt64_t'
|-TypedefDecl 0x13e00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13d855e10 '__SVUint8_t'
|-TypedefDecl 0x13e00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13d855e30 '__SVUint16_t'
|-TypedefDecl 0x13e00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13d855e50 '__SVUint32_t'
|-TypedefDecl 0x13e00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13d855e70 '__SVUint64_t'
|-TypedefDecl 0x13e00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13d855e90 '__SVFloat16_t'
|-TypedefDecl 0x13e00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13d855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13e00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13d855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13e00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13d855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13e00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13d855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13e00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13d855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13e00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13d855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13e00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13d855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13e00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13d855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13e00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13d855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13e00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13d855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13e00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13d855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13e00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13d856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13e00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13d856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13e00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13d856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13e00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13d856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13e00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13d856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13e00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13d8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13e00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13d8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13e00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13d8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13e00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13d856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13e00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13d856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13e00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13d856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13e00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13d856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13e00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13d856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13e00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13d8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13e00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13d8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13e00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13d8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13e00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13d856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13e00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13d856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13e00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13d856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13e00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13d856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13e00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13d856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13e00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13d8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13e00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13d8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13e00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13d8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13e00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13d856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13e00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13d856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13e00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13d856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13e00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13d856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13e00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13d856390 '__SVBool_t'
|-TypedefDecl 0x13e00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13d8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13e00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13d8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13e00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13d8563f0 '__SVCount_t'
|-TypedefDecl 0x13e00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13e00dbb0 'char *'
|   `-BuiltinType 0x13d8556b0 'char'
|-TypedefDecl 0x13e00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13e00dbb0 'char *'
|   `-BuiltinType 0x13d8556b0 'char'
|-FunctionDecl 0x13e00df60 <dataset_diviso_filec/func17875_nonvuln.c:1:1, line:40:1> line:1:13 invalid process_watch_command 'void (int *, int *, const int)' static
| |-ParmVarDecl 0x13e00dd28 <col:35, col:41> col:41 invalid c 'int *'
| |-ParmVarDecl 0x13e00dda8 <col:44, col:53> col:53 invalid tokens 'int *'
| |-ParmVarDecl 0x13e00de28 <col:61, col:74> col:74 invalid ntokens 'const int'
| `-CompoundStmt 0x13e029c98 <col:83, line:40:1>
|   |-DeclStmt 0x13e00e0a0 <line:3:5, col:10>
|   | `-VarDecl 0x13e00e038 <col:5, col:9> col:9 used x 'int'
|   |-CallExpr 0x13e00e2f0 <line:4:5, col:21> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x13e00e210 <col:5> 'int ()' Function 0x13e00e158 'assert' 'int ()'
|   | `-BinaryOperator 0x13e00e2d0 <col:12, col:17> 'int' contains-errors '!='
|   |   |-RecoveryExpr 0x13e00e230 <col:12> '<dependent type>' contains-errors lvalue
|   |   `-RecoveryExpr 0x13e00e2b0 <col:17> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x13e027480 <line:6:5, col:41> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x13e027400 <col:5> 'int ()' Function 0x13e00e340 'set_noreply_maybe' 'int ()'
|   | |-RecoveryExpr 0x13e027420 <col:23> '<dependent type>' contains-errors lvalue
|   | |-RecoveryExpr 0x13e027440 <col:26> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x13e027460 <col:34> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x13e029658 <line:7:5, line:26:5> has_else
|   | |-BinaryOperator 0x13e0274f8 <line:7:9, col:19> 'int' contains-errors '>'
|   | | |-RecoveryExpr 0x13e0274b8 <col:9> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x13e0274d8 <col:19> 'int' 2
|   | |-CompoundStmt 0x13e029630 <col:22, line:24:5>
|   | | `-ForStmt 0x13e0295f8 <line:8:9, line:23:9>
|   | |   |-<<<NULL>>>
|   | |   |-<<<NULL>>>
|   | |   |-BinaryOperator 0x13e027630 <line:8:37, col:51> 'int' contains-errors '<'
|   | |   | |-DeclRefExpr 0x13e0275b0 <col:37> 'int' lvalue Var 0x13e00e038 'x' 'int'
|   | |   | `-BinaryOperator 0x13e027610 <col:41, col:51> '<dependent type>' contains-errors '-'
|   | |   |   |-RecoveryExpr 0x13e0275d0 <col:41> '<dependent type>' contains-errors lvalue
|   | |   |   `-IntegerLiteral 0x13e0275f0 <col:51> 'int' 1
|   | |   |-UnaryOperator 0x13e027670 <col:54, col:55> 'int' postfix '++'
|   | |   | `-DeclRefExpr 0x13e027650 <col:54> 'int' lvalue Var 0x13e00e038 'x' 'int'
|   | |   `-CompoundStmt 0x13e0295e0 <col:59, line:23:9>
|   | |     `-IfStmt 0x13e0295b0 <line:9:13, line:22:13> has_else
|   | |       |-ParenExpr 0x13e027ed0 <line:9:17, col:53> 'int' contains-errors
|   | |       | `-BinaryOperator 0x13e027eb0 <col:18, col:52> 'int' contains-errors '=='
|   | |       |   |-CallExpr 0x13e027e60 <col:18, col:47> '<dependent type>' contains-errors
|   | |       |   | |-DeclRefExpr 0x13e027cd0 <col:18> 'int (const char *, const char *)' Function 0x13e027af0 'strcmp' 'int (const char *, const char *)'
|   | |       |   | |-CXXDependentScopeMemberExpr 0x13e027d80 <col:25, col:35> '<dependent type>' contains-errors lvalue .value
|   | |       |   | | `-ArraySubscriptExpr 0x13e027d60 <col:25, col:33> '<dependent type>' contains-errors lvalue
|   | |       |   | |   |-ImplicitCastExpr 0x13e027d30 <col:25> '<dependent type>' contains-errors <LValueToRValue>
|   | |       |   | |   | `-RecoveryExpr 0x13e027cf0 <col:25> '<dependent type>' contains-errors lvalue
|   | |       |   | |   `-ImplicitCastExpr 0x13e027d48 <col:32> 'int' <LValueToRValue>
|   | |       |   | |     `-DeclRefExpr 0x13e027d10 <col:32> 'int' lvalue Var 0x13e00e038 'x' 'int'
|   | |       |   | `-StringLiteral 0x13e027e10 <col:42> 'char[4]' lvalue "STR"
|   | |       |   `-IntegerLiteral 0x13e027e90 <col:52> 'int' 0
|   | |       |-CompoundStmt 0x13e027f08 <col:56, line:11:13>
|   | |       `-IfStmt 0x13e029580 <col:20, line:22:13> has_else
|   | |         |-ParenExpr 0x13e0280d0 <line:11:24, col:60> 'int' contains-errors
|   | |         | `-BinaryOperator 0x13e0280b0 <col:25, col:59> 'int' contains-errors '=='
|   | |         |   |-CallExpr 0x13e028060 <col:25, col:54> '<dependent type>' contains-errors
|   | |         |   | |-DeclRefExpr 0x13e027f18 <col:25> 'int (const char *, const char *)' Function 0x13e027af0 'strcmp' 'int (const char *, const char *)'
|   | |         |   | |-CXXDependentScopeMemberExpr 0x13e027fc8 <col:32, col:42> '<dependent type>' contains-errors lvalue .value
|   | |         |   | | `-ArraySubscriptExpr 0x13e027fa8 <col:32, col:40> '<dependent type>' contains-errors lvalue
|   | |         |   | |   |-ImplicitCastExpr 0x13e027f78 <col:32> '<dependent type>' contains-errors <LValueToRValue>
|   | |         |   | |   | `-RecoveryExpr 0x13e027f38 <col:32> '<dependent type>' contains-errors lvalue
|   | |         |   | |   `-ImplicitCastExpr 0x13e027f90 <col:39> 'int' <LValueToRValue>
|   | |         |   | |     `-DeclRefExpr 0x13e027f58 <col:39> 'int' lvalue Var 0x13e00e038 'x' 'int'
|   | |         |   | `-StringLiteral 0x13e028010 <col:49> 'char[4]' lvalue "STR"
|   | |         |   `-IntegerLiteral 0x13e028090 <col:59> 'int' 0
|   | |         |-CompoundStmt 0x13e028108 <col:63, line:13:13>
|   | |         `-IfStmt 0x13e029550 <col:20, line:22:13> has_else
|   | |           |-ParenExpr 0x13e0282d0 <line:13:24, col:60> 'int' contains-errors
|   | |           | `-BinaryOperator 0x13e0282b0 <col:25, col:59> 'int' contains-errors '=='
|   | |           |   |-CallExpr 0x13e028260 <col:25, col:54> '<dependent type>' contains-errors
|   | |           |   | |-DeclRefExpr 0x13e028118 <col:25> 'int (const char *, const char *)' Function 0x13e027af0 'strcmp' 'int (const char *, const char *)'
|   | |           |   | |-CXXDependentScopeMemberExpr 0x13e0281c8 <col:32, col:42> '<dependent type>' contains-errors lvalue .value
|   | |           |   | | `-ArraySubscriptExpr 0x13e0281a8 <col:32, col:40> '<dependent type>' contains-errors lvalue
|   | |           |   | |   |-ImplicitCastExpr 0x13e028178 <col:32> '<dependent type>' contains-errors <LValueToRValue>
|   | |           |   | |   | `-RecoveryExpr 0x13e028138 <col:32> '<dependent type>' contains-errors lvalue
|   | |           |   | |   `-ImplicitCastExpr 0x13e028190 <col:39> 'int' <LValueToRValue>
|   | |           |   | |     `-DeclRefExpr 0x13e028158 <col:39> 'int' lvalue Var 0x13e00e038 'x' 'int'
|   | |           |   | `-StringLiteral 0x13e028210 <col:49> 'char[4]' lvalue "STR"
|   | |           |   `-IntegerLiteral 0x13e028290 <col:59> 'int' 0
|   | |           |-CompoundStmt 0x13e028308 <col:63, line:15:13>
|   | |           `-IfStmt 0x13e029520 <col:20, line:22:13> has_else
|   | |             |-ParenExpr 0x13e029108 <line:15:24, col:60> 'int' contains-errors
|   | |             | `-BinaryOperator 0x13e0290e8 <col:25, col:59> 'int' contains-errors '=='
|   | |             |   |-CallExpr 0x13e029098 <col:25, col:54> '<dependent type>' contains-errors
|   | |             |   | |-DeclRefExpr 0x13e028318 <col:25> 'int (const char *, const char *)' Function 0x13e027af0 'strcmp' 'int (const char *, const char *)'
|   | |             |   | |-CXXDependentScopeMemberExpr 0x13e029000 <col:32, col:42> '<dependent type>' contains-errors lvalue .value
|   | |             |   | | `-ArraySubscriptExpr 0x13e0283a8 <col:32, col:40> '<dependent type>' contains-errors lvalue
|   | |             |   | |   |-ImplicitCastExpr 0x13e028378 <col:32> '<dependent type>' contains-errors <LValueToRValue>
|   | |             |   | |   | `-RecoveryExpr 0x13e028338 <col:32> '<dependent type>' contains-errors lvalue
|   | |             |   | |   `-ImplicitCastExpr 0x13e028390 <col:39> 'int' <LValueToRValue>
|   | |             |   | |     `-DeclRefExpr 0x13e028358 <col:39> 'int' lvalue Var 0x13e00e038 'x' 'int'
|   | |             |   | `-StringLiteral 0x13e029048 <col:49> 'char[4]' lvalue "STR"
|   | |             |   `-IntegerLiteral 0x13e0290c8 <col:59> 'int' 0
|   | |             |-CompoundStmt 0x13e029140 <col:63, line:17:13>
|   | |             `-IfStmt 0x13e0294f0 <col:20, line:22:13> has_else
|   | |               |-ParenExpr 0x13e029308 <line:17:24, col:60> 'int' contains-errors
|   | |               | `-BinaryOperator 0x13e0292e8 <col:25, col:59> 'int' contains-errors '=='
|   | |               |   |-CallExpr 0x13e029298 <col:25, col:54> '<dependent type>' contains-errors
|   | |               |   | |-DeclRefExpr 0x13e029150 <col:25> 'int (const char *, const char *)' Function 0x13e027af0 'strcmp' 'int (const char *, const char *)'
|   | |               |   | |-CXXDependentScopeMemberExpr 0x13e029200 <col:32, col:42> '<dependent type>' contains-errors lvalue .value
|   | |               |   | | `-ArraySubscriptExpr 0x13e0291e0 <col:32, col:40> '<dependent type>' contains-errors lvalue
|   | |               |   | |   |-ImplicitCastExpr 0x13e0291b0 <col:32> '<dependent type>' contains-errors <LValueToRValue>
|   | |               |   | |   | `-RecoveryExpr 0x13e029170 <col:32> '<dependent type>' contains-errors lvalue
|   | |               |   | |   `-ImplicitCastExpr 0x13e0291c8 <col:39> 'int' <LValueToRValue>
|   | |               |   | |     `-DeclRefExpr 0x13e029190 <col:39> 'int' lvalue Var 0x13e00e038 'x' 'int'
|   | |               |   | `-StringLiteral 0x13e029248 <col:49> 'char[4]' lvalue "STR"
|   | |               |   `-IntegerLiteral 0x13e0292c8 <col:59> 'int' 0
|   | |               |-CompoundStmt 0x13e029340 <col:63, line:19:13>
|   | |               `-CompoundStmt 0x13e0294d0 <col:20, line:22:13>
|   | |                 |-CallExpr 0x13e029490 <line:20:17, col:36> '<dependent type>' contains-errors
|   | |                 | |-DeclRefExpr 0x13e029430 <col:17> 'int ()' Function 0x13e029378 'out_string' 'int ()'
|   | |                 | |-RecoveryExpr 0x13e029450 <col:28> '<dependent type>' contains-errors lvalue
|   | |                 | `-StringLiteral 0x13e029470 <col:31> 'char[4]' lvalue "STR"
|   | |                 `-ReturnStmt 0x13e0294c0 <line:21:17>
|   | `-CompoundStmt 0x13e029648 <line:24:12, line:26:5>
|   `-SwitchStmt 0x13e029830 <line:28:5, line:39:5>
|     |-RecoveryExpr 0x13e029810 <line:28:12, col:43> 'int' contains-errors
|     `-CompoundStmt 0x13e029c58 <col:46, line:39:5>
|       |-CallExpr 0x13e0298b8 <line:30:13, col:32> '<dependent type>' contains-errors
|       | |-DeclRefExpr 0x13e029858 <col:13> 'int ()' Function 0x13e029378 'out_string' 'int ()'
|       | |-RecoveryExpr 0x13e029878 <col:24> '<dependent type>' contains-errors lvalue
|       | `-StringLiteral 0x13e029898 <col:27> 'char[4]' lvalue "STR"
|       |-BreakStmt 0x13e0298e8 <line:31:13>
|       |-CallExpr 0x13e029950 <line:33:13, col:32> '<dependent type>' contains-errors
|       | |-DeclRefExpr 0x13e0298f0 <col:13> 'int ()' Function 0x13e029378 'out_string' 'int ()'
|       | |-RecoveryExpr 0x13e029910 <col:24> '<dependent type>' contains-errors lvalue
|       | `-StringLiteral 0x13e029930 <col:27> 'char[4]' lvalue "STR"
|       |-BreakStmt 0x13e029980 <line:34:13>
|       |-CallExpr 0x13e029c28 <line:37:13, col:32> '<dependent type>' contains-errors
|       | |-DeclRefExpr 0x13e029b88 <col:13> 'int ()' Function 0x13e029ad0 'event_del' 'int ()'
|       | `-UnaryOperator 0x13e029c10 <col:23, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
|       |   `-CXXDependentScopeMemberExpr 0x13e029bc8 <col:24, col:27> '<dependent type>' contains-errors lvalue ->event
|       |     `-RecoveryExpr 0x13e029ba8 <col:24> '<dependent type>' contains-errors lvalue
|       `-BreakStmt 0x13e029c50 <line:38:13>
`-FunctionDecl 0x13e027af0 <line:9:18> col:18 implicit used strcmp 'int (const char *, const char *)' extern
  |-ParmVarDecl 0x13e027bf0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x13e027c58 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x13e027b98 <<invalid sloc>> Implicit 887
