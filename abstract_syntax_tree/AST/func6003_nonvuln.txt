TranslationUnitDecl 0x12c040808 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12c0416b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12c040dd0 '__int128'
|-TypedefDecl 0x12c041728 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12c040df0 'unsigned __int128'
|-TypedefDecl 0x12c111430 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12c111200 'struct __NSConstantString_tag'
|   `-Record 0x12c041780 '__NSConstantString_tag'
|-TypedefDecl 0x12c111498 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12c040f90 '__SVInt8_t'
|-TypedefDecl 0x12c111500 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12c040fb0 '__SVInt16_t'
|-TypedefDecl 0x12c111568 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12c040fd0 '__SVInt32_t'
|-TypedefDecl 0x12c1115d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12c040ff0 '__SVInt64_t'
|-TypedefDecl 0x12c111638 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12c041010 '__SVUint8_t'
|-TypedefDecl 0x12c1116a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12c041030 '__SVUint16_t'
|-TypedefDecl 0x12c111708 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12c041050 '__SVUint32_t'
|-TypedefDecl 0x12c111770 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12c041070 '__SVUint64_t'
|-TypedefDecl 0x12c1117d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12c041090 '__SVFloat16_t'
|-TypedefDecl 0x12c111840 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12c0410b0 '__SVFloat32_t'
|-TypedefDecl 0x12c1118a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12c0410d0 '__SVFloat64_t'
|-TypedefDecl 0x12c111910 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12c0410f0 '__SVBfloat16_t'
|-TypedefDecl 0x12c111978 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12c041110 '__clang_svint8x2_t'
|-TypedefDecl 0x12c1119e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12c041130 '__clang_svint16x2_t'
|-TypedefDecl 0x12c111a48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12c041150 '__clang_svint32x2_t'
|-TypedefDecl 0x12c111ab0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12c041170 '__clang_svint64x2_t'
|-TypedefDecl 0x12c111b18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12c041190 '__clang_svuint8x2_t'
|-TypedefDecl 0x12c111b80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12c0411b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12c111be8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12c0411d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12c111c50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12c0411f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12c111cb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12c041210 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12c111d20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12c041230 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12c111d88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12c041250 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12c111df0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12c041270 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12c111e58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12c041290 '__clang_svint8x3_t'
|-TypedefDecl 0x12c111ec0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12c0412b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12c111f28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12c0412d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12c111f90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12c0412f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12c111ff8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12c041310 '__clang_svuint8x3_t'
|-TypedefDecl 0x12c112060 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12c041330 '__clang_svuint16x3_t'
|-TypedefDecl 0x12c1120c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12c041350 '__clang_svuint32x3_t'
|-TypedefDecl 0x12c112130 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12c041370 '__clang_svuint64x3_t'
|-TypedefDecl 0x12c112198 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12c041390 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12c112a00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12c0413b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12c112a68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12c0413d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12c112ad0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12c0413f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12c112b38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12c041410 '__clang_svint8x4_t'
|-TypedefDecl 0x12c112ba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12c041430 '__clang_svint16x4_t'
|-TypedefDecl 0x12c112c08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12c041450 '__clang_svint32x4_t'
|-TypedefDecl 0x12c112c70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12c041470 '__clang_svint64x4_t'
|-TypedefDecl 0x12c112cd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12c041490 '__clang_svuint8x4_t'
|-TypedefDecl 0x12c112d40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12c0414b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12c112da8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12c0414d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12c112e10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12c0414f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12c112e78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12c041510 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12c112ee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12c041530 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12c112f48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12c041550 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12c112fb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12c041570 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12c113018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12c041590 '__SVBool_t'
|-TypedefDecl 0x12c113080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12c0415b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12c1130e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12c0415d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12c113150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12c0415f0 '__SVCount_t'
|-TypedefDecl 0x12c1131f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12c1131b0 'char *'
|   `-BuiltinType 0x12c0408b0 'char'
|-TypedefDecl 0x12c113268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12c1131b0 'char *'
|   `-BuiltinType 0x12c0408b0 'char'
|-FunctionDecl 0x12c113518 <dataset_diviso_filec/func6003_nonvuln.c:1:1, line:26:1> line:1:1 invalid set_ssl_ciphers 'int (int *, char *, int *)'
| |-ParmVarDecl 0x12c113328 <col:17, col:32> col:32 referenced invalid schannel_cred 'int *'
| |-ParmVarDecl 0x12c1133a8 <col:47, col:53> col:53 used ciphers 'char *'
| |-ParmVarDecl 0x12c113428 <line:2:17, col:25> col:25 referenced invalid algIds 'int *'
| `-CompoundStmt 0x12b81a7d8 <line:3:1, line:26:1>
|   |-DeclStmt 0x12c113690 <line:4:3, col:27>
|   | `-VarDecl 0x12c1135f0 <col:3, col:20> col:9 used startCur 'char *' cinit
|   |   `-ImplicitCastExpr 0x12c113678 <col:20> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x12c113658 <col:20> 'char *' lvalue ParmVar 0x12c1133a8 'ciphers' 'char *'
|   |-DeclStmt 0x12c113748 <line:5:3, col:19>
|   | `-VarDecl 0x12c1136c0 <col:3, col:18> col:7 used algCount 'int' cinit
|   |   `-IntegerLiteral 0x12c113728 <col:18> 'int' 0
|   |-WhileStmt 0x12b81a5d0 <line:6:3, line:22:3>
|   | |-RecoveryExpr 0x12c1138f0 <line:6:9, col:66> '_Bool' contains-errors
|   | `-CompoundStmt 0x12b81a598 <col:69, line:22:3>
|   |   |-DeclStmt 0x12b813628 <line:7:5, col:38>
|   |   | `-VarDecl 0x12c113928 <col:5, col:37> col:10 used alg 'long' cinit
|   |   |   `-CallExpr 0x12b8135a8 <col:16, col:37> 'long'
|   |   |     |-ImplicitCastExpr 0x12b813590 <col:16> 'long (*)(const char *, char **, int)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x12b8134c0 <col:16> 'long (const char *, char **, int)' Function 0x12b813270 'strtol' 'long (const char *, char **, int)'
|   |   |     |-ImplicitCastExpr 0x12b8135f8 <col:23> 'const char *' <NoOp>
|   |   |     | `-ImplicitCastExpr 0x12b8135e0 <col:23> 'char *' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x12b8134e0 <col:23> 'char *' lvalue Var 0x12c1135f0 'startCur' 'char *'
|   |   |     |-ImplicitCastExpr 0x12b813610 <col:33> 'char **' <NullToPointer>
|   |   |     | `-IntegerLiteral 0x12b813500 <col:33> 'int' 0
|   |   |     `-IntegerLiteral 0x12b813520 <col:36> 'int' 0
|   |   |-IfStmt 0x12b813910 <line:8:5, line:9:40>
|   |   | |-UnaryOperator 0x12b813678 <line:8:8, col:9> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x12b813660 <col:9> 'long' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x12b813640 <col:9> 'long' lvalue Var 0x12c113928 'alg' 'long'
|   |   | `-BinaryOperator 0x12b8138f0 <line:9:7, col:40> 'long' '='
|   |   |   |-DeclRefExpr 0x12b813690 <col:7> 'long' lvalue Var 0x12c113928 'alg' 'long'
|   |   |   `-ImplicitCastExpr 0x12b8138d8 <col:13, col:40> 'long' <IntegralCast>
|   |   |     `-CallExpr 0x12b813898 <col:13, col:40> 'int'
|   |   |       |-ImplicitCastExpr 0x12b813880 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x12b813810 <col:13> 'int ()' Function 0x12b813758 'get_alg_id_by_name' 'int ()'
|   |   |       `-ImplicitCastExpr 0x12b8138c0 <col:32> 'char *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x12b813830 <col:32> 'char *' lvalue Var 0x12c1135f0 'startCur' 'char *'
|   |   |-IfStmt 0x12b81a158 <line:10:5, line:18:14> has_else
|   |   | |-ImplicitCastExpr 0x12b813950 <line:10:8> 'long' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x12b813930 <col:8> 'long' lvalue Var 0x12c113928 'alg' 'long'
|   |   | |-BinaryOperator 0x12b813a40 <line:11:7, col:28> '<dependent type>' contains-errors '='
|   |   | | |-ArraySubscriptExpr 0x12b813a00 <col:7, col:24> '<dependent type>' contains-errors lvalue
|   |   | | | |-ImplicitCastExpr 0x12b8139e8 <col:7> '<dependent type>' contains-errors <LValueToRValue>
|   |   | | | | `-RecoveryExpr 0x12b813988 <col:7> '<dependent type>' contains-errors lvalue
|   |   | | | |   `-DeclRefExpr 0x12b813968 <col:7> 'int *' lvalue ParmVar 0x12c113428 'algIds' 'int *'
|   |   | | | `-UnaryOperator 0x12b8139d0 <col:14, col:22> 'int' postfix '++'
|   |   | | |   `-DeclRefExpr 0x12b8139b0 <col:14> 'int' lvalue Var 0x12c1136c0 'algCount' 'int'
|   |   | | `-DeclRefExpr 0x12b813a20 <col:28> 'long' lvalue Var 0x12c113928 'alg' 'long'
|   |   | `-IfStmt 0x12b81a128 <line:12:10, line:18:14> has_else
|   |   |   |-BinaryOperator 0x12b819f98 <line:12:13, line:15:39> 'int' '||'
|   |   |   | |-UnaryOperator 0x12b819d70 <line:12:13, line:13:39> 'int' prefix '!' cannot overflow
|   |   |   | | `-CallExpr 0x12b819cd8 <line:12:14, line:13:39> 'int'
|   |   |   | |   |-ImplicitCastExpr 0x12b819cc0 <line:12:14> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   |   |   | |   | `-DeclRefExpr 0x12b813cf8 <col:14> 'int (const char *, const char *, unsigned long)' Function 0x12b813aa8 'strncmp' 'int (const char *, const char *, unsigned long)'
|   |   |   | |   |-ImplicitCastExpr 0x12b819d28 <col:22> 'const char *' <NoOp>
|   |   |   | |   | `-ImplicitCastExpr 0x12b819d10 <col:22> 'char *' <LValueToRValue>
|   |   |   | |   |   `-DeclRefExpr 0x12b813d18 <col:22> 'char *' lvalue Var 0x12c1135f0 'startCur' 'char *'
|   |   |   | |   |-ImplicitCastExpr 0x12b819d58 <col:32> 'const char *' <NoOp>
|   |   |   | |   | `-ImplicitCastExpr 0x12b819d40 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |   | |   |   `-StringLiteral 0x12b813d80 <col:32> 'char[4]' lvalue "STR"
|   |   |   | |   `-BinaryOperator 0x12b819c38 <line:13:22, col:38> 'unsigned long' '-'
|   |   |   | |     |-UnaryExprOrTypeTraitExpr 0x12b813de0 <col:22, col:34> 'unsigned long' sizeof
|   |   |   | |     | `-ParenExpr 0x12b813dc0 <col:28, col:34> 'char[4]' lvalue
|   |   |   | |     |   `-StringLiteral 0x12b813da0 <col:29> 'char[4]' lvalue "STR"
|   |   |   | |     `-ImplicitCastExpr 0x12b819c20 <col:38> 'unsigned long' <IntegralCast>
|   |   |   | |       `-IntegerLiteral 0x12b819c00 <col:38> 'int' 1
|   |   |   | `-UnaryOperator 0x12b819f80 <line:14:13, line:15:39> 'int' prefix '!' cannot overflow
|   |   |   |   `-CallExpr 0x12b819ee8 <line:14:14, line:15:39> 'int'
|   |   |   |     |-ImplicitCastExpr 0x12b819ed0 <line:14:14> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x12b819d88 <col:14> 'int (const char *, const char *, unsigned long)' Function 0x12b813aa8 'strncmp' 'int (const char *, const char *, unsigned long)'
|   |   |   |     |-ImplicitCastExpr 0x12b819f38 <col:22> 'const char *' <NoOp>
|   |   |   |     | `-ImplicitCastExpr 0x12b819f20 <col:22> 'char *' <LValueToRValue>
|   |   |   |     |   `-DeclRefExpr 0x12b819da8 <col:22> 'char *' lvalue Var 0x12c1135f0 'startCur' 'char *'
|   |   |   |     |-ImplicitCastExpr 0x12b819f68 <col:32> 'const char *' <NoOp>
|   |   |   |     | `-ImplicitCastExpr 0x12b819f50 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |   |     |   `-StringLiteral 0x12b819dc8 <col:32> 'char[4]' lvalue "STR"
|   |   |   |     `-BinaryOperator 0x12b819e80 <line:15:22, col:38> 'unsigned long' '-'
|   |   |   |       |-UnaryExprOrTypeTraitExpr 0x12b819e28 <col:22, col:34> 'unsigned long' sizeof
|   |   |   |       | `-ParenExpr 0x12b819e08 <col:28, col:34> 'char[4]' lvalue
|   |   |   |       |   `-StringLiteral 0x12b819de8 <col:29> 'char[4]' lvalue "STR"
|   |   |   |       `-ImplicitCastExpr 0x12b819e68 <col:38> 'unsigned long' <IntegralCast>
|   |   |   |         `-IntegerLiteral 0x12b819e48 <col:38> 'int' 1
|   |   |   |-CompoundAssignOperator 0x12b81a0b0 <line:16:7, col:33> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   |   | |-CXXDependentScopeMemberExpr 0x12b81a000 <col:7, col:22> '<dependent type>' contains-errors lvalue ->dwFlags
|   |   |   | | `-RecoveryExpr 0x12b819fd8 <col:7> '<dependent type>' contains-errors lvalue
|   |   |   | |   `-DeclRefExpr 0x12b819fb8 <col:7> 'int *' lvalue ParmVar 0x12c113328 'schannel_cred' 'int *'
|   |   |   | `-RecoveryExpr 0x12b81a090 <col:33> '<dependent type>' contains-errors lvalue
|   |   |   `-ReturnStmt 0x12b81a118 <line:18:7, col:14>
|   |   |     `-RecoveryExpr 0x12b81a0f8 <col:14> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x12b81a4e8 <line:19:5, col:36> 'char *' '='
|   |   | |-DeclRefExpr 0x12b81a188 <col:5> 'char *' lvalue Var 0x12c1135f0 'startCur' 'char *'
|   |   | `-CallExpr 0x12b81a488 <col:16, col:36> 'char *'
|   |   |   |-ImplicitCastExpr 0x12b81a470 <col:16> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x12b81a3d0 <col:16> 'char *(const char *, int)' Function 0x12b81a1f0 'strchr' 'char *(const char *, int)'
|   |   |   |-ImplicitCastExpr 0x12b81a4d0 <col:23> 'const char *' <NoOp>
|   |   |   | `-ImplicitCastExpr 0x12b81a4b8 <col:23> 'char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x12b81a3f0 <col:23> 'char *' lvalue Var 0x12c1135f0 'startCur' 'char *'
|   |   |   `-CharacterLiteral 0x12b81a410 <col:33> 'int' 58
|   |   `-IfStmt 0x12b81a578 <line:20:5, line:21:15>
|   |     |-ImplicitCastExpr 0x12b81a528 <line:20:8> 'char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x12b81a508 <col:8> 'char *' lvalue Var 0x12c1135f0 'startCur' 'char *'
|   |     `-UnaryOperator 0x12b81a560 <line:21:7, col:15> 'char *' postfix '++'
|   |       `-DeclRefExpr 0x12b81a540 <col:7> 'char *' lvalue Var 0x12c1135f0 'startCur' 'char *'
|   |-BinaryOperator 0x12b81a6a0 <line:23:3, col:38> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x12b81a638 <col:3, col:18> '<dependent type>' contains-errors lvalue ->palgSupportedAlgs
|   | | `-RecoveryExpr 0x12b81a610 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x12b81a5f0 <col:3> 'int *' lvalue ParmVar 0x12c113328 'schannel_cred' 'int *'
|   | `-RecoveryExpr 0x12b81a680 <col:38> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x12b81a770 <line:24:3, col:35> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x12b81a708 <col:3, col:18> '<dependent type>' contains-errors lvalue ->cSupportedAlgs
|   | | `-RecoveryExpr 0x12b81a6e0 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x12b81a6c0 <col:3> 'int *' lvalue ParmVar 0x12c113328 'schannel_cred' 'int *'
|   | `-DeclRefExpr 0x12b81a750 <col:35> 'int' lvalue Var 0x12c1136c0 'algCount' 'int'
|   `-ReturnStmt 0x12b81a7c8 <line:25:3, col:10>
|     `-RecoveryExpr 0x12b81a7a8 <col:10> '<dependent type>' contains-errors lvalue
|-FunctionDecl 0x12b813270 <line:7:16> col:16 implicit used strtol 'long (const char *, char **, int)' extern
| |-ParmVarDecl 0x12b813370 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x12b8133d8 <<invalid sloc>> <invalid sloc> 'char **'
| |-ParmVarDecl 0x12b813440 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x12b813318 <<invalid sloc>> Implicit 877
|-FunctionDecl 0x12b813aa8 <line:12:14> col:14 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x12b813ba8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x12b813c10 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x12b813c78 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x12b813b50 <<invalid sloc>> Implicit 888
`-FunctionDecl 0x12b81a1f0 <line:19:16> col:16 implicit used strchr 'char *(const char *, int)' extern
  |-ParmVarDecl 0x12b81a2f0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x12b81a358 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x12b81a298 <<invalid sloc>> Implicit 893
