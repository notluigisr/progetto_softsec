TranslationUnitDecl 0x11f055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11f0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11f055bd0 '__int128'
|-TypedefDecl 0x11f056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11f055bf0 'unsigned __int128'
|-TypedefDecl 0x11f126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x11f126000 'struct __NSConstantString_tag'
|   `-Record 0x11f056580 '__NSConstantString_tag'
|-TypedefDecl 0x11f126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11f055d90 '__SVInt8_t'
|-TypedefDecl 0x11f126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11f055db0 '__SVInt16_t'
|-TypedefDecl 0x11f126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11f055dd0 '__SVInt32_t'
|-TypedefDecl 0x11f1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11f055df0 '__SVInt64_t'
|-TypedefDecl 0x11f126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11f055e10 '__SVUint8_t'
|-TypedefDecl 0x11f1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11f055e30 '__SVUint16_t'
|-TypedefDecl 0x11f126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11f055e50 '__SVUint32_t'
|-TypedefDecl 0x11f126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11f055e70 '__SVUint64_t'
|-TypedefDecl 0x11f1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11f055e90 '__SVFloat16_t'
|-TypedefDecl 0x11f126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11f055eb0 '__SVFloat32_t'
|-TypedefDecl 0x11f1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11f055ed0 '__SVFloat64_t'
|-TypedefDecl 0x11f126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11f055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x11f126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11f055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x11f1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11f055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x11f126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11f055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x11f1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11f055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x11f126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11f055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x11f126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11f055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x11f1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11f055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x11f126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11f055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x11f126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11f056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x11f126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11f056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x11f126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11f056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x11f126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11f056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x11f126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11f056090 '__clang_svint8x3_t'
|-TypedefDecl 0x11f126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11f0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x11f126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11f0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x11f126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11f0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x11f126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11f056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x11f126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11f056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x11f126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11f056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x11f126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11f056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x11f126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11f056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x11f127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11f0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x11f127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11f0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x11f1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11f0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x11f127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11f056210 '__clang_svint8x4_t'
|-TypedefDecl 0x11f1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11f056230 '__clang_svint16x4_t'
|-TypedefDecl 0x11f127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11f056250 '__clang_svint32x4_t'
|-TypedefDecl 0x11f127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11f056270 '__clang_svint64x4_t'
|-TypedefDecl 0x11f127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11f056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x11f127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11f0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x11f127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11f0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x11f127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11f0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x11f127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11f056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x11f127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11f056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x11f127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11f056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x11f127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11f056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x11f127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11f056390 '__SVBool_t'
|-TypedefDecl 0x11f127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11f0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x11f127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11f0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x11f127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11f0563f0 '__SVCount_t'
|-TypedefDecl 0x11f127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x11f127fb0 'char *'
|   `-BuiltinType 0x11f0556b0 'char'
|-TypedefDecl 0x11f128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x11f127fb0 'char *'
|   `-BuiltinType 0x11f0556b0 'char'
|-FunctionDecl 0x11f8082d8 <dataset_diviso_filec/func11638_vuln.c:1:1, line:67:1> line:1:1 process_abbrev_set 'int (struct dwarf_section *, unsigned char *, unsigned char *)'
| |-ParmVarDecl 0x11f128648 <col:21, col:43> col:43 used section 'struct dwarf_section *'
| |-ParmVarDecl 0x11f1286f8 <line:2:7, col:22> col:22 used start 'unsigned char *'
| |-ParmVarDecl 0x11f128778 <line:3:7, col:22> col:22 used end 'unsigned char *'
| `-CompoundStmt 0x11f80bcb0 <line:4:1, line:67:1>
|   |-WhileStmt 0x11f80b520 <line:9:3, line:60:5>
|   | |-BinaryOperator 0x11f808628 <line:9:10, col:18> 'int' '<'
|   | | |-ImplicitCastExpr 0x11f8085f8 <col:10> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x11f8085b8 <col:10> 'unsigned char *' lvalue ParmVar 0x11f1286f8 'start' 'unsigned char *'
|   | | `-ImplicitCastExpr 0x11f808610 <col:18> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x11f8085d8 <col:18> 'unsigned char *' lvalue ParmVar 0x11f128778 'end' 'unsigned char *'
|   | `-CompoundStmt 0x11f80b4b8 <line:10:5, line:60:5>
|   |   |-DeclStmt 0x11f8086c8 <line:11:7, col:26>
|   |   | `-VarDecl 0x11f808660 <col:7, col:21> col:21 used entry 'unsigned long'
|   |   |-DeclStmt 0x11f808760 <line:12:7, col:24>
|   |   | `-VarDecl 0x11f8086f8 <col:7, col:21> col:21 used tag 'unsigned long'
|   |   |-DeclStmt 0x11f8087f8 <line:13:7, col:30>
|   |   | `-VarDecl 0x11f808790 <col:7, col:21> col:21 used attribute 'unsigned long'
|   |   |-DeclStmt 0x11f808890 <line:14:7, col:19>
|   |   | `-VarDecl 0x11f808828 <col:7, col:11> col:11 used children 'int'
|   |   |-CallExpr 0x11f808a58 <line:16:7, col:35> 'int'
|   |   | |-ImplicitCastExpr 0x11f808a40 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x11f808988 <col:7> 'int ()' Function 0x11f8088d0 'READ_ULEB' 'int ()'
|   |   | |-ImplicitCastExpr 0x11f808a90 <col:18> 'unsigned long' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x11f8089a8 <col:18> 'unsigned long' lvalue Var 0x11f808660 'entry' 'unsigned long'
|   |   | |-ImplicitCastExpr 0x11f808aa8 <col:25> 'unsigned char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x11f8089c8 <col:25> 'unsigned char *' lvalue ParmVar 0x11f1286f8 'start' 'unsigned char *'
|   |   | `-ImplicitCastExpr 0x11f808ac0 <col:32> 'unsigned char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x11f8089e8 <col:32> 'unsigned char *' lvalue ParmVar 0x11f128778 'end' 'unsigned char *'
|   |   |-IfStmt 0x11f808dc0 <line:19:7, line:23:2>
|   |   | |-BinaryOperator 0x11f808bf8 <line:19:11, col:36> 'int' '||'
|   |   | | |-BinaryOperator 0x11f808b48 <col:11, col:20> 'int' '=='
|   |   | | | |-ImplicitCastExpr 0x11f808b18 <col:11> 'unsigned char *' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x11f808ad8 <col:11> 'unsigned char *' lvalue ParmVar 0x11f1286f8 'start' 'unsigned char *'
|   |   | | | `-ImplicitCastExpr 0x11f808b30 <col:20> 'unsigned char *' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x11f808af8 <col:20> 'unsigned char *' lvalue ParmVar 0x11f128778 'end' 'unsigned char *'
|   |   | | `-BinaryOperator 0x11f808bd8 <col:27, col:36> 'int' '=='
|   |   | |   |-ImplicitCastExpr 0x11f808ba8 <col:27> 'unsigned long' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x11f808b68 <col:27> 'unsigned long' lvalue Var 0x11f808660 'entry' 'unsigned long'
|   |   | |   `-ImplicitCastExpr 0x11f808bc0 <col:36> 'unsigned long' <IntegralCast>
|   |   | |     `-IntegerLiteral 0x11f808b88 <col:36> 'int' 0
|   |   | `-CompoundStmt 0x11f808da8 <line:20:2, line:23:2>
|   |   |   `-ReturnStmt 0x11f808d98 <line:22:4, col:11>
|   |   |     `-RecoveryExpr 0x11f808d78 <col:11> '<dependent type>' contains-errors lvalue
|   |   |-CallExpr 0x11f808e78 <line:25:7, col:33> 'int'
|   |   | |-ImplicitCastExpr 0x11f808e60 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x11f808de0 <col:7> 'int ()' Function 0x11f8088d0 'READ_ULEB' 'int ()'
|   |   | |-ImplicitCastExpr 0x11f808eb0 <col:18> 'unsigned long' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x11f808e00 <col:18> 'unsigned long' lvalue Var 0x11f8086f8 'tag' 'unsigned long'
|   |   | |-ImplicitCastExpr 0x11f808ec8 <col:23> 'unsigned char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x11f808e20 <col:23> 'unsigned char *' lvalue ParmVar 0x11f1286f8 'start' 'unsigned char *'
|   |   | `-ImplicitCastExpr 0x11f808ee0 <col:30> 'unsigned char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x11f808e40 <col:30> 'unsigned char *' lvalue ParmVar 0x11f128778 'end' 'unsigned char *'
|   |   |-IfStmt 0x11f80a890 <line:26:7, line:30:2>
|   |   | |-BinaryOperator 0x11f808f68 <line:26:11, col:20> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x11f808f38 <col:11> 'unsigned char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x11f808ef8 <col:11> 'unsigned char *' lvalue ParmVar 0x11f1286f8 'start' 'unsigned char *'
|   |   | | `-ImplicitCastExpr 0x11f808f50 <col:20> 'unsigned char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x11f808f18 <col:20> 'unsigned char *' lvalue ParmVar 0x11f128778 'end' 'unsigned char *'
|   |   | `-CompoundStmt 0x11f80a870 <line:27:2, line:30:2>
|   |   |   |-CallExpr 0x11f80a800 <line:28:4, col:14> '<dependent type>' contains-errors
|   |   |   | |-DeclRefExpr 0x11f809138 <col:4> 'void (void *)' Function 0x11f808fc8 'free' 'void (void *)'
|   |   |   | `-RecoveryExpr 0x11f8091b0 <col:10> '<dependent type>' contains-errors lvalue
|   |   |   `-ReturnStmt 0x11f80a860 <line:29:4, col:11>
|   |   |     `-RecoveryExpr 0x11f80a840 <col:11> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x11f80a950 <line:32:7, col:24> 'int' '='
|   |   | |-DeclRefExpr 0x11f80a8b0 <col:7> 'int' lvalue Var 0x11f808828 'children' 'int'
|   |   | `-ImplicitCastExpr 0x11f80a938 <col:18, col:24> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x11f80a920 <col:18, col:24> 'unsigned char' <LValueToRValue>
|   |   |     `-UnaryOperator 0x11f80a908 <col:18, col:24> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   |       `-UnaryOperator 0x11f80a8f0 <col:19, col:24> 'unsigned char *' postfix '++'
|   |   |         `-DeclRefExpr 0x11f80a8d0 <col:19> 'unsigned char *' lvalue ParmVar 0x11f1286f8 'start' 'unsigned char *'
|   |   |-CallExpr 0x11f80ab48 <line:34:7, col:45> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x11f80aa50 <col:7> 'int ()' Function 0x11f80a998 'add_abbrev' 'int ()'
|   |   | |-DeclRefExpr 0x11f80aa70 <col:19> 'unsigned long' lvalue Var 0x11f808660 'entry' 'unsigned long'
|   |   | |-DeclRefExpr 0x11f80aa90 <col:26> 'unsigned long' lvalue Var 0x11f8086f8 'tag' 'unsigned long'
|   |   | |-DeclRefExpr 0x11f80aab0 <col:31> 'int' lvalue Var 0x11f808828 'children' 'int'
|   |   | `-RecoveryExpr 0x11f80ab28 <col:41> '<dependent type>' contains-errors lvalue
|   |   `-DoStmt 0x11f80b498 <line:36:7, line:59:28>
|   |     |-CompoundStmt 0x11f80b3c8 <line:37:2, line:58:2>
|   |     | |-DeclStmt 0x11f80ac08 <line:38:4, col:22>
|   |     | | `-VarDecl 0x11f80aba0 <col:4, col:18> col:18 used form 'unsigned long'
|   |     | |-CallExpr 0x11f80acb8 <line:42:4, col:36> 'int'
|   |     | | |-ImplicitCastExpr 0x11f80aca0 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   |     | | | `-DeclRefExpr 0x11f80ac20 <col:4> 'int ()' Function 0x11f8088d0 'READ_ULEB' 'int ()'
|   |     | | |-ImplicitCastExpr 0x11f80acf0 <col:15> 'unsigned long' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x11f80ac40 <col:15> 'unsigned long' lvalue Var 0x11f808790 'attribute' 'unsigned long'
|   |     | | |-ImplicitCastExpr 0x11f80ad08 <col:26> 'unsigned char *' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x11f80ac60 <col:26> 'unsigned char *' lvalue ParmVar 0x11f1286f8 'start' 'unsigned char *'
|   |     | | `-ImplicitCastExpr 0x11f80ad20 <col:33> 'unsigned char *' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x11f80ac80 <col:33> 'unsigned char *' lvalue ParmVar 0x11f128778 'end' 'unsigned char *'
|   |     | |-IfStmt 0x11f80add0 <line:43:4, line:44:6>
|   |     | | |-BinaryOperator 0x11f80ada8 <line:43:8, col:17> 'int' '=='
|   |     | | | |-ImplicitCastExpr 0x11f80ad78 <col:8> 'unsigned char *' <LValueToRValue>
|   |     | | | | `-DeclRefExpr 0x11f80ad38 <col:8> 'unsigned char *' lvalue ParmVar 0x11f1286f8 'start' 'unsigned char *'
|   |     | | | `-ImplicitCastExpr 0x11f80ad90 <col:17> 'unsigned char *' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x11f80ad58 <col:17> 'unsigned char *' lvalue ParmVar 0x11f128778 'end' 'unsigned char *'
|   |     | | `-BreakStmt 0x11f80adc8 <line:44:6>
|   |     | |-CallExpr 0x11f80ae88 <line:46:4, col:31> 'int'
|   |     | | |-ImplicitCastExpr 0x11f80ae70 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   |     | | | `-DeclRefExpr 0x11f80adf0 <col:4> 'int ()' Function 0x11f8088d0 'READ_ULEB' 'int ()'
|   |     | | |-ImplicitCastExpr 0x11f80aec0 <col:15> 'unsigned long' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x11f80ae10 <col:15> 'unsigned long' lvalue Var 0x11f80aba0 'form' 'unsigned long'
|   |     | | |-ImplicitCastExpr 0x11f80aed8 <col:21> 'unsigned char *' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x11f80ae30 <col:21> 'unsigned char *' lvalue ParmVar 0x11f1286f8 'start' 'unsigned char *'
|   |     | | `-ImplicitCastExpr 0x11f80aef0 <col:28> 'unsigned char *' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x11f80ae50 <col:28> 'unsigned char *' lvalue ParmVar 0x11f128778 'end' 'unsigned char *'
|   |     | |-IfStmt 0x11f80afa0 <line:47:4, line:48:6>
|   |     | | |-BinaryOperator 0x11f80af78 <line:47:8, col:17> 'int' '=='
|   |     | | | |-ImplicitCastExpr 0x11f80af48 <col:8> 'unsigned char *' <LValueToRValue>
|   |     | | | | `-DeclRefExpr 0x11f80af08 <col:8> 'unsigned char *' lvalue ParmVar 0x11f1286f8 'start' 'unsigned char *'
|   |     | | | `-ImplicitCastExpr 0x11f80af60 <col:17> 'unsigned char *' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x11f80af28 <col:17> 'unsigned char *' lvalue ParmVar 0x11f128778 'end' 'unsigned char *'
|   |     | | `-BreakStmt 0x11f80af98 <line:48:6>
|   |     | `-IfStmt 0x11f80b268 <line:50:4, line:55:6>
|   |     |   |-BinaryOperator 0x11f80b038 <line:50:8, col:16> 'int' contains-errors '=='
|   |     |   | |-DeclRefExpr 0x11f80afc0 <col:8> 'unsigned long' lvalue Var 0x11f80aba0 'form' 'unsigned long'
|   |     |   | `-RecoveryExpr 0x11f80b018 <col:16> '<dependent type>' contains-errors lvalue
|   |     |   `-CompoundStmt 0x11f80b250 <line:51:6, line:55:6>
|   |     |     `-IfStmt 0x11f80b230 <line:53:8, line:54:3>
|   |     |       |-BinaryOperator 0x11f80b208 <line:53:12, col:21> 'int' '=='
|   |     |       | |-ImplicitCastExpr 0x11f80b1d8 <col:12> 'unsigned char *' <LValueToRValue>
|   |     |       | | `-DeclRefExpr 0x11f80b198 <col:12> 'unsigned char *' lvalue ParmVar 0x11f1286f8 'start' 'unsigned char *'
|   |     |       | `-ImplicitCastExpr 0x11f80b1f0 <col:21> 'unsigned char *' <LValueToRValue>
|   |     |       |   `-DeclRefExpr 0x11f80b1b8 <col:21> 'unsigned char *' lvalue ParmVar 0x11f128778 'end' 'unsigned char *'
|   |     |       `-BreakStmt 0x11f80b228 <line:54:3>
|   |     `-BinaryOperator 0x11f80b478 <line:59:14, col:27> 'int' '!='
|   |       |-ImplicitCastExpr 0x11f80b448 <col:14> 'unsigned long' <LValueToRValue>
|   |       | `-DeclRefExpr 0x11f80b408 <col:14> 'unsigned long' lvalue Var 0x11f808790 'attribute' 'unsigned long'
|   |       `-ImplicitCastExpr 0x11f80b460 <col:27> 'unsigned long' <IntegralCast>
|   |         `-IntegerLiteral 0x11f80b428 <col:27> 'int' 0
|   `-CallExpr 0x11f80bc60 <line:63:3, col:33> '<dependent type>' contains-errors
|     |-DeclRefExpr 0x11f80b620 <col:3> 'int ()' Function 0x11f80b568 'error' 'int ()'
|     |-CallExpr 0x11f80b7b8 <col:10, col:17> 'int'
|     | |-ImplicitCastExpr 0x11f80b7a0 <col:10> 'int (*)()' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x11f80b720 <col:10> 'int ()' Function 0x11f80b668 '_' 'int ()'
|     | `-ImplicitCastExpr 0x11f80b7e0 <col:12> 'char *' <ArrayToPointerDecay>
|     |   `-StringLiteral 0x11f80b780 <col:12> 'char[4]' lvalue "STR"
|     `-RecoveryExpr 0x11f80bc38 <col:20, col:29> '<dependent type>' contains-errors lvalue
|       `-DeclRefExpr 0x11f80bc00 <col:20> 'struct dwarf_section *' lvalue ParmVar 0x11f128648 'section' 'struct dwarf_section *'
`-FunctionDecl 0x11f808fc8 <line:28:4> col:4 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x11f8090c8 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x11f809070 <<invalid sloc>> Implicit 873
