TranslationUnitDecl 0x151055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1510564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x151055bd0 '__int128'
|-TypedefDecl 0x151056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x151055bf0 'unsigned __int128'
|-TypedefDecl 0x151041c30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x151041a00 'struct __NSConstantString_tag'
|   `-Record 0x151056580 '__NSConstantString_tag'
|-TypedefDecl 0x151041c98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x151055d90 '__SVInt8_t'
|-TypedefDecl 0x151041d00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x151055db0 '__SVInt16_t'
|-TypedefDecl 0x151041d68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x151055dd0 '__SVInt32_t'
|-TypedefDecl 0x151041dd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x151055df0 '__SVInt64_t'
|-TypedefDecl 0x151041e38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x151055e10 '__SVUint8_t'
|-TypedefDecl 0x151041ea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x151055e30 '__SVUint16_t'
|-TypedefDecl 0x151041f08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x151055e50 '__SVUint32_t'
|-TypedefDecl 0x151041f70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x151055e70 '__SVUint64_t'
|-TypedefDecl 0x151041fd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x151055e90 '__SVFloat16_t'
|-TypedefDecl 0x151042040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x151055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1510420a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x151055ed0 '__SVFloat64_t'
|-TypedefDecl 0x151042110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x151055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x151042178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x151055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1510421e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x151055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x151042248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x151055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1510422b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x151055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x151042318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x151055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x151042380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x151055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1510423e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x151055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x151042450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x151055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1510424b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x151056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x151042520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x151056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x151042588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x151056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1510425f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x151056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x151042658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x151056090 '__clang_svint8x3_t'
|-TypedefDecl 0x1510426c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1510560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x151042728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1510560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x151042790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1510560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1510427f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x151056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x151042860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x151056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1510428c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x151056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x151042930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x151056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x151042998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x151056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x1510d2a00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1510561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x1510d2a68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1510561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1510d2ad0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1510561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x1510d2b38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x151056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1510d2ba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x151056230 '__clang_svint16x4_t'
|-TypedefDecl 0x1510d2c08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x151056250 '__clang_svint32x4_t'
|-TypedefDecl 0x1510d2c70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x151056270 '__clang_svint64x4_t'
|-TypedefDecl 0x1510d2cd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x151056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x1510d2d40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1510562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1510d2da8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1510562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x1510d2e10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1510562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x1510d2e78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x151056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1510d2ee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x151056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x1510d2f48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x151056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1510d2fb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x151056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x1510d3018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x151056390 '__SVBool_t'
|-TypedefDecl 0x1510d3080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1510563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1510d30e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1510563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x1510d3150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1510563f0 '__SVCount_t'
|-TypedefDecl 0x1510d31f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1510d31b0 'char *'
|   `-BuiltinType 0x1510556b0 'char'
|-TypedefDecl 0x1510d3268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1510d31b0 'char *'
|   `-BuiltinType 0x1510556b0 'char'
`-FunctionDecl 0x1510d3958 <dataset_diviso_filec/func11553_nonvuln.c:1:1, line:45:1> line:1:12 hidpp_root_get_protocol_version 'int (struct hidpp_device *)' static
  |-ParmVarDecl 0x1510d3848 <col:44, col:65> col:65 used hidpp 'struct hidpp_device *'
  `-CompoundStmt 0x153008b08 <line:2:1, line:45:1>
    |-DeclStmt 0x1510eb508 <line:3:2, col:27>
    | `-VarDecl 0x1510eb480 <col:2, col:11> col:11 referenced invalid ping_byte 'const int'
    |-DeclStmt 0x1510eb698 <line:5:2, col:30>
    | |-RecordDecl 0x1510eb520 <col:2, col:9> col:9 struct hidpp_report
    | `-VarDecl 0x1510eb618 <col:2, col:22> col:22 invalid response 'struct hidpp_report'
    |-DeclStmt 0x1510eb730 <line:6:2, col:9>
    | `-VarDecl 0x1510eb6c8 <col:2, col:6> col:6 used ret 'int'
    |-IfStmt 0x1510ebc18 <line:14:2, line:18:2>
    | |-BinaryOperator 0x1510eba28 <line:14:6, col:13> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x1510eb9b0 <col:6> 'int' lvalue Var 0x1510eb6c8 'ret' 'int'
    | | `-RecoveryExpr 0x1510eba08 <col:13> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1510ebbf0 <col:40, line:18:2>
    |   |-BinaryOperator 0x1510ebac8 <line:15:3, col:27> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x1510eba80 <col:3, col:10> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x1510eba48 <col:3> 'struct hidpp_device *' lvalue ParmVar 0x1510d3848 'hidpp' 'struct hidpp_device *'
    |   | `-IntegerLiteral 0x1510ebaa8 <col:27> 'int' 1
    |   |-BinaryOperator 0x1510ebb68 <line:16:3, col:27> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x1510ebb20 <col:3, col:10> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x1510ebae8 <col:3> 'struct hidpp_device *' lvalue ParmVar 0x1510d3848 'hidpp' 'struct hidpp_device *'
    |   | `-IntegerLiteral 0x1510ebb48 <col:27> 'int' 0
    |   `-GotoStmt 0x1510ebbd8 <line:17:3, col:8> 'print_version' 0x1510ebb88
    |-IfStmt 0x1510ebd78 <line:21:2, line:22:11>
    | |-BinaryOperator 0x1510ebcb0 <line:21:6, col:13> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x1510ebc38 <col:6> 'int' lvalue Var 0x1510eb6c8 'ret' 'int'
    | | `-RecoveryExpr 0x1510ebc90 <col:13> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x1510ebd68 <line:22:3, col:11>
    |   `-UnaryOperator 0x1510ebd50 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x1510ebd38 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x1510ebd18 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1510ec1c8 <line:24:2, line:28:2>
    | |-BinaryOperator 0x1510ebdf0 <line:24:6, col:12> 'int' '>'
    | | |-ImplicitCastExpr 0x1510ebdd8 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1510ebd98 <col:6> 'int' lvalue Var 0x1510eb6c8 'ret' 'int'
    | | `-IntegerLiteral 0x1510ebdb8 <col:12> 'int' 0
    | `-CompoundStmt 0x1510ec1a8 <col:15, line:28:2>
    |   |-CallExpr 0x1510ec0c0 <line:25:3, line:26:17> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1510ebef0 <line:25:3> 'int ()' Function 0x1510ebe38 'hid_err' 'int ()'
    |   | |-RecoveryExpr 0x1510ebf48 <col:11, col:18> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x1510ebf10 <col:11> 'struct hidpp_device *' lvalue ParmVar 0x1510d3848 'hidpp' 'struct hidpp_device *'
    |   | |-StringLiteral 0x1510ebfb0 <col:27> 'char[4]' lvalue "STR"
    |   | |-PredefinedExpr 0x1510ec088 <line:26:4> 'const char[32]' lvalue __func__
    |   | | `-StringLiteral 0x1510ec050 <col:4> 'const char[32]' lvalue "hidpp_root_get_protocol_version"
    |   | `-DeclRefExpr 0x1510ec0a0 <col:14> 'int' lvalue Var 0x1510eb6c8 'ret' 'int'
    |   `-ReturnStmt 0x1510ec198 <line:27:3, col:11>
    |     `-UnaryOperator 0x1510ec180 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x1510ec168 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x1510ec148 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1510ec268 <line:29:2, line:30:10>
    | |-ImplicitCastExpr 0x1510ec208 <line:29:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x1510ec1e8 <col:6> 'int' lvalue Var 0x1510eb6c8 'ret' 'int'
    | `-ReturnStmt 0x1510ec258 <line:30:3, col:10>
    |   `-ImplicitCastExpr 0x1510ec240 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x1510ec220 <col:10> 'int' lvalue Var 0x1510eb6c8 'ret' 'int'
    |-IfStmt 0x153008508 <line:32:2, line:36:2>
    | |-BinaryOperator 0x1510ec3b0 <line:32:6, col:32> 'int' contains-errors '!='
    | | |-ArraySubscriptExpr 0x1510ec370 <col:6, col:27> '<dependent type>' contains-errors lvalue
    | | | |-ImplicitCastExpr 0x1510ec358 <col:6, col:19> '<dependent type>' contains-errors <LValueToRValue>
    | | | | `-CXXDependentScopeMemberExpr 0x1510ec2f0 <col:6, col:19> '<dependent type>' contains-errors lvalue .params
    | | | |   `-CXXDependentScopeMemberExpr 0x1510ec2a8 <col:6, col:15> '<dependent type>' contains-errors lvalue .rap
    | | | |     `-RecoveryExpr 0x1510ec288 <col:6> '<dependent type>' contains-errors lvalue
    | | | `-IntegerLiteral 0x1510ec338 <col:26> 'int' 2
    | | `-RecoveryExpr 0x1510ec390 <col:32> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1530084e8 <col:43, line:36:2>
    |   |-CallExpr 0x1530083f8 <line:33:3, line:34:47> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1510ec3d0 <line:33:3> 'int ()' Function 0x1510ebe38 'hid_err' 'int ()'
    |   | |-RecoveryExpr 0x153008238 <col:11, col:18> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x153008200 <col:11> 'struct hidpp_device *' lvalue ParmVar 0x1510d3848 'hidpp' 'struct hidpp_device *'
    |   | |-StringLiteral 0x153008260 <col:27> 'char[4]' lvalue "STR"
    |   | |-PredefinedExpr 0x1530082b8 <line:34:4> 'const char[32]' lvalue __func__
    |   | | `-StringLiteral 0x153008280 <col:4> 'const char[32]' lvalue "hidpp_root_get_protocol_version"
    |   | |-ArraySubscriptExpr 0x1530083b8 <col:14, col:35> '<dependent type>' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x1530083a0 <col:14, col:27> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | `-CXXDependentScopeMemberExpr 0x153008338 <col:14, col:27> '<dependent type>' contains-errors lvalue .params
    |   | | |   `-CXXDependentScopeMemberExpr 0x1530082f0 <col:14, col:23> '<dependent type>' contains-errors lvalue .rap
    |   | | |     `-RecoveryExpr 0x1530082d0 <col:14> '<dependent type>' contains-errors lvalue
    |   | | `-IntegerLiteral 0x153008380 <col:34> 'int' 2
    |   | `-RecoveryExpr 0x1530083d8 <col:38> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x1530084d8 <line:35:3, col:11>
    |     `-UnaryOperator 0x1530084c0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x1530084a8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x153008488 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x153008690 <line:38:2, col:47> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x153008560 <col:2, col:9> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x153008528 <col:2> 'struct hidpp_device *' lvalue ParmVar 0x1510d3848 'hidpp' 'struct hidpp_device *'
    | `-ArraySubscriptExpr 0x153008670 <col:26, col:47> '<dependent type>' contains-errors lvalue
    |   |-ImplicitCastExpr 0x153008658 <col:26, col:39> '<dependent type>' contains-errors <LValueToRValue>
    |   | `-CXXDependentScopeMemberExpr 0x1530085f0 <col:26, col:39> '<dependent type>' contains-errors lvalue .params
    |   |   `-CXXDependentScopeMemberExpr 0x1530085a8 <col:26, col:35> '<dependent type>' contains-errors lvalue .rap
    |   |     `-RecoveryExpr 0x153008588 <col:26> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x153008638 <col:46> 'int' 0
    |-BinaryOperator 0x153008818 <line:39:2, col:47> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x1530086e8 <col:2, col:9> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x1530086b0 <col:2> 'struct hidpp_device *' lvalue ParmVar 0x1510d3848 'hidpp' 'struct hidpp_device *'
    | `-ArraySubscriptExpr 0x1530087f8 <col:26, col:47> '<dependent type>' contains-errors lvalue
    |   |-ImplicitCastExpr 0x1530087e0 <col:26, col:39> '<dependent type>' contains-errors <LValueToRValue>
    |   | `-CXXDependentScopeMemberExpr 0x153008778 <col:26, col:39> '<dependent type>' contains-errors lvalue .params
    |   |   `-CXXDependentScopeMemberExpr 0x153008730 <col:26, col:35> '<dependent type>' contains-errors lvalue .rap
    |   |     `-RecoveryExpr 0x153008710 <col:26> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x1530087c0 <col:46> 'int' 1
    |-LabelStmt 0x153008ab8 <line:41:1, line:43:48> 'print_version'
    | `-CallExpr 0x153008a78 <line:42:2, line:43:48> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x153008918 <line:42:2> 'int ()' Function 0x153008860 'hid_info' 'int ()'
    |   |-RecoveryExpr 0x153008970 <col:11, col:18> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x153008938 <col:11> 'struct hidpp_device *' lvalue ParmVar 0x1510d3848 'hidpp' 'struct hidpp_device *'
    |   |-StringLiteral 0x153008998 <col:27> 'char[4]' lvalue "STR"
    |   |-RecoveryExpr 0x1530089f0 <line:43:4, col:11> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x1530089b8 <col:4> 'struct hidpp_device *' lvalue ParmVar 0x1510d3848 'hidpp' 'struct hidpp_device *'
    |   `-RecoveryExpr 0x153008a50 <col:27, col:34> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x153008a18 <col:27> 'struct hidpp_device *' lvalue ParmVar 0x1510d3848 'hidpp' 'struct hidpp_device *'
    `-ReturnStmt 0x153008af8 <line:44:2, col:9>
      `-IntegerLiteral 0x153008ad8 <col:9> 'int' 0
