TranslationUnitDecl 0x132855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1328564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x132855bd0 '__int128'
|-TypedefDecl 0x132856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x132855bf0 'unsigned __int128'
|-TypedefDecl 0x132926c30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x132926a00 'struct __NSConstantString_tag'
|   `-Record 0x132856580 '__NSConstantString_tag'
|-TypedefDecl 0x132926c98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x132855d90 '__SVInt8_t'
|-TypedefDecl 0x132926d00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x132855db0 '__SVInt16_t'
|-TypedefDecl 0x132926d68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x132855dd0 '__SVInt32_t'
|-TypedefDecl 0x132926dd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x132855df0 '__SVInt64_t'
|-TypedefDecl 0x132926e38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x132855e10 '__SVUint8_t'
|-TypedefDecl 0x132926ea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x132855e30 '__SVUint16_t'
|-TypedefDecl 0x132926f08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x132855e50 '__SVUint32_t'
|-TypedefDecl 0x132926f70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x132855e70 '__SVUint64_t'
|-TypedefDecl 0x132926fd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x132855e90 '__SVFloat16_t'
|-TypedefDecl 0x132927040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x132855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1329270a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x132855ed0 '__SVFloat64_t'
|-TypedefDecl 0x132927110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x132855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x132927178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x132855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1329271e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x132855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x132927248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x132855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1329272b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x132855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x132927318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x132855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x132927380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x132855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1329273e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x132855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x132927450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x132855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1329274b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x132856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x132927520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x132856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x132927588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x132856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1329275f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x132856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x132927658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x132856090 '__clang_svint8x3_t'
|-TypedefDecl 0x1329276c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1328560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x132927728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1328560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x132927790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1328560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1329277f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x132856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x132927860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x132856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1329278c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x132856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x132927930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x132856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x132927998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x132856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x132928200 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1328561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x132928268 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1328561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1329282d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1328561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x132928338 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x132856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1329283a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x132856230 '__clang_svint16x4_t'
|-TypedefDecl 0x132928408 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x132856250 '__clang_svint32x4_t'
|-TypedefDecl 0x132928470 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x132856270 '__clang_svint64x4_t'
|-TypedefDecl 0x1329284d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x132856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x132928540 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1328562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1329285a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1328562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x132928610 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1328562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x132928678 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x132856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1329286e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x132856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x132928748 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x132856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1329287b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x132856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x132928818 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x132856390 '__SVBool_t'
|-TypedefDecl 0x132928880 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1328563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1329288e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1328563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x132928950 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1328563f0 '__SVCount_t'
|-TypedefDecl 0x1329289f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1329289b0 'char *'
|   `-BuiltinType 0x1328556b0 'char'
|-TypedefDecl 0x132928a68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1329289b0 'char *'
|   `-BuiltinType 0x1328556b0 'char'
|-FunctionDecl 0x132928ba8 <dataset_diviso_filec/func2353_vuln.c:1:1, line:70:1> line:1:1 PHP_FUNCTION 'int (int)'
| |-ParmVarDecl 0x132928ad8 <col:14> col:14 openssl_encrypt 'int'
| `-CompoundStmt 0x13300f590 <line:2:1, line:70:1>
|   |-DeclStmt 0x132928f58 <line:4:2, col:42>
|   | |-VarDecl 0x132928cd0 <col:2, col:8> col:8 used data 'char *'
|   | |-VarDecl 0x132928d50 <col:2, col:15> col:15 used method 'char *'
|   | |-VarDecl 0x132928dd0 <col:2, col:24> col:24 used password 'char *'
|   | `-VarDecl 0x132928e50 <col:2, col:40> col:35 used iv 'char *' cinit
|   |   `-ImplicitCastExpr 0x132928f18 <col:40> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x132928f00 <col:40> 'char[1]' lvalue ""
|   |-DeclStmt 0x133009c98 <line:5:2, col:64>
|   | |-VarDecl 0x132928f88 <col:2, col:6> col:6 used data_len 'int'
|   | |-VarDecl 0x132929008 <col:2, col:16> col:16 method_len 'int'
|   | |-VarDecl 0x132929088 <col:2, col:28> col:28 used password_len 'int'
|   | |-VarDecl 0x132929108 <col:2, col:51> col:42 used iv_len 'int' cinit
|   | | `-IntegerLiteral 0x132929170 <col:51> 'int' 0
|   | `-VarDecl 0x133009c00 <col:2, col:54> col:54 used max_iv_len 'int'
|   |-DeclStmt 0x133009d30 <line:6:2, col:31>
|   | `-VarDecl 0x133009cc8 <col:2, col:20> col:20 referenced invalid cipher_type 'const int *'
|   |-DeclStmt 0x133009ee8 <line:8:2, col:23>
|   | |-VarDecl 0x133009d60 <col:2, col:6> col:6 used i 'int'
|   | |-VarDecl 0x133009de0 <col:2, col:9> col:9 used outlen 'int'
|   | `-VarDecl 0x133009e60 <col:2, col:17> col:17 used keylen 'int'
|   |-DeclStmt 0x13300a048 <line:9:2, col:29>
|   | |-VarDecl 0x133009f48 <col:2, col:17> col:17 used outbuf 'unsigned char *'
|   | `-VarDecl 0x133009fc8 <col:2, col:26> col:26 used key 'unsigned char *'
|   |-IfStmt 0x13300a358 <line:12:2, line:14:2>
|   | |-RecoveryExpr 0x13300a310 <line:12:6, col:158> '_Bool' contains-errors
|   | `-CompoundStmt 0x13300a340 <col:167, line:14:2>
|   |   `-ReturnStmt 0x13300a330 <line:13:3>
|   |-BinaryOperator 0x13300a538 <line:15:2, col:43> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x13300a398 <col:2> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x13300a378 <col:2> 'const int *' lvalue Var 0x133009cc8 'cipher_type' 'const int *'
|   | `-CallExpr 0x13300a4f8 <col:16, col:43> 'int'
|   |   |-ImplicitCastExpr 0x13300a4e0 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x13300a4a0 <col:16> 'int ()' Function 0x13300a3e8 'EVP_get_cipherbyname' 'int ()'
|   |   `-ImplicitCastExpr 0x13300a520 <col:37> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x13300a4c0 <col:37> 'char *' lvalue Var 0x132928d50 'method' 'char *'
|   |-IfStmt 0x13300a6d0 <line:16:2, line:19:2>
|   | |-UnaryOperator 0x13300a590 <line:16:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x13300a578 <col:7> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x13300a558 <col:7> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x13300a6c0 <col:20, line:19:2>
|   |-BinaryOperator 0x13300a858 <line:21:2, col:44> 'int' contains-errors '='
|   | |-DeclRefExpr 0x13300a6f0 <col:2> 'int' lvalue Var 0x133009e60 'keylen' 'int'
|   | `-CallExpr 0x13300a830 <col:11, col:44> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x13300a7f0 <col:11> 'int ()' Function 0x13300a738 'EVP_CIPHER_key_length' 'int ()'
|   |   `-RecoveryExpr 0x13300a810 <col:33> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x13300bce8 <line:22:2, line:28:2> has_else
|   | |-BinaryOperator 0x13300a8e8 <line:22:6, col:15> 'int' '>'
|   | | |-ImplicitCastExpr 0x13300a8b8 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13300a878 <col:6> 'int' lvalue Var 0x133009e60 'keylen' 'int'
|   | | `-ImplicitCastExpr 0x13300a8d0 <col:15> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13300a898 <col:15> 'int' lvalue Var 0x132929088 'password_len' 'int'
|   | |-CompoundStmt 0x13300bbf0 <col:29, line:26:2>
|   | | |-BinaryOperator 0x13300b300 <line:23:3, col:23> 'unsigned char *' '='
|   | | | |-DeclRefExpr 0x13300a908 <col:3> 'unsigned char *' lvalue Var 0x133009fc8 'key' 'unsigned char *'
|   | | | `-ImplicitCastExpr 0x13300aaa0 <col:9, col:23> 'unsigned char *' <IntegralToPointer>
|   | | |   `-CallExpr 0x13300aa60 <col:9, col:23> 'int'
|   | | |     |-ImplicitCastExpr 0x13300aa48 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | |     | `-DeclRefExpr 0x13300aa08 <col:9> 'int ()' Function 0x13300a950 'emalloc' 'int ()'
|   | | |     `-ImplicitCastExpr 0x13300aa88 <col:17> 'int' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x13300aa28 <col:17> 'int' lvalue Var 0x133009e60 'keylen' 'int'
|   | | |-CallExpr 0x13300b6b8 <line:24:3, col:24> 'void *'
|   | | | |-ImplicitCastExpr 0x13300b6a0 <col:3> 'void *(*)(void *, int, unsigned long)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x13300b5b8 <col:3> 'void *(void *, int, unsigned long)' Function 0x13300b368 'memset' 'void *(void *, int, unsigned long)'
|   | | | |-ImplicitCastExpr 0x13300b708 <col:10> 'void *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x13300b6f0 <col:10> 'unsigned char *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x13300b5d8 <col:10> 'unsigned char *' lvalue Var 0x133009fc8 'key' 'unsigned char *'
|   | | | |-IntegerLiteral 0x13300b5f8 <col:15> 'int' 0
|   | | | `-ImplicitCastExpr 0x13300b738 <col:18> 'unsigned long' <IntegralCast>
|   | | |   `-ImplicitCastExpr 0x13300b720 <col:18> 'int' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x13300b618 <col:18> 'int' lvalue Var 0x133009e60 'keylen' 'int'
|   | | `-CallExpr 0x13300bb28 <line:25:3, col:37> 'void *'
|   | |   |-ImplicitCastExpr 0x13300bb10 <col:3> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x13300ba18 <col:3> 'void *(void *, const void *, unsigned long)' Function 0x13300b7c8 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | |   |-ImplicitCastExpr 0x13300bb78 <col:10> 'void *' <BitCast>
|   | |   | `-ImplicitCastExpr 0x13300bb60 <col:10> 'unsigned char *' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x13300ba38 <col:10> 'unsigned char *' lvalue Var 0x133009fc8 'key' 'unsigned char *'
|   | |   |-ImplicitCastExpr 0x13300bba8 <col:15> 'const void *' <BitCast>
|   | |   | `-ImplicitCastExpr 0x13300bb90 <col:15> 'char *' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x13300ba58 <col:15> 'char *' lvalue Var 0x132928dd0 'password' 'char *'
|   | |   `-ImplicitCastExpr 0x13300bbd8 <col:25> 'unsigned long' <IntegralCast>
|   | |     `-ImplicitCastExpr 0x13300bbc0 <col:25> 'int' <LValueToRValue>
|   | |       `-DeclRefExpr 0x13300ba78 <col:25> 'int' lvalue Var 0x132929088 'password_len' 'int'
|   | `-CompoundStmt 0x13300bcd0 <line:26:9, line:28:2>
|   |   `-BinaryOperator 0x13300bcb0 <line:27:3, col:25> 'unsigned char *' '='
|   |     |-DeclRefExpr 0x13300bc18 <col:3> 'unsigned char *' lvalue Var 0x133009fc8 'key' 'unsigned char *'
|   |     `-CStyleCastExpr 0x13300bc88 <col:9, col:25> 'unsigned char *' <BitCast>
|   |       `-ImplicitCastExpr 0x13300bc70 <col:25> 'char *' <LValueToRValue> part_of_explicit_cast
|   |         `-DeclRefExpr 0x13300bc38 <col:25> 'char *' lvalue Var 0x132928dd0 'password' 'char *'
|   |-BinaryOperator 0x13300be80 <line:30:2, col:47> 'int' contains-errors '='
|   | |-DeclRefExpr 0x13300bd18 <col:2> 'int' lvalue Var 0x133009c00 'max_iv_len' 'int'
|   | `-CallExpr 0x13300be58 <col:15, col:47> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x13300be18 <col:15> 'int ()' Function 0x13300bd60 'EVP_CIPHER_iv_length' 'int ()'
|   |   `-RecoveryExpr 0x13300be38 <col:36> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x13300d870 <line:31:2, line:33:2>
|   | |-BinaryOperator 0x13300bf90 <line:31:6, col:34> 'int' '&&'
|   | | |-BinaryOperator 0x13300bef8 <col:6, col:16> 'int' '<='
|   | | | |-ImplicitCastExpr 0x13300bee0 <col:6> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x13300bea0 <col:6> 'int' lvalue Var 0x132929108 'iv_len' 'int'
|   | | | `-IntegerLiteral 0x13300bec0 <col:16> 'int' 0
|   | | `-BinaryOperator 0x13300bf70 <col:21, col:34> 'int' '>'
|   | |   |-ImplicitCastExpr 0x13300bf58 <col:21> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x13300bf18 <col:21> 'int' lvalue Var 0x133009c00 'max_iv_len' 'int'
|   | |   `-IntegerLiteral 0x13300bf38 <col:34> 'int' 0
|   | `-CompoundStmt 0x13300d860 <col:37, line:33:2>
|   |-BinaryOperator 0x13300dc30 <line:36:2, col:55> 'int' contains-errors '='
|   | |-DeclRefExpr 0x13300da88 <col:2> 'int' lvalue Var 0x133009de0 'outlen' 'int'
|   | `-BinaryOperator 0x13300dc10 <col:11, col:55> '<dependent type>' contains-errors '+'
|   |   |-DeclRefExpr 0x13300daa8 <col:11> 'int' lvalue Var 0x132928f88 'data_len' 'int'
|   |   `-CallExpr 0x13300dbe8 <col:22, col:55> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x13300dba8 <col:22> 'int ()' Function 0x13300daf0 'EVP_CIPHER_block_size' 'int ()'
|   |     `-RecoveryExpr 0x13300dbc8 <col:44> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x13300dd60 <line:37:2, col:29> 'unsigned char *' '='
|   | |-DeclRefExpr 0x13300dc50 <col:2> 'unsigned char *' lvalue Var 0x133009f48 'outbuf' 'unsigned char *'
|   | `-ImplicitCastExpr 0x13300dd48 <col:11, col:29> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x13300dd20 <col:11, col:29> 'int'
|   |     |-ImplicitCastExpr 0x13300dd08 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13300dc70 <col:11> 'int ()' Function 0x13300a950 'emalloc' 'int ()'
|   |     `-BinaryOperator 0x13300dce8 <col:19, col:28> 'int' '+'
|   |       |-ImplicitCastExpr 0x13300dcd0 <col:19> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x13300dc90 <col:19> 'int' lvalue Var 0x133009de0 'outlen' 'int'
|   |       `-IntegerLiteral 0x13300dcb0 <col:28> 'int' 1
|   |-IfStmt 0x13300e060 <line:40:2, line:42:2>
|   | |-BinaryOperator 0x13300df10 <line:40:6, col:21> 'int' '>'
|   | | |-ImplicitCastExpr 0x13300dee0 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13300dea0 <col:6> 'int' lvalue Var 0x132929088 'password_len' 'int'
|   | | `-ImplicitCastExpr 0x13300def8 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13300dec0 <col:21> 'int' lvalue Var 0x133009e60 'keylen' 'int'
|   | `-CompoundStmt 0x13300e050 <col:29, line:42:2>
|   |-BinaryOperator 0x13300e460 <line:45:2, col:11> 'int' '='
|   | |-DeclRefExpr 0x13300e408 <col:2> 'int' lvalue Var 0x133009de0 'outlen' 'int'
|   | `-ImplicitCastExpr 0x13300e448 <col:11> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x13300e428 <col:11> 'int' lvalue Var 0x133009d60 'i' 'int'
|   |-IfStmt 0x13300f1d0 <line:46:2, line:62:2> has_else
|   | |-RecoveryExpr 0x13300e688 <line:46:6, col:67> '_Bool' contains-errors
|   | |-CompoundStmt 0x13300f100 <col:70, line:59:2>
|   | | |-CompoundAssignOperator 0x13300e700 <line:47:3, col:13> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | | | |-DeclRefExpr 0x13300e6a8 <col:3> 'int' lvalue Var 0x133009de0 'outlen' 'int'
|   | | | `-ImplicitCastExpr 0x13300e6e8 <col:13> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x13300e6c8 <col:13> 'int' lvalue Var 0x133009d60 'i' 'int'
|   | | `-IfStmt 0x13300f0d0 <line:48:3, line:58:3> has_else
|   | |   |-RecoveryExpr 0x13300e730 <line:48:7> '_Bool' contains-errors
|   | |   |-CompoundStmt 0x13300ea58 <col:19, line:51:3>
|   | |   | |-BinaryOperator 0x13300e818 <line:49:4, col:21> 'unsigned char' '='
|   | |   | | |-ArraySubscriptExpr 0x13300e7c0 <col:4, col:17> 'unsigned char' lvalue
|   | |   | | | |-ImplicitCastExpr 0x13300e790 <col:4> 'unsigned char *' <LValueToRValue>
|   | |   | | | | `-DeclRefExpr 0x13300e750 <col:4> 'unsigned char *' lvalue Var 0x133009f48 'outbuf' 'unsigned char *'
|   | |   | | | `-ImplicitCastExpr 0x13300e7a8 <col:11> 'int' <LValueToRValue>
|   | |   | | |   `-DeclRefExpr 0x13300e770 <col:11> 'int' lvalue Var 0x133009de0 'outlen' 'int'
|   | |   | | `-ImplicitCastExpr 0x13300e800 <col:21> 'unsigned char' <IntegralCast>
|   | |   | |   `-CharacterLiteral 0x13300e7e0 <col:21> 'int' 0
|   | |   | `-CallExpr 0x13300ea08 <line:50:4, col:44> 'int'
|   | |   |   |-ImplicitCastExpr 0x13300e9f0 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   | |   |   | `-DeclRefExpr 0x13300e918 <col:4> 'int ()' Function 0x13300e860 'RETVAL_STRINGL' 'int ()'
|   | |   |   |-CStyleCastExpr 0x13300e988 <col:19, col:27> 'char *' <BitCast>
|   | |   |   | `-ImplicitCastExpr 0x13300e970 <col:27> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
|   | |   |   |   `-DeclRefExpr 0x13300e938 <col:27> 'unsigned char *' lvalue Var 0x133009f48 'outbuf' 'unsigned char *'
|   | |   |   |-ImplicitCastExpr 0x13300ea40 <col:35> 'int' <LValueToRValue>
|   | |   |   | `-DeclRefExpr 0x13300e9b0 <col:35> 'int' lvalue Var 0x133009de0 'outlen' 'int'
|   | |   |   `-IntegerLiteral 0x13300e9d0 <col:43> 'int' 0
|   | |   `-CompoundStmt 0x13300f098 <line:51:10, line:58:3>
|   | |     |-DeclStmt 0x13300eaf8 <line:52:4, col:22>
|   | |     | `-VarDecl 0x13300ea90 <col:4, col:8> col:8 used base64_str_len 'int'
|   | |     |-DeclStmt 0x13300eb90 <line:53:4, col:20>
|   | |     | `-VarDecl 0x13300eb28 <col:4, col:10> col:10 used base64_str 'char *'
|   | |     |-BinaryOperator 0x13300ee00 <line:55:4, col:73> 'char *' '='
|   | |     | |-DeclRefExpr 0x13300eba8 <col:4> 'char *' lvalue Var 0x13300eb28 'base64_str' 'char *'
|   | |     | `-CStyleCastExpr 0x13300edd8 <col:17, col:73> 'char *' <IntegralToPointer>
|   | |     |   `-CallExpr 0x13300ed58 <col:24, col:73> 'int'
|   | |     |     |-ImplicitCastExpr 0x13300ed40 <col:24> 'int (*)()' <FunctionToPointerDecay>
|   | |     |     | `-DeclRefExpr 0x13300eca8 <col:24> 'int ()' Function 0x13300ebf0 'php_base64_encode' 'int ()'
|   | |     |     |-ImplicitCastExpr 0x13300ed90 <col:42> 'unsigned char *' <LValueToRValue>
|   | |     |     | `-DeclRefExpr 0x13300ecc8 <col:42> 'unsigned char *' lvalue Var 0x133009f48 'outbuf' 'unsigned char *'
|   | |     |     |-ImplicitCastExpr 0x13300eda8 <col:50> 'int' <LValueToRValue>
|   | |     |     | `-DeclRefExpr 0x13300ece8 <col:50> 'int' lvalue Var 0x133009de0 'outlen' 'int'
|   | |     |     `-UnaryOperator 0x13300ed28 <col:58, col:59> 'int *' prefix '&' cannot overflow
|   | |     |       `-DeclRefExpr 0x13300ed08 <col:59> 'int' lvalue Var 0x13300ea90 'base64_str_len' 'int'
|   | |     |-CallExpr 0x13300ef58 <line:56:4, col:16> 'int'
|   | |     | |-ImplicitCastExpr 0x13300ef40 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   | |     | | `-DeclRefExpr 0x13300ef00 <col:4> 'int ()' Function 0x13300ee48 'efree' 'int ()'
|   | |     | `-ImplicitCastExpr 0x13300ef80 <col:10> 'unsigned char *' <LValueToRValue>
|   | |     |   `-DeclRefExpr 0x13300ef20 <col:10> 'unsigned char *' lvalue Var 0x133009f48 'outbuf' 'unsigned char *'
|   | |     `-CallExpr 0x13300f030 <line:57:4, col:48> 'int'
|   | |       |-ImplicitCastExpr 0x13300f018 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x13300ef98 <col:4> 'int ()' Function 0x13300e860 'RETVAL_STRINGL' 'int ()'
|   | |       |-ImplicitCastExpr 0x13300f068 <col:19> 'char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x13300efb8 <col:19> 'char *' lvalue Var 0x13300eb28 'base64_str' 'char *'
|   | |       |-ImplicitCastExpr 0x13300f080 <col:31> 'int' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x13300efd8 <col:31> 'int' lvalue Var 0x13300ea90 'base64_str_len' 'int'
|   | |       `-IntegerLiteral 0x13300eff8 <col:47> 'int' 0
|   | `-CompoundStmt 0x13300f1b8 <line:59:9, line:62:2>
|   |   `-CallExpr 0x13300f178 <line:60:3, col:15> 'int'
|   |     |-ImplicitCastExpr 0x13300f160 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13300f120 <col:3> 'int ()' Function 0x13300ee48 'efree' 'int ()'
|   |     `-ImplicitCastExpr 0x13300f1a0 <col:9> 'unsigned char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x13300f140 <col:9> 'unsigned char *' lvalue Var 0x133009f48 'outbuf' 'unsigned char *'
|   |-IfStmt 0x13300f380 <line:63:2, line:65:2>
|   | |-BinaryOperator 0x13300f2b0 <line:63:6, col:29> 'int' '!='
|   | | |-ImplicitCastExpr 0x13300f298 <col:6> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13300f200 <col:6> 'unsigned char *' lvalue Var 0x133009fc8 'key' 'unsigned char *'
|   | | `-CStyleCastExpr 0x13300f270 <col:13, col:29> 'unsigned char *' <BitCast>
|   | |   `-ImplicitCastExpr 0x13300f258 <col:29> 'char *' <LValueToRValue> part_of_explicit_cast
|   | |     `-DeclRefExpr 0x13300f220 <col:29> 'char *' lvalue Var 0x132928dd0 'password' 'char *'
|   | `-CompoundStmt 0x13300f368 <col:39, line:65:2>
|   |   `-CallExpr 0x13300f328 <line:64:3, col:12> 'int'
|   |     |-ImplicitCastExpr 0x13300f310 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13300f2d0 <col:3> 'int ()' Function 0x13300ee48 'efree' 'int ()'
|   |     `-ImplicitCastExpr 0x13300f350 <col:9> 'unsigned char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x13300f2f0 <col:9> 'unsigned char *' lvalue Var 0x133009fc8 'key' 'unsigned char *'
|   `-IfStmt 0x13300f470 <line:66:2, line:68:2>
|     |-RecoveryExpr 0x13300f3a0 <line:66:6> '_Bool' contains-errors
|     `-CompoundStmt 0x13300f458 <col:15, line:68:2>
|       `-CallExpr 0x13300f418 <line:67:3, col:11> 'int'
|         |-ImplicitCastExpr 0x13300f400 <col:3> 'int (*)()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x13300f3c0 <col:3> 'int ()' Function 0x13300ee48 'efree' 'int ()'
|         `-ImplicitCastExpr 0x13300f440 <col:9> 'char *' <LValueToRValue>
|           `-DeclRefExpr 0x13300f3e0 <col:9> 'char *' lvalue Var 0x132928e50 'iv' 'char *'
|-FunctionDecl 0x13300b368 <line:24:3> col:3 implicit used memset 'void *(void *, int, unsigned long)' extern
| |-ParmVarDecl 0x13300b468 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x13300b4d0 <<invalid sloc>> <invalid sloc> 'int'
| |-ParmVarDecl 0x13300b538 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x13300b410 <<invalid sloc>> Implicit 900
`-FunctionDecl 0x13300b7c8 <line:25:3> col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x13300b8c8 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x13300b930 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x13300b998 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x13300b870 <<invalid sloc>> Implicit 882
