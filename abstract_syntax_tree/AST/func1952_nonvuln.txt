TranslationUnitDecl 0x157055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1570564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x157055bd0 '__int128'
|-TypedefDecl 0x157056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x157055bf0 'unsigned __int128'
|-TypedefDecl 0x15780be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15780bc00 'struct __NSConstantString_tag'
|   `-Record 0x157056580 '__NSConstantString_tag'
|-TypedefDecl 0x15780be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x157055d90 '__SVInt8_t'
|-TypedefDecl 0x15780bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x157055db0 '__SVInt16_t'
|-TypedefDecl 0x15780bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x157055dd0 '__SVInt32_t'
|-TypedefDecl 0x15780bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x157055df0 '__SVInt64_t'
|-TypedefDecl 0x15780c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x157055e10 '__SVUint8_t'
|-TypedefDecl 0x15780c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x157055e30 '__SVUint16_t'
|-TypedefDecl 0x15780c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x157055e50 '__SVUint32_t'
|-TypedefDecl 0x15780c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x157055e70 '__SVUint64_t'
|-TypedefDecl 0x15780c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x157055e90 '__SVFloat16_t'
|-TypedefDecl 0x15780c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x157055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15780c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x157055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15780c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x157055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15780c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x157055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15780c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x157055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15780c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x157055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15780c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x157055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15780c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x157055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15780c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x157055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15780c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x157055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15780c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x157055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15780c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x157056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15780c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x157056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15780c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x157056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15780c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x157056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15780c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x157056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15780c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1570560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15780c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1570560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15780c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1570560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15780c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x157056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15780ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x157056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15780cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x157056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15780cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x157056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15780cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x157056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15780d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1570561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15780d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1570561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15780d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1570561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15780d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x157056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15780d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x157056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15780d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x157056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15780d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x157056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15780d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x157056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15780d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1570562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15780d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1570562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15780d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1570562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15780d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x157056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15780d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x157056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15780d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x157056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15780d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x157056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15780da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x157056390 '__SVBool_t'
|-TypedefDecl 0x15780da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1570563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15780dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1570563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15780db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1570563f0 '__SVCount_t'
|-TypedefDecl 0x15780dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15780dbb0 'char *'
|   `-BuiltinType 0x1570556b0 'char'
|-TypedefDecl 0x15780dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15780dbb0 'char *'
|   `-BuiltinType 0x1570556b0 'char'
|-FunctionDecl 0x15780dfa8 <dataset_diviso_filec/func1952_nonvuln.c:1:1, line:58:1> line:1:5 invalid journal_remote_add_source 'int (int *, int, char *, int)'
| |-ParmVarDecl 0x15780dd28 <col:31, col:45> col:45 invalid s 'int *'
| |-ParmVarDecl 0x15780dda8 <col:48, col:52> col:52 used fd 'int'
| |-ParmVarDecl 0x15780de28 <col:56, col:62> col:62 used name 'char *'
| |-ParmVarDecl 0x15780dea8 <col:68, col:73> col:73 invalid own_name 'int'
| `-CompoundStmt 0x15782b0f0 <col:83, line:58:1>
|   |-DeclStmt 0x15780e120 <line:3:9, col:14>
|   | `-VarDecl 0x15780e0b8 <col:9, col:13> col:13 used r 'int'
|   |-CallExpr 0x15780e2d0 <line:7:9, col:17> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15780e290 <col:9> 'int ()' Function 0x15780e1d8 'assert' 'int ()'
|   | `-RecoveryExpr 0x15780e2b0 <col:16> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x15780e3d8 <line:8:9, col:23> 'int'
|   | |-ImplicitCastExpr 0x15780e3c0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x15780e2f8 <col:9> 'int ()' Function 0x15780e1d8 'assert' 'int ()'
|   | `-BinaryOperator 0x15780e370 <col:16, col:22> 'int' '>='
|   |   |-ImplicitCastExpr 0x15780e358 <col:16> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x15780e318 <col:16> 'int' lvalue ParmVar 0x15780dda8 'fd' 'int'
|   |   `-IntegerLiteral 0x15780e338 <col:22> 'int' 0
|   |-CallExpr 0x157827858 <line:9:9, col:20> 'int'
|   | |-ImplicitCastExpr 0x157827840 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x157827800 <col:9> 'int ()' Function 0x15780e1d8 'assert' 'int ()'
|   | `-ImplicitCastExpr 0x157827880 <col:16> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x157827820 <col:16> 'char *' lvalue ParmVar 0x15780de28 'name' 'char *'
|   |-IfStmt 0x1578281d8 <line:11:9, line:15:9>
|   | |-UnaryOperator 0x1578278d0 <line:11:13, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1578278b8 <col:14> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x157827898 <col:14> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x1578281b8 <col:24, line:15:9>
|   |   |-BinaryOperator 0x157827fe0 <line:12:17, col:35> 'char *' '='
|   |   | |-DeclRefExpr 0x1578278e8 <col:17> 'char *' lvalue ParmVar 0x15780de28 'name' 'char *'
|   |   | `-CallExpr 0x157827f88 <col:24, col:35> 'char *'
|   |   |   |-ImplicitCastExpr 0x157827f70 <col:24> 'char *(*)(const char *)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x157827ee0 <col:24> 'char *(const char *)' Function 0x157827d70 'strdup' 'char *(const char *)'
|   |   |   `-ImplicitCastExpr 0x157827fc8 <col:31> 'const char *' <NoOp>
|   |   |     `-ImplicitCastExpr 0x157827fb0 <col:31> 'char *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x157827f00 <col:31> 'char *' lvalue ParmVar 0x15780de28 'name' 'char *'
|   |   `-IfStmt 0x157828198 <line:13:17, line:14:40>
|   |     |-UnaryOperator 0x157828038 <line:13:21, col:22> 'int' prefix '!' cannot overflow
|   |     | `-ImplicitCastExpr 0x157828020 <col:22> 'char *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x157828000 <col:22> 'char *' lvalue ParmVar 0x15780de28 'name' 'char *'
|   |     `-ReturnStmt 0x157828188 <line:14:25, col:40>
|   |       `-CallExpr 0x157828168 <col:32, col:40> 'int'
|   |         `-ImplicitCastExpr 0x157828150 <col:32> 'int (*)()' <FunctionToPointerDecay>
|   |           `-DeclRefExpr 0x157828130 <col:32> 'int ()' Function 0x157828078 'log_oom' 'int ()'
|   |-BinaryOperator 0x157828480 <line:17:9, col:51> 'int' contains-errors '='
|   | |-DeclRefExpr 0x1578281f8 <col:9> 'int' lvalue Var 0x15780e0b8 'r' 'int'
|   | `-CallExpr 0x157828440 <col:13, col:51> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x1578282f8 <col:13> 'int ()' Function 0x157828240 'get_source_for_fd' 'int ()'
|   |   |-RecoveryExpr 0x157828318 <col:31> '<dependent type>' contains-errors lvalue
|   |   |-DeclRefExpr 0x157828338 <col:34> 'int' lvalue ParmVar 0x15780dda8 'fd' 'int'
|   |   |-DeclRefExpr 0x157828358 <col:38> 'char *' lvalue ParmVar 0x15780de28 'name' 'char *'
|   |   `-UnaryOperator 0x157828428 <col:44, col:45> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-RecoveryExpr 0x157828408 <col:45> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x157829ce0 <line:18:9, line:23:9>
|   | |-BinaryOperator 0x1578284f8 <line:18:13, col:17> 'int' '<'
|   | | |-ImplicitCastExpr 0x1578284e0 <col:13> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1578284a0 <col:13> 'int' lvalue Var 0x15780e0b8 'r' 'int'
|   | | `-IntegerLiteral 0x1578284c0 <col:17> 'int' 0
|   | `-CompoundStmt 0x157829cb8 <col:20, line:23:9>
|   |   |-CallExpr 0x1578286f8 <line:19:17, line:20:41> 'int'
|   |   | |-ImplicitCastExpr 0x1578286e0 <line:19:17> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1578285f8 <col:17> 'int ()' Function 0x157828540 'log_error_errno' 'int ()'
|   |   | |-ImplicitCastExpr 0x157828738 <col:33> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x157828618 <col:33> 'int' lvalue Var 0x15780e0b8 'r' 'int'
|   |   | |-ImplicitCastExpr 0x157828750 <col:36> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x157828680 <col:36> 'char[4]' lvalue "STR"
|   |   | |-ImplicitCastExpr 0x157828768 <line:20:33> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1578286a0 <col:33> 'int' lvalue ParmVar 0x15780dda8 'fd' 'int'
|   |   | `-ImplicitCastExpr 0x157828780 <col:37> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1578286c0 <col:37> 'char *' lvalue ParmVar 0x15780de28 'name' 'char *'
|   |   |-CallExpr 0x157829c18 <line:21:17, col:26> 'void'
|   |   | |-ImplicitCastExpr 0x157829c00 <col:17> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x157829b70 <col:17> 'void (void *)' Function 0x157829a00 'free' 'void (void *)'
|   |   | `-ImplicitCastExpr 0x157829c58 <col:22> 'void *' <BitCast>
|   |   |   `-ImplicitCastExpr 0x157829c40 <col:22> 'char *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x157829b90 <col:22> 'char *' lvalue ParmVar 0x15780de28 'name' 'char *'
|   |   `-ReturnStmt 0x157829ca8 <line:22:17, col:24>
|   |     `-ImplicitCastExpr 0x157829c90 <col:24> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x157829c70 <col:24> 'int' lvalue Var 0x15780e0b8 'r' 'int'
|   |-BinaryOperator 0x15782a1f8 <line:25:9, line:27:62> 'int' contains-errors '='
|   | |-DeclRefExpr 0x157829d00 <line:25:9> 'int' lvalue Var 0x15780e0b8 'r' 'int'
|   | `-CallExpr 0x15782a1a8 <col:13, line:27:62> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x157829e00 <line:25:13> 'int ()' Function 0x157829d48 'sd_event_add_io' 'int ()'
|   |   |-CXXDependentScopeMemberExpr 0x157829e40 <col:29, col:32> '<dependent type>' contains-errors lvalue ->events
|   |   | `-RecoveryExpr 0x157829e20 <col:29> '<dependent type>' contains-errors lvalue
|   |   |-UnaryOperator 0x15782a0b0 <col:40, col:49> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | `-CXXDependentScopeMemberExpr 0x15782a068 <col:41, col:49> '<dependent type>' contains-errors lvalue ->event
|   |   |   `-RecoveryExpr 0x15782a048 <col:41> '<dependent type>' contains-errors lvalue
|   |   |-DeclRefExpr 0x157829f00 <line:26:29> 'int' lvalue ParmVar 0x15780dda8 'fd' 'int'
|   |   |-BinaryOperator 0x15782a148 <col:33, col:52> '<dependent type>' contains-errors '|'
|   |   | |-BinaryOperator 0x15782a108 <col:33, col:41> '<dependent type>' contains-errors '|'
|   |   | | |-RecoveryExpr 0x15782a0c8 <col:33> '<dependent type>' contains-errors lvalue
|   |   | | `-RecoveryExpr 0x15782a0e8 <col:41> '<dependent type>' contains-errors lvalue
|   |   | `-RecoveryExpr 0x15782a128 <col:52> '<dependent type>' contains-errors lvalue
|   |   |-RecoveryExpr 0x15782a168 <line:27:29> '<dependent type>' contains-errors lvalue
|   |   `-RecoveryExpr 0x15782a188 <col:56> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x15782a950 <line:28:9, line:40:9> has_else
|   | |-BinaryOperator 0x15782a270 <line:28:13, col:18> 'int' '=='
|   | | |-ImplicitCastExpr 0x15782a258 <col:13> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15782a218 <col:13> 'int' lvalue Var 0x15780e0b8 'r' 'int'
|   | | `-IntegerLiteral 0x15782a238 <col:18> 'int' 0
|   | |-CompoundStmt 0x15782a590 <col:21, line:34:9>
|   | `-IfStmt 0x15782a930 <col:16, line:40:9>
|   |   |-RecoveryExpr 0x15782a5c0 <line:34:20, col:26> '_Bool' contains-errors
|   |   `-CompoundStmt 0x15782a918 <col:33, line:40:9>
|   |     `-CallExpr 0x15782a758 <line:35:17, col:42> 'int'
|   |       |-ImplicitCastExpr 0x15782a740 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x15782a6c0 <col:17> 'int ()' Function 0x15782a608 'log_debug' 'int ()'
|   |       |-ImplicitCastExpr 0x15782a790 <col:27> 'char *' <ArrayToPointerDecay>
|   |       | `-StringLiteral 0x15782a6e0 <col:27> 'char[4]' lvalue "STR"
|   |       |-ImplicitCastExpr 0x15782a7a8 <col:34> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x15782a700 <col:34> 'int' lvalue ParmVar 0x15780dda8 'fd' 'int'
|   |       `-ImplicitCastExpr 0x15782a7c0 <col:38> 'char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x15782a720 <col:38> 'char *' lvalue ParmVar 0x15780de28 'name' 'char *'
|   |-IfStmt 0x15782aba0 <line:41:9, line:45:9>
|   | |-BinaryOperator 0x15782a9d8 <line:41:13, col:17> 'int' '<'
|   | | |-ImplicitCastExpr 0x15782a9c0 <col:13> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15782a980 <col:13> 'int' lvalue Var 0x15780e0b8 'r' 'int'
|   | | `-IntegerLiteral 0x15782a9a0 <col:17> 'int' 0
|   | `-CompoundStmt 0x15782ab80 <col:20, line:45:9>
|   |   |-CallExpr 0x15782aa98 <line:42:17, line:43:35> 'int'
|   |   | |-ImplicitCastExpr 0x15782aa80 <line:42:17> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x15782aa00 <col:17> 'int ()' Function 0x157828540 'log_error_errno' 'int ()'
|   |   | |-ImplicitCastExpr 0x15782aad0 <col:33> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x15782aa20 <col:33> 'int' lvalue Var 0x15780e0b8 'r' 'int'
|   |   | |-ImplicitCastExpr 0x15782aae8 <col:36> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x15782aa40 <col:36> 'char[4]' lvalue "STR"
|   |   | `-ImplicitCastExpr 0x15782ab00 <line:43:33> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x15782aa60 <col:33> 'int' lvalue ParmVar 0x15780dda8 'fd' 'int'
|   |   `-GotoStmt 0x15782ab68 <line:44:17, col:22> 'error' 0x15782ab18
|   |-IfStmt 0x15782aec8 <line:48:9, line:51:9>
|   | |-BinaryOperator 0x15782ad58 <line:48:13, col:17> 'int' '<'
|   | | |-ImplicitCastExpr 0x15782ad40 <col:13> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15782ad00 <col:13> 'int' lvalue Var 0x15780e0b8 'r' 'int'
|   | | `-IntegerLiteral 0x15782ad20 <col:17> 'int' 0
|   | `-CompoundStmt 0x15782aea8 <col:20, line:51:9>
|   |   |-CallExpr 0x15782ae10 <line:49:17, col:45> 'int'
|   |   | |-ImplicitCastExpr 0x15782adf8 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x15782ad78 <col:17> 'int ()' Function 0x157828540 'log_error_errno' 'int ()'
|   |   | |-ImplicitCastExpr 0x15782ae48 <col:33> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x15782ad98 <col:33> 'int' lvalue Var 0x15780e0b8 'r' 'int'
|   |   | |-ImplicitCastExpr 0x15782ae60 <col:36> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x15782adb8 <col:36> 'char[4]' lvalue "STR"
|   |   | `-ImplicitCastExpr 0x15782ae78 <col:43> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x15782add8 <col:43> 'int' lvalue ParmVar 0x15780dda8 'fd' 'int'
|   |   `-GotoStmt 0x15782ae90 <line:50:17, col:22> 'error' 0x15782ab18
|   |-ReturnStmt 0x15782af08 <line:53:9, col:16>
|   | `-IntegerLiteral 0x15782aee8 <col:16> 'int' 1
|   |-LabelStmt 0x15782b088 <line:55:2, line:56:28> 'error'
|   | `-CallExpr 0x15782b058 <col:9, col:28> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x15782aff8 <col:9> 'int ()' Function 0x15782af40 'remove_source' 'int ()'
|   |   |-RecoveryExpr 0x15782b018 <col:23> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x15782b038 <col:26> 'int' lvalue ParmVar 0x15780dda8 'fd' 'int'
|   `-ReturnStmt 0x15782b0e0 <line:57:9, col:16>
|     `-ImplicitCastExpr 0x15782b0c8 <col:16> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x15782b0a8 <col:16> 'int' lvalue Var 0x15780e0b8 'r' 'int'
|-FunctionDecl 0x157827d70 <line:12:24> col:24 implicit used strdup 'char *(const char *)' extern
| |-ParmVarDecl 0x157827e70 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x157827e18 <<invalid sloc>> Implicit 950
`-FunctionDecl 0x157829a00 <line:21:17> col:17 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x157829b00 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x157829aa8 <<invalid sloc>> Implicit 873
