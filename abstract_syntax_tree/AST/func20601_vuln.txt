TranslationUnitDecl 0x12301da08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12301e8b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12301dfd0 '__int128'
|-TypedefDecl 0x12301e928 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12301dff0 'unsigned __int128'
|-TypedefDecl 0x12500de30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12500dc00 'struct __NSConstantString_tag'
|   `-Record 0x12301e980 '__NSConstantString_tag'
|-TypedefDecl 0x12500de98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12301e190 '__SVInt8_t'
|-TypedefDecl 0x12500df00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12301e1b0 '__SVInt16_t'
|-TypedefDecl 0x12500df68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12301e1d0 '__SVInt32_t'
|-TypedefDecl 0x12500dfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12301e1f0 '__SVInt64_t'
|-TypedefDecl 0x12500e038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12301e210 '__SVUint8_t'
|-TypedefDecl 0x12500e0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12301e230 '__SVUint16_t'
|-TypedefDecl 0x12500e108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12301e250 '__SVUint32_t'
|-TypedefDecl 0x12500e170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12301e270 '__SVUint64_t'
|-TypedefDecl 0x12500e1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12301e290 '__SVFloat16_t'
|-TypedefDecl 0x12500e240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12301e2b0 '__SVFloat32_t'
|-TypedefDecl 0x12500e2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12301e2d0 '__SVFloat64_t'
|-TypedefDecl 0x12500e310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12301e2f0 '__SVBfloat16_t'
|-TypedefDecl 0x12500e378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12301e310 '__clang_svint8x2_t'
|-TypedefDecl 0x12500e3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12301e330 '__clang_svint16x2_t'
|-TypedefDecl 0x12500e448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12301e350 '__clang_svint32x2_t'
|-TypedefDecl 0x12500e4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12301e370 '__clang_svint64x2_t'
|-TypedefDecl 0x12500e518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12301e390 '__clang_svuint8x2_t'
|-TypedefDecl 0x12500e580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12301e3b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12500e5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12301e3d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12500e650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12301e3f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12500e6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12301e410 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12500e720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12301e430 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12500e788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12301e450 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12500e7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12301e470 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12500e858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12301e490 '__clang_svint8x3_t'
|-TypedefDecl 0x12500e8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12301e4b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12500e928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12301e4d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12500e990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12301e4f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12500e9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12301e510 '__clang_svuint8x3_t'
|-TypedefDecl 0x12500ea60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12301e530 '__clang_svuint16x3_t'
|-TypedefDecl 0x12500eac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12301e550 '__clang_svuint32x3_t'
|-TypedefDecl 0x12500eb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12301e570 '__clang_svuint64x3_t'
|-TypedefDecl 0x12500eb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12301e590 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12500ec00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12301e5b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12500ec68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12301e5d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12500ecd0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12301e5f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12500ed38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12301e610 '__clang_svint8x4_t'
|-TypedefDecl 0x12500eda0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12301e630 '__clang_svint16x4_t'
|-TypedefDecl 0x12500ee08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12301e650 '__clang_svint32x4_t'
|-TypedefDecl 0x12500ee70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12301e670 '__clang_svint64x4_t'
|-TypedefDecl 0x12500eed8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12301e690 '__clang_svuint8x4_t'
|-TypedefDecl 0x12500ef40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12301e6b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12500efa8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12301e6d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12500f010 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12301e6f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12500f078 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12301e710 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12500f0e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12301e730 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12500f148 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12301e750 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12500f1b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12301e770 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12500f218 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12301e790 '__SVBool_t'
|-TypedefDecl 0x12500f280 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12301e7b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12500f2e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12301e7d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12500f350 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12301e7f0 '__SVCount_t'
|-TypedefDecl 0x12500f3f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12500f3b0 'char *'
|   `-BuiltinType 0x12301dab0 'char'
|-TypedefDecl 0x12500f468 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12500f3b0 'char *'
|   `-BuiltinType 0x12301dab0 'char'
|-FunctionDecl 0x12500f688 <dataset_diviso_filec/func20601_vuln.c:1:1, line:20:1> line:1:13 invalid qcow_check_config 'int (const char *, char **)' static
| |-ParmVarDecl 0x12500f4f0 <col:31, col:43> col:43 used cfgstring 'const char *'
| |-ParmVarDecl 0x12500f5a8 <col:54, col:61> col:61 used reason 'char **'
| `-CompoundStmt 0x1250292e0 <line:2:1, line:20:1>
|   |-DeclStmt 0x12500f7c0 <line:3:2, col:12>
|   | `-VarDecl 0x12500f758 <col:2, col:8> col:8 used path 'char *'
|   |-BinaryOperator 0x125028740 <line:5:2, col:30> 'char *' '='
|   | |-DeclRefExpr 0x12500f7d8 <col:2> 'char *' lvalue Var 0x12500f758 'path' 'char *'
|   | `-CallExpr 0x1250286f8 <col:9, col:30> 'char *'
|   |   |-ImplicitCastExpr 0x1250286e0 <col:9> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x125028640 <col:9> 'char *(const char *, int)' Function 0x125028460 'strchr' 'char *(const char *, int)'
|   |   |-ImplicitCastExpr 0x125028728 <col:16> 'const char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x125028660 <col:16> 'const char *' lvalue ParmVar 0x12500f4f0 'cfgstring' 'const char *'
|   |   `-CharacterLiteral 0x125028680 <col:27> 'int' 47
|   |-IfStmt 0x125028c98 <line:6:2, line:10:2>
|   | |-UnaryOperator 0x125028798 <line:6:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x125028780 <col:7> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x125028760 <col:7> 'char *' lvalue Var 0x12500f758 'path' 'char *'
|   | `-CompoundStmt 0x125028c80 <col:13, line:10:2>
|   |   `-IfStmt 0x125028c48 <line:7:3, line:8:14>
|   |     |-BinaryOperator 0x125028b00 <line:7:7, col:35> 'int' '=='
|   |     | |-CallExpr 0x125028a68 <col:7, col:29> 'int'
|   |     | | |-ImplicitCastExpr 0x125028a50 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |     | | | `-DeclRefExpr 0x125028978 <col:7> 'int ()' Function 0x125028858 'asprintf' 'int ()'
|   |     | | |-ImplicitCastExpr 0x125028a98 <col:16> 'char **' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x125028998 <col:16> 'char **' lvalue ParmVar 0x12500f5a8 'reason' 'char **'
|   |     | | `-ImplicitCastExpr 0x125028ab0 <col:24> 'char *' <ArrayToPointerDecay>
|   |     | |   `-StringLiteral 0x125028a00 <col:24> 'char[4]' lvalue "STR"
|   |     | `-UnaryOperator 0x125028ae8 <col:34, col:35> 'int' prefix '-'
|   |     |   `-IntegerLiteral 0x125028ac8 <col:35> 'int' 1
|   |     `-BinaryOperator 0x125028c28 <line:8:4, col:14> 'char *' contains-errors '='
|   |       |-UnaryOperator 0x125028bf0 <col:4, col:5> 'char *' lvalue prefix '*' cannot overflow
|   |       | `-ImplicitCastExpr 0x125028bd8 <col:5> 'char **' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x125028b20 <col:5> 'char **' lvalue ParmVar 0x12500f5a8 'reason' 'char **'
|   |       `-RecoveryExpr 0x125028c08 <col:14> '<dependent type>' contains-errors lvalue
|   |-CompoundAssignOperator 0x125028cf8 <line:11:2, col:10> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   | |-DeclRefExpr 0x125028cb8 <col:2> 'char *' lvalue Var 0x12500f758 'path' 'char *'
|   | `-IntegerLiteral 0x125028cd8 <col:10> 'int' 1
|   |-IfStmt 0x125029278 <line:13:2, line:17:2>
|   | |-BinaryOperator 0x125028fb0 <line:13:6, col:34> 'int' contains-errors '=='
|   | | |-CallExpr 0x125028f80 <col:6, col:28> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x125028e08 <col:6> 'int ()' Function 0x125028d50 'access' 'int ()'
|   | | | |-DeclRefExpr 0x125028e28 <col:13> 'char *' lvalue Var 0x12500f758 'path' 'char *'
|   | | | `-BinaryOperator 0x125028f60 <col:19, col:24> '<dependent type>' contains-errors '|'
|   | | |   |-RecoveryExpr 0x125028f20 <col:19> '<dependent type>' contains-errors lvalue
|   | | |   `-RecoveryExpr 0x125028f40 <col:24> '<dependent type>' contains-errors lvalue
|   | | `-UnaryOperator 0x125028ee8 <col:33, col:34> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x125028ec8 <col:34> 'int' 1
|   | `-CompoundStmt 0x125029260 <col:37, line:17:2>
|   |   `-IfStmt 0x125029228 <line:14:3, line:15:14>
|   |     |-BinaryOperator 0x1250290e0 <line:14:7, col:35> 'int' '=='
|   |     | |-CallExpr 0x125029048 <col:7, col:29> 'int'
|   |     | | |-ImplicitCastExpr 0x125029030 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |     | | | `-DeclRefExpr 0x125028fd0 <col:7> 'int ()' Function 0x125028858 'asprintf' 'int ()'
|   |     | | |-ImplicitCastExpr 0x125029078 <col:16> 'char **' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x125028ff0 <col:16> 'char **' lvalue ParmVar 0x12500f5a8 'reason' 'char **'
|   |     | | `-ImplicitCastExpr 0x125029090 <col:24> 'char *' <ArrayToPointerDecay>
|   |     | |   `-StringLiteral 0x125029010 <col:24> 'char[4]' lvalue "STR"
|   |     | `-UnaryOperator 0x1250290c8 <col:34, col:35> 'int' prefix '-'
|   |     |   `-IntegerLiteral 0x1250290a8 <col:35> 'int' 1
|   |     `-BinaryOperator 0x125029208 <line:15:4, col:14> 'char *' contains-errors '='
|   |       |-UnaryOperator 0x1250291d0 <col:4, col:5> 'char *' lvalue prefix '*' cannot overflow
|   |       | `-ImplicitCastExpr 0x1250291b8 <col:5> 'char **' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x125029100 <col:5> 'char **' lvalue ParmVar 0x12500f5a8 'reason' 'char **'
|   |       `-RecoveryExpr 0x1250291e8 <col:14> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x1250292d0 <line:19:2, col:9>
|     `-RecoveryExpr 0x1250292b0 <col:9> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x125028460 <line:5:9> col:9 implicit used strchr 'char *(const char *, int)' extern
  |-ParmVarDecl 0x125028560 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x1250285c8 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x125028508 <<invalid sloc>> Implicit 893
