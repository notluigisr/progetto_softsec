TranslationUnitDecl 0x151855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1518564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x151855bd0 '__int128'
|-TypedefDecl 0x151856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x151855bf0 'unsigned __int128'
|-TypedefDecl 0x151926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x151926000 'struct __NSConstantString_tag'
|   `-Record 0x151856580 '__NSConstantString_tag'
|-TypedefDecl 0x151926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x151855d90 '__SVInt8_t'
|-TypedefDecl 0x151926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x151855db0 '__SVInt16_t'
|-TypedefDecl 0x151926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x151855dd0 '__SVInt32_t'
|-TypedefDecl 0x1519263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x151855df0 '__SVInt64_t'
|-TypedefDecl 0x151926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x151855e10 '__SVUint8_t'
|-TypedefDecl 0x1519264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x151855e30 '__SVUint16_t'
|-TypedefDecl 0x151926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x151855e50 '__SVUint32_t'
|-TypedefDecl 0x151926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x151855e70 '__SVUint64_t'
|-TypedefDecl 0x1519265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x151855e90 '__SVFloat16_t'
|-TypedefDecl 0x151926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x151855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1519266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x151855ed0 '__SVFloat64_t'
|-TypedefDecl 0x151926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x151855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x151926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x151855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1519267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x151855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x151926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x151855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1519268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x151855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x151926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x151855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x151926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x151855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1519269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x151855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x151926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x151855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x151926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x151856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x151926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x151856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x151926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x151856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x151926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x151856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x151926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x151856090 '__clang_svint8x3_t'
|-TypedefDecl 0x151926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1518560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x151926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1518560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x151926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1518560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x151926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x151856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x151926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x151856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x151926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x151856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x151926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x151856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x151926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x151856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x151927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1518561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x151927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1518561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1519278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1518561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x151927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x151856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1519279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x151856230 '__clang_svint16x4_t'
|-TypedefDecl 0x151927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x151856250 '__clang_svint32x4_t'
|-TypedefDecl 0x151927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x151856270 '__clang_svint64x4_t'
|-TypedefDecl 0x151927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x151856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x151927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1518562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x151927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1518562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x151927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1518562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x151927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x151856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x151927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x151856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x151927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x151856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x151927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x151856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x151927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x151856390 '__SVBool_t'
|-TypedefDecl 0x151927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1518563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x151927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1518563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x151927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1518563f0 '__SVCount_t'
|-TypedefDecl 0x151927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x151927fb0 'char *'
|   `-BuiltinType 0x1518556b0 'char'
|-TypedefDecl 0x151928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x151927fb0 'char *'
|   `-BuiltinType 0x1518556b0 'char'
|-FunctionDecl 0x1519281a8 <dataset_diviso_filec/func12659_nonvuln.c:1:1, line:39:1> line:1:1 Pluralise 'int (char *)'
| |-ParmVarDecl 0x1519280d8 <line:2:5, col:20> col:20 used string 'char *' register
| `-CompoundStmt 0x151943bc0 <line:3:1, line:39:1>
|   |-DeclStmt 0x151928320 <line:4:5, col:24>
|   | `-VarDecl 0x1519282b8 <col:5, col:18> col:18 used length 'int' register
|   |-DeclStmt 0x1519283e0 <line:5:5, col:33>
|   | `-VarDecl 0x151928378 <col:5, col:17> col:17 invalid area 'char' static
|   |-BinaryOperator 0x151940d18 <line:6:5, col:27> 'int' '='
|   | |-DeclRefExpr 0x1519283f8 <col:5> 'int' lvalue Var 0x1519282b8 'length' 'int'
|   | `-ImplicitCastExpr 0x151940d00 <col:14, col:27> 'int' <IntegralCast>
|   |   `-CallExpr 0x151940ca8 <col:14, col:27> 'unsigned long'
|   |     |-ImplicitCastExpr 0x151940c90 <col:14> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x151940c00 <col:14> 'unsigned long (const char *)' Function 0x151940a90 'strlen' 'unsigned long (const char *)'
|   |     `-ImplicitCastExpr 0x151940ce8 <col:21> 'const char *' <NoOp>
|   |       `-ImplicitCastExpr 0x151940cd0 <col:21> 'char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x151940c20 <col:21> 'char *' lvalue ParmVar 0x1519280d8 'string' 'char *'
|   |-CallExpr 0x151940ff0 <line:7:5, col:24> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x151940f60 <col:5> 'char *(char *, const char *)' Function 0x151940d80 'strcpy' 'char *(char *, const char *)'
|   | |-RecoveryExpr 0x151940f80 <col:12> '<dependent type>' contains-errors lvalue
|   | `-DeclRefExpr 0x151940fa0 <col:18> 'char *' lvalue ParmVar 0x1519280d8 'string' 'char *'
|   |-IfStmt 0x151943b40 <line:9:5, line:36:5> has_else
|   | |-BinaryOperator 0x1519416b0 <line:9:9, line:13:23> 'int' '||'
|   | | |-BinaryOperator 0x1519415a0 <line:9:9, line:12:23> 'int' '||'
|   | | | |-BinaryOperator 0x151941490 <line:9:9, line:11:23> 'int' '||'
|   | | | | |-BinaryOperator 0x151941380 <line:9:9, line:10:23> 'int' '||'
|   | | | | | |-UnaryOperator 0x151941278 <line:9:9, col:30> 'int' prefix '!' cannot overflow
|   | | | | | | `-CallExpr 0x151941218 <col:10, col:30> 'int'
|   | | | | | |   |-ImplicitCastExpr 0x151941200 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   | | | | | |   | `-DeclRefExpr 0x151941130 <col:10> 'int ()' Function 0x151941078 'Suffix' 'int ()'
|   | | | | | |   |-ImplicitCastExpr 0x151941248 <col:17> 'char *' <LValueToRValue>
|   | | | | | |   | `-DeclRefExpr 0x151941150 <col:17> 'char *' lvalue ParmVar 0x1519280d8 'string' 'char *'
|   | | | | | |   `-ImplicitCastExpr 0x151941260 <col:25> 'char *' <ArrayToPointerDecay>
|   | | | | | |     `-StringLiteral 0x1519411b0 <col:25> 'char[4]' lvalue "STR"
|   | | | | | `-UnaryOperator 0x151941368 <line:10:2, col:23> 'int' prefix '!' cannot overflow
|   | | | | |   `-CallExpr 0x151941308 <col:3, col:23> 'int'
|   | | | | |     |-ImplicitCastExpr 0x1519412f0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | | | |     | `-DeclRefExpr 0x151941290 <col:3> 'int ()' Function 0x151941078 'Suffix' 'int ()'
|   | | | | |     |-ImplicitCastExpr 0x151941338 <col:10> 'char *' <LValueToRValue>
|   | | | | |     | `-DeclRefExpr 0x1519412b0 <col:10> 'char *' lvalue ParmVar 0x1519280d8 'string' 'char *'
|   | | | | |     `-ImplicitCastExpr 0x151941350 <col:18> 'char *' <ArrayToPointerDecay>
|   | | | | |       `-StringLiteral 0x1519412d0 <col:18> 'char[4]' lvalue "STR"
|   | | | | `-UnaryOperator 0x151941478 <line:11:2, col:23> 'int' prefix '!' cannot overflow
|   | | | |   `-CallExpr 0x151941418 <col:3, col:23> 'int'
|   | | | |     |-ImplicitCastExpr 0x151941400 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | | |     | `-DeclRefExpr 0x1519413a0 <col:3> 'int ()' Function 0x151941078 'Suffix' 'int ()'
|   | | | |     |-ImplicitCastExpr 0x151941448 <col:10> 'char *' <LValueToRValue>
|   | | | |     | `-DeclRefExpr 0x1519413c0 <col:10> 'char *' lvalue ParmVar 0x1519280d8 'string' 'char *'
|   | | | |     `-ImplicitCastExpr 0x151941460 <col:18> 'char *' <ArrayToPointerDecay>
|   | | | |       `-StringLiteral 0x1519413e0 <col:18> 'char[4]' lvalue "STR"
|   | | | `-UnaryOperator 0x151941588 <line:12:2, col:23> 'int' prefix '!' cannot overflow
|   | | |   `-CallExpr 0x151941528 <col:3, col:23> 'int'
|   | | |     |-ImplicitCastExpr 0x151941510 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | |     | `-DeclRefExpr 0x1519414b0 <col:3> 'int ()' Function 0x151941078 'Suffix' 'int ()'
|   | | |     |-ImplicitCastExpr 0x151941558 <col:10> 'char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x1519414d0 <col:10> 'char *' lvalue ParmVar 0x1519280d8 'string' 'char *'
|   | | |     `-ImplicitCastExpr 0x151941570 <col:18> 'char *' <ArrayToPointerDecay>
|   | | |       `-StringLiteral 0x1519414f0 <col:18> 'char[4]' lvalue "STR"
|   | | `-UnaryOperator 0x151941698 <line:13:2, col:23> 'int' prefix '!' cannot overflow
|   | |   `-CallExpr 0x151941638 <col:3, col:23> 'int'
|   | |     |-ImplicitCastExpr 0x151941620 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | |     | `-DeclRefExpr 0x1519415c0 <col:3> 'int ()' Function 0x151941078 'Suffix' 'int ()'
|   | |     |-ImplicitCastExpr 0x151941668 <col:10> 'char *' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x1519415e0 <col:10> 'char *' lvalue ParmVar 0x1519280d8 'string' 'char *'
|   | |     `-ImplicitCastExpr 0x151941680 <col:18> 'char *' <ArrayToPointerDecay>
|   | |       `-StringLiteral 0x151941600 <col:18> 'char[4]' lvalue "STR"
|   | |-CompoundStmt 0x151941970 <line:14:5, line:17:5>
|   | | `-CallExpr 0x151941940 <line:16:2, col:20> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x1519418b0 <col:2> 'char *(char *, const char *)' Function 0x1519416d0 'strcat' 'char *(char *, const char *)'
|   | |   |-RecoveryExpr 0x1519418d0 <col:9> '<dependent type>' contains-errors lvalue
|   | |   `-StringLiteral 0x1519418f0 <col:15> 'char[4]' lvalue "STR"
|   | `-IfStmt 0x151943b10 <line:17:12, line:36:5> has_else
|   |   |-BinaryOperator 0x151943138 <line:17:16, col:52> 'int' '&&'
|   |   | |-BinaryOperator 0x1519419e0 <col:16, col:25> 'int' '>'
|   |   | | |-ImplicitCastExpr 0x1519419c8 <col:16> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x151941988 <col:16> 'int' lvalue Var 0x1519282b8 'length' 'int'
|   |   | | `-IntegerLiteral 0x1519419a8 <col:25> 'int' 2
|   |   | `-BinaryOperator 0x151943118 <col:30, col:52> 'int' '=='
|   |   |   |-ImplicitCastExpr 0x151943100 <col:30, col:47> 'int' <IntegralCast>
|   |   |   | `-ImplicitCastExpr 0x1519430e8 <col:30, col:47> 'char' <LValueToRValue>
|   |   |   |   `-ArraySubscriptExpr 0x1519430b0 <col:30, col:47> 'char' lvalue
|   |   |   |     |-ImplicitCastExpr 0x151943098 <col:30> 'char *' <LValueToRValue>
|   |   |   |     | `-DeclRefExpr 0x151943000 <col:30> 'char *' lvalue ParmVar 0x1519280d8 'string' 'char *'
|   |   |   |     `-BinaryOperator 0x151943078 <col:37, col:46> 'int' '-'
|   |   |   |       |-ImplicitCastExpr 0x151943060 <col:37> 'int' <LValueToRValue>
|   |   |   |       | `-DeclRefExpr 0x151943020 <col:37> 'int' lvalue Var 0x1519282b8 'length' 'int'
|   |   |   |       `-IntegerLiteral 0x151943040 <col:46> 'int' 1
|   |   |   `-CharacterLiteral 0x1519430d0 <col:52> 'int' 121
|   |   |-CompoundStmt 0x1519437e0 <line:18:5, line:28:5>
|   |   | `-IfStmt 0x1519437b0 <line:19:2, line:27:2> has_else
|   |   |   |-CallExpr 0x151943508 <line:19:6, col:38> 'char *'
|   |   |   | |-ImplicitCastExpr 0x1519434f0 <col:6> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x151943380 <col:6> 'char *(const char *, int)' Function 0x1519431a0 'strchr' 'char *(const char *, int)'
|   |   |   | |-ImplicitCastExpr 0x151943550 <col:13> 'const char *' <NoOp>
|   |   |   | | `-ImplicitCastExpr 0x151943538 <col:13> 'char *' <ArrayToPointerDecay>
|   |   |   | |   `-StringLiteral 0x1519433a0 <col:13> 'char[4]' lvalue "STR"
|   |   |   | `-ImplicitCastExpr 0x151943580 <col:20, col:37> 'int' <IntegralCast>
|   |   |   |   `-ImplicitCastExpr 0x151943568 <col:20, col:37> 'char' <LValueToRValue>
|   |   |   |     `-ArraySubscriptExpr 0x151943470 <col:20, col:37> 'char' lvalue
|   |   |   |       |-ImplicitCastExpr 0x151943458 <col:20> 'char *' <LValueToRValue>
|   |   |   |       | `-DeclRefExpr 0x1519433c0 <col:20> 'char *' lvalue ParmVar 0x1519280d8 'string' 'char *'
|   |   |   |       `-BinaryOperator 0x151943438 <col:27, col:36> 'int' '-'
|   |   |   |         |-ImplicitCastExpr 0x151943420 <col:27> 'int' <LValueToRValue>
|   |   |   |         | `-DeclRefExpr 0x1519433e0 <col:27> 'int' lvalue Var 0x1519282b8 'length' 'int'
|   |   |   |         `-IntegerLiteral 0x151943400 <col:36> 'int' 2
|   |   |   |-CompoundStmt 0x151943658 <line:20:2, line:23:2>
|   |   |   | `-CallExpr 0x151943628 <line:22:6, col:24> '<dependent type>' contains-errors
|   |   |   |   |-DeclRefExpr 0x151943598 <col:6> 'char *(char *, const char *)' Function 0x1519416d0 'strcat' 'char *(char *, const char *)'
|   |   |   |   |-RecoveryExpr 0x1519435b8 <col:13> '<dependent type>' contains-errors lvalue
|   |   |   |   `-StringLiteral 0x1519435d8 <col:19> 'char[4]' lvalue "STR"
|   |   |   `-CompoundStmt 0x151943798 <line:24:2, line:27:2>
|   |   |     `-CallExpr 0x151943768 <line:26:6, col:37> '<dependent type>' contains-errors
|   |   |       |-DeclRefExpr 0x151943670 <col:6> 'char *(char *, const char *)' Function 0x151940d80 'strcpy' 'char *(char *, const char *)'
|   |   |       |-BinaryOperator 0x151943710 <col:13, col:29> '<dependent type>' contains-errors '-'
|   |   |       | |-BinaryOperator 0x1519436d0 <col:13, col:20> '<dependent type>' contains-errors '+'
|   |   |       | | |-RecoveryExpr 0x151943690 <col:13> '<dependent type>' contains-errors lvalue
|   |   |       | | `-DeclRefExpr 0x1519436b0 <col:20> 'int' lvalue Var 0x1519282b8 'length' 'int'
|   |   |       | `-IntegerLiteral 0x1519436f0 <col:29> 'int' 1
|   |   |       `-StringLiteral 0x151943730 <col:32> 'char[4]' lvalue "STR"
|   |   `-IfStmt 0x151943ae0 <line:28:12, line:36:5> has_else
|   |     |-BinaryOperator 0x151943910 <line:28:16, col:38> 'int' '=='
|   |     | |-ImplicitCastExpr 0x1519438f8 <col:16, col:33> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x1519438e0 <col:16, col:33> 'char' <LValueToRValue>
|   |     | |   `-ArraySubscriptExpr 0x1519438a8 <col:16, col:33> 'char' lvalue
|   |     | |     |-ImplicitCastExpr 0x151943890 <col:16> 'char *' <LValueToRValue>
|   |     | |     | `-DeclRefExpr 0x1519437f8 <col:16> 'char *' lvalue ParmVar 0x1519280d8 'string' 'char *'
|   |     | |     `-BinaryOperator 0x151943870 <col:23, col:32> 'int' '-'
|   |     | |       |-ImplicitCastExpr 0x151943858 <col:23> 'int' <LValueToRValue>
|   |     | |       | `-DeclRefExpr 0x151943818 <col:23> 'int' lvalue Var 0x1519282b8 'length' 'int'
|   |     | |       `-IntegerLiteral 0x151943838 <col:32> 'int' 1
|   |     | `-CharacterLiteral 0x1519438c8 <col:38> 'int' 115
|   |     |-CompoundStmt 0x1519439f0 <line:29:5, line:32:5>
|   |     | `-CallExpr 0x1519439c0 <line:31:2, col:20> '<dependent type>' contains-errors
|   |     |   |-DeclRefExpr 0x151943930 <col:2> 'char *(char *, const char *)' Function 0x1519416d0 'strcat' 'char *(char *, const char *)'
|   |     |   |-RecoveryExpr 0x151943950 <col:9> '<dependent type>' contains-errors lvalue
|   |     |   `-StringLiteral 0x151943970 <col:15> 'char[4]' lvalue "STR"
|   |     `-CompoundStmt 0x151943ac8 <line:33:5, line:36:5>
|   |       `-CallExpr 0x151943a98 <line:35:2, col:20> '<dependent type>' contains-errors
|   |         |-DeclRefExpr 0x151943a08 <col:2> 'char *(char *, const char *)' Function 0x1519416d0 'strcat' 'char *(char *, const char *)'
|   |         |-RecoveryExpr 0x151943a28 <col:9> '<dependent type>' contains-errors lvalue
|   |         `-StringLiteral 0x151943a48 <col:15> 'char[4]' lvalue "STR"
|   `-ReturnStmt 0x151943bb0 <line:38:5, col:17>
|     `-ParenExpr 0x151943b90 <col:12, col:17> '<dependent type>' contains-errors lvalue
|       `-RecoveryExpr 0x151943b70 <col:13> '<dependent type>' contains-errors lvalue
|-FunctionDecl 0x151940a90 <line:6:14> col:14 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x151940b90 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x151940b38 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x151940d80 <line:7:5> col:5 implicit used strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x151940e80 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x151940ee8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x151940e28 <<invalid sloc>> Implicit 885
|-FunctionDecl 0x1519416d0 <line:16:2> col:2 implicit used strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1519417d0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x151941838 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x151941778 <<invalid sloc>> Implicit 889
`-FunctionDecl 0x1519431a0 <line:19:6> col:6 implicit used strchr 'char *(const char *, int)' extern
  |-ParmVarDecl 0x1519432a0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x151943308 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x151943248 <<invalid sloc>> Implicit 893
