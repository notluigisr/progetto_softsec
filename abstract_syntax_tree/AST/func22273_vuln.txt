TranslationUnitDecl 0x137855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1378564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x137855bd0 '__int128'
|-TypedefDecl 0x137856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x137855bf0 'unsigned __int128'
|-TypedefDecl 0x137926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x137926000 'struct __NSConstantString_tag'
|   `-Record 0x137856580 '__NSConstantString_tag'
|-TypedefDecl 0x137926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x137855d90 '__SVInt8_t'
|-TypedefDecl 0x137926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x137855db0 '__SVInt16_t'
|-TypedefDecl 0x137926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x137855dd0 '__SVInt32_t'
|-TypedefDecl 0x1379263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x137855df0 '__SVInt64_t'
|-TypedefDecl 0x137926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x137855e10 '__SVUint8_t'
|-TypedefDecl 0x1379264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x137855e30 '__SVUint16_t'
|-TypedefDecl 0x137926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x137855e50 '__SVUint32_t'
|-TypedefDecl 0x137926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x137855e70 '__SVUint64_t'
|-TypedefDecl 0x1379265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x137855e90 '__SVFloat16_t'
|-TypedefDecl 0x137926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x137855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1379266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x137855ed0 '__SVFloat64_t'
|-TypedefDecl 0x137926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x137855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x137926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x137855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1379267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x137855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x137926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x137855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1379268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x137855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x137926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x137855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x137926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x137855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1379269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x137855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x137926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x137855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x137926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x137856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x137926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x137856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x137926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x137856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x137926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x137856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x137926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x137856090 '__clang_svint8x3_t'
|-TypedefDecl 0x137926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1378560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x137926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1378560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x137926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1378560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x137926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x137856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x137926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x137856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x137926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x137856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x137926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x137856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x137926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x137856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x137927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1378561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x137927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1378561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1379278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1378561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x137927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x137856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1379279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x137856230 '__clang_svint16x4_t'
|-TypedefDecl 0x137927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x137856250 '__clang_svint32x4_t'
|-TypedefDecl 0x137927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x137856270 '__clang_svint64x4_t'
|-TypedefDecl 0x137927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x137856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x137927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1378562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x137927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1378562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x137927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1378562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x137927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x137856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x137927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x137856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x137927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x137856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x137927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x137856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x137927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x137856390 '__SVBool_t'
|-TypedefDecl 0x137927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1378563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x137927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1378563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x137927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1378563f0 '__SVCount_t'
|-TypedefDecl 0x137927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x137927fb0 'char *'
|   `-BuiltinType 0x1378556b0 'char'
|-TypedefDecl 0x137928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x137927fb0 'char *'
|   `-BuiltinType 0x1378556b0 'char'
|-FunctionDecl 0x1379283a8 <dataset_diviso_filec/func22273_vuln.c:1:1, line:49:1> line:1:1 invalid tight_filter_gradient24 'int (int *, int *, int, int)'
| |-ParmVarDecl 0x137928128 <col:25, col:35> col:35 invalid vs 'int *'
| |-ParmVarDecl 0x1379281a8 <col:39, col:48> col:48 invalid buf 'int *'
| |-ParmVarDecl 0x137928228 <col:53, col:57> col:57 used w 'int'
| |-ParmVarDecl 0x1379282a8 <col:60, col:64> col:64 used h 'int'
| `-CompoundStmt 0x137946570 <line:2:1, line:49:1>
|   |-DeclStmt 0x1379285a0 <line:5:5, col:17>
|   | `-VarDecl 0x137928538 <col:5, col:16> col:9 used shift 'int[3]'
|   |-DeclStmt 0x137928638 <line:6:5, col:14>
|   | `-VarDecl 0x1379285d0 <col:5, col:10> col:10 used prev 'int *'
|   |-DeclStmt 0x1379419c8 <line:7:5, col:49>
|   | |-VarDecl 0x1379286b8 <col:5, col:15> col:9 used here 'int[3]'
|   | |-VarDecl 0x137928788 <col:5, col:25> col:18 used upper 'int[3]'
|   | |-VarDecl 0x137941868 <col:5, col:34> col:28 used left 'int[3]'
|   | `-VarDecl 0x137941938 <col:5, col:48> col:37 used upperleft 'int[3]'
|   |-DeclStmt 0x137941a60 <line:8:5, col:19>
|   | `-VarDecl 0x1379419f8 <col:5, col:9> col:9 used prediction 'int'
|   |-DeclStmt 0x137941c18 <line:9:5, col:16>
|   | |-VarDecl 0x137941a90 <col:5, col:9> col:9 used x 'int'
|   | |-VarDecl 0x137941b10 <col:5, col:12> col:12 used y 'int'
|   | `-VarDecl 0x137941b90 <col:5, col:15> col:15 used c 'int'
|   |-CallExpr 0x137942548 <line:12:5, col:61> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x137942310 <col:5> 'void *(void *, int, unsigned long)' Function 0x1379420c0 'memset' 'void *(void *, int, unsigned long)'
|   | |-CXXDependentScopeMemberExpr 0x1379423e0 <col:12, col:31> '<dependent type>' contains-errors lvalue .buffer
|   | | `-CXXDependentScopeMemberExpr 0x137942398 <col:12, col:22> '<dependent type>' contains-errors lvalue .gradient
|   | |   `-CXXDependentScopeMemberExpr 0x137942350 <col:12, col:16> '<dependent type>' contains-errors lvalue ->tight
|   | |     `-RecoveryExpr 0x137942330 <col:12> '<dependent type>' contains-errors lvalue
|   | |-IntegerLiteral 0x137942428 <col:39> 'int' 0
|   | `-BinaryOperator 0x137942510 <col:42, col:60> 'unsigned long' '*'
|   |   |-ImplicitCastExpr 0x1379424f8 <col:42, col:46> 'unsigned long' <IntegralCast>
|   |   | `-BinaryOperator 0x1379424a0 <col:42, col:46> 'int' '*'
|   |   |   |-ImplicitCastExpr 0x137942488 <col:42> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x137942448 <col:42> 'int' lvalue ParmVar 0x137928228 'w' 'int'
|   |   |   `-IntegerLiteral 0x137942468 <col:46> 'int' 3
|   |   `-UnaryExprOrTypeTraitExpr 0x1379424d8 <col:50, col:60> 'unsigned long' sizeof 'int'
|   |-IfStmt 0x137944c98 <line:14:5, line:22:5> has_else
|   | |-IntegerLiteral 0x137942580 <line:14:9> 'int' 1
|   | |-CompoundStmt 0x1379447b0 <col:13, line:18:5>
|   | | |-BinaryOperator 0x1379426c8 <line:15:9, col:34> 'int' contains-errors '='
|   | | | |-ArraySubscriptExpr 0x1379425f8 <col:9, col:16> 'int' lvalue
|   | | | | |-ImplicitCastExpr 0x1379425e0 <col:9> 'int *' <ArrayToPointerDecay>
|   | | | | | `-DeclRefExpr 0x1379425a0 <col:9> 'int[3]' lvalue Var 0x137928538 'shift' 'int[3]'
|   | | | | `-IntegerLiteral 0x1379425c0 <col:15> 'int' 0
|   | | | `-CXXDependentScopeMemberExpr 0x137942680 <col:20, col:34> '<dependent type>' contains-errors lvalue .rshift
|   | | |   `-CXXDependentScopeMemberExpr 0x137942638 <col:20, col:24> '<dependent type>' contains-errors lvalue ->client_pf
|   | | |     `-RecoveryExpr 0x137942618 <col:20> '<dependent type>' contains-errors lvalue
|   | | |-BinaryOperator 0x137944648 <line:16:9, col:34> 'int' contains-errors '='
|   | | | |-ArraySubscriptExpr 0x137942740 <col:9, col:16> 'int' lvalue
|   | | | | |-ImplicitCastExpr 0x137942728 <col:9> 'int *' <ArrayToPointerDecay>
|   | | | | | `-DeclRefExpr 0x1379426e8 <col:9> 'int[3]' lvalue Var 0x137928538 'shift' 'int[3]'
|   | | | | `-IntegerLiteral 0x137942708 <col:15> 'int' 1
|   | | | `-CXXDependentScopeMemberExpr 0x137944600 <col:20, col:34> '<dependent type>' contains-errors lvalue .gshift
|   | | |   `-CXXDependentScopeMemberExpr 0x137942780 <col:20, col:24> '<dependent type>' contains-errors lvalue ->client_pf
|   | | |     `-RecoveryExpr 0x137942760 <col:20> '<dependent type>' contains-errors lvalue
|   | | `-BinaryOperator 0x137944790 <line:17:9, col:34> 'int' contains-errors '='
|   | |   |-ArraySubscriptExpr 0x1379446c0 <col:9, col:16> 'int' lvalue
|   | |   | |-ImplicitCastExpr 0x1379446a8 <col:9> 'int *' <ArrayToPointerDecay>
|   | |   | | `-DeclRefExpr 0x137944668 <col:9> 'int[3]' lvalue Var 0x137928538 'shift' 'int[3]'
|   | |   | `-IntegerLiteral 0x137944688 <col:15> 'int' 2
|   | |   `-CXXDependentScopeMemberExpr 0x137944748 <col:20, col:34> '<dependent type>' contains-errors lvalue .bshift
|   | |     `-CXXDependentScopeMemberExpr 0x137944700 <col:20, col:24> '<dependent type>' contains-errors lvalue ->client_pf
|   | |       `-RecoveryExpr 0x1379446e0 <col:20> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x137944c70 <line:18:12, line:22:5>
|   |   |-BinaryOperator 0x137944940 <line:19:9, col:39> 'int' contains-errors '='
|   |   | |-ArraySubscriptExpr 0x137944830 <col:9, col:16> 'int' lvalue
|   |   | | |-ImplicitCastExpr 0x137944818 <col:9> 'int *' <ArrayToPointerDecay>
|   |   | | | `-DeclRefExpr 0x1379447d8 <col:9> 'int[3]' lvalue Var 0x137928538 'shift' 'int[3]'
|   |   | | `-IntegerLiteral 0x1379447f8 <col:15> 'int' 0
|   |   | `-BinaryOperator 0x137944920 <col:20, col:39> '<dependent type>' contains-errors '-'
|   |   |   |-IntegerLiteral 0x137944850 <col:20> 'int' 24
|   |   |   `-CXXDependentScopeMemberExpr 0x1379448d8 <col:25, col:39> '<dependent type>' contains-errors lvalue .rshift
|   |   |     `-CXXDependentScopeMemberExpr 0x137944890 <col:25, col:29> '<dependent type>' contains-errors lvalue ->client_pf
|   |   |       `-RecoveryExpr 0x137944870 <col:25> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x137944ac8 <line:20:9, col:39> 'int' contains-errors '='
|   |   | |-ArraySubscriptExpr 0x1379449b8 <col:9, col:16> 'int' lvalue
|   |   | | |-ImplicitCastExpr 0x1379449a0 <col:9> 'int *' <ArrayToPointerDecay>
|   |   | | | `-DeclRefExpr 0x137944960 <col:9> 'int[3]' lvalue Var 0x137928538 'shift' 'int[3]'
|   |   | | `-IntegerLiteral 0x137944980 <col:15> 'int' 1
|   |   | `-BinaryOperator 0x137944aa8 <col:20, col:39> '<dependent type>' contains-errors '-'
|   |   |   |-IntegerLiteral 0x1379449d8 <col:20> 'int' 24
|   |   |   `-CXXDependentScopeMemberExpr 0x137944a60 <col:25, col:39> '<dependent type>' contains-errors lvalue .gshift
|   |   |     `-CXXDependentScopeMemberExpr 0x137944a18 <col:25, col:29> '<dependent type>' contains-errors lvalue ->client_pf
|   |   |       `-RecoveryExpr 0x1379449f8 <col:25> '<dependent type>' contains-errors lvalue
|   |   `-BinaryOperator 0x137944c50 <line:21:9, col:39> 'int' contains-errors '='
|   |     |-ArraySubscriptExpr 0x137944b40 <col:9, col:16> 'int' lvalue
|   |     | |-ImplicitCastExpr 0x137944b28 <col:9> 'int *' <ArrayToPointerDecay>
|   |     | | `-DeclRefExpr 0x137944ae8 <col:9> 'int[3]' lvalue Var 0x137928538 'shift' 'int[3]'
|   |     | `-IntegerLiteral 0x137944b08 <col:15> 'int' 2
|   |     `-BinaryOperator 0x137944c30 <col:20, col:39> '<dependent type>' contains-errors '-'
|   |       |-IntegerLiteral 0x137944b60 <col:20> 'int' 24
|   |       `-CXXDependentScopeMemberExpr 0x137944be8 <col:25, col:39> '<dependent type>' contains-errors lvalue .bshift
|   |         `-CXXDependentScopeMemberExpr 0x137944ba0 <col:25, col:29> '<dependent type>' contains-errors lvalue ->client_pf
|   |           `-RecoveryExpr 0x137944b80 <col:25> '<dependent type>' contains-errors lvalue
|   `-ForStmt 0x137946538 <line:24:5, line:48:5>
|     |-BinaryOperator 0x137944d08 <line:24:10, col:14> 'int' '='
|     | |-DeclRefExpr 0x137944cc8 <col:10> 'int' lvalue Var 0x137941b10 'y' 'int'
|     | `-IntegerLiteral 0x137944ce8 <col:14> 'int' 0
|     |-<<<NULL>>>
|     |-BinaryOperator 0x137944d98 <col:17, col:21> 'int' '<'
|     | |-ImplicitCastExpr 0x137944d68 <col:17> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x137944d28 <col:17> 'int' lvalue Var 0x137941b10 'y' 'int'
|     | `-ImplicitCastExpr 0x137944d80 <col:21> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x137944d48 <col:21> 'int' lvalue ParmVar 0x1379282a8 'h' 'int'
|     |-UnaryOperator 0x137944dd8 <col:24, col:25> 'int' postfix '++'
|     | `-DeclRefExpr 0x137944db8 <col:24> 'int' lvalue Var 0x137941b10 'y' 'int'
|     `-CompoundStmt 0x137946510 <col:29, line:48:5>
|       |-ForStmt 0x1379450c0 <line:25:9, line:28:9>
|       | |-BinaryOperator 0x137944e30 <line:25:14, col:18> 'int' '='
|       | | |-DeclRefExpr 0x137944df0 <col:14> 'int' lvalue Var 0x137941b90 'c' 'int'
|       | | `-IntegerLiteral 0x137944e10 <col:18> 'int' 0
|       | |-<<<NULL>>>
|       | |-BinaryOperator 0x137944ea8 <col:21, col:25> 'int' '<'
|       | | |-ImplicitCastExpr 0x137944e90 <col:21> 'int' <LValueToRValue>
|       | | | `-DeclRefExpr 0x137944e50 <col:21> 'int' lvalue Var 0x137941b90 'c' 'int'
|       | | `-IntegerLiteral 0x137944e70 <col:25> 'int' 3
|       | |-UnaryOperator 0x137944ee8 <col:28, col:29> 'int' postfix '++'
|       | | `-DeclRefExpr 0x137944ec8 <col:28> 'int' lvalue Var 0x137941b90 'c' 'int'
|       | `-CompoundStmt 0x1379450a0 <col:33, line:28:9>
|       |   |-BinaryOperator 0x137944fb0 <line:26:13, col:24> 'int' '='
|       |   | |-ArraySubscriptExpr 0x137944f70 <col:13, col:20> 'int' lvalue
|       |   | | |-ImplicitCastExpr 0x137944f40 <col:13> 'int *' <ArrayToPointerDecay>
|       |   | | | `-DeclRefExpr 0x137944f00 <col:13> 'int[3]' lvalue Var 0x137928788 'upper' 'int[3]'
|       |   | | `-ImplicitCastExpr 0x137944f58 <col:19> 'int' <LValueToRValue>
|       |   | |   `-DeclRefExpr 0x137944f20 <col:19> 'int' lvalue Var 0x137941b90 'c' 'int'
|       |   | `-IntegerLiteral 0x137944f90 <col:24> 'int' 0
|       |   `-BinaryOperator 0x137945080 <line:27:13, col:23> 'int' '='
|       |     |-ArraySubscriptExpr 0x137945040 <col:13, col:19> 'int' lvalue
|       |     | |-ImplicitCastExpr 0x137945010 <col:13> 'int *' <ArrayToPointerDecay>
|       |     | | `-DeclRefExpr 0x137944fd0 <col:13> 'int[3]' lvalue Var 0x1379286b8 'here' 'int[3]'
|       |     | `-ImplicitCastExpr 0x137945028 <col:18> 'int' <LValueToRValue>
|       |     |   `-DeclRefExpr 0x137944ff0 <col:18> 'int' lvalue Var 0x137941b90 'c' 'int'
|       |     `-IntegerLiteral 0x137945060 <col:23> 'int' 0
|       |-BinaryOperator 0x137945250 <line:29:9, col:42> 'int *' contains-errors '='
|       | |-DeclRefExpr 0x1379450f8 <col:9> 'int *' lvalue Var 0x1379285d0 'prev' 'int *'
|       | `-CStyleCastExpr 0x137945228 <col:16, col:42> 'int *' contains-errors <Dependent>
|       |   `-CXXDependentScopeMemberExpr 0x1379451c8 <col:23, col:42> '<dependent type>' contains-errors lvalue .buffer
|       |     `-CXXDependentScopeMemberExpr 0x137945180 <col:23, col:33> '<dependent type>' contains-errors lvalue .gradient
|       |       `-CXXDependentScopeMemberExpr 0x137945138 <col:23, col:27> '<dependent type>' contains-errors lvalue ->tight
|       |         `-RecoveryExpr 0x137945118 <col:23> '<dependent type>' contains-errors lvalue
|       `-ForStmt 0x1379464d8 <line:30:9, line:47:9>
|         |-BinaryOperator 0x1379452b0 <line:30:14, col:18> 'int' '='
|         | |-DeclRefExpr 0x137945270 <col:14> 'int' lvalue Var 0x137941a90 'x' 'int'
|         | `-IntegerLiteral 0x137945290 <col:18> 'int' 0
|         |-<<<NULL>>>
|         |-BinaryOperator 0x137945340 <col:21, col:25> 'int' '<'
|         | |-ImplicitCastExpr 0x137945310 <col:21> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x1379452d0 <col:21> 'int' lvalue Var 0x137941a90 'x' 'int'
|         | `-ImplicitCastExpr 0x137945328 <col:25> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x1379452f0 <col:25> 'int' lvalue ParmVar 0x137928228 'w' 'int'
|         |-UnaryOperator 0x137945380 <col:28, col:29> 'int' postfix '++'
|         | `-DeclRefExpr 0x137945360 <col:28> 'int' lvalue Var 0x137941a90 'x' 'int'
|         `-CompoundStmt 0x1379464c0 <col:33, line:47:9>
|           `-ForStmt 0x137946488 <line:32:13, line:46:13>
|             |-BinaryOperator 0x137945420 <line:32:18, col:22> 'int' '='
|             | |-DeclRefExpr 0x1379453e0 <col:18> 'int' lvalue Var 0x137941b90 'c' 'int'
|             | `-IntegerLiteral 0x137945400 <col:22> 'int' 0
|             |-<<<NULL>>>
|             |-BinaryOperator 0x137945498 <col:25, col:29> 'int' '<'
|             | |-ImplicitCastExpr 0x137945480 <col:25> 'int' <LValueToRValue>
|             | | `-DeclRefExpr 0x137945440 <col:25> 'int' lvalue Var 0x137941b90 'c' 'int'
|             | `-IntegerLiteral 0x137945460 <col:29> 'int' 3
|             |-UnaryOperator 0x1379454d8 <col:32, col:33> 'int' postfix '++'
|             | `-DeclRefExpr 0x1379454b8 <col:32> 'int' lvalue Var 0x137941b90 'c' 'int'
|             `-CompoundStmt 0x137946440 <col:37, line:46:13>
|               |-BinaryOperator 0x137945838 <line:33:17, col:39> 'int' '='
|               | |-ArraySubscriptExpr 0x137945560 <col:17, col:28> 'int' lvalue
|               | | |-ImplicitCastExpr 0x137945530 <col:17> 'int *' <ArrayToPointerDecay>
|               | | | `-DeclRefExpr 0x1379454f0 <col:17> 'int[3]' lvalue Var 0x137941938 'upperleft' 'int[3]'
|               | | `-ImplicitCastExpr 0x137945548 <col:27> 'int' <LValueToRValue>
|               | |   `-DeclRefExpr 0x137945510 <col:27> 'int' lvalue Var 0x137941b90 'c' 'int'
|               | `-ImplicitCastExpr 0x137945820 <col:32, col:39> 'int' <LValueToRValue>
|               |   `-ArraySubscriptExpr 0x137945800 <col:32, col:39> 'int' lvalue
|               |     |-ImplicitCastExpr 0x1379455c0 <col:32> 'int *' <ArrayToPointerDecay>
|               |     | `-DeclRefExpr 0x137945580 <col:32> 'int[3]' lvalue Var 0x137928788 'upper' 'int[3]'
|               |     `-ImplicitCastExpr 0x1379455d8 <col:38> 'int' <LValueToRValue>
|               |       `-DeclRefExpr 0x1379455a0 <col:38> 'int' lvalue Var 0x137941b90 'c' 'int'
|               |-BinaryOperator 0x137945990 <line:34:17, col:33> 'int' '='
|               | |-ArraySubscriptExpr 0x1379458c8 <col:17, col:23> 'int' lvalue
|               | | |-ImplicitCastExpr 0x137945898 <col:17> 'int *' <ArrayToPointerDecay>
|               | | | `-DeclRefExpr 0x137945858 <col:17> 'int[3]' lvalue Var 0x137941868 'left' 'int[3]'
|               | | `-ImplicitCastExpr 0x1379458b0 <col:22> 'int' <LValueToRValue>
|               | |   `-DeclRefExpr 0x137945878 <col:22> 'int' lvalue Var 0x137941b90 'c' 'int'
|               | `-ImplicitCastExpr 0x137945978 <col:27, col:33> 'int' <LValueToRValue>
|               |   `-ArraySubscriptExpr 0x137945958 <col:27, col:33> 'int' lvalue
|               |     |-ImplicitCastExpr 0x137945928 <col:27> 'int *' <ArrayToPointerDecay>
|               |     | `-DeclRefExpr 0x1379458e8 <col:27> 'int[3]' lvalue Var 0x1379286b8 'here' 'int[3]'
|               |     `-ImplicitCastExpr 0x137945940 <col:32> 'int' <LValueToRValue>
|               |       `-DeclRefExpr 0x137945908 <col:32> 'int' lvalue Var 0x137941b90 'c' 'int'
|               |-BinaryOperator 0x137945aa8 <line:35:17, col:29> 'int' '='
|               | |-ArraySubscriptExpr 0x137945a20 <col:17, col:24> 'int' lvalue
|               | | |-ImplicitCastExpr 0x1379459f0 <col:17> 'int *' <ArrayToPointerDecay>
|               | | | `-DeclRefExpr 0x1379459b0 <col:17> 'int[3]' lvalue Var 0x137928788 'upper' 'int[3]'
|               | | `-ImplicitCastExpr 0x137945a08 <col:23> 'int' <LValueToRValue>
|               | |   `-DeclRefExpr 0x1379459d0 <col:23> 'int' lvalue Var 0x137941b90 'c' 'int'
|               | `-ImplicitCastExpr 0x137945a90 <col:28, col:29> 'int' <LValueToRValue>
|               |   `-UnaryOperator 0x137945a78 <col:28, col:29> 'int' lvalue prefix '*' cannot overflow
|               |     `-ImplicitCastExpr 0x137945a60 <col:29> 'int *' <LValueToRValue>
|               |       `-DeclRefExpr 0x137945a40 <col:29> 'int *' lvalue Var 0x1379285d0 'prev' 'int *'
|               |-BinaryOperator 0x137945d90 <line:37:17, col:33> 'int' '='
|               | |-UnaryOperator 0x137945cd0 <col:17, col:22> 'int' lvalue prefix '*' cannot overflow
|               | | `-UnaryOperator 0x137945cb8 <col:18, col:22> 'int *' postfix '++'
|               | |   `-DeclRefExpr 0x137945c98 <col:18> 'int *' lvalue Var 0x1379285d0 'prev' 'int *'
|               | `-ImplicitCastExpr 0x137945d78 <col:27, col:33> 'int' <LValueToRValue>
|               |   `-ArraySubscriptExpr 0x137945d58 <col:27, col:33> 'int' lvalue
|               |     |-ImplicitCastExpr 0x137945d28 <col:27> 'int *' <ArrayToPointerDecay>
|               |     | `-DeclRefExpr 0x137945ce8 <col:27> 'int[3]' lvalue Var 0x1379286b8 'here' 'int[3]'
|               |     `-ImplicitCastExpr 0x137945d40 <col:32> 'int' <LValueToRValue>
|               |       `-DeclRefExpr 0x137945d08 <col:32> 'int' lvalue Var 0x137941b90 'c' 'int'
|               |-BinaryOperator 0x137946008 <line:39:17, col:62> 'int' '='
|               | |-DeclRefExpr 0x137945db0 <col:17> 'int' lvalue Var 0x1379419f8 'prediction' 'int'
|               | `-BinaryOperator 0x137945fe8 <col:30, col:62> 'int' '-'
|               |   |-BinaryOperator 0x137945f20 <col:30, col:47> 'int' '+'
|               |   | |-ImplicitCastExpr 0x137945ef0 <col:30, col:36> 'int' <LValueToRValue>
|               |   | | `-ArraySubscriptExpr 0x137945e40 <col:30, col:36> 'int' lvalue
|               |   | |   |-ImplicitCastExpr 0x137945e10 <col:30> 'int *' <ArrayToPointerDecay>
|               |   | |   | `-DeclRefExpr 0x137945dd0 <col:30> 'int[3]' lvalue Var 0x137941868 'left' 'int[3]'
|               |   | |   `-ImplicitCastExpr 0x137945e28 <col:35> 'int' <LValueToRValue>
|               |   | |     `-DeclRefExpr 0x137945df0 <col:35> 'int' lvalue Var 0x137941b90 'c' 'int'
|               |   | `-ImplicitCastExpr 0x137945f08 <col:40, col:47> 'int' <LValueToRValue>
|               |   |   `-ArraySubscriptExpr 0x137945ed0 <col:40, col:47> 'int' lvalue
|               |   |     |-ImplicitCastExpr 0x137945ea0 <col:40> 'int *' <ArrayToPointerDecay>
|               |   |     | `-DeclRefExpr 0x137945e60 <col:40> 'int[3]' lvalue Var 0x137928788 'upper' 'int[3]'
|               |   |     `-ImplicitCastExpr 0x137945eb8 <col:46> 'int' <LValueToRValue>
|               |   |       `-DeclRefExpr 0x137945e80 <col:46> 'int' lvalue Var 0x137941b90 'c' 'int'
|               |   `-ImplicitCastExpr 0x137945fd0 <col:51, col:62> 'int' <LValueToRValue>
|               |     `-ArraySubscriptExpr 0x137945fb0 <col:51, col:62> 'int' lvalue
|               |       |-ImplicitCastExpr 0x137945f80 <col:51> 'int *' <ArrayToPointerDecay>
|               |       | `-DeclRefExpr 0x137945f40 <col:51> 'int[3]' lvalue Var 0x137941938 'upperleft' 'int[3]'
|               |       `-ImplicitCastExpr 0x137945f98 <col:61> 'int' <LValueToRValue>
|               |         `-DeclRefExpr 0x137945f60 <col:61> 'int' lvalue Var 0x137941b90 'c' 'int'
|               |-IfStmt 0x137946228 <line:40:17, line:44:17> has_else
|               | |-BinaryOperator 0x137946080 <line:40:21, col:34> 'int' '<'
|               | | |-ImplicitCastExpr 0x137946068 <col:21> 'int' <LValueToRValue>
|               | | | `-DeclRefExpr 0x137946028 <col:21> 'int' lvalue Var 0x1379419f8 'prediction' 'int'
|               | | `-IntegerLiteral 0x137946048 <col:34> 'int' 0
|               | |-CompoundStmt 0x137946100 <col:37, line:42:17>
|               | | `-BinaryOperator 0x1379460e0 <line:41:21, col:34> 'int' '='
|               | |   |-DeclRefExpr 0x1379460a0 <col:21> 'int' lvalue Var 0x1379419f8 'prediction' 'int'
|               | |   `-IntegerLiteral 0x1379460c0 <col:34> 'int' 0
|               | `-IfStmt 0x137946208 <line:42:24, line:44:17>
|               |   |-BinaryOperator 0x137946170 <line:42:28, col:41> 'int' '>'
|               |   | |-ImplicitCastExpr 0x137946158 <col:28> 'int' <LValueToRValue>
|               |   | | `-DeclRefExpr 0x137946118 <col:28> 'int' lvalue Var 0x1379419f8 'prediction' 'int'
|               |   | `-IntegerLiteral 0x137946138 <col:41> 'int' 255
|               |   `-CompoundStmt 0x1379461f0 <col:47, line:44:17>
|               |     `-BinaryOperator 0x1379461d0 <line:43:21, col:34> 'int' '='
|               |       |-DeclRefExpr 0x137946190 <col:21> 'int' lvalue Var 0x1379419f8 'prediction' 'int'
|               |       `-IntegerLiteral 0x1379461b0 <col:34> 'int' 255
|               `-BinaryOperator 0x137946420 <line:45:17, col:53> '<dependent type>' contains-errors '='
|                 |-UnaryOperator 0x137946290 <col:17, col:21> '<dependent type>' contains-errors prefix '*' cannot overflow
|                 | `-UnaryOperator 0x137946278 <col:18, col:21> '<dependent type>' contains-errors postfix '++' cannot overflow
|                 |   `-RecoveryExpr 0x137946258 <col:18> '<dependent type>' contains-errors lvalue
|                 `-CStyleCastExpr 0x1379463f8 <col:26, col:53> 'char' <IntegralCast>
|                   `-ParenExpr 0x1379463d8 <col:32, col:53> 'int'
|                     `-BinaryOperator 0x137946388 <col:33, col:43> 'int' '-'
|                       |-ImplicitCastExpr 0x137946358 <col:33, col:39> 'int' <LValueToRValue>
|                       | `-ArraySubscriptExpr 0x137946318 <col:33, col:39> 'int' lvalue
|                       |   |-ImplicitCastExpr 0x1379462e8 <col:33> 'int *' <ArrayToPointerDecay>
|                       |   | `-DeclRefExpr 0x1379462a8 <col:33> 'int[3]' lvalue Var 0x1379286b8 'here' 'int[3]'
|                       |   `-ImplicitCastExpr 0x137946300 <col:38> 'int' <LValueToRValue>
|                       |     `-DeclRefExpr 0x1379462c8 <col:38> 'int' lvalue Var 0x137941b90 'c' 'int'
|                       `-ImplicitCastExpr 0x137946370 <col:43> 'int' <LValueToRValue>
|                         `-DeclRefExpr 0x137946338 <col:43> 'int' lvalue Var 0x1379419f8 'prediction' 'int'
`-FunctionDecl 0x1379420c0 <line:12:5> col:5 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x1379421c0 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x137942228 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x137942290 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x137942168 <<invalid sloc>> Implicit 900
