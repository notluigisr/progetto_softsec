TranslationUnitDecl 0x12c855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12c8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12c855bd0 '__int128'
|-TypedefDecl 0x12c856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12c855bf0 'unsigned __int128'
|-TypedefDecl 0x12c926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12c926000 'struct __NSConstantString_tag'
|   `-Record 0x12c856580 '__NSConstantString_tag'
|-TypedefDecl 0x12c926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12c855d90 '__SVInt8_t'
|-TypedefDecl 0x12c926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12c855db0 '__SVInt16_t'
|-TypedefDecl 0x12c926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12c855dd0 '__SVInt32_t'
|-TypedefDecl 0x12c9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12c855df0 '__SVInt64_t'
|-TypedefDecl 0x12c926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12c855e10 '__SVUint8_t'
|-TypedefDecl 0x12c9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12c855e30 '__SVUint16_t'
|-TypedefDecl 0x12c926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12c855e50 '__SVUint32_t'
|-TypedefDecl 0x12c926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12c855e70 '__SVUint64_t'
|-TypedefDecl 0x12c9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12c855e90 '__SVFloat16_t'
|-TypedefDecl 0x12c926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12c855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12c9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12c855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12c926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12c855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12c926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12c855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12c9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12c855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12c926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12c855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12c9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12c855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12c926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12c855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12c926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12c855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12c9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12c855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12c926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12c855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12c926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12c856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12c926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12c856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12c926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12c856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12c926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12c856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12c926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12c856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12c926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12c8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12c926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12c8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12c926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12c8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12c926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12c856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12c926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12c856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12c926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12c856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12c926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12c856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12c926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12c856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12c927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12c8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12c927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12c8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12c9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12c8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12c927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12c856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12c9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12c856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12c927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12c856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12c927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12c856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12c927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12c856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12c927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12c8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12c927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12c8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12c927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12c8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12c927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12c856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12c927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12c856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12c927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12c856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12c927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12c856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12c927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12c856390 '__SVBool_t'
|-TypedefDecl 0x12c927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12c8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12c927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12c8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12c927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12c8563f0 '__SVCount_t'
|-TypedefDecl 0x12c927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12c927fb0 'char *'
|   `-BuiltinType 0x12c8556b0 'char'
|-TypedefDecl 0x12c928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12c927fb0 'char *'
|   `-BuiltinType 0x12c8556b0 'char'
`-FunctionDecl 0x12c9281c8 <dataset_diviso_filec/func17008_nonvuln.c:1:7, line:15:7> line:1:21 invalid mp_set_Jxyz_s 'double (int)' static
  |-ParmVarDecl 0x12c9280f0 <col:35, <invalid sloc>> col:52 invalid 'int'
  `-CompoundStmt 0x12d009398 <col:58, line:15:7>
    |-DeclStmt 0x12c928628 <line:3:9, col:110>
    | |-VarDecl 0x12c928338 <col:9, col:22> col:22 used ox 'const double'
    | |-VarDecl 0x12c928430 <col:9, col:52> col:52 used oy 'const double'
    | `-VarDecl 0x12c928528 <col:9, col:82> col:82 used oz 'const double'
    |-DeclStmt 0x12c941e40 <line:4:9, line:7:37>
    | |-VarDecl 0x12c928658 <line:4:9, line:5:36> col:11 used x 'const int' cinit
    | | `-CStyleCastExpr 0x12c941a18 <col:15, col:36> 'int' <FloatingToIntegral>
    | |   `-ParenExpr 0x12c9419f8 <col:20, col:36> 'double'
    | |     `-BinaryOperator 0x12c9419a0 <col:21, col:35> 'double' '+'
    | |       |-ImplicitCastExpr 0x12c941970 <col:21> 'double' <LValueToRValue>
    | |       | `-DeclRefExpr 0x12c9286c0 <col:21> 'const double' lvalue Var 0x12c928338 'ox' 'const double'
    | |       `-ImplicitCastExpr 0x12c941988 <col:26, col:35> 'double' <IntegralToFloating>
    | |         `-CallExpr 0x12c941948 <col:26, col:35> 'int'
    | |           |-ImplicitCastExpr 0x12c941930 <col:26> 'int (*)()' <FunctionToPointerDecay>
    | |           | `-DeclRefExpr 0x12c9418b8 <col:26> 'int ()' Function 0x12c941800 '_mp_arg' 'int ()'
    | |           `-IntegerLiteral 0x12c9418d8 <col:34> 'int' 2
    | |-VarDecl 0x12c941a58 <line:4:9, line:6:36> col:11 used y 'const int' cinit
    | | `-CStyleCastExpr 0x12c941c08 <col:15, col:36> 'int' <FloatingToIntegral>
    | |   `-ParenExpr 0x12c941be8 <col:20, col:36> 'double'
    | |     `-BinaryOperator 0x12c941b90 <col:21, col:35> 'double' '+'
    | |       |-ImplicitCastExpr 0x12c941b60 <col:21> 'double' <LValueToRValue>
    | |       | `-DeclRefExpr 0x12c941ac0 <col:21> 'const double' lvalue Var 0x12c928430 'oy' 'const double'
    | |       `-ImplicitCastExpr 0x12c941b78 <col:26, col:35> 'double' <IntegralToFloating>
    | |         `-CallExpr 0x12c941b38 <col:26, col:35> 'int'
    | |           |-ImplicitCastExpr 0x12c941b20 <col:26> 'int (*)()' <FunctionToPointerDecay>
    | |           | `-DeclRefExpr 0x12c941ae0 <col:26> 'int ()' Function 0x12c941800 '_mp_arg' 'int ()'
    | |           `-IntegerLiteral 0x12c941b00 <col:34> 'int' 3
    | `-VarDecl 0x12c941c48 <line:4:9, line:7:36> col:11 used z 'const int' cinit
    |   `-CStyleCastExpr 0x12c941df8 <col:15, col:36> 'int' <FloatingToIntegral>
    |     `-ParenExpr 0x12c941dd8 <col:20, col:36> 'double'
    |       `-BinaryOperator 0x12c941d80 <col:21, col:35> 'double' '+'
    |         |-ImplicitCastExpr 0x12c941d50 <col:21> 'double' <LValueToRValue>
    |         | `-DeclRefExpr 0x12c941cb0 <col:21> 'const double' lvalue Var 0x12c928528 'oz' 'const double'
    |         `-ImplicitCastExpr 0x12c941d68 <col:26, col:35> 'double' <IntegralToFloating>
    |           `-CallExpr 0x12c941d28 <col:26, col:35> 'int'
    |             |-ImplicitCastExpr 0x12c941d10 <col:26> 'int (*)()' <FunctionToPointerDecay>
    |             | `-DeclRefExpr 0x12c941cd0 <col:26> 'int ()' Function 0x12c941800 '_mp_arg' 'int ()'
    |             `-IntegerLiteral 0x12c941cf0 <col:34> 'int' 4
    |-DeclStmt 0x12c941ef0 <line:8:9, col:36>
    | `-VarDecl 0x12c941e70 <col:9, col:17> col:17 invalid val 'const int'
    |-IfStmt 0x12d0092d0 <line:9:9, line:13:9>
    | |-BinaryOperator 0x12c9426a8 <line:9:13, col:84> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x12c9425e0 <col:13, col:67> 'int' contains-errors '&&'
    | | | |-BinaryOperator 0x12c942588 <col:13, col:59> 'int' contains-errors '&&'
    | | | | |-BinaryOperator 0x12c9424c0 <col:13, col:41> 'int' contains-errors '&&'
    | | | | | |-BinaryOperator 0x12c942468 <col:13, col:33> 'int' contains-errors '&&'
    | | | | | | |-BinaryOperator 0x12c9423a0 <col:13, col:16> 'int' '>='
    | | | | | | | |-ImplicitCastExpr 0x12c942388 <col:13> 'int' <LValueToRValue>
    | | | | | | | | `-DeclRefExpr 0x12c941f08 <col:13> 'const int' lvalue Var 0x12c928658 'x' 'const int'
    | | | | | | | `-IntegerLiteral 0x12c941f28 <col:16> 'int' 0
    | | | | | | `-BinaryOperator 0x12c942448 <col:21, col:33> 'int' contains-errors '<'
    | | | | | |   |-DeclRefExpr 0x12c941f80 <col:21> 'const int' lvalue Var 0x12c928658 'x' 'const int'
    | | | | | |   `-CallExpr 0x12c942428 <col:23, col:33> '<dependent type>' contains-errors
    | | | | | |     `-CXXDependentScopeMemberExpr 0x12c9423e0 <col:23, col:27> '<dependent type>' contains-errors lvalue .width
    | | | | | |       `-RecoveryExpr 0x12c9423c0 <col:23> '<dependent type>' contains-errors lvalue
    | | | | | `-BinaryOperator 0x12c9424a0 <col:38, col:41> 'int' '>='
    | | | | |   |-ImplicitCastExpr 0x12c942488 <col:38> 'int' <LValueToRValue>
    | | | | |   | `-DeclRefExpr 0x12c942060 <col:38> 'const int' lvalue Var 0x12c941a58 'y' 'const int'
    | | | | |   `-IntegerLiteral 0x12c942080 <col:41> 'int' 0
    | | | | `-BinaryOperator 0x12c942568 <col:46, col:59> 'int' contains-errors '<'
    | | | |   |-DeclRefExpr 0x12c9420f8 <col:46> 'const int' lvalue Var 0x12c941a58 'y' 'const int'
    | | | |   `-CallExpr 0x12c942548 <col:48, col:59> '<dependent type>' contains-errors
    | | | |     `-CXXDependentScopeMemberExpr 0x12c942500 <col:48, col:52> '<dependent type>' contains-errors lvalue .height
    | | | |       `-RecoveryExpr 0x12c9424e0 <col:48> '<dependent type>' contains-errors lvalue
    | | | `-BinaryOperator 0x12c9425c0 <col:64, col:67> 'int' '>='
    | | |   |-ImplicitCastExpr 0x12c9425a8 <col:64> 'int' <LValueToRValue>
    | | |   | `-DeclRefExpr 0x12c9421d8 <col:64> 'const int' lvalue Var 0x12c941c48 'z' 'const int'
    | | |   `-IntegerLiteral 0x12c9421f8 <col:67> 'int' 0
    | | `-BinaryOperator 0x12c942688 <col:72, col:84> 'int' contains-errors '<'
    | |   |-DeclRefExpr 0x12c942270 <col:72> 'const int' lvalue Var 0x12c941c48 'z' 'const int'
    | |   `-CallExpr 0x12c942668 <col:74, col:84> '<dependent type>' contains-errors
    | |     `-CXXDependentScopeMemberExpr 0x12c942620 <col:74, col:78> '<dependent type>' contains-errors lvalue .depth
    | |       `-RecoveryExpr 0x12c942600 <col:74> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12d0092b8 <col:87, line:13:9>
    |   `-DeclStmt 0x12d009180 <line:11:11, col:71>
    |     `-VarDecl 0x12d009118 <col:11, col:24> col:24 invalid whd 'const int'
    `-ReturnStmt 0x12d009388 <line:14:9, col:25>
      `-ImplicitCastExpr 0x12d009370 <col:16, col:25> 'double' <IntegralToFloating>
        `-CallExpr 0x12d009348 <col:16, col:25> 'int'
          |-ImplicitCastExpr 0x12d009330 <col:16> 'int (*)()' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x12d0092f0 <col:16> 'int ()' Function 0x12c941800 '_mp_arg' 'int ()'
          `-IntegerLiteral 0x12d009310 <col:24> 'int' 1
