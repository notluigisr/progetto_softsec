TranslationUnitDecl 0x140055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1400564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x140055bd0 '__int128'
|-TypedefDecl 0x140056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x140055bf0 'unsigned __int128'
|-TypedefDecl 0x140126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x140126000 'struct __NSConstantString_tag'
|   `-Record 0x140056580 '__NSConstantString_tag'
|-TypedefDecl 0x140126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x140055d90 '__SVInt8_t'
|-TypedefDecl 0x140126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x140055db0 '__SVInt16_t'
|-TypedefDecl 0x140126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x140055dd0 '__SVInt32_t'
|-TypedefDecl 0x1401263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x140055df0 '__SVInt64_t'
|-TypedefDecl 0x140126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x140055e10 '__SVUint8_t'
|-TypedefDecl 0x1401264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x140055e30 '__SVUint16_t'
|-TypedefDecl 0x140126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x140055e50 '__SVUint32_t'
|-TypedefDecl 0x140126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x140055e70 '__SVUint64_t'
|-TypedefDecl 0x1401265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x140055e90 '__SVFloat16_t'
|-TypedefDecl 0x140126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x140055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1401266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x140055ed0 '__SVFloat64_t'
|-TypedefDecl 0x140126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x140055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x140126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x140055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1401267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x140055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x140126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x140055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1401268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x140055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x140126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x140055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x140126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x140055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1401269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x140055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x140126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x140055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x140126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x140056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x140126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x140056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x140126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x140056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x140126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x140056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x140126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x140056090 '__clang_svint8x3_t'
|-TypedefDecl 0x140126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1400560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x140126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1400560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x140126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1400560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x140126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x140056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x140126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x140056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x140126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x140056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x140126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x140056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x140126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x140056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x140127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1400561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x140127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1400561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1401278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1400561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x140127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x140056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1401279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x140056230 '__clang_svint16x4_t'
|-TypedefDecl 0x140127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x140056250 '__clang_svint32x4_t'
|-TypedefDecl 0x140127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x140056270 '__clang_svint64x4_t'
|-TypedefDecl 0x140127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x140056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x140127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1400562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x140127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1400562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x140127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1400562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x140127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x140056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x140127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x140056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x140127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x140056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x140127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x140056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x140127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x140056390 '__SVBool_t'
|-TypedefDecl 0x140127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1400563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x140127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1400563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x140127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1400563f0 '__SVCount_t'
|-TypedefDecl 0x140127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x140127fb0 'char *'
|   `-BuiltinType 0x1400556b0 'char'
|-TypedefDecl 0x140128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x140127fb0 'char *'
|   `-BuiltinType 0x1400556b0 'char'
|-FunctionDecl 0x1401281a0 <dataset_diviso_filec/func7553_nonvuln.c:1:1, line:12:1> line:1:13 strip_line 'void (char *)' static
| |-ParmVarDecl 0x1401280d8 <col:24, col:30> col:30 used line 'char *'
| `-CompoundStmt 0x1401435a0 <line:2:1, line:12:1>
|   |-DeclStmt 0x140140cf8 <line:3:2, col:29>
|   | `-VarDecl 0x1401282b0 <col:2, col:28> col:8 used s 'char *' cinit
|   |   `-CallExpr 0x140140c98 <col:12, col:28> 'char *'
|   |     |-ImplicitCastExpr 0x140140c80 <col:12> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x140140be0 <col:12> 'char *(const char *, int)' Function 0x140140a00 'strchr' 'char *(const char *, int)'
|   |     |-ImplicitCastExpr 0x140140ce0 <col:19> 'const char *' <NoOp>
|   |     | `-ImplicitCastExpr 0x140140cc8 <col:19> 'char *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x140140c00 <col:19> 'char *' lvalue ParmVar 0x1401280d8 'line' 'char *'
|   |     `-CharacterLiteral 0x140140c20 <col:25> 'int' 35
|   |-IfStmt 0x140140e88 <line:4:2, line:5:10>
|   | |-BinaryOperator 0x140140da0 <line:4:6, col:11> 'int' contains-errors '!='
|   | | |-DeclRefExpr 0x140140d10 <col:6> 'char *' lvalue Var 0x1401282b0 's' 'char *'
|   | | `-RecoveryExpr 0x140140d80 <col:11> '<dependent type>' contains-errors lvalue
|   | `-BinaryOperator 0x140140e68 <line:5:3, col:10> 'char' '='
|   |   |-ArraySubscriptExpr 0x140140e18 <col:3, col:6> 'char' lvalue
|   |   | |-ImplicitCastExpr 0x140140e00 <col:3> 'char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x140140dc0 <col:3> 'char *' lvalue Var 0x1401282b0 's' 'char *'
|   |   | `-IntegerLiteral 0x140140de0 <col:5> 'int' 0
|   |   `-ImplicitCastExpr 0x140140e50 <col:10> 'char' <IntegralCast>
|   |     `-CharacterLiteral 0x140140e38 <col:10> 'int' 0
|   |-ForStmt 0x140141668 <line:6:2, line:7:53>
|   | |-BinaryOperator 0x140141208 <line:6:7, col:33> 'char *' '='
|   | | |-DeclRefExpr 0x140140ea8 <col:7> 'char *' lvalue Var 0x1401282b0 's' 'char *'
|   | | `-BinaryOperator 0x1401411e8 <col:11, col:33> 'char *' '-'
|   | |   |-BinaryOperator 0x1401411a8 <col:11, col:29> 'char *' '+'
|   | |   | |-ImplicitCastExpr 0x140141190 <col:11> 'char *' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x140140ec8 <col:11> 'char *' lvalue ParmVar 0x1401280d8 'line' 'char *'
|   | |   | `-CallExpr 0x140141138 <col:18, col:29> 'unsigned long'
|   | |   |   |-ImplicitCastExpr 0x140141120 <col:18> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   | |   |   | `-DeclRefExpr 0x140141098 <col:18> 'unsigned long (const char *)' Function 0x140140f28 'strlen' 'unsigned long (const char *)'
|   | |   |   `-ImplicitCastExpr 0x140141178 <col:25> 'const char *' <NoOp>
|   | |   |     `-ImplicitCastExpr 0x140141160 <col:25> 'char *' <LValueToRValue>
|   | |   |       `-DeclRefExpr 0x1401410b8 <col:25> 'char *' lvalue ParmVar 0x1401280d8 'line' 'char *'
|   | |   `-IntegerLiteral 0x1401411c8 <col:33> 'int' 1
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x140141608 <line:7:7, col:46> 'int' '&&'
|   | | |-BinaryOperator 0x140141298 <col:7, col:12> 'int' '>='
|   | | | |-ImplicitCastExpr 0x140141268 <col:7> 'char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x140141228 <col:7> 'char *' lvalue Var 0x1401282b0 's' 'char *'
|   | | | `-ImplicitCastExpr 0x140141280 <col:12> 'char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x140141248 <col:12> 'char *' lvalue ParmVar 0x1401280d8 'line' 'char *'
|   | | `-CallExpr 0x1401415c8 <col:20, col:46> 'int'
|   | |   |-ImplicitCastExpr 0x1401415b0 <col:20> 'int (*)(int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x1401414b8 <col:20> 'int (int)' Function 0x1401412f8 'isspace' 'int (int)'
|   | |   `-ImplicitCastExpr 0x1401415f0 <col:28, col:45> 'int' <IntegralCast>
|   | |     `-CStyleCastExpr 0x140141558 <col:28, col:45> 'unsigned char' <IntegralCast>
|   | |       `-ImplicitCastExpr 0x140141540 <col:44, col:45> 'char' <LValueToRValue> part_of_explicit_cast
|   | |         `-UnaryOperator 0x140141510 <col:44, col:45> 'char' lvalue prefix '*' cannot overflow
|   | |           `-ImplicitCastExpr 0x1401414f8 <col:45> 'char *' <LValueToRValue>
|   | |             `-DeclRefExpr 0x1401414d8 <col:45> 'char *' lvalue Var 0x1401282b0 's' 'char *'
|   | |-UnaryOperator 0x140141648 <col:49, col:50> 'char *' postfix '--'
|   | | `-DeclRefExpr 0x140141628 <col:49> 'char *' lvalue Var 0x1401282b0 's' 'char *'
|   | `-NullStmt 0x140141660 <col:53>
|   |-BinaryOperator 0x140141748 <line:8:2, col:9> 'char' '='
|   | |-ArraySubscriptExpr 0x1401416f8 <col:2, col:5> 'char' lvalue
|   | | |-ImplicitCastExpr 0x1401416e0 <col:2> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1401416a0 <col:2> 'char *' lvalue Var 0x1401282b0 's' 'char *'
|   | | `-IntegerLiteral 0x1401416c0 <col:4> 'int' 1
|   | `-ImplicitCastExpr 0x140141730 <col:9> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x140141718 <col:9> 'int' 0
|   |-ForStmt 0x140141940 <line:9:2, col:50>
|   | |-BinaryOperator 0x1401417c0 <col:7, col:11> 'char *' '='
|   | | |-DeclRefExpr 0x140141768 <col:7> 'char *' lvalue Var 0x1401282b0 's' 'char *'
|   | | `-ImplicitCastExpr 0x1401417a8 <col:11> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x140141788 <col:11> 'char *' lvalue ParmVar 0x1401280d8 'line' 'char *'
|   | |-<<<NULL>>>
|   | |-CallExpr 0x1401418c0 <col:17, col:43> 'int'
|   | | |-ImplicitCastExpr 0x1401418a8 <col:17> 'int (*)(int)' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x1401417e0 <col:17> 'int (int)' Function 0x1401412f8 'isspace' 'int (int)'
|   | | `-ImplicitCastExpr 0x1401418e8 <col:25, col:42> 'int' <IntegralCast>
|   | |   `-CStyleCastExpr 0x140141880 <col:25, col:42> 'unsigned char' <IntegralCast>
|   | |     `-ImplicitCastExpr 0x140141868 <col:41, col:42> 'char' <LValueToRValue> part_of_explicit_cast
|   | |       `-UnaryOperator 0x140141838 <col:41, col:42> 'char' lvalue prefix '*' cannot overflow
|   | |         `-ImplicitCastExpr 0x140141820 <col:42> 'char *' <LValueToRValue>
|   | |           `-DeclRefExpr 0x140141800 <col:42> 'char *' lvalue Var 0x1401282b0 's' 'char *'
|   | |-UnaryOperator 0x140141920 <col:46, col:47> 'char *' postfix '++'
|   | | `-DeclRefExpr 0x140141900 <col:46> 'char *' lvalue Var 0x1401282b0 's' 'char *'
|   | `-NullStmt 0x140141938 <col:50>
|   `-IfStmt 0x140143580 <line:10:2, line:11:31>
|     |-BinaryOperator 0x140143000 <line:10:6, col:11> 'int' '!='
|     | |-ImplicitCastExpr 0x1401419b8 <col:6> 'char *' <LValueToRValue>
|     | | `-DeclRefExpr 0x140141978 <col:6> 'char *' lvalue Var 0x1401282b0 's' 'char *'
|     | `-ImplicitCastExpr 0x1401419d0 <col:11> 'char *' <LValueToRValue>
|     |   `-DeclRefExpr 0x140141998 <col:11> 'char *' lvalue ParmVar 0x1401280d8 'line' 'char *'
|     `-CallExpr 0x1401434e8 <line:11:3, col:31> 'void *'
|       |-ImplicitCastExpr 0x1401434d0 <col:3> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1401432e8 <col:3> 'void *(void *, const void *, unsigned long)' Function 0x140143098 'memmove' 'void *(void *, const void *, unsigned long)'
|       |-ImplicitCastExpr 0x140143538 <col:11> 'void *' <BitCast>
|       | `-ImplicitCastExpr 0x140143520 <col:11> 'char *' <LValueToRValue>
|       |   `-DeclRefExpr 0x140143308 <col:11> 'char *' lvalue ParmVar 0x1401280d8 'line' 'char *'
|       |-ImplicitCastExpr 0x140143568 <col:17> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x140143550 <col:17> 'char *' <LValueToRValue>
|       |   `-DeclRefExpr 0x140143328 <col:17> 'char *' lvalue Var 0x1401282b0 's' 'char *'
|       `-BinaryOperator 0x140143448 <col:20, col:30> 'unsigned long' '+'
|         |-CallExpr 0x1401433b8 <col:20, col:28> 'unsigned long'
|         | |-ImplicitCastExpr 0x1401433a0 <col:20> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x140143348 <col:20> 'unsigned long (const char *)' Function 0x140140f28 'strlen' 'unsigned long (const char *)'
|         | `-ImplicitCastExpr 0x1401433f8 <col:27> 'const char *' <NoOp>
|         |   `-ImplicitCastExpr 0x1401433e0 <col:27> 'char *' <LValueToRValue>
|         |     `-DeclRefExpr 0x140143368 <col:27> 'char *' lvalue Var 0x1401282b0 's' 'char *'
|         `-ImplicitCastExpr 0x140143430 <col:30> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x140143410 <col:30> 'int' 1
|-FunctionDecl 0x140140a00 <line:3:12> col:12 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x140140b00 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x140140b68 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x140140aa8 <<invalid sloc>> Implicit 893
|-FunctionDecl 0x140140f28 <line:6:18> col:18 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x140141028 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x140140fd0 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x1401412f8 <line:7:20> col:20 implicit used isspace 'int (int)' extern
| |-ParmVarDecl 0x1401413f8 <<invalid sloc>> <invalid sloc> 'int'
| |-BuiltinAttr 0x1401413a0 <<invalid sloc>> Implicit 929
| |-NoThrowAttr 0x140141468 <col:20> Implicit
| `-PureAttr 0x140141490 <col:20> Implicit
`-FunctionDecl 0x140143098 <line:11:3> col:3 implicit used memmove 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x140143198 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x140143200 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x140143268 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x140143140 <<invalid sloc>> Implicit 884
