TranslationUnitDecl 0x138855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1388564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x138855bd0 '__int128'
|-TypedefDecl 0x138856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x138855bf0 'unsigned __int128'
|-TypedefDecl 0x138926630 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x138926400 'struct __NSConstantString_tag'
|   `-Record 0x138856580 '__NSConstantString_tag'
|-TypedefDecl 0x138926698 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x138855d90 '__SVInt8_t'
|-TypedefDecl 0x138926700 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x138855db0 '__SVInt16_t'
|-TypedefDecl 0x138926768 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x138855dd0 '__SVInt32_t'
|-TypedefDecl 0x1389267d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x138855df0 '__SVInt64_t'
|-TypedefDecl 0x138926838 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x138855e10 '__SVUint8_t'
|-TypedefDecl 0x1389268a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x138855e30 '__SVUint16_t'
|-TypedefDecl 0x138926908 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x138855e50 '__SVUint32_t'
|-TypedefDecl 0x138926970 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x138855e70 '__SVUint64_t'
|-TypedefDecl 0x1389269d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x138855e90 '__SVFloat16_t'
|-TypedefDecl 0x138926a40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x138855eb0 '__SVFloat32_t'
|-TypedefDecl 0x138926aa8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x138855ed0 '__SVFloat64_t'
|-TypedefDecl 0x138926b10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x138855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x138926b78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x138855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x138926be0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x138855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x138926c48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x138855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x138926cb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x138855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x138926d18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x138855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x138926d80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x138855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x138926de8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x138855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x138926e50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x138855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x138926eb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x138856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x138926f20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x138856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x138926f88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x138856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x138926ff0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x138856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x138927058 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x138856090 '__clang_svint8x3_t'
|-TypedefDecl 0x1389270c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1388560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x138927128 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1388560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x138927190 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1388560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1389271f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x138856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x138927260 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x138856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1389272c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x138856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x138927330 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x138856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x138927398 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x138856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x138927c00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1388561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x138927c68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1388561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x138927cd0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1388561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x138927d38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x138856210 '__clang_svint8x4_t'
|-TypedefDecl 0x138927da0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x138856230 '__clang_svint16x4_t'
|-TypedefDecl 0x138927e08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x138856250 '__clang_svint32x4_t'
|-TypedefDecl 0x138927e70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x138856270 '__clang_svint64x4_t'
|-TypedefDecl 0x138927ed8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x138856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x138927f40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1388562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x138927fa8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1388562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x138928010 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1388562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x138928078 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x138856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1389280e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x138856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x138928148 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x138856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1389281b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x138856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x138928218 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x138856390 '__SVBool_t'
|-TypedefDecl 0x138928280 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1388563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1389282e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1388563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x138928350 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1388563f0 '__SVCount_t'
|-TypedefDecl 0x1389283f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1389283b0 'char *'
|   `-BuiltinType 0x1388556b0 'char'
|-TypedefDecl 0x138928468 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1389283b0 'char *'
|   `-BuiltinType 0x1388556b0 'char'
|-FunctionDecl 0x138941d48 <dataset_diviso_filec/func8631_nonvuln.c:1:1, line:53:1> line:1:1 invalid m4_translit 'int (struct obstack *, int, int **)'
| |-ParmVarDecl 0x138928a48 <col:14, col:30> col:30 used obs 'struct obstack *'
| |-ParmVarDecl 0x138928ac8 <col:35, col:39> col:39 used argc 'int'
| |-ParmVarDecl 0x138941c00 <col:45, col:58> col:58 invalid argv 'int **'
| `-CompoundStmt 0x138944ec0 <line:2:1, line:53:1>
|   |-DeclStmt 0x138941e88 <line:3:3, col:19>
|   | `-VarDecl 0x138941e20 <col:3, col:15> col:15 used data 'const char *'
|   |-DeclStmt 0x138941f20 <line:4:3, col:19>
|   | `-VarDecl 0x138941eb8 <col:3, col:15> col:15 used from 'const char *'
|   |-DeclStmt 0x138941fb8 <line:5:3, col:17>
|   | `-VarDecl 0x138941f50 <col:3, col:15> col:15 used to 'const char *'
|   |-DeclStmt 0x1389421c0 <line:6:3, col:22>
|   | `-VarDecl 0x138942070 <col:3, col:21> col:8 used map 'char[256]' cinit
|   |   `-InitListExpr 0x138942150 <col:19, col:21> 'char[256]'
|   |     |-array_filler: ImplicitValueInitExpr 0x1389421b0 <<invalid sloc>> 'char'
|   |     `-ImplicitCastExpr 0x138942190 <col:20> 'char' <IntegralCast>
|   |       `-IntegerLiteral 0x1389420d8 <col:20> 'int' 0
|   |-DeclStmt 0x138942388 <line:7:3, col:24>
|   | `-VarDecl 0x138942238 <col:3, col:23> col:8 used found 'char[256]' cinit
|   |   `-InitListExpr 0x138942318 <col:21, col:23> 'char[256]'
|   |     |-array_filler: ImplicitValueInitExpr 0x138942378 <<invalid sloc>> 'char'
|   |     `-ImplicitCastExpr 0x138942358 <col:22> 'char' <IntegralCast>
|   |       `-IntegerLiteral 0x1389422a0 <col:22> 'int' 0
|   |-DeclStmt 0x138942420 <line:8:3, col:19>
|   | `-VarDecl 0x1389423b8 <col:3, col:17> col:17 used ch 'unsigned char'
|   |-IfStmt 0x138942d80 <line:10:3, line:16:5>
|   | |-CallExpr 0x138942688 <line:10:7, col:36> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x138942590 <col:7> 'int ()' Function 0x1389424d8 'bad_argc' 'int ()'
|   | | |-ArraySubscriptExpr 0x138942608 <col:17, col:23> '<dependent type>' contains-errors lvalue
|   | | | |-ImplicitCastExpr 0x1389425f0 <col:17> '<dependent type>' contains-errors <LValueToRValue>
|   | | | | `-RecoveryExpr 0x1389425b0 <col:17> '<dependent type>' contains-errors lvalue
|   | | | `-IntegerLiteral 0x1389425d0 <col:22> 'int' 0
|   | | |-DeclRefExpr 0x138942628 <col:26> 'int' lvalue ParmVar 0x138928ac8 'argc' 'int'
|   | | |-IntegerLiteral 0x138942648 <col:32> 'int' 3
|   | | `-IntegerLiteral 0x138942668 <col:35> 'int' 4
|   | `-CompoundStmt 0x138942d60 <line:11:5, line:16:5>
|   |   |-IfStmt 0x138942d30 <line:13:7, line:14:46>
|   |   | |-BinaryOperator 0x138942720 <line:13:11, col:19> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x138942708 <col:11> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1389426c8 <col:11> 'int' lvalue ParmVar 0x138928ac8 'argc' 'int'
|   |   | | `-IntegerLiteral 0x1389426e8 <col:19> 'int' 2
|   |   | `-CallExpr 0x138942ce0 <line:14:2, col:46> 'int'
|   |   |   |-ImplicitCastExpr 0x138942cc8 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x138942820 <col:2> 'int ()' Function 0x138942768 'obstack_grow' 'int ()'
|   |   |   |-ImplicitCastExpr 0x138942d18 <col:16> 'struct obstack *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x138942840 <col:16> 'struct obstack *' lvalue ParmVar 0x138928a48 'obs' 'struct obstack *'
|   |   |   |-CallExpr 0x1389429c8 <col:21, col:27> 'int'
|   |   |   | |-ImplicitCastExpr 0x1389429b0 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x138942940 <col:21> 'int ()' Function 0x138942888 'ARG' 'int ()'
|   |   |   | `-IntegerLiteral 0x138942960 <col:26> 'int' 1
|   |   |   `-CallExpr 0x138942c88 <col:30, col:45> 'unsigned long'
|   |   |     |-ImplicitCastExpr 0x138942c70 <col:30> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x138942b98 <col:30> 'unsigned long (const char *)' Function 0x138942a28 'strlen' 'unsigned long (const char *)'
|   |   |     `-ImplicitCastExpr 0x138942cb0 <col:38, col:44> 'const char *' <IntegralToPointer>
|   |   |       `-CallExpr 0x138942c18 <col:38, col:44> 'int'
|   |   |         |-ImplicitCastExpr 0x138942c00 <col:38> 'int (*)()' <FunctionToPointerDecay>
|   |   |         | `-DeclRefExpr 0x138942bb8 <col:38> 'int ()' Function 0x138942888 'ARG' 'int ()'
|   |   |         `-IntegerLiteral 0x138942bd8 <col:43> 'int' 1
|   |   `-ReturnStmt 0x138942d50 <line:15:7>
|   |-BinaryOperator 0x138942e58 <line:18:3, col:16> 'const char *' '='
|   | |-DeclRefExpr 0x138942da0 <col:3> 'const char *' lvalue Var 0x138941eb8 'from' 'const char *'
|   | `-ImplicitCastExpr 0x138942e40 <col:10, col:16> 'const char *' <IntegralToPointer>
|   |   `-CallExpr 0x138942e18 <col:10, col:16> 'int'
|   |     |-ImplicitCastExpr 0x138942e00 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x138942dc0 <col:10> 'int ()' Function 0x138942888 'ARG' 'int ()'
|   |     `-IntegerLiteral 0x138942de0 <col:15> 'int' 2
|   |-IfStmt 0x138943600 <line:19:3, line:24:5>
|   | |-BinaryOperator 0x1389432e8 <line:19:7, col:29> 'int' contains-errors '!='
|   | | |-CallExpr 0x138943280 <col:7, col:24> 'char *'
|   | | | |-ImplicitCastExpr 0x138943268 <col:7> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x1389430a0 <col:7> 'char *(const char *, int)' Function 0x138942ec0 'strchr' 'char *(const char *, int)'
|   | | | |-ImplicitCastExpr 0x1389432b0 <col:15> 'const char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1389430c0 <col:15> 'const char *' lvalue Var 0x138941eb8 'from' 'const char *'
|   | | | `-CharacterLiteral 0x1389430e0 <col:21> 'int' 45
|   | | `-RecoveryExpr 0x1389432c8 <col:29> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x1389435e0 <line:20:5, line:24:5>
|   |   |-BinaryOperator 0x1389434f8 <line:21:7, col:38> 'const char *' '='
|   |   | |-DeclRefExpr 0x138943308 <col:7> 'const char *' lvalue Var 0x138941eb8 'from' 'const char *'
|   |   | `-ImplicitCastExpr 0x1389434e0 <col:14, col:38> 'const char *' <IntegralToPointer>
|   |   |   `-CallExpr 0x138943480 <col:14, col:38> 'int'
|   |   |     |-ImplicitCastExpr 0x138943468 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x138943408 <col:14> 'int ()' Function 0x138943350 'expand_ranges' 'int ()'
|   |   |     |-ImplicitCastExpr 0x1389434b0 <col:29> 'const char *' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x138943428 <col:29> 'const char *' lvalue Var 0x138941eb8 'from' 'const char *'
|   |   |     `-ImplicitCastExpr 0x1389434c8 <col:35> 'struct obstack *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x138943448 <col:35> 'struct obstack *' lvalue ParmVar 0x138928a48 'obs' 'struct obstack *'
|   |   `-IfStmt 0x1389435c0 <line:22:7, line:23:2>
|   |     |-BinaryOperator 0x138943590 <line:22:11, col:19> 'int' contains-errors '=='
|   |     | |-DeclRefExpr 0x138943518 <col:11> 'const char *' lvalue Var 0x138941eb8 'from' 'const char *'
|   |     | `-RecoveryExpr 0x138943570 <col:19> '<dependent type>' contains-errors lvalue
|   |     `-ReturnStmt 0x1389435b0 <line:23:2>
|   |-BinaryOperator 0x1389436d8 <line:26:3, col:14> 'const char *' '='
|   | |-DeclRefExpr 0x138943620 <col:3> 'const char *' lvalue Var 0x138941f50 'to' 'const char *'
|   | `-ImplicitCastExpr 0x1389436c0 <col:8, col:14> 'const char *' <IntegralToPointer>
|   |   `-CallExpr 0x138943698 <col:8, col:14> 'int'
|   |     |-ImplicitCastExpr 0x138943680 <col:8> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x138943640 <col:8> 'int ()' Function 0x138942888 'ARG' 'int ()'
|   |     `-IntegerLiteral 0x138943660 <col:13> 'int' 3
|   |-IfStmt 0x138943b48 <line:27:3, line:32:5>
|   | |-BinaryOperator 0x138943910 <line:27:7, col:27> 'int' contains-errors '!='
|   | | |-CallExpr 0x1389438a8 <col:7, col:22> 'char *'
|   | | | |-ImplicitCastExpr 0x138943890 <col:7> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x1389436f8 <col:7> 'char *(const char *, int)' Function 0x138942ec0 'strchr' 'char *(const char *, int)'
|   | | | |-ImplicitCastExpr 0x1389438d8 <col:15> 'const char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x138943718 <col:15> 'const char *' lvalue Var 0x138941f50 'to' 'const char *'
|   | | | `-CharacterLiteral 0x138943738 <col:19> 'int' 45
|   | | `-RecoveryExpr 0x1389438f0 <col:27> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x138943b28 <line:28:5, line:32:5>
|   |   |-BinaryOperator 0x138943a40 <line:29:7, col:34> 'const char *' '='
|   |   | |-DeclRefExpr 0x138943930 <col:7> 'const char *' lvalue Var 0x138941f50 'to' 'const char *'
|   |   | `-ImplicitCastExpr 0x138943a28 <col:12, col:34> 'const char *' <IntegralToPointer>
|   |   |   `-CallExpr 0x1389439c8 <col:12, col:34> 'int'
|   |   |     |-ImplicitCastExpr 0x1389439b0 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x138943950 <col:12> 'int ()' Function 0x138943350 'expand_ranges' 'int ()'
|   |   |     |-ImplicitCastExpr 0x1389439f8 <col:27> 'const char *' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x138943970 <col:27> 'const char *' lvalue Var 0x138941f50 'to' 'const char *'
|   |   |     `-ImplicitCastExpr 0x138943a10 <col:31> 'struct obstack *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x138943990 <col:31> 'struct obstack *' lvalue ParmVar 0x138928a48 'obs' 'struct obstack *'
|   |   `-IfStmt 0x138943b08 <line:30:7, line:31:2>
|   |     |-BinaryOperator 0x138943ad8 <line:30:11, col:17> 'int' contains-errors '=='
|   |     | |-DeclRefExpr 0x138943a60 <col:11> 'const char *' lvalue Var 0x138941f50 'to' 'const char *'
|   |     | `-RecoveryExpr 0x138943ab8 <col:17> '<dependent type>' contains-errors lvalue
|   |     `-ReturnStmt 0x138943af8 <line:31:2>
|   |-ForStmt 0x138944710 <line:35:3, line:44:5>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x138944288 <line:35:11, col:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x138944270 <col:11, col:22> 'int' <IntegralCast>
|   | | | `-ParenExpr 0x138944238 <col:11, col:22> 'unsigned char'
|   | | |   `-BinaryOperator 0x138944218 <col:12, col:18> 'unsigned char' '='
|   | | |     |-DeclRefExpr 0x138943b68 <col:12> 'unsigned char' lvalue Var 0x1389423b8 'ch' 'unsigned char'
|   | | |     `-ImplicitCastExpr 0x138944200 <col:17, col:18> 'unsigned char' <IntegralCast>
|   | | |       `-ImplicitCastExpr 0x138943bd8 <col:17, col:18> 'char' <LValueToRValue>
|   | | |         `-UnaryOperator 0x138943bc0 <col:17, col:18> 'const char' lvalue prefix '*' cannot overflow
|   | | |           `-ImplicitCastExpr 0x138943ba8 <col:18> 'const char *' <LValueToRValue>
|   | | |             `-DeclRefExpr 0x138943b88 <col:18> 'const char *' lvalue Var 0x138941eb8 'from' 'const char *'
|   | | `-CharacterLiteral 0x138944258 <col:27> 'int' 0
|   | |-UnaryOperator 0x1389442c8 <col:33, col:37> 'const char *' postfix '++'
|   | | `-DeclRefExpr 0x1389442a8 <col:33> 'const char *' lvalue Var 0x138941eb8 'from' 'const char *'
|   | `-CompoundStmt 0x1389446f0 <line:36:5, line:44:5>
|   |   |-IfStmt 0x1389445c0 <line:37:7, line:41:2>
|   |   | |-UnaryOperator 0x138944388 <line:37:11, col:21> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x138944370 <col:13, col:21> 'char' <LValueToRValue>
|   |   | |   `-ArraySubscriptExpr 0x138944350 <col:13, col:21> 'char' lvalue
|   |   | |     |-ImplicitCastExpr 0x138944320 <col:13> 'char *' <ArrayToPointerDecay>
|   |   | |     | `-DeclRefExpr 0x1389442e0 <col:13> 'char[256]' lvalue Var 0x138942238 'found' 'char[256]'
|   |   | |     `-ImplicitCastExpr 0x138944338 <col:19> 'unsigned char' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x138944300 <col:19> 'unsigned char' lvalue Var 0x1389423b8 'ch' 'unsigned char'
|   |   | `-CompoundStmt 0x1389445a0 <line:38:2, line:41:2>
|   |   |   |-BinaryOperator 0x138944468 <line:39:4, col:16> 'char' '='
|   |   |   | |-ArraySubscriptExpr 0x138944410 <col:4, col:12> 'char' lvalue
|   |   |   | | |-ImplicitCastExpr 0x1389443e0 <col:4> 'char *' <ArrayToPointerDecay>
|   |   |   | | | `-DeclRefExpr 0x1389443a0 <col:4> 'char[256]' lvalue Var 0x138942238 'found' 'char[256]'
|   |   |   | | `-ImplicitCastExpr 0x1389443f8 <col:10> 'unsigned char' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1389443c0 <col:10> 'unsigned char' lvalue Var 0x1389423b8 'ch' 'unsigned char'
|   |   |   | `-ImplicitCastExpr 0x138944450 <col:16> 'char' <IntegralCast>
|   |   |   |   `-IntegerLiteral 0x138944430 <col:16> 'int' 1
|   |   |   `-BinaryOperator 0x138944580 <line:40:4, col:15> 'char' '='
|   |   |     |-ArraySubscriptExpr 0x1389444f8 <col:4, col:10> 'char' lvalue
|   |   |     | |-ImplicitCastExpr 0x1389444c8 <col:4> 'char *' <ArrayToPointerDecay>
|   |   |     | | `-DeclRefExpr 0x138944488 <col:4> 'char[256]' lvalue Var 0x138942070 'map' 'char[256]'
|   |   |     | `-ImplicitCastExpr 0x1389444e0 <col:8> 'unsigned char' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x1389444a8 <col:8> 'unsigned char' lvalue Var 0x1389423b8 'ch' 'unsigned char'
|   |   |     `-ImplicitCastExpr 0x138944568 <col:14, col:15> 'char' <LValueToRValue>
|   |   |       `-UnaryOperator 0x138944550 <col:14, col:15> 'const char' lvalue prefix '*' cannot overflow
|   |   |         `-ImplicitCastExpr 0x138944538 <col:15> 'const char *' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x138944518 <col:15> 'const char *' lvalue Var 0x138941f50 'to' 'const char *'
|   |   `-IfStmt 0x1389446d0 <line:42:7, line:43:4>
|   |     |-BinaryOperator 0x138944678 <line:42:11, col:18> 'int' '!='
|   |     | |-ImplicitCastExpr 0x138944660 <col:11, col:12> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x138944648 <col:11, col:12> 'char' <LValueToRValue>
|   |     | |   `-UnaryOperator 0x138944618 <col:11, col:12> 'const char' lvalue prefix '*' cannot overflow
|   |     | |     `-ImplicitCastExpr 0x138944600 <col:12> 'const char *' <LValueToRValue>
|   |     | |       `-DeclRefExpr 0x1389445e0 <col:12> 'const char *' lvalue Var 0x138941f50 'to' 'const char *'
|   |     | `-CharacterLiteral 0x138944630 <col:18> 'int' 0
|   |     `-UnaryOperator 0x1389446b8 <line:43:2, col:4> 'const char *' postfix '++'
|   |       `-DeclRefExpr 0x138944698 <col:2> 'const char *' lvalue Var 0x138941f50 'to' 'const char *'
|   `-ForStmt 0x138944e88 <line:46:3, line:52:5>
|     |-BinaryOperator 0x138944800 <line:46:8, col:21> 'const char *' '='
|     | |-DeclRefExpr 0x138944748 <col:8> 'const char *' lvalue Var 0x138941e20 'data' 'const char *'
|     | `-ImplicitCastExpr 0x1389447e8 <col:15, col:21> 'const char *' <IntegralToPointer>
|     |   `-CallExpr 0x1389447c0 <col:15, col:21> 'int'
|     |     |-ImplicitCastExpr 0x1389447a8 <col:15> 'int (*)()' <FunctionToPointerDecay>
|     |     | `-DeclRefExpr 0x138944768 <col:15> 'int ()' Function 0x138942888 'ARG' 'int ()'
|     |     `-IntegerLiteral 0x138944788 <col:20> 'int' 1
|     |-<<<NULL>>>
|     |-BinaryOperator 0x138944930 <col:24, col:40> 'int' '!='
|     | |-ImplicitCastExpr 0x138944918 <col:24, col:35> 'int' <IntegralCast>
|     | | `-ParenExpr 0x1389448e0 <col:24, col:35> 'unsigned char'
|     | |   `-BinaryOperator 0x1389448c0 <col:25, col:31> 'unsigned char' '='
|     | |     |-DeclRefExpr 0x138944820 <col:25> 'unsigned char' lvalue Var 0x1389423b8 'ch' 'unsigned char'
|     | |     `-ImplicitCastExpr 0x1389448a8 <col:30, col:31> 'unsigned char' <IntegralCast>
|     | |       `-ImplicitCastExpr 0x138944890 <col:30, col:31> 'char' <LValueToRValue>
|     | |         `-UnaryOperator 0x138944878 <col:30, col:31> 'const char' lvalue prefix '*' cannot overflow
|     | |           `-ImplicitCastExpr 0x138944860 <col:31> 'const char *' <LValueToRValue>
|     | |             `-DeclRefExpr 0x138944840 <col:31> 'const char *' lvalue Var 0x138941e20 'data' 'const char *'
|     | `-CharacterLiteral 0x138944900 <col:40> 'int' 0
|     |-UnaryOperator 0x138944970 <col:46, col:50> 'const char *' postfix '++'
|     | `-DeclRefExpr 0x138944950 <col:46> 'const char *' lvalue Var 0x138941e20 'data' 'const char *'
|     `-CompoundStmt 0x138944e70 <line:47:5, line:52:5>
|       `-IfStmt 0x138944e40 <line:48:7, line:51:29> has_else
|         |-UnaryOperator 0x138944a30 <line:48:11, col:21> 'int' prefix '!' cannot overflow
|         | `-ImplicitCastExpr 0x138944a18 <col:13, col:21> 'char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x1389449f8 <col:13, col:21> 'char' lvalue
|         |     |-ImplicitCastExpr 0x1389449c8 <col:13> 'char *' <ArrayToPointerDecay>
|         |     | `-DeclRefExpr 0x138944988 <col:13> 'char[256]' lvalue Var 0x138942238 'found' 'char[256]'
|         |     `-ImplicitCastExpr 0x1389449e0 <col:19> 'unsigned char' <LValueToRValue>
|         |       `-DeclRefExpr 0x1389449a8 <col:19> 'unsigned char' lvalue Var 0x1389423b8 'ch' 'unsigned char'
|         |-CallExpr 0x138944ba0 <line:49:2, col:24> 'int'
|         | |-ImplicitCastExpr 0x138944b88 <col:2> 'int (*)()' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x138944b28 <col:2> 'int ()' Function 0x138944a70 'obstack_1grow' 'int ()'
|         | |-ImplicitCastExpr 0x138944bd0 <col:17> 'struct obstack *' <LValueToRValue>
|         | | `-DeclRefExpr 0x138944b48 <col:17> 'struct obstack *' lvalue ParmVar 0x138928a48 'obs' 'struct obstack *'
|         | `-ImplicitCastExpr 0x138944c00 <col:22> 'int' <IntegralCast>
|         |   `-ImplicitCastExpr 0x138944be8 <col:22> 'unsigned char' <LValueToRValue>
|         |     `-DeclRefExpr 0x138944b68 <col:22> 'unsigned char' lvalue Var 0x1389423b8 'ch' 'unsigned char'
|         `-IfStmt 0x138944e20 <line:50:12, line:51:29>
|           |-ImplicitCastExpr 0x138944ca8 <line:50:16, col:22> 'char' <LValueToRValue>
|           | `-ArraySubscriptExpr 0x138944c88 <col:16, col:22> 'char' lvalue
|           |   |-ImplicitCastExpr 0x138944c58 <col:16> 'char *' <ArrayToPointerDecay>
|           |   | `-DeclRefExpr 0x138944c18 <col:16> 'char[256]' lvalue Var 0x138942070 'map' 'char[256]'
|           |   `-ImplicitCastExpr 0x138944c70 <col:20> 'unsigned char' <LValueToRValue>
|           |     `-DeclRefExpr 0x138944c38 <col:20> 'unsigned char' lvalue Var 0x1389423b8 'ch' 'unsigned char'
|           `-CallExpr 0x138944da8 <line:51:2, col:29> 'int'
|             |-ImplicitCastExpr 0x138944d90 <col:2> 'int (*)()' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x138944cc0 <col:2> 'int ()' Function 0x138944a70 'obstack_1grow' 'int ()'
|             |-ImplicitCastExpr 0x138944dd8 <col:17> 'struct obstack *' <LValueToRValue>
|             | `-DeclRefExpr 0x138944ce0 <col:17> 'struct obstack *' lvalue ParmVar 0x138928a48 'obs' 'struct obstack *'
|             `-ImplicitCastExpr 0x138944e08 <col:22, col:28> 'int' <IntegralCast>
|               `-ImplicitCastExpr 0x138944df0 <col:22, col:28> 'char' <LValueToRValue>
|                 `-ArraySubscriptExpr 0x138944d70 <col:22, col:28> 'char' lvalue
|                   |-ImplicitCastExpr 0x138944d40 <col:22> 'char *' <ArrayToPointerDecay>
|                   | `-DeclRefExpr 0x138944d00 <col:22> 'char[256]' lvalue Var 0x138942070 'map' 'char[256]'
|                   `-ImplicitCastExpr 0x138944d58 <col:26> 'unsigned char' <LValueToRValue>
|                     `-DeclRefExpr 0x138944d20 <col:26> 'unsigned char' lvalue Var 0x1389423b8 'ch' 'unsigned char'
|-FunctionDecl 0x138942a28 <line:14:30> col:30 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x138942b28 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x138942ad0 <<invalid sloc>> Implicit 902
`-FunctionDecl 0x138942ec0 <line:19:7> col:7 implicit used strchr 'char *(const char *, int)' extern
  |-ParmVarDecl 0x138942fc0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x138943028 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x138942f68 <<invalid sloc>> Implicit 893
