TranslationUnitDecl 0x14d828008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14d828eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14d8285d0 '__int128'
|-TypedefDecl 0x14d828f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14d8285f0 'unsigned __int128'
|-TypedefDecl 0x14d03b630 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14d03b400 'struct __NSConstantString_tag'
|   `-Record 0x14d828f80 '__NSConstantString_tag'
|-TypedefDecl 0x14d03b698 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14d828790 '__SVInt8_t'
|-TypedefDecl 0x14d03b700 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14d8287b0 '__SVInt16_t'
|-TypedefDecl 0x14d03b768 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14d8287d0 '__SVInt32_t'
|-TypedefDecl 0x14d03b7d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14d8287f0 '__SVInt64_t'
|-TypedefDecl 0x14d03b838 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14d828810 '__SVUint8_t'
|-TypedefDecl 0x14d03b8a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14d828830 '__SVUint16_t'
|-TypedefDecl 0x14d03b908 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14d828850 '__SVUint32_t'
|-TypedefDecl 0x14d03b970 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14d828870 '__SVUint64_t'
|-TypedefDecl 0x14d03b9d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14d828890 '__SVFloat16_t'
|-TypedefDecl 0x14d03ba40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14d8288b0 '__SVFloat32_t'
|-TypedefDecl 0x14d03baa8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14d8288d0 '__SVFloat64_t'
|-TypedefDecl 0x14d03bb10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14d8288f0 '__SVBfloat16_t'
|-TypedefDecl 0x14d03bb78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14d828910 '__clang_svint8x2_t'
|-TypedefDecl 0x14d03bbe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14d828930 '__clang_svint16x2_t'
|-TypedefDecl 0x14d03bc48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14d828950 '__clang_svint32x2_t'
|-TypedefDecl 0x14d03bcb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14d828970 '__clang_svint64x2_t'
|-TypedefDecl 0x14d03bd18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14d828990 '__clang_svuint8x2_t'
|-TypedefDecl 0x14d03bd80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14d8289b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14d03bde8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14d8289d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14d03be50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14d8289f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14d03beb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14d828a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14d03bf20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14d828a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14d03bf88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14d828a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14d03bff0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14d828a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14d03c058 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14d828a90 '__clang_svint8x3_t'
|-TypedefDecl 0x14d03c0c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14d828ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x14d03c128 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14d828ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x14d03c190 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14d828af0 '__clang_svint64x3_t'
|-TypedefDecl 0x14d03c1f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14d828b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x14d03c260 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14d828b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x14d03c2c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14d828b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x14d03c330 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14d828b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x14d03c398 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14d828b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14d03c400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14d828bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14d03c468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14d828bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14d03c4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14d828bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14d03c538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14d828c10 '__clang_svint8x4_t'
|-TypedefDecl 0x14d03c5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14d828c30 '__clang_svint16x4_t'
|-TypedefDecl 0x14d03c608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14d828c50 '__clang_svint32x4_t'
|-TypedefDecl 0x14d03c670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14d828c70 '__clang_svint64x4_t'
|-TypedefDecl 0x14d03c6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14d828c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x14d03c740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14d828cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14d03c7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14d828cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14d03c810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14d828cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14d03c878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14d828d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14d03c8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14d828d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14d03c948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14d828d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14d03c9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14d828d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14d03ca18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14d828d90 '__SVBool_t'
|-TypedefDecl 0x14d03ca80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14d828db0 '__clang_svboolx2_t'
|-TypedefDecl 0x14d03cae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14d828dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x14d03cb50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14d828df0 '__SVCount_t'
|-TypedefDecl 0x14d03cbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14d03cbb0 'char *'
|   `-BuiltinType 0x14d8280b0 'char'
|-TypedefDecl 0x14d03cc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14d03cbb0 'char *'
|   `-BuiltinType 0x14d8280b0 'char'
|-FunctionDecl 0x14d03cf48 <dataset_diviso_filec/func23975_vuln.c:1:1, line:65:1> line:1:12 invalid ssl_verify_server_cert 'int (int *, const char *, const char **)' static
| |-ParmVarDecl 0x14d03cd28 <col:35, col:40> col:40 invalid vio 'int *'
| |-ParmVarDecl 0x14d03cda8 <col:45, col:57> col:57 used server_hostname 'const char *'
| |-ParmVarDecl 0x14d03ce58 <col:74, col:87> col:87 used errptr 'const char **'
| `-CompoundStmt 0x14d8f94f0 <line:2:1, line:65:1>
|   |-DeclStmt 0x14d03d150 <line:5:3, col:18>
|   | |-VarDecl 0x14d03d050 <col:3, col:9> col:9 used cp1 'char *'
|   | `-VarDecl 0x14d03d0d0 <col:3, col:15> col:15 used cp2 'char *'
|   |-DeclStmt 0x14d03d1e8 <line:6:3, col:12>
|   | `-VarDecl 0x14d03d180 <col:3, col:9> col:9 used buf 'char *'
|   |-CallExpr 0x14d8f5648 <line:7:3, col:19> 'int'
|   | |-ImplicitCastExpr 0x14d8f5630 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x14d03d360 <col:3> 'int ()' Function 0x14d03d2a8 'DBUG_ENTER' 'int ()'
|   | `-ImplicitCastExpr 0x14d8f5670 <col:14> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x14d03d3c0 <col:14> 'char[4]' lvalue "STR"
|   |-CallExpr 0x14d8f57e0 <line:8:3, col:36> 'int'
|   | |-ImplicitCastExpr 0x14d8f57c8 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x14d8f5768 <col:3> 'int ()' Function 0x14d8f56b0 'DBUG_PRINT' 'int ()'
|   | |-ImplicitCastExpr 0x14d8f5810 <col:14> 'char *' <ArrayToPointerDecay>
|   | | `-StringLiteral 0x14d8f5788 <col:14> 'char[4]' lvalue "STR"
|   | `-ImplicitCastExpr 0x14d8f5828 <col:21> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x14d8f57a8 <col:21> 'const char *' lvalue ParmVar 0x14d03cda8 'server_hostname' 'const char *'
|   |-IfStmt 0x14d8f5ad0 <line:10:3, line:14:3>
|   | |-RecoveryExpr 0x14d8f5870 <line:10:7, col:32> '_Bool' contains-errors
|   | `-CompoundStmt 0x14d8f5ab0 <line:11:3, line:14:3>
|   |   |-BinaryOperator 0x14d8f5930 <line:12:5, col:14> 'const char *' '='
|   |   | |-UnaryOperator 0x14d8f58c8 <col:5, col:6> 'const char *' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x14d8f58b0 <col:6> 'const char **' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x14d8f5890 <col:6> 'const char **' lvalue ParmVar 0x14d03ce58 'errptr' 'const char **'
|   |   | `-ImplicitCastExpr 0x14d8f5918 <col:14> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x14d8f5900 <col:14> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x14d8f58e0 <col:14> 'char[4]' lvalue "STR"
|   |   `-CallExpr 0x14d8f5a88 <line:13:5, col:18> 'int'
|   |     |-ImplicitCastExpr 0x14d8f5a70 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x14d8f5a30 <col:5> 'int ()' Function 0x14d8f5978 'DBUG_RETURN' 'int ()'
|   |     `-IntegerLiteral 0x14d8f5a50 <col:17> 'int' 1
|   |-IfStmt 0x14d8f5ca0 <line:16:3, line:20:3>
|   | |-UnaryOperator 0x14d8f5b28 <line:16:7, col:8> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x14d8f5b10 <col:8> 'const char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x14d8f5af0 <col:8> 'const char *' lvalue ParmVar 0x14d03cda8 'server_hostname' 'const char *'
|   | `-CompoundStmt 0x14d8f5c80 <line:17:3, line:20:3>
|   |   |-BinaryOperator 0x14d8f5be0 <line:18:5, col:14> 'const char *' '='
|   |   | |-UnaryOperator 0x14d8f5b78 <col:5, col:6> 'const char *' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x14d8f5b60 <col:6> 'const char **' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x14d8f5b40 <col:6> 'const char **' lvalue ParmVar 0x14d03ce58 'errptr' 'const char **'
|   |   | `-ImplicitCastExpr 0x14d8f5bc8 <col:14> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x14d8f5bb0 <col:14> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x14d8f5b90 <col:14> 'char[4]' lvalue "STR"
|   |   `-CallExpr 0x14d8f5c58 <line:19:5, col:18> 'int'
|   |     |-ImplicitCastExpr 0x14d8f5c40 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x14d8f5c00 <col:5> 'int ()' Function 0x14d8f5978 'DBUG_RETURN' 'int ()'
|   |     `-IntegerLiteral 0x14d8f5c20 <col:17> 'int' 1
|   |-IfStmt 0x14d8f5fb8 <line:22:3, line:26:3>
|   | |-RecoveryExpr 0x14d8f5e38 <line:22:7, col:51> '_Bool' contains-errors
|   | `-CompoundStmt 0x14d8f5f98 <line:23:3, line:26:3>
|   |   |-BinaryOperator 0x14d8f5ef8 <line:24:5, col:14> 'const char *' '='
|   |   | |-UnaryOperator 0x14d8f5e90 <col:5, col:6> 'const char *' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x14d8f5e78 <col:6> 'const char **' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x14d8f5e58 <col:6> 'const char **' lvalue ParmVar 0x14d03ce58 'errptr' 'const char **'
|   |   | `-ImplicitCastExpr 0x14d8f5ee0 <col:14> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x14d8f5ec8 <col:14> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x14d8f5ea8 <col:14> 'char[4]' lvalue "STR"
|   |   `-CallExpr 0x14d8f5f70 <line:25:5, col:18> 'int'
|   |     |-ImplicitCastExpr 0x14d8f5f58 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x14d8f5f18 <col:5> 'int ()' Function 0x14d8f5978 'DBUG_RETURN' 'int ()'
|   |     `-IntegerLiteral 0x14d8f5f38 <col:17> 'int' 1
|   |-IfStmt 0x14d8f6438 <line:28:3, line:33:3>
|   | |-BinaryOperator 0x14d8f61b8 <line:28:7, col:45> 'int' contains-errors '!='
|   | | |-RecoveryExpr 0x14d8f6150 <col:7> '<dependent type>' contains-errors lvalue
|   | | `-CallExpr 0x14d8f6190 <col:20, col:45> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x14d8f60d0 <col:20> 'int ()' Function 0x14d8f6018 'SSL_get_verify_result' 'int ()'
|   | |   `-RecoveryExpr 0x14d8f6170 <col:42> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x14d8f6418 <line:29:3, line:33:3>
|   |   |-BinaryOperator 0x14d8f6278 <line:30:5, col:14> 'const char *' '='
|   |   | |-UnaryOperator 0x14d8f6210 <col:5, col:6> 'const char *' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x14d8f61f8 <col:6> 'const char **' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x14d8f61d8 <col:6> 'const char **' lvalue ParmVar 0x14d03ce58 'errptr' 'const char **'
|   |   | `-ImplicitCastExpr 0x14d8f6260 <col:14> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x14d8f6248 <col:14> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x14d8f6228 <col:14> 'char[4]' lvalue "STR"
|   |   `-CallExpr 0x14d8f63f0 <line:32:5, col:18> 'int'
|   |     |-ImplicitCastExpr 0x14d8f63d8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x14d8f6398 <col:5> 'int ()' Function 0x14d8f5978 'DBUG_RETURN' 'int ()'
|   |     `-IntegerLiteral 0x14d8f63b8 <col:17> 'int' 1
|   |-IfStmt 0x14d8f76e8 <line:39:3, line:43:3>
|   | |-UnaryOperator 0x14d8f7570 <line:39:7, col:8> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x14d8f7558 <col:8> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x14d8f7538 <col:8> 'char *' lvalue Var 0x14d03d180 'buf' 'char *'
|   | `-CompoundStmt 0x14d8f76c8 <line:40:3, line:43:3>
|   |   |-BinaryOperator 0x14d8f7628 <line:41:5, col:14> 'const char *' '='
|   |   | |-UnaryOperator 0x14d8f75c0 <col:5, col:6> 'const char *' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x14d8f75a8 <col:6> 'const char **' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x14d8f7588 <col:6> 'const char **' lvalue ParmVar 0x14d03ce58 'errptr' 'const char **'
|   |   | `-ImplicitCastExpr 0x14d8f7610 <col:14> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x14d8f75f8 <col:14> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x14d8f75d8 <col:14> 'char[4]' lvalue "STR"
|   |   `-CallExpr 0x14d8f76a0 <line:42:5, col:18> 'int'
|   |     |-ImplicitCastExpr 0x14d8f7688 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x14d8f7648 <col:5> 'int ()' Function 0x14d8f5978 'DBUG_RETURN' 'int ()'
|   |     `-IntegerLiteral 0x14d8f7668 <col:17> 'int' 1
|   |-CallExpr 0x14d8f7780 <line:45:3, col:24> 'int'
|   | |-ImplicitCastExpr 0x14d8f7768 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x14d8f7708 <col:3> 'int ()' Function 0x14d8f56b0 'DBUG_PRINT' 'int ()'
|   | |-ImplicitCastExpr 0x14d8f77b0 <col:14> 'char *' <ArrayToPointerDecay>
|   | | `-StringLiteral 0x14d8f7728 <col:14> 'char[4]' lvalue "STR"
|   | `-ImplicitCastExpr 0x14d8f77c8 <col:21> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x14d8f7748 <col:21> 'char *' lvalue Var 0x14d03d180 'buf' 'char *'
|   |-BinaryOperator 0x14d8f7b88 <line:46:3, col:25> 'char *' '='
|   | |-DeclRefExpr 0x14d8f77e0 <col:3> 'char *' lvalue Var 0x14d03d050 'cp1' 'char *'
|   | `-CallExpr 0x14d8f7af8 <col:8, col:25> 'char *'
|   |   |-ImplicitCastExpr 0x14d8f7ae0 <col:8> 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x14d8f7a20 <col:8> 'char *(const char *, const char *)' Function 0x14d8f7840 'strstr' 'char *(const char *, const char *)'
|   |   |-ImplicitCastExpr 0x14d8f7b40 <col:15> 'const char *' <NoOp>
|   |   | `-ImplicitCastExpr 0x14d8f7b28 <col:15> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x14d8f7a40 <col:15> 'char *' lvalue Var 0x14d03d180 'buf' 'char *'
|   |   `-ImplicitCastExpr 0x14d8f7b70 <col:20> 'const char *' <NoOp>
|   |     `-ImplicitCastExpr 0x14d8f7b58 <col:20> 'char *' <ArrayToPointerDecay>
|   |       `-StringLiteral 0x14d8f7a60 <col:20> 'char[4]' lvalue "STR"
|   |-IfStmt 0x14d8f92c8 <line:47:3, line:61:3>
|   | |-ImplicitCastExpr 0x14d8f7bc8 <line:47:7> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x14d8f7ba8 <col:7> 'char *' lvalue Var 0x14d03d050 'cp1' 'char *'
|   | `-CompoundStmt 0x14d8f9290 <line:48:3, line:61:3>
|   |   |-CompoundAssignOperator 0x14d8f7c20 <line:49:5, col:11> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |   | |-DeclRefExpr 0x14d8f7be0 <col:5> 'char *' lvalue Var 0x14d03d050 'cp1' 'char *'
|   |   | `-IntegerLiteral 0x14d8f7c00 <col:11> 'int' 4
|   |   |-BinaryOperator 0x14d8f7fa8 <line:51:5, col:25> 'char *' '='
|   |   | |-DeclRefExpr 0x14d8f7c50 <col:5> 'char *' lvalue Var 0x14d03d0d0 'cp2' 'char *'
|   |   | `-CallExpr 0x14d8f7f48 <col:10, col:25> 'char *'
|   |   |   |-ImplicitCastExpr 0x14d8f7f30 <col:10> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x14d8f7e90 <col:10> 'char *(const char *, int)' Function 0x14d8f7cb0 'strchr' 'char *(const char *, int)'
|   |   |   |-ImplicitCastExpr 0x14d8f7f90 <col:17> 'const char *' <NoOp>
|   |   |   | `-ImplicitCastExpr 0x14d8f7f78 <col:17> 'char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x14d8f7eb0 <col:17> 'char *' lvalue Var 0x14d03d050 'cp1' 'char *'
|   |   |   `-CharacterLiteral 0x14d8f7ed0 <col:22> 'int' 47
|   |   |-IfStmt 0x14d8f80a0 <line:52:5, line:53:13>
|   |   | |-ImplicitCastExpr 0x14d8f7fe8 <line:52:9> 'char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x14d8f7fc8 <col:9> 'char *' lvalue Var 0x14d03d0d0 'cp2' 'char *'
|   |   | `-BinaryOperator 0x14d8f8080 <line:53:7, col:13> 'char' '='
|   |   |   |-UnaryOperator 0x14d8f8038 <col:7, col:8> 'char' lvalue prefix '*' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x14d8f8020 <col:8> 'char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x14d8f8000 <col:8> 'char *' lvalue Var 0x14d03d0d0 'cp2' 'char *'
|   |   |   `-ImplicitCastExpr 0x14d8f8068 <col:13> 'char' <IntegralCast>
|   |   |     `-CharacterLiteral 0x14d8f8050 <col:13> 'int' 0
|   |   |-CallExpr 0x14d8f8138 <line:54:5, col:26> 'int'
|   |   | |-ImplicitCastExpr 0x14d8f8120 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x14d8f80c0 <col:5> 'int ()' Function 0x14d8f56b0 'DBUG_PRINT' 'int ()'
|   |   | |-ImplicitCastExpr 0x14d8f8168 <col:16> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x14d8f80e0 <col:16> 'char[4]' lvalue "STR"
|   |   | `-ImplicitCastExpr 0x14d8f8180 <col:23> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x14d8f8100 <col:23> 'char *' lvalue Var 0x14d03d050 'cp1' 'char *'
|   |   `-IfStmt 0x14d8f9270 <line:55:5, line:60:5>
|   |     |-UnaryOperator 0x14d8f8f10 <line:55:9, col:37> 'int' prefix '!' cannot overflow
|   |     | `-CallExpr 0x14d8f8e98 <col:10, col:37> 'int'
|   |     |   |-ImplicitCastExpr 0x14d8f8e80 <col:10> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |     |   | `-DeclRefExpr 0x14d8f83c0 <col:10> 'int (const char *, const char *)' Function 0x14d8f81e0 'strcmp' 'int (const char *, const char *)'
|   |     |   |-ImplicitCastExpr 0x14d8f8ee0 <col:17> 'const char *' <NoOp>
|   |     |   | `-ImplicitCastExpr 0x14d8f8ec8 <col:17> 'char *' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x14d8f83e0 <col:17> 'char *' lvalue Var 0x14d03d050 'cp1' 'char *'
|   |     |   `-ImplicitCastExpr 0x14d8f8ef8 <col:22> 'const char *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x14d8f8e00 <col:22> 'const char *' lvalue ParmVar 0x14d03cda8 'server_hostname' 'const char *'
|   |     `-CompoundStmt 0x14d8f9250 <line:56:5, line:60:5>
|   |       |-CallExpr 0x14d8f9178 <line:57:7, col:15> 'void'
|   |       | |-ImplicitCastExpr 0x14d8f9160 <col:7> 'void (*)(void *)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x14d8f90d8 <col:7> 'void (void *)' Function 0x14d8f8f68 'free' 'void (void *)'
|   |       | `-ImplicitCastExpr 0x14d8f91b8 <col:12> 'void *' <BitCast>
|   |       |   `-ImplicitCastExpr 0x14d8f91a0 <col:12> 'char *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x14d8f90f8 <col:12> 'char *' lvalue Var 0x14d03d180 'buf' 'char *'
|   |       `-CallExpr 0x14d8f9228 <line:59:7, col:20> 'int'
|   |         |-ImplicitCastExpr 0x14d8f9210 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x14d8f91d0 <col:7> 'int ()' Function 0x14d8f5978 'DBUG_RETURN' 'int ()'
|   |         `-IntegerLiteral 0x14d8f91f0 <col:19> 'int' 0
|   |-BinaryOperator 0x14d8f9388 <line:62:3, col:12> 'const char *' '='
|   | |-UnaryOperator 0x14d8f9320 <col:3, col:4> 'const char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x14d8f9308 <col:4> 'const char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x14d8f92e8 <col:4> 'const char **' lvalue ParmVar 0x14d03ce58 'errptr' 'const char **'
|   | `-ImplicitCastExpr 0x14d8f9370 <col:12> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x14d8f9358 <col:12> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x14d8f9338 <col:12> 'char[4]' lvalue "STR"
|   |-CallExpr 0x14d8f9418 <line:63:3, col:11> 'void'
|   | |-ImplicitCastExpr 0x14d8f9400 <col:3> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x14d8f93a8 <col:3> 'void (void *)' Function 0x14d8f8f68 'free' 'void (void *)'
|   | `-ImplicitCastExpr 0x14d8f9458 <col:8> 'void *' <BitCast>
|   |   `-ImplicitCastExpr 0x14d8f9440 <col:8> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x14d8f93c8 <col:8> 'char *' lvalue Var 0x14d03d180 'buf' 'char *'
|   `-CallExpr 0x14d8f94c8 <line:64:3, col:16> 'int'
|     |-ImplicitCastExpr 0x14d8f94b0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x14d8f9470 <col:3> 'int ()' Function 0x14d8f5978 'DBUG_RETURN' 'int ()'
|     `-IntegerLiteral 0x14d8f9490 <col:15> 'int' 1
|-FunctionDecl 0x14d8f7840 <line:46:8> col:8 implicit used strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x14d8f7940 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x14d8f79a8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x14d8f78e8 <<invalid sloc>> Implicit 898
|-FunctionDecl 0x14d8f7cb0 <line:51:10> col:10 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x14d8f7db0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x14d8f7e18 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x14d8f7d58 <<invalid sloc>> Implicit 893
|-FunctionDecl 0x14d8f81e0 <line:55:10> col:10 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x14d8f82e0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x14d8f8348 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x14d8f8288 <<invalid sloc>> Implicit 887
`-FunctionDecl 0x14d8f8f68 <line:57:7> col:7 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x14d8f9068 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x14d8f9010 <<invalid sloc>> Implicit 873
