TranslationUnitDecl 0x13a055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13a0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13a055bd0 '__int128'
|-TypedefDecl 0x13a056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13a055bf0 'unsigned __int128'
|-TypedefDecl 0x13a126c30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13a126a00 'struct __NSConstantString_tag'
|   `-Record 0x13a056580 '__NSConstantString_tag'
|-TypedefDecl 0x13a126c98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13a055d90 '__SVInt8_t'
|-TypedefDecl 0x13a126d00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13a055db0 '__SVInt16_t'
|-TypedefDecl 0x13a126d68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13a055dd0 '__SVInt32_t'
|-TypedefDecl 0x13a126dd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13a055df0 '__SVInt64_t'
|-TypedefDecl 0x13a126e38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13a055e10 '__SVUint8_t'
|-TypedefDecl 0x13a126ea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13a055e30 '__SVUint16_t'
|-TypedefDecl 0x13a126f08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13a055e50 '__SVUint32_t'
|-TypedefDecl 0x13a126f70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13a055e70 '__SVUint64_t'
|-TypedefDecl 0x13a126fd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13a055e90 '__SVFloat16_t'
|-TypedefDecl 0x13a127040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13a055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13a1270a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13a055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13a127110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13a055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13a127178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13a055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13a1271e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13a055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13a127248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13a055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13a1272b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13a055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13a127318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13a055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13a127380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13a055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13a1273e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13a055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13a127450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13a055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13a1274b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13a056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13a127520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13a056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13a127588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13a056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13a1275f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13a056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13a127658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13a056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13a1276c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13a0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13a127728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13a0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13a127790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13a0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13a1277f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13a056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13a127860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13a056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13a1278c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13a056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13a127930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13a056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13a127998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13a056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13a128200 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13a0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13a128268 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13a0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13a1282d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13a0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13a128338 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13a056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13a1283a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13a056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13a128408 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13a056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13a128470 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13a056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13a1284d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13a056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13a128540 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13a0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13a1285a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13a0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13a128610 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13a0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13a128678 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13a056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13a1286e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13a056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13a128748 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13a056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13a1287b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13a056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13a128818 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13a056390 '__SVBool_t'
|-TypedefDecl 0x13a128880 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13a0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13a1288e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13a0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13a128950 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13a0563f0 '__SVCount_t'
|-TypedefDecl 0x13a1289f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13a1289b0 'char *'
|   `-BuiltinType 0x13a0556b0 'char'
|-TypedefDecl 0x13a128a68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13a1289b0 'char *'
|   `-BuiltinType 0x13a0556b0 'char'
|-FunctionDecl 0x13a128c88 <dataset_diviso_filec/func6443_vuln.c:1:1, line:82:1> line:1:12 referenced invalid parse_acl_file 'int (const char *, int *)' static
| |-ParmVarDecl 0x13a128ad8 <col:27, col:39> col:39 used filename 'const char *'
| |-ParmVarDecl 0x13a128ba8 <col:49, col:58> col:58 invalid acl_list 'int *'
| `-CompoundStmt 0x13a146a10 <line:2:1, line:82:1>
|   |-DeclStmt 0x13a128e68 <line:4:5, col:20>
|   | `-VarDecl 0x13a128e00 <col:5, col:19> col:10 used line 'char[4096]'
|   |-IfStmt 0x13a142c60 <line:8:5, line:10:5>
|   | |-BinaryOperator 0x13a1291c8 <line:8:9, col:14> 'int' contains-errors '=='
|   | | |-RecoveryExpr 0x13a129188 <col:9> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x13a1291a8 <col:14> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x13a142c48 <col:20, line:10:5>
|   |   `-ReturnStmt 0x13a142c38 <line:9:9, col:17>
|   |     `-UnaryOperator 0x13a142c20 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x13a142c00 <col:17> 'int' 1
|   |-WhileStmt 0x13a1469a0 <line:12:5, line:77:5>
|   | |-BinaryOperator 0x13a142f00 <line:12:12, col:44> 'int' contains-errors '!='
|   | | |-CallExpr 0x13a142ea8 <col:12, col:39> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x13a142d60 <col:12> 'int ()' Function 0x13a142ca8 'fgets' 'int ()'
|   | | | |-DeclRefExpr 0x13a142d80 <col:18> 'char[4096]' lvalue Var 0x13a128e00 'line' 'char[4096]'
|   | | | |-UnaryExprOrTypeTraitExpr 0x13a142de0 <col:24, col:35> 'unsigned long' sizeof
|   | | | | `-ParenExpr 0x13a142dc0 <col:30, col:35> 'char[4096]' lvalue
|   | | | |   `-DeclRefExpr 0x13a142da0 <col:31> 'char[4096]' lvalue Var 0x13a128e00 'line' 'char[4096]' non_odr_use_unevaluated
|   | | | `-RecoveryExpr 0x13a142e88 <col:38> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x13a142ee0 <col:44> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x13a146918 <col:50, line:77:5>
|   |   |-DeclStmt 0x13a142fd8 <line:13:9, col:25>
|   |   | `-VarDecl 0x13a142f38 <col:9, col:21> col:15 used ptr 'char *' cinit
|   |   |   `-ImplicitCastExpr 0x13a142fc0 <col:21> 'char *' <ArrayToPointerDecay>
|   |   |     `-DeclRefExpr 0x13a142fa0 <col:21> 'char[4096]' lvalue Var 0x13a128e00 'line' 'char[4096]'
|   |   |-DeclStmt 0x13a143190 <line:14:9, col:33>
|   |   | |-VarDecl 0x13a143008 <col:9, col:15> col:15 used cmd 'char *'
|   |   | |-VarDecl 0x13a143088 <col:9, col:21> col:21 used arg 'char *'
|   |   | `-VarDecl 0x13a143108 <col:9, col:27> col:27 used argend 'char *'
|   |   |-WhileStmt 0x13a143930 <line:16:9, line:18:9>
|   |   | |-CallExpr 0x13a143888 <line:16:16, col:28> 'int'
|   |   | | |-ImplicitCastExpr 0x13a143870 <col:16> 'int (*)(int)' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x13a1437d0 <col:16> 'int (int)' Function 0x13a143610 'isspace' 'int (int)'
|   |   | | `-ImplicitCastExpr 0x13a1438c8 <col:24, col:25> 'int' <IntegralCast>
|   |   | |   `-ImplicitCastExpr 0x13a1438b0 <col:24, col:25> 'char' <LValueToRValue>
|   |   | |     `-UnaryOperator 0x13a143828 <col:24, col:25> 'char' lvalue prefix '*' cannot overflow
|   |   | |       `-ImplicitCastExpr 0x13a143810 <col:25> 'char *' <LValueToRValue>
|   |   | |         `-DeclRefExpr 0x13a1437f0 <col:25> 'char *' lvalue Var 0x13a142f38 'ptr' 'char *'
|   |   | `-CompoundStmt 0x13a143918 <col:31, line:18:9>
|   |   |   `-UnaryOperator 0x13a143900 <line:17:13, col:16> 'char *' postfix '++'
|   |   |     `-DeclRefExpr 0x13a1438e0 <col:13> 'char *' lvalue Var 0x13a142f38 'ptr' 'char *'
|   |   |-IfStmt 0x13a143b08 <line:21:9, line:23:9>
|   |   | |-BinaryOperator 0x13a143ac8 <line:21:13, col:36> 'int' '||'
|   |   | | |-BinaryOperator 0x13a1439e8 <col:13, col:21> 'int' '=='
|   |   | | | |-ImplicitCastExpr 0x13a1439d0 <col:13, col:14> 'int' <IntegralCast>
|   |   | | | | `-ImplicitCastExpr 0x13a1439b8 <col:13, col:14> 'char' <LValueToRValue>
|   |   | | | |   `-UnaryOperator 0x13a143988 <col:13, col:14> 'char' lvalue prefix '*' cannot overflow
|   |   | | | |     `-ImplicitCastExpr 0x13a143970 <col:14> 'char *' <LValueToRValue>
|   |   | | | |       `-DeclRefExpr 0x13a143950 <col:14> 'char *' lvalue Var 0x13a142f38 'ptr' 'char *'
|   |   | | | `-CharacterLiteral 0x13a1439a0 <col:21> 'int' 35
|   |   | | `-BinaryOperator 0x13a143aa8 <col:28, col:36> 'int' '=='
|   |   | |   |-ImplicitCastExpr 0x13a143a90 <col:28, col:29> 'int' <IntegralCast>
|   |   | |   | `-ImplicitCastExpr 0x13a143a78 <col:28, col:29> 'char' <LValueToRValue>
|   |   | |   |   `-UnaryOperator 0x13a143a40 <col:28, col:29> 'char' lvalue prefix '*' cannot overflow
|   |   | |   |     `-ImplicitCastExpr 0x13a143a28 <col:29> 'char *' <LValueToRValue>
|   |   | |   |       `-DeclRefExpr 0x13a143a08 <col:29> 'char *' lvalue Var 0x13a142f38 'ptr' 'char *'
|   |   | |   `-IntegerLiteral 0x13a143a58 <col:36> 'int' 0
|   |   | `-CompoundStmt 0x13a143af0 <col:39, line:23:9>
|   |   |   `-ContinueStmt 0x13a143ae8 <line:22:13>
|   |   |-BinaryOperator 0x13a143b80 <line:25:9, col:15> 'char *' '='
|   |   | |-DeclRefExpr 0x13a143b28 <col:9> 'char *' lvalue Var 0x13a143008 'cmd' 'char *'
|   |   | `-ImplicitCastExpr 0x13a143b68 <col:15> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x13a143b48 <col:15> 'char *' lvalue Var 0x13a142f38 'ptr' 'char *'
|   |   |-BinaryOperator 0x13a1446f8 <line:26:9, col:30> 'char *' '='
|   |   | |-DeclRefExpr 0x13a143ba0 <col:9> 'char *' lvalue Var 0x13a143088 'arg' 'char *'
|   |   | `-CallExpr 0x13a144698 <col:15, col:30> 'char *'
|   |   |   |-ImplicitCastExpr 0x13a144680 <col:15> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x13a1445e0 <col:15> 'char *(const char *, int)' Function 0x13a144400 'strchr' 'char *(const char *, int)'
|   |   |   |-ImplicitCastExpr 0x13a1446e0 <col:22> 'const char *' <NoOp>
|   |   |   | `-ImplicitCastExpr 0x13a1446c8 <col:22> 'char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x13a144600 <col:22> 'char *' lvalue Var 0x13a143008 'cmd' 'char *'
|   |   |   `-CharacterLiteral 0x13a144620 <col:27> 'int' 32
|   |   |-IfStmt 0x13a1448f0 <line:27:9, line:29:9>
|   |   | |-BinaryOperator 0x13a144790 <line:27:13, col:20> 'int' contains-errors '=='
|   |   | | |-DeclRefExpr 0x13a144718 <col:13> 'char *' lvalue Var 0x13a143088 'arg' 'char *'
|   |   | | `-RecoveryExpr 0x13a144770 <col:20> '<dependent type>' contains-errors lvalue
|   |   | `-CompoundStmt 0x13a1448d8 <col:26, line:29:9>
|   |   |   `-BinaryOperator 0x13a1448b8 <line:28:13, col:35> 'char *' '='
|   |   |     |-DeclRefExpr 0x13a1447b0 <col:13> 'char *' lvalue Var 0x13a143088 'arg' 'char *'
|   |   |     `-CallExpr 0x13a144858 <col:19, col:35> 'char *'
|   |   |       |-ImplicitCastExpr 0x13a144840 <col:19> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x13a1447d0 <col:19> 'char *(const char *, int)' Function 0x13a144400 'strchr' 'char *(const char *, int)'
|   |   |       |-ImplicitCastExpr 0x13a1448a0 <col:26> 'const char *' <NoOp>
|   |   |       | `-ImplicitCastExpr 0x13a144888 <col:26> 'char *' <LValueToRValue>
|   |   |       |   `-DeclRefExpr 0x13a1447f0 <col:26> 'char *' lvalue Var 0x13a143008 'cmd' 'char *'
|   |   |       `-CharacterLiteral 0x13a144810 <col:31> 'int' 9
|   |   |-IfStmt 0x13a144d88 <line:31:9, line:36:9>
|   |   | |-BinaryOperator 0x13a144988 <line:31:13, col:20> 'int' contains-errors '=='
|   |   | | |-DeclRefExpr 0x13a144910 <col:13> 'char *' lvalue Var 0x13a143088 'arg' 'char *'
|   |   | | `-RecoveryExpr 0x13a144968 <col:20> '<dependent type>' contains-errors lvalue
|   |   | `-CompoundStmt 0x13a144d60 <col:26, line:36:9>
|   |   |   |-CallExpr 0x13a144b58 <line:32:13, col:40> '<dependent type>' contains-errors
|   |   |   | |-DeclRefExpr 0x13a144a88 <col:13> 'int ()' Function 0x13a1449d0 'fprintf' 'int ()'
|   |   |   | |-RecoveryExpr 0x13a144b38 <col:21> '<dependent type>' contains-errors lvalue
|   |   |   | |-StringLiteral 0x13a144ac0 <col:29> 'char[4]' lvalue "STR"
|   |   |   | `-DeclRefExpr 0x13a144ae0 <col:36> 'char[4096]' lvalue Var 0x13a128e00 'line' 'char[4096]'
|   |   |   |-CallExpr 0x13a144cf0 <line:33:13, col:21> '<dependent type>' contains-errors
|   |   |   | |-DeclRefExpr 0x13a144c70 <col:13> 'int ()' Function 0x13a144bb8 'fclose' 'int ()'
|   |   |   | `-RecoveryExpr 0x13a144cd0 <col:20> '<dependent type>' contains-errors lvalue
|   |   |   `-ReturnStmt 0x13a144d50 <line:35:13, col:21>
|   |   |     `-UnaryOperator 0x13a144d38 <col:20, col:21> 'int' prefix '-'
|   |   |       `-IntegerLiteral 0x13a144d18 <col:21> 'int' 1
|   |   |-BinaryOperator 0x13a144e30 <line:38:9, col:16> 'char' '='
|   |   | |-UnaryOperator 0x13a144de0 <col:9, col:10> 'char' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x13a144dc8 <col:10> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13a144da8 <col:10> 'char *' lvalue Var 0x13a143088 'arg' 'char *'
|   |   | `-ImplicitCastExpr 0x13a144e18 <col:16> 'char' <IntegralCast>
|   |   |   `-IntegerLiteral 0x13a144df8 <col:16> 'int' 0
|   |   |-UnaryOperator 0x13a144e70 <line:39:9, col:12> 'char *' postfix '++'
|   |   | `-DeclRefExpr 0x13a144e50 <col:9> 'char *' lvalue Var 0x13a143088 'arg' 'char *'
|   |   |-WhileStmt 0x13a144fb8 <line:40:9, line:42:9>
|   |   | |-CallExpr 0x13a144f10 <line:40:16, col:28> 'int'
|   |   | | |-ImplicitCastExpr 0x13a144ef8 <col:16> 'int (*)(int)' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x13a144e88 <col:16> 'int (int)' Function 0x13a143610 'isspace' 'int (int)'
|   |   | | `-ImplicitCastExpr 0x13a144f50 <col:24, col:25> 'int' <IntegralCast>
|   |   | |   `-ImplicitCastExpr 0x13a144f38 <col:24, col:25> 'char' <LValueToRValue>
|   |   | |     `-UnaryOperator 0x13a144ee0 <col:24, col:25> 'char' lvalue prefix '*' cannot overflow
|   |   | |       `-ImplicitCastExpr 0x13a144ec8 <col:25> 'char *' <LValueToRValue>
|   |   | |         `-DeclRefExpr 0x13a144ea8 <col:25> 'char *' lvalue Var 0x13a143088 'arg' 'char *'
|   |   | `-CompoundStmt 0x13a144fa0 <col:31, line:42:9>
|   |   |   `-UnaryOperator 0x13a144f88 <line:41:13, col:16> 'char *' postfix '++'
|   |   |     `-DeclRefExpr 0x13a144f68 <col:13> 'char *' lvalue Var 0x13a143088 'arg' 'char *'
|   |   |-BinaryOperator 0x13a1452f8 <line:44:9, col:34> 'char *' '='
|   |   | |-DeclRefExpr 0x13a144fd8 <col:9> 'char *' lvalue Var 0x13a143108 'argend' 'char *'
|   |   | `-BinaryOperator 0x13a1452d8 <col:18, col:34> 'char *' '+'
|   |   |   |-ImplicitCastExpr 0x13a1452c0 <col:18> 'char *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x13a144ff8 <col:18> 'char *' lvalue Var 0x13a143088 'arg' 'char *'
|   |   |   `-CallExpr 0x13a145268 <col:24, col:34> 'unsigned long'
|   |   |     |-ImplicitCastExpr 0x13a145250 <col:24> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x13a1451c8 <col:24> 'unsigned long (const char *)' Function 0x13a145058 'strlen' 'unsigned long (const char *)'
|   |   |     `-ImplicitCastExpr 0x13a1452a8 <col:31> 'const char *' <NoOp>
|   |   |       `-ImplicitCastExpr 0x13a145290 <col:31> 'char *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x13a1451e8 <col:31> 'char *' lvalue Var 0x13a143088 'arg' 'char *'
|   |   |-WhileStmt 0x13a145570 <line:45:9, line:47:9>
|   |   | |-BinaryOperator 0x13a145500 <line:45:16, col:54> 'int' '&&'
|   |   | | |-BinaryOperator 0x13a145388 <col:16, col:23> 'int' '!='
|   |   | | | |-ImplicitCastExpr 0x13a145358 <col:16> 'char *' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x13a145318 <col:16> 'char *' lvalue Var 0x13a143088 'arg' 'char *'
|   |   | | | `-ImplicitCastExpr 0x13a145370 <col:23> 'char *' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x13a145338 <col:23> 'char *' lvalue Var 0x13a143108 'argend' 'char *'
|   |   | | `-CallExpr 0x13a1454a8 <col:33, col:54> 'int'
|   |   | |   |-ImplicitCastExpr 0x13a145490 <col:33> 'int (*)(int)' <FunctionToPointerDecay>
|   |   | |   | `-DeclRefExpr 0x13a1453a8 <col:33> 'int (int)' Function 0x13a143610 'isspace' 'int (int)'
|   |   | |   `-ImplicitCastExpr 0x13a1454e8 <col:41, col:53> 'int' <IntegralCast>
|   |   | |     `-ImplicitCastExpr 0x13a1454d0 <col:41, col:53> 'char' <LValueToRValue>
|   |   | |       `-UnaryOperator 0x13a145478 <col:41, col:53> 'char' lvalue prefix '*' cannot overflow
|   |   | |         `-ParenExpr 0x13a145458 <col:42, col:53> 'char *'
|   |   | |           `-BinaryOperator 0x13a145438 <col:43, col:52> 'char *' '-'
|   |   | |             |-ImplicitCastExpr 0x13a145420 <col:43> 'char *' <LValueToRValue>
|   |   | |             | `-DeclRefExpr 0x13a1453c8 <col:43> 'char *' lvalue Var 0x13a143108 'argend' 'char *'
|   |   | |             `-IntegerLiteral 0x13a145400 <col:52> 'int' 1
|   |   | `-CompoundStmt 0x13a145558 <col:57, line:47:9>
|   |   |   `-UnaryOperator 0x13a145540 <line:46:13, col:19> 'char *' postfix '--'
|   |   |     `-DeclRefExpr 0x13a145520 <col:13> 'char *' lvalue Var 0x13a143108 'argend' 'char *'
|   |   |-BinaryOperator 0x13a145618 <line:48:9, col:19> 'char' '='
|   |   | |-UnaryOperator 0x13a1455c8 <col:9, col:10> 'char' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x13a1455b0 <col:10> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13a145590 <col:10> 'char *' lvalue Var 0x13a143108 'argend' 'char *'
|   |   | `-ImplicitCastExpr 0x13a145600 <col:19> 'char' <IntegralCast>
|   |   |   `-IntegerLiteral 0x13a1455e0 <col:19> 'int' 0
|   |   `-IfStmt 0x13a1468e8 <line:50:9, line:76:9> has_else
|   |     |-BinaryOperator 0x13a1459e8 <line:50:13, col:35> 'int' '=='
|   |     | |-CallExpr 0x13a145938 <col:13, col:30> 'int'
|   |     | | |-ImplicitCastExpr 0x13a145920 <col:13> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |     | | | `-DeclRefExpr 0x13a145860 <col:13> 'int (const char *, const char *)' Function 0x13a145680 'strcmp' 'int (const char *, const char *)'
|   |     | | |-ImplicitCastExpr 0x13a145980 <col:20> 'const char *' <NoOp>
|   |     | | | `-ImplicitCastExpr 0x13a145968 <col:20> 'char *' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x13a145880 <col:20> 'char *' lvalue Var 0x13a143008 'cmd' 'char *'
|   |     | | `-ImplicitCastExpr 0x13a1459b0 <col:25> 'const char *' <NoOp>
|   |     | |   `-ImplicitCastExpr 0x13a145998 <col:25> 'char *' <ArrayToPointerDecay>
|   |     | |     `-StringLiteral 0x13a1458a0 <col:25> 'char[4]' lvalue "STR"
|   |     | `-IntegerLiteral 0x13a1459c8 <col:35> 'int' 0
|   |     |-CompoundStmt 0x13a146128 <col:38, line:59:9>
|   |     | `-IfStmt 0x13a145fd8 <line:52:13, line:57:13> has_else
|   |     |   |-BinaryOperator 0x13a145c60 <line:52:17, col:39> 'int' '=='
|   |     |   | |-CallExpr 0x13a145bb0 <col:17, col:34> 'int'
|   |     |   | | |-ImplicitCastExpr 0x13a145b98 <col:17> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |     |   | | | `-DeclRefExpr 0x13a145b08 <col:17> 'int (const char *, const char *)' Function 0x13a145680 'strcmp' 'int (const char *, const char *)'
|   |     |   | | |-ImplicitCastExpr 0x13a145bf8 <col:24> 'const char *' <NoOp>
|   |     |   | | | `-ImplicitCastExpr 0x13a145be0 <col:24> 'char *' <LValueToRValue>
|   |     |   | | |   `-DeclRefExpr 0x13a145b28 <col:24> 'char *' lvalue Var 0x13a143088 'arg' 'char *'
|   |     |   | | `-ImplicitCastExpr 0x13a145c28 <col:29> 'const char *' <NoOp>
|   |     |   | |   `-ImplicitCastExpr 0x13a145c10 <col:29> 'char *' <ArrayToPointerDecay>
|   |     |   | |     `-StringLiteral 0x13a145b48 <col:29> 'char[4]' lvalue "STR"
|   |     |   | `-IntegerLiteral 0x13a145c40 <col:39> 'int' 0
|   |     |   |-CompoundStmt 0x13a145c80 <col:42, line:54:13>
|   |     |   `-CompoundStmt 0x13a145fc8 <col:20, line:57:13>
|   |     `-IfStmt 0x13a1468b8 <line:59:16, line:76:9> has_else
|   |       |-BinaryOperator 0x13a146298 <line:59:20, col:42> 'int' '=='
|   |       | |-CallExpr 0x13a1461e8 <col:20, col:37> 'int'
|   |       | | |-ImplicitCastExpr 0x13a1461d0 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |       | | | `-DeclRefExpr 0x13a146140 <col:20> 'int (const char *, const char *)' Function 0x13a145680 'strcmp' 'int (const char *, const char *)'
|   |       | | |-ImplicitCastExpr 0x13a146230 <col:27> 'const char *' <NoOp>
|   |       | | | `-ImplicitCastExpr 0x13a146218 <col:27> 'char *' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x13a146160 <col:27> 'char *' lvalue Var 0x13a143008 'cmd' 'char *'
|   |       | | `-ImplicitCastExpr 0x13a146260 <col:32> 'const char *' <NoOp>
|   |       | |   `-ImplicitCastExpr 0x13a146248 <col:32> 'char *' <ArrayToPointerDecay>
|   |       | |     `-StringLiteral 0x13a146180 <col:32> 'char[4]' lvalue "STR"
|   |       | `-IntegerLiteral 0x13a146278 <col:42> 'int' 0
|   |       |-CompoundStmt 0x13a146548 <col:45, line:68:9>
|   |       | `-IfStmt 0x13a1464d8 <line:61:13, line:66:13> has_else
|   |       |   |-BinaryOperator 0x13a146438 <line:61:17, col:39> 'int' '=='
|   |       |   | |-CallExpr 0x13a146380 <col:17, col:34> 'int'
|   |       |   | | |-ImplicitCastExpr 0x13a146368 <col:17> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |       |   | | | `-DeclRefExpr 0x13a1462d8 <col:17> 'int (const char *, const char *)' Function 0x13a145680 'strcmp' 'int (const char *, const char *)'
|   |       |   | | |-ImplicitCastExpr 0x13a1463c8 <col:24> 'const char *' <NoOp>
|   |       |   | | | `-ImplicitCastExpr 0x13a1463b0 <col:24> 'char *' <LValueToRValue>
|   |       |   | | |   `-DeclRefExpr 0x13a1462f8 <col:24> 'char *' lvalue Var 0x13a143088 'arg' 'char *'
|   |       |   | | `-ImplicitCastExpr 0x13a146400 <col:29> 'const char *' <NoOp>
|   |       |   | |   `-ImplicitCastExpr 0x13a1463e0 <col:29> 'char *' <ArrayToPointerDecay>
|   |       |   | |     `-StringLiteral 0x13a146318 <col:29> 'char[4]' lvalue "STR"
|   |       |   | `-IntegerLiteral 0x13a146418 <col:39> 'int' 0
|   |       |   |-CompoundStmt 0x13a146458 <col:42, line:63:13>
|   |       |   `-CompoundStmt 0x13a1464c8 <col:20, line:66:13>
|   |       `-IfStmt 0x13a146888 <line:68:16, line:76:9> has_else
|   |         |-BinaryOperator 0x13a1466b8 <line:68:20, col:42> 'int' '=='
|   |         | |-CallExpr 0x13a146608 <col:20, col:37> 'int'
|   |         | | |-ImplicitCastExpr 0x13a1465f0 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |         | | | `-DeclRefExpr 0x13a146560 <col:20> 'int (const char *, const char *)' Function 0x13a145680 'strcmp' 'int (const char *, const char *)'
|   |         | | |-ImplicitCastExpr 0x13a146650 <col:27> 'const char *' <NoOp>
|   |         | | | `-ImplicitCastExpr 0x13a146638 <col:27> 'char *' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x13a146580 <col:27> 'char *' lvalue Var 0x13a143008 'cmd' 'char *'
|   |         | | `-ImplicitCastExpr 0x13a146680 <col:32> 'const char *' <NoOp>
|   |         | |   `-ImplicitCastExpr 0x13a146668 <col:32> 'char *' <ArrayToPointerDecay>
|   |         | |     `-StringLiteral 0x13a1465a0 <col:32> 'char[4]' lvalue "STR"
|   |         | `-IntegerLiteral 0x13a146698 <col:42> 'int' 0
|   |         |-CompoundStmt 0x13a146790 <col:45, line:71:9>
|   |         | `-CallExpr 0x13a146760 <line:70:13, col:41> '<dependent type>' contains-errors
|   |         |   |-RecoveryExpr 0x13a1466f8 <col:13> '<dependent type>' contains-errors lvalue
|   |         |   | `-DeclRefExpr 0x13a1466d8 <col:13> 'int (const char *, int *)' Function 0x13a128c88 'parse_acl_file' 'int (const char *, int *)'
|   |         |   |-DeclRefExpr 0x13a146720 <col:28> 'char *' lvalue Var 0x13a143088 'arg' 'char *'
|   |         |   `-RecoveryExpr 0x13a146740 <col:33> '<dependent type>' contains-errors lvalue
|   |         `-CompoundStmt 0x13a146870 <line:71:16, line:76:9>
|   |           `-ReturnStmt 0x13a146860 <line:75:13, col:21>
|   |             `-UnaryOperator 0x13a146848 <col:20, col:21> 'int' prefix '-'
|   |               `-IntegerLiteral 0x13a146828 <col:21> 'int' 1
|   `-ReturnStmt 0x13a146a00 <line:81:5, col:12>
|     `-IntegerLiteral 0x13a1469e0 <col:12> 'int' 0
|-FunctionDecl 0x13a143610 <line:16:16> col:16 implicit used isspace 'int (int)' extern
| |-ParmVarDecl 0x13a143710 <<invalid sloc>> <invalid sloc> 'int'
| |-BuiltinAttr 0x13a1436b8 <<invalid sloc>> Implicit 929
| |-NoThrowAttr 0x13a143780 <col:16> Implicit
| `-PureAttr 0x13a1437a8 <col:16> Implicit
|-FunctionDecl 0x13a144400 <line:26:15> col:15 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x13a144500 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x13a144568 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x13a1444a8 <<invalid sloc>> Implicit 893
|-FunctionDecl 0x13a145058 <line:44:24> col:24 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x13a145158 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x13a145100 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x13a145680 <line:50:13> col:13 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x13a145780 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x13a1457e8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x13a145728 <<invalid sloc>> Implicit 887
`-FunctionDecl 0x13a145ce0 <line:56:17> col:17 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern
  |-ParmVarDecl 0x13a145de0 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x13a145e48 <<invalid sloc>> <invalid sloc> 'unsigned long'
  |-ParmVarDecl 0x13a145eb0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-BuiltinAttr 0x13a145d88 <<invalid sloc>> Implicit 905
  `-FormatAttr 0x13a145f30 <col:17> Implicit printf 3 4
