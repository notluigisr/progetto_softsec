TranslationUnitDecl 0x130017408 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1300182b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1300179d0 '__int128'
|-TypedefDecl 0x130018328 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1300179f0 'unsigned __int128'
|-TypedefDecl 0x1388ad430 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1388ad200 'struct __NSConstantString_tag'
|   `-Record 0x130018380 '__NSConstantString_tag'
|-TypedefDecl 0x1388ad498 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x130017b90 '__SVInt8_t'
|-TypedefDecl 0x1388ad500 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x130017bb0 '__SVInt16_t'
|-TypedefDecl 0x1388ad568 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x130017bd0 '__SVInt32_t'
|-TypedefDecl 0x1388ad5d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x130017bf0 '__SVInt64_t'
|-TypedefDecl 0x1388ad638 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x130017c10 '__SVUint8_t'
|-TypedefDecl 0x1388ad6a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x130017c30 '__SVUint16_t'
|-TypedefDecl 0x1388ad708 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x130017c50 '__SVUint32_t'
|-TypedefDecl 0x1388ad770 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x130017c70 '__SVUint64_t'
|-TypedefDecl 0x1388ad7d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x130017c90 '__SVFloat16_t'
|-TypedefDecl 0x1388ad840 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x130017cb0 '__SVFloat32_t'
|-TypedefDecl 0x1388ad8a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x130017cd0 '__SVFloat64_t'
|-TypedefDecl 0x1388ad910 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x130017cf0 '__SVBfloat16_t'
|-TypedefDecl 0x1388ad978 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x130017d10 '__clang_svint8x2_t'
|-TypedefDecl 0x1388ad9e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x130017d30 '__clang_svint16x2_t'
|-TypedefDecl 0x1388ada48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x130017d50 '__clang_svint32x2_t'
|-TypedefDecl 0x1388adab0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x130017d70 '__clang_svint64x2_t'
|-TypedefDecl 0x1388adb18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x130017d90 '__clang_svuint8x2_t'
|-TypedefDecl 0x1388adb80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x130017db0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1388adbe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x130017dd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x1388adc50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x130017df0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1388adcb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x130017e10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x1388add20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x130017e30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x1388add88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x130017e50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1388addf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x130017e70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x1388ade58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x130017e90 '__clang_svint8x3_t'
|-TypedefDecl 0x1388adec0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x130017eb0 '__clang_svint16x3_t'
|-TypedefDecl 0x1388adf28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x130017ed0 '__clang_svint32x3_t'
|-TypedefDecl 0x1388adf90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x130017ef0 '__clang_svint64x3_t'
|-TypedefDecl 0x1388adff8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x130017f10 '__clang_svuint8x3_t'
|-TypedefDecl 0x1388ae060 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x130017f30 '__clang_svuint16x3_t'
|-TypedefDecl 0x1388ae0c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x130017f50 '__clang_svuint32x3_t'
|-TypedefDecl 0x1388ae130 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x130017f70 '__clang_svuint64x3_t'
|-TypedefDecl 0x1388ae198 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x130017f90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x1388aea00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x130017fb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x1388aea68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x130017fd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1388aead0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x130017ff0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x1388aeb38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x130018010 '__clang_svint8x4_t'
|-TypedefDecl 0x1388aeba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x130018030 '__clang_svint16x4_t'
|-TypedefDecl 0x1388aec08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x130018050 '__clang_svint32x4_t'
|-TypedefDecl 0x1388aec70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x130018070 '__clang_svint64x4_t'
|-TypedefDecl 0x1388aecd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x130018090 '__clang_svuint8x4_t'
|-TypedefDecl 0x1388aed40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1300180b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1388aeda8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1300180d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x1388aee10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1300180f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x1388aee78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x130018110 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1388aeee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x130018130 '__clang_svfloat32x4_t'
|-TypedefDecl 0x1388aef48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x130018150 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1388aefb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x130018170 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x1388af018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x130018190 '__SVBool_t'
|-TypedefDecl 0x1388af080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1300181b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1388af0e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1300181d0 '__clang_svboolx4_t'
|-TypedefDecl 0x1388af150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1300181f0 '__SVCount_t'
|-TypedefDecl 0x1388af1f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1388af1b0 'char *'
|   `-BuiltinType 0x1300174b0 'char'
|-TypedefDecl 0x1388af268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1388af1b0 'char *'
|   `-BuiltinType 0x1300174b0 'char'
`-FunctionDecl 0x130058548 <dataset_diviso_filec/func22310_vuln.c:1:1, line:59:1> line:1:1 mountpoint_last 'int (struct nameidata *, struct path *)'
  |-ParmVarDecl 0x1388af848 <col:17, col:35> col:35 used nd 'struct nameidata *'
  |-ParmVarDecl 0x130058428 <col:39, col:52> col:52 used path 'struct path *'
  `-CompoundStmt 0x1388c9eb8 <line:2:1, line:59:1>
    |-DeclStmt 0x1300586e8 <line:3:2, col:15>
    | `-VarDecl 0x130058660 <col:2, col:14> col:6 used error 'int' cinit
    |   `-IntegerLiteral 0x1300586c8 <col:14> 'int' 0
    |-DeclStmt 0x1300588e8 <line:4:2, col:23>
    | |-RecordDecl 0x130058700 <col:2, col:9> col:9 struct dentry
    | `-VarDecl 0x130058868 <col:2, col:17> col:17 used dentry 'struct dentry *'
    |-DeclStmt 0x130058a98 <line:5:2, col:38>
    | `-VarDecl 0x130058988 <col:2, col:32> col:17 used dir 'struct dentry *' cinit
    |   `-CXXDependentScopeMemberExpr 0x130058a50 <col:23, col:32> '<dependent type>' contains-errors lvalue .dentry
    |     `-RecoveryExpr 0x130058a28 <col:23, col:27> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x1300589f0 <col:23> 'struct nameidata *' lvalue ParmVar 0x1388af848 'nd' 'struct nameidata *'
    |-IfStmt 0x130058f40 <line:8:2, line:13:2>
    | |-BinaryOperator 0x130058b80 <line:8:6, col:18> '<dependent type>' contains-errors '&'
    | | |-RecoveryExpr 0x130058ae8 <col:6, col:10> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x130058ab0 <col:6> 'struct nameidata *' lvalue ParmVar 0x1388af848 'nd' 'struct nameidata *'
    | | `-RecoveryExpr 0x130058b60 <col:18> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x130058f28 <col:30, line:13:2>
    |   `-IfStmt 0x130058f08 <line:9:3, line:12:3>
    |     |-CallExpr 0x130058d58 <line:9:7, col:27> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x130058cb0 <col:7> 'int ()' Function 0x130058bf8 'unlazy_walk' 'int ()'
    |     | |-DeclRefExpr 0x130058cd0 <col:19> 'struct nameidata *' lvalue ParmVar 0x1388af848 'nd' 'struct nameidata *'
    |     | `-RecoveryExpr 0x130058d38 <col:23> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x130058ee8 <col:30, line:12:3>
    |       |-BinaryOperator 0x130058e60 <line:10:4, col:13> 'int' contains-errors '='
    |       | |-DeclRefExpr 0x130058d88 <col:4> 'int' lvalue Var 0x130058660 'error' 'int'
    |       | `-UnaryOperator 0x130058e48 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       |   `-ImplicitCastExpr 0x130058e30 <col:13> '<dependent type>' contains-errors <LValueToRValue>
    |       |     `-RecoveryExpr 0x130058e10 <col:13> '<dependent type>' contains-errors lvalue
    |       `-GotoStmt 0x130058ed0 <line:11:4, col:9> 'out' 0x130058e80
    |-CompoundAssignOperator 0x130059088 <line:15:2, col:16> '<dependent type>' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-RecoveryExpr 0x130058f98 <col:2, col:6> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x130058f60 <col:2> 'struct nameidata *' lvalue ParmVar 0x1388af848 'nd' 'struct nameidata *'
    | `-UnaryOperator 0x130059070 <col:15, col:16> '<dependent type>' contains-errors prefix '~' cannot overflow
    |   `-ImplicitCastExpr 0x130059058 <col:16> '<dependent type>' contains-errors <LValueToRValue>
    |     `-RecoveryExpr 0x130059038 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1388c7fe8 <line:17:2, line:23:2>
    | |-CallExpr 0x1300592b8 <line:17:6, col:41> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x130059198 <col:6> 'int ()' Function 0x1300590e0 'unlikely' 'int ()'
    | | `-BinaryOperator 0x130059298 <col:15, col:32> 'int' contains-errors '!='
    | |   |-RecoveryExpr 0x1300591f0 <col:15, col:19> '<dependent type>' contains-errors lvalue
    | |   | `-DeclRefExpr 0x1300591b8 <col:15> 'struct nameidata *' lvalue ParmVar 0x1388af848 'nd' 'struct nameidata *'
    | |   `-RecoveryExpr 0x130059278 <col:32> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1388c7fb8 <col:44, line:23:2>
    |   |-BinaryOperator 0x1388c7cb0 <line:18:3, col:40> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x1300592e0 <col:3> 'int' lvalue Var 0x130058660 'error' 'int'
    |   | `-CallExpr 0x1388c7c80 <col:11, col:40> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x1300593e0 <col:11> 'int ()' Function 0x130059328 'handle_dots' 'int ()'
    |   |   |-DeclRefExpr 0x1388c7c00 <col:23> 'struct nameidata *' lvalue ParmVar 0x1388af848 'nd' 'struct nameidata *'
    |   |   `-RecoveryExpr 0x1388c7c58 <col:27, col:31> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x1388c7c20 <col:27> 'struct nameidata *' lvalue ParmVar 0x1388af848 'nd' 'struct nameidata *'
    |   |-IfStmt 0x1388c7d20 <line:19:3, line:20:9>
    |   | |-ImplicitCastExpr 0x1388c7cf0 <line:19:7> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1388c7cd0 <col:7> 'int' lvalue Var 0x130058660 'error' 'int'
    |   | `-GotoStmt 0x1388c7d08 <line:20:4, col:9> 'out' 0x130058e80
    |   |-BinaryOperator 0x1388c7f30 <line:21:3, col:32> 'struct dentry *' contains-errors '='
    |   | |-DeclRefExpr 0x1388c7d40 <col:3> 'struct dentry *' lvalue Var 0x130058868 'dentry' 'struct dentry *'
    |   | `-CallExpr 0x1388c7f08 <col:12, col:32> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x1388c7e40 <col:12> 'int ()' Function 0x1388c7d88 'dget' 'int ()'
    |   |   `-CXXDependentScopeMemberExpr 0x1388c7ec0 <col:17, col:26> '<dependent type>' contains-errors lvalue .dentry
    |   |     `-RecoveryExpr 0x1388c7e98 <col:17, col:21> '<dependent type>' contains-errors lvalue
    |   |       `-DeclRefExpr 0x1388c7e60 <col:17> 'struct nameidata *' lvalue ParmVar 0x1388af848 'nd' 'struct nameidata *'
    |   `-GotoStmt 0x1388c7fa0 <line:22:3, col:8> 'done' 0x1388c7f50
    |-CallExpr 0x1388c81c8 <line:25:2, col:35> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1388c80e8 <col:2> 'int ()' Function 0x1388c8030 'mutex_lock' 'int ()'
    | `-UnaryOperator 0x1388c81b0 <col:13, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-CXXDependentScopeMemberExpr 0x1388c8168 <col:14, col:28> '<dependent type>' contains-errors lvalue ->i_mutex
    |     `-RecoveryExpr 0x1388c8140 <col:14, col:19> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x1388c8108 <col:14> 'struct dentry *' contains-errors lvalue Var 0x130058988 'dir' 'struct dentry *'
    |-BinaryOperator 0x1388c83d8 <line:26:2, col:34> 'struct dentry *' contains-errors '='
    | |-DeclRefExpr 0x1388c81f0 <col:2> 'struct dentry *' lvalue Var 0x130058868 'dentry' 'struct dentry *'
    | `-CallExpr 0x1388c83a8 <col:11, col:34> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1388c82f0 <col:11> 'int ()' Function 0x1388c8238 'd_lookup' 'int ()'
    |   |-DeclRefExpr 0x1388c8310 <col:20> 'struct dentry *' contains-errors lvalue Var 0x130058988 'dir' 'struct dentry *'
    |   `-UnaryOperator 0x1388c8390 <col:25, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x1388c8368 <col:26, col:30> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x1388c8330 <col:26> 'struct nameidata *' lvalue ParmVar 0x1388af848 'nd' 'struct nameidata *'
    |-IfStmt 0x1388c90b8 <line:27:2, line:41:2>
    | |-UnaryOperator 0x1388c8430 <line:27:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1388c8418 <col:7> 'struct dentry *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1388c83f8 <col:7> 'struct dentry *' lvalue Var 0x130058868 'dentry' 'struct dentry *'
    | `-CompoundStmt 0x1388c9080 <col:15, line:41:2>
    |   |-BinaryOperator 0x1388c8630 <line:29:3, col:34> 'struct dentry *' contains-errors '='
    |   | |-DeclRefExpr 0x1388c8448 <col:3> 'struct dentry *' lvalue Var 0x130058868 'dentry' 'struct dentry *'
    |   | `-CallExpr 0x1388c8600 <col:12, col:34> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x1388c8548 <col:12> 'int ()' Function 0x1388c8490 'd_alloc' 'int ()'
    |   |   |-DeclRefExpr 0x1388c8568 <col:20> 'struct dentry *' contains-errors lvalue Var 0x130058988 'dir' 'struct dentry *'
    |   |   `-UnaryOperator 0x1388c85e8 <col:25, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |     `-RecoveryExpr 0x1388c85c0 <col:26, col:30> '<dependent type>' contains-errors lvalue
    |   |       `-DeclRefExpr 0x1388c8588 <col:26> 'struct nameidata *' lvalue ParmVar 0x1388af848 'nd' 'struct nameidata *'
    |   |-IfStmt 0x1388c88e0 <line:30:3, line:34:3>
    |   | |-UnaryOperator 0x1388c8688 <line:30:7, col:8> 'int' prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x1388c8670 <col:8> 'struct dentry *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x1388c8650 <col:8> 'struct dentry *' lvalue Var 0x130058868 'dentry' 'struct dentry *'
    |   | `-CompoundStmt 0x1388c88c0 <col:16, line:34:3>
    |   |   |-CallExpr 0x1388c8880 <line:32:4, col:39> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x1388c87a0 <col:4> 'int ()' Function 0x1388c86e8 'mutex_unlock' 'int ()'
    |   |   | `-UnaryOperator 0x1388c8868 <col:17, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   |   `-CXXDependentScopeMemberExpr 0x1388c8820 <col:18, col:32> '<dependent type>' contains-errors lvalue ->i_mutex
    |   |   |     `-RecoveryExpr 0x1388c87f8 <col:18, col:23> '<dependent type>' contains-errors lvalue
    |   |   |       `-DeclRefExpr 0x1388c87c0 <col:18> 'struct dentry *' contains-errors lvalue Var 0x130058988 'dir' 'struct dentry *'
    |   |   `-GotoStmt 0x1388c88a8 <line:33:4, col:9> 'out' 0x130058e80
    |   |-BinaryOperator 0x1388c8b38 <line:35:3, col:55> 'struct dentry *' contains-errors '='
    |   | |-DeclRefExpr 0x1388c8900 <col:3> 'struct dentry *' lvalue Var 0x130058868 'dentry' 'struct dentry *'
    |   | `-CallExpr 0x1388c8b00 <col:12, col:55> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x1388c8a00 <col:12> 'int ()' Function 0x1388c8948 'lookup_real' 'int ()'
    |   |   |-RecoveryExpr 0x1388c8a58 <col:24, col:29> '<dependent type>' contains-errors lvalue
    |   |   | `-DeclRefExpr 0x1388c8a20 <col:24> 'struct dentry *' contains-errors lvalue Var 0x130058988 'dir' 'struct dentry *'
    |   |   |-DeclRefExpr 0x1388c8a80 <col:38> 'struct dentry *' lvalue Var 0x130058868 'dentry' 'struct dentry *'
    |   |   `-RecoveryExpr 0x1388c8ad8 <col:46, col:50> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x1388c8aa0 <col:46> 'struct nameidata *' lvalue ParmVar 0x1388af848 'nd' 'struct nameidata *'
    |   |-BinaryOperator 0x1388c8d88 <line:36:3, col:25> 'int' '='
    |   | |-DeclRefExpr 0x1388c8b58 <col:3> 'int' lvalue Var 0x130058660 'error' 'int'
    |   | `-CallExpr 0x1388c8d48 <col:11, col:25> 'int'
    |   |   |-ImplicitCastExpr 0x1388c8d30 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x1388c8cb8 <col:11> 'int ()' Function 0x1388c8c00 'PTR_ERR' 'int ()'
    |   |   `-ImplicitCastExpr 0x1388c8d70 <col:19> 'struct dentry *' <LValueToRValue>
    |   |     `-DeclRefExpr 0x1388c8cd8 <col:19> 'struct dentry *' lvalue Var 0x130058868 'dentry' 'struct dentry *'
    |   `-IfStmt 0x1388c9060 <line:37:3, line:40:3>
    |     |-CallExpr 0x1388c8ee0 <line:37:7, col:20> 'int'
    |     | |-ImplicitCastExpr 0x1388c8ec8 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |     | | `-DeclRefExpr 0x1388c8e88 <col:7> 'int ()' Function 0x1388c8dd0 'IS_ERR' 'int ()'
    |     | `-ImplicitCastExpr 0x1388c8f08 <col:14> 'struct dentry *' <LValueToRValue>
    |     |   `-DeclRefExpr 0x1388c8ea8 <col:14> 'struct dentry *' lvalue Var 0x130058868 'dentry' 'struct dentry *'
    |     `-CompoundStmt 0x1388c9040 <col:23, line:40:3>
    |       |-CallExpr 0x1388c9000 <line:38:4, col:39> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x1388c8f20 <col:4> 'int ()' Function 0x1388c86e8 'mutex_unlock' 'int ()'
    |       | `-UnaryOperator 0x1388c8fe8 <col:17, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       |   `-CXXDependentScopeMemberExpr 0x1388c8fa0 <col:18, col:32> '<dependent type>' contains-errors lvalue ->i_mutex
    |       |     `-RecoveryExpr 0x1388c8f78 <col:18, col:23> '<dependent type>' contains-errors lvalue
    |       |       `-DeclRefExpr 0x1388c8f40 <col:18> 'struct dentry *' contains-errors lvalue Var 0x130058988 'dir' 'struct dentry *'
    |       `-GotoStmt 0x1388c9028 <line:39:4, col:9> 'out' 0x130058e80
    |-CallExpr 0x1388c91b8 <line:42:2, col:37> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1388c90d8 <col:2> 'int ()' Function 0x1388c86e8 'mutex_unlock' 'int ()'
    | `-UnaryOperator 0x1388c91a0 <col:15, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-CXXDependentScopeMemberExpr 0x1388c9158 <col:16, col:30> '<dependent type>' contains-errors lvalue ->i_mutex
    |     `-RecoveryExpr 0x1388c9130 <col:16, col:21> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x1388c90f8 <col:16> 'struct dentry *' contains-errors lvalue Var 0x130058988 'dir' 'struct dentry *'
    |-LabelStmt 0x1388c95f8 <line:44:1, line:49:2> 'done'
    | `-IfStmt 0x1388c95d8 <line:45:2, line:49:2>
    |   |-BinaryOperator 0x1388c93e8 <line:45:6, col:46> 'int' contains-errors '||'
    |   | |-UnaryOperator 0x1388c9258 <col:6, col:15> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x1388c9240 <col:7, col:15> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   `-RecoveryExpr 0x1388c9218 <col:7, col:15> '<dependent type>' contains-errors lvalue
    |   | |     `-DeclRefExpr 0x1388c91e0 <col:7> 'struct dentry *' lvalue Var 0x130058868 'dentry' 'struct dentry *'
    |   | `-CallExpr 0x1388c93a8 <col:26, col:46> 'int'
    |   |   |-ImplicitCastExpr 0x1388c9390 <col:26> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x1388c9350 <col:26> 'int ()' Function 0x1388c9298 'd_is_negative' 'int ()'
    |   |   `-ImplicitCastExpr 0x1388c93d0 <col:40> 'struct dentry *' <LValueToRValue>
    |   |     `-DeclRefExpr 0x1388c9370 <col:40> 'struct dentry *' lvalue Var 0x130058868 'dentry' 'struct dentry *'
    |   `-CompoundStmt 0x1388c95b8 <col:49, line:49:2>
    |     |-CallExpr 0x1388c9560 <line:47:3, col:14> 'int'
    |     | |-ImplicitCastExpr 0x1388c9548 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | | `-DeclRefExpr 0x1388c9508 <col:3> 'int ()' Function 0x1388c9450 'dput' 'int ()'
    |     | `-ImplicitCastExpr 0x1388c9588 <col:8> 'struct dentry *' <LValueToRValue>
    |     |   `-DeclRefExpr 0x1388c9528 <col:8> 'struct dentry *' lvalue Var 0x130058868 'dentry' 'struct dentry *'
    |     `-GotoStmt 0x1388c95a0 <line:48:3, col:8> 'out' 0x130058e80
    |-BinaryOperator 0x1388c9698 <line:50:2, col:17> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x1388c9650 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x1388c9618 <col:2> 'struct path *' lvalue ParmVar 0x130058428 'path' 'struct path *'
    | `-DeclRefExpr 0x1388c9678 <col:17> 'struct dentry *' lvalue Var 0x130058868 'dentry' 'struct dentry *'
    |-BinaryOperator 0x1388c98e8 <line:51:2, col:33> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x1388c96f0 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x1388c96b8 <col:2> 'struct path *' lvalue ParmVar 0x130058428 'path' 'struct path *'
    | `-CallExpr 0x1388c98c0 <col:14, col:33> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1388c97f8 <col:14> 'int ()' Function 0x1388c9740 'mntget' 'int ()'
    |   `-CXXDependentScopeMemberExpr 0x1388c9878 <col:21, col:30> '<dependent type>' contains-errors lvalue .mnt
    |     `-RecoveryExpr 0x1388c9850 <col:21, col:25> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x1388c9818 <col:21> 'struct nameidata *' lvalue ParmVar 0x1388af848 'nd' 'struct nameidata *'
    |-IfStmt 0x1388c9ad8 <line:52:2, line:53:10>
    | |-RecoveryExpr 0x1388c9a88 <line:52:6, col:58> '_Bool' contains-errors
    | `-ReturnStmt 0x1388c9ac8 <line:53:3, col:10>
    |   `-IntegerLiteral 0x1388c9aa8 <col:10> 'int' 1
    |-CallExpr 0x1388c9c38 <line:54:2, col:19> 'int'
    | |-ImplicitCastExpr 0x1388c9c20 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1388c9bd8 <col:2> 'int ()' Function 0x1388c9b20 'follow_mount' 'int ()'
    | `-ImplicitCastExpr 0x1388c9c60 <col:15> 'struct path *' <LValueToRValue>
    |   `-DeclRefExpr 0x1388c9c00 <col:15> 'struct path *' lvalue ParmVar 0x130058428 'path' 'struct path *'
    |-BinaryOperator 0x1388c9cb8 <line:55:2, col:10> 'int' '='
    | |-DeclRefExpr 0x1388c9c78 <col:2> 'int' lvalue Var 0x130058660 'error' 'int'
    | `-IntegerLiteral 0x1388c9c98 <col:10> 'int' 0
    |-LabelStmt 0x1388c9e50 <line:56:1, line:57:19> 'out'
    | `-CallExpr 0x1388c9e10 <col:2, col:19> 'int'
    |   |-ImplicitCastExpr 0x1388c9df8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x1388c9db8 <col:2> 'int ()' Function 0x1388c9d00 'terminate_walk' 'int ()'
    |   `-ImplicitCastExpr 0x1388c9e38 <col:17> 'struct nameidata *' <LValueToRValue>
    |     `-DeclRefExpr 0x1388c9dd8 <col:17> 'struct nameidata *' lvalue ParmVar 0x1388af848 'nd' 'struct nameidata *'
    `-ReturnStmt 0x1388c9ea8 <line:58:2, col:9>
      `-ImplicitCastExpr 0x1388c9e90 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1388c9e70 <col:9> 'int' lvalue Var 0x130058660 'error' 'int'
