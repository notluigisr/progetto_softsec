TranslationUnitDecl 0x128855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1288564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x128855bd0 '__int128'
|-TypedefDecl 0x128856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x128855bf0 'unsigned __int128'
|-TypedefDecl 0x128926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x128926000 'struct __NSConstantString_tag'
|   `-Record 0x128856580 '__NSConstantString_tag'
|-TypedefDecl 0x128926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x128855d90 '__SVInt8_t'
|-TypedefDecl 0x128926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x128855db0 '__SVInt16_t'
|-TypedefDecl 0x128926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x128855dd0 '__SVInt32_t'
|-TypedefDecl 0x1289263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x128855df0 '__SVInt64_t'
|-TypedefDecl 0x128926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x128855e10 '__SVUint8_t'
|-TypedefDecl 0x1289264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x128855e30 '__SVUint16_t'
|-TypedefDecl 0x128926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x128855e50 '__SVUint32_t'
|-TypedefDecl 0x128926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x128855e70 '__SVUint64_t'
|-TypedefDecl 0x1289265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x128855e90 '__SVFloat16_t'
|-TypedefDecl 0x128926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x128855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1289266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x128855ed0 '__SVFloat64_t'
|-TypedefDecl 0x128926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x128855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x128926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x128855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1289267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x128855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x128926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x128855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1289268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x128855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x128926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x128855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x128926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x128855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1289269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x128855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x128926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x128855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x128926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x128856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x128926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x128856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x128926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x128856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x128926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x128856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x128926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x128856090 '__clang_svint8x3_t'
|-TypedefDecl 0x128926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1288560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x128926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1288560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x128926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1288560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x128926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x128856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x128926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x128856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x128926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x128856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x128926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x128856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x128926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x128856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x128927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1288561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x128927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1288561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1289278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1288561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x128927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x128856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1289279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x128856230 '__clang_svint16x4_t'
|-TypedefDecl 0x128927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x128856250 '__clang_svint32x4_t'
|-TypedefDecl 0x128927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x128856270 '__clang_svint64x4_t'
|-TypedefDecl 0x128927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x128856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x128927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1288562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x128927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1288562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x128927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1288562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x128927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x128856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x128927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x128856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x128927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x128856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x128927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x128856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x128927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x128856390 '__SVBool_t'
|-TypedefDecl 0x128927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1288563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x128927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1288563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x128927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1288563f0 '__SVCount_t'
|-TypedefDecl 0x128927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x128927fb0 'char *'
|   `-BuiltinType 0x1288556b0 'char'
|-TypedefDecl 0x128928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x128927fb0 'char *'
|   `-BuiltinType 0x1288556b0 'char'
|-FunctionDecl 0x128928408 <dataset_diviso_filec/func19511_vuln.c:1:1, line:56:1> line:1:1 invalid ImagingConvertTransparent 'int (int, const char *, int, int, int)'
| |-ParmVarDecl 0x1289280f0 <col:27, col:35> col:35 invalid imIn 'int'
| |-ParmVarDecl 0x128928170 <col:41, col:53> col:53 used mode 'const char *'
| |-ParmVarDecl 0x1289281f0 <col:59, col:63> col:63 used r 'int'
| |-ParmVarDecl 0x128928270 <col:66, col:70> col:70 used g 'int'
| |-ParmVarDecl 0x1289282f0 <col:73, col:77> col:77 used b 'int'
| `-CompoundStmt 0x128944288 <col:80, line:56:1>
|   |-DeclStmt 0x128928558 <line:5:5, col:10>
|   | `-VarDecl 0x1289284f0 <col:5, col:9> col:9 used y 'int'
|   |-IfStmt 0x1289285e8 <line:7:5, line:9:5>
|   | |-UnaryOperator 0x1289285a8 <line:7:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x128928590 <col:10> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x128928570 <col:10> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x1289285d8 <col:16, line:9:5>
|   |-IfStmt 0x128942670 <line:11:5, line:27:5>
|   | |-UnaryOperator 0x128942140 <line:11:9, line:13:35> 'int' contains-errors prefix '!' cannot overflow
|   | | `-ParenExpr 0x128942120 <line:11:10, line:13:35> 'int' contains-errors
|   | |   `-BinaryOperator 0x128942100 <line:11:11, line:13:34> 'int' contains-errors '&&'
|   | |     |-ParenExpr 0x128941f48 <line:11:11, line:12:42> 'int' contains-errors
|   | |     | `-BinaryOperator 0x128941f28 <line:11:12, line:12:41> 'int' contains-errors '||'
|   | |     |   |-BinaryOperator 0x128941dc0 <line:11:12, col:41> 'int' contains-errors '=='
|   | |     |   | |-CallExpr 0x128941d70 <col:12, col:36> '<dependent type>' contains-errors
|   | |     |   | | |-DeclRefExpr 0x128941c50 <col:12> 'int (const char *, const char *)' Function 0x128941a70 'strcmp' 'int (const char *, const char *)'
|   | |     |   | | |-CXXDependentScopeMemberExpr 0x128941c90 <col:19, col:25> '<dependent type>' contains-errors lvalue ->mode
|   | |     |   | | | `-RecoveryExpr 0x128941c70 <col:19> '<dependent type>' contains-errors lvalue
|   | |     |   | | `-StringLiteral 0x128941d20 <col:31> 'char[4]' lvalue "STR"
|   | |     |   | `-IntegerLiteral 0x128941da0 <col:41> 'int' 0
|   | |     |   `-BinaryOperator 0x128941f08 <line:12:12, col:41> 'int' contains-errors '=='
|   | |     |     |-CallExpr 0x128941eb8 <col:12, col:36> '<dependent type>' contains-errors
|   | |     |     | |-DeclRefExpr 0x128941de0 <col:12> 'int (const char *, const char *)' Function 0x128941a70 'strcmp' 'int (const char *, const char *)'
|   | |     |     | |-CXXDependentScopeMemberExpr 0x128941e20 <col:19, col:25> '<dependent type>' contains-errors lvalue ->mode
|   | |     |     | | `-RecoveryExpr 0x128941e00 <col:19> '<dependent type>' contains-errors lvalue
|   | |     |     | `-StringLiteral 0x128941e68 <col:31> 'char[4]' lvalue "STR"
|   | |     |     `-IntegerLiteral 0x128941ee8 <col:41> 'int' 0
|   | |     `-BinaryOperator 0x1289420e0 <line:13:11, col:34> 'int' '=='
|   | |       |-CallExpr 0x128942048 <col:11, col:29> 'int'
|   | |       | |-ImplicitCastExpr 0x128942030 <col:11> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | |       | | `-DeclRefExpr 0x128941f68 <col:11> 'int (const char *, const char *)' Function 0x128941a70 'strcmp' 'int (const char *, const char *)'
|   | |       | |-ImplicitCastExpr 0x128942078 <col:18> 'const char *' <LValueToRValue>
|   | |       | | `-DeclRefExpr 0x128941f88 <col:18> 'const char *' lvalue ParmVar 0x128928170 'mode' 'const char *'
|   | |       | `-ImplicitCastExpr 0x1289420a8 <col:24> 'const char *' <NoOp>
|   | |       |   `-ImplicitCastExpr 0x128942090 <col:24> 'char *' <ArrayToPointerDecay>
|   | |       |     `-StringLiteral 0x128941fa8 <col:24> 'char[4]' lvalue "STR"
|   | |       `-IntegerLiteral 0x1289420c0 <col:34> 'int' 0
|   | `-CompoundStmt 0x128942650 <line:19:5, line:27:5>
|   |   |-DeclStmt 0x128942268 <line:20:9, col:29>
|   |   | `-VarDecl 0x128942200 <col:9, col:28> col:21 used buf 'char[100]' static
|   |   `-CallExpr 0x1289425f8 <line:21:9, line:25:17> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x1289424e0 <line:21:9> 'int (char *, const char *, ...)' Function 0x1289422c8 'sprintf' 'int (char *, const char *, ...)'
|   |     |-DeclRefExpr 0x128942500 <line:22:13> 'char[100]' lvalue Var 0x128942200 'buf' 'char[100]'
|   |     |-StringLiteral 0x128942520 <line:23:13> 'char[4]' lvalue "STR"
|   |     |-CXXDependentScopeMemberExpr 0x128942560 <line:24:13, col:19> '<dependent type>' contains-errors lvalue ->mode
|   |     | `-RecoveryExpr 0x128942540 <col:13> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x1289425a8 <line:25:13> 'const char *' lvalue ParmVar 0x128928170 'mode' 'const char *'
|   |-IfStmt 0x128943a40 <line:30:5, line:41:5> has_else
|   | |-BinaryOperator 0x1289427b8 <line:30:9, col:38> 'int' contains-errors '=='
|   | | |-CallExpr 0x128942768 <col:9, col:33> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x128942690 <col:9> 'int (const char *, const char *)' Function 0x128941a70 'strcmp' 'int (const char *, const char *)'
|   | | | |-CXXDependentScopeMemberExpr 0x1289426d0 <col:16, col:22> '<dependent type>' contains-errors lvalue ->mode
|   | | | | `-RecoveryExpr 0x1289426b0 <col:16> '<dependent type>' contains-errors lvalue
|   | | | `-StringLiteral 0x128942718 <col:28> 'char[4]' lvalue "STR"
|   | | `-IntegerLiteral 0x128942798 <col:38> 'int' 0
|   | |-CompoundStmt 0x1289427f0 <col:41, line:32:5>
|   | `-CompoundStmt 0x128943a20 <col:12, line:41:5>
|   |   |-IfStmt 0x128943938 <line:33:9, line:39:9> has_else
|   |   | |-BinaryOperator 0x128943728 <line:33:13, col:42> 'int' contains-errors '=='
|   |   | | |-CallExpr 0x1289436d8 <col:13, col:37> '<dependent type>' contains-errors
|   |   | | | |-DeclRefExpr 0x128943600 <col:13> 'int (const char *, const char *)' Function 0x128941a70 'strcmp' 'int (const char *, const char *)'
|   |   | | | |-CXXDependentScopeMemberExpr 0x128943640 <col:20, col:26> '<dependent type>' contains-errors lvalue ->mode
|   |   | | | | `-RecoveryExpr 0x128943620 <col:20> '<dependent type>' contains-errors lvalue
|   |   | | | `-StringLiteral 0x128943688 <col:32> 'char[4]' lvalue "STR"
|   |   | | `-IntegerLiteral 0x128943708 <col:42> 'int' 0
|   |   | |-CompoundStmt 0x128943760 <col:45, line:35:9>
|   |   | `-IfStmt 0x128943908 <col:16, line:39:9> has_else
|   |   |   |-BinaryOperator 0x128943898 <line:35:20, col:49> 'int' contains-errors '=='
|   |   |   | |-CallExpr 0x128943848 <col:20, col:44> '<dependent type>' contains-errors
|   |   |   | | |-DeclRefExpr 0x128943770 <col:20> 'int (const char *, const char *)' Function 0x128941a70 'strcmp' 'int (const char *, const char *)'
|   |   |   | | |-CXXDependentScopeMemberExpr 0x1289437b0 <col:27, col:33> '<dependent type>' contains-errors lvalue ->mode
|   |   |   | | | `-RecoveryExpr 0x128943790 <col:27> '<dependent type>' contains-errors lvalue
|   |   |   | | `-StringLiteral 0x1289437f8 <col:39> 'char[4]' lvalue "STR"
|   |   |   | `-IntegerLiteral 0x128943878 <col:49> 'int' 0
|   |   |   |-CompoundStmt 0x1289438d0 <col:52, line:37:9>
|   |   |   `-CompoundStmt 0x1289438f8 <col:16, line:39:9>
|   |   `-BinaryOperator 0x128943a00 <line:40:9, col:17> 'int' '='
|   |     |-DeclRefExpr 0x128943968 <col:9> 'int' lvalue ParmVar 0x128928270 'g' 'int'
|   |     `-BinaryOperator 0x1289439e0 <col:13, col:17> 'int' '='
|   |       |-DeclRefExpr 0x128943988 <col:13> 'int' lvalue ParmVar 0x1289282f0 'b' 'int'
|   |       `-ImplicitCastExpr 0x1289439c8 <col:17> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x1289439a8 <col:17> 'int' lvalue ParmVar 0x1289281f0 'r' 'int'
|   |-IfStmt 0x128943cb0 <line:44:5, line:46:5>
|   | |-RecoveryExpr 0x128943c80 <line:44:9, col:10> '_Bool' contains-errors
|   | `-CompoundStmt 0x128943ca0 <col:17, line:46:5>
|   `-ForStmt 0x128944150 <line:49:5, line:52:5>
|     |-BinaryOperator 0x128943e10 <line:49:10, col:14> 'int' '='
|     | |-DeclRefExpr 0x128943dd0 <col:10> 'int' lvalue Var 0x1289284f0 'y' 'int'
|     | `-IntegerLiteral 0x128943df0 <col:14> 'int' 0
|     |-<<<NULL>>>
|     |-BinaryOperator 0x128943eb8 <col:17, col:27> 'int' contains-errors '<'
|     | |-DeclRefExpr 0x128943e30 <col:17> 'int' lvalue Var 0x1289284f0 'y' 'int'
|     | `-CXXDependentScopeMemberExpr 0x128943e70 <col:21, col:27> '<dependent type>' contains-errors lvalue ->ysize
|     |   `-RecoveryExpr 0x128943e50 <col:21> '<dependent type>' contains-errors lvalue
|     |-UnaryOperator 0x128943ef8 <col:34, col:35> 'int' postfix '++'
|     | `-DeclRefExpr 0x128943ed8 <col:34> 'int' lvalue Var 0x1289284f0 'y' 'int'
|     `-CompoundStmt 0x128944140 <col:39, line:52:5>
|-FunctionDecl 0x128941a70 <line:11:12> col:12 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x128941b70 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x128941bd8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x128941b18 <<invalid sloc>> Implicit 887
`-FunctionDecl 0x1289422c8 <line:21:9> col:9 implicit used sprintf 'int (char *, const char *, ...)' extern
  |-ParmVarDecl 0x1289423c8 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x128942430 <<invalid sloc>> <invalid sloc> 'const char *'
  |-BuiltinAttr 0x128942370 <<invalid sloc>> Implicit 906
  `-FormatAttr 0x1289424a8 <col:9> Implicit printf 2 3
