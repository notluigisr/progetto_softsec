TranslationUnitDecl 0x147055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1470564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x147055bd0 '__int128'
|-TypedefDecl 0x147056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x147055bf0 'unsigned __int128'
|-TypedefDecl 0x147126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x147126000 'struct __NSConstantString_tag'
|   `-Record 0x147056580 '__NSConstantString_tag'
|-TypedefDecl 0x147126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x147055d90 '__SVInt8_t'
|-TypedefDecl 0x147126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x147055db0 '__SVInt16_t'
|-TypedefDecl 0x147126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x147055dd0 '__SVInt32_t'
|-TypedefDecl 0x1471263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x147055df0 '__SVInt64_t'
|-TypedefDecl 0x147126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x147055e10 '__SVUint8_t'
|-TypedefDecl 0x1471264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x147055e30 '__SVUint16_t'
|-TypedefDecl 0x147126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x147055e50 '__SVUint32_t'
|-TypedefDecl 0x147126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x147055e70 '__SVUint64_t'
|-TypedefDecl 0x1471265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x147055e90 '__SVFloat16_t'
|-TypedefDecl 0x147126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x147055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1471266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x147055ed0 '__SVFloat64_t'
|-TypedefDecl 0x147126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x147055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x147126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x147055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1471267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x147055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x147126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x147055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1471268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x147055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x147126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x147055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x147126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x147055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1471269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x147055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x147126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x147055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x147126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x147056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x147126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x147056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x147126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x147056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x147126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x147056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x147126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x147056090 '__clang_svint8x3_t'
|-TypedefDecl 0x147126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1470560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x147126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1470560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x147126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1470560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x147126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x147056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x147126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x147056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x147126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x147056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x147126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x147056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x147126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x147056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x147127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1470561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x147127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1470561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1471278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1470561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x147127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x147056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1471279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x147056230 '__clang_svint16x4_t'
|-TypedefDecl 0x147127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x147056250 '__clang_svint32x4_t'
|-TypedefDecl 0x147127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x147056270 '__clang_svint64x4_t'
|-TypedefDecl 0x147127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x147056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x147127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1470562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x147127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1470562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x147127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1470562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x147127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x147056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x147127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x147056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x147127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x147056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x147127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x147056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x147127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x147056390 '__SVBool_t'
|-TypedefDecl 0x147127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1470563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x147127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1470563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x147127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1470563f0 '__SVCount_t'
|-TypedefDecl 0x147127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x147127fb0 'char *'
|   `-BuiltinType 0x1470556b0 'char'
|-TypedefDecl 0x147128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x147127fb0 'char *'
|   `-BuiltinType 0x1470556b0 'char'
`-FunctionDecl 0x147128438 <dataset_diviso_filec/func23043_vuln.c:1:1, line:43:1> line:1:1 invalid GetCode_ 'int (int *, int *, int, int, int *)'
  |-ParmVarDecl 0x147128128 <col:10, col:19> col:19 invalid fd 'int *'
  |-ParmVarDecl 0x1471281a8 <col:23, col:41> col:41 referenced invalid scd 'int *'
  |-ParmVarDecl 0x147128228 <col:46, col:50> col:50 used code_size 'int'
  |-ParmVarDecl 0x1471282a8 <col:61, col:65> col:65 used flag 'int'
  |-ParmVarDecl 0x147128328 <col:71, col:76> col:76 used ZeroDataBlockP 'int *'
  `-CompoundStmt 0x147143768 <line:2:1, line:43:1>
    |-DeclStmt 0x1471286a8 <line:3:2, col:25>
    | |-VarDecl 0x147128520 <col:2, col:16> col:16 used i 'int'
    | |-VarDecl 0x1471285a0 <col:2, col:19> col:19 used j 'int'
    | `-VarDecl 0x147128620 <col:2, col:22> col:22 used ret 'int'
    |-DeclStmt 0x147128740 <line:4:2, col:21>
    | `-VarDecl 0x1471286d8 <col:2, col:16> col:16 used count 'unsigned char'
    |-IfStmt 0x147141b98 <line:6:2, line:12:2>
    | |-ImplicitCastExpr 0x147128778 <line:6:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x147128758 <col:6> 'int' lvalue ParmVar 0x1471282a8 'flag' 'int'
    | `-CompoundStmt 0x147141b60 <col:12, line:12:2>
    |   |-BinaryOperator 0x147141868 <line:7:3, col:17> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x147141800 <col:3, col:8> '<dependent type>' contains-errors lvalue ->curbit
    |   | | `-RecoveryExpr 0x1471287b0 <col:3> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x147128790 <col:3> 'int *' lvalue ParmVar 0x1471281a8 'scd' 'int *'
    |   | `-IntegerLiteral 0x147141848 <col:17> 'int' 0
    |   |-BinaryOperator 0x147141938 <line:8:3, col:18> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x1471418d0 <col:3, col:8> '<dependent type>' contains-errors lvalue ->lastbit
    |   | | `-RecoveryExpr 0x1471418a8 <col:3> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x147141888 <col:3> 'int *' lvalue ParmVar 0x1471281a8 'scd' 'int *'
    |   | `-IntegerLiteral 0x147141918 <col:18> 'int' 0
    |   |-BinaryOperator 0x147141a08 <line:9:3, col:20> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x1471419a0 <col:3, col:8> '<dependent type>' contains-errors lvalue ->last_byte
    |   | | `-RecoveryExpr 0x147141978 <col:3> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x147141958 <col:3> 'int *' lvalue ParmVar 0x1471281a8 'scd' 'int *'
    |   | `-IntegerLiteral 0x1471419e8 <col:20> 'int' 0
    |   |-BinaryOperator 0x147141b10 <line:10:3, col:15> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x147141a70 <col:3, col:8> '<dependent type>' contains-errors lvalue ->done
    |   | | `-RecoveryExpr 0x147141a48 <col:3> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x147141a28 <col:3> 'int *' lvalue ParmVar 0x1471281a8 'scd' 'int *'
    |   | `-RecoveryExpr 0x147141af0 <col:15> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x147141b50 <line:11:3, col:10>
    |     `-IntegerLiteral 0x147141b30 <col:10> 'int' 0
    |-IfStmt 0x147142d88 <line:14:2, line:30:2>
    | |-BinaryOperator 0x147141ce8 <line:14:7, col:41> 'int' contains-errors '>='
    | | |-ParenExpr 0x147141c60 <col:7, col:31> '<dependent type>' contains-errors
    | | | `-BinaryOperator 0x147141c40 <col:8, col:22> '<dependent type>' contains-errors '+'
    | | |   |-CXXDependentScopeMemberExpr 0x147141bd8 <col:8, col:13> '<dependent type>' contains-errors lvalue ->curbit
    | | |   | `-RecoveryExpr 0x147141bb8 <col:8> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x147141c20 <col:22> 'int' lvalue ParmVar 0x147128228 'code_size' 'int'
    | | `-CXXDependentScopeMemberExpr 0x147141ca0 <col:36, col:41> '<dependent type>' contains-errors lvalue ->lastbit
    | |   `-RecoveryExpr 0x147141c80 <col:36> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x147142d40 <col:50, line:30:2>
    |   |-IfStmt 0x147141ef8 <line:15:3, line:20:3>
    |   | |-CXXDependentScopeMemberExpr 0x147141d28 <line:15:7, col:12> '<dependent type>' contains-errors lvalue ->done
    |   | | `-RecoveryExpr 0x147141d08 <col:7> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x147141ed8 <col:18, line:20:3>
    |   |   |-IfStmt 0x147141e70 <line:16:4, line:18:4>
    |   |   | |-BinaryOperator 0x147141e40 <line:16:8, col:28> 'int' contains-errors '>='
    |   |   | | |-CXXDependentScopeMemberExpr 0x147141d90 <col:8, col:13> '<dependent type>' contains-errors lvalue ->curbit
    |   |   | | | `-RecoveryExpr 0x147141d70 <col:8> '<dependent type>' contains-errors lvalue
    |   |   | | `-CXXDependentScopeMemberExpr 0x147141df8 <col:23, col:28> '<dependent type>' contains-errors lvalue ->lastbit
    |   |   | |   `-RecoveryExpr 0x147141dd8 <col:23> '<dependent type>' contains-errors lvalue
    |   |   | `-CompoundStmt 0x147141e60 <col:37, line:18:4>
    |   |   `-ReturnStmt 0x147141ec8 <line:19:4, col:12>
    |   |     `-UnaryOperator 0x147141eb0 <col:11, col:12> 'int' prefix '-'
    |   |       `-IntegerLiteral 0x147141e90 <col:12> 'int' 1
    |   |-BinaryOperator 0x147142148 <line:21:3, col:42> '<dependent type>' contains-errors '='
    |   | |-ArraySubscriptExpr 0x147141fe0 <col:3, col:13> '<dependent type>' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x147141fc8 <col:3, col:8> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | `-CXXDependentScopeMemberExpr 0x147141f60 <col:3, col:8> '<dependent type>' contains-errors lvalue ->buf
    |   | | |   `-RecoveryExpr 0x147141f38 <col:3> '<dependent type>' contains-errors lvalue
    |   | | |     `-DeclRefExpr 0x147141f18 <col:3> 'int *' lvalue ParmVar 0x1471281a8 'scd' 'int *'
    |   | | `-IntegerLiteral 0x147141fa8 <col:12> 'int' 0
    |   | `-ArraySubscriptExpr 0x147142128 <col:17, col:42> '<dependent type>' contains-errors lvalue
    |   |   |-ImplicitCastExpr 0x147142110 <col:17, col:22> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | `-CXXDependentScopeMemberExpr 0x147142020 <col:17, col:22> '<dependent type>' contains-errors lvalue ->buf
    |   |   |   `-RecoveryExpr 0x147142000 <col:17> '<dependent type>' contains-errors lvalue
    |   |   `-BinaryOperator 0x1471420f0 <col:26, col:41> '<dependent type>' contains-errors '-'
    |   |     |-CXXDependentScopeMemberExpr 0x147142088 <col:26, col:31> '<dependent type>' contains-errors lvalue ->last_byte
    |   |     | `-RecoveryExpr 0x147142068 <col:26> '<dependent type>' contains-errors lvalue
    |   |     `-IntegerLiteral 0x1471420d0 <col:41> 'int' 2
    |   |-BinaryOperator 0x147142398 <line:22:3, col:42> '<dependent type>' contains-errors '='
    |   | |-ArraySubscriptExpr 0x147142230 <col:3, col:13> '<dependent type>' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x147142218 <col:3, col:8> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | `-CXXDependentScopeMemberExpr 0x1471421b0 <col:3, col:8> '<dependent type>' contains-errors lvalue ->buf
    |   | | |   `-RecoveryExpr 0x147142188 <col:3> '<dependent type>' contains-errors lvalue
    |   | | |     `-DeclRefExpr 0x147142168 <col:3> 'int *' lvalue ParmVar 0x1471281a8 'scd' 'int *'
    |   | | `-IntegerLiteral 0x1471421f8 <col:12> 'int' 1
    |   | `-ArraySubscriptExpr 0x147142378 <col:17, col:42> '<dependent type>' contains-errors lvalue
    |   |   |-ImplicitCastExpr 0x147142360 <col:17, col:22> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | `-CXXDependentScopeMemberExpr 0x147142270 <col:17, col:22> '<dependent type>' contains-errors lvalue ->buf
    |   |   |   `-RecoveryExpr 0x147142250 <col:17> '<dependent type>' contains-errors lvalue
    |   |   `-BinaryOperator 0x147142340 <col:26, col:41> '<dependent type>' contains-errors '-'
    |   |     |-CXXDependentScopeMemberExpr 0x1471422d8 <col:26, col:31> '<dependent type>' contains-errors lvalue ->last_byte
    |   |     | `-RecoveryExpr 0x1471422b8 <col:26> '<dependent type>' contains-errors lvalue
    |   |     `-IntegerLiteral 0x147142320 <col:41> 'int' 1
    |   |-IfStmt 0x147142840 <line:24:16, line:25:16>
    |   | |-BinaryOperator 0x147142700 <line:24:20, col:80> 'int' contains-errors '<='
    |   | | |-ParenExpr 0x1471426c0 <col:20, col:75> 'unsigned char' contains-errors
    |   | | | `-BinaryOperator 0x1471426a0 <col:21, col:74> 'unsigned char' contains-errors '='
    |   | | |   |-DeclRefExpr 0x1471423b8 <col:21> 'unsigned char' lvalue Var 0x1471286d8 'count' 'unsigned char'
    |   | | |   `-CallExpr 0x147142668 <col:29, col:74> '<dependent type>' contains-errors
    |   | | |     |-DeclRefExpr 0x147142530 <col:29> 'int ()' Function 0x147142478 'GetDataBlock' 'int ()'
    |   | | |     |-RecoveryExpr 0x147142550 <col:42> '<dependent type>' contains-errors lvalue
    |   | | |     |-UnaryOperator 0x147142630 <col:46, col:57> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | |     | `-ArraySubscriptExpr 0x147142610 <col:47, col:57> '<dependent type>' contains-errors lvalue
    |   | | |     |   |-ImplicitCastExpr 0x1471425f8 <col:47, col:52> '<dependent type>' contains-errors <LValueToRValue>
    |   | | |     |   | `-CXXDependentScopeMemberExpr 0x147142590 <col:47, col:52> '<dependent type>' contains-errors lvalue ->buf
    |   | | |     |   |   `-RecoveryExpr 0x147142570 <col:47> '<dependent type>' contains-errors lvalue
    |   | | |     |   `-IntegerLiteral 0x1471425d8 <col:56> 'int' 2
    |   | | |     `-DeclRefExpr 0x147142648 <col:60> 'int *' lvalue ParmVar 0x147128328 'ZeroDataBlockP' 'int *'
    |   | | `-IntegerLiteral 0x1471426e0 <col:80> 'int' 0
    |   | `-BinaryOperator 0x147142820 <line:25:4, col:16> '<dependent type>' contains-errors '='
    |   |   |-CXXDependentScopeMemberExpr 0x147142768 <col:4, col:9> '<dependent type>' contains-errors lvalue ->done
    |   |   | `-RecoveryExpr 0x147142740 <col:4> '<dependent type>' contains-errors lvalue
    |   |   |   `-DeclRefExpr 0x147142720 <col:4> 'int *' lvalue ParmVar 0x1471281a8 'scd' 'int *'
    |   |   `-RecoveryExpr 0x147142800 <col:16> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x147142980 <line:27:3, col:24> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x1471428a8 <col:3, col:8> '<dependent type>' contains-errors lvalue ->last_byte
    |   | | `-RecoveryExpr 0x147142880 <col:3> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x147142860 <col:3> 'int *' lvalue ParmVar 0x1471281a8 'scd' 'int *'
    |   | `-BinaryOperator 0x147142960 <col:20, col:24> 'int' '+'
    |   |   |-IntegerLiteral 0x1471428f0 <col:20> 'int' 2
    |   |   `-ImplicitCastExpr 0x147142948 <col:24> 'int' <IntegralCast>
    |   |     `-ImplicitCastExpr 0x147142930 <col:24> 'unsigned char' <LValueToRValue>
    |   |       `-DeclRefExpr 0x147142910 <col:24> 'unsigned char' lvalue Var 0x1471286d8 'count' 'unsigned char'
    |   |-BinaryOperator 0x147142b80 <line:28:3, col:48> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x1471429e8 <col:3, col:8> '<dependent type>' contains-errors lvalue ->curbit
    |   | | `-RecoveryExpr 0x1471429c0 <col:3> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x1471429a0 <col:3> 'int *' lvalue ParmVar 0x1471281a8 'scd' 'int *'
    |   | `-BinaryOperator 0x147142b60 <col:17, col:48> '<dependent type>' contains-errors '+'
    |   |   |-ParenExpr 0x147142b20 <col:17, col:44> '<dependent type>' contains-errors
    |   |   | `-BinaryOperator 0x147142b00 <col:18, col:37> '<dependent type>' contains-errors '-'
    |   |   |   |-CXXDependentScopeMemberExpr 0x147142a50 <col:18, col:23> '<dependent type>' contains-errors lvalue ->curbit
    |   |   |   | `-RecoveryExpr 0x147142a30 <col:18> '<dependent type>' contains-errors lvalue
    |   |   |   `-CXXDependentScopeMemberExpr 0x147142ab8 <col:32, col:37> '<dependent type>' contains-errors lvalue ->lastbit
    |   |   |     `-RecoveryExpr 0x147142a98 <col:32> '<dependent type>' contains-errors lvalue
    |   |   `-IntegerLiteral 0x147142b40 <col:48> 'int' 16
    |   `-BinaryOperator 0x147142d20 <line:29:3, col:28> '<dependent type>' contains-errors '='
    |     |-CXXDependentScopeMemberExpr 0x147142be8 <col:3, col:8> '<dependent type>' contains-errors lvalue ->lastbit
    |     | `-RecoveryExpr 0x147142bc0 <col:3> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x147142ba0 <col:3> 'int *' lvalue ParmVar 0x1471281a8 'scd' 'int *'
    |     `-BinaryOperator 0x147142d00 <col:18, col:28> 'int' '*'
    |       |-ParenExpr 0x147142cc0 <col:18, col:26> 'int'
    |       | `-BinaryOperator 0x147142ca0 <col:19, col:21> 'int' '+'
    |       |   |-IntegerLiteral 0x147142c30 <col:19> 'int' 2
    |       |   `-ImplicitCastExpr 0x147142c88 <col:21> 'int' <IntegralCast>
    |       |     `-ImplicitCastExpr 0x147142c70 <col:21> 'unsigned char' <LValueToRValue>
    |       |       `-DeclRefExpr 0x147142c50 <col:21> 'unsigned char' lvalue Var 0x1471286d8 'count' 'unsigned char'
    |       `-IntegerLiteral 0x147142ce0 <col:28> 'int' 8
    |-IfStmt 0x147143610 <line:32:2, line:39:2> has_else
    | |-RecoveryExpr 0x147142f08 <line:32:6, col:56> '_Bool' contains-errors
    | |-CompoundStmt 0x147142fa0 <col:59, line:34:2>
    | | `-BinaryOperator 0x147142f80 <line:33:3, col:10> 'int' '='
    | |   |-DeclRefExpr 0x147142f28 <col:3> 'int' lvalue Var 0x147128620 'ret' 'int'
    | |   `-UnaryOperator 0x147142f68 <col:9, col:10> 'int' prefix '-'
    | |     `-IntegerLiteral 0x147142f48 <col:10> 'int' 1
    | `-CompoundStmt 0x1471435f0 <line:34:9, line:39:2>
    |   |-BinaryOperator 0x147142ff8 <line:35:3, col:9> 'int' '='
    |   | |-DeclRefExpr 0x147142fb8 <col:3> 'int' lvalue Var 0x147128620 'ret' 'int'
    |   | `-IntegerLiteral 0x147142fd8 <col:9> 'int' 0
    |   `-ForStmt 0x1471435b8 <line:36:3, line:38:3>
    |     |-BinaryOperator 0x147143120 <line:36:8, col:29> 'int' contains-errors ','
    |     | |-BinaryOperator 0x1471430a0 <col:8, col:17> 'int' contains-errors '='
    |     | | |-DeclRefExpr 0x147143018 <col:8> 'int' lvalue Var 0x147128520 'i' 'int'
    |     | | `-CXXDependentScopeMemberExpr 0x147143058 <col:12, col:17> '<dependent type>' contains-errors lvalue ->curbit
    |     | |   `-RecoveryExpr 0x147143038 <col:12> '<dependent type>' contains-errors lvalue
    |     | `-BinaryOperator 0x147143100 <col:25, col:29> 'int' '='
    |     |   |-DeclRefExpr 0x1471430c0 <col:25> 'int' lvalue Var 0x1471285a0 'j' 'int'
    |     |   `-IntegerLiteral 0x1471430e0 <col:29> 'int' 0
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x1471431b0 <col:32, col:36> 'int' '<'
    |     | |-ImplicitCastExpr 0x147143180 <col:32> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x147143140 <col:32> 'int' lvalue Var 0x1471285a0 'j' 'int'
    |     | `-ImplicitCastExpr 0x147143198 <col:36> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x147143160 <col:36> 'int' lvalue ParmVar 0x147128228 'code_size' 'int'
    |     |-BinaryOperator 0x147143240 <col:47, col:54> 'int' ','
    |     | |-UnaryOperator 0x1471431f0 <col:47, col:49> 'int' prefix '++'
    |     | | `-DeclRefExpr 0x1471431d0 <col:49> 'int' lvalue Var 0x147128520 'i' 'int'
    |     | `-UnaryOperator 0x147143228 <col:52, col:54> 'int' prefix '++'
    |     |   `-DeclRefExpr 0x147143208 <col:54> 'int' lvalue Var 0x1471285a0 'j' 'int'
    |     `-CompoundStmt 0x1471435a0 <col:57, line:38:3>
    |       `-CompoundAssignOperator 0x147143570 <line:37:4, col:56> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |         |-DeclRefExpr 0x147143260 <col:4> 'int' lvalue Var 0x147128620 'ret' 'int'
    |         `-BinaryOperator 0x147143550 <col:11, col:56> '<dependent type>' contains-errors '<<'
    |           |-ParenExpr 0x147143510 <col:11, col:51> 'int' contains-errors
    |           | `-BinaryOperator 0x1471434f0 <col:12, col:50> 'int' contains-errors '!='
    |           |   |-ParenExpr 0x1471434b0 <col:12, col:45> '<dependent type>' contains-errors
    |           |   | `-BinaryOperator 0x147143490 <col:13, col:44> '<dependent type>' contains-errors '&'
    |           |   |   |-ArraySubscriptExpr 0x147143378 <col:13, col:27> '<dependent type>' contains-errors lvalue
    |           |   |   | |-ImplicitCastExpr 0x147143360 <col:13, col:18> '<dependent type>' contains-errors <LValueToRValue>
    |           |   |   | | `-CXXDependentScopeMemberExpr 0x1471432a0 <col:13, col:18> '<dependent type>' contains-errors lvalue ->buf
    |           |   |   | |   `-RecoveryExpr 0x147143280 <col:13> '<dependent type>' contains-errors lvalue
    |           |   |   | `-BinaryOperator 0x147143340 <col:22, col:26> 'int' '/'
    |           |   |   |   |-ImplicitCastExpr 0x147143328 <col:22> 'int' <LValueToRValue>
    |           |   |   |   | `-DeclRefExpr 0x1471432e8 <col:22> 'int' lvalue Var 0x147128520 'i' 'int'
    |           |   |   |   `-IntegerLiteral 0x147143308 <col:26> 'int' 8
    |           |   |   `-ParenExpr 0x147143470 <col:31, col:44> 'int'
    |           |   |     `-BinaryOperator 0x147143450 <col:32, col:43> 'int' '<<'
    |           |   |       |-IntegerLiteral 0x147143398 <col:32> 'int' 1
    |           |   |       `-ParenExpr 0x147143430 <col:37, col:43> 'int'
    |           |   |         `-BinaryOperator 0x147143410 <col:38, col:42> 'int' '%'
    |           |   |           |-ImplicitCastExpr 0x1471433f8 <col:38> 'int' <LValueToRValue>
    |           |   |           | `-DeclRefExpr 0x1471433b8 <col:38> 'int' lvalue Var 0x147128520 'i' 'int'
    |           |   |           `-IntegerLiteral 0x1471433d8 <col:42> 'int' 8
    |           |   `-IntegerLiteral 0x1471434d0 <col:50> 'int' 0
    |           `-DeclRefExpr 0x147143530 <col:56> 'int' lvalue Var 0x1471285a0 'j' 'int'
    |-CompoundAssignOperator 0x1471436f0 <line:41:2, col:17> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-CXXDependentScopeMemberExpr 0x147143688 <col:2, col:7> '<dependent type>' contains-errors lvalue ->curbit
    | | `-RecoveryExpr 0x147143660 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x147143640 <col:2> 'int *' lvalue ParmVar 0x1471281a8 'scd' 'int *'
    | `-DeclRefExpr 0x1471436d0 <col:17> 'int' lvalue ParmVar 0x147128228 'code_size' 'int'
    `-ReturnStmt 0x147143758 <line:42:2, col:9>
      `-ImplicitCastExpr 0x147143740 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x147143720 <col:9> 'int' lvalue Var 0x147128620 'ret' 'int'
