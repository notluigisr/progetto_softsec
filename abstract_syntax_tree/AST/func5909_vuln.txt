TranslationUnitDecl 0x141855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1418564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x141855bd0 '__int128'
|-TypedefDecl 0x141856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x141855bf0 'unsigned __int128'
|-TypedefDecl 0x14200be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14200bc00 'struct __NSConstantString_tag'
|   `-Record 0x141856580 '__NSConstantString_tag'
|-TypedefDecl 0x14200be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x141855d90 '__SVInt8_t'
|-TypedefDecl 0x14200bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x141855db0 '__SVInt16_t'
|-TypedefDecl 0x14200bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x141855dd0 '__SVInt32_t'
|-TypedefDecl 0x14200bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x141855df0 '__SVInt64_t'
|-TypedefDecl 0x14200c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x141855e10 '__SVUint8_t'
|-TypedefDecl 0x14200c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x141855e30 '__SVUint16_t'
|-TypedefDecl 0x14200c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x141855e50 '__SVUint32_t'
|-TypedefDecl 0x14200c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x141855e70 '__SVUint64_t'
|-TypedefDecl 0x14200c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x141855e90 '__SVFloat16_t'
|-TypedefDecl 0x14200c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x141855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14200c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x141855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14200c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x141855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14200c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x141855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14200c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x141855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14200c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x141855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14200c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x141855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14200c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x141855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14200c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x141855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14200c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x141855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14200c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x141855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14200c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x141856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14200c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x141856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14200c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x141856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14200c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x141856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14200c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x141856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14200c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1418560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14200c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1418560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14200c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1418560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14200c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x141856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14200ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x141856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14200cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x141856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14200cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x141856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14200cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x141856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14200d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1418561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14200d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1418561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14200d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1418561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14200d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x141856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14200d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x141856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14200d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x141856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14200d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x141856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14200d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x141856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14200d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1418562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14200d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1418562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14200d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1418562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14200d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x141856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14200d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x141856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14200d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x141856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14200d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x141856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14200da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x141856390 '__SVBool_t'
|-TypedefDecl 0x14200da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1418563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14200dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1418563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14200db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1418563f0 '__SVCount_t'
|-TypedefDecl 0x14200dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14200dbb0 'char *'
|   `-BuiltinType 0x1418556b0 'char'
|-TypedefDecl 0x14200dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14200dbb0 'char *'
|   `-BuiltinType 0x1418556b0 'char'
|-FunctionDecl 0x14200dda8 <dataset_diviso_filec/func5909_vuln.c:1:1, line:18:1> line:1:5 is_ntfs_dotgit 'int (const char *)'
| |-ParmVarDecl 0x14200dcd8 <col:20, col:32> col:32 used name 'const char *'
| `-CompoundStmt 0x142029358 <line:2:1, line:18:1>
|   |-DeclStmt 0x14200df20 <line:3:2, col:9>
|   | `-VarDecl 0x14200deb8 <col:2, col:6> col:6 used len 'int'
|   `-ForStmt 0x142029320 <line:5:2, line:17:3>
|     |-BinaryOperator 0x14200df78 <line:5:7, col:13> 'int' '='
|     | |-DeclRefExpr 0x14200df38 <col:7> 'int' lvalue Var 0x14200deb8 'len' 'int'
|     | `-IntegerLiteral 0x14200df58 <col:13> 'int' 0
|     |-<<<NULL>>>
|     |-<<<NULL>>>
|     |-UnaryOperator 0x14200dfb8 <col:18, col:21> 'int' postfix '++'
|     | `-DeclRefExpr 0x14200df98 <col:18> 'int' lvalue Var 0x14200deb8 'len' 'int'
|     `-IfStmt 0x142029300 <line:6:3, line:17:3>
|       |-BinaryOperator 0x142027430 <line:6:7, col:62> 'int' '||'
|       | |-BinaryOperator 0x14200e188 <col:7, col:34> 'int' '||'
|       | | |-UnaryOperator 0x14200e078 <col:7, col:16> 'int' prefix '!' cannot overflow
|       | | | `-ImplicitCastExpr 0x14200e060 <col:8, col:16> 'char' <LValueToRValue>
|       | | |   `-ArraySubscriptExpr 0x14200e040 <col:8, col:16> 'const char' lvalue
|       | | |     |-ImplicitCastExpr 0x14200e010 <col:8> 'const char *' <LValueToRValue>
|       | | |     | `-DeclRefExpr 0x14200dfd0 <col:8> 'const char *' lvalue ParmVar 0x14200dcd8 'name' 'const char *'
|       | | |     `-ImplicitCastExpr 0x14200e028 <col:13> 'int' <LValueToRValue>
|       | | |       `-DeclRefExpr 0x14200dff0 <col:13> 'int' lvalue Var 0x14200deb8 'len' 'int'
|       | | `-BinaryOperator 0x14200e168 <col:21, col:34> 'int' '=='
|       | |   |-ImplicitCastExpr 0x14200e150 <col:21, col:29> 'int' <IntegralCast>
|       | |   | `-ImplicitCastExpr 0x14200e138 <col:21, col:29> 'char' <LValueToRValue>
|       | |   |   `-ArraySubscriptExpr 0x14200e100 <col:21, col:29> 'const char' lvalue
|       | |   |     |-ImplicitCastExpr 0x14200e0d0 <col:21> 'const char *' <LValueToRValue>
|       | |   |     | `-DeclRefExpr 0x14200e090 <col:21> 'const char *' lvalue ParmVar 0x14200dcd8 'name' 'const char *'
|       | |   |     `-ImplicitCastExpr 0x14200e0e8 <col:26> 'int' <LValueToRValue>
|       | |   |       `-DeclRefExpr 0x14200e0b0 <col:26> 'int' lvalue Var 0x14200deb8 'len' 'int'
|       | |   `-CharacterLiteral 0x14200e120 <col:34> 'int' 92
|       | `-CallExpr 0x14200e3c8 <col:42, col:62> 'int'
|       |   |-ImplicitCastExpr 0x14200e3b0 <col:42> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x14200e2d0 <col:42> 'int ()' Function 0x14200e218 'is_dir_sep' 'int ()'
|       |   `-ImplicitCastExpr 0x142027418 <col:53, col:61> 'int' <IntegralCast>
|       |     `-ImplicitCastExpr 0x142027400 <col:53, col:61> 'char' <LValueToRValue>
|       |       `-ArraySubscriptExpr 0x14200e360 <col:53, col:61> 'const char' lvalue
|       |         |-ImplicitCastExpr 0x14200e330 <col:53> 'const char *' <LValueToRValue>
|       |         | `-DeclRefExpr 0x14200e2f0 <col:53> 'const char *' lvalue ParmVar 0x14200dcd8 'name' 'const char *'
|       |         `-ImplicitCastExpr 0x14200e348 <col:58> 'int' <LValueToRValue>
|       |           `-DeclRefExpr 0x14200e310 <col:58> 'int' lvalue Var 0x14200deb8 'len' 'int'
|       `-CompoundStmt 0x1420292c8 <col:65, line:17:3>
|         |-IfStmt 0x142027f28 <line:7:4, line:9:12>
|         | |-BinaryOperator 0x142027ed8 <line:7:8, line:8:33> 'int' '&&'
|         | | |-CallExpr 0x1420275c8 <line:7:8, col:44> 'int'
|         | | | |-ImplicitCastExpr 0x1420275b0 <col:8> 'int (*)()' <FunctionToPointerDecay>
|         | | | | `-DeclRefExpr 0x142027530 <col:8> 'int ()' Function 0x142027478 'only_spaces_and_periods' 'int ()'
|         | | | |-ImplicitCastExpr 0x142027600 <col:32> 'const char *' <LValueToRValue>
|         | | | | `-DeclRefExpr 0x142027550 <col:32> 'const char *' lvalue ParmVar 0x14200dcd8 'name' 'const char *'
|         | | | |-ImplicitCastExpr 0x142027618 <col:38> 'int' <LValueToRValue>
|         | | | | `-DeclRefExpr 0x142027570 <col:38> 'int' lvalue Var 0x14200deb8 'len' 'int'
|         | | | `-IntegerLiteral 0x142027590 <col:43> 'int' 4
|         | | `-UnaryOperator 0x142027ec0 <line:8:6, col:33> 'int' prefix '!' cannot overflow
|         | |   `-CallExpr 0x142027e28 <col:7, col:33> 'int'
|         | |     |-ImplicitCastExpr 0x142027e10 <col:7> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|         | |     | `-DeclRefExpr 0x142027cf0 <col:7> 'int (const char *, const char *, unsigned long)' Function 0x142027aa0 'strncasecmp' 'int (const char *, const char *, unsigned long)'
|         | |     |-ImplicitCastExpr 0x142027e60 <col:19> 'const char *' <LValueToRValue>
|         | |     | `-DeclRefExpr 0x142027d10 <col:19> 'const char *' lvalue ParmVar 0x14200dcd8 'name' 'const char *'
|         | |     |-ImplicitCastExpr 0x142027e90 <col:25> 'const char *' <NoOp>
|         | |     | `-ImplicitCastExpr 0x142027e78 <col:25> 'char *' <ArrayToPointerDecay>
|         | |     |   `-StringLiteral 0x142027d70 <col:25> 'char[4]' lvalue "STR"
|         | |     `-ImplicitCastExpr 0x142027ea8 <col:32> 'unsigned long' <IntegralCast>
|         | |       `-IntegerLiteral 0x142027d90 <col:32> 'int' 4
|         | `-ReturnStmt 0x142027f18 <line:9:5, col:12>
|         |   `-IntegerLiteral 0x142027ef8 <col:12> 'int' 1
|         |-IfStmt 0x142028210 <line:10:4, line:12:12>
|         | |-BinaryOperator 0x1420281c0 <line:10:8, line:11:33> 'int' '&&'
|         | | |-CallExpr 0x142027fe0 <line:10:8, col:44> 'int'
|         | | | |-ImplicitCastExpr 0x142027fc8 <col:8> 'int (*)()' <FunctionToPointerDecay>
|         | | | | `-DeclRefExpr 0x142027f48 <col:8> 'int ()' Function 0x142027478 'only_spaces_and_periods' 'int ()'
|         | | | |-ImplicitCastExpr 0x142028018 <col:32> 'const char *' <LValueToRValue>
|         | | | | `-DeclRefExpr 0x142027f68 <col:32> 'const char *' lvalue ParmVar 0x14200dcd8 'name' 'const char *'
|         | | | |-ImplicitCastExpr 0x142028030 <col:38> 'int' <LValueToRValue>
|         | | | | `-DeclRefExpr 0x142027f88 <col:38> 'int' lvalue Var 0x14200deb8 'len' 'int'
|         | | | `-IntegerLiteral 0x142027fa8 <col:43> 'int' 5
|         | | `-UnaryOperator 0x1420281a8 <line:11:6, col:33> 'int' prefix '!' cannot overflow
|         | |   `-CallExpr 0x142028110 <col:7, col:33> 'int'
|         | |     |-ImplicitCastExpr 0x1420280f8 <col:7> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|         | |     | `-DeclRefExpr 0x142028048 <col:7> 'int (const char *, const char *, unsigned long)' Function 0x142027aa0 'strncasecmp' 'int (const char *, const char *, unsigned long)'
|         | |     |-ImplicitCastExpr 0x142028148 <col:19> 'const char *' <LValueToRValue>
|         | |     | `-DeclRefExpr 0x142028068 <col:19> 'const char *' lvalue ParmVar 0x14200dcd8 'name' 'const char *'
|         | |     |-ImplicitCastExpr 0x142028178 <col:25> 'const char *' <NoOp>
|         | |     | `-ImplicitCastExpr 0x142028160 <col:25> 'char *' <ArrayToPointerDecay>
|         | |     |   `-StringLiteral 0x142028088 <col:25> 'char[4]' lvalue "STR"
|         | |     `-ImplicitCastExpr 0x142028190 <col:32> 'unsigned long' <IntegralCast>
|         | |       `-IntegerLiteral 0x1420280a8 <col:32> 'int' 5
|         | `-ReturnStmt 0x142028200 <line:12:5, col:12>
|         |   `-IntegerLiteral 0x1420281e0 <col:12> 'int' 1
|         |-IfStmt 0x142028358 <line:13:4, line:14:12>
|         | |-BinaryOperator 0x142028308 <line:13:8, col:21> 'int' '!='
|         | | |-ImplicitCastExpr 0x1420282f0 <col:8, col:16> 'int' <IntegralCast>
|         | | | `-ImplicitCastExpr 0x1420282d8 <col:8, col:16> 'char' <LValueToRValue>
|         | | |   `-ArraySubscriptExpr 0x1420282a0 <col:8, col:16> 'const char' lvalue
|         | | |     |-ImplicitCastExpr 0x142028270 <col:8> 'const char *' <LValueToRValue>
|         | | |     | `-DeclRefExpr 0x142028230 <col:8> 'const char *' lvalue ParmVar 0x14200dcd8 'name' 'const char *'
|         | | |     `-ImplicitCastExpr 0x142028288 <col:13> 'int' <LValueToRValue>
|         | | |       `-DeclRefExpr 0x142028250 <col:13> 'int' lvalue Var 0x14200deb8 'len' 'int'
|         | | `-CharacterLiteral 0x1420282c0 <col:21> 'int' 92
|         | `-ReturnStmt 0x142028348 <line:14:5, col:12>
|         |   `-IntegerLiteral 0x142028328 <col:12> 'int' 0
|         |-CompoundAssignOperator 0x142029220 <line:15:4, col:18> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|         | |-DeclRefExpr 0x142028378 <col:4> 'const char *' lvalue ParmVar 0x14200dcd8 'name' 'const char *'
|         | `-BinaryOperator 0x142029200 <col:12, col:18> 'int' '+'
|         |   |-ImplicitCastExpr 0x1420283d8 <col:12> 'int' <LValueToRValue>
|         |   | `-DeclRefExpr 0x142028398 <col:12> 'int' lvalue Var 0x14200deb8 'len' 'int'
|         |   `-IntegerLiteral 0x1420283b8 <col:18> 'int' 1
|         `-BinaryOperator 0x1420292a8 <line:16:4, col:11> 'int' '='
|           |-DeclRefExpr 0x142029250 <col:4> 'int' lvalue Var 0x14200deb8 'len' 'int'
|           `-UnaryOperator 0x142029290 <col:10, col:11> 'int' prefix '-'
|             `-IntegerLiteral 0x142029270 <col:11> 'int' 1
`-FunctionDecl 0x142027aa0 <line:8:7> col:7 implicit used strncasecmp 'int (const char *, const char *, unsigned long)' extern
  |-ParmVarDecl 0x142027ba0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x142027c08 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x142027c70 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x142027b48 <<invalid sloc>> Implicit 958
