TranslationUnitDecl 0x120055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1200564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x120055bd0 '__int128'
|-TypedefDecl 0x120056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x120055bf0 'unsigned __int128'
|-TypedefDecl 0x120126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x120126000 'struct __NSConstantString_tag'
|   `-Record 0x120056580 '__NSConstantString_tag'
|-TypedefDecl 0x120126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x120055d90 '__SVInt8_t'
|-TypedefDecl 0x120126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x120055db0 '__SVInt16_t'
|-TypedefDecl 0x120126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x120055dd0 '__SVInt32_t'
|-TypedefDecl 0x1201263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x120055df0 '__SVInt64_t'
|-TypedefDecl 0x120126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x120055e10 '__SVUint8_t'
|-TypedefDecl 0x1201264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x120055e30 '__SVUint16_t'
|-TypedefDecl 0x120126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x120055e50 '__SVUint32_t'
|-TypedefDecl 0x120126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x120055e70 '__SVUint64_t'
|-TypedefDecl 0x1201265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x120055e90 '__SVFloat16_t'
|-TypedefDecl 0x120126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x120055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1201266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x120055ed0 '__SVFloat64_t'
|-TypedefDecl 0x120126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x120055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x120126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x120055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1201267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x120055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x120126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x120055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1201268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x120055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x120126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x120055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x120126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x120055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1201269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x120055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x120126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x120055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x120126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x120056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x120126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x120056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x120126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x120056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x120126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x120056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x120126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x120056090 '__clang_svint8x3_t'
|-TypedefDecl 0x120126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1200560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x120126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1200560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x120126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1200560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x120126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x120056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x120126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x120056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x120126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x120056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x120126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x120056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x120126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x120056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x120127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1200561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x120127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1200561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1201278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1200561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x120127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x120056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1201279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x120056230 '__clang_svint16x4_t'
|-TypedefDecl 0x120127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x120056250 '__clang_svint32x4_t'
|-TypedefDecl 0x120127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x120056270 '__clang_svint64x4_t'
|-TypedefDecl 0x120127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x120056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x120127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1200562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x120127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1200562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x120127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1200562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x120127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x120056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x120127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x120056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x120127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x120056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x120127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x120056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x120127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x120056390 '__SVBool_t'
|-TypedefDecl 0x120127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1200563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x120127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1200563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x120127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1200563f0 '__SVCount_t'
|-TypedefDecl 0x120127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x120127fb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
|-TypedefDecl 0x120128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x120127fb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
|-FunctionDecl 0x120140b48 <dataset_diviso_filec/func22545_nonvuln.c:1:1, line:49:1> line:1:1 tty_default_colours 'int (struct grid_cell *, const struct window_pane *)'
| |-ParmVarDecl 0x120128648 <col:21, col:39> col:39 used gc 'struct grid_cell *'
| |-ParmVarDecl 0x120140a28 <col:43, col:69> col:69 used wp 'const struct window_pane *'
| `-CompoundStmt 0x120143c98 <line:2:1, line:49:1>
|   |-DeclStmt 0x120140e98 <line:3:2, col:32>
|   | |-RecordDecl 0x120140c48 <col:2, col:9> col:9 struct window
|   | `-VarDecl 0x120140db8 <col:2, col:26> col:18 used w 'struct window *' cinit
|   |   `-RecoveryExpr 0x120140e58 <col:22, col:26> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x120140e20 <col:22> 'const struct window_pane *' lvalue ParmVar 0x120140a28 'wp' 'const struct window_pane *'
|   |-DeclStmt 0x1201410f8 <line:4:2, col:34>
|   | |-RecordDecl 0x120140eb0 <col:2, col:9> col:9 struct options
|   | `-VarDecl 0x120141018 <col:2, col:27> col:19 used oo 'struct options *' cinit
|   |   `-RecoveryExpr 0x1201410b8 <col:24, col:27> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x120141080 <col:24> 'struct window *' contains-errors lvalue Var 0x120140db8 'w' 'struct window *'
|   |-DeclStmt 0x120141370 <line:5:2, col:41>
|   | |-VarDecl 0x1201411c8 <col:2, col:26> col:26 used agc 'const struct grid_cell *'
|   | |-VarDecl 0x120141258 <col:2, col:32> col:32 used pgc 'const struct grid_cell *'
|   | `-VarDecl 0x1201412e8 <col:2, col:38> col:38 used wgc 'const struct grid_cell *'
|   |-DeclStmt 0x120141408 <line:6:2, col:10>
|   | `-VarDecl 0x1201413a0 <col:2, col:9> col:9 used c 'int'
|   |-IfStmt 0x120142258 <line:8:2, line:17:2> has_else
|   | |-BinaryOperator 0x1201414f0 <line:8:6, col:17> '<dependent type>' contains-errors '&'
|   | | |-RecoveryExpr 0x120141458 <col:6, col:9> '<dependent type>' contains-errors lvalue
|   | | | `-DeclRefExpr 0x120141420 <col:6> 'struct window *' contains-errors lvalue Var 0x120140db8 'w' 'struct window *'
|   | | `-RecoveryExpr 0x1201414d0 <col:17> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x120142090 <col:38, line:14:2>
|   | | |-CompoundAssignOperator 0x120141638 <line:9:3, col:16> '<dependent type>' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | | | |-RecoveryExpr 0x120141548 <col:3, col:6> '<dependent type>' contains-errors lvalue
|   | | | | `-DeclRefExpr 0x120141510 <col:3> 'struct window *' contains-errors lvalue Var 0x120140db8 'w' 'struct window *'
|   | | | `-UnaryOperator 0x120141620 <col:15, col:16> '<dependent type>' contains-errors prefix '~' cannot overflow
|   | | |   `-ImplicitCastExpr 0x120141608 <col:16> '<dependent type>' contains-errors <LValueToRValue>
|   | | |     `-RecoveryExpr 0x1201415e8 <col:16> '<dependent type>' contains-errors lvalue
|   | | |-BinaryOperator 0x120141900 <line:10:3, col:36> 'const struct grid_cell *' contains-errors '='
|   | | | |-DeclRefExpr 0x120141668 <col:3> 'const struct grid_cell *' lvalue Var 0x1201411c8 'agc' 'const struct grid_cell *'
|   | | | `-ImplicitCastExpr 0x1201418e8 <col:9, col:36> 'const struct grid_cell *' contains-errors <IntegralToPointer>
|   | | |   `-CallExpr 0x120141888 <col:9, col:36> 'int' contains-errors
|   | | |     |-ImplicitCastExpr 0x120141870 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | |     | `-DeclRefExpr 0x1201417a0 <col:9> 'int ()' Function 0x1201416e8 'options_get_style' 'int ()'
|   | | |     |-ImplicitCastExpr 0x1201418b8 <col:27> 'struct options *' contains-errors <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x1201417c0 <col:27> 'struct options *' contains-errors lvalue Var 0x120141018 'oo' 'struct options *'
|   | | |     `-ImplicitCastExpr 0x1201418d0 <col:31> 'char *' <ArrayToPointerDecay>
|   | | |       `-StringLiteral 0x120141820 <col:31> 'char[4]' lvalue "STR"
|   | | |-CallExpr 0x120141da0 <line:11:3, col:55> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x120141c50 <col:3> 'void *(void *, const void *, unsigned long)' Function 0x120141a00 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | | | |-UnaryOperator 0x120141cd0 <col:10, col:14> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | | | `-RecoveryExpr 0x120141ca8 <col:11, col:14> '<dependent type>' contains-errors lvalue
|   | | | |   `-DeclRefExpr 0x120141c70 <col:11> 'struct window *' contains-errors lvalue Var 0x120140db8 'w' 'struct window *'
|   | | | |-DeclRefExpr 0x120141ce8 <col:28> 'const struct grid_cell *' lvalue Var 0x1201411c8 'agc' 'const struct grid_cell *'
|   | | | `-UnaryExprOrTypeTraitExpr 0x120141d68 <col:33, col:43> 'unsigned long' contains-errors sizeof
|   | | |   `-RecoveryExpr 0x120141d40 <col:40, col:43> '<dependent type>' contains-errors lvalue
|   | | |     `-DeclRefExpr 0x120141d08 <col:40> 'struct window *' contains-errors lvalue Var 0x120140db8 'w' 'struct window *' non_odr_use_unevaluated
|   | | |-BinaryOperator 0x120141ee8 <line:12:3, col:36> 'const struct grid_cell *' contains-errors '='
|   | | | |-DeclRefExpr 0x120141dd8 <col:3> 'const struct grid_cell *' lvalue Var 0x1201412e8 'wgc' 'const struct grid_cell *'
|   | | | `-ImplicitCastExpr 0x120141ed0 <col:9, col:36> 'const struct grid_cell *' contains-errors <IntegralToPointer>
|   | | |   `-CallExpr 0x120141e70 <col:9, col:36> 'int' contains-errors
|   | | |     |-ImplicitCastExpr 0x120141e58 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | |     | `-DeclRefExpr 0x120141df8 <col:9> 'int ()' Function 0x1201416e8 'options_get_style' 'int ()'
|   | | |     |-ImplicitCastExpr 0x120141ea0 <col:27> 'struct options *' contains-errors <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x120141e18 <col:27> 'struct options *' contains-errors lvalue Var 0x120141018 'oo' 'struct options *'
|   | | |     `-ImplicitCastExpr 0x120141eb8 <col:31> 'char *' <ArrayToPointerDecay>
|   | | |       `-StringLiteral 0x120141e38 <col:31> 'char[4]' lvalue "STR"
|   | | `-CallExpr 0x120142058 <line:13:3, col:41> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x120141f08 <col:3> 'void *(void *, const void *, unsigned long)' Function 0x120141a00 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | |   |-UnaryOperator 0x120141f88 <col:10, col:14> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |   | `-RecoveryExpr 0x120141f60 <col:11, col:14> '<dependent type>' contains-errors lvalue
|   | |   |   `-DeclRefExpr 0x120141f28 <col:11> 'struct window *' contains-errors lvalue Var 0x120140db8 'w' 'struct window *'
|   | |   |-DeclRefExpr 0x120141fa0 <col:21> 'const struct grid_cell *' lvalue Var 0x1201412e8 'wgc' 'const struct grid_cell *'
|   | |   `-UnaryExprOrTypeTraitExpr 0x120142020 <col:26, col:36> 'unsigned long' contains-errors sizeof
|   | |     `-RecoveryExpr 0x120141ff8 <col:33, col:36> '<dependent type>' contains-errors lvalue
|   | |       `-DeclRefExpr 0x120141fc0 <col:33> 'struct window *' contains-errors lvalue Var 0x120140db8 'w' 'struct window *' non_odr_use_unevaluated
|   | `-CompoundStmt 0x120142238 <line:14:9, line:17:2>
|   |   |-BinaryOperator 0x120142160 <line:15:3, col:13> 'const struct grid_cell *' contains-errors '='
|   |   | |-DeclRefExpr 0x1201420c8 <col:3> 'const struct grid_cell *' lvalue Var 0x1201411c8 'agc' 'const struct grid_cell *'
|   |   | `-UnaryOperator 0x120142148 <col:9, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |   `-RecoveryExpr 0x120142120 <col:10, col:13> '<dependent type>' contains-errors lvalue
|   |   |     `-DeclRefExpr 0x1201420e8 <col:10> 'struct window *' contains-errors lvalue Var 0x120140db8 'w' 'struct window *'
|   |   `-BinaryOperator 0x120142218 <line:16:3, col:13> 'const struct grid_cell *' contains-errors '='
|   |     |-DeclRefExpr 0x120142180 <col:3> 'const struct grid_cell *' lvalue Var 0x1201412e8 'wgc' 'const struct grid_cell *'
|   |     `-UnaryOperator 0x120142200 <col:9, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |       `-RecoveryExpr 0x1201421d8 <col:10, col:13> '<dependent type>' contains-errors lvalue
|   |         `-DeclRefExpr 0x1201421a0 <col:10> 'struct window *' contains-errors lvalue Var 0x120140db8 'w' 'struct window *'
|   |-BinaryOperator 0x120142320 <line:18:2, col:13> 'const struct grid_cell *' contains-errors '='
|   | |-DeclRefExpr 0x120142288 <col:2> 'const struct grid_cell *' lvalue Var 0x120141258 'pgc' 'const struct grid_cell *'
|   | `-UnaryOperator 0x120142308 <col:8, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x1201422e0 <col:9, col:13> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x1201422a8 <col:9> 'const struct window_pane *' lvalue ParmVar 0x120140a28 'wp' 'const struct window_pane *'
|   |-IfStmt 0x120143358 <line:20:2, line:33:2>
|   | |-BinaryOperator 0x1201423c0 <line:20:6, col:16> 'int' contains-errors '=='
|   | | |-RecoveryExpr 0x120142378 <col:6, col:10> '<dependent type>' contains-errors lvalue
|   | | | `-DeclRefExpr 0x120142340 <col:6> 'struct grid_cell *' lvalue ParmVar 0x120128648 'gc' 'struct grid_cell *'
|   | | `-IntegerLiteral 0x1201423a0 <col:16> 'int' 8
|   | `-CompoundStmt 0x120143338 <col:19, line:33:2>
|   |   |-IfStmt 0x1201428b0 <line:21:3, line:26:18> has_else
|   |   | |-BinaryOperator 0x120142460 <line:21:7, col:18> 'int' contains-errors '!='
|   |   | | |-RecoveryExpr 0x120142418 <col:7, col:12> '<dependent type>' contains-errors lvalue
|   |   | | | `-DeclRefExpr 0x1201423e0 <col:7> 'const struct grid_cell *' lvalue Var 0x120141258 'pgc' 'const struct grid_cell *'
|   |   | | `-IntegerLiteral 0x120142440 <col:18> 'int' 8
|   |   | |-BinaryOperator 0x120142540 <line:22:4, col:18> '<dependent type>' contains-errors '='
|   |   | | |-RecoveryExpr 0x1201424b8 <col:4, col:8> '<dependent type>' contains-errors lvalue
|   |   | | | `-DeclRefExpr 0x120142480 <col:4> 'struct grid_cell *' lvalue ParmVar 0x120128648 'gc' 'struct grid_cell *'
|   |   | | `-RecoveryExpr 0x120142518 <col:13, col:18> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x1201424e0 <col:13> 'const struct grid_cell *' lvalue Var 0x120141258 'pgc' 'const struct grid_cell *'
|   |   | `-IfStmt 0x120142880 <line:23:8, line:26:18> has_else
|   |   |   |-BinaryOperator 0x1201426a0 <line:23:12, col:42> 'int' contains-errors '&&'
|   |   |   | |-BinaryOperator 0x1201425e0 <col:12, col:21> 'int' contains-errors '=='
|   |   |   | | |-DeclRefExpr 0x120142560 <col:12> 'const struct window_pane *' lvalue ParmVar 0x120140a28 'wp' 'const struct window_pane *'
|   |   |   | | `-RecoveryExpr 0x1201425b8 <col:18, col:21> '<dependent type>' contains-errors lvalue
|   |   |   | |   `-DeclRefExpr 0x120142580 <col:18> 'struct window *' contains-errors lvalue Var 0x120140db8 'w' 'struct window *'
|   |   |   | `-BinaryOperator 0x120142680 <col:31, col:42> 'int' contains-errors '!='
|   |   |   |   |-RecoveryExpr 0x120142638 <col:31, col:36> '<dependent type>' contains-errors lvalue
|   |   |   |   | `-DeclRefExpr 0x120142600 <col:31> 'const struct grid_cell *' lvalue Var 0x1201411c8 'agc' 'const struct grid_cell *'
|   |   |   |   `-IntegerLiteral 0x120142660 <col:42> 'int' 8
|   |   |   |-BinaryOperator 0x120142780 <line:24:4, col:18> '<dependent type>' contains-errors '='
|   |   |   | |-RecoveryExpr 0x1201426f8 <col:4, col:8> '<dependent type>' contains-errors lvalue
|   |   |   | | `-DeclRefExpr 0x1201426c0 <col:4> 'struct grid_cell *' lvalue ParmVar 0x120128648 'gc' 'struct grid_cell *'
|   |   |   | `-RecoveryExpr 0x120142758 <col:13, col:18> '<dependent type>' contains-errors lvalue
|   |   |   |   `-DeclRefExpr 0x120142720 <col:13> 'const struct grid_cell *' lvalue Var 0x1201411c8 'agc' 'const struct grid_cell *'
|   |   |   `-BinaryOperator 0x120142860 <line:26:4, col:18> '<dependent type>' contains-errors '='
|   |   |     |-RecoveryExpr 0x1201427d8 <col:4, col:8> '<dependent type>' contains-errors lvalue
|   |   |     | `-DeclRefExpr 0x1201427a0 <col:4> 'struct grid_cell *' lvalue ParmVar 0x120128648 'gc' 'struct grid_cell *'
|   |   |     `-RecoveryExpr 0x120142838 <col:13, col:18> '<dependent type>' contains-errors lvalue
|   |   |       `-DeclRefExpr 0x120142800 <col:13> 'const struct grid_cell *' lvalue Var 0x1201412e8 'wgc' 'const struct grid_cell *'
|   |   `-IfStmt 0x120143318 <line:28:3, line:32:3>
|   |     |-BinaryOperator 0x120142960 <line:28:7, col:17> 'int' contains-errors '!='
|   |     | |-RecoveryExpr 0x120142918 <col:7, col:11> '<dependent type>' contains-errors lvalue
|   |     | | `-DeclRefExpr 0x1201428e0 <col:7> 'struct grid_cell *' lvalue ParmVar 0x120128648 'gc' 'struct grid_cell *'
|   |     | `-IntegerLiteral 0x120142940 <col:17> 'int' 8
|   |     `-CompoundStmt 0x1201432f8 <col:20, line:32:3>
|   |       |-BinaryOperator 0x120143188 <line:29:4, col:42> 'int' contains-errors '='
|   |       | |-DeclRefExpr 0x120142980 <col:4> 'int' lvalue Var 0x1201413a0 'c' 'int'
|   |       | `-CallExpr 0x120143158 <col:8, col:42> '<dependent type>' contains-errors
|   |       |   |-DeclRefExpr 0x1201430b8 <col:8> 'int ()' Function 0x120143000 'window_pane_get_palette' 'int ()'
|   |       |   |-DeclRefExpr 0x1201430d8 <col:32> 'const struct window_pane *' lvalue ParmVar 0x120140a28 'wp' 'const struct window_pane *'
|   |       |   `-RecoveryExpr 0x120143130 <col:36, col:40> '<dependent type>' contains-errors lvalue
|   |       |     `-DeclRefExpr 0x1201430f8 <col:36> 'struct grid_cell *' lvalue ParmVar 0x120128648 'gc' 'struct grid_cell *'
|   |       `-IfStmt 0x1201432d8 <line:30:4, line:31:14>
|   |         |-BinaryOperator 0x120143218 <line:30:8, col:14> 'int' '!='
|   |         | |-ImplicitCastExpr 0x120143200 <col:8> 'int' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x1201431a8 <col:8> 'int' lvalue Var 0x1201413a0 'c' 'int'
|   |         | `-UnaryOperator 0x1201431e8 <col:13, col:14> 'int' prefix '-'
|   |         |   `-IntegerLiteral 0x1201431c8 <col:14> 'int' 1
|   |         `-BinaryOperator 0x1201432b8 <line:31:5, col:14> '<dependent type>' contains-errors '='
|   |           |-RecoveryExpr 0x120143270 <col:5, col:9> '<dependent type>' contains-errors lvalue
|   |           | `-DeclRefExpr 0x120143238 <col:5> 'struct grid_cell *' lvalue ParmVar 0x120128648 'gc' 'struct grid_cell *'
|   |           `-DeclRefExpr 0x120143298 <col:14> 'int' lvalue Var 0x1201413a0 'c' 'int'
|   `-IfStmt 0x120143c78 <line:35:2, line:48:2>
|     |-BinaryOperator 0x1201433f8 <line:35:6, col:16> 'int' contains-errors '=='
|     | |-RecoveryExpr 0x1201433b0 <col:6, col:10> '<dependent type>' contains-errors lvalue
|     | | `-DeclRefExpr 0x120143378 <col:6> 'struct grid_cell *' lvalue ParmVar 0x120128648 'gc' 'struct grid_cell *'
|     | `-IntegerLiteral 0x1201433d8 <col:16> 'int' 8
|     `-CompoundStmt 0x120143c58 <col:19, line:48:2>
|       |-IfStmt 0x1201438e8 <line:36:3, line:41:18> has_else
|       | |-BinaryOperator 0x120143498 <line:36:7, col:18> 'int' contains-errors '!='
|       | | |-RecoveryExpr 0x120143450 <col:7, col:12> '<dependent type>' contains-errors lvalue
|       | | | `-DeclRefExpr 0x120143418 <col:7> 'const struct grid_cell *' lvalue Var 0x120141258 'pgc' 'const struct grid_cell *'
|       | | `-IntegerLiteral 0x120143478 <col:18> 'int' 8
|       | |-BinaryOperator 0x120143578 <line:37:4, col:18> '<dependent type>' contains-errors '='
|       | | |-RecoveryExpr 0x1201434f0 <col:4, col:8> '<dependent type>' contains-errors lvalue
|       | | | `-DeclRefExpr 0x1201434b8 <col:4> 'struct grid_cell *' lvalue ParmVar 0x120128648 'gc' 'struct grid_cell *'
|       | | `-RecoveryExpr 0x120143550 <col:13, col:18> '<dependent type>' contains-errors lvalue
|       | |   `-DeclRefExpr 0x120143518 <col:13> 'const struct grid_cell *' lvalue Var 0x120141258 'pgc' 'const struct grid_cell *'
|       | `-IfStmt 0x1201438b8 <line:38:8, line:41:18> has_else
|       |   |-BinaryOperator 0x1201436d8 <line:38:12, col:42> 'int' contains-errors '&&'
|       |   | |-BinaryOperator 0x120143618 <col:12, col:21> 'int' contains-errors '=='
|       |   | | |-DeclRefExpr 0x120143598 <col:12> 'const struct window_pane *' lvalue ParmVar 0x120140a28 'wp' 'const struct window_pane *'
|       |   | | `-RecoveryExpr 0x1201435f0 <col:18, col:21> '<dependent type>' contains-errors lvalue
|       |   | |   `-DeclRefExpr 0x1201435b8 <col:18> 'struct window *' contains-errors lvalue Var 0x120140db8 'w' 'struct window *'
|       |   | `-BinaryOperator 0x1201436b8 <col:31, col:42> 'int' contains-errors '!='
|       |   |   |-RecoveryExpr 0x120143670 <col:31, col:36> '<dependent type>' contains-errors lvalue
|       |   |   | `-DeclRefExpr 0x120143638 <col:31> 'const struct grid_cell *' lvalue Var 0x1201411c8 'agc' 'const struct grid_cell *'
|       |   |   `-IntegerLiteral 0x120143698 <col:42> 'int' 8
|       |   |-BinaryOperator 0x1201437b8 <line:39:4, col:18> '<dependent type>' contains-errors '='
|       |   | |-RecoveryExpr 0x120143730 <col:4, col:8> '<dependent type>' contains-errors lvalue
|       |   | | `-DeclRefExpr 0x1201436f8 <col:4> 'struct grid_cell *' lvalue ParmVar 0x120128648 'gc' 'struct grid_cell *'
|       |   | `-RecoveryExpr 0x120143790 <col:13, col:18> '<dependent type>' contains-errors lvalue
|       |   |   `-DeclRefExpr 0x120143758 <col:13> 'const struct grid_cell *' lvalue Var 0x1201411c8 'agc' 'const struct grid_cell *'
|       |   `-BinaryOperator 0x120143898 <line:41:4, col:18> '<dependent type>' contains-errors '='
|       |     |-RecoveryExpr 0x120143810 <col:4, col:8> '<dependent type>' contains-errors lvalue
|       |     | `-DeclRefExpr 0x1201437d8 <col:4> 'struct grid_cell *' lvalue ParmVar 0x120128648 'gc' 'struct grid_cell *'
|       |     `-RecoveryExpr 0x120143870 <col:13, col:18> '<dependent type>' contains-errors lvalue
|       |       `-DeclRefExpr 0x120143838 <col:13> 'const struct grid_cell *' lvalue Var 0x1201412e8 'wgc' 'const struct grid_cell *'
|       `-IfStmt 0x120143c38 <line:43:3, line:47:3>
|         |-BinaryOperator 0x120143998 <line:43:7, col:17> 'int' contains-errors '!='
|         | |-RecoveryExpr 0x120143950 <col:7, col:11> '<dependent type>' contains-errors lvalue
|         | | `-DeclRefExpr 0x120143918 <col:7> 'struct grid_cell *' lvalue ParmVar 0x120128648 'gc' 'struct grid_cell *'
|         | `-IntegerLiteral 0x120143978 <col:17> 'int' 8
|         `-CompoundStmt 0x120143c18 <col:20, line:47:3>
|           |-BinaryOperator 0x120143aa8 <line:44:4, col:42> 'int' contains-errors '='
|           | |-DeclRefExpr 0x1201439b8 <col:4> 'int' lvalue Var 0x1201413a0 'c' 'int'
|           | `-CallExpr 0x120143a78 <col:8, col:42> '<dependent type>' contains-errors
|           |   |-DeclRefExpr 0x1201439d8 <col:8> 'int ()' Function 0x120143000 'window_pane_get_palette' 'int ()'
|           |   |-DeclRefExpr 0x1201439f8 <col:32> 'const struct window_pane *' lvalue ParmVar 0x120140a28 'wp' 'const struct window_pane *'
|           |   `-RecoveryExpr 0x120143a50 <col:36, col:40> '<dependent type>' contains-errors lvalue
|           |     `-DeclRefExpr 0x120143a18 <col:36> 'struct grid_cell *' lvalue ParmVar 0x120128648 'gc' 'struct grid_cell *'
|           `-IfStmt 0x120143bf8 <line:45:4, line:46:14>
|             |-BinaryOperator 0x120143b38 <line:45:8, col:14> 'int' '!='
|             | |-ImplicitCastExpr 0x120143b20 <col:8> 'int' <LValueToRValue>
|             | | `-DeclRefExpr 0x120143ac8 <col:8> 'int' lvalue Var 0x1201413a0 'c' 'int'
|             | `-UnaryOperator 0x120143b08 <col:13, col:14> 'int' prefix '-'
|             |   `-IntegerLiteral 0x120143ae8 <col:14> 'int' 1
|             `-BinaryOperator 0x120143bd8 <line:46:5, col:14> '<dependent type>' contains-errors '='
|               |-RecoveryExpr 0x120143b90 <col:5, col:9> '<dependent type>' contains-errors lvalue
|               | `-DeclRefExpr 0x120143b58 <col:5> 'struct grid_cell *' lvalue ParmVar 0x120128648 'gc' 'struct grid_cell *'
|               `-DeclRefExpr 0x120143bb8 <col:14> 'int' lvalue Var 0x1201413a0 'c' 'int'
`-FunctionDecl 0x120141a00 <line:11:3> col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x120141b00 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x120141b68 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x120141bd0 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x120141aa8 <<invalid sloc>> Implicit 882
