TranslationUnitDecl 0x150855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1508564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x150855bd0 '__int128'
|-TypedefDecl 0x150856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x150855bf0 'unsigned __int128'
|-TypedefDecl 0x15100be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15100bc00 'struct __NSConstantString_tag'
|   `-Record 0x150856580 '__NSConstantString_tag'
|-TypedefDecl 0x15100be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x150855d90 '__SVInt8_t'
|-TypedefDecl 0x15100bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x150855db0 '__SVInt16_t'
|-TypedefDecl 0x15100bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x150855dd0 '__SVInt32_t'
|-TypedefDecl 0x15100bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x150855df0 '__SVInt64_t'
|-TypedefDecl 0x15100c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x150855e10 '__SVUint8_t'
|-TypedefDecl 0x15100c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x150855e30 '__SVUint16_t'
|-TypedefDecl 0x15100c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x150855e50 '__SVUint32_t'
|-TypedefDecl 0x15100c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x150855e70 '__SVUint64_t'
|-TypedefDecl 0x15100c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x150855e90 '__SVFloat16_t'
|-TypedefDecl 0x15100c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x150855eb0 '__SVFloat32_t'
|-TypedefDecl 0x15100c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x150855ed0 '__SVFloat64_t'
|-TypedefDecl 0x15100c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x150855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15100c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x150855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15100c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x150855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15100c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x150855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15100c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x150855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15100c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x150855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15100c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x150855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15100c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x150855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15100c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x150855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15100c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x150856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15100c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x150856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15100c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x150856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15100c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x150856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15100c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x150856090 '__clang_svint8x3_t'
|-TypedefDecl 0x15100c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1508560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15100c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1508560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15100c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1508560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15100c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x150856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15100ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x150856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15100cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x150856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15100cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x150856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15100cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x150856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15100d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1508561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15100d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1508561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15100d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1508561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15100d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x150856210 '__clang_svint8x4_t'
|-TypedefDecl 0x15100d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x150856230 '__clang_svint16x4_t'
|-TypedefDecl 0x15100d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x150856250 '__clang_svint32x4_t'
|-TypedefDecl 0x15100d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x150856270 '__clang_svint64x4_t'
|-TypedefDecl 0x15100d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x150856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15100d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1508562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15100d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1508562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15100d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1508562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15100d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x150856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15100d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x150856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15100d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x150856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15100d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x150856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15100da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x150856390 '__SVBool_t'
|-TypedefDecl 0x15100da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1508563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15100dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1508563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15100db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1508563f0 '__SVCount_t'
|-TypedefDecl 0x15100dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15100dbb0 'char *'
|   `-BuiltinType 0x1508556b0 'char'
|-TypedefDecl 0x15100dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15100dbb0 'char *'
|   `-BuiltinType 0x1508556b0 'char'
`-FunctionDecl 0x151026778 <dataset_diviso_filec/func10946_vuln.c:1:1, line:48:1> line:1:12 internal_get_user_pages_fast 'int (unsigned long, int, unsigned int, struct page **)' static
  |-ParmVarDecl 0x15100dcd8 <col:41, col:55> col:55 used start 'unsigned long'
  |-ParmVarDecl 0x15100dd58 <col:62, col:66> col:66 used nr_pages 'int'
  |-ParmVarDecl 0x15100ddd8 <line:2:6, col:19> col:19 used gup_flags 'unsigned int'
  |-ParmVarDecl 0x151026628 <line:3:6, col:20> col:20 used pages 'struct page **'
  `-CompoundStmt 0x15102bf98 <line:4:1, line:48:1>
    |-DeclStmt 0x151026a28 <line:5:2, col:30>
    | |-VarDecl 0x1510268a0 <col:2, col:16> col:16 used addr 'unsigned long'
    | |-VarDecl 0x151026920 <col:2, col:22> col:22 used len 'unsigned long'
    | `-VarDecl 0x1510269a0 <col:2, col:27> col:27 used end 'unsigned long'
    |-DeclStmt 0x151026b98 <line:6:2, col:28>
    | |-VarDecl 0x151026a58 <col:2, col:18> col:6 used nr_pinned 'int' cinit
    | | `-IntegerLiteral 0x151026ac0 <col:18> 'int' 0
    | `-VarDecl 0x151026af8 <col:2, col:27> col:21 used ret 'int' cinit
    |   `-IntegerLiteral 0x151026b60 <col:27> 'int' 0
    |-IfStmt 0x151026ee0 <line:8:2, line:10:11>
    | |-RecoveryExpr 0x151026e18 <line:8:6, line:9:45> '_Bool' contains-errors
    | `-ReturnStmt 0x151026ed0 <line:10:3, col:11>
    |   `-UnaryOperator 0x151026eb8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x151026ea0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x151026e80 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x151027210 <line:12:2, col:33> 'unsigned long' contains-errors '='
    | |-DeclRefExpr 0x151026f00 <col:2> 'unsigned long' lvalue ParmVar 0x15100dcd8 'start' 'unsigned long'
    | `-BinaryOperator 0x1510271f0 <col:10, col:33> '<dependent type>' contains-errors '&'
    |   |-CallExpr 0x151027190 <col:10, col:29> 'int'
    |   | |-ImplicitCastExpr 0x151027178 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x151027000 <col:10> 'int ()' Function 0x151026f48 'untagged_addr' 'int ()'
    |   | `-ImplicitCastExpr 0x1510271b8 <col:24> 'unsigned long' <LValueToRValue>
    |   |   `-DeclRefExpr 0x151027020 <col:24> 'unsigned long' lvalue ParmVar 0x15100dcd8 'start' 'unsigned long'
    |   `-RecoveryExpr 0x1510271d0 <col:33> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x151027288 <line:13:2, col:9> 'unsigned long' '='
    | |-DeclRefExpr 0x151027230 <col:2> 'unsigned long' lvalue Var 0x1510268a0 'addr' 'unsigned long'
    | `-ImplicitCastExpr 0x151027270 <col:9> 'unsigned long' <LValueToRValue>
    |   `-DeclRefExpr 0x151027250 <col:9> 'unsigned long' lvalue ParmVar 0x15100dcd8 'start' 'unsigned long'
    |-BinaryOperator 0x151027488 <line:14:2, col:36> 'unsigned long' contains-errors '='
    | |-DeclRefExpr 0x1510272a8 <col:2> 'unsigned long' lvalue Var 0x151026920 'len' 'unsigned long'
    | `-BinaryOperator 0x151027468 <col:8, col:36> '<dependent type>' contains-errors '<<'
    |   |-CStyleCastExpr 0x151027420 <col:8, col:24> 'unsigned long' <IntegralCast>
    |   | `-ImplicitCastExpr 0x151027408 <col:24> 'int' <LValueToRValue> part_of_explicit_cast
    |   |   `-DeclRefExpr 0x1510272c8 <col:24> 'int' lvalue ParmVar 0x15100dd58 'nr_pages' 'int'
    |   `-RecoveryExpr 0x151027448 <col:36> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x151027558 <line:15:2, col:16> 'unsigned long' '='
    | |-DeclRefExpr 0x1510274a8 <col:2> 'unsigned long' lvalue Var 0x1510269a0 'end' 'unsigned long'
    | `-BinaryOperator 0x151027538 <col:8, col:16> 'unsigned long' '+'
    |   |-ImplicitCastExpr 0x151027508 <col:8> 'unsigned long' <LValueToRValue>
    |   | `-DeclRefExpr 0x1510274c8 <col:8> 'unsigned long' lvalue ParmVar 0x15100dcd8 'start' 'unsigned long'
    |   `-ImplicitCastExpr 0x151027520 <col:16> 'unsigned long' <LValueToRValue>
    |     `-DeclRefExpr 0x1510274e8 <col:16> 'unsigned long' lvalue Var 0x151026920 'len' 'unsigned long'
    |-IfStmt 0x15102aa50 <line:17:2, line:18:10>
    | |-BinaryOperator 0x15102aa00 <line:17:6, col:13> 'int' '<='
    | | |-ImplicitCastExpr 0x1510275b8 <col:6> 'unsigned long' <LValueToRValue>
    | | | `-DeclRefExpr 0x151027578 <col:6> 'unsigned long' lvalue Var 0x1510269a0 'end' 'unsigned long'
    | | `-ImplicitCastExpr 0x1510275d0 <col:13> 'unsigned long' <LValueToRValue>
    | |   `-DeclRefExpr 0x151027598 <col:13> 'unsigned long' lvalue ParmVar 0x15100dcd8 'start' 'unsigned long'
    | `-ReturnStmt 0x15102aa40 <line:18:3, col:10>
    |   `-IntegerLiteral 0x15102aa20 <col:10> 'int' 0
    |-IfStmt 0x15102ae80 <line:19:2, line:20:11>
    | |-CallExpr 0x15102adb0 <line:19:6, col:52> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x15102ab50 <col:6> 'int ()' Function 0x15102aa98 'unlikely' 'int ()'
    | | `-UnaryOperator 0x15102ad98 <col:15, col:51> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x15102ad80 <col:16, col:51> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x15102ad48 <col:16, col:51> '<dependent type>' contains-errors lvalue
    | |       |-DeclRefExpr 0x15102ac50 <col:16> 'int ()' Function 0x15102ab98 'access_ok' 'int ()'
    | |       |-CStyleCastExpr 0x15102acb8 <col:26, col:41> 'void' <ToVoid>
    | |       | `-ImplicitCastExpr 0x15102aca0 <col:41> 'unsigned long' <LValueToRValue> part_of_explicit_cast
    | |       |   `-DeclRefExpr 0x15102ac70 <col:41> 'unsigned long' lvalue ParmVar 0x15100dcd8 'start' 'unsigned long'
    | |       `-DeclRefExpr 0x15102ace0 <col:48> 'unsigned long' lvalue Var 0x151026920 'len' 'unsigned long'
    | `-ReturnStmt 0x15102ae70 <line:20:3, col:11>
    |   `-UnaryOperator 0x15102ae58 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x15102ae40 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x15102ae20 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x15102b858 <line:22:2, line:28:2>
    | |-BinaryOperator 0x15102b278 <line:22:6, line:23:35> 'int' contains-errors '&&'
    | | |-CallExpr 0x15102b1d8 <line:22:6, col:37> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x15102af80 <col:6> 'int ()' Function 0x15102aec8 'IS_ENABLED' 'int ()'
    | | | `-RecoveryExpr 0x15102b1b8 <col:17> '<dependent type>' contains-errors lvalue
    | | `-CallExpr 0x15102b218 <line:23:6, col:35> 'int'
    | |   |-ImplicitCastExpr 0x15102b200 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x15102b0c0 <col:6> 'int ()' Function 0x15102b008 'gup_fast_permitted' 'int ()'
    | |   |-ImplicitCastExpr 0x15102b248 <col:25> 'unsigned long' <LValueToRValue>
    | |   | `-DeclRefExpr 0x15102b0e0 <col:25> 'unsigned long' lvalue ParmVar 0x15100dcd8 'start' 'unsigned long'
    | |   `-ImplicitCastExpr 0x15102b260 <col:32> 'unsigned long' <LValueToRValue>
    | |     `-DeclRefExpr 0x15102b100 <col:32> 'unsigned long' lvalue Var 0x1510269a0 'end' 'unsigned long'
    | `-CompoundStmt 0x15102b828 <col:38, line:28:2>
    |   |-CallExpr 0x15102b3b0 <line:24:3, col:21> 'int'
    |   | `-ImplicitCastExpr 0x15102b398 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   |   `-DeclRefExpr 0x15102b378 <col:3> 'int ()' Function 0x15102b2c0 'local_irq_disable' 'int ()'
    |   |-CallExpr 0x15102b5d0 <line:25:3, col:56> 'int'
    |   | |-ImplicitCastExpr 0x15102b5b8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x15102b4b0 <col:3> 'int ()' Function 0x15102b3f8 'gup_pgd_range' 'int ()'
    |   | |-ImplicitCastExpr 0x15102b618 <col:17> 'unsigned long' <LValueToRValue>
    |   | | `-DeclRefExpr 0x15102b4d0 <col:17> 'unsigned long' lvalue Var 0x1510268a0 'addr' 'unsigned long'
    |   | |-ImplicitCastExpr 0x15102b630 <col:23> 'unsigned long' <LValueToRValue>
    |   | | `-DeclRefExpr 0x15102b4f0 <col:23> 'unsigned long' lvalue Var 0x1510269a0 'end' 'unsigned long'
    |   | |-ImplicitCastExpr 0x15102b648 <col:28> 'unsigned int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x15102b510 <col:28> 'unsigned int' lvalue ParmVar 0x15100ddd8 'gup_flags' 'unsigned int'
    |   | |-ImplicitCastExpr 0x15102b660 <col:39> 'struct page **' <LValueToRValue>
    |   | | `-DeclRefExpr 0x15102b530 <col:39> 'struct page **' lvalue ParmVar 0x151026628 'pages' 'struct page **'
    |   | `-UnaryOperator 0x15102b5a0 <col:46, col:47> 'int *' prefix '&' cannot overflow
    |   |   `-DeclRefExpr 0x15102b550 <col:47> 'int' lvalue Var 0x151026a58 'nr_pinned' 'int'
    |   |-CallExpr 0x15102b790 <line:26:3, col:20> 'int'
    |   | `-ImplicitCastExpr 0x15102b778 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   |   `-DeclRefExpr 0x15102b758 <col:3> 'int ()' Function 0x15102b6a0 'local_irq_enable' 'int ()'
    |   `-BinaryOperator 0x15102b808 <line:27:3, col:9> 'int' '='
    |     |-DeclRefExpr 0x15102b7b0 <col:3> 'int' lvalue Var 0x151026af8 'ret' 'int'
    |     `-ImplicitCastExpr 0x15102b7f0 <col:9> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x15102b7d0 <col:9> 'int' lvalue Var 0x151026a58 'nr_pinned' 'int'
    |-IfStmt 0x15102bf30 <line:30:2, line:45:2>
    | |-BinaryOperator 0x15102b8e8 <line:30:6, col:18> 'int' '<'
    | | |-ImplicitCastExpr 0x15102b8b8 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x15102b878 <col:6> 'int' lvalue Var 0x151026a58 'nr_pinned' 'int'
    | | `-ImplicitCastExpr 0x15102b8d0 <col:18> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x15102b898 <col:18> 'int' lvalue ParmVar 0x15100dd58 'nr_pages' 'int'
    | `-CompoundStmt 0x15102bf08 <col:28, line:45:2>
    |   |-CompoundAssignOperator 0x15102b9a0 <line:33:3, col:12> 'struct page **' '+=' ComputeLHSTy='struct page **' ComputeResultTy='struct page **'
    |   | |-DeclRefExpr 0x15102b948 <col:3> 'struct page **' lvalue ParmVar 0x151026628 'pages' 'struct page **'
    |   | `-ImplicitCastExpr 0x15102b988 <col:12> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x15102b968 <col:12> 'int' lvalue Var 0x151026a58 'nr_pinned' 'int'
    |   |-BinaryOperator 0x15102bc90 <line:35:3, line:36:28> 'int' '='
    |   | |-DeclRefExpr 0x15102b9d0 <line:35:3> 'int' lvalue Var 0x151026af8 'ret' 'int'
    |   | `-CallExpr 0x15102bc08 <col:9, line:36:28> 'int'
    |   |   |-ImplicitCastExpr 0x15102bbf0 <line:35:9> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x15102bae0 <col:9> 'int ()' Function 0x15102ba28 '__gup_longterm_unlocked' 'int ()'
    |   |   |-ImplicitCastExpr 0x15102bc48 <col:33> 'unsigned long' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x15102bb00 <col:33> 'unsigned long' lvalue ParmVar 0x15100dcd8 'start' 'unsigned long'
    |   |   |-BinaryOperator 0x15102bb90 <col:40, col:51> 'int' '-'
    |   |   | |-ImplicitCastExpr 0x15102bb60 <col:40> 'int' <LValueToRValue>
    |   |   | | `-DeclRefExpr 0x15102bb20 <col:40> 'int' lvalue ParmVar 0x15100dd58 'nr_pages' 'int'
    |   |   | `-ImplicitCastExpr 0x15102bb78 <col:51> 'int' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x15102bb40 <col:51> 'int' lvalue Var 0x151026a58 'nr_pinned' 'int'
    |   |   |-ImplicitCastExpr 0x15102bc60 <line:36:12> 'unsigned int' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x15102bbb0 <col:12> 'unsigned int' lvalue ParmVar 0x15100ddd8 'gup_flags' 'unsigned int'
    |   |   `-ImplicitCastExpr 0x15102bc78 <col:23> 'struct page **' <LValueToRValue>
    |   |     `-DeclRefExpr 0x15102bbd0 <col:23> 'struct page **' lvalue ParmVar 0x151026628 'pages' 'struct page **'
    |   `-IfStmt 0x15102bee8 <line:39:3, line:44:3>
    |     |-BinaryOperator 0x15102bd08 <line:39:7, col:19> 'int' '>'
    |     | |-ImplicitCastExpr 0x15102bcf0 <col:7> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x15102bcb0 <col:7> 'int' lvalue Var 0x151026a58 'nr_pinned' 'int'
    |     | `-IntegerLiteral 0x15102bcd0 <col:19> 'int' 0
    |     `-CompoundStmt 0x15102bed0 <col:22, line:44:3>
    |       `-IfStmt 0x15102bea0 <line:40:4, line:43:12> has_else
    |         |-BinaryOperator 0x15102bd80 <line:40:8, col:14> 'int' '<'
    |         | |-ImplicitCastExpr 0x15102bd68 <col:8> 'int' <LValueToRValue>
    |         | | `-DeclRefExpr 0x15102bd28 <col:8> 'int' lvalue Var 0x151026af8 'ret' 'int'
    |         | `-IntegerLiteral 0x15102bd48 <col:14> 'int' 0
    |         |-BinaryOperator 0x15102bdf8 <line:41:5, col:11> 'int' '='
    |         | |-DeclRefExpr 0x15102bda0 <col:5> 'int' lvalue Var 0x151026af8 'ret' 'int'
    |         | `-ImplicitCastExpr 0x15102bde0 <col:11> 'int' <LValueToRValue>
    |         |   `-DeclRefExpr 0x15102bdc0 <col:11> 'int' lvalue Var 0x151026a58 'nr_pinned' 'int'
    |         `-CompoundAssignOperator 0x15102be70 <line:43:5, col:12> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |           |-DeclRefExpr 0x15102be18 <col:5> 'int' lvalue Var 0x151026af8 'ret' 'int'
    |           `-ImplicitCastExpr 0x15102be58 <col:12> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x15102be38 <col:12> 'int' lvalue Var 0x151026a58 'nr_pinned' 'int'
    `-ReturnStmt 0x15102bf88 <line:47:2, col:9>
      `-ImplicitCastExpr 0x15102bf70 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x15102bf50 <col:9> 'int' lvalue Var 0x151026af8 'ret' 'int'
