TranslationUnitDecl 0x151855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1518564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x151855bd0 '__int128'
|-TypedefDecl 0x151856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x151855bf0 'unsigned __int128'
|-TypedefDecl 0x151926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x151926000 'struct __NSConstantString_tag'
|   `-Record 0x151856580 '__NSConstantString_tag'
|-TypedefDecl 0x151926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x151855d90 '__SVInt8_t'
|-TypedefDecl 0x151926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x151855db0 '__SVInt16_t'
|-TypedefDecl 0x151926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x151855dd0 '__SVInt32_t'
|-TypedefDecl 0x1519263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x151855df0 '__SVInt64_t'
|-TypedefDecl 0x151926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x151855e10 '__SVUint8_t'
|-TypedefDecl 0x1519264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x151855e30 '__SVUint16_t'
|-TypedefDecl 0x151926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x151855e50 '__SVUint32_t'
|-TypedefDecl 0x151926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x151855e70 '__SVUint64_t'
|-TypedefDecl 0x1519265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x151855e90 '__SVFloat16_t'
|-TypedefDecl 0x151926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x151855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1519266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x151855ed0 '__SVFloat64_t'
|-TypedefDecl 0x151926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x151855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x151926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x151855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1519267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x151855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x151926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x151855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1519268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x151855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x151926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x151855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x151926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x151855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1519269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x151855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x151926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x151855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x151926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x151856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x151926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x151856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x151926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x151856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x151926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x151856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x151926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x151856090 '__clang_svint8x3_t'
|-TypedefDecl 0x151926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1518560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x151926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1518560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x151926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1518560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x151926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x151856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x151926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x151856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x151926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x151856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x151926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x151856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x151926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x151856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x151927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1518561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x151927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1518561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1519278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1518561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x151927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x151856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1519279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x151856230 '__clang_svint16x4_t'
|-TypedefDecl 0x151927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x151856250 '__clang_svint32x4_t'
|-TypedefDecl 0x151927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x151856270 '__clang_svint64x4_t'
|-TypedefDecl 0x151927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x151856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x151927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1518562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x151927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1518562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x151927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1518562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x151927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x151856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x151927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x151856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x151927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x151856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x151927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x151856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x151927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x151856390 '__SVBool_t'
|-TypedefDecl 0x151927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1518563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x151927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1518563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x151927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1518563f0 '__SVCount_t'
|-TypedefDecl 0x151927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x151927fb0 'char *'
|   `-BuiltinType 0x1518556b0 'char'
|-TypedefDecl 0x151928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x151927fb0 'char *'
|   `-BuiltinType 0x1518556b0 'char'
|-FunctionDecl 0x151928238 <dataset_diviso_filec/func10932_vuln.c:1:1, line:60:1> line:1:14 lxclock_name 'char *(const char *, const char *)' static
| |-ParmVarDecl 0x1519280d8 <col:27, col:39> col:39 used p 'const char *'
| |-ParmVarDecl 0x151928158 <col:42, col:54> col:54 used n 'const char *'
| `-CompoundStmt 0x151946230 <line:2:1, line:60:1>
|   |-DeclStmt 0x1519283b8 <line:3:2, col:9>
|   | `-VarDecl 0x151928350 <col:2, col:6> col:6 used ret 'int'
|   |-DeclStmt 0x151928450 <line:4:2, col:9>
|   | `-VarDecl 0x1519283e8 <col:2, col:6> col:6 used len 'int'
|   |-DeclStmt 0x1519284e8 <line:5:2, col:12>
|   | `-VarDecl 0x151928480 <col:2, col:8> col:8 used dest 'char *'
|   |-DeclStmt 0x151928580 <line:6:2, col:14>
|   | `-VarDecl 0x151928518 <col:2, col:8> col:8 used rundir 'char *'
|   |-BinaryOperator 0x151941130 <line:11:2, col:48> 'int' '='
|   | |-DeclRefExpr 0x151928598 <col:2> 'int' lvalue Var 0x1519283e8 'len' 'int'
|   | `-ImplicitCastExpr 0x151941118 <col:8, col:48> 'int' <IntegralCast>
|   |   `-BinaryOperator 0x1519410f8 <col:8, col:48> 'unsigned long' '+'
|   |     |-BinaryOperator 0x1519410a0 <col:8, col:44> 'unsigned long' '+'
|   |     | |-BinaryOperator 0x151940fd0 <col:8, col:32> 'unsigned long' '+'
|   |     | | |-CallExpr 0x151940ec8 <col:8, col:20> 'unsigned long'
|   |     | | | |-ImplicitCastExpr 0x151940eb0 <col:8> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |     | | | | `-DeclRefExpr 0x151940de0 <col:8> 'unsigned long (const char *)' Function 0x151940c70 'strlen' 'unsigned long (const char *)'
|   |     | | | `-ImplicitCastExpr 0x151940f08 <col:15> 'const char *' <NoOp>
|   |     | | |   `-ImplicitCastExpr 0x151940ef0 <col:15> 'char *' <ArrayToPointerDecay>
|   |     | | |     `-StringLiteral 0x151940e40 <col:15> 'char[4]' lvalue "STR"
|   |     | | `-CallExpr 0x151940f90 <col:24, col:32> 'unsigned long'
|   |     | |   |-ImplicitCastExpr 0x151940f78 <col:24> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |     | |   | `-DeclRefExpr 0x151940f20 <col:24> 'unsigned long (const char *)' Function 0x151940c70 'strlen' 'unsigned long (const char *)'
|   |     | |   `-ImplicitCastExpr 0x151940fb8 <col:31> 'const char *' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x151940f40 <col:31> 'const char *' lvalue ParmVar 0x151928158 'n' 'const char *'
|   |     | `-CallExpr 0x151941060 <col:36, col:44> 'unsigned long'
|   |     |   |-ImplicitCastExpr 0x151941048 <col:36> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |     |   | `-DeclRefExpr 0x151940ff0 <col:36> 'unsigned long (const char *)' Function 0x151940c70 'strlen' 'unsigned long (const char *)'
|   |     |   `-ImplicitCastExpr 0x151941088 <col:43> 'const char *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x151941010 <col:43> 'const char *' lvalue ParmVar 0x1519280d8 'p' 'const char *'
|   |     `-ImplicitCastExpr 0x1519410e0 <col:48> 'unsigned long' <IntegralCast>
|   |       `-IntegerLiteral 0x1519410c0 <col:48> 'int' 2
|   |-BinaryOperator 0x151941340 <line:12:2, col:22> 'char *' '='
|   | |-DeclRefExpr 0x151941150 <col:2> 'char *' lvalue Var 0x151928518 'rundir' 'char *'
|   | `-ImplicitCastExpr 0x151941328 <col:11, col:22> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x151941308 <col:11, col:22> 'int'
|   |     `-ImplicitCastExpr 0x1519412f0 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x1519412a0 <col:11> 'int ()' Function 0x1519411e8 'get_rundir' 'int ()'
|   |-IfStmt 0x1519413f8 <line:13:2, line:14:10>
|   | |-UnaryOperator 0x151941398 <line:13:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x151941380 <col:7> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x151941360 <col:7> 'char *' lvalue Var 0x151928518 'rundir' 'char *'
|   | `-ReturnStmt 0x1519413e8 <line:14:3, col:10>
|   |   `-RecoveryExpr 0x1519413c8 <col:10> '<dependent type>' contains-errors lvalue
|   |-CompoundAssignOperator 0x151941500 <line:15:2, col:22> 'int' '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   | |-DeclRefExpr 0x151941418 <col:2> 'int' lvalue Var 0x1519283e8 'len' 'int'
|   | `-CallExpr 0x1519414a8 <col:9, col:22> 'unsigned long'
|   |   |-ImplicitCastExpr 0x151941490 <col:9> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x151941438 <col:9> 'unsigned long (const char *)' Function 0x151940c70 'strlen' 'unsigned long (const char *)'
|   |   `-ImplicitCastExpr 0x1519414e8 <col:16> 'const char *' <NoOp>
|   |     `-ImplicitCastExpr 0x1519414d0 <col:16> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x151941458 <col:16> 'char *' lvalue Var 0x151928518 'rundir' 'char *'
|   |-IfStmt 0x1519437b8 <line:17:2, line:20:2>
|   | |-BinaryOperator 0x151943490 <line:17:6, col:30> 'int' contains-errors '=='
|   | | |-ParenExpr 0x151943450 <col:6, col:25> 'char *'
|   | | | `-BinaryOperator 0x151943430 <col:7, col:24> 'char *' '='
|   | | |   |-DeclRefExpr 0x151941530 <col:7> 'char *' lvalue Var 0x151928480 'dest' 'char *'
|   | | |   `-ImplicitCastExpr 0x151943418 <col:14, col:24> 'char *' <BitCast>
|   | | |     `-CallExpr 0x1519419c0 <col:14, col:24> 'void *'
|   | | |       |-ImplicitCastExpr 0x1519419a8 <col:14> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
|   | | |       | `-DeclRefExpr 0x151941728 <col:14> 'void *(unsigned long)' Function 0x151941588 'malloc' 'void *(unsigned long)'
|   | | |       `-ImplicitCastExpr 0x151943400 <col:21> 'unsigned long' <IntegralCast>
|   | | |         `-ImplicitCastExpr 0x1519419e8 <col:21> 'int' <LValueToRValue>
|   | | |           `-DeclRefExpr 0x151941748 <col:21> 'int' lvalue Var 0x1519283e8 'len' 'int'
|   | | `-RecoveryExpr 0x151943470 <col:30> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x151943798 <col:36, line:20:2>
|   |   |-CallExpr 0x1519436f8 <line:18:3, col:14> 'void'
|   |   | |-ImplicitCastExpr 0x1519436e0 <col:3> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x151943658 <col:3> 'void (void *)' Function 0x1519434e8 'free' 'void (void *)'
|   |   | `-ImplicitCastExpr 0x151943738 <col:8> 'void *' <BitCast>
|   |   |   `-ImplicitCastExpr 0x151943720 <col:8> 'char *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x151943678 <col:8> 'char *' lvalue Var 0x151928518 'rundir' 'char *'
|   |   `-ReturnStmt 0x151943788 <line:19:3, col:10>
|   |     `-RecoveryExpr 0x151943768 <col:10> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x151943d18 <line:22:2, col:44> 'int' '='
|   | |-DeclRefExpr 0x1519437d8 <col:2> 'int' lvalue Var 0x151928350 'ret' 'int'
|   | `-CallExpr 0x151943c28 <col:8, col:44> 'int'
|   |   |-ImplicitCastExpr 0x151943c10 <col:8> 'int (*)(char *, unsigned long, const char *, ...)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x151943ad8 <col:8> 'int (char *, unsigned long, const char *, ...)' Function 0x151943850 'snprintf' 'int (char *, unsigned long, const char *, ...)'
|   |   |-ImplicitCastExpr 0x151943c70 <col:17> 'char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x151943af8 <col:17> 'char *' lvalue Var 0x151928480 'dest' 'char *'
|   |   |-ImplicitCastExpr 0x151943ca0 <col:23> 'unsigned long' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x151943c88 <col:23> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x151943b18 <col:23> 'int' lvalue Var 0x1519283e8 'len' 'int'
|   |   |-ImplicitCastExpr 0x151943cd0 <col:28> 'const char *' <NoOp>
|   |   | `-ImplicitCastExpr 0x151943cb8 <col:28> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x151943b38 <col:28> 'char[4]' lvalue "STR"
|   |   |-ImplicitCastExpr 0x151943ce8 <col:35> 'char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x151943b58 <col:35> 'char *' lvalue Var 0x151928518 'rundir' 'char *'
|   |   `-ImplicitCastExpr 0x151943d00 <col:43> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x151943b78 <col:43> 'const char *' lvalue ParmVar 0x1519280d8 'p' 'const char *'
|   |-IfStmt 0x151944060 <line:23:2, line:27:2>
|   | |-BinaryOperator 0x151943e40 <line:23:6, col:24> 'int' '||'
|   | | |-BinaryOperator 0x151943d90 <col:6, col:12> 'int' '<'
|   | | | |-ImplicitCastExpr 0x151943d78 <col:6> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x151943d38 <col:6> 'int' lvalue Var 0x151928350 'ret' 'int'
|   | | | `-IntegerLiteral 0x151943d58 <col:12> 'int' 0
|   | | `-BinaryOperator 0x151943e20 <col:17, col:24> 'int' '>='
|   | |   |-ImplicitCastExpr 0x151943df0 <col:17> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x151943db0 <col:17> 'int' lvalue Var 0x151928350 'ret' 'int'
|   | |   `-ImplicitCastExpr 0x151943e08 <col:24> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x151943dd0 <col:24> 'int' lvalue Var 0x1519283e8 'len' 'int'
|   | `-CompoundStmt 0x151944038 <col:29, line:27:2>
|   |   |-CallExpr 0x151943ed0 <line:24:3, col:12> 'void'
|   |   | |-ImplicitCastExpr 0x151943eb8 <col:3> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x151943e60 <col:3> 'void (void *)' Function 0x1519434e8 'free' 'void (void *)'
|   |   | `-ImplicitCastExpr 0x151943f10 <col:8> 'void *' <BitCast>
|   |   |   `-ImplicitCastExpr 0x151943ef8 <col:8> 'char *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x151943e80 <col:8> 'char *' lvalue Var 0x151928480 'dest' 'char *'
|   |   |-CallExpr 0x151943f98 <line:25:3, col:14> 'void'
|   |   | |-ImplicitCastExpr 0x151943f80 <col:3> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x151943f28 <col:3> 'void (void *)' Function 0x1519434e8 'free' 'void (void *)'
|   |   | `-ImplicitCastExpr 0x151943fd8 <col:8> 'void *' <BitCast>
|   |   |   `-ImplicitCastExpr 0x151943fc0 <col:8> 'char *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x151943f48 <col:8> 'char *' lvalue Var 0x151928518 'rundir' 'char *'
|   |   `-ReturnStmt 0x151944028 <line:26:3, col:10>
|   |     `-RecoveryExpr 0x151944008 <col:10> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x151944240 <line:28:2, col:26> 'int' '='
|   | |-DeclRefExpr 0x151944080 <col:2> 'int' lvalue Var 0x151928350 'ret' 'int'
|   | `-CallExpr 0x1519441f8 <col:8, col:26> 'int'
|   |   |-ImplicitCastExpr 0x1519441e0 <col:8> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x151944180 <col:8> 'int ()' Function 0x1519440c8 'mkdir_p' 'int ()'
|   |   |-ImplicitCastExpr 0x151944228 <col:16> 'char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1519441a0 <col:16> 'char *' lvalue Var 0x151928480 'dest' 'char *'
|   |   `-IntegerLiteral 0x1519441c0 <col:22> 'int' 493
|   |-IfStmt 0x151945e78 <line:29:2, line:51:48> has_else
|   | |-BinaryOperator 0x1519442b8 <line:29:6, col:12> 'int' '<'
|   | | |-ImplicitCastExpr 0x1519442a0 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x151944260 <col:6> 'int' lvalue Var 0x151928350 'ret' 'int'
|   | | `-IntegerLiteral 0x151944280 <col:12> 'int' 0
|   | |-CompoundStmt 0x151945bb0 <col:15, line:50:2>
|   | | |-DeclStmt 0x151944560 <line:31:3, col:38>
|   | | | `-VarDecl 0x1519442f0 <col:3, col:37> col:7 used l2 'int' cinit
|   | | |   `-ImplicitCastExpr 0x151944548 <col:12, col:37> 'int' <IntegralCast>
|   | | |     `-BinaryOperator 0x151944528 <col:12, col:37> 'unsigned long' '+'
|   | | |       |-BinaryOperator 0x151944458 <col:12, col:25> 'unsigned long' '+'
|   | | |       | |-ImplicitCastExpr 0x151944440 <col:12> 'unsigned long' <IntegralCast>
|   | | |       | | `-IntegerLiteral 0x151944358 <col:12> 'int' 33
|   | | |       | `-CallExpr 0x151944400 <col:17, col:25> 'unsigned long'
|   | | |       |   |-ImplicitCastExpr 0x1519443d0 <col:17> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   | | |       |   | `-DeclRefExpr 0x151944378 <col:17> 'unsigned long (const char *)' Function 0x151940c70 'strlen' 'unsigned long (const char *)'
|   | | |       |   `-ImplicitCastExpr 0x151944428 <col:24> 'const char *' <LValueToRValue>
|   | | |       |     `-DeclRefExpr 0x151944398 <col:24> 'const char *' lvalue ParmVar 0x151928158 'n' 'const char *'
|   | | |       `-CallExpr 0x1519444e8 <col:29, col:37> 'unsigned long'
|   | | |         |-ImplicitCastExpr 0x1519444d0 <col:29> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   | | |         | `-DeclRefExpr 0x151944478 <col:29> 'unsigned long (const char *)' Function 0x151940c70 'strlen' 'unsigned long (const char *)'
|   | | |         `-ImplicitCastExpr 0x151944510 <col:36> 'const char *' <LValueToRValue>
|   | | |           `-DeclRefExpr 0x151944498 <col:36> 'const char *' lvalue ParmVar 0x1519280d8 'p' 'const char *'
|   | | |-IfStmt 0x151944e48 <line:32:3, line:42:3>
|   | | | |-BinaryOperator 0x1519445e8 <line:32:7, col:12> 'int' '>'
|   | | | | |-ImplicitCastExpr 0x1519445b8 <col:7> 'int' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x151944578 <col:7> 'int' lvalue Var 0x1519442f0 'l2' 'int'
|   | | | | `-ImplicitCastExpr 0x1519445d0 <col:12> 'int' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x151944598 <col:12> 'int' lvalue Var 0x1519283e8 'len' 'int'
|   | | | `-CompoundStmt 0x151944e10 <col:17, line:42:3>
|   | | |   |-DeclStmt 0x151944688 <line:33:4, col:11>
|   | | |   | `-VarDecl 0x151944620 <col:4, col:10> col:10 used d 'char *'
|   | | |   |-BinaryOperator 0x151944a90 <line:34:4, col:24> 'char *' '='
|   | | |   | |-DeclRefExpr 0x1519446a0 <col:4> 'char *' lvalue Var 0x151944620 'd' 'char *'
|   | | |   | `-ImplicitCastExpr 0x151944a78 <col:8, col:24> 'char *' <BitCast>
|   | | |   |   `-CallExpr 0x1519449e8 <col:8, col:24> 'void *'
|   | | |   |     |-ImplicitCastExpr 0x1519449d0 <col:8> 'void *(*)(void *, unsigned long)' <FunctionToPointerDecay>
|   | | |   |     | `-DeclRefExpr 0x151944910 <col:8> 'void *(void *, unsigned long)' Function 0x151944700 'realloc' 'void *(void *, unsigned long)'
|   | | |   |     |-ImplicitCastExpr 0x151944a30 <col:16> 'void *' <BitCast>
|   | | |   |     | `-ImplicitCastExpr 0x151944a18 <col:16> 'char *' <LValueToRValue>
|   | | |   |     |   `-DeclRefExpr 0x151944930 <col:16> 'char *' lvalue Var 0x151928480 'dest' 'char *'
|   | | |   |     `-ImplicitCastExpr 0x151944a60 <col:22> 'unsigned long' <IntegralCast>
|   | | |   |       `-ImplicitCastExpr 0x151944a48 <col:22> 'int' <LValueToRValue>
|   | | |   |         `-DeclRefExpr 0x151944950 <col:22> 'int' lvalue Var 0x1519442f0 'l2' 'int'
|   | | |   |-IfStmt 0x151944d00 <line:35:4, line:39:4>
|   | | |   | |-UnaryOperator 0x151944ae8 <line:35:8, col:9> 'int' prefix '!' cannot overflow
|   | | |   | | `-ImplicitCastExpr 0x151944ad0 <col:9> 'char *' <LValueToRValue>
|   | | |   | |   `-DeclRefExpr 0x151944ab0 <col:9> 'char *' lvalue Var 0x151944620 'd' 'char *'
|   | | |   | `-CompoundStmt 0x151944cd8 <col:12, line:39:4>
|   | | |   |   |-CallExpr 0x151944b70 <line:36:5, col:14> 'void'
|   | | |   |   | |-ImplicitCastExpr 0x151944b58 <col:5> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | |   |   | | `-DeclRefExpr 0x151944b00 <col:5> 'void (void *)' Function 0x1519434e8 'free' 'void (void *)'
|   | | |   |   | `-ImplicitCastExpr 0x151944bb0 <col:10> 'void *' <BitCast>
|   | | |   |   |   `-ImplicitCastExpr 0x151944b98 <col:10> 'char *' <LValueToRValue>
|   | | |   |   |     `-DeclRefExpr 0x151944b20 <col:10> 'char *' lvalue Var 0x151928480 'dest' 'char *'
|   | | |   |   |-CallExpr 0x151944c38 <line:37:5, col:16> 'void'
|   | | |   |   | |-ImplicitCastExpr 0x151944c20 <col:5> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | |   |   | | `-DeclRefExpr 0x151944bc8 <col:5> 'void (void *)' Function 0x1519434e8 'free' 'void (void *)'
|   | | |   |   | `-ImplicitCastExpr 0x151944c78 <col:10> 'void *' <BitCast>
|   | | |   |   |   `-ImplicitCastExpr 0x151944c60 <col:10> 'char *' <LValueToRValue>
|   | | |   |   |     `-DeclRefExpr 0x151944be8 <col:10> 'char *' lvalue Var 0x151928518 'rundir' 'char *'
|   | | |   |   `-ReturnStmt 0x151944cc8 <line:38:5, col:12>
|   | | |   |     `-RecoveryExpr 0x151944ca8 <col:12> '<dependent type>' contains-errors lvalue
|   | | |   |-BinaryOperator 0x151944d78 <line:40:4, col:10> 'int' '='
|   | | |   | |-DeclRefExpr 0x151944d20 <col:4> 'int' lvalue Var 0x1519283e8 'len' 'int'
|   | | |   | `-ImplicitCastExpr 0x151944d60 <col:10> 'int' <LValueToRValue>
|   | | |   |   `-DeclRefExpr 0x151944d40 <col:10> 'int' lvalue Var 0x1519442f0 'l2' 'int'
|   | | |   `-BinaryOperator 0x151944df0 <line:41:4, col:11> 'char *' '='
|   | | |     |-DeclRefExpr 0x151944d98 <col:4> 'char *' lvalue Var 0x151928480 'dest' 'char *'
|   | | |     `-ImplicitCastExpr 0x151944dd8 <col:11> 'char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x151944db8 <col:11> 'char *' lvalue Var 0x151944620 'd' 'char *'
|   | | |-BinaryOperator 0x151945198 <line:43:3, col:48> 'int' '='
|   | | | |-DeclRefExpr 0x151944e68 <col:3> 'int' lvalue Var 0x151928350 'ret' 'int'
|   | | | `-CallExpr 0x1519450c0 <col:9, col:48> 'int'
|   | | |   |-ImplicitCastExpr 0x1519450a8 <col:9> 'int (*)(char *, unsigned long, const char *, ...)' <FunctionToPointerDecay>
|   | | |   | `-DeclRefExpr 0x151944e88 <col:9> 'int (char *, unsigned long, const char *, ...)' Function 0x151943850 'snprintf' 'int (char *, unsigned long, const char *, ...)'
|   | | |   |-ImplicitCastExpr 0x151945108 <col:18> 'char *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x151944ea8 <col:18> 'char *' lvalue Var 0x151928480 'dest' 'char *'
|   | | |   |-ImplicitCastExpr 0x151945138 <col:24> 'unsigned long' <IntegralCast>
|   | | |   | `-ImplicitCastExpr 0x151945120 <col:24> 'int' <LValueToRValue>
|   | | |   |   `-DeclRefExpr 0x151944ec8 <col:24> 'int' lvalue Var 0x1519283e8 'len' 'int'
|   | | |   |-ImplicitCastExpr 0x151945168 <col:29> 'const char *' <NoOp>
|   | | |   | `-ImplicitCastExpr 0x151945150 <col:29> 'char *' <ArrayToPointerDecay>
|   | | |   |   `-StringLiteral 0x151944ee8 <col:29> 'char[4]' lvalue "STR"
|   | | |   |-CallExpr 0x151945020 <col:36, col:44> 'int'
|   | | |   | `-ImplicitCastExpr 0x151945008 <col:36> 'int (*)()' <FunctionToPointerDecay>
|   | | |   |   `-DeclRefExpr 0x151944fe8 <col:36> 'int ()' Function 0x151944f30 'geteuid' 'int ()'
|   | | |   `-ImplicitCastExpr 0x151945180 <col:47> 'const char *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x151945040 <col:47> 'const char *' lvalue ParmVar 0x1519280d8 'p' 'const char *'
|   | | |-IfStmt 0x1519458e0 <line:44:3, line:48:3>
|   | | | |-BinaryOperator 0x1519452c0 <line:44:7, col:25> 'int' '||'
|   | | | | |-BinaryOperator 0x151945210 <col:7, col:13> 'int' '<'
|   | | | | | |-ImplicitCastExpr 0x1519451f8 <col:7> 'int' <LValueToRValue>
|   | | | | | | `-DeclRefExpr 0x1519451b8 <col:7> 'int' lvalue Var 0x151928350 'ret' 'int'
|   | | | | | `-IntegerLiteral 0x1519451d8 <col:13> 'int' 0
|   | | | | `-BinaryOperator 0x1519452a0 <col:18, col:25> 'int' '>='
|   | | | |   |-ImplicitCastExpr 0x151945270 <col:18> 'int' <LValueToRValue>
|   | | | |   | `-DeclRefExpr 0x151945230 <col:18> 'int' lvalue Var 0x151928350 'ret' 'int'
|   | | | |   `-ImplicitCastExpr 0x151945288 <col:25> 'int' <LValueToRValue>
|   | | | |     `-DeclRefExpr 0x151945250 <col:25> 'int' lvalue Var 0x1519283e8 'len' 'int'
|   | | | `-CompoundStmt 0x1519458b8 <col:30, line:48:3>
|   | | |   |-CallExpr 0x151945350 <line:45:4, col:13> 'void'
|   | | |   | |-ImplicitCastExpr 0x151945338 <col:4> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | |   | | `-DeclRefExpr 0x1519452e0 <col:4> 'void (void *)' Function 0x1519434e8 'free' 'void (void *)'
|   | | |   | `-ImplicitCastExpr 0x151945390 <col:9> 'void *' <BitCast>
|   | | |   |   `-ImplicitCastExpr 0x151945378 <col:9> 'char *' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x151945300 <col:9> 'char *' lvalue Var 0x151928480 'dest' 'char *'
|   | | |   |-CallExpr 0x151945818 <line:46:4, col:15> 'void'
|   | | |   | |-ImplicitCastExpr 0x151945800 <col:4> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | |   | | `-DeclRefExpr 0x1519453a8 <col:4> 'void (void *)' Function 0x1519434e8 'free' 'void (void *)'
|   | | |   | `-ImplicitCastExpr 0x151945858 <col:9> 'void *' <BitCast>
|   | | |   |   `-ImplicitCastExpr 0x151945840 <col:9> 'char *' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x1519453c8 <col:9> 'char *' lvalue Var 0x151928518 'rundir' 'char *'
|   | | |   `-ReturnStmt 0x1519458a8 <line:47:4, col:11>
|   | | |     `-RecoveryExpr 0x151945888 <col:11> '<dependent type>' contains-errors lvalue
|   | | `-BinaryOperator 0x151945b90 <line:49:3, col:51> 'int' '='
|   | |   |-DeclRefExpr 0x151945900 <col:3> 'int' lvalue Var 0x151928350 'ret' 'int'
|   | |   `-CallExpr 0x151945a98 <col:9, col:51> 'int'
|   | |     |-ImplicitCastExpr 0x151945a80 <col:9> 'int (*)(char *, unsigned long, const char *, ...)' <FunctionToPointerDecay>
|   | |     | `-DeclRefExpr 0x151945920 <col:9> 'int (char *, unsigned long, const char *, ...)' Function 0x151943850 'snprintf' 'int (char *, unsigned long, const char *, ...)'
|   | |     |-ImplicitCastExpr 0x151945ae8 <col:18> 'char *' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x151945940 <col:18> 'char *' lvalue Var 0x151928480 'dest' 'char *'
|   | |     |-ImplicitCastExpr 0x151945b18 <col:24> 'unsigned long' <IntegralCast>
|   | |     | `-ImplicitCastExpr 0x151945b00 <col:24> 'int' <LValueToRValue>
|   | |     |   `-DeclRefExpr 0x151945960 <col:24> 'int' lvalue Var 0x1519283e8 'len' 'int'
|   | |     |-ImplicitCastExpr 0x151945b48 <col:29> 'const char *' <NoOp>
|   | |     | `-ImplicitCastExpr 0x151945b30 <col:29> 'char *' <ArrayToPointerDecay>
|   | |     |   `-StringLiteral 0x151945980 <col:29> 'char[4]' lvalue "STR"
|   | |     |-CallExpr 0x1519459d8 <col:36, col:44> 'int'
|   | |     | `-ImplicitCastExpr 0x1519459c0 <col:36> 'int (*)()' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1519459a0 <col:36> 'int ()' Function 0x151944f30 'geteuid' 'int ()'
|   | |     |-ImplicitCastExpr 0x151945b60 <col:47> 'const char *' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x1519459f8 <col:47> 'const char *' lvalue ParmVar 0x1519280d8 'p' 'const char *'
|   | |     `-ImplicitCastExpr 0x151945b78 <col:50> 'const char *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x151945a18 <col:50> 'const char *' lvalue ParmVar 0x151928158 'n' 'const char *'
|   | `-BinaryOperator 0x151945e58 <line:51:3, col:48> 'int' '='
|   |   |-DeclRefExpr 0x151945be8 <col:3> 'int' lvalue Var 0x151928350 'ret' 'int'
|   |   `-CallExpr 0x151945d48 <col:9, col:48> 'int'
|   |     |-ImplicitCastExpr 0x151945d30 <col:9> 'int (*)(char *, unsigned long, const char *, ...)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x151945c08 <col:9> 'int (char *, unsigned long, const char *, ...)' Function 0x151943850 'snprintf' 'int (char *, unsigned long, const char *, ...)'
|   |     |-ImplicitCastExpr 0x151945d98 <col:18> 'char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x151945c28 <col:18> 'char *' lvalue Var 0x151928480 'dest' 'char *'
|   |     |-ImplicitCastExpr 0x151945dc8 <col:24> 'unsigned long' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x151945db0 <col:24> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x151945c48 <col:24> 'int' lvalue Var 0x1519283e8 'len' 'int'
|   |     |-ImplicitCastExpr 0x151945df8 <col:29> 'const char *' <NoOp>
|   |     | `-ImplicitCastExpr 0x151945de0 <col:29> 'char *' <ArrayToPointerDecay>
|   |     |   `-StringLiteral 0x151945c68 <col:29> 'char[4]' lvalue "STR"
|   |     |-ImplicitCastExpr 0x151945e10 <col:36> 'char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x151945c88 <col:36> 'char *' lvalue Var 0x151928518 'rundir' 'char *'
|   |     |-ImplicitCastExpr 0x151945e28 <col:44> 'const char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x151945ca8 <col:44> 'const char *' lvalue ParmVar 0x1519280d8 'p' 'const char *'
|   |     `-ImplicitCastExpr 0x151945e40 <col:47> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x151945cc8 <col:47> 'const char *' lvalue ParmVar 0x151928158 'n' 'const char *'
|   |-CallExpr 0x151945f18 <line:53:2, col:13> 'void'
|   | |-ImplicitCastExpr 0x151945f00 <col:2> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x151945ea8 <col:2> 'void (void *)' Function 0x1519434e8 'free' 'void (void *)'
|   | `-ImplicitCastExpr 0x151945f58 <col:7> 'void *' <BitCast>
|   |   `-ImplicitCastExpr 0x151945f40 <col:7> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x151945ec8 <col:7> 'char *' lvalue Var 0x151928518 'rundir' 'char *'
|   |-IfStmt 0x1519461c8 <line:55:2, line:58:2>
|   | |-BinaryOperator 0x151946078 <line:55:6, col:24> 'int' '||'
|   | | |-BinaryOperator 0x151945fc8 <col:6, col:12> 'int' '<'
|   | | | |-ImplicitCastExpr 0x151945fb0 <col:6> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x151945f70 <col:6> 'int' lvalue Var 0x151928350 'ret' 'int'
|   | | | `-IntegerLiteral 0x151945f90 <col:12> 'int' 0
|   | | `-BinaryOperator 0x151946058 <col:17, col:24> 'int' '>='
|   | |   |-ImplicitCastExpr 0x151946028 <col:17> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x151945fe8 <col:17> 'int' lvalue Var 0x151928350 'ret' 'int'
|   | |   `-ImplicitCastExpr 0x151946040 <col:24> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x151946008 <col:24> 'int' lvalue Var 0x1519283e8 'len' 'int'
|   | `-CompoundStmt 0x1519461a8 <col:29, line:58:2>
|   |   |-CallExpr 0x151946108 <line:56:3, col:12> 'void'
|   |   | |-ImplicitCastExpr 0x1519460f0 <col:3> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x151946098 <col:3> 'void (void *)' Function 0x1519434e8 'free' 'void (void *)'
|   |   | `-ImplicitCastExpr 0x151946148 <col:8> 'void *' <BitCast>
|   |   |   `-ImplicitCastExpr 0x151946130 <col:8> 'char *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1519460b8 <col:8> 'char *' lvalue Var 0x151928480 'dest' 'char *'
|   |   `-ReturnStmt 0x151946198 <line:57:3, col:10>
|   |     `-RecoveryExpr 0x151946178 <col:10> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x151946220 <line:59:2, col:9>
|     `-ImplicitCastExpr 0x151946208 <col:9> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x1519461e8 <col:9> 'char *' lvalue Var 0x151928480 'dest' 'char *'
|-FunctionDecl 0x151940c70 <line:11:8> col:8 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x151940d70 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x151940d18 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x151941588 <line:17:14> col:14 implicit used malloc 'void *(unsigned long)' extern
| |-ParmVarDecl 0x151941688 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x151941630 <<invalid sloc>> Implicit 871
| `-AllocSizeAttr 0x1519416f8 <col:14> Implicit 1
|-FunctionDecl 0x1519434e8 <line:18:3> col:3 implicit used free 'void (void *)' extern
| |-ParmVarDecl 0x1519435e8 <<invalid sloc>> <invalid sloc> 'void *'
| `-BuiltinAttr 0x151943590 <<invalid sloc>> Implicit 873
|-FunctionDecl 0x151943850 <line:22:8> col:8 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern
| |-ParmVarDecl 0x151943950 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1519439b8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x151943a20 <<invalid sloc>> <invalid sloc> 'const char *'
| |-BuiltinAttr 0x1519438f8 <<invalid sloc>> Implicit 905
| `-FormatAttr 0x151943aa0 <col:8> Implicit printf 3 4
`-FunctionDecl 0x151944700 <line:34:8> col:8 implicit used realloc 'void *(void *, unsigned long)' extern
  |-ParmVarDecl 0x151944800 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x151944868 <<invalid sloc>> <invalid sloc> 'unsigned long'
  |-BuiltinAttr 0x1519447a8 <<invalid sloc>> Implicit 872
  `-AllocSizeAttr 0x1519448e0 <col:8> Implicit 2
