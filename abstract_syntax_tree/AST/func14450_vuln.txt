TranslationUnitDecl 0x15b842a08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15b8438b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15b842fd0 '__int128'
|-TypedefDecl 0x15b843928 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15b842ff0 'unsigned __int128'
|-TypedefDecl 0x15b01d830 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15b01d600 'struct __NSConstantString_tag'
|   `-Record 0x15b843980 '__NSConstantString_tag'
|-TypedefDecl 0x15b01d898 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x15b843190 '__SVInt8_t'
|-TypedefDecl 0x15b01d900 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x15b8431b0 '__SVInt16_t'
|-TypedefDecl 0x15b01d968 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x15b8431d0 '__SVInt32_t'
|-TypedefDecl 0x15b01d9d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x15b8431f0 '__SVInt64_t'
|-TypedefDecl 0x15b01da38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x15b843210 '__SVUint8_t'
|-TypedefDecl 0x15b01daa0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x15b843230 '__SVUint16_t'
|-TypedefDecl 0x15b01db08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x15b843250 '__SVUint32_t'
|-TypedefDecl 0x15b01db70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x15b843270 '__SVUint64_t'
|-TypedefDecl 0x15b01dbd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x15b843290 '__SVFloat16_t'
|-TypedefDecl 0x15b01dc40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x15b8432b0 '__SVFloat32_t'
|-TypedefDecl 0x15b01dca8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x15b8432d0 '__SVFloat64_t'
|-TypedefDecl 0x15b01dd10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x15b8432f0 '__SVBfloat16_t'
|-TypedefDecl 0x15b01dd78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x15b843310 '__clang_svint8x2_t'
|-TypedefDecl 0x15b01dde0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x15b843330 '__clang_svint16x2_t'
|-TypedefDecl 0x15b01de48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x15b843350 '__clang_svint32x2_t'
|-TypedefDecl 0x15b01deb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x15b843370 '__clang_svint64x2_t'
|-TypedefDecl 0x15b01df18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x15b843390 '__clang_svuint8x2_t'
|-TypedefDecl 0x15b01df80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x15b8433b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15b01dfe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x15b8433d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15b01e050 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x15b8433f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15b01e0b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x15b843410 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15b01e120 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x15b843430 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15b01e188 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x15b843450 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15b01e1f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x15b843470 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15b01e258 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x15b843490 '__clang_svint8x3_t'
|-TypedefDecl 0x15b01e2c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x15b8434b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15b01e328 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x15b8434d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15b01e390 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x15b8434f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15b01e3f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x15b843510 '__clang_svuint8x3_t'
|-TypedefDecl 0x15b01e460 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x15b843530 '__clang_svuint16x3_t'
|-TypedefDecl 0x15b01e4c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x15b843550 '__clang_svuint32x3_t'
|-TypedefDecl 0x15b01e530 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x15b843570 '__clang_svuint64x3_t'
|-TypedefDecl 0x15b01e598 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x15b843590 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15b01ea00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x15b8435b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15b01ea68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x15b8435d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15b01ead0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x15b8435f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15b01eb38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x15b843610 '__clang_svint8x4_t'
|-TypedefDecl 0x15b01eba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x15b843630 '__clang_svint16x4_t'
|-TypedefDecl 0x15b01ec08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x15b843650 '__clang_svint32x4_t'
|-TypedefDecl 0x15b01ec70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x15b843670 '__clang_svint64x4_t'
|-TypedefDecl 0x15b01ecd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x15b843690 '__clang_svuint8x4_t'
|-TypedefDecl 0x15b01ed40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x15b8436b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15b01eda8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x15b8436d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15b01ee10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x15b8436f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15b01ee78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x15b843710 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15b01eee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x15b843730 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15b01ef48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x15b843750 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15b01efb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x15b843770 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15b01f018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x15b843790 '__SVBool_t'
|-TypedefDecl 0x15b01f080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x15b8437b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15b01f0e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x15b8437d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15b01f150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x15b8437f0 '__SVCount_t'
|-TypedefDecl 0x15b01f1f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15b01f1b0 'char *'
|   `-BuiltinType 0x15b842ab0 'char'
|-TypedefDecl 0x15b01f268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15b01f1b0 'char *'
|   `-BuiltinType 0x15b842ab0 'char'
|-FunctionDecl 0x15b01f668 <dataset_diviso_filec/func14450_vuln.c:1:1, line:40:1> line:1:1 invalid doapr_outch 'int (char **, char **, int *, int *, int)'
| |-ParmVarDecl 0x15b01f308 <col:13, col:20> col:20 used sbuffer 'char **'
| |-ParmVarDecl 0x15b01f388 <line:2:13, col:20> col:20 used buffer 'char **'
| |-ParmVarDecl 0x15b01f458 <col:28, col:36> col:36 invalid currlen 'int *'
| |-ParmVarDecl 0x15b01f4d8 <col:45, col:53> col:53 invalid maxlen 'int *'
| |-ParmVarDecl 0x15b01f558 <col:61, col:65> col:65 used c 'int'
| `-CompoundStmt 0x15b03ceb0 <line:3:1, line:40:1>
|   |-CallExpr 0x15b03aae8 <line:5:5, col:46> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15b01f890 <col:5> 'int ()' Function 0x15b01f7d8 'assert' 'int ()'
|   | `-BinaryOperator 0x15b03aac8 <col:12, col:42> 'int' contains-errors '||'
|   |   |-BinaryOperator 0x15b03aa68 <col:12, col:24> 'int' contains-errors '!='
|   |   | |-UnaryOperator 0x15b03aa30 <col:12, col:13> 'char *' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x15b03aa18 <col:13> 'char **' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x15b01f8b0 <col:13> 'char **' lvalue ParmVar 0x15b01f308 'sbuffer' 'char **'
|   |   | `-RecoveryExpr 0x15b03aa48 <col:24> '<dependent type>' contains-errors lvalue
|   |   `-BinaryOperator 0x15b03aaa8 <col:32, col:42> 'int' contains-errors '!='
|   |     |-DeclRefExpr 0x15b01f938 <col:32> 'char **' lvalue ParmVar 0x15b01f388 'buffer' 'char **'
|   |     `-RecoveryExpr 0x15b03aa88 <col:42> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x15b03abf0 <line:8:5, col:31> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15b03ab10 <col:5> 'int ()' Function 0x15b01f7d8 'assert' 'int ()'
|   | `-BinaryOperator 0x15b03abd0 <col:12, col:25> 'int' contains-errors '<='
|   |   |-UnaryOperator 0x15b03ab68 <col:12, col:13> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x15b03ab50 <col:13> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   `-RecoveryExpr 0x15b03ab30 <col:13> '<dependent type>' contains-errors lvalue
|   |   `-UnaryOperator 0x15b03abb8 <col:24, col:25> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x15b03aba0 <col:25> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x15b03ab80 <col:25> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x15b03c970 <line:10:5, line:30:5>
|   | |-BinaryOperator 0x15b03acf8 <line:10:9, col:32> 'int' contains-errors '&&'
|   | | |-DeclRefExpr 0x15b03ac18 <col:9> 'char **' lvalue ParmVar 0x15b01f388 'buffer' 'char **'
|   | | `-BinaryOperator 0x15b03acd8 <col:19, col:32> 'int' contains-errors '=='
|   | |   |-UnaryOperator 0x15b03ac70 <col:19, col:20> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | |   | `-ImplicitCastExpr 0x15b03ac58 <col:20> '<dependent type>' contains-errors <LValueToRValue>
|   | |   |   `-RecoveryExpr 0x15b03ac38 <col:20> '<dependent type>' contains-errors lvalue
|   | |   `-UnaryOperator 0x15b03acc0 <col:31, col:32> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | |     `-ImplicitCastExpr 0x15b03aca8 <col:32> '<dependent type>' contains-errors <LValueToRValue>
|   | |       `-RecoveryExpr 0x15b03ac88 <col:32> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x15b03c950 <col:40, line:30:5>
|   |   |-CompoundAssignOperator 0x15b03ad88 <line:11:9, col:20> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   | |-UnaryOperator 0x15b03ad50 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x15b03ad38 <col:10> '<dependent type>' contains-errors <LValueToRValue>
|   |   | |   `-RecoveryExpr 0x15b03ad18 <col:10> '<dependent type>' contains-errors lvalue
|   |   | `-IntegerLiteral 0x15b03ad68 <col:20> 'int' 1024
|   |   `-IfStmt 0x15b03c920 <line:12:9, line:29:9> has_else
|   |     |-BinaryOperator 0x15b03aec0 <line:12:13, col:24> 'int' contains-errors '=='
|   |     | |-UnaryOperator 0x15b03ae88 <col:13, col:14> 'char *' lvalue prefix '*' cannot overflow
|   |     | | `-ImplicitCastExpr 0x15b03ae70 <col:14> 'char **' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x15b03adb8 <col:14> 'char **' lvalue ParmVar 0x15b01f388 'buffer' 'char **'
|   |     | `-RecoveryExpr 0x15b03aea0 <col:24> '<dependent type>' contains-errors lvalue
|   |     |-CompoundStmt 0x15b03c5c8 <col:30, line:23:9>
|   |     | |-BinaryOperator 0x15b03b0a8 <line:13:13, col:45> 'char *' contains-errors '='
|   |     | | |-UnaryOperator 0x15b03af18 <col:13, col:14> 'char *' lvalue prefix '*' cannot overflow
|   |     | | | `-ImplicitCastExpr 0x15b03af00 <col:14> 'char **' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x15b03aee0 <col:14> 'char **' lvalue ParmVar 0x15b01f388 'buffer' 'char **'
|   |     | | `-CallExpr 0x15b03b080 <col:23, col:45> '<dependent type>' contains-errors
|   |     | |   |-DeclRefExpr 0x15b03b010 <col:23> 'int ()' Function 0x15b03af58 'OPENSSL_malloc' 'int ()'
|   |     | |   `-UnaryOperator 0x15b03b068 <col:38, col:39> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |     | |     `-ImplicitCastExpr 0x15b03b050 <col:39> '<dependent type>' contains-errors <LValueToRValue>
|   |     | |       `-RecoveryExpr 0x15b03b030 <col:39> '<dependent type>' contains-errors lvalue
|   |     | |-IfStmt 0x15b03b170 <line:14:13, line:17:13>
|   |     | | |-UnaryOperator 0x15b03b130 <line:14:17, col:19> 'int' prefix '!' cannot overflow
|   |     | | | `-ImplicitCastExpr 0x15b03b118 <col:18, col:19> 'char *' <LValueToRValue>
|   |     | | |   `-UnaryOperator 0x15b03b100 <col:18, col:19> 'char *' lvalue prefix '*' cannot overflow
|   |     | | |     `-ImplicitCastExpr 0x15b03b0e8 <col:19> 'char **' <LValueToRValue>
|   |     | | |       `-DeclRefExpr 0x15b03b0c8 <col:19> 'char **' lvalue ParmVar 0x15b01f388 'buffer' 'char **'
|   |     | | `-CompoundStmt 0x15b03b158 <col:27, line:17:13>
|   |     | |   `-ReturnStmt 0x15b03b148 <line:16:17>
|   |     | |-IfStmt 0x15b03c480 <line:18:13, line:21:13>
|   |     | | |-BinaryOperator 0x15b03b200 <line:18:17, col:28> 'int' contains-errors '>'
|   |     | | | |-UnaryOperator 0x15b03b1c8 <col:17, col:18> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |     | | | | `-ImplicitCastExpr 0x15b03b1b0 <col:18> '<dependent type>' contains-errors <LValueToRValue>
|   |     | | | |   `-RecoveryExpr 0x15b03b190 <col:18> '<dependent type>' contains-errors lvalue
|   |     | | | `-IntegerLiteral 0x15b03b1e0 <col:28> 'int' 0
|   |     | | `-CompoundStmt 0x15b03c460 <col:31, line:21:13>
|   |     | |   |-CallExpr 0x15b03b390 <line:19:17, col:40> '<dependent type>' contains-errors
|   |     | |   | |-DeclRefExpr 0x15b03b220 <col:17> 'int ()' Function 0x15b01f7d8 'assert' 'int ()'
|   |     | |   | `-BinaryOperator 0x15b03b370 <col:24, col:36> 'int' contains-errors '!='
|   |     | |   |   |-UnaryOperator 0x15b03b338 <col:24, col:25> 'char *' lvalue prefix '*' cannot overflow
|   |     | |   |   | `-ImplicitCastExpr 0x15b03b320 <col:25> 'char **' <LValueToRValue>
|   |     | |   |   |   `-DeclRefExpr 0x15b03b240 <col:25> 'char **' lvalue ParmVar 0x15b01f308 'sbuffer' 'char **'
|   |     | |   |   `-RecoveryExpr 0x15b03b350 <col:36> '<dependent type>' contains-errors lvalue
|   |     | |   `-CallExpr 0x15b03c428 <line:20:17, col:51> '<dependent type>' contains-errors
|   |     | |     |-DeclRefExpr 0x15b03c2e8 <col:17> 'void *(void *, const void *, unsigned long)' Function 0x15b03b860 'memcpy' 'void *(void *, const void *, unsigned long)'
|   |     | |     |-UnaryOperator 0x15b03c340 <col:24, col:25> 'char *' lvalue prefix '*' cannot overflow
|   |     | |     | `-ImplicitCastExpr 0x15b03c328 <col:25> 'char **' <LValueToRValue>
|   |     | |     |   `-DeclRefExpr 0x15b03c308 <col:25> 'char **' lvalue ParmVar 0x15b01f388 'buffer' 'char **'
|   |     | |     |-UnaryOperator 0x15b03c390 <col:33, col:34> 'char *' lvalue prefix '*' cannot overflow
|   |     | |     | `-ImplicitCastExpr 0x15b03c378 <col:34> 'char **' <LValueToRValue>
|   |     | |     |   `-DeclRefExpr 0x15b03c358 <col:34> 'char **' lvalue ParmVar 0x15b01f308 'sbuffer' 'char **'
|   |     | |     `-UnaryOperator 0x15b03c3e0 <col:43, col:44> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |     | |       `-ImplicitCastExpr 0x15b03c3c8 <col:44> '<dependent type>' contains-errors <LValueToRValue>
|   |     | |         `-RecoveryExpr 0x15b03c3a8 <col:44> '<dependent type>' contains-errors lvalue
|   |     | `-BinaryOperator 0x15b03c5a8 <line:22:13, col:24> 'char *' contains-errors '='
|   |     |   |-UnaryOperator 0x15b03c570 <col:13, col:14> 'char *' lvalue prefix '*' cannot overflow
|   |     |   | `-ImplicitCastExpr 0x15b03c558 <col:14> 'char **' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x15b03c4a0 <col:14> 'char **' lvalue ParmVar 0x15b01f308 'sbuffer' 'char **'
|   |     |   `-RecoveryExpr 0x15b03c588 <col:24> '<dependent type>' contains-errors lvalue
|   |     `-CompoundStmt 0x15b03c900 <line:23:16, line:29:9>
|   |       |-BinaryOperator 0x15b03c818 <line:24:13, col:55> 'char *' contains-errors '='
|   |       | |-UnaryOperator 0x15b03c630 <col:13, col:14> 'char *' lvalue prefix '*' cannot overflow
|   |       | | `-ImplicitCastExpr 0x15b03c618 <col:14> 'char **' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x15b03c5f8 <col:14> 'char **' lvalue ParmVar 0x15b01f388 'buffer' 'char **'
|   |       | `-CallExpr 0x15b03c7e8 <col:23, col:55> '<dependent type>' contains-errors
|   |       |   |-DeclRefExpr 0x15b03c728 <col:23> 'int ()' Function 0x15b03c670 'OPENSSL_realloc' 'int ()'
|   |       |   |-UnaryOperator 0x15b03c780 <col:39, col:40> 'char *' lvalue prefix '*' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x15b03c768 <col:40> 'char **' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x15b03c748 <col:40> 'char **' lvalue ParmVar 0x15b01f388 'buffer' 'char **'
|   |       |   `-UnaryOperator 0x15b03c7d0 <col:48, col:49> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |       |     `-ImplicitCastExpr 0x15b03c7b8 <col:49> '<dependent type>' contains-errors <LValueToRValue>
|   |       |       `-RecoveryExpr 0x15b03c798 <col:49> '<dependent type>' contains-errors lvalue
|   |       `-IfStmt 0x15b03c8e0 <line:25:13, line:28:13>
|   |         |-UnaryOperator 0x15b03c8a0 <line:25:17, col:19> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x15b03c888 <col:18, col:19> 'char *' <LValueToRValue>
|   |         |   `-UnaryOperator 0x15b03c870 <col:18, col:19> 'char *' lvalue prefix '*' cannot overflow
|   |         |     `-ImplicitCastExpr 0x15b03c858 <col:19> 'char **' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x15b03c838 <col:19> 'char **' lvalue ParmVar 0x15b01f388 'buffer' 'char **'
|   |         `-CompoundStmt 0x15b03c8c8 <col:27, line:28:13>
|   |           `-ReturnStmt 0x15b03c8b8 <line:27:17>
|   |-IfStmt 0x15b03ce80 <line:32:5, line:37:5>
|   | |-BinaryOperator 0x15b03ca30 <line:32:9, col:21> 'int' contains-errors '<'
|   | | |-UnaryOperator 0x15b03c9c8 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | | `-ImplicitCastExpr 0x15b03c9b0 <col:10> '<dependent type>' contains-errors <LValueToRValue>
|   | | |   `-RecoveryExpr 0x15b03c990 <col:10> '<dependent type>' contains-errors lvalue
|   | | `-UnaryOperator 0x15b03ca18 <col:20, col:21> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | |   `-ImplicitCastExpr 0x15b03ca00 <col:21> '<dependent type>' contains-errors <LValueToRValue>
|   | |     `-RecoveryExpr 0x15b03c9e0 <col:21> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x15b03ce68 <col:29, line:37:5>
|   |   `-IfStmt 0x15b03ce38 <line:33:9, line:36:45> has_else
|   |     |-ImplicitCastExpr 0x15b03caa0 <line:33:13, col:14> 'char *' <LValueToRValue>
|   |     | `-UnaryOperator 0x15b03ca88 <col:13, col:14> 'char *' lvalue prefix '*' cannot overflow
|   |     |   `-ImplicitCastExpr 0x15b03ca70 <col:14> 'char **' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x15b03ca50 <col:14> 'char **' lvalue ParmVar 0x15b01f308 'sbuffer' 'char **'
|   |     |-BinaryOperator 0x15b03cc58 <line:34:13, col:46> '<dependent type>' contains-errors '='
|   |     | |-ArraySubscriptExpr 0x15b03cbc8 <col:13, col:36> '<dependent type>' contains-errors lvalue
|   |     | | |-ImplicitCastExpr 0x15b03cbb0 <col:13, col:22> 'char *' <LValueToRValue>
|   |     | | | `-ParenExpr 0x15b03cb08 <col:13, col:22> 'char *' lvalue
|   |     | | |   `-UnaryOperator 0x15b03caf0 <col:14, col:15> 'char *' lvalue prefix '*' cannot overflow
|   |     | | |     `-ImplicitCastExpr 0x15b03cad8 <col:15> 'char **' <LValueToRValue>
|   |     | | |       `-DeclRefExpr 0x15b03cab8 <col:15> 'char **' lvalue ParmVar 0x15b01f308 'sbuffer' 'char **'
|   |     | | `-UnaryOperator 0x15b03cb98 <col:24, col:34> '<dependent type>' contains-errors postfix '++' cannot overflow
|   |     | |   `-ParenExpr 0x15b03cb78 <col:24, col:33> '<dependent type>' contains-errors
|   |     | |     `-UnaryOperator 0x15b03cb60 <col:25, col:26> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |     | |       `-ImplicitCastExpr 0x15b03cb48 <col:26> '<dependent type>' contains-errors <LValueToRValue>
|   |     | |         `-RecoveryExpr 0x15b03cb28 <col:26> '<dependent type>' contains-errors lvalue
|   |     | `-CStyleCastExpr 0x15b03cc30 <col:40, col:46> 'char' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x15b03cc18 <col:46> 'int' <LValueToRValue> part_of_explicit_cast
|   |     |     `-DeclRefExpr 0x15b03cbe8 <col:46> 'int' lvalue ParmVar 0x15b01f558 'c' 'int'
|   |     `-BinaryOperator 0x15b03ce18 <line:36:13, col:45> '<dependent type>' contains-errors '='
|   |       |-ArraySubscriptExpr 0x15b03cd88 <col:13, col:35> '<dependent type>' contains-errors lvalue
|   |       | |-ImplicitCastExpr 0x15b03cd70 <col:13, col:21> 'char *' <LValueToRValue>
|   |       | | `-ParenExpr 0x15b03ccc8 <col:13, col:21> 'char *' lvalue
|   |       | |   `-UnaryOperator 0x15b03ccb0 <col:14, col:15> 'char *' lvalue prefix '*' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x15b03cc98 <col:15> 'char **' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x15b03cc78 <col:15> 'char **' lvalue ParmVar 0x15b01f388 'buffer' 'char **'
|   |       | `-UnaryOperator 0x15b03cd58 <col:23, col:33> '<dependent type>' contains-errors postfix '++' cannot overflow
|   |       |   `-ParenExpr 0x15b03cd38 <col:23, col:32> '<dependent type>' contains-errors
|   |       |     `-UnaryOperator 0x15b03cd20 <col:24, col:25> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |       |       `-ImplicitCastExpr 0x15b03cd08 <col:25> '<dependent type>' contains-errors <LValueToRValue>
|   |       |         `-RecoveryExpr 0x15b03cce8 <col:25> '<dependent type>' contains-errors lvalue
|   |       `-CStyleCastExpr 0x15b03cdf0 <col:39, col:45> 'char' <IntegralCast>
|   |         `-ImplicitCastExpr 0x15b03cdd8 <col:45> 'int' <LValueToRValue> part_of_explicit_cast
|   |           `-DeclRefExpr 0x15b03cda8 <col:45> 'int' lvalue ParmVar 0x15b01f558 'c' 'int'
|   `-ReturnStmt 0x15b03cea0 <line:39:5>
`-FunctionDecl 0x15b03b860 <line:20:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x15b03b960 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x15b03c200 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x15b03c268 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x15b03b908 <<invalid sloc>> Implicit 882
