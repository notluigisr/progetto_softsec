TranslationUnitDecl 0x126055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1260564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x126055bd0 '__int128'
|-TypedefDecl 0x126056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x126055bf0 'unsigned __int128'
|-TypedefDecl 0x126126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x126126000 'struct __NSConstantString_tag'
|   `-Record 0x126056580 '__NSConstantString_tag'
|-TypedefDecl 0x126126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x126055d90 '__SVInt8_t'
|-TypedefDecl 0x126126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x126055db0 '__SVInt16_t'
|-TypedefDecl 0x126126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x126055dd0 '__SVInt32_t'
|-TypedefDecl 0x1261263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x126055df0 '__SVInt64_t'
|-TypedefDecl 0x126126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x126055e10 '__SVUint8_t'
|-TypedefDecl 0x1261264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x126055e30 '__SVUint16_t'
|-TypedefDecl 0x126126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x126055e50 '__SVUint32_t'
|-TypedefDecl 0x126126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x126055e70 '__SVUint64_t'
|-TypedefDecl 0x1261265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x126055e90 '__SVFloat16_t'
|-TypedefDecl 0x126126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x126055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1261266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x126055ed0 '__SVFloat64_t'
|-TypedefDecl 0x126126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x126055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x126126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x126055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1261267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x126055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x126126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x126055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1261268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x126055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x126126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x126055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x126126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x126055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1261269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x126055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x126126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x126055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x126126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x126056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x126126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x126056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x126126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x126056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x126126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x126056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x126126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x126056090 '__clang_svint8x3_t'
|-TypedefDecl 0x126126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1260560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x126126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1260560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x126126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1260560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x126126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x126056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x126126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x126056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x126126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x126056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x126126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x126056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x126126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x126056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x126127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1260561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x126127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1260561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1261278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1260561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x126127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x126056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1261279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x126056230 '__clang_svint16x4_t'
|-TypedefDecl 0x126127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x126056250 '__clang_svint32x4_t'
|-TypedefDecl 0x126127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x126056270 '__clang_svint64x4_t'
|-TypedefDecl 0x126127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x126056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x126127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1260562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x126127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1260562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x126127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1260562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x126127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x126056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x126127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x126056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x126127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x126056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x126127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x126056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x126127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x126056390 '__SVBool_t'
|-TypedefDecl 0x126127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1260563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x126127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1260563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x126127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1260563f0 '__SVCount_t'
|-TypedefDecl 0x126127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x126127fb0 'char *'
|   `-BuiltinType 0x1260556b0 'char'
|-TypedefDecl 0x126128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x126127fb0 'char *'
|   `-BuiltinType 0x1260556b0 'char'
|-FunctionDecl 0x1261282e8 <dataset_diviso_filec/func9685_vuln.c:1:1, line:43:1> line:1:21 invalid matches 'unsigned int (const int *, const int *, int)' static
| |-ParmVarDecl 0x1261280f0 <col:29, col:51> col:51 invalid raw1 'const int *'
| |-ParmVarDecl 0x126128170 <col:57, col:79> col:79 invalid raw2 'const int *'
| |-ParmVarDecl 0x1261281f0 <line:2:8, col:26> col:26 invalid match 'int'
| `-CompoundStmt 0x126144a28 <line:3:1, line:43:1>
|   |-DeclStmt 0x126128428 <line:5:1, col:8>
|   | `-VarDecl 0x1261283c0 <col:1, col:5> col:5 used ret 'int'
|   |-IfStmt 0x126144950 <line:7:2, line:40:2> has_else
|   | |-BinaryOperator 0x1261284b8 <line:7:6, col:15> 'int' contains-errors '=='
|   | | |-RecoveryExpr 0x126128440 <col:6> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x126128498 <col:15> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x126142238 <col:33, line:15:2>
|   | | |-IfStmt 0x126141800 <line:8:3, line:9:30>
|   | | | |-BinaryOperator 0x1261285a8 <line:8:7, col:27> 'int' contains-errors '!='
|   | | | | |-CXXDependentScopeMemberExpr 0x1261284f8 <col:7, col:13> '<dependent type>' contains-errors lvalue ->size
|   | | | | | `-RecoveryExpr 0x1261284d8 <col:7> '<dependent type>' contains-errors lvalue
|   | | | | `-CXXDependentScopeMemberExpr 0x126128560 <col:21, col:27> '<dependent type>' contains-errors lvalue ->size
|   | | | |   `-RecoveryExpr 0x126128540 <col:21> '<dependent type>' contains-errors lvalue
|   | | | `-ReturnStmt 0x1261287e8 <line:9:4, col:30>
|   | | |   `-ImplicitCastExpr 0x1261287d0 <col:11, col:30> 'unsigned int' <IntegralCast>
|   | | |     `-CallExpr 0x1261287a8 <col:11, col:30> 'int'
|   | | |       |-ImplicitCastExpr 0x126128790 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   | | |       | `-DeclRefExpr 0x126128720 <col:11> 'int ()' Function 0x126128668 'gnutls_assert_val' 'int ()'
|   | | |       `-IntegerLiteral 0x126128740 <col:29> 'int' 0
|   | | |-IfStmt 0x1261421d0 <line:11:3, line:12:30>
|   | | | |-BinaryOperator 0x126142108 <line:11:7, col:53> 'int' contains-errors '!='
|   | | | | |-CallExpr 0x1261420b0 <col:7, col:48> '<dependent type>' contains-errors
|   | | | | | |-DeclRefExpr 0x126141f10 <col:7> 'int (const void *, const void *, unsigned long)' Function 0x126141cc0 'memcmp' 'int (const void *, const void *, unsigned long)'
|   | | | | | |-CXXDependentScopeMemberExpr 0x126141f50 <col:14, col:20> '<dependent type>' contains-errors lvalue ->data
|   | | | | | | `-RecoveryExpr 0x126141f30 <col:14> '<dependent type>' contains-errors lvalue
|   | | | | | |-CXXDependentScopeMemberExpr 0x126141fb8 <col:26, col:32> '<dependent type>' contains-errors lvalue ->data
|   | | | | | | `-RecoveryExpr 0x126141f98 <col:26> '<dependent type>' contains-errors lvalue
|   | | | | | `-CXXDependentScopeMemberExpr 0x126142020 <col:38, col:44> '<dependent type>' contains-errors lvalue ->size
|   | | | | |   `-RecoveryExpr 0x126142000 <col:38> '<dependent type>' contains-errors lvalue
|   | | | | `-IntegerLiteral 0x1261420e8 <col:53> 'int' 0
|   | | | `-ReturnStmt 0x1261421c0 <line:12:4, col:30>
|   | | |   `-ImplicitCastExpr 0x1261421a8 <col:11, col:30> 'unsigned int' <IntegralCast>
|   | | |     `-CallExpr 0x126142180 <col:11, col:30> 'int'
|   | | |       |-ImplicitCastExpr 0x126142168 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   | | |       | `-DeclRefExpr 0x126142128 <col:11> 'int ()' Function 0x126128668 'gnutls_assert_val' 'int ()'
|   | | |       `-IntegerLiteral 0x126142148 <col:29> 'int' 0
|   | | `-ReturnStmt 0x126142228 <line:14:3, col:10>
|   | |   `-ImplicitCastExpr 0x126142210 <col:10> 'unsigned int' <IntegralCast>
|   | |     `-IntegerLiteral 0x1261421f0 <col:10> 'int' 1
|   | `-IfStmt 0x126144920 <line:15:9, line:40:2> has_else
|   |   |-BinaryOperator 0x1261422d8 <line:15:13, col:22> 'int' contains-errors '=='
|   |   | |-RecoveryExpr 0x126142260 <col:13> '<dependent type>' contains-errors lvalue
|   |   | `-RecoveryExpr 0x1261422b8 <col:22> '<dependent type>' contains-errors lvalue
|   |   |-CompoundStmt 0x126143fe8 <col:43, line:28:2>
|   |   | |-IfStmt 0x126142448 <line:17:3, line:18:30>
|   |   | | |-BinaryOperator 0x126142380 <line:17:7, col:21> 'int' contains-errors '!='
|   |   | | | |-CXXDependentScopeMemberExpr 0x126142318 <col:7, col:13> '<dependent type>' contains-errors lvalue ->size
|   |   | | | | `-RecoveryExpr 0x1261422f8 <col:7> '<dependent type>' contains-errors lvalue
|   |   | | | `-IntegerLiteral 0x126142360 <col:21> 'int' 32
|   |   | | `-ReturnStmt 0x126142438 <line:18:4, col:30>
|   |   | |   `-ImplicitCastExpr 0x126142420 <col:11, col:30> 'unsigned int' <IntegralCast>
|   |   | |     `-CallExpr 0x1261423f8 <col:11, col:30> 'int'
|   |   | |       |-ImplicitCastExpr 0x1261423e0 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |   | |       | `-DeclRefExpr 0x1261423a0 <col:11> 'int ()' Function 0x126128668 'gnutls_assert_val' 'int ()'
|   |   | |       `-IntegerLiteral 0x1261423c0 <col:29> 'int' 0
|   |   | |-BinaryOperator 0x126142768 <line:20:3, col:75> 'int' contains-errors '='
|   |   | | |-DeclRefExpr 0x126142468 <col:3> 'int' lvalue Var 0x1261283c0 'ret' 'int'
|   |   | | `-CallExpr 0x126142728 <col:9, col:75> '<dependent type>' contains-errors
|   |   | |   |-DeclRefExpr 0x126142568 <col:9> 'int ()' Function 0x1261424b0 'gnutls_hash_fast' 'int ()'
|   |   | |   |-RecoveryExpr 0x1261426e8 <col:26> '<dependent type>' contains-errors lvalue
|   |   | |   |-CXXDependentScopeMemberExpr 0x1261425c0 <col:45, col:51> '<dependent type>' contains-errors lvalue ->data
|   |   | |   | `-RecoveryExpr 0x1261425a0 <col:45> '<dependent type>' contains-errors lvalue
|   |   | |   |-CXXDependentScopeMemberExpr 0x126142628 <col:57, col:63> '<dependent type>' contains-errors lvalue ->size
|   |   | |   | `-RecoveryExpr 0x126142608 <col:57> '<dependent type>' contains-errors lvalue
|   |   | |   `-RecoveryExpr 0x126142708 <col:69> '<dependent type>' contains-errors lvalue
|   |   | |-IfStmt 0x126143ca8 <line:21:3, line:22:30>
|   |   | | |-BinaryOperator 0x1261427e0 <line:21:7, col:13> 'int' '<'
|   |   | | | |-ImplicitCastExpr 0x1261427c8 <col:7> 'int' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x126142788 <col:7> 'int' lvalue Var 0x1261283c0 'ret' 'int'
|   |   | | | `-IntegerLiteral 0x1261427a8 <col:13> 'int' 0
|   |   | | `-ReturnStmt 0x126143c98 <line:22:4, col:30>
|   |   | |   `-ImplicitCastExpr 0x126143c80 <col:11, col:30> 'unsigned int' <IntegralCast>
|   |   | |     `-CallExpr 0x126143c58 <col:11, col:30> 'int'
|   |   | |       |-ImplicitCastExpr 0x126143c40 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |   | |       | `-DeclRefExpr 0x126143c00 <col:11> 'int ()' Function 0x126128668 'gnutls_assert_val' 'int ()'
|   |   | |       `-IntegerLiteral 0x126143c20 <col:29> 'int' 0
|   |   | |-IfStmt 0x126143f80 <line:24:3, line:25:30>
|   |   | | |-BinaryOperator 0x126143eb8 <line:24:7, col:41> 'int' contains-errors '!='
|   |   | | | |-CallExpr 0x126143e80 <col:7, col:36> '<dependent type>' contains-errors
|   |   | | | | |-DeclRefExpr 0x126143cc8 <col:7> 'int (const void *, const void *, unsigned long)' Function 0x126141cc0 'memcmp' 'int (const void *, const void *, unsigned long)'
|   |   | | | | |-RecoveryExpr 0x126143e30 <col:14> '<dependent type>' contains-errors lvalue
|   |   | | | | |-CXXDependentScopeMemberExpr 0x126143d20 <col:22, col:28> '<dependent type>' contains-errors lvalue ->data
|   |   | | | | | `-RecoveryExpr 0x126143d00 <col:22> '<dependent type>' contains-errors lvalue
|   |   | | | | `-IntegerLiteral 0x126143d68 <col:34> 'int' 32
|   |   | | | `-IntegerLiteral 0x126143df0 <col:41> 'int' 0
|   |   | | `-ReturnStmt 0x126143f70 <line:25:4, col:30>
|   |   | |   `-ImplicitCastExpr 0x126143f58 <col:11, col:30> 'unsigned int' <IntegralCast>
|   |   | |     `-CallExpr 0x126143f30 <col:11, col:30> 'int'
|   |   | |       |-ImplicitCastExpr 0x126143f18 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |   | |       | `-DeclRefExpr 0x126143ed8 <col:11> 'int ()' Function 0x126128668 'gnutls_assert_val' 'int ()'
|   |   | |       `-IntegerLiteral 0x126143ef8 <col:29> 'int' 0
|   |   | `-ReturnStmt 0x126143fd8 <line:27:3, col:10>
|   |   |   `-ImplicitCastExpr 0x126143fc0 <col:10> 'unsigned int' <IntegralCast>
|   |   |     `-IntegerLiteral 0x126143fa0 <col:10> 'int' 1
|   |   `-IfStmt 0x126144900 <line:28:9, line:40:2>
|   |     |-BinaryOperator 0x126144098 <line:28:13, col:22> 'int' contains-errors '=='
|   |     | |-RecoveryExpr 0x126144020 <col:13> '<dependent type>' contains-errors lvalue
|   |     | `-RecoveryExpr 0x126144078 <col:22> '<dependent type>' contains-errors lvalue
|   |     `-CompoundStmt 0x1261448c8 <col:43, line:40:2>
|   |       |-IfStmt 0x126144208 <line:29:3, line:30:30>
|   |       | |-BinaryOperator 0x126144140 <line:29:7, col:21> 'int' contains-errors '!='
|   |       | | |-CXXDependentScopeMemberExpr 0x1261440d8 <col:7, col:13> '<dependent type>' contains-errors lvalue ->size
|   |       | | | `-RecoveryExpr 0x1261440b8 <col:7> '<dependent type>' contains-errors lvalue
|   |       | | `-IntegerLiteral 0x126144120 <col:21> 'int' 64
|   |       | `-ReturnStmt 0x1261441f8 <line:30:4, col:30>
|   |       |   `-ImplicitCastExpr 0x1261441e0 <col:11, col:30> 'unsigned int' <IntegralCast>
|   |       |     `-CallExpr 0x1261441b8 <col:11, col:30> 'int'
|   |       |       |-ImplicitCastExpr 0x1261441a0 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |       |       | `-DeclRefExpr 0x126144160 <col:11> 'int ()' Function 0x126128668 'gnutls_assert_val' 'int ()'
|   |       |       `-IntegerLiteral 0x126144180 <col:29> 'int' 0
|   |       |-BinaryOperator 0x126144448 <line:32:3, col:75> 'int' contains-errors '='
|   |       | |-DeclRefExpr 0x126144228 <col:3> 'int' lvalue Var 0x1261283c0 'ret' 'int'
|   |       | `-CallExpr 0x126144408 <col:9, col:75> '<dependent type>' contains-errors
|   |       |   |-DeclRefExpr 0x126144248 <col:9> 'int ()' Function 0x1261424b0 'gnutls_hash_fast' 'int ()'
|   |       |   |-RecoveryExpr 0x1261443c8 <col:26> '<dependent type>' contains-errors lvalue
|   |       |   |-CXXDependentScopeMemberExpr 0x1261442a0 <col:45, col:51> '<dependent type>' contains-errors lvalue ->data
|   |       |   | `-RecoveryExpr 0x126144280 <col:45> '<dependent type>' contains-errors lvalue
|   |       |   |-CXXDependentScopeMemberExpr 0x126144308 <col:57, col:63> '<dependent type>' contains-errors lvalue ->size
|   |       |   | `-RecoveryExpr 0x1261442e8 <col:57> '<dependent type>' contains-errors lvalue
|   |       |   `-RecoveryExpr 0x1261443e8 <col:69> '<dependent type>' contains-errors lvalue
|   |       |-IfStmt 0x126144588 <line:33:3, line:34:30>
|   |       | |-BinaryOperator 0x1261444c0 <line:33:7, col:13> 'int' '<'
|   |       | | |-ImplicitCastExpr 0x1261444a8 <col:7> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x126144468 <col:7> 'int' lvalue Var 0x1261283c0 'ret' 'int'
|   |       | | `-IntegerLiteral 0x126144488 <col:13> 'int' 0
|   |       | `-ReturnStmt 0x126144578 <line:34:4, col:30>
|   |       |   `-ImplicitCastExpr 0x126144560 <col:11, col:30> 'unsigned int' <IntegralCast>
|   |       |     `-CallExpr 0x126144538 <col:11, col:30> 'int'
|   |       |       |-ImplicitCastExpr 0x126144520 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |       |       | `-DeclRefExpr 0x1261444e0 <col:11> 'int ()' Function 0x126128668 'gnutls_assert_val' 'int ()'
|   |       |       `-IntegerLiteral 0x126144500 <col:29> 'int' 0
|   |       |-IfStmt 0x126144860 <line:36:3, line:37:30>
|   |       | |-BinaryOperator 0x126144798 <line:36:7, col:41> 'int' contains-errors '!='
|   |       | | |-CallExpr 0x126144760 <col:7, col:36> '<dependent type>' contains-errors
|   |       | | | |-DeclRefExpr 0x1261445a8 <col:7> 'int (const void *, const void *, unsigned long)' Function 0x126141cc0 'memcmp' 'int (const void *, const void *, unsigned long)'
|   |       | | | |-RecoveryExpr 0x126144710 <col:14> '<dependent type>' contains-errors lvalue
|   |       | | | |-CXXDependentScopeMemberExpr 0x126144600 <col:22, col:28> '<dependent type>' contains-errors lvalue ->data
|   |       | | | | `-RecoveryExpr 0x1261445e0 <col:22> '<dependent type>' contains-errors lvalue
|   |       | | | `-IntegerLiteral 0x126144648 <col:34> 'int' 64
|   |       | | `-IntegerLiteral 0x1261446d0 <col:41> 'int' 0
|   |       | `-ReturnStmt 0x126144850 <line:37:4, col:30>
|   |       |   `-ImplicitCastExpr 0x126144838 <col:11, col:30> 'unsigned int' <IntegralCast>
|   |       |     `-CallExpr 0x126144810 <col:11, col:30> 'int'
|   |       |       |-ImplicitCastExpr 0x1261447f8 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |       |       | `-DeclRefExpr 0x1261447b8 <col:11> 'int ()' Function 0x126128668 'gnutls_assert_val' 'int ()'
|   |       |       `-IntegerLiteral 0x1261447d8 <col:29> 'int' 0
|   |       `-ReturnStmt 0x1261448b8 <line:39:3, col:10>
|   |         `-ImplicitCastExpr 0x1261448a0 <col:10> 'unsigned int' <IntegralCast>
|   |           `-IntegerLiteral 0x126144880 <col:10> 'int' 1
|   `-ReturnStmt 0x126144a18 <line:42:2, col:28>
|     `-ImplicitCastExpr 0x126144a00 <col:9, col:28> 'unsigned int' <IntegralCast>
|       `-CallExpr 0x1261449d8 <col:9, col:28> 'int'
|         |-ImplicitCastExpr 0x1261449c0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x126144980 <col:9> 'int ()' Function 0x126128668 'gnutls_assert_val' 'int ()'
|         `-IntegerLiteral 0x1261449a0 <col:27> 'int' 0
`-FunctionDecl 0x126141cc0 <line:11:7> col:7 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x126141dc0 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x126141e28 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x126141e90 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x126141d68 <<invalid sloc>> Implicit 883
