TranslationUnitDecl 0x11e055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11e0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11e055bd0 '__int128'
|-TypedefDecl 0x11e056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11e055bf0 'unsigned __int128'
|-TypedefDecl 0x11e126a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x11e126800 'struct __NSConstantString_tag'
|   `-Record 0x11e056580 '__NSConstantString_tag'
|-TypedefDecl 0x11e126a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11e055d90 '__SVInt8_t'
|-TypedefDecl 0x11e126b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11e055db0 '__SVInt16_t'
|-TypedefDecl 0x11e126b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11e055dd0 '__SVInt32_t'
|-TypedefDecl 0x11e126bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11e055df0 '__SVInt64_t'
|-TypedefDecl 0x11e126c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11e055e10 '__SVUint8_t'
|-TypedefDecl 0x11e126ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11e055e30 '__SVUint16_t'
|-TypedefDecl 0x11e126d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11e055e50 '__SVUint32_t'
|-TypedefDecl 0x11e126d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11e055e70 '__SVUint64_t'
|-TypedefDecl 0x11e126dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11e055e90 '__SVFloat16_t'
|-TypedefDecl 0x11e126e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11e055eb0 '__SVFloat32_t'
|-TypedefDecl 0x11e126ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11e055ed0 '__SVFloat64_t'
|-TypedefDecl 0x11e126f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11e055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x11e126f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11e055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x11e126fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11e055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x11e127048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11e055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x11e1270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11e055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x11e127118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11e055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x11e127180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11e055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x11e1271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11e055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x11e127250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11e055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x11e1272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11e056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x11e127320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11e056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x11e127388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11e056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x11e1273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11e056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x11e127458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11e056090 '__clang_svint8x3_t'
|-TypedefDecl 0x11e1274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11e0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x11e127528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11e0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x11e127590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11e0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x11e1275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11e056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x11e127660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11e056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x11e1276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11e056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x11e127730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11e056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x11e127798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11e056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x11e128000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11e0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x11e128068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11e0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x11e1280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11e0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x11e128138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11e056210 '__clang_svint8x4_t'
|-TypedefDecl 0x11e1281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11e056230 '__clang_svint16x4_t'
|-TypedefDecl 0x11e128208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11e056250 '__clang_svint32x4_t'
|-TypedefDecl 0x11e128270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11e056270 '__clang_svint64x4_t'
|-TypedefDecl 0x11e1282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11e056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x11e128340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11e0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x11e1283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11e0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x11e128410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11e0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x11e128478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11e056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x11e1284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11e056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x11e128548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11e056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x11e1285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11e056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x11e128618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11e056390 '__SVBool_t'
|-TypedefDecl 0x11e128680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11e0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x11e1286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11e0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x11e128750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11e0563f0 '__SVCount_t'
|-TypedefDecl 0x11e1287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x11e1287b0 'char *'
|   `-BuiltinType 0x11e0556b0 'char'
|-TypedefDecl 0x11e128868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x11e1287b0 'char *'
|   `-BuiltinType 0x11e0556b0 'char'
`-FunctionDecl 0x11e128ba8 <dataset_diviso_filec/func12986_nonvuln.c:1:1, line:66:1> line:1:5 invalid wc_ecc_shared_secret_ex 'int (int *, int *, int *, int *)'
  |-ParmVarDecl 0x11e128928 <col:29, col:38> col:38 referenced invalid private_key 'int *'
  |-ParmVarDecl 0x11e1289a8 <col:51, col:62> col:62 invalid point 'int *'
  |-ParmVarDecl 0x11e128a28 <line:2:29, col:35> col:35 invalid out 'int *'
  |-ParmVarDecl 0x11e128aa8 <col:40, col:48> col:48 invalid outlen 'int *'
  `-CompoundStmt 0x11e143a70 <line:3:1, line:66:1>
    |-DeclStmt 0x11e128cf0 <line:4:5, col:12>
    | `-VarDecl 0x11e128c88 <col:5, col:9> col:9 used err 'int'
    |-IfStmt 0x11e142ca0 <line:6:5, line:9:5>
    | |-BinaryOperator 0x11e142c20 <line:6:9, line:7:71> 'int' contains-errors '||'
    | | |-BinaryOperator 0x11e128fa8 <line:6:9, col:56> 'int' contains-errors '||'
    | | | |-BinaryOperator 0x11e128f48 <col:9, col:41> 'int' contains-errors '||'
    | | | | |-BinaryOperator 0x11e128ee8 <col:9, col:24> 'int' contains-errors '=='
    | | | | | |-RecoveryExpr 0x11e128d08 <col:9> '<dependent type>' contains-errors lvalue
    | | | | | `-RecoveryExpr 0x11e128ec8 <col:24> '<dependent type>' contains-errors lvalue
    | | | | `-BinaryOperator 0x11e128f28 <col:32, col:41> 'int' contains-errors '=='
    | | | |   |-RecoveryExpr 0x11e128d60 <col:32> '<dependent type>' contains-errors lvalue
    | | | |   `-RecoveryExpr 0x11e128f08 <col:41> '<dependent type>' contains-errors lvalue
    | | | `-BinaryOperator 0x11e128f88 <col:49, col:56> 'int' contains-errors '=='
    | | |   |-RecoveryExpr 0x11e128dd8 <col:49> '<dependent type>' contains-errors lvalue
    | | |   `-RecoveryExpr 0x11e128f68 <col:56> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x11e142c00 <line:7:61, col:71> 'int' contains-errors '=='
    | |   |-RecoveryExpr 0x11e128e50 <col:61> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x11e128fc8 <col:71> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x11e142c88 <col:77, line:9:5>
    |   `-ReturnStmt 0x11e142c78 <line:8:9, col:16>
    |     `-RecoveryExpr 0x11e142c58 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x11e142f20 <line:12:5, line:15:5>
    | |-BinaryOperator 0x11e142ea0 <line:12:9, line:13:34> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x11e142e40 <line:12:9, col:30> 'int' contains-errors '!='
    | | | |-CXXDependentScopeMemberExpr 0x11e142ce0 <col:9, col:22> '<dependent type>' contains-errors lvalue ->type
    | | | | `-RecoveryExpr 0x11e142cc0 <col:9> '<dependent type>' contains-errors lvalue
    | | | `-RecoveryExpr 0x11e142e20 <col:30> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x11e142e80 <line:13:13, col:34> 'int' contains-errors '!='
    | |   |-CXXDependentScopeMemberExpr 0x11e142d80 <col:13, col:26> '<dependent type>' contains-errors lvalue ->type
    | |   | `-RecoveryExpr 0x11e142d60 <col:13> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x11e142e60 <col:34> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x11e142f08 <col:55, line:15:5>
    |   `-ReturnStmt 0x11e142ef8 <line:14:9, col:16>
    |     `-RecoveryExpr 0x11e142ed8 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x11e1431d8 <line:18:5, line:19:16>
    | |-BinaryOperator 0x11e143170 <line:18:9, col:50> 'int' contains-errors '=='
    | | |-CallExpr 0x11e143128 <col:9, col:45> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x11e1430a0 <col:9> 'int ()' Function 0x11e142fe8 'wc_ecc_is_valid_idx' 'int ()'
    | | | `-CXXDependentScopeMemberExpr 0x11e1430e0 <col:29, col:42> '<dependent type>' contains-errors lvalue ->idx
    | | |   `-RecoveryExpr 0x11e1430c0 <col:29> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x11e143150 <col:50> 'int' 0
    | `-ReturnStmt 0x11e1431c8 <line:19:9, col:16>
    |   `-RecoveryExpr 0x11e1431a8 <col:16> '<dependent type>' contains-errors lvalue
    |-SwitchStmt 0x11e143278 <line:21:5, line:51:5>
    | |-ImplicitCastExpr 0x11e143260 <line:21:12, col:25> '<dependent type>' contains-errors <LValueToRValue>
    | | `-CXXDependentScopeMemberExpr 0x11e143218 <col:12, col:25> '<dependent type>' contains-errors lvalue ->state
    | |   `-RecoveryExpr 0x11e1431f8 <col:12> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x11e1437e8 <col:32, line:51:5>
    |   |-BinaryOperator 0x11e1433b8 <line:24:13, col:34> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x11e143318 <col:13, col:26> '<dependent type>' contains-errors lvalue ->state
    |   | | `-RecoveryExpr 0x11e1432f0 <col:13> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x11e1432d0 <col:13> 'int *' lvalue ParmVar 0x11e128928 'private_key' 'int *'
    |   | `-RecoveryExpr 0x11e143398 <col:34> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x11e1435b8 <line:26:13, col:75> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x11e1433d8 <col:13> 'int' lvalue Var 0x11e128c88 'err' 'int'
    |   | `-CallExpr 0x11e143578 <col:19, col:75> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x11e1434d8 <col:19> 'int ()' Function 0x11e143420 'wc_ecc_shared_secret_gen' 'int ()'
    |   |   |-RecoveryExpr 0x11e1434f8 <col:44> '<dependent type>' contains-errors lvalue
    |   |   |-RecoveryExpr 0x11e143518 <col:57> '<dependent type>' contains-errors lvalue
    |   |   |-RecoveryExpr 0x11e143538 <col:64> '<dependent type>' contains-errors lvalue
    |   |   `-RecoveryExpr 0x11e143558 <col:69> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x11e143670 <line:27:13, line:29:13>
    |   | |-BinaryOperator 0x11e143630 <line:27:17, col:23> 'int' '<'
    |   | | |-ImplicitCastExpr 0x11e143618 <col:17> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x11e1435d8 <col:17> 'int' lvalue Var 0x11e128c88 'err' 'int'
    |   | | `-IntegerLiteral 0x11e1435f8 <col:23> 'int' 0
    |   | `-CompoundStmt 0x11e143658 <col:26, line:29:13>
    |   |   `-BreakStmt 0x11e143650 <line:28:17>
    |   |-BinaryOperator 0x11e143778 <line:46:13, col:19> 'int' '='
    |   | |-DeclRefExpr 0x11e143738 <col:13> 'int' lvalue Var 0x11e128c88 'err' 'int'
    |   | `-IntegerLiteral 0x11e143758 <col:19> 'int' 0
    |   |-BreakStmt 0x11e143798 <line:47:13>
    |   `-DefaultStmt 0x11e1437c8 <line:49:9, col:16>
    |     `-NullStmt 0x11e1437c0 <col:16>
    |-IfStmt 0x11e143978 <line:54:5, line:57:5>
    | |-RecoveryExpr 0x11e143848 <line:54:9, col:16> '_Bool' contains-errors
    | `-CompoundStmt 0x11e143958 <col:30, line:57:5>
    |   |-UnaryOperator 0x11e1438f8 <line:55:9, col:27> '<dependent type>' contains-errors postfix '++' cannot overflow
    |   | `-CXXDependentScopeMemberExpr 0x11e1438b0 <col:9, col:22> '<dependent type>' contains-errors lvalue ->state
    |   |   `-RecoveryExpr 0x11e143888 <col:9> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x11e143868 <col:9> 'int *' lvalue ParmVar 0x11e128928 'private_key' 'int *'
    |   `-ReturnStmt 0x11e143948 <line:56:9, col:16>
    |     `-ImplicitCastExpr 0x11e143930 <col:16> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x11e143910 <col:16> 'int' lvalue Var 0x11e128c88 'err' 'int'
    `-ReturnStmt 0x11e143a60 <line:65:5, col:12>
      `-ImplicitCastExpr 0x11e143a48 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x11e143a28 <col:12> 'int' lvalue Var 0x11e128c88 'err' 'int'
