TranslationUnitDecl 0x136855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1368564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x136855bd0 '__int128'
|-TypedefDecl 0x136856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x136855bf0 'unsigned __int128'
|-TypedefDecl 0x13700be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13700bc00 'struct __NSConstantString_tag'
|   `-Record 0x136856580 '__NSConstantString_tag'
|-TypedefDecl 0x13700be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x136855d90 '__SVInt8_t'
|-TypedefDecl 0x13700bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x136855db0 '__SVInt16_t'
|-TypedefDecl 0x13700bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x136855dd0 '__SVInt32_t'
|-TypedefDecl 0x13700bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x136855df0 '__SVInt64_t'
|-TypedefDecl 0x13700c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x136855e10 '__SVUint8_t'
|-TypedefDecl 0x13700c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x136855e30 '__SVUint16_t'
|-TypedefDecl 0x13700c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x136855e50 '__SVUint32_t'
|-TypedefDecl 0x13700c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x136855e70 '__SVUint64_t'
|-TypedefDecl 0x13700c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x136855e90 '__SVFloat16_t'
|-TypedefDecl 0x13700c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x136855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13700c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x136855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13700c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x136855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13700c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x136855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13700c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x136855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13700c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x136855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13700c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x136855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13700c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x136855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13700c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x136855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13700c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x136855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13700c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x136855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13700c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x136856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13700c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x136856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13700c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x136856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13700c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x136856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13700c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x136856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13700c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1368560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13700c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1368560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13700c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1368560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13700c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x136856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13700ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x136856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13700cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x136856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13700cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x136856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13700cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x136856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13700d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1368561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13700d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1368561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13700d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1368561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13700d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x136856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13700d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x136856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13700d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x136856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13700d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x136856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13700d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x136856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13700d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1368562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13700d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1368562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13700d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1368562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13700d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x136856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13700d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x136856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13700d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x136856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13700d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x136856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13700da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x136856390 '__SVBool_t'
|-TypedefDecl 0x13700da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1368563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13700dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1368563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13700db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1368563f0 '__SVCount_t'
|-TypedefDecl 0x13700dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13700dbb0 'char *'
|   `-BuiltinType 0x1368556b0 'char'
|-TypedefDecl 0x13700dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13700dbb0 'char *'
|   `-BuiltinType 0x1368556b0 'char'
|-FunctionDecl 0x1370288f8 <dataset_diviso_filec/func1588_vuln.c:1:1, line:34:1> line:1:1 invalid do_bid_note 'int (struct magic_set *, unsigned char *, int, int, int, int, int, int, int *)'
| |-ParmVarDecl 0x13700e248 <col:13, col:31> col:31 used ms 'struct magic_set *'
| |-ParmVarDecl 0x13700e2f8 <col:35, col:50> col:50 used nbuf 'unsigned char *'
| |-ParmVarDecl 0x13700e390 <col:56, col:65> col:65 invalid type 'int'
| |-ParmVarDecl 0x137028418 <line:2:5, col:9> col:9 swap 'int'
| | `-UnusedAttr 0x137028480 <col:29> unused
| |-ParmVarDecl 0x1370284f0 <col:43, col:52> col:52 invalid namesz 'int'
| |-ParmVarDecl 0x137028570 <col:60, col:69> col:69 invalid descsz 'int'
| |-ParmVarDecl 0x1370285f0 <line:3:5, col:12> col:12 invalid noff 'int'
| |-ParmVarDecl 0x137028670 <col:18, col:25> col:25 invalid doff 'int'
| |-ParmVarDecl 0x137028728 <col:31, col:36> col:36 used flags 'int *'
| `-CompoundStmt 0x136922d68 <line:4:1, line:34:1>
|   |-IfStmt 0x136922d18 <line:5:2, line:32:2>
|   | |-BinaryOperator 0x13702b440 <line:5:6, line:6:61> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x13702b420 <line:5:6, line:6:14> 'int' contains-errors '&&'
|   | | | |-BinaryOperator 0x1370293b8 <line:5:6, col:59> 'int' contains-errors '&&'
|   | | | | |-BinaryOperator 0x137028a28 <col:6, col:16> 'int' contains-errors '=='
|   | | | | | |-RecoveryExpr 0x1370289e8 <col:6> '<dependent type>' contains-errors lvalue
|   | | | | | `-IntegerLiteral 0x137028a08 <col:16> 'int' 4
|   | | | | `-BinaryOperator 0x137029398 <col:21, col:59> 'int' contains-errors '=='
|   | | | |   |-CallExpr 0x137029320 <col:21, col:54> 'int' contains-errors
|   | | | |   | |-ImplicitCastExpr 0x137029308 <col:21> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | |   | | `-DeclRefExpr 0x137028c70 <col:21> 'int (const char *, const char *)' Function 0x137028a90 'strcmp' 'int (const char *, const char *)'
|   | | | |   | |-ImplicitCastExpr 0x137029350 <col:28, col:46> 'const char *' contains-errors <NoOp>
|   | | | |   | | `-CStyleCastExpr 0x1370292c8 <col:28, col:46> 'char *' contains-errors <Dependent>
|   | | | |   | |   `-UnaryOperator 0x1370292b0 <col:36, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | | |   | |     `-ArraySubscriptExpr 0x137029290 <col:37, col:46> '<dependent type>' contains-errors lvalue
|   | | | |   | |       |-ImplicitCastExpr 0x137029260 <col:37> 'unsigned char *' <LValueToRValue>
|   | | | |   | |       | `-DeclRefExpr 0x137028c90 <col:37> 'unsigned char *' lvalue ParmVar 0x13700e2f8 'nbuf' 'unsigned char *'
|   | | | |   | |       `-ImplicitCastExpr 0x137029278 <col:42> '<dependent type>' contains-errors <LValueToRValue>
|   | | | |   | |         `-RecoveryExpr 0x137028cb0 <col:42> '<dependent type>' contains-errors lvalue
|   | | | |   | `-ImplicitCastExpr 0x137029380 <col:49> 'const char *' <NoOp>
|   | | | |   |   `-ImplicitCastExpr 0x137029368 <col:49> 'char *' <ArrayToPointerDecay>
|   | | | |   |     `-StringLiteral 0x137028dc0 <col:49> 'char[4]' lvalue "STR"
|   | | | |   `-IntegerLiteral 0x137028ec0 <col:59> 'int' 0
|   | | | `-BinaryOperator 0x13702b400 <line:6:6, col:14> 'int' contains-errors '=='
|   | | |   |-RecoveryExpr 0x137028f20 <col:6> '<dependent type>' contains-errors lvalue
|   | | |   `-RecoveryExpr 0x1370293d8 <col:14> '<dependent type>' contains-errors lvalue
|   | | `-ParenExpr 0x137029078 <col:33, col:61> 'int' contains-errors
|   | |   `-BinaryOperator 0x137029058 <col:34, col:59> 'int' contains-errors '||'
|   | |     |-BinaryOperator 0x137028fd8 <col:34, col:44> 'int' contains-errors '>='
|   | |     | |-RecoveryExpr 0x137028f98 <col:34> '<dependent type>' contains-errors lvalue
|   | |     | `-IntegerLiteral 0x137028fb8 <col:44> 'int' 4
|   | |     `-BinaryOperator 0x137029038 <col:49, col:59> 'int' contains-errors '<='
|   | |       |-RecoveryExpr 0x137028ff8 <col:49> '<dependent type>' contains-errors lvalue
|   | |       `-IntegerLiteral 0x137029018 <col:59> 'int' 20
|   | `-CompoundStmt 0x136922cd8 <col:64, line:32:2>
|   |   |-DeclStmt 0x13702b4e0 <line:8:3, col:20>
|   |   | `-VarDecl 0x13702b478 <col:3, col:15> col:15 used btype 'const char *'
|   |   |-CompoundAssignOperator 0x13702b610 <line:10:3, col:13> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   | |-UnaryOperator 0x13702b5d8 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x13702b5c0 <col:4> 'int *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13702b4f8 <col:4> 'int *' lvalue ParmVar 0x137028728 'flags' 'int *'
|   |   | `-RecoveryExpr 0x13702b5f0 <col:13> '<dependent type>' contains-errors lvalue
|   |   |-SwitchStmt 0x13702b678 <line:11:3, line:24:3>
|   |   | |-ImplicitCastExpr 0x13702b660 <line:11:11> '<dependent type>' contains-errors <LValueToRValue>
|   |   | | `-RecoveryExpr 0x13702b640 <col:11> '<dependent type>' contains-errors lvalue
|   |   | `-CompoundStmt 0x13702b9f8 <col:19, line:24:3>
|   |   |   |-CaseStmt 0x13702b6c0 <line:12:3, line:13:15>
|   |   |   | |-IntegerLiteral 0x13702b6a0 <line:12:8> 'int' 8
|   |   |   | `-BinaryOperator 0x13702b758 <line:13:7, col:15> 'const char *' '='
|   |   |   |   |-DeclRefExpr 0x13702b6e8 <col:7> 'const char *' lvalue Var 0x13702b478 'btype' 'const char *'
|   |   |   |   `-ImplicitCastExpr 0x13702b740 <col:15> 'const char *' <NoOp>
|   |   |   |     `-ImplicitCastExpr 0x13702b728 <col:15> 'char *' <ArrayToPointerDecay>
|   |   |   |       `-StringLiteral 0x13702b708 <col:15> 'char[4]' lvalue "STR"
|   |   |   |-BreakStmt 0x13702b778 <line:14:7>
|   |   |   |-CaseStmt 0x13702b7a0 <line:15:3, line:16:15>
|   |   |   | |-IntegerLiteral 0x13702b780 <line:15:8> 'int' 16
|   |   |   | `-BinaryOperator 0x13702b838 <line:16:7, col:15> 'const char *' '='
|   |   |   |   |-DeclRefExpr 0x13702b7c8 <col:7> 'const char *' lvalue Var 0x13702b478 'btype' 'const char *'
|   |   |   |   `-ImplicitCastExpr 0x13702b820 <col:15> 'const char *' <NoOp>
|   |   |   |     `-ImplicitCastExpr 0x13702b808 <col:15> 'char *' <ArrayToPointerDecay>
|   |   |   |       `-StringLiteral 0x13702b7e8 <col:15> 'char[4]' lvalue "STR"
|   |   |   |-BreakStmt 0x13702b858 <line:17:7>
|   |   |   |-CaseStmt 0x13702b880 <line:18:3, line:19:15>
|   |   |   | |-IntegerLiteral 0x13702b860 <line:18:8> 'int' 20
|   |   |   | `-BinaryOperator 0x13702b918 <line:19:7, col:15> 'const char *' '='
|   |   |   |   |-DeclRefExpr 0x13702b8a8 <col:7> 'const char *' lvalue Var 0x13702b478 'btype' 'const char *'
|   |   |   |   `-ImplicitCastExpr 0x13702b900 <col:15> 'const char *' <NoOp>
|   |   |   |     `-ImplicitCastExpr 0x13702b8e8 <col:15> 'char *' <ArrayToPointerDecay>
|   |   |   |       `-StringLiteral 0x13702b8c8 <col:15> 'char[4]' lvalue "STR"
|   |   |   |-BreakStmt 0x13702b938 <line:20:7>
|   |   |   |-DefaultStmt 0x13702b9d0 <line:21:3, line:22:15>
|   |   |   | `-BinaryOperator 0x13702b9b0 <col:7, col:15> 'const char *' '='
|   |   |   |   |-DeclRefExpr 0x13702b940 <col:7> 'const char *' lvalue Var 0x13702b478 'btype' 'const char *'
|   |   |   |   `-ImplicitCastExpr 0x13702b998 <col:15> 'const char *' <NoOp>
|   |   |   |     `-ImplicitCastExpr 0x13702b980 <col:15> 'char *' <ArrayToPointerDecay>
|   |   |   |       `-StringLiteral 0x13702b960 <col:15> 'char[4]' lvalue "STR"
|   |   |   `-BreakStmt 0x13702b9f0 <line:23:7>
|   |   |-IfStmt 0x13702bd70 <line:25:3, line:26:11>
|   |   | |-BinaryOperator 0x13702bd20 <line:25:7, col:41> 'int' '=='
|   |   | | |-CallExpr 0x13702bc68 <col:7, col:35> 'int'
|   |   | | | |-ImplicitCastExpr 0x13702bc50 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |   | | | | `-DeclRefExpr 0x13702bba0 <col:7> 'int ()' Function 0x13702bae8 'file_printf' 'int ()'
|   |   | | | |-ImplicitCastExpr 0x13702bca0 <col:19> 'struct magic_set *' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x13702bbc0 <col:19> 'struct magic_set *' lvalue ParmVar 0x13700e248 'ms' 'struct magic_set *'
|   |   | | | |-ImplicitCastExpr 0x13702bcb8 <col:23> 'char *' <ArrayToPointerDecay>
|   |   | | | | `-StringLiteral 0x13702bbe0 <col:23> 'char[4]' lvalue "STR"
|   |   | | | `-ImplicitCastExpr 0x13702bcd0 <col:30> 'const char *' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x13702bc00 <col:30> 'const char *' lvalue Var 0x13702b478 'btype' 'const char *'
|   |   | | `-UnaryOperator 0x13702bd08 <col:40, col:41> 'int' prefix '-'
|   |   | |   `-IntegerLiteral 0x13702bce8 <col:41> 'int' 1
|   |   | `-ReturnStmt 0x13702bd60 <line:26:4, col:11>
|   |   |   `-IntegerLiteral 0x13702bd40 <col:11> 'int' 1
|   |   |-ForStmt 0x136922c70 <line:28:3, line:30:11>
|   |   | |-<<<NULL>>>
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x13702c2a0 <line:28:15, col:19> 'int' contains-errors '<'
|   |   | | |-RecoveryExpr 0x13702c280 <col:15> '<dependent type>' contains-errors lvalue
|   |   | | `-RecoveryExpr 0x13702c240 <col:19> '<dependent type>' contains-errors lvalue
|   |   | |-UnaryOperator 0x13702c310 <col:27, col:28> '<dependent type>' contains-errors postfix '++' cannot overflow
|   |   | | `-RecoveryExpr 0x13702c2f0 <col:27> '<dependent type>' contains-errors lvalue
|   |   | `-IfStmt 0x136922c50 <line:29:7, line:30:11>
|   |   |   |-RecoveryExpr 0x136922c00 <line:29:11, col:47> '_Bool' contains-errors
|   |   |   `-ReturnStmt 0x136922c40 <line:30:4, col:11>
|   |   |     `-IntegerLiteral 0x136922c20 <col:11> 'int' 1
|   |   `-ReturnStmt 0x136922cc8 <line:31:3, col:10>
|   |     `-IntegerLiteral 0x136922ca8 <col:10> 'int' 1
|   `-ReturnStmt 0x136922d58 <line:33:2, col:9>
|     `-IntegerLiteral 0x136922d38 <col:9> 'int' 0
|-FunctionDecl 0x137028a90 <line:5:21> col:21 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x137028b90 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x137028bf8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x137028b38 <<invalid sloc>> Implicit 887
`-FunctionDecl 0x13702be08 <line:27:9> col:9 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x13702bf08 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x13702bf70 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x13702bfd8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x13702beb0 <<invalid sloc>> Implicit 882
