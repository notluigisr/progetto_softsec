TranslationUnitDecl 0x146055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1460564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x146055bd0 '__int128'
|-TypedefDecl 0x146056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x146055bf0 'unsigned __int128'
|-TypedefDecl 0x146126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x146126000 'struct __NSConstantString_tag'
|   `-Record 0x146056580 '__NSConstantString_tag'
|-TypedefDecl 0x146126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x146055d90 '__SVInt8_t'
|-TypedefDecl 0x146126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x146055db0 '__SVInt16_t'
|-TypedefDecl 0x146126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x146055dd0 '__SVInt32_t'
|-TypedefDecl 0x1461263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x146055df0 '__SVInt64_t'
|-TypedefDecl 0x146126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x146055e10 '__SVUint8_t'
|-TypedefDecl 0x1461264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x146055e30 '__SVUint16_t'
|-TypedefDecl 0x146126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x146055e50 '__SVUint32_t'
|-TypedefDecl 0x146126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x146055e70 '__SVUint64_t'
|-TypedefDecl 0x1461265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x146055e90 '__SVFloat16_t'
|-TypedefDecl 0x146126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x146055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1461266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x146055ed0 '__SVFloat64_t'
|-TypedefDecl 0x146126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x146055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x146126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x146055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1461267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x146055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x146126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x146055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1461268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x146055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x146126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x146055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x146126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x146055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1461269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x146055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x146126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x146055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x146126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x146056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x146126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x146056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x146126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x146056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x146126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x146056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x146126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x146056090 '__clang_svint8x3_t'
|-TypedefDecl 0x146126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1460560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x146126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1460560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x146126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1460560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x146126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x146056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x146126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x146056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x146126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x146056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x146126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x146056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x146126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x146056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x146127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1460561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x146127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1460561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1461278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1460561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x146127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x146056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1461279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x146056230 '__clang_svint16x4_t'
|-TypedefDecl 0x146127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x146056250 '__clang_svint32x4_t'
|-TypedefDecl 0x146127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x146056270 '__clang_svint64x4_t'
|-TypedefDecl 0x146127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x146056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x146127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1460562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x146127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1460562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x146127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1460562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x146127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x146056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x146127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x146056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x146127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x146056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x146127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x146056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x146127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x146056390 '__SVBool_t'
|-TypedefDecl 0x146127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1460563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x146127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1460563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x146127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1460563f0 '__SVCount_t'
|-TypedefDecl 0x146127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x146127fb0 'char *'
|   `-BuiltinType 0x1460556b0 'char'
|-TypedefDecl 0x146128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x146127fb0 'char *'
|   `-BuiltinType 0x1460556b0 'char'
|-FunctionDecl 0x146128508 <dataset_diviso_filec/func9948_vuln.c:1:1, line:30:1> line:1:1 asn1_get_bit_der 'int (const unsigned char *, int, int *, unsigned char *, int, int *)'
| |-ParmVarDecl 0x146128108 <col:19, col:40> col:40 used der 'const unsigned char *'
| |-ParmVarDecl 0x146128188 <col:45, col:49> col:49 used der_len 'int'
| |-ParmVarDecl 0x146128238 <line:2:5, col:10> col:10 used ret_len 'int *'
| |-ParmVarDecl 0x1461282e8 <col:19, col:34> col:34 used str 'unsigned char *'
| |-ParmVarDecl 0x146128368 <col:39, col:43> col:43 used str_size 'int'
| |-ParmVarDecl 0x1461283e8 <line:3:5, col:10> col:10 used bit_len 'int *'
| `-CompoundStmt 0x1461425e8 <line:4:1, line:30:1>
|   |-DeclStmt 0x146128760 <line:5:3, col:28>
|   | |-VarDecl 0x146128640 <col:3, col:17> col:7 used len_len 'int' cinit
|   | | `-IntegerLiteral 0x1461286a8 <col:17> 'int' 0
|   | `-VarDecl 0x1461286e0 <col:3, col:20> col:20 used len_byte 'int'
|   |-IfStmt 0x146140a60 <line:7:3, line:8:12>
|   | |-BinaryOperator 0x1461287d0 <line:7:7, col:18> 'int' '<='
|   | | |-ImplicitCastExpr 0x1461287b8 <col:7> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x146128778 <col:7> 'int' lvalue ParmVar 0x146128188 'der_len' 'int'
|   | | `-IntegerLiteral 0x146128798 <col:18> 'int' 0
|   | `-ReturnStmt 0x146140a50 <line:8:5, col:12>
|   |   `-RecoveryExpr 0x146140a30 <col:12> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x146140d40 <line:9:3, col:61> 'int' '='
|   | |-DeclRefExpr 0x146140a80 <col:3> 'int' lvalue Var 0x1461286e0 'len_byte' 'int'
|   | `-BinaryOperator 0x146140d20 <col:14, col:61> 'int' '-'
|   |   |-CallExpr 0x146140c98 <col:14, col:57> 'int'
|   |   | |-ImplicitCastExpr 0x146140c80 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x146140bb0 <col:14> 'int ()' Function 0x146140af8 'asn1_get_length_der' 'int ()'
|   |   | |-ImplicitCastExpr 0x146140cd0 <col:35> 'const unsigned char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x146140bd0 <col:35> 'const unsigned char *' lvalue ParmVar 0x146128108 'der' 'const unsigned char *'
|   |   | |-ImplicitCastExpr 0x146140ce8 <col:40> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x146140bf0 <col:40> 'int' lvalue ParmVar 0x146128188 'der_len' 'int'
|   |   | `-UnaryOperator 0x146140c30 <col:49, col:50> 'int *' prefix '&' cannot overflow
|   |   |   `-DeclRefExpr 0x146140c10 <col:50> 'int' lvalue Var 0x146128640 'len_len' 'int'
|   |   `-IntegerLiteral 0x146140d00 <col:61> 'int' 1
|   |-IfStmt 0x146140e20 <line:10:3, line:11:12>
|   | |-BinaryOperator 0x146140db8 <line:10:7, col:18> 'int' '<'
|   | | |-ImplicitCastExpr 0x146140da0 <col:7> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x146140d60 <col:7> 'int' lvalue Var 0x1461286e0 'len_byte' 'int'
|   | | `-IntegerLiteral 0x146140d80 <col:18> 'int' 0
|   | `-ReturnStmt 0x146140e10 <line:11:5, col:12>
|   |   `-RecoveryExpr 0x146140df0 <col:12> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x146140f60 <line:13:3, col:35> 'int' '='
|   | |-UnaryOperator 0x146140e78 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x146140e60 <col:4> 'int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x146140e40 <col:4> 'int *' lvalue ParmVar 0x146128238 'ret_len' 'int *'
|   | `-BinaryOperator 0x146140f40 <col:14, col:35> 'int' '+'
|   |   |-BinaryOperator 0x146140f00 <col:14, col:25> 'int' '+'
|   |   | |-ImplicitCastExpr 0x146140ed0 <col:14> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x146140e90 <col:14> 'int' lvalue Var 0x1461286e0 'len_byte' 'int'
|   |   | `-ImplicitCastExpr 0x146140ee8 <col:25> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x146140eb0 <col:25> 'int' lvalue Var 0x146128640 'len_len' 'int'
|   |   `-IntegerLiteral 0x146140f20 <col:35> 'int' 1
|   |-BinaryOperator 0x146141128 <line:14:3, col:40> 'int' '='
|   | |-UnaryOperator 0x146140fb8 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x146140fa0 <col:4> 'int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x146140f80 <col:4> 'int *' lvalue ParmVar 0x1461283e8 'bit_len' 'int *'
|   | `-BinaryOperator 0x146141108 <col:14, col:40> 'int' '-'
|   |   |-BinaryOperator 0x146141028 <col:14, col:25> 'int' '*'
|   |   | |-ImplicitCastExpr 0x146141010 <col:14> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x146140fd0 <col:14> 'int' lvalue Var 0x1461286e0 'len_byte' 'int'
|   |   | `-IntegerLiteral 0x146140ff0 <col:25> 'int' 8
|   |   `-ImplicitCastExpr 0x1461410f0 <col:29, col:40> 'int' <IntegralCast>
|   |     `-ImplicitCastExpr 0x1461410d8 <col:29, col:40> 'unsigned char' <LValueToRValue>
|   |       `-ArraySubscriptExpr 0x1461410b8 <col:29, col:40> 'const unsigned char' lvalue
|   |         |-ImplicitCastExpr 0x146141088 <col:29> 'const unsigned char *' <LValueToRValue>
|   |         | `-DeclRefExpr 0x146141048 <col:29> 'const unsigned char *' lvalue ParmVar 0x146128108 'der' 'const unsigned char *'
|   |         `-ImplicitCastExpr 0x1461410a0 <col:33> 'int' <LValueToRValue>
|   |           `-DeclRefExpr 0x146141068 <col:33> 'int' lvalue Var 0x146128640 'len_len' 'int'
|   |-IfStmt 0x146141238 <line:16:3, line:17:12>
|   | |-BinaryOperator 0x1461411d0 <line:16:7, col:18> 'int' '<'
|   | | |-ImplicitCastExpr 0x1461411b8 <col:7, col:8> 'int' <LValueToRValue>
|   | | | `-UnaryOperator 0x146141180 <col:7, col:8> 'int' lvalue prefix '*' cannot overflow
|   | | |   `-ImplicitCastExpr 0x146141168 <col:8> 'int *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x146141148 <col:8> 'int *' lvalue ParmVar 0x1461283e8 'bit_len' 'int *'
|   | | `-IntegerLiteral 0x146141198 <col:18> 'int' 0
|   | `-ReturnStmt 0x146141228 <line:17:5, col:12>
|   |   `-RecoveryExpr 0x146141208 <col:12> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x146142570 <line:19:3, line:27:5> has_else
|   | |-BinaryOperator 0x1461412c8 <line:19:7, col:19> 'int' '>='
|   | | |-ImplicitCastExpr 0x146141298 <col:7> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x146141258 <col:7> 'int' lvalue ParmVar 0x146128368 'str_size' 'int'
|   | | `-ImplicitCastExpr 0x1461412b0 <col:19> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x146141278 <col:19> 'int' lvalue Var 0x1461286e0 'len_byte' 'int'
|   | |-CompoundStmt 0x1461424f8 <line:20:5, line:23:5>
|   | | `-IfStmt 0x1461424d8 <line:21:7, line:22:49>
|   | |   |-BinaryOperator 0x146141340 <line:21:11, col:22> 'int' '>'
|   | |   | |-ImplicitCastExpr 0x146141328 <col:11> 'int' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x1461412e8 <col:11> 'int' lvalue Var 0x1461286e0 'len_byte' 'int'
|   | |   | `-IntegerLiteral 0x146141308 <col:22> 'int' 0
|   | |   `-CallExpr 0x146142428 <line:22:9, col:49> 'void *'
|   | |     |-ImplicitCastExpr 0x146142410 <col:9> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
|   | |     | `-DeclRefExpr 0x146142280 <col:9> 'void *(void *, const void *, unsigned long)' Function 0x146141800 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | |     |-ImplicitCastExpr 0x146142478 <col:17> 'void *' <BitCast>
|   | |     | `-ImplicitCastExpr 0x146142460 <col:17> 'unsigned char *' <LValueToRValue>
|   | |     |   `-DeclRefExpr 0x1461422a0 <col:17> 'unsigned char *' lvalue ParmVar 0x1461282e8 'str' 'unsigned char *'
|   | |     |-ImplicitCastExpr 0x146142490 <col:22, col:38> 'const void *' <BitCast>
|   | |     | `-BinaryOperator 0x146142370 <col:22, col:38> 'const unsigned char *' '+'
|   | |     |   |-BinaryOperator 0x146142330 <col:22, col:28> 'const unsigned char *' '+'
|   | |     |   | |-ImplicitCastExpr 0x146142300 <col:22> 'const unsigned char *' <LValueToRValue>
|   | |     |   | | `-DeclRefExpr 0x1461422c0 <col:22> 'const unsigned char *' lvalue ParmVar 0x146128108 'der' 'const unsigned char *'
|   | |     |   | `-ImplicitCastExpr 0x146142318 <col:28> 'int' <LValueToRValue>
|   | |     |   |   `-DeclRefExpr 0x1461422e0 <col:28> 'int' lvalue Var 0x146128640 'len_len' 'int'
|   | |     |   `-IntegerLiteral 0x146142350 <col:38> 'int' 1
|   | |     `-ImplicitCastExpr 0x1461424c0 <col:41> 'unsigned long' <IntegralCast>
|   | |       `-ImplicitCastExpr 0x1461424a8 <col:41> 'int' <LValueToRValue>
|   | |         `-DeclRefExpr 0x146142390 <col:41> 'int' lvalue Var 0x1461286e0 'len_byte' 'int'
|   | `-CompoundStmt 0x146142558 <line:25:5, line:27:5>
|   |   `-ReturnStmt 0x146142548 <line:26:7, col:14>
|   |     `-RecoveryExpr 0x146142528 <col:14> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x1461425d8 <line:29:3, col:10>
|     `-RecoveryExpr 0x1461425b8 <col:10> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x146141800 <line:22:9> col:9 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x146141900 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x146141968 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x146142200 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x1461418a8 <<invalid sloc>> Implicit 882
