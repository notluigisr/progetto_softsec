TranslationUnitDecl 0x130855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1308564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x130855bd0 '__int128'
|-TypedefDecl 0x130856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x130855bf0 'unsigned __int128'
|-TypedefDecl 0x130926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x130926000 'struct __NSConstantString_tag'
|   `-Record 0x130856580 '__NSConstantString_tag'
|-TypedefDecl 0x130926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x130855d90 '__SVInt8_t'
|-TypedefDecl 0x130926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x130855db0 '__SVInt16_t'
|-TypedefDecl 0x130926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x130855dd0 '__SVInt32_t'
|-TypedefDecl 0x1309263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x130855df0 '__SVInt64_t'
|-TypedefDecl 0x130926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x130855e10 '__SVUint8_t'
|-TypedefDecl 0x1309264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x130855e30 '__SVUint16_t'
|-TypedefDecl 0x130926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x130855e50 '__SVUint32_t'
|-TypedefDecl 0x130926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x130855e70 '__SVUint64_t'
|-TypedefDecl 0x1309265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x130855e90 '__SVFloat16_t'
|-TypedefDecl 0x130926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x130855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1309266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x130855ed0 '__SVFloat64_t'
|-TypedefDecl 0x130926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x130855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x130926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x130855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1309267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x130855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x130926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x130855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1309268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x130855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x130926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x130855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x130926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x130855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1309269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x130855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x130926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x130855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x130926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x130856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x130926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x130856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x130926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x130856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x130926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x130856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x130926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x130856090 '__clang_svint8x3_t'
|-TypedefDecl 0x130926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1308560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x130926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1308560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x130926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1308560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x130926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x130856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x130926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x130856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x130926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x130856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x130926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x130856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x130926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x130856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x130927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1308561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x130927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1308561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1309278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1308561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x130927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x130856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1309279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x130856230 '__clang_svint16x4_t'
|-TypedefDecl 0x130927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x130856250 '__clang_svint32x4_t'
|-TypedefDecl 0x130927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x130856270 '__clang_svint64x4_t'
|-TypedefDecl 0x130927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x130856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x130927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1308562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x130927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1308562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x130927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1308562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x130927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x130856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x130927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x130856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x130927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x130856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x130927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x130856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x130927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x130856390 '__SVBool_t'
|-TypedefDecl 0x130927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1308563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x130927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1308563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x130927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1308563f0 '__SVCount_t'
|-TypedefDecl 0x130927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x130927fb0 'char *'
|   `-BuiltinType 0x1308556b0 'char'
|-TypedefDecl 0x130928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x130927fb0 'char *'
|   `-BuiltinType 0x1308556b0 'char'
|-FunctionDecl 0x130928238 <dataset_diviso_filec/func750_vuln.c:1:5, line:41:5> line:1:5 TEST 'int (int, int)'
| |-ParmVarDecl 0x130928158 <col:10> col:10 BSONValidate 'int'
| |-ParmVarDecl 0x1309280d8 <col:24> col:24 MuckingData1 'int'
| `-CompoundStmt 0x130943688 <col:38, line:41:5>
|   |-CompoundStmt 0x1309287e0 <line:5:9, line:17:9>
|   | `-ForStmt 0x130928728 <line:10:13, line:12:13>
|   |   |-DeclStmt 0x130928470 <line:10:19, col:26>
|   |   | `-VarDecl 0x1309283e8 <col:19, col:25> col:23 used i 'int' cinit
|   |   |   `-IntegerLiteral 0x130928450 <col:25> 'int' 0
|   |   |-<<<NULL>>>
|   |   |-BinaryOperator 0x1309284e0 <col:28, col:30> 'int' '<'
|   |   | |-ImplicitCastExpr 0x1309284c8 <col:28> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x130928488 <col:28> 'int' lvalue Var 0x1309283e8 'i' 'int'
|   |   | `-IntegerLiteral 0x1309284a8 <col:30> 'int' 100
|   |   |-UnaryOperator 0x130928520 <col:35, col:36> 'int' postfix '++'
|   |   | `-DeclRefExpr 0x130928500 <col:35> 'int' lvalue Var 0x1309283e8 'i' 'int'
|   |   `-CompoundStmt 0x130928718 <col:41, line:12:13>
|   |-DeclStmt 0x1309428a0 <line:19:9, col:25>
|   | `-VarDecl 0x130942818 <col:9, col:24> col:13 used numValid 'int' cinit
|   |   `-IntegerLiteral 0x130942880 <col:24> 'int' 0
|   |-DeclStmt 0x130942958 <line:20:9, col:28>
|   | `-VarDecl 0x1309428d0 <col:9, col:24> col:13 used numToRun 'int' cinit
|   |   `-IntegerLiteral 0x130942938 <col:24> 'int' 1000
|   |-DeclStmt 0x130942a28 <line:21:9, col:31>
|   | `-VarDecl 0x130942988 <col:9, col:30> col:19 used jsonSize 'long long' cinit
|   |   `-ImplicitCastExpr 0x130942a10 <col:30> 'long long' <IntegralCast>
|   |     `-IntegerLiteral 0x1309429f0 <col:30> 'int' 0
|   `-ForStmt 0x1309432d0 <line:23:9, line:36:9>
|     |-DeclStmt 0x130942ae0 <line:23:15, col:22>
|     | `-VarDecl 0x130942a58 <col:15, col:21> col:19 used i 'int' cinit
|     |   `-IntegerLiteral 0x130942ac0 <col:21> 'int' 4
|     |-<<<NULL>>>
|     |-BinaryOperator 0x130942ca0 <col:24, col:46> 'int' contains-errors '<'
|     | |-DeclRefExpr 0x130942af8 <col:24> 'int' lvalue Var 0x130942a58 'i' 'int'
|     | `-BinaryOperator 0x130942c80 <col:26, col:46> '<dependent type>' contains-errors '-'
|     |   |-CallExpr 0x130942c60 <col:26, col:44> '<dependent type>' contains-errors
|     |   | `-CXXDependentScopeMemberExpr 0x130942c18 <col:26, col:36> '<dependent type>' contains-errors lvalue .objsize
|     |   |   `-RecoveryExpr 0x130942bf8 <col:26> '<dependent type>' contains-errors lvalue
|     |   `-IntegerLiteral 0x130942b98 <col:46> 'int' 1
|     |-UnaryOperator 0x130942ce0 <col:49, col:50> 'int' postfix '++'
|     | `-DeclRefExpr 0x130942cc0 <col:49> 'int' lvalue Var 0x130942a58 'i' 'int'
|     `-CompoundStmt 0x1309432a0 <col:55, line:36:9>
|       |-DeclStmt 0x130942d90 <line:26:13, col:59>
|       | `-VarDecl 0x130942d10 <col:13, col:19> col:19 used data 'char *'
|       |-BinaryOperator 0x130942e70 <line:28:13, col:25> 'char' '='
|       | |-ArraySubscriptExpr 0x130942e18 <col:13, col:21> 'char' lvalue
|       | | |-ImplicitCastExpr 0x130942de8 <col:13> 'char *' <LValueToRValue>
|       | | | `-DeclRefExpr 0x130942da8 <col:13> 'char *' lvalue Var 0x130942d10 'data' 'char *'
|       | | `-ImplicitCastExpr 0x130942e00 <col:19> 'int' <LValueToRValue>
|       | |   `-DeclRefExpr 0x130942dc8 <col:19> 'int' lvalue Var 0x130942a58 'i' 'int'
|       | `-ImplicitCastExpr 0x130942e58 <col:25> 'char' <IntegralCast>
|       |   `-IntegerLiteral 0x130942e38 <col:25> 'int' 200
|       |-UnaryOperator 0x130942eb0 <line:30:13, col:21> 'int' postfix '++'
|       | `-DeclRefExpr 0x130942e90 <col:13> 'int' lvalue Var 0x1309428d0 'numToRun' 'int'
|       `-IfStmt 0x130943280 <line:31:13, line:34:13>
|         |-CallExpr 0x130942fb0 <line:31:18, col:29> '<dependent type>' contains-errors
|         | `-CXXDependentScopeMemberExpr 0x130942f68 <col:18, col:23> '<dependent type>' contains-errors lvalue .valid
|         |   `-RecoveryExpr 0x130942f48 <col:18> '<dependent type>' contains-errors lvalue
|         `-CompoundStmt 0x130943260 <col:33, line:34:13>
|           |-UnaryOperator 0x130942ff0 <line:32:17, col:25> 'int' postfix '++'
|           | `-DeclRefExpr 0x130942fd0 <col:17> 'int' lvalue Var 0x130942818 'numValid' 'int'
|           `-CompoundAssignOperator 0x130943230 <line:33:17, col:52> 'long long' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|             |-DeclRefExpr 0x130943008 <col:17> 'long long' lvalue Var 0x130942988 'jsonSize' 'long long'
|             `-CallExpr 0x130943210 <col:29, col:52> '<dependent type>' contains-errors
|               `-CXXDependentScopeMemberExpr 0x1309431c8 <col:29, col:47> '<dependent type>' contains-errors lvalue .size
|                 `-CallExpr 0x1309431a8 <col:29, col:45> '<dependent type>' contains-errors
|                   `-CXXDependentScopeMemberExpr 0x130943160 <col:29, col:34> '<dependent type>' contains-errors lvalue .jsonString
|                     `-RecoveryExpr 0x130943140 <col:29> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x130943348 <line:39:9> col:9 implicit used log 'double (double)' extern
  |-ParmVarDecl 0x130943448 <<invalid sloc>> <invalid sloc> 'double'
  |-BuiltinAttr 0x1309433f0 <<invalid sloc>> Implicit 1106
  |-ConstAttr 0x1309434b8 <col:9> Implicit
  `-NoThrowAttr 0x1309434e0 <col:9> Implicit
