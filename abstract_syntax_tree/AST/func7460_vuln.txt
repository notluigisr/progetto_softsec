TranslationUnitDecl 0x14d82a608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14d82b4b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14d82abd0 '__int128'
|-TypedefDecl 0x14d82b528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14d82abf0 'unsigned __int128'
|-TypedefDecl 0x14e8cd230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14e8cd000 'struct __NSConstantString_tag'
|   `-Record 0x14d82b580 '__NSConstantString_tag'
|-TypedefDecl 0x14e8cd298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14d82ad90 '__SVInt8_t'
|-TypedefDecl 0x14e8cd300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14d82adb0 '__SVInt16_t'
|-TypedefDecl 0x14e8cd368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14d82add0 '__SVInt32_t'
|-TypedefDecl 0x14e8cd3d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14d82adf0 '__SVInt64_t'
|-TypedefDecl 0x14e8cd438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14d82ae10 '__SVUint8_t'
|-TypedefDecl 0x14e8cd4a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14d82ae30 '__SVUint16_t'
|-TypedefDecl 0x14e8cd508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14d82ae50 '__SVUint32_t'
|-TypedefDecl 0x14e8cd570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14d82ae70 '__SVUint64_t'
|-TypedefDecl 0x14e8cd5d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14d82ae90 '__SVFloat16_t'
|-TypedefDecl 0x14e8cd640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14d82aeb0 '__SVFloat32_t'
|-TypedefDecl 0x14e8cd6a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14d82aed0 '__SVFloat64_t'
|-TypedefDecl 0x14e8cd710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14d82aef0 '__SVBfloat16_t'
|-TypedefDecl 0x14e8cd778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14d82af10 '__clang_svint8x2_t'
|-TypedefDecl 0x14e8cd7e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14d82af30 '__clang_svint16x2_t'
|-TypedefDecl 0x14e8cd848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14d82af50 '__clang_svint32x2_t'
|-TypedefDecl 0x14e8cd8b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14d82af70 '__clang_svint64x2_t'
|-TypedefDecl 0x14e8cd918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14d82af90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14e8cd980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14d82afb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14e8cd9e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14d82afd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14e8cda50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14d82aff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14e8cdab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14d82b010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14e8cdb20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14d82b030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14e8cdb88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14d82b050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14e8cdbf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14d82b070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14e8cdc58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14d82b090 '__clang_svint8x3_t'
|-TypedefDecl 0x14e8cdcc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14d82b0b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14e8cdd28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14d82b0d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14e8cdd90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14d82b0f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14e8cddf8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14d82b110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14e8cde60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14d82b130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14e8cdec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14d82b150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14e8cdf30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14d82b170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14e8cdf98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14d82b190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14e8ce800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14d82b1b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14e8ce868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14d82b1d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14e8ce8d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14d82b1f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14e8ce938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14d82b210 '__clang_svint8x4_t'
|-TypedefDecl 0x14e8ce9a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14d82b230 '__clang_svint16x4_t'
|-TypedefDecl 0x14e8cea08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14d82b250 '__clang_svint32x4_t'
|-TypedefDecl 0x14e8cea70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14d82b270 '__clang_svint64x4_t'
|-TypedefDecl 0x14e8cead8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14d82b290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14e8ceb40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14d82b2b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14e8ceba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14d82b2d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14e8cec10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14d82b2f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14e8cec78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14d82b310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14e8cece0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14d82b330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14e8ced48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14d82b350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14e8cedb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14d82b370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14e8cee18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14d82b390 '__SVBool_t'
|-TypedefDecl 0x14e8cee80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14d82b3b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14e8ceee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14d82b3d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14e8cef50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14d82b3f0 '__SVCount_t'
|-TypedefDecl 0x14e8ceff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14e8cefb0 'char *'
|   `-BuiltinType 0x14d82a6b0 'char'
|-TypedefDecl 0x14e8cf068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14e8cefb0 'char *'
|   `-BuiltinType 0x14d82a6b0 'char'
`-FunctionDecl 0x14e8cf288 <dataset_diviso_filec/func7460_vuln.c:1:1, line:51:1> line:1:12 invalid filter_frame 'int (int *, int *)' static
  |-ParmVarDecl 0x14e8cf128 <col:25, col:39> col:39 referenced invalid inlink 'int *'
  |-ParmVarDecl 0x14e8cf1a8 <col:47, col:56> col:56 invalid in 'int *'
  `-CompoundStmt 0x14e8eab90 <line:2:1, line:51:1>
    |-DeclStmt 0x14e8cf7d0 <line:5:5, col:73>
    | `-VarDecl 0x14e8cf560 <col:5, col:31> col:31 invalid desc 'const int *'
    |-DeclStmt 0x14e8e88e8 <line:7:5, col:36>
    | `-VarDecl 0x14e8e8818 <col:5, col:23> col:9 used hsub0 'int' cinit
    |   `-CXXDependentScopeMemberExpr 0x14e8e88a0 <col:17, col:23> '<dependent type>' contains-errors lvalue ->log2_chroma_w
    |     `-RecoveryExpr 0x14e8e8880 <col:17> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x14e8e89e8 <line:8:5, col:36>
    | `-VarDecl 0x14e8e8918 <col:5, col:23> col:9 used vsub0 'int' cinit
    |   `-CXXDependentScopeMemberExpr 0x14e8e89a0 <col:17, col:23> '<dependent type>' contains-errors lvalue ->log2_chroma_h
    |     `-RecoveryExpr 0x14e8e8980 <col:17> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x14e8e8aa0 <line:9:5, col:19>
    | `-VarDecl 0x14e8e8a18 <col:5, col:18> col:9 used direct 'int' cinit
    |   `-IntegerLiteral 0x14e8e8a80 <col:18> 'int' 0
    |-DeclStmt 0x14e8e8b38 <line:10:5, col:14>
    | `-VarDecl 0x14e8e8ad0 <col:5, col:9> col:9 used plane 'int'
    |-IfStmt 0x14e8e93c8 <line:13:5, line:24:5> has_else
    | |-CallExpr 0x14e8e8c70 <line:13:9, col:32> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x14e8e8c30 <col:9> 'int ()' Function 0x14e8e8b78 'av_frame_is_writable' 'int ()'
    | | `-RecoveryExpr 0x14e8e8c50 <col:30> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x14e8e8d18 <col:35, line:16:5>
    | | `-BinaryOperator 0x14e8e8cd8 <line:14:9, col:18> 'int' '='
    | |   |-DeclRefExpr 0x14e8e8c98 <col:9> 'int' lvalue Var 0x14e8e8a18 'direct' 'int'
    | |   `-IntegerLiteral 0x14e8e8cb8 <col:18> 'int' 1
    | `-CompoundStmt 0x14e8e93b0 <line:16:12, line:24:5>
    |   `-IfStmt 0x14e8e9270 <line:18:9, line:21:9>
    |     |-UnaryOperator 0x14e8e8fe0 <line:18:13, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow
    |     | `-ImplicitCastExpr 0x14e8e8fc8 <col:14> '<dependent type>' contains-errors <LValueToRValue>
    |     |   `-RecoveryExpr 0x14e8e8fa8 <col:14> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x14e8e9258 <col:19, line:21:9>
    |       `-CallExpr 0x14e8e9130 <line:19:13, col:30> '<dependent type>' contains-errors
    |         |-DeclRefExpr 0x14e8e90d8 <col:13> 'int ()' Function 0x14e8e9020 'av_frame_free' 'int ()'
    |         `-UnaryOperator 0x14e8e9118 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
    |           `-RecoveryExpr 0x14e8e90f8 <col:28> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x14e8ea968 <line:31:5, line:45:5>
    | |-BinaryOperator 0x14e8e94e0 <line:31:10, col:18> 'int' '='
    | | |-DeclRefExpr 0x14e8e94a0 <col:10> 'int' lvalue Var 0x14e8e8ad0 'plane' 'int'
    | | `-IntegerLiteral 0x14e8e94c0 <col:18> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x14e8e9650 <col:21, col:48> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x14e8e9558 <col:21, col:29> 'int' '<'
    | | | |-ImplicitCastExpr 0x14e8e9540 <col:21> 'int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x14e8e9500 <col:21> 'int' lvalue Var 0x14e8e8ad0 'plane' 'int'
    | | | `-IntegerLiteral 0x14e8e9520 <col:29> 'int' 4
    | | `-ArraySubscriptExpr 0x14e8e9630 <col:34, col:48> '<dependent type>' contains-errors lvalue
    | |   |-ImplicitCastExpr 0x14e8e9600 <col:34, col:38> '<dependent type>' contains-errors <LValueToRValue>
    | |   | `-CXXDependentScopeMemberExpr 0x14e8e9598 <col:34, col:38> '<dependent type>' contains-errors lvalue ->data
    | |   |   `-RecoveryExpr 0x14e8e9578 <col:34> '<dependent type>' contains-errors lvalue
    | |   `-ImplicitCastExpr 0x14e8e9618 <col:43> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x14e8e95e0 <col:43> 'int' lvalue Var 0x14e8e8ad0 'plane' 'int'
    | |-UnaryOperator 0x14e8e9690 <col:51, col:56> 'int' postfix '++'
    | | `-DeclRefExpr 0x14e8e9670 <col:51> 'int' lvalue Var 0x14e8e8ad0 'plane' 'int'
    | `-CompoundStmt 0x14e8ea948 <col:60, line:45:5>
    |   |-DeclStmt 0x14e8e9cc8 <line:32:9, col:56>
    |   | `-VarDecl 0x14e8e96c0 <col:9, col:55> col:13 used hsub 'int' cinit
    |   |   `-ConditionalOperator 0x14e8e9c98 <col:20, col:55> 'int' contains-errors
    |   |     |-BinaryOperator 0x14e8e9c20 <col:20, col:43> 'int' '||'
    |   |     | |-BinaryOperator 0x14e8e9780 <col:20, col:29> 'int' '=='
    |   |     | | |-ImplicitCastExpr 0x14e8e9768 <col:20> 'int' <LValueToRValue>
    |   |     | | | `-DeclRefExpr 0x14e8e9728 <col:20> 'int' lvalue Var 0x14e8e8ad0 'plane' 'int'
    |   |     | | `-IntegerLiteral 0x14e8e9748 <col:29> 'int' 1
    |   |     | `-BinaryOperator 0x14e8e9c00 <col:34, col:43> 'int' '=='
    |   |     |   |-ImplicitCastExpr 0x14e8e97e0 <col:34> 'int' <LValueToRValue>
    |   |     |   | `-DeclRefExpr 0x14e8e97a0 <col:34> 'int' lvalue Var 0x14e8e8ad0 'plane' 'int'
    |   |     |   `-IntegerLiteral 0x14e8e97c0 <col:43> 'int' 2
    |   |     |-ImplicitCastExpr 0x14e8e9c80 <col:47> 'int' contains-errors <LValueToRValue>
    |   |     | `-DeclRefExpr 0x14e8e9c40 <col:47> 'int' contains-errors lvalue Var 0x14e8e8818 'hsub0' 'int'
    |   |     `-IntegerLiteral 0x14e8e9c60 <col:55> 'int' 0
    |   `-DeclStmt 0x14e8e9ef8 <line:33:9, col:56>
    |     `-VarDecl 0x14e8e9cf8 <col:9, col:55> col:13 used vsub 'int' cinit
    |       `-ConditionalOperator 0x14e8e9ec8 <col:20, col:55> 'int' contains-errors
    |         |-BinaryOperator 0x14e8e9e50 <col:20, col:43> 'int' '||'
    |         | |-BinaryOperator 0x14e8e9db8 <col:20, col:29> 'int' '=='
    |         | | |-ImplicitCastExpr 0x14e8e9da0 <col:20> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x14e8e9d60 <col:20> 'int' lvalue Var 0x14e8e8ad0 'plane' 'int'
    |         | | `-IntegerLiteral 0x14e8e9d80 <col:29> 'int' 1
    |         | `-BinaryOperator 0x14e8e9e30 <col:34, col:43> 'int' '=='
    |         |   |-ImplicitCastExpr 0x14e8e9e18 <col:34> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x14e8e9dd8 <col:34> 'int' lvalue Var 0x14e8e8ad0 'plane' 'int'
    |         |   `-IntegerLiteral 0x14e8e9df8 <col:43> 'int' 2
    |         |-ImplicitCastExpr 0x14e8e9eb0 <col:47> 'int' contains-errors <LValueToRValue>
    |         | `-DeclRefExpr 0x14e8e9e70 <col:47> 'int' contains-errors lvalue Var 0x14e8e8918 'vsub0' 'int'
    |         `-IntegerLiteral 0x14e8e9e90 <col:55> 'int' 0
    `-IfStmt 0x14e8eaa70 <line:47:5, line:48:26>
      |-UnaryOperator 0x14e8ea9d8 <line:47:9, col:10> 'int' prefix '!' cannot overflow
      | `-ImplicitCastExpr 0x14e8ea9c0 <col:10> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x14e8ea9a0 <col:10> 'int' lvalue Var 0x14e8e8a18 'direct' 'int'
      `-CallExpr 0x14e8eaa48 <line:48:9, col:26> '<dependent type>' contains-errors
        |-DeclRefExpr 0x14e8ea9f0 <col:9> 'int ()' Function 0x14e8e9020 'av_frame_free' 'int ()'
        `-UnaryOperator 0x14e8eaa30 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
          `-RecoveryExpr 0x14e8eaa10 <col:24> '<dependent type>' contains-errors lvalue
