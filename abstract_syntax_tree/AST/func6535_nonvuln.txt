TranslationUnitDecl 0x11e055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11e0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11e055bd0 '__int128'
|-TypedefDecl 0x11e056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11e055bf0 'unsigned __int128'
|-TypedefDecl 0x11e80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x11e80bc00 'struct __NSConstantString_tag'
|   `-Record 0x11e056580 '__NSConstantString_tag'
|-TypedefDecl 0x11e80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11e055d90 '__SVInt8_t'
|-TypedefDecl 0x11e80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11e055db0 '__SVInt16_t'
|-TypedefDecl 0x11e80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11e055dd0 '__SVInt32_t'
|-TypedefDecl 0x11e80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11e055df0 '__SVInt64_t'
|-TypedefDecl 0x11e80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11e055e10 '__SVUint8_t'
|-TypedefDecl 0x11e80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11e055e30 '__SVUint16_t'
|-TypedefDecl 0x11e80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11e055e50 '__SVUint32_t'
|-TypedefDecl 0x11e80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11e055e70 '__SVUint64_t'
|-TypedefDecl 0x11e80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11e055e90 '__SVFloat16_t'
|-TypedefDecl 0x11e80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11e055eb0 '__SVFloat32_t'
|-TypedefDecl 0x11e80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11e055ed0 '__SVFloat64_t'
|-TypedefDecl 0x11e80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11e055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x11e80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11e055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x11e80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11e055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x11e80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11e055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x11e80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11e055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x11e80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11e055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x11e80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11e055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x11e80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11e055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x11e80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11e055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x11e80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11e056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x11e80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11e056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x11e80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11e056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x11e80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11e056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x11e80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11e056090 '__clang_svint8x3_t'
|-TypedefDecl 0x11e80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11e0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x11e80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11e0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x11e80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11e0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x11e80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11e056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x11e80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11e056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x11e80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11e056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x11e80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11e056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x11e80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11e056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x11e80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11e0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x11e80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11e0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x11e80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11e0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x11e80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11e056210 '__clang_svint8x4_t'
|-TypedefDecl 0x11e80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11e056230 '__clang_svint16x4_t'
|-TypedefDecl 0x11e80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11e056250 '__clang_svint32x4_t'
|-TypedefDecl 0x11e80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11e056270 '__clang_svint64x4_t'
|-TypedefDecl 0x11e80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11e056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x11e80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11e0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x11e80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11e0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x11e80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11e0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x11e80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11e056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x11e80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11e056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x11e80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11e056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x11e80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11e056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x11e80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11e056390 '__SVBool_t'
|-TypedefDecl 0x11e80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11e0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x11e80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11e0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x11e80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11e0563f0 '__SVCount_t'
|-TypedefDecl 0x11e80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x11e80dbb0 'char *'
|   `-BuiltinType 0x11e0556b0 'char'
|-TypedefDecl 0x11e80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x11e80dbb0 'char *'
|   `-BuiltinType 0x11e0556b0 'char'
`-FunctionDecl 0x11e827438 <dataset_diviso_filec/func6535_nonvuln.c:1:1, line:19:1> line:1:9 invalid cli_bcapi_jsnorm_process 'int (struct cli_bc_ctx *, int)'
  |-ParmVarDecl 0x11e80e268 <col:34, col:53> col:53 used ctx 'struct cli_bc_ctx *'
  |-ParmVarDecl 0x11e80e2e8 <col:58, col:66> col:66 invalid id 'int'
  `-CompoundStmt 0x11e82a290 <line:2:1, line:19:1>
    |-DeclStmt 0x11e827570 <line:3:5, col:19>
    | `-VarDecl 0x11e827508 <col:5, col:14> col:14 used avail 'unsigned int'
    |-DeclStmt 0x11e827640 <line:4:5, col:22>
    | `-VarDecl 0x11e8275d8 <col:5, col:20> col:20 used in 'unsigned char *'
    |-DeclStmt 0x11e827ac8 <line:6:5, col:46>
    | |-RecordDecl 0x11e8276f0 <col:5, col:12> col:12 struct bc_jsnorm
    | `-VarDecl 0x11e827858 <col:5, col:45> col:23 used b 'struct bc_jsnorm *' cinit
    |   `-CallExpr 0x11e827a80 <col:27, col:45> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x11e827a20 <col:27> 'int ()' Function 0x11e827968 'get_jsnorm' 'int ()'
    |     |-DeclRefExpr 0x11e827a40 <col:38> 'struct cli_bc_ctx *' lvalue ParmVar 0x11e80e268 'ctx' 'struct cli_bc_ctx *'
    |     `-RecoveryExpr 0x11e827a60 <col:43> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x11e827d00 <line:7:5, line:8:10>
    | |-BinaryOperator 0x11e827c98 <line:7:9, col:36> 'int' contains-errors '||'
    | | |-BinaryOperator 0x11e827be8 <col:9, col:27> 'int' contains-errors '||'
    | | | |-UnaryOperator 0x11e827b18 <col:9, col:10> 'int' contains-errors prefix '!' cannot overflow
    | | | | `-ImplicitCastExpr 0x11e827b00 <col:10> 'struct bc_jsnorm *' contains-errors <LValueToRValue>
    | | | |   `-DeclRefExpr 0x11e827ae0 <col:10> 'struct bc_jsnorm *' contains-errors lvalue Var 0x11e827858 'b' 'struct bc_jsnorm *'
    | | | `-BinaryOperator 0x11e827bc8 <col:15, col:27> 'int' contains-errors '=='
    | | |   |-RecoveryExpr 0x11e827b68 <col:15, col:18> '<dependent type>' contains-errors lvalue
    | | |   | `-DeclRefExpr 0x11e827b30 <col:15> 'struct bc_jsnorm *' contains-errors lvalue Var 0x11e827858 'b' 'struct bc_jsnorm *'
    | | |   `-UnaryOperator 0x11e827bb0 <col:26, col:27> 'int' prefix '-'
    | | |     `-IntegerLiteral 0x11e827b90 <col:27> 'int' 1
    | | `-UnaryOperator 0x11e827c80 <col:32, col:36> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x11e827c68 <col:33, col:36> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x11e827c40 <col:33, col:36> '<dependent type>' contains-errors lvalue
    | |       `-DeclRefExpr 0x11e827c08 <col:33> 'struct bc_jsnorm *' contains-errors lvalue Var 0x11e827858 'b' 'struct bc_jsnorm *'
    | `-ReturnStmt 0x11e827cf0 <line:8:2, col:10>
    |   `-UnaryOperator 0x11e827cd8 <col:9, col:10> 'int' prefix '-'
    |     `-IntegerLiteral 0x11e827cb8 <col:10> 'int' 1
    |-BinaryOperator 0x11e827ef0 <line:10:5, col:58> 'unsigned int' contains-errors '='
    | |-DeclRefExpr 0x11e827d20 <col:5> 'unsigned int' lvalue Var 0x11e827508 'avail' 'unsigned int'
    | `-CallExpr 0x11e827ec0 <col:13, col:58> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11e827e20 <col:13> 'int ()' Function 0x11e827d68 'cli_bcapi_buffer_pipe_read_avail' 'int ()'
    |   |-DeclRefExpr 0x11e827e40 <col:46> 'struct cli_bc_ctx *' lvalue ParmVar 0x11e80e268 'ctx' 'struct cli_bc_ctx *'
    |   `-RecoveryExpr 0x11e827e98 <col:51, col:54> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x11e827e60 <col:51> 'struct bc_jsnorm *' contains-errors lvalue Var 0x11e827858 'b' 'struct bc_jsnorm *'
    |-BinaryOperator 0x11e828108 <line:11:5, col:60> 'unsigned char *' contains-errors '='
    | |-DeclRefExpr 0x11e827f10 <col:5> 'unsigned char *' lvalue Var 0x11e8275d8 'in' 'unsigned char *'
    | `-CallExpr 0x11e8280d0 <col:10, col:60> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11e828010 <col:10> 'int ()' Function 0x11e827f58 'cli_bcapi_buffer_pipe_read_get' 'int ()'
    |   |-DeclRefExpr 0x11e828030 <col:41> 'struct cli_bc_ctx *' lvalue ParmVar 0x11e80e268 'ctx' 'struct cli_bc_ctx *'
    |   |-RecoveryExpr 0x11e828088 <col:46, col:49> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x11e828050 <col:46> 'struct bc_jsnorm *' contains-errors lvalue Var 0x11e827858 'b' 'struct bc_jsnorm *'
    |   `-DeclRefExpr 0x11e8280b0 <col:55> 'unsigned int' lvalue Var 0x11e827508 'avail' 'unsigned int'
    |-IfStmt 0x11e828230 <line:12:5, line:13:10>
    | |-BinaryOperator 0x11e8281c8 <line:12:9, col:20> 'int' '||'
    | | |-UnaryOperator 0x11e828160 <col:9, col:10> 'int' prefix '!' cannot overflow
    | | | `-ImplicitCastExpr 0x11e828148 <col:10> 'unsigned int' <LValueToRValue>
    | | |   `-DeclRefExpr 0x11e828128 <col:10> 'unsigned int' lvalue Var 0x11e827508 'avail' 'unsigned int'
    | | `-UnaryOperator 0x11e8281b0 <col:19, col:20> 'int' prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x11e828198 <col:20> 'unsigned char *' <LValueToRValue>
    | |     `-DeclRefExpr 0x11e828178 <col:20> 'unsigned char *' lvalue Var 0x11e8275d8 'in' 'unsigned char *'
    | `-ReturnStmt 0x11e828220 <line:13:2, col:10>
    |   `-UnaryOperator 0x11e828208 <col:9, col:10> 'int' prefix '-'
    |     `-IntegerLiteral 0x11e8281e8 <col:10> 'int' 1
    |-IfStmt 0x11e829e38 <line:14:5, line:15:10>
    | |-BinaryOperator 0x11e829dd0 <line:14:9, col:78> 'int' contains-errors '&&'
    | | |-DeclRefExpr 0x11e829d48 <col:9> 'struct cli_bc_ctx *' lvalue ParmVar 0x11e80e268 'ctx' 'struct cli_bc_ctx *'
    | | `-CallExpr 0x11e829d88 <col:17, col:78> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x11e828348 <col:17> 'int ()' Function 0x11e828290 'cli_checklimits' 'int ()'
    | |   |-StringLiteral 0x11e8283b0 <col:33> 'char[4]' lvalue "STR"
    | |   |-DeclRefExpr 0x11e829d68 <col:40> 'struct cli_bc_ctx *' lvalue ParmVar 0x11e80e268 'ctx' 'struct cli_bc_ctx *'
    | |   |-BinaryOperator 0x11e829c80 <col:46, col:67> '<dependent type>' contains-errors '+'
    | |   | |-RecoveryExpr 0x11e829c38 <col:46, col:51> '<dependent type>' contains-errors lvalue
    | |   | | `-DeclRefExpr 0x11e829c00 <col:46> 'struct cli_bc_ctx *' lvalue ParmVar 0x11e80e268 'ctx' 'struct cli_bc_ctx *'
    | |   | `-DeclRefExpr 0x11e829c60 <col:67> 'unsigned int' lvalue Var 0x11e827508 'avail' 'unsigned int'
    | |   |-IntegerLiteral 0x11e829ca0 <col:74> 'int' 0
    | |   `-IntegerLiteral 0x11e829cc0 <col:77> 'int' 0
    | `-ReturnStmt 0x11e829e28 <line:15:2, col:10>
    |   `-UnaryOperator 0x11e829e10 <col:9, col:10> 'int' prefix '-'
    |     `-IntegerLiteral 0x11e829df0 <col:10> 'int' 1
    |-CallExpr 0x11e829ff8 <line:16:5, col:59> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11e829f38 <col:5> 'int ()' Function 0x11e829e80 'cli_bcapi_buffer_pipe_read_stopped' 'int ()'
    | |-DeclRefExpr 0x11e829f58 <col:40> 'struct cli_bc_ctx *' lvalue ParmVar 0x11e80e268 'ctx' 'struct cli_bc_ctx *'
    | |-RecoveryExpr 0x11e829fb0 <col:45, col:48> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x11e829f78 <col:45> 'struct bc_jsnorm *' contains-errors lvalue Var 0x11e827858 'b' 'struct bc_jsnorm *'
    | `-DeclRefExpr 0x11e829fd8 <col:54> 'unsigned int' lvalue Var 0x11e827508 'avail' 'unsigned int'
    |-CallExpr 0x11e82a228 <line:17:5, col:53> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11e82a110 <col:5> 'int ()' Function 0x11e82a058 'cli_js_process_buffer' 'int ()'
    | |-RecoveryExpr 0x11e82a168 <col:27, col:30> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x11e82a130 <col:27> 'struct bc_jsnorm *' contains-errors lvalue Var 0x11e827858 'b' 'struct bc_jsnorm *'
    | |-CStyleCastExpr 0x11e82a1e0 <col:37, col:44> 'char *' <BitCast>
    | | `-ImplicitCastExpr 0x11e82a1c8 <col:44> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
    | |   `-DeclRefExpr 0x11e82a190 <col:44> 'unsigned char *' lvalue Var 0x11e8275d8 'in' 'unsigned char *'
    | `-DeclRefExpr 0x11e82a208 <col:48> 'unsigned int' lvalue Var 0x11e827508 'avail' 'unsigned int'
    `-ReturnStmt 0x11e82a280 <line:18:5, col:12>
      `-IntegerLiteral 0x11e82a260 <col:12> 'int' 0
