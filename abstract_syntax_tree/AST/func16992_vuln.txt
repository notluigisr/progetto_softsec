TranslationUnitDecl 0x12e855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12e8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12e855bd0 '__int128'
|-TypedefDecl 0x12e856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12e855bf0 'unsigned __int128'
|-TypedefDecl 0x12f00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12f00bc00 'struct __NSConstantString_tag'
|   `-Record 0x12e856580 '__NSConstantString_tag'
|-TypedefDecl 0x12f00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12e855d90 '__SVInt8_t'
|-TypedefDecl 0x12f00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12e855db0 '__SVInt16_t'
|-TypedefDecl 0x12f00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12e855dd0 '__SVInt32_t'
|-TypedefDecl 0x12f00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12e855df0 '__SVInt64_t'
|-TypedefDecl 0x12f00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12e855e10 '__SVUint8_t'
|-TypedefDecl 0x12f00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12e855e30 '__SVUint16_t'
|-TypedefDecl 0x12f00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12e855e50 '__SVUint32_t'
|-TypedefDecl 0x12f00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12e855e70 '__SVUint64_t'
|-TypedefDecl 0x12f00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12e855e90 '__SVFloat16_t'
|-TypedefDecl 0x12f00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12e855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12f00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12e855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12f00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12e855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12f00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12e855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12f00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12e855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12f00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12e855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12f00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12e855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12f00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12e855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12f00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12e855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12f00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12e855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12f00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12e855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12f00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12e856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12f00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12e856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12f00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12e856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12f00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12e856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12f00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12e856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12f00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12e8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12f00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12e8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12f00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12e8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12f00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12e856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12f00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12e856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12f00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12e856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12f00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12e856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12f00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12e856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12f00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12e8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12f00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12e8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12f00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12e8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12f00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12e856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12f00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12e856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12f00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12e856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12f00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12e856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12f00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12e856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12f00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12e8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12f00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12e8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12f00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12e8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12f00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12e856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12f00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12e856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12f00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12e856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12f00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12e856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12f00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12e856390 '__SVBool_t'
|-TypedefDecl 0x12f00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12e8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12f00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12e8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12f00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12e8563f0 '__SVCount_t'
|-TypedefDecl 0x12f00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12f00dbb0 'char *'
|   `-BuiltinType 0x12e8556b0 'char'
|-TypedefDecl 0x12f00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12f00dbb0 'char *'
|   `-BuiltinType 0x12e8556b0 'char'
`-FunctionDecl 0x12f00ddf8 <dataset_diviso_filec/func16992_vuln.c:1:1, line:79:1> line:1:12 invalid generate_key 'int (int *)' static
  |-ParmVarDecl 0x12f00dd28 <col:25, col:29> col:29 referenced invalid dh 'int *'
  `-CompoundStmt 0x12f029e00 <line:2:1, line:79:1>
    |-DeclStmt 0x12f00df48 <line:3:5, col:15>
    | `-VarDecl 0x12f00dec0 <col:5, col:14> col:9 used ok 'int' cinit
    |   `-IntegerLiteral 0x12f00df28 <col:14> 'int' 0
    |-DeclStmt 0x12f00e000 <line:4:5, col:29>
    | `-VarDecl 0x12f00df78 <col:5, col:28> col:9 used generate_new_key 'int' cinit
    |   `-IntegerLiteral 0x12f00dfe0 <col:28> 'int' 0
    |-DeclStmt 0x12f00e098 <line:5:5, col:15>
    | `-VarDecl 0x12f00e030 <col:5, col:14> col:14 used l 'unsigned int'
    |-IfStmt 0x12f027ea8 <line:11:5, line:12:14>
    | |-BinaryOperator 0x12f027e20 <line:11:9, col:16> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x12f00e3d8 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x12f027e00 <col:16> '<dependent type>' contains-errors lvalue
    | `-GotoStmt 0x12f027e90 <line:12:9, col:14> 'err' 0x12f027e40
    |-IfStmt 0x12f0282b8 <line:14:5, line:20:9> has_else
    | |-BinaryOperator 0x12f027f88 <line:14:9, col:25> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x12f027ee8 <col:9, col:13> '<dependent type>' contains-errors lvalue ->priv_key
    | | | `-RecoveryExpr 0x12f027ec8 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x12f027f68 <col:25> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x12f028228 <col:31, line:19:5>
    | | |-IfStmt 0x12f0281a8 <line:16:9, line:17:18>
    | | | |-BinaryOperator 0x12f028170 <line:16:13, col:25> 'int' contains-errors '=='
    | | | | |-RecoveryExpr 0x12f028130 <col:13> '<dependent type>' contains-errors lvalue
    | | | | `-RecoveryExpr 0x12f028150 <col:25> '<dependent type>' contains-errors lvalue
    | | | `-GotoStmt 0x12f028190 <line:17:13, col:18> 'err' 0x12f027e40
    | | `-BinaryOperator 0x12f028208 <line:18:9, col:28> 'int' '='
    | |   |-DeclRefExpr 0x12f0281c8 <col:9> 'int' lvalue Var 0x12f00df78 'generate_new_key' 'int'
    | |   `-IntegerLiteral 0x12f0281e8 <col:28> 'int' 1
    | `-NullStmt 0x12f0282b0 <line:20:9>
    |-IfStmt 0x12f0284a8 <line:22:5, line:27:9> has_else
    | |-RecoveryExpr 0x12f028350 <line:22:9, col:24> '_Bool' contains-errors
    | |-CompoundStmt 0x12f028420 <col:30, line:26:5>
    | | `-IfStmt 0x12f028400 <line:24:9, line:25:18>
    | |   |-RecoveryExpr 0x12f0283c8 <line:24:13, col:24> '_Bool' contains-errors
    | |   `-GotoStmt 0x12f0283e8 <line:25:13, col:18> 'err' 0x12f027e40
    | `-NullStmt 0x12f0284a0 <line:27:9>
    |-IfStmt 0x12f0287b8 <line:29:5, line:34:5>
    | |-RecoveryExpr 0x12f028540 <line:29:9, col:21> '_Bool' contains-errors
    | `-CompoundStmt 0x12f0287a0 <col:43, line:34:5>
    |   `-IfStmt 0x12f028780 <line:32:9, line:33:18>
    |     |-RecoveryExpr 0x12f028748 <line:32:13, col:14> '_Bool' contains-errors
    |     `-GotoStmt 0x12f028768 <line:33:13, col:18> 'err' 0x12f027e40
    |-IfStmt 0x12f029218 <line:36:5, line:49:5>
    | |-ImplicitCastExpr 0x12f0287f8 <line:36:9> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x12f0287d8 <col:9> 'int' lvalue Var 0x12f00df78 'generate_new_key' 'int'
    | `-CompoundStmt 0x12f029200 <col:27, line:49:5>
    |   `-IfStmt 0x12f0291d0 <line:37:9, line:48:9> has_else
    |     |-CXXDependentScopeMemberExpr 0x12f028830 <line:37:13, col:17> '<dependent type>' contains-errors lvalue ->q
    |     | `-RecoveryExpr 0x12f028810 <col:13> '<dependent type>' contains-errors lvalue
    |     |-CompoundStmt 0x12f028c90 <col:20, line:43:9>
    |     | `-DoStmt 0x12f028c70 <line:38:13, line:42:63>
    |     |   |-CompoundStmt 0x12f028a38 <line:38:16, line:41:13>
    |     |   | `-IfStmt 0x12f028a18 <line:39:17, line:40:26>
    |     |   |   |-RecoveryExpr 0x12f0289e0 <line:39:21, col:51> '_Bool' contains-errors
    |     |   |   `-GotoStmt 0x12f028a00 <line:40:21, col:26> 'err' 0x12f027e40
    |     |   `-RecoveryExpr 0x12f028c50 <line:42:20, col:62> '_Bool' contains-errors
    |     `-CompoundStmt 0x12f0291b0 <line:43:16, line:48:9>
    |       |-BinaryOperator 0x12f028fd8 <line:45:13, col:64> 'unsigned int' contains-errors '='
    |       | |-DeclRefExpr 0x12f028ca8 <col:13> 'unsigned int' lvalue Var 0x12f00e030 'l' 'unsigned int'
    |       | `-ConditionalOperator 0x12f028fa8 <col:17, col:64> '<dependent type>' contains-errors
    |       |   |-CXXDependentScopeMemberExpr 0x12f028ce8 <col:17, col:21> '<dependent type>' contains-errors lvalue ->length
    |       |   | `-RecoveryExpr 0x12f028cc8 <col:17> '<dependent type>' contains-errors lvalue
    |       |   |-CXXDependentScopeMemberExpr 0x12f028d50 <col:30, col:34> '<dependent type>' contains-errors lvalue ->length
    |       |   | `-RecoveryExpr 0x12f028d30 <col:30> '<dependent type>' contains-errors lvalue
    |       |   `-BinaryOperator 0x12f028f88 <col:43, col:64> '<dependent type>' contains-errors '-'
    |       |     |-CallExpr 0x12f028f40 <col:43, col:60> '<dependent type>' contains-errors
    |       |     | |-DeclRefExpr 0x12f028eb8 <col:43> 'int ()' Function 0x12f028e00 'BN_num_bits' 'int ()'
    |       |     | `-CXXDependentScopeMemberExpr 0x12f028ef8 <col:55, col:59> '<dependent type>' contains-errors lvalue ->p
    |       |     |   `-RecoveryExpr 0x12f028ed8 <col:55> '<dependent type>' contains-errors lvalue
    |       |     `-IntegerLiteral 0x12f028f68 <col:64> 'int' 1
    |       `-IfStmt 0x12f029190 <line:46:13, line:47:22>
    |         |-RecoveryExpr 0x12f029158 <line:46:17, col:43> '_Bool' contains-errors
    |         `-GotoStmt 0x12f029178 <line:47:17, col:22> 'err' 0x12f027e40
    |-CompoundStmt 0x12f029720 <line:51:5, line:64:5>
    | |-IfStmt 0x12f0294f8 <line:55:9, line:60:13> has_else
    | | |-RecoveryExpr 0x12f0292c0 <line:55:13, col:55> '_Bool' contains-errors
    | | |-CompoundStmt 0x12f0294e0 <col:58, line:59:9>
    | | `-NullStmt 0x12f0294f0 <line:60:13>
    | `-IfStmt 0x12f029700 <line:62:9, line:63:18>
    |   |-RecoveryExpr 0x12f0296c8 <line:62:13, col:76> '_Bool' contains-errors
    |   `-GotoStmt 0x12f0296e8 <line:63:13, col:18> 'err' 0x12f027e40
    |-BinaryOperator 0x12f0298a0 <line:68:5, col:10> 'int' '='
    | |-DeclRefExpr 0x12f029860 <col:5> 'int' lvalue Var 0x12f00dec0 'ok' 'int'
    | `-IntegerLiteral 0x12f029880 <col:10> 'int' 1
    |-LabelStmt 0x12f029a40 <line:69:2, col:5> 'err'
    | `-NullStmt 0x12f029a38 <col:5>
    `-ReturnStmt 0x12f029de8 <line:78:5, col:15>
      `-ImplicitCastExpr 0x12f029dd0 <col:12, col:15> 'int' <LValueToRValue>
        `-ParenExpr 0x12f029db0 <col:12, col:15> 'int' lvalue
          `-DeclRefExpr 0x12f029d90 <col:13> 'int' lvalue Var 0x12f00dec0 'ok' 'int'
