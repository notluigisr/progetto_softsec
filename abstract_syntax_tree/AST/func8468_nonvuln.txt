TranslationUnitDecl 0x12d055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12d0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12d055bd0 '__int128'
|-TypedefDecl 0x12d056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12d055bf0 'unsigned __int128'
|-TypedefDecl 0x12d126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12d126000 'struct __NSConstantString_tag'
|   `-Record 0x12d056580 '__NSConstantString_tag'
|-TypedefDecl 0x12d126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12d055d90 '__SVInt8_t'
|-TypedefDecl 0x12d126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12d055db0 '__SVInt16_t'
|-TypedefDecl 0x12d126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12d055dd0 '__SVInt32_t'
|-TypedefDecl 0x12d1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12d055df0 '__SVInt64_t'
|-TypedefDecl 0x12d126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12d055e10 '__SVUint8_t'
|-TypedefDecl 0x12d1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12d055e30 '__SVUint16_t'
|-TypedefDecl 0x12d126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12d055e50 '__SVUint32_t'
|-TypedefDecl 0x12d126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12d055e70 '__SVUint64_t'
|-TypedefDecl 0x12d1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12d055e90 '__SVFloat16_t'
|-TypedefDecl 0x12d126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12d055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12d1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12d055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12d126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12d055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12d126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12d055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12d1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12d055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12d126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12d055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12d1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12d055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12d126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12d055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12d126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12d055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12d1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12d055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12d126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12d055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12d126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12d056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12d126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12d056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12d126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12d056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12d126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12d056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12d126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12d056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12d126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12d0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12d126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12d0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12d126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12d0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12d126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12d056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12d126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12d056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12d126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12d056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12d126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12d056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12d126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12d056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12d127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12d0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12d127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12d0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12d1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12d0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12d127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12d056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12d1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12d056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12d127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12d056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12d127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12d056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12d127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12d056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12d127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12d0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12d127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12d0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12d127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12d0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12d127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12d056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12d127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12d056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12d127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12d056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12d127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12d056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12d127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12d056390 '__SVBool_t'
|-TypedefDecl 0x12d127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12d0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12d127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12d0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12d127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12d0563f0 '__SVCount_t'
|-TypedefDecl 0x12d127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12d127fb0 'char *'
|   `-BuiltinType 0x12d0556b0 'char'
|-TypedefDecl 0x12d128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12d127fb0 'char *'
|   `-BuiltinType 0x12d0556b0 'char'
|-FunctionDecl 0x12d128318 <dataset_diviso_filec/func8468_nonvuln.c:1:1, line:46:1> line:1:5 invalid mutt_parse_rc_line 'int (char *, int *, int *)'
| |-ParmVarDecl 0x12d1280d8 <col:26, col:32> col:32 used line 'char *'
| |-ParmVarDecl 0x12d1281a8 <col:38, col:46> col:46 invalid token 'int *'
| |-ParmVarDecl 0x12d128228 <col:53, col:61> col:61 invalid err 'int *'
| `-CompoundStmt 0x12d143f68 <line:2:1, line:46:1>
|   |-DeclStmt 0x12d128528 <line:3:3, col:16>
|   | |-VarDecl 0x12d1283f0 <col:3, col:7> col:7 used i 'int'
|   | `-VarDecl 0x12d128470 <col:3, col:15> col:10 used r 'int' cinit
|   |   `-UnaryOperator 0x12d1284f8 <col:14, col:15> 'int' prefix '-'
|   |     `-IntegerLiteral 0x12d1284d8 <col:15> 'int' 1
|   |-IfStmt 0x12d128660 <line:6:3, line:7:12>
|   | |-BinaryOperator 0x12d128610 <line:6:7, col:18> 'int' '||'
|   | | |-UnaryOperator 0x12d128578 <col:7, col:8> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x12d128560 <col:8> 'char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x12d128540 <col:8> 'char *' lvalue ParmVar 0x12d1280d8 'line' 'char *'
|   | | `-UnaryOperator 0x12d1285f8 <col:16, col:18> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x12d1285e0 <col:17, col:18> 'char' <LValueToRValue>
|   | |     `-UnaryOperator 0x12d1285c8 <col:17, col:18> 'char' lvalue prefix '*' cannot overflow
|   | |       `-ImplicitCastExpr 0x12d1285b0 <col:18> 'char *' <LValueToRValue>
|   | |         `-DeclRefExpr 0x12d128590 <col:18> 'char *' lvalue ParmVar 0x12d1280d8 'line' 'char *'
|   | `-ReturnStmt 0x12d128650 <line:7:5, col:12>
|   |   `-IntegerLiteral 0x12d128630 <col:12> 'int' 0
|   |-BinaryOperator 0x12d142150 <line:13:3, col:16> '<dependent type>' contains-errors '='
|   | |-UnaryOperator 0x12d142118 <col:3, col:9> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x12d142100 <col:4, col:9> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-CXXDependentScopeMemberExpr 0x12d1420b8 <col:4, col:9> '<dependent type>' contains-errors lvalue ->data
|   | |     `-RecoveryExpr 0x12d142098 <col:4> '<dependent type>' contains-errors lvalue
|   | `-IntegerLiteral 0x12d142130 <col:16> 'int' 0
|   |-CallExpr 0x12d142360 <line:15:3, col:20> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12d142250 <col:3> 'int ()' Function 0x12d142198 'SKIPWS' 'int ()'
|   | `-CXXDependentScopeMemberExpr 0x12d142318 <col:11, col:16> '<dependent type>' contains-errors lvalue .dptr
|   |   `-RecoveryExpr 0x12d1422f8 <col:11> '<dependent type>' contains-errors lvalue
|   |-WhileStmt 0x12d143cb0 <line:16:3, line:40:3>
|   | |-UnaryOperator 0x12d142498 <line:16:10, col:16> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x12d142480 <col:11, col:16> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-CXXDependentScopeMemberExpr 0x12d142438 <col:11, col:16> '<dependent type>' contains-errors lvalue .dptr
|   | |     `-RecoveryExpr 0x12d142418 <col:11> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x12d143c80 <line:17:3, line:40:3>
|   |   |-IfStmt 0x12d142638 <line:18:5, line:19:7>
|   |   | |-BinaryOperator 0x12d142610 <line:18:9, col:23> 'int' contains-errors '=='
|   |   | | |-UnaryOperator 0x12d1425f8 <col:9, col:15> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x12d1425e0 <col:10, col:15> '<dependent type>' contains-errors <LValueToRValue>
|   |   | | |   `-CXXDependentScopeMemberExpr 0x12d142598 <col:10, col:15> '<dependent type>' contains-errors lvalue .dptr
|   |   | | |     `-RecoveryExpr 0x12d142578 <col:10> '<dependent type>' contains-errors lvalue
|   |   | | `-CharacterLiteral 0x12d142540 <col:23> 'int' 35
|   |   | `-BreakStmt 0x12d142630 <line:19:7>
|   |   |-IfStmt 0x12d142e00 <line:20:5, line:24:5>
|   |   | |-BinaryOperator 0x12d1427b8 <line:20:9, col:23> 'int' contains-errors '=='
|   |   | | |-UnaryOperator 0x12d1427a0 <col:9, col:15> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x12d142788 <col:10, col:15> '<dependent type>' contains-errors <LValueToRValue>
|   |   | | |   `-CXXDependentScopeMemberExpr 0x12d142740 <col:10, col:15> '<dependent type>' contains-errors lvalue .dptr
|   |   | | |     `-RecoveryExpr 0x12d142720 <col:10> '<dependent type>' contains-errors lvalue
|   |   | | `-CharacterLiteral 0x12d1426e8 <col:23> 'int' 59
|   |   | `-CompoundStmt 0x12d1427e0 <line:21:5, line:24:5>
|   |   |   `-ContinueStmt 0x12d1427d8 <line:23:7>
|   |   |-CallExpr 0x12d143000 <line:25:5, col:40> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x12d142f00 <col:5> 'int ()' Function 0x12d142e48 'mutt_extract_token' 'int ()'
|   |   | |-RecoveryExpr 0x12d142f20 <col:25> '<dependent type>' contains-errors lvalue
|   |   | |-UnaryOperator 0x12d142fe8 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | | `-RecoveryExpr 0x12d142fc8 <col:33> '<dependent type>' contains-errors lvalue
|   |   | `-IntegerLiteral 0x12d142f70 <col:39> 'int' 0
|   |   `-IfStmt 0x12d143c60 <line:35:5, line:39:5>
|   |     |-RecoveryExpr 0x12d143478 <line:35:9, col:22> '_Bool' contains-errors
|   |     `-CompoundStmt 0x12d143c40 <line:36:5, line:39:5>
|   |       |-CallExpr 0x12d143be8 <line:37:7, col:70> '<dependent type>' contains-errors
|   |       | |-DeclRefExpr 0x12d143778 <col:7> 'int (char *, unsigned long, const char *, ...)' Function 0x12d1434f0 'snprintf' 'int (char *, unsigned long, const char *, ...)'
|   |       | |-CXXDependentScopeMemberExpr 0x12d1437b8 <col:17, col:22> '<dependent type>' contains-errors lvalue ->data
|   |       | | `-RecoveryExpr 0x12d143798 <col:17> '<dependent type>' contains-errors lvalue
|   |       | |-CXXDependentScopeMemberExpr 0x12d143820 <col:28, col:33> '<dependent type>' contains-errors lvalue ->dsize
|   |       | | `-RecoveryExpr 0x12d143800 <col:28> '<dependent type>' contains-errors lvalue
|   |       | |-CallExpr 0x12d1439e8 <col:40, col:47> 'int'
|   |       | | |-ImplicitCastExpr 0x12d1439d0 <col:40> 'int (*)()' <FunctionToPointerDecay>
|   |       | | | `-DeclRefExpr 0x12d143948 <col:40> 'int ()' Function 0x12d143890 '_' 'int ()'
|   |       | | `-ImplicitCastExpr 0x12d143a10 <col:42> 'char *' <ArrayToPointerDecay>
|   |       | |   `-StringLiteral 0x12d1439b0 <col:42> 'char[4]' lvalue "STR"
|   |       | `-CallExpr 0x12d143b90 <col:50, col:69> '<dependent type>' contains-errors
|   |       |   |-DeclRefExpr 0x12d143b08 <col:50> 'int ()' Function 0x12d143a50 'NONULL' 'int ()'
|   |       |   `-CXXDependentScopeMemberExpr 0x12d143b48 <col:58, col:65> '<dependent type>' contains-errors lvalue ->data
|   |       |     `-RecoveryExpr 0x12d143b28 <col:58> '<dependent type>' contains-errors lvalue
|   |       `-GotoStmt 0x12d143c28 <line:38:7, col:12> 'finish' 0x12d143370
|   |-BinaryOperator 0x12d143d10 <line:41:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x12d143cd0 <col:3> 'int' lvalue Var 0x12d128470 'r' 'int'
|   | `-IntegerLiteral 0x12d143cf0 <col:7> 'int' 0
|   |-LabelStmt 0x12d143ee0 <line:42:1, col:7> 'finish'
|   | `-NullStmt 0x12d143ed8 <col:7>
|   `-ReturnStmt 0x12d143f58 <line:45:3, col:12>
|     `-ImplicitCastExpr 0x12d143f40 <col:10, col:12> 'int' <LValueToRValue>
|       `-ParenExpr 0x12d143f20 <col:10, col:12> 'int' lvalue
|         `-DeclRefExpr 0x12d143f00 <col:11> 'int' lvalue Var 0x12d128470 'r' 'int'
|-FunctionDecl 0x12d141b00 <line:9:3> col:3 implicit used memset 'void *(void *, int, unsigned long)' extern
| |-ParmVarDecl 0x12d141c00 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x12d141c68 <<invalid sloc>> <invalid sloc> 'int'
| |-ParmVarDecl 0x12d141cd0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x12d141ba8 <<invalid sloc>> Implicit 900
`-FunctionDecl 0x12d1434f0 <line:37:7> col:7 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern
  |-ParmVarDecl 0x12d1435f0 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x12d143658 <<invalid sloc>> <invalid sloc> 'unsigned long'
  |-ParmVarDecl 0x12d1436c0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-BuiltinAttr 0x12d143598 <<invalid sloc>> Implicit 905
  `-FormatAttr 0x12d143740 <col:7> Implicit printf 3 4
