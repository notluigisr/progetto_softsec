TranslationUnitDecl 0x129855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1298564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x129855bd0 '__int128'
|-TypedefDecl 0x129856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x129855bf0 'unsigned __int128'
|-TypedefDecl 0x12a00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12a00bc00 'struct __NSConstantString_tag'
|   `-Record 0x129856580 '__NSConstantString_tag'
|-TypedefDecl 0x12a00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x129855d90 '__SVInt8_t'
|-TypedefDecl 0x12a00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x129855db0 '__SVInt16_t'
|-TypedefDecl 0x12a00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x129855dd0 '__SVInt32_t'
|-TypedefDecl 0x12a00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x129855df0 '__SVInt64_t'
|-TypedefDecl 0x12a00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x129855e10 '__SVUint8_t'
|-TypedefDecl 0x12a00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x129855e30 '__SVUint16_t'
|-TypedefDecl 0x12a00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x129855e50 '__SVUint32_t'
|-TypedefDecl 0x12a00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x129855e70 '__SVUint64_t'
|-TypedefDecl 0x12a00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x129855e90 '__SVFloat16_t'
|-TypedefDecl 0x12a00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x129855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12a00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x129855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12a00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x129855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12a00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x129855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12a00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x129855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12a00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x129855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12a00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x129855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12a00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x129855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12a00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x129855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12a00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x129855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12a00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x129855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12a00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x129856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12a00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x129856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12a00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x129856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12a00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x129856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12a00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x129856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12a00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1298560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12a00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1298560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12a00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1298560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12a00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x129856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12a00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x129856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12a00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x129856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12a00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x129856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12a00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x129856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12a00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1298561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12a00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1298561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12a00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1298561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12a00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x129856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12a00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x129856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12a00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x129856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12a00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x129856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12a00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x129856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12a00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1298562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12a00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1298562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12a00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1298562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12a00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x129856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12a00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x129856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12a00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x129856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12a00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x129856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12a00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x129856390 '__SVBool_t'
|-TypedefDecl 0x12a00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1298563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12a00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1298563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12a00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1298563f0 '__SVCount_t'
|-TypedefDecl 0x12a00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12a00dbb0 'char *'
|   `-BuiltinType 0x1298556b0 'char'
|-TypedefDecl 0x12a00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12a00dbb0 'char *'
|   `-BuiltinType 0x1298556b0 'char'
`-FunctionDecl 0x12a026750 <dataset_diviso_filec/func3905_vuln.c:1:1, line:40:1> line:1:6 flush_tlb_mm_range 'void (struct mm_struct *, unsigned long, unsigned long, unsigned long)'
  |-ParmVarDecl 0x12a00e248 <col:25, col:43> col:43 used mm 'struct mm_struct *'
  |-ParmVarDecl 0x12a00e2c8 <col:47, col:61> col:61 used start 'unsigned long'
  |-ParmVarDecl 0x12a00e348 <line:2:5, col:19> col:19 used end 'unsigned long'
  |-ParmVarDecl 0x12a026600 <col:24, col:38> col:38 used vmflag 'unsigned long'
  `-CompoundStmt 0x12a02a338 <line:3:1, line:40:1>
    |-DeclStmt 0x12a0268e0 <line:4:2, col:20>
    | `-VarDecl 0x12a026878 <col:2, col:16> col:16 used addr 'unsigned long'
    |-DeclStmt 0x12a0269c8 <line:6:2, col:51>
    | `-VarDecl 0x12a026910 <col:2, col:38> col:16 used base_pages_to_flush 'unsigned long' cinit
    |   `-RecoveryExpr 0x12a0269a8 <col:38> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12a026b58 <line:8:2, col:18> 'int'
    | `-ImplicitCastExpr 0x12a026b40 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x12a026af0 <col:2> 'int ()' Function 0x12a026a38 'preempt_disable' 'int ()'
    |-IfStmt 0x12a026d08 <line:9:2, line:10:8>
    | |-BinaryOperator 0x12a026c80 <line:9:6, col:28> 'int' contains-errors '!='
    | | |-CXXDependentScopeMemberExpr 0x12a026c38 <col:6, col:15> '<dependent type>' contains-errors lvalue ->active_mm
    | | | `-RecoveryExpr 0x12a026c18 <col:6> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12a026bd8 <col:28> 'struct mm_struct *' lvalue ParmVar 0x12a00e248 'mm' 'struct mm_struct *'
    | `-GotoStmt 0x12a026cf0 <line:10:3, col:8> 'out' 0x12a026ca0
    |-IfStmt 0x12a027100 <line:12:2, line:15:2>
    | |-UnaryOperator 0x12a026e38 <line:12:6, col:16> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12a026e20 <col:7, col:16> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-CXXDependentScopeMemberExpr 0x12a026dd8 <col:7, col:16> '<dependent type>' contains-errors lvalue ->mm
    | |     `-RecoveryExpr 0x12a026db8 <col:7> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12a0270e0 <col:20, line:15:2>
    |   |-CallExpr 0x12a0270a0 <line:13:3, col:30> 'int'
    |   | |-ImplicitCastExpr 0x12a027088 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x12a026f30 <col:3> 'int ()' Function 0x12a026e78 'leave_mm' 'int ()'
    |   | `-CallExpr 0x12a027068 <col:12, col:29> 'int'
    |   |   `-ImplicitCastExpr 0x12a027050 <col:12> 'int (*)()' <FunctionToPointerDecay>
    |   |     `-DeclRefExpr 0x12a027030 <col:12> 'int ()' Function 0x12a026f78 'smp_processor_id' 'int ()'
    |   `-GotoStmt 0x12a0270c8 <line:14:3, col:8> 'out' 0x12a026ca0
    |-IfStmt 0x12a027458 <line:17:2, line:18:42>
    | |-RecoveryExpr 0x12a0271d0 <line:17:6, col:53> '_Bool' contains-errors
    | `-BinaryOperator 0x12a027438 <line:18:3, col:42> 'unsigned long' contains-errors '='
    |   |-DeclRefExpr 0x12a0271f0 <col:3> 'unsigned long' contains-errors lvalue Var 0x12a026910 'base_pages_to_flush' 'unsigned long'
    |   `-BinaryOperator 0x12a027418 <col:25, col:42> '<dependent type>' contains-errors '>>'
    |     |-ParenExpr 0x12a0273d8 <col:25, col:37> 'unsigned long'
    |     | `-BinaryOperator 0x12a0273b8 <col:26, col:32> 'unsigned long' '-'
    |     |   |-ImplicitCastExpr 0x12a027388 <col:26> 'unsigned long' <LValueToRValue>
    |     |   | `-DeclRefExpr 0x12a027210 <col:26> 'unsigned long' lvalue ParmVar 0x12a00e348 'end' 'unsigned long'
    |     |   `-ImplicitCastExpr 0x12a0273a0 <col:32> 'unsigned long' <LValueToRValue>
    |     |     `-DeclRefExpr 0x12a027230 <col:32> 'unsigned long' lvalue ParmVar 0x12a00e2c8 'start' 'unsigned long'
    |     `-RecoveryExpr 0x12a0273f8 <col:42> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12a029910 <line:20:2, line:30:2> has_else
    | |-BinaryOperator 0x12a0274f0 <line:20:6, col:28> 'int' contains-errors '>'
    | | |-DeclRefExpr 0x12a027478 <col:6> 'unsigned long' contains-errors lvalue Var 0x12a026910 'base_pages_to_flush' 'unsigned long'
    | | `-RecoveryExpr 0x12a0274d0 <col:28> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x12a029498 <col:59, line:24:2>
    | | |-BinaryOperator 0x12a027588 <line:21:3, col:25> 'unsigned long' contains-errors '='
    | | | |-DeclRefExpr 0x12a027510 <col:3> 'unsigned long' contains-errors lvalue Var 0x12a026910 'base_pages_to_flush' 'unsigned long'
    | | | `-RecoveryExpr 0x12a027568 <col:25> '<dependent type>' contains-errors lvalue
    | | |-CallExpr 0x12a029338 <line:22:3, col:44> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x12a0292b8 <col:3> 'int ()' Function 0x12a029200 'count_vm_tlb_event' 'int ()'
    | | | `-RecoveryExpr 0x12a029318 <col:22> '<dependent type>' contains-errors lvalue
    | | `-CallExpr 0x12a029478 <line:23:3, col:19> 'int'
    | |   `-ImplicitCastExpr 0x12a029460 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | |     `-DeclRefExpr 0x12a029440 <col:3> 'int ()' Function 0x12a029388 'local_flush_tlb' 'int ()'
    | `-CompoundStmt 0x12a0298f8 <line:24:9, line:30:2>
    |   `-ForStmt 0x12a0298c0 <line:26:3, line:29:3>
    |     |-BinaryOperator 0x12a029518 <line:26:8, col:15> 'unsigned long' '='
    |     | |-DeclRefExpr 0x12a0294c0 <col:8> 'unsigned long' lvalue Var 0x12a026878 'addr' 'unsigned long'
    |     | `-ImplicitCastExpr 0x12a029500 <col:15> 'unsigned long' <LValueToRValue>
    |     |   `-DeclRefExpr 0x12a0294e0 <col:15> 'unsigned long' lvalue ParmVar 0x12a00e2c8 'start' 'unsigned long'
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x12a0295a8 <col:22, col:29> 'int' '<'
    |     | |-ImplicitCastExpr 0x12a029578 <col:22> 'unsigned long' <LValueToRValue>
    |     | | `-DeclRefExpr 0x12a029538 <col:22> 'unsigned long' lvalue Var 0x12a026878 'addr' 'unsigned long'
    |     | `-ImplicitCastExpr 0x12a029590 <col:29> 'unsigned long' <LValueToRValue>
    |     |   `-DeclRefExpr 0x12a029558 <col:29> 'unsigned long' lvalue ParmVar 0x12a00e348 'end' 'unsigned long'
    |     |-CompoundAssignOperator 0x12a029650 <col:34, col:42> 'unsigned long' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |     | |-DeclRefExpr 0x12a0295c8 <col:34> 'unsigned long' lvalue Var 0x12a026878 'addr' 'unsigned long'
    |     | `-RecoveryExpr 0x12a029630 <col:42> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x12a0298a0 <col:53, line:29:3>
    |       |-CallExpr 0x12a029700 <line:27:4, col:45> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x12a029680 <col:4> 'int ()' Function 0x12a029200 'count_vm_tlb_event' 'int ()'
    |       | `-RecoveryExpr 0x12a0296e0 <col:23> '<dependent type>' contains-errors lvalue
    |       `-CallExpr 0x12a029860 <line:28:4, col:27> 'int'
    |         |-ImplicitCastExpr 0x12a029848 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x12a029808 <col:4> 'int ()' Function 0x12a029750 '__flush_tlb_single' 'int ()'
    |         `-ImplicitCastExpr 0x12a029888 <col:23> 'unsigned long' <LValueToRValue>
    |           `-DeclRefExpr 0x12a029828 <col:23> 'unsigned long' lvalue Var 0x12a026878 'addr' 'unsigned long'
    |-CallExpr 0x12a029ac8 <line:31:2, col:61> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12a029a20 <col:2> 'int ()' Function 0x12a029968 'trace_tlb_flush' 'int ()'
    | |-RecoveryExpr 0x12a029aa8 <col:18> '<dependent type>' contains-errors lvalue
    | `-DeclRefExpr 0x12a029a58 <col:42> 'unsigned long' contains-errors lvalue Var 0x12a026910 'base_pages_to_flush' 'unsigned long'
    |-LabelStmt 0x12a029bf0 <line:32:1, line:36:2> 'out'
    | `-IfStmt 0x12a029bd0 <line:33:2, line:36:2>
    |   |-RecoveryExpr 0x12a029b18 <line:33:6, col:29> '_Bool' contains-errors
    |   `-CompoundStmt 0x12a029bb8 <col:44, line:36:2>
    |     `-BinaryOperator 0x12a029b78 <line:34:3, col:11> 'unsigned long' '='
    |       |-DeclRefExpr 0x12a029b38 <col:3> 'unsigned long' lvalue ParmVar 0x12a00e2c8 'start' 'unsigned long'
    |       `-IntegerLiteral 0x12a029b58 <col:11> 'unsigned long' 0
    |-IfStmt 0x12a02a1e0 <line:37:2, line:38:50>
    | |-RecoveryExpr 0x12a029f28 <line:37:6, col:60> '_Bool' contains-errors
    | `-CallExpr 0x12a02a158 <line:38:3, col:50> 'int'
    |   |-ImplicitCastExpr 0x12a02a140 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12a02a028 <col:3> 'int ()' Function 0x12a029f70 'flush_tlb_others' 'int ()'
    |   |-CallExpr 0x12a02a0a0 <col:20, col:33> 'int'
    |   | |-ImplicitCastExpr 0x12a02a088 <col:20> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x12a02a048 <col:20> 'int ()' Function 0x12a029d38 'mm_cpumask' 'int ()'
    |   | `-ImplicitCastExpr 0x12a02a0c8 <col:31> 'struct mm_struct *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x12a02a068 <col:31> 'struct mm_struct *' lvalue ParmVar 0x12a00e248 'mm' 'struct mm_struct *'
    |   |-ImplicitCastExpr 0x12a02a198 <col:36> 'struct mm_struct *' <LValueToRValue>
    |   | `-DeclRefExpr 0x12a02a0e0 <col:36> 'struct mm_struct *' lvalue ParmVar 0x12a00e248 'mm' 'struct mm_struct *'
    |   |-ImplicitCastExpr 0x12a02a1b0 <col:40> 'unsigned long' <LValueToRValue>
    |   | `-DeclRefExpr 0x12a02a100 <col:40> 'unsigned long' lvalue ParmVar 0x12a00e2c8 'start' 'unsigned long'
    |   `-ImplicitCastExpr 0x12a02a1c8 <col:47> 'unsigned long' <LValueToRValue>
    |     `-DeclRefExpr 0x12a02a120 <col:47> 'unsigned long' lvalue ParmVar 0x12a00e348 'end' 'unsigned long'
    `-CallExpr 0x12a02a318 <line:39:2, col:17> 'int'
      `-ImplicitCastExpr 0x12a02a300 <col:2> 'int (*)()' <FunctionToPointerDecay>
        `-DeclRefExpr 0x12a02a2e0 <col:2> 'int ()' Function 0x12a02a228 'preempt_enable' 'int ()'
