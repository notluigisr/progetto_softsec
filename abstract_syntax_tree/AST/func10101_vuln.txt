TranslationUnitDecl 0x120055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1200564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x120055bd0 '__int128'
|-TypedefDecl 0x120056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x120055bf0 'unsigned __int128'
|-TypedefDecl 0x10500be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x10500bc00 'struct __NSConstantString_tag'
|   `-Record 0x120056580 '__NSConstantString_tag'
|-TypedefDecl 0x10500be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x120055d90 '__SVInt8_t'
|-TypedefDecl 0x10500bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x120055db0 '__SVInt16_t'
|-TypedefDecl 0x10500bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x120055dd0 '__SVInt32_t'
|-TypedefDecl 0x10500bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x120055df0 '__SVInt64_t'
|-TypedefDecl 0x10500c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x120055e10 '__SVUint8_t'
|-TypedefDecl 0x10500c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x120055e30 '__SVUint16_t'
|-TypedefDecl 0x10500c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x120055e50 '__SVUint32_t'
|-TypedefDecl 0x10500c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x120055e70 '__SVUint64_t'
|-TypedefDecl 0x10500c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x120055e90 '__SVFloat16_t'
|-TypedefDecl 0x10500c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x120055eb0 '__SVFloat32_t'
|-TypedefDecl 0x10500c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x120055ed0 '__SVFloat64_t'
|-TypedefDecl 0x10500c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x120055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x10500c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x120055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x10500c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x120055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x10500c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x120055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x10500c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x120055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x10500c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x120055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x10500c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x120055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x10500c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x120055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x10500c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x120055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x10500c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x120056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x10500c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x120056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x10500c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x120056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x10500c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x120056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x10500c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x120056090 '__clang_svint8x3_t'
|-TypedefDecl 0x10500c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1200560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x10500c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1200560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x10500c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1200560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x10500c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x120056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x10500ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x120056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x10500cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x120056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x10500cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x120056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x10500cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x120056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x10500d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1200561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x10500d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1200561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x10500d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1200561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x10500d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x120056210 '__clang_svint8x4_t'
|-TypedefDecl 0x10500d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x120056230 '__clang_svint16x4_t'
|-TypedefDecl 0x10500d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x120056250 '__clang_svint32x4_t'
|-TypedefDecl 0x10500d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x120056270 '__clang_svint64x4_t'
|-TypedefDecl 0x10500d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x120056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x10500d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1200562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x10500d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1200562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x10500d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1200562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x10500d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x120056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x10500d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x120056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x10500d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x120056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x10500d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x120056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x10500da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x120056390 '__SVBool_t'
|-TypedefDecl 0x10500da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1200563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x10500dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1200563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x10500db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1200563f0 '__SVCount_t'
|-TypedefDecl 0x10500dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x10500dbb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
|-TypedefDecl 0x10500dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x10500dbb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
`-FunctionDecl 0x1050277e8 <dataset_diviso_filec/func10101_vuln.c:1:1, line:47:1> line:1:1 invalid pci_emul_mem_handler 'int (struct vmctx *, int, int, int, int, int *, void *, long)'
  |-ParmVarDecl 0x10500e248 <col:22, col:36> col:36 used ctx 'struct vmctx *'
  |-ParmVarDecl 0x10500e2c8 <col:41, col:45> col:45 used vcpu 'int'
  |-ParmVarDecl 0x10500e348 <col:51, col:55> col:55 used dir 'int'
  |-ParmVarDecl 0x105027400 <col:60, col:69> col:69 invalid addr 'int'
  |-ParmVarDecl 0x105027480 <line:2:8, col:12> col:12 used size 'int'
  |-ParmVarDecl 0x105027538 <col:18, col:28> col:28 invalid val 'int *'
  |-ParmVarDecl 0x1050275b8 <col:33, col:39> col:39 used arg1 'void *'
  |-ParmVarDecl 0x105027638 <col:45, col:50> col:50 used arg2 'long'
  `-CompoundStmt 0x10502be40 <line:3:1, line:47:1>
    |-DeclStmt 0x105027b08 <line:4:2, col:29>
    | |-RecordDecl 0x1050278d0 <col:2, col:9> col:9 struct pci_vdev
    | `-VarDecl 0x105027a38 <col:2, col:25> col:19 used pdi 'struct pci_vdev *' cinit
    |   `-ImplicitCastExpr 0x105027ad8 <col:25> 'struct pci_vdev *' <BitCast>
    |     `-ImplicitCastExpr 0x105027ac0 <col:25> 'void *' <LValueToRValue>
    |       `-DeclRefExpr 0x105027aa0 <col:25> 'void *' lvalue ParmVar 0x1050275b8 'arg1' 'void *'
    |-DeclStmt 0x105027d68 <line:5:2, col:41>
    | |-RecordDecl 0x105027b20 <col:2, col:9> col:9 struct pci_vdev_ops
    | `-VarDecl 0x105027c88 <col:2, col:34> col:23 used ops 'struct pci_vdev_ops *' cinit
    |   `-RecoveryExpr 0x105027d28 <col:29, col:34> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x105027cf0 <col:29> 'struct pci_vdev *' lvalue Var 0x105027a38 'pdi' 'struct pci_vdev *'
    |-DeclStmt 0x105027e78 <line:7:2, col:23>
    | `-VarDecl 0x105027d98 <col:2, col:19> col:6 used bidx 'int' cinit
    |   `-CStyleCastExpr 0x105027e50 <col:13, col:19> 'int' <IntegralCast>
    |     `-ImplicitCastExpr 0x105027e38 <col:19> 'long' <LValueToRValue> part_of_explicit_cast
    |       `-DeclRefExpr 0x105027e00 <col:19> 'long' lvalue ParmVar 0x105027638 'arg2' 'long'
    |-CallExpr 0x1050280d0 <line:9:2, col:27> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x105027ff0 <col:2> 'int ()' Function 0x105027f38 'assert' 'int ()'
    | `-BinaryOperator 0x1050280b0 <col:9, col:17> 'int' contains-errors '<='
    |   |-DeclRefExpr 0x105028010 <col:9> 'int' lvalue Var 0x105027d98 'bidx' 'int'
    |   `-RecoveryExpr 0x105028090 <col:17> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x10502a668 <line:10:2, line:11:44> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1050280f8 <line:10:2> 'int ()' Function 0x105027f38 'assert' 'int ()'
    | `-BinaryOperator 0x10502a648 <col:9, line:11:32> 'int' contains-errors '||'
    |   |-BinaryOperator 0x10502a550 <line:10:9, col:32> 'int' contains-errors '=='
    |   | |-CXXDependentScopeMemberExpr 0x10502a4e8 <col:9, col:24> '<dependent type>' contains-errors lvalue .type
    |   | | `-ArraySubscriptExpr 0x10502a4c8 <col:9, col:22> '<dependent type>' contains-errors lvalue
    |   | |   |-ImplicitCastExpr 0x10502a498 <col:9, col:14> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   | `-RecoveryExpr 0x105028150 <col:9, col:14> '<dependent type>' contains-errors lvalue
    |   | |   |   `-DeclRefExpr 0x105028118 <col:9> 'struct pci_vdev *' lvalue Var 0x105027a38 'pdi' 'struct pci_vdev *'
    |   | |   `-ImplicitCastExpr 0x10502a4b0 <col:18> 'int' <LValueToRValue>
    |   | |     `-DeclRefExpr 0x105028178 <col:18> 'int' lvalue Var 0x105027d98 'bidx' 'int'
    |   | `-RecoveryExpr 0x10502a530 <col:32> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x10502a628 <line:11:9, col:32> 'int' contains-errors '=='
    |     |-CXXDependentScopeMemberExpr 0x10502a5c0 <col:9, col:24> '<dependent type>' contains-errors lvalue .type
    |     | `-ArraySubscriptExpr 0x10502a5a0 <col:9, col:22> '<dependent type>' contains-errors lvalue
    |     |   |-ImplicitCastExpr 0x10502a570 <col:9, col:14> '<dependent type>' contains-errors <LValueToRValue>
    |     |   | `-RecoveryExpr 0x1050282a0 <col:9, col:14> '<dependent type>' contains-errors lvalue
    |     |   |   `-DeclRefExpr 0x105028268 <col:9> 'struct pci_vdev *' lvalue Var 0x105027a38 'pdi' 'struct pci_vdev *'
    |     |   `-ImplicitCastExpr 0x10502a588 <col:18> 'int' <LValueToRValue>
    |     |     `-DeclRefExpr 0x1050282c8 <col:18> 'int' lvalue Var 0x105027d98 'bidx' 'int'
    |     `-RecoveryExpr 0x10502a608 <col:32> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x10502aaf8 <line:12:2, line:13:65> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x10502a690 <line:12:2> 'int ()' Function 0x105027f38 'assert' 'int ()'
    | `-BinaryOperator 0x10502aad8 <col:9, line:13:61> 'int' contains-errors '&&'
    |   |-BinaryOperator 0x10502a7e8 <line:12:9, col:32> 'int' contains-errors '>='
    |   | |-RecoveryExpr 0x10502a6b0 <col:9> '<dependent type>' contains-errors lvalue
    |   | `-CXXDependentScopeMemberExpr 0x10502a7a0 <col:17, col:32> '<dependent type>' contains-errors lvalue .addr
    |   |   `-ArraySubscriptExpr 0x10502a780 <col:17, col:30> '<dependent type>' contains-errors lvalue
    |   |     |-ImplicitCastExpr 0x10502a750 <col:17, col:22> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | `-RecoveryExpr 0x10502a708 <col:17, col:22> '<dependent type>' contains-errors lvalue
    |   |     |   `-DeclRefExpr 0x10502a6d0 <col:17> 'struct pci_vdev *' lvalue Var 0x105027a38 'pdi' 'struct pci_vdev *'
    |   |     `-ImplicitCastExpr 0x10502a768 <col:26> 'int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x10502a730 <col:26> 'int' lvalue Var 0x105027d98 'bidx' 'int'
    |   `-BinaryOperator 0x10502aab8 <line:13:9, col:61> 'int' contains-errors '<='
    |     |-BinaryOperator 0x10502a848 <col:9, col:16> '<dependent type>' contains-errors '+'
    |     | |-RecoveryExpr 0x10502a808 <col:9> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x10502a828 <col:16> 'int' lvalue ParmVar 0x105027480 'size' 'int'
    |     `-BinaryOperator 0x10502aa98 <col:24, col:61> '<dependent type>' contains-errors '+'
    |       |-CXXDependentScopeMemberExpr 0x10502a938 <col:24, col:39> '<dependent type>' contains-errors lvalue .addr
    |       | `-ArraySubscriptExpr 0x10502a918 <col:24, col:37> '<dependent type>' contains-errors lvalue
    |       |   |-ImplicitCastExpr 0x10502a8e8 <col:24, col:29> '<dependent type>' contains-errors <LValueToRValue>
    |       |   | `-RecoveryExpr 0x10502a8a0 <col:24, col:29> '<dependent type>' contains-errors lvalue
    |       |   |   `-DeclRefExpr 0x10502a868 <col:24> 'struct pci_vdev *' lvalue Var 0x105027a38 'pdi' 'struct pci_vdev *'
    |       |   `-ImplicitCastExpr 0x10502a900 <col:33> 'int' <LValueToRValue>
    |       |     `-DeclRefExpr 0x10502a8c8 <col:33> 'int' lvalue Var 0x105027d98 'bidx' 'int'
    |       `-CXXDependentScopeMemberExpr 0x10502aa50 <col:46, col:61> '<dependent type>' contains-errors lvalue .size
    |         `-ArraySubscriptExpr 0x10502aa30 <col:46, col:59> '<dependent type>' contains-errors lvalue
    |           |-ImplicitCastExpr 0x10502aa00 <col:46, col:51> '<dependent type>' contains-errors <LValueToRValue>
    |           | `-RecoveryExpr 0x10502a9b8 <col:46, col:51> '<dependent type>' contains-errors lvalue
    |           |   `-DeclRefExpr 0x10502a980 <col:46> 'struct pci_vdev *' lvalue Var 0x105027a38 'pdi' 'struct pci_vdev *'
    |           `-ImplicitCastExpr 0x10502aa18 <col:55> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x10502a9e0 <col:55> 'int' lvalue Var 0x105027d98 'bidx' 'int'
    |-IfStmt 0x10502bde0 <line:17:2, line:44:2> has_else
    | |-BinaryOperator 0x10502acf0 <line:17:6, col:13> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x10502ac78 <col:6> 'int' lvalue ParmVar 0x10500e348 'dir' 'int'
    | | `-RecoveryExpr 0x10502acd0 <col:13> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x10502b6a0 <col:26, line:27:2>
    | | `-IfStmt 0x10502b670 <line:18:3, line:26:3> has_else
    | |   |-BinaryOperator 0x10502ad68 <line:18:7, col:15> 'int' '=='
    | |   | |-ImplicitCastExpr 0x10502ad50 <col:7> 'int' <LValueToRValue>
    | |   | | `-DeclRefExpr 0x10502ad10 <col:7> 'int' lvalue ParmVar 0x105027480 'size' 'int'
    | |   | `-IntegerLiteral 0x10502ad30 <col:15> 'int' 8
    | |   |-CompoundStmt 0x10502b340 <col:18, line:23:3>
    | |   | `-CallExpr 0x10502b0e8 <line:19:4, line:20:29> '<dependent type>' contains-errors
    | |   |   |-ParenExpr 0x10502b058 <line:19:4, col:24> '<dependent type>' contains-errors
    | |   |   | `-UnaryOperator 0x10502b040 <col:5, col:11> '<dependent type>' contains-errors prefix '*' cannot overflow
    | |   |   |   `-ImplicitCastExpr 0x10502b028 <col:6, col:11> '<dependent type>' contains-errors <LValueToRValue>
    | |   |   |     `-RecoveryExpr 0x10502adc0 <col:6, col:11> '<dependent type>' contains-errors lvalue
    | |   |   |       `-DeclRefExpr 0x10502ad88 <col:6> 'struct pci_vdev_ops *' contains-errors lvalue Var 0x105027c88 'ops' 'struct pci_vdev_ops *'
    | |   |   |-DeclRefExpr 0x10502ae38 <col:26> 'struct vmctx *' lvalue ParmVar 0x10500e248 'ctx' 'struct vmctx *'
    | |   |   |-DeclRefExpr 0x10502ae58 <col:31> 'int' lvalue ParmVar 0x10500e2c8 'vcpu' 'int'
    | |   |   |-DeclRefExpr 0x10502ae78 <col:37> 'struct pci_vdev *' lvalue Var 0x105027a38 'pdi' 'struct pci_vdev *'
    | |   |   |-DeclRefExpr 0x10502ae98 <col:42> 'int' lvalue Var 0x105027d98 'bidx' 'int'
    | |   |   |-RecoveryExpr 0x10502b078 <col:48> '<dependent type>' contains-errors lvalue
    | |   |   |-IntegerLiteral 0x10502aed0 <line:20:9> 'int' 4
    | |   |   `-BinaryOperator 0x10502b0c8 <col:12, col:19> '<dependent type>' contains-errors '&'
    | |   |     |-UnaryOperator 0x10502b0b0 <col:12, col:13> '<dependent type>' contains-errors prefix '*' cannot overflow
    | |   |     | `-ImplicitCastExpr 0x10502b098 <col:13> '<dependent type>' contains-errors <LValueToRValue>
    | |   |     |   `-RecoveryExpr 0x10502aef0 <col:13> '<dependent type>' contains-errors lvalue
    | |   |     `-IntegerLiteral 0x10502af40 <col:19> 'unsigned int' 4294967295
    | |   `-CompoundStmt 0x10502b660 <line:23:10, line:26:3>
    | `-CompoundStmt 0x10502bdc8 <line:27:9, line:44:2>
    |   `-IfStmt 0x10502bd98 <line:28:3, line:43:3> has_else
    |     |-BinaryOperator 0x10502b710 <line:28:7, col:15> 'int' '=='
    |     | |-ImplicitCastExpr 0x10502b6f8 <col:7> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x10502b6b8 <col:7> 'int' lvalue ParmVar 0x105027480 'size' 'int'
    |     | `-IntegerLiteral 0x10502b6d8 <col:15> 'int' 8
    |     |-CompoundStmt 0x10502baa0 <col:18, line:39:3>
    |     `-CompoundStmt 0x10502bd80 <col:10, line:43:3>
    |       `-BinaryOperator 0x10502bd60 <line:42:4, col:31> '<dependent type>' contains-errors '='
    |         |-UnaryOperator 0x10502bc88 <col:4, col:5> '<dependent type>' contains-errors prefix '*' cannot overflow
    |         | `-ImplicitCastExpr 0x10502bc70 <col:5> '<dependent type>' contains-errors <LValueToRValue>
    |         |   `-RecoveryExpr 0x10502bc50 <col:5> '<dependent type>' contains-errors lvalue
    |         `-CallExpr 0x10502bd30 <col:11, col:31> '<dependent type>' contains-errors
    |           |-DeclRefExpr 0x10502bca0 <col:11> 'int ()' Function 0x10502b4e8 'bar_value' 'int ()'
    |           |-DeclRefExpr 0x10502bcc0 <col:21> 'int' lvalue ParmVar 0x105027480 'size' 'int'
    |           `-UnaryOperator 0x10502bd18 <col:27, col:28> '<dependent type>' contains-errors prefix '*' cannot overflow
    |             `-ImplicitCastExpr 0x10502bd00 <col:28> '<dependent type>' contains-errors <LValueToRValue>
    |               `-RecoveryExpr 0x10502bce0 <col:28> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x10502be30 <line:46:2, col:9>
      `-IntegerLiteral 0x10502be10 <col:9> 'int' 0
