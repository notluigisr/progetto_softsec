TranslationUnitDecl 0x151055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1510564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x151055bd0 '__int128'
|-TypedefDecl 0x151056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x151055bf0 'unsigned __int128'
|-TypedefDecl 0x151126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x151126000 'struct __NSConstantString_tag'
|   `-Record 0x151056580 '__NSConstantString_tag'
|-TypedefDecl 0x151126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x151055d90 '__SVInt8_t'
|-TypedefDecl 0x151126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x151055db0 '__SVInt16_t'
|-TypedefDecl 0x151126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x151055dd0 '__SVInt32_t'
|-TypedefDecl 0x1511263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x151055df0 '__SVInt64_t'
|-TypedefDecl 0x151126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x151055e10 '__SVUint8_t'
|-TypedefDecl 0x1511264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x151055e30 '__SVUint16_t'
|-TypedefDecl 0x151126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x151055e50 '__SVUint32_t'
|-TypedefDecl 0x151126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x151055e70 '__SVUint64_t'
|-TypedefDecl 0x1511265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x151055e90 '__SVFloat16_t'
|-TypedefDecl 0x151126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x151055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1511266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x151055ed0 '__SVFloat64_t'
|-TypedefDecl 0x151126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x151055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x151126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x151055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1511267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x151055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x151126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x151055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1511268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x151055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x151126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x151055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x151126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x151055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1511269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x151055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x151126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x151055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x151126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x151056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x151126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x151056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x151126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x151056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x151126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x151056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x151126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x151056090 '__clang_svint8x3_t'
|-TypedefDecl 0x151126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1510560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x151126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1510560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x151126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1510560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x151126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x151056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x151126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x151056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x151126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x151056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x151126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x151056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x151126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x151056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x151127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1510561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x151127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1510561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1511278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1510561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x151127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x151056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1511279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x151056230 '__clang_svint16x4_t'
|-TypedefDecl 0x151127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x151056250 '__clang_svint32x4_t'
|-TypedefDecl 0x151127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x151056270 '__clang_svint64x4_t'
|-TypedefDecl 0x151127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x151056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x151127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1510562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x151127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1510562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x151127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1510562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x151127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x151056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x151127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x151056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x151127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x151056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x151127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x151056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x151127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x151056390 '__SVBool_t'
|-TypedefDecl 0x151127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1510563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x151127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1510563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x151127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1510563f0 '__SVCount_t'
|-TypedefDecl 0x151127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x151127fb0 'char *'
|   `-BuiltinType 0x1510556b0 'char'
|-TypedefDecl 0x151128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x151127fb0 'char *'
|   `-BuiltinType 0x1510556b0 'char'
|-FunctionDecl 0x151128258 <dataset_diviso_filec/func3794_vuln.c:1:1, line:48:1> line:1:1 invalid messageFindArgument 'int (const int *, const char *)'
| |-ParmVarDecl 0x1511280f0 <col:21, col:36> col:36 invalid m 'const int *'
| |-ParmVarDecl 0x151128170 <col:39, col:51> col:51 used variable 'const char *'
| `-CompoundStmt 0x151143518 <line:2:1, line:48:1>
|   |-DeclStmt 0x151128390 <line:3:2, col:7>
|   | `-VarDecl 0x151128328 <col:2, col:6> col:6 used i 'int'
|   |-UnaryExprOrTypeTraitExpr 0x151128400 <line:4:2, col:9> 'unsigned long' contains-errors sizeof
|   | `-RecoveryExpr 0x1511283e0 <col:9> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x151128660 <line:6:2, col:18> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x151128580 <col:2> 'int ()' Function 0x1511284c8 'assert' 'int ()'
|   | `-BinaryOperator 0x151128640 <col:9, col:14> 'int' contains-errors '!='
|   |   |-RecoveryExpr 0x1511285a0 <col:9> '<dependent type>' contains-errors lvalue
|   |   `-RecoveryExpr 0x151128620 <col:14> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x151128768 <line:7:2, col:25> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x151128688 <col:2> 'int ()' Function 0x1511284c8 'assert' 'int ()'
|   | `-BinaryOperator 0x151128748 <col:9, col:21> 'int' contains-errors '!='
|   |   |-DeclRefExpr 0x1511286a8 <col:9> 'const char *' lvalue ParmVar 0x151128170 'variable' 'const char *'
|   |   `-RecoveryExpr 0x151128728 <col:21> '<dependent type>' contains-errors lvalue
|   `-ForStmt 0x1511434e0 <line:11:2, line:46:2>
|     |-BinaryOperator 0x151141e88 <line:11:6, col:10> 'int' '='
|     | |-DeclRefExpr 0x151141e48 <col:6> 'int' lvalue Var 0x151128328 'i' 'int'
|     | `-IntegerLiteral 0x151141e68 <col:10> 'int' 0
|     |-<<<NULL>>>
|     |-BinaryOperator 0x151141f30 <col:13, col:20> 'int' contains-errors '<'
|     | |-DeclRefExpr 0x151141ea8 <col:13> 'int' lvalue Var 0x151128328 'i' 'int'
|     | `-CXXDependentScopeMemberExpr 0x151141ee8 <col:17, col:20> '<dependent type>' contains-errors lvalue ->numberOfArguments
|     |   `-RecoveryExpr 0x151141ec8 <col:17> '<dependent type>' contains-errors lvalue
|     |-UnaryOperator 0x151141f70 <col:39, col:40> 'int' postfix '++'
|     | `-DeclRefExpr 0x151141f50 <col:39> 'int' lvalue Var 0x151128328 'i' 'int'
|     `-CompoundStmt 0x1511434b0 <col:44, line:46:2>
|       |-DeclStmt 0x151142008 <line:12:3, col:18>
|       | `-VarDecl 0x151141fa0 <col:3, col:15> col:15 used ptr 'const char *'
|       |-BinaryOperator 0x1511421b0 <line:14:3, col:32> 'const char *' contains-errors '='
|       | |-DeclRefExpr 0x151142020 <col:3> 'const char *' lvalue Var 0x151141fa0 'ptr' 'const char *'
|       | `-CallExpr 0x151142180 <col:9, col:32> '<dependent type>' contains-errors
|       |   |-DeclRefExpr 0x151142120 <col:9> 'int ()' Function 0x151142068 'messageGetArgument' 'int ()'
|       |   |-RecoveryExpr 0x151142140 <col:28> '<dependent type>' contains-errors lvalue
|       |   `-DeclRefExpr 0x151142160 <col:31> 'int' lvalue Var 0x151128328 'i' 'int'
|       |-IfStmt 0x151142328 <line:15:3, line:16:4>
|       | |-RecoveryExpr 0x151142300 <line:15:6, col:36> '_Bool' contains-errors
|       | `-ContinueStmt 0x151142320 <line:16:4>
|       `-IfStmt 0x151143490 <line:21:3, line:45:3>
|         |-BinaryOperator 0x1511427c0 <line:21:6, col:41> 'int' contains-errors '=='
|         | |-CallExpr 0x151142788 <col:6, col:36> '<dependent type>' contains-errors
|         | | |-DeclRefExpr 0x1511425e8 <col:6> 'int (const char *, const char *, unsigned long)' Function 0x151142398 'strncasecmp' 'int (const char *, const char *, unsigned long)'
|         | | |-DeclRefExpr 0x151142608 <col:18> 'const char *' lvalue Var 0x151141fa0 'ptr' 'const char *'
|         | | |-DeclRefExpr 0x151142628 <col:23> 'const char *' lvalue ParmVar 0x151128170 'variable' 'const char *'
|         | | `-RecoveryExpr 0x151142720 <col:33> '<dependent type>' contains-errors lvalue
|         | `-IntegerLiteral 0x1511426e0 <col:41> 'int' 0
|         `-CompoundStmt 0x151143460 <col:44, line:45:3>
|           |-WhileStmt 0x151808f88 <line:23:4, line:24:8>
|           | |-CallExpr 0x151808ef8 <line:23:10, col:22> 'int'
|           | | |-ImplicitCastExpr 0x151808ee0 <col:10> 'int (*)(int)' <FunctionToPointerDecay>
|           | | | `-DeclRefExpr 0x151808e38 <col:10> 'int (int)' Function 0x151808c78 'isspace' 'int (int)'
|           | | `-ImplicitCastExpr 0x151808f38 <col:18, col:19> 'int' <IntegralCast>
|           | |   `-ImplicitCastExpr 0x151808f20 <col:18, col:19> 'char' <LValueToRValue>
|           | |     `-UnaryOperator 0x151808e90 <col:18, col:19> 'const char' lvalue prefix '*' cannot overflow
|           | |       `-ImplicitCastExpr 0x151808e78 <col:19> 'const char *' <LValueToRValue>
|           | |         `-DeclRefExpr 0x151808e58 <col:19> 'const char *' lvalue Var 0x151141fa0 'ptr' 'const char *'
|           | `-UnaryOperator 0x151808f70 <line:24:5, col:8> 'const char *' postfix '++'
|           |   `-DeclRefExpr 0x151808f50 <col:5> 'const char *' lvalue Var 0x151141fa0 'ptr' 'const char *'
|           |-IfStmt 0x151809310 <line:25:4, line:28:4>
|           | |-BinaryOperator 0x151809040 <line:25:7, col:15> 'int' '!='
|           | | |-ImplicitCastExpr 0x151809028 <col:7, col:8> 'int' <IntegralCast>
|           | | | `-ImplicitCastExpr 0x151809010 <col:7, col:8> 'char' <LValueToRValue>
|           | | |   `-UnaryOperator 0x151808fe0 <col:7, col:8> 'const char' lvalue prefix '*' cannot overflow
|           | | |     `-ImplicitCastExpr 0x151808fc8 <col:8> 'const char *' <LValueToRValue>
|           | | |       `-DeclRefExpr 0x151808fa8 <col:8> 'const char *' lvalue Var 0x151141fa0 'ptr' 'const char *'
|           | | `-CharacterLiteral 0x151808ff8 <col:15> 'int' 61
|           | `-CompoundStmt 0x1518092f0 <col:20, line:28:4>
|           |   |-CallExpr 0x151809270 <line:26:5, col:57> '<dependent type>' contains-errors
|           |   | |-DeclRefExpr 0x151809140 <col:5> 'int ()' Function 0x151809088 'cli_dbgmsg' 'int ()'
|           |   | |-StringLiteral 0x1518091a0 <col:16> 'char[4]' lvalue "STR"
|           |   | |-DeclRefExpr 0x1518091c0 <col:23> 'const char *' lvalue ParmVar 0x151128170 'variable' 'const char *'
|           |   | `-CallExpr 0x151809240 <col:33, col:56> '<dependent type>' contains-errors
|           |   |   |-DeclRefExpr 0x1518091e0 <col:33> 'int ()' Function 0x151142068 'messageGetArgument' 'int ()'
|           |   |   |-RecoveryExpr 0x151809200 <col:52> '<dependent type>' contains-errors lvalue
|           |   |   `-DeclRefExpr 0x151809220 <col:55> 'int' lvalue Var 0x151128328 'i' 'int'
|           |   `-ReturnStmt 0x1518092e0 <line:27:5, col:12>
|           |     `-RecoveryExpr 0x1518092c0 <col:12> '<dependent type>' contains-errors lvalue
|           |-IfStmt 0x151143398 <line:29:4, line:43:4>
|           | |-BinaryOperator 0x151809540 <line:29:7, col:30> 'int' contains-errors '!='
|           | | |-ParenExpr 0x151809500 <col:7, col:25> 'int'
|           | | | `-BinaryOperator 0x1518094e0 <col:8, col:18> 'int' '=='
|           | | |   |-ImplicitCastExpr 0x1518094c8 <col:8, col:11> 'int' <IntegralCast>
|           | | |   | `-ImplicitCastExpr 0x1518094b0 <col:8, col:11> 'char' <LValueToRValue>
|           | | |   |   `-UnaryOperator 0x151809368 <col:8, col:11> 'const char' lvalue prefix '*' cannot overflow
|           | | |   |     `-UnaryOperator 0x151809350 <col:9, col:11> 'const char *' prefix '++'
|           | | |   |       `-DeclRefExpr 0x151809330 <col:11> 'const char *' lvalue Var 0x151141fa0 'ptr' 'const char *'
|           | | |   `-CharacterLiteral 0x151809380 <col:18> 'int' 1398034978
|           | | `-RecoveryExpr 0x151809520 <col:30> '<dependent type>' contains-errors lvalue
|           | `-CompoundStmt 0x151143368 <col:37, line:43:4>
|           |   |-DeclStmt 0x1518097a8 <line:31:5, col:34>
|           |   | `-VarDecl 0x151809578 <col:5, col:33> col:11 used ret 'char *' cinit
|           |   |   `-ImplicitCastExpr 0x151809790 <col:17, col:33> 'char *' <IntegralToPointer>
|           |   |     `-CallExpr 0x151809768 <col:17, col:33> 'int'
|           |   |       |-ImplicitCastExpr 0x151809750 <col:17> 'int (*)()' <FunctionToPointerDecay>
|           |   |       | `-DeclRefExpr 0x1518096c0 <col:17> 'int ()' Function 0x151809608 'cli_strdup' 'int ()'
|           |   |       `-UnaryOperator 0x151809700 <col:28, col:30> 'const char *' prefix '++'
|           |   |         `-DeclRefExpr 0x1518096e0 <col:30> 'const char *' lvalue Var 0x151141fa0 'ptr' 'const char *'
|           |   |-DeclStmt 0x151809840 <line:32:5, col:12>
|           |   | `-VarDecl 0x1518097d8 <col:5, col:11> col:11 used p 'char *'
|           |   |-IfStmt 0x1511432e8 <line:38:5, line:41:5>
|           |   | |-RecoveryExpr 0x151143040 <line:38:8, col:34> '_Bool' contains-errors
|           |   | `-CompoundStmt 0x1511432c8 <col:40, line:41:5>
|           |   |   |-BinaryOperator 0x151143208 <line:39:6, col:29> 'char' '='
|           |   |   | |-ArraySubscriptExpr 0x1511431b8 <col:6, col:25> 'char' lvalue
|           |   |   | | |-ImplicitCastExpr 0x1511431a0 <col:6> 'char *' <LValueToRValue>
|           |   |   | | | `-DeclRefExpr 0x151143060 <col:6> 'char *' lvalue Var 0x151809578 'ret' 'char *'
|           |   |   | | `-BinaryOperator 0x151143180 <col:10, col:24> 'unsigned long' '-'
|           |   |   | |   |-CallExpr 0x1511430f0 <col:10, col:20> 'unsigned long'
|           |   |   | |   | |-ImplicitCastExpr 0x1511430d8 <col:10> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|           |   |   | |   | | `-DeclRefExpr 0x151143080 <col:10> 'unsigned long (const char *)' Function 0x151141bf0 'strlen' 'unsigned long (const char *)'
|           |   |   | |   | `-ImplicitCastExpr 0x151143130 <col:17> 'const char *' <NoOp>
|           |   |   | |   |   `-ImplicitCastExpr 0x151143118 <col:17> 'char *' <LValueToRValue>
|           |   |   | |   |     `-DeclRefExpr 0x1511430a0 <col:17> 'char *' lvalue Var 0x151809578 'ret' 'char *'
|           |   |   | |   `-ImplicitCastExpr 0x151143168 <col:24> 'unsigned long' <IntegralCast>
|           |   |   | |     `-IntegerLiteral 0x151143148 <col:24> 'int' 1
|           |   |   | `-ImplicitCastExpr 0x1511431f0 <col:29> 'char' <IntegralCast>
|           |   |   |   `-CharacterLiteral 0x1511431d8 <col:29> 'int' 0
|           |   |   `-BinaryOperator 0x1511432a8 <line:40:6, col:11> 'char' '='
|           |   |     |-UnaryOperator 0x151143260 <col:6, col:7> 'char' lvalue prefix '*' cannot overflow
|           |   |     | `-ImplicitCastExpr 0x151143248 <col:7> 'char *' <LValueToRValue>
|           |   |     |   `-DeclRefExpr 0x151143228 <col:7> 'char *' lvalue Var 0x1518097d8 'p' 'char *'
|           |   |     `-ImplicitCastExpr 0x151143290 <col:11> 'char' <IntegralCast>
|           |   |       `-CharacterLiteral 0x151143278 <col:11> 'int' 0
|           |   `-ReturnStmt 0x151143358 <line:42:5, col:12>
|           |     `-ImplicitCastExpr 0x151143340 <col:12> 'int' <PointerToIntegral>
|           |       `-ImplicitCastExpr 0x151143328 <col:12> 'char *' <LValueToRValue>
|           |         `-DeclRefExpr 0x151143308 <col:12> 'char *' lvalue Var 0x151809578 'ret' 'char *'
|           `-ReturnStmt 0x151143450 <line:44:4, col:25>
|             `-CallExpr 0x151143410 <col:11, col:25> 'int'
|               |-ImplicitCastExpr 0x1511433f8 <col:11> 'int (*)()' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x1511433b8 <col:11> 'int ()' Function 0x151809608 'cli_strdup' 'int ()'
|               `-ImplicitCastExpr 0x151143438 <col:22> 'const char *' <LValueToRValue>
|                 `-DeclRefExpr 0x1511433d8 <col:22> 'const char *' lvalue Var 0x151141fa0 'ptr' 'const char *'
|-FunctionDecl 0x151141bf0 <line:9:8> col:8 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x151141cf0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x151141c98 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x151142398 <line:21:6> col:6 implicit used strncasecmp 'int (const char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x151142498 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x151142500 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x151142568 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x151142440 <<invalid sloc>> Implicit 958
|-FunctionDecl 0x151808c78 <line:23:10> col:10 implicit used isspace 'int (int)' extern
| |-ParmVarDecl 0x151808d78 <<invalid sloc>> <invalid sloc> 'int'
| |-BuiltinAttr 0x151808d20 <<invalid sloc>> Implicit 929
| |-NoThrowAttr 0x151808de8 <col:10> Implicit
| `-PureAttr 0x151808e10 <col:10> Implicit
`-FunctionDecl 0x151809900 <line:38:13> col:13 implicit used strchr 'char *(const char *, int)' extern
  |-ParmVarDecl 0x151809a00 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x151809a68 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x1518099a8 <<invalid sloc>> Implicit 893
