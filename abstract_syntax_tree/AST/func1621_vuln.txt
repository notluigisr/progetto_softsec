TranslationUnitDecl 0x13c855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13c8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13c855bd0 '__int128'
|-TypedefDecl 0x13c856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13c855bf0 'unsigned __int128'
|-TypedefDecl 0x13c926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13c926000 'struct __NSConstantString_tag'
|   `-Record 0x13c856580 '__NSConstantString_tag'
|-TypedefDecl 0x13c926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13c855d90 '__SVInt8_t'
|-TypedefDecl 0x13c926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13c855db0 '__SVInt16_t'
|-TypedefDecl 0x13c926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13c855dd0 '__SVInt32_t'
|-TypedefDecl 0x13c9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13c855df0 '__SVInt64_t'
|-TypedefDecl 0x13c926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13c855e10 '__SVUint8_t'
|-TypedefDecl 0x13c9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13c855e30 '__SVUint16_t'
|-TypedefDecl 0x13c926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13c855e50 '__SVUint32_t'
|-TypedefDecl 0x13c926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13c855e70 '__SVUint64_t'
|-TypedefDecl 0x13c9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13c855e90 '__SVFloat16_t'
|-TypedefDecl 0x13c926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13c855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13c9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13c855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13c926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13c855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13c926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13c855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13c9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13c855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13c926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13c855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13c9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13c855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13c926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13c855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13c926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13c855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13c9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13c855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13c926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13c855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13c926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13c856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13c926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13c856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13c926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13c856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13c926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13c856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13c926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13c856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13c926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13c8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13c926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13c8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13c926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13c8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13c926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13c856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13c926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13c856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13c926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13c856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13c926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13c856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13c926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13c856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13c927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13c8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13c927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13c8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13c9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13c8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13c927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13c856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13c9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13c856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13c927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13c856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13c927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13c856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13c927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13c856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13c927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13c8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13c927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13c8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13c927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13c8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13c927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13c856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13c927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13c856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13c927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13c856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13c927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13c856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13c927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13c856390 '__SVBool_t'
|-TypedefDecl 0x13c927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13c8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13c927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13c8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13c927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13c8563f0 '__SVCount_t'
|-TypedefDecl 0x13c927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13c927fb0 'char *'
|   `-BuiltinType 0x13c8556b0 'char'
|-TypedefDecl 0x13c928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13c927fb0 'char *'
|   `-BuiltinType 0x13c8556b0 'char'
|-FunctionDecl 0x13c928418 <dataset_diviso_filec/func1621_vuln.c:1:1, line:52:1> line:1:12 invalid oidc_cache_crypto_decrypt 'int (int *, const char *, unsigned char *, unsigned char **)' static
| |-ParmVarDecl 0x13c928128 <col:38, col:51> col:51 invalid r 'int *'
| |-ParmVarDecl 0x13c9281a8 <col:54, col:66> col:66 used cache_value 'const char *'
| |-ParmVarDecl 0x13c928258 <line:2:3, col:18> col:18 used key 'unsigned char *'
| |-ParmVarDecl 0x13c928310 <col:23, col:39> col:39 used plaintext 'unsigned char **'
| `-CompoundStmt 0x13c945f08 <col:50, line:52:1>
|   |-DeclStmt 0x13c928598 <line:4:2, col:14>
|   | `-VarDecl 0x13c9284f8 <col:2, col:13> col:6 used len 'int' cinit
|   |   `-UnaryOperator 0x13c928580 <col:12, col:13> 'int' prefix '-'
|   |     `-IntegerLiteral 0x13c928560 <col:13> 'int' 1
|   |-DeclStmt 0x13c941e10 <line:7:2, col:48>
|   | `-VarDecl 0x13c9285c8 <col:2, col:47> col:8 used encoded_tag 'char *' cinit
|   |   `-CallExpr 0x13c941d98 <col:22, col:47> 'char *'
|   |     |-ImplicitCastExpr 0x13c941d80 <col:22> 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13c941c80 <col:22> 'char *(const char *, const char *)' Function 0x13c941aa0 'strstr' 'char *(const char *, const char *)'
|   |     |-ImplicitCastExpr 0x13c941dc8 <col:29> 'const char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x13c941ca0 <col:29> 'const char *' lvalue ParmVar 0x13c9281a8 'cache_value' 'const char *'
|   |     `-ImplicitCastExpr 0x13c941df8 <col:42> 'const char *' <NoOp>
|   |       `-ImplicitCastExpr 0x13c941de0 <col:42> 'char *' <ArrayToPointerDecay>
|   |         `-StringLiteral 0x13c941d00 <col:42> 'char[4]' lvalue "STR"
|   |-IfStmt 0x13c942118 <line:8:2, line:12:2>
|   | |-BinaryOperator 0x13c941ea0 <line:8:6, col:21> 'int' contains-errors '=='
|   | | |-DeclRefExpr 0x13c941e28 <col:6> 'char *' lvalue Var 0x13c9285c8 'encoded_tag' 'char *'
|   | | `-RecoveryExpr 0x13c941e80 <col:21> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x13c9420f8 <col:27, line:12:2>
|   |   |-CallExpr 0x13c942080 <line:9:3, line:10:10> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x13c942020 <line:9:3> 'int ()' Function 0x13c941f68 'oidc_error' 'int ()'
|   |   | |-RecoveryExpr 0x13c942040 <col:14> '<dependent type>' contains-errors lvalue
|   |   | `-StringLiteral 0x13c942060 <line:10:5> 'char[4]' lvalue "STR"
|   |   `-ReturnStmt 0x13c9420e8 <line:11:3, col:10>
|   |     `-RecoveryExpr 0x13c9420c8 <col:10> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x13c942688 <line:15:2, line:16:45> 'const char *' contains-errors '='
|   | |-DeclRefExpr 0x13c942138 <line:15:2> 'const char *' lvalue ParmVar 0x13c9281a8 'cache_value' 'const char *'
|   | `-CallExpr 0x13c942650 <col:16, line:16:45> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x13c942238 <line:15:16> 'int ()' Function 0x13c942180 'apr_pstrmemdup' 'int ()'
|   |   |-CXXDependentScopeMemberExpr 0x13c942278 <col:31, col:34> '<dependent type>' contains-errors lvalue ->pool
|   |   | `-RecoveryExpr 0x13c942258 <col:31> '<dependent type>' contains-errors lvalue
|   |   |-DeclRefExpr 0x13c9422c0 <col:40> 'const char *' lvalue ParmVar 0x13c9281a8 'cache_value' 'const char *'
|   |   `-BinaryOperator 0x13c942630 <line:16:4, col:44> 'unsigned long' '-'
|   |     |-CallExpr 0x13c942528 <col:4, col:22> 'unsigned long'
|   |     | |-ImplicitCastExpr 0x13c942510 <col:4> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x13c942488 <col:4> 'unsigned long (const char *)' Function 0x13c942318 'strlen' 'unsigned long (const char *)'
|   |     | `-ImplicitCastExpr 0x13c942550 <col:11> 'const char *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x13c9424a8 <col:11> 'const char *' lvalue ParmVar 0x13c9281a8 'cache_value' 'const char *'
|   |     `-CallExpr 0x13c9425d8 <col:26, col:44> 'unsigned long'
|   |       |-ImplicitCastExpr 0x13c9425c0 <col:26> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x13c942568 <col:26> 'unsigned long (const char *)' Function 0x13c942318 'strlen' 'unsigned long (const char *)'
|   |       `-ImplicitCastExpr 0x13c942618 <col:33> 'const char *' <NoOp>
|   |         `-ImplicitCastExpr 0x13c942600 <col:33> 'char *' <LValueToRValue>
|   |           `-DeclRefExpr 0x13c942588 <col:33> 'char *' lvalue Var 0x13c9285c8 'encoded_tag' 'char *'
|   |-UnaryOperator 0x13c9426c8 <line:17:2, col:13> 'char *' postfix '++'
|   | `-DeclRefExpr 0x13c9426a8 <col:2> 'char *' lvalue Var 0x13c9285c8 'encoded_tag' 'char *'
|   |-DeclStmt 0x13c942798 <line:20:2, col:22>
|   | `-VarDecl 0x13c9426f8 <col:2, col:18> col:8 used d_bytes 'char *' cinit
|   |   `-RecoveryExpr 0x13c942778 <col:18> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x13c943690 <line:21:2, col:67>
|   | `-VarDecl 0x13c943400 <col:2, col:66> col:6 used d_len 'int' cinit
|   |   `-CallExpr 0x13c943658 <col:14, col:66> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x13c943548 <col:14> 'int ()' Function 0x13c943490 'oidc_base64url_decode' 'int ()'
|   |     |-CXXDependentScopeMemberExpr 0x13c943588 <col:36, col:39> '<dependent type>' contains-errors lvalue ->pool
|   |     | `-RecoveryExpr 0x13c943568 <col:36> '<dependent type>' contains-errors lvalue
|   |     |-UnaryOperator 0x13c943620 <col:45, col:46> 'char **' contains-errors prefix '&' cannot overflow
|   |     | `-DeclRefExpr 0x13c9435d0 <col:46> 'char *' contains-errors lvalue Var 0x13c9426f8 'd_bytes' 'char *'
|   |     `-DeclRefExpr 0x13c943638 <col:55> 'const char *' lvalue ParmVar 0x13c9281a8 'cache_value' 'const char *'
|   |-DeclStmt 0x13c943760 <line:24:2, col:22>
|   | `-VarDecl 0x13c9436c0 <col:2, col:18> col:8 used t_bytes 'char *' cinit
|   |   `-RecoveryExpr 0x13c943740 <col:18> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x13c943910 <line:25:2, col:67>
|   | `-VarDecl 0x13c943790 <col:2, col:66> col:6 used t_len 'int' cinit
|   |   `-CallExpr 0x13c9438d8 <col:14, col:66> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x13c9437f8 <col:14> 'int ()' Function 0x13c943490 'oidc_base64url_decode' 'int ()'
|   |     |-CXXDependentScopeMemberExpr 0x13c943838 <col:36, col:39> '<dependent type>' contains-errors lvalue ->pool
|   |     | `-RecoveryExpr 0x13c943818 <col:36> '<dependent type>' contains-errors lvalue
|   |     |-UnaryOperator 0x13c9438a0 <col:45, col:46> 'char **' contains-errors prefix '&' cannot overflow
|   |     | `-DeclRefExpr 0x13c943880 <col:46> 'char *' contains-errors lvalue Var 0x13c9436c0 't_bytes' 'char *'
|   |     `-DeclRefExpr 0x13c9438b8 <col:55> 'char *' lvalue Var 0x13c9285c8 'encoded_tag' 'char *'
|   |-IfStmt 0x13c945ea0 <line:28:2, line:49:2>
|   | |-BinaryOperator 0x13c943a58 <line:28:6, col:31> 'int' contains-errors '&&'
|   | | |-ParenExpr 0x13c9439a0 <col:6, col:16> 'int' contains-errors
|   | | | `-BinaryOperator 0x13c943980 <col:7, col:15> 'int' contains-errors '>'
|   | | |   |-ImplicitCastExpr 0x13c943968 <col:7> 'int' contains-errors <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x13c943928 <col:7> 'int' contains-errors lvalue Var 0x13c943400 'd_len' 'int'
|   | | |   `-IntegerLiteral 0x13c943948 <col:15> 'int' 0
|   | | `-ParenExpr 0x13c943a38 <col:21, col:31> 'int' contains-errors
|   | |   `-BinaryOperator 0x13c943a18 <col:22, col:30> 'int' contains-errors '>'
|   | |     |-ImplicitCastExpr 0x13c943a00 <col:22> 'int' contains-errors <LValueToRValue>
|   | |     | `-DeclRefExpr 0x13c9439c0 <col:22> 'int' contains-errors lvalue Var 0x13c943790 't_len' 'int'
|   | |     `-IntegerLiteral 0x13c9439e0 <col:30> 'int' 0
|   | `-CompoundStmt 0x13c945e88 <col:34, line:49:2>
|   |   `-IfStmt 0x13c945e58 <line:43:3, line:47:3> has_else
|   |     |-BinaryOperator 0x13c9441a0 <line:43:7, col:14> 'int' '>'
|   |     | |-ImplicitCastExpr 0x13c944188 <col:7> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x13c944130 <col:7> 'int' lvalue Var 0x13c9284f8 'len' 'int'
|   |     | `-UnaryOperator 0x13c944170 <col:13, col:14> 'int' prefix '-'
|   |     |   `-IntegerLiteral 0x13c944150 <col:14> 'int' 1
|   |     |-CompoundStmt 0x13c9442f0 <col:17, line:45:3>
|   |     | `-BinaryOperator 0x13c9442d0 <line:44:4, col:24> 'unsigned char' '='
|   |     |   |-ArraySubscriptExpr 0x13c944280 <col:4, col:20> 'unsigned char' lvalue
|   |     |   | |-ImplicitCastExpr 0x13c944250 <col:4, col:15> 'unsigned char *' <LValueToRValue>
|   |     |   | | `-ParenExpr 0x13c944210 <col:4, col:15> 'unsigned char *' lvalue
|   |     |   | |   `-UnaryOperator 0x13c9441f8 <col:5, col:6> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |     |   | |     `-ImplicitCastExpr 0x13c9441e0 <col:6> 'unsigned char **' <LValueToRValue>
|   |     |   | |       `-DeclRefExpr 0x13c9441c0 <col:6> 'unsigned char **' lvalue ParmVar 0x13c928310 'plaintext' 'unsigned char **'
|   |     |   | `-ImplicitCastExpr 0x13c944268 <col:17> 'int' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x13c944230 <col:17> 'int' lvalue Var 0x13c9284f8 'len' 'int'
|   |     |   `-ImplicitCastExpr 0x13c9442b8 <col:24> 'unsigned char' <IntegralCast>
|   |     |     `-CharacterLiteral 0x13c9442a0 <col:24> 'int' 0
|   |     `-CompoundStmt 0x13c945e40 <line:45:10, line:47:3>
|   |       `-BinaryOperator 0x13c945e20 <line:46:4, col:17> 'unsigned char *' contains-errors '='
|   |         |-UnaryOperator 0x13c9443d8 <col:4, col:5> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |         | `-ImplicitCastExpr 0x13c9443c0 <col:5> 'unsigned char **' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x13c944308 <col:5> 'unsigned char **' lvalue ParmVar 0x13c928310 'plaintext' 'unsigned char **'
|   |         `-RecoveryExpr 0x13c945e00 <col:17> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x13c945ef8 <line:51:2, col:9>
|     `-ImplicitCastExpr 0x13c945ee0 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x13c945ec0 <col:9> 'int' lvalue Var 0x13c9284f8 'len' 'int'
|-FunctionDecl 0x13c941aa0 <line:7:22> col:22 implicit used strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x13c941ba0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x13c941c08 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x13c941b48 <<invalid sloc>> Implicit 898
`-FunctionDecl 0x13c942318 <line:16:4> col:4 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x13c942418 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x13c9423c0 <<invalid sloc>> Implicit 902
