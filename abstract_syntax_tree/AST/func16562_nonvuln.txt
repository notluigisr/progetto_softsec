TranslationUnitDecl 0x128055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1280564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x128055bd0 '__int128'
|-TypedefDecl 0x128056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x128055bf0 'unsigned __int128'
|-TypedefDecl 0x128126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x128126000 'struct __NSConstantString_tag'
|   `-Record 0x128056580 '__NSConstantString_tag'
|-TypedefDecl 0x128126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x128055d90 '__SVInt8_t'
|-TypedefDecl 0x128126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x128055db0 '__SVInt16_t'
|-TypedefDecl 0x128126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x128055dd0 '__SVInt32_t'
|-TypedefDecl 0x1281263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x128055df0 '__SVInt64_t'
|-TypedefDecl 0x128126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x128055e10 '__SVUint8_t'
|-TypedefDecl 0x1281264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x128055e30 '__SVUint16_t'
|-TypedefDecl 0x128126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x128055e50 '__SVUint32_t'
|-TypedefDecl 0x128126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x128055e70 '__SVUint64_t'
|-TypedefDecl 0x1281265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x128055e90 '__SVFloat16_t'
|-TypedefDecl 0x128126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x128055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1281266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x128055ed0 '__SVFloat64_t'
|-TypedefDecl 0x128126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x128055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x128126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x128055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1281267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x128055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x128126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x128055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1281268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x128055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x128126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x128055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x128126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x128055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1281269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x128055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x128126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x128055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x128126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x128056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x128126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x128056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x128126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x128056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x128126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x128056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x128126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x128056090 '__clang_svint8x3_t'
|-TypedefDecl 0x128126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1280560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x128126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1280560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x128126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1280560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x128126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x128056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x128126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x128056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x128126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x128056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x128126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x128056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x128126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x128056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x128127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1280561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x128127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1280561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1281278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1280561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x128127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x128056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1281279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x128056230 '__clang_svint16x4_t'
|-TypedefDecl 0x128127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x128056250 '__clang_svint32x4_t'
|-TypedefDecl 0x128127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x128056270 '__clang_svint64x4_t'
|-TypedefDecl 0x128127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x128056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x128127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1280562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x128127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1280562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x128127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1280562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x128127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x128056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x128127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x128056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x128127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x128056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x128127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x128056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x128127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x128056390 '__SVBool_t'
|-TypedefDecl 0x128127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1280563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x128127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1280563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x128127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1280563f0 '__SVCount_t'
|-TypedefDecl 0x128127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x128127fb0 'char *'
|   `-BuiltinType 0x1280556b0 'char'
|-TypedefDecl 0x128128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x128127fb0 'char *'
|   `-BuiltinType 0x1280556b0 'char'
`-FunctionDecl 0x128128288 <dataset_diviso_filec/func16562_nonvuln.c:1:1, line:14:1> line:1:16 invalid decode_rice 'int (int *, unsigned int)' static
  |-ParmVarDecl 0x128128128 <col:28, col:43> col:43 invalid gb 'int *'
  |-ParmVarDecl 0x1281281a8 <col:47, col:60> col:60 used k 'unsigned int'
  `-CompoundStmt 0x128142130 <line:2:1, line:14:1>
    |-DeclStmt 0x1281285c8 <line:3:5, col:36>
    | `-VarDecl 0x128128358 <col:5, col:35> col:9 used max 'int' cinit
    |   `-BinaryOperator 0x1281285a8 <col:15, col:35> '<dependent type>' contains-errors '-'
    |     |-CallExpr 0x128128560 <col:15, col:31> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x128128520 <col:15> 'int ()' Function 0x128128468 'get_bits_left' 'int ()'
    |     | `-RecoveryExpr 0x128128540 <col:29> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x128128588 <col:35> 'unsigned int' lvalue ParmVar 0x1281281a8 'k' 'unsigned int'
    |-DeclStmt 0x128141800 <line:4:5, col:36>
    | `-VarDecl 0x1281285f8 <col:5, col:35> col:9 used q 'int' cinit
    |   `-CallExpr 0x1281287c0 <col:15, col:35> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x128128740 <col:15> 'int ()' Function 0x128128688 'get_unary' 'int ()'
    |     |-RecoveryExpr 0x128128760 <col:25> '<dependent type>' contains-errors lvalue
    |     |-IntegerLiteral 0x128128780 <col:29> 'int' 0
    |     `-DeclRefExpr 0x1281287a0 <col:32> 'int' contains-errors lvalue Var 0x128128358 'max' 'int'
    |-DeclStmt 0x128141ae0 <line:5:5, col:43>
    | `-VarDecl 0x128141830 <col:5, col:42> col:9 used r 'int' cinit
    |   `-ConditionalOperator 0x128141ab0 <col:15, col:42> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x128141898 <col:15> 'unsigned int' lvalue ParmVar 0x1281281a8 'k' 'unsigned int'
    |     |-CallExpr 0x1281419d8 <col:19, col:31> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x128141998 <col:19> 'int ()' Function 0x1281418e0 'get_bits1' 'int ()'
    |     | `-RecoveryExpr 0x1281419b8 <col:29> '<dependent type>' contains-errors lvalue
    |     `-UnaryOperator 0x128141a98 <col:35, col:42> 'int' contains-errors prefix '!' cannot overflow
    |       `-ParenExpr 0x128141a78 <col:36, col:42> 'int' contains-errors
    |         `-BinaryOperator 0x128141a58 <col:37, col:41> 'int' contains-errors '&'
    |           |-ImplicitCastExpr 0x128141a40 <col:37> 'int' contains-errors <LValueToRValue>
    |           | `-DeclRefExpr 0x128141a00 <col:37> 'int' contains-errors lvalue Var 0x1281285f8 'q' 'int'
    |           `-IntegerLiteral 0x128141a20 <col:41> 'int' 1
    |-IfStmt 0x128142000 <line:7:5, line:12:5> has_else
    | |-BinaryOperator 0x128141b68 <line:7:9, col:13> 'int' '>'
    | | |-ImplicitCastExpr 0x128141b38 <col:9> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x128141af8 <col:9> 'unsigned int' lvalue ParmVar 0x1281281a8 'k' 'unsigned int'
    | | `-ImplicitCastExpr 0x128141b50 <col:13> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x128141b18 <col:13> 'int' 1
    | |-CompoundStmt 0x128141ed0 <col:16, line:10:5>
    | | |-CompoundAssignOperator 0x128141c70 <line:8:9, col:21> 'int' contains-errors '<<=' ComputeLHSTy='int' ComputeResultTy='int'
    | | | |-DeclRefExpr 0x128141b88 <col:9> 'int' contains-errors lvalue Var 0x1281285f8 'q' 'int'
    | | | `-ParenExpr 0x128141c38 <col:15, col:21> 'unsigned int'
    | | |   `-BinaryOperator 0x128141c18 <col:16, col:20> 'unsigned int' '-'
    | | |     |-ImplicitCastExpr 0x128141be8 <col:16> 'unsigned int' <LValueToRValue>
    | | |     | `-DeclRefExpr 0x128141ba8 <col:16> 'unsigned int' lvalue ParmVar 0x1281281a8 'k' 'unsigned int'
    | | |     `-ImplicitCastExpr 0x128141c00 <col:20> 'unsigned int' <IntegralCast>
    | | |       `-IntegerLiteral 0x128141bc8 <col:20> 'int' 1
    | | `-CompoundAssignOperator 0x128141ea0 <line:9:9, col:38> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |   |-DeclRefExpr 0x128141ca0 <col:9> 'int' contains-errors lvalue Var 0x1281285f8 'q' 'int'
    | |   `-CallExpr 0x128141e70 <col:15, col:38> '<dependent type>' contains-errors
    | |     |-DeclRefExpr 0x128141da0 <col:15> 'int ()' Function 0x128141ce8 'get_bits_long' 'int ()'
    | |     |-RecoveryExpr 0x128141dc0 <col:29> '<dependent type>' contains-errors lvalue
    | |     `-BinaryOperator 0x128141e50 <col:33, col:37> 'unsigned int' '-'
    | |       |-ImplicitCastExpr 0x128141e20 <col:33> 'unsigned int' <LValueToRValue>
    | |       | `-DeclRefExpr 0x128141de0 <col:33> 'unsigned int' lvalue ParmVar 0x1281281a8 'k' 'unsigned int'
    | |       `-ImplicitCastExpr 0x128141e38 <col:37> 'unsigned int' <IntegralCast>
    | |         `-IntegerLiteral 0x128141e00 <col:37> 'int' 1
    | `-IfStmt 0x128141fe0 <line:10:12, line:12:5>
    |   |-UnaryOperator 0x128141f28 <line:10:16, col:17> 'int' prefix '!' cannot overflow
    |   | `-ImplicitCastExpr 0x128141f10 <col:17> 'unsigned int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x128141ef0 <col:17> 'unsigned int' lvalue ParmVar 0x1281281a8 'k' 'unsigned int'
    |   `-CompoundStmt 0x128141fc8 <col:20, line:12:5>
    |     `-CompoundAssignOperator 0x128141f98 <line:11:9, col:15> 'int' contains-errors '>>=' ComputeLHSTy='int' ComputeResultTy='int'
    |       |-DeclRefExpr 0x128141f40 <col:9> 'int' contains-errors lvalue Var 0x1281285f8 'q' 'int'
    |       `-IntegerLiteral 0x128141f60 <col:15> 'int' 1
    `-ReturnStmt 0x128142120 <line:13:5, col:21>
      `-ConditionalOperator 0x1281420f0 <col:12, col:21> 'int' contains-errors
        |-ImplicitCastExpr 0x1281420c0 <col:12> 'int' contains-errors <LValueToRValue>
        | `-DeclRefExpr 0x128142030 <col:12> 'int' contains-errors lvalue Var 0x128141830 'r' 'int'
        |-ImplicitCastExpr 0x1281420d8 <col:16> 'int' contains-errors <LValueToRValue>
        | `-DeclRefExpr 0x128142050 <col:16> 'int' contains-errors lvalue Var 0x1281285f8 'q' 'int'
        `-UnaryOperator 0x1281420a8 <col:20, col:21> 'int' contains-errors prefix '~' cannot overflow
          `-ImplicitCastExpr 0x128142090 <col:21> 'int' contains-errors <LValueToRValue>
            `-DeclRefExpr 0x128142070 <col:21> 'int' contains-errors lvalue Var 0x1281285f8 'q' 'int'
