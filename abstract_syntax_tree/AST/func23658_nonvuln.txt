TranslationUnitDecl 0x149828208 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1498290b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1498287d0 '__int128'
|-TypedefDecl 0x149829128 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1498287f0 'unsigned __int128'
|-TypedefDecl 0x14a80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14a80bc00 'struct __NSConstantString_tag'
|   `-Record 0x149829180 '__NSConstantString_tag'
|-TypedefDecl 0x14a80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x149828990 '__SVInt8_t'
|-TypedefDecl 0x14a80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1498289b0 '__SVInt16_t'
|-TypedefDecl 0x14a80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1498289d0 '__SVInt32_t'
|-TypedefDecl 0x14a80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1498289f0 '__SVInt64_t'
|-TypedefDecl 0x14a80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x149828a10 '__SVUint8_t'
|-TypedefDecl 0x14a80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x149828a30 '__SVUint16_t'
|-TypedefDecl 0x14a80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x149828a50 '__SVUint32_t'
|-TypedefDecl 0x14a80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x149828a70 '__SVUint64_t'
|-TypedefDecl 0x14a80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x149828a90 '__SVFloat16_t'
|-TypedefDecl 0x14a80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x149828ab0 '__SVFloat32_t'
|-TypedefDecl 0x14a80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x149828ad0 '__SVFloat64_t'
|-TypedefDecl 0x14a80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x149828af0 '__SVBfloat16_t'
|-TypedefDecl 0x14a80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x149828b10 '__clang_svint8x2_t'
|-TypedefDecl 0x14a80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x149828b30 '__clang_svint16x2_t'
|-TypedefDecl 0x14a80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x149828b50 '__clang_svint32x2_t'
|-TypedefDecl 0x14a80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x149828b70 '__clang_svint64x2_t'
|-TypedefDecl 0x14a80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x149828b90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14a80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x149828bb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14a80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x149828bd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14a80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x149828bf0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14a80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x149828c10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14a80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x149828c30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14a80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x149828c50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14a80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x149828c70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14a80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x149828c90 '__clang_svint8x3_t'
|-TypedefDecl 0x14a80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x149828cb0 '__clang_svint16x3_t'
|-TypedefDecl 0x14a80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x149828cd0 '__clang_svint32x3_t'
|-TypedefDecl 0x14a80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x149828cf0 '__clang_svint64x3_t'
|-TypedefDecl 0x14a80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x149828d10 '__clang_svuint8x3_t'
|-TypedefDecl 0x14a80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x149828d30 '__clang_svuint16x3_t'
|-TypedefDecl 0x14a80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x149828d50 '__clang_svuint32x3_t'
|-TypedefDecl 0x14a80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x149828d70 '__clang_svuint64x3_t'
|-TypedefDecl 0x14a80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x149828d90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14a80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x149828db0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14a80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x149828dd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14a80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x149828df0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14a80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x149828e10 '__clang_svint8x4_t'
|-TypedefDecl 0x14a80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x149828e30 '__clang_svint16x4_t'
|-TypedefDecl 0x14a80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x149828e50 '__clang_svint32x4_t'
|-TypedefDecl 0x14a80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x149828e70 '__clang_svint64x4_t'
|-TypedefDecl 0x14a80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x149828e90 '__clang_svuint8x4_t'
|-TypedefDecl 0x14a80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x149828eb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14a80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x149828ed0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14a80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x149828ef0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14a80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x149828f10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14a80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x149828f30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14a80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x149828f50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14a80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x149828f70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14a80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x149828f90 '__SVBool_t'
|-TypedefDecl 0x14a80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x149828fb0 '__clang_svboolx2_t'
|-TypedefDecl 0x14a80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x149828fd0 '__clang_svboolx4_t'
|-TypedefDecl 0x14a80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x149828ff0 '__SVCount_t'
|-TypedefDecl 0x14a80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14a80dbb0 'char *'
|   `-BuiltinType 0x1498282b0 'char'
|-TypedefDecl 0x14a80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14a80dbb0 'char *'
|   `-BuiltinType 0x1498282b0 'char'
|-FunctionDecl 0x1498f5a00 <dataset_diviso_filec/func23658_nonvuln.c:1:1, line:44:1> line:1:1 parse_SAMPLE 'int (char *, const struct ofpact_parse_params *)'
| |-ParmVarDecl 0x14a80dcd8 <col:14, col:20> col:20 used arg 'char *'
| |-ParmVarDecl 0x14a80e2c8 <col:25, col:59> col:59 used pp 'const struct ofpact_parse_params *'
| `-CompoundStmt 0x14a8287d8 <line:2:1, line:44:1>
|   |-DeclStmt 0x1498f5ec0 <line:3:5, col:62>
|   | |-RecordDecl 0x1498f5b00 <col:5, col:12> col:12 struct ofpact_sample
|   | `-VarDecl 0x1498f5c68 <col:5, col:61> col:27 used os 'struct ofpact_sample *' cinit
|   |   `-CallExpr 0x1498f5e80 <col:32, col:61> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x1498f5e00 <col:32> 'int ()' Function 0x1498f5d48 'ofpact_put_SAMPLE' 'int ()'
|   |     `-RecoveryExpr 0x1498f5e58 <col:50, col:54> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x1498f5e20 <col:50> 'const struct ofpact_parse_params *' lvalue ParmVar 0x14a80e2c8 'pp' 'const struct ofpact_parse_params *'
|   |-BinaryOperator 0x1498f5f90 <line:4:5, col:25> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x1498f5f10 <col:5, col:9> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x1498f5ed8 <col:5> 'struct ofpact_sample *' contains-errors lvalue Var 0x1498f5c68 'os' 'struct ofpact_sample *'
|   | `-RecoveryExpr 0x1498f5f70 <col:25> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x1498f6068 <line:5:5, col:21> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x1498f5fe8 <col:5, col:9> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x1498f5fb0 <col:5> 'struct ofpact_sample *' contains-errors lvalue Var 0x1498f5c68 'os' 'struct ofpact_sample *'
|   | `-RecoveryExpr 0x1498f6048 <col:21> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x1498f61a0 <line:7:5, col:22>
|   | |-VarDecl 0x1498f60a0 <col:5, col:11> col:11 used key 'char *'
|   | `-VarDecl 0x1498f6120 <col:5, col:17> col:17 used value 'char *'
|   |-WhileStmt 0x14a828558 <line:8:5, line:38:5>
|   | |-CallExpr 0x1498f63e8 <line:8:12, col:54> 'int'
|   | | |-ImplicitCastExpr 0x1498f63d0 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x1498f6298 <col:12> 'int ()' Function 0x1498f61e0 'ofputil_parse_key_value' 'int ()'
|   | | |-UnaryOperator 0x1498f6310 <col:36, col:37> 'char **' prefix '&' cannot overflow
|   | | | `-DeclRefExpr 0x1498f62b8 <col:37> 'char *' lvalue ParmVar 0x14a80dcd8 'arg' 'char *'
|   | | |-UnaryOperator 0x1498f6348 <col:42, col:43> 'char **' prefix '&' cannot overflow
|   | | | `-DeclRefExpr 0x1498f6328 <col:43> 'char *' lvalue Var 0x1498f60a0 'key' 'char *'
|   | | `-UnaryOperator 0x1498f6380 <col:48, col:49> 'char **' prefix '&' cannot overflow
|   | |   `-DeclRefExpr 0x1498f6360 <col:49> 'char *' lvalue Var 0x1498f6120 'value' 'char *'
|   | `-CompoundStmt 0x14a828530 <col:57, line:38:5>
|   |   |-DeclStmt 0x1498f64d8 <line:9:9, col:27>
|   |   | `-VarDecl 0x1498f6438 <col:9, col:23> col:15 used error 'char *' cinit
|   |   |   `-RecoveryExpr 0x1498f64b8 <col:23> '<dependent type>' contains-errors lvalue
|   |   |-IfStmt 0x14a828430 <line:11:9, line:34:9> has_else
|   |   | |-UnaryOperator 0x1498f68b8 <line:11:13, col:31> 'int' prefix '!' cannot overflow
|   |   | | `-CallExpr 0x1498f6828 <col:14, col:31> 'int'
|   |   | |   |-ImplicitCastExpr 0x1498f6810 <col:14> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   | |   | `-DeclRefExpr 0x1498f6710 <col:14> 'int (const char *, const char *)' Function 0x1498f6530 'strcmp' 'int (const char *, const char *)'
|   |   | |   |-ImplicitCastExpr 0x1498f6870 <col:21> 'const char *' <NoOp>
|   |   | |   | `-ImplicitCastExpr 0x1498f6858 <col:21> 'char *' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x1498f6730 <col:21> 'char *' lvalue Var 0x1498f60a0 'key' 'char *'
|   |   | |   `-ImplicitCastExpr 0x1498f68a0 <col:26> 'const char *' <NoOp>
|   |   | |     `-ImplicitCastExpr 0x1498f6888 <col:26> 'char *' <ArrayToPointerDecay>
|   |   | |       `-StringLiteral 0x1498f6790 <col:26> 'char[4]' lvalue "STR"
|   |   | |-CompoundStmt 0x14a827068 <col:34, line:16:9>
|   |   | | |-BinaryOperator 0x14a826cf0 <line:12:13, col:62> 'char *' contains-errors '='
|   |   | | | |-DeclRefExpr 0x1498f68d0 <col:13> 'char *' contains-errors lvalue Var 0x1498f6438 'error' 'char *'
|   |   | | | `-CallExpr 0x14a826cb8 <col:21, col:62> '<dependent type>' contains-errors
|   |   | | |   |-DeclRefExpr 0x1498f69d0 <col:21> 'int ()' Function 0x1498f6918 'str_to_u16' 'int ()'
|   |   | | |   |-DeclRefExpr 0x14a826c00 <col:32> 'char *' lvalue Var 0x1498f6120 'value' 'char *'
|   |   | | |   |-StringLiteral 0x14a826c20 <col:39> 'char[4]' lvalue "STR"
|   |   | | |   `-UnaryOperator 0x14a826ca0 <col:46, col:51> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | | |     `-RecoveryExpr 0x14a826c78 <col:47, col:51> '<dependent type>' contains-errors lvalue
|   |   | | |       `-DeclRefExpr 0x14a826c40 <col:47> 'struct ofpact_sample *' contains-errors lvalue Var 0x1498f5c68 'os' 'struct ofpact_sample *'
|   |   | | `-IfStmt 0x14a827048 <line:13:13, line:15:13>
|   |   | |   |-BinaryOperator 0x14a826e00 <line:13:17, col:46> 'int' contains-errors '&&'
|   |   | |   | |-UnaryOperator 0x14a826d48 <col:17, col:18> 'int' contains-errors prefix '!' cannot overflow
|   |   | |   | | `-ImplicitCastExpr 0x14a826d30 <col:18> 'char *' contains-errors <LValueToRValue>
|   |   | |   | |   `-DeclRefExpr 0x14a826d10 <col:18> 'char *' contains-errors lvalue Var 0x1498f6438 'error' 'char *'
|   |   | |   | `-BinaryOperator 0x14a826de0 <col:27, col:46> 'int' contains-errors '=='
|   |   | |   |   |-RecoveryExpr 0x14a826d98 <col:27, col:31> '<dependent type>' contains-errors lvalue
|   |   | |   |   | `-DeclRefExpr 0x14a826d60 <col:27> 'struct ofpact_sample *' contains-errors lvalue Var 0x1498f5c68 'os' 'struct ofpact_sample *'
|   |   | |   |   `-IntegerLiteral 0x14a826dc0 <col:46> 'int' 0
|   |   | |   `-CompoundStmt 0x14a827030 <col:49, line:15:13>
|   |   | |     `-BinaryOperator 0x14a827010 <line:14:17, col:47> 'char *' contains-errors '='
|   |   | |       |-DeclRefExpr 0x14a826e20 <col:17> 'char *' contains-errors lvalue Var 0x1498f6438 'error' 'char *'
|   |   | |       `-ImplicitCastExpr 0x14a826ff8 <col:25, col:47> 'char *' <IntegralToPointer>
|   |   | |         `-CallExpr 0x14a826f98 <col:25, col:47> 'int'
|   |   | |           |-ImplicitCastExpr 0x14a826f80 <col:25> 'int (*)()' <FunctionToPointerDecay>
|   |   | |           | `-DeclRefExpr 0x14a826f20 <col:25> 'int ()' Function 0x14a826e68 'xasprintf' 'int ()'
|   |   | |           |-ImplicitCastExpr 0x14a826fc8 <col:35> 'char *' <ArrayToPointerDecay>
|   |   | |           | `-StringLiteral 0x14a826f40 <col:35> 'char[4]' lvalue "STR"
|   |   | |           `-ImplicitCastExpr 0x14a826fe0 <col:42> 'char *' <LValueToRValue>
|   |   | |             `-DeclRefExpr 0x14a826f60 <col:42> 'char *' lvalue Var 0x1498f6120 'value' 'char *'
|   |   | `-IfStmt 0x14a828400 <line:16:16, line:34:9> has_else
|   |   |   |-UnaryOperator 0x14a8271c0 <line:16:20, col:38> 'int' prefix '!' cannot overflow
|   |   |   | `-CallExpr 0x14a827130 <col:21, col:38> 'int'
|   |   |   |   |-ImplicitCastExpr 0x14a827118 <col:21> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |   |   | `-DeclRefExpr 0x14a827088 <col:21> 'int (const char *, const char *)' Function 0x1498f6530 'strcmp' 'int (const char *, const char *)'
|   |   |   |   |-ImplicitCastExpr 0x14a827178 <col:28> 'const char *' <NoOp>
|   |   |   |   | `-ImplicitCastExpr 0x14a827160 <col:28> 'char *' <LValueToRValue>
|   |   |   |   |   `-DeclRefExpr 0x14a8270a8 <col:28> 'char *' lvalue Var 0x1498f60a0 'key' 'char *'
|   |   |   |   `-ImplicitCastExpr 0x14a8271a8 <col:33> 'const char *' <NoOp>
|   |   |   |     `-ImplicitCastExpr 0x14a827190 <col:33> 'char *' <ArrayToPointerDecay>
|   |   |   |       `-StringLiteral 0x14a8270c8 <col:33> 'char[4]' lvalue "STR"
|   |   |   |-CompoundStmt 0x14a8273e0 <col:41, line:18:9>
|   |   |   | `-BinaryOperator 0x14a8273c0 <line:17:13, col:60> 'char *' contains-errors '='
|   |   |   |   |-DeclRefExpr 0x14a8271d8 <col:13> 'char *' contains-errors lvalue Var 0x1498f6438 'error' 'char *'
|   |   |   |   `-CallExpr 0x14a827390 <col:21, col:60> '<dependent type>' contains-errors
|   |   |   |     |-DeclRefExpr 0x14a8272d8 <col:21> 'int ()' Function 0x14a827220 'str_to_u32' 'int ()'
|   |   |   |     |-DeclRefExpr 0x14a8272f8 <col:32> 'char *' lvalue Var 0x1498f6120 'value' 'char *'
|   |   |   |     `-UnaryOperator 0x14a827378 <col:39, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |   |       `-RecoveryExpr 0x14a827350 <col:40, col:44> '<dependent type>' contains-errors lvalue
|   |   |   |         `-DeclRefExpr 0x14a827318 <col:40> 'struct ofpact_sample *' contains-errors lvalue Var 0x1498f5c68 'os' 'struct ofpact_sample *'
|   |   |   `-IfStmt 0x14a8283d0 <line:18:16, line:34:9> has_else
|   |   |     |-UnaryOperator 0x14a827530 <line:18:20, col:38> 'int' prefix '!' cannot overflow
|   |   |     | `-CallExpr 0x14a8274a0 <col:21, col:38> 'int'
|   |   |     |   |-ImplicitCastExpr 0x14a827488 <col:21> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |     |   | `-DeclRefExpr 0x14a8273f8 <col:21> 'int (const char *, const char *)' Function 0x1498f6530 'strcmp' 'int (const char *, const char *)'
|   |   |     |   |-ImplicitCastExpr 0x14a8274e8 <col:28> 'const char *' <NoOp>
|   |   |     |   | `-ImplicitCastExpr 0x14a8274d0 <col:28> 'char *' <LValueToRValue>
|   |   |     |   |   `-DeclRefExpr 0x14a827418 <col:28> 'char *' lvalue Var 0x1498f60a0 'key' 'char *'
|   |   |     |   `-ImplicitCastExpr 0x14a827518 <col:33> 'const char *' <NoOp>
|   |   |     |     `-ImplicitCastExpr 0x14a827500 <col:33> 'char *' <ArrayToPointerDecay>
|   |   |     |       `-StringLiteral 0x14a827438 <col:33> 'char[4]' lvalue "STR"
|   |   |     |-CompoundStmt 0x14a827670 <col:41, line:20:9>
|   |   |     | `-BinaryOperator 0x14a827650 <line:19:13, col:57> 'char *' contains-errors '='
|   |   |     |   |-DeclRefExpr 0x14a827548 <col:13> 'char *' contains-errors lvalue Var 0x1498f6438 'error' 'char *'
|   |   |     |   `-CallExpr 0x14a827620 <col:21, col:57> '<dependent type>' contains-errors
|   |   |     |     |-DeclRefExpr 0x14a827568 <col:21> 'int ()' Function 0x14a827220 'str_to_u32' 'int ()'
|   |   |     |     |-DeclRefExpr 0x14a827588 <col:32> 'char *' lvalue Var 0x1498f6120 'value' 'char *'
|   |   |     |     `-UnaryOperator 0x14a827608 <col:39, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |     |       `-RecoveryExpr 0x14a8275e0 <col:40, col:44> '<dependent type>' contains-errors lvalue
|   |   |     |         `-DeclRefExpr 0x14a8275a8 <col:40> 'struct ofpact_sample *' contains-errors lvalue Var 0x1498f5c68 'os' 'struct ofpact_sample *'
|   |   |     `-IfStmt 0x14a8283a0 <line:20:16, line:34:9> has_else
|   |   |       |-UnaryOperator 0x14a8277c0 <line:20:20, col:38> 'int' prefix '!' cannot overflow
|   |   |       | `-CallExpr 0x14a827730 <col:21, col:38> 'int'
|   |   |       |   |-ImplicitCastExpr 0x14a827718 <col:21> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |       |   | `-DeclRefExpr 0x14a827688 <col:21> 'int (const char *, const char *)' Function 0x1498f6530 'strcmp' 'int (const char *, const char *)'
|   |   |       |   |-ImplicitCastExpr 0x14a827778 <col:28> 'const char *' <NoOp>
|   |   |       |   | `-ImplicitCastExpr 0x14a827760 <col:28> 'char *' <LValueToRValue>
|   |   |       |   |   `-DeclRefExpr 0x14a8276a8 <col:28> 'char *' lvalue Var 0x1498f60a0 'key' 'char *'
|   |   |       |   `-ImplicitCastExpr 0x14a8277a8 <col:33> 'const char *' <NoOp>
|   |   |       |     `-ImplicitCastExpr 0x14a827790 <col:33> 'char *' <ArrayToPointerDecay>
|   |   |       |       `-StringLiteral 0x14a8276c8 <col:33> 'char[4]' lvalue "STR"
|   |   |       |-CompoundStmt 0x14a827900 <col:41, line:22:9>
|   |   |       | `-BinaryOperator 0x14a8278e0 <line:21:13, col:56> 'char *' contains-errors '='
|   |   |       |   |-DeclRefExpr 0x14a8277d8 <col:13> 'char *' contains-errors lvalue Var 0x1498f6438 'error' 'char *'
|   |   |       |   `-CallExpr 0x14a8278b0 <col:21, col:56> '<dependent type>' contains-errors
|   |   |       |     |-DeclRefExpr 0x14a8277f8 <col:21> 'int ()' Function 0x14a827220 'str_to_u32' 'int ()'
|   |   |       |     |-DeclRefExpr 0x14a827818 <col:32> 'char *' lvalue Var 0x1498f6120 'value' 'char *'
|   |   |       |     `-UnaryOperator 0x14a827898 <col:39, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |       |       `-RecoveryExpr 0x14a827870 <col:40, col:44> '<dependent type>' contains-errors lvalue
|   |   |       |         `-DeclRefExpr 0x14a827838 <col:40> 'struct ofpact_sample *' contains-errors lvalue Var 0x1498f5c68 'os' 'struct ofpact_sample *'
|   |   |       `-IfStmt 0x14a828370 <line:22:16, line:34:9> has_else
|   |   |         |-UnaryOperator 0x14a827a50 <line:22:20, col:38> 'int' prefix '!' cannot overflow
|   |   |         | `-CallExpr 0x14a8279c0 <col:21, col:38> 'int'
|   |   |         |   |-ImplicitCastExpr 0x14a8279a8 <col:21> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |         |   | `-DeclRefExpr 0x14a827918 <col:21> 'int (const char *, const char *)' Function 0x1498f6530 'strcmp' 'int (const char *, const char *)'
|   |   |         |   |-ImplicitCastExpr 0x14a827a08 <col:28> 'const char *' <NoOp>
|   |   |         |   | `-ImplicitCastExpr 0x14a8279f0 <col:28> 'char *' <LValueToRValue>
|   |   |         |   |   `-DeclRefExpr 0x14a827938 <col:28> 'char *' lvalue Var 0x1498f60a0 'key' 'char *'
|   |   |         |   `-ImplicitCastExpr 0x14a827a38 <col:33> 'const char *' <NoOp>
|   |   |         |     `-ImplicitCastExpr 0x14a827a20 <col:33> 'char *' <ArrayToPointerDecay>
|   |   |         |       `-StringLiteral 0x14a827958 <col:33> 'char[4]' lvalue "STR"
|   |   |         |-CompoundStmt 0x14a827e30 <col:41, line:27:9>
|   |   |         | `-IfStmt 0x14a827e10 <line:23:13, line:26:13>
|   |   |         |   |-UnaryOperator 0x14a827cb0 <line:23:17, line:24:61> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |   |         |   | `-CallExpr 0x14a827c78 <line:23:18, line:24:61> '<dependent type>' contains-errors
|   |   |         |   |   |-DeclRefExpr 0x14a827b48 <line:23:18> 'int ()' Function 0x14a827a90 'ofputil_port_from_string' 'int ()'
|   |   |         |   |   |-DeclRefExpr 0x14a827b68 <col:43> 'char *' lvalue Var 0x1498f6120 'value' 'char *'
|   |   |         |   |   |-RecoveryExpr 0x14a827bc0 <col:50, col:54> '<dependent type>' contains-errors lvalue
|   |   |         |   |   | `-DeclRefExpr 0x14a827b88 <col:50> 'const struct ofpact_parse_params *' lvalue ParmVar 0x14a80e2c8 'pp' 'const struct ofpact_parse_params *'
|   |   |         |   |   `-UnaryOperator 0x14a827c60 <line:24:43, col:48> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |         |   |     `-RecoveryExpr 0x14a827c38 <col:44, col:48> '<dependent type>' contains-errors lvalue
|   |   |         |   |       `-DeclRefExpr 0x14a827c00 <col:44> 'struct ofpact_sample *' contains-errors lvalue Var 0x1498f5c68 'os' 'struct ofpact_sample *'
|   |   |         |   `-CompoundStmt 0x14a827df8 <col:64, line:26:13>
|   |   |         |     `-BinaryOperator 0x14a827dd8 <line:25:17, col:47> 'char *' contains-errors '='
|   |   |         |       |-DeclRefExpr 0x14a827cc8 <col:17> 'char *' contains-errors lvalue Var 0x1498f6438 'error' 'char *'
|   |   |         |       `-ImplicitCastExpr 0x14a827dc0 <col:25, col:47> 'char *' <IntegralToPointer>
|   |   |         |         `-CallExpr 0x14a827d60 <col:25, col:47> 'int'
|   |   |         |           |-ImplicitCastExpr 0x14a827d48 <col:25> 'int (*)()' <FunctionToPointerDecay>
|   |   |         |           | `-DeclRefExpr 0x14a827ce8 <col:25> 'int ()' Function 0x14a826e68 'xasprintf' 'int ()'
|   |   |         |           |-ImplicitCastExpr 0x14a827d90 <col:35> 'char *' <ArrayToPointerDecay>
|   |   |         |           | `-StringLiteral 0x14a827d08 <col:35> 'char[4]' lvalue "STR"
|   |   |         |           `-ImplicitCastExpr 0x14a827da8 <col:42> 'char *' <LValueToRValue>
|   |   |         |             `-DeclRefExpr 0x14a827d28 <col:42> 'char *' lvalue Var 0x1498f6120 'value' 'char *'
|   |   |         `-IfStmt 0x14a828340 <line:27:16, line:34:9> has_else
|   |   |           |-UnaryOperator 0x14a827f80 <line:27:20, col:38> 'int' prefix '!' cannot overflow
|   |   |           | `-CallExpr 0x14a827ef0 <col:21, col:38> 'int'
|   |   |           |   |-ImplicitCastExpr 0x14a827ed8 <col:21> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |           |   | `-DeclRefExpr 0x14a827e48 <col:21> 'int (const char *, const char *)' Function 0x1498f6530 'strcmp' 'int (const char *, const char *)'
|   |   |           |   |-ImplicitCastExpr 0x14a827f38 <col:28> 'const char *' <NoOp>
|   |   |           |   | `-ImplicitCastExpr 0x14a827f20 <col:28> 'char *' <LValueToRValue>
|   |   |           |   |   `-DeclRefExpr 0x14a827e68 <col:28> 'char *' lvalue Var 0x1498f60a0 'key' 'char *'
|   |   |           |   `-ImplicitCastExpr 0x14a827f68 <col:33> 'const char *' <NoOp>
|   |   |           |     `-ImplicitCastExpr 0x14a827f50 <col:33> 'char *' <ArrayToPointerDecay>
|   |   |           |       `-StringLiteral 0x14a827e88 <col:33> 'char[4]' lvalue "STR"
|   |   |           |-CompoundStmt 0x14a827ff8 <col:41, line:29:9>
|   |   |           `-IfStmt 0x14a828310 <col:16, line:34:9> has_else
|   |   |             |-UnaryOperator 0x14a828140 <line:29:20, col:38> 'int' prefix '!' cannot overflow
|   |   |             | `-CallExpr 0x14a8280b0 <col:21, col:38> 'int'
|   |   |             |   |-ImplicitCastExpr 0x14a828098 <col:21> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |             |   | `-DeclRefExpr 0x14a828008 <col:21> 'int (const char *, const char *)' Function 0x1498f6530 'strcmp' 'int (const char *, const char *)'
|   |   |             |   |-ImplicitCastExpr 0x14a8280f8 <col:28> 'const char *' <NoOp>
|   |   |             |   | `-ImplicitCastExpr 0x14a8280e0 <col:28> 'char *' <LValueToRValue>
|   |   |             |   |   `-DeclRefExpr 0x14a828028 <col:28> 'char *' lvalue Var 0x1498f60a0 'key' 'char *'
|   |   |             |   `-ImplicitCastExpr 0x14a828128 <col:33> 'const char *' <NoOp>
|   |   |             |     `-ImplicitCastExpr 0x14a828110 <col:33> 'char *' <ArrayToPointerDecay>
|   |   |             |       `-StringLiteral 0x14a828048 <col:33> 'char[4]' lvalue "STR"
|   |   |             |-CompoundStmt 0x14a8281b8 <col:41, line:31:9>
|   |   |             `-CompoundStmt 0x14a8282f8 <col:16, line:34:9>
|   |   |               `-BinaryOperator 0x14a8282d8 <line:32:13, line:33:34> 'char *' contains-errors '='
|   |   |                 |-DeclRefExpr 0x14a8281c8 <line:32:13> 'char *' contains-errors lvalue Var 0x1498f6438 'error' 'char *'
|   |   |                 `-ImplicitCastExpr 0x14a8282c0 <col:21, line:33:34> 'char *' <IntegralToPointer>
|   |   |                   `-CallExpr 0x14a828260 <line:32:21, line:33:34> 'int'
|   |   |                     |-ImplicitCastExpr 0x14a828248 <line:32:21> 'int (*)()' <FunctionToPointerDecay>
|   |   |                     | `-DeclRefExpr 0x14a8281e8 <col:21> 'int ()' Function 0x14a826e68 'xasprintf' 'int ()'
|   |   |                     |-ImplicitCastExpr 0x14a828290 <col:31> 'char *' <ArrayToPointerDecay>
|   |   |                     | `-StringLiteral 0x14a828208 <col:31> 'char[4]' lvalue "STR"
|   |   |                     `-ImplicitCastExpr 0x14a8282a8 <line:33:31> 'char *' <LValueToRValue>
|   |   |                       `-DeclRefExpr 0x14a828228 <col:31> 'char *' lvalue Var 0x1498f60a0 'key' 'char *'
|   |   `-IfStmt 0x14a828510 <line:35:9, line:37:9>
|   |     |-ImplicitCastExpr 0x14a828480 <line:35:13> 'char *' contains-errors <LValueToRValue>
|   |     | `-DeclRefExpr 0x14a828460 <col:13> 'char *' contains-errors lvalue Var 0x1498f6438 'error' 'char *'
|   |     `-CompoundStmt 0x14a8284f8 <col:20, line:37:9>
|   |       `-ReturnStmt 0x14a8284e8 <line:36:13, col:20>
|   |         `-ImplicitCastExpr 0x14a8284d0 <col:20> 'int' contains-errors <PointerToIntegral>
|   |           `-ImplicitCastExpr 0x14a8284b8 <col:20> 'char *' contains-errors <LValueToRValue>
|   |             `-DeclRefExpr 0x14a828498 <col:20> 'char *' contains-errors lvalue Var 0x1498f6438 'error' 'char *'
|   `-IfStmt 0x14a8287b8 <line:39:5, line:41:5>
|     |-BinaryOperator 0x14a8285f8 <line:39:9, col:28> 'int' contains-errors '=='
|     | |-RecoveryExpr 0x14a8285b0 <col:9, col:13> '<dependent type>' contains-errors lvalue
|     | | `-DeclRefExpr 0x14a828578 <col:9> 'struct ofpact_sample *' contains-errors lvalue Var 0x1498f5c68 'os' 'struct ofpact_sample *'
|     | `-IntegerLiteral 0x14a8285d8 <col:28> 'int' 0
|     `-CompoundStmt 0x14a8287a0 <col:31, line:41:5>
|       `-ReturnStmt 0x14a828790 <line:40:9, col:29>
|         `-CallExpr 0x14a828750 <col:16, col:29> 'int'
|           |-ImplicitCastExpr 0x14a828738 <col:16> 'int (*)()' <FunctionToPointerDecay>
|           | `-DeclRefExpr 0x14a8286f8 <col:16> 'int ()' Function 0x14a828640 'xstrdup' 'int ()'
|           `-ImplicitCastExpr 0x14a828778 <col:24> 'char *' <ArrayToPointerDecay>
|             `-StringLiteral 0x14a828718 <col:24> 'char[4]' lvalue "STR"
`-FunctionDecl 0x1498f6530 <line:11:14> col:14 implicit used strcmp 'int (const char *, const char *)' extern
  |-ParmVarDecl 0x1498f6630 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x1498f6698 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x1498f65d8 <<invalid sloc>> Implicit 887
