TranslationUnitDecl 0x14e055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14e0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14e055bd0 '__int128'
|-TypedefDecl 0x14e056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14e055bf0 'unsigned __int128'
|-TypedefDecl 0x14e80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14e80bc00 'struct __NSConstantString_tag'
|   `-Record 0x14e056580 '__NSConstantString_tag'
|-TypedefDecl 0x14e80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14e055d90 '__SVInt8_t'
|-TypedefDecl 0x14e80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14e055db0 '__SVInt16_t'
|-TypedefDecl 0x14e80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14e055dd0 '__SVInt32_t'
|-TypedefDecl 0x14e80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14e055df0 '__SVInt64_t'
|-TypedefDecl 0x14e80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14e055e10 '__SVUint8_t'
|-TypedefDecl 0x14e80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14e055e30 '__SVUint16_t'
|-TypedefDecl 0x14e80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14e055e50 '__SVUint32_t'
|-TypedefDecl 0x14e80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14e055e70 '__SVUint64_t'
|-TypedefDecl 0x14e80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14e055e90 '__SVFloat16_t'
|-TypedefDecl 0x14e80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14e055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14e80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14e055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14e80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14e055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14e80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14e055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14e80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14e055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14e80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14e055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14e80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14e055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14e80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14e055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14e80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14e055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14e80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14e055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14e80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14e055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14e80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14e056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14e80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14e056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14e80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14e056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14e80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14e056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14e80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14e056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14e80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14e0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14e80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14e0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14e80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14e0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14e80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14e056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14e80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14e056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14e80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14e056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14e80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14e056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14e80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14e056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14e80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14e0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14e80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14e0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14e80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14e0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14e80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14e056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14e80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14e056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14e80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14e056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14e80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14e056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14e80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14e056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14e80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14e0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14e80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14e0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14e80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14e0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14e80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14e056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14e80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14e056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14e80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14e056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14e80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14e056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14e80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14e056390 '__SVBool_t'
|-TypedefDecl 0x14e80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14e0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14e80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14e0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14e80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14e0563f0 '__SVCount_t'
|-TypedefDecl 0x14e80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14e80dbb0 'char *'
|   `-BuiltinType 0x14e0556b0 'char'
|-TypedefDecl 0x14e80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14e80dbb0 'char *'
|   `-BuiltinType 0x14e0556b0 'char'
|-FunctionDecl 0x14e80def8 <dataset_diviso_filec/func19444_vuln.c:1:1, line:14:1> line:1:1 idna_to_unicode_8zlz 'int (const char *, char **, int)'
| |-ParmVarDecl 0x14e80dcd8 <col:23, col:35> col:35 used input 'const char *'
| |-ParmVarDecl 0x14e80dd88 <col:42, col:49> col:49 used output 'char **'
| |-ParmVarDecl 0x14e80de08 <col:57, col:61> col:61 used flags 'int'
| `-CompoundStmt 0x14e826ff0 <line:2:1, line:14:1>
|   |-DeclStmt 0x14e80e080 <line:3:3, col:13>
|   | `-VarDecl 0x14e80e018 <col:3, col:9> col:9 used utf8 'char *'
|   |-DeclStmt 0x14e80e118 <line:4:3, col:9>
|   | `-VarDecl 0x14e80e0b0 <col:3, col:7> col:7 used rc 'int'
|   |-BinaryOperator 0x14e80e3d0 <line:6:3, col:49> 'int' '='
|   | |-DeclRefExpr 0x14e80e130 <col:3> 'int' lvalue Var 0x14e80e0b0 'rc' 'int'
|   | `-CallExpr 0x14e80e368 <col:8, col:49> 'int'
|   |   |-ImplicitCastExpr 0x14e80e350 <col:8> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x14e80e280 <col:8> 'int ()' Function 0x14e80e1c8 'idna_to_unicode_8z8z' 'int ()'
|   |   |-ImplicitCastExpr 0x14e80e3a0 <col:30> 'const char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x14e80e2a0 <col:30> 'const char *' lvalue ParmVar 0x14e80dcd8 'input' 'const char *'
|   |   |-UnaryOperator 0x14e80e2e0 <col:37, col:38> 'char **' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x14e80e2c0 <col:38> 'char *' lvalue Var 0x14e80e018 'utf8' 'char *'
|   |   `-ImplicitCastExpr 0x14e80e3b8 <col:44> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x14e80e2f8 <col:44> 'int' lvalue ParmVar 0x14e80de08 'flags' 'int'
|   |-BinaryOperator 0x14e826c00 <line:7:3, col:44> 'char *' '='
|   | |-UnaryOperator 0x14e826638 <col:3, col:4> 'char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x14e826620 <col:4> 'char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x14e826600 <col:4> 'char **' lvalue ParmVar 0x14e80dd88 'output' 'char **'
|   | `-ImplicitCastExpr 0x14e8267c8 <col:13, col:44> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x14e826788 <col:13, col:44> 'int'
|   |     |-ImplicitCastExpr 0x14e826770 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x14e826730 <col:13> 'int ()' Function 0x14e826678 'stringprep_utf8_to_locale' 'int ()'
|   |     `-ImplicitCastExpr 0x14e8267b0 <col:40> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x14e826750 <col:40> 'char *' lvalue Var 0x14e80e018 'utf8' 'char *'
|   |-CallExpr 0x14e826e68 <line:8:3, col:13> 'void'
|   | |-ImplicitCastExpr 0x14e826e50 <col:3> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x14e826dc8 <col:3> 'void (void *)' Function 0x14e826c58 'free' 'void (void *)'
|   | `-ImplicitCastExpr 0x14e826ea8 <col:9> 'void *' <BitCast>
|   |   `-ImplicitCastExpr 0x14e826e90 <col:9> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x14e826de8 <col:9> 'char *' lvalue Var 0x14e80e018 'utf8' 'char *'
|   |-IfStmt 0x14e826f88 <line:10:3, line:11:12>
|   | |-UnaryOperator 0x14e826f28 <line:10:7, col:9> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x14e826f10 <col:8, col:9> 'char *' <LValueToRValue>
|   | |   `-UnaryOperator 0x14e826ef8 <col:8, col:9> 'char *' lvalue prefix '*' cannot overflow
|   | |     `-ImplicitCastExpr 0x14e826ee0 <col:9> 'char **' <LValueToRValue>
|   | |       `-DeclRefExpr 0x14e826ec0 <col:9> 'char **' lvalue ParmVar 0x14e80dd88 'output' 'char **'
|   | `-ReturnStmt 0x14e826f78 <line:11:5, col:12>
|   |   `-RecoveryExpr 0x14e826f58 <col:12> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x14e826fe0 <line:13:3, col:10>
|     `-ImplicitCastExpr 0x14e826fc8 <col:10> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x14e826fa8 <col:10> 'int' lvalue Var 0x14e80e0b0 'rc' 'int'
`-FunctionDecl 0x14e826c58 <line:8:3> col:3 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x14e826d58 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x14e826d00 <<invalid sloc>> Implicit 873
