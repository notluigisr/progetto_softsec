TranslationUnitDecl 0x123055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1230564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x123055bd0 '__int128'
|-TypedefDecl 0x123056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x123055bf0 'unsigned __int128'
|-TypedefDecl 0x12380be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12380bc00 'struct __NSConstantString_tag'
|   `-Record 0x123056580 '__NSConstantString_tag'
|-TypedefDecl 0x12380be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x123055d90 '__SVInt8_t'
|-TypedefDecl 0x12380bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x123055db0 '__SVInt16_t'
|-TypedefDecl 0x12380bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x123055dd0 '__SVInt32_t'
|-TypedefDecl 0x12380bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x123055df0 '__SVInt64_t'
|-TypedefDecl 0x12380c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x123055e10 '__SVUint8_t'
|-TypedefDecl 0x12380c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x123055e30 '__SVUint16_t'
|-TypedefDecl 0x12380c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x123055e50 '__SVUint32_t'
|-TypedefDecl 0x12380c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x123055e70 '__SVUint64_t'
|-TypedefDecl 0x12380c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x123055e90 '__SVFloat16_t'
|-TypedefDecl 0x12380c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x123055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12380c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x123055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12380c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x123055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12380c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x123055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12380c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x123055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12380c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x123055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12380c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x123055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12380c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x123055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12380c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x123055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12380c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x123055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12380c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x123055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12380c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x123056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12380c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x123056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12380c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x123056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12380c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x123056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12380c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x123056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12380c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1230560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12380c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1230560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12380c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1230560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12380c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x123056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12380ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x123056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12380cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x123056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12380cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x123056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12380cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x123056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12380d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1230561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12380d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1230561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12380d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1230561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12380d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x123056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12380d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x123056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12380d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x123056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12380d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x123056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12380d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x123056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12380d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1230562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12380d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1230562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12380d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1230562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12380d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x123056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12380d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x123056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12380d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x123056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12380d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x123056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12380da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x123056390 '__SVBool_t'
|-TypedefDecl 0x12380da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1230563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12380dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1230563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12380db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1230563f0 '__SVCount_t'
|-TypedefDecl 0x12380dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12380dbb0 'char *'
|   `-BuiltinType 0x1230556b0 'char'
|-TypedefDecl 0x12380dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12380dbb0 'char *'
|   `-BuiltinType 0x1230556b0 'char'
|-FunctionDecl 0x12380df48 <dataset_diviso_filec/func9064_vuln.c:1:1, line:32:1> line:1:14 invalid handle_new_problem 'char *(int *, int, char **)' static
| |-ParmVarDecl 0x12380dd28 <col:33, col:43> col:43 invalid problem_info 'int *'
| |-ParmVarDecl 0x12380dda8 <col:57, col:63> col:63 invalid caller_uid 'int'
| |-ParmVarDecl 0x12380de58 <col:75, col:82> col:82 used error 'char **'
| `-CompoundStmt 0x123122f58 <line:2:1, line:32:1>
|   |-CallExpr 0x124808870 <line:6:5, col:45> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12380e300 <col:5> 'int ()' Function 0x12380e248 'g_variant_get' 'int ()'
|   | |-RecoveryExpr 0x12380e320 <col:19> '<dependent type>' contains-errors lvalue
|   | |-StringLiteral 0x12380e380 <col:33> 'char[4]' lvalue "STR"
|   | `-UnaryOperator 0x124808858 <col:40, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x124808838 <col:41> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x1248089c0 <line:7:5, col:23>
|   | |-VarDecl 0x1248088c0 <col:5, col:12> col:12 used key 'char *'
|   | `-VarDecl 0x124808940 <col:5, col:18> col:18 used value 'char *'
|   |-WhileStmt 0x124808e20 <line:8:5, line:11:5>
|   | |-CallExpr 0x124808be0 <line:8:12, col:57> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x124808ab8 <col:12> 'int ()' Function 0x124808a00 'g_variant_iter_loop' 'int ()'
|   | | |-RecoveryExpr 0x124808bc0 <col:32> '<dependent type>' contains-errors lvalue
|   | | |-StringLiteral 0x124808af0 <col:38> 'char[4]' lvalue "STR"
|   | | |-UnaryOperator 0x124808b30 <col:45, col:46> 'char **' prefix '&' cannot overflow
|   | | | `-DeclRefExpr 0x124808b10 <col:46> 'char *' lvalue Var 0x1248088c0 'key' 'char *'
|   | | `-UnaryOperator 0x124808b68 <col:51, col:52> 'char **' prefix '&' cannot overflow
|   | |   `-DeclRefExpr 0x124808b48 <col:52> 'char *' lvalue Var 0x124808940 'value' 'char *'
|   | `-CompoundStmt 0x124808e08 <line:9:5, line:11:5>
|   |   `-CallExpr 0x124808dd0 <line:10:9, col:54> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x124808d00 <col:9> 'int ()' Function 0x124808c48 'problem_data_add_text_editable' 'int ()'
|   |     |-RecoveryExpr 0x124808db0 <col:40> '<dependent type>' contains-errors lvalue
|   |     |-DeclRefExpr 0x124808d38 <col:44> 'char *' lvalue Var 0x1248088c0 'key' 'char *'
|   |     `-DeclRefExpr 0x124808d58 <col:49> 'char *' lvalue Var 0x124808940 'value' 'char *'
|   |-IfStmt 0x123122720 <line:13:5, line:19:5>
|   | |-BinaryOperator 0x124809108 <line:13:9, col:82> 'int' contains-errors '||'
|   | | |-BinaryOperator 0x124808e80 <col:9, col:23> 'int' contains-errors '!='
|   | | | |-RecoveryExpr 0x124808e40 <col:9> '<dependent type>' contains-errors lvalue
|   | | | `-IntegerLiteral 0x124808e60 <col:23> 'int' 0
|   | | `-BinaryOperator 0x1248090e8 <col:28, col:82> 'int' contains-errors '=='
|   | |   |-CallExpr 0x124809098 <col:28, col:77> '<dependent type>' contains-errors
|   | |   | |-DeclRefExpr 0x124808f80 <col:28> 'int ()' Function 0x124808ec8 'problem_data_get_content_or_NULL' 'int ()'
|   | |   | |-RecoveryExpr 0x124809058 <col:61> '<dependent type>' contains-errors lvalue
|   | |   | `-RecoveryExpr 0x124809078 <col:65> '<dependent type>' contains-errors lvalue
|   | |   `-RecoveryExpr 0x1248090c8 <col:82> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x1231226f8 <line:14:5, line:19:5>
|   |   |-CallExpr 0x124809268 <line:15:9, col:35> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x124809208 <col:9> 'int ()' Function 0x124809150 'log_info' 'int ()'
|   |   | |-StringLiteral 0x124809228 <col:18> 'char[4]' lvalue "STR"
|   |   | `-RecoveryExpr 0x124809248 <col:25> '<dependent type>' contains-errors lvalue
|   |   |-DeclStmt 0x124809368 <line:16:9, col:40>
|   |   | `-VarDecl 0x124809300 <col:9, col:14> col:14 invalid buf 'char'
|   |   `-CallExpr 0x124809768 <line:17:9, col:53> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x124809658 <col:9> 'int (char *, unsigned long, const char *, ...)' Function 0x1248093d0 'snprintf' 'int (char *, unsigned long, const char *, ...)'
|   |     |-RecoveryExpr 0x124809678 <col:18> '<dependent type>' contains-errors lvalue
|   |     |-UnaryExprOrTypeTraitExpr 0x1248096d8 <col:23, col:33> 'unsigned long' contains-errors sizeof
|   |     | `-ParenExpr 0x1248096b8 <col:29, col:33> '<dependent type>' contains-errors lvalue
|   |     |   `-RecoveryExpr 0x124809698 <col:30> '<dependent type>' contains-errors lvalue
|   |     |-StringLiteral 0x1248096f8 <col:36> 'char[4]' lvalue "STR"
|   |     `-RecoveryExpr 0x124809718 <col:43> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x1231229c0 <line:24:5, col:45>
|   | `-VarDecl 0x123122858 <col:5, col:11> col:11 used problem_id 'char *'
|   |-IfStmt 0x123122de0 <line:25:5, line:28:33> has_else
|   | |-ImplicitCastExpr 0x1231229f8 <line:25:9> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1231229d8 <col:9> 'char *' lvalue Var 0x123122858 'problem_id' 'char *'
|   | |-CallExpr 0x123122b48 <line:26:9, col:35> 'int'
|   | | |-ImplicitCastExpr 0x123122b30 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x123122af0 <col:9> 'int ()' Function 0x123122a38 'notify_new_path' 'int ()'
|   | | `-ImplicitCastExpr 0x123122b70 <col:25> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x123122b10 <col:25> 'char *' lvalue Var 0x123122858 'problem_id' 'char *'
|   | `-IfStmt 0x123122dc0 <line:27:10, line:28:33>
|   |   |-ImplicitCastExpr 0x123122ba8 <line:27:14> 'char **' <LValueToRValue>
|   |   | `-DeclRefExpr 0x123122b88 <col:14> 'char **' lvalue ParmVar 0x12380de58 'error' 'char **'
|   |   `-BinaryOperator 0x123122da0 <line:28:9, col:33> 'char *' '='
|   |     |-UnaryOperator 0x123122bf8 <col:9, col:10> 'char *' lvalue prefix '*' cannot overflow
|   |     | `-ImplicitCastExpr 0x123122be0 <col:10> 'char **' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x123122bc0 <col:10> 'char **' lvalue ParmVar 0x12380de58 'error' 'char **'
|   |     `-ImplicitCastExpr 0x123122d88 <col:18, col:33> 'char *' <IntegralToPointer>
|   |       `-CallExpr 0x123122d48 <col:18, col:33> 'int'
|   |         |-ImplicitCastExpr 0x123122d30 <col:18> 'int (*)()' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x123122cf0 <col:18> 'int ()' Function 0x123122c38 'xasprintf' 'int ()'
|   |         `-ImplicitCastExpr 0x123122d70 <col:28> 'char *' <ArrayToPointerDecay>
|   |           `-StringLiteral 0x123122d10 <col:28> 'char[4]' lvalue "STR"
|   `-ReturnStmt 0x123122f48 <line:31:5, col:12>
|     `-ImplicitCastExpr 0x123122f30 <col:12> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x123122f10 <col:12> 'char *' lvalue Var 0x123122858 'problem_id' 'char *'
`-FunctionDecl 0x1248093d0 <line:17:9> col:9 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern
  |-ParmVarDecl 0x1248094d0 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x124809538 <<invalid sloc>> <invalid sloc> 'unsigned long'
  |-ParmVarDecl 0x1248095a0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-BuiltinAttr 0x124809478 <<invalid sloc>> Implicit 905
  `-FormatAttr 0x124809620 <col:9> Implicit printf 3 4
