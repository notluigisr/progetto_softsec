TranslationUnitDecl 0x122826408 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1228272b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1228269d0 '__int128'
|-TypedefDecl 0x122827328 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1228269f0 'unsigned __int128'
|-TypedefDecl 0x121018e30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x121018c00 'struct __NSConstantString_tag'
|   `-Record 0x122827380 '__NSConstantString_tag'
|-TypedefDecl 0x121018e98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x122826b90 '__SVInt8_t'
|-TypedefDecl 0x121018f00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x122826bb0 '__SVInt16_t'
|-TypedefDecl 0x121018f68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x122826bd0 '__SVInt32_t'
|-TypedefDecl 0x121018fd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x122826bf0 '__SVInt64_t'
|-TypedefDecl 0x121019038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x122826c10 '__SVUint8_t'
|-TypedefDecl 0x1210190a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x122826c30 '__SVUint16_t'
|-TypedefDecl 0x121019108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x122826c50 '__SVUint32_t'
|-TypedefDecl 0x121019170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x122826c70 '__SVUint64_t'
|-TypedefDecl 0x1210191d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x122826c90 '__SVFloat16_t'
|-TypedefDecl 0x121019240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x122826cb0 '__SVFloat32_t'
|-TypedefDecl 0x1210192a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x122826cd0 '__SVFloat64_t'
|-TypedefDecl 0x121019310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x122826cf0 '__SVBfloat16_t'
|-TypedefDecl 0x121019378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x122826d10 '__clang_svint8x2_t'
|-TypedefDecl 0x1210193e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x122826d30 '__clang_svint16x2_t'
|-TypedefDecl 0x121019448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x122826d50 '__clang_svint32x2_t'
|-TypedefDecl 0x1210194b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x122826d70 '__clang_svint64x2_t'
|-TypedefDecl 0x121019518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x122826d90 '__clang_svuint8x2_t'
|-TypedefDecl 0x121019580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x122826db0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1210195e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x122826dd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x121019650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x122826df0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1210196b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x122826e10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x121019720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x122826e30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x121019788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x122826e50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1210197f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x122826e70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x121019858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x122826e90 '__clang_svint8x3_t'
|-TypedefDecl 0x1210198c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x122826eb0 '__clang_svint16x3_t'
|-TypedefDecl 0x121019928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x122826ed0 '__clang_svint32x3_t'
|-TypedefDecl 0x121019990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x122826ef0 '__clang_svint64x3_t'
|-TypedefDecl 0x1210199f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x122826f10 '__clang_svuint8x3_t'
|-TypedefDecl 0x121019a60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x122826f30 '__clang_svuint16x3_t'
|-TypedefDecl 0x121019ac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x122826f50 '__clang_svuint32x3_t'
|-TypedefDecl 0x121019b30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x122826f70 '__clang_svuint64x3_t'
|-TypedefDecl 0x121019b98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x122826f90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x121019c00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x122826fb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x121019c68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x122826fd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x121019cd0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x122826ff0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x121019d38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x122827010 '__clang_svint8x4_t'
|-TypedefDecl 0x121019da0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x122827030 '__clang_svint16x4_t'
|-TypedefDecl 0x121019e08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x122827050 '__clang_svint32x4_t'
|-TypedefDecl 0x121019e70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x122827070 '__clang_svint64x4_t'
|-TypedefDecl 0x121019ed8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x122827090 '__clang_svuint8x4_t'
|-TypedefDecl 0x121019f40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1228270b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x121019fa8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1228270d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12101a010 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1228270f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12101a078 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x122827110 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12101a0e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x122827130 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12101a148 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x122827150 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12101a1b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x122827170 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12101a218 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x122827190 '__SVBool_t'
|-TypedefDecl 0x12101a280 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1228271b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12101a2e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1228271d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12101a350 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1228271f0 '__SVCount_t'
|-TypedefDecl 0x12101a3f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12101a3b0 'char *'
|   `-BuiltinType 0x1228264b0 'char'
|-TypedefDecl 0x12101a468 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12101a3b0 'char *'
|   `-BuiltinType 0x1228264b0 'char'
`-FunctionDecl 0x12101a688 <dataset_diviso_filec/func20699_vuln.c:1:1, line:23:1> line:1:12 invalid fts3DoAutoincrmerge 'int (int *, const char *)' static
  |-ParmVarDecl 0x12101a528 <line:2:3, col:14> col:14 referenced invalid p 'int *'
  |-ParmVarDecl 0x12101a5a8 <line:3:3, col:15> col:15 used zParam 'const char *'
  `-CompoundStmt 0x121033fe8 <line:4:2, line:23:1>
    |-DeclStmt 0x12101a7f8 <line:5:3, col:21>
    | `-VarDecl 0x12101a758 <col:3, col:12> col:7 used rc 'int' cinit
    |   `-RecoveryExpr 0x12101a7d8 <col:12> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12101ab30 <line:7:3, col:41> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12101a890 <col:3, col:6> '<dependent type>' contains-errors lvalue ->nAutoincrmerge
    | | `-RecoveryExpr 0x12101a868 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12101a848 <col:3> 'int *' lvalue ParmVar 0x12101a528 'p' 'int *'
    | `-CallExpr 0x12101ab08 <col:23, col:41> 'int'
    |   |-ImplicitCastExpr 0x12101aaf0 <col:23> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12101aa30 <col:23> 'int ()' Function 0x12101a978 'fts3Getint' 'int ()'
    |   `-UnaryOperator 0x12101aaa0 <col:34, col:35> 'const char **' prefix '&' cannot overflow
    |     `-DeclRefExpr 0x12101aa50 <col:35> 'const char *' lvalue ParmVar 0x12101a5a8 'zParam' 'const char *'
    |-IfStmt 0x1228f3608 <line:8:3, line:10:3>
    | |-BinaryOperator 0x1228f3500 <line:8:7, col:49> 'int' contains-errors '||'
    | | |-BinaryOperator 0x12101abd8 <col:7, col:26> 'int' contains-errors '=='
    | | | |-CXXDependentScopeMemberExpr 0x12101ab70 <col:7, col:10> '<dependent type>' contains-errors lvalue ->nAutoincrmerge
    | | | | `-RecoveryExpr 0x12101ab50 <col:7> '<dependent type>' contains-errors lvalue
    | | | `-IntegerLiteral 0x12101abb8 <col:26> 'int' 1
    | | `-BinaryOperator 0x1228f34e0 <col:31, col:49> 'int' contains-errors '>'
    | |   |-CXXDependentScopeMemberExpr 0x1228f3420 <col:31, col:34> '<dependent type>' contains-errors lvalue ->nAutoincrmerge
    | |   | `-RecoveryExpr 0x1228f3400 <col:31> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x1228f34c0 <col:49> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1228f35f0 <col:67, line:10:3>
    |   `-BinaryOperator 0x1228f35d0 <line:9:5, col:25> '<dependent type>' contains-errors '='
    |     |-CXXDependentScopeMemberExpr 0x1228f3568 <col:5, col:8> '<dependent type>' contains-errors lvalue ->nAutoincrmerge
    |     | `-RecoveryExpr 0x1228f3540 <col:5> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x1228f3520 <col:5> 'int *' lvalue ParmVar 0x12101a528 'p' 'int *'
    |     `-IntegerLiteral 0x1228f35b0 <col:25> 'int' 8
    |-IfStmt 0x1228f3ae0 <line:11:3, line:15:3>
    | |-UnaryOperator 0x1228f36a8 <line:11:7, col:11> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1228f3690 <col:8, col:11> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-CXXDependentScopeMemberExpr 0x1228f3648 <col:8, col:11> '<dependent type>' contains-errors lvalue ->bHasStat
    | |     `-RecoveryExpr 0x1228f3628 <col:8> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1228f3ab8 <col:21, line:15:3>
    |   |-CallExpr 0x1228f3868 <line:12:5, col:25> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1228f37a0 <col:5> 'int ()' Function 0x1228f36e8 'assert' 'int ()'
    |   | `-BinaryOperator 0x1228f3848 <col:13, col:23> 'int' contains-errors '=='
    |   |   |-CXXDependentScopeMemberExpr 0x1228f37e0 <col:13, col:16> '<dependent type>' contains-errors lvalue ->bFts4
    |   |   | `-RecoveryExpr 0x1228f37c0 <col:13> '<dependent type>' contains-errors lvalue
    |   |   `-IntegerLiteral 0x1228f3828 <col:23> 'int' 0
    |   |-CallExpr 0x1228f39e8 <line:13:5, col:38> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1228f3970 <col:5> 'int ()' Function 0x1228f38b8 'sqlite3Fts3CreateStatTable' 'int ()'
    |   | |-UnaryOperator 0x1228f39b0 <col:32, col:33> 'int *' contains-errors prefix '&' cannot overflow
    |   | | `-DeclRefExpr 0x1228f3990 <col:33> 'int' contains-errors lvalue Var 0x12101a758 'rc' 'int'
    |   | `-RecoveryExpr 0x1228f39c8 <col:37> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x1228f3a98 <line:14:5, col:21>
    |     |-ImplicitCastExpr 0x1228f3a38 <col:9> 'int' contains-errors <LValueToRValue>
    |     | `-DeclRefExpr 0x1228f3a18 <col:9> 'int' contains-errors lvalue Var 0x12101a758 'rc' 'int'
    |     `-ReturnStmt 0x1228f3a88 <col:14, col:21>
    |       `-ImplicitCastExpr 0x1228f3a70 <col:21> 'int' contains-errors <LValueToRValue>
    |         `-DeclRefExpr 0x1228f3a50 <col:21> 'int' contains-errors lvalue Var 0x12101a758 'rc' 'int'
    |-BinaryOperator 0x1228f3da0 <line:16:3, col:50> 'int' contains-errors '='
    | |-DeclRefExpr 0x1228f3b00 <col:3> 'int' contains-errors lvalue Var 0x12101a758 'rc' 'int'
    | `-CallExpr 0x1228f3d60 <col:8, col:50> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1228f3c00 <col:8> 'int ()' Function 0x1228f3b48 'fts3SqlStmt' 'int ()'
    |   |-RecoveryExpr 0x1228f3c20 <col:20> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x1228f3d08 <col:23> '<dependent type>' contains-errors lvalue
    |   |-UnaryOperator 0x1228f3d48 <col:41, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x1228f3d28 <col:42> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x1228f3c88 <col:49> 'int' 0
    |-IfStmt 0x1228f3e40 <line:17:3, col:19>
    | |-ImplicitCastExpr 0x1228f3de0 <col:7> 'int' contains-errors <LValueToRValue>
    | | `-DeclRefExpr 0x1228f3dc0 <col:7> 'int' contains-errors lvalue Var 0x12101a758 'rc' 'int'
    | `-ReturnStmt 0x1228f3e30 <col:12, col:19>
    |   `-ImplicitCastExpr 0x1228f3e18 <col:19> 'int' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x1228f3df8 <col:19> 'int' contains-errors lvalue Var 0x12101a758 'rc' 'int'
    |-CallExpr 0x1228f4028 <line:18:3, col:52> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1228f3f40 <col:3> 'int ()' Function 0x1228f3e88 'sqlite3_bind_int' 'int ()'
    | |-RecoveryExpr 0x1228f3fe8 <col:20> '<dependent type>' contains-errors lvalue
    | |-IntegerLiteral 0x1228f3f78 <col:27> 'int' 1
    | `-RecoveryExpr 0x1228f4008 <col:30> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x1228f4178 <line:19:3, col:47> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1228f4060 <col:3> 'int ()' Function 0x1228f3e88 'sqlite3_bind_int' 'int ()'
    | |-RecoveryExpr 0x1228f4158 <col:20> '<dependent type>' contains-errors lvalue
    | |-IntegerLiteral 0x1228f4098 <col:27> 'int' 2
    | `-CXXDependentScopeMemberExpr 0x1228f40d8 <col:30, col:33> '<dependent type>' contains-errors lvalue ->nAutoincrmerge
    |   `-RecoveryExpr 0x1228f40b8 <col:30> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x1228f4310 <line:20:3, col:21> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1228f4290 <col:3> 'int ()' Function 0x1228f41d8 'sqlite3_step' 'int ()'
    | `-RecoveryExpr 0x1228f42f0 <col:16> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x121033f80 <line:21:3, col:27> 'int' contains-errors '='
    | |-DeclRefExpr 0x1228f4338 <col:3> 'int' contains-errors lvalue Var 0x12101a758 'rc' 'int'
    | `-CallExpr 0x121033f58 <col:8, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x121033eb8 <col:8> 'int ()' Function 0x121033e00 'sqlite3_reset' 'int ()'
    |   `-RecoveryExpr 0x121033f38 <col:22> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x121033fd8 <line:22:3, col:10>
      `-ImplicitCastExpr 0x121033fc0 <col:10> 'int' contains-errors <LValueToRValue>
        `-DeclRefExpr 0x121033fa0 <col:10> 'int' contains-errors lvalue Var 0x12101a758 'rc' 'int'
