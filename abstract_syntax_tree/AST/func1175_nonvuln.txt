TranslationUnitDecl 0x145855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1458564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x145855bd0 '__int128'
|-TypedefDecl 0x145856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x145855bf0 'unsigned __int128'
|-TypedefDecl 0x145926630 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x145926400 'struct __NSConstantString_tag'
|   `-Record 0x145856580 '__NSConstantString_tag'
|-TypedefDecl 0x145926698 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x145855d90 '__SVInt8_t'
|-TypedefDecl 0x145926700 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x145855db0 '__SVInt16_t'
|-TypedefDecl 0x145926768 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x145855dd0 '__SVInt32_t'
|-TypedefDecl 0x1459267d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x145855df0 '__SVInt64_t'
|-TypedefDecl 0x145926838 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x145855e10 '__SVUint8_t'
|-TypedefDecl 0x1459268a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x145855e30 '__SVUint16_t'
|-TypedefDecl 0x145926908 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x145855e50 '__SVUint32_t'
|-TypedefDecl 0x145926970 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x145855e70 '__SVUint64_t'
|-TypedefDecl 0x1459269d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x145855e90 '__SVFloat16_t'
|-TypedefDecl 0x145926a40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x145855eb0 '__SVFloat32_t'
|-TypedefDecl 0x145926aa8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x145855ed0 '__SVFloat64_t'
|-TypedefDecl 0x145926b10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x145855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x145926b78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x145855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x145926be0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x145855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x145926c48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x145855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x145926cb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x145855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x145926d18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x145855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x145926d80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x145855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x145926de8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x145855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x145926e50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x145855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x145926eb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x145856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x145926f20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x145856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x145926f88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x145856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x145926ff0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x145856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x145927058 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x145856090 '__clang_svint8x3_t'
|-TypedefDecl 0x1459270c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1458560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x145927128 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1458560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x145927190 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1458560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1459271f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x145856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x145927260 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x145856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1459272c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x145856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x145927330 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x145856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x145927398 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x145856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x145927c00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1458561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x145927c68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1458561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x145927cd0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1458561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x145927d38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x145856210 '__clang_svint8x4_t'
|-TypedefDecl 0x145927da0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x145856230 '__clang_svint16x4_t'
|-TypedefDecl 0x145927e08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x145856250 '__clang_svint32x4_t'
|-TypedefDecl 0x145927e70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x145856270 '__clang_svint64x4_t'
|-TypedefDecl 0x145927ed8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x145856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x145927f40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1458562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x145927fa8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1458562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x145928010 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1458562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x145928078 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x145856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1459280e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x145856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x145928148 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x145856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1459281b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x145856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x145928218 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x145856390 '__SVBool_t'
|-TypedefDecl 0x145928280 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1458563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1459282e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1458563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x145928350 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1458563f0 '__SVCount_t'
|-TypedefDecl 0x1459283f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1459283b0 'char *'
|   `-BuiltinType 0x1458556b0 'char'
|-TypedefDecl 0x145928468 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1459283b0 'char *'
|   `-BuiltinType 0x1458556b0 'char'
`-FunctionDecl 0x145941190 <dataset_diviso_filec/func1175_nonvuln.c:1:1, line:39:1> line:1:13 invalid snippet_add_content 'void (struct snippet_context *, struct snippet_data *, const unsigned char *, int, int *)' static
  |-ParmVarDecl 0x145928a48 <col:33, col:57> col:57 used ctx 'struct snippet_context *'
  |-ParmVarDecl 0x145940e28 <line:2:5, col:26> col:26 used target 'struct snippet_data *'
  |-ParmVarDecl 0x145940ed8 <line:3:5, col:26> col:26 used data 'const unsigned char *'
  |-ParmVarDecl 0x145940f70 <col:32, col:39> col:39 invalid size 'int'
  |-ParmVarDecl 0x145941028 <line:4:5, col:13> col:13 invalid count_r 'int *'
  `-CompoundStmt 0x1459443e0 <line:5:1, line:39:1>
    |-CallExpr 0x1459414a0 <line:6:2, col:25> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1459413c0 <col:2> 'int ()' Function 0x145941308 'i_assert' 'int ()'
    | `-BinaryOperator 0x145941480 <col:11, col:21> 'int' contains-errors '!='
    |   |-DeclRefExpr 0x1459413e0 <col:11> 'struct snippet_data *' lvalue ParmVar 0x145940e28 'target' 'struct snippet_data *'
    |   `-RecoveryExpr 0x145941460 <col:21> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x145941538 <line:7:2, line:8:3>
    | |-BinaryOperator 0x145941508 <line:7:6, col:14> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x1459414c8 <col:6> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x1459414e8 <col:14> 'int' 0
    | `-ReturnStmt 0x145941528 <line:8:3>
    |-IfStmt 0x145941d08 <line:9:2, line:14:2>
    | |-BinaryOperator 0x145941c28 <line:9:6, line:11:63> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x145941598 <line:9:6, col:14> 'int' contains-errors '>='
    | | | |-RecoveryExpr 0x145941558 <col:6> '<dependent type>' contains-errors lvalue
    | | | `-IntegerLiteral 0x145941578 <col:14> 'int' 3
    | | `-ParenExpr 0x145941c08 <line:10:7, line:11:63> 'int'
    | |   `-BinaryOperator 0x145941be8 <line:10:8, line:11:62> 'int' '||'
    | |     |-ParenExpr 0x1459418b0 <line:10:8, col:62> 'int'
    | |     | `-BinaryOperator 0x145941890 <col:9, col:58> 'int' '&&'
    | |     |   |-BinaryOperator 0x145941788 <col:9, col:39> 'int' '&&'
    | |     |   | |-BinaryOperator 0x145941680 <col:9, col:20> 'int' '=='
    | |     |   | | |-ImplicitCastExpr 0x145941668 <col:9, col:15> 'int' <IntegralCast>
    | |     |   | | | `-ImplicitCastExpr 0x145941650 <col:9, col:15> 'unsigned char' <LValueToRValue>
    | |     |   | | |   `-ArraySubscriptExpr 0x145941610 <col:9, col:15> 'const unsigned char' lvalue
    | |     |   | | |     |-ImplicitCastExpr 0x1459415f8 <col:9> 'const unsigned char *' <LValueToRValue>
    | |     |   | | |     | `-DeclRefExpr 0x1459415b8 <col:9> 'const unsigned char *' lvalue ParmVar 0x145940ed8 'data' 'const unsigned char *'
    | |     |   | | |     `-IntegerLiteral 0x1459415d8 <col:14> 'int' 0
    | |     |   | | `-IntegerLiteral 0x145941630 <col:20> 'int' 239
    | |     |   | `-BinaryOperator 0x145941768 <col:28, col:39> 'int' '=='
    | |     |   |   |-ImplicitCastExpr 0x145941750 <col:28, col:34> 'int' <IntegralCast>
    | |     |   |   | `-ImplicitCastExpr 0x145941738 <col:28, col:34> 'unsigned char' <LValueToRValue>
    | |     |   |   |   `-ArraySubscriptExpr 0x1459416f8 <col:28, col:34> 'const unsigned char' lvalue
    | |     |   |   |     |-ImplicitCastExpr 0x1459416e0 <col:28> 'const unsigned char *' <LValueToRValue>
    | |     |   |   |     | `-DeclRefExpr 0x1459416a0 <col:28> 'const unsigned char *' lvalue ParmVar 0x145940ed8 'data' 'const unsigned char *'
    | |     |   |   |     `-IntegerLiteral 0x1459416c0 <col:33> 'int' 1
    | |     |   |   `-IntegerLiteral 0x145941718 <col:39> 'int' 187
    | |     |   `-BinaryOperator 0x145941870 <col:47, col:58> 'int' '=='
    | |     |     |-ImplicitCastExpr 0x145941858 <col:47, col:53> 'int' <IntegralCast>
    | |     |     | `-ImplicitCastExpr 0x145941840 <col:47, col:53> 'unsigned char' <LValueToRValue>
    | |     |     |   `-ArraySubscriptExpr 0x145941800 <col:47, col:53> 'const unsigned char' lvalue
    | |     |     |     |-ImplicitCastExpr 0x1459417e8 <col:47> 'const unsigned char *' <LValueToRValue>
    | |     |     |     | `-DeclRefExpr 0x1459417a8 <col:47> 'const unsigned char *' lvalue ParmVar 0x145940ed8 'data' 'const unsigned char *'
    | |     |     |     `-IntegerLiteral 0x1459417c8 <col:52> 'int' 2
    | |     |     `-IntegerLiteral 0x145941820 <col:58> 'int' 191
    | |     `-ParenExpr 0x145941bc8 <line:11:8, col:62> 'int'
    | |       `-BinaryOperator 0x145941ba8 <col:9, col:58> 'int' '&&'
    | |         |-BinaryOperator 0x145941aa0 <col:9, col:39> 'int' '&&'
    | |         | |-BinaryOperator 0x145941998 <col:9, col:20> 'int' '=='
    | |         | | |-ImplicitCastExpr 0x145941980 <col:9, col:15> 'int' <IntegralCast>
    | |         | | | `-ImplicitCastExpr 0x145941968 <col:9, col:15> 'unsigned char' <LValueToRValue>
    | |         | | |   `-ArraySubscriptExpr 0x145941928 <col:9, col:15> 'const unsigned char' lvalue
    | |         | | |     |-ImplicitCastExpr 0x145941910 <col:9> 'const unsigned char *' <LValueToRValue>
    | |         | | |     | `-DeclRefExpr 0x1459418d0 <col:9> 'const unsigned char *' lvalue ParmVar 0x145940ed8 'data' 'const unsigned char *'
    | |         | | |     `-IntegerLiteral 0x1459418f0 <col:14> 'int' 0
    | |         | | `-IntegerLiteral 0x145941948 <col:20> 'int' 191
    | |         | `-BinaryOperator 0x145941a80 <col:28, col:39> 'int' '=='
    | |         |   |-ImplicitCastExpr 0x145941a68 <col:28, col:34> 'int' <IntegralCast>
    | |         |   | `-ImplicitCastExpr 0x145941a50 <col:28, col:34> 'unsigned char' <LValueToRValue>
    | |         |   |   `-ArraySubscriptExpr 0x145941a10 <col:28, col:34> 'const unsigned char' lvalue
    | |         |   |     |-ImplicitCastExpr 0x1459419f8 <col:28> 'const unsigned char *' <LValueToRValue>
    | |         |   |     | `-DeclRefExpr 0x1459419b8 <col:28> 'const unsigned char *' lvalue ParmVar 0x145940ed8 'data' 'const unsigned char *'
    | |         |   |     `-IntegerLiteral 0x1459419d8 <col:33> 'int' 1
    | |         |   `-IntegerLiteral 0x145941a30 <col:39> 'int' 187
    | |         `-BinaryOperator 0x145941b88 <col:47, col:58> 'int' '=='
    | |           |-ImplicitCastExpr 0x145941b70 <col:47, col:53> 'int' <IntegralCast>
    | |           | `-ImplicitCastExpr 0x145941b58 <col:47, col:53> 'unsigned char' <LValueToRValue>
    | |           |   `-ArraySubscriptExpr 0x145941b18 <col:47, col:53> 'const unsigned char' lvalue
    | |           |     |-ImplicitCastExpr 0x145941b00 <col:47> 'const unsigned char *' <LValueToRValue>
    | |           |     | `-DeclRefExpr 0x145941ac0 <col:47> 'const unsigned char *' lvalue ParmVar 0x145940ed8 'data' 'const unsigned char *'
    | |           |     `-IntegerLiteral 0x145941ae0 <col:52> 'int' 2
    | |           `-IntegerLiteral 0x145941b38 <col:58> 'int' 239
    | `-CompoundStmt 0x145941ce8 <col:66, line:14:2>
    |   |-BinaryOperator 0x145941cb8 <line:12:3, col:14> '<dependent type>' contains-errors '='
    |   | |-UnaryOperator 0x145941c80 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x145941c68 <col:4> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   `-RecoveryExpr 0x145941c48 <col:4> '<dependent type>' contains-errors lvalue
    |   | `-IntegerLiteral 0x145941c98 <col:14> 'int' 3
    |   `-ReturnStmt 0x145941cd8 <line:13:3>
    |-IfStmt 0x145942c48 <line:15:2, line:18:2>
    | |-BinaryOperator 0x145942c00 <line:15:6, col:17> 'int' '=='
    | | |-ImplicitCastExpr 0x145941dd0 <col:6, col:12> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x145941db8 <col:6, col:12> 'unsigned char' <LValueToRValue>
    | | |   `-ArraySubscriptExpr 0x145941d80 <col:6, col:12> 'const unsigned char' lvalue
    | | |     |-ImplicitCastExpr 0x145941d68 <col:6> 'const unsigned char *' <LValueToRValue>
    | | |     | `-DeclRefExpr 0x145941d28 <col:6> 'const unsigned char *' lvalue ParmVar 0x145940ed8 'data' 'const unsigned char *'
    | | |     `-IntegerLiteral 0x145941d48 <col:11> 'int' 0
    | | `-CharacterLiteral 0x145941da0 <col:17> 'int' 0
    | `-CompoundStmt 0x145942c30 <col:23, line:18:2>
    |   `-ReturnStmt 0x145942c20 <line:17:3>
    |-IfStmt 0x145943330 <line:19:2, line:26:2>
    | |-CallExpr 0x145942e08 <line:19:6, col:21> 'int'
    | | |-ImplicitCastExpr 0x145942df0 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x145942d48 <col:6> 'int ()' Function 0x145942c90 'i_isspace' 'int ()'
    | | `-ImplicitCastExpr 0x145942e48 <col:16, col:17> 'int' <IntegralCast>
    | |   `-ImplicitCastExpr 0x145942e30 <col:16, col:17> 'unsigned char' <LValueToRValue>
    | |     `-UnaryOperator 0x145942da0 <col:16, col:17> 'const unsigned char' lvalue prefix '*' cannot overflow
    | |       `-ImplicitCastExpr 0x145942d88 <col:17> 'const unsigned char *' <LValueToRValue>
    | |         `-DeclRefExpr 0x145942d68 <col:17> 'const unsigned char *' lvalue ParmVar 0x145940ed8 'data' 'const unsigned char *'
    | `-CompoundStmt 0x145943308 <col:24, line:26:2>
    |   |-IfStmt 0x145943100 <line:21:3, line:22:26>
    |   | |-BinaryOperator 0x145943008 <line:21:7, col:34> 'int' contains-errors '>'
    |   | | |-CallExpr 0x145942fc0 <col:7, col:30> '<dependent type>' contains-errors
    |   | | | |-DeclRefExpr 0x145942f40 <col:7> 'int ()' Function 0x145942e88 'str_len' 'int ()'
    |   | | | `-RecoveryExpr 0x145942f98 <col:15, col:23> '<dependent type>' contains-errors lvalue
    |   | | |   `-DeclRefExpr 0x145942f60 <col:15> 'struct snippet_data *' lvalue ParmVar 0x145940e28 'target' 'struct snippet_data *'
    |   | | `-IntegerLiteral 0x145942fe8 <col:34> 'int' 1
    |   | `-BinaryOperator 0x1459430e0 <line:22:4, col:26> '<dependent type>' contains-errors '='
    |   |   |-RecoveryExpr 0x145943060 <col:4, col:9> '<dependent type>' contains-errors lvalue
    |   |   | `-DeclRefExpr 0x145943028 <col:4> 'struct snippet_context *' lvalue ParmVar 0x145928a48 'ctx' 'struct snippet_context *'
    |   |   `-RecoveryExpr 0x1459430c0 <col:26> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x1459432d8 <line:23:3, line:24:17>
    |   | |-BinaryOperator 0x1459431e0 <line:23:7, col:18> 'int' '=='
    |   | | |-ImplicitCastExpr 0x1459431c8 <col:7, col:13> 'int' <IntegralCast>
    |   | | | `-ImplicitCastExpr 0x1459431b0 <col:7, col:13> 'unsigned char' <LValueToRValue>
    |   | | |   `-ArraySubscriptExpr 0x145943178 <col:7, col:13> 'const unsigned char' lvalue
    |   | | |     |-ImplicitCastExpr 0x145943160 <col:7> 'const unsigned char *' <LValueToRValue>
    |   | | |     | `-DeclRefExpr 0x145943120 <col:7> 'const unsigned char *' lvalue ParmVar 0x145940ed8 'data' 'const unsigned char *'
    |   | | |     `-IntegerLiteral 0x145943140 <col:12> 'int' 0
    |   | | `-CharacterLiteral 0x145943198 <col:18> 'int' 10
    |   | `-BinaryOperator 0x1459432b8 <line:24:4, col:17> '<dependent type>' contains-errors '='
    |   |   |-RecoveryExpr 0x145943238 <col:4, col:9> '<dependent type>' contains-errors lvalue
    |   |   | `-DeclRefExpr 0x145943200 <col:4> 'struct snippet_context *' lvalue ParmVar 0x145928a48 'ctx' 'struct snippet_context *'
    |   |   `-RecoveryExpr 0x145943298 <col:17> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x1459432f8 <line:25:3>
    |-IfStmt 0x145943740 <line:27:2, line:32:2>
    | |-RecoveryExpr 0x145943388 <line:27:6, col:11> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x145943350 <col:6> 'struct snippet_context *' lvalue ParmVar 0x145928a48 'ctx' 'struct snippet_context *'
    | `-CompoundStmt 0x145943718 <col:27, line:32:2>
    |   |-CallExpr 0x145943528 <line:28:3, col:36> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x145943490 <col:3> 'int ()' Function 0x1459433d8 'str_append_c' 'int ()'
    |   | |-RecoveryExpr 0x1459434e8 <col:16, col:24> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x1459434b0 <col:16> 'struct snippet_data *' lvalue ParmVar 0x145940e28 'target' 'struct snippet_data *'
    |   | `-CharacterLiteral 0x145943510 <col:33> 'int' 32
    |   |-BinaryOperator 0x145943610 <line:29:3, col:25> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x145943590 <col:3, col:8> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x145943558 <col:3> 'struct snippet_context *' lvalue ParmVar 0x145928a48 'ctx' 'struct snippet_context *'
    |   | `-RecoveryExpr 0x1459435f0 <col:25> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x1459436f8 <line:30:3, line:31:4>
    |     |-BinaryOperator 0x1459436c8 <line:30:7, col:31> 'int' contains-errors '=='
    |     | |-UnaryOperator 0x145943690 <col:7, col:25> '<dependent type>' contains-errors postfix '--' cannot overflow
    |     | | `-RecoveryExpr 0x145943668 <col:7, col:15> '<dependent type>' contains-errors lvalue
    |     | |   `-DeclRefExpr 0x145943630 <col:7> 'struct snippet_data *' lvalue ParmVar 0x145940e28 'target' 'struct snippet_data *'
    |     | `-IntegerLiteral 0x1459436a8 <col:31> 'int' 0
    |     `-ReturnStmt 0x1459436e8 <line:31:4>
    |-IfStmt 0x145943810 <line:33:2, line:34:3>
    | |-BinaryOperator 0x1459437e0 <line:33:6, col:28> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x145943798 <col:6, col:14> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x145943760 <col:6> 'struct snippet_data *' lvalue ParmVar 0x145940e28 'target' 'struct snippet_data *'
    | | `-IntegerLiteral 0x1459437c0 <col:28> 'int' 0
    | `-ReturnStmt 0x145943800 <line:34:3>
    |-UnaryOperator 0x145943890 <line:35:2, col:20> '<dependent type>' contains-errors postfix '--' cannot overflow
    | `-RecoveryExpr 0x145943868 <col:2, col:10> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x145943830 <col:2> 'struct snippet_data *' lvalue ParmVar 0x145940e28 'target' 'struct snippet_data *'
    |-BinaryOperator 0x145943ae0 <line:36:2, col:40> '<dependent type>' contains-errors '='
    | |-UnaryOperator 0x1459438e0 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x1459438c8 <col:3> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x1459438a8 <col:3> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x145943a88 <col:13, col:40> 'int'
    |   |-ImplicitCastExpr 0x145943a70 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x1459439d8 <col:13> 'int ()' Function 0x145943920 'uni_utf8_char_bytes' 'int ()'
    |   `-ImplicitCastExpr 0x145943ac8 <col:33, col:39> 'int' <IntegralCast>
    |     `-ImplicitCastExpr 0x145943ab0 <col:33, col:39> 'unsigned char' <LValueToRValue>
    |       `-ArraySubscriptExpr 0x145943a50 <col:33, col:39> 'const unsigned char' lvalue
    |         |-ImplicitCastExpr 0x145943a38 <col:33> 'const unsigned char *' <LValueToRValue>
    |         | `-DeclRefExpr 0x1459439f8 <col:33> 'const unsigned char *' lvalue ParmVar 0x145940ed8 'data' 'const unsigned char *'
    |         `-IntegerLiteral 0x145943a18 <col:38> 'int' 0
    |-CallExpr 0x145943bb0 <line:37:2, col:27> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x145943b00 <col:2> 'int ()' Function 0x145941308 'i_assert' 'int ()'
    | `-BinaryOperator 0x145943b90 <col:11, col:23> 'int' contains-errors '<='
    |   |-UnaryOperator 0x145943b58 <col:11, col:12> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | `-ImplicitCastExpr 0x145943b40 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   |   `-RecoveryExpr 0x145943b20 <col:12> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x145943b70 <col:23> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x1459443a8 <line:38:2, col:49> '<dependent type>' contains-errors
      |-DeclRefExpr 0x1459442b8 <col:2> 'int ()' Function 0x145944200 'str_append_data' 'int ()'
      |-RecoveryExpr 0x145944310 <col:18, col:26> '<dependent type>' contains-errors lvalue
      | `-DeclRefExpr 0x1459442d8 <col:18> 'struct snippet_data *' lvalue ParmVar 0x145940e28 'target' 'struct snippet_data *'
      |-DeclRefExpr 0x145944338 <col:35> 'const unsigned char *' lvalue ParmVar 0x145940ed8 'data' 'const unsigned char *'
      `-UnaryOperator 0x145944390 <col:41, col:42> '<dependent type>' contains-errors prefix '*' cannot overflow
        `-ImplicitCastExpr 0x145944378 <col:42> '<dependent type>' contains-errors <LValueToRValue>
          `-RecoveryExpr 0x145944358 <col:42> '<dependent type>' contains-errors lvalue
