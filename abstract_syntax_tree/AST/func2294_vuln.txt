TranslationUnitDecl 0x125055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1250564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x125055bd0 '__int128'
|-TypedefDecl 0x125056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x125055bf0 'unsigned __int128'
|-TypedefDecl 0x12580be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12580bc00 'struct __NSConstantString_tag'
|   `-Record 0x125056580 '__NSConstantString_tag'
|-TypedefDecl 0x12580be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x125055d90 '__SVInt8_t'
|-TypedefDecl 0x12580bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x125055db0 '__SVInt16_t'
|-TypedefDecl 0x12580bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x125055dd0 '__SVInt32_t'
|-TypedefDecl 0x12580bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x125055df0 '__SVInt64_t'
|-TypedefDecl 0x12580c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x125055e10 '__SVUint8_t'
|-TypedefDecl 0x12580c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x125055e30 '__SVUint16_t'
|-TypedefDecl 0x12580c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x125055e50 '__SVUint32_t'
|-TypedefDecl 0x12580c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x125055e70 '__SVUint64_t'
|-TypedefDecl 0x12580c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x125055e90 '__SVFloat16_t'
|-TypedefDecl 0x12580c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x125055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12580c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x125055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12580c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x125055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12580c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x125055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12580c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x125055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12580c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x125055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12580c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x125055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12580c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x125055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12580c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x125055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12580c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x125055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12580c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x125055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12580c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x125056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12580c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x125056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12580c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x125056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12580c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x125056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12580c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x125056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12580c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1250560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12580c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1250560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12580c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1250560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12580c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x125056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12580ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x125056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12580cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x125056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12580cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x125056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12580cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x125056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12580d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1250561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12580d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1250561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12580d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1250561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12580d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x125056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12580d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x125056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12580d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x125056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12580d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x125056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12580d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x125056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12580d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1250562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12580d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1250562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12580d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1250562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12580d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x125056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12580d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x125056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12580d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x125056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12580d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x125056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12580da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x125056390 '__SVBool_t'
|-TypedefDecl 0x12580da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1250563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12580dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1250563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12580db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1250563f0 '__SVCount_t'
|-TypedefDecl 0x12580dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12580dbb0 'char *'
|   `-BuiltinType 0x1250556b0 'char'
|-TypedefDecl 0x12580dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12580dbb0 'char *'
|   `-BuiltinType 0x1250556b0 'char'
|-FunctionDecl 0x12580de88 <dataset_diviso_filec/func2294_vuln.c:1:1, line:90:1> line:1:1 invalid rsvg_start_xinclude 'int (int *, int *)'
| |-ParmVarDecl 0x12580dd28 <col:22, col:35> col:35 referenced invalid ctx 'int *'
| |-ParmVarDecl 0x12580dda8 <col:40, col:58> col:58 invalid atts 'int *'
| `-CompoundStmt 0x126809ac0 <line:2:1, line:90:1>
|   |-DeclStmt 0x12580e070 <line:4:5, col:29>
|   | |-VarDecl 0x12580df70 <col:5, col:17> col:17 used href 'const char *'
|   | `-VarDecl 0x12580dff0 <col:5, col:24> col:24 used parse 'const char *'
|   |-BinaryOperator 0x12580e2d0 <line:7:5, col:49> 'const char *' contains-errors '='
|   | |-DeclRefExpr 0x12580e088 <col:5> 'const char *' lvalue Var 0x12580df70 'href' 'const char *'
|   | `-CallExpr 0x12580e2a0 <col:12, col:49> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x12580e200 <col:12> 'int ()' Function 0x12580e148 'rsvg_property_bag_lookup' 'int ()'
|   |   |-RecoveryExpr 0x12580e220 <col:38> '<dependent type>' contains-errors lvalue
|   |   `-StringLiteral 0x12580e280 <col:44> 'char[4]' lvalue "STR"
|   |-IfStmt 0x125827800 <line:8:5, line:9:14>
|   | |-BinaryOperator 0x12580e368 <line:8:9, col:17> 'int' contains-errors '=='
|   | | |-DeclRefExpr 0x12580e2f0 <col:9> 'const char *' lvalue Var 0x12580df70 'href' 'const char *'
|   | | `-RecoveryExpr 0x12580e348 <col:17> '<dependent type>' contains-errors lvalue
|   | `-GotoStmt 0x12580e3d8 <line:9:9, col:14> 'fallback' 0x12580e388
|   |-BinaryOperator 0x1258278d0 <line:11:5, col:50> 'const char *' contains-errors '='
|   | |-DeclRefExpr 0x125827820 <col:5> 'const char *' lvalue Var 0x12580dff0 'parse' 'const char *'
|   | `-CallExpr 0x1258278a0 <col:13, col:50> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x125827840 <col:13> 'int ()' Function 0x12580e148 'rsvg_property_bag_lookup' 'int ()'
|   |   |-RecoveryExpr 0x125827860 <col:39> '<dependent type>' contains-errors lvalue
|   |   `-StringLiteral 0x125827880 <col:45> 'char[4]' lvalue "STR"
|   |-IfStmt 0x1268097a0 <line:12:5, line:72:5> has_else
|   | |-BinaryOperator 0x1258280d0 <line:12:9, col:39> 'int' '&&'
|   | | |-ImplicitCastExpr 0x1258280b8 <col:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1258278f0 <col:9> 'const char *' lvalue Var 0x12580dff0 'parse' 'const char *'
|   | | `-UnaryOperator 0x1258280a0 <col:18, col:39> 'int' prefix '!' cannot overflow
|   | |   `-CallExpr 0x125828028 <col:19, col:39> 'int'
|   | |     |-ImplicitCastExpr 0x125828010 <col:19> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | |     | `-DeclRefExpr 0x125827f50 <col:19> 'int (const char *, const char *)' Function 0x125827d70 'strcmp' 'int (const char *, const char *)'
|   | |     |-ImplicitCastExpr 0x125828058 <col:27> 'const char *' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x125827f70 <col:27> 'const char *' lvalue Var 0x12580dff0 'parse' 'const char *'
|   | |     `-ImplicitCastExpr 0x125828088 <col:34> 'const char *' <NoOp>
|   | |       `-ImplicitCastExpr 0x125828070 <col:34> 'char *' <ArrayToPointerDecay>
|   | |         `-StringLiteral 0x125827f90 <col:34> 'char[4]' lvalue "STR"
|   | |-CompoundStmt 0x126808a78 <col:42, line:37:5>
|   | | |-DeclStmt 0x125828188 <line:15:9, col:29>
|   | | | `-VarDecl 0x125828120 <col:9, col:21> col:21 used encoding 'const char *'
|   | | |-IfStmt 0x125828450 <line:18:9, line:19:18>
|   | | | |-BinaryOperator 0x125828418 <line:18:13, col:21> 'int' contains-errors '=='
|   | | | | |-RecoveryExpr 0x1258283d8 <col:13> '<dependent type>' contains-errors lvalue
|   | | | | `-RecoveryExpr 0x1258283f8 <col:21> '<dependent type>' contains-errors lvalue
|   | | | `-GotoStmt 0x125828438 <line:19:13, col:18> 'fallback' 0x12580e388
|   | | |-BinaryOperator 0x125828520 <line:21:9, col:57> 'const char *' contains-errors '='
|   | | | |-DeclRefExpr 0x125828470 <col:9> 'const char *' lvalue Var 0x125828120 'encoding' 'const char *'
|   | | | `-CallExpr 0x1258284f0 <col:20, col:57> '<dependent type>' contains-errors
|   | | |   |-DeclRefExpr 0x125828490 <col:20> 'int ()' Function 0x12580e148 'rsvg_property_bag_lookup' 'int ()'
|   | | |   |-RecoveryExpr 0x1258284b0 <col:46> '<dependent type>' contains-errors lvalue
|   | | |   `-StringLiteral 0x1258284d0 <col:52> 'char[4]' lvalue "STR"
|   | | `-IfStmt 0x126808918 <line:22:9, line:32:9>
|   | |   |-BinaryOperator 0x1258287a0 <line:22:13, col:65> 'int' '&&'
|   | |   | |-ImplicitCastExpr 0x125828788 <col:13> 'const char *' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x125828540 <col:13> 'const char *' lvalue Var 0x125828120 'encoding' 'const char *'
|   | |   | `-BinaryOperator 0x125828768 <col:25, col:65> 'int' '!='
|   | |   |   |-CallExpr 0x1258286e8 <col:25, col:60> 'int'
|   | |   |   | |-ImplicitCastExpr 0x1258286d0 <col:25> 'int (*)()' <FunctionToPointerDecay>
|   | |   |   | | `-DeclRefExpr 0x125828640 <col:25> 'int ()' Function 0x125828588 'g_ascii_strcasecmp' 'int ()'
|   | |   |   | |-ImplicitCastExpr 0x125828718 <col:45> 'const char *' <LValueToRValue>
|   | |   |   | | `-DeclRefExpr 0x125828660 <col:45> 'const char *' lvalue Var 0x125828120 'encoding' 'const char *'
|   | |   |   | `-ImplicitCastExpr 0x125828730 <col:55> 'char *' <ArrayToPointerDecay>
|   | |   |   |   `-StringLiteral 0x125828680 <col:55> 'char[4]' lvalue "STR"
|   | |   |   `-IntegerLiteral 0x125828748 <col:65> 'int' 0
|   | |   `-CompoundStmt 0x126808900 <col:68, line:32:9>
|   | |     `-DeclStmt 0x126808668 <line:23:13, col:28>
|   | |       `-VarDecl 0x126808600 <col:13, col:19> col:19 used text_data 'char *'
|   | `-CompoundStmt 0x126809780 <line:37:12, line:72:5>
|   |   |-IfStmt 0x126808c20 <line:47:9, line:48:18>
|   |   | |-RecoveryExpr 0x126808be8 <line:47:13, col:23> '_Bool' contains-errors
|   |   | `-GotoStmt 0x126808c08 <line:48:13, col:18> 'fallback' 0x12580e388
|   |   `-IfStmt 0x1268094f0 <line:57:9, line:62:9>
|   |     |-RecoveryExpr 0x1268091a0 <line:57:13, col:48> '_Bool' contains-errors
|   |     `-CompoundStmt 0x1268094d8 <col:51, line:62:9>
|   |       `-GotoStmt 0x1268094c0 <line:61:13, col:18> 'fallback' 0x12580e388
|   `-LabelStmt 0x1268098f8 <line:76:3, col:11> 'fallback'
|     `-NullStmt 0x1268098f0 <col:11>
`-FunctionDecl 0x125827d70 <line:12:19> col:19 implicit used strcmp 'int (const char *, const char *)' extern
  |-ParmVarDecl 0x125827e70 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x125827ed8 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x125827e18 <<invalid sloc>> Implicit 887
