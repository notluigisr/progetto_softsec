TranslationUnitDecl 0x14a855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14a8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14a855bd0 '__int128'
|-TypedefDecl 0x14a856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14a855bf0 'unsigned __int128'
|-TypedefDecl 0x14b00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14b00bc00 'struct __NSConstantString_tag'
|   `-Record 0x14a856580 '__NSConstantString_tag'
|-TypedefDecl 0x14b00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14a855d90 '__SVInt8_t'
|-TypedefDecl 0x14b00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14a855db0 '__SVInt16_t'
|-TypedefDecl 0x14b00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14a855dd0 '__SVInt32_t'
|-TypedefDecl 0x14b00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14a855df0 '__SVInt64_t'
|-TypedefDecl 0x14b00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14a855e10 '__SVUint8_t'
|-TypedefDecl 0x14b00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14a855e30 '__SVUint16_t'
|-TypedefDecl 0x14b00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14a855e50 '__SVUint32_t'
|-TypedefDecl 0x14b00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14a855e70 '__SVUint64_t'
|-TypedefDecl 0x14b00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14a855e90 '__SVFloat16_t'
|-TypedefDecl 0x14b00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14a855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14b00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14a855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14b00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14a855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14b00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14a855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14b00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14a855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14b00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14a855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14b00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14a855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14b00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14a855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14b00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14a855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14b00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14a855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14b00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14a855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14b00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14a856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14b00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14a856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14b00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14a856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14b00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14a856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14b00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14a856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14b00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14a8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14b00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14a8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14b00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14a8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14b00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14a856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14b00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14a856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14b00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14a856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14b00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14a856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14b00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14a856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14b00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14a8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14b00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14a8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14b00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14a8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14b00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14a856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14b00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14a856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14b00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14a856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14b00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14a856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14b00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14a856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14b00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14a8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14b00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14a8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14b00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14a8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14b00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14a856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14b00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14a856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14b00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14a856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14b00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14a856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14b00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14a856390 '__SVBool_t'
|-TypedefDecl 0x14b00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14a8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14b00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14a8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14b00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14a8563f0 '__SVCount_t'
|-TypedefDecl 0x14b00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14b00dbb0 'char *'
|   `-BuiltinType 0x14a8556b0 'char'
|-TypedefDecl 0x14b00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14b00dbb0 'char *'
|   `-BuiltinType 0x14a8556b0 'char'
|-FunctionDecl 0x14b00e350 <dataset_diviso_filec/func3150_nonvuln.c:1:1, line:51:1> line:1:13 parse_connection 'void (struct transaction_t *)' static
| |-ParmVarDecl 0x14b00e248 <col:30, col:52> col:52 used txn 'struct transaction_t *'
| `-CompoundStmt 0x14b02b880 <line:2:1, line:51:1>
|   |-DeclStmt 0x14b026940 <line:3:5, col:62>
|   | `-VarDecl 0x14b026698 <col:5, col:61> col:18 used conn 'const char **' cinit
|   |   `-CallExpr 0x14b026910 <col:25, col:61> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x14b026830 <col:25> 'int ()' Function 0x14b026778 'spool_getheader' 'int ()'
|   |     |-RecoveryExpr 0x14b026888 <col:41, col:46> '<dependent type>' contains-errors lvalue
|   |     | `-DeclRefExpr 0x14b026850 <col:41> 'struct transaction_t *' lvalue ParmVar 0x14b00e248 'txn' 'struct transaction_t *'
|   |     `-StringLiteral 0x14b0268f0 <col:56> 'char[4]' lvalue "STR"
|   |-DeclStmt 0x14b0269d8 <line:4:5, col:10>
|   | `-VarDecl 0x14b026970 <col:5, col:9> col:9 used i 'int'
|   |-ForStmt 0x14b02b350 <line:7:5, line:40:5>
|   | |-BinaryOperator 0x14b026a30 <line:7:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x14b0269f0 <col:10> 'int' lvalue Var 0x14b026970 'i' 'int'
|   | | `-IntegerLiteral 0x14b026a10 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x14b026b30 <col:17, col:31> 'int' contains-errors '&&'
|   | | |-ImplicitCastExpr 0x14b026b00 <col:17> 'const char **' contains-errors <LValueToRValue>
|   | | | `-DeclRefExpr 0x14b026a50 <col:17> 'const char **' contains-errors lvalue Var 0x14b026698 'conn' 'const char **'
|   | | `-ImplicitCastExpr 0x14b026b18 <col:25, col:31> 'const char *' contains-errors <LValueToRValue>
|   | |   `-ArraySubscriptExpr 0x14b026ae0 <col:25, col:31> 'const char *' contains-errors lvalue
|   | |     |-ImplicitCastExpr 0x14b026ab0 <col:25> 'const char **' contains-errors <LValueToRValue>
|   | |     | `-DeclRefExpr 0x14b026a70 <col:25> 'const char **' contains-errors lvalue Var 0x14b026698 'conn' 'const char **'
|   | |     `-ImplicitCastExpr 0x14b026ac8 <col:30> 'int' <LValueToRValue>
|   | |       `-DeclRefExpr 0x14b026a90 <col:30> 'int' lvalue Var 0x14b026970 'i' 'int'
|   | |-UnaryOperator 0x14b026b70 <col:34, col:35> 'int' postfix '++'
|   | | `-DeclRefExpr 0x14b026b50 <col:34> 'int' lvalue Var 0x14b026970 'i' 'int'
|   | `-CompoundStmt 0x14b02b330 <col:39, line:40:5>
|   |   |-DeclStmt 0x14b026c08 <line:9:2, col:13>
|   |   | `-VarDecl 0x14b026ba0 <col:2, col:8> col:8 used token 'char *'
|   |   `-WhileStmt 0x14b02b210 <line:11:2, line:37:2>
|   |     |-RecoveryExpr 0x14b026db8 <line:11:9, col:32> '_Bool' contains-errors
|   |     `-CompoundStmt 0x14b02b1f0 <col:35, line:37:2>
|   |       |-IfStmt 0x14b029448 <line:12:6, line:24:6>
|   |       | |-RecoveryExpr 0x14b026df0 <line:12:10> '<dependent type>' contains-errors lvalue
|   |       | `-CompoundStmt 0x14b029430 <col:25, line:24:6>
|   |       |   `-IfStmt 0x14b029400 <line:14:3, line:23:3> has_else
|   |       |     |-UnaryOperator 0x14b027198 <line:14:7, col:31> 'int' prefix '!' cannot overflow
|   |       |     | `-CallExpr 0x14b027108 <col:8, col:31> 'int'
|   |       |     |   |-ImplicitCastExpr 0x14b0270f0 <col:8> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |       |     |   | `-DeclRefExpr 0x14b027030 <col:8> 'int (const char *, const char *)' Function 0x14b026e50 'strcasecmp' 'int (const char *, const char *)'
|   |       |     |   |-ImplicitCastExpr 0x14b027150 <col:19> 'const char *' <NoOp>
|   |       |     |   | `-ImplicitCastExpr 0x14b027138 <col:19> 'char *' <LValueToRValue>
|   |       |     |   |   `-DeclRefExpr 0x14b027050 <col:19> 'char *' lvalue Var 0x14b026ba0 'token' 'char *'
|   |       |     |   `-ImplicitCastExpr 0x14b027180 <col:26> 'const char *' <NoOp>
|   |       |     |     `-ImplicitCastExpr 0x14b027168 <col:26> 'char *' <ArrayToPointerDecay>
|   |       |     |       `-StringLiteral 0x14b027070 <col:26> 'char[4]' lvalue "STR"
|   |       |     |-CompoundStmt 0x14b0272f8 <col:34, line:17:3>
|   |       |     | |-CompoundAssignOperator 0x14b0272c0 <line:15:7, col:26> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |       |     | | |-CXXDependentScopeMemberExpr 0x14b027210 <col:7, col:18> '<dependent type>' contains-errors lvalue .conn
|   |       |     | | | `-RecoveryExpr 0x14b0271e8 <col:7, col:12> '<dependent type>' contains-errors lvalue
|   |       |     | | |   `-DeclRefExpr 0x14b0271b0 <col:7> 'struct transaction_t *' lvalue ParmVar 0x14b00e248 'txn' 'struct transaction_t *'
|   |       |     | | `-RecoveryExpr 0x14b0272a0 <col:26> '<dependent type>' contains-errors lvalue
|   |       |     | `-ContinueStmt 0x14b0272f0 <line:16:7>
|   |       |     `-IfStmt 0x14b0275d0 <line:20:8, line:23:3>
|   |       |       |-UnaryOperator 0x14b027450 <line:20:12, col:36> 'int' prefix '!' cannot overflow
|   |       |       | `-CallExpr 0x14b0273c0 <col:13, col:36> 'int'
|   |       |       |   |-ImplicitCastExpr 0x14b0273a8 <col:13> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |       |       |   | `-DeclRefExpr 0x14b027318 <col:13> 'int (const char *, const char *)' Function 0x14b026e50 'strcasecmp' 'int (const char *, const char *)'
|   |       |       |   |-ImplicitCastExpr 0x14b027408 <col:24> 'const char *' <NoOp>
|   |       |       |   | `-ImplicitCastExpr 0x14b0273f0 <col:24> 'char *' <LValueToRValue>
|   |       |       |   |   `-DeclRefExpr 0x14b027338 <col:24> 'char *' lvalue Var 0x14b026ba0 'token' 'char *'
|   |       |       |   `-ImplicitCastExpr 0x14b027438 <col:31> 'const char *' <NoOp>
|   |       |       |     `-ImplicitCastExpr 0x14b027420 <col:31> 'char *' <ArrayToPointerDecay>
|   |       |       |       `-StringLiteral 0x14b027358 <col:31> 'char[4]' lvalue "STR"
|   |       |       `-CompoundStmt 0x14b0275b0 <col:39, line:23:3>
|   |       |         |-CompoundAssignOperator 0x14b027578 <line:21:7, col:26> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |       |         | |-CXXDependentScopeMemberExpr 0x14b0274c8 <col:7, col:18> '<dependent type>' contains-errors lvalue .conn
|   |       |         | | `-RecoveryExpr 0x14b0274a0 <col:7, col:12> '<dependent type>' contains-errors lvalue
|   |       |         | |   `-DeclRefExpr 0x14b027468 <col:7> 'struct transaction_t *' lvalue ParmVar 0x14b00e248 'txn' 'struct transaction_t *'
|   |       |         | `-RecoveryExpr 0x14b027558 <col:26> '<dependent type>' contains-errors lvalue
|   |       |         `-ContinueStmt 0x14b0275a8 <line:22:7>
|   |       `-IfStmt 0x14b02b1d0 <line:27:6, line:36:6>
|   |         |-BinaryOperator 0x14b029940 <line:27:10, line:28:32> 'int' contains-errors '&&'
|   |         | |-BinaryOperator 0x14b029830 <line:27:10, col:41> 'int' contains-errors '&&'
|   |         | | |-UnaryOperator 0x14b0297e0 <col:10, col:11> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x14b0297c8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |         | | |   `-RecoveryExpr 0x14b0297a8 <col:11> '<dependent type>' contains-errors lvalue
|   |         | | `-CallExpr 0x14b029810 <col:29, col:41> 'int'
|   |         | |   `-ImplicitCastExpr 0x14b0297f8 <col:29> 'int (*)()' <FunctionToPointerDecay>
|   |         | |     `-DeclRefExpr 0x14b029590 <col:29> 'int ()' Function 0x14b0294d8 'tls_enabled' 'int ()'
|   |         | `-UnaryOperator 0x14b029928 <line:28:8, col:32> 'int' prefix '!' cannot overflow
|   |         |   `-CallExpr 0x14b029898 <col:9, col:32> 'int'
|   |         |     |-ImplicitCastExpr 0x14b029880 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |         |     | `-DeclRefExpr 0x14b029638 <col:9> 'int (const char *, const char *)' Function 0x14b026e50 'strcasecmp' 'int (const char *, const char *)'
|   |         |     |-ImplicitCastExpr 0x14b0298e0 <col:20> 'const char *' <NoOp>
|   |         |     | `-ImplicitCastExpr 0x14b0298c8 <col:20> 'char *' <LValueToRValue>
|   |         |     |   `-DeclRefExpr 0x14b029658 <col:20> 'char *' lvalue Var 0x14b026ba0 'token' 'char *'
|   |         |     `-ImplicitCastExpr 0x14b029910 <col:27> 'const char *' <NoOp>
|   |         |       `-ImplicitCastExpr 0x14b0298f8 <col:27> 'char *' <ArrayToPointerDecay>
|   |         |         `-StringLiteral 0x14b029678 <col:27> 'char[4]' lvalue "STR"
|   |         `-CompoundStmt 0x14b02b1b0 <col:35, line:36:6>
|   |           |-DeclStmt 0x14b0299e0 <line:29:3, col:21>
|   |           | `-VarDecl 0x14b029978 <col:3, col:16> col:16 used upgrd 'const char **'
|   |           `-IfStmt 0x14b02b190 <line:31:3, line:35:3>
|   |             |-BinaryOperator 0x14b02aef8 <line:31:7, line:32:63> 'int' contains-errors '&&'
|   |             | |-ParenExpr 0x14b029b08 <line:31:7, col:53> 'const char **' contains-errors
|   |             | | `-BinaryOperator 0x14b029ae8 <col:8, col:52> 'const char **' contains-errors '='
|   |             | |   |-DeclRefExpr 0x14b0299f8 <col:8> 'const char **' lvalue Var 0x14b029978 'upgrd' 'const char **'
|   |             | |   `-CallExpr 0x14b029ab8 <col:16, col:52> '<dependent type>' contains-errors
|   |             | |     |-DeclRefExpr 0x14b029a18 <col:16> 'int ()' Function 0x14b026778 'spool_getheader' 'int ()'
|   |             | |     |-RecoveryExpr 0x14b029a70 <col:32, col:37> '<dependent type>' contains-errors lvalue
|   |             | |     | `-DeclRefExpr 0x14b029a38 <col:32> 'struct transaction_t *' lvalue ParmVar 0x14b00e248 'txn' 'struct transaction_t *'
|   |             | |     `-StringLiteral 0x14b029a98 <col:47> 'char[4]' lvalue "STR"
|   |             | `-UnaryOperator 0x14b02aee0 <line:32:7, col:63> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |             |   `-CallExpr 0x14b02aea8 <col:8, col:63> '<dependent type>' contains-errors
|   |             |     |-DeclRefExpr 0x14b029dc8 <col:8> 'int (const char *, const char *, unsigned long)' Function 0x14b029b78 'strncmp' 'int (const char *, const char *, unsigned long)'
|   |             |     |-ArraySubscriptExpr 0x14b02a340 <col:16, col:23> 'const char *' lvalue
|   |             |     | |-ImplicitCastExpr 0x14b02a328 <col:16> 'const char **' <LValueToRValue>
|   |             |     | | `-DeclRefExpr 0x14b029de8 <col:16> 'const char **' lvalue Var 0x14b029978 'upgrd' 'const char **'
|   |             |     | `-IntegerLiteral 0x14b029e08 <col:22> 'int' 0
|   |             |     |-RecoveryExpr 0x14b02a360 <col:26> '<dependent type>' contains-errors lvalue
|   |             |     `-CallExpr 0x14b02ae00 <col:39, col:62> 'unsigned long'
|   |             |       |-ImplicitCastExpr 0x14b02a3e8 <col:39> 'unsigned long (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |             |       | `-DeclRefExpr 0x14b02a0a0 <col:39> 'unsigned long (const char *, const char *)' Function 0x14b029ec0 'strcspn' 'unsigned long (const char *, const char *)'
|   |             |       |-ImplicitCastExpr 0x14b02ae30 <col:47, col:54> 'const char *' <LValueToRValue>
|   |             |       | `-ArraySubscriptExpr 0x14b02a398 <col:47, col:54> 'const char *' lvalue
|   |             |       |   |-ImplicitCastExpr 0x14b02a380 <col:47> 'const char **' <LValueToRValue>
|   |             |       |   | `-DeclRefExpr 0x14b02a0c0 <col:47> 'const char **' lvalue Var 0x14b029978 'upgrd' 'const char **'
|   |             |       |   `-IntegerLiteral 0x14b02a0e0 <col:53> 'int' 0
|   |             |       `-ImplicitCastExpr 0x14b02ae60 <col:57> 'const char *' <NoOp>
|   |             |         `-ImplicitCastExpr 0x14b02ae48 <col:57> 'char *' <ArrayToPointerDecay>
|   |             |           `-StringLiteral 0x14b02a138 <col:57> 'char[4]' lvalue "STR"
|   |             `-CompoundStmt 0x14b02b178 <col:66, line:35:3>
|   |               `-CallExpr 0x14b02b0a0 <line:33:7, col:30> '<dependent type>' contains-errors
|   |                 |-DeclRefExpr 0x14b02aff8 <col:7> 'int ()' Function 0x14b02af40 'syslog' 'int ()'
|   |                 |-RecoveryExpr 0x14b02b080 <col:14> '<dependent type>' contains-errors lvalue
|   |                 `-StringLiteral 0x14b02b030 <col:25> 'char[4]' lvalue "STR"
|   `-IfStmt 0x14b02b850 <line:42:5, line:50:5> has_else
|     |-RecoveryExpr 0x14b02b388 <line:42:9, col:10> '_Bool' contains-errors
|     |-NullStmt 0x14b02b848 <col:25>
|     `-IfStmt 0x14b02b818 <line:43:10, line:50:5> has_else
|       |-RecoveryExpr 0x14b02b4f8 <line:43:14, col:32> '_Bool' contains-errors
|       |-CompoundStmt 0x14b02b5c0 <col:44, line:46:5>
|       `-IfStmt 0x14b02b7f8 <line:47:10, line:50:5>
|         |-RecoveryExpr 0x14b02b720 <line:47:14, col:69> '_Bool' contains-errors
|         `-CompoundStmt 0x14b02b7e8 <col:72, line:50:5>
|-FunctionDecl 0x14b026e50 <line:14:8> col:8 implicit used strcasecmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x14b026f50 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x14b026fb8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x14b026ef8 <<invalid sloc>> Implicit 957
|-FunctionDecl 0x14b029b78 <line:32:8> col:8 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x14b029c78 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x14b029ce0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x14b029d48 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x14b029c20 <<invalid sloc>> Implicit 888
`-FunctionDecl 0x14b029ec0 <col:39> col:39 implicit used strcspn 'unsigned long (const char *, const char *)' extern
  |-ParmVarDecl 0x14b029fc0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x14b02a028 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x14b029f68 <<invalid sloc>> Implicit 894
