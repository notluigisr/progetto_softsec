TranslationUnitDecl 0x140832c08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x140833ab8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1408331d0 '__int128'
|-TypedefDecl 0x140833b28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1408331f0 'unsigned __int128'
|-TypedefDecl 0x14001b230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14001b000 'struct __NSConstantString_tag'
|   `-Record 0x140833b80 '__NSConstantString_tag'
|-TypedefDecl 0x14001b298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x140833390 '__SVInt8_t'
|-TypedefDecl 0x14001b300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1408333b0 '__SVInt16_t'
|-TypedefDecl 0x14001b368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1408333d0 '__SVInt32_t'
|-TypedefDecl 0x14001b3d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1408333f0 '__SVInt64_t'
|-TypedefDecl 0x14001b438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x140833410 '__SVUint8_t'
|-TypedefDecl 0x14001b4a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x140833430 '__SVUint16_t'
|-TypedefDecl 0x14001b508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x140833450 '__SVUint32_t'
|-TypedefDecl 0x14001b570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x140833470 '__SVUint64_t'
|-TypedefDecl 0x14001b5d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x140833490 '__SVFloat16_t'
|-TypedefDecl 0x14001b640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1408334b0 '__SVFloat32_t'
|-TypedefDecl 0x14001b6a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1408334d0 '__SVFloat64_t'
|-TypedefDecl 0x14001b710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1408334f0 '__SVBfloat16_t'
|-TypedefDecl 0x14001b778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x140833510 '__clang_svint8x2_t'
|-TypedefDecl 0x14001b7e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x140833530 '__clang_svint16x2_t'
|-TypedefDecl 0x14001b848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x140833550 '__clang_svint32x2_t'
|-TypedefDecl 0x14001b8b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x140833570 '__clang_svint64x2_t'
|-TypedefDecl 0x14001b918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x140833590 '__clang_svuint8x2_t'
|-TypedefDecl 0x14001b980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1408335b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14001b9e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1408335d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14001ba50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1408335f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14001bab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x140833610 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14001bb20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x140833630 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14001bb88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x140833650 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14001bbf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x140833670 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14001bc58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x140833690 '__clang_svint8x3_t'
|-TypedefDecl 0x14001bcc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1408336b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14001bd28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1408336d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14001bd90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1408336f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14001bdf8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x140833710 '__clang_svuint8x3_t'
|-TypedefDecl 0x14001be60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x140833730 '__clang_svuint16x3_t'
|-TypedefDecl 0x14001bec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x140833750 '__clang_svuint32x3_t'
|-TypedefDecl 0x14001bf30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x140833770 '__clang_svuint64x3_t'
|-TypedefDecl 0x14001bf98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x140833790 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14002d000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1408337b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14002d068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1408337d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14002d0d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1408337f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14002d138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x140833810 '__clang_svint8x4_t'
|-TypedefDecl 0x14002d1a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x140833830 '__clang_svint16x4_t'
|-TypedefDecl 0x14002d208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x140833850 '__clang_svint32x4_t'
|-TypedefDecl 0x14002d270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x140833870 '__clang_svint64x4_t'
|-TypedefDecl 0x14002d2d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x140833890 '__clang_svuint8x4_t'
|-TypedefDecl 0x14002d340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1408338b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14002d3a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1408338d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14002d410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1408338f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14002d478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x140833910 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14002d4e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x140833930 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14002d548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x140833950 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14002d5b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x140833970 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14002d618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x140833990 '__SVBool_t'
|-TypedefDecl 0x14002d680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1408339b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14002d6e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1408339d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14002d750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1408339f0 '__SVCount_t'
|-TypedefDecl 0x14002d7f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14002d7b0 'char *'
|   `-BuiltinType 0x140832cb0 'char'
|-TypedefDecl 0x14002d868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14002d7b0 'char *'
|   `-BuiltinType 0x140832cb0 'char'
|-FunctionDecl 0x14002da58 <dataset_diviso_filec/func10644_nonvuln.c:1:1, line:50:1> line:1:12 invalid tls_check_stored_hostname 'int (const int *, const char *)' static
| |-ParmVarDecl 0x14002d8f0 <col:39, col:61> col:61 invalid cert 'const int *'
| |-ParmVarDecl 0x14002d970 <line:2:39, col:51> col:51 used hostname 'const char *'
| `-CompoundStmt 0x14004c418 <line:3:1, line:50:1>
|   |-DeclStmt 0x14002dc18 <line:4:3, col:15>
|   | `-VarDecl 0x14002dbb0 <col:3, col:14> col:8 used buf 'char[80]'
|   |-DeclStmt 0x14002dd00 <line:6:3, col:23>
|   | `-VarDecl 0x14002dc60 <col:3, col:19> col:9 used linestr 'char *' cinit
|   |   `-RecoveryExpr 0x14002dce0 <col:19> '<dependent type>' contains-errors lvalue
|   |-UnaryExprOrTypeTraitExpr 0x14002dd70 <line:7:3, col:10> 'unsigned long' contains-errors sizeof
|   | `-RecoveryExpr 0x14002dd50 <col:10> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x14002de30 <line:8:3, col:18>
|   | `-VarDecl 0x14002dda8 <col:3, col:17> col:7 used linenum 'int' cinit
|   |   `-IntegerLiteral 0x14002de10 <col:17> 'int' 0
|   |-IfStmt 0x14004c3c8 <line:13:3, line:46:3>
|   | |-RecoveryExpr 0x14004a8b0 <line:13:7, col:39> '_Bool' contains-errors
|   | `-CompoundStmt 0x14004c398 <line:14:3, line:46:3>
|   |   |-IfStmt 0x14004ad68 <line:15:5, line:20:5>
|   |   | |-BinaryOperator 0x14004ab40 <line:15:9, line:16:31> 'int' contains-errors '!='
|   |   | | |-CallExpr 0x14004ab08 <line:15:9, line:16:26> '<dependent type>' contains-errors
|   |   | | | |-DeclRefExpr 0x14004a9b0 <line:15:9> 'int ()' Function 0x14004a8f8 'REGCOMP' 'int ()'
|   |   | | | |-UnaryOperator 0x14004aad0 <col:17, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | | | | `-RecoveryExpr 0x14004aab0 <col:18> '<dependent type>' contains-errors lvalue
|   |   | | | |-StringLiteral 0x14004aa00 <col:24> 'char[4]' lvalue "STR"
|   |   | | | `-RecoveryExpr 0x14004aae8 <line:16:17> '<dependent type>' contains-errors lvalue
|   |   | | `-IntegerLiteral 0x14004aa70 <col:31> 'int' 0
|   |   | `-CompoundStmt 0x14004ad48 <line:17:5, line:20:5>
|   |   |   |-CallExpr 0x14004acf0 <line:18:7, col:23> '<dependent type>' contains-errors
|   |   |   | |-DeclRefExpr 0x14004ac40 <col:7> 'int ()' Function 0x14004ab88 'safe_fclose' 'int ()'
|   |   |   | `-UnaryOperator 0x14004acd8 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |   |   `-RecoveryExpr 0x14004acb8 <col:21> '<dependent type>' contains-errors lvalue
|   |   |   `-ReturnStmt 0x14004ad38 <line:19:7, col:14>
|   |   |     `-IntegerLiteral 0x14004ad18 <col:14> 'int' 0
|   |   |-BinaryOperator 0x14004ae30 <line:22:5, col:14> 'char' '='
|   |   | |-ArraySubscriptExpr 0x14004ade0 <col:5, col:10> 'char' lvalue
|   |   | | |-ImplicitCastExpr 0x14004adc8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   | | | `-DeclRefExpr 0x14004ad88 <col:5> 'char[80]' lvalue Var 0x14002dbb0 'buf' 'char[80]'
|   |   | | `-IntegerLiteral 0x14004ada8 <col:9> 'int' 0
|   |   | `-ImplicitCastExpr 0x14004ae18 <col:14> 'char' <IntegralCast>
|   |   |   `-CharacterLiteral 0x14004ae00 <col:14> 'int' 0
|   |   |-CallExpr 0x14004b068 <line:23:5, col:61> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x14004af30 <col:5> 'int ()' Function 0x14004ae78 'tls_fingerprint' 'int ()'
|   |   | |-RecoveryExpr 0x14004b048 <col:22> '<dependent type>' contains-errors lvalue
|   |   | |-DeclRefExpr 0x14004af68 <col:38> 'char[80]' lvalue Var 0x14002dbb0 'buf' 'char[80]'
|   |   | |-UnaryExprOrTypeTraitExpr 0x14004afc8 <col:43, col:54> 'unsigned long' sizeof
|   |   | | `-ParenExpr 0x14004afa8 <col:50, col:54> 'char[80]' lvalue
|   |   | |   `-DeclRefExpr 0x14004af88 <col:51> 'char[80]' lvalue Var 0x14002dbb0 'buf' 'char[80]' non_odr_use_unevaluated
|   |   | `-RecoveryExpr 0x14004afe8 <col:57> '<dependent type>' contains-errors lvalue
|   |   `-WhileStmt 0x14004c338 <line:24:5, line:42:5>
|   |     |-RecoveryExpr 0x14004b320 <line:24:12, col:82> '_Bool' contains-errors
|   |     `-CompoundStmt 0x14004c320 <line:25:5, line:42:5>
|   |       `-IfStmt 0x14004c300 <line:26:7, line:41:7>
|   |         |-BinaryOperator 0x14004b500 <line:26:11, col:46> 'int' contains-errors '&&'
|   |         | |-BinaryOperator 0x14004b400 <col:11, col:25> 'int' contains-errors '=='
|   |         | | |-ImplicitCastExpr 0x14004b3e8 <col:11, col:20> 'int' contains-errors <IntegralCast>
|   |         | | | `-ImplicitCastExpr 0x14004b3d0 <col:11, col:20> 'char' contains-errors <LValueToRValue>
|   |         | | |   `-ArraySubscriptExpr 0x14004b398 <col:11, col:20> 'char' contains-errors lvalue
|   |         | | |     |-ImplicitCastExpr 0x14004b380 <col:11> 'char *' contains-errors <LValueToRValue>
|   |         | | |     | `-DeclRefExpr 0x14004b340 <col:11> 'char *' contains-errors lvalue Var 0x14002dc60 'linestr' 'char *'
|   |         | | |     `-IntegerLiteral 0x14004b360 <col:19> 'int' 0
|   |         | | `-CharacterLiteral 0x14004b3b8 <col:25> 'int' 35
|   |         | `-BinaryOperator 0x14004b4e0 <col:32, col:46> 'int' contains-errors '=='
|   |         |   |-ImplicitCastExpr 0x14004b4c8 <col:32, col:41> 'int' contains-errors <IntegralCast>
|   |         |   | `-ImplicitCastExpr 0x14004b4b0 <col:32, col:41> 'char' contains-errors <LValueToRValue>
|   |         |   |   `-ArraySubscriptExpr 0x14004b478 <col:32, col:41> 'char' contains-errors lvalue
|   |         |   |     |-ImplicitCastExpr 0x14004b460 <col:32> 'char *' contains-errors <LValueToRValue>
|   |         |   |     | `-DeclRefExpr 0x14004b420 <col:32> 'char *' contains-errors lvalue Var 0x14002dc60 'linestr' 'char *'
|   |         |   |     `-IntegerLiteral 0x14004b440 <col:40> 'int' 1
|   |         |   `-CharacterLiteral 0x14004b498 <col:46> 'int' 72
|   |         `-CompoundStmt 0x14004c2e8 <line:27:7, line:41:7>
|   |           `-IfStmt 0x14004c2c8 <line:28:9, line:40:9>
|   |             |-RecoveryExpr 0x14004b6a0 <line:28:13, col:54> '_Bool' contains-errors
|   |             `-CompoundStmt 0x14004c2b0 <line:29:9, line:40:9>
|   |               `-IfStmt 0x14004c290 <line:32:11, line:39:11>
|   |                 |-RecoveryExpr 0x14004bf20 <line:32:15, line:33:57> '_Bool' contains-errors
|   |                 `-CompoundStmt 0x14004c270 <line:34:11, line:39:11>
|   |                   |-CallExpr 0x14004c1f8 <line:36:13, col:26> 'int' contains-errors
|   |                   | |-ImplicitCastExpr 0x14004c1e0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |                   | | `-DeclRefExpr 0x14004c120 <col:13> 'int ()' Function 0x14004c068 'FREE' 'int ()'
|   |                   | `-UnaryOperator 0x14004c190 <col:18, col:19> 'char **' contains-errors prefix '&' cannot overflow
|   |                   |   `-DeclRefExpr 0x14004c140 <col:19> 'char *' contains-errors lvalue Var 0x14002dc60 'linestr' 'char *'
|   |                   `-ReturnStmt 0x14004c260 <line:38:13, col:20>
|   |                     `-IntegerLiteral 0x14004c240 <col:20> 'int' 1
|   `-ReturnStmt 0x14004c408 <line:49:3, col:10>
|     `-IntegerLiteral 0x14004c3e8 <col:10> 'int' 0
`-FunctionDecl 0x14004bc00 <line:32:15> col:15 implicit used strcmp 'int (const char *, const char *)' extern
  |-ParmVarDecl 0x14004bd00 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x14004bd68 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x14004bca8 <<invalid sloc>> Implicit 887
