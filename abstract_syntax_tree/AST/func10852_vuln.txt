TranslationUnitDecl 0x13a055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13a0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13a055bd0 '__int128'
|-TypedefDecl 0x13a056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13a055bf0 'unsigned __int128'
|-TypedefDecl 0x13a126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13a126000 'struct __NSConstantString_tag'
|   `-Record 0x13a056580 '__NSConstantString_tag'
|-TypedefDecl 0x13a126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13a055d90 '__SVInt8_t'
|-TypedefDecl 0x13a126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13a055db0 '__SVInt16_t'
|-TypedefDecl 0x13a126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13a055dd0 '__SVInt32_t'
|-TypedefDecl 0x13a1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13a055df0 '__SVInt64_t'
|-TypedefDecl 0x13a126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13a055e10 '__SVUint8_t'
|-TypedefDecl 0x13a1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13a055e30 '__SVUint16_t'
|-TypedefDecl 0x13a126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13a055e50 '__SVUint32_t'
|-TypedefDecl 0x13a126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13a055e70 '__SVUint64_t'
|-TypedefDecl 0x13a1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13a055e90 '__SVFloat16_t'
|-TypedefDecl 0x13a126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13a055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13a1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13a055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13a126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13a055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13a126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13a055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13a1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13a055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13a126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13a055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13a1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13a055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13a126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13a055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13a126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13a055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13a1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13a055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13a126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13a055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13a126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13a056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13a126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13a056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13a126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13a056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13a126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13a056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13a126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13a056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13a126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13a0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13a126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13a0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13a126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13a0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13a126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13a056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13a126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13a056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13a126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13a056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13a126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13a056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13a126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13a056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13a127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13a0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13a127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13a0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13a1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13a0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13a127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13a056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13a1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13a056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13a127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13a056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13a127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13a056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13a127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13a056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13a127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13a0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13a127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13a0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13a127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13a0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13a127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13a056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13a127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13a056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13a127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13a056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13a127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13a056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13a127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13a056390 '__SVBool_t'
|-TypedefDecl 0x13a127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13a0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13a127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13a0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13a127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13a0563f0 '__SVCount_t'
|-TypedefDecl 0x13a127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13a127fb0 'char *'
|   `-BuiltinType 0x13a0556b0 'char'
|-TypedefDecl 0x13a128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13a127fb0 'char *'
|   `-BuiltinType 0x13a0556b0 'char'
`-FunctionDecl 0x13a128750 <dataset_diviso_filec/func10852_vuln.c:1:1, line:20:1> line:1:13 prune_one 'void (struct audit_tree *)' static
  |-ParmVarDecl 0x13a128648 <col:23, col:42> col:42 used victim 'struct audit_tree *'
  `-CompoundStmt 0x13b808ec8 <line:2:1, line:20:1>
    |-CallExpr 0x13a140c20 <line:3:2, col:22> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13a140b70 <col:2> 'int ()' Function 0x13a140ab8 'spin_lock' 'int ()'
    | `-UnaryOperator 0x13a140c08 <col:12, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x13a140be8 <col:13> '<dependent type>' contains-errors lvalue
    |-WhileStmt 0x13b808c58 <line:4:2, line:17:2>
    | |-UnaryOperator 0x13a140de8 <line:4:9, col:36> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x13a140dc0 <col:10, col:36> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x13a140d28 <col:10> 'int ()' Function 0x13a140c70 'list_empty' 'int ()'
    | |   `-UnaryOperator 0x13a140da8 <col:21, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |     `-RecoveryExpr 0x13a140d80 <col:22, col:30> '<dependent type>' contains-errors lvalue
    | |       `-DeclRefExpr 0x13a140d48 <col:22> 'struct audit_tree *' lvalue ParmVar 0x13a128648 'victim' 'struct audit_tree *'
    | `-CompoundStmt 0x13b808c08 <col:39, line:17:2>
    |   |-DeclStmt 0x13a140fe8 <line:5:3, col:17>
    |   | |-RecordDecl 0x13a140e00 <col:3, col:10> col:10 struct node
    |   | `-VarDecl 0x13a140f68 <col:3, col:16> col:16 used p 'struct node *'
    |   |-DeclStmt 0x13a1411e8 <line:6:3, col:28>
    |   | |-RecordDecl 0x13a141000 <col:3, col:10> col:10 struct audit_chunk
    |   | `-VarDecl 0x13a141168 <col:3, col:23> col:23 used chunk 'struct audit_chunk *'
    |   |-BinaryOperator 0x13a1415c0 <line:9:3, col:23> 'struct audit_chunk *' '='
    |   | |-DeclRefExpr 0x13a1413e0 <col:3> 'struct audit_chunk *' lvalue Var 0x13a141168 'chunk' 'struct audit_chunk *'
    |   | `-ImplicitCastExpr 0x13a1415a8 <col:11, col:23> 'struct audit_chunk *' <IntegralToPointer>
    |   |   `-CallExpr 0x13a141568 <col:11, col:23> 'int'
    |   |     |-ImplicitCastExpr 0x13a141550 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x13a1414e0 <col:11> 'int ()' Function 0x13a141428 'find_chunk' 'int ()'
    |   |     `-ImplicitCastExpr 0x13a141590 <col:22> 'struct node *' <LValueToRValue>
    |   |       `-DeclRefExpr 0x13a141500 <col:22> 'struct node *' lvalue Var 0x13a140f68 'p' 'struct node *'
    |   |-CallExpr 0x13a141758 <line:10:3, col:34> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x13a1416c0 <col:3> 'int ()' Function 0x13a141608 'get_inotify_watch' 'int ()'
    |   | `-UnaryOperator 0x13a141740 <col:21, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-RecoveryExpr 0x13a141718 <col:22, col:29> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x13a1416e0 <col:22> 'struct audit_chunk *' lvalue Var 0x13a141168 'chunk' 'struct audit_chunk *'
    |   |-CallExpr 0x13a141910 <line:11:3, col:25> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x13a141860 <col:3> 'int ()' Function 0x13a1417a8 'spin_unlock' 'int ()'
    |   | `-UnaryOperator 0x13a1418f8 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-RecoveryExpr 0x13a1418d8 <col:16> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x13b808930 <line:13:3, col:23> 'int'
    |   | |-ImplicitCastExpr 0x13b808918 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x13b8088b8 <col:3> 'int ()' Function 0x13b808800 'untag_chunk' 'int ()'
    |   | |-ImplicitCastExpr 0x13b808960 <col:15> 'struct audit_chunk *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x13b8088d8 <col:15> 'struct audit_chunk *' lvalue Var 0x13a141168 'chunk' 'struct audit_chunk *'
    |   | `-ImplicitCastExpr 0x13b808978 <col:22> 'struct node *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x13b8088f8 <col:22> 'struct node *' lvalue Var 0x13a140f68 'p' 'struct node *'
    |   |-CallExpr 0x13b808b08 <line:15:3, col:34> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x13b808a70 <col:3> 'int ()' Function 0x13b8089b8 'put_inotify_watch' 'int ()'
    |   | `-UnaryOperator 0x13b808af0 <col:21, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-RecoveryExpr 0x13b808ac8 <col:22, col:29> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x13b808a90 <col:22> 'struct audit_chunk *' lvalue Var 0x13a141168 'chunk' 'struct audit_chunk *'
    |   `-CallExpr 0x13b808be0 <line:16:3, col:23> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x13b808b30 <col:3> 'int ()' Function 0x13a140ab8 'spin_lock' 'int ()'
    |     `-UnaryOperator 0x13b808bc8 <col:13, col:14> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       `-RecoveryExpr 0x13b808ba8 <col:14> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x13b808d28 <line:18:2, col:24> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13b808c78 <col:2> 'int ()' Function 0x13a1417a8 'spin_unlock' 'int ()'
    | `-UnaryOperator 0x13b808d10 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x13b808cf0 <col:15> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x13b808e88 <line:19:2, col:17> 'int'
      |-ImplicitCastExpr 0x13b808e70 <col:2> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x13b808e30 <col:2> 'int ()' Function 0x13b808d78 'put_tree' 'int ()'
      `-ImplicitCastExpr 0x13b808eb0 <col:11> 'struct audit_tree *' <LValueToRValue>
        `-DeclRefExpr 0x13b808e50 <col:11> 'struct audit_tree *' lvalue ParmVar 0x13a128648 'victim' 'struct audit_tree *'
