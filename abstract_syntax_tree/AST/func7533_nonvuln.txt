TranslationUnitDecl 0x151055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1510564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x151055bd0 '__int128'
|-TypedefDecl 0x151056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x151055bf0 'unsigned __int128'
|-TypedefDecl 0x151126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x151126000 'struct __NSConstantString_tag'
|   `-Record 0x151056580 '__NSConstantString_tag'
|-TypedefDecl 0x151126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x151055d90 '__SVInt8_t'
|-TypedefDecl 0x151126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x151055db0 '__SVInt16_t'
|-TypedefDecl 0x151126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x151055dd0 '__SVInt32_t'
|-TypedefDecl 0x1511263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x151055df0 '__SVInt64_t'
|-TypedefDecl 0x151126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x151055e10 '__SVUint8_t'
|-TypedefDecl 0x1511264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x151055e30 '__SVUint16_t'
|-TypedefDecl 0x151126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x151055e50 '__SVUint32_t'
|-TypedefDecl 0x151126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x151055e70 '__SVUint64_t'
|-TypedefDecl 0x1511265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x151055e90 '__SVFloat16_t'
|-TypedefDecl 0x151126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x151055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1511266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x151055ed0 '__SVFloat64_t'
|-TypedefDecl 0x151126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x151055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x151126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x151055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1511267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x151055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x151126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x151055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1511268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x151055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x151126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x151055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x151126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x151055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1511269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x151055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x151126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x151055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x151126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x151056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x151126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x151056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x151126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x151056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x151126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x151056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x151126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x151056090 '__clang_svint8x3_t'
|-TypedefDecl 0x151126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1510560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x151126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1510560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x151126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1510560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x151126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x151056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x151126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x151056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x151126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x151056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x151126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x151056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x151126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x151056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x151127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1510561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x151127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1510561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1511278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1510561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x151127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x151056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1511279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x151056230 '__clang_svint16x4_t'
|-TypedefDecl 0x151127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x151056250 '__clang_svint32x4_t'
|-TypedefDecl 0x151127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x151056270 '__clang_svint64x4_t'
|-TypedefDecl 0x151127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x151056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x151127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1510562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x151127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1510562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x151127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1510562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x151127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x151056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x151127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x151056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x151127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x151056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x151127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x151056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x151127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x151056390 '__SVBool_t'
|-TypedefDecl 0x151127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1510563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x151127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1510563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x151127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1510563f0 '__SVCount_t'
|-TypedefDecl 0x151127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x151127fb0 'char *'
|   `-BuiltinType 0x1510556b0 'char'
|-TypedefDecl 0x151128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x151127fb0 'char *'
|   `-BuiltinType 0x1510556b0 'char'
`-FunctionDecl 0x151140bf8 <dataset_diviso_filec/func7533_nonvuln.c:1:1, line:57:1> line:1:1 arch_get_unmapped_area_topdown 'int (struct file *, const unsigned long, const unsigned long, const unsigned long, const unsigned long)'
  |-ParmVarDecl 0x151128648 <col:32, col:45> col:45 used filp 'struct file *'
  |-ParmVarDecl 0x1511286c8 <col:51, col:71> col:71 used addr0 'const unsigned long'
  |-ParmVarDecl 0x151128748 <line:2:6, col:26> col:26 used len 'const unsigned long'
  |-ParmVarDecl 0x151140a00 <col:31, col:51> col:51 used pgoff 'const unsigned long'
  |-ParmVarDecl 0x151140a80 <line:3:6, col:26> col:26 used flags 'const unsigned long'
  `-CompoundStmt 0x151142518 <line:4:1, line:57:1>
    |-DeclStmt 0x151140ef8 <line:5:2, col:28>
    | |-RecordDecl 0x151140d10 <col:2, col:9> col:9 struct vm_area_struct
    | `-VarDecl 0x151140e78 <col:2, col:25> col:25 used vma 'struct vm_area_struct *'
    |-DeclStmt 0x1511411d8 <line:6:2, col:36>
    | |-RecordDecl 0x151140f10 <col:2, col:9> col:9 struct mm_struct
    | `-VarDecl 0x151141078 <col:2, col:34> col:20 used mm 'struct mm_struct *' cinit
    |   `-CXXDependentScopeMemberExpr 0x151141178 <col:25, col:34> '<dependent type>' contains-errors lvalue ->mm
    |     `-RecoveryExpr 0x151141158 <col:25> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x1511412a8 <line:7:2, col:28>
    | `-VarDecl 0x151141208 <col:2, col:23> col:16 used addr 'unsigned long' cinit
    |   `-ImplicitCastExpr 0x151141290 <col:23> 'unsigned long' <LValueToRValue>
    |     `-DeclRefExpr 0x151141270 <col:23> 'const unsigned long' lvalue ParmVar 0x1511286c8 'addr0' 'const unsigned long'
    |-DeclStmt 0x151141340 <line:8:2, col:21>
    | `-VarDecl 0x1511412d8 <col:2, col:6> col:6 used do_colour_align 'int'
    |-DeclStmt 0x1511414d8 <line:9:2, col:35>
    | |-RecordDecl 0x151141358 <col:2, col:9> col:9 struct vm_unmapped_area_info
    | `-VarDecl 0x151141458 <col:2, col:31> col:31 referenced invalid info 'struct vm_unmapped_area_info'
    |-IfStmt 0x1511417d8 <line:11:2, line:17:2>
    | |-BinaryOperator 0x151141568 <line:11:6, col:14> '<dependent type>' contains-errors '&'
    | | |-DeclRefExpr 0x1511414f0 <col:6> 'const unsigned long' lvalue ParmVar 0x151140a80 'flags' 'const unsigned long'
    | | `-RecoveryExpr 0x151141548 <col:14> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1511417b8 <col:25, line:17:2>
    |   |-IfStmt 0x151141738 <line:13:3, line:15:12>
    |   | |-RecoveryExpr 0x151141670 <line:13:7, line:14:55> '_Bool' contains-errors
    |   | `-ReturnStmt 0x151141728 <line:15:4, col:12>
    |   |   `-UnaryOperator 0x151141710 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |     `-ImplicitCastExpr 0x1511416f8 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   |       `-RecoveryExpr 0x1511416d8 <col:12> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x1511417a8 <line:16:3, col:10>
    |     `-ImplicitCastExpr 0x151141790 <col:10> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x151141778 <col:10> 'unsigned long' <LValueToRValue>
    |         `-DeclRefExpr 0x151141758 <col:10> 'unsigned long' lvalue Var 0x151141208 'addr' 'unsigned long'
    |-IfStmt 0x151809cd0 <line:19:2, line:20:11>
    | |-CallExpr 0x151809c00 <line:19:6, col:30> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x151141910 <col:6> 'int ()' Function 0x151141858 'unlikely' 'int ()'
    | | `-BinaryOperator 0x1511419d0 <col:15, col:21> 'int' contains-errors '>'
    | |   |-DeclRefExpr 0x151141930 <col:15> 'const unsigned long' lvalue ParmVar 0x151128748 'len' 'const unsigned long'
    | |   `-RecoveryExpr 0x1511419b0 <col:21> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x151809cc0 <line:20:3, col:11>
    |   `-UnaryOperator 0x151809ca8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x151809c90 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x151809c70 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x151809d30 <line:22:2, col:20> 'int' '='
    | |-DeclRefExpr 0x151809cf0 <col:2> 'int' lvalue Var 0x1511412d8 'do_colour_align' 'int'
    | `-IntegerLiteral 0x151809d10 <col:20> 'int' 0
    |-IfStmt 0x151809e48 <line:23:2, line:24:21>
    | |-RecoveryExpr 0x151809dc8 <line:23:6, col:33> '_Bool' contains-errors
    | `-BinaryOperator 0x151809e28 <line:24:3, col:21> 'int' '='
    |   |-DeclRefExpr 0x151809de8 <col:3> 'int' lvalue Var 0x1511412d8 'do_colour_align' 'int'
    |   `-IntegerLiteral 0x151809e08 <col:21> 'int' 1
    |-IfStmt 0x15180ab30 <line:27:2, line:37:2>
    | |-ImplicitCastExpr 0x151809e88 <line:27:6> 'unsigned long' <LValueToRValue>
    | | `-DeclRefExpr 0x151809e68 <col:6> 'unsigned long' lvalue Var 0x151141208 'addr' 'unsigned long'
    | `-CompoundStmt 0x15180ab08 <col:12, line:37:2>
    |   |-IfStmt 0x15180a2f0 <line:28:3, line:31:26> has_else
    |   | |-ImplicitCastExpr 0x151809ec0 <line:28:7> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x151809ea0 <col:7> 'int' lvalue Var 0x1511412d8 'do_colour_align' 'int'
    |   | |-BinaryOperator 0x15180a100 <line:29:4, col:35> 'unsigned long' '='
    |   | | |-DeclRefExpr 0x151809ed8 <col:4> 'unsigned long' lvalue Var 0x151141208 'addr' 'unsigned long'
    |   | | `-ImplicitCastExpr 0x15180a0e8 <col:11, col:35> 'unsigned long' <IntegralCast>
    |   | |   `-CallExpr 0x15180a088 <col:11, col:35> 'int'
    |   | |     |-ImplicitCastExpr 0x15180a070 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |   | |     | `-DeclRefExpr 0x151809fd8 <col:11> 'int ()' Function 0x151809f20 'COLOUR_ALIGN' 'int ()'
    |   | |     |-ImplicitCastExpr 0x15180a0b8 <col:24> 'unsigned long' <LValueToRValue>
    |   | |     | `-DeclRefExpr 0x151809ff8 <col:24> 'unsigned long' lvalue Var 0x151141208 'addr' 'unsigned long'
    |   | |     `-ImplicitCastExpr 0x15180a0d0 <col:30> 'unsigned long' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x15180a018 <col:30> 'const unsigned long' lvalue ParmVar 0x151140a00 'pgoff' 'const unsigned long'
    |   | `-BinaryOperator 0x15180a2d0 <line:31:4, col:26> 'unsigned long' '='
    |   |   |-DeclRefExpr 0x15180a120 <col:4> 'unsigned long' lvalue Var 0x151141208 'addr' 'unsigned long'
    |   |   `-ImplicitCastExpr 0x15180a2b8 <col:11, col:26> 'unsigned long' <IntegralCast>
    |   |     `-CallExpr 0x15180a278 <col:11, col:26> 'int'
    |   |       |-ImplicitCastExpr 0x15180a260 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |   |       | `-DeclRefExpr 0x15180a220 <col:11> 'int ()' Function 0x15180a168 'PAGE_ALIGN' 'int ()'
    |   |       `-ImplicitCastExpr 0x15180a2a0 <col:22> 'unsigned long' <LValueToRValue>
    |   |         `-DeclRefExpr 0x15180a240 <col:22> 'unsigned long' lvalue Var 0x151141208 'addr' 'unsigned long'
    |   |-BinaryOperator 0x15180a510 <line:33:3, col:26> 'struct vm_area_struct *' contains-errors '='
    |   | |-DeclRefExpr 0x15180a320 <col:3> 'struct vm_area_struct *' lvalue Var 0x151140e78 'vma' 'struct vm_area_struct *'
    |   | `-ImplicitCastExpr 0x15180a4f8 <col:9, col:26> 'struct vm_area_struct *' contains-errors <IntegralToPointer>
    |   |   `-CallExpr 0x15180a498 <col:9, col:26> 'int' contains-errors
    |   |     |-ImplicitCastExpr 0x15180a480 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x15180a420 <col:9> 'int ()' Function 0x15180a368 'find_vma' 'int ()'
    |   |     |-ImplicitCastExpr 0x15180a4c8 <col:18> 'struct mm_struct *' contains-errors <LValueToRValue>
    |   |     | `-DeclRefExpr 0x15180a440 <col:18> 'struct mm_struct *' contains-errors lvalue Var 0x151141078 'mm' 'struct mm_struct *'
    |   |     `-ImplicitCastExpr 0x15180a4e0 <col:22> 'unsigned long' <LValueToRValue>
    |   |       `-DeclRefExpr 0x15180a460 <col:22> 'unsigned long' lvalue Var 0x151141208 'addr' 'unsigned long'
    |   `-IfStmt 0x15180aae8 <line:34:3, line:36:11>
    |     |-BinaryOperator 0x15180aa68 <line:34:7, line:35:47> 'int' contains-errors '&&'
    |     | |-BinaryOperator 0x15180a8f8 <line:34:7, col:26> 'int' contains-errors '>='
    |     | | |-BinaryOperator 0x15180a8d8 <col:7, col:19> '<dependent type>' contains-errors '-'
    |     | | | |-RecoveryExpr 0x15180a8b8 <col:7> '<dependent type>' contains-errors lvalue
    |     | | | `-DeclRefExpr 0x15180a548 <col:19> 'const unsigned long' lvalue ParmVar 0x151128748 'len' 'const unsigned long'
    |     | | `-DeclRefExpr 0x15180a588 <col:26> 'unsigned long' lvalue Var 0x151141208 'addr' 'unsigned long'
    |     | `-ParenExpr 0x15180aa48 <line:35:7, col:47> 'int'
    |     |   `-BinaryOperator 0x15180aa28 <col:8, col:46> 'int' '||'
    |     |     |-UnaryOperator 0x15180a930 <col:8, col:9> 'int' prefix '!' cannot overflow
    |     |     | `-ImplicitCastExpr 0x15180a918 <col:9> 'struct vm_area_struct *' <LValueToRValue>
    |     |     |   `-DeclRefExpr 0x15180a5c8 <col:9> 'struct vm_area_struct *' lvalue Var 0x151140e78 'vma' 'struct vm_area_struct *'
    |     |     `-BinaryOperator 0x15180aa08 <col:16, col:46> 'int' '<='
    |     |       |-BinaryOperator 0x15180a978 <col:16, col:23> 'unsigned long' '+'
    |     |       | |-ImplicitCastExpr 0x15180a948 <col:16> 'unsigned long' <LValueToRValue>
    |     |       | | `-DeclRefExpr 0x15180a618 <col:16> 'unsigned long' lvalue Var 0x151141208 'addr' 'unsigned long'
    |     |       | `-ImplicitCastExpr 0x15180a960 <col:23> 'unsigned long' <LValueToRValue>
    |     |       |   `-DeclRefExpr 0x15180a638 <col:23> 'const unsigned long' lvalue ParmVar 0x151128748 'len' 'const unsigned long'
    |     |       `-ImplicitCastExpr 0x15180a9f0 <col:30, col:46> 'unsigned long' <IntegralCast>
    |     |         `-CallExpr 0x15180a9b0 <col:30, col:46> 'int'
    |     |           |-ImplicitCastExpr 0x15180a998 <col:30> 'int (*)()' <FunctionToPointerDecay>
    |     |           | `-DeclRefExpr 0x15180a788 <col:30> 'int ()' Function 0x15180a6d0 'vm_start_gap' 'int ()'
    |     |           `-ImplicitCastExpr 0x15180a9d8 <col:43> 'struct vm_area_struct *' <LValueToRValue>
    |     |             `-DeclRefExpr 0x15180a7a8 <col:43> 'struct vm_area_struct *' lvalue Var 0x151140e78 'vma' 'struct vm_area_struct *'
    |     `-ReturnStmt 0x15180aad8 <line:36:4, col:11>
    |       `-ImplicitCastExpr 0x15180aac0 <col:11> 'int' <IntegralCast>
    |         `-ImplicitCastExpr 0x15180aaa8 <col:11> 'unsigned long' <LValueToRValue>
    |           `-DeclRefExpr 0x15180aa88 <col:11> 'unsigned long' lvalue Var 0x151141208 'addr' 'unsigned long'
    |-BinaryOperator 0x151141a40 <line:39:2, col:15> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x15180ab98 <col:2, col:7> '<dependent type>' contains-errors lvalue .flags
    | | `-RecoveryExpr 0x15180ab70 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x15180ab50 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x151141458 'info' 'struct vm_unmapped_area_info'
    | `-RecoveryExpr 0x151141a20 <col:15> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x151141b10 <line:40:2, col:16> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x151141aa8 <col:2, col:7> '<dependent type>' contains-errors lvalue .length
    | | `-RecoveryExpr 0x151141a80 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x151141a60 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x151141458 'info' 'struct vm_unmapped_area_info'
    | `-DeclRefExpr 0x151141af0 <col:16> 'const unsigned long' lvalue ParmVar 0x151128748 'len' 'const unsigned long'
    |-BinaryOperator 0x151141c18 <line:41:2, col:19> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x151141b78 <col:2, col:7> '<dependent type>' contains-errors lvalue .low_limit
    | | `-RecoveryExpr 0x151141b50 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x151141b30 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x151141458 'info' 'struct vm_unmapped_area_info'
    | `-RecoveryExpr 0x151141bf8 <col:19> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x151141d28 <line:42:2, col:24> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x151141c80 <col:2, col:7> '<dependent type>' contains-errors lvalue .high_limit
    | | `-RecoveryExpr 0x151141c58 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x151141c38 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x151141458 'info' 'struct vm_unmapped_area_info'
    | `-RecoveryExpr 0x151141d00 <col:20, col:24> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x151141cc8 <col:20> 'struct mm_struct *' contains-errors lvalue Var 0x151141078 'mm' 'struct mm_struct *'
    |-BinaryOperator 0x151142048 <line:45:2, col:31> 'unsigned long' contains-errors '='
    | |-DeclRefExpr 0x151141ec8 <col:2> 'unsigned long' lvalue Var 0x151141208 'addr' 'unsigned long'
    | `-CallExpr 0x151142020 <col:9, col:31> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x151141fc8 <col:9> 'int ()' Function 0x151141f10 'vm_unmapped_area' 'int ()'
    |   `-UnaryOperator 0x151142008 <col:26, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x151141fe8 <col:27> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x151142498 <line:48:2, line:54:2>
    | |-RecoveryExpr 0x151142088 <line:48:6, col:14> '_Bool' contains-errors
    | `-CompoundStmt 0x151142478 <col:25, line:54:2>
    |   |-BinaryOperator 0x151142278 <line:50:3, col:16> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x151142210 <col:3, col:8> '<dependent type>' contains-errors lvalue .flags
    |   | | `-RecoveryExpr 0x1511421e8 <col:3> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x1511421c8 <col:3> 'struct vm_unmapped_area_info' lvalue Var 0x151141458 'info' 'struct vm_unmapped_area_info'
    |   | `-IntegerLiteral 0x151142258 <col:16> 'int' 0
    |   `-BinaryOperator 0x151142458 <line:53:3, col:32> 'unsigned long' contains-errors '='
    |     |-DeclRefExpr 0x1511423b8 <col:3> 'unsigned long' lvalue Var 0x151141208 'addr' 'unsigned long'
    |     `-CallExpr 0x151142430 <col:10, col:32> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x1511423d8 <col:10> 'int ()' Function 0x151141f10 'vm_unmapped_area' 'int ()'
    |       `-UnaryOperator 0x151142418 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
    |         `-RecoveryExpr 0x1511423f8 <col:28> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x151142508 <line:56:2, col:9>
      `-ImplicitCastExpr 0x1511424f0 <col:9> 'int' <IntegralCast>
        `-ImplicitCastExpr 0x1511424d8 <col:9> 'unsigned long' <LValueToRValue>
          `-DeclRefExpr 0x1511424b8 <col:9> 'unsigned long' lvalue Var 0x151141208 'addr' 'unsigned long'
